#INCLUDE "OMSA210.ch"
#INCLUDE "Protheus.ch"
#INCLUDE "DBTREE.CH"
#Include "FWMVCDEF.CH"


#DEFINE  aPos   {  2,  2, 110, 306 }

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ OMSA210  ³ Rev.  ³ Henry Fila            ³ Data ³ 19.07.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa de Unitizacao da Carga                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Void OMSA210(void)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Array contendo as Rotinas a executar do programa      ³
//³ ----------- Elementos contidos por dimensao ------------     ³
//³ 1. Nome a aparecer no cabecalho                              ³
//³ 2. Nome da Rotina associada                                  ³
//³ 3. Usado pela rotina                                         ³
//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
//³    2 - Simplesmente Mostra os Campos                         ³
//³    3 - Inclui registros no Bancos de Dados                   ³
//³    4 - Altera o registro corrente                            ³
//³    5 - Remove o registro corrente do Banco de Dados          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


Function OMSA210()
Local oBrowse := Nil

	oBrowse:= FWMBrowse():New()
	oBrowse:SetAlias("DBN")
	oBrowse:SetMenuDef("OMSA210")   // Nome do fonte onde esta a função MenuDef
	oBrowse:SetDescription(STR0001) // Servico x Tarefa
	oBrowse:SetAmbiente(.F.)        // Desabilita opção Ambiente do menu Ações Relacionadas
	oBrowse:SetWalkThru(.F.)        // Desabilita opção WalkThru do menu Ações Relacionadas
	oBrowse:Activate()

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Marco Bianchi         ³ Data ³01/09/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³    1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function MenuDef()
Private aRotina := {}

	ADD OPTION aRotina TITLE STR0002 ACTION "PesqBrw"    OPERATION 1 ACCESS 0 // Pesquisar
	ADD OPTION aRotina TITLE STR0003 ACTION "Da210Assoc" OPERATION 3 ACCESS 0 // Associacao
	ADD OPTION aRotina TITLE STR0004 ACTION "Da210Estor" OPERATION 5 ACCESS 0 // Estorno

If ExistBlock("OM210MNU")
	ExecBlock("OM210MNU",.F.,.F.)
EndIf

Return(aRotina)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Da210AssocºAutor  ³Henry Fila          º Data ³  02/08/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Associa carga a um caminhao calculando volumes, peso e     º±±
±±º          ³ pontos de entrega                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5Dl                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Da210Assoc(cAlias,nReg,nOpcx)
Local oDlg
Local cCaminhao   := Criavar("DA3_COD",.F.)
Local aArrayCarga := {}
Local aArrayCam   := {}
Local oNoMarked   := LoadBitmap( GetResources(), "LBNO" )
Local oMarked     := LoadBitmap( GetResources(), "LBOK" )
Local oEnable     := LoadBitmap( GetResources(), "ENABLE" )
Local oDisable    := LoadBitmap( GetResources(), "DISABLE" )
Local aSize       := MsAdvSize( .T. )
Local aPosObj1    := {}
Local aObjects    := {}
Local aButtons    := { { "PARAMETROS" , { || Pergunte("OMS210",.T.) }, OemtoAnsi(STR0005),OemtoAnsi(STR0048) } } //"Parametros da unitizacao"##"Param."

Local lProcessa   := .T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrego parametros da palletizacao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Pergunte("OMS210",.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monto os arrays a serem apresentados no Listbox³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If !Da210List(aArrayCarga,aArrayCam,oMarked,oNoMarked,oEnable,oDisable)
	Help(" ",1,"OMS210NCG") //Nao existem cargas ou caminhoes disponiveis para o processo
	lProcessa := .F.
	Return
EndIf

If lProcessa
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Resolve as dimensoes dos objetos da parte esquerda da tela          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aObjects := {}
	AAdd( aObjects, { 100, 100, .t., .t., .t. } )
	AAdd( aObjects, { 100, 100, .t., .t., .t. } )

	aInfo    := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3  }
	aPosObj1 := MsObjSize( aInfo, aObjects, ,.T. )


	DEFINE MSDIALOG oDlg FROM aSize[7], 000 TO aSize[6],aSize[5] TITLE OemtoAnsi(STR0007) OF oMainWnd PIXEL //"Unitizacao"

		@ aPosObj1[1,1]+2,aPosObj1[1,2] Say OemtoAnsi(STR0041) Of oDlg PIXEL //"Cargas"
		@ aPosObj1[2,1]+2,aPosObj1[2,2] Say OemtoAnsi(STR0042) Of oDlg PIXEL //"Veiculos"

		@ aPosObj1[1,1]+10,aPosObj1[1,2] LISTBOX oCargas VAR cVar ;
												Fields HEADER " "," ",;
														OemToAnsi(STR0008),; //"Codigo"
														OemToAnsi(STR0050),; //"Sequencia"
														OemtoAnsi(STR0009),; //"Peso"
														OemtoAnsi(STR0010),; //"Volume"
														OemtoAnsi(STR0011),; //"Valor"
														OemtoAnsi(STR0012) ; //"Ptos. Entrega"
														On DblClick Oms210TrCg(1,aArrayCarga,aArrayCam,oMarked,oNoMarked,oEnable,oDisable) ;
														SIZE aPosObj1[1,3],aPosObj1[1,4]-10 OF oDlg PIXEL

		oCargas:nFreeze := 1
		oCargas:SetArray(aArrayCarga)
		oCargas:bLine:={ ||{	aArrayCarga[oCargas:nAT,1],;
								aArrayCarga[oCargas:nAT,2],;
								aArrayCarga[oCargas:nAT,3],;
								aArrayCarga[oCargas:nAT,4],;
								aArrayCarga[oCargas:nAT,5],;
								aArrayCarga[oCargas:nAT,6],;
								aArrayCarga[oCargas:nAT,7],;
								aArrayCarga[oCargas:nAT,8]}}

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Monto ListBox de Caminhoes³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		@ aPosObj1[2,1]+10,aPosObj1[2,2] LISTBOX oCaminhao VAR cVar ;
												Fields HEADER " "," ",;
														OemToAnsi(STR0008),; //Codigo
														OemtoAnsi(STR0013),;  //"Descricao"
														OemtoAnsi(STR0014),; //"Capac. Kg"
														OemtoAnsi(STR0015),; //"Capac. Vol."
														OemtoAnsi(STR0016),; //"Capac. Ptos."
														OemtoAnsi(STR0017) ; //"Motorista"
														On DblClick Oms210TrCg(2,aArrayCarga,aArrayCam,oMarked,oNoMarked,oEnable,oDisable) ;
														SIZE aPosObj1[2,3],aPosObj1[2,4]-10 OF oDlg PIXEL

		oCaminhao:nFreeze := 1
		oCaminhao:SetArray(aArrayCam)
		oCaminhao:bLine:={ ||{	aArrayCam[oCaminhao:nAT,1],;
								aArrayCam[oCaminhao:nAT,2],;
								aArrayCam[oCaminhao:nAT,3],;
								aArrayCam[oCaminhao:nAT,4],;
								aArrayCam[oCaminhao:nAT,5],;
								aArrayCam[oCaminhao:nAT,6],;
								aArrayCam[oCaminhao:nAT,7],;
								aArrayCam[oCaminhao:nAT,8]}}

	ACTIVATE MSDIALOG  oDlg ON INIT EnchoiceBar( oDlg,	{ || Oms210Prep(aArrayCarga,aArrayCam,oMarked,oNoMarked,oEnable,oDisable,oCargas,oCaminhao)},;
														{||oDlg:End()},,aButtons) CENTERED

EndIf

DAK->(RetIndex("DAK"))
DAK->(dbClearFilter())

DAK->(RetIndex("DA3"))
DAK->(dbClearFilter())

dbSelectArea("DAK")

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Oms210TrCgºAutor  ³Henry Fila          º Data ³  02/14/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Troca marca do array de cargas e dos caminhoes              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Oms210TrCg(nOpcao,aArrayCarga,aArrayCam,oMarked,oNoMarked,oEnable,oDisable)
Local nPosCam   := oCaminhao:nAt
Local nPosMark  := 0
Local nTotPeso  := nTotVol:= nTotPto := 0
Local nC        := 0
Local lMarca    := .T.
Local lRestricao:= .F.
Local cCpoCapac := IIf(SuperGetMV("MV_OMSCAPA",.F.,"1")=="1","DA3_CAPACN","DA3_CAPACM")
Local nCapac    := 0

If	nOpcao == 1

	If	aArrayCarga[oCargas:nAt,2] == oEnable

		lMarca := Iif(aArrayCarga[oCargas:nAt,1] == oMarked,.F., .T. )

		oObjMark := Iif(lMarca, oMarked, oNoMarked )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Busco se a carga ja estava associada a um caminhao na³
		//³geracao de carga, e caso esteja marco automaticamente³
		//³o mesmo                                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		DAK->(dbSetOrder(1)) //DAK_FILIAL+DAK_COD+DAK_SEQCAR
		If	DAK->(MsSeek(xFilial("DAK")+aArrayCarga[oCargas:nAt,3]) )

			If !Empty(DAK->DAK_CAMINH)

				nPosCam := Ascan(aArrayCam,{|x| x[3] == DAK->DAK_CAMINH})
				If	nPosCam > 0

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Verifico se ja existe um caminhao associado e se o mesmo eh dife-  ³
					//³rente do da carga associada                                        ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

					nPosMark := Ascan(aArrayCam,{|x| x[1] == oMarked})
					If ( nPosMark > 0 ) .And. ( oObjMark == oMarked ) .And. ;
							aArrayCam[nPosMark][3] <> DAK->DAK_CAMINH
						Help(" ",1,"DLA210EXIST") //Existe outro caminhao associado a esta carga
						oObjMark := oNoMarked
					ElseIf ( nPosMark == 0 ) .And. ( oObjMark == oMarked )
						aArrayCam[nPosCam,1] := oMarked
						oObjMark             := oMarked
					EndIf

				EndIf

			EndIf

		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifico se ja existe algum caminhao marcado³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nPosCam := Ascan(aArrayCam,{|x| x[1] == oMarked})
		If	nPosCam > 0 .And. lMarca

			DA3->(dbSetOrder(1)) //DA3_FILIAL+DA3_COD
			If	DA3->(MsSeek(xFilial("DA3")+aArrayCam[nPosCam,3]) )

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Inicio as variaveis com o peso da carga marcada para acumular³
				//³com as ja selecionadas, caso existam                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nTotPeso := Val(aArrayCarga[oCargas:nAt,5])
				nTotVol  := Val(aArrayCarga[oCargas:nAt,6])
				nTotPto  := Val(aArrayCarga[oCargas:nAt,8])

				For nC := 1 to Len(aArrayCarga)
					If	aArrayCarga[nC,1] == oMarked
						nTotPeso += Val(aArrayCarga[nC,5])
						nTotVol  += Val(aArrayCarga[nC,6])
						nTotPto  += Val(aArrayCarga[nC,8])
					EndIf
				Next

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Verifico se ha restricoes a necessito marcar³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nCapac := DA3->(FieldGet(FieldPos(cCpoCapac)))
				If ((nTotPeso > nCapac).Or. (nTotVol > DA3->DA3_VOLMAX).Or. (nTotPto > DA3->DA3_LIMMAX )) .And. lMarca
					lRestricao := .T.
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Consisto as possibilidades de marcacao³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				Do case
					Case lRestricao .And. lMarca
						If	MsgYesNo(OemtoAnsi(STR0018), OemtoAnsi(STR0019)) //"O caminhao escolhido nao suporta a carga selecionada. Confirma mesmo assim ?"###"Aviso"
							oObjMark := oMarked
						EndIf
					Case !lRestricao .And. lMarca
						oObjMark    := oMarked
					Case !lMarca
						oObjMarked  := oNoMarked
				EndCase

			EndIf

		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Depois das consistencias gravo marcado ou nao³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aArrayCarga[oCargas:nAt,1] := oObjMark

	EndIf

ElseIf nOpcao == 2

	lMarca := Iif(aArrayCam[oCaminhao:nAt,1] == oMarked,.F., .T. )

	DA3->(dbSetOrder(1))
	If	DA3->(MsSeek(xFilial("DA3")+aArrayCam[oCaminhao:nAt,3]) )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Acumula total das cargas selecionadas³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nC := 1 to Len(aArrayCarga)
			If	aArrayCarga[nC,1] == oMarked
				nTotPeso += Val(aArrayCarga[nC,5])
				nTotVol  += Val(aArrayCarga[nC,6])
				nTotPto  += Val(aArrayCarga[nC,8])
			EndIf
		Next

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifico se ha restricoes a necessito marcar³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nCapac := DA3->(FieldGet(FieldPos(cCpoCapac)))
		If ((nTotPeso > nCapac).Or. (nTotVol > DA3->DA3_VOLMAX).Or. (nTotPto > DA3->DA3_LIMMAX )) .And. ;
			lMarca
			lRestricao := .T.
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Consisto as possibilidades de marcacao³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Do case
			Case lRestricao .And. lMarca
				If MsgYesNo(OemtoAnsi(STR0018), OemtoAnsi(STR0019)) //"O caminhao escolhido nao suporta a carga selecionada. Confirma mesmo assim ?"###"Aviso"
					aArrayCam[oCaminhao:nAt,1] := oMarked
				EndIf
			Case !lRestricao .And. lMarca
				aArrayCam[oCaminhao:nAt,1] := oMarked
			Case !lMarca
				aArrayCam[oCaminhao:nAt,1] := oNoMarked
		EndCase

	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Desmarco os outros itens³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nC := 1 to Len(aArrayCam)
		If nC != nPosCam
			aArrayCam[nC,1] := oNoMarked
		EndIf
	Next

EndIf

oCaminhao:Refresh()
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DA210LIST ºAutor  ³Henry Fila          º Data ³  02/14/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Monta listbox das cargas e dos caminhoes a serem gerados   º±±
±±º          ³ a paletizacao                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5Dl                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Da210List(aArrayCarga,aArrayCam,oMarked,oNoMarked,oEnable,oDisable)
Local aArea     := GetArea()
Local lQuery    := .F.
Local cCondicao := ""
Local lRet      := .F.
Local cPict     := "@E 9999999.99"

cQry := "SELECT DAK.DAK_COD,DAK_SEQCAR,DAK.DAK_PESO,DAK.DAK_PTOENT,DAK.DAK_CAPVOL,DAK.DAK_VALOR "
cQry := cQry + " FROM "+RetSqlName('DAK')+" DAK"
cQry := cQry + " WHERE DAK.DAK_FILIAL = '"+xFilial('DAK')+"'"
cQry := cQry + " AND DAK.D_E_L_E_T_ = ' '"
cQry := cQry + " AND DAK.DAK_FEZNF  = '2'"
cQry := cQry + " AND DAK.DAK_ACECAR = '2'"
cQry := cQry + " AND DAK.DAK_ACEFIN = '2'"
cQry := cQry + " AND DAK.DAK_FLGUNI = '2'"
cQry := cQry + " ORDER BY DAK.DAK_COD"
cQry := ChangeQuery(cQry)
dBUseArea(.t.,"TOPCONN",TCGENQRY(,,cQry),"TMPCAR",.f.,.t.)

lQuery := .T.
cAliasCG := "TMPCAR"


cQry := "SELECT * "
cQry := cQry + " FROM "+RetSqlName('DA3')+" DA3"
cQry := cQry + " WHERE DA3.DA3_FILIAL = '"+xFilial('DA3')+"'"
cQry := cQry + " AND DA3.D_E_L_E_T_ = ' '"
cQry := cQry + " AND DA3.DA3_ATIVO = '1'"
cQry := cQry + " ORDER BY DA3.DA3_COD "
cQry := ChangeQuery(cQry)
dBUseArea(.t.,"TOPCONN",TCGENQRY(,,cQry),"TMPCAM",.f.,.t.)

lQuery := .T.
cAliasCG := "TMPCAR"
cAliasCm := "TMPCAM"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monto array de cargas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

dbSelectArea(cAliasCg)
dbGotop()

While !Eof()

	Aadd(aArrayCarga,{oNoMarked,oEnable,(cAliasCg)->DAK_COD,(cAliasCg)->DAK_SEQCAR,Transform((cAliasCg)->DAK_PESO,cPict),;
										Transform((cAliasCg)->DAK_CAPVOL,cPict),;
										Transform((cAliasCg)->DAK_VALOR,cPict),;
										StrZero((cAliasCg)->DAK_PTOENT,6) })

	dbSelectArea(cAliasCg)
	dbSkip()

EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monto array de caminhoes³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

dbSelectArea(cAliasCm)
dbGotop()

While !Eof()

	Aadd(aArrayCam,{oNoMarked,Iif((cAliasCm)->DA3_ATIVO == "2",oDisable,oEnable),(cAliasCm)->DA3_COD,(cAliasCm)->DA3_DESC,;
									Transform((cAliasCm)->DA3_CAPACN,cPict),;
									Transform((cAliasCm)->DA3_VOLMAX,cPict),;
									Transform((cAliasCm)->DA3_LIMMAX,cPict),;
									(cAliasCm)->DA3_MOTORI })

	dbSelectArea(cAliasCm)
	dbSkip()

EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifico se existe pelo menos uma cara e um caminhao a³
//³ser paletizado                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If Len(aArrayCarga) > 0 .And. Len(aArrayCam) > 0
	lRet := .T.
EndIf

If lQuery
	dbSelectArea("TMPCAM")
	dbCloseArea()

	dbSelectArea("TMPCAR")
	dbCloseArea()
EndIf

RestArea(aArea)
Return(lRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DLA170PREPºAutor  ³Henry Fila          º Data ³  02/16/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Prepara os arrays para a chamada da unitizacao             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5Dl                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function Oms210Prep(aArrayCarga,aArrayCam,oMarked,oNoMarked,oEnable,oDisable,oCargas,oCaminhao)

Local aArrayPal := {}
Local aUnitiza  := {}

Local cCodUni   := 0
Local nOpcao    := 0
Local nQtdeUni  := 0
Local nPosCam   := Ascan(aArrayCam, {|x| x[1] == oMarked })
Local nC        := 0

Local oDlg
Local oTempTable := Nil

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monto array somente com as cargas selecionadas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

For nC := 1 to Len(aArrayCarga)
	If aArrayCarga[nC,1] == oMarked
		Aadd(aArrayPal,{aArrayCarga[nC,3],aArrayCarga[nC][4]})
	EndIf
Next

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifico se existe alguma associacao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If ( nPosCam == 0 ) .Or. ( Len(aArrayPal) == 0 )
	Help(" ",1,"OMS210ASSO") //Nao existem cargas ou caminhoes associados
Else

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Confirmacao do calculo³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	If MsgYesNo(OemtoAnsi(STR0021)) //"Confirma calculo da unitizacao ?"
		DA3->(dbSetOrder(1))
		If DA3->(DbSeek(xFilial("DA3")+aArrayCam[nPosCam,3]))
			cCodUni  := DA3->DA3_UNITIZ
			nQtdeUni := DA3->DA3_QTDUNI
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Chamo a tela de unitizador padrao para caso o usuario       ³
		//³queira trocar o tipo e a qtde do mesmo se for por cliente   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		DEFINE MSDIALOG oDlg TITLE OemtoAnsi(STR0040) From 0,0 To 100,235 OF oMainWnd PIXEL //"Unitizador padrao "

			@ 005,005 Say OemtoAnsi(STR0040) Of oDlg PIXEL SIZE 45,10 //"Qtde Unitizadores "
			@ 005,060 MSGET nQtdeUni  Of oDlg PIXEL SIZE 34,10 Picture "999999"

			@ 020,005 Say OemtoAnsi(STR0025) Of oDlg PIXEL SIZE 45,10 //"Unitizador "
			@ 020,060 MSGET cCodUni F3 "DC1" Valid ExistCpo("DC1",cCodUni) Of oDlg PIXEL SIZE 34,10

			DEFINE SBUTTON FROM 035, 005 TYPE 1 ENABLE OF oDlg ACTION( nOpcao := 1,oDlg:End())
			DEFINE SBUTTON FROM 035, 035 TYPE 2 ENABLE OF oDlg ACTION( oDlg:End())

		ACTIVATE DIALOG oDlg Centered

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Chamo a funcao de unitizacao                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		If nOpcao == 1

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Calcula o volume e peso maximo da carga por unitizador³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aUnitiza := Ds210Uni(nQtdeUni,cCodUni,aArrayPal,aArrayCam[nPosCam,3])

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Processa a paletizacao                                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Processa({ || Oms210Unt(aArrayPal,aArrayCam[nPosCam,3],@oTempTable, mv_par01,nQtdeUni,aUnitiza[1],aUnitiza[2] ) } )

			If Oms210Tree(aArrayPal,aArrayCam[nPosCam,3],nQtdeUni,cCodUni)
				For nC := 1 to Len(aArrayCarga)
					If aArrayCarga[nC,1] == oMarked
						aArrayCarga[nC,1] := oNoMarked
						aArrayCarga[nC,2] := oDisable

						aArrayCam[nPosCam,1] := oNoMarked
						aArrayCam[nPosCam,2] := oDisable

					EndIf
				Next
			EndIf

			If oTempTable != Nil
				oTempTable:Delete()
			EndIf

		EndIf

	EndIf

EndIf

dbSelectArea("DAK")

oCaminhao:Refresh()
oCargas:Refresh()

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Oms210Unt ºAutor  ³Henry Fila          º Data ³  02/16/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Calcula unitizacaoo                                        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ ExpA1- Array com o codigo das cargas                       º±±
±±º          ³ ExpC2- Caminhao a ser carregado                            º±±
±±º          ³ ExpC3- Por Cliente / 2 Por Produto                         º±±
±±º          ³ ExpN4- 1 Por Cliente / 2 Por Produto                       º±±
±±º          ³ ExpN5- Quantidade de unitizadores                          º±±
±±º          ³ ExpN6- Peso por Unitizador                                 º±±
±±º          ³ ExpN7- Volume por Unitizador                               º±±
±±º          ³ ExpL7- Se retorna somente o excedente a numero desejado    º±±
±±º          ³        de unitizadores     (DEFAULT) .F.                   º±±
±±º          ³        .T. - Somente o excedente .F. - Todos               º±±
±±º          ³ ExpL7- Se quebra por cliente quando o pedido nao couber no º±±
±±º          ³        caminhao            (DEFAULT) .F.                   º±±
±±º          ³        .T. - Somente o excedente .F. - Todos               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Oms210Unt(aCargas,cCaminhao,oTempTable,nTipo,nQtdeUni,nPesoUnit,nVolUnit,lExcede,lQuebCli)

Local aCampos    := {}
Local aRetEst    := {}

Local cPedido    := ""
Local cFilPv     := ""
Local cCondicao  := ""
Local nTotPeso   := 0
Local nTotVol    := 0
Local nSeqPal    := 0
Local nTipoOper  := OsVlEntCom()
Local nC         := 0
Local nPallet    := 0
Local lEstVol    := .F.
Local lEstPeso   := .F.
Local lRetPE     := .F.
Local nTamCod    := TamSx3("B1_COD")[1]
Local lOM210UNT  := ExistBlock("OM210UNT")

DEFAULT lExcede   := .F.
DEFAULT lQuebCli  := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Calcula quebras por unitizador e consiste se os cadastros³
//³estao consistentes para a geracao.                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If nPesoUnit == 0 .Or. nVolUnit == 0
	Help(" ",1,"OMS210UNIT") //Verificacao de unitizadores imcompleta
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Crio arquivo de trabalho³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Pergunte("OMS210",.F.)

If oTempTable == Nil
	Aadd(aCampos,{"TRB_CARGA"  ,"C",06,0})
	Aadd(aCampos,{"TRB_SEQCAR" ,"C",02,0})
	Aadd(aCampos,{"TRB_PALLET" ,"C",06,0})
	Aadd(aCampos,{"TRB_CLIENT" ,"C",06,0})
	Aadd(aCampos,{"TRB_LOJA"   ,"C",02,0})
	Aadd(aCampos,{"TRB_SEQUEN" ,"C",06,0})
	Aadd(aCampos,{"TRB_FILPV"  ,"C",FWGETTAMFILIAL,0})
	Aadd(aCampos,{"TRB_PEDIDO" ,"C",06,0})
	Aadd(aCampos,{"TRB_ITEM"   ,"C",03,0})
	Aadd(aCampos,{"TRB_CODPRO" ,"C",nTamCod,0})
	Aadd(aCampos,{"TRB_SEQPAL" ,"C",03,0})
	Aadd(aCampos,{"TRB_QTDE"   ,"N",12,3})
	Aadd(aCampos,{"TRB_PESO"   ,"N",12,3})
	Aadd(aCampos,{"TRB_VOLUME" ,"N",12,3})
	Aadd(aCampos,{"TRB_PESPAL" ,"N",12,3})
	Aadd(aCampos,{"TRB_VOLPAL" ,"N",12,3})
	Aadd(aCampos,{"TRB_VEICUL" ,"C",08,2})
	Aadd(aCampos,{"TRB_RECNO"  ,"N",08,0})

	oTempTable := FWTemporaryTable():New( "TRB" )
	oTempTable:SetFields( aCampos )
	oTempTable:AddIndex("01", {"TRB_CARGA","TRB_SEQCAR","TRB_PALLET","TRB_CLIENT","TRB_LOJA","TRB_SEQUEN"} )
	oTempTable:Create()
Else
	// Apenas apaga os registros da temporária
	cQry := "DELETE FROM "+oTempTable:GetRealName()
	TcSQLExec(cQry)
EndIf

cAlias := "TRBSC9"
cQry := "SELECT SC9.C9_FILIAL,SC9.C9_CARGA,SC9.C9_SEQCAR,SC9.C9_SEQENT,SC9.C9_PEDIDO,SC9.C9_ITEM ,SC9.C9_PRODUTO,SC9.C9_QTDLIB, "
cQry += " SC9.C9_PRCVEN,SC9.C9_SEQUEN,SC9.C9_CLIENTE,SC9.C9_LOJA,SC9.C9_TPCARGA,SC9.R_E_C_N_O_  RECNO "
cQry += " FROM "+RetSqlName('SC9')+" SC9 "
cQry += " WHERE "
If nTipoOper == 1
	cQry += "SC9.C9_FILIAL = '"+xFilial('SC9')+"' AND  "
EndIf
cQry += " SC9.C9_BLCRED = '  ' AND "
cQry += " SC9.C9_BLEST  = '  ' AND "
cQry += " SC9.C9_TPCARGA= '1'  AND "
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Acumulo do filtro as cargas que a serem unitizadas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nC := 1 to Len(aCargas)
	cQry += Iif(nC == 1," (", " OR ")+ "SC9.C9_CARGA = '"+aCargas[nC][1]+"' AND SC9.C9_SEQCAR = '"+aCargas[nC][2]+"' "+Iif(nC == Len(aCargas),") AND ","")
Next
cQry += " SC9.D_E_L_E_T_ = ' ' "
If	nTipo == 1
	cQry += " ORDER BY SC9.C9_CARGA,SC9.C9_SEQENT,SC9.C9_CLIENTE,SC9.C9_LOJA DESC"
Else
	cQry += " ORDER BY SC9.C9_CARGA,SC9.C9_SEQENT,SC9.C9_PRODUTO"
EndIf
cQry := ChangeQuery(cQry)
dbUseArea(.T.,"TOPCONN",TCGENQRY(,,cQry),cAlias,.F.,.T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicio a contagem dos pallets³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nPallet := 1

ProcRegua((cAlias)->(LastRec()))
(cAlias)->(dbGotop())

While (cAlias)->(!Eof())

	IncProc()
	lEstVol  := .F.
	lEstPeso := .F.

	If lQuebCli
		If (cAlias)->C9_PEDIDO != cPedido .Or. (cAlias)->C9_FILIAL != cFilPv
			DAI->(dbSetOrder(1)) //DAI_FILIAL+DAI_COD+DAI_SEQCAR+DAI_SEQUEN+DAI_PEDIDO
			If DAI->(MsSeek(xFilial("DAI")+(cAlias)->(C9_CARGA+C9_SEQCAR+C9_SEQENT+C9_PEDIDO+C9_FILIAL)))
				If ((nTotPeso + DAI->DAI_PESO) >= nPesoUnit) .Or. ( (nTotVol + DAI->DAI_CAPVOL) >= nVolUnit)
					nTotPeso := 0
					nTotVol  := 0
					cPedido  := (cAlias)->C9_PEDIDO
					cFilPv   := (cAlias)->C9_FILIAL
					nPallet++
				EndIf
			EndIf
		EndIf
	EndIf

	//-- Ponto de Entrada usado para quebras no unitizador
	If lOM210UNT
		lRetPE := ExecBlock("OM210UNT",.F.,.F.,{(cAlias)->C9_CLIENTE, (cAlias)->C9_LOJA, (cAlias)->C9_PRODUTO})
		lRetPE := If(ValType(lRetPE)<>"L",.F.,lRetPE)
		If	lRetPE
			nTotPeso := 0
			nTotVol  := 0
			nPallet++
		EndIf
	EndIf

	SB1->(dbSetOrder(1)) //B1_FILIAL+B1_COD
	If SB1->(MSseek(OsFilial("SB1",(cAlias)->(C9_FILIAL))+(cAlias)->(C9_PRODUTO)))

		//-- Calculo peso do item do pedido
		nPesoProd := OsPesoProd((cAlias)->C9_PRODUTO,(cAlias)->C9_FILIAL)
		nPesoProd := (nPesoProd * (cAlias)->C9_QTDLIB)
		//-- Calcula capacidade volumetrica
		nCapArm := OsPrCapArm((cAlias)->C9_PRODUTO,(cAlias)->C9_FILIAL)
		nCapVol := ( nCapArm * (cAlias)->C9_QTDLIB )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifico quebra de pallet por peso e volume³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nTotPeso + nPesoProd ) >= nPesoUnit
			lEstPeso := .T.
		EndIf
		If ( nTotVol + nCapVol ) >= nVolUnit
			lEstVol  := .T.
		EndIf

		If ( lEstVol .Or. lEstPeso ) //.And. ( nTipo == 1 )

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Armazeno a qtde liberada para acumular com a quebra³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nQtdeQueb := 0
			nSeqPal   := 0

			While nQtdeQueb < (cAlias)->C9_QTDLIB

				nSeqPal++

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Acho quanto falta de espaco ou peso no pallet³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nDifPeso := nPesoUnit - nTotPeso
				nDifVol  := nVolUnit - nTotVol

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Acho a diferenca entre o paletizado e o a paletizar³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nQtdePal := ( (cAlias)->C9_QTDLIB - nQtdeQueb )

				//-- Calculo peso do item do pedido
				nPesoProd := OsPesoProd((cAlias)->C9_PRODUTO,(cAlias)->C9_FILIAL)
				nPesoProd := (nPesoProd * nQtdePal)
				//-- Calcula capacidade volumetrica
				nCapArm := OsPrCapArm((cAlias)->C9_PRODUTO,(cAlias)->C9_FILIAL)
				nCapVol := ( nCapArm * nQtdePal )

				aRetEst := Oms210Vol((cAlias)->C9_FILIAL,(cAlias)->C9_PRODUTO,nDifVol,nDifPeso,nPesoProd,nCapVol,nQtdePal,lEstPeso,lEstVol)

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Se retornou 0 quer dizer que o que sobrou nao cabe outro ³
				//³produto, por isso abro outro pallet                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If aRetEst[1] == 0
					nTotPeso := 0
					nTotvol  := 0
					nPallet++

					nDifPeso := nPesoUnit - nTotPeso
					nDifVol  := nVolUnit - nTotVol

					aRetEst := Oms210Vol((cAlias)->C9_FILIAL,(cAlias)->C9_PRODUTO,nDifVol,nDifPeso,nPesoProd,nCapVol,nQtdePal,lEstPeso,lEstVol)

				EndIf

				nQtdeQueb += aRetEst[1]

				If !lExcede .Or. ( lExcede .And. nPallet > nQtdeUni )
					RecLock("TRB",.T.)
					TRB->TRB_CARGA   := (cAlias)->C9_CARGA
					TRB->TRB_SEQCAR  := (cAlias)->C9_SEQCAR
					TRB->TRB_PALLET  := StrZero(nPallet,6)
					TRB->TRB_CLIENT  := (cAlias)->C9_CLIENTE
					TRB->TRB_LOJA    := (cAlias)->C9_LOJA
					TRB->TRB_SEQUEN  := (cAlias)->C9_SEQUEN
					TRB->TRB_FILPV   := (cAlias)->C9_FILIAL
					TRB->TRB_PEDIDO  := (cAlias)->C9_PEDIDO
					TRB->TRB_ITEM    := (cAlias)->C9_ITEM
					TRB->TRB_CODPRO  := (cAlias)->C9_PRODUTO
					TRB->TRB_SEQPAL  := StrZero(nSeqPal,3)
					TRB->TRB_QTDE    := aRetEst[1]
					TRB->TRB_PESO    := aRetEst[2]
					TRB->TRB_VOLUME  := aRetEst[3]
					TRB->TRB_PESPAL  := nPesoUnit
					TRB->TRB_VOLPAL  := nVolUnit
					TRB->TRB_VEICUL  := DA3->DA3_COD
					TRB->TRB_RECNO   := (cAlias)->RECNO
				EndIf

				If ( nTotPeso + aRetEst[2] ) >= nPesoUnit .Or. ( nTotVol + aRetEst[3] ) >= nVolUnit
					nTotPeso := 0
					nTotVol  := 0
					nPallet++
				Else
					nTotPeso += aRetEst[2]
					nTotVol  += aRetEst[3]
				EndIf

			EndDo
			(cAlias)->(dbSkip())
			Loop
		EndIf

		nTotPeso += nPesoProd
		nTotVol  += nCapVol

		If !lExcede .Or. ( lExcede .And. nPallet > nQtdeUni )
			RecLock("TRB",.T.)
			TRB->TRB_CARGA   := (cAlias)->C9_CARGA
			TRB->TRB_SEQCAR  := (cAlias)->C9_SEQCAR
			TRB->TRB_PALLET  := StrZero(nPallet,6)
			TRB->TRB_CLIENT  := (cAlias)->C9_CLIENTE
			TRB->TRB_LOJA    := (cAlias)->C9_LOJA
			TRB->TRB_SEQUEN  := (cAlias)->C9_SEQUEN
			TRB->TRB_FILPV   := (cAlias)->C9_FILIAL
			TRB->TRB_PEDIDO  := (cAlias)->C9_PEDIDO
			TRB->TRB_ITEM    := (cAlias)->C9_ITEM
			TRB->TRB_CODPRO  := (cAlias)->C9_PRODUTO
			TRB->TRB_SEQPAL  := StrZero(nSeqPal)
			TRB->TRB_QTDE    := (cAlias)->C9_QTDLIB
			TRB->TRB_PESO    := nPesoProd
			TRB->TRB_VOLUME  := nCapVol
			TRB->TRB_PESPAL  := nPesoUnit
			TRB->TRB_VOLPAL  := nVolUnit
			TRB->TRB_VEICUL  := DA3->DA3_COD
			TRB->TRB_RECNO   := (cAlias)->RECNO
		EndIf
	EndIf
	(cAlias)->(dbSkip())
EndDo
(cAlias)->(dbCloseArea())

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Oms210VOL ºAutor  ³Henry Fila          º Data ³  02/19/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Retorna a qtde  do produto para a quebra do pallet          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³cProduto  = Produto a ser calculado                         º±±
±±º          ³nQtdeVol  = Qtde em volume que falta no pallet              º±±
±±º          ³nQtdePEso = Qtde em Kg que falta no pallet                  º±±
±±º          ³nVolume   = Volume total do pallet                          º±±
±±º          ³nPeso     = Peso Total do Pallet                            º±±
±±º          ³nQtde     = Qtde do SC9 a ser calculada                     º±±
±±º          ³lEstPeso  = Se estourou por peso                            º±±
±±º          ³lEstVol   = Se estourou por volume                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Oms210Vol(cFilPv, cProduto, nQtdeVol, nQtdePeso, nPeso, nVolume, nQtde, lEstPeso, lEstVol)

Local nQtdeRet  := 0
Local nQtdeRet1 := 0
Local nQtdeRet2 := 0
Local nCapvol   := 0
Local nPesoProd := 0
Local nCapArm   := 0
Local aRet      := {}

If SB1->(MsSeek(OsFilial("SB1",cFilPv)+cProduto))

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se estourou por volume³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lEstVol
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifico se a qtde pode ser quebrada³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Do Case
			Case SB1->B1_TIPODEC $ "NA" //Normal
				nQtdeRet1 := (nQtde*nQtdeVol) / nVolume
			Case SB1->B1_TIPODEC ==	 "I" //Incrementa
				nQtdeRet1 := Int((nQtde*nQtdeVol) / nVolume ) + 1
			Case SB1->B1_TIPODEC == "T"
				nQtdeRet1 := Int((nQtde*nQtdeVol) / nVolume )
		EndCase
		If nQtde < nQtdeRet1 //.Or. (nQtdeRet1 == 0)
			nQtdeRet1 := nQtde
		ElseIf nQtdeRet1 == 0
			nQtdeRet1 := 1
		EndIf
		//-- Calculo peso do item do pedido
		nPesoProd := OsPesoProd(cProduto,cFilPv)
		nPesoProd := (nPesoProd * nQtdeRet1)
		//-- Calcula capacidade volumetrica
		nCapArm := OsPrCapArm(cProduto,cFilPv)
		nCapVol := ( nCapArm * nQtdeRet1 )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Calculo baseado pela nova qtde³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPesoProd > nQtdePeso
			Do Case
				Case SB1->B1_TIPODEC $ "NA" //Normal
					nQtdeRet2 := (nQtde*nQtdePeso) / nPeso
				Case SB1->B1_TIPODEC ==	 "I" //Incrementa
					nQtdeRet2 := Int((nQtde*nQtdePeso) / nPeso ) + 1
				Case SB1->B1_TIPODEC == "T"
					nQtdeRet2 := Int((nQtde*nQtdePeso) / nPeso )
			EndCase
			If nQtde < nQtdeRet2 //.Or. (nQtdeRet2 == 0)
				nQtdeRet2 := nQtde
			ElseIf nQtdeRet2 == 0
				nQtdeRet2 := 1
			EndIf
			//-- Calculo peso do item do pedido
			nPesoProd := OsPesoProd(cProduto,cFilPv)
			nPesoProd := (nPesoProd * nQtdeRet2)
			//-- Calcula capacidade volumetrica
			nCapArm := OsPrCapArm(cProduto,cFilPv)
			nCapVol := ( nCapArm * nQtdeRet2 )
		EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se estourou por peso³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ElseIf lEstPeso
		Do Case
			Case SB1->B1_TIPODEC $ "NA" //Normal
				nQtdeRet2 := (nQtde*nQtdePeso) / nPeso
			Case SB1->B1_TIPODEC ==	 "I" //Incrementa
				nQtdeRet2 := Int((nQtde*nQtdePeso) / nPeso ) + 1
			Case SB1->B1_TIPODEC == "T"
				nQtdeRet2 := Int((nQtde*nQtdePeso) / nPeso )
		EndCase
		If nQtde < nQtdeRet2 //.Or. (nQtdeRet2 == 0)
			nQtdeRet2 := nQtde
		ElseIf nQtdeRet2 == 0
			nQtdeRet2 := 1
		EndIf
		//-- Calculo peso do item do pedido
		nPesoProd := OsPesoProd(cProduto,cFilPv)
		nPesoProd := (nPesoProd * nQtdeRet2)
		//-- Calcula capacidade volumetrica
		nCapArm := OsPrCapArm(cProduto,cFilPv)
		nCapVol := ( nCapArm * nQtdeRet2 )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Calculo baseado pela nova qtde³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nCapVol > nQtdeVol
			Do Case
				Case SB1->B1_TIPODEC $ "NA" //Normal
					nQtdeRet1 := (nQtde*nQtdeVol) / nVolume
				Case SB1->B1_TIPODEC ==	 "I" //Incrementa
					nQtdeRet1 := Int((nQtde*nQtdeVol) / nVolume ) + 1
				Case SB1->B1_TIPODEC == "T"
					nQtdeRet1 := Int((nQtde*nQtdeVol) / nVolume )
			EndCase
			If nQtde < nQtdeRet1 //.Or. ( nQtdeRet1 == 0 )
				nQtdeRet1 := nQtde
			ElseIf nQtdeRet1 == 0
				nQtdeRet1 := 1
			EndIf
			//-- Calculo peso do item do pedido
			nPesoProd := OsPesoProd(cProduto,cFilPv)
			nPesoProd := (nPesoProd * nQtdeRet2)
			//-- Calcula capacidade volumetrica
			nCapArm := OsPrCapArm(cProduto,cFilPv)
			nCapVol := ( nCapArm * nQtdeRet1 )
		EndIf
	EndIf
	If nQtdeRet1 > nQtdeRet2
		nQtdeRet := nQtdeRet1
	Else
		nQtdeRet := nQtdeRet2
	EndIf
	//-- Calculo peso do item do pedido
	nPesoProd := OsPesoProd(cProduto,cFilPv)
	nPesoProd := (nPesoProd * nQtdeRet)
	//-- Calcula capacidade volumetrica
	nCapArm := OsPrCapArm(cProduto,cFilPv)
	nCapVol := ( nCapArm * nQtdeRet )
	Aadd(aRet,nQtdeRet)
	Aadd(aRet,nPesoProd)
	Aadd(aRet,nCapVol)
EndIf
Return(aRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Oms210TREEºAutor  ³Henry Fila          º Data ³  02/20/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Mostra o tree com os pallets criados                        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Oms210Tree(aArrayPal,cCaminhao,nQtdUni,cCodUni)

Local aSize     := MsAdvSize( .T. )
Local aPosObj1  := {}
Local aObjects  := {}
Local aButtons  := {{ "RELATORIO"  , { || Da210Leg() }, OemtoAnsi(STR0045), OemtoAnsi(STR0045)} } //"Legenda"

Local cDescri   := ""
Local cResource := ""
Local cPallet   := ""
Local cNome     := ""

Local nPesoPad  := 0
Local nVolPad   := 0
Local nOpcao    := 0
Local nPallet   := 0
Local nVolume   := 0
Local nPeso     := 0
Local nPerPal   := 0
Local nPerPeso  := 0
Local nPerVol   := 0

Local oDlg
Local oTree
Local oSayPed,oSayCli,oSayQuebra,oSayQtde,oSayPeso,oSayVolume

If Select("TRB") == 0
	Help(" ",1,"OMS210CALC") //Calculo de unitizacao ainda nao foi executado
	Return
EndIf

aObjects := {}
AAdd( aObjects, { 100,  50, .t., .f. } )
AAdd( aObjects, { 100, 100, .t., .t. } )
AAdd( aObjects, { 100,  50, .t., .f. } )

aInfo    := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 0, 0 }
aPosObj1 := MsObjSize( aInfo, aObjects)

dbSelectArea("TRB")
dbGotop()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Busco caracteristicas do caminhao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

DEFINE MSDIALOG oDlg FROM aSize[7],000 TO aSize[6],aSize[5] TITLE OemtoAnsi(STR0007) PIXEL //Unitizacao

	@ aPosObj1[1,1], aPosObj1[1,2] TO  aPosObj1[1,3], aPosObj1[1,4] LABEL  OemToAnsi(STR0022)   OF oDlg PIXEL   //"Dados da Unitizacao"
	@ aPosObj1[3,1], aPosObj1[3,2] TO  aPosObj1[3,3], aPosObj1[3,4] LABEL  OemToAnsi(STR0023)   OF oDlg PIXEL   //"Visualizacao"

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Definicao do DbTree.                                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DEFINE DBTREE oTree FROM aPosObj1[2,1],aPosObj1[2,2] TO aPosObj1[2,3],aPosObj1[2,4] CARGO OF oDlg
	oTree:bChange := {|| Oms210Msg(oTree,oSayPed,oSayCli,oSayQuebra,oSayQtde,oSayPeso,oSayVolume) }

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Contador de pallets ocupados³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		nPallet := 0

		While TRB->(!Eof())

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Acumulo Carga ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			cCarga   := TRB->TRB_CARGA
			nPesoPad := TRB->TRB_PESPAL
			nVolPad  := TRB->TRB_VOLPAL

			cPrompt := PadR(STR0024+TRB->TRB_CARGA,120) //"Carga :"
			DBADDTREE oTree PROMPT cPrompt RESOURCE "F5_NULL","F6_NULL" CARGO Replicate("0",6)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Acumulo pallet³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			While !Eof() .And. ( TRB->TRB_CARGA == cCarga )

				nPallet++

				cPrompt := PadR(STR0025+TRB->TRB_PALLET,120) //"Pallet "
				DBADDTREE oTree PROMPT cPrompt RESOURCE "F5_NULL","F6_NULL" CARGO Replicate("0",6)
				cPallet := TRB->TRB_CARGA+TRB->TRB_PALLET

				While !Eof() .And. ( TRB->TRB_CARGA+TRB->TRB_PALLET == cPallet )

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Se unitizacao por cliente³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

					If mv_par01 == 1

						cCliente := TRB->TRB_CARGA+TRB->TRB_PALLET+TRB_CLIENTE+TRB->TRB_LOJA

						SA1->(dbSetOrder(1))
						If SA1->(MsSeek(OsFilial("SA1",TRB->TRB_FILPV)+TRB->TRB_CLIENTE+TRB->TRB_LOJA) )
							cNome := SA1->A1_NOME
						EndIf


						cPrompt := PadR(STR0026+cNome,120) //"Cliente :"
						DBADDTREE oTree PROMPT cPrompt RESOURCE "F5_NULL","F6_NULL" CARGO Replicate("0",6)

						While !Eof() .And. TRB->TRB_CARGA+TRB->TRB_PALLET+TRB_CLIENTE+TRB->TRB_LOJA == cCliente

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Pego descricao do produto³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

							SB1->(dbSetOrder(1))
							If SB1->(MsSeek(OsFilial("SB1",TRB->TRB_FILPV)+TRB->TRB_CODPRO))
								cDescri := SB1->B1_DESC
							EndIf

							cPrompt := Pad(TRB->TRB_CODPRO+cDescri+ ;
										STR0027+ Alltrim(Transform(TRB->TRB_QTDE,"@E 99,999.999") ),120) //" Qtde :"
							cCargo  := StrZero(TRB->(Recno()),6)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Se for quebra, mudo a cor do folder³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

							If nPallet <= nQtdUni
								cResource := Iif(Val(TRB->TRB_SEQPAL) > 1,"F5_AZUL", "F5_VERD" )
							Else
								cResource := "F5_VERM"
							Endif
							DBADDITEM oTree PROMPT cPrompt RESOURCE cResource CARGO cCargo

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Acumulo peso do pallet³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

							nPeso   += TRB->TRB_PESO
							nVolume += TRB->TRB_VOLUME

							TRB->(dbSkip())

						EndDo

						DBENDTREE oTree

					Else

						cProduto := TRB->TRB_CARGA+TRB->TRB_PALLET+TRB_CODPRO

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Pego descricao do produto³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

						SB1->(dbSetOrder(1))
						If SB1->(MsSeek(OsFilial("SB1",TRB->TRB_FILPV)+TRB->TRB_CODPRO))
							cDescri := SB1->B1_DESC
						EndIf

						cPrompt := PadR(STR0028+TRB->TRB_CODPRO+"-"+cDescri,120) //"Produto :"
						DBADDTREE oTree PROMPT cPrompt RESOURCE "F5_NULL","F6_NULL" CARGO Pad("0 ",120)

						While !Eof() .And. TRB->TRB_CARGA+TRB->TRB_PALLET+TRB_CODPRO == cProduto

							cPrompt := PadR(STR0027+ Alltrim(Transform(TRB->TRB_QTDE,"@E 99,999.999") ),120)
							cCargo  := StrZero(TRB->(Recno()),6)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Se for quebra, mudo a cor do folder³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

							If nPallet <= nQtdUni
								cResource := Iif(Val(TRB->TRB_SEQPAL) > 1,"F5_AZUL", "F5_VERD" )
							Else
								cResource := "F5_VERM"
							Endif

							DBADDITEM oTree PROMPT cPrompt RESOURCE cResource CARGO cCargo

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Acumulo peso do pallet³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

							nPeso   += TRB->TRB_PESO
							nVolume += TRB->TRB_VOLUME

							TRB->(dbSkip())

						EndDo

						DBENDTREE oTree


					EndIf

				EndDo
				DBENDTREE oTree
			EndDo

			DBENDTREE oTree

		EndDo

	nPerPal  := ( nPallet / nQtdUni ) * 100
	nPerPeso := ( nPeso   / DA3->DA3_CAPACN ) * 100
	nPerVol  := ( nVolume / DA3->DA3_VOLMAX ) * 100

	cUniOcu  := StrZero(nPallet,3) + " de " + StrZero(nQtdUni,3) + " - " + Transform(nPerPal,"@E 99999.99 %")
	cPesoOcu := Alltrim(Transform(nPeso,"@E 999,999.9999")) + " de " + ;
				Alltrim(Transform(DA3->DA3_CAPACN,"@E 999,999.9999")) + ;
				" - " + Transform(nPerPeso,"@E 99999.99 %") + ;
				OemtoAnsi(STR0029)+Transform(nPesoPad,"@E 999999.999 Kg") //" - Peso por Unitizador: "


	cVolOcu  := Alltrim(Transform(nVolume,"@E 999,999.9999")) + " de " + ;
				Alltrim(Transform(DA3->DA3_VOLMAX,"@E 999,999.9999")) + " - " + ;
				Transform(nPerVol,"@E 99999.99 %") + ;
				OemtoAnsi(STR0030)+Transform(nVolPad,"@E 99999.9999 m3") //" - Volume por Unitizador: "

	@ aPosObj1[1,1]+05,05 Say OemtoAnsi(STR0031) of oDlg PIXEL //"Unitizadores Ocupados :"
	@ aPosObj1[1,1]+05,If(cPaisLoc=="BRA",90,105) Say cUniOcu of oDlg PIXEL
	@ aPosObj1[1,1]+20,05 Say OemtoAnsi(STR0032) OF oDlg PIXEL  //"Ocupacao do Veiculo em Kg :"
	@ aPosObj1[1,1]+20,If(cPaisLoc=="BRA",90,105) Say cPesoOcu of oDlg PIXEL
	@ aPosObj1[1,1]+35,05 Say OemtoAnsi(STR0033) OF oDlg PIXEL //"Ocupacao do Veiculo em Volume :"
	@ aPosObj1[1,1]+35,If(cPaisLoc=="BRA",90,105) Say cVolOcu OF oDlg PIXEL

	@ aPosObj1[3,1]+10,05  Say OemtoAnsi(STR0034)	SIZE 040,08 Of oDlg PIXEL //"Nr. Pedido: "
	@ aPosObj1[3,1]+10,40  Say oSayPed Prompt ""	SIZE 040,08 Of oDlg PIXEL

	@ aPosObj1[3,1]+10,70  Say OemtoAnsi(STR0026)	SIZE 040,08 Of oDlg PIXEL //"Cliente :"
	@ aPosObj1[3,1]+10,105 Say oSayCli Prompt ""	SIZE 100,08 Of oDlg PIXEL

	@ aPosObj1[3,1]+20,05  Say OemtoAnsi(STR0037)	SIZE 060,08 Of oDlg PIXEL  //"Quebra por unitizador : "
	@ aPosObj1[3,1]+20,70  Say oSayQuebra Prompt ""	SIZE 040,08 Of oDlg PIXEL

	@ aPosObj1[3,1]+30,05  Say OemtoAnsi(STR0038)	SIZE 060,08 Of oDlg PIXEL //"Quantidade : "
	@ aPosObj1[3,1]+30,40  Say oSayQtde Prompt ""	SIZE 040,08 Of oDlg PIXEL

	@ aPosObj1[3,1]+30,100 Say OemtoAnsi(STR0039)	SIZE 060,08 Of oDlg PIXEL //"Peso : "
	@ aPosObj1[3,1]+30,130 Say oSayPeso Prompt ""	SIZE 040,08 Of oDlg PIXEL

	@ aPosObj1[3,1]+30,170 Say OemtoAnsi(STR0035)	SIZE 060,08 Of oDlg PIXEL //"Volume : "
	@ aPosObj1[3,1]+30,200 Say oSayVolume Prompt ""	SIZE 040,08 Of oDlg PIXEL

ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar( oDlg, { || Processa({||Ds210Gera(aArrayPal,cCodUni)}),nOpcao := 1,oDlg:End()}, {||oDlg:End()},,aButtons) CENTERED

Return(Iif(nOpcao == 1, .T.,.F.))


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DS210UNI  ºAutor  ³Microsiga           º Data ³  02/22/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Calcula Volume e peso por unitizador de acordo com a carga º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ cCaminha - Caminhao a ser baseado o calculo                º±±
±±º          ³ aCargas  - Array com o numero das cargas                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ aRetUni[1] - Peso Unitario por Pallet                      º±±
±±º          ³ aRetUni[2] - Peso Unitario por Pallet em relacao a carga   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Ds210Uni(nQtdeUni,cCodUni,aCargas,cVeiculo)
Local aRetUni    := Array(2)
Local nPesoCarga := 0
Local nC         := 0

DEFAULT nQtdeUni := 1
aRetUni[1] := 0
aRetUni[2] := 0
For nC := 1 to Len(aCargas)
	DAK->(dbSetOrder(1))
	If DAK->(MsSeek(xFilial("DAK")+aCargas[nC][1]+aCargas[nC][2]))
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Calculo peso e volume por unitizador ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty(cVeiculo)
			DA3->(dbSetOrder(1))
			If DA3->(MsSeek(xFilial("DA3")+cVeiculo))
				aRetUni[2] += ( DA3->DA3_VOLMAX / nQtdeUni )
			Else
				aRetUni[2] += ( DAK->DAK_CAPVOL / nQtdeUni )
			EndIf
		Else
			aRetUni[2] += ( DAK->DAK_CAPVOL / nQtdeUni )
		EndIf
//		aRetUni[2] += ( DAK->DAK_CAPVOL / nQtdeUni )
		nPesoCarga += ( DAK->DAK_PESO   / nQtdeUni )
	EndIf
Next
nPesoCarga := nPesoCarga * ( ( mv_par02 / 100 ) + 1)
aRetUni[2] := aRetUni[2] * ( ( mv_par02 / 100 ) + 1)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Comparo para ver qual sera a menor quebra, a da carga ou³
//³a cadastrada no pallet                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DC1->(dbSetOrder(1))
If DC1->(MsSeek(xFilial("DC1")+cCodUni))
	aRetUni[1] := Iif(DC1->DC1_CAPMAX < nPesoCarga,DC1->DC1_CAPMAX, nPesoCarga)
EndIf
Return(aRetUni)



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Oms210MSG ºAutor  ³Henry Fila          º Data ³  02/22/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Mostra mensagem na tela dos itens do dbtree                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5Dl                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function Oms210Msg(oTree,oSayPed,oSayCli,oSayQuebra,oSayQtde,oSayPeso,oSayVolume)

Local cSayCli  := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Posiciono no registro correspondente ao Tree³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

TRB->(dbGoto(Val(oTree:GetCargo())))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Atualizao mensagem na tela com os dados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

oSayPed:SetText(TRB->TRB_PEDIDO)
oSayQuebra:SetText(TRB->TRB_SEQPAL)
oSayQtde:SetText(TRB->TRB_QTDE)
oSayPeso:SetText(Alltrim(Transform(TRB->TRB_PESO,"@E 99,999.9999 Kg") ) )
oSayVolume:SetText(Alltrim(Transform(TRB->TRB_VOLUME,"@E 99,999.9999 M3") ) )

SA1->(dbSelectArea("SA1"))
If SA1->(MsSeek(OsFilial("SA1",TRB->TRB_FILPV)+TRB->TRB_CLIENT+TRB->TRB_LOJA) )
	cSayCli	:= TRB->TRB_CLIENT+"-"+TRB->TRB_LOJA+" "+SA1->A1_NOME
	oSayCli:SetText(cSayCli)
Else
	oSayCli:SetText()
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DS210GERA ºAutor  ³Henry Fila          º Data ³  03/01/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Gera unitizacao nos arquivo DBN                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5Dl                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function DS210Gera(aCargas,cCodUni)

Local cCodUniSeq := ""
Local nSeqEntr   := 0
Local nSaveSx8   := GetSx8Len()
Local nC         := 0
Local lGera      := .F.
Local lOM210GRV  := ExistBlock("OM210GRV")

cCodUniSeq := GetSx8Num("DBN","DBN_CODUNI")

dbSelectArea("TRB")
ProcRegua(LastRec())
dbGotop()

Begin Transaction

While TRB->(!Eof())

	IncProc()

	lGera := .T.
	cCaminhao := TRB->TRB_VEICUL

	nSeqEntr++

	RecLock("DBN",.T.)
		DBN->DBN_FILIAL := xFilial("DBN")
		DBN->DBN_CODUNI := cCodUniSeq
		DBN->DBN_DATA   := dDatabase
		DBN->DBN_CODCLI := TRB->TRB_CLIENT
		DBN->DBN_LOJA   := TRB->TRB_LOJA
		DBN->DBN_PEDIDO := TRB->TRB_PEDIDO
		DBN->DBN_ITEM   := TRB->TRB_ITEM
		DBN->DBN_SEQUEN := TRB->TRB_SEQUEN
		DBN->DBN_CODPRO := TRB->TRB_CODPRO
		DBN->DBN_CARGA  := TRB->TRB_CARGA
		DBN->DBN_SEQCAR := TRB->TRB_SEQCAR
		DBN->DBN_SEQENT := StrZero(nSeqEntr,Len(DBN->DBN_SEQENT))
		DBN->DBN_UNITIZ := TRB->TRB_PALLET
		DBN->DBN_SEQUNI := TRB->TRB_SEQPAL
		DBN->DBN_QTDE   := TRB->TRB_QTDE
		DBN->DBN_PESO   := TRB->TRB_PESO
		DBN->DBN_VOLUME := TRB->TRB_VOLUME
	MsUnlock()

	//-- Ponto de Entrada apos gravacao da unitizacao.
	If lOM210GRV
		ExecBlock("OM210GRV",.F.,.F.,{cCodUni})
	EndIf
	TRB->(dbSkip())

EndDo

If lGera

	DA3->(dbSetOrder(1))
	If DA3->(MsSeek(xFilial("DA3")+cCaminhao))

		For nC := 1 to Len(aCargas)

			DAK->(dbSetOrder(1))
			If DAK->(MsSeek(xFilial("DAK")+aCargas[nC][1]+aCargas[nC][2]))

				RecLock("DAK",.F.)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Se nao havia sido associado a um caminhao³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

					If Empty(DAK->DAK_CAMINH)

						DAK->DAK_CAMINH := DA3->DA3_COD

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Busco motorista e ajudantes default³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

						DA4->(dbSetOrder(1))
						If DA4->(MsSeek(xFilial("DA4")+DA3->DA3_MOTORI ))

							DAK->DAK_MOTORI := DA4->DA4_COD
							DAK->DAK_AJUDA1 := DA4->DA4_AJUDA1
							DAK->DAK_AJUDA2 := DA4->DA4_AJUDA2
							DAK->DAK_AJUDA3 := DA4->DA4_AJUDA3

						EndIf

					EndIf

				MsUnlock()


				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Atualiza Flags de unitizacao                                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

				OsAvalDAK("DAK",3)

			EndIf

		Next

		While (GetSx8Len() > nSaveSx8 )
			ConfirmSX8()
		EndDo

	EndIf

EndIf

End Transaction

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DS210ESTORºAutor  ³Henry Fila          º Data ³  03/01/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Estorna unitizacao                                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5Dl                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Da210Estor()
Local aArea := GetArea()
Local aDAK  := {}

aDAK :=  DAK->(GetArea())
DAK->(DbSetOrder(1))
DAK->(DbSeek(xFilial("DAK") + DBN->DBN_CARGA))
If DAK->DAK_FEZNF == "2"
	If MsgYesNo(OemtoAnsi(STR0036)) //"Confirma estorno da unitizacao ?"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Estorna unitizacao                                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		OsAvalDAK("DAK",4)
	EndIf
Else
	Aviso('SIGAOMS', STR0049, {'Ok'}) //"O estorno nao sera permitido pois ja foi emitida nota fiscal para essa carga."
Endif
RestArea(aDAK)
RestArea(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Program   ³ Da200Leg ³ Autor ³ Henry Fila    a       ³ Data ³23/01/2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡Æo ³ Exibe a legenda das quebras de carga                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nil                                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Da210Leg()

BrwLegenda( STR0001, OemToAnsi( "Status" ),{ { "F5_NULL", OemToAnsi( STR0046) },; //"Niveis de Quebra"
								{ "F5_VERD"  , OemToAnsi( STR0043 ) },; //"Inicio do item"
								{ "F5_AZUL"  , OemToAnsi( STR0044) },;
								{ "F5_VERM"  , OemToAnsi( STR0047) } },32) //"Paletes Extras"
