#INCLUDE "ARGNFE.ch"
#INCLUDE "PROTHEUS.CH" 
#INCLUDE "TOTVS.CH"
#INCLUDE "APWIZARD.CH"
#INCLUDE "FILEIO.CH"
#INCLUDE "FWCOMMAND.CH"
#INCLUDE "TBICONN.CH"
#INCLUDE 'FWLIBVERSION.CH'

Static _lMetric	:= Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ArGNFe    ³ Autor ³ Eduardo Riera         ³ Data ³18.06.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Programa de transmissao da Nota fiscal eletronica           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³LuisEnríquez  ³19-01-17³SERINN001-904³-Se realiza merge para hacer cam-³±±
±±³              ³        ³             ³ bio en creación de tabla tempo- ³±±
±±³              ³        ³             ³ ral CTREE.                      ³±±    
±±³M.Camargo     ³31.01.17|MMI301³Merge v12.1.14 en el cual se incluyen   ³±±
±±³              ³        |      ³los issues:                             ³±±
±±³              ³        |      ³MMI-4747: Se elimina var cURLP          ³±±
±±³              ³        |      ³ya que causabaerror al llamar función   ³±±
±±³              ³        |      ³findurl.                                ³±±
±±³              ³        |      ³Se valida que la variable cURL no esté  ³±±
±±³              ³        |      ³vacía, de lo contrario envia mensaje al ³±±
±±³              ³        |      ³usuario para uso de Wz. config          ³±±
±±³              ³        |      ³Se modifica ARGNNFeRe2  para que llame  ³±±
±±³              ³        |      ³parámetros por usuario. Mismo caso para ³±±
±±³              ³        |      ³ARGNNFeRe3                              ³±±
±±³              ³        |      ³MMI-301 Réplica[TUAL90]Realizar la-     ³±±
±±³              ³        |      ³transmisión de las notas fiscales cuando³±±
±±³              ³        |      ³la factura sea emitida en pesos         ³±±
±±³              ³        |      ³(moneda 01)pero con una tasa igual a    ³±±
±±³              ³        |      ³dólar(moneda 02).Al transmitir la       ³±±
±±³              ³        |      ³la factura en pesos a la AFIP,la tasa   ³±±
±±³              ³        |      ³debe ser igual 1.                       ³±± 
±±³              ³        |      ³MMI-325 Réplica[TSQVEY]Disponibilizada  ³±±
±±³              ³        |      ³as opções de consulta, solicitação e    ³±±
±±³              ³        |      ³transmissão de notas CAEA Nominal.      ³±±    
±±³              ³        |      ³MMI-5283 Réplica[MSERV-12493] Corrección³±±
±±³              ³        |      ³llamada de funciones ARGNNFeRe2 y       ³±±
±±³              ³        |      ³ARGNNFeRe3.                             ³±±
±±³M.Camargo     ³25.04.17|MMI-  ³MMI-211 RéplicaTRRCTW Corrección        ³±±
±±³              ³        |5493  ³Etiquetas palabra Año. Se modifica eti- ³±±
±±³              ³        |      ³queta STR0079 ya que no estaba siendo   ³±±
±±³              ³        |      ³llamada.                                ³±±                            
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ARGNNFe()

Local aArea     := GetArea()
Local lRetorno  := .T.
Local nVezes    := 0

PRIVATE lBtnFiltro:= .F.
PRIVATE cAliasMnt := ""
PRIVATE nTamPV := TamSX3("F2_PV")[1]
PRIVATE lAutoNf := .F.
PRIVATE lAutomato := isBlind()
PRIVATE cTpMetric := ""

While lRetorno
	lBtnFiltro:= .F.
    lRetorno := ARGNNfe2(nVezes==0)
    nVezes++
    If !lBtnFiltro
    	Exit
    EndIf
EndDo
RestArea(aArea)
Return Nil

Static Function ARGNNFe2(lInit,cAlias)

Local cMsgCmp	:= ""
Local aPerg     := {}
Local aCores    := {}
Local aIndArqE   := {}
Local lRetorno  := .T.
Local lEntAtiva := .T.
Local lPerg 	:= .F.
Local lValidUpd := .T.
Local oWsPunto
Local cIdEntP      := ""
Local nFimTp := 0
Local cTpAux := ""
Private cURL       := ""
PRIVATE cCondic    := ""
PRIVATE cCadastro  := STR0001 //"Monitoramento da NFe-Exportacao"
PRIVATE aRotina    := {}
PRIVATE bFiltraBrw
PRIVATE cModeloWS := ""
Private oTmpTable := Nil
PRIVATE nTamPV := TamSX3("F2_PV")[1]

aadd(aPerg,{2,STR0002,PadR("",Len(STR0003)),{STR0004,STR0003},120,".T.",.T.,".T."})  //"Tipo de NFe"###"2-Entrada"###"1-Saída"###"2-Entrada"
aadd(aPerg,{2,STR0005,PadR("",Len(STR0006)),{STR0007,STR0008,STR0009,STR0010,STR0011},120,".T.",.T.,".T."}) //"Filtra"###"1-Autorizadas"###"2-Sem filtro"###"3-Não Autorizadas"###"4-Transmitidas"###"5-Não Transmitidas" //"Filtra"###"5-Não Transmitidas"###"1-Nao Trasmitida"###"2-Autorizada"###"3-Rejeitada"###"4-Cont. Manual"###"5-Sem Filtro"
aadd(aPerg,{1,STR0012,PadR("",Len(SF2->F2_SERIE)),"","ExistCpo('SX5','01' + M->MV_PAR03)","01",".T.",30,.F.})	//"Serie da Nota Fiscal" //"Serie da NFE"
aadd(aPerg,{2,STR0104,PadR("",Len(STR0104)),{STR0106,STR0107,STR0123,STR0126,STR0133,"6-Nacional-CAEA", "7-Nominacion-CAEA"},120,".T.",.T.,".T."})	//"Tipo de Factura Electronica"###"Tipo de Factura Electronica"###"1-Nacional"###"2-Exportacion"###"3-Régimen Nominación"###"4-Regimen de Bono"###"5-Nominación CAEA"
aadd(aPerg,{1,STR0105,PadR("0",nTamPV),"",".T.","",".T.",30,.T.})	//"Ponto de Venda"  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o serviço foi configurado - Somente o Adm pode configurar   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

/// CASO A FUNÇÃO ESTEJA SENDO EXECUTADA AUTOMATICAMENTE
If( lAutoNf )
	cAutMsg := "------------------------------------------------------------------------------------------------------------------"				+ CRLF
	cAutMsg += "- Tipo Trans.: [" + AllTrim(cTipTra) + "] Filtro: [" + AllTrim(cAutFil) + "] Serie:[" + AllTrim(cAutSer) + "] "  				+ CRLF
	cAutMsg += "- Tipo WebService.: [" + AllTrim(cTipoWs) + "] Tipo Fatura:[" + AllTrim(cTipFac) + "] Ponto Venda:[" + AllTrim(cPtoVnd) + "] "
	aAdd( aLogEnv, { cAutMsg, "Linha-0112", DtoS( Date() ) + "|" + Time() } )
	MV_PAR01 	:= AllTrim(cTipTra)
	MV_PAR02 	:= AllTrim(cAutFil)
	MV_PAR03 	:= AllTrim(cAutSer)
	MV_PAR04 	:= AllTrim(cTipoWs)
	MV_PAR05 	:= AllTrim(cPtoVnd)
	lPerg 		:= .T.
Else	
	lPerg := ParamBox(aPerg,"ARGN - NFe",,,,,,,,"ARGNNFE",.T.,.T.)
	cTpAux :=  Alltrim (mv_par04)
	nFimTp := Len(cTpAux) 	
	cTpMetric := substr(cTpAux,3,nFimTp-2)
EndIf
	
If lInit
	If (!IsReady() .Or. !IsReady(,2))
		If PswAdmin( /*cUser*/, /*cPsw*/,RetCodUsr()) == 0		
			ARGNNFeCFG()
		Else
			HelProg(,"FISTRFNFe")
		EndIf
	EndIf

EndIf
cAliasMnt := IIF(SubStr(MV_PAR01,1,1)=="1","SF2","SF1")
cModeloWS := SubStr(MV_PAR04,1,1)				                                		
cURL := FindURL()
if lPerg //Valida se os campos do CAEA foram criados
	lValidUpd := ValidUpd(@cMsgCmp)
endif	

If lEntAtiva .And. (!lInit .Or. IsReady())
	
	If lPerg .And. lValidUpd
	//ParamBox(aPerg,"ARGN - NFe",,,,,,,,"ARGNNFE",.T.,.T.)	
		
		aRotina   := MenuDef()
		If SubStr(MV_PAR01,1,1) == "1"
			aCores    :={{"F2_FLFTEX==' '",'DISABLE' },;	//NF não transmitida
							  {"F2_FLFTEX=='S'",'ENABLE'},;									//NF Autorizada
							  {"F2_FLFTEX=='E'",'BR_AZUL'},;									//rEJEITADA
							  {"F2_FLFTEX=='E'",'BR_AMARELA'},;								//TRANSMITIDA ESPERANDO RETORNO 
							  {"F2_FLFTEX=='M'",'BR_PRETO'}}									//NF nao autorizada
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Realiza a Filtragem                                                     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
							
			cCondic := "F2_FILIAL =='"+xFilial("SF2")+"' "
			cCondic += ".AND. Left(F2_DOC,nTamPV) =='"+Substr(MV_PAR05,1,nTamPV)+"'
			cCondic += ".AND. F2_SERIE =='"+MV_PAR03+"'															
		
				If !(cModeloWS $ "1|5|7")
				cCondic += ".AND. Alltrim(F2_ESPECIE)$'NF|NDC'"     
			Else
				cCondic += ".AND. Alltrim(F2_ESPECIE)$'NF|NDC|NDI|NCI'"   
			EndIf                                                         
			
			If !Empty(MV_PAR03)
				cCondic += ".AND.F2_SERIE=='"+MV_PAR03+"'"
			EndIf
			If SubStr(MV_PAR02,1,1) == "1" //"1-n Transmitida"
				cCondic += ".AND. F2_FLFTEX$' ' "
			ElseIf SubStr(MV_PAR02,1,1) == "2" //"2-Transmitida"
				cCondic += ".AND. F2_FLFTEX$'ST' "
			ElseIf SubStr(MV_PAR02,1,1) == "3" //"Rejeitada"
				cCondic += ".AND. F2_FLFTEX$'E' "  
			ElseIf SubStr(MV_PAR02,1,1) == "4" .And. !(cModeloWS $ "1|5")//"Manual
				cCondic += ".AND. F2_FLFTEX$'M' " 				
			EndIf			
			
			If ExistBlock("FISFILNFE")
				cCondic := ExecBlock("FISFILNFE",.F.,.F.)
			EndIf					
			bFiltraBrw := {|| FilBrowse("SF2",@aIndArqE,@cCondic) }
			Eval(bFiltraBrw)
			
			/// CASO A FUNÇÃO ESTEJA SENDO EXECUTADA AUTOMATICAMENTE
			If( lAutoNf )
				cAutMsg := "- cModeloWS: [" + cModeloWS + "]"	+ CRLF
				aAdd( aLogEnv, { cAutMsg, "Linha-0188", DtoS( Date() ) + "|" + Time() } )
				cAutRet := ARGNNFeRemessa( cModeloWS )
			Else
				mBrowse( 6, 1,22,75,"SF2",,,,,,aCores,/*cTopFun*/,/*cBotFun*/,/*nFreeze*/,/*bParBloco*/,/*lNoTopFilter*/,.F.,.F.,)
			Endif	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Restaura a integridade da rotina                                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SF2")
			RetIndex("SF2")
			dbClearFilter()
			aEval(aIndArqE,{|x| Ferase(x[1]+OrdBagExt())})	
			
			/// CASO A FUNÇÃO ESTEJA SENDO EXECUTADA AUTOMATICAMENTE
			If( lAutoNf )
				Return( cAutRet )
			EndIf		
		Else
			aCores    := {{"F1_FLFTEX==' '",'DISABLE' },;	//NF não transmitida
							  {"F1_FLFTEX=='S'",'ENABLE'},;									//NF Autorizada
							  {"F1_FLFTEX=='E'",'BR_AZUL'},;									//NF Transmitida
	  						  {"F1_FLFTEX=='E'",'BR_AMARELA'},;								//TRANSMITIDA ESPERANDO RETORNO 
							  {"F1_FLFTEX=='M'",'BR_PRETO'}}									//NF nao autorizada           
	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Realiza a Filtragem                                                     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cCondic := "F1_FILIAL=='"+xFilial("SF1")+"' .AND. "
			cCondic += "F1_FORMUL=='S' "
			cCondic += ".AND. Left(F1_DOC,nTamPV) =='"+Substr(MV_PAR05,1,nTamPV)+"'
			cCondic += ".AND. F1_SERIE =='"+MV_PAR03+"'		
			 
			If !(cModeloWS $ "1|5")
				cCondic += ".AND. Alltrim(F1_ESPECIE)$'NCC'"
			Else
		   		cCondic += ".AND. Alltrim(F1_ESPECIE)$'NCC|NCI|NDI'"
			EndIf
			
			If !Empty(MV_PAR03)
				cCondic += ".AND.F1_SERIE=='"+MV_PAR03+"'"
			EndIf
			If SubStr(MV_PAR02,1,1) == "1" //"1-n Transmitida"
				cCondic += ".AND. F1_FLFTEX$' ' "
			ElseIf SubStr(MV_PAR02,1,1) == "2" //"2-Transmitida"
				cCondic += ".AND. F1_FLFTEX$'ST' "
			ElseIf SubStr(MV_PAR02,1,1) == "3" //"Rejeitada"
				cCondic += ".AND. F1_FLFTEX$'E' "              
			ElseIf SubStr(MV_PAR02,1,1) == "4" .And. !(cModeloWS $ "1|5") //"Manual
				cCondic += ".AND. F1_FLFTEX$'M' " 								
			EndIf			
			
			If ExistBlock("FISFILNFE")
				cCondic := ExecBlock("FISFILNFE",.F.,.F.)
			EndIf
			bFiltraBrw := {|| FilBrowse("SF1",@aIndArqE,@cCondic) }
			Eval(bFiltraBrw)
			
			/// CASO A FUNÇÃO ESTEJA SENDO EXECUTADA AUTOMATICAMENTE
			If( lAutoNf )
				cAutMsg := "- cModeloWS: [" + cModeloWS + "]"
				aAdd( aLogEnv, { cAutMsg, "Linha-0250", DtoS( Date() ) + "|" + Time() } )
				cAutRet := ARGNNFeRemessa( cModeloWS )
			Else
				mBrowse( 6, 1,22,75,"SF1",,,,,,aCores,/*cTopFun*/,/*cBotFun*/,/*nFreeze*/,/*bParBloco*/,/*lNoTopFilter*/,.F.,.F.,)
			Endif	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Restaura a integridade da rotina                                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SF1")
			RetIndex("SF1")
			dbClearFilter()
			aEval(aIndArqE,{|x| Ferase(x[1]+OrdBagExt())})
			
			/// CASO A FUNÇÃO ESTEJA SENDO EXECUTADA AUTOMATICAMENTE
			If( lAutoNf )
				Return( cAutRet )
			EndIf			
		EndIf			
	Else
		if !lValidUpd
			Aviso("REMe",STR0174 + cMsgCmp,{"OK"},3)
		endif
		lRetorno := .F.
	EndIf
Else
	HelProg(,"FISTRFNFe")
	lRetorno := .F.
EndIf
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ARGNNfeLeg³Autor  ³ Eduardo Riera         ³ Data ³02.08.2007 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Demonstra a legenda das cores da mbrowse                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina monta uma dialog com a descricao das cores da    ³±±
±±³          ³Mbrowse.                                                     ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ARGNNfeLeg()
Local aLegenda := {}
				

			aCores    := {{"F1_FLFTEX==' '",'DISABLE' },;	//NF não transmitida
						  {"F1_FLFTEX=='S'",'ENABLE'},;									//NF Autorizada
						  {"F1_FLFTEX=='E'",'BR_AZUL'},;									//NF Transmitida
  						  {"F1_FLFTEX=='T'",'BR_AMARELO'},;									//NF Transmitida
						  {"F1_FLFTEX=='M'",'BR_PRETO'}}									//NF nao autorizada



Aadd(aLegenda, {"ENABLE"    ,STR0013})  //"NF Transmitida"
Aadd(aLegenda, {"DISABLE"   ,STR0014})  //"NF Nao transmitida"
Aadd(aLegenda, {"BR_AZUL"   ,STR0125})
Aadd(aLegenda, {"BR_PRETO"  ,STR0015}) //"Cont. Manual"
BrwLegenda(cCadastro,STR0016,aLegenda)  //"Legenda"

Return(.T.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³Eduardo Riera          ³ Data ³18.06.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³	  1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
Private aRotina := {}                  

IF TYPE ("cModeloWS")<> "C"
	cModeloWS:="5"
endif


if (cModeloWS == "5") .Or. (cModeloWS == "7")
                                                                                                      

	aRotina := {    {STR0017,"PesqBrw"       ,0,1,0,.F.},;  //"Pesquisa"
										{"Wiz.Config.","ARGNNFeCfg"    ,0,3,0 ,.F.},; 
										{SubStr(STR0018,1,1)+"&"+SubStr(STR0018,2),"ARGNNFePar"    ,0,3,0 ,NIL},;  //"Parâmetros"###"Parâmetros"
										{STR0019,"ARGNNFeRemessa(cModeloWS)",0,2,0 ,NIL},;  //"Transmissão"
										{STR0020,"ARGNNFe1Mnt" ,0,2,0 ,NIL},;  //"Monitor"
										{STR0127,"ARGNNFeGetCAEA" ,0,3,0 ,NIL},;  //"Solic.CAEA"
										{STR0021 ,"ARGNVisualDoc" ,0,2,0 ,NIL},;  //"Visualiza Doc."
										{STR0022,"ArgNfeM()" ,0,2,0 ,NIL},; //"Manual"								
										{STR0195,"ArgConsCmp" ,0,2,0 ,NIL},; //""Cons.Comp""								
										{STR0016,"ARGNNfeLeg"    ,0,2,0 ,NIL}}  //"Legenda"               

else
	aRotina := {    {STR0017,"PesqBrw"       ,0,1,0,.F.},;  //"Pesquisa"
									{"Wiz.Config.","ARGNNFeCfg"    ,0,2,0 ,NIL},; 
									{SubStr(STR0018,1,1)+"&"+SubStr(STR0018,2),"ARGNNFePar"    ,0,2,0 ,NIL},;  //"Parâmetros"###"Parâmetros"
									{STR0019,"ARGNNFeRemessa",0,2,0 ,NIL},;  //"Transmissão"
									{STR0020,"ARGNNFe1Mnt" ,0,2,0 ,NIL},;  //"Monitor"
									{STR0021 ,"ARGNVisualDoc" ,0,2,0 ,NIL},;  //"Visualiza Doc."
									{STR0022,"ArgNfeM()" ,0,2,0 ,NIL},; //"Manual"								
									{STR0195,"ArgConsCmp" ,0,2,0 ,NIL},; //""Cons.Comp""
									{STR0016,"ARGNNfeLeg"    ,0,2,0 ,NIL}}  //"Legenda"
endif
								
		
If ExistBlock("FISTRFNFE")
	ExecBlock("FISTRFNFE",.F.,.F.)
EndIf

Return(aRotina)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ARGNNFeRem³ Autor ³Eduardo Riera          ³ Data ³21.06.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Rotina de remessa da Nota fiscal eletronica para o Totvs    ³±±
±±³          ³Service ARGN                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ARGNNFeRemessa(cModWS)
Local cRetorno:= " "
Private lAuto	:= IIf( lAutoNf, .T., .F. )
Default cModWS := "0"

/// CASO A FUNÇÃO ESTEJA SENDO EXECUTADA AUTOMATICAMENTE
If( lAutoNf )
	cAutMsg := "- Mod. WS: [" + cModWS + "] Serie: [" + cAutSer + "] Nota Ini: [" + cAutNtI + "] Nota Fim:[" + cAutNtF + "] Var Logic: [.F.,.F.,.T." + "]"
	aAdd( aLogEnv, { cAutMsg, "Linha-0422", DtoS( Date() ) + "|" + Time() } )
	If (cModWS $ '5|7')
		cRetorno := ARGNNFeRe3( cAutSer, cAutNtI, cAutNtF, .F., .F., lAutoNf )
	Else
		cRetorno := ARGNNFeRe2( cAutSer, cAutNtI, cAutNtF, .F., .F., lAutoNf )
	EndIf	
Else
	If (cModWS $ '5|7')
			ARGNNFeRe3()
	Else
			ARGNNFeRe2()		
	EndIf	
Endif

Return(cRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ARGNNFeRe2³ Autor ³Eduardo Riera          ³ Data ³21.06.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Rotina de remessa da Nota fiscal eletronica para o Totvs    ³±±
±±³          ³Service ARGN - utilizada em personalizacoes                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Serie da NF                                          ³±±
±±³          ³ExpC2: Nota inicial                                         ³±±
±±³          ³ExpC3: Nota final                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function ARGNNFeRe2(cSerie,cNotaIni,cNotaFim,lCTe,lRetorno, lAutoNf)

Local aArea       := GetArea()
Local aPerg       := {}
Local aParam      := {Space(Len(SF2->F2_SERIE)),Space(Len(SF2->F2_DOC)),Space(Len(SF2->F2_DOC))}
Local aTexto      := {}
Local aXML        := {}
Local cRetorno    := ""
Local cIdEnt      := ""
Local cModalidade := ""
Local cAmbiente   := ""
Local cVersao     := ""
Local cVersaoCTe  := ""
Local cVersaoDpec := ""
Local cMonitorSEF := ""
Local cSugestao   := ""
Local cURL        := FindURL()
Local nX          := 0
Local lOk         := .T.
Local oWs
Local oWizard
Local cParNfeRem := __cUserID+SM0->M0_CODIGO+SM0->M0_CODFIL+"Factura Exportación"
Default lCTe      := .F.
Default lRetorno  := .F.
Default lAutoNf   := .F.

If cSerie == Nil
	MV_PAR01 := aParam[01] := PadR(ParamLoad(cParNfeRem,aPerg,1,aParam[01]),Len(SF2->F2_SERIE))
	MV_PAR02 := aParam[02] := PadR(ParamLoad(cParNfeRem,aPerg,2,aParam[02]),Len(SF2->F2_DOC))
	MV_PAR03 := aParam[03] := PadR(ParamLoad(cParNfeRem,aPerg,3,aParam[03]),Len(SF2->F2_DOC))	
Else	
	MV_PAR01 := aParam[01] := cSerie
	MV_PAR02 := aParam[02] := cNotaIni
	MV_PAR03 := aParam[03] := cNotaFim
EndIf

aadd(aPerg,{1,STR0078,aParam[01],"",".T.","",".T.",30,.F.})                         
aadd(aPerg,{1,STR0079,aParam[02],"",".T.","",".T.",50,.T.})
aadd(aPerg,{1,STR0080,aParam[03],"",".T.","",".T.",50,.T.}) 

If !Empty(cURL)

	//Verificación de autenticación para versión 12.1.33
	If !ValidFX7(cUrl)
		Return
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Obtem o codigo da entidade                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cIdEnt := GetIdEnt() 
	
	If !Empty(cIdEnt)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Obtem o ambiente de execucao do Totvs Services ARGN                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oWS := WSNFECFGLOC():New()
		oWS:cUSERTOKEN := "TOTVS"
		oWS:cID_ENT    := cIdEnt
		oWS:nAmbiente  := 0	
		oWS:_URL       := AllTrim(cURL)+"/NFECFGLOC.apw"
		lOk := oWS:CFGAMBLOC()
		cAmbiente := oWS:CCFGAMBLOCRESULT

		If lOk
			oWS:cUSERTOKEN := "TOTVS"
			oWS:cID_ENT    := cIdEnt
			oWS:cVersao    := "0.00"
			oWS:_URL       := AllTrim(cURL)+"/NFECFGLOC.apw"
			lOk := oWS:CFGVERLOC()
			cVersao        := oWS:cVERSAO
		EndIf	

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Montagem da Interface                                                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Default cAmbiente :=""
		If( lAutoNf )
			cAutMsg := "- Tabela:[" + aArea[1] + "] Serie:["  + aParam[1] + "] Nota Ini:[" + aParam[2] + "] Nota Fim:[" + aParam[3] + "]"	+ CRLF
			cAutMsg += "- Ambiente: ["+ cAmbiente + "] ID Entid:[" + cIdEnt + "] Modalidade:[" + cModalidade + "] Versao:[" + cVersao + "]"
			aAdd( aLogEnv, { cAutMsg, "Linha-0535", DtoS( Date() ) + "|" + Time() } )

			cRetorno := ARGNNFeTrf( aArea[1], aParam[1], aParam[2], aParam[3], cIdEnt, cAmbiente, cModalidade, cVersao, .F., lCTe, lAutoNf )
		Else
			If ((lOk == .T. .or. lOk == Nil) .And. (!lCTe))
				aadd(aTexto,{})
				aTexto[1] :=STR0081 +" "
				aTexto[1] +=STR0082+CRLF+CRLF
				aTexto[1] +=STR0083+cAmbiente+CRLF
				If !Empty(cSugestao)
					aTexto[1] += CRLF
					aTexto[1] += cSugestao
					aTexto[1] += CRLF
				EndIf			
				aTexto[1] += cMonitorSEF
				aadd(aTexto,{})
		
				DEFINE WIZARD oWizard ;
					TITLE STR0085;
					HEADER STR0086;
					MESSAGE STR0087;
					TEXT aTexto[1] ;
					NEXT {|| .T.} ;
					FINISH {||.T.}
				CREATE PANEL oWizard  ;
					HEADER STR0088 ;
					MESSAGE ""	;
					BACK {|| .T.} ;
					NEXT {|| ParamSave(cParNfeRem,aPerg,"1"),Processa({|lEnd| cRetorno := ARGNNFeTrf(aArea[1],aParam[1],aParam[2],aParam[3],cIdEnt,cAmbiente,cModalidade,cVersao,@lEnd)}),aTexto[02]:= cRetorno,.T.} ;
					PANEL
		    		ParamBox(aPerg,"NFEe - NFe",@aParam,,,,,,oWizard:oMPanel[2],cParNfeRem,.T.,.T.)
				CREATE PANEL oWizard  ;
					HEADER STR0088;
					MESSAGE "";
					BACK {|| .T.} ;
					FINISH {|| .T.} ;
					PANEL
				@ 010,010 GET aTexto[2] MEMO SIZE 270, 115 READONLY PIXEL OF oWizard:oMPanel[3]
				ACTIVATE WIZARD oWizard CENTERED
			ElseIf (lCTe) .And. (lOk)
				ARGNNFeTrf(aArea[1],aParam[1],aParam[2],aParam[3],cIdEnt,cAmbiente,cModalidade,cVersaoCTe,.T., lCTe)
			EndIf
		Endif
		lRetorno := lOk
	Else
		lRetorno := .F.
	EndIf
Else
	If (!lCTe)
		//Aviso("NFEe",STR0087,{" nota(s) em "},3)
		 Aviso("NFFE",STR0298 + CHR(10) + CHR(13) +;  // "No se detectó configuración de conexión con TSS."
					  STR0299 +  CHR(10) + CHR(13) +; // "Por favor, ejecute opción Wizard de Configuración."
					  STR0300 + CHR(10) + CHR(13),;   // "Siga atentamente os passos para a configuração da nota fiscal eletrônica."
					  {"OK"},3)
	Else
		lRetorno := .F.
	EndIf
EndIf

RestArea(aArea)
Return(cRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ARGNNFeTrf³ Autor ³Eduardo Riera          ³ Data ³21.06.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Rotina de remessa da Nota fiscal eletronica para o Totvs    ³±±
±±³          ³Service ARGN                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpC1: Mensagem de retorno                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias da tabela da Mbrowse                           ³±±
±±³          ³ExpC2: Serie                                                ³±±
±±³          ³ExpC3: Nota inicial                                         ³±±
±±³          ³ExpC4: Nota final                                           ³±±
±±³          ³ExpC5: Id da entidade empresarial                           ³±±
±±³          ³ExpC6: Ambiente de emissao da NFe                           ³±±
±±³          ³ExpC7: Modalidade de emissao da NFe                         ³±±
±±³          ³ExpC8: Versa da NFe                                         ³±±
±±³          ³ExpL9: Controle de encerramento                             ³±±
±±³          ³ExpL10: Controle de execucao em Job                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/             	
Function ARGNNFeTrf(cAlias,cSerie,cNotaIni,cNotaFim,cIDEnt,cAmbiente,cModalidade,cVersao,lEnd,lCte,lAuto)

Local aArea     := GetArea()
Local aNotas    := {}
Local aRetNotas := {}
Local cRetorno  := ""
Local aXml      := {}
Local cAliasSF2 := "SF2"
Local cAliasSF1 := "SF1"
Local cWhere    := ""
Local cErro     := ""
Local lQuery    := .F.
Local lRetorno  := .T.
Local nX        := 0
Local nY        := 0
Local nI        := 0
Local nNFes     := 0
Local nXmlSize  := 0
Local dDataIni  := Date()
Local cHoraIni  := Time()
Local cURL      := FindURL() 
Local cEspecie	:= ""
Local lTMSCTe   := SuperGetMv( "MV_TMSCTE", .F., .F. )
Local oWs
Local oWsRN  
Local oWSID
Local oXmlAuth 
Local nUltId
Local cNfCup	:= "CF/SERIE:"									// Identifica que eh Nf sobre Cup
Local aNfCup	:= {{"",CTOD("  /  /  "),"","","","","",""}}	// Array com as Notas sobre cupom
Local nPosAux 	:= 0											// Posicao auxiliar
Local ctipo		:=""
Local nObj		:=0
Local cIdNF		:=	""
Local lPrim		:=.T.
Local cID 		:= ""
Local cWSModelo := ""
Local oWsN    := ""
Local lTFact := .F.
Local lfirst := .T.	
Local nLastEnv := 0
Local cNumNF := 0

Default lCTe    := .f.
Default lAuto   := .F.

Private nLastID := 0

If FindWSServ()== "wsmtxca" //nominacao
	cWSModelo := "3"
Elseif FindWSServ()== "wsbfe" //bono
	cWSModelo := "4"
Else
	cWSModelo := "2"
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a integridade da rotina caso exista filtro             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF(cModeloWS $"1|3|4|5|7") //Nacional , Reg. Nominacion,Bono ou Nacional-CAEA
	oWs := WSWSFEV1():New()
	oWs:cUserToken := "TOTVS"
	oWs:cID_ENT    := cIdEnt
	oWS:_URL       := AllTrim(cURL)+"/WSFEV1.apw"	  	
 	If !(ArgNfDummy(oWs:cUserToken,oWs:cID_ENT,,,, lAuto))
 		Return	
	EndIf	
EndIf

If (!lCTe)
	dbSelectArea(cAlias)
	dbClearFilter()
	RetIndex(cAlias)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Analisa parametros                                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cAmbiente   := SubStr(cAmbiente,1,1)
cModalidade := SubStr(cModalidade,1,1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Filtra as notas fiscais do dia                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cTipo:=IIf(cAlias=="SF2","1","2")
If cTipo=="2"
    If !lAuto
		ProcRegua(Val(cNotaFim)-Val(cNotaIni)+1)
	Else
		cAutMsg := "- Nota Ini:[" + cNotaIni + "] Nota Fim:[" + cNotaFim + "]"
		aAdd( aLogEnv, { cAutMsg, "Linha-0717", DtoS( Date() ) + "|" + Time() } )
	EndIf	
	
	//////INCLUSAO DE CAMPOS NA QUERY////////////			
	cField := "%"
	cField += ",F1_CAEE" 						
	cField += "%"
	//////////////////////////////////////////////	
	
	dbSelectArea("SF1")
	dbSetOrder(1)
	#IFDEF TOP
		cWhere := "%( (SF1.F1_FORMUL='S' ))%"//And SF1.F1_STATUS='C'))%"
		cAliasSF1 := GetNextAlias()
		lQuery    := .T.
		BeginSql Alias cAliasSF1
			
		COLUMN F1_EMISSAO AS DATE
					
		SELECT	F1_FILIAL,F1_EMISSAO,F1_FORMUL,F1_DOC,F1_SERIE,F1_FORNECE,F1_LOJA,F1_ESPECIE,F1_FLFTEX,F1_CAEE,F1_ESPECIE,F1_EMCAEE,F1_TIPO %Exp:cField%		FROM %Table:SF1% SF1
				WHERE
				SF1.F1_FILIAL = %xFilial:SF1% AND
				SF1.F1_SERIE = %Exp:cSerie% AND 
				SF1.F1_DOC >= %Exp:cNotaIni% AND 
				SF1.F1_DOC <= %Exp:cNotaFim% AND 
				%Exp:cWhere% AND 
				SF1.%notdel%
		EndSql
		cWhere := ".T."	
	#ELSE
		MsSeek(xFilial("SF1")+cNotaIni+cSerie,.T.)
	#ENDIF
	cWhere := "(F1_FORMUL='S' ) .And. !(F1_FLFTEX$'SM')"

	While !Eof() .And. xFilial("SF1") == (cAliasSF1)->F1_FILIAL .And.;
		(cAliasSF1)->F1_SERIE == cSerie .And.;
		(cAliasSF1)->F1_DOC >= cNotaIni .And.;
		(cAliasSF1)->F1_DOC <= cNotaFim
	
		dbSelectArea(cAliasSF1)
		If ((cAliasSF1)->F1_FORMUL=="S") .And. aScan(aNotas,{|x| x[3]+x[4]+x[7]==(cAliasSF1)->F1_SERIE+(cAliasSF1)->F1_DOC+(cAliasSF1)->F1_ESPECIE})==0 //.And. (cAliasSF1)->F1_STATUS='C'
			
			If !lAuto
				IncProc("(1/2) "+STR0024+(cAliasSF1)->F1_DOC)  //"Preparando nota: "
			Else	
				cAutMsg := "- Nota(SF1): [" + STR0024 + (cAliasSF1)->F1_DOC + "]"
				aAdd( aLogEnv, { cAutMsg, "Linha-0763", DtoS( Date() ) + "|" + Time() } )
			EndIf
			If  &cWhere
				aadd(aNotas,{})	
				nX := Len(aNotas)
				aadd(aNotas[nX],"0")
				aadd(aNotas[nX],(cAliasSF1)->F1_EMISSAO)
				aadd(aNotas[nX],(cAliasSF1)->F1_SERIE)
				aadd(aNotas[nX],(cAliasSF1)->F1_DOC)
				aadd(aNotas[nX],(cAliasSF1)->F1_FORNECE)
				aadd(aNotas[nX],(cAliasSF1)->F1_LOJA)
				aadd(aNotas[nX],(cAliasSF1)->F1_ESPECIE)
				aadd(aNotas[nX],(cAliasSF1)->F1_TIPO)
					if cModeloWS $ "5|7" .And. SF1->(FieldPos('F1_CAEE')) > 0
					aadd(aNotas[nX],(cAliasSF1)->F1_CAEE)
				else
					aadd(aNotas[nX],"")				
				endif		
			EndIf
		EndIf		
		dbSelectArea(cAliasSF1)
		dbSkip()	
	EndDo
	If lQuery
		dbSelectArea(cAliasSF1)
		dbCloseArea()
		dbSelectArea("SF1")
	EndIf
	
	//-----------------------------------------------------------------//
Else//EndIf
	If !lAuto
		ProcRegua(Val(cNotaFim)-Val(cNotaIni)+1)
	Else	
		cAutMsg := "- Nota Ini:[" + cNotaIni + "] Nota Fim:[" + cNotaFim + "]"	+ CRLF
		aAdd( aLogEnv, { cAutMsg, "Linha-0798", DtoS( Date() ) + "|" + Time() } )
	EndIf
	
	//////INCLUSAO DE CAMPOS NA QUERY////////////			
	cField := "%"	
	cField += ",F2_CAEE" 						
	cField += "%"				
	//////////////////////////////////////////////
		
	dbSelectArea("SF2")
	dbSetOrder(1)
	#IFDEF TOP
		cWhere := "%( (SF2.F2_FORMUL='S'))%"// And SF1.F1_STATUS='C'))%"
					
		cAliasSF2 := GetNextAlias()
		lQuery    := .T.
		BeginSql Alias cAliasSF2
			
		COLUMN F2_EMISSAO AS DATE
					
		SELECT	F2_FILIAL,F2_EMISSAO,F2_FORMUL,F2_DOC,F2_SERIE,F2_CLIENTE,F2_LOJA,F2_ESPECIE	,F2_CAEE,F2_FLFTEX,F2_ESPECIE,F2_TIPO %Exp:cField%	FROM %Table:SF2% SF2
				WHERE
				SF2.F2_FILIAL = %xFilial:SF2% AND
				SF2.F2_SERIE = %Exp:cSerie% AND 
				SF2.F2_DOC >= %Exp:cNotaIni% AND 
				SF2.F2_DOC <= %Exp:cNotaFim% AND 
				%Exp:cWhere% AND 
				SF2.%notdel%
		EndSql
		cWhere := ".T."	
	#ELSE
		MsSeek(xFilial("SF2")+cNotaIni+cSerie,.T.)
	#ENDIF
	cWhere := "(F2_FORMUL='S' ) .And. !(F2_FLFTEX$'SM')"	

	While !Eof() .And. xFilial("SF2") == (cAliasSF2)->F2_FILIAL .And.;
		(cAliasSF2)->F2_SERIE == cSerie .And.;
		(cAliasSF2)->F2_DOC >= cNotaIni .And.;
		(cAliasSF2)->F2_DOC <= cNotaFim
	
		dbSelectArea(cAliasSF2)
		If ((cAliasSF2)->F2_FORMUL=="S") .And. aScan(aNotas,{|x| x[3]+x[4]+x[7]==(cAliasSF2)->F2_SERIE+(cAliasSF2)->F2_DOC+(cAliasSF2)->F2_ESPECIE})==0 
			
			If !lAuto
				IncProc("(1/2) "+STR0024+(cAliasSF2)->F2_DOC)  //"Preparando nota: "
			Else	
				cAutMsg := "- Nota(SF2):[" + STR0024 + (cAliasSF2)->F2_DOC + "]"	+ CRLF
				aAdd( aLogEnv, { cAutMsg, "Linha-0845", DtoS( Date() ) + "|" + Time() } )
			EndIf
			If  &cWhere
				aadd(aNotas,{})	
				nX := Len(aNotas)
	   			aadd(aNotas[nX],"0")
				aadd(aNotas[nX],(cAliasSF2)->F2_EMISSAO)
				aadd(aNotas[nX],(cAliasSF2)->F2_SERIE)
				aadd(aNotas[nX],(cAliasSF2)->F2_DOC)
				aadd(aNotas[nX],(cAliasSF2)->F2_CLIENTE)
				aadd(aNotas[nX],(cAliasSF2)->F2_LOJA)    
				aadd(aNotas[nX],(cAliasSF2)->F2_ESPECIE)
				aadd(aNotas[nX],(cAliasSF2)->F2_TIPO) 
				if cModeloWS == "5"
					aadd(aNotas[nX],(cAliasSF2)->F2_CAEE)
				else
					aadd(aNotas[nX],"")				
				endif	
			EndIf
		EndIf		
		dbSelectArea(cAliasSF2)
		dbSkip()	
	EndDo
	If lQuery
		dbSelectArea(cAliasSF2)
		dbCloseArea()
		dbSelectArea("SF2")
	EndIf
EndIf	
	
If (!lCTe) .And. !lAuto
	ProcRegua(Len(aNotas))
Else	
	cAutMsg := "- Notas Localizadas:[" + StrZero( Len(aNotas),3 ) + "]"
	aAdd( aLogEnv, { cAutMsg, "Linha-0879", DtoS( Date() ) + "|" + Time() } )
EndIf

If lAuto .AND. !lAutoNf
    NfeVldAut(@aNotas)
EndIf

IF(cModeloWS $ "1|5") //Nacional
	oWs := WSWSFEV1():New()

	oWs:cUserToken := "TOTVS"
	oWs:cID_ENT    := cIdEnt
	oWS:_URL       := AllTrim(cURL)+"/WSFEV1.apw"	  	
	ArgNfTotXReq(oWs:cUserToken,oWs:cID_ENT,oWS:_URL)
	  
	oWSE:= WSNFESLOC():New()	  

	cData:=	 FsDateConv(Date(),"YYYYMMDD")
	cData := SubStr(cData,1,4)+"-"+SubStr(cData,5,2)+"-"+SubStr(cData,7)

	oWSE:CDATETIMEGER:=cData+"T00:00:00" 
	oWSE:cDATETIMEEXP:=cData+"T23:59:59"                     

	oWsE:cUserToken := "TOTVS"
	oWsE:cID_ENT    := cIdEnt
	oWSE:_URL       := AllTrim(cURL)+"/NFESLOC.apw"
	oWsE:cCWSSERVICE  := FindWSServ()
	oWSE:GETAUTHREM ()
	
ElseIf (cModeloWS == "2") //Exportação

	oWs := WSWSFEV1():New()

	oWs:cUserToken := "TOTVS"
	oWs:cID_ENT    := cIdEnt
	oWS:_URL       := AllTrim(cURL)+"/WSFEV1.apw"	
	lTFact := ArgNfDummy(oWs:cUserToken,oWs:cID_ENT,oWS:_URL,,, lAuto)
	
	oWS := WSNFESLOC():New()	  

	cData:=	 FsDateConv(Date(),"YYYYMMDD")
	cData := SubStr(cData,1,4)+"-"+SubStr(cData,5,2)+"-"+SubStr(cData,7)

	oWS:CDATETIMEGER:=cData+"T00:00:00" 
	oWS:cDATETIMEEXP:=cData+"T23:59:59"                     

	oWs:cUserToken := "TOTVS"
	oWs:cID_ENT    := cIdEnt
	oWS:_URL       := AllTrim(cURL)+"/NFESLOC.apw"
	oWs:cCWSSERVICE  := FindWSServ()
	oWS:GETAUTHREM ()	  	

	oWs:OWSLOCNFE:OWSNOTASLOC :=  NFESLOC_ARRAYOFLOCNFES():New()

	oWSID :=  WSNFESLOC():New()
	oWSID:cUSERTOKEN := "TOTVS"
	oWSID:cID_ENT    := cIdEnt
	oWSID:_URL       := AllTrim(cURL)+"/NFESLOC.apw"
	lOk := oWSID:GETLASTIDARG ()

	Elseif (cModeloWS $ "3|7") //Reg. Nomin

	oWsRN := WSWSFEV1():New()

	oWsRN:cUserToken := "TOTVS"
	oWsRN:cID_ENT    := cIdEnt
	oWSRN:_URL       := AllTrim(cURL)+"/WSFEV1.apw"	  	
	If cModeloWS == "3"
		ArgNfTotXReq(oWsRN:cUserToken,oWsRN:cID_ENT,oWSRN:_URL)
	EndIf  
	  
	oWSRN:= WSNFESLOC():New()	  

	cData:=	 FsDateConv(Date(),"YYYYMMDD")
	cData := SubStr(cData,1,4)+"-"+SubStr(cData,5,2)+"-"+SubStr(cData,7)

	oWSRN:CDATETIMEGER:=cData+"T00:00:00" 
	oWSRN:cDATETIMEEXP:=cData+"T23:59:59"                     

	oWsRN:cUserToken := "TOTVS"
	oWsRN:cID_ENT    := cIdEnt
	oWSRN:_URL       := AllTrim(cURL)+"/NFESLOC.apw"
	oWsRN:cCWSSERVICE  := FindWSServ()
	oWSRN:GETAUTHREM ()
	
Else

	oWs := WSWSFEV1():New()

	oWs:cUserToken := "TOTVS"
	oWs:cID_ENT    := cIdEnt
	oWS:_URL       := AllTrim(cURL)+"/WSFEV1.apw"	  	
	
	//ArgNfTotXReq(oWs:cUserToken,oWs:cID_ENT)
	  
	oWSE:= WSNFESLOC():New()	  

	cData:=	 FsDateConv(Date(),"YYYYMMDD")
	cData := SubStr(cData,1,4)+"-"+SubStr(cData,5,2)+"-"+SubStr(cData,7)

	oWSE:CDATETIMEGER:=cData+"T00:00:00" 
	oWSE:cDATETIMEEXP:=cData+"T23:59:59"                     

	oWsE:cUserToken := "TOTVS"
	oWsE:cID_ENT    := cIdEnt
	oWSE:_URL       := AllTrim(cURL)+"/NFESLOC.apw"
	oWsE:cCWSSERVICE  := FindWSServ()
	oWSE:GETAUTHREM ()	
	
EndIf    

 If cModeloWS == "4"    		   	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Para o modelo 4 (wsbfe) Bono é passado o ID de envio ³
	//³que é retorno da requisição do método GetLastID      ³
	//³utilizado na função ArgGetID()                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nLastID := ArgGetID("TOTVS",cIdent,"4")
Endif	

For nX := 1 To Len(aNotas)
	//Serie
	//A=1
	//B=2
	//C=3
	//E=4
	//M=5
	//Outro=9
	nLastEnv:=nLastId	
	If Substr(Alltrim(aNotas[nX,3]),1,1) == 'A'
		cIdNF	:=	'1'
	ElseIf	Substr(Alltrim(aNotas[nX,3]),1,1) == 'B'
		cIdNF	:=	'2'
	ElseIf	Substr(Alltrim(aNotas[nX,3]),1,1) == 'C'
		cIdNF	:=	'3'
	ElseIf	Substr(Alltrim(aNotas[nX,3]),1,1) == 'E'
		cIdNF	:=	'4'
	ElseIf	Substr(Alltrim(aNotas[nX,3]),1,1) == 'M'
		cIdNF	:=	'5'
	Else
		cIdNF	:=	'9'
	Endif
	//Tipo
	//19=Normal
	//20=Debito
	//21=Credito
	If aNotas[nX,8] == 'D'
		cIdNF	+=	'21'
	ElseIf aNotas[nX,8] == 'C'
		cIdNF	+=	'20'
	Else			
		cIdNF	+=	'19'
	Endif              
	//Num PV + Nota 
	IF (cModeloWS == "2") 
		cNumNF:=aNotas[nX,4]
		If Len(cNumNF)>12 
			cNumNF:= Subs(cNumNF,2,12)
 		EndIf         
 		cIdNF	+= cNumNF
	Else
		cIdNF	+= aNotas[nX,4]
	EndIf

	If (!lCTe) .And. !lAuto 
		IncProc("(2/2) "+STR0027+aNotas[nX][4])  //"Transmitindo XML da nota: "
	Else	
		cAutMsg := "- [" + STR0027 + aNotas[nX][4] + "]"
		aAdd( aLogEnv, { cAutMsg, "Linha-1036", DtoS( Date() ) + "|" + Time() } )
	EndIf
     
	oWSID :=  WSNFESLOC():New()
	oWSID:cUSERTOKEN := "TOTVS"
	oWSID:cID_ENT    := cIdEnt 
	oWSID:_URL       := AllTrim(cURL)+"/NFESLOC.apw"	
  	nUltId:=	Val(cIdNF)  
    
    SFP->(DbSetOrder(6)  )
    cTipoFB:=Iif(Alltrim(aNotas[nX][7])=="NF","1",Iif(Alltrim(aNotas[nX][7])=="NCC","4","5"))
	cTipoFB:=Iif(Alltrim(aNotas[nX][7])=="NDI","3",Iif(Alltrim(aNotas[nX][7])=="NCI","2",cTipoFB))
	lVldExp:=.F.
	lVldTip:=.F.			
	lVldCAEA := .T.
    
	lVldExp:=Iif ( SFP->(DbSeek(xfilial("SFP")+cfilant+cTipoFB+aNotas[nX][3]+Subs(aNotas[nX][4],1,nTamPV)) ) .And. (SFP->FP_NFEEX$"1|3|4|5"),.T.,.F.) 
	
	If lVldExp
   		lVldTip:= Iif((SFP->FP_NFEEX=="3" .And. cModeloWS == "1" ) .Or. ;
   		 				(SFP->FP_NFEEX=="1".And. cModeloWS == "2"		) .Or. ;
   		 				(SFP->FP_NFEEX=="4" .And. cModeloWS == "3") .Or. ;
				(SFP->FP_NFEEX=="4" .And. cModeloWS == "7") .Or. ;
   		 				(SFP->FP_NFEEX=="5" .And. cModeloWS == "4") .Or. ;
   		 				(SFP->FP_NFEEX=="6" .And. cModeloWS == "5"),.T.,.F.)
    EndIf
    
	if cModeloWS $ "5|7"
    	lVldExp:=.T.
		lVldTip:=.T.
    	if empty( aNotas[nX][9] )
			lVldCAEA := .F.
		endif	
	endif

    cXml :=""
    If  lVldExp .And. lVldTip .And. lVldCAEA
    	If cModeloWS == "4"    		   	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Para o modelo 4 (wsbfe) Bono é passado o ID de envio ³
			//³que é retorno da requisição do método GetLastID      ³
			//³utilizado na função ArgGetID()                       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
			nLastID := ArgGetID("TOTVS",cIdent,"4")
			If lfirst	
				lfirst:=.F.
			Else
				If nLastEnv == nLastId
					nLastId:=nLastId +1
					nLastEnv:=nLastId	
				ElseIf nLastEnv <> nLastId
					While nLastId < nLastEnv
						nLastId:=nLastEnv+1
					EndDo
					nLastEnv:=nLastId	
				EndIf
			Endif
		Endif	
   		cXml :=ExecBlock("NFAEXml001",.F.,.F.,{cTipo,aNotas[nX][3],aNotas[nX][4],aNotas[nX][5],aNotas[nX][6],nUltId,cModeloWS,aNotas[nX][9]})
  
	EndIf

	nPosAux := Ascan( aNfCup,{|x| x[7] == aNotas[nX][3] .AND. x[8] == aNotas[nX][4]}) 
	
	IF (cModeloWS == "2") //exportação 
		If !Empty(cXML)
			nNFes++
			nY++   
			oWs:OWSLOCNFE:OWSNOTASLOC :=  NFESLOC_ARRAYOFLOCNFES():New()
	    	aadd(oWs:OWSLOCNFE:OWSNOTASLOC:OWSLOCNFES,NFESLOC_LOCNFES():New())
		
			oWs:OWSLOCNFE:OWSNOTASLOC:OWSLOCNFES[1]:cID := aNotas[nX][4]+aNotas[nX][3]
			oWs:OWSLOCNFE:OWSNOTASLOC:OWSLOCNFES[1]:cXML:=cXml
			
			aadd(aRetNotas,aNotas[nX])
		        		
			oWsE:=	oWs
	   		If oWsE:REMESSAARG()   
				
	  	   		IF(cModeloWS $ "1|5")
					oWsr := WSWSFEV1():New()
					oWSr:cUSERTOKEN := "TOTVS"
					oWSr:cID_ENT := cIdEnt 
					oWSr:_URL := AllTrim(cURL)+"/WSFEV1.apw
					sleep(5000)
					oWSr:cIdInicial    := aNotas[nX][4]+aNotas[nX][3]
					oWSr:cIdFinal      :=  aNotas[nX][4]+aNotas[nX][3]
			 		lOk := oWSR:MONITORLOC()
					oRetorno := oWsr:OWSMONITORLOCRESULT:OWSMONITOR

		  	   		For nY := 1  To Len(oRetorno:OWSRETCOMP)
		  		        oXml := oRetorno :OWSRETCOMP[nX]
		  		        cSeek:= oXml:CID 
		  		        cSeek:=Padr(cSeek,TamSX3("F2_DOC")[1]+TamSX3("F2_SERIE")[1])
		 				If Type("oXml:NLOTE")<>"U"    
			 					If cAlias=="SF2"
			 						DbSelectArea("SF2")
			 						If DbSeek(xFilial("SF2")+cSeek)
			 							RecLock("SF2") 
		 								F2_XMLNFE	:= Encode64(cXml)
			 							If !Empty(oXml:DCAEFCHVTO)   .And. Empty(F2_EMCAEE )			 								
			 								F2_CAEE		:=oXml:CCAE
			 								F2_EMCAEE   :=oXml:DCAEFCHVTO
			 								F2_FLFTEX	:="S"			 							
			 								MsUnlock()
			 								DbSelectArea("SF3")
			 								DbSetOrder(4)
											If SF3->(FieldPos('F3_CAE'))   >0 .And. SF3->(FieldPos('F3_VCTOCAE'))   >0 .And. (DbSeek(xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE) )
			 							    	While !EOF() .And. xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE ==;
			 							      	  SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
			 							    		RecLock("SF3")
			 							    		F3_CAE:=oXml:CCAE
			 							    		F3_VCTOCAE:=oXml:DCAEFCHVTO
			 							    		MsUnlock()
								    				dbSkip()
			 							    	EndDo	
			 							    EndIf
			 							ElseIf   Empty(F2_EMCAEE )
				 							RecLock("SF2")
				 							F2_FLFTEX:="T"
				 							MsUnlock()			 							
			 							EndIf
			 								MsUnlock()			 							
			 						EndIf
		                        Else 
		                        	 DbSelectArea("SF1")
			                         If DbSeek(xFilial("SF1")+cSeek)
			                        	RecLock("SF1") 
		 								F1_XMLNFE	:= Encode64(cXml)
			 							If !Empty(oXml:DCAEFCHVTO)  .And.  Empty(F1_EMCAEE )			 							
			 								F1_CAEE		:=oXml:CPROTOCOLO 
			 								F1_EMCAEE   :=oXml:DCAEFCHVTO
			 								F1_FLFTEX	:="S"			 								
				 							MsUnlock()
			 								DbSelectArea("SF3")
			 								DbSetOrder(4)
											If SF3->(FieldPos('F3_CAE'))   >0 .And. SF3->(FieldPos('F3_VCTOCAE'))   >0 .And. (DbSeek(xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE) )
			 							    	While !EOF() .And. xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE ==;
			 							      	  SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
			 							    		RecLock("SF3")
			 							    		F3_CAE		:=oXml:CCAE
			 							    		F3_VCTOCAE	:=oXml:DCAEFCHVTO    					 								
			 							    		MsUnlock()
								    				dbSkip()
			 							    	EndDo	
			 							    EndIf
			 							ElseIf   Empty(F1_EMCAEE )
				 							RecLock("SF1")
				 							F1_FLFTEX:="T"
				 							MsUnlock()
			 							EndIf
			 								MsUnlock()			 							
			 						EndIf	
		                        EndIf	
		 				EndIf
			 		
		 			Next nY
		  	   			  	   		
	  	   		Else
					oWSr:= WSNFESLOC():New()
					oWSr:cUSERTOKEN    := "TOTVS"
					oWSr:cID_ENT       := cIdEnt 
					oWSr:_URL          := AllTrim(cURL)+"/NFESLOC.apw"
				    
					sleep(5000)
					oWSr:cIdInicial    := aNotas[nX][4]+aNotas[nX][3]
					oWSr:cIdFinal      :=  aNotas[nX][4]+aNotas[nX][3]
					lOk := oWSr:MONITORLOC()
					oRetorno := oWsr:OWSMONITORLOCRESULT
	  	   		
		  	   		For nY := 1 To Len(oRetorno:OWSMONITORFAC)
		  		        cSeek:= oRetorno:OWSMONITORFAC[nY]:CID
		  		        cSeek:=Padr(cSeek,TamSX3("F2_DOC")[1]+TamSX3("F2_SERIE")[1])
		 				oXml := oRetorno:OWSMONITORFAC[nY]
		 				If Type("oXml:OWSERRO:OWSLOTELOC")<>"U"    
			 				nQt:= Len(oXml:OWSERRO:OWSLOTELOC) 				                                     
			 					If cAlias=="SF2"
			 						DbSelectArea("SF2")
			 						If DbSeek(xFilial("SF2")+cSeek)
		 								RecLock("SF2")
		 								F2_XMLNFE	:= Encode64(cXml)
			 							If !Empty(oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC)   .And. Empty(F2_EMCAEE )			 							
			 								F2_CAEE		:=oXml:CPROTOCOLO  
			 								F2_EMCAEE   :=CTOD(SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,7,2) +"/"+ SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,5,2)+"/"+SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,3,2))
			 								F2_FLFTEX	:="S" 			 								
			 								MsUnlock()
			 								DbSelectArea("SF3")
			 								DbSetOrder(4)
											If SF3->(FieldPos('F3_CAE'))   >0 .And. SF3->(FieldPos('F3_VCTOCAE'))   >0 .And. (DbSeek(xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE) )
			 							    	While !EOF() .And. xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE ==;
			 							      	  SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
			 							    		RecLock("SF3")
			 							    		F3_CAE:=oXml:CPROTOCOLO  
			 							    		F3_VCTOCAE:=CTOD(SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,7,2) +"/"+ SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,5,2)+"/"+SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,3,2)) 
			 							    		MsUnlock()
								    				dbSkip()
			 							    	EndDo	
			 							    EndIf
			 							ElseIf   Empty(F2_EMCAEE )
				 							RecLock("SF2")
				 							F2_FLFTEX:="T"
				 							MsUnlock()
			 							EndIf
			 							MsUnlock()
			 						EndIf
		                        Else 
		                        	 DbSelectArea("SF1")
			                         If DbSeek(xFilial("SF1")+cSeek)
		                        		RecLock("SF1")
		 								F1_XMLNFE	:= Encode64(cXml)
			 							If !Empty(oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_CBTE)  .And.  Empty(F1_EMCAEE )			 							
			 								F1_CAEE		:=oXml:CPROTOCOLO 
			 								F1_EMCAEE   :=CTOD(SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,7,2) +"/"+ SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,5,2)+"/"+SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,3,2))
			 								F1_FLFTEX	:="S"
				 							MsUnlock()
			 								DbSelectArea("SF3")
			 								DbSetOrder(4)
											If SF3->(FieldPos('F3_CAE'))   >0 .And. SF3->(FieldPos('F3_VCTOCAE'))   >0 .And. (DbSeek(xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE) )
			 							    	While !EOF() .And. xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE ==;
			 							      	  SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
			 							    		RecLock("SF3")
			 							    		F3_CAE:=oXml:CPROTOCOLO   
			 							    		F3_VCTOCAE:=CTOD(SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,7,2) +"/"+ SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,5,2)+"/"+SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,3,2)) 
			 							    		MsUnlock()
								    				dbSkip()
			 							    	EndDo	
			 							    EndIf
			 							ElseIf   Empty(F1_EMCAEE )
				 							RecLock("SF1")
				 							F1_FLFTEX:="T"
				 							MsUnlock()
			 							EndIf 
			 							MsUnlock()
			 						EndIf	
		                        EndIf	
		 				EndIf
			 		
		 			Next nY     
		 		EndIf	
			Else
				cErro := GetWscError(3)
				DEFAULT cErro := STR0029 //"Erro indeterminado"
				lRetorno := .F.
				Exit
	        EndIf
			oWs:=oWsE
	    ElseIf !lVldExp .Or. !lVldTip .Or. !lVldCAEA
	         If !lVldExp
	    	 	cErro:= cErro+STR0030 + Subs(aNotas[nX][4],1,nTamPV) + STR0031 +aNotas[nX][4] //"Punto de venta No esta como WebServer"###" factura no transmitida: "
	         ElseIf !lVldTip
		         cErro:= cErro+STR0124 + Subs(aNotas[nX][4],1,nTamPV) + STR0031 +aNotas[nX][4] //"Punto de venta No esta como WebServer"###" factura no transmitida: "		     
	         EndIf
	    EndIf
	    
    Else //nacional ou reg. nomin
    
    	oWS:NPTOVTA:=Val(Subs(aNotas[1][4],1,nTamPV)) 
		If cAlias == "SF2"
			nCbtTP:=TipComp("SF2",SF2->F2_TIPO,Subs(SF2->F2_SERIE,1,1))
        Else
         	nCbtTP:=TipComp("SF1",SF1->F1_TIPO,Subs(SF1->F1_SERIE,1,1))
        Endif
		oWS:nCBTETIPO := nCbtTP
		OWS:cMODELOWS  := cWSModelo
		
		oWs:WSFEV1FECOMPULTIMOAUTORIZADO()  
		If cModeloWS == "7"			
			  If ValType(oWS:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTENRO) == "N" /*.And. lPrim*/ .And.;
				(Val(Subs(aNotas[nX][4],nTamPV+1,8) ) < oWS:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTENRO +1  ) ;
         .And. nCbtTP==oWs:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTETIPO
        
        		MsgAlert(STR0114 +Alltrim(STR(Val(Subs(aNotas[nX][4],nTamPV+1,8))) +" "+aNotas[nX][3]  + STR0115 +;
      	       	Alltrim(Str(oWS:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTENRO))+ STR0116), STR0117)
	        	cXML:=""
      
    	    EndIf
		ElseIf ValType(oWS:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTENRO) == "N" .And. lPrim .And.;
				(Val(Subs(aNotas[nX][4],nTamPV+1,8) ) <> oWS:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTENRO +1  ) ;
				.And. nCbtTP==oWs:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTETIPO
					cXML:=""
        			If !lAuto
						MsgAlert(STR0114 +Alltrim(STR(Val(Subs(aNotas[nX][4],nTamPV+1,8))) +" "+aNotas[nX][3]  + STR0115 +;
							Alltrim(Str(oWS:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTENRO))+ STR0116), STR0117)
					Else	
						cAutMsg := "- Envio automatico de FACTURA " + STR0114 + Alltrim( Str( Val( Subs( aNotas[nX][4], 5, 8 ) ) ) + "|" + aNotas[nX][3] + STR0115)	+ CRLF
						cAutMsg += AllTrim( Str( oWS:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTENRO ) ) + STR0116													+ CRLF
						aAdd( aLogEnv, { cAutMsg, "Linha-1313", DtoS( Date() ) + "|" + Time() } )
					EndIf
      
			EndIf			
  		lPrim:=.F.
    	If !Empty(cXML)
			nNFes++
			nY++					
			
			aadd(aRetNotas,aNotas[nX])						
		   
			If (cModeloWS == "4")
				oWS:cUSERTOKEN    := "TOTVS"
				oWS:cID_ENT       := cIdEnt
				oWS:cMODELO       := cWSModelo
				oWS:nPTOVTA       := Val(MV_PAR05)	
				oWS:_URL       := AllTrim(cURL)+"//WSFEV1.apw."						
					oWS:nCBTETIPO     := nCbtTP				
				
				oWS:OWSNFEARG:OWSNOTASLOC := WSFEV1_ARRAYOFNFESARG():New()
				
				aadd(oWS:OWSNFEARG:OWSNOTASLOC:OWSNFESARG,WSFEV1_NFESARG():New())
				
				oWS:OWSNFEARG:OWSNOTASLOC:OWSNFESARG[1]:CID := aNotas[nX][4]+aNotas[nX][3]
				oWS:OWSNFEARG:OWSNOTASLOC:OWSNFESARG[1]:CXML := cXml 			
			Else
			
				oWS:cUSERTOKEN    := "TOTVS"
				oWS:cID_ENT       := cIdEnt
				oWS:cMODELO       := cWSModelo
				oWS:nPTOVTA       := Val(MV_PAR05)	
				oWS:_URL       := AllTrim(cURL)+"//NFESLOC.apw."						
					oWS:nCBTETIPO     := nCbtTP				
				
				oWS:OWSNFEARG:OWSNOTASLOC := WSFEV1_ARRAYOFNFESARG():New()
				
				aadd(oWS:OWSNFEARG:OWSNOTASLOC:OWSNFESARG,WSFEV1_NFESARG():New())
				
				oWS:OWSNFEARG:OWSNOTASLOC:OWSNFESARG[1]:CID := aNotas[nX][4]+aNotas[nX][3]
				oWS:OWSNFEARG:OWSNOTASLOC:OWSNFESARG[1]:CXML := cXml			
			
			Endif	
			
			oWsE:=	oWs
			oWsE:_URL:=AllTrim(cURL)+"/WSFEV1.apw"	
		    
			if cModeloWS == "5"
				lRet :=	oWsE:WSFEV1FECAEAREGINFORMATIVO()
				ElseIf cModeloWS == "7"
				   lRet :=	   oWsE:WSFEV1FECAEAINFORMARCOMPROBANTE() 
			else
				lRet :=	oWsE:REMESSAWSFE()							
			endif            
	   		If lRet
				oWSr:= WSWSFEV1():New()
				oWSr:cUSERTOKEN    := "TOTVS"
				oWSr:cID_ENT       := cIdEnt
				//oWSr:cMODELO := IIf(cModeloWS=="4","04",cModeloWS)						
		  		oWSr:cMODELO       := cWSModelo //modelo nacional
				oWSr:nPTOVTA       := Val(MV_PAR05)
				oWSr:_URL       := AllTrim(cURL)+"/WSFEV1.apw"
			 	oWS:nCBTETIPO := nCbtTP
        
				sleep(5000)          
				oWSr:cIdInicial    := aNotas[nX][4]+aNotas[nX][3]
				oWSr:cIdFinal      :=  aNotas[nX][4]+aNotas[nX][3]
				lOk := oWSr:MONITORLOC()
				oRetorno := oWSr:OWSMONITORLOCRESULT:OWSMONITOR:OWSRETCOMP
	  	   	 	
	  	   		For nI := 1 To Len(oRetorno)
	  		        cSeek:= oRetorno[nI]:CID   
	  		        cSeek:=Padr(cSeek,TamSX3("F2_DOC")[1]+TamSX3("F2_SERIE")[1])
	  		        cEspecie := ""
	  		        dVencCaea := CTOD(" / / ")
	 				If cAlias=="SF2"
		 				DbSelectArea("SF2")
		 				If DbSeek(xFilial("SF2")+cSeek)
		 					RecLock("SF2") 
		 					F2_XMLNFE	:= Encode64(cXml)	
		 					MsUnlock() 	 				
		 					If ( !Empty(oRetorno[nI]:DCAEFCHVTO) .And. Empty(F2_EMCAEE ) ) .Or. ( !Empty( oRetorno[nI]:CCAE ) .And. cModeloWS == "5")
		 						RecLock("SF2")
		 						if !cModeloWS == "5"
			 						dVencCaea := oRetorno[nI]:DCAEFCHVTO
			 						F2_CAEE		:=oRetorno[nI]:CCAE
			 						F2_EMCAEE  	:=dVencCaea			 									 						
			 					else
			 						dVencCaea := F2_EMCAEE
			 						oRetorno[nI]:CCAE := F2_CAEE 			 						
	 					  		endif		 						
		 						F2_FLFTEX	:="S"
		 						MsUnlock()		 					
		 						
		 						if cModeloWS == "5"
		 							ArgAtuCG6(cFilant,,,,F2_CAEE,F2_SERIE,F2_DOC)
								endif		 					  		
		 					
		 						DbSelectArea("SF3")
		 						DbSetOrder(4)
									If SF3->(FieldPos('F3_CAE'))   >0 .And. SF3->(FieldPos('F3_VCTOCAE'))   >0 .And. (DbSeek(xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE) )
		 					    	While !EOF() .And. xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE ==;
		 					      	  SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
		 				    			RecLock("SF3")
		 					    		F3_CAE		:=oRetorno[nI]:CCAE
		 					    		F3_VCTOCAE	:=dVencCaea		 					    				 					    		
		 					    		MsUnlock()                          		 					    	
										dbSkip()                            										
		 					    	EndDo	                                	 					    		 					    			 					    	
		 					    EndIf
		 					ElseIf Empty(F2_EMCAEE ) .And. cModeloWS == "5" .And. F2_FLFTEX <> "E" //Para 5-NACIONAL-CAEA, ja rejeito pois o processo é sincrono
								RecLock("SF2")
			 					F2_FLFTEX:="E"
			 					MsUnlock() 
		 					ElseIf Empty(F2_EMCAEE )  .And. cModeloWS <> "5" .And. F2_FLFTEX <> "T"
			 					RecLock("SF2")
			 					F2_FLFTEX:="T"
			 					MsUnlock()
		 					EndIf
		 				EndIf	

	                Else 
	                	DbSelectArea("SF1")
		                If DbSeek(xFilial("SF1")+cSeek)
		                    RecLock("SF1")
		                    F1_XMLNFE	:= Encode64(cXml)
		                    MsUnlock()    	
		 					If ( !Empty(oRetorno[nI]:DCAEFCHVTO) .And. Empty(F1_EMCAEE ) )  .Or. ( !Empty( oRetorno[nI]:CCAE ) .And. cModeloWS == "5") 
		 					    
		 					    RecLock("SF1")
		 						if !cModeloWS == "5"
			 						dVencCaea := oRetorno[nI]:DCAEFCHVTO
			 						F1_CAEE		:=oRetorno[nI]:CCAE
			 						F1_EMCAEE  	:=dVencCaea
			 					else
			 						dVencCaea := F1_EMCAEE
			 						oRetorno[nI]:CCAE := F1_CAEE 			 						
	 					  		endif		 						
		 						F1_FLFTEX	:="S"
		 						MsUnlock()	
		 						
		 						if cModeloWs == "5"
		 							ArgAtuCG6(cFilant,,,,F1_CAEE,F1_SERIE,F1_DOC)
		 						endif	
		 						
		 						DbSelectArea("SF3")
		 						DbSetOrder(4)
									If SF3->(FieldPos('F3_CAE'))   >0 .And. SF3->(FieldPos('F3_VCTOCAE'))   >0 .And. (DbSeek(xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE) )
		 					    	While !EOF() .And. xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE ==;
		 					      	  SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
		 					    		RecLock("SF3")
		 					    		F3_CAE		:=oRetorno[nI]:CCAE
		 					    		F3_VCTOCAE	:=oRetorno[nI]:DCAEFCHVTO		 					    		
		 					    		MsUnlock()
										dbSkip()
		 					    	EndDo		 					    			 					    		
		 					    EndIf
		 			        ElseIf Empty(F1_EMCAEE ) .And. cModeloWS == "5" .And. F1_FLFTEX <> "E" //Para 5-NACIONAL-CAEA, ja rejeito pois o processo é sincrono
								RecLock("SF1")
			 					F1_FLFTEX:="E"
			 					MsUnlock()		 			        	
		 					ElseIf   Empty(F1_EMCAEE ) .And. F1_FLFTEX <> "T"
			 					RecLock("SF1")
			 					F1_FLFTEX:="T"
			 					MsUnlock()
		 					EndIf 
		 					MsUnlock()
		 				EndIf
		 			EndIf	
	 			Next nY
			Else
				cErro := GetWscError(3)
				DEFAULT cErro := STR0029 //"Erro indeterminado"
				lRetorno := .F.
				Exit
	        EndIf
			oWs:=oWsE
	    ElseIf !lVldExp .Or. !lVldTip .Or. !lVldCAEA
	    	If !lVldExp
    	 		cErro:= cErro+STR0030 + Subs(aNotas[nX][4],1,nTamPV) + STR0031 +aNotas[nX][4] //"Punto de venta No esta como WebServer"###" factura no transmitida: "
			ElseIf !lVldTip
         		cErro:= cErro+"Ponto de Venda não é do mesmo tipo de Nota Selecionada ( Nacional/Exportação)" + Subs(aNotas[nX][4],1,nTamPV) + STR0031 +aNotas[nX][4] //"Punto de venta No esta como WebServer"###" factura no transmitida: "	
   			ElseIf !lVldCAEA
				cErro:= cErro+STR0177 + STR0031 +aNotas[nX][4] //"CAEA no encontrado para transmision del comprobante. "###" " Documento no transmitido "
			EndIf
	    EndIf
    EndIf
	nLastEnv:=nLastId
      
Next nX
If lRetorno
	cRetorno := STR0032+CRLF //"Você concluíu com sucesso a transmissão do Protheus para o Totvs Services ARGN."
	cRetorno += STR0033 +CRLF+CRLF //"Verifique se as notas foram autorizadas , utilizando a rotina 'Monitor'. Antes de imprimir "
	cRetorno +=STR0034+AllTrim(Str(nNFes,18))+STR0035+IntToHora(SubtHoras(dDataIni,cHoraIni,Date(),Time()))+CRLF+CRLF //"Foram transmitidas "###" nota(s) em "
	cRetorno += cErro
	ArgNfMtr(cTpMetric,nNFes)	
Else
	cRetorno := STR0036+CRLF+CRLF  //"Houve erro durante a transmissão para o Totvs Services ARGN."
	cRetorno += cErro
EndIf

If (!lCTe) .And. !lAuto
	Eval(bFiltraBrw)
Else	
	If( Empty( cErro ) )
		cRetorno += "[.TSMOK.]"
	EndIf
EndIF

If Len(aNotas) > 0 .And. lRetorno
	Sleep(5000)
	WsNFeMnt(cIdEnt,1,{cSerie, cNotaIni, cNotaFim},,.F.)
EndIf

RestArea(aArea)

Return(cRetorno)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ARGNNFePar³ Autor ³Eduardo Riera          ³ Data ³18.06.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Parametriza o  Totvs Services para a nota fiscal eletronica ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ARGNNFePar()

Local oWs
Local aPerg  := {}

Local aCombo1:= {}

Local cCombo1:= ""
Local aCombo2:={}
Local cCombo2:= ""
Local cCombo3:= ""
Local cCombo4:= ""
Local cCombo5:= ""
Local cIdEnt := ""
Local cURL        := FindURL()
Local ntempo:=0
Local cParNfePar := SM0->M0_CODIGO+SM0->M0_CODFIL+"Factura Exportación"

aadd(aCombo1,STR0118) 
aadd(aCombo1,STR0119) 
aadd(aCombo2,STR0120)
aadd(aCombo2,STR0121) 
 
If !Empty(cURL) //.and. IsReady()

	//Verificación de autenticación para versión 12.1.33
	If !ValidFX7(cUrl)
		Return
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Obtem o codigo da entidade                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	cIdEnt := GetIdEnt() 
	
	If !Empty(cIdEnt)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Obtem o ambiente                                                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
		oWS :=  WSNFECFGLOC():New()
		oWS:cUSERTOKEN := "TOTVS"
		oWS:cID_ENT    := cIdEnt
		oWS:nAmbiente  := 0	
		oWS:_URL       := AllTrim(cURL)+"/NFECFGLOC.apw"              
		oWS:CFGAMBLOC()         
		cCombo1 := oWS:CCFGAMBLOCRESULT
		
		If SubStr(cCombo1,1,1) == "1"
			cCombo1 := STR0118	
		else
			cCombo1 := STR0119
		Endif 
		
		aadd(aPerg,{2,"Ambiente",cCombo1,aCombo1,120,".T.",.T.,".T."}) 
		
		aParam := {SubStr(cCombo1,1,1),SubStr(cCombo2,1,1),cCombo3,cCombo4,cCombo5,nTempo}
		If ParamBox(aPerg,"ARG - NFEe",aParam,,,,,,,cParNfePar,.T.,.F.)
			oWS:cUSERTOKEN := "TOTVS"
			oWS:cID_ENT    := cIdEnt
			oWS:nAmbiente  := Val(aParam[1])
			oWS:_URL       :=  AllTrim(cURL)+"/NFECFGLOC.apw"   
			oWS:CFGAMBLOC()
		EndIf
	EndIf
Else

		Aviso("NFFE",STR0298 + CHR(10) + CHR(13) +;  // "No se detectó configuración de conexión con TSS."
					  STR0299 +  CHR(10) + CHR(13) +; // "Por favor, ejecute opción Wizard de Configuración."
					  STR0300 + CHR(10) + CHR(13),;   // "Siga atentamente os passos para a configuração da nota fiscal eletrônica."
					  {"OK"},3)

EndIf

Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ARGNNFeCFG³ Autor ³Eduardo Riera          ³ Data ³18.06.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Configura o Totvs Services para a nota fiscal eletronica    ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ARGNNFeCFG()

Local oWizard
Local oCombo 
Local cURL        := FindURL()
Local cCert     := Space(250)
Local cKey      := Space(250)
Local cModulo   := Space(250)
Local cPassWord := Space(24)
Local cCombo    := ""
Local cSlot     := Space(4)
Local cLabel    := Space(250)
Local aTexto    := {}
Local aPerg     := {}
Local aPerg2    := {}
Local aParam    := {}
Local aParam2   := {}
Local cTpNfe    := ""

aadd(aParam,PadR(SuperGetMv("MV_RELSERV"),250))
If SuperGetMv("MV_RELAUTH",,.F.)
	aadd(aParam,PadR(SuperGetMv("MV_RELACNT",,""),250))
Else
	aadd(aParam,PadR(SuperGetMv("MV_RELFROM",,""),250))
EndIf
aadd(aParam,PadR(SuperGetMv("MV_RELPSW"),250))
aadd(aParam,PadR(SuperGetMv("MV_RELFROM",,""),250))
aadd(aParam,SuperGetMv("MV_RELAUTH",,.F.))
aadd(aParam,PadR("",250))
aadd(aParam,SuperGetMv("MV_RELSSL",,.F.))

aadd(aPerg,{1,STR0037,aParam[1],"",".T.","",".T.",120,.F.})	 //"Servidor SMTP"
aadd(aPerg,{1,STR0038,aParam[2],"",".T.","",".T.",120,.F.})	 //"Login do e-mail"
aadd(aPerg,{1,STR0039,aParam[3],"",".T.","",".T.",120,.F.})	 //"Senha"
aadd(aPerg,{1,STR0040,aParam[4],"",".T.","",".T.",120,.F.})	 //"Conta de e-mail"
aadd(aPerg,{4,STR0041,aParam[5],STR0042,040,".T.",.F.})      //"Autenticação"###"Requerida"
aadd(aPerg,{1,STR0043,aParam[6],"",".T.","",".T.",120,.F.})	 //"Conta de e-mail de notificação"
aadd(aPerg,{4,STR0044,aParam[7],STR0045,040,".T.",.F.})     //"Utilizar conexão segura?" //"Utilizar conexão segura?"###"Sim"


aadd(aParam2,PadR(SuperGetMv("MV_RELSERV"),250))
If SuperGetMv("MV_RELAUTH",,.F.)
	aadd(aParam2,PadR(SuperGetMv("MV_RELACNT",,""),250))
Else
	aadd(aParam2,PadR(SuperGetMv("MV_RELFROM",,""),250))
EndIf
aadd(aParam2,PadR(SuperGetMv("MV_RELPSW"),250))
aadd(aParam2,SuperGetMv("MV_RELSSL",,.F.))

aadd(aPerg2,{1,STR0046,aParam2[1],"",".T.","",".T.",120,.F.})	 //"Servidor POP"
aadd(aPerg2,{1,STR0038,aParam2[2],"",".T.","",".T.",120,.F.})	 //"Login do e-mail"
aadd(aPerg2,{1,STR0039,aParam2[3],"",".T.","",".T.",120,.F.})	 //"Senha"
aadd(aPerg2,{4,STR0044,aParam2[4],STR0045,040,".T.",.F.}) //"Utilizar conexão segura?"###"Sim"

If PswAdmin( /*cUser*/, /*cPsw*/,RetCodUsr()) == 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem da Interface                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aadd(aTexto,{})
	aTexto[1] := STR0047+CRLF //"Esta rotina tem como objetivo ajuda-lo na configuração da integração com o Protheus com o serviço Totvs Services ARGN. "
	aTexto[1] += STR0048 //"O primeiro passo é configurar a conexão do Protheus com o serviço."
	
	aadd(aTexto,{})
	aTexto[2] :=  STR0049 //"Você concluíu com sucesso a configuração da integração do Protheus para o Totvs Services."
	
	DEFINE WIZARD oWizard ;
		TITLE STR0050; //"Assistente de configuração da Nota Fiscal Eletrônica"
		HEADER STR0051; //"Atenção"
		MESSAGE STR0052;  //"Siga atentamente os passos para a configuração da nota fiscal eletrônica."
		TEXT aTexto[1] ;
		NEXT {|| .T.} ;
		FINISH {||.T.}
	
	CREATE PANEL oWizard  ;
		HEADER STR0050; //"Assistente de configuração da Nota Fiscal Eletrônica"
		MESSAGE ""	;
		BACK {|| .F.} ;
		NEXT {|| IsReady(cURL,3,.T.)} ;
		PANEL
		
	@ 010,010 SAY STR0053 SIZE 270,010 PIXEL OF oWizard:oMPanel[2]  //"Informe a URL do servidor Totvs Services"
	@ 025,010 GET cURL SIZE 270,010 PIXEL OF oWizard:oMPanel[2]
	
	CREATE PANEL oWizard  ;
		HEADER STR0050; //"Assistente de configuração da Nota Fiscal Eletrônica"
		MESSAGE ""	;
		BACK {|| .T.} ;
		NEXT {|| IsCDReady(@oCombo:nAt,@cCert,@cKey,@cPassWord,@cSlot,@cLabel,@cModulo)} ;
		PANEL

	@ 005,010 SAY STR0054 SIZE 270,010 PIXEL OF oWizard:oMPanel[3]  //"Informe o tipo de certificado digital"
	@ 005,105 COMBOBOX oCombo VAR cCombo ITEMS {STR0055} SIZE 120,010 OF oWizard:oMPanel[3] PIXEL  //"Formato PFX(.pfx o .p12)"
	@ 020,010 SAY STR0056 SIZE 270,010 PIXEL OF oWizard:oMPanel[3]  //"Informe o nome do arquivo do certificado digital"
	@ 030,010 GET cCert SIZE 240,010 PIXEL OF oWizard:oMPanel[3] WHEN oCombo:nAt <> 3
	TButton():New( 030,250,STR0057,oWizard:oMPanel[3],{||cCert := cGetFile(STR0058,STR0059,0,"",.T.,GETF_LOCALHARD),.T.},29,12,,oWizard:oMPanel[3]:oFont,,.T.,.F.,,.T., ,, .F.)  //"Drive: "###"Arquivos(.PFX)|*.PFX|Arquivos(.P12)|*.P12"###"Selecione o certificado"
	@ 050,010 SAY STR0060 SIZE 270,010 PIXEL OF oWizard:oMPanel[3]  //"Informe o nome do arquivo da private key"
	@ 060,010 GET cKey SIZE 240,010 PIXEL OF oWizard:oMPanel[3] WHEN oCombo:nAt <> 1
	TButton():New( 060,250,STR0057,oWizard:oMPanel[3],{||cKey := cGetFile(STR0061,STR0059,0,"",.T.,GETF_LOCALHARD),.T.},29,12,,oWizard:oMPanel[3]:oFont,,.T.,.F.,,.T., ,, .F.)  //"Drive: "###"Arquivos .PEM |*.PEM"###"Selecione o certificado"
	@ 080,010 SAY STR0062 SIZE 100,010 PIXEL OF oWizard:oMPanel[3]  //"Slot do certificado digital"	
	@ 080,100 GET cSlot SIZE 060,010 PIXEL OF oWizard:oMPanel[3] WHEN oCombo:nAt == 3 PICTURE "9999"		
//	@ 080,162 SAY STR0108 SIZE 100,010 PIXEL OF oWizard:oMPanel[3]  //"Tipo de Nota Fiscal Eletronica"
//	@ 080,235 COMBOBOX oComboNfe VAR cTpNfe ITEMS {STR0109,STR0110} SIZE 45,010 OF oWizard:oMPanel[3] PIXEL  //"1-Nacional 2-Exportação"		
	@ 095,010 SAY STR0063 SIZE 100,010 PIXEL OF oWizard:oMPanel[3]  //"Label do certificado digital"
	@ 095,100 GET cLabel SIZE 060,010 PIXEL OF oWizard:oMPanel[3] WHEN oCombo:nAt == 3
	@ 110,010 SAY STR0064 SIZE 270,010 PIXEL OF oWizard:oMPanel[3]  //"Informe senha do arquivo digital"
	@ 110,110 GET cPassWord SIZE 060,010 PIXEL OF oWizard:oMPanel[3] PASSWORD
	@ 125,010 SAY STR0065 SIZE 270,010 PIXEL OF oWizard:oMPanel[3]  //"Informe o nome do arquivo do modulo HSM"
	@ 125,120 GET cModulo SIZE 100,010 PIXEL OF oWizard:oMPanel[3] WHEN oCombo:nAt == 3

	
	CREATE PANEL oWizard  ;
		HEADER STR0050; //"Assistente de configuração da Nota Fiscal Eletrônica"
		MESSAGE ""	;
		BACK {|| oWizard:SetPanel(2),.T.} ;
		NEXT {|| IsMailReady(1,aParam[1],aParam[2],aParam[3],aParam[4],aParam[5],aParam[6],aParam[7])} ;
		PANEL
		
	ParamBox(aPerg,STR0066,@aParam,,,,,,oWizard:oMPanel[4],"NFEeSMTP",.T.,.T.) //"ARG - NFEe"
	
	CREATE PANEL oWizard  ;
		HEADER STR0050; //"Assistente de configuração da Nota Fiscal Eletrônica"
		MESSAGE ""	;
		BACK {|| oWizard:SetPanel(2),.T.} ;
		NEXT {|| IsMailReady(2,aParam2[1],aParam2[2],aParam2[3],,,,aParam2[4])} ;
		PANEL
		
	ParamBox(aPerg2,STR0066,@aParam2,,,,,,oWizard:oMPanel[5],"NFEePOP",.T.,.T.) //"ARG - NFEe"
	
	CREATE PANEL oWizard  ;
		HEADER STR0050; //"Assistente de configuração da Nota Fiscal Eletrônica"
		MESSAGE "";
		BACK {|| oWizard:SetPanel(2),.T.} ;
		FINISH {|| lOk := .T.} ;
		PANEL
	@ 010,010 GET aTexto[2] MEMO SIZE 270, 115 READONLY PIXEL OF oWizard:oMPanel[6]
	
	ACTIVATE WIZARD oWizard CENTERED
Else
	Help( "", 1, "SEMPERM" )
EndIf

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³IsReady   ³ Autor ³Eduardo Riera          ³ Data ³18.06.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verifica se a conexao com a Totvs ARGN Services pode ser    ³±±
±±³          ³estabelecida                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: URL do Totvs Services ARGN                        OPC³±±
±±³          ³ExpN2: nTipo - 1 = Conexao ; 2 = Certificado             OPC³±±
±±³          ³ExpL3: Exibe help                                        OPC³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function CTIsRead(cURL,nTipo)
Return(IsReady(cURL,nTipo))

Static Function IsReady(cURL,nTipo)

Local lRetorno := .t.
DEFAULT nTipo := 1
	
	If (cModeloWS == "2") //exportacao
		If !Empty(cURL) .And. !PutMV("MV_ARGEURL",cURL)
			RecLock("SX6",.T.)
			SX6->X6_FIL     := xFilial( "SX6" )
			SX6->X6_VAR     := "MV_ARGEURL"
			SX6->X6_TIPO    := "C"
			SX6->X6_DESCRIC := "URL ARGN NFe"
			MsUnLock()
			PutMV("MV_ARGEURL",cURL)
		EndIf
	ElseIf (cModeloWS $ "1|5")	//nacional
		If !Empty(cURL) .And. !PutMV("MV_ARGNEURL",cURL)
			RecLock("SX6",.T.)
			SX6->X6_FIL     := xFilial( "SX6" )
			SX6->X6_VAR     := "MV_ARGNEURL"
			SX6->X6_TIPO    := "C"
			SX6->X6_DESCRIC := "URL ARGN NFe NAC."
			MsUnLock()
			PutMV("MV_ARGEURL",cURL)
		EndIf
	Elseif (cModeloWS $ "3|7")   //reg. nominacao
		If !Empty(cURL) .And. !PutMV("MV_ARGNOUR",cURL)
			RecLock("SX6",.T.)
			SX6->X6_FIL     := xFilial( "SX6" )
			SX6->X6_VAR     := "MV_ARGNOUR"
			SX6->X6_TIPO    := "C"
			SX6->X6_DESCRIC := "URL ARGN NFe REG.NOM.."
			MsUnLock()
			PutMV("MV_ARGNOUR",cURL)
		EndIf
	Else //bono
		If !Empty(cURL) .And. !PutMV("MV_ARGNBUR",cURL)
			RecLock("SX6",.T.)
			SX6->X6_FIL     := xFilial( "SX6" )
			SX6->X6_VAR     := "MV_ARGNBUR"
			SX6->X6_TIPO    := "C"
			SX6->X6_DESCRIC := "URL ARGN NFe Bono.."
			MsUnLock()
			PutMV("MV_ARGNBUR",cURL)
		EndIf    			  
	EndIf
   
	SuperGetMv() //Limpa o cache de parametros - nao retirar

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o servidor da Totvs esta no ar                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³IsCDReady ³ Autor ³Eduardo Riera          ³ Data ³18.06.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verifica se o certificado digital foi transferido com suces-³±±
±±³          ³so                                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: [1] PEM; [2] PFX                                     ³±±
±±³          ³ExpC2: Certificado digital                                  ³±±
±±³          ³ExpC3: Private Key                                          ³±±
±±³          ³ExpC4: Password                                             ³±±
±±³          ³ExpC5: Slot                                                 ³±±
±±³          ³ExpC6: Label                                                ³±±
±±³          ³ExpC7: Modulo                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function IsCDReady(nTipo,cCert,cKey,cPassWord,cSlot,cLabel,cModulo)

Local oWS
Local cIdEnt   := ""
Local lRetorno := .T.
Local cURL        := FindURL()

	//Verificación de autenticación para versión 12.1.33
	If !ValidFX7(cUrl)
		Return .F.
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Obtem o codigo da entidade                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (!Empty(cCert) .And. !Empty(cPassWord) .And. nTipo == 1) ;
	 .Or. !IsReady(,2)
	cIdEnt := AllTrim(GetIdEnt())
	If nTipo <> 3 .And. !File(cCert)
		Aviso("NFEE","Arquivo não encontrado",{"OK"},3) 
		lRetorno := .F.
	EndIf
	
	If !Empty(cIdEnt) .And. lRetorno .And. nTipo <> 3
		oWs:= WSNFECFGLOC()():New()
		oWs:cUSERTOKEN   := "TOTVS"
		oWs:cID_ENT      := cIdEnt
		oWs:cCertificate := FsLoadTXT(cCert)
		oWs:cPASSWORD    := AllTrim(cPassWord)
		oWS:_URL         := AllTrim(cURL)+"/NFECFGLOC.apw"
		If oWs:CFGLOCCERTPFX()
			Aviso("NFEE",oWS:CCFGLOCCERTPFXRESULT,{"OK"},3)
		Else
			lRetorno := .F.
			Aviso("NFEE",IIf(Empty(GetWscError(3)),GetWscError(1),GetWscError(3)),{"OK"},3)
		EndIf	
	EndIf

EndIf
Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³IsMailRead³ Autor ³Eduardo Riera          ³ Data ³18.08.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verifica se a conexao com a Totvs Sped Services pode ser    ³±±
±±³          ³estabelecida - Mail                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Tipo de servidor - 1 SMTP ; 2 POP                    ³±±
±±³          ³ExpC2: Servidor                                             ³±±
±±³          ³ExpC3: Login                                                ³±±
±±³          ³ExpC4: Senha                                                ³±±
±±³          ³ExpC5: Conta de envio                                       ³±±
±±³          ³ExpL6: Requer autenticacao                                  ³±±
±±³          ³ExpC7: Email de notificacao                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function IsMailReady(nTipo,cServer,cLogin,cSenha,cFrom,lAuth,cAdmin,lSSL)

Local lRetorno := .T.
DEFAULT lAuth      := .F.
DEFAULT cLogin := ""
DEFAULT lSSL   := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Obtem o codigo da entidade                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³GetIdEnt  ³ Autor ³Eduardo Riera          ³ Data ³18.06.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Obtem o codigo da entidade apos enviar o post para o Totvs  ³±±
±±³          ³Service                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpC1: Codigo da entidade no Totvs Services                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GetIdEnt(cCodFil,cAviso,lAviso)

Local aArea  := GetArea()
Local cIdEnt := ""
Local cURL        := FindURL()
Local oWs

Default cCodFil	:= ""
Default cAviso		:= ""
Default lAviso		:= .T.


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄJÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Obtem o codigo da entidade                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


oWs:=WSNFECFGLOC():New() 
oWS:cUSERTOKEN := "TOTVS"
oWS:_URL       := AllTrim(cURL)+"/NFECFGLOC.apw"	

if !Empty(cCodFil)
	SM0->(dbSetOrder(1))
	SM0->( dbSeek(cEmpant + cCodFil ) )
endif


oWs:=WSNFECFGLOC():New() 
oWS:cUSERTOKEN := "TOTVS"
oWS:_URL       := AllTrim(cURL)+"/NFECFGLOC.apw"	
oWs:oWSEMPRESA:cCUIT       := IIF(SM0->M0_TPINSC==2 .Or. Empty(SM0->M0_TPINSC),SM0->M0_CGC,"")	
oWS:oWSEMPRESA:cCODFIL 	   := FWGETCODFILIAL
oWS:oWSEMPRESA:cINSCRPROVI := SM0->M0_INSC		
oWS:oWSEMPRESA:cNOME       := SM0->M0_NOMECOM
oWS:oWSEMPRESA:cFANTASIA   := SM0->M0_NOME
oWS:oWSEMPRESA:cENDERECO   := FisGetEnd(SM0->M0_ENDENT)[1]
oWS:oWSEMPRESA:cNUM        := FisGetEnd(SM0->M0_ENDENT)[3]
oWS:oWSEMPRESA:cCOMPL      := FisGetEnd(SM0->M0_ENDENT)[4]
oWs:oWSEMPRESA:cCODPROVINC := SM0->M0_ESTENT  // pegar codigo
oWS:oWSEMPRESA:cCP         := SM0->M0_CEPENT
oWS:oWSEMPRESA:cCOD_PAIS   := "063"               
oWS:oWSEMPRESA:cBAIRRO     := SM0->M0_BAIRENT
oWS:oWSEMPRESA:CNUM        := SM0->M0_CIDENT        
oWs:oWSEMPRESA:cREGMUN     := ""  // rEGIME mUN
oWs:oWSEMPRESA:cDDN        := Str(FisGetTel(SM0->M0_TEL)[2],3)
oWS:oWSEMPRESA:cFONE       := AllTrim(Str(FisGetTel(SM0->M0_TEL)[3],15))
oWS:oWSEMPRESA:cFAX        := AllTrim(Str(FisGetTel(SM0->M0_FAX)[3],15))
oWS:oWSEMPRESA:cEMAIL      := UsrRetMail(RetCodUsr())                                      
//oWS:oWSEMPRESA:cDESCPROVINC 	:= "BA"//SA1->A1_


oWS:_URL := AllTrim(cURL)+"/NFECFGLOC.apw"

If  oWS:ADMEMPLOC()
	cIdEnt  := oWS:CADMEMPLOCRESULT
Elseif lAviso
	Aviso("NFEE",IIf(Empty(GetWscError(3)),GetWscError(1),GetWscError(3)),{"OK"},3)	
Else
	cAviso := IIf(Empty(GetWscError(3)),GetWscError(1),GetWscError(3))
EndIf

oWs := Nil
DelClassIntF()

RestArea(aArea)
Return(cIdEnt)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ARGNNFe1Mn³ Autor ³Eduardo Riera          ³ Data ³21.06.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Rotina de monitoramento da NFe - por faixa                  ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ 27/03/09 ³ Adalberto     ³A rotina ARGNNFe6Mnt antiga ARGNNFe1Mnt,sera³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´chamada tanto pelo fonte ARGNNFE quando pelo³±±
±±³                          ³TMSA200. Quando a rotina eh chamada pelo    ³±±
±±³                          ³ARGNNFE, a funcao recebe internamente os    ³±±
±±³                          ³parametros:cAlias, nReg, nOpc, aStruct e re-³±±
±±³                          ³cebe de forma explicita os parametros:      ³±±
±±³                          ³cSerie,cNotaIni,cNotaFim, lCTe quando chama-³±±
±±³                          ³da pelo TMSA200.                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ARGNNFe1Mnt()
	ARGNNFe6Mnt()   // desenvolver
Return

Function ARGNNFe6Mnt(cSerie,cNotaIni,cNotaFim, lCTe, lAutoNf )

Local cIdEnt   := ""
Local aPerg    := {}
Local aParam   := {Space(Len(SF2->F2_SERIE)),Space(Len(SF2->F2_DOC)),Space(Len(SF2->F2_DOC))}
Local aSize    := {}
Local aObjects := {}
Local aListBox := {}
Local aInfo    := {}
Local aPosObj  := {}
Local oWS
Local oDlg                           
Local oListBox
Local oBtn1
Local oBtn2
Local oBtn3
Local oBtn4
Local cParNfeRem := SM0->M0_CODIGO+SM0->M0_CODFIL+STR0067 //"Factura Exportación"
Local lOK        := .F.
Local cUrl       := ""
Default cSerie   := ''
Default cNotaIni := ''
Default cNotaFim := ''
Default lCTe     := .F.
Default lAutoNf  := .F.

Private cModeloWS := iIf( lAutoNf , cTipoWs, cModeloWS )

cUrl:= FindURL()

aadd(aPerg,{1,STR0068,aParam[01],"",".T.","01",".T.",30,.F.}) //"Serie da Nota Fiscal"
aadd(aPerg,{1,STR0069,aParam[02],"",".T.","",".T.",50,.T.})   //"Nota fiscal inicial"
aadd(aPerg,{1,STR0070,aParam[03],"",".T.","",".T.",50,.T.})   //"Nota fiscal final"

aParam[01] := ParamLoad(cParNfeRem,aPerg,1,aParam[01])
aParam[02] := ParamLoad(cParNfeRem,aPerg,2,aParam[02])
aParam[03] := ParamLoad(cParNfeRem,aPerg,3,aParam[03])

	If !Empty(cURL)//IsReady()

	//Verificación de autenticación para versión 12.1.33
	If !ValidFX7(cUrl)
		Return
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Obtem o codigo da entidade                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	cIdEnt := GetIdEnt()
	If !Empty(cIdEnt)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Instancia a classe                                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty(cIdEnt)
			If (lCTe) .And. !Empty(cSerie) .And. !Empty(cNotaIni) .And. !Empty(cNotaFim)
				aParam[01] := cSerie
				aParam[02] := cNotaIni
				aParam[03] := cNotaFim
				lOK        := .T.
			Else 
				lOK        := ParamBox(aPerg,"ARG - NFEe",@aParam,,,,,,,cParNfeRem,.T.,.T.)
			EndIf
			
			If (lOK)
				aListBox := WsNFeMnt(cIdEnt,1,aParam)
				If( lAutoNf )
					If( Len(aListBox) == 0 )
						cAutRet := "Nenhuma Nfe a ser transmitida." + CRLF + "Serie[" + cSerie + "] - Nf Ini[" + cNotaIni + "] - Nf Fim[" + cNotaFim + "]" 
					Else				
						cAutRet := AllTrim(aListBox[1][2]) + "|" + AllTrim(aListBox[1][3]) + "|" + AllTrim(aListBox[1][4]) + "|" + AllTrim(aListBox[1][5]) + "|" + AllTrim(aListBox[1][6]) + "|" + AllTrim(aListBox[1][7])
					EndIf
					cAutMsg := "- RETORNO:[" + cAutRet + "]"	+ CRLF
					aAdd( aLogEnv, { cAutMsg, "Linha-2131", DtoS( Date() ) + "|" + Time() } )
					Return(cAutRet)
				Else
					If !Empty(aListBox)
						aSize := MsAdvSize()
						aObjects := {}
						AAdd( aObjects, { 100, 100, .t., .t. } )
						AAdd( aObjects, { 100, 015, .t., .f. } )
				
						aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
						aPosObj := MsObjSize( aInfo, aObjects )
											
						DEFINE MSDIALOG oDlg TITLE "ARG - NFEe" From aSize[7],0 to aSize[6],aSize[5] OF oMainWnd PIXEL
					
						@ aPosObj[1,1],aPosObj[1,2] LISTBOX oListBox Fields HEADER "", "NF",STR0071,STR0072,STR0073,STR0074,STR0075,STR0076; //"Ambiente"###"Modalidade"###"Protocolo"###"Recomendação"###"Tempo decorrido"###"Tempo SEF"
							SIZE aPosObj[1,4]-aPosObj[1,2],aPosObj[1,3]-aPosObj[1,1] PIXEL
						oListBox:SetArray( aListBox )
						oListBox:bLine := { || { aListBox[ oListBox:nAT,1 ],aListBox[ oListBox:nAT,2 ],aListBox[ oListBox:nAT,3 ],aListBox[ oListBox:nAT,4 ],aListBox[ oListBox:nAT,5 ],aListBox[ oListBox:nAT,6 ],aListBox[ oListBox:nAT,7 ]} }
					
						@ aPosObj[2,1],aPosObj[2,4]-040 BUTTON oBtn1 PROMPT "OK"   	 		ACTION oDlg:End() OF oDlg PIXEL SIZE 035,011 //"OK"
						@ aPosObj[2,1],aPosObj[2,4]-080 BUTTON oBtn4 PROMPT "Refresh" 		ACTION (aListBox := WsNFeMnt(cIdEnt,1,aParam),oListBox:nAt := 1,IIF(Empty(aListBox),oDlg:End(),oListBox:Refresh())) OF oDlg PIXEL SIZE 035,011 
						@ aPosObj[2,1],aPosObj[2,4]-120 BUTTON oBtn4 PROMPT "Schema"  		ACTION (ArgNfSchema(cIdEnt,aListBox[ oListBox:nAT,2 ],IIF(Len(aListBox[ oListBox:nAT]) >=9 ,aListBox[ oListBox:nAT,9 ],""))) OF oDlg PIXEL SIZE 035,011 //"Schema"
				
						ACTIVATE MSDIALOG oDlg			
	   	 
					EndIf
				Endif	
			EndIf
		EndIf
	Else
		If( lAutoNf )
			cAutRet := "NFFE" + STR0298 + "|" + STR0299 + "|" + STR0300
			cAutMsg := "- RETORNO:[" + cAutRet + "]"																									+ CRLF
			aAdd( aLogEnv, { cAutMsg, "Linha-2164", DtoS( Date() ) + "|" + Time() } )
			Return(cAutRet)
		Else
			Aviso("NFFE",STR0298 + CHR(10) + CHR(13) +;  // "No se detectó configuración de conexión con TSS."
					  STR0299 +  CHR(10) + CHR(13) +; // "Por favor, ejecute opción Wizard de Configuración."
					  STR0300 + CHR(10) + CHR(13),;   // "Siga atentamente os passos para a configuração da nota fiscal eletrônica."
					  {"OK"},3)
		Endif			  
	EndIf
Else
	If( lAutoNf )
		cAutRet := "NFFE" + STR0298 + "|" + STR0299 + "|" + STR0300
		cAutMsg := "- RETORNO:[" + cAutRet + "]"																									+ CRLF
		aAdd( aLogEnv, { cAutMsg, "Linha-2177", DtoS( Date() ) + "|" + Time() } )
		Return(cAutRet)
	Else
		Aviso("NFFE",STR0298 + CHR(10) + CHR(13) +;  // "No se detectó configuración de conexión con TSS."
			  STR0299 +  CHR(10) + CHR(13) +; // "Por favor, ejecute opción Wizard de Configuración."
			  STR0300 + CHR(10) + CHR(13),;   // "Siga atentamente os passos para a configuração da nota fiscal eletrônica."
			  {"OK"},3)
	Endif		  
EndIf

Return

Static Function WsNFeMnt(cIdEnt,nModelo,aParam,lCTe,lVldList)

Local aListBox := {}
Local aMsg     := {}
Local nX       := 0
Local nY       := 0
Local cURL        := FindURL()
Local lOk      := .T.  
Local oOk      := LoadBitMap(GetResources(), "ENABLE")
Local oNo      := LoadBitMap(GetResources(), "DISABLE") 
Local oWS
Local oRetorno
Local cAlias := cAliasMnt

Private oXml
Default lCTe   := .F.
Default lVldList := .T.

IF(cModeloWS $ "1|3|4|5")
	oWs := WSWSFEV1():New()
	oWS:cUSERTOKEN := "TOTVS"
	oWS:cID_ENT := cIdEnt 
	oWS:_URL := AllTrim(cURL)+"/WSFEV1.apw"	
	If nModelo == 1 	
		oWS:cIdInicial    := aParam[02]+aParam[01]
		oWS:cIdFinal      := aParam[03]+aParam[01]	
		lOk := oWS:MONITORLOC()
		sleep(10000)                                                                 
		oRetorno := oWs:OWSMONITORLOCRESULT:OWSMONITOR						
	EndIf 	
Else
	oWS:= WSNFESLOC():New()                   
	oWS:cUSERTOKEN    := "TOTVS"
	oWS:cID_ENT       := cIdEnt 
	oWS:_URL          := AllTrim(cURL)+"/NFESLOC.apw"
	If nModelo == 1
		oWS:cIdInicial    := aParam[02]+aParam[01]
		oWS:cIdFinal      := aParam[03]+aParam[01]
		lOk := oWS:MONITORLOC()		
   		oRetorno := oWs:OWSMONITORLOCRESULT
	EndIf                             
EndIf
If (lOk)
	dbSelectArea("SF3")
	dbSetOrder(5)
    IF(cModeloWS $ "1|3|4|5") //nacional,reg. nomin,bono e nominacion CAEA
		For nX := 1 To Len(oRetorno:OWSRETCOMP)
	  		aMsg := {}
	 		oXml := oRetorno :OWSRETCOMP[nX]
	 		If Type("oXml:NLOTE")<>"U" .And. cModeloWS <> "5"
		 		If oXml:NLOTE<>0
		 			nPos:=0
		 			nPos:= aScan(aMsg,{|x| x[4]==oXml:CID})
			 		If nPos>0
			 			aMsg[nPos][1]:=oXml:NLOTE 
			 			aMsg[nPos][2]:=oXml:CERRO
			 			aMsg[nPos][3]:=oXml:CRECOMENDACAO
			 			aMsg[nPos][4]:=oXml:CID
			 			aMsg[nPos][5]:=oXml:DCAEFCHVTO
			 			aMsg[nPos][6]:=oXml:COBSERVACOES
		 			Else
		 				aadd(aMsg,{oXml:NLOTE,oXml:CERRO,oXml:CRECOMENDACAO,;
		 							oXml:CID,;
		 							oXml:DCAEFCHVTO,;
		 							oXml:COBSERVACOES})
					EndIf                                                                
				    aAliasAtu:=GetArea()
					cSeek:= oXml:CID 				                                     
	 				cSeek:=Padr(cSeek,TamSX3("F2_DOC")[1]+TamSX3("F2_SERIE")[1])
	 				If cAlias =="SF2" 
	 					DbSelectArea("SF2")
	 					If DbSeek(xFilial("SF2")+cSeek) .And. Empty(F2_EMCAEE) 
	 						RecLock("SF2")
	 						F2_CAEE		:=oXml:CCAE
	 						F2_EMCAEE    :=oXml:DCAEFCHVTO
	 						F2_FLFTEX	:=Iif(!Empty(oXml:CCAE),"S","E")
	 						MsUnlock()   
	 						DbSelectArea("SF3")
							DbSetOrder(4)
							If DbSeek(xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE)
						    	While !EOF() .And. xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE ==;
						      	  SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
					    			RecLock("SF3")
	 							    F3_CAE:=oXml:CCAE
	 							    F3_VCTOCAE:=oXml:DCAEFCHVTO
	 							    MsUnlock()
						    		dbSkip()
	 							 EndDo	
	 						EndIf
	 					EndIf
					Else 
						DbSelectArea("SF1")
						If DbSeek(xFilial("SF1")+cSeek) .And. Empty(F1_EMCAEE) 
							RecLock("SF1")
							F1_CAEE		:=oXml:CCAE
	 						F1_EMCAEE    :=oXml:DCAEFCHVTO
	 						F1_FLFTEX	:=Iif(!Empty(oXml:CCAE),"S","E")
	 						MsUnlock()   
	 						
	 						DbSelectArea("SF3")
							DbSetOrder(4)
							
								If SF3->(FieldPos('F3_CAE'))   >0 .And. SF3->(FieldPos('F3_VCTOCAE'))   >0 .And. (DbSeek(xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE) )
						    	While !EOF() .And. xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE ==;
	 								SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
	 							    RecLock("SF3")
									F3_CAE:=oXml:CCAE
	 							    F3_VCTOCAE:=oXml:DCAEFCHVTO
	 							    MsUnlock()
				    				dbSkip()
	 							EndDo	
							EndIf
						EndIf	
	                EndIf	
	 				If ExistBlock("ARGMNTASF")
	 					ExecBlock("ARGMNTASF",.f.,.f.,{cAlias,cModeloWS})
	 				Endif
	 				RestArea(aAliasAtu)
				EndIf                      
			EndIf                                                                       
			
	 		nPos:=0
	 		nPos:= aScan(aListBox,{|x| x[2]==oXml:CID})
	        If nPos >0
	            If Substr(oXml:cID,TamSX3("F2_DOC")[1]+1) == Alltrim(aParam[01])
		        	aListBox[nPos][1]:=IIf(Empty(oXml:CCAE),oNo,oOk)
	   	        	aListBox[nPos][2]:=oXml:cID
	   	        	aListBox[nPos][3]:=IIf(oXml:nAMBIENTE==1,STR0089,STR0090)
	   	        	aListBox[nPos][4]:=STR0091
	   	        	aListBox[nPos][5]:=oXml:CCAE
	   	        	aListBox[nPos][6]:=PadR(oXml:CRECOMENDACAO,250)
	   	        	aListBox[nPos][7]:=PadR(oXml:CRESULTADO,250)
	   	        	aListBox[nPos][8]:=aMsg
	   	        	aListBox[nPos][9]:=oXml:CXML
	   	        EndIf	
	    	Else
	    		If Substr(oXml:cID,TamSX3("F2_DOC")[1]+1) == Alltrim(aParam[01])
	   	 	   		aadd(aListBox,{ IIf(Empty(oXml:CCAE),oNo,oOk),;
	   				  		oXml:cID,;
	   				  		IIf(oXml:nAMBIENTE==1,STR0089,STR0090),; //"Produção"###"Homologação"
	   				  		STR0091,;
	   				  		oXml:CCAE,;
	   				  		PadR(oXml:CRECOMENDACAO,250),;
	   				  		PadR(oXml:CRESULTADO,250),; 
				  			aMsg,; 
	   				  		oXml:CXML})
	   			EndIf  		
	    	EndIf				
		Next nX
		If ExistBlock("ARGMNTNFE")
			ExecBlock("ARGMNTNFE",.f.,.f.,{oXml,aMsg, cModeloWS})
		Endif
    Else
    
	    For nX := 1 To Len(oRetorno:OWSMONITORFAC)
	  		aMsg := {}
	 		oXml := oRetorno:OWSMONITORFAC[nX]
	 		If Type("oXml:OWSERRO:OWSLOTELOC")<>"U"
		 		For nY := 1 To Len(oXml:OWSERRO:OWSLOTELOC) 				                            
	 				If oXml:OWSERRO:OWSLOTELOC[nY]:NLOTE<>0
		 				aadd(aMsg,{oXml:OWSERRO:OWSLOTELOC[nY]:NLOTE,oXml:OWSERRO:OWSLOTELOC[nY]:NCODENVLOTE,oXml:OWSERRO:OWSLOTELOC[nY]:CMSGENVLOTE,;
		 							oXml:OWSERRO:OWSLOTELOC[nY]:CAUTH_ID,;
		 							oXml:OWSERRO:OWSLOTELOC[nY]:CFHC_CBTE,oXml:OWSERRO:OWSLOTELOC[nY]:CFHC_VENC,;
		 							oXml:OWSERRO:OWSLOTELOC[nY]:CMOTI_OBS})
					
					   aAliasAtu:=GetArea()                          
						nQt:= Len(oXml:OWSERRO:OWSLOTELOC)
						cSeek:= oRetorno:OWSMONITORFAC[nX]:CID 				                                     
		 				cSeek:=Padr(cSeek,TamSX3("F2_DOC")[1]+TamSX3("F2_SERIE")[1])
		 				If cAlias =="SF2" 
		 					DbSelectArea("SF2")
		 					If DbSeek(xFilial("SF2")+cSeek) .And. Empty(F2_EMCAEE)
		 						RecLock("SF2")
		 						F2_CAEE:=oXml:CPROTOCOLO 
		 						F2_EMCAEE    :=CTOD(SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,7,2) +"/"+ SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,5,2)+"/"+SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,3,2))
		 						F2_FLFTEX:=Iif(!Empty(oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_CBTE),"S","E")
		 						MsUnlock()   
		 						DbSelectArea("SF3")
								DbSetOrder(4)
									If SF3->(FieldPos('F3_CAE'))   >0 .And. SF3->(FieldPos('F3_VCTOCAE'))   >0 .And. (DbSeek(xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE) )
							    	While !EOF() .And. xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE ==;
							      	  SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
						    			RecLock("SF3")
		 							    F3_CAE:=oXml:CPROTOCOLO 
		 							    F3_VCTOCAE:=CTOD(SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,7,2) +"/"+ SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,5,2)+"/"+SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,3,2)) 
		 							    MsUnlock()
							    		dbSkip()
		 							 EndDo	
		 						EndIf
		 					EndIf
	                    Else 
	                    	DbSelectArea("SF1")
		                	 If DbSeek(xFilial("SF1")+cSeek) .And. Empty(F1_EMCAEE)
					         	RecLock("SF1")
		 						F1_CAEE:=oXml:CPROTOCOLO 
		 						F1_EMCAEE :=CTOD(SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,7,2) +"/"+ SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,5,2)+"/"+SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,3,2))
		 						F1_FLFTEX:=Iif(!Empty(oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_CBTE ),"S","E")
		 						MsUnlock()   
		 						DbSelectArea("SF3")
								DbSetOrder(4)
								If DbSeek(xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE)
								    	While !EOF() .And. xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE ==;
	 							      	  SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
	 							    		RecLock("SF3")
	 							    		F3_CAE:=oXml:CPROTOCOLO   
	 							    		F3_VCTOCAE:=CTOD(SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,7,2) +"/"+ SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,5,2)+"/"+SUBS (oXml:OWSERRO:OWSLOTELOC[nQt]:CFHC_VENC,3,2)) 
	 							    		MsUnlock()
						    				dbSkip()
	 							    	EndDo	
	 							    EndIf
		 					EndIf	
	                    EndIf	 
		 				If ExistBlock("ARGMNTASF")
		 					ExecBlock("ARGMNTASF",.f.,.f.,{cAlias,cModeloWS})
	 					Endif
		 				RestArea(aAliasAtu)
					EndIf
	 			
	 			Next nY
			EndIf
	    	If Substr(oXml:cID,TamSX3("F2_DOC")[1]+1) == Alltrim(aParam[01]) 
	    		aadd(aListBox,{ IIf(Empty(oXml:cPROTOCOLO),oNo,oOk),;
	    						oXml:cID,;
	    						IIf(oXml:nAMBIENTE==1,STR0089,STR0090),; //"Produção"###"Homologação"
	    						STR0091,;
	    						oXml:cPROTOCOLO,;
	    						PadR(oXml:cRECOMENDACAO,250),;
	    						PadR(oXml:OWSERRO:OWSLOTELOC[ Len(oXml:OWSERRO:OWSLOTELOC)]:CMSGENVLOTE,250),;
	    						aMsg,;
	    						IIf (Type("oXml:CXMLRET") <> "U",oXml:CXMLRET,"")})
	    	EndIF					
	    Next nX
			If ExistBlock("ARGMNTNFE")
				ExecBlock("ARGMNTNFE",.f.,.f.,{oXml,aMsg, cModeloWS})
			Endif
    EndIf      
EndIf    
If Empty(aListBox) .And. lVldList
	If lAutoNf
		cAutRet := "NFEe: [" + STR0092 + "]"
		cAutRet += "Serie [" + aParam[01] + "] - Nf Ini[" + aParam[02] + "] - Nf Fim[" + aParam[03] + "]"
		aAdd( aLogEnv, { cAutRet, "Linha-2422", DtoS( Date() ) + "|" + Time() } )     
	Else
		Aviso("NFEe",STR0092,{"OK"})
	EndIf
EndIf
   
Return(aListBox)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³FsLoadTxt ³ Autor ³Eduardo Riera          ³ Data ³24.10.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao de leitura de arquivo texto para anexar ao layout    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExC1: Arquivo texto                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Nome do arquivo texto com path                       ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function FsLoadTXT(cFileImp)

Local cTexto := ""
Local nHandle := 0
Local nTamanho := 0

	nHandle := FOpen(cFileImp)
	nTamanho := Fseek(nHandle,0,FS_END)
	FSeek(nHandle,0,FS_SET)
	FRead(nHandle,@cTexto,nTamanho)
	FClose(nHandle)

Return(cTexto)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ARGNVisual³ Autor ³Marcelo Alexandre      ³ Data ³20.02.2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Botao para visualizar documentos de saida                   ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ARGNVisualDoc(cAlias)
Local cperg4:= MV_PAR04
Local cperg5:= MV_PAR05

If cAlias == "SF2"
	If AllTrim(SF2->F2_ESPECIE)=="RFN"
		LocxNf(50,,,2,"ARGNFE",,2)
	Else
		LocxNf(Iif(SF2->F2_TIPO=="N",1,2),,,2,"ARGNFE",,2)
	EndIf
ElseIf cAlias == "SF1"
	If AllTrim(SF1->F1_ESPECIE)=="RFD"
		LocxNf(ntpdoc,,,2,"ARGNFE",,2)
	Else
		LocxNf(4,,,2,"ARGNFE",,2)
	EndIf
EndIf
 
Eval(bFiltraBrw)	  

MV_PAR04:=cperg4
MV_PAR05:=cperg5
Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ARGNFiltro³ Autor ³Marcelo Alexandre      ³ Data ³23.02.2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Botao para alterar o filtro do browse                       ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/ 
Function ARGNFiltro()

INCLUI    := .F.
lBtnFiltro:= .T.
CloseBrowse()

Return Nil


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ARGNNSeLeg³Autor  ³ Cleber Stenio         ³ Data ³16.09.2009 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Demonstra a legenda das cores da mbrowse                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina monta uma dialog com a descricao das cores da    ³±±
±±³          ³Mbrowse.                                                     ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ARGNNSeLeg()
Local aLegenda := {}
//				{{"F1_FLFTEX==' '",'DISABLE' },;	
//						  {"F1_FLFTEX=='S'",'ENABLE'},;
//						  {"F1_FLFTEX=='E'",'BR_AZUL'},;
//						  {"F1_FLFTEX=='M'",'BR_PRETO'}}	

Aadd(aLegenda, {"ENABLE"    ,STR0093}) 
Aadd(aLegenda, {"DISABLE"   ,STR0094}) 
Aadd(aLegenda, {"BR_AZUL"   ,STR0095}) 
Aadd(aLegenda, {"BR_PRETO"  ,STR0096})	
BrwLegenda(cCadastro,STR0097,aLegenda) 
Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NfeVldAut³ Autor ³ Roberto Souza         ³ Data ³15.02.2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validação de transmissão para notas em modo automatico      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function NfeVldAut(aNotas)
Local aNotasOk := {}
Local Ny       := 0  
Local cStatNf  := " "+GetNewPar("MV_NFEAUTR","")

DbSelectArea("SF2")
DbSetOrder(1)
For Ny := 1 to len(aNotas)
	If DbSeek(xFilial("SF2")+aNotas[nY][4]+aNotas[nY][3]+aNotas[nY][5]+aNotas[nY][6]) .And. SF2->F2_FLFTEX$ cStatNf//"N, "
		aadd(aNotasOk,aNotas[nY])	
	EndIf
Next	             

aNotas := aNotasOk

Return

Function ArgNfeM()
Local cCod:=Space(14)
Local dData:= dDataBAse    
LOCAL oDlg
Local cAlias := cAliasMnt             
Local 	lMa:=.F. 

If  cAlias=="SF2"
	If !Empty(F2_CAEE)
	lMa:=.T.
	EndIf        
Else	
	If !Empty(F1_CAEE)
		lMa:=.T.	
	EndIf	
EndIf

If lMa
	MsgStop(STR0098,"HELP")
	Return()
EndIf

SFP->(DbSetOrder(6))
lVldExp:=.F.          
cTipo:=""


	If  cAlias == "SF1"
			cTipo:=Iif(Alltrim( SF1->F1_ESPECIE)=="NF" ,"1",Iif(Alltrim( SF1->F1_ESPECIE)=="NCC","4","5"))  
			cTipo:=Iif(Alltrim( SF1->F1_ESPECIE)=="NDI","3",Iif(Alltrim( SF1->F1_ESPECIE)=="NCI","2",cTipo))
		lVldExp:=Iif ( SFP->(FieldPos('FP_NFEEX'))   >0  .And. SFP->(DbSeek(xfilial("SFP")+cfilant+cTipo+SF1->F1_SERIE+Subs(SF1->F1_DOC,1,nTamPV)) ).And. SFP->FP_NFEEX$"2|3" ,.T.,.F.)
		       
		If  !lVldExp
	    	
	   		MsGStop(STR0099 + 	Subs(SF1->F1_DOC,1,nTamPV)  + STR0100,"Tipo")
		    Return()
		EndiF
	Else
		cTipo:=Iif(Alltrim( SF2->F2_ESPECIE)=="NF","1",Iif(Alltrim( SF2->F2_ESPECIE)=="NCC","4","5"))
		cTipo:=Iif(Alltrim( SF2->F2_ESPECIE)=="NDI","3",Iif(Alltrim( SF2->F2_ESPECIE)=="NCI","2",cTipo))
		lVldExp:=Iif ( SFP->(FieldPos('FP_NFEEX'))   >0  .And. SFP->(DbSeek(xfilial("SFP")+cfilant+cTipo+SF2->F2_SERIE+Subs(SF2->F2_DOC,1,nTamPV)) ).And. SFP->FP_NFEEX$"2|3" ,.T.,.F.)
		If  !lVldExp
	   		MsGStop(STR0099 + 	Subs(SF2->F2_DOC,1,nTamPV)  + STR0100,"Tipo")
	     	Return()
		 EndiF
	EndIf

DEFINE MSDIALOG oDlg FROM 00,00 TO 120,400 PIXEL TITLE STR0101
	@	003,003 	Say STR0102  OF oDlg PIXEL 
	@	003,095		get cCod OF oDlg PIXEL
	@	015,003 	Say STR0103  OF oDlg PIXEL 
	@	015,095	    Get dData   OF oDlg PIXEL
	
	
	DEFINE SBUTTON FROM 045,100	TYPE 1 ACTION GravaAut(cCod,dData,oDlg) ENABLE OF oDlg
	
	ACTIVATE MSDIALOG oDlg CENTERED
	
Return()
                                                                                  
Function GravaAut(cCod,dData,oDlg,lConsWs)
Local aArea:=GetArea()
Local cAlias := cAliasMnt

Default oDlg		:= Nil
Default lConsWs 	:= .F.

If !Empty(cCod) .And.  !Empty(dData)


		If  cAlias == "SF1"
				RecLock("SF1")
				F1_CAEE:=cCod
			  	F1_EMCAEE :=dData
 				if lConsWs
 					F1_FLFTEX	:="S"
 				else
 					F1_FLFTEX	:="M"
 				endif					
				MsUnlock()      
				DbSelectArea("SF3")
				DbSetOrder(4)
			If SF3->(FieldPos('F3_CAE'))   >0 .And. SF3->(FieldPos('F3_VCTOCAE'))   >0 .And. (DbSeek(xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE) )
			    	While !EOF() .And. xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE ==;
				      	  	SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
				    		RecLock("SF3")
	 						F3_CAE:=cCod
	 						F3_VCTOCAE:=dData
	 						MsUnlock()
						    dbSkip()
	 				EndDo	
	 			 EndIf
	    Else 
    	   		RecLock("SF2")
				F2_CAEE:=cCod
		 		F2_EMCAEE   :=dData
		
				if lConsWs
 					F2_FLFTEX:="S"
 				else
 					F2_FLFTEX:="M"
 				endif
		
				MsUnlock()
	          
				DbSelectArea("SF3")
	 			DbSetOrder(4)
			If SF3->(FieldPos('F3_CAE'))   >0 .And. SF3->(FieldPos('F3_VCTOCAE'))   >0 .And. (DbSeek(xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE) )
	 		   		While !EOF() .And. xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE ==;
		 		   	  	SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
		 		   		RecLock("SF3")
		 		   		F3_CAE:=cCod
		 		   		F3_VCTOCAE:=dData
		 		   		MsUnlock()
						dbSkip()
	 		    	EndDo	
	 			 EndIf
		    EndIf


Else

	MSgAlert(STR0077,"MSG") //" Documento nao Atualizado"

EndIf	                   

RestArea(aArea)

If oDlg <> Nil
	oDlg:End() 
endif
	
Return()


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ArgNfDummy    ºAutor  ³Camila Januário º Data ³  03/03/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se o servidor AFIP está funcionando               º±±
±±º          ³ param1 : Token
±±º          ³ param2 : Id da Entidade                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Nota Fiscal Eletronica Argentina - Nacional                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ArgNfDummy(cToken,cIdEnt,cUrl,lAviso,nVezes, lAuto)
Local lOk := .F.
Local oWs
Local oXml
Local cWSModelo := "" //IIF(FindWSServ()=="wsmtxca","3","2")
Local nTry		:= 1

Default nVezes	:= 1 
Default lAuto		:= .F. 

Default cURL 		:= FindURL()
Default lAviso		:= .T.

If FindWSServ()== "wsmtxca" //nominacao
	cWSModelo := "3"
Elseif FindWSServ()== "wsbfe" //bono
	cWSModelo := "4"
Else
	cWSModelo := "2"
EndIf 

oWSE:= WSNFESLOC():New()	  


While nTry <= nVezes
	
	cData:=	 FsDateConv(Date(),"YYYYMMDD")
	cData := SubStr(cData,1,4)+"-"+SubStr(cData,5,2)+"-"+SubStr(cData,7)
	oWSE:CDATETIMEGER:=cData+"T00:00:00" 
	oWSE:cDATETIMEEXP:=cData+"T23:59:59"                     
	oWsE:cUserToken := "TOTVS"
	oWsE:cID_ENT    := cIdEnt
	oWSE:_URL       := AllTrim(cURL)+"/NFESLOC.apw"
	oWsE:cCWSSERVICE  := FindWSServ() 	
	
	lExec := oWSE:GETAUTHREM()
	If ( lExec <> Nil .And. lExec ) .Or. "TOTVS SPED Services : 005" $ GetWscError(1)
		Exit
	Else
		nTry++
		Sleep(5000)
	EndIf

EndDo

oWs := WSWSFEV1():New()

oWs:cUserToken := "TOTVS"
oWs:cID_ENT    := cIdEnt
oWS:_URL       := AllTrim(cURL)+"/WSFEV1.apw"	  	

If cWSModelo <> "4"
	ArgNfTotXReq(oWs:cUserToken,oWs:cID_ENT,cUrl)
Endif	
	  

oWs:cUSERTOKEN := cToken
oWs:cID_ENT := cIdEnt
oWS:cMODELOWS := cWSModelo
oWs:DUMMYARGWSFEV1() 

oXml := oWs:oWSDUMMYARGWSFEV1RESULT
If (ValType(oXml:CDBSERVER) <> "U" .AND. ValType(oXml:CAUTHSERVER) <> "U" .AND. ValType(oXml:CAPPSERVER) <> "U")	
	lOk := .T.
	if lAviso
		If( lAuto )
			cAutMsg := "- RETORNO:[" + STR0111 + "]"
			aAdd( aLogEnv, { cAutMsg, "Linha-2837", DtoS( Date() ) + "|" + Time() } )
		Else	
			MsgAlert(STR0111)
		EndIf
	endif	
Elseif lAviso
    If( lAuto )
		cAutMsg := "- RETORNO:[" + STR0112 + "]"
		aAdd( aLogEnv, { cAutMsg, "Linha-2845", DtoS( Date() ) + "|" + Time() } )
	Else	
	    MsgAlert(STR0112)
	EndIf
EndIF
 

Return lOk   

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ArgNfTotXReq  ºAutor  ³Camila Januario º Data ³  03/03/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Obtem a quantidade maxima de registros de detalhe que se   º±±
±±º          ³ pode obter em uma request ao método FECAESolicitar
			   param1 : Token
±±º          ³ param2 : Id da Entidade

			   Retorno : quantidade de registros que a AFIP pode receber	
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Nota Fiscal Eletronica Argentina - Nacional                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ArgNfTotXReq(cToken,cIdEnt,cURl)
Local oWs
Local oXml
Local nQtdReg := 0   

Default cUrl := ""

oWs := WSWSFEV1():New()

oWs:cUSERTOKEN := cToken
oWs:cID_ENT := cIdEnt

if !empty( cUrl )
	oWs:_URL	:= AllTrim(cURL)+"/WSFEV1.apw"
endif	

oWs:WSFEV1FECOMPTOTXREQUEST()

oXml := oWs:oWSWSFEV1FECOMPTOTXREQUESTRESULT
If (ValType("oXml:NREGXREQ") <> "U") 
	nQtdReg := oXml:NREGXREQ
Else
	If !lAuto
		MsgAlert(STR0113)
	Else	
		cAutMsg := "- RETORNO:[" + STR0113 + "]"	+ CRLF
		aAdd( aLogEnv, { cAutMsg, "Linha-2898", DtoS( Date() ) + "|" + Time() } )
	EndIf
	Return
EndIF
 
Return nQtdReg 
     

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³TipComp    ºAutor  ³Camila Januário    º Data ³  18/07/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna o tipo de comprovante                              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Nota Fiscal Eletrônica Argentina                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function TipComp(cAlias,cTipoNF,cSerieNF)
Local nTpDoc:=0

If cAlias=="SF2"
	If cTipoNF =="N"  .And. Alltrim(cSerieNF) == "A"
		nTpDoc:=1
	ElseIf cTipoNF =="C"  .And. Alltrim(cSerieNF) == "A"		
		nTpDoc:=2
	ElseIf cTipoNF =="N"  .And. Alltrim(cSerieNF) == "B"		
		nTpDoc:=6	
	ElseIf cTipoNF =="C"  .And. Alltrim(cSerieNF) == "B"		
		nTpDoc:=7    
   ElseIf cTipoNF =="D"  .And. Alltrim(cSerieNF) == "A"		
		nTpDoc:=2                                           
	ElseIf cTipoNF =="D"  .And. Alltrim(cSerieNF) == "B"		
		nTpDoc:=7 		
	EndIf
Else
	If cTipoNF =="D"  .And. Alltrim(cSerieNF) == "A"		
		nTpDoc:=3                                           
	ElseIf cTipoNF =="D"  .And. Alltrim(cSerieNF) == "B"		
		nTpDoc:=8   
	ElseIf cTipoNF =="C"  .And. Alltrim(cSerieNF) == "A"		
		nTpDoc:=3	
	ElseIf cTipoNF =="C"  .And. Alltrim(cSerieNF) == "B"		
		nTpDoc:=8		
	EndIf			
EndIf	   


If cAlias="SF1" .and.    SF1->(ColumnPos("F1_RG1415 ")) > 0          .and. !Empty(SF1->F1_RG1415)
	nTpDoc:=Val(SF1->F1_RG1415)
ElseIf cAlias="SF2" .and.    SF2->(ColumnPos("F2_RG1415 ")) > 0   .and. !Empty(SF2->F2_RG1415)
	nTpDoc:=Val(SF2->F2_RG1415)
EndIf

Return(nTpDoc)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FindURL    ºAutor  ³Camila Januário    º Data ³  18/07/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna a URL a ser utilizada:                             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Nota Fiscal Eletrônica Argentina                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FindURL()

Local cRetURL := ""

If cModeloWS $ "1|5|8|" //nacional y WebService liquidacion Granos
	cRetURL := (PadR(GetNewPar("MV_ARGNEURL","http://"),250))		
ElseIf cModeloWS == "2" //exportacao	
	cRetURL := (PadR(GetNewPar("MV_ARGEURL","http://"),250))	
ElseIF cModeloWS $ "3|7" // reg. nomin e nominacion CAEA
	cRetURL := (PadR(GetNewPar("MV_ARGNOUR","http://"),250))	
Else //bono 
	cRetURL := (PadR(GetNewPar("MV_ARGNBUR","http://"),250))	
Endif	

Return cRetURL


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FindWSServ    ºAutor  ³Camila Januário º Data ³  18/07/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna o tipo de webservice                               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Nota Fiscal Eletrônica Argentina                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FindWSServ()

Local cWebServ := ""

If cModeloWS $ "1|5" //nacional
	cWebServ := "wsfe"
ElseIf cModeloWS == "2" //exportacao
	cWebServ := "wsfex"
	Elseif cModeloWS $ "3|7" //reg. nomin e nominacion CAEA
	cWebServ := "wsmtxca"                      
Else //bono e ret. Nomin CAEA
	cWebServ := "wsbfe" 
EndIF

Return cWebServ  
     

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ArgNfSchema  ºAutor  ³Camila Januário     º Data ³  30/11/11º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Visualiza o schema da factura                              º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParam.    ³ cIdent : codigo da entidade                                º±±
±±º          ³ cIdNfe : id da nfe que será feito a validação do schema    º±±
±±º          ³ cXmlRet: xml de retorno respectivo da nota cIdNfe          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Nota Fiscal Eletronica Argentina							  º±±
±±º          ³ Nacional, Exportacao e Nominação                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function ArgNfSchema(cIdent,cIdNfe,cXmlRet)              

Local cMsgEnv 	:= ""
Local cMsgRet 	:= ""
Local cXmlEnv 	:= ""
Local cEnvio    := "XML ENVIO"
Local cRetorno  := "XML RETORNO"
Local x 		:= 40
Local cMsg		:= ""
Local cFiltAnt  := ""
Local aIndArqE   := {}
                            

If cAliasMnt == "SF2"
	DbSelectArea("SF2")
	DbSetOrder(1)
	cFiltAnt := DbFilter()
	DbClearFilter()                                                    
	If DbSeek(xFilial("SF2")+Substr(cIdnfe,1,12)+Substr(cIdnfe,13))
		cXmlEnv := SF2->F2_XMLNFE
	EndIf
Else
	DbSelectArea("SF1")	
	DbSetOrder(1)
	cFiltAnt := DbFilter()
	DbClearFilter()
	If DbSeek(xFilial("SF1")+Substr(cIdnfe,1,12)+Substr(cIdnfe,13))
		cXmlEnv := SF1->F1_XMLNFE                                                   
	EndIf                                                                      
Endif

/*restaura o filtro do browse*/
bFiltraBrw := {|| FilBrowse(cAliasMnt,@aIndArqE,@cFiltAnt) }
Eval(bFiltraBrw)

cXmlEnv := Decode64(cXmlEnv)

If Len(cXmlEnv) > 0
	While !Empty(cXmlEnv)
		nLimite  := Len(cXmlEnv)
		cMsgEnv += Substr(cXmlEnv,1,x)+CHR(10)		
		cXmlEnv := Substr(cXmlEnv,x+1)		
	EndDo
EndIf

If Len(cXmlRet) > 0
	While !Empty(cXmlRet)
		nLimite  := Len(cXmlRet)
		cMsgRet += Substr(cXmlRet,1,x)+CHR(10)		
		cXmlRet := Substr(cXmlRet,x+1)		
	EndDo
Endif

cMsg := cEnvio+CHR(10)+cMsgEnv+space(10)+CHR(10)+cRetorno+CHR(10)+cMsgRet

Aviso("NFE",cMsg,{"Ok"},3)	

Return .T.



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ArgGetID ºAutor  ³Camila Januário     º Data ³  28/06/12    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Busca o último ID disponível pelo método GetLastID	      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Factura Electronica BONO                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ArgGetID(cToken,cIdent,cModelo)
Local cID := ""
Local oWs 
Local oRet
Local cUrl := FindUrl()


oWs := WSNFESLOC():New()

oWs:cUSERTOKEN := cToken
oWs:_URL	   := Alltrim(cUrl)+"/NFESLOC.apw"
oWs:cID_ENT    := cIdEnt
oWs:cMODELOWS  := cModelo

oWs:GETLASTIDARG()
oRet := oWs:oWSGETLASTIDARGRESULT

If (ValType("oRet:nID") <> "U") 
	cID := oRet:nID
Endif 

Return cID
//-----------------------------------------------------------------------
/*/{Protheus.doc} ARGNNFeGetCAEA
Função que valida se existe o CAEA para a data de emissão da Factura

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0

@param			
@return	Nil
/*/
//-----------------------------------------------------------------------
Function ARGNNFeGetCAEA()

ArgSolicCAEA()

return

//-----------------------------------------------------------------------
/*/{Protheus.doc} ArgSolicCAEA
Função que valida se existe o CAEA para a data de emissão da Factura

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0

@param			
@return	Nil
/*/
//-----------------------------------------------------------------------
Static Function ArgSolicCAEA()

Local cParSoliCAEA:= SM0->M0_CODIGO+SM0->M0_CODFIL+"SOLCAEA"
                    
Local aArea     := GetArea()
Local cDateIni 	:= ""
Local cAno		:= ""
Local cMes		:= ""
Local cMsg		:= ""
Local cVersao	:= ""
Local cMsgRet := ""
Local cAmbiente	:= ""   
Local cURL      := FindURL()
Local cPar01	:= MV_PAR01
Local cPar02    := MV_PAR02
Local cPar03    := MV_PAR03
Local cPar04	:= MV_PAR04
Local cPar05	:= MV_PAR05
Local cPar06	:= MV_PAR06



Local aPerg    	:= {}
Local aTexto    	:= {}
Local aParam   	:= {Space(Len(FWGETCODFILIAL)),Space(Len(FWGETCODFILIAL)),Space(20),Space(20),Space(4),Space(4)}
Local aDetalhes 	:= {}
Local aListFol   	:= {}
Local aEspecie	:= StrTokArr(GetSx3Cache("FP_ESPECIE","X3_CBOXSPA"),";")
                                                                 			
Local lPerg    	:= .F.
Local lOk    	:= .F.   

Local oOk        := LoadBitMap(GetResources(),"LBOK")
Local oNo        := LoadBitMap(GetResources(),"LBNO")
Local oWs
Local oWizard
Local oDlg
Local oPanelForm
Local oPanelDet
Local oPanelButton
Local oListBox
Local oSay
Local oBtn1
Local oBtn2
Local oBtn3

PRIVATE cCadastro := STR0001 //"Monitoramento da NFe-Exportacao"
	
	If !Empty(cURL)//IsReady()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Obtem o codigo da entidade                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ34ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Trim(cPar04) <> "7"
	
	MV_PAR01 := aParam[01] := PadR(ParamLoad(cParSoliCAEA,aPerg,1,aParam[01]),Len(FWGETCODFILIAL))		//Filial De
	MV_PAR02 := aParam[02] := PadR(ParamLoad(cParSoliCAEA,aPerg,2,aParam[02]),Len(FWGETCODFILIAL))		//Filial Ate
	MV_PAR03 := aParam[03] := PadR(ParamLoad(cParSoliCAEA,aPerg,3,aParam[03]),20)	//Mês Inicial	
	MV_PAR04 := aParam[04] := PadR(ParamLoad(cParSoliCAEA,aPerg,4,aParam[04]),20)	//Mês Final 
	MV_PAR05 := aParam[05] := PadR(ParamLoad(cParSoliCAEA,aPerg,5,aParam[05]),4)	//Ano Inicial 
	MV_PAR06 := aParam[06] := PadR(ParamLoad(cParSoliCAEA,aPerg,6,aParam[06]),4)	//Ano Final 
	
	aadd(aPerg,{1,STR0201,aParam[01],"",".T.","",".T.",30,.T.})	//"Filial De"
	aadd(aPerg,{1,STR0202,aParam[02],"",".T.","",".T.",30,.T.})	//"Filial Ate"
	aadd(aPerg,{2,STR0219,PadR("",Len(STR0144)),{STR0136,STR0137,STR0138,STR0139,STR0140,STR0141,STR0142,STR0143,STR0144,STR0145,STR0146,STR0147},50,".T.",.T.,".T."}) //Mês Inicial
	aadd(aPerg,{2,STR0220,PadR("",Len(STR0144)),{STR0136,STR0137,STR0138,STR0139,STR0140,STR0141,STR0142,STR0143,STR0144,STR0145,STR0146,STR0147},50,".T.",.T.,".T."}) //Mês Final
	aadd(aPerg,{1,STR0217,aParam[05],"",".T.","",".T.",30,.T.})	//"Ano Inicial"
	aadd(aPerg,{1,STR0218,aParam[06],"",".T.","",".T.",30,.T.})	//"Ano Final"
		
	
	If ParamBox(aPerg,STR0280,aParam,,,,,,,cParSoliCAEA,.T.,.F.) .And. ValidParam(aParam,@cMsgRet,"2")//"Filtrar CAEA"
		
		Processa( {|lEnd| CAEAVerHist(MV_PAR01,MV_PAR02,MV_PAR03,MV_PAR04,MV_PAR05,MV_PAR06,@lEnd)},STR0278,STR0279) //"Aguarde..."###"Buscando informações do CAEA...."
	ElseIf !Empty( cMsgRet )
		Aviso("NFEe",cMsgRet,{"OK"},3)	
	EndIf	
	
else
			CAEAProcSol("CG6", 1)
		EndIf
	else
		//Aviso("NFEe",STR0087,{"OK"},3)
		Aviso("NFFE",STR0298 + CHR(10) + CHR(13) +;  // "No se detectó configuración de conexión con TSS."
					  STR0299 +  CHR(10) + CHR(13) +; // "Por favor, ejecute opción Wizard de Configuración."
					  STR0300 + CHR(10) + CHR(13),;   // "Siga atentamente os passos para a configuração da nota fiscal eletrônica."
					  {"OK"},3)
endif

oWs	:= Nil
oWizard	:= Nil                                       


MV_PAR01 := cPar01
MV_PAR02 := cPar02
MV_PAR03 := cPar03
MV_PAR04 := cPar04
MV_PAR05 := cPar05
MV_PAR06 := cPar06

return
//-------------------------------------------------------------------------
/*/{Protheus.doc} CAEAProcSol
Função que processa a solictação de novos CAEA's para os formulários 
marcados 

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0

@param	aListForm		Lista de formulários
				
@return Nil
//-----------------------------------------------------------------------
/*/

Function CAEAProcSol(aListForm,lEnd)           
			
local aPerg		:= {}
Local aParam   	:= {Space(Len(FWGETCODFILIAL)),Space(Len(FWGETCODFILIAL)),Space(4),Space(30),Space(30)}

local cMsgRet		:= ""
Local cAliaslog	:= ""
Local cParSolCAEA	:= SM0->M0_CODIGO+SM0->M0_CODFIL+"PARAM_CAEA"

Local cPar01		:= MV_PAR01
Local cPar02		:= MV_PAR02
Local cPar03		:= MV_PAR03
Local cPar04		:= MV_PAR04
Local cPar05		:= MV_PAR05

Local lRet			:= .T.

PRIVATE cCadastro := STR0001 //"Monitoramento da NFe-Exportacao"
	
MV_PAR01 := aParam[01] := PadR(ParamLoad(cParSolCAEA,aPerg,1,aParam[01]),Len(FWGETCODFILIAL))		//Filial De
MV_PAR02 := aParam[02] := PadR(ParamLoad(cParSolCAEA,aPerg,2,aParam[02]),Len(FWGETCODFILIAL))		//Filial Ate
MV_PAR03 := aParam[03] := PadR(ParamLoad(cParSolCAEA,aPerg,1,aParam[03]),4)
MV_PAR04 := aParam[04] := PadR(ParamLoad(cParSolCAEA,aPerg,2,aParam[04]),20)
MV_PAR05 := aParam[05] := PadR(ParamLoad(cParSolCAEA,aPerg,3,aParam[05]),20)

aadd(aPerg,{1,STR0201,aParam[01],"",".T.","SM0",".T.",30,.T.})	//"Filial De"
aadd(aPerg,{1,STR0202,aParam[02],"",".T.","SM0",".T.",30,.T.})	//"Filial Ate"
aadd(aPerg,{1,STR0129,aParam[03],"",".T.","",".T.",30,.T.})   //"Ano Periodo"
aadd(aPerg,{2,STR0134,PadR("",Len(STR0144)),{STR0136,STR0137,STR0138,STR0139,STR0140,STR0141,STR0142,STR0143,STR0144,STR0145,STR0146,STR0147},50,".T.",.T.,".T."}) //Mês Periodo 
aadd(aPerg,{2,STR0130,PadR("",Len(STR0131)),{STR0131,STR0132},65,".T.",.T.,".T."})  //"Ordem"###"1-Primeira quinzena"###"1-Primeira quinzena"###"2-Segunda Quinzena"
	
if ParamBox(aPerg,"ARGN - "+STR0214,,,,,,,,cParSolCAEA,.T.,.T.) .And. CAEAParamOk(@cMsgRet)//"Solicitação de CAEA" 
	
	
	
	cAliaslog:= CAEACriaTrb()
	
	Processa({|lEnd| lRet := ProcSolCaea(MV_PAR01,MV_PAR02,MV_PAR03,MV_PAR04,MV_PAR05,cAliaslog,@lEnd)})
	
	If lRet
			
		CaeaShowLog(cAliaslog)
		
		CaeaDelTrb(cAliaslog)
	Else
		Aviso("NFFE",/*STR0297*/cMsgRet,{"OK"},3) //"Nenhuma Filial encontrada para o filtro informado."
	EndIf	
	
	
elseif !Empty( cMsgRet )
	Aviso("NFFE",cMsgRet,{"OK"},3)
else
	Aviso("NFFE","Operação cancelada pelo usuário.",{"OK"},3)		
endif

MV_PAR01 := cPar01
MV_PAR02 := cPar02
MV_PAR03 := cPar03	
MV_PAR04 := cPar04	
MV_PAR05 := cPar05


return(cAliaslog)

//------------------------------------------------------------------------
/*/{Protheus.doc} ProcSolCaea
Função que solicita um novo CAEA na AFIP

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0

@param	cMsg		Referência Mensagem contendo o erro na validação 
					dos parâmetros
				
@return	lValid		.T. Quando a os parâmetros estiverem corretos.
/*/
//-----------------------------------------------------------------------
Static Function ProcSolCaea(cFilIni,cFilFim,cAno,cMes,cOrdem,cAliaslog,lRet,cMsgRet)

Local cMsgCfgTss 	:= ""
Local cStatCfgTSS	:= ""
//Local cMsgRet		:= ""
Local cMsgSolCaea	:= ""
Local cPeriodo		:= ""
Local cIdEnt		:= ""
Local cURL			:= FindURL()
local cFiltAnt := CG6->(DbFilter())

Local lGetCAEA		:= .F.
Local lRet			:= .F.

Local aDadosCAEA	:= {}
local aArea		:= GetArea()
local aAreaSM0		:= SM0->( GetArea() ) 
Local aIndArqE   := {}
Local aDadosNom := {}
Local nI:= 0
Private oWs
Default cMsgRet := ""	
SM0->(dbSetOrder(1))	
SM0->( dbSeek(cEmpant) )

If SM0->(!EOF())		
	While SM0->(!EOF())		
		If FWGETCODFILIAL >= cFilIni .And. FWGETCODFILIAL <= cFilFim .And. cEmpant == SM0->M0_CODIGO
										
			cMsgCfgTss 	:= ""
			cStatCfgTSS	:= ""
			cMsgRet		:= ""
			cMsgSolCaea	:= ""
			aDadosCAEA		:= {}
			lGetCAEA		:= .F.
							
			cIdEnt := GetIdEnt( FWGETCODFILIAL ,@cMsgCfgTss , .F. )
			cFil 	:= FWGETCODFILIAL
		
			IncProc("Processando Filial - "+cFil)
			If !Empty(cIdEnt)
					oWs	:= Nil
					oWs := WSWSFEV1():New()
					oWs:cUserToken := "TOTVS"
					oWs:cID_ENT    := cIdEnt
					oWS:_URL       := AllTrim(cURL)+"/WSFEV1.apw"
					
					If !(ArgNfDummy(oWs:cUserToken,oWs:cID_ENT,cUrl,.F.,5, .F.))
						cMsgRet += STR0158 //"Problema de Comunicacion con la AFIP."
	
						SM0->(dbSkip())
						Loop
					endIf
				
					If Trim(cModeloWS) <> "7"
						oWs:nPERIODO	:= Val(iif(SubStr(cOrdem,1,1) == "1","1","2"))
						oWs:nORDEN	:= Val((Alltrim(cAno)+SubStr(cMes,1,2)))
					Else
						oWs:nPERIODO	 := Val(MV_PAR03+SubString(MV_PAR04, 1, 2))
						oWs:nORDEN	 := Val(SubString(MV_PAR05, 1, 1))
		              //
						If(SubStr(cOrdem,1,1)) == "1"
							oWs:dDATADESDE := FirstDay(CtoD("05/"+SubStr(cMes,1,2)+"/"+Alltrim(cAno)))
							oWs:dDATAATE	  := CtoD("15/"+SubStr(cMes,1,2)+"/"+Alltrim(cAno))
						Else
							oWs:dDATADESDE := CtoD("16/"+SubStr(cMes,1,2)+"/"+Alltrim(cAno))
							oWs:dDATAATE	  := LastDay(CtoD("15/"+SubStr(cMes,1,2)+"/"+Alltrim(cAno)))
						EndIf
					Endif
			 
					If Trim(cModeloWS) == "7" 				
						If oWs:WSMTXCAEACONSULTAR()
							If !Empty(oWS:OWSWSMTXCAEACONSULTARRESULT:OWSRESULTGET:cCFCHVIGDESDE) .And. ;
									!Empty(oWS:OWSWSMTXCAEACONSULTARRESULT:OWSRESULTGET:CCFCHVIGHASTA) .And. ;
									!Empty(oWS:OWSWSMTXCAEACONSULTARRESULT:OWSRESULTGET:cCCAEA)
								 
								aadd(aDadosCAEA,oWS:OWSWSMTXCAEACONSULTARRESULT:OWSRESULTGET:cCCAEA)
								aadd(aDadosCAEA,oWS:OWSWSMTXCAEACONSULTARRESULT:OWSRESULTGET:cCFCHVIGDESDE)
								aadd(aDadosCAEA,oWS:OWSWSMTXCAEACONSULTARRESULT:OWSRESULTGET:cCFCHVIGHASTA)
								aadd(aDadosCAEA,oWS:OWSWSMTXCAEACONSULTARRESULT:OWSRESULTGET:cCFCHVIGDESDE)
								aadd(aDadosCAEA,oWS:OWSWSMTXCAEACONSULTARRESULT:OWSRESULTGET:cCFCHVIGHASTA)
								aadd(aDadosCAEA,Alltrim(Str(oWS:OWSWSMTXCAEACONSULTARRESULT:OWSRESULTGET:nNORDEN)))
								aadd(aDadosCAEA,Alltrim(Str(oWS:OWSWSMTXCAEACONSULTARRESULT:OWSRESULTGET:nNPERIODO)))
								lGetCAEA	:= .T.
								  
							ElseIf oWs:WSMTXCAEASOLICITAR()
								
						   		If ATTISMEMBEROF(oWS:oWSWSMTXCAEASOLICITARRESULT,"_ResultGet")
						   			If !empty(oWS:oWSWSMTXCAEASOLICITARRESULT:_ResultGet) .And. !empty(oWS:oWSWSMTXCAEASOLICITARRESULT:_ResultGet:_CCAEA:TEXT)
										aadd(aDadosCAEA,oWs:oWSWSMTXCAEASOLICITARRESULT:_RESULTGET:_CCAEA)
										aadd(aDadosCAEA,oWs:oWSWSMTXCAEASOLICITARRESULT:_RESULTGET:_CFCHVIGDESDE)
										aadd(aDadosCAEA,oWs:oWSWSMTXCAEASOLICITARRESULT:_RESULTGET:_CFCHVIGHASTA)
										aadd(aDadosCAEA,oWs:oWSWSMTXCAEASOLICITARRESULT:_RESULTGET:_CFCHVIGDESDE)
										aadd(aDadosCAEA,oWs:oWSWSMTXCAEASOLICITARRESULT:_RESULTGET:_CFCHVIGHASTA)
										aadd(aDadosCAEA,Alltrim(oWs:oWSWSMTXCAEASOLICITARRESULT:_RESULTGET:_NORDEN))
										aadd(aDadosCAEA,Alltrim(oWs:oWSWSMTXCAEASOLICITARRESULT:_RESULTGET:_NPERIODO))
										lGetCAEA	:= .T.
						  
									Else
										cMsgRet := "" //"Problema de Comunicacion con la AFIP."
										If AttIsMemberOf(oWs:oWSWSMTXCAEASOLICITARRESULT:OWSERRORS, "OWSERRORS")
											If ValType(oWs:oWSWSMTXCAEASOLICITARRESULT:OWSERRORS) == "O"
												cMsgRet += oWs:oWSWSMTXCAEASOLICITARRESULT:OWSERRORS:WSERRORS[1]:CCERRMSG:TEXT
											ElseIf ValType(oWs:oWSWSMTXCAEASOLICITARRESULT:OWSERRORS:WSERRORS) == "A"
												For nI := 1 to Len(ValType(oWs:oWSWSMTXCAEASOLICITARRESULT:OWSERRORS:WSERRORS))
													cMsgRet += oWs:oWSWSMTXCAEASOLICITARRESULT:OWSERRORS:WSERRORS[nI]:TEXT + CRLF
												Next nI
											EndIf 
										
										EndIF
										
										SM0->(dbSkip())
										Loop
										
									EndIF
								Else
								
									cMsgRet := "" //"Problema de Comunicacion con la AFIP."
									If AttIsMemberOf(oWs:oWSWSMTXCAEASOLICITARRESULT:OWSERRORS, "OWSERRORS")
										If ValType(oWs:oWSWSMTXCAEASOLICITARRESULT:OWSERRORS) == "O"
											cMsgRet += oWs:oWSWSMTXCAEASOLICITARRESULT:OWSERRORS:oWSERRORS[1]:CCERRMSG
										ElseIf ValType(oWs:oWSWSMTXCAEASOLICITARRESULT:OWSERRORS:WSERRORS) == "A"
											For nI := 1 to Len(ValType(oWs:oWSWSMTXCAEASOLICITARRESULT:OWSERRORS:WSERRORS))
												cMsgRet += oWs:oWSWSMTXCAEASOLICITARRESULT:OWSERRORS:oWSERRORS[nI]:CCERRMSG
											Next nI
										EndIf 
									Else
										cMsgRet := STR0158 //"Problema de Comunicacion con la AFIP."
									EndIF
									
									SM0->(dbSkip())
									Loop
						   		EndIF
								
								
							EndIf
											
						Else
							cMsgRet := STR0158 //"Problema de Comunicacion con la AFIP."
	
							SM0->(dbSkip())
							Loop
						EndIf
	
					EndIf
			Endif
			if Empty( cMsgCfgTss )
				
				cOrdem 	  := iif(SubStr(cOrdem,1,1) == "1","1","2")
				cPeriodo := ( Alltrim(cAno)+SubStr(cMes,1,2) )
				
				CG6->(dbClearFilter())				
				CG6->(dbSetOrder(2))
		
				if CG6->(dbSeek( xFilial("CG6")+cFil+cPeriodo+cOrdem )) .And. !Empty( CG6->CG6_CAEA ) 
					
				
					aDadosCAEA		:= {CG6->CG6_CAEA,;
										DTOS(CG6->CG6_FHCPRC),;
										DTOS(CG6->CG6_FHCTOP),;
										DTOS(CG6->CG6_FHCVDE),;
										DTOS(CG6->CG6_FHCVAT),;
										CG6->CG6_ORDEM,;
										CG6->CG6_PERIOD}
				
										
					cMsgSolCaea := "CAEA já existente na base de dados."
					lGetCAEA 	  := .T.
				else
					aDadosCAEA		:= GetNewCAEA(cOrdem,cPeriodo,@lGetCAEA,@cMsgSolCaea,cIdEnt,cUrl)
					
					if lGetCAEA			
						ArgAtuCG6(cFil,cPeriodo,cOrdem,aDadosCAEA)
					endif
				
				endif
																
				cStatCfgTSS	:= "1"																		
				cMsgCfgTss		:= STR0216 //"Comunicação com o TSS realizada com sucesso" 			
			else
				cMsgCfgTss		:= STR0213+cMsgCfgTss //"Erro ao comunicar com o TSS - ADMEMPLOC "
				cStatCfgTSS	:= "2"
			endif
						
			
			CaeaAtuTrb(cAliaslog,aDadosCAEA,cFil,cMsgCfgTss,cStatCfgTSS,lGetCAEA,cMsgSolCaea)
			
			SM0->(dbSkip())
			lRet := .T. //Flag informando que processou alguma empresa
		Else
			SM0->(dbSkip())
		EndIf
	EndDo
EndIf

RestArea(aArea) 
RestArea(aAreaSM0)
cFilAnt := FWGETCODFILIAL

/*restaura o filtro do browse*/
bFiltraBrw := {|| FilBrowse("CG6",@aIndArqE,@cFiltAnt) } 
Eval(bFiltraBrw)	

return(lRet)


//-----------------------------------------------------------------------
/*/{Protheus.doc} CAEAParamOk
Função que solicita um novo CAEA na AFIP

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0

@param	cMsg		Referência Mensagem contendo o erro na validação 
					dos parâmetros
				
@return	lValid		.T. Quando a os parâmetros estiverem corretos.
/*/
//-----------------------------------------------------------------------
Static Function CAEAParamOk(cMsg)

local lValid 	:= .T.

if empty(MV_PAR01) .or. empty(MV_PAR02) .or. empty(MV_PAR03) .oR. empty(MV_PAR04) .Or. empty(MV_PAR05)  
	lValid := .F.
	cMsg += STR0169+CRLF//"Todos os parâmeros devem ser preenchidos"
else
			
	//MV_PAR03
	if (Val(MV_PAR03) == 0) .Or. Len(Alltrim(MV_PAR03)) <> 4
		lValid := .F.
		cMsg += STR0172+CRLF//"O ano do período deve conter 4 posições e deve ser numérico maior que zero."				
	endif
	
	if MV_PAR01 > MV_PAR02
		lValid := .F.
		cMsg += STR0281+CRLF//"Filial inicial não pode ser maior que a filial final."
	endif
	
endif
if !lValid
	cMsg := STR0173+CRLF+CRLF+cMsg	
endif

return ( lValid )

//-----------------------------------------------------------------------
/*/{Protheus.doc} GetNewCAEA
Função que solicita um novo CAEA na AFIP

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0

@param	cOrdem		Ordem desejada 1 - Primeira quinzena;2-Segunda quinzena
@param	cPtoVenda	Periodo desejado AAAAMM
@param	cEspecie	Referencia, Flag para saber se conseguiu um novo CAEA
@param	cDateIni 	Mensagem de retorno com o status do processamento  
@param	cIdEnt 		Entidade da empresa no TSS
@param	cUrl 		URL do TOTVS SERVICE SPED.

				
@return	aDados		Array com os dados do CAEA.
/*/
//-----------------------------------------------------------------------

Static Function GetNewCAEA(cOrdem,cPeriodo,lGetCAEA,cMsgRet,cIdEnt,cUrl)

local nX		:= 0

local aDados	:= {}
local aErros	:= {}
local aEvents	:= {}
local aMsgRet	:= {}

Private oWs

if !Empty(cIdEnt)

	oWs := WSWSFEV1():New()
	oWs:cUserToken := "TOTVS"
	oWs:cID_ENT    := cIdEnt
	oWS:_URL       := AllTrim(cURL)+"/WSFEV1.apw"	  	
	
	
 	if !(ArgNfDummy(oWs:cUserToken,oWs:cID_ENT,cUrl,.F.,5, .F.))
		lGetCAEA := .F.
		
		cMsgRet := STR0158 //"Problema de Comunicacion con la AFIP."
					
		return				
	endIf
			
	oWs:nPERIODO    := Val(cPeriodo)
	oWs:nORDEN	    := Val(cOrdem)		
	
	if oWs:WSFEV1FECAEACONSULTAR()
		
		if !empty(oWS:oWSWSFEV1FECAEACONSULTARRESULT:oWSRESULTGET) .And. !empty(oWs:oWSWSFEV1FECAEACONSULTARRESULT:oWSRESULTGET:cCCAEA)
			aadd(aDados,oWs:oWSWSFEV1FECAEACONSULTARRESULT:oWSRESULTGET:cCCAEA)
			aadd(aDados,oWs:oWSWSFEV1FECAEACONSULTARRESULT:oWSRESULTGET:CCFCHPROCESO)
			aadd(aDados,oWs:oWSWSFEV1FECAEACONSULTARRESULT:oWSRESULTGET:CCFCHTOPEINF)
			aadd(aDados,oWs:oWSWSFEV1FECAEACONSULTARRESULT:oWSRESULTGET:CCFCHVIGDESDE)
			aadd(aDados,oWs:oWSWSFEV1FECAEACONSULTARRESULT:oWSRESULTGET:CCFCHVIGHASTA)
			aadd(aDados,Alltrim(Str(oWs:oWSWSFEV1FECAEACONSULTARRESULT:oWSRESULTGET:NNORDEN)))
			aadd(aDados,Alltrim(Str(oWs:oWSWSFEV1FECAEACONSULTARRESULT:oWSRESULTGET:NNPERIODO)))			
			
			lGetCAEA	:= .T.	
		endif
					
	endif
	
	
	if len( aDados ) == 0 .And. oWs:WSFEV1FECAEASOLICITAR()
			
		if !empty( oWs:oWSWSFEV1FECAEASOLICITARRESULT:oWSRESULTGET:CCCAEA )
			
			aadd(aDados,oWs:oWSWSFEV1FECAEASOLICITARRESULT:oWSRESULTGET:CCCAEA)
			aadd(aDados,oWs:oWSWSFEV1FECAEASOLICITARRESULT:oWSRESULTGET:CCFCHPROCESO)
			aadd(aDados,oWs:oWSWSFEV1FECAEASOLICITARRESULT:oWSRESULTGET:CCFCHTOPEINF)
			aadd(aDados,oWs:oWSWSFEV1FECAEASOLICITARRESULT:oWSRESULTGET:CCFCHVIGDESDE)
			aadd(aDados,oWs:oWSWSFEV1FECAEASOLICITARRESULT:oWSRESULTGET:CCFCHVIGHASTA)
			aadd(aDados,Alltrim(Str(oWs:oWSWSFEV1FECAEASOLICITARRESULT:oWSRESULTGET:NNORDEN)))
			aadd(aDados,Alltrim(Str(oWs:oWSWSFEV1FECAEASOLICITARRESULT:oWSRESULTGET:NNPERIODO)))
			
			lGetCAEA	:= .T.
									
		else
			if !empty( oWs:OWSWSFEV1FECAEASOLICITARRESULT:OWSERRORS:OWSERRORS )
				if type("oWs:OWSWSFEV1FECAEASOLICITARRESULT:OWSERRORS:OWSERRORS") =="A"
					aErros	:= oWs:OWSWSFEV1FECAEASOLICITARRESULT:OWSERRORS:OWSERRORS
				else
					aErros	:= {oWs:OWSWSFEV1FECAEASOLICITARRESULT:OWSERRORS:OWSERRORS}
				endif
				
				for nx := 1 to len( aErros )
					aadd( aMsgRet,{aErros[nx]:nNERRCODE,aErros[nx]:cCERRMSG} )
				next nx
				
			endif
			if !empty( oWs:OWSWSFEV1FECAEASOLICITARRESULT:OWSEVENTS:OWSEVENTS  )
				if type("oWs:oWSWSFEV1FECAEASOLICITARRESULT:oWSEVENTS:OWSEVENTS") =="A"
					aEvents	:= oWs:oWSWSFEV1FECAEASOLICITARRESULT:oWSEVENTS:OWSEVENTS
				else
					aEvents	:= {oWs:oWSWSFEV1FECAEASOLICITARRESULT:oWSEVENTS:OWSEVENTS}
				endif
				
				for nx := 1 to len( aEvents )
					aadd( aMsgRet,{aEvents[nx]:nNEVENTCODE,aEvents[nx]:cCEVENTMSG} )
				next nx
														
			endif
			
			if len( aMsgRet ) > 0
				cMsgRet := STR0159 + CRLF + CRLF //"Erro ao solicitar CAEA para AFIP, com mensagem de erro:"
				
				for nX := 1 to len( aMsgRet )
					
					cMsgRet += STR0161 + Alltrim(Str(aMsgRet[nx][1])) + CRLF
					cMsgRet += STR0162 + aMsgRet[nx][2] + CRLF + CRLF
				
				next nx
									
			else
				cMsgRet := STR0160//"Erro ao solicitar CAEA para AFIP, sem mensagem de erro."
			endif		
			
			lGetCAEA := .F.								
		endif
	elseif len(aDados) == 0
		lGetCAEA := .F.
		cMsgRet := iif(Empty(GetWscError(3)),GetWscError(1),GetWscError(3))
	endif
	
	if lGetCAEA .and. Len(aDados) >0
		cMsgRet := STR0212		
	endif	
			
else
	lGetCAEA := .F.	
endIf

oWs := Nil
DelClassIntF()				

return aDados

//-----------------------------------------------------------------------
/*/{Protheus.doc} ValidUpd
Função que veririca se os campos criados pelo UPDFLOC existem.

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0

@param	cMsgCmp		Referência para retornar os campos que não foram criados
				
@return	lOk			.T. quando todos os campos estiverm criados.
/*/
//-----------------------------------------------------------------------
Static Function ValidUpd(cMsgCmp)

local lUpdok	:= .T.
local cTabCG6	:= ""

if cModeloWS $ "5"
	
	if !( "6=" $ UPPER(GetSx3Cache("FP_NFEEX","X3_CBOXSPA")) )
		cMsgCmp += STR0175+"'6=NACIONAL-CAEA' em F2_NFEEX"+CRLF //"Falta a opção"###"Rodar o update UpdFLoc."
		cMsgCmp += STR0276+CRLF 
		
	endif		
	
	//VERIFICA SE A TABELA CG6 existe
	if Empty( cTabCG6:= Posicione('SX2',1,'CG6','X2_ARQUIVO') )
		cMsgCmp += STR0211+CRLF //"Tabela CG6 não existe no dicinário!"
		cMsgCmp += STR0277+"NFEP10R1- Update ARG10R101"+CRLF //"Rodar o compatibilizador "
	endif
	
		
endif

if !empty( cMsgCmp )
	cMsgCmp := CRLF + cMsgCmp
	lUpdok := .F.
endif	

return lUpdok

//------------------------------------------------------------------------
/*/{Protheus.doc} CAEASemInf
Função que abre markBrowse para marcar o CAEA a ser enviado sem movimento. 

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0
				
@return Nil
/*/
//-----------------------------------------------------------------------
Function CAEASemInf()

Local cWhere	:= ""
Local cRetorno	:= ""
Local cCondQry	:= "" 
Local cParInfUso:= SM0->M0_CODIGO+SM0->M0_CODFIL+"INFUSOCAEA"
Local cMarca	:= GetMark() 
Local cPar01	:= MV_PAR01
Local cPar02	:= MV_PAR02
Local cPar03	:= MV_PAR03
Local cPar04	:= MV_PAR04
Local cPar05	:= MV_PAR05
Local cPar06	:= MV_PAR06

Local aParam   	:= {Space(Len(FWGETCODFILIAL)),Space(Len(FWGETCODFILIAL)),Space(20),Space(20),Space(4),Space(4)}
Local aPerg   	:= {}
Local aListBox	:= {}
Local aArea		:= GetArea()
Local aSize		:= {}
Local aPosObj	:= {}

Local nOpcJust	:= 0
Local nX		:= 0
                                                     	
Local lContinue := .F.
Local lEnvOk 	:= .F.
Local lProc		:= .T.
Local lMarkAll	:= .F.
Local lInverte	:= .F.
Local lPerg		:= .F.
Local lMark		:= .F.

Local oOk		:= LoadBitmap( GetResources(), "LBOK" )
Local oNo		:= LoadBitmap( GetResources(), "LBNO" )
Local oBmpVerm	:= LoadBitmap( GetResources(), "BR_VERMELHO" )
Local oBmpVerd	:= LoadBitmap( GetResources(), "BR_VERDE" )
Local oDlg
Local oPanelForm
Local oBtn1
Local oBtn3
Local oTBut3
Local oListBox
Local oCombo

If IsReady()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Obtem o codigo da entidade                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ34ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	MV_PAR01 := aParam[01] := PadR(ParamLoad(cParInfUso,aPerg,1,aParam[01]),Len(FWGETCODFILIAL))		//Filial De
	MV_PAR02 := aParam[02] := PadR(ParamLoad(cParInfUso,aPerg,2,aParam[02]),Len(FWGETCODFILIAL))		//Filial Ate
	MV_PAR03 := aParam[03] := PadR(ParamLoad(cParInfUso,aPerg,3,aParam[03]),20)	//Mês Inicial	
	MV_PAR04 := aParam[04] := PadR(ParamLoad(cParInfUso,aPerg,4,aParam[04]),20)	//Mês Final 
	MV_PAR05 := aParam[05] := PadR(ParamLoad(cParInfUso,aPerg,5,aParam[05]),4)	//Ano Inicial 
	MV_PAR06 := aParam[06] := PadR(ParamLoad(cParInfUso,aPerg,6,aParam[06]),4)	//Ano Final 
	
	aadd(aPerg,{1,STR0201,aParam[01],"",".T.","",".T.",30,.T.})	//"Filial De"
	aadd(aPerg,{1,STR0202,aParam[02],"",".T.","",".T.",30,.T.})	//"Filial Ate"
	aadd(aPerg,{2,STR0219,PadR("",Len(STR0147)),{STR0136,STR0137,STR0138,STR0139,STR0140,STR0141,STR0142,STR0143,STR0144,STR0145,STR0146,STR0147},50,".T.",.T.,".T."}) //Mês Inicial
	aadd(aPerg,{2,STR0220,PadR("",Len(STR0147)),{STR0136,STR0137,STR0138,STR0139,STR0140,STR0141,STR0142,STR0143,STR0144,STR0145,STR0146,STR0147},50,".T.",.T.,".T."}) //Mês Final
	aadd(aPerg,{1,STR0217,aParam[05],"",".T.","",".T.",30,.T.})	//"Ano Inicial"
	aadd(aPerg,{1,STR0218,aParam[06],"",".T.","",".T.",30,.T.})	//"Ano Final"
    
	lPerg := ParamBox(aPerg,STR0248,@aParam,,,,,,,cParInfUso,.T.,.T.)//"CAEA Sem Movimento"
	
	If lPerg 
				
		aListBox := WsMntCAEA(MV_PAR01,MV_PAR02,MV_PAR03,MV_PAR04,MV_PAR05,MV_PAR06)
		
		If Len(aListBox) > 0  
			aSize := MsAdvSize()
												
			DEFINE MSDIALOG oDlg TITLE STR0248 FROM 0,0 TO (aSize[6]/1.2) , (aSize[5]/2) OF oMainWnd PIXEL//770 , 640 OF oMainWnd PIXEL
						
			
			//Cria painel do ListBox
			@ 000,000 MSPANEL oPanelForm SIZE 000,000 OF oDlg 
			oPanelForm:Align 		:= CONTROL_ALIGN_TOP
			oPanelForm:nHeight	:= ( oDlg:nHeight/100 )  * 90
			oPanelForm:nWidth		:= oDlg:nWidth
			
			//-- Titulo do Formulários
			ArgSetTitleText( oPanelForm, STR0249 )//"Lista de CAEA sem movimento"
			
			//Cria painel dos botões
			@ 000,000 MSPANEL oPanelButton SIZE 000, 000 OF oDlg
			oPanelButton:Align		:= CONTROL_ALIGN_TOP
			oPanelButton:nHeight		:= ( oDlg:nHeight/100 )  * 10
			oPanelButton:nWidth		:= oDlg:nWidth
			
			//Cria ListBOX
			@ 000,000 LISTBOX oListBox Fields HEADER "","Filia Uso","CAEA","Dt.Venc.Ini","Dt.Venc.Fim","Dt.Limit.Inf."  SIZE 0, 0 PIXEL OF oPanelForm
			oListBox:nTop			:= 	30 
			oListBox:nWidth		:= 	oPanelForm:nWidth - 5			
			oListBox:nHeight		:= 	oPanelForm:nHeight - 32
			oListBox:bLDblClick := {|| aListBox[oListBox:nAt,1] := VldMarkCAEA(aListBox[oListBox:nAt]) ,oListBox:Refresh()}
			oListBox:SetArray( aListBox )			
			oListBox:bLine := { || { IIF( aListBox[ oListBox:nAT,1 ] , oOk ,oNo ),;
										aListBox[ oListBox:nAT,2 ],;
										aListBox[ oListBox:nAT,3 ],;
										aListBox[ oListBox:nAT,4 ],;
										aListBox[ oListBox:nAT,5 ],;
										aListBox[ oListBox:nAT,6 ]} }
			
			
			//======================= Buttons ===========================                                                                 
													
			@ 000,000 BUTTON oBtn1 PROMPT "OK"   	 	ACTION ( oDlg:End() ) OF oPanelButton PIXEL //"OK"
			oBtn1:nTop  	:= 20 
			oBtn1:nLeft 	:= oPanelButton:nWidth - 134
			oBtn1:nWidth	:= 60
			oBtn1:nHeight	:= 20			
			
			@ 000,000 BUTTON oBtn2 PROMPT "Enviar"   ACTION ( Processa( {|lEnd| EnvCAEASInf(aListBox,@lEnd)},"Aguarde...","Buscando dados do CAEA....") ,;
																						aListBox := WsMntCAEA(MV_PAR01,MV_PAR02,MV_PAR03,MV_PAR04,MV_PAR05,MV_PAR06),;
																						IIF(Empty(aListBox),oDlg:End(),.T.),;
																						oListBox:SetArray( aListBox ),;
																						oListBox:bLine := { || { IIF( aListBox[ oListBox:nAT,1 ] , oOk ,oNo ),;
																							aListBox[ oListBox:nAT,2 ],;
																							aListBox[ oListBox:nAT,3 ],;
																							aListBox[ oListBox:nAT,4 ],;
																							aListBox[ oListBox:nAT,5 ],;
																							aListBox[ oListBox:nAT,6 ]} },;
																							oListBox:Refresh() ) OF oPanelButton PIXEL //"OK"
			oBtn2:nTop		:= 20
			oBtn2:nLeft	:= oBtn1:nLeft + oBtn1:nWidth + 4
			oBtn2:nWidth	:= 60
			oBtn2:nHeight	:= 20
									
																	
			ACTIVATE MSDIALOG oDlg CENTERED
		Else
			Aviso("NFEE",STR0092,{"OK"},3)
		Endif
	EndIf	
Else
	Aviso("NFEE",STR0052,{"OK"},3) //"Siga atentamente os passos para a configuração da nota fiscal eletrônica."
EndIf

MV_PAR01 := cPar01
MV_PAR02 := cPar02
MV_PAR03 := cPar03
MV_PAR04 := cPar04
MV_PAR05 := cPar05
      
RestArea(aArea)

return

//-----------------------------------------------------------------------
/*/{Protheus.doc} EnvCAEASInf
Função função que envia o CAEA sem movimento

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0

@param	cIdEnt			Codigo da entidade no TSS
@param	aListBox		Array com os dados do ListBoX.
				
@return	Nil
/*/
//-----------------------------------------------------------------------

Static Function EnvCAEASInf(aListBox,lEnd)

local cUrl			:= FindUrl()
local cMsg 		:= ""
local cPtoVen 		:= ""
local cMsgUso		:= ""
local cMsgCfgTss	:= 0

local nPtoVenda	:= 0 //Val(SubStr(aListBox[5],1,4))
local nx			:= 0   
local ny			:= 0 
local nz			:= 0     
local nOpc			:= 0

local aEnvInf		:= {}    
local aCAEA		:= {}    
local lUsou		:= .F.

local oWs

aEnvInf := retIsMarked(aListBox)

If len(aEnvInf) == 0
	Aviso("NFEE",STR0183,{"OK"},3)
	return
endif


For nx := 1 to len(aEnvInf)
	
	cIdEnt		:= ""
	cMsgCfgTss	:= ""
	cMsgRet	:= "" 
	/*
	SM0->(dbSetOrder(1))	
	SM0->( dbSeek(cEmpant + aEnvInf[nx][02] ) )
	*/
	
	cIdEnt := GetIdEnt( aEnvInf[nx][02] ,@cMsgCfgTss , .F. )	
		
	if !(ArgNfDummy("TOTVS",cIdEnt,cUrl,.F.,,.F.))
		cMsgRet := STR0158 //"Problema de Comunicacion con la AFIP."			
	endif
	
	
	If Empty( cMsgCfgTss + cMsgRet )
	
		nOpc	:=	Aviso(STR0250+" "+aEnvInf[nx][02]+" CAEA "+aEnvInf[nx][03],@cPtoVen,{STR0251,STR0252},3,,,,.T.) //"Filial "###"Confirma"###"Cancela"
		
		aPtoVen := StrTokArr(cPtoVen,";") 
		
		if nOpc == 1 .And. Len(aPtoVen) > 0
			
			cCAEA	  := aEnvInf[nx][3]		
			
			For nz := 1 to Len( aPtoVen ) 	
				
				oWs := WSWSFEV1():New()
				oWs:cUserToken := "TOTVS"
				oWs:cID_ENT    := cIdEnt
				oWS:_URL       := AllTrim(cURL)+"/WSFEV1.apw"	  	
				
						
				nPtoVenda := Val(aPtoVen[nz])
				cMsgUso	:= ""
				
				oWs:cCAEA		:= cCAEA
				oWs:nPTOVTA	:= nPtoVenda
			 	If  nz > 1
			 		cMsg += CRLF 
				endif
				cMsg += STR0253+ CRLF//"Mensagem de processamento iniciada para: "							
				cMsg += "CAEA - "+ cCAEA + CRLF
				cMsg += STR0254 + aPtoVen[nz]+CRLF //"Ponto de venda - "
				cMsg += STR0250 + "- " + aEnvInf[nx][02]+CRLF+CRLF  //"Filial "
				
				lUsou := CAEAMovimento(aEnvInf[nx][02], nPtoVenda, cCAEA, aEnvInf[nx][07],@cMsgUso)
				
				if !lUsou .And. nPtoVenda > 0  .And. oWs:WSFEV1FECAEASINMOVIMIENTOINFORMAR() 				
										
					cMsg += "CAEA: "+ oWs:oWSWSFEV1FECAEASINMOVIMIENTOINFORMARRESULT:cCCAEA + CRLF
					cMsg += STR0255+ DTOC(STOD(oWs:oWSWSFEV1FECAEASINMOVIMIENTOINFORMARRESULT:cCFCHPROCESO)) + CRLF //"Data Processo: "
					cMsg += STR0256 + oWs:oWSWSFEV1FECAEASINMOVIMIENTOINFORMARRESULT:cCPTOVTA + CRLF //"Pto Venda: "
					
					if oWs:oWSWSFEV1FECAEASINMOVIMIENTOINFORMARRESULT:cCRESULTADO == "A"
						cMsg += STR0257+STR0258+CRLF+CRLF //"Resultado: "###"Aprovado"
						aadd(aCAEA,aEnvInf[nx])
					else
						cMsg += STR0257+STR0259+CRLF+CRLF //"Resultado: "###"Rejeitado"	
						if Type(oWs:oWSWSFEV1FECAEASINMOVIMIENTOINFORMARRESULT:oWSERRORS) <> "U"
							cMsg += STR0260+CRLF //"Erros:"	
							for ny := 1 to len(oWs:oWSWSFEV1FECAEASINMOVIMIENTOINFORMARRESULT:oWSERRORS)
								cMsg += STR0261+Alltrim(Str(oWs:oWSWSFEV1FECAEASINMOVIMIENTOINFORMARRESULT:oWSERRORS[nY]:nNERRCODE))+CRLF //"Codigo: "				
								cMsg += STR0262+oWs:oWSWSFEV1FECAEASINMOVIMIENTOINFORMARRESULT:oWSERRORS[nY]:cCERRMSG+CRLF+CRLF //"Mensagem: "
							next ny
						endif
						if Type(oWs:oWSWSFEV1FECAEASINMOVIMIENTOINFORMARRESULT:oWSEVENTS) <> "U"
							cMsg += STR0263+CRLF //"Eventos:"	
							for ny := 1 to len(oWs:oWSWSFEV1FECAEASINMOVIMIENTOINFORMARRESULT:oWSEVENTS)
								cMsg += STR0261+Alltrim(Str(oWs:oWSWSFEV1FECAEASINMOVIMIENTOINFORMARRESULT:oWSEVENTS[nY]:nNEVENTCODE))+CRLF//"Codigo: "				
								cMsg += STR0262+oWs:oWSWSFEV1FECAEASINMOVIMIENTOINFORMARRESULT:oWSEVENTS[nY]:cCEVENTMSG+CRLF+CRLF//"Mensagem: "
							next ny
						endif		
					endif
				else
				
					if nPtoVenda == 0 
						cMsg += STR0264+ CRLF //"Não foi possível enviar o CAEA Sem movimento"  
						cMsg += STR0265+ CRLF //"Mensagem: O ponto de venda deve ser um valor numérico inteiro"
						cMsg += STR0266+ aPtoVen[nz]+ STR0267 +CRLF //"Valor passado: "###" é inválido."
					elseif lUsou
						cMsg += STR0264+ CRLF //"Não foi possível enviar o CAEA Sem movimento"  
						cMsg += STR0162+ cMsgUso + CRLF //"Mensagem: "
					else
						cMsg += STR0268 +CRLF //"Não foi possivel se comunicar com o TSS:"
						cMsg += STR0262 +IIf(Empty(GetWscError(3)),GetWscError(1),GetWscError(3))+CRLF //"Mensagem: "
					endif															                  		    								
				endif
				cMsg += STR0269+CRLF+CRLF //"Mensagem de processamento finalizada!"
			Next Nz	
		else
			cMsg += STR0272+aEnvInf[nx][02]+" :"+CRLF //"Não foi possível enviar o CAEA sem movimento, para filial "
			if nOpc == 2
				cMsg += STR0262+STR0270+CRLF+CRLF//"Mensagem: "### "Solicitação,cancelada pelo usuário."
			else
				cMsg += STR0262+STR0271+CRLF+CRLF //"Mensagem: "### "Não foi informado valores válidos pelo usuário"
			endif
		EndIF
	
	Else
		cMsg += STR0272+aEnvInf[nx][02]+" :"+CRLF //"Não foi possível enviar o CAEA sem movimento, para filial "
		cMsg += STR0273+cMsgCfgTss+CRLF //"Mensagem de configuração do TSS: "
		cMsg += STR0274+cMsgRet+CRLF+CRLF //"Mensagem de configuração da AFIP: "
	Endif
	
				
next nx


cMsg := STR0275 +CRLF+CRLF+cMsg //"Resultado do processamento do envio do informativao de CAEA sem movimento:"
EnvExibLog(cMsg)

ows := Nil
delClassIntF()

return          

//-----------------------------------------------------------------------
/*/{Protheus.doc} EnvExibLog
Função que exibe o log de envio do CAEA sem informação.

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0

@param	cMsg			Mensagem a ser exibida para o usuário
				
@return	Nil
/*/
//-----------------------------------------------------------------------

Function EnvExibLog(cMsg)

local oDlg 
local oBtn1

DEFINE MSDIALOG oDlg TITLE "NFEe - Resultado Processamento" FROM 00,00 TO 600,800 PIXEL
DEFINE FONT oFont BOLD                                     

oMemo := TMultiGet():New( 010,010, { | u | If( PCount() == 0, cMsg, cMsg := u ) },oDlg, 380,270,,.F.,,,,.T.,,.F.,,.F.,.F.,.F.,,,.F.,, )
oMemo:EnableVScroll(.T.)
oMemo:oFont:=oFont

//@ 010,010 GET cMsg MEMO SIZE 380,270 READONLY PIXEL OF oDlg
@ 285,355 BUTTON oBtn1 PROMPT "OK" ACTION oDlg:End() OF oDlg PIXEL SIZE 035,011 //"OK"

ACTIVATE MSDIALOG oDlg CENTERED
	
return

//-----------------------------------------------------------------------
/*/{Protheus.doc} WsMntCAEA
Função que busca os dados da SFP, para montar o browser do momitor de CAEA

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0

@param	cNumIni			Numero inicial que será pesquisado
@param	cNumFim			Numero final que será pesquisado
@param	cSerieIni			Serie inicial que sera pesquisada
@param	cSerieFim			Serie final que será pesquisada
				
@return aListBox			Array com os dados da SFP a ser exibido no browse				
/*/
//-----------------------------------------------------------------------
static function WsMntCAEA(cFilINi,cFilFIm,cMesINi,cMesFim,cAnoIni,cAnoFim)   				  

local aListBox	:= {}
local cCondQry	:= ""
Local cAliasCG6	:= GetNextAlias()
Local cWhere	:= ""
Local oNo		:= LoadBitmap( GetResources(), "LBNO" )

cFilINi 	:= PADR(cFilINi ,Len(FWGETCODFILIAL),"0")                                                                       
cFilFIm 	:= PADR(cFilFIm,Len(FWGETCODFILIAL),"9")                           
cMesINi	:= PADR(SubStr(cMesINi,1,2),2,"0")
cMesFim	:= PADR(SubStr(cMesFim,1,2),2,"9")
cAnoIni	:= PADR(Alltrim(cAnoIni),4,"0")
cAnoFim	:= PADR(Alltrim(cAnoFim),4,"9")

cCondQry := "( CG6.CG6_FILUSO >= '"+cFilINi+"'" 
cCondQry += " AND CG6.CG6_FILUSO <= '"+cFilFIm+"' )"
cCondQry += " AND CG6.CG6_CAEA <> '              ' "
cCondQry += " AND ( CG6.CG6_PERIOD >= '"+cAnoIni+cMesINi+"'"
cCondQry += " AND CG6.CG6_PERIOD <= '"+cAnoFim+cMesFim+"' )"

cWhere+="%CG6.CG6_FILIAL = '"+xFilial("CG6")+"' AND "+cCondQry+"%"

DBSelectArea("CG6")
DBSetorder(1)
	
#IFDEF TOP
	BeginSql Alias cAliasCG6	
	COLUMN CG6_FHCVDE AS DATE
	COLUMN CG6_FHCVAT AS DATE
	COLUMN CG6_FHCTOP AS DATE		
	SELECT *
	FROM %Table:CG6% CG6
	WHERE %Exp:cWhere% AND
	CG6.%notdel%
	EndSql                                                                             
	
	TcSetField(cAliasCG6,"CG6_FHCVDE" ,"D",008,0)
	TcSetField(cAliasCG6,"CG6_FHCVAT" ,"D",008,0)
	TcSetField(cAliasCG6,"CG6_FHCTOP" ,"D",008,0)
#ELSE
	MsSeek(xFilial("CG6")+cFilINi+cAnoIni+cMesINi,.T.)
#ENDIF

cWhere := StrTran(cWhere,"%","")
cWhere := StrTran(cWhere," AND "," .AND. ")
cWhere := StrTran(cWhere,"CG6.","")
cWhere := StrTran(cWhere," = "," == ")

While (cAliasCG6)->(!Eof()) .And. xFilial("CG6") == (cAliasCG6)->CG6_FILIAL .And. ;
		(cAliasCG6)->CG6_FILUSO <= cFilFIm  .And. (cAliasCG6)->CG6_PERIOD <= cAnoFim+ cMesFim
	
	if &( cWhere )
		aadd(aListBox,{.F.,;
			(cAliasCG6)->CG6_FILUSO,;
			(cAliasCG6)->CG6_CAEA,;
			(cAliasCG6)->CG6_FHCVDE,;
			(cAliasCG6)->CG6_FHCVAT,;
			(cAliasCG6)->CG6_FHCTOP,;
			(cAliasCG6)->R_E_C_N_O_})
	endif	
	
	(cAliasCG6)->(dbSkip())
End

return (aListBox)

Static Function VldMarkCAEA(aListBox)

local lRet := aListBox[1]

if lRet == .F.
	if aListBox[5] < Date()
   		lRet := .T. 	
 	elseif	aListBox[5] >= Date()
		Aviso("NFEe",STR0185,{"OK"},3) 		 			
 	endif
else
	lRet := .F.	
endif

return lRet


//-----------------------------------------------------------------------
/*/{Protheus.doc} ArgConsCmp
Função que realiza a consulta de comprovantes 

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0
			
@return Nil				
/*/
//-----------------------------------------------------------------------

Function ArgConsCmp()

ConsCompCAE()

return

//-----------------------------------------------------------------------
/*/{Protheus.doc} ConsCompCAE
Função que realiza validação da consulta de comprovantes 

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0
				
@return Nil				
/*/
//-----------------------------------------------------------------------
Static Function ConsCompCAE()

Local cURL			:= FindURL()
Local cMsg			:= ""
Local cEspecie	:= ""
Local cSerie		:= ""
Local cCod			:= ""
Local cTpDoc		:= ""
Local nCbtTP		:= 0
Local cRG1415       := 0

Local cAlias := cAliasMnt

Local dData              

Local lMa:=.F.
Local lVldExp:=.F.

Local nTipoCbte	:= 0 

If cAlias=="SF2"
	If !Empty(F2_CAEE) 
		lMa:=.T.		
		if lMa .And. cModeloWS == "5" .And. !(F2_FLFTEX $ 'SM') 
			lMa:=.F.
		Endif
	EndIf        
Else	
	If !Empty(F1_CAEE)
		lMa:=.T.
		if lMa .And. cModeloWS == "5" .And. !(F1_FLFTEX $ 'SM') 
			lMa:=.F.
		Endif	
	EndIf	
EndIf

If lMa
	MsgStop(STR0098,"HELP")
	Return()
EndIf

SFP->(DbSetOrder(6))
lVldExp:=.F.          
cTipo:=""


If  cAlias == "SF1"
	cTipo:=Iif(Alltrim( SF1->F1_ESPECIE)=="NF" ,"1",Iif(Alltrim( SF1->F1_ESPECIE)=="NCC","4","5"))  
	cTipo:=Iif(Alltrim( SF1->F1_ESPECIE)=="NDI","3",Iif(Alltrim( SF1->F1_ESPECIE)=="NCI","2",cTipo))
		lVldExp:=Iif ( SFP->(FieldPos('FP_NFEEX'))   >0  .And. SFP->(DbSeek(xfilial("SFP")+cfilant+cTipo+SF1->F1_SERIE+Subs(SF1->F1_DOC,1,nTamPV)) ).And. SFP->FP_NFEEX$"1|2|3|4|5|6" ,.T.,.F.)
	       
	If  !lVldExp    	
   		MsGStop(STR0099 + 	Subs(SF1->F1_DOC,1,nTamPV)  + STR0100,"Tipo")
	    Return()
	EndiF
	
	cEspecie	:= alltrim( SF1->F1_ESPECIE )
	cSerie		:= alltrim( SF1->F1_SERIE )
	cCodComp	:= alltrim( SF1->F1_DOC )
	cTpDoc		:= alltrim( SF1->F1_TIPO )
	cRG1415     := alltrim( SF1->F1_RG1415 )

	nCbtTP:=TipComp("SF1",SF1->F1_TIPO,Subs(SF1->F1_SERIE,1,1))		
Else
	cTipo:=Iif(Alltrim( SF2->F2_ESPECIE)=="NF","1",Iif(Alltrim( SF2->F2_ESPECIE)=="NCC","4","5"))
	cTipo:=Iif(Alltrim( SF2->F2_ESPECIE)=="NDI","3",Iif(Alltrim( SF2->F2_ESPECIE)=="NCI","2",cTipo))
		lVldExp:=Iif ( SFP->(FieldPos('FP_NFEEX'))   >0  .And. SFP->(DbSeek(xfilial("SFP")+cfilant+cTipo+SF2->F2_SERIE+Subs(SF2->F2_DOC,1,nTamPV)) ).And. SFP->FP_NFEEX$"1|2|3|4|5|6" ,.T.,.F.)
	
	If  !lVldExp
		MsGStop(STR0099 + 	Subs(SF2->F2_DOC,1,nTamPV)  + STR0100,"Tipo")
		Return()
	EndiF
	 
	 cEspecie	:= alltrim( SF2->F2_ESPECIE )
	 cSerie	:= alltrim( SF2->F2_SERIE )
	 cCodComp	:= alltrim( SF2->F2_DOC )
	 cTpDoc	:= alltrim( SF2->F2_TIPO )	 	 
	 cRG1415     := alltrim( SF2->F2_RG1415 )

EndIf


nTipoCbte := CodComp(cEspecie,cSerie,cAlias,cTpDoc,cRG1415)

ConsWSCmp(cUrl,nTipoCbte,cCodComp,@cCod,@dData,@cMsg,cAlias)

if !Empty(cCod) .And. !Empty(dData)
	GravaAut(cCod,dData,,.T.)
endif	

Aviso("NFEe",cMsg,{"OK"},3)

return

//-----------------------------------------------------------------------
/*/{Protheus.doc} ConsWSCmp
Função que faz a chamada do WS de consulta comprovante. 

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0

@param	cUrl			URL do TSS
@param	nTipoCbte		Numero do Tipo do Comprovante
@param	cCod			Referencia para retornar no numero do CAE
@param	dData			Referencia para retornar a Data de Validade do CAE
@param	cMsg			Referencia para retornar a mensagem a 	para o usuário

@return Nil
							
/*/
//-----------------------------------------------------------------------

Static Function ConsWSCmp(cUrl,nTipoCbte,cCodComp,cCod,dData,cMsg,cAlias)

Local cCodWs	:= "0"
Local cErro		:= ""
Local cAviso	:= "" 
Local cErroWS	:= "" 
Local cAvisoWS	:= "" 

Local oWs
Local lOk		:= .F.  

Private oRetCons
Private lAuto	:= IIf( lAutoNf, .T., .F. )


If cModeloWS $ "1|5" //nacional e nacional CAEA
	cCodWs := "2"
	Elseif cModeloWS $ "3|7" //reg. nomin
	cCodWs := "3"                      
Else //bono
	cCodWs := "4" 
EndIF

	If !Empty(cURL)//IsReady()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Obtem o codigo da entidade                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ34ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cIdEnt := GetIdEnt()
	
	
	
	if ( cModeloWS $"1|3|4|5" ) //Nacional , Reg. Nominacion,Bono ou Nacional-CAEA
		oWs := WSWSFEV1():New()
		oWs:cUserToken := "TOTVS"
		oWs:cID_ENT    := cIdEnt
		oWS:_URL       := AllTrim(cURL)+"/WSFEV1.apw"	  	
		If !(ArgNfDummy(oWs:cUserToken,oWs:cID_ENT,,,, lAuto))
			cMsg := STR0052 //"Siga atentamente os passos para a configuração da nota fiscal eletrônica."
			Return	
		EndIf
		oWs:cMODELOWS  := cCodWs
		oWs:oWSGETCMP:nCBTE_NRO	:= Val(SubStr(cCodComp,nTamPV+1))
		oWs:oWSGETCMP:nPUNTO_VTA	:= Val(SubStr(cCodComp,1,nTamPV))
		oWs:oWSGETCMP:nTIPO_CBTE	:= nTipoCbte
				
		lOk := oWs:WSFEV1FECOMPCONSULTAR()
	
	elseif cModeloWS == '2'
		
		oWS := WSNFESLOC():New()	  
		                  
		oWs:cUserToken := "TOTVS"
		oWs:cID_ENT    := cIdEnt
		oWS:_URL       := AllTrim(cURL)+"/NFESLOC.apw"   
		
		
		cData:=	 FsDateConv(Date(),"YYYYMMDD")
		cData := SubStr(cData,1,4)+"-"+SubStr(cData,5,2)+"-"+SubStr(cData,7)

		oWS:CDATETIMEGER:=cData+"T00:00:00" 
		oWS:cDATETIMEEXP:=cData+"T23:59:59"
		
		oWs:cUserToken := "TOTVS"
		oWs:cID_ENT    := cIdEnt
		oWS:_URL       := AllTrim(cURL)+"/NFESLOC.apw"
		oWs:cCWSSERVICE  := FindWSServ()
		oWS:GETAUTHREM ()
		
		oWS:oWSGETCMP:nCBTE_NRO		:= Val(SubStr(cCodComp,nTamPV+1))
		oWS:oWSGETCMP:nPUNTO_VTA	:= Val(SubStr(cCodComp,1,nTamPV))
		oWS:oWSGETCMP:nTIPO_CBTE	:= nTipoCbte
				
		lOk := oWS:GetCMPArg ()	  	
			
	endif
	
	if lOk <> Nil .And. lOk
	    
		if cModeloWS $ "2" //Exportação utiliza outro Método do TSS
			cErroWS 	:= oWS:OWSGETCMPARGRESULT:OWSERROS:CERRMSG
			cAvisoWs	:= oWS:OWSGETCMPARGRESULT:OWSEVENTS:CEVENTMSG						
			oRetCons := XmlParser(Decode64(oWS:OWSGETCMPARGRESULT:CCOMPAUTH),"_",@cErro,@cAviso)
		else
			cErroWS 	:= oWS:OWSWSFEV1FECOMPCONSULTARRESULT:CERRORS
			cAvisoWs	:= oWS:OWSWSFEV1FECOMPCONSULTARRESULT:CEVENTS
			oRetCons := XmlParser(oWS:OWSWSFEV1FECOMPCONSULTARRESULT:CCOMPROVANTE,"_",@cErro,@cAviso)			
		endif
		
	
	 	If ( !Empty( cErroWS ) .Or. !Empty( cAvisoWs ) ) .And. Type("oRetCons:_BFERESULTGET:_CAE:TEXT") == "U" //VALIDA O OBJETO PARA O MODELO DE BONO, POIS AFIPE DEVOLVE MSG DE ERRO TAMBEM PARA DOCUMENTOS AUTORIZADOS
			cMsg	:= STR0200 + CRLF + cErroWS + CRLF + cAvisoWs //"Autorização não foi recebida, veja o retorno da AFIP: "
		Else	
								
			if empty( cErro + cAviso )						
				if cModeloWS $ "1|5" 								
					cCod	:= Alltrim(oRetCons:_RESULTGET:_CODAUTORIZACION:TEXT)
					dData	:= STOD( oRetCons:_RESULTGET:_FCHVTO:TEXT )
					cMsg	:= STR0197 + CRLF + STR0198 + cCod + CRLF + STR0199 + dtoc(dData) //"Autorização Recebida com sucesso "###"Cod. Autorizaçao: "###"Data Venc.: "
				
				elseif cModeloWS $ "3"
					cCod	:= Alltrim(oRetCons:_COMPROBANTE:_CODIGOAUTORIZACION:TEXT)
					dData	:= STOD( StrTran(oRetCons:_COMPROBANTE:_FECHAVENCIMIENTO:TEXT,"-","") )
					cMsg	:= STR0197 + CRLF + STR0198 + cCod + CRLF + STR0199 + dtoc(dData) //"Autorização Recebida com sucesso "###"Cod. Autorizaçao: "###"Data Venc.: "
					
				elseif cModeloWS $ "4"
					cCod	:= Alltrim( oRetCons:_BFERESULTGET:_CAE:TEXT )
					dData	:= STOD( StrTran( oRetCons:_BFERESULTGET:_FCH_VENC_CAE:TEXT,"-","" ) )
					cMsg	:= STR0197 + CRLF + STR0198 + cCod + CRLF + STR0199 + dtoc(dData) //"Autorização Recebida com sucesso "###"Cod. Autorizaçao: "###"Data Venc.: "				
														
				elseif cModeloWS $ "2"
					cCod	:= Alltrim(oRetCons:_CMP:_CAE:TEXT)
					dData	:= STOD( oRetCons:_CMP:_FCH_VENC_CAE:TEXT )
					cMsg	:= STR0197 + CRLF + STR0198 + cCod + CRLF + STR0199 + dtoc(dData) //"Autorização Recebida com sucesso "###"Cod. Autorizaçao: "###"Data Venc.: "			
				endif
			else
			    cMsg := STR0196 + CRLF + cErro + CRLF + cAviso //"Erro de parser na Resposta da AFIP"
			endif  
		endif			 				
	else
		cMsg := IIf(Empty(GetWscError(3)),GetWscError(1),GetWscError(3))		
	endif
else
	cMsg := STR0298 + CHR(10) + CHR(13) + STR0299 +  CHR(10) + CHR(13) + STR0300  // "No se detectó configuración de conexión con TSS." // "Por favor, ejecute opción Wizard de Configuración."
					   // "Siga atentamente os passos para a configuração da nota fiscal eletrônica."
endif
	
return


//-----------------------------------------------------------------------
/*/{Protheus.doc} CodComp
Função que busca o tipo de comprovante conforme modelo de WS e Documento 

@author Rafael Iaquinto
@since 23/01/2013
@version 1.0

@param	cEspecie			Especie do documento
@param	cSerie				Serie do documento
@param	cAlias				Alias que esta sendo utilizada para o browse
@param	cTpDoc				Tipo do documento
				
@return nCod				Codigo do Tipo de comprovante
							
/*/
//-----------------------------------------------------------------------


Static Function CodComp(cEspecie,cSerie,cAlias,cTpDoc,cRG1415)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³1 – Factura A         ³
//³2 – Nota de Débito A  ³
//³3 – Nota de Crédito A ³
//³6 – Factura B         ³
//³7 – Nota de Débito B  ³
//³8 – Nota de Crédito B ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Local nCod := 0 
Local lMiPyme := .F.

Default cRG1415 := "01"

If Val(cRG1415) > 200
	lMiPyme := .T.
EndIf

if cModeloWS $ "1|5" //Nacional e Nacional CAEA
	 nCod := TipComp(cAlias,cTpDoc,SubStr(cSerie,1,1))
elseif cModeloWS $ "4" //BONO	
	If (Subs(Alltrim(cSerie),1,1)== "A") //serie A 

		If (Alltrim(cEspecie) == "NF") 
			nCod := IIf(lMiPyme, 201, 1)
		Elseif (Alltrim(cEspecie) $ "NDC|NDI") 
			nCod := IIf(lMiPyme, 202, 2)
	    Elseif (Alltrim(cEspecie) $ "NCC|NCI")  
	    	nCod := IIf(lMiPyme, 203, 3)
	    Else
	    	nCod := 39
	    Endif
	Elseif (Subs(Alltrim(cSerie),1,1)== "B") //serie B
	
		If (Alltrim(cEspecie) == "NF") 
			nCod := IIf(lMiPyme, 206, 06)
		Elseif (Alltrim(cEspecie) $ "NDC|NDI") 
			nCod := IIf(lMiPyme, 207, 07)		
		Elseif (Alltrim(cEspecie) $ "NCC|NCI") 
		  	nCod := IIf(lMiPyme, 208, 08)
		Else
		   	nCod := 40
		Endif	
	Endif
elseIF cModeloWS == "2" //Reg. Exportacion
	if alltrim(cEspecie)=='NCC'
		nCod := 21
	elseif alltrim(cEspecie)=='NDC'
		nCod := 20
	elseif (alltrim(cEspecie)<>'NCC' .and. alltrim(cEspecie)<>'NDC')
		nCod := 19
	endif		
else  //Nominacion
	If (Alltrim(cEspecie) == "NF")  
		If (SUBS(Alltrim(cSerie),1,1)== "A")  
		    nCod := 1
		Else
			nCod := 6	
		EndIf
	Else
		If (SUBS(Alltrim(cSerie),1,1) == "A")		
			If (Alltrim(cEspecie) $ "NDC|NDP|NDE|NDI")
				nCod := 2
			Else
				nCod := 3
			EndIf
		Else
			If ( Alltrim(cEspecie) $ "NDC|NDP|NDE|NDI" )
				nCod := 7
			Else
				nCod := 8	
			EndIF		
		EndIf	
	EndIf			
endif

Return nCod

static function CAEAVerHist(cFilIni,cFilFim,cMesIni,cMesFim,cAnoIni,cAnoFim,lEnd)


local aInfAdic		:= {}
Local aMarcados	:= {}
Local aIndCG6		:= {}
Local aCores		:= {}

Local nOk		:= 0
Local cCondicao	:= ""

Private aRotina := {}
Private cCadastro := STR0284 //"Monitor de Solicitação de CAEA"

aRotina   := MenuCaea()

aCores    :={{"CG6_CAEASM=='1'",'DISABLE' },;	//CAEA Utilizado.
					{"CG6_CAEASM=='2'",'ENABLE'}}//NF Autorizada
						
cMesIni := SubStr(cMesIni,1,2)
cMesFim := SubStr(cMesFim,1,2)


cCondicao := "CG6->CG6_FILIAL == '"+xFilial("CG6")+"' .And. "		
cCondicao += "CG6->CG6_FILUSO >= '"+cFilIni+"' .And. CG6->CG6_FILUSO <= '"+cFilFim+"' .And. "
cCondicao += "CG6->CG6_PERIOD >= '"+cAnoIni+cMesIni+"' .And. CG6->CG6_PERIOD <= '"+cAnoFim+cMesFim+"'"

dbSelectArea("CG6")
dbSetOrder(1)			
bFiltraBrw := {|| FilBrowse("CG6",@aIndCG6,cCondicao,.T.) }
Eval(bFiltraBrw)		
	
mBrowse( 6,1,22,75,"CG6",,,,,,aCores,/*cTopFun*/,/*cBotFun*/,/*nFreeze*/,/*bParBloco*/,/*lNoTopFilter*/,.F.,.F.,)


//Finaliza o uso da funcao FilBrowse e retorna os indices padroes.

If ( Len(aIndCG6)>0 )
	   
  	EndFilBrw("CG6",aIndCG6)
  	 
EndIf


return()

//-------------------------------------------------------------------
/*/{Protheus.doc} retIsMarked 
Função que retorna o array com os registros marcados no Browse.

@param cAlias	Alias do Browse do monitor  

@return aRecnos	Array com os recnos

@author  Henrique Brugugnoli
@since   08/11/2010
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function retIsMarked( aListBox )

Local aMarcados	:= {}
Local nX		:= 0

For nX := 1 to Len(aListBox)

	If (  aListBox[nX][01]  )
		aAdd(aMarcados,aListBox[nX])
	EndIf
		
Next nX  
 
Return aMarcados

//---------------------------------------------------------------------
/*/{Protheus.doc} ArgSetTitleText
Funcao que atribui texto ao título da visualização do documento

@param	oOwner	Objeto de tela pai
@param	cText	Texto que será atribuido

@author Rafael Iaquinto
@since 07/05/2013
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function ArgSetTitleText( oOwner, cText )

Local oPanelLine                       

DEFAULT cText	:= ""

@ 000,000 MSPANEL oPanelLine OF oOwner SIZE 000,003
oPanelLine:Align := CONTROL_ALIGN_BOTTOM

@ 000,000 BITMAP oImg RESOURCE "smallline.png" SIZE 000,5 OF oPanelLine PIXEL NO BORDER
oImg:lStretch 	:= .T.
oImg:Align 		:= CONTROL_ALIGN_ALLCLIENT  

DEFINE FONT oFont NAME "Arial" BOLD SIZE 0, 18 //BOLD
@ 004,002 SAY oSay PROMPT cText OF oOwner SIZE 300,300 PIXEL COLOR RGB(103, 103, 103) FONT oFont

Return

//-----------------------------------------------------------------------
/*/{Protheus.doc} CAEACriaTrb
Funcao que cria um arquivo de trabalho, para gravação do Log de 
Processamento do CAEA.

@return cArqTrab	Arquivo de trabalho a ser utilizado.

@author Rafael Iaquinto
@since 21/10/2011
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function CAEACriaTrb()

local cArqTrab:= ""
local aStruct	:= {}
local cIndex	:= ""
Local aOrdem := {}

aStruct 	:= CAEAGetStructLog()	

cArqTrab := CriaTrab(Nil,.F.)

oTmpTable := FWTemporaryTable():New(cArqTrab) 
oTmpTable:SetFields( aStruct ) 
aOrdem	:=	{"FILIAL","NUMCAEA","ORDEM","PERIODO"} 
oTmpTable:AddIndex("IN1", aOrdem) 
oTmpTable:Create() 

return(cArqTrab)

//---------------------------------------------------------------------
/*/{Protheus.doc} CAEAGetStructLog
Função que retorna a estrutura do arquivo de trabalho.


@return aStruct	Estrutura a ser gerada na tabela de log.

@author Rafael Iaquinto
@since 21/10/2011
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function CAEAGetStructLog()

Local aStruct	:= {}

aAdd(aStruct,{"FILIAL"		,"C",TAMSX3("FP_FILIAL")[1],000})
aAdd(aStruct,{"COD_ERPTSS"	,"C",1,000})
aAdd(aStruct,{"MSG_ERPTSS"	,"C",250,000})
aAdd(aStruct,{"COD_SOL"		,"C",1,000})
aAdd(aStruct,{"MSG_SOL"		,"C",250,000})
aAdd(aStruct,{"MSG_ATU"		,"C",100,000})
aAdd(aStruct,{"NUMCAEA"		,"C",14,000})
aAdd(aStruct,{"FCH_PROC"		,"C",8,000})
aAdd(aStruct,{"FCH_TOP"		,"C",8,000})
aAdd(aStruct,{"FCH_DESDE"	,"C",8,000})
aAdd(aStruct,{"FCH_HASTA"	,"C",8,000})
aAdd(aStruct,{"ORDEM"		,"C",1,000})
aAdd(aStruct,{"PERIODO"		,"C",6,000})

Return aStruct

//------------------------------------------------------------------------
/*/{Protheus.doc} CAEAAtuTrb
Funcao que realiza a atualização do TRB do log de processamento da
solicitação do CAEA.  

@param	cArqTrab 	Nome do TRB a ser atualizado.
@param	aDadosCAEA 	Dados do CAEA Recebido.
@param	cFil 		Filial do processamento.
@param	cMsgCfgTss	Mensagem da configuração do TSS.
@param	cStatCfgTSS	Status da configuração do TSS.
@param	lGetCAEA	Flag informando se o CAEA foi solicitado com sucesso.

@return lGravou 	Variável lógica informando se foi possível gravar o registro.

@author Rafael Iaquinto
@since 14/05/2013
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function CaeaAtuTrb(cArqTrab,aDadosCAEA,cFil,cMsgCfgTss,cStatCfgTSS,lGetCAEA,cMsgSolCaea) 


RecLock(cArqTrab,.T.)
(cArqTrab)->FILIAL		:= cFil
(cArqTrab)->COD_ERPTSS	:= cStatCfgTSS
(cArqTrab)->MSG_ERPTSS	:= cMsgCfgTss
(cArqTrab)->COD_SOL		:= IIF(lGetCAEA,"1","2")
(cArqTrab)->MSG_SOL		:= cMsgSolCaea
(cArqTrab)->MSG_ATU		:= IF( lGetCAEA,STR0243,STR0244)//"CAEA GRAVADO COM SUCESSO"###"CAEA NÃO FOI GRAVADO"  
	
if lGetCAEA
	(cArqTrab)->NUMCAEA		:= aDadosCAEA[1]
	(cArqTrab)->FCH_PROC		:= SubStr(  aDadosCAEA[2], 1, 9 )
	(cArqTrab)->FCH_TOP		:= aDadosCAEA[3]
	(cArqTrab)->FCH_DESDE	:= aDadosCAEA[4]
	(cArqTrab)->FCH_HASTA	:= aDadosCAEA[5]
	(cArqTrab)->ORDEM			:= aDadosCAEA[6]
	(cArqTrab)->PERIODO		:= aDadosCAEA[7]		
endif
		
(cArqTrab)->(msUnlock())


return

//-------------------------------------------------------------------------
/*/{Protheus.doc} CaeaShowLog
Exibe o status do processamento da solicitalção do CAEA.  

@param	cArqTrab 	Nome do alias a ser apresentado.

@return Nil

@author Rafael Iaquinto
@since 14/05/2013
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function CaeaShowLog(cArqTrab)

DEFINE MSDIALOG oDlg TITLE STR0240 FROM 0,0 TO 380,550 PIXEL  //"Status do Processamento"

oDlg:lEscClose := .F.

//-- Titulo do Formulários
ArgSetTitleText( oDlg, STR0241 )//"Veja abaixo as filiais processadas e seus status:"

@ 020,003 MSPANEL oPanelLine OF oDlg SIZE 270,003

@ 000,000 BITMAP oImg RESOURCE "line.png" SIZE 000,5 OF oPanelLine PIXEL NO BORDER
oImg:lStretch 	:= .T.
oImg:Align 		:= CONTROL_ALIGN_ALLCLIENT

CAEATreeLog( cArqTrab, oDlg )

oBtnSair	:= TButton():New( 168, 230, STR0182, oDlg,{|| oDlg:end() }, 040, 017,,,, .T.) //"Sair" 
oBtnXml	:= TButton():New( 168, 173, STR0242, oDlg,{|| getXmlCAEA( cArqTrab ) }, 053, 017,,,, .T.) //"Salvar(XML)"
	
ACTIVATE MSDIALOG oDlg CENTERED

Return

//--------------------------------------------------------------------
/*/{Protheus.doc} CAEATreeLog
Função que cria a Tree do LOG.

@param cAlias	Alias com os registros do log
@param oDlg		Janela pai da tree

@author Henrique Brugugnoli
@since 17/11/2011
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function CAEATreeLog( cArqTrab, oDlg ) 

Local cFil		:= ""

oTree := xTree():New(030, 006, 160, 270,oDlg)                   

oTree:AddTree( STR0225,'FOLDER5','FOLDER6', "ROOT" ) //"Filiais Atualizadas" 
            
(cArqTrab)->(dbGoTop())
(cArqTrab)->(dbSetOrder(1))

While (cArqTrab)->(!EoF())

    cFil	:= ( Alltrim( (cArqTrab)->FILIAL ) )
    	
    oTree:AddTree( STR0226+cFil,"FOLDER5","FOLDER6",cFil+"FIL" )//"Filial: "
    oTree:AddTreeItem ( STR0227+IIF((cArqTrab)->COD_ERPTSS =="1","OK",STR0228),"right.png", cFil+"COD" ) //"Comu. TSS: "###"Não OK"
    oTree:AddTreeItem ( STR0229+(cArqTrab)->MSG_ERPTSS,"right.png", cFil+"MSG" )//"Msg. Comu. TSS.: "
    oTree:AddTreeItem ( STR0230+(cArqTrab)->COD_SOL,"right.png", cFil+"CSO" )//"Cod. Sol. CAEA: "
    oTree:AddTreeItem ( STR0231+(cArqTrab)->MSG_SOL,"right.png", cFil+"MSO" ) //"Msg. Sol. CAEA: "    	    	
   
   If (cArqTrab)->COD_SOL == "1"
	   	 	   
	   oTree:AddTreeItem ( STR0232+Alltrim((cArqTrab)->MSG_ATU),"right.png", cFil+"STA" )//"Stauts: "
	   oTree:AddTreeItem ( STR0233+Alltrim((cArqTrab)->NUMCAEA),"right.png", cFil+"CAE" )//"Numero CAEA: "
	   oTree:AddTreeItem ( STR0234+Alltrim(DTOC(STOD((cArqTrab)->FCH_PROC))),"right.png", cFil+"FPR" ) //"Data Processo: "
	   oTree:AddTreeItem ( STR0235+Alltrim(DTOC(STOD((cArqTrab)->FCH_TOP))),"right.png", cFil+"FTP" ) //"Data Max. Inf.: "
	   oTree:AddTreeItem ( STR0236+Alltrim(DTOC(STOD((cArqTrab)->FCH_DESDE))),"right.png", cFil+"FTD" )//"Data Vig. De: "
	   oTree:AddTreeItem ( STR0237+Alltrim(DTOC(STOD((cArqTrab)->FCH_DESDE))),"right.png", cFil+"FTA" )//"Data Vig. Ate: "
	   oTree:AddTreeItem ( STR0238+IIF(Alltrim((cArqTrab)->ORDEM)=="1",STR0131,STR0132),"right.png", cFil+"ORD" ) //"Ordem: "###"1-Primeira quinzena"###"2-Segunda quinzena"
	   oTree:AddTreeItem ( STR0239+SubStr((cArqTrab)->PERIODO,5,2)+"-"+SubStr((cArqTrab)->PERIODO,1,4),"right.png", cFil+"PER" )//"Periodo: "	   
	   	   
	endIf
	
	oTree:endTree()   	   	  
	   
	(cArqTrab)->(dbSkip())
End

oTree:TreeSeek("ROOT")
oTree:endTree()  

Return 

//---------------------------------------------------------------------
/*/{Protheus.doc} CaeaDelTrb
Função que exclui os arquivis temporários do Log de processamento do CAEA

@param cArqTrab	 Arquivo temporário a ser Excluido

@author Rafael Iaquinto
@since 14/05/2013
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function CaeaDelTrb(cArqTrab)

local cIndex := cArqTrab + "_1"

(cArqTrab)->(dbCloseArea())

If oTmpTable <> Nil   
	oTmpTable:Delete()  
	oTmpTable := Nil 
EndIf 

return

//-----------------------------------------------------------------------
/*/{Protheus.doc} MenuCaea
Função que devolve o menu utilizado no browser do CAEA.

@param cArqTrab	 Arquivo temporário a ser Excluido

@author Rafael Iaquinto
@since 14/05/2013
@version 11.6
/*/
//------------------------------------------------------------------
Static Function MenuCaea()

aRotina := {    {STR0017,"PesqBrw"      ,0,1,0,.F.},;  //"Pesquisa"
							{STR0127,"CAEAProcSol"    ,0,3,0 ,NIL},;//"Sol.CAEA"
							{STR0247,"CAEASemInf" ,0,2,0 ,NIL},;    //"Sem Inf."
							{STR0016,"SolCAEALeg"    ,0,3,0 ,NIL}}  //"Legenda"
return(aRotina)


//-------------------------------------------------------------------------
/*/{Protheus.doc} getXmlLog
Função que devolve o menu utilizado no browser do CAEA.

@param cArqTrab	 Arquivo temrário para geração do Log.

@author Rafael Iaquinto
@since 14/05/2013
@version 11.6
/*/
//------------------------------------------------------------------
Static Function getXmlCAEA( cArqTrab )

cDestino := cGetFile( "*.xml", "XML do Log", 1, "", .T., nOr(GETF_LOCALHARD,GETF_RETDIRECTORY), .F. , .T. )

If ( !empty(cDestino) )
	If ( XmlLogCAEA( cArqTrab, cDestino ) )
		MsgAlert(STR0222+CRLF+cDestino+StrTran(cArqTrab,getdbExtension(),".xml")) //"Arquivo de log detalhado gerado com sucesso."						
	Else
		MsgAlert(STR0223+CRLF+cDestino+cArqTrab+".xml") //"O arquivo não foi gerado."
	EndIf
Else
	MsgAlert(STR0224)//"Operação abortada. Deve ser escolhido um local para ser gerado o arquivo de log detalhado."
EndIf

return

//--------------------------------------------------------------------
/*/{Protheus.doc} XmlLogCAEA
Função que gera o arquivo XML com o Log.

@param cFile	 Nome do arquivo
@param cDestino	 Destino onde será criado o arquivo 

@return lGenerate	Se True o arquivo XML foi gerado com sucesso

@author Rafael Iaquinto
@since 20/05/2013
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function XmlLogCAEA(cArqTrab,cDestino,cFile)
Local cBarra	:= If(isSrvUnix(),"/","\")
Local lGenerate	:= .F.

Local nHdl

Default cFile  := StrTran(cArqTrab,getdbExtension(),".xml")

If ( SELECT(cArqTrab) > 0 )
	cDestino := StrTran(cDestino,"/",cBarra)
	cDestino := StrTran(cDestino,"\",cBarra)
	
	If ( Substr(cDestino,len(cDestino),1) <> cBarra )
		cDestino := cDestino + cBarra
	EndIf
	
	nHdl := fCreate(cDestino+cFile)
	
	
	
	If ( nHdl >= 0 ) 
	
		lGenerate := .T.
	
		fWrite(nHdl,"<ProcCAEA>")
		fWrite(nHdl,"<xDesc>")
		fWrite(nHdl,STR0221) //"LOG DE PROCESSAMENTO DO CAEA"
		fWrite(nHdl,"</xDesc>")
		fWrite(nHdl,"<Filiais>")
		(cArqTrab)->(dbGoTop())
		(cArqTrab)->(dbSetOrder(1))
		While (cArqTrab)->(!EoF())    
			
			fWrite(nHdl,'<Filial id="'+Alltrim( (cArqTrab)->FILIAL )+'">')
			
			fWrite(nHdl,"<Cod_Stat_Erp_TSS>")			
			fWrite(nHdl,Alltrim( (cArqTrab)->COD_ERPTSS ))
			fWrite(nHdl,"</Cod_Stat_Erp_TSS>")
			
			fWrite(nHdl,"<Msg_Stat_Erp_TSS>")			
			fWrite(nHdl,EncodeUtf8(Alltrim( (cArqTrab)->MSG_ERPTSS )))
			fWrite(nHdl,"</Msg_Stat_Erp_TSS>")
			
			fWrite(nHdl,"<Cod_Sol_CAEA>")			
			fWrite(nHdl,Alltrim((cArqTrab)->COD_SOL ))
			fWrite(nHdl,"</Cod_Sol_CAEA>")
			
			fWrite(nHdl,"<Msg_Sol_CAEA>")			
			fWrite(nHdl,EncodeUtf8(Alltrim((cArqTrab)->MSG_SOL )))
			fWrite(nHdl,"</Msg_Sol_CAEA>")
			
			fWrite(nHdl,"<CAEA>")
			if (cArqTrab)->COD_SOL == "1"
				
				fWrite(nHdl,"<Status>")			
				fWrite(nHdl,EncodeUtf8(Alltrim( (cArqTrab)->MSG_ATU )))
				fWrite(nHdl,"</Status>")
				
				fWrite(nHdl,"<Num_CAEA>")			
				fWrite(nHdl,Alltrim( (cArqTrab)->NUMCAEA ))
				fWrite(nHdl,"</Num_CAEA>")
				
				fWrite(nHdl,"<Fch_Proc>")			
				fWrite(nHdl,Alltrim( (cArqTrab)->FCH_PROC) )
				fWrite(nHdl,"</Fch_Proc>")
				
				fWrite(nHdl,"<Fch_Top>")			
				fWrite(nHdl,Alltrim( (cArqTrab)->FCH_TOP) )
				fWrite(nHdl,"</Fch_Top>")
				
				fWrite(nHdl,"<Fch_Desde>")			
				fWrite(nHdl,Alltrim( (cArqTrab)->FCH_DESDE) )
				fWrite(nHdl,"</Fch_Desde>")
				
				fWrite(nHdl,"<Ordem>")			
				fWrite(nHdl,Alltrim( (cArqTrab)->ORDEM) )
				fWrite(nHdl,"</Ordem>")
				
				fWrite(nHdl,"<Periodo>")			
				fWrite(nHdl,Alltrim( (cArqTrab)->PERIODO) )
				fWrite(nHdl,"</Periodo>")		
											
			endif
			fWrite(nHdl,"</CAEA>")			
			fWrite(nHdl,"</Filial>")
		
			(cArqTrab)->(dbSkip())
		End
				
		 		
		fWrite(nHdl,"</Filiais>")		
		fWrite(nHdl,"</ProcCAEA>") 
		
		fClose(nHdl)
		
	EndIf
		
EndIf

RETURN lGenerate

//---------------------------------------------------------------------
/*/{Protheus.doc} ArgAtuCG6
Função que atualiza a tabela CG6 com os dados do CAEA.

@param cFil		 	Filial de Uso
@param cPeriodo	 	Periodo da solicitação do CAEA.   
@param cOrdem	 	Ordem da solicitação do CAEA.
@param aDadosCAEA	Dados do CAEA a ser gravado na tabela CG6.
     

@return lGenerate	Se True o arquivo XML foi gerado com sucesso

@author Rafael Iaquinto
@since 20/05/2013
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function ArgAtuCG6(cFil,cPeriodo,cOrdem,aDadosCAEA,cCAEA,cSerie,cNum )

local aArea 		:= getArea()
local lRecLock 	:= .T.
local cSeek		:= ""

default cPeriodo		:= ""
default cOrdem			:= ""
default cCAEA			:= ""
default aDadosCAEA	:= {}
default cSerie 		:= ""
default cNum	 		:= ""

if !Empty( cCAEA )
	CG6->(dbSetOrder(1))
	cSeek := xFilial("CG6")+cFil+PadR(cCAEA,14,"")
else
	CG6->(dbSetOrder(2)) 
	cSeek := xFilial("CG6")+cFil+cPeriodo+cOrdem 	 
endif

If CG6->(dbSeek( cSeek ))
	lRecLock :=  .F.
endif

Begin Transaction 
	
	RecLock("CG6",lRecLock)
	
	if Empty( cCAEA ) .And. Len(aDadosCAEA) > 0
		CG6->CG6_FILIAL	:= xFilial("CG6")
		CG6->CG6_FILUSO	:= cFil
		CG6->CG6_CAEA 		:= Alltrim(aDadosCAEA[1])
		CG6->CG6_FHCPRC 	:= STOD(aDadosCAEA[2])  
		CG6->CG6_FHCTOP 	:= STOD(aDadosCAEA[3])  
		CG6->CG6_FHCVDE 	:= STOD(aDadosCAEA[4])  
		CG6->CG6_FHCVAT 	:= STOD(aDadosCAEA[5])  
		CG6->CG6_ORDEM 	:= Alltrim( aDadosCAEA[6] )  
		CG6->CG6_PERIOD 	:= Alltrim( aDadosCAEA[7] )
		CG6->CG6_CAEASM 	:= "1"
		CG6->CG6_XMLPTO	:= ""
	else
		if CG6->CG6_CAEASM =="1"
			CG6->CG6_CAEASM 	:= "2"
		endif	
		if ( Empty( CG6->CG6_CAEA ) .And. !Empty( cCAEA ) )
			CG6->CG6_CAEA := cCAEA
		endif
		if !Empty(cSerie) .And. !Empty(cNum) .And. !Empty( cCAEA )
			CG6->CG6_XMLPTO := AtuXmlPto(CG6->CG6_XMLPTO,cSerie,cNum)
		endif
	endif
	MsUnLock()
		 

End Transaction

RestArea(aArea)
		
return
//----------------------------------------------------------------------
/*/{Protheus.doc} SolCAEALeg
Função que demonstra a legenda das cores da mbrowse.


@return .T.

@author Rafael Iaquinto
@since 20/05/2013
@version 11.6
/*/
//-------------------------------------------------------------------
Function SolCAEALeg()
Local aLegenda	:= {}
Local aCores 	:= {}
				

aCores    := {{"CG6_CAEASM=='1'",'DISABLE' },;	//CAEA não utilizado
			  {"CG6_CAEASM=='2'",'ENABLE'}} //CAEA Utilizado

Aadd(aLegenda, {"DISABLE"   ,STR0193})  //"CAEA não utilizado"
Aadd(aLegenda, {"ENABLE"    ,STR0192})  //"CAEA utilizado"


BrwLegenda(STR0194,STR0016,aLegenda)  //"Legenda"

Return(.T.)

//-----------------------------------------------------------------------
/*/{Protheus.doc} CAEAMovimento
Função que demonstra a legenda das cores da mbrowse.

@param	cFil		Filial de utilização.
@param	nPtoVenda	Numero do Ponto de Venda.
@param	cCAEA		Número do CAEA.	
@param	nRecnoCG6	Recno da tabel CG6 a ser verificado o movimento.
@param	cMsgUso		Mensagem de retorno a ser apresentada ao usuário.
 
@return .T.

@author Rafael Iaquinto
@since 20/05/2013
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function CAEAMovimento(cFil, nPtoVenda, cCAEA, nRecnoCG6 ,cMsgUso)

local cErro	:= ""
local cAviso	:= ""

local lMov		:= .F.

local aArea	:= GetArea()

private aPtos
private oXml

CG6->(dbGoto(nRecnoCG6))
if !Empty(CG6->CG6_XMLPTO)
	
	oXml := XmlParser(CG6->CG6_XMLPTO,"_",cErro,cAViso)
	
	if Empty( cErro + cAviso )
		
		if Type("oXml:_pto_usados:_dados_pto") == "A"
			aPtos := oXml:_pto_usados:_dados_pto
		else
			aPtos := {oXml:_pto_usados:_dados_pto}
		endif
		
		nX := Ascan( aPtos,{ |x| X:_PTO:TEXT == Alltrim(Str(nPtoVenda)) })
		
		if  ( nX ) > 0
			lMov := .T.
			cMsgUso := STR0282 //"Encontrada movimentações para o ponto de venda."						
		endif
	else
		cMsgUso := STR0283+cErro+" "+cAviso //"XML do ponto de venda inválido: "  	
	endif
endif

RestArea(aArea)

aPtos := Nil
oXml  := Nil
DelClassintF()

return lMov

//-----------------------------------------------------------------------
/*/{Protheus.doc} AtuXmlPto
Função que retorna o XML atualizado dos pontos de venda utilizados 
para o CAEA.

@param	cXMlAtual	Xml atual	
@param	cSerie		Serie do documento.
@param	cNum		Numero do documento.		

@return cXML	

@author Rafael Iaquinto
@since 20/05/2013
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function AtuXmlPto(cXMlAtual,cSerie,cNum)

if Empty(cXmlAtual)
	 cXml := '<pto_usados>'
else
	 cXml := cXMlAtual
	 cXml := StrTran(cXml,'</pto_usados>',"")
endif

cXml += '<dados_pto>'
cXml += '<serie>'+cSerie+'</serie>'
cXml += '<numero>'+SubStr(cNum,nTamPV+1)+'</numero>'
cXml += '<pto>'+Alltrim(Str(Val(SubStr(cNum,1,nTamPV))))+'</pto>'
cXml += '</dados_pto>'

cXml += '</pto_usados>'

return cXml

//------------------------------------------------------------------------
/*/{Protheus.doc} ARGNNFeRe3
Função que monta o Wizard de Transmissão do CAEA da Argentina, possibili-
tando a escolha de filial e serie (de-ate).

@return Nil	

@author Rafael Iaquinto
@since 20/05/2013
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function ARGNNFeRe3(cSerie,cNotaIni,cNotaFim,lCTe,lRetorno,lAutoNf)


Local cRetorno    := ""
Local cIdEnt      := ""
Local cAmbiente   := ""
Local cVersao     := ""
Local cVersaoCTe  := ""
Local cVersaoDpec := ""
Local cURL        := FindURL()

Local nX          := 0
Local lOk         := .T.

Local oWs
Local oWizard
Local cParRem3 := __cUserID+SM0->M0_CODIGO+SM0->M0_CODFIL+"Wiz.Trans.CAEA"

Local aArea       := GetArea()
Local aPerg       := {}
Local aParam      := {}
Local aTexto      := {}
Local aXML        := {}

Default cSerie    := ""
Default cNotaIni  := ""
Default cNotaFim  := ""
Default lCTe      := .F. 
Default lRetorno  := .F.
Default lAutoNf   := .F.

aadd(aParam,Space(Len(FWGETCODFILIAL)) )
aadd(aParam,Space(Len(FWGETCODFILIAL)) )
aadd(aParam,Space(Len(SF2->F2_SERIE)) )
aadd(aParam,Space(Len(SF2->F2_SERIE)) )
aadd(aParam,Space(Len(SF2->F2_DOC)) )
aadd(aParam,Space(Len(SF2->F2_DOC)) )
aadd(aParam,CTOD('  /  /  ') )
aadd(aParam,CTOD('  /  /  ') )

If !lAutoNf .and. (cSerie == Nil .Or. Empty(cSerie) )
	MV_PAR01 := aParam[01] := PadR(ParamLoad(cParRem3,aPerg,1,aParam[01]),Len(FWGETCODFILIAL))		//Filial De
	MV_PAR02 := aParam[02] := PadR(ParamLoad(cParRem3,aPerg,2,aParam[02]),Len(FWGETCODFILIAL))		//Filial Ate
	MV_PAR03 := aParam[03] := PadR(ParamLoad(cParRem3,aPerg,3,aParam[03]),Len(SF2->F2_SERIE))
	MV_PAR04 := aParam[04] := PadR(ParamLoad(cParRem3,aPerg,4,aParam[04]),Len(SF2->F2_SERIE))
	MV_PAR05 := aParam[05] := PadR(ParamLoad(cParRem3,aPerg,5,aParam[05]),Len(SF2->F2_DOC))
	MV_PAR06 := aParam[06] := PadR(ParamLoad(cParRem3,aPerg,6,aParam[06]),Len(SF2->F2_DOC))
	MV_PAR07 := aParam[07] := ParamLoad(cParRem3,aPerg,7,aParam[07])
	MV_PAR08 := aParam[08] := ParamLoad(cParRem3,aPerg,8,aParam[08])
Else	
	MV_PAR01 := aParam[01] := PadR(ParamLoad(cParRem3,aPerg,1,aParam[01]),Len(FWGETCODFILIAL))		//Filial De
	MV_PAR02 := aParam[02] := PadR(ParamLoad(cParRem3,aPerg,2,aParam[02]),Len(FWGETCODFILIAL))		//Filial Ate
	MV_PAR03 := aParam[03] := cSerie
	MV_PAR04 := aParam[04] := cSerie
	MV_PAR05 := aParam[05] := cNotaIni
	MV_PAR06 := aParam[06] := cNotaFim
	MV_PAR07 := aParam[07] := ParamLoad(cParRem3,aPerg,7,aParam[07])
	MV_PAR08 := aParam[08] := ParamLoad(cParRem3,aPerg,8,aParam[08])
EndIf
				
aadd(aPerg,{1,STR0201,aParam[01],"",".T.","",".T.",30,.T.})	//"Filial De"
aadd(aPerg,{1,STR0202,aParam[02],"",".T.","",".T.",30,.T.})	//"Filial Ate"
aadd(aPerg,{1,STR0291,aParam[03],"",".T.","",".T.",30,.T.})	//"Serie inicial"
aadd(aPerg,{1,STR0292,aParam[04],"",".T.","",".T.",30,.T.})		//"Serie final"
aadd(aPerg,{1,STR0079,aParam[05],"",".T.","",".T.",50,.T.})		//"Factura inicial"
aadd(aPerg,{1,STR0080,aParam[06],"",".T.","",".T.",50,.T.})		//"Factura final"
aadd(aPerg,{1,STR0295,aParam[07],"",".T.","",".T.",60,.T.})		//"Fecha Inicial"
aadd(aPerg,{1,STR0296,aParam[08],"",".T.","",".T.",60,.T.})		//"Fecha Final"


	If !Empty(cURL)//IsReady()

	//Verificación de autenticación para versión 12.1.33
	If !ValidFX7(cUrl)
		Return
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Obtem o codigo da entidade                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cIdEnt := GetIdEnt()
	
	If !Empty(cIdEnt)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Obtem o ambiente de execucao do Totvs Services ARGN                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oWS := WSNFECFGLOC():New()
		oWS:cUSERTOKEN := "TOTVS"
		oWS:cID_ENT    := cIdEnt
		oWS:nAmbiente  := 0	
		oWS:_URL       := AllTrim(cURL)+"/NFECFGLOC.apw"
		lOk := oWS:CFGAMBLOC()
		cAmbiente := oWS:CCFGAMBLOCRESULT
		
	EndIf
	Else
		If !lAutoNf .and. cSerie == Nil
			Aviso("NFFE",STR0298 + CHR(10) + CHR(13) +;  // "No se detectó configuración de conexión con TSS."
				  STR0299 +  CHR(10) + CHR(13) +; // "Por favor, ejecute opción Wizard de Configuración."
				  STR0300 + CHR(10) + CHR(13),;   // "Siga atentamente os passos para a configuração da nota fiscal eletrônica."
				  {"OK"},3)
		Endif
		Return
EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem da Interface                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (lOk == .T. .or. lOk == Nil)
	aadd(aTexto,{})
	aTexto[1] :=STR0081 +" "
	aTexto[1] +=STR0082+CRLF+CRLF
	aTexto[1] +=STR0083+cAmbiente+CRLF
	aTexto[1] +=STR0290+CRLF //"ATENÇÃO ESTE AMBIENTE SERÁ UTILIZADO PARA TODAS AS FILIAIS, SELECIONADAS NA PRÓXIMA TELA!!"
		
	aadd(aTexto,{})
		
	If( lAutoNf )
		cAutMsg := "- Tabela:[" + aArea[1] + "] Serie:["  + aParam[1] + "] Nota Ini:[" + aParam[2] + "] Nota Fim:[" + aParam[3] + "]"	+ CRLF
		//cAutMsg += "- Ambiente: ["+ cAmbiente + "] ID Entid:[" + cIdEnt + "] Modalidade:[" + cModalidade + "] Versao:[" + cVersao + "]"
		//aAdd( aLogEnv, { cAutMsg, "Linha-5401", DtoS( Date() ) + "|" + Time() } )			
		IF (ValidParam(aParam,@cRetorno))
           cRetorno := ARGNTrf1(aArea[1],aParam[1],aParam[2],aParam[3],aParam[4],aParam[5],aParam[6],aParam[7],aParam[8],cAmbiente,@lEnd, lAutoNf)
		Endif	
	Else
		DEFINE WIZARD oWizard ;
			TITLE STR0085;
			HEADER STR0086;
			MESSAGE STR0087;
			TEXT aTexto[1] ;
			NEXT {|| .T.} ;
			FINISH {||.T.}
		CREATE PANEL oWizard  ;
			HEADER STR0088 ;
			MESSAGE ""	;
			BACK {|| .T.} ;
			NEXT {|| ParamSave(cParRem3,aPerg,"1"),Processa({|lEnd| IIF(ValidParam(aParam,@cRetorno),cRetorno := ARGNTrf1(aArea[1],aParam[1],aParam[2],aParam[3],aParam[4],aParam[5],aParam[6],aParam[7],aParam[8],cAmbiente,@lEnd),.F.)}),aTexto[02]:= cRetorno,.T.} ;		
			PANEL
		ParamBox(aPerg,"NFEe - NFe",@aParam,,,,,,oWizard:oMPanel[2],cParRem3,.T.,.T.)						  

		CREATE PANEL oWizard  ;
			HEADER STR0088;
			MESSAGE "";
			BACK {|| .T.} ;
			FINISH {|| .T.} ;
			PANEL
		@ 010,010 GET aTexto[2] MEMO SIZE 270, 115 READONLY PIXEL OF oWizard:oMPanel[3]
		ACTIVATE WIZARD oWizard CENTERED		
	EndIf		
EndIf		

RestArea(aArea)
Return (cRetorno)

//-------------------------------------------------------------------------
/*/{Protheus.doc} ARGNTrf1
Função de Transmissão da Fatura eletrônica da Argentina, com tratamento 
de transmissão por range de filial,série e documento. Diferente da rotina 
antiga onde somente a transmissão por range de documento era possível.

@param	cAlias		Alias a ser utilizado(SF2 OU SF1)	
@param	cFilIni		Filial inicial.
@param	cFilFim		Filial final.
@param	cSerieIni	Serie inicial dos documentos.
@param	cSerieFim	Serie final dos documentos.
@param	cNotaIni	Numero inicial dos documentos.
@param	cNotaFim	Numero final dos documentos.
@param lEnd			Variável de controle do Processa

@return cRetorno	Mensagem com as informações da transmissão dos docs.	

@author Rafael Iaquinto
@since 08/07/2013
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function ARGNTrf1(cAlias,cFilIni,cFilFim,cSerieIni,cSerieFim,cNotaIni,cNotaFim,dDataIni,dDataFim,cAmbiente,lEnd, lAutoNf)

local cMsgTrans	:= ""
local cMsgCfgTss	:= ""
local cTipo		:= ""
local cRetorno		:= ""
local cFilOri		:= ""
local cEmpOri		:= ""
local aAreaSM0		:= SM0->( GetArea() )
local aArea		:= GetArea() 
Default lAutoNf	:= .F.

cTipo:=IIf(cAlias=="SF2","1","2")

//Guardo a empresa e filial original, para não perder a referência
cEmpOri := cEmpant
cFilOri := cFilAnt

SM0->(dbSetOrder(1))	
SM0->( dbSeek(cEmpant) ) 
If IsReady()
	While SM0->(!EOF())  
		If FWGETCODFILIAL >= cFilIni .And. FWGETCODFILIAL <= cFilFim .And. cEmpant == SM0->M0_CODIGO
			
			cFilAnt := FWGETCODFILIAL 
			
			cMsgCfgTss 	:= ""		
			cMsgTrans		:= ""
							
			cIdEnt := GetIdEnt( "",@cMsgCfgTss , .F. )
					
			cMsgTrans		:=Replicate("=",58)+CRLF
			cMsgTrans		+= "Inicio Processamento Filial: "+cFilAnt+" Entidade: "+cIdEnt+CRLF
			cMsgTrans		+=Replicate("=",58)+CRLF
			
			if Empty( cMsgCfgTss )
				cMsgTrans += ArgTransNf(cIdEnt,cTipo,cSerieIni,cSerieFim,cNotaIni,cNotaFim,dDataIni,dDataFim,cAmbiente,lAutoNf )					
			else
				cMsgCfgTss		:= STR0213+cMsgCfgTss //"Erro ao comunicar com o TSS - ADMEMPLOC "			
			endif
						
			cMsgTrans  := cMsgTrans +CRLF+ cMsgCfgTss +CRLF 
			
			cMsgTrans		+=Replicate("=",58)+CRLF
			cMsgTrans		+= "Final do Processamento Filial: "+cFilAnt+" Entidade: "+cIdEnt+CRLF
			cMsgTrans		+=Replicate("=",58)+CRLF
			
			cRetorno += cMsgTrans
			
			SM0->(dbSkip())
		Else
			SM0->(dbSkip())
		EndIF
					
	EndDo
	If Empty( cRetorno )	
		cRetorno := STR0297//"Nenhuma Filial encontrada para o filtro informado."
	EndIf
else
	cRetorno := STR0087 //"Siga atentamente los pasos para la configuracion de la factura electronica."
endif

//Restauro a area do SM0
RestArea(aAreaSM0)
cFilAnt := FWGETCODFILIAL
RestArea(aArea)

Eval(bFiltraBrw)

Return(cRetorno)


Static Function ArgTransNf(cIdEnt,cTipo,cSerieIni,cSerieFim,cNotaIni,cNotaFim,dDataIni,dDataFim,cAmbiente, lAutoNf)

local cWSModelo	:= ""
local cRetorno		:= ""
local cAlias		:= ""
local cField		:= ""
local cWhere		:= ""
local cMsgNf		:= ""
local cData		:= ""
local cAliasSF1	:= "SF1" 
local cAliasSF2	:= "SF2"
local cAmbEnt		:= "" 
local cUrl			:= FindUrl() 
local cErro		:= ""
local cTamCAEE		:= Space(Len(SF1->F1_CAEE)) 
 
local lQuery		:= .F.
local lVldCAEA		:= .T.
local lMsFilSf1	:= SF1->(FieldPos('F1_MSFIL')) > 0
local lMsFilSf2	:= SF2->(FieldPos('F2_MSFIL')) > 0 

local aArea		:= GetArea()
local aNotas		:= {}
local aRetNotas	:= {}
local aNotasErr	:= {}

local nX			:= 0 
local nY			:= 0 
local nI			:= 0 
local nNFes		:= 0
Local nTamRet		:= 0    
Local cNumNF :=""

Private nLastID   := 0
Private oWS		:= Nil
Private oWSE		:= Nil
Private oWSr		:= Nil
Private oWSm      := Nil

Default lAutoNf :=.F.

If FindWSServ()== "wsmtxca" //nominacao
	cWSModelo := "3"
Elseif FindWSServ()== "wsbfe" //bono
	cWSModelo := "4"
Else
	cWSModelo := "2"
EndIf

oWs := WSWSFEV1():New()
oWs:cUserToken := "TOTVS"
oWs:cID_ENT    := cIdEnt
oWS:_URL       := AllTrim(cURL)+"/WSFEV1.apw"

if !(ArgNfDummy(oWs:cUserToken,oWs:cID_ENT,cUrl,.F.,,lAuto))
	lGetCAEA := .F.
	
	cRetorno := STR0158 //"Problema de Comunicacion con la AFIP."
	
	RestArea(aArea)	
	oWs := Nil
	DelClassIntF()
				
	return(cRetorno)
else
	cRetorno += STR0111+CRLF
endIf


//Configura o Ambiente conforme o da Filial 
//que está realizando as transmissões.
oWs := Nil

oWS := WSNFECFGLOC():New()
oWS:cUSERTOKEN := "TOTVS"
oWS:cID_ENT    := cIdEnt
oWS:nAmbiente  := Val(SubStr(cAmbiente,2,1))	
oWS:_URL       := AllTrim(cURL)+"/NFECFGLOC.apw" 
oWS:CFGAMBLOC()

if cTipo == "1" //Saidas
	cAlias := "SF2"
else
	cAlias := "SF1"
endif	

dbSelectArea(cAlias)
dbClearFilter()
RetIndex(cAlias)

If cTipo=="2"
	IF !lAutoNf
		ProcRegua(Val(cNotaFim)-Val(cNotaIni)+1)	
	ENDIF	
	
	//////INCLUSAO DE CAMPOS NA QUERY////////////			
	cField := "%"
	cField += ",F1_CAEE"
	
	If lMsFilSf1
		cField += ",F1_MSFIL" 						
	EndIf	
		
	cField += "%"
	//////////////////////////////////////////////	
	
	dbSelectArea("SF1")
	dbSetOrder(1)
	#IFDEF TOP
		cWhere := "%"
		cWhere += " ( "		
		
		cWhere += "(SF1.F1_FORMUL='S') "
		
		If lMsFilSf1 
			cWhere += "AND ( SF1.F1_MSFIL = '"+cFilAnt+"' ) " 						
		EndIf
		
		//cWhere += "AND ( SF1.F1_EMCAEE <> '"+cTamCAEE+"') "
		cWhere += "AND ( SF1.F1_EMCAEE <> 'S') AND ( SF1.F1_EMCAEE <> 'M') "
			
		cWhere += " ) "
		cWhere += "%"
		
		cAliasSF1 := GetNextAlias()
		lQuery    := .T.
		BeginSql Alias cAliasSF1
			
		COLUMN F1_EMISSAO AS DATE
					
		SELECT	F1_FILIAL,F1_EMISSAO,F1_FORMUL,F1_DOC,F1_SERIE,F1_FORNECE,F1_LOJA,F1_ESPECIE,F1_FLFTEX,F1_CAEE,F1_ESPECIE,F1_EMCAEE,F1_TIPO %Exp:cField%		FROM %Table:SF1% SF1
				WHERE
				SF1.F1_FILIAL = %xFilial:SF1% AND
				SF1.F1_SERIE >= %Exp:cSerieIni% AND
				SF1.F1_SERIE <= %Exp:cSerieFim% AND 
				SF1.F1_DOC >= %Exp:cNotaIni% AND 
				SF1.F1_DOC <= %Exp:cNotaFim% AND
				SF1.F1_EMISSAO >= %Exp:dToS(dDataIni)% AND
				SF1.F1_EMISSAO <= %Exp:dToS(dDataFim)% AND				
				%Exp:cWhere% AND 				
				SF1.%notdel%
				ORDER BY F1_SERIE,F1_DOC
		EndSql
		cWhere := ".T."	
	#ELSE
		MsSeek(xFilial("SF1")+cNotaIni+cSerie,.T.)
	#ENDIF
	cWhere := "(F1_FORMUL='S' ) .And. !(F1_FLFTEX$'SM')"
	
	If lMsFilSf1
		cWhere += ".And. ( F1_MSFIL == '"+cFilAnt+"' )"
	EndIf
	 
	While !Eof() .And. xFilial("SF1") == (cAliasSF1)->F1_FILIAL .And.;
		(cAliasSF1)->F1_SERIE >= cSerieIni .And. (cAliasSF1)->F1_SERIE <= cSerieFim .And.;
		(cAliasSF1)->F1_DOC >= cNotaIni .And. (cAliasSF1)->F1_DOC <= cNotaFim
	
		dbSelectArea(cAliasSF1)
		
		IF !lAutoNf
		    IncProc("(1/2) "+STR0024+(cAliasSF1)->F1_DOC)  //"Preparando nota: "
		ENDIF
		
		If ((cAliasSF1)->F1_FORMUL=="S") .And. aScan(aNotas,{|x| x[3]+x[4]+x[7]==(cAliasSF1)->F1_SERIE+(cAliasSF1)->F1_DOC+(cAliasSF1)->F1_ESPECIE})==0 //.And. (cAliasSF1)->F1_STATUS='C'
					
						
			If  &cWhere
				aadd(aNotas,{})	
				nX := Len(aNotas)
				aadd(aNotas[nX],"0")
				aadd(aNotas[nX],(cAliasSF1)->F1_EMISSAO)
				aadd(aNotas[nX],(cAliasSF1)->F1_SERIE)
				aadd(aNotas[nX],(cAliasSF1)->F1_DOC)
				aadd(aNotas[nX],(cAliasSF1)->F1_FORNECE)
				aadd(aNotas[nX],(cAliasSF1)->F1_LOJA)
				aadd(aNotas[nX],(cAliasSF1)->F1_ESPECIE)
				aadd(aNotas[nX],(cAliasSF1)->F1_TIPO)
				if cModeloWS == "5"
					aadd(aNotas[nX],(cAliasSF1)->F1_CAEE)
				else
					aadd(aNotas[nX],"")				
				endif		
			EndIf
		EndIf		
		dbSelectArea(cAliasSF1)
		dbSkip()	
	EndDo
	If lQuery
		dbSelectArea(cAliasSF1)
		dbCloseArea()
		dbSelectArea("SF1")
	EndIf
		
Else
	IF !lAutoNf
		ProcRegua(Val(cNotaFim)-Val(cNotaIni)+1)	
	ENDIF	
	
	//////INCLUSAO DE CAMPOS NA QUERY////////////			
	cField := "%"
	cField += ",F2_CAEE"

	If lMsFilSf2 
		cField += ",F2_MSFIL" 						
	EndIf     		    
			
	cField += "%"				
	//////////////////////////////////////////////
		
	dbSelectArea("SF2")
	dbSetOrder(1)
	#IFDEF TOP
				
		cWhere := "%"
		cWhere += " ( "		
		
		cWhere += "(SF2.F2_FORMUL='S') "
		
		If lMsFilSf2
			cWhere += "AND ( SF2.F2_MSFIL = '"+cFilAnt+"' )" 						
		EndIf
		
		//cWhere += "AND ( SF2.F2_EMCAEE <> '"+cTamCAEE+"') "
		cWhere += "AND ( SF2.F2_EMCAEE <> 'S') AND ( SF2.F2_EMCAEE <> 'M') "
		
		cWhere += " ) "
		cWhere += "%"
			
		cAliasSF2 := GetNextAlias()
		lQuery    := .T.
		BeginSql Alias cAliasSF2
			
		COLUMN F2_EMISSAO AS DATE
					
		SELECT	F2_FILIAL,F2_EMISSAO,F2_FORMUL,F2_DOC,F2_SERIE,F2_CLIENTE,F2_LOJA,F2_ESPECIE	,F2_CAEE,F2_FLFTEX,F2_ESPECIE,F2_TIPO %Exp:cField%	FROM %Table:SF2% SF2
				WHERE
				SF2.F2_FILIAL = %xFilial:SF2% AND
				SF2.F2_SERIE >= %Exp:cSerieIni% AND
				SF2.F2_SERIE <= %Exp:cSerieFim% AND 
				SF2.F2_DOC >= %Exp:cNotaIni% AND 
				SF2.F2_DOC <= %Exp:cNotaFim% AND
				SF2.F2_EMISSAO >= %Exp:dToS(dDataIni)% AND
				SF2.F2_EMISSAO <= %Exp:dToS(dDataFim)% AND 
				%Exp:cWhere% AND 
				SF2.%notdel%
				ORDER BY F2_SERIE,F2_DOC
								
		EndSql
		cWhere := ".T."	
	#ELSE
		MsSeek(xFilial("SF2")+cNotaIni+cSerie,.T.)
	#ENDIF
	cWhere := "(F2_FORMUL='S' ) .And. !(F2_FLFTEX$'SM')"	
	
	If lMsFilSf2
		cWhere += ".And. ( F2_MSFIL == '"+cFilAnt+"' )"
	EndIf
	
	While !Eof() .And. xFilial("SF2") == (cAliasSF2)->F2_FILIAL .And.;
		(cAliasSF2)->F2_SERIE >= cSerieIni .And. (cAliasSF2)->F2_SERIE <= cSerieFim .And.;
		(cAliasSF2)->F2_DOC >= cNotaIni .And.(cAliasSF2)->F2_DOC <= cNotaFim
		
		dbSelectArea(cAliasSF2)
		
		IF !lAutoNf
			IncProc("(1/2) "+STR0024+(cAliasSF2)->F2_DOC)  //"Preparando nota: "
		ENDIF
		
		If ((cAliasSF2)->F2_FORMUL=="S") .And. aScan(aNotas,{|x| x[3]+x[4]+x[7]==(cAliasSF2)->F2_SERIE+(cAliasSF2)->F2_DOC+(cAliasSF2)->F2_ESPECIE})==0 						
		
			If  &cWhere
				aadd(aNotas,{})	
				nX := Len(aNotas)
	   			aadd(aNotas[nX],"0")
				aadd(aNotas[nX],(cAliasSF2)->F2_EMISSAO)
				aadd(aNotas[nX],(cAliasSF2)->F2_SERIE)
				aadd(aNotas[nX],(cAliasSF2)->F2_DOC)
				aadd(aNotas[nX],(cAliasSF2)->F2_CLIENTE)
				aadd(aNotas[nX],(cAliasSF2)->F2_LOJA)    
				aadd(aNotas[nX],(cAliasSF2)->F2_ESPECIE)
				aadd(aNotas[nX],(cAliasSF2)->F2_TIPO) 
					if cModeloWS $ "5|7" .And. SF2->(FieldPos('F2_CAEE')) > 0
					aadd(aNotas[nX],(cAliasSF2)->F2_CAEE)
				else
					aadd(aNotas[nX],"")				
				endif	
			EndIf
		EndIf		
		dbSelectArea(cAliasSF2)
		dbSkip()	
	EndDo
	If lQuery
		dbSelectArea(cAliasSF2)
		dbCloseArea()
		dbSelectArea("SF2")
	EndIf
EndIf

 
If Len(aNotas) == 0
	cRetorno := STR0204 //"Ningun registro encontrado para los parametros informados." 	
	
	RestArea(aArea)
	
	oWs := Nil
	oWsE := Nil
	DelClassIntF()
		
	Return(cRetorno)	
endIf


cData:= FsDateConv(Date(),"YYYYMMDD")
cData:= SubStr(cData,1,4)+"-"+SubStr(cData,5,2)+"-"+SubStr(cData,7)

oWSE:CDATETIMEGER:=cData+"T00:00:00" 
oWSE:cDATETIMEEXP:=cData+"T23:59:59"                     

oWsE:cUserToken := "TOTVS"
oWsE:cID_ENT    := cIdEnt
oWSE:_URL       := AllTrim(cURL)+"/NFESLOC.apw"
oWsE:cCWSSERVICE  := FindWSServ()
oWSE:GETAUTHREM ()

For nX := 1 to Len(aNotas)

	//Serie
	//A=1
	//B=2
	//C=3
	//E=4
	//M=5
	//Outro=9
	If Substr(Alltrim(aNotas[nX,3]),1,1) == 'A'
		cIdNF	:=	'1'
	ElseIf	Substr(Alltrim(aNotas[nX,3]),1,1) == 'B'
		cIdNF	:=	'2'
	ElseIf	Substr(Alltrim(aNotas[nX,3]),1,1) == 'C'
		cIdNF	:=	'3'
	ElseIf	Substr(Alltrim(aNotas[nX,3]),1,1) == 'E'
		cIdNF	:=	'4'
	ElseIf	Substr(Alltrim(aNotas[nX,3]),1,1) == 'M'
		cIdNF	:=	'5'
	Else
		cIdNF	:=	'9'
	Endif
		
	//Tipo
	//19=Normal
	//20=Debito
	//21=Credito
	If aNotas[nX,8] == 'D'
		cIdNF	+=	'21'
	ElseIf aNotas[nX,8] == 'C'
		cIdNF	+=	'20'
	Else			
		cIdNF	+=	'19'
	Endif  
	
	//Num Ponto de Venda + Nota 
	IF (cWSModelo == "2")  // Exportacion
	      
		cNumNF:=aNotas[nX,4]
		If Len(cNumNF)>12 
			cNumNF:= Subs(cNumNF,2,12)
	 	EndIf         
	 	cIdNF	+= cNumNF
	Else
		cIdNF	+= aNotas[nX,4]	
	EndIf	

	IF !lAutoNf
		IncProc("(2/2) "+STR0027+aNotas[nX][4])  //"Transmitindo XML da nota: "
	ENDIF
	
	//Valida se o CAEA existe no documento
	if empty( aNotas[nX][9] )
		lVldCAEA := .F.
		cErro:= STR0177 + STR0031 +aNotas[nX][4] //"CAEA no encontrado para transmision del comprobante. "###" " Documento no transmitido ")
		
		aadd(aNotasErr,{aNotas[nX][3],aNotas[nX][4],cErro})
	else
		lVldCAEA := .T.	
	endif
	
	//Monta o XML através do RDMAKE da NFE
	cXml :=""
	
	//Se houver CAEA realiza a montagem do XML
	If lVldCAEA
						
		cXml :=ExecBlock("NFAEXml001",.F.,.F.,{cTipo,aNotas[nX][3],aNotas[nX][4],aNotas[nX][5],aNotas[nX][6],0,cModeloWS,aNotas[nX][9]})  	
		
		oWs := Nil
		oWs := WSWSFEV1():New()
		oWs:cUserToken := "TOTVS"
		oWs:cID_ENT    := cIdEnt
		oWS:_URL       := AllTrim(cURL)+"/WSFEV1.apw"				
		oWS:NPTOVTA:= Val(Subs(aNotas[nX][4],1,nTamPV)) 
		If cAlias == "SF2"
			nCbtTP:=TipComp("SF2",SF2->F2_TIPO,Subs(SF2->F2_SERIE,1,1))
		Else
	    	nCbtTP:=TipComp("SF1",SF1->F1_TIPO,Subs(SF1->F1_SERIE,1,1))
		Endif
		
			If cWSModelo <> "3"
			    //Valida o ultimo CAEA autorizado
				oWS:nCBTETIPO := nCbtTP
				oWS:cMODELOWS  := cWSModelo
				oWS:cMODELO  := cWSModelo
				oWs:WSFEV1FECOMPULTIMOAUTORIZADO()
		  
		If ValType(oWS:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTENRO) == "N" .And. ;
			(Val(Subs(aNotas[nX][4],nTamPV+1,8) ) <> oWS:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTENRO +1  ) ;
			.And. nCbtTP==oWs:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTETIPO
	
			cErro := STR0114 + Alltrim(STR(Val(Subs(aNotas[nX][4],nTamPV+1,8))) +" "+aNotas[nX][3]  + STR0115 +;		
			Alltrim(Str(oWS:OWSWSFEV1FECOMPULTIMOAUTORIZADORESULT:NCBTENRO))+ STR0116 + STR0117 )+ CRLF
	                
	        cXML:=""
	        
	        aadd(aNotasErr,{aNotas[nX][3],aNotas[nX][4],cErro})
	        	
		EndIf
	EndIf
	
	If !Empty(cXML)
		nNFes++
		nY++					
							
		oWS:cUSERTOKEN    := "TOTVS"
		oWS:cID_ENT       := cIdEnt
		oWS:cMODELO       := cWSModelo
		oWS:nPTOVTA       := Val(Subs(aNotas[nX][4],1,nTamPV))	
		oWS:_URL       := AllTrim(cURL)+"//NFESLOC.apw."						

		oWS:nCBTETIPO := nCbtTP
		
		oWS:OWSNFEARG:OWSNOTASLOC := WSFEV1_ARRAYOFNFESARG():New()
		
		aadd(oWS:OWSNFEARG:OWSNOTASLOC:OWSNFESARG,WSFEV1_NFESARG():New())
		
		oWS:OWSNFEARG:OWSNOTASLOC:OWSNFESARG[1]:CID := aNotas[nX][4]+aNotas[nX][3]
		oWS:OWSNFEARG:OWSNOTASLOC:OWSNFESARG[1]:CXML := cXml			

		oWsE:=	oWs
		oWsE:_URL:=AllTrim(cURL)+"/WSFEV1.apw"	
				lRet := oWsE:WSFEV1FECAEAREGINFORMATIVO()
	   
		         
	   	If lRet
			oWSr:= WSWSFEV1():New()
			oWSr:cUSERTOKEN    := "TOTVS"
			oWSr:cID_ENT       := cIdEnt
	  		oWSr:cMODELO       := cWSModelo
			oWSr:nPTOVTA       := Val(Subs(aNotas[1][4],1,nTamPV))
			oWSr:_URL       := AllTrim(cURL)+"/WSFEV1.apw"
		 	oWS:nCBTETIPO := nCbtTP
			          
			oWSr:cIdInicial    := aNotas[nX][4]+aNotas[nX][3]
			oWSr:cIdFinal      :=  aNotas[nX][4]+aNotas[nX][3]
			
			lOk := oWSr:MONITORLOC()
			
			If lOk <> Nil .And. lOk .And. Type("oWSr:OWSMONITORLOCRESULT:OWSMONITOR:OWSRETCOMP") <> "U"
				oRetorno := oWSr:OWSMONITORLOCRESULT:OWSMONITOR:OWSRETCOMP 
				//Pego a ultima posição, pois é a ultima tentativa.
				nTamRet :=  Len(oRetorno)   	   	 	
		  	   	
		  	   	
				cSeek:= oRetorno[nTamRet]:CID   
				cSeek:=Padr(cSeek,TamSX3("F2_DOC")[1]+TamSX3("F2_SERIE")[1])
	  		    cEspecie := ""
	  		    dVencCaea := CTOD(" / / ")		
						  		    
				If cAlias=="SF2"
	 				If SF2->( DbSeek(xFilial("SF2")+cSeek) )
	 					RecLock("SF2") 
	 					SF2->F2_XMLNFE	:= Encode64(cXml)	
	 					SF2->(MsUnlock()) 	 				
	 					If ( !Empty(oRetorno[nTamRet]:DCAEFCHVTO) .And. Empty(SF2->F2_EMCAEE ) ) .Or. ( !Empty( oRetorno[nTamRet]:CCAE ) .And. cModeloWS == "5")
	 						RecLock("SF2")
	 						if !cModeloWS == "5"
		 						dVencCaea := oRetorno[nTamRet]:DCAEFCHVTO
		 						SF2->F2_CAEE		:=oRetorno[nTamRet]:CCAE
		 						SF2->F2_EMCAEE  	:=dVencCaea			 									 						
		 					else
		 						dVencCaea := SF2->F2_EMCAEE
		 						oRetorno[nTamRet]:CCAE := SF2->F2_CAEE
		 						aadd(aRetNotas,{aNotas[nX][3],aNotas[nX][4]})
	 					  		endif		 						
	 						SF2->F2_FLFTEX	:="S"
	 						SF2->(MsUnlock())		 					
	 						
	 						if cModeloWS == "5"
	 							ArgAtuCG6(cFilAnt,,,,SF2->F2_CAEE,SF2->F2_SERIE,SF2->F2_DOC)
							endif		 					  		
		 					
							SF3->(DbSetOrder(4))
									If SF3->(FieldPos('F3_CAE'))>0 .And. SF3->(FieldPos('F3_VCTOCAE'))   >0 .And. SF3->(DbSeek(xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE) )
	 					    	While !EOF() .And. xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE ==;
	 					      	  SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
	 				    			RecLock("SF3")
	 					    		SF3->F3_CAE		:=oRetorno[nTamRet]:CCAE
	 					    		SF3->F3_VCTOCAE	:=dVencCaea		 					    				 					    		
	 					    		SF3->(MsUnlock())                          		 					    	
									dbSkip()                            										
	 					    	EndDo	                                	 					    		 					    			 					    	
	 					    EndIf
	 					ElseIf cModeloWS == "5" .And. SF2->F2_FLFTEX <> "E" //Para 5-NACIONAL-CAEA, ja rejeito pois o processo é sincrono
							RecLock("SF2")
		 					SF2->F2_FLFTEX:="E"
		 					SF2->(MsUnlock())	 					
		 							 					
	 					ElseIf Empty(SF2->F2_EMCAEE )  .And. cModeloWS <> "5" .And. SF2->F2_FLFTEX <> "T"
		 					RecLock("SF2")
		 					SF2->F2_FLFTEX:="T"
		 					SF2->(MsUnlock())
	 					EndIf
		 				
		 				If SF2->F2_FLFTEX == "E"
		 					cErro := oRetorno[nTamRet]:CRECOMENDACAO
		 					aadd(aNotasErr,{aNotas[nX][3],aNotas[nX][4],cErro})	
						endIf
						
						SF2->(MsUnlock())		 				
		 			EndIf
	 				 			
				Else 				
					If SF1->( DbSeek(xFilial("SF1")+cSeek) )
	                    RecLock("SF1")
	                    SF1->F1_XMLNFE	:= Encode64(cXml)
	                    SF1->(MsUnlock())    	
	 					If ( !Empty(oRetorno[nTamRet]:DCAEFCHVTO) .And. Empty(SF1->F1_EMCAEE ) )  .Or. ( !Empty( oRetorno[nTamRet]:CCAE ) .And. cModeloWS == "5") 
	 					    
	 					    RecLock("SF1")
	 						if !cModeloWS == "5"
		 						dVencCaea := oRetorno[nTamRet]:DCAEFCHVTO
		 						SF1->F1_CAEE		:=oRetorno[nTamRet]:CCAE
		 						SF1->F1_EMCAEE  	:=dVencCaea
		 					else
		 						dVencCaea := SF1->F1_EMCAEE
		 						oRetorno[nTamRet]:CCAE := SF1->F1_CAEE
		 						aadd(aRetNotas,{aNotas[nX][3],aNotas[nX][4]}) 			 						
	 					  	endif		 						
							SF1->F1_FLFTEX	:="S"
							SF1->(MsUnlock())	
	 						
							if cModeloWs == "5"
								ArgAtuCG6(cFilAnt,,,,SF1->F1_CAEE,SF1->F1_SERIE,SF1->F1_DOC)
							endif	
	 												
							SF3->(DbSetOrder(4))
									If SF3->(FieldPos('F3_CAE'))>0 .And. SF3->(FieldPos('F3_VCTOCAE'))>0 .And. SF3->(DbSeek(xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE) )
								While !EOF() .And. xFilial("SF3")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_DOC+SF1->F1_SERIE ==;
										SF3->F3_FILIAL+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_NFISCAL+SF3->F3_SERIE
									RecLock("SF3")
		 					    	SF3->F3_CAE		:=oRetorno[nTamRet]:CCAE
		 					    	SF3->F3_VCTOCAE	:=oRetorno[nTamRet]:DCAEFCHVTO		 					    		
		 					    	SF3->(MsUnlock())
									dbSkip()
		 					    EndDo		 					    			 					    		
	 					    EndIf
	 			        
	 			        ElseIf cModeloWS == "5" .And. SF1->F1_FLFTEX <> "E" //Para 5-NACIONAL-CAEA, ja rejeito pois o processo é sincrono
							RecLock("SF1")
		 					SF1->F1_FLFTEX:="E"
		 					SF1->(MsUnlock())
		 					 
		 					cErro := DeCode64( oRetorno[nTamRet]:cERRO )
		 					aadd(aNotasErr,{aNotas[nX][3],aNotas[nX][4],cErro})
		 							 			        	
	 					ElseIf   Empty(SF1->F1_EMCAEE ) .And. SF1->F1_FLFTEX <> "T"
		 					RecLock("SF1")
		 					SF1->F1_FLFTEX:="T"
		 					SF1->(MsUnlock())
	 					EndIf
		 					
	 					if SF1->F1_FLFTEX=="E" 
		 					cErro := oRetorno[nTamRet]:CRECOMENDACAO
		 					aadd(aNotasErr,{aNotas[nX][3],aNotas[nX][4],cErro})
						endIf
	 					 
		 				SF1->(MsUnlock())
			 		EndIf
				EndIf
			Else
				cErro := GetWscError(3)
				DEFAULT cErro := STR0029 //"Erro indeterminado"
				lRetorno := .F.			
				aadd(aNotasErr,{aNotas[nX][3],aNotas[nX][4],cErro+CRLF+cXML})								
			EndIf		 		
		Else
			cErro := GetWscError(3)
			DEFAULT cErro := STR0029 //"Erro indeterminado"
			lRetorno := .F.			
			aadd(aNotasErr,{aNotas[nX][3],aNotas[nX][4],cErro+CRLF+cXML})
			Exit
        EndIf			
        EndIf			
	EndIf
	sleep(2000)
Next Nx

If Len(aRetNotas) > 0
	cRetorno += STR0013+CRLF //"Documento transmitido"
	For nX:=1 to Len(aRetNotas)
		cRetorno += Alltrim(Str(nX))+" - "+aRetNotas[nX][1]+" " + aRetNotas[nX][2] + CRLF
	next Nx
	
	ArgNfMtr(cTpMetric,Len(aRetNotas))
	
EndIf

If Len(aNotasErr) > 0
	cRetorno += STR0014 +CRLF //"Documento no transmitido"
	For nX:=1 to Len(aNotasErr)
		cRetorno += Alltrim(Str(nX))+" - "+aNotasErr[nX][1] + " " + aNotasErr[nX][2]+CRLF
		cRetorno += STR0162 + aNotasErr[nX][3]+CRLF//"Mensaje: "
	next Nx
EndIf	


RestArea(aArea)

oWS			:= Nil
oWSE		:= Nil
oWSr		:= Nil
DelClassIntF() 

return(cRetorno)
//-------------------------------------------------------------------------
/*/{Protheus.doc} ValidParam
Função que realiza a validação do preenchimento dos parâmetros de trans-
missão no Wizard de Transmissão.

@param aParam		Array com os parâmetros a serem validados.
						[1] - Filial Inicial
						[2] - Filial Final
						[3] - Serie Incial
						[4] - Serie Final
						[5] - Numero Inicial
						[6] - Numero Final

@param cRetorno		Informação com o retorno da validação.		
@param cTipo			1 - Wizard de Transmissao
						2 - Parametros para abrir o browse da CG6		

@return lOk

@author Rafael Iaquinto
@since 20/05/2013
@version 11.6
/*/
//-------------------------------------------------------------------
Static Function ValidParam(aParam,cRetorno,cTipo)

local nX	:= 0
local lOk	:= .T.

Default cRetorno	:= ""
Default cTipo		:= "1" 

cRetorno := ""

For nX := 1 to Len(aParam)
	
	if Empty( aParam[nX] ) 
		cRetorno	:= STR0285+CRLF //"Todos os parâmetros devem estar preenchidos"
		lOk := .F.
		Exit
	endif
			
Next nX

if aParam[1] > aParam[2]
	cRetorno	+= STR0286+CRLF //"Filial inicial mairo que a final"	
	lOk := .F.	
endif 

if aParam[3] > aParam[4]
	If cTipo == "1"
		cRetorno	+= STR0287+CRLF//"Serie inicial maior que a final"
	elseif cTipo == "2"
		cRetorno	+= STR0293+CRLF//"Mes inical maior do que o mes final." 
	endif
			
	lOk := .F.	
endif

if aParam[5] > aParam[6]
	If cTipo == "1"
		cRetorno	+= STR0288+CRLF//"Numero inicial maior que o final"
	ElseIf cTipo == "2"
		cRetorno	+= STR0294+CRLF//"Ano inicial maior que o ano final."
	EndIf	
	lOk := .F.	
endif 
If cTipo == "1"
	if aParam[7] > aParam[8]
		cRetorno	+= "Data Inicial superior à Data Final."+CRLF//
		lOk := .F.	
	endif 
EndIF
if !lOk
	cRetorno	:= STR0289+CRLF+cRetorno //"Preenchimento incorreto dos parâmetros da rotina: "
endif

return lOk

/*/{Protheus.doc} ValidFX7
	Funcion usada para validar la existencia de tabla y campos de la FX7 para la autenticación de 
	@type  Function
	@author Raul Ortiz
	@since 13/07/2021
	@param cUrl, caracter, url del tss
	@return lRet, Logico, informa en caso de ser versión 12.1.33 o superior si no hay configuración para la autenticación.
	/*/
Static Function ValidFX7(cUrl)
Local lRet			:= .T.
Local cRPORel		:= GetRPORelease()  
Local cTSSRel 		:= AllTrim(Substr( getVersaoTSS(,Alltrim(cUrl)) , 1, (At("|", getVersaoTSS(,Alltrim(cUrl)))-1))) 
Local _lCheckAut	:= .F.
Local aAreaFX7		:= {}
Local aAreaAut      := {}
Local lTSSAuth      := SuperGetMV("MV_TSSAUTH", .F., .T.)

	If cRPORel >= "12.1.033" .and. cTSSRel >= "12.1.033" .And. lTSSAuth
		aAreaAut := GetArea()
		_lCheckAut := TableInDic("FX7") .and. ChkFile("FX7") .and. (ExistFunc("FX7CltKey") .Or. ExistFunc("FX7DesKey")) .and. !FwIsInCallStack("StaticCall") 
		If _lCheckAut
			dbSelectArea("FX7")
			aAreaFX7 := FX7->(getArea())
			FX7->(dbSetOrder(1))
			If !FX7->(MsSeek( PadR(FwCodFil(), Len(FX7->FX7_FILIAL)) ))
				lRet := .F.
			ElseIf Empty(FX7->FX7_CREDEN) .or. Empty(FX7->FX7_CREKEY)
				lRet := .F.
			EndIf
			RestArea(aAreaFX7)
		Else
			lRet := .F.
		Endif
		RestArea(aAreaAut)
	Endif

	If !lRet
		Aviso("TSS", STR0301 + CHR(10) + CHR(13) +;  	// "Filial sin permiso para accesar al servidor TSS."
					  STR0302 + CHR(10) + CHR(13)+; 	// "Conctacte al administrador de sistema y verifique las credenciales informadas en la rutina 'Conf. Geral TSS' (SPEDCONFTSS)"
					  STR0303 + CHR(10) + CHR(13)+;   	// "Links Útiles: "
					  STR0304 + CHR(10) + CHR(13)+;   	// "Configuración TSS con autenticación: "
					  STR0305 + CHR(10) + CHR(13)+;   	// "https://tdn.totvs.com.br/pages/releaseview.action?pageId=593238229 "
					  STR0306 + CHR(10) + CHR(13)+;   	// "Configuraciones Generales de TSS"
					  STR0307 + CHR(10) + CHR(13),;   	// "https://tdn.totvs.com.br/pages/releaseview.action?pageId=590613669 "
					  {"OK"},3)
	EndIf

Return lRet

//±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
//±±³Fun‡…o   ³ArgNfMtr  ³ Autor ³ Mercado Internacional ³ Data ³.24.09.2021³±±
//±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
//±±³Descri‡…o ³Función utilizada para gerar metrica das transmissoes       ´±± 
//±±³           da rotina ARGNFE                                            ´±±    
//±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±

Function ArgNfMtr(cTpMetric,nNFes)

Local cIdMetric := ""
Local cSubRutina := ""

Default cTpMetric := ""
Default nNFes := 0	

If nNFes > 0
//Metrica transmissoes facturas Eletronicas
	If LibMtARGNf()
		cIdMetric   := "faturamento-protheus_media-tipo-regime-nfe_average"
		cSubRutina  := cTpMetric + "-" + FindWSServ() + "-media-transmission" 
		If lAutomato
			cSubRutina  += "-auto"
		EndIf
		FWCustomMetrics():setAverageMetric(cSubRutina, cIdMetric, nNFes,  /*dDateSend*/, /*nLapTime*/,"ARGNFE")
	EndIf
Endif
	
Return 

/*/{Protheus.doc} FatLibMetric
Función utilizada para validar la fecha de la LIB para ser utilizada en Telemetria
@type       Function
@author     Faturación
@since      2021
@version    12.1.27
@return     _lMetric, lógico, si la LIB puede ser utilizada para Telemetria
/*/
Static Function LibMtARGNf()

If _lMetric == Nil 
	_lMetric := (FWLibVersion() >= "20210517") .And. FindClass('FWCustomMetrics')
EndIf

Return _lMetric
