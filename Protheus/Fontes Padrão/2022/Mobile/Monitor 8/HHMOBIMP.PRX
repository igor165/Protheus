#INCLUDE "HHMOBIMP.ch"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "TBICONN.CH"

#DEFINE KB_ENTER Chr(13)+Chr(10)

Static __HHLog     := Val(GetSrvProfString("HHTriggerLog","0"))
Static __HHLogMsg  := ""

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³HHIMPSC5  ³ Autor ³Eduardo Riera          ³ Data ³06/03/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Sincronização do HandHeld - SC5 - Pedido de Venda           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function HHIMPHC5()

Local aArea      := GetArea()
Local aOrdSC5    := {}
Local aOrdSC6    := {}
Local aCab       := {}
Local aItens     := {} 
Local aItensBon  := {}
Local aLinha     := {}
Local aObs       := {}
Local aErro      := {}
Local aPE        := {}
Local aRecHC6    := {}
Local cAliasHC5  := "HC5"
Local cAliasHC6  := "HC6"
Local cItem      := "00"
Local cProxPed   := ""
Local cId        := HGU->HGU_CODBAS
Local nStackSX8  := If(FindFunction("GetSx8Len"),GetSx8Len(),0)
Local nX         := 0
Local lQuery     := .F.
Local __cHHLog   := Nil
Local nHC5Recno  := 0
Local cSerie     := ""
Local nPosCota	 := 0
Local nPosTabPr	 := 0
Local nPosCli	 := 0
Local nPosCond	 := 0
Local nPosObs	 := 0 
Local nPosTes    := 0
Local nCntPed	 := 0
Local cStatusTrg := GetSrvProfString("HHTriggerOn","0")
Local lStatusR	 := GetMv("MV_SFSTAR",,.F.)  
Local nTipoSXE	 := SuperGetMv("MV_SFAMSXE",,1)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³MV_SFSTAR - Define a utilização de um status R, que será assumido quando o pedido entrar em processo de atualização via rotina automatica. ³
//³Ao concluir processo, status será atualizado para X se processo for concluido com exito, e N caso contrario                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lTrocaDt	:= GetMv("MV_HHDTSC5",,.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ MV_HHDTSC5 - Se configurado com .T. ira trocar a data de emissao       ³
//³ do pedido (C5_EMISSAO) pela data de entrada no Protheus                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#IFDEF TOP
	Local cQuery     := ""
	Local aStruHC5   := {}
	Local aStruHC6   := {}
#ENDIF
PRIVATE lMsHelpAuto := .T.
PRIVATE lMsErroAuto := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define a ordem de importacao da rotina automatica                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aadd(aOrdSC5,{"C5_TIPO","HC5_TIPO"})
aadd(aOrdSC5,{"C5_CLIENTE","HC5_CLI"})
aadd(aOrdSC5,{"C5_LOJACLI","HC5_LOJA"})
aadd(aOrdSC5,{"C5_CLIENT","HC5_CLI"})
aadd(aOrdSC5,{"C5_LOJAENT","HC5_LOJA"})
aadd(aOrdSC5,{"C5_EMISSAO","HC5_EMISS"})
aadd(aOrdSC5,{"C5_CONDPAG","HC5_COND"})
aadd(aOrdSC5,{"C5_TRANSP","HC5_TRANSP"})
aadd(aOrdSC5,{"C5_VEND1","HC5_VEND1"})
If SC5->(FieldPos("C5_DESC1"))>0 .And. HC5->(FieldPos("HC5_DESC1"))>0
	aadd(aOrdSC5,{"C5_DESC1","HC5_DESC1"})	
EndIf
If SC5->(FieldPos("C5_DESC2"))>0 .And. HC5->(FieldPos("HC5_DESC2"))>0
	aadd(aOrdSC5,{"C5_DESC2","HC5_DESC2"})
EndIf
If SC5->(FieldPos("C5_DESC3"))>0 .And. HC5->(FieldPos("HC5_DESC3"))>0
	aadd(aOrdSC5,{"C5_DESC3","HC5_DESC3"})
EndIf
If SC5->(FieldPos("C5_DESC4"))>0 .And. HC5->(FieldPos("HC5_DESC4"))>0
	aadd(aOrdSC5,{"C5_DESC4","HC5_DESC4"})
EndIf
aadd(aOrdSC5,{"C5_TABELA","HC5_TAB"})
aadd(aOrdSC5,{"C5_COTACAO","HC5_COTAC"})
aadd(aOrdSC5,{"C5_TPFRETE","HC5_TPFRET"})
aadd(aOrdSC5,{"C5_MENNOTA","HC5_MENOTA"})
aadd(aOrdSC5,{"C5_DESCONT","HC5_DESCON"})

aadd(aOrdSC6,{"C6_PRODUTO","HC6_PROD"})
aadd(aOrdSC6,{"C6_QTDVEN","HC6_QTDVEN"})
aadd(aOrdSC6,{"C6_PRUNIT",Iif(HC6->(FieldPos("HC6_PRUNIT")) > 0,"HC6_PRUNIT","HC6_PRCVEN")})
aadd(aOrdSC6,{"C6_DESCONT","HC6_DESC"})
aadd(aOrdSC6,{"C6_PRCVEN","HC6_PRCVEN"})
aadd(aOrdSC6,{"C6_ENTREG","HC6_ENTREG"})
aadd(aOrdSC6,{"C6_TES","HC6_TES"})
aadd(aOrdSC6,{"C6_LOCAL","HC6_LOCAL"})
aadd(aOrdSC6,{"C6_PEDCLI","HC6_NUM"})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Aguardando trigger                                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
While !LockByName("HHEXP_SC5"+cID,.T.,!Empty(xFilial("HC5")),.T.) .And. !KillApp()
	Sleep(1000)
EndDo
If cStatusTrg <> "0"
	HHLockTrg("SC5",cID,@cSerie,cEmpAnt,cFilAnt,.F.)
EndIf
If !KillApp()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa os pedidos que deverao ser importados                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
		If .T.
			lQuery    := .T.
			nCntPed	  := 0
			cAliasHC5 := GetNextAlias()
			aStruHC5  := HC5->(dbStruct())
			
			cQuery := "SELECT HC5.*,R_E_C_N_O_ HC5RECNO "
			cQuery += "FROM "+RetSqlName("HC5")+" HC5 "
			cQuery += "WHERE "
			cQuery += "HC5.HC5_FILIAL='"+xFilial("HC5")+"' AND "
			cQuery += "HC5.HC5_STATUS IN ('N') AND "
			cQuery += "HC5.HC5_ID = '"+cID+"' AND "
			cQuery += "HC5.HC5_INTR = 'N' AND "
			cQuery += "HC5.D_E_L_E_T_=' ' "
			
			cQuery := ChangeQuery(cQuery)
			
			If __HHLog >= 1
				GravaHHLog(Replicate("-", 50) + KB_ENTER,.T.)
				__HHLogMsg := STR0001 + "(HHIMPHC5 - 1)" + KB_ENTER 
				__HHLogMsg += Space(9) + cQuery + KB_ENTER
				GravaHHLog(__HHLogMsg,.T.)
			EndIf
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasHC5)	
			For nX := 1 To Len(aStruHC5)
				If aStruHC5[nX][2]<>"C"
					TcSetField(cAliasHC5,aStruHC5[nX][1],aStruHC5[nX][2],aStruHC5[nX][3],aStruHC5[nX][4])
			    EndIf
			Next nX
		Else
	#ENDIF	
		 dbSelectArea("HC5")
			dbSetOrder(1)
			MsSeek(xFilial("HC5"))	    
	#IFDEF TOP
		EndIf
	#ENDIF
	While !(cAliasHC5)->(Eof()) .And. (cAliasHC5)->HC5_FILIAL == xFilial("HC5")
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o status do pedido para importacao                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aObs     := {}
		aErro    := {}
		aCab     := {}
		aItens   := {}
		aRecHC6	 := {}
		__cHHLog := Nil
		If ( AllTrim((cAliasHC5)->HC5_STATUS) $ "N,A" .And. (cAliasHC5)->HC5_ID == cID )
			If lQuery
				nHC5Recno  := (cAliasHC5)->HC5RECNO
			Else
				nHC5Recno  := HC5->(Recno())
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Posiciona registros                                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SA3")
			dbSetOrder(1)
			MsSeek(xFilial("SA3")+(cAliasHC5)->HC5_VEND1)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Analisa os itens do pedido de venda                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			#IFDEF TOP
				If .T.
					lQuery    := .T.
					cAliasHC6 := GetNextAlias()
					aStruHC6  := HC6->(dbStruct())
			
					cQuery := "SELECT HC6.*,HC6.R_E_C_N_O_ HC6RECNO "
					cQuery += "FROM "+RetSqlName("HC6")+" HC6 "
					cQuery += "WHERE "
					cQuery += "HC6.HC6_FILIAL='"+xFilial("HC6")+"' AND "
					cQuery += "HC6.HC6_STATUS IN ('N') AND "
					cQuery += "HC6.HC6_ID = '"+cID+"' AND "
					cQuery += "HC6.HC6_NUM = '"+(cAliasHC5)->HC5_COTAC+"' AND "
					cQuery += "HC6.HC6_INTR='N' AND "
					cQuery += "HC6.D_E_L_E_T_=' ' "
			
					cQuery := ChangeQuery(cQuery)
			
					If __HHLog >= 1
						GravaHHLog(Replicate("-", 50) + KB_ENTER,.T.)
						__HHLogMsg := STR0001 + "(HHIMPHC6 - 1)" + KB_ENTER 
						__HHLogMsg += Space(9) + cQuery + KB_ENTER
						GravaHHLog(__HHLogMsg,.T.)
					EndIf
					
					dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasHC6)	
					For nX := 1 To Len(aStruHC6)
						If aStruHC6[nX][2]<>"C"
							TcSetField(cAliasHC6,aStruHC6[nX][1],aStruHC6[nX][2],aStruHC6[nX][3],aStruHC6[nX][4])
					    EndIf
					Next nX
				Else
			#ENDIF
			    dbSelectArea("HC6")
				dbSetOrder(1)
				MsSeek(xFilial("HC6")+(cAliasHC5)->HC5_COTAC)	    
			#IFDEF TOP
				EndIf
			#ENDIF
			cItem := "00"
			While !(cAliasHC6)->(Eof()) .And. (cAliasHC6)->HC6_FILIAL == xFilial("HC6") .And.;
				(cAliasHC6)->HC6_NUM == (cAliasHC5)->HC5_COTAC
				
				If (cAliasHC6)->HC6_ID == cID
				
					cItem :=  Soma1(cItem)
					
					aLinha := {}
					aadd(aLinha,{"C6_ITEM",cItem,Nil})
					For nX := 1 To Len(aOrdSC6)
						aadd(aLinha,{aOrdSC6[nX][1],(cAliasHC6)->(FieldGet(FieldPos(aOrdSC6[nX][2]))),Nil})
					Next nX
					nPosTes 	:= Ascan(aLinha,{|x| x[1] == "C6_TES"})					
					If  aLinha[nPosTes][2] <> &(SuperGetMv("MV_BONUSTS",,"000"))					
						aadd(aItens,aClone(aLinha))
					Else
						aadd(aItensBon,aClone(aLinha))								
					EndIf					
					
					If lQuery
						aadd(aRecHC6,(cAliasHC6)->HC6RECNO)
					Else
						aadd(aRecHC6,HC6->(Recno()))
					EndIf

				EndIf	
				dbSelectArea(cAliasHC6)
				dbSkip()
			EndDo	
			If lQuery
				dbSelectArea(cAliasHC6)
				dbCloseArea()
				dbSelectArea("HC6")	
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Executa a rotina automatica para importacao do pedido de venda         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica o numero do pedido de venda                                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		    cProxPed := (cAliasHC5)->HC5_NUM
			Do Case 
				Case nTipoSXE == 1				
					If AllTrim((cAliasHC5)->HC5_STATUS)=="N"
						cProxPed := GetSxeNum("SC5","C5_NUM")
						RollBackSx8()
					EndIf
				Case nTipoSXE == 2
				    If AllTrim((cAliasHC5)->HC5_STATUS)=="N"
                    	cProxPed := CriaVar("C5_NUM",.T.)
                        SC5->(dbSetOrder(1))
                        While SC5->(MsSeek(xFilial("SC5")+cProxPed))
                        	ConfirmSX8()
                            cProxPed := GetSxeNum("SC5","C5_NUM")
                        EndDo
                    EndIf             					
			EndCase
			aCab := {}
			For nX := 1 To Len(aOrdSC5)
				If !Empty((cAliasHC5)->(FieldGet(FieldPos(aOrdSC5[nX][2]))))
					If lTrocaDt .And. aOrdSC5[nX][1] == "C5_EMISSAO"
						aadd(aCab,{aOrdSC5[nX][1],dDatabase,Nil})
					Elseif aOrdSC5[nX][1] == "C5_MENNOTA"
						aadd(aCab,{aOrdSC5[nX][1],Alltrim((cAliasHC5)->(FieldGet(FieldPos(aOrdSC5[nX][2])))),Nil})
					Else
						aadd(aCab,{aOrdSC5[nX][1],(cAliasHC5)->(FieldGet(FieldPos(aOrdSC5[nX][2]))),Nil})
					EndIf
				EndIf
			Next nX
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de entrada de complemento de atualizacao                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistBlock("HHHC5PRE")
				If __HHLog >= 1
					GravaHHLog(Replicate("-", 50) + KB_ENTER,.T.)
					__HHLogMsg := STR0002 + "HHHC5PRE" + STR0018 + KB_ENTER // Ponto de entrada // utilizado
					GravaHHLog(__HHLogMsg,.T.)
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciono HC5 antes da chamada do ponto de entrada                     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				HC5->(MsGoto(nHC5Recno))
				aPE    := ExecBlock("HHHC5PRE",.F.,.F.,{aCab,aItens})
				aCab   := aPE[1]
				aItens := aPE[2]
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica a operacao (inclusao/alteracao)                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Len(aCab) = 0 .Or. Len(aItens) = 0
				dbSelectArea(cAliasHC5)
				dbSkip()
				Loop
			EndIf
			
			If __HHLog >= 1
				nCntPed++
				nPosCota 	:= Ascan(aCab,{|x| x[1] == "C5_COTACAO"})
				nPosTabPr 	:= Ascan(aCab,{|x| x[1] == "C5_TABELA"})
				nPosCli 	:= Ascan(aCab,{|x| x[1] == "C5_CLIENTE"})
				nPosCond 	:= Ascan(aCab,{|x| x[1] == "C5_CONDPAG"})
				nPosObs 	:= Ascan(aCab,{|x| x[1] == "C5_MENNOTA"})
				GravaHHLog(Replicate("-", 50) + KB_ENTER,.T.)
				__HHLogMsg := STR0003 + Alltrim(STR(nCntPed)) + " - " + Time() + KB_ENTER // "Processando registros para rotina automatica. Pedido "
				__HHLogMsg += Space(9) + STR0019 + cID+ KB_ENTER // "Vendedor = "
				__HHLogMsg += Space(9) + STR0020 + cProxPed+ KB_ENTER // "Pedido = "
				If nPosCota > 0
					__HHLogMsg += Space(9) + STR0004 + Alltrim(aCab[nPosCota][2])+ KB_ENTER // "Cotação = "
				EndIf
				If nPosCli > 0
					__HHLogMsg += Space(9) + STR0026 + Alltrim(aCab[nPosCli][2])+ KB_ENTER // "Cliente = "
				EndIf
				If nPosTabPr > 0
					__HHLogMsg += Space(9) + STR0021 + Alltrim(aCab[nPosTabPr][2])+ KB_ENTER 	// "Tabela de preco = "
				EndIf
				If nPosCond > 0
					__HHLogMsg += Space(9) + STR0027 + Alltrim(aCab[nPosCond][2])+ KB_ENTER // "Condição Pagto = "
				EndIf
				If nPosObs > 0
					__HHLogMsg += Space(9) + STR0028 + Alltrim(aCab[nPosObs][2])+ KB_ENTER // "Obs = "
				EndIf
				__HHLogMsg += Space(9) + STR0005 + Alltrim(STR(len(aItens))) + STR0006 + KB_ENTER // "Qtd Itens = "
				GravaHHLog(__HHLogMsg,.T.)
			EndIf
			
			If lStatusR
				Conout(STR0022) // "Parametro MV_SFSTAR habilitado"
				HC5->(MsGoto(nHC5Recno))
				RecLock("HC5",.F.)
				HC5->HC5_STATUS := "R"
				HC5->(MsUnlock())
				__HHLogMsg := "HC5.RECNO = " + Alltrim(STR( nHC5Recno )) + STR0023 + "R" + KB_ENTER // " alterado para "
				
				For nX := 1 To Len(aRecHC6)
					HC6->(MsGoto(aRecHC6[nX]))
					RecLock("HC6")
					HC6->HC6_STATUS := "R"
					MsUnlock()
					__HHLogMsg += "HC6.RECNO = " + Alltrim(STR( aRecHC6[nX] )) + STR0023 + "R" + KB_ENTER
				Next nX
				
				If __HHLog >= 1
					GravaHHLog(Replicate("-", 50) + KB_ENTER,.T.)
					GravaHHLog(__HHLogMsg,.T.)
				EndIf
				
			EndIf
			
			dbSelectArea("SC5")
			dbSetOrder(1)
			lMsErroAuto := .F.
			If MsSeek(xFilial("SC5")+cProxPed)
				SF4->(Mata410(aCab,aItens,4))
			Else
				SF4->(Mata410(aCab,aItens,3))
			EndIf
			Begin Transaction
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Posiciona registros                                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SA3")
			dbSetOrder(1)
			MsSeek(xFilial("SA3")+(cAliasHC5)->HC5_VEND1)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza a ultima visita do cliente                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SA1")
			dbSetOrder(1)
			If MsSeek(xFilial("SA1")+(cAliasHC5)->HC5_CLI+(cAliasHC5)->HC5_LOJA)
				RecLock("SA1",.F.)
				SA1->A1_ULTVIS := (cAliasHC5)->HC5_EMISS
				MsUnlock()
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza o proximo pedido                                              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SA3")
			dbSetOrder(1)
			If MsSeek(xFilial("SA3")+(cAliasHC5)->HC5_VEND1)
				RecLock("SA3",.F.)
				SA3->A3_PROXPED := IIf(Soma1((cAliasHC5)->HC5_COTAC)>SA3->A3_PROXPED,Soma1((cAliasHC5)->HC5_COTAC),SA3->A3_PROXPED)
				MsUnlock()
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Analisa se o pedido foi atualizado com sucesso                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			If !lMsErroAuto
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Confirma a sincronizaçao nas tabelas do Mobile                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If FindFunction("GetSx8Len")
					While GetSX8Len() > nStackSX8
						ConfirmSX8()
					EndDo
				Else  
					ConfirmSX8()  // Na Versao 710, a funcao GetSx8Len nao e utilizada
				EndIf
				
				HC5->(MsGoto(nHC5Recno))
				RecLock("HC5",.F.)
				HC5->HC5_STATUS := "P" 
				HC5->HC5_INTR   := "X"
				HC5->(MsUnlock())
				__HHLogMsg := "HC5.RECNO = " + Alltrim(STR( nHC5Recno )) + STR0023 + "X" + KB_ENTER
								
				For nX := 1 To Len(aRecHC6)
					HC6->(MsGoto(aRecHC6[nX]))
					RecLock("HC6")
					HC6->HC6_STATUS := "P"
					HC6->HC6_INTR := "X"
					MsUnlock()
					__HHLogMsg += "HC6.RECNO = " + Alltrim(STR( aRecHC6[nX] )) + STR0023 + "X" + KB_ENTER
				Next nX
				
				If __HHLog >= 1
					GravaHHLog(Replicate("-", 50) + KB_ENTER,.T.)
					GravaHHLog(STR0024 + " - " + Time() + KB_ENTER,.T.) // "Retorno do MATA410 ok, pedido sincronizado"
					GravaHHLog(__HHLogMsg,.T.)
				EndIf
				
				HHSaveLog(HGU->HGU_GRUPO, HGU->HGU_SERIE, 1010, .T., RetTitle("C9_PEDIDO") + cProxPed)
				
				GravaSCV(HC5->HC5_FORMPG)
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Ponto de Entrada no final da importacao de cada Pedido de Venda³
				//³Apos a gravacao do mesmo e atualizacoes nas Tabelas HC5 e HC6  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ExistBlock("HHHC5POS")
					ExecBlock("HHHC5POS", .F., .F., {cProxPed,Len(aItens)}) // Passa para o ParamIxb[1] o numero do Pedido e para o ParamIxb[2] a quantidade de itens do Pedido 
					If __HHLog >= 1
						GravaHHLog(Replicate("-", 50) + KB_ENTER,.T.)
						__HHLogMsg := STR0002 + "HHHC5POS" + STR0018 + KB_ENTER // Ponto de entrada // utilizado
						GravaHHLog(__HHLogMsg,.T.)
					EndIf
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Envio de comunicacao de sincronizacao                                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If HC5->HC5_QTDITE <> ( Len(aItens) + Len(aItensBon))
					aadd(aObs,STR0007 + Str(Len(aItens),4,0) + "/" + Str(HC5->HC5_QTDITE,4,0))
				Else
					aadd(aObs,STR0008)
				EndIf
							
				HHMail({AllTrim(SA3->A3_EMAIL)},;
						{{RetTitle("A3_COD"),SA3->A3_COD},;
									{RetTitle("A3_NOME"),SA3->A3_NOME},;
									{RetTitle("HC5_COTAC"),(cAliasHC5)->HC5_COTAC},;
									{RetTitle("C9_PEDIDO"),cProxPed},;
									{RetTitle("HC5_EMISS"),Dtoc((cAliasHC5)->HC5_EMISS)},;
									{RetTitle("C5_CLIENTE"),SA1->A1_COD+"/"+SA1->A1_LOJA},;
									{RetTitle("A1_NOME"),SA1->A1_NOME},;
									{RetTitle("A1_CGC"),SA1->A1_CGC},;
									{RetTitle("A1_MUN"),SA1->A1_MUN},;
									{RetTitle("A1_EST"),SA1->A1_EST},;
									{RetTitle("C5_MENNOTA"),(cAliasHC5)->HC5_MENOTA},;
									{RetTitle("C5_CONDPAG"),(cAliasHC5)->HC5_COND},;
									{STR0009,Str(Len(aItens),4,0) + "/" + Str(HC5->HC5_QTDITE,4,0)}},aObs)
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Confirma a falha de sincronizacao                                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If FindFunction("GetSx8Len")
					While GetSX8Len() > nStackSX8
						RollBackSX8()
					EndDo
				Else  
					RollBackSX8()  // Na Versao 710, a funcao GetSx8Len nao e utilizada
				EndIf
				
				HC5->(MsGoto(nHC5Recno))
				RecLock("HC5")
				HC5->HC5_STATUS	:= "N"
				HC5->HC5_INTR	:= "N"
				HC5->HC5_NUM	:= HC5->HC5_COTAC
				HC5->(MsUnlock())
				__HHLogMsg := "HC5.RECNO = " + Alltrim(STR( nHC5Recno )) + STR0023 + "N" + KB_ENTER
				
				For nX := 1 To Len(aRecHC6)
					HC6->(MsGoto(aRecHC6[nX]))
					RecLock("HC6")
					HC6->HC6_STATUS := "N"
					HC6->HC6_INTR	:= "N"
					HC6->HC6_NUM	:= HC6->HC6_COTAC
					MsUnlock()
					__HHLogMsg += "HC6.RECNO = " + Alltrim(STR( aRecHC6[nX] )) + STR0023 + "N" + KB_ENTER
				Next nX
			 	
				If __HHLog >= 1
					GravaHHLog(Replicate("-", 50) + KB_ENTER,.T.)
					GravaHHLog(STR0025 + " - " + Time() + KB_ENTER,.T.) // "Pedido nao sincronizado, consultar log"
					GravaHHLog(__HHLogMsg,.T.)
				EndIf
			 	
			 	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Envio de comunicacao de sincronizacao                                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				MostraErro(GetHHDir() + "LOGS\",@__cHHLog)
				__cHHLog := GetHHDir()+"LOGS\" + __cHHLog
				HHSaveLog(HGU->HGU_GRUPO, HGU->HGU_SERIE, 1011, .T., STR0010 + HC5->HC5_COTAC + "- " + __cHHLog + " - lMsErroAuto = .F." )
				
				aadd(aObs,STR0011)
				aadd(aErro,__cHHLog)
				aadd(aErro,"")
				aadd(aErro,MemoRead(__cHHLog))
				
				HHMail({SA3->A3_EMAIL},;
						{{RetTitle("A3_COD"),SA3->A3_COD},;
									{RetTitle("A3_NOME"),SA3->A3_NOME},;
									{RetTitle("HC5_COTAC"),(cAliasHC5)->HC5_COTAC},;
									{RetTitle("HC5_EMISS"),Dtoc((cAliasHC5)->HC5_EMISS)},;
									{RetTitle("C5_CLIENTE"),SA1->A1_COD+"/"+SA1->A1_LOJA},;
									{RetTitle("A1_NOME"),SA1->A1_NOME},;
									{RetTitle("A1_CGC"),SA1->A1_CGC},;
									{RetTitle("A1_MUN"),SA1->A1_MUN},;
									{RetTitle("A1_EST"),SA1->A1_EST},;
									{RetTitle("C5_MENNOTA"),(cAliasHC5)->HC5_MENOTA}},aObs,aErro)
			EndIf
			End Transaction
		EndIf
		dbSelectArea(cAliasHC5)
		dbSkip()
	EndDo
	If lQuery
		dbSelectArea(cAliasHC5)
		dbCloseArea()
		dbSelectArea("HC5")
	EndIf
EndIf
If cStatusTrg <> "0"
	HHLockTrg("SC5",cID,@cSerie,cEmpAnt,cFilAnt,.T.)
EndIf

UnLockByName("HHEXP_SC5"+cID,.T.,!Empty(xFilial("HC5")),.T.)

RestArea(aArea)
Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³HHIMPSCV  ³ Autor ³                       ³ Data ³06/03/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Sincronização do HandHeld - SCV - Pedido de Venda           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GravaSCV(cForma)

dbSelectArea("SCV")
dbSetOrder(1)
If !dbSeek(xFilial("SCV") + SC5->C5_NUM + cForma)
	RecLock("SCV", .T.)
	SCV->CV_FILIAL := xFilial("SCV")
	SCV->CV_PEDIDO := SC5->C5_NUM
	SCV->CV_FORMAPG := cForma
	dbSelectArea("SX5")
	dbSetOrder(1)
	If dbSeek(xFilial("SX5")+"24"+cForma)
		SCV->CV_DESCFOR := X5Descri()
	EndIf
	SCV->CV_RATFOR := 100
	SCV->(MsUnlock())
EndIf
Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³HHIMPHA1  ³ Autor ³Eduardo Riera          ³ Data ³06/03/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Sincronização do HandHeld - SA1 - Cadastro de cliente       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function HHIMPHA1()

Local aArea      := GetArea()
Local aOrdSA1    := {}
Local aCab       := {}
Local aObs       := {}
Local aErro      := {}
Local aPE        := {}
Local cAliasHA1  := "HA1"
Local cId        := HGU->HGU_CODBAS
Local nStackSX8  := If(FindFunction("GetSx8Len"),GetSx8Len(),0)
Local nX         := 0
Local lQuery     := .F.
Local lInclui    := .F.
Local cCodCli    := ""
Local cLojaCli   := ""
Local nRecNo     := 0
Local __cHHLog   := Nil
#IFDEF TOP
	Local cQuery     := ""
	Local aStruHA1   := {}
#ENDIF
PRIVATE lMsHelpAuto := .T.
PRIVATE lMsErroAuto := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define a ordem de importacao da rotina automatica                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aadd(aOrdSA1,{"A1_NOME","HA1_NOME",.T.})
aadd(aOrdSA1,{"A1_NREDUZ","HA1_NREDUZ",.T.})
aadd(aOrdSA1,{"A1_TIPO","HA1_TIPO",.T.})
aadd(aOrdSA1,{"A1_END","HA1_END",.T.})
aadd(aOrdSA1,{"A1_MUN","HA1_MUN",.T.})
aadd(aOrdSA1,{"A1_EST","HA1_EST",.T.})
aadd(aOrdSA1,{"A1_BAIRRO","HA1_BAIRRO",.F.})
aadd(aOrdSA1,{"A1_CEP","HA1_CEP",.F.})
aadd(aOrdSA1,{"A1_TEL","HA1_TEL",.F.})
aadd(aOrdSA1,{"A1_INSCR","HA1_INSCR",.F.})
aadd(aOrdSA1,{"A1_EMAIL","HA1_EMAIL",.F.})
aadd(aOrdSA1,{"A1_ULTVIS","HA1_ULTVIS",.F.})
aadd(aOrdSA1,{"A1_VEND","HA1_ID",.F.})
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Aguardando trigger                                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
While !LockByName("HHEXP_SA1"+cID,.T.,!Empty(xFilial("HA1")),.T.) .And. !KillApp()
	Sleep(1000)
EndDo
If !KillApp()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa os clientes que deverao ser importados                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
		If .T.
			lQuery    := .T.
			cAliasHA1 := GetNextAlias()
			aStruHA1  := HA1->(dbStruct())
			
			cQuery := "SELECT HA1.*,R_E_C_N_O_ HA1RECNO "
			cQuery += "FROM "+RetSqlName("HA1")+" HA1 "
			cQuery += "WHERE "
			cQuery += "HA1.HA1_FILIAL='"+xFilial("HA1")+"' AND "
			cQuery += "HA1.HA1_STATUS IN ('N','A') AND "
			cQuery += "HA1.HA1_ID = '"+cId+"' AND "
			cQuery += "HA1.D_E_L_E_T_=' ' "
			
			cQuery := ChangeQuery(cQuery)
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasHA1)	
			For nX := 1 To Len(aStruHA1)
				If aStruHA1[nX][2]<>"C"
					TcSetField(cAliasHA1,aStruHA1[nX][1],aStruHA1[nX][2],aStruHA1[nX][3],aStruHA1[nX][4])
			    EndIf
			Next nX
		Else
	#ENDIF	
		    dbSelectArea("HA1")
			dbSetOrder(1)
			MsSeek(xFilial("HA1"))	    
	#IFDEF TOP
		EndIf
	#ENDIF
	While !Eof() .And. (cAliasHA1)->HA1_FILIAL == xFilial("HA1")
		aCab := {}
		aObs := {}
		aErro:= {}
		__cHHLog   := Nil	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o status de importacao                                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( AllTrim((cAliasHA1)->HA1_STATUS) $ "N,A" .And. !Empty((cAliasHA1)->HA1_CGC) .And. (cAliasHA1)->HA1_ID==cID)
			If lQuery
				HA1->(MsGoto((cAliasHA1)->HA1RECNO))
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Posiciona registros                                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SA1")
			dbSetOrder(1)
			MsSeek(xFilial("SA1")+(cAliasHA1)->HA1_COD+(cAliasHA1)->HA1_LOJA )
			
			dbSelectArea("SA3")
			dbSetOrder(1)
			MsSeek(xFilial("SA3")+(cAliasHA1)->HA1_ID)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Executa a rotina automatica para importacao do cliente                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica o numero do cliente                                           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SA1->(Found()) .And. SA1->A1_COD == (cAliasHA1)->HA1_COD .And. SA1->A1_LOJA == (cAliasHA1)->HA1_LOJA .And. (AllTrim((cAliasHA1)->HA1_STATUS) $ "A" ) // Alteração de cliente ja gravado na retaguarda
				cCodCli := SA1->A1_COD
				cLojaCli:= SA1->A1_LOJA
				lInclui := .F.
			ElseIf AllTrim((cAliasHA1)->HA1_STATUS) $ "N" 
				   lInclui := .T.
				   cLojaCli := "00"
				   If Len(AllTrim((cAliasHA1)->HA1_CGC))==14
					  dbSelectArea("SA1")
					  dbSetOrder(3)
					  If MsSeek(xFilial("SA1")+SubStr((cAliasHA1)->HA1_CGC,1,8))
						  cCodCli  := SA1->A1_COD
						  While !Eof() .And. xFilial("SA1") == SA1->A1_FILIAL .And.;
							    SubStr((cAliasHA1)->HA1_CGC,1,8) == SubStr(SA1->A1_CGC,1,8)
							
							    cLojaCli := IIf(SA1->A1_LOJA>cLojaCli,SA1->A1_LOJA,cLojaCli)
							
							    dbSelectArea("SA1")
							    dbSkip()
						   EndDo
						   cLojaCli := Soma1(cLojaCli)	
					   Else
						   dbSelectArea("SA1")
						   dbSetOrder(1)				
						   cCodCli := CriaVar("A1_COD",.T.)
						   If Empty(cCodCli)
							   cCodCli := GetSxeNum("SA1","A1_COD")
							   While SA1->(MsSeek(xFilial("SA1")+cCodCli))
								   ConfirmSX8()
								   cCodCli := GetSxeNum("SA1","A1_COD")
							   EndDo
						   EndIf
						   cLojaCli := Soma1(cLojaCli)	
					   EndIf
				   Else
					   dbSelectArea("SA1")
					   dbSetOrder(1)				
					   cCodCli := CriaVar("A1_COD")
					   If Empty(cCodCli)
						  cCodCli := GetSxeNum("SA1","A1_COD")
						  While SA1->(MsSeek(xFilial("SA1")+cCodCli))
							    ConfirmSX8()
							    cCodCli := GetSxeNum("SA1","A1_COD")
						  EndDo
					   EndIf
					   cLojaCli := Soma1(cLojaCli)	
				   EndIf
			   EndIf

			   aCab := {}
		 	   aadd(aCab,{"A1_COD",cCodCli,Nil})
			   aadd(aCab,{"A1_LOJA",cLojaCli,Nil})
			   aadd(aCab,{"A1_CGC",(cAliasHA1)->HA1_CGC,Nil})

			   For nX := 1 To Len(aOrdSA1)
				   If Empty((cAliasHA1)->(FieldGet(FieldPos(aOrdSA1[nX][2])))) .AND. aOrdSA1[nX][3]==.T.
					  Conout(STR0035 +" : ("+ aOrdSA1[nX][1] +") "+STR0036 + ".") 
				   Else				   	   
				   	   aadd(aCab,{aOrdSA1[nX][1],(cAliasHA1)->(FieldGet(FieldPos(aOrdSA1[nX][2]))),Nil})		   
				   EndIf
			   Next nX
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de entrada de complemento de atualizacao                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistBlock("HHHA1PRE")
				aPE    := ExecBlock("HHHA1PRE",.F.,.F.,{aCab})
				aCab   := aPE
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica a operacao (inclusao/alteracao)                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Begin Transaction
			dbSelectArea("SA1")
			dbSetOrder(1)
			lMsErroAuto := .F.
			If MsSeek(xFilial("SA1")+cCodCli+cLojaCli)
				SF4->(Mata030(aCab,4))
			Else
				SF4->(Mata030(aCab,3))
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Posiciona registros                                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SA3")
			dbSetOrder(1)
			MsSeek(xFilial("SA3")+(cAliasHA1)->HA1_ID)
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Analisa se o cliente foi atualizado com sucesso                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !lMsErroAuto
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza o codigo do cliente na demais tabelas                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("HC5")
				dbSetOrder(1)
				MsSeek(xFilial("HC5"))
				While !Eof() .And. 	xFilial("HC5") == HC5->HC5_FILIAL
	
					dbSelectArea("HC5")
					dbSkip()
					nRecNo := HC5->(RecNo())
					dbSkip(-1)
				
					If HC5->HC5_CLI == (cAliasHA1)->HA1_COD .And.;
						HC5->HC5_LOJA == (cAliasHA1)->HA1_LOJA
						
						RecLock("HC5")
						HC5->HC5_CLI     := cCodCli
						HC5->HC5_LOJA    := cLojaCli
						MsUnLock()
											
				  	EndIf			  	
				  	HC5->(MsGoto(nRecno))
				EndDo
				
				dbSelectArea("HU5")
				dbSetOrder(1)
				MsSeek(xFilial("HU5"))
				While !Eof() .And. 	xFilial("HU5") == HU5->HU5_FILIAL 
				
					dbSelectArea("HU5")
					dbSkip()
					nRecNo := HU5->(RecNo())
					dbSkip(-1)
							
					If HU5->HU5_CLIENTE == (cAliasHA1)->HA1_COD .And.;
						HU5->HU5_LOJA == (cAliasHA1)->HA1_LOJA
						
						RecLock("HU5")
						HU5->HU5_CLIENTE := cCodCli
						HU5->HU5_LOJA    := cLojaCli
						MsUnLock()
						
				  	EndIf			  	
				  	HU5->(MsGoto(nRecno))
				EndDo
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza a ultima visita do cliente                                    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SA1")
				dbSetOrder(1)
				If MsSeek(xFilial("SA1")+cCodCli+cLojaCli)
					RecLock("SA1",.F.)
					SA1->A1_ULTVIS := dDataBase
					MsUnlock()
				EndIf			
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Confirma a sincronizaçao nas tabelas do Mobile                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If FindFunction("GetSx8Len")
					While GetSX8Len() > nStackSX8
						ConfirmSX8()
					EndDo
				Else
					ConfirmSX8()	// Na Versao 710, a funcao GetSx8Len nao e utilizada
				EndIf
				RecLock("HA1",.F.)
				HA1->HA1_STATUS := "P"
				HA1->HA1_INTR   := "X"
				HA1->(MsUnlock())
										
				HHSaveLog(HGU->HGU_GRUPO, HGU->HGU_SERIE, If(lInclui, 1020, 1021), .T., RetTitle("C5_CLIENTE") + cCodCli+"/"+cLojaCli)
				
				aadd(aObs,STR0012)
									
				HHMail({SA3->A3_EMAIL},;
						{{RetTitle("C5_VEND1"),SA3->A3_COD},;
									{RetTitle("A3_NOME"),SA3->A3_NOME},;
									{RetTitle("HA1_CGC"),(cAliasHA1)->HA1_CGC},;
									{STR0029,cCodCli},; // "Código Protheus"
									{RetTitle("HA1_COD"),(cAliasHA1)->HA1_COD},;
									{RetTitle("HA1_LOJA"),(cAliasHA1)->HA1_LOJA},;
									{RetTitle("A1_NOME"),(cAliasHA1)->HA1_NOME}},aObs)
				
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Confirma a falha de sincronizacao                                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If FindFunction("GetSx8Len")
					While GetSX8Len() > nStackSX8
						RollBackSX8()
					EndDo
			   	Else
	     			RollBackSX8()
				EndIf
				MostraErro(GetHHDir() + "LOGS\", @__cHHLog)
				__cHHLog := GetHHDir() + "LOGS\"+ __cHHLog
				HHSaveLog(HGU->HGU_GRUPO, HGU->HGU_SERIE, 1022, .T., RetTitle("C5_CLIENTE") + (cAliasHA1)->HA1_COD+"/"+(cAliasHA1)->HA1_LOJA)
								
				aadd(aObs,STR0013)
				aadd(aErro,__cHHLog)
				aadd(aErro,"")
				aadd(aErro,MemoRead(__cHHLog))
				
				HHMail({SA3->A3_EMAIL},;
						{{RetTitle("A3_COD"),SA3->A3_COD},;
									{RetTitle("A3_NOME"),SA3->A3_NOME},;
									{RetTitle("HA1_CGC"),(cAliasHA1)->HA1_CGC},;									
									{RetTitle("HA1_COD"),(cAliasHA1)->HA1_COD},;
									{RetTitle("HA1_LOJA"),(cAliasHA1)->HA1_LOJA},;
									{RetTitle("A1_NOME"),(cAliasHA1)->HA1_NOME}},aObs,aErro)
			EndIf		
			End Transaction
		EndIf
		dbSelectArea(cAliasHA1)
		dbSkip()
	EndDo	
	If lQuery
		dbSelectArea(cAliasHA1)
		dbCloseArea()
		dbSelectArea("HA1")
	EndIf
EndIf
UnLockByName("HHEXP_SA1"+cID,.T.,!Empty(xFilial("HA1")),.T.)

RestArea(aArea)
Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³HHIMPHU5  ³ Autor ³Eduardo Riera          ³ Data ³16/03/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Sincronização do HandHeld - HU5 - Contatos de Venda         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function HHIMPHU5()

Local aArea := GetArea()
Local aCab       := {}
Local aObs       := {}
Local aErro      := {}
Local aPE        := {}
Local aOrdSU5    := {}
Local cAliasHU5  := "HU5"
Local cId        := HGU->HGU_CODBAS
Local nStackSX8  := If(FindFunction("GetSx8Len"),GetSx8Len(),0)
Local nX         := 0
Local lQuery     := .F.
Local lInclui    := .F.
Local cCodCon    := ""
Local __cHHLog   := Nil
#IFDEF TOP
	Local cQuery     := ""
	Local aStruHU5   := {}
#ENDIF
PRIVATE lMsHelpAuto := .T.
PRIVATE lMsErroAuto := .F.
PRIVATE INCLUI      := .T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define a ordem de importacao da rotina automatica                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aadd(aOrdSU5,{"U5_CONTAT","HU5_CONTAT"})
aadd(aOrdSU5,{"U5_FONE","HU5_FONE"})
aadd(aOrdSU5,{"U5_CPF","HU5_CPF"})
aadd(aOrdSU5,{"U5_FUNCAO","HU5_FUNCAO"})
aadd(aOrdSU5,{"U5_CELULAR","HU5_CEL"})
aadd(aOrdSU5,{"U5_NIVER","HU5_DTNASC"})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Aguardando trigger                                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
While !LockByName("HHEXP_SU5"+cID,.T.,!Empty(xFilial("HU5")),.T.) .And. !KillApp()
	Sleep(1000)
EndDo
If !KillApp()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa os contatos que deverao ser importados                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
		If .T.
			lQuery    := .T.
			cAliasHU5 := GetNextAlias()
			aStruHU5  := HU5->(dbStruct())
			
			cQuery := "SELECT HU5.*,R_E_C_N_O_ HU5RECNO "
			cQuery += "FROM "+RetSqlName("HU5")+" HU5 "
			cQuery += "WHERE "
			cQuery += "HU5.HU5_FILIAL='"+xFilial("HU5")+"' AND "
			cQuery += "HU5.HU5_STATUS IN ('N','A') AND "
			cQuery += "HU5.HU5_ID = '"+cId+"' AND "
			cQuery += "HU5.D_E_L_E_T_=' ' "
			
			cQuery := ChangeQuery(cQuery)
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasHU5)	
			For nX := 1 To Len(aStruHU5)
				If aStruHU5[nX][2]<>"C"
					TcSetField(cAliasHU5,aStruHU5[nX][1],aStruHU5[nX][2],aStruHU5[nX][3],aStruHU5[nX][4])
			    EndIf
			Next nX
		Else
	#ENDIF	
		    dbSelectArea("HU5")
			dbSetOrder(1)
			MsSeek(xFilial("HU5"))	    
	#IFDEF TOP
		EndIf
	#ENDIF
	While !Eof() .And. (cAliasHU5)->HU5_FILIAL == xFilial("HU5")
		aObs := {}
		aErro:= {}
		aCab := {}	
		__cHHLog   := Nil
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o status de importacao                                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( AllTrim((cAliasHU5)->HU5_STATUS) $ "N,A" .And. (cAliasHU5)->HU5_ID==cID )
			If lQuery
				HU5->(MsGoto((cAliasHU5)->HU5RECNO))
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Posiciona registros                                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
			dbSelectArea("SA3")
			dbSetOrder(1)
			MsSeek(xFilial("SA3")+(cAliasHU5)->HU5_ID)		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Executa a rotina automatica para importacao do contato                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica o numero do contato                                           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (cAliasHU5)->HU5_STATUS=="A"
				cCodCon := (cAliasHU5)->HU5_CODCONT
				lInclui := .F.
				inclui  := .F.
			Else
				lInclui := .T.
				cCodCon := SU5->(CriaVar("U5_CODCONT",.T.))
				If Empty(cCodCon)
					cCodCon := GetSxeNum("SU5","U5_CODCONT")
					While SU5->(MsSeek(xFilial("SU5")+cCodCon))
						ConfirmSX8()
						cCodCon := GetSxeNum("SU5","U5_CODCONT")
					EndDo
				EndIf
			EndIf
			aCab := {}
			aadd(aCab,{"U5_CODCONT",cCodCon,Nil})
			For nX := 1 To Len(aOrdSU5)
				If !Empty((cAliasHU5)->(FieldGet(FieldPos(aOrdSU5[nX][2]))))
					aadd(aCab,{aOrdSU5[nX][1],(cAliasHU5)->(FieldGet(FieldPos(aOrdSU5[nX][2]))),Nil})
				EndIf
			Next nX
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de entrada de complemento de atualizacao                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistBlock("HHHU5PRE")
				aPE    := ExecBlock("HHHU5PRE",.F.,.F.,{aCab})
				aCab   := aPE
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica a operacao (inclusao/alteracao)                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Begin Transaction
			dbSelectArea("SU5")
			dbSetOrder(1)
			lMsErroAuto := .F.
			If MsSeek(xFilial("SU5")+cCodCon)
				SA1->(TmkA070(aCab,4))
			Else
				SA1->(TmkA070(aCab,3))
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Posiciona registros                                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SA1")
			dbSetOrder(1)
			MsSeek(xFilial("SA1")+(cAliasHU5)->HU5_CLIENTE+(cAliasHU5)->HU5_LOJA)

			dbSelectArea("SA3")
			dbSetOrder(1)
			MsSeek(xFilial("SA3")+(cAliasHU5)->HU5_ID)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Analisa se o contato foi atualizado com sucesso                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !lMsErroAuto
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Amarra o contato ao cliente                                            ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("AC8")
				dbSetOrder(1)
				If MsSeek(xFilial("AC8")+cCodCon+"SA1"+xFilial("SA1")+(cAliasHU5)->HU5_CLIENTE+(cAliasHU5)->HU5_LOJA)
					RecLock("AC8",.F.)
				Else
					RecLock("AC8",.T.)
				EndIf
				AC8->AC8_FILIAL := xFilial("AC8")
				AC8->AC8_FILENT := xFilial("SA1")
				AC8->AC8_ENTIDA := "SA1"
				AC8->AC8_CODENT := (cAliasHU5)->HU5_CLIENTE+(cAliasHU5)->HU5_LOJA
				AC8->AC8_CODCON := cCodCon
				MsUnLock()
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Confirma a sincronizaçao nas tabelas do Mobile                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If FindFunction("GetSx8Len")
					While GetSX8Len() > nStackSX8
						ConfirmSX8()
					EndDo
				Else
					ConfirmSX8()   // Na Versao 710, a funcao GetSx8Len nao e utilizada
				EndIf
				RecLock("HU5",.F.)
				HU5->HU5_STATUS := "P"
				HU5->HU5_INTR   := "X"
				HU5->(MsUnlock())
										
				HHSaveLog(HGU->HGU_GRUPO, HGU->HGU_SERIE, If(lInclui, 1020, 1021), .T., RetTitle("U5_CODCONT") + cCodCon)
				
				aadd(aObs,STR0014) // "O contato do cliente foi sincronizado com sucesso"
									
				HHMail({SA3->A3_EMAIL},;
						{{RetTitle("C5_VEND1"),SA3->A3_COD},;
									{RetTitle("A3_NOME"),SA3->A3_NOME},;
									{RetTitle("HU5_CODCON"),cCodCon},;									
									{RetTitle("U5_CPF"),(cAliasHU5)->HU5_CPF},;
									{RetTitle("HU5_CONTAT"),(cAliasHU5)->HU5_CONTAT},;
									{RetTitle("C5_CLIENTE"),(cAliasHU5)->HU5_CLIENTE+"/"+(cAliasHU5)->HU5_LOJA},;
									{RetTitle("A1_NOME"),SA1->A1_NOME}},aObs)
				
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Confirma a falha de sincronizacao                                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If FindFunction("GetSx8Len")
					While GetSX8Len() > nStackSX8
						RollBackSX8()
					EndDo
				Else
					RollBackSX8()  // Na Versao 710, a funcao GetSx8Len nao e utilizada
				EndIf			
				MostraErro(GetHHDir() + "LOGS\", @__cHHLog)				
				__cHHLog := GetHHDir() + "LOGS\"+__cHHLog
				
				aadd(aObs,STR0015)
				aadd(aErro,__cHHLog)
				aadd(aErro,"")
				aadd(aErro,MemoRead(__cHHLog))
				
				HHMail({SA3->A3_EMAIL},;
						{{RetTitle("C5_VEND1"),SA3->A3_COD},;
									{RetTitle("A3_NOME"),SA3->A3_NOME},;
									{RetTitle("HU5_CODCON"),cCodCon},;									
									{RetTitle("U5_CPF"),(cAliasHU5)->HU5_CPF},;
									{RetTitle("HU5_CONTAT"),(cAliasHU5)->HU5_CONTAT},;
									{RetTitle("C5_CLIENTE"),(cAliasHU5)->HU5_CLIENTE+"/"+(cAliasHU5)->HU5_LOJA},;
									{RetTitle("A1_NOME"),SA1->A1_NOME}},aObs,aErro)
								
				HHSaveLog(HGU->HGU_GRUPO, HGU->HGU_SERIE, 1022, .T., RetTitle("HU5_CODCON") + cCodCon )
							
			EndIf		
			End Transaction
		EndIf
		dbSelectArea(cAliasHU5)
		dbSkip()
	EndDo	
	If lQuery
		dbSelectArea(cAliasHU5)
		dbCloseArea()
		dbSelectArea("HU5")
	EndIf
EndIf
UnLockByName("HHEXP_SU5"+cID,.T.,!Empty(xFilial("HU5")),.T.)

RestArea(aArea)
Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³HHIMPHD5  ³ Autor ³Liber De Esteban       ³ Data ³02/01/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Sincronização do HandHeld - AD5 - Apontamento de Visitas    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function HHIMPHD5()

Local aArea      := GetArea()
Local aOrdAD5    := {}
Local aCab       := {}
Local aItens	 := {}
Local aObs       := {}
Local aErro      := {}
Local aPE        := {}
Local cAliasHD5  := "HD5"
Local cId        := HGU->HGU_CODBAS
Local nStackSX8  := If(FindFunction("GetSx8Len"),GetSx8Len(),0)
Local nX         := 0
Local lQuery     := .F.
Local __cHHLog   := Nil
#IFDEF TOP
	Local cQuery     := ""
	Local aStruHD5   := {}
#ENDIF
PRIVATE lMsHelpAuto := .T.
PRIVATE lMsErroAuto := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define a ordem de importacao da rotina automatica                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aadd(aOrdAD5,{"AD5_CODCLI","HD5_CODCLI"})
aadd(aOrdAD5,{"AD5_LOJA","HD5_LOJA"})
aadd(aOrdAD5,{"AD5_EVENTO","HD5_CODNPO"})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Aguardando trigger                                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
While !LockByName("HHEXP_AD5"+cID,.T.,!Empty(xFilial("HD5")),.T.) .And. !KillApp()
	Sleep(1000)
EndDo
If !KillApp()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa os clientes que deverao ser importados                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
		If .T.
			lQuery    := .T.
			cAliasHD5 := GetNextAlias()
			aStruHD5  := HD5->(dbStruct())
			
			cQuery := "SELECT HD5.*,R_E_C_N_O_ HD5RECNO "
			cQuery += "FROM "+RetSqlName("HD5")+" HD5 "
			cQuery += "WHERE "
			cQuery += "HD5.HD5_FILIAL='"+xFilial("HD5")+"' AND "
			cQuery += "HD5.HD5_INTR = 'N' AND "
			cQuery += "HD5.HD5_ID = '"+cId+"' AND "
			cQuery += "HD5.D_E_L_E_T_=' ' "
			
			cQuery := ChangeQuery(cQuery)
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasHD5)	
			For nX := 1 To Len(aStruHD5)
				If aStruHD5[nX][2]<>"C"
					TcSetField(cAliasHD5,aStruHD5[nX][1],aStruHD5[nX][2],aStruHD5[nX][3],aStruHD5[nX][4])
			    EndIf
			Next nX
		Else
	#ENDIF
		    dbSelectArea("HD5")
			dbSetOrder(1)
			MsSeek(xFilial("HD5"))	    
	#IFDEF TOP
		EndIf
	#ENDIF
	While !Eof() .And. (cAliasHD5)->HD5_FILIAL == xFilial("HD5")
		aCab := {}
		aObs := {}
		aErro:= {}
		__cHHLog   := Nil	

		If (cAliasHD5)->HD5_ID==cID
		
			If lQuery
				HD5->(MsGoto((cAliasHD5)->HD5RECNO))
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Posiciona registros                                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SA3")
			dbSetOrder(1)
			MsSeek(xFilial("SA3")+(cAliasHD5)->HD5_ID)		
			
			dbSelectArea("AD5")
			dbSetOrder(1)
			MsSeek(xFilial("AD5")+(cAliasHD5)->HD5_ID+Subs((cAliasHD5)->HD5_DTHR,1,8))
			cSeq := "01"
			While AD5->AD5_FILIAL+AD5->AD5_VEND+DTOS(AD5->AD5_DATA)==xFilial("AD5")+(cAliasHD5)->HD5_ID+Subs((cAliasHD5)->HD5_DTHR,1,8)
				cSeq := SOMA1(cSeq)
				dbSkip()
			End
			
			aCab 	:= {}
			aItens	:= {}
			aadd(aCab,{"AD5_VEND",cId,Nil})
			aadd(aCab,{"AD5_DATA",StoD(Subs((cAliasHD5)->HD5_DTHR,1,8)),Nil})
			aadd(aCab,{"AD5_SEQUEN",cSeq,Nil})
			
			For nX := 1 To Len(aOrdAD5)
				If !Empty((cAliasHD5)->(FieldGet(FieldPos(aOrdAD5[nX][2]))))
					aadd(aCab,{aOrdAD5[nX][1],(cAliasHD5)->(FieldGet(FieldPos(aOrdAD5[nX][2]))),Nil})
				EndIf
			Next nX
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de entrada de complemento de atualizacao                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistBlock("HHHD5PRE")
				aPE    := ExecBlock("HHHD5PRE",.F.,.F.,{aCab})
				aCab   := aPE
			EndIf
			
			Begin Transaction
			dbSelectArea("AD5")
			dbSetOrder(1)
			lMsErroAuto := .F.
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Executa a rotina automatica para importacao do apontamento             ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			AD5->(Fata310(aCab,aItens,3))
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Posiciona registros                                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SA3")
			dbSetOrder(1)
			MsSeek(xFilial("SA3")+(cAliasHD5)->HD5_ID)
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Analisa se o apontamento foi atualizado com sucesso                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !lMsErroAuto
			
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Confirma a sincronizaçao nas tabelas do Mobile                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If FindFunction("GetSx8Len")
					While GetSX8Len() > nStackSX8
						ConfirmSX8()
					EndDo
				Else
					ConfirmSX8()
				EndIf
				RecLock("HD5",.F.)
				HD5->HD5_INTR   := "X"
				HD5->(MsUnlock())
				
				HHSaveLog(HGU->HGU_GRUPO, HGU->HGU_SERIE, 1020 , .T., RetTitle("AD5_CODCLI") + (cAliasHD5)->HD5_CODCLI+"/"+(cAliasHD5)->HD5_LOJA)

				aadd(aObs,STR0016)				
				HHMail({SA3->A3_EMAIL},;
						{{RetTitle("AD5_VEND"),SA3->A3_COD},;
									{RetTitle("A3_NOME"),SA3->A3_NOME},;
									{RetTitle("AD5_CODCLI"),(cAliasHD5)->HD5_CODCLI},;
									{RetTitle("AD5_LOJA"),(cAliasHD5)->HD5_LOJA},;
									{RetTitle("AD5_DATA"),DTOC(STOD(Subs((cAliasHD5)->HD5_DTHR,1,8)))},;
									{RetTitle("AD5_EVENTO"),(cAliasHD5)->HD5_CODNPO}},aObs)
				
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Confirma a falha de sincronizacao                                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If FindFunction("GetSx8Len")
					While GetSX8Len() > nStackSX8
						RollBackSX8()
					EndDo
     			Else
			     	RollBackSX8()
				EndIf

				MostraErro(GetHHDir() + "LOGS\", @__cHHLog)
				__cHHLog := GetHHDir() + "LOGS\"+ __cHHLog
				HHSaveLog(HGU->HGU_GRUPO, HGU->HGU_SERIE, 1022, .T., RetTitle("AD5_CODCLI") + (cAliasHD5)->HD5_CODCLI+"/"+(cAliasHD5)->HD5_LOJA)
				
				aadd(aObs,STR0017)
				aadd(aErro,__cHHLog)
				aadd(aErro,"")
				aadd(aErro,MemoRead(__cHHLog))
				
				HHMail({SA3->A3_EMAIL},;
						{{RetTitle("AD5_VEND"),SA3->A3_COD},;
									{RetTitle("A3_NOME"),SA3->A3_NOME},;
									{RetTitle("AD5_CODCLI"),(cAliasHD5)->HD5_CODCLI},;
									{RetTitle("AD5_LOJA"),(cAliasHD5)->HD5_LOJA},;
									{RetTitle("AD5_DATA"),DTOC(STOD(Subs((cAliasHD5)->HD5_DTHR,1,8)))},;
									{RetTitle("AD5_EVENTO"),(cAliasHD5)->HD5_CODNPO}},aObs)
				
			EndIf		
			End Transaction
		EndIf
		dbSelectArea(cAliasHD5)
		dbSkip()
	EndDo	
	If lQuery
		dbSelectArea(cAliasHD5)
		dbCloseArea()
		dbSelectArea("HD5")
	EndIf
EndIf
UnLockByName("HHEXP_AD5"+cID,.T.,!Empty(xFilial("HD5")),.T.)

RestArea(aArea)
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ HHIMPHMV ³ Autor ³ Marcelo Vieira        ³ Data ³ 10.08.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Importacao das mensagens do Palm Pilot                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ HHImpMsg                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                             	                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³  /  /  ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function HHIMPHMV()
Local aMensagem  := {} // Contem os dados do arquivo de Mensagens
Local aArquivos  := {}
Local i          := 0
//Local cPathPalm  := GetSrvProfString("HandHeldDir","\HANDHELD\") + "P" + AllTrim(HGU->HGU_DIR) + "\atual\"
Local cVend      := HGU->HGU_CODBAS
Local cPath      := ""
Local cCodMsg    := ""
Local cFiltro    := ""
Local cAliasMsg  := ""
Local cPrefixCpo := ""
Local cFileMsg   := "HMV" + cEmpAnt + "0"
Local nMaxVer := 0

cAliasMsg  := GetMv("MV_TBLMSG",,"")
cPrefixCpo := Subs(cAliasMsg,2,2)+"_"

aAdd(aArquivos, { cFileMsg, "HMV", "HMV_COD"})
	
ConOut("PALMJOB: " + Space(4) + STR0030 + Trim(HHU->HHU_NOMUSR)) // "Importando Mensagens para "
If Empty(cAliasMsg)
	ConOut("PALMJOB: " + Space(4) + STR0031 ) // "Tabela de mensagens nao definida ( verifique o parametro MV_TBLMSG )"
	Return
Endif

dbSelectArea("HMV")
dbSetOrder(1)
cFiltro := "HMV_STATUS = 'N' .Or. HMV_STATUS = 'A' "
Set Filter to &cFiltro
While HMV->(!Eof())
	If HMV->HMV_STATUS = "N"
		cCodMsg := GetSxeNum(cAliasMsg, cPrefixCpo + "CODMSG")
		dbSelectArea(cAliasMsg)
		dbSetOrder(1)
		While (cAliasMsg)->( dbSeek(xFilial(cAliasMsg) + cCodMsg))
			ConfirmSX8()
			cCodMsg := GetSxeNum(cAliasMsg, cPrefixCpo + "CODMSG")
			dbSkip()
		EndDo	  		
	ElseIf 	HMV->HMV_STATUS = "A"
		cCodMsg := MSG->HMV_CODMSG
	Else	  	
		dbSelectArea("HMV")
		dbSetOrder(1)	  	
		dbSkip()
		Loop	
	EndIf	

	dbSelectArea(cAliasMsg)
	dbSetOrder(1)

	If HMV->HMV_STATUS = "N"
		(cAliasMsg)->( RecLock(cAliasMsg,.T.) )
	Else
		If dbSeek(xFilial(cAliasMsg)+cCodMsg + MSG->Z6_ORIMSG + cVend )
			(cAliasMsg)->( RecLock(cAliasMsg,.F.) )	
		EndIf
	EndIf

	(cAliasMsg)->&(cPrefixCpo+"FILIAL")  := xFilial(cAliasMsg)
	(cAliasMsg)->&(cPrefixCpo+"CODMSG")  := cCodMsg
	(cAliasMsg)->&(cPrefixCpo+"CODVEND") := HMV->HMV_VEND
	(cAliasMsg)->&(cPrefixCpo+"DATAMSG") := HMV->HMV_DATA
	(cAliasMsg)->&(cPrefixCpo+"DATAVIG") := HMV->HMV_DTVIG
	(cAliasMsg)->&(cPrefixCpo+"ORIMSG")  := HMV->HMV_ORI
	(cAliasMsg)->&(cPrefixCpo+"MENSAGE") := HMV->HMV_MSG
	(cAliasMsg)->(MsUnlock())

	If (cAliasMsg)->( dbSeek(xFilial(cAliasMsg)+ cCodMsg ) .And. HMV->HMV_STATUS $ "N" )
		ConfirmSX8()
		ConOut("PALMJOB: " + Space(4) + STR0033 + cCodMsg + STR0034 ) // "Mensagem " ### " cadastrada com sucesso."
		HHSaveLog(HGU->HGU_GRUPO, HGU->HGU_SERIE, 1040, .T., STR0033 + cCodMsg) // "Mensagem "
		dbSelectArea("HMV")	
		RecLock("HMV",.F.)
		HMV->HMV_STATUS := "P"
		HMV->HMV_INTR := "E"
		HMV->HMV_VER  	:= nMaxVer := HHGenericUpd(HMV->HMV_VEND,"HMV")
		HMV->(MsUnlock())
		HHAtuCtr(HMV->HMV_VEND, "HMV", nMaxVer)
	Else
		ConOut("PALMJOB: " + Space(4) + STR0032 ) // "ATENCAO: Mensagem nao cadastrada !!!"
		HHSaveLog(HGU->HGU_GRUPO, HGU->HGU_SERIE, 1041, .T.)
	EndIf

	dbSelectArea("HMV")
	HMV->(dbSkip())
EndDo
HMV->(dbCloseArea())
Set Filter to
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³  HHTESTE  ºAutor ³Microsiga           º Data ³  08/16/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao de testes do HHMOBIMP.                               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Main Function HHteste()
RpcSetType ( 3 )
PREPARE ENVIRONMENT EMPRESA "99" FILIAL "01" MODULO "FAT"
POpenGrp()
HHIMPHA1()
Return
