#INCLUDE "PROTHEUS.CH"
#INCLUDE "MATA940.CH"
#INCLUDE "DBSTRUCT.CH"
#DEFINE INCLUIR 1
#DEFINE ALTERAR 2

Static lMtaTIP70 := ExistBlock("MTATIP70")
Static lMtaTIP71 := ExistBlock("MTATIP71")
Static lMT940FIL := ExistBlock("MT940FIL")
Static lA940STMG := Existblock("A940STMG")
Static lMta56S   := ExistBlock("MTA56S")
Static lMta56E   := ExistBlock("MTA56E")
Static lMta8586  := ExistBlock("MTA8586")
Static lMtReg71  := Existblock("MTREG71")
Static lSF3_SINT := ExistBlock("MT940SF3")
Static lA940STMG := Existblock("A940STMG")
Static lA940PRD  := Existblock("A940PRD")
Static lA940DES  := Existblock("A940DES")
Static lA940NCM  := Existblock("A940NCM")

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MATA940   ³ Autor ³Nereu Humberto Jr      ³ Data ³12.12.2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Preparacao do meio-magnetico para o Sintegra - CONV 69/02   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Recebe Array com Pergunte(MTA940) possibilitando o   ³±±
±±³          ³       processamento via Job/RPC                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³01/07/09  ³Marcos Kato    ³Alterado o parametro da Funcao FsEstInv()   ³±±
±±³          ³               ³para que a codificacao seja feita por NCM   ³±±
±±³          ³               ³aglutinando os produtos. Ajuste efetuado no ³±±
±±³          ³               ³6 parametro de .F. para .T.(cH.SBRLXJ)      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MATA940(aParamPerg,lADVPR)

Local aAreaMt940:= GetArea()
Local aAreaSM0	:= SM0->(GetArea())
Local cTitulo	:= STR0001 //"SINTEGRA"
Local cText1	:= STR0002 //"Esta rotina tem como objetivo gerar o arquivo pre-formatado no formato do "
Local cText2	:= STR0003 //"Convenio ICMS 69/02, conforme os parametros solicitados. "
Local cNorma    := ""
Local cDest     := ""
Local cDir      := ""
Local cPerg		:= "MTA940"
Local nOpca		:= 0
Local aSays		:= {}
Local aButtons	:= {}
Local nOpc	  	:= 1
Local nX		:= 0
Local lJob		:= .F.
Local cFilBkp := cFilAnt
Local cLib		:=	""
Local nRetType 	:=	GetRemoteType( @cLib )
Local lSmartERP	:= ("HTML" $ cLib .And. nRetType <> 5)
Local lVerpesssen := Iif(FindFunction("Verpesssen"),Verpesssen(),.T.)

Default aParamPerg := {}
Default lADVPR := .F.

Private lModoComp := FWModeAccess("SB5",3)=="C" // Referente ao X2_MODO
Private cFilA940  :=""
Private _aTotal[100]
Private aReturn := {STR0009, 1,STR0010, 2, 2, 1, "",1} //"Zebrado"###"Administra‡„o"
Private cChvRel := ""

lJob := Iif(Len(aParamPerg) > 0, .T., .F.)

If lVerpesssen
	Pergunte(cPerg,.F.)

	While .T.

		If !lJob
			AADD(aSays,OemToAnsi( cText1 ) )
			AADD(aSays,OemToAnsi( cText2 ) )
			AADD(aButtons, {17,.T.,{|| A940Filtro(nOpc,@cFilA940,"SF3") } } )
			AADD(aButtons, { 1,.T.,{|o| nOpca:= 1,o:oWnd:End()}} )
			AADD(aButtons, { 2,.T.,{|o| o:oWnd:End() }} )
			AADD(aButtons, { 5,.T.,{|| Pergunte(cPerg,.T. ) } } )
			FormBatch( cTitulo, aSays, aButtons )
		Else	
			//Alimenta MV_PARXX para o processamento via Job/Rpc
			For nX := 1 to Len(aParamPerg)
				&(aParamPerg[nX][1]) := aParamPerg[nX][2]
			Next nX
			nOpca := 1
		EndIf
		
		Do Case
			Case nOpca ==1 
				If !lSmartERP 
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Preparacao do inicio de processamento do arquivo pre-formatado          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					cNorma := AllTrim(MV_PAR03)+".INI"
					cDest  := AllTrim(MV_PAR04)
					cDir   := Alltrim(MV_PAR13)

					Processa({||ProcNorma(cNorma,cDest,cDir,Nil,Nil,Nil,Nil,Nil,Nil,lJob )})
				Else
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Seleção de arquivos para ambiente SmartERP                              ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					cFile := cGetFile( '*.ini|*.ini' , 'Selecione o INI', 1, '\system\', .F., ,.T., .T. )
					cDest  := AllTrim(MV_PAR04)
					cDir   := Alltrim(MV_PAR13)

					Processa({||ProcNorma(cFile,cDest,cDir,Nil,Nil,Nil,Nil,Nil,Nil,lJob )})
				
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Reabre os Arquivos do Modulo desprezando os abertos pela Normativa      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbCloseAll()
				If !lJob .OR. lADVPR
					OpenFile(cEmpAnt + cFilAnt)
				EndIf
			Case nOpca==3
				Pergunte(cPerg,.t.)
				Loop
		EndCase
		Exit
	EndDo
EndIf 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura area                                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAreaMt940)
RestArea(aAreaSM0)

If !lJob
	cFilAnt := FWCodFil()
Else
	cFilAnt := cFilBkp
EndIf

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³SINTEGRA  ³ Autor ³ Nereu Humberto Jr     ³ Data ³12.12.2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Processamento dos documentos fiscais - CONV 69/02           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Sintegra( dDtIni, dDtFim, cNrLivro, cEstDest, nListEst, lReg88, cArqMag, cFilA940,;
					lValidaPr, aGRF_CBT, aPr88MG, aArqEst, dDt88Inv, aFilsCalc, lReg53)

Local aAreaSint := GetArea()
Local lListEst  := IIF(nListEst==1,.T.,.F.)
Local lQuery    := .F.
Local lFirst    := .T.
Local lCupom    := .T.
Local nItem     := 0
Local nX        := 0
Local nI        := 0
Local nAliqICM  := 0
Local nPosAliq  := 0
Local nAliqIte  := 0
Local nBRetido  := 0
Local nRedBase  := 0
Local cSitTrib  := ""
Local cNorma    := ""
Local cSeek     := ""
Local cCNPJ     := ""
Local cCNPJOri	:= ""
Local cIE       := ""
Local cTranspCGC:= ""
Local cTranspIns:= ""
Local cTranspOri:= ""
Local cAliasSD1 := "SD1"
Local cAliasSD2 := "SD2"
Local cAliasSF3 := "SF3"
Local cAliasSF6 := "SF6"
Local cAliasSFI := "SFI"
Local cAliasDT6 := "DT6"
Local cTranspEst:= ""
Local cChave    := ""
Local cChaveAux := ""
Local cChaveAux2:= ""
Local cCfoAux   := ""
Local cQuery    := ""
Local cNcm      := ""
Local cProd     := ""
Local cDescPe   := ""
Local cCpVlPisEn:= ""
Local cCpVlPisSa:= ""
Local aArray70  := ""
Local aArray71  := ""
Local nValPis   := 0
Local nPsVlPisEn:= 0
Local nPsVlPisSa:= 0
Local nValCof   := 0
Local aArrayF3  := {}
Local aStruSF3  := {}
Local cSintegra := SuperGetMv("MV_SINTEG")
Local cCfoSint  := ""
Local cD1_Di    := SuperGetMv("MV_DI")
Local cD1_DtDi  := SuperGetMv("MV_DTDI")
Local cDi 		:= ""
Local dDtdi     := ""
Local cRazSoc	:= ""
Local lSef		:= .F.
Local lValPR	:= .F.
Local lSintMG	:= .F.
Local lSintMS	:= .F.
Local lSintMN	:= .F.
Local nR50Obs	:= 0
Local lConv76	:= .F. //Aplica Convenio no.76
Local lReg61I	:= .F. //Gera Registro 61I (Convenio 76)
Local lNfProd	:= .F. //Gera NF Produtor - Mod. 4 (Convenio 76)
Local cCfopPR	:= SuperGetMv("MV_CFOPPR")
Local lImpSt	:= SuperGetMv("MV_IMPST")
Local lTareDf	:= .F.
Local l52Tare	:= .T.
Local lCompTare	:= .T.
Local aTrbs		:= {}
Local lCompIcms	:= .F. //Complemento de ICMS
Local lGnre		:= SuperGetMv("MV_GNRE")
Local dDataGnre	:= CTOD("//")
Local nY		:= 0
Local lObs		:= .F.
Local cObs		:= ""
Local aProdepe	:= {}
//Local lIntegra  := Iif(SuperGetMv("MV_EASY") == "S",.T.,.F.)
Local lSigaEEC	:= SuperGetMv("MV_EECFAT")
Local lTrading	:= Iif(SuperGetMv("MV_TRADING") == "S",.T.,.F.)
Local lServico	:= .F. //Verifica se o item eh um Servico
Local cNumFab	:= Space (20)
//Local cCompExp	:= SuperGetMv("MV_COMPEXP")
//Local cDCmpExp	:= SuperGetMv("MV_DCMPEXP")
Local cInscr	:= ""
Local cDescObs	:= Upper(Alltrim(SuperGetMv("MV_DESCOBS"))) //Desconsidera Observacoes - SEF
Local cFuncep	:= ""
Local lGimPB	:= .F.
Local lGera75S  := .T.
Local nPos 		:= 0
Local nBsICMS	:= 0
Local cModNF	:= ""
Local lAglR54	:= SuperGetMv ("MV_AGLR54")
Local lAglutinou:= .F.
Local cR51CFOP	:= SuperGetMv("MV_R51CFOP")
Local cContrTare:= "2"
Local cFilDe	:= MV_PAR25
Local cFilAte	:= MV_PAR26
Local lConsUF	:= MV_PAR27==1
Local cMV_ESTADO:= SuperGetMv ("MV_ESTADO")
Local aAreaSm0	:= SM0->(GetArea ())
Local aTMS		:= {}
Local nTMS		:= 0
Local nSefObs   := 0
Local lSimpNac  := Iif(SuperGetMv( "MV_SIMPLES" , .F. , "S" ,  ) =="S",.T.,.F.)

Local lMV_CAT95	:= !"XXX"$GetNewPar ("MV_CAT95", "XXX")
Local nMV_CAT95	:=  0
Local lGRF_CBT	:= .F.
Local lMVTARECAN:=	SuperGetMv("MV_TARECAN")

Local lGeraSwn	:= SuperGetMv("MV_GERASWN",.F.,.T.)
Local lGeraSd1	:= SuperGetMv("MV_GERASD1",.F.,.T.)
Local lR54IPI	:= GetNewPar("MV_R54IPI",.F.)

Local cCliFor	:= ""
Local cLjCliFor	:= ""
Local lMVSINTIPC:= GetNewPar("MV_SINTIPC",.F.)
Local lRgEspSt	:= GetNewPar("MV_RGESPST",.F.)
Local cCorte88 	:= GetNewPar("MV_88CORTE","")
Local nCorte88 	:= Iif(!Empty(cCorte88),SB1->(FieldPos(cCorte88)),0)
Local lMonta88	:= .T.
Local lAchouCBT	:= .F.
Local lAchouCBT1:= .F.
Local lNContr	:= .F.
Local lMargST	:= .F.
Local cN88Int	:= ""
Local c88Perd	:= ""
Local nTamFTIt	:= TamSX3("FT_ITEM")[01]
Local dDtInv 	:= IIf(Empty(DTOS(MV_PAR15)),SuperGetMv("MV_ULMES"),MV_PAR15)
Local aNFsProc 	:= {}
Local lFsEst	:= .T.
Local nPosFil	:= 0
Local cCfoFret  := GetNewPar("MV_CFOFRET","")
Local cCfGimpb  := GetNewPar("MV_CFGIMPB","")
Local nBsIcmMG 	:= 0
Local nBSSTMG 	:= 0
Local nAlIcmMG 	:= 0
Local nVlIcmMG	:= 0
Local nVlSTMG	:= 0
Local nPos1		:= 0
Local nFrete	:= 0
Local nDespesa	:= 0
Local nSeguro	:= 0
Local nComp		:= 0
Local cCdMunGIM := " "
Local aDadMun   := {}
Local aRetMG	:= {}
Local aSaveASA1 := {}
Local aSaveADT6 := {}
Local cCodGIM	:= SuperGetMv("MV_CODGIM",.F.," ",)
Local nAltCodGIM:= 0
Local nMesIni   := 0
Local nAnoIni 	:= 0
Local dDataDe   := ctod("//")
Local dDataAte 	:= ctod("//")
Local lGimDez09 := .F.
Local aDadDez   := {}
Local aDadAux   := {}
Local cRet		:= ""
Local aStruDT6  := {}
Local cB1_Farm 	:= GetNewPar("MV_B1FARM", "")
Local cA1_Hosp	:= GetNewPar("MV_A1HOSP", "")
Local lHospital := .F.
Local lNContrib := .F.
Local cMv54Sef	:= GetNewPar("MV_SEF54", "") // CFOPs que irão gerar reg 54 para a SEF 
Local cIncFis	:= GetNewPar("MV_INCFIS","XXX")
Local nIncFis	:= SF4->(FieldPos(AllTrim(cIncFis)))
Local nGIMUN1	:= SA1->(FieldPos(AllTrim(GetNewPar("MV_GIMUN","XXX"))))
Local nGIMUN2	:= SA2->(FieldPos(AllTrim(GetNewPar("MV_GIMUN2","XXX"))))
Local lPMen15	:= .F.
Local lPMai14	:= .F.
Local cMsg		:= ""
Local lGIMPB27	:= .F.				// Indica se já gerou
Local lGIMPB28	:= .F.				// Indica se já gerou
Local lGera2728 := MV_PAR45==1		// Indica se deve gerar
Local lGera18 	:= MV_PAR47==1		// Indica se deve gerar 
Local lGera88DV	:= MV_PAR50==1		// Indica se deve gerar 
Local lMVALIQR50:= GetNewPar("MV_ALIQR50",.F.)
Local nAliqR50  := 0
Local cTpFrete  := "0"
Local cIE70     := ""
Local lGerouR54 := .F.
Local aSimples  := {}
Local aReg8818  := {0,0,0,0}
Local lGIMPB18	:= .F.
Local cNumGnre	:= Space (TamSx3("F6_NUMERO")[1])
Local lGerouR61R:= .F.
Local cProdAnt	:= ""
Local lB5Funcep	:= SB5->(FieldPos("B5_FUNCEP")) > 0
Local cFilIni	:= ""
Local lFirstRel	:= .F.
Local lSintCat95:= .F.
Local lAltModNF := .T.
Local lOpIntEst := IIf(cEstDest $ "MG/GO" .And. MV_PAR07 == 1 .And. MV_PAR21 == 2,.T.,.F.)
Local lGeraRST  := .T.
Local aNfDevComp:= {}
Local nPosNfDevC:= 0
Local lBusca    := .F.
Local lIntTMS   := .F.
Local lChkEC87	:= .F.
Local cModNotAux:= ''
Local nAliqExtF7:= 0 //Aliquota de ICMS externa - Exceção Fiscal

Default lReg53  	:= .T.
Default lReg88  	:= .F.
Default cArqMag		:= ""
Default cFilA940	:= ""
Default lValidaPr	:= .F.
Default aGRF_CBT	:= {}
Default aPr88MG		:= {}
Default aArqEst		:= {}
Default dDt88Inv	:= cTod("//")
Default aFilsCalc 	:= MatFilCalc( MV_PAR42 == 1,,,MV_PAR42 == 1 .And. MV_PAR51 == 1,,Iif(MV_PAR51 == 1,2,0) )

Private cCfoNEcf := IIF(GETMV("MV_ESTADO")== "MG", SuperGetmv("MV_CFONECF",.F.," ",)," ")
Private aRetCfp  := {}
Private l88STMG	 := MV_PAR37 == 1
Private lGRegSt	 := Iif(Type("MV_PAR54")=="N" , Iif( MV_PAR54 == 1, .T.,.F.), .F.) 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³A tabela SFT sera utilizada para verificar se o item faz parte do ³
//³Regime Especial de Substituicao Tributaria, devendo gerar os      ³
//³registros 88 do Sintegra - MG mesmo que nao haja o calculo de ST. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SFT->(dbSetOrder(1))

cNorma := AllTrim(MV_PAR03)+".INI"

dbSelectArea("SB5")
lMV_CAT95 := Iif(lMV_CAT95, !Empty(GetNewPar("MV_CAT95", "XXX")), lMV_CAT95)
nMV_CAT95 := Iif(lMV_CAT95, SB5->(FieldPos(SuperGetMv("MV_CAT95"))), 0)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Selecao do arquivo SFI por demanda                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SFI")
dbGoTop()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se foi passado o parametro cArqMag (Arquivo Magnetico)         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(cArqMag)
	Do Case
		Case Upper(Alltrim(cArqMag)) == "SEF"		//SEF de Pernambuco
			Alert (" SEF Obsoleto não será gerado o arquivo")
			RETURN .F. // FONTE SEF OBSOLETO  MOVIDO PARA A PASTA OBSOLETA dia 10/09/2018
			//aRetCfp		:= RetCfp()
			//_aTotal[02]	:= aRetCfp[1][1]
		Case Upper(Alltrim(cArqMag)) == "SINTEGMG" .Or. Upper(Alltrim(cArqMag)) == "SINTMG" //Sintegra de Minas Gerais - Registro 88A
			lSintMG := .T.
			lConv76 := IIf(Year(MV_PAR01)>2003.And.Year(MV_PAR02)>2003,.T.,.F.)
			lReg61I := IIf(MV_PAR17==2.And.lConv76,.T.,.F.) //Gera Registro 61I (Convenio 76)
			lNfProd := IIf(MV_PAR18==2.And.lConv76,.T.,.F.) //Gera NF Produtor - Mod. 4 (Convenio 76)
			lChkEC87:= IIf(Year(MV_PAR01)>=2016,.T.,.F.)	//Gera Registro 88 nas condições Contribuinte e Não Contribuinte para período apartir de 01/01/2016
		Case Upper(Alltrim(cArqMag)) == "CONV76" //Novo Convenio 76/03
			lConv76	:= IIf(Year(MV_PAR01)>2003.And.Year(MV_PAR02)>2003,.T.,.F.)
			lReg61I := IIf(MV_PAR17==2.And.lConv76,.T.,.F.) //Gera Registro 61I (Convenio 76)
			lNfProd := IIf(MV_PAR18==2.And.lConv76,.T.,.F.) //Gera NF Produtor - Mod. 4 (Convenio 76)
			lGRF_CBT:= Iif(Len(aGRF_CBT) <> 0,.T.,.F.) // Combustíveis
			lValPR  := IIf(AllTrim(MV_PAR03)=="VALPR05",.T.,.F.) //VALPR05 do Parana
			lSintCat95 := (AllTrim(UPPER(MV_PAR03))=="CAT95") //CAT95 Combustiveis
		Case Upper(Alltrim(cArqMag)) == "TAREDF" //CAT 384/01 - TARE - DF
			lTareDf := .T.
		Case Upper(Alltrim(cArqMag)) == "GIMPB" // GIM Paraiba
			lConv76 := IIf(Year(MV_PAR01)>2003.And.Year(MV_PAR02)>2003,.T.,.F.)
			lReg61I := IIf(MV_PAR17==2.And.lConv76,.T.,.F.) // 17 - Gera Registro 61R ?
			lGimPB  := .T.
		Case Upper(Alltrim(cArqMag)) == "SINTEGMS" // Sintegra de Mato Grosso do Sul
			lSintMS := .T.
		Case Upper(Alltrim(cArqMag)) == "SINTEGMN" // Sintegra de Manaus
			lSintMN := .T.
	EndCase
Endif

If Empty(cSintegra)
	cCfoSint := "173/273/174/274/191/291/391/192/292/197/297/397/198/298/591/691/592/692/595/695"
	cCfoSint += "1406/2406/1407/2407/1551/1556/2551/2556/3551/3556/1552/1557/2552/2557/5551/6551/7551"
	cCfoSint += "5552/5557/6552/6557/5553/5556/6553/6556/7553/7556"
Else
	cCfoSint :=cSintegra
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Parametros especificos para o Sintegra de Minas Gerais³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lSintMG
	DbSelectArea("SX6")
	SX6->(DbSetOrder(1))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica todas as ocorrencias do parametro MV_N88INT - Sintegra MG ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SX6->(DbSeek(xFilial("SX6")+"MV_N88INT"))
	Do While !SX6->(Eof()) .And. xFilial("SX6") == SX6->X6_FIL .And. "MV_N88INT" $ SX6->X6_VAR
		cN88Int +=	AllTrim(SX6->X6_CONTEUD)
		SX6->(dbSkip())
	EndDo
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica todas as ocorrencias do parametro MV_88PERD - Sintegra MG ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SX6->(DbSeek(xFilial("SX6")+"MV_88PERD"))
	Do While !SX6->(Eof()) .And. xFilial("SX6") == SX6->X6_FIL .And. "MV_88PERD" $ SX6->X6_VAR
		c88Perd +=	AllTrim(SX6->X6_CONTEUD)
		SX6->(dbSkip())
	EndDo
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Validacao para que a função CriaTrbs nao crie a tabela RST pois para o SINTEGMG   ³
//³ela sera criada na funcao FsEstInv com outra estrutura e se criar aqui ocorrerá   ³
//³error.log na FsEstInv. Validacao implementada p/ MG para nao afetar a geracao dos ³
//³outros arquivos que utilizam esta rotina e podem, por ventura, utilizar a tabela. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lSintMG .And. l88STMG
	lGeraRST := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Funcao utilizada para montar os trbs e retornar array com os arquivos abertos.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aTrbs := CriaTrbs(lReg88, lGeraRST)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica como as filiais serao processadas:³
//³- apenas a filial                          ³
//³- filial de/ate                            ³
//³- filiais selecionadas                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If MV_PAR42 == 2 // Se não seleciona filiais
	#IFDEF TOP
		If TcSrvType()<>"AS/400"
			cFilDe  := cFilAte := cFilAnt
		Else
	#ENDIF
		If (Empty (MV_PAR25) .And. Empty (MV_PAR26))
			cFilDe  := cFilAte := cFilAnt
		Else
			cFilDe  := MV_PAR25
			cFilAte := MV_PAR26
		EndIf
	#IFDEF TOP
		EndIf
	#ENDIF
Else
	If (nPosFil := AScan(aFilsCalc, {|x| x[1] == .T.})) > 0
		cFilDe  := aFilsCalc[nPosFil][02]
		cFilAte := aFilsCalc[Len(aFilsCalc)][02]
	Else
		Help('',1,'REGNOIS')
		lAbtMT950 := .T.
		Return
	Endif
EndIf

cFilIni := cFilAnt
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Processo as Filiais³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea ("SM0")
SM0->(DbSeek (cEmpAnt+cFilDe,.T.))

Do While !SM0->(Eof()) .And. (FWGrpCompany()==cEmpAnt) //.And. (FWCodFil()<=cFilAte)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se foram selecionadas as filiais, identifica se a filial posicionada esta selecionada no array³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aNfDevComp := {}
	If MV_PAR42 == 1
		nPosFil := aScan(aFilsCalc,{|x| Alltrim(x[2]) == Alltrim(FWCodFil())})
		If nPosFil == 0 .or. !(aFilsCalc[nPosFil,1])
			SM0->(dbSkip())
			Loop
		Endif
	Endif

	cFilAnt := FWCodFil()

	If TcSrvType()<>"AS/400"
		If MV_PAR42 == 2 .and. cFilIni <> cFilAnt
			SM0->(dbSkip())
			Loop
		EndIf
	ElseIf cFilAnt > cFilAte
		SM0->(dbSkip())
		Loop
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atendimento ao Art. 121 do ANEXO 5 do RICMS/SC. O mesmo determina que todo prestador de                    ³
	//³  serviço de transporte deve apresentar as obrigações acessórias de forma consolidada pelo estabelecimento ³
	//³  matriz, e esta consolidação deverá abranger somente as empresas que estiverem domiciliadas no mesmo      ³
	//³  estado do estabelecimento consolidador.                                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lConsUF .And. (SM0->M0_ESTENT<>cMV_ESTADO)
		SM0->(DbSkip ())
		Loop
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Excepcionalmente na GIM Referencia DEZ/2009 o valor do   ³
	//³campo 4 do novo registro 8829 será a soma do ano de 2009 ³
	//³para cada municipio                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lGimPB
		nMesIni := Month(dDtIni)
		nAnoIni := Year(dDtIni)
		If (StrZero(nMesIni,2)+StrZero(nAnoIni,4)== "122009")
			dDataDe  := ctod("01/01/"+StrZero(nAnoIni,4))
			dDataAte := lastdate(ctod("01/"+StrZero(nMesIni,2)+"/"+StrZero(nAnoIni,4)))
			aDadAux	 := a9408829(dDataDe, dDataAte, cNrLivro)
			For nY:=1 to len(aDadAux)
				nPos1 := Ascan(aDadDez,{|x|x[01]==aDadAux[nY][1]})
				If nPos1 > 0
					aDadDez[nPos1,02] += aDadAux[nY][2]
				Else
					AADD(aDadDez,{aDadAux[nY][1],aDadAux[nY][2]})
				EndIf
			Next nY
			lGimDez09 := .T.
		EndIf
	EndIf

	lIntTMS := IntTms()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Processamento dos documentos Fiscais                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SF3")
	dbSetOrder(1)
	ProcRegua(LastRec())
	#IFDEF TOP
		If TcSrvType()<>"AS/400"
			lQuery := .T.
			cAliasSF3 := "SF3_SINTEGRA"
			aStruSF3  := SF3->(dbStruct())
			If lIntTMS//Alterado SELECT ate solucao da FNC 000000215132010(melhoria) ser executada
				aStruDT6  := DT6->(dbStruct())
				cQuery := "SELECT SF3.F3_FILIAL,SF3.F3_NFISCAL,SF3.F3_SERIE,SF3.F3_ENTRADA,SF3.F3_CFO,SF3.F3_NRLIVRO,SF3.F3_ESTADO,"
				cQuery += "SF3.F3_ICMSRET,SF3.F3_CREDST,SF3.F3_TIPO,SF3.F3_DTCANC,SF3.F3_CLIEFOR,SF3.F3_CLIENT,SF3.F3_ESPECIE,"
				cQuery += "SF3.F3_LOJA,SF3.F3_ALIQICM,SF3.F3_PDV,SF3.F3_ISENICM,SF3.F3_CODISS,SF3.F3_OUTRICM,SF3.F3_VALICM,"
				cQuery += "SF3.F3_VALCONT,SF3.F3_EMISSAO,SF3.F3_BASEICM,SF3.F3_OBSERV,SF3.F3_FORMUL,SF3.F3_DESPESA,SF3.F3_FORMULA,"
				cQuery += "SF3.F3_VALIPI,SF3.F3_ISENIPI,SF3.F3_OUTRIPI,SF3.F3_BASEIPI,SF3.F3_BASERET,SF3.F3_NFEMP,"
				cQuery += "SF3.F3_ANTICMS,SF3.F3_ICMSCOM,SF3.F3_ICMSDIF,SF3.F3_OBSSOL,SF3.F3_OBSICM,SF3.F3_CHVNFE,"
				cQuery += "SF3.F3_IPIOBS,SF3.F3_LOJENT,SF3.F3_CODRSEF,SF3.F3_VALANTI,DT6.DT6_CLIDEV,DT6.DT6_LOJDEV "

				If SerieNfId("SF3",3,"F3_SERIE") == "F3_SDOC"
					cQuery += ", SF3.F3_SDOC"
				EndIf

				If lSF3_SINT
					cRet := ExecBlock("MT940SF3",.F.,.F.,)
					If ValType(cRet) == "C"//-- Ponto de entrada para acrescentar mais campos a query
						cQuery += cRet     //-- ao inves de usar SELECT * deixando o tempo de resposta 
					EndIf				   //-- do Banco de Dados lento usando Left Join com DT6 (TMS)
				EndIf					   //-- ",SF3.F3_CONTA,DT6.DT6_SERIE " Exemplo de retorno de 
			Else						   //-- campos pelo P.E. para Query
			cQuery := "SELECT * "
			Endif
			cQuery += "FROM "+RetSqlName("SF3")+" SF3 "	
			If lIntTMS
				cQuery += "LEFT JOIN "+RetSqlName("DT6")+" DT6 ON "
				cQuery += "SF3.F3_FILIAL = DT6.DT6_FILDOC AND "
				cQuery += "SF3.F3_NFISCAL = DT6.DT6_DOC AND "
				cQuery += "SF3.F3_SERIE	= DT6.DT6_SERIE AND "
				cQuery += "DT6.D_E_L_E_T_ = ' ' "
			Endif
			cQuery += "WHERE SF3.F3_FILIAL='"+xFilial("SF3")+"' AND "
			cQuery += "SF3.F3_ENTRADA BETWEEN '"+Dtos(dDtIni)+"' AND '"+Dtos(dDtFim)+"' AND "
			cQuery += "SF3.F3_CFO NOT LIKE '000%' AND SF3.F3_CFO NOT LIKE '999%' AND "
			If cNrLivro <> "*"
				cQuery += "SF3.F3_NRLIVRO ='"+ cNrLivro +"' AND "
			EndIf
			If !Empty(Alltrim(cEstDest)) .And. Alltrim(cEstDest) <> "*"
				If lListEst
					cQuery += "SF3.F3_ESTADO ='"+ Alltrim(cEstDest)+"' AND "
				Else
					cQuery += "SF3.F3_ESTADO <>'"+ Alltrim(cEstDest)+"' AND "
				EndIf
			EndIf
			If (MV_PAR21==1)
				If MV_PAR11 == 1 	//Entrada
					cQuery	+=	"(SF3.F3_CFO LIKE '2%') AND SF3.F3_ICMSRET>0 AND "
				Elseif MV_PAR11 == 2 				//Saida
					cQuery	+=	"(SF3.F3_CFO LIKE '6%') AND SF3.F3_ICMSRET>0 AND "
				Else
					cQuery	+=	"(SF3.F3_CFO LIKE '2%' OR SF3.F3_CFO LIKE '6%') AND SF3.F3_ICMSRET>0 AND "
				Endif
				cQuery	+=	"SF3.F3_CREDST <> '4' AND "
			ElseIf (MV_PAR21==2)
				If MV_PAR11 == 1 	//Entrada
					cQuery	+=	"(SF3.F3_CFO LIKE '2%') AND "
				Elseif MV_PAR11 == 2 				//Saida
					cQuery	+=	"(SF3.F3_CFO LIKE '6%') AND "
				Else
					cQuery	+=	"(SF3.F3_CFO LIKE '2%' OR SF3.F3_CFO LIKE '6%') AND "
				Endif
			ElseIf (MV_PAR21==3)
				If MV_PAR11 == 1 	//Entrada
					cQuery	+=	"(SF3.F3_CFO LIKE '1%' OR SF3.F3_CFO LIKE '2%' OR SF3.F3_CFO LIKE '3%') AND "
				Elseif MV_PAR11 == 2 				//Saida
					cQuery	+=	"(SF3.F3_CFO LIKE '5%' OR SF3.F3_CFO LIKE '6%' OR SF3.F3_CFO LIKE '7%') AND "
				Endif
			EndIf
			If Upper(Alltrim(cArqMag)) == "SINTEGMG" 
				//De acordo com a legislacao
				//http://www.fazenda.mg.gov.br/empresas/ped/duvidas_frequentes/ 
				//Resposta 28
				cQuery += "(SF3.F3_TIPO NOT IN('S') OR (SF3.F3_TIPO = 'S' AND SF3.F3_CFO = '1933 ')) AND "				
/*			ElseIf Alltrim(MV_PAR03) == "SINTEG05"
				cQuery += "(SF3.F3_TIPO NOT IN('S') OR (SF3.F3_TIPO = 'S' AND (SF3.F3_CFO = '1933 ' OR SF3.F3_CFO = '2933 '))) AND " */		
			Else 
				cQuery += "SF3.F3_TIPO NOT IN('S') AND "
			EndIf

			If MV_PAR05 == 4
				cQuery += "SF3.F3_TIPO = 'D' AND "
				cQuery += "SF3.F3_CFO < '5' AND "
			Endif
			If (lTareDf)
				cQuery += " (((SF3.F3_CFO LIKE '1%' OR SF3.F3_CFO LIKE '2%' OR SF3.F3_CFO LIKE '3%') AND SF3.F3_TIPO = 'D') OR (SF3.F3_CFO LIKE '5%' OR SF3.F3_CFO LIKE '6%' OR SF3.F3_CFO LIKE '7%')) AND "
				If lMVTARECAN
					cQuery += " SF3.F3_DTCANC<>'' AND "
				Else
					cQuery += " SF3.F3_DTCANC='' AND "
				EndIf
			EndIf
			//Implementacao NFE-BA
			If !Empty(MV_PAR23) .And. !Empty(MV_PAR24)
				cQuery += "(SF3.F3_NFISCAL>='"+MV_PAR23+"' AND SF3.F3_NFISCAL<='"+MV_PAR24+"') AND "
			Endif

			//Implementação Sintegra - MS (CFOP´S referente a Transporte de Carga sem obrigatoriedade de Nota Fiscal)
			If lSintMS
				cQuery += "(SF3.F3_CFO<>'5359' AND SF3.F3_CFO<>'6359') AND "
			Endif

			If (cMV_ESTADO)$"PB"
				cQuery += "((SF3.F3_CFO<>'2949' OR SF3.F3_CFO<>'1949' OR SF3.F3_CFO<>'5949' OR SF3.F3_CFO<>'6949') AND SF3.F3_ESPECIE<>'NFDS') AND "
			EndIf

			cQuery += "SF3.D_E_L_E_T_ = ' ' "
			cQuery += "ORDER BY "+SqlOrder(SF3->(IndexKey()))

			cQuery := ChangeQuery(cQuery)
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSF3)

			For nX := 1 To len(aStruSF3)
				If aStruSF3[nX][2] <> "C"
					TcSetField(cAliasSF3,aStruSF3[nX][1],aStruSF3[nX][2],aStruSF3[nX][3],aStruSF3[nX][4])
				EndIf
			Next nX
			For nX := 1 To len(aStruDT6)
				If aStruDT6[nX][2] <> "C"
					TcSetField(cAliasSF3,aStruDT6[nX][1],aStruDT6[nX][2],aStruDT6[nX][3],aStruDT6[nX][4])
				EndIf
			Next nX
			dbSelectArea(cAliasSF3)	
		Else
	#ENDIF
			cIndex    := CriaTrab(NIL,.F.)
			cCondicao := 'F3_FILIAL=="'+xFilial("SF3")+'".And.'
			cCondicao += 'DTOS(F3_ENTRADA)>="'+DTOS(dDtIni)+'".And.DTOS(F3_ENTRADA)<="'+DTOS(dDtFim)+'" '
			cCondicao += '.And. !Substr(F3_CFO,1,3)$"999/000" '
			If cNrLivro <> "*"
				cCondicao += '.And.F3_NRLIVRO ="'+ cNrLivro +'" '
			EndIf
			If !Empty(cEstDest)
				If lListEst
					cCondicao += '.And. F3_ESTADO ="'+ cEstDest+'" '
				Else
					cCondicao += '.And. F3_ESTADO <> "'+ cEstDest+'" '
				EndIf
			EndIf
			If (MV_PAR21==1)
				If MV_PAR11 == 1 	//Entrada
					cCondicao	+=	'.And. SubStr(F3_CFO,1,1)$"2" .And. F3_ICMSRET>0 '
				Elseif MV_PAR11 == 2 				//Saida
					cCondicao	+=	'.And. SubStr(F3_CFO,1,1)$"6" .And. F3_ICMSRET>0 '
				Else
					cCondicao	+=	'.And. SubStr(F3_CFO,1,1)$"6,2" .And. F3_ICMSRET>0 '
				Endif
				cCondicao	+=	'.And. F3_CREDST <> "4" '
			ElseIf (MV_PAR21==2)
				If MV_PAR11 == 1 	//Entrada
					cCondicao	+=	'.And. SubStr(F3_CFO,1,1)$"2" '
				Elseif MV_PAR11 == 2 				//Saida
					cCondicao	+=	'.And. SubStr(F3_CFO,1,1)$"6" '
				Else
					cCondicao	+=	'.And. SubStr(F3_CFO,1,1)$"6,2" '
				Endif
			ElseIf (MV_PAR21==3)
				If MV_PAR11 == 1 	//Entrada
					cCondicao	+=	'.And. SubStr(F3_CFO,1,1)$"1,2,3"'
				Elseif MV_PAR11 == 2 				//Saida
					cCondicao	+=	'.And. SubStr(F3_CFO,1,1)$"5,6,7"'
				Endif
			EndIf
			cCondicao += '.And. F3_TIPO <> "S" '
			If MV_PAR05 == 4
				cCondicao += '.And. F3_TIPO = "D" '
				cCondicao += '.And. Substr(F3_CFO,1,1) < "5" '
			Endif
			If (lTareDf)
				cCondicao += '.And. ((SubStr (F3_CFO,1,1)$"1,2,3" .And. F3_TIPO = "D") .Or. SubStr (F3_CFO,1,1)$"5,6,7") '
				If lMVTARECAN
					cCondicao += ' .And. !Empty( F3_DTCANC ) '
				Else
					cCondicao += ' .And. Empty( F3_DTCANC ) '
				EndIf
			EndIf

			//Implementacao NFE-BA
			If !Empty(MV_PAR23) .And. !Empty(MV_PAR24)
				cCondicao += '.And. (F3_NFISCAL>="'+MV_PAR23+'" .And. F3_NFISCAL<="'+MV_PAR24+'")'
			Endif

			//Implementação Sintegra - MS (CFOP´S referente a Transporte de Carga sem obrigatoriedade de Nota Fiscal)
			If lSintMS
				cCondicao += ' .And. !Substr(F3_CFO,1,4)$"5359/6359" '
			Endif

			IndRegua(cAliasSF3,cIndex,SF3->(IndexKey()),,cCondicao)
			nIndex := RetIndex("SF3")
			#IFNDEF TOP
				dbSetIndex(cIndex+OrdBagExt())
			#ENDIF
			dbSelectArea("SF3")
			dbSetOrder(nIndex+1)

			dbSelectArea(cAliasSF3)
			ProcRegua(LastRec())
			dbGoTop()
	#IFDEF TOP
		Endif
	#ENDIF

	If Empty(cFilA940)
		bFiltro := { || .T. }
	Else
		If Substr(Alltrim(cFilA940),1,4) <> "{ ||"
			cFilA940 := "{ || " + cFilA940 + " }"
			bFiltro := &(cFilA940)
		Endif
	Endif
	While (cAliasSF3)->(!Eof())

		dbSelectArea(cAliasSF3)
		IncProc(STR0004) //"Preparando Base de Dados 1/2"

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica filtro ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Eval(bFiltro)
			(cAliasSF3)->(dbSkip())
			Loop
		EndIf
		//
		l52Tare := .F.
		If (lTareDf) .And. (Val(Left((cAliasSF3)->F3_CFO, 1))<5 .And. "D"$AllTrim((cAliasSF3)->F3_TIPO))
			l52Tare := .T.
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica a transportadora ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty(MV_PAR14) .And. SubStr((cAliasSF3)->F3_CFO,1,1) >= "5"
			If SF2->( MsSeek(F3Filial("SF2",cAliasSF3)+(cAliasSF3)->F3_NFISCAL+(cAliasSF3)->F3_SERIE+(cAliasSF3)->F3_CLIEFOR+(cAliasSF3)->F3_LOJA))
				If SF2->F2_TRANSP <> MV_PAR14
					(cAliasSF3)->(dbSkip())
					Loop
				Endif
			Endif
		Endif

		If lMT940FIL
			If !Execblock("MT940FIL" ,.F.,.F.,{(cAliasSF3)->F3_FILIAL, (cAliasSF3)->F3_CLIEFOR, (cAliasSF3)->F3_LOJA, (cAliasSF3)->F3_NFISCAL, (cAliasSF3)->F3_SERIE } )
				(cAliasSF3)->(dbSkip())
				Loop
			Endif
		Endif

		If lIntTMS .And. ("CTR"$AllTrim((cAliasSF3)->F3_ESPECIE) .Or. "CTE"$AllTrim((cAliasSF3)->F3_ESPECIE) .Or. "NFST"$AllTrim((cAliasSF3)->F3_ESPECIE))
			//--Quando for TMS temos que enviar o F3_CLIEFOR+F3_LOJFOR, que sao os tomadores do servico (Pagador do Frete),
			//--nao utilizar o campo criado para gravar o destinatario F3_CLIENT+F3_LOJENT
			cCliFor		:= (cAliasSF3)->F3_CLIEFOR
			cLjCliFor	:= (cAliasSF3)->F3_LOJA
			If lGimPB
				aSaveASA1 := GetArea("SA1")
				aSaveADT6 := GetArea("DT6")
				DbSelectArea("DT6")
				DbSetOrder(1)
				If (DbSeek(xFilial("DT6")+(cAliasSF3)->F3_FILIAL+(cAliasSF3)->F3_NFISCAL+(cAliasSF3)->F3_SERIE))
					DbSelectArea("SA1")
					DbSetOrder(1)
					If DbSeek(xFilial("SA1")+DT6->DT6_CLIDEV+DT6->DT6_LOJDEV) .And. SA1->A1_EST == "PB"
						//-- CNPJ do tomador do serviço Registro 71
						cCliFor		:= DT6->DT6_CLIDEV
						cLjCliFor	:= DT6->DT6_LOJDEV
						nAltCodGIM	:= 0
					Else
						If Empty(cCodGIM)
							Final(STR0068)//"Por favor informar o conteudo do parametro MV_CODGIM"
						EndIf
						nAltCodGIM := 1
					EndIf
				EndIf
				RestArea(aSaveASA1)
				RestArea(aSaveADT6)
			EndIf
		Else
			IF ("CTR"$AllTrim((cAliasSF3)->F3_ESPECIE) .Or. "CTE"$AllTrim((cAliasSF3)->F3_ESPECIE) .Or. "NFST"$AllTrim((cAliasSF3)->F3_ESPECIE))
				cCliFor		:= (cAliasSF3)->F3_CLIEFOR
				cLjCliFor	:= (cAliasSF3)->F3_LOJA
			Else
				cCliFor		:= Iif(!Empty((cAliasSF3)->F3_CLIENT), (cAliasSF3)->F3_CLIENT, (cAliasSF3)->F3_CLIEFOR)
				cLjCliFor	:= Iif(!Empty((cAliasSF3)->F3_LOJENT), (cAliasSF3)->F3_LOJENT, (cAliasSF3)->F3_LOJA)
			Endif
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o cliente/fornecedor                                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (SubStr((cAliasSF3)->F3_CFO,1,1)>="5" .And. (cAliasSF3)->F3_TIPO$"BD") .Or.;
		   (SubStr((cAliasSF3)->F3_CFO,1,1)<"5" .And. !(cAliasSF3)->F3_TIPO$"BD")

			dbSelectArea("SA2")
			dbSetOrder(1)
			MsSeek(F3Filial("SA2",cAliasSF3)+cCliFor+cLjCliFor)
			cRazSoc		:=	SA2->A2_NOME
			cCNPJ 		:=	A940CNPJ(SA2->A2_CGC,SA2->A2_TIPO, lTareDf)
			cCNPJOri	:=	SA2->A2_CGC
			cIE   := A940IE(SA2->A2_INSCR)
			cTranspCGC	:=	AFISFILL (Num2Chr (Val (SA2->A2_CGC), 14, 0), 14)
			cTranspIns	:=	aRETDIG(SA2->A2_INSCR,.t.,(cAliasSF3)->F3_ESTADO)
			cTranspEst	:=	SA2->A2_EST
			cTranspOri	:=	SA2->A2_CGC
			cContrTare	:=	SA2->A2_CTARE
			// Nao contribuinte do ICMS
			lNContr := IIf(Empty(SM0->M0_INSC).OR."ISENT"$SM0->M0_INSC,.T.,.F.)
			If nGIMUN2 > 0 .And. nAltCodGIM == 0
				cCdMunGIM := SA2->(FieldGet(nGIMUN2))
			Else
				cCdMunGIM := cCodGIM
			EndIf
		Else
			If lIntTMS .And. ("CTR"$AllTrim((cAliasSF3)->F3_ESPECIE) .Or. "NFST"$AllTrim((cAliasSF3)->F3_ESPECIE);
			   .Or. "CTE"$AllTrim((cAliasSF3)->F3_ESPECIE)) .And. Upper(Substr(Alltrim(MV_PAR03),1,6))$"SINTEG/SINTMG05/VALPR05"
				DbSelectArea("SA1")
				DbSetOrder(1)
				MsSeek(F3Filial("SA1",cAliasSF3)+(cAliasSF3)->DT6_CLIDEV+(cAliasSF3)->DT6_LOJDEV)
			Else
				dbSelectArea("SA1")
				dbSetOrder(1)
				MsSeek(F3Filial("SA1",cAliasSF3)+cCliFor+cLjCliFor)
			EndIf
			cRazSoc		:=	SA1->A1_NOME
			cCNPJ 		:=	A940CNPJ(SA1->A1_CGC,SA1->A1_TIPO, lTareDf)
			cCNPJOri	:=	SA1->A1_CGC
			cIE   := A940IE(SA1->A1_INSCR)
			cTranspCGC	:=	AFISFILL (Num2Chr (Val (SA1->A1_CGC), 14, 0), 14)
			cTranspIns	:=	aRETDIG(SA1->A1_INSCR,.t.,(cAliasSF3)->F3_ESTADO)
			cTranspEst	:=	SA1->A1_EST
			cTranspOri	:=	SA1->A1_CGC
			cContrTare	:=	SA1->A1_CTARE
			If nGIMUN1 > 0 .And. nAltCodGIM == 0
				cCdMunGIM := SA1->(FieldGet(nGIMUN1))
			Else
				cCdMunGIM := cCodGIM
			EndIf
			// Nao contribuinte do ICMS
			lNContr := IIf(Empty(SA1->A1_INSCR).Or."ISENT"$SA1->A1_INSCR.Or."RG"$SA1->A1_INSCR.Or.(SA1->A1_CONTRIB == "2"),.T.,.F.)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se o produto é referente a combustíveis para a geração do CAT95 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lConv76 .And. lGRF_CBT .And. ((cAliasSF3)->F3_CFO >= "5")
			lAchouCBT1 := .F.
			SD2->(DbSetOrder(3))
			If SD2->(MsSeek(F3Filial("SD2")+(cAliasSF3)->(F3_NFISCAL+F3_SERIE+F3_CLIEFOR+F3_LOJA)))
				While !SD2->(Eof()) .And. xFilial("SD2")+(cAliasSF3)->(F3_SERIE+F3_NFISCAL+F3_CLIEFOR+F3_LOJA)==xFilial("SD2")+SD2->(D2_SERIE+D2_DOC+D2_CLIENTE+D2_LOJA)
					SB5->(DbSetOrder(1))
					If SB5->(MsSeek(xFilial("SB5")+SD2->D2_COD)) .And. aScan(aGRF_CBT, SB5->(FieldGet(nMV_CAT95))) <> 0
						lAchouCBT1 := .T.
						Exit
					Endif
					SD2->(dbSkip())
				Enddo
				If !lAchouCBT1
					(cAliasSF3)->(dbSkip())
					Loop
				EndIf
			ElseIf !Empty((cAliasSF3)->F3_DTCANC)
				lAchouCBT := .F.
				SFT->(dbSetOrder(1))
				If SFT->(MsSeek(xFilial("SFT")+"S"+(cAliasSF3)->(F3_SERIE+F3_NFISCAL+F3_CLIEFOR+F3_LOJA)))
					While !SFT->(Eof()) .And.;
						xFilial("SFT")+"S"+(cAliasSF3)->(F3_SERIE+F3_NFISCAL+F3_CLIEFOR+F3_LOJA)==;
						xFilial("SFT")+SFT->(FT_TIPOMOV+FT_SERIE+FT_NFISCAL+FT_CLIEFOR+FT_LOJA)
						SB5->(DbSetOrder(1))
						If SB5->(MsSeek(xFilial("SB5")+SFT->FT_PRODUTO)) .And.;
							aScan(aGRF_CBT, SB5->(FieldGet(nMV_CAT95))) <> 0
							lAchouCBT := .T.
							Exit
						Endif
						SFT->(dbSkip())
					EndDo
					If !lAchouCBT
						(cAliasSF3)->(dbSkip())
						Loop
					EndIf
				Endif
			Endif
		ElseIf lConv76 .And. lGRF_CBT .And. ((cAliasSF3)->F3_CFO < "5")
			lAchouCBT1 := .F.
			SD1->(DbSetOrder(1))
			If SD1->(MsSeek(F3Filial("SD1")+(cAliasSF3)->F3_NFISCAL+(cAliasSF3)->F3_SERIE+(cAliasSF3)->F3_CLIEFOR+(cAliasSF3)->F3_LOJA))
				While !SD1->(Eof()) .And.;
					xFilial("SD1")+(cAliasSF3)->(F3_SERIE+F3_NFISCAL+F3_CLIEFOR+F3_LOJA)==;
					xFilial("SD1")+SD1->(D1_SERIE+D1_DOC+D1_FORNECE+D1_LOJA)
					SB5->(DbSetOrder(1))
					If SB5->(MsSeek(xFilial("SB5")+SD1->D1_COD)) .And.;
						aScan(aGRF_CBT, SB5->(FieldGet(nMV_CAT95))) <> 0
						lAchouCBT1 := .T.
						Exit
					Endif
					SD1->(dbSkip())
				EndDo
				If !lAchouCBT1
					(cAliasSF3)->(dbSkip())
					Loop
				EndIf
			ElseIf !Empty((cAliasSF3)->F3_DTCANC)
				lAchouCBT := .F.
				SFT->(dbSetOrder(1))
				If SFT->(MsSeek(xFilial("SFT")+"E"+(cAliasSF3)->(F3_SERIE+F3_NFISCAL+F3_CLIEFOR+F3_LOJA)))
					While !SFT->(Eof()) .And.;
						xFilial("SFT")+"E"+(cAliasSF3)->(F3_SERIE+F3_NFISCAL+F3_CLIEFOR+F3_LOJA)==;
						xFilial("SFT")+SFT->(FT_TIPOMOV+FT_SERIE+FT_NFISCAL+FT_CLIEFOR+FT_LOJA)
						SB5->(DbSetOrder(1))
						If SB5->(MsSeek(xFilial("SB5")+SFT->FT_PRODUTO)) .And.;
							aScan(aGRF_CBT, SB5->(FieldGet(nMV_CAT95))) <> 0
							lAchouCBT := .T.
							Exit
						Endif
						SFT->(dbSkip())
					EndDo
					If !lAchouCBT
						(cAliasSF3)->(dbSkip())
						Loop
					EndIf
				EndIf
			Endif
		Endif

		dbSelectArea(cAliasSF3)
		cChave := (cAliasSF3)->F3_NFISCAL+(cAliasSF3)->F3_SERIE+(cAliasSF3)->F3_CLIEFOR+(cAliasSF3)->F3_LOJA+;
			Iif(SubStr((cAliasSF3)->F3_CFO,1,1)$"1,2,3","E",Iif(SubStr((cAliasSF3)->F3_CFO,1,1)$"5,6,7","S",""))
		Aadd(aArrayF3, {(cAliasSF3)->F3_NFISCAL	,;	//01
		(cAliasSF3)->F3_SERIE		,;	//02
		(cAliasSF3)->F3_CLIEFOR		,;	//03
		(cAliasSF3)->F3_LOJA		,;	//04
		(cAliasSF3)->F3_CFO			,;	//05
		(cAliasSF3)->F3_TIPO		,;	//06
		(cAliasSF3)->F3_ESPECIE		,;	//07
		(cAliasSF3)->F3_ALIQICM		,;	//08
		(cAliasSF3)->F3_PDV			,;	//09
		(cAliasSF3)->F3_ENTRADA		,;	//10
		(cAliasSF3)->F3_ICMSRET  	,;	//11
		(cAliasSF3)->F3_ISENICM		,;	//12
		(cAliasSF3)->F3_DTCANC		,;	//13
		(cAliasSF3)->F3_CODISS		,;	//14
		(cAliasSF3)->F3_OUTRICM		,;	//15
		(cAliasSF3)->F3_VALICM		,;	//16
		(cAliasSF3)->F3_VALCONT		,;	//17
		(cAliasSF3)->F3_EMISSAO		,;	//18
		(cAliasSF3)->F3_BASEICM		,;	//19
		(cAliasSF3)->F3_OBSERV		,;	//20
		(cAliasSF3)->F3_FORMUL		,;	//21
		(cAliasSF3)->F3_ESTADO		,;	//22
		(cAliasSF3)->F3_DESPESA		,;	//23
		(cAliasSF3)->F3_FORMULA		,;	//24
		(cAliasSF3)->F3_VALIPI		,;	//25
		(cAliasSF3)->F3_ISENIPI		,;	//26
		(cAliasSF3)->F3_OUTRIPI		,;	//27
		(cAliasSF3)->F3_BASEIPI		,;	//28
		(cAliasSF3)->F3_BASERET     ,;  //29
		(cAliasSF3)->F3_IPIOBS		,;  //30
		(cAliasSF3)->F3_NRLIVRO		,;  //31
		(cAliasSF3)->F3_FILIAL		,;  //32
		(cAliasSF3)->F3_CREDST  	,;  //33
		(cAliasSF3)->F3_ANTICMS    	,;  //34
		(cAliasSF3)->F3_ICMSCOM    	,;  //35
		(cAliasSF3)->F3_ICMSDIF    	,;  //36
		(cAliasSF3)->F3_OBSSOL     	,;  //37
		(cAliasSF3)->F3_OBSICM      ,; //38
		SintSitDoc((cAliasSF3)->F3_CODRSEF,(cAliasSF3)->F3_DTCANC,(cAliasSF3)->F3_NFISCAL,(cAliasSF3)->F3_SERIE,(cAliasSF3)->F3_CLIEFOR,(cAliasSF3)->F3_LOJA),;        //39
		(cAliasSF3)->F3_VALANTI ,; 		// 40
		Iif( lSintMg , (cAliasSF3)->F3_NFEMP, ""),; //41 -  Implementacao do Sintegra MG - Registro 88A - Nota de Empenho
		SerieNfId(cAliasSF3,2,"F3_SERIE") ,;			//42 - Série Anterior ao projeto Chave unica
		(cAliasSF3)-> F3_CREDST ,; //43
		(cAliasSF3)-> F3_CHVNFE }) //44 Chave da NFE
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Executa funcoes do arquivo magnetico                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lSef					//SEF de Pernambuco
			Sef("1",cAliasSF3)	//Executa a SEF DURANTE o While do SF3
		Endif

		(cAliasSF3)->(dbSkip())

		If cChave <> (cAliasSF3)->F3_NFISCAL+(cAliasSF3)->F3_SERIE+(cAliasSF3)->F3_CLIEFOR+(cAliasSF3)->F3_LOJA+;
			Iif(SubStr((cAliasSF3)->F3_CFO,1,1)$"1,2,3","E",Iif(SubStr((cAliasSF3)->F3_CFO,1,1)$"5,6,7","S",""))
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Monta Registro Tipo 54 e Registro Tipo 75 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If   (Empty(aArrayF3[1][7]) .Or. AModNot(aArrayF3[1][7])$"01/02/04/21/22/55/06/65") .And. (Empty(cCfopPR) .Or. !(Alltrim(aArrayF3[1][5])$cCfopPR)) .Or.;
				((Empty(aArrayF3[1][7]) .Or. AModNot(aArrayF3[1][7])$"01/02/04/06/21/22/55") .And. lSef) .And. ((Empty(cCfopPR) .Or. !(Alltrim(aArrayF3[1][5])$cCfopPR)) .And. lSef)
				If substr(aArrayF3[1][5],1,1)<"5" .And. AModNot(aArrayF3[1][7])$"01/04/06/21/22/55" .And. aArrayF3[1][6] <> "L"
					SF1->(dbSetOrder(1))
					SF1->(MsSeek(F3Filial("SF1",cAliasSF3)+aArrayF3[1][1]+aArrayF3[1][2]+aArrayF3[1][3]+aArrayF3[1][4]))
					lCompTare := Iif (lTareDf .And. AllTrim (SF1->F1_TIPO)$"CIP", .F., .T.)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Registro adicional para Frete,Seguro e Outras Despesas       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If SF1->(!Eof())

						#IFDEF TOP
						If TcSrvType()<>"AS/400"
							cAliasSD1 := "a940ASD1"
							cQuery := "SELECT Sum(D1_VALFRE) as VALFRE, Sum(D1_SEGURO) as SEGURO, Sum(D1_DESPESA) as DESPESA "
							cQuery += "FROM "+RetSqlName("SD1")+" "
							cQuery += "WHERE D1_FILIAL='"+xFilial("SD1")+"' AND "
							cQuery += "D1_DOC='"+SF1->F1_DOC+"' AND "
							cQuery += "D1_SERIE='"+SF1->F1_SERIE+"' AND "
							cQuery += "D1_FORNECE='"+SF1->F1_FORNECE+"' AND "
							cQuery += "D1_LOJA='"+SF1->F1_LOJA+"' AND "
							cQuery += "D1_CF NOT IN ('"+cCfoSint+"') AND "
							cQuery += "D_E_L_E_T_ = ' ' "
							cQuery := ChangeQuery(cQuery)
							dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD1,.T.,.T.)
						Else
						#ENDIF
							(cAliasSD1)->(MsSeek(xFilial("SD1")+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA))
						#IFDEF TOP
						EndIf
						#ENDIF

						if !lQuery
							dbSelectArea("SD1")
							(cAliasSD1)->(DbSetOrder(1))
							(cAliasSD1)->(MsSeek(xFilial("SD1")+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA))
							Do While !(cAliasSD1)->(Eof()) .And.; 
								((cAliasSD1)->D1_DOC+(cAliasSD1)->D1_SERIE+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA ==;
								SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA)
								If Alltrim((cAliasSD1)->D1_CF) $ cCfoSint
									(cAliasSD1)->(dbSkip())
									Loop
								Else
								nFrete		+= (cAliasSD1)->D1_VALFRE
								nSeguro		+= (cAliasSD1)->D1_SEGURO
								nDespesa	+= (cAliasSD1)->D1_DESPESA
							Endif
								(cAliasSD1)->(dbSkip())
							EndDo
						else
							nFrete		:= (cAliasSD1)->VALFRE
							nSeguro		:= (cAliasSD1)->SEGURO
							nDespesa	:= (cAliasSD1)->DESPESA
							dbSelectArea(cAliasSD1)
							dbCloseArea()
						endif

						For nI := 1 to 5
							// Somente gera o item 993 quando o contribuinte destacar PIS/COFINS na nota fiscal - Sintegra
							If nI == 4 .And. MV_PAR22 <> 1 .And. !lGimPB
								Loop
							Endif
							If nI == 4
								aRelImp    := MaFisRelImp("MT100",{ "SF1" })
								nPsVlPisEn := 0
								nValPis    := 0
								nValCof    := 0
								If !Empty(nScanPis := aScan(aRelImp,{|x| x[1]=="SF1" .And. x[3]=="NF_VALPS2"}))
									cCpVlPisEn := aRelImp[nScanPis,2]
									nPsVlPisEn := SF1->(FieldPos(cCpVlPisEn))
								EndIf
								If !Empty(nPsVlPisEn)
									nValPis := SF1->(FieldGet(nPsVlPisEn))
								EndIf
								If !Empty(nScanCof := aScan(aRelImp,{|x| x[1]=="SF1" .And. x[3]=="NF_VALCF2"}))
									If !Empty(SF1->(FieldPos(aRelImp[nScanCof,2])))
										nValCof := SF1->(FieldGet(SF1->(FieldPos(aRelImp[nScanCof,2]))))
									EndIf
								EndIf
							Endif
							If	(nI == 1 .And. SF1->F1_FRETE > 0) .Or.;
								(nI == 2 .And. SF1->F1_SEGURO > 0) .Or.;
								(nI == 3 .And. SF1->F1_DESPESA > 0) .Or.;
								(nI == 4 .And. nValPis+nValCof > 0) .Or.;
								(nI == 5 .And. SF1->F1_TIPO $ "CIP" .And. !lMVSINTIPC)
								dbSelectArea("R54")
								If  (!lSef .And. !ALLTRIM(aArrayF3[1][5]) $ cCfoSint) .Or. (lSef .And. ! ALLTRIM(aArrayF3[1][5]) $ cMv54Sef)
									If !MsSeek(cCNPJ+aArrayF3[1][2]+aArrayF3[1][1]+IIf(nI==1,"991",If(nI==2,"992",If(nI==3,"999",If(nI==4,"993","997")))))
										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³ Somente SEF - Grava na Entrada Reg. 54 Modelos 01,06,21 e 22 ³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										If ((lSef) .And. AModNot(aArrayF3[1][7])$"01/04/06/21/22/55" .Or. ;
									     !lSef .And. AModNot(aArrayF3[1][7])$"01/55") .AND. ! (AllTrim(aArrayF3[1][5]) $ cCfoNEcf) .Or.;
									     (lValPR .And. AModNot(aArrayF3[1][7])$"22") 
											RecLock("R54",.T.)
											R54->A54_CTARE   := cContrTare
											R54->A54_CNPJ    := cCNPJ
											R54->A54_MODELO  := AModNot(aArrayF3[1][7])
											R54->A54_SERIE   := aArrayF3[1][2]
											R54->A54_NFISC   := aArrayF3[1][1]
											R54->A54_CFOP    := aArrayF3[1][5]
											R54->A54_CST     := CSTCompl (dDtIni, lSef, lValidaPr , nI )
											R54->A54_NUMITE  := IIf(nI==1,"991",If(nI==2,"992",If(nI==3,"999",If(nI==4,"993","997")))) //Numero do Item (991-Frete;992 -Seguro;999-Outras despesas acessorias;993-PIS/COFINS;997-Compl.Preco/ICMS)
											R54->A54_QUANT   := IIf(lSef,1,0)
											R54->A54_CNORI   := cCNPJOri
											R54->A54_FILIAL  := IIF (lModoComp ,"",FWCodFil())
											R54->A54_SDOC	 := aArrayF3[1][42]

											If lSef
												// Os itens 991/992/993/998/999 nao devem ser apresentados com CFOP e nem
												// com codigo do produto no registro 54 do SEF.
												If R54->A54_NUMITE $ "991/992/993/998/999"
													R54->A54_CFOP	:= "0000"
													If R54->A54_NUMITE == "998"
														R54->A54_PRODUT := ""
													Endif
												Else
													R54->A54_PRODUT := SefProd54(aArrayF3,cAliasSF3)
													R54->A54_PRORI  := SefProd54(aArrayF3,cAliasSF3, 2)
													If R54->A54_NUMITE <> "997"  .Or. lSef
														GrvReg75(aArrayF3,cAliasSF3,dDtIni,dDtFim,@lPMen15,@lPMai14,@cProdAnt)
													Endif
												Endif
											Endif

											If lSintMN
												R54->A54_QUANT  := 1
												R54->A54_PRODUT := SefProd54(aArrayF3,cAliasSF3)
												If R54->A54_NUMITE <> "997"
													GrvReg75(aArrayF3,cAliasSF3,dDtIni,dDtFim,@lPMen15,@lPMai14)
												Endif
											Endif
											//Alteracao efetuada apos consulta na Secretaria RS
											//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
											//³REGISTRO ERRO                                                                        ³
											//³                                                                                     ³
											//³PARA OS CODIGOS ESPECIAIS QUANTIDADE (CAMPO 10) E VALOR DO PRODUTO (CAMPO 11)        ³
											//³ DEVEM ESTAR ZERADOS E A INFORMACAO DEVE SER PREENCHIDA NO VALOR DESCONTAO / DESPESA ³
											//³ ACESSORIOS (CAMPO 12 ).  REJEICAO                                                   ³
											//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
											If GETMV("MV_ESTADO")$"RS/SP/RJ/PR"
												R54->A54_QUANT  := 0
												R54->A54_VALPRO := 0
												R54->A54_VALDES := IIf(nI==1,SF1->F1_FRETE,If(nI==2,SF1->F1_SEGURO,If(nI==3,SF1->F1_DESPESA,If(nI==4,nValPis+nValCof,SF1->F1_DESPESA))))
												R54->A54_CST    := ''
											Else
												R54->A54_VALPRO := IIf(nI==1,nFrete,If(nI==2,nSeguro,If(nI==3,nDespesa,If(nI==4,nValPis+nValCof,SF1->F1_VALBRUT))))
												R54->A54_VALDES := R54->A54_VALPRO
												nFrete		  	:= 0
												nSeguro			:= 0
												nDespesa		:= 0
											EndIf

											SD1->(DbSetOrder(1))
											SD1->(MsSeek(F3Filial("SD1")+aArrayF3[1][1]+aArrayF3[1][2]+aArrayF3[1][3]+aArrayF3[1][4]))
											SF4->(MsSeek(F3Filial("SF4",cAliasSF3)+SD1->D1_TES))

											If lSef
												R54->A54_ALQICM  := aArrayF3[1][8]
											ElseIf (SF1->F1_TIPO$"CI" .And. lTareDf)
												R54->A54_ALQICM	:=	SD1->D1_PICM
											Else
												R54->A54_ALQICM  := IIf(nI==4,aArrayF3[1][8],0)
											Endif

											If lSef .And. SF1->F1_TIPO$"C" .And. nI==5
												R54->A54_BSICM  := SD1->D1_BASEICM
											Else
												//No layout o item 14.1.8.1 diz que o Campo 13 - Base de Cálculo do ICMS deve ser preenchido com o valor
												//da base de cáculo de ICMS quando não se tratar de operação ou prestação com substituição.
												If Empty(SD1->D1_ICMSRET)
													If !SF4->F4_LFICM $ "IONZ"
														R54->A54_BSICM  := SD1->D1_BASEICM
														If nI==5 //Coloco essa validação para não sobrepor as validações que foram colocadas anteriormente
															R54->A54_ALQICM	:= SD1->D1_PICM
														EndIf
													EndIf
												EndIf
											Endif

											//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
											//³ Implementacao do SEF PE                           ³
											//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
											R54->A54_IE    := cIE
											R54->A54_EMISS:= SF1->F1_DTDIGIT
											R54->A54_UF   := cTranspEst

											//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
											//³ Implementacao do PRODEPE                          ³
											//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
											If lSef .And. Val(aRetCfp[19][1]) == 1		//Industria
												aProdepe 		:= Prodepe(SefProd54(aArrayF3,cAliasSF3,2),cAliasSF3)
												R54->A54_APUR	:= aProdepe[1]			//Codigo da Apuracao
												R54->A54_INDESP := aProdepe[2]			//Indicador Especial
											Endif

											//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
											//³Implementacao do FUNCEP/PB³
											//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
											If lGimPB
												R54->A54_FUNCEP := cFuncep
												R54->A54_ICMDIF := SD1->D1_ICMSCOM
											Endif

											dbselectarea("SA2")
											dbSetOrder(1)
											dbSeek(xfilial("SA2")+SD1->D1_FORNECE+SD1->D1_LOJA)

											If lSintMG .And. nI==5 .And. aArrayF3[1][29]>0 .And. SF1->F1_TIPO$"C"
												SD1->(DbSetOrder(1))
												SD1->(MsSeek(F3Filial("SD1")+aArrayF3[1][1]+aArrayF3[1][2]+aArrayF3[1][3]+aArrayF3[1][4]))
												SB1->(DbSetOrder(1))
												SB1->(MsSeek(xFilial("SB1")+SD1->D1_COD))
												SF4->(DbSetOrder(1))
												SF4->(MsSeek(xFilial("SF4")+SD1->D1_TES))
												//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
												//³Situacao Tributaria ³
												//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
												If Empty( SD1->D1_CLASFIS )
													If !Empty(SB1->B1_ORIGEM) .And. Empty(SF4->F4_SITTRIB)
														cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)),1,0),1)
													Else
														cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB),3,0),3)
													EndIf
												Else
													cSitTrib := Alltrim( SD1->D1_CLASFIS )
													cSitTrib := StrZero( Val(cSitTrib), 3)
												EndIf
												A940LoadPro("S",@cNcm,@cProd,,lSef,@cDescPe,@lPMen15,@lPMai14)

												R54->A54_PRODUT := cProd

												If Substr(aArrayF3[1][5],1,1) >= "5" 
													If lSimpNac .And. SA1->A1_SIMPNAC$"1"
														R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr , nI )
													Else
														R54->A54_CST := "000"
													Endif
												Endif
												If Substr(aArrayF3[1][5],1,1) < "5" 
													If SA2->A2_SIMPNAC$"1" .And. SF4->F4_CSOSN<>""
														R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr , nI )
													Else
														R54->A54_CST := cSitTrib
													Endif
												Endif

												R54->A54_DTEMI 	:= aArrayF3[1][18]  // Data da Emissao 
												R54->A54_ALIQST		:= aArrayF3[1][8]
												R54->A54_BRICMS		+= aArrayF3[1][29]
												If lR54IPI
												R54->A54_VALIPI	+= If(SF4->F4_IPI=="R",0.00,aArrayF3[1][25])
												Else
													R54->A54_VALIPI	+=  aArrayF3[1][25]
												Endif
											EndIf

											If lSintMS .And. Left(cIncFis,2)=="F4" .And. nIncFis>0
												SF4->(DbSetOrder(1))
												SF4->(MsSeek(xFilial("SF4")+SD1->D1_TES))
												R54->A54_INCFIS := SF4->(FieldGet(nIncFis))
											EndIf
											R54->(MsUnlock())
										Endif
									EndIf
								Endif
							Endif
						Next
					EndIf

					SD1->( dbSetOrder(1))

					#IFDEF TOP
						If TcSrvType()<>"AS/400"
							cAliasSD1 := "a940ASD1"
							aStru  := SD1->(dbStruct())
							cQuery := "SELECT D1_FILIAL,D1_ITEM,D1_ITEMORI,D1_ITEMPC,D1_DOC,D1_SERIE,D1_FORNECE,D1_LOJA,"
							cQuery += "D1_COD,D1_TES,D1_TEC,D1_TIPO,D1_CF,D1_BASEICM,D1_ICMSRET,D1_PICM,D1_TOTAL,D1_DESCICM,"
							cQuery += "D1_BRICMS,D1_QUANT,D1_CLASFIS,D1_UM,D1_ICMSCOM,D1_VALIPI,D1_IPI,D1_EMISSAO,D1_VALDESC,"
							cQuery += "D1_VALICM,D1_ICMSRET,D1_PEDIDO,D1_DTDIGIT,D1_NFORI,D1_SERIORI,D1_VUNIT, D1_VALANTI "

							If SerieNfId("SD1",3,"D1_SERIE") == "D1_SDOC"
								cQuery += ",D1_SDOC"
							EndIf

							cQuery += "FROM "+RetSqlName("SD1")+" "
							cQuery += "WHERE D1_FILIAL='"+F3Filial("SD1",cAliasSF3)+"' AND "
							cQuery += "D1_DOC='"+aArrayF3[1][1]+"' AND "
							cQuery += "D1_SERIE='"+aArrayF3[1][2]+"' AND "
							cQuery += "D1_FORNECE='"+aArrayF3[1][3]+"' AND "
							cQuery += "D1_LOJA='"+aArrayF3[1][4]+"' AND "
							cQuery += "D1_CF NOT IN('000','999','0000','9999') AND "
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Indica se o item 997 das NF de Complemento, deverao  |
							//|acompanhar a quantidade de itens da NF (reg. tipo 54)³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If !lMVSINTIPC
								// Notas Fiscais de Complemento devem gerar apenas o 54 especifico (997) para todos os estados, 
								//		especificamente para MG tenho tratamento diferenteciado para complemento de preco/frete 
								//		na geracao do registro 88STITNF.
								If lSintMg
									cQuery += "D1_TIPO NOT IN ('I','P') AND "
								Else
									cQuery += "D1_TIPO NOT IN ('I','P','C') AND "
								EndIf
							EndIf

							If MV_PAR21==1
								cQuery += "(D1_CF LIKE '2%') AND D1_ICMSRET>0 AND "
							ElseIf MV_PAR21==2
								cQuery += "(D1_CF LIKE '2%') AND "
							Else
								cQuery += "(D1_CF LIKE '1%' OR D1_CF LIKE '2%' OR D1_CF LIKE '3%') AND "
							EndIf
							cQuery += "D_E_L_E_T_ = ' ' "
							cQuery += "ORDER BY "+SqlOrder(SD1->(IndexKey()))

							cQuery := ChangeQuery(cQuery)
							dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD1,.T.,.T.)

							For nX := 1 To len(aStru)
								If aStru[nX][2] <> "C"
									TcSetField(cAliasSD1,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
								EndIf
							Next nX
							dbSelectArea(cAliasSD1)
						Else
					#ENDIF
							(cAliasSD1)->( MsSeek(F3Filial("SD1",cAliasSF3)+aArrayF3[1][1]+aArrayF3[1][2]+aArrayF3[1][3]+aArrayF3[1][4]))
					#IFDEF TOP
						EndIf
					#ENDIF

					nItem := 1

					While (cAliasSD1)->(!Eof()).And. (cAliasSD1)->D1_FILIAL +(cAliasSD1)->D1_DOC + (cAliasSD1)->D1_SERIE+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA==;
					    F3Filial("SD1",cAliasSF3)+aArrayF3[1][1]+aArrayF3[1][2]+aArrayF3[1][3]+aArrayF3[1][4] .And. lCompTare

						If !lQuery .And. Left((cAliasSD1)->D1_CF,3) $ "000/999"
							(cAliasSD1)->(dbSkip())
							Loop
						Endif

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Apenas os itens que sao combustiveis deverao constar, quando for CAT95  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lConv76 .And. lGRF_CBT 
							SB5->(DbSetOrder(1))
							If SB5->(MsSeek(xFilial("SB5")+(cAliasSD1)->D1_COD))
								If aScan(aGRF_CBT, SB5->(FieldGet(nMV_CAT95))) == 0
									(cAliasSD1)->(dbSkip())
									Loop
								Endif
							Else
								(cAliasSD1)->(dbSkip())
								Loop
							Endif
						Endif

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Caso existam notas com a mesma chave (DOC+SER+FORN+LOJA) de diferentes tipos (Normal, Devolucao..)   ³
						//³eh necessario fazer essa protecao para que sejam impressos apenas os itens da nota correta.          ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If (cAliasSD1)->D1_TIPO == "N"
							If !Empty(aArrayF3[1][6])
								(cAliasSD1)->(dbSkip())
								Loop
							Endif
						Else
							If !(aArrayF3[1][6] == (cAliasSD1)->D1_TIPO)
								(cAliasSD1)->(dbSkip())
								Loop
							Endif
						Endif

						SF4->(MsSeek(F3Filial("SF4",cAliasSF3)+(cAliasSD1)->D1_TES))
						SB1->(MsSeek(F3Filial("SB1",cAliasSF3)+(cAliasSD1)->D1_COD))

						A940LoadPro("E",@cNcm,@cProd,(cAliasSD1)->D1_TEC,lSef,@cDescPe,@lPMen15,@lPMai14)
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Nao ser gerado Reg. 54 para Notas de Complementos  ³
						//³Devem gerar apenas o registro 54 especifico (997)  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ((cAliasSD1)->D1_TIPO $ "IP" .Or. ((cAliasSD1)->D1_TIPO$"C" .And. !lSintMg)) .And. !lMVSINTIPC	//I-ICMS P-IPI C-Preco
							(cAliasSD1)->(dbSkip())	
							Loop
						ElseIf (cAliasSD1)->D1_TIPO $ "IPC" .And. lMVSINTIPC .And. (!lSef .And. !ALLTRIM(aArrayF3[1][5]) $ cCfoSint) 	//I-ICMS P-IPI C-Preco
							RecLock("R54",.T.)
							R54->A54_CTARE  := cContrTare
							R54->A54_CNPJ   := cCNPJ
							R54->A54_MODELO := AModNot(aArrayF3[1][7])	
							R54->A54_SERIE  := aArrayF3[1][2]
							R54->A54_SDOC   := aArrayF3[1][42]
							R54->A54_NFISC  := aArrayF3[1][1]
							R54->A54_CFOP   := (cAliasSD1)->D1_CF
							R54->A54_CST    :=  Pad("",3)
							R54->A54_NUMITE := "997"
							R54->A54_QUANT  := IIf(lSef,1,0)
							R54->A54_CNORI  := cCNPJOri
							R54->A54_FILIAL := IIF (lModoComp ,"",FWCodFil())

							If lSef
								// Os itens 991/992/993/998/999 nao devem ser apresentados com CFOP e nem
								// com codigo do produto no registro 54 do SEF.
								If R54->A54_NUMITE $ "991/992/993/998/999"
									R54->A54_CFOP := "0000"
									If R54->A54_NUMITE == "998"
										R54->A54_PRODUT := ""
									Endif
								Else
									// Base de ICMS no item de complemento de preco/frete
									If R54->A54_NUMITE $ "997"
										R54->A54_BSICM := (cAliasSD1)->D1_BASEICM
									Endif
									R54->A54_PRODUT := cProd
									R54->A54_PRORI  := (cAliasSD1)->D1_COD
									If R54->A54_NUMITE <> "997"  .Or. lSef
										GrvReg75(aArrayF3,cAliasSF3,dDtIni,dDtFim,@lPMen15,@lPMai14,@cProdAnt)
									Endif
								Endif
							Else
								//No layout o item 14.1.8.1 diz que o Campo 13 - Base de Cálculo do ICMS deve ser preenchido com o valor
								//da base de cáculo de ICMS quando não se tratar de operação ou prestação com substituição.
								If Empty((cAliasSD1)->D1_ICMSRET)
									If !SF4->F4_LFICM $ "IONZ"
										R54->A54_BSICM  := (cAliasSD1)->D1_BASEICM
										R54->A54_ALQICM := (cAliasSD1)->D1_PICM
									EndIf
								EndIf
							Endif

							//Alteracao efetuada apos consulta na Secretaria RS
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³REGISTRO ERRO                                                                        ³
							//³                                                                                     ³
							//³PARA OS CODIGOS ESPECIAIS QUANTIDADE (CAMPO 10) E VALOR DO PRODUTO (CAMPO 11)        ³
							//³ DEVEM ESTAR ZERADOS E A INFORMACAO DEVE SER PREENCHIDA NO VALOR DESCONTAO / DESPESA ³
							//³ ACESSORIOS (CAMPO 12 ).  REJEICAO                                                   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If GETMV("MV_ESTADO")=="RS"
								R54->A54_QUANT  	:= 0
								R54->A54_VALPRO  	:= 0
								R54->A54_VALDES  	:= (cAliasSD1)->D1_TOTAL
							Else
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ CAMPO 11 - Valor do Produto	     				  	³
								//³ CAMPO 12 - Valor do Desconto / Despesa Acessoria	³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						   		R54->A54_VALPRO := (cAliasSD1)->D1_TOTAL + (cAliasSD1)->D1_DESCICM

							    If R54->A54_VALPRO == 0
							    	R54->A54_VALDES := Iif(SF1->F1_TIPO $ "P", aArrayF3[1][25], Iif(SF1->F1_TIPO $ "I", aArrayF3[1][16], R54->A54_VALPRO))
							    Else
							  		R54->A54_VALDES := R54->A54_VALPRO
							 	Endif
							Endif
						  	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						  	//³ Implementacao do SEF PE                           ³
						  	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						  	R54->A54_IE	  			:= 	cIE
						  	R54->A54_EMISS			:= 	(cAliasSD1)->D1_EMISSAO
						  	R54->A54_UF 			:= 	cTranspEst
						  	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						  	//³ Implementacao do PRODEPE                          ³
						  	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						  	If lSef .And. Val(aRetCfp[19][1]) == 1		//Industria
								aProdepe 			:= Prodepe((cAliasSD1)->D1_COD,cAliasSF3)
							 	R54->A54_APUR  		:= aProdepe[1]			//Codigo da Apuracao
							 	R54->A54_INDESP     := aProdepe[2]			//Indicador Especial
							 	If aProdepe[1] > 1
									SefRegX35(aProdepe[1])					//Processa Registro 88-35-00
							 	Endif
       						Endif
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Implementacao do FUNCEP/PB³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lGimPB
								R54->A54_FUNCEP := cFuncep
							Endif

						  	If lSintMG .And. aArrayF3[1][29]>0 .And. (cAliasSD1)->D1_TIPO$"C"
						  		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						  		//³Situacao Tributaria ³
						  		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						  		If Empty((cAliasSD1)->D1_CLASFIS)
									cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB),3,0),3)
						  		Else
									cSitTrib := Alltrim( (cAliasSD1)->D1_CLASFIS )
									cSitTrib := StrZero( Val(cSitTrib), 3)
					      		EndIf

								If Substr(aArrayF3[1][5],1,1) >= "5" 
								   	If   lSimpNac .And. SA1->A1_SIMPNAC$"1"
									     R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr)
									Else
									   	 R54->A54_CST := "000"
	     				     		Endif
	  					   		Endif
								If Substr(aArrayF3[1][5],1,1) < "5" 
									If SA2->A2_SIMPNAC$"1" .And. SF4->F4_CSOSN<>""
							 	 		R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr)
							 	    Else
						 	 	  		R54->A54_CST := cSitTrib
						 	   		Endif
					 	 		Endif
					 	 		
  								R54->A54_DTEMI  := (cAliasSD1)->D1_EMISSAO
						  		R54->A54_ALIQST := (cAliasSD1)->D1_PICM
						  		R54->A54_BRICMS += (cAliasSD1)->D1_BRICMS
								If lR54IPI
	   						  	   R54->A54_VALIPI += If(SF4->F4_IPI=="R",0.00,(cAliasSD1)->D1_VALIPI)
							  	Else
							  	   R54->A54_VALIPI += (cAliasSD1)->D1_VALIPI
							  	Endif

						  	Endif

							//Cliente MMX que necessitar utilizar ao inves da SB5 a SF4
							If lSintMS .And. Left(cIncFis,2)=="F4" .And. nIncFis>0
								R54->A54_INCFIS := SF4->(FieldGet(nIncFis))
							EndIf
					    	R54->(MsUnLock())

				    		//Sintegra do MS precisa agrupar os Registros 8801 e 8802
					    	//Conforme Manual de Integração (esses registros devem ser agrupados por CFOP e Operação (Entrada/Saida))
					    	//Porém existem campos como UF/ UM / PRODUTO/ CFOP e ALIQUOTA que nao podem ser agrupados
					    	If !I88->(MsSeek (SB1->B1_COD+(cAliasSD1)->D1_CF+cTranspEst+SB1->B1_UM+Str ((cAliasSD1)->D1_PICM, 5, 2)))
					    		RecLock("I88",.T.)
					    		I88->I88_PRODUT		:= SB1->B1_COD
					    		I88->I88_CFOP		:= (cAliasSD1)->D1_CF
					    		I88->I88_UF			:= cTranspEst
					    		I88->I88_UM			:= SB1->B1_UM
					    		I88->I88_ALQICM		:= (cAliasSD1)->D1_PICM
					    	Else
					    		RecLock("I88",.F.)
					    	EndIf
				    		I88->I88_QUANT		+= (cAliasSD1)->D1_QUANT
				    		I88->I88_VALTOT		+= (cAliasSD1)->D1_TOTAL
				    		I88->I88_BSICM		+= (cAliasSD1)->D1_BASEICM
				    		I88->I88_VALICM		+= (cAliasSD1)->D1_VALICM
						    //Cliente MMX que necessitar utilizar ao inves da SB5 a SF4
							If Left(cIncFis,2)=="F4" .And. nIncFis>0
								I88->I88_INCFIS := SF4->(FieldGet(nIncFis))
							EndIf
					    	I88->(MsUnLock())

					    	(cAliasSD1)->(dbSkip())
					    	Loop
					    Endif

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Verifica a referencia do item no array com as notas fiscais³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If SF4->F4_LFICM $ "IONZ" //Quando é uma Nota de ICMS (Outros, Isento, Não Tributado ou Zerado) a referência do SF3 somente é encontrada com aliquota 0
							If SF4->F4_LFICM $ "O" .AND. !Empty((cAliasSD1)->D1_PICM)
								nPos := aScan(aArrayF3,{|x| x[1]==(cAliasSD1)->D1_DOC .And. x[2]==(cAliasSD1)->D1_SERIE .And. x[3]==(cAliasSD1)->D1_FORNECE .And. x[4]==(cAliasSD1)->D1_LOJA .And. x[5]==(cAliasSD1)->D1_CF .And. x[8]==(cAliasSD1)->D1_PICM})
							Else
								nPos := aScan(aArrayF3,{|x| x[1]==(cAliasSD1)->D1_DOC .And. x[2]==(cAliasSD1)->D1_SERIE .And. x[3]==(cAliasSD1)->D1_FORNECE .And. x[4]==(cAliasSD1)->D1_LOJA .And. x[5]==(cAliasSD1)->D1_CF .And. x[8]==0})
							EndIf
						Else
							nPos := aScan(aArrayF3,{|x| x[1]==(cAliasSD1)->D1_DOC .And. x[2]==(cAliasSD1)->D1_SERIE .And. x[3]==(cAliasSD1)->D1_FORNECE .And. x[4]==(cAliasSD1)->D1_LOJA .And. x[5]==(cAliasSD1)->D1_CF .And. x[8]==(cAliasSD1)->D1_PICM})
						EndIf

						If SF4->F4_LFICM <> "N" .And. (cAliasSD1)->D1_TOTAL > 0
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Verifica se o produto faz parte do FUNCEP/PB                  ³
							//³Fundo de Combate e Erradicacao da Pobreza do Estado da Paraiba³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lGimPB
								cFuncep := ""
								SB5->(dbSetOrder(1))
								If SB5->(dbSeek(F3Filial("SB5",cAliasSF3)+(cAliasSD1)->D1_COD)) .And. lB5Funcep
									cFuncep := SB5->B5_FUNCEP
								Endif
							Endif
							nPosAliq := 0
							nAliqIte := 0
							cSitTrib := ""
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Processo utilizado para atribuir os valores de Base de Icms e³
							//³Aliquota de Icms ao Registro 54 conforme Registro 50.        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If	(!lSef .And. !ALLTRIM((cAliasSD1)->D1_CF) $ cCfoSint) .Or.;
								( lSef .And. !ALLTRIM((cAliasSD1)->D1_CF) $ cMv54Sef)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Monta Registro Tipo 75³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								nAliqICM := SuperGETMV("MV_ICMPAD")

								nBRetido := 0

								If aArrayF3[Iif(nPos>0,nPos,1)][33]<>"4"
									nBRetido := (cAliasSD1)->D1_BRICMS/(cAliasSD1)->D1_QUANT
								Endif
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Situacao Tributaria ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If Empty((cAliasSD1)->D1_CLASFIS)
									If !Empty(SB1->B1_ORIGEM) .And. Empty(SF4->F4_SITTRIB)
										cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)),1,0),1)
									Else
										cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB),3,0),3)
									EndIf
								Else
									cSitTrib := Alltrim((cAliasSD1)->D1_CLASFIS)
									cSitTrib := StrZero( Val(cSitTrib), 3)
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³% de Reducao do ICMS nas Operacoes Internas³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

								dbSelectArea("SF7")
								SF7->(dbSetOrder(1))
								SF7->(MsSeek (xFilial("SF7")+SB1->B1_GRTRIB))

								nRedBase := 0
								If SF4->F4_BASEICM >=100
									nRedBase :=0
								ElseIf SF4->F4_BASEICM > 0
									nRedBase := (100-SF4->F4_BASEICM)
								ElseIf SB1->B1_GRTRIB <> " "
									nRedBase := SF7->F7_BASEICM
								Else
									nRedBase := SF4->F4_BASEICM
								Endif

								If Empty((cAliasSD1)->D1_TEC)
									If Alltrim(cProd) <> ""
										If len(alltrim(cProd))>14
											cSeek := (dtos(dDtIni)+dtos(dDtFim)+PADR(cProd,14)+PADR(cNcm,8)+SB1->B1_UM+space(4))
										Else
											cSeek := (dtos(dDtIni)+dtos(dDtFim)+Substr(cProd,1,14)+PADR(cNcm,8)+SB1->B1_UM+space(4))
										EndIf
									Else
										If len(alltrim(SB1->B1_COD))>14
											cSeek := (dtos(dDtIni)+dtos(dDtFim)+PADR(SB1->B1_COD,14)+PADR(cNcm,8)+SB1->B1_UM+space(4))
										Else
											cSeek := (dtos(dDtIni)+dtos(dDtFim)+Substr(SB1->B1_COD,1,14)+PADR(cNcm,8)+SB1->B1_UM+space(4))
										EndIf
									EndIf
								Else
									cSeek	:=(dtos(dDtIni)+dtos(dDtFim)+PADR(cProd,14)+Substr(cNcm,1,8)+(cAliasSD1)->D1_UM+space(4))
								Endif

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Somente SEF - Grava na Entrada Reg. 54 Modelos 01,06,21 e 22 ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If (lSef) .And. AModNot(aArrayF3[1][7])$"01/04/06/21/22/55" .Or.;
								   (!lSef .And. AModNot(aArrayF3[1][7])$"01/04/55") .Or.; 
							       (lValPR .And. AModNot(aArrayF3[1][7])$"22") 
									//Utilizo informacoes do SWN
									If !Empty((cAliasSD1)->D1_TEC) .And. lGeraSwn
										ImporSWN(cAliasSd1,cCNPJ,cSitTrib,cCNPJOri,cIe,cTranspEst,aRetCfp,cFuncep,dDTIni,dDTFim,cProd,cNcm,nAliqICM,nBRetido,nRedBase,aArrayF3,cAliasSF3,lSef,lImpSt,lGimPB,@nItem,cContrTare,lSintMS,@cDescPe,@lPMen15,@lPMai14,cIncFis,nIncFis)
										//
									Else
										nAliqIte  := (cAliasSD1)->D1_PICM
										If !SF4->F4_ISS $ "N "
											nAliqIte  := 0
										ElseIf SF4->F4_LFICM $ "IOZ" .And. nRedBase > 0 .And. SF4->F4_CONSUMO $ "SO"
											nAliqIte  := 0
										ElseIf SF4->F4_LFICM $ "IOZ" .And. nRedBase == 0
											nAliqIte  := 0
										ElseIf SF4->F4_LFICM $ "O" .And. SF4->F4_MKPSOL = "1" .And. SF4->F4_MKPCMP = "1" .And. lValPR
											nAliqIte  := 0
										Endif
										nPosAliq := Ascan(aArrayF3,{|x| x[5] == (cAliasSD1)->D1_CF .AND. x[8]==nAliqIte})
										If !((cAliasSD1)->D1_TIPO$"C" .And. lSintMg)

											If (lAglR54 .And. !R54->(MsSeek (cCNPJ+aArrayF3[1][2]+aArrayF3[1][1]+cProd+Str (Iif (nPosAliq>0, aArrayF3[nPosAliq][8], 0), 5, 2)))) .Or. !(lAglR54)

												lAglutinou := .F.
												nAliqICM   := If(nPosAliq > 0,aArrayF3[nPosAliq][8],0)
												RecLock("R54",.T.)
												R54->A54_CTARE	:=	cContrTare
												R54->A54_CNPJ	:=	cCNPJ
												R54->A54_MODELO	:=	AModNot(aArrayF3[1][7])
												R54->A54_SERIE 	:=	(cAliasSD1)->D1_SERIE
												R54->A54_SDOC	:= 	SerieNfId(cAliasSD1,2,"D1_SERIE")
												R54->A54_NFISC 	:=	(cAliasSD1)->D1_DOC
												R54->A54_CFOP	:=	(cAliasSD1)->D1_CF

												If Substr(aArrayF3[1][5],1,1) >= "5"
													If lSimpNac .And. SA1->A1_SIMPNAC$"1"
														R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr)
													Else
														R54->A54_CST := "000"
													Endif
												Endif
												If Substr(aArrayF3[1][5],1,1) < "5" 
													If SA2->A2_SIMPNAC$"1" .And. SF4->F4_CSOSN<>""
														R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr)
													Else
														R54->A54_CST := cSitTrib
													Endif
												Endif

												R54->A54_NUMITE	:=	StrZero(nItem,3)
												R54->A54_PRODUT	:=	cProd
												R54->A54_PRORI	:=	SB1->B1_COD
												R54->A54_CNORI  :=  cCNPJOri
												// Tratamento para que o registro 54 busque o valor da aliq. de ICMS
												// da mesma forma que eh realizado no registro 50.
												If lMVALIQR50 .And. nPosAliq > 0
													If  aArrayF3[nPosAliq][8] == 0
														R54->A54_ALQICM := SB1->B1_PICM
													Else
														R54->A54_ALQICM := aArrayF3[nPosAliq][8]
													EndIf
												Elseif	lMVALIQR50 .And. aArrayF3[1][8] == 0
													R54->A54_ALQICM := SB1->B1_PICM
												Else
													R54->A54_ALQICM := IIf(nPosAliq > 0,aArrayF3[nPosAliq][8],aArrayF3[1][8])
												EndIf

												nPosic := ASCAN(aArrayF3,{|x|x[5]==(cAliasSD1)->D1_CF .And. x[8]==(cAliasSD1)->D1_PICM })

												If nPosic > 0
													If ((Left(aArrayF3[nPosic][05],1)<"5" .AND. aArrayF3[nPosic][11] > 0 .AND. aArrayF3[nPosic][43] == '') .Or. (Left(aArrayF3[nPosic][05],1)<"5" .AND.aArrayF3[nPosic][11] > 0 .AND. aArrayF3[nPosic][43] == '4')) .And. AARRAYF3[1][6]<>"D"
														R54->A54_ALQICM := 0
													EndIf
												EndIf

												R54->A54_FILIAL := IIF (lModoComp ,"",FWCodFil())
												//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
												//³ Implementacao do SEF PE                           ³
												//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
												R54->A54_IE	  	:= 	cIE
												If aArrayF3[1][39] == "E"
													R54->A54_EMISS := CDT->CDT_DTAREC
												Else
													R54->A54_EMISS := SF1->F1_DTDIGIT
												Endif
												R54->A54_UF 	:= 	cTranspEst
												//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
												//³ Implementacao do PRODEPE                          ³
												//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
												If lSef .And. Val(aRetCfp[19][1]) == 1		//Industria
													aProdepe 		:= Prodepe(SB1->B1_COD,cAliasSF3)
													R54->A54_APUR	:= aProdepe[1]			//Codigo da Apuracao
													R54->A54_INDESP := aProdepe[2]			//Indicador Especial
												Endif
												//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
												//³Implementacao do FUNCEP/PB³
												//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
												If lGimPB
													R54->A54_FUNCEP	:= cFuncep
													R54->A54_ICMDIF	:= (cAliasSD1)->D1_ICMSCOM
												Endif
												//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
												//³Sintegra-MG -> Informacoes de Substituicao Tributaria³
												//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
												//OBSERVACAO: ALIQUOTA SEMPRE SERA A MESMA GRAVADA NO SD1, POR ISSO O SEEK ACIMA SOMENTE TRATA DA ALIQICM
												R54->A54_DTEMI := aArrayF3[1][18]  // Data da Emissao 
												R54->A54_DTSAI := aArrayF3[1][10]  // Data da Entrada/Saida
												If (cAliasSD1)->D1_ICMSRET>0
													If aArrayF3[Iif(nPos>0,nPos,1)][33] <> "4"
														R54->A54_ALIQST := Iif(SB1->B1_PICM == 0,GetMV("MV_ICMPAD"),SB1->B1_PICM)
													Endif
												Endif
											Else
												RecLock("R54",.F.)
												
												lAglutinou := .T.
											EndIf
												R54->A54_QUANT 	+=	(cAliasSD1)->D1_QUANT
												R54->A54_VALPRO	+=	(cAliasSD1)->D1_TOTAL
												R54->A54_VALDES	+=	(cAliasSD1)->D1_VALDESC+(cAliasSD1)->D1_DESCICM
												R54->A54_VALICM	+=	(cAliasSD1)->D1_VALICM
												If aArrayF3[Iif(nPos>0,nPos,1)][33] <> "4"
													R54->A54_ICMRET += (cAliasSD1)->D1_ICMSRET
												Endif
												If nPos > 0
													nBsICMS := aArrayF3[nPos][19] 	// F3_BASEICM
												Else
													nBsICMS := aArrayF3[1][19]		// F3_BASEICM
												Endif
												If lSef
													If (SF4->F4_LFICM $ "IONZ" .And. Alltrim((cAliasSD1)->D1_CF)$"1556/2556/3556/197") .Or. Empty(nBsICMS) .Or. !EMPTY((cAliasSD1)->D1_BRICMS)
														R54->A54_BSICM += 0
													Else
														If SF4->F4_LFICMST$"T" .And. SF4->F4_ICMSST$"1"
															R54->A54_BSICM += nBsICMS
														Else
															R54->A54_BSICM += (cAliasSD1)->D1_BASEICM
														Endif
													Endif

													If aArrayF3[Iif(nPos>0,nPos,1)][33] <> "4"
														R54->A54_BRICMS +=	(cAliasSD1)->D1_BRICMS
													Endif
												Else
													If (SF4->F4_LFICM $ "IONZ" .And. (Alltrim((cAliasSD1)->D1_CF)$"1556/2556/3556/197") .Or. Empty(nBsICMS) .Or. (!EMPTY((cAliasSD1)->D1_BRICMS) .AND. (cAliasSD1)->D1_TIPO <> "D"))
														R54->A54_BSICM := 0
													Else
														R54->A54_BSICM += (cAliasSD1)->D1_BASEICM
													Endif
													If !EMPTY((cAliasSD1)->D1_BRICMS) .And. SF4->F4_CREDST <> "4"
														R54->A54_BRICMS := 0
													ElseIf aArrayF3[Iif(nPos>0,nPos,1)][33]== "4"
														R54->A54_BRICMS += (cAliasSD1)->D1_BRICMS
													Endif
												Endif

												If lImpSt .And. (cAliasSD1)->D1_VALIPI > 0		//Valor do IPI
													R54->A54_VALIPI += 0
												Else
													If lSef .And. SF4->F4_LFIPI $ "IO"
														R54->A54_VALIPI += 0
														IF SF4->F4_IPI == "S"
															R54->A54_VALPRO += (cAliasSD1)->D1_VALIPI
														EndIf
													Else
														If lR54IPI
															R54->A54_VALIPI += If(SF4->F4_IPI=="R",0.00,(cAliasSD1)->D1_VALIPI)
														Else
															R54->A54_VALIPI += (cAliasSD1)->D1_VALIPI
														Endif
													Endif
												Endif

												//Cliente MMX que necessitar utilizar ao inves da SB5 a SF4
												If lSintMS .And. Left(cIncFis,2)=="F4" .And. nIncFis>0
													R54->A54_INCFIS := SF4->(FieldGet(nIncFis))
												EndIf
												nPosic := ASCAN(aArrayF3,{|x|x[5]==(cAliasSD1)->D1_CF .And. x[8]==(cAliasSD1)->D1_PICM })
												If nPosic > 0
													If ((Left(aArrayF3[nPosic][05],1)<"5" .AND. aArrayF3[nPosic][11] > 0 .AND. aArrayF3[nPosic][43] == '') .Or. (Left(aArrayF3[nPosic][05],1)<"5" .AND.aArrayF3[nPosic][11] > 0 .AND. aArrayF3[nPosic][43] == '4')) .And. AARRAYF3[1][6]<>"D"
														R54->A54_ALQICM := 0
													EndIf
												EndIf
												R54->(MsUnlock())

											//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
											//³ Implementacao do Sintegra MG - Registro Tipo 88MINEIRAO     ³
											//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
											If lSintMG .And. SF4->(FieldGet(FieldPos(AllTrim(GetNewPar("MV_88MINEI","N")))))=="S"
												GravaMG88C(cProd,cProd,cCNPJ)
											Endif

										EndIf
										If lSintMg .And. l88STMG
											//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
											//³Registro utilizado no sintegra de MG, registro 88STITNF.         ³
											//³Serao gerados os itens das notas fiscais de entrada com ICMS ST  ³
											//³ou com Regime Especial de Substituicao Tributaria (F3_RGESPST) . ³
											//³Este registro e utilizado para o ressarcimento de impostos em MG.³
											//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
											lMonta88 := .F.
											If lRgEspSt
												If (cAliasSD1)->D1_BRICMS == 0
													If SFT->(dbSeek(xFilial("SFT")+"E"+(cAliasSD1)->D1_SERIE+(cAliasSD1)->D1_DOC+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+Padr((cAliasSD1)->D1_ITEM,nTamFTIt)+(cAliasSD1)->D1_COD))
														If SFT->FT_RGESPST == "1"
															lMonta88 := .T.
														Endif
													Endif
												Else
													lMonta88 := .T.
												Endif
											Else
												If (cAliasSD1)->D1_BRICMS > 0
													lMonta88 := .T.
												Endif
											Endif
											If lMonta88 .AND. !Alltrim((cAliasSD1)->D1_CF) $ cCfoFret
												//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
												//³Armazena os produtos processados nas entradas. Somente        ³
												//³as entradas com saidas que dao direito ao resssarcimento devem³
												//³ser apresentadas.                                             ³
												//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
												If aScan(aPr88MG,{|x| x[1]==(cAliasSD1)->D1_COD}) == 0
													aAdd(aPr88MG,{(cAliasSD1)->D1_COD,cProd,.F.,0})
												Endif
												RecLock("FRT",.T.)
												FRT->FRT_CNPJ		:=	cCNPJ
												FRT->FRT_MODELO	:=	AModNot(aArrayF3[1][7])
												FRT->FRT_SERIE	:=	(cAliasSD1)->D1_SERIE
												FRT->FRT_SDOC		:=	SerieNfId(cAliasSD1,2,"D1_SERIE")
												FRT->FRT_NFISC	:=	(cAliasSD1)->D1_DOC
												FRT->FRT_CFOP		:=	(cAliasSD1)->D1_CF
												FRT->FRT_CST		:=	cSitTrib
												FRT->FRT_NUMITE	:=	StrZero(nItem,3)
												FRT->FRT_DTEMI	:=	aArrayF3[1][10]  // Data da Entrada
												FRT->FRT_PRODUT	:=	cProd
												FRT->FRT_PRDORI	:=	(cAliasSD1)->D1_COD
												FRT->FRT_QUANT	+=	(cAliasSD1)->D1_QUANT
												FRT->FRT_VALPRO	+=	(cAliasSD1)->D1_TOTAL
												FRT->FRT_VALDES	+=	(cAliasSD1)->D1_VALDESC
												FRT->FRT_VALIPI	+=	(cAliasSD1)->D1_VALIPI
												FRT->FRT_CHVNFE	:=  aArrayF3[1][44]

												nBsIcmMG 	:= (cAliasSD1)->D1_BASEICM
												nBSSTMG 	:= (cAliasSD1)->D1_BRICMS
												nAlIcmMG 	:= (cAliasSD1)->D1_PICM
												nVlIcmMG	:= (cAliasSD1)->D1_VALICM
												nVlSTMG		:= (cAliasSD1)->D1_ICMSRET
												//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
												//³Ponto de entrada para retornar os valores de ICMS e ST nas notas de devolucao.           ³
												//³Necessario ao fato de que, quando devolvo uma NF de saida sem calculo de ICMS            ³
												//³ou ST, devera de alguma forma buscar os valores da nota de entrada da mercadoria vendida.³
												//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
												If lA940STMG
													aRetMG := Execblock("A940STMG",.F.,.F.,{cAliasSD1,;
															(cAliasSD1)->D1_FILIAL,;
															(cAliasSD1)->D1_DOC,;
															(cAliasSD1)->D1_SERIE,;
															(cAliasSD1)->D1_FORNECE,;
															(cAliasSD1)->D1_LOJA,;
															(cAliasSD1)->D1_TIPO})
													If Len(aRetMG) >= 5
														nBsIcmMG := aRetMG[01]
														nBSSTMG  := aRetMG[02]
														nAlIcmMG := aRetMG[03]
														nVlIcmMG := aRetMG[04]
														nVlSTMG  := aRetMG[05]
													Endif
												Endif

												FRT->FRT_BSICM	+=	nBsIcmMG
												FRT->FRT_BRICMS	+=	nBSSTMG
												FRT->FRT_ALQICM	:=	nAlIcmMG

												If nBSSTMG > 0
													FRT->FRT_ALIQST	:=	Iif(SB1->B1_PICM == 0,GetMV("MV_ICMPAD"),SB1->B1_PICM)
												Endif
												FRT->FRT_VALICM += nVlIcmMG
												FRT->FRT_VALST	+= nVlSTMG
												
												FRT->FRT_MES  	:= .T.
												FRT->(MsUnlock())
											Endif
										Endif
									EndIf
									//
									If lMta56E
										Execblock("MTA56E",.F.,.F., {cAliasSD1, StrZero(nItem,3)})
									EndIf
								EndIf
								//
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Somente SEF - Grava na Entrada Reg. 54 Modelos 01,06,21 e 22 ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If R54->A54_NUMITE <> "997"
									
									If ((lSef) .And. AModNot(aArrayF3[1][7])$"01/04/06/21/22/55") .Or. ;
										(!lSef .And. AModNot(aArrayF3[1][7])$"01/04/55" .And. Empty((cAliasSD1)->D1_TEC)) .Or.;
										(lGeraSd1 .And. AModNot(aArrayF3[1][7])$"01/55" .And. !cMV_ESTADO $ "MS/SP") .Or.;
									    (lValPR .And. AModNot(aArrayF3[1][7])$"22") 

										If R75->(!dbSeek(cSeek)) .AND. !(AllTrim(R54->A54_CFOP) $ cCfoNEcf)
											RecLock("R75",.T.)
											R75->A75_CTARE	:=	cContrTare
											R75->A75_DTAINI	:=	dDTIni
											R75->A75_DTAFIM	:=	dDTFim
											A940LoadPro("E",@cNcm,@cProd,(cAliasSD1)->D1_TEC,lSef,@cDescPe,@lPMen15,@lPMai14)
											R75->A75_PROD	:=cProd
											R75->A75_PRORI	:=SB1->B1_COD
											R75->A75_CODNCM	:=cNcm
											R75->A75_CODBAR   := SB1->B1_CODBAR
											R75->A75_VEREAN   := SB1->B1_VEREAN
											If !Empty((cAliasSD1)->D1_TEC) .And. lGeraSwn
												R75->A75_DESCR	:=	(cAliasSD1)->D1_COD
												R75->A75_UM    	:=	(cAliasSD1)->D1_UM
												R75->A75_ALQIPI	:=	(cAliasSD1)->D1_IPI
											Else
												R75->A75_DESCR	:=	cDescPe
												R75->A75_UM    	:=	SB1->B1_UM
												R75->A75_ALQIPI	:=	SB1->B1_IPI
											EndIf
											R75->A75_ALQICM := RetAliqICM(nAliqICM)
											If lSef
												If (cAliasSD1)->D1_ICMSRET > 0 //Substituicao Tributaria
													R75->A75_BRICMS := nBRetido
												Else
													R75->A75_BRICMS := 0
												Endif
											Else
												R75->A75_BRICMS := nBRetido //Base do Retido
											Endif

											R75->A75_FILIAL := IIF (lModoComp ,"",FWCodFil())
											R75->A75_SITTRI := cSitTrib
											R75->A75_REDBSE := nRedBase //Reducao da Base do ICMS
											R75->(MsUnlock())
										Endif
									Endif

									If !lAglutinou
										nItem ++
									EndIF
								Endif

								//Sintegra do MS precisa agrupar os Registros 8801 e 8802
						    	//Conforme Manual de Integração (esses registros devem ser agrupados por CFOP e Operação (Entrada/Saida))
						    	//Porém existem campos como UF/ UM / PRODUTO/ CFOP e ALIQUOTA que nao podem ser agrupados e por isso fazem parte da chave
					    	  	If !I88->(MsSeek (SB1->B1_COD+(cAliasSD1)->D1_CF+cTranspEst+SB1->B1_UM+Str ((cAliasSD1)->D1_PICM, 5, 2)))
						    		RecLock("I88",.T.)
						    		I88->I88_PRODUT		:= SB1->B1_COD
						    		I88->I88_CFOP		:= (cAliasSD1)->D1_CF
						    		I88->I88_UF			:= cTranspEst
						    		I88->I88_UM			:= SB1->B1_UM
						    		I88->I88_ALQICM		:= (cAliasSD1)->D1_PICM
						    	Else
						    		RecLock("I88",.F.)
						    	EndIf
					    		I88->I88_QUANT		+= (cAliasSD1)->D1_QUANT
					    		I88->I88_VALTOT		+= (cAliasSD1)->D1_TOTAL
					    		I88->I88_BSICM		+= (cAliasSD1)->D1_BASEICM
					    		I88->I88_VALICM		+= (cAliasSD1)->D1_VALICM
							   //Cliente MMX que necessitar utilizar ao inves da SB5 a SF4
								If Left(cIncFis,2)=="F4" .And. nIncFis>0
									I88->I88_INCFIS := SF4->(FieldGet(nIncFis))
								EndIf
						    	I88->(MsUnLock())
		                 Endif
					        If lReg88
			                   If SF4->F4_ICMSDIF=="1"
							      //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							      //³ Verifica Fornecedor/Cliente                                            ³
							      //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							      If (SubStr((cAliasSD1)->D1_CF,1,1)<"5" .And. (cAliasSD1)->D1_TIPO$"BD") .Or.;
								     	(SubStr((cAliasSD1)->D1_CF,1,1)>="5" .And. (cAliasSD1)->D1_TIPO$"BD")
										dbSelectArea("SA1")
										dbSetOrder(1)
										SA1->(MsSeek(F3Filial("SA1",cAliasSF3)+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
									Else
										dbSelectArea("SA2")
										dbSetOrder(1)
										SA2->(MsSeek(F3Filial("SA2",cAliasSF3)+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
							      EndIf

							      If (Subs((cAliasSD1)->D1_CF,1,1)=="3") .And. !Empty(cD1_Di) .And. !Empty(cD1_Dtdi)
								     cDi   := cD1_Di
								     dDtdi := cD1_Dtdi
							      Else
								     cDi   := ""
								     dDtdi := ""
							      Endif

					  		      RecLock("R88",.T.)
							      R88->A88_TIPINF 	:= Iif((Subs((cAliasSD1)->D1_CF,1,1)<>"3"),"A","C")
							      R88->A88_INSEST 	:= Iif((cAliasSD1)->D1_TIPO$"DB",SA1->A1_INSCR,SA2->A2_INSCR)
							      R88->A88_DTEMIS 	:= (cAliasSD1)->D1_EMISSAO
							      R88->A88_UF     	:= Iif((cAliasSD1)->D1_TIPO$"DB",SA1->A1_EST,SA2->A2_EST)
							      R88->A88_MODELO 	:= AModNot((cAliasSF3)->F3_ESPECIE)
							      R88->A88_SERIE  	:= Alltrim(Subs((cAliasSD1)->D1_SERIE,1,2))
							      R88->A88_SDOC  	:= Alltrim(Subs(SerieNfID(cAliasSD1,2,"D1_SERIE"),1,2))
							      R88->A88_NTFISC 	:= (cAliasSD1)->D1_DOC 
							      R88->A88_VALPRO 	:= (cAliasSD1)->D1_TOTAL
							      R88->A88_VALICM 	:= (cAliasSD1)->D1_VALICM
							      R88->A88_DECLIM 	:= If(Empty(cDi),0,(cAliasSD1)->&cDi)
							      R88->A88_DTDI    := If(Empty(dDtdi),CTOD("//"),(cAliasSD1)->&dDtdi)
							      R88->A88_DESCPR 	:= SB1->B1_DESC 
							      R88->(MsUnlock())

							  Endif

							Endif

							If lGimPB .And. lGera18
								If SubStr(aArrayF3[1][5],1,1) $ "1/2"
									If (SF4->F4_COMPL == "S" .And. aArrayF3[1][11]>0 .And. SA2->A2_EST <> "PB")	
										aReg8818[1] += aArrayF3[1][35]
									Endif
									If (aArrayF3[1][34] == "1" .And. aArrayF3[1][11]>0 .And. SA2->A2_EST <> "PB")
										aReg8818[2] += aArrayF3[1][40]
									Endif
									aReg8818[3] += aArrayF3[1][17]
								Elseif SubStr(aArrayF3[1][5],1,1) == "3"
									aReg8818[4] += aArrayF3[1][16]
									aReg8818[3] += aArrayF3[1][17]
								Endif
								lGIMPB18 := .T.
							Endif
							dbSelectArea("SD2")
							SD2->(DbSetOrder(3))
							SD2->(MsSeek(xFilial("SD2")+(cAliasSD1)->D1_NFORI+(cAliasSD1)->D1_SERIORI))
							DbSelectArea("SL1")
							SL1->(DbSetOrder(2))
							If SL1->(MsSeek(xFilial ("SL1")+SD2->D2_SERIE+SD2->D2_DOC+SD2->D2_PDV)) .And. lGera88DV
								RecLock("RDV",.T.)
								RDV->DV_DTEMIS	:= (cAliasSD1)->D1_EMISSAO
								RDV->DV_SERIE		:= Alltrim((cAliasSD1)->D1_SERIE)
								RDV->DV_SDOC		:= Alltrim(SerieNfId(cAliasSD1,2,"D1_SERIE"))
								RDV->DV_NF   		:= Alltrim((cAliasSD1)->D1_DOC)
								RDV->DV_COO 		:= Alltrim((cAliasSD1)->D1_NFORI)
								RDV->DV_DTEMCOO 	:= SD2->D2_EMISSAO
								RDV->DV_NUMITEM 	:= Val((cAliasSD1)->D1_ITEMORI)
								RDV->DV_CODPROD 	:= (cAliasSD1)->D1_COD
								RDV->DV_QNTPROD 	:= (cAliasSD1)->D1_QUANT
								RDV->DV_SERECF 	:= SL1->L1_SERPDV
								RDV->DV_CNPJ     	:= cCNPJOri
								RDV->DV_VUNIT  	:= (cAliasSD1)->D1_VUNIT
								RDV->DV_VALBASE  	:= (cAliasSD1)->D1_BASEICM
								RDV->DV_VALICMS 	:= (cAliasSD1)->D1_VALICM
								RDV->(MsUnlock())
							Endif
						Endif
						(cAliasSD1)->(dbSkip())
					EndDo
					If lQuery
						dbSelectArea(cAliasSD1)
						dbCloseArea()
					Endif
				Else
					dbSelectArea("SF2")
					SF2->(dbSetOrder(1))
					SF2->(MsSeek(F3Filial("SF2",cAliasSF3)+aArrayF3[1][1]+aArrayF3[1][2]+aArrayF3[1][3]+aArrayF3[1][4]))

					lCompTare := Iif (lTareDf .And. AllTrim (SF2->F2_TIPO)$"CIP", .F., .T.)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Registro adicional para Frete,Seguro e Outras Despesas       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If SF2->(!Eof()) .And. AModNot(aArrayF3[1][7])$"01/04/55" .And. aArrayF3[1][6] <> "L"
						#IFDEF TOP
						If TcSrvType()<>"AS/400"
							cAliasSD2 := "a940ASD2"
							cQuery := "SELECT Sum(D2_VALFRE) as VALFRE, Sum(D2_SEGURO) as SEGURO, "
							cQuery += "Sum(D2_DESPESA) as DESPESA, Sum(D2_VALBRUT) as VALBRUT "
							cQuery += "FROM "+RetSqlName("SD2")+" "
							cQuery += "WHERE D2_FILIAL='"+xFilial("SD2")+"' AND "
							cQuery += "D2_DOC='"+SF2->F2_DOC+"' AND "
							cQuery += "D2_SERIE='"+SF2->F2_SERIE+"' AND "
							cQuery += "D2_CLIENTE='"+SF2->F2_CLIENTE+"' AND "
							cQuery += "D2_LOJA='"+SF2->F2_LOJA+"' AND "
							cQuery += "D2_CF NOT IN ('"+cCfoSint+"') AND "
							cQuery += "D_E_L_E_T_ = ' ' "
							cQuery := ChangeQuery(cQuery)
							dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD2,.T.,.T.)
						Else
						#ENDIF
							(cAliasSD2)->(MsSeek(xFilial("SD2")+SF2->F2_DOC+SF2->F2_SERIE+SF2->F2_CLIENTE+SF2->F2_LOJA))
						#IFDEF TOP
						EndIf
						#ENDIF

						if lQuery
							nFrete		:= (cAliasSD2)->VALFRE
							nSeguro		:= (cAliasSD2)->SEGURO
							nDespesa	:= (cAliasSD2)->DESPESA
							nComp		:= (cAliasSD2)->VALBRUT
							dbSelectArea(cAliasSD2)
							dbCloseArea()
						else
							dbSelectArea(cAliasSD2)
							Do While (cAliasSD2)->(!Eof()) .And.;
								(cAliasSD2)->(D2_DOC+D2_SERIE+D2_CLIENTE+D2_LOJA) == SF2->F2_DOC+SF2->F2_SERIE+SF2->F2_CLIENTE+SF2->F2_LOJA
								If Alltrim((cAliasSD2)->D2_CF) $ cCfoSint
									(cAliasSD2)->(dbSkip())
									Loop
								Else
									nFrete		+= (cAliasSD2)->D2_VALFRE
									nSeguro		+= (cAliasSD2)->D2_SEGURO
									nDespesa	+= (cAliasSD2)->D2_DESPESA
									nComp		+= (cAliasSD2)->D2_VALBRUT
								Endif
								(cAliasSD2)->(dbSkip())
							EndDo
						endif

						For nI := 1 to 6
							// Somente gera o item 993 quando o contribuinte destacar PIS/COFINS na nota fiscal - Sintegra
							If nI == 4 .And. MV_PAR22 <> 1 .And. !lGimPB
								Loop
							Endif
							If nI == 4
								aRelImp2   := MaFisRelImp("MT100",{ "SF2" })
								nPsVlPisSa := 0
								nValPis    := 0
								nValCof    := 0
								If !Empty(nScanPis := aScan(aRelImp2,{|x| x[1]=="SF2" .And. x[3]=="NF_VALPS2"}))
									cCpVlPisSa := aRelImp2[nScanPis,2]
									nPsVlPisSa := SF2->(FieldPos(cCpVlPisSa))
								EndIf
								If !Empty(nPsVlPisSa)
									nValPis := SF2->(FieldGet(nPsVlPisSa))
								EndIf
								If !Empty(nScanCof := aScan(aRelImp2,{|x| x[1]=="SF2" .And. x[3]=="NF_VALCF2"}))
									If !Empty(SF2->(FieldPos(aRelImp2[nScanCof,2])))
										nValCof := SF2->(FieldGet(SF2->(FieldPos(aRelImp2[nScanCof,2]))))
									EndIf
								EndIf
							Endif
				    		If (nI == 1 .And. SF2->F2_FRETE > 0) .Or.;
				    		   (nI == 2 .And. SF2->F2_SEGURO > 0) .Or.;
							   (nI == 3 .And. SF2->F2_DESPESA > 0) .Or.;
							   (nI == 4 .And. nValPis+nValCof > 0) .Or.;
	   						   (nI == 5 .And. SF2->F2_TIPO $ "CIP" .And. !lMVSINTIPC) .Or.;
	   						   (nI == 6 .And. SF2->F2_VALISS > 0 .And. !lConv76 .And. !lTareDf)

								dbSelectArea("R54")
					        	If (!lSef .And. !ALLTRIM(aArrayF3[1][5]) $ cCfoSint) .Or. (lSef .And. !ALLTRIM(aArrayF3[1][5]) $ cMv54Sef ) 
									If !MsSeek(cCNPJ+aArrayF3[1][2]+aArrayF3[1][1]+IIf(nI==1,"991",If(nI==2,"992",If(nI==3,"999",If(nI==4,"993",If(nI==5,"997","998"))))));
										.AND. ! (AllTrim(aArrayF3[1][5]) $ cCfoNEcf)
									  RecLock("R54",.T.)
									  R54->A54_CTARE	:=	cContrTare
									  R54->A54_CNPJ		:=	cCNPJ
									  R54->A54_MODELO 	:=	AModNot(aArrayF3[1][7])	
									  R54->A54_SERIE  	:=	aArrayF3[1][2]
									  R54->A54_SDOC  	:=	aArrayF3[1][42]
									  R54->A54_NFISC  	:=	aArrayF3[1][1]
								  	  R54->A54_CFOP		:=	aArrayF3[1][5]
         						     R54->A54_CST	    :=  Pad("",3)
									  R54->A54_NUMITE	:=  IIf(nI==1,"991",If(nI==2,"992",If(nI==3,"999",If(nI==4,"993",If(nI==5,"997","998"))))) //Numero do Item (991-Frete;992 -Seguro;999-Outras despesas acessorias;993-PIS/COFINS;997-Compl.Preco/ICMS;998-Servicoes Nao Tributados)
									  R54->A54_QUANT  	:=  IIf(lSef,1,0)
									  R54->A54_CNORI  	:=  cCNPJOri
 				        			  R54->A54_FILIAL	:=  IIF (lModoComp ,"",FWCodFil())

									  If lSef 
										 // Os itens 991/992/993/998/999 nao devem ser apresentados com CFOP e nem
										 // com codigo do produto no registro 54 do SEF.
										 If R54->A54_NUMITE $ "991/992/993/998/999"
											R54->A54_CFOP	:= "0000"
											If R54->A54_NUMITE == "998"
												R54->A54_PRODUT := ""
											Endif
										 Else
											R54->A54_PRODUT	:= SefProd54(aArrayF3,cAliasSF3)
											R54->A54_PRORI	:= SefProd54(aArrayF3,cAliasSF3, 2)
												If R54->A54_NUMITE <> "997"  .Or. lSef	
													GrvReg75(aArrayF3,cAliasSF3,dDtIni,dDtFim,@lPMen15,@lPMai14,@cProdAnt)
												Endif
										 Endif
									  Endif
		                                   
									  //Alteracao efetuada apos consulta na Secretaria RS
									  //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									  //³REGISTRO ERRO                                                                        ³
									  //³                                                                                     ³
									  //³PARA OS CODIGOS ESPECIAIS QUANTIDADE (CAMPO 10) E VALOR DO PRODUTO (CAMPO 11)        ³
									  //³ DEVEM ESTAR ZERADOS E A INFORMACAO DEVE SER PREENCHIDA NO VALOR DESCONTAO / DESPESA ³
								  	  //³ ACESSORIOS (CAMPO 12 ).  REJEICAO                                                   ³
									  //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
  									  If GETMV("MV_ESTADO")$"RS/SP/RJ/PR"
	 								     R54->A54_QUANT  := 0
										 R54->A54_VALPRO  := 0
										 R54->A54_VALDES  := IIf(nI==1,SF2->F2_FRETE,If(nI==2,SF2->F2_SEGURO,If(nI==3,SF2->F2_DESPESA,If(nI==4,nValPis+nValCof,SF2->F2_VALBRUT))))
										 R54->A54_CST := ''
									  Else
								   		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³ CAMPO 11 - Valor do Produto	     				  	³
										//³ CAMPO 12 - Valor do Desconto / Despesa Acessoria	³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								   		R54->A54_VALPRO := IIf(nI==1,nFrete,If(nI==2,nSeguro,If(nI==3,nDespesa,If(nI==4,nValPis+nValCof,If(nI==6,SF2->F2_BASEISS,nComp)))))

									    If nI == 5 .And. R54->A54_VALPRO == 0 
									  		R54->A54_VALDES := Iif(SF2->F2_TIPO $ "P", aArrayF3[1][25], Iif(SF2->F2_TIPO $ "I", aArrayF3[1][16], R54->A54_VALPRO))
									    Else
									    	R54->A54_VALDES := R54->A54_VALPRO
									    Endif
									    nSeguro		:= 0
									    nFrete 		:= 0
									    nSeguro 	:= 0
									    nDespesa 	:= 0
									    nComp 		:= 0
									  EndIf

										SD2->(DbSetOrder(3))
										SD2->(MsSeek(F3Filial("SD2")+aArrayF3[1][1]+aArrayF3[1][2]+aArrayF3[1][3]+aArrayF3[1][4]))
										SF4->(MsSeek(F3Filial("SF4",cAliasSF3)+ SD2->D2_TES))

									  If lSef
		                               	 R54->A54_ALQICM  := aArrayF3[1][8]
									  ElseIf (SF2->F2_TIPO$"CI" .And. lTareDf)
										 R54->A54_ALQICM	:=	SD2->D2_PICM
									  Else
		                               	 R54->A54_ALQICM  := IIf(nI<=4,aArrayF3[1][8],0)
									  Endif
		
									  If lSef .And. SF2->F2_TIPO$"C" .And. nI==5
									 	 R54->A54_BSICM  := SD2->D2_BASEICM
									  Else 
									      //No layout o item 14.1.8.1 diz que o Campo 13 - Base de Cálculo do ICMS deve ser preenchido com o valor
									      //da base de cáculo de ICMS quando não se tratar de operação ou prestação com substituição.
									      If Empty(SD2->D2_ICMSRET)
							     			If !SF4->F4_LFICM $ "IONZ"
										  		R54->A54_BSICM  := SD2->D2_BASEICM
										  		If nI==5 .And. !lSef //Coloco essa validação para não sobrepor as validações que foram colocadas anteriormente	 	
													R54->A54_ALQICM	:= SD2->D2_PICM
												EndIf	
											EndIf	
										  EndIf
									  Endif

									  //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									  //³ Implementacao do SEF PE                           ³
									  //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									  R54->A54_IE	  	:= 	cIE
									  R54->A54_EMISS	:= 	SF2->F2_EMISSAO
									  R54->A54_UF 		:= 	cTranspEst

									  //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									  //³ Implementacao do PRODEPE                          ³
									  //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									  If lSef .And. Val(aRetCfp[19][1]) == 1		//Industria
										 aProdepe 		:= Prodepe(SefProd54(aArrayF3,cAliasSF3,2),cAliasSF3)
										 R54->A54_APUR	:= aProdepe[1]			//Codigo da Apuracao
										 R54->A54_INDESP := aProdepe[2]			//Indicador Especial
										 If aProdepe[1] > 1
											SefRegX35(aProdepe[1])					//Processa Registro 88-35-00
										 Endif
	       							  Endif

										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³Implementacao do FUNCEP/PB³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										If lGimPB
											R54->A54_FUNCEP := cFuncep
										Endif

									  If lSintMG .And. nI==5 .And. aArrayF3[1][29]>0 .And. SF2->F2_TIPO$"C"
									  	  SD2->(DbSetOrder(3))
  								 	 	  SD2->(MsSeek(F3Filial("SD2")+aArrayF3[1][1]+aArrayF3[1][2]+aArrayF3[1][3]+aArrayF3[1][4]))
  								 	 	  SB1->(DbSetOrder(1))
  										  SB1->(MsSeek(xFilial("SB1")+SD2->D2_COD))
  										  SF4->(DbSetOrder(1))
  										  SF4->(MsSeek(xFilial("SF4")+SD2->D2_TES))
										  //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										  //³Situacao Tributaria ³
										  //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										  If Empty( SD2->D2_CLASFIS )
										    cSitTrib 	:= 	aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB),3,0),3)
										  Else
											cSitTrib := Alltrim( SD2->D2_CLASFIS )
											cSitTrib := StrZero( Val(cSitTrib), 3)
									      EndIf
									      A940LoadPro("S",@cNcm,@cProd,,lSef,@cDescPe,@lPMen15,@lPMai14)

							    		  R54->A54_PRODUT	:=	cProd

											If Substr(aArrayF3[1][5],1,1) >= "5" 
												If lSimpNac .And. SA1->A1_SIMPNAC$"1"
													R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr)
												Else
													R54->A54_CST := "000"
												Endif
											Endif
											If Substr(aArrayF3[1][5],1,1) < "5"
												If SA2->A2_SIMPNAC$"1" .And. SF4->F4_CSOSN<>""
													R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr)
												Else
													R54->A54_CST := cSitTrib
												Endif
											Endif

  									 	  R54->A54_DTEMI 	:= aArrayF3[1][18]  // Data da Emissao 
										  R54->A54_ALIQST	:= aArrayF3[1][8]
										  R54->A54_BRICMS	+= aArrayF3[1][29]
										  If lR54IPI
	   									     R54->A54_VALIPI	+=  If(SF4->F4_IPI=="R",0.00,aArrayF3[1][25])
										  Else
										     R54->A54_VALIPI	+=  aArrayF3[1][25]
										  Endif
									  EndIf

										//Cliente MMX que necessitar utilizar ao inves da SB5 a SF4
										If lSintMS .And. Left(cIncFis,2)=="F4" .And. nIncFis>0
											SF4->(DbSetOrder(1))
											SF4->(MsSeek(xFilial("SF4")+SD2->D2_TES))
											R54->A54_INCFIS := SF4->(FieldGet(nIncFis))
										EndIf

										R54->(MsUnlock())
									Endif
								Endif
							Endif
							If (nI == 6 .And. SF2->F2_VALISS > 0 .And. lConv76)
								R54NFServ (	aArrayF3,aArrayF3[1][1],aArrayF3[1][2],aArrayF3[1][3],aArrayF3[1][4],;
											cContrTare,cCNPJ,lCONV76,dDtIni,lSef,lValidaPr,cCNPJOri,lTareDf,cIE,;
											cTranspEst,lGimPB,cFuncep,aProdepe,cAliasSF3)
							Endif
						Next

					EndIf

					SD2->( dbSetOrder(3) )

					#IFDEF TOP
						If TcSrvType()<>"AS/400"
							cAliasSD2 := "a940ASD2"
							aStru  := SD2->(dbStruct())
							cQuery := "SELECT "
							cQuery += "D2_FILIAL,D2_ITEM,D2_ITEMORI,D2_SERIORI, D2_NFORI,D2_CF,D2_COD,D2_TES,D2_TIPO,D2_CLASFIS,D2_BASEICM,D2_DESCON,"
							cQuery += "D2_ICMSRET,D2_PICM,D2_TOTAL,D2_DESCICM,D2_BRICMS,D2_VALIPI,D2_QUANT,D2_VALICM,"
							cQuery += "D2_DOC,D2_SERIE,D2_CLIENTE,D2_LOJA,D2_EMISSAO,D2_VALISS,D2_IPI,D_E_L_E_T_ AS DELSD2  "

							If SerieNfId("SD2",3,"D2_SERIE") == "D2_SDOC"
								cQuery += ",D2_SDOC"
							EndIf

							cQuery += "FROM "+RetSqlName("SD2")+" "
							cQuery += "WHERE D2_FILIAL='"+F3Filial("SD2",cAliasSF3)+"' AND "
							cQuery += "D2_DOC='"+aArrayF3[1][1]+"' AND "
							cQuery += "D2_SERIE='"+aArrayF3[1][2]+"' AND "
							cQuery += "D2_CLIENTE='"+aArrayF3[1][3]+"' AND "
							cQuery += "D2_LOJA='"+aArrayF3[1][4]+"' AND "
							cQuery += "D2_CF NOT IN('000','999','0000','9999') AND "
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Indica se o item 997 das NF de Complemento, deverao  |
							//|acompanhar a quantidade de itens da NF (reg. tipo 54)³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If !lMVSINTIPC
								// Notas Fiscais de Complemento devem gerar apenas o 54 especifico (997)
								cQuery += "D2_TIPO NOT IN ('I','P','C') AND "
							EndIf

							If MV_PAR21==1
								cQuery += "(D2_CF LIKE '6%') AND D2_ICMSRET>0 AND "
							ElseIf MV_PAR21==2
								cQuery += "(D2_CF LIKE '6%') AND "
							Else
								cQuery += "(D2_CF LIKE '5%' OR D2_CF LIKE '6%' OR D2_CF LIKE '7%') AND "
							EndIf

							cQuery += "D_E_L_E_T_ = ' ' "
							cQuery += "ORDER BY "+SqlOrder(SD2->(IndexKey()))

							cQuery := ChangeQuery(cQuery)
							dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD2,.T.,.T.)
							For nX := 1 To len(aStru)
								If aStru[nX][2] <> "C"
									TcSetField(cAliasSD2,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
								EndIf
							Next nX
							dbSelectArea(cAliasSD2)
						Else
					#ENDIF
						(cAliasSD2)->( MsSeek(F3Filial("SD2",cAliasSF3)+aArrayF3[1][1]+aArrayF3[1][2]+aArrayF3[1][3]+aArrayF3[1][4]))

					#IFDEF TOP
						EndIf
					#ENDIF

					nItem := 1

					While (cAliasSD2)->(!Eof()).And. (cAliasSD2)->D2_FILIAL+(cAliasSD2)->D2_DOC+(cAliasSD2)->D2_SERIE+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA== ;
						F3Filial("SD2",cAliasSF3)+aArrayF3[1][1]+aArrayF3[1][2]+aArrayF3[1][3]+aArrayF3[1][4] .And. lCompTare

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄT¿
						//³Apenas os registros 61 e 61R devem tratar de documentos lancados em lote³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄTÙ
						If aArrayF3[1][6] == "L" .And. !AModNot(aArrayF3[1][7])$"02/04"
							(cAliasSD2)->(dbSkip())
							Loop
						Endif

						If !lQuery .And. Left((cAliasSD2)->D2_CF,3) $ "000/999"
							(cAliasSD2)->(dbSkip())
							Loop
						Endif

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Apenas os itens que sao combustiveis deverao constar, quando for CAT95  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lConv76 .And. lGRF_CBT
							SB5->(DbSetOrder(1))
							If SB5->(MsSeek(xFilial("SB5")+(cAliasSD2)->D2_COD))
								If aScan(aGRF_CBT, SB5->(FieldGet(nMV_CAT95))) == 0
									(cAliasSD2)->(dbSkip())
									Loop
								Endif
							Else
								(cAliasSD2)->(dbSkip())
								Loop
							Endif
						Endif

						SF4->(MsSeek(F3Filial("SF4",cAliasSF3)+(cAliasSD2)->D2_TES))
						SB1->(MsSeek(F3Filial("SB1",cAliasSF3)+(cAliasSD2)->D2_COD))
						A940LoadPro("S",@cNcm,@cProd,,lSef,@cDescPe,@lPMen15,@lPMai14)
						
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Nao ser gerado Reg. 54 para Notas de Complementos  ³
						//³Devem gerar apenas o registro 54 especifico (997)  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If (cAliasSD2)->D2_TIPO $ "IPC" .And. !lMVSINTIPC //I-ICMS P-IPI C-Preco
							(cAliasSD2)->(dbSkip())
							Loop
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Tratamento implementado para gravar os itens das notas fiscais de complemento conforme forem emitidos na nota fiscal.³
						//³   Ex: Se possuir uma nota fiscal de complemento de preco com dois itens deverao ser enviados estes dois itens no    ³
						//³          com o codigo 997. Para que este tratamento seja contemplado eh necessario habilitar o parametro MV_SINTIPC.³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						ElseIf (cAliasSD2)->D2_TIPO $ "IPC" .And. lMVSINTIPC .AND. !(AllTrim((cAliasSD2)->D2_CF) $ cCfoSint )	//I-ICMS P-IPI C-Preco
							RecLock("R54",.T.)
							R54->A54_CTARE		:=	cContrTare
							R54->A54_CNPJ		:=	cCNPJ
							R54->A54_MODELO 	:=	AModNot(aArrayF3[1][7])	
							R54->A54_SERIE  	:=	aArrayF3[1][2]
							R54->A54_SDOC  	:=	aArrayF3[1][42]
							R54->A54_NFISC  	:=	aArrayF3[1][1]
							R54->A54_CFOP		:=	(cAliasSD2)->D2_CF
							R54->A54_CST     	:=  Pad("",3)
							R54->A54_NUMITE		:= 	"997"
							R54->A54_QUANT  	:= 	IIf(lSef,1,0)
							R54->A54_CNORI  	:= 	cCNPJOri
							R54->A54_FILIAL		:=  IIF (lModoComp ,"",FWCodFil())

							If lSef
								// Os itens 991/992/993/998/999 nao devem ser apresentados com CFOP e nem
								// com codigo do produto no registro 54 do SEF.
								If R54->A54_NUMITE $ "991/992/993/998/999"
									R54->A54_CFOP	:= "0000"
									If R54->A54_NUMITE == "998"
										R54->A54_PRODUT := ""
									Endif
								Else
									// Base de ICMS no item de complemento de preco/frete
									If R54->A54_NUMITE $ "997"
										R54->A54_BSICM  := (cAliasSD2)->D2_BASEICM
									Endif
									R54->A54_PRODUT	:= cProd
									R54->A54_PRORI	:= (cAliasSD2)->D2_COD
									If R54->A54_NUMITE <> "997" .Or. lSef
										GrvReg75(aArrayF3,cAliasSF3,dDtIni,dDtFim,@lPMen15,@lPMai14,@cProdAnt)
									Endif
								Endif
							Else
								//No layout o item 14.1.8.1 diz que o Campo 13 - Base de Cálculo do ICMS deve ser preenchido com o valor
								//da base de cáculo de ICMS quando não se tratar de operação ou prestação com substituição.
								If Empty((cAliasSD2)->D2_ICMSRET)
									If !SF4->F4_LFICM $ "IONZ"
										R54->A54_BSICM  := (cAliasSD2)->D2_BASEICM
										R54->A54_ALQICM := (cAliasSD2)->D2_PICM
									EndIf
								EndIf
							Endif

							//Alteracao efetuada apos consulta na Secretaria RS
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³REGISTRO ERRO                                                                        ³
							//³                                                                                     ³
							//³PARA OS CODIGOS ESPECIAIS QUANTIDADE (CAMPO 10) E VALOR DO PRODUTO (CAMPO 11)        ³
							//³ DEVEM ESTAR ZERADOS E A INFORMACAO DEVE SER PREENCHIDA NO VALOR DESCONTAO / DESPESA ³
							//³ ACESSORIOS (CAMPO 12 ).  REJEICAO                                                   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If GETMV("MV_ESTADO")=="RS"
								R54->A54_QUANT  := 0
								R54->A54_VALPRO := 0
								R54->A54_VALDES := (cAliasSD2)->D2_TOTAL
							Else
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ CAMPO 11 - Valor do Produto	     				  	³
								//³ CAMPO 12 - Valor do Desconto / Despesa Acessoria	³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								R54->A54_VALPRO := (cAliasSD2)->D2_TOTAL + (cAliasSD2)->D2_DESCICM

								If R54->A54_VALPRO == 0
									R54->A54_VALDES := Iif(SF2->F2_TIPO $ "P", aArrayF3[1][25], Iif(SF2->F2_TIPO $ "I", aArrayF3[1][16], R54->A54_VALPRO))
								Else
									R54->A54_VALDES := R54->A54_VALPRO
								Endif
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Implementacao do SEF PE                           ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							R54->A54_IE	  	:= cIE
							R54->A54_EMISS	:= (cAliasSD2)->D2_EMISSAO
							R54->A54_UF 	:= cTranspEst
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Implementacao do PRODEPE                          ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lSef .And. Val(aRetCfp[19][1]) == 1		//Industria
								aProdepe 			:= Prodepe((cAliasSD2)->D2_COD,cAliasSF3)
								R54->A54_APUR  		:= aProdepe[1]			//Codigo da Apuracao
								R54->A54_INDESP     := aProdepe[2]			//Indicador Especial 
								If aProdepe[1] > 1
									SefRegX35(aProdepe[1])					//Processa Registro 88-35-00
								Endif
							Endif
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Implementacao do FUNCEP/PB³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lGimPB
								R54->A54_FUNCEP := cFuncep
							Endif

							If lSintMG  .And. aArrayF3[1][29]>0 .And. (cAliasSD2)->D2_TIPO$"C"
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Situacao Tributaria ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If Empty( (cAliasSD2)->D2_CLASFIS )
									cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB),3,0),3)
								Else
									cSitTrib := Alltrim( (cAliasSD2)->D2_CLASFIS )
									cSitTrib := StrZero( Val(cSitTrib), 3)
								EndIf

								If Substr(aArrayF3[1][5],1,1) >= "5"
									If lSimpNac .And. SA1->A1_SIMPNAC$"1"
										R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr)
									Else
										R54->A54_CST := "000"
									Endif
								Endif
								If Substr(aArrayF3[1][5],1,1) < "5"
									If SA2->A2_SIMPNAC$"1" .And. SF4->F4_CSOSN<>""
										R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr)
									Else
										R54->A54_CST := cSitTrib
									Endif
								Endif

  								R54->A54_DTEMI 	:= (cAliasSD2)->D2_EMISSAO
								R54->A54_ALIQST	:= (cAliasSD2)->D2_PICM
								R54->A54_BRICMS	+= (cAliasSD2)->D2_BRICMS
								If lR54IPI
									R54->A54_VALIPI += If(SF4->F4_IPI=="R",0.00,(cAliasSD2)->D2_VALIPI)
								Else
									R54->A54_VALIPI += (cAliasSD2)->D2_VALIPI
								Endif
							Endif

							//Cliente MMX que necessitar utilizar ao inves da SB5 a SF4
							If lSintMS .And. Left(cIncFis,2)=="F4" .And. nIncFis>0
								R54->A54_INCFIS := SF4->(FieldGet(nIncFis))
							EndIf

							R54->(MsUnLock())

							//Sintegra do MS precisa agrupar os Registros 8801 e 8802
							//Conforme Manual de Integração (esses registros devem ser agrupados por CFOP e Operação (Entrada/Saida))
							//Porém existem campos como UF/ UM / PRODUTO/ CFOP e ALIQUOTA que nao podem ser agrupados e por isso fazem parte da chave
							If !I88->(MsSeek (SB1->B1_COD+(cAliasSD2)->D2_CF+cTranspEst+SB1->B1_UM+Str ((cAliasSD2)->D2_PICM, 5, 2)))
								RecLock("I88",.T.)
								I88->I88_PRODUT		:= SB1->B1_COD
								I88->I88_CFOP		:= (cAliasSD2)->D2_CF
								I88->I88_UF			:= cTranspEst
								I88->I88_UM			:= SB1->B1_UM
								I88->I88_ALQICM		:= (cAliasSD2)->D2_PICM
							Else
								RecLock("I88",.F.)
							EndIf
							I88->I88_QUANT		+= (cAliasSD2)->D2_QUANT
							I88->I88_VALTOT		+= (cAliasSD2)->D2_TOTAL
							I88->I88_BSICM		+= (cAliasSD2)->D2_BASEICM
							I88->I88_VALICM		+= (cAliasSD2)->D2_VALICM
							//Cliente MMX que necessitar utilizar ao inves da SB5 a SF4
							If Left(cIncFis,2)=="F4" .And. nIncFis>0
								I88->I88_INCFIS := SF4->(FieldGet(nIncFis))
							EndIf
							I88->(MsUnLock())

							(cAliasSD2)->(dbSkip())
							Loop
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Verifica a referencia do item no SF3, para checar o credito ST ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If SF4->F4_LFICM $ "IONZ" //Quando é uma Nota de ICMS (Outros, Isento, Não Tributado ou Zerado) a referência do SF3 somente é encontrada com aliquota 0
							nPos := aScan(aArrayF3,{|x| x[1]==(cAliasSD2)->D2_DOC .And. x[2]==(cAliasSD2)->D2_SERIE .And. x[3]==(cAliasSD2)->D2_CLIENTE .And. x[4]==(cAliasSD2)->D2_LOJA .And. x[5]==(cAliasSD2)->D2_CF .And. x[8]==0})
						Else
							nPos := aScan(aArrayF3,{|x| x[1]==(cAliasSD2)->D2_DOC .And. x[2]==(cAliasSD2)->D2_SERIE .And. x[3]==(cAliasSD2)->D2_CLIENTE .And. x[4]==(cAliasSD2)->D2_LOJA .And. x[5]==(cAliasSD2)->D2_CF .And. x[8]==(cAliasSD2)->D2_PICM})
						EndIf
						If SF4->F4_LFICM <> "N" .And. (cAliasSD2)->D2_TOTAL > 0
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Verifica se o produto faz parte do FUNCEP/PB                  ³
							//³Fundo de Combate e Erradicacao da Pobreza do Estado da Paraiba³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lGimPB
								cFuncep := ""
								SB5->(dbSetOrder(1))
								If SB5->(dbSeek(F3Filial("SB5",cAliasSF3)+(cAliasSD2)->D2_COD)) .And. lB5Funcep
									cFuncep := SB5->B5_FUNCEP
								Endif
							Endif
							nPosAliq := 0
							nAliqIte := 0
							cSitTrib := ""
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Processo utilizado para atribuir os valores de Base de Icms e³
							//³Aliquota de Icms ao Registro 54 conforme Registro 50.        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If (!lSef .And. !ALLTRIM((cAliasSD2)->D2_CF)$cCfoSint) .Or. (lSef .And. !ALLTRIM((cAliasSD2)->D2_CF) $ cMv54Sef).And. ;
								AModNot(aArrayF3[1][7])$"01/02/04/21/22/55/65"
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Monta Registro Tipo 75³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								nAliqICM := SuperGETMV("MV_ICMPAD")

								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Situacao Tributaria ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If Empty((cAliasSD2)->D2_CLASFIS)
									cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB),3,0),3)
								Else
									cSitTrib := Alltrim((cAliasSD2)->D2_CLASFIS)
									cSitTrib := StrZero( Val(cSitTrib), 3)
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³% de Reducao do ICMS nas Operacoes Internas³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								dbSelectArea("SF7")
								SF7->(dbSetOrder(1))
								SF7->(MsSeek (xFilial("SF7")+SB1->B1_GRTRIB))

								nRedBase   := 0
								nAliqExtF7 := 0 //Aliquota de ICMS externa - Exceção Fiscal
								If SF4->F4_BASEICM >=100
									nRedBase :=0
								ElseIf SF4->F4_BASEICM > 0
									nRedBase := (100-SF4->F4_BASEICM)
								ElseIf SB1->B1_GRTRIB <> " "
									nRedBase   := SF7->F7_BASEICM
									nAliqExtF7 := SF7->F7_ALIQEXT
								Else
									nRedBase := SF4->F4_BASEICM
								Endif

								cSeek	:= (dtos(dDtIni)+dtos(dDtFim)+PADR(cProd,14)+PADR(cNcm,8)+SB1->B1_UM+space(4))
								lServico := (!Empty((cAliasSD2)->D2_VALISS))	//Verifica se o item eh um Servico
								lGerouR54 := .F.

								If (AModNot(aArrayF3[1][7])$"01/04/55" .And. !lServico) .AND. !(AllTrim((cAliasSD2)->D2_CF) $cCfoNEcf)

									nAliqIte  := (cAliasSD2)->D2_PICM
									If !SF4->F4_ISS $ "N "
										nAliqIte  := 0
									ElseIf SF4->F4_LFICM $ "IOZ" .And. nRedBase > 0 .And. SF4->F4_CONSUMO $ "SO"
										nAliqIte  := 0
									ElseIf SF4->F4_LFICM $ "IZ" .And. nRedBase == 0
										nAliqIte  := 0
									ElseIf SF4->F4_LFICM $ "O" .And. SF4->F4_MKPSOL = "1" .And. SF4->F4_MKPCMP = "1" .And. lValPR
										nAliqIte  := 0
									Endif
									nPosAliq := Ascan(aArrayF3,{|x| x[5]==(cAliasSD2)->D2_CF .AND. (x[8]==(cAliasSD2)->D2_PICM .Or. x[8]==0)})

									If (lAglR54 .And. !R54->(MsSeek (cCNPJ+aArrayF3[1][2]+aArrayF3[1][1]+cProd+Str (Iif (nPosAliq>0, aArrayF3[nPosAliq][8], 0), 5, 2)))) .Or. !(lAglR54);
										.AND. !(AllTrim((cAliasSD2)->D2_CF) $cCfoNEcf)

										lAglutinou := .F.

										If  aArrayF3[nPosAliq][8] == 0 .And. lMVALIQR50
											nAliqICM := SB1->B1_PICM
										Else
											If cMV_ESTADO $ "MG".and. !Empty((cAliasSD2)->D2_PICM)
												nAliqICM:= (cAliasSD2)->D2_PICM
											Else
												nAliqICM := aArrayF3[nPosAliq][8]
											Endif
										EndIf

										lGerouR54  := .T.
										RecLock("R54",.T.)
										R54->A54_CTARE	:=	cContrTare
										R54->A54_CNPJ	:=	cCNPJ
										R54->A54_MODELO	:=	AModNot(aArrayF3[1][7])
										R54->A54_SERIE	:=	(cAliasSD2)->D2_SERIE
										R54->A54_SDOC	:=	SerieNfId(cAliasSD2,2,"D2_SERIE")
										R54->A54_NFISC	:=	(cAliasSD2)->D2_DOC
										R54->A54_CFOP	:=	(cAliasSD2)->D2_CF

										If Substr(aArrayF3[1][5],1,1) >= "5" 
											If   lSimpNac .And. SA1->A1_SIMPNAC$"1"
												R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr)
											Else
												R54->A54_CST := Iif(Len(AllTrim((cAliasSD2)->D2_CLASFIS)) == 3, (cAliasSD2)->D2_CLASFIS, "000") 
											Endif
										Endif
										If Substr(aArrayF3[1][5],1,1) < "5" 
											If SA2->A2_SIMPNAC$"1" .And. SF4->F4_CSOSN<>""
												R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr)
											Else
												R54->A54_CST := cSitTrib
											Endif
										Endif

										R54->A54_NUMITE	:=	StrZero(nItem,3)
										R54->A54_PRODUT	:=	cProd
										R54->A54_PRORI	:=	SB1->B1_COD
										R54->A54_CNORI  := 	cCNPJOri

										Do Case	
											Case SF4->F4_LFICM $ "I|O" .And. SF4->F4_BASEICM == 0 .And. nAliqExtF7 == 0
												R54->A54_ALQICM := 0											
											Otherwise
												R54->A54_ALQICM := nAliqICM
										EndCase

										R54->A54_FILIAL	:= IIF (lModoComp ,"",FWCodFil())
										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³ Implementacao NFE-BA                              ³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										R54->A54_ALQIPI	:= (cAliasSD2)->D2_IPI
										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³ Implementacao do SEF PE                           ³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										R54->A54_IE	  	:= 	cIE
										R54->A54_EMISS	:= 	SF2->F2_EMISSAO
										R54->A54_UF 	:= 	cTranspEst
										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³ Implementacao do PRODEPE                          ³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										If lSef .And. Val(aRetCfp[19][1]) == 1		//Industria
											aProdepe 		:= Prodepe(SB1->B1_COD,cAliasSF3)
											R54->A54_APUR	:= aProdepe[1]			//Codigo da Apuracao
											R54->A54_INDESP := aProdepe[2]			//Indicador Especial
											If aProdepe[1] > 1
												SefRegX35(aProdepe[1])					//Processa Registro 88-35-00
											Endif
										Endif
										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³Implementacao do FUNCEP/PB³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										If lGimPB
											R54->A54_FUNCEP := cFuncep
										Endif
										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³Sintegra-MG -> Informacoes de Substituicao Tributaria³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										//OBSERVACAO: ALIQUOTA SEMPRE SERA A MESMA GRAVADA NO SD1, POR ISSO O SEEK ACIMA SOMENTE TRATA DA ALIQICM
										R54->A54_DTEMI := aArrayF3[1][18]  // Data da Emissao
										R54->A54_DTSAI := aArrayF3[1][10]  // Data da Entrada/Saida
										If (cAliasSD2)->D2_ICMSRET > 0
											If aArrayF3[Iif(nPos>0,nPos,1)][33] <> "4"
												R54->A54_ALIQST := Iif(SB1->B1_PICM == 0,GetMV("MV_ICMPAD"),SB1->B1_PICM)
											Endif
										Endif
									Elseif ! AllTrim((cAliasSD2)->D2_CF) $ cCfoNEcf
										RecLock ("R54", .F.)
										lGerouR54  := .T.
										lAglutinou := .T.
									EndIf
										R54->A54_QUANT	+=	(cAliasSD2)->D2_QUANT
										R54->A54_VALPRO	+=	(cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_DESCON
										R54->A54_VALDES	+=	(cAliasSD2)->D2_DESCON+(cAliasSD2)->D2_DESCICM
										R54->A54_VALICM	+=	(cAliasSD2)->D2_VALICM
										If aArrayF3[Iif(nPos>0,nPos,1)][33] <> "4"
											R54->A54_ICMRET	+=	(cAliasSD2)->D2_ICMSRET
										Endif
										If nPos > 0
											nBsICMS := aArrayF3[nPos][19]	// F3_BASEICM
										Else
											nBsICMS := aArrayF3[1][19]		// F3_BASEICM
										Endif

										If SF4->F4_LFICM $ "IONZ" .And. Empty(nBsICMS) .And. nRedBase == 0 .Or. (!Empty((cAliasSD2)->D2_BRICMS) .And. SF4->F4_CREDST == '4')
											R54->A54_BSICM += 0
										Else 
											If SF4->F4_LFICMST$"T" .And. SF4->F4_ICMSST$"1"
												R54->A54_BSICM += nBsICMS
											Else
												R54->A54_BSICM += (cAliasSD2)->D2_BASEICM
											Endif
										EndIF

											R54->A54_BRICMS += (cAliasSD2)->D2_BRICMS

									If lR54IPI
										R54->A54_VALIPI += If(SF4->F4_IPI=="R",0.00,(cAliasSD2)->D2_VALIPI)
									Else
										R54->A54_VALIPI += (cAliasSD2)->D2_VALIPI
									Endif

									//Cliente MMX que necessitar utilizar ao inves da SB5 a SF4
									If lSintMS .And. Left(cIncFis,2)=="F4" .And. nIncFis>0
										R54->A54_INCFIS := SF4->(FieldGet(nIncFis))
									EndIf

									R54->(MsUnlock())
									//
									If lMta56S
										Execblock("MTA56S",.F.,.F., {cAliasSD2, StrZero(nItem,3)})
									EndIf
									//
									If !lAglutinou
										nItem++
									EndIf
								Endif
								//
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Implementacao do Convenio no.76 - 10.10.2003      ³
								//³ Grava Registro I61 - Resumo Mensal por Item       ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If lReg61I .And. AModNot(aArrayF3[1][7])$"02/04/65" .And. !(SF2->F2_TIPO$"C/P/I") .And. ( Alltrim(aArrayF3[1][7])<>"CF" .AND. Alltrim(aArrayF3[1][7])<>"ECF" ) .And. Iif(AModNot(aArrayF3[1][7])$"65" .And. cArqMag == "CONV76" .And. cMV_ESTADO == "PI",.F.,.T.)
									lGerouR61R := .T.
									If I61->(dbSeek(PADR(cProd,14)+Str((cAliasSD2)->D2_PICM,5,2)))
										RecLock("I61",.F.)
									Else
										RecLock("I61",.T.)
										I61->I61_MESANO	:= StrZero(Month((cAliasSD2)->D2_EMISSAO),2)+StrZero(Year((cAliasSD2)->D2_EMISSAO),4)	//Mes e Ano de Emissao "MMAAAA"
										I61->I61_CODPRO	:= cProd	//Codigo do Produto do Informante
										I61->I61_ALIQ	:= (cAliasSD2)->D2_PICM		//Aliquota do ICMS do Prod.
									Endif
									I61->I61_QUANT		+= (cAliasSD2)->D2_QUANT	//Qtde. Acum. do Prod. Vendida no Mes
									I61->I61_VLBRUTO	+= (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_DESCON	///Vlr. Bruto Acum. na Venda do Prod. no Mes
									I61->I61_BCICMS		+= (cAliasSD2)->D2_BASEICM	//Base de Calculo do ICMS do Vlr. Acum. no Mes

									If lGimPB
										If ! Empty(cFuncep) .And. cFuncep == "1"
											FUN->(dbGoTop())
											If FUN->FUN_ICMS + FUN->FUN_STSAI == 0
												RecLock("FUN",.T.)
											Else
												RecLock("FUN",.F.)
											Endif
											FUN->FUN_ICMS	+= (cAliasSD2)->D2_BASEICM
											FUN->FUN_STSAI	+= Iif(Left((cAliasSD2)->D2_CF,1) == "5" .And. aArrayF3[Iif(nPos>0,nPos,1)][33] <> "4",(cAliasSD2)->D2_BRICMS,0)
											FUN->(MsUnLock())
										Endif
									Endif
									I61->(MsUnlock())
								Endif

								If (lValidaPr)
									If (AModNot(aArrayF3[1][7])$"01/55") .And. !(lServico)
										lGera75S	:=	.T.
									Else
										lGera75S	:=	.F.
									EndIf
								Else
									lGera75S	:=	.T.
									If (AModNot(aArrayF3[1][7])$"01/55") .And. lServico
										lGera75S	:=	.F.
									Endif
								EndIf
								//
								If (lGera75S .And. (lGerouR54 .Or. lGerouR61R)) .Or. (lGera75S .And. AModNot(aArrayF3[1][7])$"21,22" .And. aArrayF3[1][6] <> "L")
									If !(R75->(dbSeek(cSeek))) .AND. !(AllTrim( (cAliasSD2)->D2_CF) $cCfoNEcf )
										RecLock("R75",.T.)
										R75->A75_CTARE	:= cContrTare
										R75->A75_DTAINI	:= dDTIni
										R75->A75_DTAFIM	:= dDTFim
										A940LoadPro("S",@cNcm,@cProd,,lSef,@cDescPe,@lPMen15,@lPMai14)
										R75->A75_PROD  	:= cProd
										R75->A75_PRORI	:= SB1->B1_COD
										R75->A75_CODNCM	:= cNcm
										R75->A75_DESCR	:= cDescPe
										R75->A75_UM    	:= SB1->B1_UM
										R75->A75_ALQIPI	:= SB1->B1_IPI

										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³Conforme o Manual de Orientacao do Convenio 57/95, para o         ³
										//³registro 75, o campo Aliquota do ICMS, "Aliquota do icms aplicavel³
										//³a mercadoria ou servico nas operacoes ou prestacoes internas      ³
										//³ou naquelas que se tiverem iniciado no exterior.                  ³
										//³A aliquota interna é informada no parametro MV_ICMPAD             ³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										R75->A75_ALQICM := RetAliqICM(SuperGETMV("MV_ICMPAD"),cMV_ESTADO $"RJ" .AND. SF4->F4_ISEFECP =="2")
										R75->A75_CODBAR := SB1->B1_CODBAR
										R75->A75_VEREAN := SB1->B1_VEREAN
										If lSef
											If (cAliasSD2)->D2_ICMSRET > 0		//Substituicao Tributaria
												If aArrayF3[Iif(nPos>0,nPos,1)][33] <> "4"
													R75->A75_BRICMS := NoRound((cAliasSD2)->D2_BRICMS/(cAliasSD2)->D2_QUANT)
												Endif
											Else
												R75->A75_BRICMS := 0
											Endif
										Else
											If aArrayF3[Iif(nPos>0,nPos,1)][33] <> "4"
												R75->A75_BRICMS := (cAliasSD2)->D2_BRICMS
											Endif
										Endif

										R75->A75_FILIAL	:= IIF (lModoComp ,"",FWCodFil())
										R75->A75_SITTRI	:= cSitTrib
										R75->A75_REDBSE	:= nRedBase		//Reducao da Base do ICMS
										R75->(MsUnlock())
										lGerouR61R := .F.
									Endif
								EndIf

								If AModNot(aArrayF3[1][7]) $ "21,22" .And. aArrayF3[1][6] <> "L" //Notas Fiscais de Comunicacao/Telecomunicacao
									RecLock("R77",.T.)
									R77->A77_CNPJ  	:= cCNPJ
									R77->A77_MODELO	:= AModNot(aArrayF3[1][7])
									R77->A77_SERIE	:= Substr(SerieNfId(cAliasSD2,2,"D2_SERIE"),1,1)
									R77->A77_SUBSER	:= Substr(SerieNfId(cAliasSD2,2,"D2_SERIE"),2,2)
									R77->A77_NFISC	:= (cAliasSD2)->D2_DOC
									R77->A77_CFOP	:= (cAliasSD2)->D2_CF
									R77->A77_TIPREC	:= "1"
									R77->A77_NUMITE	:= StrZero(nItem,3)
									R77->A77_PRODUT	:= Left(cProd,11)
									R77->A77_QUANT	:= Iif(SF2->F2_TIPO$"C#P#I" .and. (cAliasSD2)->D2_QUANT == 0 ,1,(cAliasSD2)->D2_QUANT)
									R77->A77_VALPRO	:= (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_DESCON
									R77->A77_VALDES	:= (cAliasSD2)->D2_DESCON
									R77->A77_BSICM	:= (cAliasSD2)->D2_BASEICM
									R77->A77_ALQICM	:= (cAliasSD2)->D2_PICM
									R77->A77_CNPJMF	:= SM0->M0_CGC
									R77->A77_CODTER	:= (cAliasSD2)->D2_CLIENTE
									R77->A77_CNORI  := cCNPJOri
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³ Implementacao do SEF PE                           ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									R77->A77_IE		:= cIE
									R77->A77_DTEMIS	:= SF2->F2_EMISSAO
									R77->A77_UF		:= SF2->F2_EST
									R77->A77_CFOMOV	:= (cAliasSD2)->D2_CF
										R77->(MsUnlock())
									nItem++
								Endif

							    //Sintegra do MS precisa agrupar os Registros 8801 e 8802
						    	//Conforme Manual de Integração (esses registros devem ser agrupados por CFOP e Operação (Entrada/Saida))
						    	//Porém existem campos como UF/ UM / PRODUTO/ CFOP e ALIQUOTA que nao podem ser agrupados e por isso fazem parte da chave
					    	   	If !I88->(MsSeek (SB1->B1_COD+(cAliasSD2)->D2_CF+cTranspEst+SB1->B1_UM+Str ((cAliasSD2)->D2_PICM, 5, 2)))
						    		RecLock("I88",.T.)
						    		I88->I88_PRODUT		:= SB1->B1_COD
						    		I88->I88_CFOP		:= (cAliasSD2)->D2_CF
						    		I88->I88_UF			:= cTranspEst
						    		I88->I88_UM			:= SB1->B1_UM
						    		I88->I88_ALQICM		:= (cAliasSD2)->D2_PICM
						    	Else
						    		RecLock("I88",.F.)
						    	EndIf
					    		I88->I88_QUANT		+= (cAliasSD2)->D2_QUANT
					    		I88->I88_VALTOT		+= (cAliasSD2)->D2_TOTAL
					    		I88->I88_BSICM		+= (cAliasSD2)->D2_BASEICM
					    		I88->I88_VALICM		+= (cAliasSD2)->D2_VALICM
							    //Cliente MMX que necessitar utilizar ao inves da SB5 a SF4
								If Left(cIncFis,2)=="F4" .And. nIncFis>0
									I88->I88_INCFIS := SF4->(FieldGet(nIncFis))
								EndIf
						    	I88->(MsUnLock())
								
							Endif
		 		    	Endif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Verifica se existem produtos que dao direito ao ressarcimento de ICMS³
						//³para o estado de Minas Gerais.                                       ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lSintMG .And. l88STMG
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Verifica se o produto deve ser processado, de acordo com a data de corte³
							//³informada no cadastro do produto.                                       ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	 			    		If (nCorte88 == 0) .Or. (nCorte88 > 0 .And. dDtIni >= SB1->&(cCorte88))
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Ou o produto tem a margem de ST ou e Regime Especial³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								lMargST := .F.

								DbSelectArea("SBZ")
								SBZ->(DbSetOrder(1))
								SBZ->(DbSeek(xFilial("SBZ")+SB1->B1_COD))
								If SB1->B1_PICMENT > 0 .Or. SBZ->BZ_PICMENT > 0
									lMargST := .T.
								Else
									If lRgEspSt
										If SFT->(dbSeek(xFilial("SFT")+"S"+(cAliasSD2)->D2_SERIE+(cAliasSD2)->D2_DOC+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA+Padr((cAliasSD2)->D2_ITEM,nTamFTIt)+(cAliasSD2)->D2_COD))
											If SFT->FT_RGESPST == "1"
												lMargST := .T.
											ElseIf SF7->(dbSeek(xFilial("SF7")+SB1->B1_GRTRIB+SA1->A1_GRPTRIB))
												If SF7->F7_MARGEM > 0 .And. SF7->F7_ALIQDST > 0
													lMargST := .T.
												EndIf
											Endif
										Endif
									Endif
								Endif
								
			 		    		If MV_PAR53 == 1
				 		    		a94088MG(@aPr88MG,;
					 		    				cProd,;
								 		    	lMargST,;
					 					    	{(cAliasSD2)->D2_FILIAL,;
			 							    	(cAliasSD2)->D2_DOC,;
					 					    	(cAliasSD2)->D2_SERIE,;
					 					    	(cAliasSD2)->D2_CLIENTE,;
					 					    	(cAliasSD2)->D2_LOJA,;
					 					    	(cAliasSD2)->D2_CF,;
					 					    	(cAliasSD2)->D2_COD,;
					 					    	Padr((cAliasSD2)->D2_ITEM,nTamFTIt),(cAliasSD2)->D2_QUANT},;
					 					    	lNContr,;
					 					    	cN88Int,;
					 					    	c88Perd,;
												lChkEC87)
					 			EndIF
				 				If MV_PAR53 == 2 .AND. lMargST .AND. (cAliasSD2)->D2_TIPO == 'D' .AND. SubStr((cAliasSD2)->D2_CF,1,1) == "6" 
				 					nPosNfDevC := aScan(aNfDevComp,{|x| x[1] == (cAliasSD2)->D2_NFORI .AND. ;
				 						                                 x[2] == (cAliasSD2)->D2_SERIORI .AND. ;
				 						                                 x[3] == (cAliasSD2)->D2_CLIENTE .AND. ;
				 						                                 x[4] == (cAliasSD2)->D2_LOJA .AND. ;
				 						                                 x[5] ==(cAliasSD2)->D2_COD .AND. ;
				 						                                 x[6] == (cAliasSD2)->D2_ITEMORI})

									If nPosNfDevC == 0
										aAdd(aNfDevComp,{(cAliasSD2)->D2_NFORI,;  //01
														   (cAliasSD2)->D2_SERIORI,;//02
															(cAliasSD2)->D2_CLIENTE,;//03
															(cAliasSD2)->D2_LOJA,;   //04
															(cAliasSD2)->D2_COD,;    //05
														   (cAliasSD2)->D2_ITEMORI,; //06
														   (cAliasSD2)->D2_QUANT,;   //07
														   SB1->B1_PICMENT})			//08
									Else
										aNfDevComp[nPosNfDevC][7] += (cAliasSD2)->D2_QUANT
									EndIF
				 				EndIF
		 					Endif
	 		   	 	Endif
		 		    	(cAliasSD2)->(dbSkip())
			 	    EndDo
				    If lQuery
		    		    dbSelectArea(cAliasSD2)
					    dbCloseArea()
			        EndIf
			    EndIf
			Endif
		    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		    //³Monta Registro Tipo 71 atraves de ponto de entrada³
		    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		    //³Somente gera registro tipo 71 para      ³
		    //³emitentes de conhecimento de transporte.³
		    //³Portanto somente Notas Fiscais de Saida.³
		    //³Devera gerar registros no arquivo       ³
		    //³R71 em funcao do registro lido no       ³
		    //³arquivo SF3.                            ³
	  	    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		    If Substr(aArrayF3[1][5],1,1) >= "5" .And. aArrayF3[1][6] <> "L"
			    If lMtaTIP71
			        aArray71 := aClone(aArrayF3)
			        Execblock("MTATIP71",.F.,.F.,{,aArray71})
			    EndIf
		    EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		    //³Monta Registro Tipo 71 atraves da Integracao com TMS³
		    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lIntTMS .And. AModNot(aArrayF3[1][7])$"08/09/10/11/26/57/55" .And. !lMtaTIP71 .And.;
				Substr(aArrayF3[1][5],1,1) >= "5" .And. (!lOpIntEst .Or. cTranspEst == cEstDest)	 

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Chama a funcao do TMS que retorna os dados do frete para geracao do registro 71.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				//--Formato do vetor aRet
				//aRet[1] -- CPF/CNPJ
				//aRet[2] -- UF
				//aRet[3] -- { Inscricao estadual devedor , Inscricao estadual figura 2, Data de emissao da NF, Serie da Nf, Numero da Nf, Valor da nf }
				aTMS := TMSSinteg(aArrayF3[1][32],aArrayF3[1][1],aArrayF3[1][2])

				If Len(aTMS) > 0

					For nTMS := 1 to Len(aTMS[3])
						Reclock("R71",.T.)
						R71->A71_CGCTOM := cCNPJ

						If (cAliasDT6)->DT6_DEVFRE = '1' .And. aTMS[1] # cCNPJ
							R71->A71_IETOM  := cIE
						Else
							R71->A71_IETOM  := aRetDig(aTMS[3][nTMS][1],.T.)
						EndIf

						R71->A71_DTCONH := aArrayF3[1][18]
						R71->A71_UFTOM  := cTranspEst	//SA1->A1_EST
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³O aplicativo SEF não esta preparado para recepcionar os registros no modleo 57,                                           ³
						//³a orientação é que seja digitato no SEF como modelo 8 e coloque no campo observação a que documento se faz referencia.    ³
						//³Orientação: SEF/DEF/SINTEGRA - UGST-DRT/SEFAZ - PE 

						lAltModNF := ((lSef .Or. cMV_ESTADO == "PR") .And. AllTrim(UPPER(MV_PAR03)) == "VALPR05")

						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						R71->A71_MODCON := IIf(lAltModNF,IIf(AModNot(aArrayF3[1][7]) == "57","08",AModNot(aArrayF3[1][7])),AModNot(aArrayF3[1][7]))
						R71->A71_ESPNFS := IIf(lAltModNF,IIF(aArrayF3[1][7] == "CTE","CTR",aArrayF3[1][7]),aArrayF3[1][7])

						If R71->A71_MODCON $ "07/08/09/10/11/26" .And. Type(AllTrim(aArrayF3[1][2]))=="N"
							R71->A71_SERNOT := "U"
							R71->A71_SERCON := "U"
							R71->A71_MODNOT := "01"
						ElseIf Substr(aArrayF3[1][2],1,2)=="00"
							R71->A71_SERCON := Substr(aArrayF3[1][2],3,1)
						Else
							R71->A71_SERCON := Substr(aArrayF3[1][2],1,1)
							R71->A71_MODNOT := "01"
						EndIf

						If (!lSintCat95 .AND. R71->A71_MODCON == "57") .OR. lSintCat95
							R71->A71_SERCON := Substr(aArrayF3[1][2],1,1)
							If Substr(aArrayF3[1][2],1,1)$"B/C"
								R71->A71_SUBCON := "U"
							Else
								R71->A71_SUBCON := Substr(aArrayF3[1][2],2,2)
							EndIf
						EndIf

						R71->A71_SERNOT := Substr(aTMS[3][nTMS][4],1,3)
						R71->A71_NUMCON := aArrayF3[1][1]
						R71->A71_UFREM  := aTMS[2]
						R71->A71_CGCREM := aTMS[1]
						R71->A71_IEREM  := aRetDig(aTMS[3][nTMS][2],.T.)
						R71->A71_DTNOTA := sTod(aTMS[3][nTMS][3])
						R71->A71_NUMNOT := aTMS[3][nTMS][5]
						R71->A71_VALNOT := aTMS[3][nTMS][6]
						R71->(MsUnlock())

						If lMtReg71
							Execblock("MTREG71",.F.,.F.,{(cAliasDT6)->DT6_FILDOC, (cAliasDT6)->DT6_DOC, (cAliasDT6)->DT6_SERIE})
						Endif
					Next
				Endif
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Monta Registro Tipo 76³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			For nI := 1 To Len(aArrayF3)
				cModNotAux := AModNot(aArrayF3[nI][7])
				If cModNotAux $ "21,22" .And. aArrayF3[nI][6] <> "L" .And. Substr(aArrayF3[nI][5],1,1) >= "5" //Notas Fiscais de Comunicacao/Telecomunicacao
					If lSef .And. !Empty(aArrayF3[nI][13])
						RecLock("R76",.T.)
						R76->A76_MODELO	:=	cModNotAux
						R76->A76_SERIE	:=	Substr(aArrayF3[nI][42],1,1)
						R76->A76_SUBSER	:=	Substr(aArrayF3[nI][42],2,2)
						R76->A76_NFISC	:=	aArrayF3[nI][1]
						R76->A76_EMISS	:=	aArrayF3[nI][10]
						If lSintMG
							R76->A76_UF :=	cTranspEst
						Endif
						R76->A76_CFOP	:=	aArrayF3[nI][5]
						R76->A76_SITUAC	:=	"S"
						R76->A76_CFOMOV	:=	aArrayF3[nI][5]
						R76->(MsUnlock())
					Else
						RecLock("R76",.T.)
						R76->A76_CNPJ  	:=	cCNPJ
						R76->A76_IE		:=  cIE
						R76->A76_MODELO	:=	cModNotAux
						R76->A76_SERIE	:=	Substr(aArrayF3[nI][42],1,1)
						R76->A76_SUBSER	:=  Substr(aArrayF3[nI][42],2,2)
						R76->A76_NFISC	:=	aArrayF3[nI][1]
						R76->A76_CFOP	:=	aArrayF3[nI][5]
						R76->A76_TIPREC	:= "1"
						R76->A76_EMISS	:=	aArrayF3[nI][10]
						R76->A76_UF		:=	cTranspEst
						R76->A76_VALTOT	:=	aArrayF3[nI][17]
						R76->A76_BRICMS	:=	aArrayF3[nI][19]
						R76->A76_VALICM	:=	aArrayF3[nI][16]
						R76->A76_ISENTA	:=	aArrayF3[nI][12]
						R76->A76_OUTRAS	:=	aArrayF3[nI][15]
						R76->A76_ALQICM	:=	aArrayF3[nI][8]
						R76->A76_SITUAC	:=	IIf(("CANCELAD"$aArrayF3[nI][20] .Or.!empty(aArrayF3[nI][13])),"S","N")
						R76->A76_CNORI	:=	cCNPJOri
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Implementacao do SEF PE                                    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						R76->A76_CODIGO	:=	aArrayF3[nI][3]
						R76->A76_LOJA	:=	aArrayF3[nI][4]
						R76->A76_CFOMOV	:=	aArrayF3[nI][5]
						R76->(MsUnlock())
					Endif
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gravacao do registro 50                                                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (Empty(aArrayF3[nI][7]) .Or.;
					((cModNotAux$"01/04/06/22/21/55" +IIf(lNfProd,"/04","")) .Or. (cModNotAux$"65" .And. UPPER(cNorma) == "DIEFPI.INI"))) .And.;
					aArrayF3[nI][6] <> "L" .And. (Empty(cCfopPR) .Or. !(Alltrim(aArrayF3[nI][5])$cCfopPR))
					//
					If (l52Tare)
						//
						SA1->(DbSetOrder(1))
						SA1->(MsSeek(xFilial("SA1")+aArrayF3[nI][03]+aArrayF3[nI][04]))
						//
						SD1->(DbSetOrder(1))
						SD1->(MsSeek(xFilial("SD1")+aArrayF3[nI][01]+aArrayF3[nI][02]+SA1->A1_COD+SA1->A1_LOJA))
						//
						Do While !SD1->(Eof()) .And. xFilial("SD1")==SD1->D1_FILIAL .And. aArrayF3[nI][01]==SD1->D1_DOC .And.;
							aArrayF3[nI][02]==SD1->D1_SERIE .And. SA1->A1_COD==SD1->D1_FORNECE .And. SA1->A1_LOJA==SD1->D1_LOJA
							//
							If (!Empty (SD1->D1_NFORI) .And. !Empty (SD1->D1_SERIORI) .And. !Empty (SD1->D1_ITEMORI))
								SF2->(DbSetorder(1))
								SF2->(MsSeek(xFilial("SF2")+SD1->D1_NFORI+SD1->D1_SERIORI+SA1->A1_COD+SA1->A1_LOJA))
								//
								SD2->(DbSetOrder(3))
								SD2->(MsSeek(xFilial("SD2")+SD1->D1_NFORI+SD1->D1_SERIORI+SA1->A1_COD+SA1->A1_LOJA))
								//
								Do While !SD2->(Eof ()) .And. xFilial ("SD2")==SD2->D2_FILIAL .And. SD1->D1_NFORI==SD2->D2_DOC .And.;
									SD1->D1_SERIORI==SD2->D2_SERIE .And. SA1->A1_COD==SD2->D2_CLIENTE .And. SA1->A1_LOJA==SD2->D2_LOJA
									//
									If (StrZero (Val(SD2->D2_ITEM), 2, 0)==StrZero (Val (SD1->D1_ITEMORI), 2, 0))
										If (R52->(MsSeek (cCNPJ+aArrayF3[nI][1]+aArrayF3[nI][2]+AllTrim (aArrayF3[nI][5])+StrZero (aArrayF3[nI][8], 5, 2))))
											RecLock ("R52", .F.)
										Else
											RecLock ("R52", .T.)
												R52->A52_CNPJ	:=	cCNPJ
												R52->A52_IE		:=	cIE
												R52->A52_EMISS	:=	aArrayF3[nI][10]
												R52->A52_UF		:=	aArrayF3[nI][22]
												R52->A52_MODELO	:=	cModNotAux
												R52->A52_SERIE	:=	aArrayF3[nI][2]
												R52->A52_SDOC	:=	aArrayF3[nI][42]
												R52->A52_NFISC	:=	aArrayF3[nI][1]
												R52->A52_CFOP	:=	aArrayF3[nI][5]
												R52->A52_ALQ	:=	aArrayF3[nI][8]
												R52->A52_BSCALC	:=	aArrayF3[nI][19]
												R52->A52_VLRICM	:=	aArrayF3[nI][16]
												R52->A52_MODDEV	:=	AModNot(SF2->F2_ESPECIE)
												R52->A52_SERDEV	:=	SD2->D2_SERIE
												R52->A52_SDOCD	:=	SerieNfId("SD2",2,"D2_SERIE")
												R52->A52_NFIDEV := 	SD2->D2_DOC
												R52->A52_CFODEV	:=	SD2->D2_CF
												R52->A52_ALQDEV	:=	SD2->D2_PICM
												R52->A52_CNORI	:=	cCNPJOri
										EndIf
											R52->A52_VLRTOT	+=	SD1->D1_TOTAL
										R52->(MsUnlock ())
										//
										Exit
									EndIf
									//
									SD2->(DbSkip ())
								EndDo
							EndIf
							//
							SD1->(DbSkip ())
						EndDo
					ElseIf !(cModNotAux$"21/22" .And. Left(aArrayF3[nI][5],1)>="5")
						If ((cChaveAux == aArrayF3[nI][24] .Or. nI==1) .Or. (cCfoAux<>aArrayF3[nI][05]) .Or. (cChaveAux2 <> aArrayF3[nI][08]))
							If !Empty(aArrayF3[nI][13])
								R50->(dbSetOrder(3))
								//If !R50->(dbSeek(Space(14)+aArrayF3[nI][1]+aArrayF3[nI][2]+Space(4)+StrZero(0,5,2)))
								If !R50->(dbSeek(Space(14)+aArrayF3[nI][1]+aArrayF3[nI][2]+SubStr(aArrayF3[nI][5],1,4)+StrZero(0,5,2)))
									If nI<>0 .And. (!lTareDf .Or. (lTareDf .And. !lMVTARECAN))
										RecLock("R50",.T.)
										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³Os campos (UF, CGC, Data, Serie, Numero, Modelo e CFOP) deveram ser informados da mesma forma no registro³
										//³tipo 50 e no registro tipo 51 para que o Validador do SINTEGRA nao apresente a mensagem de erro que nao  ³
										//³existe um Registro tipo 50 correspondente para o Registro 51. Nao somente para alguns Estados.           ³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										If UPPER(cNorma) == "SINTEGMN.INI"
											R50->A50_CNPJ := cCNPJ
											R50->A50_IE   := cIE
										Endif
										R50->A50_EMISS  := aArrayF3[nI][10]
										//If lSintMG .or. lSef
											R50->A50_UF := aArrayF3[nI][22]
										//Endif
										R50->A50_MODELO := cModNotAux
										R50->A50_SERIE  := aArrayF3[nI][2]
										R50->A50_SDOC   := aArrayF3[nI][42]
										R50->A50_NFISC  := aArrayF3[nI][1]
										//R50->A50_CFOP  :=	IIf(lSef ,aArrayF3[nI][5],"")
										R50->A50_CFOP   := aArrayF3[nI][5]
										R50->A50_EMIT   := IIf(lSef,"",IIf(aArrayF3[nI][21]=="S".Or.SubStr(aArrayF3[nI][5],1,1)>="5","P","T"))
										//cSituaDoc := SintSitDoc (aArrayF3[nI][6],aArrayF3[nI][13],aArrayF3[nI][1],aArrayF3[nI][2],aArrayF3[nI][7])										
										R50->A50_SITUAC :=	aArrayF3[nI][39]
										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³Campos para o layout SAPI³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										R50->A50_CLIFOR	:= aArrayF3[nI][3]
										R50->A50_LOJCF	:= aArrayF3[nI][4]
										R50->A50_TIPO	:= aArrayF3[nI][6]
										R50->A50_CFOMOV	:= aArrayF3[nI][5]
										R50->(MsUnlock())
									Endif
									If lTareDf .And. lMVTARECAN
										R5475Tare(aArrayF3,cContrTare,cCNPJ,cCNPJOri,cIE,cTranspEst,lImpSt,lSef,dDtIni,dDtFim,lGimPB,nI,cR51CFOP,cCfoAux,cRazSoc,cCfoSint,@lPMen15,@lPMai14)
									EndIf
								EndIf
							Else
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Verifica se ja nao existe um registro 50 com as mesmas caracteristicas. Se existir,  ³
								//³acumula os valores, para atender a situacoes em que se utilizem livros distintos nos ³
								//³itens de uma mesma nota fiscal.                                                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								R50->(dbSetOrder(3))

								If aArrayF3[nI][33]=='4' .And. aArrayF3[nI][11] > 0
									lBusca := !(R50->(dbSeek(cCNPJ+aArrayF3[nI][1]+aArrayF3[nI][2]+SubStr(aArrayF3[nI][5],1,4))) .And. R50->A50_ALQICM == 0)	//Verifica se o item anterior possui aliquota zero para não ocorrer duplicidade para uma mesma CFOP que também terá aliquota zero em operações de entrada com ICMS ST									
								Else
									lBusca := !R50->(dbSeek(cCNPJ+aArrayF3[nI][1]+aArrayF3[nI][2]+SubStr(aArrayF3[nI][5],1,4)+StrZero(aArrayF3[nI][8],5,2)))										          												   							    
								Endif
								If lBusca
									If  aArrayF3[nI][8] == 0 .And. lMVALIQR50
										nAliqR50 := SB1->B1_PICM
									Else
										nAliqR50 := aArrayF3[nI][8]
									EndIF
									RecLock("R50",.T.)
									R50->A50_FILIAL := aArrayF3[nI][32]
									R50->A50_CNPJ   := cCNPJ
									R50->A50_IE     := cIE
									If aArrayF3[nI][39] == "E"
										R50->A50_EMISS := CDT->CDT_DTAREC
									Else
										R50->A50_EMISS := aArrayF3[nI][10]
									Endif
									R50->A50_UF     :=	aArrayF3[nI][22]
									R50->A50_MODELO :=  cModNotAux
									R50->A50_SERIE  :=	aArrayF3[nI][2]
									R50->A50_SDOC   :=	aArrayF3[nI][42]
									R50->A50_NFISC  :=	aArrayF3[nI][1]
									R50->A50_CFOP   :=	aArrayF3[nI][5]
									R50->A50_EMIT   :=	IIf(aArrayF3[nI][21]=="S".Or.SubStr(aArrayF3[nI][5],1,1)>="5","P","T")
									R50->A50_ALQICM :=	nAliqR50
									R50->A50_ALQINT :=	GrvAliq(aArrayF3,nI)
									//cSituaDoc := SintSitDoc (aArrayF3[nI][6],aArrayF3[nI][13],aArrayF3[nI][1],aArrayF3[nI][2],aArrayF3[nI][7])
									R50->A50_SITUAC :=  aArrayF3[nI][39]
									R50->A50_CLIENT :=	aArrayF3[nI][3]
									R50->A50_LOJA   :=	aArrayF3[nI][4]
									R50->A50_CNORI  :=	cCNPJOri
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³Campos para o layout SAPI³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									R50->A50_CLIFOR	:=	aArrayF3[nI][3]
									R50->A50_LOJCF	:=	aArrayF3[nI][4]
									R50->A50_TIPO	:=	aArrayF3[nI][6]
									R50->A50_CFOMOV	:=	aArrayF3[nI][5]
									//
									If lSef  .Or. lGimPB
										For nY := 1 To Len(aArrayF3)
											If (!Empty(aArrayF3[nY][20]) .And. !(Alltrim(aArrayF3[nY][20])$cDescObs)) .Or. !Empty(aArrayF3[nY][24])
												If !Empty(aArrayF3[nY][20])
													cObs := aArrayF3[nY][20]
												Endif
												If !Empty(aArrayF3[nY][24])
													cObs := Formula(aArrayF3[nY][24])
												Endif
												lObs := .T.
												Exit
											Endif
										Next
									Endif

									If lObs .Or. ;
										((lImpSt .And. Left(aArrayF3[nI][05],1)<"5" .And. aArrayF3[nI][11]>0) .Or. ;
										(lImpSt .And. Left(aArrayF3[nI][05],1)<"5" .And. aArrayF3[nI][30]>0))
										If nI == 1
											If lSef
												R50->A50_OBS := ++nSefObs
											Else
												R50->A50_OBS := ++nR50Obs
											EndIf
											R50->A50_OBSERV := cObs
											If lImpSt .And. Left(aArrayF3[nI][05],1)<"5" .And. aArrayF3[nI][11]>0	//F3_ICMSRET - Imposto Retido
												R50->A50_OBSERV := "BASE ICMS RET: "+Alltrim(Transform(aArrayF3[nI][29],"@E 999,999,999.99")) + " / ICMS RETIDO: " + Alltrim(Transform(aArrayF3[nI][11], "@E 999,999,999.99"))
											Endif
											If lImpSt .And. Left(aArrayF3[nI][05],1)<"5" .And. aArrayF3[nI][30]>0	//F3_IPIOBS
												R50->A50_OBSERV := "IPI: "+Alltrim(Transform(aArrayF3[nI][30],"@E 999,999,999.99"))+IIf(!Empty(R50->A50_OBSERV)," / "+Alltrim(R50->A50_OBSERV),"")
											Endif
										Else
											R50->A50_OBS := Iif(lSef, nSefObs, nR50Obs)
										Endif
									Endif
									R50->(MsUnlock())
								Endif
							Endif
						Endif
						If Empty(aArrayF3[nI][13])
							RecLock("R50",.F.)
							lCompIcms := .F.	//Complemento de ICMS
							If (Left(aArrayF3[nI][5], 1)>="5")
								SF2->(DbSetOrder(1))
								If (SF2->(DbSeek(xFilial("SF2")+aArrayF3[nI][1]+aArrayF3[nI][2]+aArrayF3[nI][3]+aArrayF3[nI][4])))
									If SF2->F2_TIPO == "I"
										lCompIcms := .T.
									Else
										lCompIcms := .F.
									EndIf
								EndIf
							Else
								SF1->(DbSetOrder(1))
								If (SF1->(DbSeek(xFilial("SF1")+aArrayF3[nI][1]+aArrayF3[nI][2]+aArrayF3[nI][3]+aArrayF3[nI][4])))
									If SF1->F1_TIPO == "I"
										lCompIcms := .T.
									Else
										lCompIcms := .F.
									EndIf
								EndIf
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Alteracao efetuada conforme autorizacao do Governo do Estado de Pernambuco            ³
							//³sob o numero de protocolo abaixo.                                                     ³
							//³Despacho ICMS-DV n 115/2012 - Processo n : 2011.000003580272-52                       ³
							//³Para o Estado de Pernambuco deve ser retirado o valor de ICMS ST das Notas de Entrada.³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lSef .And. Left(aArrayF3[nI][05],1)<"5"
								R50->A50_VALTOT += aArrayF3[nI][17] - aArrayF3[nI][11]
							Else
								R50->A50_VALTOT += aArrayF3[nI][17]//VALCONT
							EndIf
							If lCompIcms .And. lSef
								R50->A50_VALTOT := 0
							EndIf
							IF ((Left(aArrayF3[nI][05],1)<"5" .AND. aArrayF3[nI][11] > 0 .AND. aArrayF3[nI][43] == '') .Or. (Left(aArrayF3[nI][05],1)<"5" .AND.aArrayF3[nI][11] > 0 .AND. aArrayF3[nI][43] == '4')) .And. AARRAYF3[1][6]<>"D"//Se entrar nesta regra, o campo A50_BSICM deve estar zerado
								R50->A50_BSICM += 0
								R50->A50_ALQICM := 0 //Zero a alíquota para não gerar erro no 54
							ElseIf (Left(aArrayF3[nI][05],1)>"4" .AND. aArrayF3[nI][11] > 0 .AND. aArrayF3[nI][43] == '4') .And. aArrayF3[1][6]<>"D"
								R50->A50_BSICM += 0
							Else
								R50->A50_BSICM  += IIf(lCompIcms,0,aArrayF3[nI][19])
							EndIf
							If cMV_ESTADO $ "MG/RS"
								If (lCompIcms .And. aArrayF3[nI][15]>0) .Or. (((Left(aArrayF3[nI][05],1)<"5" .AND. aArrayF3[nI][11] > 0 .AND. aArrayF3[nI][43] == '') .Or. (aArrayF3[nI][11] > 0 .AND. aArrayF3[nI][43] == '4')) .AND. aArrayF3[nI][6]<>"D")//Se entrar nesta regra, o campo A50_BSICM deve estar zerado
									R50->A50_VALICM += 0
								Else
									R50->A50_VALICM += IIf(lCompIcms,aArrayF3[nI][12]+aArrayF3[nI][15]+aArrayF3[nI][16],aArrayF3[nI][16])
								Endif
							ElseIf (((Left(aArrayF3[nI][05],1)<"5" .AND. aArrayF3[nI][11] > 0 .AND. aArrayF3[nI][43] == '') .Or. (aArrayF3[nI][11] > 0 .AND. aArrayF3[nI][43] == '4' .AND. aArrayF3[nI][19] == 0)) .AND. aArrayF3[nI][6]<>"D")//Se entrar nesta regra, o campo A50_BSICM deve estar zerado
								R50->A50_VALICM += 0
							Else
								R50->A50_VALICM += IIf(lCompIcms,aArrayF3[nI][12]+aArrayF3[nI][15]+aArrayF3[nI][16],aArrayF3[nI][16])
							Endif
							If lCompIcms .And. lSef
								R50->A50_VALICM := 0
							EndIf
							R50->A50_ISENTO +=	IIf(lCompIcms,0,aArrayF3[nI][12])
							If cMV_ESTADO $ "MG/RS"
								If lCompIcms .And. aArrayF3[nI][15]>0
									R50->A50_OUTRAS += aArrayF3[nI][15]
								Else
									R50->A50_OUTRAS += IIf(lCompIcms,0,aArrayF3[nI][15])
								Endif
							Else
								R50->A50_OUTRAS += IIf(lCompIcms,0,aArrayF3[nI][15])
							Endif
							R50->A50_DESPES += IIf(lCompIcms,0,aArrayF3[nI][23])
							If  AllTrim(R50->A50_CFOP) $ cCfoNEcf
								R50->A50_VALTOT :=0
								R50->A50_BSICM  :=0
								R50->A50_VALICM :=0
								R50->A50_ISENTO :=0
								R50->A50_OUTRAS :=0
								R50->A50_ALQICM :=0
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Implementacao do SEF PE                                     ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							R50->A50_CODIGO	:= aArrayF3[nI][3]
							R50->A50_LOJA	:= aArrayF3[nI][4]
							R50->A50_NOME	:= cRazSoc
							If lSef .And. Left(aArrayF3[nI][5],1)<"5"
								R50->A50_DTOPER	:= aArrayF3[nI][18]		//F3_EMISSAO
							Endif
							R50->(MsUnlock())
						Endif
					Endif

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Implementacao do Sintegra MG - Registro Tipo 88A            ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lSintMG
						If !Empty(aArrayF3[nI][41])	//NF de Empenho
							GravaMG88A(aArrayF3,cCNPJ,cIE,cChaveAux,cCfoAux,cChaveAux2,nI)
						Endif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Implementacao do Sintegra MG - Registro Tipo 88MINEIRAO     ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If SF4->(FieldGet(FieldPos(AllTrim(GetNewPar("MV_88MINEI","N")))))=="S"
							GravaMG88M(aArrayF3,cCNPJ,cIE,cChaveAux,cCfoAux,cChaveAux2,nI)
						Endif
					Endif

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gravacao do registro 51                                                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If (Empty(aArrayF3[nI][7]) .Or. cModNotAux$"01/55") .And.;
						(aArrayF3[nI][25]+aArrayF3[nI][26]+aArrayF3[nI][27])>0 .And. ;
						aArrayF3[nI][6] <> "L" .And. (!AllTrim (aArrayF3[nI][05])$cR51CFOP)

						If (nI==1 .Or. cCfoAux<>aArrayF3[nI][05]) .Or. R51->(Eof() .Or. R51->A51_CNPJ	 <>	cCNPJ .Or. R51->A51_IE <> cIE .Or.;
							R51->A51_SERIE <> aArrayF3[nI][02] .Or. R51->A51_NFISC	<> aArrayF3[nI][01])
							If("CANCELAD"$aArrayF3[nI][20] .Or.!empty(aArrayF3[nI][13]))
								RecLock("R51",.T.)
								R51->A51_CNPJ	:=	""
								R51->A51_IE		:=	""
								R51->A51_EMISS	:=	aArrayF3[nI][10]
								R51->A51_UF		:=	aArrayF3[nI][22]
								R51->A51_SERIE	:=	aArrayF3[nI][02]
								R51->A51_SDOC   :=	aArrayF3[nI][42]
								R51->A51_NFISC	:=	aArrayF3[nI][01]
								R51->A51_CFOP	:=	aArrayF3[nI][05]
								//cSituaDoc := SintSitDoc (aArrayF3[nI][6],aArrayF3[nI][13],aArrayF3[nI][1],aArrayF3[nI][2],aArrayF3[nI][7])
								R51->A51_SITUAC	:=	aArrayF3[nI][39]
								R51->A51_CNORI	:=	cCNPJOri
							Else
								RecLock("R51",.T.)
								R51->A51_CNPJ	:=	cCNPJ
								R51->A51_IE		:=	cIE
								If aArrayF3[nI][39] == "E"
									R51->A51_EMISS	:= CDT->CDT_DTAREC
								Else
									R51->A51_EMISS	:= aArrayF3[nI][10]
								Endif
								R51->A51_UF		:=	aArrayF3[nI][22]
								R51->A51_SERIE	:=	aArrayF3[nI][02]
								R51->A51_NFISC	:=	aArrayF3[nI][01]
								R51->A51_SDOC   :=	aArrayF3[nI][42]
								R51->A51_CFOP	:=	aArrayF3[nI][05]
								//cSituaDoc := SintSitDoc (aArrayF3[nI][6],aArrayF3[nI][13],aArrayF3[nI][1],aArrayF3[nI][2],aArrayF3[nI][7])
								R51->A51_SITUAC	:=	aArrayF3[nI][39]
								R51->A51_CNORI	:=	cCNPJOri
							Endif
						Endif

						If("CANCELAD"$aArrayF3[nI][20] .Or.!empty(aArrayF3[nI][13]))
							RecLock("R51",.F.)
							R51->A51_VALTOT	+=	0
							R51->A51_VALIPI	+=	0
							R51->A51_ISENTA	+=	0
							R51->A51_OUTRAS	+=	0
						Else
							RecLock("R51",.F.)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Alteracao efetuada conforme autorizacao do Governo do Estado de Pernambuco            ³
							//³sob o numero de protocolo abaixo.                                                     ³
							//³Despacho ICMS-DV n 115/2012 - Processo n : 2011.000003580272-52                       ³
							//³Para o Estado de Pernambuco deve ser retirado o valor de ICMS ST das Notas de Entrada.³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

							If lSef .And. Left(aArrayF3[nI][05],1)<"5"
								R51->A51_VALTOT +=	aArrayF3[nI][17] - aArrayF3[nI][11]
							Else
								R51->A51_VALTOT	+=	aArrayF3[nI][17]
							EndIf
							R51->A51_VALIPI	+=	aArrayF3[nI][25]
							R51->A51_ISENTA	+=	aArrayF3[nI][26]
							R51->A51_OUTRAS	+=	aArrayF3[nI][27]
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Implementacao do SEF PE                                     ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						R51->A51_BASIPI	+=	aArrayF3[nI][28]
						R51->(MsUnlock())
					Endif
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gravacao do registro 53                                                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If 	(aArrayF3[nI][29]+aArrayF3[nI][11]) > 0 .And.;
					aArrayF3[nI][06] <> "L" .And. !(AModNot(aArrayF3[nI][07])$"07#08#09#10#11#26#57") .And.;
					(substr(aArrayF3[nI][05],1,1) >= "5" .Or. lReg53) .And. ((cMV_ESTADO $ "MG" .And. !aArrayF3[nI][34] == "1") .Or. (!cMV_ESTADO $ "MG"))		

					  If("CANCELAD"$aArrayF3[nI][20] .Or.!empty(aArrayF3[nI][13]))
						  If !R53->(dbSeek(cCNPJ+aArrayF3[nI][1]+aArrayF3[nI][2]+aArrayF3[nI][05]))
						     RecLock("R53",.T.)
						     R53->A53_FILIAL := IIF (lModoComp ,"",FWCodFil())
						     R53->A53_CNPJ  	:=	""
						     R53->A53_IE		:=  ""
						     R53->A53_EMISS	:=	aArrayF3[nI][10]
						     R53->A53_UF		:=	aArrayF3[nI][22]
						     R53->A53_MODELO	:=	AModNot(aArrayF3[nI][07])
						     R53->A53_SERIE	:=	aArrayF3[nI][02]
						     R53->A53_SDOC	:=	aArrayF3[nI][42]
						     R53->A53_NFISC	:=	aArrayF3[nI][01]
						     R53->A53_CFOP	:=	aArrayF3[nI][05]
						     R53->A53_EMIT   :=	IIf(aArrayF3[nI][21]=="S".Or.SubStr(aArrayF3[nI][05],1,1)>="5","P","T")
		                   //cSituaDoc := SintSitDoc (aArrayF3[nI][6],aArrayF3[nI][13],aArrayF3[nI][1],aArrayF3[nI][2])
						     R53->A53_SITUAC :=	aArrayF3[nI][39]
						     R53->A53_CNORI	:=	cCNPJOri
						     //13/03/2012
						     //Conforme a analista Liz Janise A. Carui os tipos de Antecipacao
						     //1 e 3 nao sao contemplados atualmente pelo Protheus
						     R53->A53_ANTECI := " "
						     IF aArrayF3[nI][22] == "EX" .And. aArrayF3[nI][39] <> "4" //importação
						        R53->A53_ANTECI := "6"
						     Else
					            IF aArrayF3[nI][34] == "1"  //antecipação
					               IF (aArrayF3[nI][35]+aArrayF3[nI][36]) > 0 //complementaçao
					                  R53->A53_ANTECI := "2"
					               Endif
					               IF (aArrayF3[nI][37]+aArrayF3[nI][38]) > 0 //margem de lucro
					                  R53->A53_ANTECI := "4"
					               Endif
					            Endif
                          Endif
                          If lGimPB .And. Substr(aArrayF3[nI][5],1,1) >= "5"
                              SA1->(DbSetOrder(1))
                              SA1->(MsSeek(xFilial("SA1")+aArrayF3[nI][3]+aArrayF3[nI][4]))
                              If SA1->A1_REGPB == "1"
                                 R53->A53_ANTECI := "5"
                              EndIf
                          EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Para o registro 53 campo (Codigo que identifica o tipo da Antecipação Tributaria) as situacoes diferentes de branco,         ³
							//³devera ser informado o codigo 4 (Antecipacao tributaria com MVA (Margem de Valor Agregado),                                  ³
							//³efetuada pelo destinatario encerrando a fase de tributacao). Esta situacao não se aplica ao Rio Grande do Sul.               ³
							//³Nas operacoes com o Rio Grande do Sul, o codigo de antecipacao, campo do registro tipo 53, sempre sera preenchido com branco.³
							//³Atenciosamente,                                                                                                              ³
							//³Sergio Caetano - Atendimento SEFAZ/RS - Sintegra/SPED Fiscal - EFD                                                           ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
                           If (SuperGetMv("MV_ESTADO")=="RS" .Or. (MV_PAR06 =="RS" .And. MV_PAR07 == 1)) .And. aArrayF3[1][34] == "1"
                               R53->A53_ANTECI	:= " "
                           EndIf

					   Else
						 RecLock("R53",.F.)
					   Endif
						/*DbSelectArea ("SF3")
						SF3->(DbSetOrder (5))
						SF3->(MsSeek (xFilial ("SF3")+R50->A50_SERIE+R50->A50_NFISC)) 
						*/
						R53->A53_BRICMS	:=	0
						R53->A53_VALRET	:=	0
						R53->A53_DESPES	:=	0
						R53->(MsUnlock())
				Else
					If aArrayF3[nI][7] <> "NFCE"
					     If !R53->(dbSeek(cCNPJ+aArrayF3[nI][1]+aArrayF3[nI][2]+aArrayF3[nI][05]))

                          RecLock("R53",.T.)
                          R53->A53_FILIAL := IIF (lModoComp ,"",FWCodFil())
                          R53->A53_CNPJ  	:=	cCNPJ
                          R53->A53_IE		:=  cIE
						     If aArrayF3[nI][39] == "E"
						 		 R53->A53_EMISS	:= CDT->CDT_DTAREC 
						     Else
		  				  		 R53->A53_EMISS	:=	aArrayF3[nI][10]
						     Endif
						     R53->A53_UF		:=	aArrayF3[nI][22]
						     R53->A53_MODELO	:=	AModNot(aArrayF3[nI][07])
						     R53->A53_SERIE	:=	aArrayF3[nI][02]
						     R53->A53_SDOC	:=	aArrayF3[nI][42]
						     R53->A53_NFISC	:=	aArrayF3[nI][01]
						     R53->A53_CFOP	:=	aArrayF3[nI][05]
						     R53->A53_EMIT   	:=	IIf(aArrayF3[nI][21]=="S".Or.SubStr(aArrayF3[nI][05],1,1)>="5","P","T")
						     //cSituaDoc := SintSitDoc (aArrayF3[nI][6],aArrayF3[nI][13],aArrayF3[nI][1],aArrayF3[nI][2])
						     R53->A53_SITUAC  :=	aArrayF3[nI][39]
						     R53->A53_CNORI	:=	cCNPJOri
						     //13/03/2012
						     //Conforme a analista Liz Janise A. Carui os tipos de Antecipacao
						     //1 e 3 nao sao contemplados atualmente pelo Protheus
						     R53->A53_ANTECI := " "
						     IF aArrayF3[nI][22] == "EX" .And. aArrayF3[nI][39] <> '4' //importação
						        R53->A53_ANTECI := "6"
						     Else
					            IF aArrayF3[nI][34] == "1"  //antecipação
					               IF (aArrayF3[nI][35]+aArrayF3[nI][36]) > 0 //complementaçao 
					                  R53->A53_ANTECI := "2"
					               Endif
					               IF (aArrayF3[nI][37]+aArrayF3[nI][38]) > 0 //margem de lucro
					                  R53->A53_ANTECI := "4"
					               Endif
					            Endif
					         Endif
					         If lGimPB .And. Substr(aArrayF3[nI][5],1,1) >= "5"
					       		SA1->(DbSetOrder(1))
								   SA1->(MsSeek(xFilial("SA1")+aArrayF3[nI][3]+aArrayF3[nI][4]))
								   If SA1->A1_REGPB == "1"
									  R53->A53_ANTECI := "5"
								   EndIf
						     EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Para o registro 53 campo (Codigo que identifica o tipo da Antecipação Tributaria) as situacoes diferentes de branco,         ³
							//³devera ser informado o codigo 4 (Antecipacao tributaria com MVA (Margem de Valor Agregado),                                  ³
							//³efetuada pelo destinatario encerrando a fase de tributacao). Esta situacao não se aplica ao Rio Grande do Sul.               ³
							//³Nas operacoes com o Rio Grande do Sul, o codigo de antecipacao, campo do registro tipo 53, sempre sera preenchido com branco.³
							//³Atenciosamente,                                                                                                              ³
							//³Sergio Caetano - Atendimento SEFAZ/RS - Sintegra/SPED Fiscal - EFD                                                           ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							  If (SuperGetMv("MV_ESTADO")=="RS" .Or. (MV_PAR06 =="RS" .And. MV_PAR07 == 1)) .And. aArrayF3[1][34] == "1"
								  R53->A53_ANTECI	:= " "
							  EndIf

					  Else
				         RecLock("R53",.F.)
				      Endif
				    /*   
				    DbSelectArea ("SF3")
	   				SF3->(DbSetOrder (5))
	   				SF3->(MsSeek (xFilial ("SF3")+R50->A50_SERIE+R50->A50_NFISC))
	   				*/
				   If("CANCELAD"$aArrayF3[nI][20] .Or.!empty(aArrayF3[nI][13]))
                    R53->A53_BRICMS	:=	0
                    R53->A53_VALRET	:=	0
                    R53->A53_DESPES	:=	0
                    R53->(MsUnlock())
					Else
					       If aArrayF3[nI][06] == "I"
					           R53->A53_BRICMS += aArrayF3[nI][17]
					       Else
					           R53->A53_BRICMS +=	IIF(aArrayF3[nI][40] == 0, aArrayF3[nI][29],0)
					       EndIf
					       If lImpSt .And. Left(aArrayF3[nI][05],1)<"5" .And. aArrayF3[nI][11]>0	//F3_ICMSRET - Imposto Retido
					          R53->A53_VALRET	:=	0
					       Else
					          R53->A53_VALRET += (aArrayF3[nI][11] - aArrayF3[nI][40])
					       Endif
					       R53->A53_DESPES +=	aArrayF3[nI][23]
					       R53->(MsUnlock())
					    Endif
					EndIf
				EndIf
			EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Grava Registro Tipo 61³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				
				GrvReg61(aArrayF3,nI,lConv76,lNfProd,lSef,cArqMag,cMV_ESTADO, cNorma)

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Monta Registro Tipo 70 - SINTEGRA e SEF              ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

				//Esse if serve para alimentaR a string cModNF com os devidos modelos de
				//nota fiscal para geracao da SEF ou SINTEGRA
				If lSef
					cModNF := "01/07/08/09/10/11/55/57"
				else
					cModNF := "01/07/08/09/10/11/26/55/57"
				endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Monta Registro Tipo 70 pelo ponto de entrada para que³ 
				//³nao tenha inconsistencias entre reg 70 e 71          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If cModNotAux$cModNF .And. aArrayF3[nI][6]<>"L"
					If lMtaTIP70
						aArray70 := aClone(aArrayF3)
						Execblock("MTATIP70",.F.,.F.,{aArray70})
					EndIf
				EndIf

				If cModNotAux$cModNF .And. aArrayF3[nI][6]<>"L" .And. !lMtaTIP70
					If  lSef .And. !Empty(aArrayF3[1][13]) .And. !(AModNot(aArrayF3[1][7])$"01/55")
						RecLock("R70",.T.)
						R70->A70_EMISS	:=	aArrayF3[1][10]
						If lSintMG
							R70->A70_UF :=	cTranspEst
						Endif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³O aplicativo SEF não esta preparado para recepcionar os registros no modleo 57,                                           ³
						//³a orientação é que seja digitato no SEF como modelo 8 e coloque no campo observação a que documento se faz referencia.    ³
						//³Orientação: SEF/DEF/SINTEGRA - UGST-DRT/SEFAZ - PE  
						//Mesmo tramento  para série.                                                                      ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

						lAltModNF := (AllTrim(UPPER(MV_PAR03)) == "VALPR05" .And. (AModNot(aArrayF3[1][7]) == "57" .Or. aArrayF3[1][7] == "CTE")) 

						R70->A70_MODELO := IIf(lAltModNF,"08",AModNot(aArrayF3[1][7]))
						R70->A70_ESPNFS := IIF(lAltModNF,"CTR",aArrayF3[1][7])

						If R70->A70_MODELO $ "07/08/09/10/11" .And. Type(AllTrim(aArrayF3[1][2]))=="N"
							R70->A70_SERIE  := "U"
							R70->A70_SUBSER := Substr(aArrayF3[nI][42],2,2)
						Else
							If R70->A70_MODELO $ "10"
								R70->A70_SERIE := "U"
							Else
								R70->A70_SERIE := Substr(aArrayF3[1][42],1,1)
							EndIf
							If Substr(aArrayF3[1][2],1,1)$"B/C"
								R70->A70_SUBSER := "U"
							Else
								R70->A70_SUBSER := Substr(aArrayF3[1][42],2,2)
							EndIf
						EndIf

						R70->A70_NFISC	:=	aArrayF3[1][1]
						R70->A70_CFOP	:=	aArrayF3[1][5]
						R70->A70_SITUAC	:=	"S"
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Campos para o layout SAPI³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						R70->A70_CLIFOR	:=	aArrayF3[nI][3]
						R70->A70_LOJCF	:=	aArrayF3[nI][4]
						R70->A70_TIPO	:=	aArrayF3[nI][6]
						R70->A70_CFOMOV	:=	aArrayF3[1][5]
						R70->(MsUnlock())
					Else
						If !((cModNotAux$"01/55") .Or.;
							(cModNotAux$"01/55" .And. Alltrim(aArrayF3[nI][5])$cCfopPR)) .And. (!lOpIntEst .Or. cTranspEst == cEstDest)
							If (nI==1 .Or. cCfoAux<>aArrayF3[nI][05]) .Or. R70->(Eof())
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Checando se frete CIF ou FOB         ³
								//³- com valor de frete na NF = 1 - CIF ³
								//³- sem valor de frete na NF = 2 - FOB ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								cTpFrete := "1"
								cIE70    := ""
								If substr(aArrayF3[nI][5],1,1)<"5"
									SF1->( dbSetOrder(1) )
									SF1->( MsSeek(F3Filial("SF1",cAliasSF3)+aArrayF3[nI][1]+aArrayF3[nI][2]+aArrayF3[nI][3]+aArrayF3[nI][4]))
									If SF1->F1_FRETE = 0
										cTpFrete := "1"
									Endif
									If SF1->F1_FRETE = 0 .And. SF1->F1_ORIGLAN=="F " .And. SF1->F1_TIPO=="C" //NF Conhecimento Frete
										cTpFrete := "2"
									Endif
								Else
									SF2->( dbSetOrder(1) )
									SF2->( MsSeek(F3Filial("SF2",cAliasSF3)+aArrayF3[nI][1]+aArrayF3[nI][2]+aArrayF3[nI][3]+aArrayF3[nI][4]))
									If SF2->F2_FRETE = 0
										cTpFrete := "1"
									ElseIf SF2->F2_FRETE = 0 .And. SF1->F1_ORIGLAN=="F " .And. SF1->F1_TIPO=="C"
										cTpFrete := "2"
									Endif

									//--So faz esta validacao no ambiente SIGATMS
									If lIntTMS	.And. ("CTR" $AllTrim(SF2->F2_ESPECIE) ;
												.Or.   "NFST"$AllTrim(SF2->F2_ESPECIE) ;
												.Or.   "CTE" $AllTrim(SF2->F2_ESPECIE) )
										DT6->(dbSetOrder(1))
										If DT6->(DbSeek(Iif(FWModeAccess("DT6",3)=="E",SF2->F2_FILIAL,xFilial('DT6'))+SF2->F2_FILIAL+SF2->F2_DOC+SF2->F2_SERIE))
											cTpFrete := DT6->DT6_TIPFRE
										EndIf
									EndIf
								EndIf

								//-- retorna situacao do documento fiscal
								//cSituaDoc := SintSitDoc(aArrayF3[nI][6],aArrayF3[nI][13],aArrayF3[nI][1],aArrayF3[nI][2],.T.)
								If aArrayF3[nI][39]<> "4"
									cIE70 := IIF(lIntTMS .And. AModNot(aArrayF3[1][7])$"08/09/10/11/26/57",Iif(!Empty(cInscr),cInscr,cTranspIns),cTranspIns)
								EndIf
								RecLock("R70",.T.)
								R70->A70_CNPJ		:=	cTranspCGC
								R70->A70_IE			:=	cIE70
								R70->A70_EMISS		:=	aArrayF3[nI][10]
								R70->A70_UF			:=	cTranspEst
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³O aplicativo SEF não esta preparado para recepcionar os registros no modleo 57,                                           ³
								//³a orientação é que seja digitato no SEF como modelo 8 e coloque no campo observação a que documento se faz referencia.    ³
								//³Orientação: SEF/DEF/SINTEGRA - UGST-DRT/SEFAZ - PE 
								//³Mesmo tratamento para o VALPR05.                                                                                                ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

								lAltModNF := ((lSef .Or. lValPR .Or. cMV_ESTADO == 'PR') .And. AllTrim(UPPER(MV_PAR03)) == "VALPR05")

								R70->A70_MODELO		:=  IIf(lAltModNF, IIf(cModNotAux$"57","08",cModNotAux),cModNotAux)
								R70->A70_ESPNFS		:= 	IIf(lAltModNF, IIF(aArrayF3[nI][7]$"CTE","CTR",aArrayF3[nI][7]),aArrayF3[nI][7])

								If R70->A70_MODELO $ "07/08/09/10/11/26" .And. Type(AllTrim(aArrayF3[1][2]))=="N"
									R70->A70_SERIE  := "U"
									R70->A70_SUBSER := Substr(aArrayF3[nI][42],2,2)
								Else
									If R70->A70_MODELO $ "10"
										R70->A70_SERIE := "U"
									Else
										R70->A70_SERIE := Substr(aArrayF3[1][42],1,1)
									EndIf
									If Substr(aArrayF3[1][2],1,1)$"B/C"
										R70->A70_SUBSER := "U"
									Else
										R70->A70_SUBSER := Substr(aArrayF3[nI][42],2,2)
									EndIf
								EndIf

								R70->A70_NFISC		:=	aArrayF3[nI][1]
								R70->A70_CFOP		:=	aArrayF3[nI][5]
								R70->A70_CIFFOB		:=	cTpFrete
								R70->A70_SITUAC		:=	aArrayF3[nI][39]
								R70->A70_CNORI		:=	cTranspOri
								R70->A70_NOME		:=	cRazSoc
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Campos para o layout SAPI³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								R70->A70_CLIFOR	:=	aArrayF3[nI][3]
								R70->A70_LOJCF	:=	aArrayF3[nI][4]
								R70->A70_TIPO	:=	aArrayF3[nI][6]
								R70->A70_CFOMOV	:=	aArrayF3[nI][5]
								If Substr(aArrayF3[1][5],1,1)<"5"
									R70->A70_DTOP	:=	aArrayF3[1][18]		//Somente Entrada - Data Emissao
								Endif
								nSefObs ++
								R70->A70_ALQICM	:=	aArrayF3[1][8]
								R70->A70_OBS	:=  IIf(lSef .And. (cModNotAux == "57"),nSefObs,0)
							Endif
							RecLock("R70",.F.)
							If("CANCELAD"$aArrayF3[nI][20] .Or.!empty(aArrayF3[nI][13]))
								R70->A70_VALTOT += 0
								R70->A70_BSICM  += 0
								R70->A70_VALICM += 0
								R70->A70_ISENTA += 0
								R70->A70_OUTRAS += 0
							Else
								R70->A70_VALTOT += aArrayF3[nI][17]
								R70->A70_BSICM  += aArrayF3[nI][19]
								R70->A70_VALICM += aArrayF3[nI][16]
								R70->A70_ISENTA += aArrayF3[nI][12]
								R70->A70_OUTRAS += aArrayF3[nI][15]
							EndIf
							MsUnlock()
						Endif
					EndIf
				EndIf
				cChaveAux  := aArrayF3[nI][24]
				cChaveAux2 := aArrayF3[nI][08]
				cCfoAux    := aArrayF3[nI][05]
				//Alimenta array de valor faturado por municipio
				If !(SubStr(aArrayF3[1][5],1,4)$cCfGimpb)
					If !Empty(cCdMunGIM) .And. Empty(aArrayF3[nI][13])
						nPos1 := Ascan(aDadMun,{|x|x[01]==cCdMunGIM})
						If nPos1 > 0
							aDadMun[nPos1,02] += aArrayF3[nI][17]
						Else
							AADD(aDadMun,{cCdMunGIM,aArrayF3[nI][17]})
						EndIf
					EndIf
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Implementando Reg 8827 e 8828 para a Gim PB                 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

				If lGimPB .And. lGera2728
					DbSelectArea("SB1")
					SB1->(DbSetOrder(1))
					SB1->(DbGoTop())

					If SubStr(aArrayF3[nI][5],1,1) $ "1/2" // Entradas       REG 8827
						DbSelectArea("R27")
						R27->(DbSetOrder(1))
						R27->(DbGoTop())

						DbSelectArea("SD1")
						SD1->(DbSetOrder(1))
						SD1->(DbGoTop())

						If SD1->(DbSeek( aArrayF3[nI][32] + aArrayF3[nI][1] + aArrayF3[nI][2] + aArrayF3[nI][3] + aArrayF3[nI][4] ) )

							Do While SD1->( !EoF() ) .And. SD1->D1_FILIAL==aArrayF3[nI][32] .And. SD1->D1_DOC == aArrayF3[nI][1] .And. SD1->D1_SERIE == aArrayF3[nI][2] .And.;
								SD1->D1_FORNECE == aArrayF3[nI][3] .And. SD1->D1_LOJA  == aArrayF3[nI][4]

								If SB1->(DbSeek( xFilial("SB1") + SD1->D1_COD )) .And. Alltrim(SD1->D1_CF) == Alltrim(aArrayF3[nI][5]) .And. SD1->D1_PICM == aArrayF3[nI][8]

									If SB1->(FieldPos(cB1_Farm)) > 0

										If Alltrim(SB1->(FieldGet(FieldPos(cB1_Farm)))) $ "1/S"   // Indica que é um produto farmacêutico

											//If ! R27->( DbSeek( StrZero(SD1->D1_PICM, 5,2) ) )
											If !lGIMPB27
												RecLock("R27",.T.)
												lGIMPB27 := .T.
												//R27->R27_ALIQ     := SD1->D1_PICM
											Else
												RecLock("R27",.F.)
											EndIf

											If SubStr(SD1->D1_CF, 1,1) == "1"
												R27->R27_BCINTE  += SD1->D1_BRICMS
												R27->R27_ALINTE  := SD1->D1_ALIQSOL
												R27->R27_VLINTE  += SD1->D1_ICMSRET
											Else
												R27->R27_BCEXTE  += SD1->D1_BRICMS
												R27->R27_ALEXTE  := SD1->D1_ALIQSOL
												R27->R27_VLEXTE  += SD1->D1_ICMSRET
											EndIf

											R27->( MsUnlock() )

										EndIf
									EndIf
								EndIf
								SD1->( DbSkip() )
							EndDo
						EndIf

					ElseIf SubStr(aArrayF3[nI][5],1,1) $ "5/6"    // Saídas    REG 8828

						DbSelectArea("SA1")
						SA1->(DbSetOrder(1))
						SA1->(DbGoTop())

						DbSelectArea("SD2")
						SD2->(DbSetOrder(3))
						SD2->(DbGoTop())

						DbSelectArea("R28")
						R28->(DbSetOrder(1))
						R28->(DbGoTop())

						If SD2->(DbSeek( aArrayF3[nI][32] + aArrayF3[nI][1] + aArrayF3[nI][2] + aArrayF3[nI][3] + aArrayF3[nI][4] ) )

							Do While SD2->( !EoF() ) .And. SD2->D2_FILIAL==aArrayF3[nI][32] .And. SD2->D2_DOC == aArrayF3[nI][1] .And. SD2->D2_SERIE == aArrayF3[nI][2] .And.;
								SD2->D2_CLIENTE == aArrayF3[nI][3] .And. SD2->D2_LOJA == aArrayF3[nI][4]

								If SB1->(DbSeek( xFilial("SB1") + SD2->D2_COD )) .And. Alltrim(SD2->D2_CF) == Alltrim(aArrayF3[nI][5]) .And. SD2->D2_PICM == aArrayF3[nI][8]

									If SB1->(FieldPos(cB1_Farm)) > 0

										If Alltrim(SB1->(FieldGet(FieldPos(cB1_Farm)))) $ "1/S"   // Indica que é um produto farmacêutico

											lHospital := .F.
											lNContrib := .F.

											If SA1->(DbSeek( xFilial("SA1") + SD2->D2_CLIENTE + SD2->D2_LOJA )) .And.;
												SA1->A1_REGPB != "1"

												If SA1->(FieldPos(cA1_Hosp)) > 0

													lHospital := IIF( Alltrim(SA1->(FieldGet(FieldPos(cA1_Hosp)))) $ "1/S", .T., .F. )
													lNContrib := IIf(Empty(SA1->A1_INSCR).Or."ISENT"$SA1->A1_INSCR.Or."RG"$SA1->A1_INSCR.Or.(SA1->A1_CONTRIB == "2"),.T.,.F.)

													//If ! R28->( DbSeek( StrZero(SD2->D2_PICM, 5,2) ) )
													If !lGIMPB28
														RecLock("R28",.T.)
														lGIMPB28 := .T.
														//R28->R28_ALIQ     := SD2->D2_PICM
													Else
														RecLock("R28",.F.)
													EndIf

													If SubStr(SD2->D2_CF, 1,1) == "5"  // movimentação interna
														If lHospital
															R28->R28_BHOSIN  += SD2->D2_BRICMS
															R28->R28_AHOSIN  := SD2->D2_ALIQSOL
															R28->R28_VHOSIN  += SD2->D2_ICMSRET
														ElseIf lNContrib
															R28->R28_BNCOIN  += SD2->D2_BRICMS
															R28->R28_ANCOIN  := SD2->D2_ALIQSOL
															R28->R28_VNCOIN  += SD2->D2_ICMSRET
														Else
															R28->R28_BCONIN  += SD2->D2_BRICMS
															R28->R28_ACONIN  := SD2->D2_ALIQSOL
															R28->R28_VCONIN  += SD2->D2_ICMSRET
														EndIf
													Else                                // movimentação interestadual
														R28->R28_BASEEX  += SD2->D2_BRICMS
														R28->R28_ALIQEX  := SD2->D2_ALIQSOL
														R28->R28_VALREX  += SD2->D2_ICMSRET
													EndIF

													R28->( MsUnlock() )

												EndIf
											EndIf
										EndIf
									EndIF
								EndIf
								SD2->( DbSkip() )
							EndDo
						EndIf
					EndIf
				EndIf
			Next
			aArrayF3  := {}
			cChaveAux := ""
			cChaveAux2:= ""
			cCfoAux   := ""
			lObs      := .F.
			cObs      := ""
		Endif
		dbSelectArea(cAliasSF3)
	EndDo
	If lGIMPB18
		If lGimPB .And. lGera18
			dbSelectArea("R18")
			R18->(DBSETORDER(1))
			If R18->(LastRec()) > 0
				RecLock("R18",.F.)
			else
				RecLock("R18",.T.)
			Endif
			If Len(aReg8818) > 0
				R18_DFALIQ += aReg8818[1]
				R18_ANTECI += aReg8818[2]
				R18_ENTRAD += aReg8818[3]
				R18_IMPORT += aReg8818[4]
			Else
				R18_DFALIQ += 0
				R18_ANTECI += 0
				R18_ENTRAD += 0
				R18_IMPORT += 0
			Endif
			aSimples := LeSimpNa(MV_PAR48)
			If len(aSimples) > 0
				R18_FATURA += aSimples[1][1]
				R18_VALREC += aSimples[1][2]
				R18_PERSIM += aSimples[1][3]
			Else
				R18_FATURA += 0
				R18_VALREC += 0
				R18_PERSIM += 0
			Endif
			R18->(MsUnlock())	
		Endif
		lGIMPB18 := .F.
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se a UF do parametro e a mesma da empresa corrente  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(cEstDest) .And. SM0->M0_ESTENT <> cEstDest .And. MV_PAR21<>3
		lCupom := .F. //Se o estado for diferente do parametro nao pode ser gerado os registros tipo 60
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta Registro Tipo 60³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SFI->(LastRec()) > 0 .And. MV_PAR05 <> 4 .And. lCupom .And. MV_PAR11 <> 1
		dbSelectArea("SFI")
		dbSetOrder(1)
		#IFDEF TOP
			If TcSrvType()<>"AS/400"
				cAliasSFI:= "A940aSFI"
				lQuery   := .T.
				aStruSFI := SFI->(dbStruct())
				cQuery := "SELECT SFI.*,SF3.F3_NRLIVRO NRLIVRO "
				cQuery += "FROM "
				cQuery += RetSqlName("SFI") + " SFI "
				cQuery += "LEFT JOIN "+RetSqlName("SL2")+" SL2 ON "
				cQuery += "SFI.FI_NUMFIM = SL2.L2_DOC AND "
				cQuery += "SFI.FI_PDV = SL2.L2_PDV AND "
				cQuery += "SFI.FI_DTMOVTO = SL2.L2_EMISSAO AND SL2.D_E_L_E_T_ = '' AND L2_PDV <> '' "
				cQuery += "LEFT JOIN "+RetSqlName("SD2")+" SD2 ON "
				cQuery += "SD2.D2_DOC = SL2.L2_DOC AND "
				cQuery += "SD2.D2_SERIE = SL2.L2_SERIE AND "
				cQuery += "SD2.D2_PDV = SL2.L2_PDV AND SD2.D_E_L_E_T_ = '' "
				cQuery += "LEFT JOIN "+RetSqlName("SF3")+" SF3 ON "
				cQuery += "SD2.D2_CLIENTE = SF3.F3_CLIEFOR AND "
				cQuery += "SD2.D2_LOJA = SF3.F3_LOJA AND "
				cQuery += "SD2.D2_DOC = SF3.F3_NFISCAL AND "
				cQuery += "SD2.D2_SERIE = SF3.F3_SERIE AND SF3.D_E_L_E_T_ = '' "
				cQuery += "WHERE "
				cQuery += "SFI.FI_FILIAL = '"+xFilial("SFI")+"' AND "
				cQuery += "SFI.FI_DTMOVTO>='"+Dtos(dDtIni)+"' AND "
				cQuery += "SFI.FI_DTMOVTO<='"+Dtos(dDtFim)+"' AND "
				cQuery += "SFI.D_E_L_E_T_ = ' ' "
				cQuery += "ORDER BY "+SqlOrder(SFI->(IndexKey()))
				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSFI)
				For nX := 1 To Len(aStruSFI)
					If aStruSFI[nX][2] <> "C"
						TcSetField(cAliasSFI,aStruSFI[nX][1],aStruSFI[nX][2],aStruSFI[nX][3],aStruSFI[nX][4])
					EndIf
				Next nX
			Else
		#ENDIF	
				dbSelectArea(cAliasSFI)
				cIndex := CriaTrab(,.F.)
				cKey := IndexKey()	
				cFilter := 'FI_FILIAL == "'+xFilial("SFI")+'" .And. (Dtos(FI_DTMOVTO) >= "'+Dtos(dDtIni)+'" .And. Dtos(FI_DTMOVTO) <= "'+Dtos(dDtFim)+'")'
				IndRegua(cAliasSFI,cIndex,cKey,,cFilter,"Selecionando Registros...")
				dbGotop()
		#IFDEF TOP
			Endif
		#ENDIF
		dbSelectArea(cAliasSFI)
	
		While (cAliasSFI)->(!Eof())
			If !M60->(MsSeek(DTOS((cAliasSFI)->FI_DTMOVTO)+StrZero(Val(Right(Alltrim((cAliasSFI)->FI_PDV),3)),3))) .AND. ((cAliasSFI)->NRLIVRO == cNrLivro .Or. cNrLivro == "*")
					RecLock("M60",.T.)
					M60->M60_EMISS  := (cAliasSFI)->FI_DTMOVTO
					M60->M60_NUMFAB := (cAliasSFI)->FI_SERPDV
					M60->M60_PDV    := StrZero(Val(Right(Alltrim((cAliasSFI)->FI_PDV),3)),3)
					M60->M60_MODELO := "2D" 
					M60->M60_NUMINI := (cAliasSFI)->FI_NUMINI
					M60->M60_NUMFIM := (cAliasSFI)->FI_NUMFIM
					M60->M60_REDUCZ := (cAliasSFI)->FI_NUMREDZ
					M60->M60_CRO	:= Val(PADR((cAliasSFI)->FI_CRO,3))
					M60->M60_VENDA 	:= (cAliasSFI)->FI_VALCON+(cAliasSFI)->FI_DESC+(cAliasSFI)->FI_CANCEL+(cAliasSFI)->FI_ISS
					M60->M60_GERAL	:= (cAliasSFI)->FI_GTFINAL
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Implementacao SEF PE                             ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					M60->M60_GTINI	:= (cAliasSFI)->FI_GTINI
					M60->M60_VLIQ	:= (cAliasSFI)->FI_VALCON
					M60->M60_OBS	:= 0
					M60->(MsUnlock())
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Totaliza cupons fiscais pela Situacao Tributaria             ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (cAliasSFI)->FI_SUBTRIB > 0
					RecLock("A60",.T.)
					A60->A60_EMISS	:= (cAliasSFI)->FI_DTMOVTO
					A60->A60_NUMFAB	:= (cAliasSFI)->FI_SERPDV
					A60->A60_SITTRI	:= "F"
					A60->A60_VALOR	:= (cAliasSFI)->FI_SUBTRIB
					A60->(MsUnlock())
				EndIf
				If (cAliasSFI)->FI_ISENTO > 0
					RecLock("A60",.T.)
					A60->A60_EMISS	:= (cAliasSFI)->FI_DTMOVTO
					A60->A60_NUMFAB	:= (cAliasSFI)->FI_SERPDV
					A60->A60_SITTRI	:= "I"
					A60->A60_VALOR	:= (cAliasSFI)->FI_ISENTO
					A60->(MsUnlock())
				EndIf
				If (cAliasSFI)->FI_CANCEL > 0
					RecLock("A60",.T.)
					A60->A60_EMISS	:= (cAliasSFI)->FI_DTMOVTO
					A60->A60_NUMFAB	:= (cAliasSFI)->FI_SERPDV
					A60->A60_SITTRI	:= "CANC"
					A60->A60_VALOR	:= (cAliasSFI)->FI_CANCEL
					A60->(MsUnlock())
				EndIf
				If (cAliasSFI)->FI_NTRIB > 0
					RecLock("A60",.T.)
					A60->A60_EMISS	:= (cAliasSFI)->FI_DTMOVTO
					A60->A60_NUMFAB	:= (cAliasSFI)->FI_SERPDV
					A60->A60_SITTRI	:= "N"
					A60->A60_VALOR	:= (cAliasSFI)->FI_NTRIB
					A60->(MsUnlock())
				EndIf
				If (cAliasSFI)->FI_DESC > 0
					RecLock("A60",.T.)
					A60->A60_EMISS	:= (cAliasSFI)->FI_DTMOVTO
					A60->A60_NUMFAB	:= (cAliasSFI)->FI_SERPDV
					A60->A60_SITTRI	:= "DESC"
					A60->A60_VALOR	:= (cAliasSFI)->FI_DESC
					A60->(MsUnlock())
				EndIf
				If (cAliasSFI)->FI_ISS > 0
					RecLock("A60",.T.)
					A60->A60_EMISS	:= (cAliasSFI)->FI_DTMOVTO
					A60->A60_NUMFAB	:= (cAliasSFI)->FI_SERPDV
					A60->A60_SITTRI	:= "ISS"
					A60->A60_VALOR	:= (cAliasSFI)->FI_ISS
					A60->(MsUnlock())
				EndIf
				aStruSFI := (cAliasSFI)->(dbStruct())
				For nX := 1 To Len(aStruSFI)
					If "FI_BAS"$(cAliasSFI)->(FieldName(nX))
						If (cAliasSFI)->(FieldGet(nX)) > 0
							RecLock("A60",.T.)
							A60->A60_EMISS	:= (cAliasSFI)->FI_DTMOVTO
							A60->A60_NUMFAB	:= (cAliasSFI)->FI_SERPDV
							A60->A60_SITTRI	:= aFISFill(Num2Chr(Val(SubStr((cAliasSFI)->(FieldName(nX)),7)),4),4)
							A60->A60_VALOR	:= (cAliasSFI)->(FieldGet(nX))
							A60->(MsUnlock())
						EndIf
					EndIf
				Next nX	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Implementacao SEF PE                             ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				RecLock("M60",.F.)
				M60->M60_ICMSD += (cAliasSFI)->FI_IMPDEBT
				M60->(MsUnlock ())
			Endif
			(cAliasSFI)->(dbSkip())
		EndDo
		If lQuery
			dbSelectArea(cAliasSFI)
			dbCloseArea()
		Else
		dbSelectArea("SFI")
			RetIndex("SFI")
			dbClearFilter()
			Ferase(cIndex+OrdBagExt())
		Endif
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta Registros Tipo 60D, 60I, 60R ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SFI->(LastRec()) > 0 .And. MV_PAR11 <> 1
		dbSelectArea("SF2")
		dbSetOrder(1)

		dbSelectArea("SD2")
		ProcRegua(LastRec())
		#IFDEF TOP
			If TcSrvType()<>"AS/400"
				cAliasSD2 := "a940ASD2"
				aStru  := SD2->(dbStruct())
				cQuery := "SELECT SFT.FT_NRLIVRO AS NRLIVRO, SD2.D2_DOC, SD2.D2_SERIE, SD2.D2_CLIENTE, SD2.D2_LOJA, SD2.D2_COD, 
				cQuery += "SD2.D2_TES, SD2.D2_CF, SD2.D2_CLASFIS, SD2.D2_EMISSAO, SD2.D2_PDV, SD2.D2_SITTRIB, SD2.D2_DESC, "
				cQuery += "SD2.D2_PICM, SD2.D2_QUANT, SD2.D2_PRCVEN, SD2.D2_TOTAL, SD2.D2_BASEISS, SD2.D2_VALISS, SD2.D2_BASEICM, 
				cQuery += "SD2.D2_VALICM, SD2.D2_ICMSRET, D2_BRICMS, SD2.D_E_L_E_T_ AS DELSD2, F2_ECF, F2_NFCUPOM "
				cQuery += "FROM "+RetSqlName("SD2")+" SD2 "
				cQuery += "LEFT JOIN "+RetSqlName("SF2")+" ON D2_DOC = F2_DOC AND D2_SERIE = F2_SERIE AND D2_FILIAL = F2_FILIAL " 
				cQuery += "LEFT JOIN "+RetSqlName("SFT")+" SFT ON "
				cQuery += "FT_FILIAL = D2_FILIAL AND D2_CLIENTE=FT_CLIEFOR AND D2_LOJA=FT_LOJA AND D2_DOC= FT_NFISCAL AND D2_SERIE = FT_SERIE AND D2_CF=FT_CFOP AND "
				cQuery += "D2_COD = FT_PRODUTO AND D2_ITEM = FT_ITEM AND SFT.D_E_L_E_T_ = ''"
				cQuery += "WHERE D2_FILIAL='"+xFilial("SD2")+"' AND "
				cQuery += "D2_EMISSAO>='"+Dtos(dDtIni)+"' AND "
				cQuery += "D2_EMISSAO<='"+Dtos(dDtFim)+"' AND "	
				If MV_PAR21==1
					cQuery += "(D2_CF LIKE '6%') AND D2_ICMSRET>0 AND "
				ElseIf MV_PAR21==2
					cQuery += "(D2_CF LIKE '6%') AND "
				Else
					cQuery += "(D2_CF LIKE '5%' OR D2_CF LIKE '6%' OR D2_CF LIKE '7%') AND "
				EndIf
				cQuery += "D2_PDV <> ' ' "
				If Upper(AllTrim(MV_PAR03))=="VALPR05"
					cQuery += " AND SD2.D_E_L_E_T_ = ' ' "
				EndIf
				cQuery += "ORDER BY D2_FILIAL, D2_PDV, D2_EMISSAO, D2_DOC, D2_SERIE"
				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD2,.T.,.T.)

				For nX := 1 To Len(aStru)
					If aStru[nX][2] <> "C"
						TcSetField(cAliasSD2,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
					EndIf
				Next nX
				dbSelectArea(cAliasSD2)
			Else
		#ENDIF
				cIndex2 := CriaTrab(NIL,.F.)
				cKey    := 'D2_FILIAL+D2_PDV+DTOS(D2_EMISSAO)'
				cFilter := 'D2_FILIAL == "'+xFilial("SD2")+'" .And. (Dtos(D2_EMISSAO) >= "'+Dtos(dDtIni)+'" .And. Dtos(D2_EMISSAO) <= "'+Dtos(dDtFim)+'")'
				cFilter += '.And. !Empty(D2_PDV)'
				If MV_PAR21==1
					cFilter += ' .And. Substr(D2_CF,1,1)$"6" .And. D2_ICMSRET>0'
				ElseIf MV_PAR21==2
					cFilter += ' .And. Substr(D2_CF,1,1)$"6"'
				Else
					cFilter += ' .And. Substr(D2_CF,1,1)$"5,6,7"'
				EndIf
				IndRegua(cAliasSD2,cIndex2,cKey,,cFilter,)
				nIndex := RetIndex("SD2")
				#IFNDEF TOP
					dbSetIndex(cIndex2+OrdBagExt())
				#ENDIF
				dbSelectArea("SD2")
				dbSetOrder(nIndex+1)
				dbSelectArea(cAliasSD2)
				dbGotop()
		#IFDEF TOP
			EndIf
		#ENDIF

		nItem := 1
		nAliqICM := SuperGETMV("MV_ICMPAD")
		While (cAliasSD2)->(!Eof())

			IncProc(STR0006) //Preparando Base de Dados 2/3

			SF4->(MsSeek(xFilial("SF4")+(cAliasSD2)->D2_TES))
			If ("N"$SF4->F4_LFICM)
				(cAliasSD2)->(DbSkip())
				Loop
			EndIf
			If MV_PAR21==1 .And. SF4->F4_CRED=='4'
				(cAliasSD2)->(DbSkip())
				Loop
			Endif

			If SFI->(MsSeek(xFilial("SFI")+Dtos((cAliasSD2)->D2_EMISSAO)+(cAliasSD2)->D2_PDV))
				cNumFab := SFI->FI_SERPDV
			ElseIf SFI->(MsSeek(xFilial("SFI")+Dtos((cAliasSD2)->D2_EMISSAO)+Subs((cAliasSD2)->D2_PDV,2,3)))
				cNumFab := SFI->FI_SERPDV
			ElseIf SFI->(MsSeek(xFilial("SFI")+Dtos((cAliasSD2)->D2_EMISSAO)+Right(Alltrim((cAliasSD2)->D2_PDV),3)))
				cNumFab := SFI->FI_SERPDV
			Else
				//Se nao existir SFI correspondente, desconsidera registro da SD2
				(cAliasSD2)->(DbSkip())
				Loop
			Endif

			SB1->(MsSeek(xFilial("SB1")+(cAliasSD2)->D2_COD))

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se o produto faz parte do FUNCEP/PB                  ³
			//³Fundo de Combate e Erradicacao da Pobreza do Estado da Paraiba³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lGimPB
				cFuncep := ""
				SB5->(dbSetOrder(1))
				If SB5->(dbSeek(F3Filial("SB5",cAliasSF3)+(cAliasSD2)->D2_COD)) .And. lB5Funcep
					cFuncep := SB5->B5_FUNCEP
				Endif
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Devido a utilizacao do JOIN na query da rotina, foi necessario verificar qual o ambiente para     ³
			//³utilizar a condicao abaixo. Se for em top, utiliza os campo do JOIN, senao posiciona a tabela SF2.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lQuery
				If ((cAliasSD2)->F2_ECF <> "S" .AND. !Empty((cAliasSD2)->F2_NFCUPOM))
					(cAliasSD2)->(dbSkip())
					Loop
				Endif
			Else
				If SF2->(MsSeek(xFilial("SF2")+(cAliasSD2)->D2_DOC+(cAliasSD2)->D2_SERIE+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
					If (SF2->F2_ECF <> "S" .AND. !Empty(SF2->F2_NFCUPOM))
						(cAliasSD2)->(dbSkip())
						Loop
					Endif
				Else
					(cAliasSD2)->(dbSkip())
					Loop
				Endif
			Endif

			A940LoadPro("S",@cNcm,@cProd,,lSef,@cDescPe,@lPMen15,@lPMai14)

			cSitTrib := ""
			If !Empty((cAliasSD2)->D2_SITTRIB)
				cSitTrib := (cAliasSD2)->D2_SITTRIB
				If lQuery .AND. (cAliasSD2)->DELSD2 == "*" .OR. !EMPTY((cAliasSF3)->F3_DTCANC) //Registro Apagado
					cSitTrib:= "CANC"
				ElseIf Substr(Alltrim(cSitTrib),1,1) == "F"
					cSitTrib:= "F"
				ElseIf Substr(Alltrim(cSitTrib),1,1) == "N"
					cSitTrib:= "N"
				ElseIf Substr(Alltrim(cSitTrib),1,1) == "I"
					cSitTrib:= "I"
				ElseIf Substr(Alltrim(cSitTrib),1,1) == "T"
					If (cAliasSD2)->D2_DESC > 0
						cSitTrib := "DESC"
					Else
						cSitTrib := aFISFill(Num2Chr((cAliasSD2)->D2_PICM,4),4)
					Endif
				ElseIf Substr(Alltrim(cSitTrib),1,1) == "S"
					If (cAliasSD2)->D2_DESC > 0
						cSitTrib := "DESC"
					Else
						cSitTrib := "ISS"
					Endif
				Endif
			Else
				If lQuery .AND. (cAliasSD2)->DELSD2 == "*" .OR. !EMPTY((cAliasSF3)->F3_DTCANC) //Registro Apagado
					cSitTrib := "CANC"
				Elseif (cAliasSD2)->D2_ICMSRET > 0 .And. SF4->F4_CREDST <> "4"
					cSitTrib := "F"
				Elseif (cAliasSD2)->D2_VALISS+(cAliasSD2)->D2_BASEISS > 0
					If (cAliasSD2)->D2_DESC > 0
						cSitTrib := "DESC"
					Else
						cSitTrib := "ISS"
					Endif
				Elseif SF4->F4_BASEICM > 0 .And. SF4->F4_CONSUMO == "S"
					If SF4->F4_LFICM == "I"
						cSitTrib := "I"
					ElseIf SF4->F4_LFICM == "O"
						cSitTrib := "N"
					Endif
				Elseif SF4->F4_BASEICM == 0
					If SF4->F4_LFICM == "I"
						cSitTrib := "I"
					ElseIf SF4->F4_LFICM == "O"
						cSitTrib := "N"
					ElseIf SF4->F4_LFICM == "T"
						If (cAliasSD2)->D2_DESC > 0
							cSitTrib := "DESC"
						Else
							cSitTrib := aFISFill(Num2Chr((cAliasSD2)->D2_PICM,4),4)
						Endif
					Endif
				ElseIf SF4->F4_BASEICM > 0 .And. SF4->F4_CONSUMO == "N"
					cSitTrib := aFISFill(Num2Chr((cAliasSD2)->D2_PICM,4),4)
				EndIf
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Define tipo de cupom fiscal                                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Substr((cAliasSD2)->D2_SERIE,1,2)=="CP"
				cEspDoc:="2C"
			Else
				cEspDoc:="2D"
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Monta Registro Tipo 60D e Tipo 60I³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If MV_PAR12 == 1 .And. ((cAliasSD2)->NRLIVRO == cNrLivro .Or. cNrLivro == "*")
				IF EMPTY((cAliasSF3)->F3_DTCANC)
					If D60->(MsSeek(Dtos((cAliasSD2)->D2_EMISSAO)+cProd+cNumFab))
						RecLock("D60",.F.)
						D60->D60_QUANT  += (cAliasSD2)->D2_QUANT
						D60->D60_VALOR  += (cAliasSD2)->D2_TOTAL
						D60->D60_BSICM  += (cAliasSD2)->D2_BASEICM
						D60->D60_VLICM  += (cAliasSD2)->D2_VALICM
						D60->(MsUnlock())
					Else
						RecLock("D60",.T.)
						D60->D60_EMISS  := (cAliasSD2)->D2_EMISSAO
						D60->D60_NUMFAB := cNumFab
						D60->D60_CODPRO := cProd
						D60->D60_QUANT  := (cAliasSD2)->D2_QUANT
						D60->D60_VALOR  := (cAliasSD2)->D2_TOTAL
						D60->D60_BSICM  := (cAliasSD2)->D2_BASEICM
						D60->D60_SITTRI := cSitTrib
						D60->D60_VLICM  := (cAliasSD2)->D2_VALICM
						D60->(MsUnlock())
					Endif
				Endif
				if MV_PAR43 == 1
					If !I60->(MsSeek(Dtos((cAliasSD2)->D2_EMISSAO)+cNumFab+(cAliasSD2)->D2_DOC))
						nItem := 1
					Else
						nItem++
					Endif
					//
					RecLock("I60",.T.)
					I60->I60_EMISS  := (cAliasSD2)->D2_EMISSAO
					I60->I60_NUMFAB := cNumFab
					I60->I60_COO    := (cAliasSD2)->D2_DOC
					I60->I60_MODELO := cEspDoc
					I60->I60_ITEM   := StrZero(nItem,3)
					I60->I60_CODPRO := cProd
					I60->I60_SITTRI := cSitTrib
					//
					If lConv76
						I60->I60_VLUNI  += (cAliasSD2)->D2_TOTAL
					Else
						I60->I60_VLUNI  += (cAliasSD2)->D2_PRCVEN
					Endif
					//
					I60->I60_QUANT += (cAliasSD2)->D2_QUANT
					I60->I60_BSICM += (cAliasSD2)->D2_BASEICM
					I60->I60_VLICM += (cAliasSD2)->D2_VALICM
					If SF4->F4_CREDST <> "4"
						I60->I60_BSST += (cAliasSD2)->D2_BRICMS
					Endif
					I60->I60_CFOP := (cAliasSD2)->D2_CF
					If lGimPB
						I60->I60_FUNCEP := cFuncep
					Endif
					I60->(MsUnlock())
				Endif
			Endif
			//
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Monta Registro Tipo somente 60I ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If MV_PAR43 == 1.AND. MV_PAR12 == 2
				If !I60->(MsSeek(Dtos((cAliasSD2)->D2_EMISSAO)+cNumFab+(cAliasSD2)->D2_DOC))
					nItem := 1
				Else
					nItem++
				Endif
				RecLock("I60",.T.)
				I60->I60_EMISS  := (cAliasSD2)->D2_EMISSAO
				I60->I60_NUMFAB := cNumFab
				I60->I60_COO    := (cAliasSD2)->D2_DOC
				I60->I60_MODELO := cEspDoc
				I60->I60_ITEM   := StrZero(nItem,3)
				I60->I60_CODPRO := cProd
				I60->I60_SITTRI := cSitTrib
				//
				If lConv76
					I60->I60_VLUNI  += (cAliasSD2)->D2_TOTAL
				Else
					I60->I60_VLUNI  += (cAliasSD2)->D2_PRCVEN
				Endif
				//
				I60->I60_QUANT  += (cAliasSD2)->D2_QUANT
				I60->I60_BSICM  += (cAliasSD2)->D2_BASEICM
				I60->I60_VLICM  += (cAliasSD2)->D2_VALICM
				If SF4->F4_CREDST <> "4"
					I60->I60_BSST += (cAliasSD2)->D2_BRICMS
				Endif
				I60->I60_CFOP   := (cAliasSD2)->D2_CF
				If lGimPB
					I60->I60_FUNCEP := cFuncep
				Endif
				I60->(MsUnlock())
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Monta Registro Tipo 60R³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If MV_PAR16 == 1
				cEmiss := ""
				cEmiss := Substr(DTOS((cAliasSD2)->D2_EMISSAO),5,2)+Substr(DTOS((cAliasSD2)->D2_EMISSAO),1,4)
				If !cSitTrib == "CANC" .AND. (cAliasSD2)->DELSD2 <> "*" //Registro Apagado
					If R60->(MsSeek(cEmiss+cProd+cSitTrib))
						RecLock("R60",.F.)
						R60->R60_QUANT += (cAliasSD2)->D2_QUANT

						If lConv76
							R60->R60_VALOR += (cAliasSD2)->D2_TOTAL
						Else
							R60->R60_VALOR += (cAliasSD2)->D2_PRCVEN
						Endif

						R60->R60_BSICM += (cAliasSD2)->D2_BASEICM
						R60->(MsUnlock())
					Else
						RecLock("R60",.T.)
						R60->R60_MESANO := cEmiss
						R60->R60_CODPRO := cProd
						R60->R60_QUANT  := (cAliasSD2)->D2_QUANT

						If lConv76
							R60->R60_VALOR := (cAliasSD2)->D2_TOTAL
						Else
							R60->R60_VALOR := (cAliasSD2)->D2_PRCVEN
						Endif

						R60->R60_BSICM  := (cAliasSD2)->D2_BASEICM
						R60->R60_SITTRI := cSitTrib
						R60->(MsUnlock())
					Endif
				EndIf
			Endif
			If MV_PAR12 == 1 .Or. MV_PAR16 == 1  .Or. MV_PAR43 == 1
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³% de Reducao do ICMS nas Operacoes Internas³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nRedBase := 0
				If SF4->F4_BASEICM >=100
					nRedBase :=0
				ElseIf SF4->F4_BASEICM > 0
					nRedBase := (100-SF4->F4_BASEICM)
				Else
					nRedBase := SF4->F4_BASEICM
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Situacao Tributaria ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cSitTrib := ""
				If Empty((cAliasSD2)->D2_CLASFIS)
					cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB),3,0),3)
				Else
					cSitTrib := aFISFill(Num2Chr(Val((cAliasSD2)->D2_CLASFIS),3,0),3)
				EndIf
				cSeek := (dtos(dDtIni)+dtos(dDtFim)+PADR(cProd,14)+PADR(cNcm,8)+SB1->B1_UM+space(4))
				If !(R75->(dbSeek(cSeek)))
					RecLock("R75",.T.)
					R75->A75_CTARE  := cContrTare
					R75->A75_DTAINI := dDTIni
					R75->A75_DTAFIM := dDTFim
					R75->A75_PROD   := cProd
					R75->A75_PRORI  := SB1->B1_COD
					R75->A75_CODNCM := cNcm
					R75->A75_DESCR  := cDescPe
					R75->A75_UM     := SB1->B1_UM
					R75->A75_ALQIPI := SB1->B1_IPI
					R75->A75_ALQICM := RetAliqICM(nAliqICM)
					R75->A75_CODBAR := SB1->B1_CODBAR
					R75->A75_VEREAN := SB1->B1_VEREAN
					If lSef
						If (cAliasSD2)->D2_ICMSRET > 0 .And. SF4->F4_CREDST <> "4" //Substituicao Tributaria
							R75->A75_BRICMS := NoRound((cAliasSD2)->D2_BRICMS/(cAliasSD2)->D2_QUANT)
						Else
							R75->A75_BRICMS := 0
						Endif
					Else
						If SF4->F4_CREDST <> "4"
							R75->A75_BRICMS := (cAliasSD2)->D2_BRICMS
						Endif
					Endif
					R75->A75_FILIAL := IIF (lModoComp ,"",FWCodFil())
					R75->A75_SITTRI := cSitTrib
					R75->A75_REDBSE := nRedBase
					R75->(MsUnlock())
				Endif
			Endif
			(cAliasSD2)->(dbSkip())
		EndDo
		If lQuery
			dbSelectArea(cAliasSD2)
			dbCloseArea()
		Else
			dbSelectArea("SD2")
			RetIndex("SD2")
			dbClearFilter()
			Ferase(cIndex2+OrdBagExt())
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Apenas para o Sintegra de Minas Gerais a chamada da função de           ³
	//³geração do inventario (FsEstInv) e feita no Mata940 e nao no INI.       ³
	//³Essa alteracao foi efetuada com o intuito de otimizar a geracao dos     ³
	//³Registros 88, visto que apenas alguns produtos tem a necessidade        ³
	//³de se levantar todas as ultimas entradas que compuseram o estoque.      ³
	//³Se a funcao fosse mantida no INI, todo o estoque seria avaliado de forma³
	//³retroativa, gerando demora no processamento.                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lSintMG .And. l88STMG
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Processa uma unica vez, da mesma forma como se estivesse       ³
		//³sendo chamado pelo INI e nao dentro do while de filiais de/ate.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lFsEst
			IF MV_PAR53==1
				FsEstInv(aArqEst,1,.T.,.F.,dDt88Inv,.F.,l88STMG,.F.,"",@aNFsProc,@aPr88MG)
			ElseIf MV_PAR53==2 .AND. FindFunction("A95088MGNf") 
				A95088MGNf(aNfDevComp,@aPr88MG,@aNFsProc,aArqEst)
			EndIF
			//Adicionado nova chamada para processamento do ressarcimento do ICMS ST quando houver mudança de regime.
			IF MV_PAR52==1
				FsEstInv(aArqEst,1,.T.,.F.,dDt88Inv,.F.,l88STMG,.F.,"",@aNFsProc,@aPr88MG,,,,,,,,,,,.T.)
			EndIF
			lFsEst := .F.
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Identifica as notas fiscais processadas na analise dos valores em estoque³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If l88STMG
			A940TitNF(aNFsProc,MV_PAR01,@cDescPe,@lPMen15,@lPMai14)
		Endif
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Grava Registro 75 de acordo com o registro 74 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If MV_PAR10==1
		
		cNcm    := ""
		cProd   := ""
		cSitTrib:= ""
		dbSelectArea("R74")
		dbSetIndex("iR74")	    // Criado novo indice, para que seja possível alterar código chave sem impacto. ISSUE:DSERFIS1-5190 Valdemir José 17/05/2018	
		dbGoTop()
		While R74->(!Eof())
			If AllTrim(R74->CODIGO)<>AllTrim(R74->NCM)
			
				If SB1->(MsSeek(xFilial("SB1")+Alltrim(R74->CODPRD)))
					A940LoadPro("I",@cNcm,@cProd,,lSef,@cDescPe,@lPMen15,@lPMai14)
					
					
					If Len(Alltrim(R74->CODIGO)) > 14
						cSeek := (dtos(dDtIni)+dtos(dDtFim)+PADR(cProd,14)+PADR(cNcm,8)+SB1->B1_UM+space(4))
						RecLock("R74",.F.)
						R74->CODIGO := cProd
						R74->(MsUnlock())
					Else
						RecLock("R74",.F.)
						R74->CODIGO := cProd
						R74->(MsUnlock())
						cSeek := (dtos(dDtIni)+dtos(dDtFim)+Substr(R74->CODIGO,1,14)+PADR(cNcm,8)+R74->UM+space(4))
					EndIf
					


					If Len(Alltrim(SB1->B1_ORIGEM)) ==2
						cSitTrib := SB1->B1_ORIGEM+"0"
					Else
						cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+Substr(SB1->B1_CLASFIS,1,1)+"0"),3,0),3)
					EndIf

					If R75->(!dbSeek(cSeek)) .And. R74->UF <> "EX" .And. MV_PAR10==1
						RecLock("R75",.T.)
						R75->A75_CTARE	:= cContrTare
						R75->A75_DTAINI	:= dDTIni
						R75->A75_DTAFIM	:= dDTFim
						R75->A75_PROD  	:= R74->CODIGO
						R75->A75_PRORI	:= SB1->B1_COD
						R75->A75_CODNCM	:= cNcm
						R75->A75_DESCR	:= cDescPe
						R75->A75_UM    	:= SB1->B1_UM
						R75->A75_ALQIPI	:= SB1->B1_IPI
						R75->A75_ALQICM	:= 0
						R75->A75_BRICMS	:= 0
						R75->A75_SITTRI	:= cSitTrib
						R75->A75_REDBSE	:= 0
						R75->A75_FILIAL := IIF (lModoComp ,"",FWCodFil())
						R75->(MsUnlock())
					EndIf
				EndIf
			Else
				cSeek :=(dtos(dDtIni)+dtos(dDtFim)+Substr(R74->CODIGO,1,14)+PADR(R74->NCM,8)+R74->UM+space(4))
				If R75->(!dbSeek(cSeek)) .And. R74->UF <> "EX" .And. MV_PAR10==1
					RecLock("R75",.T.)
					R75->A75_CTARE	:= cContrTare
					R75->A75_DTAINI	:= dDTIni
					R75->A75_DTAFIM	:= dDTFim
					R75->A75_PROD  	:= R74->CODIGO
					R75->A75_PRORI	:= R74->CODIGO
					R75->A75_CODNCM	:= R74->NCM
					R75->A75_DESCR	:= "NCM: "+R74->CODIGO
					R75->A75_UM    	:= R74->UM
					R75->A75_ALQIPI	:= 0
					R75->A75_ALQICM	:= 0
					R75->A75_BRICMS	:= 0
					R75->A75_SITTRI	:= "000"
					R75->A75_REDBSE	:= 0
					R75->A75_FILIAL := IIF (lModoComp ,"",FWCodFil())
					R75->(MsUnlock())
				EndIf
			EndIf
			If R74->UF == "EX"
				RecLock("R74",.F.)
				dbDelete()
				R74->(MsUnlock())
			Endif
			
			R74->(dbSkip())
		EndDo
		dbSelectArea("R74")
		dbSetOrder(1)
		If R74->(LastRec()) > 0
			Pack
		Endif
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta Registro Tipo 55³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If MV_PAR05 <> 4
		nMesIni := Month(dDtIni)
		nMesFim := Month(dDtFim)
		nAnoIni := Year(dDtIni)
		nAnoFim := Year(dDtFim)
		dbSelectArea("SF6")
		dbSetOrder(2)
		#IFDEF TOP
			If TcSrvType()<>"AS/400"
				cAliasSF6 := "a940ASF6"
				lQuery := .T.
				aStru  := SF6->(dbStruct())
				cQuery := "SELECT * "
				cQuery += "FROM "+RetSqlName("SF6")+" "
				cQuery += "WHERE F6_FILIAL='"+xFilial("SF6")+"' AND "
				cQuery += "F6_MESREF>="+str(nMesIni,2)+" AND "
				cQuery += "F6_MESREF<="+str(nMesFim,2)+" AND "
				//cQuery += "F6_ANOREF>="+substr(strzero(nAnoIni,4),3,2)+" AND "
				//cQuery += "F6_ANOREF<="+substr(strzero(nAnoFim,4),3,2)+" OR "
				cQuery += "F6_ANOREF>="+strzero(nAnoIni,4)+" AND "
				cQuery += "F6_ANOREF<="+strzero(nAnoFim,4)+" AND "
				If !Empty(cEstDest)
					If lListEst
						cQuery += "F6_EST ='"+ cEstDest+"' AND "
					Else
						cQuery += "F6_EST <>'"+ cEstDest+"' AND "
					EndIf
				EndIf
				cQuery += "D_E_L_E_T_ = ' ' "
				cQuery += "ORDER BY "+SqlOrder(SF6->(IndexKey()))

				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSF6,.T.,.T.)

				For nX := 1 To len(aStru)
					If aStru[nX][2] <> "C"
						TcSetField(cAliasSF6,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
					EndIf
				Next nX
				dbSelectArea(cAliasSF6)
			Else
		#ENDIf
				(cAliasSF6)->( MsSeek(xFilial("SF6")))
		#IFDEF TOP
			EndIf
		#ENDIF

		ProcRegua(LastRec())
		While (cAliasSF6)->(!Eof()) .And. xFilial("SF6")== (cAliasSF6)->F6_FILIAL .And. Iif(!(SuperGetMV("MV_ESTADO") == "SP" .And. (cAliasSF6)->F6_EST == SuperGetMV("MV_ESTADO") .And. (cAliasSF6)->F6_TIPOIMP == '3'),.T.,.F.) 
			IncProc(STR0005) //"Selecionando Registros..."
			#IFNDEF TOP
				If !lGnre
					If (cAliasSF6)->F6_DTARREC < dDtIni .Or. Iif(lListEst,((cAliasSF6)->F6_EST <> cEstDest .And. !Empty(cEstDest)),((cAliasSF6)->F6_EST==cEstDest .And. !Empty(cEstDest)))
						(cAliasSF6)->(dbSkip())
						Loop
					EndIf
					If (cAliasSF6)->F6_DTARREC > dDtFim
						(cAliasSF6)->(dbSkip())
						Loop
					EndIf
				Else
					dDataGnre :=CTOD("01/"+StrZero((cAliasSF6)->F6_MESREF,2)+"/"+StrZero((cAliasSF6)->F6_ANOREF,4))
					dDataGnre :=CTOD(Strzero(Val(Subs(Dtoc(LastDay(dDataGnre)),1,2)),2)+"/"+StrZero((cAliasSF6)->F6_MESREF,2)+"/"+StrZero((cAliasSF6)->F6_ANOREF,4))
					If dDataGnre < dDtIni .Or. Iif(lListEst,((cAliasSF6)->F6_EST <> cEstDest .And. !Empty(cEstDest)),((cAliasSF6)->F6_EST==cEstDest .And. !Empty(cEstDest)))
						(cAliasSF6)->(dbSkip())
						Loop
					EndIf
					If dDataGnre > dDtFim
						(cAliasSF6)->(dbSkip())
						Loop
					EndIf
				Endif
			#ENDIf
			If !(cAliasSF6)->F6_TIPOIMP$"3# "
				(cAliasSF6)->(dbSkip())
				Loop
			EndIf
			If !Empty((cAliasSF6)->F6_AUTENT) .And. Substr((cAliasSF6)->F6_AUTENT,1,3)=="ICM"
				cNumGnre := SubStr((cAliasSF6)->F6_AUTENT,4,Len(Alltrim((cAliasSF6)->F6_AUTENT)))
			ElseIf Substr((cAliasSF6)->F6_NUMERO,1,3)=="ICM"
				cNumGnre := SubStr((cAliasSF6)->F6_NUMERO,4,Len(Alltrim((cAliasSF6)->F6_NUMERO)))
			ElseIf !Empty((cAliasSF6)->F6_AUTENT) .And. Substr((cAliasSF6)->F6_AUTENT,1,3)<>"ICM"
				cNumGnre := SubStr((cAliasSF6)->F6_AUTENT,1,Len(Alltrim((cAliasSF6)->F6_AUTENT)))
			ElseIf Substr((cAliasSF6)->F6_NUMERO,1,3)<>"ICM"
				cNumGnre := SubStr((cAliasSF6)->F6_NUMERO,1,Len(Alltrim((cAliasSF6)->F6_NUMERO)))
			EndIf
			If !Empty((cAliasSF6)->F6_AUTENT)
				cNumGnre := Replicate(" ",20-Len(Alltrim((cAliasSF6)->F6_AUTENT)))+Alltrim((cAliasSF6)->F6_AUTENT)
			Else
				cNumGnre := Strzero(val(Alltrim(cNumGnre)),20)
			Endif
			RecLock("R55",.T.)
			R55->A55_CNPJ	:=	SM0->M0_CGC
			If AllTrim((cAliasSF6)->F6_INSC)<>AllTrim(SM0->M0_INSC) .Or. SF4->F4_ANTICMS == "1"
				R55->A55_IE := ARETDIG((cAliasSF6)->F6_INSC,.t.,(cAliasSF6)->F6_EST)
			Else
				R55->A55_IE := ARETDIG("",.t.,(cAliasSF6)->F6_EST)
			Endif
			R55->A55_DATPAG	:= (cAliasSF6)->F6_DTARREC
			R55->A55_UFSUBS	:= GETMV("MV_ESTADO")
			R55->A55_UFFAV	:= (cAliasSF6)->F6_EST
			R55->A55_BANCO	:= StrZero(val((cAliasSF6)->F6_BANCO),3)
			R55->A55_AGENC	:= Strzero(val(Left((cAliasSF6)->F6_AGENCIA,4)),4)
			R55->A55_NUMERO	:= cNumGnre
			R55->A55_VALOR	:= (cAliasSF6)->F6_VALOR
			R55->A55_VENCTO	:= (cAliasSF6)->F6_DTVENC
			R55->A55_CONVEN	:= (cAliasSF6)->F6_NUMCONV

			SX3->(DbSetOrder(2))
			R55->A55_MESANO	:= StrZero((cAliasSF6)->F6_MESREF,2)+StrZero((cAliasSF6)->F6_ANOREF,4)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Implementacao do SEF PE                                                 ³
			//³Registro 88/78 - Detalhamento de Obrigacoes a Recolher                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			R55->X78_VLRDAE	:= (cAliasSF6)->F6_VALOR
			R55->X78_RECDAE	:= PadL(Alltrim((cAliasSF6)->F6_CODREC),4)
			R55->X78_PERFIS	:= Substr(R55->A55_MESANO,3,4)+Substr(R55->A55_MESANO,1,2)
			R55->X78_DTVECT	:= (cAliasSF6)->F6_DTVENC
			R55->(MsUnLock())

			SX3->(DbSetOrder(1))

			(cAliasSF6)->(dbSkip())
			IncProc(STR0036) //"Preparando Base de Dados - 3/3"
		EndDo
		If lQuery
			dbSelectArea(cAliasSF6)
			dbCloseArea()
		Endif
	Endif

	DbSelectArea("SA1") //Manter um alias aberto para nao dar problema. Poderia ser qualquer tabela.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta Registros 85 e 86 referentes a exportacao.             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (lMta8586)
		Execblock("MTA8586",.F.,.F.)
	Else
		If lSigaEEC
			MTA940EXP(dDtIni,dDtFim,lCONV76,cEstDest,lListEst,@lPMen15,@lPMai14)
		Endif
	Endif
	//
	If lQuery
		dbSelectArea(cAliasSF3)
		dbCloseArea()
	Else
		dbSelectArea("SF3")
		RetIndex("SF3")
		dbClearFilter()
		Ferase(cIndex+OrdBagExt())
	EndIf

	If !lFirstRel
		cChvRel := SM0->M0_CODIGO+SM0->M0_CODFIL
		lFirstRel := .T.
	EndIf

	If FWModeAccess("SF3",3)=="C"
		Exit
	Else
		SM0->(dbSkip())	
	Endif

EndDo
If MV_PAR51 == 1
	SM0->(MsSeek(cChvRel, .T.))
Else
	RestArea(aAreaSm0)
EndIf
cFilAnt := FWCodFil()

If lGimDez09
	For nx:=1 to len(aDadDez)
		RecLock("R29",.T.)
		R29->R29_CODMUN := aDadDez[nx][01]
		R29->R29_VLFATU := aDadDez[nx][02]
		R29->(MsUnlock())
	Next nx
else
	For nx := 1 to len(aDadMun)
		RecLock("R29",.T.)
		R29->R29_CODMUN := aDadMun[nx][01]
		R29->R29_VLFATU := aDadMun[nx][02]
		R29->(MsUnlock())
	next nx
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica alteracoes no produto/serviço do regitro R75³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Reg75Alt(dDtIni,dDtFim)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Armazena os registros 60 M/A/D/I                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Reg60Ord()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ordena os registros tipo 53 para o arquivo magnetico VALPR05 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lConv76
	R53->(DbSetOrder(2))
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Re-Ordena os registros tipo 50 para geracao na ordem original³
//³DATA + DOCUMENTO + SERIE                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
R50->(DbSetOrder(1))
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Executa funcoes do arquivo magnetico                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lSef					//SEF de Pernambuco
	Sef("2",cAliasSF3)	//Executa a SEF no final do While do SF3
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Executa funcoes do arquivo magnetico                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lSef					//SEF de Pernambuco
	Sef("3",cAliasSF3)	//Executa a SEF no final do processamento da funcao Sintegra()
Endif

If !lFirst
	dbSelectArea("SD2")
	RetIndex("SD2")
	dbClearFilter()
	Ferase(cIndex2+OrdBagExt())
Endif

RestArea(aAreaSint)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Tratamento para exibir uma mensagem ao final do processamento do sintegra quando      ³
//³  for efetuado a conversao do codigo de produto superior a 14 caracteres. A mesnagem  ³
//³  tem o objetivo de informar ao usuario que as informcoes geradas nao sao confiaveis  ³
//³  devido a conversao ter sido efetuada somente para alguns produtos e nao todos, alem ³
//³  dos valores apresentados neste registro nao baterem com o livro de invetario.       ³
//³                                                                                      ³
//³Esta mensagem somente serah exibida se houver na base de dados, produtos com          ³
//³  codigo superior a 14 caracteres e tambem produtos com codigo inferior, ou seja,     ³
//³  quando for efetuado a conversao para alguns produtos e para outros nao, tornando    ³
//³  as informacoes geradas incoerentes e incorretas.                                    ³
//³                                                                                      ³
//³O correto eh que tenha no cadastro de produtos todos com codigo superior a 14 ou      ³
//³  todos com o codigo inferior a 14 caracteres, assim utiliza a conversao pra todos ou ³
//³  pra nenhum.                                                                         ³
//³                                                                                      ³
//|Este problema foi constatado com o registro de inventario, que apos gerado nao batia  |
//|  com as informacoes apresentadas pelo livro de inventário; alem tambem de aglutinar  |
//|  produtos de forma incorreta, pois diversos produtos tem o mesmo NCM e somente alguns|
//|  possuiam o codigo superior a 14 digitos.
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lPMen15 .And. lPMai14
	cMsg	:=	STR0069	//"Esta mensagem tem como objetivo informar que as informações geradas neste arquivo magnético não estão corretas, "
	cMsg	+=	STR0070	//"pois ao processar o base de dados para reunir as informações necessárias ao fisco, foi encontrado produtos " 
	cMsg	+=	STR0071	//"com mais de 14 caracteres no código e também com a quantidade de caracteres inferior a 14."
	cMsg	+=	CRLF
	cMsg	+=	STR0072	//"Devido a esse tratamento sistêmico que foi implementado devido a uma limitação do Sintegra, a aplicação não "
	cMsg	+=	STR0073	//"considera mais o código original do produto para compor os registros deste arquivo, e sim a classificação NCM "
	cMsg	+=	STR0074	//"do mesmo (se não utilizar o PE A940PRD), isso somente para os produtos que superam esse limite do software "
	cMsg	+=	STR0075	//"validador do Sintegra, que segundo o layout, permite no máximo 14 caracteres para o código do produto para "
	cMsg	+=	STR0076	//"os registros pertinentes, como por exemplo o registro 54, o registro 74, etc."
	If Aviso(STR0077,cMsg,{STR0078,STR0079},3)==2	//"!!ATENÇÃO!!"###"Estou ciente"###"Cancela"
		If Type("lAbtMt950")<>"U"
			lAbtMt950 := .T.
		EndIf
	EndIf
EndIf

Return(aTrbs)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³GrvReg61  ³ Autor ³ Sergio S. Fuzinaka    ³ Data ³ 15.03.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Grava o Registro Tipo 61                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GrvReg61(aArrayF3,nI,lConv76,lNfProd,lSef,cArqMag,cMV_ESTADO, cNorma)

Local aArea := GetArea()
Local cModNot := AModNot(aArrayF3[nI][7])
Default	cArqMag	:= ""

If Val(Subs(AllTrim(aArrayF3[nI][5]),1,1))>=5
	If ((cModNot$"02/13/14/15/16"+IIf(lConv76,IIf(lNfProd,"/04",""),"/04")+IIf(lSef,"/18","")) .Or. (cModNot$"65" .And. UPPER(cNorma) != "DIEFPI.INI")) .And. ;
		( Alltrim(aArrayF3[nI][7])<>"CF" .AND. Alltrim(aArrayF3[nI][7])<>"ECF" ) 
		If("CANCELAD"$aArrayF3[nI][20] .Or.!Empty(aArrayF3[nI][13]))
			//-- Notas canceladas deverão ser informadas em registro 61 separado.
			cSeek := dTos(aArrayF3[nI][18])+Str(0,5,2)+ aArrayF3[nI][2]
			If R61->(!MsSeek(cSeek))
				RecLock("R61",.T.)
				R61->A61_EMISS	:=	aArrayF3[nI][18]
				R61->A61_MODELO	:=	cModNot
				R61->A61_SERIE	:=	aArrayF3[nI][2]
				R61->A61_SDOC	:=	aArrayF3[nI][42]
				R61->A61_SUBSER	:=	Substr(aArrayF3[nI][42],2,2)
				R61->A61_NUMINI	:=	aArrayF3[nI][1]
				R61->A61_CFOP	:=	""
				R61->A61_ALQICM	:=	0
			Else
				RecLock("R61",.F.)
			EndIf
			R61->A61_NUMFIM	:=	aArrayF3[nI][1]
			MsUnlock()
		Else
			cSeek := dTos(aArrayF3[nI][18])+Str(aArrayF3[nI][8],5,2)+ aArrayF3[nI][2]
			If R61->(!MsSeek(cSeek))
				RecLock("R61",.T.)
				R61->A61_EMISS	:=	aArrayF3[nI][18]
				R61->A61_MODELO	:=	cModNot
				R61->A61_SERIE	:=	aArrayF3[nI][2]
				R61->A61_SUBSER	:=	Substr(aArrayF3[nI][42],2,2)
				R61->A61_SDOC	:=	aArrayF3[nI][42]
				R61->A61_NUMINI	:=	aArrayF3[nI][1]
				R61->A61_CFOP	:=	aArrayF3[nI][5]	//Implementacao SEF PE
				R61->A61_ALQICM	:=	aArrayF3[nI][8]
			Else
				RecLock("R61",.F.)
			EndIf
			R61->A61_NUMFIM	:=	aArrayF3[nI][1]
			R61->A61_VALTOT	+=	aArrayF3[nI][17]
			R61->A61_BSICM	+=	aArrayF3[nI][19]
			R61->A61_VALICM	+=	aArrayF3[nI][16]
			R61->A61_ISENTA	+=	aArrayF3[nI][12]
			R61->A61_OUTRAS	+=	aArrayF3[nI][15]
			R61->(MsUnlock())
		EndIf
	Endif
Endif

RestArea(aArea)

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³A940CNPJ  ³ Autor ³Nereu Humberto Jr      ³ Data ³12.12.2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida CNPJ                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpC1: CNPJ valido                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: CNPJ                                                 ³±±
±±³          ³ExpC2: Tipo do Cliente/Fornecedor                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A940CNPJ(cCGC,cTipo, lTareDf)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Zera o campo de CGC para pessoas nao obrigadas a inscricao.  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( cTipo=="X")
	cCGC:=""
EndIf

If (lTareDf) .And. ("F"$cTipo)
	cCGC := AFISFILL (cCGC, 14)
Else
	cCGC := AFISFILL (Num2Chr (Val (cCGC), 14, 0), 14)
EndIf

Return(PadR(cCGC,14))
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³A940IE    ³ Autor ³Nereu Humberto Jr      ³ Data ³12.12.2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida Inscricao Estadual                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpC1: IE valida                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: IE                                                   ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A940IE(cInsc)

Local cRet	:=	""
Local nI	:=	1

For nI:=1 To Len(cInsc)
	If Isdigit(Subs(cInsc,nI,1)) .Or. IsAlpha(Subs(cInsc,nI,1))
		cRet+=Subs(cInsc,nI,1)
	Endif
Next
If Empty(cRet)
	cRet:="ISENTO"
Endif
Return(cRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³A94LoadPro³ Autor ³Nereu Humberto Jr      ³ Data ³26.12.2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Define codigo do Produto e do NCM                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpC1: .T.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: cTipo "E" - SD1 /  "S" - SD2                         ³±±
±±³          ³ExpC2: cNcm                                                 ³±±
±±³          ³ExpC3: cProd                                                ³±±
±±³          ³ExpC4: cTec - SD1->D1_TEC                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A940LoadPro(cTipo,cNcm,cProd,cTec,lSef,cDescPe,lPMen15,lPMai14)

Local lGeraSwn	:= SuperGetMv("MV_GERASWN",.F.,.T.)

Default lSef	:= .F. //Tratamento para chave duplicada, conforme layout SEF-PE
Default cDescPe	:= SB1->B1_DESC 
Default lPMen15	:= .F.
Default lPMai14	:= .F.

If l88STMG .And. Upper(ALLTRIM(MV_PAR03)) == "SINTMG05" .And. lGRegSt
	cProd := Alltrim(SB1->B1_COD) + Alltrim(xFilial("SB1"))
	cNcm  := Iif(cTipo == "E" .And. cTec <> NIL .And. lGeraSwn .And. !Empty(cTec),STRTRAN(ALLTRIM(cTec),".","") ,STRTRAN(ALLTRIM(SB1->B1_POSIPI),".",""))
Else
	If Len(alltrim(SB1->B1_COD)) > 14
		lPMai14 := .T.
		If lSef
			cNcm  := STRTRAN(ALLTRIM(SB1->B1_POSIPI),".","")
			cProd := STRTRAN(ALLTRIM(SB1->B1_POSIPI),".","") + ALLTRIM(SB1->B1_UM)
		Else
			cNcm  := STRTRAN(ALLTRIM(SB1->B1_POSIPI),".","")
			cProd := ALLTRIM(STR(SB1->(Recno()))) + STRTRAN(ALLTRIM(SB1->B1_POSIPI),".","")
		Endif
	Else
		lPMen15 := .T.
		cNcm  := STRTRAN(ALLTRIM(SB1->B1_POSIPI),".","")
		cProd := SUBS(SB1->B1_COD,1,14)
	EndIf

	If cTipo == "E" .And. cTec <> NIL .And. lGeraSwn .And. !Empty(cTec)
		cNcm  := STRTRAN(ALLTRIM(cTec),".","")
		cProd := STRTRAN(ALLTRIM(cProd),".","")
	Else
		If Upper(ALLTRIM(MV_PAR03))$"SINTEG05/VALPR05/SINTMG05"
			cProd := ALLTRIM(cProd)
		Else
			cProd := STRTRAN(ALLTRIM(cProd),".","")
		EndIf
		cProd := cProd + replicate(' ',14-len(cProd))
	EndIf
Endif

If Len(R54->A54_PRODUT) > len(cProd)
   cProd := cProd + replicate(' ',len(R54->A54_PRODUT)-len(cProd))
Endif

If lA940PRD
   cProd := Execblock("A940PRD",.F.,.F.,{cTipo,cNcm,cProd,cTec})
EndIf

If lA940DES
   cDescPe := Execblock("A940DES",.F.,.F.,{cTipo,cNcm,cProd,cTec})
Else
	cDescPe := SB1->B1_DESC
EndIf

If lA940NCM
   cNCM := Execblock("A940NCM",.F.,.F.,{cTipo,cNcm,cProd,cTec})
EndIf

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³A940AREG90ºAutor  ³ Nereu Humberto Jr. º Data ³  02/01/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Monta registro totalizador tipo 90                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA940                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A940REG90(nPar88,nTotSTES,lGeraR74)

Local cRegistro := ""
Local aAreaSm0  := SM0->(GetArea ())
Local cIE_ST    := GetIE_ST()
Local lMV_PAR54 := Type("MV_PAR54")=="N"
Private lGravou := .F.

// Total do inventario de Subst. Tributaria
Default nTotSTES := 0
Default lGeraR74 := .T.

If MV_PAR51 == 1
	SM0->(MsSeek (cChvRel, .T.))
EndIf

nReg50	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R50")>0,R50->(LastRec()),0))
nReg51	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R51")>0,R51->(LastRec()),0))
nReg53	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R53")>0,R53->(LastRec()),0))
nReg54	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R54")>0,R54->(LastRec()),0))
nReg55	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R55")>0,R55->(LastRec()),0))
nReg60	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"M60")>0,M60->(LastRec()),0))
nReg60	+=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"A60")>0,A60->(LastRec()),0))
nReg60	+=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"D60")>0,D60->(LastRec()),0))
nReg60	+=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"I60")>0,I60->(LastRec()),0))
nReg60	+=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R60")>0,R60->(LastRec()),0))
nReg61	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R61")>0,R61->(LastRec()),0))
nReg61	+=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"I61")>0,I61->(LastRec()),0))
nReg70	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R70")>0,R70->(LastRec()),0))
nReg71	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R71")>0,R71->(LastRec()),0))
nReg74	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(lGeraR74,Iif(mv_par05 == 4,0,IiF(Select("R74")>0,R74->(LastRec()),0)),0))
nReg75	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R75")>0,R75->(LastRec()),0))
nReg76	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R76")>0,R76->(LastRec()),0))
nReg77	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R77")>0,R77->(LastRec()),0))
nReg85	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R85")>0,R85->(LastRec()),0))
nReg86	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R86")>0,R86->(LastRec()),0))
nReg88	:=	Iif(nPar88==Nil,IIF(Ascan(_aTotal[98],"R88")>0,R88->(LastRec()),0),nPar88)
nReg88	+=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R88M")>0,R88M->(LastRec()),0)) //R88 MINEIRAO
nReg88	+=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R88C")>0,R88C->(LastRec()),0)) //R88 MINEIRAO (COMBCOD)
nReg56	:=	IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R56")>0,R56->(LastRec()),0))
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Implementacao do SEF PE                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nReg88	+=	IIF(Ascan(_aTotal[98],"X10")>0,X10->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X20")>0,X20->(LastRec()),0)	//Implementacao NFE-BA
nReg88	+=	IIF(Ascan(_aTotal[98],"X15")>0,X15->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X25")>0,X25->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X30")>0,X30->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X35")>0,X35->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X60")>0,X60->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X61")>0,X61->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X74")>0,X74->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X77")>0,X77->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X78")>0,R55->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X80")>0,X80->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X82")>0,X82->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X85")>0,X85->(LastRec()),0)
nReg88	+=	IIF(Ascan(_aTotal[98],"X89")>0,X89->(LastRec()),0)
nReg90	:=	1

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 88-STES - Minas Gerais³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nReg88	+=	nTotSTES

cRegistro	:=	"90"												//01.Tipo
cRegistro	+=	aFISFill(Num2Chr(Val(SM0->M0_CGC),14,0),14)   //02.CGC
cRegistro	+=	aFISFill(If(Empty(cIE_ST),ARETDIG(SM0->M0_INSC,.t.,SM0->M0_ESTENT),cIE_ST),14) //03.Inscr. Estadual

If nReg50>0
	cRegistro	+=	"50"
	cRegistro	+=	aFISFill(StrZero(nReg50,8),8)	// Total de Registros "50"
EndIf

If nReg51>0
	cRegistro	+=	"51"
	cRegistro	+=	aFISFill(StrZero(nReg51,8),8)	// Total de Registros "51"
EndIf

If nReg53>0
	cRegistro	+=	"53"
	cRegistro	+=	aFISFill(StrZero(nReg53,8),8)	// Total de Registros "53"
EndIf

If nReg54>0
	cRegistro	+=	"54"
	cRegistro	+=	aFISFill(StrZero(nReg54,8),8)	// Total de Registros "54"
EndIf

If nReg55>0
	cRegistro	+=	"55"
	cRegistro	+=	aFISFill(StrZero(nReg55,8),8)	// Total de Registros "55"
EndIf

If nReg56>0
	cRegistro	+=	"56"
	cRegistro	+=	aFISFill(StrZero(nReg56,8),8)	// Total de Registros "56"
EndIf
If nReg60>0
	cRegistro	+=	"60"
	cRegistro	+=	aFISFill(StrZero(nReg60,8),8)	// Total de Registros "60"
EndIf

If nReg61>0
	cRegistro	+=	"61"
	cRegistro	+=	aFISFill(StrZero(nReg61,8),8)	// Total de Registros "61"
EndIf

If nReg70>0
	cRegistro	+=	"70"
	cRegistro	+=	aFISFill(StrZero(nReg70,8),8)	// Total de Registros "70"
EndIf

// Imprime Reg. Tipo 90
If Len(cRegistro)>=110
	A940IncReg90(@cRegistro,@nReg90,(nReg71+nReg74+nReg75+nReg76+nReg77+nReg85+nReg86+nReg88))
EndIf

If nReg71>0
	cRegistro	+=	"71"
	cRegistro	+=	aFISFill(StrZero(nReg71,8),8)	// Total de Registros "71"
EndIf

// Imprime Reg. Tipo 90
If Len(cRegistro)>=110.And.!lGravou
	A940IncReg90(@cRegistro,@nReg90,(nReg74+nReg75+nReg76+nReg77+nReg85+nReg86+nReg88))
EndIf

If nReg74>0
	cRegistro	+=	"74"
	cRegistro	+=	aFISFill(StrZero(nReg74,8),8)	// Total de Registros "74"
EndIf

// Imprime Reg. Tipo 90
If Len(cRegistro)>=110.And.!lGravou
	A940IncReg90(@cRegistro,@nReg90,(nReg75+nReg76+nReg77+nReg85+nReg86+nReg88))
EndIf

If nReg75>0
	cRegistro	+=	"75"
	cRegistro	+=	aFISFill(StrZero(nReg75,8),8)	// Total de Registros "75"
EndIf

// Imprime Reg. Tipo 90
If Len(cRegistro)>=110.And.!lGravou
	A940IncReg90(@cRegistro,@nReg90,(nReg76+nReg77+nReg85+nReg86+nReg88))
EndIf

If nReg76>0
	cRegistro	+=	"76"
	cRegistro	+=	aFISFill(StrZero(nReg76,8),8)	// Total de Registros "76"
EndIf

// Imprime Reg. Tipo 90
If Len(cRegistro)>=110.And.!lGravou
	A940IncReg90(@cRegistro,@nReg90,(nReg77+nReg85+nReg86+nReg88))
EndIf

If nReg77>0
	cRegistro	+=	"77"
	cRegistro	+=	aFISFill(StrZero(nReg77,8),8)	// Total de Registros "77"
EndIf

// Imprime Reg. Tipo 90
If Len(cRegistro)>=110.And.!lGravou
	A940IncReg90(@cRegistro,@nReg90,nReg85+nReg86+nReg88)
EndIf

If nReg85>0
	cRegistro	+=	"85"
	cRegistro	+=	aFISFill(StrZero(nReg85,8),8)	// Total de Registros "85"
EndIf

// Imprime Reg. Tipo 90
If Len(cRegistro)>=110.And.!lGravou
	A940IncReg90(@cRegistro,@nReg90,nReg86+nReg88)
EndIf

If nReg86>0
	cRegistro	+=	"86"
	cRegistro	+=	aFISFill(StrZero(nReg86,8),8)	// Total de Registros "86"
EndIf

// Imprime Reg. Tipo 90
If Len(cRegistro)>=110.And.!lGravou
	A940IncReg90(@cRegistro,@nReg90,nReg88)
EndIf

If nReg88 > 0
	cRegistro += "88"
	cRegistro	+=	aFISFill(StrZero(nReg88,8),8)	// Total de Registros "88"
EndIf	

// Imprime Reg. Tipo 90
If (Len(cRegistro)>=110.And.!lGravou).Or.!lGravou
	A940IncReg90(@cRegistro,@nReg90,0)
EndIf

RestArea(aAreaSm0)
Return()

//-------------------------------------------------------------------
/*/{Protheus.doc} GetIE_ST
Retorna IE informada no parametro MV_SUBTRIB para Sintegra (registros 10 e 90) para situacao abaixo.
UF Origem/Destino = UF cadastrado no parâmetro 
Processa UF = Somente UF 
Natureza Operações = Inter. ST
Obs usado no arquivo sinteg05.ini

@param Nil

@author Flavio L Vicco
@version P12
@since 10/05/2017
@return caracter contendo IE ST do parametro MV_SUBTRIB
@sample GetIE_ST()
/*/
//-------------------------------------------------------------------
Function GetIE_ST()
Local cSubTrib  := ""
Local cIE_ST    := ""
Local nPosI     := 0
Local nPosF     := 0

If AllTrim(Upper(MV_PAR03))$"SINTEG05" .And. !Empty(MV_PAR06) .And. MV_PAR07 == 1 .And. MV_PAR21 == 1 
	cSubTrib := GetSubTrib()
	nPosI    := At(MV_PAR06,cSubTrib)
	If nPosI > 0
		nPosF  := At("/",SubStr(cSubTrib,nPosI+2))-1
		cIE_ST := SubStr(cSubTrib,nPosI+2,nPosF)
	EndIf
EndIf

Return cIE_ST

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao ³A940IncReg90 ºAutor  ³ Nereu Humberto Jr. º Data ³  02/01/03   º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.  ³ Grava registros tipo 90                                       º±±
±±º       ³                                                               º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso    ³ MATA940                                                       º±±
±±ÈÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A940IncReg90(cRegistro,nReg90,nResto)

If nResto<=0.And.(125-Len(cRegistro))>8
	// Nao possui mais registros a imprimir
	lGravou	:=	.T.
	cRegistro	+=	"99"
    cRegistro	+=	AFISFill(StrZero(2+nReg90+nReg50+nReg51+nReg53+nReg54+nReg55+nReg60+nReg61+nReg70+nReg71+nReg74+nReg75+nReg76+nReg77+nReg85+nReg86+nReg88+nReg56,8),8)
	cRegistro	+=	aFISFill(,(125-Len(cRegistro)))	// Brancos ate registro final	
	cRegistro	+=	Alltrim(Str(nReg90)) 				// Nro registro tipo 90	
	RecLock("R90",.T.)
	R90->A90_REGS := cRegistro
	R90->(MsUnlock())
EndIf

If (125-Len(cRegistro))<=16	// VerIfica se imprime mais um registro
	If !lGravou
		nReg90++				// Incrementa reg. tipo 90
		cRegistro	+=	space(125-Len(cRegistro))
		cRegistro	+=	Alltrim(Str(nReg90))				// Nro registro tipo 90
		
		RecLock("R90",.T.)
		R90->A90_REGS := cRegistro
		R90->(MsUnlock())
		
		If nResto<=0.And.(125-Len(cRegistro))<9
			// Nao possui mais registros a imprimir
			lGravou:=.T.
			cRegistro	:=	"90"	// Reinicializa segundo registro 90
			cRegistro	+=	aFISFill(Num2Chr(Val(SM0->M0_CGC),14,0),14)
			cRegistro	+=	aFISFill(ARETDIG(SM0->M0_INSC,.T.,SM0->M0_ESTENT),14)
			cRegistro	+=	"99"
			cRegistro	+=	AFISFill(StrZero(2+nReg90+nReg50+nReg51+nReg53+nReg54+nReg55+nReg60+nReg61+nReg70+nReg71+nReg74+nReg75+nReg76+nReg77+nReg85+nReg86+nReg88+nReg56,8),8)
			cRegistro	+=	aFISFill(,(125-Len(cRegistro)))	// Brancos ate registro final
			cRegistro	+=	Alltrim(Str(nReg90))  				// Nro registro tipo 90
	    
	    	RecLock("R90",.T.)
			R90->A90_REGS := cRegistro
			R90->(MsUnlock())
		Else
			cRegistro	:=	"90"	// Reinicializa segundo registro 90
			cRegistro	+=	aFISFill(Num2Chr(Val(SM0->M0_CGC),14,0),14)
			cRegistro	+=	aFISFill(ARETDIG(SM0->M0_INSC,.T.,SM0->M0_ESTENT),14)
		EndIf
	EndIf
EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a940Relat   ³ Autor ³ Nereu Humberto Jr.  ³ Data ³ 02/01/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Imprime relatorio de conferencia                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a940Relat(nParam,nPar88,nTotSTES,lGeraR74)

// Total de Registros do Inventario com Subst. Tributaria
Default nTotSTES := 0
Default lGeraR74 := .T.

Titulo	:=	STR0007 //"Listagem de acompanhamento"
cDesc1	:=	STR0008 //"Listagem de acompanhamento do arquivo pr‚-formatado."
cDesc2	:=	""
cDesc3	:=	""
Tamanho	:=	"P"
Limite	:=	80
nTipo	:=	18
cabec1	:=	''
cabec2	:=	''
cabec3	:=	''
cbCont	:=	0
cbtxt	:=	Space(10)
m_pag	:=	1
cPerg   :=	"MTA940"
cString :=	"SF3"
lEnd	:=	.f.
Nomeprog:=	"MATA940"
wnrel	:=	Nomeprog
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nLastKey:=0

If nParam == 1
	wnrel := SetPrint(cString,wnrel,,Titulo,cDesc1,cDesc2,cDesc3,.F.,"",.F.)
	If nLastKey==27
		Return
	EndIf
	If IsBlind() //Tratamento automação
		If Len(aReturn) >= 8
			aReturn[5]:= 1 //1-Disco
			aReturn[6]:= Nomeprog //Porta ou Arquivo
		EndIf
	EndIf
	SetDefault(aReturn,cString)
Endif

If nLastKey==27
	Return
EndIf

If nParam <> 1
	RptStatus({|lEnd|A940Impr(@lEnd,wnRel,cString,Tamanho, nPar88,nTotSTES,lGeraR74)},titulo)
Endif
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a940Impr     ³Autor ³ Nereu Humberto Jr.  ³ Data ³ 02/01/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Chamada para impressao da listagem                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a940Impr(lEnd,wnRel,cString,Tamanho, nPar88,nTotSTES,lGeraR74)

Local aAreaSm0:= {}
Local lMV_PAR54:= Type("MV_PAR54")=="N"
Local nLin    := 0
Local nTotReg := 0
Local nReg50  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R50")>0,R50->(LastRec()),0))
Local nReg51  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R51")>0,R51->(LastRec()),0))
Local nReg53  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R53")>0,R53->(LastRec()),0))
Local nReg54  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R54")>0,R54->(LastRec()),0))
Local nReg55  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R55")>0,R55->(LastRec()),0))
Local nReg56  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R56")>0,R56->(LastRec()),0))
Local nReg61  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R61")>0,R61->(LastRec()),0))
Local nReg70  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R70")>0,R70->(LastRec()),0))
Local nReg71  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R71")>0,R71->(LastRec()),0))
Local nReg75  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R75")>0,R75->(LastRec()),0))
Local nReg76  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R76")>0,R76->(LastRec()),0))
Local nReg77  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R77")>0,R77->(LastRec()),0))
Local nReg85  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R85")>0,R85->(LastRec()),0))
Local nReg86  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"R86")>0,R86->(LastRec()),0))
Local nReg88  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,Iif (nPar88==Nil, IIF(Ascan(_aTotal[98],"R88")>0,R88->(LastRec()),0), nPar88))
Local nReg90  := R90->(LastRec())
Local nReg60  := IIF(lMV_PAR54 .AND. MV_PAR54==1,0,IIF(Ascan(_aTotal[98],"M60")>0,M60->(LastRec()),0))
Local nReg74  := 0

Default lGeraR74 := .T.
If	(MV_PAR54 <> NIL .AND. MV_PAR54==2)
	nReg74 := IIF(lGeraR74,Iif(mv_par05 == 4,0,IiF(Select("R74")>0,R74->(LastRec()),0)),0)
	nReg60 += IIF(Ascan(_aTotal[98],"A60")>0,A60->(LastRec()),0)
	nReg60 += IIF(Ascan(_aTotal[98],"D60")>0,D60->(LastRec()),0)
	nReg60 += IIF(Ascan(_aTotal[98],"I60")>0,I60->(LastRec()),0)
	nReg60 += IIF(Ascan(_aTotal[98],"R60")>0,R60->(LastRec()),0)
	nReg61 += IIF(Ascan(_aTotal[98],"I61")>0,I61->(LastRec()),0)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Implementacao do SEF PE                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nReg88 += IIF(Ascan(_aTotal[98],"X10")>0,X10->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X20")>0,X20->(LastRec()),0)	//Implementacao NFE-BA
nReg88 += IIF(Ascan(_aTotal[98],"X15")>0,X15->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X25")>0,X25->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X30")>0,X30->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X35")>0,X35->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X60")>0,X60->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X61")>0,X61->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X74")>0,X74->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X77")>0,X77->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X78")>0,R55->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X80")>0,X80->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X82")>0,X82->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X85")>0,X85->(LastRec()),0)
nReg88 += IIF(Ascan(_aTotal[98],"X89")>0,X89->(LastRec()),0)
//MINEIRAO MG
nReg88 += IIF(Ascan(_aTotal[98],"R88M")>0,R88M->(LastRec()),0) //R88 MINEIRAO
nReg88 += IIF(Ascan(_aTotal[98],"R88C")>0,R88C->(LastRec()),0) //R88 MINEIRAO (COMBCOD)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 88-STES - Minas Gerais³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nReg88 += nTotSTES

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Posiciona na filial que esta sendo processada³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAreaSm0 := SM0->(GetArea ())

If MV_PAR51 == 1
	SM0->(MsSeek(cChvRel, .T.))
EndIf
cabec(titulo,cabec1,cabec2,Nomeprog,Tamanho,nTipo)
nLin := Prow()+1
@ nLin,00 PSAY Replic("*",80)
nLin += 2
@ ++nLin,15 PSAY STR0011+Transform(SM0->M0_CGC,"@R 99.999.999/9999-99") //"C.G.C.(MF)........: "
@ ++nLin,15 PSAY STR0012+SM0->M0_INSC //"Inscricao Estadual: "
@ ++nLin,15 PSAY STR0013+SM0->M0_NOMECOM //"Razao Social......: "
@ ++nLin,15 PSAY STR0014+SM0->M0_ENDENT //"Endereco..........: "
@ ++nLin,15 PSAY "                    "+Alltrim(SM0->M0_CIDENT)+" - "+SM0->M0_ESTENT+" - CEP: "+Transform(SM0->M0_CEPENT,"@R 99999-999")
nLin += 2
@++nLin,15 PSAY STR0015+AllTrim(MV_PAR09)   //"Equipamento.......: "
@++nLin,15 PSAY STR0016+Iif (MV_PAR19==1, STR0041, STR0042)  //"Meio Magnetico....: FITA"
@++nLin,15 PSAY STR0017+MV_PAR20  //"Fator de Bloco....: 1/1"
nLin += 2
@ ++nLin,15 PSAY STR0018+DTOC(MV_PAR01)+" a "+DTOC(MV_PAR02) //"Periodo abrangido.: "
nLin++
@ ++nLin,15 PSAY STR0019+Str(1,8)+STR0020 //"Tipo 10...........: "###" Registro"
@ ++nLin,15 PSAY STR0021+Str(1,8)+STR0020 //"Tipo 11...........: "###" Registro"

RestArea(aAreaSm0)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Imprime somente itens existentes no arq. magnetico           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nReg50>0
	@ ++nLin,15 PSAY STR0022+Str(nReg50,8)	+STR0023 //"Tipo 50...........: "###" Registro(s)"
EndIf
If nReg51>0
	@ ++nLin,15 PSAY STR0024+Str(nReg51,8)	+STR0023 //"Tipo 51...........: "###" Registro(s)"
EndIf
If nReg53>0
	@ ++nLin,15 PSAY STR0025+Str(nReg53,8)	+STR0023 //"Tipo 53...........: "###" Registro(s)"
EndIf
If nReg54>0
	@ ++nLin,15 PSAY STR0026+Str(nReg54,8)	+STR0023 //"Tipo 54...........: "###" Registro(s)"
EndIf
If nReg55>0
	@ ++nLin,15 PSAY STR0027+Str(nReg55,8)	+STR0023 //"Tipo 55...........: "###" Registro(s)"
EndIf
If nReg56>0
	@ ++nLin,15 PSAY STR0043+Str(nReg56,8)	+STR0023 //"Tipo 55...........: "###" Registro(s)"
EndIf
If nReg60>0
	@ ++nLin,15 PSAY STR0028+Str(nReg60,8) +STR0023 //"Tipo 60...........: "###" Registro(s)"
EndIf
If nReg61>0
	@ ++nLin,15 PSAY STR0029+Str(nReg61,8)	+STR0023 //"Tipo 61...........: "###" Registro(s)"
EndIf
If nReg70>0
	@ ++nLin,15 PSAY STR0030+Str(nReg70,8)	+STR0023 //"Tipo 70...........: "###" Registro(s)"
EndIf
If nReg71>0
	@ ++nLin,15 PSAY STR0031+Str(nReg71,8)	+STR0023 //"Tipo 71...........: "###" Registro(s)"
EndIf
If nReg74>0
	@ ++nLin,15 PSAY STR0037+Str(nReg74,8)	+STR0023 //"Tipo 74...........: "###" Registro(s)"
EndIf
If nReg75>0
	@ ++nLin,15 PSAY STR0032+Str(nReg75,8)	+STR0023 //"Tipo 75...........: "###" Registro(s)"
EndIf
If nReg76>0
	@ ++nLin,15 PSAY STR0038+Str(nReg76,8)	+STR0023 //"Tipo 76...........: "###" Registro(s)"
EndIf
If nReg77>0
	@ ++nLin,15 PSAY STR0039+Str(nReg77,8)	+STR0023 //"Tipo 77...........: "###" Registro(s)"
EndIf
If nReg85>0
	@ ++nLin,15 PSAY STR0044+Str(nReg85,8)	+STR0023 //"Tipo 85...........: "###" Registro(s)"
EndIf
If nReg86>0
	@ ++nLin,15 PSAY STR0045+Str(nReg86,8)	+STR0023 //"Tipo 86...........: "###" Registro(s)"
EndIf
If nReg88>0
	@ ++nLin,15 PSAY STR0040+Str(nReg88,8)	+STR0023 //"Tipo 88...........: "###" Registro(s)"
EndIf
If nReg90>0
	@ ++nLin,15 PSAY STR0033+Str(nReg90,8)	+STR0023 //"Tipo 90...........: "###" Registros(s)"
Endif
nLin++

nTotReg := 2+nReg90+nReg50+nReg51+nReg53+nReg54+nReg55+nReg60+nReg61+nReg70+nReg71+nReg74+nReg75+nReg76+nReg77+nReg85+nReg86+nReg88+nReg56

@ ++nLin,15 PSAY STR0034+Str(nTotReg,8)+STR0035 //"Total de registros: "###" Registros"
nLin++

If nTotReg>0
	Roda(cbCont,cbtxt,Tamanho)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Spool de Impressao                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Set Printer to
If aReturn[5] == 1
	dbCommitAll()
	Ourspool(aReturn[6])
EndIf

MS_FLUSH()

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³A940DelArq ºAutor  ³ Nereu Humberto Jr. º Data ³  02/01/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Apaga arquivos temporarios criados para gerar o arquivo     º±±
±±º         ³ Magnetico                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ MATA940                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a940DelArq(aDelArqs)
Local aAreaDel := GetArea()
Local nI := 0

For nI:= 1 To Len(aDelArqs)
	If File(aDelArqs[ni,1]+GetDBExtension())
		If !Empty (aDelArqs[ni,2]) .And. Select(aDelArqs[ni,2]) > 0
			dbSelectArea(aDelArqs[ni,2])
			dbCloseArea()
			Ferase(aDelArqs[ni,1]+GetDBExtension())
			Ferase(aDelArqs[ni,1]+OrdBagExt())
		Endif
	Endif
Next

RestArea(aAreaDel)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A940Fill     ³Autor ³ Andreia dos Santos  ³ Data ³ 07/01/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Encaixa conteudo em espaco especificado                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a940Fill(cConteudo,nTam)
	
cConteudo	:=	If(cConteudo==NIL,"",cConteudo)
If Len(cConteudo)>nTam
	cRetorno	:=	Substr(cConteudo,1,nTam)
Else
	cRetorno	:=	cConteudo+Space(nTam-Len(cConteudo))
Endif
	
Return (cRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³   A940CGC    ³Autor ³    Andreia dos Santos³Data³ 07/01/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna numero de CGC                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A940CGC(cCliFor,cCGC,cTipo)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Zera o campo de CGC para pessoas nao obrigadas a inscricao.  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( cTipo=="X")
	If !lTrading
		cCGC:=""
	Endif
Endif

Return(cCGC)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³fSintReg17³ Autor ³ Gustavo G. Rueda      ³ Data ³26.06.2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retorna uma string contendo o registro 17 no sintegra.      º±±
±±º          ³Inicialmente baseado no layout de Manaus.                   º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpC: Formato do registro 17 do sintegra.                   ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³														      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fSintReg17 ()
	Local	cString	:=	""
	Local	cCodCliente	:=	""
	Local	cCodLoja	:=	""
	Local	aArea	:=	GetArea ()
	Local	cR17	:= ""
	Local	cR18	:= ""
	Local	xRet	:= .T.
	Local	cTipo	:= "N"
	//
	DbSelectArea ("SF2")
	SF2->(DbSetOrder (1))
	If (SF2->(MsSeek (xFilial ("SF2")+R50->A50_NFISC+R50->A50_SERIE)))
		cCodCliente	:=	SF2->F2_CLIENTE
		cCodLoja	:=	SF2->F2_LOJA
		cTipo		:=	SF2->F2_TIPO
	Else  
		DbSelectArea ("SF3")
		SF3->(DbSetOrder (5))
		SF3->(MsSeek (xFilial ("SF3")+R50->A50_SERIE+R50->A50_NFISC))
		//
	    cCodCliente	:=	Iif(!Empty(SF3->F3_CLIENT), SF3->F3_CLIENT, SF3->F3_CLIEFOR)
	    cCodLoja	:=	Iif(!Empty(SF3->F3_LOJENT), SF3->F3_LOJENT, SF3->F3_LOJA)
		cTipo		:=	SF3->F3_TIPO
	EndIf
	//	
	DbSelectArea ("SA4")
	SA4->(DbSetOrder (1))
	SA4->(MsSeek (xFilial ("SA4")+SF2->F2_REDESP))
	//
	If ! (cTipo$"BD")
		DbSelectArea ("SA1")
		SA1->(DbSetOrder (1))
		SA1->(MsSeek (xFilial ("SA1")+cCodCliente+cCodLoja))
		//Dados do destinatario
		cString	:=	"17"+StrZero (Val (SA1->A1_CGC), 14)+aFisFill (A940IE(SA1->A1_INSCR), 14)+aFisFill (SA1->A1_NOME, 40)
		cString	+=	aFisFill (SA1->A1_END, 40)+aFisFill (SA1->A1_BAIRRO, 20)+aFisFill (SA1->A1_MUN, 20)
		cString	+=	StrZero (Val (SA1->A1_CEP), 8)+aFisFill (SA1->A1_EST, 2)+StrZero (Val (SA1->A1_TEL), 12)
		cR17	:=	StrZero (Val (SA1->A1_CGC),14)+aFisFill (A940IE(SA1->A1_INSCR),14)
	Else
		DbSelectArea ("SA2")
		SA2->(DbSetOrder (1))
		SA2->(MsSeek (xFilial ("SA2")+cCodCliente+cCodLoja))
		//Dados do destinatario
		cString	:=	"17"+StrZero (Val (SA2->A2_CGC), 14)+aFisFill (A940IE(SA2->A2_INSCR), 14)+aFisFill (SA2->A2_NOME, 40)
		cString	+=	aFisFill (SA2->A2_END, 40)+aFisFill (SA2->A2_BAIRRO, 20)+aFisFill (SA2->A2_MUN, 20)
		cString	+=	StrZero (Val (SA2->A2_CEP), 8)+aFisFill (SA2->A2_EST, 2)+StrZero (Val (SA2->A2_TEL), 12)
		cR17	:=	StrZero (Val (SA2->A2_CGC),14)+aFisFill (A940IE(SA2->A2_INSCR),14)
	Endif
	//
	//Dados do redespachador
	If (SA4->(Eof ()))
		cString	+=	"00000000000000"+Space (134)+"00000000"+Space (02)+"000000000000"
		cR17	+=	"00000000000000"+Space(14)
	Else
		cString	+=	StrZero (Val (SA4->A4_CGC), 14)+aFisFill (SA4->A4_INSEST, 14)+aFisFill (SA4->A4_NOME, 40)
		cString	+=	aFisFill (SA4->A4_END, 40)+aFisFill (SA4->A4_BAIRRO, 20)+aFisFill (SA4->A4_MUN, 20)
		cString	+=	StrZero (Val (SA4->A4_CEP), 8)+aFisFill (SA4->A4_EST, 2)+StrZero (Val (SA4->A4_TEL), 12)
		cR17	+=	StrZero (Val (SA4->A4_CGC), 14)+aFisFill (SA4->A4_INSEST, 14)
	EndIf
	//
	_aTotal[51] := .T.	//Condicao para o Registro 18 ser impresso 
	fSintReg18(@cR18)	//Busca Dados do Frete e Local de Entrega ( Registro 18 )
	If ASCAN(_aTotal[50],cR17+cR18) == 0	//Verifica se ja existe Dados do Transporte e Local de Entrega
		AADD(_aTotal[50],cR17+cR18)			//Se verdadeiro o Registro 17 e 18 serao impressos
		xRet := cString	
		_aTotal[51] := .F.
	Endif
	//
	RestArea (aArea)
Return (xRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³fSintReg18³ Autor ³ Gustavo G. Rueda      ³ Data ³26.06.2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retorna uma string contendo o registro 18 no sintegra.      º±±
±±º          ³Inicialmente baseado no layout de Manaus.                   º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpC: Formato do registro 18 do sintegra.                   ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³														      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fSintReg18 (cR18)
	Local	cString	:=	""
	Local	cCodCliente	:=	""
	Local	cCodLoja	:=	""
	Local	nFrete		:=	0
	Local	aArea	:=	GetArea ()
	Local	xRet	:= .T.
	Local 	cTipo		:= "N"
	Default cR18		:= ""
	//
	DbSelectArea ("SF2")
	SF2->(DbSetOrder (1))
	If (SF2->(MsSeek (xFilial ("SF2")+R50->A50_NFISC+R50->A50_SERIE)))
		cCodCliente	:=	SF2->F2_CLIENTE
		cCodLoja	:=	SF2->F2_LOJA
		nFrete		:=	SF2->F2_FRETE
		cTipo		:=	SF2->F2_TIPO
	Else  
		DbSelectArea ("SF3")
		SF3->(DbSetOrder (5))
		SF3->(MsSeek (xFilial ("SF3")+R50->A50_SERIE+R50->A50_NFISC))
		//
	    cCodCliente	:=	Iif(!Empty(SF3->F3_CLIENT), SF3->F3_CLIENT, SF3->F3_CLIEFOR)
	    cCodLoja	:=	Iif(!Empty(SF3->F3_LOJENT), SF3->F3_LOJENT, SF3->F3_LOJA)
		nFrete		:=	0
		cTipo		:=	SF3->F3_TIPO
	EndIf		
	//
	If ! (cTipo$"BD")
		DbSelectArea ("SA1")
		SA1->(DbSetOrder (1))
		SA1->(MsSeek (xFilial ("SA1")+cCodCliente+cCodLoja))
		//
		cString	:=	"18"
		cString	+=	Iif (nFrete>0, StrZero (Val (SA1->A1_CGC), 14), StrZero (Val (SM0->M0_CGC), 14))
		cString	+=	Iif (nFrete>0, aFisFill (A940IE(SA1->A1_INSCR), 14), aFisFill (SM0->M0_INSC, 14))
		cString	+=	Iif (nFrete>0, aFisFill (SA1->A1_NOME, 40), aFisFill (SM0->M0_NOMECOM, 40))
		cString	+=	Iif (nFrete>0, aFisFill (SA1->A1_END, 40), aFisFill (SM0->M0_ENDENT, 40))
		cString	+=	Iif (nFrete>0, aFisFill (SA1->A1_BAIRRO, 20), aFisFill (SM0->M0_BAIRENT, 20))
		cString	+=	Iif (nFrete>0, aFisFill (SA1->A1_MUN, 20), aFisFill (SM0->M0_CIDENT, 20))
		cString	+=	Iif (nFrete>0, StrZero (Val (SA1->A1_CEP), 8), StrZero (Val (SM0->M0_CEPENT), 8))
		cString	+=	Iif (nFrete>0, aFisFill (SA1->A1_EST, 2), aFisFill (SM0->M0_ESTENT, 2))
		cString	+=	Iif (nFrete>0, StrZero (Val (SA1->A1_TEL), 12), StrZero (Val (SM0->M0_TEL), 12))
		cString	+=	Iif (Empty (SA1->A1_ENDENT), StrZero (Val (SA1->A1_CGC), 14), StrZero (Val (SA1->A1_CGC), 14))
		cString	+=	Iif (Empty (SA1->A1_ENDENT), aFisFill (A940IE(SA1->A1_INSCR), 14), 	aFisFill (A940IE(SA1->A1_INSCR), 14))
		cString	+=	Iif (Empty (SA1->A1_ENDENT), aFisFill (SA1->A1_NOME, 40), 		aFisFill (SA1->A1_NOME, 40))
		cString	+=	Iif (Empty (SA1->A1_ENDENT), aFisFill (SA1->A1_END, 40), 		aFisFill (SA1->A1_ENDENT, 40))
		cString	+=	Iif (Empty (SA1->A1_ENDENT), aFisFill (SA1->A1_BAIRRO, 20), 	aFisFill (SA1->A1_BAIRROE, 20))
		cString	+=	Iif (Empty (SA1->A1_ENDENT), aFisFill (SA1->A1_MUN, 20), 		aFisFill (SA1->A1_MUNE, 20))
		cString	+=	Iif (Empty (SA1->A1_ENDENT), StrZero (Val (SA1->A1_CEP), 8), 	StrZero (Val (SA1->A1_CEPE), 8))
		cString	+=	Iif (Empty (SA1->A1_ENDENT), aFisFill (SA1->A1_EST, 2), 	aFisFill (SA1->A1_ESTE, 2))
		cString	+=	Iif (Empty (SA1->A1_ENDENT), StrZero (Val (SA1->A1_TEL), 12), 		StrZero (Val (SA1->A1_TEL), 12))
		//
		cR18	:=	Iif (nFrete>0, StrZero (Val (SA1->A1_CGC), 14), StrZero (Val (SM0->M0_CGC), 14))+;
					Iif (nFrete>0, aFisFill (A940IE(SA1->A1_INSCR), 14), aFisFill (SM0->M0_INSC, 14))+;
					StrZero (Val (SA1->A1_CGC), 14)+aFisFill(A940IE(SA1->A1_INSCR),14)
	Else
		DbSelectArea ("SA2")
		SA2->(DbSetOrder (1))
		SA2->(MsSeek (xFilial ("SA2")+cCodCliente+cCodLoja))
		//
		cString	:=	"18"
		cString	+=	Iif (nFrete>0, StrZero (Val (SA2->A2_CGC), 14), StrZero (Val (SM0->M0_CGC), 14))
		cString	+=	Iif (nFrete>0, aFisFill (A940IE(SA2->A2_INSCR), 14), aFisFill (SM0->M0_INSC, 14))
		cString	+=	Iif (nFrete>0, aFisFill (SA2->A2_NOME, 40), aFisFill (SM0->M0_NOMECOM, 40))
		cString	+=	Iif (nFrete>0, aFisFill (SA2->A2_END, 40), aFisFill (SM0->M0_ENDENT, 40))
		cString	+=	Iif (nFrete>0, aFisFill (SA2->A2_BAIRRO, 20), aFisFill (SM0->M0_BAIRENT, 20))
		cString	+=	Iif (nFrete>0, aFisFill (SA2->A2_MUN, 20), aFisFill (SM0->M0_CIDENT, 20))
		cString	+=	Iif (nFrete>0, StrZero (Val (SA2->A2_CEP), 8), StrZero (Val (SM0->M0_CEPENT), 8))
		cString	+=	Iif (nFrete>0, aFisFill (SA2->A2_EST, 2), aFisFill (SM0->M0_ESTENT, 2))
		cString	+=	Iif (nFrete>0, StrZero (Val (SA2->A2_TEL), 12), StrZero (Val (SM0->M0_TEL), 12))
		cString	+=	StrZero (Val (SA2->A2_CGC), 14)
		cString	+=	aFisFill (A940IE(SA2->A2_INSCR), 14)
		cString	+=	aFisFill (SA2->A2_NOME, 40)
		cString	+=	aFisFill (SA2->A2_END, 40)
		cString	+=	aFisFill (SA2->A2_BAIRRO, 20)
		cString	+=	aFisFill (SA2->A2_MUN, 20)
		cString	+=	StrZero (Val (SA2->A2_CEP), 8)
		cString	+=	aFisFill (SA2->A2_EST, 2)
		cString	+=	StrZero (Val (SA2->A2_TEL), 12)
		//
		cR18	:=	Iif (nFrete>0, StrZero (Val (SA2->A2_CGC), 14), StrZero (Val (SM0->M0_CGC), 14))+;
					Iif (nFrete>0, aFisFill (A940IE(SA2->A2_INSCR), 14), aFisFill (SM0->M0_INSC, 14))+;
					StrZero (Val (SA2->A2_CGC), 14)+aFisFill(A940IE(SA2->A2_INSCR),14)
	Endif
    //
	If !_aTotal[51]		//Se verdadeiro o Registro 18 sera impresso
		xRet := cString
	Endif
	//
	RestArea (aArea)
Return (xRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³fSintReg19³ Autor ³ Gustavo G. Rueda      ³ Data ³26.06.2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retorna uma string contendo o registro 19 no sintegra.      º±±
±±º          ³Inicialmente baseado no layout de Manaus.                   º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpC: Formato do registro 19 do sintegra.                   ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³														      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fSintReg19 ()
	Local	cString		:=	""
	Local	nAcVol		:=	0
	Local	cAcEsp		:=	""
	Local	cCodCliente	:=	""
	Local	cCodLoja	:=	""
	Local	nFrete		:=	0
	Local	nPesoBruto	:=	0
	Local	aArea		:=	GetArea ()
	Local 	nInd		:= 0
	Local 	cTipo		:=	"N"
	//
	DbSelectArea ("SF2")
	SF2->(DbSetOrder (1))
	If (SF2->(MsSeek (xFilial ("SF2")+R50->A50_NFISC+R50->A50_SERIE)))
		cCodCliente	:=	SF2->F2_CLIENTE
		cCodLoja	:=	SF2->F2_LOJA
		nFrete		:=	SF2->F2_FRETE
		nPesoBruto	:=	SF2->F2_PBRUTO
		cTipo		:=	SF2->F2_TIPO
	Else  
		DbSelectArea ("SF3")
		SF3->(DbSetOrder (5))
		SF3->(MsSeek (xFilial ("SF3")+R50->A50_SERIE+R50->A50_NFISC))
		//
	    cCodCliente	:=	Iif(!Empty(SF3->F3_CLIENT), SF3->F3_CLIENT, SF3->F3_CLIEFOR)
	    cCodLoja	:=	Iif(!Empty(SF3->F3_LOJENT), SF3->F3_LOJENT, SF3->F3_LOJA)
		nFrete		:=	0
		nPesoBruto	:=	0
		cTipo		:=	SF3->F3_TIPO
	EndIf
	//
	If ! (cTipo$"BD")
		DbSelectArea ("SA1")
		SA1->(DbSetOrder (1))
		SA1->(MsSeek (xFilial ("SA1")+cCodCliente+cCodLoja))
	Else
		DbSelectArea ("SA2")
		SA2->(DbSetOrder (1))
		SA2->(MsSeek (xFilial ("SA2")+cCodCliente+cCodLoja))
	Endif
	//
	For nInd := 1 To 3
		cString	:=	"SF2->F2_VOLUME"+Str (nInd, 1)
		//
		nAcVol	+=	&(cString)
	Next (nInd)
	//
	For nInd := 1 To 3
		cString	:=	"SF2->F2_ESPECI"+Str (nInd, 1)
		//
		cAcEsp	+=	&(cString)
	Next (nInd)
	//
	If ! (cTipo$"BD")
		//Dados do destinatario
		cString	:=	"19"+StrZero (Val (SA1->A1_CGC), 14)+aFisFill (A940IE(SA1->A1_INSCR), 14)+aFisFill (R50->A50_SDOC, 3)+;
			RetNf(R50->A50_NFISC,6,"N")+"0"+Replace (StrZero (nPesoBruto, 9, 3), ".", "")+StrTran(StrZero (SF2->F2_VOLUME4,7,3),".","")+;
			"0"+Replace (StrZero (R50->A50_VALTOT, 13, 2), ".", "")+"0"+Replace (StrZero (nAcVol, 8, 2),".", "")+;
			Iif (nFrete>0, "2", "1")+aFisFill (cAcEsp, 6)
		//
	Else
		//Dados do destinatario
		cString	:=	"19"+StrZero (Val (SA2->A2_CGC), 14)+aFisFill (A940IE(SA2->A2_INSCR), 14)+aFisFill (R50->A50_SDOC, 3)+;
			RetNf(R50->A50_NFISC,6,"N")+"0"+Replace (StrZero (nPesoBruto, 9, 3), ".", "")+StrTran(StrZero (SF2->F2_VOLUME4,7,3),".","")+;
			"0"+Replace (StrZero (R50->A50_VALTOT, 13, 2), ".", "")+"0"+Replace (StrZero (nAcVol, 8, 2),".", "")+;
			Iif (nFrete>0, "2", "1")+aFisFill (cAcEsp, 6)
		//
	Endif
	RestArea (aArea)
Return (cString)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A940Filtro ³ Autor ³ Edstron E. Correia    ³ Data ³ 30/09/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Filtro generico para a entidade escolhida                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³SINTEGRA                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function A940Filtro(nOpc,cFilA940,cEntidade)
Local oWnd		 := GetWndDefault()
Local lRet 		 := .F.
Local cDescFiltro:= ""
Local oDlgFiltro
Local oDescFiltro

cDescFiltro := IIF(!Empty(cFilA940),MontDescr(cEntidade,cFilA940),"")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Atualiza a descricao da selecao.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DEFINE MSDIALOG oDlgFiltro FROM  00,00 TO 200,310 TITLE "Filtro" PIXEL

	@02,02 TO 75,153 LABEL "Descricao do Filtro" OF oDlgFiltro PIXEL
	@10,05 MSGET oDescFiltro VAR cDescFiltro PICTURE "@!" SIZE 145,60 OF oDlgFiltro PIXEL COLOR CLR_RED WHEN .F.
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Filtro para a selecao dos registros da entidade³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DEFINE SBUTTON FROM 80,55  TYPE 17 ENABLE OF oDlgFiltro ACTION (lRet:=.T.,;
																	cFilA940  := BuildExpr(cEntidade,oWnd),;
																	cDescFiltro := MontDescr(cEntidade,cFilA940),;
																	oDescFiltro:Refresh()) WHEN (nOpc == INCLUIR .OR. nOpc == ALTERAR)//Monta o filtro
																	
	DEFINE SBUTTON FROM 80,90  TYPE 1 ENABLE OF oDlgFiltro ACTION oDlgFiltro:End() //Fecha a tela e mantem o filtro
	
	DEFINE SBUTTON FROM 80,125 TYPE 2 ENABLE OF oDlgFiltro ACTION (	lRet:=.F.,;
																	cDescFiltro:="",;
																	oDescFiltro:Refresh(),;
																	oDlgFiltro:End())// Cancela o filtro
																
ACTIVATE MSDIALOG oDlgFiltro CENTERED

Return(lRet,cFilA940)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³TOTREG90  ºAutor  ³Gustavo G. Rueda    º Data ³  26/03/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Gera registro 90 (Toralizador) no formato especifico da     º±±
±±º          ³  TARE-DF, diferente do gerado no SINTEGRA.                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function TotReg90 (aRegistros)
	Local	nInd1		:=	0
	Local	cInicial	:=	aRegistros[1][1]+aRegistros[1][2]
	Local	cRegistro	:=	cInicial
	Local	nReg90		:=	0
	Local	nCtdReg		:=	0
	//
	For nInd1 := 2 To Len (aRegistros)
		If (Val (aRegistros[nInd1][2])>0)
			If (Len (cRegistro)>110)
				IncReg90 (@cRegistro, @nReg90, cInicial, nCtdReg, .F.)
				cRegistro	+=	aRegistros[nInd1][1]+aRegistros[nInd1][2]
			Else
				cRegistro	+=	aRegistros[nInd1][1]+aRegistros[nInd1][2]
			EndIf
			//
			nCtdReg	+=	Val (aRegistros[nInd1][2])
		EndIf
	Next (nInd1)
	//
	IncReg90 (@cRegistro, @nReg90, cInicial, nCtdReg, .T.)
Return (.T.)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao ³A940IncReg90 ºAutor  ³ Nereu Humberto Jr. º Data ³  02/01/03   º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.  ³Incremento do registro 90 (Totalizador) especifico para TARE-DFº±±
±±º       ³ no formato diferente do SINTEGRA.                             º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso    ³ MATA940 - Funcao: TotReg90                                    º±±
±±ÈÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function IncReg90 (cRegistro, nReg90, cInicial, nCtdReg, lAcabou)

	nReg90++
	
	If (lAcabou)
		nCtdReg++
		cRegistro	+=	Space (117-Len (cRegistro))+StrZero (nCtdReg, 8)
		cRegistro	+=	Alltrim (Str (nReg90))
	Else
		cRegistro	+=	Space (125-Len (cRegistro))
		cRegistro	+=	Alltrim (Str (nReg90))		
	EndIf

	RecLock("R90",.T.)
		R90->A90_REGS := cRegistro
	R90->(MsUnlock())
	//
	cRegistro	:=	cInicial
Return (.T.)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao ³CriaTrbs     ºAutor  ³ Gustavo G. Rueda   º Data ³  30/03/04   º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.  ³Montagem dos arquivos de trabalho.                             º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParam. ³ExpL -> lReg88 - Logico para a geracao do TRB para registro 88.º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno³ExpA -> aTrbs - Array contendo alias abertos pela funcao       º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso    ³ MATA940 - Funcao: Sintegra                                    º±±
±±ÈÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CriaTrbs (lReg88, lGeraRST)
Local cArq050		:= ""
Local cArq050B		:= ""
Local cArq050C		:= ""
Local cArq051		:= ""
Local cArq052		:= ""
Local cArq053   	:= ""
Local cArq054   	:= ""
Local cArq055   	:= ""
Local cArq056   	:= ""
Local cArq060M  	:= ""
Local cArq060A  	:= ""
Local cArq060D  	:= ""
Local cArq60D2  	:= ""
Local cArq060I  	:= ""
Local cArq60I2  	:= ""
Local cArq060R  	:= ""
Local cArq061   	:= ""
Local cArq061I  	:= ""	//Resumo Mensal por Item
Local cArq070   	:= ""
Local cArq071   	:= ""
Local cArq074   	:= ""
Local cArq075   	:= ""
Local cArq076   	:= ""
Local cArq077   	:= ""
Local cArq085		:= ""
Local cArq086		:= ""
Local cArqDV		:= ""
Local cArq088   	:= ""
Local cArq090   	:= ""
Local cArqFUN		:= ""
Local cArqFRT		:= ""
Local cArq053I		:= ""
Local cArqI88		:= ""
Local cArq8829      := ""
Local cArqRST		:= ""
Local cArq8827		:= ""
Local cArq8828		:= ""
Local aStru050  	:= {}
Local aStru051  	:= {}
Local aStru052  	:= {}
Local aStru053  	:= {}
Local aStru054  	:= {}
Local aStru055  	:= {}
Local aStru056  	:= {}
Local aStru060M 	:= {}
Local aStru060A 	:= {}
Local aStru060D 	:= {}
Local aStru060I 	:= {}
Local aStru060R 	:= {}
Local aStru061  	:= {}
Local aStru061I 	:= {}	//Resumo Mensal por Item
Local aStru070  	:= {}
Local aStru071  	:= {}
Local aStru074  	:= {}
Local aStru075  	:= {}
Local aStru076  	:= {}
Local aStru077  	:= {}
Local aStru085		:= {}
Local aStru086		:= {}
Local aStruDV		:= {}
Local aStru088  	:= {}
Local aStru090  	:= {}
Local aStruFUN		:= {}
Local aStruRST  	:= {}
Local aStruFRT  	:= {}
Local aTrbs			:= {}
Local lAglR54		:= SuperGetMv ("MV_AGLR54")
Local lGeraR74      := .F.
Local aStruI88		:= {}
Local aStru8829     := {} 
Local aStru8827		:= {}
Local aStru8828		:= {}
Local cArq8818		:= "" 
Local aStru8818  	:= {}

DEFAULT lGeraRST := .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro de ressarcimento de ICMS ST MG³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If lGeraRST
	If Select("RST")==0 .AND. (MV_PAR53 == 1 .OR. MV_PAR37 == 2)//Somente ira criar a tabela RST se a mesma nao foi criada pela funcao FsEstInv()
			
			AADD(aStruRST,{"RST_DTINVE"	,"D",008,0})
			AADD(aStruRST,{"RST_PRODUT"	,"C",014,0})
			AADD(aStruRST,{"RST_QUANT"	,"N",013,3})
			AADD(aStruRST,{"RST_CUSTO"	,"N",013,2})
			AADD(aStruRST,{"RST_SITUAC"	,"C",001,0})
			AADD(aStruRST,{"RST_CNPJ"	,"C",014,0})
			AADD(aStruRST,{"RST_IE"  	,"C",014,0})
			AADD(aStruRST,{"RST_UF"  	,"C",002,0})
			AADD(aStruRST,{"RST_CNORI"	,"C",014,0})	// CNPJ/CPF original, sem formatacao do meio magnetico
			
			cArqRST  :=	CriaTrab(aStruRST)
			dbUseArea(.T.,__LocalDriver,cArqRST,"RST")
			IndRegua("RST",cArqRST,"DTOS(RST_DTINVE)")
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao os arquivos de trabalho                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 050 - Notas Fiscais Modelo 1/1A (ICMS)                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru050,{"A50_CNPJ"	,"C",014,0})
AADD(aStru050,{"A50_IE"		,"C",014,0})
AADD(aStru050,{"A50_EMISS"	,"D",008,0})
AADD(aStru050,{"A50_UF"		,"C",002,0})
AADD(aStru050,{"A50_MODELO"	,"C",002,0})
AADD(aStru050,{"A50_SERIE"	,"C",TamSX3("F2_SERIE")[1],0})
AADD(aStru050,{"A50_SDOC"	,"C",003,0})
AADD(aStru050,{"A50_NFISC"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru050,{"A50_CFOP"	,"C",004,0})
AADD(aStru050,{"A50_EMIT"	,"C",001,0})
AADD(aStru050,{"A50_VALTOT"	,"N",014,2})
AADD(aStru050,{"A50_BSICM"	,"N",014,2})
AADD(aStru050,{"A50_VALICM"	,"N",014,2})
AADD(aStru050,{"A50_ISENTO"	,"N",013,2})
AADD(aStru050,{"A50_OUTRAS"	,"N",013,2})
AADD(aStru050,{"A50_ALQICM"	,"N",005,2})
AADD(aStru050,{"A50_ALQINT"	,"N",005,2})
AADD(aStru050,{"A50_SITUAC"	,"C",001,0})
AADD(aStru050,{"A50_DESPES"	,"N",014,2})
AADD(aStru050,{"A50_CLIENT" ,"C",TamSX3("F3_CLIEFOR")[1],0})
AADD(aStru050,{"A50_LOJA"	,"C",TamSX3("F3_LOJA")[1],0})
AADD(aStru050,{"A50_CNORI"	,"C",014,0})	// CNPJ/CPF original, sem formatacao do meio magnetico
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos referentes a SEF-PE                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru050,{"A50_CODIGO"	,"C",TamSX3("F3_CLIEFOR")[1],0})	//Codigo Cliente e/ou Fornecedor
AADD(aStru050,{"A50_NOME"	,"C",035,0})	//Nome/Denominacao/Razao Social
AADD(aStru050,{"A50_DTOPER"	,"D",008,0})	//Data da Operacao
AADD(aStru050,{"A50_TOTNF"	,"N",014,2})	//Vlr. Total da NF
AADD(aStru050,{"A50_TBSICM"	,"N",014,2})	//Base de Calc. do ICMS Total
AADD(aStru050,{"A50_TVALIC"	,"N",014,2})	//Montante Total do Imposto
AADD(aStru050,{"A50_TISENT"	,"N",014,2})	//Oper./Prest. Isentas ou Nao Trib. - Total
AADD(aStru050,{"A50_TOUTRA"	,"N",014,2})	//Valor Total que nao confira deb. ou cred. do ICMS
AADD(aStru050,{"A50_OBSERV"	,"C",070,0})	//Observacao
AADD(aStru050,{"A50_OBS"	,"N",005,0})	//Sequencial
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos para o layout SAPI³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru050,{"A50_CLIFOR"	,"C",TamSX3("F3_CLIEFOR")[1],0})	//CLIENTE OU FORNECEDOR
AADD(aStru050,{"A50_LOJCF"	,"C",TamSX3("F3_LOJA")[1],0})	//LOJA
AADD(aStru050,{"A50_TIPO"	,"C",001,0})	//TIPO
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campo para geracao dos Regs 88SME e 88SMS³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru050,{"A50_CFOMOV","C",004,0})	//CFOP
AADD(aStru050,{"A50_FILIAL","C",TamSX3("F3_FILIAL")[1],0}) //Filial selecionada pelo usuário
//
cArq050	:=	CriaTrab(aStru050)
dbUseArea(.T.,__LocalDriver,cArq050,"R50")
IndRegua("R50",cArq050,"DTOS(A50_EMISS)")
dbClearIndex()
//
cArq050B := CriaTrab(Nil,.F.)
IndRegua("R50",cArq050B,"A50_CNPJ+A50_IE")
dbClearIndex()
//
cArq050C := CriaTrab(Nil,.F.)
IndRegua("R50",cArq050C,"A50_CNPJ+A50_NFISC+A50_SERIE+A50_CFOP+StrZero(A50_ALQICM,5,2)")
dbClearIndex()
//
dbSelectArea("R50")
dbSetIndex(cArq050+OrdBagExt())
dbSetIndex(cArq050B+OrdBagExt())
dbSetIndex(cArq050C+OrdBagExt())
dbSetOrder(1)
//
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 051 - Nota Fiscal ( IPI )                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru051,{"A51_CNPJ"	,"C",014,0})
AADD(aStru051,{"A51_IE"		,"C",014,0})
AADD(aStru051,{"A51_EMISS"	,"D",008,0})
AADD(aStru051,{"A51_UF"		,"C",002,0})
AADD(aStru051,{"A51_SERIE"	,"C",TamSX3("F2_SERIE")[1],0})
AADD(aStru051,{"A51_SDOC"	,"C",003,0})
AADD(aStru051,{"A51_NFISC"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru051,{"A51_CFOP"	,"C",004,0})
AADD(aStru051,{"A51_VALTOT"	,"N",014,2})
AADD(aStru051,{"A51_VALIPI"	,"N",014,2})
AADD(aStru051,{"A51_ISENTA"	,"N",014,2})
AADD(aStru051,{"A51_OUTRAS"	,"N",014,2})
AADD(aStru051,{"A51_SITUAC"	,"C",001,0})
AADD(aStru051,{"A51_CNORI"	,"C",014,0})	// CNPJ/CPF original, sem formatacao do meio magnetico
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos referentes a SEF-PE                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru051,{"A51_BASIPI","N",014,2})	//Base de Calc. do IPI
//
cArq051	:=	CriaTrab(aStru051)
dbUseArea(.T.,__LocalDriver,cArq051,"R51")
IndRegua("R51",cArq051,"Dtos(A51_EMISS)")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 052 - Devolucao total ou parcial de notas fiscais de saidas.   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd (aStru052, {"A52_CNPJ",	"C",	014,	0})
aAdd (aStru052, {"A52_IE",		"C",	014,	0})
aAdd (aStru052, {"A52_EMISS",	"D",	008,	0})
aAdd (aStru052, {"A52_UF",		"C",	002,	0})
aAdd (aStru052, {"A52_MODELO",	"C",	002,	0})
aAdd (aStru052, {"A52_SERIE",	"C",	TamSX3("F2_SERIE")[1],	0})
aAdd (aStru052, {"A52_SDOC",	"C",	003,	0})
aAdd (aStru052, {"A52_SDOCD",	"C",	003,	0})
aAdd (aStru052, {"A52_NFISC",	"C",	TamSX3("F2_DOC")[1],	0})
aAdd (aStru052, {"A52_CFOP",	"C",	004,	0})
aAdd (aStru052, {"A52_ALQ",		"N",	005,	2})
aAdd (aStru052, {"A52_VLRTOT",	"N",	013,	2})
aAdd (aStru052, {"A52_BSCALC",	"N",	013,	2})
aAdd (aStru052, {"A52_VLRICM",	"N",	013,	2})
aAdd (aStru052, {"A52_MODDEV",	"C",	002,	0})
aAdd (aStru052, {"A52_SERDEV",	"C",	003,	0})
aAdd (aStru052, {"A52_NFIDEV",	"C",	TamSX3("F2_DOC")[1],	0})
aAdd (aStru052, {"A52_CFODEV",	"C",	004,	0})
aAdd (aStru052, {"A52_ALQDEV",	"N",	005,	2})
aAdd (aStru052, {"A52_CNORI",	"C",	014,	0})	// CNPJ/CPF original, sem formatacao do meio magnetico
//
cArq052	:=	CriaTrab (aStru052)
dbUseArea (.T., __LocalDriver, cArq052, "R52")
IndRegua ("R52", cArq052, "A52_CNPJ+A52_NFISC+A52_SERIE+A52_CFOP+StrZero (A52_ALQ, 5, 2)")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 053 - Nota Fiscal Subst. Tributaria                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru053,{"A53_CNPJ"	,"C",014,0})
AADD(aStru053,{"A53_IE"		,"C",014,0})
AADD(aStru053,{"A53_EMISS"	,"D",008,0})
AADD(aStru053,{"A53_UF"		,"C",002,0})
AADD(aStru053,{"A53_MODELO"	,"C",002,0})
AADD(aStru053,{"A53_SERIE"	,"C",TamSX3("F2_SERIE")[1],0})
AADD(aStru053,{"A53_SDOC"	,"C",003,0})
AADD(aStru053,{"A53_NFISC"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru053,{"A53_CFOP"	,"C",004,0})
AADD(aStru053,{"A53_EMIT"	,"C",001,0})
AADD(aStru053,{"A53_BRICMS"	,"N",014,2})
AADD(aStru053,{"A53_VALRET"	,"N",014,2})
AADD(aStru053,{"A53_DESPES"	,"N",014,2})
AADD(aStru053,{"A53_SITUAC"	,"C",001,0})
AADD(aStru053,{"A53_CNORI"	,"C",014,0})	// CNPJ/CPF original, sem formatacao do meio magnetico
AADD(aStru053,{"A53_ANTECI" ,"C",001,0})   //codigo da anteipacao
AADD(aStru053,{"A53_FILIAL","C",TamSX3("F3_FILIAL")[1],0}) //Filial selecionada pelo usuário
//
cArq053		:=	CriaTrab(aStru053)
cArq053I	:=	CriaTrab(aStru053)
dbUseArea(.T.,__LocalDriver,cArq053,"R53")
IndRegua("R53",cArq053,"A53_CNPJ+A53_NFISC+A53_SERIE+A53_CFOP")
IndRegua("R53",cArq053I,"DTOS(A53_EMISS)+A53_NFISC+A53_SERIE")
dbClearIndex()

dbSelectArea("R53")
dbSetIndex(cArq053+OrdBagExt())
dbSetIndex(cArq053I+OrdBagExt())
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 054 - Itens do documento fiscal                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru054,{"A54_CNPJ"	,"C",014,0})
AADD(aStru054,{"A54_MODELO"	,"C",002,0})
AADD(aStru054,{"A54_SERIE"	,"C",TamSX3("F2_SERIE")[1],0})
AADD(aStru054,{"A54_SDOC"	,"C",003,0})
AADD(aStru054,{"A54_NFISC"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru054,{"A54_CFOP"	,"C",004,0})
AADD(aStru054,{"A54_CST"	,"C",003,0})
AADD(aStru054,{"A54_NUMITE"	,"C",003,0})
AADD(aStru054,{"A54_PRODUT"	,"C",014,0})
AADD(aStru054,{"A54_QUANT"	,"N",014,3})
AADD(aStru054,{"A54_VALPRO"	,"N",014,2})
AADD(aStru054,{"A54_VALDES"	,"N",014,2})
AADD(aStru054,{"A54_BSICM"	,"N",014,2})
AADD(aStru054,{"A54_BRICMS"	,"N",014,2})
AADD(aStru054,{"A54_VALIPI"	,"N",014,2})
AADD(aStru054,{"A54_ALQICM"	,"N",005,2})
AADD(aStru054,{"A54_CNORI"	,"C",014,0})	// CNPJ/CPF original, sem formatacao do meio magnetico
AADD(aStru054,{"A54_ALQIPI"	,"N",005,2})	// Aliquota de IPI - Implementacao NFE-BA
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos referentes a SEF-PE                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru054,{"A54_IE"		,"C",014,0})
AADD(aStru054,{"A54_EMISS"	,"D",008,0})	//Dt. Emissao ou Recebimento
AADD(aStru054,{"A54_UF"		,"C",002,0})
AADD(aStru054,{"A54_APUR"	,"N",002,0})	//Cod. Apuracao PRODEPE/FUNCRESCE
AADD(aStru054,{"A54_INDESP"	,"N",002,0})	//Indicador Especial
AADD(aStru054,{"A54_VALICM"	,"N",014,2})
AADD(aStru054,{"A54_ICMRET"	,"N",014,2})
AADD(aStru054,{"A54_PRORI"	,"C",15,0})	//Codigo do produto original sem conversao para o NCM igual ocorre no campo A54_PRODUT
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos referente ao FUNCEP/PB³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru054,{"A54_FUNCEP"	,"C",1,0})
AADD(aStru054,{"A54_ICMDIF"	,"N",014,2})
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos para o Sintegra-MG    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru054,{"A54_DTEMI"	,"D",008,0})	//Data da Emissao
AADD(aStru054,{"A54_DTSAI"	,"D",008,0})	//Data da Saida ou Entrada
AADD(aStru054,{"A54_ALIQST"	,"N",005,2})	//Aliquota do ICMS ST
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³FLAG DE CONTRIBUINTE TARE³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru054,{"A54_CTARE"	,"C",001,0})	//Aliquota do ICMS ST
AADD(aStru054,{"A54_INCFIS"	,"C",001,0})	//Aliquota do ICMS ST
//
AADD(aStru054,{"A54_FILIAL"	,"C",TamSX3("F3_FILIAL")[1],0})   //Filial selecionada pelo usuário

cArq054	:=	CriaTrab(aStru054)
dbUseArea(.T.,__LocalDriver,cArq054,"R54")
If (lAglR54)
	IndRegua("R54",cArq054,"A54_CNPJ+A54_SERIE+A54_NFISC+A54_PRODUT+Str (A54_ALQICM, 5, 2)+A54_NUMITE")
Else
	IndRegua("R54",cArq054,"A54_CNPJ+A54_SERIE+A54_NFISC+A54_NUMITE")
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Arquivo do Registro tipo 55 - Guia Nacional de Recolhimento de Tributos Estaduais³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru055,{"A55_CNPJ"	,"C",014,0})
AADD(aStru055,{"A55_IE"		,"C",014,0})
AADD(aStru055,{"A55_DATPAG"	,"D",008,0})
AADD(aStru055,{"A55_UFSUBS"	,"C",002,0})
AADD(aStru055,{"A55_UFFAV"	,"C",002,0})
AADD(aStru055,{"A55_BANCO"	,"C",003,0})
AADD(aStru055,{"A55_AGENC"	,"C",004,0})
AADD(aStru055,{"A55_NUMERO"	,"C",020,0})
AADD(aStru055,{"A55_VALOR"	,"N",014,2})
AADD(aStru055,{"A55_VENCTO"	,"D",008,0})
AADD(aStru055,{"A55_MESANO"	,"C",006,0})
AADD(aStru055,{"A55_CONVEN"	,"C",030,0})
AADD(aStru055,{"A55_CNORI"	,"C",014,0})	// CNPJ/CPF original, sem formatacao do meio magnetico
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos referentes a SEF-PE                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru055,{"X78_VLRDAE"	,"N",014,2})
AADD(aStru055,{"X78_RECDAE"	,"C",004,0})
AADD(aStru055,{"X78_PERFIS"	,"C",006,0})
AADD(aStru055,{"X78_DTVECT"	,"D",008,0})
//
cArq055	:=	CriaTrab(aStru055)
dbUseArea(.T.,__LocalDriver,cArq055,"R55")
IndRegua("R55",cArq055,"DTOS(A55_DATPAG)")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 56 (Operacoes com veiculos automotores novos) para ser alimentado através de um ponto de entrada.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd (aStru056, {"A56_CNPJ",	"C",	014,	0})
aAdd (aStru056, {"A56_MODELO",	"N",	002,	0})
aAdd (aStru056, {"A56_SERIE",	"C",	TamSX3("F2_SERIE")[1],	0})
aAdd (aStru056, {"A56_SDOC",	"C",	003,	0})
aAdd (aStru056, {"A56_NUMERO",	"C",	TamSX3("F2_DOC")[1],	0})
aAdd (aStru056, {"A56_CFOP",	"C",	004,	0})
aAdd (aStru056, {"A56_CST",		"N",	003,	0})
aAdd (aStru056, {"A56_NRIT",	"N",	003,	0})
aAdd (aStru056, {"A56_PROD",	"C",	014,	0})
aAdd (aStru056, {"A56_OPER",	"N",	001,	0})
aAdd (aStru056, {"A56_CNPJC",	"N",	014,	0})
aAdd (aStru056, {"A56_ALQIPI",	"N",	005,	2})
aAdd (aStru056, {"A56_CHASSI",	"C",	017,	0})
aAdd (aStru056, {"A56_CNORI",	"C",	014,	0})	// CNPJ/CPF original, sem formatacao do meio magnetico
//
cArq056	:=	CriaTrab (aStru056)
dbUseArea (.T.,__LocalDriver, cArq056, "R56")
IndRegua ("R56", cArq056, "A56_CNPJ+A56_NUMERO+A56_SERIE+A56_CFOP+A56_PROD")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 060 - ECF(Mestre do equipamento)                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru060M,{"M60_EMISS"	,"D",008,0})
AADD(aStru060M,{"M60_NUMFAB","C",020,0})
AADD(aStru060M,{"M60_PDV"	,"C",003,0})
AADD(aStru060M,{"M60_MODELO","C",002,0})
AADD(aStru060M,{"M60_NUMINI","C",TamSX3("F2_DOC")[1],0})
AADD(aStru060M,{"M60_NUMFIM","C",TamSX3("F2_DOC")[1],0})
AADD(aStru060M,{"M60_REDUCZ","C",006,0})
AADD(aStru060M,{"M60_CRO"	,"N",003,0})
AADD(aStru060M,{"M60_VENDA"	,"N",016,2})
AADD(aStru060M,{"M60_GERAL"	,"N",016,2})
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos referentes a SEF-PE                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru060M,{"M60_GTINI"	,"N",014,2})	//Grande Total Inicial
AADD(aStru060M,{"M60_VLIQ"	,"N",014,2})	//Venda Liquida
AADD(aStru060M,{"M60_ICMSD"	,"N",014,2})	//ICMS Debitado
AADD(aStru060M,{"M60_OBS"	,"N",005,0})	//Observacao-Sequencial
//
cArq060M :=	CriaTrab(aStru060M)
dbUseArea(.T.,__LocalDriver,cArq060M,"M60")
IndRegua("M60",cArq060M,"DTOS(M60_EMISS)+M60_PDV")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 060A - ECF(Analitico)                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru060A,{"A60_EMISS"	,"D",008,0})
AADD(aStru060A,{"A60_NUMFAB","C",020,0})
AADD(aStru060A,{"A60_SITTRI","C",004,0})
AADD(aStru060A,{"A60_VALOR"	,"N",014,2})
//
cArq060A	:=	CriaTrab(aStru060A)
dbUseArea(.T.,__LocalDriver,cArq060A,"A60")
IndRegua("A60",cArq060A,"DTOS(A60_EMISS)+A60_NUMFAB+A60_SITTRI")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 060D - ECF ( Resumo Diario )                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru060D,{"D60_EMISS"	,"D",008,0})
AADD(aStru060D,{"D60_NUMFAB","C",020,0})
AADD(aStru060D,{"D60_CODPRO","C",014,0})
AADD(aStru060D,{"D60_QUANT" ,"N",013,3})
AADD(aStru060D,{"D60_VALOR" ,"N",016,2})
AADD(aStru060D,{"D60_BSICM" ,"N",016,2})
AADD(aStru060D,{"D60_SITTRI","C",004,0})
AADD(aStru060D,{"D60_VLICM" ,"N",013,2})
//
cArq060D	:=	CriaTrab(aStru060D)
dbUseArea(.T.,__LocalDriver,cArq060D,"D60")
IndRegua("D60",cArq060D,"DTOS(D60_EMISS)+D60_CODPRO+D60_NUMFAB")
cArq60D2  :=CriaTrab(NIL,.F.)
IndRegua("D60",cArq60D2,"DTOS(D60_EMISS)+D60_NUMFAB")
DbClearIndex()
DbSetIndex(cArq060D+OrdBagExt())
DbSetIndex(cArq60D2+OrdBagExt())
DbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 060I - ECF ( Itens do documento )                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru060I,{"I60_EMISS" ,"D",008,0})
AADD(aStru060I,{"I60_NUMFAB","C",020,0})
AADD(aStru060I,{"I60_MODELO","C",002,0})
AADD(aStru060I,{"I60_COO"   ,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru060I,{"I60_ITEM"  ,"C",003,0})
AADD(aStru060I,{"I60_CODPRO","C",014,0})
AADD(aStru060I,{"I60_QUANT" ,"N",013,3})
AADD(aStru060I,{"I60_VLUNI" ,"N",013,2})
AADD(aStru060I,{"I60_VALOR" ,"N",013,2})
AADD(aStru060I,{"I60_BSICM" ,"N",012,2})
AADD(aStru060I,{"I60_SITTRI","C",004,0})
AADD(aStru060I,{"I60_VLICM" ,"N",012,2})
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Implementação do FUNCEP/PB³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru060I,{"I60_FUNCEP","C",001,0})
AADD(aStru060I,{"I60_BSST","N",012,2})
AADD(aStru060I,{"I60_CFOP"	,"C",004,2})
//
cArq060I	:=	CriaTrab(aStru060I)
dbUseArea(.T.,__LocalDriver,cArq060I,"I60")
IndRegua("I60",cArq060I,"DTOS(I60_EMISS)+I60_NUMFAB+I60_COO+I60_CODPRO")
cArq60I2  :=CriaTrab(NIL,.F.)
IndRegua("I60",cArq60I2,"DTOS(I60_EMISS)+I60_NUMFAB")
DbClearIndex()
DbSetIndex(cArq060I+OrdBagExt())
DbSetIndex(cArq60I2+OrdBagExt())
DbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 060R - ECF ( Resumo Mensal )                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru060R,{"R60_MESANO","C",006,0})
AADD(aStru060R,{"R60_CODPRO","C",014,0})
AADD(aStru060R,{"R60_QUANT" ,"N",013,3})
AADD(aStru060R,{"R60_VALOR" ,"N",016,2})
AADD(aStru060R,{"R60_BSICM" ,"N",016,2})
AADD(aStru060R,{"R60_SITTRI","C",004,0})
//
cArq060R	:=	CriaTrab(aStru060R)
dbUseArea(.T.,__LocalDriver,cArq060R,"R60")
IndRegua("R60",cArq060R,"R60_MESANO+R60_CODPRO+R60_SITTRI")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Arquivo do Registro tipo 61 - Docs.Fiscais nao emitidos por ECF ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru061,{"A61_EMISS"	,"D",008,0})
AADD(aStru061,{"A61_MODELO"	,"C",002,0})
AADD(aStru061,{"A61_SDOC"	,"C",003,0})
AADD(aStru061,{"A61_SERIE"	,"C",TamSX3("F2_SERIE")[1],0})
AADD(aStru061,{"A61_SUBSER"	,"C",002,0})
AADD(aStru061,{"A61_NUMINI"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru061,{"A61_NUMFIM"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru061,{"A61_VALTOT"	,"N",014,2})
AADD(aStru061,{"A61_BSICM"	,"N",014,2})
AADD(aStru061,{"A61_VALICM"	,"N",014,2})
AADD(aStru061,{"A61_ISENTA"	,"N",014,2})
AADD(aStru061,{"A61_OUTRAS"	,"N",014,2})
AADD(aStru061,{"A61_ALQICM"	,"N",005,2})
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos referentes a SEF-PE                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

AADD(aStru061,{"A61_LANCCO"	,"C",012,0})	//Numero de Lanc. Contabil
AADD(aStru061,{"A61_CFOP"	,"C",004,0})
AADD(aStru061,{"A61_OBS"	,"N",005,0})	//Observacao-Sequencial
//
cArq061	:=	CriaTrab(aStru061)
dbUseArea(.T.,__LocalDriver,cArq061,"R61")
IndRegua("R61",cArq061,"DTOS(A61_EMISS)+STR(A61_ALQICM,5,2)+A61_SERIE")
//Foi alterado acima +A61_CFOP para +A61_SERIE, para somar dois registros iguais em uma só linha, como no Livro de Saída

//Ú Convenio 76/2003 ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Arquivo do Registro Tipo 61 Subtipo "R" - Resumo Mensal por Item de NF's ³
//³nao emitidos por ECF                                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru061I,{"I61_MESANO"	,"C",006,0})	//Mes e Ano de Emissao "MMAAAA"
AADD(aStru061I,{"I61_CODPRO"	,"C",014,0})	//Codigo do Produto do Informante
AADD(aStru061I,{"I61_QUANT"		,"N",013,3})	//Qtde. Acum. do Prod. Vendida no Mes
AADD(aStru061I,{"I61_VLBRUT"	,"N",016,2})	///Vlr. Bruto Acum. na Venda do Prod. no Mes
AADD(aStru061I,{"I61_BCICMS"	,"N",016,2})	//Base de Calculo do ICMS do Vlr. Acum. no Mes
AADD(aStru061I,{"I61_ALIQ"		,"N",005,2})	//Aliquota do ICMS do Prod.
//
cArq061I := CriaTrab(aStru061I)
dbUseArea(.T.,__LocalDriver,cArq061I,"I61")
IndRegua("I61",cArq061I,"I61_CODPRO+STR(I61_ALIQ,5,2)")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 070 - Documento de Conhecimento de Transporte                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru070,{"A70_CNPJ"	,"C",014,0})
AADD(aStru070,{"A70_IE"		,"C",014,0})
AADD(aStru070,{"A70_EMISS"	,"D",008,0})
AADD(aStru070,{"A70_UF"		,"C",002,0})
AADD(aStru070,{"A70_MODELO"	,"C",002,0})
AADD(aStru070,{"A70_ESPNFS" ,"C",TamSX3("F2_ESPECIE")[1],0})
AADD(aStru070,{"A70_SERIE"	,"C",001,0})
AADD(aStru070,{"A70_SUBSER"	,"C",002,0})
AADD(aStru070,{"A70_NFISC"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru070,{"A70_CFOP"	,"C",004,0})
AADD(aStru070,{"A70_VALTOT"	,"N",015,2})
AADD(aStru070,{"A70_BSICM"	,"N",015,2})
AADD(aStru070,{"A70_VALICM"	,"N",015,2})
AADD(aStru070,{"A70_ISENTA"	,"N",015,2})
AADD(aStru070,{"A70_OUTRAS"	,"N",015,2})
AADD(aStru070,{"A70_CIfFOB"	,"C",001,0})
AADD(aStru070,{"A70_SITUAC"	,"C",001,0})
AADD(aStru070,{"A70_CNORI"	,"C",014,0})	// CNPJ/CPF original, sem formatacao do meio magnetico
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos referentes a SEF-PE                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru070,{"A70_NOME"	,"C",035,0})	//Nome/Denominacao/Razao Social
AADD(aStru070,{"A70_DTOP"	,"D",008,0})	//Dt. Operacao
AADD(aStru070,{"A70_LANCC"	,"C",012,0})	//Numero de Lanc. Contabil
AADD(aStru070,{"A70_ALQICM"	,"N",005,2})	//Aliquota de ICMS
AADD(aStru070,{"A70_OBS"	,"N",005,0})	//Observacao-Sequencial
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos para o layout SAPI³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru070,{"A70_CLIFOR"	,"C",006,0})	//CLIENTE OU FORNECEDOR
AADD(aStru070,{"A70_LOJCF"	,"C",TamSX3("F3_LOJA")[1],0})	//LOJA
AADD(aStru070,{"A70_TIPO"	,"C",001,0})	//TIPO
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campo para geracao dos Regs 88SME e 88SMS³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru070,{"A70_CFOMOV","C",004,0})	//CFOP
//
cArq070	:=	CriaTrab(aStru070)
dbUseArea(.T.,__LocalDriver,cArq070,"R70")
IndRegua("R70",cArq070,"DTOS(A70_EMISS)")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 071 - Complemento do Conhecimento de Transporte                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru071,{"A71_CGCTOM"	,"C",014,0})
AADD(aStru071,{"A71_IETOM"	,"C",014,0})
AADD(aStru071,{"A71_DTCONH"	,"D",008,0})
AADD(aStru071,{"A71_UFTOM"	,"C",002,0})
AADD(aStru071,{"A71_MODCON"	,"C",002,0})
AADD(aStru071,{"A71_ESPNFS" ,"C",TamSX3("F2_ESPECIE")[1],0})
AADD(aStru071,{"A71_SERCON"	,"C",001,0})
AADD(aStru071,{"A71_SUBCON"	,"C",002,0})
AADD(aStru071,{"A71_NUMCON"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru071,{"A71_UFREM"	,"C",002,0})
AADD(aStru071,{"A71_CGCREM"	,"C",014,0})
AADD(aStru071,{"A71_IEREM"	,"C",014,0})
AADD(aStru071,{"A71_DTNOTA"	,"D",008,0})
AADD(aStru071,{"A71_MODNOT"	,"C",002,0})
AADD(aStru071,{"A71_SERNOT"	,"C",003,0})
AADD(aStru071,{"A71_NUMNOT"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru071,{"A71_VALNOT"	,"N",014,2})
//
cArq071	:=	CriaTrab(aStru071)
dbUseArea(.T.,__LocalDriver,cArq071,"R71")
IndRegua("R71",cArq071,"DTOS(A71_DTCONH)")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 074 - Registro de Inventario                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// Cria a estrutura quando for gerar inventario para nao dar problema no INI
If Select("R74")==0//Somente ira criar a tabela R74 se a mesma nao foi criada pela funcao FsEstInv()
	lGeraR74:=.T.
	AADD(aStru074,{"A74_DTINVE"	,"D",008,0})
	AADD(aStru074,{"A74_PRODUT"	,"C",014,0})
	AADD(aStru074,{"A74_QUANT"	,"N",013,3})
	AADD(aStru074,{"A74_CUSTO"	,"N",013,2})
	AADD(aStru074,{"A74_SITUAC"	,"C",001,0})
	AADD(aStru074,{"A74_CNPJ"	,"C",014,0})
	AADD(aStru074,{"A74_IE"  	,"C",014,0})
	AADD(aStru074,{"A74_UF"  	,"C",002,0})
	AADD(aStru074,{"A74_CNORI"	,"C",014,0})	// CNPJ/CPF original, sem formatacao do meio magnetico
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Campos referentes a SEF-PE                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AADD(aStru074,{"A74_OBS"	,"N",005,0})
	//
	cArq074  :=	CriaTrab(aStru074)
	dbUseArea(.T.,__LocalDriver,cArq074,"R74")
	IndRegua("R74",cArq074,"DTOS(A74_DTINVE)")
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 075 - Relacao de Produtos e Servicos                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru075,{"A75_DTAINI"	,"D",008,0})
AADD(aStru075,{"A75_DTAFIM"	,"D",008,0})
AADD(aStru075,{"A75_PROD"	,"C",014,0})
AADD(aStru075,{"A75_CODNCM"	,"C",008,0})
AADD(aStru075,{"A75_DESCR"	,"C",053,0})
AADD(aStru075,{"A75_UM"		,"C",006,0})
AADD(aStru075,{"A75_SITTRI"	,"C",003,0})
AADD(aStru075,{"A75_ALQIPI"	,"N",005,2})
AADD(aStru075,{"A75_ALQICM"	,"N",005,2})
AADD(aStru075,{"A75_REDBSE"	,"N",006,2})
AADD(aStru075,{"A75_BRICMS"	,"N",014,2})
AADD(aStru075,{"A75_PRORI"	,"C",015,0})
AADD(aStru075,{"A75_CODBAR"	,"C",014,0})
AADD(aStru075,{"A75_VEREAN"	,"C",002,0})
AADD(aStru075,{"A75_FILIAL"	,"C",TamSX3("F3_FILIAL")[1],0})
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³FLAG DE CONTRIBUINTE TARE³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru075,{"A75_CTARE"	,"C",001,0})	//Aliquota do ICMS ST
//
cArq075	  :=	CriaTrab(aStru075)
dbUseArea(.T.,__LocalDriver,cArq075,"R75")
IndRegua("R75",cArq075,"DTOS(A75_DTAINI)+DTOS(A75_DTAFIM)+A75_PROD+A75_CODNCM+A75_UM")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 076 - Nota Fiscal Servico de Comunicacao/Telecomunicacao (mod.21/mod.22) ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru076,{"A76_CNPJ"	,"C",014,0})
AADD(aStru076,{"A76_IE"		,"C",014,0})
AADD(aStru076,{"A76_MODELO"	,"C",002,0})
AADD(aStru076,{"A76_SERIE"	,"C",002,0})
AADD(aStru076,{"A76_SUBSER"	,"C",002,0})
AADD(aStru076,{"A76_NFISC"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru076,{"A76_CFOP"	,"C",004,0})
AADD(aStru076,{"A76_TIPREC"	,"C",001,0})
AADD(aStru076,{"A76_EMISS"	,"D",008,0})
AADD(aStru076,{"A76_UF"		,"C",002,0})
AADD(aStru076,{"A76_VALTOT"	,"N",014,2})
AADD(aStru076,{"A76_BRICMS"	,"N",013,2})
AADD(aStru076,{"A76_VALICM"	,"N",012,2})
AADD(aStru076,{"A76_ISENTA"	,"N",012,2})
AADD(aStru076,{"A76_OUTRAS"	,"N",012,2})
AADD(aStru076,{"A76_ALQICM"	,"N",005,2})
AADD(aStru076,{"A76_SITUAC"	,"C",001,0})
AADD(aStru076,{"A76_CNORI"	,"C",014,0})	// CNPJ/CPF original, sem formatacao do meio magnetico
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos referentes a SEF-PE                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru076,{"A76_CODIGO"	,"C",006,0})		//Codigo Cliente e/ou Fornecedor
AADD(aStru076,{"A76_LOJA"	,"C",TamSX3("F3_LOJA")[1],0})	//Loja
AADD(aStru076,{"A76_TVLTOT"	,"N",013,2})	//Valor Total
AADD(aStru076,{"A76_TBICMS"	,"N",013,2})	//Base de Calculo do ICMS Total
AADD(aStru076,{"A76_TOTICM"	,"N",012,2})	//Valor do ICMS Total
AADD(aStru076,{"A76_TISENT"	,"N",012,2})	//Prest. Isentas ou Nao Trib. - Total
AADD(aStru076,{"A76_TOUTRA"	,"N",012,2})	//Outras - Total
AADD(aStru076,{"A76_OBS"	,"N",005,0})	//Observacao-Sequencia
//
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campo para geracao dos Regs 88SME e 88SMS³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru076,{"A76_CFOMOV","C",004,0})	//CFOP
//
cArq076	:=	CriaTrab(aStru076)
dbUseArea(.T.,__LocalDriver,cArq076,"R76")
IndRegua("R76",cArq076,"DTOS(A76_EMISS)")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 077 - Servicos de Comunicacao de Telecomunicacao                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru077,{"A77_CNPJ"	,"C",014,0})
AADD(aStru077,{"A77_MODELO"	,"C",002,0})
AADD(aStru077,{"A77_SERIE"	,"C",002,0})
AADD(aStru077,{"A77_SUBSER"	,"C",002,0})
AADD(aStru077,{"A77_NFISC"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru077,{"A77_CFOP"	,"C",004,0})
AADD(aStru077,{"A77_TIPREC"	,"C",001,0})
AADD(aStru077,{"A77_NUMITE"	,"C",003,0})
AADD(aStru077,{"A77_PRODUT"	,"C",011,0})
AADD(aStru077,{"A77_QUANT"	,"N",013,3})
AADD(aStru077,{"A77_VALPRO"	,"N",012,2})
AADD(aStru077,{"A77_VALDES"	,"N",012,2})
AADD(aStru077,{"A77_BSICM"	,"N",012,2})
AADD(aStru077,{"A77_ALQICM"	,"N",005,2})
AADD(aStru077,{"A77_CNPJMF"	,"C",014,0})
AADD(aStru077,{"A77_CODTER"	,"C",010,0})
AADD(aStru077,{"A77_CNORI"	,"C",014,0})	// CNPJ/CPF original, sem formatacao do meio magnetico
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campos referentes a SEF-PE                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru077,{"A77_IE"		,"C",014,0})
AADD(aStru077,{"A77_DTEMIS"	,"D",008,0})	//Dt. Emissao ou Recebimento
AADD(aStru077,{"A77_UF"		,"C",002,0})
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Campo para geracao dos Regs 88SME e 88SMS³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru077,{"A77_CFOMOV","C",004,0})	//CFOP
//
cArq077	:=	CriaTrab(aStru077)
dbUseArea(.T.,__LocalDriver,cArq077,"R77")
IndRegua("R77",cArq077,"A77_NFISC")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 085 - Informacoes de Exportacoes                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru085,{"A85_DECL"	,"C",020,0})
AADD(aStru085,{"A85_FILIAL"	,"C",TamSX3("F3_FILIAL")[1],0})
AADD(aStru085,{"A85_DTDECL"	,"D",008,0})
AADD(aStru085,{"A85_AVERBA"	,"C",001,0})
AADD(aStru085,{"A85_REGEX"	,"C",012,0})
AADD(aStru085,{"A85_DTREGX"	,"D",008,0})
AADD(aStru085,{"A85_CONHEC"	,"C",020,0})
AADD(aStru085,{"A85_DTCONH"	,"D",008,0})
AADD(aStru085,{"A85_TPCONH"	,"N",002,0})
AADD(aStru085,{"A85_PAIS"	,"C",004,0})
AADD(aStru085,{"A85_COMPRO"	,"C",012,0})
AADD(aStru085,{"A85_DTCOMP"	,"D",008,0})
AADD(aStru085,{"A85_NFEXP"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru085,{"A85_DTNF"	,"D",008,0})
AADD(aStru085,{"A85_MODEL"	,"C",002,0})
AADD(aStru085,{"A85_SERIE"	,"C",TamSX3("F2_SERIE")[1],0})
AADD(aStru085,{"A85_SDOC"	,"C",003,0})
//
cArq085	:=	CriaTrab(aStru085)
dbUseArea(.T.,__LocalDriver,cArq085,"R85")
IndRegua("R85",cArq085,"A85_DECL+A85_FILIAL+A85_NFEXP+A85_SERIE+A85_REGEX") // Adicionado A85_REGEX
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 086 - Informacoes Complementares de Exportacoes                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru086,{"A86_REGEXP"	,"C",012,0})
AADD(aStru086,{"A86_DTREG"	,"D",008,0})
AADD(aStru086,{"A86_CNPJ"	,"C",014,0})
AADD(aStru086,{"A86_IE"		,"C",014,0})
AADD(aStru086,{"A86_UF"		,"C",002,0})
AADD(aStru086,{"A86_NF"		,"C",TamSX3("F2_DOC")[1],0})
AADD(aStru086,{"A86_DATA"	,"D",008,0})
AADD(aStru086,{"A86_MODELO"	,"C",002,0})
AADD(aStru086,{"A86_SERIE"	,"C",TamSX3("F2_SERIE")[1],0})
AADD(aStru086,{"A86_SDOC"	,"C",003,0})
AADD(aStru086,{"A86_PROD"	,"C",014,0})
AADD(aStru086,{"A86_QUANT"	,"N",011,3})
AADD(aStru086,{"A86_UNIT"	,"N",012,2})
AADD(aStru086,{"A86_VALPR"	,"N",012,2})
AADD(aStru086,{"A86_RELAC"	,"N",001,0})
AADD(aStru086,{"A86_PRORI"	,"C",015,0})
//
cArq086	:=	CriaTrab(aStru086)
dbUseArea(.T.,__LocalDriver,cArq086,"R86")
IndRegua("R86",cArq086,"A86_REGEXP+A86_PROD+A86_NF+A86_SERIE")    

If Select("R88") == 0
	//
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Registro 088 - Detalhe GT (Polo Gas Quimico e Termogeracao de Energia Eletrica a Gas)³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AADD(aStru088,{"A88_TIPO"	,"N",002,0})
	AADD(aStru088,{"A88_SUBTIP" ,"C",002,0})
	AADD(aStru088,{"A88_TIPINF"	,"C",001,0})
	AADD(aStru088,{"A88_INSEST"	,"C",014,0})
	AADD(aStru088,{"A88_DTEMIS"	,"D",008,0})
	AADD(aStru088,{"A88_UF"	    ,"C",002,0})
	AADD(aStru088,{"A88_MODELO"	,"C",002,0})
	AADD(aStru088,{"A88_SERIE"	,"C",TamSX3("F2_SERIE")[1],0})
	AADD(aStru088,{"A88_NTFISC"	,"C",TamSX3("F2_DOC")[1],0})
	AADD(aStru088,{"A88_VALPRO"	,"N",013,2})
	AADD(aStru088,{"A88_VALICM"	,"N",013,2})
	AADD(aStru088,{"A88_DECLIM"	,"N",010,0})
	AADD(aStru088,{"A88_DTDI"	,"D",008,0})
	AADD(aStru088,{"A88_DESCPR"	,"C",043,0})
	AADD(aStru088,{"A88_SDOC"	,"C",002,0})
	//
	cArq088	:=	CriaTrab(aStru088)
	dbUseArea(.T.,__LocalDriver,cArq088,"R88")
	IndRegua("R88",cArq088,"A88_NTFISC+A88_SERIE")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 88DV - Informacoes registrados em Cupom Fiscal      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStruDV,{"DV_DTEMIS"	,"D",008,0})
AADD(aStruDV,{"DV_SERIE"	,"C",TamSX3("F2_SERIE")[1],0})
AADD(aStruDV,{"DV_SDOC"	,"C",003,0})
AADD(aStruDV,{"DV_NF"		,"C",TamSX3("F2_DOC")[1],0})
AADD(aStruDV,{"DV_COO"		,"C",TamSX3("F2_DOC")[1],0})
AADD(aStruDV,{"DV_DTEMCOO"	,"D",008,0})
AADD(aStruDV,{"DV_NUMITEM"	,"N",003,0})
AADD(aStruDV,{"DV_CODPROD"	,"C",014,0})
AADD(aStruDV,{"DV_QNTPROD"	,"N",013,3})
AADD(aStruDV,{"DV_SERECF"	,"C",020,0})
AADD(aStruDV,{"DV_CNPJ"	    ,"C",014,0})
AADD(aStruDV,{"DV_VUNIT"	,"N",012,2})
AADD(aStruDV,{"DV_VALBASE"	,"N",012,2})
AADD(aStruDV,{"DV_VALICMS"	,"N",012,2})
//
cArqDV	:=	CriaTrab(aStruDV)
dbUseArea(.T.,__LocalDriver,cArqDV,"RDV")
IndRegua("RDV",cArqDV,"DTOS(DV_DTEMIS)+DV_SERIE+DV_NF+DV_COO")  
//
aStruFRT :=	{}
AADD(aStruFRT,{"FRT_CNPJ"	,"C",014,0})
AADD(aStruFRT,{"FRT_MODELO"	,"C",002,0})
AADD(aStruFRT,{"FRT_SERIE"	,"C",TamSX3("F2_SERIE")[1],0})
AADD(aStruFRT,{"FRT_SDOC"	,"C",003,0})
AADD(aStruFRT,{"FRT_NFISC"	,"C",TamSX3("F2_DOC")[1],0})
AADD(aStruFRT,{"FRT_CFOP"	,"C",004,0})
AADD(aStruFRT,{"FRT_CST"	,"C",003,0})
AADD(aStruFRT,{"FRT_NUMITE"	,"C",003,0})
AADD(aStruFRT,{"FRT_DTEMI"	,"D",008,0})
AADD(aStruFRT,{"FRT_PRODUT"	,"C",Iif(l88STMG .And. Upper(ALLTRIM(MV_PAR03)) == "SINTMG05" .And. lGRegSt,060,014),0})
AADD(aStruFRT,{"FRT_PRDORI"	,"C",TamSX3("D2_COD")[1],0})
AADD(aStruFRT,{"FRT_QUANT"	,"N",014,3})
AADD(aStruFRT,{"FRT_VALPRO"	,"N",014,2})
AADD(aStruFRT,{"FRT_VALDES"	,"N",014,2})
AADD(aStruFRT,{"FRT_BSICM"	,"N",014,2})
AADD(aStruFRT,{"FRT_BRICMS"	,"N",014,2})
AADD(aStruFRT,{"FRT_ALQICM"	,"N",005,2})
AADD(aStruFRT,{"FRT_ALIQST"	,"N",005,2})
AADD(aStruFRT,{"FRT_VALIPI"	,"N",014,2})
AADD(aStruFRT,{"FRT_VALICM"	,"N",014,2})
AADD(aStruFRT,{"FRT_VALST"	,"N",014,2})
AADD(aStruFRT,{"FRT_MES"	,"L",001,0})
AADD(aStruFRT,{"FRT_CHVNFE","C",044,0})

//
cArqFRT	:=	CriaTrab(aStruFRT)
dbUseArea(.T.,__LocalDriver,cArqFRT,"FRT")
IndRegua("FRT",cArqFRT,"FRT_CNPJ+FRT_SERIE+FRT_NFISC+FRT_NUMITE")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Totalizador do Registro 61 - FUNCEP³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStruFUN,{"FUN_ICMS"	,"N",012,2})
AADD(aStruFUN,{"FUN_STSAI"	,"N",012,2})
//
cArqFUN	:=	CriaTrab(aStruFUN)
dbUseArea(.T.,__LocalDriver,cArqFUN,"FUN")
IndRegua("FUN",cArqFUN,"Str(FUN_ICMS,12,2)")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Arquivo do Registro tipo 90 - Totalizador do Arquivo                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru090,{"A90_REGS"	,"C",126,0})
//
cArq090	:=	CriaTrab(aStru090)
dbUseArea(.T.,__LocalDriver,cArq090,"R90")
IndRegua("R90",cArq090,"SUBSTR(A90_REGS,1,10)")
//
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³R18 Detalhe 18 - Informacoes Simples Nacional  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru8818,{"R18_DFALIQ"	,"N",09,2})
AADD(aStru8818,{"R18_ANTECI"	,"N",09,2})
AADD(aStru8818,{"R18_IMPORT "	,"N",09,2})
AADD(aStru8818,{"R18_ENTRAD"	,"N",12,2})
AADD(aStru8818,{"R18_FATURA"	,"N",09,2})
AADD(aStru8818,{"R18_PERSIM"	,"N",05,2})
AADD(aStru8818,{"R18_VALREC"	,"N",09,2})

cArq8818	:=	CriaTrab(aStru8818)
dbUseArea(.T.,__LocalDriver,cArq8818,"R18")
IndRegua("R18",cArq8818,"R18_DFALIQ+R18_ANTECI+R18_IMPORT+R18_ENTRAD+R18_FATURA+R18_PERSIM+R18_VALREC")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 88 27 - AQUISIÇÕES NAS OPERAÇÕES POR CONTRIBUINTES ATACADISTAS DE PRODUTOS FARMACÊUTICOS GIMPB06.INI ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru8827,{"R27_ALIQ"		,"N",13,2})
AADD(aStru8827,{"R27_BCINTE"	,"N",13,2})
AADD(aStru8827,{"R27_ALINTE"	,"N",13,2})
AADD(aStru8827,{"R27_VLINTE"	,"N",13,2})
AADD(aStru8827,{"R27_BCEXTE"	,"N",13,2})
AADD(aStru8827,{"R27_ALEXTE"	,"N",13,2})
AADD(aStru8827,{"R27_VLEXTE"	,"N",13,2})

cArq8827	:=	CriaTrab(aStru8827)
dbUseArea(.T.,__LocalDriver,cArq8827,"R27")
IndRegua("R27",cArq8827,"StrZero(R27_ALIQ,5,2)")
//
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 88 28 - SAÍDAS NAS OPERAÇÕES POR CONTRIBUINTES ATACADISTAS DE PRODUTOS FARMACÊUTICOS GIMPB06.INI ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru8828,{"R28_ALIQ" 		,"N",014,2})
AADD(aStru8828,{"R28_BCONIN"    ,"N",014,2})
AADD(aStru8828,{"R28_ACONIN"    ,"N",014,2})
AADD(aStru8828,{"R28_VCONIN"    ,"N",014,2})
AADD(aStru8828,{"R28_BNCOIN"    ,"N",014,2})
AADD(aStru8828,{"R28_ANCOIN"    ,"N",014,2})
AADD(aStru8828,{"R28_VNCOIN"    ,"N",014,2})
AADD(aStru8828,{"R28_BHOSIN"    ,"N",014,2})
AADD(aStru8828,{"R28_AHOSIN"    ,"N",014,2})
AADD(aStru8828,{"R28_VHOSIN"    ,"N",014,2})
AADD(aStru8828,{"R28_BASEEX"    ,"N",014,2})
AADD(aStru8828,{"R28_ALIQEX"    ,"N",014,2})
AADD(aStru8828,{"R28_VALREX"    ,"N",014,2})

cArq8828	:=	CriaTrab(aStru8828)
dbUseArea(.T.,__LocalDriver,cArq8828,"R28")
IndRegua("R28",cArq8828,"StrZero(R28_ALIQ,5,2)")
//
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 88 29 - INFORMACAO SOBRE VALORES AGREGADOS PARA O CALCULO DO VALOR ADICIONADO POR MUNICIPIO GIMPB06.INI ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStru8829,{"R29_CODMUN"	,"C",5,0})
AADD(aStru8829,{"R29_VLFATU"   ,"N",014,2})
cArq8829	:=	CriaTrab(aStru8829)
dbUseArea(.T.,__LocalDriver,cArq8829,"R29")
IndRegua("R29",cArq8829,"R29_CODMUN")
//
aTrbs	:=	{{cArq050,"R50"},{cArq051,"R51"},{cArq053,"R53"},{cArq054,"R54"},{cArq055,"R55"},;
{cArq060M,"M60"},{cArq060A,"A60"},{cArq060D,"D60"},{cArq060I,"I60"},{cArq060R,"R60"},{cArq8827,"R27"},{cArq8828,"R28"},{cArq8829,"R29"},;
{cArq061,"R61"},{cArq061I,"I61"},{cArq070,"R70"},{cArq071,"R71"},IIF(lGeraR74,{cArq074,"R74"},{"",""}),;
{cArq075,"R75"},{cArq076,"R76"},{cArq077,"R77"},{cArq088,"R88"},{cArq090,"R90"},{cArq056,"R56"},{cArq052,"R52"},;
{cArqFun,"FUN"},{cArqFRT,"FRT"},IIF(MV_PAR37==2,{cArqRST,"RST"},{"",""})}
//
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro 88 - CONTROLE DE INCENTIVOS FISCAIS  -  Mato Grosso do Sul ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aStruI88,{"I88_PRODUT"	,"C",TamSX3("B1_COD")[1],0})
AADD(aStruI88,{"I88_CFOP"   ,"C",TamSX3("D2_CF")[1],0})
AADD(aStruI88,{"I88_UF"	    ,"C",002,0})
AADD(aStruI88,{"I88_UM"	    ,"C",002,0})
AADD(aStruI88,{"I88_QUANT"	,"N",TamSX3("D2_QUANT")[1]+TamSX3("D2_QUANT")[1],TamSX3("D2_QUANT")[2]})
AADD(aStruI88,{"I88_VALTOT"	,"N",014,2})
AADD(aStruI88,{"I88_BSICM"	,"N",016,2})
AADD(aStruI88,{"I88_VALICM"	,"N",014,2})
AADD(aStruI88,{"I88_ALQICM"	,"N",005,2})
AADD(aStruI88,{"I88_INCFIS"	,"C",001,0})
//
cArqI88	:=	CriaTrab(aStruI88)
dbUseArea(.T.,__LocalDriver,cArqI88,"I88")
IndRegua("I88",cArqI88,"I88_PRODUT+I88_CFOP+I88_UF+I88_UM+Str(I88_ALQICM, 5, 2)")

Return (aTrbs)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao ³ Reg60Ord()  ºAutor³ Thiago Galvao Silveira º Data ³ 21/05/04  º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.  ³Gera um arquivo temporario com os dados do registro 60 M/A/D/I º±±
±±º       ³colocados na ordem pedida pelo Convenio 142/02                 º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso    ³ MATA940 - Funcao: Sintegra                                    º±±
±±ÈÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
function Reg60Ord()

Local aReg60   := {}
Local cArq60   := ""
Local dDtEmM   := ""
Local cNumFabM := ""
Local dDtEmA   := ""
Local cNumFabA := ""
Local dDtEmD   := ""
Local cNumFabD := ""
Local dDtEmI   := ""
Local cNumFabI := ""

AADD(aReg60,{"T60_TIPO"	    ,"C",002,0})
AADD(aReg60,{"T60_SUBTP"    ,"C",001,0})
AADD(aReg60,{"T60_EMISS"	,"D",008,0})
AADD(aReg60,{"T60_NUMFAB"   ,"C",020,0})
AADD(aReg60,{"T60_OUTROS"   ,"C",095,0})
AADD(aReg60,{"T60_SITTRI"	,"C",004,0})
AADD(aReg60,{"T60_VALOR"	,"N",014,2})
AADD(aReg60,{"T60_FUNCEP"	,"C",001,0})
AADD(aReg60,{"T60_CFOP"		,"C",004,2})
AADD(aReg60,{"T60_BSICM"	,"N",012,2})
AADD(aReg60,{"T60_BSST"		,"N",012,2})
cArq60 :=	CriaTrab(aReg60)
dbUseArea(.T.,__LocalDriver,cArq60,"T60")
DbSelectArea("M60")
DbGoTop()

While !Eof()
	  dDtEmM   := M60->M60_EMISS  
	  cNumFabM := M60->M60_NUMFAB	  
	  RecLock("T60",.T.)
	        T60->T60_TIPO    := "60"
	        T60->T60_SUBTP   := "M"
			T60->T60_EMISS   := dDtEmM
			T60->T60_NUMFAB  := AFISFILL(M60->M60_NUMFAB,20)
		    T60->T60_OUTROS  := AFISFILL(M60->M60_PDV,03)+"2D"+RetNf(M60->M60_NUMINI,6,"N")+RetNf(M60->M60_NUMFIM,6,"N")+AFISFill(StrZero(Val(M60->M60_REDUCZ),6),6)+STRZERO(M60->M60_CRO,3)+StrTran(STRZERO(M60->M60_VENDA,17,2),".","")+StrTran(STRZERO(M60->M60_GERAL,17,2),".","")+SPACE(37) 		
	  T60->(MsUnlock() )
	  DbSelectArea("A60")
      A60->(MsSeek(DTOS(dDtEmM)+cNumFabM))      
      dDtEmA   := A60->A60_EMISS  
	  cNumFabA := A60->A60_NUMFAB
      While dDtEmM==A60->A60_EMISS .AND. cNumFabM==A60->A60_NUMFAB
            RecLock("T60",.T.)
	           T60->T60_TIPO    := "60"
	           T60->T60_SUBTP   := "A"
      		   T60->T60_EMISS   := A60->A60_EMISS
        	   T60->T60_NUMFAB  := AFISFILL(A60->A60_NUMFAB,20)
       	   If Alltrim(MV_PAR03) == "SINTMS4A"
	       	   T60->T60_OUTROS  := AFISFILL(A60->A60_SITTRI,04)+StrTran(STRZERO(A60->A60_VALOR,13,2),".","")+SPACE(79)
       	   Else
      		   T60->T60_OUTROS  := AFISFILL(A60->A60_SITTRI,04)+StrTran(STRZERO(A60->A60_VALOR,13,2),".","")+SPACE(79)      		   
			   T60->T60_SITTRI	:= A60->A60_SITTRI
			   T60->T60_VALOR	:= A60->A60_VALOR                                                                       
		   EndIf		   		   	   
            T60->(MsUnlock())                                                                                                       
            DbSelectArea("A60")
            A60->(DbSkip())
	  EndDo      
	  If MV_PAR12 == 1
         DbSelectArea("D60")
	     DbSetOrder(2)
         D60->(MsSeek(DTOS(dDtEmA)+cNumFabA))
         dDtEmD   := D60->D60_EMISS  
   	     cNumFabD := D60->D60_NUMFAB	
         While dDtEmA==D60->D60_EMISS .AND. cNumFabA==D60->D60_NUMFAB	 .AND. dDtEmM==dDtEmA .AND. cNumFabM==cNumFabA
               RecLock("T60",.T.)
      	          T60->T60_TIPO    := "60"
   	              T60->T60_SUBTP   := "D"
         		  T60->T60_EMISS   := D60->D60_EMISS
        	      T60->T60_NUMFAB  := AFISFILL(D60->D60_NUMFAB,20)
      		      T60->T60_OUTROS  := AFISFILL(D60->D60_CODPRO,14)+StrTran(STRZERO(D60->D60_QUANT,14,3),".","")+StrTran(STRZERO(D60->D60_VALOR,17,2),".","")+StrTran(STRZERO(D60->D60_BSICM,17,2),".","")+AFISFILL(D60->D60_SITTRI,04)+StrTran(STRZERO(D60->D60_VLICM,14,2),".","")+SPACE(19)      		      
               T60->(MsUnlock())
               DbSelectArea("D60")            
               D60->(DbSkip())
         EndDo              
         If MV_PAR43 == 1        
         DbSelectArea("I60")
	     DbSetOrder(2)
         I60->(MsSeek(DTOS(dDtEmD)+cNumFabD))
         dDtEmI   := I60->I60_EMISS  
   	     cNumFabI := I60->I60_NUMFAB	
         While dDtEmI==I60->I60_EMISS .AND. cNumFabI==I60->I60_NUMFAB .AND. dDtEmA==dDtEmD .AND. cNumFabA==cNumFabD .AND. dDtEmM==dDtEmA .AND. cNumFabM==cNumFabA
               RecLock("T60",.T.)
      	          T60->T60_TIPO    := "60"
   	              T60->T60_SUBTP   := "I"
         		  T60->T60_EMISS   := I60->I60_EMISS
        	      T60->T60_NUMFAB  := AFISFILL(I60->I60_NUMFAB,20)
        	    If Alltrim(MV_PAR03) == "SINTMS4A"                                                                                                                                                                                                                                                                                               	
        	      T60->T60_OUTROS  := AFISFILL(I60->I60_MODELO,02)+RetNf(I60->I60_COO,6,"N")+AFISFILL(I60->I60_ITEM,03)+AFISFILL(I60->I60_CODPRO,14)+StrTran(STRZERO(I60->I60_QUANT,14,3),".","")+StrTran(STRZERO(I60->I60_VLUNI,14,2),".","")+StrTran(STRZERO(I60->I60_BSICM,13,2),".","")+AFISFILL(I60->I60_SITTRI,04)+StrTran(STRZERO(I60->I60_VLICM,13,2),".","")+SPACE(16)
        	    Else	
      		      T60->T60_OUTROS  := AFISFILL(I60->I60_MODELO,02)+RetNf(I60->I60_COO,6,"N")+AFISFILL(I60->I60_ITEM,03)+AFISFILL(I60->I60_CODPRO,14)+StrTran(STRZERO(I60->I60_QUANT,14,3),".","")+StrTran(STRZERO(I60->I60_VLUNI,14,2),".","")+StrTran(STRZERO(I60->I60_BSICM,13,2),".","")+AFISFILL(I60->I60_SITTRI,04)+StrTran(STRZERO(I60->I60_VLICM,13,2),".","")+SPACE(16)
 				  T60->T60_FUNCEP  := I60->I60_FUNCEP
 				  T60->T60_CFOP    := I60->I60_CFOP
				  T60->T60_BSICM   := I60->I60_BSICM
				  T60->T60_BSST    := I60->I60_BSST
				EndIf 
               T60->(MsUnlock())
               DbSelectArea("I60")            
               I60->(DbSkip())
         EndDo
      EndIf   
	  Endif 
	  If MV_PAR12 == 2 .AND. MV_PAR43 == 1
         DbSelectArea("I60")
	     DbSetOrder(2)
         I60->(MsSeek(DTOS(dDtEmA)+cNumFabA))
         dDtEmI   := I60->I60_EMISS  
   	     cNumFabI := I60->I60_NUMFAB	
         While dDtEmA==I60->I60_EMISS .AND. cNumFabA==I60->I60_NUMFAB	 .AND. dDtEmM==dDtEmA .AND. cNumFabM==cNumFabA
               RecLock("T60",.T.)
      	          T60->T60_TIPO    := "60"
   	              T60->T60_SUBTP   := "I"
         		  T60->T60_EMISS   := I60->I60_EMISS
        	      T60->T60_NUMFAB  := AFISFILL(I60->I60_NUMFAB,20)
        	    If Alltrim(MV_PAR03) == "SINTMS4A"
        	      T60->T60_OUTROS  := AFISFILL(I60->I60_MODELO,02)+RetNf(I60->I60_COO,6,"N")+AFISFILL(I60->I60_ITEM,03)+AFISFILL(I60->I60_CODPRO,14)+StrTran(STRZERO(I60->I60_QUANT,14,3),".","")+StrTran(STRZERO(I60->I60_VLUNI,13,3),".","")+StrTran(STRZERO(I60->I60_BSICM,12,2),".","")+AFISFILL(I60->I60_SITTRI,04)+StrTran(STRZERO(I60->I60_VLICM,12,0),".","")+SPACE(16)
        	    Else	
      		      T60->T60_OUTROS  := AFISFILL(I60->I60_MODELO,02)+RetNf(I60->I60_COO,6,"N")+AFISFILL(I60->I60_ITEM,03)+AFISFILL(I60->I60_CODPRO,14)+StrTran(STRZERO(I60->I60_QUANT,14,3),".","")+StrTran(STRZERO(I60->I60_VLUNI,14,2),".","")+StrTran(STRZERO(I60->I60_BSICM,13,2),".","")+AFISFILL(I60->I60_SITTRI,04)+StrTran(STRZERO(I60->I60_VLICM,13,2),".","")+SPACE(16)
 				  T60->T60_FUNCEP  := I60->I60_FUNCEP
 				  T60->T60_CFOP    := I60->I60_CFOP
				  T60->T60_BSICM   := I60->I60_BSICM
				  T60->T60_BSST    := I60->I60_BSST
				EndIf
               T60->(MsUnlock())
               DbSelectArea("I60")            
               I60->(DbSkip())
         EndDo
      EndIf   	     
      DbSelectArea("M60")	  	    
      M60->(DbSkip())
EndDo  

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³M940RExp      ºAutor  ³Mary C. Hergert     º Data ³ 27/10/2004  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Processa o relacionamento entre o Registro de Exportacao e a    º±±
±±º          ³Nota Fiscal com fim especifico.                                 º±±
±±º          ³-> Quantos registros de exportacao para cada nota fiscal:       º±±
±±º          ³   - 1:1 Um Registro de Exportacao para uma Nota Fiscal         º±±
±±º          ³   - 1:N Um Registro de Exportacao para mais de uma Nota Fiscal º±±
±±º          ³   - N:1 Mais de um Registro de Exportacao para uma Nota Fiscal º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Mata940                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function M940RExp()

	Local aStruREG 	:= {}
	Local cArqREG	:= ""
	Local aStruNF 	:= {}
	Local cArqNF	:= ""  
	Local nContReg	:= 0
	Local nContNF	:= 0
	Local aTemps	:= {}
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tabelas Temporarias para controle dos registros                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AADD(aStruREG,{"REG_REGEXP"	,"C",012,0})
	AADD(aStruREG,{"REG_NF"		,"C",TamSX3("F2_DOC")[1],0})
	//
	cArqREG := CriaTrab(aStruREG)
	dbUseArea(.T.,__LocalDriver,cArqREG,"REG")
	IndRegua("REG",cArqREG,"REG_REGEXP")
	
	AADD(aStruNF,{"NF_REGEXP"	,"C",012,0})
	AADD(aStruNF,{"NF_NF"		,"C",TamSX3("F2_DOC")[1],0})
	//
	cArqNF := CriaTrab(aStruNF)
	dbUseArea(.T.,__LocalDriver,cArqNF,"NF")
	IndRegua("NF",cArqNF,"NF_NF")

    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Carrega informacoes na tabela de conferencia³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    REG->(dbSetOrder(1))
	NF->(dbSetOrder(1))
    R86->(dbSetOrder(1))
	R86->(dbGoTop()) 
	Do While ! R86->(Eof())
		If ! REG->(dbSeek(R86->A86_REGEXP)) .Or. REG->REG_NF <> R86->A86_NF
			RecLock("REG",.T.)
	    	REG->REG_REGEXP	:= R86->A86_REGEXP
	    	REG->REG_NF		:= R86->A86_NF
	    	REG->(MsUnLock())
		Endif         
		If ! NF->(dbSeek(R86->A86_NF)) .Or. NF->NF_REGEXP <> R86->A86_NF
			RecLock("NF",.T.)
	    	NF->NF_REGEXP	:= NF->NF_REGEXP
	    	NF->NF_NF		:= NF->NF_NF
	    	NF->(MsUnLock())
		Endif
		R86->(dbSkip())
	Enddo	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica o numero de notas fiscais por registro de exportacao³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	REG->(dbSetOrder(1))
	R86->(dbGoTop()) 
	Do While ! R86->(Eof())
        
		// Controle por registro de exportacao
		nContReg := 0
		REG->(dbSeek(R86->A86_REGEXP))
		Do While ! REG->(Eof()) .And. R86->A86_REGEXP == REG->REG_REGEXP
			nContReg += 1
			If nContReg > 1
				Exit
			Endif 
			REG->(dbSkip())
		Enddo          
		
		// Controle por nota fiscal
		nContNF := 0
		NF->(dbSeek(R86->A86_NF))
		Do While ! NF->(Eof()) .And. R86->A86_NF == NF->NF_NF
			nContNF += 1
			If nContNF > 1
				Exit
			Endif         
			NF->(dbSkip())
		Enddo          
        
        // Mais de uma nota para o mesmo registro de exportacao
        If nContNF > 1
        	nContReg := 3
        Endif
        
        // Grava o relacionamento 
        RecLock("R86",.F.)     
        Do Case
        Case nContReg == 1
			R86->A86_RELAC := 0
		Case nContReg == 2
			R86->A86_RELAC := 1
		Case nContReg == 3
			R86->A86_RELAC := 2
		EndCase
        R86->(MsUnLock())
        
		R86->(dbSkip())
	Enddo

	aTemps	:=	{{cArqREG,"REG"},{cArqNF,"NF"}}

Return(aTemps)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao ³CSTCompl     ºAutor  ³ Gustavo G. Rueda   º Data ³  17/05/05   º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.  ³Funcao utilizada para retornar o Situacao tributaria para NFs  º±±
±±º       ³ de complemento.                                               º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParam. ³dDtIni -> Data inicial, um dos casos que deve retornar 000.    º±±
±±ºParam. ³lSef -> Flag da SEF, um dos casos que deve retornar 000.       º±±
±±ºParam. ³lValidaPr -> Flag do validapr, um dos casos que deve retornar 000.º±±
±±ºParam. ³nI -> Indica se trata-se dos registros complementares (1 a 4)  º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno³cRet -> aTrbs - Array contendo alias abertos pela funcao       º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso    ³ MATA940 - Funcao: Sintegra                                    º±±
±±ÈÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CSTCompl (dDtIni, lSef, lValidaPr , nI )
	Local	cRet	:=	""
	Default	nI		:=	0
	//
	If (lSef .or. YEAR(dDtini)<=2003 .Or. lValidaPr)
		cRet	:=	"000"
	Elseif nI >= 1 .And. nI <= 4
		cRet	:=	"   "
	Else
		cRet	:= Iif (Empty(SF4->F4_CSOSN),"000",SF4->F4_CSOSN) 
	EndIf
Return (cRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ImporSWN  ºAutor  ³Microsiga           º Data ³  06/01/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Tratamento para os itens de importacao da tabela SWN        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ImporSWN(cAliasSd1, cCNPJ, cSitTrib, cCNPJOri, cIe, cTranspEst, aRetCfp, cFuncep,;
	dDTIni, dDTFim, cProd, cNcm, nAliqICM, nBRetido, nRedBase, aArrayF3, cAliasSF3, lSef, lImpSt,;
	lGimPB, nItem, cContrTare, lSintMS, cDescPe, lPMen15, lPMai14, cIncFis, nIncFis)
	//
	Local aProdepe	:= {}
	Local aAreaSb1	:= {}
	Local lAglR54	:= SuperGetMv("MV_AGLR54")
	Local cNcmSWN   := ""
	Local cProdSWN  := ""
	Local nTamTEC	:= TamSX3("WN_TEC")[01]
	Local cChave	:= ""
	Local lValidaPr	:= .F.

	Default lPMen15	:= .F.
	Default lPMai14	:= .F.
	Default nAliqICM:= 0

	dbSelectArea("SWN")
	dbSetOrder(1)
	SWN->(DbSeek(xFilial('SWN')+(cAliasSD1)->D1_DOC+(cAliasSD1)->D1_SERIE+Left((cAliasSD1)->D1_TEC,nTamTEC),.F.))
	cChave := xFilial('SWN')+(cAliasSD1)->D1_DOC+(cAliasSD1)->D1_SERIE+Left((cAliasSD1)->D1_TEC,nTamTEC)
	While !SWN->(Eof ()) .And.;
		SWN->WN_FILIAL+SWN->WN_DOC+SWN->WN_SERIE+SWN->WN_TEC == cChave
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³While de verificacao para gerar o registro 54 e 75 com o SIGAEIC.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SWN->WN_ITEM+SWN->WN_PRODUTO+SWN->WN_PO_NUM <> (cAliasSD1)->D1_ITEMPC+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_PEDIDO
			SWN->(DbSkip())
			Loop
		EndIf
		//
		aAreaSb1 := SB1->(GetArea ())
		SB1->(DbSeek (xFilial ("SB1")+SWN->WN_PRODUTO))
		A940LoadPro ("E",@cNcmSWN,@cProdSWN,(cAliasSD1)->D1_TEC,,,@lPMen15,@lPMai14)
		If (lAglR54 .And. !R54->(MsSeek (cCNPJ+(cAliasSD1)->D1_SERIE+(cAliasSD1)->D1_DOC+cProdSWN+Str (aArrayF3[1][8], 5, 2)))) .Or. !(lAglR54)
			RecLock("R54",.T.)
				R54->A54_CTARE	:=	cContrTare
				R54->A54_CNPJ	:=	cCNPJ
				R54->A54_MODELO	:=	AModNot(aArrayF3[1][7])
				R54->A54_SERIE 	:=	(cAliasSD1)->D1_SERIE
				R54->A54_SDOC 	:=	SerieNfId(cAliasSD1,2,"D1_SERIE")
				R54->A54_NFISC 	:=	(cAliasSD1)->D1_DOC
				R54->A54_CFOP	:=	(cAliasSD1)->D1_CF
				If Substr(aArrayF3[1][5],1,1) >= "5"
					If   lSimpNac .And. SA1->A1_SIMPNAC$"1"
						R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr)
					Else
						R54->A54_CST := "000"
					Endif
				Endif
				If Substr(aArrayF3[1][5],1,1) < "5"
					If SA2->A2_SIMPNAC$"1" .And. SF4->F4_CSOSN<>""
						R54->A54_CST := CSTCompl(dDtIni, lSef, lValidaPr)
					Else
						R54->A54_CST := cSitTrib
					Endif
				Endif
				R54->A54_NUMITE	:=	StrZero(nItem,3)
				R54->A54_PRODUT	:=	cProdSWN
				R54->A54_PRORI	:=	SWN->WN_PRODUTO
				R54->A54_CNORI  :=	cCNPJOri
				R54->A54_ALQICM	:=	aArrayF3[1][8]
				R54->A54_FILIAL	:= IIF (lModoComp ,"",FWCodFil())
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Implementacao do SEF PE                           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				R54->A54_IE	  	:= 	cIE
				R54->A54_EMISS	:= 	SF1->F1_DTDIGIT
				R54->A54_UF 	:= 	cTranspEst
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Implementacao do PRODEPE                          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lSef .And. Val(aRetCfp[19][1]) == 1		//Industria
					aProdepe 		:= Prodepe(SB1->B1_COD,cAliasSF3)
					R54->A54_APUR	:= aProdepe[1]			//Codigo da Apuracao
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Implementacao do FUNCEP/PB³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lGimPB
					R54->A54_FUNCEP := cFuncep
					R54->A54_ICMDIF := 0
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Campos da data de emissao e entrada/saida para o Sintegra - MG³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				R54->A54_DTEMI := (cAliasSD1)->D1_EMISSAO
				R54->A54_DTSAI := (cAliasSD1)->D1_DTDIGIT
		Else
			RecLock("R54",.F.)
		EndIf
				R54->A54_QUANT 	+=	SWN->WN_QUANT
				R54->A54_VALPRO	+=	SWN->WN_VALOR
				R54->A54_VALDES	+=	0
				R54->A54_VALICM	+=	SWN->WN_VALICM
				R54->A54_ICMRET	+=	0

				If Posicione("SF4",1,xFilial("SF4")+(cAliasSD1)->D1_TES,"F4_LFICM")$"IONZ" .And. Alltrim((cAliasSD1)->D1_CF)$"1556/2556/3556/197"
					R54->A54_BSICM += 0
				Else
					R54->A54_BSICM += SWN->WN_BASEICM
				Endif

				R54->A54_VALIPI += SWN->WN_VALIPI

				//Cliente MMX que necessitar utilizar ao inves da SB5 a SF4
				If lSintMS .And. Left(cIncFis,2)=="F4" .And. nIncFis>0
					Posicione("SF4",1,xFilial("SF4")+(cAliasSD1)->D1_TES,"F4_LFICM")
					R54->A54_INCFIS := SF4->(FieldGet(nIncFis))
				EndIf
			nPosic := ASCAN(aArrayF3,{|x|x[5]==(cAliasSD1)->D1_CF .And. x[8]==(cAliasSD1)->D1_PICM })
			If nPosic > 0
				If  (Left(aArrayF3[nPosic][05],1)<"5" .AND. aArrayF3[nPosic][11] > 0 .AND. SF4->F4_CREDST == '2') .Or. (aArrayF3[nPosic][11] > 0 .AND. SF4->F4_CREDST == '4')
					R54->A54_ALQICM := 0
				EndIf
			EndIf

		R54->(MsUnlock())

		//Sintegra do MS precisa agrupar os Registros 8801 e 8802
		//Conforme Manual de Integração (esses registros devem ser agrupados por CFOP e Operação (Entrada/Saida))
		//Porém existem campos como UF/ UM / PRODUTO/ CFOP e ALIQUOTA que nao podem ser agrupados
		If !I88->(MsSeek (SB1->B1_COD+(cAliasSD1)->D1_CF+cTranspEst+SB1->B1_UM+Str ((cAliasSD1)->D1_PICM, 5, 2)))
			RecLock("I88",.T.)
			I88->I88_PRODUT		:= SB1->B1_COD
			I88->I88_CFOP		:= (cAliasSD1)->D1_CF
			I88->I88_UF			:= cTranspEst
			I88->I88_UM			:= SB1->B1_UM
			I88->I88_ALQICM		:= (cAliasSD1)->D1_PICM
		Else
			RecLock("I88",.F.)
		EndIf
			I88->I88_QUANT		+= SWN->WN_QUANT
			I88->I88_VALTOT		+= SWN->WN_VALOR
			I88->I88_BSICM		+= SWN->WN_BASEICM
			I88->I88_VALICM		+= SWN->WN_VALICM
		//Cliente MMX que necessitar utilizar ao inves da SB5 a SF4
		If Left(cIncFis,2)=="F4" .And. nIncFis>0
			I88->I88_INCFIS := SF4->(FieldGet(nIncFis))
		EndIf
		I88->(MsUnLock())
		//
		If !R75->(dbSeek (DTOS(dDTIni)+DTOS(dDTFim)+cProdSWN)) .AND. !(AllTrim(R54->A54_CFOP) $cCfoNEcf )
			RecLock("R75",.T.)
			R75->A75_CTARE	:= cContrTare
			R75->A75_DTAINI	:= dDTIni
			R75->A75_DTAFIM	:= dDTFim
			R75->A75_PROD	:= cProdSWN
			R75->A75_PRORI	:= SB1->B1_COD
			R75->A75_CODNCM	:= cNcm
			R75->A75_DESCR	:= SB1->B1_DESC
			R75->A75_UM    	:= SB1->B1_UM
			R75->A75_ALQIPI := SB1->B1_IPI
			R75->A75_ALQICM := RetAliqICM(nAliqICM)
			R75->A75_BRICMS := nBRetido //Base do Retido
			R75->A75_SITTRI := cSitTrib
			R75->A75_REDBSE := nRedBase //Reducao da Base do ICMS
			R75->A75_CODBAR := SB1->B1_CODBAR
			R75->A75_FILIAL := IIF (lModoComp ,"",FWCodFil())
			R75->A75_VEREAN := SB1->B1_VEREAN
			R75->(MsUnlock())
		Endif
		//
		nItem++
		RestArea(aAreaSb1)
		SWN->(DbSkip())
	EndDo
	nItem--
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MTA940EXP ºAutor  ³Mary C. Hergert     º Data ³ 26/07/2005  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Gera os registros 85 e 86 de Exportacao                     º±±
±±º          ³Apenas para empresas com integracao SIGAEIC/SIGAEEC         º±±
±±º          ³Apenas os movimentos com averbacao no periodo devem         º±±
±±º          ³ser apresentados, independente dos Registros 50/54.         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³MATA940                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MTA940EXP(dDtIni,dDtFim,lCONV76,cEstDest,lListEst,lPMen15,lPMai14)

	Local lQuery		:= .F.
	Local lGrava		:= .T.
	
	Local cAliasEE9		:= "EE9"
	Local cPreemb 		:= ""
	Local cNF			:= ""
	Local cSerie		:= ""	
	Local cSerieView		:= ""	
	Local cChave8586	:= ""
	Local cNcm			:= ""
	Local cProd			:= ""
	Local cDescPe   	:= ""
	Local cSitTrib 		:= ""
	Local cSeek 		:= ""
	Local cAverba      	:= ""
	Local cForn			:= ""
		
	Local nTpConhe	:= SuperGetMv("MV_TPCONHE")
	Local nAliqICM	:= 0
	Local nRedBase 	:= 0
	Local cNumDecl	:=	""
	Local cContrTare:=	"2"
	Local cNrConh	:= SuperGetMv("MV_NRCONH")
	Local cFilMsFil := ""
	
	Local aNFVinc	:= {}  //vai receber as NFs Entrada Vinculadas (tab. EYY AVERAGE.Gravacao Reg.86))
	Local I
	Local lDataExp  := GetNewPar("MV_DATAEXP",.F.)
	Local cDataExp  := ""

	#IFDEF TOP
		Local aStruEE9	:= {}
		Local cQuery 	:= ""
		Local nX	 	:= 0
	#ELSE
		Local cIndex	:= ""
		Local cCondicao := ""
		Local nIndex 	:= 0 
	#ENDIF
	
	Default	lPMen15	:=	.F.
	Default	lPMai14	:=	.F.

	dbSelectArea("EE9")
	dbSetOrder(1)
	#IFDEF TOP
		If TcSrvType()<>"AS/400"
			lQuery 		:= .T.
			cAliasEE9 	:= "EE9_SINTEGRA"
			aStruEE9  	:= EE9->(dbStruct())
			If FWModeAccess("EE9",3)=="C" .And. EE9->(FieldPos("EE9_MSFIL")) > 0			
				cQuery := "SELECT EE9_MSFIL,"
			Else	
				cQuery := "SELECT EE9_FILIAL,"
			EndIf

			cQuery += "EE9_PREEMB,EE9_PEDIDO,EE9_DTAVRB,EE9_NRSD,EE9_RE,EE9_DTRE,EE9_NF,EE9_SERIE,EE9_COD_I,EE9_DTDDE,EE9_FORN"

			If !Empty(cNrConh) .And. EE9->(FieldPos(cNrConh)) > 0
				cQuery += ","+Upper(cNrConh)
			Endif
			cQuery += " FROM "+RetSqlName("EE9")+" "

			If FWModeAccess("EE9",3)=="C" .And. EE9->(FieldPos("EE9_MSFIL")) > 0
				cQuery += "WHERE EE9_MSFIL='"+cFilAnt+"' AND "
			Else	
				cQuery += "WHERE EE9_FILIAL='"+xFilial("EE9")+"' AND "
			EndIf

			cQuery += "EE9_DTAVRB>='"+Dtos(dDtIni)+"' AND "
			cQuery += "EE9_DTAVRB<='"+Dtos(dDtFim)+"' AND "	
			cQuery += "D_E_L_E_T_ = ' ' "
			cQuery += "ORDER BY "+SqlOrder(EE9->(IndexKey()))

			cQuery := ChangeQuery(cQuery)
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasEE9)

			For nX := 1 To len(aStruEE9)
				If aStruEE9[nX][2] <> "C" 
					TcSetField(cAliasEE9,aStruEE9[nX][1],aStruEE9[nX][2],aStruEE9[nX][3],aStruEE9[nX][4])
				EndIf
			Next nX
			dbSelectArea(cAliasEE9)	
		Else

	#ENDIF
		    cIndex    := CriaTrab(NIL,.F.)
		    cCondicao := 'EE9_FILIAL=="'+xFilial("EE9")+'".And.'
		   	cCondicao += 'DTOS(EE9_DTAVRB)>="'+DTOS(dDtIni)+'".And.DTOS(EE9_DTAVRB)<="'+DTOS(dDtFim)+'" '
		    IndRegua(cAliasEE9,cIndex,EE9->(IndexKey()),,cCondicao)
		    nIndex := RetIndex("EE9")
			#IFNDEF TOP
				dbSetIndex(cIndex+OrdBagExt())
			#ENDIF
			dbSelectArea("EE9")
		    dbSetOrder(nIndex+1)
		    dbSelectArea(cAliasEE9)
		    dbGoTop()
	#IFDEF TOP
		Endif
	#ENDIF

	ProcRegua(LastRec())

	SD2->(dbSetOrder(3))
	EEC->(dbSetOrder(1))
	SYA->(dbSetOrder(1))
	EE7->(dbSetOrder(1))
	SA2->(dbSetOrder(1))
	SYQ->(dbSetOrder(1))
	SF3->(dbSetOrder(4))

	Do While !(cAliasEE9)->(Eof())

		IncProc(STR0046) //"Selecionando Registros de Exportação"

		If (cAliasEE9)->EE9_PREEMB <> cPreemb .Or. (cAliasEE9)->EE9_NF <> cNF .Or. ;
		   (cAliasEE9)->EE9_SERIE <> cSerie  .Or. (cAliasEE9)->EE9_COD_I <> cProduto .Or. cForn <> (cAliasEE9)->EE9_FORN 

			lGrava		:= .T.
			cPreemb 	:= (cAliasEE9)->EE9_PREEMB
			cNF			:= (cAliasEE9)->EE9_NF
			cSerie		:= (cAliasEE9)->EE9_SERIE
			cSerieView	:= SerieNfId(cAliasEE9,2,"EE9_SERIE")
			cProduto	:= (cAliasEE9)->EE9_COD_I
			cForn		:= (cAliasEE9)->EE9_FORN

			cChave8586  := Iif(EE9->(FieldPos("EE9_MSFIL"))>0,(cAliasEE9)->EE9_MSFIL,xFilial("SF2"))+cNF+cSerie

			If (EEC->(dbSeek(xFilial("EEC")+(cAliasEE9)->EE9_PREEMB))) .And.;
				(SYA->(dbSeek(xFilial("SYA")+EEC->EEC_PAISDT))) .And.;
				(EE7->(dbSeek(xFilial("EE7")+(cAliasEE9)->EE9_PEDIDO))) .And.;
				(SA2->(dbSeek(xFilial("SA2")+EE7->EE7_FORN+EE7->EE7_FOLOJA)))
				// O contribuinte produtor/industrial/fabricante fica armazenado no EE7
				// Portanto, CNPJ/IE/UF serao pesquisados no SA2, como referencia.
				
				dbSelectArea("SF2")
				dbSetOrder(1)
				If SF2->(dbSeek(cChave8586))
			
					If SF3->(dbSeek(xFilial("SF3")+SF2->(F2_CLIENTE+F2_LOJA+F2_DOC+F2_SERIE)))
					
						If !Empty(cEstDest)		//UF Origem/Destino
							If lListEst			//Somente UF
								If SF3->F3_ESTADO <> Upper(cEstDest)
									lGrava := .F.
								Endif
							Else
								If SF3->F3_ESTADO == Upper(cEstDest) // Exceto UF
									lGrava := .F.
								Else 
									lGrava := .T.
								Endif
							Endif
						Endif

						// ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
						//³Apenas um registro por Declaracao de Exportacao³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

						cNumDecl := aRetDig((cAliasEE9)->EE9_NRSD,.F.)
						cNumDecl += SPACE(20-Len(cNumDecl))
						//---------------------------------------------------------------------
		    			//  Alterado criterio para verificacao se eh Exportacao DIRETA/INDIRETA    
		                //  Orientacao : AVERAGE
		                //---------------------------------------------------------------------
		                //  Caso haja NF's Vinculadas (registro na tabela EYY) -->EXPORT.DIRETA
		                //  Caso contrario --> EXPORT.INDIRETA.                                                                       
		                //---------------------------------------------------------------------              
		                                                
						If GetNewPar("MV_POSVINC",.F.)     // UNICAFE
						     aNFVinc := AvRetNfEnt(xFilial("EYY"),(cAliasEE9)->EE9_PREEMB,(cAliasEE9)->EE9_RE,cNF,cSerie)
						     If Len(aNFVinc) > 0
						     aadd(Atail(aNFVinc),cForn)
						     EndIf
						else
							If FWModeAccess("EE9",3)=="C" .And. EE9->(FieldPos("EE9_MSFIL")) > 0
								cFilMsFil := (cAliasEE9)->EE9_MSFIL
							Else
								cFilMsFil := (cAliasEE9)->EE9_FILIAL
							EndIf
							aNFVinc := AvRetNfEnt(cFilMsFil,(cAliasEE9)->EE9_PREEMB,(cAliasEE9)->EE9_RE,cNF,cSerie)
						Endif
						
						If len(aNFVinc)==0  // Segundo Average --> Export. INDIRETA
							If dDtFim < Ctod("01/07/05")		//CONVENIO CONFAZ 15/2005
								cAverba := "S"
							Else
								cAverba := "1"
							Endif
						Else                // Export. DIRETA
							If dDtFim < Ctod("01/07/05")	//CONVENIO CONFAZ 15/2005
								cAverba := "N"
							Else
								cAverba := "2"
							Endif	
						Endif
						If lDataExp
							cDataExp := (cAliasEE9)->EE9_DTDDE
						Else
							cDataExp := (cAliasEE9)->EE9_DTAVRB
						Endif

						R85->(dbSetOrder(1))
						If !R85->(dbSeek(cNumDecl+cFilAnt+cNF+cSerie+(cAliasEE9)->EE9_RE)) .And. lGrava // adicionado (cAliasEE9)->EE9_RE) para gerar R85 para notas exportação indireta, conforme quantidade de RE
							RecLock("R85",.T.)
							R85->A85_DECL	:= cNumDecl
							R85->A85_DTDECL	:= cDataExp
							R85->A85_AVERBA	:= cAverba
							R85->A85_REGEX	:= CVALTOCHAR((cAliasEE9)->EE9_RE)
							R85->A85_DTREGX	:= (cAliasEE9)->EE9_DTRE
							R85->A85_CONHEC	:= EEC->EEC_NRCONH
							If !Empty(cNrConh) .And. (cAliasEE9)->(FieldPos(cNrConh)) > 0 .And. !Empty((cAliasEE9)->&(cNrConh))
								R85->A85_CONHEC	:= (cAliasEE9)->&(cNrConh)
							Endif
							R85->A85_DTCONH	:= EEC->EEC_DTCONH
							R85->A85_TPCONH	:= nTpConhe
							If SYQ->(dbSeek(xFilial("SYQ")+EEC->EEC_VIA))
								R85->A85_TPCONH	:= Val(SYQ->YQ_TDC)
							Endif
							R85->A85_PAIS	:= SYA->YA_SISEXP
							//
							R85->A85_COMPRO	:= ""	//CONVENIO CONFAZ 15/2005
							//
							R85->A85_DTCOMP	:= (cAliasEE9)->EE9_DTAVRB	//CONVENIO CONFAZ 15/2005
							//
							R85->A85_FILIAL	:= cFilAnt
							R85->A85_NFEXP	:= cNF
							R85->A85_DTNF	:= SF2->F2_EMISSAO
							R85->A85_MODEL	:= AModNot(SF3->F3_ESPECIE)
							R85->A85_SERIE	:= cSerie
							R85->A85_SDOC	:= cSerieView
							R85->(MsUnLock())
						Endif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Este registro sera gerado somente quando a exportacao for indireta.³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						For I:=1 To Len(aNFVinc)

							If Len(aNFVinc)<>0 .And. !R86->(dbSeek((cAliasEE9)->EE9_RE+(cAliasEE9)->EE9_COD_I+aNFVinc[I,1]+aNFVinc[I,2]+aNFVinc[I,3]))

								dbSelectArea("SF3")
								dbSetOrder(4)
								dbSeek(xFilial("SF3")+aNFVinc[I,3]+aNFVinc[I,4]+aNFVinc[I,1]+aNFVinc[I,2])

								dbSelectArea("SD1")
								dbSetOrder(2)
								dbSeek(xFilial("SD1")+(cAliasEE9)->EE9_COD_I+aNFVinc[I,1]+aNFVinc[I,2])

								While !SD1->(Eof()) .And. lGrava .And. SD1->(D1_COD+D1_DOC+D1_SERIE+D1_FORNECE)==(cAliasEE9)->EE9_COD_I+aNFVinc[I,1]+aNFVinc[I,2]+aNFVinc[I,3] // Adicionado lgrava
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³Verifica se sera apresentado o codigo do produto ou o NCM - maior que 14 posicoes³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									SB1->(MsSeek(F3Filial("SB1","SF3")+SD1->D1_COD))
									A940LoadPro("E",@cNcm,@cProd,,,,@lPMen15,@lPMai14)

									R86->(dbSetOrder(1))
									If !R86->(dbSeek((cAliasEE9)->EE9_RE+cProd+SD1->(D1_DOC+D1_SERIE))) .And. lGrava //cProd para evitar duplicidade.

										RecLock("R86",.T.)
										R86->A86_REGEXP	:= (cAliasEE9)->EE9_RE
										R86->A86_DTREG	:= (cAliasEE9)->EE9_DTRE

										dbselectarea("SA2")
										dbSetOrder(1)
										dbSeek(xfilial("SA2")+SD1->D1_FORNECE+SD1->D1_LOJA)

										cContrTare := SA2->A2_CTARE

										R86->A86_CNPJ	:= SA2->A2_CGC
										R86->A86_IE		:= A940IE(SA2->A2_INSCR)
										R86->A86_UF		:= SA2->A2_EST
										R86->A86_NF		:= SD1->D1_DOC
										R86->A86_DATA	:= SD1->D1_EMISSAO
										R86->A86_MODELO	:= AModNot(SF3->F3_ESPECIE)
										R86->A86_SERIE	:= SD1->D1_SERIE
										R86->A86_SDOC	:= SerieNfId("SD1",2,"D1_SERIE")
										R86->A86_PROD	:= cProd
										R86->A86_QUANT	:= SD1->D1_QUANT
										R86->A86_UNIT	:= SD1->D1_VUNIT
										R86->A86_VALPR	:= SD1->D1_TOTAL
										R86->A86_PRORI	:= SD1->D1_COD
										R86->(MsUnLock())
									Endif

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³Grava o Registro 75 de acordo com cada item do registro 86³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									nAliqICM := SuperGETMV("MV_ICMPAD")

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³Verifica o TES utilizado no documento³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									SF4->(MsSeek(F3Filial("SF4","SF3")+SD2->D2_TES))

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³Situacao Tributaria ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									If Empty(SD2->D2_CLASFIS)
										cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB),3,0),3)
									Else
										cSitTrib := Alltrim(SD2->D2_CLASFIS)
										cSitTrib += IIf(Len(cSitTrib)==1,"00",IIf(Len(cSitTrib)==2,"0",""))
									EndIf

									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³Redução na base de cálculo³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									nRedBase := 0
									If SF4->F4_BASEICM >= 100
										nRedBase := 0
									ElseIf SF4->F4_BASEICM > 0
										nRedBase := (100-SF4->F4_BASEICM)
									Else
										nRedBase := SF4->F4_BASEICM
									Endif

									cSeek := (dtos(dDtIni)+dtos(dDtFim)+PADR(cProd,14)+PADR(cNcm,8)+SB1->B1_UM+space(4))
									If !(R75->(dbSeek(cSeek)))
										RecLock("R75",.T.)
										R75->A75_CTARE  := cContrTare
										R75->A75_DTAINI := dDTIni
										R75->A75_DTAFIM := dDTFim
										R75->A75_PROD   := cProd
										R75->A75_PRORI  := SB1->B1_COD
										R75->A75_CODNCM := cNcm
										R75->A75_DESCR  := cDescPe
										R75->A75_UM     := SB1->B1_UM
										R75->A75_ALQIPI := SB1->B1_IPI
										R75->A75_ALQICM := RetAliqICM(nAliqICM)
										R75->A75_CODBAR := SB1->B1_CODBAR
										R75->A75_VEREAN := SB1->B1_VEREAN
										If SF4->F4_CREDST <> "4"
											R75->A75_BRICMS	:= SD2->D2_BRICMS
										Endif
										R75->A75_FILIAL := IIF (lModoComp ,"",FWCodFil())
										R75->A75_SITTRI := cSitTrib
										R75->A75_REDBSE := nRedBase
										R75->(MsUnlock())
									Endif
									SD1->(dbSkip())
								Enddo
							EndIf
						NEXT
					EndIf
				Endif
			Endif
		Endif
		(cAliasEE9)->(dbSkip())
	Enddo

	If lQuery
		dbSelectArea(cAliasEE9)
		dbCloseArea()
	Else
		dbSelectArea("EE9")
		RetIndex("EE9")
		Set Filter to
		Ferase(cIndex+OrdBagExt())
	EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³GrvReg75  ³ Autor ³ Sergio S. Fuzinaka    ³ Data ³ 23.05.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Grava o Registro Tipo 75, para NF de Complemento (Cod. 997) ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GrvReg75(aArrayF3,cAliasSF3,dDtIni,dDtFim,lPMen15,lPMai14,cProdAnt)

Local aArea 	:= GetArea()
Local aAreaSD1	:= SD1->(GetArea())
Local aAreaSD2	:= SD2->(GetArea())
Local aAreaSB1	:= SB1->(GetArea())
Local aAreaSF4	:= SF4->(GetArea())
Local cSeek		:= ""
Local cProd		:= ""
Local cNcm		:= ""
Local cSitTrib	:= ""
Local cDescr	:= ""
Local cUn    	:= ""
Local nAliqIPI	:= 0
Local nAliqICM	:= SuperGetMv("MV_ICMPAD")
Local nRedBase	:= 0
Local nBRetido	:= 0
Local lGeraSwn	:= SuperGetMv("MV_GERASWN",.F.,.T.)

Default cProdAnt:= ""

Default lPMen15	:= .F.
Default lPMai14	:= .F.

dbSelectArea("SB1")
dbSetOrder(1)

dbSelectArea("SD1")
dbSetOrder(1)

dbSelectArea("SD2")
dbSetOrder(3)

dbSelectArea("SF4")
dbSetOrder(1)

If Left(aArrayF3[1][5],1) < "5"	

	If SD1->(dbSeek(F3Filial("SD1",cAliasSF3)+aArrayF3[1][1]+aArrayF3[1][2]+aArrayF3[1][3]+aArrayF3[1][4]))
		SB1->(dbSeek(F3Filial("SB1",cAliasSF3)+SD1->D1_COD))
		A940LoadPro("E",@cNcm,@cProd,SD1->D1_TEC,.T.,,@lPMen15,@lPMai14)	
	Endif

	If Empty(SD1->D1_TEC)
		If Len(Alltrim(SB1->B1_COD)) > 14
			cSeek := (dtos(dDtIni)+dtos(dDtFim)+PADR(cProd,14)+PADR(cNcm,8)+SB1->B1_UM+space(4))
		Else						
			cSeek := (dtos(dDtIni)+dtos(dDtFim)+Substr(SB1->B1_COD,1,14)+PADR(cNcm,8)+SB1->B1_UM+space(4))
		EndIf						
	Else
		cSeek := (dtos(dDtIni)+dtos(dDtFim)+PADR(cProd,14)+Substr(cNcm,1,8)+SD1->D1_UM+space(4))
	Endif

	If !Empty(SD1->D1_TEC).And. lGeraSwn
		cDescr  := SD1->D1_COD
		cUn     := SD1->D1_UM
		nAliqIPI:= SD1->D1_IPI
	Else
		cDescr  := SB1->B1_DESC
		cUn     := SB1->B1_UM
		nAliqIPI:= SB1->B1_IPI
	EndIf
	
	If SD1->D1_ICMSRET > 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica a referencia do item no SF3, para checar o credito ST ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nPos := aScan(aArrayF3,{|x| x[1]==SD1->D1_DOC .And. x[2]==SD1->D1_SERIE .And. x[3]==SD1->D1_FORNECE .And. x[4]==SD1->D1_LOJA .And. x[5]==SD1->D1_CF .And. x[8]==SD1->D1_PICM})	
		If aArrayF3[Iif(nPos>0,nPos,1)][33] <> "4"
			nBRetido := SD1->D1_BRICMS / SD1->D1_QUANT
		Endif
	Else
		nBRetido := 0
	Endif

	If SF4->(dbSeek(F3Filial("SF4",cAliasSF3)+SD1->D1_TES))
		If SF4->F4_BASEICM >= 100
			nRedBase := 0
		ElseIf SF4->F4_BASEICM > 0
			nRedBase := (100-SF4->F4_BASEICM)
		Else
			nRedBase := SF4->F4_BASEICM
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Situacao Tributaria ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Empty(SD1->D1_CLASFIS)
			cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB),3,0),3)
		Else
			cSitTrib := Alltrim(SD1->D1_CLASFIS)
			cSitTrib += IIf(Len(cSitTrib)==1,"00",IIf(Len(cSitTrib)==2,"0",""))
		EndIf

	Endif

Else

	If SD2->(dbSeek(F3Filial("SD2",cAliasSF3)+aArrayF3[1][1]+aArrayF3[1][2]+aArrayF3[1][3]+aArrayF3[1][4]))
		SB1->(dbSeek(F3Filial("SB1",cAliasSF3)+SD2->D2_COD))
		A940LoadPro("S",@cNcm,@cProd,,.T.,,@lPMen15,@lPMai14)
	Endif

	cSeek	:= (Dtos(dDtIni)+dtos(dDtFim)+PADR(cProd,14)+PADR(cNcm,8)+SB1->B1_UM+Space(4))
	cDescr	:= SB1->B1_DESC

	If SF4->(dbSeek(F3Filial("SF4",cAliasSF3)+SD2->D2_TES))
		If SF4->F4_BASEICM >= 100
			nRedBase := 0
		ElseIf SF4->F4_BASEICM > 0
			nRedBase := (100-SF4->F4_BASEICM)
		Else
			nRedBase := SF4->F4_BASEICM
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Situacao Tributaria ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Empty(SD2->D2_CLASFIS)
			cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB),3,0),3)
		Else
			cSitTrib := Alltrim(SD2->D2_CLASFIS)
			cSitTrib += IIf(Len(cSitTrib)==1,"00",IIf(Len(cSitTrib)==2,"0",""))
		EndIf
	Endif

Endif
If cProd <> cProdAnt
If R75->(!dbSeek(cSeek))
	RecLock("R75",.T.)
	R75->A75_DTAINI := dDTIni
	R75->A75_DTAFIM := dDTFim
	R75->A75_PROD   := cProd
	R75->A75_PRORI  := SB1->B1_COD
	R75->A75_CODNCM := cNcm
	R75->A75_DESCR  := cDescr
	R75->A75_UM     := cUn
	R75->A75_ALQIPI := nAliqIPI
	R75->A75_ALQICM := RetAliqICM(nAliqICM)
	R75->A75_BRICMS := nBRetido
	R75->A75_SITTRI := cSitTrib
	R75->A75_REDBSE := nRedBase
	R75->A75_CODBAR := SB1->B1_CODBAR
	R75->A75_FILIAL := IIF (lModoComp ,"",FWCodFil())
	R75->A75_VEREAN := SB1->B1_VEREAN
	R75->(MsUnlock())
Endif
EndIf
cProdAnt := cProd	

RestArea(aAreaSF4)
RestArea(aAreaSB1)
RestArea(aAreaSD2)
RestArea(aAreaSD1)
RestArea(aArea)

Return Nil	

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao ³R54NFServ    ºAutor  ³ Luciana P. Munhoz  º Data ³  18/07/2006 º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.  ³Funcao utilizada para gerar o registro 54, caso     			  º±±
±±º       ³seja item de Serviço e lCONV76 == .T.		                  º±±
±±ÌÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso    ³ MATA940 - Funcao: Sintegra (CONV76)                           º±±
±±ÈÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function R54NFServ (	aArrayF3,cNumNF,cSerie,cCliFor,cLoja,cContrTare,cCNPJ,lCONV76,;
					   		dDtIni,lSef,lValidaPr,cCNPJOri,lTareDf,cIE,cTranspEst,lGimPB,cFuncep,;
							aProdepe,cAliasSF3)
Local aArea		:= GetArea()
Local cR54CFOP	:= SuperGetMv("MV_R54CFOP") 
Local nX		:= 0
Local nY        := 0
Local nPos		:= 0
Local cChave	:= cNumNF+cSerie+cCliFor+cLoja
Local cCFOSF3	:= ""
Local lSimpNac  := Iif(SuperGetMv("MV_SIMPLES")=="S",.T.,.F.)

nPos := Ascan(aArrayF3,{|x| x[1]+x[2]+x[3]+x[4]==cChave})

For nX := nPos To Len(aArrayF3)
	If Alltrim(aArrayF3[nX][5]) $ cR54CFOP .And. !(AllTrim(aArrayF3[nX][5]) $ cCfoNEcf)		
		//Alteracao efetuada apos consulta na Secretaria RS
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³PARA OS CODIGOS ESPECIAIS QUANTIDADE (CAMPO 10) E VALOR DO PRODUTO (CAMPO 11)        ³
		//³ DEVEM ESTAR ZERADOS E A INFORMACAO DEVE SER PREENCHIDA NO VALOR DESCONTAO / DESPESA ³
		//³ ACESSORIOS (CAMPO 12 ).  REJEICAO                                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If aArrayF3[nX][5] <> cCFOSF3
			cCFOSF3 := aArrayF3[nX][5]
			RecLock("R54",.T.)
			R54->A54_VALDES := aArrayF3[nX][17]
			If GETMV("MV_ESTADO")=="RS"
				R54->A54_VALPRO := 0
			Else
				R54->A54_VALPRO := aArrayF3[nX][17]
			EndIf
		Else
			RecLock("R54",.F.)
			R54->A54_VALDES += aArrayF3[nX][17]
			If GETMV("MV_ESTADO")=="RS"
				R54->A54_VALPRO := 0
			Else
				R54->A54_VALPRO += aArrayF3[nX][17]
			EndIf
		EndIf	
		R54->A54_CTARE	:= cContrTare
		R54->A54_CNPJ	:= cCNPJ
		R54->A54_MODELO := AModNot(aArrayF3[nX][7])
		R54->A54_SERIE  := aArrayF3[nX][2]
		R54->A54_SDOC  	:= aArrayF3[nX][42]
		R54->A54_NFISC  := aArrayF3[nX][1]
		R54->A54_CFOP 	:= aArrayF3[nX][5] //CFOP de Serviço
		R54->A54_CST    := Pad("",3)
		R54->A54_NUMITE	:= "998" //998-Servicoes Nao Tributados
		R54->A54_QUANT  := 0
		R54->A54_CNORI  := cCNPJOri
		R54->A54_ALQICM := 0
		R54->A54_FILIAL := IIF (lModoComp ,"",FWCodFil())
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Implementacao do SEF PE                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		R54->A54_IE	  	:= cIE
		R54->A54_EMISS	:= SF2->F2_EMISSAO
		R54->A54_UF 	:= cTranspEst
		R54->(MsUnlock())
	Endif
Next nX
RestArea(aArea)
Return (.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³GrvAliq   ³ Autor ³ Andressa Fagundes     ³ Data ³ 09/08/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Considera a aliquota do produto com interna.                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GrvAliq(aArrayF3,nI)

Local lAliqInt := SuperGetMv("MV_ALINT") // Considera aliquota do produto como interna(B1_PICM)

If lAliqInt
	SD1->(DbSetOrder(1))
	If SD1->(MsSeek(F3Filial("SD1")+aArrayF3[nI][1]+aArrayF3[nI][2]+aArrayF3[nI][3]+aArrayF3[nI][4]))
		SB1->(MsSeek(F3Filial("SB1")+SD1->D1_COD))
		If !Empty(SB1->B1_PICM)
			R50->A50_ALQINT := SB1->B1_PICM
		Endif
	Endif
Else
	R50->A50_ALQINT := SuperGetMv("MV_ICMPAD")
Endif
									
Return Nil
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³R5475Tare ºAutor  ³Microsiga           º Data ³  12/20/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao de geracao dos registro 50,51, 53 e 54 das notas     º±±
±±º          ³    fiscais canceladas baseadas na tabela SFT para a TARE-DFº±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function R5475Tare(aArrayF3,cContrTare,cCNPJ,cCNPJOri,cIE,cTranspEst,lImpSt,lSef,;
	dDtIni,dDtFim,lGimPB,nI,cR51CFOP,cCfoAux,cRazSoc,cCfoSint,lPMen15,lPMai14)

Local cTipoMov	:= Iif(Left(aArrayF3[1][5],1)>="5","S","E")
Local cChaveSft	:= xFilial( "SFT" )+cTipoMov+aArrayF3[1][2]+aArrayF3[1][1]+aArrayF3[1][3]+aArrayF3[1][4]
Local nItem		:= 1
Local cProd		:= ""
Local cDescPe   := ""
Local cNcm		:= ""
Local cFuncep 	:= ""
Local nBsICMS	:= 0
Local cObs		:= ""
Local lObs		:= .F.
Local nR50Obs	:= 0
Local nAliqICM	:= SuperGetMv("MV_ICMPAD")
Local nAliqZer	:= Iif( aArrayF3[nI][8]==0,nAliqICM,aArrayF3[nI][8] )
Local lB5Funcep	:= SB5->(FieldPos("B5_FUNCEP")) > 0
Local lValidaPr	:= .F.

Default lPMen15 := .F.
Default	lPMai14 := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se ja nao existe um registro 50 com as mesmas caracteristicas. Se existir,  ³
//³acumula os valores, para atender a situacoes em que se utilizem livros distintos nos ³
//³itens de uma mesma nota fiscal.                                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
R50->(dbSetOrder(3))
If !R50->(dbSeek(cCNPJ+aArrayF3[nI][1]+aArrayF3[nI][2]+SubStr(aArrayF3[nI][5],1,4)+StrZero(nAliqZer,5,2)))
	RecLock("R50",.T.)
	R50->A50_FILIAL := aArrayF3[nI][32]
	R50->A50_CNPJ   := cCNPJ
	R50->A50_IE     := cIE
	R50->A50_EMISS  := aArrayF3[nI][10]
	R50->A50_UF     := aArrayF3[nI][22]
	R50->A50_MODELO := AModNot(aArrayF3[nI][7])
	R50->A50_SERIE  := aArrayF3[nI][2]
	R50->A50_SDOC   := aArrayF3[nI][42]
	R50->A50_NFISC  := aArrayF3[nI][1]
	R50->A50_CFOP   := aArrayF3[nI][5]
	R50->A50_EMIT   := IIf(aArrayF3[nI][21]=="S".Or.SubStr(aArrayF3[nI][5],1,1)>="5","P","T")
	R50->A50_ALQICM := nAliqZer
	R50->A50_ALQINT := GrvAliq(aArrayF3,nI)
	R50->A50_SITUAC := IIf(("CANCELAD"$aArrayF3[nI][20] .Or.!Empty(aArrayF3[nI][13])),"S","N")
	R50->A50_CLIENT := aArrayF3[nI][3]
	R50->A50_LOJA   := aArrayF3[nI][4]
	R50->A50_CNORI  := cCNPJOri
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Campos para o layout SAPI³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	R50->A50_CLIFOR	:= aArrayF3[nI][3]
	R50->A50_LOJCF	:= aArrayF3[nI][4]
	R50->A50_TIPO	:= aArrayF3[nI][6]
	R50->A50_CFOMOV	:= aArrayF3[nI][5]

	If lObs .Or. ;
		((lImpSt .And. Left(aArrayF3[nI][05],1)<"5" .And. aArrayF3[nI][11]>0) .Or. ;
		 (lImpSt .And. Left(aArrayF3[nI][05],1)<"5" .And. aArrayF3[nI][30]>0))
		If nI <> 0
			If lSef
				R50->A50_OBS := ++nSefObs
			Else
				R50->A50_OBS := ++nR50Obs
			Endif
			R50->A50_OBSERV	:= cObs
			If lImpSt .And. Left(aArrayF3[nI][05],1)<"5" .And. aArrayF3[nI][11]>0	//F3_ICMSRET - Imposto Retido
				R50->A50_OBSERV	:= "BASE ICMS RET: "+Alltrim(Transform(aArrayF3[nI][29],"@E 999,999,999.99")) + " / ICMS RETIDO: " + Alltrim(Transform(aArrayF3[nI][11], "@E 999,999,999.99"))
			Endif
			If lImpSt .And. Left(aArrayF3[nI][05],1)<"5" .And. aArrayF3[nI][30]>0	//F3_IPIOBS
				R50->A50_OBSERV	:= "IPI: "+Alltrim(Transform(aArrayF3[nI][30],"@E 999,999,999.99"))+IIf(!Empty(R50->A50_OBSERV)," / "+Alltrim(R50->A50_OBSERV),"")
			Endif
		ElseIf nI > 1
			R50->A50_OBS := Iif(lSef, nSefObs, nR50Obs)
		Endif
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Implementacao do SEF PE                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	R50->A50_CODIGO	:= aArrayF3[nI][3]
	R50->A50_LOJA	:= aArrayF3[nI][4]
	R50->A50_NOME	:= cRazSoc
Else
	RecLock("R50",.F.)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se a NF for de Complemento de ICMS, outros valores deverao  ³
//³ estar zerados (Conforme consulta no Posto Fiscal)           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
R50->A50_VALTOT += aArrayF3[nI][17]
R50->A50_BSICM  += aArrayF3[nI][19]
R50->A50_VALICM += aArrayF3[nI][16]
R50->A50_ISENTO += aArrayF3[nI][12]
R50->A50_OUTRAS += aArrayF3[nI][15]
R50->A50_DESPES += aArrayF3[nI][23]
If  AllTrim(R50->A50_CFOP) $ cCfoNEcf
	R50->A50_VALTOT :=0
	R50->A50_BSICM  :=0
	R50->A50_VALICM :=0
	R50->A50_ISENTO :=0
	R50->A50_OUTRAS :=0
	R50->A50_ALQICM :=0
End If
R50->(MsUnLock())
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gravacao do registro 51                                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (Empty(aArrayF3[nI][7]) .Or. AModNot(aArrayF3[nI][7])=="01") .And.;
	(aArrayF3[nI][25]+aArrayF3[nI][26]+aArrayF3[nI][27])>0 .And. ;
	aArrayF3[nI][6] <> "L" .And. (!AllTrim (aArrayF3[nI][05])$cR51CFOP)
	If (nI==1 .Or. cCfoAux<>aArrayF3[nI][05]) .Or. R51->(Eof() .Or. R51->A51_CNPJ<>cCNPJ .Or. R51->A51_IE<>cIE .Or.;
		R51->A51_SERIE <> aArrayF3[nI][02] .Or. R51->A51_NFISC	<> aArrayF3[nI][01] )
		RecLock("R51",.T.)
		R51->A51_CNPJ	:= cCNPJ
		R51->A51_IE		:= cIE
		R51->A51_EMISS	:= aArrayF3[nI][10]
		R51->A51_UF		:= aArrayF3[nI][22]
		R51->A51_SERIE	:= aArrayF3[nI][02]
		R51->A51_SDOC	:= aArrayF3[nI][42]
		R51->A51_NFISC	:= aArrayF3[nI][01]
		R51->A51_CFOP	:= aArrayF3[nI][05]
		R51->A51_SITUAC	:= IIf(("CANCELAD"$aArrayF3[nI][20] .Or.!empty(aArrayF3[nI][13])),"S","N")
		R51->A51_CNORI	:= cCNPJOri
	Endif
	RecLock("R51",.F.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Alteracao efetuada conforme autorizacao do Governo do Estado de Pernambuco            ³
	//³sob o numero de protocolo abaixo.                                                     ³
	//³Despacho ICMS-DV n 115/2012 - Processo n : 2011.000003580272-52                       ³
	//³Para o Estado de Pernambuco deve ser retirado o valor de ICMS ST das Notas de Entrada.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lSef .And. Left(aArrayF3[nI][05],1)<"5"
		R51->A51_VALTOT += aArrayF3[nI][17] - aArrayF3[nI][11]
	Else
		R51->A51_VALTOT += aArrayF3[nI][17]
	EndIf
	R51->A51_VALIPI += aArrayF3[nI][25]
	R51->A51_ISENTA += aArrayF3[nI][26]
	R51->A51_OUTRAS += aArrayF3[nI][27]
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Implementacao do SEF PE                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	R51->A51_BASIPI += aArrayF3[nI][28]
	R51->(MsUnlock())
Endif

If 	(aArrayF3[nI][29]+aArrayF3[nI][11]) > 0 .And.;
	aArrayF3[nI][06] <> "L" .And. !(AModNot(aArrayF3[nI][07])$"07#08#09#10#11#26#57")
	If !R53->(dbSeek(cCNPJ+aArrayF3[nI][1]+aArrayF3[nI][2]+aArrayF3[nI][05]))
	   RecLock("R53",.T.)
	   R53->A53_FILIAL := IIF (lModoComp ,"",FWCodFil())
	   R53->A53_CNPJ  	:=	cCNPJ
	   R53->A53_IE		:=  cIE
	   R53->A53_EMISS	:=	aArrayF3[nI][10]
	   R53->A53_UF		:=	aArrayF3[nI][22]
	   R53->A53_MODELO	:=	AModNot(aArrayF3[nI][07])
	   R53->A53_SERIE	:=	aArrayF3[nI][02]
	   R53->A53_SDOC	:=	aArrayF3[nI][42]
	   R53->A53_NFISC	:=	aArrayF3[nI][01]
	   R53->A53_CFOP	:=	aArrayF3[nI][05]
	   R53->A53_EMIT   :=	IIf(aArrayF3[nI][21]=="S".Or.SubStr(aArrayF3[nI][05],1,1)>="5","P","T")
	   R53->A53_SITUAC :=	IIf(("CANCELAD"$aArrayF3[nI][20] .Or.!empty(aArrayF3[nI][13])),"S","N")
	   R53->A53_CNORI	:=	cCNPJOri
	   R53->A53_ANTECI := "1"
	   IF aArrayF3[nI][22] == "EX" //importação
	      R53->A53_ANTECI := "6"
	   Else
          IF aArrayF3[nI][34] == "1"  //antecipação
             IF (aArrayF3[nI][35]+aArrayF3[nI][36]) > 0 //complementaçao
                R53->A53_ANTECI := "2"
             Endif
             IF (aArrayF3[nI][37]+aArrayF3[nI][38]) > 0 //margem de lucro
                R53->A53_ANTECI := "4"
             Endif
          Endif
       Endif
		If lGimPB .And. Substr(aArrayF3[nI][5],1,1) >= "5"
			SA1->(DbSetOrder(1))
			SA1->(MsSeek(xFilial("SA1")+aArrayF3[nI][3]+aArrayF3[nI][4]))
			If SA1->A1_REGPB == "1"
				R53->A53_ANTECI := "5"
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Para o registro 53 campo (Codigo que identifica o tipo da Antecipação Tributaria) as situacoes diferentes de branco,         ³
		//³devera ser informado o codigo 4 (Antecipacao tributaria com MVA (Margem de Valor Agregado),                                  ³
		//³efetuada pelo destinatario encerrando a fase de tributacao). Esta situacao não se aplica ao Rio Grande do Sul.               ³
		//³Nas operacoes com o Rio Grande do Sul, o codigo de antecipacao, campo do registro tipo 53, sempre sera preenchido com branco.³
		//³Atenciosamente,                                                                                                              ³
		//³Sergio Caetano - Atendimento SEFAZ/RS - Sintegra/SPED Fiscal - EFD                                                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (SuperGetMv("MV_ESTADO")=="RS" .Or. (MV_PAR06 =="RS" .And. MV_PAR07 == 1)) .And. aArrayF3[1][34] == "1"
			R53->A53_ANTECI	:= " "
		EndIf
    Else
       RecLock("R53",.F.)
    Endif
    R53->A53_BRICMS +=	aArrayF3[nI][29]
    If lImpSt .And. Left(aArrayF3[nI][05],1)<"5" .And. aArrayF3[nI][11]>0	//F3_ICMSRET - Imposto Retido
       R53->A53_VALRET	:=	0
    Else
       R53->A53_VALRET += (aArrayF3[nI][11] - aArrayF3[nI][40])
    Endif
    R53->A53_DESPES += aArrayF3[nI][23]
    R53->(MsUnlock())
EndIf
	
If (nI==1)
	DbSelectArea("SFT")
	SFT->(DbSetOrder(1))
	If (SFT->(DbSeek(cChaveSft)))
		Do While !SFT->(Eof()) .And.;
			cChaveSft==SFT->FT_FILIAL+SFT->FT_TIPOMOV+SFT->FT_SERIE+SFT->FT_NFISCAL+SFT->FT_CLIEFOR+SFT->FT_LOJA
			If ! AllTrim(SFT->FT_CFOP) $ cCfoNEcf
				cFuncep := 	""
				cProd	:=	""
				cNcm	:=	""
				nBsICMS	:=	0
				nAliqZer:=	Iif( SFT->FT_ALIQICM==0,nAliqICM,SFT->FT_ALIQICM )

				SB1->(DbSeek(xFilial("SB1")+SFT->FT_PRODUTO))
				A940LoadPro("S",@cNcm,@cProd,,,,@lPMen15,@lPMai14)
				SB5->(dbSetOrder(1))
				If SB5->(DbSeek(xFilial("SB5")+SFT->FT_PRODUTO)) .And. lB5Funcep
					cFuncep := SB5->B5_FUNCEP
				Endif

				SD1->(DbSetOrder(1))
				SD1->(MsSeek(xFilial("SD1")+SFT->FT_TIPOMOV+SFT->FT_SERIE+SFT->FT_NFISCAL+SFT->FT_CLIEFOR+SFT->FT_LOJA+SFT->FT_ITEM+SFT->FT_PRODUTO))
				SF4->(DbSetOrder(1))
				SF4->(MsSeek(xFilial("SF4")+SD1->D1_TES))

				//Numero do Item (991-Frete;992 -Seguro;993-PIS/COFINS;999-Outras despesas acessorias)
				If SFT->FT_FRETE>0 
					R54CancIt(cCfoSint,cCNPJ,cContrTare,"991",cCNPJOri,cIE,cTranspEst,aArrayF3,lSimpNac)
				EndIf
				If SFT->FT_SEGURO>0
					R54CancIt(cCfoSint,cCNPJ,cContrTare,"992",cCNPJOri,cIE,cTranspEst,aArrayF3,lSimpNac)
				EndIf
				If (SFT->FT_DESPESA-SFT->FT_SEGURO-SFT->FT_FRETE)>0
					R54CancIt(cCfoSint,cCNPJ,cContrTare,"999",cCNPJOri,cIE,cTranspEst,aArrayF3,lSimpNac)
				EndIf
				If (SFT->FT_VALCOF+SFT->FT_VALPIS)>0
					R54CancIt(cCfoSint,cCNPJ,cContrTare,"993",cCNPJOri,cIE,cTranspEst,aArrayF3,lSimpNac)
					//Acumulando o valor de PIS/COFINS atraves dos itens pq nao tenho no momento da gravacao do R50 acima.
					RecLock("R50",.F.)
					R50->A50_VALTOT += SFT->FT_VALCOF+SFT->FT_VALPIS
					R50->(MsUnLock())
				EndIf

				RecLock("R54",.T.)
				R54->A54_CTARE	:= cContrTare
				R54->A54_CNPJ	:= cCNPJ
				R54->A54_MODELO	:= AModNot(aArrayF3[1][7])
				R54->A54_SERIE 	:= SFT->FT_SERIE
				R54->A54_SDOC 	:= SerieNfId("SFT",2,"FT_SERIE")
				R54->A54_NFISC 	:= SFT->FT_NFISCAL
				R54->A54_CFOP	:= SFT->FT_CFOP
				R54->A54_CST   	:= Iif (Substr(aArrayF3[1][5],1,1) >= "5" .And. !lSimpNac,"000",CSTCompl(dDtIni, lSef, lValidaPr))
				R54->A54_NUMITE	:= StrZero(nItem++,3)
				R54->A54_PRODUT	:= cProd
				R54->A54_PRORI	:= SFT->FT_PRODUTO
				R54->A54_CNORI  := cCNPJOri
				R54->A54_ALQICM	:= nAliqZer
				R54->A54_FILIAL	:= IIF (lModoComp ,"",FWCodFil())

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Sintegra-MG -> Informacoes de Substituicao Tributaria³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				R54->A54_DTEMI := SFT->FT_EMISSAO  // Data da Emissao
				R54->A54_DTSAI := SFT->FT_ENTRADA  // Data da Entrada/Saida
				If SFT->FT_ICMSRET>0 .And. SFT->FT_CREDST<>"4"
					R54->A54_ALIQST := SFT->FT_ALIQICM
					R54->A54_ICMRET := SFT->FT_ICMSRET
					R54->A54_BRICMS := SFT->FT_BASERET
				Endif
				R54->A54_QUANT 	:= SFT->FT_QUANT
				R54->A54_VALPRO	:= SFT->FT_TOTAL
				R54->A54_VALDES	:= SFT->FT_DESCONT
				R54->A54_VALICM	:= SFT->FT_VALICM
				R54->A54_BSICM  := SFT->FT_BASEICM

				If lImpSt .And. SFT->FT_VALIPI>0
					R54->A54_VALIPI := 0
				Else
					R54->A54_VALIPI := SFT->FT_VALIPI
				Endif
				R54->(MsUnlock())

				If !R75->( DbSeek( DToS( dDtIni )+DToS( dDtFim )+PADR( cProd,14 )+PADR( cNcm,8 )+SB1->B1_UM ) ) .AND. ! (AllTrim(R54->A54_CFOP) $ cCfoNEcf )
					RecLock("R75",.T.)
						R75->A75_CTARE  := cContrTare
						R75->A75_DTAINI := dDTIni
						R75->A75_DTAFIM := dDTFim
						R75->A75_PROD   := cProd
						R75->A75_PRORI  := SFT->FT_PRODUTO
						R75->A75_CODNCM := cNcm
						R75->A75_DESCR  := cDescPe
						R75->A75_UM     := SB1->B1_UM
						R75->A75_ALQIPI := SB1->B1_IPI
						R75->A75_ALQICM := RetAliqICM(nAliqICM)
						R75->A75_CODBAR := SB1->B1_CODBAR
						R75->A75_FILIAL := IIF (lModoComp ,"", SM0->M0_CODFIL)
						R75->A75_VEREAN := SB1->B1_VEREAN
						If lSef
							If SFT->FT_ICMSRET>0 .And. SFT->FT_CREDST<>"4"
								R75->A75_BRICMS := NoRound(SFT->FT_BASERET/SFT->FT_QUANT)
							Else
								R75->A75_BRICMS := 0
							Endif
						Else
							If SFT->FT_CREDST <> "4"
								R75->A75_BRICMS := SFT->FT_BASERET
							Endif
						Endif
						R75->A75_SITTRI := SFT->FT_CLASFIS
						R75->A75_REDBSE := 0
					R75->(MsUnlock())
				EndIf
			EndIf
			SFT->(DbSkip())
		EndDo
	EndIf
EndIf
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³R54CancIt ºAutor  ³Microsiga           º Data ³  29/12/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Gravacao dos itens 991,992,993,999 para a nota fiscal cance-º±±
±±º          ³ lada.                                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function R54CancIt(cCfoSint,cCNPJ,cContrTare,cItem,cCNPJOri,cIE,cTranspEst,aArrayF3,lSimpNac)
Local dDtIni	:= ""
Local lValidaPr	:= .F.
Local lSef		:= .F.

Default aArrayF3 := {}
Default lSimpNac := Iif(SuperGetMv("MV_SIMPLES")=="S",.T.,.F.)

DbSelectArea("R54")
If !AllTrim( SFT->FT_CFOP )$cCfoSint
	If !MsSeek( cCNPJ+SFT->(FT_SERIE+FT_NFISCAL)+cItem ) .AND. ! AllTrim(SFT->FT_CFOP) $ cCfoNEcf
		RecLock("R54",.T.)
		R54->A54_CTARE  := cContrTare
		R54->A54_CNPJ   := cCNPJ
		R54->A54_MODELO := AModNot( SFT->FT_ESPECIE )
		R54->A54_SERIE  := SFT->FT_SERIE
		R54->A54_SDOC   := SerieNfId("SFT",2,"FT_SERIE")
		R54->A54_NFISC  := SFT->FT_NFISCAL
		R54->A54_CFOP   := SFT->FT_CFOP
		R54->A54_CST    := Iif (Substr(aArrayF3[1][5],1,1) >= "5" .And. !lSimpNac,"000",CSTCompl(dDtIni, lSef, lValidaPr))
		R54->A54_NUMITE := cItem
		R54->A54_QUANT  := 0
		R54->A54_CNORI  := cCNPJOri
		R54->A54_FILIAL := IIF (lModoComp ,"",FWCodFil())

		If( cItem=="991" )
			R54->A54_VALPRO := SFT->FT_FRETE
		ElseIf( cItem=="992" )
			R54->A54_VALPRO := SFT->FT_SEGURO
		ElseIf( cItem=="999" )
			R54->A54_VALPRO := SFT->FT_DESPESA-SFT->FT_SEGURO-SFT->FT_FRETE
		ElseIf( cItem=="993" )
			R54->A54_VALPRO := SFT->FT_VALCOF+SFT->FT_VALPIS
		Else
			R54->A54_VALPRO := SFT->FT_VALCONT
		EndIf
		R54->A54_VALDES := R54->A54_VALPRO
		R54->A54_ALQICM := SFT->FT_ALIQICM
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Implementacao do SEF PE                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		R54->A54_IE    := cIE
		R54->A54_EMISS := SFT->FT_EMISSAO
		R54->A54_UF    := cTranspEst
		R54->(MsUnLock())
	Endif
EndIf
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A940TitNF ºAutor  ³Mary C. Hergert     º Data ³ 18/06/2007  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao com a finalidade de montar o registro 88STITNF - MG  º±±
±±º          ³com as notas fiscais de entrada de produtos com ICMS retido º±±
±±º          ³de periodos anteriores ao processamento da rotina, mas que  º±±
±±º          ³participaram da composicao do estoque.                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Mata940 - Sintegra de Minas Gerais                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A940TitNF(aNFsProc,dDtIni,cDescPe,lPMen15,lPMai14)

Local aArea		:= GetArea()
Local aRetMG	:= {}

Local cChave	:= ""
Local cSitTrib	:= ""
Local cCNPJ		:= ""
Local cProd		:= ""
Local cNCM		:= ""

Local nX 		:= 1
Local nBsIcmMG 	:= 0
Local nBSSTMG 	:= 0
Local nAlIcmMG 	:= 0
Local nVlIcmMG	:= 0
Local nVlSTMG	:= 0

Default	lPMen15	:= .F.
Default lPMai14	:= .F.

SD1->(DbSetOrder(1))
SB1->(DbSetOrder(1))
SF4->(DbSetOrder(1))
SF1->(dbSetOrder(1))

For nX := 1 to Len(aNFsProc)

	cChave := aNFsProc[nX][1]+aNFsProc[nX][2]+aNFsProc[nX][3]+aNFsProc[nX][4]+aNFsProc[nX][5]+aNFsProc[nX][6]+aNFsProc[nX][7]

	If !SD1->(dbSeek(cChave)) .Or.;
		!SB1->(dbSeek(xFilial("SB1")+SD1->D1_COD)) .Or.;
		!SF4->(dbSeek(xFilial("SF4")+SD1->D1_TES)) .Or.;
		!SF1->(dbSeek(xFilial("SF1")+SD1->D1_DOC+SD1->D1_SERIE+SD1->D1_FORNECE+SD1->D1_LOJA))
		Loop
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o mesmo documento ja nao foi apresentado pelo movimento do mes³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SF1->F1_DTDIGIT >= dDtIni
		Loop
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Fornecedor do documento³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !SD1->D1_TIPO $ "BD"
		SA2->(dbSeek(xFilial("SA2")+SD1->D1_FORNECE+SD1->D1_LOJA))
		cCNPJ := A940CNPJ(SA2->A2_CGC,SA2->A2_TIPO,.F.)
	Else
		SA1->(dbSeek(xFilial("SA1")+SD1->D1_FORNECE+SD1->D1_LOJA))
		cCNPJ := A940CNPJ(SA1->A1_CGC,SA1->A1_TIPO,.F.)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Situacao Tributaria do produto processado³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Empty(SD1->D1_CLASFIS)
		cSitTrib := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB),3,0),3)
	Else
		cSitTrib := Alltrim(SD1->D1_CLASFIS)
		cSitTrib += IIf(Len(cSitTrib)==1,"00",IIf(Len(cSitTrib)==2,"0",""))
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Codigo do produto conforme o Sintegra³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	A940LoadPro("S",@cNcm,@cProd,,.F.,,@lPMen15,@lPMai14)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ponto de entrada para retornar os valores de ICMS e ST nas notas de devolucao.           ³
	//³Necessario ao fato de que, quando devolvo uma NF de saida sem calculo de ICMS            ³
	//³ou ST, devera de alguma forma buscar os valores da nota de entrada da mercadoria vendida.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nBsIcmMG := SD1->D1_BASEICM
	nBSSTMG  := aNFsProc[nX][8]
	nAlIcmMG := SD1->D1_PICM
	nVlIcmMG := SD1->D1_VALICM
	nVlSTMG  := SD1->D1_ICMSRET
	If lA940STMG
		aRetMG := Execblock("A940STMG",.F.,.F.,{"SD1",;
				SD1->D1_FILIAL,;
				SD1->D1_DOC,;
				SD1->D1_SERIE,;
				SD1->D1_FORNECE,;
				SD1->D1_LOJA,;
				SD1->D1_TIPO})
		If Len(aRetMG) >= 5
			nBsIcmMG := aRetMG[01]
			nBSSTMG  := aRetMG[02]
			nAlIcmMG := aRetMG[03]
			nVlIcmMG := aRetMG[04]
			nVlSTMG  := aRetMG[05]
		Endif
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Gravando o registro 88STITNF³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RecLock("FRT",.T.)
	FRT->FRT_CNPJ	:= cCNPJ
	FRT->FRT_MODELO	:= AModNot(SF1->F1_ESPECIE)
	FRT->FRT_SERIE	:= SD1->D1_SERIE
	FRT->FRT_SDOC	:= SerieNfId("SD1",2,"D1_SERIE")
	FRT->FRT_NFISC	:= SD1->D1_DOC
	FRT->FRT_CFOP	:= SD1->D1_CF
	FRT->FRT_CST	:= cSitTrib
	FRT->FRT_NUMITE	:= Right(SD1->D1_ITEM,3)
	FRT->FRT_DTEMI	:= SF1->F1_DTDIGIT
	FRT->FRT_PRODUT	:= cProd
	FRT->FRT_PRDORI	:= SD1->D1_COD
	FRT->FRT_QUANT	:= SD1->D1_QUANT
	FRT->FRT_VALPRO	:= SD1->D1_TOTAL
	FRT->FRT_VALDES	:= SD1->D1_VALDESC
	FRT->FRT_BSICM  := nBsIcmMG
	FRT->FRT_BRICMS := nBSSTMG
	FRT->FRT_VALIPI	:= SD1->D1_VALIPI
	FRT->FRT_ALQICM	:= nAlIcmMG
	If SD1->D1_BRICMS > 0
		FRT->FRT_ALIQST := Iif(SB1->B1_PICM == 0,GetMV("MV_ICMPAD"),SB1->B1_PICM)
	Endif
	FRT->FRT_VALICM := nVlIcmMG
	FRT->FRT_VALST  := nVlSTMG
	FRT->FRT_CHVNFE  := SF1->F1_CHVNFE
	FRT->(MsUnlock())
Next

RestArea(aArea)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ ExcRedBase   ³Autor ³     MURILO ALVES     ³Data³ 05/02/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se o PRODUTO ATIVO contem excessao fiscal, e	     ³±±
±±³			 | se esta excessao, possui uma reducao de base.			     ³±±
±±³			 | Conforme RICMS Artigo 315 item 5, para inclusao da Aliquota³±±
±±³			 | correta de acordo com a Coluna "Isenta" ou "Outros"	 	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ExcRedBase(cCodGrupoTrib)
Local lAchou := .F.
Local aArea:= GetArea()

dbSelectArea("SF7")
dbGoTop()
SF7->(dbSetOrder(1))
If SF7->(DbSeek(xFilial("SF7")+cCodGrupoTrib))
	If !Empty(SF7->F7_BASEICM) .Or. SF7->F7_BASEICM > 0
		lAchou := .T.
	EndIf
EndIf

RestArea(aArea)
Return(lAchou)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a94088MG  ºAutor  ³Mary C. Hergert     º Data ³  09/09/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se ocorreram no periodo saidas que dao direito ao  º±±
±±º          ³ressarcimento de ICMS ST para Minas Gerais                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Mata940                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a94088MG(aPr88MG,cProd,lMrgST,aChvD2,lNContr,cN88Int,c88Perd,lChkEC87)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³aChvD2:          ³
//³[01] = D2_FILIAL ³
//³[02] = D2_DOC    ³
//³[03] = D2_SERIE  ³
//³[04] = D2_CLIENTE³
//³[05] = D2_LOJA   ³
//³[06] = D2_CF     ³
//³[07] = D2_COD    ³
//³[08] = D2_ITEM   ³
//³[09] = D2_QUANT  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Local lPermite := .F.
Local lContr88 := .F.

SFT->(dbSetOrder(1))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Somente os produtos com margem de lucro na entrada ou com Regime Especial no movimento devem ser processados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lMrgST

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³CONDICAO 1 PARA DIREITO AO RESSARCIMENTO                                 ³
	//³Saidas interestaduais                                                    ³
	//³Apenas para contribuintes até 31/12/2015                                 ³
	//³apartir de 01/01/2016 para todos contribuintes.                          ³
	//³CFOP nao contido no parametro MV_N88INT  (que indica os CFOPs que nao dao³
	//³direito ao credito nas operacoes interestaduais)                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lContr88 := Iif(lChkEC87, .T., !lNContr)
	If SubStr(aChvD2[06],1,1) == "6" .And. lContr88 .And. !(Alltrim(aChvD2[06]) $ cN88Int)
		lPermite := .T.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³CONDICAO 2 PARA DIREITO AO RESSARCIMENTO                         ³		
	//³Saidas por perda, roubo, perecimento e etc devem ser consideradas³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ElseIf Alltrim(aChvD2[06]) $ c88Perd
		lPermite := .T.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³CONDICAO 3 PARA DIREITO AO RESSARCIMENTO                           ³		
	//³Saidas isentas ou com nao incidencia de ICMS devem ser consideradas³
	//³Somente quando o item for 100% isento                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ElseIf !(Alltrim(aChvD2[06]) $ cN88Int) .And. ;
		SFT->(dbSeek(xFilial("SFT")+"S"+aChvD2[03]+aChvD2[02]+aChvD2[04]+aChvD2[05]+aChvD2[08]+aChvD2[07])) .And. ;
		SFT->FT_ISENICM > 0 .And. SFT->FT_BASEICM == 0 .And. SFT->FT_OUTRICM == 0
		lPermite := .T.
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Armazena os produtos que deram o direito ao ressarcimento atraves de suas saidas³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lPermite
		nPos := aScan(aPr88MG,{|x| x[1]==aChvD2[07]})
		If nPos == 0
			aAdd(aPr88MG,{aChvD2[07],cProd,.T.,aChvD2[9]})
		Else
			aPr88MG[nPos][3] := .T.
			aPr88MG[nPos][4] += aChvD2[09]			
		Endif
	Endif

Endif

Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Reg75Alt  ºAutor  ³Juliana Taveira     º Data ³  04/03/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se existe alguma alteracao no produto/serviço      º±±
±±º          ³Caso exista, um novo registro com outro periodo de validade º±±
±±º          ³será incluso no registro tipo 75                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Mata940                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/                   
Function Reg75Alt(dDtIni,dDtFim)
Local lHistTab := SuperGetMv("MV_HISTTAB",,.F.)
Local aHist    := {}
Local cSeek    := ""
Local cPrd     := ""
Local cNcm     := ""
Local cDsc     := ""
Local cUm      := ""
Local cStr     := ""
Local nIpi     := 0
Local nIcm     := 0
Local nRed     := 0
Local nBri     := 0
Local cPro     := ""
Local cCbar    := ""
Local cEan     := ""
Local cTar     := ""
Local nX       := 0

If lHistTab
	R75->(DbSelectArea("R75"))
	R75->(DbGoTop())
	While R75->(!Eof())
		aHist := MsConHist("SB1","","",dDtIni,dDtFim,PADR(R75->A75_PROD,15))
		If(len(aHist)>0) 
			cPrd := R75->A75_PROD
			cNcm := R75->A75_CODNCM
			cDsc := R75->A75_DESCR
			cUm  := R75->A75_UM
			cStr := R75->A75_SITTRI
			nIpi := R75->A75_ALQIPI
			nIcm := R75->A75_ALQICM
			nRed := R75->A75_REDBSE
			nBri := R75->A75_BRICMS
			cPro := R75->A75_PRORI
			cCbar:= R75->A75_CODBAR
			cEan := R75->A75_VEREAN
			cTar := R75->A75_CTARE
		
			For nX:=1 to len(aHist)
				If aHist[nX][3] > dDtIni .and. aHist[nX][3] <= dDtFim
					dDtAlt := aHist[nX][3]
					cSeek  :=(dtos(dDtAlt)+dtos(dDtFim)+PADR(R75->A75_PROD,14)+PADR(R75->A75_CODNCM,8)+R75->A75_UM+space(4))
					If R75->(!dbSeek(cSeek))
						RecLock("R75",.T.)
						R75->A75_CTARE	:= cTar
						R75->A75_DTAINI	:= dDtAlt
						R75->A75_DTAFIM	:= dDtFim
						R75->A75_PROD  	:= cPrd
						R75->A75_PRORI	:= cPro
			   			R75->A75_CODNCM	:= cNcm
						R75->A75_DESCR	:= cDsc
						R75->A75_UM    	:= cUm
						R75->A75_ALQIPI	:= nIpi
						R75->A75_ALQICM	:= nIcm
					    R75->A75_CODBAR := cCbar
				        R75->A75_VEREAN := cEan
				   		R75->A75_BRICMS := nBri
						R75->A75_SITTRI	:= cStr
						R75->A75_REDBSE	:= nRed
				        R75->A75_FILIAL  := IIF (lModoComp ,"",FWCodFil())    					
						R75->(MsUnLock())						
					EndIf					
				EndIf
			Next nX
		EndIf
		cPrd := ""             
		cNcm := ""
		cDsc := ""
		cUm  := ""
		cStr := ""
		nIpi := 0
		nIcm := 0
		nRed := 0
		nBri := 0
		cPro := ""
		cCbar:= ""
		cEan := ""
		cTar := ""
		R75->(DbSkip())
	EndDo
EndIf
Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a9408829  ºAutor  ³Juliana Taveira     º Data ³  07/06/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Gera registro 8829 - Gim PB conforme art 3, decreto 31061   º±±
±±º          ³de 15 de janeiro de 2010 que descreve:                      º±±
±±º          ³Expepcionalmente na GIM referencia Dez/2009 o valor do campoº±±
±±º          ³4 do novo registro 8829 será a soma do ano de 2009 para cadaº±±
±±º          ³municipio													  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a9408829(dDataIni, dDataFim, cNrLivro)
Local cAliasSF3 := "SF3"
Local cFiltro	:= ""
Local cCliFor	:= ""
Local cLjCliFor	:= ""
Local cCdMunGIM := ""
Local cIndex    := ""
Local nIndex 	:= 0
Local nPos1     := 0
Local aDadMun   := {}
Local lQuery    := .F.
Local cCodGIM	:= SuperGetMv("MV_CODGIM",.F.," ",)
Local aSaveASA1 := {}
Local aSaveADT6 := {}
Local lIntTMS   := IntTms()

Default  dDataIni := ctod ("//")
Default  dDataFim := ctod ("//")
Default  cNrLivro := ""

DbSelectArea("SF3")
SF3->(DbSetOrder(1))

#IFDEF TOP
If (TcSrvType()<>"AS/400")
	cAliasSF3 := GetNextAlias()
	lQuery    := .T.
	cFiltro   := "%"
	If cNrLivro <> "*"
		cFiltro += " SF3.F3_NRLIVRO = '" +%Exp:(cNrLivro)% +"' AND "
	EndIf
	cFiltro += "%"

	BeginSql Alias cAliasSF3
		SELECT *
		FROM %Table:SF3% SF3
		WHERE
			SF3.F3_FILIAL = %xFilial:SF3% AND
			SF3.F3_ENTRADA >= %Exp:DToS (dDataIni)% AND
			SF3.F3_ENTRADA <= %Exp:DToS (dDataFim)% AND
			(SF3.F3_CFO NOT LIKE '000%' AND SF3.F3_CFO NOT LIKE '999%') AND
			(SF3.F3_CFO LIKE '5%' OR SF3.F3_CFO LIKE '6%' OR SF3.F3_CFO LIKE '7%') AND 
			%Exp:cFiltro%
			SF3.%NotDel%
	EndSql
Else
#ENDIF
	cIndex  := CriaTrab(NIL,.F.)
	cFiltro := 'F3_FILIAL=="'+xFilial("SF3")+" .AND. '
	cFiltro += 'DTOS(F3_ENTRADA) >= "'+Dtos(dDataIni)+" .AND. '
	cFiltro += 'DTOS(F3_ENTRADA) <= "'+Dtos(dDataFim)+" .AND. '
	cFiltro += '!Substr(F3_CFO,1,3)$"999/000" .AND. '
	cFiltro += 'Substr(F3_CFO,1,1) $ "567" .AND. '
	If cNrLivro <> "*"
		cFiltro += '.AND. F3_NRLIVRO ="'+ cNrLivro +'" '
	EndIf
	IndRegua (cAliasSF3, cIndex, SF3->(IndexKey ()),, cFiltro)
	nIndex := RetIndex(cAliasSF3)
#IFNDEF TOP
	DbSetIndex(cIndex+OrdBagExt())
#ENDIF
	DbSelectArea(cAliasSF3)
	DbSetOrder(nIndex)
#IFDEF TOP
Endif
#ENDIF

DbSelectArea (cAliasSF3)
(cAliasSF3)->(DbGoTop ())
ProcRegua ((cAliasSF3)->(RecCount ()))
While !(cAliasSF3)->(Eof ())
	If lIntTMS.And.("CTR"$AllTrim((cAliasSF3)->F3_ESPECIE).Or."NFST"$AllTrim((cAliasSF3)->F3_ESPECIE)).And.;
	    Upper(Substr(Alltrim(MV_PAR03),1,5))=="GIMPB"
		//--Quando for TMS temos que enviar o F3_CLIEFOR+F3_LOJFOR, que sao os tomadores do servico (Pagador do Frete),
		//--nao utilizar o campo criado para gravar o destinatario F3_CLIENT+F3_LOJENT
		aSaveASA1 := GetArea("SA1")
		aSaveADT6 := GetArea("DT6")
		DbSelectArea("DT6")
		DT6->(DbSetOrder(1))
		If (DbSeek(xFilial("DT6")+(cAliasSF3)->F3_FILIAL+(cAliasSF3)->F3_NFISCAL+(cAliasSF3)->F3_SERIE))
			dbSelectArea("SA1")
			SA1->(dbSetOrder(1))
			If DbSeek(xFilial("SA1")+DT6->DT6_CLIDEV+DT6->DT6_LOJDEV) .And. SA1->A1_EST == "PB"
				If SA1->(FieldPos(AllTrim(GetNewPar("MV_GIMUN","XXX"))))>0
					cCdMunGIM   :=	SA1->(FieldGet(FieldPos(AllTrim(GetNewPar("MV_GIMUN","XXX")))))
				EndIf
			Else
				If Empty(cCodGIM)
					Final(STR0068)//"Por favor informar o conteudo do parametro MV_CODGIM"
				EndIf
				cCdMunGIM := cCodGIM
			EndIf
		Endif
		RestArea(aSaveASA1)
		RestArea(aSaveADT6)
	Else
		cCliFor		:= (cAliasSF3)->F3_CLIEFOR
		cLjCliFor	:= (cAliasSF3)->F3_LOJA
		dbSelectArea("SA1")
		SA1->(dbSetOrder(1))
		If SA1->(DbSeek(xFilial("SA1")+avKey(cCliFor,"A1_COD")+avKey(cLjCliFor,"A1_LOJA")))
			If SA1->(FieldPos(AllTrim(GetNewPar("MV_GIMUN","XXX"))))>0
				cCdMunGIM := SA1->(FieldGet(FieldPos(AllTrim(GetNewPar("MV_GIMUN","XXX")))))
			EndIf
		EndIf
	EndIf
	//Alimenta array de valor faturado por municipio referente a todo o ano de 2009
	If !Empty(cCdMunGIM) .And. substr((cAliasSF3)->F3_CFO,1,1)>="5" .And. Empty((cAliasSF3)->F3_DTCANC)
		nPos1 := Ascan(aDadMun,{|x|x[01]==Alltrim(cCdMunGIM)})
		If nPos1 > 0
			aDadMun[nPos1,02] += (cAliasSF3)->F3_VALCONT
		Else
			AADD(aDadMun,{Alltrim(cCdMunGIM),(cAliasSF3)->F3_VALCONT})
		EndIf
	EndIf
	cCdMunGIM := ""
	(cAliasSF3)->(DbSkip())
EndDo
If lQuery
	(cAliasSF3)->(dbCloseArea())
EndIf

Return(aDadMun)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  |SintSitDoc ³ Autor ³Patricia Rajao         ³Data ³23/06/2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³             SITUACAO DO DOCUMENTO FISCAL                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³Retorna a situacao do documento fiscal em processamento,    ³±±
±±³          ³ onde:                                                      ³±±
±±³          ³ 01=Extemporaneo de Documento Fiscal Normal                 ³±±
±±³          ³ 02=Documento Fiscal Canecelado                             ³±±
±±³          ³ 03=Extemporaneo de Documento Fiscal Canecelado             ³±±
±±³          ³ 04=Documento com Uso Denegado                              ³±±
±±³          ³ 05=Documento com Uso Inutilizado                           ³±±
±±³          ³ o=Documento Fiscal Normal                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Nivel Hier³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³cSituaDoc -> Situacao do documento                          ³±±
±±³          ³ onde:                                                      ³±±
±±³          ³ N=Documento Fiscal Normal                                  ³±±
±±³          ³ S=Documento Fiscal Canecelado                              ³±±
±±³          ³ E=Extemporaneo de Documento Fiscal Normal                  ³±±
±±³          ³ X=Extemporaneo de Documento Fiscal Canecelado              ³±±
±±³          ³ 2=Documento com Uso Denegado                               ³±±
±±³          ³ 4=Documento com Uso Inutilizado                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros|cTipo     -> F3_TIPO                                        ³±±
±±³          ³cAliasSF3 -> Alias da tabela SF3 filtrada e posicionada     ³±±
±±³          ³             na funcao principal                            ³±±
±±³          ³dDtCanc   -> Data de cancelamento                           ³±±
±±³          ³cDoc      -> Numero do documento                            ³±±
±±³          ³cSerie    -> Serie                                          ³±± 
±±³          ³cClieFor   -> Cliente/Fornecedor                            ³±±
±±³          ³cLoja      -> Loja                                          ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
                         
Function SintSitDoc(cCodSefaz,dDtCanc,cDoc,cSerie,cClieFor,cLoja)

Local cSituaDoc := ""
Local cEstEmp   := GetMv("MV_ESTADO")

CDT->(Dbsetorder(1))
CDT->(dbSeek(xFilial("CDT")+"E"+cDoc+cSerie+cClieFor+cLoja))   
                                                                                     
If !(Empty (dDtCanc))
	cSituaDoc	:=	"S"	//Documento Cancelado 
Elseif Empty(cSituaDoc)	
	If CDT->CDT_SITEXT == "R"
		cSituaDoc	:=	"E"	//Documento Extemporaneo      		
  	Else
		cSituaDoc	:=	"N"	//Documento Normal
	EndIf
EndIf

If Alltrim(cCodSefaz) $ "110/301/302/303/304/305/306"
	cSituaDoc := "2"	//NFe - Uso denegado
ElseIf Alltrim(cCodSefaz) $ "102"
	If AllTrim(cEstEmp) <> "PE" //Para o Estado de Pernambuco o codigo de nf inutilizada deve ser "S"
		cSituaDoc := "4"	//NFe - Numeracao Inutilizada
	EndIf
EndIf

Return (cSituaDoc)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³LeSimpNa  ºAutor  ³Natalia Antonucci   º Data ³  26/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Gera registro 8818 - Gim PB conforme apuração do Simples    º±±
±±º          ³Nacional                  								  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function LeSimpNa(cArqant) 
Local nBase := 0
Local nIcms := 0
Local nAliqIcm := 0
Local aDados :={} 
Local aArqIni := {}
Local cLinha := ""
Local nX        := 0

If !Empty(cArqAnt) .And. File(cArqAnt)
	aArqIni := MemoRead(cArqAnt)
	For nX := 1 To MlCount(aArqIni,100)
       cLinha := MemoLine(aArqIni,100,nX)
        If Substr(cLinha,1,3)=="002"
          nBase := Val(Replace(Replace(Alltrim(Substr(cLinha,50,20)),".",""),",","."))
        Endif
        If Substr(cLinha,1,4)=="ICMS"
          nIcms := Val(Replace(Replace(Alltrim(Substr(cLinha,20,20)),".",""),",","."))
        Endif
     Next nX
     nAliqIcm := Round(((nIcms/nBase)*100),2) 
     aadd(aDados,{nBase,nIcms,nAliqIcm})
Endif

Return (aDados)

//-------------------------------------------------------------------
/*/{Protheus.doc} RetAliqICM
function de pesquisa da Aliquota ICMS

@param nAliqICM aliquota padrao MV_ICMPAD
@param lFecp define de retorna aliquota ICMS + Fecp

@return nRet aliquota ICMS

@author Flavio Luiz Vicco
@since 25/04/2018
@version 12.1.17
/*/
//-------------------------------------------------------------------
Static Function RetAliqICM(nAliqICM,lFecp)
Local nRet := 0

Default nAliqICM := SuperGETMV("MV_ICMPAD")
Default lFecp    := .F.

DbSelectArea("SBZ")
SBZ->(DbSetOrder(1))
SBZ->(DbSeek(xFilial("SBZ")+SB1->B1_COD))
If SBZ->BZ_PICM > 0
	nRet := SBZ->BZ_PICM + IIf(lFecp,IIf(SBZ->BZ_FECP > 0, SBZ->BZ_FECP, 1),0)
ElseIf SB1->B1_PICM > 0
	nRet := SB1->B1_PICM + IIf(lFecp,IIf(SB1->B1_FECP > 0, SB1->B1_FECP, 1),0)
Else
	nRet := nAliqICM + IIf(lFecp,IIf(SB1->B1_FECP > 0,SB1->B1_FECP, 1),0)
EndIf

Return nRet

//-------------------------------------------------------------------
/*/{Protheus.doc} IntegDef
Chamada da Mensagem Unica de Importacao Txt do SINTEGRA

@param cXml Xml passado para a rotina
@param nType Determina se e uma mensagem a ser enviada/recebida ( TRANS_SEND ou TRANS_RECEIVE)
@param cTypeMsg Tipo de mensagem ( EAI_MESSAGE_WHOIS,EAI_MESSAGE_RESPONSE,EAI_MESSAGE_BUSINESS)

@return aRet[1] boleano determina se a mensagem foi executada ou nao com sucesso
@return aRet[2] string xml

@author Fabio V Santana
@since 02/06/2015
@version MP11.80
/*/
//-------------------------------------------------------------------
STATIC FUNCTION IntegDef( cXml, nType, cTypeMsg )
Local aRet := {}

aRet:= MATI940( cXml, nType, cTypeMsg )

Return aRet
