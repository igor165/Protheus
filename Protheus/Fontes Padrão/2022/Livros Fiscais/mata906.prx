#include "PROTHEUS.ch"
#INCLUDE "MATA906.CH"

STATIC	nTotTrib 	:= 0
STATIC 	nTot 		:= 0
STATIC 	nCoefApr	:= 0

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATA906  ³ Autor ³ Eduardo Riera         ³ Data ³ 02.06.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Estorno Mensal e Perda ou Saida                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void MATA906(void)                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO.                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function MATA906
Local aCores	    := {}
Local lVerpesssen := Iif(FindFunction("Verpesssen"),Verpesssen(),.T.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aAC			:={ STR0007,STR0008 }           //"Abandona"###"Confirma"
PRIVATE aCRA		:={ STR0008,STR0009,STR0007 }   //"Confirma"###"Redigita"###"Abandona"
PRIVATE aRotina		:= MenuDef()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabecalho da tela de atualizacoes                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE cCadastro := OemtoAnsi(STR0006)		//"Manutencao do CIAP"

PRIVATE cFilOri   := FWCodFil()
PRIVATE lMVAprComp:= SuperGetMV('MV_APRCOMP',.F.,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Endereca a funcao de BROWSE                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If lVerpesssen
	dbSelectArea("SF9")
	dbSelectArea("SFA")

	aAdd (aCores, {'F9_QTDPARC=F9_SLDPARC.AND.F9_VLESTOR==0.AND.F9_BXICMS==0.AND.F9_VALICMS>0', 'BR_LARANJA' }) 		// Ativo adquirido mais sem ocorrencias
	aAdd (aCores, {'F9_BXICMS<>0.AND.F9_MOTIVO<>"3".AND.(Empty(F9_BAIXAPR).OR.Alltrim(F9_BAIXAPR)=="0") ','BR_VERMELHO'})		// Ativo baixado
	aAdd (aCores, {'F9_BXICMS<>0.AND.F9_MOTIVO=="3"','BR_AZUL'})								// Ativo transferido
	aAdd (aCores, {'EMPTY(F9_MOTIVO).AND.F9_SLDPARC==0.AND.F9_QTDPARC<>0','BR_PRETO'})			// Ativo baixado por período
	aAdd (aCores, {'F9_VALICMS==0.AND.F9_TIPO=="01".AND.F9_CODBAIX=="BFINAL"','BR_BRANCO'})		// Ativo Bem Principal
	aAdd (aCores, {'F9_BXICMS<>0.AND.F9_MOTIVO<>"3".AND.F9_BAIXAPR=="1"','BR_AMARELO'})			// Ativo baixado parcialmente
	aAdd (aCores, {'F9_TIPO=="02"','BR_MARROM'})		// Ativo Bem em Construção
	aAdd (aCores, {'F9_QTDPARC<>F9_SLDPARC.OR.(F9_BXICMS==0.OR.F9_BXICMS==0)', 'ENABLE'})		// Ativo depreciado
	aAdd (aRotina, {OemToAnsi (STR0118), "A906Legenda", 0 , 2,0,.F.}) 	   		        		//"Legenda"

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega as perguntas selecionadas                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Pergunte("MTA906",.F.)
	SetKey( VK_F12,{|| Pergunte("MTA906",.T.)} )
	mBrowse( 6, 1,22,75,"SF9",,"F9_MOTIVO",,,,aCores)
	SetKey( VK_F12,Nil )
EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A906Baixa ³ Autor ³ Eduardo Riera         ³ Data ³ 02.06.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Baixa                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void A906Baixa(Void)                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A906Baixa(cAlias,nReg,nOpc)
Local nOpcA   		:= 0
Local cCodigo 		:= SF9->F9_CODIGO
Local cDocNfe 		:= SF9->F9_DOCNFE
Local cSerNfe 		:= SF9->F9_SERNFE
Local cItemNfe 		:= CriaVar("F9_ITEMNFS")
Local cData   		:= ""
Local dDatNfe 		:= SF9->F9_DTENTNE
Local cForNfe 		:= SF9->F9_FORNECE
Local cLojNfe 		:= SF9->F9_LOJAFOR
Local cDocNfs 		:= CriaVar("F9_DOCNFS")
Local cSerNfs 		:= CriaVar("F9_SERNFS")
Local dDatNfs 		:= CriaVar("F9_DTEMINS")
Local cEspecie 		:= CriaVar("F2_ESPECIE")
Local nValOk  		:= SF9->F9_VALICMS-SF9->F9_BXICMS-SF9->F9_VLESTOR
Local nValor  		:= SF9->F9_VALICMS-SF9->F9_BXICMS-SF9->F9_VLESTOR
Local nVlEstor		:= 0
Local nMotivo 		:= 1
Local cMotivo 		:= ""
Local aItems  		:= { STR0010,STR0011,STR0065,STR0068,STR0150 } //"1-Perda"###"2-Saida"###"Transf."###"4-Devol."###"5-Outros".
Local oCbx
Local oDlg
Local cSavCur 		:= SetCursor()
Local nNumAno 		:= 0
Local lContinua 	:= .T.
Local nPerAno 		:= 0
Local dLei102 		:= GetMV("MV_DATCIAP")
Local lCredito 		:= .F.
Local cLoteFis 		:=""
Local cArqFis  		:=""
Local nHdlPrv		:= 0
Local nTotalFis		:= 0
Local c755			:=""
Local aCT5      	:= {}
Local lHeader 		:= .F.
Local lContabil 	:= .F.
Local lAglutina 	:= 2
Local lDigita   	:= 2
Local cExParFil		:=	GetNewPar ("MV_FILTRAN", "XXX")
Local cFilTransp	:=	""
Local lLoop			:=	.T.
Local cTitulo		:= ""
Local cMensagem		:= ""
Local cHelp			:= ""
Local aAreaSM0 		:= SM0->(GetArea())
Local lPRatDieAp	:=	GetNewPar("MV_PRORDIE",.F.)	//Indica se o Pro Rata Die deve ser considerado logo na apropriacao. No caso da bahia,
														//  variavel acima, somente deverah ser considerado na emissao do livro, pois ele nao tem
														//  direito a todo o credito possivel no periodo, diferente desta implementacao para SP( http://www.fazenda.sp.gov.br/legis/pcat252001.asp, Art 5., VI - quadro 4, Alinea d).
Local nVlrAprBx		:=	0
Local lAprBx		:=	.T.
Local dUltDtSfa		:=	CToD( "  /  /  " )
Local cUfFor		:= ""
Local lPzDifRS		:= .F.
Local cEstado		:= GetNewPar("MV_ESTADO", "")
Local lMT906CTM		:= ExistBlock("MT906CTM")

If !("XXX"$cExParFil)
	If SF9->(FieldPos(cExParFil)) == 0
		cTitulo		:= STR0105 //"Conteúdo do Parâmetro Inválido"
		cMensagem	:= STR0106 //"O conteúdo do parâmetro MV_FILTRAN está em branco ou o "
		cMensagem	+= STR0107 //"conteúdo informado é inválido, "
		cMensagem   += STR0108 //"o que impossibilita o correto processamento da rotina. "
		cMensagem   += STR0109 //"Para que a rotina continue corretamente, "
		cMensagem	+= STR0110 //"será necessário respeitar a solução proposta abaixo."
		cHelp		:= STR0111 //"Preencher o conteúdo do parâmetro MV_FILTRAN informando: "
		cHelp		+= STR0112 //"<campo da tabela SF9 que contém a filial para qual o ativo está sendo transferido>"
		cHelp		+= STR0113 //" Para maiores referências, consultar a documentação que acompanha a rotina."
		xMagHelpFis(cTitulo,cMensagem,cHelp)
		Return (.T.)
	Else
		cFilTransp	:=	CriaVar (AllTrim (cExParFil))
	Endif
Else
	Help (" ", 1, "NOPARAM",, "MV_FILTRAN", 5, 0)
	Return (.T.)
EndIf

PRIVATE cCliNfs := CriaVar("F9_CLIENTE")
PRIVATE cLojNfs := CriaVar("F9_LOJACLI")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega as perguntas selecionadas                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte("MTA906",.F.)

lContabil := If(mv_par06==1,.T.,.F.)
lAglutina := If(mv_par05==1,.T.,.F.)
lDigita   := If(mv_par04==1,.T.,.F.)

dbSelectArea("SFA")
dbSetOrder(1)
dbSeek(xFilial("SFA")+SF9->F9_CODIGO+Dtos(Ctod("01/01/"+StrZero(Year(dDatabase),4))),.T. )
While (!Eof() .And. xFilial("SFA")==SFA->FA_FILIAL .And.	SFA->FA_CODIGO==SF9->F9_CODIGO)
	If ( SFA->FA_DATA > dDataBase )
		lContinua := .F.
	EndIf

	dUltDtSfa	:=	SFA->FA_DATA

	dbSelectArea("SFA")
	dbSkip()
EndDo

If Month( LastDay( dUltDtSfa )+1 )!=Month( dDataBase )
	lContinua	:=	MsgYesNo( STR0119,;	//"A data base para execução desta rotina de baixa não confere com a data imediatamente posterior a ultima ocorrência CIAP. Confirma mesmo assim ?"
		STR0120)						//"Atenção - Data base não confere!"
EndIf

//Nao permite a baixa do CIAP em um periodo que jah houver outra ocorrencia para o mesmo.
If dUltDtSfa>=dDataBase .And. lContinua
	lContinua	:=	.F.
EndIf

If (lContinua .And. SF9->F9_MOTIVO==" ") .and. ((SF9->F9_ICMIMOB == 0) .or. (SF9->F9_ROTINA=="MATA103"))
	SA2->(DbSetOrder(1))
	IF SA2->(DbSeek(xFilial("SA2")+SF9->F9_FORNECE+SF9->F9_LOJAFOR))
		cUfFor	 := SA2->A2_EST
		IF cUfFor == "RS" .And. cEstado == "RS" .And. SF9->F9_DTEMINE >= CtoD('01/03/2014')
			lPzDifRS := .T.
		EndIf
	EndIf
	//Somente quando o tratamento estiver habilitado.
   	If lPRatDieAp
		//Faco a chamada da funcao de apropriacao somente para calcular o valor do pro rata die que serah criado juntamente com a baixa.
		lAprBx := a906Aprop(,,,@nVlrAprBx,.F.)
		nValor	:=	nValor-nVlrAprBx	//atualizacao do valor a ser apresentado no dialog
		nValOk	:=	nValOk-nVlrAprBx	//atualizacao do valor a ser apresentado no dialog
	EndIf
	lLoop	:=	.T.
	Do While lLoop .And. lAprBx
		cMotivo := aItems[1]
		DEFINE MSDIALOG oDlg FROM 059,038 TO 280,560 TITLE STR0012 PIXEL //"Baixa do CIAP"
		@ 003,004 TO 036,259 OF oDlg  PIXEL
		@ 041,004 TO 095,259 OF oDlg  PIXEL
		@ 010,042 MSGET cCodigo SIZE 37,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 010,136 MSGET cDocNfe SIZE 39,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 010,218 MSGET cSerNfe SIZE 21,09 OF oDlg PIXEL WHEN .F. PICTURE "!!!"
		@ 023,048 MSGET cForNfe SIZE 35,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 023,110 MSGET cLojNfe SIZE 18,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 023,200 MSGET dDatNfe SIZE 39,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 047,022 MSGET cDocNfs SIZE 30,09 OF oDlg PIXEL PICTURE "@!"
		@ 047,075 MSGET cSerNfs SIZE 21,09 OF oDlg PIXEL PICTURE "!!!"
		@ 047,124 MSGET dDatNfs SIZE 39,09 OF oDlg PIXEL PICTURE "@!"
		@ 047,185 MSGET cCliNfs SIZE 35,09 OF oDlg PIXEL F3 "SA1" ;
			When nMotivo<>4 valid Empty(cCliNfs).Or.ExistCpo("SA1",cCliNfs) PICTURE "@!"
		@ 047,236 MSGET cLojNfs SIZE 18, 11 OF oDlg PIXEL ;
			When nMotivo<>4 Valid Empty(cLojNfs).Or.ExistCpo("SA1",cCliNfs+cLojNfs) PICTURE "@!"
		@ 064,022 MSGET cItemNfe SIZE 21,09 OF oDlg PIXEL  PICTURE "@!"
		@ 064,080 MSGET nValor SIZE 46,09 OF oDlg PIXEL PICTURE "@e 999,999,999.99" VALID ChkValor(nValOk,@nValor,lPzDifRS)
		@ 064,175 COMBOBOX oCbx VAR cMotivo ITEMS aItems SIZE 38,44 OF oDlg PIXEL; //"1-Perda"###"2-Venda"###"3-Transf."###"4-Devol."###"5-Outros"
			ON CHANGE nMotivo := oCbx:nAt
		@ 081,022 MSGET cFilTransp F3 "SM0" SIZE 15,09 OF oDlg PIXEL PICTURE "@!";
			When nMotivo<>4 VALID (Iif (Empty (cFilTransp) .And. "3"$cMotivo, (Help (" ", 1, "FALTADADOS",, STR0067, 5, 0), .F.), Iif("3"$cMotivo,SM0->(dbSeek(cEmpAnt+cFilTransp)),.T.)))
		@ 081,82 MSGET cEspecie SIZE 23,09 OF oDlg PIXEL PICTURE "@!"

		If lPRatDieAp
			@ 082, 180 MSGET nVlrAprBx SIZE 65,09 OF oDlg PIXEL PICTURE "@e 999,999,999.99" WHEN .F.
		EndIf

		@ 011,009 SAY STR0014 		   	SIZE 31,08 OF oDlg PIXEL //"Codigo:"
		@ 024,009 SAY STR0015 	      	SIZE 35,08 OF oDlg PIXEL //"Fornecedor:"
		@ 011,118 SAY STR0016 			SIZE 15,08 OF oDlg PIXEL //"Nfe:"
		@ 011,192 SAY STR0017 			SIZE 16,08 OF oDlg PIXEL //"Serie:"
		@ 024,088 SAY STR0018 			SIZE 18,08 OF oDlg PIXEL //"Loja:"
		@ 024,176 SAY STR0019 			SIZE 18,08 OF oDlg PIXEL //"Data:"
		@ 048,008 SAY STR0020 			SIZE 10,08 OF oDlg PIXEL //"Nfs:"
		@ 048,060 SAY STR0017 			SIZE 13,08 OF oDlg PIXEL //"Serie:"
		@ 048,100 SAY STR0028 		   	SIZE 24,08 OF oDlg PIXEL //"Dt.Saida"
		@ 048,165 SAY STR0021 		   	SIZE 19,08 OF oDlg PIXEL //"Cliente:"
		@ 048,222 SAY STR0018 			SIZE 13,08 OF oDlg PIXEL //"Loja:"
		@ 066,008 SAY STR0148  			SIZE 18,08 OF oDlg PIXEL //"Item:"
		@ 066,062 SAY STR0022 			SIZE 15,08 OF oDlg PIXEL //"Valor:"
		@ 066,131 SAY STR0029 			SIZE 60,08 OF oDlg PIXEL //"Evento:"
		@ 084,008 SAY STR0066 			SIZE 13,08 OF oDlg PIXEL //"Filial:"
		@ 084,062 SAY "Especie" 		SIZE 19,08 OF oDlg PIXEL //"Especie:"

		If lPRatDieAp
			@ 084,120 SAY "Crédito Pro Rata Die" SIZE 60,08 OF oDlg PIXEL
		EndIf

		DEFINE SBUTTON FROM 98,200 TYPE 1 ACTION (nOpcA := 1,oDlg:End()) ENABLE OF oDlg
		DEFINE SBUTTON FROM 98,233 TYPE 2 ACTION (nOpcA := 2,oDlg:End()) ENABLE OF oDlg
		ACTIVATE MSDIALOG oDlg CENTERED

		If (nOpcA==1)
			If (Empty (cFilTransp) .And. "3"$cMotivo)
				Help (" ", 1, "FALTADADOS",, STR0067, 3, 0)
				lLoop	:=	.T.
			Else
				lLoop	:=	.F.
			EndIf
		Else
			lLoop	:=	.F.
		EndIf
	EndDo
	RestArea(aAreaSM0)
	If ( nOpcA == 1 )

		If ( SF9->F9_DTENTNE >= dLei102 )
			lCredito:= .T.
		Else
			lCredito:= .F.
		EndIf

		nNumAno := Year(SF9->F9_DTENTNE)+Iif(lCredito,4,5)-Year(dDataBase)
		cData   := StrZero(Year(SF9->F9_DTENTNE)+nNumAno,4)+StrZero(Month(SF9->F9_DTENTNE),2)+StrZero(Day(SF9->F9_DTENTNE),2)
		dbSelectArea("SFA")
		dbSetOrder(1)
		dbSeek(xFilial("SFA")+SF9->F9_CODIGO,.T. )
		While ( !Eof() .And. xFilial("SFA")==SFA->FA_FILIAL .And.;
				SFA->FA_CODIGO==SF9->F9_CODIGO  )
			If ( SFA->FA_TIPO == "1" )
				nVlEstor += SFA->FA_VALOR
			EndIf
			dbSelectArea("SFA")
			dbSkip()
		EndDo

		If nValor>0

			If lContabil
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica o numero do lote contabil                           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SX5")
				dbSetOrder(1)
				If MsSeek(xFilial()+"09FIS")
					cLoteFis := AllTrim(X5Descri())
				Else
					cLoteFis := "FIS "
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Inicializa o arquivo de contabilizacao                       ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nHdlPrv:=HeadProva(cLoteFis,"MATA906",cUserName,@cArqFis)
				IF nHdlPrv <= 0
					HELP(" ",1,"SEM_LANC")
					lContinua := .F.
				Else
					lHeader := .T.
				EndIf
			EndIf

			//Somente quando o tratamento estiver habilitado.
			If lPRatDieAp
				lAprBx	:=	a906Aprop(,,,@nVlrAprBx,.T.)	//faco a chamada original apos a confirmacao, pois neste momento sera gravado todas as
														  				//	informacoes na tabela SFA e SF9. Serah gerado o registro de Apropriacao - pro rata die
																		//	de acordo com a data base.
				If lHeader
					nTotalFis += DetProva(nHdlPrv,"755","MATA906",cLoteFis,,,,,@c755,@aCT5)
				Endif
			EndIf

			If lAprBx
				Begin Transaction
					RecLock("SFA",.T.)
					SFA->FA_FILIAL := xFilial("SFA")
					SFA->FA_DATA   := dDataBase
					SFA->FA_TIPO   := "2"
					SFA->FA_VALOR  := nValor
					SFA->FA_CODIGO := SF9->F9_CODIGO
					SFA->FA_FATOR  := nNumAno * IIf(lCredito,0.25,0.20)
               	SFA->FA_FATPRO := nNumAno * IIf(lCredito,0.25,0.20)
					SFA->FA_ROTINA := "MATA906"
					SFA->FA_MOTIVO :=ALLTRIM(STR(nMotivo))
					SFA->FA_CREDIT := Iif(lCredito,"1","2") //1-Credito; 2-Debito

					RecLock("SF9")
					SF9->F9_CLIENTE := cCliNfs
					SF9->F9_LOJACLI := cLojNfs
					SF9->F9_DOCNFS  := cDocNfs
               	SF9->F9_ITEMNFS := cItemNfe
					//SF9->F9_SERNFS  := cSerNfs
					SerieNfId("SF9",1,"F9_SERNFS",dDatNfs,cEspecie,cSerNfs)
					SF9->F9_DTEMINS := dDatNfs
				    If !("XXX"$cExParFil)
					    &("SF9->"+AllTrim (cExParFil))	:=	cFilTransp
			   		EndIf
					SF9->F9_BXICMS  += nValor
					If SF9->(F9_BXICMS>0 .And. F9_BXICMS+F9_VLESTOR==F9_VALICMS)
						SF9->F9_MOTIVO  := Str(nMotivo,1)
					Endif

					//Tratamento para indicar que eh uma baixa parcial - Utilizado para montar a legenda
					If SF9->(F9_BXICMS>0 .And. F9_BXICMS+F9_VLESTOR<F9_VALICMS)
						SFA->FA_BAIXAPR := "1"
						SF9->F9_BAIXAPR := "1"
					Else
						SFA->FA_BAIXAPR := "0"
						SF9->F9_BAIXAPR := "0"
					EndIf

					If lMT906CTM
						Execblock("MT906CTM",.F.,.F.,"SFA")
					EndIf

					If lHeader
						nTotalFis += DetProva(nHdlPrv,"755","MATA906",cLoteFis,,,,,@c755,@aCT5)
					Endif

					If lContabil
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Fecha os lancamentos contabeis                               ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lHeader
							RodaProva(nHdlPrv,nTotalFis)
							If nTotalFis > 0
								nTotalFis := 0
								cA100Incl(cArqFis,nHdlPrv,1,cLoteFis,lDigita,lAglutina)
							EndIf
						EndIf
					Endif
				End Transaction
			EndIf
		Endif
	EndIf
Else
	Help(" ",1,"A906BAIXA")
EndIf
return(.T.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A906Estor ³ Autor ³ Eduardo Riera         ³ Data ³ 02.06.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Estorno                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void A906Estorno(Void)                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A906Estor(cAlias,nReg,nOpc,lAutomato)

Local nOpcA   := 0
Local cCodigo := SF9->F9_CODIGO
Local cDocNfe := SF9->F9_DOCNFE
Local cSerNfe := SF9->F9_SERNFE
Local dDatNfe := SF9->F9_DTENTNE
Local cForNfe := SF9->F9_FORNECE
Local cLojNfe := SF9->F9_LOJAFOR
Local cDocNfs := SF9->F9_DOCNFS
Local cSerNfs := SF9->F9_SERNFS
Local dDatNfs := SF9->F9_DTEMINS
Local cCliNfs := SF9->F9_CLIENTE
Local cLojNfs := SF9->F9_LOJACLI
Local cItemNfe:= CriaVar("F9_ITEMNFS")
Local nValor  := 0.00
Local nMotivo := Val(SF9->F9_MOTIVO)
Local cMotivo := ""
Local aItems  := { STR0010,STR0011, STR0065,STR0068,STR0150} //"1-Perda"###"2-Saida"###"3-Transf."###"4-Devol."###"5-Outros"
Local oCbx
Local oDlg
Local lFound  := .F.
Local cSavCur := SetCursor()
Local nRecno :=0
Local cLoteFis 	:=""
Local cArqFis  	:=""
Local nHdlPrv	:= 0
Local nTotalFis	:= 0
Local c756		:=""
Local aCT5      := {}
Local lContinua := .T.
Local lHeader 	:= .F.
Local lContabil := .F.
Local lAglutina := 2
Local lDigita   := 2
Local aRet		:=	{}
Local cFilTransp	:=	""
Local nValApr	:=	0
Local cExParFil	:=	GetNewPar ("MV_FILTRAN", "XXX")
Local cTitulo	:= ""
Local cMensagem	:= ""
Local cHelp		:= ""
Local aRecSfa	:=	{}
Local nI        := 0
Local lPRatDieAp:=	GetNewPar("MV_PRORDIE",.F.)	//Indica se o Pro Rata Die deve ser considerado logo na apropriacao. No caso da bahia,
														//  variavel acima, somente deverah ser considerado na emissao do livro, pois ele nao tem
														//  direito a todo o credito possivel no periodo, diferente desta implementacao para SP( http://www.fazenda.sp.gov.br/legis/pcat252001.asp, Art 5., VI - quadro 4, Alinea d).
Local 	c755	:=	""
Local	nCtdDel	:=	0
Local dUltDtBx	:= CToD("")
Local dUltDtApr	:= CToD("")

Default lAutomato:= .F.

If !("XXX"$cExParFil)
	If SF9->(FieldPos(cExParFil)) == 0
		cTitulo		:= STR0105 //"Conteúdo do Parâmetro Inválido"
		cMensagem	:= STR0106 //"O conteúdo do parâmetro MV_FILTRAN está em branco ou o "
		cMensagem	+= STR0107 //"conteúdo informado é inválido, "
		cMensagem   += STR0108 //"o que impossibilita o correto processamento da rotina. "
		cMensagem   += STR0109 //"Para que a rotina continue corretamente, "
		cMensagem	+= STR0110 //"será necessário respeitar a solução proposta abaixo."
		cHelp		:= STR0111 //"Preencher o conteúdo do parâmetro MV_FILTRAN informando: "
		cHelp		+= STR0112 //"<campo da tabela SF9 que contém a filial para qual o ativo está sendo transferido>"
		cHelp		+= STR0113 //" Para maiores referências, consultar a documentação que acompanha a rotina."
		xMagHelpFis(cTitulo,cMensagem,cHelp)
		Return (.T.)
	Else
		cFilTransp	:=	CriaVar (AllTrim (cExParFil))
	Endif
Else
	Help (" ", 1, "NOPARAM",, "MV_FILTRAN", 5, 15)
	Return (.T.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega as perguntas selecionadas                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte("MTA906",.F.)

If lAutomato
	aRet	:= {2,"S",{"",""}}
Else
	aRet	:=	SelOpc ()
EndIf

If (aRet[1]==2)
	A906CanApr (aRet[2], aRet[3])
	Return (Nil)
ElseIf (aRet[1]==999)
	Return (Nil)
EndIf

lContabil := If(mv_par06==1,.T.,.F.)
lAglutina := If(mv_par05==1,.T.,.F.)
lDigita   := If(mv_par04==1,.T.,.F.)
nCtdBx	  := 0

dbSelectArea("SFA")
dbSetOrder(1)
dbSeek(xFilial("SFA")+cCodigo,.T.)

While ( !Eof() .And. SFA->FA_CODIGO == cCodigo .And. xFilial("SFA")==SFA->FA_FILIAL )

	//Cancelamento da baixa do periodo
	If ( SFA->FA_TIPO=="2" .And. SFA->FA_ROTINA=="MATA906" )
		lFound 		:= 	.T.
		nRecno		:=	SFA->(RECNO())
		aAdd(aRecSfa,{ nRecno, "BX", SFA->FA_DATA, 0 } )
		If SFA->FA_DATA>dUltDtBx
			dUltDtBx	:=	SFA->FA_DATA
		EndIf
	EndIf

	If (SFA->FA_TIPO=="1")
		aAdd( aRecSfa,{ SFA->(RECNO()), "", SFA->FA_DATA, SFA->FA_VALOR } )
		If SFA->FA_DATA>dUltDtApr
			dUltDtApr	:=	SFA->FA_DATA
		EndIf
	EndIf

	dbSelectArea("SFA")
	dbSkip()
EndDo

IF dUltDtApr>dUltDtBx .And. (Month(dUltDtApr)<>Month(dUltDtBx) .Or. Year(dUltDtApr)<>Year(dUltDtBx))
	xMagHelpFis( STR0141,;	//"Cancelamento não permitido"
		STR0142,;	//"O cancelamento solicitado não é permitido porque exite uma apropriação do crédito mais recente."
		STR0143+StrZero(Day(dUltDtApr),2)+"/"+StrZero(Month(dUltDtApr),2)+"/"+Str(Year(dUltDtApr),4)+"" )	//"Primeiramente deve-se efetuar o cancelamento da apropriação e em seguida efetuar o cancelamento da referida baixa. Para isso é necessário que a database do sistema seja igual ou superior a data do ultimo lançamento, "
	lContinua	:=	.F.
EndIf

If lContinua .And. dUltDtBx>dDataBase
	xMagHelpFis( STR0141,;	//"Cancelamento não permitido"
		STR0144,;	//"O cancelamento solicitado não é permitido porque a database do sistema não corresponde ao ultimo lançamento."
		STR0145+StrZero(Day(dUltDtBx),2)+"/"+StrZero(Month(dUltDtBx),2)+"/"+Str(Year(dUltDtBx),4)+"" )	//"Para que seja possível efetuar o cancelamento correto é necessário que a database do sistema seja igual ou superior a data do ultimo lançamento. Neste caso a data deve ser igual ou superior a "
	lContinua	:=	.F.
EndIf

If lContinua
	For nI := 1 To Len(aRecSfa)
		If aRecSfa[nI]<>Nil
			If (aRecSfa[nI,2]=="BX" .And. dUltDtBx<>aRecSfa[nI,3]) .Or.;
				(Empty(aRecSfa[nI,2]) .And. (Month(dUltDtBx)<>Month(aRecSfa[nI,3]) .Or. Year(dUltDtBx)<>Year(aRecSfa[nI,3])))
				nCtdDel++
				aDel(aRecSfa,nI)
				nI	:=	0
			ElseIf Empty(aRecSfa[nI,2])
				nValApr	:=	aRecSfa[nI,4]
			EndIf
		EndIf
	Next nI
	aSize(aRecSfa,Len(aRecSfa)-nCtdDel)

	If ( lFound )	//Se encontrar a baixa do periodo
		SFA->(DBGOTO(nRecno))	//posiciono para pegar o valor da baixa.
		nValor  := SFA->FA_VALOR
		cCodigo := SF9->F9_CODIGO
		cDocNfe := SF9->F9_DOCNFE
		cSerNfe := SF9->F9_SERNFE
		dDatNfe := SF9->F9_DTENTNE
		cForNfe := SF9->F9_FORNECE
		cLojNfe := SF9->F9_LOJAFOR
		cDocNfs := SF9->F9_DOCNFS
		cSerNfs := SF9->F9_SERNFS
		cCliNfs := SF9->F9_CLIENTE
		cLojNfs := SF9->F9_LOJACLI
		cMotivo	:= aItems[Val( SFA->FA_MOTIVO )]

	    If !("XXX"$cExParFil)
	   		cFilTransp	:=	&("SF9->"+AllTrim(cExParFil))
	    EndIf

		cItemNfe:=SF9->F9_ITEMNFS

		DEFINE MSDIALOG oDlg FROM 059,038 TO 280,560 TITLE STR0012 PIXEL //"Baixa do CIAP"
	   	@ 003,004 TO 036,259 OF oDlg  PIXEL
		@ 041,004 TO 095,259 OF oDlg  PIXEL
		@ 010,042 MSGET cCodigo SIZE 37,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 010,136 MSGET cDocNfe SIZE 39,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 010,218 MSGET cSerNfe SIZE 21,09 OF oDlg PIXEL WHEN .F. PICTURE "!!!"
		@ 023,048 MSGET cForNfe SIZE 35,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 023,110 MSGET cLojNfe SIZE 18,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 023,200 MSGET dDatNfe SIZE 39,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 047,022 MSGET cDocNfs SIZE 30,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 047,075 MSGET cSerNfs SIZE 21,09 OF oDlg PIXEL WHEN .F. PICTURE "!!!"
		@ 047,124 MSGET dDatNfs SIZE 39,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 047,185 MSGET cCliNfs SIZE 35,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 047,236 MSGET cLojNfs SIZE 18,11 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 064,022 MSGET cItemNfe SIZE 21,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		@ 064,080 MSGET nValor  SIZE 46,09 OF oDlg PIXEL WHEN .F. PICTURE "@e 999,999,999.99"
		@ 064,175 COMBOBOX oCbx VAR cMotivo ITEMS aItems SIZE 38,44 OF oDlg PIXEL WHEN .F.//"1-Perda"###"2-Venda"###"3-Transf."###"4-Devol."###"5-Outras"
		@ 081,022 MSGET cFilTransp SIZE 15,09 OF oDlg PIXEL WHEN .F. PICTURE "@!"
		If lPRatDieAp
			@ 081,125 MSGET nValApr SIZE 46,09 OF oDlg PIXEL PICTURE "@e 999,999,999.99" WHEN .F.
		EndIf
 		@ 011,009 SAY STR0014 		    SIZE 31,08 OF oDlg PIXEL //"Codigo:"
		@ 024,009 SAY STR0015 	        SIZE 35,08 OF oDlg PIXEL //"Fornecedor:"
		@ 011,118 SAY STR0016 			SIZE 15,08 OF oDlg PIXEL //"Nfe:"
		@ 011,192 SAY STR0017 			SIZE 16,08 OF oDlg PIXEL //"Serie:"
		@ 024,088 SAY STR0018 			SIZE 18,08 OF oDlg PIXEL //"Loja:"
		@ 024,176 SAY STR0019 			SIZE 18,08 OF oDlg PIXEL //"Data:"
		@ 048,008 SAY STR0020 			SIZE 10,08 OF oDlg PIXEL //"Nfs:"
		@ 048,060 SAY STR0017 			SIZE 13,08 OF oDlg PIXEL //"Serie:"
		@ 048,100 SAY STR0028 		    SIZE 24,08 OF oDlg PIXEL //"Dt.Saida"
		@ 048,165 SAY STR0021 		    SIZE 19,08 OF oDlg PIXEL //"Cliente:"
		@ 048,222 SAY STR0018 			SIZE 13,08 OF oDlg PIXEL //"Loja:"
		@ 066,008 SAY STR0148  			SIZE 18,08 OF oDlg PIXEL //"Item:"
		@ 066,062 SAY STR0022 			SIZE 15,08 OF oDlg PIXEL //"Valor:"
		@ 066,131 SAY STR0029 			SIZE 60,08 OF oDlg PIXEL //"Evento:"
		@ 084,008 SAY STR0066 			SIZE 13,08 OF oDlg PIXEL //"Filial:"
		If lPRatDieAp
			@ 084,070 SAY "Crédito Pro Rata Die" SIZE 50,08 OF oDlg PIXEL
		EndIf

		DEFINE SBUTTON FROM 98,200 TYPE 1 ACTION (nOpcA := 1,oDlg:End()) ENABLE OF oDlg
		DEFINE SBUTTON FROM 98,233 TYPE 2 ACTION (nOpcA := 2,oDlg:End()) ENABLE OF oDlg
		ACTIVATE MSDIALOG oDlg CENTERED

		If ( nOpcA == 1 )
			If lContabil
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica o numero do lote contabil                           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SX5")
				dbSetOrder(1)
				If MsSeek(xFilial()+"09FIS")
					cLoteFis := AllTrim(X5Descri())
				Else
					cLoteFis := "FIS "
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Inicializa o arquivo de contabilizacao                       ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nHdlPrv:=HeadProva(cLoteFis,"MATA906",cUserName,@cArqFis)
				IF nHdlPrv <= 0
					HELP(" ",1,"SEM_LANC")
					lHeader := .F.
				Else
					lHeader := .T.
				EndIf
			Endif

			If lHeader
				nTotalFis	:=	0
				nTotalFis 	+= 	DetProva(nHdlPrv,"756","MATA906",cLoteFis,,,,,@c756,@aCT5)
			EndIf

			Begin Transaction
				//Exclusao da baixa e da apropriacao do periodo se houver.(no caso de pro rata die)
				For nI := 1 To Len( aRecSfa )
					SFA->( dbGoTo( aRecSfa[nI][1] ) )
					If (lHeader) .And. Empty( aRecSfa[nI][2] )
						nTotalFis	+=	DetProva (nHdlPrv, "756", "MATA906", cLoteFis,,,,, @c755, @aCT5)
					Endif
					RecLock ("SFA",.F.)
						SFA->(DbDelete ())
					SFA->(MsUnlock ())
				Next nI
				RecLock("SF9")
				SF9->F9_MOTIVO  := " "
				SF9->F9_CLIENTE := ""
				SF9->F9_LOJACLI := ""
				SF9->F9_DOCNFS  := ""
				SF9->F9_SERNFS  := ""
				SF9->F9_DTEMINS := CTOD("//")
				SF9->F9_ITEMNFS := ""
				&("SF9->"+AllTrim (cExParFil))	:=	""
				SF9->F9_VLESTOR	-=	nValApr
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Atualiza o valor estornado³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SF9->F9_BXICMS -= nValor
				IF STR(SF9->F9_BXICMS,18,2)<>STR(SF9->F9_VALICMS,18,2)
					SF9->F9_MOTIVO  :=""
				ENDIF
				If SF9->(F9_BXICMS>0 .And. F9_BXICMS+F9_VLESTOR<F9_VALICMS)
					SF9->F9_BAIXAPR := "0"
				EndIf
				MsUnLock ()
				If lContabil
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Fecha os lancamentos contabeis                               ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lHeader
						RodaProva(nHdlPrv,nTotalFis)
						If nTotalFis > 0
							nTotalFis := 0
							cA100Incl(cArqFis,nHdlPrv,1,cLoteFis,lDigita,lAglutina)
						EndIf
					EndIf
				Endif
			End Transaction
		Endif
	Else
		Help(" ",1,"A906ESTOR")
	Endif
EndIf
Return(Nil)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A906Motivo³ Autor ³ Eduardo Riera         ³ Data ³ 02.06.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Validacao do Motivo                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void A906Motivo(nMotivo)                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function A906Motivo(nMotivo)
Local lRetorno := .F.
If ( nMotivo == 2 .Or. nMotivo == 1 )
	lRetorno := .T.
EndIf
Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A906Aprop ³ Autor ³ Eduardo Riera         ³ Data ³ 02.06.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Apropriacao do CIAP                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void A906Aprop(cAlias,nReg,nOpc)                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function a906Aprop(cAlias,nReg,nOpc,nVlrAprBx,lGrvSfa,lAutomato,aArrayAuto)

Local oDlg
Local nOpcA 	:= 	0
Local cSavCur 	:=	SetCursor()
Local lAprBaixa	:=	Iif( "A906BAIXA"$Upper( ProcName( 1 ) ),.T.,.F. )
Local lRet		:=	.T.

Default lAutomato 	:= .F.
Default nVlrAprBx 	:= 0
Default	lGrvSfa		:= .T.
Default aArrayAuto	:= {}

Pergunte("MTA906",.F.)
// Permite apenas a apropriação para Filial corrente.
If ((SF9->F9_FILIAL) <> cFilOri)
	Alert("O Bem selecionado não corresponde a Filial corrente!")
	Return (.F.)
EndIf

//If (SF9->F9_TIPO) == "01" .OR. lMVAprComp // TIPO 02 - Bem em construção não pode apropriar;

	If lAutomato
		nTotTrib 	:= aArrayAuto[1][2]
 		nTot 		:= aArrayAuto[1][3]
 		nCoefApr	:= aArrayAuto[1][4]

		lRet := a906Processa(lAprBaixa,@nVlrAprBx,lGrvSfa)
	Else
		If (lGrvSfa)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Carrega as perguntas selecionadas                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			If lAprBaixa
				nOpcA	:=	1
				Processa({|| lRet := a906Processa(lAprBaixa,@nVlrAprBx,lGrvSfa)})
			Else
				FormBatch(OemtoAnsi(STR0023),{; //"Apropriacao do Estorno Mensal - CIAP"
						  OemToAnsi(STR0024),;  //"Esta rotina realizara a apropriacao referente ao Estorno"
						  OemToAnsi(STR0025),;  //"Mensal do Credito de ICMS do Ativo Permanente conforme os"
						  OemToAnsi(STR0026)},; //"parametros solicitados.                                 "
				{ { 5,.T.,{|o| Pergunte("MTA906",.T.)}},;
				{ 1,.T.,{|o| nOpcA := 1, o:oWnd:End()}},;
				{ 2,.T.,{|o| o:oWnd:End()}}})
				If ( nOpcA == 1 )
					Processa({|| lRet := a906Processa(lAprBaixa,@nVlrAprBx,lGrvSfa)})
				EndIf
			EndIf
		Else
			FormBatch(OemtoAnsi(STR0023),{; //"Apropriacao do Estorno Mensal - CIAP"
					  OemToAnsi(STR0121),;	//"Será executado o calculo para geração da parcela referente ao pro rata die de acordo"
					  OemToAnsi(STR0122),;	//"com a data base de execução desta rotina, portanto é necessário que se confirme a"
					  OemToAnsi(STR0123),;	//"data base atual para prosseguir com o processamento. Além da parcela de baixa, este"
					  OemToAnsi(STR0124)},;	//"crédito crédito (pro rata die) também será gerado."
			{ { 5,.T.,{|o| Pergunte("MTA906",.T.)}},;
			{ 1,.T.,{|o| nOpcA := 1, o:oWnd:End()}},;
			{ 2,.T.,{|o| o:oWnd:End()}}})
			If ( nOpcA == 1 )
				Processa({|| lRet := a906Processa(lAprBaixa,@nVlrAprBx,lGrvSfa)})
			EndIf
		EndIf
	EndIf
//Else

	//xMagHelpFis( STR0151,;	//"Atenção!"
	//			   STR0152,;	//"O item selecionado não pode ser apropriado por se tratar de um Componente"
	//			   STR0153)	    //"Ajuste o cadastro do bem para transformá-lo em um BEM, F9_TIPO diferente de 03, ou selecione um um item que não seja do tipo COMPONENTE"

//	lRet := .T.
//	nOpcA := 0
//EndIf

Return(nOpcA==1 .And. lRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A906Proces³ Autor ³ Eduardo Riera         ³ Data ³ 02.06.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Apropriacao do CIAP                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void A906Processa(Void)                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function a906Processa(lAprBaixa,nVlrAprBx,lGrvSfa)
	Local 	dData		:=	LastDay(MV_PAR01)
	Local 	nFator		:= 	NoRound(MV_PAR02,TamSX3("FA_FATOR")[2])
	Local	nFator2		:=	NoRound(MV_PAR03,TamSX3("FA_FATOR")[2])
	Local	lContinua	:=	.T.
	Local 	nValor		:= 	0.00
	Local 	nVLDBAtivo	:= 	0.00
	Local	nValComp	:=	0
	Local	nFatorC		:=	0
	Local 	nMeses		:= 	0
	Local 	nLimite		:= 	0
	Local 	dLei102 	:= 	SuperGetMv ("MV_DATCIAP")
	Local 	lCredito	:= 	.F.
	Local 	cLoteFis	:=	""
	Local 	cArqFis 	:=	""
	Local 	dUltBaixa 	:= 	CToD ("  /  /  ")
	Local 	nHdlPrv		:= 	0
	Local 	nTotalFis	:= 	0
	Local 	c755		:=	""
	Local 	aCT5      	:= 	{}
	Local 	lContabil 	:= 	Iif (MV_PAR06==1, .T., .F.)
	Local 	lAglutina 	:= 	Iif (MV_PAR05==1, .T., .F.)
	Local 	lDigita  	:= 	Iif (MV_PAR04==1, .T., .F.)
	Local 	lHeader 	:= 	.F.
	Local 	lApropria 	:= 	.T.
	Local 	lValido   	:= 	.T.
	Local 	lSN1      	:= 	.F. //SN1->(RetIndex ("SN1")>=4)
	Local 	dUltApr		:=	CToD ("  /  /  ")
	Local	lProRataDie	:=	AllTrim (SuperGetMv ("MV_ESTADO"))=="BA" 			//Esta variavel define se devo apropriar proporcional aos dias do ativo baixado, pois utilizo este valor para montar o pro-rata do modelo C para o estado da BA.
																				//	Caso nao seja o estado da BA, somente aproprio o mes que em que nao houver baixa do ativo, conforme legislacao.
	Local	lPRatDieAp	:=	GetNewPar("MV_PRORDIE",.F.)	//Indica se o Pro Rata Die deve ser considerado logo na apropriacao. No caso da bahia,
															//  variavel acima, somente deverah ser considerado na emissao do livro, pois ele nao tem
															//  direito a todo o credito possivel no periodo, diferente desta implementacao para SP( http://www.fazenda.sp.gov.br/legis/pcat252001.asp, Art 5., VI - quadro 4, Alinea d).
    Local lRndCiap		:=	GetNewPar("MV_RNDCIAP",.T.)		// Parametro para arredondamento da apropriacao
	Local lQuery		:=	.F.
	Local nFracaM		:=	1
	Local lRet			:=	.T.
	Local lConfApr		:=	.T.
	Local lExib2		:=	.F.
	Local lExib3		:=	.F.
	Local nUpf			:=  MV_PAR12
	Local aAprop        := {}
    Local lIntAtf       := .F.
	Local lMT906CTM     := ExistBlock("MT906CTM")
	Local lFTCIAP	    :=  Iif(GetMV("MV_FTCIAP")=="S",.T.,.F.)
	Local nRecSN1		:= 0
	Local cOrig			:= ""
	Local cGrup			:= ""
	Local nFrete		:= 0
	Local nLC102 		:= SuperGetMv ("MV_LC102")
	Local cEstado		:= SuperGetMv("MV_ESTADO")

	Local lF9SIMPNAC 	:= SF9->(FieldPos("F9_SIMPNAC")) > 0
	Local cSimpNac		:= ""
	
	#IFDEF TOP
		Local	cAliasQuery	:=	"a906Processa"
		Local 	cQuery 		:= 	""
		lQuery				:=	.T.
	#ENDIF

	//Verifica se existe o quarto indice da tabela SN1
	If SIX->(dbSeek("SN1"+"4"))
		lSN1	:= .T.
	EndIF

	//Quando estiver efetuando a apropriacao atraves da funcao de baixa, nao contabilizo aqui e sim na funcao de baixa.
	If lContabil .And. !lAprBaixa
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o numero do lote contabil                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea ("SX5")
		SX5->(DbSetOrder (1))
		If (MsSeek (xFilial("SX5")+"09FIS"))
			cLoteFis := AllTrim (X5Descri ())
		Else
			cLoteFis := "FIS "
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa o arquivo de contabilizacao                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nHdlPrv	:=	HeadProva (cLoteFis, "MATA906",cUserName, @cArqFis)
		IF (nHdlPrv<=0)
			HELP(" ",1,"SEM_LANC")
			lContinua	:=	.F.
		Else
			lHeader		:=	.T.
		EndIf
	Endif

	//Quando vier da funcao a906baixa jah estah posicionado no SF9 correto.
	If !lAprBaixa
		DbSelectArea ("SF9")
			ProcRegua (SF9->(LastRec ()), 24)
		SF9->(DbSetOrder (1))
		SF9->(DbSeek (xFilial ("SF9")+MV_PAR09, .T.))
	EndIf
	Do While !(SF9->(Eof ())) .And.;
		((xFilial ("SF9")==SF9->F9_FILIAL .And. SF9->F9_CODIGO<=MV_PAR10 .And. lContinua) .Or. lAprBaixa)

		If SF9->F9_TIPO $ "02|03" .AND. !lMVAprComp
			SF9->(DbSkip())
			Loop
		EndIf

		lValido 	:=	.T.
		lApropria	:=	.T.

		If (SF9->F9_DTENTNE>=dLei102)
			lCredito := .T.
			nLimite  := nLC102
			//Nao permite fazer a apropriacao se nao houver movimentacao de saida no periodo
			//com excessao do ES conforme legislacao no chamado SDKZQR
			If nTot==0 .AND. AllTrim(cEstado)<>"ES"
				lRet := .F.
				Exit
			Endif
			If nFator2==0
				If !lExib3
					lRet := MsgYesNo(STR0126 + " " + STR0008 + "?",	STR0125)
					lExib3 := .T.
				EndIf
				If !lAprBaixa .And. !lRet
					SF9->(DbSkip())
					Loop
				Else
				   If !lRet
						Exit
					EndIf
				EndIf
			EndIf
		Else
			lCredito := .F.
			nLimite  := 60
			// Nao permite fazer a apropriacao se nao houver movimentacao de saida no periodo
			If nTot==0
				lRet := .F.
				Exit
			Endif
			If (nFator==0)
				lRet := MsgYesNo(STR0126 + " " + STR0008 + "?",	STR0125)
				If !lAprBaixa .And. !lRet
					SF9->(DbSkip())
					Loop
				Else
				   If !lRet
						Exit
					EndIf
				EndIf
			EndIf
		EndIf

		M906ENCSN1(SF9->F9_CODIGO, SF9->F9_FILIAL, @nRecSN1, @cOrig, @cGrup)

		If nRecSN1 > 0 .And. SF9->F9_ICMIMOB > 0 .And. lSN1 .And. !(cGrup >= MV_PAR07 .And. cGrup <= MV_PAR08)
			lValido := .F.
		EndIf

		//TRATAMENTO PARA NAO APROPRIAR BENS BAIXADOS PELO ATIVO.
		If SF9->F9_BXICMS <> 0 .And. SF9->F9_DTEMINS <= MV_PAR01 .And. SF9->F9_MOTIVO <> "3" .And. lSN1 .And. SF9->F9_BXICMS >= SF9->F9_VALICMS
			lValido := .F.
		EndIf

		//TRATAMENTO PARA NÃO PERMITIR APROPRIAÇÃO DE BEM QUE TIVER DATA DE INÍCIO DE UTILIZAÇÃO POSTERIOR AO PERÍODO DE APROPRIAÇÃO.
		IF !Empty(SF9->F9_DTINIUT).AND. MV_PAR01 < SF9->F9_DTINIUT //Se a data de apropriação for menor que a data de início da utilização então não irá apropriar.
			lValido := .F.
		EndIF
        // Tratamento para nao permitir a apropriacao de BEM que ainda não tenha sido classificado no ativo.
        aAprop  := JaClas906(nRecSN1, cOrig)
        if lValido .and. !aAprop[1]
        	lValido := .F.
        	lIntAtf := aAprop[2]
        endif

		If (lValido)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Se considerarmos que o credito esta sendo calculado para um   ³
			//³  bem que antes era controlado por um outro sistema,  somente ³
			//³  deveremos prosseguir se o campo que controla a quantidade   ³
			//³  restante de parcelas for diferente de ZERO.                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SF9->F9_SLDPARC==0 .And. SF9->F9_QTDPARC<>0
				lApropria	:=	.F.
			Else
				UltBaixa(@dUltBaixa,lProRataDie,@lApropria,IF(lQuery,cQuery,Nil))

				If !(dUltBaixa==MV_PAR01) .And. (lApropria)
					If (Month (dUltBaixa)==Month (MV_PAR01)) .And. (Year (dUltBaixa)==Year (MV_PAR01))
						dUltBaixa 	:=	SToD (StrZero (Year (MV_PAR01), 4)+StrZero (Month (MV_PAR01), 2)+StrZero (Day (dUltBaixa)-1, 2))
					Else
						lApropria	:=	.F.
					EndIf
				EndIf
				dData 		:= 	dUltBaixa
				nMeses		:=	0	//Qtd de parcelas jah apropriadas
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Rotina para permitir somente uma apropriacao por mes.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				DbSelectArea ("SFA")
				SFA->(DbSetOrder (1))
				If (SFA->(DbSeek (xFilial ("SFA")+SF9->F9_CODIGO)))
					#IFDEF TOP
						cQuery	:=	"SELECT MAX(SFA.FA_DATA) FADATA, COUNT(SFA.FA_DATA) FAQTDREG FROM "+RetSqlName ("SFA")+" SFA WHERE SFA.FA_FILIAL='"+xFilial("SFA")+"' AND SFA.FA_CODIGO='"+SF9->F9_CODIGO+"' AND SFA.D_E_L_E_T_='' AND SFA.FA_TIPO='1' "
						//
						cQuery := ChangeQuery (cQuery)
						dbUseArea (.T., "TOPCONN", TcGenQry (,, cQuery), cAliasQuery)
						//
						dUltApr	:=	SToD ((cAliasQuery)->FADATA)
						nMeses	:=	(cAliasQuery)->FAQTDREG
						//
						(cAliasQuery)->(DbCloseArea ())
					#ELSE
						cCodigo	:=	SFA->FA_CODIGO
						Do While cCodigo==SFA->FA_CODIGO
							If (SFA->FA_TIPO=="1")
								dUltApr	:=	SFA->FA_DATA
								nMeses++
							EndIf
							SFA->(DbSkip ())
						EndDo
					#ENDIF

					//verificacao da existencia de apropriacoes no periodo, evitando refazer e obrigando o cancelamento e o recalculo
					If (Month (dUltApr)>=Month (MV_PAR01) .And. Year (dUltApr)>=Year (MV_PAR01))
						/*
						If !lExib1
							xMagHelpFis( STR0128,;	//"Atenção - Encontrada outra ocorrência!"
								STR0129,;			//"Já foi encontrada outra ocorrência de apropriação CIAP para a data de referência informada nos parâmetros de execução da rotina."
								STR0130)			//"Verificar uma data válida para execução da rotina ou estornar os valores para que seja possível refazer."
							lExib1	:=	.T.
						*/
							lRet	:=	.F.
						//EndIf
						lApropria	:=	.F.
					EndIf

					//Aviso de processamento fora de sequencia de data
					If Month( LastDay( dUltApr )+1 )!=Month( MV_PAR01 ) .And. lApropria .And. ((nMeses>=0) .And. (nMeses + 1<=nLimite) .And. (SF9->F9_DTENTNE<=dData))
						If !lExib2
							lConfApr	:=	MsgYesNo(  STR0131,;	//"A data referência informada no parâmetro para execução desta rotina de apropriação não confere com a data imediatamente posterior a ultima ocorrência CIAP. Confirma mesmo assim ?"
								STR0132)							//"Atenção - Data referência não confere!"
							lExib2	:=	.T.
							lRet	:=	lConfApr
						/*ElseIf lExib2
							lApropria	:=	.F.
							lRet	:=	.F.
							*/
						EndIf
						lApropria	:=	lConfApr
					EndIf
				Else
					lApropria	:=	.T.
				EndIf
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Se todas as consistencias forem validadas, executo a apropriacao³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (lApropria)
		
				DbSelectArea("SF1")
				SF1->(DbSetOrder(1))
				If SF1->(DbSeek(xFilial("SF1")+SF9->F9_DOCNFE+SF9->F9_SERNFE+SF9->F9_FORNECE+SF9->F9_LOJAFOR))
					nFrete   := SF1->F1_FRETE
					cSimpNac := Iif(SF1->F1_SIMPNAC=="1","1","2")
				Else 
					SA2->(DbSetOrder(1))
					If 	SA2->(DbSeek(xFilial("SA2")+SF9->F9_FORNECE+SF9->F9_LOJAFOR))
						cSimpNac := Iif(SA2->A2_SIMPNAC=="1","1","2")
					EndIf
				EndIf
				
				nVlrICM := SF9->F9_VALICMS - Iif(lFTCIAP .And. nFrete > 0 ,SF9->F9_VALFRET, 0) + ;
						   Iif(SF9->F9_VALICMP + SF9->F9_VALFRET > SF9->F9_VALICMS, SF9->F9_VALFRET,0) 
						    // Iif adcionado para trativa a cenarios anterires a nova modalidade estabelecida para tratativa do frete no campo F9_VALICMS 
							// Para atendimento especifico ao DSERFISE-5064, foi incluida esta solução, também replicada para o fonte MATR995 para;
							// Definição do valor correto para a variavel "nValEnt" a estes cenarios antigos
				If (SF9->F9_QTDPARC<>0)
					nMeses := nLimite - SF9->F9_SLDPARC
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Nao posso pegar do MV_LC102, pois nem todos os bens sao controlados desde o inicio ou exatamente                    ³
					//³o numero de parcelas definido no paramentro, por isso que este campo contem as parcelas corretas a serem creditadas.³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nFator 		:= 	Iif (MV_PAR02==0, 0, NoRound( MV_PAR02, TamSX3("FA_FATOR")[2]) *1/SF9->F9_QTDPARC)
					nFator2		:= 	Iif (MV_PAR03==0, 0, NoRound( MV_PAR03, TamSX3("FA_FATOR")[2]) *1/SF9->F9_QTDPARC)
				Else
					nFator 		:= 	Iif (MV_PAR02==0, 0, NoRound( MV_PAR02, TamSX3("FA_FATOR")[2]) *1/nLC102)
					nFator2		:= 	Iif (MV_PAR03==0, 0, NoRound( MV_PAR03, TamSX3("FA_FATOR")[2]) *1/nLC102)
					nMeses      :=  nMeses+1
				EndIf
				//
				If ((nMeses>=0) .And. (nMeses<=nLimite) .And. (SF9->F9_DTENTNE<=dData))
					If ( lCredito )
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Calculando fator FCA.³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nFatorC := (nFator2/Day(LastDay(dUltBaixa)))*Day(dUltBaixa)
						If (MV_PAR11<>0)
							If (SF9->F9_BXICMS==0)
								nValor	:=	(((nVlrICM/SF9->F9_FCA)*MV_PAR11)*nFator2/Day (LastDay (dUltBaixa)))*Day (dUltBaixa)
								nValComp:=  SF9->(F9_VALICCO/F9_QTDPARC)*nFatorC
							Else
								nValor	:=	ABS((((nVlrICM-SF9->F9_BXICMS)/SF9->F9_FCA)*MV_PAR11)*nFator2/Day (LastDay (dUltBaixa)))*Day(dUltBaixa)
								nValComp:=  SF9->(F9_VALICCO/F9_QTDPARC)*nFatorC
							EndIf
						Else
							If (SF9->F9_BXICMS==0)
								nValor 	:= 	((nVlrICM)*nFator2/Day (LastDay (dUltBaixa)))*Day (dUltBaixa)
								nValComp:=  SF9->(F9_VALICCO/F9_QTDPARC)
							Else
								nValor 	 :=  ABS(((nVlrICM-SF9->F9_BXICMS)*nFator2)/Day (LastDay (dUltBaixa)))*Day (dUltBaixa)
								nValComp :=  SF9->(F9_VALICCO/F9_QTDPARC)
							EndIf
						EndIf
					Else
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Calculando fator FCA.³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nFatorC := (nFator/Day(LastDay(dUltBaixa)))*Day(dUltBaixa)
						If (MV_PAR11<>0)
							If (SF9->F9_BXICMS==0)
								nValor	:= 	(((nVlrICM/SF9->F9_FCA)*MV_PAR11)*nFator/Day (LastDay (dUltBaixa)))*Day (dUltBaixa)
								nValComp:=  SF9->(F9_VALICCO/F9_QTDPARC)*nFatorC
							Else
								nValor 	:= ABS((((nVlrICM-SF9->F9_BXICMS)/SF9->F9_FCA)*MV_PAR11)*nFator/Day (LastDay (dUltBaixa)))*Day (dUltBaixa)
								nValComp:=  SF9->(F9_VALICCO/F9_QTDPARC)*nFatorC
							EndIf
						Else
							If (SF9->F9_BXICMS==0)
								nValor 	:= 	((nVlrICM)*nFator/Day (LastDay (dUltBaixa)))*Day (dUltBaixa)
								nValComp:=  SF9->(F9_VALICCO/F9_QTDPARC)*nFatorC
							Else
								nValor 	:=	ABS((nVlrICM-SF9->F9_BXICMS)*nFator/Day (LastDay (dUltBaixa)))*Day (dUltBaixa)
								nValComp:=  SF9->(F9_VALICCO/F9_QTDPARC)*nFatorC
							EndIf
						EndIf
					EndIf
					// O valor somente sera arredondado no final do processamento, para aproximar ao maximo o total
					nValor 	:= 	If(lRndCiap,Round (nValor, 2),NoRound(nValor,TamSX3("FA_VALOR")[2]))
					nValComp:=  If(lRndCiap,Round (nValComp, 2),NoRound(nValComp,TamSX3("FA_VALICCO")[2]))
					nFracaM	:=	1
					If lPRatDieAp .And.;
						((Month( dUltBaixa )==Month( SF9->F9_DTENTNE ) .And. Year( dUltBaixa )==Year( SF9->F9_DTENTNE )) .Or.;	//Primeira apropriacao
						nMeses==nLimite-1)																							//Ultima apropriacao
						//Quando for a ultima apropriacao do ativo
						If nMeses==nLimite-1
							nValor	:=	( nValor/Day( LastDay( dUltBaixa ) ) )*( Day( SF9->F9_DTENTNE )-1 )
							nFracaM	:=	( Day( SF9->F9_DTENTNE )-1 )/Day( LastDay( dUltBaixa ) )
						Else//Quando for a primeira apropriacao do ativo
							nValor	:=	(nValor/Day( LastDay( dUltBaixa ) ))*Iif( dUltBaixa-SF9->F9_DTENTNE==0,1,dUltBaixa-SF9->F9_DTENTNE )
							nFracaM	:=	Iif( dUltBaixa-SF9->F9_DTENTNE==0,1,dUltBaixa-SF9->F9_DTENTNE )/Day( LastDay( dUltBaixa ) )
						EndIf
					ElseIf lPRatDieAp .And. lAprBaixa	//Apropriacao normal, periodo cheio
						nValor	:=	nValor*( Day( dDataBase )/Day( LastDay( dUltBaixa ) ) )
						nFracaM	:=	Day( dDataBase )/Day( LastDay( dUltBaixa ) )
					EndIf
					nVlrAprBx	:=	nValor
					//Parcelar baixa do ativo
					nVLDBAtivo	:=  SF9->(F9_VLDBATV / F9_QTDPARC)
					//Quando esta funcao eh chamada atraves da funcao a906baixa pela primeira vez, somente devo calcular
					//e retornar o valor residual do pro rata die, somente gravarei o SFA na segunda chamada.
					If lGrvSfa
						DbSelectArea ("SFA")
							SFA->(DbSetOrder (1))
						Begin Transaction
							If (SFA->(DbSeek (xFilial ("SFA")+SF9->F9_CODIGO+DToS (dData)+"1")))
								If lHeader .And. !lAprBaixa
									nTotalFis	+=	DetProva (nHdlPrv, "756", "MATA906", cLoteFis,,,,, @c755, @aCT5)
								Endif
								RecLock ("SFA", .F.)
							Else
								RecLock ("SFA", .T.)
							EndIf
							SFA->FA_FILIAL	:= 	xFilial ("SFA")
							SFA->FA_CODIGO 	:= 	SF9->F9_CODIGO
							SFA->FA_DATA   	:= 	Iif( lAprBaixa,dDataBase,dData )
							SFA->FA_FATOR  	:= 	Iif (lCredito, MV_PAR03, MV_PAR02)
                        	SFA->FA_FATPRO  := Iif (lCredito, nFator2, nFator)
							SFA->FA_VALOR  	:= 	nValor
							SFA->FA_TIPO   	:= 	"1"
							SFA->FA_ROTINA 	:= 	"MATA906"
							SFA->FA_CREDIT 	:= 	Iif (lCredito, "1", "2") //1-Credito;2-Debito
							SFA->FA_TOTTRIB := nTotTrib
							SFA->FA_TOTSAI  := nTot
							If lPRatDieAp
								SFA->FA_FRACAOM	:=	nFracaM
							EndIf
							SFA->FA_FCA    	:=	MV_PAR11
		                    //Taxa UPF na Apropriacao
							SFA->FA_TXUPF := nUpf
							If SF9->F9_VALICCO > 0
								SFA->FA_VALICCO :=	nValComp
							EndIf
							//Diferencial aliquota de Mercadoria para o ativo imobilizado
							SFA->FA_VLDBATV :=	nVLDBAtivo
							If lMT906CTM
								Execblock("MT906CTM",.F.,.F.,"SFA")
							EndIf
							MsUnLock ()
							RecLock ("SF9", .F.)
								SF9->F9_VLESTOR += SFA->FA_VALOR

								If (SF9->F9_QTDPARC<>0) .And. (SF9->F9_SLDPARC<>0)
									SF9->F9_SLDPARC -= 1
								EndIf
								If lF9SIMPNAC .and. Empty(SF9->F9_SIMPNAC)
									SF9->F9_SIMPNAC := cSimpNac
								Endif
							MsUnLock ()
							//Quando estiver efetuando a apropriacao atraves da funcao de baixa, nao
							//	contabilizo aqui e sim na funcao de baixa.
							If lHeader .And. !lAprBaixa
								nTotalFis	+=	DetProva (nHdlPrv, "755", "MATA906", cLoteFis,,,,, @c755, @aCT5)
							Endif
						End Transaction
					EndIf
				EndIf
			EndIf
		Else
			If lIntAtf
				Alert("Operação não efetuada, pois existe integração com o SIGAATF, portanto deverá classificar o bem no módulo Ativo Fixo e posteriormente apropriar o CIAP!")
			EndIf
		EndIf
		//Se estiver sendo chamado atraves de uma funcao de baixa, somente sera executado para o SF9 posicionado.
		If lAprBaixa
			Exit
		Else
			SF9->(DbSkip ())
			IncProc (24)
		EndIf

	EndDo
	//
	If lContabil .And. lHeader .And. !lAprBaixa
		Begin Transaction
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Fecha os lancamentos contabeis                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			RodaProva (nHdlPrv, nTotalFis)
			If (nTotalFis>0)
				nTotalFis	:=	0
				cA100Incl (cArqFis, nHdlPrv, 1, cLoteFis, lDigita, lAglutina)
			EndIf
		End Transaction
	Endif
Return (lRet)
/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ ChkValor ³ Autor ³ Edstron E. C. Rosario ³ Data ³ 10/04/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica a validacao do valor da baixa                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ChkValor()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA906                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ChkValor(nValOk,nValor)
Local 	nFator2		:= 	0
Local 	dUltBaixa 	:= 	CToD ("  /  /  ")
Default lPzDifRS 	:= .F.
nFator2:= NoRound( Iif (MV_PAR03==0, 0, MV_PAR03*1/(IIF(lPzDifRS,24,SuperGetMv ("MV_LC102") ))) ,TamSX3("FA_FATOR")[2])

If AllTrim (SuperGetMv ("MV_ESTADO"))<>"BA"
	IF nValor>nValOk .OR. nValor<0
		nValor :=nValOk
		Return(nValor)
	ENDIF
Else
   UltBaixa(@dUltBaixa)
   If SF9->F9_BXICMS > 0
   		nValor := ABS((SF9->F9_VALICMS-SF9->F9_BXICMS)*nFator2/Day (LastDay (dUltBaixa)))*Day (dUltBaixa)
   EndIf
   Return(nValor)
Endif
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SelOpc    º Autor ³Gustavo G. Rueda    º Data ³  01/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Funcao de selecao da opcao de baixa, permite baixar a apro- º±±
±±º          ³ priacao erronea                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function SelOpc ()
	Local	nOpcao	:=	1
	Local	oTipo
	Local	oCbx
	Local	cCbx
	Local	aCbx	:=	{"S="+STR0062,"T="+STR0063}
	Local	dData	:=	CToD ("  /  /  ")
	Local	nOpcBt	:=	1
	Local	aRet	:=	{}
	Local	aFiltro	:=	{"",""}
	//
	DEFINE MSDIALOG oSelOpcDlg FROM 325,396 TO 559,612 TITLE OemToAnsi(STR0064) PIXEL
	@ 05, 05 TO 115, 105 OF oSelOpcDlg PIXEL
  	@ 11, 10 RADIO oTipo VAR nOpcao PROMPT OemToAnsi(STR0039),OemToAnsi(STR0040) ON CHANGE (oCbx:lReadOnly := (nOpcao==1), oFiltro:lReadOnly := (("S"$cCbx) .Or. (nOpcao==1))) OF oSelOpcDlg PIXEL SIZE 75,12
  	@ 40, 10 TO 110, 100 OF oSelOpcDlg PIXEL
  	@ 45, 15 SAY OemToAnsi (STR0041) OF oSelOpcDlg PIXEL
  	@ 55, 15 SAY OemToAnsi (STR0042) OF oSelOpcDlg PIXEL
  	@ 65, 15 SAY OemToAnsi (STR0043) OF oSelOpcDlg PIXEL
  	@ 75, 15 COMBOBOX oCbx VAR cCbx ITEMS aCbx ON CHANGE oFiltro:lReadOnly := !("T"$cCbx) SIZE 80, 12 PIXEL OF oSelOpcDlg
   	DEFINE SBUTTON FROM 92,11 TYPE 02 ACTION (nOpcBt := 1, oSelOpcDlg:End()) ENABLE OF oSelOpcDlg
	DEFINE SBUTTON oFiltro FROM 92,40 TYPE 17 ACTION (nOpcBt := 3, aFiltro := A906Filtro (1, "", "SF9")) ENABLE OF oSelOpcDlg
   	DEFINE SBUTTON FROM 92,70 TYPE 01 ACTION (nOpcBt := 2, oSelOpcDlg:End()) ENABLE OF oSelOpcDlg
    If (nOpcao==1)
		oCbx:lReadOnly := .T.
		oFiltro:lReadOnly := .T.
	Else
		oCbx:lReadOnly := .F.
		oFiltro:lReadOnly := .F.
	EndIf
	ACTIVATE MSDIALOG oSelOpcDlg CENTERED
	//
	If (nOpcBt==1)
		nOpcao	:=	999
	EndIf
	//
	aRet	:=	{nOpcao, cCbx, aFiltro}
Return (aRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A906CanAprº Autor ³Gustavo G. Rueda    º Data ³  01/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Funcao de cancelamento da apropriacao do bem selecionado.   º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC -> cCbx = Em caso de cancelamento de apropriacao este  ³±±
±±³          ³  parametro contem S=Reg. Selec. ou T=Todos Registros.      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A906CanApr (cCbx, aFiltro)
	Local	lRet		:=	.T.
	Local	aAtivo		:=	{}
	Local	cFilA906	:=	""
	Local	bFiltro
	Local	lFiltro		:=	.T.
	Local	aAtuSFA		:=	{}
	Local	cDtUltApr	:=	""
	Local 	lAglutina 	:= 	Iif (MV_PAR05==1, .T., .F.)	//Pergunta da rotina, indica se deve aglutinar os lancamentos contabeis
	Local 	lContabil 	:= 	Iif (MV_PAR06==1, .T., .F.)	//Pergunta da rotina, indica se deve contabilizar on-line
	Local 	lDigita   	:= 	Iif (MV_PAR04==1, .T., .F.)	//Pergunta da rotina, indica se deve exibir os lancamentos contabeis
	Local	cLoteFis	:=	""
	Local	nHdlPrv		:=	0
	Local 	cArqFis  	:= 	""
	Local	lHeader		:=	.F.
	Local	nTotalFis	:=	0
	Local lF9SIMPNAC 	:= SF9->(FieldPos("F9_SIMPNAC")) > 0
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se contabilizar, inicializo o HEADPROVA³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (lContabil)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o numero do lote contabil                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea ("SX5")
			DbSetOrder (1)
		//
		If (MsSeek (xFilial ()+"09FIS"))
			cLoteFis := AllTrim (X5Descri ())
		Else
			cLoteFis := "FIS "
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa o arquivo de contabilizacao                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nHdlPrv := HeadProva (cLoteFis, "MATA906",cUserName, @cArqFis)
		//
		IF (nHdlPrv<=0)
			HELP(" ",1,"SEM_LANC")
		Else
			lHeader := .T.
		EndIf
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Nesta opcao, o 'T=Todos' identifica que o cancelamento sera geral e nao de um so ativo.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (cCbx=="T")
		ProcRegua(SF9->(LastRec()))
		dbSeek(xFilial("SF9"),.T.)
		//
		If Empty(aFiltro[2])
			bFiltro := { || .T. }
		Else
			cFilA906 := "{ || "+aFiltro[2]+" }"
			bFiltro := &(cFilA906)
		Endif
		//
		Do While !SF9->(Eof()) .And. SF9->F9_FILIAL==xFilial("SF9")
			//
			IncProc(STR0044)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica filtro	³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea ("SF9")
			If	!(Eval (bFiltro))
				lFiltro	:=	.F.
				SF9->(DbSkip ())
				Loop
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Funcao de exclusão da apropriacao (Tabela SFA)³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aAtuSFA	:=	AtuSFA (.F., @cLoteFis, @nHdlPrv, lHeader, @nTotalFis, lF9SIMPNAC )
			If (aAtuSFA[1])
				cDtUltApr	:=	StrZero (Day (aAtuSFA[2]), 2)+"/"+StrZero (Month (aAtuSFA[2]), 2)+"/"+StrZero (Year (aAtuSFA[2]), 4)
				aAdd (aAtivo, {SF9->F9_CODIGO, SubStr (AllTrim (SF9->F9_DESCRI), 1, 40), cDtUltApr, Transform (aAtuSFA[3], "@E 999,999.99")})
			EndIf
			//
			lFiltro	:=	.T.
			SF9->(DbSkip ())
		EndDo
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Caso seja um-a-um ativo utilizo esta chamada³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		AtuSFA (.T., @cLoteFis, @nHdlPrv, lHeader, @nTotalFis, lF9SIMPNAC)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Conclusao do lancamento contabil na exclusao³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lHeader .And. lContabil
		Begin Transaction
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Fecha os lancamentos contabeis                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			RodaProva (nHdlPrv, nTotalFis)
			If (nTotalFis>0)
				nTotalFis	:=	0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Funcao de cancelamento.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cA100Incl (cArqFis, nHdlPrv, 1, cLoteFis, lDigita, lAglutina)
			EndIf
		End Transaction
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Nesta opcao, o 'T=Todos' identifica que o cancelamento sera geral e nao de um so ativo.³
	//|- Este IF emite um relatorio de conferencia para todos os ativos que tiveram su apro-  |
	//|  priacao cancelada.                                                                   |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (cCbx=="T")
		If (Len (aAtivo)>0)
			A906ImpAtv (aAtivo)
		ElseIf !lFiltro
			Alert (STR0045)
		EndIf
		If Len (aAtivo)==0
			xMagHelpFis( STR0133,;	//"Atenção - Sem cancelamentos"
				STR0134,;			//"Sem cancelamentos no período de processamento."
				STR0135 )			//"Verifica se a data base corresponde a ultima ocorrência CIAP."
		EndIf
	EndIf
Return (lRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AtuSFA    º Autor ³Gustavo G. Rueda    º Data ³  01/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³Funcao de atualizacao da tabela SFA para o cancelamento     º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpL -> lExbMsg = Flag para exibicao da mensagem de help.   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AtuSFA (lExbMsg, cLoteFis, nHdlPrv, lHeader, nTotalFis, lF9SIMPNAC)
	Local	dUltApr		:=	CToD ("  /  /  ")
	Local	lRet		:=	.T.
	Local 	c755		:=	""
	Local 	aCT5      	:= 	{}
	Local	nValorCanc	:=	0
	Local	cTipoApr	:=	""
	//
	#IFDEF TOP
		Local	cAliasQuery	:=	"A906CanApr"
		Local	cQuery		:=	""
	#ENDIF
	//
	Default	lExbMsg	:=	.T.
	//
	DbSelectArea ("SFA")
	SFA->(DbSetOrder (1))
	If (SFA->(DbSeek (xFilial ("SFA")+SF9->F9_CODIGO)))
		#IFDEF TOP
			cQuery	:=	"SELECT MAX(SFA.FA_DATA) FADATA FROM "+RetSqlName ("SFA")+" SFA WHERE SFA.FA_FILIAL='"+xFilial("SFA")+"' AND SFA.FA_CODIGO='"+SF9->F9_CODIGO+"' AND SFA.D_E_L_E_T_ = '' "
			//
			cQuery := ChangeQuery (cQuery)
			dbUseArea (.T., "TOPCONN", TcGenQry (,, cQuery), cAliasQuery)
			//
			dUltApr	:=	SToD ((cAliasQuery)->FADATA)
			//
			(cAliasQuery)->(DbCloseArea ())

			cQuery	:=	"SELECT SFA.FA_TIPO FROM "+RetSqlName ("SFA")+" SFA WHERE SFA.FA_FILIAL='"+xFilial("SFA")+"' AND SFA.FA_CODIGO='"+SF9->F9_CODIGO+"' AND SFA.FA_DATA='"+DToS(dUltApr)+"'  AND SFA.D_E_L_E_T_ = '' "
			//
			cQuery := ChangeQuery (cQuery)
			dbUseArea (.T., "TOPCONN", TcGenQry (,, cQuery), cAliasQuery)
			//
			cTipoApr	:=	(cAliasQuery)->FA_TIPO
			//
			(cAliasQuery)->(DbCloseArea ())
		#ELSE
			cCodigo	:=	SFA->FA_CODIGO
			Do While cCodigo==SFA->FA_CODIGO
				dUltApr		:=	SFA->FA_DATA
				cTipoApr	:=	SFA->FA_TIPO
				SFA->(DbSkip ())
			EndDo
		#ENDIF
		//
		If cTipoApr=="1"
			If (Year (dDataBase)==Year (dUltApr)) .And. (Month (dDataBase)==Month (dUltApr))
				SFA->(DbSetOrder (1))
				If (SFA->(DbSeek (xFilial ("SFA")+SF9->F9_CODIGO+DToS (dUltApr))))
					If (lHeader)
						nTotalFis	+=	DetProva (nHdlPrv, "756", "MATA906", cLoteFis,,,,, @c755, @aCT5)
					Endif
					//
					nValorCanc	:=	SFA->FA_VALOR
					RecLock ("SF9", .F.)
						SF9->F9_VLESTOR -= nValorCanc
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Atualizo o campo de saldo das parcelas.³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If (SF9->F9_QTDPARC<>0)
							SF9->F9_SLDPARC	+=	1
						EndIf
					MsUnLock ()
					//

					If lF9SIMPNAC .and. !empty(SF9->F9_SIMPNAC) .and. SF9->F9_SLDPARC == SF9->F9_QTDPARC
						RecLock("SF9", .F.)
						SF9->F9_SIMPNAC := ""
						MsUnLock()
					Endif

					RecLock ("SFA", .F.)
						SFA->(DbDelete ())
					MsUnLock ()
				Else
					If (lExbMsg)
						Alert(STR0046)
					EndIf
					lRet	:=	.F.
				EndIf
			Else
				If (lExbMsg)
					Alert (STR0047+" ["+DToC( dUltApr )+"].")
				EndIf
				lRet	:=	.F.
			EndIf
		Else
			If (lExbMsg)
				xMagHelpFis(STR0141,;	//"Cancelamento não permitido..."
					STR0146,;	//"Este cancelamento não é permitido neste momento por não ser o ultimo lançamento deste ativo."
					STR0147+StrZero (Day (dUltApr), 2)+"/"+StrZero (Month (dUltApr), 2)+"/"+StrZero (Year (dUltApr), 4))	//"Para se efetuar o cancelamento da apropriação corretamente, é necessário verificar a BAIXA deste ativo mais recente, da data "
			EndIf
			lRet	:=	.F.
		EndIf
	Else
		If (lExbMsg)
			Alert (STR0048)
		EndIf
		lRet	:=	.F.
	EndIf
Return ({lRet, dUltApr, nValorCanc})
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A906ImpAtv³ Autor ³Gustavo G. Rueda       ³ Data ³ 01.07.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDescri‡„o ³Funcao de impressao dos ativos nao atualizados dentro do mesº±±
±±º          ³ embasado na database do sistema.                           º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA -> aAtivo = Array contendo os ativos nao cancelados.   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A906ImpAtv (aAtivo)
	Local 	aArea		:= 	GetArea ()
	Local 	cPerg		:= 	""	//"MTA906"
	Local 	nOpca		:=	0
	Local	lRet		:=	.T.
	Local 	cTitulo  	:= STR0049
	Local 	cDesc1  	:= STR0050
	Local 	cDesc2  	:= ""
	Local 	cDesc3  	:= ""
	Local 	wnrel   	:= "Mata906"
	Local 	NomeProg	:= "Mata906"
	Local	cString		:=	""
	Local 	Tamanho 	:= 	"P" 	// P/M/G
	Private Limite      :=  80   	// 80/132/220
	Private lEnd    	:= 	.F.		// Controle de cancelamento do relatorio
	Private m_pag   	:= 	1  		// Contador de Paginas
	Private nLastKey	:=	0  		// Controla o cancelamento da SetPrint e SetDefault
	Private aReturn 	:= {STR0058, 1, STR0059, 2, 2, 1, "", 1 }	//"Zebrado"###"Administracao"
	//
	Pergunte (cPerg, .F.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Envia para a SetPrinter                                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	wnrel	:=	SetPrint (cString, NomeProg, cPerg, @cTitulo, cDesc1, cDesc2, cDesc3, .F.,, .F., Tamanho,, .F.)
	//
	If (nLastKey==27)
		Return (lRet)
	Endif
	//
	SetDefault (aReturn, cString)
	//
	If (nLastKey==27)
		Return (lRet)
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Preparacao do inicio de processamento do arquivo pre-formatado          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RptStatus ({|lEnd| A906ImCIAP (aAtivo, cTitulo, NomeProg, Tamanho)}, cTitulo)
	//
	If (aReturn[5]==1)
		Set Printer To
	   	ourspool(wnrel)
	Endif
	MS_FLUSH()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Restaura area ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RestArea (aArea)
Return (lRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A906ImCIAP³ Autor ³Gustavo G. Rueda       ³ Data ³ 01.07.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDescri‡„o ³Funcao de impressao                                         º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA -> aAtivo = Array contendo os ativos nao cancelados.   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A906ImCIAP (aAtivo, cTitulo, NomeProg, Tamanho)
	Local	lRet		:=	.T.
	Local	nLin		:=	99
	Local	aLayout		:=	A906Lay ()
	Local	nI
	//
	For nI := 1 To Len (aAtivo)
		If (nLin>60)
			nLin	:=	1
			cabec (cTitulo, aLayout[4], aLayout[5], NomeProg, Tamanho, 18)
			nLin	:=	9
			FmtLin ({}, aLayout[6],,, @nLin)
		EndIf
		FmtLin (aAtivo[nI], aLayout[7],,, @nLin)
	Next (nI)
	FmtLin ({}, aLayout[3],,, @nLin)
Return (lRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A906Lay   ³ Autor ³Gustavo G. Rueda       ³ Data ³ 01.07.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDescri‡„o ³Funcao de montatgem do layout de impressao                  |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A906Lay (nLay)
	Local	aLayout	:=	{}
	//
	Default	nLay	:=	1
	//
	If (nLay==1)
		aAdd (aLayout, STR0051)
		aAdd (aLayout, STR0052)
		aAdd (aLayout, STR0053)
		aAdd (aLayout, STR0054)
		aAdd (aLayout, STR0055)
		aAdd (aLayout, STR0056)
		aAdd (aLayout, STR0057)
	ElseIf (nLay==2)
		aAdd (aLayout, STR0079)
		aAdd (aLayout, STR0080)
		aAdd (aLayout, STR0081)
	EndIf
Return (aLayout)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A906Filtro ³ Autor ³Gustavo G. Rueda       ³ Data ³ 030/09/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Filtro generico para a entidade escolhida                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³SINTEGRA                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function A906Filtro (nOpc, cFilA906, cEntidade)
	Local oWnd		 := GetWndDefault()
	Local cDesc 	 := ""
	Local lRet 		 := .F.
	Local cDescFiltro:= Iif (!Empty (cFilA906), MontDescr (cEntidade, cFilA906), "")
	Local oDlgFiltro
	Local oDescFiltro
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atualiza a descricao da selecao.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DEFINE MSDIALOG oDlgFiltro FROM  00,00 TO 200,310 TITLE STR0060 PIXEL
		@02,02 TO 75,153 LABEL STR0061 OF oDlgFiltro PIXEL
		@10,05 MSGET oDescFiltro VAR cDescFiltro PICTURE "@!" SIZE 145,60 OF oDlgFiltro PIXEL COLOR CLR_RED WHEN .F.
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Filtro para a selecao dos registros da entidade³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DEFINE SBUTTON FROM 80,55  TYPE 17 ENABLE OF oDlgFiltro ACTION (lRet:=.T.,;
																		cFilA906  := BuildExpr(cEntidade,oWnd),;
																		cDescFiltro := MontDescr(cEntidade,cFilA906),;
																		oDescFiltro:Refresh()) WHEN (nOpc == 1 .OR. nOpc == 2)//Monta o filtro
		DEFINE SBUTTON FROM 80,90  TYPE 1 ENABLE OF oDlgFiltro ACTION oDlgFiltro:End() //Fecha a tela e mantem o filtro
		DEFINE SBUTTON FROM 80,125 TYPE 2 ENABLE OF oDlgFiltro ACTION (	lRet:=.F.,;
																		cDescFiltro:="",;
																		oDescFiltro:Refresh(),;
																		oDlgFiltro:End())// Cancela o filtro
	ACTIVATE MSDIALOG oDlgFiltro CENTERED
Return ({lRet, cFilA906})
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³CoefApr   ³ Autor ³Gustavo G. Rueda       ³ Data ³ 11.05.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDescri‡„o ³Funcao de calculo do coeficiente de apropriacao de acordo   º±±
±±º          ³ com as movimentacoes de saida. Igual o calculado na coluna º±±
±±º          ³ 4 do Livro Ciap (MATR995) modelo A e C.                    º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³dDataDe = Data incial do periodo.                           ³±±
±±³          ³dDataAte = Data Final do periodo.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function CoefApr(dDataDe, dDataAte)
Local cAliasSd2	:=	"SD2"
Local lIcmsDif 	:= 	.F.
Local cCfopExc  := GetNewPar ("MV_CFOPEXC","")
Local cCfopVen	:= GetNewPar ("MV_CIAPCFO","")
Local cCfopVST	:= GetNewPar ("MV_CIAPVST","") //- CFOP cujo tenham a escrituracao usada na coluna outras para o Icms ST (Recolhimento antecipado)
Local cCfopExp	:= GetNewPar ("MV_CFOPEXP","")
Local lCiapTot	:= GetNewPar ("MV_CIAPTOT",.F.)
Local lCiapVer	:= GetNewPar ("MV_CIAPVER",.F.)
Local lMVP3CIAP := GetNewPar ("MV_P3CIAP", .F.)
Local lCiapDev	:= GetNewPar ("MV_CIAPDEV",.F.)
Local cDivCoef	:= GetNewPar ("MV_DIVCOEF","")
Local aResumo   := {}
Local aArea     := GetArea ()
Local nPos      := 0
Local cDataScan := ""
Local nTotalNF  := 0
Local bWhile    := ".T."
Local aStrusd2  := SD2->(dbStruct())
Local cQuery
Local lCFGCOEF := GetNewPar("MV_CFGCOEF",.F.) .AND. AliasIndic("F1G")
Local cMTDCOEF := Alltrim(GetNewPar("MV_MTDCOEF",""))

Local aRCFOPCST		:= {}
Local aRCFOPCSTD	:= {}
Local dDataAtu := dDataDe
Local aArea1
Local aArea2
Local nX := 1

If lCFGCOEF .And. cMTDCOEF $ "1/2" 
	//Aqui fará a composição do coeficiente de apropriação do CIAP através dos cadastros de CFOP e CST.
	//Efetua a query das saídas
	Mta906QryC(dDataDe, dDataAte, "1")
	aArea1 := GetArea()

	If cMTDCOEF == "1"
		//Aqui as devoluções serão geradas automaticamente, sem necessidade de configurar CFOP e CST para as devoluções
		Mta906QryC(dDataDe, dDataAte, "2")
		aArea2 := GetArea()
	Else  // para que quando a variavel  cMTDCOEF não esteja vazia e seja diferente de "1" independente do preenchimento se comporte como se o preenchimento fosse igual a "2" para que não ocorra error.log  
		//Neste método as devoluções NÂO serão geradas automaticamente, necessário configurar o CFOP e o CST
		Mta906QryC(dDataDe, dDataAte, "3")
		aArea2 := GetArea()
	EndIF

	Do while dDataAtu <= dDataAte
		//Interpreta o valor de origem e operando para retornar no array
		//Array das saídas
		aRCFOPCST	:= ProcCoefOp(@aArea1[1], @aRCFOPCST, dDataAtu)
		//Array das devoluções
		aRCFOPCSTD	:= ProcCoefOp(@aArea2[1], @aRCFOPCSTD, dDataAtu)
		//cálculo do coeficiente com base nos valores acumulados das notas
		CaclCoef(@aRCFOPCST, aRCFOPCSTD, cDivCoef,nX)

		//Atualizar o aResumo considerando o aRCFOPCST
		If cDivCoef == "1" .Or. Empty(cDivCoef)
			aAdd(aResumo, {aRCFOPCST[nX][12], ; //Período
							aRCFOPCST[nX][1] + aRCFOPCST[nX][5] + aRCFOPCST[nX][7], ; //Total Tributado
							aRCFOPCST[nX][1] + aRCFOPCST[nX][3] + aRCFOPCST[nX][5] + aRCFOPCST[nX][7], ; //Total
							aRCFOPCST[nX][11]}) //Fator
		ElseIf cDivCoef == "2"
			aAdd(aResumo, {aRCFOPCST[nX][12], ; //Período
							aRCFOPCST[nX][1] + aRCFOPCST[nX][5] + aRCFOPCST[nX][7], ; //Total Tributado
							aRCFOPCST[nX][9], ; //Total
							aRCFOPCST[nX][11]}) //Fator
		ElseIf cDivCoef == "3"
			aAdd(aResumo, {aRCFOPCST[nX][12], ; //Período
							aRCFOPCST[nX][1], ; //Total Tributado
							aRCFOPCST[nX][9], ; //Total
							aRCFOPCST[nX][11]}) //Fator
		EndIf
		dDataAtu := MonthSum(dDataAtu,1)
		nX++
	Enddo

	dbSelectArea(aArea1[1])
	dbCloseArea()
	dbSelectArea(aArea2[1])
	dbCloseArea()

Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Calculando as movimentacoes do SD2                                            ³
	//³Complemento de ICMS (D2_TIPO == "I") nao devera entrar                        ³
	//³no montante de vendas tributadas (seu valor faz parte da nota fiscal original)³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SF4")
	SF4->(DbSetOrder (1))

	DbSelectArea ("SD2")
	SD2->(DbSetOrder (5))

	SetRegua(SD2->(LastRec ()))

	If ExistBlock ("A906CFAP")
		cAliasSD2 := ExecBlock ("A906CFAP", .F., .F., {dDataDe, dDataAte})
		(cAliasSD2)->(DbGoTop ())
	Else
		#IFDEF TOP
			If TcSrvType()<>"AS/400"

				cAliasSD2 := GetNextAlias()

				cQuery := "SELECT D2_EMISSAO, D2_TIPO, D2_TES, D2_CF, SUM(D2_TOTAL) D2_TOTAL ,SUM(D2_SEGURO) D2_SEGURO, "
				cQuery += " SUM(D2_VALFRE) D2_VALFRE, SUM(D2_DESPESA) D2_DESPESA, SUM(D2_VALIPI) D2_VALIPI, "
				cQuery += " SUM(D2_ICMSRET) D2_ICMSRET, SUM(D2_DESCICM) D2_DESCICM, SUM(D2_BASEICM)  D2_BASEICM, SUM(D2_VALBRUT) D2_VALBRUT, "
				cQuery += " SUM(SFT.FT_VALCONT) FT_VALCONT, SUM(SFT.FT_BASEICM) FT_BASEICM, SUM(SFT.FT_OUTRICM) FT_OUTRICM, SUM(SFT.FT_ISENICM) FT_ISENICM, SUM(SFT.FT_TOTAL) FT_TOTAL FROM "
				cQuery +=   RetSqlName("SD2")+" SD2 "
				cQuery += " INNER JOIN "+RetSqlName("SF4")+" SF4  ON (SF4.F4_FILIAL = '"+xFilial("SF4")+"' AND F4_CODIGO = SD2.D2_TES AND F4_LFICM NOT IN ('N','Z') AND SF4.D_E_L_E_T_ = ' ' )"
				cQuery += " INNER JOIN "+RetSqlName("SFT")+" SFT  ON "
				cQuery += " (SFT.FT_FILIAL = '"+xFilial("SFT")+"' AND SFT.FT_TIPOMOV='S'AND SFT.FT_NFISCAL = SD2.D2_DOC AND SFT.FT_SERIE = SD2.D2_SERIE AND SFT.FT_CLIEFOR = SD2.D2_CLIENTE AND SFT.FT_LOJA = SD2.D2_LOJA AND SFT.FT_ITEM = SD2.D2_ITEM AND SFT.D_E_L_E_T_='') "
				cQuery += " WHERE D2_FILIAL = '"+xFilial("SD2")+"'"
				cQuery += " AND D2_EMISSAO BETWEEN '"+dTos(dDataDe)+"' AND '"+dTos(dDataAte)+"'"
				cQuery += " AND D2_TIPO <> 'I'"
				cQuery += " AND (SD2.D2_CF LIKE '5%' OR SD2.D2_CF LIKE '6%' OR SD2.D2_CF LIKE '7%') "
				cQuery += " AND SD2.D_E_L_E_T_ = ' ' "
				cQuery += " AND F4_FILIAL = '"+xFilial("SF4")+"'"
				cQuery += " AND F4_CODIGO = D2_TES "
				cQuery += " AND F4_LFICM NOT IN ('N','Z')"
				If !lMVP3CIAP
					cQuery += " AND F4_PODER3 = 'N'"
				EndIf
				cQuery += " AND SF4.D_E_L_E_T_ = ' ' "
				cQuery += " GROUP BY  D2_EMISSAO, D2_TIPO, D2_TES,D2_CF "

				IF lCiapDev
					cQuery += " UNION ALL "
					cQuery += "SELECT D1_DTDIGIT D2_EMISSAO, D2_TIPO, D2_TES, D2_CF, SUM(D1_TOTAL)*(-1) D2_TOTAL, SUM(D1_SEGURO)*(-1) D2_SEGURO, SUM(D1_VALFRE)*(-1) D2_VALFRE, SUM(D1_DESPESA)*(-1) D2_DESPESA, SUM(D1_VALIPI)*(-1) D2_VALIPI, SUM(D1_ICMSRET)*(-1) D2_ICMSRET, SUM(D1_DESCICM)*(-1) D2_DESCICM, SUM(D1_BASEICM)*(-1) D2_BASEICM, SUM(D1_TOTAL - D1_VALDESC + D1_VALFRE + D1_SEGURO + D1_DESPESA)*(-1) D2_VALBRUT, "
					cQuery += " SUM(SFT2.FT_VALCONT)*(-1) FT_VALCONT, SUM(SFT2.FT_BASEICM)*(-1) FT_BASEICM, SUM(SFT2.FT_OUTRICM)*(-1) FT_OUTRICM, SUM(SFT2.FT_ISENICM)*(-1) FT_ISENICM, SUM(SFT2.FT_TOTAL)*(-1) FT_TOTAL "
					cQuery += "FROM "+RetSqlName("SD1")+" SD1 INNER JOIN "+RetSqlName("SD2")+" SD2 ON (SD2.D2_FILIAL = '"+xFilial("SD2")+"' AND SD2.D2_DOC = SD1.D1_NFORI AND SD2.D2_SERIE = SD1.D1_SERIORI AND SD2.D2_CLIENTE = SD1.D1_FORNECE  AND SD2.D2_LOJA = SD1.D1_LOJA AND SD2.D2_COD = SD1.D1_COD AND SD2.D2_ITEM = SD1.D1_ITEMORI AND SD2.D_E_L_E_T_ = '') "
					cQuery += "INNER JOIN  "+RetSqlName("SFT")+" SFT2  ON "
					cQuery += "(SFT2.FT_FILIAL ='"+xFilial("SFT")+"' AND SFT2.FT_TIPOMOV='E' AND SFT2.FT_NFISCAL = SD1.D1_DOC AND SFT2.FT_SERIE = SD1.D1_SERIE AND SFT2.FT_CLIEFOR = SD1.D1_FORNECE AND SFT2.FT_LOJA = SD1.D1_LOJA AND SFT2.FT_ITEM = SD1.D1_ITEM AND SFT2.D_E_L_E_T_='')"
					cQuery += "WHERE SD1.D1_FILIAL = '"+xFilial("SD1")+"' AND SD1.D1_DTDIGIT BETWEEN '"+dTos(dDataDe)+"' AND '"+dTos(dDataAte)+"' AND SD1.D1_TIPO = 'D' AND SD1.D_E_L_E_T_ = '' "
					cQuery += "GROUP BY D1_DTDIGIT, D2_TIPO, D2_TES, D2_CF "
				EndIf

				cQuery += " ORDER BY D2_EMISSAO"
				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD2)

				aEval(aStruSD2, {|e| If(e[2]!= "C" .And. SD2->(FieldPos(Alltrim(e[1]))) > 0, TCSetField(cAliasSD2, e[1], e[2],e[3],e[4]),Nil)})
			Else
		#ENDIF
				bWhile := "SD2->D2_FILIAL = '"+xFilial('SD2')+"' .AND. SD2->D2_EMISSAO >= cTod('"+dToc(dDataDe)+;
				"') .AND. SD2->D2_EMISSAO <= cTod('"+dToc(dDataAte)+"')"
				SD2->(dbSeek(xFilial("SD2")+dTos(dDataDe),.T.))
		#IFDEF TOP
			EndIf
		#ENDIF
	EndIf

	While !(cAliasSD2)->(Eof ()) .AND. &bWhile
		IncRegua()
		//- Verifica o Tipo e o CFOP utilizado
		If (cAliasSD2)->D2_TIPO == 'I' .or. !Substr((cAliasSD2)->D2_CF,1,1) $ '5/6/7'
			(cAliasSD2)->(dbSkip())
			Loop
		EndIf

		lIcmsDif 	:= 	.F.
		cDataScan	:=	StrZero (Year((cAliasSd2)->D2_EMISSAO), 4)+StrZero (Month((cAliasSd2)->D2_EMISSAO), 2)
		//
		nPos	:=	aScan (aResumo, {|aRes| AllTrim (aRes[1])==cDataScan})

		If (nPos==0)
			aAdd (aResumo, {cDataScan, 0, 0, 0})
			nPos	:=	Len (aResumo)
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Total da Nota Fiscal = D2_TOTAL+D2_VALIPI+D2_ICMSRET                                  ³
		//³As NFs de complemento de IPI (D2_TIPO == "P") gravam o valor                          ³
		//³do complemento de IPI tanto no campo D2_TOTAL quanto no D2_VALIPI.                    ³
		//³Portanto, nestes casos, devera ser somado apenas o campo D2_VALIPI, para nao duplicar.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		/*If (cAliasSD2)->D2_TIPO == "P"
			nTotalNF := (cAliasSD2)->D2_VALIPI+(cAliasSD2)->D2_ICMSRET
		Else
			nTotalNF := ((cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_VALFRE+;
			(cAliasSD2)->D2_DESPESA+(cAliasSD2)->D2_VALIPI+(cAliasSD2)->D2_ICMSRET-(cAliasSD2)->D2_DESCICM)
		Endif*/
		nTotalNF := (cAliasSD2)->FT_VALCONT

		//- POsiciona o TES
		If SF4->(MsSeek (xFilial ("SF4")+(cAliasSD2)->D2_TES))
			lIcmsDif := Iif(lCiapVer .And. SF4->F4_ICMSDIF == "1",.T.,.F.)
			If (SF4->F4_PODER3<>"N" .And. !lMVP3CIAP) .Or. SF4->F4_LFICM$"NZ"
				(cAliasSD2)->(dbSkip())
				Loop
			EndIf
		Else
			(cAliasSD2)->(dbSkip())
			Loop
		EndIf


		/*Conforme regra de calculo do RS Somar colunas (BC + Outras) para compor saídas tributadas *Saídas Tributadas (SaiTrib)*
		https://www.sefaz.rs.gov.br/asp/download/sat/giamen/manualgia.pdf - 6.2 Cálculo do índice CIAP

		Exportação e equiparadas (SaiExp):Somar Coluna Valor Contábil (VC)
		Saídas Isentas/NT (SaiIsNt): Somar Coluna Isentas/NT
		Saídas Tributadas (SaiTrib): Somar colunas (BC + Outras)
		Saídas Equiparadas (SaiEqu):Somar Coluna VC

		(SaiExEq) = (SaiExp) + (SaiEqu)

		Índice CIAP = [(SaiTrib)+(SaiExEq)]/[(SaiTrib)+(SaiExEq)+(SaiIsNt)]*/

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³lCiapVer: indica se, quando o parametro MV_CIAPCFO estiver preenchido, todas as     ³
		//³verificacoes para montagem das colunas de tributadas e total das operacoes devem ser³
		//³feitas (apenas para os movimentos com os CFOPs contidos no parametro).              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Empty(cCfopVen) .Or. (lCiapVer .And. ((!Empty(cCfopVen) .And. Left((cAliasSD2)->D2_CF,4) $ cCfopVen) .Or. lIcmsDif))
			If Substr ((cAliasSD2)->D2_CF, 1, 1)=="7" .Or. (lIcmsDif) .Or. (Left ((cAliasSD2)->D2_CF,4)$cCfopExp) .Or. (Left((cAliasSD2)->D2_CF,4)$cCfopExc)
				If !(Left ((cAliasSD2)->D2_CF,4)$cCfopExc)		//CFOPs de exportacao que nao devem ser considerados.
					aResumo[nPos][2] +=	nTotalNF
					aResumo[nPos][3] += nTotalNF
				EndIf
			ElseIf (SF4->F4_LFICM$"IOB") .And. SF4->F4_CIAPTRB<>"1"//AND o campo F4_CIAPTRB for 2=NAO ou em branco.

				If SF4->F4_BASEICM>0 //F4_CIAPTRB for 1=Sim,Considerar Outros como tributado e efetuar o mesmo calculo que Tributado.
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Quando existe redução de ICMS e o Cliente só pode usar a base de ICMS e não o Total da Nota³
					//³com IPI para o Cálculo do Coeficiente de Apropriação retorno a Base de Cáculo sem a Redução³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					aResumo[nPos][2]	+=	If(lCiapTot,nTotalNF,(cAliasSD2)->(FT_BASEICM+FT_OUTRICM))
					aResumo[nPos][3]	+=	If(lCiapTot,nTotalNF,(cAliasSD2)->(FT_BASEICM+FT_OUTRICM+FT_ISENICM))
				Else
					If lCiapTot .and. ((SF4->F4_LFICM$"O") .And. !Left((cAliasSD2)->D2_CF,4)$cCfopVST) .Or. (SF4->F4_LFICM$"IB")
						aResumo[nPos][2]	+=	0
					Else
						aResumo[nPos][2]	+=	If(lCiapTot,nTotalNF,(cAliasSD2)->(FT_BASEICM+FT_OUTRICM))
					EndIf
					aResumo[nPos][3] += If(lCiapTot,nTotalNF,(cAliasSD2)->(FT_BASEICM+FT_OUTRICM+FT_ISENICM))
				EndIf
			Else
				If (SF4->F4_AGREG$"D")
					aResumo[nPos][2]	+= (cAliasSD2)->D2_VALBRUT
				Else
					aResumo[nPos][2]	+=	If(lCiapTot,nTotalNF,(cAliasSD2)->(FT_BASEICM+FT_OUTRICM))
				Endif
				aResumo[nPos][3]	+=	If(lCiapTot,nTotalNF,(cAliasSD2)->(FT_BASEICM+FT_OUTRICM+FT_ISENICM))
			EndIf
		ElseIf Left((cAliasSD2)->D2_CF,4) $ cCfopVen .Or. lIcmsDif

			If SF4->F4_BASEICM>0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Quando existe redução de ICMS e o Cliente só pode usar a base de ICMS e não o Total da Nota³
				//³com IPI para o Cálculo do Coeficiente de Apropriação retorno a Base de Cáculo sem a Redução³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				aResumo[nPos][2]	+=	If(lCiapTot,nTotalNF,(cAliasSD2)->(FT_BASEICM+FT_OUTRICM))
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Atraves da FNC:6598/2012-00 incluida validacao para que quando           ³
				//³o parametro MV_CIAPVER = .F. e o CFOP da nota fiscal esteja contido      ³
				//³no MV_CIAPCFO o sistema considera como "Saida Tributada" o ICMS          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (!lCiapVer .And. Left((cAliasSD2)->D2_CF,4) $ cCfopVen)
					aResumo[nPos][2]	+=	If(lCiapTot,nTotalNF,(cAliasSD2)->(FT_BASEICM+FT_OUTRICM))
				Else
					If ((SF4->F4_LFICM$"O") .And. !Left((cAliasSD2)->D2_CF,4)$cCfopVST) .Or. (SF4->F4_LFICM$"IB")
						aResumo[nPos][2]	+=	0
					Else
						aResumo[nPos][2]	+=	If(lCiapTot,nTotalNF,(cAliasSD2)->(FT_BASEICM+FT_OUTRICM))
					EndIf
				EndIf
			EndIf
			aResumo[nPos][3]	+= 	If(lCiapTot,nTotalNF,(cAliasSD2)->(FT_BASEICM+FT_OUTRICM+FT_ISENICM))
		Endif

		(cAliasSD2)->(DbSkip ())
	EndDo

	(cAliasSD2)->(DbCloseArea())

	ChkFile("SD2") //- reabre a tabela do SD2

	For nPos := 1 To Len(aResumo)
		If aResumo[nPos][3] <= 0
			aResumo[nPos][4] := 0
		Else
			If aResumo[nPos][2] < 0
				aResumo[nPos][2] := 0
			EndIf
			aResumo[nPos][4] := NoRound(aResumo[nPos][2]/aResumo[nPos][3],TamSX3("FA_FATOR")[2])
		EndIf
	Next nPos

	RestArea (aArea)
EndIF

Return (aResumo)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³SugApr    ³ Autor ³Gustavo G. Rueda       ³ Data ³ 11.05.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDescri‡„o ³Funcao de exibicao de uma sugestao de valores para para o   º±±
±±º          ³ fator de apropriacao.                                      º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³dDataDe = Data incial do periodo.                           ³±±
±±³          ³dDataAte = Data Final do periodo.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function SugApr ()
	Local 	oDlg
	Local 	oDtDe
	Local 	oGrp3
	Local 	oFtAtual
	Local 	oGrp4
	Local	oTotTrib
	Local	oTot
	Local	oCoefApr
	Local 	dDataDe		:=	CToD ("01/"+StrZero (Month (MV_PAR01), 2)+"/"+StrZero (Year (MV_PAR01), 4))
	Local 	dDataAte	:=	CToD (StrZero (Day (LastDay (MV_PAR01)), 2)+"/"+StrZero (Month (MV_PAR01), 2)+"/"+StrZero (Year (MV_PAR01), 4))
	Local 	nFatAtual	:=	Iif (MV_PAR01<GetMV("MV_DATCIAP"), MV_PAR02, MV_PAR03)
	Local 	aResumo		:=	{}
	Local	nOpc		:=	0
	Local	nPos		:=	0
	Local	lMVM906COE	:=	GetNewPar ("MV_M906COE", .T.)
	Local   lHabCoef    := GetNewPar ("MV_HABCOEF", .F.)
	//
	If !(lMVM906COE)
		Return (.T.)
	EndIf
	//
	RptStatus ({|| aResumo := CoefApr (dDataDe, dDataAte)}, "Calculando Coeficiente","Aguarde Cálculo...")
	//
	nPos	:=	aScan (aResumo, {|x| x[1]==SubStr (DToS (MV_PAR01), 1, 6)})
	If (nPos<>0)
		nTotTrib	:=	aResumo[nPos][2]
		nTot		:=	aResumo[nPos][3]
		nCoefApr	:=	aResumo[nPos][4]
	Else
		nTotTrib 	:= 0
		nTot 		:= 0
		nCoefApr	:= 0
	EndIf

	DEFINE MSDIALOG oDlg FROM 0, 0 TO 297, 427 TITLE OemToAnsi (STR0069) PIXEL
	oGrp3 := TGROUP():New (5, 5, 50, 210, OemToAnsi (STR0070), oDlg, 0, 0, .T., .T.)
	@ 15, 010 SAY OemToAnsi (STR0071) OF oGrp3 PIXEL
	@ 15, 040 MSGET oDtDe VAR dDataDe SIZE 39, 09 OF oGrp3 PIXEL WHEN .F.
	@ 15, 140 SAY OemToAnsi (STR0072) OF oGrp3 PIXEL
	@ 15, 170 MSGET oDtAte VAR dDataAte SIZE 39, 09 OF oGrp3 PIXEL WHEN .F.
	@ 30, 010 SAY OemToAnsi (STR0073) OF oGrp3 PIXEL
	@ 30, 040 MSGET oFtAtual VAR nFatAtual SIZE 43, 10 PICTURE PesqPict("SFA","FA_FATOR") OF oGrp3 PIXEL WHEN .F.
	oGrp4 := TGROUP():New (55, 5, 115, 210, OemToAnsi (STR0074), oDlg, 0, 0, .T., .T.)
	@ 65, 010 SAY OemToAnsi (STR0075) OF oGrp4 PIXEL
	@ 65, 140 MSGET oTotTrib VAR nTotTrib SIZE 60, 10 PICTURE "@E 999,999,999,999.99" Valid(nCoefApr:=(nTotTrib/nTot))OF oGrp4 PIXEL WHEN lHabCoef
	@ 80, 010 SAY OemToAnsi (STR0076) OF oGrp4 PIXEL
	@ 80, 140 MSGET oTot VAR nTot SIZE 60, 10 PICTURE "@E 999,999,999,999.99" Valid(nCoefApr:=(nTotTrib/nTot)) OF oGrp4 PIXEL WHEN lHabCoef
	@ 95, 010 SAY OemToAnsi (STR0077) OF oGrp4 PIXEL
	@ 95, 140 MSGET oCoefApr VAR nCoefApr SIZE 60, 10 PICTURE PesqPict("SFA","FA_FATOR") OF oGrp4 PIXEL WHEN lHabCoef
	@ 120, 010 SAY OemToAnsi (STR0078) OF oDlg PIXEL
	DEFINE SBUTTON FROM 130, 152 TYPE 1 ACTION (nOpc := 1, oDlg:End()) ENABLE OF oDlg
	DEFINE SBUTTON FROM 130, 185 TYPE 2 ACTION (nOpc := 2, oDlg:End()) ENABLE OF oDlg
	ACTIVATE MSDIALOG oDlg CENTERED
	//
	If (nOpc==1)
		Iif (MV_PAR01<GetMV("MV_DATCIAP"), MV_PAR02 := nCoefApr, MV_PAR03 := nCoefApr)
	EndIf
Return (.T.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³M906SF9   ³ Autor ³Gustavo G. Rueda       ³ Data ³ 17.10.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDescri‡„o ³Funcao para validar a existencia dos campos e chamar a      |±±
±±º          ³ funcao de atualizacao atraves de um Processa().            |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum, eh chamado no menu.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906 ()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function M906SF9 ()
	Local	lRet			:=	.T.
	Local	nOpcao			:=	0
	Local	cTipAtu			:=	""
	Local	cTitBarra		:=	STR0099	//"Necessário campos"
	Local	cProblema		:=	STR0100	//"Rotina não pode ser processada."
	Local	cSolucao		:=	STR0101	//"Para que esta rotina possa efetuar as devidas atualizações, é necessário que os campos envolvidos sejam corretamente criados no dicionário de dados conforme especificado no boletim da rotina."

	Do While .T.
		FormBatch (OemtoAnsi (STR0082),{;		//"Atualização dos campos F9_QTDPARC e F9_SLDPARC!"
			OemToAnsi (STR0083),;				//"Esta rotina realizará a atualização dos campos F9_QTDPARC (Quantidade de parcelas"
			OemToAnsi (STR0084),;				//"a se creditar sobre o referido ativo) e F9_SLDPARC (Número restantes de parcelas"
			OemToAnsi (STR0085),;				//"a se creditar) de acordo com a tabela SFA (Estorno dos créditos), portanto é ne-"
			OemToAnsi (STR0086),;				//"cessário que as tabelas envolvidas (SF9 e SFA) estejam corretamenta estruturadas,"
			OemToAnsi (STR0087)},;				//"pois são a base para a atualização."
			{{5, .T., {|o| M906DLG (@cTipAtu)}},;
			{ 1, .T., {|o| nOpcao := 1, o:oWnd:End()}},;
			{ 2, .T., {|o| nOpcao := 0, o:oWnd:End()}}})

		If (nOpcao==1 .And. Empty (cTipAtu))
			Alert (STR0088, STR0089)	//"Não é possível processeguir com a atualização, pois é necessário selecionar-se umas das opções de tipo de atualização nos parâmetros da rotina."###"Atenção"
		ElseIf (nOpcao==0)
			Return (lRet)
		Else
			Exit
		EndIf
	EndDo
	//
	If (nOpcao==1)
		Processa ({|| M906SF9P (cTipAtu)})
	EndIf
	//
Return (lRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³M906SF9P  ³ Autor ³Gustavo G. Rueda       ³ Data ³ 17.10.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDescri‡„o ³Funcao utilizada para atribuir nos campos criados valores   |±±
±±º          ³ validos de acordo com a data de entrada do bem e das apro- |±±
±±º          ³ priacoes na tabela SFA, portant eh necessario que a tabela |±±
±±º          ³ SFA esteja correta.                                        |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum, eh chamado no menu.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906 ()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function M906SF9P (cTipAtu)

Local aSF9      := {}
Local nLimite   := 0
Local nParcelas := 0
Local nAprop    := 0
Local dDataIni  := dDataBase
Local dDataFim  := dDataBase
Local dLei102   := SuperGetMv ("MV_DATCIAP")
Local lRet      := .T.
Local lDtIniUt 	:= SF9->(FieldPos("F9_DTINIUT")) > 0
Local nLC102	:= SuperGetMv ("MV_LC102")

DbSelectArea ("SF9")
SF9->(DbSetOrder (1))
ProcRegua (SF9->(LastRec ()))
SF9->(DbSeek (xFilial ("SF9")))

Do While !(SF9->(Eof ())) .And. (xFilial ("SF9")==SF9->F9_FILIAL)

	nLimite	:= 	Iif (SF9->F9_DTENTNE>=dLei102, nLC102, 60)

	If ("2"$cTipAtu) .Or. ("1"$cTipAtu .And. SF9->F9_QTDPARC==0)
		Begin Transaction
		RecLock ("SF9", .F.)
		SF9->F9_QTDPARC	:= iif(SF9->F9_QTDPARC==0,	nLimite,SF9->F9_QTDPARC)
		SF9->F9_SLDPARC	:=	SF9->F9_QTDPARC

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Em analise realizada pela consultoria tributaria (JIRA) esta concluiu ao analisar a legisla³
		//³cao do CIAP que mesmo NAO havendo nenhuma saida tributada em um determinado mes do periodo,³
		//³ou seja,(NAO havendo apropriacao do credito para aquele mes) a Parcela deve ser consumida  ³
		//³alterando o valor do campo F9_SLDPARC, a rotina a seguir conta os meses do periodo de apro ³
		//³priacao e confronta com as apropriacoes realizadas da tabela SFA, caso o numero de apropri ³
		//³acoes efetivamente realizadas for MENOR que o numero de meses contados ate a database,pre  ³
		//³valecera o maior numero para abater a quantidade de parcelas do campo F9_SLDPARC           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF lDtIniUt .AND. !Empty(SF9->F9_DTINIUT)
			//Caso possua data de Inicio para utilização ela deve ser utilizada ao inves da data de digitação da nota.
			dDataIni := CtoD("01"+"/"+StrZero(Month(SF9->F9_DTINIUT),2)+"/"+StrZero(Year(SF9->F9_DTINIUT),4), "ddmmyy")
		Else
			dDataIni := CtoD("01"+"/"+StrZero(Month(SF9->F9_DTENTNE),2)+"/"+StrZero(Year(SF9->F9_DTENTNE),4), "ddmmyy")
		Endif

		dDataFim := CtoD("01"+"/"+StrZero(Month(dDataBase),2)+"/"+StrZero(Year(dDataBase),4), "ddmmyy")
        dDataFim := IIF( dDataFim < dDataIni , dDataIni , dDataFim )

  		nParcelas := 0
        nAprop    := 0

        Do While .T.
            nParcelas += 1
        	If dDataIni == dDataFim
				Exit
			Else
				If Month(dDataIni) <> 12
					dDataIni := CtoD("01"+"/"+StrZero(Month(dDataIni)+1,2)+"/"+StrZero(Year(dDataIni),4), "ddmmyy")
                Else
					dDataIni := CtoD("01/01/"+StrZero(Year(dDataIni)+1,4), "ddmmyy")
                EndIf
			EndIf
        EndDo

        nParcelas := Min(nParcelas,nLimite)

		DbSelectArea ("SFA")
		SFA->(DbSetOrder (1))
		If (SFA->(MsSeek (xFilial ("SFA")+SF9->F9_CODIGO)))
			Do While !(SFA->(Eof ())) .And. (xFilial ("SFA")==SFA->FA_FILIAL) .And. (SF9->F9_CODIGO==SFA->FA_CODIGO)

				nAprop += 1

				SFA->(DbSkip ())
			EndDo
		EndIf

		SF9->F9_SLDPARC := SF9->F9_SLDPARC - Max(nParcelas,nAprop)

		MsUnLock ()

		End Transaction

		aAdd (aSF9, {SubStr (AllTrim (SF9->F9_CODIGO), 1, 6),;
		SubStr (AllTrim (SF9->F9_DESCRI), 1, 40),;
		SF9->F9_DTENTNE,;
		Str (SF9->F9_QTDPARC, 2),;
		Str (SF9->F9_QTDPARC-SF9->F9_SLDPARC, 2),;
		Str (SF9->F9_SLDPARC, 2)})
	EndIf

	DbSelectArea ("SF9")
	SF9->(DbSkip ())
	IncProc ()
EndDo

If (Len (aSF9)>0)
	ImpParcSf9 (aSF9)
Else
	MsgInfo (STR0098)	//"Nenhuma atualização efetuada."
EndIf

Return (lRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³M906DLG   ³ Autor ³Gustavo G. Rueda       ³ Data ³ 17.10.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDescri‡„o ³Monta a tela de opcao para atualizacao dos campos, onde par-|±±
±±º          ³ cial atualiza somente os campos que estiverem zerados, a   |±±
±±º          ³ geral atualiza todos os campos, independente se possuirem  |±±
±±º          ³ valores ou nao.                                            |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum, eh chamado no menu.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906 ()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function M906DLG (cTipAtu)
	Local	oDlg
	Local	oGrp
	Local	aItObj		:=	{"          ", STR0096, STR0097}	//"1=Parcial"###"2=Geral"
	Local	oSay
	Local	cMsgGeral	:=	STR0090	//"Atualização dos campos F9_QTDPARC e F9_SLDPARC para todos os ativos cadastrados na tabela SF9, independente se já possuírem conteúdo ou não, todos valores se´ão sobrescritos."
	Local	cMsgParc	:=	STR0091	//"Atualização dos campos F9_QTDPARC e F9_SLDPARC para todos os ativos cadastrados na tabela SF9, somente quando os mesmos campos possuírem conteúdo zerado, caso contrário, serão mantidos."
	Local	oFont		:=	TFont ():New ("Arial",, 15,, .F.)
	Local	oFontB		:=	TFont ():New ("Arial",, 15,, .T.)
	//
	DEFINE MSDIALOG oDlg FROM 0,0 TO 250, 350 TITLE OemToAnsi (STR0092) PIXEL	//"Parâmetros"
		oGrp	:=	TGroup ():New (5, 5, 100, 171,,oDlg,,,.T.,.T.)
		TSay ():New (10, 10, {|u| STR0093}, oGrp,, oFontB, .F., .F., .F., .T.,,, 155, 10, .F., .F., .F., .F., .F.)	//"Indique o tipo de atualização"
		oSay := TSay ():New (40, 10, {|| }, oGrp,, oFont, .F., .F., .F., .T.,,, 155, 100, .F., .F., .F., .F., .F.)
		oSay:cCaption := Iif ("1"$cTipAtu,  cMsgParc, Iif (Empty (cTipAtu), "", cMsgGeral))
		TCombobox ():New (20, 10, {|u| Iif (PCount ()==0, cTipAtu, cTipAtu := u )}, aItObj, 155, 10, oGrp,, {|| oSay:cCaption := Iif ("1"$cTipAtu,  cMsgParc, Iif (Empty (cTipAtu), "", cMsgGeral))},,,, .T.)
		//
	   	DEFINE SBUTTON FROM 107, 145 TYPE 1 ACTION (oDlg:End()) ENABLE OF oDlg
	ACTIVATE MSDIALOG oDlg CENTERED
Return (cTipAtu)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ImpParcSf9³ Autor ³Gustavo G. Rueda       ³ Data ³ 01.07.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDescri‡„o ³Funcao de impressao dos ativos nao atualizados dentro do mes|±±
±±º          ³ embasado na database do sistema.                           |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA -> aSF9o = Array contendo os ativos atualizados.       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ImpParcSf9 (aSF9)
	Local 	aArea		:= 	GetArea ()
	Local 	cPerg		:= 	""	//"MTA906"
	Local 	nOpca		:=	0
	Local	lRet		:=	.T.
	Local 	cTitulo  	:= STR0094	//"Atualização das parcelas do ativo"
	Local 	cDesc1  	:= STR0095	//"Tratamento para atualizar os campos F9_QTDPARC e F9_SLDPARC para cada ativo da filial corrente."
	Local 	cDesc2  	:= ""
	Local 	cDesc3  	:= ""
	Local 	wnrel   	:= "Mata906"
	Local 	NomeProg	:= "Mata906"
	Local	cString		:=	""
	Local 	Tamanho 	:= 	"P" 	// P/M/G
	Private Limite      :=  80   	// 80/132/220
	Private lEnd    	:= 	.F.		// Controle de cancelamento do relatorio
	Private m_pag   	:= 	1  		// Contador de Paginas
	Private nLastKey	:=	0  		// Controla o cancelamento da SetPrint e SetDefault
	Private aReturn 	:= {STR0058, 1, STR0059, 2, 2, 1, "", 1 }	//"Zebrado"###"Administracao"
	//
	Pergunte (cPerg, .F.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Envia para a SetPrinter                                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	wnrel	:=	SetPrint (cString, NomeProg, cPerg, @cTitulo, cDesc1, cDesc2, cDesc3, .F.,, .F., Tamanho,, .F.)
	//
	If (nLastKey==27)
		Return (lRet)
	Endif
	//
	SetDefault (aReturn, cString)
	//
	If (nLastKey==27)
		Return (lRet)
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Preparacao do inicio de processamento do arquivo pre-formatado          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RptStatus ({|lEnd| ImpSF9 (aSF9, cTitulo, NomeProg, Tamanho)}, cTitulo)
	//
	If (aReturn[5]==1)
		Set Printer To
	   	ourspool(wnrel)
	Endif
	MS_FLUSH()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Restaura area ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RestArea (aArea)
Return (lRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ImpSF9    ³ Autor ³Gustavo G. Rueda       ³ Data ³ 01.07.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDescri‡„o ³Funcao de impressao das informacoes do array aSF9           |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA -> aSF9 = Array contendo os ativos atualizados.        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ImpSF9 (aSF9, cTitulo, NomeProg, Tamanho)
	Local	lRet		:=	.T.
	Local	nLin		:=	99
	Local	aLayout		:=	A906Lay (2)
	Local	nI
	//
	For nI := 1 To Len (aSF9)
		If (nLin>60)
			nLin	:=	1
			cabec (cTitulo, aLayout[1], aLayout[2], NomeProg, Tamanho, 18)
			nLin	:=	9
		EndIf
		FmtLin (aSF9[nI], aLayout[3],,, @nLin)
	Next (nI)
Return (lRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³M906HLPCMP³ Autor ³Gustavo G. Rueda       ³ Data ³ 01.07.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±ºDescri‡„o ³Funcao de validacao utilizada da rotina.                    |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC -> Referencia passada para tratamento da funcao.       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA906                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.             		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function M906HLPCMP (cCampo)
	Local	lRet		:=	.T.
	Local	cTitulo		:=	""
	Local	cProblema	:=	""
	Local	cSolucao	:=	""
	//
	If ("F9_SLDPARC"$cCampo)
		If (M->F9_SLDPARC>M->F9_QTDPARC)
			cTitulo		:=	STR0102	//"Valor não pode ser superior"
			cProblema	:=	STR0103	//"Valor do saldo em parcelas restante a se creditar não pode ser supeior a quantidades de parcelas do ativo."
			cSolucao	:=	STR0104	//"Inserir um valor menor ou igual a quantidade de parcelas do ativo."
			lRet		:=	.F.
		EndIf
	EndIf
	//
	If !(lRet)
		xMagHelpFis (cTitulo, cProblema, cSolucao)
	EndIf
Return (lRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A906Legenda³ Autor ³ Gustavo G. Rueda.    ³ Data ³27.02.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Legenda das movimentacoes com o ativo                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ A906Legenda()                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A906Legenda()
Local aLegenda := {}

aAdd(aLegenda, {"BR_LARANJA",	STR0114}) //"Ativo adquirido, porém sem ocorrencias."
aAdd(aLegenda, {"BR_VERMELHO",	STR0115}) //"Ativo baixado"
aAdd(aLegenda, {"BR_AZUL",		STR0116}) //"Ativo transferido"
aAdd(aLegenda, {"BR_PRETO",		STR0136}) //"Ativo baixado por período."
aAdd(aLegenda, {"ENABLE",		STR0117}) //"Ativo depreciado"
aAdd(aLegenda, {'BR_AMARELO', 	STR0137}) // Ativo baixado parcialmente
aAdd(aLegenda, {"BR_MARROM",	STR0154}) //"Ativo baixado parcialmente"
aAdd(aLegenda, {"BR_BRANCO",	STR0149}) //"Ativo Principal"
BrwLegenda (cCadastro, STR0118, aLegenda) //"Legenda"

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³UltBaixa  ³ Autor ³ Edstron E. Correia    ³ Data ³03.07.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao utilizada para retornar a data da ultima baixa      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ UltBaixa()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ dUltBaixa, lProRataDie, lApropria                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function UltBaixa(dUltBaixa,lProRataDie,lApropria,cQuery)

DEFAULT lProRataDie		:=.F.
DEFAULT lApropria		:=.T.

//
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Calculo o proratadie para o CIAP da Bahia.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (SF9->F9_BXICMS>0)
	If SF9->(F9_BXICMS+F9_VLESTOR==F9_VALICMS)	//Somente se for baixa total, pois se foi parcial, ainda temos um residuo a apropriar.
		#IFDEF TOP
			cQuery	:= 	"SELECT MAX(FA_DATA) FA_DATA "
			cQuery 	+= 	"FROM "+RetSqlName("SFA")+" SFA "
			cQuery 	+= 	"WHERE SFA.FA_FILIAL='"+xFilial("SFA")+"' AND "
			cQuery 	+= 	"SFA.FA_CODIGO='"+SF9->F9_CODIGO+"' AND "
			cQuery 	+= 	"SFA.FA_TIPO='2' AND "
			cQuery 	+=	"SFA.D_E_L_E_T_=' ' "
			//
			cQuery := ChangeQuery(cQuery)
			//
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"a906Processa")
			//
			dUltBaixa := SToD (FA_DATA)
			//
			If !Empty(dUltBaixa)
				lApropria	:=	.F.
			EndIf
			//
			dbCloseArea ()
		#ELSE
			DbSelectArea ("SFA")
			SFA->(DbSetOrder (1))
			SFA->(MsSeek (xFilial ("SFA")+SF9->F9_CODIGO))
			Do While !SFA->(Eof ()) .And. (SF9->F9_CODIGO==SFA->FA_CODIGO)
				If (SFA->FA_TIPO=="2")
					dUltBaixa	:=	SFA->FA_DATA
					//
					If !Empty(dUltBaixa)
						lApropria	:=	.F.
					EndIf
				EndIf
				SFA->(DbSkip ())
			EndDo
		#ENDIF
	Else
		dUltBaixa	:=	MV_PAR01
	EndIf
Else
	dUltBaixa	:=	MV_PAR01
EndIf

Return dUltBaixa

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Marco Bianchi         ³ Data ³01/09/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function MenuDef()

Private aRotina := {	{ STR0001 ,"AxPesqui"	, 0 , 1,0,.F.},;  //"Pesquisar"
							{ STR0002 ,"a906Vis"	, 0 , 2,0,NIL},;  //"Visual"
							{ STR0003 ,"A906Baixa"	, 0 , 2,0,NIL},;  //"Baixar"
							{ STR0004 ,"A906Estor"	, 0 , 2,0,NIL},;  //"Cancela"
							{ STR0005 ,"A906Aprop"	, 0 , 2,0,NIL}}   //"Apropriar"

If ExistBlock("MT906MNU")
	ExecBlock("MT906MNU",.F.,.F.)
EndIf

Return(aRotina)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a906Vis   ³ Autor ³ Gustavo G. Rueda      ³ Data ³25.07.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada da funcao padrao de visualizacao                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ a906Vis()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Nenhum                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a906Vis
axVisual("SF9",SF9->(Recno()),2)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³JaClas906 ³ Autor ³ Alexandre Circenis    ³ Data ³25/02/2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se o ativo a ser apurado já foi classificado      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ JaClas906()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Nenhum                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function JaClas906(nRecSN1, cOrig)
Local aRet		:= {.T.,.F.}
Local aArea		:= GetArea()

dbSelectArea("SN1")
If nRecSN1 > 0
	SN1->(DbGoto(nRecSN1) )
	aRet[1] := Af240JaClas() //Ativo Não classificado
	If !aRet[1] .And. Alltrim(cOrig) == "ATFA310"
		aRet[2] := .T.
	EndIf
EndIf
RestArea(aArea)
Return aRet

//-------------------------------------------------------------------
/*/{Protheus.doc} Mta906QryC
Função que fará a query no livro Fiscal buscando as notas fiscais do período
para compor o coeficiente de apropriação do CIAP. Utilizará a configuração prévia
dos CFOPs e dos CST de ICMS, indicado como compor cada operando da equação.

@author Erick G Dias
@since 11/03/2019
@version 12.1.23
/*/
//-------------------------------------------------------------------
Function Mta906QryC(dDataDe, dDataAte, cQry)

Local cSelect	:= ""
Local cFrom	    := ""
Local cWhere	:= ""
Local cAliasQry	:= ""
Local cEmiEnt 	:= ""

If cQry == "1"

	//Query trazendo somente as saídas
	//Seção dos campos da tabela SFT
	cSelect += "SUM(SFT.FT_VALCONT) VALCONT, SUM(SFT.FT_TOTAL) TOTAL, SUM(SFT.FT_ISENICM) ISENICM, SUM(SFT.FT_OUTRICM) OUTRICM, SUM(SFT.FT_BASEICM) BASEICM, SFT.FT_EMISSAO, "
	//Seção dos campos do operando F1F
	cSelect += " F1F.F1F_OPERAN, F1G.F1G_VLORIG "

	//From será executado na tabela F1F - Operando coeficiente CIAP
	cFrom   += RetSQLName("F1F") + " F1F "
	//Join com a tabela de CFOP F1G
	cFrom += "JOIN " + RetSQLName("F1G") + " F1G ON (F1G.F1G_FILIAL = " + ValToSQL(xFilial("F1G")) + " AND F1G.F1G_IDCAB = F1F.F1F_ID AND F1G.D_E_L_E_T_ = ' ') "
	//Join com a tabela de livros fiscias SFT
	cFrom += "JOIN " + RetSQLName("SFT") + " SFT ON (SFT.FT_FILIAL = " + ValToSQL(xFilial("SFT"))
	cFrom += " AND SFT.FT_ENTRADA >= " + ValToSql(dDataDe) + " AND SFT.FT_ENTRADA <= " +  ValToSql(dDataAte)
	cFrom += " AND SFT.FT_DTCANC = ' ' AND SFT.FT_TIPOMOV = 'S' AND SFT.FT_CFOP = F1G.F1G_CFOP AND SUBSTRING(SFT.FT_CLASFIS,2,2) = F1G.F1G_CST AND SFT.D_E_L_E_T_ = ' ') "

	//Seção do Where, considerando a vigência do tributo.
	cWhere  += "F1F.F1F_FILIAL = " + ValToSQL( xFilial("F1F") ) + " AND "
	//Somente trará os operandos de saída
	cWhere  +=	" F1F.F1F_OPERAN IN ('01','03','05','07', '09')  "

ElseIF cQry == "2"

	//Query trazendo as devoluções automáticas

	//Aqui as devoluções de venda serão calculados na mesma query, por este motivo estou adicionando os campos na seção da query
	cSelect += "SUM(SFTDEV.FT_VALCONT) VALCONT, SUM(SFTDEV.FT_TOTAL) TOTAL, SUM(SFTDEV.FT_ISENICM) ISENICM , SUM(SFTDEV.FT_OUTRICM) OUTRICM, SUM(SFTDEV.FT_BASEICM) BASEICM,SFTDEV.FT_ENTRADA, "

	//Seção dos campos do operando F1F
	cSelect += "CASE WHEN F1F.F1F_OPERAN = '01' then '02'WHEN F1F.F1F_OPERAN = '03' then '04' WHEN F1F.F1F_OPERAN = '05' then '06' WHEN F1F.F1F_OPERAN = '07' then '08'  WHEN F1F.F1F_OPERAN = '09' then '10' END F1F_OPERAN, F1G.F1G_VLORIG "

	//From será executado na tabela F1F - Operando coeficiente CIAP
	cFrom   += RetSQLName("F1F") + " F1F "

	//Join com a tabela de CFOP F1G
	cFrom += "JOIN " + RetSQLName("F1G") + " F1G ON (F1G.F1G_FILIAL = " + ValToSQL(xFilial("F1G")) + " AND F1G.F1G_IDCAB = F1F.F1F_ID AND F1G.D_E_L_E_T_ = ' ') "

	//Join com SFT de devolução realizadas no período
	cFrom += " JOIN " + RetSQLName("SFT") + " SFTDEV ON (SFTDEV.FT_FILIAL = " + ValToSQL(xFilial("SFT")) + " AND SFTDEV.FT_ENTRADA >= " + ValToSql(dDataDe) + " AND SFTDEV.FT_ENTRADA <= " +  ValToSql(dDataAte)  + " AND "
	cFrom += " SFTDEV.FT_DTCANC = ' ' AND SFTDEV.FT_TIPOMOV='E' AND SFTDEV.FT_TIPO='D' AND SFTDEV.D_E_L_E_T_ = ' ') "

	//Join com SFT Original, sem filtrar a data
	cFrom += "JOIN " + RetSQLName("SFT") + " SFT ON (SFT.FT_FILIAL = " + ValToSQL(xFilial("SFT"))
	cFrom += " AND SFT.FT_DTCANC = ' ' AND SFT.FT_CFOP = F1G.F1G_CFOP AND SUBSTRING(SFT.FT_CLASFIS,2,2) = F1G.F1G_CST AND "
	cFrom += " SFTDEV.FT_NFORI = SFT.FT_NFISCAL AND SFTDEV.FT_SERORI = SFT.FT_SERIE AND SFTDEV.FT_ITEMORI = SFT.FT_ITEM AND SFTDEV.FT_CLIEFOR = SFT.FT_CLIEFOR AND SFTDEV.FT_LOJA = SFT.FT_LOJA AND SFT.D_E_L_E_T_ = ' ') "

	//Seção do Where, considerando a vigência do tributo.
	cWhere  += "F1F.F1F_FILIAL = " + ValToSQL( xFilial("F1F") ) + " AND "
	cWhere  +=	" F1F.F1F_OPERAN IN ('01','03','05','07', '09') "

ElseIF cQry == "3"

	//Query trazendo as devoluções configuráveis

	//Seção dos campos da tabela SFT
	cSelect += "SUM(SFT.FT_VALCONT) VALCONT, SUM(SFT.FT_TOTAL) TOTAL, SUM(SFT.FT_ISENICM) ISENICM, SUM(SFT.FT_OUTRICM) OUTRICM, SUM(SFT.FT_BASEICM) BASEICM,SFT.FT_EMISSAO, "

	//Seção dos campos do operando F1F
	cSelect += " F1F.F1F_OPERAN, F1G.F1G_VLORIG "

	//From será executado na tabela F1F - Operando coeficiente CIAP
	cFrom   += RetSQLName("F1F") + " F1F "

	//Join com a tabela de CFOP F1G
	cFrom += "JOIN " + RetSQLName("F1G") + " F1G ON (F1G.F1G_FILIAL = " + ValToSQL(xFilial("F1G")) + " AND F1G.F1G_IDCAB = F1F.F1F_ID AND F1G.D_E_L_E_T_ = ' ') "

	//Join com a tabela de livros fiscias SFT
	cFrom += "JOIN " + RetSQLName("SFT") + " SFT ON (SFT.FT_FILIAL = " + ValToSQL(xFilial("SFT"))

	//Quando processar as devoluções realizadas no período
	cFrom += " AND SFT.FT_ENTRADA >= " + ValToSql(dDataDe) + " AND SFT.FT_ENTRADA <= " +  ValToSql(dDataAte)

	cFrom += " AND SFT.FT_DTCANC = ' ' AND SFT.FT_TIPOMOV='E' AND SFT.FT_TIPO='D' AND SFT.FT_CFOP = F1G.F1G_CFOP AND SUBSTRING(SFT.FT_CLASFIS,2,2) = F1G.F1G_CST AND SFT.D_E_L_E_T_ = ' ') "

	//Seção do Where, considerando a vigência do tributo.
	cWhere  += "F1F.F1F_FILIAL = " + ValToSQL( xFilial("F1F") ) + " AND "

	cWhere  +=	" F1F.F1F_OPERAN IN ('02','04','06','08','10') "

EndIF
iif(cQry == "2", cEmiEnt := "SFTDEV.FT_ENTRADA", cEmiEnt := "SFT.FT_EMISSAO")

cWhere += " AND F1F.D_E_L_E_T_ = ' ' "
cWhere += "  GROUP BY "+cEmiEnt+", F1F.F1F_OPERAN, F1G.F1G_VLORIG "
cWhere += "  ORDER BY "+cEmiEnt

//Concatenará o % e executará a query.
cSelect := "%" + cSelect + "%"
cFrom   := "%" + cFrom   + "%"
cWhere  := "%" + cWhere  + "%"

cAliasQry := GetNextAlias()

BeginSQL Alias cAliasQry

	SELECT
		%Exp:cSelect%
	FROM
		%Exp:cFrom%
	WHERE
		%Exp:cWhere%

EndSQL

Return cAliasQry

//-------------------------------------------------------------------
/*/{Protheus.doc} ProcCoefOp
Função que processará os valores de coeficiente do CIAP.

@author Erick G Dias
@since 11/03/2019
@version 12.1.23
/*/
//-------------------------------------------------------------------
Static Function ProcCoefOp(cAliasQry, aResumo, dData)

Local nValor	:= 0
Local cDataAtu		:= ""
Local aResult := {0,0,0,0,0,0,0,0,0,0,0,""}
//Laço nas notas processadas do período
Do While !(cAliasQry)->(Eof())

	cDataAtu	:= iif((cAliasQry)->(FieldPos("FT_EMISSAO")) > 0, AnoMes(StoD((cAliasQry)->FT_EMISSAO)), AnoMes(StoD((cAliasQry)->FT_ENTRADA)))
	aResult[12] := AnoMes(dData)

	if cDataAtu == aResult[12]

	nValor	:= MTA906VOPE((cAliasQry)->F1G_VLORIG, (cAliasQry)->VALCONT, (cAliasQry)->TOTAL, (cAliasQry)->ISENICM, (cAliasQry)->OUTRICM, (cAliasQry)->BASEICM)

	//Saídas Tributadas
		IF (cAliasQry)->F1F_OPERAN == "01"
			aResult[1] += nValor

		//Devoluções Saídas Tributadas
		ElseIF (cAliasQry)->F1F_OPERAN == "02"
			aResult[2] += nValor

		//Saídas Não Tributadas
		ElseIF (cAliasQry)->F1F_OPERAN == "03"
			aResult[3] += nValor

		//Devoluções Saídas Não Tributadas
		ElseIF (cAliasQry)->F1F_OPERAN == "04"
			aResult[4] += nValor

		//Exportações
		ElseIF (cAliasQry)->F1F_OPERAN == "05"
			aResult[5] += nValor

		//Devolução Exportações
		ElseIF (cAliasQry)->F1F_OPERAN == "06"
			aResult[6] += nValor

		//Equiparada a exportação
		ElseIF (cAliasQry)->F1F_OPERAN == "07"
			aResult[7] += nValor

		//Devolução Equiparada a exportação
		ElseIF (cAliasQry)->F1F_OPERAN == "08"
			aResult[8] += nValor

		//Total de Saídas
		ElseIF (cAliasQry)->F1F_OPERAN == "09"
			aResult[9] += nValor

		//Devolução Total de Saídas
		ElseIF (cAliasQry)->F1F_OPERAN == "10"
			aResult[10] += nValor

		EndIF

	else
		exit
	endif
	(cAliasQry)->(DbSKip())
Enddo

//Preenche o aResumo com o array contendo os valores conforme os operandos do mês corrente
aAdd(aResumo,aResult)

Return aResumo

//-------------------------------------------------------------------
/*/{Protheus.doc} MTA906VOPE
Função que processará os valores de coeficiente do CIAP.

@author Erick G Dias
@since 11/03/2019
@version 12.1.23
/*/
//-------------------------------------------------------------------
Function MTA906VOPE(cVlOrig, nValCont, nTotal, nIsento , nOutros , nBase)

Local nRet		:= 0
Default lDevAuto := .F.

//Valor Contábil
If cVlOrig == "01"
	nRet	:= nValCont
//Valor da Mercadoria
ElseIf cVlOrig == "02"
	nRet	:= nTotal
//Valor de Isento
ElseIf cVlOrig == "03"
	nRet	:= nIsento
//Valor de Outras
ElseIf cVlOrig == "04"
	nRet	:= nOutros
//Base de ICMS
ElseIf cVlOrig == "05"
	nRet	:= nBase
//Outras + Isentas
ElseIf cVlOrig == "06"
	nRet	:= nOutros + nIsento
//Base ICMS + Outras
ElseIf cVlOrig == "07"
	nRet	:= nBase + nOutros
//Base ICMS + Isentdas
ElseIf cVlOrig == "08"
	nRet	:= nBase + nIsento
//Base ICMS + Outras + Isentas
ElseIf cVlOrig == "09"
	nRet	:= nBase + nOutros + nIsento
EndIF

Return nRet

//-------------------------------------------------------------------
/*/{Protheus.doc} CaclCoef

Função que realizar o cálculo do coeficiente com base nos valores
acumulados das notas, considrando CFOP e CST previamente configurados.

@author Erick G Dias
@since 11/03/2019
@version 12.1.23
/*/
//-------------------------------------------------------------------
Static Function CaclCoef(aResumo,aResumoDev,cDivCoef,nX)

Local nSaiTrib		:= 1
Local nNaoSaiTrib	:= 3
Local nExportacao	:= 5
Local nEquiparado	:= 7
Local nSaiTotSai	:= 9
Local nFator    	:= 11
Local nRet			:= 0
Default aResumoDev	:= {}

//Subtrai os valores de devoluções, sejam automáticas ou configuráveis
aResumo[nX][nSaiTrib] 	  := Max(aResumo[nX][nSaiTrib]     - aResumoDev[nX][2],0)
aResumo[nX][nNaoSaiTrib]  := Max(aResumo[nX][nNaoSaiTrib]  - aResumoDev[nX][4],0)
aResumo[nX][nExportacao]  := Max(aResumo[nX][nExportacao]  - aResumoDev[nX][6],0)
aResumo[nX][nEquiparado]  := Max(aResumo[nX][nEquiparado] - aResumoDev[nX][8],0)
aResumo[nX][nSaiTotSai]	  := Max(aResumo[nX][nSaiTotSai]  - aResumoDev[nX][10],0)

//[(SaiTrib) + (SaiExp) + (SaiEqu)] / [(SaiTrib) + (SaiExp) + (SaiEqu) + (SaiIsNt)]
If (aResumo[nX][nSaiTrib] + aResumo[nX][nExportacao] + aResumo[nX][nEquiparado] + aResumo[nX][nNaoSaiTrib]) > 0
	If cDivCoef == "1" .Or. Empty(cDivCoef)
		nRet	:= (aResumo[nX][nSaiTrib] + aResumo[nX][nExportacao] + aResumo[nX][nEquiparado]) / (aResumo[nX][nSaiTrib] + aResumo[nX][nExportacao] + aResumo[nX][nEquiparado] + aResumo[nX][nNaoSaiTrib])
	ElseIf cDivCoef == "2"
		nRet	:= (aResumo[nX][nSaiTrib] + aResumo[nX][nExportacao] + aResumo[nX][nEquiparado]) / (aResumo[nX][nSaiTotSai])
	ElseIf cDivCoef == "3"
		nRet	:= (aResumo[nX][nSaiTrib] / aResumo[nX][nSaiTotSai])
	EndIf
	aResumo[nX][nFator] := NoRound(nRet,TamSX3("FA_FATOR")[2])
EndIF

Return aResumo

//-------------------------------------------------------------------
/*/{Protheus.doc} M906ENCSN1

Função que realizara a busca do registros do ativo caso a tabela SN1
esteja compartilhada

@author Adilson Roberto/ Erich Mostoco
@since 10/12/2020
/*/
//-------------------------------------------------------------------
Static Function M906ENCSN1(cSF9Cod, cSF9Fil, nRecSN1, cOrig, cGrup)
Local aArea 	 := GetArea()
Local cAlias	 := GetNextAlias()

nRecSN1 := 0
cOrig 	:= ""
cGrup 	:= ""

BeginSql alias cAlias 
	SELECT SN1.R_E_C_N_O_ AS RECNO, SN1.N1_ORIGEM, SN1.N1_GRUPO FROM %table:SN1% SN1
		INNER JOIN %table:SN3% SN3 ON 
		SN1.N1_FILIAL= SN3.N3_FILIAL AND 
		SN1.N1_CBASE = SN3.N3_CBASE	 AND 
		SN1.N1_ITEM	 = SN3.N3_ITEM
	WHERE 
		SN1.N1_CODCIAP = %exp:cSF9Cod% AND 
		(SN3.N3_FILORIG = %exp:cSF9Fil% OR SN3.N3_FILIAL = %exp:cSF9Fil%) AND 
		SN1.D_E_L_E_T_ = ' ' AND 
		SN3.D_E_L_E_T_ = ' '
EndSql 

If (cAlias)->(!Eof())
	nRecSN1 := (cAlias)->RECNO
	cOrig 	:= (cAlias)->N1_ORIGEM
	cGrup	:= (cAlias)->N1_GRUPO
EndIf
DbCloseArea(cAlias)
RestArea(aArea)
Return 
