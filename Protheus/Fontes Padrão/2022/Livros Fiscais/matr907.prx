#INCLUDE "Matr907.ch"
#INCLUDE "FIVEWIN.CH"
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATR907  ³ Autor ³ Edstron E. Correia    ³ Data ³ 29/04/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ LMP - Livro de Movimentacao de Produtos                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAFIS                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MATR907

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local   cTitulo   :=" LMP - Livro de Movimentacao de Produtos "
Local   cText1    :="Este programa emite o Livro de Movimentacao de Produtos - LMP"
Local   cPerg     :="MTR907"
Local   cString   :="SD2"
Local   lVerpesssen := Iif(FindFunction("Verpesssen"),Verpesssen(),.T.)
Private nLastKey  :=0
Private Limite    := 132
Private cTamanho  :="M"
Private lEnd      :=.F.
Private aReturn  :={ "Zebrado" , 1,"Administracao", 2, 2, 1, "",1 }

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                     ³
//³ mv_par01            // Data Inicial                      ³
//³ mv_par02            // Data Final                        ³
//³ mv_par03            // Do Grupo                          ³
//³ mv_par04            // Ate o Grupo                       ³
//³ mv_par05            // Livros/T.Abertura/T.Fechamento    ³
//³ mv_par06            // Numero Sequencial  ?              ³
//³ mv_par07            // Cap. Armazenamento ?              ³
//³ mv_par08            // Data de Abertura   ?              ³
//³ mv_par09            // Data de Fechamento ?              ³
//³ mv_par10            // Inscricao Municipal?              ³
//³ mv_par11            // Do Produto ?                      ³
//³ mv_par12            // Ate o Produto ?                   ³ 
//³ mv_par13            // Numero Pag. Livro  ?              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If lVerpesssen
   Pergunte(cPerg,.F.)

   //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
   //³ Envia controle para a funcao SETPRINT                        ³
   //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
   wnrel:="MATR907"   // nome default do relatorio em disco
   wnrel:=SetPrint(cString,wnrel,cPerg,cTitulo,cText1,,,.F.,"",,cTamanho)
   If nLastKey==27
      dbClearFilter()
      Return
   Endif
   SetDefault(aReturn,cString)
   If nLastKey==27
      dbClearFilter()
      Return
   Endif
   #IFNDEF WINDOWS
      Processa({||LivroLMP()})
   #ELSE
      LivroLMP()
   #ENDIF
   //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
   //³ Restaura Ambiente                                            ³
   //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
   dbSelectArea("SD1")
   dbSetOrder(1)
   #IFNDEF WINDOWS
      Set Device To Screen
   #ENDIF
   If aReturn[5] == 1
      Set Printer TO
      dbcommitAll()
      OurSpool(wnrel)
   Endif
EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ LivroLMP ³ Autor ³Edstron E. Correia ³ Data ³ 29/04/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Selecao dos Dados e Emissao do LMP                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION LivroLMP

Local cAliasSD1	:="SD1"
Local cAliasSD2	:="SD2"
Local cNome     :=""
Local cNomeProd :=""
Local cCodigo   :=""
Local cArqLmpE	:=""
Local cArqLmpS	:=""
Local aSaldo    :={}
Local aSalAtu	:={}
Local aSaldo2   :={}
Local aSalAtu2	:={}
Local aTotais   :={}
Local aCampos	:={}
Local aCampos2	:={}
Local cAlias	:=Alias()
Local aTam 	    :=TAMSX3("B1_COD")
Local aLay      :=Array(31)
Local nPos      :=0
Local nFolha    := Val(mv_par13)
Local nLin   	:=0
Local nNx       :=0
Local dData 	:=CTOD("//")
Local cProduto	:=""
Local nCont     :=0
Local cChave    :=""
Local cChave2   :=""
Local cLin      :="|              |       |            |                                                       |                |"
Local nTotSai   :=0
Local ny		:=0
Local nSaldo    :=0
Local cProdAt   :=""
Local cDataAt   :=""
#IFDEF TOP
	Local nX		:=0
#ENDIF
	

   AADD(aCampos,{"PRODUTO"		,"C"	,aTam[1],0})
   AADD(aCampos,{"NOMEPROD"		,"C"	,050,0})
   AADD(aCampos,{"DATAMOV"		,"D"	,008,0})
   AADD(aCampos,{"ESTOQUE"		,"N"	,014,3})
   AADD(aCampos,{"NOTAFISCAL"	,"C"	,TamSX3("F3_NFISCAL")[1],0})
   AADD(aCampos,{"SERIE"		   ,"C"	,TamSX3( "F3_SERIE" )[1],0})
   AADD(aCampos,{"DATAFISCAL"	,"D"	,008,0})
   AADD(aCampos,{"CODEMITE"		,"C"	,008,0})
   AADD(aCampos,{"EMITENTE"		,"C"	,050,0})
   AADD(aCampos,{"QUANTIDADE"	,"N"	,014,3})
   AADD(aCampos,{"TIPO"      	,"C"	,001,0})
   AADD(aCampos,{"SERIEVIEW"   	,"C"	,SerieNfId("SF3",6,"F3_SERIE"),0})	

   cArqLmpE	:=	CriaTrab(aCampos)
   dbUseArea(.T.,__LocalDriver,cArqLmpE,cArqLmpE,.T.,.F.)
   IndRegua(cArqLmpE,cArqLmpE,"DTOS(DATAMOV)+PRODUTO+SERIE+NOTAFISCAL+CODEMITE",,,"Indexando Arquivo Temporario") 
   DbSelectArea(cArqLmpE)
   DbClearIndex()
   DbSetIndex(cArqLmpE+OrdBagExt())
   dbSetOrder(1)
   dbSelectArea(cAlias)

   AADD(aCampos2,{"PRODUTO"		,"C"	,aTam[1],0})
   AADD(aCampos2,{"NOMEPROD"	,"C"	,050,0})
   AADD(aCampos2,{"DATAMOV"		,"D"	,008,0})
   AADD(aCampos2,{"ESTOQUE"		,"N"	,014,3})
   AADD(aCampos2,{"NOTAFISCAL"	,"C"	,TamSX3("F3_NFISCAL")[1],0})
   AADD(aCampos2,{"SERIE"		,"C"	,TamSX3( "F3_SERIE" )[1],0})
   AADD(aCampos2,{"DATAFISCAL"	,"D"	,008,0})
   AADD(aCampos2,{"CODEMITE"	,"C"	,008,0})
   AADD(aCampos2,{"EMITENTE"	,"C"	,050,0})
   AADD(aCampos2,{"QUANTIDADE"	,"N"	,014,3}) 
   AADD(aCampos2,{"TIPO"      	,"C"	,001,0})
   AADD(aCampos2,{"SERIEVIEW"  	,"C"	,SerieNfId("SF3",6,"F3_SERIE"),0})
   
   cArqLmpS	:=	CriaTrab(aCampos2)
   dbUseArea(.T.,__LocalDriver,cArqLmpS,cArqLmpS,.T.,.F.)
   IndRegua(cArqLmpS,cArqLmpS,"DTOS(DATAMOV)+PRODUTO+SERIE+NOTAFISCAL+CODEMITE",,,"Indexando Arquivo Temporario") 
   DbSelectArea(cArqLmpS)
   DbClearIndex()
   DbSetIndex(cArqLmpS+OrdBagExt())
   dbSetOrder(1)
   dbSelectArea(cAlias)

If mv_par05 == 1
   aTotais :={}
   dbSelectArea("SD1")
   SD1->(dbSetOrder(6))
   #IFDEF TOP
	   lQuery     := .T.
	   cAliasSD1  := "cSD1"
	   aStru		:= SD1->(dbStruct())
   	   cQuery		:= "SELECT D1_FILIAL, D1_DTDIGIT, D1_NUMSEQ, D1_COD, D1_QUANT, D1_TES, D1_FORNECE, D1_LOJA, D1_DOC, D1_EMISSAO, D1_TIPO, D1_SERIE "
 	   cQuery		+= "FROM "+RetSqlName("SD1")+" "
	   cQuery		+= "WHERE D1_FILIAL='"+xFilial("SD1")+"' AND "
	   cQuery		+= "D1_DTDIGIT>='"+Dtos(MV_PAR01)+"' AND "
	   cQuery		+= "D1_DTDIGIT<='"+Dtos(MV_PAR02)+"' AND "
	   cQuery		+= "D_E_L_E_T_ = ' ' "
	   cQuery		+= "ORDER BY "+SqlOrder(SD1->(IndexKey()))
	
	   cQuery		:= ChangeQuery(cQuery)
	   dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD1,.T.,.T.)
	
	   For nX := 1 To len(aStru)
		   If aStru[nX][2] <> "C" 
			  TcSetField(cAliasSD1,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
		   EndIf
	   Next nX
	   dbSelectArea(cAliasSD1)	
   #ELSE
	   (cAliasSD1)->(dbSeek(xFilial("SD1")+DtoS(MV_PAR01),.T.) )
   #ENDIF

   While (cAliasSD1)->(!eof()) .and. xFilial("SD1") == (cAliasSD1)->D1_FILIAL .and. (cAliasSD1)->D1_DTDIGIT <=MV_PAR02
         SF4->(dbSeek(xFilial("SF4")+(cAliasSD1)->D1_TES))
         If SF4->F4_ESTOQUE=="S"
         	cNomeProd :=""
 	     	If SB1->(dbSeek(xFilial("SB1")+(cAliasSD1)->D1_COD))
		       If SB2->(dbSeek(xFilial("SB2")+(cAliasSD1)->D1_COD))
               	  cNomeProd := SB1->B1_DESC
               Endif   
            Endif
	        //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	        //³ Filtra grupos a serem utilizados no Livro LMP ³
	        //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
  	        If Alltrim(SB1->B1_GRUPO) >= Alltrim(mv_par03) .And. Alltrim(SB1->B1_GRUPO) <= Alltrim(mv_par04) .And.;
  	        	Alltrim(SB1->B1_COD) >= Alltrim(mv_par11) .And. Alltrim(SB1->B1_COD) <= Alltrim(mv_par12)
      	       cCodigo :=""
               If (cAliasSD1)->D1_TIPO$"DB"
                  SA1->(dbseek(xFilial("SA1")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
                  cCodigo :=SA1->A1_COD+SA1->A1_LOJA
               Else            
                  SA2->(dbseek(xFilial("SA2")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
                  cCodigo :=SA2->A2_COD+SA2->A2_LOJA
               Endif   
               cNome 	:=""
               cNome	:= If((cAliasSD1)->D1_TIPO$"DB",SA1->A1_NOME,SA2->A2_NOME)
      
               If (cArqLmpE)->(dbseek(DTOS((cAliasSD1)->D1_EMISSAO)+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_SERIE+(cAliasSD1)->D1_DOC+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
		          RecLock(cArqLmpE,.F.)
	           Else
		          RecLock(cArqLmpE,.T.)
	           EndIf
	           
	           dbSelectArea("SB2")
			   dbSetOrder(1)
			   If dbSeek(xFilial("SB2") + (cAliasSD1)->D1_COD)
					aSalAtu:= {0,0,0,0,0,0,0}
					While !SB2->(Eof()) .And. (B2_FILIAL + B2_COD == xFilial("SB2") + SB1->B1_COD)
						aSaldo	 := CalcEst(SB1->B1_COD,SB2->B2_LOCAL,(cAliasSD1)->D1_EMISSAO)
						If Len(aSalAtu) == 0
							aSalAtu:=ACLONE(aSaldo)
						Else
							For ny:=1 to Len(aSalAtu)
								aSalAtu[ny] += aSaldo[ny]
							Next ny
						EndIf
					dbSkip()
					End
			   Else
			   		aSalAtu := CalcEst(SB1->B1_COD,SB2->B2_LOCAL,(cAliasSD1)->D1_EMISSAO)
			   EndIf
			   
			   dbSelectArea("SB2")
			   dbSetOrder(1)
			   If dbSeek(xFilial("SB2") + (cAliasSD1)->D1_COD)
					aSalAtu2:= {0,0,0,0,0,0,0}
					While !SB2->(Eof()) .And. (B2_FILIAL + B2_COD == xFilial("SB2") + SB1->B1_COD)
						aSaldo2	 := CalcEst(SB1->B1_COD,SB2->B2_LOCAL,(cAliasSD1)->D1_EMISSAO+1)
						If Len(aSalAtu2) == 0
							aSalAtu2:=ACLONE(aSaldo2)
						Else
							For ny:=1 to Len(aSalAtu2)
								aSalAtu2[ny] += aSaldo2[ny]
							Next ny
						EndIf
					dbSkip()
					End
			   Else
			   		aSalAtu2 := CalcEst(SB1->B1_COD,SB2->B2_LOCAL,(cAliasSD1)->D1_EMISSAO)
			   EndIf
 	           	  
	           (cArqLmpE)->PRODUTO		    :=SB1->B1_COD
	           (cArqLmpE)->NOMEPROD		:=cNomeProd
	           //(cArqLmpE)->DATAMOV	 	    :=(cAliasSD1)->D1_EMISSAO
			   (cArqLmpE)->DATAMOV	 	    :=(cAliasSD1)->D1_DTDIGIT		           
	           (cArqLmpE)->ESTOQUE		    :=aSalAtu[1]
	           (cArqLmpE)->NOTAFISCAL		:=(cAliasSD1)->D1_DOC
	           (cArqLmpE)->SERIE			:=(cAliasSD1)->D1_SERIE
	           (cArqLmpE)->SERIEVIEW		:=(cAliasSD1)->&(SerieNfId("SD1",3,"D1_SERIE"))
	           (cArqLmpE)->DATAFISCAL		:=(cAliasSD1)->D1_EMISSAO
	           (cArqLmpE)->CODEMITE		:=cCodigo
	           (cArqLmpE)->EMITENTE		:=cNome
	           (cArqLmpE)->QUANTIDADE		+=(cAliasSD1)->D1_QUANT
	           (cArqLmpE)->TIPO			:=(cAliasSD1)->D1_TIPO
	           (cArqLmpE)->(MsUnLock())
	           nPos:=Ascan(aTotais,{ |x| x[1]==(cArqLmpE)->PRODUTO+DTOS((cArqLmpE)->DATAMOV)})
	           If nPos==0
                  If (cAliasSD1)->D1_TIPO=="D"
		             AADD(aTotais,{(cArqLmpE)->PRODUTO+DTOS((cArqLmpE)->DATAMOV),(cArqLmpE)->PRODUTO,(cArqLmpE)->DATAFISCAL,aSalAtu[1],0,0,0,0,0,0,0,0,0,0,0,"D","Notas Fiscais : "})
		          Else
		             AADD(aTotais,{(cArqLmpE)->PRODUTO+DTOS((cArqLmpE)->DATAMOV),(cArqLmpE)->PRODUTO,(cArqLmpE)->DATAFISCAL,aSalAtu[1],0,0,0,0,0,0,0,0,0,0,0,"N","Notas Fiscais : "})
		          Endif   
		          nPos :=Len(aTotais)
	           Endif

               If (cAliasSD1)->D1_TIPO=="D"
	              aTotais[nPos,07] +=(cAliasSD1)->D1_QUANT							   		//06.1 - Outras Entradas (justificar no campo 11 - Observacoes)
		          aTotais[nPos,08] :=(aTotais[nPos,04]+aTotais[nPos,06]+aTotais[nPos,07])	//06.2 - Estoque Disponivel (soma dos campos 03-E. Abert; 05-Entr. Norm. e 06.1-O.Entr.)
		          aTotais[nPos,09] :=(aTotais[nPos,13]+aTotais[nPos,14])					//06.3 - Saldos (resultado do campo 10 = soma dos campos 08 - T.Vendas e 09 - O. Saidas)
		          aTotais[nPos,10] :=(aTotais[nPos,08]-aTotais[nPos,09])					//06.4 - Estoque Contabil de Fechamento (campo 06.2 - Est. Disp. menos 06.3 - Saidas)
		          aTotais[nPos,11] :=aSalAtu2[1]											//06.5 - Estoque Fisico Medido
	              aTotais[nPos,17] +=(cAliasSD1)->D1_DOC+" "+(cAliasSD1)->&(SerieNfId("SD1",3,"D1_SERIE"))+";"
	           Else	     
		          aTotais[nPos,04] :=aSalAtu[1]												//03 - Estoque de Abertura
		          aTotais[nPos,05] :=0                    									//04 - Entradas Normais (compras recebidas)
	    	      aTotais[nPos,06] +=(cAliasSD1)->D1_QUANT									//05 - Total das Entradas
		          aTotais[nPos,08] :=(aTotais[nPos,04]+aTotais[nPos,06]+aTotais[nPos,07])	//06.2 - Estoque Disponivel (soma dos campos 03-E. Abert; 05-Entr. Norm. e 06.1-O.Entr.)
		          aTotais[nPos,09] :=(aTotais[nPos,13]+aTotais[nPos,14])					//06.3 - Saldos (resultado do campo 10 = soma dos campos 08 - T.Vendas e 09 - O. Saidas)
		          aTotais[nPos,10] :=(aTotais[nPos,08]-aTotais[nPos,09])					//06.4 - Estoque Contabil de Fechamento (campo 06.2 - Est. Disp. menos 06.3 - Saidas)
		          aTotais[nPos,11] :=aSalAtu2[1]											//06.5 - Estoque Fisico Medido
		          aTotais[nPos,13] :=0														//08 - Total das Saidas
		          aTotais[nPos,14] :=0														//09 - Outras Saidas (justificar no campo 11 - Observacoes)
		          aTotais[nPos,15] :=0														//10 - Total das Saidas (soma dos campos 08 e 09)
	           Endif   
	        Endif   
	     Endif  
	     (cAliasSD1)->(dbSkip())
   End
   
   dBSelectArea("SD2")
   SD2->(dbSetOrder(5))
   #IFDEF TOP
	   lQuery     := .T.
	   cAliasSD2  := "cSD2"
	   aStru		:= SD2->(dbStruct())
	   cQuery		:= "SELECT D2_FILIAL, D2_EMISSAO, D2_NUMSEQ, D2_COD, D2_QUANT, D2_TES, D2_CLIENTE, D2_LOJA, D2_DOC, D2_SERIE, D2_TIPO "
	   cQuery		+= "FROM "+RetSqlName("SD2")+" "
	   cQuery		+= "WHERE D2_FILIAL='"+xFilial("SD2")+"' AND "
	   cQuery		+= "D2_EMISSAO>='"+Dtos(MV_PAR01)+"' AND "
	   cQuery		+= "D2_EMISSAO<='"+Dtos(MV_PAR02)+"' AND "                   	
	   cQuery		+= "D_E_L_E_T_ = ' ' "
	   cQuery		+= "ORDER BY "+SqlOrder(SD2->(IndexKey()))
	
	   cQuery		:= ChangeQuery(cQuery)
	   dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD2,.T.,.T.)
	
	   For nX := 1 To len(aStru)
		   If aStru[nX][2] <> "C" 
		      TcSetField(cAliasSD2,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
		   EndIf
	   Next nX
	   dbSelectArea(cAliasSD2)	
   #ELSE
	   (cAliasSD2)->(dbSeek(xFilial("SD2")+DtoS(MV_PAR01),.T.) )
   #ENDIF

   While (cAliasSD2)->(!eof()) .and. xFilial("SD2") == (cAliasSD2)->D2_FILIAL .and. (cAliasSD2)->D2_EMISSAO <=MV_PAR02
         SF4->(dbSeek(xFilial("SF4")+(cAliasSD2)->D2_TES))
         If SF4->F4_ESTOQUE=="S"
            cNomeProd :=""
 	        If SB1->(dbSeek(xFilial("SB1")+(cAliasSD2)->D2_COD))
		       If SB2->(dbSeek(xFilial("SB2")+(cAliasSD2)->D2_COD))
                  cNomeProd := SB1->B1_DESC
               Endif   
            Endif
	        //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	        //³ Filtra grupos a serem utilizados no Livro LMP ³
	        //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
  	        If AllTrim(SB1->B1_GRUPO) >= AllTrim(mv_par03) .And. AllTrim(SB1->B1_GRUPO) <= AllTrim(mv_par04) .And.;
	  	        Alltrim(SB1->B1_COD) >= Alltrim(mv_par11) .And. Alltrim(SB1->B1_COD) <= Alltrim(mv_par12)
               cCodigo :=""
               If (cAliasSD2)->D2_TIPO$"DB"
                  SA2->(dbseek(xFilial("SA2")+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
                  cCodigo :=SA2->A2_COD+SA2->A2_LOJA
               Else            
                  SA1->(dbseek(xFilial("SA1")+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
                  cCodigo :=SA1->A1_COD+SA1->A1_LOJA
               Endif   
               cNome 	:=""
               cNome	:= If((cAliasSD2)->D2_TIPO$"DB",SA2->A2_NOME,SA1->A1_NOME)
      
               If (cArqLmpS)->(dbseek(DTOS((cAliasSD2)->D2_EMISSAO)+(cAliasSD2)->D2_COD+(cAliasSD2)->D2_SERIE+(cAliasSD2)->D2_DOC+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
		          RecLock(cArqLmpS,.F.)
	           Else
		          RecLock(cArqLmpS,.T.)
	           EndIf
	           
	           dbSelectArea("SB2")
			   dbSetOrder(1)
			   If dbSeek(xFilial("SB2") + (cAliasSD2)->D2_COD)
					aSalAtu:= {0,0,0,0,0,0,0}
					While !SB2->(Eof()) .And. (B2_FILIAL + B2_COD == xFilial("SB2") + SB1->B1_COD)
						aSaldo	 := CalcEst(SB1->B1_COD,SB2->B2_LOCAL,(cAliasSD2)->D2_EMISSAO)
						If Len(aSalAtu) == 0
							aSalAtu:=ACLONE(aSaldo)
						Else
							For ny:=1 to Len(aSalAtu)
								aSalAtu[ny] += aSaldo[ny]
							Next ny
						EndIf
					dbSkip()
					End
			   Else
			   		aSalAtu := CalcEst(SB1->B1_COD,SB2->B2_LOCAL,(cAliasSD2)->D2_EMISSAO)
			   EndIf
	           
	           dbSelectArea("SB2")
			   dbSetOrder(1)
			   If dbSeek(xFilial("SB2") + (cAliasSD2)->D2_COD)
					aSalAtu2:= {0,0,0,0,0,0,0}
					While !SB2->(Eof()) .And. (B2_FILIAL + B2_COD == xFilial("SB2") + SB1->B1_COD)
						aSaldo2	 := CalcEst(SB1->B1_COD,SB2->B2_LOCAL,(cAliasSD2)->D2_EMISSAO+1)
						If Len(aSalAtu2) == 0
							aSalAtu2:=ACLONE(aSaldo2)
						Else
							For ny:=1 to Len(aSalAtu2)
								aSalAtu2[ny] += aSaldo2[ny]
							Next ny
						EndIf
					dbSkip()
					End
			   Else
			   		aSalAtu2 := CalcEst(SB1->B1_COD,SB2->B2_LOCAL,(cAliasSD2)->D2_EMISSAO)
			   EndIf
	             
	           (cArqLmpS)->PRODUTO		:=SB1->B1_COD
	           (cArqLmpS)->NOMEPROD	    :=cNomeProd
	           (cArqLmpS)->DATAMOV		:=(cAliasSD2)->D2_EMISSAO
	           (cArqLmpS)->ESTOQUE		:=aSalAtu[1]
	           (cArqLmpS)->NOTAFISCAL	:=(cAliasSD2)->D2_DOC
	           (cArqLmpS)->SERIE		:=(cAliasSD2)->D2_SERIE
	           (cArqLmpS)->SERIEVIEW	:=(cAliasSD2)->&(SerieNfId("SD2",3,"D2_SERIE"))
	           (cArqLmpS)->DATAFISCAL	:=(cAliasSD2)->D2_EMISSAO
	           (cArqLmpS)->CODEMITE	:=cCodigo
	           (cArqLmpS)->EMITENTE	:=cNome
	           (cArqLmpS)->QUANTIDADE	+=(cAliasSD2)->D2_QUANT
	           (cArqLmpS)->TIPO		:=(cAliasSD2)->D2_TIPO
	           (cArqLmpS)->(MsUnLock())
	           nPos:=Ascan(aTotais,{ |x| x[1]==(cArqLmpS)->PRODUTO+DTOS((cArqLmpS)->DATAMOV)})
	           If nPos==0
                  If (cAliasSD2)->D2_TIPO=="D"
		             AADD(aTotais,{(cArqLmpS)->PRODUTO+DTOS((cArqLmpS)->DATAMOV),(cArqLmpS)->PRODUTO,(cArqLmpS)->DATAMOV,aSalAtu[1],0,0,0,0,0,0,0,0,0,(cAliasSD2)->D2_QUANT,0,"D","Notas Fiscais : "+(cAliasSD2)->D2_DOC+" "+(cAliasSD2)->&(SerieNfId("SD2",3,"D2_SERIE"))+";"})
                  Else   
		             AADD(aTotais,{(cArqLmpS)->PRODUTO+DTOS((cArqLmpS)->DATAMOV),(cArqLmpS)->PRODUTO,(cArqLmpS)->DATAMOV,aSalAtu[1],0,0,0,0,0,0,0,0,0,0,0,"N","Notas Fiscais : "})
		          Endif   
		          nPos :=Len(aTotais)
	           Endif

               If (cAliasSD2)->D2_TIPO=="D"
	     	      aTotais[nPos,14]+=(cAliasSD2)->D2_QUANT									//09 - Outras Saidas (justificar no campo 11 - Observacoes)
	              aTotais[nPos,15]:=(aTotais[nPos,13]+aTotais[nPos,14])					//10 - Total das Saidas (soma dos campos 08 e 09)
	              aTotais[nPos,10]:=(aTotais[nPos,08]-aTotais[nPos,15])					//06.4 - Estoque Contabil de Fechamento (campo 06.2 - Est. Disp. menos 06.3 - Saidas)
	     	      aTotais[nPos,17]+=(cAliasSD2)->D2_DOC+" "+(cAliasSD2)->&(SerieNfId("SD2",3,"D2_SERIE"))+";"
	           Else	
	              aTotais[nPos,04]:=aSalAtu[1]												//03 - Estoque de Abertura
	              aTotais[nPos,13]+=(cAliasSD2)->D2_QUANT									//08 - Total das Saidas
	              aTotais[nPos,15]:=(aTotais[nPos,13]+aTotais[nPos,14])					//10 - Total das Saidas (soma dos campos 08 e 09)
	              aTotais[nPos,09]:=(aTotais[nPos,13]+aTotais[nPos,14])					//06.3 - Saldos (resultado do campo 10 = soma dos campos 06 - T.Vendas e 09 - O. Saidas)
	              aTotais[nPos,10]:=(aTotais[nPos,08]-aTotais[nPos,09])					//06.4 - Estoque Contabil de Fechamento (campo 06.2 - Est. Disp. menos 06.3 - Saidas)
	           Endif   
	        Endif   
	     Endif   
	     (cAliasSD2)->( dbSkip())
   End
   
   //Cria as páginas sem movimento
   dDataAt := MV_PAR01
   While dDataAt <= MV_PAR02
    
        dbSelectArea("SB1")
        SB1->(dbSetOrder(1))
        SB1->(dbGoTop())
        Do While SB1->(!EOF())
        	If Alltrim(SB1->B1_GRUPO) >= Alltrim(mv_par03) .And. Alltrim(SB1->B1_GRUPO) <= Alltrim(mv_par04) .And.;
  	        	Alltrim(SB1->B1_COD) >= Alltrim(mv_par11) .And. Alltrim(SB1->B1_COD) <= Alltrim(mv_par12)
  	        	
  	        	If (cArqLmpE)->(!dbSeek(DTOS(dDataAt)+SB1->B1_COD))
  	        	
  	        		dbSelectArea("SB2")
					SB2->(dbSetOrder(1))
					SB2->(dbGoTop())
					SB2->(dbSeek(xFilial("SB2")+SB1->B1_COD))
					cProdAt := SB1->B1_COD
					Do While SB2->(!EOF()) .And. cProdAt == SB2->B2_COD .And. xFilial("SB2") == SB2->B2_FILIAL
						nSaldo := CalcEst(SB1->B1_COD,SB2->B2_LOCAL,dDataAt)[1]
						SB2->(dbSkip())
					EndDo
  	        	
					If RecLock(cArqLmpE,.T.)
						(cArqLmpE)->PRODUTO		    :=SB1->B1_COD
						(cArqLmpE)->NOMEPROD		:=SB1->B1_DESC
						(cArqLmpE)->DATAMOV	 	    :=dDataAt
						(cArqLmpE)->ESTOQUE		    :=nSaldo
						(cArqLmpE)->NOTAFISCAL		:=""
						(cArqLmpE)->SERIE			:=""
						(cArqLmpE)->SERIEVIEW	:=""
						(cArqLmpE)->CODEMITE		:=""
						(cArqLmpE)->EMITENTE		:=""
						(cArqLmpE)->QUANTIDADE		:=0
						(cArqLmpE)->TIPO			:=""
						(cArqLmpE)->(MsUnLock())
					EndIf
					
					AADD(aTotais,{(cArqLmpE)->PRODUTO+DTOS((cArqLmpE)->DATAMOV),(cArqLmpE)->PRODUTO,(cArqLmpE)->DATAFISCAL,nSaldo,0,0,0,nSaldo,0,nSaldo,nSaldo,0,0,0,0,"N","Notas Fiscais : "})
				EndIf
				
  	        	If (cArqLmpS)->(!dbSeek(DTOS(dDataAt)+SB1->B1_COD))
  	        	
  	        		dbSelectArea("SB2")
					SB2->(dbSetOrder(1))
					SB2->(dbGoTop())
					SB2->(dbSeek(xFilial("SB2")+SB1->B1_COD))
					cProdAt := SB1->B1_COD
					Do While SB2->(!EOF()) .And. cProdAt == SB2->B2_COD .And. xFilial("SB2") == SB2->B2_FILIAL
						nSaldo := CalcEst(SB1->B1_COD,SB2->B2_LOCAL,dDataAt)[1]
						SB2->(dbSkip())
					EndDo
  	        	
					If RecLock(cArqLmpS,.T.)
						(cArqLmpS)->PRODUTO		:=SB1->B1_COD
						(cArqLmpS)->NOMEPROD	:=SB1->B1_DESC
						(cArqLmpS)->DATAMOV		:=dDataAt
						(cArqLmpS)->ESTOQUE		:=nSaldo
						(cArqLmpS)->NOTAFISCAL	:=""
						(cArqLmpS)->SERIE		    :=""
						(cArqLmpS)->SERIEVIEW	:=""
						(cArqLmpS)->DATAFISCAL	:=dDataAt
						(cArqLmpS)->CODEMITE	:=""
						(cArqLmpS)->EMITENTE	:=""
						(cArqLmpS)->QUANTIDADE	+=0
						(cArqLmpS)->TIPO		:=""
						(cArqLmpS)->(MsUnLock())
					EndIf
					
					AADD(aTotais,{(cArqLmpS)->PRODUTO+DTOS((cArqLmpS)->DATAMOV),(cArqLmpS)->PRODUTO,(cArqLmpS)->DATAMOV,nSaldo,0,0,0,0,0,0,0,0,0,0,0,"N","Notas Fiscais : "})
				EndIf
				
        	EndIf
        	SB1->(dbSkip())
        EndDo
   		dDataAt++
   EndDo

   (cArqLmpE)->(Dbgotop())
   (cArqLmpS)->(Dbgotop())

   While (!(cArqLmpE)->(Eof()) .or. !(cArqLmpS)->(Eof()))
      	 nLin :=0
         While .T.
               aLay :=Array(31)
               LayOutLmp(@aLay,1)
               (cArqLmpE)->(dbseek(cChave))
	           cChave :=""
               dData 	  	:=(cArqLmpE)->DATAMOV
               cProduto	    :=(cArqLmpE)->PRODUTO
               nCont		:=0
            
	           While DTOS((cArqLmpE)->DATAMOV)==DTOS(dData) .AND. (cArqLmpE)->PRODUTO==cProduto
			         nPos:=Ascan(aTotais,{ |x| x[1]==(cArqLmpE)->PRODUTO+DTOS((cArqLmpE)->DATAMOV)})
   	  	             If ( nLin == 0 )
		                @ nLin,000 PSAY aValImp(Limite)
		                nLin++
		                FmtLin(,aLay[01],,,@nLin)
		                FmtLin(,aLay[02],,,@nLin)
		                FmtLin({StrZero(nFolha,5)},aLay[03],,,@nLin)
		                FmtLin(,aLay[04],,,@nLin)
		                FmtLin({SUBS((cArqLmpE)->NOMEPROD,1,45),(cArqLmpE)->DATAMOV},aLay[05],,,@nLin)
		                FmtLin(,aLay[06],,,@nLin)
		                FmtLin({Transform((cArqLmpE)->ESTOQUE,"@E 9999,999.999")},aLay[07],,,@nLin)
	  	                FmtLin(,aLay[08],,,@nLin)
	  	                FmtLin(,aLay[09],,,@nLin)
		                FmtLin(,aLay[10],,,@nLin)
		                FmtLin(,aLay[11],,,@nLin)
		                FmtLin(,aLay[12],,,@nLin)
		                FmtLin(,aLay[13],,,@nLin)
		             Endif
		             If (cArqLmpE)->TIPO <> "D"
                   	    FmtLin({(cArqLmpE)->NOTAFISCAL,(cArqLmpE)->SERIEVIEW,(cArqLmpE)->DATAFISCAL,(cArqLmpE)->EMITENTE,Transform((cArqLmpE)->QUANTIDADE,"@E 9999,999.999")},aLay[14],,,@nLin)
                     Endif   
                     nCont++
	                 (cArqLmpE)->(Dbskip())
                     cChave :=(cArqLmpE)->(DTOS(DATAMOV))+(cArqLmpE)->PRODUTO+(cArqLmpE)->SERIE+(cArqLmpE)->NOTAFISCAL+(cArqLmpE)->CODEMITE
                     If nCont>30
                        exit
                     Endif
               End
 	           While nLin < 44
                     FmtLin(,cLin,,,@nLin)
               End

               FmtLin(,aLay[15],,,@nLin)
 			   If nPos > 0
	              FmtLin({Transform(aTotais[nPos,6],"@E 9999,999.999")},aLay[16],,,@nLin)
	           Else   
	              FmtLin({Transform(0,"@E 9999,999.999")},aLay[16],,,@nLin)
	           Endif   
	           
               FmtLin(,aLay[17],,,@nLin)
       	       FmtLin(,aLay[18],,,@nLin)
	           FmtLin(,aLay[19],,,@nLin)

               If nPos > 0 
  	              FmtLin({Transform(aTotais[nPos,7],"@E 9999,999.999")},aLay[20],,,@nLin)
  	           Else   
  	              FmtLin({Transform(0,"@E 9999,999.999")},aLay[20],,,@nLin)
  	           Endif   
	           FmtLin(,aLay[21],,,@nLin)
               If nPos > 0
	              FmtLin({Transform(aTotais[nPos,08],"@E 9999,999.999")},aLay[22],,,@nLin)
	           Else   
	              FmtLin({Transform(0,"@E 9999,999.999")},aLay[22],,,@nLin)
	           Endif   
	           FmtLin(,aLay[23],,,@nLin)
               If nPos > 0
	              FmtLin({Transform(aTotais[nPos,15],"@E 9999,999.999")},aLay[24],,,@nLin)
	           Else   
	              FmtLin({Transform(0,"@E 9999,999.999")},aLay[24],,,@nLin)
	           Endif   
	           FmtLin(,aLay[25],,,@nLin)
			   If nPos > 0
		          FmtLin({Transform(aTotais[nPos,10],"@E 9999,999.999")},aLay[26],,,@nLin)
		       Else   
	   	          FmtLin({Transform(0,"@E 9999,999.999")},aLay[26],,,@nLin)
	   	       Endif   
	           FmtLin(,aLay[27],,,@nLin)
			   If nPos > 0
		          FmtLin({Transform(aTotais[nPos,11],"@E 9999,999.999")},aLay[28],,,@nLin)
		       Else
		          FmtLin({Transform(0,"@E 9999,999.999")},aLay[28],,,@nLin)
		       Endif   
	           FmtLin(,aLay[29],,,@nLin)
			   If nPos > 0
		          FmtLin({Transform((aTotais[nPos,11]-aTotais[nPos,10]),"@E 9999,999.999")},aLay[30],,,@nLin)
		       Else   
		          FmtLin({Transform(0,"@E 9999,999.999")},aLay[30],,,@nLin)
		       Endif   
	           FmtLin(,aLay[31],,,@nLin)
               nLin :=0
               Exit
         End
      
         nLin :=0
         While .T.
               aLay :=Array(26)
 	           LayOutLmp(@aLay,2)
               (cArqLmpS)->(dbseek(cChave2))
	           cChave2 :=""
               dData 	    :=(cArqLmpS)->DATAMOV
               cProduto		:=(cArqLmpS)->PRODUTO
               nCont       	:=0
           	   nLin	        :=0
               nTotSai 	    :=0
               While DTOS((cArqLmpS)->DATAMOV)==DTOS(dData) .AND. (cArqLmpS)->PRODUTO==cProduto
			         nPos:=Ascan(aTotais,{ |x| x[1]==(cArqLmpS)->PRODUTO+DTOS((cArqLmpS)->DATAMOV)})
 	  	             If ( nLin == 0 )
		                @ nLin,000 PSAY aValImp(Limite)
		                nLin++
		                FmtLin(,aLay[01],,,@nLin)
		                FmtLin(,aLay[02],,,@nLin)
		                FmtLin(,aLay[03],,,@nLin)
		                FmtLin(,aLay[04],,,@nLin)
		                FmtLin(,aLay[05],,,@nLin)
		                FmtLin(,aLay[06],,,@nLin)
	                 Endif
		             If (cArqLmpS)->TIPO <> "D"
                   	    FmtLin({(cArqLmpS)->NOTAFISCAL,(cArqLmpS)->SERIEVIEW,(cArqLmpS)->DATAMOV,(cArqLmpS)->EMITENTE,Transform((cArqLmpS)->QUANTIDADE,"@E 9999,999.999")},aLay[07],,,@nLin)
                   	    // A totalizacao das devolucoes devera ser feita em outra linha
                   	    nTotSai +=(cArqLmpS)->QUANTIDADE
                     Endif   
                     nCont++
                     (cArqLmpS)->(Dbskip())
                     cChave2 :=(cArqLmpS)->(DTOS(DATAMOV))+(cArqLmpS)->PRODUTO+(cArqLmpS)->SERIE +(cArqLmpS)->NOTAFISCAL+(cArqLmpS)->CODEMITE
                     If nCont>36
                        Exit
                     Endif
               End
               While nLin < 44
                     FmtLin(,cLin,,,@nLin)
               Enddo  
               FmtLin(,aLay[08],,,@nLin)
               FmtLin({Transform(nTotSai,"@E 9999,999.999")},aLay[09],,,@nLin)
               FmtLin(,aLay[10],,,@nLin)
               If nPos > 0
                  FmtLin({Transform(aTotais[nPos,14],"@E 9999,999.999")},aLay[11],,,@nLin)
               Else   
                  FmtLin({Transform(0,"@E 9999,999.999")},aLay[11],,,@nLin)
               Endif   
               FmtLin(,aLay[12],,,@nLin)
               If nPos > 0
	              FmtLin({Transform(aTotais[nPos,14]+nTotSai,"@E 9999,999.999")},aLay[13],,,@nLin)
	           Else   
                  FmtLin({Transform(0+nTotSai,"@E 9999,999.999")},aLay[13],,,@nLin)
               Endif   
               FmtLin(,aLay[14],,,@nLin)
               FmtLin(,aLay[15],,,@nLin)
               FmtLin(,aLay[16],,,@nLin)
               If nPos > 0
	              FmtLin({SUBS(aTotais[nPos,17],001,74)},aLay[17],,,@nLin)
         	      FmtLin({SUBS(aTotais[nPos,17],075,74)},aLay[18],,,@nLin)
           	      FmtLin({SUBS(aTotais[nPos,17],148,74)},aLay[19],,,@nLin)
                  FmtLin({SUBS(aTotais[nPos,17],222,74)},aLay[20],,,@nLin)
                  FmtLin({SUBS(aTotais[nPos,17],296,74)},aLay[21],,,@nLin)
                  FmtLin({SUBS(aTotais[nPos,17],370,74)},aLay[22],,,@nLin)
                  FmtLin({SUBS(aTotais[nPos,17],444,74)},aLay[23],,,@nLin)
                  FmtLin({SUBS(aTotais[nPos,17],518,74)},aLay[24],,,@nLin)
                  FmtLin({SUBS(aTotais[nPos,17],592,74)},aLay[25],,,@nLin)
               Else
	              FmtLin({""},aLay[17],,,@nLin)
         	      FmtLin({""},aLay[18],,,@nLin)
           	      FmtLin({""},aLay[19],,,@nLin)
                  FmtLin({""},aLay[20],,,@nLin)
                  FmtLin({""},aLay[21],,,@nLin)
                  FmtLin({""},aLay[22],,,@nLin)
                  FmtLin({""},aLay[23],,,@nLin)
                  FmtLin({""},aLay[24],,,@nLin)
                  FmtLin({""},aLay[25],,,@nLin)
               Endif   
               FmtLin(,aLay[26],,,@nLin)
               nLin :=0
               Exit
         End
         nFolha ++
   End
ElseIf mv_par05 == 2   
       aLay :=Array(55)
       LayOutLmp(@aLay,3)
       FmtLin(,aLay[01],,,@nLin)
       FmtLin(,aLay[02],,,@nLin)
       FmtLin(,aLay[03],,,@nLin)
       FmtLin(,aLay[04],,,@nLin)
       FmtLin(,aLay[05],,,@nLin)
       FmtLin(,aLay[06],,,@nLin)
       FmtLin(,aLay[07],,,@nLin)
       FmtLin(,aLay[08],,,@nLin)
       FmtLin(,aLay[09],,,@nLin)
       FmtLin(,aLay[10],,,@nLin)
       FmtLin(,aLay[11],,,@nLin)
       FmtLin(,aLay[12],,,@nLin)
       FmtLin(,aLay[13],,,@nLin)
       FmtLin(,aLay[14],,,@nLin)
       FmtLin(,aLay[15],,,@nLin)
       FmtLin(,aLay[16],,,@nLin)
       FmtLin(,aLay[17],,,@nLin)
       FmtLin(,aLay[18],,,@nLin)
       FmtLin(,aLay[19],,,@nLin)
       FmtLin(,aLay[20],,,@nLin)
       FmtLin(,aLay[21],,,@nLin)
       FmtLin(,aLay[22],,,@nLin)
       FmtLin(,aLay[23],,,@nLin)
       FmtLin(,aLay[24],,,@nLin)
       FmtLin(,aLay[25],,,@nLin)
       FmtLin(,aLay[26],,,@nLin)
	   FmtLin({StrZero(Val(mv_par06),10)},aLay[27],,,@nLin)
       FmtLin({SM0->M0_NOMECOM,SM0->M0_ENDENT},aLay[28],,,@nLin)
       FmtLin({SM0->M0_CIDENT,SM0->M0_ESTENT},aLay[29],,,@nLin)
       FmtLin({Transform(SM0->M0_CGC,"@R 99.999.999/9999-99"),Transform(SM0->M0_INSC,"@R 999.999.999.999")},aLay[30],,,@nLin)
       FmtLin({mv_par10},aLay[31],,,@nLin)
       FmtLin(,aLay[32],,,@nLin)
       FmtLin(,aLay[33],,,@nLin)
       FmtLin(,aLay[34],,,@nLin)
       FmtLin(,aLay[35],,,@nLin)
       FmtLin(,aLay[36],,,@nLin)
       FmtLin(,aLay[37],,,@nLin)
       FmtLin(,aLay[38],,,@nLin)
       FmtLin(,aLay[39],,,@nLin)
       FmtLin(,aLay[40],,,@nLin)
       FmtLin(,aLay[41],,,@nLin)
       FmtLin({Transform(Val(mv_par07),"@E 999,999,999.999")},aLay[42],,,@nLin)
       FmtLin(,aLay[43],,,@nLin)
       FmtLin(,aLay[44],,,@nLin)
       FmtLin(,aLay[45],,,@nLin)
       FmtLin(,aLay[46],,,@nLin)
       FmtLin({mv_par08},aLay[47],,,@nLin)
       FmtLin(,aLay[48],,,@nLin)
       FmtLin(,aLay[49],,,@nLin)
       FmtLin(,aLay[50],,,@nLin)
       FmtLin(,aLay[51],,,@nLin)
       FmtLin(,aLay[52],,,@nLin)
       FmtLin({"____________________________________________"},aLay[53],,,@nLin)
       FmtLin({"Assinatura do Representante Legal da Empresa"},aLay[54],,,@nLin)
       FmtLin(,aLay[55],,,@nLin)
ElseIf mv_par05 == 3
       aLay :=Array(55)
       LayOutLmp(@aLay,4)
       FmtLin(,aLay[01],,,@nLin)
       FmtLin(,aLay[02],,,@nLin)
       FmtLin(,aLay[03],,,@nLin)
       FmtLin(,aLay[04],,,@nLin)
       FmtLin(,aLay[05],,,@nLin)
       FmtLin(,aLay[06],,,@nLin)
       FmtLin(,aLay[07],,,@nLin)
       FmtLin(,aLay[08],,,@nLin)
       FmtLin(,aLay[09],,,@nLin)
       FmtLin(,aLay[10],,,@nLin)
       FmtLin(,aLay[11],,,@nLin)
       FmtLin(,aLay[12],,,@nLin)
       FmtLin(,aLay[13],,,@nLin)
       FmtLin(,aLay[14],,,@nLin)
       FmtLin(,aLay[15],,,@nLin)
       FmtLin(,aLay[16],,,@nLin)
       FmtLin(,aLay[17],,,@nLin)
       FmtLin(,aLay[18],,,@nLin)
       FmtLin(,aLay[19],,,@nLin)
       FmtLin(,aLay[20],,,@nLin)
       FmtLin(,aLay[21],,,@nLin)
       FmtLin(,aLay[22],,,@nLin)
       FmtLin(,aLay[23],,,@nLin)
       FmtLin(,aLay[24],,,@nLin)
       FmtLin(,aLay[25],,,@nLin)
       FmtLin(,aLay[26],,,@nLin)
	   FmtLin(,aLay[27],,,@nLin)
       FmtLin(,aLay[28],,,@nLin)
       FmtLin(,aLay[29],,,@nLin)
       FmtLin(,aLay[30],,,@nLin)
       FmtLin(,aLay[31],,,@nLin)
       FmtLin(,aLay[32],,,@nLin)
       FmtLin(,aLay[33],,,@nLin)
       FmtLin(,aLay[34],,,@nLin)
       FmtLin(,aLay[35],,,@nLin)
       FmtLin(,aLay[36],,,@nLin)
       FmtLin(,aLay[37],,,@nLin)
       FmtLin(,aLay[38],,,@nLin)
       FmtLin(,aLay[39],,,@nLin)
       FmtLin(,aLay[40],,,@nLin)
       FmtLin(,aLay[41],,,@nLin)
       FmtLin(,aLay[42],,,@nLin)
       FmtLin(,aLay[43],,,@nLin)
       FmtLin(,aLay[44],,,@nLin)
       FmtLin(,aLay[45],,,@nLin)
       FmtLin(,aLay[46],,,@nLin)
       FmtLin({mv_par09},aLay[47],,,@nLin)
       FmtLin(,aLay[48],,,@nLin)
       FmtLin(,aLay[49],,,@nLin)
       FmtLin(,aLay[50],,,@nLin)
       FmtLin(,aLay[51],,,@nLin)
       FmtLin(,aLay[52],,,@nLin)
       FmtLin({"____________________________________________"},aLay[53],,,@nLin)
       FmtLin({"Assinatura do Representante Legal da Empresa"},aLay[54],,,@nLin)
       FmtLin(,aLay[55],,,@nLin)
Endif

dbSelectArea(cArqLmpE)
dbCloseArea()
Ferase(cArqLmpE+".DBF")
Ferase(cArqLmpE+OrdBagExt())

dbSelectArea(cArqLmpS)
dbCloseArea()
Ferase(cArqLmpS+".DBF")
Ferase(cArqLmpS+OrdBagExt())

#IFDEF TOP
	dbSelectArea(cAliasSD2)
	dbCloseArea()
	dbSelectArea(cAliasSD1)
	dbCloseArea()
#ENDIF    

Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ LayOutLMP() ³ Autor ³ Edstron E. Correia ³ Data ³29/04/02³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Lay-Out do Livro de Movimentacao de Produtos             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR907                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function LayOutLmp(aLay,nTipo)
If nTipo==1
   aLay[01] :="+--------------------------------------------------------------------------------------------------+---------+"
   aLay[02] :="|                             Livro de Movimentacao de Produtos (LMP)                              |  Folha  |"
   aLay[03] :="|                                (quantidades expressas em litros)                                 |  #####  |"
   aLay[04] :="+------------------------------------------------------------------+-------------------------------+---------+"
   aLay[05] :="| 01 - Combustivel : ############################################# | 02 - Data da Movimentacao : ##/##/##    |"
   aLay[06] :="+------------------------------------------------------------------+-----------------------------------------+"
   aLay[07] :="|                                                                  | 03 - Estoque de Abertura : ############ |"
   aLay[08] :="+------------------------------------------------------------------+-----------------------------------------+"
   aLay[09] :="| 04 - Entradas Normais (compras recebidas)                        |                                         |"
   aLay[10] :="+------------------------------------------------------------------+-----------------------------------------+"
   aLay[11] :="+--------------+-------+------------+-------------------------------------------------------+----------------+"
   aLay[12] :="| Numero da NF | Serie |    Data    |                       Emitente                        |   Quantidade   |"
   aLay[13] :="+--------------+-------+------------+-------------------------------------------------------+----------------+"
   aLay[14] :="|  ##########  | ##### | ########## | ##################################################### | ############## |"
   aLay[15] :="+--------------+-------+------------+-------------------------------------------------------+----------------+"
   aLay[16] :="|                                                                  05 - Total das Entradas  | ############## |"
   aLay[17] :="+-----------------------------------+-------------------------------------------------------+----------------+"
   aLay[18] :="| 06 - Demonstrativo                |                                                                        |"
   aLay[19] :="+-----------------------------------+-------------------------------------------------------+----------------+"
   aLay[20] :="| 06.1 - Outras Entradas (justificar no campo 11 - Observacoes)                             | ############## |"
   aLay[21] :="+-------------------------------------------------------------------------------------------+----------------+"
   aLay[22] :="| 06.2 - Estoque Disponivel (soma dos campos 03-E. Abert; 05-Entr. Norm. e 06.1-O.Entr.):   | ############## |"
   aLay[23] :="+-------------------------------------------------------------------------------------------+----------------+"
   aLay[24] :="| 06.3 - Saldos (resultado do campo 10 = soma dos campos 06 - T.Vendas e 09 - O. Saidas):   | ############## |"
   aLay[25] :="+-------------------------------------------------------------------------------------------+----------------+"
   aLay[26] :="| 06.4 - Estoque Contabil de Fechamento (campo 06.2 - Est. Disp. menos 06.3 - Saidas):      | ############## |"
   aLay[27] :="+-------------------------------------------------------------------------------------------+----------------+"
   aLay[28] :="| 06.5 - Estoque Fisico Medido :                                                            | ############## |"
   aLay[29] :="+-------------------------------------------------------------------------------------------+----------------+"
   aLay[30] :="| 06.6 - Variacao Apurada (o valor sera negativo se o estoque for inferior ao contabil):    | ############## |"
   aLay[31] :="+-------------------------------------------------------------------------------------------+----------------+"
ElseIf nTipo==2
   aLay[01] :="+------------------------------------------------------------------------------------------------------------+"
   aLay[02] :="| 07 - Vendas (saidas normais)                                                                               |"
   aLay[03] :="+------------------------------------------------------------------------------------------------------------+"
   aLay[04] :="+--------------+-------+------------+-------------------------------------------------------+----------------+"
   aLay[05] :="| Numero da NF | Serie |    Data    |                    Destinatario                       |   Quantidade   |"
   aLay[06] :="+--------------+-------+------------+-------------------------------------------------------+----------------+"
   aLay[07] :="|  ##########  | ##### | ########## | ##################################################### | ############## |"
   aLay[08] :="+--------------+-------+------------+-------------------------------------------------------+----------------+"
   aLay[09] :="|                                                                     08 - Total das Saidas | ############## |"
   aLay[10] :="+-------------------------------------------------------------------------------------------+----------------+"
   aLay[11] :="| 09 - Outras Saidas (justificar no campo 11 - Observacoes)                                 | ############## |"
   aLay[12] :="+-------------------------------------------------------------------------------------------+----------------+"
   aLay[13] :="| 10 - Total das Saidas (soma dos campos 08 e 09) :                                         | ############## |"
   aLay[14] :="+-------------------------------------------------------------------------------------------+----------------+"
   aLay[15] :="| 11 - Observacoes                                                                                           |"
   aLay[16] :="+----------------------------------------------------------------------------+-------------------------------+"
   aLay[17] :="| ########################################################################## |                               |"
   aLay[18] :="| ########################################################################## |                               |"
   aLay[19] :="| ########################################################################## |                               |"
   aLay[20] :="| ########################################################################## |                               |"
   aLay[21] :="| ########################################################################## |                               |"
   aLay[22] :="| ########################################################################## |                               |"
   aLay[23] :="| ########################################################################## |                               |"
   aLay[24] :="| ########################################################################## |                               |"
   aLay[25] :="| ########################################################################## |                               |"
   aLay[26] :="+----------------------------------------------------------------------------+-------------------------------+"
ElseIf nTipo==3
   aLay[01] :="                                                                                                              "
   aLay[02] :="                                                                                                              "
   aLay[03] :="                                                                                                              "
   aLay[04] :="                                                                                                              "
   aLay[05] :="                                                                                                              "
   aLay[06] :="                                                                                                              "
   aLay[07] :="                                                                                                              "
   aLay[08] :="                                                                                                              "
   aLay[09] :="                                                                                                              "
   aLay[10] :="                                                                                                              "
   aLay[11] :="                                                                                                              "
   aLay[12] :="                                                                                                              "
   aLay[13] :="                                              TERMO DE ABERTURA                                               "
   aLay[14] :="                                            =====================                                             "
   aLay[15] :="                                                                                                              "
   aLay[16] :="                                                                                                              "
   aLay[17] :="                                                                                                              "
   aLay[18] :="                                                                                                              "
   aLay[19] :="                                                                                                              "
   aLay[20] :="                                                                                                              "
   aLay[21] :="                                                                                                              "
   aLay[22] :="                                                                                                              "
   aLay[23] :="                                                                                                              "
   aLay[24] :="                                                                                                              "
   aLay[25] :="                                                                                                              "
   aLay[26] :="                                                                                                              "
   aLay[27] :="       Este livro servira como Livro de Movimentacao de Produtos, Numero Sequencial ########## da             "
   aLay[28] :="       ########################################, sita na ##############################, na cidade            "
   aLay[29] :="       de ####################-## inscrita no Cadastro Nacional de Pessoa Juridica sob o numero               "
   aLay[30] :="       ####################, Fazenda Estadual sob o numero ############### e Municipal sobre o                "
   aLay[31] :="       numero ##################.                                                                             "
   aLay[32] :="                                                                                                              "
   aLay[33] :="                                                                                                              "
   aLay[34] :="                                                                                                              "
   aLay[35] :="                                                                                                              "
   aLay[36] :="                                                                                                              "
   aLay[37] :="                                                                                                              "
   aLay[38] :="                                                                                                              "
   aLay[39] :="                                                                                                              "
   aLay[40] :="                                                                                                              "
   aLay[41] :="                                                                                                              "
   aLay[42] :="       Capacidade Nominal de Armazenamento : ###############													 "
   aLay[43] :="                                                                                                              "
   aLay[44] :="                                                                                                              "
   aLay[45] :="                                                                                                              "
   aLay[46] :="                                                                                                              "
   aLay[47] :="       Data de Abertura : ##/##/##																			  "
   aLay[48] :="                                                                                                              "
   aLay[49] :="                                                                                                              "
   aLay[50] :="                                                                                                              "
   aLay[51] :="                                                                                                              "
   aLay[52] :="                                                                                                              "
   aLay[53] :="			____________________________________________"
   aLay[54] :="			Assinatura do Representante Legal da Empresa"
   aLay[55] :="                                                                                                              "
ElseIf nTipo==4
   aLay[01] :="                                                                                                              "
   aLay[02] :="                                                                                                              "
   aLay[03] :="                                                                                                              "
   aLay[04] :="                                                                                                              "
   aLay[05] :="                                                                                                              "
   aLay[06] :="                                                                                                              "
   aLay[07] :="                                                                                                              "
   aLay[08] :="                                                                                                              "
   aLay[09] :="                                                                                                              "
   aLay[10] :="                                                                                                              "
   aLay[11] :="                                                                                                              "
   aLay[12] :="                                                                                                              "
   aLay[13] :="                                             TERMO DE FECHAMENTO                                              "
   aLay[14] :="                                            =====================                                             "
   aLay[15] :="                                                                                                              "
   aLay[16] :="                                                                                                              "
   aLay[17] :="                                                                                                              "
   aLay[18] :="                                                                                                              "
   aLay[19] :="                                                                                                              "
   aLay[20] :="                                                                                                              "
   aLay[21] :="                                                                                                              "
   aLay[22] :="                                                                                                              "
   aLay[23] :="                                                                                                              "
   aLay[24] :="                                                                                                              "
   aLay[25] :="                                                                                                              "
   aLay[26] :="                                                                                                              "
   aLay[27] :="                                                                                                              "
   aLay[28] :="                                                                                                              "
   aLay[29] :="                                                                                                              "
   aLay[30] :="                                                                                                              "
   aLay[31] :="                                                                                                              "
   aLay[32] :="                                                                                                              "
   aLay[33] :="                                                                                                              "
   aLay[34] :="                                                                                                              "
   aLay[35] :="                                                                                                              "
   aLay[36] :="                                                                                                              "
   aLay[37] :="                                                                                                              "
   aLay[38] :="                                                                                                              "
   aLay[39] :="                                                                                                              "
   aLay[40] :="                                                                                                              "
   aLay[41] :="                                                                                                              "
   aLay[42] :="                                                                                                              "
   aLay[43] :="                                                                                                              "
   aLay[44] :="                                                                                                              "
   aLay[45] :="                                                                                                              "
   aLay[46] :="                                                                                                              "
   aLay[47] :="       Data de Fechamento : ##/##/##																			  "
   aLay[48] :="                                                                                                              "
   aLay[49] :="                                                                                                              "
   aLay[50] :="                                                                                                              "
   aLay[51] :="                                                                                                              "
   aLay[52] :="                                                                                                              "
   aLay[53] :="			____________________________________________"
   aLay[54] :="			Assinatura do Representante Legal da Empresa"
   aLay[55] :="                                                                                                              "
Endif
Return(Nil)
