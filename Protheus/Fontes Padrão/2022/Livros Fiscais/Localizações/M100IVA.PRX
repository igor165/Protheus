#include "SIGAWIN.CH"

//Constantes utilizadas no sistema argentino
#DEFINE _NOMEIMPOS 01
#DEFINE _ALIQUOTA  02
#DEFINE _BASECALC  03
#DEFINE _IMPUESTO  04
#DEFINE _RATEOFRET 11
#DEFINE _RATEODESP 13
#DEFINE _IVAGASTOS 14
#DEFINE _IVAFLETE  12
#DEFINE _VLRTOTAL  3
#DEFINE _FLETE     4
#DEFINE _GASTOS    5
//Posicoes  do terceiro array recebido nos impostos a traves da matxfis...
#DEFINE X_IMPOSTO    01 //Nome do imposto
#DEFINE X_NUMIMP     02 //Sufixo do imposto

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±º Programa  º   M100IVA  º Autor º     Lucas               º Data º   02/12/99  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º                         Programa que calcula o IVA                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Sintaxe   º M100IVA                                                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÎÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Parametrosº Nenhum                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÎÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Retorno   º aImposto                                                          º±±
±±ºÍÍÍÍÍÍÍÍÍÍÍÎÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Uso       º MATA100, chamado pelo ponto de entrada        	                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º                 Atualizacoes efetuadas desde a codificacao inicial            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºProgramadorº Data   º      BOPS    º  Motivo da Alteracao                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÎÍÍÍÍÍÍÍÍÎÍÍÍÍÍÍÍÍÍÍÍÍÍÍÎÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Nava      º18/07/01º              º Reescrito pela funcao GetCountryList.     º±±
±±ºJonathan G.º10/02/17º  MMI-4859    ºSe toma el valor de IT_ADIANT para tomar   º±±
±±º           º        º              ºdescontar el valor del anticipos de la baseº±±
±±º           º        º              ºde calculo                                 º±±
±±ºDora Vega  º21/04/17º  MMI-5338    ºMerge de replica MMI-4860.Se borra asigna- º±±
±±º           º        º              ºcion de valor 0 en calculo de impuesto(MEX)º±±
±±º  Marco A. º11/07/18º DMANSISTE-22 ºRedondear valor del impuesto, como se hace º±±
±±º           º        º              ºpara salidas (M460IVA). (MEX)              º±±
±±ºOscar G.   º15/10/18º  DMINA-3756  ºConsiderar otro impuesto en la base.       º±±
±±º           º        º              º(Impuesto incidente) ECU                   º±±
±±ºMarco A G. º17/10/19º  DMINA-7327  ºSe agrega tratamiento para las NCC que in- º±±
±±º           º        º              ºcluyan descuento y utlicen el MV_DESCSAI.  º±±
±±ºOscar G.   º16/01/20º  DMINA-7896  ºSe agrgea el gasto de seguro para el cálc. º±±
±±º           º        º              ºde IVA. COL                                º±±
±±ºLuisEnríqueº19/08/20º  DMINA-9853  ºAjuste corrige descuento en la base para elº±±
±±º           º        º              ºdoc NCC cuando MV_DESCSAI es 1, TES sobre  º±±
±±º           º        º              ºel neto (COL)                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function M100iva(cCalc,nIt,aInf)

	LOCAL cFunct
	LOCAL aRet,lXFis
	LOCAL aCountry // Array de Paises nesta forma : // { { "BRA" , "Brasil", "BR" } , { "ARG" , "Argentina","AR"} ,
	LOCAL aArea := GetArea()

	lXFis:=(MafisFound() .And. ProcName(1)!="EXECBLOCK")

	aCountry := GetCountryList()
	cFunct	:= "M100IVA" + aCountry[Ascan( aCountry, { |x| x[1] == cPaisLoc } )][3] // retorna pais com 2 letras
	aRet    := &(cFunct)(cCalc,nIt,aInf,lXFis)

	RestArea( aArea )

RETURN aRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ M100IVA	³ Autor ³ MARCELLO GABRIEL     ³ Data ³ 02.12.1999 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ CALCULO IVA GENERICO - entrada     (MEXICO)                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ Generico                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Percy Horna  ³19/10/00³xxxxxx³Fue alterada a base de datos de Excep-   ³±±
±±³              ³        ³      ³ciones de SF7->SFF, inicialmente utili-  ³±±
±±³              ³        ³      ³zando los Impuestos de IESPS (mejico).   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
FUNCTION M100IVAME(cCalculo,nItem,aInfo,lXFis)
	local aImp,aItem,cImp,nOrdSFC,nRegSFC,nRegSB1,xRet
	local nBase			:= 0, nAliq := 0, lALIQ := .f., cFil, cAux, lIsento := .f., nE
	Local lDescDVIt		:= GetNewPar("MV_DESCDVI",.T.)    // Soma o valor do desconto ao item
	Local nDesc			:= 0
	Local cImpIncid		:= ""
	Local aImpRef		:= {}
	Local aImpVal		:= {}
	Local nI			:= 0
	Local nDecs			:= 2
	Local lDesNCCMex	:= cPaisLoc == "MEX" .And. FunName() == "MATA465N" .And. cEspecie == "NCC"

	dbselectarea("SFF")
	dbSetOrder(3)

	cFil:=xfilial()

	If !lXfis
		aItem:=ParamIxb[1]
		aImp:=ParamIxb[2]
		cImp:=aImp[1]
		cImpIncid:=aImp[10]
	Else
		cImp:=aInfo[X_IMPOSTO]
		SB1->(DbGoto(MaFisRet(nItem,"IT_RECNOSB1")))
		xRet:=0
		cImpIncid:=""
	Endif

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ A variavel ParamIxb tem como conteudo um Array[2,?]:          ³
	³                                                               ³
	³ [1,1] > Quantidade Vendida                     		        ³
	³ [1,2] > Preco Unitario                            	        ³
	³ [1,3] > Valor Total do Item, com Descontos etc...             ³
	³ [1,4] > Valor do Frete Rateado para Este Item ...             ³
	³ [1,5] > Array Contendo os Impostos j  calculados, no caso de  ³
	³         incidˆncia de outros impostos.                        ³
	³ [2,?] > Array aImposto, Contendo as Informa‡oes do Imposto que³
	³         ser  calculado.                                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	/*/
	
	if dbseek(cFil+cImp)
		while FF_IMPOSTO == cImp .and. FF_FILIAL == cFil .and. !lAliq
			cAux:=Alltrim(FF_GRUPO)
			if cAux!=""
				lAliq:=(cAux==alltrim(SB1->B1_GRUPO))
			endif
			cAux:=alltrim(FF_ATIVIDA)
			if cAux!=""
				lAliq:=(cAux==alltrim(SA1->A1_ATIVIDA))
			endif
			if lAliq
				if !(lIsento:=(FF_TIPO=="S"))
					nAliq:=FF_ALIQ
				endif
			endif
			dbskip()
		enddo
	endif

	if !lIsento
		if !lAliq .And. If(!lXFis,.T.,cCalculo=="A")
			dbselectarea("SFB")    // busca a aliquota padrao
			if dbseek(xfilial()+cImp)
				nAliq:=SFB->FB_ALIQ
			endif
		endif
		If !lXfis
			nBase:=aItem[3]+aItem[4]+aItem[5]  //total + frete + outros impostos
			//Tira os descontos se for pelo liquido .Bruno
			If Subs(aImp[5],4,1) == "S" .And. Len(aImp) >= 18 .And. ValType(aImp[18])=="N"
				nBase-=aImp[18]
			Endif
			//+---------------------------------------------------------------+
			//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
			//+---------------------------------------------------------Lucas-+
			nI:=At(cImpIncid,";" )
			nI:=If(nI==0,Len(AllTrim(cImpIncid))+1,nI)
			While nI>1
				nE:=AScan(aItem[6],{|x| x[1]==Left(cImpIncid,nI-1)})
				If nE>0
					nBase+=aItem[6,nE,4]
				End
				cImpIncid:=Stuff(cImpIncid,1,nI,"")
				nI:=At(cImpIncid,";")
				nI:=If(nI==0,Len(AllTrim(cImpIncid))+1,nI)
			End
		Else
			If cCalculo=="B"
		
				nBase:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
				If cPaisLoc == "MEX" .AND. SD1->(FieldPos("D1_VALADI")) > 0
		       		nBase-=MaFisRet(nItem,"IT_ADIANT")
		       	EndIf
		       	//Tira os descontos se for pelo liquido
				nOrdSFC:=(SFC->(IndexOrd()))
				nRegSFC:=(SFC->(Recno()))
				SFC->(DbSetOrder(2))
				If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+cImp)))
					cImpIncid:=Alltrim(SFC->FC_INCIMP)
					If SFC->FC_LIQUIDO=="S"
						nDesc := IIf(SFC->FC_CALCULO == "T", MaFisRet(nItem,"NF_DESCONTO"), MaFisRet(nItem, "IT_DESCONTO"))
						nBase -= nDesc
						If GetNewPar('MV_DESCSAI', '1') == '1'  .AND. cModulo $ "FAT|LOJA|FRT|TMK" .And. IIf(lDesNCCMex, .T., !lDescDVIt)
							nBase += nDesc
						Endif
					Endif
				Endif

				//Verifica se tem imposto incidente.
				SFC->(DbSetOrder(2))
				If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[1])))
					cImpIncid := Alltrim(SFC->FC_INCIMP)
				Endif
            
				SFC->(DbSetOrder(nOrdSFC))
				SFC->(DbGoto(nRegSFC))
				
	            //+---------------------------------------------------------------+
	            //¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
	            //+---------------------------------------------------------------+            
				If !Empty(cImpIncid)
					aImpRef := MaFisRet(nItem,"IT_DESCIV")
					aImpVal := MaFisRet(nItem,"IT_VALIMP")
					For nI := 1 to Len(aImpRef)
						If !Empty(aImpRef[nI])
							IF Trim(aImpRef[nI][1])$cImpIncid
								nBase += aImpVal[nI]
								xRet := nBase
							Endif
						Endif
					Next
				Endif
           
				If cPaisLoc <> "MEX"
					nBase += MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
				EndIf
			Endif
		Endif
	endif

	If !lXFis
		aImp[02]:=nAliq
		aImp[03]:=nBase
		aImp[04]:=(nAliq * nBase)/100
		xRet:=aImp
	Else
		Do Case
		Case cCalculo=="B"
			xRet:=nBase
		Case cCalculo=="A"
			xRet:=nALiq
		Case cCalculo=="V"
			xRet:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
			xRet:= Round(xRet * ( MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP]) /100 ),nDecs)
		EndCase
	Endif

RETURN(xRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³¦¦Funçào    ³M100IVAPA ³ Autor ³ Marcio Nunes           ³ Data ³ 09/04/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³¦¦Descriçào ³ Programa que Calcula o IVA (Paraguai)                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³¦¦Uso       ³ MATA100, chamado pelo ponto de entrada                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function M100ivaPA(cCalculo,nItem,aInfo,lXFis)

	Local xRet,nRegSFC,nOrdSFC
	Local aImpRef,aImpVal,nI
	LOCAL nDecimais  	:= 2
	Local nMoeda		:= 1
	Local cConcProd		:= ""
	Local cImp			:= ""
	Local nBase 		:= 0
	Local nAliqAg		:= 0
	Local nAliq			:= 0
	Local aImposto		:= {}
	Local cTes			:= ""
	Local cProd		  	:= ""
	Local nDecs 		:= 0

	SetPrvt("CALIASROT,CORDEMROT,AITEMINFO,AIMPOSTO,CIMPINCID,CBUSCADEC")
	SetPrvt("NDECI,NI,NE,")

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Observacao :                                                  ³
	³                                                               ³
	³ a variavel ParamIxb tem como conteudo um Array[2], contendo : ³
	³ [1,1] > Quantidade Vendida                                    ³
	³ [1,2] > Preco Unitario                                        ³
	³ [1,3] > Valor Total do Item, com Descontos etc...             ³
	³ [1,4] > Valor do Frete rateado para este Item ...             ³
	³ [1,5] > Valor das Despesas rateado para este Item...          ³
	³ [1,6] > Array Contendo os Impostos já calculados, no caso de  ³
	³        incidência de outros impostos.                         ³
	³ [2,1] > Array aImposto, Contendo as Informações do Imposto que³
	³         será calculado.                                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/
	lcalc1 := .f.

	If Type("M->F1_MOEDA")<>"U"
		nMoeda:= M->F1_MOEDA
	ElseIf Type("M->C7_MOEDA")<>"U"
		nMoeda:= M->C7_MOEDA
	ElseIf Type("M->F2_MOEDA")<>"U"
		nMoeda:= M->F2_MOEDA
	ElseIf Type("M->C5_MOEDA")<>"U"
		nMoeda:= M->C5_MOEDA
	ElseIf Type("nMoedaPed")<>"U"
		nMoeda:= nMoedaPed
	ElseIf Type("nMoedaNf")<> "U"
		nMoeda:= nMoedaNf
	ElseIf Type("nMoedaCor")<> "U"
		nMoeda:= nMoedaCor
	ElseIf lXFis
		nMoeda 		:= MAFISRET(,'NF_MOEDA')
	EndIf
	
	nDecimais := MsDecimais(nMoeda)

	If !lXFis
		aItemINFO := ParamIxb[1]
		aImposto  := AClone( ParamIxb[2] )
		cImpIncid := aImposto[10]
		xRet	  :=aImposto
		cTes	  := SF4->F4_CODIGO
		cProd	  := SB1->B1_COD
		cImp	  :=aImposto[1]
	Else
		xRet:=0
		SFB->(DbSeek(xFilial("SFB")+aInfo[X_IMPOSTO]))
		cImpIncid:=""
		cImp:=aInfo[X_IMPOSTO]
		cTes		:= MaFisRet(nItem,"IT_TES")
		cProd		:= MaFisRet(nItem,"IT_PRODUTO")
		nValMerc	:= MaFisRet(nItem,"IT_VALMERC")
	Endif

	If Type("M->F1_MOEDA")<>"U"
		nMoeda:= M->F1_MOEDA
	ElseIf Type("M->C7_MOEDA")<>"U"
		nMoeda:= M->C7_MOEDA
	ElseIf Type("M->F2_MOEDA")<>"U"
		nMoeda:= M->F2_MOEDA
	ElseIf Type("M->C5_MOEDA")<>"U"
		nMoeda:= M->C5_MOEDA
	ElseIf Type("nMoedaPed")<>"U"
		nMoeda:= nMoedaPed
	ElseIf Type("nMoedaNf")<> "U"
		nMoeda:= nMoedaNf
	ElseIf Type("nMoedaCor")<> "U"
		nMoeda:= nMoedaCor
	ElseIf lXFis
		nMoeda 		:= MAFISRET(,'NF_MOEDA')
	EndIf
	
	If Type("nTipoGer")<> "U" .And.	Type("nMoedSel")<> "U"
		nMoeda:= If(nTipoGer==2,nMoedSel,SC5->C5_MOEDA)
	EndIf
	
	nDecs := MsDecimais(nMoeda)

	//+---------------------------------------------------------------+
	//¦ Verificar o tipo do Fornecedor.                               ¦
	//+---------------------------------------------------------------+
	If cModulo$"FAT|LOJA|FRT|TMK"
		dbSelectArea( "SA1" )
		If A1_tipo <>"N"
			lcalc1 := .t.
		Endif
	Else
		dbSelectArea( "SA2" )
		If A2_tipo <>"N"
			lcalc1 := .t.
		Endif
	Endif

	DbSelectArea("SFB")
	SFB->(DbSetOrder(1))
	If SFB->(Dbseek(xFilial("SFB")+cImp))
		nAliq := SFB->FB_ALIQ
	Endif

	If SB1->(FieldPos("B1_CONISC"))>0 .And. SB1->(dbseek(xfilial("SB1")+MaFisRet(nItem,"IT_PRODUTO")))
		cConcProd := SB1->B1_CONISC
	EndIf

	If lCalc1
		If !lXFis
			If Empty(cConcProd)
				//+---------------------------------------------------------------+
				//¦ Obter Base de Cálculo e Aliquota dos Impostos.                ¦
				//+---------------------------------------------------------Lucas-+
				aImposto[02] := SFB->FB_ALIQ									// Aliquota
				aImposto[11] := aItemINFO[4]									// Rateio do Frete
				aImposto[13] := aIteMINFO[5]     								// Rateio de Despesas
		
				// No paraguay os impostos devem ser calculados antes de tirar o desconto,
				// por isso, como o aItemInfo[3] vem sem desconto, ele é somado de novo
				// Solucao temporaria... Bruno 04/09/2000		
				aImposto[03] := aItemINFO[3]+aItemINFO[4]+aItemINFO[5] // Base de Cálculo
		
				//Tira os descontos se for pelo liquido .Bruno
				If Subs(aImposto[5],4,1) == "S"  .And. Len(aImposto) >= 18 .And. ValType(aImposto[18])=="N"
					aImposto[3]	-=	aImposto[18]
				Endif
		
				cBuscaDec := "F1_VALIMP"+SFB->FB_CPOLVRO
				dbSelectArea("SX3")
				dbSetOrder(2)
				If dbSeek(cBuscaDec)
					nDeci := SX3->X3_DECIMAL
				Else
					nDeci := 2
				Endif
				dbSetOrder(1)
				If cModulo == "FAT"
					dbSelectArea( "SA1" )
				Else
					dbSelectArea( "SA2" )
				Endif
				//+---------------------------------------------------------------+
				//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
				//+---------------------------------------------------------Lucas-+
				nI := At( cImpIncid,";" )
				nI := If( nI==0,Len( AllTrim( cImpIncid ) )+1,nI )
				While nI > 1
					nE := AScan( aItemINFO[6],{|x| x[1] == Left(cImpIncid,nI-1) } )
					If nE > 0
						aImposto[3] := aImposto[3]+aItemINFO[6,nE,4]
					End
					cImpIncid := Stuff( cImpIncid,1,nI,"" )
					nI := At( cImpIncid,";" )
					nI := If( nI==0,Len( AllTrim( cImpIncid ) )+1,nI )
				End
				//+---------------------------------------------------------------+
				//¦ Efetua o Cálculo do Imposto                                   ¦
				//+---------------------------------------------------------------+
				aImposto[4] := aImposto[2] * (aImposto[3]/100)
				//+---------------------------------------------------------------+
				//¦ Efetua o Cálculo do Imposto sobre Frete                       ¦
				//+---------------------------------------------------------------+
				aImposto[12] := aImposto[2] * ( aImposto[11]/100 )
		
				//+---------------------------------------------------------------+
				//¦ Efetua o Cálculo do Imposto sobre Despesas                    ¦
				//+---------------------------------------------------------------+
				aImposto[14] := aImposto[2] * ( aImposto[13]/100 )
				xRet:=aImposto
			Else
       	
				nBase    := aItemINFO[3]+aItemINFO[4]+aItemINFO[5]
                         	    
				nOrdSFC:=(SFC->(IndexOrd()))
				nRegSFC:=(SFC->(Recno()))
		
				SFC->(DbSetOrder(2))
				If (SFC->(DbSeek(xFilial("SFC")+cTes+cImp)))
					cImpIncid:=Alltrim(SFC->FC_INCIMP)
				EndIf
		
				//Tira os descontos se for pelo liquido .Bruno
				If Subs(aImposto[5],4,1) == "S" .And. Len(aImposto) >= 18 .And. ValType(aImposto[18]) == "N"
					nBase -= aImposto[18]
				Endif
		
				If !Empty(cImpIncid)
					DbSelectArea("SFB")
					If DbSeek(xFilial() + cImpIncid )
						nAliqAg := FB_ALIQ
					Endif
				EndIf
   	    
				DbSelectArea("SFF")
				SFF->(DbSetOrder(15))
				If SFF->(DbSeek(xFilial("SFF")+cImp+cConcProd)) .And. SFF->FF_ALIQ>0
					nAliq:=SFF->FF_ALIQ
				EndIf
				If SFF->(DbSeek(xFilial("SFF")+cImpIncid+cConcProd)) .And. SFF->FF_ALIQ>0
					nAliqAg:=SFF->FF_ALIQ
				EndIf

				//Por fora - Destacado  
				xRet:= nBase * (nAliqAg/100)
				aImposto[03]:= nBase + xRet
				//Aplica o valor do ISC(Imposto Seletivo ao Consumo) ao IVA
				aImposto[04]:= Round((aImposto[03] * nAliq)/100,nDecs)
				xRet:=aImposto
 		
				SFC->(DbSetOrder(nOrdSFC))
				SFC->(DbGoto(nRegSFC))
			EndIf
		 	   
		Else
			nOrdSFC:=(SFC->(IndexOrd()))
			nRegSFC:=(SFC->(Recno()))
			SFC->(DbSetOrder(2))
			If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+cImp)))
				lTotal := (SFC->FC_CALCULO=="T")
				lLiqui := (SFC->FC_LIQUIDO=="S")
			EndIf
		
			If Empty(cConcProd)
				SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO]))
				If cCalculo=="A"
					xRet:=SFB->FB_ALIQ
				ElseIf cCalculo=="B"
					xRet:=MafisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MafisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
					cImpIncid:=Alltrim(SFC->FC_INCIMP)
					//Tira os descontos se for pelo liquido
					If SFC->FC_LIQUIDO=="S"
						xRet-=If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
					Endif
		 			//+---------------------------------------------------------------+
					//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
					//+---------------------------------------------------------------+
					If !Empty(cImpIncid)
						aImpRef:=MaFisRet(nItem,"IT_DESCIV")
						aImpVal:=MaFisRet(nItem,"IT_VALIMP")
						For nI:=1 to Len(aImpRef)
							If !Empty(aImpRef[nI])
								IF Trim(aImpRef[nI][1])$cImpIncid
									xRet+=aImpVal[nI]
								Endif
							Endif
						Next
					Endif
					xRet:=Round(xRet,nDecimais)
				ElseIf cCalculo=="V"
					xRet:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
					If SFC->FC_CALCULO=="T"
					//A base deve ser buscada na referencia quando o calculo eh sobre o total da nota
						xRet:=MaRetBasT(aInfo[X_NUMIMP],nItem,MaFisRet(nItem,'IT_ALIQIV'+aInfo[X_NUMIMP]))
					EndIf
					xRet:=(xRet * ( MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP]) /100 ))
					xRet:=Round(xRet,nDecimais)
				EndIf
			Else
    	
				Do Case
				Case cCalculo=="B"
					nBase:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
					If GetNewPar('MV_DESCSAI','1')=='1'
						nBase	+= MaFisRet(nItem,"IT_DESCONTO")
					Endif
					//Tira os descontos se for pelo liquido
					cImpIncid:=Alltrim(SFC->FC_INCIMP)
					If SFC->FC_LIQUIDO=="S"
						nBase-=If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
					Endif
		   			//+---------------------------------------------------------------+
					//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
					//+---------------------------------------------------------------+
					If !Empty(cImpIncid)
						DbSelectArea("SFB")
						If DbSeek(xFilial() + cImpIncid )
							nAliqAg := FB_ALIQ
						Endif
						dbSelectArea("SFF")
						SFF->(DbSetOrder(15))
						If SFF->(DbSeek(xFilial("SFF")+cImpIncid+cConcProd)) .And. SFF->FF_ALIQ>0
							nAliqAg	:=SFF->FF_ALIQ
						EndIf
						If SFF->(DbSeek(xFilial("SFF")+cImp+cConcProd)) .And. SFF->FF_ALIQ>0
							nAliq	:=SFF->FF_ALIQ
						EndIf
					EndIf
			 	
					xRet:= NoRound(nBase * (nAliqAg/100),nDecs)
					xRet:= Round(nBase + xRet,nDecs)
	      
				Case cCalculo=="A"
					dbSelectArea("SFF")
					SFF->(DbSetOrder(15))
					If SFF->(DbSeek(xFilial("SFF")+cImp+cConcProd)) .And. SFF->FF_ALIQ>0
						nAliq	:=SFF->FF_ALIQ
						xRet:=nALiq
					Else
						DbSelectArea("SFB")
						If DbSeek(xFilial() + aInfo[X_IMPOSTO] )
							xRet := FB_ALIQ
						Endif
					EndIf
	       
				Case cCalculo=="V"
					If lTotal
						nBase:=MaRetBasT(aInfo[X_NUMIMP],nItem,MaFisRet(nItem,'IT_ALIQIV'+aInfo[X_NUMIMP]))
						If lLiqui
							nBase-=MaFisRet(nItem,"NF_DESCONTO")
						EndIf
					Else
						nBase:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
						If lLiqui
							nBase-=MaFisRet(nItem,"IT_DESCONTO")
						EndIf
					EndIf
					nAliq:=MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP])
                
					//Aplica o valor do ISC(Imposto Seletivo ao Consumo) ao IVA
					xRet:= NoRound((nBase * nAliq)/100,nDecs)
				EndCase
	   	
			EndIf
	   	                                       
			SFC->(DbSetOrder(nOrdSFC))
			SFC->(DbGoto(nRegSFC))
		Endif
	Endif
	dbSelectArea( cAliasRot )
	dbSetOrder( cOrdemRot )
Return( xRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³¦¦Funçào    ³M100IVACH ³ Autor ³ José Lucas             ³ Data ³ 28.04.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³¦¦Descriçào ³ Programa que Calcula o IVA (CHILE)                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³¦¦Uso       ³ MATA100, chamado pelo ponto de entrada                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Fernando M.   ³29/12/00³xxxxxx³Tratamento imposto especifico(IE e FEPP)   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function M100ivaCH(cCalculo,nItem,aInfo,lXFis)
	LOCAL nPosFEPP  := 0
	LOCAL nValFEPP  := 0
	LOCAL nCols     := 0
	LOCAL nI        := 0
	LOCAL nE        := 0
	LOCAL cImpIncid := ""
	LOCAL xRet
	LOCAL aImpRef,aImpVal
	LOCAL aItemInfo := {}
	LOCAL aImposto  := {}
	LOCAL lPrcDec    := SuperGetMV("MV_PRCDEC",,.F.)
	LOCAL nDecimais  := MsDecimais(Mafisret(,"NF_MOEDA"))
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Observacao :                                                  ³
	³                                                               ³
	³ a variavel ParamIxb tem como conteudo um Array[2], contendo : ³
	³ [1,1] > Quantidade Vendida                                    ³
	³ [1,2] > Preco Unitario                                        ³
	³ [1,3] > Valor Total do Item, com Descontos etc...             ³
	³ [1,4] > Valor do Frete rateado para este Item ...             ³
	³ [1,5] > Valor das Despesas rateado para este Item...          ³
	³ [1,6] > Array Contendo os Impostos já calculados, no caso de  ³
	³        incidência de outros impostos.                         ³
	³ [2,1] > Array aImposto, Contendo as Informações do Imposto que³
	³         será calculado.                                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/

	lCalc1 := .F.
	If !lXFis
		aItemINFO := ParamIxb[1]
		aImposto  := AClone( ParamIxb[2] )
		nCols     := ParamIxb[3]
		cImpIncid := aImposto[10]
		xRet	  := aImposto
	Else
		xRet:=0
		nCols:=nItem
		SFB->(DbSeek(xFilial("SFB")+aInfo[X_IMPOSTO]))
		cImpIncid:=""
	Endif

	//+---------------------------------------------------------------+
	//¦ Verificar o tipo do Fornecedor.                               ¦
	//+---------------------------------------------------------------+
	If cModulo $ "FAT|LOJA|FRT|TMK|OMS"
		dbSelectArea( "SA1" )
		If A1_TIPO <> "N"
			lCalc1 := .T.
		Endif
	Else
		dbSelectArea( "SA2" )
		If A2_TIPO <>"N"
			lCalc1 := .T.
		Endif
	Endif
	
	If nModulo == 2 .And. !lXFis
		If (dDataBase-dDEmissao)>90
			Msgstop("Intervalo entre Fecha de Emisi¢n y Fecha de Hoy No Puede Ser Mayor que 90 D¡as")
			lcalc1 := .f.
		Endif
	Endif

	If lCalc1
		//Se FEPP eh negativo,tira da base do IVA
		If If(!lXFis,.T.,cCalculo=="B")
			If ( cModulo!="EIC" ) .And. ( Type("aHeader") == "A" )
				nPosFEPP:= Ascan(aHeader,{|x|Trim(x[2])=="D1_FEPP"})
				If nPosFEPP > 0
					nValFEPP:= aCols[nCols][nPosFEPP] * (If(!lXFis,aItemInfo[1],MaFisRet(nItem,"IT_QUANT")))
				Else
					nValFEPP:=0
				EndIf
			Endif
		Endif
		If !lXFis
			//+---------------------------------------------------------------+
			//¦ Obter Base de Cálculo e Aliquota dos Impostos.                ¦
			//+---------------------------------------------------------Lucas-+
			aImposto[02] := SFB->FB_ALIQ										// Aliquota
			aImposto[11] := aItemINFO[4]										// Rateio do Frete
			aImposto[13] := aIteMINFO[5]     								// Rateio de Despesas
			aImposto[03] := aItemINFO[3]+aItemINFO[4]+aItemINFO[5]	// Base de Cálculo
			//Tira os descontos se for pelo liquido .Bruno
			If Subs(aImposto[5],4,1) == "S"  .And. Len(aImposto) >= 18 .And. ValType(aImposto[18])=="N"
				aImposto[3]	-=	aImposto[18]
			Endif
		
			//Se FEPP eh negativo,tira da base do IVAItemInfo[1]
			If nValFEPP < 0
				aImposto[3] += nValFEPP
			EndIf
			//+---------------------------------------------------------------+
			//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
			//+---------------------------------------------------------Lucas-+
			nI := At( cImpIncid,";" )
			nI := If( nI==0,Len( AllTrim( cImpIncid ) )+1,nI )
			While nI > 1
				nE := AScan( aItemINFO[6],{|x| x[1] == Left(cImpIncid,nI-1) } )
				If nE > 0
					aImposto[3] := aImposto[3]+aItemINFO[6,nE,4]
				End
			
				cImpIncid := Stuff( cImpIncid,1,nI,"" )
				nI := At( cImpIncid,";" )
				nI := If( nI==0,Len( AllTrim( cImpIncid ) )+1,nI )
			End
			//+---------------------------------------------------------------+
			//¦ Efetua o Cálculo do Imposto                                   ¦
			//+---------------------------------------------------------------+
			If cPaisLoc == "CHI" .And. lPrcdec
				aImposto[4] := Round(aImposto[2] * (aImposto[3]/100),nDecimais)
			Else
				aImposto[4] := aImposto[2] * (aImposto[3]/100)
			EndIf
			//+---------------------------------------------------------------+
			//¦ Efetua o Cálculo do Imposto sobre Frete                       ¦
			//+---------------------------------------------------------------+
			aImposto[12] := aImposto[2] * ( aImposto[11]/100 )
			//+---------------------------------------------------------------+
			//¦ Efetua o Cálculo do Imposto sobre Despesas                    ¦
			//+---------------------------------------------------------------+
			aImposto[14] := aImposto[2] * ( aImposto[13]/100 )
			xRet:=aImposto
		Else
			If cCalculo=="A"
				xRet:=SFB->FB_ALIQ
			ElseIf cCalculo=="B"
				xRet:=MafisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MafisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
				If GetNewPar('MV_DESCSAI','1')=='1'
					xRet	+= MaFisRet(nItem,"IT_DESCONTO")
				Endif
				//Se FEPP eh negativo,tira da base do IVAMaFisRet(nItem,"IT_QUANT")
				If nValFEPP < 0
					xRet += nValFEPP
				EndIf
				nOrdSFC:=(SFC->(IndexOrd()))
				nRegSFC:=(SFC->(Recno()))
				SFC->(DbSetOrder(2))
				If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
					cImpIncid:=Alltrim(SFC->FC_INCIMP)
				//Tira os descontos se for pelo liquido
					If SFC->FC_LIQUIDO=="S"
						xRet-=If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
					Endif
				Endif
				SFC->(DbSetOrder(nOrdSFC))
				SFC->(DbGoto(nRegSFC))
	  			//+---------------------------------------------------------------+
				//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
				//+---------------------------------------------------------------+
				If !Empty(cImpIncid)
					aImpRef:=MaFisRet(nItem,"IT_DESCIV")
					aImpVal:=MaFisRet(nItem,"IT_VALIMP")
					For nI:=1 to Len(aImpRef)
						If !Empty(aImpRef[nI])
							IF Trim(aImpRef[nI][1])$cImpIncid
								xRet+=aImpVal[nI]
							Endif
						Endif
					Next
				Endif
				If cPaisLoc == "CHI" .And. lPrcdec
					xRet:= Round(xRet,nDecimais)
				Endif
			ElseIf cCalculo=="V"
				//+---------------------------------------------------------------+
				//¦ Efetua o Cálculo do Imposto                                   ¦
				//+---------------------------------------------------------------+
				xRet:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
				If cPaisLoc == "CHI" .And. lPrcdec
					xRet:=(xRet * ( MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP]) /100 ))
					xRet:= Round(xRet,nDecimais)
				Else
					xRet:=(xRet * ( MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP]) /100 ))
				Endif
			Endif
		Endif
	End

Return( xRet )

/*
_____________________________________________________________________________
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦Funçào    ¦M100IVA   ¦ Autor ¦ José Lucas             ¦ Data ¦ 28.04.98¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Descriçào ¦ Programa que Calcula o IVA  (ARGENTINA)                    ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Uso       ¦ MATA100, chamado pelo ponto de entrada                     ¦¦¦
¦¦+-----------------------------------------------------------------------¦¦¦
¦¦¦         ATUALIZACIONES HECHAS DESDE LA CODIFICACION INICIAL.          ¦¦¦
¦¦+-----------------------------------------------------------------------¦¦¦
¦¦¦Programador ¦ Fecha  ¦ BOPS ¦  Motivo de la Modificacion               ¦¦¦
¦¦+------------+--------+------+------------------------------------------¦¦¦
¦¦¦Jose Otermin¦14/04/99¦xxxxxx¦Ajuste para Tomar Alicuota del ParamIxb   ¦¦¦
¦¦¦            ¦        ¦      ¦                                          ¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
Nota: Queda Pendiente que el programa tome los valores segun el periodo de
validez.
*/
Function M100ivaAR(cCalculo,nItem,aInfo,lXFis)

	Local xRet,nOrdSFC,nRegSFC

	SetPrvt("CALIASROT,CORDEMROT,AITEMINFO,AIMPOSTO,CIMPINCID,_TIPO")
	SetPrvt("_PROVE,CSERIE,LCALCULAR,NPOSCOL,NPOSALIQ,_ALIQIVA")
	SetPrvt("NI,NE,")

	/*
	// M100LARG.PRX
	//+----------------------------------------------------------------------------------+
	//¦ ParamIxb[1] > Recebe um Array Contendo a seguinte Estrutura:                       ¦
	//¦             > Array referente a cada Item processando da Nota                      ¦
	//¦                                                                                    ¦
	//¦         [1] > Quantidade Vendida                                                   ¦
	//¦         [2] > Preço Unitário de Venda                                              ¦
	//¦         [3] > Valor Total                                                          ¦
	//¦         [4] > Valor de Frete/Despesas (Rateado)                                    ¦
	//¦         [5] > Valor das Despesas (Rateado)                                         ¦
	//¦         [6] > {...} Array c/Impostos Calculados p/o Item                           ¦
	//¦               [n][01] -> Código do Imposto                                         ¦
	//¦               [n][02] -> Alíquota do Imposto                                       ¦
	//¦               [n][03] -> Base de Cálculo do Imposto                                ¦
	//¦               [n][04] -> Valor Calculado do Imposto                                ¦
	//¦               [n][05] := "___" = Onde                                              ¦
	//¦                          Pos.: 1-Inclui no Valor da Duplicata   (S/N)              ¦
	//¦                                2-Inclui no Total da Nota Fiscal (S/N)              ¦
	//¦			  3-Credita se do imposto para cálculo do Custo (SN)  ¦
	//¦               [n][06] := Cpo.Gravação SD1 (Valor Imposto)                          ¦
	//¦               [n][07] :=                  (Base de Cálculo)                        ¦
	//¦               [n][08] := Cpo.Gravação SF1 (Valor Imposto)                          ¦
	//¦               [n][09] :=                  (Base de Cálculo)                        ¦
	//¦               [n][10] := Código dos Impostos Incidentes no Cálculo                 ¦
	//¦	          [n][11] := Valor do Frete Rateado                                    ¦
	//¦		  [n][12] := Valor Calculado do Imposto sobre Valor do Frete           ¦
	//¦	          [n][13] := Valor das Despesas Rateadas                               ¦
	//¦		  [n][14] := Valor Calculado do Imposto sobre Valor das Despesas       ¦
	//¦                                                                                    ¦
	//¦ ParamIxb[2] > Array de Geraçao do Livro Fiscal "aLivro"                            ¦
	//+------------------------------------------------------------------------------------+
	//+[Tipos de Facturas ]-----------------------------------------------+
	//| Cuando Compramos a:                                               |
	//| A2_TIPO               Serie de la Factura      Discrimina? (*)    |
	//| I => Inscripto                A                     S             |
	//| N => No Inscripto             C                     N             |
	//| X => Exento-Subjetivo         A                     N             |
	//| O => Exento-Objetivo          C (Cons.Final c/CUIT) N             |
	//| F => Consumidor Final         -                     -             |
	//| D => Personas del Exterior    -                     ?             |
	//| M => Monotributista           C                     N             |
	//| Z => Sujeto No Categorizado   -                     -             |
	//| P => Prestacion de Servicios. A & C                 N             |
	//|      Telefonos    -> IVA    = 27.00 %                             |
	//|      CableVision  ->        = 10,50 %                             |
	//|      Aguas Arg. & Luz & Gas = 27.00 %                             |
	//| S => No sujeto,               -                     -             |
	//| L => Locacion,                C                     N             |
	//|(*): Si el/los Impuestos se imprimen separados de la Base Imponible|
	//+-------------------------------------------------------------------+
	//+[Tipos de Facturas ]----------------------------------------------+
	//| Cuando Vendemos a:                                               |
	//| A1_TIPO               Serie de la Factura      Discrimina?       |
	//| I => Inscripto                A                     S            |
	//| N => No Inscripto             A                     S            |
	//| X => Exento-Subjetivo         A                     S            |
	//| O => Exento-Objetivo          B (Cons.Final c/CUIT) N            |
	//| F => Consumidor Final         B                     N            |
	//| D => Personas del Exterior    E                     S            |
	//| M => Monotributista           B                     N            |
	//| Z => Sujeto No Categorizado   B                     N            |
	//| P => Prestacion de Servicios. A IVA1                S            |
	//| S => No sujeto,               B                     N            |
	//+------------------------------------------------------------------+
	*/

	If !lXFis
		aItemINFO := ParamIxb[1]
		aImposto  := AClone( ParamIxb[2] )
		cImpIncid := aImposto[10]
		If cTipo == "D" // Devolucion de Venta
			dbSelectArea( "SA1" )
			_Tipo := SA1->A1_TIPO
			_Prove:=.F.
		Else
			dbSelectArea( "SA2" )
			_Tipo := SA2->A2_TIPO
			_Prove:=.T.
		EndiF
		_Tipo := ALLTRIM(_Tipo)   // Tipo de Sujeto Fiscal
		cSerie:= SUBSTR(ALLTRIM(cSerie),1,1)  // Tipo de Factura: "A" o "C"
	Else
		Return
	Endif
	//aImposto[_ALIQUOTA]  := SB1->B1_IPI            // Aliquota (21 %)
	//-----------------------------
	lCalcular:=.t.
	//+-------------------------------------------------------------------+
	//¦ Considerar o Tipo do Fornecedor.                                  ¦
	//¦                                                                   ¦
	//¦ I => Resp. Inscrito, tem tributacao de IVA, Aliquota em de B1_IPI.¦
	//¦ N => Resp. Nao Inscrito, alem da tributacao acima, tem + 50% de   ¦
	//¦      tributacao. > M460ID2b.PRX                                   ¦
	//¦ F => Consumidor Final, imposto normal como no Inscrito            ¦
	//¦ D => Deudores del Exterior. IVA gravado a tasa 0                  ¦
	//+-------------------------------------------------------------------+

	nPosCol   := ParamIxb[3]

	If ( Type("aHeader") == "A" )
		nPosAliq := Ascan(aHeader, {|x| AllTrim(x[2]) == "D1_IPI" } )
	Else
		nPosAliq := 0
	Endif

	If nPosAliq > 0
		_aliqIva := aCols[nPosCol][nPosAliq]
	Else
		_aliqIva := 0
	EndIf
	aImposto[_ALIQUOTA]  := _AliqIVA
	//---------------------------

	IF _Tipo $ "I/X/P" .AND. cSerie == "A" // .and. aImposto[_ALIQUOTA] == 21.00
		//+---------------------------------------------------------------+
		//¦ Obter Base de Cálculo e Aliquota dos Impostos.                ¦
		//+---------------------------------------------------------Lucas-+
		aImposto[_RATEOFRET] := aItemINFO[_FLETE]      // Rateio do Frete
		aImposto[_RATEODESP] := aItemINFO[_GASTOS]     // Rateio de Despesas
		aImposto[_BASECALC]  := aItemINFO[_VLRTOTAL]+aItemINFO[_FLETE]+aItemINFO[_GASTOS] // Base de Cálculo
	
		//Tira os descontos se for pelo liquido .Bruno
		If Subs(aImposto[5],4,1) == "S"  .And. Len(aImposto) >= 18 .And. ValType(aImposto[18])=="N"
			aImposto[_BASECALC]	-=	aImposto[18]
		Endif
	
		//+---------------------------------------------------------------+
		//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
		//+---------------------------------------------------------Lucas-+
		nI := At( cImpIncid,";" )
		nI := If( nI==0,Len( AllTrim( cImpIncid ) )+1,nI )
		While nI > 1
			nE := AScan( aItemINFO[6],{|x| x[1] == Left(cImpIncid,nI-1) } )
			If nE > 0
				aImposto[3] := aImposto[3]+aItemINFO[6,nE,4]
			End
		
			cImpIncid := Stuff( cImpIncid,1,nI,"" )
			nI := At( cImpIncid,";" )
			nI := If( nI==0,Len( AllTrim( cImpIncid ) )+1,nI )
		End
		//+---------------------------------------------------------------+
		//¦ Efetua o Cálculo do Imposto                                   ¦
		//+---------------------------------------------------------------+
		aImposto[_IMPUESTO]  := aImposto[_BASECALC] * (aImposto[_ALIQUOTA]/100)
	
		//+---------------------------------------------------------------+
		//¦ Efetua o Cálculo do Imposto sobre Frete                       ¦
		//+---------------------------------------------------------------+
		aImposto[_IVAFLETE]  := aImposto[_RATEOFRET] * (aImposto[_ALIQUOTA]/100)
	
		//+---------------------------------------------------------------+
		//¦ Efetua o Cálculo do Imposto sobre Despesas                    ¦
		//+---------------------------------------------------------------+
		aImposto[_IVAGASTOS] := aImposto[_RATEODESP] * (aImposto[_ALIQUOTA]/100)
	
	ENDIF

// Substituido pelo assistente de conversao do AP5 IDE em 09/09/99 ==> __Return( aImposto )
Return( aImposto )        // incluido pelo assistente de conversao do AP5 IDE em 09/09/99

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³M100IVACO ºAutor  ³Denis Martins       º Data ³  01/20/2000 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Calculo do Imposto IVA - Entrada - Localizacao Colombia     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA101                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Humberto     ³25.03.00³      ³ Atualizacao do FB_FLAG                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function M100IVACO(cCalculo,nItem,aInfo,lXFis)
	Local nAliq := 0
	Local nBase,cImp,xRet,nOrdSFC,nRegSFC,cVerIva
	Local nI:=1
	Local lDesNCCCol := FunName() == "MATA465N" .And. cEspecie == "NCC"
	
	SetPrvt("CALIASROT,CORDEMROT,AITEMINFO,AIMPOSTO,_CPROCNAME,_CZONCLSIGA")
	SetPrvt("_LAGENTE,_LEXENTO,AFISCAL,_LCALCULAR,_LESLEGAL,_NALICUOTA,NALIQ")
	SetPrvt("_NVALORMIN,_NREDUCIR,CTIPOEMPR,CTIPOCLI,CTIPOFORN,CZONFIS,CCFO,LRET")
	SetPrvt("CCODPROD,LRET,NBASE,CQUALI,CPROD")

	cTipo := Iif( Type("cTipo")=="U","N",cTipo)

	lRet := .T.
	nBase := 0

	If !lXFis
		aItemINFO := ParamIxb[1]
		aImposto  := ParamIxb[2]
		xRet      := aImposto
		cImp      := aImposto[1]
		cProd     := aImposto[16]
	Else
		xRet:=0
		cImp:=aInfo[X_IMPOSTO]
		cProd:=MaFisRet(nItem,"IT_PRODUTO")
		SF4->(DbSeek(MaFisRet(nItem,"IT_TES")))
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Deve-se verificar se cEspecie pertence a NCC/NCE/NDC/NDE para que ocor-³
	//³ra busca no SA1, caso contrario deve-se buscar no SA2(Arq.Proveedores) ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cTipo = "D"   // devolucao de venda
		cTipoCli   := SA1->A1_TIPO
		cZonfis    := SA1->A1_EST
	Else
		cTipoForn  := SA2->A2_TIPO
		cZonFis    := SA2->A2_EST
	Endif

	dbSelectArea("SF4")
	If lXFis
		SF4->(DbSeek(xFilial("SF4")+MaFisRet(nItem,"IT_TES")))
	Endif
	cCFO    := Alltrim(SF4->F4_CF)
	cVerIVA := SF4->F4_CALCIVA
	//TES nao calcula IVA
	If cVerIva == "2" .or. cVerIva == "3"
		lRet := .F.
		Return ( xRet )
	Endif

	If lRet
		dbSelectArea("SFB")
		dbSetOrder(1)
		If dbSeek(xFilial("SFB")+cImp)

	   		//+---------------------------------------------------------------+
	   		//¦ Verifica a Alíquota                                           ¦
	   		//+---------------------------------------------------------------+		   
			If IIf(lXFis,cCalculo$"BA",.T.)
				nAliq := SF4->F4_PERCIVA
				nBase := 1
				If SB1->B1_ALQIVA <> 0
					nAliq := SB1->B1_ALQIVA
				EndIf
				If nAliq == 0
					nAliq := SFB->FB_ALIQ
				EndIf
			EndIf
        
			If !lXFis
				dbSelectArea("SFC")
				dbSetOrder(2)
			
				IF SA1->(FieldPos("A1_ALQAIU"))>0 .And. SA2->(FieldPos("A2_ALQAIU"))>0
					aImposto[_ALIQUOTA]  := nAliq // Alicuota de Zona Fiscal
					aImposto[_BASECALC]  :=  aItemINFO[_VLRTOTAL] + aItemINFO[_FLETE] + aItemINFO[_GASTOS] // Base de Cálculo
				    
					nTotBase:= 0
					cImpIncid:=aImp[10]
					
					If Len(Alltrim(cImpIncid)) >0
						nI:=At(cImpIncid,";" )
						nI:=If(nI==0,Len(AllTrim(cImpIncid))+1,nI)
						nI:=At(cImpIncid,";" )
						nI:=If(nI==0,Len(AllTrim(cImpIncid))+1,nI)
		
						While nI>1
							nE:=AScan(aItemINFO[6],{|x| x[1]==Left(cImpIncid,nI-1)})
							If nE>0
								nTotBase+=aItemINFO[6,nE,4]
							End
							cImpIncid:=Stuff(cImpIncid,1,nI,"")
							nI:=At(cImpIncid,";")
							nI:=If(nI==0,Len(AllTrim(cImpIncid))+1,nI)
						End
					EndIf
				  
					aImposto[_BASECALC]:=aImposto[_BASECALC] + nTotBase
					If Subs(aImposto[5],4,1) == "S"  .And. Len(aImposto) >= 18 .And. ValType(aImposto[18])=="N"
						aImposto[_BASECALC]	-=	aImposto[18]
					Endif
			   	   //+---------------------------------------------------------------+
				   //¦ Efectua el Cálculo del Impuesto                               ¦
				   //+---------------------------------------------------------------+
					aImposto[_IMPUESTO]  := aImposto[_BASECALC] * ( aImposto[_ALIQUOTA]/100)
					xRet:=aImposto
				Else
			
					SFC->(DbSetOrder(2))
					If SFC->(dbSeek(xFilial("SFC")+SF4->F4_CODIGO+"AUI"))
						dbSelectArea("SFB")
						dbSetOrder(1)
						SFB->(dbGoTop())
						If dbSeek(xFilial("SFB")+"AUI")
							aImposto[_BASECALC] += aItemINFO[_VLRTOTAL] * (SFB->FB_ALIQ/100)
						EndIf
						aImposto[_ALIQUOTA]  := nAliq // Alicuota de Zona Fiscal
						aImposto[_BASECALC] := aImposto[_BASECALC] * (GetNewPar("MV_PERAUI",0)/100)
						aImposto[_IMPUESTO]  := aImposto[_BASECALC] * (aImposto[_ALIQUOTA]/100)
						xRet:=aImposto
					Else
						aImposto[_ALIQUOTA]  := nAliq // Alicuota de Zona Fiscal
						aImposto[_BASECALC]  := ( aItemINFO[_VLRTOTAL] + aItemINFO[_FLETE] + aItemINFO[_GASTOS] - aItemINFO[9])* nBase // Base de Cálculo
						//Tira os descontos se for pelo liquido .Bruno
						If Subs(aImposto[5],4,1) == "S"  .And. Len(aImposto) >= 18 .And. ValType(aImposto[18])=="N"
							aImposto[_BASECALC]	-=	aImposto[18]
						Endif
						
						//+---------------------------------------------------------------+
						//¦ Efectua el Cálculo del Impuesto                               ¦
						//+---------------------------------------------------------------+
						aImposto[_IMPUESTO]  := aImposto[_BASECALC] * ( aImposto[_ALIQUOTA]/100)
						xRet:=aImposto
					EndIf
				EndIf
							 
			Else
				Do Case
				Case cCalculo=="A"
					xRet:=nAliq
				Case cCalculo=="B"
		            
					IF SA1->(FieldPos("A1_ALQAIU"))>0 .And. SA2->(FieldPos("A2_ALQAIU"))>0
			       	
						dbSelectArea("SFC")
						dbSetOrder(2)
						
						If FunName() $ "MATA121"
							If cTpFrete == "C-CIF"
								xRet:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")
							Else
								xRet:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_DESPESA")
							EndIf
						Else
							xRet:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")
						EndIf
				            
						nOrdSFC:=(SFC->(IndexOrd()))
						nRegSFC:=(SFC->(Recno()))
						  	
						SFC->(DbSetOrder(2))
						If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
							//Tira os descontos se for pelo liquido
							If SFC->FC_LIQUIDO=="S"
								xRet-=If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
							Endif
						Endif
						cImpIncid:=Alltrim(SFC->FC_INCIMP)
						nVal:= 0
						If !Empty(cImpIncid)
							aImpRef:=MaFisRet(nItem,"IT_DESCIV")
							aImpVal:=MaFisRet(nItem,"IT_VALIMP")
							For nI:=1 to Len(aImpRef)
								If !Empty(aImpRef[nI])
									IF Trim(aImpRef[nI][1])$cImpIncid
										nVal+=aImpVal[nI]
									Endif
								Endif
							Next
						EndIf
						xRet := xRet + nVal
							
						SFC->(DbSetOrder(nOrdSFC))
						SFC->(DbGoto(nRegSFC))
			       	
					Else
			       
						dbSelectArea("SFC")
						dbSetOrder(2)
						If SFC->(dbSeek(xFilial("SFC")+SF4->F4_CODIGO+"AUI"))
							dbSelectArea("SFB")
							dbSetOrder(1)
							SFB->(dbGoTop())
							If dbSeek(xFilial("SFB")+"AUI")
								xRet := MaFisRet(nItem,"IT_VALMERC") * (SFB->FB_ALIQ/100)
							EndIf
							xRet	:= xRet * (GetNewPar("MV_PERAUI",0)/100)
						Else
							If FunName() $ "MATA121"
								If cTpFrete == "C-CIF"
									xRet:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")
								Else
									xRet:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_DESPESA")
								EndIf
							Else
								xRet:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
							EndIf
							xRet:=xRet*nBase
							nOrdSFC:=(SFC->(IndexOrd()))
							nRegSFC:=(SFC->(Recno()))
							SFC->(DbSetOrder(2))
							If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
							   //Tira os descontos se for pelo liquido
								If SFC->FC_LIQUIDO=="S"
									xRet-=If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
									If GetNewPar('MV_DESCSAI', '1') == '1'  .AND. cModulo $ "FAT|LOJA|FRT|TMK" .And. IIf(lDesNCCCol, .T., .F.)
										xRet += If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
									EndIf
								Endif
							Endif
							SFC->(DbSetOrder(nOrdSFC))
							SFC->(DbGoto(nRegSFC))
						EndIf
			       
					EndIf
				Case cCalculo=="V"
					nAliq:=MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP])
					nBase:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
					xRet:=nBase * (nAliq/100)
				EndCase
			EndIf
		EndIf
	Endif
Return( xRet )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ M100IVAUR³ Autor ³ Lucas                  ³ Data ³ 06.06.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Calculo do IVA para Uruguay...							   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ AP5			                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function M100IVAUR(cCalculo,nItem,aInfo,lXFis)
	Local aItemINFO
	Local aImposto
	Local aDespesas 	:=	{}
	Local cImpIncid
	Local cTec			:=	""
	Local nE,nI,xRet,nOrdSFC,nRegSFC
	Local aImpRef,aImpVal, nCont, nAliq
	Local nMoeda  	:=	IIf(Type("nMoedaCor")=="U",1,nMoedaCor)

	If !lXFis
		aItemINFO:=ParamIxb[1]
		aImposto	:=AClone( ParamIxb[2] )
		cImpIncid:=aImposto[10]
		If Len(ParamIxb[1]) >= 8
			cTec	:=	ParamIxb[1][8]
		Endif
		If Len(ParamIxb[1]) >= 9
			aDespesas	:=	ParamIxb[1][9]
		Endif
		xRet:=aImposto
	Else
		xRet:=0
		cImpIncid:=""
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Obter Base de C lculo e Al¡quota dos Impostos.				     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Obs: No Uruguay temos uma alicuota de IVA de 14% ou 23% esta ³
	//³ realiconada con base na Classifica‡Æo de Produtos e a aliquo-³
	//³ ta será pega do FB_ALIQ pois sera definido um imposto para   ³
	//³ cada alicuota.                                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (cModulo$"COM|EST|EIC" .And. !(SA2->A2_TIPO $ "E|6") ).Or. ( !(cModulo$"COM|EST|EIC") .And. !(SA1->A1_TIPO $ "E|6"))
		If !lXFis
			aImposto[_RATEOFRET] := aItemINFO[_FLETE]      // Rateio do Frete
			aImposto[_RATEODESP] := aItemINFO[_GASTOS]     // Rateio de Despesas
			aImposto[_BASECALC]  := aItemINFO[_VLRTOTAL]+aItemINFO[_FLETE]+aItemINFO[_GASTOS] // Base de Cálculo
		
			If Subs(aImposto[5],4,1) == "S"  .And. Len(aImposto) >= 18 .And. ValType(aImposto[18])=="N"
				aImposto[_BASECALC] -= aImposto[18]
			EndIf
		
			aImposto[_ALIQUOTA] := SFB->FB_ALIQ
		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Soma base dos impostos incidentes...							     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nI := At( ";",cImpIncid )
			nI := If( nI==0,Len( AllTrim( cImpIncid ) )+1,nI )
			While nI > 1
				nE := AScan( aItemINFO[6],{|x| x[1] == Left(cImpIncid,nI-1) } )
				If nE > 0
					aImposto[3] := aImposto[3]+aItemINFO[6,nE,4]
				EndIf
				cImpIncid := Stuff( cImpIncid,1,nI,"" )
				nI := At( ";",cImpIncid )
				nI := If( nI==0,Len( AllTrim( cImpIncid ) )+1,nI )
			End
		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Efetua o Calculo do imposto...									     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aImposto[_IMPUESTO]  := Round(aImposto[_BASECALC] * (aImposto[_ALIQUOTA]/100),MsDecimais(nMoeda))
			xRet:=aImposto
		Else
			Do Case
			Case cCalculo=="A"
				SFB->(DbSeek(xFilial("SFB")+aInfo[X_IMPOSTO]))
				xRet:=SFB->FB_ALIQ
			Case cCalculo=="B"
				xRet:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
				nOrdSFC:=(SFC->(IndexOrd()))
				nRegSFC:=(SFC->(Recno()))
				SFC->(DbSetOrder(2))
				If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
					cImpIncid:=Alltrim(SFC->FC_INCIMP)
					//Tira os descontos se for pelo liquido
					If SFC->FC_LIQUIDO=="S"
						xRet-=If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
					Endif
				Endif
				SFC->(DbSetOrder(nOrdSFC))
				SFC->(DbGoto(nRegSFC))
   				//+---------------------------------------------------------------+
				//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
				//+---------------------------------------------------------------+
				If !Empty(cImpIncid)
					aImpRef:=MaFisRet(nItem,"IT_DESCIV")
					aImpVal:=MaFisRet(nItem,"IT_VALIMP")
					For nI:=1 to Len(aImpRef)
						If !Empty(aImpRef[nI])
							IF Trim(aImpRef[nI][1])$cImpIncid
								xRet+=aImpVal[nI]
							Endif
						Endif
					Next
				Endif
			Case cCalculo=="V"
				xRet:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
				xRet:=Round((xRet*(MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP])/100)),MsDecimais(nMoeda))
			EndCase
		Endif
	Endif
Return(xRet)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±º Programa  º M100IVACR  º Autor º      Nava       º Data º   17/07/01  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º             Programa que calcula o IVA ( Costa Rica [CR] )            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Sintaxe   º M100IVACR                                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÎÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Parametrosº Nenhum                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÎÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Retorno   º aImposto                                                  º±±
±±ºÍÍÍÍÍÍÍÍÍÍÍÎÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Uso       º Chamado neste programa por M100IVA                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º         Atualizacoes efetuadas desde a codificacao inicial            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍËÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºProgramador    º Data       º Motivo da Alteracao                      º±±
±±ºCamila Januárioº 07/10/11   º Localização Costa Rica 2011              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÎÍÍÍÍÍÍÍÍÎÍÍÍÍÍÍÎÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º           ºxx/xx/xxºxxxxxxº                                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function M100ivaCR(cCalculo,nItem,aInfo,lXFis)  // Costa Rica

	LOCAL lCalcIVA	:= .F.
	LOCAL aItemInfo
	LOCAL aImposto
	LOCAL nOrdSFC,nRegSFC
	Local nAliq    := 0
	Local cConcept := ""
	Local cProduto := ""
	Local cImp     := ""
	Local nBase    := 0
	Local nI 	   := 0
	Local cImpIncid := ""
	Local nPos   := 0
	Local xRet := 0
	Local nDecs := 0
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica os decimais da moeda para arredondamento do valor  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nDecs := IIf(Type("nMoedaNf") # "U",MsDecimais(nMoedaNf),MsDecimais(1))

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Observacao :                                                  ³
	³                                                               ³
	³ a variavel ParamIxb tem como conteudo um Array[2], contendo : ³
	³ [1,1] > Quantidade Vendida                                    ³
	³ [1,2] > Preco Unitario                                        ³
	³ [1,3] > Valor Total do Item, com Descontos etc...             ³
	³ [1,4] > Valor do Frete rateado para este Item ...             ³
	³ [1,5] > Valor das Despesas rateado para este Item...          ³
	³ [1,6] > Array Contendo os Impostos já calculados, no caso de  ³
	³        incidência de outros impostos.                         ³
	³ [2,1] > Array aImposto, Contendo as Informações do Imposto que³
	³         será calculado.                                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/

	If !lXFis
		aItem    := ParamIxb[1]
		xRet     := ParamIxb[2]
		cImp     := xRet[1]
		cProduto := xRet[16]
	Else
		xRet     := 0
		cProduto := MaFisRet(nItem,"IT_PRODUTO")
		cImp     := aInfo[X_IMPOSTO]
	EndIf

	dbSelectArea("SB1")
	SB1->(dbSetOrder(1))
	If SB1->(dbSeek(xFilial("SB1")+cProduto))
		cConcept := SB1->B1_CONIVA
		lCalcIVA := IIF(SB1->B1_CALCIVA=="1",.T.,.F.)
	EndIf

	dbSelectArea("SFB")
	SFB->(dbSetOrder(1))
	If SFB->(dbSeek(xFilial("SFB")+cImp))
		nAliq := SFB->FB_ALIQ
	Endif
	
	dbSelectArea("CCR")
	CCR->(dbSetOrder(1))//CCR_FILIAL+CCR_CONCEP+CCR_PAIS
	If CCR->(dbSeek(xFilial("CCR")+cConcept))
		nAliq := CCR->CCR_ALIQ
	EndIf

	If lCalcIVA
		If !lXFis
	   	   //+---------------------------------------------------------------+
		   //¦ Obter Base de Cálculo e Aliquota dos Impostos.                ¦
		   //+---------------------------------------------------------Lucas-+
			aImposto[02] := nAliq											// Aliquota
			aImposto[11] := aItemINFO[4]										// Rateio do Frete
			aImposto[13] := aIteMINFO[5]     								// Rateio de Despesas
			aImposto[3] 	:= aItemINFO[3]										// Base de Cálculo
	   
	   
			//Tira os descontos se for pelo liquido .Bruno
			IF Subs(aImposto[5],4,1) == "S"  .And. Len(aImposto) >= 18 .And. ValType(aImposto[18])=="N"
				aImposto[3] -= aImposto[18]
			ENDIF
	   
		   //+----------------------------------------------------------+
		   //¦ Soma a Base de Cálculo os Impostos Incidentes            ¦
		   //+----------------------------------------------------------+ 
			cImpIncid := aItemINFO[10]
			nPos := aScan( aItem[6],{|x| x[1] == AllTrim(cImpIncid) } )
			If nPos > 0
			// Base atualizada
				aImposto[3] += aItem[6,nPos,4]
			Endif
	
			// Efetua o Calculo do Imposto
			aImposto[4] := aImposto[2] * ( aImposto[3]/100 )
			// Efetua o Calculo do Imposto sobre Frete
			aImposto[12] := aImposto[2] * ( aImposto[11]/100 )
			// Efetua o Calculo do Imposto sobre Despesas
			aImposto[14] := aImposto[2] * ( aImposto[13]/100 )
	   
			aImposto[3]:= Round(aImposto[3],nDecs)
			xRet:=aImposto
	   
		Else
			Do Case
			Case cCalculo=="A"
				xRet := nAliq
			Case cCalculo=="B"
				xRet:=MaFisRet(nItem,"IT_VALMERC")//+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
				nOrdSFC:=(SFC->(IndexOrd()))
				nRegSFC:=(SFC->(Recno()))
				SFC->(DbSetOrder(2))
				If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
					cImpIncid := Alltrim(SFC->FC_INCIMP)
				   //Tira os descontos se for pelo liquido
					If SFC->FC_LIQUIDO=="S"
						xRet-=If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
					Endif
				Endif
  			    
  			    //+---------------------------------------------------------------+
				//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
				//+---------------------------------------------------------------+
				If !Empty(cImpIncid)
					aImpRef:=MaFisRet(nItem,"IT_DESCIV")
					aImpVal:=MaFisRet(nItem,"IT_VALIMP")
					For nI:=1 to Len(aImpRef)
						If !Empty(aImpRef[nI])
							If AllTrim(aImpRef[nI][1])$cImpIncid
								xRet += aImpVal[nI]
							EndIf
						EndIf
					Next	nI
				EndIf
  			    
				SFC->(DbSetOrder(nOrdSFC))
				SFC->(DbGoto(nRegSFC))
			Case cCalculo=="V"
				xRet:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
				xRet:=(xRet * ( MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP]) /100 ))
				xRet:= Round(xRet,nDecs)
			EndCase
		Endif
	EndIf

RETURN xRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ M100IVA	³ Autor ³ Fernando Machima     ³ Data ³ 27.07.2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Calculo do IVA Generico - Entrada (Venezuela)               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ Generico                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Fernando M.   ³27/07/01³xxxxxx³Desenvolvimento inicial                  ³±±
±±³Tiago Bizan	 ³12/07/10³xxxxxx³Mudanças no calculo do imposto IVA 	   ³±±
±±³				 ³		  ³		 ³(Alíquota, Base de Calculo e Valor)      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION M100IVAVE(cCalculo,nItem,aInfo,lXFis)

	Local aImp:={},aItem:={},xRet
	Local nBase:=0,nAliq:=0
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ A variavel ParamIxb tem como conteudo um Array[2,?]:          ³
	³                                                               ³
	³ [1,1] > Quantidade Vendida                     		          ³
	³ [1,2] > Preco Unitario                            	          ³
	³ [1,3] > Valor Total do Item, com Descontos etc...             ³
	³ [1,4] > Valor do Frete Rateado para Este Item ...             ³
	³ [1,5] > Array Contendo os Impostos j  calculados, no caso de  ³
	³         incidˆncia de outros impostos.                        ³
	³ [2,?] > Array aImposto, Contendo as Informa‡oes do Imposto que³
	³         ser  calculado.                                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/
	If !lXFis
		aItem:=ParamIxb[1]
		aImp:=ParamIxb[2]
	   
		//BUSCA A ALÍQUOTA PADÃO   
		DbSelectarea("SFB")
		If SFB->(DbSeek(xFilial("SFB")+aInfo[X_IMPOSTO]))
			If SB1->B1_ALQIVA <> 0
				xRet:=SB1->B1_ALQIVA
			Else
				If SF4->F4_CALCIVA == "4" .OR. SF4->F4_CALCIVA == "3"
					xRet:=0
				ElseIF SF4->F4_TPALIQ == "G" .OR. SF4->F4_TPALIQ == " "
					xRet:=SFB->FB_ALIQ
				ElseIF SF4->F4_TPALIQ == "R"
					xRet:=SFB->FB_ALIQRD
				ElseIF SF4->F4_TPALIQ == "A"
					xRet:=SFB->FB_ALIQAD
				EndIF
			EndIF
		Endif
		
		//CALCULA A BASE DO IVA		
		If SF4->F4_CALCIVA == "3"
			nBase:=0
		Else
			nBase:=aItem[3]
		EndIF
		xRet:=nBase
		
		//CALCULA O VALOR DO IVA		   	
		aImp[02]:=nAliq
		If SF4->F4_CALCIVA == "3"
			aImp[03]:=0
		Else
			aImp[03]:=nBase
		EndIF
		aImp[04]:=(nAliq * nBase)/100
	Else
		Do Case
		Case cCalculo=="A" //CALCULA A ALÍQUOTA DO IVA
			DbSelectarea("SFB")
			If SFB->(DbSeek(xFilial("SFB")+aInfo[X_IMPOSTO]))
				If SB1->B1_ALQIVA <> 0
					xRet:=SB1->B1_ALQIVA
				Else
					If SF4->F4_CALCIVA == "4" .OR. SF4->F4_CALCIVA == "3"
						xRet:=0
					ElseIF SF4->F4_TPALIQ == "G" .OR. SF4->F4_TPALIQ == " "
						xRet:=SFB->FB_ALIQ
					ElseIF SF4->F4_TPALIQ == "R"
						xRet:=SFB->FB_ALIQRD
					ElseIF SF4->F4_TPALIQ == "A"
						xRet:=SFB->FB_ALIQAD
					EndIF
				Endif
			EndIF
		Case cCalculo=="B" //CALCULA A BASE DE CALCULO DO IVA
			If SF4->F4_CALCIVA == "3"
				nBase:=0
			Else
				nBase:=MaFisRet(nItem,"IT_VALMERC")
			EndIF
			xRet:=nBase
		Case cCalculo=="V" //CALCULA O VALOR DO IVA
			nAliq:=MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP])
			If SF4->F4_CALCIVA == "3"
				nBase:=0
			Else
				nBase:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
			EndIF
			xRet:= (nBase*nAliq)/100
		EndCase
	Endif
	             
Return(xRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ M100IVANI³ Autor ³ MARCELLO GABRIEL     ³ Data ³ 02.12.1999 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ CALCULO IVA GENERICO - entrada     (NICARAGUA)              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ Generico                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION M100IVANI(cCalculo,nItem,aInfo,lXFis)
	local aImp,aItem,cImp,nOrdSFC,nRegSFC,nRegSB1,xRet
	local nBase:=0,nAliq:=0,lALIQ:=.f.,cFil,cAux,cImpIncid,lIsento:=.f.,nE,nI

	dbselectarea("SFF")
	dbSetOrder(3)

	cFil:=xfilial()

	If !lXfis
		aItem:=ParamIxb[1]
		aImp:=ParamIxb[2]
		cImp:=aImp[1]
		cImpIncid:=aImp[10]
	Else
		cImp:=aInfo[X_IMPOSTO]
		SB1->(DbGoto(MaFisRet(nItem,"IT_RECNOSB1")))
		xRet:=0
		cImpIncid:=""
	Endif

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ A variavel ParamIxb tem como conteudo um Array[2,?]:          ³
	³                                                               ³
	³ [1,1] > Quantidade Vendida                     		        ³
	³ [1,2] > Preco Unitario                            	        ³
	³ [1,3] > Valor Total do Item, com Descontos etc...             ³
	³ [1,4] > Valor do Frete Rateado para Este Item ...             ³
	³ [1,5] > Array Contendo os Impostos j  calculados, no caso de  ³
	³         incidˆncia de outros impostos.                        ³
	³ [2,?] > Array aImposto, Contendo as Informa‡oes do Imposto que³
	³         ser  calculado.                                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/
	if dbseek(cFil+cImp)
		while FF_IMPOSTO == cImp .and. FF_FILIAL == cFil .and. !lAliq
			cAux:=Alltrim(FF_GRUPO)
			if cAux!=""
				lAliq:=(cAux==alltrim(SB1->B1_GRUPO))
			endif
			if lAliq
				if !(lIsento:=(FF_TIPO=="S"))
					nAliq:=FF_ALIQ
				endif
			endif
			dbskip()
		enddo
	endif

	If lXfis .and. mafisret(,"NF_TPCLIFOR") <> "1"
		lIsento := .T.
		nAliq:= 0
	Endif

	If !lIsento
		if !lAliq .And. If(!lXFis,.T.,cCalculo=="A")
			dbselectarea("SFB")    // busca a aliquota padrao
			if dbseek(xfilial()+cImp)
				nAliq:=SFB->FB_ALIQ
			endif
		endif
		If !lXfis
			nBase:=aItem[3]+aItem[4]+aItem[5]  //total + frete + outros impostos
			//Tira os descontos se for pelo liquido .Bruno
			If Subs(aImp[5],4,1) == "S" .And. Len(aImp) >= 18 .And. ValType(aImp[18])=="N"
				nBase-=aImp[18]
			Endif
			//+---------------------------------------------------------------+
			//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
			//+---------------------------------------------------------Lucas-+
			nI:=At(cImpIncid,";" )
			nI:=If(nI==0,Len(AllTrim(cImpIncid))+1,nI)
			While nI>1
				nE:=AScan(aItem[6],{|x| x[1]==Left(cImpIncid,nI-1)})
				If nE>0
					nBase+=aItem[6,nE,4]
				End
				cImpIncid:=Stuff(cImpIncid,1,nI,"")
				nI:=At(cImpIncid,";")
				nI:=If(nI==0,Len(AllTrim(cImpIncid))+1,nI)
			End
		Else
			If cCalculo=="B"
				nBase:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
				//Tira os descontos se for pelo liquido
				nOrdSFC:=(SFC->(IndexOrd()))
				nRegSFC:=(SFC->(Recno()))
				SFC->(DbSetOrder(2))
				If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+cImp)))
					cImpIncid:=Alltrim(SFC->FC_INCIMP)
					If SFC->FC_LIQUIDO=="S"
						nBase-=If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
					Endif
				Endif
				SFC->(DbSetOrder(nOrdSFC))
				SFC->(DbGoto(nRegSFC))
	 			//+---------------------------------------------------------------+
				//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
				//+---------------------------------------------------------------+
				If !Empty(cImpIncid)
					aImpRef:=MaFisRet(nItem,"IT_DESCIV")
					aImpVal:=MaFisRet(nItem,"IT_VALIMP")
					For nI:=1 to Len(aImpRef)
						If !Empty(aImpRef[nI])
							IF Trim(aImpRef[nI][1])$cImpIncid
								nBase+=aImpVal[nI]
							Endif
						Endif
					Next
				Endif
			Endif
		Endif
	endif

	If !lXFis
		aImp[02]:=nAliq
		aImp[03]:=nBase
		aImp[04]:=(nAliq * nBase)/100
		xRet:=aImp
	Else
		Do Case
		Case cCalculo=="B"
			xRet:=nBase
		Case cCalculo=="A"
			xRet:=nALiq
		Case cCalculo=="V"
			xRet:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
			xRet:=(xRet * ( MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP]) /100 ))
		EndCase
	Endif

RETURN(xRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao	 ³M100IVABO ³ Autor ³ Sergio S. Fuzinaka   ³ Data ³ 14.06.2007 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Calculo do IVA Generico                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³BOLIVIA                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function M100IVABO(cCalculo,nItem,aInfo,lXFis)

	Local aItemINFO
	Local aImposto
	Local aDespesas 	:=	{}
	Local cImpIncid
	Local cTec			:=	""
	Local nE,nI,xRet,nOrdSFC,nRegSFC
	Local aImpRef,aImpVal
	Local nMoeda := 1

	If Type("nMoedaPed")<>"U"
		nMoeda:= nMoedaPed
	ElseIf Type("nMoedaNf")<> "U"
		nMoeda:= nMoedaNf
	EndIf
	If !lXFis
		aItemINFO	:= ParamIxb[1]
		aImposto		:= AClone( ParamIxb[2] )
		cImpIncid	:= aImposto[10]
		If Len(ParamIxb[1]) >= 8
			cTec		:= ParamIxb[1][8]
		Endif
		If Len(ParamIxb[1]) >= 9
			aDespesas	:= ParamIxb[1][9]
		Endif
		xRet:=aImposto
		cTes	 		:= SF4->F4_CODIGO
	Else
		xRet:=0
		cImpIncid:=""
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Obter Base de C lculo e Al¡quota dos Impostos.			     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ    
	nOrdSFC:=(SFC->(IndexOrd()))
	nRegSFC:=(SFC->(Recno()))
	SFC->(DbSetOrder(2))

	If !lXFis
		aImposto[_RATEOFRET] := aItemINFO[_FLETE]      // Rateio do Frete
		aImposto[_RATEODESP] := aItemINFO[_GASTOS]     // Rateio de Despesas
		aImposto[_BASECALC]  := aItemINFO[_VLRTOTAL]+aItemINFO[_FLETE]+aItemINFO[_GASTOS] // Base de Calculo
	
		If Subs(aImposto[5],4,1) == "S"  .And. Len(aImposto) >= 18 .And. ValType(aImposto[18])=="N"
			aImposto[_BASECALC] -= aImposto[18]
		EndIf
	
		aImposto[_ALIQUOTA] := SFB->FB_ALIQ
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Soma base dos impostos incidentes						     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nI := At( ";",cImpIncid )
		nI := If( nI==0,Len( AllTrim( cImpIncid ) )+1,nI )
		While nI > 1
			nE := AScan( aItemINFO[6],{|x| x[1] == Left(cImpIncid,nI-1) } )
			If nE > 0
				aImposto[3] := aImposto[3]+aItemINFO[6,nE,4]
			EndIf
			cImpIncid := Stuff( cImpIncid,1,nI,"" )
			nI := At( ";",cImpIncid )
			nI := If( nI==0,Len( AllTrim( cImpIncid ) )+1,nI )
		End
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Efetua o Calculo do imposto  								 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (SFC->(DbSeek(xFilial("SFC")+cTes)))
			If SFC->FC_BASE > 0
				aImposto[_BASECALC] := aImposto[_BASECALC] * (1 - SFC->FC_BASE / 100)
			Endif
		EndIf
	
		aImposto[_IMPUESTO]  := aImposto[_BASECALC] * (aImposto[_ALIQUOTA]/100)
		xRet:=aImposto
	Else
		Do Case
		Case cCalculo=="A"
			SFB->(DbSeek(xFilial("SFB")+aInfo[X_IMPOSTO]))
			xRet:=SFB->FB_ALIQ
		Case cCalculo=="B"
			xRet:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")

			If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
				cImpIncid:=Alltrim(SFC->FC_INCIMP)
				//Tira os descontos se for pelo liquido
				If SFC->FC_LIQUIDO=="S"
					xRet-=If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
				Endif
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Soma a Base de Calculo os Impostos Incidentes                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Empty(cImpIncid)
				aImpRef:=MaFisRet(nItem,"IT_DESCIV")
				aImpVal:=MaFisRet(nItem,"IT_VALIMP")
				For nI:=1 to Len(aImpRef)
					If !Empty(aImpRef[nI])
						IF Trim(aImpRef[nI][1])$cImpIncid
							If "IE" $ AllTrim(aImpRef[nI][1])
								xRet-=aImpVal[nI]
							Else
								xRet+=aImpVal[nI]
							EndIf
						Endif
					Endif
				Next
			Endif
			If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
				If SFC->FC_BASE > 0
					xRet := Round(xRet * (1 - SFC->FC_BASE / 100), MsDecimais(nMoeda))
				Endif
			EndIf
		Case cCalculo=="V"
			
			SFC->(DbSetOrder(2))
			SFC->(MsSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[1]))	
			If SFC->FC_CALCULO=="T"
				xRet:= MaRetBasT(aInfo[2],nItem,MaFisRet(nItem,'IT_ALIQIV'+aInfo[X_NUMIMP]    ))
			Else
				xRet:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
			Endif
			xRet:=(xRet*(MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP])/100))
		EndCase
	Endif

	SFC->(DbSetOrder(nOrdSFC))
	SFC->(DbGoto(nRegSFC))

Return(xRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³M100IVAPT ºAutor  ³Mary C. Hergert     º Data ³ 06/08/2008  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Calcula o IVA destacado para Portugal                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SigaFis                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function M100IVAPT(cCalculo,nItem,aInfo,lXFis)

	Local aImp 		:= {}
	Local aItem 	:= {}
	Local aArea		:= GetArea()
	Local aImpRef 	:= {}
	Local aImpVal 	:= {}

	Local cImp		:= ""
	Local cTes   	:= ""
	Local cRegiao	:= ""
	Local cGrpAces	:= GetNewPar("MV_GRPACES","FR=004;SE=005;DT=006;DN=007;TA=008")
	Local cGrupo	:= ""
	Local cProd		:= ""
	Local cImpIncid	:= ""
	Local cImpDesp	:="IFD|IDD|ISD|ITD"

	Local nOrdSFC   := 0
	Local nRegSFC   := 0
	Local nImp   	:= 0
	Local nBase		:= 0
	Local nAliq 	:= 0
	Local nDecs 	:= 0
	Local nPos	 	:= 0
	Local nI		:= 0
	Local nE		:= 0

	Local lIsento	:= .F.
	Local lImpDep	:= .F.
	Local lCalcLiq	:= .F.

	Local cChave    := ""
	Local dEmissao

	Local xRet
	Local nMoeda	:=1

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Observacao :                                                                  ³
	³                                                                               ³
	³ A variavel ParamIxb tem como conteudo um Array[2], contendo :                 ³
	³ [1,1] > Quantidade Vendida                                                    ³
	³ [1,2] > Preco Unitario                                                        ³
	³ [1,3] > Valor Total do Item, com Descontos etc...                             ³
	³ [1,4] > Valor do Frete rateado para este Item                                 ³
	³         Para Portugal, o imposto do frete e calculado em separado do item     ³
	³ [1,5] > Valor das Despesas rateado para este Item                             ³
	³         Para Portugal, o imposto das despesas e calculado em separado do item ³
	³ [1,6] > Array Contendo os Impostos já calculados, no caso de incidência de    ³
	³         outros impostos.                                                      ³
	³ [2,1] > Array aImposto, contendo as Informações do Imposto que será calculado.³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/
	If !lXfis
		aItem	:= ParamIxb[1]
		aImp		:= ParamIxb[2]
		cImp		:= aImp[1]
		cTes		:= SF4->F4_CODIGO
		cProd 	:= SB1->B1_COD
	Else
		cImp		:= aInfo[1]
		cTes		:= MaFisRet(nItem,"IT_TES")
		cProd	:= MaFisRet(nItem,"IT_PRODUTO")
	Endif
               
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verificando o cadastro do produto movimentado³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//Frontloja usa o arquivo SBI para cadastro de produtos
	If cModulo == "FRT"
		SBI->(DbSeek(xFilial("SBI")+cProd))
	Else
		SB1->(DbSeek(xFilial("SB1")+cProd))
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o cliente ou fornecedor sao isentos pelo cadastro:         ³
	//³1 = SP IVA - Pessoa Singular (sujeito passivo de IVA, pessoa singular) ³
	//³2 = SP IVA - Pessoa Colectiva (sujeito passivo de IVA, pessoa coletiva)³
	//³3 = Isento IVA Pessoa Singular                                         ³
	//³4 = Isento IVA Pessoa Colectiva                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cModulo $ "FAT|LOJA|FRT|TMK"
		If SA1->A1_TIPO $ "34"
			lIsento := .T.
		Endif

		If SA1->(ColumnPos("A1_PAISEMP")) == 0 .or. SA1->A1_PAISEMP == "S"
			cRegiao := GetNewPar("MV_GRPTRIB","")
		Else
			cRegiao := SA1->A1_GRPTRIB
		Endif
	Else
		If SA2->A2_TIPO $ "34"
			lIsento := .T.
		Endif
		If SA2->(ColumnPos("A2_PAISEMP")) == 0 .or. SA2->A2_PAISEMP == "S"
			cRegiao := GetNewPar("MV_GRPTRIB","")
		Else
			cRegiao := SA2->A2_GRPTRIB
		Endif

	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica o grupo de tributacao das despesas acessorias:³
	//³IVC - IVA destacado das mercadorias                    ³
	//³IFD - IVA destacado frete                              ³
	//³IDD - IVA destacado despesas                           ³
	//³ISD - IVA destacado seguro                             ³
	//³ITD - IVA destacado tara                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Do Case
	Case cImp == "IFD"
		nPos := At("FR",cGrpAces)
	Case cImp == "IDD"
		nPos := At("DT",cGrpAces)
	Case cImp == "ISD"
		nPos := At("SE",cGrpAces)
	Case cImp == "ITD"
		nPos := At("TA",cGrpAces)
	EndCase

	If cImp $ cImpDesp
		If nPos > 0
			cGrupo := Padr(SubStr(cGrpAces,nPos+3,3),TamSx3("B1_GRTRIB")[1])
		Endif
	Else
		//Frontloja usa o arquivo SBI para cadastro de produtos
		If cModulo=="FRT"
			cGrupo := SBI->BI_GRTRIB
		Else
			cGrupo := SB1->B1_GRTRIB
		Endif
	Endif

	If Empty(cRegiao)
		cRegiao := GetNewPar("MV_GRPTRIB","")
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica a existencia do Plano IVA  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SFF")
	SFF->(dbSetOrder(14))
	If SFF->(dbseek(xFilial("SFF")+cImp+cRegiao+cGrupo))

		If !lIsento
			//Busca a aliquota na tabela de plano IVA
			If SFF->FF_TIPO == "S" .or. SFF->FF_TIPO == "I"
				lIsento := .T.
			Endif
			nAliq := SFF->FF_ALIQ
		EndIf
		cChave := xFilial("CE8")+SFF->FF_IMPOSTO+SFF->FF_REGIAO+SFF->FF_TIPO
		
	Else

		//Busca a aliquota padrao para o imposto quando nao ha o plano IVA
		DbSelectArea("SFB")
		SFB->(DbSetOrder(1))
		If SFB->(Dbseek(xFilial("SFB")+cImp))
			nAliq := SFB->FB_ALIQ
		EndIf
		If FieldPos("FB_TIPALIQ") > 0
			cChave := xFilial("CE8")+SFB->FB_CODIGO+Space(TamSX3("CE8_EST")[1])+SFB->FB_TIPALIQ
		EndIf

	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica a existencia de aliquota na tabela de validade  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If AliasInDic("CE8")
		//Busca data de emissao
		If Type("dDEmissao") == "D"
			dEmissao := dDEmissao
		Else
			dEmissao := dDataBase
		EndIf

		//Busca aliquota na tabela de aliquotas por periodo
		dbSelectArea("CE8")
		CE8->(dbSetOrder(2))
		If CE8->(dbSeek(cChave))
			Do While cChave == CE8->CE8_FILIAL+CE8->CE8_CODIMP+CE8->CE8_EST+CE8->CE8_TIPO .and. CE8->(!EOF())
		
				If CE8->CE8_DATINI <= dEmissao  .and. CE8->CE8_DATFIN >= dEmissao
					If CE8->CE8_ISEN == "1"
						lIsento := .T.
					Else
						nAliq := CE8->CE8_ALIQ
					EndIf
					Exit
				EndIf
			
				CE8->(dbSkip())
			EndDo
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta a base de calculo do IVA do item. Somente sera somado ao total do        ³
	//³item os valores referentes a outros impostos que incidem na base do IVA. As    ³
	//³despesas acessorias (frete, seguro, despesas e tara) tem tributacao especifica ³
	//³e nao devem ser somadas para compor a base de calculo do item.                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica qual imposto vai calcular:³
	//³IVC - IVA destacado das mercadorias³
	//³IFD - IVA destacado frete          ³
	//³IDD - IVA destacado despesas       ³
	//³ISD - IVA destacado seguro         ³
	//³ITD - IVA destacado tara           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lIsento
		If !lXFis
			Do Case
			Case cImp == "IFD"
				nBase := aItem[4]
			Case cImp == "IDD"
				nBase := aItem[8]
			Case cImp == "ISD"
				nBase := aItem[9]
			Case cImp == "ITD"
				nBase := aItem[11]
			OtherWise
				nBase := aItem[3]
			EndCase
		Else
			Do Case
			Case cImp == "IFD"
				nBase := MaFisRet(nItem,"IT_FRETE")
			Case cImp == "IDD"
				nBase := MaFisRet(nItem,"IT_DESPESA")
			Case cImp == "ISD"
				nBase := MaFisRet(nItem,"IT_SEGURO")
			Case cImp == "ITD"
				nBase := MaFisRet(nItem,"IT_TARA")
			OtherWise
				nBase := MaFisRet(nItem,"IT_VALMERC")
			EndCase
		Endif
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica os decimais da moeda para arredondamento do valor  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("M->F1_MOEDA")<>"U"
		nMoeda:= M->F1_MOEDA
	ElseIf Type("M->C7_MOEDA")<>"U"
		nMoeda:= M->C7_MOEDA
	ElseIf Type("M->F2_MOEDA")<>"U"
		nMoeda:= M->F2_MOEDA
	ElseIf Type("M->C5_MOEDA")<>"U"
		nMoeda:= M->C5_MOEDA
	ElseIf Type("nMoedaPed")<>"U"
		nMoeda:= nMoedaPed
	ElseIf Type("nMoedaNf")<> "U"
		nMoeda:= nMoedaNf
	ElseIf Type("nMoedaCor")<> "U"
		nMoeda:= nMoedaCor
	ElseIf lXFis
		nMoeda 		:= MAFISRET(,'NF_MOEDA')
	EndIf
	nDecs := MsDecimais(nMoeda)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica os descontos e os impostos incidentes³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lXFis
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Soma a Base de Calculo os Impostos Incidentes ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nI := At(cImpIncid,";" )
		nI := Iif(nI==0,Len(AllTrim(cImpIncid))+1,nI)
		While nI > 1
			nE := AScan(aItem[6],{|x| x[1]==Left(cImpIncid,nI-1)})
			If nE > 0
				nBase += aItem[6,nE,4]
				nBase := Round(nBase,nDecs)
			Endif
			cImpIncid := Stuff(cImpIncid,1,nI,"")
			nI := At(cImpIncid,";")
			nI := Iif(nI==0,Len(AllTrim(cImpIncid))+1,nI)
		Enddo

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Reduz os descontos, quando a configuração indica calculo pelo liquido.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Subs(aImp[5],4,1) == "S" .And. Len(aImp) >= 18 .And. ValType(aImp[18])=="N"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Somente quando for IVA de mercadorias aplica o desconto³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !(cImp $ cImpDesp)
				If !lIsento
					nBase -= aImp[18]
					nBase := Round(nBase,nDecs)
				Endif
			Endif
		Endif

	Else
           
		If cCalculo == "B"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Somente quando for IVA de mercadorias aplica o desconto³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !(cImp $ cImpDesp)
				nOrdSFC := (SFC->(IndexOrd()))
				nRegSFC := (SFC->(Recno()))
				SFC->(DbSetOrder(2))
				If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+cImp)))
					cImpIncid := Alltrim(SFC->FC_INCIMP)
					If SFC->FC_LIQUIDO == "S"
						If !lIsento
							nBase -= If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
							nBase := Round(nBase,nDecs)
						Endif
					Endif
				Endif
				SFC->(DbSetOrder(nOrdSFC))
				SFC->(DbGoto(nRegSFC))
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Soma a Base de Calculo os Impostos Incidentes ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Empty(cImpIncid)
				aImpRef := MaFisRet(nItem,"IT_DESCIV")
				aImpVal := MaFisRet(nItem,"IT_VALIMP")
				For nI := 1 to Len(aImpRef)
					If !Empty(aImpRef[nI])
						If Trim(aImpRef[nI][1]) $ cImpIncid
							nBase += aImpVal[nI]
							nBase := Round(nBase,nDecs)
						Endif
					Endif
				Next
			Endif
		Endif
	Endif

	If !lXFis
		aImp[02] := nAliq
		aImp[03] := Round(nBase,nDecs)
		aImp[04] := Round(((nAliq * nBase)/100),nDecs)
		xRet := aImp
	Else
		Do Case
		Case cCalculo=="B"
			xRet := nBase
		Case cCalculo=="A"
			xRet := nALiq
		Case cCalculo=="V"
			SFC->(DbSetOrder(2))
			SFC->(MsSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[1]))
			If SFC->FC_CALCULO=="T"
				nBase := MaRetBasT(aInfo[2],nItem,MaFisRet(nItem,'IT_ALIQIV'+aInfo[2]))
			Else
				nBase :=MaFisRet(nItem,"IT_BASEIV"+aInfo[2])
			Endif
			xRet := Round(((nAliq * nBase)/100),nDecs)

		EndCase
	Endif

Return(xRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ M100IVAEQ ºAutor  ³ Nilton (Onsten)   º Data ³  11/06/2010 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Calculo do Imposto IVA - Entrada - Localizacao Equador      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   	         ³        ³      ³                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function M100IVAEQ(cCalculo,nItem,aInfo,lXFis)

	Local nAliq := 0
	Local nBase,cImp,xRet,nOrdSFC,nRegSFC,cVerIva,nI,nE
	Local cImpIncid := ""
	Local aImpRef := {}
	Local aImpVal := {}
	
	SetPrvt("CALIASROT,CORDEMROT,AITEMINFO,AIMPOSTO,_CPROCNAME,_CZONCLSIGA")
	SetPrvt("_LAGENTE,_LEXENTO,AFISCAL,_LCALCULAR,_LESLEGAL,_NALICUOTA,NALIQ")
	SetPrvt("_NVALORMIN,_NREDUCIR,CTIPOEMPR,CTIPOCLI,CTIPOFORN,CZONFIS,CCFO,LRET")
	SetPrvt("CCODPROD,LRET,NBASE,CQUALI,CPROD")

	cTipo := Iif( Type("cTipo")=="U","N",cTipo)

	lRet := .T.
	nBase := 0

	If !lXFis
		aItemINFO := ParamIxb[1]
		aImposto  := ParamIxb[2]
		xRet      := aImposto
		cImp      := aImposto[1]
		cImpIncid := aImposto[10]
		cProd     := aImposto[16]
	Else
		xRet:=0
		cImp:=aInfo[X_IMPOSTO]
		cProd:=MaFisRet(nItem,"IT_PRODUTO")
		SF4->(DbSeek(MaFisRet(nItem,"IT_TES")))
	Endif

	dbSelectArea("SF4")
	If lXFis
		SF4->(DbSeek(xFilial("SF4")+MaFisRet(nItem,"IT_TES")))
	Endif
	cCFO    := Alltrim(SF4->F4_CF)
	cVerIVA := SF4->F4_CALCIVA
	//TES nao calcula IVA
	If cVerIva == "2" .or. cVerIva == "3"
		lRet := .F.
		Return ( xRet )
	endif

	If lRet
		dbSelectArea("SFB")
		dbSetOrder(1)
		If dbSeek(xFilial("SFB")+cImp)

	   		//+---------------------------------------------------------------+
	   		//¦ Verifica a Alíquota                                           ¦
	   		//+---------------------------------------------------------------+		   
			If IIf(lXFis,cCalculo$"BA",.T.)
				nAliq := 0
				nBase := 1
				If SB1->B1_ALQIVA <> 0
					nAliq := SB1->B1_ALQIVA
				EndIf
				If nAliq == 0
					nAliq := SFB->FB_ALIQ
				EndIf
				If cVerIva == "4"
					nAliq := 0
				endif
			EndIf

			If !lXFis
				dbSelectArea("SFC")
				dbSetOrder(2)
				aImposto[_ALIQUOTA]  := nAliq // Alicuota de Zona Fiscal
				aImposto[_BASECALC]  := aItemINFO[_VLRTOTAL] * nBase // Base de Cálculo
				//Tira os descontos se for pelo liquido 
				If Subs(aImposto[5],4,1) == "S"  .And. Len(aImposto) >= 18 .And. ValType(aImposto[18])=="N"
					aImposto[_BASECALC]	-=	aImposto[18]
				Endif
				
		   	   //+---------------------------------------------------------------+
		   	   //¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
		   	   //+---------------------------------------------------------Lucas-+
				nI:=At(cImpIncid,";" )
				nI:=If(nI==0,Len(AllTrim(cImpIncid))+1,nI)
				While nI>1
					nE:=AScan(aItemINFO[6],{|x| x[1]==Left(cImpIncid,nI-1)})
					If nE>0
						aImposto[_BASECALC] += aItemINFO[6,nE,4]
					Endif
					cImpIncid:=Stuff(cImpIncid,1,nI,"")
					nI:=At(cImpIncid,";")
					nI:=If(nI==0,Len(AllTrim(cImpIncid))+1,nI)
				EndDo
			   
		   	   //+---------------------------------------------------------------+
			   //¦ Efectua el Cálculo del Impuesto                               ¦
			   //+---------------------------------------------------------------+
				aImposto[_IMPUESTO]  := aImposto[_BASECALC] * ( aImposto[_ALIQUOTA]/100)
				xRet:=aImposto
			Else
				Do Case
				Case cCalculo=="A"
					xRet:=nAliq
				Case cCalculo=="B"
		       
					dbSelectArea("SFC")
					dbSetOrder(2)

					xRet:=MaFisRet(nItem,"IT_VALMERC")
					xRet:=xRet*nBase
					nOrdSFC:=(SFC->(IndexOrd()))
					nRegSFC:=(SFC->(Recno()))
					SFC->(DbSetOrder(2))
					If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
						//Tira os descontos se for pelo liquido
						cImpIncid:=Alltrim(SFC->FC_INCIMP)
						If SFC->FC_LIQUIDO=="S"
							xRet-=If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
						Endif
					Endif
					SFC->(DbSetOrder(nOrdSFC))
					SFC->(DbGoto(nRegSFC))
					
					//+---------------------------------------------------------------+
			        //¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
			        //+---------------------------------------------------------------+
			        If !Empty(cImpIncid)
			           	nBase := 0
					    aImpRef := MaFisRet(nItem,"IT_DESCIV")
					    aImpVal := MaFisRet(nItem,"IT_VALIMP")
					    For nI := 1 to Len(aImpRef)
					    	If !Empty(aImpRef[nI])
					    		If Trim(aImpRef[nI][1])$cImpIncid
					    			nBase += aImpVal[nI]
					    		Endif
					    	Endif
						Next
			    		xRet += nBase
					EndIf
					
				Case cCalculo=="V"
					nAliq:=MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP])
					nBase:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
					dbSelectArea("SFC")
					dbSetOrder(2)
					xRet:=nBase * (nAliq/100)
				EndCase
			EndIf
		EndIf
	Endif
Return( xRet )
