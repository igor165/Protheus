#include "rwmake.ch"        // incluido pelo assistente de conversao do AP5 IDE em 07/01/00
#include "m100clas.ch"
/*
______________________________________________________________________________
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¦¦+------------------------------------------------------------------------+¦¦
¦¦¦Funcion   ¦ M100Clas ¦ Autor ¦ José Lucas            ¦ Fecha¦ 13/05/98  ¦¦¦
¦¦+----------+-------------------------------------------------------------¦¦¦
¦¦¦Descripc. ¦ Inicializar aHeader e aCOLS a partir do Remito.             ¦¦¦
¦¦¦          ¦ Utilizada na Classificacao de Factura (Argentina)           ¦¦¦
¦¦+----------+-------------------------------------------------------------¦¦¦
¦¦¦Uso       ¦ MATA101.PRW - chamado pelo ponto de entrada.                ¦¦¦
¦¦+------------------------------------------------------------------------¦¦¦
¦¦¦         ACTUALIZACIONES EFECTUADAS DESDE LA CODIFICACION INICIAL       ¦¦¦
¦¦+------------------------------------------------------------------------¦¦¦
¦¦¦Programador ¦ Data   ¦ BOPS ¦  Motivo da Alteracao                      ¦¦¦
¦¦+------------+--------+------+-------------------------------------------¦¦¦
¦¦¦Jose Otermin¦11/05/99¦xxxxxx¦Toma de Precios para Factura de Entrada.   ¦¦¦
¦¦¦            ¦        ¦      ¦Por preferencia toma de SCM o SC7 o SB1.   ¦¦¦
¦¦¦            ¦09/06/99¦XXXXXX¦Actualizacion con control por Arch.Vacio   ¦¦¦
¦¦¦Heverson    ¦22/06/99¦Melhor¦Inicializar campo D1_SEGUM e D1_QTSEUM.    ¦¦¦
¦¦¦Lucas       ¦17/08/99¦Melhor¦Criar Perguntas para filtrar Remitos por   ¦¦¦
¦¦¦            ¦        ¦      ¦Proveedor e Sucursal...                    ¦¦¦
¦¦¦Lucas       ¦24/08/99¦Melhor¦Criacao do array aRecnoSCM para atualizar  ¦¦¦
¦¦¦            ¦        ¦      ¦os Remitos.                                ¦¦¦
¦¦¦Bruno       ¦24/08/99¦Melhor¦Considerar cancelamento na pergunta.       ¦¦¦
¦¦¦Bruno       ¦25/08/99¦Melhor¦Control de IndRegua Vazio.                 ¦¦¦
¦¦¦Paulo       ¦30/08/99¦Melhor¦Alteracao nas perguntas para pegar a Rut   ¦¦¦
¦¦¦Bruno       ¦30/08/99¦Melhor¦Tamanho de Nfiscal e serio pegado do SX3.  ¦¦¦
¦¦¦Bruno       ¦21/12/99¦Melhor¦Tratamento de CM_QTDACLA.                  ¦¦¦
¦¦¦Marcello    ¦20/01/00¦oooooo¦Unificacao                                 ¦¦¦
¦¦¦Bruno       ¦28/01/00¦oooooo¦Reestrtura‡Æo para melhorar performance.   ¦¦¦
¦¦¦Ronny       ¦02/08/00¦oooooo¦Localizacao Porto Rico e USA.              ¦¦¦
¦¦¦Fernando M. ¦11/08/00¦oooooo¦Preenche aCols com conta contabil e criacao¦¦¦
¦¦¦            ¦        ¦      ¦do ponto de entrada M100CL001              ¦¦¦
¦¦¦Fernando M. ¦18/12/00¦oooooo¦Preenche aCols com imposto especifico/comb.¦¦¦
¦¦¦Leandro M S ¦09/10/01¦Melhor¦Substituicao dos MV_PAR?? por variaveis   .¦¦¦
¦¦¦Rubens Pante¦09/10/01¦oooooo¦Inclusao do campo CM_QTDACLA na Query     .¦¦¦
¦¦¦Rubens Pante¦30/10/01¦AC1547¦Alteracao da M100CLAS para nao ser sensivel¦¦¦
¦¦¦            ¦        ¦      ¦a posicao dos campos no SCM em TOP.       .¦¦¦
¦¦¦            ¦        ¦          ¦                                       ¦¦¦
¦¦¦Jonathan Glz¦08/07/15¦PCREQ-4256¦Se elimina la funcion M100Perg() que   ¦¦¦
¦¦¦            ¦        ¦          ¦hace modificacion a SX1 por motivo de  ¦¦¦
¦¦¦            ¦        ¦          ¦adecuacion a fuentes a nuevas estruc-  ¦¦¦
¦¦¦            ¦        ¦          ¦turas SX para Version 12.              ¦¦¦
¦¦¦M.Camargo   ¦09/11/15¦PCREQ-4262¦Merge sistemico v12.1.8	                ¦¦¦
¦¦+------------------------------------------------------------------------+¦¦
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
*/

Function M100clas()
Local aInit := {}
Local nK
Local cNomeArq := ""
Local cAux
Local cRut
Local cFornecedor
Local cLojaFor
Local dInicial    
Local dFinal     
Local nClassifica 
Local nj := 0       
Local nL := 0
Local cAuxPaisL := "ANG|ARG|AUS|BOL|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|URU|VEN"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de variaveis utilizadas no programa atraves da funcao    ³
//³ SetPrvt, que criara somente as variaveis definidas pelo usuario,    ³
//³ identificando as variaveis publicas do sistema utilizadas no codigo ³
//³ Incluido pelo assistente de conversao do AP5 IDE                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

SetPrvt("LRET,_NRECNO,NTOTREC,ACPOS,ACAMPOS,_XPERG01")
SetPrvt("_XPERG02,_XPERG03,_XPERG04,_CARQIDX,_CIDXKEY,_CCONDICAO")
SetPrvt("CTITLE,CMSG,LINVERTE,CMARCA,NOPCMARK,MV_PAR01")
SetPrvt("MV_PAR02,MV_PAR03,MV_PAR04,NBRANCOS,ARECNO,CTIPO")
SetPrvt("CNFISCAL,CSERIE,DDEMISSAO,CA100FOR,CLOJA,DDIGIT")
SetPrvt("CFORMUL,CESPECIE,NI,NCNT,AREGS,NPOS")
SetPrvt("NUSADO,ACOLS,_ALIAS,CCHAVE,NPRECIO,_CPERG")
SetPrvt("_SALIAS,I,J,NINDEX,")
SetPrvt("_XPERG05")

Private nDescri  := 0
Private nItem    := 0
Private nUm      := 0
Private nSegum   := 0
Private nCod     := 0
Private nLocal   := 0
Private nQuant   := 0
Private nRemito  := 0
Private nItemRem := 0
Private nTes     := 0
Private nCF      := 0
Private nLOTEFOR := 0
Private nLOTECTL := 0
Private nNUMLOTE := 0
Private nDTVALID := 0
Private nIPI     := 0
Private nQtSegUm := 0
Private nVunit   := 0
Private nTotal   := 0
Private nConta   := 0
Private nFepp    := 0
Private nIE      := 0
Private nDesc    := 0
Private cRetTitle:= RTrim(RetTitle("CM_REMITO"))
Private oTmpTable 

lRet := .T.
_nRecno := ParamIxb[1]
cTextoP := ""

nTotRec := SCM->( LastRec() )
If nTotRec == 0
	lRet := .F.
	Return( lRet )
EndIf

aCpos:={}
aCampos := {}
aCpoQuery := {}
AADD(aCampos,{"CM_OK",""," "})

SX3->( dbSetOrder(2) )
SX3->( dbSeek("CM_REMITO") )
AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
SX3->( dbSeek("CM_FORNECE") )
AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
SX3->( dbSeek("CM_LOJA") )
AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
SX3->( dbSeek("CM_ITEM") )
AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
SX3->( dbSeek("CM_PRODUTO") )
AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
SX3->( dbSeek("CM_UM") )
AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
SX3->( dbSeek("CM_QUANT") )
AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
SX3->( dbSeek("CM_QTDACLA") )
AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
SX3->( dbSeek("CM_SEGUM") )
AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
SX3->( dbSeek("CM_QTSEGUM") )
AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
SX3->( dbSeek("CM_LOCAL") )
AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
SX3->( dbSeek("CM_PEDIDO") )
AADD(aCampos,{SX3->X3_CAMPO,"",SX3->X3_TITULO})
If cPaisLoc == "CHI"
	If SCM->(FieldPos("CM_FEPP")) > 0
		SX3->( dbSeek("CM_FEPP") )
		AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
	EndIf
	If SCM->(FieldPos("CM_IE")) > 0
		SX3->( dbSeek("CM_IE") )
		AADD(aCampos,{SX3->X3_CAMPO,"",SX3->(X3Titulo())})
	EndIf
EndIf	

SX3->( dbSetOrder(1) )

//+--------------------------------------------------------------+
//¦ Salvar as perguntas do Padrao, antes do filtro...            ¦
//+--------------------------------------------------------------+
_xPerg01 := mv_par01
_xPerg02 := mv_par02
_xPerg03 := mv_par03
_xPerg04 := mv_par04
_xPerg05 := mv_par05

//+--------------------------------------------------------------+
//¦ Carrega as perguntas selecionadas                            ¦
//+--------------------------------------------------------------+
//+--------------------------------------------------------------+
//¦ CHILE                                                        ¦
//¦ mv_par01 - RUT		                                         ¦
//¦ mv_par02 - Proveedor                                         ¦
//¦ mv_par03 - Sucursal                                          ¦
//¦ mv_par04 - Da Fecha Emissao                                  ¦
//¦ mv_par05 - Ate Fecha emissao                                 ¦
//+--------------------------------------------------------------+

//+--------------------------------------------------------------+
//¦ OUTROS                                                       ¦
//¦ mv_par01 - Proveedor                                         ¦
//¦ mv_par02 - Sucursal                                          ¦
//¦ mv_par03 - Da Fecha Emissao                                  ¦
//¦ mv_par04 - Ate Fecha emissao                                 ¦
//¦ mv_par05 - Classificar                                       ¦
//+--------------------------------------------------------------+


IF !Pergunte("M100CL",.T.)
	lRet	:=	.F.
Else
	If cPaisLoc == "CHI"
		cRut        := mv_par01
		cFornecedor := mv_par02
		cLojaFor    := mv_par03
		dInicial    := mv_par04
		dFinal      := mv_par05
	Else
		cFornecedor := mv_par01
		cLojaFor       := mv_par02
		dInicial    := mv_par03
		dFinal      := mv_par04
		nClassifica := mv_par05
	EndIf
	dbSelectArea("SCM")
	dbSetOrder(1)
	_cArqIdx := Criatrab(,.F.)
	
	_cIdxKey := IndexKey()
	
	_cCondicao := 'CM_FORNECE=="'+cFornecedor+'".and.CM_LOJA=="'+cLojaFor+'".and.CM_FILIAL=="'+xFIlial("SCM")
	_cCondicao := _cCondicao + '".And.DTOS(CM_EMISSAO)>="'+DTOS(dInicial)+'".and.DTOS(CM_EMISSAO)<="'+DTOS(dFinal)+'"'
	_cCondicao := _cCondicao + '.and.CM_NFISCAL=="'+Replicate(" ",Len(SCM->CM_NFISCAL))+'"'
	_cCondicao := _cCondicao + '.And.CM_QTDACLA > 0 '
	
	cTitle := cRetTitle + OemToAnsi(STR0027)  //cRetTitle +" de Compras"
	cMsg   := OemToAnsi(STR0025) + cRetTitle  //"Seleccionando "+ cRetTitle
	cTextoP:= OemToAnsi(STR0026) + cRetTitle  //"Preparando "+ cRetTitle
	
	#IFDEF TOP
		dbSetOrder(5)
		If TcSrvType() != "AS/400"
			
			If Select("SCMTMP") <> 0
				dbSelectArea("SCMTMP")
				dbCloseArea()
			EndIf	
			
			cMarca := GetMark()
			
			DbSelectArea("SCM")
			
			cAliasSCM := "SCMTMP"
			
			aStruSCM:= DbStruct()
			cQuery := "SELECT CM_FORNECE, CM_LOJA, CM_PRODUTO, CM_ITEM, CM_UM, CM_QUANT, CM_VUNIT, CM_TOTAL, CM_LOCAL, "
			cQuery += "CM_EMISSAO, CM_TES, CM_PEDIDO, CM_ITEMPED, CM_SEGUM, CM_REMITO, CM_CF, CM_LOTEFOR, CM_LOTECTL,"
            cQuery += "CM_NUMLOTE, CM_DTVALID, CM_QTSEGUM, CM_CONTA, CM_QTDACLA, "
            If cPaisloc $ cAuxPaisL
            	cQuery += "CM_OP, "
            EndIf
			cAux   := cQuery
			If cPaisLoc == "CHI"
				cQuery += "R_E_C_N_O_ RECNO"
				cQuery += " FROM "+ RetSqlName("SCM") + " SCM "
				cQuery += " WHERE CM_FILIAL = '" + xFilial('SCM') + "'"
				cQuery += " AND CM_RUTPRO = '"+mv_par01+"'"
				cQuery += " AND CM_FORNECE = '"+mv_par02+"'"
				cQuery += " AND CM_LOJA = '"+mv_par03+"'"
				cQuery += " AND CM_EMISSAO BETWEEN '"+DTOS(mv_par04)+"' AND '"+DTOS(mv_par05)+"'"
				cQuery += " AND CM_NFISCAL ='"+Space(Len(SCM->CM_NFISCAL))+"'"
			Else
				cQuery += "R_E_C_N_O_ RECNO"
				cQuery += " FROM "+ RetSqlName("SCM") + " SCM "
				cQuery += " WHERE CM_FILIAL = '" + xFilial('SCM') + "'"
				cQuery += " AND CM_FORNECE = '"+mv_par01+"'"
				cQuery += " AND CM_LOJA = '"+mv_par02+"'"
				cQuery += " AND CM_EMISSAO BETWEEN '"+DTOS(mv_par03)+"' AND '"+DTOS(mv_par04)+"'"
				cQuery += " AND CM_NFISCAL ='"+Space(Len(SCM->CM_NFISCAL))+"'"
				If nClassifica == 2
					cQuery += "	 AND CM_QTDACLA > 0"
				EndIf
			EndIf
			cQuery += " AND D_E_L_E_T_ <> '*' "
			cQuery += " ORDER BY "+ SqlOrder(SCM->(IndexKey()))
			
			Aadd(aStruSCM,{"RECNO","N",10,0})
			
			cQuery := ChangeQuery(cQuery)
			
			MsAguarde({|| dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery),'SCMTRB', .F., .T.)},"Seleccionado registros")
			
			For nj := 1 to Len(aStruSCM)
				If aStruSCM[nj,2] != 'C' .and. aStruSCM[nj,1] $ cAux
					TCSetField('SCMTRB', aStruSCM[nj,1], aStruSCM[nj,2],aStruSCM[nj,3],aStruSCM[nj,4])
				Endif
			Next
			
			Processa( {|lEnd| M100CriaTmp(@cNomeArq, aStruSCM, cAliasSCM, "SCMTRB")},,OemToAnsi("Organizando registros...") )
			
			IndRegua(cAliasSCM,cNomeArq,_cIdxKey,,,"Organizando registros...")
			
			aCampos:={ {"CM_OK"		," " ,""},;
				{"CM_REMITO"	," " ,"Remito"},;
				{"CM_ITEM" 		," " ,"Item"},;
				{"CM_FORNECE"	," " ,"Fornece"},;
				{"CM_LOJA" 		," " ,"Loja"},;
				{"CM_PRODUTO"	," " ,"Produto"},;
				{"CM_UM"		," " ,"UM"},;
				{"CM_QUANT"		," " ,"Cantidad"},;
				{"CM_QTDACLA"	," " ,"Cant. Class"},;
			    {"CM_TES"		," " ,"TES"},;
			    {"CM_CF"	    ," " ,"Cod. Fiscal"},;						
				{"CM_SEGUM"     ," " ,"Seg. UM"},;
				{"CM_QTSEGUM"	," " ,"Cant. SegUM"},;
				{"CM_LOCAL"		," " ,"Deposito"},;
				{"CM_PEDIDO"	," " ,"Ord. Compra"}}
			If cPaisLoc == "CHI"
				If SCM->(FieldPos("CM_FEPP"))>0
					AADD(aCampos,{"CM_FEPP"	," " ,"FEPP"})
				EndIf
				If SCM->(FieldPos("CM_IE"))>0
					AADD(aCampos,{"CM_IE"	," " ,"IE"})
				EndIf
			EndIf
			
			cMarca := GetMark()
			nOpcMark := RDSelect(cAliasSCM,"CM_OK","CM_NFISCAL",aCampos,cTitle,cMsg,,cMarca,lInverte)
			dbSelectArea("SCM")
		EndIf
	#ELSE
		If cPaisLoc == "CHI"
			_cCondicao := 'CM_RUTPRO=="'+mv_par01+'".and. CM_FORNECE=="'+mv_par02+'".and. CM_LOJA=="'+mv_par03+'".and.'
			_cCondicao := _cCondicao + 'DTOS(CM_EMISSAO)>="'+DTOS(mv_par04)+'".and.DTOS(CM_EMISSAO)<="'+DTOS(mv_par05)+'"'
			_cCondicao := _cCondicao + '.and.Empty(CM_NFISCAL)'
		Else
			_cCondicao := 'CM_FORNECE=="'+mv_par01+'".and.CM_LOJA=="'+mv_par02+'".and.CM_FILIAL=="'+xFIlial("SCM")
			_cCondicao := _cCondicao + '".And.DTOS(CM_EMISSAO)>="'+DTOS(mv_par03)+'".and.DTOS(CM_EMISSAO)<="'+DTOS(mv_par04)+'"'
			If nClassifica == 2
				_cCondicao := _cCondicao + '.And.CM_QTDACLA > 0 '
			EndIf
		EndIf
		
		cAliasSCM := "SCM"
		
		IndRegua("SCM",_cArqIdx,_cIdxKey,,_cCondicao,cTextoP)
		
		nIndex	:=	Retindex("SCM")
		dbSetIndex(_cArqIdx+OrdBagExt())
		dbSetOrder(nIndex+1)
		dbGoTop()
		
		lInverte := .F.
		If EOF().AND.BOF()
			Help(" ",1,"RECNO")
			lRet	:=	.F.
		Else
			cMarca := GetMark()
			nOpcMark := RDSelect(cAliasSCM,"CM_OK","CM_NFISCAL",aCampos,cTitle,cMsg,,cMarca,lInverte)
		EndIf	
	#ENDIF
	
	nDescri  := 0
	nItem    := 0
	nUm      := 0
	nSegum   := 0
	nCod     := 0
	nLocal   := 0
	nQuant   := 0
	nRemito  := 0
	nItemRem := 0
	nTes     := 0
	nCF      := 0
	nLOTEFOR := 0
	nLOTECTL := 0
	nNUMLOTE := 0
	nDTVALID := 0
	nIPI     := 0
	nQtSegUm := 0
	nVunit   := 0
	nTotal   := 0
	nConta   := 0
	nFEPP    := 0
	nIE      := 0
	nDesc    := 0
	
	//+--------------------------------------------------------------+
	//¦ Recuperar as perguntas do Padrao, depois do filtro...        ¦
	//+--------------------------------------------------------------+
	mv_par01 := _xPerg01
	mv_par02 := _xPerg02
	mv_par03 := _xPerg03
	mv_par04 := _xPerg04
	mv_par05 := _xPerg05
	
	SX3->(DbSetOrder(2))
	SX3->(DbSeek("CM_NFISCAL"))
	nBrancos    :=  SX3->X3_TAMANHO
	SX3->(DbSeek("CM_SERIE"))
	nBrancos    :=  SX3->X3_TAMANHO + nBrancos
	aRecno := {}
	
	If nOpcMark == 1
		dbSelectArea(cAliasSCM)
		dbGoTOp()
		//+--------------------------------------------------------------+
		//¦ Bruno, melhora performance passando so pelos remitos		 ¦
		//¦ ja filtrados pelo IndRegua()								 ¦
		//+--------------------------------------------------------------+		
		While !Eof()
			If IsMark("CM_OK",cMarca,lInverte)
				If cPaisLoc=="CHI"
					AAdd(aRecno,{Recno(),CM_PRODUTO,CM_QUANT})//Bruno
				Else
					If nClassifica == 2
						AAdd(aRecno,{Recno(),CM_PRODUTO,CM_QTDACLA})//Bruno
					Else
						AAdd(aRecno,{Recno(),CM_PRODUTO,CM_QUANT})//Bruno
					EndIf
				EndIf	
				If cAliasSCM == "SCM"
					AAdd(aRecnoSCM,Recno())
				Else
					AAdd(aRecnoSCM,RECNO)
				EndIf	
			EndIf
			dbSkip()
		End
		
		dbSelectArea( cAliasSCM )
		If Len(aRecno) > 0
			dbGoto( aRecno[1][1] )
			cTipo    := "N"
			cNFiscal := CriaVar("F1_DOC")
			cSerie   := CriaVar("F1_SERIE")
			dDEmissao:= dDataBase
			cA100For := (cAliasSCM)->CM_FORNECE
			cLoja    := (cAliasSCM)->CM_LOJA
			dDigit   := dDataBase
			cFormul  := "N"
			cEspecie := PAD("NF",5)				
			If cPaisLoc=="CHI"
				cRutpro  := ( cAliasSCM )->CM_RUTPRO
			Endif
		EndIf
	Else
		Retindex("SCM")
		If cAliasSCM <> "SCM"
			dbSelectArea( cAliasSCM )
			dbCloseArea()
			Ferase(cNomeArq+GetDBExtension())
			Ferase(cNomeArq+OrdBagExt())
		Endif
		Return( .F. )
	EndIf
	
	nCnt   := 0
	If Len(aRecno) > 0
		aRegs := {}
		aRegs := aClone(aRecno)
		dbSelectArea("SX2")
		dbSeek("SD1")
		dbSelectArea("SX3")
		DbSetOrder(1)
		dbSeek("SD1")
		
		nUsado  := 0
		While !Eof() .And. (x3_arquivo == "SD1")
			IF x3uso(x3_usado) .AND. cNivel >= x3_nivel.And.;
					Trim(X3_CAMPO)<>"D1_PEDIDO".And.Trim(X3_CAMPO)<>"D1_ITEMPC"
				nUsado := nUsado + 1
				AADD(aHeader,{ OEmtoAnsi(TRIM(X3Titulo())), x3_campo, x3_picture,;
					x3_tamanho, x3_decimal, x3_valid,;
					x3_usado, x3_tipo, x3_arquivo, x3_context } )
				IF ! Trim(x3_campo) $ "D1_QUANT/D1_QTSEGUM/D1_COD"
					AADD(aCpos,x3_campo)
				Endif
				Do Case
				Case  Alltrim(x3_campo) == "D1_DESCRI"
					nDescri  := nUsado
				Case  Alltrim(x3_campo) == "D1_ITEMREM"
					nItemRem := nUsado
				Case  Alltrim(x3_campo) == "D1_UM"
					nUm      := nUsado
				Case  Alltrim(x3_campo) == "D1_SEGUM"
					nSegum   := nUsado
				Case  Alltrim(x3_campo) == "D1_COD"
					nCod     := nUsado
				Case  Alltrim(x3_campo) == "D1_LOCAL"
					nLocal   := nUsado
				Case  Alltrim(x3_campo) == "D1_QUANT"
					nQuant   := nUsado
				Case  Alltrim(x3_campo) == "D1_REMITO"
					nRemito  := nUsado
				Case  Alltrim(x3_campo) == "D1_ITEM"
					nItem    := nUsado
				Case  Alltrim(x3_campo) == "D1_TES"
					nTes     := nUsado
				Case  Alltrim(x3_campo) == "D1_CF"
					nCf      := nUsado
				Case  Alltrim(x3_campo) == "D1_LOTEFOR"
					nLoteFor := nUsado
				Case  Alltrim(x3_campo) == "D1_LOTECTL"
					nLoteCtl := nUsado
				Case  Alltrim(x3_campo) == "D1_NUMLOTE"
					nNumLote := nUsado
				Case  Alltrim(x3_campo) == "D1_DTVALID"
					nDtValid := nUsado
				Case  Alltrim(x3_campo) == "D1_IPI"
					nIpi     := nUsado
				Case  Alltrim(x3_campo) == "D1_VUNIT"
					nVunit   := nUsado
				Case  Alltrim(x3_campo) == "D1_TOTAL"
					nTotal   := nUsado
				Case  Alltrim(x3_campo) == "D1_QTSEGUM"
					nQTSegum := nUsado
				Case  Alltrim(x3_campo) == "D1_CONTA"
					nConta := nUsado							
				Case  Alltrim(x3_campo) == "D1_FEPP"
					nFepp := nUsado														
				Case  Alltrim(x3_campo) == "D1_IE"
					nIE   := nUsado																					
				Case  Alltrim(x3_campo) == "D1_VALDESC"
					nDesc := nUsado
				Case  Alltrim(x3_campo) == "D1_OP"
				    nOP   := nUsado
				Endcase
				Aadd(aInit,{Alltrim(X3_CAMPO),nUsado})
			Endif
			dbSkip()
		End
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o tamanho do aCols                                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aCOLS    := Array(Len(aRegs),nUsado+1)
		For nK := 1 To Len(aInit)
			aCols[1][aInit[nK][2]] := CriaVar(aInit[nK][1])
		Next nK
		aCols[1][Len(aCols[1])] := .F.
		
		For nL := 2 To Len(aRegs)
			aCols[nL]   := aClone(aCols[1])
		Next nL
		
		SB1->(DBSetOrder(1)) // B1_FILIAL+B1_COD
		Processa({ || Cargar()},,OemToAnsi(STR0013))  //"Cargando la factura"
		
	Else
		lRet :=.F.
	EndIf
	
	If File(_cArqIdx)
		FErase(_cArqIdx+OrdBagExt())
	EndIf
	If cAliasSCM <> "SCM"
		dbSelectArea( cAliasSCM )
		dbCloseArea()
		Ferase(cNomeArq+GetDBExtension())
		Ferase(cNomeArq+OrdBagExt())
	Endif
	dbSelectArea("SCM")
EndIf
Return( lRet )


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Cargar     ³ Autor ³Bruno Sobieski    	 ³ Data ³ 11/09/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Carrega o aCols da Fatura de compras a partir dos dados do   ³±±
±±³          ³remito                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³M100CLAS                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function CARGAR  

Local cPedido
Local cItem
Local nA := 0

ProcRegua(Len(aRegs))

For nA := 1 To Len(aRegs)
	
	IncProc()
	
	dbSelectArea( cAliasSCM )
	dbGoto( aRegs[nA][1] )
	
	SB1->(DBSeek(xFilial("SB1")+(cAliasSCM)->CM_PRODUTO))
	
	dbSelectArea("SC7")
	dbSetOrder(1) // C7_FILIAL+C7_NUM+C7_ITEM
	dbSeek(xFilial("SC7")+(cAliasSCM)->CM_PEDIDO+(cAliasSCM)->CM_ITEMPED)
	
	dbSelectArea( cAliasSCM )
	If nDescri  >  0  ;  aCOLS[nA][nDescri ] := (cAliasSCM)->CM_DESCRI ;  Endif
	If nItemRem >  0  ;  aCOLS[nA][nItemRem] := (cAliasSCM)->CM_ITEM   ;  Endif
	If nUm      >  0  ;  aCOLS[nA][nUm     ] := (cAliasSCM)->CM_UM     ;  Endif
	If nSegum   >  0  ;  aCOLS[nA][nSegum  ] := (cAliasSCM)->CM_SEGUM  ;  Endif
	If nCod     >  0  ;  aCOLS[nA][nCod    ] := aRegs[nA][2]			 ;  Endif
	If nLocal   >  0  ;  aCOLS[nA][nLocal  ] := (cAliasSCM)->CM_LOCAL  ;  Endif
	If nQuant   >  0  ;  aCOLS[nA][nQuant  ] := aRegs[nA][3]   		 ;  Endif
	If nRemito  >  0  ;  aCOLS[nA][nRemito ] := (cAliasSCM)->CM_REMITO ;  Endif
	If nItem    >  0  ;  aCOLS[nA][nItem   ] := StrZero(nA,2)  		 ;  Endif
	If nTes     >  0  ;  aCOLS[nA][nTes    ] := (cAliasSCM)->CM_TES    ;  Endif
	If nCF      >  0  ;  aCOLS[nA][nCF     ] := (cAliasSCM)->CM_CF     ;  Endif
	If nLOTEFOR >  0  ;  aCOLS[nA][nLOTEFOR] := (cAliasSCM)->CM_LOTEFOR;  Endif
	If nLOTECTL >  0  ;  aCOLS[nA][nLOTECTL] := (cAliasSCM)->CM_LOTECTL;  Endif
	If nNUMLOTE >  0  ;  aCOLS[nA][nNUMLOTE] := (cAliasSCM)->CM_NUMLOTE;  Endif
	If nDTVALID >  0  ;  aCOLS[nA][nDTVALID] := (cAliasSCM)->CM_DTVALID;  Endif
	If nIPI     >  0  ;  aCOLS[nA][nIPI    ] := SB1->B1_IPI		     ;  Endif
	If nQtSegUm >  0  ;  aCOLS[nA][nQtSegUm] := (cAliasSCM)->CM_QTSEGUM;  Endif
	If nConta   >  0  ;  aCOLS[nA][nConta  ] := If(!Empty((cAliasSCM)->CM_CONTA),(cAliasSCM)->CM_CONTA,SB1->B1_CONTA);  Endif	
	If nOP      >  0  ;  aCOLS[nA][nOP     ] := (cAliasSCM)->CM_OP;  Endif
	If cPaisLoc == "CHI"
		If SCM->(FieldPos("CM_FEPP")) > 0
			If nFEPP    >  0  ;  aCOLS[nA][nFEPP   ] := (cAliasSCM)->CM_FEPP   ;  Endif	
		EndIf
		If SCM->(FieldPos("CM_IE")) > 0	
			If nIE      >  0  ;  aCOLS[nA][nIE     ] := (cAliasSCM)->CM_IE     ;  Endif	
		EndIf
	EndIf	
	If nVUnit   >  0
		If (cAliasSCM)->CM_VUNIT <> 0
			nPrecio := (cAliasSCM)->CM_VUNIT
		Else
			If ! Empty((cAliasSCM)->CM_PEDIDO)
				nPrecio := SC7->C7_PRECO
			Else
				nPrecio := SB1->B1_UPRC
			EndIf
		EndIf
		aCOLS[nA][nVunit] := nPrecio
	EndIf
	
	If nTotal > 0
		IF (cAliasSCM)->CM_VUNIT <> 0
			nPrecio := (cAliasSCM)->CM_VUNIT
		ELSE
			IF .NOT. EMPTY((cAliasSCM)->CM_PEDIDO)
				nPrecio := SC7->C7_PRECO
			ELSE
				nPrecio := SB1->B1_UPRC
			ENDIF
		ENDIF
		aCOLS[nA][nTotal] := (nPrecio * aRegs[nA][3])
	Endif
	
	If nDesc > 0
		cPedido := (cAliasSCM)->CM_PEDIDO  
		cItem   := (cAliasSCM)->CM_ITEM 
		dbSelectArea("SC7")
		dbSetOrder(1)
		If SC7->(dbSeek(xFilial("SC7")+cPedido+cItem,.F.))
			aCols[nA][nDesc] := SC7->C7_VLDESC
		EndIf
	EndIf
	
	If ExistBlock("M100CL001")
		ExecBlock("M100CL001",.F.,.F.)
	EndIf
Next nA
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³M100CriaTmp³ Autor ³Jose Lucas			 ³ Data ³ 11/09/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Cria temporario a partir da consulta corrente (TOP)          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³M100CLAS (TOPCONNECT)                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function M100CriaTmp(cArqTmp, aStruTmp, cAliasTmp, cAlias)
Local nI, nF, nPosOrig, nPosDest
Local nTotalRec := 0
Local oTmpTab

nTotalRec := SCM->(RecCount())

nF := (cAlias)->(Fcount())

oTmpTab:= FWTemporaryTable():New(cAliasTmp) 
oTmpTab:SetFields( aStruTmp ) 
//Creacion de la tabla
oTmpTab:Create()

(cAlias)->(DbGoTop())

ProcRegua( nTotalRec )

While ! (cAlias)->(Eof())
	
	IncProc()
	
	(cAliasTmp)->(DbAppend())
      For nI := 1 To Len(aStruTmp)
      	nPosDest := (cAliasTmp)->(FieldPos(aStruTmp[nI,1]))
      	nPosOrig := (cAlias)->(FieldPos(aStruTmp[nI,1]))
      	If nPosDest > 0 .And. nPosOrig > 0
			(cAliasTmp)->(FieldPut(nPosDest,(cAlias)->(FieldGet(nPosOrig)))) 
		EndIf
	Next nI
	(cAlias)->(DbSkip())
End
(cAlias)->(dbCloseArea())
DbSelectArea(cAliasTmp)
Return( NIL )

