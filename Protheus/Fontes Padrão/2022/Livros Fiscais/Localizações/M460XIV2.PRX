#include "protheus.CH"        // incluido pelo assistente de conversao do AP5 IDE em 09/09/99
#DEFINE _DEBUG   .F.   // Flag para Debuggear el codigo
#DEFINE _NOMIMPOST 01
#DEFINE _ALIQUOTA  02
#DEFINE _BASECALC  03
#DEFINE _IMPUESTO  04
#DEFINE _TES_CFO   10
#DEFINE _RATEOFRET 11
#DEFINE _IMPFLETE  12
#DEFINE _RATEODESP 13
#DEFINE _IMPGASTOS 14
#DEFINE _IMPINCID  15
#DEFINE _VLRTOTAL  3
#DEFINE _FLETE     4
#DEFINE _GASTOS    5
#DEFINE _ALIQDESG  19

Function M460xiv2(cCalculo,nItem,aInfo,cXFisRap)        // incluido pelo assistente de conversao do AP5 IDE em 09/09/99

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de variaveis utilizadas no programa atraves da funcao    ³
//³ SetPrvt, que criara somente as variaveis definidas pelo usuario,    ³
//³ identificando as variaveis publicas do sistema utilizadas no codigo ³
//³ Incluido pelo assistente de conversao do AP5 IDE                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Local lXFis,xRet,nBase
Local nI      := 0
Local aImpRef := {}
Local aImpVal := {}
Local cImpIncid := ""

SetPrvt("CALIASROT,CORDEMROT,AITEMINFO,AIMPOSTO,_CPROCNAME,_CZONCLSIGA")
SetPrvt("_LAGENTE,AFISCAL,_LCALCULAR,_LESLEGAL,_NALICUOTA,_NVALORMIN,_NALICDESG")
SetPrvt("_NREDUCIR,")

Default cXFisRap := ""

/*/
_____________________________________________________________________________
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦Funcion   ¦M460xIV2  ¦ Autor ¦ Jose Luis Otermin      ¦Fecha ¦ 22.07.99¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Descrip.  ¦ Programa que Calcula IVA a Responsables No Inscriptos      ¦¦¦
¦¦+----------+------------------------------------------------------------¦¦¦
¦¦¦Uso       ¦ MATA460, llamado por un punto de entrada                   ¦¦¦
¦¦+-----------------------------------------------------------------------¦¦¦
¦¦¦         ACTUALIZACIONES EFECTUADAS DESDE LA CODIFICACION INICIAL      ¦¦¦
¦¦+-----------------------------------------------------------------------¦¦¦
¦¦¦Programador ¦ Fecha  ¦ BOPS ¦  Motivo de la Alteracion                 ¦¦¦
¦¦+------------+--------+------+------------------------------------------¦¦¦
¦¦¦L Samaniego ¦11/01/18¦DMICNS¦ Se agrega funcionalidad para sumar los   ¦¦¦
¦¦¦            ¦        ¦ -955 ¦ impuestos cuando existe registro en la   ¦¦¦
¦¦¦            ¦        ¦      ¦ TES (FC_INCIMP)                          ¦¦¦
¦¦¦            ¦  /  /  ¦      ¦                                          ¦¦¦
¦¦+-----------------------------------------------------------------------+¦¦
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
//-----------------------------------------------------
// Nota:
// Debe registrarse al Cliente en la Tabla SFH en caso
// que sea Agente de Percepcion o este Exento en una ZF.
// Se utiliza el parametro MV_AGENTE
// Significado de las posiciones de MV_AGENTE
// SUBSTR(MV_AGENTE,1,1) = Agente Retencion Ganancias? (S/N)
// SUBSTR(MV_AGENTE,2,1) = Agente Retencion IVA?       (S/N)
// SUBSTR(MV_AGENTE,3,1) = Agente Retencion IB?        (S/N)
// SUBSTR(MV_AGENTE,4,1) = Agente Percepcion IVA?      (S/N)
// SUBSTR(MV_AGENTE,5,1) = Agente Percepcion IB?       (S/N)
//-----------------------------------------------------
// Nota:
// Debe utilizarse el parametro MV_EXENTO 
// Significado de las posiciones de MV_EXENTO
// SUBSTR(MV_EXENTO,1,1) = Exento Retencion Ganancias? (S/N)
// SUBSTR(MV_EXENTO,2,1) = Exento Retencion IVA?       (S/N)
// SUBSTR(MV_EXENTO,3,1) = Exento Retencion IB?        (S/N)
// SUBSTR(MV_EXENTO,4,1) = Exento Percepcion IVA?      (S/N)
// SUBSTR(MV_EXENTO,5,1) = Exento Percepcion IB?       (S/N)
//-----------------------------------------------------


/*/

// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _DEBUG   .F.   // Flag para Debuggear el codigo



// Indices de aImposto
// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _NOMIMPOST 01
// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _ALIQUOTA  02
// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _BASECALC  03
// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _IMPUESTO  04
// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _TES_CFO   10
// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _RATEOFRET 11
// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _IMPFLETE  12
// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _RATEODESP 13
// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _IMPGASTOS 14

// Subindices de aItemINFO
// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _VLRTOTAL  3
// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _FLETE     4
// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 09/09/99 ==> #DEFINE _GASTOS    5

lXfis:=(MaFisFound()  .And. ProcName(1)<>"EXECBLOCK")
cAliasRot  := Alias()
cOrdemRot  := IndexOrd()

If !lXFis
   aItemINFO  := ParamIxb[1]
   aImposto   := ParamIxb[2] 
   xRet:=aImposto
Else
    xRet:=0
Endif   

_cProcName := "M460xIV2"
_cZonClSIGA:= SM0->M0_ESTCOB // Zona Fiscal del Cliente SIGA

_lAgente   := .T.   // En este impuesto el Cliente SIGA siempre cobra IVA.

aFiscal    := ExecBlock("IMPGENER",.F.,.F.,{If(lXFis,{cCalculo,nItem,aInfo},ParamIxb), _cProcName, _lAgente,_cZonClSIGA,lXFis},.T.)

_lCalcular :=  aFiscal[1]
_lEsLegal  :=  aFiscal[2]
_nAlicuota :=  aFiscal[3]
_nValorMin :=  aFiscal[4]
_nReducir  :=  aFiscal[5]
cIncIB     :=  aFiscal[6]
_nAlicDesg :=  aFiscal[11]

IF _DEBUG
   msgstop(_lCalcular, "Calcular - "+_cProcName)
   msgstop(_lEslegal , "Es Legal - "+_cProcName)
   msgstop(_nAlicuota, "Alicuota - "+_cProcName)
   msgstop(_nValorMin, "ValorMin - "+_cProcName)
   msgstop(_nReducir , "Reducir  - "+_cProcName)
ENDIF

IF  _lEsLegal // _lCalcular  .AND.

   If !lXFis
      aImposto[_ALIQUOTA]  := _nAlicuota // Alicuota de Zona Fiscal del Proveedor
      aImposto[_BASECALC]  := aItemINFO[_VLRTOTAL]+aItemINFO[_FLETE] // +aItemINFO[_GASTOS] // Base de Cálculo
      aImposto[_ALIQDESG]  := _nAlicDesg

	  //Tira os descontos se for pelo liquido .Bruno
      If Subs(aImposto[5],4,1) == "S"  .And. Len(aImposto) >= 18 .And. ValType(aImposto[18])=="N"
		 aImposto[_BASECALC]	-=	aImposto[18]
	  Endif

      IF _DEBUG
         msgstop(aImposto[_ALIQUOTA], "aImposto[_ALIQUOTA] - "+_cProcName)
         msgstop(aImposto[_BASECALC], "aImposto[_BASECALC] - "+_cProcName)
      ENDIF
      
      //+---------------------------------------------------------------+
      //¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
      //+---------------------------------------------------------Lucas-+
      aImposto[_IMPINCID]:=cIncIB
      If !Empty(aImposto[_IMPINCID])
      	aImposto[_BASECALC]	+=	ImpGenInci(aClone(aImposto),aClone(aItemInfo))
      Endif
		
      //+---------------------------------------------------------------+
      //¦ Efetua o Cálculo do Imposto                                   ¦
      //+---------------------------------------------------------------+
      If _nAlicDesg > 0
      	aImposto[_IMPUESTO]  := round(aImposto[_BASECALC] * ( aImposto[_ALIQUOTA]/100)  ,2) * _nReducir
      	aImposto[_IMPUESTO]  := aImposto[_IMPUESTO] - ((aImposto[_IMPUESTO] * aImposto[_ALIQDESG]) / 100)
      Else
      	aImposto[_IMPUESTO]  := round(aImposto[_BASECALC] * ( aImposto[_ALIQUOTA]/100)  ,2) * _nReducir
      EndIf
      xRet:=aImposto
      
   Else
		If !Empty(cXFisRap)
			xRet := {0,0,0}
			xRet[2] :=_nAlicuota
			nBase:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
			 
			nOrdSFC:=(SFC->(IndexOrd()))
			nRegSFC:=(SFC->(Recno()))
			SFC->(DbSetOrder(2))
			If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[1])))
				If GetNewPar('MV_DESCSAI','1')=='2' .And. SFC->FC_LIQUIDO=="S"
					nBase -= MaFisRet(nItem,"IT_DESCONTO")
				Endif
				If GetNewPar('MV_DESCSAI','1')=='1' .And. SFC->FC_LIQUIDO=="N"
					nBase += MaFisRet(nItem,"IT_DESCONTO")
				EndIf
			Endif
			
			If !Empty(cIncIB)
				//+---------------------------------------------------------------+
				//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
				//+---------------------------------------------------------------+
				If !Empty(cIncIB)
					aImpRef:=MaFisRet(nItem,"IT_DESCIV")
					aImpVal:=MaFisRet(nItem,"IT_VALIMP")
					For nI:=1 to Len(aImpRef)
						If !Empty(aImpRef[nI])
							IF Trim(aImpRef[nI][1])$cIncIB
								nBase+=aImpVal[nI]
							Endif
						Endif
					Next
				Endif
			Else
				nOrdSFC:=(SFC->(IndexOrd()))
				nRegSFC:=(SFC->(Recno()))
				SFC->(DbSetOrder(2))
				If SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[1]))
					cImpIncid:=Alltrim(SFC->FC_INCIMP)
				EndIf
				//+---------------------------------------------------------------+
				//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
				//+---------------------------------------------------------------+
				If !Empty(cImpIncid)
					aImpRef:=MaFisRet(nItem,"IT_DESCIV")
					aImpVal:=MaFisRet(nItem,"IT_VALIMP")
					For nI:=1 to Len(aImpRef)
						If !Empty(aImpRef[nI])
							IF Trim(aImpRef[nI][1])$ cImpIncid
								nBase+=aImpVal[nI]
							Endif
						Endif
					Next
				Endif
			EndIf
			
            xRet[1] := nBase
            If _nAlicDesg > 0
            	xRet[3] := (nBase * (_nAlicuota / 100))
            	xRet[3] := xRet[3] - ((xRet[3] *_nAlicDesg) / 100)
            Else
				xRet[3] := (nBase * (_nAlicuota / 100))
			EndIf
		Else
			nBase:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
			If GetNewPar('MV_DESCSAI','1')=='1'
				nOrdSFC:=(SFC->(IndexOrd()))
				nRegSFC:=(SFC->(Recno()))
				SFC->(DbSetOrder(2))
				If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[1])))
					If SFC->FC_LIQUIDO=="N"
						nBase	+= MaFisRet(nItem,"IT_DESCONTO")
					Endif
				Endif
			Endif
			
			If !Empty(cIncIB)
				//+---------------------------------------------------------------+
				//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
				//+---------------------------------------------------------------+
				If !Empty(cIncIB)
					aImpRef:=MaFisRet(nItem,"IT_DESCIV")
					aImpVal:=MaFisRet(nItem,"IT_VALIMP")
					For nI:=1 to Len(aImpRef)
						If !Empty(aImpRef[nI])
							IF Trim(aImpRef[nI][1])$cIncIB
								nBase+=aImpVal[nI]
							Endif
						Endif
					Next
				Endif
			Else
				nOrdSFC:=(SFC->(IndexOrd()))
				nRegSFC:=(SFC->(Recno()))
				SFC->(DbSetOrder(2))
				If SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[1]))
					cImpIncid:=Alltrim(SFC->FC_INCIMP)
				EndIf
				//+---------------------------------------------------------------+
				//¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
				//+---------------------------------------------------------------+
				If !Empty(cImpIncid)
					aImpRef:=MaFisRet(nItem,"IT_DESCIV")
					aImpVal:=MaFisRet(nItem,"IT_VALIMP")
					For nI:=1 to Len(aImpRef)
						If !Empty(aImpRef[nI])
							IF Trim(aImpRef[nI][1])$ cImpIncid
								nBase+=aImpVal[nI]
							Endif
						Endif
					Next
				Endif
			EndIf
			
	       Do Case
	          Case cCalculo=="A"
	               xRet:=_nAlicuota      
	          Case cCalculo=="B"
					If GetNewPar('MV_DESCSAI','1')=='2'
		          		nOrdSFC:=(SFC->(IndexOrd()))
						nRegSFC:=(SFC->(Recno()))
						SFC->(DbSetOrder(2))
						If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[1])))
							If SFC->FC_LIQUIDO=="S"
								nBase -= MaFisRet(nItem,"IT_DESCONTO")
							Endif
						Endif
					EndIf
					xRet:=nBase      
	          Case cCalculo=="V"
					If GetNewPar('MV_DESCSAI','1')=='2'
		          		nOrdSFC:=(SFC->(IndexOrd()))
						nRegSFC:=(SFC->(Recno()))
						SFC->(DbSetOrder(2))
						If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[1])))
							If SFC->FC_LIQUIDO=="S"
								nBase -= MaFisRet(nItem,"IT_DESCONTO")
							Endif
						Endif
					EndIf
					If _nAlicDesg > 0
						xRet:=(nBase * (_nAlicuota / 100))
						xRet := xRet - ((xRet *_nAlicDesg) / 100)
			        Else  
	          			xRet:=(nBase * (_nAlicuota / 100))
	          		EndIf
	       Endcase
	  Endif
   Endif    
   
ENDIF

dbSelectArea( cAliasRot )
dbSetOrder( cOrdemRot )
// Substituido pelo assistente de conversao do AP5 IDE em 09/09/99 ==> __Return( aImposto )
Return( xRet )        // incluido pelo assistente de conversao do AP5 IDE em 09/09/99
