#include "SIGAWIN.CH"        // incluido pelo assistente de conversao do AP5 IDE em 09/09/99
#DEFINE _NOMEIMP   01
#DEFINE _ALIQUOTA  02
#DEFINE _BASECALC  03
#DEFINE _IMPUESTO  04
#DEFINE _VLRTOTAL  3
#DEFINE _FLETE     4
#DEFINE _GASTOS    5
//Posicoes  do terceiro array recebido nos impostos a traves da matxfis...
#DEFINE X_IMPOSTO    01 //Nome do imposto
#DEFINE X_NUMIMP     02 //Sufixo do imposto

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³M460ica   ³ Autor ³ Hermes Ferreira       ³ Data ³07/12/2009³±±
±±³          ³          ³       ³ Denis Martins		    ³      ³22/07/1999³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Calculo do imposto de ICA 			    			      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ M460ica                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Rubens Pante¦28/01/02¦ xxxx ¦Retirado AllTrim() ao pegar CFO, pois o   ³±±
±±³          ³          ¦ xxxx ¦CFO e chave de pesquisa.                  ³±±
±±³Alterações³ Foi alterado o criterio da busca da aliquota de calulo do  ³±±
±±³			 ³ ICA, quando a empresa emitir uma nota de saida e o campo   ³±±
±±³			 ³ F4_CIIU estiver vazio, o sismeta usa a base de calculo da  ³±±
±±³			 ³ SFB, caso esteja preenchido, busca a aliquota na SFF, de   ³±±
±±³			 ³ acordo com o agrupamento indicado no campo F4_CIIU.		  ³±±
±±³			 ³ A base de calculo não soma outros gastos como Frete, seguro³±±
±±³			 ³ e despesas.												  ³±±
±±³R.Berti   ³20/10/13³THYBRQ³P/ ICA, deve haver SA2->A2_CODICA ou		  ³±±
±±³		     ³        ³      ³SA1->A1_ATIVIDA preenchido. Obtem aliq. SFF:³±±
±±³		     ³        ³      ³Munic.+CIIU. Aliq.SFB tem como padrao 0%	  ³±±
±±³Jonathan G³10/06/16³TVK844³P/ICA, se toma el valor del campo F2_TPACTIV³±±
±±³		     ³        ³      ³o C5_TPACTIV para respetar la funcionalidad ³±±
±±³		     ³        ³      ³de Tipo Activ Economica de colombia.        ³±±
±±³Jonathan G³07/10/16³TVK844³Adecuacion para Colombia, se hace uso de la ³±±
±±³		     ³        ³      ³MAFISRET(,'NF_TPACTIV') para tomar el valor ³±±
±±³		     ³        ³      ³del codigo de actividad ICA                 ³±±
±±³Veronica F³06/11/18³DMINA-³Modificación en la funcion M460ICA          ³±±
±±³		     ³        ³4850  ³Base del impuesto no resta descuento en el  ³±±
±±³		     ³        ³      ³ pedido de venta y factura                  ³±±
±±³Veronica F³19/06/18³DMINA-³Se realizo la modificación para que tomara  ³±±
±±³		     ³        ³  6843³la actividad economica de la NCP            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Calculo de ICA                                             ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function M460ica(cCalculo,nItem,aInfo)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Declaracao de variaveis utilizadas no programa atraves da funcao    ³
	//³ SetPrvt, que criara somente as variaveis definidas pelo usuario,    ³
	//³ identificando as variaveis publicas do sistema utilizadas no codigo ³
	//³ Incluido pelo assistente de conversao do AP5 IDE                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Local nDesconto	:=	0,lXFis,xRet,cImp
	Local nAliqSFB	:= 0
	Local nImporte	:= 0
	Local cCodMun   := ""
	Local cCatCliFor:= ""
	Local cCodIca	:= ""
	Local cPessoa	:= ""
	Local lCodMun   := .F.
	Local nMoedSFF  := 1
	Local nTaxaMoed	:= 0
	Local nMoedaOri := 1
	Local cFunName	:= FunName()
	Local nVlItem	:= 0
	Local nVlImpor	:= 0

	SetPrvt("CALIASROT,CORDEMROT,AITEMINFO,xRet,_CPROCNAME,_CZONCLSIGA")
	SetPrvt("_LAGENTE,_LEXENTO,AFISCAL,_LCALCULAR,_LESLEGAL,_NALICUOTA,NALIQ")
	SetPrvt("_NVALORMIN,_NREDUCIR,CTIPOEMPR,CTIPOCLI,CTIPOFORN,CZONFIS,CCFO,LRET")
	SetPrvt("CRETICA,CMVAGENTE,NBASE,LRETCF")

	lXfis:=(MaFisFound() .And. ProcName(1)<>"EXECBLOCK")
	lRet := .T.
	lRetCF := .T.

	cAliasRot  := Alias()
	cOrdemRot  := IndexOrd()

	If !LXFis
		aItemINFO  := ParamIxb[1]
		xRet   := ParamIxb[2]
		cImp:=xRet[1]
		// Busca o CFO do Tes Correspondente - SF4
		dbSelectArea("SF4")
		cCFO := SF4->F4_CF
		cTes := SF4->F4_CODIGO
		If SC5->(FieldPos('C5_CODMUN')) > 0
			cCodMun   := SC5->C5_CODMUN
		ElseIf FieldPos('F2_CODMUN') > 0
			cCodMun   := SF2->F2_CODMUN
		EndIf
	Else
		xRet:=0
		cCFO:=MaFisRet(nItem,"IT_CF")
		cTes:= MaFisRet(nItem,"IT_TES")
		cImp:=aInfo[X_IMPOSTO]
		cCodMun   := MAFISRET(,'NF_CODMUN')
	Endif

	If cModulo == 'FAT'
		cTipoCliFor:= SA1->A1_TPESSOA
		cPessoa	   := SA1->A1_PESSOA
		cRetICA    := SA1->A1_RETICA
		cZonfis    := SM0->M0_ESTENT

		If GetRpoRelease() > "12.1.007"
			If cFunName $ "|MATA467N|MATA465N|MATA410|"
				cCodICA := MAFISRET(,'NF_TPACTIV')
			ElseIF cFunName $ "|MATA468N|"
				If SC5->(FieldPos('C5_TPACTIV')) > 0 .and. !empty(SC5->C5_TPACTIV)
					cCodICA   := SC5->C5_TPACTIV
				ElseIf SF2->(FieldPos('F2_TPACTIV')) > 0 .and. !empty(SF2->F2_TPACTIV)
					cCodICA   := SF2->F2_TPACTIV
				EndIf
			Else
				cCodICA := SA1->A1_ATIVIDA			
			EndIf
		Else	
			If Empty(cCodICA)
				If cFunName $ "|MATA467N|MATA465N|"
					cCodICA := M->F2_TPACTIV
				ElseIF cFunName $ "|MATA468N|"
					If SC5->(FieldPos('C5_TPACTIV')) > 0 .and. !empty(SC5->C5_TPACTIV)
						cCodICA   := SC5->C5_TPACTIV
					EndIf	
				ElseIF cFunName $ "|MATA410|"
					If SC5->(FieldPos('C5_TPACTIV')) > 0 .and. !empty(M->C5_TPACTIV)
						cCodICA   := M->C5_TPACTIV	
					EndIf		
				ElseIf SF2->(FieldPos('F2_TPACTIV')) > 0 .and. !empty(SF2->F2_TPACTIV)
					cCodICA   := SF2->F2_TPACTIV									
				EndIf	
			Else
				cCodICA := SA1->A1_ATIVIDA
			EndIf			
		EndIf
		
		//Tratamento para Calcular ou Não ICA
		Iif((SA1->A1_RETICA == "S"), lRet := .T., lRet := .F.)
	Else
		cTipoCliFor:= SA2->A2_TPESSOA
		cPessoa	   := If(SA2->(FieldPos("A2_PESSOA")) > 0,SA2->A2_PESSOA," ")
		cZonFis    := SA2->A2_EST
		cCatCliFor := SA2->A2_TIPO
		If FunName() $ "MATA466N"
			cCodICA := M->F2_TPACTIV
		Else
			cCodICA := SA2->A2_CODICA
		Endif
	Endif

	dbSelectArea("SFB")
	dbSetOrder(1)
	If dbSeek(xFilial("SFB")+cImp)
		If If(!lXFis,.T.,cCalculo$"AB")
			nAliqSFB   := SFB->FB_ALIQ // Aliquota padrão
		EndIf
	EndIf

	If lRet
		If Empty(cCodIca)
			nAliq   := nAliqSFB  // Aliquota padrão
			lRet    := .T.
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄFF
			//³Método novo de busca pelo índice "I" da SFF: ³
			//³FF_FILIAL+FF_IMPOSTO+FF_CODMUN+FF_CFO_V       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄFF
			If ExistInd()
				dbSelectArea("SFF")
				dbSetOrder(18)
				If dbseek(xFilial("SFF")+cImp+cCodMun)  // +cCFO
					While !Eof()
						If ( ALLTRIM(SFF->FF_COD_TAB) == ALLTRIM(cCodICA) ) .And.;
							SFF->(FF_IMPOSTO+FF_CODMUN) == cImp+cCodMun //+FF_CFO_V  +cCFO
							If FF_FLAG != "1"
								RecLock("SFF",.F.)
								Replace FF_FLAG With "1"
							Endif
							nAliq   := SFF->FF_ALIQ  // Alicuota de Zona Fiscal
							nImporte:= SFF->FF_IMPORTE
							nMoedSFF := SFF->FF_MOEDA	
							lCodMun := .T.
							lRet 	:= .T.
							Exit
						Else
							lRet := .F.
						EndIf
						dbSkip()
					EndDo
				Endif
			Endif
			If !lCodMun
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Metodo antigo de busca , pela zona fiscal (departamento) foi DESATIVADA 						³
				//³caso não tenha aliq. por cod.município, obtera' da SFB, que na Colombia devera' estar ZERADA.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nAliq   := nAliqSFB // Aliquota padrão
				lRet    := .T.
			EndIf
			If !lRet
				nAliq   := nAliqSFB // Aliquota padrão
				lRet    := .T.
			EndIf
		Endif
		If lRet
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Efetua o calculo de ICA, taxa sera' calculada por mil (1000)  				 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !lXFis
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Calcula o imposto somente se o valor da base for maior ou igual a base minima    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !( cFunName $ "MATA468N" .And. SFC->FC_CALCULO $ "T" ) .And. nImporte > 0 .And. (aItemINFO[3]) < nImporte
					nAliq := 0
				EndIf
				//Tira os descontos se for pelo liquido .Bruno
				If Subs(xRet[5],4,1) == "S"  .And. Len(xRet) >= 18 .And. ValType(xRet[18])=="N"
					nDesconto	:=	xRet[18]
				Else
					nDesconto	:=	0
				Endif

				xRet[02]  := nAliq // Alicuota de Zona Fiscal
				xRet[03]  := (aItemINFO[3] - nDesconto) //Valor ítem. 
				xRet[04]  := round(xRet[03] * ( xRet[02]/1000) ,2)

				nMoedaOri:= IIf(Type("lPedidos")	<> "U" .And. lPedidos , SC5->C5_MOEDA ,Max(SF2->F2_MOEDA,1))
				nVlItem := xMoeda(xRet[03],nMoedaOri ,1)
				nVlImpor:= xMoeda(nImporte,nMoedSFF,1)
				
				//Valor impuesto si valor supera límite, si no, es 0.
				If ( cFunName $ "MATA468N" .And. SFC->FC_CALCULO $ "T" ) .Or. ( nVlItem >= nVlImpor) 
					xRet[04]  := xRet[04]
					If Len(xRet) > 20
						xRet[21] := nVlImpor
					EndIf
				Else
					xRet[04]  := 0
				EndIf
			Else
				Do Case
					Case cCalculo=="B"
						xRet:= 0
						If GetNewPar('MV_DESCSAI','1')=='1'
							xRet	+= MaFisRet(nItem,"IT_DESCONTO")
						Endif
						//Tira os descontos se for pelo liquido
						SFC->(DbSetOrder(2))
						If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
							If SFC->FC_LIQUIDO=="S"
								xRet-=MaFisRet(nItem,"IT_DESCONTO")
							Endif
						Endif
						xRet+= MaFisRet(nItem,"IT_VALMERC")
					Case cCalculo=="A"
						xRet:=nAliq
					Case cCalculo=="V"
						If Type("M->F1_MOEDA")<>"U" 			   	
							nMoeda := M->F1_MOEDA
							nTaxaMoed := M->F1_TXMOEDA
						ElseIf Type("M->C7_MOEDA")<>"U"
							nMoeda := M->C7_MOEDA
						    nTaxaMoed := M->C7_TXMOEDA				
						ElseIf Type("M->F2_MOEDA")<>"U"
						   	nMoeda := M->F2_MOEDA
						    nTaxaMoed := M->F2_TXMOEDA				
						ElseIf Type("M->C5_MOEDA")<>"U" 
							nMoeda := M->C5_MOEDA
						    nTaxaMoed := M->C5_TXMOEDA	   
						Else
							nMoeda 		:= MAFISRET(,'NF_MOEDA')     
							nTaxaMoed 	:= MaFisRet(,'NF_TXMOEDA')			
						EndIf	        

						If nTaxaMoed==0
							nTaxaMoed:= RecMoeda(nMoeda)
						EndIf
						nVal:=0
						SFC->(DbSetOrder(2))
						If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
							If SFC->FC_CALCULO=="T"
								nBase:=MaFisRet(,"NF_BASEIV"+aInfo[X_NUMIMP])
								nVal:=MaRetBasT(aInfo[2],nItem,MaFisRet(nItem,'IT_ALIQIV'+aInfo[2]),)
							Else
								nBase:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
								nVal	:=	MaFisRet(nItem,'IT_BASEIV'+aInfo[2])
							EndIf
						Endif

						nAliq:=MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP])

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Calcula o imposto somente se o valor da base for maior ou igual a base minima    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If xMoeda(nVal,nMoeda,1,Nil,Nil,nTaxaMoed) > xMoeda(nImporte,nMoedSFF,1)
							xRet:=nVal * ( nAliq/1000)
						Else
							xRet:= 0
						EndIf
				EndCase
			Endif
		EndIf
	EndIf
	dbSelectArea( cAliasRot )
	dbSetOrder( cOrdemRot )
Return( xRet )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ExistInd  ºAutor  ³Camila Januário     º Data ³  09/11/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³  Vefifica existência da ordem do índice                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static function ExistInd()
Local lRet := .F.

SIX->(DbSetOrder(1))
If SIX->(DbSeek("SFF"+"H")) .And. SIX->(DbSeek("SFF"+"I"))
	lRet := .T.
Endif

Return lRet
