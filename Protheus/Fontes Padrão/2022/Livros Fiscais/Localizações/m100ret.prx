#include "rwmake.ch"
#include "SIGAWIN.CH"
#DEFINE _NOMEIMPOS 01
#DEFINE _ALIQUOTA  02
#DEFINE _BASECALC  03
#DEFINE _IMPUESTO  04
#DEFINE _RATEOFRET 11
#DEFINE _IVAFLETE  12
#DEFINE _RATEODESP 13
#DEFINE _IVAGASTOS 14
#DEFINE _VLRTOTAL  3
#DEFINE _FLETE     4
#DEFINE _GASTOS    5

//Posicoes  do terceiro array recebido nos impostos a traves da matxfis...
#DEFINE X_IMPOSTO    01 //Nome do imposto
#DEFINE X_NUMIMP     02 //Sufixo do imposto
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³  Funcao    ³M100RET   ³ Autor ³ Lucas                 ³ Data ³ 14/11/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Descricao  ³ Programa que Calcula a retencao (CHILE)                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³  Uso       ³ Documentos de entrada                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function M100RET(cCalculo,nItem,aInfo)

Local cFunc  := ""
Local aRet   := {}
Local aArea  := GetArea()
LOCAL lXFis

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Observacao :                                                  ³
³                                                               ³
³ a variavel ParamIxb tem como conteudo um Array[2], contendo : ³
³ [1,1] > Quantidade Vendida                                    ³
³ [1,2] > Preco Unitario                                        ³
³ [1,3] > Valor Total do Item, com Descontos etc...             ³
³ [1,4] > Valor do Frete Rateado para Este Item ...             ³
³ [1,5] > Array Contendo os Impostos já calculados, no caso de  ³
³         incidência de outros impostos.                        ³
³ [2,1] > Array aImposto, Contendo as Informações do Imposto que³
³         será calculado.                                       ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/

lXFis:=(MafisFound() .And. ProcName(1)!="EXECBLOCK")
// .T. - metodo de calculo utilizando a matxfis
// .F. - metodo antigo de calculo

aCountry:= GetCountryList()
cFunc	:= "M100RET" + aCountry[Ascan( aCountry, { |x| x[1] == cPaisLoc } )][3] // retorna pais com 2 letras
aRet	:= &( cFunc )(cCalculo,nItem,aInfo,lXFis)

RestArea(aArea)

Return(aRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³M100RetCH   ¦ Autor ¦ Lucas			       ¦ Data ¦ 29.04.98³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Programa que Calcula a retencao (CHILE)                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Documentos de entrada                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function M100RetCH(cCalculo,nItem,aInfo,lXFis)

Local cAreax  := ""
Local cJunta  := ""
Local cProd   := ""
Local cImpIncid := ""
Local cBuscaDec := ""
Local cTabela   := ""
Local _cTipo    := ""
Local lManual   := .F.
Local nPreco    := 0, nPrcVen := 0
Local nPosPrcVen:= 0, nPosQtde := 0
Local nPosQ     := 0
Local nI, nEE
Local nDeci      := 2 
Local nQuant     := 0                  
Local nOrdSFC, nRegSFC                 
Local nBase      := 0
Local nIVAPubli  := 0
Local nIVALista  := 0
Local nIVADIf    := 0
Local nIVARet    := 0
Local nCajas     := 0
Local lAutomacao := cModulo $ "LOJ|FRT"
Local lCalc1     := .F. 
Local aItemInfo  := {}
Local aImposto   := {}
Local aImpRef    := {}
Local aImpVal    := {}
Local _aliqIVA   := 0
Local xRet

If !lXFis
   aItemINFO := ParamIxb[1]
   aImposto  := aClone(ParamIxb[2])
   cImpIncid := aImposto[10]
   nCols     := ParamIxb[3]
   xRet      := aImposto   
Else 
    xRet     := 0
    nCols    := nItem
    cImpIncid:= ""
EndIf  

If Type("aCols") == "A"
   //Manual                                                    
   If !lXFis
      nPosQ	:=	Ascan(aHeader,{ |X| Trim(X[2]) == "D1_QUANT"})
      nQuant	:=	aCols[nCols][nPosQ]      
   Else
      nQuant	:= MaFisRet(nItem,"IT_QUANT")      
   EndIf
   lManual  := .T.
Else              
   //Automatica
   If !lXFis
      nQuant := aItemINFO[1]	
   Else
      nQuant := MaFisRet(nItem,"IT_QUANT")                  
   EndIf   
Endif	
//+-------------------------------------------------------------------+
//¦ Considerar o Tipo do Cliente.                                     ¦
//¦                                                                   ¦
//¦ A => Afecto                                                       ¦
//¦ N => Resp. Nao Afecto  , não gera IVA nas notas                   ¦
//¦ R => Afecto no Retenedor                                          ¦
//+-------------------------------------------------------------------+

lCalc1 := .F.
If cModulo $ "FAT|LOJ|FRT|TMK"
	dbSelectArea( "SA1" )
	_cTipo := A1_TIPO
	lCalc1 := _cTipo <> "N"
Else
	dbSelectArea( "SA2" )
	_cTipo := A2_TIPO
	lCalc1 := _cTipo <> "N"
Endif
If !lCalc1
	_aliqIVA	:=	0.00
Else 
    If !lXFis
	   DbSelectArea("SFB")
	   If DbSeek(xFilial() + "IVA" ) 
		  _AliqIVA := FB_ALIQ
	   Endif
	   aImposto[2]  := _aliqIva                     // Alíquota ( 18 %)
	   aImposto[11] := aItemINFO[4]		     	//Rateio do Frete
	   aImposto[13] := aItemINFO[5]     		    // Rateio de Despesas
	   aImposto[3]  := aItemINFO[3]+aItemINFO[4]    // Base de Cálculo
       //+---------------------------------------------------------------+
       //¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
       //+----------------------------------------------------------Lucas+
       nI := At( cImpIncid,";" )
       nI := If( nI==0,Len( AllTrim( cImpIncid ) )+1,nI )
	
       While nI > 1
          nEE:= AScan( aItemINFO[5],{|x| x[1] == Left(cImpIncid,nI-1) } )
          If nEE> 0
             aImposto[3] := aImposto[3]+aItemINFO[5,nEE,4]
          End

          cImpIncid := Stuff( cImpIncid,1,nI )
          nI := At( cImpIncid,";" )
          nI := If( nI==0,Len( AllTrim( cImpIncid ) )+1,nI )
       End

       //+---------------------------------------------------------------+
       //¦ Efetua o Calculo do Imposto                                   ¦
       //+----------------------------------------------------------Lucas+
       cBuscaDec := "F1_VALIMP"+SFB->FB_CPOLVRO
	   dbSelectArea("SX3")
	   dbSetOrder(2)
	   If dbSeek(cBuscaDec)
	      nDeci := SX3->X3_DECIMAL
	   Else
	      nDeci := 2	
	   Endif

       aImposto[4] := Round((aImposto[2] * (aImposto[3]/100)),nDeci)   // Valor Calculado
   Else
	   If cCalculo=="B"
           nBase   := MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
           nOrdSFC := (SFC->(IndexOrd()))
           nRegSFC := (SFC->(Recno()))
           SFC->(DbSetOrder(2))
           If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
              cImpIncid := Alltrim(SFC->FC_INCIMP)
              If SFC->FC_LIQUIDO=="S"
                 nBase-=If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
              Endif   
           Endif   
           SFC->(DbSetOrder(nOrdSFC))
           SFC->(DbGoto(nRegSFC))   
       Endif      
   EndIf 
   
   If _cTipo == "R"  
    	cTabela:=GetMv("MV_LPREPUB",,"1")    	
    	cAreax := Alias()    	     
		If lManual
		   If !lXFis
			  nPosQ      := Ascan(aHeader,{ |X| Trim(X[2]) == "D1_COD"})
			  nPosPrcVen := Ascan(aHeader,{ |X| Trim(X[2]) == "D1_VUNIT"})
			  nPosQtde   := Ascan(aHeader,{ |X| Trim(X[2]) == "D1_QUANT"})
		      If nPosQ > 0
			     cProd	:=	aCols[nCols][nPosQ]
		      EndIf
		      If nPosPrcVen > 0
		  	     nPrcVen := aCols[nCols][nPosPrcVen]
		      EndIf
		      If nPosQtde > 0
			     nCajas := aCols[nCols][nPosQtde]
		      EndIf
		   Else  
		      cProd	  := MaFisRet(nItem,"IT_PRODUTO")
		      nPrcVen := MaFisRet(nItem,"IT_PRCUNI")
		      nCajas  := MaFisRet(nItem,"IT_QUANT")
		   EndIf   
		Else	
		    cProd   := SB1->B1_COD 
			nCajas  := aItemINFO[1]			    
			nPrcVen := aItemINFO[2]
		EndIf			
	    If lAutomacao
	       DbSelectArea("SB0")
	       DbSetOrder(1)
	       If DbSeek(xFilial()+cProd)
	          cJunta := "SB0->B0_PRV" + SubStr(cTabela,3,1)
	          nPreco := &cJunta		
	       EndIf   
	    Else
	       DbSelectArea("DA0")
	       DbSetOrder(1)
	       If DbSeek(xFilial()+cTabela)
	          DbSelectArea("DA1")
	    	  DbSetOrder(1)	    	     
	    	  If !lManual
	    	     cProd  := SD1->D1_COD
	    	  EndIf   	    	  
	    	  If DbSeek(xFilial()+cTabela+cProd)	    	           	    	              
    	         nPreco  := DA1->DA1_PRCVEN
	    	  EndIf
	       EndIf	          
	    EndIf	  
    	DbSelectArea(cAreax)
    	If !lXFis
		   nIVAPubli := NoRound(nPreco/(1+(aImposto[2])/100),0) 	//Valor de Base Imponible
		   nIVAPubli := NoRound(nIVAPubli * (aImposto[2])/100,0)    //Valor del IVA al Publico
		   nIVALista := NoRound(nPrcVen * (aImposto[2])/100,0)  		//Valor del IVA Preco de Lista
		   nIVADIf   := ( nIVAPubli - nIVALista )
		   nIVARet   := NoRound( nIVADif * nCajas )
		   aImposto[4] := nIVARet
		   xRet := aImposto
		Else
           Do Case
              Case cCalculo == "B"
                 //+---------------------------------------------------------------+
	             //¦ Soma a Base de Cálculo os Impostos Incidentes                 ¦
	             //+----------------------------------------------------------Lucas+
	             If !Empty(cImpIncid)
				    aImpRef  := MaFisRet(nItem,"IT_DESCIV")
				    aImpVal  := MaFisRet(nItem,"IT_VALIMP")
				    For nI:=1 to Len(aImpRef)
				       If !Empty(aImpRef[nI])
					      IF Trim(aImpRef[nI][1])$cImpIncid
						     nBase+=aImpVal[nI]
					      Endif
					   Endif
				    Next nI	
	             Endif   
                 xRet := nBase
              Case cCalculo == "A"
  	             DbSelectArea("SFB")
	             If DbSeek(xFilial() + aInfo[X_IMPOSTO])
		            xRet := FB_ALIQ
	             Endif
              Case cCalculo == "V"
		         nIVAPubli := NoRound(nPreco/(1+(MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP]))/100),0) 	//Valor de Base Imponible
		         nIVAPubli := NoRound(nIVAPubli * (MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP]))/100,0)    //Valor del IVA al Publico
		         nIVALista := NoRound(nPrcVen * (MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP]))/100,0)  		//Valor del IVA Preco de Lista
		         nIVADIf   := ( nIVAPubli - nIVALista )
		         nIVARet   := NoRound( nIVADif * nCajas )
		         xRet      := nIVARet
           EndCase		
		EndIf   
  	EndIf
EndIf
	
Return( xRet )
