#include "SIGAWIN.CH"        // incluido pelo assistente de conversao do AP5 IDE em 09/09/99
#DEFINE _DEBUG   .F.   // Flag para Debuggear el codigo
#DEFINE _NOMIMPOST 01
#DEFINE _ALIQUOTA  02
#DEFINE _BASECALC  03
#DEFINE _IMPUESTO  04
#DEFINE _TES_CFO   10
#DEFINE _RATEOFRET 11
#DEFINE _IMPFLETE  12
#DEFINE _RATEODESP 13
#DEFINE _IMPGASTOS 14
#DEFINE _VLRTOTAL  3
#DEFINE _FLETE     4
#DEFINE _GASTOS    5
//Posicoes  do terceiro array recebido nos impostos a traves da matxfis...
#DEFINE X_IMPOSTO    01 //Nome do imposto
#DEFINE X_NUMIMP     02 //Sufixo do imposto  

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒø±±
±±≥Programa  ≥ M460IRF  ≥ Autor ≥ Camila Janu·rio     ≥ Data ≥ 23.01.2012 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Descricao ≥ Calculo do IRF - Entrada                                   ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Parametros≥ cPar01 - Solicitacao da MATXFIS, pondendo ser A (aliquota),≥±±
±±≥          ≥          B (base), V (valor).                              ≥±±
±±≥          ≥ nPar02 - Item do documento fiscal.                         ≥±±
±±≥          ≥ aPar03 - Array com as informacoes do imposto.              ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Retorno   ≥ xRet - Retorna o valor solicitado pelo paremetro cPar01    ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ MATXFIS                                                    ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥   DATA   ≥ Programador   ≥Manutencao Efetuada                         ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥31/07/2019≥ARodriguez     ≥DMINA-6748 CalcRetFis() obtiene CFO de      ≥±±
±±≥          ≥               ≥MaFisRet() COL                              ≥±±
±±≥04/09/2019≥Oscar G.       ≥DMINA-6870 CalcRetFis() redondeo de deci-   ≥±±
±±≥          ≥               ≥males COL                                   ≥±±
±±≥12/01/2021≥Luis EnrÌquez  ≥DMINA-10739 CalcRetFis() se hace ajuste para≥±±
±±≥          ≥               ≥obtener correctamente el descuento. (COL)   ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Function M460IRF(cCalculo,nItem,aInfo) 

Local aRet
Local cFunct   := ""
Local aCountry := {}
Local lXFis    := .T.
Local aArea    := GetArea()
	
lXFis    := ( MafisFound() .And. ProcName(1)!="EXECBLOCK" )
aCountry := GetCountryList()
cFunct   := "M460IRF" + aCountry[aScan( aCountry, { |x| x[1] == cPaisLoc } )][3] //monta nome da funcao
aRet     := &(cFunct)(cCalculo,nItem,aInfo,lXFis) //executa a funcao do pais

RestArea(aArea)

Return aRet                                          

/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒø±±
±±≥Programa  ≥ M460IRFUR ≥ Autor ≥ Camila Janu·rio     ≥ Data ≥ 23.01.2012 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Descricao ≥ Calculo do IRF - Entrada - Uruguai			               ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Parametros≥ cPar01 - Solicitacao da MATXFIS, pondendo ser A (aliquota), ≥±±
±±≥          ≥          B (base), V (valor).                               ≥±±
±±≥          ≥ nPar02 - Item do documento fiscal.                          ≥±±
±±≥          ≥ aPar03 - Array com as informacoes do imposto.               ≥±±
±±≥          ≥ lPar04 - Define se e rotina automaticao ou nao.             ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Retorno   ≥ xRet - Retorna o valor solicitado pelo paremetro cPar01     ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ Uruguai 					                                   ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Function M460IRFUR(cCalculo,nItem,aInfo,lXFadminis)

Local xRet                      
Local cRetFuent:=""
Local nDesconto,nBase,nAliq,nOrdSFC,nRegSFC,nVal,nVRet,nMoeda,nTaxaMoed,nBaseAtu
Local aValRet
Local lRet, cGrpIRPF
Private clTipo	:= ""

nBase:=0
nAliq:=0
nDesconto:=0
nVRet:=0
cGrpIRPF:=""
lRet:=.F.
cZonFis := Space(02)

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Declaracao de variaveis utilizadas no programa atraves da funcao    ≥
//≥ SetPrvt, que criara somente as variaveis definidas pelo usuario,    ≥
//≥ identificando as variaveis publicas do sistema utilizadas no codigo ≥
//≥ Incluido pelo assistente de conversao do AP5 IDE                    ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ

SetPrvt("CALIASROT,CORDEMROT,AITEMINFO,AIMPOSTO,_CPROCNAME,_CZONCLSIGA")
SetPrvt("_LAGENTE,_LEXENTO,AFISCAL,_LCALCULAR,_LESLEGAL,_NALICUOTA,NALIQ")
SetPrvt("_NVALORMIN,_NREDUCIR,CTIPOEMPR,CTIPOCLI,CTIPOFORN,CZONFIS,CCFO,")
SetPrvt("CCLASCLI,CCLASFORN,CMVAGENTE")

cAliasRot  := Alias()
cOrdemRot  := IndexOrd()
xRet	   :=0

If cModulo$'FAT|TMK|LOJA|FRT'
	If FieldPos("A1_RETIRPF")>0     
		cRetFuent	:= Alltrim(SA1->A1_RETIRPF)
	Endif
	clTipo	 	:= Alltrim(SA1->A1_TIPO)	
Else
	cRetFuent   := Alltrim(SA2->A2_RETIRPF)
	clTipo		:= Alltrim(SA2->A2_TIPO)	
Endif	
//Calcula IR ou o Fornecedor for Estrangeiro
If cRetFuent == "S" .And. clTipo$"1|2|3"
	
	If cModulo$'COM'
		cZonfis    := SA2->A2_EST
	ElseIf cModulo$'FAT'
		cZonfis    := SM0->M0_ESTENT
	EndIf
	//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
	//≥           Busca o CFO do Tes Correspondente - SF4                   ≥
	//≥                                                                     ≥
	//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
	cCFO := MaFisRet(nItem,"IT_CF")
	
	//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
	//≥Verifico no SFB existe SFB->ALIQ e nao apresenta tabela SFB->TABELA≥
	//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
	dbSelectArea("SFB")
	dbSetOrder(1)
	If dbSeek(xFilial("SFB")+aInfo[X_IMPOSTO])
		If cCalculo$"AB"
			nOrdSFC:=(SFC->(IndexOrd()))
			nRegSFC:=(SFC->(Recno()))
			SFC->(DbSetOrder(2))
			If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
				If SFC->FC_LIQUIDO=="S"
					nDesconto:=If(SFC->FC_CALCULO=="T",MaFisRet(nItem,"NF_DESCONTO"),MaFisRet(nItem,"IT_DESCONTO"))
				Endif
			Endif
			SFC->(DbSetOrder(nOrdSFC))
			SFC->(DbGoto(nRegSFC))
			nVal:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
			If GetNewPar('MV_DESCSAI','1')=='2'
				nVal-=nDesconto
			Endif
			nAliq:=SFB->FB_ALIQ		
	
			lRet := .F.
			If (clTipo=="3" .And. Alltrim(aInfo[X_IMPOSTO])=="IRN") .Or. Alltrim(aInfo[X_IMPOSTO])=="IR2"
				DbSelectArea("SFF")
				SFF->(DbSetOrder(5))
				SFF->(DbGoTop())
				If dbSeek(xFilial("SFF") + aInfo[X_IMPOSTO] + cCFO + cZonFis)
					nAliq:=SFF->FF_ALIQ                
				Endif
				lRet := .T.				
			Else
				DbSelectArea("SB1")
				SB1->(DbSetOrder(1))
				SB1->(DbGoTop())
				If FieldPos("B1_GRPIRPF")>0     
					If DbSeek(xFilial("SB1") + AvKey(MaFisRet(nItem,"IT_PRODUTO"),"B1_COD") )
						cGrpIRPF:=SB1->B1_GRPIRPF
						DbSelectArea("SFF")
						SFF->(DbSetOrder(9))
						SFF->(DbGoTop())
						If DbSeek(xFilial("SFF") + AvKey(aInfo[X_IMPOSTO],"FF_IMPOSTO") + AvKey(cGrpIRPF,"FF_GRUPO"))
							nAliq:=SFF->FF_ALIQ
							lRet := .T.
						Endif		
					Endif
				Endif		
			Endif				
		Else
			lRet:=.T.
		Endif
	Endif
EndIf
If lRet  								
	Do Case
		Case cCalculo=="B"
			nVRet:=nVal	
		Case cCalculo=="A"
			nVRet:=nAliq
		Case cCalculo=="V"            		
			nBase:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
			nAliq:=MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP])
			
			cEspecie:=IIF(Type("M->F1_ESPECIE")<>"U",M->F1_ESPECIE,M->F2_ESPECIE)
			 			
			If Subs(cEspecie,1,2)=="NC"
			   	nTaxaMoed := 0
				nMoeda := 1
			   	If Type("M->F1_MOEDA")<>"U" 			   	
				    nMoeda := M->F1_MOEDA
				    nTaxaMoed := M->F1_TXMOEDA
				ElseIf Type("M->C7_MOEDA")<>"U"
					nMoeda := M->C7_MOEDA
				    nTaxaMoed := M->C7_TXMOEDA				
		        ElseIf Type("M->F2_MOEDA")<>"U"
		        	nMoeda := M->F2_MOEDA
				    nTaxaMoed := M->F2_TXMOEDA				
				ElseIf Type("M->C5_MOEDA")<>"U" 
					nMoeda := M->C5_MOEDA
				    nTaxaMoed := M->C5_TXMOEDA				
		        EndIf	        
		        nBaseAtu := xMoeda(nBase,nMoeda,1,Nil,Nil,nTaxaMoed) 
		        //⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
	   	   		//≥Verifica o valor das retenÁıes e base de IR acumulados ≥
	   	   		//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸƒƒŸ			
		   		aValRet := RetValIR(aInfo[X_IMPOSTO])
				//aValRet[01] = base acumulada
		   		//aValRet[02] = retencao acumulada
	   			//aValRet[03] = retencao acumulada de NF 
	   			If ((aValRet[1]-nBaseAtu) > 0) .And. ( (aValRet[1] - nBaseAtu)  <= xMoeda(SFF->FF_IMPORTE,SFF->FF_MOEDA,1))			
					nVret := xMoeda(aValRet[2],1,nMoeda,Nil,Nil,Nil, nTaxaMoed)		   		
				Else
					nVret := nBase*(nAliq/100)
				EndIF					
			Else 
				nVRet:=nBase * (nAliq/100)
			EndIf 	
		EndCase
Endif  

dbSelectArea( cAliasRot )
dbSetOrder( cOrdemRot )
Return(nVRet)

/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒø±±
±±≥Programa  ≥ M460IRFCO ≥ Autor ≥ Camila Janu·rio     ≥ Data ≥ 23.01.2012 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Descricao ≥ Calculo do IRF - Entrada - ColÙmbia			               ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Parametros≥ cPar01 - Solicitacao da MATXFIS, pondendo ser A (aliquota), ≥±±
±±≥          ≥          B (base), V (valor).                               ≥±±
±±≥          ≥ nPar02 - Item do documento fiscal.                          ≥±±
±±≥          ≥ aPar03 - Array com as informacoes do imposto.               ≥±±
±±≥          ≥ lPar04 - Define se e rotina automaticao ou nao.             ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Retorno   ≥ xRet - Retorna o valor solicitado pelo paremetro cPar01     ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ Costa Rica				                                   ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/

Function M460IRFCO(cCalculo,nItem,aInfo,lXFis) 
                                    
Local xRet
Local cRetFuent :=""
Local clAgen	:= GetMV("MV_AGENTE") 
Local llRetIVA  := .T.
Local lRet	    := .T.
Local cContrib  := ""
Private clTipo	:= ""


//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Declaracao de variaveis utilizadas no programa atraves da funcao    ≥
//≥ SetPrvt, que criara somente as variaveis definidas pelo usuario,    ≥
//≥ identificando as variaveis publicas do sistema utilizadas no codigo ≥
//≥ Incluido pelo assistente de conversao do AP5 IDE                    ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ

SetPrvt("CALIASROT,CORDEMROT,AITEMINFO,AIMPOSTO,_CPROCNAME,_CZONCLSIGA")
SetPrvt("_LAGENTE,_LEXENTO,AFISCAL,_LCALCULAR,_LESLEGAL,_NALICUOTA,NALIQ")
SetPrvt("_NVALORMIN,_NREDUCIR,CTIPOEMPR,CTIPOCLI,CTIPOFORN,CZONFIS,CCFO,")
SetPrvt("CCLASCLI,CCLASFORN,CMVAGENTE")

cAliasRot  := Alias()
cOrdemRot  := IndexOrd()
xRet	   :=0

lXFis:=(MaFisFound() .And. ProcName(1)<>"EXECBLOCK")
	
If !lXFis
	aItemINFO  := ParamIxb[1]
	aImposto   := ParamIxb[2]
	xRet:=aImposto
Else
    xRet:=0
Endif     

If cModulo$'FAT|TMK|LOJA|FRT'
	cTipoCliFor := SA1->A1_TPESSOA//SA1->A1_TIPO
	cClasCli    := SA1->A1_TPESSOA//SA1->A1_TIPO
    cRetFuent   := SA1->A1_RETFUEN
    cContrib    := SA1->A1_CONTRBE //CONTRIBUINTE
    cAgRet      := SA1->A1_RETENED
Else
    cTipoCliFor := SA2->A2_TPESSOA
	cClasForn   := SA2->A2_TPESSOA//SA2->A2_TIPO
	cRetFuent   := Alltrim(SubStr(clAgen,3,1))
	cContrib    := SA2->A2_CONTRBE //CONTRIBUINTE
	cAgRet      := SA2->A2_RETENED
Endif    

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥             Verifica se Calcula Retencao en la Fuente:              ≥
//≥                        Cliente / Proveedor                          ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
	
If cModulo$'COM'
	If SubStr(clAgen,3,1) != "S"
		llRetIVA	:= .F.
	EndIf		
	cZonfis    := SA2->A2_EST
ElseIf cModulo$'FAT'
	If SA1->A1_RETFUEN != 'S'
		llRetIVA	:= .F.
	EndIf		
	cZonfis    := SM0->M0_ESTENT
EndIf

//Comentado devido a FNC 000000199602012
//1. Se for um proveedor "Regimen Comum" somente pode reter fuente se n„o for " Gran Contribuyente" 
/*If cTipoCliFor == "1" .AND. cContrib == "1"
	lRet := .F.
EndIf*/

If  (cAgRet=="S") .OR. (cAgRet=="1")
	lRet := .T.
Else
	lRet := .F.
Endif	
	
If cRetFuent == "S" .AND. lRet
   If !lXFis
		If llRetIVA
      		CalcReten()
	  		xRet:=aImposto
	 	EndIf
   Else
  	   If llRetIVA
			xRet:=CalcRetFis(cCalculo,nItem,aInFo)
  	   EndIf
   Endif
Endif
	
Return( xRet )


/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Programa  ≥CALCRETEN ∫Autor  ≥Denis Martins       ∫ Data ≥  11/12/99   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Desc.     ≥Calculo da Retencao do Imposto X Tes                        ∫±±
±±∫          ≥                                                            ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ MATA460,MATA100                                            ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
*/
Static Function CalcReten()
Local nDesconto:= 0,lRet
Local nMoedaOri:= IIf(Type("lPedidos")	<> "U" .And. lPedidos , SC5->C5_MOEDA ,Max(SF2->F2_MOEDA,1))
Local nTotBase := 0 
Local lIncid   :=.F.
Local nPosCFO
SetPrvt("NBASE,NFAXDE,NFAXATE")

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Busca o CFO informado no PV - pode ter sido alt. devido o concepto  ≥
//≥                                                                     ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
If Type("lPedidos")	<> "U" .And. lPedidos 
	cCFO := SC6->C6_CF 
ElseIf Type("M->D2_CF")<>"U"
	cCFO := M->D2_CF
Else
	cCFO := SD2->D2_CF
EndIf

dbSelectArea("SFB")
dbSetOrder(1)
If dbSeek(xFilial("SFB")+aImposto[1])

	//Tira os descontos se for pelo liquido .Bruno
	If Subs(aImposto[5],4,1) == "S"  .And. Len(AIMPOSTO) >= 18 .And. ValType(aImposto[18])=="N"
			nDesconto	:=	aImposto[18]
	Else
		nDesconto	:=	0
	Endif
	
	dbSelectArea("SFF")
	dbSetOrder(6)
	If dbseek(xFilial("SFF")+aImposto[1]+cCFO)
		If FF_FLAG != "1"
			RecLock("SFF",.F.)
			Replace FF_FLAG With "1"
		Endif                                  
 		nFaxde  := SFF->FF_FXDE        
 		
 		aImp:=ParamIxb[2]
		cImp:=aImp[1]
		cImpIncid:=aImp[10]
		
		If Len(Alltrim(cImpIncid)) >0      
			nI:=At(cImpIncid,";" )
			nI:=If(nI==0,Len(AllTrim(cImpIncid))+1,nI)
			nI:=At(cImpIncid,";" )
			nI:=If(nI==0,Len(AllTrim(cImpIncid))+1,nI)
		 	lIncid:=.F.
			While nI>1
				nE:=AScan(aItemINFO[6],{|x| x[1]==Left(cImpIncid,nI-1)})
				If nE>0 
				    lIncid:=.T.
					nTotBase+=aItemINFO[6,nE,4]
				End
				cImpIncid:=Stuff(cImpIncid,1,nI,"")
				nI:=At(cImpIncid,";")
				nI:=If(nI==0,Len(AllTrim(cImpIncid))+1,nI)
			End
		Else
				nTotBase := ( aItemINFO[3] + aItemINFO[4] + aItemINFO[5] - nDesconto ) //* nBase
		EndIf		
 		
		//If xMoeda(nTotBase,nMoedaOri ,1) >= xMoeda(nFaxde,SFF->FF_MOEDA,1)
			nAliq   := SFF->FF_ALIQ 
		    aImposto[2]  := nAliq           
		    If SFC->FC_CALCULO == "T"      .Or. 	lIncid
		      aImposto[3] :=	nTotBase
		    else
		      aImposto[3]  := ( aItemINFO[3] + aItemINFO[4] + aItemINFO[5] - nDesconto ) 	  
		    endif   	
		   	aImposto[4] := aImposto[3] * (aImposto[2]/100)
	  		If xMoeda(aImposto[3],nMoedaOri ,1)  < xMoeda(SFF->FF_IMPORTE,SFF->FF_MOEDA,1)
	  		//If aImposto[3]  < SFF->FF_IMPORTE
				aImposto[4] := 0	   	   				
			EndIf			
		//Else
		//	lRet := .F. 
		//Endif       

 	EndIf
  xRet:=aImposto
Endif
//Verifica na SFF se existe Imposto e CFO correspondente para realizacao do calculo
dbSelectArea( cAliasRot )
dbSetOrder( cOrdemRot )
Return(xRet)

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Programa  ≥CALCRETFIS∫Autor  ≥Denis Martins       ∫ Data ≥ 11/12/1999  ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Desc.     ≥Calculo da Retencao do Imposto X Tes - Entrada              ∫±±
±±∫          ≥Alterado para o uso da funcao MATXFIS (Marcello)            ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ MATA460,MATA100                                            ∫±±                                  
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
*/
Static Function CalcRetFis(cCalculo,nItem,aInfo)
Local nDesconto,nBase,nAliq,nOrdSFC,nRegSFC,nTotBase,nVRet,nPosCFO
Local nFaxDe,lRet, cGrpIRPF, nImporte
Local nMoeda:=1
Local nMoedaSFF :=1
Local nTaxaMoed	:= 0
Local nI:=1       
Local nVal:=0

If Type("M->F1_MOEDA")<>"U" 			   	
	nMoeda := M->F1_MOEDA
	nTaxaMoed := M->F1_TXMOEDA
ElseIf Type("M->C7_MOEDA")<>"U"
	nMoeda := M->C7_MOEDA
    nTaxaMoed := M->C7_TXMOEDA				
ElseIf Type("M->F2_MOEDA")<>"U"
   	nMoeda := M->F2_MOEDA
    nTaxaMoed := M->F2_TXMOEDA				
ElseIf Type("M->C5_MOEDA")<>"U" 
	nMoeda := M->C5_MOEDA
    nTaxaMoed := M->C5_TXMOEDA	   
Else
	nMoeda 		:= MAFISRET(,'NF_MOEDA')     
	nTaxaMoed 	:= MaFisRet(,'NF_TXMOEDA')			
EndIf	        

If nTaxaMoed==0
	nTaxaMoed:= RecMoeda(nMoeda)
EndIf

nBase:=0
nAliq:=0
nDesconto:=0
nVRet:=0
cGrpIRPF:=""
lRet:=.F.
//cZonFis := Space(02)

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥           Busca o CFO do Tes Correspondente - SF4                   ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
cCFO := MaFisRet(nItem,"IT_CF")

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥Verifico no SFB existe SFB->ALIQ e nao apresenta tabela SFB->TABELA≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
dbSelectArea("SFB")
dbSetOrder(1)
If dbSeek(xFilial("SFB")+aInfo[X_IMPOSTO])
	//Tira os descontos se for pelo liquido
	nOrdSFC:=(SFC->(IndexOrd()))
	nRegSFC:=(SFC->(Recno()))
	SFC->(DbSetOrder(2))
	If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[X_IMPOSTO])))
		If SFC->FC_LIQUIDO=="S"
			nDesconto:=MaFisRet(nItem,"IT_DESCONTO")
		Endif
	Endif
	cImpIncid:=Alltrim(SFC->FC_INCIMP)
	SFC->(DbSetOrder(nOrdSFC))
	SFC->(DbGoto(nRegSFC))    
	
		If !Empty(cImpIncid)
			aImpRef:=MaFisRet(nItem,"IT_DESCIV")
			aImpVal:=MaFisRet(nItem,"IT_VALIMP")
			For nI:=1 to Len(aImpRef)
			       If !Empty(aImpRef[nI])
				      IF Trim(aImpRef[nI][1])$cImpIncid
					     nVal+=aImpVal[nI]
				      Endif
				   Endif
			Next	
		Else
	
			nVal:=MaFisRet(nItem,"IT_VALMERC")+MaFisRet(nItem,"IT_FRETE")+MaFisRet(nItem,"IT_DESPESA")+MaFisRet(nItem,"IT_SEGURO")
	
			If GetNewPar('MV_DESCSAI','1')=='2'
				nVal-=nDesconto
			Endif 
		EndIf	
	nAliq:=SFB->FB_ALIQ		

	//Verifica na SFF se existe Imposto e CFO correspondente para realizacao do calculo
	DbSelectArea("SFF")
	SFF->(DbSetOrder(6))
	SFF->(DbGoTop())
	If dbSeek(xFilial("SFF") + aInfo[X_IMPOSTO] + cCFO) 
		If  cCalculo == "V"
			nImporte :=  SFF->FF_IMPORTE           
				//
				SFC->(DbSetOrder(2))
				If (SFC->(DbSeek(xFilial("SFC")+MaFisRet(nItem,"IT_TES")+aInfo[1])))
					If SFC->FC_CALCULO=="T"
				      If MaFisRet(,'NF_BASEIV'+aInfo[2])+ MaFisRet(nItem,'IT_BASEIV'+ aInfo[2]) >  MaFisRet(,"NF_MINIV"+aInfo[2])
			  		      nVal:= MaRetBasT(aInfo[2],nItem,MaFisRet(nItem,'IT_ALIQIV'+aInfo[2]),) 
			  			Endif
			          ELSE
				        If MaFisRet(nItem,'IT_BASEIV'+aInfo[2]) >   MaFisRet(,"NF_MINIV"+aInfo[2])
			  		      	nVal	:=	MaFisRet(nItem,'IT_BASEIV'+aInfo[2])
			  			Endif
					Endif
				Endif               
			//
			lRet:=.T.		
		ElseIf cCalculo $ "BA"		 
			If FF_FLAG != "1"
				RecLock("SFF",.F.)
				Replace FF_FLAG With "1"
				SFF->(MsUnlock())
			Endif
			nFaxde  := SFF->FF_FXDE
			nBase   := 1
			nTotBase := nVal * nBase
			nMoedaSFF:=SFF->FF_MOEDA
		  //	If  xMoeda(nTotBase,nMoeda,1,Nil,Nil,nTaxaMoed)  >= xMoeda(nFaxde,nMoedaSFF,1)
				nAliq:=SFF->FF_ALIQ
				nBase:=nVal
				lRet := .T.
				DbGoBottom()
		/*	Else
				lRet := .F.
			Endif*/
		EndIf		
	Endif			
Endif

If lRet
	Do Case
		Case cCalculo=="B"
			nVRet:=nVal
		Case cCalculo=="A"
			nVRet:=nAliq
		Case cCalculo=="V"
			nBase:=MaFisRet(nItem,"IT_BASEIV"+aInfo[X_NUMIMP])
			nAliq:=MaFisRet(nItem,"IT_ALIQIV"+aInfo[X_NUMIMP])
  	   		nMoedaSFF:=1
  	   		If  SFF->FF_MOEDA >0
  	   			nMoedaSFF:=SFF->FF_MOEDA
  	   		EndIf
  	   		If xMoeda(nVal,nMoeda,1,Nil,Nil,nTaxaMoed) >= xMoeda(nImporte,nMoedaSFF,1)
 				nVRet := Round(nVal * (nAliq/100),2)
			Else
				nVRet:= 0	   	   				
			EndIf	
	EndCase
Endif
dbSelectArea( cAliasRot )
dbSetOrder( cOrdemRot )
Return(nVRet)
