#Include "Protheus.CH"
#INCLUDE "PLSA790V.ch"
#INCLUDE "TOTVS.CH"
#INCLUDE 'FWMBROWSE.CH'
#INCLUDE 'FWMVCDEF.CH'
#include "PLSMGER.CH"
#include "PLSMCCR.CH"
#include "TOPCONN.CH"

#DEFINE PLS__ALIAS 	"B53"
#DEFINE PLS_TITULO 	STR0001 //"Guias em Analise"
#DEFINE PLS_CORLIN 	"#D6E4EA"
#DEFINE PLS_MODELO 	"PLSA790M"
#define __aCdCri585 {"585","Quantidade de diarias Solicitadas diferente do Configurado na Tabela Padrao"} //"Quantidade de diarias Solicitadas diferente do Configurado na Tabela Padrao"}

STATIC o790C 	:= PLSA790C():New()
STATIC lRegT 	:= .f.
STATIC lFilt 	:= .f.
STATIC aModBkp 	:= NIL
STATIC cGuia   	:= ""
STATIC oB68  	:= NIL
STATIC oB69  	:= NIL
STATIC oB70  	:= NIL
STATIC oB71  	:= NIL
STATIC oB72  	:= NIL
STATIC objCENFUNLGP  := CENFUNLGP():New()

//-------------------------------------------------------------------
/*/{Protheus.doc} PLSA790V
View da rotina de auditoria

@author Alexander Santos
@since 10/02/2011
@version P11
/*/
//-------------------------------------------------------------------
Function PLSA790V(nTp,cFil)
LOCAL aArea     	:= GetArea()
LOCAL nI			:= 0
LOCAL nFldId  		:= 1
LOCAL nAtuSec		:= 240
LOCAL aTFolder 		:= {}
LOCAL aHeader		:= {}
LOCAL aFiles		:= {}
LOCAL aCoors  		:= FWGetDialogSize( oMainWnd )
LOCAL oPanelUp 		:= NIL
LOCAL oFWLayer 		:= NIL
LOCAL oPLUpTop 		:= NIL
LOCAL oPLUp 		:= NIL
LOCAL oPLDown  		:= NIL
LOCAL oDlg			:= NIL
LOCAL oB73  		:= NIL
LOCAL oXXX  		:= NIL
LOCAL oSay			:= NIL
LOCAL oTFolder	:= NIL
LOCAL nTmTelVer	:= NIL
LOCAL nTmTelor	:= NIL
LOCAL aMtPadR   	:= { ;
	{"B68",STR0002,"PLSDEMAM"},; 	//"Demanda"
	{"B70",STR0003,"PLSPARTM"},; 	//"Participativa"
	{"B71",STR0004,"PLSENCAM"},;	//"Encaminhamentos"
	{"B69",STR0005,"PLSANOTM"},; 	//"Anotações"
	{"B72",STR0006,"PLSINSAM"},; 	//"Interna-Saúde"
	{"XXX","Monitor de Documento de Guias","XXXX"} } 		//"Monitor de Documentos de guias"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Private
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
PRIVATE _CodPad_  := ""
PRIVATE cCadastro := ""
PRIVATE nCodRec   := 0 //Recebe registro posicionado - PLSANALM
PRIVATE aRotina   := {}
PRIVATE oBPRO 	  := NIL
PRIVATE oBCRI 	  := NIL
PRIVATE __oDlgAna := NIL

Inclui 			  := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ DEFAULT
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
DEFAULT nTp	:= 0
DEFAULT cFil:= ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Verifica se foi possivel criar a classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !o790C:lVldRot
	Return
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Atualiza informacoes da classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
o790C:SetAtuPClass()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Acesso completo inclusao,alteracao,visualizacao e exclusao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
o790C:SetOnlyVisible(.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se veio do contas medicas seta o filtro
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If nTp == 1 .Or. o790C:lVisAud .Or. Empty(o790C:cPerfil)
	o790C:SetOnlyVisible(.T.)
	o790C:SetPerfil("")
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Verifica se o operador tem acesso
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !o790C:VldAplication()
		Return
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ MsDialog
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oDlg := MSDialog():New(aCoors[1],aCoors[2],aCoors[3],aCoors[4],'Auditoria',,,,,,,,,.T.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Cria o conteiner onde serão colocados browse's
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oFWLayer := FWLayer():New()
oFWLayer:Init( oDlg, .F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Divisao da tela em duas linhas.
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oFWLayer:AddLine('UpTop',4,.F.)
oFWLayer:AddLine('MainLine'	,96,.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Utiliza a Classe tSplitter com dois Layers para permitir resize do painel inferior
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oPLMainL	:= oFWLayer:GetLinePanel( 'MainLine' )
oSplitter   := tSplitter():New( oPLMainL:nTop, oPLMainL:nLeft, oPLMainL, oPLMainL:nWidth * 0.5, oPLMainL:nHeight * 0.5, 1 )
oPLUpTop 	:= oFWLayer:GetLinePanel( 'UpTop' )
oPLUp		:= TPanel():New(01, 01, "", oSplitter, , , , , , oPLMainL:nWidth * 0.5, oPLMainL:nHeight * 0.5)
oPLDown		:= TPanel():New(01, 01, "", oSplitter, , , , , , oPLMainL:nWidth * 0.5, oPLMainL:nHeight * 0.5)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Painel
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
cStyle 		 	:= "Q3Frame{ border-style:solid; border-color:#FFFFFF; border-bottom-width:3px; border-top-width:1px; background-color:#D6E4EA }"
oPanel 		 	:= TPanelCss():New(000,000,"",oPLUpTop,,.F.,.F.,,,012,012,.T.,.F.)
oPanel:Align 	:= CONTROL_ALIGN_ALLCLIENT
oPanel:setCSS( cStyle )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Top da tela
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oFont 		:= TFont():New('Courier new',,-12,.T.)
oFont:Bold 	:= .T.
oSay  		:= TSay():New(001,002,{|| STR0008 } ,oPanel,,oFont,,,,.T.,CLR_BLUE,,30,10) //"Pefil: "
oFont:Bold 	:= .F.
oSay  		:= TSay():New(001,025,{|| o790C:cDesPerf },oPanel,,oFont,,,,.T.,CLR_BLACK,,50,10)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Filtro somente as que ainda nao foram analisadas
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !o790C:lIntSau
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Todas que nao foram analisadas ainda
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	cFil += IIF(!EMPTY(cFil), " .AND. ", "") + " B53_FILIAL = '" + xFilial('B53') + "' "
Else
	cFil += " B53_FILIAL = '" + xFilial('B53') + "' "	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Ponto de Entrada que permite filtrar as guias a serem exibidas
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If ExistBlock("PL790FIL")
	cFil += ExecBlock("PL790FIL")
EndIf

//Altera filtro para executar como SQL
cFil := "@" + cFil
cFil := StrTran(cFil, ".AND.", " and ")
cFil := StrTran(cFil, ".and.", " and ")
cFil := StrTran(cFil, ".OR.", " or ")
cFil := StrTran(cFil, ".or.", " or ")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Adiciona mais um filtro somente se a glosa ainda nao foi filtrada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
B53->(DbSetOrder(1))

oB53 := FWmBrowse():New()
oB53:SetOwner( oPLUp )
oB53:SetProfileID( '0' )
oB53:SetAlias( PLS__ALIAS )
oB53:SetDescription( PLS_TITULO )
oB53:SetMenuDef( PLS_MODELO )
oB53:DisableDetails()
oB53:ForceQuitButton()
oB53:SetAmbiente(.F.)
oB53:SetWalkThru(.F.)
oB53:SetFilterDefault(cFil)
oB53:SetBlkBackColor( {||PLS_CORLIN} )
oB53:AddLegend( "B53_OPERAD == '" + o790C:cOperad + "' .AND. B53_SITUAC == '4'", "BROWN"	, STR0009,,.F. ) //"Reservada por este operador e tem inconsistência"
oB53:AddLegend( "(B53_OPERAD == '" + o790C:cOperad + "' .OR. B53_SITUAC = '2' .Or. B53_OPERAD != '" + o790C:cOperad + "' .AND. B53_SITUAC = '3') .AND. B53_STATUS <> '6'" , "BLUE"	, STR0010,,.F. ) //"Reservada por este operador"
oB53:AddLegend( "B53_STATUS == '1' ", "GREEN"	, STR0011,,.F. ) //"Autorizada"
oB53:AddLegend( "B53_STATUS == '2' ", "YELLOW"	, STR0012,,.F. ) //"Autorizada Parcialmente"
oB53:AddLegend( "B53_STATUS == '3' .AND. B53_SITUAC <> '1'", "RED" 	, STR0013,,.F. ) //"Não Autorizada"
oB53:AddLegend( "B53_STATUS == '3' .AND. B53_SITUAC == '1'", "ORANGE" , "Indeferida Pelo Auditor",,.F. )
oB53:AddLegend( "B53_STATUS == '4' ", "WHITE"	, STR0014,,.F. ) //"Aguardando Finalização do Atendimento"
oB53:AddLegend( "B53_STATUS == '5' ", "BLACK"	, STR0015,,.F. ) //"Aguardando Liq. Titulo a Receber"
oB53:AddLegend( "B53_STATUS == '6' ", "PINK"	, "Guia Cancelada",,.F. )
oB53:AddLegend( "B53_STATUS == '7' ", "GRAY"	, "Rotina Genérica",,.F. )
oB53:Activate()	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Perfil do Usuario logado
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
aTFolder := o790C:GetRotiAtu(aMtPadR,o790C:cPerfil)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Folder
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
aScreens := getScreenRes()				// Resolucao do monitor em array
nLarg := aScreens[1] *48 / 100
nAltu := aScreens[2] *19 / 100

oTFolder 			 	:= TFolder():New( 000,000,aTFolder,,oPLDown,,,,.T.,,nLarg,nAltu)
oTFolder:bSetOption		:= { |nFolder| o790C:VldFLD(nFolder,oTFolder,aMtPadR[nFolder,1]) .And. VldChange(@oTFolder)}
oTFolder:Align 	 	:= CONTROL_ALIGN_ALLCLIENT
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Time de atualizacao de browse cabecalho B53 e monitor de documentos 4 MINUTOS
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
nAtuSec:= GetNewPar("MV_PLSATSE",240)*1000
oTimer := TTimer():New(nAtuSec, {|| oB53:Refresh() ,Iif(o790C:lMonFax,PLSATUXXX(oXXX,aFiles),NIL) }, oDlg )
oTimer:Activate()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Seta id e identificador do browse (menu) MenuDef
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If ( nFldId := AScan( aMtPadR,{|x| x[1] == 'B68' } ) ) > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Browse demanda															 ,
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB68 := FWmBrowse():New()
	oB68:SetOwner( oTFolder:aDialogs[nFldId] )
	oB68:SetProfileID( cValToChar(nFldId) )
	oB68:SetAlias( aMtPadR[nFldId,1] )
	oB68:SetDescription( aMtPadR[nFldId,2] )
	oB68:SetMenuDef( aMtPadR[nFldId,3] )
	oB68:DisableDetails()
	oB68:SetAmbiente(.F.)
	oB68:SetWalkThru(.F.)
	oB68:SetBlkBackColor( {||PLS_CORLIN} )
	oB68:AddLegend( "B68_PERPRC=='0'", "RED"	, STR0016,,.F. ) //"Não Permite Edição"
	oB68:AddLegend( "B68_PERPRC=='1'", "GREEN"	, STR0017,,.F.  ) //"Permite Edição"
	oB68:Activate()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Relacao do Browse Mestre com os Detail
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oRB53B68 := FWBrwRelation():New()
	oRB53B68:AddRelation( oB53, oB68, {{ 'B68_FILIAL', 'xFilial( "B68" )' },;
											{ 'B68_ALIMOV', 'B53_ALIMOV' },;
											{ 'B68_RECMOV', 'B53_RECMOV' } } )
	oRB53B68:Activate()
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Seta id e identificador do browse (menu) MenuDef
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If ( nFldId := AScan( aMtPadR,{|x| x[1] == 'B69' } ) ) > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Anotacoes
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB69 := FWmBrowse():New()
	oB69:SetOwner( oTFolder:aDialogs[nFldId] )
	oB69:SetProfileID( cValToChar(nFldId) )
	oB69:SetAlias( aMtPadR[nFldId,1] )
	oB69:SetDescription( aMtPadR[nFldId,2] )
	oB69:SetMenuDef( aMtPadR[nFldId,3] )
	oB69:DisableDetails()
	oB69:SetAmbiente(.F.)
	oB69:SetWalkThru(.F.)
	oB69:SetBlkBackColor( {||PLS_CORLIN} )
	oB69:Activate()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Relacao do Browse Mestre com os Detail
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oRB53B69 := FWBrwRelation():New()
	oRB53B69:AddRelation( oB53, oB69, {	;
		{ 'B69_FILIAL', 'xFilial( "B69" )' },;
		{ 'B69_ALIMOV', 'B53_ALIMOV' },;
		{ 'B69_RECMOV', 'B53_RECMOV' } } )
	oRB53B69:Activate()
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Seta id e identificador do browse (menu) MenuDef
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If ( nFldId := AScan( aMtPadR,{|x| x[1] == 'B70' } ) ) > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Participativa
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB70 := FWmBrowse():New()
	oB70:SetOwner( oTFolder:aDialogs[nFldId] )
	oB70:SetProfileID( cValToChar(nFldId) )
	oB70:SetAlias( aMtPadR[nFldId,1] )
	oB70:SetDescription( aMtPadR[nFldId,2] )
	oB70:SetMenuDef( aMtPadR[nFldId,3] )
	oB70:DisableDetails()
	oB70:SetAmbiente(.F.)
	oB70:SetWalkThru(.F.)
	oB70:SetBlkBackColor( {||PLS_CORLIN} )
	oB70:AddLegend( "B70_RELCON == '0'", "RED"	, STR0018,,.F. ) //"Não Confirmada"
	oB70:AddLegend( "B70_RELCON == '1'", "GREEN"	, STR0019,,.F.  ) //"Confirmada"
	oB70:Activate()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Relacao do Browse Mestre com os Detail
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oRB53B70 := FWBrwRelation():New()
	oRB53B70:AddRelation( oB53, oB70, {	;
		{ 'B70_FILIAL', 'xFilial( "B70" )' },;
		{ 'B70_ALIMOV', 'B53_ALIMOV' },;
		{ 'B70_RECMOV', 'B53_RECMOV' } } )
	oRB53B70:Activate()
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Set id e identificador do browse (menu) MenuDef
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If ( nFldId := AScan( aMtPadR,{|x| x[1] == 'B71' } ) ) > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Encaminhamentos
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB71 := FWmBrowse():New()
	oB71:SetOwner( oTFolder:aDialogs[nFldId] )
	oB71:SetProfileID( cValToChar(nFldId) )
	oB71:SetAlias( aMtPadR[nFldId,1] )
	oB71:SetDescription( aMtPadR[nFldId,2] )
	oB71:SetMenuDef( aMtPadR[nFldId,3] )
	oB71:DisableDetails()
	oB71:SetAmbiente(.F.)
	oB71:SetWalkThru(.F.)
	oB71:SetBlkBackColor( {||PLS_CORLIN} )
	oB71:Activate()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Relacao do Browse Mestre com os Detail
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oRB53B71 := FWBrwRelation():New()
	oRB53B71:AddRelation( oB53, oB71, {	;
		{ 'B71_FILIAL', 'xFilial( "B71" )' },;
		{ 'B71_ALIMOV', 'B53_ALIMOV' },;
		{ 'B71_RECMOV', 'B53_RECMOV' } } )
	oRB53B71:Activate()
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Set id e identificador do browse (menu) MenuDef
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If ( nFldId := AScan( aMtPadR,{|x| x[1] == 'B72' } ) ) > 0 .AND. Alltrim(FUNNAME()) != "TMKA271" 

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Interna-Saude
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB72 := FWmBrowse():New()
	oB72:SetOwner( oTFolder:aDialogs[nFldId] )
	oB72:SetProfileID( cValToChar(nFldId) )
	oB72:SetAlias( aMtPadR[nFldId,1] )
	oB72:SetDescription( aMtPadR[nFldId,2] )
	oB72:SetMenuDef( aMtPadR[nFldId,3] )
	oB72:DisableDetails()
	oB72:SetAmbiente(.F.)
	oB72:SetWalkThru(.F.)
	oB72:SetBlkBackColor( {||PLS_CORLIN} )
	oB72:Activate()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Relacao do Browse Mestre com os Detail
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oRB53B72 := FWBrwRelation():New()
	oRB53B72:AddRelation( oB53, oB72, {	;
		{ 'B72_FILIAL', 'xFilial( "B72" )' },;
		{ 'B72_ALIMOV', 'B53_ALIMOV' },;
		{ 'B72_RECMOV', 'B53_RECMOV' } } )
	oRB53B72:Activate()
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Set id e identificador do browse monitor de documentos
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If ( nFldId := AScan( aMtPadR,{|x| x[1] == "XXX" } ) ) > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Retornar os arquivo da pasta do operador
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	aFiles := o790C:GetFiles(o790C:cDirFax)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Monta o header do browse
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	AaDd(aHeader,{STR0020 ,{|x| aFiles[oXXX:At(),01] },"C","@!",1,60,0}) //"Arquivos"
	AaDd(aHeader,{STR0021 ,{|x| aFiles[oXXX:At(),02] },"C","@!",1,60,0}) //"Pastas"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Monitor de doc
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oXXX := FWBrowse():New()
	oXXX:SetOwner(oTFolder:aDialogs[nFldId])
	oXXX:SetDoubleClick( {|| o790C:GetDocBC(oXXX:At(),aFiles,"B53","B53_FILIAL+B53_CODOPE+B53_CODLDP+B53_CODPEG+B53_NUMERO+B53_ORIMOV"), oXXX:UpdateBrowse() } )
	oXXX:SetDataArray()
	oXXX:SetArray(aFiles)
	oXXX:SetColumns(aHeader)
	oXXX:SetDelete(.T.,{|| o790C:DelDocBC(oXXX:At(),aFiles), PLSATUXXX(oXXX,aFiles) } )
	//oXXX:SetAlias("TMP")
	oXXX:DisableConfig()
	oXXX:DisableReport()
	oXXX:SetBlkBackColor( {||PLS_CORLIN} )
	oXXX:Activate()
EndIf

SetKey(VK_F5, {|| PLS790OST() })
SetKey(VK_F6, {|| PLSCNGUIA(.T.) })
SetKey(VK_F7, {|| PLS790BAN('BE2',,'C') })
SetKey(VK_F8, {|| PLS790BAN('BE2',,'I') })
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Ativando componentes de tela
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oDlg:lCentered := .T.
oDlg:bRClicked := {|| }
oDlg:Activate()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Rest nas linhas do browse e na area
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
RestArea( aArea )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return NIL
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSATUXXX³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Atualiza monitor de fax									  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function PLSATUXXX(oXXX,aFiles)
aFiles := o790C:GetFiles(o790C:cDirFax)

oXXX:SetArray(aFiles)
oXXX:Refresh()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790ANA³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Faz a chamada do menu de analise da guia					  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790ANA(nTp)
LOCAL aArea		:= GetArea()
LOCAL cFil 		:= ""
LOCAL cAliGen	:= ""
LOCAL cChaveBE2	:= ""
LOCAL aFolder	:= {STR0022} //"Procedimentos"
LOCAL oFWLayer	:= NIL
LOCAL oPLUp 	:= NIL
LOCAL oPLDown	:= NIL
LOCAL oPLPro 	:= NIL
LOCAL oTFolder	:= NIL
LOCAL oB53Sit 	:= NIL
LOCAL aChvInd	:= {}
LOCAL aResFilt	:= {}
LOCAL aDadUsr   := {}
LOCAL nI		:= 0
Local aAreaB	:= B53->(GetArea())
LOCAL aValRet   := {} 
Local cQuery 	:= ''
Local aRet 		:= {}      
Local lVisGui   := B4A->(FieldPos("B4A_VISGUI")) > 0
local lVisRad   := GetNewPar("MV_PLVISRA", .F.)
Local aRetCrit  := {}

IF (nTp == 2 .AND. B53->B53_ROTGEN == "1")
   Alert (STR0059)
   Return
ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ quando prorrogação, verifica se a guia é de internação.
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If nTp == 2 .AND. AllTrim(B53->B53_TIPO) != "3"
	PutHelp("PPL790V",{"Esta guia não é do tipo internação."},{},{},.T.)
	Help("",1,"PL790V")
	Return
ElseIf nTp == 0 .and. (AllTrim(B53->B53_TIPO) == "3" .or. AllTrim(B53->B53_TIPO) == "11")
	if PPL790VDIA(B53->B53_NUMGUI, AllTrim(B53->B53_TIPO) )
		MsgAlert("Esta guia possui diárias a serem analisadas", "Atenção")
	endIf
EndIf

//Se habilitada a verificação de anexos para a guia estiver ativada
If (GetnewPAr("MV_PLSANXC", .F.))
	//Se a guia que estou tentando auditar for uma prorrogação de internação, preciso verificar se existe
	//anexo de radioterapia não visualizado vinculado a guia principal de internação. 
	cQuery :=  " SELECT *"
	cQuery += " FROM " + RetSqlName("B53") + " B53 "
	cQuery += " INNER JOIN  " + RetSqlName("B4Q") + " B4Q "
	cQuery += " ON B53.B53_NUMGUI = B4Q.B4Q_OPEMOV||B4Q.B4Q_ANOAUT||B4Q.B4Q_MESAUT||B4Q.B4Q_NUMAUT  " 
	cQuery += " INNER JOIN " + RetSqlName("B4A") + " B4A "
	cQuery += " ON B4Q.B4Q_GUIREF = B4A.B4A_GUIREF "
	cQuery += " WHERE "
	cQuery += " B4Q_FILIAL = '"+xFilial("B4Q")+"' "
	cQuery += " AND B53_FILIAL = '"+xFilial("B53")+"' "
	cQuery += " AND B4A_FILIAL = '"+xFilial("B4A")+"' "
	cQuery += " AND B53_NUMGUI = '"+B53->B53_NUMGUI+"' "
	cQuery += " AND B4A_AUDITO = '1' "
	cQuery += " AND B4A_CANCEL = '0' "
	cQuery += " AND B4A_TIPGUI = '08' " //se for radioterapia
	cQuery += " AND B4Q.D_E_L_E_T_ = ' '
	
	cQuery := ChangeQuery(cQuery)

	dbUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYVERPRO",.F.,.T.) 
	
	If(!QRYVERPRO->(Eof()) .And. lVisGui .And. lVisRad) //se trouxe registro, é pq está tentando auditar uma prorrogação de internação
		IF ( MSGYESNO("Você possui anexos de radioterapia vinculados a guia principal, que ainda não foram visualizados !" + CHR(13) + "Deseja visualizá-los agora ?") )
			aRet := PLANEXRADI(QRYVERPRO->B4A_GUIREF)
			
			If (aScan(aRet, {|x| x[4] = "Não"}))
				QRYVERPRO->(DBCloseArea())
				Return
			EndIf
			/*
			//se todos foram visualizados, informa o usuário e pergunta se quer prosseguir.
			If (!MSGYESNO("Todos os anexos de radioterapia foram visualizados, deseja prosseguir com a auditoria ? "))
				QRYVERPRO->(DBCloseArea())
				Return
			EndIf
			*/
			QRYVERPRO->(DBCloseArea())
		Else
			QRYVERPRO->(DBCloseArea())
			return
		EndIf
	Else
		QRYVERPRO->(DBCloseArea())
	EndIf
	
	//Se não parou na verificação da prorrogação verifica se os outros tipos de guia
	cQuery :=  " SELECT *"
	cQuery += " FROM " + RetSqlName("B4A") + " B4A "
	cQuery += " WHERE "
	cQuery += " B4A_FILIAL = '"+xFilial("B4A")+"' "
	cQuery += " AND B4A_GUIREF = '"+B53->B53_NUMGUI+"' "
	cQuery += " AND B4A_AUDITO = '1' "
	cQuery += " AND B4A_CANCEL = '0' "
	cQuery += " AND B4A_TIPGUI = '08' " //se for radioterapia
	cQuery += " AND B4A.D_E_L_E_T_ = ' '
	
	cQuery := ChangeQuery(cQuery)
			
	dbUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),"QRYVERANE",.F.,.T.)
	
	If(!QRYVERANE->(Eof()) .And. lVisGui .And. lVisRad) //se trouxe registro, é pq está tentando auditar uma internação
		IF ( MSGYESNO("Você possui anexos de radiotearpia que ainda não foram visualizados!" + CHR(13) + "Deseja visualisá-los agora ?") )
			aRet := PLANEXRADI(B53->B53_NUMGUI)
			
			If (aScan(aRet, {|x| x[4] = "Não"}))
				QRYVERANE->(DBCloseArea())
				Return
			EndIf
			/*
			//se todos foram visualizados, informa o usuário e pergunta se quer prosseguir.
			If (!MSGYESNO("Todos os anexos de radioterapia foram visualizados, deseja prosseguir com a auditoria ? "))
				QRYVERANE->(DBCloseArea())
				Return
			EndIf
			*/
			QRYVERANE->(DBCloseArea())
		Else
			QRYVERANE->(DBCloseArea())
			return
		EndIf
	Else
		QRYVERANE->(DBCloseArea())
	EndIf
EndIf


// Validação do Usuario para que não ocorra erros de gravação na auditoria
aDadUsr := PLSDADUSR(B53->B53_MATUSU,"1",.F.,dDataBase)
If (Len(aDadUsr) >= 2 .And. aDadUsr[1] == .F.)
	Aviso("Atenção","Critica - "+ aDadUsr[2,1,1]+" - "+aDadUsr[2,1,2]+" - Matricula"+"( "+aDadUsr[2,1,3]+" )", { "OK" }, 2 ) 
	Return
EndIF


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Lista de procedimento para negar participacao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If nTp == 1
	o790C:SetNegPar(.T.)
Else
	o790C:SetNegPar(.F.)
EndIf

If nTp == 0 .and. (B53->B53_SITUAC <> '2')
	PLS790RTG("2")
endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se pode analisar a guia
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If nTp == 2

	If !o790C:VldAcessoGui(.T.,.F.,.T.,,,.T.)
		Return
	EndIf

	nTp := 0
ElseIf nTp == 0 .And. !o790C:VldAcessoGui(.T.,.F.,.T.)
	Return
EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Redefine a aRotina
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
if B53->B53_STATUS <> '6'
	aRotina := {}
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ MsDialog
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	__oDlgAna := MSDialog():New(3,0,560,890,Iif(nTp == 0,'Analise da Auditoria','Procedimentos Autorizados' ),,,,,,,,,.T.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Cria o conteiner onde serão colocados s browses
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oFWLayer := FWLayer():New()
	oFWLayer:Init( __oDlgAna, .F.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Divisao da tela em duas linhas de 50%
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If nTp == 0
		oFWLayer:AddLine('Up',50,.F.)
		oFWLayer:AddLine('Down',50,.F.)
	Else
		oFWLayer:AddLine('Up',100,.F.)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Monta obj de Linha
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oPLUp := oFWLayer:GetLinePanel( 'Up' )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Analise de procedimentos
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If nTp == 0
		oPLDown := oFWLayer:GetLinePanel( 'Down' )
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Odonto ou Reembolso
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If o790C:lOdonto .Or. o790C:lReembolso
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Matriz do folter
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If o790C:lOdonto
			cAliGen := "BYS"
			AaDd(aFolder,STR0023) //"Dentes/Faces"
		ElseIf o790C:lReembolso
			cAliGen := "B47"
			AaDd(aFolder,STR0024) //"Composição"
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Folter
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oTFolder 		:= TFolder():New( 000,000,aFolder,,oPLUp,,,,.T.,,449,140)
		oTFolder:Align:= CONTROL_ALIGN_ALLCLIENT
		oPLPro 			:= oTFolder:aDialogs[1]
	Else
		oPLPro := oPLUp
	EndIf

	If o790C:cAIte == "BE2"

		dbSelectArea("BE2")
		dbSetOrder(1)

		cChaveBE2 := xFilial("BE2")+Left(B53->B53_NUMGUI,4)+SubStr(B53->B53_NUMGUI,5,4)+SubStr(B53->B53_NUMGUI,9,2)+ Right(B53->B53_NUMGUI,8)

		If dbSeek(cChaveBE2)
			While !BE2->(Eof()) .And. BE2->(BE2_FILIAL+BE2_OPEMOV+BE2_ANOAUT+BE2_MESAUT+BE2_NUMAUT) == cChaveBE2
				If BE2->BE2_QTDSOL == 0
					BE2->(Reclock("BE2",.F.))
					BE2->BE2_QTDSOL :=  BE2->BE2_QTDPRO
					BE2->(MsUnlock())
				EndIf
				BE2->(DbSkip())
			EndDo
		EndIf
	EndIf

	IF !o790C:lRotinaGen
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Monta filtro de Itens
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	cFil := "@"     + o790C:cAIte+"_FILIAL = '" + xFilial("B53") + "' "
	cFil += " AND " + o790C:cAIte+"_OPEMOV = '" + Left(B53->B53_NUMGUI,4) + "' "
	cFil += " AND " + o790C:cAIte+"_ANOAUT = '" + SubStr(B53->B53_NUMGUI,5,4)+ "' "
	cFil += " AND " + o790C:cAIte+"_MESAUT = '" + SubStr(B53->B53_NUMGUI,9,2)+ "' "
	cFil += " AND " + o790C:cAIte+"_NUMAUT = '" + Right(B53->B53_NUMGUI,8)+ "' "
	cFil += " AND " + o790C:cAIte+"_AUDITO = '1' "
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ,0ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Somente procedimentos autorizados
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If nTp == 1
		cFil += " AND " + o790C:cAIte + "_STATUS = '1' "
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Verifica campo conforme a guia
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	cFil := o790C:SetFieldGui(cFil)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Browse Procedimentos
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	ELSE
		aChvInd  := PLSVerInd(1)
		aResFilt := PLSMntChvG(aChvInd,1)
		IF (!aResFilt[1])
			Return
		ELSE
			cFil := aResFilt[2]
		ENDIF
		
	ENDIF

	oBPRO := FWmBrowse():New()
	oBPRO:SetOwner( oPLPro )
	oBPRO:SetAlias( o790C:cAIte )
	oBPRO:SetDescription( aFolder[1] )

	If nTp == 0
		oBPRO:SetMenuDef( 'XXXXX' )
	Else
		oBPRO:SetMenuDef( "PLSANALM" )
	EndIf
	oBPRO:DisableDetails()
	oBPRO:DisableSaveConfig()
	oBPRO:SetProfileID( "100" )
	oBPRO:SetBlkBackColor( {||PLS_CORLIN} )
	oBPRO:SetAmbiente(.F.)
	oBPRO:SetWalkThru(.F.)
	oBPRO:SetFilterDefault(cFil)
	IF !o790C:lRotinaGen .AND. o790C:cAIte <> "B4C" 
		oBPRO:AddLegend( o790C:cAIte + "_STATUS == '1' ", "GREEN", STR0011,,.F. ) // "Autorizada"
		oBPRO:AddLegend( o790C:cAIte + "_STATUS == '0' ", "RED" 	, STR0013,,.F. ) // "Não Autorizada"
	ENDIF
	//-------------------------------------------------------------------
	//  LGPD
	//-------------------------------------------------------------------
	objCENFUNLGP:useLogUser()
	oBPRO:Activate()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Analise de procedimentos
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If nTp == 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Odontologico ou Reembolso
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If o790C:lOdonto .Or. o790C:lReembolso
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			//³ Browse
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			oBGEN := FWmBrowse():New()
			oBGEN:SetOwner( oTFolder:aDialogs[2] )
			oBGEN:SetAlias( cAliGen )
			oBGEN:SetDescription( aFolder[2] )
			oBGEN:SetMenuDef( 'XXXXX' )
			oBGEN:DisableDetails()
			oBGEN:DisableSaveConfig()
			oBGEN:SetProfileID( "101" )
			oBGEN:SetBlkBackColor( {||PLS_CORLIN} )
			oBGEN:SetAmbiente(.F.)
			oBGEN:SetWalkThru(.F.)
			oBGEN:Activate()
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			//³ Relacao do Browse Mestre com os Detail
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			oRPROGEN := FWBrwRelation():New()
			oRPROGEN:AddRelation( oBPRO, oBGEN, {	;
				{ cAliGen+'_FILIAL', 'xFilial("' + cAliGen + '")' },;
				{ cAliGen+'_OPEMOV', o790C:SetFieldGui(o790C:cAIte+'_OPEMOV') },;
				{ cAliGen+'_ANOAUT', o790C:SetFieldGui(o790C:cAIte+'_ANOAUT') },;
				{ cAliGen+'_MESAUT', o790C:SetFieldGui(o790C:cAIte+'_MESAUT') },;
				{ cAliGen+'_NUMAUT', o790C:SetFieldGui(o790C:cAIte+'_NUMAUT') },;
				{ cAliGen+'_SEQUEN', o790C:cAIte+'_SEQUEN' } } )
			oRPROGEN:Activate()
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Browse Criticas
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

		aRetCrit := CheckGrvCrit(o790C:cACab,o790C:cAIte, o790C:cACri, B53->B53_NUMGUI)

		If Len(aRetCrit) > 0
			GrvCritAud(o790C:cACri,aRetCrit,B53->B53_NUMGUI)
		EndIf

		oBCRI := FWmBrowse():New()
		oBCRI:SetOwner( oPLDown )
		oBCRI:SetDescription( "Criticas" ) //"Criticas"
		oBCRI:SetMenuDef( "PLSANALM" )
		oBCRI:SetAlias( o790C:cACri )
		oBCRI:SetProfileID( "102" )
		oBCRI:DisableDetails()
		oBCRI:ForceQuitButton()
		oBCRI:SetAmbiente(.F.)
		oBCRI:SetWalkThru(.F.)
		oBCRI:SetBlkBackColor( {||PLS_CORLIN} )
		oBCRI:Activate()

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Relacao do Browse Mestre com os Detail
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oRPROCRI := FWBrwRelation():New()
		
		if (!o790C:lRotinaGen)
			
			oRPROCRI:AddRelation( oBPRO, oBCRI, {	{ o790C:cACri+'_FILIAL', 'xFilial("' + o790C:cACri + '")' },;
													{ o790C:SetFieldGui(o790C:cACri+'_OPEMOV'), o790C:SetFieldGui(o790C:cAIte+'_OPEMOV') },;
													{ o790C:SetFieldGui(o790C:cACri+'_ANOAUT'), o790C:SetFieldGui(o790C:cAIte+'_ANOAUT') },;
													{ o790C:SetFieldGui(o790C:cACri+'_MESAUT'), o790C:SetFieldGui(o790C:cAIte+'_MESAUT') },;
													{ o790C:SetFieldGui(o790C:cACri+'_NUMAUT'), o790C:SetFieldGui(o790C:cAIte+'_NUMAUT') },;
													{ o790C:cACri+'_SEQUEN', o790C:cAIte+'_SEQUEN' } } )
		else
			
			aChvInd  := PLSVerInd(2)
			aResFilt := PLSMntChvG(aChvInd,2)
			
			if ! aResFilt[1]
				return
			else
				oRPROCRI:AddRelation( oBPRO, oBCRI,  aResFilt[3]  )
			endIf
			
		endIf
		
		oRPROCRI:Activate()

		//Filtro se ja foi analisada
		cFil := o790C:cACri+'_PENDEN <> "0" .AND. ' + o790C:cACri+'_CODGLO <> " " '

		oBCRI:addFilter( STR0026,cFil,.T.,.T.) //"Pendente"
		
		//Executa filtro
		oBCRI:refresh(.t.)

	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Ativando componentes de tela
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		__oDlgAna:lCentered := .T.
		__oDlgAna:Activate()
else
	MSGALERT("Esta guia foi cancelada.")
	Return
endif


If Existblock("PLSGRB53")
	Execblock("PLSGRB53", .F., .F., {B53->(Recno())} )
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Rest nas linhas do browse e na area
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
PLSADESV()

If o790C:cAIte == "B4C" 
	B4A->(DbSetOrder(1))
	If B4A->(MsSeek(xFilial("B4A") + o790C:cNumGuia))
	
		If B4A->B4A_GUIREF == cGuia 
		 
			aValRet := PLSCFGUAX(cGuia) 
			IF (Len(aValRet[1]) == 0)
				PLSCNGUIA()
			EndIf 
		EndIf
	EndIf
EndIf  

If oBCRI:LACTIVATE
	oBCRI:CleanFilter()
EndIf	

Return NIL


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790ALS³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Faz a chamada do botao acao para analise da guia Get       ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790ALS(cAlias, oDialog)

LOCAL oPADC 	 	:= PLSPADRC():New(cAlias)
LOCAL oB72		 	:= NIL
LOCAL oB70		 	:= NIL
Local oB2I			:= NIL
LOCAL nOperation 	:= MODEL_OPERATION_INSERT
LOCAL lOk		 	:= .F.
Local aButtons  	:= {}
Local nOpcao 		:= 3
Local nOpec  		:= 0
Local bOK			:= {|| nOpec := 1, IIF (lOk := oPADC:VWOkButtonVLD(oModel2C,cAlias), oDlg:End(),.F.)}
Local bCancel		:= {|| nOpec := 2, oDlg:End()}
Local cCodTbPad		:= ""
Local cAliasGr		:= "B2I"
Local cAliasIt		:= ""
Local cCodPro		:= ""
Local cCodTb		:= ""
Local aValRet		:= {}
Local cTipProc		:= ""
Local cTipoGuia		:= ""
Local nI			:= 0
Local lHabNgo 		:= GetNewPar("MV_NEGOPME", .F.)
Local lHabVrfAnx	:= GetnewPAr("MV_PLSANXC", .F.)
Local lAudGuia      := .F.

Private oDlg

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Alimenta variavel static para exibicao no ultimo registro de critina B72
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If oPADC:lMDAnaliseGui .And. !o790C:lIntSau .AND. !o790C:lRotinaGen .And. (o790C:cACri)->&(o790C:cACri+"_PENDEN") == "1"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se o registro existe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB72 := PLSREGIC():New()
	oB72:GetDadReg("B72",1, xFilial("B72") + B53->(B53_ALIMOV+B53_RECMOV) + (o790C:cAIte)->&( o790C:cAIte+"_SEQUEN" ) + (o790C:cACri)->&(o790C:cACri+"_CODGLO"),,,.F. )

	If oB72:lFound
		nOperation := MODEL_OPERATION_UPDATE
	EndIf
	oB72:Destroy()
EndIf

//Localiza Anexos
IF lHabVrfAnx
	aValRet := PLSCFGUAX(B53->B53_NUMGUI, , , .T.)
	
	//Incluindo as guias de radioterapia para precedência de verificação caso elas existam  
	For nI := 1 To Len(aValRet[1])
		If (aValRet[1][nI][2] <> "08") //Se não é guia de radioterapia e esta neste array é pq não foi auditada
			lAudGuia := .T.
			EXIT
		EndIf 
	NEXT
	
	IF ( lAudGuia ) //Audita anexo ?
		IF ( MSGYESNO(STR0042 + CHR(13) + STR0043) ) //Você possui guias de Anexos Clínicos não Auditadas. Não é possível prosseguir!#Deseja auditá-las agora?
			nCodRec := B53->(Recno())
			cGuia   := B53->B53_NUMGUI 
			
			oB53:SetFilterDefault(aValRet[2])
			oB53:Refresh(.T.)
			aSize(aValRet,0)

			oDialog:End()
			Return
		ELSE
			lRegT := .T. //Se clicar em não, a janela não é exibida, visto que devemos auditar os anexos primeiro.
			aSize(aValRet,0)
		ENDIF
	ENDIF
ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ se o procedimento pode ser auditado
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
if lRegT
	lRegT := .F. //COmo o Form volta ao estado ativo (insert), flag contorna este problema
	Return
ElseIf !o790C:VldAcessoGui(.T.,.F.,.T.,.T.)
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se o procedimento for paticipativo e existir registro no folder participativo
//  o auditor é informado no momento de auditar o procedimento.
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If BE2->( FieldPos("BE2_PARTIC") ) > 0
	o790C:ProcPart()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Entrada de dados da analise GET
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

oDlg := MSDialog():New(3,0,580,930,STR0035 + B53->B53_NUMGUI,,,,,,,,,.T.)
oFWLayer := FWLayer():New()
oFWLayer:Init( oDlg, .F.)

//Verifico se existe procedimento na BR8 e em seguida, pego se o procedimento é Ortese/Protese
IF (!o790C:lRotinaGen)

	DbSelectArea("BR8")
	DbSetOrder(1)
	IF ( BR8->(DbSeek(xFilial("BR8")+(o790C:cAIte)->&(o790C:cAIte+"_CODPAD") + (o790C:cAIte)->&(o790C:cAIte+"_CODPRO"))) )
		cTipProc := BR8->BR8_TPPROC
	ENDIF
//Pego o tipo de guia na B4A, se vem de OPME
	DbSelectArea("B4A")
	DbSetOrder(1)
	IF ( B4A->(DbSeek(xFilial("B4A")+B53->B53_NUMGUI)) )
		cTipoGuia := B4A->B4A_TIPGUI
	ENDIF

	IF (lHabNgo)
		IF ( (AllTrim(B53->B53_TIPO) == '6' .AND. cTipoGuia == "09") .OR. (cTipProc == "5" ) )
  //PLSADOPME (Tabela de Gravação, Número da Guia, Insercao/Edicao cAliasgr, Cód. RDA, Cód_Operador, Tabela Movimento, Cód. Tabela, Cód. Procedimento, Sequencia)
			Aadd(aButtons, {"HISTORIC", {|| PLSADOPME(cAliasGr,B53->B53_NUMGUI,nOpcao, B53->B53_CODRDA, B53->B53_OPERAD, B53->B53_ALIMOV,(o790C:cAIte)->&(o790C:cAIte+"_CODPAD"),;
				(o790C:cAIte)->&(o790C:cAIte+"_CODPRO"), (o790C:cAIte)->&(o790C:cAIte+"_SEQUEN"), ;
				(o790C:cAIte)->&(o790C:cAIte+"_DATPRO"), B53->B53_RECMOV, (o790C:cACri)->&(o790C:cACri+"_CODGLO"), oModel, oView )}, STR0032})  //Negociação de OPME

			Aadd(aButtons, {"HISTORIC", {|| PLSAHOPME("",B53->B53_NUMGUI,Nil,B53->B53_CODRDA,B53->B53_OPERAD,B53->B53_ALIMOV,(o790C:cAIte)->&(o790C:cAIte+"_CODPAD"),;
				(o790C:cAIte)->&(o790C:cAIte+"_CODPRO"), "")}, STR0033})  //Histórico de OPME
		ENDIF
	ENDIF
ENDIF

if BRW->(FieldPos("BRW_TABDUT")) > 0 .And. BRW->(FieldPos("BRW_CODDUT")) > 0
	Aadd(aButtons, {"HISTORIC", {|| PL790DUT( (o790C:cAIte)->&(o790C:cAIte+"_CODPAD"),(o790C:cAIte)->&(o790C:cAIte+"_CODPRO") ) },STR0069})//"DUT"
endIf 

oFWLayer:AddLine('Up',90,.F.)
oPLUp 	 := oFWLayer:GetLinePanel( 'Up' )

oModel  := FWLoadModel("PLSANALM")
oModel2C := oModel //Clonar oModel, pois ao abrir o outro form, fica com o valor do antigo oModel
oModel:SetOperation(nOperation)
oModel:Activate()

oView := FWLoadView("PLSANALM")
oView:SetModel(oModel)
oView:SetOperation(nOperation)
oView:SetOwner(oPLUp)
oView:EnableControlBar(.F.)
oView:SetUseCursor(.F.)
oView:Activate()

if o790C:lCriDia
	if Alltrim(B53->B53_TIPO) == "3"
		BE4->(dbSetOrder(2))
		if BE4->(dbSeek( xFilial("BE4")+B53->B53_NUMGUI))
			oModel:GetModel("PLSANALMMD"):SetValue("B72_DIASOL", BE4->BE4_DIASSO)
			oView:Refresh()
		endIf
	elseif Alltrim(B53->B53_TIPO) == "11"
		B4Q->(dbSetOrder(1))
		if B4Q->(dbSeek(xFilial("B4Q")+B53->B53_NUMGUI))
			oModel:GetModel("PLSANALMMD"):SetValue("B72_DIASOL", B4Q->B4Q_QTDADD)
			oView:Refresh()
		endIf
	endIf
endIf

//----Setar valores do item posicionado-----
//Utilizo o fieldpos pois nem sempre o campo existe em todos os alias
//Retirado FieldPos do campo B72_VLRAPR pois o campo é virtual e sempre retornava 0.
//if B72->(fieldPos('B72_VLRAPR')) > 0
	
If (o790C:cAIte)->(FieldPos(o790C:cAIte+"_VLRAPR")) > 0

	oModel:GetModel('PLSANALMMD'):LoadValue('B72_VLRAPR', (o790C:cAIte)->&(o790C:cAIte+"_VLRAPR"))
	
elseIf ( o790c:cAIte == "B4C" .and. (o790C:cAIte)->(FieldPos(o790C:cAIte+"_VLRUNT")) > 0 )
	
	oModel:GetModel('PLSANALMMD'):LoadValue('B72_VLRAPR', (o790C:cAIte)->&(o790C:cAIte+"_VLRUNT"))
	
EndIf
	
//endIf	

if ( (o790C:cAIte)->(FieldPos(o790C:cAIte+"_QTDSOL")) > 0 .And. (o790C:cAIte)->&(o790C:cAIte+"_QTDSOL") != 0 )
 
	oModel:GetModel('PLSANALMMD'):LoadValue('B72_QTDSOL', (o790C:cAIte)->&(o790C:cAIte+"_QTDSOL"))

elseIf o790C:cAIte == "B45"
 
	oModel:GetModel('PLSANALMMD'):LoadValue('B72_QTDSOL', (o790C:cAIte)->&(o790C:cAIte+"_QTDPRO"))
	
endIf

oModel:GetModel('PLSANALMMD'):LoadValue('B72_CODPRO', (o790C:cAIte)->&(o790C:cAIte+"_CODPRO"))

If (o790C:cAIte)->(FieldPos(o790C:cAIte+"_DESPRO")) > 0
	oModel:GetModel('PLSANALMMD'):LoadValue('B72_DESPRO', (o790C:cAIte)->&(o790C:cAIte+"_DESPRO"))
EndIf

oView:Refresh()
//------------------------------------------

oDlg:bInit 		:= { || EnchoiceBar(oDlg,bOk,bCancel,.F.,aButtons) }
oDlg:lcentered 	:= .T.
oModBkp := NIL
aModBkp := {oModel, oView}
oDlg:Activate()

If (nOpec == 1)
	oPADC:MDPosVLD(oModel2C, cAlias)  //Pós-Validação do Model
	oPADC:MDCommit(oModel2C, cAlias)  //Commit do Model
	lRegT := .T.		
          
	//Atualiza Valor unitario autorizado na B4C
	IF (o790c:cAIte == "B4C" .AND. (o790C:cAIte)->(FieldPos("B4C_VLRUNA")) >0)
		IF (B4C->B4C_STATUS = "1" .AND. B4C->B4C_AUDITO = "0" .AND. B4C->B4C_VLRUNA = 0)
			B4C->(RecLock("B4C",.F.))
			
		   IF Empty(oModel:AALLSUBMODELS)

				If B2I->B2I_NUMGUI == B53->B53_NUMGUI

					B4C->B4C_VLRUNA := B2I->B2I_VLNEGO
				Else
					B4C->B4C_VLRUNA := M->B72_VLRAUT
				EndIf
			Else
				B4C->B4C_VLRUNA := M->B72_VLRAUT 
			EndIf 

			B4C->(MsUnlock())
		ENDIF
	ENDIF
ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza browse de itens
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oBPRO:Refresh(.T.)
oBCRI:Refresh(.T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return (lRegT)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790VAO³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Faz a chamada do menu relacionado a antiga auditoria		³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790VAO(cTipo)
LOCAL aArea     	:= GetArea()
LOCAL cOpeMov		:= B53->B53_CODOPE
LOCAL cChaveCab		:= B53->B53_NUMGUI
LOCAL cMatUsu		:= B53->B53_MATUSU
LOCAL cAliMov		:= B53->B53_ALIMOV
LOCAL cRecMov		:= B53->B53_RECMOV
LOCAL cMatric		:= SubStr(cMatUsu,9,6)
LOCAL cMtOpEm		:= SubStr(cMatUsu,1,14)
LOCAL cAnoAut		:= SubStr(B53->B53_NUMGUI,5,4)
LOCAL cMesAut		:= SubStr(B53->B53_NUMGUI,9,2)
LOCAL cNumAut		:= Right(B53->B53_NUMGUI,8)
LOCAL dDataDe		:= CToD('')
LOCAL dDataAte		:= CToD('')
LOCAL cSequen		:= IIF (!B53->B53_ROTGEN == "1", (o790C:cAIte)->&( o790C:cAIte+"_SEQUEN" ), "")
LOCAL cCodPad 	:= IIF (!B53->B53_ROTGEN == "1", (o790C:cAIte)->&( o790C:cAIte+"_CODPAD" ), "")
LOCAL cCodPro 	:= IIF (!B53->B53_ROTGEN == "1", (o790C:cAIte)->&( o790C:cAIte+"_CODPRO" ), "")
LOCAL cDesPro		:= ""
LOCAL dDatPro		:= IIF (!B53->B53_ROTGEN == "1", DTOS( (o790C:cAIte)->&( o790C:cAIte+"_DATPRO" ) ), "")
LOCAL cHorPro		:=""

LOCAL nQtdPro		:= IIF (!B53->B53_ROTGEN == "1", (o790C:cAIte)->&( o790C:cAIte+"_QTDPRO" ), "")
LOCAL cChvNiv 	:= IIF (!B53->B53_ROTGEN == "1", (o790C:cAIte)->&( o790C:cAIte+"_CHVNIV" ), "")
LOCAL cNivCri 	:= IIF (!B53->B53_ROTGEN == "1", (o790C:cAIte)->&( o790C:cAIte+"_NIVCRI" ), "")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Private
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
PRIVATE aHeader 		:= {}
PRIVATE aCols   		:= {}
PRIVATE aProAud 		:= {}
PRIVATE cFiltro 	 	:= ""
PRIVATE cRecProAud	:= 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Como o parametro lProperty nao foi enviado como TRUE para a msmget
//³ e a aRotina devolvido pelo model vem vazio tenho que redefinir
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Aadd(aRotina,{"","",0,1})	// "Pesquisar"
Aadd(aRotina,{"","",0,2})	// "Visualizar"
Aadd(aRotina,{"","",0,3})	// "Incluir"
Aadd(aRotina,{"","",0,4})	// "Alterar"
Aadd(aRotina,{"","",0,5})	// "Excluir"

cHorPro		:= IIF (!B53->B53_ROTGEN == "1", Iif( (o790C:cAIte)->( FieldPos(o790C:cAIte+"_HORPRO") ) > 0,(o790C:cAIte)->&( o790C:cAIte+"_HORPRO" ),;
	Iif(!o790C:cACab $ ("B4A,BOW"), (o790C:cACab)->&( o790C:cACab+"_HORPRO" ), B53->b53_HORMOV) ), "")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Solicita data de ate
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

If cTipo == "16" .Or. cTipo == "17" .Or. cTipo == "18" .Or. cTipo == "19" .Or. cTipo == "20" .Or. cTipo == "21"
	Pergunte("PLA790",.T.)
	dDataDe  := MV_PAR01
	dDataAte := MV_PAR02
EndIf

// Preenche a descricao do procedimento.
cDesPro := Posicione("BR8",1,xFilial("BR8")+cCodPad+cCodPro,"BR8_DESCRI")

IF (B53->B53_ROTGEN == "1")
  Alert (STR0059)
  Return
ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Sub-Menu
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Do Case
	Case cTipo == '1'
		PLS790CON( '2',cChaveCab,.T. )
	Case cTipo == '2'
		PLS790CON( '1',cChaveCab,.T. )
	Case cTipo == '3'
		PLS790RDA( '1',cChaveCab )
	Case cTipo == '4'
		PLS790RDA( '2',cChaveCab )
	Case cTipo == '5'
		PLS790RDA('3', cChaveCab )
	Case cTipo == '6'
		PLS790COB( cMatUsu )
	Case cTipo == '7'
		PLHISMOV( cMatUsu )
	Case cTipo == '8'
		PLSA790GUIA( cChaveCab,B53->B53_TIPO ) 
	Case cTipo == '9'
		PLPOSFIN( cMtOpEm )
	Case cTipo == '10'
		PLS790CRI( cMtOpEm,cChaveCab )
	Case cTipo == '11'
		PLSMSGCA( cMatUsu )
	Case cTipo == '12'
		PLSVSCLACAR( cMatUsu )
	Case cTipo == '13'
		PLS790PRO( cNivCri,cChaveCab,cChvNiv,cCodPad,cCodPro )
	Case cTipo == '14'
		PLSA940()
	Case cTipo == '15'
		PLS790CBT( cMatric,cCodPad,cCodPro,cChaveCab,dDatPro,cHorPro,nQtdPro,cDesPro,cSequen )
	Case cTipo == '16'
		PLMOVGEN( '1','Movimentos do procedimento',dDataDe,dDataAte,,cCodPad,cCodPro,cDesPro,cChaveCab )
	Case cTipo == '17'
		PLMOVGEN( '3','Movimentos do prestador',dDataDe,dDataAte,,cCodPad,cCodPro,cDesPro,cChaveCab )
	Case cTipo == '18'
		PLMOVGEN( '2','Movimentos do CID',dDataDe,dDataAte,,cCodPad,cCodPro,cDesPro,cChaveCab )
	Case cTipo == '19'
		PLMOVGEN( '4','Movimentos do solicitante',dDataDe,dDataAte,,cCodPad,cCodPro,cDesPro,cChaveCab )
	Case cTipo == '20'
		PLMOVGEN( '5','Movimentos do executante',dDataDe,dDataAte,,cCodPad,cCodPro,cDesPro,cChaveCab )
	Case cTipo == '21'
		PLMOVGEN( '6','Custo/Receita',dDataDe,dDataAte,,cCodPad,cCodPro,cDesPro,cChaveCab )
	Case cTipo == '22'
		PL790NMAUD( cAliMov,cRecMov,cSequen )
	Case cTipo == '23'
		PL790NMAUD( cAliMov,cRecMov )
	Case cTipo == '24'
		PL790DUT( cCodPad,cCodPro )	
EndCase
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Rest nas linhas do browse e na area
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
RestArea( aArea )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da funcao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790VPR³ Autor ³ Totvs                  ³ Data ³ 09.03.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Faz a chamada do menu alteracao da prioridade	  	      ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790VPR()
LOCAL cPrio:= ""

IF (B53->B53_ROTGEN == "1")
	Alert(STR0059)
	Return
ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se tem acesso a guia
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !o790C:VldAcessoGui()
	Return
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Pergunte
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If Pergunte("PLS790PRIO",.T.)
	cPrio := cValToChar(MV_PAR01-1)
Else
	Return(.T.)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Altera propriedade
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !Empty(cPrio)
	o790C:SetPrioridade(cPrio)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da funcao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790VFI³ Autor ³ Totvs                  ³ Data ³ 09.03.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Faz a chamada do menu para tratamento do filtro			  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790VFI()
LOCAL nI   := 1
LOCAL aRet := {}

IF (B53->B53_ROTGEN == "1")
   Alert (STR0059)
   Return
ENDIF
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se existir ponto de entra executa filtro
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If ExistBlock("PLSAUDFI")

	aRet := ExecBlock("PLSAUDFI",.F.,.F.,{})
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Limpa os filtros
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:CleanFilter()
	oB53:CleanExFilter()
    oB53:DeleteFilter("CUSTOM")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Retorno do PE
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If Len(aRet)> 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Seta filtro selecionado
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		For nI:=1 To Len(aRet)
			oB53:AddFilter( aRet[nI,1],aRet[nI,3],.T.,.T.,aRet[nI,2],,,"CUSTOM" )
			oB53:SetFilterDefault(aRet[nI,3])
			oB53:Refresh(.T.)
		Next
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Executa o filtro
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:Refresh()

EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da funcao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return()
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790RTG³ Autor ³ Totvs                  ³ Data ³ 09.03.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Faz a chamada do menu para trabalhar o situac da guia	  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790RTG(cSituac)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Ajuste da situacao da guia
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
o790C:SetSituac(cSituac)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da funcao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790BAN³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Faz Chama do menu para banco de conhecimento				    ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790BAN(cAlias,lChkDeman,cTipo)

IF (B53->B53_ROTGEN == "1")
	Alert (STR0059)
	Return
ENDIF
//-------------------------------------------------------------------
//  LGPD
//-------------------------------------------------------------------
	objCENFUNLGP:useLogUser()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Carrega o banco de conhecimento
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If AllTrim(B53->B53_TIPO) != "6"
	if cTipo == "C"
		o790C:BancoCon("BEA",lChkDeman,,,cTipo)
	else
		o790C:BancoCon(cAlias,lChkDeman,,,cTipo)
	endif
Else
	if cTipo == "C"
		o790C:BancoCon("B4A",lChkDeman,,,cTipo)
	else
		o790C:BancoCon("B4C",lChkDeman,,,cTipo)
	endif
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da funcao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790OST³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Somente para atualizar o browse quando esta outro modelo   ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790OST()
oB53:Refresh()
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790ITS³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Somente para atualizar o browse quando esta outro modelo   ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790ITS()

If Type("oB72") <> "U"

	oB72:Refresh()
EndIf

oB73:Refresh()

Return(.T.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790INS³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Retorna se o operador logado e de interna saude			  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790INS()
o790C:SetAtuPClass()
Return(o790C:lIntSau)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790GEC³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Retorna o OBJ controle					  				  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790GEC()
o790C:SetAtuPClass()
Return(o790C)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790ICO³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Faz a chamada do menu para interacao com auditoria interna ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790ICO()
LOCAL aArea     	:= GetArea()
LOCAL cFil 		:= ""
LOCAL oFWLayer 	:= NIL
LOCAL oPLUp 		:= NIL
LOCAL oPLDown   	:= NIL
LOCAL oDlg			:= NIL

IF (B53->B53_ROTGEN == "1")
	Alert (STR0059)
	Return
ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se pode analisar a guia
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !o790C:VldAcessoGui(.F.,.T.)
	Return
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Redefine a aRotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
aRotina := {}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ MsDialog
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oDlg := MSDialog():New(3,0,560,890,'Inconsistência',,,,,,,,,.T.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Quando nao for interna-saude
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !o790C:lIntSau
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Conteiner do browse
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oFWLayer := FWLayer():New()
	oFWLayer:Init( oDlg, .F.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Divisao da tela em duas linhas de 50%
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oFWLayer:AddLine('Up',50,.F.)
	oFWLayer:AddLine('Down',50,.F.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Monta obj de Linha
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oPLUp 	 := oFWLayer:GetLinePanel( 'Up' )
	oPLDown := oFWLayer:GetLinePanel( 'Down' )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Monta filtro
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	cFil := " B72_FILIAL = '" + xFilial("B53")  + "' "
	cFil += " .AND. " + "B72_ALIMOV = '" + B53->B53_ALIMOV + "' "
	cFil += " .AND. " + "B72_RECMOV = '" + B53->B53_RECMOV + "' "
	cFil += " .AND. " + "B72_OPERAD = '" + o790C:cOperad   + "' "
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Se a guia ainda estiver com inconsistencia
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If o790C:lInconsistente
		cFil += " .AND. " + "B72_INCONS = '1' "
	Else
		cFil += " .AND. " + "B72_INCONS = '3' "
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Browse Procedimentos
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB72 := FWmBrowse():New()
	oB72:SetOwner( oPLUp )
	oB72:SetAlias( "B72" )
	oB72:SetDescription( "Interna-Saúde" ) //"Interna-Saúde"
	oB72:SetMenuDef( "PLSINSAM" )
	oB72:DisableDetails()
	oB72:DisableSaveConfig()
	oB72:SetProfileID( "100" )
	oB72:SetBlkBackColor( {||PLS_CORLIN} )
	oB72:SetAmbiente(.F.)
	oB72:SetWalkThru(.F.)
	oB72:SetFilterDefault(cFil)
	oB72:Activate()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Interacao analise x interna-saude
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB73 := FWmBrowse():New()
	oB73:SetOwner( oPLDown )
	oB73:SetAlias( "B73" )
	oB73:SetDescription( STR0029 ) //"Interação com Auditor"
	oB73:SetMenuDef( "PLSINAUM" )
	oB73:DisableDetails()
	oB73:DisableSaveConfig()
	oB73:SetProfileID( "101" )
	oB73:SetBlkBackColor( {||PLS_CORLIN} )
	oB73:ForceQuitButton()
	oB73:SetAmbiente(.F.)
	oB73:SetWalkThru(.F.)
	oB73:Activate()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Relacao do Browse Mestre com os Detail
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB72B73 := FWBrwRelation():New()
	oB72B73:AddRelation( oB72, oB73, {	;
		{ 'B73_FILIAL', 'xFilial("B72")' },;
		{ 'B73_ALIMOV', 'B72_ALIMOV' },;
		{ 'B73_RECMOV', 'B72_RECMOV' },;
		{ 'B73_SEQPRO', 'B72_SEQPRO' },;
		{ 'B73_CODGLO', 'B72_CODGLO' } } )
	oB72B73:Activate()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Interna-Saude
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Filtro
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	cFil := "@"     + "B73_FILIAL = '" + xFilial('B53') + "' "
	cFil += " AND " + "B73_ALIMOV = '" + B72->B72_ALIMOV + "' "
	cFil += " AND " + "B73_RECMOV = '" + B72->B72_RECMOV + "' "
	cFil += " AND " + "B73_SEQPRO = '" + B72->B72_SEQPRO + "' "
	cFil += " AND " + "B73_CODGLO = '" + B72->B72_CODGLO + "' "
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Para analise da interna-saude
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB73 := FWmBrowse():New()
	oB73:SetOwner( oDlg )
	oB73:SetDescription( STR0030 )//"Interação com Auditor Interna-Saúde"
	oB73:SetMenuDef( "PLSINAUM" )
	oB73:SetAlias( "B73" )
	oB73:SetProfileID( "101" )
	oB73:DisableDetails()
	oB73:ForceQuitButton()
	oB73:SetAmbiente(.F.)
	oB73:SetWalkThru(.F.)
	oB73:SetFilterDefault(cFil)
	oB73:SetBlkBackColor( {||PLS_CORLIN} )
	oB73:Activate()
EndIf

//-------------------------------------------------------------------
//  LGPD
//-------------------------------------------------------------------
	objCENFUNLGP:useLogUser()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Ativando componentes de tela
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oDlg:lCentered := .T.
oDlg:Activate()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Rest nas linhas do browse e na area
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
RestArea( aArea )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return NIL
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790NEG³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Faz a chamada para negar a participacao 					  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790NEG()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se pode analisar a guia
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !o790C:VldAcessoGui(.F.)
	Return
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Negar participacao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
o790C:NegComp()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(.T.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790EML³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Faz a chamada para envio de email						  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790EML()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se pode analisar a guia
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !o790C:VldAcessoGui()
	Return
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Envio de E-Mail
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
MsAguarde( {|| o790C:EMail() }, 'Enviando E-Mail' , "Aguarde...", .F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return NIL
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790TDE³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Faz a transferencia para demanda							  		³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790TDE()

IF (B53->B53_ROTGEN == "1")
   Alert(STR0059)
   Return
ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se pode analisar a guia
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !o790C:VldAcessoGui()
	Return
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Coloca a guia em demanda
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
o790C:SetDemanda()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return NIL
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790RVQ³ Autor ³ Totvs                  ³ Data ³ 16.02.11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Retorna o valor autorizado e qtd autorizada				  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790RVQ(nOp)

LOCAL xVq := 0

IF (!o790c:lRotinaGen)  // Só para pular quando for rotina genérica
	If nOp == 1
		If o790C:cAIte == "B4C"
			xVq := B4C->B4C_VLRUNA
		Else
			xVq := (o790C:cAIte)->&(o790C:cAIte+"_VLRAPR")
		EndIf
	ElseIf nOp == 2
		xVq := (o790C:cAIte)->&(o790C:cAIte+"_QTDPRO")
	ElseIf nOp == 3
		If o790C:cAIte == "B4C"
			xVq := "0"
		Else
			xVq := (o790C:cAIte)->&(o790C:cAIte+"_VIA")
		EndIf
	ElseIf nOp == 4
		If o790C:cAIte == "B4C"
			xVq := 0
		Elseif o790C:cAIte <> "B45"
			xVq := (o790C:cAIte)->&(o790C:cAIte+"_PERVIA")
		EndIf
	EndIf
ENDIF
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(xVq)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790FAP³ Autor ³ Thiago Guilherme       ³ Data ³ 08.04.2013³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Valida a finalizaçao da analise participativa              ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790FAP()

IF (B53->B53_ROTGEN == "1")
	Alert (STR0059)
	Return
ENDIF
If B53->B53_PARTIC == "1"
	PLS790RTG("1")
Else
	Help("",1,"PL790FAP")
EndIf

Return


Function PLS790Whe2()

Return(IF(o790C:CACAB=="BEA",BE2->BE2_PROCCI=="1",IF(o790C:CACAB<>"B4Q",BEJ->BEJ_PROCCI=="1",.T.)))

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSADOPME³ Autor ³ Renan Martins       ³ Data ³ 20.02.2015  ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Tela de Negociação de OPME             						 ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLSADOPME(cAlias, cNumGui, nOpc, cCodRDA, cCdOper, cAliasOr, cCodTab, cCodPro, cSequen, cDatGuia, cRecMov, cCodGlo, oModelMod, oViewMod)
Local oDlg, oFWLayer, oPLUp, oMenu
Local aArea := GetArea()
Local nOperation := nOpc
Local bOK			:= {|| nOpeca := 1,oDlg:End() }
Local bCancel		:= {|| oDlg:End()}
Local nOpeca  := 0
Local oModelVL
Local aButtons := {}
Local cCodMun
Local nVlrNego

//Aqui, avalio se já existe algum lançamento de OPME anterior, para edição ou inserção
oB2I := PLSREGIC():New()
oB2I:GetDadReg("B2I",1, xFilial("B2I") + cNumGui + cCodTab + cCodPro,,,.F. )
If oB2I:lFound
	nOperation := MODEL_OPERATION_UPDATE
ELSE
	nOperation := MODEL_OPERATION_INSERT
ENDIF
oB2I:Destroy()

oDlg := MSDialog():New(3,0,560,890, STR0034 + cNumGui,,,,,,,,,.T.)  //Negociação de OPME da Guia:
oFWLayer := FWLayer():New()
oFWLayer:Init( oDlg, .F.)

oFWLayer:AddLine('Up',100,.F.)
oPLUp 	 	:= oFWLayer:GetLinePanel( 'Up' )
oModel 	:= FWLoadModel("PLS790OP")
oModelVL 	:= oModel:GetModel('FORMULARIO1')
oModel:SetOperation(nOperation)
oModel:Activate()
IF (nOperation == 3)
	oModelVL:SetValue('B2I_NUMGUI', cNumGui)
	oModelVL:SetValue('B2I_CODPRO', cCodPro)
	oModelVL:SetValue('B2I_CODRDA', cCodRDA)
	oModelVL:SetValue('B2I_CODPAD', cCodTab)
	oModelVL:SetValue('B2I_CODOPE', cCdOper)
	oModelVL:SetValue('B2I_NOMUSR', UsrRetName(cCdOper))
	oModelVL:SetValue('B2I_DTAGUI', cDatGuia)
	oModelVL:SetValue('B2I_DESCPR', Posicione("BR8",1,xFilial("BR8") + cCodTab + cCodPro, "BR8->BR8_DESCRI"))
	oModelVL:SetValue('B2I_NOMRDA', Posicione("BAU",1,xFilial("BAU") + cCodRDA, "BAU->BAU_NOME"))
	oModelVL:SetValue('B2I_CDANVI', Posicione("BA8",3,xFilial("BA8") + cCodTab + cCodPro, "BA8->BA8_RGANVI"))
	oModelVL:SetValue('B2I_DTACAD', Date())
	oModelVL:SetValue( 'B2I_VLORCA', PLVLAPOPME(cNumgui, cCodTab, cCodPro))
	cCodMun := PLSRETLCL (cNumGui, cAliasOr, cCodRDA)
	oModelVL:SetValue('B2I_CODMUN', cCodMun)
ENDIF

oView := FWLoadView("PLS790OP")
oView:SetModel(oModel)
oView:SetOperation(nOperation)
oView:SetOwner(oPLUp)
oView:EnableControlBar(.F.)
oView:SetUseCursor(.F.)
oView:Activate()

oDlg:bInit 		:= { || EnchoiceBar(oDlg,bOk,bCancel,.F.,aButtons) }
oDlg:lcentered 	:= .T.
oDlg:Activate()

IF (nOpeca == 1)
	IF Empty(oModelMod:AALLSUBMODELS)
		oModelCam := aModBkp[1]:GetModel('PLSANALMMD')
		oModelCam:LoadValue('B72_VLRAUT', oModelVL:GetValue('B2I_VLNEGO'))
		oModelCam:LoadValue('B72_VALORI', oModelVL:GetValue('B2I_VLNEGO'))
		aModBkp[2]:Refresh()
	ELSE
		oModelCam := oModelMod:GetModel('PLSANALMMD')
		oModelCam:LoadValue('B72_VLRAUT', oModelVL:GetValue('B2I_VLNEGO'))
		oModelCam:LoadValue('B72_VALORI', oModelVL:GetValue('B2I_VLNEGO'))
		oViewMod:Refresh()
	ENDIF
	MENGRV(oModel)
	
	//Grava o valor negociado de volta na guia.. o registro está posicionado 
	If B53->B53_ALIMOV == "B4A"
		B4C->(RecLock("B4C", .F.))
			B4C->B4C_VLRUNA := oModelVL:GetValue('B2I_VLNEGO')
		B4C->(MsUnlock())
	EndIf
ENDIF

oModel:Destroy()
RestArea(aArea)

Return


/*/
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSAHOPME³ Autor ³ Renan Martins       ³ Data ³ 20.02.2015  ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Tela de Consulta de Histórico de OPME            		    ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
/*/
Function PLSAHOPME(cAlias, cNumGui, nOpc, cCodRDA, cCdOper, cAliasOr, cCodTab, cCodPro)
Local oDlg, oFWLayer, oPLUp, oBtn
Local aArea 		:= GetArea()
Local nOperation 	:= 4
Local bOK			:= {|| nOpeca := 1,oDlg:End() }
Local bCancel		:= {|| oDlg:End()}
Local nOpeca  	:= 0
Local oModelVL
Local aButtons 	:= {}
Local cFilter2
Local nValor 		:= 0
Local nQuant 		:= 0
Local aSize := {}
Local aObjects := {}
Local aInfo := {}
Local oGri
Private dData1
Private dData2
Private cFilterG

B2I->(DbSelectArea("B2I"))

If !Pergunte("PLSA790C_H",.T.)
	Return()
EndIf

dData1 := MV_PAR01
dData2 := MV_PAR02

cFilterG := "B2I_FILIAL == '" + xFilial("B2I") + "' .AND. B2I_CODPRO == '" + cCodPro + "' .AND. B2I_CODPAD == '" + cCodTab + "' "
If !Empty(MV_PAR01)
	cFilterG += " .AND. DTOS (B2I_DTACAD) >= '" + DTOS(MV_PAR01) + "' "
EndIf
If !Empty(MV_PAR02)
	cFilterG += " .AND. DTOS (B2I_DTACAD) <= '" + DTOS(MV_PAR02) + "' "
EndIf
cFilterG += " .AND. B2I_CODRDA == '" + cCodRDA + "' "

B2I->(DbSelectArea("B2I"))
cFilter2 := "B2I_FILIAL == '" + xFilial("B2I") + "' .AND. B2I_CODPRO == '" + cCodPro + "' .AND. B2I_CODPAD == '" + cCodTab + "' "
IIF (!(Empty(MV_PAR01)), cFilter2 += " .AND. DTOS (B2I_DTACAD) >= '" + DTOS(MV_PAR01) + "' ", "")
IIF (!(Empty(MV_PAR02)), cFilter2 += " .AND. DTOS (B2I_DTACAD) <= '" + DTOS(MV_PAR02) + "' ", "")

aSize := MsAdvSize()
AAdd( aObjects, { 100, 100, .T., .T. } )
AAdd( aObjects, { 100, 100, .T., .T. } )
aInfo := { aSize[1],aSize[2],aSize[3],aSize[4], 5, 5 }
aPosObj := MsObjSize( aInfo, aObjects,.T. )

oDlg := MSDialog():New(aSize[7],0,aSize[6],aSize[5],STR0036 + cCodPro,,,,,,,,,.T.) //Histórico de Negociação do Procedimento:

oFWLayer := FWLayer():New()
oFWLayer:Init( oDlg, .F.)
	//Criação dos Layers superior / inferior
oFWLayer:AddLine('Up',45,.F.)
oFwLayer:addLine('Down',50,.F.)
oPLUp 	 := oFWLayer:GetLinePanel( 'Up' )
oDown	 := oFwLayer:GetLinePanel( 'Down' )

oModel 	:= FWLoadModel("PLS790HO")
oModelVL 	:= oModel:GetModel('FRM')
oModel:SetOperation(nOperation)
oModel:Activate()

	//Definindo filtros para pegar maior, menor e média de valores para exibir na tela
B2I->(DbSetFilter({||&cFilter2},cFilter2))
B2I->(DbSetOrder(4))  //índice de valor em ordem de valor negociado
B2I->(DbGoTop())

	//Menor Valor e Guia
oModelVL:LoadValue('GUI_MN_VALOR', B2I->B2I_NUMGUI)
oModelVL:LoadValue('MN_VALOR', B2I->B2I_VLNEGO)

	//Média dos Valores encontrados
While !( B2I->(EOF()) )
	nValor += B2I->B2I_VLNEGO
	nQuant += 1
	B2I->(DbSkip())
EndDo
nValor := ( nValor / nQuant )
oModelVL:LoadValue( 'MD_VALOR', nValor )

	//Maior valor encontrado e guia
B2I->( DbGoBottom() )
oModelVL:LoadValue( 'GUI_MA_VALOR', B2I->B2I_NUMGUI )
oModelVL:LoadValue( 'MA_VALOR', B2I->B2I_VLNEGO )

	//Número, Nome e Cód. Anvisa do procedimento -
oModelVL:LoadValue( 'B2I_CODPRO', cCodPro )
oModelVL:LoadValue( 'B2I_CODPAD', cCodTab )
oModelVL:LoadValue( 'B2I_DESCPR', Posicione("BR8",1,xFilial("BR8") + cCodTab + cCodPro, "BR8->BR8_DESCRI"))
oModelVL:LoadValue( 'B2I_CDANVI', Posicione("BA8",3,xFilial("BA8") + cCodTab + cCodPro, "BA8->BA8_RGANVI"))
oModelVL:LoadValue( 'B2I_CODRDA', cCodRDA )
oModelVL:LoadValue( 'B2I_NUMGUI', cNumGui )
	
oView := FWLoadView("PLS790HO")
oView:SetModel(oModel)
oView:SetOperation(nOperation)
oView:SetOwner(oPLUp)
oView:EnableControlBar(.F.)
oView:SetUseCursor(.F.)
oView:Activate()

oView:= FWmBrowse():New()
oView:SetDoubleClick( {|| PLSTRZGUIA (,,,B2I->B2I_NUMGUI ) } )
oView:SetOwner( oDown )
oView:SetDescription(STR0041) //Guias Somente do Prestador
oView:SetAlias('B2I' )
oView:DisableDetails(.T.)
oView:DisableConfig(.T.)
oView:DisableLocate(.T.)
oView:DisableSeek(.T.)
oView:SetAmbiente(.F.)
oView:SetWalkThru(.F.)
oView:SetFilterDefault(cFilterG)
oView:Activate()

oDlg:bInit 		:= { || EnchoiceBar(oDlg,bOk,bCancel,.F.,aButtons) }
oDlg:lcentered 	:= .T.

oDlg:Activate()
B2I->(DbCloseArea())
RestArea(aArea)

Return


/*/
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSRETLCL³ Autor ³ Renan Martins       ³ Data ³ 20.02.2015  ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Pega Região do Prestador			              		    ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
/*/
Function PLSRETLCL (cNumGui, cAliasOr, cCodRDA)
Local cCodLoc
Local cCodReg
Local cLocal
Local aArea		:= GetArea()
Local lFlag		:= .F.
Local aAreaB		:= B53->(GetArea())
Default cAliasOr 	:= "B53"

IF (cAliasOr == "B53")
	B53->( DbSelectArea("B53") )
	B53->( DbSetOrder(1) )
	IF ( B53->( MsSeek(xFilial("B53")+cNumGui)) )
		cAliasOr := B53->B53_ALIMOV
	ENDIF
	B53->( DbCloseArea() )
ENDIF

//Se Anexo Clínico, preciso pegar a guia original (a referenciada), para pegar outros dados
IF ( cAliasOr == "B4A" )
	(cAliasOr)->( DBSelectArea (cAliasOr) )
	IF ( (cAliasOr)->( MsSeek(xFilial(cAliasOr) + Left(cNumGui,4) + SubStr(cNumGui,5,4) + SubStr(cNumGui,9,2) + Right(cNumGui,8) ) ) )
		cNumGui := (cAliasOr)->&((cAliasOr)+"_GUIREF")
		cAliasOr := "BEA"
	ENDIF
	(cAliasOr)->( DbCloseArea() )
ENDIF

//Pegar o local de Atendimento
DBSelectArea (cAliasOr)
IIF ( (cAliasOr) == "BEA", (cAliasOr)->( DbSetOrder(1) )/*25*/ , (cAliasOr)->( DbSetOrder(2) ) )  //BEA ou BE4
IF ( (cAliasOr)->( MsSeek(xFilial(cAliasOr) + Left(cNumGui,4) + SubStr(cNumGui,5,4) + SubStr(cNumGui,9,2) + Right(cNumGui,8) ) ) )
	cCodLoc 	:= (cAliasOr)->&((cAliasOr)+"_CODLOC")
	cLocal		:= (cAliasOr)->&((cAliasOr)+"_LOCAL")
	lFlag		:= .T.
ENDIF
(cAliasOr)->(DbCloseArea())

//Pegar a regiao de acordo com local de atendimento da ficha na BB8
DbSelectArea("BB8")
IF ( lFlag .AND. ( BB8->(MsSeek(xFilial("BB8") + cCodRDA + Left(cNumGui,4) + cCodLoc + cLocal) ) ))
	cCodReg := BB8->BB8_REGMUN
ENDIF

BB8->(DbCloseArea())
RestArea(aArea)
B53->(RestArea(aAreaB))

Return cCodReg


/*/
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSRETREG³ Autor ³ Renan Martins       ³ Data ³ 20.02.2015  ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Filtra por região o prestador na tela de histórico de OPME ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
/*/
Function PLSRETREG(oModel, oView)
Local oModelB
Local lFiltra
Local nValor := 0
Local nQuant := 0
Local cCodReg
Local aArea := GetArea()

DbSelectArea("B2I")
oModelB:= oModel:GetModel( 'FRM' )
lFiltra := oModelB:GetValue( 'MA_REGIAO')

cFilter2 := "B2I_FILIAL == '" + xFilial("B2I") + "' .AND. B2I_CODPRO == '" + oModelB:GetValue( 'B2I_CODPRO') + "' .AND. B2I_CODPAD == '" + oModelB:GetValue( 'B2I_CODPAD') + "' "
IIF (!(Empty(dData1)), cFilter2 += " .AND. ( DTOS (B2I_DTACAD) >= '" + DTOS(dData1) + "' ", "")
IIF (!(Empty(dData2)), cFilter2 += " .AND. DTOS (B2I_DTACAD) <= '" + DTOS(dData2) + "' )", "")

IF (lFiltra)
	cCodReg := PLSRETLCL (oModelB:GetValue( 'B2I_NUMGUI'),,oModelB:GetValue( 'B2I_CODRDA') )
	IF ( Empty(cCodReg) )
		MsgAlert (STR0037)
	ELSE
		cFilter2 += " .AND. B2I_CODMUN == '" + cCodReg + "'"
	ENDIF
ENDIF
DbcloseArea()

//Definindo filtros para pegar maior, menor e média de valores para exibir na tela
DbSelectArea("B2I")
B2I->(DbSetFilter({||&cFilter2},cFilter2))
B2I->(DbSetOrder(4))  //índice de valor em ordem de valor negociado
B2I->(DbGoTop())

//Menor Valor e Guia
oModelB:LoadValue('GUI_MN_VALOR', B2I->B2I_NUMGUI)
oModelB:LoadValue('MN_VALOR', B2I->B2I_VLNEGO)

//Média dos Valores encontrados
While !( B2I->(EOF()) )
  nValor += B2I->B2I_VLNEGO
  nQuant += 1
  B2I->(DbSkip())
EndDo
nValor := ( nValor / nQuant )
oModelB:LoadValue( 'MD_VALOR', nValor )

//Maior valor encontrado e guia
B2I->( DbGoBottom() )
oModelB:LoadValue( 'GUI_MA_VALOR', B2I->B2I_NUMGUI )
oModelB:LoadValue( 'MA_VALOR', B2I->B2I_VLNEGO )

oView:Refresh()
B2I->(DBCloseArea())
RestArea(aArea)
Return


/*/
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSVGUIS³ Autor ³ Renan Martins       ³ Data ³ 20.02.2015   ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Botões da tela de histórico de OPME 							 ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
/*/
Function PLSVGUIS(oPanel, oModel)
Local lOk 		:= .F.
Local cTipo

@ 005, 70  Button STR0039  Size 60, 13  Pixel Action ;  //Guia de Maior Valor
	PLSTRZGUIA (cTipo := "1", oPanel, oModel) of oPanel

@ 005, 140 Button STR0040  Size 60, 13  Pixel Action ; //Guia de Menor Valor
	PLSTRZGUIA (cTipo := "2", oPanel, oModel) of oPanel

Return


/*/
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSTRZGUIA³ Autor ³ Renan Martins       ³ Data ³ 20.02.2015 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Visualizar guia na tela											 ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
/*/
Function PLSTRZGUIA(cTipo, oPanel, oModel, cNumGui)
Local oModelB
Local aAreas 	:= {}
Local aAreaB	:= B53->(GetArea())
Local aAreaI	:= B4C->(GetArea())
Local cAliasM
Local cRecMov
Local cNumGuia
Local cRecMovN
Local aAreaBE
Local lFlagNl	:= .F.
Local ctipo
Local nI
Local nIndB53	:= B53->(IndexOrd())

aAdd(aAreas, (GetArea()))
aAdd(aAreas, B53->(GetArea()))
oModel := FWModelActive()
oModelB:= oModel:GetModel( 'FRM' )

IF (ctipo == "2")
	cNumGuia := oModelB:GetValue('GUI_MN_VALOR')
ElseIF (cTipo == "1")
	cNumGuia := oModelB:GetValue('GUI_MA_VALOR')
Else
	cNumGuia := cNumGui
ENDIF
B53->(DbSetOrder(1))
IF (!Empty(cNumGuia)) .AND. (B53->(MsSeek(xFilial("B53")+cNumGuia)))

	cRecMovN :=  B53->(RECNO())

	B53->(DBGOTO(cRecMovN))
	IF (B53->B53_ALIMOV == "B4A")
		aAdd(aAreas, B4C->(GetArea()))
		B4C->(DbSelectArea("B4C"))
		B4C->( DbClearFilter() )
	ELSEIF (B53->B53_ALIMOV == "BEA")
		aAdd(aAreas, BE2->(GetArea()))
		BE2->(DbSelectArea("BE2"))
		BE2->( DbClearFilter() )
	ELSEIF (B53->B53_ALIMOV == "BE4")
		aAdd(aAreas, BEJ->(GetArea()))
		BEJ->(DbSelectArea("BEJ"))
		BEJ->( DbClearFilter() )
	ENDIF
	PLS790VAO("8")
Else
	MsgAlert (STR0038) //Sem guia selecionada no momento!
	B53->(DbSetOrder(nIndB53))
	Return
ENDIF
FOR nI := 1 TO Len(aAreas)
	RestArea(aAreas[nI])
NEXT
B53->(DbSetOrder(nIndB53))
Return


/*/
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSCNGUIA³ Autor ³ Renan Martins       ³ Data ³ 04.05.2015     ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄ±±±
±±³Descricao ³ Atualizar o browse, após filtragem de alguma rotina do browse  ±±±
±± oB53                                                                       ±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙÙÙÙ±±±
/*/
FUNCTION PLSCNGUIA(lKey)
Local cFiltro := "B53_FILIAL = '" + xFilial('B53') + "' "
default lKey := .F.
oB53:SetFilterDefault(cFiltro)
oB53:Refresh(.T.)
IF (!Empty(nCodRec))
  B53->(DBGOTO(nCodRec)) //Posiciona na guia que estava anteriormente
ENDIF

if lKey
	PLS790OST()
endIf

Return


/*/
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSCFGUAX³ Autor ³ Renan Martins       ³ Data ³ 05.05.2015     ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄ±±±
±±³Descricao ³ Verifica se a guia possui anexos clínicos, pois se sim, não	 ±±±
±± deverá ser possível dar parecer enquanto não auditar os anexos             ±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙÙÙÙ±±±
/*/
FUNCTION PLSCFGUAX(cNumGuia, cTipoP, cNewGuia, lConsRadio)
Local aIteAud	:= {}
Local lFlgSg	:= .F.
Local cFiltro := " B53_FILIAL = '" + xFilial("B53")  + "' .AND. "
Local xVar := ""
Local lVisGui := B4A->(FieldPos("B4A_VISGUI")) > 0
Default lConsRadio := .F.

B4A->( DbSelectArea("B4A") )
B4A->( DbSetOrder(4) )  //Xfilial + B4A_GUIREF

IF (cTipoP <> "1") //Apenas para não fazer a pesquisa quando estou mudando os anexos de lugar.
	IF ( B4A->(MsSeek(xFilial("B4A")+cNumGuia)) )
		While !B4A->(EOF()) .AND. B4A->B4A_GUIREF == cNumGuia
			IF (B4A->B4A_AUDITO == "1" .AND. B4A->B4A_CANCEL == "0" .AND. ((B4A->B4A_TIPGUI != "08" .AND. !lConsRadio) .or. lConsRadio))
				If lVisGui
					aAdd(aIteAud,{B4A->B4A_OPEMOV + B4A->B4A_ANOAUT + B4A->B4A_MESAUT + B4A->B4A_NUMAUT, B4A->B4A_TIPGUI, B4A->B4A_VISGUI})  
				Else
					aAdd(aIteAud,{B4A->B4A_OPEMOV + B4A->B4A_ANOAUT + B4A->B4A_MESAUT + B4A->B4A_NUMAUT,B4A->B4A_TIPGUI})
				EndIf	
				cFiltro += " B53_NUMGUI = '" + B4A->B4A_OPEMOV + B4A->B4A_ANOAUT + B4A->B4A_MESAUT + B4A->B4A_NUMAUT + "' .OR."
			ENDIF
			B4A->(DbSkip())
		EndDo
		cFiltro := Substr(cFiltro, 1, Len(cFiltro)-5)
	ELSE
		lFlgSg := .T.  //Significa que não há anexos para a guia pesquisada.
	ENDIF

ELSE  //Se cTipoP == "1"
	IF ( B4A->(MsSeek(xFilial("B4A")+cNumGuia)) )
		While ( B4A->(MsSeek(xFilial("B4A")+cNumGuia)) ) //cNumGuia = Guia Antiga
			B4A->( RecLock("B4A", .F.) )
			B4A->B4A_GUIREF := cNewGuia //Registro a nova guia
			B4A->( MSUnlock() )
		ENDDO
	ENDIF
ENDIF

Return ({AIteAud, cFiltro, lFlgSg})


/*/
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSEXGUAX³ Autor ³ Renan Martins       ³ Data ³ 05.05.2015     ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄ±±±
±±³Descricao ³ Exibe no menu se existem guias de anexos clínicos para auditar ±±±
±± com relação a guia que está posicionada                                    ±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙÙÙÙ±±±
/*/
FUNCTION PLSEXGUAX(cNumGuia)
Local aValRet	:= {}
Local cCdGuia	:= ""
Local i

aValRet := PLSCFGUAX(B53->B53_NUMGUI)
IF (Len(aValRet[1]) > 0)
	FOR i:=1 TO Len(aValRet[1])
		cCdGuia += "  " + aValRet[1,i][1]
	Next
	//-------------------------------------------------------------------
	//  LGPD
	//-------------------------------------------------------------------
	objCENFUNLGP:useLogUser()
	MsgAlert (STR0044 + Alltrim(Str(Len(avalRet[1]))) + STR0045 + CHR(13)+ CHR(13) +; //Está guia possui:#Anexos Clínicos que ainda não foram auditados.
	STR0046 + cCdGuia) //Os Números das guias de Anexo são
ELSEIF (!aValRet[3])
	MsgAlert (STR0047) //Todos os Anexos vinculados a guia foram auditados.
ELSE
	MsgAlert (STR0048) //Está guia não possui Anexos Clínicos vinculados.
ENDIF
aSize(aValRet,0)

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³PLSGRNGUIA  ºAutor  ³                  º Data ³  16/06/2009 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função inicial de gerar nova guia                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function PLSTESR()
Local aArea 			:= GetArea()
Local nOp  			:= 4
Local nOpeca  		:= 0
Local aCampos 		:= {}
Local cAliasCri
Local cAliasIts
Local BD57 			:= BD5->(GetArea())
Local BDE
Local aChaveGen 		:={}
Local nOpca
Local cFiltro
LOCAL aDadUsr 		:= PLSDADUSR(B53->B53_MATUSU,'1',.F.,dDatabase,,,"NAO_VALIDAR_CARTAO")
Local __cTipo     	:= "1"
Local nGeraGuia     := 0 

Private cCodTiss	:= GetNewPar("MV_MOTTISS","")
Private aSitucB53	:= {"B53", B53->B53_SITUAC, B53->(RECNO()), B53->B53_ALIMOV, B53->B53_RECMOV, B53->B53_NUMGUI, B53->B53_MATUSU, B53->B53_CODDEP }  //Guardar nome da tabela, situação e recno do registro posicionado na B53
Private oDlg2
PRIVATE aAutForAnx 	:= {}
Private lNovAud 	:= .T.
Private cEmailB		:= ""

//Janela do Dialogo

If B53->B53_ALIMOV == "B44"

	MsgInfo(STR0061,STR0062) //"Inclusão de procedimentos de reembolso devem ser feitos diretamente no protocolo de reembolso"#"Atenção"  
	Return
EndIf

If Empty(cCodTiss)
	Alert ( STR0049 ) //Código Padrão da TISS para negar Guia não está preenchido no parâmetro MV_MOTTISS
	Return
ENDIF


BAU->( DbSelectArea("BAU") )
BAU->( DbSetOrder(1) )
IF ( BAU->( MsSeek(xFilial("BAU") + B53->B53_CODRDA)) )
	cEmailB:= BAU->BAU_EMAIL
	IF ( Empty(cEmailB) )
		IF !( MSGYESNO(STR0051) )
			Return
		ENDIF
	ENDIF
ENDIF

//Posicionar o registro na tabela (BEA/BE4/B4A e outras), de acordo com o alias e recno obtido da B53
(aSitucB53[4])->( DbSelectArea(aSitucB53[4]) )
(aSitucB53[4])->( DbGoto(Val(aSitucB53[5])) )


//Verificar alias e definir alias de critica, itens e filtros
IF (aSitucB53[4] == "BEA")
	cAliasCri := "BEG"
	cAliasIts := "BE2"
	cFiltro   := cAliasIts+"_OPEMOV == '" + Left(B53->B53_NUMGUI,4) + "' AND " + cAliasIts+"_ANOAUT == '" + SubStr(B53->B53_NUMGUI,5,4) +; 
		"' AND " + cAliasIts+"_MESAUT == '" + SubStr(B53->B53_NUMGUI,9,2) + "' AND " + cAliasIts+"_NUMAUT == '" + Right(B53->B53_NUMGUI,8) + "'"
	aAdd (aCampos, {cAliasIts+"_CODPRO", 1})
	aAdd (aCampos, {cAliasIts+"_CODPAD", 2})

ELSEIF (aSitucB53[4] == "B4A")
	cAliasCri := "BEG"
	cAliasIts := "B4C"
	cFiltro   := cAliasIts+"_OPEMOV == '" + Left(B53->B53_NUMGUI,4) + "' AND " + cAliasIts+"_ANOAUT == '" + SubStr(B53->B53_NUMGUI,5,4) +;
		"' AND " + cAliasIts+"_MESAUT == '" + SubStr(B53->B53_NUMGUI,9,2) + "' AND " + cAliasIts+"_NUMAUT == '" + Right(B53->B53_NUMGUI,8) + "'"
	aAdd (aCampos, {cAliasIts+"_CODPRO", 1})
	aAdd (aCampos, {cAliasIts+"_CODPAD", 2})

ELSEIF (aSitucB53[4] == "BE4")
	cAliasCri = "BEL"
	cAliasIts = "BEJ"
	cFiltro := cAliasIts+"_CODOPE == '" + Left(B53->B53_NUMGUI,4) + "' AND " + cAliasIts+"_ANOINT == '" + SubStr(B53->B53_NUMGUI,5,4) +;
		"' AND " + cAliasIts+"_MESINT == '" + SubStr(B53->B53_NUMGUI,9,2) + "' AND " + cAliasIts+"_NUMINT == '" + Right(B53->B53_NUMGUI,8) + "'"
	aAdd (aCampos, {cAliasIts+"_CODPRO", 1})
	aAdd (aCampos, {cAliasIts+"_CODPAD", 2})
ELSEIF (aSitucB53[4] == "B4Q") 
	
	cAliasCri = "BQZ"
	cAliasIts = "BQV"
	
	cFiltro := cAliasIts+"_CODOPE == '" + Left(B53->B53_NUMGUI,4) + "' AND " + cAliasIts+"_ANOINT == '" + SubStr(B53->B53_NUMGUI,5,4) +;
		"' AND " + cAliasIts+"_MESINT == '" + SubStr(B53->B53_NUMGUI,9,2) + "' AND " + cAliasIts+"_NUMINT == '" + Right(B53->B53_NUMGUI,8) + "'"
	aAdd (aCampos, {cAliasIts+"_CODPRO", 1})
	aAdd (aCampos, {cAliasIts+"_CODPAD", 2})
ENDIF 


DbSelectArea(cAliasIts)

nGeraGuia := PLGRVDIAG1(cAliasIts," Exames ",cFiltro , (cAliasIts+"_CODPRO"), B53->B53_MATUSU,; 
            1, (cAliasIts+"_CODPRO"),aCampos , ,/*"ExcRece(nOpca)"*/, ,,,,,/*"PLSMOTEXC(oGDPri)"*/,,,,cAliasCri)

IIF(!Empty(BD57), Restarea(BD57), "")
IIF(!Empty(BDE), Restarea(BDE),"")
aSize(aSitucB53,0)

If nGeraGuia == 1 
	__oDlgAna:End() 
EndIf 

Return



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³PLGRVDIAG  ºAutor  ³Rogerio Tabosa     º Data ³  15/02/2009 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ FUNCAO GENERICA PARA MONTAGEM DE TELA COM GRID             º±±
±±ºDesc.     ³Recebe um alias e campo para gravaçao de uma tabela qualquerº±±
±±º          ³atraves de uma DiaLog de tamanho menor da tela Generica     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function PLGRVDIAG1(cAliUso,cTitulo,cFiltro, cCpoID, xDadoId, nInd, cCmpsInd, aCampos, nOpcGD, cFunPosOK, nAltDiag,;
 					nLargDiag, aButAR, lCpoSequen, lB7D, cFunDel, cCpoExb, lOnlyShow,cOrder, cCrit, lLimpaValid)
LOCAL nX 			:= 0
LOCAL nPos 			:= 0
LOCAL aHead 		:= {}
Local nI := 0
Local nU := 0
LOCAL aIndAux		:= StrToArray( cCmpsInd , '+' ) // Pega o indice e separa os campos
LOCAL aIndUso		:=	{} // aqui irão os campos do indice + a expressao macro para pegar o dado no grid
Local nT			:= 0
Local nPosData		:= 0
Local nQtdProc		:= 0
Local nAcols        := 0 
Local nProPos	:=0

Private nSolPos := 0
Private oGDPri
Private aColsGen 	:= {}
Private nCGen 		:= 0
Private nOpca 		:= 0
Private nCodPad		:= 0
Private _cAliItem    := "" 

Default nAltDiag 	:= 540 // Altura da Dialog
Default nLargDiag 	:= 700 // Largura da Dialog
Default cCpoID 		:= "" //Campo principal de identificaçao dos registros editados (normalmente o mesmo do filtro)
Default cFiltro 	:= "" // Filtro passado para a tabela
Default nOpcGD		:= GD_INSERT + GD_UPDATE + GD_DELETE // Permissoes no GRID
Default cFunPosOK	:= "" // Funçao para execuçao ao clicar em OK e antes de gravar
Default aButAR		:= {} // Botoes no açoes relacionadas
Default aCampos		:= {} // Campos que serao exibidos
Default lCpoSequen	:= .T. // Se houver campo sequencial confirma a utilizaçao do sequencial
Default lB7D		:= .F. // se a rotina for chamada utilizando a B7D uma tela para inclusão de observação sera visualizada.
Default cFunDel		:= "" // Bloco de codigo executado na delecao do Grid
Default cCpoExb		:= ""
Default lOnlyShow	:= .F. // Campos que serao exibidos no grid
Default cOrder  	:= "" //Ordenação pelos Campos
Default lLimpaValid	:= .F.

////////////////////////////////////////////////////////////////////////////////////////
// Campos para serem exibidos
//
//ATENÇÃO: Não alterar os espaços antes da virgula, pois a função HS_BDdados considera
//os espaços para localizar os campos
////////////////////////////////////////////////////////////////////////////////////////
IF ( (cAliUso == "BE2" .AND. BEA->BEA_TIPO <> "3") .OR. cAliUso $ "BEJ,BQV")  //SE SDAT/Consulta/Internação/Prorrogação de internação 
    cCpoExb := cAliUso+"_CODPAD,"+cAliUso+"_SEQUEN,"+cAliUso+"_NIVEL ,"+cAliUso+"_CODPRO,"+cAliUso+"_DESPRO,"+cAliUso+"_QTD   ,"+cAliUso+"_STATUS,"+cAliUso+"_DATPRO,"
  	cCpoExb += cAliUso+"_QTDSOL,"+cAliUso+"_QTDPRO,"+cAliUso+"_IMGSTA,"+cAliUso+"_NIVAUT,"+cAliUso+"_CHVNIV,"+cAliUso+"_NIVCRI,"+cAliUso+"_VLPGMA,"+cAliUso+"_AUDITO,"+cAliUso+"_VIA   ," 
  	cCpoExb += cAliUso+"_PERVIA,"+cAliUso+"_PROCCI,"+cAliUso+"_CDPDRC,"+cAliUso+"_PROREL,"+cAliUso+"_PRPRRL,"+cAliUso+"_VLCOMP,"+cAliUso+"_LIBESP,"+cAliUso+"_PEREVC,"
  	cCpoExb += cAliUso+"_VLRAPR,"+cAliUso+"_BLOCPA,"+cAliUso+"_DNIVCR,"+cAliUso+"_DNIVAU,"+cAliUso+"_SOLREV,"+cAliUso+"_COMUNI,"+cAliUso+"_TRACON,"+cAliUso+"_NRAOPE, "
  	cCpoExb += cAliUso+"_GUIACO,"+cAliUso+"_QUACOB,"+cAliUso+"_VALORI,"+cAliUso+"_CODAUD,"+cAliUso+"_TIPADM "
  
	If (cAliUso == "BE2" .AND. BEA->BEA_TIPO <> "3" .AND. BEA->BEA_LIBERA == "1")
		cCpoExb += ",BE2_SALDO "
	EndIf

elseIf (cAliUso == "B4C")	//Se Anexo Clínico
  	cCpoExb := PLSA09AFld(B4A->B4A_TIPGUI,nil)
endIf

Inclui := .F.

HS_BDados(cAliUso, @aHead, @aColsGen,@nU, 1,, cFiltro,,,cCpoExb,,,,,,.T.,/*aLeg*/,,,,, /*aCpo*/, /*aJoin*/,,cOrder)

//na inclusão de um novo item na guia de liberação, caso o qtdpro esteja com 0 a validação dos campos 
//obrigatórios não permite que posicione em outra linha
For nAcols := 1 To LEN(aColsGen)
	
	If aColsGen[nAcols][GdFieldPos(cAliUso+"_QTDPRO",aHead)] == 0
		aColsGen[nAcols][GdFieldPos(cAliUso+"_QTDPRO",aHead)] := 1
	EndIf

	nQtdProc++
Next 

//Verifica se limpa os valids de todos os campos
For nI := 1 TO Len(aHead)
	aHead[nI][6]  := ""
	aHead[nI][15] := ""
Next
//Jader
nSolPos := Ascan(aHead,{|x|AllTrim(x[2])==cAliUso+"_QTDSOL"})
nProPos := Ascan(aHead,{|x|AllTrim(x[2])==cAliUso+"_QTDPRO"})
//aHead[7][8] := "PLSJADER()"
aHead[nProPos][6] := "PLSVLDQTD(nSolPos)"  

//Verifico a posição da descricao do procedimento
nCodDes := Ascan(aHead,{|x|AllTrim(x[2])==cAliUso+"_DESPRO"})
aHead[nCodDes][12] := "" 
 
//Deixar a data editável
nPosData := Ascan(aHead,{|x|AllTrim(x[2])==cAliUso+"_DATPRO"})
IF (nPosData > 0)
	aHead[nPosData][14] := "A"	
ENDIF

//Verifica se arruma valid ou pesquisa
For nI := 1 TO Len(aCampos)
	nCodPad := Ascan(aHead,{|x|AllTrim(x[2])==cAliUso+"_CODPAD"})
	nCodID := Ascan(aHead,{|x|AllTrim(x[2])==aCampos[nI][1]})
	_cAliItem := cAliUso 

	IF (aCampos[nI][2] == 1)  //plsb4c
		aHead[nCodId][9] := "GRDPLS" //Pesquisa genérica para Grid utilizando a função PLSPESPROC
		aHead[nCodId][6] := "PLSRETNOME(nCodPad, nCodDes, &(readVar()),_cAliItem)"  
		aHead[nCodId][13]:= ""

	ElseIF (aCampos[nI][2] == 2)
		aHead[nCodId][9] := "BR4TAB"
		aHead[nCodId][13]:= ""
	ENDIF
Next

For nX := 1 To Len(aIndAux)
	If 	"_FILIAL" $ Alltrim(aIndAux[nX])
		Loop
	ElseIf 	Alltrim(aIndAux[nX]) == Alltrim(cCpoID) // Se for o campo passado dentro do indice joga a variavel do dado pra ser executada macro
		AADD(aIndUso, { aIndAux[nX] , "xDadoId" } )
	Else // Caso contrario jogo a macro da posição no aCols encontrada
		nPos := Ascan(aHead,{|x| AllTrim(x[2])==aIndAux[nX]})
		If nPos == 0
			Exit
		EndIf
		AADD(aIndUso, { aIndAux[nX] , "aColsGen[nCGen," + Alltrim(Str(nPos)) + "]" } )
	EndIf

Next nX

DEFINE MSDIALOG oDlgGen TITLE cTitulo From 000, 000 To 480, 650 Of oMainWnd Pixel   //000 000 400 600

oGDPri  := MsNewGetDados():New(035, 005, 230, 320,nOpcGD,,,,,,,,,, oDlg2, aHead, aColsGen)    // 000 000 300 500
oGDPri:obrowse:BLDBLCLICK := {||If(PLValProc(_cAliItem),oGDPri:editCell(),Alert(STR0063))}//"Este procedimento não pode ser alterado" 
oGDPri:obrowse:BDELETE := {||If(PLValProc(_cAliItem),oGDPri:DelLine(),Alert(STR0064))} //"Este procedimento não pode ser excluido" 

ACTIVATE MSDIALOG oDlgGen CENTERED ON INIT EnchoiceBar(oDlgGen,{ || If((nOpca := PLVldItem(nQtdProc)) == 1, oDlgGen:End(),) },{|| nOpca := 0, oDlgGen:End()})

If nOpca == 1 .AND. !lOnlyShow 

	//Pergunta ao usuário se deseja mesmo gerar uma nova guia e cancelar a anterior
	IF !MSGYESNO(STR0052) //Deseja mesmo gerar uma nova guia? A anterior será cancelada! 
		Return
	ENDIF

	//Retorna a quantidade ao valor original dos procedimentos 
	If cAliUso == "BE2" .AND. BEA->BEA_TIPO <> "3" .AND. BEA->BEA_LIBERA == "1"
		
		For nAcols := 1 To LEN(oGDPri:aCols)

			If oGDPri:aCols[nAcols][GdFieldPos("BE2_IMGSTA",oGDPri:aHeader)] == 'ENABLE'
			
			//	oGDPri:aCols[nAcols][GdFieldPos("BE2_QTDPRO",oGDPri:aHeader)] := 0
			EndIf
		Next 
	
	ElseIf cAliUso == "BEJ"
		For nAcols := 1 To LEN(oGDPri:aCols)

			If oGDPri:aCols[nAcols][GdFieldPos(cAliUso+"_IMGSTA",oGDPri:aHeader)] == 'DISABLE'
			   
				oGDPri:aCols[nAcols][GdFieldPos(cAliUso+"_QTDPRO",oGDPri:aHeader)] := 0
			EndIf
		Next 
	EndIf 

	Processa( {|| PLSGRNGUIA (aHead, oGDPri:aCols, Len(aColsGen), cAliUso, cCrit)}, STR0053) //Processando..... Aguarde
EndIf

Return nOpca 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³PLSGRNGUIA  ºAutor  ³ Renan Martins    º Data ³  06/2015    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Processamento nova guia                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function PLSGRNGUIA (aCabecalho, aItens, nGOld, cAliUso, cCri) 

Local aDadUsr	  := PLSDADUSR(aSitucB53[7],'1',.F.,dDatabase,,,"NAO_VALIDAR_CARTAO")
Local aDadRDA	  := {}
Local aArrtmp	  := {}
Local nCpoPad     := 0
Local nCpoQtd     := 0
Local nI		  := 0
Local mI          := 0      
Local aDadBE4	  := {}
Local nCpoNom     := 0
Local cMens		  := ""
Local aCabProc    := {}
Local cTipo		  := ""
Local aHeader	  := {}
Local aCols		  := {}
Local cTmpNGuia	  := ""
Local aRetAux     := {}
Local aDadBea 	  := {}
Local aVetTrab 	  := {}
LOCAL cRCCodLDP   := GetNewPar("MV_PLCLDRC","0010")
Local cChaveBCI	  := ""
Local aAreas	  := {}
Local aDadCri	  := {}
Local cChCrit	  := {}
Local aDadHea	  := {}
Local aDadCab     := {}
Local aChaveGen	  := {}
Local aNewSituc	  := {}
Local nValor	  := 0
Local nPosPP      := 0
Local nTempB53	  := 0
Local nQtdItens   := Len(aItens) 
Local nRecno	  := 0 
Local cHora       := "" 
Local cDtDigi     := "" 
Local cHoDtDigi   := "" 
Local nItens      := 0 
Local nRecGui 	  := 0
Local lArray      := .F.
Local cCritPermite := ""
Local lContCriticado := .F.

//Tratamento contra erros
Begin Transaction

//Progress Bar ADVPL, de tamanho 13 -> 13 etapas
	ProcRegua(13)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Posiciono na GUIA
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	IF (aSitucB53[4] $ "B4A")
		B4A->( DbSelectArea("B4A") )
		B4A->( DbSetOrder(1) ) //BEA_FILIAL + BEA_OPEMOV + BEA_ANOAUT + BEA_MESAUT + BEA_NUMAUT + DTOS(BEA_DATPRO) + BEA_HORPRO
		If !B4A->( MsSeek(xFilial("B4A") + aSitucB53[6] ) )
			Alert (STR0054)  //Guia não encontrada
			DisarmTransaction()  //Desfazer as alteraçõs e terminar o controle de transações
			Break
		EndIf
		cTmpNGuia := B4A->B4A_GUIREF
	ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Aqui, verifico se a origem é BEA ou BE4. Para cancelamento, BE4 usa a PLSA090CAN e cancela na BEA
//³ Caso o alias seja B4A, mas tenha a guia de referência, necessito dos dados desta guia para montar o adadrda e outras informações
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	IF ( (aSitucB53[4] $ "BEA, BE4, B4Q") .OR. !(Empty(cTmpNGuia)) ) // BEA ou BE cancelam no mesmo local e usam a BEA como base. Por isso, posiciono na BEA
		BEA->( DbSelectArea("BEA") )
		BEA->( DbSetOrder(1) ) //BEA_FILIAL + BEA_OPEMOV + BEA_ANOAUT + BEA_MESAUT + BEA_NUMAUT + DTOS(BEA_DATPRO) + BEA_HORPRO
		cTmpNGuia := IIF((aSitucB53[4] $ "BEA, BE4"), aSitucB53[6], cTmpNGuia) 
		If !BEA->( MsSeek(xFilial("BEA") + cTmpNGuia ) )
			Alert (STR0054) //Guia não encontrada
			DisarmTransaction()  //Desfazer as alteraçõs e terminar o controle de transações
			Break
		EndIf

		IF (aSitucB53[4] == "BE4")
			
			BE4->( DbSetOrder(2) ) //BE4_FILIAL + BE4_OPEMOV + BE4_ANOINT + BE4_MESINT + BE4_NUMINT
			IF !BE4->( MsSeek(xFilial("BE4") + aSitucB53[6] ) )
				Alert (STR0054)  //Guia não encontrada
				DisarmTransaction()  //Desfazer as alteraçõs e terminar o controle de transações
				Break
			ENDIF
		ENDIF
		
		IF (aSitucB53[4] $ "B4Q")
			
			B4Q->( DbSetOrder(1) ) //BE4_FILIAL + BE4_OPEMOV + BE4_ANOINT + BE4_MESINT + BE4_NUMINT
			IF !B4Q->( MsSeek(xFilial("B4Q") + aSitucB53[6] ) )
				Alert (STR0054)  //Guia não encontrada
				DisarmTransaction()  //Desfazer as alteraçõs e terminar o controle de transações
				Break
			ENDIF
		ENDIF

		cTipo := BEA->BEA_TIPO
		cCodLdp := BEA->BEA_CODLDP
		cCodRDA := BEA->BEA_CODRDA
		aDadRDA := PLSDADRDA(BEA->BEA_OPEMOV, BEA->BEA_CODRDA, '1', date(), BEA->BEA_CODLOC, BEA->BEA_CODESP)
	EndIF

	IncProc()  //1 - Incremento o processo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//Clonar Críticas existentes dos procedimentos (BEG/BEL/BQZ)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	cChCrit := IIF( (aSitucB53[4] $ "BEA, B4A"), (cCri+"_FILIAL+"+cCri+"_OPEMOV+"+cCri+"_ANOAUT+"+cCri+"_MESAUT+"+cCri+"_NUMAUT"),(cCri+"_FILIAL+"+cCri+"_CODOPE+"+cCri+"_ANOINT+"+cCri+"_MESINT+"+cCri+"_NUMINT") )
	
	IF (aSitucB53[4] $ "BEA, B4A")  //Escolho o cabecalho para o aDadHe, conforme Alias de movimento
		Store Header cCri TO aDadHea For .T.
	ELSE
		Store Header cCri TO aDadHea For .T.
	ENDIF
	
	//aDICIONADO, POIS EXISTE CAMPO VIRTUAL SENDO CONSIDERADO NO ADADHEADER E OCASIONAVA ERRO NO PLUPTCOLS - GRAVAÇÃO
	For nI := 1 TO Len(aDadHea)  
		if aDadHea[nI][10] <> "V"
			aadd(aArrtmp, aDadHea[nI])
		endIf
	Next
	aDadHea := {}
	aDadHea	:= aArrtmp
	
	//Para pesqusiar quantas criticas existem	na base para a guia em questão, pois serão clonadas
	nlen := (Len(aDadHea)+1) 
	nCont := 0
	
	oPESQ	:= PLSREGIC():new()

	aChaveT := {}
 	If  (aSitucB53[4] $ "BEA, B4A")

		AadD(aChaveT, {(cCri+"_OPEMOV"), '=',Left(aSitucB53[6],4) } )	
		AadD(aChaveT, {(cCri+"_ANOAUT"), '=',SubStr(aSitucB53[6],5,4) } )	
		AadD(aChaveT, {(cCri+"_MESAUT"), '=',SubStr(aSitucB53[6],9,2) } )	
		AadD(aChaveT, {(cCri+"_NUMAUT"), '=',Right(aSitucB53[6],8) } )		
	Else
	
		AadD(aChaveT, {(cCri+"_CODOPE"), '=',Left(aSitucB53[6],4) } )	
		AadD(aChaveT, {(cCri+"_ANOINT"), '=',SubStr(aSitucB53[6],5,4) } )	
		AadD(aChaveT, {(cCri+"_MESINT"), '=',SubStr(aSitucB53[6],9,2) } )	
		AadD(aChaveT, {(cCri+"_NUMINT"), '=',Right(aSitucB53[6],8) } )	
	EndIf	

	nQtdLin:= oPESQ:getCountReg(cCri,aChaveT)
	
	(cCri)->( DbSelectArea(cCri) )
	(cCri)->( DbSetOrder(1) )
	IF ( (cCri)->(MsSeek(xFilial(cCri)+aSitucB53[6])) )
		//Inicializo o aDadCri com a quantidade de linhas de críticas existentes e a quantidade de campos da tabela. Dessa forma, acabamos com o problema de inclusão de novos
		//campos nas tabelas de críticas e as colunas ficarão com seus valores corretos, conforme o cabeçalho da base.
		aDadCri := Array(nQtdLin,nLen)
		While ( !(cCri)->(EOF()) .AND. (cCri)->&(cChCrit) == xFilial(cCri)+ aSitucB53[6])
			nCont++

			For nI := 1 TO Len(aDadHea)
				aDadCri[nCont,nI] := (cCri)->&(aDadHea[nI,2])
			Next
			aDadCri[nCont,nI] := .F.
			
			(cCri)->(DbSkip())
		Enddo
		
	ENDIF
	IncProc()  //2 - Incremento o processo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//Rodar verificação dos exames. Passei o len do aColsGen, para pegar a sequencia a partir de qual ponto
//houve inclusão de procedimentos e validá-los, pois os da outra guia já foram validados
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	nCpoPro := Ascan(aCabecalho,{|x|AllTrim(x[2])==cAliUso+"_CODPRO"})
	nCpoPad := Ascan(aCabecalho,{|x|AllTrim(x[2])==cAliUso+"_CODPAD"})
	nCpoQtd := Ascan(aCabecalho,{|x|AllTrim(x[2])==cAliUso+"_QTDPRO"})
	nCpoNom := Ascan(aCabecalho,{|x|AllTrim(x[2])==cAliUso+"_DESPRO"})
	nCpoSeq := Ascan(aCabecalho,{|x|AllTrim(x[2])==cAliUso+"_SEQUEN"})
	nCpoNCr := Ascan(aCabecalho,{|x|AllTrim(x[2])==cAliUso+"_NIVCRI"})
	nCpoSta := Ascan(aCabecalho,{|x|AllTrim(x[2])==cAliUso+"_STATUS"})
	nCpoAud := Ascan(aCabecalho,{|x|AllTrim(x[2])==cAliUso+"_AUDITO"})
	
	If aSitucB53[4] $ "BEA, BE4, B4Q" 
		nPosPP  := Ascan(aCabecalho,{|x|AllTrim(x[2])==cAliUso+"_VLRAPR"})
	
	Else
		nPosPP  := Ascan(aCabecalho,{|x|AllTrim(x[2])==cAliUso+"_VLRUNA"})
	EndIf	
	
	//o loop começa a partir dos novos itens inseridos na nova guia, para não verificar os itens da guia anterior, pois já foram analisados  02-01
	//ou estão em auditoria
	For nItens := nGOld + 1 TO nQtdItens 
	
		If nPosPP > 0 
			nValor := nValor + (aItens[nItens][nPosPP])
		EndIf 
	
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//Ajusta o Status para Autorizado e tirar nivel critica, pois isso é realizado via gatilho e embaixo
		//que veremos se o procedimento pode ou não ser feito. Se não arrumar isso, dá problema na BD6 e BD7, pois fica como não autorizado.
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		aItens[nItens][nCpoSta] := "1"  //Status Autorizado
		aItens[nItens][nCpoNCr] := ""   //Limpa Nível da Crítica
		aItens[nItens][nCpoAud] := "0"  //Auditoria = NÃO

		aRetFun := PLSAUTP(  date(), StrTran(Time(),":",""),;
		aItens[nItens][nCpoPad],; //codpad
		aItens[nItens][nCpoPro],; //codpro
		aItens[nItens][nCpoQtd],; //qtdpro
		aDadUsr,,aDadRDA,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.T.)

		IF !aRetFun[1]

			cCritPermite := GetNewPar("MV_INCGUIA", "")

			If Empty(cCritPermite)
				lContCriticado := .F.
			Else
				If (Len(aRetFun[2]) <= 2 .Or. Len(aRetFun[2]) > 2) .And. aScan(aRetFun[2], {|x| x[1] $ cCritPermite}) > 0
					lContCriticado := .T.
				Else
					lContCriticado := .F.
				EndIf
			EndIf
			
			IF (len(aRetFun[2]) <= 2)  //posição de críticas
				IF aRetFun[2][1][1] <> "025"//Se for diferente da crítica 025, parar todo processamento
					cMens := CHR(13) + CHR(13) + aItens[nItens][nCpoPro] + " - " + aItens[nItens][nCpoNom]
					For mI := 1 To Len(aRetFun[2])
						cMens := cMens + CHR(13) + aRetFun[2][mI][2] + " -- " + aRetFun[2][mI][3]  //Crítica e outras observaçoes, como dias de carência, caso haja
					Next
					//"Não é possível cancelar a guia atual e gerar uma nova, pois alguns dos procedimentos inseridos possuem críticas!"

					If lContCriticado
						If !MsgYesNo(STR0055 + CHR(13) + cMens  + CHR(13) + "Deseja mesmo continuar com o procedimento criticado?")
							DisarmTransaction() //Desfazer as alteraçõs e terminar o controle de transações
							Break
						EndIf
					Else
						MsgAlert (STR0055 + CHR(13) + cMens )
						DisarmTransaction()  //Desfazer as alteraçõs e terminar o controle de transações
						Break
					EndIf
				ENDIF

			ELSEIF (len(aRetFun[2]) > 2) 

				cMens := CHR(13) + CHR(13) + aItens[nItens][nCpoPro] + " - " + aItens[nItens][nCpoNom]
				For mI := 1 To Len(aRetFun[2])
					cMens := cMens + CHR(13) + aRetFun[2][mI][2] + " --- " + aRetFun[2][mI][3]   //Crítica e outras observaçoes, como dias de carência, caso haja
				Next
					
				//"Não é possível cancelar a guia atual e gerar uma nova, pois alguns dos procedimentos inseridos possuem críticas!"
				If lContCriticado
					If !MsgYesNo(STR0055 + CHR(13) + cMens  + CHR(13) + "Deseja mesmo continuar com o procedimento criticado?")
						DisarmTransaction() //Desfazer as alteraçõs e terminar o controle de transações
						Break
					EndIf
				Else
					Alert (STR0055 + CHR(13) + cMens )
					DisarmTransaction() //Desfazer as alteraçõs e terminar o controle de transações
					Break
				EndIf
				
			ENDIF
		ENDIF
	Next

	IncProc() //3 - Incremento o processo

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//Salva o código TISS no campo CANTIS
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	(aSitucB53[4])->( RecLock(aSitucB53[4], .F.) )

	DBSelectArea("BTQ")
	if BTQ->(msSeek(xFilial("BTQ")+"38"+cCodTiss))
		(aSitucB53[4])->&(aSitucB53[4]+"_CANTIS") := BTQ_CDTERM
		(aSitucB53[4])->&(aSitucB53[4]+"_CANEDI") := BTQ->BTQ_DESTER
	endIf

	(aSitucB53[4])->( MsUnLock() )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//Efetua o cancelamento da Guia. Parâmetro como .F., pois não é via RPC
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	IF (aSitucB53[4] $ "B4A")
		PLSA09ACAN(.F.,,,,.T.) 
	ELSEIF (aSitucB53[4] $ "BEA, BE4")
		PLSA090CAN(.T.,,,.T.)  
	ELSEIF (aSitucB53[4] == "B4Q") 
		PLSA09PCAN(.F.,,,,.T.)
	ENDIF
	IncProc()  //4 - Incremento o processo

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//Reposicionar a BE4, pois em 26/06/15, foi alterada a rotina de cancelamento, que desposiciona a guia - chamado TSNSPT
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	IF (aSitucB53[4] == "BE4")
		IF ( (Val(aSitucB53[5])) <> BE4->(RECNO()) )
			BE4->( DbSelectArea("BE4") )
			BE4->( DbSetOrder(2) ) //BE4_FILIAL + BE4_OPEMOV + BE4_ANOINT + BE4_MESINT + BE4_NUMINT
			BE4->( MsSeek(xFilial("BE4") + aSitucB53[6] ) )
		ENDIF
	ENDIF

	//Verifica/Gerar PEG
	IF (aSitucB53[4] <> "B4A" .AND. aSitucB53[4] <> "B4Q") 

		IF PLSALIASEXI("BXX") .and. BXX->(FieldPos("BXX_CODPEG")) > 0 .And. PLSOBRPRDA(&(aSitucB53[4]+"->"+aSitucB53[4]+"_CODRDA"))

			nIndUt := PLSBUIND("BCI","BCI_FILIAL + BCI_CODOPE + BCI_CODLDP + BCI_TIPGUI + BCI_CODRDA + BCI_ARQUIV") /// Busca da Ordem do indice

			BCI->(dbSetOrder(nIndUt)) //BCI_FILIAL + BCI_CODOPE + BCI_CODLDP + BCI_TIPGUI + BCI_CODRDA + BCI_ARQUIV
			cChaveBCI := &(aSitucB53[4]+"->"+aSitucB53[4]+"_OPERDA") + &(aSitucB53[4]+"->"+aSitucB53[4]+"_CODLDP") + &(aSitucB53[4]+"->"+aSitucB53[4]+"_TIPGUI") + &(aSitucB53[4]+"->"+aSitucB53[4]+"_CODRDA")
		ENDIF

		If !BCI->( MsSeek(xFilial("BCI")+upper(cChaveBCI)) ) .and. !BCI->( MsSeek(xFilial("BCI")+lower(cChaveBCI)) )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			//³ Cria peg
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			PLSIPP(Left(aSitucB53[6],4),cCodLdp,Left(aSitucB53[6],4),cCodRDA,STR(Month(Date())),STR(Year(DATE())),dDataBase,cTipo,"",{},"1","")
			lpeg := .T.
		else
			PLSATUPP(Len(aItens), nValor)  //Atualiza PEG
		endIf
		cCodPeg := BCI->BCI_CODPEG
	ENDIF
	IncProc()  //5 - Incremento o processo

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta calendario de pagamento...                                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aRetAux := PLSXVLDCAL(dDataBase,PLSINTPAD(),.T.,"","")

	If ! aRetAux[1]
		aRet := {.F.,"5"}
		DisarmTransaction() //Desfazer as alteraçõs e terminar o controle de transações
		lArray := .T.
		Break
	Endif
	IncProc() //6 - Incremento o processo

	aadd(aVetTrab,0)
	
	//Gera o array com os dados do cabeçalho para gravação da guia
	aDadCab := PLGERACAB(aSitucB53[4],aRetAux)
	
	IncProc() //7 - Incremento o processo

	//Chama a rotina de Gravação da guia											    
	IF (aSitucB53[4] == "BEA")

		aRetGrv := PLSA090Grv(aItens,aCabecalho,aDadCab[1],K_Incluir,aVetTrab,{},aSitucB53[7],dDataBase,StrTran(Time(),":",""),; 
							"1",aRetAux[4],aRetAux[5],BEA->BEA_TIPGUI,nil,aDadCri,aDadHea,nil,nil,BEA->BEA_ORIGEM,BEA->BEA_CODLDP/*cRCCodLDP*/,;
							nil,nil,NIL,nil,/*lVeioComu*/,/*lNMudFase*/,/*cAliasIte*/,/*cAliasCri*/,/*lAjusta*/,/*lEvolu*/, {}/*aDadBE4*/,;
							/*lGerSenha*/,.F./*lWeb*/,/*aDadB43*/,/*aCabB43*/,/*aTrbB43*/,/*oBrwEven*/,/*lExcluiAte*/,/*oBrwB47*/,;
							/*aSitucB53[4]*/,/*cAliasCab*/,/*lReembolso*/,/*oBrwB46*/,/*oBrwB44*/,/*lIncNeg*/,/*cObsoleto*/,;
							/*lSolicit*/,/*cTpGrv*/,/*aColsDF*/,/*aHeaderDF*/,/*aVetDF*/,/*aDaSenPro*/,/*lGuiHoRe*/,/*aMatBd6*/,;
							/*aMatCom*/,/*lResInt*/,/*cAliasCmp*/,/*lOdontoWeb*/,/*cNumLib*/,/*cArqImp*/,/*lEvoSadt*/,/*cSituac*/,;
							/*lProtoc*/,/*aPartic*/,/*aColsB4B*/,/*aHeaderB4B*/,/*aVetB4B*/,,/*lRecGlo*/,/*lPTUOnSol*/,/*cObsEvo*/,;
							/*nNrSeqTR*/,/*cSenhaOpe*/,/*cOpeSolPTU*/,/*cNewAut*/,/*lPtuOnline*/,/*aCampCust*/,/*dValSen*/,,,.T./*lGrGuiAud*/)

	ELSEIF (aSitucB53[4] == "BE4")
	
		aRetGrv := PLSA090Grv(aItens,aCabecalho,aDadCab[2] /*Array BEA*/,K_Incluir,{},{},aSitucB53[7], dDataBase,StrTran(Time(),":",""),; 
							 "1",aRetAux[4],aRetAux[5], BE4->BE4_TIPGUI,.T.,aDadCri,aDadHea,nil,,"2",Iif(GetNewPar("MV_PLSDTPG",.F.),;
							 GetNewPar("MV_PLSLLIB","9999"),""),,,"BE4",,,nil,"BEJ","BEL",.F.,.F.,aDadCab[1]/*Array BE4*/,nil,NIL,{},{},{},,;
							 ,,,,,,,,,,,,,,,,{},,,,,,,,,,,,,,,,,BE4->BE4_NRTROL,BE4->BE4_NRAOPE,/*cSenhaOpe*/,/*cOpeSolPTU*/,/*cNewAut*/,;
                    		 /*lPtuOnline*/,/*aCampCust*/,/*dValSen*/,/*lSUS*/,/*aArraySUS*/,.T./*lGrGuiAud*/)

	ELSEIF (aSITUCB53[4] == "B4A")
		
		aRetGrv  := PLSA09AGRV(K_Incluir,B4A->B4A_OPEMOV,"B4C","B4A","BEG",aDadCab[1],aCabecalho,aItens,{},aDadHea,aDadCri,{},B4A->B4A_TIPGUI,;
							   dDataBase,aRetAux[4],aRetAux[5],aChaveGen,,.T.)

	ELSEIF (aSITUCB53[4] == "B4Q") //Prorrogação de internação  
		
		aRetGrv := PLSA09PGRV(K_Incluir,PlsIntPad(),'BQV','B4Q','BQZ',aDadCab[1],aCabecalho,aItens,{},aDadHea,aDadCri,{},"11",dDataBase,;
							  aRetAux[4],aRetAux[5],aChaveGen,,.T.) 

	ENDIF 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Capturo o valor da nova Guia e o Recno da Guia   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nRecGui := B53->(RECNO())
	aNewSituc := {aRetGrv[2]+aRetGrv[3]+aRetGrv[4]+aRetGrv[5], (aSITUCB53[4])->(RECNO())}
	IncProc()  //8 - Incremento o processo

	//Grava as informações da guia original e da nova guia na B53
	PLGRVORGER(aSITUCB53[3],nRecGui,aRetGrv[2]+aRetGrv[3]+aRetGrv[4]+aRetGrv[5])
	IncProc()  //9 - Incremento o processo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifico se existe guias de anexos clínicos vinculadas e realizo a transferência   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PLSCFGUAX(aSitucB53[6], "1", aNewSituc[1])
	IncProc()  //9 - Incremento o processo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifico se existe Banco de conhecimento para os itens e faço a transferência 
// Como o AC9_CODENT é OPE+ANO+MES+NAUT+SEQ do exame, percorro o aItens novamente								    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AC9->( DbSelectArea("AC9") )
	AC9->( DbSetOrder(2) )//AC9_FILIAL, AC9_ENTIDA, AC9_FILENT, AC9_CODENT, AC9_CODOBJ, R_E_C_N_O_, D_E_L_E_T_
	FOR nI := 1 TO Len(aItens)
		cChaveInt  	:= xFilial(cAliUso) + aSitucB53[6] + aItens[nI][nCpoSeq] //local da sequencia do procedimento
		If AC9->(MsSeek( xFilial("AC9") + cAliUso + xFilial(cAliUso) + cChaveInt))
    //While !(AC9->(EOF())) .AND. Alltrim(AC9->AC9_CODENT) == Alltrim(cChaveInt)
			While ( AC9->(MsSeek( xFilial("AC9") + cAliUso + xFilial(cAliUso) + cChaveInt)) )
				AC9->( RecLock("AC9", .F.) )
				AC9->AC9_CODENT := xFilial(cAliUso) + aNewSituc[1]+aItens[nI][nCpoSeq]
				AC9->( MsUnlock() )
			ENDDO
		ENDIF
	NEXT

	//Implementação para herdar os arquivos de uma guia cancelada ao incluir itens pela auditoria.
	If (aSitucB53[4] $ "BE4") 
		
		//na AC9 os arquivos de internação são gravados com o alias BEA
		cAliUso := "BEA"
		
		//pega o recno da guia nova
		nRecno := (aSITUCB53[4])->(RECNO())
		
		//posiciona na guia cancelada
		BE4->(DbSetOrder(2))
		BE4->(MsSeek(xFilial("BE4") + aSitucB53[6]))
		cChaveInt  	:=  xFilial(cAliUso) + BE4->(BE4_CODOPE+BE4_ANOINT+BE4_MESINT+BE4_NUMINT)
		cHora := BE4->BE4_HHDIGI

	ELSEIF (aSITUCB53[4] $ "BEA")
		cAliUso := "BEA"
		
		//pega o recno da guia nova
		nRecno := BEA->(RECNO())
		
		//posiciona na guia cancelada
		BEA->(DbSetOrder(1))
		BEA->(MsSeek(xFilial("BEA") + aSitucB53[6]))
		cChaveInt  	:= xFilial(cAliUso) +  BEA->(BEA_OPEMOV+BEA_ANOAUT+BEA_MESAUT+BEA_NUMAUT)
		cHora       := BEA->BEA_HORPRO
		
	ElseIf (aSITUCB53[4] $ "B4A,B4Q")
		
		cAliUso := aSITUCB53[4]
		
		//pega o recno da guia nova
		nRecno := &(aSITUCB53[4])->(RECNO())
		
		//posiciona na guia cancelada
		(aSITUCB53[4])->(DbSetOrder(1))
		(aSITUCB53[4])->(MsSeek(xFilial(aSITUCB53[4]) + aSitucB53[6]))
		cChaveInt  	:= xFilial(cAliUso) + &(aSITUCB53[4]+"->"+aSITUCB53[4]+"_OPEMOV+"+aSITUCB53[4]+"->"+aSITUCB53[4]+"_ANOAUT")
		cChaveInt  	+= &(aSITUCB53[4]+"->"+aSITUCB53[4]+"_MESAUT+"+aSITUCB53[4]+"->"+aSITUCB53[4]+"_NUMAUT")
	ENDIF 

	//posiciona nos arquivos da guia antiga
	If AC9->(MsSeek( xFilial("AC9") + cAliUso + xFilial(cAliUso) + cChaveInt))
			
		While  ALLTRIM(AC9->(AC9_FILIAL+AC9_ENTIDA+AC9_FILENT+AC9_CODENT)) ==  ALLTRIM(xFilial("AC9") + cAliUso + xFilial(cAliUso) + cChaveInt) 
			
			//agora posiciona na nova guia para transferir o arquivo.
			(aSITUCB53[4])->(dbGoto(nRecno))
			
			AC9->( RecLock("AC9", .F.) )
		
			AC9->AC9_CODENT := xFilial(cAliUso) + aRetGrv[2] + aRetGrv[3] + aRetGrv[4] + aRetGrv[5] 

			AC9->( MsUnlock() )
			
			//posiciona no proximo arquivo
			AC9->(MsSeek( xFilial("AC9") + cAliUso + xFilial(cAliUso) + cChaveInt))
		EndDo
		
		//a chave na AC9 é diferente entre algumas guias.
		While  ALLTRIM(AC9->(AC9_FILIAL+AC9_ENTIDA+AC9_FILENT+AC9_CODENT)) ==  ALLTRIM(xFilial("AC9") + cAliUso + xFilial(cAliUso) + cChaveInt + cHora) 
			
			(aSITUCB53[4])->(dbGoto(nRecno))
			
			If aSITUCB53[4] $ "BEA"
				cDtDigi     := DTOS(BEA->BEA_DTDIGI) 
				cHoDtDigi   := BEA->BEA_HORPRO  
			
			ElseIf aSITUCB53[4] $ "BE4"
				cDtDigi     := DTOS(BE4->BE4_DTDIGI) 
				cHoDtDigi   := BE4->BE4_HHDIGI  
			EndIf
			
			AC9->( RecLock("AC9", .F.) )
			AC9->AC9_CODENT := xFilial(cAliUso) + aRetGrv[2] + aRetGrv[3] + aRetGrv[4] + aRetGrv[5] + cDtDigi + cHoDtDigi
			AC9->( MsUnlock() )
			
			AC9->(MsSeek( xFilial("AC9") + cAliUso + xFilial(cAliUso) + cChaveInt))
		ENDDO
	ENDIF	 
	
	IncProc()  //10 - Incremento o processo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifico se existe algum parecer e transfiro para a nova guia
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	B72->( DbSelectArea("B72") )
	B72->( DbSetOrder(1) )//B72_FILIAL, B72_ALIMOV, B72_RECMOV, B72_SEQPRO, B72_CODGLO, B72_CODGLO, B72_CODPAD, B72_CODPRO, R_E_C_N_O_, D_E_L_E_T_
	FOR nI := 1 TO Len(aItens)
		cChavePesq := aSitucB53[4] + aSitucB53[5] + aItens[nI][nCpoSeq] //local da sequencia do procedimento
		If B72->(MsSeek( xFilial("B72") + cChavePesq))
			While ( B72->(MsSeek( xFilial("B72") + cChavePesq)) )
				B72->( RecLock("B72", .F.) )
				B72->B72_RECMOV := Padr(Alltrim(Str(aNewSituc[2])), (TamSX3("B72_RECMOV")[1]))
				B72->( MsUnlock() )
			ENDDO
		ENDIF
	NEXT
	IncProc()  //11 - Incremento o processo

	oB53Sit := PLSSTRUC():New("B53",MODEL_OPERATION_UPDATE,,aSitucB53[3])
	oB53Sit:SetValue("B53_STATUS","6" )
	oB53Sit:SetValue("B53_GORITE","1" )
	oB53Sit:SetValue("B53_SITUAC","0" )
	oB53Sit:CRUD()
	oB53Sit:Destroy()

	//Copia as interações da guia cancelada
	PLCopInte(aSITUCB53[6],aRetGrv[2],aRetGrv[3],aRetGrv[4],aRetGrv[5])
	IncProc()  //12 - Incremento o processo

	B53->( DBGOTO(nRecGui) ) //Posiciono no registro de auditoria da nova guia
	
	//Atribuo o código do departamento correto para a nova guia
	B53->(Reclock("B53", .F.))
	   B53->B53_CODDEP := aSITUCB53[8]
	B53->(MsUnlock())
	
	IncProc()  //12 - Incremento o processo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Rotina de e-mail genérica.
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF !(Empty(cEmailB))
  		BOJ->(DbSelectArea("BOJ"))
		BOJ->(DbSetOrder(3))
		IF ( BOJ->(MsSeek(xFilial("BOJ") + "PLSA790V" + (Space(TamSx3("BOJ_ROTINA")[1] - 8))  + "01" + (Space(TamSx3("BOJ_VERSAO")[1] - 2 )))) )
			PLSinalEmail(BOJ->BOJ_CODSIN, nil,nil, cEmailB, "GERAÇÃO DE NOVA GUIA PELO AUDITOR", nil, nil, nil, nil, "", .F.)
		ELSE
			MsgAlert(STR0065) //"Sinalizador não cadastrado! O e-mail não será enviado!"
		ENDIF
	ENDIF
	IncProc()  //13 - Incremento o processo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Mensagem da nova guia
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Msgalert (STR0056+ chr(13)+chr(13)+aNewSituc[1]+chr(13)+chr(13)+; //"Caro Auditor, a nova guia gerada é de número: "
          STR0057) //"Feche esta tela de análise e continue na nova guia."

End Transaction

If lArray
	Return(aRet)
Else
	Return
EndIf



//-------------------------------------------------------------------
/*/{Protheus.doc} PLSinalEmail
Envio de e-mail genérico
Função realizava o mesmo trabalho que a PLSinaliza. Por isso foi encapsulada a chamada para manter o legado.
@author Oscar Zanin
@since 08/04/2015
@version P12
@obs Modificada em 25/06/2015 para esta rotina
/*/
//-------------------------------------------------------------------
Function PLSinalEmail(cCodSin,cMsg,nTpMsg,cEmail,cDescri,;
					oObj,cCpo,xValor,xAttach,cPergunta,;
					lPergunta)
//Parâmetros
//cCodSin  = Código do sinalizador da tabela BOJ *Obrigatório//, que será buscado na tabela BOJ *Obrigatório
//cMsg	    = Mensagem a ser exibida após o envio do e-mail (Deixar em branco para não exibir alerta)
//nTpMsg   = Tipo da caixa de alerta. 0 = MsgAlert, 1 = MsgInfo, 2 = MsgStop
//cEmail   = E-mail de destino *Obrigatório
//cDescri  = Descrição para o processo no appserver
//oObj     = Objeto a receber retorno após envio
//cCpo     = Campo do objeto que irá receber o retorno
//xValor   = Valor a ser retornado
//xAttach  = Adicionar Anexos
//cPergunta = Código do grupo do Pergunte
//lPergunta = Se exibirá, ou não, a janela do pergunte

	PLSinaliza(cCodSin,cMsg,nTpMsg,cEmail,cDescri,;
					oObj, cCpo, xValor, xAttach, cPergunta,;
					lPergunta, "", .F., "000002", "",;
					.T.)

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³PLSRETNOME  ºAutor  ³ Renan Martins    º Data ³  06/2015    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Exibe no grid o nome do procedimento, de acordo com o grid º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
*/
FUNCTION PLSRETNOME(nCodTab, nDescr, nCodPro,cAlias) 
Local cNome
Local lRet := .T.

cNome:= Posicione("BR8",1,xFilial("BR8") + oGDPRI:aCols[oGDPRI:nAt, nCodTab] + nCodPro, "BR8->BR8_DESCRI")

If !EMPTY(cNome)
	oGDPRI:aCols[oGDPRI:nAt, nDescr] := cNome
	oGDPRI:aCols[oGDPRI:nAt, GdFieldPos(cAlias + "_IMGSTA",oGDPRI:aHeader)] := "ENABLE"
	oGDPRI:aCols[oGDPRI:nAt, GdFieldPos(cAlias + "_NIVEL",oGDPRI:aHeader) ] := ""
	oGDPRI:aCols[oGDPRI:nAt, GdFieldPos(cAlias + "_AUDITO",oGDPRI:aHeader)] := "0"
Else
	Help("",1,"REGNOIS")
	lRet := .F.
EndIf 

oGDPRI:refresh()

Return lRet 

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³PLSRETVTP  ºAutor  ³ Renan Martins    º Data ³  06/2015     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna o valor da tabela padrão, de acordo com o registro  ±±
±± corrente que está aberto no mento                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
/*/
FUNCTION PLSRETVTP()
Local cValor
cValor:= oGDPRI:aCols[oGDPRI:nAt, nCodPad]
Return cValor

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³PLSRTPROC  ºAutor  ³ Renan Martins    º Data ³  06/2015     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Nome procedimento												  ±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
/*/
Function PLSRTPROC()
Local cProcN
cProcN := POSICIONE("BR8",1,XFILIAL("BR8")+B2I->B2I_CODPAD+B2I->B2I_CODPRO,"BR8->BR8_DESCRI")
Return(cProcN)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS790IDA³ Autor ³ Hugo Vieira           ³ Data ³ 28.04.2015³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³Exibe a idade do beneficiário na grid principal da auditoria ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLS790IDA(cAlimov, cTipo) 
local nIdade	:= 0
default cAlimov := "BEA"
default cTipo   := 0  //0 - Guia <-> 1 - Beneficiário

if valType(cAlimov) = "D"
	nIdade	:=	DateDiffYear(dDataBase, cAlimov)
else
	if valType(cAlimov) <> "U" .and. cTipo = 1
		nIdade	:=	DateDiffYear(dDataBase, stod(cAlimov))
	elseIf cAlimov == "BE4"
		BE4->(DbGoto(Val(B53->(B53_RECMOV))))
		nIdade	:=	DateDiffYear(dDataBase, BE4->BE4_DATNAS)
	
	elseIf cAlimov == "BEA"
		BEA->(DbGoTo(Val(B53->(B53_RECMOV))))
		nIdade	:=	DateDiffYear(dDataBase, BEA->BEA_DATNAS)
	
	ElseIf cAlimov $ "B4A,B4Q"
		nIdade := POSICIONE( cAlimov,1,XFILIAL(cAlimov)+ALLTRIM(B53->B53_NUMGUI),cAlimov + "_IDADE")
		
	EndIf
endif

return nIdade


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³PLSVerInd  ºAutor  ³ Renan Martins    º Data ³  08/2015     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ O sistema pega a chave do indice informado via parametro e  ±±
±± depois, o quebra numa chave, de acordo com o tamanho da B53_NUMGUI     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
/*/
Function PLSVerInd(nTpIdx, lApenIdx)
Local aIndex		:= IIF(nTpIdx == 1, (o790C:cAIte)->(indexkey(o790C:nIdxIte)) , (o790C:cACri)->(indexkey(o790C:nIdxCri)) )
//Se nTpIdx for 1, pega índice da tabela de itens. Se for 2, pega indice da tabela de críticas
Local cCampos		:= ""
Local nTamFor		:= Len(Alltrim(B53->B53_NUMGUI))
Local nTamCmp		:= 0
Local nI			:= 0
Local nSoma		:= 0
Local cCmpIdx		:= ""
Default lApenIdx	:= .F.

aIndex := Separa(aIndex,"+",.F.) //Separa os campos, formando vários arrays

//Agora, de acordo com o tamanho do campo B53_NUMGUI, foi vendo que partes dos índices formam a chave
//de pesquisa. Quando for maior ou igual ao tamanho do B53_NUMGUI, o processo é interrompido.
For nI := 1 TO nTamFor
  nSoma += (TamSX3(aIndex[nI])[1])
  cCampos += aIndex[nI] + "-" + Alltrim(Str(TamSX3(aIndex[nI])[1])) + ","
  cCmpIdx += aIndex[nI] + "+"
  IF (nSoma >= nTamFor)
    Exit
  ENDIF
Next

IF (lApenIdx)  //Quando preciso apenas da chave da forma natural, tipo bbb_filia+bbb_codope
  cCampos := cCmpIdx
ENDIF

Return (cCampos)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³PLSMntChvG  ºAutor  ³ Renan Martins    º Data ³  08/2015          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ PLS Monta Chave Genérica. Aqui, o sistema irá montar as chaves    ±±
±± de relacionamento no browser de análise, exibindo os itens de acordo com a    ±±
±±guia selecionada e exibindo as críticas de acordo com o procedimento selecio-  ±±
±±nado. Aqui, monto o filtro de itens e os arrays do addrelation das críticas.   ±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
/*/
Function PLSMntChvG (cChaveGen, nTipFil)
Local cFiltro 	:= ""
Local nI			:= 0
Local aTmp			:= {}
Local cTmp			:= ""
Local nCalcSum	:= 1
Local aFiltro		:= {}
Local cChvRel		:= ""
Default nTipFil	:= 0

IF (Empty(cChaveGen))
	MsgAlert(STR0060)
Return ({.F., ""})
ENDIF

cChaveGen := SEPARA(cChaveGen , "," , .F.)
IF (nTipFil == 1)
	cFiltro := "@"     + o790C:cAIte+"_FILIAL = '" + xFilial("B53") + "' "
ELSE
	aAdd(aFiltro, { o790C:cACri+"_FILIAL", o790C:cAIte+"_FILIAL"})
ENDIF

For nI := 1 TO LEN(cChaveGen)
	aTmp := SEPARA(cChaveGen[nI] , "-" , .F.)

	IF ( nTipFil == 1 .AND. (Upper(Alltrim(SUBSTR(aTmp[1],5,10))) <> "FILIAL") )
		cFiltro += " AND " + aTmp[1]+" = '" + Substr(B53->B53_NUMGUI,nCalcSum,Val(aTmp[2])) + "' "
		nCalcSum += Val(aTmp[2])

	ELSEIF ( nTipFil == 2 .AND. (Upper(Alltrim(SUBSTR(aTmp[1],5,10))) <> "FILIAL") )
		aAdd(aFiltro, { aTmp[1], o790C:cAIte+"_"+SUBSTR(aTmp[1],5,10) })
	ENDIF

NEXT

cTmp := SEPARA(B53->B53_CVLAUD, ",",.F.)
cFiltro += " AND " + o790C:cAIte+"_"+cTmp[1]+" = '" + cTmp[2] + "'"
IIF (!Empty(cTmp[3]), aAdd(aFiltro, {o790C:cACri+"_"+cTmp[3] , o790C:cAIte+"_"+cTmp[3]}),"")

Return ({.T.,cFiltro, aFiltro})
/*/
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLS_CLCID³ Autor ³ Renan Martins       ³ Data ³ 20.02.2015  ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Calcula idade                                              ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
/*/
Function PLS_CLCID()
Local dDtaNasc := POSICIONE("BA1",2,XFILIAL("BA1")+B53->B53_MATUSU,"BA1_DATNAS")
Local nIdade
nIdade := DateDiffYear(date(), dDtaNasc)
Return (nIdade)


//--------------------------------------------------------------------------------
/*/{Protheus.doc} PLB72RELAC
Preenche a B72, substitui o inicializador do B72_CODPRO e B72_DESPRO
@author Oscar Zanin
@since 06/05/2016
@version P12
/*/
//---------------------------------------------------------------------------------
Function PLB72RELAC(nTipo)
Local cRet 	:= ""
Local cAliTab := o790C:cAIte

If nTipo == 1
	If cAliTab == "B7D"
		cRet := Posicione("BR8",1,xFilial("BR8")+ &(cAliTab+"->"+cAliTab+"_CODPAD+"+cAliTab+"->"+cAliTab+"_CODMED"),"BR8_CODPSA")
	Else
		cRet := Posicione("BR8",1,xFilial("BR8")+ &(cAliTab+"->"+cAliTab+"_CODPAD+"+cAliTab+"->"+cAliTab+"_CODPRO"),"BR8_CODPSA")
	Endif
ElseIf nTipo == 2
	If cAliTab == "B7D"
		cRet := Posicione("BR8",1,xFilial("BR8")+ &(cAliTab+"->"+cAliTab+"_CODPAD+"+cAliTab+"->"+cAliTab+"_CODMED"),"BR8_DESCRI")
	Else
		cRet := Posicione("BR8",1,xFilial("BR8")+ &(cAliTab+"->"+cAliTab+"_CODPAD+"+cAliTab+"->"+cAliTab+"_CODPRO"),"BR8_DESCRI")
	Endif
EndIf

Return cRet

//--------------------------------------------------------------------------------
/*/{Protheus.doc} PPL790VDIA
Verifica se uma internação possui critica de diaria para ser analisada pelo auditor
@author Karine Riquena Limp
@since 15/09/2016
@version P12
/*/
//---------------------------------------------------------------------------------
function PPL790VDIA(cNumGui, cTipGui)
local lRet := .F.
local lProcDia := .F.
local aAreaCri := BEL->(getArea())
local aAreaPro := BEJ->(getArea())

if !empty(cNumGui)

	if cTipGui == "3"

		BEJ->(dbSetOrder(1))
		BEJ->(dbGoTop())
		BR8->(dbSelectArea("BR8"))
		BR8->(dbSetOrder(1))

		If BEJ->(dbSeek( xFilial("BEJ")+B53->B53_NUMGUI))

				While !BEJ->(EOF()) .AND. xFilial("BEJ")+B53->B53_NUMGUI == BEJ->(BEJ_FILIAL+BEJ_CODOPE+BEJ_ANOINT+BEJ_MESINT+BEJ_NUMINT)

					//se tiver procedimento de diaria na guia não precisa olar a critica de diaria pois vai pelo procedimento
					If BR8->( MsSeek(xFilial("BR8")+BEJ->BEJ_CODPAD+BEJ->BEJ_CODPRO) ) .AND. BR8->BR8_TPPROC=='4'

						lProcDia := .T.
						exit

					Endif


					BEJ->(dbSkip())

				EndDo

		 EndIf

		if !lProcDia

			BEL->(DbSetOrder(1))//BEL_FILIAL + BEL_CODOPE + BEL_ANOINT + BEL_MESINT + BEL_NUMINT + BEL_SEQUEN

			If BEL->(msSeek(xFilial("BEL")+cNumGui))

				While !BEL->(EoF()) .and. xFilial("BEL")+cNumGui == BEL->(BEL_FILIAL+BEL_CODOPE+BEL_ANOINT+BEL_MESINT+BEL_NUMINT)

					if BEL->BEL_CODGLO == __aCdCri585[1]

						lRet := .T.
						exit

					endIf
					BEL->(DbSkip())
				EndDo

			EndIf

		endIf

	elseif cTipGui == "11"

		aAreaCri := BQZ->(getArea())
		aAreaPro := BQV->(getArea())

		BQV->(dbSetOrder(1))
		BQV->(dbGoTop())
		BR8->(dbSelectArea("BR8"))
		BR8->(dbSetOrder(1))

		If BQV->(dbSeek( xFilial("BQV")+B53->B53_NUMGUI))

				While !BQV->(EOF()) .AND. xFilial("BQV")+B53->B53_NUMGUI == BQV->(BQV_FILIAL+BQV_CODOPE+BQV_ANOINT+BQV_MESINT+BQV_NUMINT)

					//se tiver procedimento de diaria na guia não precisa olar a critica de diaria pois vai pelo procedimento
					If BR8->( MsSeek(xFilial("BR8")+BQV->BQV_CODPAD+BQV->BQV_CODPRO) ) .AND. BR8->BR8_TPPROC=='4'

						lProcDia := .T.
						exit

					Endif


					BQV->(dbSkip())

				EndDo

		 EndIf

		if !lProcDia

			BQZ->(DbSetOrder(1))//BEL_FILIAL + BEL_CODOPE + BEL_ANOINT + BEL_MESINT + BEL_NUMINT + BEL_SEQUEN

			If BQZ->(msSeek(xFilial("BQZ")+cNumGui))

				While !BQZ->(EoF()) .and. xFilial("BQZ")+cNumGui == BQZ->(BQZ_FILIAL+BQZ_CODOPE+BQZ_ANOINT+BQZ_MESINT+BQZ_NUMINT)

					if BQZ->BQZ_CODGLO == __aCdCri585[1]

						lRet := .T.
						exit

					endIf
					BQZ->(DbSkip())
				EndDo

			EndIf

		endIf

	endIf

EndIf

restArea(aAreaCri)
restArea(aAreaPro)

return lRet


//--------------------------------------------------------------------------------
/*/{Protheus.doc} PLVLAPOPME
Busca o valor apresentado pelo prestador na solicitação de OPME
@author Oscar Zanin
@since 20/12/2016
@version P12
/*/
//---------------------------------------------------------------------------------
function  PLVLAPOPME(cNumgui, cCodTab, cCodPro)

Local nRet := 0

B4C->(DbSetOrder(1))
If B4C->(MsSeek(xFilial("B4C") + cNumGui))
	While !(B4C->(EoF())) .AND. cNumGui == B4C->(B4C_OPEMOV + B4C_ANOAUT + B4C_MESAUT + B4C_NUMAUT)
		If B4C->B4C_CODPRO == cCodPro .AND. B4C->B4C_CODPAD == cCodTab
			nRet := B4C->B4C_VLRUNT
			Exit
		EndIf
		B4C->(DbSkip())
	EndDo
EndIf

Return nRet

//--------------------------------------------------------------------------------
/*/{Protheus.doc} PLValProc
Validação que permite ou não alterar um procedimento na rotina de inclusão de 
procedimentos pela auditoria
@author Thiago Ribas
@since 23/07/2017
@version P12
/*/
//---------------------------------------------------------------------------------
FUNCTION PLValProc(cAliItem) 

LOCAL cCodpro    := oGDPRI:aCols[oGDPRI:nAt, GdFieldPos(cAliItem+"_CODPRO",oGDPRI:aHeader)]
LOCAL nPosImgSt  := GdFieldPos(cAliItem+"_IMGSTA",oGDPRI:aHeader)
LOCAL nPosStat := GdFieldPos(cAliItem+"_STATUS",oGDPRI:aHeader)
LOCAL lRet    := .T.

	If oGDPri:acols[oGDPRI:nAt,nPosImgSt] == "DISABLE" .AND. !EMPTY(cCodpro) .OR.;
	   ALLTRIM(oGDPri:acols[oGDPRI:nAt,nPosImgSt]) == "ENABLE" .AND. oGDPri:acols[oGDPRI:nAt,nPosStat] == "1"
		lRet := .F.
	EndIf
return lRet

//--------------------------------------------------------------------------------
/*/{Protheus.doc} PLGERACAB
Gera o array com os dados do cabeçalho da guias
@author Thiago Ribas
@since 23/07/2017
@version P12
/*/
//---------------------------------------------------------------------------------
FUNCTION PLGERACAB(cAliasCab,aCalPag) 

LOCAL aHeadeGui := {}
LOCAL nLenHeadr := 0
LOCAL cCampo    := ""
LOCAL aDados    := {}
LOCAL aDadosBEA := {}
LOCAL nPosHeadr := 0

//Store Header cAliasCab TO aHeadeGui For alltrim(SX3->X3_CONTEXT) <> "V"

aHeadeGui := (cAliasCab)->(DbStruct())

nLenHeadr := LEN(aHeadeGui)

	For nPosHeadr := 1 To nLenHeadr
			
		cCampo := ALLTRIM(aHeadeGui[nPosHeadr][1]) //campo

		//se não tem valor não cria posição no array
		//isso é necessário para melhorar a performance
		If EMPTY(&(cAliasCab+"->" + cCampo))
			Loop
		EndIf

		If cCampo == cAliasCab+"_CANCEL"
			aadd(aDados,{cCampo, "0"}) 
			Loop

		ElseIf cCampo == cAliasCab+"_USUOPE"
			aadd(aDados,{cCampo, PLSRTCDUSR()}) 
			Loop

		ElseIf cCampo == cAliasCab+"_DESOPE"
			aadd(aDados,{cCampo, PLRETOPE()})
			Loop

		ElseIf cCampo == cAliasCab+"_TPGRV"
			aadd(aDados,{cCampo, "1"})
			Loop

		ElseIf cCampo == cAliasCab+"_AUDITO"
			aadd(aDados,{cCampo, "1"})
			Loop

		ElseIf cCampo == cAliasCab+"_CANEDI"
			aadd(aDados,{cCampo, ""})
			Loop

		ElseIf cCampo == cAliasCab+"_CANTIS"
			aadd(aDados,{cCampo, ""})
			Loop


		ElseIf cCampo == cAliasCab+"_DATSOL"
			aadd(aDados,{cCampo, dDataBase})
			Loop
		EndIf

		If cAliasCab == "BEA"	
			
			If cCampo == cAliasCab+"_HORPRO"
				aadd(aDados,{cCampo, StrTran(Time(),":","")}) 
				Loop

			ElseIf cCampo == cAliasCab+"_HHDIGI"
				aadd(aDados,{cCampo, StrTran(Time(),":","")}) 
				Loop
			EndIf
		EndIf
			
		If cCampo == cAliasCab+"_DATPRO" .AND. cAliasCab $ "BEA,B4A"
			aadd(aDados,{cCampo, dDataBase}) 
			Loop

			ElseIf cCampo == cAliasCab+"_CANTIS"
			aadd(aDados,{cCampo, ""})
			Loop

			ElseIf cCampo == cAliasCab+"_CANEDI"
			aadd(aDados,{cCampo, ""})
			Loop
		
		endIf

		If cCampo == cAliasCab+"_ANOPAG" .AND. cAliasCab $ "BEA,B4Q"
			aadd(aDados,{cCampo, aCalPag[4]}) 
			Loop
		
		ElseIf cCampo == cAliasCab+"_MESPAG" .AND. cAliasCab $ "BEA,B4Q"
			aadd(aDados,{cCampo, aCalPag[5]})
			Loop
		EndIf
	
		If cAliasCab == "BE4"	
		
			If cCampo == cAliasCab+"_SITUAC"
				aadd(aDados,{cCampo, "1"})
				Loop

			ElseIf cCampo == cAliasCab+"_STATUS"
				aadd(aDados,{cCampo, "3"})
				Loop
			EndIf
		EndIf
		
		/*Se não popular o array em nenhuma das condições 
			o campo será gravado com o valor originario da guia*/
		aadd(aDados,{cCampo , &(cAliasCab+"->" + cCampo)}) 
	Next

	//é necessário gerar o array de dados da BEA quando a guia é de internação
	//assim como tem que gravar os dados iguais da BE4 tem que gravar a BEA correspondente
	If cAliasCab == "BE4"

		aHeadeGui := {}
		cAliasCab := "BEA"
		nPosHeadr := 0

		//Store Header cAliasCab TO aHeadeGui For alltrim(SX3->X3_CONTEXT) <> "V" 
		
		aHeadeGui := (cAliasCab)->(DbStruct())
		nLenHeadr := LEN(aHeadeGui)

		For nPosHeadr := 1 To nLenHeadr
			
			cCampo := ALLTRIM(aHeadeGui[nPosHeadr][1]) //campo

			/*se não tem valor não cria posição no array.
			isso é necessário para melhorar a performance, mas no caso da guia de internação irá
			demorar um pouco mais para gerar a guia devido a gravação em duas tabelas*/
			If EMPTY(&(cAliasCab+"->" + cCampo))
				Loop
			EndIf

			If cCampo == cAliasCab+"_CANCEL"
				aadd(aDadosBEA,{cCampo, "0"}) 
				Loop

			ElseIf cCampo == cAliasCab+"_USUOPE"
				aadd(aDadosBEA,{cCampo, PLSRTCDUSR()}) 
				Loop

			ElseIf cCampo == cAliasCab+"_DESOPE"
				aadd(aDadosBEA,{cCampo, PLRETOPE()})
				Loop

			ElseIf cCampo == cAliasCab+"_TPGRV"
				aadd(aDadosBEA,{cCampo, "1"})
				Loop

			ElseIf cCampo == cAliasCab+"_AUDITO"
				aadd(aDadosBEA,{cCampo, "1"})
				Loop

			ElseIf cCampo == cAliasCab+"_DATSOL"
				aadd(aDadosBEA,{cCampo, dDataBase})
				Loop

			ElseIf cCampo == cAliasCab+"_HORPRO"
				aadd(aDadosBEA,{cCampo, StrTran(Time(),":","")}) 
				Loop

			ElseIf cCampo == cAliasCab+"_HHDIGI"
				aadd(aDadosBEA,{cCampo, StrTran(Time(),":","")}) 
				Loop
			
			ElseIf cCampo == cAliasCab+"_DATPRO"
				aadd(aDadosBEA,{cCampo, dDataBase}) 
				Loop

			ElseIf cCampo == cAliasCab+"_ANOPAG"
				aadd(aDadosBEA,{cCampo, aCalPag[4]}) 
				Loop
			
			ElseIf cCampo == cAliasCab+"_MESPAG"
				aadd(aDadosBEA,{cCampo, aCalPag[5]})
				Loop
			EndIf

			/*Se não popular o array em nenhuma das condições 
			o campo será gravado com o valor originario da guia*/
			aadd(aDadosBEA,{cCampo , &(cAliasCab+"->" + cCampo)})
		Next
	EndIf

Return {aDados,aDadosBEA}

//--------------------------------------------------------------------------------
/*/{Protheus.doc} PLVldItem
Valida se existe itens novos para gerar a nova guia
@author Thiago Ribas
@since 23/07/2017
@version P12
/*/
//---------------------------------------------------------------------------------
function PLVldItem(nQtdProcd) 

LOCAL nLenProc  := 0
LOCAL nI        := 0	
LOCAL lNovoProc := .F.
LOCAL nOpc      := 0

//verifica se houve modificação no grid
If ogdpri:LMODIFIED
	
	nLenProc := LEN(oGDPri:aCols)
	nLenHead := LEN(oGDPri:aHeader) + 1

	//vai percorrer os itens novos incluidos
	For nI := (nQtdProcd + 1) To nLenProc

		//verifica se existe pelo menos um item que não foi excluido para que permita gerar a nova guia
		If !ogdpri:aCols[nI][nLenHead]
			nOpc := 1
			EXIT
		EndIf
	Next
EndIf

If nOpc == 0
	MsgAlert(STR0066) //"Para gerar a nova guia é necessário incluir um ou mais procedimentos"
EndIf

return nOpc

//--------------------------------------------------------------------------------
/*/{Protheus.doc} PLCopInte
Copia todas as interações da guia que está sendo cancelada para a nova guia
@author Thiago Ribas
@since 23/07/2017
@version P12
/*/
//---------------------------------------------------------------------------------
Function PLCopInte(cGuiCanc, cCodOpe, cAno, cMes, cNumAut) 

LOCAL aHeadInte := {}
LOCAL nLenHeade := 0
LOCAL nI        := 0
LOCAL oBBR      := NIL 
LOCAL cCampoInt := ""
LOCAL nRecno    := 0
LOCAL cObserv   := ""

aHeadInte := BBR->(DbStruct())
nLenHeade := LEN(aHeadInte)

BBR->(DbSetOrder(1))
If BBR->(MsSeek(xFilial("BBR") + cGuiCanc))

	While BBR->(BBR_FILIAL + BBR_CODOPE + BBR_ANOAUT + BBR_MESAUT + BBR_NUMAUT) == xFilial("BBR") + cGuiCanc

		//pega o recno do registro atual na BBR
		nRecno := BBR->(Recno())

		//Instancia o bjeto que irá salvar os dados na base
		oBBR := PLSSTRUC():New("BBR",MODEL_OPERATION_INSERT,2)

		For nI := 1 To nLenHeade

			cCampoInt := ALLTRIM(aHeadInte[nI][1]) //campo

			If EMPTY(&("BBR->" + cCampoInt))
				Loop
			EndIf

			If cCampoInt == "BBR_CODOPE"
				oBBR:SetValue(cCampoInt, cCodOpe)
				Loop

			ElseIf cCampoInt == "BBR_ANOAUT"
				oBBR:SetValue(cCampoInt, cAno)
				Loop

			ElseIf cCampoInt == "BBR_MESAUT"
				oBBR:SetValue(cCampoInt, cMes)
				Loop

			ElseIf cCampoInt == "BBR_NUMAUT"
				oBBR:SetValue(cCampoInt, cNumAut)
				Loop
			EndIf

			If cCampoInt != "BBR_OBSERV"
				oBBR:SetValue(cCampoInt, &("BBR->" + cCampoInt))
			else	
				cObserv := &("BBR->" + cCampoInt)
			EndIf
		Next

		//Grava os dados
		If !oBBR:CRUD()
			oBBR:ExbMHelp( oBBR:GetErrorMessage(.T.) )
		EndIf

		//retira da memoria o objeto
		oBBR:Destroy()

		//Necessário dar o recLock pois se for atribuido uma string no campo de observação
		//onde existe espaço utilizando a sintaxe \r\n no momento do crud exibe um error log.
		//Se fosse para usar o reclock para gravar todos os dados a implementação seria mais trabalhosa
		//e precisaria de mais parâmetros e tambem teria impacto na performance
		BBR->(RecLock("BBR",.F.))
		BBR->BBR_OBSERV := cObserv 
		BBR->( MsUnLock() )	
		
		//apos ter dado o crud, o registro posicionado é o que foi gerado, por isso posicionamos no registro anterior.
		BBR->(dbGoTo(nRecno))
		
		//e vai para o proximo registro para copiar
		BBR->(dbSkip())
	EndDo
EndIf

Return


//--------------------------------------------------------------------------------
/*/{Protheus.doc} PLGRVORGER
Grava os campos de guia de origem e guia gerada para rastreamento de cópia e
cancelamento de guia
@author Francisco Edcarlo
@since 18/09/2017
@version P12
/*/
//---------------------------------------------------------------------------------
Function PLGRVORGER(nRecB53O, nRecB53G, cGuiaN) 

Local cGuiaA := ""

//Grava na guia original a nova guia gerada
If (B53->(FieldPos("B53_NMGGER")) > 0)
	B53->(DbGoto(nRecB53O))
	B53->(Reclock("B53", .F.))
		B53->B53_NMGGER := cGuiaN
	B53->(MsUnlock())
EndIf

cGuiaA := B53->B53_NUMGUI

//Grava na guia gerada o numero da guia original
If (B53->(FieldPos("B53_NMGORI")) > 0)
	B53->(DbGoto(nRecB53G))
	B53->(Reclock("B53", .F.))
		B53->B53_NMGORI := cGuiaA
	B53->(MsUnlock())
EndIf

Return

//--------------------------------------------------------------------------------
/*/{Protheus.doc} PLANEXRADI
Exibe os anexos de radioterapia em um grid separado da auditoria por não ter procedimento
@author Johnnatan cruz
@since 11/06/2018
@version P12
/*/
//---------------------------------------------------------------------------------
Function PLANEXRADI(cNumGui)
Local aValRet := {}
Local aDados := {}
Local aCabec := {}
Local nI := 0
LOCAL oDlg              
LOCAL nOpca      := 0
LOCAL bCancel    := { || nOpca := 0, oDlg:End() }  
LOCAL lVisGui    := B4A->(FieldPos('B4A_VISGUI')) > 0 
Local bVisGuia   := { || If ( lVisGui, (B4A->(Reclock('B4A', .F.)), B4A->B4A_VISGUI := "1", B4A->(MsUnlock()), aDados[oCritica:nAt, 4] := "Sim"), )}                                                            
LOCAL aButtons 	:= {}
LOCAL bLDblClick := bCancel
LOCAL cTpRel     := "M"
lOCAL cTitulo := "Anexos Radioterapia"
Local bBlickUser := { ||  &("PLSA790GUIA( aDados[oCritica:nAt, 2], '6'), Eval(bVisGuia)")}  //Evento do clique duplo da tela
LOCAL nTmRel     := 132
LOCAL aArrayAux  := {}	
LOCAL cLin1 := 008.0
LOCAL cLin2 := 036.4
LOCAL cCol1 := 010.3
LOCAL cCol2 := 100.3
LOCAL cHoriz:= 345

// variaveis lgpd 
local aCamposCen  	:= {}
local aBls  		:= {}

PRIVATE aProAud := {}
PRIVATE oCritica

//Criação do arrays
aValRet := PLSCFGUAX(cNumGui, , , .T.)

For nI := 1 To Len(aValRet[1])
	If (aValRet[1][nI][2] == "08")
		AADD(aDados, {"Radioterapia", aValRet[1][nI][1], B53->B53_NUMGUI, IIf(aValRet[1][nI][3] == "1", "Sim", "Não")})
	EndIf
Next

If !Len(aDados) > 0
	MsgAlert (STR0067) // "Não existem anexos de radioterapia para ser analisada para esta guia !"
	Return
EndIf
 
// Define fonte para alihar informacoes no plscrigen.
Define FONT oFont NAME "Courier New" Size 0,-10 BOLD
	                 
Aadd(aButtons, {"RELATORIO",{ || ImpCriGen(aDados,aCabec,cTitulo,cTpRel,nTmRel) },"Imprimir"} )
	   	
aSize    := MsAdvSize()
aObjects := {}
AAdd( aObjects, { 100, 100, .t., .t.,.t. } )
aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
aPosObj := MsObjSize( aInfo, aObjects,.T. )

DEFINE MSDIALOG oDlg TITLE cTitulo FROM cLin1,cCol1 TO cLin2,cCol2 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta o browse...                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ            
oCritica := TcBrowse():New( 032, 005, cHoriz, 170,,,, oDlg,,,,,,,,,,,, .F.,, .T.,, .F., )
    
oCritica:bLDblClick := { || Eval(bBlickUser,oCritica,aArrayAux), bLDblClick } //Evendo duplo clique na linha 
oCritica:oFont := IIf(oFont == Nil, oCritica:oFont, oFont)

oCritica:AddColumn(TcColumn():New("Tp Guia",{ || aDados[oCritica:nAt, 1] },"@C",nil,nil,nil,50,.F.,.F.,nil,nil,nil,.F.,nil))
oCritica:AddColumn(TcColumn():New("Número Guia",{ || aDados[oCritica:nAt, 2] },"@C",nil,nil,nil,80,.F.,.F.,nil,nil,nil,.F.,nil))
oCritica:AddColumn(TcColumn():New("Guia de Referência",{ || aDados[oCritica:nAt, 3] },"@C",nil,nil,nil,80,.F.,.F.,nil,nil,nil,.F.,nil))
oCritica:AddColumn(TcColumn():New("Guia Analisada?",{ || aDados[oCritica:nAt, 4] },"@C",nil,nil,nil,50,.F.,.F.,nil,nil,nil,.F.,nil))

if objCENFUNLGP:isLGPDAt()
	aCamposCen := {.f., "B4A_OPEMOV+B4A_ANOAUT+B4A_MESAUT+B4A_NUMAUT", "B53_NUMGUI", "B4A_VISGUI"}
	aBls := objCENFUNLGP:getTcBrw(aCamposCen)

	oCritica:aObfuscatedCols := aBls
	objCENFUNLGP:useLogUser()
endif
	
oCritica:SetArray(aDados)
oCritica:Refresh()            
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ativa dialogo....                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Len(aDados)>1 .Or. !lVisGui 
	ACTIVATE MSDIALOG oDlg ON INIT Eval( { || EnChoiceBar(oDlg,/*bOk*/, bCancel,.F.,aButtons, /*nRecno*/, /*cAlias*/, /*lMashups*/, /*lImpCad*/, /*lPadrao*/, .F., /*lWalkThru*/, /*cProfileID*/) } ) Center	   
Else             
	If Len(aDados) == 1 .And. lVisGui
		EVAL(bBlickUser)
	   	aDados[1, 4] := "Sim" 
	EndIf   	
EndIf

DbSelectArea("BA0")

Return aDados

//-------------------------------------------------------------------
/*/{Protheus.doc}) PL790DUT
Exibe o cadastro da DUT correspondente se houver

@author  Renan Sakai 
@version P12
@since    14.02.19
/*/
//-------------------------------------------------------------------
Function PL790DUT( cCodPad,cCodPro )	
Local cCodRol :=  Alltrim(cCodPro)
Local lDUTGrid := PlsAliasExi("BKY") .And. B72->(FieldPos("B72_TABDUT")) > 0

if BRW->(FieldPos("BRW_TABDUT")) > 0 .And. BRW->(FieldPos("BRW_CODDUT")) > 0

	BR8->(DbSetOrder(1))//BR8_FILIAL+BR8_CODPAD+BR8_CODPSA+BR8_ANASIN
	if BR8->(MsSeek(xFilial("BR8")+cCodPad+cCodPro)) .And. !Empty(BR8->BR8_CODROL)
		cCodRol := Alltrim(BR8->BR8_CODROL)
	endIf	

	BRW->(DbSetOrder(1))//BRW_FILIAL+BRW_CODROL
	If lDUTGrid .And. BRW->(MsSeek(xFilial("BRW")+cCodRol)) .And. !Empty(BRW->BRW_TABDUT)
		PLA095DUT(M->B72_TABDUT,M->B72_CODDUT,M->B72_SUBDUT)
	ElseIf BRW->(MsSeek(xFilial("BRW")+cCodRol)) .And. !Empty(BRW->BRW_TABDUT) .And. !Empty(BRW->BRW_CODDUT)
		PLA095DUT(BRW->BRW_TABDUT,BRW->BRW_CODDUT,BRW->BRW_DUTSUB)
	Else
		Aviso( STR0070,STR0071,{ STR0072 }, 2 ) //"Cadastro DUT"###"O evento selecionado não tem DUT cadastrada."###"OK"
	EndIf

else
	Aviso( STR0070,STR0073,{ STR0072 }, 2 ) //"Cadastro DUT"###"Para exibir a DUT é necessário criar os campos BRW_TABDUT e BRW_CODDUT. Entre em contato com o administrador do sistema."
endIf

Return



//-------------------------------------------------------------------
/*/{Protheus.doc}) VldChange
Tratamento para que na troca de um folder seja atualizado as informações
@version P12
@since 04/04/2019
/*/
//-------------------------------------------------------------------
Function VldChange(ObjF)

Local lRet := .T.

ObjF:bChange := {|| IIf(empty(oB68),"",oB68:Refresh()),;
                    IIf(empty(oB69),"",oB69:Refresh()),;
                    IIf(empty(oB70),"",oB70:Refresh()),;
                    IIf(empty(oB71),"",oB71:Refresh()),;
                    IIf(empty(oB72),"",oB72:Refresh())}

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc}) PL790DUTHI
Exibe o cadastro da DUT correspondente se houver no Historico da Auditoria

@author  Renan Sakai 
@version P12
@since    14.02.19
/*/
//-------------------------------------------------------------------
Function PL790DUTHI(oBrw,aMatDad)
Local cAux     := ""
Local cCodPad  := ""
Local cCodPro  := ""
Local nPosChar := 0

if BRW->(FieldPos("BRW_TABDUT")) > 0 .And. BRW->(FieldPos("BRW_CODDUT")) > 0
	cAux     := Substr(aMatDad[oBrw:nAt,5],4,len(aMatDad[oBrw:nAt,5]))
	nPosChar := At("-",cAux)

	cCodPad  := Substr(aMatDad[oBrw:nAt,5],1,2)
	cCodPro  := Alltrim(Substr(cAux,1,nPosChar-1))

	PL790DUT(cCodPad,cCodPro)	
else
	Aviso( STR0070,STR0073,{ STR0072 }, 2 ) //"Cadastro DUT"###"Para exibir a DUT é necessário criar os campos BRW_TABDUT e BRW_CODDUT. Entre em contato com o administrador do sistema."
endIf

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÍÍÍÍÍÍÍÍÍÍÍÍÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±ºPrograma  ³PLSVLDQTD  ºAutor  ³ Jader    º Data ³  06/2019    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.  ³ Atualiza no grid a quantidade de procedimentos solicitado/Autorizada  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
*/
FUNCTION PLSVLDQTD(nQtdSol) 
Local nQtdPro := M->BE2_QTDPRO
Local lRet := .T.
Default nQtdSol := 0

If (nQtdPro != 0)
	oGDPRI:aCols[oGDPRI:nAt, nQtdSol] := nQtdPro
Else
	MsgInfo("O valor informado é inválido")
	lRet := .F.
EndIf 

oGDPRI:refresh()

Return  lRet

//-------------------------------------------------------------------
/*/{Protheus.doc}) CheckGrvCrit

Verifica os itens da guia na auditoria se estão deletados

@author  Vinicius Queiros Teixeira 
@since   12/01/2021
@version Protheus 12
/*/
//-------------------------------------------------------------------
Static Function CheckGrvCrit(cAliasCab,cAliasIte,cAliasCrit,cChavGuia,lAuto)

Local cQuery
Local cAlias
Local nX
Local nIndice
Local nSeqCrit		:= 0
Local cCampoIte
Local cCampoCab
Local aCriticas		:= {}
Local aRetAut		:= {}
Local aArea			:= GetArea()
Local cOpeMov		:= Left(cChavGuia,4)
Local cAnoAut		:= SubStr(cChavGuia,5,4)
Local cMesAut		:= SubStr(cChavGuia,9,2)
Local cNumAut		:= Right(cChavGuia,8)
Local cSequen   
Local cTipoProc		:= "E"
Local dDatPro		:= dDataBase
Local aDadUsr		:= {}
Local aDadRDA		:= {}
Local aValAcuAut	:= {}
Local cTipo			:= "1"
Local cTpLocExec 	:= "1"
Local lValorGC		:= .T.
Local lTratRda		:= .F.
Local lRpc			:= .F.
Local lNegProPac	:= .F.
Local lTrarSolic 	:= .F.

Local cHorPro  	:= cCid  	:= cOpeSol	:= cCodSol	:= cRegAte	:= cCodExe	:= ""
Local cGuiaEmp	:= cChavLib	:= cGrauPa	:= cGuiJur	:= cTipGui	:= ""

Local cCodPad,	cCodPro,	nQtdPro ,	cMatric,	cAnoPag,	cMesPag,	cProRel,	nPrPrRl,	cOpeExe
Local cAteRNA,	cNraOpe,	lRegPagAto,	cTipPreGui,	cRDAEDI,	cAreaAbr,	lTratExLib,	lTratPagRda,cCodEsp
Local aVldGen,	cCodLoc,	cRegInt,	cTipAte,	cFinAte,	cEspSol,	cEspExe,	cPadInt,	cTipAdmissao
Local cPadCon,	cGrpInt,	aDadProrro, cCodGlosa,	cDescGlosa,	cInfoGlosa,	cTipoGlosa,	cSeqCri	

Local lChkLib	:= GetNewPar("MV_PLSCKLB", .T.)

Default lAuto	:= .F.

	cAlias := GetNextAlias()
	cQuery := " SELECT R_E_C_N_O_ Recno FROM " + RetSQLName(cAliasIte) + " " + cAliasIte
	cQuery += " WHERE " + cAliasIte + "_FILIAL = '" + xFilial(cAliasIte) + "' "
	cQuery += "   AND " + cAliasIte + "_OPEMOV = '" + cOpeMov + "' "
	cQuery += "   AND " + cAliasIte + "_ANOAUT = '" + cAnoAut + "' "
	cQuery += "   AND " + cAliasIte + "_MESAUT = '" + cMesAut + "' "
	cQuery += "   AND " + cAliasIte + "_NUMAUT = '" + cNumAut + "' "
	cQuery += "   AND " + cAliasIte + "_AUDITO = '1' "
	cQuery += "   AND " + cAliasIte + ".D_E_L_E_T_ = ' ' "

	If cAliasIte $ "BQV/BEJ" 
		cQuery := StrTran(cQuery,'AUT','INT')
		cQuery := StrTran(cQuery,'OPEMOV','CODOPE')
	EndIf

	DbUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cAlias,.F.,.T.)

	If (cAlias)->(!Eof())
		While (cAlias)->(!Eof())

			(cAliasIte)->(DbGoTo((cAlias)->Recno))

			cSequen := (cAliasIte)->(&(cAliasIte + "_SEQUEN"))
			
			(cAliasCrit)->(DbSetOrder(1))
			If !((cAliasCrit)->(MsSeek(xFilial(cAliasCrit) + cOpeMov + cAnoAut + cMesAut + cNumAut + cSequen))) .Or. lAuto
				
				If nSeqCrit == 0 .And. cAliasCrit <> "B46"
					nSeqCrit := UltSeqCrit(cAliasCrit,cOpeMov,cAnoAut,cMesAut,cNumAut)
					nSeqCrit++
				EndIf

				nIndice := IIF(cAliasCab == "BE4", 2, 1)
				(cAliasCab)->(DbSetOrder(nIndice))
				If (cAliasCab)->(MsSeek(xFilial(cAliasCab) + cOpeMov + cAnoAut + cMesAut + cNumAut))

					If cAliasCab == "B4Q"
						BE4->(DbSetORder(2))
						BE4->(MsSeek(xFilial("BE4") + B4Q->B4Q_GUIREF))
					EndIf

					cCampoIte 	:= cAliasIte + "->" + cAliasIte 
					cCampoCab	:= cAliasCab + "->" + cAliasCab

					If cAliasIte $ "BQV/B4C"
						dDatPro := &(cCampoIte + "_DATPRO")
						cHorPro := IIF((cAliasIte)->(FieldPos(cAliasIte + "_HORPRO")) > 0, &(cCampoIte + "_HORPRO"),"")
					Else
						dDatPro := &(cCampoCab + "_DATPRO")
					EndIf

					If Empty(cHorPro) .And. (cAliasCab)->(FieldPos(cAliasCab + "_HORPRO")) > 0
						cHorPro := &(cCampoCab + "_HORPRO")
					Endif

					cCodPad := 	&(cCampoIte + "_CODPAD")
					cCodPro := 	&(cCampoIte + "_CODPRO") 
					nQtdPro := 	&(cCampoIte + "_QTDPRO") 

					cMatric := 	&(cCampoCab + "_OPEUSR") + ;
								&(cCampoCab + "_CODEMP") + ;
								&(cCampoCab + "_MATRIC") + ;
								&(cCampoCab + "_TIPREG") + ;
								&(cCampoCab + "_DIGITO")

					aDadUsr := PLSDADUSR(cMatric, "1", .F., dDatPro)

					If cAliasCab <> "B4A"
						cOpeRDA		:= IIF(cAliasCab == "B4Q", BE4->BE4_OPERDA, &(cCampoCab + "_OPERDA"))
						cCodRDA		:= IIF(cAliasCab == "B4Q", BE4->BE4_CODRDA, &(cCampoCab + "_CODRDA"))
						cLocalRDA	:= IIF(cAliasCab == "B4Q", BE4->BE4_CODLOC, &(cCampoCab + "_CODLOC"))
						cEspecRDA	:= IIF(cAliasCab == "B4Q", BE4->BE4_CODESP, &(cCampoCab + "_CODESP"))
						
						aDadRDA := PLSDADRDA(cOpeRDA,cCodRDA,'1',dDatPro,cLocalRDA,cEspecRDA,cCodPad,cCodPro)		
					EndIf

					Do Case
						Case (cAliasCab)->(FieldPos(cAliasCab + "_CID")) > 0
							cCid := &(cCampoCab + "_CID")
						Case (cAliasCab)->(FieldPos(cAliasCab + "_CIDPRI")) > 0 .And. cAliasCab == "B4A" // Anexo Clinico
							cCid := &(cCampoCab + "_CIDPRI")
					EndCase
	
					cOpeSol := IIF((cAliasCab)->(FieldPos(cAliasCab + "_OPESOL")) > 0, &(cCampoCab + "_OPESOL"),"")

					If cAliasCab == "BEA" .And. (cAliasCab)->(FieldPos(cAliasCab + "_ORIGEM")) > 0
						cTipoProc := &(cCampoCab + "_ORIGEM")
						cTipoProc := IIF(cTipoProc == "2", "S", "E")
					EndIf

					lTrarSolic := (cTipoProc == "S")

					If (cAliasCab)->(FieldPos(cAliasCab +"_CDPFSO")) > 0
						cCodSol := &(cCampoCab + "_CDPFSO")
						If cTipoProc == "S" .And. Empty(cCodSol) .And. !Empty(aDadRDA[5])
							cCodSol := aDadRDA[5]
						EndIf
					EndIf

					cAnoPag	:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_ANOPAG")) > 0, &(cCampoCab + "_ANOPAG"),"")
					cMesPag	:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_MESPAG")) > 0, &(cCampoCab + "_MESPAG"),"")

					If cAliasCab $ "BE4/B4Q"
						cPadInt 	:= BE4->BE4_PADINT
						cPadCon 	:= BE4->BE4_PADCON
						cGrpInt 	:= BE4->BE4_GRPINT + BE4->BE4_TIPINT
						cRegAte 	:= "1"
						aDadProrro 	:= IIF(!Empty(BE4->BE4_DATPRO),{BE4->BE4_DATPRO,Substr(BE4->BE4_HORPRO,1,4)}, {})
					EndIf

					If cAliasCab == "BEA" .And. cAliasIte == "BQV"
						cPadInt := BEA->BEA_OPERDA
						cRegAte	:= "1" 
					EndIf 
					
					If Empty(cRegAte) .And. Len(aDadUsr) > 0
						cRegAte := IIF(Len(aDadUsr) >= 92, aDadUsr[92], "")
					endIf

					If cAliasCab $ "BEA/BE4"
						cCodExe := IIF((cAliasCab)->(FieldPos(cAliasCab + "_CDPFRE")) > 0, &(cCampoCab + "_CDPFRE"),"")
					EndIf

					cProRel	:= IIF((cAliasIte)->(FieldPos(cAliasIte + "_PROREL")) > 0, &(cCampoIte + "_PROREL"),"")
					nPrPrRl := IIF((cAliasIte)->(FieldPos(cAliasIte + "_PRPRRL")) > 0, &(cCampoIte + "_PRPRRL"),0)
					cOpeExe	:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_OPEEXE")) > 0, &(cCampoCab + "_OPEEXE"),Nil)
					cAteRNA := IIF((cAliasCab)->(FieldPos(cAliasCab + "_ATERNA")) > 0, &(cCampoCab + "_ATERNA"),"0")
					cNraOpe := IIF((cAliasCab)->(FieldPos(cAliasCab + "_NRAOPE")) > 0, &(cCampoCab + "_NRAOPE"),Nil)

					If !(cAliasIte == "BQV" .And. cAliasCab == "BE1") 
						cGuiaEmp := IIF((cAliasCab)->(FieldPos(cAliasCab + "_NRAEMP")) > 0, &(cCampoCab + "_NRAEMP"),"")
					EndIf

					lRegPagAto	:= IIF(cAliasIte == "B4C", .F., Nil)
					cTipPreGui	:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_TIPPRE")) > 0, &(cCampoCab + "_TIPPRE"),"")
					cRDAEDI 	:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_RDAEDI")) > 0, &(cCampoCab + "_RDAEDI"),"")

					If (cAliasCab)->(FieldPos(cAliasCab + "_NUMLIB")) > 0
						If !Empty(&(cCampoCab + "_NUMLIB"))
							cChavLib := &(cCampoCab + "_NUMLIB")
						Endif
					Endif

					cAreaAbr 	:= IIF(Len(aDadUsr) >= 65,aDadUsr[65],"")
					lTratExLib	:= IIF(AllTrim(GetNewPar("MV_PLEXLB","0")) == "1",.T.,.F.)

					If !lTratExLib
						lTratExLib := cTipoProc == "E" .Or. !Empty(cCodExe) 
					EndIf

					lTratPagRda	:= IIF(cAliasIte == "B4C", .F., .T.)
					cCodEsp 	:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_CODESP")) > 0, &(cCampoCab + "_CODESP"),"")
					aVldGen 	:= IIF(cTipoProc == "S" .And. !lChkLib, {.F.,.F.,nil,nil,nil,nil,nil,nil,nil,nil,nil},{})
					cCodLoc		:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_CODLOC")) > 0, &(cCampoCab + "_CODLOC"),Nil)
					cRegInt 	:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_REGINT")) > 0, &(cCampoCab + "_REGINT"),"")
					cTipAte 	:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_TIPATE")) > 0, &(cCampoCab + "_TIPATE"),"")
					cFinAte 	:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_TIPPAC")) > 0, &(cCampoCab + "_TIPPAC"),"")

					If cAliasCab == "BEA" .And. (cAliasCab)->(FieldPos(cAliasCab + "_GRAUPA")) > 0
						cGrauPa :=  &(cCampoCab + "_GRAUPA") 
					EndIf

					If (cAliasCab)->(FieldPos(cAliasCab + "_GUIJUR")) > 0
						cGuiJur := &(cCampoCab + "_GUIJUR")
						If cGuiJur == "1"
							If !PlsGetJur()[1]
								cGuiJur := ""
							Endif
						Endif
					EndIf
					
					cEspSol 		:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_ESPSOL")) > 0, &(cCampoCab + "_ESPSOL"),"")
					cEspExe 		:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_ESPEXE")) > 0, &(cCampoCab + "_ESPEXE"),"")
					cTipGui	  		:= IIF(cAliasIte == "BEJ", "03", PLSRetAut()[1])
					cTipAdmissao	:= IIF((cAliasCab)->(FieldPos(cAliasCab + "_TIPADM")) > 0, &(cCampoCab + "_TIPADM"),"")

					aRetAut	:= PLSAUTP(dDatPro,cHorPro,cCodPad,cCodPro,nQtdPro,aDadUsr,/*nRegBD6*/,aDadRDA,cTipo,lTratRda,cCid,/*lTratUsr*/,/*cLocalExec*/,lTrarSolic,;
									   cOpeSol,cCodSol,cAnoPag,cMesPag,cPadInt,cPadCon,cRegAte,lValorGC,cCodExe,cProRel,nPrPrRl,cOpeExe,aValAcuAut,cAteRNA,cNraOpe,;
									   cGuiaEmp,cSequen,/*cNumeroGuia*/,lRegPagAto,cTpLocExec,/*cFaces*/,/*lMudFase*/,/*cSenhaAut*/,cTipPreGui,cGrpInt,/*aObsolet*/,;
									   cRDAEDI,cChavLib,cAreaAbr,/*aDiarGui*/,/*aDiarPre*/,/*cDente*/,/*aFaces*/,/*lRecursivo*/,lTratExLib,lTratPagRda,cTipoProc,cCodEsp,;
									   /*aQtdBrow*/,aVldGen,cCodLoc,/*cChavGui*/,/*lReembolso*/,/*cTpProc*/,lRpc,cAliasCab,cRegInt,cTipAte,lNegProPac,/*lBK6BAU*/,cFinAte,;
									   cGrauPa,/*lElegibil*/,cGuiJur,/*aBD7*/,cEspSol,cEspExe,/*dDatCab*/,/*lCriDatSup*/,cTipGui,/*cStProc*/,/*aCritCab*/,/*lVerWeb*/,;
									   /*lCid*/,/*lPtuOnline*/,/*lInter*/,/*aRetAudPTU*/,/*cTabCrit*/,/*cValorApr*/,/*aDiarGlo*/,/*lNovaLib*/,/*nQTD078*/,/*cStatItem*/,;
									   /*lOutDesp*/,/*cNumLibe2*/,cTipAdmissao,/*cGuiRefOpm*/,/*cTGOriginal*/,aDadProrro)

					If !aRetAut[1] .And. ValType(aRetAut[2]) == "A" .And. Len(aRetAut[2]) > 0 
						For nX := 1 To Len(aRetAut[2])
							If !Empty(aRetAut[2][nX][1])
								cCodGlosa 	:= aRetAut[2][nX][1]
								cDescGlosa 	:= aRetAut[2][nX][2]
								cTipoGlosa	:= aRetAut[2][nX][5] 				
							Else
								cDescGlosa 	:= cCodGlosa + " - " + aRetAut[2][nX][2]
								cCodGlosa	:= "" 	
							EndIf
							cInfoGlosa	:= aRetAut[2][nX][3]

							If cAliasCrit == "B46"
								cSeqCri := ""
							Else
								cSeqCri	:= StrZero(nSeqCrit,3) 
								nSeqCrit++
							EndIf

							aAdd(aCriticas,{cSequen, cCodGlosa, cDescGlosa, cInfoGlosa, cTipoGlosa, cSeqCri})											 
						Next nX
					Else
						cCodGlosa 	:= "025"
						BCT->(DbSetOrder(1))
						If BCT->(MsSeek(xFilial("BCT") + cOpeMov + cCodGlosa))
							cDescGlosa 	:= BCT->BCT_DESCRI
							cInfoGlosa	:= ""
							cTipoGlosa 	:= BCT->BCT_TIPO
							
							If cAliasCrit == "B46"
								cSeqCri := ""
							Else
								cSeqCri	:= StrZero(nSeqCrit,3) 
								nSeqCrit++
							EndIf

							aAdd(aCriticas,{cSequen, cCodGlosa, cDescGlosa, cInfoGlosa, cTipoGlosa, cSeqCri})
						EndIf						
					EndIf 

				EndIf
			EndIf
			(cAlias)->(DbSkip())
		EndDo
	EndIf
	
	RestArea(aArea)

Return aCriticas

//-------------------------------------------------------------------
/*/{Protheus.doc}) GrvCritAud

Grava as criticas deletadas para serem auditadas

@author  Vinicius Queiros Teixeira 
@since   27/01/2021
@version Protheus 12
/*/
//-------------------------------------------------------------------
Static Function GrvCritAud(cAliasCrit,aRetCrit,cChavGuia)

Local nX
Local cPonteiro, cCampoOpe, cCampoAno, cCampoMes, cCampoAut
Local lRetorno	:= .F.
Local cOpeMov	:= Left(cChavGuia,4)
Local cAnoAut	:= SubStr(cChavGuia,5,4)
Local cMesAut	:= SubStr(cChavGuia,9,2)
Local cNumAut	:= Right(cChavGuia,8)

	If Len(aRetCrit) > 0
		cPonteiro := cAliasCrit + "->" + cAliasCrit 
		
		cCampoOpe := IIF(cAliasCrit $ "BEG/B46", "_OPEMOV" , "_CODOPE" )
		cCampoAno := IIF(cAliasCrit $ "BEG/B46", "_ANOAUT" , "_ANOINT" )
		cCampoMes := IIF(cAliasCrit $ "BEG/B46", "_MESAUT" , "_MESINT" )
		cCampoAut := IIF(cAliasCrit $ "BEG/B46", "_NUMAUT" , "_NUMINT" )

		For nX := 1 To Len(aRetCrit)

			&(cAliasCrit + "->(Reclock('" + cAliasCrit + "',.T.))")
			&(cPonteiro + "_FILIAL") 	:= xFilial(cAliasCrit)
			&(cPonteiro + cCampoOpe) 	:= cOpeMov
			&(cPonteiro + cCampoAno) 	:= cAnoAut
			&(cPonteiro + cCampoMes) 	:= cMesAut
			&(cPonteiro + cCampoAut) 	:= cNumAut
			&(cPonteiro + "_SEQUEN") 	:= aRetCrit[nX][1]
			&(cPonteiro + "_CODGLO") 	:= aRetCrit[nX][2]
			&(cPonteiro + "_DESGLO") 	:= aRetCrit[nX][3]
			&(cPonteiro + "_INFGLO") 	:= aRetCrit[nX][4]
			&(cPonteiro + "_TIPO")		:= aRetCrit[nX][5]
			If cAliasCrit <> "B46"
				&(cPonteiro + "_SEQCRI") := aRetCrit[nX][6]
			EndIf
			&(cAliasCrit + "->( MsUnLock() )")

			lRetorno := .T.
		Next nX
	EndIf

Return lRetorno

//-------------------------------------------------------------------
/*/{Protheus.doc}) UltSeqCrit

Retorna o ultimo sequencial das criticas 

@author  Vinicius Queiros Teixeira 
@since   27/01/2021
@version Protheus 12
/*/
//-------------------------------------------------------------------
Static Function UltSeqCrit(cAliasCrit,cOpeMov,cAnoAut,cMesAut,cNumAut)

Local nSeqUlt	:= 0
Local cSequen
Local cQuery
	
	cQuery := " SELECT MAX(" + cAliasCrit + "_SEQCRI) MAXSEQ FROM " + RetSQLName(cAliasCrit) + " " + cAliasCrit 
	cQuery += " WHERE " + cAliasCrit + "_FILIAL = '" + xFilial(cAliasCrit) + "' "
	cQuery += "   AND " + cAliasCrit + "_OPEMOV = '" + cOpeMov + "' "
	cQuery += "   AND " + cAliasCrit + "_ANOAUT = '" + cAnoAut + "' "
	cQuery += "   AND " + cAliasCrit + "_MESAUT = '" + cMesAut + "' "
	cQuery += "   AND " + cAliasCrit + "_NUMAUT = '" + cNumAut + "' "
	cQuery += "   AND " + cAliasCrit + ".D_E_L_E_T_ = ' ' "

	If cAliasCrit $ "BEL/BQZ" 
		cQuery := StrTran(cQuery,'AUT','INT')
		cQuery := StrTran(cQuery,'OPEMOV','CODOPE')
	EndIf

    cSequen := MPSysExecScalar(cQuery, "MAXSEQ")

	nSeqUlt := Val(cSequen)

Return nSeqUlt


//-------------------------------------------------------------------
/*/{Protheus.doc}) PL790FMens
Filtro especifico de guias pela mensageria

@author  Renan Sakai
@since   27/01/2021
@version Protheus 12
/*/
//-------------------------------------------------------------------
Function PL790FMens()

	Local nOpca   := 0
	Local cFiltro := "@"
	Local nRadio  := 1
	Local aItems  := {STR0075, STR0076, STR0077, STR0078} //"Pend. Auditor" ## "Pend. Prestador" ## "Finalizado" ## "Todas guias"

	DEFINE DIALOG oDlg TITLE STR0074 FROM 10,0 TO 170,500 PIXEL //"Filtrar Guias Mensageria"
   	
		oRadio := TRadMenu():New (035,010,aItems,,oDlg,,,,,,,,100,12,,,,.T.)
		oRadio:bSetGet := {|u|Iif (PCount()==0,nRadio,nRadio:=u)}
	
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg ,{|| nOpca := K_OK, oDlg:End(),.F.}, {|| oDlg:End()},.F.) Centered

	if nOpca == K_OK
		cFiltro += " B53_FILIAL = '" + xFilial('B53') + "' "
		if cValtoChar(nRadio) $ "1/2/3"
			cFiltro += " AND B53_MSGSTA = '"+cValtoChar(nRadio)+"' "
		endIf
		oB53:SetFilterDefault(cFiltro)
		oB53:Refresh(.T.)
		if (!Empty(nCodRec))
			B53->(DbGoTo(nCodRec)) //Posiciona na guia que estava anteriormente
		endIf
		PLS790OST()
	endIf

Return
