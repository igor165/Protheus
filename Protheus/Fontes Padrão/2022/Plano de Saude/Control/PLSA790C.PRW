#INCLUDE "PLSA790C.ch"
#INCLUDE "TOTVS.CH"
#INCLUDE "FWMVCDEF.CH"
#DEFINE PLS_ADMINITRADOR '2'

STATIC lEvo := .F.

/*/{Protheus.doc} PLSA790C

Controle da class auditoria

@author Alexander Santos
@since 16/02/2011
@version P11
/*/
CLASS PLSA790C FROM PLSCONTR

DATA cAudito			AS STRING
DATA cDirFax   	 	AS STRING
DATA cPerfil   	 	AS STRING
DATA cDesPerf  	 	AS STRING
DATA cCodDep	 		AS STRING
DATA cOperad			AS STRING
DATA cACab				AS STRING
DATA cAIte				AS STRING
DATA cACri				AS STRING
DATA nIdxIte			AS NUMERIC
DATA nIdxCri			AS NUMERIC
DATA cOwner			AS STRING
DATA cAllPerfil     	AS STRING
DATA cNumGuia       	AS STRING
DATA cCoddepa			AS STRING 
DATA lLibGuia			AS LOGIC  
DATA lIncProc			AS LOGIC 
DATA lVldRot			AS LOGIC
DATA lIncDem   	 	AS LOGIC
DATA lIncPar   	 	AS LOGIC
DATA lIncEnc   	 	AS LOGIC
DATA lMonFax   	 	AS LOGIC
DATA lNegPar  	 		AS LOGIC
DATA lIncAno 	 		AS LOGIC
DATA lDemanda  	 	AS LOGIC
DATA lInconsistente 	AS LOGIC
DATA lIncoRes			AS LOGIC
DATA lNotInRes			AS LOGIC
DATA lParticipativa	AS LOGIC
DATA lAgendada			AS LOGIC
DATA lOpAudi   	 	AS LOGIC
DATA lIntSau   	 	AS LOGIC
DATA lVisAud   	 	AS LOGIC
DATA lEmAnalise	 	AS LOGIC
DATA lEspera  	 		AS LOGIC
DATA lAnalisada  		AS LOGIC
DATA lAutorizada 		AS LOGIC
DATA lOwner		 	AS LOGIC
DATA lThisDep       	AS LOGIC
DATA lVisible	 		AS LOGIC
DATA lHaveOwner	 	AS LOGIC
DATA lHaveGuia			AS LOGIC
DATA lConsulta			AS LOGIC
DATA lSadt				AS LOGIC
DATA lInternacao		AS LOGIC
DATA lEvolucao			AS LOGIC
DATA lOdonto			AS LOGIC
DATA lReembolso		AS LOGIC
DATA lOPME				AS LOGIC
DATA lRotinaGen		AS LOGIC
DATA lProrrog			AS LOGIC
DATA lCriDia 			AS LOGIC

METHOD New() Constructor
METHOD GetRotiAtu(aDad,cPerfil)
METHOD GetFiles(cDirPerf,aFiles) 
METHOD GetDocBC(nAt,aFiles,cAlias,cUnico)
METHOD SetPerfil(cPerfil)
METHOD SetPrioridade(cPrio)
METHOD SetSituac(cSituac)
METHOD SetNegPar(lNegPar)
METHOD SetOnlyVisible(lVisible)
METHOD SetAuditoria(lAuditoria,lIntern,lEvolu,lReembolso,lPartic,aDadCri,aCabCri,cCodCri,cRegInt,cAliasCri,aColsITE,aHeaderITE,cAliasIte)
METHOD SetAuditoGen(lRotGen, cAliOrig, cAliasIte, cAliasCri, cCodOpe, cNumCont, cMatric, cNomUsr, aAtuAItens, aAtuFil, cCpRelac, cTipGui ) 
METHOD SetDemanda()
METHOD EMail()
METHOD BancoCon(cAlias,nOpc,lLog,cTipo)
METHOD VldAplication()
METHOD NegComp()
METHOD VldFLD(nFolder,oTFolder,cAlias)
METHOD VldAcessoGui(lEmAnlise,lIncons,lAutori, lAudit, cAlias)
METHOD MarkAll(oMark,lMarcar)
METHOD DelDocBC(nAt,aFiles) 
METHOD SetAtuPClass()
METHOD SetFieldGui( oSelf )
METHOD ProcPart() 
METHOD Destroy()

EndClass     
//-------------------------------------------------------------------
/*/{Protheus.doc} New
Construtor da Class

@param   cOperad Operadora do sistema registro da BX4

@author Alexander Santos
@since 16/02/2011
@version P11
/*/
//-------------------------------------------------------------------
METHOD New(lInclusao) CLASS PLSA790C
::cOperad := RETCODUSR()
DEFAULT ::cPerfil	:= PLS_ADMINITRADOR
DEFAULT ::cCodDep	:= ""
DEFAULT ::lVisible	:= .F.
DEFAULT ::lVldRot	:= .T.
DEFAULT ::lNegPar	:= .F.
DEFAULT lInclusao   := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Verifica se e possivel utilizar esta rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !PLSALIASEXI("B53")                                       
	::lVldRot := .F.
	MSGALERT(STR0001 ) //"Não é possível utilizar esta rotina!"
	Return Self
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza informacoes da classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

if !lInclusao 
	::SetAtuPClass()
else
	oSelf := Self
	//Operador Corrente
	oSelf:cOperad := RETCODUSR()
	//Dados do operador
	RetDadOpe(oSelf)
endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se for interna-saude
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If ::lIntSau
	::SetOnlyVisible(.T.)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return Self
//-------------------------------------------------------------------
/*/{Protheus.doc} BancoCon
Banco de conhecimento

@author Alexander Santos
@since 16/02/2011
@version P11
/*/
METHOD BancoCon(cAlias,lChkDeman,nOpc,lLog,cTipo) Class PLSA790C
LOCAL aArea      := GetArea()      
LOCAL nHoraBase  := Seconds()
LOCAL cCodUsuDef := "XXXXXX"
LOCAL lRet		 := .T.
LOCAL oPADC 	 := NIL
LOCAL cChaveIn  	:= B53->B53_NUMGUI
LOCAL cChaveAC9 := If(Alltrim(B53->B53_TIPO) == "6", xfilial('B4A')+cChaveIn, xfilial('BE4')+cChaveIn)
Local nsoma := 1
Local nI	:= 0
Local cChv := "-"
PRIVATE aRotina  := {}
DEFAULT nOpc 	 := 1  
DEFAULT lLog	 := .T.        
DEFAULT lChkDeman:= .F.

aRotina := {{STR0003,'MsDocument',0,3},{"Inclusão Rápida",'PLSDOcs',0,3}} //"Conhecimento"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza informacoes da classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
::SetAtuPClass()
B53->( DbSetOrder(1) )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se nao for interna-saude e a guia é de demanda
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If lChkDeman .And. !::lIntSau
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Verifica se foi selecionada a opcao de b. conhecimento da demanda.
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oPADC := PLSPADRC():New(cAlias) 
	
	If oPADC:lMDDemanda .And. ::lDemanda
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Verifica se o registro de demanda (processo) pode ser editado se nao for 
		//³ o owner especifico do registro lOwnerEsp
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !oPADC:lOwnerEsp .And. !oPADC:lEditaProcesso
			MSGALERT(STR0002) //"Acesso negado ao processo"
			Return
		EndIf	
	EndIf    
	
	oPADC:Destroy(oPADC)
EndIf	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se o acesso foi permitido exibi banco de conhecimento
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If AllTrim(B53->B53_TIPO) == "11" .and. (B53->B53_ALIMOV == "B4Q")
//Prorrogação
	
	cAlias := "B4Q"
	
	B4Q->( DbSetOrder(1) ) //B4Q_FILIAL + B4Q_OPEMOV + B4Q_ANOAUT + B4Q_MESAUT + B4Q_NUMAUT + DTOS(B4Q_DATPRO) + B4Q_HORPRO
	B4Q->( MsSeek( xFilial("B4Q") + cChaveIn ) )
	
	If cTipo == "I" // inclusão nos itens
		DbSelectArea("BQV")
		cIndex := CriaTrab(NIL,.F.)
		cQuery := "BQV_FILIAL == '" + xFilial("BQV") + "' "
		cQuery += " .And. BQV_CODOPE == '" + B4Q->B4Q_OPEMOV + "'"
		cQuery += " .And. BQV_ANOINT == '" + B4Q->B4Q_ANOAUT + "'"
		cQuery += " .And. BQV_MESINT == '" + B4Q->B4Q_MESAUT + "'"
		cQuery += " .And. BQV_NUMINT == '" + B4Q->B4Q_NUMAUT + "'"
		IndRegua("BQV",cIndex,BQV->(IndexKey()),,cQuery)
		
		If BQV->(!Eof())
			MaWndBrowse(0,0,300,600,"Retorno de Doctos. de Saida","BQV",,aRotina,,,,.T.,,,,,,.F.) //"Retorno de Doctos. de Saida"
		EndIf	
		
		BQV->(DbCloseArea())
	Else
		DbSelectArea("B4Q")
		cIndex := CriaTrab(NIL,.F.)
		MsDocument( "B4Q", B4Q->( RecNo() ), 2 )
	EndIf

ElseIf AllTrim(B53->B53_TIPO) != "6"

	BEA->( DbSetOrder(1) ) //BEA_FILIAL + BEA_OPEMOV + BEA_ANOAUT + BEA_MESAUT + BEA_NUMAUT + DTOS(BEA_DATPRO) + BEA_HORPRO
	BEA->( MsSeek( xFilial("BEA") + cChaveIn ) )
	
	if cTipo == "I" 
	
		DbSelectArea("BE2")
		cIndex := CriaTrab(NIL,.F.)
		cQuery := "BE2_FILIAL == '" + xFilial("BE2") + "' "
		cQuery += " .And. BE2_OPEMOV == '" + BEA->BEA_OPEMOV + "'"
		cQuery += " .And. BE2_ANOAUT == '" + BEA->BEA_ANOAUT + "'"
		cQuery += " .And. BE2_MESAUT == '" + BEA->BEA_MESAUT + "'"
		cQuery += " .And. BE2_NUMAUT == '" + BEA->BEA_NUMAUT + "'"
		
		IndRegua("BE2",cIndex,BE2->(IndexKey()),,cQuery)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Ativa o banco de conhecimento
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		
		If BE2->(!Eof())
			lRet := MaWndBrowse(0,0,300,600,"Usuário","BE2",,aRotina,,,,.T.,,,,,,.F.) //"Retorno de Doctos. de Saida"
		EndIf

		BE2->(DbCloseArea())
	else
	
		DbSelectArea("BEA")
		cIndex := CriaTrab(NIL,.F.)
		MsDocument( "BEA", BEA->( RecNo() ), 2 )
	
	endif

Else

	B4A->( DbSetOrder(1) ) //B4A_FILIAL + B4A_OPEMOV + B4A_ANOAUT + B4A_MESAUT + B4A_NUMAUT + DTOS(B4A_DATPRO) + B4A_HORPRO
	B4A->( MsSeek( xFilial("B4A") + cChaveIn ) )
	
	if cTipo == "I"

		DbSelectArea("B4C")
		cIndex := CriaTrab(NIL,.F.)
		cQuery := "B4C_FILIAL == '" + xFilial("B4C") + "' "
		cQuery += " .And. B4C_OPEMOV == '" + B4A->B4A_OPEMOV + "'"
		cQuery += " .And. B4C_ANOAUT == '" + B4A->B4A_ANOAUT + "'"
		cQuery += " .And. B4C_MESAUT == '" + B4A->B4A_MESAUT + "'"
		cQuery += " .And. B4C_NUMAUT == '" + B4A->B4A_NUMAUT + "'"
		
		IndRegua("B4C",cIndex,B4C->(IndexKey()),,cQuery)
		
		If B4C->(!Eof())
			MaWndBrowse(0,0,300,600,"Retorno de Doctos. de Saida","B4C",,aRotina,,,,.T.,,,,,,.F.) //"Retorno de Doctos. de Saida"
		EndIf

		B4C->(DbCloseArea())		
	else
	
		DbSelectArea("B4A")
		cIndex := CriaTrab(NIL,.F.)
		MsDocument( "B4A", B4A->( RecNo() ), 2 )
	
	endif
	
endif

IF ::lRotinaGen
   //Por ser genérica, não sei qual chave é da tabela cabeçalho. Pego o indice do item e tento procurar as semelhantes
   	(::cACab)->(DbSelectArea(::cACab))
   cInd := PLSVerInd(1, .T.)
   cInd2 := SUBSTR(StrTran(cInd, ::cAIte, ::cACab),0,Len(cInd)-1) 
   While !(Empty(cChv))
     IF (cInd2 == SubStr( (::cACab)->(indexkey(nsoma)), 0, Len(cInd2)) )
        (::cACab)->(DbSelectArea(nsoma))
        EXIT
       ELSE
         cChv := (::cACab)->(indexkey(nsoma))
         nSoma++
     ENDIF  
   ENDDO 
   
   cInd2 := SEPARA(cInd, "+", .F.)
	(::cACab)->( MsSeek( xFilial(::cACab) + cChaveIn ) )
	cIndex := CriaTrab(NIL,.F.)
	cQuery := (::cACab)+"_FILIAL == '" + xFilial(::cACab) + "' "
	
	For nI := 1 TO LEN(cInd2)
 	  cQuery += "'"+cInd2[nI]+"' == '"+(cACab)->cInd2[nI]+"'"
 	Next  
	
	IndRegua((::cACab),cIndex,(::cACab)->(IndexKey()),,cQuery)
	
	If (::cACab)->(!Eof())
		MaWndBrowse(0,0,300,600,"Retorno de Doctos. de Saida","B4C",,aRotina,,,,.T.,,,,,,.F.) //"Retorno de Doctos. de Saida"
	EndIf

	(::cACab)->(DbCloseArea())
ENDIF

AC9->(DbSetOrder(2))//AC9_FILIAL, AC9_ENTIDA, AC9_FILENT, AC9_CODENT, AC9_CODOBJ, R_E_C_N_O_, D_E_L_E_T_

If AC9->(dbSeek( xFilial("AC9") + cAlias + xfilial(cAlias) + cChaveAC9))
    dbSelectArea("B53")
    If B53->(dbSeek(xFilial("B53")+cChaveIn))
      	If B53->B53_BANCON != '1' 
	      	B53->(Reclock("B53",.F.))
			B53->B53_BANCON := '1'
			B53->(MsUnlock())
		EndIf
	EndIf
else
		 dbSelectArea("B53")
    If B53->(dbSeek(xFilial("B53")+cChaveIn))
      If B53->B53_BANCON != '0' 
	      	B53->(Reclock("B53",.F.))
			B53->B53_BANCON := '0'
			B53->(MsUnlock())
		EndIf
	EndIf
EndIf

RetIndex( cAlias )    
dbClearFilter()
FErase( cIndex+OrdBagExt() )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se cancelou 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !lRet
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Deleta registro da acb de lixo
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	DelAcbAc9()
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Inclusao ou exclusao de banco de conhecimento na guia
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If cAlias == 'BE2'
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Autaliza guia
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		B53 := PLSSTRUC():New( "B53",MODEL_OPERATION_UPDATE,,B53->( Recno() ) )
		B53:SetValue("B53_BANCON",'1' )
		B53:CRUD()
		B53:Destroy()
	EndIf
EndIf               
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Registro de log da rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If lLog
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Grava registro de alteracao da aplicacao ou tabela
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oBX3 := PLSSTRUC():New("BX3")
	oBX3:SetlAltera(.T.)
	oBX3:SetValue("BX3_FILIAL", xFilial("BX3") )
	oBX3:SetValue("BX3_ALIAS", cAlias )
	oBX3:SetValue("BX3_DATA", Date() )
	oBX3:SetValue("BX3_HORA", Time() )
	oBX3:SetValue("BX3_ESTTRB", GetComputerName() )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Se incluiu alguma coisa no banco de conhecimento
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If lRet
		oBX3:SetValue("BX3_OPERAD", cCodUsuDef )
		oBX3:SetValue("BX3_TIPO", '1' )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Grava dados na base de dados
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !oBX3:CRUD()
			oBX3:ExbMHelp( oBX3:GetErrorMessage(.T.) )
		EndIf
	EndIf	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Atualiza registro de acesso do usuario corrente
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oBX3:SetValue("BX3_OPERAD", ::cOperad )
	oBX3:SetValue("BX3_TIPO", '0' )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Grava dados na base de dados
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !oBX3:CRUD()
		oBX3:ExbMHelp( oBX3:GetErrorMessage(.T.) )
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Destroy o modelo
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oBX3:Destroy()
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Rest nas linhas do browse e na area
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
RestArea( aArea )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Duração
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
_Super:SetLog(nHoraBase)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(lRet)
/*/{Protheus.doc} GetRotiAtu
Retorna se uma rotina foi ou nao atualizada

@author Alexander Santos
@since 16/02/2011
@version P11
/*/
METHOD GetRotiAtu(aDad,cPerfil) Class PLSA790C
LOCAL aRet		 := {}
LOCAL nI		 := 1
LOCAL oGEN		 := NIL
LOCAL cTipoRe	 := '1'
LOCAL cTipoAc	 := '0'
LOCAL cCodUsuDef := "XXXXXX"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Dados do Operador
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
For nI:=1 To Len(aDad)
	If nI > Len(aDad)
		Exit
	EndIf	           
	
	If ("XXX" == aDad[nI,1] .And. !::lMonFax) .Or. ("B69" == aDad[nI,1] .And. !::lIncAno) .Or.;
	   ("B68" == aDad[nI,1] .And. !::lIncDem) .Or. ("B72" == aDad[nI,1] .And. !::lIntSau) .Or.;
	   ("B70" == aDad[nI,1] .And. !::lIncPar) .Or. ("B71" == aDad[nI,1] .And. !::lIncEnc)
		aDel(aDad,nI)
		aSize(aDad,Len(aDad)-1) 
		nI--
	EndIf
Next	           
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Selecion todos os acesso deste usuario 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oGEN := PLSREGIC():New()
oGEN:GetDadBx3(aDad,::cOperad,cTipoAc,cCodUsuDef,cTipoRe)
oGEN:Destroy()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Retorna Matriz Ajustada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
aRet := _Super:GetVal(aDad,,.T.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da funcao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(aRet)
//-------------------------------------------------------------------
/*/ { Protheus.doc } VldFLD
Validacao ao entrar no folder

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD VldFLD(nFolder,oTFolder,cAlias) Class PLSA790C   
LOCAL lRet := .T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Instancia o modelo de dados												 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oBX3 := PLSSTRUC():New("BX3")       
oBX3:SetValue("BX3_FILIAL", xFilial("BX3") )
oBX3:SetValue("BX3_OPERAD", ::cOperad )
oBX3:SetValue("BX3_ALIAS", cAlias )
oBX3:SetValue("BX3_DATA", Date() ) 
oBX3:SetValue("BX3_HORA", Time() )
oBX3:SetValue("BX3_TIPO", '0' )
oBX3:SetValue("BX3_ESTTRB", GetComputerName() )
oBX3:SetlAltera(.T.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava dados na base de dados											 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !oBX3:CRUD() 
	oBX3:ExbMHelp( oBX3:GetErrorMessage(.T.) )
EndIf	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Destroy o modelo														 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oBX3:Destroy() 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza a descricao do folder
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oTFolder:ADIALOGS[nFolder]:cTitle := AllTrim(StrTran(oTFolder:ADIALOGS[nFolder]:cTitle,'*',''))  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(lRet)
//-------------------------------------------------------------------
/*/ { Protheus.doc } MarkAll
Marca e desmarca linhas do browse

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD MarkAll(oMark,lMarcar) Class PLSA790C
LOCAL aArea   := GetArea()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Restaura area
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
RestArea( aArea )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return NIL
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetPerfil
Seta o perfil desejado

@author Alexander Santos
@since 09/03/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetPerfil(cPerfil) Class PLSA790C
::cPerfil := cPerfil
Return
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetPrioridade
Seta prioridade da guia

@author Alexander Santos
@since 09/03/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetPrioridade(cPrio) Class PLSA790C
LOCAL B53 := NIL
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Seta nova prioridade
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !Empty(X3COMBO("B53_PRIORI",cPrio))
	B53 := PLSSTRUC():New( "B53",MODEL_OPERATION_UPDATE,,B53->( Recno() ) )
	B53:SetValue("B53_PRIORI", cPrio)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Grava dados na base de dados											 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !B53:CRUD() 
		B53:ExbMHelp( B53:GetErrorMessage(.T.) )
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Destroy
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	B53:Destroy()
Else
	MSGALERT(STR0005) //"Opção BOX do campo invalida"
EndIf	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return 
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetNegPar
Seta a opcao negar participacao

@author Alexander Santos
@since 09/03/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetNegPar(lNegPar) Class PLSA790C
::lNegPar := lNegPar
Return 
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetSituac
Seta situac da guia

@author Alexander Santos
@since 09/03/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetSituac(cSituac) Class PLSA790C
LOCAL oB53   := NIL         
LOCAL oGEN   := NIL
LOCAL aChave := {}
LOCAL aChaveB4A	:= {}
LOCAL aChaveBE2	:= {}
LOCAL aChaveBEJ	:= {}
LOCAL aChaveBQV 	:= {}
LOCAL aChaveB45 	:= {}
LOCAL nPosit := 0
LOCAL nNegat := 0
LOCAL oBEL   := NIL
LOCAL cOperad := If (GetNewPar("MV_PLFLUIG", .F.) == .T.,GetNewPar("MV_OPERFLG","0000"),::cOperad)
LOCAL cTipo
LOCAL aDadUsr := PLSDADUSR(B53->B53_MATUSU,'1',.F.,dDatabase,,,"NAO_VALIDAR_CARTAO")
Local lForLib := .F.   
LOCAL lFamYes	:= 	.F.
 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza informacoes da classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

::SetAtuPClass()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se tem guia selecionada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !::lHaveGuia

	MSGALERT(STR0006) //"Não existe guia para analise"
	Return
EndIf	       
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se a guia tem o mesmo perfil do auditor
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If ::cPerfil <> PLS_ADMINITRADOR .And. !(::cPerfil $ ::cAllPerfil)
	MSGALERT(STR0007) //"O seu perfil não esta autorizado a analisar esta guia!"
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se a guia estiver cancelada não podera auditar.
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If B53->B53_STATUS = "6" 
	MSGALERT(STR0042)//"Esta guia foi cancelada."
	Return
EndIf

If AllTrim(B53->B53_TIPO) = "2"
	BEA->(dbSetOrder(1))
	
	If BEA->(dbSeek(xFilial("BEA")+B53->B53_NUMGUI))
		If BEA->BEA_CANCEL == "1"
			MSGALERT(STR0042)//"Esta guia foi cancelada."
			Return
		EndIf
	EndIf
EndIf	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o beneficiário foi desligado ou familia bloqueada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
BA3->(dbSetOrder(1))
IF (Len(aDadUsr) > 5)  //Se vier da rotina genérica e não possuir matrícula, pula essa parte da verificação
If BA3->(dbSeek(xFilial("BA3") + SUBSTR(B53->B53_MATUSU,1,14)+aDadUsr[9]+aDadUsr[12]+aDadUsr[41]+aDadUsr[42])) .And. B53->B53_PROINT <> '1' 
	
	If !EMPTY(BA3->BA3_DATBLO) .AND. BA3->BA3_DATBLO <= dDataBase
		BDS->(dbSetOrder(1))
		If BDS->(dbSeek(xFilial("BDS") + B53->B53_NUMGUI)) .And. B53->B53_SITUAC == '0' .And. Empty(BDS->(BDS_CODPAD+BDS_SEQUEN+BDS_CODPRO))
			nOk:= 	Aviso(STR0041 ,;//"Usuário Bloqueado" 
					STR0036 + STR0037 + CRLF + ;//"Problemas com o contrato do beneficiário no período do atendimento, porém a crítica de bloqueio foi forçada com a seguinte justificativa:"
					STR0038 + AllTrim(BDS->BDS_OBSMOT) + CRLF +;//"Observação: "
					STR0039 + AllTrim(BDS->BDS_OPESIS) + " - " + AllTrim(BDS->BDS_NOMOPE) + CRLF + "Deseja Prosseguir?",;//"Operador: " ## "Deseja Prosseguir?"
					{STR0049,STR0050},3) //"Sim" "Não"
			If nOk == 2
		Return
			Else
				lFamYes := .T.
			EndIf
		ElseIf B53->B53_SITUAC == '0'
			If !MsgYesNo("Família bloqueada, deseja continuar?")
				MSGALERT(STR0043)//"Família bloqueada, não será possível auditar a guia."
				Return
			EndIf
		EndIf
	ElseIf !EMPTY(BA3->BA3_DESLIG).AND. !EMPTY(BA3->BA3_LIMITE) .AND. BA3->BA3_LIMITE < dDataBase
			
		MSGALERT(STR0044)//"Beneficiário desligado, não será possível auditar a guia."
		Return
	EndIf
EndIf
ENDIF
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o beneficiário esta bloqueado
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
BA1->(dbSetOrder(2))
If BA1->(dbSeek(xFilial("BA1") + B53->B53_MATUSU)) .And. B53->B53_PROINT <> '1'
	
	If !EMPTY(BA1->BA1_DATBLO) .AND. BA1->BA1_DATBLO <= dDataBase .And. !lFamYes
		
		BDS->(dbSetOrder(1))
		If BDS->(dbSeek(xFilial("BDS") + B53->B53_NUMGUI)) .And. B53->B53_SITUAC == '0' .And. Empty(BDS->(BDS_CODPAD+BDS_SEQUEN+BDS_CODPRO))
			nOk:= 	Aviso(STR0041 ,;//"Usuário Bloqueado"
			STR0036 + STR0037 + CRLF + ;//"Problemas com o contrato do beneficiário no período do atendimento, porém a crítica de bloqueio foi forçada com a seguinte justificativa:"
			STR0038 + AllTrim(BDS->BDS_OBSMOT) + CRLF +;//"Observação: "
			STR0039 + AllTrim(BDS->BDS_OPESIS) + " - " + AllTrim(BDS->BDS_NOMOPE) + CRLF + "Deseja Prosseguir?",;//"Operador: " ## "Deseja Prosseguir?"
			{STR0049,STR0050},3)//"Sim" "Não"
			If nOk == 2
				Return
			EndIf
		ElseIf B53->B53_SITUAC == '0' .and. !( PLSUSRINTE(B53->B53_MATUSU,B53->B53_DATMOV)[1] )
			If !MsgYesNo("Usuário bloqueado, deseja continuar?")	
				MSGALERT(STR0045)//"Usuário bloqueado, não será possível auditar a guia."
				Return
			EndIf
		EndIf
		
	EndIf
EndIf


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se a RDA esta bloqueada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
BAU->(dbSetOrder(1))
If BAU->(dbSeek(xFilial("BAU") + B53->B53_CODRDA))
	
	//se a data do bloqueio for menor que a data atual, exibe a mensagem.
	If !EMPTY(BAU->BAU_CODBLO) .AND. BAU->BAU_DATBLO < dDataBase
			
		MSGALERT(STR0046)//"RDA bloqueada, não será possível auditar a guia."
		Return
	
	//Se a data do bloqueio for igual a data atual, verifica ba BC4 se a RDA esta bloqueada de acordo com a hora incluida.
	ElseIf BAU->BAU_DATBLO == dDataBase
		
		BC4->(dbSetOrder(1))
		
		If BC4->(dbSeek(xFilial("BC4") + B53->B53_CODRDA + DTOS(dDataBase)))
			
			//verifica os registros de bloqueio e desbloqueio.
			While !BC4->(EOF()) .AND. BC4->(BC4_FILIAL + BC4_CODCRE + DTOS(BC4_DATA)) == xFilial("BC4") + B53->B53_CODRDA + DTOS(dDataBase)
				
				//verificar se o ultimo registro é de bloqueio e se o horário do bloqueio ja foi ultrapassado.
				If BC4->BC4_TIPO == "0" .AND. BC4->BC4_HORA <= SUBSTR(STRTRAN(TIME(), ":", ""),1,4)
					cTipo := BC4->BC4_TIPO
				Else
					cTipo := "1"
				EndIf
				
				BC4->(dbSkip())
			EndDo
			
			// exibe a mensagem de bloquieo da RDA.
			If cTipo == "0"
				MSGALERT(STR0046)//"RDA bloqueada, não será possível auditar a guia."
				Return
			EndIf
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Tratamento do Situac
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Do Case
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ A guia vai ficar em espera
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Case cSituac == "3"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Verifica se tem acesso a guia
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !::VldAcessoGui()
		Return
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Retira guia do monitor
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Case cSituac == "1"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Verifica se tem acesso a guia
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !::VldAcessoGui()
		Return
	EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Guia autorizada e procedimento da auditoria participativa
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !::lParticipativa .And. ::lAutorizada
		MSGALERT(STR0008) //"Somente guia Autorizada e Participativa"
		Return
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Liberar ou Pegar guia
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Case cSituac == "2"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Ja foi analisada e tem inconsistencia
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If ::lInconsistente
		MSGALERT(STR0009 ) //"Esta guia já foi analisada, utilize a opção Inconsistência"
		Return
	EndIf
	If ::lAnalisada 
		MsgAlert(STR0026)//"Esta guia já foi analisada."
		Return
	EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se esta reservada para outro operador
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If ::lHaveOwner .And. !::lOwner
		IF (::lLibGuia ) //Verifica se o usuário tem autorização para liberar guias bloqueadas por outros usuários (08/07/16 - retirado obrigatoriedade de ser do mesmo setor)
			lForLib := MsgNoYes(STR0028 + UPPER(USRRETNAME(B53->B53_OPERAD)) + STR0029, STR0030) //A guia esta bloqueada para:/Deseja mesmo liberar esta Guia?
		Endif
		IF (!lForLib)
			MSGALERT(STR0010 ) //"Guia reservada para outro Operador"
			Return
		EndIf
	EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se e do mesmo departamento
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !::lHaveOwner .And. !::lThisDep
		MSGALERT(STR0015 ) //"Somente o operador deste departamento tem acesso"
		Return
	EndIf
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Verifica status atual da guia
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	If ::cACri == "BEG"
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Se a guia foi analisada por completo, não será possível reservar a guia
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

		If B53->b53_SITUAC == "1"

			Return
		EndIf
	
		If B53->B53_ALIMOV == "B4A"
		
			B4A->(dbSetOrder(1))
			If B4A->(dbSeek(xFilial("BA4")+B53->B53_NUMGUI))
	
				While !B4A->(EOF()) .AND. xFilial("B4A")+B4A->(B4A_OPEMOV+B4A_ANOAUT+B4A_MESAUT+B4A_NUMAUT) ==;
						xFilial("B4A")+B53->B53_NUMGUI
	
					If B4A->B4A_STATUS == '1'
						nPosit++
					Else
						nNegat++
					EndIf
					B4A->(dbSkip())
				EndDo
			EndIf
		Else
	
			BE2->(dbSetOrder(1))
			If BE2->(dbSeek(xFilial("BE2")+B53->B53_NUMGUI))
	
				While !BE2->(EOF()) .AND. xFilial("BE2")+BE2->(BE2_OPEMOV+BE2_ANOAUT+BE2_MESAUT+BE2_NUMAUT) ==;
						xFilial("BE2")+B53->B53_NUMGUI
	
					If BE2->BE2_STATUS == '1'
						nPosit++
					Else
						nNegat++
					EndIf
					BE2->(dbSkip())
				EndDo
			EndIf
		EndIf
	
		oB53 := PLSSTRUC():New( "B53",MODEL_OPERATION_UPDATE,,B53->( Recno() ) )

		if nPosit == 0 .AND. nNegat > 0
			oB53:SetValue("B53_STATUS", "3")
		ElseIf nPosit > 0 .AND. nNegat > 0
			oB53:SetValue("B53_STATUS", "2")
		ElseIf nPosit > 0 .AND. nNegat == 0
			oB53:SetValue("B53_STATUS", "1")
		EndIf

		If !oB53:CRUD()
			oB53:ExbMHelp( oB53:GetErrorMessage(.T.) )
		EndIf
	Else

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Se a guia foi analisada por completo, não será possível reservar a guia
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

		If B53->b53_SITUAC == "1"
			MSGALERT(STR0026) //"Esta guia já foi analisada."
			Return
		EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ se aguia nao foi analisada por completo a guia podera ser reservada
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		BEJ->(dbSetOrder(1))
		If BEJ->(dbSeek(xFilial("BEJ")+B53->B53_NUMGUI))

			While !BEJ->(EOF()) .AND. xFilial("BEJ")+BEJ->(BEJ_CODOPE+BEJ_ANOINT+BEJ_MESINT+BEJ_NUMINT) ==;
					xFilial("BEJ")+B53->B53_NUMGUI

				If BEJ->BEJ_STATUS == '1'
					nPosit++
				Else
					nNegat++
				EndIf
				BEJ->(dbSkip())
			EndDo

			BQV->(dbSetOrder(1))
			If BQV->(dbSeek(xFilial("BQV")+B53->B53_NUMGUI))

				While !BQV->(EOF()) .AND. xFilial("BQV")+BQV->(BQV_CODOPE+BQV_ANOINT+BQV_MESINT+BQV_NUMINT) ==;
						xFilial("BQV")+B53->B53_NUMGUI

					If BQV->BQV_STATUS == '1'
						nPosit++
					Else
						nNegat++
					EndIf
					BQV->(dbSkip())
				EndDo
			EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Cria o objeto para a atualizacao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			oB53 := PLSSTRUC():New( "B53",MODEL_OPERATION_UPDATE,,B53->( Recno() ) )

			if nPosit == 0 .AND. nNegat > 0
				oB53:SetValue("B53_STATUS", "3")
			ElseIf nPosit > 0 .AND. nNegat > 0
				oB53:SetValue("B53_STATUS", "2")
			ElseIf nPosit > 0 .AND. nNegat == 0
				oB53:SetValue("B53_STATUS", "1")
			EndIf

			If !oB53:CRUD()
				oB53:ExbMHelp( oB53:GetErrorMessage(.T.) )
			EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Destroy
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			oB53:Destroy()
		EndIf

	EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Chave
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	IF (B53->B53_ROTGEN <> "1")
		aChave := {}
		AaDd(aChave, { ::SetFieldGui(::cACri+"_OPEMOV"), '=', Left(B53->B53_NUMGUI,4) } )
		AaDd(aChave, { ::SetFieldGui(::cACri+"_ANOAUT"), '=', SubStr(B53->B53_NUMGUI,5,4) } )
		AaDd(aChave, { ::SetFieldGui(::cACri+"_MESAUT"), '=', SubStr(B53->B53_NUMGUI,9,2)} )
		AaDd(aChave, { ::SetFieldGui(::cACri+"_NUMAUT"), '=', Right(B53->B53_NUMGUI,8)} )
		If (::cACri)->( FieldPos(::cACri+"_PENDEN") ) > 0
			AaDd(aChave, { ::cACri+"_PENDEN", '<>', '0'} )
		Endif
		If (::cACri)->( FieldPos(::cACri+"_CODGLO") ) > 0
			AaDd(aChave, { ::cACri+"_CODGLO", '<>', ''} )
		Endif
	ENDIF
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ verifica se a guia foi totalmente analisada 
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		
	IF (B53->B53_ROTGEN <> "1")  //Se for diferente de rotina genérica
		If B53->b53_SITUAC == "2"
				
			If ::cACri == "BEG"
				
				If B53->B53_ALIMOV == "B4A"
					B4A->(dbSetOrder(1))
					B4A->(dbGoTop())
			
					IF B4A->(dbSeek( xFilial("B4A")+B53->B53_NUMGUI))
					
						aChaveB4A := {}
						AaDd(aChaveB4A, { "B4A_OPEMOV", '=', Left(B53->B53_NUMGUI,4) 		} )
						AaDd(aChaveB4A, { "B4A_ANOAUT", '=', SubStr(B53->B53_NUMGUI,5,4) 	} )
						AaDd(aChaveB4A, { "B4A_MESAUT", '=', SubStr(B53->B53_NUMGUI,9,2) 	} )
						AaDd(aChaveB4A, { "B4A_NUMAUT", '=', Right(B53->B53_NUMGUI,8) 		} )
												
						oGEN := PLSREGIC():New()
						
						If oGEN:GetCountReg("B4A",aChaveB4A ) == 0
							cSituac := "1"
						Else
							cSituac := "0"
						EndIf
						
						oGEN:Destroy()
					EndIf
				Else
				
					BE2->(dbSetOrder(1))
					BE2->(dbGoTop())
			
					IF BE2->(dbSeek( xFilial("BE2")+B53->B53_NUMGUI))
					
						aChaveBE2 := {}
						AaDd(aChaveBE2, { "BE2_OPEMOV", '=', Left(B53->B53_NUMGUI,4) 		} )
						AaDd(aChaveBE2, { "BE2_ANOAUT", '=', SubStr(B53->B53_NUMGUI,5,4) 	} )
						AaDd(aChaveBE2, { "BE2_MESAUT", '=', SubStr(B53->B53_NUMGUI,9,2) 	} )
						AaDd(aChaveBE2, { "BE2_NUMAUT", '=', Right(B53->B53_NUMGUI,8) 		} )
												
						oGEN := PLSREGIC():New()
						
						If oGEN:GetCountReg("BE2",aChaveBE2 ) == 0
							cSituac := "1"
						Else
							cSituac := "0"
						EndIf
						
						oGEN:Destroy()
					EndIf
				EndIf
			Else
				BEJ->(dbSetOrder(1))
				BEJ->(dbGoTop())
		
				IF BEJ->(dbSeek( xFilial("BEJ")+B53->B53_NUMGUI))
				
					aChaveBEJ := {}
					AaDd(aChaveBEJ, { "BEJ_CODOPE", '=', Left(B53->B53_NUMGUI,4) 		} )
					AaDd(aChaveBEJ, { "BEJ_ANOINT", '=', SubStr(B53->B53_NUMGUI,5,4) 	} )
					AaDd(aChaveBEJ, { "BEJ_MESINT", '=', SubStr(B53->B53_NUMGUI,9,2) 	} )
					AaDd(aChaveBEJ, { "BEJ_NUMINT", '=', Right(B53->B53_NUMGUI,8) 		} )
											
					oGEN := PLSREGIC():New()
					
					If oGEN:GetCountReg("BEJ",aChaveBEJ ) == 0
						cSituac := "1"
					Else
						cSituac := "0"
					EndIf
					
					oGEN:Destroy()
						
				EndIf
							
				IF BQV->(dbSeek( xFilial("BQV")+B53->B53_NUMGUI))
					
					aChaveBQV := {}
					AaDd(aChaveBQV, { "BQV_CODOPE", '=', Left(B53->B53_NUMGUI,4) 		} )
					AaDd(aChaveBQV, { "BQV_ANOINT", '=', SubStr(B53->B53_NUMGUI,5,4) 	} )
					AaDd(aChaveBQV, { "BQV_MESINT", '=', SubStr(B53->B53_NUMGUI,9,2) 	} )
					AaDd(aChaveBQV, { "BQV_NUMINT", '=', Right(B53->B53_NUMGUI,8) 		} )
					AaDd(aChaveBQV, { "BQV_AUDITO", '=', "1" 		} )
						
					oGEN := PLSREGIC():New()
					
					If oGEN:GetCountReg("BQV",aChaveBQV ) == 0
						cSituac := "1"
					Else
						cSituac := "0"
					EndIf
					
					oGEN:Destroy()
				
				EndIf
				 
				IF B45->(dbSeek( xFilial("B45")+B53->B53_NUMGUI))
					
					aChaveB45 := {}
					AaDd(aChaveB45, { "B45_OPEMOV", '=', Left(B53->B53_NUMGUI,4) 		} )
					AaDd(aChaveB45, { "B45_ANOAUT", '=', SubStr(B53->B53_NUMGUI,5,4) 	} )
					AaDd(aChaveB45, { "B45_MESAUT", '=', SubStr(B53->B53_NUMGUI,9,2) 	} )
					AaDd(aChaveB45, { "B45_NUMAUT", '=', Right(B53->B53_NUMGUI,8) 		} )
											
					oGEN := PLSREGIC():New()
					
					If oGEN:GetCountReg("B45",aChaveB45 ) == 0
						cSituac := "1"
					Else
						cSituac := "0"
					EndIf
					
					oGEN:Destroy()
					
						
				EndIf
			EndIf
		EndIf	
	ELSE // Se for rotina Genérica
		IF ( B53->B53_SITUAC <> "1" )	//Verifico se a guia já está analisada
			IF ( B53->B53_SITUAC == "2" )
				cSituac := "0"
			ELSEIF ( B53->B53_SITUAC == "0")
				cSituac := "2"
			ENDIF
		ENDIF
	ENDIF
OtherWise
EndCase
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se e situac valido
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !Empty(X3COMBO("B53_SITUAC",cSituac)) //0=Não;1=Sim;2=Em Analise;3=Em Espera;4=Inconsistência
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Seta nova prioridade
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53 := PLSSTRUC():New( "B53",MODEL_OPERATION_UPDATE,,B53->( Recno() ) )
	oB53:SetValue("B53_SITUAC", cSituac)  
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Atualiza informacoes da guia data e hora
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	Do Case 
		Case cSituac == '1'
			oB53:SetValue("B53_DATFIM", dDataBase )
			oB53:SetValue("B53_HORFIM", Left(Time(),5) )
			
		Case cSituac == '2' .AND. EMPTY(B53->B53_DATINI)
			oB53:SetValue("B53_DATINI", dDataBase )
			oB53:SetValue("B53_HORINI", Left(Time(),5) )
	EndCase
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Atribui operador da guia
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	 If !::lHaveOwner .OR. cSituac == '3' .OR. cSituac == '2'
	 	oB53:SetValue("B53_OPERAD",cOperad)
	 	IIF(Empty(B53->B53_CODDEP),oB53:SetValue("B53_CODDEP", ::cCodDepa),)  //-
	 Else
	 	oB53:SetValue("B53_OPERAD",'')
	 	//Aqui, verifico se existe encaminhamento na B71. Se não houver, significa que MV_SETORAT
	 	//está vazio e o auditor não encaminhou para departamento algum, logo, deve ficar como default
	 	oB71 := PLSREGIC():New()
		oB71:GetDadReg("B71",1, xFilial("B71") + B53->B53_ALIMOV + B53->B53_RECMOV,,,.F. )
	   		If !oB71:lFound
			  oB53:SetValue("B53_CODDEP", '')
   			ENDIF 
   		oB71:Destroy()
	 EndIf
	 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Grava dados na base de dados
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If !oB53:CRUD()
		oB53:ExbMHelp( oB53:GetErrorMessage(.T.) )
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Destroy
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:Destroy()
Else
	MSGALERT(STR0005) //"Opção BOX do campo invalida"
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return 
//-------------------------------------------------------------------
/*/ { Protheus.doc } GetFiles
Retorna todos os arquivo de uma pasta e subpastas

@author Alexander Santos
@since 09/03/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD GetFiles(cDirPerf,aFiles) Class PLSA790C
LOCAL nI		:= 1
LOCAL aFilDir	:= {}
DEFAULT aFiles 	:= {}  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Retira espacos desnecessario
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
cDirPerf := PLSMUDSIS( MsDocRmvBar(AllTrim(cDirPerf)) )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Arquivos e diretorio da pasta informada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
aFilDir := Directory( cDirPerf + PLSMUDSIS("\*.*"), "D")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se tem somente arquivo ou subpastas
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
For nI:=1 To Len(aFilDir)
	
	If Left(aFilDir[nI,1],1) <> '.'
		If aFilDir[nI,5] == 'D'
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			//³ Processando a subpasta
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			::GetFiles(cDirPerf + "\" + aFilDir[nI,1] + "\",aFiles)
			
	    ElseIf At('excluido_',Lower(aFilDir[nI,1])) == 0
	    
	    	AaDd(aFiles, { aFilDir[nI,1] , PLSMUDSIS( cDirPerf + "\" ) } )
	    	
	    EndIf
	EndIf    
	
Next   
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Para ter um linha 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If Len(aFiles)==0
	aFiles := { { "" , "" } } 
EndIf  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(aFiles)
//-------------------------------------------------------------------
/*/ { Protheus.doc } GetDocBC
Alimenta e mostra registro selecionado no banco de conhecimento

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD GetDocBC(nAt,aFiles,cAlias,cUnico) Class PLSA790C
LOCAL aArea 	:= GetArea() 
LOCAL lRet		:= .T.
LOCAL nH		:= 0
LOCAL cDescri	:= ""
LOCAL cChvUni	:= ""
LOCAL cCodUsuDef:= "XXXXXX"                   
LOCAL cFile		:= SubStr(aFiles[nAt,1],1,At('.',aFiles[nAt,1])-1 )
LOCAL cDirFile 	:= aFiles[nAt,2]+aFiles[nAt,1]
PRIVATE aRotina := {}

If EMPTY(cFile)
	MSGALERT(STR0047)//"Não existe arquivos no monitor de documentos."
	Return	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Abre controle de semafoto
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If ( nH := PLSAbreSem("GetDocBC" + cFile + ".SMF",.F.) ) > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Coloca banco de conhecimento na memoria 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	RegToMemory("ACB",.T.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Retorna o nome do arquivo
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	SplitPath( cDirFile,,,@cDescri)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Preenchimento do wizard
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	lRet := MsDocWzGrv( cDirFile, cDescri, {}, {} )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Monta Chave Unica
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If lRet
		If !Empty(cUnico)
			cChvUni := (cAlias)->&(cUnico)
			If Empty(cChvUni)                                  
				MSGALERT(STR0011 ) //"Chave informada para registro do banco de conhecimento invalida"
				lRet := .F.	
			EndIf
		Else
			MSGALERT(STR0012 ) //"Informe chave unica para registro do banco de conhecimento"
			lRet := .F.	
		EndIf
	EndIf	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Se tudo ok monta registro do banco de conhecimento
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	If lRet  
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Grava registro de alteracao da aplicacao ou tabela
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oBX3 := PLSSTRUC():New("BX3")
		oBX3:SetlAltera(.T.)
		oBX3:SetValue("BX3_FILIAL", xFilial("BX3") )
		oBX3:SetValue("BX3_OPERAD", cCodUsuDef )
		oBX3:SetValue("BX3_ALIAS", cAlias )
		oBX3:SetValue("BX3_DATA", Date() )
		oBX3:SetValue("BX3_HORA", Time() )
		oBX3:SetValue("BX3_TIPO", '1' )
		oBX3:SetValue("BX3_ESTTRB", GetComputerName() )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Grava dados na base de dados
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !oBX3:CRUD()
			oBX3:ExbMHelp( oBX3:GetErrorMessage(.T.) )
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Atualiza registro de acesso do usuario corrente
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oBX3:SetValue("BX3_OPERAD", ::cOperad )
		oBX3:SetValue("BX3_TIPO", '0' )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Grava dados na base de dados
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !oBX3:CRUD()
			oBX3:ExbMHelp( oBX3:GetErrorMessage(.T.) )
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Destroy o modelo
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oBX3:Destroy()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Gravacao do registro caso nao existe
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		oAC9 := PLSSTRUC():New("AC9",MODEL_OPERATION_INSERT,1)
		oAC9:SetValue("AC9_FILIAL", xFilial( "AC9") )
		oAC9:SetValue("AC9_FILENT", xFilial( cAlias ) )
		oAC9:SetValue("AC9_ENTIDA", cAlias )
		oAC9:SetValue("AC9_CODENT", cChvUni )
		oAC9:SetValue("AC9_CODOBJ", M->ACB_CODOBJ )
		oAC9:CRUD() 
		oAC9:Destroy()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se o acesso foi permitido exibi banco de conhecimento
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		Aadd(aRotina,{STR0003,"MsDocument", 0 , 4}) //"Conhecimento"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³Banco de conhecimento
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		lRet := MsDocument( cAlias, (cAlias)->( Recno() ),1)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³Exclui documento da lista
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If lRet
		    ::DelDocBC(nAt,aFiles)	
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			//³ Deleta registro da acb de lixo
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			DelAcbAc9(.T.)
		EndIf    
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Fecha Semaforo
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	PLSFechaSem(nH,"GetDocBC" + cFile + ".SMF")
Else
	MSGALERT(STR0048)//"Arquivo sendo usado por outro Monitor"
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Restaura area
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

RestArea( aArea )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fim da Rotina															 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Return NIL                   
//-------------------------------------------------------------------
/*/ { Protheus.doc } DelDocBC
Deleta arquivo da pasta de monitor de fax

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD DelDocBC(nAt,aFiles) Class PLSA790C
LOCAL nRenOk  := -1
LOCAL cRename := aFiles[nAt,2] + 'excluido_' + aFiles[nAt,1]
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Retomeia pois a GetFiles nao pega arquivos com excluido_
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
nRenOk := FRename(aFiles[nAt,2]+aFiles[nAt,1] , cRename )
If nRenOk == -1   
	MSGALERT(STR0013 ) //"Não foi possivel excluir arquivo da lista"
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina															 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return NIL                        
//-------------------------------------------------------------------
/*/ { Protheus.doc } VldAplication
Retorna dados da guia posicionada

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD VldAplication() Class PLSA790C
LOCAL lRet := .T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o operador tem acesso a rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !::lMonFax .And. !::lIncAno .And. !::lIncDem .And. !::lIntSau .And. !::lIncPar .And. !::lIncEnc
	MSGALERT(STR0014) //"Rotina disponível apenas para operador autorizado"
	lRet:= .F.     
EndIf
If !::lOpAudi		// Verifica se operador está autorizado - campo (BX4_AUDITO)
	MSGALERT(STR0014) //"Rotina disponível apenas para operador autorizado"
	lRet:= .F.     
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina															 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(lRet)
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetOnlyVisible
Set se a rotina será somente em modo visual

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetOnlyVisible(lVisible) Class PLSA790C
::lVisible := lVisible
Return 
//-------------------------------------------------------------------
/*/ { Protheus.doc } VldAcessoGui
Valida acesso a guia se o operador tem direito

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD VldAcessoGui(lEmAnlise,lIncons,lAutori, lAudit, cAlias, lEvol) Class PLSA790C
LOCAL lRet			:= .T.                                     
DEFAULT lEmAnlise	:= .T.     
DEFAULT lIncons	:= .F.             
DEFAULT lAutori	:= .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza informacoes da classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
::SetAtuPClass(lEvol)


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se tem guia para ser analisada
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !::lHaveGuia  
	Help( ,, 'PLSA790C',, STR0015, 1, 0) //"Não existe guia para analise" 
	lRet := .F.
	
EndIf 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se nao for da interna-saude
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !::lIntSau .And. !::lInconsistente
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Verifica se foi encaminhada e se o operador e do mesmo departamento
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If lRet .And. !::lHaveOwner .And. !::lThisDep
	
		Help( ,, 'PLSA790C',, STR0015, 1, 0)//"Somente o operador deste departamento tem acesso" 
		lRet := .F.
		
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Verifica se a guia tem dono 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If lRet .And. ::lHaveOwner .And. !::lOwner
	
		Help( ,, 'PLSA790C',, STR0016, 1, 0) //"Somente o operador desta guia tem acesso" 
		lRet := .F.
		
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Se esta ok 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If lRet .And. lEmAnlise
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Verfica se a guia esta em analise
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If !::lEmAnalise
		
			Help( ,, 'PLSA790C',, STR0017, 1, 0) //"A guia deve estar em analise" 
			lRet := .F.
			
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Verifica se a guia esta autorizada
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If lRet .And. lAutori .And. ::lAutorizada .And. !::lEvolucao
		Help( ,, 'PLSA790C',, STR0019, 1, 0) //"Esta guia já esta autorizada!" 
		lRet := .F.
    EndIf                
EndIf	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o procedimento selecionado é de auditoria
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !EMPTY(lAudit) .AND. lAudit
	If !::lRotinaGen .AND. TYPE("cAudito")<>"U" .AND. cAudito == "0"
		Help( ,, 'PLSA790C',, STR0025, 1, 0) //Este procedimento não possui critica para auditoria
		lRet := .F.
	EndIf
EndIf

//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(lRet)
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetAtuPClass
Seta valor nas proprioedades da classe

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetAtuPClass(lEvol) CLASS PLSA790C

DEFAULT lEvol := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza propriedades
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

AtuPClass(Self, lEvol)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetFieldGui
Ajusta campos conforme a guia

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetFieldGui(cCampo) Class PLSA790C
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Se for internacao ajusta campos
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Do Case
	Case ::lInternacao .Or. ::lEvolucao .OR. ::lProrrog
		cCampo := StrTran(cCampo,'AUT','INT')
		cCampo := StrTran(cCampo,'OPEMOV','CODOPE')
	Case ::lOdonto
	Case ::lReembolso
EndCase
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(cCampo)
//-------------------------------------------------------------------
/*/ { Protheus.doc } SetAuditoria
Cria o registro para auditoria por guia

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetAuditoria(lAuditoria,lIntern,lEvolu,lReembolso,lPartic,aDadCri,aCabCri,cCodCri,cRegInt,cAliasCri,;
					aColsITE,aHeaderITE,cAliasIte,lOPME, lProrrog, cOriMovHAT) Class PLSA790C
					
LOCAL nI			:= 1
LOCAL cAlias 	 	:= "BEA"
LOCAL cOpeMov   	:= ""
LOCAL cCarInt   	:= ""
LOCAL cNumAut		:= ""
LOCAL cTipo		 	:= ""
LOCAL cTpGuia	 	:= ""
LOCAL cPerAud 		:= ""
LOCAL cTipAdm		:= ""
LOCAL cPriori		:= ""
LOCAL cOriMov		:= ""
LOCAL cCodDep		:= ""
LOCAL cCodMun 		:= ""
LOCAL cCRda         := ""
LOCAL lAutorizacao 	:= .F.
LOCAL lFutura		:= .F.
LOCAL lDemand		:= .F.
LOCAL aMat			:= {}
LOCAL oGEN			:= NIL
LOCAL oB53			:= NIL
LOCAL nPosit 		:= 0
LOCAL nNegat 		:= 0
LOCAL oBE4			:= NIL
LOCAL lGui			:= .F.
LOCAL cChave		:= ""
Local cEncGui		:= getNewPar("MV_SETORAT","")
Local aTabPes		:= {{"BEA",1}, {"BE4",2}, {"B44",1}}  //Tabelas de Pesquisa e Indice, para pegar RDA em caso de Anexo
local lExPLSDEPTO	:= Existblock("PLSDEPTO")
Local dDtPrazoAten 	:= CToD(" / / ")
Local oDadosPrazo := Nil

DEFAULT aColsITE	:= {}
DEFAULT aHeaderITE	:= {}
DEFAULT cAliasIte	:= {}
DEFAULT lOPME		:= .F.
DEFAULT lProrrog		:= .F.
DEFAULT cOriMovHAT  := ""

cPriori  :=&(GetSx3Cache("B53_PRIORI","X3_RELACAO"))

If  Valtype(cPriori) <> "U"  
	cPriori :=SubStr(cPriori,1,1)
Endif
	
cPriori := Iif(Empty(cPriori),"0",cPriori)

// Verifica se o inicializador do campo B53_PRIORI esta preenchido
cPriori := Iif(Empty(cPriori),"0",cPriori)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se esta habilitada a nova auditoria
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If GetNewPar("MV_PL790NE","0") == "0"
	Return
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Define Alias
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If lIntern .Or. lEvolu
	cAlias := "BE4"                       
ElseIf lReembolso
	cAlias := "B44"
ElseIf lOPME
	cAlias := "B4A"
ElseIf lProrrog
	cAlias := "B4Q"
EndIf	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Variaveis
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
cOpeMov := Iif( lIntern .Or. lEvolu,(cAlias)->&(cAlias+"_CODOPE"),(cAlias)->&(cAlias+"_OPEMOV") )
cNumAut := cOpeMov + Iif( !lIntern .And. !lEvolu,(cAlias)->( &(cAlias+"_ANOAUT")+&(cAlias+"_MESAUT")+&(cAlias+"_NUMAUT") ),(cAlias)->( &(cAlias+"_ANOINT")+&(cAlias+"_MESINT")+&(cAlias+"_NUMINT") ) )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Municipio do local de atendimento
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

If lOPME

	dbSelectArea("BID")
	BEA->(dbSetOrder(1) )
	BEA->( MsSeek( xFilial("BEA")+B4A->B4A_GUIREF))
	If BEA->(BEA_OPEMOV+BEA_ANOAUT+BEA_MESAUT+BEA_NUMAUT) == B4A->B4A_GUIREF
		If BB8->( MsSeek( xFilial("BB8")+ BEA->BEA_CODRDA+cOpeMov+ BEA->BEA_CODLOC+BEA->BEA_LOCAL) ) 
			cCodMun := BB8->BB8_CODMUN
		Else
			cCodMun := BID->BID_CODMUN   
		Endif	
	Else
		cCodMun := BID->BID_CODMUN	
	Endif

ElseIf lProrrog

	dbSelectArea("BID")
	BE4->(dbSetOrder(2) )
	BE4->( MsSeek( xFilial("BE4")+B4Q->B4Q_GUIREF))
	If BE4->(BE4_CODOPE+BE4_ANOINT+BE4_MESINT+BE4_NUMINT) == B4Q->B4Q_GUIREF
		If BB8->( MsSeek( xFilial("BB8")+ BE4->BE4_CODRDA+cOpeMov+ BE4->BE4_CODLOC+BE4->BE4_LOCAL) ) 
			cCodMun := BB8->BB8_CODMUN
		Else
			cCodMun := BID->BID_CODMUN   
		Endif	
	Else
		cCodMun := BID->BID_CODMUN	
	Endif

Else

	If BB8->( MsSeek( xFilial("BB8") + (cAlias)->&(cAlias+"_CODRDA") + cOpeMov + (cAlias)->&(cAlias+"_CODLOC") + (cAlias)->&(cAlias+"_LOCAL") ) )
		cCodMun := BB8->BB8_CODMUN
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Quando nao e reembolso
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If lEvolu .Or. lIntern
	cOriMov := BE4->BE4_ORIMOV
	cTpGuia := '3'
ElseIf !lReembolso .And. !lOPME .AND. !lProrrog .And. (!lEvolu .Or. !lIntern)
	cOriMov := (cAlias)->&(cAlias+"_ORIMOV")
	cTpGuia := BEA->BEA_TIPO
ElseIf lOPME
	cOriMov := '3'
	cTpGuia	:= '6'
ElseIf lProrrog
	cOriMov := BE4->BE4_ORIMOV
	cTpGuia	:= '11'
Else
	cOriMov := '3'
	cTpGuia	:= '5'
EndIf
cOriMov := iif(!Empty(cOriMovHAT),cOriMovHAT,cOriMov)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Tipo de admissao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If (cAlias)->( FieldPos(cAlias+"_TIPADM") ) > 0                                                                                       
	cTipAdm := (cAlias)->&(cAlias+"_TIPADM")
Else
	cTipAdm := GetNewPar("MV_PLSTPAD","1")
EndIf
cCarInt := Posicione("BDR",1,xFilial("BDR") + cOpeMov + cTipAdm,"BDR_CARINT")

lDemand := Ascan( aDadCri,{|x| x[ PLRETPOS( cAliasCri + "_CODGLO",aCabCri ) ] == cCodCri } ) > 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Alimenta o perfil de auditoria com base na critica						 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
For nI := 1 To Len(aDadCri) 
	If !Empty( aDadCri[ nI,PLRETPOS( cAliasCri+"_CODGLO",aCabCri ) ] ) 

		cTipo := Posicione("BCT",1,xFilial("BCT") + cOpeMov + aDadCri[ nI,PLRETPOS( cAliasCri+"_CODGLO",aCabCri ) ],"BCT_TIPO")

		If At(cTipo,cPerAud) == 0
			cPerAud += cTipo+";"
		EndIf
	EndIF
Next
cPerAud := Iif(Empty(cPerAud) .OR. ALLTRIM(cPerAud) == ";","0;1;2;",cPerAud) 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Classificacao da prioridade
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

If ExistBlock("PLSAUDPR") .And. lAuditoria
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Dados enviado ao ponto de entrada 0=Baixa,1=Media,2=Alta
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ    
	lAutorizacao :=	Iif(BEA->BEA_ORIGEM == "1" .And. (!lEvolu .Or. !lIntern),.T.,.F. )

	If lIntern .Or. lEvolu
		lFutura := (cAlias)->&(cAlias+"_PRVINT") > (cAlias)->&(cAlias+"_DTDIGI")
	ElseIf 	lReembolso
		lFutura := (cAlias)->&(cAlias+"_DATPRO") > (cAlias)->&(cAlias+"_DTDIGI")
	ElseIf 	lOPME .or. lProrrog
		lFutura := (cAlias)->&(cAlias+"_DATPRO") > (cAlias)->&(cAlias+"_DATSOL")
	Else
		lFutura := (cAlias)->&(cAlias+"_DATSOL") > (cAlias)->&(cAlias+"_DTDIGI")
	EndIf	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Avaliacao do ponto de entrada
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	cPriori := ExecBlock("PLSAUDPR",.F.,.F.,{cOriMov,cTipo,lAutorizacao,cCarInt,lFutura,lReembolso,lEvolu,lIntern } )
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Instancia o modelo de dados		//r7										 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
oB53 := PLSSTRUC():New("B53")


If Existblock("PL790INIP")
	oB53 := ExecBlock("PL790INIP", .F., .F., {oB53} ) 
Endif

oB53:SetValue("B53_NUMGUI", cNumAut )             
oB53:SetValue("B53_ORIMOV", cOriMov )
oB53:SetValue("B53_CODMUN", cCodMun )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Tem que verificar se ja nao existe pois a evolucao vai inserir varios procedimento na mesma guia
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oGEN := PLSREGIC():New()
oGEN:GetDadReg("B53",1, xFilial("B53") + cNumAut + cOriMov )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se nao existir inseri
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !oGEN:lFound
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Chaves																	 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:SetValue("B53_FILIAL", xFilial(cAlias) )
	oB53:SetValue("B53_ALIMOV", cAlias )
	oB53:SetValue("B53_RECMOV", cValToChar( (cAlias)->( Recno() ) ) )
	oB53:SetValue("B53_CODOPE", cOpeMov )
	oB53:SetValue("B53_CODLDP", IIf(lOPME .or. lProrrog, "0000",(cAlias)->&(cAlias+"_CODLDP") ))
	oB53:SetValue("B53_CODPEG", IIf(lOPME .or. lProrrog,"00000000",(cAlias)->&(cAlias+"_CODPEG") ))
	oB53:SetValue("B53_NUMERO", Iif(lIntern .Or. lEvolu,(cAlias)->&(cAlias+"_NUMERO"), Iif(lOPME .or. lProrrog, (cAlias)->&(cAlias+"_NUMAUT"),(cAlias)->&(cAlias+"_NUMGUI") ) ))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Campos restantes														 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:SetValue("B53_DATMOV", dDataBase )
	oB53:SetValue("B53_HORMOV", Left(Time(),5) )
	oB53:SetValue("B53_MATUSU", (cAlias)->( &(cAlias+"_OPEUSR")+&(cAlias+"_CODEMP")+&(cAlias+"_MATRIC")+&(cAlias+"_TIPREG")+&(cAlias+"_DIGITO") ) )
	oB53:SetValue("B53_NOMUSR", Posicione( "BA1",2,xFilial("BA1") + (cAlias)->( &(cAlias+"_OPEUSR")+&(cAlias+"_CODEMP")+&(cAlias+"_MATRIC")+&(cAlias+"_TIPREG")+&(cAlias+"_DIGITO") ) ,"BA1_NOMUSR" ) )
	
	If (B53->(FieldPos('B53_NOMSOC')) > 0)
		oB53:SetValue("B53_NOMSOC", Posicione( "BA1",2,xFilial("BA1") + (cAlias)->( &(cAlias+"_OPEUSR")+&(cAlias+"_CODEMP")+&(cAlias+"_MATRIC")+&(cAlias+"_TIPREG")+&(cAlias+"_DIGITO") ) ,"BA1_NOMSOC" ) )
	EndIf 

	oB53:SetValue("B53_DEMAND", Iif(lDemand,"1","0") )
	oB53:SetValue("B53_PARTIC", Iif(lPartic,"1","0") )
	oB53:SetValue("B53_STATUS", Iif((cAlias)->&(cAlias+"_STATUS") == "6", "3",(cAlias)->&(cAlias+"_STATUS")))
	oB53:SetValue("B53_CARINT", cCarInt )
	oB53:SetValue("B53_PERAUD", If(EMPTY(cPerAud),'1;',cPerAud)   )
	oB53:SetValue("B53_TIPO", cTpGuia )
	oB53:SetValue("B53_AGEPAR", "0" )             
	oB53:SetValue("B53_SITUAC", "0" )                                                              
	oB53:SetValue("B53_BANCON", "0" )
	oB53:SetValue("B53_ENCAMI", IIF(!Empty(cEncGui), "1", "0"))  
	oB53:SetValue("B53_CODDEP", cEncGui) //r7
	oB53:SetValue("B53_ROTGEN", "0") //rotina genérica igual a não

	// Calcula o Prazo do Atendimento
	If B53->(FieldPos("B53_DATPRZ")) > 0 .And. FindFunction("PLPrazoAtend")	.And. !lReembolso	

		oDadosPrazo := JsonObject():New()

		If lIntern .Or. lProrrog
			oDadosPrazo["cTipAdmissao"] := BE4->BE4_TIPADM
			oDadosPrazo["lAtendInternacao"] := .T.			
			oDadosPrazo["lHospitalDia"] := IIf(BE4->BE4_REGINT == "2", .T., .F.)
			oDadosPrazo["lOdonto"] := .F.
			oDadosPrazo["lLaboratorio"] := Alltrim(BE4->BE4_TIPPRE) == "LAB"
			oDadosPrazo["lRegAmbulatorio"] := .F.
			oDadosPrazo["cEspecialidade"] := BE4->BE4_CODESP
		Else
			oDadosPrazo["cTipAdmissao"] := BEA->BEA_TIPADM
			oDadosPrazo["lAtendInternacao"] := .F.
			oDadosPrazo["lHospitalDia"] := .F.
			oDadosPrazo["lOdonto"] := IIf(Alltrim(cTpGuia) == "4", .T., .F.)
			oDadosPrazo["lLaboratorio"] := Alltrim(BEA->BEA_TIPPRE) == "LAB"
			oDadosPrazo["lRegAmbulatorio"] := Alltrim(BEA->BEA_ATEAMB) == "1"
			oDadosPrazo["cEspecialidade"] := BEA->BEA_CODESP
		EndIf

		oDadosPrazo["cAliasItens"] := cAliasIte
		oDadosPrazo["aHeaderItens"] := aHeaderITE
		oDadosPrazo["aColsItens"] := aColsITE

		dDtPrazoAten := PLPrazoAtend(oDadosPrazo)

		oB53:SetValue("B53_DATPRZ", dDtPrazoAten)

		FreeObj(oDadosPrazo)
    	oDadosPrazo := Nil

	EndIf 

	If lProrrog .Or. lOPME  
		oB53:SetValue("B53_NMGORI",(cAlias)->&(cAlias+"_GUIREF"))
	Else
		oB53:SetValue("B53_NMGORI",cNumAut)
	EndIf
	
	if lExPLSDEPTO
		cCodDep := Execblock("PLSDEPTO", .f., .f., {cOriMov,cTipo,lAutorizacao,cCarInt,lFutura,lReembolso,lEvolu,lIntern,aDadCri,aCabCri,aColsITE,aHeaderITE,cAliasIte,cAliasCri,cRegInt,lPartic} )
	endif

	IF !Empty(cEncGui) .or. (lExPLSDEPTO .and. !lDemand) 
		PLSICB71(cAlias, cValToChar((cAlias)->(Recno())), iif(!lExPLSDEPTO, cEncGui, cCodDep))
	ENDIF   

	If lOPME

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se for guia de anexos clinicos, o sistema busca a RDA da guia usada como
		//	referencia na guia de anexos.														 
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

		If !lGui
			FOR nI := 1 TO Len(aTabPes)
				(aTabPes[nI][1])->( DbSetOrder(aTabPes[nI][2]) )
				lGui := (aTabPes[nI][1])->( MsSeek(xFilial(aTabPes[nI][1])+B4A->B4A_GUIREF) )
				IF lGui
					cCRda := (aTabPes[nI][1])->&((aTabPes[nI][1])+"_CODRDA")
				EndIf
				If BB8->( MsSeek( xFilial("BB8") + (aTabPes[nI][1])->&(aTabPes[nI][1]+"_CODRDA") + cOpeMov + (aTabPes[nI][1])->&(aTabPes[nI][1]+"_CODLOC") + (aTabPes[nI][1])->&(aTabPes[nI][1]+"_LOCAL") ) )
					cCodMun := BB8->BB8_CODMUN
					Exit
				EndIf
			Next
		EndIf

		oB53:SetValue("B53_CODRDA", cCRda )
		oB53:SetValue("B53_CODMUN", cCodMun )

	Else
		oB53:SetValue("B53_CODRDA", (cAlias)->&(cAlias+"_CODRDA") )
		oB53:SetValue("B53_CODMUN", cCodMun )
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Grava o departamento quando for de demanda
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If lDemand

		oBX4 := PLSREGIC():New()
		oBX4:GetDadReg("BX4" ,1, ( xFilial("BX4") + RETCODUSR() + PlsIntPad() ) )

		If oBX4:lFound
			cCodDep := oBX4:GetValue("BX4_CODDEP")
			oB53:SetValue("B53_CODDEP", cCodDep )
		EndIf        

		oBX4:Destroy()
	// Ponto de entrada para personalizar a gravação do departamento. Valido somente se nao for demanda.
	Elseif lExPLSDEPTO 
		oB53:SetValue("B53_CODDEP", cCodDep)	
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Não tenha sido informado pega do parametro XML POR EXEMPLO.
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If Empty(cCodDep)
		cCodDep := GetNewPar("MV_PL790DP","001")
	EndIf	                                 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Evolucao de Internacao
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:SetValue("B53_PROINT", Iif(lEvolu .or. lProrrog,"1","0") )             
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Na internacao
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:SetValue("B53_REGINT", cRegInt )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ 0=Baixa;1=Media;2=Alta
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:SetValue("B53_PRIORI", cPriori )         

	If lEvolu

		cChave := BE4->(BE4_CODOPE+BE4_ANOINT+BE4_MESINT+BE4_NUMINT)

		BEJ->(dbSetOrder(1))
		If BEJ->(dbSeek(xFilial("BEJ") + cChave))

			While !BEJ->(EOF()) .AND. xFilial("BEJ")+BEJ->(BEJ_CODOPE+BEJ_ANOINT+BEJ_MESINT+BEJ_NUMINT) ==;
			xFilial("BEJ") + cChave

				If BEJ->BEJ_STATUS == '1'
					nPosit++
				Else
					nNegat++
				EndIf
				BEJ->(dbSkip())
			EndDo
		EndIf

		BQV->(dbSetOrder(1))
		If BQV->(dbSeek(xFilial("BQV") + cChave))

			While !BQV->(EOF()) .AND. xFilial("BQV")+BQV->(BQV_CODOPE+BQV_ANOINT+BQV_MESINT+BQV_NUMINT) ==;
			xFilial("BQV") + cChave

				If BQV->BQV_STATUS == '1'
					nPosit++
				Else
					nNegat++
				EndIf
				BQV->(dbSkip())
			EndDo
		EndIf

		oBE4 := PLSSTRUC():New( "BE4",MODEL_OPERATION_UPDATE,,BE4->( Recno() ) )
		oBE4:SetValue("BE4_STATUS", "6") //status de auditoria (remote) 
		oBE4:SetValue("BE4_STTISS", "2") //status en análise (portal) 
		
		If nPosit == 0 .AND. nNegat > 0
			oB53:SetValue("B53_STATUS", "3") 
			lAudEvo := .T.
		
		ElseIf nPosit > 0 .AND. nNegat > 0
			oB53:SetValue("B53_STATUS", "2") 
			lAudEvo := .T.
		
		ElseIf nPosit > 0 .AND. nNegat == 0
			oB53:SetValue("B53_STATUS", "1") 
		EndIf

		If !oBE4:CRUD() 
			oBE4:ExbMHelp( oBE4:GetErrorMessage(.T.) )
		EndIf

		oBE4:Destroy()	
	EndIf
Else     
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Complementa o perfil
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	aMat := _Super:Split(";", oGEN:GetValue("B53_PERAUD") )
	For nI:=1 To Len(aMat)
		If !Empty(aMat[nI]) .And. !(aMat[nI] $ cPerAud)
			cPerAud += aMat[nI]+";"
		EndIf
	Next                                  
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Se a guia ja foi analisada limpa o operador
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If oGEN:GetValue("B53_SITUAC") == "1"
		oB53:SetValue("B53_OPERAD", "" )   
		oB53:SetValue("B53_SITUAC", "0" )   
		oB53:SetValue("B53_DATINI", CToD("") )   
		oB53:SetValue("B53_HORINI", "" )   
		oB53:SetValue("B53_DATFIM", CToD("") )   
		oB53:SetValue("B53_HORFIM", "" )   
	EndIf	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Campos que devem ser alterados
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:SetlAltera(.T.)
	oB53:SetValue("B53_PERAUD", cPerAud )
	oB53:SetValue("B53_DEMAND", Iif(lDemand,"1","0") )
	oB53:SetValue("B53_PARTIC", Iif(lPartic,"1","0") )
	oB53:SetValue("B53_CARINT", cCarInt )
	oB53:SetValue("B53_PRIORI", cPriori )
	oB53:SetValue("B53_PROINT", Iif(lEvolu .or. lProrrog,"1","0") )
	oB53:SetValue("B53_SITUAC", "0" )

	If !EMPTY(oGEN:getValue("B53_DATFIM"))
		oB53:SetValue("B53_DATMOV", date() )  
		oB53:SetValue("B53_HORMOV", SUBSTR(Time(), 1, 5) )
	EndIf  

	If lEvolu

		BEJ->(dbSetOrder(1))
		If BEJ->(dbSeek(xFilial("BEJ")+B53->B53_NUMGUI))

			While !BEJ->(EOF()) .AND. xFilial("BEJ")+BEJ->(BEJ_CODOPE+BEJ_ANOINT+BEJ_MESINT+BEJ_NUMINT) ==;
			xFilial("BEJ")+B53->B53_NUMGUI

				If BEJ->BEJ_STATUS == '1'
					nPosit++
				Else
					nNegat++
				EndIf
				BEJ->(dbSkip())
			EndDo
		EndIf

		BQV->(dbSetOrder(1))
		If BQV->(dbSeek(xFilial("BQV")+B53->B53_NUMGUI))

			While !BQV->(EOF()) .AND. xFilial("BQV")+BQV->(BQV_CODOPE+BQV_ANOINT+BQV_MESINT+BQV_NUMINT) ==;
			xFilial("BQV")+B53->B53_NUMGUI

				If BQV->BQV_STATUS == '1'
					nPosit++
				Else
					nNegat++
				EndIf
				BQV->(dbSkip())
			EndDo
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Cria o objeto para a atualizacao
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	if nPosit == 0 .AND. nNegat > 0
		oB53:SetValue("B53_STATUS", "3")
	ElseIf nPosit > 0 .AND. nNegat > 0
		oB53:SetValue("B53_STATUS", "2")
	ElseIf nPosit > 0 .AND. nNegat == 0
		oB53:SetValue("B53_STATUS", "1")
	EndIf

	If lEvolu
		
		oBE4 := PLSSTRUC():New( "BE4",MODEL_OPERATION_UPDATE,,BE4->( Recno() ) )
		oBE4:SetValue("BE4_STATUS", "6") //status de auditoria (remote) 
		oBE4:SetValue("BE4_STTISS", "2") //status en análise (portal) 
		
		If nPosit == 0 .AND. nNegat > 0 .OR. nPosit > 0 .AND. nNegat > 0 
			lAudEvo := .T.
		EndIf
	EndIf	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Grava dados na base de dados											 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	If lEvolu
		If !oBE4:CRUD() 
			oBE4:ExbMHelp( oBE4:GetErrorMessage(.T.) )
		EndIf
		oBE4:Destroy()	
	EndIf
EndIf

If !oB53:CRUD() 
	oB53:ExbMHelp( oB53:GetErrorMessage(.T.) )
EndIf	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Destroy a Classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oB53:Destroy() 
oGEN:Destroy() 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
//-------------------------------------------------------------------
/*/ { Protheus.doc } EMail
Envia email

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD EMail() Class PLSA790C
LOCAL aArea	:= GetArea()
LOCAL lRet		:= .F.
LOCAL cTo		:= ""
LOCAL cFrom 	:= ""
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica dados do usuario de envio
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
PswOrder(2)
	cFrom := UsrRetMail(RetCodUsr())//AllTrim(PswRet(1)[1][14])

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica dados do usuario destinatario
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
	cTo := UsrRetMail(B70->B70_COPAGE)//AllTrim(PswRet(1)[1][14])

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se tem e-mail
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
If Empty(cFrom)
	MSGALERT(STR0021 ) //"E-MAIL não informado para o Remetente"
	Return
EndIf

If Empty(cTo)
	MSGALERT(STR0022 ) //"E-MAIL não informado para o Destinatário"
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Dados enviado ao destinatario
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
cBeneficiario 	:= AllTrim(B53->B53_MATUSU + " - " + Posicione("BA1",2,xFilial("BA1")+B53->B53_MATUSU,"BA1->BA1_NOMUSR"))
cNumGui			:= AllTrim(B53->B53_NUMGUI)
cRda			:= AllTrim(B53->B53_CODRDA + " - " + Posicione("BAU",1,xFilial("BAU")+B53->B53_CODRDA,"BAU->BAU_NOME"))
cDHRea			:= AllTrim(DToC(B70->B70_DATREA) + " - " + B70->B70_HORREA)
cDHAge			:= AllTrim(DToC(B70->B70_DATAGE) + " - " + B70->B70_HORAGE)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o usuario de e para tem email
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
If !Empty(cFrom) .And. !Empty(cTo)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
    //³Monta o corpo do e-mail												   
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	cBody := "<html>"
	cBody += "<style type='text/css'><!--"
	cBody += ".texto {"
	cBody += "	font-family: Arial, Helvetica, sans-serif;font-size: 12px;"
	cBody += "	color: #333333;text-decoration: none;font-weight: normal;"
	cBody += "}"
	cBody += ".titulo {"
	cBody += "	font-family: Arial, Helvetica, sans-serif;font-size: 16px;"
	cBody += "	color: #19167D;text-decoration: none;font-weight: bold;"
	cBody += "}"
	cBody += "--></style>"

	cBody += "<body>"
	cBody += "<table width='400' height='60' border='0' cellpadding='0' cellspacing='0'>"
	cBody += "<tr class='titulo'>"
	cBody += "<td height='10'>"
	cBody += "	<strong><font size='4'>Auditoria Participativa - Agendamento</font></strong>"
	cBody += "<td>"
	cBody += "</tr>"
	cBody += "<tr><td><br></td></tr>"
	cBody += "<tr>"
	cBody += "<td height='30'>"
	cBody += "<table>"
	cBody += "	<tr class='texto'>"
	cBody += "		<td width='130' align='Right'><strong>Beneficiario:</strong></td>"
	cBody += "		<td>"+cBeneficiario+"</td>"
	cBody += "	</tr>"

	cBody += "	<tr class='texto'>"
	cBody += "		<td width='130' align='Right'><strong>Rede de Atendimento:</strong></td>"
	cBody += "		<td>"+cRda+"</td>"
	cBody += "	</tr>"
	 
	cBody += "	<tr class='texto'>"
	cBody += "		<td width='130' align='Right'><strong>Numero da Guia:</strong></td>"
	cBody += "		<td>"+cNumGui+"</td>"
	cBody += "	</tr>"
	
	cBody += "	<tr class='texto'>"
	cBody += "		<td width='130' align='Right'><strong>Realização:</strong></td>"
	cBody += "		<td>"+cDHRea+"</td>"
	cBody += "	</tr>"
	
	cBody += "	<tr class='texto'>"
	cBody += "		<td width='130' align='Right'><strong>Agendamento:</strong></td>"
	cBody += "		<td>"+cDHAge+"</td>"
	cBody += "	</tr>"
	cBody += "</table>"
	cBody += "</td>"
	cBody += "</tr>"
	cBody += "</table>"
	cBody += "</body>"
	cBody += "</html>"
    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
    //³Envia email
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	::SendEmail(cFrom,cTo,,,STR0023,cBody) //"Agendamento de Visita"
    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
    //³Verifica se teve erro
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	MSGALERT( ::cErro )
	lRet := .T.
Else
	MSGALERT(STR0024 ) //"E-MAIL não encontrado"
	lRet := .F.
EndIf 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Rest nas linhas do browse e na area										 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
RestArea( aArea )                   
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(lRet)                         
//-------------------------------------------------------------------
/*/ { Protheus.doc } NegComp
Nega participacao do item

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD NegComp() Class PLSA790C
LOCAL cSequen := (::cAIte)->&(::cAIte + "_SEQUEN")
LOCAL cCodPad := (::cAIte)->&(::cAIte + "_CODPAD")
LOCAL cCodPro := (::cAIte)->&(::cAIte + "_CODPRO")
LOCAL cStatus := (::cAIte)->&(::cAIte + "_STATUS")
LOCAL dDatPro := (::cAIte)->&(::cAIte + "_DATPRO")
LOCAL cCodRda := B53->B53_CODRDA
LOCAL cMatric := B53->B53_MATUSU
LOCAL cChave  := xFilial("B53") + B53->( B53_CODOPE + B53_CODLDP + B53_CODPEG + B53_NUMERO + B53_ORIMOV ) + cSequen
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Nega ou autoriza a participacao
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
PLSNACOM(cSequen,cCodPad,cCodPro,cStatus,dDatPro,,cChave,cCodRDA,.T.,cMatric)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina															 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return        
//-------------------------------------------------------------------
/*/ { Protheus.doc } NegComp
Nega participacao do item

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD SetDemanda() Class PLSA790C
LOCAL B53 := NIL
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Atualiza para demanda
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
B53 := PLSSTRUC():New( "B53",MODEL_OPERATION_UPDATE,,B53->( Recno() ) )
B53:SetValue("B53_DEMAND",'1' )
B53:CRUD()
B53:Destroy()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da Rotina															 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return        
//-------------------------------------------------------------------
/*/ { Protheus.doc } Destroy
Libera da memoria o obj (Destroy)

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD Destroy() Class PLSA790C
FreeObj(Self:self)
Return



//-------------------------------------------------------------------
/*/ { Protheus.doc } SetAuditoGen
Inclusão da chamada de auditoria genérica

@author Renan Martins	 @since 08/2015     @version 1.0
* lRotGen - Quando rotina genérica, passar como .T. (true)
* cAliorig - Alias do movimento (alias do cabeçalho)
* cAliasIte - Alias dos itens, referentes ao cabeçalho mais o índice de pesquisa que deve ser usado para busca os itens do cabeçalho.
EXEMPLO: Se o Alias de item é ZZZ e o indice para buscar é o 2, deve ser passado "ZZZ2"
* cAliasCri - Alias de crítica da tabela de itens 
* cCodOpe - Código da operadora
* cNumCont - Número de controle, ou seja, número da guia que servirá para busca no módulo e resgatar os itens
* cMatric - Matrícula do usuário 
* cNomUsr - Nome do usuário
* aAtuAItens - Array com os dados para atualizar os itens que estão em auditoria. Deve ser usado quando desejamos
que todos os itens relacionado ao cabeçalho serão mandados para auditoria, pois ele atualiza todos os itens. Deve ser usado
quando mandamos o cabeçalho direto para auditoria. Por exemplo, tenho um processo com dois itens para auditoria. Passo os dados
solicitados deste array, que a rotina já atualiza os dois itens, indicando que os dois estão em auditoria
FORMA do ARRAY: Tabela de Itens/Nome do campo que indica auditoria (apenas nome - até 6 caracteres)/Valor que indica que está em 
  auditoria/Chave de Pesquisa dos itens(o index utilizado para buscar o item, mas sem o xfilial)/indice utilizado para a pesquisa 
  número do índice descrito
  EXEMPLO: {"BDD", "Audito", "1", "BDD_INTERC+BDD_CODOPE+BDD_NUMERO", 1}
* nAtuFil - Número do item que deseja atualizar, quando queremos atualizar apenas um item que está em auditoria. Aqui, deve-se passar
o RECNO do registro que deve ser atualizado.
OBS: Nunca se deve passar aAtuAItens e nAtuFil juntos, pois são para fins diferentes. Enquanto o aAtuAItens atualiza todos os itens,
o nAtuFil serve para mandar apenas um item para auditoria. Ou seja, caso tenhamos um processo com 5 itens e todos devem ser auditados,
utilize o aAtuAItens. Caso destes 5 apenas um deve ir para auditoria, passar o número do RECNO desse registro para o nAtuFil.
* cCpRelac - Campo com os valores que serão utilizados para relacionar críticas, indicar campo que mostra que determinado cabeçalho/item 
está em auditoria e oturas opções - separados por VÍRGULA. É obrigatório o preenchimento das 5 primeiras posições, que serão salvas no campo B53_CVLAUD (tamanho: 30):
diversas opções, para tornar a rotina mais prática. 
FORMA do ARRAY: 1)Nome do campo que diz que está em auditoria (sem o alias- obrigatório) /  2)Valor do campo quando em auditoria (obrigatório) / 
  3) Campo de sequencia   ou localizador de itens e críticas (opcional)/ 4) Valor do campo quando não está em auditoria (obrigatório) / 5) Nome 
  do campo que diz se registro aprovado ou negado auditoria (sem alias - opcional) / 6) Valor do campo quando item negado pela auditoria / 
  7) Valor do campo quando aprovado 3
  EXEMPLO: "AUDITO,SIM,SEQUEN,NAO,APRVAD,SIM,NAO" 
  Quando o auditor for dar o seu parecer, o sistema irá localizar o campo que identifica que determinado item e cabeçalho está em auditoria, atualizando este campo com o valor
  desejado. Logo, baseado no exmplo acima, se a tabela fosse a "BBB", o sistema ia procurar o campo BBB_AUDITO (1ªposição) e colocar neste campo o valor NAO (4ª posição).
  E caso na tabela de itens ainda tenha campos para indicar a decisão da auditoria (Negado - Aprovado), de acordo com o valor da 5ª posição (nome do campo), o sistema irá 
  procurar na Tabela o campo BBB_APRVAD e caso tenha sido aprovado, irá inserir neste campo o valor SIM. Se negado, NAO.
* cTpGuia - Tipo da guia, de acordo com o campo B53_TIPO. O default do campo é Outros, mas caso haja necessidade, pode-se alterar este campo e passar aqui o valor criado.     
*/
//-------------------------------------------------------------------
METHOD SetAuditoGen(lRotGen, cAliOrig, cAliasIte, cAliasCri, cCodOpe, cNumCont, cMatric, cNomUsr, aAtuAItens, nAtuFil, cCpRelac, cTpGuia ) Class PLSA790C
LOCAL nI				:= 1
LOCAL cOpeMov   		:= IIF( !(Empty(cCodope)), cCodOpe, PLSIntPad() )	//Se param. preenchido, fica do parametro, se não, pega do operador logado
LOCAL cCarInt   		:= "N"
LOCAL cNumAut			:= ""
LOCAL cTipo		 		:= ""
LOCAL cPerAud 			:= ""
LOCAL cTipAdm			:= ""
LOCAL cPriori			:= SubStr(&(GetSx3Cache("B53_PRIORI","X3_RELACAO")),1,1)
LOCAL cOriMov			:= "3"
LOCAL cCodDep			:= ""
LOCAL cRegInt			:= "0"
LOCAL lAutorizacao 		:= .F.
LOCAL lFutura			:= .F.
LOCAL lDemand			:= .F.
LOCAL cTempCont			:= ""
LOCAL oGEN				:= NIL
LOCAL oB53				:= NIL
LOCAL nPosit 			:= 0
LOCAL nNegat 			:= 0
LOCAL oBE4				:= NIL
LOCAL lGui				:= .F.
Local cEncGui			:= getNewPar("MV_SETORAT","")
Local nCodIndx			:= 0
Local lCont				:= .T.
LOCAL aMat				:= {}
Local aResItem			:= {}	
Local aRetRes			:= {}
DEFAULT aColsITE		:= {}
DEFAULT aHeaderITE		:= {}
DEFAULT cAliasIte		:= {}
DEFAULT lRotGen			:= .F. //Padrão Falso quando não for via rotina genérica
DEFAULT cAliasCri		:= ""  //ALIAS DE CRÍTICA QUANDO ROTINA GENÉRICA
DEFAULT cAliasIte		:= ""	//ALIAS DE ITEM QUANDO ROTINA GENÉRICA
DEFAULT cAliOrig		:= ""	//ALIAS DE cabeçalho quando rotina genérica
DEFAULT cNumCont		:= "" 
Default cMatric			:= "N/D"
Default cCRda			:= "000"
Default cCodMun 		:= "000"
Default cNomUsr			:= "Não Definido"
Default aAtuAItens		:= {}	//Campo com valores para atualizar cabeçalho e itens (opcional)
Default nAtuFil			:= 0	//Campo informando quais itens filhos serão atualizados
Default cTpGuia			:= "7"

// Verifica se o inicializador do campo B53_PRIORI esta preenchido
cPriori := Iif(Empty(cPriori),"0",cPriori)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se esta habilitada a nova auditoria
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If GetNewPar("MV_PL790NE","0") == "0"
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se número de controle (chave de relacionamento) está preenchida. Se não estiver,
//o sistema não irá gerar a auditoria, pois é a chave de relacionamento
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
IF ( Empty(cNumCont) .OR. Empty(cAliasCri) .OR. Empty(cAliasIte) .OR. Empty(cAliOrig) .OR. Empty(cCpRelac) )	  //ALIAS DE CRÍTICA QUANDO ROTINA GENÉRICA
   Alert(STR0031) // Não foi possível gravar na Auditoria, pois não foi informado um ou mais campos obrigatórios do registro desejado.
   Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verificar se o registro já não existe na base. Se sim, não pode inserir de novo!
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oGEN := PLSREGIC():New()
cTempCont := Padr(cNumCont, (TamSX3("B53_NUMGUI")[1]))
oGEN:GetDadReg("B53",1, xFilial("B53") + cTempCont + cOriMov )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ verifica se o registro já existe na B53. Além disso, verifica se o campo aAtuFil está vazio,
// pois se estiver, significa que está tentando incluir de novo um cabeçalho já existente na B53.
// Se aAtuFil estiver preenchido, significa que está incluindo apenas item filho
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If oGEN:lFound .AND. Empty(nAtuFil) 
  MsgAlert(STR0032)
  Return
ENDIF
oGen:Destroy()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifico se Atualiza Itens está preenchido. Se sim, significa que a rotina irá também gravar, de acordo
// com as informações do array, o valor definido pelo desenvolvedor nas tabelas, indicando
// que aquele cabeçalho/item está em auditoria (opcional). A chave será a mesma cNumCont
//Preciso passar na sequência: Tabela, Nome Campo A ser Atualizado, Valor, Campos Indice
//{Tabela, Nome do campo, Valor, Campos Indice, Indice} = {"YYY","Audito", "1", "YYY_COD+YYYY_RUA", 1}
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
IF (Len(aAtuAItens) > 0 .AND. nAtuFil > 0)
   MsgAlert(STR0033)
   Return
ENDIF
     
IF (Len(aAtuAItens) > 0)
   PLSAtuCGen(aAtuAItens, cNumCont)
ENDIF

IF ((nAtuFil) > 0)
	aVetTmp := {Left(cAliasIte,3)}
	aResItem := PLSVerAdAb(cTempCont, cOriMov) //cTempCont por causa dos espaços faltantes, caso haja
	IF ( aResItem[1] )  //Guia já foi auditada e não é possível inserir mais itens nela
	   MsgAlert(STR0034)
	   Return
	ELSEIF (!aResItem[2])  //Guia está em aberto e já existe na auditoria - apenas atualizo item e saio da rotina
	   PLSAtuCGen(aVetTmp, Nil, 1, nAtuFil, cCpRelac)
	   Return
	ELSEIF (aResItem[2]) //Significa a inclusão de nova guia com apenas 1 registro para ser atualizado   
	   PLSAtuCGen(aVetTmp, Nil, 1, nAtuFil, cCpRelac)
	ENDIF
ENDIF

cPerAud := Iif(Empty(cPerAud),"0;1;2;",cPerAud)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Instancia o modelo de dados												 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 
oB53 := PLSSTRUC():New("B53")
oB53:SetValue("B53_NUMGUI", cNumCont )             
oB53:SetValue("B53_ORIMOV", cOriMov )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Tem que verificar se ja nao existe pois a evolucao vai inserir varios procedimento na mesma guia
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oGEN := PLSREGIC():New()
oGEN:GetDadReg("B53",1, xFilial("B53") + cNumCont + cOriMov )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se nao existir, proceder com a inclusão
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !oGEN:lFound
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Chaves																	 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:SetValue("B53_FILIAL", xFilial(cAliOrig) )
	oB53:SetValue("B53_ALIMOV", cAliOrig )
	oB53:SetValue("B53_RECMOV", cValToChar( (cAliOrig)->( Recno() ) ) )
	oB53:SetValue("B53_CODOPE", cOpeMov )
	oB53:SetValue("B53_CODLDP", "0000" )
	oB53:SetValue("B53_CODPEG", "00000000")
	oB53:SetValue("B53_NUMERO", "00000000") 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Campos restantes														 
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:SetValue("B53_DATMOV", dDataBase )
	oB53:SetValue("B53_HORMOV", Left(Time(),5) )
	oB53:SetValue("B53_MATUSU", cMatric )
	oB53:SetValue("B53_NOMUSR", cNomUsr )

	If (B53->(FieldPos('B53_NOMSOC')) > 0)
		oB53:SetValue("B53_NOMSOC", Posicione( "BA1",2,xFilial("BA1") + ("B53")->( &("B53_OPEUSR")+&("B53_CODEMP")+&("B53_MATRIC")+&("B53_TIPREG")+&("B53_DIGITO") ) ,"BA1_NOMSOC" ) )
	EndIf
	
	oB53:SetValue("B53_DEMAND", "0" )
	oB53:SetValue("B53_PARTIC", "0" )
	oB53:SetValue("B53_STATUS", "7" )  //Rotina Genérica
	oB53:SetValue("B53_CARINT", cCarInt )
	oB53:SetValue("B53_PERAUD", If(cPerAud == ';', '1;',cPerAud))
	oB53:SetValue("B53_TIPO", cTpGuia )
	oB53:SetValue("B53_AGEPAR", "0" )             
	oB53:SetValue("B53_SITUAC", "0" )      //Não                                                       
	oB53:SetValue("B53_BANCON", "0" )
	oB53:SetValue("B53_ENCAMI", IIF(!Empty(cEncGui), "1", "0"))  
	oB53:SetValue("B53_CODDEP", cEncGui) //r7
	oB53:SetValue("B53_ROTGEN", "1" )             
	oB53:SetValue("B53_ALIITE", cAliasIte )      //Em análise                                                        
	oB53:SetValue("B53_ALICRI", cAliasCri )
	oB53:SetValue("B53_CVLAUD", cCpRelac )
	
	IF !Empty(cEncGui)
	   PLSICB71(cAliOrig, cValToChar((cAliOrig)->(Recno())), cEncGui )
	ENDIF   
	   
	oB53:SetValue("B53_CODRDA", cCRda )
	oB53:SetValue("B53_CODMUN", cCodMun )
	oB53:SetValue("B53_PROINT", "0" )             
	oB53:SetValue("B53_REGINT", cRegInt )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ 0=Baixa;1=Media;2=Alta
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:SetValue("B53_PRIORI", cPriori )         
Else     
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Complementa o perfil
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	aMat := _Super:Split(";", oGEN:GetValue("B53_PERAUD") )
	For nI:=1 To Len(aMat)
		If !Empty(aMat[nI]) .And. !(aMat[nI] $ cPerAud)
			cPerAud += aMat[nI]+";"
		EndIf
	Next                                  
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Se a guia ja foi analisada limpa o operador
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If oGEN:GetValue("B53_SITUAC") == "1"
		oB53:SetValue("B53_OPERAD", "" )   
		oB53:SetValue("B53_SITUAC", "0" )   
		oB53:SetValue("B53_DATINI", CToD("") )   
		oB53:SetValue("B53_HORINI", "" )   
		oB53:SetValue("B53_DATFIM", CToD("") )   
		oB53:SetValue("B53_HORFIM", "" )   
	EndIf	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Campos que devem ser alterados
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oB53:SetlAltera(.T.)
	oB53:SetValue("B53_PERAUD", If(cPerAud == ';', '1;',cPerAud) )
	oB53:SetValue("B53_DEMAND", "0" )
	oB53:SetValue("B53_PARTIC", "0" )
	oB53:SetValue("B53_CARINT", cCarInt )
	oB53:SetValue("B53_PRIORI", cPriori )
	oB53:SetValue("B53_PROINT", "0" )
	oB53:SetValue("B53_SITUAC", "0" )
	
	If !EMPTY(oGEN:getValue("B53_DATFIM"))
		oB53:SetValue("B53_DATMOV", date() )  
		oB53:SetValue("B53_HORMOV", SUBSTR(Time(), 1, 5) )
	EndIf  
	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Cria o objeto para a atualizacao
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		
	if nPosit == 0 .AND. nNegat > 0
		oB53:SetValue("B53_STATUS", "3")
	ElseIf nPosit > 0 .AND. nNegat > 0
		oB53:SetValue("B53_STATUS", "2")
	ElseIf nPosit > 0 .AND. nNegat == 0
		oB53:SetValue("B53_STATUS", "1")
	EndIf
EndIf	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Grava dados na base de dados											 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

If !oB53:CRUD() 
	oB53:ExbMHelp( oB53:GetErrorMessage(.T.) )
EndIf	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Destroy a Classe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oB53:Destroy() 
oGEN:Destroy() 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Fim do Metodo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return


//-------------------------------------------------------------------
/*/ { Protheus.doc } PLSAtuCGen
Atualiza campos de auditoria, caso seja chamada a função

@author Renan Martins
@since 08/2015
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function PLSAtuCGen(aVetor, cChave, nTipUnq, nRecReg, cCmpRel)
Local nI 			:= 0
Local lRte			:= .T.
Local aTmp			:= {}
Default nTipUnq	:= 0

IF (nTipUnq <> 1)
  For nI := 1 TO Len(aVetor)
    (aVetor[nI][1])->(DbselectArea(aVetor[nI][1]))
    (aVetor[nI][1])->(DBSetOrder(aVetor[nI][5]))
	 IF ( (aVetor[nI][1])->( DbSeek( xFilial(aVetor[nI][1]) + cChave)) )
	    While ( !(aVetor[nI][1])->(Eof()) .And. (aVetor[nI][1])->&(aVetor[nI][4]) == cChave )
		 (aVetor[nI][1])->(Reclock(aVetor[nI][1],.F.))
		 (aVetor[nI][1])->&(aVetor[nI][1]+"_"+aVetor[nI][2]) := aVetor[nI][3]
		 (aVetor[nI][1])->( MsUnlock() )
		 (aVetor[nI][1])->(dbSkip())
	    ENDDO	 
	 ENDIF
  Next

ELSE  //Quer dizer que estou apenas atualizando apenas um item
  IF ( Valtype(nRecReg) == "N" )
  	  aTmp := SEPARA(cCmpRel,",",.F.)
  	  IF ( (aVetor[1])->&(aVetor[1]+"_"+aTmp[1]) == aTmp[2] )
  	     MsgAlert(STR0035)
  	     Return
	  ENDIF
	  (aVetor[1])->(DbselectArea(aVetor[1]))  
	  (aVetor[1])->(DBGoTo(nRecReg))
	  (aVetor[1])->(Reclock(aVetor[1],.F.))
	  (aVetor[1])->&(aVetor[1]+"_"+aTmp[1]) := aTmp[2]
	  (aVetor[1])->( MsUnlock() )
  ELSE
	  lRte := .F.
  ENDIF  	  
ENDIF  
Return (lRte)


//-------------------------------------------------------------------
/*/ { Protheus.doc } PLSAtuCGen
Verifica se durante a inclusão de um item, se o cabeçalho deste item já  não foi auditado, pois se sim, 
não é possível incluir um novo item. 

@author Renan Martins
@since 08/2015
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function PLSVerAdAb(cChave, cOriMov)
Local lItemFec 	:= .F.
Local oGEN			:= Nil
Local lCbcNInc	:= .F.
oGEN := PLSREGIC():New()
oGEN:GetDadReg("B53",1, xFilial("B53") + cChave + cOriMov )
If oGEN:lFound 
  IF (B53->B53_SITUAC == "1") // Guia Analisada não é possivel incluir de novo 
    lItemFec := .T. // Significa que a guia já foi analisada
  ENDIF
ELSE
  lCbcNInc := .T.   //Significa que o cabeçalho ainda não foi incluído    
ENDIF
oGen:Destroy()

Return({lItemFec, lCbcNInc})



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³AtuPClass ³ Autor ³ Totvs				    ³ Data ³ 17/03/11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Atualiza propriedades da Classe	  						  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AtuPClass(oSelf, lEvol)
LOCAL aRet := {}                        

Iif(lEvol,lEvo := .T.,Nil)

//Operador Corrente
oSelf:cOperad := RETCODUSR()

//Dados do operador
RetDadOpe(oSelf)

//Informacoes da guia
oSelf:lEmAnalise		:= B53->B53_SITUAC=='2'
oSelf:lEspera  	 		:= B53->B53_SITUAC=='3'
oSelf:lAnalisada 		:= Iif(B53->B53_SITUAC=='1',.T.,.F.)
oSelf:lInconsistente	:= Iif(B53->B53_SITUAC=='4',.T.,.F.)
oSelf:lIncoRes			:= Iif(B53->B53_SITUAC=='4' .And. B72->B72_INCONS == '1',.T.,.F.)
oSelf:lNotInRes			:= Iif(B53->B53_SITUAC=='4' .And. B72->( Eof() ),.T.,.F.)
oSelf:lAutorizada   	:= Iif(B53->B53_STATUS=='1',.T.,.F.)
oSelf:lParticipativa	:= Iif(B53->B53_PARTIC=='1',.T.,.F.)
oSelf:lAgendada     	:= Iif(B53->B53_AGEPAR=='1',.T.,.F.)
oSelf:lDemanda			:= Iif(B53->B53_DEMAND=='1',.T.,.F.)
oSelf:lHaveOwner 		:= !Empty(B53->B53_OPERAD)
oSelf:lOwner 			:= B53->B53_OPERAD==oSelf:cOperad
oSelf:cOwner			:= B53->B53_OPERAD
oSelf:lHaveGuia  		:= !Empty(B53->B53_NUMGUI)
oSelf:cNumGuia  		:= B53->B53_NUMGUI
oSelf:lRotinaGen		:= IIF(B53->B53_ROTGEN == "1", .T., .F.)
oSelf:cAllPerfil		:= B53->B53_PERAUD
oSelf:lConsulta     	:= AllTrim(B53->B53_TIPO)=='1'
oSelf:lSadt				:= AllTrim(B53->B53_TIPO)=='2'
oSelf:lInternacao		:= AllTrim(B53->B53_TIPO)=='3'
oSelf:lOdonto			:= AllTrim(B53->B53_TIPO)=='4'
oSelf:lReembolso		:= AllTrim(B53->B53_TIPO)=='5'
oSelf:lOPME				:= AllTrim(B53->B53_TIPO)=='6'
oSelf:lProrrog			:= AllTrim(B53->B53_TIPO)=='11'
oSelf:lEvolucao 		:= lEvo
oSelf:lCriDia			:= (AllTrim(B53->B53_TIPO)=='3' .or. AllTrim(B53->B53_TIPO)=='11') .and. PPL790VDIB(B53->B53_NUMGUI, AllTrim(B53->B53_TIPO))
oSelf:cACab				:= B53->B53_ALIMOV
aRet 					:= RetAliRel(oSelf)
oSelf:cAIte				:= aRet[1]
oSelf:cACri				:= aRet[2]
oSelf:nIdxIte			:= aRet[3]
oSelf:nIdxCri  			:= aRet[4]
oSelf:cAudito 			:= RetAudito(oSelf)

//Dados do departamento de acordo com a Guia sendo auditada
aRetDep := {}
aRetDep := RetDepart(oSelf)
oSelf:lThisDep 			:= aRetDep[1]
oSelf:cCodDepa			:= aRetDep[2]

Return

/*/{Protheus.doc} RetDepart
	Retorna o Departamento do Operador em que a Guia se encontra caso ela pertença a algum dos departamentos do operador.
	O De/Para Operador x Departamento fica na tabela B6P e seu cadastro na Aba Departamentos do cadastro de Operadores do Sistema.

	@author Thiago Paris
	@since 14/07/2020
	@version 1.0
	@param oSelf, object, self
	@return aRet, array, {bRet, cCodDep}, onde bRet é .T. caso encontre, .F. caso não encontre,
		e cCodDep é o código do Departamento encontrado, ou BX4_CODDEP caso contrário.
	/*/
Static Function RetDepart(oSelf)
LOCAL bRet := .F.
LOCAL cCodDep := ""
bRet := (Empty(B53->B53_CODDEP) .Or. B53->B53_CODDEP==oSelf:cCodDep)
cCodDep := oSelf:cCodDep
If PLSALIASEXI("B6P") .And. !bRet
	B6P->(DbSetOrder(1))
	If  B6P->(msSeek(xFilial("B6P") + oSelf:cOperad + PlsIntPad() + B53->B53_CODDEP))
		bRet := .T.
		cCodDep := B6P->B6P_CODDEP
	Endif
EndIf
Return {bRet, cCodDep}
/*/        
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³RetDadOpe ³ Autor ³ Totvs			    	³ Data ³ 17/03/11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Atualiza propriedades da Classe	  						  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function RetDadOpe(oSelf)
LOCAL nPos := 0
LOCAL aRet := {}
LOCAL oBX4 := PLSREGIC():New()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Acesso ao registro
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oBX4:GetDadReg("BX4" ,1, ( xFilial("BX4") + oSelf:cOperad + PlsIntPad() ) ) 
oSelf:cDesPerf := ""
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Se existe
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If oBX4:lFound
	oSelf:cCodDep := oBX4:GetValue("BX4_CODDEP")
	oSelf:cDirFax := oBX4:GetValue("BX4_DIRDOC")
	
	aRet := RetSx3Box( X3CBox( Posicione('SX3',2,"BX4_PERAUD",'X3_CBOX') ),,,1 )
	
	If (nPos := AsCan( aRet , {|x| AllTrim(x[2]) == oBX4:GetValue("BX4_PERAUD")} ) ) > 0
		oSelf:cDesPerf := aRet[nPos,3]
  	EndIf	
EndIf         
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se pode incluir processo de demanda
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oSelf:lOpAudi 	:= oBX4:GetValue("BX4_AUDITO") == "1"		//³¹²³
oSelf:lLibGuia	:= oBX4:GetValue("BX4_LIBGUI") == "1"  //r7
oSelf:lIncDem 	:= oBX4:GetValue("BX4_PROCES") == "1"
oSelf:lIncPar 	:= oBX4:GetValue("BX4_PARTIC") == "1"
oSelf:lIncEnc 	:= oBX4:GetValue("BX4_ENCMIN") == "1"
oSelf:lIntSau 	:= oBX4:GetValue("BX4_INTSAU") == "1"
oSelf:lIncAno	:= oBX4:GetValue("BX4_ANOTAC") == "1"
oSelf:lMonFax 	:= oBX4:GetValue("BX4_MOTDOC") == "1"
oSelf:lVisAud 	:= oBX4:GetValue("BX4_VISAUD") == "1"
oSelf:lIncProc	:= oBX4:GetValue("BX4_PROAUD") == "1"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oBX4:Destroy()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim da rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³RetAliRel ³ Autor ³ Totvs			    	³ Data ³ 17/03/11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Retorna os alias relacionado como alias informado          ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function RetAliRel(oSelf)
LOCAL aRet := {"","",1,1}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica o alias selecionado {Item,Critica,IdxItem,IdxCritica}
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
IF ( Empty(B53->B53_ROTGEN) .OR. B53->B53_ROTGEN == "0" )
Do Case 
	Case oSelf:lSadt .Or. oSelf:lConsulta
		aRet := {"BE2","BEG",1,1}
	Case oSelf:lInternacao .And. !oSelf:lEvolucao
		aRet := {"BEJ","BEL",1,1}
	Case oSelf:lEvolucao .OR. oSelf:lProrrog
		aRet := {"BQV","BQZ",1,1}
	Case oSelf:lOdonto
		aRet := {"BE2","BEG",1,1}
	Case oSelf:lReembolso
		aRet := {"B45","B46",1,1}
	Case oSelf:lOPME
		aRet := {"B4C","BEG",1,1}
EndCase	    
ELSE
	aRet := {Left(B53->B53_ALIITE,3),Left(B53->B53_ALICRI,3), Val(Right(B53->B53_ALIITE,3)),Val(Right(B53->B53_ALICRI,3))}
	
ENDIF    
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return(aRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³DelAcbAc9 ³ Autor ³ Totvs			    	³ Data ³ 17/03/11 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Verifica se ficou alguma sujeito na acb quando fecha a tela³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function DelAcbAc9(lExcAC9)
LOCAL oAC9 		:= NIL
LOCAL oACB 		:= NIL        
DEFAULT lExcAC9 := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Elimina lixo da acb
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
If !lExcAC9
	If !ACB->( Eof() )
	 	oAC9 := PLSREGIC():New()
		oAC9:GetDadReg( "AC9",1, xFilial("AC9") + ACB->ACB_CODOBJ,,,.F. )
	
		If !oAC9:lFound
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			//³ Deleta arquivo movido para pasta do banco de conhecimento
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			If FErase(MsDocPath()+"\"+ACB->ACB_OBJETO) == -1
				
				FWLogMsg('WARN',, 'SIGAPLS', funName(), '', '01', STR0020+MsDocPath()+"\"+ACB->ACB_OBJETO+"]" , 0, 0, {}) //"Impossivel deletar arquivo gerado no banco de conhecimento ["
				
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			//³ Delete o lixo que foi gravado na acb
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			oACB := PLSSTRUC():New( "ACB",MODEL_OPERATION_DELETE,,ACB->(Recno()))
			oACB:CRUD()   
			
			oACB:Destroy()                                               
			oAC9:Destroy()
		EndIf
	EndIf
Else 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Deleta arquivo movido para pasta do banco de conhecimento
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If FErase(MsDocPath()+"\"+ACB->ACB_OBJETO) == -1

		FWLogMsg('WARN',, 'SIGAPLS', funName(), '', '01', STR0020+MsDocPath()+"\"+ACB->ACB_OBJETO+"]" , 0, 0, {}) //"Impossivel deletar arquivo gerado no banco de conhecimento ["
		
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Delete o lixo que foi gravado na acb
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oACB := PLSSTRUC():New( "ACB",MODEL_OPERATION_DELETE,,ACB->( Recno() ) )
	oACB:CRUD()
	oACB:Destroy()                
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³ Delete o lixo que foi gravado na acb
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	oAC9 := PLSSTRUC():New( "AC9",MODEL_OPERATION_DELETE,,AC9->( Recno() ) )
	oAC9:CRUD()
	oAC9:Destroy()
EndIf	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Fim do Rotina
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
Return

/*/ { Protheus.doc } ProcPart
Informa para o auditor que o procedimento é participativo, 
caso exista registro criado no folder participativo

@author Alexander Santos
@since 02/02/11
@version 1.0
/*/
//-------------------------------------------------------------------
METHOD ProcPart() Class PLSA790C 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Objeto que verifica e retorna se existe alguma participativa criada no folder
//  participativa
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
oB70 := PLSREGIC():New()
oB70:GetDadReg("B70",1, xFilial("B70") + B53->(B53_ALIMOV+B53_RECMOV),,,.T. )

If AllTrim(B53->B53_TIPO) == "2" // Liberação/ Lib. Odonto/ Aurotização SADT e Odonto. 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o procedimento que esta sendo auditado é participativo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	If BE2->BE2_PARTIC == "1"
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se existir registro na pasta participativa relacionado ao procedimento e
		//  ainda não foi realizado a confirmação
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If oB70:lFound .AND. oB70:GetValue("B70_RELCON") == "0"
			MSGALERT(STR0027)
		EndIf
	EndIf

ElseIf AllTrim(B53->B53_TIPO) == "3" // Internação

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o procedimento que esta sendo auditado é participativo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ	
	If BEJ->BEJ_PARTIC == "1"
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se existir registro na pasta participativa relacionado ao procedimento e
		//  ainda não foi realizado a confirmação
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If oB70:lFound .AND. oB70:GetValue("B70_RELCON") == "0"
			MSGALERT(STR0027)
		EndIf
	EndIf
	
ElseIf AllTrim(B53->B53_TIPO) == "5" // Reembolso

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³ Verifica se o procedimento que esta sendo auditado é participativo
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ	
	If B45->B45_PARTIC == "1"
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³ Se existir registro na pasta participativa relacionado ao procedimento e
		//  ainda não foi realizado a confirmação
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		If oB70:lFound .AND. oB70:GetValue("B70_RELCON") == "0"
			MSGALERT(STR0027)
		EndIf
	EndIf
EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSA790C  ³ Autor ³ Totvs				    ³ Data ³ 30/03/10 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Somente para compilar a class							  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLSA790C
Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSA790C  ³ Autor ³ Totvs				    ³ Data ³ 30/03/10 ³±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Somente para compilar a class							  ³±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function PLSADESV

lEvo := .F.

Return


/*/
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±±
±±³Funcao    ³PLSICB71 ³ Autor ³ Renan Martins	    ³ Data ³ 23.032015   ±±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±±
±±³Descricao ³ Função para incluir na B71 (encaminhamentos) o setor para  ±±±
±± qual a guia foi encaminhada  de forma automática, de acordo com o      ±±±
±± parâmetro MV_SETORAT						  		                         ±±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±±
/*/
Function PLSICB71(cAlias, cRecNO, cDept,cObsMotPad,lSx3)
Local oB71 	:= NIL	
Local cSeq 	:= ""
Local aArea   := GetArea()
Local cSQL := "SELECT MAX(B71_SEQUEN) AS MAIOR FROM "+B71->(RetSQLName("B71"))+" WHERE "
	  cSQL += " B71_FILIAL = '"+xFilial("B71")+"' AND "
	  cSQL += " B71_ALIMOV = '"+cAlias+"' AND "
	  cSQL += " B71_RECMOV = '"+cRecNO+"' AND "
	  cSQL += " D_E_L_E_T_ = ' '"

PLSQuery(cSQL,"TrbB71")

Default lSx3  := .F.

If ! TrbB71->(Eof()) .AND. ! Empty(TrbB71->MAIOR)
	cseq := Soma1(TrbB71->MAIOR)
Else
	cseq := "001"
EndIf

TrbB71->(DbCloseArea())

RestArea( aArea )

If !lSx3	  

	oB71 := PLSSTRUC():New("B71",MODEL_OPERATION_INSERT,1)
	oB71:SetValue("B71_FILIAL", xFilial( "B71") )
	oB71:SetValue("B71_ALIMOV", cAlias )
	oB71:SetValue("B71_RECMOV", cRecNO )
	oB71:SetValue("B71_DATMOV", dDataBase )
	oB71:SetValue("B71_OPERAD", RETCODUSR() )
	oB71:SetValue("B71_CODDEP", cDept )
	oB71:SetValue("B71_SEQUEN", cSeq )
	ConfirmSX8()
	oB71:CRUD() 
	oB71:Destroy()
	cseq:=B71->B71_SEQUEN
	PLS71MM(cAlias,cRecNO,cseq, cObsMotPad) 
Else
	Return cseq
EndIf

Return
//-------------------------------------------------------------------
/*/{Protheus.doc} PLS71MM
Função para incluir campo Memo rotinas Auditoria
@author Sigapls
@since 24/09/2016
@version P12
/*/
//-------------------------------------------------------------------
Static Function PLS71MM(cAlias,cRecNO,cseq,cResposta)
LOCAL aArea      := GetArea()  
 
B71->(DbSetOrder(1))
If  B71->(msSeek(xFilial("B71")+cAlias+cRecNO+cseq))
	B71->(RecLock("B71",.F.))
	B71->B71_OBS:=cResposta 
	B71->( MsUnLock() )	
Endif


RestArea( aArea )	
return()

/*/{Protheus.doc} RetAudito
Retorna se a guia esta em auditoria.
@author victor.silva
@since 17/10/2016
@return caracter, Status da guia
/*/
static function RetAudito(oSelf) 
local cAliGui	:= oSelf:cACab
local cAliEve	:= oSelf:cAIte
local cNumGuia	:= oSelf:cNumGuia
local cChave	:= ""
local cAudito	:= "0"
local aArea		:= {}
local oReg 		:= PLSREGIC():New()
local nIdx		:= 1

//Verifica se o alias esta preenchido
if Empty(cAliGui)
	return cAudito
endif

//Inicializa a chave
cChave	:= xFilial(cAliGui) + cNumGuia

//Salva area
aArea	:= (cAliGui)->(GetArea())

//Se o item nao estiver posicionado, procura no cabecalho da guia
if !lEvo

	//Se for internacao utiliza o indice 2
	if oSelf:lInternacao
		nIdx := 2
	endif
	
	oReg:GetDadReg(cAliGui,nIdx,cChave,,,.T.)

	//Retorna o valor
	if oReg:lFound
		cAudito := oReg:GetValue(cAliGui + "_AUDITO")
	endif

//Senao, pega direto do item
else

	//Salva area
	aArea	:= (cAliEve)->(GetArea())
	
	//Monta a estrutura do registro 
	oReg:GetDadReg(cAliEve,,,(cAliEve)->(RecNo()),,.T.)
	
	//Retorna o valor
	if oReg:lFound
		cAudito := oReg:GetValue(cAliEve + "_AUDITO")
	endif
	
endif

//Destroi o objeto
oReg:Destroy()

//Restaura a area
RestArea(aArea)

return cAudito

//
