#INCLUDE "mata552.ch"
#INCLUDE "PROTHEUS.CH"   
Static __cProdRef := NIL
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MATA552   º Autor ³ Erike Yuri da Silvaº Data ³  04/08/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±  
±±ºDescricao ³ Cadastro de Curvas de Caracteristicas. Objetivo:           º±±
±±º          ³ Cadastro de pre-configuracoes de combinacoes entre caracte-º±±
±±º          ³ risticas de grade, a fim de facilitar o preencimento das   º±±      
±±º          ³ informacoes nas interfaces de grade (para uso com grade e  º±±
±±º          ³ configurador de produtos com interface grade).             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Interfaces grade de Produtos                               º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MATA552
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cCadastro 	:= STR0001 		//"Cadastro de Curvas de Caracteristicas"
PRIVATE aRotina     := MenuDef()

dbSelectArea("SAS")
dbSetOrder(1)
mBrowse( 6,1,22,75,"SAS")
Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A552Visual³Autor  ³ Erike Yuri da Silva   ³ Data ³04.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de visualizacao da curva de caracteristicas           ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                    ³±±
±±³          ³ ExpN2 = Numero do registro                                  ³±±
±±³          ³ ExpN3 = Numero da opcao selecionada                         ³±±         
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo possibilitar a visualizacao    ³±±
±±³          ³de curva de caracteristicas para utilizacao de grade.        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A552Visual(cAlias,nReg,nOpcx)
Local oDlg
Local nX,nY   
Local nOpcA			:= 0                 
Local aACho	  		:= A610CriaHeader("SAS", "AS_ORIG", .T.)
Local aAltGr		:= {"AT_QTDCOL"}             
Local oSize			:= FwDefSize():New()        
PRIVATE oEnchoice
PRIVATE oGetD
PRIVATE cCodRefOld	:= ""
PRIVATE oGrade		:= MsMatGrade():New('oGrade',,'AT_QTDCOL')   
PRIVATE aHeader		:= {}
PRIVATE aCols		:= {}       

RegToMemory("SAS", .F.)      
M->AS_PRDDESC 	:= oGrade:GetDescProd(M->AS_CODREF)
__cProdRef		:= SAS->AS_CODREF		

If a552Monta(2) 

	oSize:AddObject('HEADER',100,25,.T.,.T.)
	oSize:AddObject('GRID'  ,100,75,.T.,.T.)
	
	oSize:lProp 		:= .T. 								             
	oSize:aMargins 	:= { 3, 3, 3, 3 } 					 
	
	oSize:Process() 	   				

	DEFINE MSDIALOG oDlg TITLE OemToAnsi(cCadastro) From oSize:aWindSize[1],oSize:aWindSize[2] TO oSize:aWindSize[3],oSize:aWindSize[4] OF oMainWnd  PIXEL
	oEnchoice := MsmGet():New( "SAS", SAS->(RecNo()), nOpcX ,,,,aACho, {oSize:GetDimension('HEADER','LININI'),oSize:GetDimension('HEADER','COLINI'),oSize:GetDimension('HEADER','LINEND'),oSize:GetDimension('HEADER','COLEND')},,,,,, oDlg,,,,,)
	
	oGetD := MSGetDados():New(oSize:GetDimension('GRID','LININI'),oSize:GetDimension('GRID','COLINI'),oSize:GetDimension('GRID','LINEND'),oSize:GetDimension('GRID','COLEND'),nOpcx,,,,.F.,,,,,"A552SumCurva()")
	A552SumCurva()
	ACTIVATE MSDIALOG oDlg CENTERED ON INIT ( EnchoiceBar(oDlg,{|| oDlg:End()},{||oDlg:End()}))   
EndIf	
Return           


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A552Inclui³Autor  ³ Erike Yuri da Silva   ³ Data ³04.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de inclusao da curva de caracteristicas               ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                    ³±±
±±³          ³ ExpN2 = Numero do registro                                  ³±±
±±³          ³ ExpN3 = Numero da opcao selecionada                         ³±±         
±±³          ³ ExpL1 = Indica se sera uma inclusao a partir de uma copia.  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo possibilitar a inclusao manual ³±±
±±³          ³de curva de caracteristicas para utilizacao de grade.        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A552Inclui(cAlias,nReg,nOpcx,lCopia)
Local oDlg
Local nX,nY   
Local nOpcA			:= 0                 
Local aAltGr			:= {"AT_QTDCOL"}   
Local aACho			:= A610CriaHeader("SAS", "AS_ORIG", .T.)
Local oSize			:= FwDefSize():New()

PRIVATE oGetD, oEnchoice
PRIVATE cCodRefOld	:= ""
PRIVATE oGrade		:= MsMatGrade():New('oGrade',,'AT_QTDCOL')   
PRIVATE aHeader		:= {}
PRIVATE aCols		:= {}       
PRIVATE aTELA[0][0],aGETS[0]

lCopia := If( ValType(lCopia)=="L", lCopia, .F. )  

RegToMemory("SAS", .T.)

If lCopia 
	For nX:=1 To FCount()
		M->&( FieldName(nX) ):= FieldGet(nX)
	Next nX    
	M->AS_CURVA		:= CriaVar("AS_CURVA")		
	M->AS_PRDDESC	:= oGrade:GetDescProd(M->AS_CODREF)  
	__cProdRef		:= SAS->AS_CODREF 
EndIf

If a552Monta(1,lCopia) 

	oSize:AddObject('HEADER',100,25,.T.,.T.)
	oSize:AddObject('GRID'  ,100,75,.T.,.T.)
	
	oSize:lProp 		:= .T. 								             
	oSize:aMargins 	:= { 3, 3, 3, 3 } 					 
	
	oSize:Process() 	   										
	
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(cCadastro) From oSize:aWindSize[1],oSize:aWindSize[2] TO oSize:aWindSize[3],oSize:aWindSize[4] OF oMainWnd  PIXEL
	oEnchoice := MsmGet():New( "SAS", SAS->(RecNo()), nOpcX ,,,,aACho, {oSize:GetDimension('HEADER','LININI'),oSize:GetDimension('HEADER','COLINI'),oSize:GetDimension('HEADER','LINEND'),oSize:GetDimension('HEADER','COLEND')},,,,,, oDlg,,,,,)


	oGetD := MSGetDados():New(oSize:GetDimension('GRID','LININI'),oSize:GetDimension('GRID','COLINI'),oSize:GetDimension('GRID','LINEND'),oSize:GetDimension('GRID','COLEND'),nOpcx,,"A552TudoOk()",,.F.,aAltGr,,,Len(aCols),"A552SumCurva()")
	
	If lCopia
		A552SumCurva()        
	EndIf
	ACTIVATE MSDIALOG oDlg CENTERED ON INIT ( EnchoiceBar(oDlg,{|| If( obrigatorio(aGets,aTela) .And. oGetD:TudoOk(),(nOpcA:=1,oDlg:End()),nOpcA:=0)},{||nOpcA:=0,oDlg:End()}))   

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza dados das caracteristicas selecionadas pelo operador³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If (nOpcA == 1)
		Begin Transaction                        
		    DbSelectArea("SAS")
			RecLock("SAS",.T.)     
			For nX := 1 TO FCount()
				FieldPut(nX,M->&(FieldName(nX)))
			Next		              
			SAS->AS_FILIAL	:= xFilial("SAS")
			SAS->AS_ORIG	:= MatOrigGrd()
			SAS->( MsUnLock() )
			
  			DbSelectArea("SAT")
			For nX:=1 To Len(aCols)
				RecLock("SAT",.T.)                   
					SAT->AT_FILIAL	:= xFilial("SAT")
					SAT->AT_CODREF	:= M->AS_CODREF
					SAT->AT_CURVA	:= M->AS_CURVA    
					For nY := 1 to Len(aHeader)
						If ( aHeader[nY][10] <> "V" )
							SAT->(FieldPut(FieldPos(Trim(aHeader[nY][2])),aCols[nX][nY]))
						EndIf
					Next nY									
			   	SAT->( MsUnLock() )			
			Next nX		
		End Transaction		
	EndIf
EndIf	
Return           
               


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A552Altera³Autor  ³ Erike Yuri da Silva   ³ Data ³04.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de alteracao da curva de caracteristicas              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                    ³±±
±±³          ³ ExpN2 = Numero do registro                                  ³±±
±±³          ³ ExpN3 = Numero da opcao selecionada                         ³±±         
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo possibilitar a alteracao manual³±±
±±³          ³de curva de caracteristicas para utilizacao de grade.        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A552Altera(cAlias,nReg,nOpcx)
Local oDlg   
Local nX,nY   
Local nOpcA			:= 0                 
Local aAltGr		:= {"AT_QTDCOL"}      
Local aRegSAT		:= {}               
Local aACho	  		:= A610CriaHeader("SAS", "AS_ORIG", .T.)
Local oSize			:= FwDefSize():New()
PRIVATE oGetD, oEnchoice
PRIVATE cCodRefOld	:= ""
PRIVATE oGrade		:= MsMatGrade():New('oGrade',,'AT_QTDCOL')      
PRIVATE aHeader		:= {}
PRIVATE aCols		:= {}       

RegToMemory("SAS", .F.)
M->AS_PRDDESC	:= oGrade:GetDescProd(M->AS_CODREF)
__cProdRef		:= SAS->AS_CODREF		

If a552Monta(3,,aRegSAT) 

	oSize:AddObject('HEADER',100,25,.T.,.T.)
	oSize:AddObject('GRID'  ,100,75,.T.,.T.)
	
	oSize:lProp 		:= .T. 								             
	oSize:aMargins 	:= { 3, 3, 3, 3 } 					 
	
	oSize:Process() 	   			

	DEFINE MSDIALOG oDlg TITLE OemToAnsi(cCadastro) From oSize:aWindSize[1],oSize:aWindSize[2] TO oSize:aWindSize[3],oSize:aWindSize[4] OF oMainWnd  PIXEL

	oEnchoice := MsmGet():New( "SAS", SAS->(RecNo()), nOpcX ,,,,aACho, {oSize:GetDimension('HEADER','LININI'),oSize:GetDimension('HEADER','COLINI'),oSize:GetDimension('HEADER','LINEND'),oSize:GetDimension('HEADER','COLEND')},{"AS_DESCR"},,,,, oDlg,,,,,)

	oGetD := MSGetDados():New(oSize:GetDimension('GRID','LININI'),oSize:GetDimension('GRID','COLINI'),oSize:GetDimension('GRID','LINEND'),oSize:GetDimension('GRID','COLEND'),nOpcx,,"A552TudoOk()",,.F.,aAltGr,,,Len(aCols),"A552SumCurva()")
	A552SumCurva()
	ACTIVATE MSDIALOG oDlg CENTERED ON INIT ( EnchoiceBar(oDlg,{|| If(oGetD:TudoOk(),(nOpcA:=1,oDlg:End()),nOpcA:=0)},{||nOpcA:=0,oDlg:End()}))   

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza dados das caracteristicas selecionadas pelo operador³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If (nOpcA == 1)     
		
		Begin Transaction
		    DbSelectArea("SAS")
			RecLock("SAS",.F.)     
			For nX := 1 TO FCount()
				FieldPut(nX,M->&(FieldName(nX)))
			Next		              
			SAS->AS_FILIAL	:= xFilial("SAS")
			SAS->AS_ORIG	:= MatOrigGrd()
			SAS->( MsUnLock() )
			
  			DbSelectArea("SAT")
			For nX:=1 To Len(aCols)
				SAT->( DbGoto(aRegSAT[nX]) )

				RecLock("SAT",.F.)                   
					SAT->AT_FILIAL	:= xFilial("SAT")
					SAT->AT_CODREF	:= M->AS_CODREF
					SAT->AT_CURVA	:= M->AS_CURVA    
					For nY := 1 to Len(aHeader)
						If ( aHeader[nY][10] <> "V" )
							SAT->(FieldPut(FieldPos(Trim(aHeader[nY][2])),aCols[nX][nY]))
						EndIf
					Next nY									
			   	SAT->( MsUnLock() )			
			Next nX		
		End Transaction		
	EndIf
EndIf	
Return           


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A552Exclui³Autor  ³ Erike Yuri da Silva   ³ Data ³04.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de exclusao da curva de caracteristicas               ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                    ³±±
±±³          ³ ExpN2 = Numero do registro                                  ³±±
±±³          ³ ExpN3 = Numero da opcao selecionada                         ³±±         
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo possibilitar a exclusao manual ³±±
±±³          ³de curva de caracteristicas para utilizacao de grade.        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A552Exclui(cAlias,nReg,nOpcx)
Local oDlg
Local nX,nY   
Local nOpcA			:= 0                 
Local aACho	  		:= A610CriaHeader("SAS", "AS_ORIG", .T.)
Local aAltGr		:= {"AT_QTDCOL"}                     
Local aRegSAT		:= {}               
Local oSize			:= FwDefSize():New()
PRIVATE oGetD,oEnchoice
PRIVATE cCodRefOld	:= ""
PRIVATE oGrade		:= MsMatGrade():New('oGrade',,'AT_QTDCOL')   
PRIVATE aHeader		:= {}
PRIVATE aCols		:= {}       

RegToMemory("SAS", .F.)
M->AS_PRDDESC	:= oGrade:GetDescProd(M->AS_CODREF)
__cProdRef		:= SAS->AS_CODREF		

If a552Monta(4,,aRegSAT) 
	
	oSize:AddObject('HEADER',100,25,.T.,.T.)
	oSize:AddObject('GRID'  ,100,75,.T.,.T.)
	
	oSize:lProp 		:= .T. 								             
	oSize:aMargins 	:= { 3, 3, 3, 3 } 					 
	
	oSize:Process() 	   			
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(cCadastro) From oSize:aWindSize[1],oSize:aWindSize[2] TO oSize:aWindSize[3],oSize:aWindSize[4] OF oMainWnd  PIXEL
	oEnchoice := MsmGet():New( "SAS", SAS->(RecNo()), nOpcX ,,,,aACho, {oSize:GetDimension('HEADER','LININI'),oSize:GetDimension('HEADER','COLINI'),oSize:GetDimension('HEADER','LINEND'),oSize:GetDimension('HEADER','COLEND')},,,,,, oDlg,,,,,)
	
	oGetD := MSGetDados():New(oSize:GetDimension('GRID','LININI'),oSize:GetDimension('GRID','COLINI'),oSize:GetDimension('GRID','LINEND'),oSize:GetDimension('GRID','COLEND'),nOpcx,,,,.F.)
	A552SumCurva()
	ACTIVATE MSDIALOG oDlg CENTERED ON INIT ( EnchoiceBar(oDlg,{||nOpcA:=1, oDlg:End()},{||oDlg:End()}))   

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza dados das caracteristicas selecionadas pelo operador³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If (nOpcA == 1)     
		
		Begin Transaction
			DbSelectArea("SAT") 		
			For nX:=1 To Len(aCols)  
				If Empty(aRegSAT)
					Exit
				EndIf   
				
				SAT->( DbGoto(aRegSAT[nX]) )
				RecLock("SAT",.F.)                   
    			SAT->( dbDelete() )
				SAT->( MsUnLock() )			
			Next nX		     
			   
			DbSelectArea("SAS")
			RecLock("SAS",.F.)
			SAS->( dbDelete() )			
			SAS->( MsUnLock() )
		End Transaction		
	EndIf
EndIf	
Return           


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A552Copia ³Autor  ³ Erike Yuri da Silva   ³ Data ³04.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de inclusao da curva de caracteristicas a partir de   ³±±
±±³          ³copia de uma curva ja existente                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                    ³±±
±±³          ³ ExpN2 = Numero do registro                                  ³±±
±±³          ³ ExpN3 = Numero da opcao selecionada                         ³±±         
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo possibilitar a inclusao por    ³±±
±±³          ³copia de uma curva de caracteristica.                        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A552Copia(cAlias,nReg,nOpcx)
PRIVATE lCopia_ := .T.
Return A552Inclui(cAlias,nReg,nOpcx,lCopia_)
                                                                     

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A552TudoOk³ Autor ³ Erike Yuri da Silva   ³ Data ³04.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de avaliacao da getdados ( TudoOk )                   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: .T. -> GetDados valida                                ³±±
±±³          ³       .F. -> Getdados invalida                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a validacao da curva de³±±
±±³          ³caracteristica para rotina de cadastro de curvas de caracte- ³±±
±±³          ³risticas.                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A552TudoOk()    
Local lRet := .T.   

If Empty(M->AS_CODREF) .Or. Empty(M->AS_CURVA)   
	Help(" ",1,"VAZIO")
	lRet := .F.
EndIf
If lRet .And. Empty(M->AS_QTDCURV)     
	//Não foi informada nenhuma quantidade na coluna de característica.      
	//SOLUCAO: Incluir quantidade em pelo menos uma coluna da curva de característica.     
	Help(" ",1,"A552QTDCUR")
	lRet := .F.
EndIf
Return (lRet)         



/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A552VCurva³ Autor ³Erike Yuri da Silva    ³ Data ³04.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de avaliacao do codigo da curva no cadastro de curva  ³±±
±±³          ³de caracteristicas                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±  
±±³Parametros³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Logico - indica se o codigo informado eh valido              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo nao permitir a duplicacao do   ³±±
±±³          ³do codigo da curva de caracteristicas para produtos interface³±±
±±³          ³grade iguais.                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A552VCurva()
Local aArea 	:= GetArea()
Local lRet		:= .T.

If Empty(M->AS_CODREF) .Or. Empty(M->AS_CURVA)
	Help(" ",1,"VAZIO")
	lRet := .F.
Else
	dbSelectArea("SAS")
	dbSetOrder(1)
	If MsSeek( xFilial("SAS")+M->AS_CODREF+M->AS_CURVA)
		//Curva de característica ( Prod. Referencia + Curva) já existe no cadastro.
		//SOLUCAO: Informar outro código de para o produto referência de grade e/ou curva.
		Help(" ",1,"A552JASAS")
		lRet := .F.
	EndIf
EndIf           
RestArea(aArea)
Return lRet
                        



/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A552VldPrR³ Autor ³Erike Yuri da Silva    ³ Data ³04.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do produto referencia de grade                 ³±±
±±³          ³ExpC2: Codigo da curva de caracteristicas                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Logico - indica se o codigo informado eh valido              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar se o codigo informado  ³±±
±±³          ³eh uma interface grade ou nao.                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A552VldPrRf()

Local nTam		:= Len(SAS->AS_CURVA)
Local aArea 	:= GetArea()
Local lRet		:= .T.

If Empty(M->AS_CODREF)
	Help(" ",1,"VAZIO")
	lRet := .F.         
ElseIf Type('cCodRefOld')=='U' .Or. !(AllTrim(cCodRefOld) == AllTrim(M->AS_CODREF)) 
    __cProdRef := M->AS_CODREF
    If MatGrdPrrf(@__cProdRef,.T.,.T.)
		M->AS_CODREF	:= PadR(M->AS_CODREF,TamSx3("AS_CODREF")[1])  
		M->AS_PRDDESC 	:= oGrade:GetDescProd(M->AS_CODREF)
		cCodRefOld		:= M->AS_CODREF 
		AtuACols()                         
		
		        
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Gera numero sequencial sugerido para Operador ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If INCLUI         
			SAS->(DbGoTop())	// Nao tirar
			SAS->(DbSetOrder(1))			
			SAS->(dbSeek(xFilial("SAS")+M->AS_CODREF+Replicate("Z",nTam),.t.))
			SAS->(dbSkip(-1))
			IF SAS->(Bof()) .Or. SAS->AS_FILIAL+SAS->AS_CODREF != xFilial("SAS")+M->AS_CODREF
			   M->AS_CURVA := StrZero(1,nTam,0) 
			Else
			   M->AS_CURVA := Soma1(SAS->AS_CURVA)
			Endif
		EndIf
	Else     
		//O código informado não é de um produto com interface de grade ou não esta completo   
		Help(" ",1,"NAOINTEGRD")
		lRet := .F.  
	EndIf
EndIf     

If !lRet
	//Se ocorrer qualquer problema limpa variavel de controle
	__cProdRef	:= NIL
EndIf
RestArea(aArea)
Return lRet                                               



/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A552SumCur³ Autor ³Erike Yuri da Silva    ³ Data ³05.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Logico - indica se o codigo informado eh valido              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Soma as colunas de quantidade do acols atualizando objeto de ³±±
±±³          ³tela com valor do resultado da soma.                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A552SumCurva()   
Local nI		:= 0 
Local nQtdTot	:= 0  
Local nPosQtd 	:= Len(aHeader)  
Local nPosQtdCur:= 0
Local cCpo 		:= ReadVar()  

aEval(aCols,{|x| nI++, If(nI == n .And. AllTrim(cCpo) == "M->AT_QTDCOL",nQtdTot += &cCpo, nQtdTot += aCols[nI,nPosQtd])})     
If QtdComp(M->AS_QTDCURV)<> QtdComp(nQtdTot)                                                  
	nPosQtdCur:= AsCan(oEnchoice:aENTRYCTRLS,{|x| UPPER(TRIM(x:cReadVar))=="M->AS_QTDCURV"}) 
	M->AS_QTDCURV := nQtdTot  
	oEnchoice:AENTRYCTRLS[nPosQtdCur]:BUFFER := Transform(M->AS_QTDCURV,oEnchoice:AENTRYCTRLS[nPosQtdCur]:PICTURE)
EndIf
Return .T.




/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AtuACols  ³ Autor ³ Erike Yuri da Silva   ³ Data ³05.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao da GetDados conforme codigo de referen-³±±
±±³          ³cia e codigo da curva.                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: .T. -> P/ Produtos referencia, .F. -> Caso contrario  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AtuACols()                   
Local nX,nLenGrd           
Local cNomeCol
Local nUsado	:= Len(aHeader)
Local lRet 		:= __cProdRef <> NIL 

If lRet   
	oGrade:aHeadGrade := {}
	oGrade:aColsGrade := {}
	oGrade:MontaGrade(1,__cProdRef,.T.,,.T.,.T.)       
	
	//Verifico se nao esta vazio para nao desfazer o aCols    
	If (nLenGrd := Len(oGrade:aHeadGrade[1])) > 1  
		aCols 	:= {}
		cNomeCol:= RetNameCol()
	EndIf         
	
	For nX:=2 To nLenGrd
   		aadd(aCols,Array(nUsado+1))  
   		aCols[Len(aCols)][nUsado+1]:= .F.
   		aCols[Len(aCols)][1]		:= oGrade:GetNameColuna(nX) 
   		aCols[Len(aCols)][2]		:= oGrade:GetDescrGrd(cNomeCol,oGrade:GetNameColuna(nX),.F.)
   		aCols[Len(aCols)][3]		:= CriaVar(aHeader[3,2],.T.)
	Next nX  
	oGetD:oBrowse:Refresh()
EndIf
Return ( lRet )



/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A552Monta ³ Autor ³ Erike Yuri da Silva   ³ Data ³04/08/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de montagem do aHeader e do aCols do cadastro de curva³±±
±±³          ³de caracteristica                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: [1] Inclusao                                          ³±±
±±³          ³       [2] Visualizacao                                      ³±±
±±³          ³       [3] Alteracao                                         ³±±
±±³          ³       [4] Exclusao                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1: Logico                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar as variaveis de uti- ³±±
±±³          ³lizada na modelo 2.                                          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA552                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function a552Monta(nOpc,lCopia,aRegistros)

Local aArea    := GetArea()
Local lRetorno := .T.
Local nUsado   := 0
Local nX       := 0 
Local cMCodRef := ""  
Local cMCurva  := ""
Local aCpoView := {"AT_COLUNA","AT_DESCR","AT_QTDCOL"}

DEFAULT lCopia		:= .F.                      
DEFAULT aRegistros	:= {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Faz a montagem do aHeader a partir dos campos SX3.           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aHeader := {}
dbSelectArea("SX3")
dbSetOrder(2)  
For nX := 1 To Len(aCpoView)
	If MsSeek(aCpoView[nX]) .And. X3Uso(SX3->X3_USADO) .And. cNivel >= SX3->X3_NIVEL
		nUsado++           				
		AADD(aHeader,{	TRIM(X3Titulo())	,;
						SX3->X3_CAMPO		,;
						SX3->X3_PICTURE		,;
						SX3->X3_TAMANHO		,;
						SX3->X3_DECIMAL		,;
						SX3->X3_VALID		,;
						SX3->X3_USADO		,;
						SX3->X3_TIPO		,;
						SX3->X3_ARQUIVO		,;
						SX3->X3_CONTEXT } )
	EndIf
Next nX

cMCodRef 	:= If(lCopia,SAS->AS_CODREF,M->AS_CODREF)
cMCurva		:= If(lCopia,SAS->AS_CURVA,M->AS_CURVA)

dbSelectArea("SAT")
dbSetOrder(1)

If ( nOpc <> 1 .Or. lCopia)  
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Efetua Sets de Ambiente                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	MatOrigGrd(SAS->AS_ORIG)   

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza titulo do Header                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	If (nX := AsCan(aHeader,{|x| x[2]=="AT_COLUNA"}))>0
		If SAS->AS_ORIG == "SB4"                   
			DbSelectArea("SB4")
			DbSetOrder(1)
			If MsSeek(xFilial("SB4")+SAS->AS_CODREF)
				aHeader[nX,2] := oGrade:GetTitTabG(SB4->B4_COLUNA)
			EndIf
		ElseIf SAS->AS_ORIG == "SBQ"
			aHeader[nX,2] := oGrade:GetTitTabG(,.T.)			
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Faz a montagem do aCols baseado no aHeader.                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MsSeek(xFilial("SAT")+cMCodRef+cMCurva)
	While SAT->( !Eof() .And. AT_FILIAL+AT_CODREF+AT_CURVA == xFilial("SAT")+cMCodRef+cMCurva) 
		If nOpc<>2 .And. !SoftLock("SAT")
			lRetorno := .F.
			Exit		
		EndIf
		
		If ( nOpc <> 2 )
			aadd(aCols,Array(nUsado+1))  
			aadd(aRegistros,SAT->(RecNo()))
		Else
			aadd(aCols,Array(nUsado))
		EndIf                                
		For nX := 1 to Len(aHeader) 
			If ( aHeader[nX][10] == "V" ) 
				aCols[Len(aCols)][nX] := CriaVar(aHeader[nX][2],.T.)
			Else
				aCols[Len(aCols)][nX] := FieldGet(FieldPos(aHeader[nX][2]))
			EndIf	
			If ( nOpc <> 2 )
				aCols[Len(aCols)][nUsado+1] := .F.
			EndIf
		Next nX

		dbSelectArea("SAT")
		dbSkip()
	EndDo
Else                   
	aCols := {}
	aadd(aCols,Array(nUsado+1))
	aCols[1][nUsado+1] := .F.
	For nX := 1 To nUsado
		aCols[1][nX] := CriaVar(aHeader[nX][2],.F.)
	Next nX
EndIf
RestArea(aArea)
Return(lRetorno)
                    

 

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³RetNameCol³ Autor ³Erike Yuri da Silva    ³ Data ³04.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo base do produto (informado somente para confi- ³±±
±±³          ³       gurador de produtos.                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Caracter - Codigo da Coluna.                                 ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo retornar o codigo da coluna da ³±±
±±³          ³interface de grade.                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function RetNameCol(cBase)
Local cNameCol:=""       
Local aSavAre
DO CASE
	CASE MatOrigGrd() == "SB4"
   		dbSelectArea("SB4")
		dbSetOrder(1)
		MsSeek(xFilial("SB4")+__cProdRef) //Nao necessita chegar a existencia pois acima foi checado se o produto eh referencia ou nao
		cNameCol := SB4->B4_COLUNA
  	CASE MatOrigGrd() == "SBQ"     
		aSavAre := SaveArea1({"SBQ"})
		cBase	:= A093VldBase(__cProdRef)
	    
		DbSelectArea("SBQ")
		DbSetOrder(3)
		If MsSeek(xFilial("SBQ")+cBase+"2")
			cNameCol := SBQ->BQ_ID
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Define o tamanho correto para o codigo de referencia³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ				
		RestArea1(aSavAre)									
	ENDCASE	
Return cNameCol                                                                    




/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetDescrGr³ Autor ³Erike Yuri da Silva    ³ Data ³04.08.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Caracter - Descricao da caracteristica de interface grade    ³±±
±±³          ³           coluna                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo retornar a descricao da inter- ³±±
±±³          ³face de grade coluna                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A552DescGrd(cColuna)
Local aArea := GetArea()
Local cRet  := ""
Local cBase := ""
Local cNomeCol := ""

If	!INCLUI .Or. (Type("lCopia_") == "L" .And. lCopia_)
	cNomeCol := RetNameCol(@cBase)
	cColuna  := If(ValType(cColuna)=="C",cColuna,SAT->AT_COLUNA)
	DO CASE
		CASE MatOrigGrd() == "SB4"
			DbSelectArea("SBV")
			DbSetOrder(1)
			If	DbSeek(xFilial("SBV")+cNomeCol+cColuna)
				cRet := AllTrim(SBV->BV_DESCRI)
			EndIf
		CASE MatOrigGrd() == "SBQ"
			DbSelectArea("SBS")
			DbSelectArea(1)
			If	SBS->( DbSeek(xFilial("SBS")+cBase+cNomeCol+cColuna) )
				cRet := AllTrim(SBS->BS_DESCR)
			EndIf
	ENDCASE
	RestArea(aArea)
EndIf
Return cRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³Rodrigo de A Sartorio  ³ Data ³15/04/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados         ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()     
Private aRotina		:= {{STR0002	,"AxPesqui"		,0,1,0,.f.} ,; //"Pesquisar"
						{STR0003	,"A552Visual"	,0,2,0,nil} ,; //"Visualizar"
						{STR0004	,"A552Inclui"	,0,3,0,nil} ,; //"Incluir"
						{STR0005	,"A552Altera"	,0,4,0,nil} ,; //"Alterar"
						{STR0006	,"A552Exclui"	,0,5,0,nil} ,; //"Excluir"
						{STR0007	,"A552Copia"	,0,3,0,nil} } //"Copiar"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada utilizado para inserir novas opcoes no array aRotina  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MTA552MNU")
	ExecBlock("MTA552MNU",.F.,.F.)
EndIf           

Return(aRotina) 
