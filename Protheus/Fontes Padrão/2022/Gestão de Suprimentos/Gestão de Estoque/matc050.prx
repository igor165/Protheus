#INCLUDE "MATC050.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "DBTREE.CH"
#INCLUDE "FWMVCDef.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATC050  ³ Autor ³ Rodrigo de A. Sartorio³ Data ³ 22/12/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Consulta Geral ao Produto                                  ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MATC050()					                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum						                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum						                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Descri‡…o ³ PLANO DE MELHORIA CONTINUA        ³Programa   MATC050.PRX  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÁÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ITEM PMC  ³ Responsavel              ³ Data         |BOPS              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³      01  ³ Marcos V. Ferreira       ³ 04/12/2005   |                  ³±±
±±³      02  ³ Erike Yuri da Silva      ³ 06/01/2006   |00000088778       ³±±
±±³      03  ³ Flavio Luiz Vicco        ³ 25/04/2006   |00000096851       ³±±
±±³      04  ³ Erike Yuri da Silva      ³ 11/01/2006   |00000090431       ³±±
±±³      05  ³ Erike Yuri da Silva      ³ 11/01/2006   |00000090431       ³±±
±±³      06  ³ Ricardo Berti            ³ 23/03/2006   |00000093575       ³±±
±±³      07  ³ Marcos V. Ferreira       ³ 04/12/2005   |                  ³±±
±±³      08  ³ Erike Yuri da Silva      ³ 08/02/2006   |00000092974       ³±±
±±³      09  ³ Erike Yuri da Silva      ³ 08/02/2006   |00000092974       ³±±
±±³      10  ³ Erike Yuri da Silva      ³ 06/12/2005   |00000088778       ³±±
±±³      10* ³ Ricardo Berti            ³ 23/03/2006   |00000093575       ³±± * Doc.funcoes
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION MATC050()
Local lRet		:= .T.
Local lRetPE	:= M050ExPerg()

PRIVATE aRotina := MenuDef()
PRIVATE cCadastro:= STR0003 //"Consulta Geral ao Produto"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ativa tecla F12 para acessar os parametros                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If !( lRetPE )
	pergunte( "MTC050", .F. )
Else
	lRet := pergunte( "MTC050", .T. )
EndIf

If ( lRet )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica as perguntas selecionadas                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis utilizadas para parametros                         ³
	//³ mv_par01        // Data inicial                              ³
	//³ mv_par02        // Data final                                ³
	//³ mv_par03        // Apresenta Movimentos                      ³
	//³ mv_par04        // Lista as Amarracoes ?                     ³
	//³ mv_par05        // Cons Saldo Em/De 3o.?                     ³
	//³ mv_par06        // De  Armazem         ?                     ³
	//³ mv_par07        // Ate Armazem         ?                     ³
	//³ mv_par08        //                                           ³
	//³ mv_par09        // Considera reservas  ?                     ³
	//³ mv_par10        // Exibir OP's encerradas ?                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SetKey( VK_F12, { || pergunte("MTC050",.T.) } )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Endereca a funcao de BROWSE                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	mBrowse( 6, 1,22,75,"SB1")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Desativa tecla F12                                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Set Key VK_F12	To
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Recupera a Ordem Original do arquivo principal               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SB1")
dbSetOrder(1)
Return Nil


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MC050Con  ³ Autor ³ Rodrigo de A. Sartorio³ Data ³ 07/01/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Monta a dialog da consulta                                 ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MC050Con()					                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum						                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum						                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC050                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MC050Con()
Local lRet 			:= .T.
LOCAL oTree
LOCAL oDlg
LOCAL oFont
LOCAL oPanel
LOCAL nSaldoIni := 0
LOCAL aSize     := MsAdvSize()
LOCAL nTop      := 23
LOCAL nLeft     := 5
LOCAL nBottom   := aSize[6]
LOCAL nRight    := aSize[5]
LOCAL nOldEnch	:= 1
LOCAL ni     	:= 0
LOCAL bChange 	:= {|| Nil }
Local bKeyF12	:= SetKey( VK_F12 )
LOCAL lFoundSB2 := .F.
LOCAL lFoundSB5 := .F.
Local lMTC050FI	:= ExistBlock("MTC050FI")
LOCAL lRetPE    := .T.
Local aAcho		:= {}
LOCAL aEnch[20]
LOCAL aSavPerg	:=MTC050Per(.T.) // Salva valor das perguntas existentes nesse momento
LOCAL aMrp		:={}
LOCAL aTotais	:={}
LOCAL aSVAlias	:={}
LOCAL aButtons	:={ {'PGNEXT',{|| If(Val(SubStr(oTree:GetCargo(),6,12))=0,MTC050Tree(@oTree,aTotais,SubStr(oTree:GetCargo(),3,3),.F.,aMrp,@nSaldoIni),),Eval(oTree:bChange) },STR0004,STR0076},; //"Expande consulta posicionada"
					{'AUTOM',		{|| MTC050Tree(@oTree,aTotais,"",.T.,aMrp,@nSaldoIni),Eval(oTree:bChange) },STR0005,STR0077},; //"Expande todas consultas"
					{'GRAF3D',		{|| MTC050Kdx()},STR0006,STR0078},; //"Visualiza Kardex por dia"
					{'RELATORIO',	{|| A050Imp(oTree:cArqTree,aTotais)},STR0007,STR0079},; //"Imprime Consulta"
					{"S4WB005N",	{|| MaComView(SB1->B1_COD) }, STR0075, STR0080 }} // "Consulta Historico do Produto"
LOCAL aUsrBut  := {}
Local oStruSB1

PRIVATE aParc050:=Array(40)

If Type("cCadastro" )=='U'
	PRIVATE cCadastro:= STR0003 //"Consulta Geral ao Produto"
EndIf

If ExistBlock( "MC050BUT" )
	If Valtype( aUsrBut := Execblock( "MC050BUT", .F., .F. ) ) == "A"
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
	EndIf
EndIf

pergunte("MTC050",.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                         ³
//³ mv_par01        // Data inicial                              ³
//³ mv_par02        // Data final                                ³
//³ mv_par03        // Apresenta Movimentos                      ³
//³ mv_par04        // Lista as Amarracoes ?                     ³
//³ mv_par05        // Cons Saldo Em/De 3o.?                     ³
//³ mv_par06        // De  Armazem         ?                     ³
//³ mv_par07        // Ate Armazem         ?                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de entrada para Executar o Pergunte Automatico        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

lRetPE := M050ExPerg()

If Upper(FUNNAME()) == "MATA010"
		Set Key VK_F12 To
		SetKey( VK_F12, { || pergunte("MTC050",.T.) } )
EndIf

If ( lRet )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Carrega as variaveis de memoria do SB1               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		AADD(aSVAlias,"SB1")
		RegToMemory("SB1",.F.,.F.)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Posiciona para carregar variaveis de memoria do SB2  ³
		//³ Executa esse processo para agilizar na visualizacao  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SB2")
		dbSetOrder(1)
		lFoundSB2:=dbSeek(xFilial("SB2")+SB1->B1_COD)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Posiciona para carregar variaveis de memoria do SB5  ³
		//³ Executa esse processo para agilizar na visualizacao  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SB5")
		dbSetOrder(1)
		lFoundSB5:=dbSeek(xFilial("SB5")+SB1->B1_COD)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Salva as perguntas no array aParc050                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For ni := 1 to Len(aParc050)
			aParc050[ni] := &("mv_par"+StrZero(ni,2))
		Next ni

		DEFINE FONT oFont NAME "Arial" SIZE 0, -10
		DEFINE MSDIALOG oDlg TITLE cCadastro OF oMainWnd PIXEL FROM nTop,nLeft TO nBottom+15,nRight
		oFolder := TFolder():New(12,0,{STR0008},{},oDlg,,,, .T., .F.,aSize[3],nBottom-nTop-12,)  //"Dados"
		oFolder:aDialogs[1]:oFont := oDlg:oFont
		oPanel := TPanel():New(2,160,'',oFolder:aDialogs[1], oDlg:oFont, .T., .T.,, ,(nRight-nLeft)/2-160,((nBottom-nTop)/2)-25,.T.,.T. )
		lOneColumn := If((nRight-nLeft)/2-178>312,.F.,.T.)
		If lFoundSB2
			AADD(aSVAlias,"SB2")
			RegToMemory("SB2",.F.)
			aEnch[2]:=MsMGet():New("SB2",SB2->(RecNo()),2,,,,,{0,0,((nBottom-nTop)/2)-25,(nRight-nLeft)/2-160},,3,,,,oPanel,,.T.,lOneColumn)
			aEnch[2]:Hide()
		EndIf
		If lFoundSB5
			AADD(aSVAlias,"SB5")
			RegToMemory("SB5",.F.)
			aEnch[4]:=MsMGet():New("SB5",SB5->(RecNo()),2,,,,,{0,0,((nBottom-nTop)/2)-25,(nRight-nLeft)/2-160},,3,,,,oPanel,,.T.,lOneColumn)
			aEnch[4]:Hide()
		EndIf
		If lMTC050FI
			oStruSB1 := FWFormStruct(1, 'SB1')
			For ni := 1 to len(oStruSB1:aFields)
				Aadd(aAcho,Alltrim(oStruSB1:aFields[ni,MODEL_FIELD_IDFIELD]))
			Next ni
			oStruSB1 := NIL
			aRetPE:= ExecBlock("MTC050FI",.F.,.F.,{"SB1",aAcho})
			If ValType (aRetPE) == "A" .AND. Len(aRetPE) > 0
				aAcho:= aClone(aRetPE)
			EndIf
			aEnch[1]:= MsMGet():New("SB1",SB1->(RecNo()),2,,,,aAcho,{0,0,((nBottom-nTop)/2)-25,(nRight-nLeft)/2-160},,3,,,,oPanel,,.F.,lOneColumn)
		Else
			aEnch[1]:= MsMGet():New("SB1",SB1->(RecNo()),2,,,,,{0,0,((nBottom-nTop)/2)-25,(nRight-nLeft)/2-160},,3,,,,oPanel,,.F.,lOneColumn)
		EndIf
		oTree := dbTree():New(2, 2,((nBottom-nTop)/2)-24,159,oFolder:aDialogs[1],,,.T.)
		oTree:bChange := {|| IIF(Val(SubStr(oTree:GetCargo(),6,12))<>0,Eval({||(SubStr(oTree:GetCargo(),3,3))->(MsGoto(Val(SubStr(oTree:GetCargo(),6,12)))),RegToMemory(SubStr(oTree:GetCargo(),3,3),.F.,aScan(aSVAlias,SubStr(oTree:GetCargo(),3,3))==0)}),Nil),MTC050DlgV(@oTree,aSValias,@aEnch,{0,0,((nBottom-nTop)/2)-24,(nRight-nLeft)/2-160},@nOldEnch,@oPanel,aTotais,aMrp,nSaldoIni),Eval(bChange)}
		oTree:SetFont(oFont)
		oTree:lShowHint:= .F.
		MTC050Tree(@oTree,aTotais,"",.F.,aMrp,@nSaldoIni)
		Set Key VK_F12 To
		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||oDlg:End()},{||oDlg:End()},,aButtons)
		Release Object oTree

		MTC050Per(.F.,aSavPerg) // Restaura valor anterior das perguntas
		SetKey( VK_F12,bKeyF12)
		If Upper(FUNNAME()) == "MATA010"
			Set Key VK_F12 To
			Set Key VK_F12 TO MT010Perg()
		EndIf
EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MTC050DlgV³ Autor ³Rodrigo de A. Sartorio ³ Data ³07-01-2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao que mostra as informacoes detalhadas da consulta     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Mtc050DlgV(ExpO1,ExpA1,ExpA2,ExpA3,ExpN1,ExpO2,ExpA4,   	  ³±±
±±³          ³            ,ExpA5,ExpN2)                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 = Obj da Tree					                      ³±±
±±³          ³ ExpA1 = Array dos Alias					                  ³±±
±±³          ³ ExpA2 = Array aEnch 						                  ³±±
±±³          ³ ExpA3 = Array aPos						                  ³±±
±±³          ³ ExpN1 = Numero do aEnch anterior							  ³±±
±±³          ³ ExpO2 = Obj do Painel				                      ³±±
±±³          ³ ExpA4 = Array dos totais 			                      ³±±
±±³          ³ ExpA5 = Array das movimentacoes do MRP                     ³±±
±±³          ³ ExpN2 = Saldo inicial(SB2)    							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum						                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATC050                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Mtc050DlgV(oTree,aSVAlias,aEnch,aPos,nOldEnch,oPanel,aTotais,aMrp,nSaldoIni)


Static nC1Quant
Static nC7Quant
Static nD4Quant
Static nC2Quant
Static nC4Quant
Static nC6Quant
Static nHcQuant
Static nCPQuant
Static nCqQuant
Static nAfjQatu
Static nL2Quant
Static nCKqtdven
Static nNNTqtd
Static nB2Qatu
Local k			:= 0
Local aDados	:= {}
Local cAlias	:= SubStr(oTree:GetCargo(),3,3)
Local nRecView	:= Val(SubStr(oTree:GetCargo(),6,12))
Local nPosTotais:= Ascan(aTotais,{|x| x[1]== SubStr(oTree:GetCargo(),3,3)})
Local lOneColumn:= If(aPos[4]-aPos[2]>312,.F.,.T.)
Local lMTC050CP := ExistBlock("MTC050CP")
Local lMTC050FI := ExistBlock("MTC050FI")
Local aTamB2Atu := TamSx3("B2_QATU")
Local oScroll
Local aAcho		:= {}
Local aCampos 	:= {	"C1_NUM","C1_ITEM","C1_PRODUTO","C1_UM","C1_QUANT","C1_SEGUM","C1_QTSEGUM","C1_DATPRF",;
						"C1_LOCAL","C1_OBS","C1_OP","C1_CC","C1_CONTA","C1_ITEMCTA","C1_DESCRI","C1_FORNECE","C1_LOJA","C1_CLASS",;
						"C1_CLVL","C1_SEQMRP","C1_EMISSAO" }
Local oStruAlias
Local nCnt		:= 0
Local aCposSC1	:= {}
Local nPos		:= 1

oTree:SetDisable ( )
oTree:Refresh()
oPanel:Hide()
oPanel:FreeChildren()

nC1Quant := IIF(nC1Quant == Nil,TamSX3("C1_QUANT")[1]+2,nC1Quant)
nC7Quant := IIF(nC7Quant == Nil,TamSX3("C7_QUANT")[1]+2,nC7Quant)
nD4Quant := IIF(nD4Quant == Nil,TamSX3("D4_QUANT")[1]+2,nD4Quant)
nC2Quant := IIF(nC2Quant == Nil,TamSX3("C2_QUANT")[1]+2,nC2Quant)
nC4Quant := IIF(nC4Quant == Nil,TamSX3("C4_QUANT")[1]+2,nC4Quant)
nC6Quant := IIF(nC6Quant == Nil,TamSX3("C6_QTDVEN")[1]+2,nC6Quant)
nHcQuant := IIF(nHcQuant == Nil,TamSX3("HC_QUANT")[1]+2,nHcQuant)
nCPQuant := IIF(nCPQuant == Nil,TamSX3("CP_QUANT")[1]+2,nCPQuant)
nCqQuant := IIF(nCqQuant == Nil,TamSX3("CQ_QUANT")[1]+2,nCqQuant)
nAfjQatu := IIF(nAfjQatu == Nil,TamSX3("AFJ_QATU")[1]+2,nAfjQatu)
nL2Quant := IIF(nL2Quant == Nil,TamSX3("L2_QUANT")[1]+2,nL2Quant)
nCKqtdven:= IIF(nCKqtdven== Nil,TamSX3("CK_QTDVEN")[1]+2,nCKqtdven)
nNNTqtd  := IIF(nNNTqtd  == Nil,TamSX3("NNT_QUANT")[1]+2,nNNTqtd)
nB2Qatu  := IIF(nB2Qatu  == Nil,TamSX3("B2_QATU")[1]+2,nB2Qatu)

If nRecView <> 0
	dbSelectArea(cAlias)
	MsGoto(nRecView)
	RegtoMemory(cAlias,.F.)
	oPanel:Hide()

 	If cAlias == "SC1"
		dbSelectArea("SX3")
		dbSetOrder(1)
		dbSeek("SC1")

		aCposSC1 := ESTFwSX3Util():xGetAllFields(cAlias) //array com todos os campos do sx3

		//Adiciona no aAcho os campos do aCampos + campos do usuário que existirem no SX3	
		For nPos := 1 to len(aCposSC1)
			If ESTFwSX3Util():xGetOwner( aCposSC1[nPos] ) <> "U"
				If Ascan(aCampos,aCposSC1[nPos]) > 0
					Aadd(aAcho,aCposSC1[nPos])
				EndIf
			Else
				Aadd(aAcho,aCposSC1[nPos])
			EndIf
		Next nPos	

		If lMTC050CP
		     aRetPE:= ExecBlock("MTC050CP",.F.,.F.,{cAlias,aAcho})
		     If ValType (aRetPE) == "A" .AND. Len(aRetPE) > 0
				aAcho:= aClone(aRetPE)
		     EndIf
		EndIf
		MsMGet():New(cAlias,(cAlias)->(RecNo()),2,,,,aAcho,aPos,,3,,,,oPanel,,.T.,lOneColumn)
    Else
		If lMTC050CP
		     aRetPE:= ExecBlock("MTC050CP",.F.,.F.,{cAlias,aAcho})
		     If ValType (aRetPE) == "A" .AND. Len(aRetPE) > 0
				aAcho:= aClone(aRetPE)
		     EndIf
		EndIf
		If lMTC050FI
			oStruAlias := FWFormStruct(1, cAlias)
			For nCnt := 1 to len(oStruAlias:aFields)
				Aadd(aAcho,Alltrim(oStruAlias:aFields[nCnt,MODEL_FIELD_IDFIELD]))
			Next nCnt
			oStruSB1 := NIL

			aRetPE:= ExecBlock("MTC050FI",.F.,.F.,{cAlias,aAcho})
		    If ValType (aRetPE) == "A" .AND. Len(aRetPE) > 0
		    	aAcho:= aClone(aRetPE)
		    EndIf
		    MsMGet():New(cAlias,(cAlias)->(RecNo()),2,,,,aAcho,aPos,,3,,,,oPanel,,.T.,lOneColumn)
		Else
			MsMGet():New(cAlias,(cAlias)->(RecNo()),2,,,,,aPos,,3,,,,oPanel,,.T.,lOneColumn)
		EndIf
    EndIf
Else
	If nPosTotais > 0
		Do Case
		Case cAlias == "SB2"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3]						 ,PesqPict("SB2","B2_QATU"   ,TamSx3("B2_QATU")[1]))}) //"Quantidade"
			AADD(aDados,{STR0010,Transform(aTotais[nPosTotais,4]						 ,PesqPict("SB2","B2_QTSEGUM",TamSx3("B2_QATU")[1]))}) //"Quantidade 2a UM"
			AADD(aDados,{STR0071,Transform((aTotais[nPosTotais,3]-aTotais[nPosTotais,10]),PesqPict("SB2","B2_QATU"   ,TamSx3("B2_QATU")[1]))})
			AADD(aDados,{STR0072,Transform(aTotais[nPosTotais,10]						 ,PesqPict("SB2","B2_QATU"   ,TamSx3("B2_QATU")[1]))})
			AADD(aDados,{STR0074,Transform(aTotais[nPosTotais,11]						 ,PesqPict("SB2","B2_QATU"	 ,TamSx3("B2_QATU")[1]))})
			AADD(aDados,{STR0011,Transform(aTotais[nPosTotais,5]						 ,PesqPict("SB2","B2_VATU1"  ,TamSx3("B2_QATU")[1]))}) //"Valor Moeda 1"
			AADD(aDados,{STR0012,Transform(aTotais[nPosTotais,6]						 ,PesqPict("SB2","B2_VATU2"  ,TamSx3("B2_QATU")[1]))}) //"Valor Moeda 2"
			AADD(aDados,{STR0013,Transform(aTotais[nPosTotais,7]						 ,PesqPict("SB2","B2_VATU3"  ,TamSx3("B2_QATU")[1]))}) //"Valor Moeda 3"
			AADD(aDados,{STR0014,Transform(aTotais[nPosTotais,8]						 ,PesqPict("SB2","B2_VATU4"  ,TamSx3("B2_QATU")[1]))}) //"Valor Moeda 4"
			AADD(aDados,{STR0015,Transform(aTotais[nPosTotais,9]						 ,PesqPict("SB2","B2_VATU5"  ,TamSx3("B2_QATU")[1]))}) //"Valor Moeda 5"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SA5"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0016,Str(aTotais[nPosTotais,3],8)+STR0017})	 //"O produto possui "###" amarracao(oes)"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SA7"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0016,Str(aTotais[nPosTotais,3],8)+STR0017})	 //"O produto possui "###" amarracao(oes)"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SAD"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0018,Str(aTotais[nPosTotais,3],8)+STR0017})	 //"O grupo possui "###" amarracao(oes)"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SC1"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("SC1","C1_QUANT",nC1Quant))}) //"Quantidade"
			AADD(aDados,{STR0019,Transform(aTotais[nPosTotais,4],PesqPict("SC1","C1_QUANT",nC1Quant))}) //"Quantidade ja entregue"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SC7"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("SC7","C7_QUANT",nC7Quant))}) //"Quantidade"
			AADD(aDados,{STR0019,Transform(aTotais[nPosTotais,4],PesqPict("SC7","C7_QUANT",nC7Quant))}) //"Quantidade ja entregue"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SD4"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("SD4","D4_QUANT",nD4Quant))}) //"Quantidade"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SC2"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("SC2","C2_QUANT",nC2Quant))}) //"Quantidade"
			AADD(aDados,{STR0019,Transform(aTotais[nPosTotais,4],PesqPict("SC2","C2_QUANT",nC2Quant))}) //"Quantidade ja entregue"
			AADD(aDados,{STR0020,Transform(aTotais[nPosTotais,5],PesqPict("SC2","C2_QUANT",nC2Quant))}) //"Quantidade perdida"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SC4"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("SC4","C4_QUANT",nC4Quant))}) //"Quantidade"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SC6"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("SC6","C6_QTDVEN",nC6Quant))}) //"Quantidade"
			AADD(aDados,{STR0019,Transform(aTotais[nPosTotais,4],PesqPict("SC6","C6_QTDVEN",nC6Quant))}) //"Quantidade ja entregue"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SHC"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("SHC","HC_QUANT",nHcQuant))}) //"Quantidade"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SCP"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("SCP","CP_QUANT",nCPQuant))}) //"Quantidade"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SCQ"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("SCQ","CQ_QUANT",nCqQuant))}) //"Quantidade"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "AFJ"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("AFJ","AFJ_QATU",nAfjQatu))}) //"Quantidade"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SL2"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("SL2","L2_QUANT",nL2Quant))}) //"Quantidade"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "SCK"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("SCK","CK_QTDVEN",nCKqtdven))}) //"Quantidade"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "MRP"
			AADD(aDados,{"MRP","","","",""})
			AADD(aDados,{"","","","",""})
			AADD(aDados,{PADR(STR0066,10),PADL(STR0067,aTamB2Atu[1]+aTamB2Atu[2]),PADL(STR0068,aTamB2Atu[1]+aTamB2Atu[2]),PADL(STR0069,aTamB2Atu[1]+aTamB2Atu[2]),PADL(STR0070,aTamB2Atu[1]+aTamB2Atu[2])}) //"Data"###"Saldo Inicial"###"Qtd Entrada"###"Qtd Saida"###"Saldo Final"
			AADD(aDados,{"","","","",""})
			// Montar a linha com saldo inicial
			aMRP := aSort( aMRP,,, { |x,y| x[1] < y[1] } )
			For k:=1 to Len(aMRP)
				AADD(aDados,{DtoC(aMRP[k][1]),	PADL(Transform(nSaldoIni ,PesqPict("SB2","B2_QATU",TamSX3("B2_QATU")[1]+2)),aTamB2Atu[1]+aTamB2Atu[2]),;
					PADL(Transform(aMRP[k][2],PesqPict("SB2","B2_QATU",TamSX3("B2_QATU")[1]+2)),aTamB2Atu[1]+aTamB2Atu[2]),;
					PADL(Transform(aMRP[k][3],PesqPict("SB2","B2_QATU",TamSX3("B2_QATU")[1]+2)),aTamB2Atu[1]+aTamB2Atu[2]),;
					PADL(Transform((nSaldoIni+aMRP[k][2])-aMRP[k][3],PesqPict("SB2","B2_QATU",TamSX3("B2_QATU")[1]+2)),aTamB2Atu[1]+aTamB2Atu[2])})
				nSaldoIni := (nSaldoIni+aMRP[k][2])-aMRP[k][3]
			Next k
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		Case cAlias == "NNT"
			AADD(aDados,{aTotais[nPosTotais,2],""})
			AADD(aDados,{"",""})
			AADD(aDados,{STR0009,Transform(aTotais[nPosTotais,3],PesqPict("NNT","NNT_QUANT",nNNTqtd))}) //"Quantidade"
			C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
		EndCase
		aEnch[20]:=oScroll
		aEnch[20]:Show()
		nOldEnch:=20
	Else
		AADD(aDados,{STR0021}) //"Nao existem totais para essa consulta."
		AADD(aDados,{""})
		AADD(aDados,{STR0022}) //"Pressione o botao na barra de ferramentas para expandir a consulta."
		C040MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_RED}})
		aEnch[20]:=oScroll
		aEnch[20]:Show()
		nOldEnch:=20
	EndIf
EndIf
// Mostra Painel
oPanel:Show()
oTree:SetEnable ( )
oTree:Refresh()
oTree:SetFocus()
Return Nil


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MTC050Tree³ Autor ³Rodrigo de A Sartorio  ³ Data ³ 12-12-2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao que monta o Tree da consulta de produto                ³±±
±±³          ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³MTC050Tree(ExpO1,ExpA1,ExpC1,ExpL1,ExpA2,ExpN1)           	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 = Obj da Tree					                        ³±±
±±³          ³ ExpA1 = Array dos totais 			                        ³±±
±±³          ³ ExpC1 = Alias					                 			³±±
±±³          ³ ExpL1 = indica se todos				                    	³±±
±±³          ³ ExpA2 = Array das movimentacoes do MRP                     	³±±
±±³          ³ ExpN1 = Saldo inicial(SB2)    							  	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum						                              	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATC050                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MTC050Tree(oTree,aTotais,cAlias,lTodos,aMrp,nSaldoIni)
Local aArea		:= GetArea(),aAreaBack:={}
Local cAliasTop	:=""
Local cOldCargo	:=oTree:GetCargo()
Local lFirst	:= .T.
Local lPyme 	:= If( Type( "__lPyme" ) <> "U", __lPyme, .F. )
Local lTPSldSB2 := (GetMV('MV_TPSALDO')=="S")
Local lTPSldQ	:= (GetMV('MV_TPSALDO')=="Q")
Local cWhile	:=""
Local aTam     	:= 0
Local aRet     	:= {}
Local lReferenc := .F.
Local i			:= 1
Local lRet 		:= .T.
Local aFornece 	:= {}
Local lMC050FSC := ExistBlock("MC050FSC")
Local uFilSC    := Nil
Local cRetQry 	:= ""
Local cFilCorr 	:= "" // Filial corrente da tabela

DEFAULT cAlias 	:= ""
DEFAULT lTodos 	:= .F.

// Monta tree na primeira vez
If Empty(cAlias) .And. !lTodos
	oTree:BeginUpdate()
	oTree:Reset()
	oTree:EndUpdate()
EndIf

oTree:BeginUpdate()

If Empty(cAlias) .And. !lTodos
	cFilCorr := xFilial("SB2")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica dados cadastrais do produto                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oTree:TreeSeek("")
	oTree:AddItem(STR0023+Space(30),"01SB1"+StrZero(SB1->(Recno()),12),"PMSEDT3","PMSEDT3",,,1) //"Dados Cadastrais"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica saldos em estoque do produto                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SB2")
	aAreaBack:=GetArea()
	dbSetOrder(1)
	If dbSeek(cFilCorr+SB1->B1_COD)
		While !Eof() .And. B2_FILIAL+B2_COD == cFilCorr+SB1->B1_COD
			// Efetua Filtragem dos armazens
			If B2_LOCAL < aParc050[06] .Or. B2_LOCAL > aParc050[07]
				dbSkip()
				Loop
			EndIf
			// Adiciona pasta de saldos em estoque
			If lFirst
				oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
				oTree:AddItem(STR0024,"02SB2"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Saldo Fisico / Financeiro"
				oTree:TreeSeek("02SB2"+StrZero(0,12))
				AADD(aTotais,{"SB2",STR0025+STR0024,0,0,0,0,0,0,0,0,0}) //"Totais "###"Saldo Fisico / Financeiro"
				lFirst:=.F.
			EndIf
			oTree:AddItem(STR0026+B2_LOCAL,"02SB2"+StrZero(SB2->(Recno()),12),"PMSDOC","PMSDOC",,,2) //"Armazem "
			aTotais[Len(aTotais), 3]+=B2_QATU // Quantidade
			aTotais[Len(aTotais), 4]+=B2_QTSEGUM // Quantidade 2a UM
			aTotais[Len(aTotais), 5]+=B2_VATU1  // Valor atual1
			aTotais[Len(aTotais), 6]+=B2_VATU2  // Valor atual2
			aTotais[Len(aTotais), 7]+=B2_VATU3  // Valor atual3
			aTotais[Len(aTotais), 8]+=B2_VATU4  // Valor atual4
			aTotais[Len(aTotais), 9]+=B2_VATU5  // Valor atual5
			If B2_STATUS == "2"
				aTotais[Len(aTotais),10]+=B2_QATU   // Quantidade Bloqueada
			EndIf
			If lTPSldSB2 //Indica que o MV_TPSALDO=="S" e utilizara SALDOSB2
				aTotais[Len(aTotais),11]+=SaldoMov(,,,,,,(aParc050[09]==1))
			Else // Utiliza a formula: (SB2->B2_QATU - SB2->B2_QACLASS - SB2->B2_RESERVA -  SB2->B2_QTNP)
				aTotais[Len(aTotais),11]+=SaldoMov()
			EndIf
			dbSelectArea("SB2")
			nSaldoIni += B2_QATU
			//Considera saldo empenhado do produto no saldo disponível apresentado. Somente quando MV_TPSALDO=Q.
			If (aParc050[11]==1) .And. lTPSldQ
				aTotais[Len(aTotais),11]-=B2_QEMP
			EndIf
			If aParc050[05] == 1	// Considera Qtde De/Em Terceiros
				nSaldoIni += B2_QNPT - B2_QTNP
			EndIf
			dbSelectArea("SB2")
			dbSkip()
		End
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de entrada utilizado para inserir novos filtros de usuario       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("MC050SLD")
		aRet := ExecBlock("MC050SLD",.F.,.F.,{aTotais[Len(aTotais)]})
		If ValType(aRet) == "A" .And. Len(aRet) > 0
		    aTotais[Len(aTotais)]  := aRet
	    Endif
	EndIf

	RestArea(aAreaBack)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existem dados de demanda do produto      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SB3")
	dbSetOrder(1)
	If dbSeek(xFilial("SB3")+SB1->B1_COD)
		oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
		oTree:AddItem(STR0027,"03SB3"+StrZero(SB3->(Recno()),12),"PMSEDT3","PMSEDT3",,,2) //"Demandas"
	EndIf
	RestArea(aAreaBack)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existem dados complementares do produto  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SB5")
	dbSetOrder(1)
	If dbSeek(xFilial("SB5")+SB1->B1_COD)
		oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
		oTree:AddItem(STR0028,"04SB5"+StrZero(SB5->(Recno()),12),"PMSEDT3","PMSEDT3",,,2) //"Dados Complementares"
	EndIf
EndIf

// Monta amarracoes
If Empty(cAlias) .And. aParc050[04] == 1 .And. !lTodos
	dbSelectArea("SA5")
	dbSetOrder(2)
	lSeekSA5:=dbSeek(xFilial("SA5")+SB1->B1_COD)

	dbSelectArea("SA7")
	dbSetOrder(2)
	lSeekSA7:=dbSeek(xFilial("SA7")+SB1->B1_COD)

	dbSelectArea("SAD")
	dbSetOrder(2)
	lSeekSAD:=dbSeek(xFilial("SAD")+SB1->B1_GRUPO)

	cProdRef := SB1->B1_COD
	lReferenc := MatGrdPrrf(@cProdRef,.T.)
	If lSeekSA5 .Or. lSeekSA7 .Or. lSeekSAD .Or. lReferenc
		aFornece := {}
		oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
		oTree:AddItem(STR0029,"05AMA"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Amarracoes"
		If lSeekSA5
			AADD(aTotais,{"SA5",STR0025+STR0029+" "+STR0030,0}) //"Totais "###"Amarracoes"###"Produto X Fornecedor"
			oTree:TreeSeek("05AMA"+StrZero(0,12))
			oTree:AddItem(STR0030,"05SA5"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Produto X Fornecedor"
			oTree:TreeSeek("05SA5"+StrZero(0,12))
			dbSelectArea("SA5")
			While Empty(cAlias) .And. !Eof() .and. A5_FILIAL+A5_PRODUTO == xFilial("SA5")+SB1->B1_COD
				oTree:AddItem(A5_FORNECE+" / "+A5_LOJA+" - "+A5_NOMEFOR,"05SA5"+StrZero(SA5->(RecNo()),12),"PMSDOC","PMSDOC",,,2)
				aadd(aFornece,{A5_FORNECE,A5_LOJA})
				aTotais[Len(aTotais),3]+=1
				dbSkip()
			End
		EndIf
		If lReferenc
			lRet:= If(MaConsRefG(),.T.,!lSeekSA5)
			If lRet
				aResult:=aPesqRefA5(cProdRef,aFornece)
				If len(aResult)>0
					If !lSeekSA5
						AADD(aTotais,{"SA5",STR0025+STR0029+" "+STR0030,0}) //"Totais "###"Amarracoes"###"Produto X Fornecedor"
						oTree:TreeSeek("05AMA"+StrZero(0,12))
						oTree:AddItem(STR0030,"05SA5"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Produto X Fornecedor"
						oTree:TreeSeek("05SA5"+StrZero(0,12))
					Endif
					For i:=1 to len(aResult)
						oTree:AddItem(aResult[i,1]+" / "+aResult[i,2]+" - "+aResult[i,3],"05SA5"+StrZero(aResult[i,4],12),"PMSDOC","PMSDOC",,,2)
						aTotais[Len(aTotais),3]+=1
					Next
				Endif
		    Endif
		Endif
		If lSeekSA7
			AADD(aTotais,{"SA7",STR0025+STR0029+" "+STR0031,0}) //"Totais "###"Amarracoes"###"Produto X Cliente"
			oTree:TreeSeek("05AMA"+StrZero(0,12))
			oTree:AddItem(STR0031,"06SA7"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Produto X Cliente"
			oTree:TreeSeek("06SA7"+StrZero(0,12))
			dbSelectArea("SA7")
			While Empty(cAlias) .And. !Eof() .And. A7_FILIAL+A7_PRODUTO == xFilial("SA7")+SB1->B1_COD
				If aParc050[08] == 2
					SA1->(MsSeek(xFilial("SA1")+SA7->A7_CLIENTE+SA7->A7_LOJA))
				Endif
				oTree:AddItem(A7_CLIENTE+" / "+A7_LOJA+" - "+IIF(aParc050[08]==1,A7_DESCCLI,SA1->A1_NOME),"06SA7"+StrZero(SA7->(RecNo()),12),"PMSDOC","PMSDOC",,,2)
				aTotais[Len(aTotais),3]+=1
				dbSkip()
			End
		EndIf
		If lSeekSAD
			AADD(aTotais,{"SAD",STR0025+STR0029+" "+STR0032,0}) //"Totais "###"Amarracoes"###"Grupo X Fornecedor"
			oTree:TreeSeek("05AMA"+StrZero(0,12))
			oTree:AddItem(STR0032,"07SAD"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Grupo X Fornecedor"
			oTree:TreeSeek("07SAD"+StrZero(0,12))
			dbSelectArea("SAD")
			While Empty(cAlias) .And. !Eof() .and. AD_FILIAL+AD_GRUPO == xFilial("SAD")+SB1->B1_GRUPO
				oTree:AddItem(AD_FORNECE+" / "+AD_LOJA+" - "+AD_NOMEFOR,"07SAD"+StrZero(SAD->(RecNo()),12),"PMSDOC","PMSDOC",,,2)
				aTotais[Len(aTotais),3]+=1
				dbSkip()
			End
		EndIf
	EndIf
EndIf

// Monta Solicitacoes de Compra
If (cAlias $ "SC1/MRP" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "SC1"}) == 0)
	dbSelectArea("SC1")
	aAreaBack:=GetArea()
	cAliasTop := "SC1"
	cFilCorr := xFilial("SC1")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT SC1.* ,R_E_C_N_O_ C1REC "
	cQuery += "FROM "+RetSqlName("SC1")+" SC1 "
	cQuery += "WHERE SC1.C1_FILIAL='"+cFilCorr+"' AND "
	cQuery += "SC1.C1_PRODUTO='" + SB1->B1_COD + "' AND "
	cQuery += "SC1.C1_QUJE < SC1.C1_QUANT AND "
	cQuery += "SC1.C1_EMISSAO >= '" + DTOS(aParc050[01]) + "' AND "
	cQuery += "SC1.C1_EMISSAO <= '" + DTOS(aParc050[02]) + "' AND "
	cQuery += "SC1.C1_RESIDUO  = '" + CriaVar("C1_RESIDUO", .F.) + "' AND "
	cQuery += "SC1.C1_LOCAL >= '" +aParc050[06]+"' AND "
	cQuery += "SC1.C1_LOCAL <= '" +aParc050[07]+"' AND "
	cQuery += "SC1.D_E_L_E_T_=' ' "
	cQuery += "ORDER BY "+SqlOrder(SC1->(IndexKey(2)))
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	aEval(SC1->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasTop,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("08SC1"+StrZero(0,12))
		lFirst:=.T.
		While !Eof()
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ PE para filtrar as SC's a serem exibidas ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lMC050FSC
				uFilSC := ExecBlock("MC050FSC", .F., .F., { Recno() }) 	// RECNO da Tabela SC1
				If ValType(uFilSC) == "L" .And. !uFilSC    				// retorno logico FALSO deve realizar dbSkip / Loop
					dbSkip()
					Loop
				EndIf
			EndIf
			If lFirst
				AADD(aTotais,{"SC1",STR0025+STR0033,0,0}) //"Totais "###"Solicitacoes de Compra"
				lFirst := .F.
			Endif
			oTree:AddItem(C1_NUM+" / "+C1_ITEM,"08SC1"+StrZero(C1REC,12),"PMSDOC","PMSDOC",,,2)
			aTotais[Len(aTotais),3]+=C1_QUANT // Quantidade
			aTotais[Len(aTotais),4]+=C1_QUJE  // Quantidade ja entregue
			a050MRP(aMrp,C1_DATPRF,(C1_QUANT - C1_QUJE),"E")
			dbSkip()
		End
	Endif
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("SC1")
ElseIf Empty(cAlias) .And. !lTodos
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0033,"08SC1"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Solicitacoes de Compra"
EndIf

// Monta Pedidos de Compra
If (cAlias $ "SC7/MRP" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "SC7"}) == 0)
	dbSelectArea("SC7")
	aAreaBack:=GetArea()
	cAliasTop := "SC7"
	cFilCorr := xFilial("SC7")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT SC7.C7_FILIAL,SC7.C7_PRODUTO,SC7.C7_FORNECE,SC7.C7_LOJA,SC7.C7_NUM,SC7.C7_LOCAL,"
	cQuery += "SC7.C7_ITEM,SC7.C7_QUANT,SC7.C7_QUJE,SC7.C7_EMISSAO,SC7.C7_PRECO,SC7.C7_TOTAL,SC7.C7_COND,"
	cQuery += "SC7.C7_TES,SC7.C7_RESIDUO,SC7.C7_DATPRF,SC7.R_E_C_N_O_ C7REC "
	cQuery += "FROM "+RetSqlName("SC7")+" SC7 "
	cQuery += "INNER JOIN "+RetSqlName("SF4")+" SF4 "
	cQuery += "ON SF4.F4_FILIAL = '"+xFilial("SF4")+"' "
	cQuery += " AND SF4.F4_CODIGO = SC7.C7_TES "
	cQuery += " AND SF4.F4_ESTOQUE = 'S' "
	cQuery += " AND SF4.D_E_L_E_T_ = ' ' "
	cQuery += "WHERE SC7.C7_FILIAL = '"+cFilCorr+"' "
	cQuery += " AND SC7.C7_PRODUTO = '" + SB1->B1_COD + "' "
	cQuery += " AND SC7.C7_QUJE < SC7.C7_QUANT "
	cQuery += " AND SC7.C7_EMISSAO BETWEEN '" + DTOS(aParc050[01]) + "' AND '" + DTOS(aParc050[02]) + "' "
	cQuery += " AND SC7.C7_RESIDUO = '" + CriaVar("C7_RESIDUO", .F.) + "' "
	cQuery += " AND SC7.C7_LOCAL BETWEEN '" +aParc050[06]+"' AND '" +aParc050[07]+"' "
	cQuery += " AND SC7.D_E_L_E_T_ = ' ' "
	cQuery += " UNION "
	cQuery += "SELECT SC7a.C7_FILIAL,SC7a.C7_PRODUTO,SC7a.C7_FORNECE,SC7a.C7_LOJA,SC7a.C7_NUM,SC7a.C7_LOCAL,"
	cQuery += "SC7a.C7_ITEM,SC7a.C7_QUANT,SC7a.C7_QUJE,SC7a.C7_EMISSAO,SC7a.C7_PRECO,SC7a.C7_TOTAL,SC7a.C7_COND,"
	cQuery += "SC7a.C7_TES,SC7a.C7_RESIDUO,SC7a.C7_DATPRF,SC7a.R_E_C_N_O_ C7REC "	
	cQuery += "FROM "+RetSqlName("SC7")+" SC7a "
	cQuery += "WHERE SC7a.C7_FILIAL = '"+cFilCorr+"' "
	cQuery += " AND SC7a.C7_PRODUTO = '" + SB1->B1_COD + "' "
	cQuery += " AND SC7a.C7_QUJE < SC7a.C7_QUANT "
	cQuery += " AND SC7a.C7_EMISSAO BETWEEN '" + DTOS(aParc050[01]) + "' AND '" + DTOS(aParc050[02]) + "' "
	cQuery += " AND SC7a.C7_RESIDUO = '" + CriaVar("C7_RESIDUO", .F.) + "' "
	cQuery += " AND SC7a.C7_LOCAL BETWEEN '" +aParc050[06]+"' AND '" +aParc050[07]+"' "
	cQuery += " AND SC7a.C7_TES = '"+SPACE(TamSX3("C7_TES")[1])+"' " 
	cQuery += " AND SC7a.D_E_L_E_T_ = ' ' "
	cQuery += "ORDER BY "+SqlOrder(SC7->(IndexKey(2)))
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	aEval(SC7->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasTop,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("09SC7"+StrZero(0,12))
		lFirst:=.T.
		While !Eof()
			If lFirst
				AADD(aTotais,{"SC7",STR0025+STR0034,0,0}) //"Totais "###"Pedidos de Compra / Autorizacao de Entrega"
				lFirst:=.F.
			Endif
			oTree:AddItem(C7_NUM+" / "+C7_ITEM+" - "+C7_FORNECE+" / "+C7_LOJA,"09SC7"+StrZero(C7REC,12),"PMSDOC","PMSDOC",,,2)
			aTotais[Len(aTotais),3]+=C7_QUANT // Quantidade
			aTotais[Len(aTotais),4]+=C7_QUJE // Quantidade ja entregue
			a050MRP(aMrp,C7_DATPRF,(C7_QUANT-C7_QUJE),"E")
			dbSkip()
		End
	EndIf
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("SC7")
ElseIf Empty(cAlias) .And. !lTodos
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(If(! lPyme,STR0034,STR0073),"09SC7"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Pedidos de Compra / Autorizacao de Entrega"
EndIf

// Monta Empenhos
If (cAlias $ "SD4/MRP" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "SD4"}) == 0)
	dbSelectArea("SD4")
	aAreaBack:=GetArea()
	cAliasTop := "SD4"
	cFilCorr := xFilial("SD4")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT SD4.* ,R_E_C_N_O_ D4REC "
	cQuery += "FROM "+RetSqlName("SD4")+" SD4 "
	cQuery += "WHERE SD4.D4_FILIAL='"+cFilCorr+"' AND "
	cQuery += "SD4.D4_COD='" + SB1->B1_COD + "' AND "
	cQuery += "SD4.D4_QUANT > 0 AND "
	cQuery += "SD4.D4_LOCAL >= '" +aParc050[06]+"' AND "
	cQuery += "SD4.D4_LOCAL <= '" +aParc050[07]+"' AND "
	cQuery += "SD4.D_E_L_E_T_=' ' "
	cQuery += "ORDER BY "+SqlOrder(SD4->(IndexKey(1)))
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	aEval(SD4->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasTop,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("10SD4"+StrZero(0,12))
		lFirst:=.T.
		While !Eof()
			If lFirst
				AADD(aTotais,{"SD4",STR0025+STR0035,0}) //"Totais "###"Empenhos"
				lFirst:=.F.
			Endif
			oTree:AddItem(D4_OP+" / "+D4_TRT,"10SD4"+StrZero(D4REC,12),"PMSDOC","PMSDOC",,,2)
			aTotais[Len(aTotais),3]+=D4_QUANT // Quantidade
			a050MRP(aMrp,If(D4_DATA < dDatabase,dDataBase,D4_DATA),D4_QUANT,"S")
			dbSkip()
		End
	EndIf
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("SD4")
ElseIf Empty(cAlias) .And. !lTodos
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0035,"10SD4"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Empenhos"
Endif

// Monta Ordens de Producao
If (cAlias $ "SC2/MRP" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "SC2"}) == 0)
	dbSelectArea("SC2")
	aAreaBack:=GetArea()
	cAliasTop := "SC2"
	cFilCorr := xFilial("SC2")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT C2_FILIAL,C2_PRODUTO,C2_DATRF,C2_EMISSAO,C2_LOCAL,C2_NUM,C2_ITEM,C2_SEQUEN,"
	cQuery += "C2_ITEMGRD,C2_QUANT,C2_QUJE,C2_PERDA,C2_DATPRF,SC2.R_E_C_N_O_ C2REC "
	cQuery += "FROM "+RetSqlName("SC2")+" SC2 "
	If aParc050[10] == 3
		cQuery += " LEFT JOIN " + RetSqlName("SC6")+" SC6 ON ( "
		cQuery += " SC6.C6_FILIAL = SC2.C2_FILIAL AND "
		cQuery += " SC6.C6_NUMOP = SC2.C2_NUM AND "
		cQuery += " SC6.C6_ITEMOP = SC2.C2_ITEM AND "
		cQuery += " SC6.C6_PRODUTO = SC2.C2_PRODUTO AND "
		cQuery += " SC6.C6_QTDENT < SC6.C6_QTDVEN AND "
		cQuery += " SC6.C6_BLQ <> 'R ' AND "
		cQuery += " SC6.C6_LOCAL = SC2.C2_LOCAL AND "
		cQuery += " SC6.D_E_L_E_T_= ' ') "
	EndIf
	cQuery += "WHERE SC2.C2_FILIAL='"+cFilCorr+"' AND "
	cQuery += "SC2.C2_PRODUTO='" + SB1->B1_COD + "' AND "
	If aParc050[10] == 1
		cQuery += "SC2.C2_DATRF = '" + Space(Len(DTOS(SC2->C2_DATRF))) + "' AND "
	EndIf
	cQuery += "SC2.C2_EMISSAO >= '" + DTOS(aParc050[01]) + "' AND "
	cQuery += "SC2.C2_EMISSAO <= '" + DTOS(aParc050[02]) + "' AND "
	cQuery += "SC2.C2_LOCAL >= '" +aParc050[06]+"' AND "
	cQuery += "SC2.C2_LOCAL <= '" +aParc050[07]+"' AND "
	cQuery += "SC2.D_E_L_E_T_=' ' "
	If aParc050[10] == 3
		cQuery += " AND ((COALESCE(SC6.C6_PRODUTO, '') <> '') "
		cQuery += " OR (SC2.C2_DATRF = '" + Space(Len(DTOS(SC2->C2_DATRF))) + "' AND COALESCE(SC2.C2_PEDIDO,'') = '')) "
	EndIf
	cQuery += "ORDER BY "+SqlOrder(SC2->(IndexKey(2)))
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	TCSetField( cAliasTop, "C2_DATRF",   "D", 8, 0)
	TCSetField( cAliasTop, "C2_EMISSAO", "D", 8, 0)
	aTam := TamSx3("C2_QUANT")
	TCSetField( cAliasTop, "C2_QUANT",   "N", aTam[1], aTam[2])
	aTam := TamSx3("C2_QUJE")
	TCSetField( cAliasTop, "C2_QUJE",    "N", aTam[1], aTam[2])
	aTam := TamSx3("C2_PERDA")
	TCSetField( cAliasTop, "C2_PERDA",   "N", aTam[1], aTam[2])
	TCSetField( cAliasTop, "C2_DATPRF",  "D", 8, 0)
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("11SC2"+StrZero(0,12))
		lFirst:=.T.
		While !Eof()
			If lFirst
				AADD(aTotais,{"SC2",STR0025+STR0036,0,0,0}) //"Totais "###"Ordens de Producao"
				lFirst:=.F.
			Endif
			oTree:AddItem(C2_NUM+C2_ITEM+C2_SEQUEN+C2_ITEMGRD,"11SC2"+StrZero(C2REC,12),"PMSDOC","PMSDOC",,,2)
			aTotais[Len(aTotais),3]+=C2_QUANT // Quantidade
			aTotais[Len(aTotais),4]+=C2_QUJE  // Quantidade ja entregue
			aTotais[Len(aTotais),5]+=C2_PERDA // Quantidade perdida
			a050MRP(aMrp,If(C2_DATPRF < dDatabase,dDataBase,C2_DATPRF),(C2_QUANT - C2_QUJE - C2_PERDA),"E")
			dbSkip()
		End
	Endif
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("SC2")
ElseIf Empty(cAlias) .And. !lTodos
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0036,"11SC2"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Ordens de Producao"
EndIf

// Monta Previsoes de Venda (SC4)
If (cAlias $ "SC4/MRP" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "SC4"}) == 0)
	dbSelectArea("SC4")
	aAreaBack:=GetArea()
	cAliasTop := "SC4"
	cFilCorr := xFilial("SC4")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT SC4.* ,R_E_C_N_O_ C4REC "
	cQuery += "FROM "+RetSqlName("SC4")+" SC4 "
	cQuery += "WHERE SC4.C4_FILIAL='"+cFilCorr+"' AND "
	cQuery += "SC4.C4_PRODUTO='" + SB1->B1_COD + "' AND "
	cQuery += "SC4.C4_LOCAL >= '" +aParc050[06]+"' AND "
	cQuery += "SC4.C4_LOCAL <= '" +aParc050[07]+"' AND "
	cQuery += "SC4.D_E_L_E_T_=' ' "
	cQuery += "ORDER BY "+SqlOrder(SC4->(IndexKey(1)))
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	aEval(SC4->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasTop,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("12SC4"+StrZero(0,12))
		lFirst:=.T.
		While !Eof()
			If Empty(C4_NUMOP)
				If lFirst
					AADD(aTotais,{"SC4",STR0025+STR0037,0}) //"Totais "###"Previsoes de Venda"
					lFirst:=.F.
				EndIf
				oTree:AddItem(C4_DOC+" - "+DTOC(C4_DATA),"12SC4"+StrZero(C4REC,12),"PMSDOC","PMSDOC",,,2)
				aTotais[Len(aTotais),3]+=C4_QUANT // Quantidade
				a050MRP(aMrp,If(C4_DATA < dDatabase,dDataBase,C4_DATA),C4_QUANT,"S")
			EndIf
			dbSkip()
		End
	EndIf
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("SC4")
ElseIf Empty(cAlias) .And. !lTodos  .And. ! lPyme
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0037,"12SC4"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Previsoes de Venda"
EndIf

// Monta Pedidos de Venda
If (cAlias $ "SC6/MRP" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "SC6"}) == 0)
	dbSelectArea("SC6")
	aAreaBack:=GetArea()
	cAliasTop := "SC6"
	cFilCorr := xFilial("SC6")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT C6_QTDVEN, C6_FILIAL, C6_PRODUTO, C6_QTDENT, C6_BLQ, C6_LOCAL, C6_TES "
	cQuery += ",C6_ITEM, C6_NUM, C6_ENTREG, C6_CLI, C6_LOJA, C6_RESERVA, SC6.R_E_C_N_O_ C6REC "
	cQuery += "FROM "+RetSqlName("SC6")+" SC6 "
	cQuery += "INNER JOIN "+RetSqlName("SF4")+" SF4 "
	cQuery += "ON SF4.F4_FILIAL = '"+xFilial("SF4")+"' "
	cQuery += "AND SF4.F4_CODIGO = SC6.C6_TES "
	cQuery += "AND SF4.F4_ESTOQUE = 'S' "
	cQuery += "AND SF4.D_E_L_E_T_ = ' ' "
	cQuery += "WHERE SC6.C6_FILIAL = '"+cFilCorr+"' "
	cQuery += "AND SC6.C6_PRODUTO = '" + SB1->B1_COD + "' "
	cQuery += "AND SC6.C6_QTDENT < SC6.C6_QTDVEN "
	cQuery += "AND SC6.C6_BLQ <> 'R ' "
	cQuery += "AND SC6.C6_LOCAL BETWEEN '" +aParc050[06]+"' AND '" +aParc050[07]+"' "
	cQuery += "AND SC6.D_E_L_E_T_ = ' ' "
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de entrada para complementar o filtro de Pedidos de Venda ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("MC050QRY")
		cRetQry:=ExecBlock("MC050QRY",.F.,.F.,{cQuery})
		If  ValType(cRetQry) == "C"
			cQuery:=" "+cRetQry
		EndIf
	EndIf
	cQuery += "ORDER BY "+SqlOrder(SC6->(IndexKey(2)))
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	aTam := TamSx3("C6_QTDVEN")
	TCSetField( cAliasTop, "C6_QTDVEN", "N", aTam[1], aTam[2])
	aTam := TamSx3("C6_QTDENT")
	TCSetField( cAliasTop, "C6_QTDENT", "N", aTam[1], aTam[2])
	aTam := TamSx3("C6_ENTREG")
	TCSetField( cAliasTop, "C6_ENTREG", "D", aTam[1], aTam[2])
	aTam := TamSx3("C6_RESERVA")
	TCSetField( cAliasTop, "C6_RESERVA","N", aTam[1], aTam[2])
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("13SC6"+StrZero(0,12))
		lFirst:=.T.
		While !Eof()
			If lFirst
				AADD(aTotais,{"SC6",STR0025+STR0038,0,0}) //"Totais "###"Pedidos de Venda"
				lFirst:=.F.
			Endif
			oTree:AddItem(C6_NUM+" / "+C6_ITEM+" - "+C6_CLI+" / "+C6_LOJA,"13SC6"+StrZero(C6REC,12),"PMSDOC","PMSDOC",,,2)
			aTotais[Len(aTotais),3]+=C6_QTDVEN // Quantidade
			aTotais[Len(aTotais),4]+=C6_QTDENT	// Quantidade ja entregue
			a050MRP(aMrp,If(C6_ENTREG < dDatabase,dDataBase,C6_ENTREG),(C6_QTDVEN - C6_QTDENT ),"S")
			dbSkip()
		End
	Endif
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("SC6")
ElseIf Empty(cAlias) .And. !lTodos
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0038,"13SC6"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Pedidos de Venda"
EndIf

// Monta Plano Mestre de Producao
If (cAlias == "SHC" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "SHC"}) == 0)
	dbSelectArea("SHC")
	aAreaBack:=GetArea()
	cAliasTop := "SHC"
	cFilCorr := xFilial("SHC")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT SHC.* ,R_E_C_N_O_ HCREC "
	cQuery += "FROM "+RetSqlName("SHC")+" SHC "
	cQuery += "WHERE SHC.HC_FILIAL='"+cFilCorr+"' AND "
	cQuery += "SHC.HC_PRODUTO='" + SB1->B1_COD + "' AND "
	cQuery += "SHC.HC_STATUS=' ' AND SHC.D_E_L_E_T_=' ' "
	cQuery += "ORDER BY "+SqlOrder(SHC->(IndexKey(1)))
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	aEval(SHC->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasTop,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("14SHC"+StrZero(0,12))
		lFirst:=.T.
		While !Eof()
			dbSelectArea(cAliasTop)
			If lFirst
				AADD(aTotais,{"SHC",STR0025+STR0039,0,0}) //"Totais "###"Plano Meste de Producao"
				lFirst:=.F.
			Endif
			oTree:AddItem(Dtoc(HC_DATA),"14SHC"+StrZero(HCREC,12),"PMSDOC","PMSDOC",,,2)
			aTotais[Len(aTotais),3]+=HC_QUANT // Quantidade
			dbSkip()
		End
	Endif
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("SHC")
ElseIf Empty(cAlias) .And. !lTodos .And. ! lPyme
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0040,"14SHC"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Plano Mestre de Producao"
EndIf

// Monta Solicitacao ao Armazem
If (cAlias == "SCP" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "SCP"}) == 0)
	dbSelectArea("SCP")
	aAreaBack:=GetArea()
	cAliasTop := "SCP"
	cFilCorr := xFilial("SCP")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT CP_FILIAL, CP_PRODUTO, CP_LOCAL, CP_PREREQU, CP_NUM, CP_ITEM, CP_QUANT, R_E_C_N_O_ CPREC "
	cQuery += "FROM "+RetSqlName("SCP")+" SCP "
	cQuery += "WHERE SCP.CP_FILIAL='"+cFilCorr+"' AND "
	cQuery += "SCP.CP_PRODUTO='" + SB1->B1_COD + "' AND "
	cQuery += "SCP.CP_LOCAL >= '" +aParc050[06]+"' AND "
	cQuery += "SCP.CP_LOCAL <= '" +aParc050[07]+"' AND "
	cQuery += "SCP.CP_PREREQU=' ' AND SCP.D_E_L_E_T_=' ' "
	cQuery += "ORDER BY "+SqlOrder(SCP->(IndexKey(2)))
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	aTam := TamSx3("CP_QUANT")
	TCSetField( cAliasTop, "CP_QUANT", "N", aTam[1], aTam[2])
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("15SCP"+StrZero(0,12))
		lFirst:=.T.
		While !Eof()
			dbSelectArea(cAliasTop)
			If lFirst
				AADD(aTotais,{"SCP",STR0025+STR0064,0,0}) //"Totais "###"Solicitacao ao Armazem"
				lFirst:=.F.
			Endif
			oTree:AddItem(CP_NUM+" / "+CP_ITEM,"15SCP"+StrZero(CPREC,12),"PMSDOC","PMSDOC",,,2)
			aTotais[Len(aTotais),3]+=CP_QUANT // Quantidade
			dbSkip()
		End
	Endif
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("SCP")
ElseIf Empty(cAlias) .And. !lTodos .And. ! lPyme
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0064,"15SCP"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Solicitacao ao Armazem"
EndIf

// Monta Pre-Requisicoes
If (cAlias == "SCQ" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "SCQ"}) == 0)
	dbSelectArea("SCQ")
	aAreaBack:=GetArea()
	cAliasTop := "SCQ"
	cFilCorr := xFilial("SCQ")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT CQ_FILIAL, CQ_PRODUTO, CQ_LOCAL, CQ_NUMREQ, CQ_NUM, CQ_ITEM, CQ_QUANT, R_E_C_N_O_ CQREC "
	cQuery += "FROM "+RetSqlName("SCQ")+" SCQ "
	cQuery += "WHERE SCQ.CQ_FILIAL='"+cFilCorr+"' AND "
	cQuery += "SCQ.CQ_PRODUTO='" + SB1->B1_COD + "' AND "
	cQuery += "SCQ.CQ_LOCAL >= '" +aParc050[06]+"' AND "
	cQuery += "SCQ.CQ_LOCAL <= '" +aParc050[07]+"' AND "
	cQuery += "SCQ.CQ_NUMREQ=' ' AND SCQ.D_E_L_E_T_=' ' "
	cQuery += "ORDER BY "+SqlOrder(SCQ->(IndexKey(2)))
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	aTam := TamSx3("CQ_QUANT")
	TCSetField( cAliasTop, "CQ_QUANT", "N", aTam[1], aTam[2])
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("15SCQ"+StrZero(0,12))
		lFirst:=.T.
		While !Eof()
			dbSelectArea(cAliasTop)
			If lFirst
				AADD(aTotais,{"SCQ",STR0025+STR0085,0,0}) //"Totais "###"Pre-Requisicoes"
				lFirst:=.F.
			Endif
			oTree:AddItem(CQ_NUM+" / "+CQ_ITEM,"15SCQ"+StrZero(CQREC,12),"PMSDOC","PMSDOC",,,2)
			aTotais[Len(aTotais),3]+=CQ_QUANT // Quantidade
			dbSkip()
		End
	Endif
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("SCQ")
ElseIf Empty(cAlias) .And. !lTodos .And. ! lPyme
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0085,"15SCQ"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Pre-Requisicoes"
EndIf

// Monta Empenhos para projetos
If (cAlias == "AFJ" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "AFJ"}) == 0) .And. ! lPyme
	dbSelectArea("AFJ")
	aAreaBack:=GetArea()
	cAliasTop := "AFJ"
	cFilCorr := xFilial("AFJ")

	cAliasTop :=  GetNextAlias()
	cQuery := "SELECT AFJ.* ,R_E_C_N_O_ AFJREC "
	cQuery += "FROM "+RetSqlName("AFJ")+" AFJ "
	cQuery += "WHERE AFJ.AFJ_FILIAL='"+cFilCorr+"' AND "
	cQuery += "AFJ.AFJ_COD='" + SB1->B1_COD + "' AND "
	cQuery += "(AFJ.AFJ_EMPEST + AFJ.AFJ_QATU) < AFJ.AFJ_QEMP AND "
	cQuery += "AFJ.AFJ_LOCAL >= '" +aParc050[06]+"' AND "
	cQuery += "AFJ.AFJ_LOCAL <= '" +aParc050[07]+"' AND "
	cQuery += "AFJ.AFJ_DATA >= '" + DTOS(aParc050[01]) + "' AND "
	cQuery += "AFJ.AFJ_DATA <= '" + DTOS(aParc050[02]) + "' AND "
	cQuery += "AFJ.D_E_L_E_T_=' ' "
	cQuery += "ORDER BY "+SqlOrder(AFJ->(IndexKey(2)))
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	aEval(AFJ->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasTop,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("16AFJ"+StrZero(0,12))
		lFirst:=.T.
		While !Eof()
			If lFirst
				AADD(aTotais,{"AFJ",STR0025+STR0062,0}) //"Totais "###"Reserva para projetos"
				lFirst:=.F.
			Endif
			oTree:AddItem(AFJ_PROJET+" / "+AFJ_TAREFA,"16AFJ"+StrZero(AFJREC,12),"PMSDOC","PMSDOC",,,2)
			a050MRP(aMrp,If(AFJ_DATA < dDatabase,dDataBase,AFJ_DATA),(AFJ_QEMP - (AFJ_QATU + AFJ_EMPEST)),"S")
			aTotais[Len(aTotais),3] += AFJ_QEMP - (AFJ_QATU + AFJ_EMPEST) // Quantidade
			dbSkip()
		End
	EndIf
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("AFJ")
ElseIf Empty(cAlias) .And. !lTodos .And. ! lPyme
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0062,"16AFJ"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2)
EndIf

// Monta Tabela de Precos
If (cAlias == "DA " .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "DA1"}) == 0)
	dbSelectArea("DA1")
	aAreaBack:=GetArea()
	cAliasTop := "DA1"
	cFilCorr := xFilial("DA1")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT DA1.* , DA1.R_E_C_N_O_ DA1REC "
	cQuery += "FROM "+RetSqlName("DA1")+" DA1, "+RetSqlName("DA0")+" DA0 "
	cQuery += "WHERE "
	cQuery += "DA0.DA0_FILIAL = DA1.DA1_FILIAL AND "
	cQuery += "DA0.DA0_CODTAB = DA1.DA1_CODTAB AND "
	If MV_PAR12 == 1
		cQuery += "(DA0.DA0_DATATE >= '"+Dtos(dDatabase)+"' OR  DA0.DA0_DATATE = ' ') AND "
	Else
		cQuery += "DA0.DA0_DATDE  >= '"+Dtos(MV_PAR01)+"' AND "
		cQuery += "DA0.DA0_DATATE <= '"+DTos(MV_PAR02)+"' AND "
	Endif
	cQuery += "DA1.DA1_FILIAL='"+cFilCorr+"' AND "
	cQuery += "DA1.DA1_CODPRO='" + SB1->B1_COD + "' AND "
	cQuery += "DA1.D_E_L_E_T_=' ' AND "
	cQuery += "DA0.D_E_L_E_T_=' ' "
	cQuery += "ORDER BY "+SqlOrder(DA1->(IndexKey(2)))
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	aEval(DA1->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasTop,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("17DA "+StrZero(0,12))
		lFirst:=.T.
		cWhile:=""
		While !Eof()
			oTree:TreeSeek("17DA "+StrZero(0,12))
			DA0->(dbSetOrder(1))
			If DA0->(dbSeek(xFilial("DA0")+(cAliasTop)->DA1_CODTAB)) .AND. DA0->DA0_FILIAL+DA0->DA0_CODTAB <> cWhile
				oTree:AddItem(STR0081 + DA0->DA0_CODTAB,"17DA0"+StrZero(DA0->(Recno()),12),"PMSDOC","PMSDOC",,,2)	//Tabela -
				oTree:TreeSeek("17DA0"+StrZero(DA0->(Recno()),12))
			    cWhile:=DA0->DA0_FILIAL+DA0->DA0_CODTAB
			EndIf

			While (cAliasTop)->(!Eof()) .AND.(cAliasTop)->DA1_CODTAB == DA0->DA0_CODTAB
				oTree:AddItem(DA1_CODTAB+" / "+DA1_ITEM,"17DA1"+StrZero(DA1REC,12),"PMSDOC","PMSDOC",,,2)
				dbSkip()
			Enddo

			If lFirst
				AADD(aTotais,{"DA1",1,""})
				lFirst := .F.
			Endif

		End
	EndIf
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("DA1")
ElseIf Empty(cAlias) .And. !lTodos .And. ! lPyme
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0082,"17DA "+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //Tabela de Precos
Endif

// Monta Tabela de Precos Fornecedores
If (cAlias == "AI " .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "AIB"}) == 0)
	dbSelectArea("AIB")
	aAreaBack:=GetArea()
	cAliasTop := "AIB"
	cFilCorr := xFilial("AIB")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT AIB.* ,R_E_C_N_O_ AIBREC "
	cQuery += "FROM "+RetSqlName("AIB")+" AIB "
	cQuery += "WHERE AIB.AIB_FILIAL='"+cFilCorr+"' AND "
	cQuery += "AIB.AIB_CODPRO='" + SB1->B1_COD + "' AND "
	cQuery += "AIB.D_E_L_E_T_=' ' "
	cQuery += "ORDER BY AIB_CODPRO,AIB_CODTAB,AIB_CODFOR,AIB_LOJFOR"
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	aEval(AIB->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasTop,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("20AI "+StrZero(0,12))
		lFirst:=.T.
		cWhile:=""
		While !Eof()
			If AIB->AIB_FILIAL+AIB->AIB_CODPRO+AIB->AIB_CODTAB+AIB_CODFOR+AIB_LOJFOR # cWhile .Or. AIB->AIB_CODTAB <> (cAliasTop)->AIB_CODTAB
				oTree:TreeSeek("20AI "+StrZero(0,12))
				cWhile:=AIB->AIB_FILIAL+AIB->AIB_CODPRO+AIB->AIB_CODTAB+AIB_CODFOR+AIB_LOJFOR
				AIA->(dbSetOrder(1))
				If AIA->(dbSeek(xFilial("AIA")+(cAliasTop)->AIB_CODFOR+(cAliasTop)->AIB_LOJFOR+(cAliasTop)->AIB_CODTAB))
					oTree:AddItem(STR0081 + AIA->AIA_CODTAB +" "+ STR0088 + AIA->AIA_CODFOR+" / "+AIA->AIA_LOJFOR,"20AIA"+StrZero(AIA->(Recno()),12),"PMSDOC","PMSDOC",,,2)	//Tabela -
					oTree:TreeSeek("20AIA"+StrZero(AIA->(Recno()),12))
				EndIf
			EndIf
			oTree:AddItem(AIB_CODTAB+" / "+AIB_ITEM,"20AIB"+StrZero(AIBREC,12),"PMSDOC","PMSDOC",,,2)
			If lFirst
				AADD(aTotais,{"AIB",1,""})
				lFirst := .F.
			Endif
			dbSkip()
		End
	EndIf
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("AIB")
ElseIf Empty(cAlias) .And. !lTodos .And. ! lPyme
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0087,"20AI "+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //Tabela de Precos dos Fornecedores
Endif

// Monta Orcamentos do SIGALOJA
If (cAlias $ "SL2" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "SL2"}) == 0)
	dbSelectArea("SL2")
	dbSetOrder( 1 )
	aAreaBack:=GetArea()
	cAliasTop := "SL2"
	cFilCorr := xFilial("SL2")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT SL2.* ,SL2.R_E_C_N_O_ L2REC "
	cQuery += "FROM "+RetSqlName("SL2")+" SL2 "
	cQuery += "INNER JOIN "+RetSqlName("SF4")+" SF4 "
	cQuery += "ON SF4.F4_FILIAL = '"+xFilial("SF4")+"' "
	cQuery += "AND SF4.F4_CODIGO = SL2.L2_TES "
	cQuery += "AND SF4.F4_ESTOQUE = 'S' "
	cQuery += "AND SF4.D_E_L_E_T_= ' ' "
	cQuery += "WHERE SL2.L2_FILIAL = '"+cFilCorr+"' "
	cQuery += " AND SL2.L2_PRODUTO = '" + SB1->B1_COD + "' "
	cQuery += " AND SL2.L2_LOCAL BETWEEN '" +aParc050[06]+"' AND '" +aParc050[07]+"' "
	cQuery += " AND SL2.L2_VENDIDO = ' ' "
	cQuery += " AND SL2.D_E_L_E_T_ = ' ' "
	cQuery += "ORDER BY "+SqlOrder(SL2->(IndexKey()))
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop,.T.,.T.)
	aEval(SL2->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasTop,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("18SL2"+StrZero(0,12))
		lFirst:=.T.
		While !Eof()
			If lFirst
				AADD(aTotais,{"SL2",STR0025+STR0084,0,0}) //"Totais "###"Orçamentos SIGALOJA"
				lFirst:=.F.
			Endif
			oTree:AddItem(L2_NUM+" / "+L2_ITEM,"18SL2"+StrZero(L2REC,12),"PMSDOC","PMSDOC",,,2)
			aTotais[Len(aTotais),3]+=L2_QUANT  // Quantidade
			dbSkip()
		End
	Endif
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("SL2")
ElseIf Empty(cAlias) .And. !lTodos
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0084,"18SL2"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Orçamentos SIGALOJA"
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Orçamento de Venda                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (cAlias $ "SCK" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "SCK"}) == 0)
	dbSelectArea("SCK")
	aAreaBack := GetArea()
	cAliasTop := "SCK"
	cFilCorr := xFilial("SCK")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT CK_FILIAL,CK_NUM,CK_ITEM,CK_PRODUTO,CK_QTDVEN,CK_LOCAL,CK_TES,CK_ENTREG,CK_CLIENTE,CK_LOJA,SCK.R_E_C_N_O_ SCKRECNO, CJ_STATUS "
	cQuery += "FROM "+RetSqlName("SCK")+" SCK ,"
	cQuery += RetSqlName("SCJ")+" SCJ ,"
	cQuery += RetSqlName("SF4")+" SF4 "
	cQuery += "WHERE SCK.CK_FILIAL='"+cFilCorr+"' AND "
	cQuery += "SCK.CK_PRODUTO='" + SB1->B1_COD + "' AND "
	cQuery += "SCK.CK_NUMPV = '"+Space(Len(SCK->CK_NUMPV))+"' AND "
	cQuery += "SCK.CK_LOCAL >= '" +aParc050[06]+"' AND "
	cQuery += "SCK.CK_LOCAL <= '" +aParc050[07]+"' AND "
	cQuery += "SCK.D_E_L_E_T_=' ' AND "
	cQuery += "SCJ.CJ_FILIAL = '"+xFilial("SCJ")+"' AND "
	cQuery += "SCJ.CJ_NUM = SCK.CK_NUM AND "
	cQuery += "SCJ.CJ_STATUS <> 'C' AND "
	cQuery += "SCJ.CJ_EMISSAO BETWEEN '"+ Dtos( aParc050[ 01 ] ) +"' AND '"+ Dtos( aParc050[ 02 ] ) +"' AND "
	cQuery += "SCJ.D_E_L_E_T_=' ' AND "
	cQuery += "SF4.F4_FILIAL = '"+xFilial("SF4")+"' AND "
	cQuery += "SF4.F4_CODIGO=SCK.CK_TES AND "
	cQuery += "SF4.F4_ESTOQUE='S' AND "
	cQuery += "SF4.D_E_L_E_T_=' ' "
	cQuery += "ORDER BY "+SqlOrder(SCK->(IndexKey(3)))
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop)
	aEval(SCK->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasTop,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("19SCK"+StrZero(0,12))
		lFirst:=.T.
		While ( !Eof() .And. (cAliasTOP)->CK_FILIAL == cFilCorr .And. (cAliasTOP)->CK_PRODUTO == SB1->B1_COD )
			If lFirst
				AADD(aTotais,{"SCK",STR0025+STR0093,0,0}) //"Totais "###"Orçamento de Venda"
				lFirst:=.F.
			EndIf
			oTree:AddItem((cAliasTOP)->CK_NUM+" / "+(cAliasTOP)->CK_ITEM,"19SCK"+StrZero((cAliasTOP)->SCKRECNO,12),"PMSDOC","PMSDOC",,,2)
			aTotais[Len(aTotais),3] += (cAliasTOP)->CK_QTDVEN // Quantidade
			dbSelectArea(cAliasTOP)
			dbSkip()
		EndDo
	Endif
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("SCK")
ElseIf Empty(cAlias) .And. !lTodos
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0093,"19SCK"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Orçamento de Venda"
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Solicitação de Transferencia                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (cAlias $ "NNT" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "NNT"}) == 0)
	dbSelectArea("NNT")
	aAreaBack := GetArea()
	cAliasTop := "NNT"
	cFilCorr := xFilial("NNT")

	cAliasTop := GetNextAlias()
	cQuery := "SELECT NNT_COD ,NNS_DATA ,NNS_SOLICT ,NNT_QUANT, NNT.R_E_C_N_O_ NNTRECNO "
	cQuery += " FROM "+RetSqlName("NNT")+" NNT "
	cQuery += " INNER JOIN "+RetSqlName("NNS")+" NNS "
	cQuery += " ON NNS.NNS_FILIAL = '"+xFilial("NNS")+"' "
	cQuery += " AND NNS.NNS_COD = NNT.NNT_COD "
	cQuery += " AND NNS.NNS_STATUS = '1' "
	cQuery += " AND NNS.D_E_L_E_T_=' ' "
	cQuery += " WHERE NNT.NNT_FILIAL = '"+cFilCorr+"' "
	cQuery += " AND NNT.NNT_PROD = '" + SB1->B1_COD + "' "
	cQuery += " AND NNT.NNT_LOCAL BETWEEN '" +aParc050[06]+"' AND '" +aParc050[07]+"' "
	cQuery += " AND NNT.D_E_L_E_T_ = ' ' "
	cQuery += " ORDER BY "+SqlOrder(NNT->(IndexKey(1)))
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTop)
	aEval(NNS->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasTop,x[1],x[2],x[3],x[4]),Nil)})
	aEval(NNT->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasTop,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasTop)
	If !Eof()
		oTree:TreeSeek("21NNT"+StrZero(0,12))
		lFirst:=.T.
		While !Eof() 
			If lFirst
				AADD(aTotais,{"NNT" ,STR0025+" "+STR0095 ,0 ,0}) //"Totais "### "Solicitação de Transferencia"
				lFirst:=.F.
			EndIf
			oTree:AddItem(NNT_COD+" / "+DTOC(NNS_DATA)+" / "+NNS_SOLICT,"21NNT"+StrZero(NNTRECNO,12),"PMSDOC","PMSDOC",,,2)
			aTotais[Len(aTotais),3] += (cAliasTOP)->NNT_QUANT
			dbSelectArea(cAliasTOP)
			dbSkip()
		EndDo
	Endif
	dbSelectArea(cAliasTop)
	dbCloseArea()
	dbSelectArea("NNT")
ElseIf Empty(cAlias) .And. !lTodos
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem(STR0095,"21NNT"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2) //"Solicitação de Transferência"
EndIf

// MRP
If (cAlias == "MRP" .Or. lTodos) .And. (Ascan(aTotais,{|x| x[1]== "MRP"}) == 0) .And. ! lPyme

	oTree:TreeSeek("16MRP"+StrZero(0,12))

	If Len(aMrp) > 0
		AADD(aTotais,{"MRP",STR0025+"MRP"}) //"Totais "
	EndIf
ElseIf Empty(cAlias) .And. !lTodos .And. ! lPyme
	oTree:TreeSeek("01SB1"+StrZero(SB1->(Recno()),12))
	oTree:AddItem("MRP","16MRP"+StrZero(0,12),"PMSEDT3","PMSEDT3",,,2)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada utilizado para inserir novos nos na arvore da consulta³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MC050TREE")
	ExecBlock("MC050TREE",.F.,.F.,{oTree})
EndIf

oTree:EndUpdate()
oTree:Refresh()
If lTodos
	oTree:TreeSeek(cOldCargo)
EndIf
RestArea(aArea)
Return Nil


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³C040MatScrDisp³ Autor ³Rodrigo de A. Sartorio³ Data ³ 20-12-01³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Monta scroll box com texto dinamico                           ³±±
±±³          ³                        			                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³C040MatScrDisp(ExpA1,ExpO1,ExpO2,ExpA2,ExpA3,ExpA4)          	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array das informacoes		                        ³±±
±±³          ³ ExpO1 = Obj scroll		 			                        ³±±
±±³          ³ ExpO2 = Obj do Painel	 			                        ³±±
±±³          ³ ExpA2 = Array do aPos			                 			³±±
±±³          ³ ExpA3 = Array de Cores (Cols) 		        OPC      		³±±
±±³          ³ ExpA4 = Array de Cores (Lines)	            OPC  			³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum						                              	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Generico                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function C040MatScrDisp(aInfo,oScroll,oPanel,aPos,aCoresCols,aCoresLines)

Local nX,ny,nAchou
Local cCor,cCorDefault:=CLR_BLACK
Local nCols   :=1,nSomaCols:=0
Local nLinAtu := 5
Local nColAtu := 45
Local nColIni := 0
Local uInfo   := Nil
Local oBmp
DEFAULT aCoresCols:={}
DEFAULT aCoresLines:={}
DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para tratamento das informacoes a serem exibidas ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MC050INF")
	uInfo := ExecBlock("MC050INF", .F., .F., {aInfo})
	If ValType(uInfo) == "A"
		aInfo := aClone(uInfo)
	EndIf
EndIf

If Len(aInfo) > 0
	oScroll:= TScrollBox():New(oPanel,aPos[1],aPos[2],aPos[3],aPos[4])
	@ 0,0 BITMAP oBmp RESNAME "LOGIN" oF oScroll SIZE 45,aPos[3] ADJUST NOBORDER WHEN .F. PIXEL
	nCols:=Len(aInfo[1])
	For nx := 1 to Len(aInfo)
		For ny := 1 to nCols
			If CalcFieldSize("C",Len(aInfo[nx,ny]),0) > nSomaCols
				nSomaCols:=CalcFieldSize("C",Len(aInfo[nx,ny]),0)
			EndIf
		Next ny
	Next
	ny := 1
	For nx := 1 to Len(aInfo)
		nAchou  := Ascan(aCoresLines,{|x| x[1]== nx})
		If nAchou > 0
			cCor:=aCoresLines[nAchou,2]
		Else
			cCor:=cCorDefault
		EndIf
		nAchou  := Ascan(aCoresCols,{|x| x[1]== ny})
		If nAchou > 0
			cCor:=aCoresCols[nAchou,2]
		EndIf
		cTextSay:= "{||' "+STRTRAN(aInfo[nx][ny],"'",'"')+" '}"
		oSay    := TSay():New(nLinAtu,nColAtu,MontaBlock(cTextSay),oScroll,,oFont,,,,.T.,cCor,,,,,,,,)
		nLinAtu += 9
	Next
	nLinAtu := 5
	aEval(aInfo, {|z| nColIni := Max(nColIni, CalcFieldSize("C",Len(z[1]),0))})
	nColIni := nColIni * 0.9
	nColAtu := nColIni
	For nx := 1 to Len(aInfo)
		For ny := 2 to nCols
			nAchou  := Ascan(aCoresLines,{|x| x[1]== nx})
			If nAchou > 0
				cCor:=aCoresLines[nAchou,2]
			Else
				cCor:=cCorDefault
			EndIf
			nAchou  := Ascan(aCoresCols,{|x| x[1]== ny})
			If nAchou > 0
				cCor:=aCoresCols[nAchou,2]
			EndIf
			cTextSay:= "{||' "+STRTRAN(aInfo[nx][ny],"'",'"')+" '}"
			oSay    := TSay():New(nLinAtu,nColAtu,MontaBlock(cTextSay),oScroll,,oFont,,.T.,,.T.,cCor,,,,,,,,)
			nColAtu += nSomaCols
		Next ny
		nLinAtu += 9
		nColAtu := nColIni
	Next
EndIf
Return Nil


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Mtc050Kdx ³ Autor ³Rodrigo de A. Sartorio³ Data ³ 26-12-2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada do kardex por dia                                    ³±±
±±³          ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MTC050Kdx()					                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum						                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum						                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MTC050Kdx()

Local bKeyF12 := SetKey( VK_F12 )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se utiliza custo unificado por Empresa/Filial       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE lCusUnif := A330CusFil()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajusta perguntas no SX1 a fim de preparar o relatorio p/     ³
//³ custo unificado por empresa                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCusUnif
	MTC030CUnf()
EndIf
If Pergunte("MTC030",.T.)
	Set Key VK_F12 To
	SetKey( VK_F12, { || pergunte("MTC030",.T.) } )
	MC030Con()
	Set Key VK_F12 To
	SetKey( VK_F12, { || pergunte("MTC050",.T.) } )
EndIf
Pergunte("MTC050",.F.)
Set Key VK_F12 To
Return Nil


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A050Imp  ³ Autor ³Rodrigo de A. Sartorio ³ Data ³ 27/12/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Envia para funcao que faz a impressao da consulta.         ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpL1 := A050Imp(ExpC1,ExpA1)							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arq.				                      ³±±
±±³          ³ ExpA2 = Array dos totais 		                 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1 = .T. se confirmado, caso contrario .F.			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATC050                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A050Imp(cArquivo,aTotais)

LOCAL cTitulo:=STR0041	//"POSICAO ATUAL DE PRODUTO"
LOCAL cDesc1 :=STR0042	//"Este programa ira imprimir a Consulta do Produto selecionado,"
LOCAL cDesc2 :=STR0043	//"informando os dados cadastrais, Movimentacoes em Aberto,"
LOCAL cDesc3 :=STR0044	//"Historico de Movimentacoes, Saldos e Consumos."
LOCAL cString:="SB1"
LOCAL wnrel  :="MATC050"
LOCAL Tamanho :="G"
LOCAL lRet := .T.

PRIVATE aReturn := {STR0045, 1,STR0046, 2, 2, 1, "",1 } //"Zebrado"###"Administracao"
PRIVATE nLastKey:=0

If lRet
	wnRel:= SetPrint(cString,wnrel,Nil,cTitulo,cDesc1,cDesc2,cDesc3,.F.,"",,Tamanho,,.F.)
	If nLastKey = 27
		lRet := .F.
	Endif
EndIf

If lRet
	SetDefault(aReturn,cString)
	If nLastKey = 27
		lRet := .F.
	Endif
EndIf
If lRet
	RptStatus({|lEnd| C050Imp(@lEnd,ctitulo,wnRel,cArquivo,Tamanho,aTotais)},ctitulo)
EndIf
Return(lRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ C050Imp  ³ Autor ³Rodrigo de A. Sartorio ³ Data ³ 27/12/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Envia para funcao que faz a impressao da consulta.         ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ C050Imp(ExpL1,ExpC1,ExpC2,ExpC3,ExpC4,ExpA1)				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 = Var.para controle de interrupcao pelo usuario	  ³±±
±±³          ³ ExpC1 = Titulo do relatorio   							  ³±±
±±³          ³ ExpC2 = Nome do relatorio 	  							  ³±±
±±³          ³ ExpC3 = Alias do arq.     	  							  ³±±
±±³          ³ ExpC4 = Tamanho do relatorio				 			      ³±±
±±³          ³ ExpA1 = Array dos totais                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T.    		                                         	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC050                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function C050Imp(lEnd,ctitulo,wnRel,cArquivo,Tamanho,aTotais)

Local aArea		:=GetArea()
Local aAreaArq	:={}
Local aDemanda	:={}
Local cCabec1	:=cTitulo
Local cCabec2	:=""
Local cAlias	:= ""
Local cNomeProg	:="MATC050"
Local cbtxt		:= SPACE(10)
Local cbcont	:= 0
Local nRecView	:= 0,nPosTotais:= 0
LOCAL cCampo	:= ""
LOCAL nAno		:=0
LOCAL k			:=0
LOCAL nMes		:=0
LOCAL nCol		:=0
LOCAL nTam		:=18
Local nTamCol	:= 0
Local nPosCol	:= 0
Local cTitCol	:= ""	
Local cTitLin	:= ""	

li       := 80
m_pag    := 1

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa os codigos de caracter Comprimido/Normal da impressora ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTipo  := IIF(aReturn[4]==1,15,nTam)

dbSelectArea(cArquivo)
aAreaArq:=GetArea()
dbSetOrder(4) // Seta a ordem pelo cargo do tree
dbGoTop()
SetRegua(RecCount())            // Total de Elementos da Regua
// Laco de todo arquivo
While !EOF()
	cAlias:=SubStr(T_CARGO,3,3)
	nPostotais:=Ascan(aTotais,{|x| x[1]== cAlias})
	// Laco por tipo de arquivo
	While !Eof() .And. cAlias == SubStr(T_CARGO,3,3)
		IncRegua() // Incrementa regua
		IF li > 59
			cabec(cTitulo,cCabec1,cCabec2,cNomeProg,Tamanho,nTipo)
		EndIF
		nRecView:= Val(SubStr(T_CARGO,6,12))
		// Imprime totais
		If nRecView	== 0  .And. nPosTotais > 0
			IF li > 58
				cabec(cTitulo,cCabec1,cCabec2,cNomeProg,Tamanho,nTipo)
			EndIF
			If cAlias == "SA5"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Fornecedor Loja Codigo produto fornecedor Nome Fornecedor
				//1234567890 1234  12345678901234567890     1234567890123456789012345678901234567890
				@ Li,000 PSay STR0047	//"Fornecedor Loja Codigo produto fornecedor Nome Fornecedor"
				li++
			ElseIf cAlias == "SA7"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Cliente    Loja Codigo produto cliente   Descricao produto cliente
				//1234567890 1234  12345678901234567890     123456789012345678901234567890
				If aParc050[08] ==1
					@ Li,000 PSay STR0048	//"Cliente    Loja Codigo produto cliente   Descricao produto cliente"
				Else
					@ Li,000 PSay STR0086  //"Cliente    Loja Codigo produto cliente   Descricao produto cliente Nome Cliente "
				Endif
				li++
			ElseIf cAlias == "SAD"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Fornecedor Loja  Nome Fornecedor                          Nome do Grupo
				//1234567890 1234  1234567890123456789012345678901234567890 123456789012345678901234567890
				@ Li,000 PSay STR0049	//"Fornecedor Loja  Nome Fornecedor                          Nome do Grupo"
				li++
			ElseIf cAlias == "SB2"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Armazem Quantidade Atual Quantidade Final Custo Medio 1  Custo Medio 2  Custo Medio 3  Custo Medio 4  Custo Medio 5  Valor Final 1
				//12      12345678901234   12345678901234   12345678901234 12345678901234 12345678901234 12345678901234 12345678901234 12345678901234
				@ Li,000 PSay STR0050	//"Armazem Quantidade Atual Quantidade Final Custo Medio 1  Custo Medio 2  Custo Medio 3  Custo Medio 4  Custo Medio 5  Valor Final 1"
				li++
			ElseIf cAlias == "SC1"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Numero  Item  Cotacao  Quantidade    Qtd ja entregue  Saldo       Emissao    Pedido Compra Item Grupo Compr Solicitante
				//123456   12   123456  12345678901234 12345678901234  123456789012 1234567890  123456        12   123456     12345678901234
				@ Li,000 PSay STR0051	//"Numero  Item  Cotacao  Quantidade    Qtd ja entregue  Saldo       Emissao    Pedido Compra Item Grupo Compr Solicitante"
				li++
			ElseIf cAlias == "SC2"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Numero OP     Prioridade  Armazem Quantidade   Qtd ja entregue  Perda       Dt Emissao Dt Prev Ini Dt Prev Fim Observacao
				//1234567890123   123        12     123456789012  123456789012   123456789012 1234567890 1234567890  1234567890  1234567890123456789012
				@ Li,000 PSay STR0052	//"Numero OP     Prioridade  Armazem Quantidade   Qtd ja entregue  Perda       Dt Emissao Dt Prev Ini Dt Prev Fim Observacao"
				li++
			ElseIf cAlias == "SC4"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Documento Armazem Quantidade   Valor           Data
				//123456      12    123456789012 12345678901234  1234567890
				@ Li,000 PSay STR0053	//"Documento Armazem Quantidade   Valor           Data"
				li++
			ElseIf cAlias == "SC6"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Numero  Item  Cliente    Loja Quantidade Vend Qtd ja entregue Saldo        Num Reserva
				//123456   12   1234567890 1234 12345678901234  12345678901234  123456789012  123456
				@ Li,000 PSay STR0054	//"Numero  Item  Cliente    Loja Quantidade Vend Qtd ja entregue Saldo        Num Reserva"
				li++
			ElseIf cAlias == "SC7"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Numero  Item  Quantidade    Qtd ja entregue  Saldo        Emissao    Vlr Unitario   Vlr Total     Fornecedor Loja  Cond Pagto
				//123456   12   12345678901234 12345678901234  123456789012 1234567890 123456789012  12345678901234 1234567890 1234     123
				@ Li,000 PSay STR0055	//"Numero  Item  Quantidade    Qtd ja entregue  Saldo        Emissao    Vlr Unitario   Vlr Total     Fornecedor Loja  Cond Pagto"
				li++
			ElseIf cAlias == "SD4"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Numero OP     TRT Qtd Original Saldo        Data
				//1234567890123 123 123456789012 123456789012 1234567890
				@ Li,000 PSay STR0056	//"Numero OP     TRT Qtd Original Saldo        Data"
				li++
			ElseIf cAlias == "SHC"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Quantidade   Data
				//123456789012 1234567890
				@ Li,000 PSay STR0057	//"Quantidade   Data"
				li++
			ElseIf cAlias == "AFJ"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//012345678901234567890123456789012345678901345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Projeto    Tarefa       Quantidade Reserv. Quantidade Atual  Saldo
				//1234567890 123456789012  12345678901234     12345678901234  12345678901234
				@ Li,000 PSay STR0063	//"Projeto    Tarefa       Quantidade Reserv. Quantidade Atual  Saldo"
				li++
			ElseIf cAlias == "SCP"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//012345678901234567890123456789012345678901345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Numero     Item   Quantidade
				//1234567890 12     12345678901234
				@ Li,000 PSay STR0065	//"Numero     Item   Quantidade"
				li++
			ElseIf cAlias == "SCK"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Numero  Item  Cliente    Loja Quantidade Vend Qtd ja entregue Saldo        Num Reserva
				//123456   12   1234567890 1234 12345678901234  12345678901234  123456789012  123456
				@ Li,000 PSay STR0094	//"Numero  Item  Cliente    Loja Quantidade Vend"
				li++
			ElseIf cAlias == "NNT"
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Cod.Transf. Data     Solicitante Quantidade 
				//123456   	  12345678 1234567890  1234567890
				
				cTitLin := ""
				
				nTamCol := TamSX3("NNT_COD")[1]
				cTitCol := RetTitle("NNT_COD")
				If Len(cTitCol) > nTamCol
					nTamCol := Len(cTitCol)
				EndIf
				cTitLin += PadR(cTitCol ,nTamCol+1) 

				nTamCol := TamSX3("NNS_DATA")[1]
				cTitCol := RetTitle("NNS_DATA")
				If Len(cTitCol) > nTamCol
					nTamCol := Len(cTitCol)
				EndIf
				cTitLin += PadR(cTitCol ,nTamCol+1) 

				nTamCol := TamSX3("NNS_SOLICT")[1]
				cTitCol := RetTitle("NNS_SOLICT")
				If Len(cTitCol) > nTamCol
					nTamCol := Len(cTitCol)
				EndIf
				cTitLin += PadR(cTitCol ,nTamCol+1) 

				nTamCol := TamSX3("NNT_QUANT")[1]
				cTitCol := RetTitle("NNT_QUANT")
				If Len(cTitCol) > nTamCol
					nTamCol := Len(cTitCol)
				EndIf
				cTitLin += PadR(cTitCol ,nTamCol+1) 
			
				@ Li,000 PSay cTitLin
				
				li++
			EndIf
		// Imprime registro a registro
		ElseIf nRecView	# 0
			IF li > 59
				cabec(cTitulo,cCabec1,cCabec2,cNomeProg,Tamanho,nTipo)
			EndIF
			If cAlias == "SA5"
				If SA5->(Recno()) # nRecView
					SA5->(dbGoto(nRecView))
				EndIf
				@ li,000 PSay SA5->A5_FORNECE Picture PesqPict("SA5","A5_FORNECE",10)
				@ li,011 PSay SA5->A5_LOJA Picture PesqPict("SA5","A5_LOJA",4)
				@ li,017 PSay SA5->A5_CODPRF Picture PesqPict("SA5","A5_CODPRF",20)
				@ li,042 PSay SA5->A5_NOMEFOR Picture PesqPict("SA5","A5_NOMEFOR",40)
				li++
			ElseIf cAlias == "SA7"
				If SA7->(Recno()) # nRecView
					SA7->(dbGoto(nRecView))
				EndIf
				If aParc050[08] == 2
					SA1->(MsSeek(xFilial("SA1")+SA7->A7_CLIENTE+SA7->A7_LOJA))
				Endif
				@ li,000 PSay SA7->A7_CLIENTE Picture PesqPict("SA7","A7_CLIENTE",10)
				@ li,011 PSay SA7->A7_LOJA Picture PesqPict("SA7","A7_LOJA",4)
				@ li,017 PSay SA7->A7_CODCLI Picture PesqPict("SA7","A7_CODCLI",15)
				@ li,042 PSay SA7->A7_DESCCLI Picture PesqPict("SA7","A7_DESCCLI",30)
				If aParc050[08] == 2
					@ li,073 PSay SA1->A1_NOME Picture PesqPict("SA1","A1_NOME",30)
				Endif
				li++
			ElseIf cAlias == "SAD"
				If SAD->(Recno()) # nRecView
					SAD->(dbGoto(nRecView))
				EndIf
				@ li,000 PSay SAD->AD_FORNECE Picture PesqPict("SAD","AD_FORNECE",10)
				@ li,011 PSay SAD->AD_LOJA Picture PesqPict("SAD","AD_LOJA",4)
				@ li,017 PSay SAD->AD_NOMEFOR Picture PesqPict("SAD","AD_NOMEFOR",40)
				@ li,058 PSay SAD->AD_NOMGRUP Picture PesqPict("SAD","AD_NOMGRUP",30)
				li++
			ElseIf cAlias == "SB1"
				If SB1->(Recno()) # nRecView
					SB1->(dbGoto(nRecView))
				EndIf
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Codigo                         Descricao                      Tipo UM 2a UM Grupo Armz. Padr Ponto de Pedido Lote Econom. Qtd Embalagem Est. Seguran
				@ Li,000 PSay STR0058 //Cabecalho
				li++
				@ li,000 PSay SB1->B1_COD Picture PesqPict("SB1","B1_COD",30)
				@ li,031 PSay Substr(SB1->B1_DESC,1,30) Picture PesqPict("SB1","B1_DESC",30)
				@ li,063 PSay SB1->B1_TIPO Picture PesqPict("SB1","B1_TIPO",2)
				@ li,067 PSay SB1->B1_UM Picture PesqPict("SB1","B1_UM",2)
				@ li,072 PSay SB1->B1_SEGUM Picture PesqPict("SB1","B1_SEGUM",2)
				@ li,076 PSay Substr(SB1->B1_GRUPO,1,4) Picture PesqPict("SB1","B1_GRUPO",4)
				If  RetArqProd(SB1->B1_COD)
					@ li,086 PSay SB1->B1_LOCPAD Picture PesqPict("SB1","B1_LOCPAD",2)
					@ li,094 PSay SB1->B1_EMIN Picture PesqPictQt("B1_EMIN",12)
					@ li,109 PSay SB1->B1_LE Picture PesqPictQt("B1_LE",12)
					@ li,122 PSay SB1->B1_QE Picture PesqPictQt("B1_QE",12)
					@ li,136 PSay SB1->B1_ESTSEG Picture PesqPictQt("B1_ESTSEG",12)
				Else
					@ li,086 PSay SBZ->BZ_LOCPAD Picture PesqPict("SBZ","BZ_LOCPAD",2)
					@ li,094 PSay SBZ->BZ_EMIN Picture PesqPictQt("BZ_EMIN",12)
					@ li,109 PSay SBZ->BZ_LE Picture PesqPictQt("BZ_LE",12)
					@ li,122 PSay SBZ->BZ_QE Picture PesqPictQt("BZ_QE",12)
					@ li,136 PSay SBZ->BZ_ESTSEG Picture PesqPictQt("BZ_ESTSEG",12)
				Endif
				li++;li++
			ElseIf cAlias == "SB2"
				If SB2->(Recno()) # nRecView
					SB2->(dbGoto(nRecView))
				EndIf
				@ li,000 PSay SB2->B2_LOCAL Picture PesqPict("SB2","B2_LOCAL",2)
				@ li,008 PSay SB2->B2_QATU Picture PesqPictQt("B2_QATU",14)
				@ li,025 PSay SB2->B2_QFIM Picture PesqPictQt("B2_QFIM",14)
				@ li,041 PSay SB2->B2_CM1 Picture PesqPict("SB2","B2_CM1",14)
				@ li,056 PSay SB2->B2_CM2 Picture PesqPict("SB2","B2_CM2",14)
				@ li,071 PSay SB2->B2_CM3 Picture PesqPict("SB2","B2_CM3",14)
				@ li,086 PSay SB2->B2_CM4 Picture PesqPict("SB2","B2_CM4",14)
				@ li,101 PSay SB2->B2_CM5 Picture PesqPict("SB2","B2_CM5",14)
				@ li,116 PSay SB2->B2_VFIM1 Picture PesqPict("SB2","B2_VFIM1",14)
				li++
			ElseIf cAlias == "SB3"
				If SB3->(Recno()) # nRecView
					SB3->(dbGoto(nRecView))
				EndIf
				@ Li,000 PSay STR0059	//"Consumo dos Ultimos 12 Meses"
				li++
				nAno   := Year(dDataBase)
				nCol   := 001
				For k:=1 to 12
					nMes := ( ( Month(dDataBase) + 1 ) - k )
					If nMes <= 0
						nAno := Year(dDataBase)-1
						nMes += 12
					EndIf
					cCampo:= "SB3->B3_Q"+StrZero(nMes,2)
					AADD(aDemanda,&cCampo)
					@ li,nCol PSay Subs(MesExtenso(nMes),1,3)+"/"+StrZero(nAno,4)
					nCol+=11
				Next k
				li++
				nCol   := 000
				// Imprime meses
				For k:=1 to Len(aDemanda)
					@ li,nCol PSay aDemanda[k] Picture PesqPictQt("B3_Q01",9)
					nCol+=11
				Next k
				li++;li++
			ElseIf cAlias == "SB5"
				If SB5->(Recno()) # nRecView
					SB5->(dbGoto(nRecView))
				EndIf
				//          1         2         3         4         5         6         7         8         9        10        11        12        13
				//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
				//Descricao Cientifica
				//Preco de Venda 2 Preco de Venda 3 Preco de Venda 4 Preco de Venda 5 Preco de Venda 6 Preco de Venda 7
				//12345678901234   12345678901234   12345678901234   12345678901234   12345678901234   12345678901234
				@ Li,000 PSay STR0060	//"Descricao Cientifica"
				li++
				@ Li,000 PSay Substr(SB5->B5_CEME,1,132) Picture PesqPict("SB5","B5_CEME",132)
				li++
				@ Li,000 PSay STR0061	//"Preco de Venda 2 Preco de Venda 3 Preco de Venda 4 Preco de Venda 5 Preco de Venda 6 Preco de Venda 7"
				li++
				@ li,000 PSay SB5->B5_PRV2 Picture PesqPict("SB5","B5_PRV2",14)
				@ li,017 PSay SB5->B5_PRV3 Picture PesqPict("SB5","B5_PRV3",14)
				@ li,034 PSay SB5->B5_PRV4 Picture PesqPict("SB5","B5_PRV4",14)
				@ li,051 PSay SB5->B5_PRV5 Picture PesqPict("SB5","B5_PRV5",14)
				@ li,068 PSay SB5->B5_PRV6 Picture PesqPict("SB5","B5_PRV6",14)
				@ li,085 PSay SB5->B5_PRV7 Picture PesqPict("SB5","B5_PRV7",14)
				li++;li++
			ElseIf cAlias == "SC1"
				If SC1->(Recno()) # nRecView
					SC1->(dbGoto(nRecView))
				EndIf
				@ li,000 PSay SC1->C1_NUM Picture PesqPict("SC1","C1_NUM",6)
				@ li,009 PSay SC1->C1_ITEM Picture PesqPict("SC1","C1_ITEM",3)
				@ li,014 PSay SC1->C1_COTACAO Picture PesqPict("SC1","C1_COTACAO",6)
				@ li,022 PSay SC1->C1_QUANT Picture PesqPictQt("C1_QUANT",14)
				@ li,037 PSay SC1->C1_QUJE Picture PesqPictQt("C1_QUJE",14)
				@ li,053 PSay (SC1->C1_QUANT-SC1->C1_QUJE) Picture PesqPictQt("C1_QUANT",12)
				@ li,066 PSay SC1->C1_EMISSAO Picture PesqPict("SC1","C1_EMISSAO",10)
				@ li,078 PSay SC1->C1_PEDIDO Picture PesqPict("SC1","C1_PEDIDO",6)
				@ li,092 PSay SC1->C1_ITEMPED Picture PesqPict("SC1","C1_ITEMPED",3)
				@ li,097 PSay SC1->C1_GRUPCOM Picture PesqPict("SC1","C1_GRUPCOM",6)
				@ li,108 PSay SC1->C1_SOLICIT Picture PesqPict("SC1","C1_SOLICIT",14)
				li++
			ElseIf cAlias == "SC2"
				If SC2->(Recno()) # nRecView
					SC2->(dbGoto(nRecView))
				EndIf
				@ li,000 PSay Substr(SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+SC2->C2_ITEMGRD,1,13)
				@ LI,016 PSay SC2->C2_PRIOR Picture PesqPict("SC2","C2_PRIOR",3)
				@ li,027 PSay SC2->C2_LOCAL Picture PesqPict("SC2","C2_LOCAL",2)
				@ li,034 PSay SC2->C2_QUANT Picture PesqPictQt("C2_QUANT",12)
				@ li,048 PSay SC2->C2_QUJE Picture PesqPictQt("C2_QUJE",12)
				@ li,063 PSay SC2->C2_PERDA Picture PesqPictQt("C2_PERDA",12)
				@ li,076 PSay SC2->C2_EMISSAO Picture PesqPict("SC2","C2_EMISSAO",10)
				@ li,087 PSay SC2->C2_DATPRI Picture PesqPict("SC2","C2_DATPRI",10)
				@ li,099 PSay SC2->C2_DATPRF Picture PesqPict("SC2","C2_DATPRF",10)
				@ li,111 PSay SC2->C2_OBS Picture PesqPict("SC2","C2_OBS",22)
				li++
			ElseIf cAlias == "SC4"
				If SC4->(Recno()) # nRecView
					SC4->(dbGoto(nRecView))
				EndIf
				@ li,000 PSay SC4->C4_DOC Picture PesqPict("SC4","C4_DOC",6)
				@ li,012 PSay SC4->C4_LOCAL Picture PesqPict("SC4","C4_LOCAL",2)
				@ li,018 PSay SC4->C4_QUANT Picture PesqPictQt("C4_QUANT",12)
				@ li,031 PSay SC4->C4_VALOR Picture PesqPict("SC4","C4_VALOR",14)
				@ li,047 PSay SC4->C4_DATA Picture PesqPict("SC4","C4_DATA",10)
				li++
			ElseIf cAlias == "SC6"
				If SC6->(Recno()) # nRecView
					SC6->(dbGoto(nRecView))
				EndIf
				@ li,000 PSay SC6->C6_NUM Picture PesqPict("SC6","C6_NUM",6)
				@ li,009 PSay SC6->C6_ITEM Picture PesqPict("SC6","C6_ITEM",2)
				@ li,014 PSay SC6->C6_CLI Picture PesqPict("SC6","C6_CLI",10)
				@ li,025 PSay SC6->C6_LOJA Picture PesqPict("SC6","C6_LOJA",4)
				@ li,030 PSay SC6->C6_QTDVEN Picture PesqPictQt("C6_QTDVEN",14)
				@ li,046 PSay SC6->C6_QTDENT Picture PesqPictQt("C6_QTDENT",14)
				@ li,062 PSay SC6->C6_QTDVEN-SC6->C6_QTDENT Picture PesqPictQt("C6_QTDVEN",12)
				@ li,076 PSay SC6->C6_RESERVA Picture PesqPict("SC6","C6_RESERVA",6)
				li++
			ElseIf cAlias == "SC7"
				If SC7->(Recno()) # nRecView
					SC7->(dbGoto(nRecView))
				EndIf
				@ li,000 PSay SC7->C7_NUM Picture PesqPict("SC7","C7_NUM",6)
				@ li,009 PSay SC7->C7_ITEM Picture PesqPict("SC7","C7_ITEM",3)
				@ li,014 PSay SC7->C7_QUANT Picture PesqPictQt("C7_QUANT",14)
				@ li,029 PSay SC7->C7_QUJE Picture PesqPictQt("C7_QUJE",14)
				@ li,045 PSay (SC7->C7_QUANT-SC7->C7_QUJE) Picture PesqPictQt("C7_QUANT",12)
				@ li,058 PSay SC7->C7_EMISSAO Picture PesqPict("SC7","C7_EMISSAO",10)
				@ li,069 PSay SC7->C7_PRECO Picture PesqPict("SC7","C7_PRECO",12)
				@ li,083 PSay SC7->C7_TOTAL Picture PesqPict("SC7","C7_TOTAL",14)
				@ li,098 PSay SC7->C7_FORNECE Picture PesqPict("SC7","C7_FORNECE",10)
				@ li,109 PSay SC7->C7_LOJA Picture PesqPict("SC7","C7_LOJA",4)
				@ li,118 PSay SC7->C7_COND Picture PesqPict("SC7","C7_COND",3)
				li++
			ElseIf cAlias == "SD4"
				If SD4->(Recno()) # nRecView
					SD4->(dbGoto(nRecView))
				EndIf
				@ li,000 PSay SD4->D4_OP Picture PesqPict("SD4","D4_OP",13)
				@ li,014 PSay SD4->D4_TRT Picture PesqPict("SD4","D4_TRT",3)
				@ li,018 PSay SD4->D4_QTDEORI Picture PesqPictQt("D4_QTDEORI",12)
				@ li,031 PSay SD4->D4_QUANT Picture PesqPictQt("D4_QUANT",12)
				@ li,044 PSay SD4->D4_DATA Picture PesqPict("SD4","D4_DATA",10)
				li++
			ElseIf cAlias == "SHC"
				If SHC->(Recno()) # nRecView
					SHC->(dbGoto(nRecView))
				EndIf
				@ li,000 PSay SHC->HC_QUANT Picture PesqPictQt("HC_QUANT",12)
				@ li,013 PSay SHC->HC_DATA Picture PesqPict("SHC","HC_DATA",10)
				li++
			ElseIf cAlias == "SCP"
				If SCP->(Recno()) # nRecView
					SCP->(dbGoto(nRecView))
				EndIf
				@ li,000 PSay SCP->CP_NUM Picture PesqPict("SCP","CP_NUM",10)
				@ li,011 PSay SCP->CP_ITEM Picture PesqPict("SCP","CP_ITEM",2)
				@ li,018 PSay SCP->CP_QUANT Picture PesqPictQt("CP_QUANT",14)
				li++
			ElseIf cAlias == "AFJ"
				If AFJ->(Recno()) # nRecView
					AFJ->(dbGoto(nRecView))
				EndIf
				@ Li,000 PSay AFJ->AFJ_PROJET
				@ Li,011 PSay AFJ->AFJ_TAREFA
				@ Li,025 PSay AFJ->AFJ_QEMP Picture PesqPictQt("AFJ_QEMP",14)
				@ Li,044 PSay AFJ->AFJ_QATU Picture PesqPictQt("AFJ_QATU",14)
				@ Li,060 PSay MAX(AFJ->AFJ_QEMP - (AFJ->AFJ_QATU + AFJ->AFJ_EMPEST),0) Picture PesqPictQt("AFJ_QEMP",14)
				li++
			ElseIf cAlias == "SCK"
				If SCK->(Recno()) # nRecView
					SCK->(dbGoto(nRecView))
				EndIf
				@ li,000 PSay SCK->CK_NUM Picture PesqPict("SCK","CK_NUM",6)
				@ li,009 PSay SCK->CK_ITEM Picture PesqPict("SCK","CK_ITEM",2)
				@ li,014 PSay SCK->CK_CLIENTE Picture PesqPict("SCK6","CK_CLIENTE",10)
				@ li,025 PSay SCK->CK_LOJA Picture PesqPict("SCK","CK_LOJA",4)
				@ li,030 PSay SCK->CK_QTDVEN Picture PesqPictQt("CK_QTDVEN",14)
				li++
			ElseIf cAlias == "NNT"
				If NNT->(Recno()) # nRecView
					NNT->(dbGoto(nRecView))
				EndIf
				NNS->(dbSetOrder(1))
				NNS->(dbSeek(xFilial("NNS")+NNT->NNT_COD))
				
				nPosCol := 0
				@ li,nPosCol PSay NNT->NNT_COD Picture PesqPict("NNT","NNT_COD")
				nTamCol := TamSX3("NNT_COD")[1]
				cTitCol := RetTitle("NNT_COD")
				If Len(cTitCol) > nTamCol
					nTamCol := Len(cTitCol)
				EndIf
				nPosCol += nTamCol+1

				@ li,nPosCol PSay NNS->NNS_DATA Picture PesqPict("NNS","NNS_DATA")
				nTamCol := TamSX3("NNS_DATA")[1]
				cTitCol := RetTitle("NNS_DATA")
				If Len(cTitCol) > nTamCol
					nTamCol := Len(cTitCol)
				EndIf
				nPosCol += nTamCol+1
				@ li,nPosCol PSay NNS->NNS_SOLICT Picture PesqPict("NNS","NNS_SOLICT")
				nTamCol := TamSX3("NNS_SOLICT")[1]
				cTitCol := RetTitle("NNS_SOLICT")
				If Len(cTitCol) > nTamCol
					nTamCol := Len(cTitCol)
				EndIf
				nPosCol += nTamCol+1
				@ li,nPosCol PSay NNT->NNT_QUANT Picture PesqPict("NNT","NNT_QUANT")
				
				li++
			EndIf
		EndIf
		dbSkip()
	End
	// Imprime totais
	IF li > 59
		cabec(cTitulo,cCabec1,cCabec2,cNomeProg,Tamanho,nTipo)
	EndIF
	If (!Empty(cAlias) .And. cAlias # "MRP") .And. nPosTotais > 0
		@ li,00 PSay aTotais[nPosTotais,2]
		If cAlias $ "SA5/SA7/SAD"
			@ li,00+Len(aTotais[nPosTotais,2])+2 PSay aTotais[nPosTotais,3]
		ElseIf cAlias == "SB2"
			li++
			@ li,008 PSay aTotais[nPosTotais,3] Picture PesqPictQt("B2_QATU",14)
			@ li,117 PSay aTotais[nPosTotais,5] Picture PesqPict("SB2","B2_VFIM1",14)
		ElseIf cAlias == "SC1"
			li++
			@ li,022 PSay aTotais[nPosTotais,3] Picture PesqPictQt("C1_QUANT",14)
			@ li,037 PSay aTotais[nPosTotais,4] Picture PesqPictQt("C1_QUJE",14)
		ElseIf cAlias == "SC7"
			li++
			@ li,014 PSay aTotais[nPosTotais,3] Picture PesqPictQt("C7_QUANT",14)
			@ li,029 PSay aTotais[nPosTotais,4] Picture PesqPictQt("C7_QUJE",14)
		ElseIf cAlias == "SD4"
			li++
			@ li,031 PSay aTotais[nPosTotais,3] Picture PesqPictQt("D4_QUANT",12)
		ElseIf cAlias == "SC2"
			li++
			@ li,034 PSay aTotais[nPosTotais,3] Picture PesqPictQt("C2_QUANT",12)
			@ li,048 PSay aTotais[nPosTotais,4] Picture PesqPictQt("C2_QUJE",12)
			@ li,063 PSay aTotais[nPosTotais,5] Picture PesqPictQt("C2_PERDA",12)
		ElseIf cAlias == "SC4"
			li++
			@ li,018 PSay aTotais[nPosTotais,3] Picture PesqPictQt("C4_QUANT",12)
		ElseIf cAlias == "SC6"
			li++
			@ li,030 PSay aTotais[nPosTotais,3] Picture PesqPictQt("C6_QTDVEN",14)
			@ li,046 PSay aTotais[nPosTotais,4] Picture PesqPictQt("C6_QTDENT",14)
		ElseIf cAlias == "SHC"
			li++
			@ li,000 PSay aTotais[nPosTotais,3] Picture PesqPictQt("HC_QUANT",12)
		ElseIf cAlias == "SCP"
			li++
			@ li,018 PSay aTotais[nPosTotais,3] Picture PesqPictQt("CP_QUANT",14)
		ElseIf cAlias == "AFJ"
			li++
			@ li,060 PSay aTotais[nPosTotais,3] Picture PesqPictQt("AFJ_QATU",14)
		ElseIf cAlias == "SCK"
			li++
			@ li,030 PSay aTotais[nPosTotais,3] Picture PesqPictQt("CK_QTDVEN",14)
		ElseIf cAlias == "NNT"
			li++
			@ li,nPosCol+1 PSay aTotais[nPosTotais,3] Picture PesqPictQt("NNT_QUANT",14)
		EndIf
		li++;li++
	EndIf
End
RestArea(aAreaArq)

IF li != 80
	li++
	roda(cbcont,cbtxt,Tamanho)
EndIF

If aReturn[5] = 1
	Set Printer TO
	dbCommitAll()
	ourspool(wnrel)
Endif
RestArea(aArea)

MS_Flush()

Return(.T.)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ a050MRP  ³ Autor ³ Gilson do Nasciemento ³ Data ³ 29/07/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Envia para funcao que monta o arquivo de trabalho com as   ³±±
±±³          ³ movimentacoes e mostra-o na tela                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ a050MRP(ExpA1,ExpD1,ExpN1,ExpC1)							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array com os movtos. do MRP          			  ³±±
±±³          ³ ExpD1 = Data do movto.        							  ³±±
±±³          ³ ExpN1 = Qtde.             	  							  ³±±
±±³          ³ ExpC1 = tipo do movto. (E/S/R)  							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum  		                                         	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC050                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a050MRP(aMrp,dData,nQtd,cTipo)

Local nPos:=0
nPos := Ascan(aMRP, { |x|x[1] == dData} )
If nPos == 0
	aADD(aMRP,{dData,0,0})
	nPos := Len(aMRP)
Endif
If cTipo=="E"
	aMRP[nPos][2] += nQtd
Else
	aMRP[nPos][3] += nQtd
Endif
Return Nil


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MatScrDisp ³ Autor ³Rodrigo de A. Sartorio³ Data ³ 20-12-2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Monta scroll box com texto dinamico                           ³±±
±±³          ³                       			                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MatScrDisp(ExpA1,ExpO1,ExpO2,ExpA2,ExpA3,ExpA4)          	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array das informacoes		                        ³±±
±±³          ³ ExpO1 = Obj scroll		 			                        ³±±
±±³          ³ ExpO2 = Obj do Painel	 			                        ³±±
±±³          ³ ExpA2 = Array do aPos			                 			³±±
±±³          ³ ExpA3 = Array de Cores (Cols) 		        OPC      		³±±
±±³          ³ ExpA4 = Array de Cores (Lines)	            OPC  			³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum						                              	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Generico                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MatScrDisp(aInfo,oScroll,oPanel,aPos,aCoresCols,aCoresLines)

Local nX,ny,nAchou
Local cCor,cCorDefault:=CLR_BLACK
Local nCols   :=1,nSomaCols:=0
Local nLinAtu := 5
Local nColAtu := 45
Local oBmp
DEFAULT aCoresCols:={}
DEFAULT aCoresLines:={}
DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
If Len(aInfo) > 0
	oScroll:= TScrollBox():New(oPanel,aPos[1],aPos[2],aPos[3],aPos[4])
	@ 0,0 BITMAP oBmp RESNAME "LOGIN" oF oScroll SIZE 45,aPos[3] ADJUST NOBORDER WHEN .F. PIXEL
	nCols:=Len(aInfo[1])
	For nx := 1 to Len(aInfo)
		For ny := 1 to nCols
			If CalcFieldSize("C",Len(aInfo[nx,ny]),0) > nSomaCols
				nSomaCols:=CalcFieldSize("C",Len(aInfo[nx,ny]),0)
			EndIf
		Next ny
	Next
	For nx := 1 to Len(aInfo)
		For ny := 1 to nCols
			nAchou  := Ascan(aCoresLines,{|x| x[1]== nx})
			If nAchou > 0
				cCor:=aCoresLines[nAchou,2]
			Else
				cCor:=cCorDefault
			EndIf
			nAchou  := Ascan(aCoresCols,{|x| x[1]== ny})
			If nAchou > 0
				cCor:=aCoresCols[nAchou,2]
			EndIf
			cTextSay:= "{||' "+STRTRAN(aInfo[nx][ny],"'",'"')+" '}"
			oSay    := TSay():New(nLinAtu,nColAtu,MontaBlock(cTextSay),oScroll,,oFont,,,,.T.,cCor,,,,,,,,)
			nColAtu += nSomaCols
		Next ny
		nLinAtu += 9
		nColAtu := 45
	Next
EndIf
Return Nil


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MCTC050Per³ Autor ³ Rodrigo de A. Sartorio³ Data ³ 06/05/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Salva / Restaura as perguntas existentes                   ³±±
±±³          ³                       			                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpA1 := MTC050Per(ExpL1,ExpA1)                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 = Se .T. salva as perguntas, se .F. restaura   (OPC) ³±±
±±³          ³ ExpA1 = Array das perguntas 							(OPC) ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpA1 = Array das perguntas	                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC050                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MTC050Per(lSalvaPerg,aPerguntas)

Local ni
DEFAULT lSalvaPerg:=.F.
DEFAULT aPerguntas:=Array(40)
For ni := 1 to Len(aPerguntas)
	If lSalvaPerg
		aPerguntas[ni] := &("mv_par"+StrZero(ni,2))
	Else
		&("mv_par"+StrZero(ni,2)) :=	aPerguntas[ni]
	EndIf
Next ni
Return(aPerguntas)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Fabio Alves Silva     ³ Data ³06/11/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³    1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function MenuDef()
PRIVATE aRotina	:= {	{STR0001,"AxPesqui", 0 , 1, 0, .F.},;	 //"Pesquisar"
						{STR0002,"MC050Con", 0 , 2, 0, nil} }	 //"Consulta"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada utilizado para inserir novas opcoes no array aRotina  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MTC050MNU")
	ExecBlock("MTC050MNU",.F.,.F.)
EndIf
Return(aRotina)


/*/{Protheus.doc} M050ExPerg
	(long_description)
	@type  Static Function
	@author Paulo V. Beraldo
	@since Mai/2019
	@version 1.00
	@param param, param_type, param_descr
	@return lRet, boolean, Retorna se o Pergunte deve ser executado ou não
	@example
	(examples)
	@see (links_or_references)
	/*/
Static Function M050ExPerg()
Local lRet			:= .T.
LOCAL lMTC050PG := ExistBlock("MC050PERG")

If ( lMTC050PG )
	lRet	:= ExecBlock("MC050PERG",.F.,.F.,)
	lRet	:= IIf( ValType( lRet ) <> "L", .T., lRet )
EndIf

Return lRet
