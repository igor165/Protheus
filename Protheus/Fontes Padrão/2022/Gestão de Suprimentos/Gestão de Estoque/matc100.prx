#INCLUDE "MATC100.CH"
#INCLUDE "PROTHEUS.CH"
Static bGetSx3 := { | x,y | GetSx3Cache( x, y ) }
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATC100  ³ Autor ³ Edson Maricate        ³ Data ³ 01/12/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Consulta a posicao das SA's.                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Fernando J. ³15/04/99³XXXXXX³Acerto de Macro para o PROTHEUS           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MatC100()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LOCAL cFiltraSCP:= ""
PRIVATE aPos   := {  15,  1, 70, 315 }
PRIVATE oTotal,oTotDes,oCliente
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Array contendo as Rotinas a executar do programa      ³
//³ ----------- Elementos contidos por dimensao ------------     ³
//³ 1. Nome a aparecer no cabecalho                              ³
//³ 2. Nome da Rotina associada                                  ³
//³ 3. Usado pela rotina                                         ³
//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
//³    2 - Simplesmente Mostra os Campos                         ³
//³    3 - Inclui registros no Bancos de Dados                   ³
//³    4 - Altera o registro corrente                            ³
//³    5 - Remove o registro corrente do Banco de Dados          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aRotina := MenuDef()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabecalho da tela de atualizacoes           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE cCadastro := OemToAnsi(STR0003) //"Consulta Posicao das SA's"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verificacao de filtro na Mbrowse                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( ExistBlock("MC100FIL") )
	cFiltraSCP := AllTrim(ExecBlock("MC100FIL",.F.,.F.))
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Endereca a funcao de BROWSE                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
mBrowse( 6,1,22,75,"SCP",,,,,,,,,,,,,,cFiltraSCP)

dbSelectArea("SCP")
dbSetOrder(1)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ca100Visua³ Autor ³ Edson Maricate        ³ Data ³01.12.1998³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria uma consulta com a posicao da S.A.                    ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Void ca100Visua(ExpC1,ExpN1,ExpN2)                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Numero da opcao selecionada                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ca100Visua(cAlias,nReg,nOpcx)
Local nInd			:= 0
Local aArea			:= GetArea()
LOCAL nCnt, nCnt2
LOCAL nSavRec
LOCAL oDlg, oGet, oPanel, oGet2
LOCAL aRetCQ		:= {}
Local oSize			:= FwDefSize():New()
LOCAL nPosRec		:= 0
Local nPosSC		:= 0
Local nMetadinha	:= 0
Local aColsDHN		:= {}
Local aPosDhn		:= {}
Local aAux			:= {}
Local aCpoQtd		:= {}
Local aHeadQtd 		:= {}
Local aHeadCpo 		:= {}
Local aQtdHead		:= { STR0028, STR0004, STR0005 }
Local aHeaderDHN  	:= A105GetSx3( 'DHN' )
Local aHeadAux 		:= A105GetSx3( cAlias, 'CP_NUM|CP_ITEM' )
Local aSx3Cpos		:= { 'X3_TITULO', 'X3_CAMPO', 'X3_PICTURE', 'X3_TAMANHO', 'X3_DECIMAL', 'X3_VALID', 'X3_USADO', 'X3_TIPO', 'X3_ARQUIVO', 'X3_CONTEXT' }

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se existe algum dado no arquivo                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SCP")
dbSetOrder(1)
If RecCount() == 0
	Return .T.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se esta' na filial correta                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cFilial != SCP->CP_FILIAL
	Help(" ",1,"A000FI")
	Return .T.
Endif

PRIVATE cSolic := SCP->CP_SOLICIT, dA105Data := SCP->CP_EMISSAO, cA105Num := SCP->CP_NUM, cDescUnidReq := " "

nSavRec := RecNo()
dbSeek( cFilial+cA105Num )

nCnt := 0
While !EOF() .And. CP_FILIAL+CP_NUM == cFilial+cA105Num
	nCnt++
	dbSkip()
End
If nCnt == 0
	dbGoTo( nSavRec )
	Return .T.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a entrada de dados do arquivo                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aTELA[0][0],aGETS[0],aHeader[0],nUsado:=0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta o cabecalho                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AEval( aSx3Cpos, { | x |  Aadd( aCpoQtd, {  AllTrim( x ), IIf(  AllTrim( x ) == 'X3_TITULO', RetTitle( x ),  Eval( bGetSx3, 'CQ_QUANT', x ) ) } ) } )
For nInd := 1 To Len( aQtdHead )
	aAux := {}
	AEval( aCpoQtd, { | x | Aadd( aAux, IIf(  AllTrim( x[ 1 ] ) == 'X3_TITULO', aQtdHead[ nInd ] ,  x[ 2 ] )   ) } )
	Aadd( aHeadQtd, AClone( aAux ) )
Next nInd

Aadd( aHeadCpo, {STR0006, "bCP_HIST" , Eval( bGetSx3, 'CP_OBS'  , 'X3_PICTURE' ), 40, 0, Eval( bGetSx3, 'CP_OBS', 'X3_VALID' ), Eval( bGetSx3, 'CP_OBS', 'X3_USADO' ), "C", Eval( bGetSx3, 'CP_OBS', 'X3_ARQUIVO' ), Eval( bGetSx3, 'CP_OBS', 'X3_CONTEXT' ) } ) //"Situacao"
Aadd( aHeadCpo, {STR0007, "bCP_NUMSC", Eval( bGetSx3, 'CQ_QUANT', 'X3_PICTURE' ), TamSx3( 'CP_NUMSC' )[ 01 ], TamSx3( 'CP_NUMSC' )[ 02 ], Eval( bGetSx3, 'CQ_QUANT', 'X3_VALID' ), Eval( bGetSx3, 'CQ_QUANT', 'X3_USADO' ), TamSx3( 'CP_NUMSC' )[ 03 ], Eval( bGetSx3, 'CQ_QUANT', 'X3_ARQUIVO' ), Eval( bGetSx3, 'CQ_QUANT', 'X3_CONTEXT' ) } ) //"Numero da SC"
Aadd( aHeadCpo, {STR0008, "bCP_REQU" , Eval( bGetSx3, 'CQ_QUANT', 'X3_PICTURE' ), TamSx3( 'CP_NUMSC' )[ 01 ], TamSx3( 'CP_NUMSC' )[ 02 ], Eval( bGetSx3, 'CQ_QUANT', 'X3_VALID' ), Eval( bGetSx3, 'CQ_QUANT', 'X3_USADO' ), TamSx3( 'CP_NUMSC' )[ 03 ], Eval( bGetSx3, 'CQ_QUANT', 'X3_ARQUIVO' ), Eval( bGetSx3, 'CQ_QUANT', 'X3_CONTEXT' ) } ) //"Numero da Req."
Aadd( aHeadCpo, {STR0026, "bCP_REQU" , Eval( bGetSx3, 'CQ_QUANT', 'X3_PICTURE' ), TamSx3( 'CP_NUMSC' )[ 01 ], TamSx3( 'CP_NUMSC' )[ 02 ], Eval( bGetSx3, 'CQ_QUANT', 'X3_VALID' ), Eval( bGetSx3, 'CQ_QUANT', 'X3_USADO' ), TamSx3( 'CP_NUMSC' )[ 03 ], Eval( bGetSx3, 'CQ_QUANT', 'X3_ARQUIVO' ), Eval( bGetSx3, 'CQ_QUANT', 'X3_CONTEXT' ) } ) //"Num Seq Requi."

For nInd := 1 To Len( aHeadAux )
	Aadd( aHeader, AClone( aHeadAux[ nInd ] ) )
	If AllTrim( aHeadAux[ nInd ][ 02 ] ) == 'CP_QUANT'
		AEval( aHeadQtd,{ | x | Aadd( aHeader, AClone( x ) ) } )
		AEval( aHeadCpo,{ | x | Aadd( aHeader, AClone( x ) ) } )
	EndIf
Next nInd

ADHeadRec(cAlias,aHeader)
nPosRec := Len(aHeader)
nUsado  := Len(aHeader)

PRIVATE aCOLS[ nCnt ][ nUsado ]
nPosSC := Ascan( aHeader,{ | x | AllTrim( x[2] ) == "bCP_NUMSC" } )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona ponteiro do arquivo cabecalho e inicializa variaveis  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( cAlias )
( cAlias )->( dbSetOrder( 1 ) )
( cAlias )->( dbSeek(cFilial + cA105Num ) )

nCnt := 0
While !SCP->( Eof() ) .And. SCP->CP_FILIAL == cFilial .And. SCP->CP_NUM == cA105Num
		nCnt ++
		For nInd := 1 To Len( aHeader )
			If ( aHeader[ nInd ][ 10 ] == 'V' )
				If !( Empty( Eval( bGetSx3, aHeader[ nInd ][ 02 ], 'X3_CAMPO' ) ) )
					aCols[ nCnt ][ nInd ] := CriaVar( aHeader[ nInd ][ 02 ], .T. )
				EndIf
			Else
				aCols[ nCnt ][ nInd ] := SCP->( FieldGet( ColumnPos( aHeader[ nInd ][ 02 ] ) ) )
				If AllTrim( aHeader[ nInd ][ 02 ] ) == 'CP_QUANT'
					aRetCQ := ca100RetCQ(SCP->CP_NUM,SCP->CP_ITEM)
					nInd ++
					aCols[nCnt][ nInd ] := aRetCQ[1]
					nInd ++
					aCols[nCnt][ nInd ] := aRetCQ[2]
					nInd ++
					aCols[nCnt][ nInd ] := aRetCQ[3]
					nInd ++
					aCols[nCnt][ nInd ] := aRetCQ[4]
					nInd ++
					aCols[nCnt][ nInd ] := aRetCQ[5]
					nInd ++
					aCols[nCnt][ nInd ] := aRetCQ[6]
					nInd ++
					If nPosSC >0
						aCols[nCnt][nPosSC] := SCP->CP_NUMSC
					EndIf
				EndIf
			EndIf
		Next nInd
		aCols[nCnt][ nPosRec-1] := cAlias
		aCols[nCnt][ nPosRec  ] := (cAlias)->(Recno())

	(cAlias)->( dbSkip() )	
EndDo

// Monta aHeader da DHN.
nUsado :=  Len( aHeaderDHN )
ADHeadRec( 'DHN', aHeaderDHN )
nPosRec := Len( aHeaderDHN )

// Monta aCols da DHN.
aPosDhn := COMPosDHN({2, {xFilial("DHN"), cA105Num, /*SCP->CP_ITEM*/, /*cTipo*/, 'MATA106'}}, .F.)
If aPosDhn[1]
	For nCnt := 1 to len(aPosDhn[3])
		// Posiciona o registro.
		DHN->(dbGoTo(aPosDhn[3, nCnt]))

		// Adiciona a linha na aCols.
		aAdd(aColsDHN, {})
		For nCnt2 := 1 to len(aHeaderDHN) - 2
			If aHeaderDHN[nCnt2, 10] <> "V"
				aAdd(aCOLSDHN[nCnt], DHN->(FieldGet(FieldPos(aHeaderDHN[nCnt2, 2]))))
			Else
				aAdd(aCOLSDHN[nCnt], CriaVar(aHeaderDHN[nCnt2, 2], .T.))
			Endif
		Next nCnt2
		aAdd(aCOLSDHN[nCnt], 'DHN')
		aAdd(aCOLSDHN[nCnt], aPosDhn[3, nCnt])
		aAdd(aCOLSDHN[nCnt], .F.)  // Marca linha como não excluída.
	Next nCnt
EndIf

oSize:AddObject('HEADER',100, 10,.T.,.T.)
oSize:AddObject('GRID',100, 90,.T.,.T.)

oSize:lProp 		:= .T. // Proporcional
oSize:aMargins 	:= { 3, 3, 3, 3 } // Espaco ao lado dos objetos 0, entre eles 3
oSize:Process()

DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0009) OF oMainWnd PIXEL FROM oSize:aWindSize[1],oSize:aWindSize[2] TO oSize:aWindSize[3],oSize:aWindSize[4]	//"Solicita‡„o ao Almoxarifado"
// Panel
oPanel := TPanel():New(oSize:GetDimension("HEADER","LININI"),oSize:GetDimension("HEADER","COLINI"),'',oDlg,, .T., .T.,, ,oSize:GetDimension("HEADER","XSIZE"),oSize:GetDimension("HEADER","YSIZE"))
//oPanel:Align := CONTROL_ALIGN_TOP 		// Somente Interface MDI

@ 0.5, 2  SAY OemToAnsi(STR0010) OF oPanel 		//"&N£mero"
@ 0.5 ,5  MSGET cA105Num 	When .f. OF oPanel
@ 0.5 ,12 SAY OemToAnsi(STR0011) OF oPanel		//"&Solicitante"
@ 0.5 ,16 MSGET cSolic  Pict "@S10"   	When .f. OF oPanel
@ 0.5 ,26 SAY OemToAnsi(STR0012) OF oPanel		//"&Data de Emiss„o"
@ 0.5 ,32 MSGET dA105Data SIZE 50,0.5	When .f. OF oPanel

If Len(aColsDHN) > 0
	nMetadinha := oSize:GetDimension("GRID","LINEND")/2
Else
	nMetadinha := oSize:GetDimension("GRID","LINEND")
EndIf

oGet := MSGetDados():New(oSize:GetDimension("GRID","LININI"),oSize:GetDimension("GRID","COLINI"),nMetadinha,oSize:GetDimension("GRID","COLEND"),nOpcx,"A105LinOk","A105TudOk","",.F.)

If Len(aColsDHN) > 0
	oGet2 := MsNewGetDados():New(nMetadinha + 5,oSize:GetDimension("GRID","COLINI"),oSize:GetDimension("GRID","LINEND")+50,oSize:GetDimension("GRID","COLEND"),nOpcx,"AllwaysTrue","AllwaysTrue","",,,9999,,,,oDlg,aHeaderDHN,aColsDHN)
EndIf

ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg, {|| oDlg:End()}, {|| oDlg:End()})

RestArea( aArea )
Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ca100RetCQ³ Autor ³ Edson Maricate        ³ Data ³01.12.1998³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna quantidades pendentes, em solicitacao, etc.        ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Void ca100RetCQ(ExpC1,ExpN1,ExpN2)                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Numero da Solicitacao ao Almoxarifado              ³±±
±±³          ³ ExpC2 = Item da Solicitacao ao Almoxarifado                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC100, MATR105                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ca100RetCQ(cNumSA,cItSA)
Local aAreaAnt := GetArea()
Local nQtDisp:=0, nQtSol:=0, cObs := "", nQtSal:=0, cNumReq:=CriaVar("D3_DOC",.F.), cSCNum:=Space(6)
Local cNumSC:= "", lEntregue:=.T., nQtReq:=0, nQUJE,cNumSeq:=Criavar("D3_NUMSEQ")
Local aAreaSD3:=SD3->(GetArea())
Local aArea
Local nQtdSB2 := 0
Local aCampos := {}

SD3->(dbSetOrder(4))
dbSelectArea("SCQ")
dbSetOrder(1)
If dbSeek(xFilial("SCQ")+cNumSA+cItSA)
	While !Eof() .And. xFilial()+SCP->CP_NUM+SCP->CP_ITEM==CQ_FILIAL+CQ_NUM+CQ_ITEM
		aPosDhn := COMPosDHN({2,{SCQ->CQ_FILIAL,SCQ->CQ_NUM,SCQ->CQ_ITEM}})
		If aPosDhn[1] .And. (aPosDhn[2])->DHN_TIPO == "1" .And. Empty(SCQ->CQ_NUMREQ)
			nQtSol += SCQ->CQ_QUANT - SCQ->CQ_QTDISP
			cNumSC := (aPosDhn[2])->DHN_DOCDES
			cItSC  := (aPosDhn[2])->DHN_ITDES
			lEntregue := .F.
		ElseIf Empty(SCQ->CQ_NUMSC) .And. Empty(SCQ->CQ_NUMREQ)
	        aArea := SCQ->(GetArea())
	        dbSelectArea("SB2")
	        dbSeek(xFilial("SB2")+SCQ->CQ_PRODUTO+SCQ->CQ_LOCAL)
	        nQtdSB2 := SaldoSB2()
			nQtSal += SCQ->CQ_QUANT - SCQ->CQ_QTDISP
     		RestArea(aArea)
		EndIf
		If Empty(SCQ->CQ_NUMREQ)
			nQtDisp += SCQ->CQ_QTDISP
		Else
			cNumSeq:=SCQ->CQ_NUMREQ
			If SD3->(dbSeek(xFilial("SD3")+SCQ->CQ_NUMREQ))
				nQtReq += SD3->D3_QUANT
				cNumReq:= SD3->D3_DOC
			EndIf
		EndIf
		cScNum := cNumSC
		If aPosDhn[1]
			(aPosDhn[2])->(DbCloseArea())
		EndIf
		SCQ->(DbSkip())
	EndDo

	nQUJE   := SCP->CP_QUANT-SCP->CP_QUJE
	nQtDisp := If(nQtDisp>nQUJE,nQUJE,nQtDisp)	// Qtde. Disp. Para Entrega Nao Poder Ser Maior Que nQUJE
	nQtSal  += nQtDisp + nQtSol + If(nQtdSB2>0, nQtdSB2, 0)
	nQtSal  := If(nQtSal>nQUJE, nQUJE,nQtSal)		// Saldo Para Entrega Nao Pode Ser Maior Que nQUJE
	If nQtSal == 0
		cObs := OemToAnsi(STR0017)					//"Solicitacao ao Almox. Ja Atendida"
	Else
		If nQtSol==0
			If nQtSal >= SCP->CP_QUANT
				cObs := OemToAnsi(STR0016)			//"Solicitacao ao Almox. Ja Disponivel"
			Else
				cObs := OemToAnsi(STR0025)			//"Solicitacao ao Almox. Parcialmente Atendida"
			EndIf
		Else
			SC1->(dbSeek(xFilial("SC1")+cNumSC+cItSC))
			If nQtDisp==0
				If !Empty(SC1->C1_PEDIDO)
					cObs := OemToAnsi(STR0013)		//"Aguardando Entrega do Material"
				ElseIf !Empty(SC1->C1_COTACAO)
					cObs := OemToAnsi(STR0014)		//"SC em Processo de Cotacao"
				Else
					cObs := OemToAnsi(STR0015)		//"Solicitacao de Compras em Aberto"
				EndIf
			Else
				If nQtSol+nQtDisp == SCP->CP_QUANT
					If !Empty(SC1->C1_PEDIDO)
						cObs := OemToAnsi(STR0019)	//"Sdo Parc. Disp. Aguardando Ent. do Material"
					ElseIf !Empty(SC1->C1_COTACAO)
						cObs := OemToAnsi(STR0020)	//"Sdo Parc. Disponivel Com SC em Processo de Cotacao"
					Else
						cObs := OemToAnsi(STR0021)	//"Sdo Parcialmente Disponivel Com SC em Aberto"
					EndIf
				Else
					If !Empty(SC1->C1_PEDIDO)
						cObs := OemToAnsi(STR0022)	//"Sdo Parc. Atendido Aguardando Ent. do Material"
					ElseIf !Empty(SC1->C1_COTACAO)
						cObs := OemToAnsi(STR0023)	//"Sdo Parc. Atendido Com SC em Processo de Cotacao"
					Else
						cObs := OemToAnsi(STR0024)	//"Sdo Parcialmente Atendido Com SC em Aberto"
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
Else
	nQtSol	:= 0
	nQtDisp := 0
	If SCP->CP_STATUS == "E"
		cObs   := OemToAnsi(STR0027)   			//"Solicitacao ao Almox. ja Encerrada"
	Else
		nQtSal := SCP->CP_QUANT
		cObs   := OemToAnsi(STR0018)			//"Solicitacao ao Almox. em Aberto"
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada MT100CPO - para tratamento de variaveis ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock ("MT100CPO")
	aCampos := ExecBlock ("MT100CPO",.F.,.F.,{nQtSal,nQtDisp,nQtSol,cObs,nQtReq})
	If ValType(aCampos) == "A" .And. Len(aCampos) > 0
		If ValType(aCampos[1]) == "N"
		    nQtSal  := aCampos[1]
		EndIf
		If ValType(aCampos[2]) == "N"
		    nQtDisp := aCampos[2]
		EndIf
		If ValType(aCampos[3]) == "N"
		    nQtSol  := aCampos[3]
		EndIf
		If ValType(aCampos[4]) == "C"
		    cObs    := aCampos[4]
		EndIf
		If ValType(aCampos[5]) == "N"
		    nQtReq  := aCampos[5]
		EndIf
    EndIf
EndIf

SD3->(RestArea(aAreaSD3))
RestArea(aAreaAnt)
Return ({nQtSal,nQtDisp,nQtSol,cObs,cSCNum,cNumReq,nQtReq,cNumSeq})

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Fabio Alves Silva     ³ Data ³05/10/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³    1 - Pesquisa e Posiciona em um Banco de Dados     	  ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
Private aRotina	:=  { { OemToAnsi(STR0001),"AxPesqui"  ,0,1,0,.F.},;	//"Pesquisar"
				 	  { OemToAnsi(STR0002),"ca100Visua",0,2,0,nil}	}	//"Consultar"
If ExistBlock ("MTC100MNU")
	ExecBlock ("MTC100MNU",.F.,.F.)
Endif
Return (aRotina)