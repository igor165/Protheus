#INCLUDE "MATA015.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "msgraphi.ch"
#INCLUDE 'Colors.ch'
#INCLUDE 'FWMVCDEF.CH'
#INCLUDE "FWADAPTEREAI.CH"

//-----------------------------------------------------------------------------------------------------------
/* Browse da rotina de Cadastro de Endereço
@author  	Jefferson Tomaz
@version 	P11 R11.7
@build		7.00.111010P
@since 	10/08/2012
@return 	*/
//-----------------------------------------------------------------------------------------------------------
Function MATA015( xRotAuto, nOpcAuto )

Local   cCadastro	:= OemToAnsi( STR0006 )	//"Localiza‡„o F¡sica"
Private aRotina	:= MenuDef()
Private aRotAuto	:= Nil

Default xRotAuto := Nil
Default nOpcAuto := 3
	
If xRotAuto == Nil
	oMBrowse:= FWMBrowse():New()	
	oMBrowse:SetAlias( "SBE" )
	oMBrowse:SetDescription( cCadastro )
	oMBrowse:Activate()
Else
	aRotAuto := xRotAuto
	FwMvcRotAuto( ModelDef(), "SBE", nOpcAuto, { { "MdFieldSBE", aRotAuto } } )  //Chamada da rotina automatica através do MVC
EndIf

Return

//-----------------------------------------------------------------------------------------------------------
/* Modelo de Dados 
@author  	Jefferson Tomaz
@version 	P11 R11.7
@build		7.00.111010P
@since 	10/08/2012
@return 	*/
//-----------------------------------------------------------------------------------------------------------
Static Function ModelDef()

Local oModel 		:= Nil
Local oStruSBE 	:= FwFormStruct( 1, "SBE" )
Local bPreValid	:= Nil // { |oMdl| A015Alert( , oMdl ) }
Local bPosValid	:= { |oModel| A015TOK( , oModel ) }
Local oEventWMS := MATA015EVWMS():New()

oModel := MpFormModel():New( "MATA015", /*bPre*/, bPosValid /*bPost*/, /*bCommit*/, /*bCancel*/ )
oModel:AddFields( "MdFieldSBE", Nil, oStruSBE, /*Pre-Validacao*/,/*Pos-Validacao*/,/*Carga*/ )
oModel:SetDescription( OemToAnsi( STR0006 ) ) //"Localiza‡„o F¡sica"
oModel:GetModel( "MdFieldSBE" ):SetDescription( OemToAnsi( STR0006 ) )
oModel:SetPrimaryKey( { "BE_FILIAL","BE_LOCAL","BE_LOCALIZ" } )

oModel:InstallEvent("WMSE015", , oEventWMS)

oModel:SetVldActivate( { |oModel| A015AVldA( oModel )  } )

Return( oModel )

//-----------------------------------------------------------------------------------------------------------
/* Retorna a View (tela) da rotina Cadastro de Endereço 
@author  	Jefferson Tomaz
@version 	P11 R11.7
@build		7.00.111010P
@since 	10/08/2012
@return 	*/
//-----------------------------------------------------------------------------------------------------------
Static Function ViewDef()

Local oModel	:= FwLoadModel( "MATA015" )
Local oView	:= Nil
Local oStruSBE	:= FwFormStruct( 2,"SBE" )
Local lWmsNew  := SuperGetMv("MV_WMSNEW",.F.,.F.)

If !lWmsNew .And. WmsX312120("SBE","BE_NRUNIT") 
	oStruSBE:RemoveField('BE_NRUNIT')
EndIf

oView := FwFormView():New()

oView:SetModel( oModel )

oView:CreateHorizontalBox( 'Field'	, 100 )

oStruSBE:SetProperty("BE_VALNV1",MVC_VIEW_CANCHANGE,.F.)
oStruSBE:SetProperty("BE_VALNV2",MVC_VIEW_CANCHANGE,.F.)
oStruSBE:SetProperty("BE_VALNV3",MVC_VIEW_CANCHANGE,.F.)
oStruSBE:SetProperty("BE_VALNV4",MVC_VIEW_CANCHANGE,.F.)
oStruSBE:SetProperty("BE_VALNV5",MVC_VIEW_CANCHANGE,.F.)
oStruSBE:SetProperty("BE_VALNV6",MVC_VIEW_CANCHANGE,.F.)



oView:AddField( 'VwFieldSBE', oStruSBE, 'MdFieldSBE'	)

oView:SetOwnerView( 'VwFieldSBE'	, 'Field'	)

Return( oView )

//===========================================================================================================
/* Retorna as operações disponiveis para o Cadastro de Endereço.
@author  	Jefferson Tomaz
@version 	P11 R11.7
@build		7.00.111010P
@since 	10/08/2012
@return 	aRotina - Array com as opçoes de Menu */                                                                                                         
//===========================================================================================================
Static Function MenuDef()

Private aRotina := {}

aAdd( aRotina, { STR0001, "PesqBrw"          , 0, 1, 0, .T. } ) // Pesquisar
aAdd( aRotina, { STR0002, "VIEWDEF.MATA015"  , 0, 2, 0, .F. } ) // Visualizar
aAdd( aRotina, { STR0003, "VIEWDEF.MATA015"  , 0, 3, 0, Nil } ) // Incluir
aAdd( aRotina, { STR0004, "VIEWDEF.MATA015"  , 0, 4, 0, Nil } ) // Alterar
aAdd( aRotina, { STR0005, "VIEWDEF.MATA015"  , 0, 5, 3, Nil } ) // Excluir
aAdd( aRotina, { STR0017,  "A015Graph"		   , 0, 2, 0 ,Nil } ) // Ocupacao

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada utilizado para inserir novas opcoes no array aRotina  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MTA015MNU")
	ExecBlock("MTA015MNU",.F.,.F.)
EndIf

Return aRotina

//-----------------------------------------------------------------------------------------------------------
/* Executa validacao antes de excluir 
@author  	Jefferson Tomaz
@version 	P11 R11.7
@build		7.00.111010P
@since 	10/08/2012
@return 	*/
//-----------------------------------------------------------------------------------------------------------
Static Function A015AVldA( oMdl )

Local lRet := .T.
Local nOpc := oMdl:GetOperation()

If nOpc == 5
	If SBE->BE_STATUS $ "2|3|4|5|6"
		Help(" ",1,"MATA015001")
		lRet := .F.
	EndIf
	
	If lRet
		lRet := MA015CkSDB()
	Endif	
EndIf
	
Return( lRet ) 

//-----------------------------------------------------------------------------------------------------------
/* Executa validacao antes de incluir / alterar / excluir 
@author  	Jefferson Tomaz
@version 	P11 R11.7
@build		7.00.111010P
@since 	10/08/2012
@return 	*/
//-----------------------------------------------------------------------------------------------------------

Function A015TOK( nOpc, oMdl )

Local lRet   := .T.
Local lMTTOK := ExistBlock('MT015TOK')
Local cLocEnd := ""
Local lIntgMes := PCPIntgPPI()
Local lIntWms  := SuperGetMv("MV_WMSNEW",.F.,.F.) .Or. SuperGetMv("MV_INTWMS",.F.,.F.) // Valida integração com WMS ou Novo WMS

Default nOpc := oMdl:GetOperation()

If lIntgMes .And. lRet
	cLocEnd := oMdl:GetValue('MdFieldSBE','BE_LOCAL')+"+"+oMdl:GetValue('MdFieldSBE','BE_LOCALIZ')
	lRet := MATA015PPI(, cLocEnd, Iif(nOpc==5,.T.,.F.), .T., .F., oMdl)
EndIf

//-- Executa ponto de entrada para validacao
If	lMTTOK
	lRet := ExecBlock('MT015TOK',.F.,.F.,{nOpc})
	If	ValType(lRet) # "L"
		lRet := .T.
	EndIf
EndIf

Return( lRet )


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A015Alert ³Autor³Rodrigo de A. Sartorio ³ Data ³ 01/10/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Pergunta se quer excluir local                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA650                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A015Alert(nOpc, oMdl)
Local lRet   := .F.
Local cLinha1:= STR0010+Alltrim(SBE->BE_LOCAL)+STR0011+Alltrim(SBE->BE_LOCALIZ)+STR0012	//"O almoxarifado "###" localiza‡„o "###" possui "
Local cLinha2:= STR0013	//"saldo em estoque . Excluir esta localiza‡„o impedir  nova(s) "
Local cLinha3:= STR0014	//"distribui‡”es para a mesma. "
Local cLinha4:= STR0015	//"Confirma exclus„o ?"

Default nOpc := oMdl:GetOperation()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Antes de deletar verificar se existe saldo na localizacao    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpc == 5
	dbSelectArea("SBF")
	If dbSeek(xFilial("SBF")+Alltrim(SBE->BE_LOCAL)+Alltrim(SBE->BE_LOCALIZ))
		TONE(3500,1)
		lRet := MsgYesNo(OemToAnsi(cLinha1+cLinha2+cLinha3+cLinha4),OemToAnsi(STR0016+Alltrim(SBE->BE_LOCAL)+" "+Alltrim(SBE->BE_LOCALIZ)))	//"Aten‡„o - "
	Else
		lRet:=.T.
	EndIf
EndIf	

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³A015Graph ºAutor  ³Rodrigo Sartorio    º Data ³  09/01/02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Monta Grafico de Preenchimento                              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A015Graph()

Local aAreaSBE   := SBE->(GetArea())
Local aAreaSBF   := SBF->(GetArea())
Local aObjects   := {}
Local aPosObj    := {}
Local aSize      := MsAdvSize(.F.)
Local aInfo      := {aSize[1], aSize[2], aSize[3], aSize[4], 3, 3}
Local cCorOcu    := ''
Local cCorDes    := ''
Local nTotOcu    := 0
Local nTotDes    := 0
Local oGraph
Local oDlg

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Padroniza as medidas da Janela ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd(aObjects, {100, 015, .T., .F., .F.})
aAdd(aObjects, {100, 100, .T., .T., .T.})
aAdd(aObjects, {100, 015, .T., .F., .F.})
aPosObj := MsObjSize(aInfo, aObjects)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Coleta dados para o Grafico³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SBF->(dbSetOrder(1))
SBE->(dbSetOrder(1))
If SBE->(dbSeek(xFilial('SBE'), .F.))
	If Pergunte('MTA015', .T.)
		Processa({|lEnd| A015FiltGr(mv_par01, mv_par02, mv_par03, mv_par04, mv_par05, mv_par06, mv_par07, mv_par08, @nTotOcu, @nTotDes)}, STR0022) //'Aguarde, Coletando dados para o grafico...' //'Aguarde, Coletando dados para o grafico...'
		DEFINE MSDIALOG oDlg TITLE STR0018 OF oMainWnd PIXEL FROM aSize[7],0 TO aSize[6],aSize[5] //'Grafico de ocupacao dos enderecos'
		@ aPosObj[1,1],aPosObj[1,2] Say STR0019 OF oDlg PIXEL  //'Ocupacao dos Enderecos por Posicao'
		@ aPosObj[2,1],aPosObj[2,2] MSGRAPHIC oGraph SIZE aPosObj[2,3],aPosObj[2,4] OF oDlg PIXEL
		oGraph:SetMargins( 5, 5, 5, 5 )
		oGraph:SetGradient( GDBOTTOMTOP, CLR_HGRAY, CLR_WHITE )
		nSerie := oGraph:CreateSerie( 10 )
		oGraph:Add(nSerie,nTotOcu,STR0020, CLR_HBLUE) //'Enderecos Ocupados'
		oGraph:Add(nSerie,nTotDes,STR0021, CLR_HMAGENTA) //'Enderecos Desocupados'
		oGraph:l3D := .T.    
		DEFINE SBUTTON FROM aPosObj[3,1],aPosObj[3,4]-30 ACTION oDlg:End() ENABLE OF oDlg PIXEL
		ACTIVATE MSDIALOG oDlg
	EndIf	
Else
	Aviso('MATA015', STR0023+xFilial('SBE')+STR0024, {'Ok'}) //'Nao existem registros da filial '###' no Cadastro de Enderecos.'
EndIf	

RestArea(aAreaSBF)
RestArea(aAreaSBE)

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³A015FiltGrºAutor  ³Fernando Joly       º Data ³  17/07/2002 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Filtra os dados para a montagem do Grafico                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A015FiltGr(cArmDe, cArmAte, cZonaDe, cZonaAte, cEstFDe, cEstFAte, cEndDe, cEndAte, nTotOcu, nTotDes)

Local aAreaAnt   := GetArea()
Local aAreaSBE   := SBE->(GetArea())
Local lMT15FGRA  := ExistBlock('MT15FGRA')
Local lRetPE     := .F.
Local lWmsNew    := SuperGetMv("MV_WMSNEW",.F.,.F.)

Default cArmDe     := Space(TamSX3('BE_LOCAL')[1])
Default cArmAte    := Replicate(TamSX3('BE_LOCAL')[1], 'z')
Default cZonaDe    := Space(TamSX3('BE_CODZON')[1])
Default cZonaAte   := Replicate(TamSX3('BE_CODZON')[1], 'z')
Default cEstFDe    := Space(TamSX3('BE_ESTFIS')[1])
Default cEstFAte   := Replicate(TamSX3('BE_ESTFIS')[1], 'z')
Default cEndDe     := Space(TamSX3('BE_LOCALIZ')[1])
Default cEndAte    := Replicate(TamSX3('BE_LOCALIZ')[1], 'z')

dbSelectArea('SBE')
ProcRegua(LastRec())
dbSetOrder(3)
dbSeek(xFilial('SBE')+cArmDe+cZonaDe, .T.)
While !Eof() .And. BE_FILIAL == xFilial('SBE') .And. BE_LOCAL+BE_CODZON <= cArmAte+cZonaAte
	IncProc(STR0022) //'Aguarde, Coletando dados para o grafico...' //'Aguarde, Coletando dados para o grafico...'
	//-- Filtra Estrutura Fisica e Endereco
	If BE_ESTFIS < cEstFDe .Or. BE_ESTFIS > cEstFAte .Or. ;
		BE_LOCALIZ < cEndDe .Or. BE_LOCALIZ > cEndAte
		dbSkip()
		Loop	
	EndIf	
 	If SBF->(dbSeek(xFilial('SBF')+SBE->BE_LOCAL+SBE->BE_LOCALIZ, .F.))
		//-- Ponto de Entrada para Fitragem
		If lMT15FGRA .And. ValType(lRetPE:=ExecBlock('MT15FGRA', .F., .F.))=='L' .And. !lRetPE
			dbSkip()
			Loop
		EndIf
		nTotOcu++
	ElseIf lWmsNew .And. D14->(dbSeek(xFilial('D14')+SBE->BE_LOCAL+SBE->BE_LOCALIZ, .F.))
		//-- Ponto de Entrada para Fitragem
		If lMT15FGRA .And. ValType(lRetPE:=ExecBlock('MT15FGRA', .F., .F.))=='L' .And. !lRetPE
			dbSkip()
			Loop
		EndIf
		nTotOcu++	
	Else
		//-- Ponto de Entrada para Fitragem
		If lMT15FGRA .And. ValType(lRetPE:=ExecBlock('MT15FGRA', .F., .F.))=='L' .And. !lRetPE
			dbSkip()
			Loop
		EndIf
		nTotDes++
	EndIf

	dbSkip()
EndDo 

RestArea(aAreaSBE)
RestArea(aAreaAnt)

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³MATVERCOR ºAutor  ³Fernando Joly       º Data ³  17/07/2002 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Mostra uma tabela de cores com base na include COLOR.CH     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³Retorna um String com o Numero referente a posicao da cor   º±±
±±º          ³no Array.                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function MatVerCor(cCorAnt)

Local aCores     := {	{'CLR_BLACK'	, STR0025}, ; //'Preto          '
						{'CLR_BLUE'		, STR0026}, ; //'Azul escuro    '
						{'CLR_GREEN'	, STR0027}, ; //'Verde escuro   '
						{'CLR_CYAN'		, STR0028}, ; //'Ciano escuro   '
						{'CLR_RED'		, STR0029}, ; //'Vermelho escuro'
						{'CLR_MAGENTA'	, STR0030}, ; //'Magenta escuro '
						{'CLR_BROWN'	, STR0031}, ; //'Marrom         '
						{'CLR_HGRAY'	, STR0032}, ; //'Cinza          '
						{'CLR_LIGHTGRAY', STR0033}, ; //'Cinza claro    '
						{'CLR_GRAY'		, STR0034}, ; //'Cinza escuro   '
						{'CLR_HBLUE'	, STR0035}, ; //'Azul           '
						{'CLR_HGREEN'	, STR0036}, ; //'Verde          '
						{'CLR_HCYAN'	, STR0037}, ; //'Ciano          '
						{'CLR_HRED'		, STR0038}, ; //'Vermelho       '
						{'CLR_HMAGENTA'	, STR0039}, ; //'Magenta        '
						{'CLR_YELLOW'	, STR0040}, ; //'Amarelo        '
						{'CLR_WHITE'	, STR0041}}	  //'Branco         '
Local cRet       := ''
Local nPosAnt    := 0

Default cCorAnt  := '01'

nPosAnt := If((nPosAnt:=Val(cCorAnt))<1,1,If(nPosAnt>17,17,nPosAnt))

aCores := {	{'BR_PRETO'	 , STR0025}, ; //'Preto          '
				{'BR_AZUL'   , STR0026}, ; //'Azul escuro    '
				{'ENABLE'    , STR0027}, ; //'Verde escuro   '
				{'BR_PINK'   , STR0028}, ; //'Ciano escuro   '
				{'DISABLE'   , STR0029}, ; //'Vermelho escuro'
				{'BR_PINK'   , STR0030}, ; //'Magenta escuro '
				{'BR_MARRON' , STR0031}, ; //'Marrom         '
				{'BR_CINZA'  , STR0032}, ; //'Cinza          '
				{'BR_CINZA'  , STR0033}, ; //'Cinza claro    '
				{'BR_CINZA'  , STR0034}, ; //'Cinza escuro   '
				{'BR_AZUL'   , STR0035}, ; //'Azul           '
				{'BR_VERDE'  , STR0036}, ; //'Verde          '
				{'BR_PINK'   , STR0037}, ; //'Ciano          '
				{'DISABLE'   , STR0038}, ; //'Vermelho       '
				{'BR_PINK'   , STR0039}, ; //'Magenta        '
				{'BR_AMARELO', STR0040}, ; //'Amarelo        '
				{'DISABLE'   , STR0041}}   //'Branco         '

cRet := MTA015TCor(cCadastro, STR0042, aCores) //'Cores Disponiveis'

Return cRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³MATRETCOR ºAutor  ³Fernando Joly       º Data ³  17/07/2002 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³Retorna o STR da cor com base na posicao do Array de cores  º±±
±±º          ³gerado pela funcao MATVERCOR.                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function MatRetCor(cCor)

Local aCores     := {	CLR_BLACK		, ;	//-- 01 - Preto
						CLR_BLUE		, ;	//-- 02 - Azul
						CLR_GREEN		, ;	//-- 03 - Verde
						CLR_CYAN		, ;	//-- 04 - Ciano
						CLR_RED			, ;	//-- 05 - Vermelho
						CLR_MAGENTA		, ;	//-- 06 - Magenta
						CLR_BROWN		, ;	//-- 07 - Marrom
						CLR_HGRAY		, ;	//-- 08 - Cinza escuro
						CLR_LIGHTGRAY	, ;	//-- 09 - Cinza claro
						CLR_GRAY		, ;	//-- 10 - Cinza
						CLR_HBLUE		, ;	//-- 11 - Azul escuro
						CLR_HGREEN		, ;	//-- 12 - Verde escuro
						CLR_HCYAN		, ;	//-- 13 - Ciano escuro
						CLR_HRED		, ;	//-- 14 - Vermelho escuro
						CLR_HMAGENTA	, ;	//-- 15 - Magenta escuro
						CLR_YELLOW		, ;	//-- 16 - Amarelo
						CLR_WHITE}       	//-- 17 - Branco
Local cRet       := ''
Local nPos       := 0

Default cCor       := '01'

nPos    := If((nPos:=Val(cCor))<1,1,If(nPos>17,17,nPos))
cRet    := aCores[nPos]

Return cRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³MTA015TCor   ³Rev.  ³Fernando Joly Siquini³ Data ³23/07/2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Janela contendo uma legenda das cores para mBrowse.         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³MTA015TCor(cTitulo,cMensagem,aCores)                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³cTitulo    :Titulo da Janela                                ³±±
±±³          ³cMensagem  :Mensagem exibida                                ³±±
±±³          ³aCores     :Array contendo as cores                         ³±±
±±³          ³nXSize     :Tamanho do Bitmap para ajuste da mensagem       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function MTA015TCor(cTitulo,cMensagem,aCores,nXSize)

Local nY         := 0
Local nX         := 0
Local aBmp[Len(aCores)]
Local aSays[Len(aCores)]
Local cRet       := ''
Local oDlgLeg

Default  nXSize    := 14

DEFINE MSDIALOG oDlgLeg FROM 0,0 TO ((Len(aCores)*20)+50),304 TITLE cTitulo Of oMainWnd PIXEL
oDlgLeg:bLClicked := {||oDlgLeg:End()}
DEFINE FONT oBold NAME 'Arial' SIZE 0, -13 BOLD
@ 00, 00 BITMAP oBmp RESNAME 'PROJETOAP' oF oDlgLeg SIZE 35, 155 NOBORDER WHEN .F. PIXEL
@ 11, 35 TO 13, 400 LABEL '' OF oDlgLeg PIXEL
@ 03, 37 SAY cMensagem Of oDlgLeg PIXEL SIZE 35, 9 FONT oBold
For nX := 1 to Len(aCores)
	@ 19+((nX-1)*10), 44 BITMAP aBmp[nX] RESNAME aCores[nX, 1] of oDlgLeg SIZE 20, 20 NOBORDER WHEN .F. PIXEL
	@ 19+((nX-1)*10), ((nXSize/2)+47) SAY If((nY+=1)==nY, aCores[nY, 2]+If(nY==Len(aCores), If((nY:=0)==nY, '', ''), ''), '') of oDlgLeg PIXEL
Next nX
ACTIVATE MSDIALOG oDlgLeg CENTERED

Return cRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MA015CkSDBºAutor  ³Nereu Humberto Jr.  º Data ³  19/10/07   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se existe movimento com o endereco apos o fecha-  º±±
±±º          ³ mento e nao deixa excluir.                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA015                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MA015CkSDB()
Local aArea     := GetArea()
Local cAliasSDB := ""
Local cQuery    := ""
Local dDataFec  := MVUlmes()
Local cLocal    := SBE->BE_LOCAL
Local cLocaliz  := SBE->BE_LOCALIZ
Local lRet      := .T.
Local lWmsNew   := SuperGetMv("MV_WMSNEW",.F.,.F.)

dbSelectArea("SDB")
dbSetOrder(1)

If !lWmsNew .Or. (Empty(SBE->BE_CODZON) .And. Empty(SBE->BE_ESTFIS))
	dbSelectArea("SDB")
	dbSetOrder(1)

	cAliasSDB := GetNextAlias()
		
	cQuery += "SELECT 1 "		
	cQuery += "FROM " + RetSqlName( "SDB" ) + " SDB "
	cQuery += "WHERE "
	cQuery += "DB_FILIAL ='" + xFilial( "SDB" ) + "' AND "
	cQuery += "DB_DATA > '" + DTOS(dDataFec) + "' AND "
	cQuery += "DB_LOCAL = '" + cLocal + "' AND "
	cQuery += "DB_LOCALIZ = '" + cLocaliz + "' AND "
	cQuery += "DB_ESTORNO = ' ' AND "
	cQuery += "SDB.D_E_L_E_T_=' ' "
		
	cQuery := ChangeQuery( cQuery )
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSDB,.F.,.T. )
		
	If (cAliasSDB)->(!Eof())
		lRet := .F.
		Aviso('MATA015E', STR0051, {'Ok'}) //"Este endereço não pode ser excluido porque possui movimentações com data posterior ao ultimo fechamento"	
	Endif
			
	dbSelectArea(cAliasSDB)
	dbCloseArea()

	dbSelectArea("SDB")
	dbSetOrder(1)	
EndIf
	
RestArea(aArea)

Return(lRet)

//-------------------------------------------------------------------------------------------------
/*/{Protheus.doc} MATA015PPI

Realiza a integração com o PC-Factory - PPI Multitask

@param cXml      - XML que será enviado. Caso não seja passado esse parametro, será realizada
                   a chamada do Adapter para criação do XML.
                   Se for passado esse parâmetro, não será exibida a mensagem de erro caso exista,
                   nem será considerado o filtro da tabela SOE. 
@param cLocEnd   - Obrigatório quando utilizado o parâmetro cXml. Contém o código do local e o código do endereço. ('01+CODENDERECO')
@param lExclusao - Indica se está chamando para rotina de exclusão de produto.
@param lFiltra   - Identifica se será realizado ou não o filtro do registro.
@param lPendAut  - Indica se será gerada a pendência sem realizar a pergunta para o usuário, caso ocorra algum erro.

@author  Lucas Konrad França
@version P118
@since   19/04/2016
@return  lRet  - Indica se a integração com o PC-Factory foi realizada. 
           .T. -> Integração Realizada
           .F. -> Integração não realizada.
/*/
//-------------------------------------------------------------------------------------------------
Function MATA015PPI(cXml, cLocEnd, lExclusao, lFiltra, lPendAut, oModel)
   Local aArea     := GetArea()
   Local lRet      := .T.
   Local aRetXML   := {}
   Local aRetWS    := {}
   Local aRetData  := {}
   Local aRetArq   := {}
   Local cNomeXml  := ""
   Local cGerouXml := ""
   Local cOperacao := ""
   
   Local cEndereco := ""
   Local cLocal    := ""
   
   //Variável utilizada para identificar que está sendo executada a integração para o PPI dentro do MATI200.
   Private lRunPPI := .T.
   //Variável utilizada no filtro
   Private oModelSBE
   
   Default cXml      := ""
   Default cLocEnd   := ""
   Default lExclusao := .F.
   Default lFiltra   := .T.
   Default lPendAut  := .F.
   Default oModel    := Nil

	If !Empty(oModel)
		oModelSBE := oModel:GetModel("MdFieldSBE")
	EndIf

   If Empty(cXml)
      If lExclusao 
         cOperacao := Lower(STR0005) //"excluir"
      Else
         If INCLUI
            cOperacao := Lower(STR0003) //"incluir"
         Else
            cOperacao := Lower(STR0004) //"alterar"
         EndIf
      EndIf
   Else
      If PCPEvntXml(cXml) == "delete"
         lExclusao := .T.
      EndIf
   EndIf

   If Empty(cXml)
      cEndereco := oModel:GetValue("MdFieldSBE","BE_LOCALIZ")
      cLocal    := oModel:GetValue("MdFieldSBE","BE_LOCAL")
   Else
      cLocal    := PadR(StrTokArr(cLocEnd,"+")[1], TAMSX3("BE_LOCAL")[1])
      cEndereco := PadR(StrTokArr(cLocEnd,"+")[2], TAMSX3("BE_LOCALIZ")[1])
   EndIf

   //Realiza filtro na tabela SOE, para verificar se o produto entra na integração.
   If !Empty(cXml) .Or. !lFiltra .Or. PCPFiltPPI("SBE", cLocal+"+"+cEndereco,"oModelSBE:GetValue('?')")
      //Adapter para criação do XML
      If Empty(cXml)
         MATI015MOD(oModel)
         //aRetXML := FwIntegDef("MATA015",,,,"MATA015")
		 aRetXML := MATI015("", TRANS_SEND, EAI_MESSAGE_BUSINESS)
         MATI015MOD(Nil)
      Else
         aRetXML := {.T.,cXml}
      EndIf
      /*
         aRetXML[1] - Status da criação do XML
         aRetXML[2] - String com o XML
      */
      If aRetXML[1]
         //Retira os caracteres especiais
         aRetXML[2] := EncodeUTF8(aRetXML[2])
      
         //Busca a data/hora de geração do XML
         aRetData := PCPxDtXml(aRetXML[2])
         /*
            aRetData[1] - Data de geração AAAAMMDD
            aRetData[1] - Hora de geração HH:MM:SS
         */
      
         //Envia o XML para o PCFactory
         aRetWS := PCPWebsPPI(aRetXML[2])
         /*
            aRetWS[1] - Status do envio (1 - OK, 2 - Pendente, 3 - Erro.)
            aRetWS[2] - Mensagem de retorno do PPI
         */
      
         If aRetWS[1] != "1" .And. Empty(cXml)
            If lPendAut
               lRet := .T.
            Else
	            //"Atenção! Ocorreram erros na integração com o TOTVS MES. Erro: "
	            // XXXXXX
	            // XXXXXX
	            // "Deseja incluir/alterar/excluir o endereço no protheus e gerar pendência para integração?"
	            If !MsgYesNo(STR0052 + AllTrim(aRetWS[2]) + CHR(10)+;
	                         STR0053 + AllTrim(cOperacao) + STR0054)
	               lRet := .F.
	            EndIf
	         EndIf
         EndIf
         
         If lRet
            //Cria o XML fisicamente no diretório parametrizado
            aRetArq := PCPXmLPPI(aRetWS[1],"SBE",cLocal+"+"+cEndereco,aRetData[1],aRetData[2],aRetXML[2])
            /*
               aRetArq[1] Status da criação do arquivo. .T./.F.
               aRetArq[2] Nome do XML caso tenha criado. Mensagem de erro caso não tenha criado o XML.
            */
            If !aRetArq[1]
               If Empty(cXml) .And. !lPendAut
                  Alert(aRetArq[2])
               EndIf
            Else
               cNomeXml := aRetArq[2]
            EndIf
            If Empty(cNomeXml)
               cGerouXml := "2"
            Else
               cGerouXml := "1"
            EndIf
            //Cria a tabela SOF
            PCPCriaSOF("SBE",cLocal+"+"+cEndereco,aRetWS[1],cGerouXml,cNomeXml,aRetData[1],aRetData[2],__cUserId,aRetWS[2],aRetXML[2])
            //Array com os componentes que tiveram erro.
            If Type('aIntegPPI') == "A"
               If aRetWS[1] != "1"
                  aAdd(aIntegPPI,{cLocal+"+"+cEndereco,aRetWS[2]})
               EndIf
            EndIf
         EndIf
      EndIf
   EndIf
   //Tratativa para retornar .F. mesmo quando é pendência automática;
   //Utilizado apenas para o programa de sincronização.
   If (AllTrim(FunName()) == "PCPA111") .And. Len(aRetWs) > 0 .And. aRetWS[1] != "1"
      lRet := .F.
   EndIf
   RestArea(aArea)
Return lRet	
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±º Function  ³ IntegDef º Autor ³ Paulo V. Beraldo     º Data ³  Out/2018   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Descricao ³ Funcao de tratamento para o recebimento/envio de mensagem    º±±
±±º           ³ unica de cadastro de produtos.                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Uso       ³ MATA010                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function IntegDef( xEnt, nTypeTrans, cTypeMessage, cVersion, cTransac, lEAIObj )
Default xEnt := ""
Default nTypeTrans := ""
Default cTypeMessage := ""
Default cVersion := ""
Default cTransac := ""
Default lEAIObj := .F.
Return MATI015(xEnt,nTypeTrans,cTypeMessage, cVersion, cTransac, lEAIObj )
