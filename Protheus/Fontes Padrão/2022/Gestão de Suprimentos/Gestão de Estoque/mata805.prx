#INCLUDE "MATA805.ch"
#INCLUDE "PROTHEUS.CH"
#DEFINE USADO CHR(0)+CHR(0)+CHR(1)

Static a805Cpos := {}

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥ MATA805  ≥ Autor ≥Rodrigo de A. Sartorio ≥ Data ≥ 13/09/00 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥Inclui saldos por localizacao quando existe saldo em estoque≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ Generico                                                   ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø±±
±±≥DescriáÖo ≥ PLANO DE MELHORIA CONTINUA        ≥Programa    MATA805.PRX ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ITEM PMC  ≥ Responsavel              ≥ Data          |BOPS             ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥      01  ≥                          ≥               |                 ≥±±
±±≥      02  ≥ Flavio Luiz Vicco        ≥ 18/05/2006    | 00000099067     ≥±±
±±≥      03  ≥                          ≥               |                 ≥±±
±±≥      04  ≥                          ≥               |                 ≥±±
±±≥      05  ≥                          ≥               |                 ≥±±
±±≥      06  ≥                          ≥               |                 ≥±±
±±≥      07  ≥                          ≥               |                 ≥±±
±±≥      08  ≥                          ≥               |                 ≥±±
±±≥      09  ≥                          ≥               |                 ≥±±
±±≥      10  ≥ Flavio Luiz Vicco        ≥ 18/05/2006    | 00000099067     ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function MATA805()
//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Salva a Integridade dos dados de Entrada                     ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
LOCAL oDlg,nOpca :=0
//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Variaveis utilizadas pelo programa                           ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
Local cAlert     :=STR0001   //"Atencao"
Local cMens      :=""
Local cAlias     :="SDA"
Local cTitulo    :=STR0002 //"Criacao de Saldos por Localizacao"
Local aObjects   :={},aPosObj  :={}
Local aSize      :=MsAdvSize()
Local aInfo      :={aSize[1],aSize[2],aSize[3],aSize[4],3,3}
Local nInd		 := 0
Local aAux		 := {}
Local lM805Dad 	 := ExistBlock("M805DAD")

PRIVATE nUsado	   := 0
PRIVATE cDoc805    :=CriaVar("DA_DOC")
PRIVATE cSerie805  :=SerieNfId("SDA", 5, "DA_SERIE")//CriaVar("DA_SERIE")
PRIVATE aRotina    := { { "" , "        ", 0 , 3}}
PRIVATE nPosLotCtl := 6
PRIVATE nPosLote   := 7
PRIVATE nPosdValid := 9
PRIVATE aProd      := {}
PRIVATE aCols      := {}
PRIVATE aHeader    := A805GetSx3()

TCInternal(5,"*OFF")   // Desliga Refresh no Lock do Top

cMens := STR0003	 //"Esta rotina deve ser executada em modo EXCLUSIVO , e os "
cMens += STR0004 //"produtos a serem digitados nao devem ter nenhum movimento "
cMens += STR0005  //"em aberto (OP's, Empenhos, NF's a faturar, Pedidos a liberar ,etc)."
Tone(3500,1)
If !MsgYesNo(cMens,cAlert)
	Return
EndIf

Tone(3500,1)
cMens := STR0006  //"Este programa foi construido com o objetivo de adequar os Saldos "
cMens += STR0007  //"em Estoque existentes ao controle de Localizacao fisica do "
cMens += STR0008 //"SIGA-ADVANCED.As informacoes digitadas irao alimentar os Saldos "
cMens += STR0009  //"por Localizacao fisica no estoque."
If !MsgYesNo(cMens,cAlert)
	Return
EndIf


//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Montagem do ACols                                            ≥'
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
For nInd := 1 To Len( a805Cpos )
	If a805Cpos[ nInd ][ 02 ] == "B8_DTVALID"
		Aadd( aAux, dDataBase )
	Else
		Aadd( aAux, CriaVar( a805Cpos[ nInd ][ 02 ] , .F. ) )
	EndIf
Next nInd
Aadd( aAux, .F. )
Aadd( aCols, AClone( aAux ) )

If lM805Dad
	ExecBlock("M805DAD",.F.,.F.)
EndIf

dbSelectArea(cAlias)
//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ ATIVA tecla F4 para comunicacao com Saldos dos Lotes         ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
Set Key VK_F4 TO ShowF4()

AADD(aObjects,{100,015,.T.,.F.,.F.})
AADD(aObjects,{100,100,.T.,.T.,.F.})

aPosObj:=MsObjSize(aInfo,aObjects)

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Array com coordenadas da GetDados no modelo2                 ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
nOpca := 0
	DEFINE MSDIALOG oDlg TITLE ctitulo OF oMainWnd PIXEL FROM aSize[7],0 TO aSize[6],aSize[5]
	
	@ aPosObj[1][1],aPosObj[1][2] TO aPosObj[1][3],aPosObj[1][4] LABEL '' OF oDlg PIXEL
	
	@ aPosObj[1][1]+2,015 SAY STR0012 SIZE 30,7 OF oDlg PIXEL //"Documento"
	@ aPosObj[1][1]+2,050 MSGET cDoc805 PICTURE PesqPict("SDA","DA_DOC") SIZE 78,08 OF oDlg PIXEL
	@ aPosObj[1][1]+2,140 SAY STR0013 SIZE 15,7 OF oDlg PIXEL //"Serie"
	@ aPosObj[1][1]+2,160 MSGET cSerie805 PICTURE PesqPict("SDA","DA_SERIE") SIZE 25,08 OF oDlg PIXEL
	oGet := MSGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],1,"A805LinOk","A805TudOk","",.T.)
ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||If(oGet:TudoOK(),(nOpca:=1,oDlg:End()),)},{||oDlg:End()})

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ DESATIVA tecla F4 para comunicacao com Saldos dos Lotes      ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
Set Key VK_F4 TO

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Executa gravacao dos saldos no SBF                           ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
If nOpca == 1
	Processa({|lEnd| MA805Process(@lEnd)},STR0010,STR0011,.F.) //"Saldos por Localizacao"###"Criando saldos no SBF..."
EndIf
Return(NIL)

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥MA805Process≥ Autor ≥ Rodrigo de A. Sartorio≥ Data ≥13/09/00≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥ Processa a inclusao de saldos por localizacao fisica no SBF≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ MATA805                                                    ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
*/
Static Function MA805Process(lEnd)
// Obtem numero sequencial do movimento
LOCAL cNumSeq:=ProxNum(),i
// Numero do Item do Movimento
Local cCounter	:=	StrZero(0,TamSx3('DB_ITEM')[1])
Local lIntegPPI  := PCPIntgPPI()
Local aPPIDelete := {}
Local cSerieDoc	:= ""
Local cEspec		:= CriaVar("F1_ESPECIE")

ProcRegua(Len(aCols))
cSerieDoc:= SerieNfId("SDB",4,"DB_SERIE",dDataBase,cEspec,cSerie805)
// Varre o ACols gravando o SDB
For i:=1 to Len(aCols)
	IncProc()
	If !(aCols[i,Len(aCols[i])])
		cCounter := Soma1(cCounter)
		//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
		//≥Cria registro de movimentacao por Localizacao (SDB)           ≥
		//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
		CriaSDB(aCols[i,1],;	// Produto
				aCols[i,2],;	// Armazem
				aCols[i,4],;	// Quantidade
				aCols[i,3],;	// Localizacao
				aCols[i,8],;	// Numero de Serie
				cDoc805,;		// Doc
				cSerieDoc,;		// Serie
				"",;			// Cliente / Fornecedor
				"",;			// Loja
				"",;			// Tipo NF
				"ACE",;			// Origem do Movimento
				dDataBase,;		// Data
				aCols[i,6],;	// Lote
				If(Rastro(aCols[i,1],"S"),aCols[i,7],""),; // Sub-Lote
				cNumSeq,;		// Numero Sequencial
				"499",;			// Tipo do Movimento
				"M",;			// Tipo do Movimento (Distribuicao/Movimento)
				cCounter,;		// Item
				.F.,;			// Flag que indica se e' mov. estorno
				0,;				// Quantidade empenhado
				aCols[i,5])		// Quantidade segunda UM
		//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
		//≥Soma saldo em estoque por localizacao fisica (SBF)            ≥
		//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
		GravaSBF("SDB")

		// IntegraÁ„o com TOTVS MES
		if lIntegPPI
			dbSelectArea("SOE")
			SOE->(dbSetOrder(1))
			If SOE->(dbSeek(xFilial("SOE")+"SB2")) .AND. ALLTRIM(SOE->OE_VAR3) == '1'
				MATA225PPI(aCols[i,1],; // Produto
							aCols[i,2],; // ArmazÈm
							aCols[i,3],; // LocalizaÁ„o
							aCols[i,8],; // N˙mero de sÈrie
							aCols[i,6],; // Lote
							If(Rastro(aCols[i,1],"S"),aCols[i,7],""),; // Sub-lote
							dDataBase,;  // Data
							aCols[i,4],; // Quantidade
							'1',; // Tipo de movimento
							cNumSeq,; // Sequencia
							cDoc805,; // Documento
							aPPIDelete)
			Endif
		Endif
	EndIf
Next i
Return(NIL)

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥Programa  ≥ A805LinOK≥ Autor ≥ Rodrigo de A. Sartorio≥ Data ≥ 13/09/00 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥ Valida linha da GetDados do programa CRIALOC               ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function A805Linok()

Local aAreaAnt   := GetArea()
Local cMsg1      := STR0022 //'O campo'
Local cMsg2      := STR0023 //'deve ser preenchido'
Local cMsg3      := STR0024 //'na criacao de Saldos por Endereco.'
Local cCod       := ''
Local cArmazem   := ''
Local cEndereco  := ''
Local cNumSeri   := ''
Local cLote      := ''
Local cSubLote   := ''
Local cPicSB2    := ''
Local cPicSB8    := ''
Local cPicQtd    := ''
Local cSeek      := ''
Local lRet       := .T.
Local lRastro    := .F.
Local lRastroS   := .F.
Local lEndereca  := .F.
Local nPosCod    := 0
Local nPosArm    := 0
Local nPosEnd    := 0
Local nPosNSer   := 0
Local nPosLote   := 0
Local nPosSLote  := 0
Local nPosQt2UM  := 0
Local nQuant     := 0
Local nQuant2UM  := 0
Local nQuantTot  := 0
Local nSaldoSB8  := 0
Local nSaldoSBF  := 0
Local nSaldoSB2  := 0
Local nX         := 0
Local nAchou     := 0
Local lMt805lOk  := ExistBlock("MT805LOK")

Do While .T.
	//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
	//≥ Valida se a linha do aCols esta deletada                     ≥
	//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
	If aCols[n,Len(aCols[n])]
		Exit
	EndIf
	cCod      := If((nPosCod:=aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DA_PRODUTO'}))>0,aCols[n,nPosCod],'')	
	cArmazem  := If((nPosArm:=aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DA_LOCAL'}))>0,aCols[n,nPosArm],'')
	cEndereco := If((nPosEnd:=aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DB_LOCALIZ'}))>0,aCols[n,nPosEnd],'')
	cNumSeri  := If((nPosNSer:=aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DB_NUMSERI'}))>0,aCols[n,nPosNSer],'')
	cLote     := If((nPosLote:=aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DA_LOTECTL'}))>0,aCols[n,nPosLote],'')
	cSubLote  := If((nPosSLote:=aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DA_NUMLOTE'}))>0,aCols[n,nPosSLote],'')
	nQuant    := If((nPosQuant:=aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DB_QUANT'}))>0,aCols[n,nPosQuant],0)
	nQuant2UM := If((nPosQt2UM:=aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DB_QTSEGUM'}))>0,aCols[n,nPosQt2UM],0)	
	cPicSB2   := PesqPictQt('B2_QATU')
	cPicSB8   := PesqPictQt('B8_SALDO')
	cPicQtd   := If(nPosQuant>0,aHeader[nPosQuant,3],PesqPict('B2_QATU'))
	//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
	//≥ Valida na linha o preench.e a exist. de campos obrigatorios  ≥
	//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
	cCampos := If(nPosCod==0.Or.Empty(cCod),AllTrim(RetTitle('DA_PRODUTO')),'')
	cCampos += If(nPosArm==0.Or.Empty(cArmazem),If(!Empty(cCampos),', ','')+AllTrim(RetTitle('DA_LOCAL')),'')
	cCampos += If(nPosEnd==0.Or. (Empty(cEndereco) .And. Empty(cNumSeri)),If(!Empty(cCampos),', ','')+AllTrim(RetTitle('DB_LOCALIZ')),'')
	cCampos += If(nPosQuant==0.Or.QtdComp(nQuant)==Qtdcomp(0),If(!Empty(cCampos),', ','')+AllTrim(RetTitle('DB_QUANT')),'')
	If !Empty(cCampos)
		If At(', ',cCampos) > 0
			cMsg1   := STR0025 //'Os campos'
			cMsg2   := STR0026 //'devem ser preenchidos'
			cCampos := Stuff(cCampos, RAt(', ', cCampos), (Len(STR0027)-1), STR0027) //' e '###' e '
		EndIf
		Aviso('MATA805', cMsg1+' '+cCampos+' '+cMsg2+' '+cMsg3, {'Ok'})
		lRet := .F.
		Exit
	EndIf
	lRastro   := Rastro(cCod)
	lRastroS  := Rastro(cCod, 'S')
	lEndereca := Localiza(cCod)
	If !lEndereca
		Aviso('MATA805', STR0028+AllTrim(cCod)+'.', {'Ok'}) //'O Controle de Enderecamento nao foi ativado para o produto '
		lRet := .F.
		Exit
	ElseIf !Empty(cNumSeri) .And. !(QtdComp(nQuant)==QtdComp(1))
		Help(' ',1,'QUANTSERIE')
		lRet := .F.
		Exit
	EndIf
	If (lRastro.And.Empty(cLote)) .Or. (lRastroS.and.(Empty(cLote).Or.Empty(cSubLote)))
		Help(' ',1,'A240NUMLOT')
		lRet := .F.
		Exit
	EndIf
	//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
	//≥ Verifica se o Produto possui Saldo Fisico Disponivel         ≥
	//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
	If lRet
		SB2->(dbSetOrder(1))
		If SB2->(MsSeek(xFilial('SB2')+cCod+cArmazem, .F.))
			If SB2->B2_QEMP > 0
				If (Aviso(UPPER(STR0001)+" !!!",STR0040 + AllTrim(Transform(SB2->B2_QEMP,cPicSB2)) + "." + Chr(13) + Chr(13) + STR0041,{STR0042,STR0043})==1)  //ATENCAO ###"Produto com saldo empenhado de "###"Deseja Continuar o Processo ?"###"Sim"###"Nao"
					nSaldoSB2 := SaldoSB2()
				Else
					lRet := .F.
				EndIf
			Else
				nSaldoSB2 := SaldoSB2()
			EndIf
		EndIf
		For nX := 1 to Len(aCols)
			If !aCols[nX,Len(aCols[nX])] .And. cCod+cArmazem==aCols[nX, nPosCod]+aCols[nX, nPosArm]
				nQuantTot += aCols[nX, nPosQuant]
			EndIf
		Next nX
		nSaldoSBF := SaldoSBF(cArmazem, Nil, cCod, Nil, If(lRastro, cLote, Nil), If(lRastroS, cSubLote, Nil))
		If QtdComp(nSaldoSB2-nSaldoSBF) < QtdComp(nQuantTot)
			Aviso('MATA805', STR0029+AllTrim(cCod)+STR0030+AllTrim(cArmazem)+STR0031+Chr(13)+STR0032+AllTrim(Transform(nSaldoSB2-nSaldoSBF, cPicSB2))+STR0033+AllTrim(Transform(nQuantTot, cPicQtd))+'.', {'Ok'}) //'O Produto '###', do Armazem '###', nao possui Saldo em Estoque disponivel para criacao de Saldos por Endereco.'###'O Saldo disponivel para Enderecamento e de '###', e voce esta tentando Enderecar '
			lRet := .F.
			Exit
		EndIf
	EndIf
	//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
	//≥ Verifica se o Produto possui Saldo por Lote/Slote Disponivel ≥
	//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
	If lRet .And. lRastro
		nSaldoSB8 := SaldoLote(cCod, cArmazem, cLote, cSubLote, Nil, Nil, Nil,dDataBase)
		nQuantTot := 0
		nSaldoSBF := 0
		For nX := 1 to Len(aCols)
			If !aCols[nX,Len(aCols[nX])] .And. cCod+cArmazem+cLote+If(lRastroS,cSubLote,'')==aCols[nX, nPosCod]+aCols[nX, nPosArm]+aCols[nx, nPosLote]+If(lRastroS,aCols[nX, nPosSLote],'')
				nQuantTot += aCols[nX, nPosQuant]
			EndIf
		Next nX
		nSaldoSBF := SaldoSBF(cArmazem, Nil, cCod, Nil, If(lRastro, cLote, Nil), If(lRastroS, cSubLote, Nil))
		If QtdComp(nSaldoSB8-nSaldoSBF) < QtdComp(nQuantTot)
			Aviso('MATA805', STR0029+AllTrim(cCod)+STR0030+AllTrim(cArmazem)+STR0034+AllTrim(cLote)+If(lRastroS,STR0035+AllTrim(cSubLote),'')+STR0036+Chr(13)+STR0032+AllTrim(Transform(nSaldoSB8-nSaldoSBF, cPicSB8))+STR0033+AllTrim(Transform(nQuantTot, cPicQtd))+'.', {'Ok'}) //'O Produto '###', do Armazem '###', nao possui saldo em Estoque no Lote '###'/ Sublote '###' disponivel para a criacao de Saldos po Endereco.'###'O Saldo disponivel para Enderecamento e de '###', e voce esta tentando Enderecar '
			lRet := .F.
			Exit
		EndIf
	EndIf
	//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
	//≥ Verifica se o Endereco suporta a Quantidade da Linha do aCols≥
	//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
	If lRet
		lRet := Capacidade(cArmazem, cEndereco,(nQuant+SaldoSBF(cArmazem, cEndereco, cCod, cNumSeri)), cCod)
	EndIf

	//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
	//≥ Valida quantidade IGUAL A 1 quando usa numero de serie       ≥
	//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
	If lRet
		lRet:=MtAvlNSer(cCod,cNumSeri,nQuant,nQuant2UM)
	EndIf

	//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
	//≥ Verifica se j† nao existe um numero de serie p/ este produto ≥
	//≥ neste almoxarifado.                                          ≥
	//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
	If lRet .And. !Empty(cNumSeri)
		dbSelectArea("SBF")
		dbSetOrder(1)
		cSeek:=xFilial("SBF")+cArmazem+cEndereco+cCod+cNumSeri+cLote+cSubLote
		nAchou:=ASCAN(aCols,{|x| !x[Len(x)] .And. x[nPosNSer] == aCols[n,nPosNSer] })
		If (nAchou > 0 .And. nAchou # n) .Or. dbSeek(cSeek)
			Help(" ",1,"NUMSERIEEX")
			lRet:=.F.
		EndIf
	EndIf
	If lRet .And. ( lMt805lOk )
 		lRet := ExecBlock("MT805LOK",.F.,.F.)
		If ValType(lRet) <> "L"
	     	lRet := .T.
	    EndIf
	EndIf
	Exit
EndDo

RestArea(aAreaAnt)

Return(lRet)

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥Programa  ≥ A805TudOk≥ Autor ≥ Fernando Joly Siquini ≥ Data ≥ 14/02/02 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥ Valida a GetDados do programa CRIALOC                      ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function A805TudOk()

Local aAreaAnt   := GetArea()
Local aSaldoSB2  := {}
Local aSaldoSB8  := {}
Local aSaldoSBF  := {}
Local cMsg1      := STR0022 //'O campo'
Local cMsg2      := STR0023 //'deve ser preenchido'
Local cMsg3      := STR0024 //'na criacao de Saldos por Endereco.'
Local cMsgItem   := ''
Local cMsgItem1  := STR0037 //' (Item numero '
Local cMsgItem2  := STR0038 //' do Documento)'
Local cCod       := ''
Local cArmazem   := ''
Local cEndereco  := ''
Local cNumSeri   := ''
Local cLote      := ''
Local cSubLote   := ''
Local cPicSB2    := ''
Local cPicSB8    := ''
Local cPicQtd    := ''
Local lRet       := .T.
Local lRastro    := .F.
Local lRastroS   := .F.
Local lEndereca  := .F.
Local nPosCod    := 0
Local nPosArm    := 0
Local nPosEnd    := 0
Local nPosNSer   := 0
Local nPosLote   := 0
Local nPosSLote  := 0
Local nX         := 0
Local nQuant     := 0
Local nSaldoSB2  := 0
Local nSaldoSB8  := 0
Local nSaldoSBF  := 0
Local aAreaSDB   := SDB->(GetArea())

nPosCod   := aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DA_PRODUTO'})
nPosArm   := aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DA_LOCAL'})
nPosEnd   := aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DB_LOCALIZ'})
nPosNSer  := aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DB_NUMSERI'})
nPosLote  := aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DA_LOTECTL'})
nPosSLote := aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DA_NUMLOTE'})
nPosQuant := aScan(aHeader,{|x|Upper(Alltrim(x[2]))=='DB_QUANT'})
cPicSB2   := PesqPictQt('B2_QATU')
cPicSB8   := PesqPictQt('B8_SALDO')
cPicQtd   := If(nPosQuant>0,aHeader[nPosQuant,3],PesqPict('B2_QATU'))

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Valida a existencia de campos obrigatorios                   ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
cCampos := If(nPosCod==0,AllTrim(RetTitle('DA_PRODUTO')),'')
cCampos += If(nPosArm==0,If(!Empty(cCampos),', ','')+AllTrim(RetTitle('DA_LOCAL')),'')
cCampos += If(nPosEnd==0,If(!Empty(cCampos),', ','')+AllTrim(RetTitle('DB_LOCALIZ')),'')
cCampos += If(nPosQuant==0,If(!Empty(cCampos),', ','')+AllTrim(RetTitle('DB_QUANT')),'')
If !Empty(cCampos)
	If At(', ',cCampos) > 0
		cMsg1   := STR0025 //'Os campos'
		cMsg2   := STR0026 //'devem ser preenchidos'
		cCampos := Stuff(cCampos, RAt(', ', cCampos), (Len(STR0027)-1), STR0027) //' e '###' e '
	EndIf
	Aviso('MATA805', cMsg1+' '+cCampos+' '+cMsg2+' '+cMsg3, {'Ok'})
	lRet := .F.
EndIf

If lRet
	For nX := 1 to Len(aCols)
		If !aCols[nX,Len(aCols[nX])]
			cMsgItem  := If(Len(aCols)>1,cMsgItem1+StrZero(nX, Len(aCols))+cMsgItem2,'')
			cCod      := aCols[nX,nPosCod]
			cArmazem  := aCols[nX,nPosArm]
			cEndereco := aCols[nX,nPosEnd]
			cNumSeri  := If(nPosNSer>0,aCols[nX,nPosNSer],'')
			cLote     := If(nPosLote>0,aCols[nX,nPosLote],'')
			cSubLote  := If(nPosSLote>0,aCols[nX,nPosSLote],'')
			nQuant    := If(nPosQuant>0,aCols[nX,nPosQuant],0)
			//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
			//≥ Valida o preenchimento de campos obrigatorios                ≥
			//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
			cCampos := If(Empty(cCod),AllTrim(RetTitle('DA_PRODUTO')),'')
			cCampos += If(Empty(cArmazem),If(!Empty(cCampos),', ','')+AllTrim(RetTitle('DA_LOCAL')),'')
			cCampos += If((Empty(cEndereco).and. Empty(cNumSeri)),If(!Empty(cCampos),', ','')+AllTrim(RetTitle('DB_LOCALIZ')),'')
			cCampos += If(QtdComp(nQuant)==Qtdcomp(0),If(!Empty(cCampos),', ','')+AllTrim(RetTitle('DB_QUANT')),'')
			If !Empty(cCampos)
				If At(', ',cCampos) > 0
					cMsg1   := STR0025 //'Os campos'
					cMsg2   := STR0026 //'devem ser preenchidos'
					cCampos := Stuff(cCampos, RAt(', ', cCampos), (Len(STR0027)-1), STR0027) //' e '###' e '
				EndIf
				Aviso('MATA805', cMsg1+' '+cCampos+' '+cMsg2+' '+cMsg3+cMsgItem, {'Ok'})
				lRet := .F.
				Exit
			EndIf
			lRastro   := Rastro(cCod)
			lRastroS  := Rastro(cCod, 'S')
			lEndereca := Localiza(cCod)
			If !lEndereca
				Aviso('MATA805', STR0028+AllTrim(cCod)+'.'+cMsgItem, {'Ok'}) //'O Controle de Enderecamento nao foi ativado para o produto '
				lRet := .F.
				Exit
			ElseIf !Empty(cNumSeri) .And. !(QtdComp(nQuant)==QtdComp(1))
				Help(' ',1,'QUANTSERIE')
				lRet := .F.
				Exit
			EndIf
			If (lRastro.And.Empty(cLote)) .Or. (lRastroS.and.(Empty(cLote).Or.Empty(cSubLote)))
				Help(' ',1,'A240NUMLOT')
				lRet := .F.
				Exit
			EndIf
			If lRet
				SDB->(dbSetOrder(7))
				If SDB->(dbSeek(xFilial("SDB")+cCod+cDoc805+cSerie805+Criavar("DB_CLIFOR",.F.)+Criavar("DB_LOJA",.F.)))
					Help(" ",1,"a24101")
					lRet:=.F.
					Exit
				EndIf
			EndIf
			//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
			//≥ Armazena as Quantidades Distribuidas para analise do SB2     ≥
			//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
			If (nPos:=aScan(aSaldoSB2, {|x|x[1]+x[2]==cCod+cArmazem}))>0
				aSaldoSB2[nPos, 3] += nQuant
			Else
				aAdd(aSaldoSB2, {cCod, cArmazem, nQuant})
			EndIf
			//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
			//≥ Armazena as Quantidades Distribuidas para analise do SBF     ≥
			//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
			If (nPos:=aScan(aSaldoSBF, {|x|x[1]+x[2]+x[3]+x[4]==cCod+cArmazem+cEndereco+cNumSeri}))>0
				aSaldoSBF[nPos, 5] += nQuant
			Else
				aAdd(aSaldoSBF, {cCod, cArmazem, cEndereco, cNumSeri, nQuant})
			EndIf
			If lRastro
				//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
				//≥ Armazena as Quantidades Distribuidas para analise no SB8     ≥
				//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
				If (nPos:=aScan(aSaldoSB8, {|x|x[1]+x[2]+x[3]+If(lRastroS,x[4],'')==cCod+cArmazem+cLote+If(lRastroS,cSubLote,'')}))>0
					aSaldoSB8[nPos, 5] += nQuant
				Else
					aAdd(aSaldoSB8, {cCod, cArmazem, cLote, cSubLote, nQuant})
				EndIf
			EndIf
		EndIf
	Next nX
EndIf

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Verifica se o Produto possui Saldo Fisico para Distribuicao  ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
If lRet
	For nX := 1 to Len(aSaldoSB2)
		nSaldoSB2 := 0
		nSaldoSBF := 0
		SB2->(dbSetOrder(1))
		If SB2->(MsSeek(xFilial('SB2')+aSaldoSB2[nX, 1]+aSaldoSB2[nX, 2], .F.))
			nSaldoSB2 := SaldoSB2()
			nSaldoSBF := SaldoSBF(aSaldoSB2[nX, 2], Nil, aSaldoSB2[nX, 1], Nil)
			If QtdComp(nSaldoSB2-nSaldoSBF) < QtdComp(aSaldoSB2[nX, 3])
				Aviso('MATA805', STR0029+AllTrim(aSaldoSB2[nX, 1])+STR0030+AllTrim(aSaldoSB2[nX, 2])+STR0031+Chr(13)+STR0032+AllTrim(Transform(nSaldoSB2-nSaldoSBF, cPicSB2))+STR0033+AllTrim(Transform(aSaldoSB2[nX, 3], cPicQtd))+'.', {'Ok'}) //'O Produto '###', do Armazem '###', nao possui Saldo em Estoque disponivel para criacao de Saldos por Endereco.'###'O Saldo disponivel para Enderecamento e de '###', e voce esta tentando Enderecar '
				lRet := .F.
				Exit
			EndIf
		Else
			Aviso('MATA805', STR0029+AllTrim(aSaldoSB2[nX, 1])+STR0039+AllTrim(aSaldoSB2[nX, 2])+'.', {'Ok'}) //'O Produto '###'nao possui saldo em estoque do Armazem '
			lRet := .F.
			Exit
		EndIf
	Next nX
EndIf

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Valida se o Produto possui Saldo por Lote a ser Distribuido  ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
If lRet
	For nX := 1 to Len(aSaldoSB8)
		nSaldoSB8 := SaldoLote(aSaldoSB8[nX, 1], aSaldoSB8[nX, 2], aSaldoSB8[nX, 3], aSaldoSB8[nX, 4], Nil, Nil, Nil,dDataBase)
		If QtdComp(nSaldoSB8) < QtdComp(aSaldoSB8[nX, 5])
			lRastroS := Rastro(aSaldoSB8[nX, 1], 'S')
			Aviso('MATA805', STR0029+AllTrim(aSaldoSB8[nX, 1])+STR0030+AllTrim(aSaldoSB8[nX, 2])+STR0034+AllTrim(aSaldoSB8[nX, 3])+If(lRastroS,STR0035+AllTrim(aSaldoSB8[nX, 4]),'')+STR0036+Chr(13)+STR0032+AllTrim(Transform(nSaldoSB8, cPicSB8))+STR0033+AllTrim(Transform(aSaldoSB8[nX, 5], cPicQtd))+'.', {'Ok'}) //'O Produto '###', do Armazem '###', nao possui saldo em Estoque no Lote '###'/ Sublote '###' disponivel para a criacao de Saldos po Endereco.'###'O Saldo disponivel para Enderecamento e de '###', e voce esta tentando Enderecar '
			lRet := .F.
			Exit
		EndIf
	Next nX
EndIf

//⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
//≥ Verifica se o Endereco possui capacidade para a Qtd Total    ≥
//¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
If lRet
	For nX := 1 to Len(aSaldoSBF)
		nSaldoSBF := SaldoSBF(aSaldoSBF[nX, 2], aSaldoSBF[nX, 3], aSaldoSBF[nX, 1], aSaldoSBF[nX, 4])
		If !(lRet:=Capacidade(aSaldoSBF[nX, 2], aSaldoSBF[nX, 3],(aSaldoSBF[nX, 5]+nSaldoSBF), aSaldoSBF[nX, 1]))
			Exit
		EndIf
	Next nX
EndIf	
SDB->(RestArea(aAreaSDB))
RestArea(aAreaAnt)
Return(lRet)

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥Programa  ≥ A805Segum≥ Autor ≥ Rodrigo de A. Sartorio≥ Data ≥ 13/09/00 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥ Converte segunda UNIDADE DE MEDIDA                         ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
*/
Function A805Segum(nAtual)
If nAtual == 1
	aCols[n,5]:=ConvUm(aCols[n,1],&(ReadVar()),aCols[n,5],2)
ElseIf nAtual == 2
	aCols[n,4]:=ConvUm(aCols[n,1],aCols[n,4],&(ReadVar()),1)
EndIf
RETURN .T.

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÑo    ≥ SHOWF4   ≥ Autor ≥ Nereu Humberto Junior ≥ Data ≥ 22/01/07 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÑo ≥ Chamada da funcao F4LOTE e F4LOCALIZ                       ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ MATA805                                                    ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
*/
Static Function ShowF4()
If (Alltrim(ReadVar()) $ "M->DA_LOTECTL/M->DA_NUMLOTE")
	F4Lote(,,,"A650",aCols[n,1],aCols[n,2])
EndIf
Return Nil

/*/{Protheus.doc} A805GetSx3
	Funcao Responsavel por Criar AHeader da Tela de Manutencao
	@type  Static Function
	@author Paulo V. Beraldo
	@since Jul/2020
	@version 1.00
	@return aRet, Array, Vetor com a Estrutura SX3 para Utilizacao no AHeader
/*/
Static Function A805GetSx3()
Local nInd		:= 0
Local aAux		:= {}
Local aRet		:= {}
Local bGetSx3 	:= { | x,y | GetSx3Cache( x, y ) }
Local aSx3Cpos	:= { "X3_TITULO", "X3_CAMPO","X3_PICTURE","X3_TAMANHO","X3_DECIMAL","X3_VALID","X3_USADO","X3_TIPO","X3_ARQUIVO","X3_CONTEXT" }

Aadd( a805Cpos, { "01", "DA_PRODUTO"	, "NaoVazio() .And. ExistCpo('SB1') .And. IF(!(Localiza(M->DA_PRODUTO)),Help(' ',1,'M805LOCALI'),.T.)" } )
Aadd( a805Cpos, { "02", "DA_LOCAL"		, "NaoVazio() .And. Existcpo('SB2',aCols[n,1]+M->DA_LOCAL)" } )
Aadd( a805Cpos, { "03", "DB_LOCALIZ" 	, "ExistCpo('SBE',aCols[n,2]+M->DB_LOCALIZ)" } )
Aadd( a805Cpos, { "04", "DB_QUANT" 	, "M->DB_QUANT > 0 .And. A805Segum(1)" } )
Aadd( a805Cpos, { "05", "DB_QTSEGUM" 	, "A805Segum(2)" } )
Aadd( a805Cpos, { "06", "DA_LOTECTL" 	, "IF(Rastro(aCols[n,1]),NaoVazio(),Vazio())" } )
Aadd( a805Cpos, { "07", "DA_NUMLOTE" 	, "IF(Rastro(aCols[n,1],'S'),NaoVazio(),Vazio())" } )
Aadd( a805Cpos, { "08", "DB_NUMSERI" 	, " " } )
Aadd( a805Cpos, { "09", "B8_DTVALID" 	, "IF(Rastro(aCols[n,1]),NaoVazio(),Vazio())" } )


For nInd := 1 To Len( a805Cpos )
	aAux := {}
		AEval( aSx3Cpos, { | x | Aadd( aAux,;
										IIf( AllTrim( x ) == "X3_TITULO" , AllTrim( RetTitle( a805Cpos[ nInd ][ 02 ] ) ),; 
										IIf( AllTrim( x ) == "X3_VALID"  , AllTrim( a805Cpos[ nInd ][ 03 ] ),; 
										IIf( AllTrim( x ) == "X3_USADO"  , USADO,; 
										Eval( bGetSx3, a805Cpos[ nInd ][ 02 ], x ) ))) ) } )
			Aadd( aRet, AClone( aAux ) )
Next nInd

Return aRet