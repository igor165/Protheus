#INCLUDE "MATC040.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "DBTREE.CH"
#INCLUDE "MSGRAPHI.CH"
#INCLUDE "COLORS.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ MATC040	³ Autor ³ Ary Medeiros			³ Data ³		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de rastreamento dos Sub-Lotes de producao		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Void MATC040(void)										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MATC040()
LOCAL aIndexSB1  :={}
LOCAL cFiltraSB1 :="SB1->B1_RASTRO$'LS'"
LOCAL cNewFiltro

Static nNivMax  := SuperGetMV("MV_C040NIV",.F.,30)
Static lEmpPrev := If(SuperGetMV("MV_QTDPREV")== "S",.T.,.F.)
Static aLine	:= {}


PRIVATE aRecQEL	 :={}
PRIVATE cLocCQ	:= ""
PRIVATE cPerg  	 :="MTC040"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Array contendo as Rotinas a executar do programa 	 ³
//³ ----------- Elementos contidos por dimensao ------------	 ³
//³ 1. Nome a aparecer no cabecalho 							 ³
//³ 2. Nome da Rotina associada									 ³
//³ 3. Usado pela rotina										 ³
//³ 4. Tipo de Transa‡„o a ser efetuada							 ³
//³	 1 - Pesquisa e Posiciona em um Banco de Dados				 ³
//³	 2 - Simplesmente Mostra os Campos							 ³
//³	 3 - Inclui registros no Bancos de Dados					 ³
//³	 4 - Altera o registro corrente								 ³
//³	 5 - Remove o registro corrente do Banco de Dados			 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aRotina := MenuDef()

PRIVATE cCadastro:= OemToAnsi(STR0004) //"Rastreamento de Lotes/SubLotes"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                                    ³
//³ mv_par01        // Tipo do Rastremento ? Onde e' usado/Composicao       ³
//³ mv_par02        // Exibir Lotes Zerados ? Sim/Nao                       ³
//³ mv_par03        // Cli / Forn. de ?                                     ³
//³ mv_par04        // Cli / Forn. ate ?                                    ³
//³ mv_par05        // Loja de ?                                            ³
//³ mv_par06        // Loja ate ?                                           ³
//³ mv_par07        // De Lote ?                                            ³
//³ mv_par08        // Ate Lote ?                                           ³
//³ mv_par09        // De Sub-Lote ?                                        ³
//³ mv_par10        // Ate Sub-Lote ?                                       ³
//³ mv_par11        // de Data de Validade ?                                ³
//³ mv_par12        // Ate Data de Validade ?                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

cLocCQ	:= GetMvNNR('MV_CQ','98')
           
If ( ExistBlock("MC040FIL") )
	cNewFiltro := AllTrim(ExecBlock("MC040FIL",.F.,.F.))
	If Valtype(cNewFiltro) == "C" 
       cFiltraSB1 += ".And. "
       cFiltraSB1 += cNewFiltro
	EndIf
EndIf

dbSelectArea("SB1")
dbSetOrder(1)
dbGoToP()
If ( Eof() )
	HELP(" ",1,"RECNO")
Else
	SetKey(VK_F12, {|| Pergunte(cPerg,.T.)})

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Endereca a funcao de BROWSE									 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	mBrowse( 6, 1,22,75,"SB1",,,,,,,,,,,,,,,,,,cFiltraSB1)

	SetKey(VK_F12, {|| Nil})
EndIf

dbSelectArea("SB1")
dbSetOrder(1)

Return .T.

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ C040Par	³ Autor ³ Ary Medeiros		    ³ Data ³		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Parametros do rastreamento 								  ³±±
±±³			 ³ 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void C040Par(ExpC1,ExpN1)								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo									  ³±±
±±³			 ³ ExpN1 = Numero do registro 								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATC040													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function C040Par(cAlias,nReg,nOpc)

Pergunte(cPerg,.T.)
Return .T.

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ C040Rastro ³ Autor ³ Ary Medeiros		³ Data ³ 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Rastreamento dos Sub-Lotes 								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void C040Rastro(ExpC1,ExpN1)								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo									  ³±±
±±³			 ³ ExpN1 = Numero do registro 								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATC040													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function C040Rastro(cAlias,nReg,nOpc)
Local nOrder:=IndexOrd()

SetKey(VK_F12, {|| Nil})

Pergunte(cPerg,.F.)
dbSelectArea("SD3")
dbSetOrder(4)
dbSelectArea(cAlias)
MC040Con()

dbSelectArea(cAlias)
dbSetOrder(nOrder)
MsGoto(nReg)

SetKey(VK_F12, {|| Pergunte(cPerg,.T.)})
Return .T.

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ MC040Con   ³ Autor ³ Larson Zordan       ³ Data ³11/03/2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Monta Dialog da Consulta do Rastreamento					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATC040													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MC040Con()
Local aEnch[17]
Local aDadosSB8:= {}
Local aDados   := {}
Local aSVAlias := {}
Local aBrw     := {}
Local aDialogs := {""}
Local lMc040Imp:= ExistBlock("MC040IMP")
Local aButtons := { 	{'bmpvisual',{|| If(!lMc040Imp,A040Imp(nSaldo,nSaldoLote,oTree,aRegs),ExecBlock("MC040IMP",.F.,.F.,{nSaldo,nSaldoLote,aRegs}))},STR0042},;  //"Imprimir os Movimentos"
						{'GRAF2D',{|| C040Graph(nTotVenc,nTotZera,nTotUsad)},STR0070}} 	 //"Visualiza Lotes"

Local bChange   := {|| Nil }
Local nTop      := oMainWnd:nTop+23
Local nLeft     := oMainWnd:nLeft+5
Local nBottom   := oMainWnd:nBottom-60
Local nRight    := oMainWnd:nRight-10
Local aPos      := {0,0,((nBottom-nTop)/2)-24,(nRight-nLeft)/2-130}
Local aSize     := {}
Local aObjects  := {}
Local aInfo     := {}
Local aPosObj   := {}
Local nOldEnch  := 1
Local nTotVenc  := nTotZera := nTotUsad := 0
Local dDtValid  := STOD("")
Local cSeekSD5  := ''
Local cQuery    := ''
Local cAliasNew := 'SB8'
Local lQuery    := .F.
Local nSaldoSB8 := 0
Local nRecSldAtu:= 0
Local cPictSaldo:= PesqPictQt("B8_SALDO",15)
Local oPanel,oPanel1,oPanel2,oTree,oBmp,oFolder,oFolder1,oLbx,oScroll
Local nPos,nSaldoB8,lSoma,lFoundSD5
Local ni,nSaldo,dValid

Private oBtnLCq
Private lSubLote  := .F.

Public oDlg,oFont
Public nLotes := nSldTot := nSaldo := nSaldoLote := 0,cLoteFor:="",dTValid,nPotencia:=0
Public cNomeFolder

aRecQEL := {}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria uma linha na ListBox em Branco                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aRegs:={}
If Rastro(SB1->B1_COD,"L")
	AADD(aRegs,{'','','','','','',nil,'',''})
Else
	AADD(aRegs,{'','','','','','','',nil,'',''})
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega as variaveis de memoria do SB1               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aSVAlias,"SB1")
RegToMemory("SB1",.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona para carregar variaveis de memoria do SB8  ³
//³ Executa esse processo para agilizar na visualizacao  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAliasNew)
dbSetOrder(3) //B8_FILIAL+B8_PRODUTO+ B8_LOCAL+B8_LOTECTL+B8_NUMLOTE+DTOS(B8_DTVALID)

	cAliasNew := GetNextAlias()
	lQuery := .T.
	cQuery := " SELECT B8_FILIAL, B8_PRODUTO, B8_LOCAL, B8_LOTECTL, B8_NUMLOTE, B8_DTVALID, B8_DATA,"
	cQuery += " B8_SALDO, B8_SALDO2, B8_QACLASS, B8_QACLAS2, B8_EMPENHO, B8_EMPENH2, B8_QEMPPRE, B8_QEPRE2, R_E_C_N_O_ SB8RECNO"
	cQuery += " FROM "+RetSqlName('SB8')
	cQuery += " WHERE "
	cQuery += " B8_FILIAL      = '"+xFilial("SB8")+"'"
	cQuery += " AND B8_PRODUTO = '"+SB1->B1_COD+"'"
	cQuery += " AND B8_LOTECTL>= '"+MV_PAR07+"'"
	cQuery += " AND B8_LOTECTL<= '"+MV_PAR08+"'"
	If Rastro(SB1->B1_COD,"S")
		cQuery += " AND B8_NUMLOTE>= '"+MV_PAR09+"'"
		cQuery += " AND B8_NUMLOTE<= '"+MV_PAR10+"'"
	EndIf
	cQuery += " AND B8_DTVALID>= '"+DTOS(MV_PAR11)+"'"
	cQuery += " AND B8_DTVALID<= '"+DTOS(MV_PAR12)+"'"
	cQuery += " AND D_E_L_E_T_ = ' '"
	cQuery += " ORDER BY "+SqlOrder(SB8->(IndexKey()))
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,'TOPCONN',TCGENQRY(,,cQuery),cAliasNew,.F.,.T.)
	aEval(SB8->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasNew,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasNew)

If !lQuery
	(cAliasNew)->(dbSeek(xFilial("SB8")+SB1->B1_COD))
EndIf
If (cAliasNew)->(!Eof())
	aAdd(aSVAlias,"SB8")
	While (cAliasNew)->(!Eof() .And. (lQuery .Or. xFilial("SB8")+SB1->B1_COD == B8_FILIAL+B8_PRODUTO))
		cProd    := (cAliasNew)->B8_PRODUTO
		cLocal   := (cAliasNew)->B8_LOCAL
		cLote    := (cAliasNew)->B8_LOTECTL
		cSubL    := (cAliasNew)->B8_NUMLOTE
		lSubLote := Rastro(cProd,"S")
		nSaldoSB8:= 0
		
		nRecSldAtu := If(lQuery,(cAliasNew)->SB8RECNO,Recno())

		While (cAliasNew)->(!Eof() .And. cProd+cLocal+cLote+If(lSubLote,cSubL,"") == B8_PRODUTO+B8_LOCAL+B8_LOTECTL+If(lSubLote,B8_NUMLOTE,""))
			// --- Seleciona Lotes de/ate
			If (!lQuery .And. ((cAliasNew)->B8_LOTECTL < MV_PAR07 .Or. (cAliasNew)->B8_LOTECTL > MV_PAR08))
				(cAliasNew)->(dbSkip())
				Loop
			EndIf

			// --- Seleciona Data de Validade de/ate
			If (!lQuery .And. ((cAliasNew)->B8_DTVALID < MV_PAR11 .Or. (cAliasNew)->B8_DTVALID > MV_PAR12))
				(cAliasNew)->(dbSkip())
				Loop
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Para Rastro = S, verificar se ha movimento no SD5    ³
			//| com D5_ORIGLAN == 999                                |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lSubLote

				// --- Seleciona Sub-Lotes de/ate para rastro = S
				If (!lQuery .And. ((cAliasNew)->B8_NUMLOTE < MV_PAR09 .Or. (cAliasNew)->B8_NUMLOTE > MV_PAR10))
					(cAliasNew)->(dbSkip())
					Loop
				EndIf

				SD5->(dbSetOrder(2))
				If SD5->(dbSeek(xFilial("SD5")+(cAliasNew)->B8_PRODUTO+(cAliasNew)->B8_LOCAL+(cAliasNew)->B8_LOTECTL+(cAliasNew)->B8_NUMLOTE))
					cSeekSD5:= xFilial("SD5")+SD5->D5_NUMSEQ+(cAliasNew)->B8_PRODUTO+(cAliasNew)->B8_LOCAL+(cAliasNew)->B8_LOTECTL+(cAliasNew)->B8_NUMLOTE
					SD5->(dbSetOrder(3))
					If SD5->(dbSeek(cSeekSD5))
						While !SD5->(Eof()) .And. cSeekSD5 == SD5->D5_FILIAL+SD5->D5_NUMSEQ+SD5->D5_PRODUTO+SD5->D5_LOCAL+SD5->D5_LOTECTL+SD5->D5_NUMLOTE
							If SD5->D5_ORIGLAN == "999" .And. SD5->D5_ESTORNO # "S"
								lSoma := .F.
								Exit
							EndIf
							SD5->(dbSkip())
						EndDo
					EndIf
				EndIf
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Recupera o Saldo por Lote                                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nSaldoSB8:=SB8SALDO(,,,,cAliasNew,lEmpPrev,,,.T.)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Nao considerar Lotes/SubLotes com saldo zerado na consulta.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If MV_PAR02 == 2 .And. nSaldoSB8 == 0
				(cAliasNew)->(dbSkip())
				Loop
			EndIf

			lSoma    := .T.
			dDtValid := (cAliasNew)->B8_DTVALID
			nSaldo   := nSaldoSB8
			nSldTot  += nSaldoSB8	// Saldo Total (saldo do lote)
			nPos     := aScan(aDadosSB8, { |x| x[1] == STR0043+cLocal+" -> "+cLote+If(lSubLote," - "+cSubL,"") })
			If nSaldo <> 0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Captura RECNO do ultimo lote com Saldo   			 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ				
				nRecSldAtu := If(lQuery,(cAliasNew)->SB8RECNO,Recno())
		    EndIf
			If nPos == 0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Cria Array com os Lotes/SubLotes para exibir no Tree ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				aAdd(aDadosSB8,{STR0043+cLocal+" -> "+cLote+If(lSubLote," - "+cSubL,""),"SB8", StrZero(If(lQuery,(cAliasNew)->SB8RECNO,Recno()),12) })  //"Amz "
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Soma a quantidade de Lotes/SubLotes do Tree			 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nLotes ++  
			ElseIf nSldTot == 0 .And. nSaldo == 0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Lote com saldo Zerado                   			 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
				aDadosSB8[nPos,3] := StrZero(If(lQuery,(cAliasNew)->SB8RECNO,Recno()),12)
			Else	
				//ÚÄÄÄÄÄÄÄ--------------------ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona RECNO com ultimo saldo para exibicao correta de legenda  		 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ---------------------ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ							
				aDadosSB8[nPos,3] := StrZero((nRecSldAtu),12)
			EndIf
			(cAliasNew)->(dbSkip())
		EndDo
		If lSoma
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Total de quantidades dos Lotes/SubLotes do Produto 	 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If dDtValid < dDataBase .And. nSaldo > 0
				nTotVenc ++			// Total de Lotes Vencidos
			ElseIf nSaldo == 0
				nTotZera ++			// Total de Lotes Zerados
			Else
				nTotUsad ++			// Total de Lotes Em Uso
			EndIf
		EndIf
	EndDo

	If lQuery
		dbSelectArea(cAliasNew)
		dbCloseArea()
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona para carregar variaveis de memoria do SD5  ³
	//³ Executa esse processo para agilizar na visualizacao  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SD5")
	dbSetOrder(2)
	If dbSeek(xFilial("SD5")+SB1->B1_COD)
		aAdd(aSVAlias,"SD5")
	EndIf
    
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Faz o calculo automatico de dimensoes de objetos     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aSize := MsAdvSize(,.F.,400)
	
	AAdd( aObjects, { 100, 100 , .T., .T. } )
	AAdd( aObjects, { 100, 100 , .T., .T. } )
	
	aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 2, 2 }
	aPosObj := MsObjSize( aInfo, aObjects )
	

	cNomeFolder := If(Rastro(SB1->B1_COD,"L"),STR0044,STR0045)  //"Lotes"###"Sub-Lotes"
	cNomeFolder += " -" + If(mv_par01==1,STR0038,STR0039)       //" Onde e Usado "###" Composicao "

	DEFINE FONT oFont NAME "Arial" SIZE 0, -10
	DEFINE MSDIALOG oDlg TITLE cCadastro Of oMainWnd PIXEL FROM nTop,nLeft TO nBottom,nRight
	// Folder do Tree e Panel
	oFolder :=TFolder():New(12,0,{cNomeFolder},{},oDlg,,,, .T., .F.,aPosObj[1][4],nBottom-nTop-12,)
   	oFolder:aDialogs[1]:oFont :=oFont
	// Folder da Legenda
	oFolder1:=TFolder():New(((nBottom-nTop)/2)-45,3,{STR0071},{},oDlg,,,, .T., .F.,(nLeft-5)+125.5,nTop+28,) //"Legenda"
	oFolder1:aDialogs[1]:oFont:=oDlg:oFont   
	// Panel da Legenda
	oPanel2:= TPanel():New(((nBottom-nTop)/2)-33,5,'',, oDlg:oFont, .T., .T.,, ,(nLeft-6)+122,nTop+5,.T.,.T. )
	// Panel das informacoes do Lote/SubLote
	oPanel := TPanel():New(2,130,'',oFolder:aDialogs[1], oDlg:oFont, .T., .T.,, ,(nRight-nLeft)/2-130,((nBottom-nTop)/2)-20,.T.,.T. )
	// Panel das movimentacoes do Lote/SubLote
	oPanel1:= TPanel():New(2,130,'',oFolder:aDialogs[1], oDlg:oFont, .T., .T.,, ,(nRight-nLeft)/2-130,((nBottom-nTop)/2)-20,.T.,.T. )
	// Informacoes do Panel Legenda
	@ 07,08 BITMAP oBmp RESNAME "PMSEDT4" Of oPanel2 Size 9,9 Pixel NoBorder
	@ 07,18 SAY STR0072 Of oPanel2 Size 50,50 Pixel		// "Produto"
	@ 07,65 BITMAP oBmp RESNAME "PMSEDT1" Of oPanel2 Size 9,9 Pixel NoBorder
	@ 07,75 SAY STR0066 Of oPanel2 Size 50,50 Pixel		// "Lotes Vencidos"
	@ 19,08 BITMAP oBmp RESNAME "PMSEDT2" Of oPanel2 Size 9,9 Pixel NoBorder
	@ 19,18 SAY STR0067 Of oPanel2 Size 50,50 Pixel		// "Lotes Zerados"
	@ 19,65 BITMAP oBmp RESNAME "PMSEDT3" Of oPanel2 Size 9,9 Pixel NoBorder
	@ 19,75 SAY STR0068 Of oPanel2 Size 50,50 Pixel		// "Lotes Em Uso"
	//Cria o botao para consulta ao laudo da qualidade fora do panel, para que dentro do panel seja setado apenas a propriedade de visivel e invisivel de acordo com o lote
	If mv_par01 == 2
		@ 16,210 Button oBtnLCq Prompt OemToAnsi(STR0080) Size 48, 13 Of oPanel1 Pixel Action (,,(oPanel1:End(),C040LauCQ(oLbx),));oBtnLCq:oFont:= oPanel1:oFont //"Laudo Qualidade"
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Exibe informacoes de saldo do Lote/SubLote do Produto³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AADD(aDados,{ STR0023+"   "+SB1->B1_COD,SB1->B1_DESC })
	AADD(aDados,{"",""})
	AADD(aDados,{STR0046,Trans(nSldTot  ,cPictSaldo)})	//"Saldo Total do Produto :"
	AADD(aDados,{"",""})
	AADD(aDados,{STR0047,Trans(nLotes   ,cPictSaldo)})	//"Quantidades de Lotes   :"
	AADD(aDados,{"",""})
	AADD(aDados,{STR0059,Trans(nTotVenc ,cPictSaldo)})	//"Qtde. Lotes Vencidos   :"
	AADD(aDados,{"",""})
	AADD(aDados,{STR0060,Trans(nTotZera ,cPictSaldo)})	//"Qtde. Lotes Zerados    :"
	AADD(aDados,{"",""})
	AADD(aDados,{STR0061,Trans(nTotUsad ,cPictSaldo)})	//"Qtde. Lotes Em Uso     :"
	MatScrDisp(aDados,@oScroll,@oPanel,aPos,{{1,CLR_BLUE}})
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta LisBox das movimentacoes dos Lote/SubLote      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Rastro(SB1->B1_COD,"L")		
		@ 46,2 LISTBOX oLbx FIELDS HEADER STR0048,STR0050,If(mv_par01==1,STR0057,STR0058),STR0073,STR0087,STR0088,STR0051,STR0052 SIZE (nRight-nLeft)/2-133,((nBottom-nTop)/2)-73  OF oPanel1 PIXEL  //"Lote"###"Historico"###"Produto"###"Amz. Dest"###"Endereco"###"Num.Serie"###Quantidade"###"Lote Forn"
	Else		
		@ 46,2 LISTBOX oLbx FIELDS HEADER STR0048,STR0049,STR0050,If(mv_par01==1,STR0057,STR0058),STR0073,STR0087,STR0088,STR0051,STR0052 SIZE (nRight-nLeft)/2-133,((nBottom-nTop)/2)-73  OF oPanel1 PIXEL  //"Lote"###"Sub-Lote"###"Historico"###"Produto"###"Amz. Dest"###"Endereco"###"Num.Serie"###Quantidade"###"Lote Forn"
	EndIf
	oLbx:SetArray(aRegs)
	
	
	If Len(aRegs) > 0
		If Rastro(SB1->B1_COD,"L")					
			oLbx:bLine := {|| {aRegs[oLbx:nAT,1], aRegs[oLbx:nAT,2], aRegs[oLbx:nAT,3], aRegs[oLbx:nAT,4], aRegs[oLbx:nAT,8], aRegs[oLbx:nAT,9], aRegs[oLbx:nAT,5], aRegs[oLbx:nAT,6]} }
		Else			
			oLbx:bLine := {|| {aRegs[oLbx:nAT,1], aRegs[oLbx:nAT,2], aRegs[oLbx:nAT,3], aRegs[oLbx:nAT,4], aRegs[oLbx:nAT,5], aRegs[oLbx:nAT,9], aRegs[oLbx:nAT,10], aRegs[oLbx:nAT,6], aRegs[oLbx:nAT,7]} }
		EndIf
	EndIf
	oLbx:Hide()
	oPanel1:Hide()
	// Informacoes para montagem do Tree
	oTree:= dbTree():New(2, 2,((nBottom-nTop)/2)-70,129,oFolder:aDialogs[1],,,.T.)
	oTree:bChange := {|| MC040View(@oTree,aSValias,@oLbx,aPos,@nOldEnch,@oPanel,@oScroll,@oPanel1),Eval(bChange)}
	oTree:SetFont(oFont)
	oTree:lShowHint:= .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta Tree dos Lotes/SubLotes do Produto             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MTC040Tree(@oTree,aDadosSB8,"SB8",.T.)
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||oDlg:End()},{||oDlg:End()},,aButtons)
	Release Object oTree
Else
	Help("",1,"Recno")
EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MC040View³ Autor ³ Larson Zordan         ³ Data ³ 11/03/2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao que exibe os movimentos dos lotes/sub-lotes           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC040                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MC040View(oTree,aSVAlias,oLbx,aPos,nOldEnch,oPanel,oScroll,oPanel1)
Local aArea		:= GetArea()
Local cAlias	:= SubStr(oTree:GetCargo(),1,3)
Local nRecView	:= Val(SubStr(oTree:GetCargo(),4,12))
Local nPosAlias	:= aScan(aSVAlias,cAlias)
Local nSaldoLt  := ""
Local nX
Local oBtnL
Local aAreaSB1  := Nil
Local lContinua 	:= .T.
Local lEmpPrev  := If(SuperGetMV("MV_QTDPREV")== "S",.T.,.F.)

Private lLaudoCQ	:= .F.

If lContinua
	Do Case
	Case cAlias == "SB1"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Exibe informacoes de saldo do Lote/SubLote do Produto³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oScroll:Hide()
		oPanel1:Hide()
		oLbx:Hide()
		oScroll:Show()
	Case cAlias == "SB8"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta ListBox das movimentacoes                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aLine := {}
		aRegs := {}
		SB8->(MsGoTo(nRecView))
		c040Lote   := SB8->B8_NUMLOTE
		c040LotCtl := SB8->B8_LOTECTL
		c040Produt := SB8->B8_PRODUTO
		c040Local  := SB8->B8_LOCAL
		c040LoteFor:= SB8->B8_LOTEFOR
		nSaldo 	   := SB8SALDO(,,,,,lEmpPrev,,,.T.)
		dTValid    := SB8->B8_DTVALID
		nPotencia  := SB8->B8_POTENCI
		cLoteFor   := SB8->B8_LOTEFOR
		lSubLote   := Rastro(c040Produt,"S")
		dCriacao   := DtoC(SB8->B8_DATA)
		aProd      := {}
		aRecQEL	   := {}

		If !lSubLote
			nSaldoLote := SaldoLote(c040Produt,c040Local,c040LotCtl)
		Else
			nSaldoLote := SB8SALDO(,,,,,lEmpPrev,,,.T.)
		EndIf

		SB1->(dbSetOrder(1))
		SB1->(MsSeek(xFilial("SB1")+c040Produt))


		Processa({|lEnd| MontaLine(NIL,c040LotCtl,c040Lote,c040Produt,c040Local,If(mv_par01 == 1,"U","C"),NIL,c040LoteFor,NIL,NIL,@lEnd)},STR0075,STR0076+If(Rastro(SB1->B1_COD,"L"),AllTrim(STR0048)+" "+c040LotCtl,STR0049+" "+c040LotCtl+"/"+c040Lote),.F.)
             
		If Len(aLine) == 0
			If !lSubLote
				AADD(aRegs,{c040LotCtl,STR0036,'','','','',nil,'',''})  			//"SEM MOVIMENTACAO"
			Else
				AADD(aRegs,{c040LotCtl,c040Lote,STR0036,'','','','',nil,'',''})	//"SEM MOVIMENTACAO"
			EndIf
		Else
			cProd := CRIAVAR("B1_COD", .F.)
			For nX := 1 To Len(aLine)
				cLote     := ALLTrim(aLine[nX,1])
				cSubL     := ALLTrim(aLine[nX,2])
				cHist     := ALLTrim(aLine[nX,3])
				cQtde     := ALLTrim(aLine[nX,4])
				cProd     := ALLTrim(aLine[nX,5])
				cLocD     := ALLTrim(aLine[nX,6])
				cLoteForD5:= ALLTrim(aLine[nX,7])
				nQtde     := aLine[nX,8]
				cEnde     := aLine[nX,11]
				cNroSerie:= aLine[nX,12]
				
				// Produto Destino
				If !Empty(cProd) .And. mv_par01 == 1
					cProd := If(cProd==SB1->B1_COD.And.cLocd==RetFldProd(SB1->B1_COD,"B1_LOCPAD"),CRIAVAR("B1_COD", .F.),cProd)
					cLocD := If(cProd==SB1->B1_COD.And.cLocd==RetFldProd(SB1->B1_COD,"B1_LOCPAD"),CRIAVAR("B1_LOCPAD", .F.),cLocD)
				EndIf

				// Procura Produto Origem
				SD5->(dbSetOrder(1))
				SD5->(dbSeek(xFilial("SD5")+cSubL))
				If Rastro(SB1->B1_COD,"S") .And. SD5->D5_PRODUTO # SB1->B1_COD .And. mv_par01 == 2
					cProd := SD5->D5_PRODUTO
					cLocD := SD5->D5_LOCAL
				EndIf

				// Monta array aRegs conforme o rastro do produto
				If !lSubLote
					AADD(aRegs,{cLote,cHist,cProd,cLocD,cQtde,cLoteForD5,nQtde,cEnde,cNroSerie})
				Else
					AADD(aRegs,{cLote,cSubL,cHist,cProd,cLocD,cQtde,cLoteForD5,nQtde,cEnde,cNroSerie})
				EndIf
			Next nX
		EndIf

		nSaldoLt := Transform(nSaldoLote,PesqPictQT("B8_SALDO",14))

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Montagem da tela das informacoes e movimentacoes do  ³
		//³ Lote/SubLote do Produto.                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SB8->(MsGoTo(nRecView))

		@ 04,  5 Say STR0023 Of oPanel1 Size  30,8 Pixel		//"Produto:"
		@ 17,  5 Say STR0052 Of oPanel1 Size  50,8 Pixel		//"Lote do Fornecedor:"
		@ 17,147 Say STR0074 Of oPanel1 Size  30,8 Pixel		//"Potencia:"
		@ 30,  5 Say STR0053 Of oPanel1 Size  40,8 Pixel		//"Saldo do Lote:"
		@ 30,100 Say STR0054 Of oPanel1 Size  50,8 Pixel		//"Validade do Lote:"

		@ 27,210 Button oBtnL Prompt OemToAnsi(STR0069) Size 48, 13 Of oPanel1 Pixel Action (,,(oPanel1:End(),C040SldLT(SB8->B8_LOTECTL,SB8->B8_NUMLOTE,nSaldoLote),));oBtnL:oFont:= oPanel1:oFont	//"Visualiza Saldo"

		If mv_par01 == 2
			//Caso tenha liberacao de CQ com laudo da qualidade o botao e habilitado para a consulta
			If lLaudoCQ
				oBtnlCq:lVisible:=.T.
			Else
				oBtnlCq:lVisible:=.F.
			EndIf
		EndIf

		@ 03, 30 MsGet SB1->B1_DESC		Of oPanel1 Size 158,8 Pixel When .F.
		@ 16, 60 MsGet cLoteFor 	  	Of oPanel1 Size  65,8 Pixel When .F.
		@ 16,173 MsGet nPotencia 		Of oPanel1 Size  15,8 Pixel When .F.
		@ 29, 45 MsGet nSaldoLt 	 	Of oPanel1 Size  40,8 Pixel When .F. Right
		@ 29,148 MsGet DtoC(dTValid)	Of oPanel1 Size  40,8 Pixel When .F. Center

		oLbx:SetArray(aRegs)
		
		If !lSubLote			
			oLbx:bLine := {|| {aRegs[oLbx:nAT,1], aRegs[oLbx:nAT,2], aRegs[oLbx:nAT,3], aRegs[oLbx:nAT,4], aRegs[oLbx:nAT,8], aRegs[oLbx:nAT,9], aRegs[oLbx:nAT,5], aRegs[oLbx:nAT,6]} }		
		Else			
			oLbx:bLine := {|| {aRegs[oLbx:nAT,1], aRegs[oLbx:nAT,2], aRegs[oLbx:nAT,3], aRegs[oLbx:nAT,4], aRegs[oLbx:nAT,5], aRegs[oLbx:nAT,9], aRegs[oLbx:nAT,10], aRegs[oLbx:nAT,6], aRegs[oLbx:nAT,7]} }			
		EndIf    		
		oLbx:Show()
		oLbx:Refresh()
		oPanel1:Show()
	EndCase
	oPanel:Refresh()
	oPanel1:Refresh()
	oScroll:Refresh()
EndIf	
Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³ Fun‡ao   ³MTC040Tree³ Autor ³ Larson Zordan         ³ Data ³ 11/03/2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Descri‡ao³ Funcao que monta o Tree da consulta do Lote/Sub-Lote         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC040                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MTC040Tree(oTree,aLinhas,cAlias,lTodos)
Local aArea	   := GetArea()
Local cOldCargo:= oTree:GetCargo()
Local nSaldoSB8:= 0
Local lEmpPrev := If(SuperGetMV("MV_QTDPREV")== "S",.T.,.F.)
Local nX,cIcone
       
DEFAULT cAlias := ''
DEFAULT lTodos := .F.

// Monta tree na primeira vez
If Empty(cAlias) .And. !lTodos
	oTree:BeginUpdate()
	oTree:Reset()
	oTree:EndUpdate()
EndIf

oTree:BeginUpdate()

DBADDTREE oTree PROMPT SB1->B1_COD+Space(18) RESOURCE "PMSEDT4" CARGO "SB1"+StrZero(Recno(),12) OPEN

// Monta tree baseado nos dados do SB8 (aLinhas)
For nX := 1 To Len(aLinhas)
	SB8->(MsGoTo(Val(aLinhas[nX,3])))
	nSaldoSB8 := SB8SALDO(,,,,,lEmpPrev,,,.T.)
	If nSaldoSB8 > 0 .And. SB8->B8_DTVALID < dDataBase
		cIcone := "PMSEDT1"
	ElseIf nSaldoSB8 == 0
		cIcone := "PMSEDT2"
	Else	
		cIcone := "PMSEDT3"
	EndIf
	DBADDITEM oTree PROMPT aLinhas[nX,1] RESOURCE cIcone CARGO AllTrim(aLinhas[nX,2]+aLinhas[nX,3])
Next nX

oTree:EndUpdate()
oTree:Refresh()
If lTodos
	oTree:TreeSeek(cOldCargo)
EndIf
RestArea(aArea)

Return .T.


/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³MontaLine ³ Autor ³ Ary Medeiros	 		³ Data ³		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Rastreamento de Onde ‚ Usado 							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATC040													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MontaLine(nQuantOrig,c040LotCtl,c040Lote,c040Produt,c040Local,cTipo,aRecOrig,c040LoteFor,cUltSeq,cOP,lEnde,nChamad)
Local aArea    := GetArea()
Local aAreaSD5 := {}
Local aAreaSB1 := {}
Local aAreaBack:= {}
Local aVarAux  := {}
Local cLine    := ""
Local cOpAnt   := ""
Local cTmSD3   := ""
Local cNomeCli := ""
Local cDadosPrd:= ""
Local cQuery   := ""
Local cCampos  := "D5_FILIAL+D5_PRODUTO+D5_LOCAL+D5_LOTECTL"
Local cProduto := CriaVar("B1_COD", .F.)
Local cLocal   := CriaVar("B1_LOCPAD", .F.)
Local cNewProd := cProduto
Local cNewLocal:= cLocal
Local cCompara := xFilial('SD5')+c040Produt+c040Local+c040LotCtl
Local lSubLote := Rastro(c040Produt,"S")
Local nSeekChav:= 0 
Local lRet     := .T.
Local lNfiscal := .F.
Local lQuery   := .F.
Local aTamSB1  := TamSX3('B1_COD')
Local nLote    := TamSX3("D5_LOTECTL")[1]  
Local nSubLote := TamSX3("D5_NUMLOTE")[1]  
Local nArmazem := TamSX3("D1_LOCAL")[1] 
Local nTamLabor := TamSX3("QEL_LABOR")[1]
Local cPictQtde:= PesqPictQt("D5_QUANT",15)
Local cAliasSD5:= "SD5"
Local lExibeLin:=ExistBlock("EXIBELIN")
Local cNumOp   := CriaVar("D5_OP", .F.) 
Local aSDB := {{"","",0}}
Local nX := 1
Local nI := 0
Local aLotVolta:= {}
Local nD5LotCtl	:= TamSX3("D5_LOTECTL")[1]
Local nQELLabor	:= TamSX3("QEL_LABOR")[1]
Local cLotAnt:= ""
Local cFuncSubst:= "SUBSTRING"
Local aLotVolta	:= {}
Local cNumSeri	:= ''
Local cLocaliz	:= ''
Local nRecSDB 	:= 0

Default cUltSeq	:= ""
Default cOP    	:= CriaVar("D5_OP", .F.)
Default nChamad	:= 0
Default lEnde		:= .F.
Default aRecOrig	:= {}

//-- Tratamento para SUBSTRING em diferentes BD's
If TCGetDB() $ "ORACLE/POSTGRES/DB2"
	cFuncSubst  := "SUBSTR"
EndIf



dbSelectArea("SD5")
dbSetOrder(2)
aAreaSD5:=GetArea()
If !Empty(c040Lote).And.lSubLote
	cCampos +="+D5_NUMLOTE"
	cCompara+=c040Lote
EndIf
RestArea(aAreaSD5)

dbSelectArea("SB1")
aAreaSB1 := GetArea()
SB1->(MsSeek(xFilial("SB1") + c040Produt))
If RetFldProd(SB1->B1_COD,"B1_LOCALIZ") == "S"   
	lEnde := .T.
EndIf   

RestArea(aAreaSB1)

	cAliasSD5 := GetNextAlias()
	If Select(cAliasSD5) > 0 
		dbSelectArea(cAliasSD5)
		dbCloseArea()
	EndIf
	lQuery := .T.
	cQuery := " SELECT D5_FILIAL,D5_PRODUTO,D5_LOCAL,D5_LOTECTL,D5_NUMLOTE,D5_NUMSEQ,D5_ESTORNO,D5_CLIFOR,D5_LOJA, "
	cQuery += " D5_ORIGLAN,D5_DOC,D5_SERIE,D5_QUANT,D5_OP,D5_LOTEPRD,D5_SLOTEPR,D5_LOTEFOR,SD5.R_E_C_N_O_ RECNOSD5 "
	If lEnde
		cQuery += ", DB_LOCALIZ, DB_NUMSERI, DB_QUANT, SDB.R_E_C_N_O_ RECNOSDB "
		cQuery += " FROM " +RetSqlName('SD5') + ' SD5 '
		cQuery += " LEFT JOIN " +RetSqlName('SDB') + ' SDB'
		cQuery += " ON SD5.D5_FILIAL = SDB.DB_FILIAL AND SD5.D5_PRODUTO = SDB.DB_PRODUTO AND SD5.D5_LOCAL = SDB.DB_LOCAL"
		cQuery += " AND SD5.D5_LOTECTL = SDB.DB_LOTECTL AND SD5.D5_NUMSEQ = SDB.DB_NUMSEQ AND SD5.D5_DOC = SDB.DB_DOC"
		cQuery += " AND SDB.DB_ESTORNO = ' '"
		cQuery += " AND SDB.D_E_L_E_T_ = ' '"
	Else
		cQuery += " FROM " +RetSqlName('SD5') + ' SD5 '
	EndIf

	cQuery += " WHERE "
	cQuery += " SD5.D5_FILIAL      = '"+xFilial("SD5")+"'"
	cQuery += " AND SD5.D5_PRODUTO = '"+c040Produt+"'"
	cQuery += " AND SD5.D5_LOCAL   = '"+c040Local+"'"
	cQuery += " AND SD5.D5_LOTECTL = '"+c040LotCtl+"'"
	If !Empty(c040Lote) .And. lSubLote	
		cQuery += " AND SD5.D5_NUMLOTE = '"+c040Lote+"'"
	EndIf	
	cQuery += " AND SD5.D5_ESTORNO = ' '"
	If Len(aRecOrig) > 0
		cQuery += " AND ("
		For nI:=1 to Len(aRecOrig)
			cQuery += " SD5.R_E_C_N_O_ <> "+ AllTrim(Str(aRecOrig[nI]))
			If Len(aRecOrig) # nI
				cQuery += " OR "
			EndIf
		Next nI	
		cQuery += " )"
	EndIf
	If !Empty(cUltSeq)
		cQuery += " AND SD5.D5_NUMSEQ > '"+cUltSeq+"'"
	EndIf
	cQuery += " AND (SD5.D5_CLIFOR BETWEEN '"+mv_par03+"' AND '"+mv_par04+"')"
	cQuery += " AND (SD5.D5_LOJA BETWEEN '"+mv_par05+"' AND '"+mv_par06+"')"
	
	If cTipo == "C"
		cQuery += " AND ((SD5.D5_ORIGLAN < '500') OR ("+cFuncSubst+"(SD5.D5_ORIGLAN,1,1) IN ('D','P','M'))) "
	ElseIf cTipo == "U"
		cQuery += " AND ((SD5.D5_ORIGLAN > '500') OR ("+cFuncSubst+"(SD5.D5_ORIGLAN,1,1) IN ('R'))) "
	EndIf
	cQuery += " AND SD5.D_E_L_E_T_ = ' '"
	cQuery += " ORDER BY "+SqlOrder(SD5->(IndexKey()))
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,'TOPCONN',TCGENQRY(,,cQuery),cAliasSD5,.F.,.T.)
	aEval(SD5->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cAliasSD5,x[1],x[2],x[3],x[4]),Nil)})
	dbSelectArea(cAliasSD5)

ProcRegua(SD5->(LastRec()),23,4) 

aLotVolta:={}
Do While (cAliasSD5)->(!Eof()) .And. cCompara == (cAliasSD5)->(&cCampos)
	IncProc()
	cLine   :=""
	cOpAnt  :=""
	cTmSD3  :=""   
	cProduto:=cNewProd
	cLocal  :=cNewLocal 
	lNfiscal:=.F.
	If lEnde .And. !Empty((cAliasSD5)->DB_NUMSERI)
		If aScan(aLine,{|x|x[5]==(cAliasSD5)->D5_PRODUTO .And. x[1]==(cAliasSD5)->D5_LOTECTL .And. x[12]==(cAliasSD5)->DB_NUMSERI}) <> 0
			(cAliasSD5)->(dbSkip())
			Loop
		EndIf
	Else
		If aScan(aLine,{|x| x[10]==(cAliasSD5)->RECNOSD5 .And. IIF(lEnde,x[13] ==(cAliasSD5)->RECNOSDB,.T.) }) <> 0
			(cAliasSD5)->(dbSkip())
			Loop
		EndIf
	EndIf	

	// Entrada de Material
	If cTipo == "C"
		dbSelectArea("SD1")
		SD1->(dbSetOrder(5))
		// Nota fiscal de Entrada
		If SD1->(MsSeek(xFilial("SD1")+(cAliasSD5)->D5_PRODUTO+(cAliasSD5)->D5_LOCAL+(cAliasSD5)->D5_NUMSEQ ))
			dbSelectArea("SF4")
			If SF4->(MsSeek(xFilial("SF4")+SD1->D1_TES))
				// Pesquisa pelo Nome Reduzido do Cliente OU FORNECEDOR
				dbSelectArea(If(SD1->D1_TIPO $ "DB","SA1","SA2"))
				dbSetOrder(1)
				If MsSeek(xFilial(If(SD1->D1_TIPO $ "DB","SA1","SA2"))+SD1->D1_FORNECE+SD1->D1_LOJA)
					cNomeCli := SubStr(AllTrim(If(SD1->D1_TIPO $ "DB",SA1->A1_NREDUZ,SA2->A2_NREDUZ)),1,15)
				EndIf
				dbSelectArea(cAliasSD5)
				// Remessa para beneficiamento
				If SF4->F4_PODER3 == "R"
					// XXXXXXXXXX XXXXXX NF. p/Benef. N.XXXXXX/XXX
					cLine := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0005+(cAliasSD5)->D5_DOC+"/"+(cAliasSD5)->D5_SERIE+" "+SD1->D1_LOJA+"-"+AllTrim(SD1->D1_FORNECE)+"/"+cNomeCli	//"  NF. p/Benef. N."
					// Devolucao de beneficiamento
				ElseIf SF4->F4_PODER3 == "D"
					// XXXXXXXXXX XXXXXX Dev. Benef.  N.XXXXXX/XXX
					cLine := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0006+(cAliasSD5)->D5_DOC+"/"+(cAliasSD5)->D5_SERIE+" "+SD1->D1_LOJA+"-"+AllTrim(SD1->D1_FORNECE)+"/"+cNomeCli	//"  Dev. Benef. N."
				Else
					// Compra
					If SD1->D1_TIPO == "N"
						// XXXXXXXXXX XXXXXX NF. Compra   N.XXXXXX/XXX
						cLine := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0007+(cAliasSD5)->D5_DOC+"/"+(cAliasSD5)->D5_SERIE+" "+SD1->D1_FORNECE+"-"+SD1->D1_LOJA+"/"+cNomeCli	//"  NF. Compra N."
						// Devolucao
					ElseIf SD1->D1_TIPO == "D"
						// XXXXXXXXXX XXXXXX NF.Dev.Venda N.XXXXXX/XXX
						cLine := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0008+(cAliasSD5)->D5_DOC+"/"+(cAliasSD5)->D5_SERIE	//"  NF.Dev.Venda N."
					EndIf
				EndIf
			EndIf
			lNfiscal := .T.
			dbSelectArea(cAliasSD5)
			// Entrada por movimentos internos
		Else
			dbSelectArea(cAliasSD5)
			cTmSD3:=AC040TM((cAliasSD5)->D5_NUMSEQ,(cAliasSD5)->D5_ORIGLAN)
			If cTmSD3 $ "MAN"
				// XXXXXXXXXX XXXXXX Manutencao de Lote
				cLine := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0040	//"  Manutencao de Lote"
			ElseIf cTmSD3 $ "DE0"
				// XXXXXXXXXX XXXXXX Devolucao Manual
				cLine := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0026	//"  Devolucao Manual"
			ElseIF cTmSD3 $ "DE1"
				// XXXXXXXXXX XXXXXX Devolucao Automatica
				cLine := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0086	//"  Devolucao Automatica"
			ElseIf cTmSD3 $ "DE3/DE4/RE3"
				aLotePara := BuscaLoteRE4((cAliasSD5)->D5_NUMSEQ,IIf(lQuery,(cAliasSD5)->RECNOSD5,Recno()))
				// XXXXXXXXXX XXXXXX Trf. de  XXXXXXXXXX/XXXXXX
				If !Empty(aLotePara)
					cLine := aLotePara[3]+aLotePara[4]+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+If(cTmSD3=="RE3",STR0077,If(cTmSD3=="DE3",STR0079,STR0016))+aLotePara[1]+If(Rastro(SB1->B1_COD,"S"),"/"+aLotePara[2],"")
				EndIf
			ElseIf cTmSD3 == "DE6"
				aLotePara := BuscaLoteRE4((cAliasSD5)->D5_NUMSEQ,IIf(lQuery,(cAliasSD5)->RECNOSD5,Recno()))
				If Len(aLotePara) > 0   
					If (cAliasSD5)->D5_LOCAL == cLocCQ
						// XXXXXXXXXX XXXXXX Rejeitado de  XXXXXXXXXX/XXXXXX
						cLine := aLotePara[3]+aLotePara[4]+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0017+aLotePara[1]+If(Rastro(aLotePara[3],"S"),"/"+aLotePara[2],"")	//"  Rejeitado de  "
					Else
						// XXXXXXXXXX XXXXXX Liberado de  XXXXXXXXXX/XXXXXX
						cLine := aLotePara[3]+aLotePara[4]+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0018+aLotePara[1]+If(Rastro(aLotePara[3],"S"),"/"+aLotePara[2],"")	//"  Liberado de  "
					EndIf
					If aScan( aRecOrig, {|x| x == (cAliasSD5)->RECNOSD5 } ) == 0
						aAdd(aRecOrig,(cAliasSD5)->RECNOSD5)
					EndIf
					MontaLine((cAliasSD5)->D5_QUANT,aLotePara[1],aLotePara[2],aLotePara[3],aLotePara[4],cTipo,aRecOrig,aLotePara[5],aLotePara[6],/*cOP*/,/*lEnd*/,@nChamad)
					nPos := aScan( aRecOrig, {|x| x == (cAliasSD5)->RECNOSD5 } )
			       If nPos > 0
			       	aDel( aRecOrig, nPos )
						aSize( aRecOrig, Len(aRecOrig)-1 )
					EndIf
				EndIf

				If mv_par01 == 2
					lLaudoCQ := .F.
					SD7->(dbSetOrder(3))
					If SD7->(MsSeek(xFilial("SD7")+(cAliasSD5)->D5_PRODUTO+(cAliasSD5)->D5_NUMSEQ+(cAliasSD5)->D5_DOC)) .And. SD7->D7_TIPO == 1
						QEK->(dbSetOrder(6))
						If QEK->(MsSeek(xFilial("QEK")+AllTrim((cAliasSD5)->D5_LOTECTL),.T.))
							nTamLot := nLote
							While QEK->(!Eof()) .And. xFilial('QEK')+AllTrim((cAliasSD5)->D5_LOTECTL) == QEK->QEK_FILIAL+Left(QEK->QEK_LOTE,len(AllTrim((cAliasSD5)->D5_LOTECTL)))
								If (cAliasSD5)->D5_DOC == Substr(QEK->QEK_CERFOR,1,Len((cAliasSD5)->D5_DOC))
									cLabor := Space(nTamLabor)
									cSeek  := QEK->(QEK_FORNEC+QEK_LOJFOR+QEK_PRODUT+DtOS(QEK_DTENTR)+QEK_LOTE)
									dbSelectArea("QEL")
									dbSetOrder(1)
									If MsSeek(xFilial("QEL")+cSeek+cLabor,.F.)
										aAdd(aRecQEL,{QEL->QEL_PRODUT,QEL->(Recno())})
					  					lLaudoCQ := .T.
									EndIf
									QEL->(dbSkip())
								EndIf
								QEK->(dbSkip())
							EndDo
						EndIf
					EndIf
				EndIf
			ElseIf cTmSD3 == "DE7"
				aLotePara := BuscaLtRE7( (cAliasSD5)->D5_NUMSEQ , cNumOp )
				// XXXXXXXXXX XXXXXX Desmontagem de XXXXXXXXXX/XXXXXX
				cLine := aLotePara[3]+aLotePara[4]+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0028+aLotePara[1]+If(Rastro(aLotePara[3],"S"),"/"+aLotePara[2],"")	//" Desmontagem de "
			ElseIf Substr(cTmSD3,1,2) == "PR"
				If Len(aLotePara:=BuscaOP(.T.,.T.,(cAliasSD5)->D5_LOTECTL,(cAliasSD5)->D5_NUMLOTE,(cAliasSD5)->D5_NUMSEQ,(cAliasSD5)->D5_OP,(cAliasSD5)->D5_LOTEPRD,(cAliasSD5)->D5_SLOTEPR,IIf(lQuery,(cAliasSD5)->RECNOSD5,Recno()))) > 0
					cDadosPrd:= aLotePara[1]+If(lSubLote,aLotePara[2],"")
					cProduto := aLotePara[3]
					cLocal   := aLotePara[4]
				EndIf
				// XXXXXXXXXX XXXXXX Prod. p/OP No. XXXXXXXXXXX
				cLine    := cProduto+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0020+(cAliasSD5)->D5_OP	//" Prod. p/OP No. "
				aAreaBack:= GetArea()
				cOpAnt   := (cAliasSD5)->D5_OP
				
				If nNivMax > nChamad
					nChamad++
					dbSelectArea("SD5")
			   		SD5->(dbSetOrder(4))
			   		SD5->(MsSeek(xFilial("SD5")+cOPAnt))
			   		Do While SD5->(!Eof()) .And. xFilial("SD5")+cOpAnt == SD5->D5_FILIAL+SD5->D5_OP
				 		cTmSD3:=AC040TM(SD5->D5_NUMSEQ,SD5->D5_ORIGLAN)
				 		If Substr(cTmSD3,1,2) == "RE" .And. If(!Empty(SD5->D5_LOTEPRD),cDadosPrd == SD5->D5_LOTEPRD+If(lSubLote,SD5->D5_SLOTEPR,""),.T.)
							If aScan( aRecOrig, {|x| x == SD5->(Recno()) } ) == 0
								aAdd(aRecOrig,SD5->(Recno()))
							EndIf
							MontaLine(SD5->D5_QUANT,SD5->D5_LOTECTL,SD5->D5_NUMLOTE,SD5->D5_PRODUTO,SD5->D5_LOCAL,cTipo,aRecOrig,SD5->D5_LOTEFOR,,,,@nChamad)
							nPos := aScan( aRecOrig, {|x| x == SD5->(Recno()) } )
							If nPos > 0
								aDel( aRecOrig, nPos )
								aSize( aRecOrig, Len(aRecOrig)-1 )
							EndIf
						EndIf					
						SD5->(dbSkip())
					EndDo   
					nChamad--
				EndIf
				RestArea(aAreaBack) 
				dbSelectArea(cAliasSD5)
			EndIf
		EndIf       
		
		// Saida de Material
	ElseIf cTipo == "U" 
		dbSelectArea("SD2")
		SD2->(dbSetOrder(1))
		// Saida atraves de NF
		If SD2->(MsSeek(xFilial("SD2")+(cAliasSD5)->D5_PRODUTO+(cAliasSD5)->D5_LOCAL+(cAliasSD5)->D5_NUMSEQ ))
			dbSelectArea("SF4")
			If SF4->(MsSeek(xFilial("SF4")+SD2->D2_TES))
				// Pesquisa pelo Nome Reduzido do Cliente OU FORNECEDOR
				dbSelectArea(If(SD2->D2_TIPO $ "DB","SA2","SA1"))
				dbSetOrder(1)
				If MsSeek(xFilial(If(SD2->D2_TIPO $ "DB","SA2","SA1"))+SD2->D2_CLIENTE+SD2->D2_LOJA)
					cNomeCli := SubStr(AllTrim(If(SD2->D2_TIPO $ "DB",SA2->A2_NREDUZ,SA1->A1_NREDUZ)),1,15)
				EndIf
				dbSelectArea(cAliasSD5)
				// Remessa para beneficiamento
				If SF4->F4_PODER3 == "R"
					// XXXXXXXXXX XXXXXX NF. p/Benef. N.XXXXXX/XXX
					cLine := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0005+(cAliasSD5)->D5_DOC+"/"+SD5->D5_SERIE+" "+SD2->D2_LOJA+"-"+Alltrim(SD2->D2_CLIENTE)+"/"+cNomeCli	//"  NF. p/Benef. N."
					// Devolucao de beneficiamento
				ElseIf SF4->F4_PODER3 == "D"
					// XXXXXXXXXX XXXXXX Dev. Benef.  N.XXXXXX/XXX
					cLine := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0009+(cAliasSD5)->D5_DOC+"/"+(cAliasSD5)->D5_SERIE+" "+SD2->D2_LOJA+"-"+AllTrim(SD2->D2_CLIENTE)+"/"+cNomeCli	//"  Dev. Benef. N."
				Else
					// Venda
					If SD2->D2_TIPO == "N"
						// XXXXXXXXXX XXXXXX NF. Venda    N.XXXXXX/XXX XXXXXX-XX
						cLine := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0010+(cAliasSD5)->D5_DOC+"/"+(cAliasSD5)->D5_SERIE+" "+SD2->D2_CLIENTE+"-"+SD2->D2_LOJA+"/"+cNomeCli	//"  NF. Venda N."
						// Devolucao
					ElseIf SD2->D2_TIPO == "D"
						// XXXXXXXXXX XXXXXX NF.Dv.Compra N.XXXXXX/XXX
						cLine := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0011+(cAliasSD5)->D5_DOC+"/"+(cAliasSD5)->D5_SERIE	//"  NF.Dv.Compra N."
					EndIf
				EndIf
				nQuantOrig:=(cAliasSD5)->D5_QUANT
				lNfiscal := .T.
			EndIf
			dbSelectArea(cAliasSD5)
			// Saida por movimentos internos
		Else	
			dbSelectArea(cAliasSD5)
			cTmSD3:=AC040TM((cAliasSD5)->D5_NUMSEQ,(cAliasSD5)->D5_ORIGLAN)
			If cTmSD3 $ "RE3/RE4"
				aLotePara := BuscaLoteRE4((cAliasSD5)->D5_NUMSEQ,IIf(lQuery,(cAliasSD5)->RECNOSD5,Recno()))
				If Len(aLotePara) > 0
					// XXXXXXXXXX XXXXXX Trf. p/ XXXXXXXXXX/XXXXXX
					cLine := aLotePara[3]+aLotePara[4]+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+If(cTmSD3=="RE3",STR0078,STR0012)+aLotePara[1]+If(Rastro(aLotePara[3],"S"),"/"+aLotePara[2],"")
					nQuantOrig:=(cAliasSD5)->D5_QUANT
					If lSubLote .Or. aLotePara[1] # (cAliasSD5)->D5_LOTECTL
						If aScan( aRecOrig, {|x| x == (cAliasSD5)->RECNOSD5 } ) == 0
							aAdd(aRecOrig,(cAliasSD5)->RECNOSD5)
						EndIf
						MontaLine((cAliasSD5)->D5_QUANT,aLotePara[1],aLotePara[2],aLotePara[3],aLotePara[4],cTipo,aRecOrig,aLotePara[5],aLotePara[6],,,@nChamad)
						nPos := aScan( aRecOrig, {|x| x == (cAliasSD5)->RECNOSD5 } )
						If nPos > 0
							aDel( aRecOrig, nPos )
							aSize( aRecOrig, Len(aRecOrig)-1 )
						EndIf
					EndIf
				Else
					cProdD3 := ""
					cLocal  := ""
					SD3->(dbSetOrder(4))
					If SD3->(dbSeek(xFilial("SD3")+(cAliasSD5)->D5_NUMSEQ))
						SD3->(dbSkip())
						cProdD3 := SD3->D3_COD
						cLocal  := SD3->D3_LOCAL
					EndIf
					cLine := cProdD3+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0012+STR0041	//"  Trf. p/ "
					nQuantOrig:=(cAliasSD5)->D5_QUANT
				EndIf
			ElseIf cTmSD3 == "RE6"
				aLotePara := BuscaLoteRE4((cAliasSD5)->D5_NUMSEQ,IIf(lQuery,(cAliasSD5)->RECNOSD5,Recno()))
				If (cAliasSD5)->D5_LOCAL == cLocCq
					If SB8->B8_LOCAL == cLocCQ
						// XXXXXXXXXX XXXXXX Rejeitado p/  XXXXXXXXXX/XXXXXX
						cLine := aLotePara[3]+aLotePara[4]+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0013+aLotePara[1]+If(Rastro(aLotePara[3],"S"),"/"+aLotePara[2],"")	//"  Rejeitado p/  "
					Else
					// XXXXXXXXXX XXXXXX Liberado p/  XXXXXXXXXX/XXXXXX
						cLine := aLotePara[3]+aLotePara[4]+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0014+aLotePara[1]+If(Rastro(aLotePara[3],"S"),"/"+aLotePara[2],"") //"  Liberado p/  "
					EndIf
					nQuantOrig:=(cAliasSD5)->D5_QUANT
					If lSubLote
						If aScan( aRecOrig, {|x| x == (cAliasSD5)->RECNOSD5 } ) == 0
							aAdd(aRecOrig,(cAliasSD5)->RECNOSD5)
						EndIf
						MontaLine((cAliasSD5)->D5_QUANT,aLotePara[1],aLotePara[2],aLotePara[3],aLotePara[4],cTipo,aRecOrig,aLotePara[5],aLotePara[6],,,@nChamad)
						nPos := aScan( aRecOrig, {|x| x == (cAliasSD5)->RECNOSD5 } )
						If nPos > 0
							aDel( aRecOrig, nPos )
							aSize( aRecOrig, Len(aRecOrig)-1 )
						EndIf
					EndIf
				Else
					// XXXXXXXXXX XXXXXX Consumo Interno
					cLine := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0015	// "  Consumo Interno"
				EndIf
			ElseIf cTmSD3 $ "RE0/RE1/RE2/RE5/RE9"
				If !Empty((cAliasSD5)->D5_OP)
					If Len(aLotePara:=BuscaOP(.T.,.T.,(cAliasSD5)->D5_LOTECTL,(cAliasSD5)->D5_NUMLOTE,(cAliasSD5)->D5_NUMSEQ,(cAliasSD5)->D5_OP,(cAliasSD5)->D5_LOTEPRD,(cAliasSD5)->D5_SLOTEPR,IIf(lQuery,(cAliasSD5)->RECNOSD5,Recno()),aLotVolta)) > 0
						// XXXXXXXXXX XXXXXX Op N. XXXXXXXXXXX  XXXXXXXXXX/XXXXXX
						cLine := aLotePara[3]+aLotePara[4]+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0019+(cAliasSD5)->D5_OP+"  "+aLotePara[1]+If(Rastro(aLotePara[3],"S"),"/"+aLotePara[2],"")	//"  Op N. "
						If aScan( aRecOrig, {|x| x == (cAliasSD5)->RECNOSD5 } ) == 0
							aAdd(aRecOrig,(cAliasSD5)->RECNOSD5)
						EndIf
						MontaLine((cAliasSD5)->D5_QUANT,aLotePara[1],aLotePara[2],aLotePara[3],aLotePara[4],cTipo,aRecOrig,aLotePara[5],(cAliasSD5)->D5_NUMSEQ,aLotePara[6],,@nChamad)
						nPos := aScan( aRecOrig, {|x| x == (cAliasSD5)->RECNOSD5 } )
						If nPos > 0
							aDel( aRecOrig, nPos )
							aSize( aRecOrig, Len(aRecOrig)-1 )
						EndIf
					Else
						// XXXXXXXXXX XXXXXX Op N. XXXXXXXXXXX  XXXXXXXXXX/XXXXXX
						cLine     := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0019+(cAliasSD5)->D5_OP	//"  Op N. "
						nQuantOrig:=(cAliasSD5)->D5_QUANT
					EndIf	
				Else
					// XXXXXXXXXX XXXXXX Consumo Interno
					cLine     := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0015	//"  Consumo Interno"
					nQuantOrig:=(cAliasSD5)->D5_QUANT
				EndIf
			ElseIf cTmSD3 == "RE7" .And. Empty(cOP)
				// XXXXXXXXXXX XXXXXX Desmontagem p/
				cLine     := c040Produt+cLocal+(cAliasSD5)->D5_LOTECTL+" "+(cAliasSD5)->D5_NUMLOTE+STR0029+(cAliasSD5)->D5_LOTECTL+If(lSubLote,"/"+(cAliasSD5)->D5_NUMLOTE,"")	   //" Desmontagem p/ "
				nQuantOrig:=(cAliasSD5)->D5_QUANT
			EndIf
		EndIf
	EndIf
	If !Empty(cLine)
		aTam := aTamSB1
		lOp  := .T.
		If Len(aLine) > 0
			// Verifica se o ultimo registro e a da mesma OP
			If SubStr(cLine,aTam[1]+20,6) == STR0019
				If SubStr(cLine,aTam[1]+20,12) == SubStr(aLine[Len(aLine),3],1,12)
					lOp := .F.
				EndIf
			EndIf
		EndIf
		cProduto:= SubStr(cLine,1,aTam[1])
		cNumSeri:= IIf( lQuery .And. lEnde,(cAliasSD5)->DB_NUMSERI,aSDB[nX][2] )
		cLocaliz:= IIf( lQuery .And. lEnde,(cAliasSD5)->DB_LOCALIZ,aSDB[nX][1] )
		nRecSDB := IIf( lQuery .And. lEnde, (cAliasSD5)->RECNOSDB, aSDB[nX][3] )
		aVarAux := {SubStr(cLine,aTam[1]+1+ nArmazem, nLote),;                     					    	  					// [1] Lote
					SubStr(cLine,aTam[1]+2+ nArmazem + nLote , nSubLote),;							   								// [2] SubLote
					SubStr(cLine,aTam[1]+2+ nArmazem + nLote + nSubLote,55),;														// [3] Historico
					Trans(IIF(lEnde,(cAliasSD5)->DB_QUANT,(cAliasSD5)->D5_QUANT),cPictQtde),;										// [4] Quantidade (c)
					cProduto,;																												// [5] Prod.Destino/Origem
					SubStr(cLine,aTam[1]+1,len(cLocal)),;																				// [6] Amz Dest
					(cAliasSD5)->D5_LOTEFOR,;																							// [7] Lote do Fornecedor
					If(SubStr(cLine,aTam[1]+1,len(cLocal))==cLocCQ.Or.!lOp,"0",Trans((cAliasSD5)->D5_QUANT,cPictQtde)),; 		// [8] Quantidade (n)
					If(lNfiscal,(cAliasSD5)->D5_NUMSEQ,""),; 																// [9] Se for nota fiscal grava o numero sequencial
					IIf(lQuery,(cAliasSD5)->RECNOSD5,RECNO()),;																//[10] Nro registro SD5
					cLocaliz											,;													//[11] Endereço
					cNumSeri											,;													//[12] Nro Serie
					nRecSDB 											}													//[13] Nro Registro SBF
					 

		If !Empty(aLine)
			If lSubLote
				nSeekChav := AsCan(aLine,{|x|x[1]+x[2]+x[3]+x[4]+x[9]==aVarAux[1]+aVarAux[2]+aVarAux[3]+aVarAux[4]+aVarAux[9] .And. x[5]==cProduto .And. x[ 12 ] == cNumSeri .And. x[ 13 ] == nRecSDB } )
 			Else
				nSeekChav := AsCan(aLine,{|x|x[1]+x[3]+x[4]+x[9]==aVarAux[1]+aVarAux[3]+aVarAux[4]+aVarAux[9] .And. x[5]==cProduto .And. x[ 12 ] == cNumSeri .And. x[ 13 ] == nRecSDB } )
			EndIf
			If !Empty(nSeekChav)
				If !lSubLote .And. ( "PR" $ AC040TM((cAliasSD5)->D5_NUMSEQ,(cAliasSD5)->D5_ORIGLAN) )
					aLine[nSeekChav,4] := Trans(Val(aLine[nSeekChav,4])+(cAliasSD5)->D5_QUANT,cPictQtde)
					dbSelectArea(cAliasSD5)
					(cAliasSD5)->(dbSkip())
					Loop
				EndIf
			EndIf
			If lEnde
				nSeekChav := AsCan(aLine,{|x|x[1]+x[3]+x[4]+x[9]+x[11]==aVarAux[1]+aVarAux[3]+aVarAux[4]+aVarAux[9]+aVarAux[11] .And. x[5]==cProduto .And. x[ 12 ] == cNumSeri .And. x[ 13 ] == nRecSDB } )
				If !Empty(nSeekChav)
					dbSelectArea(cAliasSD5)
					(cAliasSD5)->(dbSkip())
					Loop			
				EndIf
			EndIf
		EndIf
	        
        // Ponto de Entrada para exibir niveis        
        If lExibeLin
        	If lQuery
        		dbSelectArea("SD5")
        		MsGoTo((cAliasSD5)->RECNOSD5)
        	EndIf
			lRet := ExecBlock("EXIBELIN",.F.,.F.,{aVarAux})
			If Valtype(lRet) <> "L"
				lRet := .T.
			EndIf
			dbSelectArea(cAliasSD5)
		EndIf
		
		If lRet
			// Cria array com as informacoes das movimentacoes do Lote/SubLote
			aAdd(aLine,aVarAux)
		Endif
		
	EndIf
	dbSelectArea(cAliasSD5)
	(cAliasSD5)->(dbSkip())
EndDo

If lQuery
   (cAliasSD5)->(dbCloseArea())
EndIf
RestArea(aAreaSD5)
RestArea(aArea)
Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ AC040TM  ³ Autor ³Rodrigo de A. Sartorio ³ Data ³ 10/06/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Recupera o tipo de movimento do registro           		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATC040													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function AC040TM(cNumSeq,cOrigLan)
Local cRet    	:= ""
Local cAliasSD3	:= GetNextAlias()
Local aArea   	:= GetArea()

If Substr(cOriglan,1,1) $ "RDM"
	cRet:=cOrigLan
Else
	cQuery := " SELECT D3_CF"
	cQuery += " FROM "+RetSqlName('SD3')
	cQuery += " WHERE "
	cQuery += " D3_FILIAL = '"+xFilial("SD3")+"'"
	cQuery += " AND D3_NUMSEQ = '"+cNumSeq+"'"
	cQuery += " AND D3_ESTORNO = ' '"
	cQuery += " AND D_E_L_E_T_ = ' '"  
	cQuery := ChangeQuery(cQuery)
	
	dbUseArea(.T.,'TOPCONN',TCGENQRY(,,cQuery),cAliasSD3,.F.,.T.) 
	While (cAliasSD3)->(!Eof())
		cRet:=(cAliasSD3)->(D3_CF)
		If (Substr((cAliasSD3)->(D3_CF),1,1) $ "DP" .And. cOriglan <= "500") .Or. ;
		   (Substr((cAliasSD3)->(D3_CF),1,1) == "R" .And. cOriglan > "500" )
			Exit
		EndIf
		(cAliasSD3)->(dbSkip())
	EndDo
	(cAliasSD3)->(dbCloseArea())
EndIf

RestArea(aArea)
Return cRet


/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³BuscaLoteRE4 ³ Autor ³ Ary Medeiros		³ Data ³		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Busca o Lote no RE4										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATC040													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function BuscaLoteRE4(cNumSeq,nRecno)
Local aOldAlias:= GetArea()
Local aVolta   := {}

Default cNumSeq := ""
Default nRecno  := 0

dbSelectArea("SD5")
dbSetOrder(3)
dbSeek(xFilial("SD5")+cNumSeq)
While !Eof() .And. xFilial("SD5")+cNumSeq == D5_FILIAL+D5_NUMSEQ
	//-- Impede o Processamento de Movimenta‡oes Estornadas
	If !Empty(SD5->D5_ESTORNO)
		dbSkip()
		Loop
	EndIf
	If Recno() != nRecno
		aVolta:={SD5->D5_LOTECTL,SD5->D5_NUMLOTE,SD5->D5_PRODUTO,SD5->D5_LOCAL,SD5->D5_LOTEFOR,SD5->D5_NUMSEQ}
		Exit
	EndIf
	dbSkip()
End

dbSelectArea("SB8")
dbSetOrder(3)
dbSeek(xFilial("SB8")+SD5->D5_PRODUTO+SD5->D5_LOCAL+SD5->D5_LOTECTL+SD5->D5_NUMLOTE)

RestArea(aOldAlias)
Return (aVolta)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ BuscaLtRE7  ³ Autor ³ Larson Zordan   	³ Data ³ 08/04/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Busca o Lote no RE7										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATC040													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function BuscaLtRE7(cNumSeqSD5,cNumOp)
Local aOldAlias:= GetArea()
Local aVolta   := {}

Default cNumSeqSD5 := "" 

dbSelectArea("SD5")
dbSetOrder(4)
If MsSeek(xFilial("SD5")+cNumOP+cNumSeqSD5)
	aVolta:={SD5->D5_LOTECTL,SD5->D5_NUMLOTE,SD5->D5_PRODUTO,SD5->D5_LOCAL,SD5->D5_LOTEFOR,SD5->D5_NUMSEQ}
EndIf
RestArea(aOldAlias)
Return (aVolta)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BuscaOp   ³ Autor ³ Fernando Joly Siquini ³ Data ³01/09/2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Procura pelo Movimento referenete a Producao               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function BuscaOP(lProducao,lDadosPrd,cLoteCtl,cNumLote,cNumSeq,cOp,cLotePrd,cSLotePr,nRecno,aLotVolta)
Local aAreaAnt   := GetArea()
Local aAreaSD5   := SD5->(GetArea())
Local cDadosPrd1 := If(lDadosPrd,cLotePrd,"")
Local cDadosPrd2 := If(lDadosPrd .And. !Empty(cSLotePr),cSLotePR,"")
Local aVolta     := {}
Local cSeek     := ""
Local lAchou     := .F.
Local nScan		 := 0

Default cLoteCtl := ""
Default cNumlote := ""
Default cNumSeq  := ""
Default cOp      := ""
Default nRecno   := 0
Default aLotVolta:= {}

//-- Realiza a Pesquisa nas Movimentacoes pelo Numero da OP
//-- (Mesmo que as Requisicoes tenham sido Manuais pode-se achar a Producao)

If !Empty(cOP)
	dbSelectArea("SD3")
	dbSetOrder(1)
	SD3->(dbSeek(cSeek := xFilial("SD3")+cOP, .F.))
	
	While !Eof() .And. cSeek == SD3->D3_FILIAL + SD3->D3_OP .And. !lAchou
		If !Empty(SD3->D3_ESTORNO) .And. Empty(SD3->D3_OP)
			SD3->(dbSkip())
			Loop
		EndIf
		If SD3->D3_TM < '500'
			//Se o protudo destino nao tiver rastro, buscar os dados na SD3
			If !Rastro(SD3->D3_COD)
				aVolta := {SD3->D3_LOTECTL, SD3->D3_NUMLOTE, SD3->D3_COD, SD3->D3_LOCAL,Posicione("SD5",4,xFilial("SD3")+cOp,"D5_LOTEFOR"),cOP}
			
			//Se tiver rastro, buscar os dados na SD5
			Else
				dbSelectArea("SD5")
				dbSetOrder(4)
				SD5->(dbSeek(cSeek := xFilial("SD5")+cOP, .F.))
	
				//-- Procura Inicialmente pelo Movimento de Producao
				Do While SD5->(!Eof()) .And. cSeek == SD5->D5_FILIAL+SD5->D5_OP .And. !lAchou
					If !Empty(SD5->D5_ESTORNO) .Or. Recno() == nRecno .And. Empty(SD5->D5_OP)
						SD5->(dbSkip())
						Loop
					EndIf
			        nScan := aScan(aLotVolta, SD5->D5_LOTECTL)
					If SD5->D5_ORIGLAN < '500' .And. If(lProducao,(cLoteCtl+cNumLote==SD5->D5_LOTECTL+SD5->D5_NUMLOTE),!(cLoteCtl+cNumLote==SD5->D5_LOTECTL+SD5->D5_NUMLOTE) .and. nScan=0)
						aVolta := {SD5->D5_LOTECTL, SD5->D5_NUMLOTE, SD5->D5_PRODUTO, SD5->D5_LOCAL, SD5->D5_LOTEFOR,cOP}
						aadd(aLotVolta,SD5->D5_LOTECTL) 
						lAchou := .T.
						If SD5->D5_NUMSEQ == cNumSeq .Or. (!lProducao .And. lDadosPrd .And. cDadosPrd1 == SD5->D5_LOTECTL .And. If(Empty(cDadosPrd2),.T.,cDadosPrd2 == SD5->D5_NUMLOTE))
							lAchou := .T.
						EndIf  
						Loop
					EndIf
					SD5->(dbSkip())
				EndDo
			EndIf						
			If SD3->D3_NUMSEQ == cNumSeq
				lAchou := .T.
			EndIf
		Endif	
		SD3->(dbSkip())
	End    
EndIf

RestArea(aAreaSD5)
RestArea(aAreaAnt)

Return (aVolta)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A040Imp  ³ Autor ³ Larson Zordan         ³ Data ³21/03/02  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Envia para funcao que faz a impressao dos movimentos       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A040Imp(nSaldo,nSaldoLote,oTree,aRegs)
Local cTitulo  	:= STR0004	//"Rastreamento de Lotes/Sub-Lotes"
Local cDesc1 	:= STR0033	//"Este programa ira imprimir a Consulta do Produto selecionado"
Local cDesc2 	:= STR0034	//"informando o Rastreamento do seu Lote/Sub-Lote."
Local cString  	:= "SB8"
Local cAlias		:= SubStr(oTree:GetCargo(),1,3)
Local cTamanho  := "G"
Local aRegAnt
Local cPergRel  := "      "

Private aReturn := {STR0031, 1,STR0032, 1, 2, 1, "", 1 }   //"Zebrado"###"Administracao"
Private nLastKey:= 0
Private wnrel  	:= "MATC040"

If cAlias == "SB1"
	Aviso(STR0055,STR0056,{"OK"}) //"Atencao !!!"###"Posicione sobre algum item da consulta !!!"
Else
	aRegAnt := GetArea()
	wnRel   := SetPrint(cString,wnrel,cPergRel,@cTitulo,cDesc1,cDesc2,"",.F.,"",.F.,cTamanho)

	RestArea(aRegAnt)
	If nLastKey == 27
		dbClearfilter()
	Else
		SetDefault( aReturn, cString )
		
		If nLastKey == 27
			dbClearfilter()
        Else
	        RptStatus({|lEnd| C040Imp(@lEnd,ctitulo,wnRel,nSaldo,nSaldoLote,cTamanho,aRegs)},ctitulo)
		EndIf
	EndIf
EndIf
Return .T.


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ C040Imp  ³ Autor ³ Larson Zordan         ³ Data ³21/03/02  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Impressao dos Movimentos do Lote/Sub-Lote                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function C040Imp(lEnd,ctitulo,wnRel,nSaldo,nSaldoLote,cTamanho,aRegs)
LOCAL cCabec1   := STR0004+" -"+If(mv_par01==1,STR0038,STR0039)       //"Rastreamento de Lotes/SubLotes"###" Onde e Usado "###" Composicao "
LOCAL cCabec2   := ""
LOCAL cNomeProg := "MATC040"
LOCAL cbtxt     := Space( 10 )
LOCAL cbcont    := 0
LOCAL nI        := 1
LOCAL lCol      := .T.
LOCAL nDifTam   := TamSX3("B1_COD")[1]  // diferenca a ser acrescida as colunas 
Local nLote		:= TamSX3("D5_LOTECTL")[1]
Local nLocal    := TamSX3('B2_LOCAL')[1]    
Local nEnd	    := TamSX3('DB_LOCALIZ')[1]
Local nNumSeri  := TamSX3('DB_NUMSERI')[1] 
Local nHistorico:= 0
Local nEspaco   := 2                   
Local nTot1 	
Local nTot2 
Local nTot3 
Local nTot4 
Local nTot5	
Local nTot6
Local cPicB8Sld	:= PesqPictQT("B8_SALDO",14)

li              := 80
m_pag           := 1

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posicao do inicio das colunas dos registros impressos        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ     
For nI:=1 to Len(aRegs) 
	if (len(aRegs[nI,2]) > nHistorico)
		nHistorico := len(aRegs[nI,2])
	EndIf
Next nI
If nHistorico < 24 
	nHistorico := 55
EndIf
If nLote < 10 
	nLote:=10
EndIf

If Rastro(SB8->B8_PRODUTO, "L")     

	nTot1 	:= nLote+nEspaco+1 		    	//Historico
	nTot2 	:= nTot1+nHistorico+nEspaco 	//Produto Origem/Dest.
	nTot3 	:= nTot2+nDifTam+nEspaco     	//Amz Dest
	nTot4 	:= nTot3+8+nEspaco 	   			//Endereco	
	nTot5	:= nTot4+nEnd+nEspaco			//Nro Serie
	nTot6	:= nTot5+nNumSeri+nEspaco		//Quantidade

Else

	nTot1 	:= nLote+nEspaco+1 		    	//Sublote
    nTot2	:= nTot1+8+nEspaco	   			//Historico
	nTot3 	:= nTot2+nHistorico+nEspaco 	//Produto Origem/Dest.
	nTot4 	:= nTot3+nDifTam+nEspaco    	//Amz Dest
	nTot5 	:= nTot4+8+nEspaco 	   			//Endereco	
	nTot6	:= nTot5+nEnd+nEspaco			//Nro Serie
	nTot7	:= nTot6+nNumSeri+nEspaco		//Quantidad	     
	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa variaveis para controlar cursor de progressao     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetRegua(Len(aRegs))

For nI:=1 to Len(aRegs)
	If lEnd
		@PROW()+1,001 PSAY STR0035		//"Cancelado pelo operador"
		Exit
	EndIf
	Incregua()
	If li > 60
		li := cabec( cTitulo, cCabec1, cCabec2, cNomeProg, cTamanho )
		li++
		@ li,  005 PSAY OemtoAnsi(STR0021) + " " + SB8->B8_LOTECTL  						// Lote
		If Rastro(SB1->B1_COD, "S")
			@ li,030 PSAY OemtoAnsi(STR0022) + " " + SB8->B8_NUMLOTE    					// Sub-Lote
		EndIf
		@ li++,050 PSAY "Validade:" + " " + DtoC(SB8->B8_DTVALID)
		@ li++,005 PSAY OemtoAnsi(STR0023) + " " + SB8->B8_PRODUTO + " - " + SB1->B1_DESC // Produto/Descricao
		@ li++,005 PSAY OemtoAnsi(STR0027) + " " + SB8->B8_LOCAL     						// Almoxarifado
		If Rastro(SB1->B1_COD, "S")
			@ li,005 PSAY  OemtoAnsi(STR0030) + " " + SB8->B8_LOTEFOR   					// Lote Fornecedor
		EndIf
		li++
		@ li,  005 PSAY OemtoAnsi(STR0024)
		@ li++,011 PSAY If(Rastro(SB1->B1_COD, "S"), nSaldo, nSaldoLote)  Picture cPicB8Sld //Saldo
		If Rastro(SB1->B1_COD, "S")
			@ li,005 PSAY OemtoAnsi(STR0025) + " " + DtoC(SB8->B8_DATA)       				// Data Criacao
		EndIf
        li++
		@ li++,000 PSAY __PrtThinLine()
		If Rastro(SB8->B8_PRODUTO,"L")
			@ li,001 PSAY STR0048+Space(nLote-4+nEspaco)+STR0050+Space(nHistorico-24+nEspaco)+If(mv_par01==1,STR0057,STR0058)+Space(nDifTam+nEspaco-10)+STR0073+Space(nEspaco)+STR0089+Space(nEnd+nEspaco-8)+STR0088+Space(nNumSeri+nEspaco-13)+STR0051
			lCol := .F.
		Else	
			@ li,001 PSAY STR0048+Space(nLote-4+nEspaco)+STR0049+Space(nEspaco)+STR0050+Space(nHistorico-24+nEspaco)+If(mv_par01==1,STR0057,STR0058)+Space(nDifTam+nEspaco-10)+STR0073+Space(nEspaco)+STR0089+Space(nEnd+nEspaco-8)+STR0088+Space(nNumSeri+nEspaco-13)+STR0051
		EndIf
		li ++
		@ li,000 PSAY __PrtThinLine()
		li ++
	EndIf

	@ li,001 	 PSAY aRegs[nI,1]		//Lote
	If lCol
		@ li,nTot1 PSAY aRegs[nI,2]		//SubLote
		@ li,nTot2 PSAY aRegs[nI,3]		//Historico
		@ li,nTot3 PSAY aRegs[nI,4]		//Produto Origem/Dest. 
		IF len(aRegs[nI,5]) >0
	   		@ li,nTot4 PSAY aRegs[nI,5]	//Amz Dest
	 	Else
			@ li,nTot4 PSAY Space (8)
		EndIf
		IF len(aRegs[nI,8]) >0
			@ li,nTot5 PSAY aRegs[nI,9]		 //Endereco
		Else     
			@ li,nTot5 PSAY Space (nEnd)
		EndIf
	    If !lSubLote
	   		@ li,nTot6 PSAY aRegs[nI,9]      //Nro Serie
	   	Else
			@ li,nTot6 PSAY aRegs[nI,10]      //Nro Serie
			@ li,nTot7  PSAY aRegs[nI,6]    //Quantidade	   	
	   	EndIf	
	Else
		@ li,nTot1 PSAY aRegs[nI,2]		//Historico
		@ li,nTot2 PSAY aRegs[nI,3]		//Produto Origem/Dest.
		IF len(aRegs[nI,4]) >0
	   		@ li,nTot3 PSAY aRegs[nI,4]	//Amz Dest
		Else
			@ li,nTot3 PSAY Space (nLocal)
		EndIf
		IF len(aRegs[nI,8]) >0
			@ li,nTot4 PSAY aRegs[nI,8]		//Endereco	
		Else
	    	@ li,nTot4 PSAY Space (nEnd)
	 	EndIf
		@ li,nTot5 PSAY aRegs[nI,9]    //Nro Serie
		@ li,nTot6 PSAY aRegs[nI,5]		//Quantidade
	EndIf
	li++
Next nI

If li != 80
	li++
	roda(cbcont,cbtxt,cTamanho)
EndIf

If aReturn[5] = 1
	Set Printer To
	dbCommitAll()
	ourspool(wnrel)
EndIf

MS_FLUSH()

Return( .T. )

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³C040Graph ³ Autor ³ Larson Zordan         ³ Data ³ 18/03/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grafico dos totais de Lotes/Sub-Lotes do produto           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function C040Graph(nTotVenc,nTotZera,nTotUsad)
Local oGraph,oDlg,oBmp
Local aObjects := {},aPosObj  :={}
Local aSize    := MsAdvSize(.F.)
Local aInfo    := {aSize[1],aSize[2],aSize[3],aSize[4],3,3}
Local nTotalOcu:= 0,nTotalDes:=0

// Array com objetos utilizados
AADD(aObjects,{100,015,.T.,.F.,.F.})
AADD(aObjects,{100,100,.T.,.T.,.T.})
AADD(aObjects,{100,015,.T.,.F.,.F.})

aPosObj:=MsObjSize(aInfo,aObjects)

DEFINE MSDIALOG oDlg TITLE STR0065 OF oMainWnd PIXEL FROM aSize[7],0 TO aSize[6],aSize[5] //"Grafico da Ocupacao dos Lotes do Produto"
@ aPosObj[1,1],aPosObj[1,2]+20 Say STR0023+"  "+SB1->B1_COD+" - "+SB1->B1_DESC OF oDlg PIXEL
@ aPosObj[2,1],aPosObj[2,2] MSGRAPHIC oGraph SIZE aPosObj[2,3],aPosObj[2,4] OF oDlg PIXEL
oGraph:SetMargins( 5, 5, 5, 5 )
oGraph:SetGradient( GDBOTTOMTOP, CLR_HGRAY, CLR_WHITE )
nSerie := oGraph:CreateSerie( 10 )
If nTotVenc > 0
	oGraph:Add(nSerie,nTotVenc,STR0066,CLR_HRED)	//"Lotes Vencidos"
EndIf
If nTotZera > 0	
	oGraph:Add(nSerie,nTotZera,STR0067, CLR_YELLOW)	//"Lotes Zerados"
EndIf	
oGraph:Add(nSerie,nTotUsad,STR0068,  CLR_GREEN) 	//"Lotes Em Uso"
oGraph:SetLegenProp( GRP_SCRRIGHT, CLR_WHITE, GRP_SERIES, .F. )
oGraph:l3D := .T.

// Informacoes da Legenda
@ aPosObj[3,1],002 BITMAP oBmp RESNAME "PMSEDT1" Of oDlg Size 9,9 Pixel NoBorder
@ aPosObj[3,1],016 SAY STR0066 Of oDlg Size 50,50 Pixel		// "Lotes Vencidos"
@ aPosObj[3,1],060 BITMAP oBmp RESNAME "PMSEDT2" Of oDlg Size 9,9 Pixel NoBorder
@ aPosObj[3,1],075 SAY STR0067 Of oDlg Size 50,50 Pixel		// "Lotes Zerados"
@ aPosObj[3,1],115 BITMAP oBmp RESNAME "PMSEDT3" Of oDlg Size 9,9 Pixel NoBorder
@ aPosObj[3,1],130 SAY STR0068 Of oDlg Size 50,50 Pixel		// "Lotes Em Uso"

DEFINE SBUTTON FROM aPosObj[3,1],aPosObj[3,4]-30 ACTION oDlg:End() ENABLE OF oDlg PIXEL
ACTIVATE MSDIALOG oDlg
RETURN

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³C040SldLT ³ Autor ³ Larson Zordan         ³ Data ³ 19/03/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grafico da quantidade do Lote/Sub-Lote                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function C040SldLT(cLoteCTL,cNumLote,nSldLote)
Local oGraph,oDlg
Local aObjects := {},aPosObj  :={}
Local aSize    := MsAdvSize(.F.)
Local aInfo    := {aSize[1],aSize[2],aSize[3],aSize[4],3,3}
Local nTotUsad := 0,nTotLote:=0, aSaldo:={}
Local nx

// Totaliza as quantidades dos movimentos
If Len(aRegs) >= 1 .And. !Empty(aRegs[1,1])
	For nX := 1 To Len(aRegs)
		nTotUsad += Val(aRegs[nX,5])
	Next nX	
EndIf

// Calculo para achar o total do lote (saldo+total dos movimentos)
nTotLote := nSldLote + nTotUsad

// Array com objetos utilizados
AADD(aObjects,{100,015,.T.,.F.,.F.})
AADD(aObjects,{100,100,.T.,.T.,.T.})
AADD(aObjects,{100,015,.T.,.F.,.F.})

aPosObj:=MsObjSize(aInfo,aObjects)

DEFINE MSDIALOG oDlg TITLE STR0062 OF oMainWnd PIXEL FROM aSize[7],0 TO aSize[6],aSize[5] //"Grafico do Saldo do Lote Selecionado"
@ aPosObj[1,1]+1,aPosObj[1,2]+20 Say STR0023+" "+SB1->B1_COD+" - "+SB1->B1_DESC OF oDlg PIXEL
@ aPosObj[1,1]+9,aPosObj[1,2]+20 Say STR0021+" "+cLoteCTL+If(Rastro(SB1->B1_COD,"S"),cNumLote,"") OF oDlg PIXEL
@ aPosObj[2,1],aPosObj[2,2] MSGRAPHIC oGraph SIZE aPosObj[2,3],aPosObj[2,4] OF oDlg PIXEL
oGraph:SetMargins( 5, 5, 5, 5 )
oGraph:SetGradient( GDBOTTOMTOP, CLR_HGRAY, CLR_WHITE )
nSerie := oGraph:CreateSerie( 4 )
If mv_par01 == 1
	oGraph:Add(nSerie,nTotLote,STR0063,CLR_HBLUE) //"Qtde Total do Lote"
	oGraph:Add(nSerie,nTotUsad,STR0064,CLR_HRED)  //"Qtde Total Usada"
Else	
	oGraph:Add(nSerie,nTotUsad,STR0063,CLR_HBLUE) 			//"Qtde Total do Lote"
	oGraph:Add(nSerie,nTotUsad-nSldLote,STR0064,CLR_HRED)  //"Qtde Total Usada"
EndIf
oGraph:l3D := .T.
DEFINE SBUTTON FROM aPosObj[3,1],aPosObj[3,4]-30 ACTION oDlg:End() ENABLE OF oDlg PIXEL
ACTIVATE MSDIALOG oDlg
RETURN

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³C040LauCQ ³ Autor ³ Microsiga Software    ³ Data ³ 19/03/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Visualiza conteudo do botao LaudoCQ                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATC040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function C040LauCQ(oLbx)
Local aArea	   := GetArea()
Local aAreaSX3 := SX3->(GetArea())
Local aAcho	   := {}
Local cCadAnt  := cCadastro
Local nRecQel  := 0
Local nX	   := 0

cCadastro := STR0081 //"Laudo Geral da Inspecao"

SX3->(dbSetOrder(1))
SX3->(MsSeek("QEL"))
While SX3->(!Eof()) .And. (SX3->X3_ARQUIVO == "QEL")
	If !(SX3->X3_BROWSE=='N') .And. (cNivel >= SX3->X3_NIVEL)
		Aadd(aAcho,SX3->X3_CAMPO)
	EndIf
	SX3->(dbSkip())
Enddo

nX := aScan(aRecQEL, {|x| x[1]== aRegs[oLbx:nAT,3]})
If nX > 0
	nRecQEL := aRecQEL[nX,2]
	If nRecQEL > 0       
		dbSelectArea("QEL")
		MsGoto(	nRecQEL )
		AxVisual(Alias(), Recno(), 2, aAcho )
	EndIf
EndIf

cCadastro := cCadAnt

RestArea(aAreaSX3)
RestArea(aArea)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Fabio Alves Silva     ³ Data ³05/10/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados         ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/        
Static Function MenuDef()     
Private aRotina	:= {	{STR0001,"PesqBrw",0,1,0,.F.},;	//"Pesquisar"
						{STR0002,"C040Par",0,2,0,nil},;  	//"Tipo"
						{STR0003,"C040Rastro",0,4,0,nil}}	//"Rastrear" 
If ExistBlock ("MTC040MNU")							   
	ExecBlock ("MTC040MNU",.F.,.F.)
EndIf	
Return (aRotina)
