#INCLUDE "ATFA100.CH"
#Include "Protheus.ch"

Static lFWCodFil := .T.
Static _oATFA1001

//********************************
//  Controle de multiplas moedas *
//********************************
Static lMultMoed := .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±± 
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ ATFA100    ³ Autor ³ Cesar C S Prado       ³ Data ³ 05/07/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Check-Program - Analisa os arquivos do ativo fixo e gera     ³±±
±±³          ³ listagem com as inconsistencias.                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAATF                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ATFA100()  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local oDlg
Local cPerg 	    := "AFA101"
Local aArqCrit      := {}
Local nTamFilial 	:= IIf( lFWCodFil, FWSIZEFILIAL() , TamSx3( "CT2_FILIAL" )[1] )
Local nOpca         := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a Integridade dos dados de Entrada     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aRotina := MenuDef()
Private cArqCrit:= ""
Private lEnd := .F.

ATFXKERNEL() 

If !IsBlind()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Desenha a tela do programa     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nOpca := 0
	DEFINE MSDIALOG oDlg FROM  64,33 TO 178,375 TITLE OemToAnsi(STR0005) PIXEL // "Verifica‡Æo de Integridade"
	@ 06, 5 SAY OemToAnsi(STR0006) SIZE 245, 7 OF oDlg PIXEL // "Este programa tem o objetivo de verificar a integridade dos arquivos"
	@ 13, 5 SAY OemToAnsi(STR0007) SIZE 245, 7 OF oDlg PIXEL // "do SIGAATF Advanced e emitir uma rela‡Æo dos problemas detectados."
	@ 20, 5 SAY OemToAnsi(STR0008) SIZE 245, 7 OF oDlg PIXEL // "Posicione a data-base no mˆs imediatamente posterior ao £ltimo"
	@ 27, 5 SAY OemToAnsi(STR0009) SIZE 245, 7 OF oDlg PIXEL // "c lculo ou no mˆs da implanta‡Æo, caso nenhum calculo tenha sido"
	@ 34, 5 SAY OemToAnsi(STR0010) SIZE 245, 7 OF oDlg PIXEL // "executado ainda."
	DEFINE SBUTTON FROM 40, 098 TYPE 1 ENABLE OF oDlg ACTION ( nOpca:=1,oDlg:End() )
	DEFINE SBUTTON FROM 40, 126 TYPE 2 ENABLE OF oDlg ACTION ( nOpca:=2,oDlg:End() )
	ACTIVATE MSDIALOG oDlg CENTERED

Endif

IF nOpcA == 1 .OR. IsBlind()

	If IsBlind()
		lPerg := Pergunte(cPerg,.F.)
	Else
		lPerg := Pergunte(cPerg,.T.)
	Endif
	
	If lPerg
		If MV_PAR01 == 1 .And. !Empty(xFilial("SN1"))// Seleciona filiais
			Processa({ |lEnd| Afa100Fil(MV_PAR02,MV_PAR03) })
		Else
			Processa({ |lEnd| AF100Checa() })
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Imprime a listagem com os erros encontrados  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		AF100Lista()
	EndIf
End

Return 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ATFA100 ºAutor  ³Alvaro Camillo Neto º Data ³  21/09/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Executa o processamento para cada filial                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ ATFA100                                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Afa100Fil(cFilDe,cFilAte)
Local cFilIni 	:= cFIlAnt
Local aArea		:= GetArea()
Local nInc		:= 0
Local aSM0		:= AdmAbreSM0()

For nInc := 1 To Len( aSM0 )
	If aSM0[nInc][1] == cEmpAnt .AND. aSM0[nInc][2] >= cFilDe .AND. aSM0[nInc][2] <= cFilAte
		cFilAnt := aSM0[nInc][2]

		ProcLogAtu("MENSAGEM","EXECUTANDO O PROCESSO DA FILIAL "  + cFilAnt)
		AF100Checa()
	EndIf
Next

cFIlAnt := cFilIni
RestArea(aArea)

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ AF100Checa ³ Autor ³ Cesar C S Prado       ³ Data ³ 05/07/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica a integridade dos dados do SIGAATF Advanced         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ATFA100                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF100Checa

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Defini‡„o das variaveis locais      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cSN1Key,  cSN3Key

Local nValCorDep, nValCorr, nTaxaCorr, nDias := 0
Local lCalcula   	:= GetNewPar("MV_CORREC","N") == "S"		//for‡ar a corre‡„o
Local nParCorrec 	:= GetNewPar("MV_VALCORR",0)				//valor para corre‡„o
Local nTaxaMesSeg
Local aTaxas		:= {}
Local nTamFilial 	:= IIf( lFWCodFil, FWSIZEFILIAL(), TamSx3( "CT2_FILIAL" )[1] )
Local aArqCrit  	:= {	{"NOMARQ", "C", 3, 0},;
							{"FILIAL", "C", nTamFilial, 0},;
							{"CBASE" , "C",10, 0},;
							{"ITEM"  , "C", 4, 0},;
							{"TIPO"  , "C", 2, 0},;
							{"OCORR" , "C", 2, 0},;
							{"MOTIVO", "C", 2, 0},;
							{"DESCR" , "C",40, 0},;
							{"HISTOR", "C",50, 0}	}
Local dDataF  		:= LastDay( dDataBase )
Local lCtb 			:= CtbInUse()
Local cAliasBusca
Local nUfir 		:= 0
Local nAx2  		:= 1
Local nAx
Local cN1TipoNeg 	:= Alltrim(SuperGetMv("MV_N1TPNEG",.F.,"")) // Tipos de N1_PATRIM que aceitam Valor originais negativos
Local cN3TipoNeg 	:= Alltrim(SuperGetMv("MV_N3TPNEG",.F.,"")) // Tipos de N3_TIPO que aceitam Valor originais negativos
Local aOcorrencia 	:= {'',''}
Local lFind 		:= .f.

Local cSN4Key 		:= ""
Local nCountSNx
Local nK			:= 0
//********************************
// Controle de multiplas moedas  *
//********************************
Local __nQuantas := If(lMultMoed,AtfMoedas(),5)
Local lCrititca := .F.
Local cM0Fil		:= ""
Local nInc		:= 0
Local aSM0		:= {}
Local aTiposAtf	:= {}
Local aTipos	:= {}
Local cTiposAtf	:= ""

If MV_PAR01 == 1 .And. Empty(xFilial("SN1"))
	ProcLogAtu("MENSAGEM","TRATAMENTO MULTI FILIAL DESABILITADO: SN1 COMPARTILHADO")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria tabela temporária para gravar as criticas                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If _oATFA1001 <> Nil
	_oATFA1001:Delete()
	_oATFA1001 := Nil
Endif

_oATFA1001 := FWTemporaryTable():New( "CRITICA" )  
_oATFA1001:SetFields(aArqCrit) 
_oATFA1001:AddIndex("1", {"NOMARQ","FILIAL","CBASE","ITEM"})

//------------------
//Criação da tabela temporaria
//------------------
_oATFA1001:Create()  

DbSelectArea( "SM2" )
DbSeek(FirstDay(dDataBase), .T.)
While !Eof() .And. SM2->M2_DATA <= LastDay(dDataBase)

	//********************************
	// Controle de multiplas moedas  *
	//********************************
	If lMultMoed
		AAdd(aTaxas,{})
		AtfMultMoe(,,{|x| aAdd(aTaxas[Len(aTaxas)], If( x=1 , SM2->M2_Data , SM2->&("M2_Moeda"+Alltrim(Str(x))) )) })
	Else
		AAdd(aTaxas,{SM2->M2_Data,SM2->M2_Moeda2,SM2->M2_Moeda3,SM2->M2_Moeda4,SM2->M2_Moeda5})
	EndIf
	++nDias
	dbSkip()
EndDo
/*
Verifica os tipos de ativo constantes na tabela G1 */
aTiposAtf := Aclone(ATFXTpBem(1,.T.))
aTipos := Aclone(ATFXTpBem(2,.T.))
For nK := 1 To Len(aTipos)
	Aadd(aTiposAtf,aTipos[nK])
Next
aTipos := Aclone(ATFXTpBem(3,.T.))
For nK := 1 To Len(aTipos)
	Aadd(aTiposAtf,aTipos[nK])
Next
aTiposAtf := Asort(aTiposAtf)
For nK := 1 To Len(aTiposAtf)
	cTiposAtf += If(nK > 1,"/","")
	cTiposAtf += aTiposAtf[nK]
Next

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicia a leitura de todo o arquivo SN1           ³
//³ . Checa sua integridade com o SN3                ³
//³ . Checa sua integridade do SN3 com o SN4         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SN1")
SN1->(dbSeek(xFilial("SN1")))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa controle para movimenta‡„o do cursor    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PROCREGUA( SN1->(RecCount())+SN3->(RecCount())+SN4->(RecCount()) )

While ! SN1->(Eof())

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta a r‚gua     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IncProc()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Somente processa os registros da filial ativa    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SN1->N1_FILIAL != xFilial("SN1")  // cFilial
		SN1->(dbSkip())
		Loop
	End
	cSN1Key := SN1->N1_FILIAL+SN1->N1_CBASE+SN1->N1_ITEM

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Obriga a data de aquisi‡„o      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF Empty(SN1->N1_AQUISIC)
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN1"
		CRITICA->FILIAL := SN1->N1_FILIAL
		CRITICA->CBASE  := SN1->N1_CBASE
		CRITICA->ITEM   := SN1->N1_ITEM
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0012) // "Falta data de aquisicao"
		MsUnlock()
		dbSelectArea("SN1")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa a existencia do registro no SN3      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SN3")
	SN3->(dbSeek(cSN1Key))

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Caso nao tenha localizado no SN3 aponta no arquivo de CRITICA       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF cSN1Key != SN3->N3_FILIAL+SN3->N3_CBASE+SN3->N3_ITEM
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN1"
		CRITICA->FILIAL := SN1->N1_FILIAL
		CRITICA->CBASE  := SN1->N1_CBASE
		CRITICA->ITEM   := SN1->N1_ITEM
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0013) // "Nao localizou no SN3"
		MsUnlock()

		dbSelectArea("SN1")
		SN1->(dbSkip())
		Loop
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se encontrou procede varredura no SN4      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	While ! SN3->(Eof()) .And. cSN1Key = SN3->N3_FILIAL+SN3->N3_CBASE+SN3->N3_ITEM

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualizacao da chave de pesquisa   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cSN3Key := cSN1Key + SN3->N3_TIPO

	   //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	   //³ Se o TIPO for invalido, aponta no CRITICA      ³
	   //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
      IF !(SN3->N3_TIPO $ cTiposAtf)
		   dbSelectArea("CRITICA")
		   RecLock("CRITICA",.T.)
		   CRITICA->NOMARQ := "SN3"
		   CRITICA->FILIAL := SN3->N3_FILIAL
		   CRITICA->CBASE  := SN3->N3_CBASE
		   CRITICA->ITEM   := SN3->N3_ITEM
		   CRITICA->TIPO   := SN3->N3_TIPO
		   CRITICA->DESCR  := SN1->N1_DESCRIC
		   CRITICA->HISTOR := OemToAnsi(STR0014 + " " + AllTrim(cTiposAtf)) // "Tipo invalido deve ser (01,02,03,04)"
			MsUnlock()

		   dbSelectArea("SN3")
		   SN3->(dbSkip())
		   Loop
	   End

	   //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	   //³ Prepara pesquisa do registro no SN4  ³
	   //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	   dbSelectArea("SN4")

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica situacoes de Baixa                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		cSN3Key := cSN3Key + Trim( Dtos( SN3->N3_AQUISIC ) )

		aOcorrencia := {'',''}
		if SN3->N3_FILORIG != " " .AND. !(Empty(SN3->N3_DTBAIXA)) .AND. !(Empty(SN3->N3_CODBAIXA)) // Aquisição por Transferencia
			aOcorrencia[1] := "05" // Transferencia De
			aOcorrencia[2] := "15" // Transferencia Para	
		Elseif SN3->N3_FILORIG != " " .AND. !(Empty(SN3->N3_DTBAIXA)) .AND. (Empty(SN3->N3_CODBAIXA)) // Baixa por Transferencia
			aOcorrencia[1] := "03" // Transferencia De
			aOcorrencia[2] := "04" // Transferencia Para
		ElseIf SN3->N3_BAIXA == "1"  // Baixa normal
			aOcorrencia[1] := "01"
		Elseif SN3->N3_BAIXA == "2" // Baixa por Adiantamento
			aOcorrencia[1] := "05"
		Endif

	   //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	   //³ Pesquisa existencia do registro no SN4     ³
	   //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	   cSN4Key := If(SN3->N3_FILORIG  != " ", SN3->N3_FILORIG, SN1->N1_FILIAL)+SN1->N1_CBASE+SN1->N1_ITEM+SN3->N3_TIPO
	   SN4->( dbSeek(cSN4Key))
	   lFind := .F.
	   While ! Eof() .And. (cSN4Key) == (SN4->N4_FILIAL+SN4->N4_CBASE+SN4->N4_ITEM+SN4->N4_TIPO) .And. !lFind

	   		lFind := SN4->N4_OCORR == aOcorrencia[1]
	   		If !lFind .and. !Empty(aOcorrencia[2]) // Segunda possibilidade no caso de Baixa por Transferencia
	   		   lFind := SN4->N4_OCORR == aOcorrencia[2]
	        Endif
	        
	        DbSkip()
	   Enddo
	   
	   If !lFind .And. Empty(aOcorrencia[1])
	      lFind := .T.
	   Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se nao localizou no SN4 aponta no arquivo de CRITICA     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		if !lFind
			dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := "SN3"
			CRITICA->FILIAL := SN3->N3_FILIAL
			CRITICA->CBASE  := SN3->N3_CBASE
			CRITICA->ITEM   := SN3->N3_ITEM
			CRITICA->TIPO   := SN3->N3_TIPO
			CRITICA->OCORR  := '--'
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0015) // "Nao localizou no SN4"
			MsUnlock()
		end

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Posiciona no pr¢ximo registro do SN3      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SN3")
		SN3->(dbSkip())
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona no pr¢ximo registro do SN1      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SN1")
	SN1->(dbSkip())
End

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Avalia o conte£do do arquivo SN3        ³
//³ . Checa contra o SN1                    ³
//³ . Checa campos obrigat¢rios             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SN3")
//SN3->(dbSeek(cFilial))
SN3->(dbSeek(xFilial("SN3")))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa controle para movimenta‡„o do cursor    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PROCREGUA( RecCount() )

cMoedaAtf 	:= GetMv("MV_ATFMOED")
nUfir 		:= RecMoeda(dDataBase,cMoedaAtf)
nTaxaMesSeg := af050MesSeg(cMoedaATF)

While ! SN3->(Eof())

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta a r‚gua    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IncProc()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Somente aceita para a mesma filial    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SN3->N3_FILIAL != xFilial("SN3")  // cFilial
		SN3->(dbSkip())
		Loop
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona no SN1        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SN1")
	SN1->(dbSeek(SN3->N3_FILIAL+SN3->N3_CBASE+SN3->N3_ITEM))

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se nao encontrou correspondente no SN1 aponta no CRITICA            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF ! SN1->(Found())
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0016) // "Nao localizou registro no SN1"
		MsUnlock()

		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Checa se a data de inicio da deprecia‡„o ‚  >= data aquisi‡„o       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF ! Empty(SN3->N3_DINDEPR) .And. SN3->N3_DINDEPR < SN1->N1_AQUISIC
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0017) // "Data Inicio Depreciacao Inferior a Data Aquisicao"
		MsUnlock()

		dbSelectArea("SN3")
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a conta est  cadastrada no SI1      ³
	//³ Conta contabil                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF !Empty(SN3->N3_CCONTAB)
		If lCtb
			cAliasBusca := "CT1"
		Else
			cAliasBusca := "SI1"
		Endif
		dbSelectArea(cAliasBusca)
		dbSetOrder(1)
		IF !(dbSeek(xFilial(cAliasBusca)+SN3->N3_CCONTAB)) // cFilial
			dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := cAliasBusca
			CRITICA->FILIAL := SN3->N3_FILIAL
			CRITICA->CBASE  := SN3->N3_CBASE
			CRITICA->ITEM   := SN3->N3_ITEM
			CRITICA->TIPO   := SN3->N3_TIPO
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0018)+SN3->N3_CCONTAB // "Nao cadastrada conta "
			MsUnlock()
		EndIf
		dbSelectArea("SN3")
	Else
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0019) // "Falta conta do bem"
		MsUnlock()
		dbSelectArea("SN3")
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a conta est  cadastrada no SI1     ³
	//³ Conta de Corre‡„o Monet ria                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	nValCorr 	:= 0  //Corre‡Æo do Bem
	nTaxaCorr   := 0
	If lCalCula
		nTaxaCorr := nParCorrec
		nValCorr  := Round(Abs((N3_VORIG&cMoedaAtf*nTaxaCorr)),X3Decimal("N3_VORIG1")) - ;
						(N3_VRCACM1 + N3_VORIG1)
	Else
		If Dtos(dDataBase) <= "19931231"
			nTaxaCorr := nUltTxMes
		ElseIf Dtos(dDataBase) >= "19940101" .and. Dtos(dDataBase) <= "19940731"
			nTaxaCorr := nUltTxMes
		ElseIf Dtos(dDataBase) >= "19940801" .and. Dtos(dDataBase) <= "19941231" .Or.;
			Dtos(dDataBase) = "19950331" .or. Dtos(dDataBase) = "19950630" .or.;
			Dtos(dDataBase) = "19950930" .or. Dtos(dDataBase) = "19951231"
			nTaxaCorr := nTaxaMesSeg
		EndIf
		If nTaxaCorr != 0
			nValCorr := Round(Abs((N3_VORIG&cMoedaAtf*nTaxaCorr)),X3Decimal("N3_VORIG1")) - ;
							(N3_VRCACM1 + N3_VORIG1)
		EndIf
   EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cancela o calculo da correcao se:                                      ³
	//³ 1) O Bem for patrimonio liquido e a data de aquisicao for igual        ³
	//³    a data da implantacao do bem. Bops 920165                           ³
	//³    Observa‡Æo bem de amortiza‡Æo e capital                             ³
	//³  ( n1_patrim $ "AC" ) corrigem no     mes de aquisi‡Æo.                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If MesAnoAtf(SN1->N1_AQUISIC) == MesAnoAtf(dDataBase) .and. SN1->N1_PATRIM = "S"
		nValCorr := 0
	Endif

	IF ! Empty(SN3->N3_CCORREC)
		If lCtb
			cAliasBusca:="CT1"
		Else
			cAliasBusca:="SI1"
		Endif
		dbSelectArea(cAliasBusca)
		dbSetOrder(1)
		IF !(dbSeek(xFilial(cAliasBusca)+SN3->N3_CCORREC))  //cFilial
			dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := cAliasBusca
			CRITICA->FILIAL := SN3->N3_FILIAL
			CRITICA->CBASE  := SN3->N3_CBASE
			CRITICA->ITEM   := SN3->N3_ITEM
			CRITICA->TIPO   := SN3->N3_TIPO
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0020)+SN3->N3_CCORREC // "Nao cadastrada conta "
			MsUnlock()

		End
		dbSelectArea("SN3")
	ElseIf nValCorr # 0
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0021) // "Falta conta da correcao monetaria"
		MsUnlock()

		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a conta est  cadastrada no SI1   ³
	//³ Conta despesa deprecia‡„o                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF !Empty(SN3->N3_CCDEPR)
		If lCtb
			cAliasBusca := "CT1"
		Else
			cAliasBusca := "SI1"
		EndIf
		dbSelectArea(cAliasBusca)
		dbSetOrder(1)
		IF !(dbSeek(xFilial(cAliasBusca)+SN3->N3_CCDEPR)) // cFilial
		  	dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := cAliasBusca
			CRITICA->FILIAL := SN3->N3_FILIAL
			CRITICA->CBASE  := SN3->N3_CBASE
			CRITICA->ITEM   := SN3->N3_ITEM
			CRITICA->TIPO   := SN3->N3_TIPO
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0022)+SN3->N3_CCDEPR // "Nao cadastrada conta "
			MsUnlock()

		End
		dbSelectArea("SN3")
	End

	If dDataBase < CtoD( "01/09/94" )
		dDataF  :=IIf(MesAnoAtf(SN3->N3_DtBaixa) = MesAnoAtf(dDataBase), ;
		SN3->N3_DtBaixa, LastDay(dDataBase))
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcular Media das moedas para calculo da corre‡„o monet ria.       ³
	//³ Caso a moeda seja UFIR (MV_MOEDATF)  e data base for superior a     ³
	//³ 01/09/94, dever  ser utilizada a taxa da UFIR do primeiro dia do    ³
	//³ proximo mes.                                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nUltTxMes  	:= 0

	//********************************
	// Controle de multiplas moedas  *
	//********************************
	For nAx 	:= 2 To __nQuantas
		cAx 	:= Alltrim(Str(nAx))
		For nAx2 := 1 To nDias
			If nAx = Val(cMoedaAtf) .And. aTaxas[nAx2][1] <= dDataF
				nUltTxMes := IIf(aTaxas[nAx2][nAx]=0,nUltTxMes,aTaxas[nAx2][nAx])
			Endif
		Next
	Next

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Somente se houver variacao da ufir ou for pela ufir media (01/09/94)³
	//³ A partir de JULHO/96 a UFIR muda porem nao ha correcao              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nValCorDep := 0

	If ! Empty( N3_CCDEPR ) .or. ! Empty( N3_CDEPREC )

        nTaxaCorr := 0
		If lCalCula
			nTaxaCorr := nParCorrec
		Else
			If Dtos(dDataBase) <= "19931231"
				nTaxaCorr := nUltTxMes
			ElseIf Dtos(dDataBase) >= "19940101" .and. Dtos(dDataBase) <= "19940731"
				nTaxaCorr := nUltTxMes
			ElseIf Dtos(dDataBase) >= "19940801" .and. Dtos(dDataBase) <= "19941231" .Or.;
				Dtos(dDataBase) = "19950331" .or. Dtos(dDataBase) = "19950630" .or.;
				Dtos(dDataBase) = "19950930" .or. Dtos(dDataBase) = "19951231"
				nTaxaCorr := nTaxaMesSeg
			EndIf
	   	EndIf

		If !(( Month(SN3->N3_DINDEPR) = Month(dDataBase) .And.;
			Year(SN3->N3_DINDEPR)  = Year(dDataBase) )) .And. nTaxaCorr != 0
			If lCalcula
				If nTaxaCorr != 0
					nValCorDep:=Round(Abs(&(If(Val(cMoedaAtf)>9,"N3_VRDAC","N3_VRDACM")+cMoedaAtf) + &(If(Val(cMoedaAtf)>9,"N3_VRDME","N3_VRDMES")+cMoedaAtf) ) * ;
					nTaxaCorr,X3Decimal("N3_VORIG1")) - (N3_VRDACM1 + N3_VRDMES1 + N3_VRCDA1)
				EndIf
			ElseIf Dtos(dDataBase) >= "19940801" .and. Dtos(dDataBase) <= "19941231" .Or.;
				Dtos(dDataBase) = "19950331" .or. Dtos(dDataBase) = "19950630" .or.;
				Dtos(dDataBase) = "19950930" .or. Dtos(dDataBase) = "19951231"
				nTaxaCorr := nTaxaMesSeg
				If nTaxaCorr != 0
					nValCorDep:=Round(Abs(&(If(Val(cMoedaAtf)>9,"N3_VRDAC","N3_VRDACM")+cMoedaAtf) + &(If(Val(cMoedaAtf)>9,"N3_VRDME","N3_VRDMES")+cMoedaAtf) ) * ;
					nTaxaCorr,X3Decimal("N3_VORIG1")) - (N3_VRDACM1 + N3_VRDMES1 + N3_VRCDA1)
				EndIf
			EndIf
		EndIf
	EndIf

   If ! (SN1->N1_PATRIM $ " N")
		nValCorDep := 0
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a conta est  cadastrada no SI1   ³
	//³ Conta Corre‡„o Deprecia‡„o                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF !Empty(SN3->N3_CDESP) .And. nValCorDep # 0
		If lCtb
			cAliasBusca := "CT1"
		Else
			cAliasBusca := "SI1"
		EndIf
		dbSelectArea(cAliasBusca)
		dbSetOrder(1)
		IF !(dbSeek(xFilial(cAliasBusca)+SN3->N3_CDESP)) //cFilial
			dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := cAliasBusca
			CRITICA->FILIAL := SN3->N3_FILIAL
			CRITICA->CBASE  := SN3->N3_CBASE
			CRITICA->ITEM   := SN3->N3_ITEM
			CRITICA->TIPO   := SN3->N3_TIPO
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0023)+SN3->N3_CDESP // "Nao cadastrada conta "
			MsUnlock()

		End
		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a conta est  cadastrada no SI1    ³
	//³ Conta Deprecia‡„o Acumulada                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF !Empty(SN3->N3_CCDEPR)
		If lCtb
			cAliasBusca := "CT1"
		Else
			cAliasBusca := "SI1"
		EndIf
		dbSelectArea(cAliasBusca)
		dbSetOrder(1)
		IF !(dbSeek(xFilial(cAliasBusca)+SN3->N3_CCDEPR)) // cFilial
			dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := cAliasBusca
			CRITICA->FILIAL := SN3->N3_FILIAL
			CRITICA->CBASE  := SN3->N3_CBASE
			CRITICA->ITEM   := SN3->N3_ITEM
			CRITICA->TIPO   := SN3->N3_TIPO
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0024)+SN3->N3_CCDEPR // "Nao cadastrada conta "
			MsUnlock()

		End
		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Testa se a taxa de deprecia‡„o est  zerada   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	IF (!Empty(SN3->N3_CDESP) .Or. !Empty(SN3->N3_CCDEPR) .Or. ;
		!Empty(SN3->N3_CDEPREC)) .And. &('SN3->N3_TXDEPR'+cMoedaAtf) == 0

		If SN1->N1_PATRIM $ "N "
			dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := "SN3"
			CRITICA->FILIAL := SN3->N3_FILIAL
			CRITICA->CBASE  := SN3->N3_CBASE
			CRITICA->ITEM   := SN3->N3_ITEM
			CRITICA->TIPO   := SN3->N3_TIPO
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0025) // "Falta taxa de deprecia‡„o da moeda do ativo"
			MsUnlock()
		Endif
		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Testa se a taxa de deprecia‡„o est  zerada   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF (!Empty(SN3->N3_CDESP) .Or. !Empty(SN3->N3_CCDEPR) .Or. ;
		&('SN3->N3_TXDEPR'+cMoedaAtf) != 0) .And. Empty(SN3->N3_CDEPREC)
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0026) // "Falta conta de depreciacao do bem"
		MsUnlock()

		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Testa se a taxa de deprecia‡„o esta zerada   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF (!Empty(SN3->N3_CDESP) .Or. !Empty(SN3->N3_CDEPREC) .Or. ;
		&('SN3->N3_TXDEPR'+cMoedaAtf) != 0) .And. Empty(SN3->N3_CCDEPR)
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0027) // "Falta conta da depreciacao acumulada"
		MsUnlock()

		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Testa se a taxa de deprecia‡„o esta zerada   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF (!Empty(SN3->N3_CCDEPR) .Or. !Empty(SN3->N3_CDEPREC) .Or. ;
		&('SN3->N3_TXDEPR'+cMoedaAtf) != 0) .And.;
		(Empty(SN3->N3_CDESP) .And. nValCorDep # 0)
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0028) // "Falta conta de correcao da depreciacao do bem"
		MsUnlock()

		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Testa inconsistencia Data Inicio Deprecia‡„o e Contas Deprecia‡„o   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF Empty(SN3->N3_DINDEPR) .And. (!Empty(SN3->N3_CDESP) .Or. !Empty(SN3->N3_CCDEPR))
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0029) // "Data Inicio Depreciacao deve ser preenchida"
		MsUnlock()

		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Testa taxa de deprecia‡„o negativa   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//********************************
	// Controle de multiplas moedas  *
	//********************************
	lCrititca := .F.
	If lMultMoed
		AtfMultMoe(,,{|x| If(!lCrititca, lCrititca := (SN3->&(If(x>9,"N3_TXDEP","N3_TXDEPR")+Alltrim(Str(x))) <0),.F.) })
	Else
		lCrititca := (SN3->N3_TXDEPR1<0).or.(SN3->N3_TXDEPR2<0).or.(SN3->N3_TXDEPR3<0).or.(SN3->N3_TXDEPR4<0).or.(SN3->N3_TXDEPR5<0)
	EndIf
	IF lCrititca
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0030) // "Taxa de depreciacao deve ser positivo"
		MsUnlock()

		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Testa inconsistencia Data Inicio Deprecia‡„o e Contas Deprecia‡„o   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//********************************
	// Controle de multiplas moedas  *
	//********************************
	lCrititca := .F.
	If lMultMoed
		AtfMultMoe(,,{|x| If(!lCrititca, lCrititca := (SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) != 0),.F.) })
	Else
		lCrititca := (SN3->N3_VRDACM1!=0).or.(SN3->N3_VRDACM2!=0).or.(SN3->N3_VRDACM3!=0).or.(SN3->N3_VRDACM4!=0).or.(SN3->N3_VRDACM5!=0)
	Endif
	IF (	Empty(SN3->N3_CDEPREC) .Or. Empty(SN3->N3_CCDEPR)) .And. lCrititca
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0031) // "Falta preencher contas de depreciacao"
		MsUnlock()

		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Testa valor negativo     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//********************************
	// Controle de multiplas moedas  *
	//********************************
	lCrititca := .F.
	If lMultMoed
		AtfMultMoe(,,{|x| If(!lCrititca, lCrititca := (SN3->&("N3_VORIG"+Alltrim(Str(x))) < 0),.F.) })
	Else
		lCrititca := (SN3->N3_VORIG1<0).or.(SN3->N3_VORIG2<0).or.(SN3->N3_VORIG3<0).or.(SN3->N3_VORIG4<0).or.(SN3->N3_VORIG5<0)
	EndIf
   IF (lCrititca) .And. (SN3->N3_TIPO != "05" .And. !(SN1->N1_PATRIM $ cN1TipoNeg) .And. !(SN3->N3_TIPO $ cN3TipoNeg))
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0032) // "Sistema nao aceita valor negativo"
		MsUnlock()

		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Testa valor negativo       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//********************************
	// Controle de multiplas moedas  *
	//********************************
	lCrititca := .F.
	If lMultMoed
		AtfMultMoe(,,{|x| If(!lCrititca, lCrititca := (SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) > SN3->&("N3_VORIG"+Alltrim(Str(x))) + SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) ) ,.F.) })
	Else
		lCrititca := (SN3->N3_VRDACM1 > SN3->N3_VORIG1 + SN3->N3_AMPLIA1).or.;
					(SN3->N3_VRDACM2 > SN3->N3_VORIG2 + SN3->N3_AMPLIA2).or.;
					(SN3->N3_VRDACM3 > SN3->N3_VORIG3 + SN3->N3_AMPLIA3).or.;
					(SN3->N3_VRDACM4 > SN3->N3_VORIG4 + SN3->N3_AMPLIA4).or.;
					(SN3->N3_VRDACM5 > SN3->N3_VORIG5 + SN3->N3_AMPLIA5)
	EndIf
   IF ( lCrititca ) .And. (SN3->N3_TIPO != "05" .And. !(SN1->N1_PATRIM $ cN1TipoNeg) .And. !(SN3->N3_TIPO $ cN3TipoNeg))
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0046) // "Depr. Acumulada maior que Valor Original (2..5)"
		MsUnlock()

		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o conteudo do N3_BAIXA        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF !(SN3->N3_BAIXA $ " 012")
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN3"
		CRITICA->FILIAL := SN3->N3_FILIAL
		CRITICA->CBASE  := SN3->N3_CBASE
		CRITICA->ITEM   := SN3->N3_ITEM
		CRITICA->TIPO   := SN3->N3_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0033) // "Campo N3_BAIXA deve conter 0,1 ou 2"
		MsUnlock()

		dbSelectArea("SN3")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ T‚cnica de verifica‡„o v lida apenas para ufir mensal ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If dDataBase >= cTod("01/09/94","ddmmyy")
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se o valor original + a corre‡„o acumulada est   ³
		//³ de acordo com o valor original em Ufir                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Abs( ((SN3->N3_VORIG1 + SN3->N3_VRCACM1) / nUfir ) - ;
			&('SN3->N3_VORIG'+cMoedaAtf) ) > 1
			dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := "SN3"
			CRITICA->FILIAL := SN3->N3_FILIAL
			CRITICA->CBASE  := SN3->N3_CBASE
			CRITICA->ITEM   := SN3->N3_ITEM
			CRITICA->TIPO   := SN3->N3_TIPO
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0034) // "Valor em Real+Correcao Acum. # Valor em Ufir"
			MsUnlock()
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se a deprecia‡„o + a corre‡„o acumulada est   ³
		//³ de acordo com a deprecia‡„o em Ufir                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		//********************************
		// Controle de multiplas moedas  *
		//********************************
		If Abs( ((SN3->N3_VRDACM1 + SN3->N3_VRCDA1) / nUfir ) - ;
			SN3->&(If(Val(cMoedaAtf)>9,'N3_VRDACM','N3_VRDACM')+cMoedaAtf) ) > 1
			//&('SN3->N3_VRDACM'+cMoedaAtf) ) > 1
			dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := "SN3"
			CRITICA->FILIAL := SN3->N3_FILIAL
			CRITICA->CBASE  := SN3->N3_CBASE
			CRITICA->ITEM   := SN3->N3_ITEM
			CRITICA->TIPO   := SN3->N3_TIPO
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0035) // "Deprec.em Real+Correcao Acum. # Deprec.em Ufir"
			MsUnlock()
		Endif
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Avanca para o pr¢ximo registro no SN3     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SN3")
	SN3->(dbSkip())
End

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Efetua a verifica‡„o do SN5                 ³
//³ . Verifica o conteudo do campo N5_TIPO      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SN5")
//SN5->(dbSeek(cFilial))
SN5->(dbSeek(xFilial("SN5")))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa controle para movimenta‡„o do cursor   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PROCREGUA( RecCount() )

While ! SN5->(Eof())

	IncProc()


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifico se o SN5 est  correto     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SN5->N5_FILIAL != xFilial("SN5")  // cFilial
		SN5->(dbSkip())
		Loop
	End
	IF !(N5_TIPO $ "0123456789ABCDEFGHIJKLMNOPQRSTUVY")
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN5"
		CRITICA->FILIAL := SN5->N5_FILIAL
		CRITICA->DESCR  := SN5->N5_CONTA + OemToAnsi(STR0036)+ DtoC(SN5->N5_DATA) // " em "
		CRITICA->HISTOR := OemToAnsi(STR0037) // "Tipo deve ser (0..9)"
		MsUnlock()

	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifico se o SN5 est  correto     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SN5")
	SN5->(dbSkip())
End

//±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
//±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
//±±³ Efetua a verifica‡„o dos Saldos                                    ³±±
//±±³ . Verifica se o registro no SN4 existe no SN1                      ³±±
//±±³ . Verifica se o registro no SN4 existe no SN3                      ³±±
//±±³ . Valida campos obrigatorios do SN4                                ³±±
//±±³ . Calcula o saldo a partir do SN4                                  ³±±
//±±³ . Calcula o saldo a partir do SN5                                  ³±±
//±±³ . Compara os resultados apurados                                   ³±±
//±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
//±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
dbSelectArea("SN4")
SN4->(dbSetOrder(2))	// FILIAL+CONTA+DATA
SN4->(dbSeek(xFilial("SN4")))
//SN4->(dbSeek(cFilial))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa controle para movimenta‡„o do cursor      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PROCREGUA( SN4->(RecCount())+SN5->(RecCount()) )

While ! SN4->(Eof())

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta a r‚gua       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IncProc()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Despreza o registro caso seja de outra filial    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SN4->N4_FILIAL != xFilial("SN4")
		SN4->(dbSkip())
		Loop
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se o TIPO for invalido, aponta no CRITICA     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
   IF !(SN4->N4_TIPO $ cTiposAtf)
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN4"
		CRITICA->FILIAL := SN4->N4_FILIAL
		CRITICA->CBASE  := SN4->N4_CBASE
		CRITICA->ITEM   := SN4->N4_ITEM
		CRITICA->TIPO   := SN4->N4_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0038 + " " + AllTrim(cTiposAtf)) // "Tipo invalido: deve estar entre 01 ou 04."
		MsUnlock()

		dbSelectArea("SN4")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se o Motivo for invalido, aponta no CRITICA     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF !(Empty(SN4->N4_MOTIVO))
		If Empty(Tabela("16",SN4->N4_MOTIVO, .F. ) )		// Busca na Tabela 16
			dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := "SN4"
			CRITICA->FILIAL := SN4->N4_FILIAL
			CRITICA->CBASE  := SN4->N4_CBASE
			CRITICA->ITEM   := SN4->N4_ITEM
			CRITICA->TIPO   := SN4->N4_TIPO
			CRITICA->OCORR  := SN4->N4_OCORR
			CRITICA->MOTIVO := SN4->N4_MOTIVO
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0039) // "Motivo Invalido: deve estar entre 01 e 09."
			MsUnlock()
     	Endif
		dbSelectArea("SN4")
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ AVALIA O SN1 - DEVE DETERMINAR SE EXISTE APENAS 01      ³
	//³ INDEPENDENTE DE FILIAL, CASO CONTRARIO - CRITICA		³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    nCountSNx	:= 0
	aSM0 		:= AdmAbreSM0()
	For nInc := 1 To Len( aSM0 )
		If aSM0[nInc][1] == cEmpAnt
			cM0FIL := aSM0[nInc][2]
			If SN1->(dbSeek(xFilial("SN4",cM0FIL)+SN4->N4_CBASE+SN4->N4_ITEM)) .and. SN1->N1_STATUS!='4'
				nCountSNx++
			EndIf
		EndIf
	Next

	DbSelectArea("SN4")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se nao localizou no SN1 aponta no arquivo de CRITICA    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF nCountSNx == 0
		dbSelectArea("CRITICA")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN4"
		CRITICA->FILIAL := SN4->N4_FILIAL
		CRITICA->CBASE  := SN4->N4_CBASE
		CRITICA->ITEM   := SN4->N4_ITEM
		CRITICA->TIPO   := SN4->N4_TIPO
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0040) // "Nao localizou no SN1"
		MsUnlock()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se localizou mais de um cabeçalho com a mesma chave     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ELSEIF nCountSNx > 1
		If FWModeAccess("SN4")=="E"
			dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := "SN4"
			CRITICA->FILIAL := SN4->N4_FILIAL
			CRITICA->CBASE  := SN4->N4_CBASE
			CRITICA->ITEM   := SN4->N4_ITEM
			CRITICA->TIPO   := SN4->N4_TIPO
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0048) // "Atencao! Mesmo código+item em diferentes empresas do mesmo grupo."
			MsUnlock()
		EndIf

	ENDIF

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ AVALIA O SN3 - DEVE DETERMINAR SE EXISTE APENAS 01      ³
	//³ INDEPENDENTE DE FILIAL, CASO CONTRARIO - CRITICA		³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    nCountSNx 	:= 0
    If FWModeAccess("SN4")=="E"
		aSM0 		:= AdmAbreSM0()
		For nInc := 1 To Len( aSM0 )
			If aSM0[nInc][1] == cEmpAnt
				cM0FIL := aSM0[nInc][2]
				If SN3->(dbSeek(cM0FIL+SN4->N4_CBASE+SN4->N4_ITEM+SN4->N4_TIPO))
					If  !(SN3->N3_BAIXA =='1' .AND. SN1->(dbSeek(SN3->N3_FILIAL+SN3->N3_CBASE+SN3->N3_ITEM)) .AND. SN1->N1_STATUS=='4')
						nCountSNx++
					Endif						
				EndIf
			EndIf
		Next
	
		dbSelectArea("SN3")
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se n„o localizou no SN3 aponta no arquivo de CRITICA   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF nCountSNx == 0
			dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := "SN4"
			CRITICA->FILIAL := SN4->N4_FILIAL
			CRITICA->CBASE  := SN4->N4_CBASE
			CRITICA->ITEM   := SN4->N4_ITEM
			CRITICA->TIPO   := SN4->N4_TIPO
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0041) // "Nao localizou no SN3"
			MsUnlock()
		ELSEIF nCountSNx > 1
			dbSelectArea("CRITICA")
			RecLock("CRITICA",.T.)
			CRITICA->NOMARQ := "SN4"
			CRITICA->FILIAL := SN4->N4_FILIAL
			CRITICA->CBASE  := SN4->N4_CBASE
			CRITICA->ITEM   := SN4->N4_ITEM
			CRITICA->TIPO   := SN4->N4_TIPO
			CRITICA->DESCR  := SN1->N1_DESCRIC
			CRITICA->HISTOR := OemToAnsi(STR0049) // "Mesmo código+item+tipo+seq em diferentes filiais da mesma empresa."
			MsUnlock()
		ENDIF
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se ocorrˆncia for invalida, aponta no CRITICA    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF !(SN4->N4_OCORR $ "01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,20")
		RecLock("CRITICA",.T.)
		CRITICA->NOMARQ := "SN4"
		CRITICA->FILIAL := SN4->N4_FILIAL
		CRITICA->CBASE  := SN4->N4_CBASE
		CRITICA->ITEM   := SN4->N4_ITEM
		CRITICA->TIPO   := SN4->N4_TIPO
		CRITICA->OCORR  := SN4->N4_OCORR
		CRITICA->DESCR  := SN1->N1_DESCRIC
		CRITICA->HISTOR := OemToAnsi(STR0042) // "Ocorrencia invalida"
		MsUnlock()

		dbSelectArea("SN4")
		SN4->(dbSkip())
		Loop
	End

	dbSelectArea("SN4")
	SN4->(dbSkip())
End

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Volta o SN4 para o seu ¡ndice prim rio      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SN4")
SN4->(dbSetOrder(1))

Return NIL

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ AF100Lista ³ Autor ³ Cesar C S Prado       ³ Data ³ 07/07/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Emiss„o da listagem de consistˆncia                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ATFA100                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF100Lista()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private CbTxt
Private cbCont,cabec1,cabec2,cabec3,wnrel,nPos
Private Tamanho		:=" "
Private Limite 		:=132
Private Titulo 		:=OemToAnsi(STR0043) // "Listagem da Integridade do SIGAATF"
Private cDesc1 		:=OemToAnsi(STR0044) // "Emiss„o das Ocorrˆncias da Valida‡„o do SIGAATF."
Private cDesc2 		:=""
Private cDesc3 		:=""

Private aReturn 	:= { "Zebrado", 1,"Administracao", 2, 2, 1, "",1 }
Private aLinha		:= { }
Private NomeProg	:= "ATFCRITICA", nLastKey := 0

If CRITICA->(RecCount()) == 0
	dbSelectArea("CRITICA")
	Use
	
	//Deleta tabela temporaria do banco de dados
	If _oATFA1001 <> Nil
		_oATFA1001:Delete()
		_oATFA1001 := Nil
	Endif

	dbSelectArea("SN3")
	HELP(" ",1,"ATFA100OK")
	Return
EnDif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para Impress„o do Cabe‡alho e Rodap‚    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cbTxt    := Space(10)
cbCont   := 0
Cabec1   := OemToAnsi(STR0045) // "ARQ  FIL CODIGO BASE  ITEM  TP  OC  MT  DESCRICAO                                 POSSIVEL INCONSISTENCIA"
Cabec2   := " "
Cabec3   := " "
cString  := "SN3"
Li       := 80
m_Pag    := 1

wnRel    := "ATFA100"

Private AParDef := {}
aOrd := {"Por Codigo"}

wnrel := SetPrint(cString,wnrel,"ParamDef(cAlias)",@Titulo,cDesc1,cDesc2,cDesc3,.T.,aOrd)

If nLastKey == 27
	dbSelectArea("CRITICA")
	Use

	//Deleta tabela temporaria do banco de dados
	If _oATFA1001 <> Nil
		_oATFA1001:Delete()
		_oATFA1001 := Nil
	Endif

	dbSelectArea("SN3")
	Return
Endif

SetDefault(aReturn,cString)

If nLastKey == 27
	dbSelectArea("CRITICA")
	Use

	//Deleta tabela temporaria do banco de dados
	If _oATFA1001 <> Nil
		_oATFA1001:Delete()
		_oATFA1001 := Nil
	Endif

	dbSelectArea("SN3")
	Return
End

If !IsBlind() .Or. FwIsInCallStack("ATA100_001")
	RptStatus({|lEnd| AF100Printa(lEnd,WnRel,Titulo)} )
EndIf

Return
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ AF100Printa³ Autor ³ Cesar C S Prado       ³ Data ³ 07/07/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Emiss„o da listagem de consistˆncia                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ATFA100                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function af100Printa(lEnd,WnRel,Titulo)
Local cQuebra		:= ""
Local cOldQuebra	:= ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa controle para movimenta‡„o do cursor      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SETREGUA(CRITICA->(RecCount()) )

dbSelectArea("CRITICA")
CRITICA->(dbGoTop())
While ! CRITICA->(Eof())
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta a r‚gua              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IncRegua()

	IF lEnd
		@PROW()+1, 001 PSay OemToAnsi(STR0047) // "CANCELADO PELO OPERADOR"
		Exit
	End

	IF li > 58
		cabec(titulo,cabec1,cabec2,nomeprog,tamanho,IIF(aReturn[4]==1,GetMv("MV_COMP"),GetMv("MV_NORM")))
	End

	cQuebra := CRITICA->( NOMARQ + FILIAL )
	If cQuebra <> cOldQuebra
		cOldQuebra := cQuebra
		li++
		@li++,  0 PSay "ARQ: " + CRITICA->NOMARQ + " - " + "FIL: " + CRITICA->FILIAL // "ARQ: " ### "FIL: "
	EndIf

	//CODIGO BASE  ITEM  TP  OC  MT  DESCRICAO                                 POSSIVEL INCONSISTENCIA
	//0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
	//          1         2         3         4         5         6         7         8         9         0         1         2         3

	@li,  0 PSay CRITICA->CBASE
	@li, 13 PSay CRITICA->ITEM
	@li, 19 PSay CRITICA->TIPO
	@li, 23 PSay CRITICA->OCORR
	@li, 27 PSay CRITICA->MOTIVO
	@li, 31 PSay CRITICA->DESCR
	@li, 73 PSay CRITICA->HISTOR
	li++

	CRITICA->(dbSkip())
End

roda(cbcont,cbtxt)

dbClearFilter( )

If aReturn[5] == 1
	Set( 24, "" )
	dbCommitAll()
	Ourspool(wnrel)
End
MS_FLUSH()
dbSelectArea("CRITICA")
Use

//Deleta tabela temporaria do banco de dados
If _oATFA1001 <> Nil
	_oATFA1001:Delete()
	_oATFA1001 := Nil
Endif

dbSelectArea("SN3")
Return NIL

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Ana Paula N. Silva     ³ Data ³10/12/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados     ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
	Local aRotina:={ {OemToAnsi(STR0004), "AllwaysTrue",0,3}} // "Parametros"
Return(aRotina)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³AdmAbreSM0³ Autor ³ Orizio                ³ Data ³ 22/01/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retorna um array com as informacoes das filias das empresas ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AdmAbreSM0()
	Local aArea			:= SM0->( GetArea() )
	Local aAux			:= {}
	Local aRetSM0		:= {}
	Local lFWLoadSM0	:= .T.
	Local lFWCodFilSM0 	:= .T.

	If lFWLoadSM0
		aRetSM0	:= FWLoadSM0()
	Else
		DbSelectArea( "SM0" )
		SM0->( DbGoTop() )
		While SM0->( !Eof() )
			aAux := { 	SM0->M0_CODIGO,;
						IIf( lFWCodFilSM0, FWGETCODFILIAL, SM0->M0_CODFIL ),;
						"",;
						"",;
						"",;
						SM0->M0_NOME,;
						SM0->M0_FILIAL }

			aAdd( aRetSM0, aClone( aAux ) )
			SM0->( DbSkip() )
		End
	EndIf

	RestArea( aArea )
Return aRetSM0
