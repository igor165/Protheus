#INCLUDE "MATA241.CH"
#INCLUDE "PROTHEUS.CH"
#DEFINE LINHAS 999

Static a241ISD3 := NIL


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё Mata241  Ё Autor Ё Gilson do Nascimento  Ё Data Ё 02/04/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de Movimentacoes Internas (Requisicoes/Devolucoes)Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void mata241(void)                                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Mata241(xAutoCab,xAutoItens,nCallOpcx)
Local nX           := 0
Local nPos         := 0
Local lEstorno     := nCallOpcx <> Nil .And. nCallOpcx == 6
Local aCores       := A240aCores()
Local bBlock

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define Variaveis                                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE aAC 	     := {OemToAnsi(STR0002),OemToAnsi(STR0001)}
PRIVATE aCRA	     := {OemToAnsi(STR0001),OemToAnsi(STR0003),OemToAnsi(STR0002)}
PRIVATE lLogMov    := GetMV("MV_IMPMOV")
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Pega a variavel que identifica se o calculo do custo e' :    Ё
//Ё O = On-Line ou M = Mensal                                    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE cCusMed    := GetMv("MV_CUSMED")
PRIVATE bCols      := {|x,y|aCols[x][y]}
PRIVATE nPosCod    := 0
PRIVATE nPosLocal  := 0
PRIVATE nPosLote   := 0
PRIVATE nPosLotCTL := 0
PRIVATE nPosDValid := 0
PRIVATE nPosQuant  := 0
PRIVATE nPosTES    := 0
PRIVATE nPosCusto1 := 0
PRIVATE nPosCusto2 := 0
PRIVATE nPosCusto3 := 0
PRIVATE nPosCusto4 := 0
PRIVATE nPosCusto5 := 0
PRIVATE nPosUm     := 0
PRIVATE nPosServic := 0
PRIVATE nPosPotenc := 0
PRIVATE nPosConta  := 0
PRIVATE nPosCC     := 0
PRIVATE nPosGrupo  := 0
PRIVATE nPosTipo   := 0
PRIVATE nPosSegUm  := 0
PRIVATE nPosQtSegUm:= 0
PRIVATE nPosDesc   := 0
PRIVATE nPosOp     := 0
PRIVATE nPosTRT    := 0
PRIVATE nPosLocali := 0
PRIVATE nPosNumSer := 0
PRIVATE nPos241Loc := 0
PRIVATE nPos241Qtd := 0
PRIVATE nPosCodVei := 0
PRIVATE nPosViagem := 0
PRIVATE nPosProj   := 0
PRIVATE nPosTarefa := 0
PRIVATE aCtbDia    := {}
PRIVATE l241Auto   := ( xAutoCab <> NIL  .and. IIf(lEstorno,.T.,xAutoItens <> NIL) )
PRIVATE aAutoCab   := {}
PRIVATE aAutoItens := {}
PRIVATE cFunc      := Nil
PRIVATE lMT241GRV  := ExistBlock("MT241GRV")
PRIVATE aButtons   := {}
PRIVATE aMemos     := {}

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//|Pais Portugal - Verifica a existЙncia do parБmetro: MV_ABATEST   |
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cPaisLoc=="PTG"
	cAbatEst:=GetMV("MV_ABATEST",.F.,"")
	If Empty(cAbatEst)
		MsgAlert(STR0046)
		Return
	EndIf
EndIf

If l241Auto .And. !lEstorno
	aAutoCab := SD3->(MSArrayXDB(xAutoCab))
	If !lEstorno
		For nX := 1 To Len(xAutoItens)
			aAdd(aAutoItens,SD3->(MSArrayXDB(xAutoItens[nX])))
		Next
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o custo medio e' calculado On-Line               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cCusMed == "O"
	PRIVATE nHdlPrv				      // Endereco do arquivo de contra prova dos lanctos cont.
	PRIVATE lCriaHeader := .T.	// Para criar o header do arquivo Contra Prova
	PRIVATE cLoteEst			      // Numero do lote para lancamentos do estoque
	PRIVATE lCtbOnLine  := .T.	// Contabilizacao On Line
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Posiciona numero do Lote para Lancamentos do Estoque         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SX5")
	dbSeek(xFilial()+"09EST")
	cLoteEst:=IIf(Found(),Trim(X5Descri()),"EST ")
	PRIVATE nTotal := 0 		// Total dos lancamentos contabeis
	PRIVATE cArquivo			  // Nome do arquivo contra prova
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Esta variavel indica se utiliza segunda unidade de medida    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE lUsaSegUm

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Estas variaveis indicam para as funcoes de validacao qual    Ё
//Ё programa as esta' chamando, no caso igual ao do MATA240      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE l240 :=.F.,l250:=.F.,l241 :=.T.,l242:=.F.,l261 := .F.,l185:=.F.
PRIVATE cCadastro:=STR0004	//"Movimentos Internos"

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define Array contendo as Rotinas a executar do programa      Ё
//Ё ----------- Elementos contidos por dimensao ------------     Ё
//Ё 1. Nome a aparecer no cabecalho                              Ё
//Ё 2. Nome da Rotina associada                                  Ё
//Ё 3. Usado pela rotina                                         Ё
//Ё 4. Tipo de Transa┤└o a ser efetuada                          Ё
//Ё    1 - Pesquisa e Posiciona em um Banco de Dados             Ё
//Ё    2 - Simplesmente Mostra os Campos                         Ё
//Ё    3 - Inclui registros no Bancos de Dados                   Ё
//Ё    4 - Altera o registro corrente                            Ё
//Ё    5 - Remove o registro corrente do Banco de Dados          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Aadd(aButtons	, {'PRODUTO',{||M241SeleEs()},OemToAnsi(STR0023),OemToAnsi(STR0029)}) //"Explode 1o nivel estrutura"
If IntTMS()		// Integracao TMS
	Aadd(aButtons	, {'CARGA',{||A103RATVEI()}, STR0025, STR0027}) //"Rateio por Veiculo/Viagem - <F11>"
	Aadd(aButtons	, {'CARGASEQ',{||A103FROTA()},STR0026, STR0028})//"Rateio por Frota"
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada para adicao de campos memo do usuario       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock( "MT241MEM" )
	aMemUser := ExecBlock( "MT241MEM", .F., .F. )
	If ValType( aMemUser ) == "A"
		AEval( aMemUser, { |x| AAdd( aMemos, x ) } )
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Botao para exportar dados para EXCEL                    Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If RemoteType() == 1
	aAdd(aButtons, {PmsBExcel()[1],{|| DlgToExcel({{"CABECALHO",cCadastro,{STR0009,STR0010,STR0011,STR0012},;
	{cDocumento,cTm,cCC,dA241Data}},{"GETDADOS",OemToAnsi(STR0033),aHeader,aCols}})},PmsBExcel()[2],PmsBExcel()[3]})
EndIf

PRIVATE lCodBarra := .F.
PRIVATE aRotina   := MenuDef()

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Carrega perguntas do SX1                                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Pergunte("MTA240",.F.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se trabalha com segunda unidade de medida           Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
lUsaSegUm := .T.
dbSelectArea("SX3")
dbSetOrder(2)
dbSeek("B1_SEGUM")
If !X3USO(X3_USADO)
	dbSeek("B2_QTSEGUM")
	If !X3USO(X3_USADO)
		lUsaSegUm := .F.
	EndIf
EndIf
dbSetOrder(1)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ativa tecla F12 para acionar perguntas se nao for rotina autom.Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !l241Auto
	Set Key VK_F12 TO MTA241PERG()
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada para pre-validar os dados a serem exibidos. Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("M240BROW")
	ExecBlock("M240BROW",.F.,.F.)
EndIf

If !l241Auto
	If nCallOpcx <> Nil
		dbSelectArea("SD3")
		nPos := Ascan(aRotina,{|x| x[4]== nCallOpcx})
		If ( nPos # 0 )
			bBlock := &( "{ |x,y,z,k| " + aRotina[ nPos,2 ] + "(x,y,z,k) }" )
			Eval( bBlock,Alias(),SD3->(Recno()),nPos)
		EndIf
	Else
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Endereca a funcao de BROWSE                                  Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		mBrowse( 6, 1,22,75,"SD3",,,,,,aCores)
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Desativa tecla que aciona perguntas                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Set Key VK_F12 To
Else
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Chamada da Rotina Automatica                                 Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If lEstorno
		dbSelectArea("SD3")
		a241Estorn("SD3",Recno(),4)
	Else
		dbSelectArea("SD3")
		a241Inclui("SD3",Recno(),3)
	EndIf
EndIf
Return Nil

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ёa241VisualЁ Autor Ё Gilson Nascimento     Ё Data Ё 02/05/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de visualizacao de uma Movimentacao Interna       Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void a241Visual(ExpC1,ExpN1,ExpN2)                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Numero da opcao selecionada                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function a241Visual(cAlias,nReg,nOpc)
Local GetList      := {}
Local nSavRec
Local oDlg
Local cCampo      	:= ""
Local cNrAbate      := ""
Local i           	:= 0
Local aObjects 		:= {}
Local aSize   	    := MsAdvSize(.F.)
Local oSize
Local aInfo     	:= { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
Local aPosObj		:= {}
Local nX       	    := 0
Local lEmBranco	    := .F.
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Walk-Thru                                                     Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local aNoFields	   	:= {"D3_DOC","D3_TM","D3_CC","D3_PERDA","D3_EMISSAO","D3_PARCTOT","D3_NODIA","D3_DIACTB"}
Local bSeekFor		:= {|| dA241Data == SD3->D3_EMISSAO .And. (D3_TM == cTm .Or. (D3_TM <> cTm .And. !Empty(D3_ESTORNO))) }
Local bSeekWhile  	:= {|| D3_FILIAL+D3_DOC } //Condicao While para montar o aCols
Local cSeek			:= ""
Local aBtnBack    	:= {}
Local nOpcx			:= 0

PRIVATE aRatVei   	:= {}
PRIVATE aRatFro   	:= {}
PRIVATE aArraySDG 	:= {}

aButtons  := If(Type("aButtons") == "U", {}, aButtons)


//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Portaria CAT83  - Se o parБmetro nЦo estiver ativo, nЦo inclui o campo no acols Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !V240CAT83()
	aAdd(aNoFields,"D3_CODLAN")
EndIf

//здддддддддддддддддд©
//Ё Percentual FCI   |
//юдддддддддддддддддды
AADD(aNoFields,"D3_PERIMP")
AADD(aNoFields,"D3_VLRVI")

//здддддддддддддддддддддддддддд©
//Ё Guia de Abate - Portugal   Ё
//юдддддддддддддддддддддддддддды
If cPaisLoc=="PTG"
	AADD(aNoFields,"D3_NRABATE")
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se existe algum dado no arquivo                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea( cAlias )
dbSetOrder(1)
If RecCount() == 0
	Return .T.
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se esta' na filial correta                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If xFilial() != D3_FILIAL
	Help(" ",1,"A000FI")
	Return .T.
EndIf

If SubStr(D3_CF,1,2) == "PR" .Or. Subs(D3_CF,3,1)$"2457"
	Help(" ",1,"A240NAO")
	Return
EndIf

PRIVATE cDocumento := D3_DOC
PRIVATE dA241Data  := D3_EMISSAO
PRIVATE cTM        := D3_TM
PRIVATE cCC        := D3_CC

//здддддддддддддддддддддддддддд©
//Ё Guia de Abate - Portugal   Ё
//юдддддддддддддддддддддддддддды
If cPaisLoc=="PTG"
	cNrAbate:=D3_NRABATE
EndIf

nSavRec := RecNo()
SB1->(dbSetOrder(1))
dbSelectArea(cAlias)
dbSetOrder(2)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta a entrada de dados do arquivo                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
cSeek	  := xFilial("SD3")+cDocumento

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta aHeader e aCols utilizando a funcao FillGetDados       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE aHeader[0]
PRIVATE aCols := {}

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Sintaxe da FillGetDados( nOpcx, cAlias, nOrder, cSeekKey, bSeekWhile, uSeekFor, aNoFields, aYesFields, lOnlyYes, cQuery, bMontCols, lEmpty, aHeaderAux, aColsAux, bAfterCols, bBeforeCols, bAfterHeader, cAliasQry )   |
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
FillGetDados(nOpc,cAlias,2,cSeek,bSeekWhile,bSeekFor,aNoFields,,,,,,,,{|aColsX| a241AfterC(nOpc,aColsX,cAlias,,,,@lEmBranco)})
For nx = 1 To Len(aHeader)
	Do Case
		Case Trim(aHeader[nx][2]) == "D3_COD"
			nPosCod:=nX
		Case Trim(aHeader[nx][2]) == "D3_LOCAL"
			nPosLocal:=nX
		Case Trim(aHeader[nx][2]) == "D3_NUMLOTE"
			nPosLote:=nX
		Case Trim(aHeader[nx][2]) == "D3_LOTECTL"
			nPosLotCTL:=nX
		Case Trim(aHeader[nx][2]) == "D3_DTVALID"
			nPosDValid:=nX
		Case Trim(aHeader[nx][2]) == "D3_POTENCI"
			nPosPotenc:=nX
		Case Trim(aHeader[nx][2]) == "D3_QUANT"
			nPosQuant:=nX
		Case Trim(aHeader[nx][2]) == "D3_SEGUM"
			nPosSegUm:=nX
		Case Trim(aHeader[nx][2]) == "D3_QTSEGUM"
			nPosQtSegUm:=nX
		Case Trim(aHeader[nx][2]) == "D3_TEATF"
			nPosTES:=nX
		Case Trim(aHeader[nx][2]) == "D3_CUSTO1"
			nPosCusto1:=nX
		Case Trim(aHeader[nx][2]) == "D3_UM"
			nPosUm:=nX
		Case Trim(aHeader[nx][2]) == "D3_CONTA"
			nPosConta:=nX
		Case Trim(aHeader[nx][2]) == "D3_GRUPO"
			nPosGrupo:=nX
		Case Trim(aHeader[nx][2]) == "D3_TIPO"
			nPosTipo:=nX
		Case Trim(aHeader[nx][2]) == "D3_OP"
			nPosOp:=nX
		Case Trim(aHeader[nx][2]) == "D3_TRT"
			nPosTrt:=nX
		Case Trim(aHeader[nx][2]) == "D3_DESCRI"
			nPosDesc:=nX
		Case Trim(aHeader[nx][2]) == "D3_LOCALIZ"
			nPosLocali:=nX
		Case Trim(aHeader[nx][2]) == "D3_NUMSERI"
			nPosNumSer:=nX
		Case Trim(aHeader[nx][2]) == "D3_SERVIC"
			nPosServic:=nX
	EndCase
Next nx

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Validacao do uso de alguns campos obrigatorios               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Empty(nPosCod)
	UserException("D3_COD"  +OemToAnsi(STR0021)) //" deve estar em uso!!!"
ElseIf Empty(nPosLocal)
	UserException("D3_LOCAL"+OemToAnsi(STR0021))
ElseIf Empty(nPosQuant)
	UserException("D3_QUANT"+OemToAnsi(STR0021))
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Executa Ponto de Entrada p/ adicao de campos na getdados             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("MTA241CPO")
	ExecBlock("MTA241CPO",.F.,.F.,{nOpc})
EndIf

If lEmBranco
	Help ( " ", 1, "DOC_BRANCO" )
	dbSelectArea( cAlias )
	MsGoTo( nSavRec )
	Return
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Caso nao ache nenhum item , abandona rotina.         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Len(aCols) == 0
	dbSelectArea( cAlias )
	MsGoTo( nSavRec )
	dbSetOrder(1)
	Return .T.
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de Entrada criado para configurar botoes da enchoicebar        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock( "A241BUT" )
	aBtnBack := aClone(aButtons)
	aButtons := ExecBlock( "A241BUT", .F., .F., { nOpc, aButtons } )
	If ValType( aButtons ) # "A"
		aButtons := aClone(aBtnBack)
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё DefiniГЦo array aObjects                                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
oSize := FwDefSize():New()

oSize:AddObject( "CABECALHO",  100, 8, .T., .T. ) // Totalmente dimensionavel
oSize:AddObject( "GETDADOS" ,  100, 100, .T., .T. ) // Totalmente dimensionavel
oSize:lProp 	:= .T. // Proporcional
oSize:aMargins 	:= { 3, 3, 3, 3 } // Espaco ao lado dos objetos 0, entre eles 3

oSize:Process() 	   // Dispara os calculos

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё DefiniГЦo Dialog                                                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0004) OF oMainWnd PIXEL FROM oSize:aWindSize[1],oSize:aWindSize[2] TO oSize:aWindSize[3],oSize:aWindSize[4]  //"Movimentos Internos"

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё DefiniГЦo Panel que sera usado no posicionamento da tela             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		oPanel1:= TSay():New(;
			oSize:GetDimension("CABECALHO","LININI"),oSize:GetDimension("CABECALHO","COLINI"),;
			{||''},oDlg,,,,,,.T.,,,;
		oSize:GetDimension("CABECALHO","XSIZE"),oSize:GetDimension("CABECALHO","YSIZE"))
		oPanel2:= tPanel():New(;
			oSize:GetDimension("GETDADOS","LININI"),oSize:GetDimension("GETDADOS","COLINI"),;
			,oDlg,,,,,,;
			oSize:GetDimension("GETDADOS","XSIZE"),oSize:GetDimension("GETDADOS","YSIZE"),,)


		@ 0.4,00.7 SAY OemToAnsi(STR0009) OF oPanel1 //"Nёmero Documento"
		@ 0.3,08.0 MSGET cDocumento When .F. SIZE 65,08 OF oPanel1
		@ 0.4,17.3 SAY OemToAnsi(STR0010) OF oPanel1 //"TM"
		@ 0.3,18.7 MSGET cTm When .F. OF oPanel1
		@ 0.4,22.7 SAY OemToAnsi(STR0011) OF oPanel1 //"Centro de Custo"
		@ 0.3,27.9 MSGET cCC When .F. OF oPanel1
		If len(cCC) <= 9
			@ 0.4,36.5 SAY OemToAnsi(STR0012) OF oPanel1 //"Emissao"
			@ 0.3,39.5 MSGET dA241Data When .F. SIZE 40,08 OF oPanel1
		Else
		 	@ 0.4,43.5 SAY OemToAnsi(STR0012) OF oPanel1 //"Emissao"
			@ 0.3,46.5 MSGET dA241Data When .F.  SIZE 40,08 OF oPanel1
		EndIf


//здддддддддддддддддддддддддддд©
//Ё Guia de Abate - Portugal   Ё
//юдддддддддддддддддддддддддддды
If cPaisLoc=="PTG"
	@ 0.4,46.7 SAY OemToAnsi(STR0047) OF oDlg 	//"Guia de Abate"
	@ 0.3,50.9 MSGET cNrAbate When .F. Of oDlg
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁPonto de Entrada que disponibiliza o Objeto da Dialog - oDlg  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If (ExistBlock( "MT241CAB" ))
	ExecBlock("MT241CAB",.F.,.F.,{@oDlg,nOpc})
EndIf
	oGet := MSGetDados():New(;
		oSize:GetDimension("GETDADOS","LININI"),oSize:GetDimension("GETDADOS","COLINI"),;
		oSize:GetDimension("GETDADOS","LINEND"),oSize:GetDimension("GETDADOS","COLEND"),;
		nOpc,'AllwaysTrue','A241TudoOk','',;
		.F.,{"D3_QUANT","D3_QTSEGUM"},NIL,NIL,;
		LINHAS,,,,,,,,,oPanel2)

ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||oDlg:End()},{||oDlg:End()},,aButtons)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Restaura a integridade da janela                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea(cAlias)
MsGoTo(nSavRec)
Return

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁProcH     Ё Autor Ё Microsiga S.A.        Ё Data Ё 25/07/06 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Funcao de pesquisa para consulta do campo que esta dentro  Ё╠╠
╠╠Ё          Ё do array aAutoCab.                                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void ProcH(ExpC1)                                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Nome do Campo                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function ProcH(cCampo)
Return aScan(aAutoCab,{|x|Trim(x[1])== cCampo })

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ёa241IncluiЁ Autor Ё Gilson do Nascimento  Ё Data Ё 02/05/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de inclusao de movimentacao interna               Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void a241Inclui(ExpC1,ExpN1,ExpN2,ExpC2,ExpL1)             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Opcao selecionada                                  Ё╠╠
╠╠Ё          Ё ExpC2 = Numero do Documento                                Ё╠╠
╠╠Ё          Ё ExpL1 = Indicara' se o No.do Documento foi alterado        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function a241Inclui(cAlias,nReg,nOpc,cNewDoc,lChangeDoc)
Local GetList    := {}
Local nOpcao     := 3
Local oDlg
Local dDataFec   := MVUlmes()
Local cCampo     := ""
Local i          := 0
Local nX         := 0
Local aCamposVld := {}
Local bBlkVld    := {|x| x[3] := &(x[2])}

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁSalva a integridade dos dados                                         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local nSavRec, nSavReg, lVldPCO
Local cSavScr, cSavCur, cSavRow, cSavCol

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica a Existencia do ponto de entrada e seta valor       Ё
//Ё da variavel que define se edita o documento ou nao           Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local lDocto       := .T.
Local lPimsInt	   := SuperGetMV("MV_PIMSINT",.F.,.F.)
Local aObjects 		:= {}
Local aSize   	    := MsAdvSize(.F.)
Local oSize
Local aInfo     	:= { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
Local aPosObj		:= {}
Local cF3          := If(CtbInUse(), 'CTT', If(SuperGetMV('MV_SIGAGSP', .F., '0')=='1', 'NI3', 'SI3')) //-- MV_SIGAGSP = "0"-Nao integra/ "1"-Integra
Local aADDButtons  := {}
Local aTelaButtons := {}
Local cMay         := ""
Local aCpoCab:={}
Local aCpx:={}

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Walk-Thru						                                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local aNoFields	   := {}
Local lFirst       := .T.
Local aBtnBack     := {}
//-- Variavel usada para verificar se o disparo da funcao IntegDef() pode ser feita manualmente
Local lIntegDef  :=  FWHasEAI("MATA241")
Local lWmsNew    := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local lWmsSD3    := Iif(Type('lExecWms')=='L', lExecWms, .F.)
Local lDocSD3    := Iif(Type('lDocWms')=='L', lDocWms, .F.)
Local lMT241CAB  :=  ExistBlock("MT241CAB")
Local lMT241SD3  :=  ExistBlock("MT241SD3")
Local lMT241CAN  :=  ExistBlock("MT241CAN")
Local cPicD3Doc  :=  PesqPict("SD3","D3_DOC")
Local cPicD3TM   :=  PesqPict("SD3","D3_TM")
Local cPicD3CC   :=  PesqPict("SD3","D3_CC")
Local cvalidcc   := 	getvalid("D3_CC")

PRIVATE nPosCod    := 0
PRIVATE nPosLocal  := 0
PRIVATE nPosLote   := 0
PRIVATE nPosLotCTL := 0
PRIVATE nPosDValid := 0
PRIVATE nPosQuant  := 0
PRIVATE nPosTES    := 0
PRIVATE nPosCusto1 := 0
PRIVATE nPosUm     := 0
PRIVATE nPosServic := 0
PRIVATE nPosPotenc := 0
PRIVATE nPosConta  := 0
PRIVATE nPosCC     := 0
PRIVATE nPosGrupo  := 0
PRIVATE nPosTipo   := 0
PRIVATE nPosSegUm  := 0
PRIVATE nPosQtSegUm:= 0
PRIVATE nPosDesc   := 0
PRIVATE nPosOp     := 0
PRIVATE nPosTRT    := 0
PRIVATE nPosLocali := 0
PRIVATE nPosNumSer := 0
PRIVATE nPos241Loc := 0
PRIVATE nPos241Qtd := 0
PRIVATE nPosCodVei := 0
PRIVATE nPosViagem := 0
PRIVATE nPosProj   := 0
PRIVATE nPosTarefa := 0
PRIVATE nPosClVl   := 0
PRIVATE nPosItemCT := 0
PRIVATE nPosStatus := 0
PRIVATE nPosNumSa  := 0
PRIVATE nPosItemSa := 0
PRIVATE nPosDoc    := 0

//Variavel de controle do itens os quais terao pergunta ao usuario, para que o mesmo seja perguntado somente uma vez
PRIVATE aResposta  := {}

//-- Variavel utilizada pela integracao com SIGAMNT
Private aMntGarant := {}

If Type("INCLUI") == "L" .And. !INCLUI
	INCLUI := .T.
EndIf

// -- Protecao quando rotina for executada em modo automatico

If (lPimsInt .And. l241Auto) .Or. FunName() == "MATA185" .Or. IsInCallStack("MATI241") .Or. (l241Auto .And. FunName() == "EICDI154")
	aNoFields := {"D3_DOC","D3_TM","D3_PERDA","D3_EMISSAO","D3_PARCTOT","D3_ESTORNO","D3_NODIA","D3_DIACTB"}
Else
	aNoFields := {"D3_DOC","D3_TM","D3_CC","D3_PERDA","D3_EMISSAO","D3_PARCTOT","D3_ESTORNO","D3_NODIA","D3_DIACTB"}
EndIf

//здддддддддддддддддд©
//Ё Percentual FCI   |
//юдддддддддддддддддды
AADD(aNoFields,"D3_PERIMP")
AADD(aNoFields,"D3_VLRVI")

If Type("aCtbDia") == "U"
   Private aCtbDia := {}
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Adiciona informacoes para validacao de Get Fixo no array     Ё
//Ё aCamposVld                                                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
AADD(aCamposVld,{"D3_CC","cCC",""})
AADD(aCamposVld,{"D3_EMISSAO","dA241Data",""})

If ExistBlock("MTA241DOC")
	lDocto:=ExecBlock("MTA241DOC",.F.,.F.)
	If Valtype(lDocto) # "L"
		lDocto:=.T.
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica a Existencia da varivael l241Auto                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( Type("l241Auto") == "U" )
	Private l241Auto := .F.
EndIf

PRIVATE aLogSld    := {}
PRIVATE aValidGet  := {}

PRIVATE cDocumento := CriaVar("D3_DOC")
PRIVATE dA241Data  := CriaVar("D3_EMISSAO")
PRIVATE cCC        := CriaVar("D3_CC")
PRIVATE cTM        := CriaVar("D3_TM")
PRIVATE cNrAbate   := IIF(cPaisLoc=="PTG",CriaVar("D3_NRABATE"),"")
PRIVATE nOpca      := 0
PRIVATE nFatConv   := 0
PRIVATE nCOpcao    := 3

PRIVATE aRatVei    := {}
PRIVATE aRatFro    := {}
PRIVATE aArraySDG  := {}

Default cNewDoc    := ''
Default lChangeDoc := .F.

aButtons     := If(Type("aButtons") == "U", {}, aButtons)
aTelaButtons := ACLONE(aButtons)

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Portaria CAT83  - Se o parБmetro nЦo estiver ativo, nЦo inclui o campo no acols Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !V240CAT83()
	aAdd(aNoFields,"D3_CODLAN")
EndIf

//здддддддддддддддддддддддддддд©
//Ё Guia de Abate - Portugal   Ё
//юдддддддддддддддддддддддддддды
If cPaisLoc=="PTG"
	AADD(aNoFields,"D3_NRABATE")
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa o numero com o ultimo + 1                         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SD3")
dbSetOrder(1)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verificar data do ultimo fechamento em SX6.                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If dDataFec >= dDataBase
	Help ( " ", 1, "FECHTO" )
	Return
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Filtra tabela de tipos de movimentacao para aparecerem apenas req/dev Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SF5")
If Upper(AllTrim(cFunc)) == "A185ATU2SD3"
	cCond := 'F5_TIPO == "R"'
Else
	cCond := 'F5_TIPO == "R" .OR. F5_TIPO == "D"'
EndIf
MsFilter(cCond)
dbGoTop()

dbSelectArea(cAlias)
nSavReg     := RecNo()

If l241Auto .And. lDocSD3
	If (nPosDoc := Ascan(aAutoCab,{|x| Alltrim(x[1]) == 'D3_DOC'})) > 0
		cDocumento := Iif(!Empty(aAutoCab[nPosDoc,2]),aAutoCab[nPosDoc,2],cDocumento)
	EndIf
EndIf

cDocumento := IIf(Empty(cDocumento),NextNumero("SD3",2,"D3_DOC",.T.),cDocumento)

// Busca proximo documento na tabela auxiliar (DH1) quando controla novo WMS
If lWmsNew .And. !lDocSD3
	dbSelectArea("DH1")
	DH1->(dbSetOrder(2))
	If DH1->(dbSeek(xFilial("DH1")+cDocumento))
		cDocumento := NextNumero("DH1",2,"DH1_DOC",.T.)
	EndIf
EndIf

cDocumento := A261RetINV(cDocumento)
dbSetOrder(1)
MsGoTo(nSavReg)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta aHeader e aCols utilizando a funcao FillGetDados       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE aHeader[0]
PRIVATE aCols[0]
PRIVATE Continua

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Sintaxe da FillGetDados( nOpcx, cAlias, nOrder, cSeekKey, bSeekWhile, uSeekFor, aNoFields, aYesFields, lOnlyYes, cQuery, bMontCols, lEmpty, aHeaderAux, aColsAux, bAfterCols, bBeforeCols, bAfterHeader, cAliasQry )   |
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Upper(AllTrim(cFunc)) == "A185ATU2SD3"
	FillGetDados(nOpc,cAlias,1,,,,aNoFields,,,,{|aColsX| A185Atu2SD3(aColsX) }/*bMontCols*/,,,,,, {|aHeaderX| a241AfterH(aHeaderX,nOpcao)}/*bAfterHeader*/  )
Else
	FillGetDados(nOpc,cAlias,1,,,,aNoFields,,,,,.T./*lEmpty*/,,, {|aColsX| a241AfterC(nOpcao,aColsX,cAlias)}/*bAfterCols*/,, {|aHeaderX| a241AfterH(aHeaderX,nOpcao)}/*bAfterHeader*/  )
EndIf

For nx := 1 To Len(aHeader)
	Do Case
		Case Trim(aHeader[nx][2]) == "D3_COD"
			nPosCod:=nX
		Case Trim(aHeader[nx][2]) == "D3_LOCAL"
			nPosLocal:=nX
		Case Trim(aHeader[nx][2]) == "D3_NUMLOTE"
			nPosLote:=nX
		Case Trim(aHeader[nx][2]) == "D3_LOTECTL"
			nPosLotCTL:=nX
		Case Trim(aHeader[nx][2]) == "D3_DTVALID"
			nPosDValid:=nX
		Case Trim(aHeader[nx][2]) == "D3_POTENCI"
			nPosPotenc:=nX
		Case Trim(aHeader[nx][2]) == "D3_QUANT"
			nPosQuant:=nX
		Case Trim(aHeader[nx][2]) == "D3_SEGUM"
			nPosSegUm:=nX
		Case Trim(aHeader[nx][2]) == "D3_QTSEGUM"
			nPosQtSegUm:=nX
		Case Trim(aHeader[nx][2]) == "D3_TEATF"
			nPosTES:=nX
		Case Trim(aHeader[nx][2]) == "D3_CUSTO1"
			nPosCusto1:=nX
		Case Trim(aHeader[nx][2]) == "D3_UM"
			nPosUm:=nX
		Case Trim(aHeader[nx][2]) == "D3_CONTA"
			nPosConta:=nX
		Case Trim(aHeader[nx][2]) == "D3_GRUPO"
			nPosGrupo:=nX
		Case Trim(aHeader[nx][2]) == "D3_TIPO"
			nPosTipo:=nX
		Case Trim(aHeader[nx][2]) == "D3_OP"
			nPosOp:=nX
		Case Trim(aHeader[nx][2]) == "D3_TRT"
			nPosTrt:=nX
		Case Trim(aHeader[nx][2]) == "D3_DESCRI"
			nPosDesc:=nX
		Case Trim(aHeader[nx][2]) == "D3_LOCALIZ"
			nPosLocali:=nX
		Case Trim(aHeader[nx][2]) == "D3_NUMSERI"
			nPosNumSer:=nX
		Case Trim(aHeader[nx][2]) == "D3_CODVEI"
			nPosCodVei:=nX
		Case Trim(aHeader[nx][2]) == "D3_VIAGEM"
			nPosViagem:=nX
		Case Trim(aHeader[nx][2]) == "D3_SERVIC"
			nPosServic:=nX
		Case Trim(aHeader[nx][2]) == "D3_PROJPMS"
			nPosProj:=nX
		Case Trim(aHeader[nx][2]) == "D3_TASKPMS"
			nPosTarefa:=nX
		Case Trim(aHeader[nx][2]) == "D3_CLVL"
			nPosClVl:=nX
		Case Trim(aHeader[nx][2]) == "D3_ITEMCTA"
			nPosItemCT:=nX
		Case Trim(aHeader[nx][2]) == "D3_STATUS"
			nPosStatus:=nX
		Case Trim(aHeader[nx][2]) == "D3_NUMSA"
			nPosNumSa:=nX
		Case Trim(aHeader[nx][2]) == "D3_ITEMSA"
			nPosItemSa:=nX
		Case Trim(aHeader[nx][2]) == "D3_CUSTO2"
			nPosCusto2:=nX
		Case Trim(aHeader[nx][2]) == "D3_CUSTO3"
			nPosCusto3:=nX
		Case Trim(aHeader[nx][2]) == "D3_CUSTO4"
			nPosCusto4:=nX
		Case Trim(aHeader[nx][2]) == "D3_CUSTO5"
			nPosCusto5:=nX
	EndCase
Next nx

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Validacao do uso de alguns campos obrigatorios               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Empty(nPosCod)
	UserException("D3_COD"  +OemToAnsi(STR0021))
ElseIf Empty(nPosLocal)
	UserException("D3_LOCAL"+OemToAnsi(STR0021))
ElseIf Empty(nPosQuant)
	UserException("D3_QUANT"+OemToAnsi(STR0021))
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Executa Ponto de Entrada p/ adicao de campos na getdados             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("MTA241CPO")
	ExecBlock("MTA241CPO",.F.,.F.,{nOpc})
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Executa Ponto de Entrada p/ validacao do SIGAPCO                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If l185 .And. ExistBlock("MTA241PCO")
	lVldPCO := ExecBlock("MTA241PCO",.F.,.F.,{nOpc})
	If ValType(lVldPCO) == "L"
	 	If !lVldPCO
	 		Return nOpca
	 	EndIf
	EndIf
EndIf

If (l241Auto)
	MsAuto2aCols()
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Executa ponto de entrada para montar array com botoes a      Ё
//Ё serem apresentados na tela de INCLUSAO                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If (ExistBlock( "M241BUT" ) )
	aADDButtons:=ExecBlock("M241BUT",.F.,.F.)
	If ValType(aADDButtons) == "A"
		For nx:=1 to Len(aADDButtons)
			AADD(aTelaButtons,aADDButtons[nx])
		Next nx
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de Entrada criado para configurar botoes da enchoicebar        Ё
//Ё Este PE foi criado porque o PE acima (M241BUT) nao permite manipular Ё
//Ё botoes da enchoicebar.                                               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock( "A241BUT" )
	aBtnBack := aClone(aTelaButtons)
	aTelaButtons := ExecBlock( "A241BUT", .F., .F., { nOpc, aTelaButtons } )
	If ValType( aTelaButtons ) # "A"
		aTelaButtons := aClone(aBtnBack)
	EndIf
EndIf

While .T.
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Inicializa a gravacao dos lancamentos do SIGAPCO          Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	PcoIniLan("000151")
	If (! l241Auto)
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё DefiniГЦo array aObjects                                             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		oSize := FwDefSize():New()
		
		oSize:AddObject( "CABECALHO",  100, 8, .T., .T. ) // Totalmente dimensionavel
		oSize:AddObject( "GETDADOS" ,  100, 92, .T., .T. ) // Totalmente dimensionavel
		oSize:lProp 	:= .T. // Proporcional
		oSize:aMargins 	:= { 3, 3, 3, 3 } // Espaco ao lado dos objetos 0, entre eles 3
		
		oSize:Process() 	   // Dispara os calculos
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Ativa tecla F4 para Saldos de Lotes e Localizacao            Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		Set Key VK_F4 TO ShowF4()

		Continua := .F.
		DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0004) OF oMainWnd PIXEL FROM oSize:aWindSize[1],oSize:aWindSize[2] TO oSize:aWindSize[3],oSize:aWindSize[4]
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё DefiniГЦo Panel que sera usado no posicionamento da tela             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		oPanel1:= TSay():New(oSize:GetDimension("CABECALHO","LININI"),oSize:GetDimension("CABECALHO","COLINI"),{||''},oDlg,,,,,,.T.,,,oSize:GetDimension("CABECALHO","XSIZE"),oSize:GetDimension("CABECALHO","YSIZE"))
		oPanel2:= tPanel():New(oSize:GetDimension("GETDADOS","LININI"),oSize:GetDimension("GETDADOS","COLINI"),,oDlg,,,,,,oSize:GetDimension("GETDADOS","XSIZE"),oSize:GetDimension("GETDADOS","YSIZE"),,)


		@ 0.4,00.7  SAY OemToAnsi(STR0009) OF oPanel1 	//"Nёmero Documento"
		@ 0.3,08.0  MSGET cDocumento	Picture cPicD3Doc Valid CheckSx3("D3_DOC") .And. VldUser('D3_DOC') WHEN If(ExistBlock("MTA241DOC"),lDocto,If(GetSx3Cache("D3_DOC","X3_VISUAL") == "V",.F.,&(GetSx3Cache("D3_DOC","X3_WHEN")))) SIZE 65,08 OF oPanel1
		@ 0.4,17.3	SAY OemToAnsi(STR0010) OF oPanel1	//"TM"
		@ 0.3,18.7	MSGET oTm Var cTm F3 "SF5" Picture cPicD3TM Valid A241ChkSX3("D3_TM") .And. VldUser('D3_TM') WHEN If(GetSx3Cache("D3_TM","X3_VISUAL") == "V",.F.,&(GetSx3Cache("D3_TM","X3_WHEN"))) OF oPanel1
		oTm:bLostFocus := { || IIf(!Vazio(cTm) ,{cNrAbate:=A240NGUIA(cTm,.F.)},cNrAbate:="aaa")}

		@ 0.4,22.7  SAY OemToAnsi(STR0011) OF oPanel1 	//"Centro de Custo"
		@ 0.3,27.9  MSGET cCC F3 cF3 Picture cPicD3CC Valid &(cvalidcc) .And. VldUser('D3_CC') WHEN If(GetSx3Cache("D3_CC","X3_VISUAL") == "V",.F.,&(GetSx3Cache("D3_CC","X3_WHEN"))) OF oPanel1
		If len(cCC) <= 9
			@ 0.4,36.5 SAY OemToAnsi(STR0012) OF oPanel1 	//"Emissao"
			@ 0.3,39.5 MSGET dA241Data Valid A241Data() .And. VldUser('D3_EMISSAO') WHEN If(GetSx3Cache("D3_EMISSAO","X3_VISUAL") == "V",.F.,&(GetSx3Cache("D3_EMISSAO","X3_WHEN"))) SIZE 40,08 OF oPanel1
		Else
		 	@ 0.4,43.5 SAY OemToAnsi(STR0012) OF oPanel1 //"Emissao"
			@ 0.3,46.5 MSGET dA241Data Valid A241Data() .And. VldUser('D3_EMISSAO') WHEN If(GetSx3Cache("D3_EMISSAO","X3_VISUAL") == "V",.F.,&(GetSx3Cache("D3_EMISSAO","X3_WHEN"))) SIZE 40,08 OF oPanel1
		EndIf

	    //здддддддддддддддддддддддддддд©
		//Ё Guia de Abate - Portugal   Ё
		//юдддддддддддддддддддддддддддды
		If cPaisLoc=="PTG"
			@ 0.4,46.7 SAY OemToAnsi(STR0047) OF oDlg 	//"Guia de Abate"
			@ 0.3,50.9 MSGET cNrAbate When .F. Of oDlg
		EndIf

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁPonto de Entrada que disponibiliza o Objeto da Dialog - oDlg  Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lMT241CAB
			aCpx:=ExecBlock("MT241CAB",.F.,.F.,{@oDlg,nOpc})
		EndIf

		oGet := MSGetDados():New(oSize:GetDimension("GETDADOS","LININI"),oSize:GetDimension("GETDADOS","COLINI"),;
		 oSize:GetDimension("GETDADOS","LINEND"),oSize:GetDimension("GETDADOS","COLEND"),;
					nOpc,'A241LinOk','A241TudoOk','',;
					If(l185,.F.,.T.),If(l185,aAlter,Nil),NIL,NIL,;
					LINHAS,,,,,,,,,oPanel2)

		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| (AEval(aCamposVld,bBlkVld),IIf(oGet:TudoOK() .And. ChkGetFix(aCamposVld,.F.,.T.) .And. ChkOpSusp(),(oDlg:End(),nOpca:=1),nOpca := 0))},{||oDlg:End()},,aTelaButtons)
	Else
		// Criacao do Array aValidGet
		aValidGet := {}
		aAdd(aValidGet,{"cDocumento"   ,aAutoCab[ProcH("D3_DOC"    ),2],"CheckSx3('D3_DOC').And. VldUser('D3_DOC')",.T.})
		aAdd(aValidGet,{"cTM"          ,aAutoCab[ProcH("D3_TM"     ),2],"CheckSx3('D3_TM') .And. VldUser('D3_TM')" ,.F.})
		aAdd(aValidGet,{"cCC"          ,aAutoCab[ProcH("D3_CC"     ),2],"CheckSx3('D3_CC') .And. VldUser('D3_CC')" ,.F.})
		aAdd(aValidGet,{"dA241Data"    ,aAutoCab[ProcH("D3_EMISSAO"),2],"A241Data()"                               ,.T.})
		If ! SD3->(MsVldGAuto(aValidGet)) // consiste os gets
			Return .F.
		EndIf
		If ! SD3->(MsVldAcAuto(aValidGet,"A241LinOk(o)","A241TudoOk(o)"))   // consiste o campos do Acols
			Return .F.
		EndIf
		nOpcA := 1
	EndIf

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Apaga lancamentos de validacao nao utilizados gerados no SIGAPCO Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If nOpcA <> 1
		PcoFreeBlq("000151",.T.)
	Endif

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Recupera o Conteudo do Ponto de Entrada MT241CAB para utilizacao |
	//Ё posterior no Ponto de Entrada MT241GRV           			     |
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	aCpoCab:={}
	If lMT241CAB
		If VALTYPE(aCpx)='A'
 		    aCpoCab:=Aclone(aCpx)
		EndIf
	EndIf

	If nOpcA == 1
		Begin Transaction
		a241Grava(cAlias,nOpcao,@lChangeDoc, aCpoCab)
		// Processa Gatilhos
		EvalTrigger()
		If __lSX8
			ConfirmSX8()
		EndIf
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁSe a funcao estiver sendo executada via MATA185, esta funcao         Ё
		//Ёatualizara as demais tabelas dentro da mesma transacao (SCQ/SCP/SB2) Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If l185
			A185AtuSCQ(SD3->D3_DOC)
		EndIf

		If	lIntegDef
			SD3->(DbSetOrder(2))
			If	SD3->(DbSeek(xFilial("SD3")+cDocumento))
				FwIntegDef( 'MATA241' )
			EndIf
		EndIf

		End Transaction

		If lChangeDoc  //-- No. do Documento foi alterado
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁSe a funcao estiver sendo executada via MATA185, esta mensagem Ё
			//Ёsera exibida no MATA185 (fora da Transacao)                    Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If !l185 .And. !l241Auto
				Help("",1,"A240DOC",,cDocumento,4,30)
			EndIf
			cNewDoc := cDocumento
		EndIf

		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Finaliza a gravacao dos lancamentos do SIGAPCO            Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		PcoFinLan("000151")

		If lMT241SD3
			ExecBlock("MT241SD3",.F.,.F.)
		End

		//Somente executa as ordens de serviГo do WMS, apСs a transaГЦo
		//Pois a execuГЦo dos serviГos no WMS tem transaГЦo prСpria
		If IntWMS() .And. !lWmsNew .Or. (lWmsNew .And. !lWmsSD3)
			WmsExeServ()
		EndIf

		If lLogMov .And. Len(aLogSld) > 0
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Imprimir Relatorio de Movimentos nao realizados por falta de saldo Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			RelLogMov(aLogSld)
		EndIf
	ElseIf __lSX8
		RollBackSX8()
	EndIf

	If nOpca == 0 .And. lMT241CAN
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Ponto de entrada para tratamento especifico do usuario Ё
		//Ё no momento do Cancelamento                             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		ExecBlock('MT241CAN', .F., .F.)
	EndIf

	Exit
EndDo

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Desativa tecla F4                                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Set Key VK_F4 to

dbSelectArea("SF5")
dbClearFilter()
dbGoTop()
SetCursor(0)
dbSelectArea(cAlias)
Return nOpca

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ёa241EstornЁ Autor Ё Gilson do Nascimento  Ё Data Ё 02/05/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de estorno de movimentacao interna                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void a241Estorn(ExpC1,ExpN1,ExpN2)                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Numero da opcao selecionada                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function a241Estorn(cAlias,nReg,nOpc)
Local GetList     := {}
Local nSavRec
Local nCntItem    := 1
Local nCnt        := 0
Local dDataFec    := MVUlmes()
Local cProduto
Local cLocal
Local cCQ			:= GetMvNNR('MV_CQ','98')
Local nQuant
Local oDlg
Local aAlter	  := {}
Local lAbandona   := .F.
Local nPosEstr    := 0
Local zi          := 0
Local i           := 0
Local cCampo      := ""
Local cNumSeq     := ""
Local aAreaSD3    := {}
Local lMt241Est   := ExistBlock("MT241EST")
Local aObjects	  := {}
Local aSize   	  := MsAdvSize(.F.)
Local oSize
Local aInfo       := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
Local aPosObj     := {}
Local lRet		  := .T.
Local lInventario := .F.
Local lEmBranco   := .F.
Local nX          := 0
Local nY  		  := 0
Local aLockSB2    := {}
Local aLockSB3    := {}
Local aLockSD3    := {}
Local aArea2	  := {}

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Walk-Thru                                                     Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local aNoFields	  := {"D3_DOC","D3_TM","D3_CC","D3_PERDA","D3_EMISSAO","D3_PARCTOT","D3_NODIA","D3_DIACTB"}
Local bSeekFor	  := {|| D3_ESTORNO <> "S" .And. dA241Data == SD3->D3_EMISSAO .And. (D3_TM == cTm .Or. (D3_TM <> cTm .And. !Empty(D3_ESTORNO))) }
Local bSeekWhile  := {|| D3_FILIAL+D3_DOC } //Condicao While para montar o aCols
Local cSeek	   	  := ""
Local nPosRec     := 0
Local lFirst      := .T.
Local aBtnBack    := {}

Local lIntegDef  :=  FWHasEAI("MATA241")

PRIVATE aRatVei   := {}
PRIVATE aRatFro   := {}
PRIVATE aArraySDG := {}

// -- Protecao quando rotina for executada em modo automatico
If Type("aCtbDia") == "U"
   Private aCtbDia := {}
EndIf

//здддддддддддддддддд©
//Ё Percentual FCI   |
//юдддддддддддддддддды
AADD(aNoFields,"D3_PERIMP")
AADD(aNoFields,"D3_VLRVI")

aButtons := If(Type("aButtons") == "U", {}, aButtons)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Campos que podem ser alterados na GetDados                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
aAlter := {"D3_ESTORNO"}

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se existe algum dado no arquivo                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea( cAlias )
dbSetOrder(1)
If RecCount() == 0
	Return .T.
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se esta' na filial correta                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If xFilial() != D3_FILIAL
	Help(" ",1,"A000FI")
	Return .T.
EndIf

If Subs(D3_CF,1,2) == "PR" .Or. Subs(D3_CF,3,1)$"12457"
	Help(" ",1,"A240NAO")
	Return
EndIf

If D3_ESTORNO == "S" .Or. D3_CF == "499" .Or. D3_CF == "999"
	Help(" ",1,"A240ESTORN")
	Return
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o Movimento foi gerado pelo SIGAEIC                          |
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !l241Auto .And. cPaisLoc == "BRA"
	If !Empty(SD3->D3_HAWB)
		Help(" ",1,"DI161HAWB")
		Return
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o Movimento foi gerado pelo MATA185                          |
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !l185 .And. AvalMovSA(D3_COD,D3_NUMSEQ)
	Help(" ",1,"A185ESTOR")
	Return
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o Movimento foi gerado pelo MATA907                          |
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If AvalMovSelo(D3_COD,D3_TM)
	Help(" ",1,"SELOFISCA")
	Return
EndIf

cNumSeq:=SD3->D3_NUMSEQ
cProduto:=SD3->D3_COD
aAreaSD3:=GetArea()
dbSetOrder(4)
dbSeek(xFilial('SD3')+cNumSeq)
While !Eof() .And. xFilial('SD3')+cNumSeq == D3_FILIAL+D3_NUMSEQ
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё AvalMovDiv - Funcao utilizada para avaliar possiveis divergencias de     |
	//|              saldo no estorno do movimento selecionado.                  Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If AvalMovDiv(D3_COD,D3_LOCAL,D3_LOTECTL,D3_NUMLOTE,D3_NUMSEQ,,SD3->D3_TM)
		RestArea(aAreaSD3)
		Return
	EndIf
	dbSkip()
End
RestArea(aAreaSD3)

//здддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a OP ja' foi encerrada Ё
//юдддддддддддддддддддддддддддддддддддды
dbSelectArea("SC2")
dbSeek(xFilial("SC2")+SD3->D3_OP)
If !Empty(C2_DATRF)
	Help(" ",1,"MA240OPENC")
	dbSelectArea("SD3")
	Return
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verificar data do ultimo fechamento em SX6.                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If dDataFec >= SD3->D3_EMISSAO
	Help ( " ", 1, "FECHTO" )
	Return
EndIf

//------------------------------------------------------
// Caso haja EPI entregue a algum funcionario, nЦo
// poderА realizar o estorno (SIGAMDT)
// MV_NGMDTES deverА estar habilitado 
//------------------------------------------------------
If lRet .And. FindFunction('MDTValEst') .And. !MDTValEst( SD3->D3_NUMSEQ , SD3->D3_FILIAL , 1 )
	Return .F.
Endif
dbSelectArea(cAlias)

PRIVATE cDocumento := D3_DOC
PRIVATE dA241Data  := D3_EMISSAO
PRIVATE cCC        := D3_CC
PRIVATE cTM        := D3_TM
PRIVATE	nOpcA

//здддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica se o usuario tem permissao de delecao. Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддды

aArea2 := GetArea()
SD3->(DbSetorder(2))
SD3->(dbSeek(xFilial("SD3")+cDocumento))
While !SD3->(Eof()) .And. !lAbandona .And. SD3->D3_FILIAL+SD3->D3_DOC == Xfilial("SD3")+cDocumento
	lAbandona := ! MaAvalPerm(1,{SD3->D3_COD,"MTA240",5})
	SD3->(dbSkip())
End
RestArea(aArea2)
If lAbandona
	Help(,,1,'SEMPERM')
EndIf


If Empty(cDocumento)
	Help ( " ", 1, "DOC_BRANCO" )
	Return .T.
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica calendАrio contАbil                Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet 
	lRet := (CtbValiDt(Nil,SD3->D3_EMISSAO,,Nil ,Nil ,{"EST001"}))
EndIf

If !lRet
	Return .T.
EndIf

nSavRec := RecNo()
dbSetOrder(2)
dbSeek( xFilial()+cDocumento )

SB1->(dbSetOrder(1))
dbSelectArea(cAlias)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta a entrada de dados do arquivo                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
cSeek  := xFilial("SD3")+cDocumento

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta aHeader e aCols utilizando a funcao FillGetDados       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE aHeader[0]
PRIVATE aCols[0]
PRIVATE Continua

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Sintaxe da FillGetDados( nOpcx, cAlias, nOrder, cSeekKey, bSeekWhile, uSeekFor, aNoFields, aYesFields, lOnlyYes, cQuery, bMontCols, lEmpty, aHeaderAux, aColsAux, bAfterCols, bBeforeCols, bAfterHeader, cAliasQry )   |
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
FillGetDados(nOpc,cAlias,2,cSeek,bSeekWhile,bSeekFor,aNoFields,,,,,,,,{|aColsX| a241AfterC(nOpc,aColsX,cAlias,@aLockSB2,@aLockSB3,@aLockSD3,@lEmBranco)}/*bAfterCols*/,/*bBeforeCols*/)

For nx = 1 To Len(aHeader)
	Do Case
		Case Trim(aHeader[nx][2]) == "D3_COD"
			nPosCod:=nX
		Case Trim(aHeader[nx][2]) == "D3_LOCAL"
			nPosLocal:=nX
		Case Trim(aHeader[nx][2]) == "D3_NUMLOTE"
			nPosLote:=nX
		Case Trim(aHeader[nx][2]) == "D3_LOTECTL"
			nPosLotCTL:=nX
		Case Trim(aHeader[nx][2]) == "D3_DTVALID"
			nPosDValid:=nX
		Case Trim(aHeader[nx][2]) == "D3_POTENCI"
			nPosPotenc:=nX
		Case Trim(aHeader[nx][2]) == "D3_QUANT"
			nPosQuant:=nX
		Case Trim(aHeader[nx][2]) == "D3_SEGUM"
			nPosSegUm:=nX
		Case Trim(aHeader[nx][2]) == "D3_QTSEGUM"
			nPosQtSegUm:=nX
		Case Trim(aHeader[nx][2]) == "D3_TEATF"
			nPosTES:=nX
		Case Trim(aHeader[nx][2]) == "D3_CUSTO1"
			nPosCusto1:=nX
		Case Trim(aHeader[nx][2]) == "D3_UM"
			nPosUm:=nX
		Case Trim(aHeader[nx][2]) == "D3_CONTA"
			nPosConta:=nX
		Case Trim(aHeader[nx][2]) == "D3_GRUPO"
			nPosGrupo:=nX
		Case Trim(aHeader[nx][2]) == "D3_TIPO"
			nPosTipo:=nX
		Case Trim(aHeader[nx][2]) == "D3_OP"
			nPosOp:=nX
		Case Trim(aHeader[nx][2]) == "D3_TRT"
			nPosTrt:=nX
		Case Trim(aHeader[nx][2]) == "D3_DESCRI"
			nPosDesc:=nX
		Case Trim(aHeader[nx][2]) == "D3_ESTORNO"
			nPosEstr:=NX
		Case Trim(aHeader[nx][2]) == "D3_LOCALIZ"
			nPosLocali:=nX
		Case Trim(aHeader[nx][2]) == "D3_NUMSERI"
			nPosNumSer:=nX
		Case Trim(aHeader[nx][2]) == "D3_CODVEI"
			nPosCodVei:=nX
		Case Trim(aHeader[nx][2]) == "D3_VIAGEM"
			nPosViagem:=nX
		Case Trim(aHeader[nx][2]) == "D3_SERVIC"
			nPosServic:=nX
		Case Trim(aHeader[nx][2]) == "D3_PROJPMS"
			nPosProj:=nX
		Case Trim(aHeader[nx][2]) == "D3_TASKPMS"
			nPosTarefa:=nX
		Case Trim(aHeader[nx][2]) == "D3_CLVL"
			nPosClVl:=nX
		Case Trim(aHeader[nx][2]) == "D3_ITEMCTA"
			nPosItemCT:=nX
		Case Trim(aHeader[nx][2]) == "D3_STATUS"
			nPosStatus:=nX
		Case Trim(aHeader[nx][2]) == "D3_NUMSA"
			nPosNumSa:=nX
		Case Trim(aHeader[nx][2]) == "D3_ITEMSA"
			nPosItemSa:=nX
		Case Trim(aHeader[nx][2]) == "D3_CUSTO2"
			nPosCusto2:=nX
		Case Trim(aHeader[nx][2]) == "D3_CUSTO3"
			nPosCusto3:=nX
		Case Trim(aHeader[nx][2]) == "D3_CUSTO4"
			nPosCusto4:=nX
		Case Trim(aHeader[nx][2]) == "D3_CUSTO5"
			nPosCusto5:=nX
	EndCase
Next nx

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Validacao do uso de alguns campos obrigatorios               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Empty(nPosCod)
	UserException("D3_COD"  +OemToAnsi(STR0021))
ElseIf Empty(nPosLocal)
	UserException("D3_LOCAL"+OemToAnsi(STR0021))
ElseIf Empty(nPosQuant)
	UserException("D3_QUANT"+OemToAnsi(STR0021))
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Executa Ponto de Entrada p/ adicao de campos na getdados             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("MTA241CPO")
	ExecBlock("MTA241CPO",.F.,.F.,{nOpc})
EndIf

If lEmBranco
	Help ( " ", 1, "DOC_BRANCO" )
	dbSetOrder(1)
	Return
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Caso nao ache nenhum item , abandona rotina.         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Len(aCols) == 0
	MsGoTo( nSavRec )
	dbSetOrder(1)
	Return .T.
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se algum produto est═ sendo inventariado.  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
For zi:=1 to Len(aCols)
	If BlqInvent(aCols[zi,nPosCod],aCols[zi,nPosLocal],,aCols[zi,nPosLocali])
		Help(" ",1,"BLQINVENT",,aCols[zi,nPosCod]+OemToAnsi(STR0017)+aCols[zi,nPosLocal],1,11)
		lAbandona:=.T.
	EndIf
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Analisa se o tipo do armazem permite a movimentacao |
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If !lAbandona .And. AvalBlqLoc(aCols[zi,nPosCod],aCols[zi,nPosLocal],Nil,,,,,,,aCols[zi,nPosOp])
		lAbandona:=.T.
	EndIf
Next i

If lAbandona
	Return
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao com o Modulo de Transporte (TMS)                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If IntTms()
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se nao ha movimento de custo de transporte baixado. Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If !A240TmsVld()
		Return Nil
	EndIf
EndIf

nOpca:=0

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de Entrada criado para configurar botoes da enchoicebar        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock( "A241BUT" )
	aBtnBack := aClone(aButtons)
	aButtons := ExecBlock( "A241BUT", .F., .F., { nOpc, aButtons } )
	If ValType( aButtons ) # "A"
		aButtons := aClone(aBtnBack)
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa a gravacao dos lancamentos do SIGAPCO Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддды
PcoIniLan("000151")
If !l241Auto

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё DefiniГЦo array aObjects                                             Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	oSize := FwDefSize():New()

	oSize:AddObject( "CABECALHO",  100, 8, .T., .T. ) // Totalmente dimensionavel
	oSize:AddObject( "GETDADOS" ,  100, 92, .T., .T. ) // Totalmente dimensionavel
	oSize:lProp 	:= .T. // Proporcional
	oSize:aMargins 	:= { 3, 3, 3, 3 } // Espaco ao lado dos objetos 0, entre eles 3

	oSize:Process() 	   // Dispara os calculos

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё DefiniГЦo Dialog                                                     Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

	DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0004) OF oMainWnd PIXEL FROM oSize:aWindSize[1],oSize:aWindSize[2] TO oSize:aWindSize[3],oSize:aWindSize[4]

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё DefiniГЦo Panel que sera usado no posicionamento da tela             Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	oPanel1:= TSay():New(oSize:GetDimension("CABECALHO","LININI"),oSize:GetDimension("CABECALHO","COLINI"),{||''},oDlg,,,,,,.T.,,,oSize:GetDimension("CABECALHO","XSIZE"),oSize:GetDimension("CABECALHO","YSIZE"))
	oPanel2:= tPanel():New(oSize:GetDimension("GETDADOS","LININI"),oSize:GetDimension("GETDADOS","COLINI"),,oDlg,,,,,,oSize:GetDimension("GETDADOS","XSIZE"),oSize:GetDimension("GETDADOS","YSIZE"),,)

	@ 0.6,00.7 SAY OemToAnsi(STR0009) of oPanel1 //"Nёmero Documento"
	@ 0.5,08.0 MSGET cDocumento When .F. SIZE 65,08 OF oPanel1
	@ 0.6,17.3 SAY OemToAnsi(STR0010) of oPanel1 //"TM"
	@ 0.5,18.7 MSGET cTm When .F. of oPanel1
	@ 0.6,22.7 SAY OemToAnsi(STR0011) of oPanel1 //"Centro de Custo"
	@ 0.5,27.9 MSGET cCC When .F. of oPanel1
	If len(cCC) <= 9
		@ 0.6,36.4 SAY OemToAnsi(STR0012) of oPanel1 //"Emissao"
		@ 0.5,39.4 MSGET dA241Data When .F. SIZE 40,08 of oPanel1
    Else
     	@ 0.6,43.4 SAY OemToAnsi(STR0012) OF oPanel1 //"Emissao"
   		@ 0.5,46.4 MSGET dA241Data When .F. SIZE 40,08 OF oPanel1
    EndiF

	//здддддддддддддддддддддддддддд©
	//Ё Guia de Abate - Portugal   Ё
	//юдддддддддддддддддддддддддддды
	If cPaisLoc=="PTG"
		@ 0.6,46.7 SAY OemToAnsi(STR0047) OF oDlg 	//"Guia de Abate"
		@ 0.5,50.9 MSGET D3_NRABATE When .F. Of oDlg
	EndIf

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁPonto de Entrada que disponibiliza o Objeto da Dialog - oDlg  Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If (ExistBlock( "MT241CAB" ))
		ExecBlock("MT241CAB",.F.,.F.,{@oDlg,nOpc})
	EndIf

	oGet := MSGetDados():New(oSize:GetDimension("GETDADOS","LININI"),oSize:GetDimension("GETDADOS","COLINI"),;
	oSize:GetDimension("GETDADOS","LINEND"),oSize:GetDimension("GETDADOS","COLEND"),;
	4,"AllwaysTrue","AllwaysTrue","",;
	.F.,aAlter,NIL,NIL,;
	LINHAS,,,,,,,,,oPanel2)

	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpca:=2,If(MTA241ESTOk(),oDlg:End(),nOpca:=0)},{||oDlg:End(),nOpca:=0},,aButtons)
Else
	If MTA241EstOk()
		nOpcA := 2
	EndIf
EndIf

// Posicao da coluna No.de registro
nPosRec := GDFieldPos("D3_REC_WT")

If nOpcA == 2
	Begin Transaction
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Tratamento para Dead-Lock                                              Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If MultLock("SD3",aLockSD3,3) .And. MultLock("SB2",aLockSB2,1) .And. MultLock("SB3",aLockSB3,1)
			nCnt := 0
			dbSelectArea(cAlias)
			For nX = 1 to Len(aCols)
				If nPosEstr > 0
					If aCols[nx,nPosEstr] == "S"
						MsGoTo(aCols[nX,nPosRec])
						If A240EstrOk(SD3->D3_COD,SD3->D3_LOCAL,SD3->D3_LOTECTL,SD3->D3_NUMLOTE,SD3->D3_NUMSEQ,SD3->D3_DOC,SD3->D3_QUANT,NIL,@lInventario,l241Auto)
							//Estorna Ativo
							If SF5->(MsSeek(xFilial("SF5")+SD3->D3_TM))
								If SF5->(FieldPos("F5_GERAATF"))> 0 .And. SF4->(MsSeek(xFilial("SF4")+SF5->F5_TEATF))
									If SF5->F5_GERAATF == "1" .And. cPaisLoc == "BRA"
										lRet:= A241AvalATF(SF4->F4_BENSATF == "1",SF4->F4_COMPONE == "1",5)
									EndIf	
								EndIf
							EndIf
							If lRet
								RecLock(cAlias,.F.)
								//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
								//Ё Envia p/func. de atualizacoes (SD3,SB2,SB3,SC2,..) Ё
								//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
								a240DesAtu(lInventario)
								dbSelectArea(cAlias)
							Else
								Exit							
							EndIf	
						EndIf
					EndIf
				Else
					Help("",1,"D3_ESTORNO")
					Exit
				EndIf
			Next nx

			//Chamada da integraГЦo
			If	lIntegDef
				SD3->(DbSetOrder(2))
				If	SD3->(MsSeek(xFilial("SD3")+SD3->D3_DOC))
					FwIntegDef( 'MATA241' )
				EndIf
			EndIf

			//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Ponto de entrada ap╒s a grava┤└o do estorno        Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lMt241Est
				Execblock("MT241EST",.F.,.F.)
			EndIf
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Verifica se o custo medio e' calculado On-Line               Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If cCusMed == "O" .And. nTotal > 0
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Inicializa perguntas deste programa                            Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё mv_par01 - Se mostra e permite digitar lancamentos contabeis   Ё
				//Ё mv_par02 - Se deve aglutinar os lancamentos contabeis          Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				Pergunte("MTA240",.F.)
				lDigita   := IIf(mv_par01 == 1,.T.,.F.)
				lAglutina := IIf(mv_par02 == 1,.T.,.F.)
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Se ele criou o arquivo de prova ele deve gravar o rodape'    Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				RodaProva(nHdlPrv,nTotal)

				If !Empty(aCtbDia)
					cCodDiario := CtbaVerdia()
					For nX := 1 to Len(aCtbDia)
						aCtbDia[nX][3] := cCodDiario
					Next nX
				EndIf
				If cA100Incl(cArquivo,nHdlPrv,3,cLoteEst,lDigita,lAglutina,,,,,,ACtbDia)
					For nY := 1 to Len(aCols)
						SD3->(MsGoTo(aCols[nY,nPosRec]))
						RecLock("SD3",.F.)
						Replace SD3->D3_DTLANC With dDataBase
						MsUnLock()
					Next nY
				EndIf
				lCriaHeader := .T.
				nTotal      := 0 // Total dos lancamentos contabeis
			EndIf
		Else
			ConOut("WARNING: DEADLOCK CONTROL IS ON")
		EndIf



	End Transaction
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Finaliza a gravacao dos lancamentos do SIGAPCO            Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	PcoFinLan("000151")
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Restaura a integridade da janela                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea(cAlias)
MsGoto(nReg)
Return Nil

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©╠╠
╠╠Ё                                                                       Ё╠╠
╠╠Ё                                                                       Ё╠╠
╠╠Ё                   ROTINAS DE CRITICA DE CAMPOS                        Ё╠╠
╠╠Ё                                                                       Ё╠╠
╠╠Ё                                                                       Ё╠╠
╠╠юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ёa241TudOk Ё Autor Ё Eveli Morasco         Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Critica se a nota toda esta' Ok                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Objeto a ser verificado.                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata241                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function a241TudoOk(o)
Static lExistMT241OK := NIL
Local  lRetorno      := .T.
Local  zi            := 0
Local  nLinha        := n

If Empty(cTM)
	Help(" ",1,"D3_TM")
	lRetorno := .F.
Else
	If ! A241Check()
		lRetorno := .F.
	Else
		For zi:=1 to Len(aCols)
			If !A241LinOk(nil,zi,.T.)
				lRetorno:=.F.
				Exit
			EndIf
		Next zi
		n := nlinha
		If lRetorno
			If lExistMT241OK == NIL
				lExistMT241OK:=ExistBlock("MT241TOK")
			EndIf

			If nModulo == 72
				lRetorno := KEXF880()
				If ValType(lRetorno) # "L"
					lRetorno:=.T.
				EndIf
			EndIf

			If lExistMT241OK
				lRetorno := ExecBlock("MT241TOK",.F.,.F.)
				If ValType(lRetorno) # "L"
					lRetorno:=.T.
				EndIf
			EndIf

		EndIf
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica calendАrio contАbil                Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRetorno 
	lRetorno := (CtbValiDt(Nil,DA241DATA,,Nil ,Nil ,{"EST001"}))
EndIf

Return lRetorno

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ёa241Grava Ё Autor Ё Gilson Nascimento     Ё Data Ё04/05/95  Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Gravar os dados no arquivo                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero da opcao selecionada                        Ё╠╠
╠╠Ё          Ё ExpL1 = Valida se o no. do documento sera alterado         Ё╠╠
╠╠Ё          Ё ExpA1 = Campos do Cabecalho implementados pelo PE:MT241CAB Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata241                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function a241Grava(cAlias,nOpcao,lChangeDoc,aCpoUsu)
Local n
Local nY           := 0
Local nMaxArray
Local nCntItem     := 1
Local aAnterior    := {}
Local nCntDel      := 0
Local nOrder
Local nX
Local cItem
Local cMay         := ''
Local aRegSD3      := {}
Local aLockSB2     := {}
Local aLockSB3     := {}
Local lIntGH       := SuperGetMV("MV_INTGH",.F.,.F.)
Local lFirstNum    := .T.
Local lPimsInt     := SuperGetMV("MV_PIMSINT",.F.,.F.)
Local aCMNF			:= {0,0,0,0,0}
Local lCAT83		:= FindFunction("V240CAT83") .And. V240CAT83()
Local cNumseq		:= ""
Local nPosIdent   := 0
Local aEndereco   := {}
Local lHSGrvGaj   := FindFunction("HS_GRVGAJ")
Local aItenSD3		:= {}
Local cCF         := ""
Local cAproPri    := "0"
Local aEndereco   := {}
Local nPosIdDCF   := 0
Local nPosNumSeq  := 0
Local lWmsNew     := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local lWmsSD3     := Iif(Type('lExecWms')=='L', lExecWms, .F.)

Local lCpoUser   := ExistBlock('CPOSDH1')
Local aCpoUser   := {}
Local aCpoAuxUsr := {}
Local nPosAux    := 0
Private cNewItSDG  := "" // Variavel utilizada pelo programa Mata103

// -- Protecao quando rotina for executada em modo automatico
If Type("cA240End") == "U"
	Private cA240End   := CriaVar('DB_LOCALIZ')
EndIf

If Type("aCtbDia") == "U"
   Private aCtbDia := {}
EndIf

Default lChangeDoc := .F.

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o ultimo elemento do array esta em branco        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
nMaxArray := Len(aCols)
If Empty(aCols[nMaxArray,nPosCod]) .And. Empty(aCols[nMaxArray,nPosQuant])
	nMaxArray--
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se durante a digitacao n└o foi incluido um documentoЁ
//Ё com o mesmo numero por outro usu═rio.                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !l241Auto
	dbSelectArea(cAlias)
	nOrder:=IndexOrd()
	dbSetOrder(2)
	dbSeek(xFilial()+cDocumento)
	cMay := "SD3"+Alltrim(xFilial())+cDocumento
	lFirstNum :=.T.
	While D3_FILIAL+D3_DOC==xFilial()+cDocumento.Or.!MayIUseCode(cMay)
		If D3_ESTORNO # "S"
			If lFirstNum
				cDocumento := NextNumero("SD3",2,"D3_DOC",.T.)
				cDocumento := A261RetINV(cDocumento)
				lFirstNum :=.F.
			Else
				cDocumento := Soma1(cDocumento)
			EndIf
			lChangeDoc := .T.
			cMay := "SD3"+Alltrim(xFilial())+cDocumento
		EndIf
		dbSkip()
	EndDo
	dbSetOrder(nOrder)
	
	If lWMSNew .And. !lWmsSD3
		dbSelectArea("DH1")
		DH1->(dbSetOrder(2))
		If DH1->(dbSeek(xFilial("DH1")+cDocumento))
			cDocumento := NextNumero("DH1",2,"DH1_DOC",.T.)
			cMay := "SD3"+Alltrim(xFilial())+cDocumento
		EndIf
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Tratamento para Dead-Lock                                              Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
For nX:=1 to Len(aCols)
	If aScan(aLockSB2,aCols[nX][nPosCod]+aCols[nX][nPosLocal])==0
		aAdd(aLockSB2,aCols[nX][nPosCod]+aCols[nX][nPosLocal])
	EndIf
	If aScan(aLockSB3,aCols[nX][nPosCod])==0
		aAdd(aLockSB3,aCols[nX][nPosCod])
	EndIf
Next nX
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Tratamento para Dead-Lock                                              Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If MultLock("SB2",aLockSB2,1) .And. MultLock("SB3",aLockSB3,1)
	For nx := 1 to nMaxArray
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё verifica se nao esta deletado (DEL)                            Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If !aCols[nx][Len(aCols[nx])]
			If A241LinOk(nil,nx)
				If lWmsSD3
					nPosNumSeq := aScan(aAutoItens[nx], {|x| AllTrim(x[1]) == "D3_NUMSEQ"})
					cNumseq    := aAutoItens[nx][nPosNumSeq][2]
				Else
					cNumseq := ProxNum() //Pega o numero sequencial do movimento
				EndIf

				// IntegraГЦo WMS - Busca endereГo
				If !lWmsSD3 .And. IntWMS(aCols[nx,nPosCod]) .And. !Empty(aCols[nx,nPosServic]) .And. !(Type('cA240End')=='U')
					a240Ender(aCols[nx,nPosLocal],aCols[nx,nPosCod],aCols[nx,nPosQuant],cNumseq,cTm,aEndereco)
				EndIf
				// Verifica se produto controla WMS
				If lWMSNew .And. !lWmsSD3 .And. (cTm > '500') .And. IntWMS(aCols[nx,nPosCod]) .And. !Empty(aCols[nx,nPosServic])

					cCF:= A240GeraCF(cAproPri,aCols[nx,nPosCod],cTM,aCols[nx,nPosOp]) //-- Retorna D3_CF

					aAdd(aItenSD3,{})
					aAdd(aItenSD3[Len(aItenSD3)],xFilial("DH1"))
					aAdd(aItenSD3[Len(aItenSD3)],cTM)
					aAdd(aItenSD3[Len(aItenSD3)],dA241Data)
					aAdd(aItenSD3[Len(aItenSD3)],cNumseq)
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosCod])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosLotCTL])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosLocal])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosLocali])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosQuant])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosQtSegUm])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosTrt])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosProj])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosTarefa])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosClVl])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosServic])
					aAdd(aItenSD3[Len(aItenSD3)],cCC)
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosConta])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosItemCT])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosStatus])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosOp])
					If nPosNumSa > 0 //-- FieldPos
						aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosNumSa])
					Else
						aAdd(aItenSD3[Len(aItenSD3)],"")
					EndIf
					If nPosItemSa > 0 //-- FieldPos
						aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosItemSa])
					Else
						aAdd(aItenSD3[Len(aItenSD3)],"")
					EndIf
					aAdd(aItenSD3[Len(aItenSD3)],cDocumento)
					aAdd(aItenSD3[Len(aItenSD3)],cCF)
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosLote])
					aAdd(aItenSD3[Len(aItenSD3)],aCols[nx,nPosNumSer])
					AADD(aItenSD3[Len(aItenSD3)], aCols[nx,nPosCusto1]) //D3_CUSTO1
					If nPosCusto2 > 0
						AADD(aItenSD3[Len(aItenSD3)], aCols[nx,nPosCusto2])	//D3_CUSTO2
					Else
						AADD(aItenSD3[Len(aItenSD3)], 0)	//D3_CUSTO2
					Endif
					If nPosCusto3 > 0
						AADD(aItenSD3[Len(aItenSD3)], aCols[nx,nPosCusto3])	//D3_CUSTO3
					Else
						AADD(aItenSD3[Len(aItenSD3)], 0)	//D3_CUSTO3
					Endif
					If nPosCusto4 > 0
						AADD(aItenSD3[Len(aItenSD3)], aCols[nx,nPosCusto4])	//D3_CUSTO4
					Else
						AADD(aItenSD3[Len(aItenSD3)], 0)	//D3_CUSTO4
					Endif
					If nPosCusto5 > 0
						AADD(aItenSD3[Len(aItenSD3)], aCols[nx,nPosCusto5])	//D3_CUSTO5
					Else
						AADD(aItenSD3[Len(aItenSD3)], 0)	//D3_CUSTO5
					Endif
					AADD(aItenSD3[Len(aItenSD3)], aCols[nx,nPosDValid])//D3_DTVALID
					AADD(aItenSD3[Len(aItenSD3)], aCols[nx,nPosPotenc])//D3_POTENCI
					
					If lCpoUser
						aCpoUser := ExecBlock('CPOSDH1',.F.,.F.,{"MATA241",nX})
						If ValType(aCpoUser) == 'A'
							aADD(aCpoAuxUsr,{})
							nPosAux := Len(aCpoAuxUsr)
							For nY := 1 to Len(aCpoUser)
								aADD(aCpoAuxUsr[nPosAux],{aCpoUser[nY,1],aCpoUser[nY,2]})
							Next nY
						EndIf
					EndIf
				Else
					RecLock(cAlias,.T.)
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Atualiza dados padroes da movimentacao interna           Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					SD3->D3_DOC:= cDocumento
					SD3->D3_EMISSAO := dA241Data
					SD3->D3_FILIAL :=xFilial("SD3")
					SD3->D3_TM:= cTM
					SD3->D3_CC:= cCC
					aAdd(aRegSD3,SD3->(Recno()))
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Atualiza dados do corpo da movimentacao interna          Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					For nY := 1 to Len(aHeader)
						If aHeader[nY][10] # "V"
							xVar := Trim(aHeader[nY][2])
							If AllTrim(xVar) != "D3_CC" .Or. (!Empty(aCols[nx,nY]))
								Replace &xVar With aCols[nx][nY]
							EndIf
						EndIf
					Next nY
					If l241Auto
						nPosIdent := aScan(aAutoItens[nx], {|x| AllTrim(x[1]) == "D3_IDENT"})
						If nPosIdent > 0
							SD3->D3_IDENT:= aAutoItens[nx][nPosIdent][2]
						EndIf
					EndIf

					//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Atualiza B2_QEMPSA - Pre-Requisicao                Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
					A185BxEmp(nX)					

					//Gera Ativo
					aCMNF := {0,0,0,0,0}
					If SF5->(MsSeek(xFilial("SF5")+cTm))
						If SF5->(FieldPos("F5_GERAATF"))> 0 .And. SF4->(MsSeek(xFilial("SF4")+SF5->F5_TEATF))
							If SF5->F5_GERAATF == "1"
								A241AvalATF(SF4->F4_BENSATF == "1",SF4->F4_COMPONE == "1",,cNumseq,@aCMNF)
							EndIf
						EndIf
					EndIf
					If l241Auto .And. lWmsSD3
						If nPosLotCTL > 0
							SD3->D3_LOTECTL := aAutoItens[nx][nPosLotCTL][2]
						EndIf
						If nPosLote > 0
							SD3->D3_LOCALIZ := aAutoItens[nx][nPosLote][2]
						EndIf
						If nPosLocali > 0
							SD3->D3_LOCALIZ := aAutoItens[nx][nPosLocali][2]
						EndIf
						nPosIdDCF := aScan(aAutoItens[nx], {|x| AllTrim(x[1]) == "D3_IDDCF"})
						If nPosIdDCF > 0 .And. SD3->(FieldPos("D3_IDDCF")) > 0
							SD3->D3_IDDCF   := aAutoItens[nx][nPosIdDCF][2]
						EndIf
					EndIf

					//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Envia p/func. de atualizacoes (SD3,SB2,SB3,SC2,..) Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
					a240Atu(NIL,nx,,cNumseq,aCMNF)

					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Gravacao da CAT83                                      Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If lCAT83 .And. Empty(SD3->D3_CODLAN)
						SD3->D3_CODLAN := A240CAT83()
					EndIf

					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁIntegracao TMS                                                          Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If IntTMS() .And. (Len(aRatVei)>0  .Or. Len(aRatFro)>0)
						If Type("nHdlPrv") <> "N"	.And. Type("lCtbOnLine") <> "L"
							lCtbOnLine := .F.
							nHdlPrv    := 0
							nTotal     := 0
							cLoteEst   := ''
						EndIf

						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//ЁVerifica se o Item da NF foi rateado por Veiculo/Viagem ou por Frota    Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						cItem  := StrZero(nx,Len(SDG->DG_ITEM))
						nItRat := aScan(aRatVei,{|x| x[1] == cItem})
						If nItRat > 0
							cTpRateio := "V"
							A103GrvSDG('SD3',aRatVei,cTpRaTeio,cItem,lCtbOnLine,nHdlPrv,@nTotal,cLoteEst,"MATA241")
						Else
							nItRat := aScan(aRatFro,{|x| x[1] == cItem})
							If nItRat > 0
								cTpRateio := "F"
								A103GrvSDG('SD3',aRatFro,cTpRateio,cItem,lCtbOnLine,nHdlPrv,@nTotal,cLoteEst,"MATA241")
							EndIf
						EndIf
					EndIf

				    If lIntGH .And. lHSGrvGaj
						If If(Type("__lMovest") <> "U", __lMovest, .F.)
							HS_GRVGAJ(,nx, SD3->D3_NUMSEQ, SD3->D3_DOC)
						Endif
					EndIf
				EndIf
			Else
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Cria array com os movimentos dos Produtos sem saldos         Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If lLogMov
					LogSaldo(aCols[nx,1],aCols[nx,15],aCols[nx,2],aCols[nx,6],aCols[nx,3],;
					aCols[nx,17],aCols[nx,18],aCols[nx,19],aCols[nx,20],aCols[nx,21],;
					@aLogSld,cDocumento,dA241Data)
				EndIf
			EndIf
		EndIf
	Next nx

	If Len(aItenSD3) > 0
		EspDH1Wms(aItenSD3,"MATA241",cA240End,,,aCpoAuxUsr)
		ADEL(aItenSD3[1],1)
		ASIZE(aItenSD3[1],1)
		aItenSD3[1] := {}
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Gravacao de campos da Guia de Abate - Portugal		   Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If cPaisLoc =="PTG" .And. nOpca == 1 .And. SF5->F5_PERDA$"OB|EX"
		cNGuia:=A240NGUIA(SD3->D3_TM,.T.)
		For nX := 1 To Len(aRegSD3)
			SD3->(MsGoTo(aRegSD3[nX]))
			RecLock("SD3",.F.)
			Replace D3_STATUS With SF5->F5_PERDA
			Replace SD3->D3_NRABATE With cNGuia
		Next nx
	EndIf
	FreeUsedCode()

	If lMT241GRV
		ExecBlock("MT241GRV",.F.,.F.,{cDocumento,aCpoUsu})
	EndIf

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se o custo medio e' calculado On-Line               Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If cCusMed == "O"
		If !lCriaHeader .And. nTotal > 0
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Inicializa perguntas deste programa                          Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё mv_par01 - Se mostra e permite digitar lancamentos contabeis   Ё
			//Ё mv_par02 - Se deve aglutinar os lancamentos contabeis          Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			Pergunte("MTA240",.F.)
			lDigita   := Iif(mv_par01 == 1,.T.,.F.)
			lAglutina := Iif(mv_par02 == 1,.T.,.F.)

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Se ele criou o arquivo de prova ele deve gravar o rodape'    Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			RodaProva(nHdlPrv,nTotal)

			If !Empty(aCtbDia)
				cCodDiario := CtbaVerdia()
				For nX := 1 to Len(aCtbDia)
					aCtbDia[nX][3] := cCodDiario
				Next nX
			EndIf

			If cA100Incl(cArquivo,nHdlPrv,3,cLoteEst,lDigita,lAglutina,,,,,,aCtbDia)
				lCriaHeader := .T.
				nTotal      := 0 // Total dos lancamentos contabeis

				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Grava a data de Contabilizacao do campo D3_DTLANC         Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				For nX := 1 To Len(aRegSD3)
					SD3->(MsGoTo(aRegSD3[nX]))
					RecLock("SD3",.F.)
					Replace D3_DTLANC With dDataBase
					MsUnLock()
				Next nX
			EndIf

		EndIf

		//зддддддддддддддддддддддддддддддддддддд©
		//Ё 	Integracao com PIMS				Ё
		//юддддддддддддддддддддддддддддддддддддды
		If (SuperGetMV("MV_PIMSINT",.F.,.F.))
			PIMSCtOnline(aRegSD3)
		EndIf

	EndIf

Else

	ConOut("WARNING: DEADLOCK CONTROL IS ON")

EndIf

Return .T.

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA241LinOk Ё Autor Ё Rosane L. Chene       Ё Data Ё 05/10/94 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa que faz consistencias apos a digitacao da tela    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpO1 = Variavel Objeto	                                  Ё╠╠
╠╠Ё          Ё ExpN1 = Numero da variavel n referente ao aCols            Ё╠╠
╠╠Ё          Ё ExpL1 = Se .T. analisa se ha qtde disponivel em estoque    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A241LinOk(o,nx,lVldQtd)
Local lRet       := .T.
Local lSai       := .F.
Local cAlias     := "SD3"
Local nOrdSB8
Local nRecSB8
Local cLocal
Local i
Local nQtd       := 0
Local nSaldo     := 0
Local lBaixaEmp  := .F.
Local lBxEmpB8   := .F.
Local lQtdZero   := .F.
Local cTrt       := ""
Local lMov       := If(nx==Nil,.T.,.F.)
Local lEmpPrj    := .F.
Local nQtdPrj    := 0
Local nXZ        := 0
Local cProcName  := Upper( AllTrim( ProcName(1) ) )
Local lEmpPrev   := If(SuperGetMV("MV_QTDPREV")== "S",.T.,.F.)
Local lVldAlmo   := GetMV("MV_VLDALMO") == "S"
Local cSeek	   	 := ""
Local lGrade     := MaGrade()
Local lReferencia:= .F.
Local cPROJPMS   := ""
Local cTASKPMS   := ""
Local nPosCod	 := aScan(aHeader,{|x| AllTrim(x[2])=="D3_COD"})
Local nPosLocal  := aScan(aHeader,{|x| AllTrim(x[2])=="D3_LOCAL"})
Local nRevisao   := aScan(aHeader,{|x| AllTrim(x[2])=="D3_REVISAO"})
Local nLocaliz   := aScan(aHeader,{|x| AllTrim(x[2])=="D3_LOCALIZ"})
Local nPConta		:= GDFieldPos("D3_CONTA")
Local nPItemCta		:= GDFieldPos("D3_ITEMCTA")
Local nPCLVL		:= GDFieldPos("D3_CLVL")
Local lRevProd   := SuperGetMv("MV_REVPROD",.F.,.F.)
Local cRvSB5	 := ""
Local cBlqSG5	 := ""
Local cStatus    := ""
Local lMata340   := IsInCallStack("MATA340")
Local lWmsNew    := SuperGetMv("MV_WMSNEW",.F.,.F.)
Local lWmsSD3    := Iif(Type('lExecWms')=='L', lExecWms, .F.)
Local lPrdIntWms := .F.
Local cLocProc	:= GetMvNNR('MV_LOCPROC','99')

Default lVldQtd  := .F.

// Impede a inclusao de movimento com TM inexistente
If !lMata340 
	If SF5->F5_FILIAL+SF5->F5_CODIGO # xFilial("SF5")+cTm
		If !SF5->(MsSeek(xFilial("SF5")+cTm))
			Help(" ",1,"REGNOIS")
			Return .F.
		EndIf
	EndIf
EndIf

// Seta variavel n para valor de nx
If Valtype(nx) == "N"
	n:=nx
EndIf

lPrdIntWms := IntWMS(aCols[n,nPosCod])

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o produto est═ em revisao vigente e envia para armazem de CQ para ser validado pela engenharia    Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRevProd .And. !GDdeleted(n)

	cRvSB5 := Posicione("SB5",1,xFilial("SB5")+aCols[n,nPosCod],"B5_REVPROD")
	cBlqSG5:= Posicione("SG5",1,xFilial("SG5")+aCols[n,nPosCod]+aCols[n,nRevisao],"G5_MSBLQL")
	cStatus:= Posicione("SG5",1,xFilial("SG5")+aCols[n,nPosCod]+aCols[n,nRevisao],"G5_STATUS")
    If cRvSB5=="1"
	    If Empty(cRvSB5)
			Aviso(STR0014,STR0048,{STR0051})//"NЦo foi encontrado registro do produto selecionado na rotina de Complemento de Produto."
			lRet:= .F.
		ElseIf Empty(cBlqSG5)
			Aviso(STR0014,STR0049,{STR0051})//"O produto selecionado nЦo possui revisЦo em uso. Verifique o cadastro de RevisУes."
			lRet:= .F.
		ElseIf cBlqSG5=="1"
			Help(" ",1,"REGBLOQ")
			lRet:= .F.
		ElseIf cStatus=="2" .AND. cTM<"500"
			Aviso(STR0014,STR0050,{STR0051})//"Esta revisЦo nЦo pode ser alimentada pois estА inativa."
			lRet:= .F.
		EndIf
	EndIf
EndIf

If lRet .And. IntePMS() .And. FindFunction('VldMovPMS')
	lRet := VldMovPMS(aCols[n,nPosProj], aCols[n,nPosTarefa], cTm, aCols[n,nPosCod], aCols[n,nPosQuant], "MATA241") 
EndIf
//Validacao de permissao do armazem
If !lMata340 .And. lRet .And. !GDdeleted(n)
	lRet := MaAvalPerm(3,{aCols[n][nPosLocal],aCols[n][nPosCod]})
EndIf

//здддддддддддддюддддддддддддддддддддддддддд©
//Ё Verifica se o armazem estА bloqueado.   Ё
//юддддддюдддддддддддддддддддддддддддддддддды
If lRet .And. !ExistCpo("NNR",aCols[n][nPosLocal]) 
	lRet := .F.
EndIf

If lRet .And. !Empty(aCols[n,nPosOp]) .And. !("OS001" $ aCols[n,nPosOp])
	SC2->(DbSetOrder(1)) // FILIAL + NUM + ITEM + SEQUEN + ITEMGRD
	If SC2->(dbSeek(xFilial("SC2") + aCols[n,nPosOp])) .And. !Empty(SC2->C2_DATRF)
		Help(" ",1,"OPENCERR")
		lRet := .F.
	EndIf
EndIf

//-- Posiciona SB1 para validacoes
SB1->(MsSeek(xFilial("SB1")+aCols[n,nPosCod]))
//Bloqueia produto fantasma 
IIf(lRet,lRet := A241VLDFan(aCols[n,nPosCod]),lRet)

If lRet .And. !GDdeleted(n) .And. (lRet:=MaCheckCols(aHeader,aCols,n))
	For nxZ = 1 To Len(aHeader)
		If Empty(aCols[n][nxZ])
			If Trim(aHeader[nxZ][2]) == "D3_COD" .And. n == Len(aCols)
				Help(" ",1,"A11002")
				lRet := .F.
				lSai:=.T.
			EndIf
			If (Trim(aHeader[nxZ][2]) == "D3_COD" .Or.;
				(Trim(aHeader[nxZ][2]) == "D3_QUANT" .And. SF5->F5_QTDZERO # "1")) .And. !lSai
				Help(" ",1,"A241BRANC",,'"'+' '+aHeader[nxZ][1]+' '+'"',4,3)
				lRet := .F.
			EndIf
		EndIf
		If !lRet
			Exit
		EndIf
	Next

	If lRet .And. Inclui .And. lPrdIntWms .And. !lWmsSD3
		lRet := WmsAvalSD3("6")
	EndIf
	If lRet .And. Inclui
		If !lSai .And. !lMata340
			SB2->(DbSetOrder(1))
			If aCols[n][Len(aCols[n])]
				Return(lRet)
			EndIf
			If lGrade
				cVar:=aCols[n,nPosCod]
				lReferencia := MatGrdPrrf(@cVar)
			Endif

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Utiliza o parametro MV_VLDALMO para validar o local |
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If !lReferencia
				If lRet .And. lVldAlmo .And. !(SB2->(MsSeek(xFilial("SB2")+aCols[n,nPosCod]+aCols[n,nPosLocal])))
					Help("",1,"A241LOCAL",,aCols[n,nPosCod],2,23)
					lRet := .F.
				EndIf
			Endif
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Verifica se o produto est═ sendo inventariado.      Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If !lReferencia
				If BlqInvent(aCols[n,nPosCod],aCols[n,nPosLocal],,aCols[n,nPosLocali])
					Help(" ",1,"BLQINVENT",,aCols[n,nPosCod]+OemToAnsi(STR0017)+aCols[n,nPosLocal],1,11) //" Almox: "
					lRet:=.F.
				EndIf
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Analisa se o tipo do armazem permite a movimentacao |
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If lRet .And. AvalBlqLoc(aCols[n,nPosCod],aCols[n,nPosLocal],Nil,,,,,,,aCols[n,nPosOp])
					lRet:=.F.
				EndIf
			EndIf
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Se a Qtde estiver em branco ele deve dar uma mensagem  Ё
			//Ё de que este registro nao sera' gravado.                Ё
			//Ё Este campo nao pode ficar obrigatorio porque ele e'    Ё
			//Ё utilizado na Producao(Informacao da Perda de Producao),Ё
			//Ё onde nao deve ser obrigatorio.                         Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lRet .And. Empty(aCols[n][nPosQuant]) .And. !lMata340
				If SF5->(MsSeek(xFilial("SF5")+cTm))
					If SF5->F5_QTDZERO # "1"
						Help(" ",1,"MA240NAOGR")
						lRet := .F.
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//ЁValidacao para nao permitir que usuario informe os campos       |
						//|LOTE/SUB-LOTE quando quando a qtde. informada e' igual a zero.  |
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					ElseIf ( !Empty(nPosLotCTL).And.!Empty(aCols[n,nPosLotCTL]) .Or. ;
						!Empty(nPosLote).And.!Empty(aCols[n,nPosLote]) )
						Help(" ",1,"A240QLZERO")
						lRet := .F.
					EndIf
				Else
					Help(" ",1,"MA240NAOGR")
					lRet := .F.
				EndIf
			EndIf

			dbSelectArea("SF5")
			If !lMata340 .And. MsSeek(xFilial("SF5")+cTM)
				lQtdZero:=Empty(aCols[n][nPosQuant]) .And. SF5->F5_QTDZERO == "1"

				cPROJPMS := iIf(Empty(nPosProj), CriaVar("D3_PROJPMS"), aCols[n,nPosProj])
				cTASKPMS := iIf(Empty(nPosTarefa), CriaVar("D3_TASKPMS"), aCols[n,nPosTarefa])

				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Caso esteja baixando empenho verifica o saldo empenhadoЁ
				//Ё a fim de evitar divergencia entre o movimento no SD3 e Ё
				//Ё os movimentos no SD5 e SDB.                            Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			  If !lReferencia
					lEmpPrj  := ( !Empty(cPROJPMS) .And. ;
								  !Empty(cTASKPMS) )
					lBaixaEmp:=SF5->F5_ATUEMP == "S" .And. ( !Empty(If(Empty(nPosOp),CriaVar("D3_OP"),aCols[n,nPosOP])) .OR. lEmpPrj)
					cTrt     :=If(ValType(nPosTRT)=="N" .And. nPosTRT > 0,aCols[n,nPosTrt],CriaVar("D3_TRT"))
					lRet:=lRet .And. A240AvalEm(@lBaixaEmp,aCols[n,nPosCod],aCols[n,nPosLocal],aCols[n,nPosQuant],If(Empty(nPosLotCTL),CriaVar("D3_LOTECTL"),aCols[n,nPosLotCTL]),If(Empty(nPosLote),CriaVar("D3_NUMLOTE"),aCols[n,nPosLote]),If(Empty(nPosLocali),CriaVar("D3_LOCALIZ"),aCols[n,nPosLocali]),If(Empty(nPosNumSer),CriaVar("D3_NUMSERI"),aCols[n,nPosNumSer]),If(Empty(nPosOP),CriaVar("D3_OP"),aCols[n,nPosOp]),cTRT,.T.,cTM<="500",@lBxEmpB8,If(nPosPotenc>0,aCols[n,nPosPotenc],), cPROJPMS, cTASKPMS)
					If ValType(nPosTRT)=="N" .And. nPosTRT > 0 .and. lRet .and. lEmpPrj
						aCols[n,nPosTrt] := cTrt
					EndIf
				Endif
			EndIf

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Validacao para nao permitir que um produto de apropriacao indireta     |
			//| tenha o numero da ordem de producao preenchido.                        |
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lRet .And. !lReferencia
				If (SB1->B1_APROPRI == 'I') .And. (SF5->F5_APROPR != "S") .And. If(Empty(nPosOP),.F.,!Empty(aCols[n,nPosOP]))
					Help("",1,"MA241IND")
					lRet := .F.
				EndIf
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Validacao para nao permitir que um produto de apropriacao indireta     |
				//| tenha movimentacao valorizada (armazem de processo).				   |
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If lRet .And. (SB1->B1_APROPRI == 'I') .And. (SF5->F5_APROPR != "S") .And. (SF5->F5_VAL == "S")
					Help("",1,"A240VALIN")
					lRet := .F.
				EndIf
			Endif

			nQtdPrj := If(lBaixaEmp .And. lEmpPrj, aCols[n,nPosQuant], 0)

			If lRet.and.!lReferencia
				//--> Verifica se o saldo do armazem esta liberado
				lRet := SldBlqSB2(aCols[n,nPosCod],aCols[n,nPosLocal])
			EndIf
			If lRet .And. (GETMV("MV_ESTNEG") != "S" .Or. Localiza(aCols[n,nPosCod],.T.) .Or. Rastro(aCols[n,nPosCod])) .And. !IsProdMod(aCols[n][nPosCod]) .And. !lReferencia
				If cTM > "500"
					dbSelectArea("SB2")
					MsSeek(xFilial("SB2")+aCols[n][nPosCod]+aCols[n][nPosLocal])
					If !lQtdZero .And. QtdComp(aCols[n][nPosQuant]) > QtdComp(SaldoMov(Nil,!lBaixaEmp,Nil,mv_par03==1,If(lBaixaEmp,aCols[n,nPosQuant],Nil),nQtdPrj,Nil, If(Type('dA241Data')=="D",dA241Data,dDataBase),!l185)) + If(l185 .And. GetMv("MV_TPSALDO")=="S",QtdComp(aCols[n][nPosQuant]),0)
						cHelp:=OemToAnsi(STR0016)+AllTrim(B2_COD)+OemToAnsi(STR0017)+B2_LOCAL+OemToAnsi(STR0018)+ALLTRIM(Transform(SaldoMov(Nil,!lBaixaEmp,Nil,mv_par03==1,If(lBaixaEmp,aCols[n,nPosQuant],Nil),nQtdPrj,Nil,If(Type('dA241Data')=="D",dA241Data,dDataBase)),PesqPictQt("B2_QATU",14)))	// Produto Local Saldo Disp.
						Help(" ",1,"MA240NEGAT",,cHelp,4,1)
						lRet := .F.
					EndIf
					If Localiza(aCols[n,nPosCod],.T.)
						// Verifica campos necessarios p/ Localizacao
						If Empty(nPosLocali)
							UserException("D3_LOCALIZ"+OemToAnsi(STR0021))
						EndIf
						If !(lPrdIntWms .And. !Empty(aCols[n,nPosServic]))
							If Empty(aCols[n,nPosLocali]) .And. Empty(aCols[n,nPosNumSer]) .And. !(SF5->F5_QTDZERO=="1" .And. QtdComp(aCols[n,nPosQuant]) == QtdComp(0))
								Help(" ",1,"LOCALIZOBR")
								lRet:=.F.
							EndIf
						EndIf
						If lRet .And. (!Empty(aCols[n,nPosLocali]) .Or. !Empty(aCols[n,nPosNumSer]))
						 	If !(lWmsNew .And. lPrdIntWms)
						 		/*
									Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
									NecessАrio para o projeto de integraГЦo TOTVS MES.
								*/
								If QtdComp(SaldoSBF(aCols[n,nPosLocal],aCols[n,nPosLocali],aCols[n,nPosCod],aCols[n,nPosNumSer],aCols[n,nPosLotCTL],aCols[n,nPosLote],lBxEmpB8,,,aCols[n,nPosoP])) < QtdComp(aCols[n,nPosQuant])
									Help(" ",1,"SALDOLOCLZ")
									lRet:=.F.
								EndIf
							Else
								If QtdComp(WmsSldD14(aCols[n,nPosLocal],aCols[n,nPosLocali],aCols[n,nPosCod],aCols[n,nPosNumSer],aCols[n,nPosLotCTL],aCols[n,nPosLote],lBxEmpB8)) < QtdComp(aCols[n,nPosQuant])
									Help(" ",1,"SALDOLOCLZ")
									lRet:=.F.
								EndIf
							EndIf
						EndIf
					EndIf
				Else
					dbSelectArea("SB1")
					MsSeek(xFilial("SB1")+aCols[n,nPosCod])
					If (B1_APROPRI == "I" .And. Empty(If(Empty(nPosOP),CriaVar("D3_OP"),aCols[n,nPosOp]))) .And. SF5->F5_APROPR != "S"
						cApropri := "3"
					Else
						cApropri := "0"
					EndIf
					If cApropri == "3"
						dbSelectArea("SB2")
						If MsSeek(xFilial("SB2")+aCols[n,nPosCod] + cLocProc)
							If cApropri == "3" .And. (QtdComp(SaldoMov(Nil,!lBaixaEmp,Nil,mv_par03==1,Nil,Nil,Nil,If(Type('dA241Data')=="D",dA241Data,dDataBase))) < QtdComp(aCols[n,nPosQuant]))
								Help(" ",1,"MA240PRNEG")
								lRet:=.F.
							EndIf
						EndIf
					EndIf
				EndIf
			EndIf

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Se usar Rastreabilidade e o numero do Lote nao for     Ё
			//Ё preenchido o registro nao sera gravado tambem.         Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lRet .And. Rastro(aCols[n][nPosCod]) .And. !lQtdZero .And. !lReferencia
				// Verifica campos necessarios p/ Rastreabilidade
				If Empty(nPosLotCTL)
					UserException("D3_LOTECTL"+OemToAnsi(STR0021))
				EndIf
				If !IsProdMod(aCols[n][nPosCod])
					cLocal := aCols[n][nPosLocal]
					If  cTM <= "500" .And. SF5->F5_APROPR != "S" .And. SB1->B1_APROPRI == "I"
						cLocal := cLocProc
					EndIf
					If cTM > "500" .Or. (SF5->F5_APROPR != "S" .And. SB1->B1_APROPRI == "I")
						If Empty(If(Rastro(aCols[n][nPosCod],"S"),aCols[n][nPosLote],aCols[n][nPosLotCTL]))
							Help(" ",1,"A240NUMLOT")
							lRet := .F.
						EndIf
						If lRet
							dbSelectArea("SB8")
							nOrdSB8 := IndexOrd()
							nRecSB8 := RecNo()
							If Rastro(aCols[n][nPosCod],"S")
								dbSetOrder(2)
								If dbSeek(xFilial("SB8")+aCols[n][nPosLote]+aCols[n][nPosLotCTL]+aCols[n][nPosCod]+cLocal)
									nQtd:=0
									For i:=If(ValType(nx)=="N",nx,1) to Len(aCols)
										If aCols[i][nPosLotCTL]+aCols[i][nPosLote]+aCols[i][nPosCod] == aCols[n][nPosLotCTL]+aCols[n][nPosLote]+aCols[n][nPosCod] .And. !aCols[i][Len(aCols[i])]
											If aCols[i, nPosLocal] == cLocal
												nQtd+=aCols[i][nPosQuant]
											EndIf
										EndIf
									Next i
									If QtdComp(SB8Saldo(lBxEmpB8,nil,nil,nil,nil,lEmpPrev,nil,dA241Data)) < QtdComp(nQtd)
										cHelp:=OemToAnsi(STR0016)+AllTrim(B8_PRODUTO)+OemToAnsi(STR0017)+B8_LOCAL+OemToAnsi(STR0018)+ALLTRIM(Transform(SB8Saldo(nil,nil,nil,nil,nil,lEmpPrev,nil,dA241Data),PesqPictQt("B8_SALDO", 14)))+OemToAnsi(STR0019)+aCols[n][nPosLotCTL] // Produto#Local#Saldo Disp.#Lote
										Help(" ",1,"A240LOTENE",,cHelp,4,1)
										lRet := .F.
									EndIf
								Else
									Help(" ",1,"A240LOTERR")
									lRet := .F.
								EndIf
							Else
								dbSetOrder(3)
								cSeek:=xFilial("SB8")+aCols[n][nPosCod]+cLocal+aCols[n][nPosLotCTL]
								If dbSeek(cSeek)
									nQtd:=0
									For i:=If(ValType(nx)=="N",nx,1) to Len(aCols)
										If aCols[i][nPosLotCTL]+aCols[i][nPosCod] == aCols[n][nPosLotCTL]+aCols[n][nPosCod] .And. !aCols[i][Len(aCols[i])]
											If aCols[i, nPosLocal] == cLocal .Or. (SF5->F5_APROPR != "S" .And. SB1->B1_APROPRI == "I")
												nQtd+=aCols[i][nPosQuant]
											EndIf
										EndIf
									Next i
									nSaldo:=SaldoLote(aCols[n][nPosCod],cLocal,aCols[n][nPosLotCTL],NIL,lBxEmpB8,.T.,nil,dA241Data)
									If QtdComp(nSaldo) < QtdComp(nQtd)
										cHelp:=OemToAnsi(STR0016)+AllTrim(aCols[n][nPosCod])+OemToAnsi(STR0017)+cLocal+OemToAnsi(STR0018)+ALLTRIM(Transform(nSaldo,PesqPictQt("B8_SALDO", 14)))+OemToAnsi(STR0019)+aCols[n][nPosLotCTL] // Produto#Local#Saldo Disp.#Lote
										Help(" ",1,"A240LOTENE",,cHelp,4,1)
										lRet := .F.
									EndIf
								Else
									Help(" ",1,"A240LOTERR")
									lRet := .F.
								EndIf
							EndIf
							dbSetOrder(nOrdSB8)
							MsGoto(nRecSB8)
						EndIf
					Else
						If !Empty(If(Rastro(aCols[n][nPosCod],"S"),aCols[n][nPosLote],aCols[n][nPosLotCTL]))
							dbSelectArea("SB8")
							nOrdSB8 := IndexOrd()
							nRecSB8 := RecNo()
							If Rastro(aCols[n][nPosCod],"S")
								dbSetOrder(2)
								cSeek:=xFilial("SB8")+aCols[n][nPosLote]+aCols[n][nPosLotCTL]+aCols[n][nPosCod]+cLocal
							Else
								dbSetOrder(3)
								cSeek:=xFilial("SB8")+aCols[n][nPosCod]+cLocal+aCols[n][nPosLotCTL]
							EndIf
							If dbSeek(cSeek)
								If Rastro(aCols[n][nPosCod],"S")
									nQtd:=0
									For i:=If(ValType(nx)=="N",nx,1) to Len(aCols)
										If aCols[i][nPosLotCTL]+aCols[i][nPosLote]+aCols[i][nPosCod] == aCols[n][nPosLotCTL]+aCols[n][nPosLote]+aCols[n][nPosCod] .And. !aCols[i][Len(aCols[i])]
											If aCols[i, nPosLocal] == cLocal
												nQtd+=aCols[i][nPosQuant]
											EndIf
										EndIf
									Next i
									If QtdComp(SB8SALDO(,,,,,lEmpPrev,,,.T.) + nQtd) > QtdComp(SB8->B8_QTDORI)
										Help(" ",1,"A240LOTQTD")
										lRet := .F.
									EndIf
								EndIf
							EndIf
							dbSetOrder(nOrdSB8)
							MsGoto(nRecSB8)
						EndIf
					EndIf
				EndIf
			EndIf
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Se a movimentacao for valorizado e o custo nao for     Ё
			//Ё preenchido o registro nao sera gravado tambem.         Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lRet .And. SF5->F5_VAL=="S" .And. aCols[n][nPosCusto1] = 0
				Help(" ",1,"A240VALSD3")
				lRet := .F.
			EndIf
		Else
			lRet := .T.
		EndIf

	EndIf
	If !Empty(If(Empty(nPosOp),CriaVar("D3_OP"),aCols[n,nPosOp])) .And. lRet .And. lMov .And. !lReferencia
		If ( l241Auto )
			lRet:= .T.
		Else
			lRet:=A240Alert(aCols[n,nPosCod],If(Empty(nPosOP),CriaVar("D3_OP"),aCols[n,nPosOP]))
		EndIf
	EndIf
	If lRet
		lRet:=A240Data()
	EndIf
	If lUsaSegUm .And. lRet
		A240SegUm()
	EndIf
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Validacao para nao permitir que o usuario restaure uma linha    |
	//Ё deletada sem antes verificar o saldo disponivel para o produto. Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If lRet
		If lVldQtd .And. SuperGetMV("MV_ESTNEG") == "N"
			M->D3_QUANT	:= aCols[n][nPosQuant]
			lRet:= A240Quant()
		EndIf
	EndIf

	If lRet
		If (AvalMovSelo(aCols[n][nPosCod],cTM))
			Help(" ",1,"SELOFSINC")
			lRet:=.F.
		EndIf
	EndIf

	dbSelectarea(cAlias)
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Validacao do Custo FIFO On-Line                     |
//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. IsFifoOnLine() .And. cTM > "500"
	If SaldoSBD("SD3",aCols[n,nPosCod],aCols[n,nPosLocal],dDataBase,.F.)[1] < aCols[n][nPosQuant]
		Help(" ",1,"DIVFIFO2")
		lRet := .F.
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de Entrada MT241TOK                                     Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. ExistBlock("MT241LOK")
	lRet := ExecBlock("MT241LOK",.F.,.F.,{n})
	If ValType(lRet) # "L"
		lRet:=.T.
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Executa lancamento de validacao, quando a integracao com PCO estah ligada Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. !GDdeleted(n)
	If cProcName # "A241GRAVA" .And. cProcName # "A241TUDOOK"
		If cTM <= "500"		// Entrada
			lRet := PCOVldLan("000151","01","MATA240",.T.)
		Else				// Saida
			lRet := PCOVldLan("000151","02","MATA240",.T.)
		EndIf
	EndIf
EndIf

//Consiste amarraГЦo da Conta ContАbil X Centro de Custo
If lRet .And. nPConta <> 0 .And. nPItemCta <> 0 .And. nPClVl <> 0
	If !CtbAmarra(aCols[n,nPConta],cCC,aCols[n,nPItemCTA],aCols[n,nPCLVL])
		lRet:=.F.
	EndIf
EndIf

Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё A241Data Ё Autor Ё Rodrigo de A. SartorioЁ Data Ё 31/10/96 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Valida a data em relacao a data do Ultimo fechamento       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA241                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A241Data()
Local dDataFec := MVUlmes()
Local lRet:=.T.,lBackRet:=.T.
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica a existencia do ponto de Entrada MTA241I                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local lMta241I := (ExistBlock("MTA241I"))
If dDataFec >= &(ReadVar())
	Help ( " ", 1, "FECHTO" )
	lRet:=.F.
EndIf
If lRet .And. lMta241I
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Executa Ponto de Entrada                                             Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	lBackRet:=lRet
	lRet:=ExecBlock("MTA241I",.F.,.F.)
	If ValType(lRet) != "L"
		lRet:=lBackRet
	EndIf
EndIf
Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁMTA241PERGЁ Autor Ё Rodrigo de A. SartorioЁ Data Ё 29/11/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Chamada da funcao PERGUNTE                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA241                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function MTA241PERG()
Pergunte("MTA240",.T.)
Return Nil

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё ShowF4   Ё Autor Ё Fernando Joly Siquini Ё Data Ё 13/04/99 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Chamada da funcao F4                                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA241                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Static Function ShowF4(a,b,c)
If AllTrim(Upper(ReadVar())) $ 'M->D3_CODЗM->D3_QUANT'
	MaViewSB2(Eval(bCols,n,nPosCod))
ElseIf AllTrim(Upper(ReadVar())) $ 'M->D3_NUMLOTEЗM->D3_LOTECTL'
	nPos241Qtd := nPosQuant
	if nPosLocali > 0
		F4Lote(,,,   'A241',Eval(bCols,n,nPosCod), Eval(bCols,n,nPosLocal),NIL, Eval(bCols,n,nPosLocali),,Eval(bCols,n,nPosOp))
	Else
		F4Lote(,,,   'A241',Eval(bCols,n,nPosCod), Eval(bCols,n,nPosLocal),NIL, NIL)
	EndIf
ElseIf AllTrim(Upper(ReadVar())) == 'M->D3_LOCALIZ' .Or. AllTrim(Upper(ReadVar())) == 'M->D3_NUMSERI'
	// Verifica campos necessarios p/ Localizacao
	If Empty(nPosLocali)
		UserException("D3_LOCALIZ"+OemToAnsi(STR0021))
	EndIf
	nPos241Loc := nPosLocali
	F4Localiz(,,,   'A241', Eval(bCols,n,nPosCod), Eval(bCols,n,nPosLocal), Eval(bCols,n,nPosQuant), ReadVar() )
EndIf
Return Nil

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠Ё Fun┤┘o   ЁMTA241OK  Ё Autor ЁRodrigo de A. Sartorio Ё Data Ё 04/12/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠Ё Descri┤┘oЁ Confirmacao antes de executar o estorno.                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MTA241OK                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function MTA241OK()
Return (MsgYesNo(OemToAnsi(STR0013),OemToAnsi(STR0014))) //"Confirma o estorno da movimenta┤└o ?"###"Aten┤└o"

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠Ё Fun┤┘o   ЁMT241ESTOKЁ Autor ЁRodrigo de A. Sartorio Ё Data Ё 04/12/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠Ё Descri┤┘oЁ Confirmacao antes de executar o estorno.                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MTA241OK                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function MTA241ESTOK()
Local lRet := .T.
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Este ponto de entrada permite validar dados especificosЁ
//Ё no usuario no momento do Estorno.                      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. ExistBlock('MT241EXT')
	lRet := ExecBlock('MT241EXT', .F., .F.)
	If ValType(lRet) # "L"
		lRet := .T.
	EndIf
EndIf

If lRet .And. (SuperGetMV("MV_PIMSINT",.F.,.F.) .And. !Empty(SD3->D3_NRBPIMS)) .And. !l241Auto
 	Alert(STR0045) //"A integraГЦo PROTHEUS x PIMS estА habilitada, o estorno desse movimento deverА ser feito pelo PIMS."
	lRet:= .F.
EndIf

If lRet .And. !l241Auto
	lRet := MTA241OK()
EndIf

If !MaAvalPerm(2,{SD3->D3_TM})
	lRet := .F.
Endif

Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA241ValidCB ЁAutorЁ Alex-Sandro Val═rio   Ё Data Ё 07/04/98 Ё╠╠
╠╠цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Cria o Browser para codigo de barras                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe e Ё A241ValidCB                                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Codigo de Barras                                           Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A241ValidCB()
Local nOrdem
Local nCodBar   := 1
Local nOp       := 2
Local nCod      := 3
Local nDesc     := 4
Local nQtde     := 5
Local nCol
Local uVar
Local nAt
Local lOk       := .F.
Local cBuffer
nAt     := N
nColuna := oget1:oBrowse:colpos
cBuffer := &(ReadVar())
If nColuna == nCodBar
	nOrdem:=SB1->(indexOrd())
	If ! Empty(cBuffer)
		SB1->(DbSetOrder(5))
		If SB1->(Dbseek(xFilial("SB1")+cBuffer))
			aCols[nAt,nCodBar ] := SB1->B1_CODBAR
			aCols[nAt,nCod    ] := SB1->B1_COD
			aCols[nAt,nDesc   ] := SB1->B1_DESC
			aCols[nAt,nQtde   ] := 1
			lok := .T.
		Else
			Help(" ",1,"A140HB")
			lOk := .F.
		EndIf
		SB1->(DbSetOrder(nOrdem))
	EndIf
Elseif  nColuna == nOP
	If ExistCpo("SC2")
		aCols[nAt,nOP ] := cBuffer
		lOk := .T.
	Else
		lOk := .F.
	EndIf
ElseIf  nColuna == nCod
	If Empty(cBuffer)
		ConPad1(,,,"SB1")
		&(ReadVar()) := SB1->B1_CODBAR
	EndIf
	nOrdem:=SB1->(indexOrd())
	SB1->(DbSetOrder(1))
	If SB1->(MsSeek(xFilial("SB1")+cBuffer))
		aCols[nAt,nCodBar ] := SB1->B1_CODBAR
		aCols[nAt,nCod    ] := SB1->B1_COD
		aCols[nAt,nDesc   ] := SB1->B1_DESC
		aCols[nAt,nQtde   ] := 1
		lOk := .T.
	Else
		Help(" ",1,"A140HB")
		lOk := .F.
	EndIf
	SB1->(DbSetOrder(nOrdem))
ElseIf nColuna == nDesc
	&(ReadVar()):=	aCols[nAt,nDesc]
	lOK := .T.
EndIf

If ! Empty(_aCtlHeader[nColuna,2]) .and. lOk
		_nProxCol := val(_aCtlHeader[nColuna,2])
		oget1:oBrowse:bEditCol :={ || oget1:oBrowse:nColPos := _nProxCol}
EndIf
Return lOK

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA241BLinOkЁ Autor Ё Claudinei M. Benzi    Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Critica se a linha digitada esta' Ok                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Objeto a ser verificado.                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MatA241                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A241BLinOk(o)
Local lRet := .T., lDeleted := .F.
// Verifica se linha do acols foi preenchida
If ValType(aCols[n,Len(aCols[n])]) == "L"  /// Verifico se posso Deletar
	lDeleted := aCols[n,Len(aCols[n])]      /// Se esta Deletado
EndIf
Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA241BTudOkЁ Autor Ё Claudinei M. Benzi    Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Critica se a nota toda esta' Ok                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Objeto a ser verificado.                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MatA241                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A241BTudOk(o)           // codigo de barras

Return .T.

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA241Check Ё Autor Ё Marcelo Iuspa         Ё Data Ё 25/07/00 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Critica se a digitacao continua ok apos confirmacao        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MatA241                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A241Check()
Local lRet        := .T.
Local lRetOk      := .T.
Local nOrdSB8
Local nRecSB8
Local cLocal
Local i,nQtd      := 0
Local nLin
Local nSaldo      := 0
Local lBaixaEmp   := .F.
Local lBxEmpB8    := .F.
Local lQtdZero    := .F.
Local cTrt        := ""
Local lEmpPrj     := .F.
Local nQtdPrj     := 0
Local lEmpPrev    := If(SuperGetMV("MV_QTDPREV")== "S",.T.,.F.)
Local cSeek	   	  := ""
Local lReferencia := .F.
Local lGrade      := MaGrade()
Local cPROJPMS   := ""
Local cTASKPMS   := ""
Local cPicB2QATU := PesqPictQt("B2_QATU",14)
Local cPicB8Sld  := PesqPictQt("B8_SALDO", 14)
Local lWmsNew    := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local lWmsSD3    := Iif(Type('lExecWms')=='L', lExecWms, .F.)
Local lPrdIntWms := .F.
Local cLocProc	:= GetMvNNR('MV_LOCPROC','99')

For nLin := 1 to Len(aCols)
	If aCols[nLin, Len(aCols[nLin])]
		Loop
	EndIf
	If lGrade
		lReferencia := MatGrdPrrf(aCols[nlin,nPosCod])
	EndIf
	lRet := .T.
	lPrdIntWms := IntWMS(aCols[n][nPosCod])
	If lRet .And. Inclui .And. !lReferencia
		dbSelectArea("SF5")
		If MsSeek(xFilial("SF5")+cTM)
			lQtdZero:=Empty(aCols[nLin,nPosQuant]) .And. SF5->F5_QTDZERO == "1"

			cPROJPMS := iIf(Empty(nPosProj), CriaVar("D3_PROJPMS"), aCols[nLin,nPosProj])
			cTASKPMS := iIf(Empty(nPosTarefa), CriaVar("D3_TASKPMS"), aCols[nLin,nPosTarefa])

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Caso esteja baixando empenho verifica o saldo empenhadoЁ
			//Ё a fim de evitar divergencia entre o movimento no SD3 e Ё
			//Ё os movimentos no SD5 e SDB.                            Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			lEmpPrj  := ( !Empty(cPROJPMS) .And. ;
						  !Empty(cTASKPMS) )
			lBaixaEmp:=SF5->F5_ATUEMP == "S" .And. ( !Empty(If(Empty(nPosOp),CriaVar("D3_OP"),aCols[nLin,nPosOP])) .OR. lEmpPrj)
			cTrt:=If(ValType(nPosTRT)=="N" .And. nPosTRT > 0,aCols[nLin,nPosTrt],CriaVar("D3_TRT"))
			lRet:=lRet .And. A240AvalEm(@lBaixaEmp,aCols[nLin,nPosCod],aCols[nLin,nPosLocal],aCols[nLin,nPosQuant],If(nPosLotCTL>0,aCols[nLin,nPosLotCTL],CriaVar("D3_LOTECTL")),If(nPosLote>0,aCols[nLin,nPosLote],CriaVar("D3_NUMLOTE")), If(nPosLocali>0,aCols[nLin,nPosLocali],CriaVar("D3_LOCALIZ")), If(nPosNumSer>0,aCols[nLin,nPosNumSer],CriaVar("D3_NUMSERI")), If(Empty(nPosOp),CriaVar("D3_OP"),aCols[nLin,nPosOp]),cTRT,.F.,cTM<="500",@lBxEmpB8,If(nPosPotenc>0,aCols[nLin,nPosPotenc],), cPROJPMS, cTASKPMS)
			If ValType(nPosTRT)=="N" .And. nPosTRT > 0 .and. lRet .and. lEmpPrj
				aCols[nLin,nPosTrt] := cTrt
			EndIf
		EndIf

		nQtdPrj := If(lBaixaEmp .And. lEmpPrj, aCols[nLin,nPosQuant], 0)

		If lRet
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Alerta ao usuario se a devolucao for maior que as      Ё
			//Ё requisicoes efetuadas para essa OP                     Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If cTm <= "500" .And. !Empty(If(Empty(nPosOP),CriaVar("D3_OP"),aCols[nLin,nPosOP])) .And. !IsProdCoPR(aCols[nLin,nPosCod],aCols[nLin,nPosOP],aCols[nLin,nPosTRT]) //-- Desconsidera produtos coproduzidos (item negativo)
				lRet:=A240VlDeOP(aCols[nLin,nPosCod],aCols[nLin,nPosLocal],If(Empty(nPosOP),CriaVar("D3_OP"),aCols[nLin,nPosOP]),aCols[nLin,nPosQuant],aCols[nLin,nPosQtSegum],aCols[nLin,nPosLotCTL],aCols[nLin,nPosLote])
			EndIf
		EndIf
		If lRet .and. (GETMV("MV_ESTNEG") != "S" .Or. Localiza(aCols[nLin,nPosCod],.T.) .Or. Rastro(aCols[nLin,nPosCod])) .And. !IsProdMod(aCols[nLin][nPosCod])
			If cTM > "500"
				dbSelectArea("SB2")
				MsSeek(xFilial("SB2")+aCols[nLin][nPosCod]+aCols[nLin][nPosLocal])
				If !lQtdZero .And. QtdComp(aCols[nLin][nPosQuant]) > QtdComp(SaldoMov(Nil,!lBaixaEmp,Nil,mv_par03==1,If(lBaixaEmp,aCols[nLin,nPosQuant],Nil),nQtdPrj,Nil,If(Type('dA241Data')=="D",dA241Data,dDataBase),!l185)) + If(l185 .And. GetMv("MV_TPSALDO")=="S",QtdComp(aCols[n][nPosQuant]),0)
					cHelp:=OemToAnsi(STR0016)+AllTrim(B2_COD)+OemToAnsi(STR0017)+B2_LOCAL+OemToAnsi(STR0018)+ALLTRIM(Transform(SaldoMov(Nil,!lBaixaEmp,Nil,mv_par03==1,If(lBaixaEmp,aCols[nLin,nPosQuant],Nil),nQtdPrj,Nil,If(Type('dA241Data')=="D",dA241Data,dDataBase)),cPicB2QATU))	// Produto Local Saldo Disp.
					Help(" ",1,"MA240NEGAT",,cHelp,4,1)
					lRet := .F.
				EndIf
				If Localiza(aCols[nLin,nPosCod],.T.)
					// Verifica campos necessarios p/ Localizacao
					If Empty(nPosLocali)
						UserException("D3_LOCALIZ"+OemToAnsi(STR0021))
					EndIf
					If !(lPrdIntWms .And. !Empty(aCols[nLin,nPosServic]))
						If Empty(aCols[nLin,nPosLocali]) .And. Empty(aCols[nLin,nPosNumSer]) .And. !(SF5->F5_QTDZERO=="1" .And. QtdComp(aCols[nLin][nPosQuant]) == QtdComp(0))
							Help(" ",1,"LOCALIZOBR")
							lRet:=.F.
						EndIf 
					EndIf
					If lRet .And. (!Empty(aCols[nLin,nPosLocali]) .Or. !Empty(aCols[nLin,nPosNumSer]))
						If !(lWmsNew .And. lPrdIntWms)
							/*
								Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
								NecessАrio para o projeto de integraГЦo TOTVS MES.
							*/
							If QtdComp(SaldoSBF(aCols[nLin,nPosLocal],aCols[nLin,nPosLocali],aCols[nLin,nPosCod],aCols[nLin,nPosNumSer],aCols[nLin,nPosLotCTL],aCols[nLin,nPosLote],lBxEmpB8,,,aCols[nLin,nPosOp])) < QtdComp(aCols[nLin,nPosQuant])
								cHelp:=OemToAnsi(STR0016)+AllTrim(aCols[nLin][nPosCod])+OemToAnsi(STR0017)+AllTrim(aCols[nLin,nPosCod])+OemToAnsi(STR0019)+aCols[nLin,nPosLocali]
								Help(" ",1,"SALDOLOCLZ",, cHelp,5,1)
								lRet:=.F.
							EndIf
						Else
							If QtdComp(WmsSldD14(aCols[nLin,nPosLocal],aCols[nLin,nPosLocali],aCols[nLin,nPosCod],aCols[nLin,nPosNumSer],aCols[nLin,nPosLotCTL],aCols[nLin,nPosLote],lBxEmpB8)) < QtdComp(aCols[nLin,nPosQuant])
								cHelp:=OemToAnsi(STR0016)+AllTrim(aCols[nLin][nPosCod])+OemToAnsi(STR0017)+AllTrim(aCols[nLin,nPosCod])+OemToAnsi(STR0019)+aCols[nLin,nPosLocali]
								Help(" ",1,"SALDOLOCLZ",, cHelp,5,1)
								lRet:=.F.
							EndIf
						EndIf
					EndIf
				EndIf
			Else
				dbSelectArea("SF5")
				MsSeek(xFilial("SF5")+cTM)
				dbSelectArea("SB1")
				MsSeek(xFilial("SB1")+aCols[nLin,nPosCod])
				If (B1_APROPRI == "I" .And. Empty(If(Empty(nPosOp),CriaVar("D3_OP"),aCols[nLin,nPosOp]))) .And. SF5->F5_APROPR != "S"
					cApropri := "3"
				Else
					cApropri := "0"
				EndIf
				If cApropri == "3"
					dbSelectArea("SB2")
					If MsSeek(xFilial("SB2")+aCols[nLin,nPosCod] + cLocProc)
						If cApropri == "3" .And. (QtdComp(SaldoMov(Nil,!lBaixaEmp,Nil,mv_par03==1,Nil,Nil,Nil,If(Type('dA241Data')=="D",dA241Data,dDataBase))) < QtdComp(aCols[nLin,nPosQuant]))
							Help(" ",1,"MA240PRNEG",,AllTrim(B2_COD) + "-"+B2_LOCAL,4,1)
							lRet:=.F.
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf

		If lRet .And. Rastro(aCols[nLin][nPosCod]) .And. !lQtdZero
			// Verifica campos necessarios p/ Rastreabilidade
			If Empty(nPosLotCTL)
				UserException("D3_LOTECTL"+OemToAnsi(STR0021))
			EndIf
			If !IsProdMod(aCols[nLin][nPosCod])
				cLocal := aCols[nLin][nPosLocal]
				If  cTM <= "500" .and. SF5->F5_APROPR != "S" .And. SB1->B1_APROPRI == "I"
					cLocal := cLocProc
				EndIf
				If  cTM > "500" .And. !(lPrdIntWms .And. !Empty(aCols[nLin,nPosServic]))
					dbSelectArea("SB8")
					nOrdSB8 := IndexOrd()
					nRecSB8 := RecNo()
					If Rastro(aCols[nLin][nPosCod],"S")
						dbSetOrder(2)
						If dbSeek(xFilial("SB8")+aCols[nLin][nPosLote]+aCols[nLin][nPosLotCTL]+aCols[nLin][nPosCod]+cLocal)
							nQtd:=0
							For i:=1 to Len(aCols)
								If aCols[i][nPosLotCTL]+aCols[i][nPosLote]+aCols[i][nPosCod] == aCols[nLin][nPosLotCTL]+aCols[nLin][nPosLote]+aCols[nLin][nPosCod] .And. !aCols[i][Len(aCols[i])]
									If aCols[i, nPosLocal] == cLocal
										nQtd+=aCols[i][nPosQuant]
									EndIf
								EndIf
							Next i
							If QtdComp(SB8Saldo(lBxEmpB8,nil,nil,nil,nil,lEmpPrev,nil,dA241Data)) < QtdComp(nQtd)
								cHelp:=OemToAnsi(STR0016)+AllTrim(B8_PRODUTO)+OemToAnsi(STR0017)+B8_LOCAL+OemToAnsi(STR0018)+ALLTRIM(Transform(SB8Saldo(nil,nil,nil,nil,nil,lEmpPrev,nil,dA241Data),cPicB8Sld))+OemToAnsi(STR0019)+aCols[nLin][nPosLotCTL] // Produto#Local#Saldo Disp.#Lote
								Help(" ",1,"A240LOTENE",,cHelp,4,1)
								lRet := .F.
							EndIf
						Else
							cHelp:=OemToAnsi(STR0016)+AllTrim(aCols[nLin][nPosCod])+OemToAnsi(STR0017)+aCols[nLin][nPosLocal]+OemToAnsi(STR0019)+aCols[nLin][nPosLotCTL] // Produto#Local#Lote
							Help(" ",1,"A240LOTERR",, cHelp, 5, 1)
							lRet := .F.
						EndIf
					Else
						dbSetOrder(3)
						cSeek:=xFilial("SB8")+aCols[nLin][nPosCod]+cLocal+aCols[nLin][nPosLotCTL]
						If dbSeek(cSeek)
							nQtd:=0
							For i:=1 to Len(aCols)
								If aCols[i][nPosLotCTL]+aCols[i][nPosCod] == aCols[nLin][nPosLotCTL]+aCols[nLin][nPosCod] .And. !aCols[i][Len(aCols[i])]
									If aCols[i, nPosLocal] == cLocal
										nQtd+=aCols[i][nPosQuant]
									EndIf
								EndIf
							Next i
							nSaldo:=SaldoLote(aCols[nLin][nPosCod],cLocal,aCols[nLin][nPosLotCTL],NIL,lBxEmpB8,.T.,nil,dA241Data)
							If QtdComp(nSaldo) < QtdComp(nQtd)
								cHelp:=OemToAnsi(STR0016)+AllTrim(aCols[nLin][nPosCod])+OemToAnsi(STR0017)+aCols[nLin][nPosLocal]+OemToAnsi(STR0018)+ALLTRIM(Transform(nSaldo,cPicB8Sld))+OemToAnsi(STR0019)+aCols[nLin][nPosLotCTL] // Produto#Local#Saldo Disp.#Lote
								Help(" ",1,"A240LOTENE",,cHelp,4,1)
								lRet := .F.
							EndIf
						Else
							cHelp:=OemToAnsi(STR0016)+AllTrim(aCols[nLin][nPosCod])+OemToAnsi(STR0017)+aCols[nLin][nPosLocal]+OemToAnsi(STR0019)+aCols[nLin][nPosLotCTL] // Produto#Local#Lote
							Help(" ",1,"A240LOTERR",,cHelp,5,1)
							lRet := .F.
						EndIf
					EndIf
					dbSetOrder(nOrdSB8)
					MsGoto(nRecSB8)
				EndIf
			EndIf
		EndIf
	EndIf
	lRetOk := If(! lRet, .F., lRetOk)
Next

Return(lRetOk)

/*ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA241VerSDGЁ Autor ЁPatricia A. Salomao     Ё Data Ё20.06.2002Ё╠╠
╠╠цддддддддддеддддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁVerifica se foi informado Rateio de Veiculo/Viagem ou Rateio Ё╠╠
╠╠Ё          Ёde Frota para o Item                                         Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Numero de Sequencia	(D3_NUMSEQ)                    Ё╠╠
╠╠Ё          Ё ExpN1 = Tamanho do aCols                                    Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA241                                                     Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Function a241VerSDG(cNumSeq,nTamACols)

Local cItem    := ""
Local aAreaSDG := SDG->(GetArea())
Local nPos     := 0
Local lIdent   := nModulo<>43
DEFAULT nTamACols := Len(aCols)

If IntTMS()
	SDG->(dbSetOrder(7))
	If SDG->(MsSeek(xFilial("SDG")+"SD3"+cNumSeq))
		cItem	:= StrZero(nTamACols,Len(SDG->DG_ITEM))
		If Empty(SDG->DG_CODVEI) .And. Empty(SDG->DG_VIAGEM) //Verifica se o Rateio foi por Veiculo/Viagem ou por Frota
			aadd(aRatFro,{cItem,{},SDG->DG_CODDES})
		Else
			aadd(aRatVei,{cItem,{},SDG->DG_CODDES})
		EndIf
		While SDG->(!Eof()) .And. SDG->DG_FILIAL + SDG->DG_ORIGEM + SDG->DG_SEQMOV == xFilial("SD3") + "SD3" + cNumSeq
			If Empty(SDG->DG_CODVEI) .And. Iif( lIdent, Empty(SDG->DG_IDENT), Empty(SDG->DG_VIAGEM)) //Verifica se o Rateio foi por Veiculo/Viagem ou por Frota
				aadd(aRatFro[Len(aRatFro)][2],{SDG->DG_ITEM, SDG->DG_PERC,.F.})
			Else
				If ( nPos := Ascan(aRatVei[Len(aRatVei)][2], { |x| x[2] == SDG->DG_CODVEI } ) ) == 0
					aadd(aRatVei[Len(aRatVei)][2],{SDG->DG_ITEM,SDG->DG_CODVEI,SDG->DG_FILORI,SDG->DG_VIAGEM, SDG->DG_TOTAL,"",0,0,.F.})
				EndIf
			EndIf
			SDG->(dbSkip())
		EndDo
	EndIf
	RestArea( aAreaSDG )
EndIf

Return .T.

/*ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁM241SeleEsЁ Autor ЁRodrigo de A Sartorio   Ё Data Ё21.10.2004Ё╠╠
╠╠цддддддддддеддддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁSeleciona estrutura como base para preenchimento automatico  Ё╠╠
╠╠Ё          Ёde produtos a serem requisitados.                            Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA241                                                     Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Static Function M241SeleEs()
Local aEstrutura   := {}
Local i            := 0
Local nx           := 0
Local oDlg
Local lOk          := .F.
Local aAreaSD4     := SD4->(GetArea())
Local aAreaSDC     := SDC->(GetArea())
Local nPercOP      := 0
Local lSugSemSld   := .F.
Local aColsPE      := {}
Local cLocaliz     := Criavar("D3_LOCALIZ",.F.)
Local cNumSeri     := Criavar("D3_NUMSERI",.F.)
Local lItemNeg     := .F.

Private nQtdOrigEs := 1
Private cProdEst   := Criavar("D3_COD",.F.)
Private cOpEst     := Criavar("D3_OP",.F.)
Private nEstru     := 0

DEFINE MSDIALOG oDlg FROM  140,000 TO 300,400 TITLE OemToAnsi(STR0024) PIXEL //"Informe produto com estrutura"
@ 10,15 TO 63,185 LABEL Alltrim(RetTitle("D3_OP"))+" - "+Alltrim(RetTitle("D3_COD"))+" - "+Alltrim(RetTitle("D3_QUANT")) OF oDlg PIXEL
@ 20,20 MSGET cOpEst F3 "SC2" Picture PesqPict("SD3","D3_OP") When(oSugerSld:lVisible := .T.,SysRefresh(),.T.) Valid ((Vazio() .Or. ExistCpo("SC2",cOpEst)) .And. A241IniOP()) SIZE 70,9 OF oDlg PIXEL
@ 35,20 MSGET cProdEst F3 "SB1" Picture PesqPict("SD3","D3_COD") When( lSugSemSld := If(Empty(cOpEst),.F.,lSugSemSld),oSugerSld:lVisible:=!Empty(cOpEst),SysRefresh(),.T.) Valid (NaoVazio() .And. ExistCpo("SB1",cProdEst)) SIZE 70,9 OF oDlg PIXEL
@ 35,95 MSGET nQtdOrigEs Picture PesqPict("SD3","D3_QUANT") Valid (Positivo() .And. NaoVazio()) SIZE 60,9 OF oDlg PIXEL
@ 50,20 CHECKBOX oSugerSld Var lSugSemSld PROMPT OemtoAnsi( STR0030 )	SIZE 150,10 OF oDlg PIXEL
DEFINE SBUTTON FROM 67,131 TYPE 1 ACTION (oDlg:End(),lOk:=.T.) ENABLE OF oDlg
DEFINE SBUTTON FROM 67,158 TYPE 2 ACTION (oDlg:End(),lOk:=.F.) ENABLE OF oDlg
ACTIVATE MSDIALOG oDlg CENTERED ON INIT(oSugerSld:lVisible := .T.)

If lOk .And. !Empty(cProdEst) .And. nQtdOrigEs > 0
	// Le os empenhos caso a op esteja preenchida
	If !Empty(cOPEst)
		dbSelectArea("SC2")
		dbSetOrder(1)
		dbSeek(xFilial("SC2")+cOpEst)
		// Calcula qual o percentual da baixa de insumos
		nPercOp:=nQtdOrigEs/SC2->C2_QUANT
		dbSelectArea("SDC")
		dbSetOrder(2)
		dbSelectArea("SD4")
		dbSetOrder(2)
		dbSeek(xFilial("SD4")+cOpEst)
		While !Eof() .And. D4_FILIAL+D4_OP==xFilial("SD4")+cOpEst
			If !lSugSemSld .AND. QtdComp(D4_QUANT)==QtdComp(0)
				dbSkip()
				Loop
			EndIf
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//| Produtos de apropriacao indireta, quando ja possuem saldo no armazem de processo |
			//| a baixa e automatica pela producao, quando ainda nao possuem saldo no armazem de |
			//| de processo devera ser feita requisicao manual do armazem padrao.                |
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If A260ApropI(D4_COD)
				dbSkip()
				Loop
			EndIf
			If cTm > "500"
				If SDC->(dbSeek(xFilial("SDC")+SD4->D4_COD+SD4->D4_LOCAL+SD4->D4_OP+SD4->D4_TRT+SD4->D4_LOTECTL+SD4->D4_NUMLOTE))
					While !SDC->(Eof()) .And. xFilial("SDC")+SD4->D4_COD+SD4->D4_LOCAL+SD4->D4_OP+SD4->D4_TRT+SD4->D4_LOTECTL+SD4->D4_NUMLOTE == SDC->(DC_FILIAL+DC_PRODUTO+DC_LOCAL+DC_OP+DC_TRT+DC_LOTECTL+DC_NUMLOTE)
						AADD(aEstrutura,{NIL,NIL,SD4->D4_COD,Min(SDC->DC_QUANT,(SDC->DC_QTDORIG*nPercOp)),SDC->DC_TRT,SDC->DC_LOTECTL,SDC->DC_NUMLOTE,SDC->DC_LOCALIZ,SDC->DC_NUMSERI,SD4->D4_LOCAL,SD4->D4_DTVALID})
						SDC->(dbSkip())
					End
				Else
					AADD(aEstrutura,{NIL,NIL,SD4->D4_COD,Min(SD4->D4_QUANT,(SD4->D4_QTDEORI*nPercOp)),SD4->D4_TRT,SD4->D4_LOTECTL,SD4->D4_NUMLOTE,cLocaliz,cNumSeri,SD4->D4_LOCAL,SD4->D4_DTVALID})
				EndIf
			Else
				AADD(aEstrutura,{NIL,NIL,SD4->D4_COD,Min(SD4->D4_QTDEORI*nPercOp,SD4->D4_QTDEORI-SD4->D4_QUANT),SD4->D4_TRT,SD4->D4_LOTECTL,SD4->D4_NUMLOTE,cLocaliz,cNumSeri,SD4->D4_LOCAL,SD4->D4_DTVALID})
			EndIf
			dbSelectArea("SD4")
			dbSkip()
		End
		RestArea(aAreaSD4)
		RestArea(aAreaSDC)
	// Se nao preencheu OP le somente a estrutura
	Else
		// Explode o 1 nivel da estrutura
		A241Explod(cProdEst,nQtdOrigEs,@aEstrutura)
	EndIf
	// Le somente os itens de primeiro nivel
	For i:=1 to Len(aEstrutura)
		// Se a primeira linha esta em branco remove a mesma do acols
		If Empty(aCols[1,nPosCod])
			ADEL(aCols,1)
			ASIZE(aCols,Len(aCols)-1)
		EndIf
		// Adiciona item no acols
		AADD(aCols,Array(Len(aHeader)+1))
		// Preenche conteudo do acols
		For nx:=1 to Len(aHeader)
			cCampo:=Alltrim(aHeader[nx,2])
			If IsHeadRec(cCampo)
				aCols[Len(aCols)][nx] := 0
			ElseIf IsHeadAlias(cCampo)
				aCols[Len(aCols)][nx] := "SD3"
			Else
				aCols[Len(aCols)][nx] := CriaVar(cCampo,.F.)
			EndIf
		Next nx

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁTratamento para marcar como deletados os itens com quantidade negativa na Ё
		//Ёestrutura ou positiva-los, de acordo com o tipo de movimentacao RE/DE.    Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If QtdComp(aEstrutura[i,4]) <= QtdComp(0)
			lItemNeg := .T. // variavel para exibicao de aviso ao usuario
			If cTm > "500"
				// Requisicoes
				If QtdComp(aEstrutura[i,4]) <= QtdComp(0)
					// Quantidade negativa ou zerada: deve ser deletado, pois nao se pode requisitar quantidade negativa ou zerada
					aCOLS[Len(aCols)][Len(aHeader)+1] := .T.
				EndIf
			Else
				// Devolucoes
				If QtdComp(aEstrutura[i,4]) < QtdComp(0)
					// Quantidade negativa: deve ser positivada, pois trata-se de devolucao
					aCOLS[Len(aCols)][Len(aHeader)+1] := .F.
					aEstrutura[i,4] := (aEstrutura[i,4] * -1)
				Else
					// Quantidade zerada: deve ser deletado, pois nao se pode devolver quantidade zerada
					aCOLS[Len(aCols)][Len(aHeader)+1] := .T.
				EndIF
			EndIf
		Else
			// Item com quantidade positiva > 0
			aCOLS[Len(aCols)][Len(aHeader)+1] := .F.
		EndIf

		// Preenche campos especificos
		SB1->(dbSetOrder(1))
		SB1->(MsSeek(xFilial("SB1")+aEstrutura[i,3]))
		GDFieldPut("D3_COD",aEstrutura[i,3],Len(aCols))
		GDFieldPut("D3_DESCRI",SB1->B1_DESC,Len(aCols))
		GDFieldPut("D3_UM",SB1->B1_UM,Len(aCols))
		GDFieldPut("D3_SEGUM",SB1->B1_SEGUM,Len(aCols))
		GDFieldPut("D3_QUANT",aEstrutura[i,4],Len(aCols))
		GDFieldPut("D3_LOCAL",RetFldProd(SB1->B1_COD,"B1_LOCPAD"),Len(aCols))
		GDFieldPut("D3_CONTA",SB1->B1_CONTA,Len(aCols))
		GDFieldPut("D3_ITEMCTA",SB1->B1_ITEMCC,Len(aCols))
		// Preenche o numero da OP
		If !Empty(cOpEst)
			If aEstrutura[i,10]# NIL .AND. !Empty(aEstrutura[i,10])
				GDFieldPut("D3_LOCAL",aEstrutura[i,10],Len(aCols))
			EndIf
			GDFieldPut("D3_OP",cOpEst,Len(aCols))
			GDFieldPut("D3_TRT",aEstrutura[i,5],Len(aCols))
			GDFieldPut("D3_LOTECTL",aEstrutura[i,6],Len(aCols))
			GDFieldPut("D3_NUMLOTE",aEstrutura[i,7],Len(aCols))
			GDFieldPut("D3_DTVALID",aEstrutura[i,11],Len(aCols))
			If ! Empty(cTM) .and. SF5->F5_TIPO=="D"
				GDFieldPut("D3_LOCALIZ",Space(15),Len(aCols))
				GDFieldPut("D3_NUMSERI",Space(20),Len(aCols))
			Else
				GDFieldPut("D3_LOCALIZ",aEstrutura[i,8],Len(aCols))
				GDFieldPut("D3_NUMSERI",aEstrutura[i,9],Len(aCols))
			EndIf
		EndIf
		// Executa gatilhos e validacoes
		If ExistTrigger("D3_COD")
			RunTrigger(2,Len(aCols),,"D3_COD")
		EndIf
		If ExistTrigger("D3_QUANT")
			RunTrigger(2,Len(aCols),,"D3_QUANT")
		EndIf
		If ExistTrigger("D3_LOCAL")
			RunTrigger(2,Len(aCols),,"D3_LOCAL")
		EndIf
		If ExistTrigger("D3_OP")
			RunTrigger(2,Len(aCols),,"D3_OP")
		EndIf
	Next i
EndIf

If lItemNeg
	If cTM > '500'
		Aviso(STR0014, STR0043, {"OK"})
	Else
		Aviso(STR0014, STR0044, {"OK"})
	EndIf
EndIf

If ExistBlock('MT241SE')
	aColsPE := Execblock('MT241SE', .F., .F., aCols)
	If Valtype(aColsPE) == 'A'
		aCols := aClone(aColsPE)
	EndIf
EndIf

//-- Forca atualizacao da GetDados
oGet:Refresh()

Return

/*ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA241IniOP Ё Autor ЁRodrigo de A Sartorio   Ё Data Ё21.10.2004Ё╠╠
╠╠цддддддддддеддддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁInicializa informacoes da Ordem de Producao apos digitar OP  Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA241                                                     Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Static Function A241IniOP()
Local lRet := .T.
// Inicializa produto e quantidade
If !Empty(cOPEst) .And. SC2->(MsSeek(xFilial("SC2")+cOpEst))
	If !Empty(SC2->C2_DATRF)
		Help(" ",1,"A250ENCERR")
		lRet := .F.
	ElseIf SC2->C2_TPOP == "P"
		Help(" ",1,"NOPPREVIST")
		lRet := .F.
	Else
		nQtdOrigEs:=SC2->C2_QUANT-SC2->C2_QUJE
		cProdEst:=SC2->C2_PRODUTO
	EndIf
EndIf
Return lRet

/*ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA241ChkSX3Ё Autor ЁMarcos V. Ferreira      Ё Data Ё25.08.2005Ё╠╠
╠╠цддддддддддеддддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁValida o campo de acordo com o X3_VALID                      Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Campo a ser validado de acordo com o X3_VALID       Ё╠╠
╠╠Ё          Ё ExpC2 = Se .T. utilizar inicializador padrao                Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA241                                                     Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Static Function A241ChkSX3(cCampo,cIniVar)
Local cAlias := Alias(), nRec, nOrd, lRet, cValid

dbSelectArea("SX3")
nRec := Recno()
nOrd := IndexOrd()
dbSetOrder(2)
dbSeek(cCampo)
dbSetOrder(nOrd)
dbSelectArea(cAlias)

cValid := IIf(!Empty(SX3->X3_VALID),Alltrim(SX3->X3_VALID),"")
cValid += IIf(!Empty(SX3->X3_VALID).And.!Empty(SX3->X3_VLDUSER)," .And. ","")
cValid += IIf(!Empty(SX3->X3_VLDUSER),Alltrim(SX3->X3_VLDUSER),"")
cVar	 := "M->"+cCampo
If cIniVar == Nil
	&cVar  := &(ReadVar())
Else
	&cVar	 := cIniVar
EndIf

If !Empty(cValid)
	lRet := &(cValid)
Else
	lRet := .T.
EndIf
dbSelectArea("SX3")
MsGoto(nRec)
dbSelectArea(cAlias)

Return lRet

/*ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤ao    ЁA241ExplodЁ Autor ЁMarcos V. Ferreira      Ё Data Ё07.10.2005Ё╠╠
╠╠цддддддддддеддддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤ao Ё Funcao recursiva para localizar todos os componentes do 	   Ё╠╠
╠╠Ё          Ё primeiro nivel da estrutura.                                Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Codigo do Produto Pai                               Ё╠╠
╠╠Ё          Ё ExpN1 = Quantidade do produto Pai                           Ё╠╠
╠╠Ё          Ё ExpA1 = aArray de retorno                                   Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA241                                                     Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Static Function A241Explod(cProduto,nQuant,aNewStruct)
Local nX		     := 0
Local aAreaAnt	 := GetArea()
Local aArrayAux  := {}

Default cProduto := ""
Default nQuant	 := 0

//Variavel publica declarada na funcao M241SeleEs()
nEstru := 0

aArrayAux := Estrut(cProduto,nQuant,.T.)

dbSelectArea("SB1")
dbSetOrder(1)

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//| Processa todos os componentes do 1 nivel da estrutura,  |
//| verificando a existencia de produtos fantasmas.         |
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
For nX := 1 to Len(aArrayAux)
	If dbSeek(xFilial("SB1")+aArrayAux[nx,3]) //Filial+Componente
		If RetFldProd(SB1->B1_COD,"B1_FANTASM") $ "S" // Projeto Implementeacao de campos MRP e FANTASM no SBZ
			A241Explod(aArrayAux[nx,3],aArrayAux[nx,4],aNewStruct) //Componente+Qtde
		Else
			aAdd(aNewStruct,aArrayAux[nx])
		EndIf
	EndIf
Next nX

RestArea(aAreaAnt)
Return Nil

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ёa241AfterHЁ Autor Ё Ricardo Berti         Ё Data Ё 29/12/06 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Funcao executada APOS gerar aHeader, antes da FillGetDados Ё╠╠
╠╠Ё          Ё criar os campos do Walk-Thru, para adicao de novos campos  Ё╠╠
╠╠Ё          Ё neste.                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё a241AfterH(ExpN1)                                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpA1 = Array aHeader passado por ref.                     Ё╠╠
╠╠Ё          Ё ExpN1 = Numero da opcao selecionada                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA241                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function a241AfterH(aHeaderX,nOpc)
Local aAreaSD3 :={}

If nOpc == 3 .Or. l185	// Inclusao
  If l241Auto
		aAreaSD3:=GetArea()
		dbSelectArea("SX3")
		dbSetOrder(2)
		If Ascan(aHeaderX,{|x| Alltrim(x[2])=="D3_LOTECTL"}) == 0 .And. dbSeek("D3_LOTECTL")
			AADD(aHeaderX,{AllTrim(X3Titulo()),X3_CAMPO,X3_PICTURE,X3_TAMANHO,X3_DECIMAL,X3_VALID,X3_USADO,X3_TIPO,X3_ARQUIVO,X3_CONTEXT} )
		EndIf
		If Ascan(aHeaderX,{|x| Alltrim(x[2])=="D3_DESCRI"}) == 0 .And. dbSeek("D3_DESCRI")
			AADD(aHeaderX,{AllTrim(X3Titulo()),X3_CAMPO,X3_PICTURE,X3_TAMANHO,X3_DECIMAL,X3_VALID,X3_USADO,X3_TIPO,X3_ARQUIVO,X3_CONTEXT} )
		EndIf
		If Type("lSeloFiscal") == "L" .And. lSeloFiscal
			If Ascan(aHeaderX,{|x| Alltrim(x[2])=="D3_IDENT"}) == 0 .And. dbSeek("D3_IDENT")
				AADD(aHeaderX,{AllTrim(X3Titulo()),X3_CAMPO,X3_PICTURE,X3_TAMANHO,X3_DECIMAL,X3_VALID,X3_USADO,X3_TIPO,X3_ARQUIVO,X3_CONTEXT} )
			EndIf
        EndIf
		dbSetOrder(1)
		RestArea(aAreaSD3)
	EndIf
	If l185
		If Ascan(aHeaderX,{|x| Alltrim(x[2])=="D3_NUMSA"}) == 0
			AADD(aHeaderX,{ STR0031	, "D3_NUMSA"	, "@!",	10, 0, Nil, Nil, "C", "SD3", Nil }) //"Numero SA"
		EndIf
		If Ascan(aHeaderX,{|x| Alltrim(x[2])=="D3_ITEMSA"}) == 0
			AADD(aHeaderX,{ STR0032	, "D3_ITEMSA"	, "@!",	10, 0, Nil, Nil, "C", "SD3", Nil }) //"Item SA"
		EndIf
	EndIf

EndIf
Return Nil

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ёa241AfterCЁ Autor Ё Ricardo Berti         Ё Data Ё 22/12/06 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Tratamento de excecoes na montagem automatica do aCols pelaЁ╠╠
╠╠Ё          Ё FillGetDados, executada APOS gerar cada elemento do aCols. Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁExpL1:=a241AfterC(ExpN1,ExpA1,ExpC1,ExpA2,ExpA3,ExpA4,ExpL1)Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpN1 = Numero da opcao selecionada                        Ё╠╠
╠╠Ё          Ё ExpA1 = aCols (passado por ref.)                           Ё╠╠
╠╠Ё          Ё ExpC1 = Alias do arq. principal                            Ё╠╠
╠╠Ё          Ё ExpA2 = Array c/ dados de SD3 p/ tratamento de Dead-Lock   Ё╠╠
╠╠Ё          Ё ExpA3 = Array c/ dados de SB2 p/ tratamento de Dead-Lock   Ё╠╠
╠╠Ё          Ё ExpA4 = Array c/ dados de SB3 p/ tratamento de Dead-Lock   Ё╠╠
╠╠Ё          Ё ExpL1 = Variavel que indica se o movimento esta sem docum. Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё ExpL1 = .F. aborta a FillGetDados (montagem do aCols)  	  Ё╠╠
╠╠Ё          Ё         .T. continua a montagem do aCols pela FillGetDados Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA241                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function a241AfterC(nOpc,aColsX,cAlias,aLockSB2,aLockSB3,aLockSD3,lEmBranco)

Local nPosDesc :=0
Local nPosCod	 :=0
Local nPos		 :=0

Default lEmBranco := .F.

If nOpc == 3	// Inclusao
		nPos := Ascan(aHeader,{|x| Alltrim(x[2])=="D3_DTVALID"})
		If nPos > 0
			aColsX[1][nPos] := dDataBase
		EndIf
Else 	// Visualizacao / Estorno

	If nOpc <> 2	// Estorno
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Tratamento para Dead-Lock                                              Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If aScan(aLockSD3,SD3->D3_COD+SD3->D3_LOCAL+SD3->D3_NUMSEQ)==0
			aAdd(aLockSD3,SD3->D3_COD+SD3->D3_LOCAL+SD3->D3_NUMSEQ)
		EndIf
		If aScan(aLockSB2,SD3->D3_COD+SD3->D3_LOCAL)==0
			aAdd(aLockSB2,SD3->D3_COD+SD3->D3_LOCAL)
		EndIf
		If aScan(aLockSB3,SD3->D3_COD)==0
			aAdd(aLockSB3,SD3->D3_COD)
		EndIf

		nPos := Ascan(aHeader,{|x| Alltrim(x[2])=="D3_ESTORNO"})
		If aHeader[nPos,10] # "V"
			aColsX[Len(aColsX)][nPos] := "S"
		EndIf
	EndIf

	nPosDesc := Ascan(aHeader,{|x| Alltrim(x[2])=="D3_DESCRI"})
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Preenche descricao do produto no campo virtual       Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If nPosDesc > 0
		nPosCod := Ascan(aHeader,{|x| Alltrim(x[2])=="D3_COD"})
		If SB1->(dbSeek(xFilial("SB1")+aColsX[Len(aColsX),nPosCod]))
			aColsX[Len(aColsX),nPosDesc]:= SB1->B1_DESC
		EndIf
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Integracao com o Modulo de Transporte (TMS)                  Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If IntTMS()
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica se foi informado Rateio de Viagem/Veiculo ou Rateio Ё
		//Ё de Frota para o Item                                         Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		a241VerSDG(SD3->D3_NUMSEQ,Len(aColsX))
		dbSelectArea( cAlias )
	EndIf
	If Empty(SD3->D3_DOC)
		lEmBranco:=.T.
	EndIf
EndIf
Return .T.

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁPrograma  Ё MenuDef  Ё Autor Ё Fabio Alves Silva     Ё Data Ё04/10/2006Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Utilizacao de Menu Funcional                               Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Array com opcoes da rotina                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁParametros do array a Rotina:                               Ё╠╠
╠╠Ё          Ё1. Nome a aparecer no cabecalho                             Ё╠╠
╠╠Ё          Ё2. Nome da Rotina associada                                 Ё╠╠
╠╠Ё          Ё3. Reservado                                                Ё╠╠
╠╠Ё          Ё4. Tipo de Transa┤└o a ser efetuada:                        Ё╠╠
╠╠Ё          Ё 	  1 - Pesquisa e Posiciona em um Banco de Dados           Ё╠╠
╠╠Ё          Ё    2 - Simplesmente Mostra os Campos                       Ё╠╠
╠╠Ё          Ё    3 - Inclui registros no Bancos de Dados                 Ё╠╠
╠╠Ё          Ё    4 - Altera o registro corrente                          Ё╠╠
╠╠Ё          Ё    5 - Remove o registro corrente do Banco de Dados        Ё╠╠
╠╠Ё          Ё5. Nivel de acesso                                          Ё╠╠
╠╠Ё          Ё6. Habilita Menu Funcional                                  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function MenuDef()
Private aRotina	:=  {	{OemToAnsi(STR0005),"AxPesqui"  , 0 , 1,0,.F.},;		//"Pesquisar"
						{OemToAnsi(STR0006),"A241Visual", 0 , 2,0,nil},;		//"Visualizar"
						{OemToAnsi(STR0007),"A241Inclui", 0 , 3,0,nil},;		//"Incluir"
						{OemToAnsi(STR0008),"A241Estorn", 0 , 6,0,nil},;		//"Estornar"
						{OemToAnsi(STR0052),"CTBC662"   , 0 , 7,0,Nil},;		//"Tracker ContАbil"
						{OemToAnsi(STR0034),"A240Legenda", 0 , 2,0,.F.} }		//"Legenda"
If ExistBlock ("MTA241MNU")
	Execblock ("MTA241MNU",.F.,.F.)
Endif
Return (aRotina)


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁF4Grade   ╨Autor  ЁMicrosiga           ╨ Data Ё  02/03/07   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     ЁEstoque do produto. Funcao chamada pela digitaГЦo da grade  ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё AP                                                         ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function F4Grade()

MaViewSB2(PADR(ograde:GetNameProd(ograde:cprodref,ograde:ogetdados:obrowse:nat,ograde:ogetdados:obrowse:ncolpos),15))

Return


/*ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбддддддддддд©╠╠
╠╠ЁFun┤└o    ЁA241PrdGrdЁAutor  ЁEmerson Rony Oliveira  Ё Data Ё25/07/2008 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддаддддддддддд╢╠╠
╠╠ЁDescricao Ё Interface de Grade de Produtos - Movimentos Internos(Mod2)  Ё╠╠
╠╠Ё          Ё Substitui a antiga funcao A241Produto(cProduto)             Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                      Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. se Valido ou .F. se Invalido                            Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁGetdados do MATA241.PRX disparada pelo X3_VALID do D3_COD    Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Function A241PrdGrd()
Local aArea        := GetArea()
Local cDescri      := ""
Local cItem        := ""
Local cNewItem     := ""
Local cPrdOrig     := ""
Local cCpoName     := StrTran(ReadVar(),"M->","")
Local cSaveReadVar := __READVAR
Local lGrade       := MaGrade()
Local lReferencia  := .F.
Local lAadd        := .F.
Local lQtdZero     := .F.
Local lRet         := .T.
Local nSaveN
Local nNewItem
Local nPosProd
Local nPLocal
Local nPosQuant
Local nPosCusto1
Local nPosQtSegum
Local nLinX        := 0
Local nColY        := 0
Local nY           := 0
Local nOpca        := 0
Local oDlg

//зддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica se o usuario tem permissao de inclusao. Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддды
If IsInCallStack("MATA240") .Or. IsInCallStack("MATA241")
	lRet := MaAvalPerm(1,{M->D3_COD,"MTA240",3})
ElseIf IsInCallStack("MATA250")
	lRet := MaAvalPerm(1,{M->D3_COD,"MTA250",3})
EndIf
If !lRet
	Help(,,1,'SEMPERM')
EndIf

If IntWMS(M->D3_COD)
	cServReq := Space(Len(SB5->B5_SERVREQ))
	cServDev := Space(Len(SB5->B5_SERVDEV))

	dbSelectArea("SB5")
	dbSetOrder(1)

	If dbSeek(xFilial("SB5")+M->D3_COD)
		cServReq := SB5->B5_SERVREQ
		cServDev := SB5->B5_SERVDEV
	EndIf

	dbSelectArea("SF5")
	If FwIsInCallStack("MATA240") .Or. FwIsInCallStack("MATA250")
		MsSeek(xFilial("SF5")+M->D3_TM)
		If Iif(!Empty(SF5->F5_VAL),SF5->F5_VAL=="N",.T.) .And. IIf(!Empty(SF5->F5_QTDZERO),SF5->F5_QTDZERO=="2",.T.)

			If M->D3_TM > '500'
				M->D3_SERVIC  := cServReq
			Else
				M->D3_SERVIC  := cServDev
			EndIf
		Else
			M->D3_SERVIC := Space(TamSx3("D3_SERVIC")[1])
		EndIf
	ElseIf FwIsInCallStack("MATA241") .And. Type('cTm') == "C"
		nPosServ := aScan(aHeader,{|x| AllTrim(x[2])=="D3_SERVIC"})

		MsSeek(xFilial("SF5")+cTm)
		If Iif(!Empty(SF5->F5_VAL),SF5->F5_VAL=="N",.T.) .And. IIf(!Empty(SF5->F5_QTDZERO),SF5->F5_QTDZERO=="2",.T.)
			If cTm > '500'
				aCols[n][nPosServ] := cServReq
			Else
				aCols[n][nPosServ] := cServDev
			EndIf
		Else
			aCols[n][nPosServ] := Space(TamSx3("D3_SERVIC")[1])
		EndIf
	EndIf
EndIf

If lRet
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica se a grade esta ativa e se o produto digitado e uma referencia e Monta o AcolsGrade e o AheadGrade para este item Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	cProdRef    := &(ReadVar())
	lReferencia := MatGrdPrrf(@cProdRef)
	If lReferencia .And. l241 .And. lGrade .And. !Empty(&(ReadVar()))
		nSaveN       	:= N
		nNewItem     	:= Len(aCols)
		nPosProd     	:= aScan(aHeader,{|x| AllTrim(x[2])=="D3_COD"})
		nPLocal			:= aScan(aHeader,{|x| AllTrim(x[2])=="D3_LOCAL"})
		nPosQuant    	:= aScan(aHeader,{|x| AllTrim(x[2])=="D3_QUANT"})
		nPosCusto1		:= aScan(aHeader,{|x| AllTrim(x[2])=="D3_CUSTO1"})
		nPosQtSegum  	:= aScan(aHeader,{|x| AllTrim(x[2])=="D3_QTSEGUM"})
	  PRIVATE oGrade  := MsMatGrade():New('oGrade', , 'D3_QUANT', , 'A241VldGrd()', {{VK_F4, { || ShowF4() } }},;
		{{"D3_QUANT"    ,.T., {{"D3_QTSEGUM", {|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),aCols[nLinha][nColuna],0,2) }}} },;
	   {"D3_QTSEGUM"  ,NIL, {{"D3_QUANT"  , {|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),0,aCols[nLinha][nColuna],1) }}} },;
	   {"D3_LOCAL"    ,NIL, NIL},;
	   {"D3_CUSTO1"   ,NIL, NIL};
	  })
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё So aceita a entrada de dados via interface de grade se o usr Ё
		//Ё estiver posicionado na ultima linha da MsGetdados (NewLine). Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If N >= Len(aCols) .And. Empty(aCols[Len(aCols)][nPosProd])

			oGrade:MontaGrade(1,cProdRef,.T.,,lReferencia,.T.)
			oGrade:nPosLinO     := 1
			oGrade:cProdRef	    := cProdRef
			oGrade:lShowMsgDiff := .F. // Desliga apresentacao do "A410QTDDIF"

			nNewItem := Len(aCols)
			lAadd    := .F.

			DEFINE MSDIALOG oDlg TITLE STR0039 OF oMainWnd PIXEL FROM 000,000 TO 220,520  //"Interface para Grade de Produtos"

			@ 035,010 BUTTON STR0040 SIZE 70,15 FONT oDlg:oFont ACTION ;
			{|| __READVAR:='M->D3_QUANT'  ,M->D3_QUANT   := 0,cCpoName := StrTran(ReadVar(),"M->",""),oGrade:Show(cCpoName) } OF oDlg PIXEL //"Quantidade"
			@ 055,010 BUTTON STR0041 SIZE 70,15 FONT oDlg:oFont ACTION ;
			{|| __READVAR:='M->D3_CUSTO1' ,M->D3_CUSTO1  := 0,cCpoName := StrTran(ReadVar(),"M->",""),oGrade:Show(cCpoName) } OF oDlg PIXEL //"Custo"
			@ 075,010 BUTTON STR0042 SIZE 70,15 FONT oDlg:oFont ACTION ;
			{|| __READVAR:='M->D3_QTSEGUM',M->D3_QTSEGUM := 0,cCpoName := StrTran(ReadVar(),"M->",""),oGrade:Show(cCpoName) } OF oDlg PIXEL //"Segunda Und Medida"

			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||oDlg:End(), nOpca:=1},{||oDlg:End(), nOpca:=0}) CENTERED

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Somente realiza a carga do item para o aCols se pelo menos uma celula do D3_QUANT contiver valor.Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If nOpca == 1
				// Verifica se permite quantidade zerada na grade de produtos
				If Type('cTm') == "C" .And. SF5->(MsSeek(xFilial("SF5")+cTm))
					lQtdZero := ( SF5->F5_VAL == "S" .And. SF5->F5_QTDZERO == "1" )
				EndIf
				// Carrega grade de produtos
				If If(lQtdZero,oGrade:SomaGrade("D3_CUSTO1",oGrade:nPosLinO,oGrade:nQtdInformada) <> 0,oGrade:SomaGrade("D3_QUANT",oGrade:nPosLinO,oGrade:nQtdInformada) > 0)
					For nLinX := 1 To Len(oGrade:aColsGrade[1])
						For nColY := 2 To Len(oGrade:aHeadGrade[1])
							If If(lQtdZero,oGrade:aColsFieldByName("D3_CUSTO1",1,nLinX,nColY) <> 0,oGrade:aColsFieldByName("D3_QUANT",1,nLinX,nColY) <> 0)
								//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
								//Ё Faz a montagem de uma nova linha em branco no aCols para     Ё
								//Ё adicionar novos itens vindos das celulas da Grade.           Ё
								//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
								If lAadd
									aadd(aCols,Array(Len(aHeader)+1))
									nNewItem := Len(aCols)
									cNewItem := StrZero(nNewItem,Len(SD1->D1_ITEM))
									For nY := 1 to Len(aHeader)
										If Trim(aHeader[nY][2]) == "D3_COD"
											aCols[nNewItem][nY] := cNewItem
										ElseIf IsHeadRec(aHeader[nY][2])
											aCols[nNewItem][nY] := 0
										ElseIf IsHeadAlias(aHeader[nY][2])
											aCols[nNewItem][nY] := "SD3"
										Else
											aCols[nNewItem][nY] := CriaVar(aHeader[nY][2])
										EndIf
										aCols[nNewItem][Len(aHeader)+1] := .F.
									Next nY
								EndIf

								//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
								//ЁEfetua a carga dos itens digitados no grid para o aCols                  Ё
								//ЁExecuta as validacoes necessarias para se carregar corretamente os dados Ё
								//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
								N := nNewItem
								aCols[nNewItem][nPosProd]:= PadR(oGrade:GetNameProd(cProdRef,nLinX,nColY),Len(SD1->D1_COD))
								M->D3_COD := aCols[nNewItem][nPosProd]
								A240IniCpo() //-- Validacao que estava no X3_VALID da coluna D3_COD e que deve ser executada internamente

								aCols[nNewItem][nPosQuant]:= oGrade:aColsFieldByName("D3_QUANT",1,nLinX,nColY)
								M->D3_QUANT   := oGrade:aColsFieldByName("D3_QUANT",1,nLinX,nColY)
								A240Quant()  //-- Validacao consta no X3_VALID para a coluna D3_QUANT

								aCols[nNewItem][nPosCusto1]:= oGrade:aColsFieldByName("D3_CUSTO1",1,nLinX,nColY)
								M->D3_CUSTO1  := oGrade:aColsFieldByName("D3_CUSTO1",1,nLinX,nColY)

								aCols[nNewItem][nPosQtSegum]:= oGrade:aColsFieldByName("D3_QTSEGUM",1,nLinX,nColY)
								M->D3_QTSEGUM := oGrade:aColsFieldByName("D3_QTSEGUM",1,nLinX,nColY)
								AQtdGrade()  //-- Deve ser executada somente neste momento pois o objeto oGrade esta ativo
								A240PriUm()  //-- Validacao consta no X3_VALID para o a coluna D3_QTSEGUM

								If !lAadd
									cPrdOrig := aCols[nNewItem][nPosProd]
									lAadd 	 := .T.
								Endif
							EndIf
						Next nColY
					Next nLinX
				Else
					lRet := .F.
				EndIf
			EndIf
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁRestaura os valores originais do N da GetDados, e da Public      Ё
			//Ё__READVAR que fora manipulada pela interface de grade.           Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			N         := nSaveN
			__READVAR := cSaveReadVar
			M->D3_COD := cPrdOrig
		Else
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁPara incluir um produto com referencia de grade e necessario estarЁ
			//Ёem uma nova linha do movimento interno.                           Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			Help(" ",1,"A241PRDGRD")
			lRet := .F.
		EndIf
	Else
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Se o Produto nao for um produto de grade executa a validacao no SB1 Ё
		//Ё e inicializa os campos na getdados.                                 Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		dbSelectArea("SB1")
		dbSetOrder(1)
		lRet := ExistCpo("SB1")
		If lRet .And. (l240 .Or. l241 .Or. l242 .Or. l250)
			A240IniCpo()
		Endif
	EndIf
	RestArea(aArea)
EndIf

Return(lRet)


/*ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбддддддддддд©╠╠
╠╠ЁFun┤└o    ЁA241VldGrdЁAutor  ЁEmerson Rony Oliveira  Ё Data Ё25/07/2008 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддаддддддддддд╢╠╠
╠╠ЁDescricao Ё Validacao dos itens do Grid na grade de produtos            Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                      Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. se Valido e .F. se Invalido                             Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁObjeto de Grade do MATA241                                   Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Function A241VldGrd()
Local lValido := .F.

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se Houver necessidade de novas validacoes na entrada de dados nas   Ё
//Ё celulas do Grid elas deverao ser inseridas nessa funcao.            Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Positivo()
	lValido := .T.
EndIf

Return lValido

/*
ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁChkOPSusp  Ё Autor Ё Sergio S. Fuzinaka    Ё Data Ё 28.10.09 Ё╠╠
╠╠цддддддддддедддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescricao ЁCheca se a OP esta Suspensa.                                 Ё╠╠
╠╠Ё			 Ё                                                             Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁGenerico                                                     Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function ChkOPSusp()

Local lRet 		:= .T.
Local nX		:= 0
Local aArea		:= GetArea()
Local aAreaSC2	:= SC2->( GetArea() )
Local lOpSusp	:= GetNewPar("MV_OPSUSP",.T.)
Local cProdMNT	:= SuperGetMv("MV_PRODMNT",.F.,"MANUTENCAO")

SC2->( dbSetOrder( 1 ) )
If lOpSusp
	For nX := 1 To Len( aCols )
		If !aCols[nX][Len(aCols[nX])] .And. !Empty(aCols[nX][nPosOp])
			If SC2->(dbSeek(xFilial("SC2")+Alltrim(aCols[nX][nPosOp])))
				If SC2->C2_STATUS == 'U' .And. ( Alltrim( Upper(SC2->C2_PRODUTO) ) <> Alltrim( Upper(cProdMNT) ) )
					Help("",1,"A250OPSUSP",,"OP: "+aCols[nX][nPosOp],5,0)
					lRet := .F.
				Endif
			EndIf
		Endif
	Next
EndIf

RestArea( aAreaSC2 )
RestArea( aArea )

Return( lRet )
/*
ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠имммммммммммяммммммммммкмммммммяммммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨ Function  Ё IntegDef ╨ Autor Ё Alex Egydio          ╨ Data Ё  08/02/13   ╨╠╠
╠╠лмммммммммммьммммммммммймммммммоммммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨ Descricao Ё Funcao de tratamento para a mensagem unica da movimentacao   ╨╠╠
╠╠╨           Ё de estoque (Stockturnover)                                   ╨╠╠
╠╠лмммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨ Uso       Ё MATA241                                                      ╨╠╠
╠╠хмммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function IntegDef( cXML, nTypeTrans, cTypeMessage )
Local aRet := {}

aRet := MATI241(cXml, nTypeTrans, cTypeMessage, a241ISD3)

Return aRet

Function MTA241SD3(aReg)
a241ISD3 := aReg
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} A241VldTM()
FunГЦo valida TM
@author Leonardo Quintania
@since 14/11/2014
@version 1.0
/*/
//-------------------------------------------------------------------
Function A241VldTM()
Local lRet 	:= .T.
Local lMata340:= IsInCallStack("MATA340")

If !lMata340
	lRet:= ExistCpo("SF5") .And. MaAvalPerm(2,{M->D3_TM}) .And. Iif(l250,A250TM(),A240TM())
EndIf 

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} A241AvalATF()
Efetua AvaliaГЦo de parametros 
@author Leonardo Quintania
@since 27/10/2014
@version 1.0
/*/
//-------------------------------------------------------------------
Function A241AvalATF(lDesItem,lComponent,nOpc,cNumseq,aCMNF)
Local aCab			:= {}
Local aItens		:= {}
Local aSD1			:= {}
Local aRecno		:= {}

Local cFilialSB2	:= xFilial("SB2")
Local cFilialSD1	:= xFilial("SD1")
Local cFilialSF1	:= xFilial("SF1")
Local cFilialSF4	:= xFilial("SF4")
Local cFilialSN1	:= xFilial("SN1")
Local cFilialCF5	:= xFilial("CF5")

Local cDataRef	:= DToS(dDataBase+1)
Local cPath		:= ""
Local cFileLog	:= ""
Local cBase		:= ""
Local cItemAtf	:= ""
Local cAux 		:= Replicate("0", TAMSX3("N1_ITEM")[1])
Local cProduto	:= SD3->D3_COD
Local cSimpNac	:= ""
Local cCiap		:= ""

Local nI			:= 0
Local nJ			:= 0
Local nQtdSD3		:= SD3->D3_QUANT
Local nQtdReq		:= SD3->D3_QUANT
Local nTamSN1		:= TamSX3("N1_ITEM")[1]
Local nQtdSB2		:= 0
Local nQuant		:= 0
Local nRetCusto	:= 0
Local nICM			:= 0
Local nIPI			:= 0
Local nPIS			:= 0
Local nCOF			:= 0
Local nRetICMS	:= 0	

Local lContinua	:= .T.
Local lExistDH0 	:= AliasIndic("DH0")
Local lF4BensATF	:= IIf(lDesItem .And. nQtdSD3 >= 1, .T. ,.F. )
Local lATFDCBA	:= SuperGetMv("MV_ATFDCBA",.F.,"0") == "1" // "0"- Desmembra itens / "1" - Desmembra codigo base
Local lRet			:= .T.

//Controle de rotina automatica
Private lMsErroAuto := .F.
Private lMsHelpAuto := .T.

Default nOpc		:= 3
Default cNumseq	:= ""

If nOpc == 3 //InclusЦo
	//Pesquisa todos os armazens do produto
	BeginSQL Alias "TMPSB2"
		SELECT SUM(SB2.B2_QATU) B2_QATU
		FROM %Table:SB2% SB2
		WHERE	SB2.B2_FILIAL = %Exp:cFilialSB2% AND
				SB2.B2_COD    = %Exp:cProduto% AND
				SB2.%NotDel%
	EndSql
	
	If !TMPSB2->(Eof()) 
		nQtdSB2:= TMPSB2->B2_QATU
	EndIf
	TMPSB2->(dbCloseArea())
	
	BeginSQL Alias "TMPSD1"
		SELECT D1_FILIAL, D1_COD, D1_QUANT, D1_DOC, D1_EMISSAO, D1_TES, D1_TIPO, D1_CBASEAF, D1.R_E_C_N_O_ RECNO
		FROM %Table:SD1% D1
		WHERE	D1_FILIAL = %Exp:cFilialSD1% AND
				D1_COD    = %Exp:cProduto% AND
				D1.%NotDel%
				ORDER BY D1_EMISSAO DESC
	EndSql
	
	//Realiza composiГЦo do saldo encontrado no estoque da nota mais nova para mais antiga(FIFO)
	While TMPSD1->(!EOF()) .And. nQtdSB2 > 0 
		If cFilialSD1+cProduto == TMPSD1->(D1_FILIAL+D1_COD)
			lContinua:= SF1->(MsSeek(cFilialSF1+TMPSD1->D1_DOC))
			lContinua:= SF4->(MsSeek(cFilialSF4+TMPSD1->D1_TES))
			If lContinua .And. SF1->F1_TIPO $ "N" .And. SF4->F4_ESTOQUE == "S" .And. Empty(TMPSD1->D1_CBASEAF)
				If (nQtdSB2 - TMPSD1->D1_QUANT) > 0
					aAdd(aSD1, { TMPSD1->Recno,TMPSD1->D1_QUANT} )
				Else
					aAdd(aSD1, { TMPSD1->Recno,nQtdSB2} ) //Para considerar apenas parte da nota para compor saldo
				EndIf
				nQtdSB2 -= TMPSD1->D1_QUANT
			EndIf
		EndIf
		TMPSD1->(dbSkip())
	EndDo
	
	TMPSD1->(dbCloseArea())

	For nI := Len(aSD1) To 1 STEP -1
		If (nQtdReq - aSD1[nI,2]) > 0
			aAdd(aRecno, {.T.,aSD1[nI,1],aSD1[nI,2]}) //Guarda recno do documento que foi levado em consideraГЦo para geraГЦo da tabela DH0
			nQtdReq 	-= aSD1[nI,2]
		Else	
			aAdd(aRecno, {.T.,aSD1[nI,1],nQtdReq}) //Guarda recno do documento que foi levado em consideraГЦo para geraГЦo da tabela DH0
			nQtdReq:= 0
			Exit
		EndIf
	Next nI
		
	If !Empty(nQtdReq) //Caso nЦo tenha encontrado notas suficientes para compor o saldo, И gerado um registro com o restante
		aAdd(aRecno, {.F.,0,nQtdReq})
	EndIf
	
	For nI := 1 TO Len(aRecno)
		If (lDesItem .And. lF4BensATF ) 
			For nJ := 1 TO nQtdSD3
				If !lATFDCBA .OR. ( lATFDCBA .AND. nI == 1 )
					cAux		:= Soma1( cAux,,, .F. )
					cItemAtf	:= PadL( cAux, nTamSN1 , "0" )	
				EndIf				
				If aRecno[nI,1] //Se considerou nota fiscal
					SD1->(dbGoTo(aRecno[nI,2]))
					SF1->(MsSeek(xFilial("SF1")+ SD1->D1_DOC))
					SA2->(MsSeek(xFilial("SA2")+ SD1->D1_FORNECE+SD1->D1_LOJA))
					SF4->(MsSeek(xFilial("SF4")+ SD3->D3_TEATF ))
					
					cSimpNac := Iif(cPaisLoc == "BRA" ,SA2->A2_SIMPNAC,"")
					If (SF4->F4_CIAP=="S" .And. ((SD1->D1_VALICM  > 0 .And. SF4->F4_CREDICM == "S") .Or. 	Iif(cPaisLoc == "BRA",(SD1->D1_ICMNDES > 0), .F. ) .Or. ;	
						(SF4->F4_COMPL == "S" .AND. cSimpNac == "1")))
						cCiap:= A103CIAP(1,"SD1",aRecno[nI,3],"MATA240")
					EndIf
				EndIf 
				A241GerATF(lDesItem,lComponent,nOpc,aRecno[nI],@cBase,cItemAtf,cNumseq,@aCMNF,cCiap)
			Next nJ
		Else
						
			If aRecno[nI,1] //Se considerou nota fiscal
				SD1->(dbGoTo(aRecno[nI,2]))
				SF1->(MsSeek(xFilial("SF1")+ SD1->D1_DOC))
				SA2->(MsSeek(xFilial("SA2")+ SD1->D1_FORNECE+SD1->D1_LOJA))
				SF4->(MsSeek(xFilial("SF4")+ SD3->D3_TEATF ))
				
				cSimpNac := Iif(cPaisLoc == "BRA" ,SA2->A2_SIMPNAC,"")
				If (SF4->F4_CIAP=="S" .And. ((SD1->D1_VALICM  > 0 .And. SF4->F4_CREDICM == "S") .Or. Iif(cPaisLoc == "BRA",(SD1->D1_ICMNDES > 0), .F. ) .Or. ;	
					(SF4->F4_COMPL == "S" .AND. cSimpNac == "1")))
					cCiap:= A103CIAP(1,"SD1",aRecno[nI,3],"MATA240")
				EndIf
			EndIf
			cItemAtf := StrZero(1,Len(SN1->N1_ITEM))
			A241GerATF(lDesItem,lComponent,nOpc,aRecno[nI],cBase,cItemAtf,cNumseq,@aCMNF,cCiap)
		EndIf
	Next nI
Else
	cNumSeq:= SD3->D3_NUMSEQ
	
	BeginSQL Alias "TMPSN1"
		SELECT SN1.N1_CBASE,SN1.N1_ITEM,SN1.N1_CODCIAP
		FROM %Table:SN1% SN1
		WHERE	SN1.N1_FILIAL = %Exp:cFilialSN1% AND
				SN1.N1_NUMSEQ = %Exp:cNumSeq% AND
				SN1.%NotDel%
	EndSql
	
	While !TMPSN1->(Eof())
	
		AAdd(aCab,{"N1_CBASE"  	, TMPSN1->N1_CBASE		,NIL})
		AAdd(aCab,{"N1_ITEM"   	, TMPSN1->N1_ITEM			,NIL})

		MSExecAuto({|x,y,z,w| Atfa012(x,y,z,w)},aCab,aItens,5)
		
		If lMsErroAuto
			cFileLog := NomeAutoLog()
			lMsErroAuto := .F.
			DisarmTransaction()
			lRet:= .F.
			Exit
		Else
			//--Exclui Tabela de CIAP	
			SF9->(dbSetOrder(1))
			If SF9->(dbSeek(xFilial("SF9")+TMPSN1->N1_CODCIAP))
				While SF9->(!Eof()) .And. SF9->(F9_FILIAL+F9_CODIGO) == xFilial("SF9")+TMPSN1->N1_CODCIAP
					SFA->(dbSetOrder(1))
					If SFA->(dbSeek(xFilial("SFA")+SF9->F9_CODIGO))
						While SFA->(!Eof()) .And. SFA->(FA_FILIAL+FA_CODIGO) == xFilial("SFA")+SF9->F9_CODIGO
                    		RecLock("SFA", .F.)
                    		SFA->(dbdelete())
                   	 	SFA->(dbSkip())
						EndDo
					EndIf
					RecLock("SF9", .F.)
					SF9->(dbDelete())
					SF9->(dbSkip())
				EndDo
			EndIf
		EndIf
		aCab:= {}
		TMPSN1->(dbSkip())
	EndDo
	TMPSN1->(dbCloseArea())
	If !Empty(cFileLog)
		MostraErro(cPath,cFileLog)
	Else
		DH0->(dbSetOrder(2))
		DH0->(dbSeek(xFilial("DH0")+cNumSeq))
		While DH0->(!Eof())  .And. DH0->(DH0_FILIAL+DH0_NUMSEQ) == xFilial("DH0")+cNumSeq
			SD1->(MsSeek(xFilial("SD1")+ DH0->(DH0_FILIAL+DH0_DOC+DH0_SERIE+DH0_FORNEC+DH0_LOJA)))
			RecLock("DH0",.F.,.T.)
			DH0->(dbDelete())
			MsUnlock()
			DH0->(dbSkip())
		EndDo
	EndIf
If cPaisLoc == "BRA"
	BeginSQL Alias "TMPCF5"
		SELECT CF5_FILIAL,CF5_CODIGO
		FROM %Table:CF5% CF5
		WHERE	CF5.CF5_FILIAL = %Exp:cFilialCF5% AND
				CF5.CF5_NUMDOC = %Exp:cNumSeq% AND
				CF5.%NotDel%
	EndSql
	
	While !TMPCF5->(Eof()) //-- Tabela refente a apuraГЦo de PIS/COFINS para estorno de credito
		CF5->(MsSeek(TMPCF5->(CF5_FILIAL+CF5_CODIGO)))
		RecLock("CF5", .F.)
		CF5->(dbDelete())
		MsUnlock()
		TMPCF5->(dbSkip())
	EndDo
	TMPCF5->(dbCloseArea())
EndIf
EndIf
	
Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} A241GerATF()
FunГЦo realiza a geraГЦo de ativos
@author Leonardo Quintania
@since 27/10/2014
@version 1.0
/*/
//-------------------------------------------------------------------
Function A241GerATF(lDesItem,lComponent,nOpc,aRecno,cBase,cItem,cNumseq,aCMNF,cCiap)
Local aCab				:= {}
Local aItens			:= {}
Local aAux				:= {}
Local aParam			:= {}
Local aTamVOrig		:= {}
Local aRelImp    		:= MaFisRelImp("MT100",{ "SD1" })

Local cCpBsPisEn 		:= ""
Local cCpBsCofEn 		:= ""
Local cPath			:= ""
Local cFileLog		:= ""
Local cFilialSB2		:= xFilial("SB2")
Local cFilialSF1		:= xFilial("SF1")
Local cFilialSF4		:= xFilial("SF4")
Local cProduto		:= SD3->D3_COD
Local cArmazem		:= SD3->D3_LOCAL

Local nScanPis 	 	:= 0
Local nScanCof 	 	:= 0
Local nQtdEnt 		:= CtbQtdEntd()
Local nI				:= 0
Local nQtdSD3			:= aRecno[3]
Local nAtfQtdIt		:= IIf(lDesItem .And. nQtdSD3 >=1, nQtdSD3 ,1)
Local nCusto			:= 0
Local nCustoAux		:= 0
Local nMoeda			:= IIf(cPaisLoc == "BRA",1,SF1->F1_MOEDA)
Local nICMS			:= 0
Local nPis				:= 0
Local nCofins			:= 0
Local nDescrN1 		:= TamSX3("N1_DESCRIC")[1]

Local lF4BensATF		:= IIf(lDesItem .And. aRecno[3] >= 1, .T. ,.F. )
Local lATFDCBA		:= SuperGetMv("MV_ATFDCBA",.F.,"0") == "1" // "0"- Desmembra itens / "1" - Desmembra codigo base
Local lCusAtivo      := .F.

Private lMsErroAuto	:= .F.
Private lMsHelpAuto 	:= .T.

Default cCiap			:= ""

aAdd( aParam, {"MV_PAR01", 2} )
aAdd( aParam, {"MV_PAR02", 1} )
aAdd( aParam, {"MV_PAR05", 2} )

aAdd(aTamVOrig,TamSx3("N3_VORIG1"))
aAdd(aTamVOrig,TamSx3("N3_VORIG2"))
AADD(aTamVOrig,TamSx3("N3_VORIG3"))
aAdd(aTamVOrig,TamSx3("N3_VORIG4"))
aAdd(aTamVOrig,TamSx3("N3_VORIG5"))

If (Empty(cBase)) .Or. (lF4BensATF .And. lATFDCBA)
		cBase := &(SuperGetMV("MV_CBASEAF",.F.))
	SN1->(DbSetOrder(1))
	While SN1->(MsSeek(xFilial("SN1")+cBase))
		cBase := Soma1(cBase,Len(SN1->N1_CBASE))
	EndDo
		PutMV("MV_CBASEAF",'"'+Soma1(cBase,Len(SN1->N1_CBASE))+'"')
	EndIf

dbSelectArea("SF5")
If MsSeek(xFilial("SF5")+SD3->D3_TM)
	lCusAtivo := SF5->(ColumnPos("F5_CUSTATF")) > 0 .And. SF5->F5_CUSTATF == "1"
EndIf
If !Empty(cBase)

	//Posiciono o campo correto com a aliquota do PIS da tabela SD1
	If !Empty( nScanPis := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_ALIQPS2"} ) )
		cCpBsPisEn := aRelImp[nScanPis,2]
	EndIf
	
	//Posiciono o campo correto com a aliquota da COFINS da tabela SD1
	If !Empty( nScanCof := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_ALIQCF2"} ) )
		cCpBsCofEn := aRelImp[nScanCof,2]
	EndIf

	If aRecno[1] //Se estiver considerando nota fiscal?
		SD1->(dbGoTo(aRecno[2]))
		SF1->(MsSeek(cFilialSF1+SD1->D1_DOC))
		SF4->(MsSeek(cFilialSF4+SD1->D1_TES))
		SB2->(dbSeek(cFilialSB2+cProduto+cArmazem))
		If !lCusAtivo
			nCusto	:= ((SD1->D1_CUSTO / SD1->D1_QUANT) * nQtdSD3) / nAtfQtdIt //Pega custo medio unitario da nota fiscal
			
			nCustoAux:= NoRound(nCusto ,2)
	
			aCMNF[1]+= Round(xMoeda(nCustoAux,nMoeda,1),aTamVOrig[1][2]) 
				
			aCMNF[2]+= Round(xMoeda(nCustoAux,nMoeda,2),aTamVOrig[2][2])
			
			aCMNF[3]+= Round(xMoeda(nCustoAux,nMoeda,3),aTamVOrig[3][2])
			
			aCMNF[4]+= Round(xMoeda(nCustoAux,nMoeda,4),aTamVOrig[4][2])
			
			aCMNF[5]+= Round(xMoeda(nCustoAux,nMoeda,5),aTamVOrig[5][2])
		Else		
			aCMNF := PegaCMAtu(SD3->D3_COD,SD3->D3_LOCAL)
			nCustoAux:= NoRound((aCMNF[1]*nQtdSD3) ,2)
			
			aCMNF[1]:= Round(xMoeda(nCustoAux,nMoeda,1),aTamVOrig[1][2]) 
				
			aCMNF[2]:= Round(xMoeda(nCustoAux,nMoeda,2),aTamVOrig[2][2])
			
			aCMNF[3]:= Round(xMoeda(nCustoAux,nMoeda,3),aTamVOrig[3][2])
			
			aCMNF[4]:= Round(xMoeda(nCustoAux,nMoeda,4),aTamVOrig[4][2])
			
			aCMNF[5]:= Round(xMoeda(nCustoAux,nMoeda,5),aTamVOrig[5][2])
		EndIf

		nICMS	:= ((SD1->D1_VALICM + SD1->D1_ICMSCOM) / SD1->D1_QUANT) * aRecno[3]
	If cPaisLoc == "BRA"
		nPis	:= ((SD1->D1_VALPIS/SD1->D1_QUANT)*aRecno[3])/ nAtfQtdIt
		nCofins:= ((SD1->D1_VALCOF/SD1->D1_QUANT)*aRecno[3])/ nAtfQtdIt
	EndIf	
		//Realiza gravaГЦo da tabela DH0 relacionada ao Ativo Fixo X Nota fiscal		
		RecLock("DH0",.T.)
		DH0->DH0_FILIAL 	:= xFilial("DH0")
		DH0->DH0_DOC 		:= SD1->D1_DOC
		//DH0->DH0_SERIE 	:= SD1->D1_SERIE
		SerieNfId("DH0",1,"DH0_SERIE",SD1->D1_EMISSAO,SF1->F1_ESPECIE,SD1->D1_SERIE)
		DH0->DH0_ITEM		:= SD1->D1_ITEM
		DH0->DH0_ITATF	:= cItem
		DH0->DH0_FORNECE	:= SD1->D1_FORNECE
		DH0->DH0_LOJA		:= SD1->D1_LOJA
		DH0->DH0_NUMSEQ 	:= cNumseq
		DH0->DH0_DATA 	:= SD3->D3_EMISSAO
		DH0->DH0_CUSTO 	:= Iif (lCusAtivo,aCMNF[1],nCusto)
		DH0->DH0_QUANT 	:= aRecno[3] / nAtfQtdIt
		DH0->DH0_VALICM	:= NoRound((nICMS / nAtfQtdIt),2)	
		DH0->DH0_VALIPI	:= ((SD1->D1_VALIPI/SD1->D1_QUANT)*aRecno[3])/ nAtfQtdIt	//Pega Proporcional em relaГЦo aos impostos
		DH0->DH0_VALPIS	:= nPis															//Pega Proporcional em relaГЦo aos impostos
		DH0->DH0_VALCOF	:= nCofins															//Pega Proporcional em relaГЦo aos impostos
		MsUnlock()
		If !Empty(nPis)
			A241GerImp(nPis,cNumseq,1)
		EndIf
		If !Empty(nCofins)
			A241GerImp(nPis,cNumseq,2)
		EndIf
	Else
		aCMNF := PegaCMAtu(SD3->D3_COD,SD3->D3_LOCAL)
		nCustoAux:= NoRound((aCMNF[1]*nQtdSD3) ,2)
		
		aCMNF[1]:= Round(xMoeda(nCustoAux,nMoeda,1),aTamVOrig[1][2]) 
			
		aCMNF[2]:= Round(xMoeda(nCustoAux,nMoeda,2),aTamVOrig[2][2])
		
		aCMNF[3]:= Round(xMoeda(nCustoAux,nMoeda,3),aTamVOrig[3][2])
		
		aCMNF[4]:= Round(xMoeda(nCustoAux,nMoeda,4),aTamVOrig[4][2])
		
		aCMNF[5]:= Round(xMoeda(nCustoAux,nMoeda,5),aTamVOrig[5][2])
	EndIf	
	
	SB1->(DbSetOrder(1))
	SB1->(MsSeek(xFilial("SB1")+cProduto))
	
	//Preenchimento das Variaveis referentes ao SN1 
	aAdd(aCab,{"N1_PATRIM"	, "N" 									,NIL}) //Ativo Imobilizado
	aAdd(aCab,{"N1_CBASE"	, cBase 								,NIL})
	aAdd(aCab,{"N1_ITEM"		, cItem 								,NIL})
	aAdd(aCab,{"N1_AQUISIC"	, SD3->D3_EMISSAO						,NIL})
	aAdd(aCab,{"N1_DESCRIC"	, SUBSTR(SB1->B1_DESC,1,nDescrN1)  ,NIL})
	aAdd(aCab,{"N1_QUANTD"	, nQtdSD3 / nAtfQtdIt				,NIL})
	aAdd(aCab,{"N1_STATUS"	, "0"									,NIL})
	aAdd(aCab,{"N1_PRODUTO"	, SD3->D3_COD							,NIL})
	aAdd(aCab,{"N1_NUMSEQ"	, cNumseq								,NIL})
	
	If aRecno[1] //Preenche apenas se for de origem de nota fiscal	
		aAdd(aCab,{"N1_FORNEC" 	, SD1->D1_FORNECE					,NIL})
		aAdd(aCab,{"N1_LOJA" 	, SD1->D1_LOJA					,NIL})
		aAdd(aCab,{"N1_NSERIE" 	, SD1->D1_SERIE					,NIL})
		aAdd(aCab,{"N1_NFISCAL" 	, SD1->D1_DOC						,NIL})
		aAdd(aCab,{"N1_CHASSIS" 	, SD1->D1_CHASSI					,NIL})
		aAdd(aCab,{"N1_PLACA" 	, SD1->D1_PLACA					,NIL})
		aAdd(aCab,{"N1_NFESPEC" 	, SF1->F1_ESPECIE 				,NIL})
		aAdd(aCab,{"N1_NFITEM" 	, SD1->D1_ITEM 					,NIL})
		
		If cPaisLoc == "BRA" //Impostos Brasil
			aAdd(aCab,{"N1_ICMSAPR"	, NoRound((nICMS / nAtfQtdIt),2)		,NIL})	
			aAdd(aCab,{"N1_CSTPIS"  , SF4->F4_CSTPIS 							,NIL})	
			aAdd(aCab,{"N1_CSTCOFI" , SF4->F4_CSTCOF 							,NIL})	
			aAdd(aCab,{"N1_ALIQPIS" , SD1->&(cCpBsPisEn) 						,NIL})	
			aAdd(aCab,{"N1_ALIQCOF" , SD1->&(cCpBsCofEn) 						,NIL})	
			aAdd(aCab,{"N1_CODCIAP" , cCiap										,NIL})	
			aAdd(aCab,{"N1_ORIGCRD" , If(Left(SD1->D1_CF,1)=="3","1","0")	,NIL})	
		EndIf
	EndIf

	//Preenchimento das Variaveis referentes ao SN3
	If cPaisLoc == "BRA"
		aAdd(aAux,{"N3_TIPO",IIf( lComponent , "03","01"),NIL})
	Else
		aAdd(aAux,{"N3_TIPO","01",NIL} )
	EndIf
	aAdd(aAux,{"N3_CCONTAB"	, ""									, NIL}) 	// Nao grava este campo em hipotese alguma pois o controle de classificacao do Ativo
	aAdd(aAux,{"N3_CCUSTO"	, SD3->D3_CC							, NIL})
	aAdd(aAux,{"N3_SUBCCON"	, SD3->D3_ITEMCTA						, NIL})
	aAdd(aAux,{"N3_CLVLCON"	, SD3->D3_CLVL						, NIL})
	
	nCusto:= Round(xMoeda(nCustoAux,nMoeda,1),aTamVOrig[1][2])
	aAdd(aAux,{"N3_VORIG1"	, nCusto	, NIL})
	
	nCusto:= Round(xMoeda(nCustoAux,nMoeda,2),aTamVOrig[2][2])
	aAdd(aAux,{"N3_VORIG2"	, nCusto	, NIL})
	
	nCusto:= Round(xMoeda(nCustoAux,nMoeda,3),aTamVOrig[3][2])
	aAdd(aAux,{"N3_VORIG3"	, nCusto	, NIL})
	
	nCusto:= Round(xMoeda(nCustoAux,nMoeda,4),aTamVOrig[4][2])
	aAdd(aAux,{"N3_VORIG4"	, nCusto	, NIL})
	
	nCusto:= Round(xMoeda(nCustoAux,nMoeda,5),aTamVOrig[5][2])
	aAdd(aAux,{"N3_VORIG5"	, nCusto	, NIL})
	
	// Tratamento para levar as entidades contabeis para classificacao de compras no ATF
	For nI := 5 to nQtdEnt
		cLoopEnt  := PADL(cValToChar(nI),2,"0")
		cEntConDB := "EC"+cLoopEnt+"DB"
		cEntConCR := "EC"+cLoopEnt+"CR"
		//Manter o filedpos pois as entidades contАbeis sЦo criadas pelo usuАrio.
		If SN3->(FieldPos("N3_"+cEntConDB)) > 0 .And. SN3->(FieldPos("N3_"+cEntConCR)) > 0
			aAdd(aAux,{"N3_"+cEntConDB, SD1->&("D3_"+cEntConDB), NIL  })
			aAdd(aAux,{"N3_"+cEntConCR, SD1->&("D3_"+cEntConCR), NIL  })
		EndIf
	Next nI
	aAdd(aItens,aAux)
	
	DbSelectArea("SN1")
	MSExecAuto({|x,y,z,w| Atfa012(x,y,z,w)},aCab,aItens,3,aParam)
	
	If lMsErroAuto
		lMsErroAuto := .F.
		DisarmTransaction()
		cFileLog := NomeAutoLog()
		If !Empty(cFileLog)
			MostraErro(cPath,cFileLog)
		Endif
	ElseIf lCusAtivo
		nQtdSD3:= SD3->D3_QUANT
		aCMNF := PegaCMAtu(SD3->D3_COD,SD3->D3_LOCAL)
		nCustoAux:= NoRound((aCMNF[1]*nQtdSD3) ,2)
		
		aCMNF[1]:= Round(xMoeda(nCustoAux,nMoeda,1),aTamVOrig[1][2]) 
		aCMNF[2]:= Round(xMoeda(nCustoAux,nMoeda,2),aTamVOrig[2][2])
		aCMNF[3]:= Round(xMoeda(nCustoAux,nMoeda,3),aTamVOrig[3][2])
		aCMNF[4]:= Round(xMoeda(nCustoAux,nMoeda,4),aTamVOrig[4][2])		
		aCMNF[5]:= Round(xMoeda(nCustoAux,nMoeda,5),aTamVOrig[5][2])
	EndIf
EndIf

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} A241GerImp()
FunГЦo que alimenta tabela de imposto para estorno de credito PIS/COFINS
@author Leonardo Quintania
@since 27/04/2015
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function A241GerImp(nValor,nDocumento,nImposto)
Local oModel  := FWLoadModel("FISA042")
Local nOpc 	:= 3
Local lRet		:= .T.

oModel:SetOperation(nOpc)

If (lRet := oModel:Activate()) //-- Ativa o modelo de dados 
	
	oModel:SetValue("FISA042MOD","CF5_FILIAL",xFilial("CF5"))
	oModel:SetValue("FISA042MOD","CF5_INDAJU","0")
	oModel:SetValue("FISA042MOD","CF5_PISCOF",IIF(nImposto==1,"0","1"))
	oModel:SetValue("FISA042MOD","CF5_VALAJU",nValor)
	oModel:SetValue("FISA042MOD","CF5_CODAJU","06")
	oModel:SetValue("FISA042MOD","CF5_NUMDOC",nDocumento)
	oModel:SetValue("FISA042MOD","CF5_DESAJU","Ajuste de Credito devido a geraГЦo de ativo de um produto em estoque")
	oModel:SetValue("FISA042MOD","CF5_DTREF" ,dDataBase) 
				
	If (lRet := oModel:VldData()) //-- Valida os dados e integridade conforme dicionario do Model
		lRet := oModel:CommitData() //-- Efetiva gravacao dos dados na tabela
	EndIf
	
	oModel:DeActivate() //-- Desativa o Model

EndIf

Return NIL

Function getvalid(cCampo)
Local cAlias := Alias(), nRec, nOrd, lRet, cValid

dbSelectArea("SX3")
dbSetOrder(2)
dbSeek(cCampo)

cValid := IIf(!Empty(SX3->X3_VALID),"("+Alltrim(SX3->X3_VALID)+")","")
cValid += IIf(!Empty(SX3->X3_VALID).And.!Empty(SX3->X3_VLDUSER)," .And. ","")
cValid += IIf(!Empty(SX3->X3_VLDUSER),"("+Alltrim(SX3->X3_VLDUSER)+")","")

Return cValid

//-------------------------------------------------------------------
/*/{Protheus.doc} A241VLDFan()
Valida se produto И fantasma 
@author Materiais 
@since 07/12/2016
@version 1.0
/*/
//-------------------------------------------------------------------

Function A241VLDFan(cProdFan)

Local aArea	:= GetArea()
Local aAreaSB1:= SB1->(GetArea())
Local lRet := .T.
Default cProdFan  := " "

If !Empty(cProdFan)
	dbSelectArea("SB1")
	dbSetOrder(1)
	MsSeek(xFilial("SB1")+cProdFan)
	If RetFldProd(cProdFan,"B1_FANTASM") == "S"
		Help(" ",1,"A241PROFAN")
		lRet := .F.
	EndIf
EndIf

RestArea( aAreaSB1 )
RestArea( aArea )
Return(lRet)

//Teste Rdmake.