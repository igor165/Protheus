#INCLUDE "MATA240.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWADAPTEREAI.CH"
Static cNumseq  := ""
/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё MATA240  Ё Autor Ё Eveli Morasco         Ё Data Ё 06/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de Movimentacoes Internas (Requisicoes/Devolucoes)Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Mata240(ExpA1,ExpN1)                                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpA1 = Array com lista de campos (SD3)  (Rot.Aut.)        Ё╠╠
╠╠Ё          Ё ExpN1 = Numero da opcao selecionada      (Rot.Aut.)        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Mata240(aRotAuto,nOpcAuto)
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define Variaveis                                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local nCnt
Local nPos
Local bBlock
Local aCores  := A240aCores()
Local cFiltro := ""
Local cAbatEst:= ""

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Pega a variavel que identifica se o calculo do custo e' :    Ё
//Ё               O = On-Line                                    Ё
//Ё               M = Mensal                                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE cCusMed  := GetMv("MV_CUSMED")
PRIVATE bCols    := {|x,y|aCols[x][y]}
PRIVATE cFunc    := NIL
PRIVATE aButtons := {}
PRIVATE aMemos   := {}
PRIVATE l240Auto := ( valType(aRotAuto) == "A" ), l250Auto := .F.
PRIVATE aAtuSD3  := {}  //Array p/ Atualizacao do campo D3_DTLANC
PRIVATE aCtbDia  := {}  //Array p/ Atualizacao do numero correlativo contАbil

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//|Pais Portugal - Verifica a existЙncia do parБmetro: MV_ABATEST   |
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cPaisLoc=="PTG"
	cAbatEst:=GetMV("MV_ABATEST",.F.,"")
	If Empty(cAbatEst)
		MsgAlert(STR0061)
		Return
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o custo medio e' calculado On-Line               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cCusMed == "O"
	PRIVATE nHdlPrv 			// Endereco do arquivo de contra prova dos lanctos cont.
	PRIVATE lCriaHeader := .T.	// Para criar o header do arquivo Contra Prova
	PRIVATE cLoteEst			// Numero do lote para lancamentos do estoque
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Posiciona numero do Lote para Lancamentos do Estoque         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SX5")
	dbSeek(xFilial()+"09EST")
	cLoteEst:=IIf(Found(),Trim(X5_DESCRI),"EST ")
	PRIVATE nTotal := 0 	// Total dos lancamentos contabeis
	PRIVATE cArquivo		// Nome do arquivo contra prova
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Estas variaveis indicam para as funcoes de validacao qual    Ё
//Ё programa as esta' chamando                                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE l240:=.T.,l250:=.F.,l241:=.F.,l242:=.F.,l261:=.F., l185:=.F.,l650:=.F.

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada para adicao de campos memo do usuario       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock( "MT240MEM" )
	aMemUser := ExecBlock( "MT240MEM", .F., .F. )
	If ValType( aMemUser ) == "A"
		AEval( aMemUser, { |x| AAdd( aMemos, x ) } )
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao com o Modulo de Transporte (TMS)                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If IntTMS()
	Aadd(aButtons	, {'CARGA'		,{||A103RATVEI()},STR0021,STR0041})   //"Rateio por Veiculo/Viagem - <F11>"
	Aadd(aButtons	, {'CARGASEQ'	,{||A103FROTA() },STR0022,STR0042})   //"Rateio por Frota"
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Botao para exportar dados para EXCEL                    Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If RemoteType() == 1
	aAdd(aButtons,{PmsBExcel()[1],{|| DlgToExcel({{"ENCHOICE",cCadastro,aGets,aTela}})},PmsBExcel()[2],PmsBExcel()[3]})
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define Array contendo as Rotinas a executar do programa      Ё
//Ё ----------- Elementos contidos por dimensao ------------     Ё
//Ё 1. Nome a aparecer no cabecalho                              Ё
//Ё 2. Nome da Rotina associada                                  Ё
//Ё 3. Usado pela rotina                                         Ё
//Ё 4. Tipo de Transa┤└o a ser efetuada                          Ё
//Ё    1 -Pesquisa e Posiciona em um Banco de Dados              Ё
//Ё    2 -Simplesmente Mostra os Campos                          Ё
//Ё    3 -Inclui registros no Bancos de Dados                    Ё
//Ё    4 -Altera o registro corrente                             Ё
//Ё    5 -Estorna registro selecionado gerando uma contra-partidaЁ
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE aRotina := MenuDef()

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Array contendo os campos aceitos no MATXATU                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE aAcho:={}

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Funcao que preenche o array AACHO                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
A240AAcho()

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta o cabecalho                                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SX2")
dbSeek("SD3")
dbSelectArea("SX3")
dbSeek("SD3")
While !Eof() .And. (X3_ARQUIVO == "SD3")
	If X3USO(X3_USADO) .And. cNivel >= X3_NIVEL .And. (Ascan(aAcho,Trim(X3_CAMPO)) == 0) .And. X3_PROPRI == "U"
		AADD(aAcho,TRIM(X3_CAMPO))
	EndIf
	dbSkip()
End

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define o cabecalho da tela de atualizacoes                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE cCadastro := OemToAnsi(STR0005) //"Movimentos Internos"

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define o cabecalho da tela de atualizacoes                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Pergunte("MTA240",.F.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ativa tecla F12 para acionar perguntas se nao for rotina autom.Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !l240Auto
	Set Key VK_F12 TO MTA240PERG()
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada para pre-validar os dados a serem exibidos. Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("M240BROW")
	ExecBlock("M240BROW",.F.,.F.)
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Agroindustria  									                 Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If FindFunction("OGXUtlOrig") //Encontra a funГЦo
	If OGXUtlOrig() //Verifica se existe
	   If FindFunction("OGX170")//Encontra a funГЦo
	      cFiltro := OGX170()
			If Valtype(cFiltro) <> "C"
				cFiltro := ""
			EndIf
	   EndIf
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada para verificacao de filtros na Mbrowse      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If  ExistBlock("M240FILB")
	cFiltro := ExecBlock("M240FILB",.F.,.F.)
	If Valtype(cFiltro) <> "C"
		cFiltro := ""
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Endereca a funcao de BROWSE                                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If l240Auto
	MsRotAuto(If(nOpcAuto!=Nil,nOpcAuto,3),aRotAuto,"SD3")
Else
	If nOpcAuto<>Nil
		dbSelectArea("SD3")
		nPos := Ascan(aRotina,{|x| x[4]== nOpcAuto})
		If ( nPos # 0 )
			bBlock := &( "{ |x,y,z,k| " + aRotina[ nPos,2 ] + "(x,y,z,k) }" )
			Eval( bBlock,Alias(),SD3->(Recno()),nPos)
		EndIf
	Else
		mBrowse( 6, 1,22,75,"SD3",,,,,,aCores,,,,,,,, IF(!Empty(cFiltro),cFiltro, NIL))
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Desativa tecla que aciona perguntas                            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Set Key VK_F12 To
EndIf
Return Nil

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240VisualЁ Autor Ё Eveli Morasco         Ё Data Ё 06/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa para visualizar requisicoes e devolucoes internas Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A240Visual(ExpC1,ExpN1,ExpN2)                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Numero da opcao selecionada                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Visual(cAlias,nReg,nOpc)
Local aUsrBut	   := {}
Local aTelaButtons := {}
Local nX		   := 0

Private aRatVei    := {}
Private aRatFro    := {}
Private aArraySDG  := {}

aButtons	 := IF(Type("aButtons") == "U", {}, aButtons)
aTelaButtons := ACLONE(aButtons)

dbSelectArea(cAlias)
If SubStr(D3_CF,1,2) == "PR" .Or. Subs(D3_CF,3,1)$"2457"
	Help(" ",1,"A240NAO")
	Return
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao com o Modulo de Transporte (TMS)                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If IntTMS()
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se foi informado Rateio de Viagem/Veiculo ou Rateio Ё
	//Ё de Frota para o Produto                                      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	a240VerSDG(SD3->D3_NUMSEQ)
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada para criacao de botoes do usuario  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
If (ExistBlock( "M240BUT" ))
	aUsrBut := ExecBlock("M240BUT",.F.,.F.,{nOpc})
	If ValType(aUsrBut) == "A"
		For nx:=1 to Len(aUsrBut)
			AADD(aTelaButtons,aUsrBut[nx])
		Next
	EndIf
EndIf

AxVisual(cAlias,nReg,nOpc,aAcho,,,,aTelaButtons)

Return Nil
/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240IncluiЁ Autor Ё Eveli Morasco         Ё Data Ё 06/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa para inclusao de requisicoes e devolucoes internasЁ╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A240Inclui(ExpC1,ExpN1,ExpN2)                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Numero da opcao selecionada                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum	                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Inclui(cAlias,nReg,nOpc)
Local nOpca,lDigita,lAglutina
Local lRet			:= .T.
Local dDataFec		:= MVUlmes()
Local nRecSD3		:= 0
Local nX			:= 0
Local aUsrBut		:= {}
Local aTelaButtons	:= {}
Local aCMNF			:= {0,0,0,0,0}
Local lAuto			:= .F.
Local lWmsNew		:= SuperGetMV("MV_WMSNEW",.F.,.F.)
Local lWmsSD3		:= Iif(Type('lExecWms')=='L', lExecWms, .F.)

Private aRatVei    := {}
Private aRatFro    := {}
Private aArraySDG  := {}
Private cA240End   := If(!(Type('cA240End')=='U'), cA240End, CriaVar('DB_LOCALIZ'))

//-- Variavel utilizada pela integracao com SIGAMNT
Private aMntGarant := {}

// -- Protecao quando rotina for executada em modo automatico
If Type("aCtbDia") == "U"
	aCtbDia := {}
EndIf

If Type("l185Auto") == "U"
	l185Auto := .F.
EndIf

If Type("aAutoAFH") <> "U"
	lAuto:= aAutoAFH <> NIL .And. ValType(aAutoAFH) = 'A'
EndIf

aButtons	 := IF(Type("aButtons") == "U", {}, aButtons)
aTelaButtons := ACLONE(aButtons)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verificar data do ultimo fechamento em SX6.                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If dDataFec >= dDataBase
	Help ( " ", 1, "FECHTO" )
	Return
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ativa tecla F4 para comunicacao com Saldos dos Lotes         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( ! l240Auto )
	Set Key VK_F4 TO ShowF4()
EndIf

If ( Type("l240Auto") # "L" .or. !l240Auto )
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Filtra tabela de tipos de movimentacao para aparecerem apenas req/dev Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SF5")

	If Upper(AllTrim(cFunc)) == "A185ATUSD3"
		cCond := 'F5_TIPO == "R"'
	Else
		cCond := 'F5_TIPO == "R" .or. F5_TIPO == "D"'
	EndIf
	MsFilter(cCond)

	dbGoTop()
	dbSelectArea( cAlias )
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa a gravacao dos lancamentos do SIGAPCO          Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoIniLan("000151")

//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada para criacao de botoes do usuario  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
If (ExistBlock( "M240BUT" ))
	aUsrBut := ExecBlock("M240BUT",.F.,.F.,{nOpc})
	If ValType(aUsrBut) == "A"
		For nx:=1 to Len(aUsrBut)
			AADD(aTelaButtons,aUsrBut[nx])
		Next
	EndIf
EndIf

If !l240Auto
	nOpca := AxInclui(cAlias,nReg,nOpc,aAcho,cFunc,,"A240TudoOk()",,"A240Commit()",aTelaButtons)
Else
	nOpca := AxIncluiAuto(cAlias,"A240TudoOk()","A240Commit()")
EndIf

//Somente executa as ordens de serviГo do WMS, apСs a transaГЦo
//Pois a execuГЦo dos serviГos no WMS tem transaГЦo prСpria
If IntWMS() .And. !lWmsNew .Or. (lWmsNew .And. !lWmsSD3)
	WmsExeServ()
EndIf

//-- Finaliza a gravacao dos lancamentos do SIGAPCO
PcoFinLan("000151")

//-- Salva o registro gerado para novas atualizacoes
If nOpca > 1 .Or. l240Auto
	a240Comum(aAtuSD3,aCtbDia)
	lRet := .F.
Else
	If ( __lSX8 )
		RollBackSX8()
	EndIf
	//-- Apaga lancamentos de bloqueio nao utilizados gerados no SIGAPCO
	PcoFreeBlq("000151",.T.)
EndIf
If nOpca == 0
	lRet:=.F.
EndIf

//-- Ponto de entrada para tratamento especifico do usuario
//-- apos a inclusao
If nOpca = 1 .And. ExistBlock('MT240INC')
	ExecBlock('MT240INC', .F., .F.)
EndIf

//-- Ponto de entrada para tratamento especifico do usuario
//-- no momento do Cancelamento
If nOpca > 1 .And. ExistBlock('MT240CAN')
	ExecBlock('MT240CAN', .F., .F.)
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Gravacao da CAT83                                      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If nOpca == 1 .And. FindFunction("V240CAT83") .And. V240CAT83()
	If Empty(SD3->D3_CODLAN)
		RecLock("SD3", .F.)
		SD3->D3_CODLAN := A240CAT83()
		MsUnLock()
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Gravacao de campos da Guia de Abate 				   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SF5")
If cPaisLoc =="PTG"  .And. nOpca == 1 .And. SF5->F5_PERDA$"OB|EX"
	RecLock("SD3", .F.)
	Replace SD3->D3_STATUS With SF5->F5_PERDA
	Replace SD3->D3_NRABATE With A240NGUIA(SD3->D3_TM,.T.)
	MsUnLock()
EndIf

If IntePMS() .AND. l185Auto //Garante que se nЦo possuir dados do projeto campos ficarЦo em branco.
	If lAuto
		If Empty(aDadosPrj[1])
			SD3->D3_PROJPMS := aDadosPrj[1]
			SD3->D3_TASKPMS := aDadosPrj[2]
		EndIf
	Else
		SD3->D3_PROJPMS := ""
		SD3->D3_TASKPMS := ""
	EndIf
EndIf

dbSelectArea("SF5")
dbClearFilter()
dbGoTop()
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Desativa tecla F4 para comunicacao com Saldos dos Lotes      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
SET KEY VK_F4 TO
Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ёa240EstornЁ Autor Ё Eveli Morasco         Ё Data Ё 07/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de estorno de Requisicoes e Devolucoes            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё a240Estorn(ExpC1,ExpN1,ExpN2)                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Numero da opcao selecionada                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum	                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function a240Estorn(cAlias,nReg,nOpc)
/*
   VariАvel nRegSD3 И utilizada para posicionar no registro correto, quando for realizar o estorno.
   Quando И executado o estorno atravИs de rotina automАtica, a funГЦo MsRotAuto pode desposicionar
   do registro da SD3. Utilizado para integraГЦo TOTVS MES.
*/
Local lReposic   := Iif(Type("nRegSD3")=="N" .And. nRegSD3 > 0, SD3->(dbGoTo(nRegSD3)), .F.)
Local aAC 		   := {STR0006,STR0007}	//"Abandona"###"Confirma"
Local dDataFec     := MVUlmes()
Local cConfirma    := STR0008 //"Quanto ao estorno?"
Local cNumSeq      := ""
Local cProduto     := ""
Local cCQ			:= GetMvNNR('MV_CQ','98')
Local aAreaSD3     := {}
Local lInventario  := .F.
Local aUsrBut	   := {}
Local aTelaButtons := {}
Local nX		   := 0
Local nOpcA,lDigita,lAglutina
Local oDlg
Local lRet         := .T.
Local aObjects 	   := {}
Local aSize    	   := {}
Local aInfo    	   := {}

Private aRatVei    := {}
Private aRatFro    := {}
Private aArraySDG  := {}
aButtons 	 := IF(Type("aButtons") == "U", {}, aButtons)
aTelaButtons := ACLONE(aButtons)

//здддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica se o usuario tem permissao de delecao. Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддды
If lRet
	If !(lRet := MaAvalPerm(1,{SD3->D3_COD,"MTA240",5}))
		Help(,,1,'SEMPERM')
	EndIf
EndIf

dbSelectArea(cAlias)
If Subs(D3_CF,1,2) == "PR" .Or. Subs(D3_CF,3,1)$"12457"
	Help(" ",1,"A240NAO")
	lRet := .F.
EndIf

If lRet .And. (D3_ESTORNO == "S" .Or. D3_CF == "499" .Or. D3_CF == "999")
	Help(" ",1,"A240ESTORN")
	lRet := .F.
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o Movimento foi gerado pelo SIGAEIC                          |
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cPaisLoc == "BRA" .And. SD3->(ColumnPos("D3_HAWB")) > 0
	If !Empty(SD3->D3_HAWB)
		Help(" ",1,"DI161HAWB")
		Return
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica si el movimento foe generado por Pedimentos                     |
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cPaisLoc == "MEX" .And. SD3->(ColumnPos("D3_NUMPED")) > 0
	If !Empty(SD3->D3_NUMPED)
		Help(" ",1,"Movimiento generado por un pedimento. No permite reversiСn")
		Return
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica calendАrio contАbil                Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet
	lRet := CtbValiDt(Nil,SD3->D3_EMISSAO,,Nil ,Nil ,{"EST001"})
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o Movimento foi gerado pelo MATA185                          |
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. !l185 .And. AvalMovSA(D3_COD,D3_NUMSEQ)
	Help(" ",1,"A185ESTOR")
	lRet := .F.
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё AvalMovDiv - Funcao utilizada para avaliar possiveis divergencias de     |
//|              saldo no estorno do movimento selecionado.                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. AvalMovDiv(D3_COD,D3_LOCAL,D3_LOTECTL,D3_NUMLOTE,D3_NUMSEQ,,SD3->D3_TM)
	lRet := .F.
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o Movimento foi gerado pelo MATA907                          |
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. AvalMovSelo(D3_COD,D3_TM)
	Help(" ",1,"SELOFISCA")
	lRet := .F.
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o produto est═ sendo inventariado.      Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. BlqInvent(D3_COD,D3_LOCAL,,D3_LOCALIZ)
	Help(" ",1,"BLQINVENT",,D3_COD+OemToAnsi(STR0016)+D3_LOCAL,1,11)
	lRet := .F.
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Analisa se o tipo do armazem permite a movimentacao |
//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. AvalBlqLoc(D3_COD,D3_LOCAL,Nil,,,,,,,D3_OP)
	lRet := .F.
EndIf

//здддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a OP ja' foi encerrada Ё
//юдддддддддддддддддддддддддддддддддддды
dbSelectArea("SC2")
dbSeek(xFilial("SC2")+SD3->D3_OP)
If lRet .And. !Empty(C2_DATRF)
	Help(" ",1,"MA240OPENC")
	dbSelectArea("SD3")
	lRet := .F.
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verificar data do ultimo fechamento em SX6.                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. dDataFec >= SD3->D3_EMISSAO
	Help ( " ", 1, "FECHTO" )
	lRet := .F.
EndIf

Private aTELA[0][0],aGETS[0]
If  lRet .And. !l240Auto
	RegToMemory("SD3",.F.)
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao com o Modulo de Transporte (TMS)                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If  lRet .And. IntTMS()
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se foi informado Rateio de Viagem/Veiculo ou Rateio Ё
	//Ё de Frota para o Produto                                      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	a240VerSDG(SD3->D3_NUMSEQ)
	If !A240TmsVld()
		lRet := .F.
	EndIf
EndIf

If lRet .And. !NGSD3TQN()
	lRet := .F.
Endif

//------------------------------------------------------
// Caso haja EPI entregue a algum funcionario, nЦo
// poderА realizar o estorno (SIGAMDT)
// MV_NGMDTES deverА estar habilitado
//------------------------------------------------------
If lRet .And. FindFunction('MDTValEst') .And. !MDTValEst( SD3->D3_NUMSEQ , SD3->D3_FILIAL , 1 )
	lRet := .F.
Endif

If lRet

	//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Ponto de entrada para criacao de botoes do usuario  Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If (ExistBlock( "M240BUT" ))
		aUsrBut := ExecBlock("M240BUT",.F.,.F.,{nOpc})
		If ValType(aUsrBut) == "A"
			For nx:=1 to Len(aUsrBut)
				AADD(aTelaButtons,aUsrBut[nx])
			Next
		EndIf
	EndIf

	Do While .T.
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Inicializa a gravacao dos lancamentos do SIGAPCO          Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		PcoIniLan("000151")

		If !l240Auto
		//зддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Ajusta a largura para o tamanho padrao Protheus Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддды
		aSize := MsAdvSize()
		aObjects := {}
		AAdd( aObjects, { 100, 100, .T., .T. } )
		aInfo    := { aSize[1], aSize[2], aSize[3], aSize[4], 2, 2 }
		aPosObj := MsObjSize( aInfo, aObjects )

			DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0005) FROM aSize[7],0 TO aSize[6],aSize[5] OF oMainWnd PIXEL
			nOpcA:=EnChoice( cAlias, nReg, nOpc, aAC,"AC",OemToAnsi(STR0015),aAcho,aPosObj[1]) //"Quanto ao estorno?"
			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpca := 2,oDlg:End()},{|| nOpca := 1,oDlg:End()},,aTelaButtons)
		Else
			nOpca := 2
		EndIf

		If nOpcA == 2
			Begin Transaction
				//Estorna Ativo
				If SF5->(MsSeek(xFilial("SF5")+SD3->D3_TM))
					If SF4->(MsSeek(xFilial("SF4")+SF5->F5_TEATF))
						If SF5->F5_GERAATF == "1" .And. cPaisLoc == "BRA"
							lRet:= A241AvalATF(SF4->F4_BENSATF == "1",SF4->F4_COMPONE == "1",5)
						EndIf
					EndIf
				EndIf
				If lRet
					lRet := A240EstrOk(NIL,NIL,NIL,NIL,NIL,NIL,NIL,NIL,@lInventario,l240auto)
				EndIf
				If lRet
					//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Envia p/func. de atualizacoes (SD3,SB2,SB3,SC2,..) Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
					a240DesAtu(lInventario)
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Verifica se o custo medio e' calculado On-Line               Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If cCusMed == "O" .And. nTotal > 0
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Inicializa perguntas deste programa                          Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё mv_par01 - Se mostra e permite digitar lancamentos contabeis   Ё
						//Ё mv_par02 - Se deve aglutinar os lancamentos contabeis          Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						pergunte("MTA240",.F.)
						lDigita   := IIf(mv_par01 == 1,.T.,.F.)
						lAglutina := IIf(mv_par02 == 1,.T.,.F.)
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Se ele criou o arquivo de prova ele deve gravar o rodape'    Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						RodaProva(nHdlPrv,nTotal)
						If UsaSeqCor()
							cCodDiario := ctbaVerdia()
							aCtbDia := {{"SD3",SD3->(RECNO()),cCodDiario,"D3_NODIA","D3_DIACTB"}}
						Else
						    aCtbDia := {}
						EndIF
						If cA100Incl(cArquivo,nHdlPrv,3,cLoteEst,lDigita,lAglutina,,,,,,aCtbDia)
							If !Empty(SD3->D3_DTLANC)
								RecLock("SD3",.F.)
								Replace SD3->D3_DTLANC With ddatabase
								MsUnlock()
							EndIf
						EndIf
						lCriaHeader := .T.
						nTotal 	    := 0 // Total dos lancamentos contabeis
					EndIf
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Finaliza a gravacao dos lancamentos e apaga lancamentos nao utilizados gerados no SIGAPCO Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					PcoFinLan("000151")
				EndIf
			End Transaction
			Exit
		Else
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Finaliza a gravacao dos lancamentos e apaga lancamentos nao utilizados gerados no SIGAPCO Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			PcoFinLan("000151")
			Exit
		EndIf
	EndDo

Endif

dbSelectArea(cAlias)

Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240IniCpoЁ Autor Ё Eveli Morasco         Ё Data Ё 07/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa que inicializa alguns campos                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240IniCpo()
Local cLocaliza:= ''
Local cLoteDigi:= ''
Local cNumSerie:= ''
Local cLote    := ''
Local lRet     := .T.
Local dEmissao := dDataBase
Local nEndereco,nLinha,cCod,nQuant,cLocal,nQuant2UM,nX
Local aCTBEnt	:= CTBEntArr()
Local lWmsNew   := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local nSaldoEnd := 0
Local cOrdem    := ''
Local cLocCQ	:= GetMVNNR("MV_CQ","98")

cCod := M->D3_COD
If l241.Or.l242
	cLoteDigi := If(!Empty(nPosLotCTL),aCols[n,nPosLotCTL],CriaVar('D3_LOTECTL'))
	cLote     := If(!Empty(nPosLote),aCols[n,nPosLote],CriaVar('D3_NUMLOTE'))
	cLocaliza := If(!Empty(nPosLocali),aCols[n,nPosLocali],CriaVar('D3_LOCALIZ'))
	cNumSerie := If(!Empty(nPosNumSer),aCols[n,nPosNumSer],CriaVar('D3_NUMSERI'))
	nQuant    := If(!Empty(nPosQuant),aCols[n,nPosQuant],UserException('D3_QUANT'+OemToAnsi(STR0019)))
	nQuant2UM := If(!Empty(nPosQtSegum),aCols[n,nPosQtSegum],0)
	cLocal    := If(!Empty(nPosLocal),aCols[n,nPosLocal],UserException('D3_LOCAL'+OemToAnsi(STR0019)))
	cOrdem    := If(Type("nPosOp") == "N" .And. !Empty(nPosOp),aCols[n,nPosOP],CriaVar('D3_OP'))
	If l241
		dEmissao  := If(Type('dA241Data') == "D",dA241Data,dDataBase)
	ElseIf l242
		dEmissao  := If(Type('dEmis260') == "D",dEmis260,dDataBase)
	EndIf
Else
	If l250 .And. Len(oGrade:aColsGrade) == 0
		lRet :=aProdGrade()
		If !lRet
			Return(lRet)
		EndIf
	EndIf
	cLoteDigi := M->D3_LOTECTL
	cLote     := M->D3_NUMLOTE
	cLocaliza := M->D3_LOCALIZ
	cNumSerie := M->D3_NUMSERI
	nQuant    := M->D3_QUANT
	nQuant2UM := M->D3_QTSEGUM
	cLocal    := M->D3_LOCAL
	cTM       := M->D3_TM
	dEmissao  := M->D3_EMISSAO
	cOrdem    := M->D3_OP
EndIf

If (l240.or.l241) .And. (GetMV("MV_ESTNEG") == "N" .Or. Localiza(cCod,.T.) .Or. Rastro(cCod)) .And. !IsProdMod(cCod) .And. !Empty(nQuant)  .And. (Type('l240Auto')#'L'.Or.!l240Auto) .And. (Type('l241Auto')#'L'.Or.!l241Auto)
	If cTM > "500"
		dbSelectArea("SB2")
		MsSeek(xFilial("SB2")+cCod+cLocal)
		dbSelectArea("SD3")
		If !MtAvlNSer(cCod,cNumSerie,nQuant,nQuant2UM)
			Return .F.
		EndIf
		If (SaldoMov(Nil,Nil,Nil,mv_par03==1,Nil,Nil,Nil,dEmissao) - nQuant) < 0
			cHelp:=STR0067 + AllTrim(SB2->B2_COD) + STR0068 + AllTrim(SB2->B2_LOCAL) //"Produto: "--" Local: "
			Help(" ",1,"MA240NEGAT",,cHelp,4,1)
			Return .F.
		EndIf
		If (!Empty(cLocaliza) .Or. !Empty(cNumSerie)) .And. Localiza(cCod,.T.)
			If !(lWmsNew .And. IntWMS(cCod))
				/*
					Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
					NecessАrio para o projeto de integraГЦo TOTVS MES.
				*/
				nSaldoEnd := SaldoSBF(cLocal,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote,,,,cOrdem)
			Else
				nSaldoEnd := WmsSldD14(cLocal,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote)
			EndIf
			If QtdComp(nSaldoEnd) < QtdComp(nQuant)
				Help(" ",1,"SALDOLOCLZ")
				Return .F.
			EndIf
		EndIf
	EndIf
EndIf

Do Case
Case l242
	dbSelectArea("SB1")
	If MsSeek(xFilial("SB1")+cCod)
		If !Empty(nPosLocal)
			aCols[n][nPosLocal]  := RetFldProd(SB1->B1_COD,"B1_LOCPAD")
		EndIf
	Else
		Help(" ",1,"NOFOUNDSB1")
		Return(.F.)
	EndIf
Case l241
	lReferencia := MatGrdPrrf(@cCod)
	dbSelectArea("SB1")
	If MsSeek(xFilial("SB1")+cCod)
		If !lReferencia
			If !ExistCpo("SB1",M->D3_COD)
				Return .F.
			EndIf
		EndIf
		If If(type("l241Auto") == "L" .And. l241Auto,Empty(aCols[n][nPosUm]),!Empty(nPosUM))
			aCols[n][nPosUm]     := B1_UM
		EndIf
		If If(type("l241Auto") == "L" .And. l241Auto,Empty(aCols[n][nPosConta]),!Empty(nPosConta))
			aCols[n][nPosConta]  := B1_CONTA
		EndIf
		If If(type("l241Auto") == "L" .And. l241Auto,Empty(aCols[n][nPosLocal]),!Empty(nPosLocal))
			aCols[n][nPosLocal]  := RetFldProd(SB1->B1_COD,"B1_LOCPAD")
		EndIf
		If If(type("l241Auto") == "L" .And. l241Auto,Empty(aCols[n][nPosDesc]),!Empty(nPosDesc))
			aCols[n][nPosDesc]	:= B1_DESC
		EndIf
		If If(type("l241Auto") == "L" .And. l241Auto,Empty(aCols[n][nPosGrupo]),!Empty(nPosGrupo))
			aCols[n][nPosGrupo]	:= B1_GRUPO
		EndIf
		If If(type("l241Auto") == "L" .And. l241Auto,Empty(aCols[n][nPosSegUm]),!Empty(nPosSegUm))
			aCols[n][nPosSegUm]	:= B1_SEGUM
		EndIf
		If If(type("l241Auto") == "L" .And. l241Auto,Empty(aCols[n][nPosQtSegum]),!Empty(nPosQtSegum))
			aCols[n][nPosQtSegum]	:= If(!Empty(aCols[n][nPosQtSegum]), aCols[n][nPosQtSegum], 0)
		EndIf
		If Rastro(cCod)
			If cTM <= "500"
				If If(type("l241Auto") == "L" .And. l241Auto,Empty(aCols[n][nPosDValid]),!Empty(nPosDValid))
					aCols[n][nPosDValid]	:= dDataBase + B1_PRVALID
				EndIf
			Else
				If !Empty(nPosLote) .And. !(type("l241Auto") == "L" .And. l241Auto)
					aCols[n][nPosLote]	:= CriaVar("D3_NUMLOTE")
				EndIf
				If !Empty(nPosLotCTL) .And. !(type("l241Auto") == "L" .And. l241Auto)
					aCols[n][nPosLotCTL]	:= CriaVar("D3_LOTECTL")
				EndIf
				If !Empty(nPosDValid) .And. !(type("l241Auto") == "L" .And. l241Auto)
					aCols[n][nPosDValid]	:= CriaVar("D3_DTVALID")
				EndIf
			EndIf
		Else
			If !Empty(nPosDValid) .And. !(type("l241Auto") == "L" .And. l241Auto)
				aCols[n][nPosDValid]	:= CriaVar("D3_DTVALID")
			EndIf
		EndIf

		For nX := 1 To Len(aCTBEnt)
			If GDFieldPos("D3_EC"+aCTBEnt[nX]+"CR") > 0
				aCols[n,GDFieldPos("D3_EC"+aCTBEnt[nX]+"CR")] := &("B1_EC"+aCTBEnt[nX]+"CR")
				aCols[n,GDFieldPos("D3_EC"+aCTBEnt[nX]+"DB")] := &("B1_EC"+aCTBEnt[nX]+"DB")
			EndIf
		Next nX

		A240SegUm()
		
		//-- Se devolucao de item negativo (coproduto) e CQ configurado, gatilha armazem de CQ
		If cTM <= '500' .And. IsProdCoPR(aCols[n,nPosCod],aCols[n,nPosOP],aCols[n,nPosTRT]) .And. fEnvCQProd(aCols[n,nPosCod],cTM,.F.,.T.)
			aCols[n,nPosLocal] := cLocCQ
		EndIf
	Else
		Help(" ",1,"NOFOUNDSB1")
		Return .F.
	EndIf
Case l240
	dbSelectArea("SB1")
	If MsSeek(xFilial("SB1")+M->D3_COD)
		If !ExistCpo("SB1",M->D3_COD)
			Return .F.
		EndIf
		M->D3_DESCRI := B1_DESC
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "D3_DESCRI" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_DESC
		EndIf

		If (type("l240Auto") != "L" .or. !l240Auto)  .or. Empty(M->D3_UM)
			M->D3_UM := B1_UM
		EndIf
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,5) == "D3_UM" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_UM
		EndIf

		If (type("l240Auto") != "L" .or. !l240Auto)  .or. Empty(M->D3_QTSEGUM)
			M->D3_QTSEGUM := CriaVar("D3_QTSEGUM")
		EndIf
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,5) == "D3_QTSEGUM" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := CriaVar("D3_QTSEGUM")
		EndIf

		If (type("l240Auto") != "L" .or. !l240Auto)  .or. Empty(M->D3_CONTA)
			M->D3_CONTA := B1_CONTA
		EndIf
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,8) == "D3_CONTA" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_CONTA
		EndIf

		If (type("l240Auto") != "L" .or. !l240Auto)  .or. Empty(M->D3_CC)
			M->D3_CC := B1_CC
		EndIf
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,5) == "D3_CC" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_CC
		EndIf

		If (type("l240Auto") != "L" .or. !l240Auto)  .or. Empty(M->D3_LOCAL)
			M->D3_LOCAL := RetFldProd(SB1->B1_COD,"B1_LOCPAD")
		EndIf
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,8) == "D3_LOCAL" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := RetFldProd(SB1->B1_COD,"B1_LOCPAD")
		EndIf

		If (type("l240Auto") != "L" .or. !l240Auto)  .or. Empty(M->D3_GRUPO)
			M->D3_GRUPO := B1_GRUPO
		EndIf
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,8) == "D3_GRUPO" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_GRUPO
		EndIf

		If (type("l240Auto") != "L" .or. !l240Auto) .or. Empty(M->D3_TIPO)
			M->D3_TIPO  := B1_TIPO
		EndIf
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,7) == "D3_TIPO" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_TIPO
		EndIf

		If Rastro(cCod)
			If cTM <= "500"
				M->D3_DTVALID	:= dDataBase + B1_PRVALID
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_DTVALID" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->D3_DTVALID)
				EndIf
			Else
				If (type("l240Auto") != "L" .or. !l240Auto) .or. Empty(M->D3_NUMLOTE)
					M->D3_NUMLOTE	:= CriaVar("D3_NUMLOTE")
				EndIf
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_NUMLOTE" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_NUMLOTE
				EndIf
				If (type("l240Auto") != "L" .or. !l240Auto) .or. Empty(M->D3_LOTECTL)
					M->D3_LOTECTL	:= CriaVar("D3_LOTECTL")
				EndIf
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_LOTECTL" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_LOTECTL
				EndIf
				If (type("l240Auto") != "L" .or. !l240Auto) .or. Empty(M->D3_DTVALID)
					M->D3_DTVALID	:= CriaVar("D3_DTVALID")
				EndIf
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_DTVALID" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->D3_DTVALID)
				EndIf
			EndIf
		EndIf
		For nX := 1 To Len(aCTBEnt)
			If SD3->(FieldPos("D3_EC"+aCTBEnt[nX]+"CR")) > 0
				&("M->D3_EC"+aCTBEnt[nX]+"CR") := &("B1_EC"+aCTBEnt[nX]+"CR")
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_EC"+aCTBEnt[nX]+"CR" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := &("B1_EC"+aCTBEnt[nX]+"CR")
				EndIf
				&("M->D3_EC"+aCTBEnt[nX]+"DB") := &("B1_EC"+aCTBEnt[nX]+"DB")
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_EC"+aCTBEnt[nX]+"DB" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := &("B1_EC"+aCTBEnt[nX]+"DB")
				EndIf
			Endif
		Next nX

		A240SegUm()
		
		//-- Se devolucao de item negativo (coproduto) e CQ configurado, gatilha armazem de CQ
		If M->D3_TM <= '500' .And. IsProdCoPR(M->D3_COD,M->D3_OP,M->D3_TRT) .And. fEnvCQProd(M->D3_COD,M->D3_TM,.F.,.T.)
			M->D3_LOCAL := cLocCQ
			nEndereco := Ascan(aGets,{ |x| Subs(x,9,8) == "D3_LOCAL" } )
			If nEndereco > 0
				aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := cLocCQ
			EndIf
		EndIf
	Else
		Help(" ",1,"NOFOUNDSB1")
		Return .F.
	EndIf
Case l250
	If Empty(M->D3_OP)
		dbSelectArea("SB1")
		MsSeek(xFilial("SB1")+M->D3_COD)

		M->D3_DESCRI := B1_DESC
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "D3_DESCRI" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_DESC
		EndIf

		M->D3_UM := B1_UM
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,5) == "D3_UM" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_UM
		EndIf

		M->D3_LOCAL := RetFldProd(SB1->B1_COD,"B1_LOCPAD")
		If fEnvCQProd(M->D3_COD, M->D3_TM, .F.)
			aTam := TamSx3("D3_LOCAL")
			M->D3_LOCAL := GetMvNNR('MV_CQ','98')
		EndIf
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,8) == "D3_LOCAL" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := RetFldProd(SB1->B1_COD,"B1_LOCPAD")
		EndIf

		M->D3_GRUPO := B1_GRUPO
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,8) == "D3_GRUPO" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_GRUPO
		EndIf

		M->D3_TIPO  := B1_TIPO
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,7) == "D3_TIPO" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_TIPO
		EndIf

		If cTM <= "500" .And. Rastro(cCod)
			M->D3_DTVALID	:= dDataBase + B1_PRVALID
			nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_DTVALID" } )
			If nEndereco > 0
				aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->D3_DTVALID)
			EndIf
		EndIf
			For nX := 1 To Len(aCTBEnt)
				If SD3->(FieldPos("D3_EC"+aCTBEnt[nX]+"CR")) > 0
					&("M->D3_EC"+aCTBEnt[nX]+"CR") := &("B1_EC"+aCTBEnt[nX]+"CR")
					nEndereco := Ascan(aGets,{ |x| Subs(x,9,7) == "D3_EC"+aCTBEnt[nX]+"CR" } )
					If nEndereco > 0
						aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := &("B1_EC"+aCTBEnt[nX]+"CR")
					EndIf
					&("M->D3_EC"+aCTBEnt[nX]+"DB") := &("B1_EC"+aCTBEnt[nX]+"DB")
					nEndereco := Ascan(aGets,{ |x| Subs(x,9,7) == "D3_EC"+aCTBEnt[nX]+"DB" } )
					If nEndereco > 0
						aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := &("B1_EC"+aCTBEnt[nX]+"DB")
					EndIf
				Endif
			Next nX

		A240SegUm()

	EndIf
EndCase

If l250
	If !Empty(D3_OP)
		cOldAlias:=Alias()
		nOldRecno:=Recno()
		nOldOrder:=IndexOrd()
		dbSelectArea("SC2")
		dbSetOrder(1)
		dbSeek(xFilial("SC2")+Alltrim(M->D3_OP))
		If Found()
			If C2_PRODUTO != cCod
				dbSelectArea(cOldAlias)
				dbSetOrder(nOldOrder)
				MsGoTo(nOldRecno)
				Help(" ",1,"MA240PROD")
				M->D3_COD:=SC2->C2_PRODUTO
				Keyboard CHR(13)
				Return .F.
			EndIf
		EndIf
		dbSelectArea(cOldAlias)
		dbSetOrder(nOldOrder)
		MsGoTo(nOldRecno)
	EndIf
End
Return .T.

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240TM    Ё Autor Ё Eveli Morasco         Ё Data Ё 14/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa que verifica o TM digitado                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A240TM(ExpL1)                                        	  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpN1 = Indica se reseta cTipoant (TM anterior)            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240TM(lReset)
Static cTipoAnt:= NIL
Local cVar,cCod,nQuant,nQuant2UM,cLocal,i,lShow:=.F.
Local lRet		:= .T.
Local cLocaliza	:= ""
Local cLoteDigi	:= ""
Local cNumSerie	:= ""
Local cLote		:= ""
Local dEmissao	:= ctod('')
Local lWmsNew	:= SuperGetMV("MV_WMSNEW",.F.,.F.)
Local nSaldoEnd	:= 0
Local lEstNeg	:= GetMV("MV_ESTNEG") == "N"
Local lTpSaldo  := GetMv("MV_TPSALDO") == "S"
Local cMvCq		:= GetMVNNR("MV_CQ","98") 

If lReset # Nil .And. lReset
	cTipoAnt:= NIL
	Return(.T.)
EndIf

cCod     := IIf(l240,M->D3_COD,CriaVar("D3_COD"))
nQuant   := IIf(l240,M->D3_QUANT,0)
nQuant2Um:= IIf(l240,M->D3_QTSEGUM,0)
cTM      := IIf(l240,M->D3_TM,cTm)
cLocal   := IIf(l240,M->D3_LOCAL,CriaVar("D3_LOCAL"))
cOp      := IIf(l240,M->D3_OP,CriaVar("D3_OP"))
cLocaliza:= IIf(l240,M->D3_LOCALIZ,CriaVar("D3_LOCALIZ"))
cLoteDigi:= IIf(l240,M->D3_LOTECTL,CriaVar("D3_LOTECTL"))
cNumSerie:= IIf(l240,M->D3_NUMSERI,CriaVar("D3_NUMSERI"))
cLote    := IIf(l240,M->D3_NUMLOTE,CriaVar("D3_NUMLOTE"))
dEmissao := IIf(l240,M->D3_EMISSAO,dDataBase)

cVar := &(ReadVar())

If !Empty(cTipoAnt) .And. ( (cTipoAnt > '500' .and. cVar <= '500') .Or. (cTipoAnt <= '500' .and. cVar > '500') )
	If l240
		M->D3_LOCALIZ := CriaVar("D3_LOCALIZ")
		M->D3_LOTECTL := CriaVar("D3_LOTECTL")
		M->D3_NUMSERI := CriaVar("D3_NUMSERI")
		M->D3_NUMLOTE := CriaVar("D3_NUMLOTE")
		M->D3_DTVALID := CriaVar("D3_DTVALID")
		M->D3_COD     := CriaVar("D3_COD")
		M->D3_QUANT   := 0
		M->D3_QTSEGUM := 0
		M->D3_TM      := cTm
		M->D3_LOCAL   := CriaVar("D3_LOCAL")
		M->D3_OP      := CriaVar("D3_OP")
	ElseIf l241 .And. !(l241Auto)
		aCols := {}
		AADD(aCols,Array(Len(aHeader)+1))
		For i:=1 to Len(aHeader)
			cCampo:=Alltrim(aHeader[i,2])
			If cCampo == "D3_ALI_WT"
				aCols[1][i] := "SD3"
			ElseIf cCampo == "D3_REC_WT"
				aCols[1][i] := 0
			Else
				aCols[1][i] := CriaVar(cCampo)
			EndIf
		Next i
		aCOLS[1][Len(aHeader)+1] := .F.
		If !l241Auto
			oGet:ForceRefresh()
		EndIf
	EndIf
EndIf

cTipoAnt := cVar

dbSelectArea("SF5")
If	MsSeek(xFilial("SF5")+cVar)
	If If(cFunc == "A185AtuSD3".Or.cFunc == "A185Atu2SD3",!F5_TIPO$"R",!F5_TIPO$"RD")
		Help(" ",1,"A240TM")
		lRet:=.F.
	EndIf
Else
	Help(" ",1,"REGNOIS")
	lRet:=.F.
EndIf

//здддддддддддддддддддддддддддддддддддддд©
//|Pais Portugal - ObtИm a Guia de Abate |
//юдддддддддддддддддддддддддддддддддддддды
If cPaisLoc=="PTG" .And. !IsInCallStack("MATA241")
	M->D3_NRABATE:=A240NGUIA(cVar,.F.)
EndIf

If l241 .And. (Empty(nPosQuant) .Or. Empty(nPosCod) .Or. Empty(nPosLocal))
	UserException('D3_QUANT, D3_COD'+OemToAnsi(STR0020)+'D3_LOCAL'+OemToAnsi(STR0019))
EndIf

//Avalia se a OS jА foi encerrada no SIGAMNT para encerrar a prИ-requisiГЦo
If A185VldNG(SCP->CP_OP)
	Return lRet
EndIf

If ((l240 .And. (lEstNeg .Or. Localiza(cCod,.T.) .Or. Rastro(cCod)) .And. !IsProdMod(cCod) .and. !Empty(nQuant)) .Or. l241) .And. (Type('l240Auto')#'L'.Or.!l240Auto)  .And. (Type('l241Auto')#'L'.Or.!l241Auto) .And. lRet
	If cTM > "500"
		dbSelectArea("SB2")
		If l240
			MsSeek(xFilial("SB2")+cCod+cLocal)
			dbSelectArea("SD3")
			If lRet .And. !MtAvlNSer(cCod,cNumSerie,nQuant,nQuant2UM)
				lRet:=.F.
			EndIf
			If lRet .And. !(A185VldNG(SCP->CP_OP)) .And. (SaldoMov(Nil,Nil,Nil,mv_par03==1,Nil,Nil,Nil,dEmissao,!l185) - IIf(l185 .And. GetMv("MV_TPSALDO")=="S",0,nQuant)) < 0
				cHelp:= STR0067 + AllTrim(SB2->B2_COD) + STR0068 + AllTrim(SB2->B2_LOCAL) //"Produto: "--" Local: "
				Help(" ",1,"MA240NEGAT",,cHelp,4,1)
				lRet:=.F.
			EndIf
			If lRet .And. (!Empty(cLocaliza) .Or. !Empty(cNumSerie)) .And. Localiza(cCod,.T.)
				If !(lWmsNew .And. IntWMS(cCod))
					/*
						Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
						NecessАrio para o projeto de integraГЦo TOTVS MES.
					*/
					nSaldoEnd := SaldoSBF(cLocal,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote,,,,cOp)
				Else
					nSaldoEnd := WmsSldD14(cLocal,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote)
				EndIf
				If nSaldoEnd < nQuant
					Help(" ",1,"SALDOLOCLZ")
					lRet:=.F.
				EndIf
			EndIf
		ElseIf l241
			For i:=1 to Len(aCols)
				If ( (!GdDeleted(i) .Or. l185) .And. ;
					(Localiza(aCols[i,nPosCod],.T.) .Or. Rastro(aCols[i,nPosCod]) .Or. lEstNeg .And. !IsProdMod(aCols[i,nPosCod]) .And. !Empty(aCols[i,nPosQuant]) ))
					dbSelectArea("SB2")
					MsSeek(xFilial("SB2")+aCols[i,nPosCod]+aCols[i,nPosLocal])
					dbSelectArea("SD3")
					If lRet .And. !MtAvlNSer(aCols[i,nPosCod],cNumSerie,aCols[i,nPosQuant],aCols[i,nPosQtSegum])
						lRet:=.F.
					EndIf
					If lRet .And. (SaldoMov(Nil,Nil,Nil,mv_par03==1,Nil,Nil,Nil,dEmissao,!l185) - IIf(l185 .And. lTpSaldo,0,aCols[i,nPosQuant])) < 0
						lShow:=.T.
						aCols[i,Len(aCols[i])]:=.T.
					EndIf
					If lRet .And. (If(!Empty(nPosLocali),!Empty(aCols[i,nPosLocali]),.T.) .Or. If(!Empty(nPosNumSer),!Empty(aCols[i,nPosNumSer]),.T.)) .And. Localiza(aCols[i,nPosCod],.T.)
						If !(lWmsNew .And. IntWMS(aCols[i,nPosCod]))
							/*
								Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
								NecessАrio para o projeto de integraГЦo TOTVS MES.
							*/
							nSaldoEnd := SaldoSBF(aCols[i,nPosLocal],If(!Empty(nPosLocali),aCols[i,nPosLocali],''),aCols[i,nPosCod],If(!Empty(nPosNumSer),aCols[i,nPosNumSer],''),If(!Empty(nPosLotCTL),aCols[i,nPosLotCTL],''),If(!Empty(nPosLote),aCols[i,nPosLote],''),,,,If(!Empty(nPosOp),aCols[i,nPosOp],''))
						Else
							nSaldoEnd := WmsSldD14(aCols[i,nPosLocal],If(!Empty(nPosLocali),aCols[i,nPosLocali],''),aCols[i,nPosCod],If(!Empty(nPosNumSer),aCols[i,nPosNumSer],''),If(!Empty(nPosLotCTL),aCols[i,nPosLotCTL],''),If(!Empty(nPosLote),aCols[i,nPosLote],''))
						EndIf
						If nSaldoEnd < aCols[i,nPosQuant]
							lShow:=.T.
							aCols[i,Len(aCols[i])]:=.T.
						EndIf
					EndIf
				EndIf
			Next i
			If lShow
				If (Type('l241Auto')#'L' .Or. l241Auto) .Or. (Type('l240Auto')#'L' .Or. l240Auto)
					For i:=1 to Len(aCols)
						If aCols[i,Len(aCols[i])]
							cHelp:=STR0067 + AllTrim(aCols[i,nPosCod]) + STR0068 + AllTrim(aCols[i,nPosLocal]) //"Produto: "--" Local: "
							Help(" ",1,"MA240NEGAT",,cHelp,4,1)
							lRet:=.F.
						Endif
					Next i
				Else
					Help(" ",1,"MA240NEGAT")
					lRet:=.F.
				Endif
			EndIf
		EndIf
	Else
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Apropriacao Indireta e' identificada com B1_APROPRI = "I" e o  Ё
		//Ё numero da OP (D3_OP) em branco.                                Ё
		//Ё Apropriacao Direta e' identificada com B1_APROPRI <> "I" ou comЁ
		//Ё o numero da OP (D3_OP) preenchido.                             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		dbSelectArea("SF5")
		MsSeek(xFilial("SF5")+cTM)
		If l240
			dbSelectArea("SB1")
			MsSeek(xFilial("SB1")+cCod)
			If (B1_APROPRI == "I" .And. Empty(cOp)) .And. SF5->F5_APROPR != "S"
				cApropri := "3"
			Else
				cApropri := "0"
			EndIf
			If cApropri == "3"
				dbSelectArea("SB2")
				If dbSeek(xFilial()+cCod + GetMvNNR('MV_LOCPROC','99'))
					dbSelectArea("SD3")
					If cApropri == "3" .And. (SaldoMov(Nil,Nil,Nil,mv_par03==1,Nil,Nil,Nil,dEmissao)-nQuant) < 0
						Help(" ",1,"MA240PRNEG")
						A240SegUm()
						lRet:=.F.
					EndIf
					If lRet .And. cApropri == "3" .And. Localiza(cCod,.T.)
						If !(lWmsNew .And. IntWMS(cCod))
							/*
								Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
								NecessАrio para o projeto de integraГЦo TOTVS MES.
							*/
							nSaldoEnd := SaldoSBF(cLocProc,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote,,,,cOp)
						Else
							nSaldoEnd := WmsSldD14(cLocProc,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote)
						EndIf
						If nSaldoEnd < nQuant
							Help(" ",1,"SALDOLOCLZ")
							Return .F.
						EndIf
					EndIf
				EndIf
			EndIf
		ElseIf l241 .And. !lShow
			For i:=1 to Len(aCols)
				If (Localiza(aCols[i,nPosCod],.T.) .Or. Rastro(aCols[i,nPosCod]) .Or. lEstNeg) .And. !IsProdMod(aCols[i,nPosCod]) .And. !Empty(aCols[i,nPosQuant])
					dbSelectArea("SB1")
					dbSeek(xFilial()+aCols[i,nPosCod])
					If (B1_APROPRI == "I" .And. If(Type("nPosOp") == "N" .And. !Empty(nPosOP),Empty(aCols[i,nPosOp]),.T.)) .And. SF5->F5_APROPR != "S"
						cApropri := "3"
					Else
						cApropri := "0"
					EndIf
					If cApropri == "3"
						dbSelectArea("SB2")
						If dbSeek(xFilial()+aCols[i,nPosCod] + GetMvNNR('MV_LOCPROC','99'))
							If cApropri == "3" .And. (SaldoMov(Nil,Nil,Nil,mv_par03==1,Nil,Nil,Nil,dEmissao)-aCols[i,nPosQuant]) < 0
								lShow:=.T.
								aCols[i,Len(aCols[i])]:=.T.
							EndIf
							If cApropri == "3" .And. Localiza(aCols[i,nPosCod],.T.)
								If !(lWmsNew .And. IntWMS(aCols[i,nPosCod]))
									/*
										Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
										NecessАrio para o projeto de integraГЦo TOTVS MES.
									*/
									nSaldoEnd := SaldoSBF(cLocProc,cLocaliza,aCols[i,nPosCod],If(!Empty(nPosNumSer),aCols[i,nPosNumSer],''),cLoteDigi,cLote,,,,If(!Empty(nPosOp),aCols[i,nPosOp],''))
								Else
									nSaldoEnd := WmsSldD14(cLocProc,cLocaliza,aCols[i,nPosCod],If(!Empty(nPosNumSer),aCols[i,nPosNumSer],''),cLoteDigi,cLote)
								EndIf
								If nSaldoEnd < aCols[i,nPosQuant]
									lShow:=.T.
									aCols[i,Len(aCols[i])]:=.T.
								EndIf
							EndIf
						EndIf
					EndIf
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//|No mata241, qdo devolucao nЦo pode ter endereco ou numero de serie preenchido |
					//|o mesmo devera estar em branco para que seja necessario o enderecamento.      |
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If ! Empty(aCols[i,nPosLocali])
						aCols[i,nPosLocali]:=Space(15)
						oGet:ForceRefresh()
					EndIf
					If ! Empty(aCols[i,nPosNumSer])
						aCols[i,nPosNumSer]:=Space(20)
						oGet:ForceRefresh()
					EndIf
				EndIf
			Next i
			If lShow
				Help(" ",1,"MA240PRNEG")
			EndIf
		EndIf
	EndIf
EndIf
dbSelectArea("SD3")
Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240Quant Ё Autor Ё Eveli Morasco         Ё Data Ё 28/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Rotina que calcula a segunda unidade quando existir        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Quant()
Local nPerda,cCod,cLocal,cApropri:="0",cTrt,nPotenci:=0
Local nQtd,nPosiCod,nPosiQuant,nPosiLocal,nz,nx,nQuant2UM
Local cLocaliza		:= ''
Local cLoteDigi		:= ''
Local cNumSerie		:= ''
Local cLote			:= ''
Local cLocProc		:= GetMvNNR('MV_LOCPROC','99')
Local cMvCq			:= GetMvNNR('MV_CQ','98')
Local lBaixaEmp		:=.F.
Local lBxEmpB8		:=.F.
Local cCodPrj		:= ""
Local cTrfPrj		:= ""
Local lEmpPrj		:= .F.
Local nQtdPrj		:= 0
Local nPosiProj		:= 0
Local nPosiTarefa	:= 0
Local dEmissao		:= dDataBase
Local lPimsInt		:= SuperGetMV("MV_PIMSINT",.F.,.F.)
Local lWmsNew     := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local nSaldoEnd   := 0
Local aTam	:= {}

If l241.Or.l242
	cLocaliza := If(!Empty(nPosLocali),aCols[n,nPosLocali],CriaVar('D3_LOCALIZ'))
	cLoteDigi := If(!Empty(nPosLotCTL),aCols[n,nPosLotCTL],CriaVar('D3_LOTECTL'))
	cNumSerie := If(!Empty(nPosNumSer),aCols[n,nPosNumSer],CriaVar('D3_NUMSERI'))
	cLote     := If(!Empty(nPosLote),aCols[n,nPosLote],CriaVar('D3_NUMLOTE'))
	cCod      := If(SubStr(ReadVar(),4,6)=='D3_COD',M->D3_COD,If(!Empty(nPosCod),aCols[n,nPosCod],UserException('D3_COD'+OemToAnsi(STR0019))))
	cLocal    := If(SubStr(ReadVar(),4,8)=='D3_LOCAL',M->D3_LOCAL,If(!Empty(nPosLocal),aCols[n,nPosLocal],UserException('D3_LOCAL'+OemToAnsi(STR0019))))
	cOp       := If(l241.And. Type("nPosOp") == "N" .And. !Empty(nPosOp),aCols[n,nPosOp],CriaVar('D3_OP',.F.))
	cTrt      := If(l241.And.!Empty(nPosTrt),aCols[n,nPosTrt],CriaVar('D3_TRT',.F.))
	nPotenci  := If(l241.And.!Empty(nPosPotenc),aCols[n,nPosPotenc],CriaVar('D3_POTENCI',.F.))
	nQuant2UM := If(!Empty(nPosQtSegum),aCols[n,nPosQtSegum],0)
	If l241
		dEmissao  := If(Type('dA241Data') == "D",dA241Data,dDataBase)
	ElseIf l242
		dEmissao  := If(Type('dEmis260') == "D",dEmis260,dDataBase)
	EndIf
Else
	If l250
		aQtdGrade()
	EndIf
	cLocaliza := M->D3_LOCALIZ
	cLoteDigi := M->D3_LOTECTL
	cNumSerie := M->D3_NUMSERI
	cLote     := M->D3_NUMLOTE
	cCod      := M->D3_COD
	cTM       := M->D3_TM
	cLocal    := M->D3_LOCAL
	cOp       := Alltrim(M->D3_OP)
	cTrt      := M->D3_TRT
	nPotenci  := M->D3_POTENCI
	nQuant2UM := M->D3_QTSEGUM
	dEmissao  := M->D3_EMISSAO
EndIf

nPerda := IIf(l250,M->D3_PERDA,0)

If (l240.or.l241) .And. Empty(M->D3_QUANT)
	If SF5->(dbSeek(xFilial("SF5")+cTM))
		If SF5->F5_QTDZERO # "1"
			Help(" ",1,"NVAZIO")
			Return .F.
		EndIf
	Else
		Help(" ",1,"NVAZIO")
		Return .F.
	EndIf
EndIf

If l242 .And. Empty(M->D3_QUANT)
	Help(" ",1,"NVAZIO")
	Return .F.
EndIf

If l250 .And. QtdComp(M->D3_QUANT+nPerda) == QtdComp(0)
	Help(" ",1,"QUANTVAZIO")
	Return .F.
EndIf

If QtdComp(M->D3_QUANT) < QtdComp(0)
	Help(" ",1,"POSIT")
	Return .F.
EndIf

// Se for Produto Referencia, nao preencher os campos 2a. UM e Parcial/Total
If l250 .And. MatGrdPrrf(M->D3_COD)
	Return .T.
EndIf

If l240 .Or. l250
	A240SegUm()
EndIf

If l250
	If Empty(M->D3_QUANT) .And. cMvCq == M->D3_LOCAL
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Quando for producao com 100% de perda e produto possuir   Ё
		//Ё skip-lote de CQ, devera voltar o local da producao para   Ё
		//Ё o armazem da OP, pois nao havera saldo para analise do CQ Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		M->D3_LOCAL := SC2->C2_LOCAL
	ElseIf fEnvCQProd(M->D3_COD, M->D3_TM, .F.)
		aTam := TamSx3("D3_LOCAL")
		M->D3_LOCAL := cMvCq
	EndIf
	A240ParTot()
EndIf

If (l240.or.l241.or.l242) .And. (GetMV("MV_ESTNEG") == "N" .Or. Localiza(cCod,.T.) .Or. Rastro(cCod)) .And. !IsProdMod(cCod) .And. ;
   (Type('l240Auto')#'L'.Or.!l240Auto) .And. iif(Type('l241Auto')=='L' .and. lPimsInt .and. l241Auto,.t.,(Type('l241Auto')#'L'.Or.!l241Auto))
	If cTM > "500"
		dbSelectArea("SB2")
		dbSeek(xFilial()+cCod+cLocal)
		dbSelectArea("SD3")
		If !MtAvlNSer(cCod,cNumSerie,M->D3_QUANT,nQuant2UM)
			Return .F.
		EndIf
		If l240
			dbSelectArea("SF5")
			dbSetOrder(1)
			If SF5->(dbSeek(xFilial("SF5")+M->D3_TM))
				lQtdZero := (Empty(M->D3_QUANT).And.(SF5->F5_QTDZERO=="1"))
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Caso esteja baixando empenho verifica o saldo empenhadoЁ
				//Ё a fim de evitar divergencia entre o movimento no SD3 e Ё
				//Ё os movimentos no SD5 e SDB.                            Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				lBaixaEmp:=SF5->F5_ATUEMP == "S" .And. ( !Empty(M->D3_OP) .Or. ;
														( !Empty(M->D3_PROJPMS) .And. ;
														  !Empty(M->D3_TASKPMS)) )
				A240AvalEm(@lBaixaEmp,M->D3_COD,M->D3_LOCAL,M->D3_QUANT,M->D3_LOTECTL,M->D3_NUMLOTE,M->D3_LOCALIZ,M->D3_NUMSERI,M->D3_OP,M->D3_TRT,.F.,M->D3_TM<="500",@lBxEmpB8,M->D3_POTENCI, M->D3_PROJPMS, M->D3_TASKPMS)
			EndIf

			lEmpPrj := (!Empty(M->D3_PROJPMS) .And. !Empty(M->D3_TASKPMS))
			nQtdPrj := If(lBaixaEmp .And. lEmpPrj, M->D3_QUANT,0)
			If QtdComp(SaldoMov(Nil,!lBaixaEmp,Nil,mv_par03==1,If(lBaixaEmp,M->D3_QUANT,Nil),nQtdPrj,Nil,dEmissao)) < QtdComp(M->D3_QUANT)
					cHelp:=STR0067 + AllTrim(SB2->B2_COD) + STR0068 + AllTrim(SB2->B2_LOCAL) //"Produto: "--" Local: "
					Help(" ",1,"MA240NEGAT",,cHelp,4,1)
					A240SegUm()
					Return .F.
			EndIf
			MTVerPai(cCod,.F.)
			If (!Empty(cLocaliza) .Or. !Empty(cNumSerie)) .And. Localiza(cCod,.T.)
				If !(lWmsNew .And. IntWMS(cCod))
					/*
						Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
						NecessАrio para o projeto de integraГЦo TOTVS MES.
					*/
					nSaldoEnd := SaldoSBF(cLocal,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote,lBxEmpB8,,,cOp)
				Else
					nSaldoEnd := WmsSldD14(cLocal,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote,lBxEmpB8)
				EndIf
				If QtdComp(nSaldoEnd) < QtdComp(M->D3_QUANT)
					Help(" ",1,"SALDOLOCLZ")
					Return .F.
				EndIf
			EndIf
		Else
			For nx := 1 To Len(aHeader)
				If Trim(aHeader[nx][2]) == "D3_COD"
					nPosiCod:=nX
				ElseIf Trim(aHeader[nx][2]) == "D3_QUANT"
					nPosiQuant:=nX
				ElseIf Trim(aHeader[nx][2]) == "D3_LOCAL"
					nPosiLocal:=nX
				ElseIf Trim(aHeader[nx][2]) == "D3_PROJPMS"
					nPosiProj:=nX
				ElseIf Trim(aHeader[nx][2]) == "D3_TASKPMS"
					nPosiTarefa:=nX
				EndIf
			Next nx
			cCodProj := If(!Empty(nPosiProj),aCols[n,nPosiProj],CriaVar('D3_PROJPMS'))
			cTrfProj := If(!Empty(nPosiTarefa),aCols[n,nPosiTarefa],CriaVar('D3_TASKPMS'))
			nQtd:=0
			If nPosiCod==0 .Or. nPosiQuant==0 .Or. nPosiLocal==0
				UserException('D3_COD, D3_QUANT'+OemToAnsi(STR0020)+'D3_LOCAL'+OemToAnsi(STR0019))
			EndIf
			For nz:=1 to Len(aCols)
				If !aCols[nz][Len(aHeader)+1] //Nao permite quantidade dos itens deletados
					If aCols[nz][nPosiCod] == cCod .And. aCols[nz][nPosiLocal] == cLocal .And. If(!Empty(nPosLocali),aCols[nz,nPosLocali],'') == cLocaliza .And. If(!Empty(nPosNumSer),aCols[nz,nPosNumSer],'') == cNumSerie .And. If(!Empty(nPosLote),aCols[nz,nPosLote],'') == cLote .And. If(!Empty(nPosLotCTL),aCols[nz,nPosLotCTL],'') == cLoteDigi .And. If(!Empty(nPosiProj),aCols[nz,nPosiProj],'') == cCodProj .And. If(!Empty(nPosiTarefa),aCols[nz,nPosiTarefa],'')==cTrfProj .And. n != nz
						if !(lPimsInt .and. l241Auto) .or. (lPimsInt .and. l241Auto .and. nz < n)
							nQtd+=aCols[nz][nPosiQuant]
						EndIf
					ElseIf aCols[nz][nPosiCod] == cCod .And. aCols[nz][nPosiLocal] == cLocal .And. If(!Empty(nPosLocali),aCols[nz,nPosLocali],'') == cLocaliza .And. If(!Empty(nPosNumSer),aCols[nz,nPosNumSer],'') == cNumSerie .And. If(!Empty(nPosLote),aCols[nz,nPosLote],'') == cLote .And. If(!Empty(nPosLotCTL),aCols[nz,nPosLotCTL],'') == cLoteDigi .And. If(!Empty(nPosiProj),aCols[nz,nPosiProj],'') == cCodProj .And. If(!Empty(nPosiTarefa),aCols[nz,nPosiTarefa],'')==cTrfProj .And. n = nz
						nQtd+=M->D3_QUANT
					EndIf
				EndIf
			Next nz
			dbSelectArea("SF5")
			dbSetOrder(1)
			If SF5->(dbSeek(xFilial("SF5")+cTm))
				lQtdZero := (Empty(nQtd).And.(SF5->F5_QTDZERO=="1"))
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Caso esteja baixando empenho verifica o saldo empenhadoЁ
				//Ё a fim de evitar divergencia entre o movimento no SD3 e Ё
				//Ё os movimentos no SD5 e SDB.                            Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If nPosiProj>0 .And. nPosiTarefa > 0
					cCodPrj := aCols[n][nPosiProj]
					cTrfPrj := aCols[n][nPosiTarefa]
				EndIf
				lBaixaEmp:=SF5->F5_ATUEMP == "S" .And. ( !Empty(cOp) .Or. ;
														( !Empty(cCodPrj) .And. ;
														  !Empty(cTrfPrj)) )
				A240AvalEm(@lBaixaEmp,cCod,cLocal,nQtd,cLoteDigi,cLote,cLocaliza,cNumSerie,cOp,cTrt,.F.,cTM<="500",@lBxEmpB8,nPotenci, cCodPrj, cTrfPrj)
			EndIf

			lEmpPrj := (!Empty(cCodPrj) .And. !Empty(cTrfPrj))
			nQtdPrj := If(lBaixaEmp .And. lEmpPrj, nQtd,0)

			If !(A185VldNG(SCP->CP_OP)) .And. (SaldoMov(Nil,!lBaixaEmp,Nil,mv_par03==1,If(lBaixaEmp,nQtd,Nil),nQtdPrj,Nil,dEmissao,!l185)) - IIf(l185 .And. GetMv("MV_TPSALDO")=="S",0,nQtd) < 0
				cHelp:= STR0067 + AllTrim(aCols[n,GdFieldPos("D3_COD")]) + STR0068 + AllTrim(aCols[n,GdFieldPos("D3_LOCAL")]) //"Produto: "--" Local: "
				Help(" ",1,"MA240NEGAT",,cHelp,4,1)
				Return .F.
			EndIf
			If (!Empty(cLocaliza) .Or. If(!Empty(nPosNumSer),!Empty(aCols[n,nPosNumSer]),.T.)) .And. Localiza(aCols[n,nPosCod],.T.)
				If !(lWmsNew .And. IntWMS(aCols[n,nPosCod]))
					/*
						Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
						NecessАrio para o projeto de integraГЦo TOTVS MES.
					*/
					nSaldoEnd := SaldoSBF(aCols[n,nPosLocal],cLocaliza,aCols[n,nPosCod],If(!Empty(nPosNumSer),aCols[n,nPosNumSer],''),cLoteDigi,cLote,lBxEmpB8,,,If(!Empty(nPosOp),aCols[n,nPosOp],''))
				Else
					nSaldoEnd := WmsSldD14(aCols[n,nPosLocal],cLocaliza,aCols[n,nPosCod],If(!Empty(nPosNumSer),aCols[n,nPosNumSer],''),cLoteDigi,cLote,lBxEmpB8)
				EndIf
				If QtdComp(nSaldoEnd) < QtdComp(nQtd)
					Help(" ",1,"SALDOLOCLZ")
					Return .F.
				EndIf
			EndIf
		EndIf
	Else
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Apropriacao Indireta e' identificada com B1_APROPRI = "I" e o  Ё
		//Ё numero da OP (D3_OP) em branco.                                Ё
		//Ё Apropriacao Direta e' identificada com B1_APROPRI <> "I" ou comЁ
		//Ё o numero da OP (D3_OP) preenchido.                             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		dbSelectArea("SF5")
		dbSeek(xFilial()+cTM)
		dbSelectArea("SB1")
		dbSeek(xFilial()+cCod)
		If (B1_APROPRI == "I" .And. Empty(cOp)) .And. SF5->F5_APROPR != "S" .And. !l242
			cApropri := "3"
		Else
			cApropri := "0"
		EndIf
		If cApropri == "3"
			dbSelectArea("SB2")
			If dbSeek(xFilial()+cCod + cLocProc)
				dbSelectArea("SD3")
				If l240 .And. cApropri == "3"
					If QtdComp(SaldoMov(Nil,Nil,Nil,mv_par03==1,Nil,Nil,Nil,dEmissao)) < QtdComp(M->D3_QUANT)
						Help(" ",1,"MA240PRNEG")
						A240SegUm()
						Return .F.
					EndIf
					If (!Empty(cLocaliza) .Or. !Empty(cNumSerie)) .And. Localiza(cCod,.T.)
						If !(lWmsNew .And. IntWMS(cCod))
							/*
								Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
								NecessАrio para o projeto de integraГЦo TOTVS MES.
							*/
							nSaldoEnd := SaldoSBF(cLocProc,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote,,,,cOp)
						Else
							nSaldoEnd := WmsSldD14(cLocProc,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote)
						EndIf
						If QtdComp(nSaldoEnd) < QtdComp(M->D3_QUANT)
							Help(" ",1,"SALDOLOCLZ")
							Return .F.
						EndIf
					EndIf
				Else
					For nx := 1 To Len(aHeader)
						If Trim(aHeader[nx][2]) == "D3_COD"
							nPosiCod:=nX
						ElseIf Trim(aHeader[nx][2]) == "D3_QUANT"
							nPosiQuant:=nX
						ElseIf Trim(aHeader[nx][2]) == "D3_LOCAL"
							nPosiLocal:=nX
						EndIf
					Next nx
					If nPosiCod==0 .Or. nPosiQuant==0 .Or. nPosiLocal==0
						UserException('D3_COD, D3_QUANT'+OemToAnsi(STR0020)+'D3_LOCAL'+OemToAnsi(STR0019))
					EndIf
					nQtd:=0
					For nz:=1 to Len(aCols)
						If !aCols[nz][Len(aHeader)+1] //Nao permite quantidade dos itens deletados
							If aCols[nz][nPosiCod] == cCod .And. aCols[nz][nPosiLocal] == cLocal .And. If(!Empty(nPosLocali),aCols[nz,nPosLocali],'') == cLocaliza .And. If(!Empty(nPosNumSer),aCols[nz,nPosNumSer],'') == cNumSerie .And. If(!Empty(nPosLote),aCols[nz,nPosLote],'') == cLote .And. If(!Empty(nPosLotCtl),aCols[nz,nPosLotCTL],'') == cLoteDigi .And. n != nz
								nQtd+=aCols[nz][nPosiQuant]
							ElseIf aCols[nz][nPosiCod] == cCod .And. aCols[nz][nPosiLocal] == cLocal .And. If(!Empty(nPosLocali),aCols[nz,nPosLocali],'') == cLocaliza .And. If(!Empty(nPosNumSer),aCols[nz,nPosNumSer],'') == cNumSerie .And. If(!Empty(nPosLote),aCols[nz,nPosLote],'') == cLote .And. If(!Empty(nPosLotCtl),aCols[nz,nPosLotCTL],'') == cLoteDigi .And. n = nz
								nQtd+=M->D3_QUANT
							EndIf
						EndIf
					Next nz
					If (SaldoMov(Nil,Nil,Nil,mv_par03==1,Nil,Nil,Nil,dEmissao)-nQtd) < 0
						Help(" ",1,"MA240PRNEG")
						Return .F.
					EndIf
					If (!Empty(cLocaliza) .Or. If(!Empty(nPosNumSer),!Empty(aCols[n,nPosNumSer]),.T.)) .And. Localiza(aCols[n,nPosCod],.T.)
						If !(lWmsNew .And. IntWMS(cCod))
							/*
								Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
								NecessАrio para o projeto de integraГЦo TOTVS MES.
							*/
							nSaldoEnd := SaldoSBF(cLocProc,cLocaliza,aCols[n,nPosCod],If(!Empty(nPosNumSer),aCols[n,nPosNumSer],''),cLoteDigi,cLote,,,,If(!Empty(nPosOp),aCols[n,nPosOp],''))
						Else
							nSaldoEnd := WmsSldD14(cLocProc,cLocaliza,aCols[n,nPosCod],If(!Empty(nPosNumSer),aCols[n,nPosNumSer],''),cLoteDigi,cLote)
						EndIf
						If QtdComp(nSaldoEnd) < QtdComp(nQtd)
							Help(" ",1,"SALDOLOCLZ")
							Return .F.
						EndIf
					EndIf
				EndIf
			Else
				Help(' ',1,'A240NEGIND')
				Return .F.
			EndIf
		EndIf
	EndIf
EndIf
dbSelectArea("SD3")
If l241 .or. l242
	A240SegUm()
EndIf
Return .T.

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240SegUm Ё Autor Ё Eveli Morasco         Ё Data Ё 29/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Calcula e inicializa campos da segunda unidade de medida   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240/MATA250                                            Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240SegUm()
Local nEndereco:= 0
Local nEnd1    := 0
Local nEnd2    := 0
Local nTam     := 0
Local nDec     := 0
Local nQuant   := 0
Local nPosQT   := 0
Local nX       := 0
Local cCod     := ""

// Se for Produto Referencia, nao preencher os campos 2a. UM
If l250 .And. MatGrdPrrf(M->D3_COD)
	Return .T.
EndIf

If l241.or.l242
	cCod := If(SubStr(ReadVar(),4,6)=='D3_COD' .And. Type(ReadVar()) <> "U",M->D3_COD,If(!Empty(nPosCod),aCols[n,nPosCod],UserException('D3_COD'+OemToAnsi(STR0019))))
Else
	cCod := M->D3_COD
EndIf
dbSelectArea("SB1")
dbSeek(xFilial()+cCod)
If l240 .or. l242 .or. l250
	If l242
		For nx := 1 To Len(aHeader)
			If Trim(aHeader[nx][2]) == "D3_QTSEGUM"
				nPosQT:=nX
			EndIf
		Next nx
		If nPosQT > 0
			aCols[n,nPosQT] := ConvUm( cCod,M->D3_QUANT,aCols[n,nPosQT],2 )
		EndIf
	Else
		M->D3_SEGUM := B1_SEGUM
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,8) == "D3_SEGUM" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_SEGUM
		EndIf
		M->D3_QTSEGUM := ConvUm(cCod,M->D3_QUANT,M->D3_QTSEGUM,2)
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_QTSEGUM" } )
		If nEndereco > 0
			nEnd1 := Val(Subs(aGets[nEndereco],1,2))
			nEnd2 := Val(Subs(aGets[nEndereco],3,1))*2
			nTam  := Len(aTela[nEnd1][nEnd2])
			nDec  := nTam-Rat(".",aTela[nEnd1][nEnd2])
			If nTam == nDec
				nDec := 0
			EndIf
			aTela[nEnd1][nEnd2] := Transform(M->D3_QTSEGUM,PesqPictQT("D3_QTSEGUM"))
		EndIf
	EndIf
Else
	If nPosSegum>0 .And. nPosQtSegUM>0
		aCols[n][nPosSegum]   := SB1->B1_SEGUM
		aCols[n][nPosQtSegUm] := ConvUm(cCod,If(!l185,IIf (ReadVar()=="M->D3_QUANT",M->D3_QUANT,aCols[n,nPosQuant]),aCols[n,nPosQuant]),aCols[n][nPosQtSegUm],2)
	EndIf
EndIf

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240PriUm Ё Autor Ё Eveli Morasco         Ё Data Ё 29/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Calcula e inicializa a primeira unidade de medida          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240/MATA250                                            Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240PriUm()
Local nEndereco,nEnd1,nEnd2,nTam,nDec,nQuantidad,nQtSegUm,cCod,cLocal
Local cLocaliza:= ''
Local cLoteDigi:= ''
Local cNumSerie:= ''
Local cLote    := ''
Local nX       := 0
Local dEmissao := dDataBase
Local lWmsNew  := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local nSaldoEnd:= 0
Local cOrdem   := ''

// Se for Produto Referencia, nao preencher os campos 1a. UM
If l250 .And. MatGrdPrrf(M->D3_COD)
	Return .T.
EndIf

If l241.Or.l242
	cLocaliza := If(!Empty(nPosLocali),aCols[n,nPosLocali],CriaVar('D3_LOCALIZ'))
	cLoteDigi := If(!Empty(nPosLotCTL),aCols[n,nPosLotCTL],CriaVar('D3_LOTECTL'))
	cNumSerie := If(!Empty(nPosNumSer),aCols[n,nPosNumSer],CriaVar('D3_NUMSERI'))
	cLote     := If(!Empty(nPosLote),aCols[n,nPosLote],CriaVar('D3_NUMLOTE'))
	cCod      := If(SubStr(ReadVar(),4,6)=='D3_COD',M->D3_COD,If(!Empty(nPosCod),aCols[n,nPosCod],UserException('D3_COD'+OemToAnsi(STR0019))))
	nQtSegUm  := If(SubStr(ReadVar(),4,10)=='D3_QTSEGUM',M->D3_QTSEGUM,If(!Empty('D3_QTSEGUM'),aCols[n,nPosQtSegum],CriaVar('D3_QTSEGUM')))
	cLocal    := If(SubStr(ReadVar(),4,8)=='D3_LOCAL',M->D3_LOCAL,If(!Empty(nPosLocal),aCols[n,nPosLocal],UserException('D3_LOCAL'+OemToAnsi(STR0019))))
	cOrdem    := If(Type("nPosOp") == "N" .And. !Empty(nPosOp),aCols[n,nPosOP],CriaVar('D3_OP'))
	If l241
		dEmissao  := If(Type('dA241Data') == "D",dA241Data,dDataBase)
	ElseIf l242
		dEmissao  := If(Type('dEmis260') == "D",dEmis260,dDataBase)
	EndIf
Else
	cLocaliza := M->D3_LOCALIZ
	cLoteDigi := M->D3_LOTECTL
	cNumSerie := M->D3_NUMSERI
	cLote     := M->D3_NUMLOTE
	cCod      := M->D3_COD
	nQtSegUm  := M->D3_QTSEGUM
	cTM       := M->D3_TM
	cLocal    := M->D3_LOCAL
	dEmissao  := M->D3_EMISSAO
	cOrdem    := M->D3_OP
EndIf

If Empty(nQtSegUm)
	Return .T.
EndIf

dbSelectArea("SB1")
dbSeek(xFilial()+cCod)

If l241 .or. l242
	For nx := 1 To Len(aHeader)
		If Trim(aHeader[nx][2]) == "D3_QUANT"
			nPosQuant:=nX
		ElseIf Trim(aHeader[nx][2]) == "D3_QTSEGUM"
			nPosQtSegum:=nX
		EndIf
	Next nx
	If nPosQuant>0
		nQuantidad := ConvUm(cCod,aCols[n,nPosQuant],nQtSegUm,1)
		If l241 .And. QtdComp(nQuantidad)<=QtdComp(0) .And. ( !Empty(cLote) .Or. !Empty(cLoteDigi) )
			Help(" ",1,"A240QLZERO")
			Return .F.
		ElseIf l241 .And. QtdComp(nQuantidad) < QtdComp(0)
			nQuantidad := 0
		EndIf
		aCols[n,nPosQuant] := nQuantidad
	EndIf
Else
	nQuantidad := ConvUm(cCod,M->D3_QUANT,nQtSegUm,1)
EndIf

If (l240.or.l241.or.l250) .And. !IsProdMod(cCod) .and. !Empty(nQuantidad)  .And. (Type('l240Auto')#'L'.Or.!l240Auto)  .And. (Type('l241Auto')#'L'.Or.!l241Auto)
	If (l240.or.l241)
		If cTM > "500"
			If !MtAvlNSer(cCod,cNumSerie,nQuantidad,nQtSegum)
				Return .F.
			EndIf
			dbSelectArea("SB2")
			dbSeek(xFilial()+cCod+cLocal)
			dbSelectArea("SD3")
			If SaldoMov(Nil,Nil,Nil,mv_par03==1,Nil,Nil,Nil,dEmissao) < nQuantidad .And. (GetMV("MV_ESTNEG") != "S")
				cHelp:= STR0067 + AllTrim(SB2->B2_COD) + STR0068 + AllTrim(SB2->B2_LOCAL) //"Produto: "--" Local: "
				Help(" ",1,"MA240NEGAT",,cHelp,4,1)
				Return .F.
			EndIf
			If (!Empty(cLocaliza) .Or. !Empty(cNumSerie)) .And. Localiza(cCod,.T.)
			 	If !(lWmsNew .And. IntWMS(cCod))
			 		/*
						Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
						NecessАrio para o projeto de integraГЦo TOTVS MES.
					*/
					nSaldoEnd := SaldoSBF(cLocal,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote,,,,cOrdem)
				Else
					nSaldoEnd := WmsSldD14(cLocal,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote)
				EndIf
				If nSaldoEnd < nQuantidad
					Help(" ",1,"SALDOLOCLZ")
					Return .F.
				EndIf
			EndIf
		EndIf
	EndIf

	If l240 .or. l250
		If l240 .And. QtdComp(nQuantidad)<=QtdComp(0) .And. ( !Empty(cLote) .Or. !Empty(cLoteDigi) )
			Help(" ",1,"A240QLZERO")
			Return .F.
		EndIf
		M->D3_QUANT := nQuantidad
		If QtdComp(M->D3_QUANT) < QtdComp(0)
			M->D3_QUANT := 0
		EndIf
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,8) == "D3_QUANT" } )
		If nEndereco > 0
			nEnd1 := Val(Subs(aGets[nEndereco],1,2))
			nEnd2 := Val(Subs(aGets[nEndereco],3,1))*2
			nTam  := Len(aTela[nEnd1][nEnd2])
			nDec  := nTam-Rat(".",aTela[nEnd1][nEnd2])
			If nTam == nDec
				nDec := 0
			EndIf
			aTela[nEnd1][nEnd2] := Transform(M->D3_QUANT,PesqPictQT("D3_QUANT"))
		EndIf
		If l250
			A240ParTot()
		EndIf
	EndIf

EndIf
Return .T.

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240ParTotЁ Autor Ё Eveli Morasco         Ё Data Ё 29/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Inicializa a variavel PARCTOT (Parcial/Total)              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum	                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240/MATA250                                            Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function A240ParTot()
Local nEndereco
Local lMVPerdInf := If(Type('lPerdInf')#"L",SuperGetMV("MV_PERDINF",.F.,.F.),lPerdInf)
dbSelectArea("SC2")
dbSeek(xFilial()+Alltrim(M->D3_OP))
If Found()
	M->D3_PARCTOT := "T"
        If QtdComp(M->D3_QUANT+If(lMVPerdInf,0,M->D3_PERDA)) < QtdComp(SC2->C2_QUANT - SC2->C2_QUJE - If(lMVPerdInf,0,SC2->C2_PERDA))
		M->D3_PARCTOT := "P"
	EndIf
	nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_PARCTOT" } )
	If nEndereco > 0
		aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_PARCTOT
	EndIf
EndIf
Return
/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240Custo Ё Autor Ё Marcos Bregantim      Ё Data Ё 22/04/94 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Verifica se Teve Custo Digitado na Movimentacao            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Custo()
Local nVar := &(ReadVar())
If (SF5->F5_VAL != "S" .And. nVar > 0) .Or. (SF5->F5_TIPO=="P" .And. nVar > 0)
	Help(" ",1,"A240F5VAL")
	Return .F.
EndIf
Return .T.

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ёa240Atu   Ё Autor Ё Eveli Morasco         Ё Data Ё 07/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Atualiza arquivos                                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё a240Atu(ExpN1,ExpN2,ExpL1)	                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Numero da linha                                    Ё╠╠
╠╠Ё          Ё ExpL1 = Se atualiza array aAtuSD3					   	  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum	                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240/MATA680                                            Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function a240Atu(nRecSD3,nLinha,lAtuSD3,cNumseq,aCMNF)
Local cApropri     := "0"
Local aCM          := {}
Local aCusto       := {}
Local aRetPE       := {}
Local nSalQtOri    := 0
Local nQtdeSD4     := 0
Local cCF          := ""
Local cLocProc     := GetMvNNR('MV_LOCPROC','99')
Local cLocCQ	   := GetMVNNR('MV_CQ','98')
Local lNegEstr     := SuperGetMV("MV_NEGESTR",.F.,.F.)
Local bBloco       := { |nV,nX| Trim(nV)+Str(nX,1) }
Local lSD3240IT    := ExistTemplate("SD3240I")
Local lSD3240I     := ExistBlock("SD3240I")
Local nDecSD4      := TamSX3('D4_QUANT')[2]
Local lBaixaEmp    :=.F.
Local lBxEmpNeg    :=.F.
Local lBxEmpB8     :=.F.
Local lQtdZero     :=.F.
Local lPergWMS     :=.F.
Local lUsaPotenc   :=.F.
Local lCtbOnLine   :=.F.
Local lIntegdef    := FWHasEAI("MATA240",.T.,,.T.)
Local cMes,nQuant,nI
Local cCodOP, nSaldoSD4
Local lWmsNew      := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local lWmsSD3      := Iif(Type('lExecWms')=='L', lExecWms, .F.)
Local lPrdIntWms   := IntWMS(SD3->D3_COD) // Performance de execuГЦo

Private cNewItSDG  := "" // Variavel utilizada pelo programa MATA103

Default cNumseq := ProxNum() //Pega o numero sequencial do movimento
Default nRecSD3 := 0
Default nLinha  := 0
Default lAtuSD3 := .F.
Default aCMNF   := {}

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Posiciona no registro gerado                                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SD3")
If !(nRecSD3==0)
	MsGoto(nRecSD3)
EndIf

While ( __lSx8 )
	ConfirmSX8()
EndDo
EvalTrigger()

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o custo medio e' calculado On-Line               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cCusMed == "O"
	lCtbOnLine	:= .T.
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Se necessario cria o cabecalho do arquivo de prova           Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If lCriaHeader
		lCriaHeader := .F.
		nHdlPrv := HeadProva(cLoteEst,"MATA240",Subs(cUsuario,7,6),@cArquivo)
		If nHdlPrv <= 0
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Apaga o registro gravado pelo AxInclui                       Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("SD3")
			RecLock("SD3",.F.,.T.)
			dbDelete()
			dbGoTop()
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Tira o filtro do SF5                                         Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("SF5")
			dbClearFilter()
			dbGoTop()
			Return .T.
		EndIf
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Apropriacao Indireta e' identificada com B1_APROPRI = "I" e o  Ё
//Ё numero da OP (D3_OP) em branco.                                Ё
//Ё Apropriacao Direta e' identificada com B1_APROPRI <> "I" ou comЁ
//Ё o numero da OP (D3_OP) preenchido.                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SF5")
If MsSeek(xFilial("SF5")+SD3->D3_TM)
	lQtdZero:=Empty(SD3->D3_QUANT) .And. SF5->F5_QTDZERO == "1"
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Caso esteja baixando empenho verifica o saldo empenhadoЁ
	//Ё a fim de evitar divergencia entre o movimento no SD3 e Ё
	//Ё os movimentos no SD5 e SDB.                            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	lBaixaEmp:=SF5->F5_ATUEMP == "S" .And. ( !Empty(SD3->D3_OP) .Or. ;
											( !Empty(SD3->D3_PROJPMS) .And. ;
											  !Empty(SD3->D3_TASKPMS)) )
	A240AvalEm(@lBaixaEmp,SD3->D3_COD,SD3->D3_LOCAL,SD3->D3_QUANT,SD3->D3_LOTECTL,SD3->D3_NUMLOTE,SD3->D3_LOCALIZ,SD3->D3_NUMSERI,SD3->D3_OP,SD3->D3_TRT,.F.,SD3->D3_TM<="500",@lBxEmpB8,SD3->D3_POTENCI, SD3->D3_PROJPMS, SD3->D3_TASKPMS, @lBxEmpNeg)
EndIf


//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Variavel para gravar demanda no mes corretoЁ
//юдддддддддддддддддддддддддддддддддддддддддддды
cMes := "B3_Q"+StrZero(Month(SD3->D3_EMISSAO),2)

RecLock("SD3",.F.)
Replace SD3->D3_GRUPO With SB1->B1_GRUPO
Replace SD3->D3_TIPO  With SB1->B1_TIPO
//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o movimento interno de producao|
//| atualiza ou nao empenho.                   |
//юдддддддддддддддддддддддддддддддддддддддддддды
If !Empty(SD3->D3_OP)
	If !lBxEmpB8 .And. !lBaixaEmp
		Replace SD3->D3_EMPOP  With "N"
	Else
		Replace SD3->D3_EMPOP  With "S"
	EndIf
EndIf
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Array utilizada para Atualizar o Campo D3_DTLANC            Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lAtuSD3
	aAdd(aAtuSD3,SD3->(Recno()))
EndIf

cCF:= A240GeraCF(@cAproPri,SD3->D3_COD,SD3->D3_TM,SD3->D3_OP)

//здддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Grava a classe do movimento RE0,RE3,DE0 ou DE3 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддды
If Empty(D3_CF) .Or. !IsProdMod(D3_COD)
	If D3_TM <= "500"
		Replace D3_CF With cCF
	Else
		Replace D3_CF With cCF
	EndIf
EndIf

Replace D3_USUARIO With CUSERNAME

//здддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Grava o numero sequencial do movimento         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддды
Replace D3_NUMSEQ With cNumSeq
Replace D3_CHAVE With SubStr(D3_CF,2,1)+IIf(D3_CF=="DE4","9","0")

If cApropri != "6" .Or. SF5->F5_GERAATF == "1"
	If cApropri == "3" .And. SD3->D3_TM <= "500"
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Pega os 5 custos medios atuais do almoxarifado de processo. Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		aCM := PegaCMAtu(SD3->D3_COD,cLocProc)
	Else
		//здддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Pega os 5 custos medios atuais             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддды
		aCM := PegaCMAtu(SD3->D3_COD,SD3->D3_LOCAL)
	EndIf
Else
	aCM := Array(05)
	For nI:=1 To 5
		aCM[nI] := IIf(&(Eval(bBloco,"SD3->D3_CUSTO",nI))=0,0,&(Eval(bBloco,"SD3->D3_CUSTO",nI))/If(lQtdZero,1,SD3->D3_QUANT))
	Next
EndIf

If SF5->F5_GERAATF == "1" .And. (aCM[1]*SB2->B2_QATU) > aCMNF[1]
	For nI := 1 To Len(aCMNF)
		aCM[nI] := aCMNF[nI] / SD3->D3_QUANT
	Next nI
EndIf

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Grava o custo da movimentacao              Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
aCusto := GravaCusD3(aCM,NIL,NIL,NIL,lQtdZero)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Executa a atualizacao das tabelas do SIGAPMS 1-Inclusao      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PmsWriteRQ(1,"SD3",aCusto)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁIntegracao TMS                                                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If l240 .And. IntTMS() .And. (Len(aRatVei)>0  .Or. Len(aRatFro)>0)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica se o Item da NF foi rateado por Veiculo/Viagem ou por Frota    Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	cItem  := StrZero(1,Len(SDG->DG_ITEM))
	nItRat := aScan(aRatVei,{|x| x[1] == cItem})

	If Type("nHdlPrv") <> "N"	.And. Type("lCtbOnLine") <> "L"
		lCtbOnLine := .F.
		nHdlPrv    := 0
		nTotal     := 0
		cLoteEst   := ''
	EndIf

	If nItRat > 0
		cTpRateio := "V"
		A103GrvSDG('SD3',aRatVei,cTpRaTeio,cItem,lCtbOnLine,nHdlPrv,@nTotal,cLoteEst,"MATA240")
	Else
		nItRat := aScan(aRatFro,{|x| x[1] == cItem})
		If nItRat > 0
			cTpRateio := "F"
			A103GrvSDG('SD3',aRatFro,cTpRateio,cItem,lCtbOnLine,nHdlPrv,@nTotal,cLoteEst,"MATA240")
		EndIf
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁIntegracao WMS                                                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !lPrdIntWms .Or. (lPrdIntWms .And. (Empty(SD3->D3_SERVIC) .Or. (SD3->D3_TM <= '500') .Or. (lWmsNew .And. SD3->D3_TM > '500')))
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Atualiza o saldo atual (VATU) com os dados do SD3     Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If !B2AtuComD3(aCusto,NIL,NIL,lBaixaEmp,NIL,.T.,lBxEmpB8)
		//-- Se entrada no CQ, gera SD7
		If SD3->D3_TM <= '500' .And. SD3->D3_LOCAL == cLocCQ
			fGeraCQ0('SD3',SD3->D3_COD,'DE')
			If Rastro(SD3->D3_COD) .And. SD3->(D3_FILIAL+D3_COD+D3_NUMSEQ) == SD7->(D7_FILIAL+D7_PRODUTO+D7_NUMSEQ)
				RecLock('SD7',.F.)
				Replace SD7->D7_LOTECTL With SD3->D3_LOTECTL
				Replace SD7->D7_NUMLOTE With SD3->D3_NUMLOTE
				MsUnlock()
			EndIf
			If Localiza(SD3->D3_COD) .And. !Empty(GetMV("MV_DISTAUT"))
				A100Distri(SD3->D3_COD,SD3->D3_LOCAL,SD3->D3_NUMSEQ,SD3->D3_DOC,NIL,NIL,NIL,NIL,NIL,SD3->D3_QUANT,SD3->D3_LOTECTL,SD3->D3_NUMLOTE)
				//SIGAACD - Atualiza endereco/n. serie na etiqueta
				If UsaCB0("01")
					CBOPDistAut(SD3->D3_COD,SD3->D3_OP,SD3->D3_NUMSEQ)
				EndIf
			EndIf
			//-- Se item negativo (coproduto) e movimento atrelado a OP, atualiza controle de CQ por producao
			If !Empty(SD3->D3_OP) .And. IsProdCoPR(SD3->D3_COD,SD3->D3_OP,SD3->D3_TRT)
				fEnvCQProd(SD3->D3_COD,SD3->D3_TM,.T.)
			EndIf
		EndIf
		
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica se o movimento e' referente a material indireto        Ё
		//Ё e atualiza o saldo atual (VATU) do processo com os dados do SD3 Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If cApropri == "3"
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Atualiza o saldo atual (VATU) com os dados do SD3     Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			B2AtuComD3(aCusto,cLocProc,NIL,lBaixaEmp,NIL,.T.,lBxEmpB8,,,,,,,,,,,,,,,,,,,,,,,,,.F.)
		EndIf

		//зддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza os saldos atuais (VATU) das OP's Ё
		//юддддддддддддддддддддддддддддддддддддддддддды
		If !Empty(SD3->D3_OP) .And. cAproPri # "9"
			C2AtuComD3(aCusto)
		EndIf

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza arquivo de demandas se for movimento de material direto Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If cApropri == "0"
			dbSelectArea("SB3")
			MsSeek(xFilial("SB3")+SD3->D3_COD)
			If Eof()
				RecLock("SB3",.T.)
				Replace B3_FILIAL With xFilial(), B3_COD With SD3->D3_COD
			Else
				RecLock("SB3",.F.)
			EndIf
			If SD3->D3_TM <= "500"
				Replace &(cMes) With &(cMes) - SD3->D3_QUANT
			Else
				Replace &(cMes) With &(cMes) + SD3->D3_QUANT
			EndIf
		EndIf

		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza o SIGAMNT apos gravacao do movimento                     Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If GetNewPar("MV_NGMNTES","N") == "S"
            NGSD3240I(nLinha)
		EndIf
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Pontos de Entrada                                                 Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lSD3240IT
            ExecTemplate("SD3240I",.F.,.F.,{nLinha})
		EndIf
		If lSD3240I
			ExecBlock("SD3240I",.F.,.F.,{nLinha})
		EndIf
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza arq. de empenhos e B2_QEMP se for movimento de mat. dir. Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If cApropri == "0" .Or. cApropri == "6" .Or. cApropri == "9"
			If lBaixaEmp .Or. lBxEmpNeg
				lUsaPotenc:=PotencLote(SD3->D3_COD)
				dbSelectArea("SD4")
				dbSetOrder(1)
				If dbSeek(xFilial()+SD3->D3_COD+SD3->D3_OP+SD3->D3_TRT+If(lBxEmpb8,SD3->D3_LOTECTL+SD3->D3_NUMLOTE,CriaVar("D3_LOTECTL")+CriaVar("D3_NUMLOTE")))
					If !lBxEmpB8 .And. lUsaPotenc
						nQtdeSD4:=Round(SD3->D3_QUANT*(SD3->D3_POTENCI/100),nDecSD4)
					Else
						nQtdeSD4:=SD3->D3_QUANT
					EndIf
					//-- Movimento de Devolucao Interna
					If SD3->D3_TM <= "500"
						//-- Tratamento para Calculo de Empenho Negativo
						If lNegEstr .And. SD4->D4_QTDEORI < 0

						    nSaldoSD4:=D4_QUANT + nQtdeSd4

						    If nSaldoSD4>0
						    	nSaldoSd4:=0
						    EndIf

							RecLock("SD4",.F.)
							Replace D4_QUANT   With nSaldoSD4
							Replace D4_QTSEGUM With D4_QTSEGUM + ConvUM(SD4->D4_COD, nSaldoSD4, SD3->D3_QTSEGUM, 2)
						Else
							//-- Tratamento para Calculo de Empenho Positivo
							If ( D4_QUANT + nQtdeSD4 ) <= D4_QTDEORI
								RecLock("SD4",.F.)
								Replace D4_QUANT   With D4_QUANT + nQtdeSD4
								Replace D4_QTSEGUM With D4_QTSEGUM + ConvUM(SD4->D4_COD,nQtdeSD4,SD3->D3_QTSEGUM,2)
							Else
	                            If ( nQtdeSD4 > D4_QTDEORI ) .Or. ( D4_QUANT + nQtdeSD4 ) > D4_QTDEORI
									//-- Tratamento para devolucao superior a qtd. original
									If QtdComp(D4_QTDEORI) == QtdComp(D4_QUANT)
										nSaldoSD4 := nQtdeSD4
										nSalQtOri := Max(D4_QTDEORI,D4_QUANT+nSaldoSD4)
									Else
										nSaldoSD4 := ( D4_QTDEORI - D4_QUANT )
									EndIf
								Else
									nSaldoSD4 := nQtdeSD4
								EndIf
								RecLock("SD4",.F.)
								Replace D4_QUANT   With D4_QUANT + nSaldoSD4
								Replace D4_QTSEGUM With D4_QTSEGUM + ConvUM(SD4->D4_COD, nSaldoSD4, SD3->D3_QTSEGUM, 2)
								If nSalQtOri > 0
									Replace D4_QTDEORI With nSalQtOri
								EndIf
							EndIf
						EndIf
					Else
						//-- Tratamento para Calculo de Empenho Positivo
						If ( !lNegEstr .And. SD4->D4_QUANT >= nQtdeSD4 )
							RecLock("SD4",.F.)
							Replace D4_QUANT   With D4_QUANT - nQtdeSD4
							Replace D4_QTSEGUM With D4_QTSEGUM - ConvUM(SD4->D4_COD, nQtdeSD4, SD3->D3_QTSEGUM, 2)
						//-- Tratamento para Calculo de Empenho Negativo
						ElseIf ( lNegEstr .And. IIf(SD4->D4_QUANT > 0, SD4->D4_QUANT >= nQtdeSD4 , (SD4->D4_QUANT + (nQtdeSD4*-1)) < 0 ) )
							RecLock("SD4",.F.)
							If lNegEstr .And. SD4->D4_QUANT < 0
								nQtdeSD4:=nQtdeSD4*-1
								Replace D4_QUANT   With D4_QUANT + nQtdeSD4
								Replace D4_QTSEGUM With D4_QTSEGUM + ConvUM(SD4->D4_COD, nQtdeSD4, SD3->D3_QTSEGUM, 2)
							Else
								Replace D4_QUANT   With D4_QUANT - nQtdeSD4
								Replace D4_QTSEGUM With D4_QTSEGUM - ConvUM(SD4->D4_COD, nQtdeSD4, SD3->D3_QTSEGUM, 2)
							EndIf
						Else
						//-- Tratamento para Consumo Total
							cCodOP := SD4->D4_FILIAL+SD4->D4_COD+SD4->D4_OP
							While !Eof() .And. cCodOP == D4_FILIAL+D4_COD+D4_OP
								nSaldoSD4 := IIf( nQtdeSD4 > D4_QUANT, D4_QUANT, nQtdeSD4 )
								nQtdeSD4 -= nSaldoSD4
								RecLock("SD4",.F.)
								Replace D4_QUANT   With D4_QUANT - nSaldoSD4
								Replace D4_QTSEGUM With D4_QTSEGUM - ConvUM(SD4->D4_COD, nSaldoSD4, SD3->D3_QTSEGUM, 2)
								If nQtdeSD4 <= 0
									Exit
								EndIf
								dbSelectArea("SD4")
								dbSkip()
							End
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica se o custo medio e' calculado On-Line               Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If cCusMed == "O"
			//зддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Gera o lancamento no arquivo de prova           Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддды
			If SD3->D3_TM <= "500"
				nTotal+=DetProva(nHdlPrv,"668","MATA240",cLoteEst)
			Else
				nTotal+=DetProva(nHdlPrv,"666","MATA240",cLoteEst)
			EndIf

			If ( UsaSeqCor() ) .AND. Type("aCtbDia") == "A"
				aAdd(aCtbDia,{"SD3",SD3->(RECNO()),"","D3_NODIA","D3_DIACTB"})
			Else
		 		aCtbDia := {}
			EndIf

		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Grava os lancamentos nas contas orcamentarias SIGAPCO    Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If SD3->D3_TM <= "500"
			If ! Empty(SD3->D3_OP) .And. IsProdMod(SD3->D3_COD)
				PcoDetLan("000152","01","MATA250")
			Else
				PcoDetLan("000151","01","MATA240")
			EndIf
		Else
			If ! Empty(SD3->D3_OP) .And. IsProdMod(SD3->D3_COD)
				PcoDetLan("000152","02","MATA250")
			Else
				PcoDetLan("000151","02","MATA240")
			EndIf
		EndIf
		// Se for entrada e estiver integrado ao WMS novo gera direto a integraГЦo
		// Neste caso nЦo precisa gerar DH1, deve gerar o saldo no armazИm origem
		// pois o WMS bloqueia o mesmo atИ o momento do endereГamento
		If !lWmsSD3 .And. lWmsNew .And. (SD3->D3_TM <= '500') .And. lPrdIntWms
			WmsAvalSD3("1","SD3","MATA240",cA240End)
		EndIf
	EndIf
ElseIf lPrdIntWms .And. !Empty(SD3->D3_SERVIC) .And. SD3->D3_TM>'500' .And. !lWmsNew
	WmsAvalSD3("1")
EndIf

A240TM(.T.)

// chamada da funГЦo integdef
If lIntegdef .And. l240
	FwIntegDef('MATA240')
EndIf

Return Nil

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ёa240DesAtuЁ Autor Ё Eveli Morasco         Ё Data Ё 07/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Estorna os valores dos arquivos                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё a240DesAtu(ExpL1)                                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpL1 = Se verdadeiro, atualiza data do inventario         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240/MATA680                                            Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function a240DesAtu(lInventario)
// Esta funcao passou a ser utilizada no SIGALOJA (LOJA380.PRX)
Local cMes 		:= "B3_Q"+StrZero(Month(SD3->D3_EMISSAO),2)
Local bCampo 	:= {|nCPO| Field(nCPO) } ,aCusto := {}, cLote,nQtdeSD4:=0
Local cApropri  := SubStr(SD3->D3_CF,3,1)
Local cLocProc  := GetMvNNR('MV_LOCPROC','99')
Local cLocCQ	:= GetMVNNR('MV_CQ','98')
Local lSD3240E  := ExistBlock("SD3240E")
Local lNegEstr  := SuperGetMV("MV_NEGESTR",.F.,.F.)
Local aSavSD4   := {SD4->(IndexOrd()), SD4->(RecNo())}
Local nDecSD4   := TamSX3('D4_QUANT')[2]
Local lUsaPotenc:= PotencLote(SD3->D3_COD)
Local cSeek		:= ""
Local lBaixaEmp := .F.
Local lBxEmpNeg := .F.
Local lBxEmpB8  := .F.
Local lCtbOnLine:= .F.
Local cSeekSD4  := ""
Local cCamposSD4:= ""
Local cProg     := ""
Local nQtBxSD4  := 0
Local nQtdSD3   := 0
Local nQtdSD32UM:= 0
Local i         := 0
Local lACDCB0   := (SuperGetMV("MV_INTACD",.F.,"0") == "1") .And. UsaCB0("01")
Local cSeekCB0  := ""
Local cD1NumSeq := ""
Local lWmsNew   := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local ld3kLimp	:= Findfunction('MatLimpD3K')

Default lInventario := .F.

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o custo medio e' calculado On-Line               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cCusMed == "O"
	lCtbOnLine:= .T.
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Se necessario cria o cabecalho do arquivo de prova           Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If lCriaHeader
		lCriaHeader := .F.
		nHdlPrv := HeadProva(cLoteEst,"MATA240",Subs(cUsuario,7,6),@cArquivo)
		If nHdlPrv <= 0
			dbSelectArea("SD3")
			Return .T.
		EndIf
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Grava o Flag de estorno                    Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
SF5->(dbSeek(xFilial("SF5")+SD3->D3_TM))
lBaixaEmp:=(SF5->F5_ATUEMP == "S" .OR. Substr(SD3->D3_CF,3,1)=="5" ).And. ( !Empty(SD3->D3_OP) 		.Or. ;
																	         ( !Empty(SD3->D3_PROJPMS) .And. ;
																	 	       !Empty(SD3->D3_TASKPMS)) )
A240AvalEm(@lBaixaEmp,SD3->D3_COD,SD3->D3_LOCAL,SD3->D3_QUANT,SD3->D3_LOTECTL,SD3->D3_NUMLOTE,SD3->D3_LOCALIZ,SD3->D3_NUMSERI,SD3->D3_OP,SD3->D3_TRT,.F.,!(SD3->D3_TM<="500"),@lBxEmpB8,SD3->D3_POTENCI, SD3->D3_PROJPMS, SD3->D3_TASKPMS,@lBxEmpNeg)
dbSelectArea("SD3")
RecLock("SD3",.F.)
Replace D3_ESTORNO With "S"
cLote := SD3->D3_NUMLOTE
MsUnLock()

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Salva a integridade dos campos de Bancos de Dados            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
For i := 1 To FCount()
	M->&(EVAL(bCampo,i)) := FieldGet(i)
Next i

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Cria o registro de estorno com mesmos dados do original      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
RecLock("SD3",.T.)
For i := 1 TO FCount()
	FieldPut(i,M->&(EVAL(bCampo,i)))
Next i
If M->D3_TM <= "500"
	Replace D3_TM With "999",D3_CF With "RE"+cApropri
Else
	Replace D3_TM With "499",D3_CF With "DE"+cApropri
EndIf
Replace D3_USUARIO With CUSERNAME

Replace D3_CHAVE With SubStr(D3_CF,2,1)+IIf(D3_CF=="DE4","9","0")

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Estorna Amarracao com producoes de terceiros MATA037    	   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ld3kLimp
	MatLimpD3K(SD3->D3_COD,SD3->D3_NUMSEQ)
EndIf

If (Empty(SD3->D3_SERVIC) .Or. (lWmsNew .And. SD3->D3_TM <= '500')) .Or. (!Empty(SD3->D3_SERVIC) .And. SD3->D3_ESTORNO = 'S' .And. SD3->D3_TM > '500')

	//здддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Pega o custo da movimentacao               Ё
	//юдддддддддддддддддддддддддддддддддддддддддддды
	aCusto := PegaCusD3()
	
	//-- Se foi para CQ, deleta SD7
	If SD3->D3_LOCAL == cLocCQ
		SD7->(dbSetOrder(3))
		If SD7->(dbSeek(xFilial('SD7')+SD3->D3_COD+SD3->D3_NUMSEQ, .F.)) .And. SD7->D7_ORIGLAN == 'DE'
			cSeekSD7 := xFilial('SD7')+SD7->D7_NUMERO+SD7->D7_PRODUTO
			SD7->(dbSetOrder(1))
			SD7->(dbSeek(cSeekSD7,.F.))
			While !SD7->(Eof()) .And. cSeekSD7 == SD7->(D7_FILIAL+D7_NUMERO+D7_PRODUTO)
				RecLock('SD7', .F.)
				SD7->(dbDelete())
				SD7->(MsUnlock())
				SD7->(dbSkip())
			End
		EndIf
	EndIf

	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Atualiza o saldo atual (VATU) com os dados do SD3     Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	B2AtuComD3(aCusto,NIL,NIL,lBaixaEmp,NIL,NIL,lBxEmpB8)

	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Atualiza a data do inventario                         Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If !lWmsNew
		// Atualiza a data do inventario SB2
		If lInventario
			B2AtuDtInv()
			// Atualiza a data do inventario SBF
			If Localiza(SD3->D3_COD)
				SBF->(dbSetOrder(1))
				If SBF->(dbSeek(xFilial("SBF")+SD3->D3_LOCAL+SD3->D3_LOCALIZ+SD3->D3_COD+SD3->D3_NUMSERI))
					BFAtuDtInv()
				EndIf
			EndIf
		EndIf
	EndIf

	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se o movimento e' referente a material indireto        Ё
	//Ё e atualiza o saldo atual (VATU) do processo com os dados do SD3 Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If cApropri == "3"
		B2AtuComD3(aCusto,cLocProc,NIL,lBaixaEmp,NIL,NIL,lBxEmpB8)
	EndIf

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica estorno de movimentos do tipo RE5             Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If Substr(D3_CF,3,1) == "5"
		SD1->(dbSetOrder(5))
		If SD1->(dbSeek(xFilial("SD1")+SD3->D3_COD+SD3->D3_LOCAL+SD3->D3_NUMSEQ)) .And. SD1->D1_OP == SD3->D3_OP
			Reclock("SD1",.F.)
			Replace D1_OP With Criavar("D1_OP",.F.)
			MsUnlock()
		EndIf
	EndIf
	//зддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Atualiza os saldos atuais (VATU) das OP's Ё
	//юддддддддддддддддддддддддддддддддддддддддддды
	If !Empty(SD3->D3_OP) .And. cAproPri # "9"
		C2AtuComD3(aCusto)
	EndIf

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Executa a atualizacao das tabelas do SIGAPMS 2-Estorno       Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	PmsWriteRQ(2,"SD3",aCusto)

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁIntegracao TMS                                                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If IntTMS()
		If Type("nHdlPrv") <> "N"	.And. Type("lCtbOnLine") <> "L"
			lCtbOnLine := .F.
			nHdlPrv    := 0
			nTotal     := 0
			cLoteEst   := ''
		EndIf
		If l240
			cProg := "MATA240"
		ElseIf l241
			cProg := "MATA241"
		EndIf
		EstornaSDG("SD3",SD3->D3_NUMSEQ,lCtbOnLine,nHdlPrv,@nTotal,cLoteEst,cProg)
	EndIf

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Atualiza arquivo de demandas se for movimento de material direto Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If cApropri == "0"
		dbSelectArea("SB3")
		dbSeek(xFilial()+SD3->D3_COD)
		If Eof()
			RecLock("SB3",.T.)
			Replace B3_FILIAL With xFilial(), B3_COD With SD3->D3_COD
		Else
			RecLock("SB3",.F.)
		EndIf
		If SD3->D3_TM <= "500"
			Replace &(cMes) With &(cMes) - SD3->D3_QUANT
		Else
			Replace &(cMes) With &(cMes) + SD3->D3_QUANT
		EndIf
	EndIf

	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Atualiza arq. de empenhos e B2_QEMP se for movimento de mat. dir. Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If cApropri == "0" .Or. cApropri == "6" .Or. cApropri == "9"
		If lBaixaEmp .Or. lBxEmpNeg
			nQtdSD3    := SD3->D3_QUANT
			nQtdSD32UM := SD3->D3_QTSEGUM
			dbSelectArea("SD4")
			dbSetOrder(1)
			cCamposSD4:="D4_FILIAL+D4_COD+D4_OP+D4_TRT+D4_LOTECTL+D4_NUMLOTE"
			If !dbSeek(cSeekSD4 := xFilial()+SD3->D3_COD+SD3->D3_OP+SD3->D3_TRT+SD3->D3_LOTECTL+SD3->D3_NUMLOTE)
				cCamposSD4:="D4_FILIAL+D4_COD+D4_OP+D4_TRT"
				dbSeek(cSeekSD4 := xFilial()+SD3->D3_COD+SD3->D3_OP+SD3->D3_TRT)
				If !lBxEmpB8 .And. lUsaPotenc
					nQtdSD3:=Round(SD3->D3_QUANT*(SD3->D3_POTENCI/100),nDecSD4)
				EndIf
			EndIf
			While ! Eof() .And. cSeekSD4 == &(cCamposSD4) .And. nQtBxSD4 < nQtdSD3
				RecLock("SD4",.F.)
				If SD3->D3_TM <= "500"
					//-- Tratamento para Calculo de Empenho Negativo
					If lNegEstr .And. SD4->D4_QTDEORI < 0
						nQtdeSD4 := iif((nQtdSD3-nQtBxSD4)>0,(nQtdSD3-nQtBxSD4)*-1,(nQtdSD3-nQtBxSD4))   //JCG
						If ( (SD4->D4_QUANT - nQtdeSD4) < SD4->D4_QTDEORI )
							nQtdeSD4 := (SD4->D4_QUANT-	nQtdeSD4)
		  					nQtBxSD4 += nQtdeSD4
							Replace D4_QUANT   With nQtdeSD4
							Replace D4_QTSEGUM With D4_QTSEGUM + ConvUM(SD4->D4_COD, nQtdeSD4, nQtdSD32UM, 2)
						Else
		  					nQtBxSD4 += nQtdeSD4
							Replace D4_QUANT   With D4_QUANT   - nQtdeSD4
							Replace D4_QTSEGUM With D4_QTSEGUM - ConvUM(SD4->D4_COD, nQtdeSD4, nQtdSD32UM, 2)
						EndIf
					//-- Tratamento para Calculo de Empenho Positivo
					Else
						nQtdeSD4 := Min(SD4->D4_QTDEORI - SD4->D4_QUANT, nQtdSD3 - nQtBxSD4)
						nQtBxSD4 += nQtdeSD4
						Replace D4_QUANT   With D4_QUANT   + nQtdeSD4
						Replace D4_QTSEGUM With D4_QTSEGUM + ConvUM(SD4->D4_COD, nQtdeSD4, nQtdSD32UM, 2)
					EndIf
				Else
					//-- Tratamento para Calculo de Empenho Negativo
					If lNegEstr .And. SD4->D4_QTDEORI < 0
 					    nQtdSD3:=iif(nQtdSD3>0,nQtdSD3*-1,nQtdeSD3)
						nQtdeSD4 := ( nQtdSD3 - nQtBxSD4)
						If ( (SD4->D4_QUANT + nQtdeSD4) < SD4->D4_QTDEORI ) .Or. (SD4->D4_QUANT + nQtdeSD4) > 0
							nQtdeSD4 := ( SD4->D4_QTDEORI - SD4->D4_QUANT )
		  					nQtBxSD4 += nQtdeSD4
							Replace D4_QUANT   With D4_QUANT   + nQtdeSD4
							Replace D4_QTSEGUM With D4_QTSEGUM + ConvUM(SD4->D4_COD, nQtdeSD4, nQtdSD32UM, 2)
						//-- Tratamento para Calculo de Empenho Positivo
						Else
		  					nQtBxSD4 += nQtdeSD4
							Replace D4_QUANT   With D4_QUANT   + nQtdeSD4
							Replace D4_QTSEGUM With D4_QTSEGUM + ConvUM(SD4->D4_COD, nQtdeSD4, nQtdSD32UM, 2)
						EndIf
					Else
						nQtdeSD4 := Min(SD4->D4_QUANT, nQtdSD3)
						nQtBxSD4 += nQtdeSD4
						Replace D4_QUANT   With D4_QUANT   - nQtdeSD4
						Replace D4_QTSEGUM With D4_QTSEGUM - ConvUM(SD4->D4_COD, nQtdeSD4, nQtdSD32UM, 2)
					EndIf
				EndIf
				MsUnlock()
				dbSkip()
			EndDo
			dbSetOrder(aSavSD4[1])
			MsGoto(aSavSD4[2])
		EndIf
	EndIf

	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Atualiza SIGAMNT apos estorno do movimento                        Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If GetNewPar("MV_NGMNTES","N") == "S"
        NGSD3240E()
	EndIf

	//-----------------------------------------------------
	// Atualiza SIGAMDT apos estorno
	//-----------------------------------------------------
	If SuperGetMv( "MV_NGMDTES" , .F. , ""  ) == "S" .And. FindFunction("MDTAtuEst")
		MDTAtuEst( SD3->D3_NUMSEQ , SD3->D3_FILIAL )
	EndIf

	If lSD3240E
		ExecBlock("SD3240E",.F.,.F.)
	EndIf

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se o custo medio e' calculado On-Line               Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If cCusMed == "O"
		//зддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Gera o lancamento no arquivo de prova           Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддды
		If SD3->D3_TM <= "500"
			nTotal+=DetProva(nHdlPrv,"668","MATA240",cLoteEst)
		Else
			nTotal+=DetProva(nHdlPrv,"666","MATA240",cLoteEst)
		EndIf
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Grava os lancamentos nas contas orcamentarias SIGAPCO    Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If SD3->D3_TM <= "500"
		If ! Empty(SD3->D3_OP) .And. IsProdMod(SD3->D3_COD)
			PcoDetLan("000152","01","MATA250")
		Else
			PcoDetLan("000151","01","MATA240")
		EndIf
	Else
		If ! Empty(SD3->D3_OP) .And. IsProdMod(SD3->D3_COD)
			PcoDetLan("000152","02","MATA250")
		Else
			PcoDetLan("000151","02","MATA240")
		EndIf
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Atualiza etiqueta na CB0, se houver        Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
If lACDCB0
	CB0->(DbSetOrder(4)) // FILIAL + TIPO + LOCAL + CODPRO
	If CB0->(MsSeek(cSeekCB0 := xFilial("CB0")+"01"+SD3->D3_LOCAL+SD3->D3_COD))
		While CB0->(!Eof()) .And. CB0->CB0_NUMSEQ <> SD3->D3_NUMSEQ .And. cSeekCB0 == xFilial("CB0")+"01"+CB0->CB0_LOCAL+CB0->CB0_CODPRO
			CB0->(DbSkip())
			Loop
		EndDo
		If CB0->CB0_NUMSEQ == SD3->D3_NUMSEQ
			// Busca numero de sequencia original, se houver
			If !Empty(CB0->CB0_NFENT+CB0->CB0_SERIEE+CB0->CB0_FORNEC+CB0->CB0_LOJAFO+CB0->CB0_CODPRO+CB0->CB0_ITNFE)
				SD1->(DbSetOrder(1)) // FILIAL + DOC + SERIE + FORNECE + LOJA + COD + ITEM
				If SD1->(MsSeek(xFilial("SD1")+CB0->CB0_NFENT+CB0->CB0_SERIEE+CB0->CB0_FORNEC+CB0->CB0_LOJAFO+CB0->CB0_CODPRO+CB0->CB0_ITNFE))
					cD1NumSeq := SD1->D1_NUMSEQ
				EndIf
			EndIf
			RecLock("CB0",.F.)
			CB0->CB0_STATUS   := ''
			CB0->CB0_ORIGEM   := ''
			CB0->CB0_OPREQ    := ''
			CB0->CB0_NUMSEQ   := cD1NumSeq
			MsUnlock()
		EndIf
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao WMS - Realiza o Estorno do Servico                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !Empty(SD3->D3_SERVIC) .And. IntWMS(SD3->D3_COD)
	WmsAvalSD3("4")
EndIf


Return Nil
/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240Local Ё Autor Ё Wilson Junior         Ё Data Ё 21/06/94 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa que verifica a Qtd. No Local                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Local()
Local cLocal   := ''
Local cCod     := ''
Local nQuant   := ''
Local cLocaliza:= ''
Local cLoteDigi:= ''
Local cNumSerie:= ''
Local cLote    := ''
Local cMvCq	:= GetMvNNR('MV_CQ','98')
Local lRet     := .T.
Local dEmissao := dDatabase
Local aAreaAnt := GetArea()
Local aAreaSB1 := SB1->(GetArea())
Local aAreaSF5 := SF5->(GetArea())
Local nPrapont := GetNewPar("MV_PRAPONT",2)
Local lWmsNew  := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local nSaldoEnd:= 0
Local cOrdem   := ''

If l241.Or.l242
	cLocaliza := If(!Empty(nPosLocali),aCols[n,nPosLocali],CriaVar('D3_LOCALIZ'))
	cLoteDigi := If(!Empty(nPosLotCTL),aCols[n,nPosLotCTL],CriaVar('D3_LOTECTL'))
	cNumSerie := If(!Empty(nPosNumSer),aCols[n,nPosNumSer],CriaVar('D3_NUMSERI'))
	cLote     := If(!Empty(nPosLote),aCols[n,nPosLote],CriaVar('D3_NUMLOTE'))
	cCod      := If(SubStr(ReadVar(),4,6)=='D3_COD',M->D3_COD,If(!Empty(nPosCod),aCols[n,nPosCod],UserException('D3_COD'+OemToAnsi(STR0019))))
	nQuant    := If(SubStr(ReadVar(),4,8)=='D3_QUANT',M->D3_QUANT,If(!Empty(nPosQuant),aCols[n,nPosQuant],UserException('D3_COD'+OemToAnsi(STR0019))))
	nQuant2UM := If(SubStr(ReadVar(),4,8)=='D3_QTSEGUM',M->D3_QTSEGUM,If(!Empty(nPosQtSegum),aCols[n,nPosQtSegum],0))
	cLocal    := If(SubStr(ReadVar(),4,8)=='D3_LOCAL',M->D3_LOCAL,If(!Empty(nPosLocal),aCols[n,nPosLocal],UserException('D3_LOCAL'+OemToAnsi(STR0019))))
	cOrdem    := If(Type("nPosOp") == "N" .And. !Empty(nPosOp),aCols[n,nPosOP],CriaVar('D3_OP'))
	If l241
		dEmissao  := If(Type('dA241Data') == "D",dA241Data,dDataBase)
	ElseIf l242
		dEmissao  := If(Type('dEmis260') == "D",dEmis260,dDataBase)
	EndIf
Else
	cLocaliza := M->D3_LOCALIZ
	cLoteDigi := M->D3_LOTECTL
	cNumSerie := M->D3_NUMSERI
	cLote     := M->D3_NUMLOTE
	cCod      := M->D3_COD
	nQuant    := M->D3_QUANT
	nQuant2UM := M->D3_QTSEGUM
	cTM       := M->D3_TM
	cLocal    := M->D3_LOCAL
	dEmissao  := M->D3_EMISSAO
	cOrdem    := M->D3_OP
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Localizacoes - Valida armazem de transito                     |
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If IsLocTran(cLocal)
	lRet := .F.
EndIf

If lRet
	If l242
		cOp	 := CriaVar("D3_OP")
	Else
		cOp  := If(l241,If(SubStr(ReadVar(),4,8)=='D3_OP',M->D3_OP,If(Type("nPosOp") == "N" .And. !Empty(nPosOP),aCols[n,nPosOp],CriaVar('D3_OP'))),M->D3_OP)
	EndIf
EndIf

If lRet .And. (l240 .Or. l241) .And. GetMvNNR('MV_LOCPROC','99') == cLocal
	Help(" ",1,"A240LOCPRC")
	lRet := .F.
EndIf

If lRet .And. cTM > '500' .And. cMvCq == cLocal
	Help(" ",1,"A240LOCCQ")
	lRet := .F.
EndIf

If lRet .And. (l240 .Or. l241 .Or. l242) .And. (GetMV("MV_ESTNEG") == "N" .Or. Localiza(cCod,.T.) .Or. Rastro(cCod)) .And. !IsProdMod(cCod) .And. !Empty(nQuant) .And. (Type('l240Auto')#'L'.Or.!l240Auto)  .And. (Type('l241Auto')#'L'.Or.!l241Auto)
	If cTM > "500"
		If lRet .And. !MtAvlNSer(cCod,cNumSerie,nQuant,nQuant2UM)
			lRet := .F.
		EndIf
		If lRet .And. cLocal <> M->D3_LOCAL
			dbSelectArea("SB2")
			dbSeek(xFilial()+cCod+cLocal)
			dbSelectArea("SD3")
			If lRet .And. (SaldoMov(Nil,Nil,Nil,mv_par03==1,Nil,Nil,Nil,dEmissao)-nQuant) < 0
				cHelp:= STR0067 + AllTrim(SB2->B2_COD) + STR0068 + AllTrim(SB2->B2_LOCAL) //"Produto: "--" Local: "
				Help(" ",1,"MA240NEGAT",,cHelp,4,1)
				lRet := .F.
			EndIf
			If lRet .And. (!Empty(cLocaliza) .Or. !Empty(cNumSerie)) .And. Localiza(cCod,.T.)
				If !(lWmsNew .And. IntWMS(cCod))
					/*
						Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
						NecessАrio para o projeto de integraГЦo TOTVS MES.
					*/
					nSaldoEnd := SaldoSBF(cLocal,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote,,,,cOrdem)
				Else
					nSaldoEnd := WmsSldD14(cLocal,cLocaliza,cCod,cNumSerie,cLoteDigi,cLote)
				EndIf
				If nSaldoEnd < nQuant
					Help(" ",1,"SALDOLOCLZ")
					lRet := .F.
				EndIf
			EndIf
		EndIf
	Else
		If lRet .And. l242 .And. !Empty(cLocaliza)
			lRet:=ExistCpo("SBE",cLocal+cLocaliza)
		EndIf
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Utiliza o parametro MV_VLDALMO para validar o local informado |
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. !(SB2->(dbSeek(xFilial("SB2")+cCod+cLocal))) .And. (GetMV("MV_VLDALMO") == "S")
	If MatGrdPrrf(cCod)
		If cLocal # SC2->C2_LOCAL
			Help(" ",1,"A250ARMGRD")
			lRet := .F.
		EndIf
	Else
		Help(" ",1,"A260LOCAL")
		lRet := .F.
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё No apontamento de producao nao permitir a digitacao do armazem|
//| de CQ quando o conteudo do campo B1_NUMCQ estiver preenchido  |
//| com Zero.                                                     |
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. Type("l250") == "L" .And. l250
	dbSelectArea("SB1")
	dbSetOrder(1)
	If dbSeek(xFilial("SB1")+cCod)
		If cMvCq == cLocal
			If SB1->B1_NUMCQPR == 0
				//-- Criacao do Help A250NUMCQP
				PutHelp("PA250NUMCQP",	{"Para esta ProduГЦo nЦo podera utilizar ","o armazem de CQ, pois o campo B1_NUMCQPR","esta configurado com quantidade igual","a Zero."} ,;
										{"For production, the Quality Control","warehouse cannot be used because the","B1_NUMCQPR field is set to zero."} ,;
										{"Para esta produccion no se podra utilizar","el almacen de Control de Calidad porque","el campo B1_NUMCQPR esta configurado con","cantidad igual a cero."} ,;
									     .F.)
				PutHelp("SA250NUMCQP",	{"Verificar a configuraГЦo do campo","B1_NUMCQPR"    },;
										{"Check configuration of the ","B1_NUMCQPR field."   },;
										{"Verificar la configuracion del","campo B1_NUMCQPR."},;
									     .T. )
				Help(" ",1,"A250NUMCQP")
				lRet := .F.
			ElseIf !SF5->(dbSeek(xFilial('SF5')+cTM,.F.))
				Help(" ",1,"A250TM")
				lRet := .F.
			ElseIf SF5->F5_TIPO # 'P' .Or. (SF5->F5_ENVCQPR # 'S' .And. nPrapont <> 2)
				//-- Criacao do Help A250ENVPR
				PutHelp("PA250ENVPR",	{"Para esta ProduГЦo nЦo podera utilizar","o armazem de CQ, pois o campo F5_ENVCQPR","esta configurado para nЦo enviar o","produto para o armazem de CQ."},;
										{"for this Production cannot to use","warehouse it of CQ, therefore field","F5_ENVCQPR this configured not to send","the product for warehouse it of CQ."},;
										{"Para esta producciСn no puede utilizar el","almacИn de calidad de copia, por lo tanto","del campo F5_ENVCQPR esto configurada","para no enviarlo el producto para el almacИn","de la calidad de copia."},;
									     .T. )
				PutHelp("SA250ENVPR",	{"Verificar a configuraГЦo da TM utilizada."},;
										{"Check configuration of the TM used."},;
										{"Verificar la configuracion del TM utilizada."},;
									     .T. )
				Help(" ",1,"A250ENVPR")
				lRet := .F.
			EndIf
		EndIf
	EndIf
	RestArea(aAreaSF5)
	RestArea(aAreaSB1)
	RestArea(aAreaAnt)
EndIf

Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё A240Data Ё Autor Ё Rodrigo de A. SartorioЁ Data Ё 22/05/96 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Valida a data em relacao a data do Ultimo fechamento       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240/MATA241                                            Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Data()
Local dDataFec := MVUlmes()
Local lRet:=.T.,cAlias:=Alias(),nOrder:=IndexOrd(),nRecno:=Recno()
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verificar data do ultimo fechamento em SX6.                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If l240
	If dDataFec >= M->D3_EMISSAO
		Help ( " ", 1, "FECHTO" )
		lRet:=.F.
	EndIf
	If !Empty(M->D3_OP)
		dbSelectArea("SC2")
		dbSetOrder(1)
		If dbSeek(xFilial()+M->D3_OP)
			If C2_EMISSAO > M->D3_EMISSAO
				Help (" ",1,"A240DATAOP")
				lRet:=.F.
			EndIf
		EndIf
		dbSelectArea(cAlias)
		dbSetOrder(nOrder)
		MsGoTo(nRecno)
	EndIf
endif


Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё A240Doc  Ё Autor Ё Rodrigo de A. SartorioЁ Data Ё 31/03/97 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Valida o documento da movimentacao interna                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240/MATA241/MATA242/MATA250/MATA260                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Doc(cNumDoc,lRotin)
Local lRet:=.T.,cAlias:=Alias(),nOrder:=IndexOrd(),nRecno:=Recno()
Local cDoc:= If(l261 .And. lAutoma261,cDocumento,If(l250 .And. !Empty(cNumDoc),cNumdoc,&(ReadVar()) ) )
Local cOp := IIf(l250,M->D3_OP,CriaVar("D3_OP"))
Local nEndereco  :=0
Local lValidaDoc :=GetNewPar("MV_VLDDOC","N") == "S"
Local cQuery     := ""
Local cAliasTop
Local lWmsNew    := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local lDocSD3    := Iif(Type('lDocWms')=='L', lDocWms, .F.)
Local aAliasOld := GetArea()

Default lRotin := .F.

If lRotin .or. !Empty(cNumDoc)
	cDoc := cNumDoc
Endif

If (l241 .Or. l261) .And. Empty(cDoc)
	Help(" ",1,"NVAZIO")
	lRet:= .F.
EndIf

If lValidaDoc .And. !lDocSD3
	If !Empty(cDoc)
		cAliasTop  := GetNextAlias()
		If (SubStr(cDoc,1,2) == "SK" .OR. SubStr(cDoc,1,5) == "INVEN") .AND. lRotin
			cQuery:= " SELECT "+Char(10)
			cQuery+= " 	MAX(SD3.D3_DOC) D3_DOC "+Char(10)
		Else
			cQuery:= " SELECT DISTINCT "+Char(10)
			cQuery+= " 	SD3.D3_DOC "+Char(10)
		Endif
		cQuery+= " FROM "+Char(10)
		cQuery+= " 	"+RetSqlName("SD3")+" SD3 "+Char(10)
		cQuery+= " WHERE "+Char(10)
		cQuery+= " 	 SD3.D_E_L_E_T_ = ' ' "+Char(10)
		cQuery+= " AND SD3.D3_FILIAL  = '"+xFilial("SD3")+"' "+Char(10)
		If (SubStr(cDoc,1,2) == "SK" .OR. SubStr(cDoc,1,5) == "INVEN") .AND. lRotin
			cQuery+= " AND SUBSTRING(SD3.D3_DOC,1,2) <> ('SK') "+Char(10)
  			cQuery+= " AND SUBSTRING(SD3.D3_DOC,1,5) <> ('INVEN') "+Char(10)
		Else
			cQuery+= " AND SD3.D3_DOC     = '"+cDoc+"' "+Char(10)
		Endif
		cQuery+= " AND SD3.D3_ESTORNO = ' ' "+Char(10)
       cQuery:= ChangeQuery(cQuery)
		If Select(cAliasTop) > 0
			(cAliasTop)->(DbCloseArea())
		Endif
		dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery) , cAliasTop, .T., .F. )

		Do While (cAliasTop)->(!Eof()) .And. lRet
			If (l250 .And. cDoc == PADR(cOp,Len(cDoc))) .Or. (l240 .And. l240Auto)
				M->D3_DOC := NextNumero("SD3",2,"D3_DOC",.T.)
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,6) == "D3_DOC" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_DOC
				EndIf
			ElseIf l241 .And. l241Auto
				&(ReadVar()):= NextNumero("SD3",2,"D3_DOC",.T.)
			Elseif lRotin
				cNumDoc := SOMA1((cAliasTop)->D3_DOC)
			Else
				Help(" ",1,"a24101")
				lRet:= .F.
			EndIf
			(cAliasTop)->(dbSkip())
		EndDo
		If lRet .And. lWmsNew
			dbSelectArea("DH1")
			DH1->(dbSetOrder(2))
			If DH1->(dbSeek(xFilial("DH1")+cDoc))
				If (l250 .And. cDoc == PADR(cOp,Len(cDoc))) .Or. (l240 .And. l240Auto)
					M->D3_DOC := NextNumero("DH1",2,"DH1_DOC",.T.)
				ElseIf l241 .And. l241Auto
					&(ReadVar()):= NextNumero("DH1",2,"DH1_DOC",.T.)
				Else
					Help(" ",1,"a24101")
					lRet:= .F.
				EndIf
			EndIf
		EndIf
	EndIf
	If Select(cAliasTop) > 0
		(cAliasTop)->(DbCloseArea())
	Endif
EndIf
RestArea(aAliasOld)
Return lRet


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240TudoOkЁ Autor Ё Marcos Bregantim      Ё Data Ё 05/10/94 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa que faz consistencias apos a digitacao da tela    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240TudoOk()
Local lRet       := .T.
Local cAlias     := Alias(), nOrdSB8, nRecSB8, cLocal
Local cSeek      := ""
Local nSaldo     := 0
Local lApropri   := .F.
Local lBaixaEmp  := .F.
Local lBxEmpB8   := .F.
Local cDocumento := M->D3_DOC
Local cMay       := ""
Local nOrder     := 0
Local lChangeDoc := .F.
Local lQtdZero   := .F.
Local lValidaDoc := GetNewPar("MV_VLDDOC","N") == "S"
Local lFirstNum  := .T.
Local nQtdPrj    := 0
Local lEmpPrev   := If(SuperGetMV("MV_QTDPREV")== "S",.T.,.F.)
Local lBXPRERQ   := SuperGetMv("MV_BXPRERQ",.F.,.F.)
Local dEmissao   := M->D3_EMISSAO
Local lValOpSusp := GetNewPar("MV_OPSUSP",.T.)
Local cProdMNT	 := SuperGetMv("MV_PRODMNT",.F.,"MANUTENCAO")
Local aProdMNT   := {}
Local lNoProdMNT := .F.
Local lRevProd   := SuperGetMv("MV_REVPROD",.F.,.F.)
Local cRvSB5	 := ""
Local cBlqSG5	 := ""
Local cStatus    := ""
Local lA185VldNG := FindFunction("A185VldNG")
Local lWmsNew    := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local lWmsSD3    := Iif(Type('lExecWms')=='L', lExecWms, .F.)
Local lDocSD3    := Iif(Type('lDocWms')=='L', lDocWms, .F.)
Local nSaldoEnd  := 0
Local lDCLNew   := SuperGetMV("MV_DCLNEW",.F.,.F.)
Local lIsProdMod := IsProdMod(M->D3_COD)    // Performance de execuГЦo
Local lPrdLocliz := Localiza(M->D3_COD,.T.) // Performance de execuГЦo
Local lPrdRastro := Rastro(M->D3_COD)       // Performance de execuГЦo
Local lRastroSub := Rastro(M->D3_COD,"S")   // Performance de execuГЦo
Local lPrdIntWms := IntWMS(M->D3_COD)       // Performance de execuГЦo

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o produto est═ em revisao vigente e envia para armazem de CQ para ser validado pela engenharia    Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRevProd
	cRvSB5 := Posicione("SB5",1,xFilial("SB5")+M->D3_COD,"B5_REVPROD")
	cBlqSG5:= Posicione("SG5",1,xFilial("SG5")+M->D3_COD+M->D3_REVISAO,"G5_MSBLQL")
	cStatus:= Posicione("SG5",1,xFilial("SG5")+M->D3_COD+M->D3_REVISAO,"G5_STATUS")
    If cRvSB5=="1"
	    If Empty(cRvSB5)
			Aviso(STR0013,STR0062,{STR0065})//"NЦo foi encontrado registro do produto selecionado na rotina de Complemento de Produto."
			Return .F.
		ElseIf Empty(cBlqSG5)
			Aviso(STR0013,STR0063,{STR0065})//"O produto selecionado nЦo possui revisЦo em uso. Verifique o cadastro de RevisУes."
			Return .F.
		ElseIf cBlqSG5=="1"
			Help(" ",1,"REGBLOQ")
			Return .F.
		ElseIf cStatus=="2" .AND. M->D3_TM<"500"
			Aviso(STR0013,STR0064,{STR0065})//"Esta revisЦo nЦo pode ser alimentada pois estА inativa."
			Return .F.
		EndIf
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддд©
//Ё Verifica a permissao do armazem. Ё
//юдддддддддддддддддддддддддддддддддды
lRet := MaAvalPerm(3,{M->D3_LOCAL,M->D3_COD})

//здддддддддддддюддддддддддддддддддддддддддд©
//Ё Verifica se o armazem estА bloqueado.   Ё
//юддддддюдддддддддддддддддддддддддддддддддды
If lRet .And. !ExistCpo("NNR",M->D3_LOCAL) 
	lRet := .F.
EndIf

//здддддддддддддддддддддддддддддддддд©
//Ё Verifica se o produto И fantasma . Ё
//юдддддддддддддддддддддддддддддддддды
IIf(lRet,lRet := A241VLDFan(M->D3_COD),lRet)

//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o produto est═ sendo inventariado.      Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. BlqInvent(M->D3_COD,M->D3_LOCAL,,M->D3_LOCALIZ)
	Help(" ",1,"BLQINVENT",,M->D3_COD+OemToAnsi(STR0016)+M->D3_LOCAL,1,11) //" Almox: "
	Return .F.
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Analisa se o tipo do armazem permite a movimentacao |
//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. AvalBlqLoc(M->D3_COD,M->D3_LOCAL,Nil,,,,,,,M->D3_OP)
	Return .F.
EndIf

If lRet .And. IntePms() .And. FindFunction('VldMovPMS')
	lRet := VldMovPMS(M->D3_PROJPMS, M->D3_TASKPMS, M->D3_TM, M->D3_COD, M->D3_QUANT, "MATA240")
EndIf
//Caso seja informada OP na execauto deve verificar se И a mesma da SCP, quando integrado com PMS
If lRet .AND. IntePms() .AND. l240Auto .AND. l185
	If FindFunction( 'PmsValidOp' )
		lRet:= PmsValidOp( aRotAuto, SCP->CP_OP)
	Else
		lRet:= .F.
		Help(" ",1,"AtualizaPMS")
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o produto e movimento e do tipo SELO      |
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. AvalMovSelo(M->D3_COD,M->D3_TM)
	Help(" ",1,"SELOFSINC")
	Return .F.
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Utiliza o parametro MV_VLDALMO para validar o local.|
//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !(SB2->(dbSeek(xFilial("SB2")+M->D3_COD+M->D3_LOCAL))) .And. (GetMV("MV_VLDALMO") == "S")
	Help(" ",1,"A260LOCAL")
	Return .F.
EndIf

A240SegUm()

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se a Qtde estiver em branco ele deve dar uma mensagem  Ё
//Ё de que este registro nao sera' gravado.                Ё
//Ё Este campo nao pode ficar obrigatorio porque ele e'    Ё
//Ё utilizado na Producao(Informacao da Perda de Producao),Ё
//Ё onde nao deve ser obrigatorio.                         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. Empty(M->D3_QUANT)
	If SF5->(dbSeek(xFilial("SF5")+M->D3_TM))
		If SF5->F5_QTDZERO # "1"
			Help(" ",1,"MA240NAOGR")
			lRet := .F.
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁValidacao para nao permitir que usuario informe os campos       |
			//|LOTE/SUB-LOTE quando a qtde. informada e' igual a zero.         |
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		ElseIf !Empty(M->D3_NUMLOTE) .Or. !Empty(M->D3_LOTECTL)
			Help(" ",1,"A240QLZERO")
			lRet := .F.
		EndIf
	Else
		Help(" ",1,"MA240NAOGR")
		lRet := .F.
	EndIf
EndIf

If lRet .And. !Empty(M->D3_OP) .And. !("OS001" $ SubStr(M->D3_OP,7,5))
	SC2->(DbSetOrder(1)) // FILIAL + NUM + ITEM + SEQUEN + ITEMGRD
	If SC2->(dbSeek(xFilial("SC2")+M->D3_OP)) .And. !Empty(SC2->C2_DATRF)
		Help(" ",1,"OPENCERR")
		lRet := .F.
	EndIf
EndIf

If !Empty(M->D3_OP) .And. lRet .And. !( l240Auto )
	lRet:=A240Alert(M->D3_COD,M->D3_OP)
EndIf

dbSelectArea("SF5")
If lRet .And. SF5->(dbSeek(xFilial("SF5")+M->D3_TM))
	lQtdZero := (Empty(M->D3_QUANT).And.(SF5->F5_QTDZERO=="1"))
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Caso esteja baixando empenho verifica o saldo empenhadoЁ
	//Ё a fim de evitar divergencia entre o movimento no SD3 e Ё
	//Ё os movimentos no SD5 e SDB.                            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	lBaixaEmp:= SF5->F5_ATUEMP == "S" .And. (!Empty(M->D3_OP)      .Or. ;
											 (!Empty(Alltrim(M->D3_PROJPMS)) .And. ;
											  !Empty(Alltrim(M->D3_TASKPMS))) )
	lRet     := lRet .And. A240AvalEm(@lBaixaEmp,M->D3_COD,M->D3_LOCAL,M->D3_QUANT,M->D3_LOTECTL,M->D3_NUMLOTE,M->D3_LOCALIZ,M->D3_NUMSERI,M->D3_OP,M->D3_TRT,.T.,M->D3_TM<="500",@lBxEmpB8,M->D3_POTENCI, M->D3_PROJPMS, M->D3_TASKPMS)
EndIf

If lRet
	//--> Verifica se o saldo do armazem esta liberado
	lRet := SldBlqSB2(M->D3_COD,M->D3_LOCAL)
EndIf

dbSelectArea("SB1")
dbSeek(xFilial()+M->D3_COD)
If lRet .And. M->D3_TM <= "500" .And. (SB1->B1_APROPRI == "I" .And. Empty(M->D3_OP)) .And. SF5->F5_APROPR != "S"
	lApropri := .T.
	cLocal := GetMvNNR('MV_LOCPROC','99')
ElseIf lRet
	cLocal:=M->D3_LOCAL
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Validacao para nao permitir que um produto de apropriacao indireta     |
//| tenha o numero da ordem de producao preenchido.                        |
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. (SB1->B1_APROPRI == 'I') .And. (SF5->F5_APROPR != "S") .And. !Empty(M->D3_OP)
	Help("",1,"MA241IND")
	lRet := .F.
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Validacao para nao permitir que um produto de apropriacao indireta     |
//| tenha movimentacao valorizada (armazem de processo).				   |
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. (SB1->B1_APROPRI == 'I') .And. (SF5->F5_APROPR != "S") .And. (SF5->F5_VAL == "S")
	Help("",1,"A240VALIN")
	lRet := .F.
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Validacoes do WMS - Devem ficar antes de validar saldo Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. lPrdIntWms .And. !lWmsSD3
	// IntegraГЦo WMS - Busca endereГo
	If !Empty(M->D3_SERVIC) .And. !(Type('cA240End')=='U')
		a240Ender(M->D3_LOCAL,M->D3_COD,M->D3_QUANT,cNumseq,M->D3_TM)
	EndIf

	lRet := WmsAvalSD3("5")
EndIf

If lRet .And. (GetMv("MV_ESTNEG") != "S" .Or. lPrdLocliz .Or. lPrdRastro) .And. !lIsProdMod
	If M->D3_TM > "500" .Or. lAproPri
		dbSelectArea("SB2")
		dbSeek(xFilial()+M->D3_COD+cLocal)
		If !MtAvlNSer(M->D3_COD,M->D3_NUMSERI,M->D3_QUANT,M->D3_QTSEGUM)
			lRet:=.F.
		EndIf

		lEmpPrj := (!Empty(M->D3_PROJPMS) .And. !Empty(M->D3_TASKPMS))
		nQtdPrj := If(lBaixaEmp .And. lEmpPrj, M->D3_QUANT,0)

		If lRet .And. !(A185VldNG(SCP->CP_OP)) .And. !lQtdZero .And. QtdComp(M->D3_QUANT) > QtdComp(SaldoMov(Nil,!lBaixaEmp,Nil,mv_par03==1,If(lBaixaEmp,M->D3_QUANT,Nil),nQtdPrj,Nil,dEmissao)+If(l185, If(lBXPRERQ,QtdComp(M->D3_QUANT),SCQ->CQ_QTDISP), 0) )
			cHelp:= STR0067 + AllTrim(SB2->B2_COD) + STR0068 + AllTrim(SB2->B2_LOCAL) //"Produto: "--" Local: "
			Help(" ",1,"MA240NEGAT",,cHelp,4,1)
			lRet := .F.
		EndIf
		If lRet .And. lPrdLocliz
			If !(lPrdIntWms .And. !Empty(M->D3_SERVIC))
				If Empty(M->D3_LOCALIZ) .And. Empty(M->D3_NUMSERI) .And. ! (SF5->F5_QTDZERO=="1" .And. QtdComp(M->D3_QUANT) == QtdComp(0))
					Help(" ",1,"LOCALIZOBR")
					lRet:=.F.
				EndIf
			EndIf
			If lRet .And. (!Empty(M->D3_LOCALIZ) .Or. !Empty(M->D3_NUMSERI))
				If !(lWmsNew .And. lPrdIntWms)
					/*
						Alterada chamada da funГЦo SaldoSBF para passar o nЗmero da OP.
						NecessАrio para o projeto de integraГЦo TOTVS MES.
					*/
					nSaldoEnd := SaldoSBF(cLocal,M->D3_LOCALIZ,M->D3_COD,M->D3_NUMSERI,M->D3_LOTECTL,M->D3_NUMLOTE,lBxEmpB8,,,M->D3_OP)
				Else
					nSaldoEnd := WmsSldD14(cLocal,M->D3_LOCALIZ,M->D3_COD,M->D3_NUMSERI,M->D3_LOTECTL,M->D3_NUMLOTE,lBxEmpB8)
				EndIf
				If QtdComp(nSaldoEnd) < QtdComp(M->D3_QUANT)
					Help(" ",1,"SALDOLOCLZ")
					lRet:=.F.
				EndIf
			EndIf
		EndIf
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se usar Rastreabilidade e o numero do Lote nao for     Ё
//Ё preenchido o registro nao sera gravado tambem.         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. lPrdRastro .And. !lIsProdMod .And. !(Empty(M->D3_QUANT) .And. SF5->F5_QTDZERO == "1")
	If M->D3_TM > "500" .Or. lApropri
		If Empty(If(lRastroSub,M->D3_NUMLOTE,M->D3_LOTECTL))
			Help(" ",1,"A240NUMLOT")
			lRet := .F.
		EndIf
		If lRet
			dbSelectArea("SB8")
			nOrdSB8 := IndexOrd()
			nRecSB8 := RecNo()
			If lRastroSub
				dbSetOrder(2)
				cSeek:=xFilial()+M->D3_NUMLOTE+M->D3_LOTECTL+M->D3_COD+cLocal
				If dbSeek(cSeek)
					If QtdComp(SB8Saldo(lBxEmpB8,NIL,NIL,NIL,NIL,lEmpPrev,NIL,M->D3_EMISSAO)) < QtdComp(M->D3_QUANT)
						Help(" ",1,"A240LOTENE")
						lRet := .F.
					EndIf
				Else
					Help(" ",1,"A240LOTERR")
					lRet := .F.
				EndIf
			Else
				dbSetOrder(3)
				cSeek:=xFilial()+M->D3_COD+cLocal+M->D3_LOTECTL
				If dbSeek(cSeek)
					nSaldo:=SaldoLote(M->D3_COD,cLocal,M->D3_LOTECTL,NIL,lBxEmpB8,.T.,NIL,M->D3_EMISSAO)
					If QtdComp(nSaldo) < QtdComp(M->D3_QUANT)
						Help(" ",1,"A240LOTENE")
						lRet := .F.
					EndIf
				Else
					Help(" ",1,"A240LOTERR")
					lRet := .F.
				EndIf
			EndIf
			dbSetOrder(nOrdSB8)
			MsGoto(nRecSB8)
		EndIf
	Else
		If !Empty(If(lRastroSub,M->D3_NUMLOTE,M->D3_LOTECTL)) .And. lRet
			dbSelectArea("SB8")
			nOrdSB8 := IndexOrd()
			nRecSB8 := RecNo()
			If lRastroSub
				dbSetOrder(2)
				cSeek:=xFilial()+M->D3_NUMLOTE+M->D3_LOTECTL+M->D3_COD+cLocal
			EndIf
			If dbSeek(cSeek)
				If lRastroSub
					If QtdComp(SB8SALDO(,,,,,lEmpPrev,,,.T.) + M->D3_QUANT) > QtdComp(SB8->B8_QTDORI)
						Help(" ",1,"A240LOTQTD")
						lRet := .F.
					EndIf
				EndIf
			EndIf
			dbSetOrder(nOrdSB8)
			MsGoto(nRecSB8)
		Else
			If lRastroSub .And. !Empty(M->D3_LOTECTL) .And. !Empty(M->D3_NUMLOTE) .And. lRet
				dbSelectArea("SB8")
				dbSetOrder(3)
				If dbSeek(xFilial()+M->D3_COD+M->D3_LOCAL+M->D3_LOTECTL)
					Help(" ",1,"A240LOTCTL")
					lRet := .F.
				EndIf
			EndIf
		EndIf
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se a movimentacao for valorizado e o custo nao for     Ё
//Ё preenchido o registro nao sera gravado tambem.         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. SF5->F5_VAL=="S" .And. M->D3_CUSTO1 = 0
	Help(" ",1,"A240VALSD3")
	lRet := .F.
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se a movimentacao for valorizado e o custo nao for     Ё
//Ё preenchido o registro nao sera gravado tambem.         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet
	lRet:=A240Data()
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Alerta ao usuario se a devolucao for maior que as      Ё
//Ё requisicoes efetuadas para essa OP                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. M->D3_TM <= "500" .And. !Empty(M->D3_OP) .And. !IsProdCoPR(M->D3_COD,M->D3_OP,M->D3_TRT) //-- Desconsidera produtos coproduzidos (item negativo)
	lRet:=A240VlDeOP(M->D3_COD,M->D3_LOCAL,M->D3_OP,M->D3_QUANT,M->D3_QTSEGUM,M->D3_LOTECTL,M->D3_NUMLOTE)
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o Projeto esta preenchido corretamente     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. ((!Empty(M->D3_PROJPMS) .And. Empty(M->D3_TASKPMS)) .Or. (Empty(M->D3_PROJPMS) .And. !Empty(M->D3_TASKPMS)))
	HELP("   ",1,"A240PMS")
	lRet := .F.
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se durante a digitacao n└o foi incluido um documentoЁ
//Ё com o mesmo numero por outro usu═rio.                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. lValidaDoc .And. !lDocSD3
	dbSelectArea("SD3")
	nOrder:=IndexOrd()
	dbSetOrder(2)
	dbSeek(xFilial("SD3")+cDocumento)
	cMay := "SD3"+Alltrim(xFilial())+cDocumento
	While D3_FILIAL+D3_DOC==xFilial()+cDocumento.Or.!MayIUseCode(cMay)
		If D3_ESTORNO # "S"
			If lFirstNum
				cDocumento 	:= NextNumero("SD3",2,"D3_DOC",.T.)
				cDocumento 	:= A261RetINV(cDocumento)
				lFirstNum 	:= .F.
			Else
		   		cDocumento := Soma1(cDocumento)
		   		lChangeDoc	:= .T.
			EndIf
			cMay       	:= "SD3"+Alltrim(xFilial())+cDocumento
			M->D3_DOC	:= cDocumento
		EndIf
		dbSkip()
	EndDo
	dbSetOrder(nOrder)

	If lWMSNew
		DH1->(dbSetOrder(2))
		If DH1->(dbSeek(xFilial("DH1")+cDocumento))
			M->D3_DOC := NextNumero("DH1",2,"DH1_DOC",.T.)
			lChangeDoc  := .T.
		EndIf
	EndIf

	FreeUsedCode()
	If lChangeDoc
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁSe a funcao estiver sendo executada via MATA185, esta mensagem Ё
		//Ёsera exibida no MATA185 (fora da Transacao)                    Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If l185
			//--Variaveis private definidas no MATA185
			cNewDoc     := cDocumento
			lChgNewDoc  := lChangeDoc
		ElseIf !l240Auto
			Help("",1,"A240DOC",,M->D3_DOC,4,30)
		EndIf
	EndIf
EndIf


// Este ponto  de entrada  permite  validar algo digitado
// dependendo da necessidade do usu═rio.Ele valida a tela toda
If lDCLNew
	DCLMT240TO()
Else
	If lRet .And. ExistTemplate('MT240TOK')
		lRet := ExecTemplate('MT240TOK', .F., .F.)
	EndIf
Endif
//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Validacao do Custo FIFO On-Line                     |
//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. IsFifoOnLine() .And. M->D3_TM > "500"
	If SaldoSBD("SD3",M->D3_COD,M->D3_LOCAL,dDataBase,.F.)[1] < M->D3_QUANT
		Help(" ",1,"DIVFIFO2")
		lRet := .F.
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de Entrada MT240TOK                                     Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. ExistBlock('MT240TOK')
	lRet := ExecBlock('MT240TOK', .F., .F.)
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Executa a validacao do lancamento antes de gera-lo no SIGAPCO Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet
	If M->D3_TM <= "500"	// Entrada
		lRet := PCOVldLan("000151","01","MATA240",.T.)
	Else					// Saida
		lRet := PCOVldLan("000151","02","MATA240",.T.)
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a Ordem de Producao foi suspensa                  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. lValOpSusp .And. !Empty(M->D3_OP)
	SC2->(dbSetOrder(1))
	If SC2->(dbSeek(xFilial("SC2")+Alltrim(M->D3_OP)))

		aProdMNT   := aClone(NGProdMNT("M"))
		lNoProdMNT := ( aScan(aProdMNT, {|x| Upper(AllTrim(x)) == Upper(AllTrim(SC2->C2_PRODUTO)) }) == 0 )

		If SC2->C2_STATUS == 'U' .And. lNoProdMNT
			Help(' ',1,"A250OPSUSP")
			lRet := .F.
		EndIf
	Endif
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica calendАrio contАbil                Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet
	lRet := (CtbValiDt(Nil,M->D3_EMISSAO,,Nil ,Nil ,{"EST001"}))
EndIf
//ддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд//
//Consiste amarraГЦo da Conta ContАbil X Centro de Custo		//
//дддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд//
If lRet
	If !CtbAmarra(M->D3_CONTA,M->D3_CC,M->D3_ITEMCTA,M->D3_CLVL)
		lRet:= .F.
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©═
//Ё Valida Centro de Custo═
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды═
If lRet .And. !( l240Auto )
	If (!Empty(M->D3_CC))
		lRet := CTB105CC(M->D3_CC)
	EndIF
EndIF

If !Empty(alltrim(cMay)) .AND. lValidaDoc
	FreeUsedCode(.T.)
Endif

dbSelectArea(cAlias)
Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA240Lote  Ё Autor Ё Rodrigo de A. SartorioЁ Data Ё 20.11.96 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Faz verifica┤└o se o Lote Proprio coincide com o lote do   Ё╠╠
╠╠Ё          Ё sistema.                                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A240Lote(ExpL1)                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpL1 = Se verdadeiro, podera' exibir msg de help          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Lote(lHelp)
Local cVar      :=ReadVar()
Local cConteudo :=&(ReadVar())
Local cAlias    :=Alias()
Local nRecno    :=Recno()
Local nOrdem    :=IndexOrd()
Local lLoteVenc	:= SuperGetMV("MV_LOTVENC") == "S"
Local lRet      :=.T.
Local cCod,cLocal,cLote,cLoteDigi,nQuant
Local dDtValid
Local lWmsNew   := SuperGetMv("MV_WMSNEW",.F.,.F.)
Local lCTRWMS   := Nil
Local cLocaliza := ""

Default lHelp := .T.

If l241 .Or. l242
	cCod      := If(!Empty(nPosCod),aCols[n,nPosCod],UserException('D3_COD'+OemToAnsi(STR0019)))
	cLocal    := If(!Empty(nPosLocal),aCols[n,nPosLocal],UserException('D3_LOCAL'+OemToAnsi(STR0019)))
	cLote     := If(!Empty(nPosLote),aCols[n,nPosLote],CriaVar('D3_NUMLOTE'))
	cLoteDigi := If(!Empty(nPosLotCTL),aCols[n,nPosLotCTL],CriaVar('D3_LOTECTL'))
	dDtValid  := If(!Empty(nPosDValid),aCols[n,nPosDValid],CriaVar('D3_DTVALID'))
	cLocaliza := If(!Empty(nPosLocali),aCols[n,nPosLocali],CriaVar('D3_LOCALIZ'))
	If l241
		nQuant	:= If(!Empty(nPosQuant),aCols[n,nPosQuant],CriaVar('D3_QUANT'))
	EndIf
Else
	cTM       := M->D3_TM
	cCod      := M->D3_COD
	cLocal    := M->D3_LOCAL
	cLote     := M->D3_NUMLOTE
	cLoteDigi := M->D3_LOTECTL
	dDtValid  := M->D3_DTVALID
	nQuant    := M->D3_QUANT
	cLocaliza := M->D3_LOCALIZ
EndIf

//-- Avalia se produto controle WMS utilizando o codigo do produto cCod
lCTRWMS := (lWmsNew .And. IntWMS(cCod))

If !Rastro(cCod)
	Help(" ",1,"NAORASTRO")
	lRet:=.F.
EndIf

If lRet
	If cVar == "M->D3_LOTECTL"
		If Rastro(cCod,"S")
			If !Empty(cLote)
				dbSelectArea("SB8")
				dbSetOrder(2)
				If dbSeek(xFilial()+cLote) .And. cCod+cLocal == SB8->B8_PRODUTO+SB8->B8_LOCAL
					If cConteudo != SB8->B8_LOTECTL
						Help(" ",1,"A240LOTCTL")
						lRet:=.F.
					Else
						If !Empty(dDtValid) .And. dDtValid # SB8->B8_DTVALID
							If	lHelp
								HelpAutoma(" ",1,"A240DTVALI",,,,,,,,,.F.)
							EndIf
							M->D3_DTVALID:=SB8->B8_DTVALID
							If l240
								nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_DTVALID" } )
								If nEndereco > 0
									aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->D3_DTVALID)
								EndIf
							ElseIf l241 .Or. l242
								If !Empty(nPosDValid)
									aCols[n,nPosDValid]:=M->D3_DTVALID
								EndIf
							EndIf
							If l240
								nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_LOTECTL" } )
								If nEndereco > 0
									aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_LOTECTL
								EndIf
							ElseIf l241 .Or. l242
								If !Empty(nPosLotCTL)
									aCols[n,nPosLotCTL]:=M->D3_LOTECTL
								EndIf
							EndIf
						EndIf
					EndIf
				EndIf
			EndIf
		Else
			If	cTm > "500"
				lRet:=NaoVazio(cConteudo)
				If lRet
					dbSelectArea("SB8")
					dbSetOrder(3)
					If !(dbSeek(xFilial()+cCod+cLocal+cConteudo))
						Help(" ",1,"A240LOTERR")
						lRet := .F.
					Else
						If l240
							M->D3_DTVALID:=SB8->B8_DTVALID
							If !lLoteVenc
								If M->D3_DTVALID < ddatabase
									Help(" ",1,"A240LOTENE")
									lRet := .F.
								Endif
							EndIf
						ElseIf l241
							If !Empty(nPosDValid)
								aCols[n,nPosDValid]:=SB8->B8_DTVALID
								If !lLoteVenc
									If aCols[n,nPosDValid] < ddatabase
										Help(" ",1,"A240LOTENE")
										lRet := .F.
									Endif
								EndIf
							EndIf
							//Valida se tem saldo no EndereГo WMS para o Lote informado
							If lRet .And. lCTRWMS .And. !Empty(cLocaliza) .And. (Type('l240Auto')#'L'.Or.!l240Auto) .And. (Type('l241Auto')#'L'.Or.!l241Auto)
								If QtdComp(WmsSldD14(cLocal,cLocaliza,cCod,,cConteudo,cLote)) < nQuant
									Help(" ",1,"SALDOLOCLZ")
									lRet:=.F.
								EndIf
							EndIf
						EndIf
					EndIf
				EndIf
			Else
				dbSelectArea("SB8")
				dbSetOrder(3)
				If dbSeek(xFilial()+cCod+cLocal+cConteudo) .And. (dDtValid # SB8->B8_DTVALID)
					If	lHelp
						HelpAutoma(" ",1,"A240DTVALI",,,,,,,,,.F.)
					EndIf
					M->D3_DTVALID:=SB8->B8_DTVALID
					If l240
						nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_DTVALID" } )
						If nEndereco > 0
							aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->D3_DTVALID)
						EndIf
					ElseIf l241 .Or. l242
						If !Empty(nPosDValid)
							aCols[n,nPosDValid]:=M->D3_DTVALID
						EndIf
					EndIf
					If l240
						nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_LOTECTL" } )
						If nEndereco > 0
							aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_LOTECTL
						EndIf
					ElseIf l241 .Or. l242
						If !Empty(nPosLotCTL)
							aCols[n,nPosLotCTL]:=M->D3_LOTECTL
						EndIf
					EndIf
				Else
					If l242
					   If SB1->(dbSeek(xFilial("SB1")+cCod))
					   		If !Empty(nPosDValid)
								aCols[n,nPosDValid]:=ddatabase+SB1->B1_PRVALID
							EndIf
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf
	ElseIf cVar == "M->D3_NUMLOTE"
		If Rastro(cCod,"S")
			If cTm > "500"
				lRet:=NaoVazio(cConteudo)
			EndIf
			If lRet
				dbSelectArea("SB8")
				dbSetOrder(2) // B8_FILIAL+B8_NUMLOTE+B8_LOTECTL+B8_PRODUTO+B8_LOCAL+DTOS(B8_DTVALID)
				If dbSeek(xFilial("SB8")+cConteudo+cLoteDigi+cCod+cLocal)
					If l240
						nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_NUMLOTE" } )
						If nEndereco > 0
							aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_NUMLOTE
						EndIf
					ElseIf l241 .Or. l242
						If !Empty(nPosLote)
							aCols[n,nPosLote]:=M->D3_NUMLOTE
						EndIf
					EndIf
					M->D3_LOTECTL:=SB8->B8_LOTECTL
					If l240
						nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_LOTECTL" } )
						If nEndereco > 0
							aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_LOTECTL
						EndIf
					ElseIf l241 .Or. l242
						If !Empty(nPosLotCTL)
							aCols[n,nPosLotCTL]:=M->D3_LOTECTL
						EndIf
					EndIf
					M->D3_DTVALID:=SB8->B8_DTVALID
					If l240
						nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_DTVALID" } )
						If nEndereco > 0
							aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->D3_DTVALID)
						EndIf
					ElseIf l241 .Or. l242
						If !Empty(nPosDValid)
							aCols[n,nPosDValid]:=M->D3_DTVALID
						EndIf
					EndIf
					//Valida se tem saldo no EndereГo WMS para o Sub-Lote Informado
					If lRet .And. l241 .And. cTm > "500" .And. lCTRWMS .And. !Empty(cLocaliza) .And. !Empty(cLoteDigi) .And. (Type('l240Auto')#'L'.Or.!l240Auto) .And. (Type('l241Auto')#'L'.Or.!l241Auto)
						If QtdComp(WmsSldD14(cLocal,cLocaliza,cCod,,cLoteDigi,cConteudo)) < nQuant
							Help(" ",1,"SALDOLOCLZ")
							lRet:=.F.
						EndIf
					EndIf
				Else
					If cTm > "500"
						Help(" ",1,"A240LOTERR")
						lRet := .F.
					Else
						M->D3_NUMLOTE:=CriaVar("D3_NUMLOTE")
						M->D3_LOTECTL:=CriaVar("D3_LOTECTL")
						If l240
							nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_NUMLOTE" } )
							If nEndereco > 0
								aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := CriaVar("D3_NUMLOTE")
							EndIf
							nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_LOTECTL" } )
							If nEndereco > 0
								aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := CriaVar("D3_LOTECTL")
							EndIf
						ElseIf l241 .And. (!lCTRWMS .Or. (!l241Auto .And. lCTRWMS)) // CondiГЦo atribuМda para nЦo limpar o cСdigo do lote informado para a gravaГЦo via MsExecAuto
							If !Empty(nPosLote) .And. !Empty(nPosLotCTL)
								aCols[n,nPosLote]	:=CriaVar("D3_NUMLOTE")
								aCols[n,nPosLotCTL]	:=CriaVar("D3_LOTECTL")
							EndIf
						EndIf
					EndIf
				EndIf
			EndIf
		Else
			M->D3_NUMLOTE:=CriaVar("D3_NUMLOTE")
			If l240
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_NUMLOTE" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_NUMLOTE
				EndIf
			ElseIf l241 .Or. l242
				If !Empty(nPosLote)
					aCols[n,nPosLote]:=M->D3_NUMLOTE
				EndIf
			EndIf
		EndIf
	EndIf
EndIf
dbSelectArea(cAlias)
dbSetOrder(nOrdem)
MsGoTo(nRecno)
Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA240DtValiЁ Autor Ё Rodrigo de A. SartorioЁ Data Ё 05/03/98 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Consiste se a data de validade do Lote/Sub-Lote esta sendo Ё╠╠
╠╠Ё          Ё digitada corretamente                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A240DtVali(ExpL1)                                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpL1 = Se verdadeiro, podera' exibir msg de help          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240DtVali(lHelp)
Local cVar:=ReadVar(),cConteudo:=&(ReadVar())
Local cAlias:=Alias(),nRecno:=Recno(),nOrdem:=IndexOrd()
Local lRet:=.T.
Local cCod,cLocal,cLote,cLoteDigi
Local lLoteVenc	:= SuperGetMV("MV_LOTVENC") == "S"

Default lHelp := .T.
If l241.Or.l242
	cCod		:= If(!Empty(nPosCod),aCols[n,nPosCod],UserException('D3_COD'+OemToAnsi(STR0019)))
	cLocal		:= If(!Empty(nPosLocal),aCols[n,nPosLocal],UserException('D3_LOCAL'+OemToAnsi(STR0019)))
	cLote		:= If(!Empty(nPosLote),aCols[n,nPosLote],CriaVar('D3_NUMLOTE'))
	cLoteDigi	:= If(!Empty(nPosLotCTL),aCols[n,nPosLotCTL],CriaVar('D3_LOTECTL'))
Else
	cTM			:= M->D3_TM
	cCod		:= M->D3_COD
	cLocal		:= M->D3_LOCAL
	cLote		:= M->D3_NUMLOTE
	cLoteDigi	:= M->D3_LOTECTL
EndIf
If !Rastro(cCod)
	Help(" ",1,"NAORASTRO")
	lRet:=.F.
EndIf

If lRet .And. cTm <= "500" .And. cConteudo < dDataBase
	//-- Verifica se permite a digitacao de datas de validade vencidas
	If lLoteVenc
		If lHelp
			//-- Avisa ao usuario que a data de validade esta
			//-- vencida, porem permite a movimentacao.
			HelpAutoma(" ",1,"LOTEVENC")
		EndIf
	Else
		If lHelp
			HelpAutoma(" ",1,"DTVALIDINV")
		EndIf
		lRet:=.F.
	EndIf
EndIf

If lRet
	dbSelectArea("SB8")
	dbSetOrder(3)
	If dbSeek(xFilial()+cCod+cLocal+cLoteDigi+IIf(Rastro(cCod,"S"),cLote,""))
		If cConteudo # SB8->B8_DTVALID
			If	lHelp
				HelpAutoma(" ",1,"A240DTVALI",,,,,,,,,.F.)
			EndIf
			M->D3_DTVALID:=SB8->B8_DTVALID
			&(ReadVar()):=SB8->B8_DTVALID
			If l240
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_DTVALID" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->D3_DTVALID)
				EndIf
			ElseIf l241 .Or. l242
				If !Empty(nPosDValid)
					aCols[n,nPosDValid]:=M->D3_DTVALID
				EndIf
			EndIf
		EndIf
	EndIf
EndIf
dbSelectArea(cAlias)
dbSetOrder(nOrdem)
MsGoTo(nRecno)
Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA240Comum Ё Autor Ё Rodrigo de A. SartorioЁ Data Ё 05/03/98 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Chamada do rodape dos lancamentos contabeis                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A240Comum(ExpA1)                                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpA1 = Array c/Nos.regs.de SD3 p/ atualizacao de D3_DTLANCЁ╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function a240Comum(aAtuSD3,aCtbDia)
Local nX
Local aAreaSD3 := SD3->(GetArea())
Local cCodDiario := ""

Default aCtbDia := {}

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o custo medio e' calculado On-Line               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cCusMed == "O"
	If !lCriaHeader .And. nTotal > 0
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Inicializa perguntas deste programa                          Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё mv_par01 - Se mostra e permite digitar lancamentos contabeis   Ё
		//Ё mv_par02 - Se deve aglutinar os lancamentos contabeis          Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		pergunte("MTA240",.F.)
		lDigita   := Iif(mv_par01 == 1,.T.,.F.)
		lAglutina := Iif(mv_par02 == 1,.T.,.F.)

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Se ele criou o arquivo de prova ele deve gravar o rodape'    Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		RodaProva(nHdlPrv,nTotal)

		If !Empty(aCtbDia)
			cCodDiario := CtbaVerdia()
			For nX := 1 to Len(aCtbDia)
				aCtbDia[nX][3] := cCodDiario
			Next nX
		EndIf

		If cA100Incl(cArquivo,nHdlPrv,3,cLoteEst,lDigita,lAglutina,,,,,,aCtbDia)
			lCriaHeader := .T.
			nTotal      := 0 // Total dos lancamentos contabeis
			KeyBoard Chr(27)

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Grava a data de Contabilizacao do campo D3_DTLANC         Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If !(aAtuSD3 == Nil) .And. ValType(aAtuSD3) == "A"
				For nX:=1 to len(aAtuSD3)
					MsGoTo(aAtuSD3[nX])
					RecLock("SD3",.F.)
					Replace D3_DTLANC With dDataBase
					MsUnLock()
				Next
			Else
				RecLock("SD3",.F.)
				Replace D3_DTLANC With dDataBase
				MsUnLock()
			EndIf
		EndIf
	EndIf
EndIf
RestArea(aAreaSD3)
Return

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё SHOWF4   Ё Autor Ё Rodrigo de A. SartorioЁ Data Ё 29/11/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Chamada da funcao F4LOTE                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function ShowF4(a,b,c)
Local cCampo:=AllTrim(Upper(ReadVar()))
If cCampo == "M->D3_COD" .Or. cCampo == "M->D3_QUANT"
	MaViewSB2(M->D3_COD)
ElseIf cCampo == "M->D3_LOCALIZ" .Or. cCampo == "M->D3_NUMSERI"
	F4Localiz(,,, "A240" )
ElseIf cCampo == "M->D3_LOTECTL" .Or. cCampo == "M->D3_NUMLOTE"
	F4Lote(,,,"A240",M->D3_COD,M->D3_LOCAL,NIL,M->D3_LOCALIZ,,M->D3_OP)
EndIf
Return NIL

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁMTA240PERGЁ Autor Ё Rodrigo de A. SartorioЁ Data Ё 29/11/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Chamada da funcao PERGUNTE                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function MTA240PERG()
Pergunte("MTA240",.T.)
RETURN NIL

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбдддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё A240Alert Ё Autor Ё Rodrigo de A. SartorioЁ DataЁ 21/01/97 Ё╠╠
╠╠цддддддддддедддддддддддадддддддадддддддддддддддддддддддадддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Verifica se o produto digitado nao faz parte da estrutura  Ё╠╠
╠╠Ё          Ё do produto da OP.                                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё a240Alert(ExpC1,ExpC2)                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Cod.do Produto                                     Ё╠╠
╠╠Ё          Ё ExpC2 = No.da OP                                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Alert(cProd,cOP)
Local cMens,lRet:=.F.
Local cAlias,nRecno,nOrder
Local cProduto:=""
Local lValida:=.T.

If ExistBlock("SD3VESR")
	lValida:=ExecBlock("SD3VESR",.F.,.F.)
	If Valtype(lValida) # "L"
		lValida:=.T.
	EndIf
EndIf

If lValida
	cAlias:=Alias()
	nOrder:=IndexOrd()
	nRecno:=Recno()
	dbSelectArea("SD4")
	dbSetOrder(1)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se existe empenho                             Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If !dbSeek(xFilial()+cProd+cOp)
		dbSelectArea("SC2")
		dbSetOrder(1)
		If dbSeek(xFilial()+cOP)
			cProduto:=SC2->C2_PRODUTO
		EndIf
		dbSelectArea("SG1")
		dbSetOrder(2)
		If ( !DbSeek(xFilial("SG1")+cProd+cProduto) )
			cMens := OemToAnsi(STR0009)+chr(13)			//"O produto digitado n└o faz parte da"
			cMens += OemToAnsi(STR0010+cProduto)+chr(13)	//"Estrutura do Produto "
			cMens += OemToAnsi(STR0011+cOP)+chr(13)		//"da OP - "
			cMens += OemToAnsi(STR0012)+chr(13)			//"Confirma movimenta┤└o ?"
			If MsgYesNo(cMens,OemToAnsi(STR0013))			//"ATENCAO"
				lRet:=.T.
			EndIf
		Else
			lRet:=.T.
		EndIf
		dbSelectArea("SG1")
		dbSetOrder(1)
	Else
		lRet:=.T.
	EndIf
	dbSelectArea(cAlias)
	dbSetOrder(nOrder)
	MsGoTo(nRecno)
Else
	lRet:=.T.
EndIf
Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240LocaliЁ Autor ЁRodrigo de A. Sartorio Ё Data Ё 12/11/97 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa que verifica a localizacao fisica                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Locali()
Local cVar      :=ReadVar()
Local cConteudo :=&(ReadVar())
Local cAlias    :=Alias()
Local nRecno    :=Recno()
Local nOrdem    :=IndexOrd()
Local lRet      :=.T.
Local lAproPri  :=.F.
Local nSaldo    :=0
Local lNumSerDev:=.F.
Local lPENSerDv := ExistBlock("SD3NSDV")
Local cCod,cLocal,cLote,cLoteDigi,cNumSerie,cOp,nQuant
Local lWmsNew   := SuperGetMv("MV_WMSNEW",.F.,.F.)
Local lCTRWMS   := Nil

If l241 .Or. l242
	cCod      := If(!Empty(nPosCod),aCols[n,nPosCod],UserException('D3_COD'+OemToAnsi(STR0019)))
	nQuant    := If(!Empty(nPosQuant),aCols[n,nPosQuant],UserException('D3_QUANT'+OemToAnsi(STR0019)))
	cLocal    := If(!Empty(nPosLocal),aCols[n,nPosLocal],UserException('D3_LOCAL'+OemToAnsi(STR0019)))
	cLote     := If(!Empty(nPosLote),aCols[n,nPosLote],CriaVar('D3_NUMLOTE'))
	cNumSerie := If(!Empty(nPosNumSer),aCols[n,nPosNumSer],CriaVar('D3_NUMSERI'))
	cLoteDigi := If(!Empty(nPosLotCTL),aCols[n,nPosLotCTL],CriaVar('D3_LOTECTL'))
	cOP       := If(Type("nPosOp") == "N" .And. !Empty(nPosOp),aCols[n,nPosOP],CriaVar('D3_OP'))
	If l241
		nQuant	:= If(!Empty(nPosQuant),aCols[n,nPosQuant],CriaVar('D3_QUANT'))
	EndIf
Else
	cTM       := M->D3_TM
	cCod      := M->D3_COD
	nQuant    := M->D3_QUANT
	cLocal    := M->D3_LOCAL
	cLote     := M->D3_NUMLOTE
	cNumSerie := M->D3_NUMSERI
	cLoteDigi := M->D3_LOTECTL
	cOp       := M->D3_OP
	nQuant    := M->D3_QUANT
EndIf

lCTRWMS := (lWmsNew .And. IntWMS(cCod))

dbSelectArea("SF5")
dbSeek(xFilial()+cTm)
dbSelectArea("SB1")
dbSeek(xFilial()+cCod)
If lRet .And. cTm <= "500" .And. (SB1->B1_APROPRI == "I" .And. Empty(cOP)) .And. SF5->F5_APROPR != "S"
	If !l242
		cLocal := GetMvNNR('MV_LOCPROC','99')
	EndIf
	lAproPri:=.T.
EndIf

If lRet .And. ((cTm <= "500" .And. !lAproPri) .Or. !Localiza(cCod,IIf(lCTRWMS,.T.,.F.),.T.)) .Or. (lCTRWMS .And. cTm > "500")
	If lPENSerDv
		lNumSerDev := ExecBlock("SD3NSDV",.F.,.F.)
		If ValType(lNumSerDev) # "L"
			lNumSerDev := .F.
		EndIf
	EndIf
	If l240
		If !lNumSerDev
			M->D3_LOCALIZ := Iif(lCTRWMS .And. cTm > "500",M->D3_LOCALIZ,CriaVar("D3_LOCALIZ"))
			M->D3_NUMSERI := CriaVar("D3_NUMSERI")
		EndIf
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_LOCALIZ" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_LOCALIZ
		EndIf
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_NUMSERI" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_NUMSERI
		EndIf
	Else
		If !l242
			M->D3_LOCALIZ := Iif(lCTRWMS .And. l241 .And. cTm > "500",M->D3_LOCALIZ,CriaVar("D3_LOCALIZ"))
			M->D3_NUMSERI := CriaVar("D3_NUMSERI")
			If !Empty(nPosLocali) .And. !Empty(nPosNumSer)
				aCols[n,nPosLocali]:=M->D3_LOCALIZ
				aCols[n,nPosNumSer]:=M->D3_NUMSERI
			EndIf
		Else
			lRet:=ExistCpo("SBE",cLocal+cConteudo)
		EndIf
	EndIf
ElseIf lRet
	lRet:=ExistCpo("SBE",cLocal+cConteudo)
EndIf

//Valida se tem saldo no EndereГo WMS
If lRet .And. lCTRWMS .And. !Empty(M->D3_LOCALIZ) .And. (Type('l240Auto')#'L'.Or.!l240Auto) .And. (Type('l241Auto')#'L'.Or.!l241Auto)
	If QtdComp(WmsSldD14(cLocal,M->D3_LOCALIZ,cCod,cNumSerie,cLoteDigi,cLote)) < nQuant
		Help(" ",1,"SALDOLOCLZ")
		lRet:=.F.
	EndIf
EndIf

dbSelectArea(cAlias)
dbSetOrder(nOrdem)
MsGoTo(nRecno)
Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240NumSerЁ Autor ЁRodrigo de A. Sartorio Ё Data Ё 13/11/97 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa que verifica o numero de serie digitado           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240NumSer()
Local cVar:=ReadVar(),cConteudo:=&(ReadVar())
Local cAlias:=Alias(),nRecno:=Recno(),nOrdem:=IndexOrd()
Local lRet:=.T.,lNumSerDev := .F.
Local cCod,cLocal,cLote,cLoteDigi,nQuant,cLocaliza
Local lPENSerDv := ExistBlock("SD3NSDV")

If l241.Or.l242
	cCod      := If(!Empty(nPosCod),aCols[n,nPosCod],UserException('D3_COD'+OemToAnsi(STR0019)))
	nQuant    := If(!Empty(nPosQuant),aCols[n,nPosQuant],UserException('D3_QUANT'+OemToAnsi(STR0019)))
	nQuant2UM := If(!Empty(nPosQtSegum),aCols[n,nPosQtSegum],0)
	cLocal    := If(!Empty(nPosLocal),aCols[n,nPosLocal],UserException('D3_LOCAL'+OemToAnsi(STR0019)))
	cLote     := If(!Empty(nPosLote),aCols[n,nPosLote],CriaVar('D3_NUMLOTE'))
	cLoteDigi := If(!Empty(nPosLotCTL),aCols[n,nPosLotCTL],CriaVar('D3_LOTECTL'))
	cLocaliza := If(!Empty(nPosLocali),aCols[n,nPosLocali],CriaVar('D3_LOCALIZ'))
Else
	cTM       := M->D3_TM
	cCod      := M->D3_COD
	nQuant    := M->D3_QUANT
	nQuant2UM := M->D3_QTSEGUMS
	cLocal    := M->D3_LOCAL
	cLote     := M->D3_NUMLOTE
	cLoteDigi := M->D3_LOTECTL
	cLocaliza := M->D3_LOCALIZ
EndIf

If !Localiza(cCod,.T.) .Or. cTm <= "500"
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁExecuta P.E. para permitir ou nao a digitacao do NS na devolucaoЁ
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If lPENSerDv
		lNumSerDev := ExecBlock("SD3NSDV",.F.,.F.)
		If ValType(lNumSerDev) # "L"
			lNumSerDev := .F.
		EndIf
	EndIf
	If l240 .And. !lNumSerDev
		M->D3_LOCALIZ := CriaVar("D3_LOCALIZ")
		M->D3_NUMSERI := CriaVar("D3_NUMSERI")
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_LOCALIZ" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_LOCALIZ
		EndIf
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "D3_NUMSERI" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->D3_NUMSERI
		EndIf
	ElseIf !l242 .And. !lNumSerDev
		M->D3_LOCALIZ := CriaVar("D3_LOCALIZ")
		M->D3_NUMSERI := CriaVar("D3_NUMSERI")
		If !Empty(nPosLocali) .And. !Empty(nPosNumSer)
			aCols[n,nPosLocali]:=M->D3_LOCALIZ
			aCols[n,nPosNumSer]:=M->D3_NUMSERI
		EndIf
	EndIf
Else
	If !MtAvlNSer(cCod,cConteudo,nQuant,nQuant2UM)
		lRet:=.F.
	EndIf
EndIf
dbSelectArea(cAlias)
dbSetOrder(nOrdem)
MsGoTo(nRecno)
Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240EstrOkЁ Autor Ё Rodrigo / Sergio      Ё Data Ё 20/01/98 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Valida se pode ser efetuado o estorno                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A240Estrok(ExpC1,ExpC2,ExpC3,ExpC4,ExpC5,ExpC6,ExpN1,      Ё╠╠
╠╠Ё          Ё            ExpL1,ExpL2,ExpL3)							  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Codigo do Produto                                  Ё╠╠
╠╠Ё          Ё ExpC2 = Local                                              Ё╠╠
╠╠Ё          Ё ExpC3 = Lote                                               Ё╠╠
╠╠Ё          Ё ExpC4 = SubLote                                            Ё╠╠
╠╠Ё          Ё ExpC5 = Numero Sequencial                                  Ё╠╠
╠╠Ё          Ё ExpC6 = Documento                                          Ё╠╠
╠╠Ё          Ё ExpN1 = Qtd a ser verificada qdo utiliza GetDados          Ё╠╠
╠╠Ё          Ё ExpL1 = Indica se И aprop. indireta                        Ё╠╠
╠╠Ё          Ё ExpL2 = Variavel que indica se estorna data do inventario  Ё╠╠
╠╠Ё          Ё ExpL3 = Indica se utiliza rotina automatica                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240EstrOk(cProduto,cLocal,cLoteCtl,cNumLote,cNumSeq,cDoc,nQuant,lApropri,lInventario,lRotinaAutom)
Local lRet		:= .T.
Local aArea		:= GetArea()
Local cTipoLote	:= ""
Local cLocProc  := GetMvNNR('MV_LOCPROC','99')
Local cTM       := SD3->D3_TM
Local cLocaliz  := SD3->D3_LOCALIZ
Local cNumSerie := SD3->D3_NUMSERI
Local cServic   := SD3->D3_SERVIC
Local cSeek     := ""
Local lAchou    := .F.
Local lDCLNew   := SuperGetMV("MV_DCLNEW",.F.,.F.)
Local lWmsSD3   := Iif(Type('lExecWms')=='L', lExecWms, .F.)

DEFAULT lInventario := .F.
DEFAULT lRotinaAutom:= .F.

cProduto := If(cProduto == NIL,SD3->D3_COD,cProduto)
cLocal   := If(cLocal == NIL,SD3->D3_LOCAL,cLocal)
cLoteCtl := If(cLoteCtl == NIL,SD3->D3_LOTECTL,cLoteCtl)
cNumLote := If(cNumLote == NIL,SD3->D3_NUMLOTE,cNumLote)
cNumSeq  := If(cNumSeq == NIL,SD3->D3_NUMSEQ,cNumSeq)
cDoc     := If(cDoc == NIL,SD3->D3_DOC,cDoc)
cTipoLote:= If(Rastro(cProduto),If(Rastro(cProduto,"S"),"S","L"),"N")
nQuant   := If(nQuant == NIL,SD3->D3_QUANT,nQuant)

//-- Todas as ordens de servico do WMS nao executadas para esta producao, serao travadas e estornadas na funcao A250DesAtu
//-- As ordens de servico ja executadas deverao ser estornadas pela rotina de execucao de servicos do WMS
If lRet .And. !lWmsSD3 .And. IntWMS(cProduto) .And. !Empty(cServic)
	lRet := WmsAvalSD3("3")
EndIf

If lRet .And. !(Type('lApropri')=='L')
	SB1->(dbSetOrder(1))
	SF5->(dbSetOrder(1))
	lApropri := (SB1->(dbSeek(xFilial('SB1')+cProduto,.F.)).And.SB1->B1_APROPRI=='I')
	lApropri := (lApropri.And.SF5->(dbSeek(xFilial('SF5')+SD3->D3_TM,.F.)).And.!(SF5->F5_APROPR=='S'))
EndIf
//-- No Estorno, qdo for Aprop Indireta, inverte a Movimenta┤фo e Troca Local
If lRet .And. lApropri
	cLocal   := IIF(Val(cTm) > 500, cLocProc, cLocal)
	cTM      := IIf(Val(cTm) > 500, '499', cTM)
	cLocaliz := ""
	cNumSerie:= ""
EndIf
If lRet .And. cTM <= "500"
	If !IsProdMod(cProduto)
		lRet := MatVldEst(cProduto,cLocal,cLoteCtl,cNumLote,cLocaliz,cNumSerie,cNumSeq,cDoc,nQuant)
	Else
		lRet:=.T.
	EndIf
EndIf
If lRet .And. Trim(cDoc) == "INVENT" .And. !lRotinaAutom
	lInventario := (Aviso(STR0037+" - "+cProduto,STR0038,{STR0025,STR0026}) == 1)
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁValidar estorno para que o saldo do produto/n.serie nao fique maior que 1 Ё
//ЁEstorno de requisicao farah uma entrada no local/endereco                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. cTM > "500" .And. !Empty(cNumSerie)
	lAchou := .F.
	dbSelectArea("SBF")
	dbSetOrder(4) // BF_FILIAL+BF_PRODUTO+BF_NUMSERI
	dbSeek(cSeek := xFilial('SBF')+cProduto+cNumSerie)
	While !Eof() .And. BF_FILIAL+BF_PRODUTO+BF_NUMSERI == cSeek
		If (QtdComp(BF_QUANT) > QtdComp(0)) /* .And. (BF_LOCAL+BF_LOCALIZ # cLocal+cLocaliz) */
			lAchou := .T.
			Exit
		EndIf
		dbSkip()
	EndDo
	If lAchou
		lRet := .F.
		Help(" ",1,"MA240ESTOR")
	EndIf
EndIf

If lDCLNew
	lRet := DCLMT240ES()
Else
	// Este ponto de entrada permite validar dados especificos
	// no usuario no momento do Estorno.
	If lRet .And. ExistTemplate('MT240EST')
		lRet := ExecTemplate('MT240EST', .F., .F.)
	EndIf
EndIf

If lRet .And. ExistBlock('MT240EST')
	lRet := ExecBlock('MT240EST', .F., .F.)
EndIf

RestArea(aArea)
Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA240Desc  Ё Autor Ё Rodrigo de A. SartorioЁ Data Ё 16/06/98 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Preenche campo virtual com a descricao do produto          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Desc()
If SB1->(dbSeek(xFilial("SB1")+M->D3_COD))
	M->D3_DESCRI:=SB1->B1_DESC
EndIf
Return

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240AvalEmЁ Autor Ё Rodrigo de A. SartorioЁ Data Ё 06/10/00 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Valida se pode baixar o empenho                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁA240AvalEm(ExpL1,ExpC1,ExpC2,ExpN1,ExpC3,ExpC4,ExpC5,ExpC6, Ё╠╠
╠╠Ё          Ё           ExpC7,ExpC8,ExpL2,ExpL3,ExpL4,ExpN2,ExpC9,ExpC10)Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpL1 = Indica se ira baixar empenho                       Ё╠╠
╠╠Ё          Ё ExpC1 = Codigo do Produto                                  Ё╠╠
╠╠Ё          Ё ExpC2 = Local                                              Ё╠╠
╠╠Ё          Ё ExpN1 = Qtd a ser verificada                               Ё╠╠
╠╠Ё          Ё ExpC3 = Lote                                               Ё╠╠
╠╠Ё          Ё ExpC4 = SubLote                                            Ё╠╠
╠╠Ё          Ё ExpC5 = Localizacao                                        Ё╠╠
╠╠Ё          Ё ExpC6 = Numero de Serie                                    Ё╠╠
╠╠Ё          Ё ExpC7 = Ordem de Producao                                  Ё╠╠
╠╠Ё          Ё ExpC8 = Sequencia da Estrutura                             Ё╠╠
╠╠Ё          Ё ExpL2 = Indica se mostra aviso                             Ё╠╠
╠╠Ё          Ё ExpL3 = Indica se estorno                                  Ё╠╠
╠╠Ё          Ё ExpL4 = Indica se baixa empenho no SB8                     Ё╠╠
╠╠Ё          Ё ExpN2 = Indica qual a potencia do lote                     Ё╠╠
╠╠Ё          Ё ExpC9 = Cod.do Projeto (PMS)                               Ё╠╠
╠╠Ё          Ё ExpC10= Cod.da Tarefa (PMS)                                Ё╠╠
╠╠Ё          Ё ExpC5 = Indica se baixa empenho negativo                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240AvalEm(lBaixaEmp,cProduto,cLocal,nQuant,cLoteCtl,cNumLote,cLocaliz,cNumSerie,cOP,cTrt,lAviso,lDevolucao,lBxEmpB8,nPotenci,cCodPrj,cTrfPrj,lBxEmpNeg)
Local lRet         := .T.
Local cSeek        := ""
Local cCompara     := ""
Local lTentaRastro := .T.
Local lContinua    := .T.
Local nQtdEmp      := 0
Local nQtdOri      := 0
Local nPos         := 0
Local aArea        := GetArea()
Local aAreaSD4     := SD4->(GetArea())
Local aAreaSDC     := SDC->(GetArea())
Local aAreaAFJ     := AFJ->(GetArea())
Local lUsaPotenc   := PotencLote(cProduto)
Local nDecSD4      := TamSX3('D4_QUANT')[2]
Local lNegEstr     := SuperGetMV("MV_NEGESTR",.F.,.F.)
Local lContEmp     := .T.
Local lAchou       := .F.
Local lPrdIntWms   := IntWms(cProduto)
Local nQtdSD4Wms   := 0
Local lHasIntWms   := .F.
Local lProdCoPR	   := IsProdCoPR(cProduto,cOP,cTRT)

Default nPotenci   := 0
Default lBxEmpNeg  := .F.

If lBaixaEmp
	dbSelectArea("SD4")
	dbSetOrder(1)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se existe empenho com o lote especifico       Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	cSeek:=xFilial("SD4")+cProduto+cOP+cTrt+If(!lProdCoPR,cLoteCtl+cNumLote,"")
	cCompara:="D4_FILIAL+D4_COD+D4_OP+D4_TRT"+If(!lProdCoPR,"+D4_LOTECTL+D4_NUMLOTE","")
	dbSeek(cSeek)
	While !EOF() .And. cSeek == &(cCompara)
		If D4_LOCAL == cLocal
			lAchou := .T.
			If lDevolucao
				nQtdOri+=D4_QTDEORI
			Else
				// Quando a requisiГЦo estiver integrada ao WMS, deverА  
				// considerar apenas a quantidade separada da requisiГЦo no WMS
				If !Empty(SD4->D4_IDDCF) .And. lPrdIntWms
					lHasIntWms := .T.
					lContinua  := WmsAvalSD4("2",,@nQtdSD4Wms)
					nQtdOri    += nQtdSD4Wms
				Else
					nQtdOri+=D4_QUANT
				EndIf
			EndIf
		EndIf
		dbSkip()
	End

	// Se teve SD4 integrada ao WMS e nЦo conseguiu quantiodade de SD4 suficiente
	// И porque deve estar faltando finalizar o processo no WMS para baixar a requisiГЦo
	If lContinua .And. lHasIntWms .And. QtdComp(nQtdOri) < QtdComp(nQuant)
		lContinua := WmsAvalSD4("3",,,cOp)
	EndIf

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se utiliza empenho negativo                   Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If lContinua .And. lNegEstr
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Caso utilize empenho negativo nao gravar empenho       |
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If nQtdOri <= 0 .And. lAchou
			lContinua := .F.
			lBaixaEmp := .F.
			lBxEmpNeg := .T.
		EndIf
	EndIf

	If lContinua
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Procura o empenho no SDC                               Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If Localiza(cProduto,.T.)
			dbSelectArea("SDC")
			dbSetOrder(2)
			cSeek   :=xFilial("SDC")+cProduto+cLocal+cOP+cTrt+cLoteCtl+cNumLote+cLocaliz+cNumSerie
			cCompara:="DC_FILIAL+DC_PRODUTO+DC_LOCAL+DC_OP+DC_TRT+DC_LOTECTL+DC_NUMLOTE+DC_LOCALIZ+DC_NUMSERI"
			If dbSeek(cSeek)
				lBxEmpB8:=.T.
				While !EOF() .And. cSeek == &(cCompara)
					If lDevolucao
						nQtdEmp+=(DC_QTDORIG-DC_QUANT)
					Else
						nQtdEmp+=DC_QUANT
					EndIf
					dbSkip()
				End
				If nQuant >	nQtdEmp
					If (nQtdOri >= nQuant)
						lBxEmpB8 :=.F.
					Else
						lBxEmpB8 :=.F.
						lBaixaEmp:=.F.
					EndIf
				EndIf
				If Rastro(cProduto)
					lTentaRastro:=.F.
				EndIf
			Else
				If (nQtdOri >= nQuant)
					lBxEmpB8 :=.F.
				Else
					lBxEmpB8 :=.F.
					lBaixaEmp:=.F.
				EndIf
				If lBaixaEmp .And. Rastro(cProduto)
					lTentaRastro:=.T.
				EndIf
			EndIf
		Else
			If (nQtdOri >= nQuant)
				lBxEmpB8 :=.F.
			Else
				lBxEmpB8 :=.F.
				lBaixaEmp:=.F.
			EndIf
			If lBaixaEmp .And. Rastro(cProduto)
				lTentaRastro:=.T.
			EndIf
		EndIf
		RestArea(aAreaSD4)
		RestArea(aAreaSDC)
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Procura o empenho no SD4                               Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If lContinua .And. Rastro(cProduto) .And. lTentaRastro
		nQtdEmp:=0
		dbSelectArea("SD4")
		dbSetOrder(1)
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica se existe empenho com o lote especifico       Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		cSeek   :=xFilial("SD4")+cProduto+cOP+cTrt+cLoteCtl+cNumLote
		cCompara:="D4_FILIAL+D4_COD+D4_OP+D4_TRT+D4_LOTECTL+D4_NUMLOTE"
		If !dbSeek(cSeek)
			cSeek:=xFilial("SD4")+cProduto+cOP+cTrt+CriaVar("D4_LOTECTL")+CriaVar("D4_NUMLOTE")
			dbSeek(cSeek)
			lBxEmpB8:=.F.
		Else
			lBxEmpB8:=.T.
		EndIf
		While !EOF() .And. cSeek == &(cCompara)
			If D4_LOCAL == cLocal
				If lDevolucao
					nQtdEmp+=(D4_QTDEORI-D4_QUANT)
				Else
					nQtdEmp+=D4_QUANT
				EndIf
			EndIf
			dbSkip()
		End
		If !lBxEmpB8 .And. lUsaPotenc
			nQuant:=Round(nQuant*(nPotenci/100),nDecSD4)
		EndIf
		If nQuant >	nQtdEmp
			lBaixaEmp:=.F.
		Else
			lBaixaEmp:=.T.
		EndIf
		RestArea(aAreaSD4)
	EndIf

	If lContinua .And. !Empty(cCodPrj) .And. !Empty(cTrfPrj)
		// se houver baixa de empenho
		If lBaixaEmp
			// se nao for informado a sequencia
			If Empty(cTrt)
				If l241
					lContEmp := (Type("l241Auto") # "L" .or. !l241Auto)
				Else
					lContEmp := (Type("l240Auto") # "L" .or. !l240Auto)
				EndIf
				If lContEmp
					If Aviso(OemToAnsi(STR0013),OemToAnsi("Para o tipo de movimento selecionado deve ser informado a sequencia de empenho do projeto."),{OemToAnsi("Selecionar"),OemToAnsi("Voltar")})==1 //"ATENCAO"###"O tipo de movimento selecionado deve ser informado a Sequencia de enoenho."###"OK"
						cTrt := PmsSelEmp(cCodPrj,cTrfPrj,,,cProduto,cLocal,lDevolucao)
						If !l241
							M->D3_TRT := cTrt
						EndIf
						If Empty(cTrt)
							lRet := .F.
							lContinua := .F.
						EndIf
					Else
						lRet := .F.
						lContinua := .F.
					EndIf
				EndIf
			EndIf
			If lContinua
				//зддддддддддддддддддддддддддд©
				//Ё Verifica se existe empenhoЁ
				//юддддддддддддддддддддддддддды
				nQtdEmp := 0

				dbSelectArea("AFJ")
				dbSetOrder(3)
				cSeek:=xFilial("AFJ")+cCodPrj+cTrfPrj+cTrt
				cCompara:="AFJ_FILIAL+AFJ_PROJET+AFJ_TAREFA+AFJ_TRT"
				If dbSeek(cSeek)
					If (AFJ->AFJ_EMPEST != (AFJ->AFJ_QEMP - AFJ->AFJ_QATU)) .Or.;
						(AFJ->AFJ_EMPES2 != (AFJ->AFJ_QEMP2 - AFJ->AFJ_QATU2)) .Or.;
						(AFJ->AFJ_EMPEST == 0 .Or.	AFJ->AFJ_EMPES2 == 0)
						While AFJ->(!EOF() .And. cSeek == &(cCompara))
							If AFJ->AFJ_LOCAL == cLocal .And. AFJ->AFJ_COD == cProduto
								If lDevolucao
									nQtdEmp+=(AFJ->AFJ_QEMP-(AFJ->AFJ_QEMP-AFJ->AFJ_QATU))
								Else
									nQtdEmp+=(AFJ->AFJ_QEMP-AFJ->AFJ_QATU)
								EndIf
							EndIf
							AFJ->(dbSkip())
						End
						If nQuant >	nQtdEmp
							lBaixaEmp:=.F.
						EndIf
					Else
						Aviso("Empenho Zerado","NЦo foi possМvel efetuar a baixa do empenho"+;
						CRLF+"pois o empenho jА foi zerado!",{OemToAnsi("OK")}) //"Empenho Zerado"###"NЦo foi possМvel efetuar a baixa do empenho pois o empenho jА foi zerado!"###"OK"
						lRet := .F.
						lContinua := .F.
					EndIf
				Else
					Aviso(OemToAnsi(STR0013),OemToAnsi(STR0057),{OemToAnsi("OK")}) //"ATENCAO"###"A sequencia de empenho do projeto informada nЦo existe. Verifique."###"OK"
					lRet := .F.
					lContinua := .F.
				EndIf
				RestArea(aAreaAFJ)
			EndIf
		EndIf
	EndIf

	If lContinua .And. lAviso .And. !lBaixaEmp
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁA mensagem de divergЙncia entre o saldo empenhado e a   Ё
		//Ёquantidade informada na requisiГЦo sС deve ser exibida  Ё
		//Ёquando houver registro de empenho na SD4.               Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		SD4->(dbSetOrder(2)) // D4_FILIAL+D4_OP+D4_COD+D4_LOCAL
		If SD4->(dbSeek(xFilial("SD4")+cOP+cProduto+cLocal))
			If l241
				If (Type("l241Auto") # "L" .or. !l241Auto)
					nPos:= Ascan(aResposta,{|x| x[1] ==cProduto+cLocal+cOP+cTrt+cLoteCtl+cNumLote+cLocaliz+cNumSerie})
					If Empty(nPos) .or. aResposta[nPos,2] <> nQuant
						lRet:=Aviso(OemToAnsi(STR0013),OemToAnsi(STR0017),{OemToAnsi(STR0006),OemToAnsi(STR0007)}) == 2 //"ATENCAO"###"A quantidade da requisicao e' maior que o saldo empenhado deste produto para esta OP . Ao requisitar esta quantidade o empenho nao sera baixado."###"Abandona"### "Confirma"
						If Empty(nPos)
							AADD(aResposta,{cProduto+cLocal+cOP+cTrt+cLoteCtl+cNumLote+cLocaliz+cNumSerie,nQuant,lRet})
						Else // caso entre nesta situacao sempre a quantidade estara diferente.
							aResposta[nPos,2]:= nQuant
							aResposta[nPos,3]:= lRet
						EndIf
					Else
						lRet :=aResposta[nPos,3]
					EndIf
				Else
					lRet:= .T.
				EndIf
			Else
				If (Type("l240Auto") # "L" .or. !l240Auto)
					If IsTelnet()
						VTAlert(OemToAnsi(STR0017),OemToAnsi(STR0013),.T.) //"A quantidade da requisicao e' maior que o saldo empenhado deste produto para esta OP . Ao requisitar esta quantidade o empenho nao sera baixado."###"ATENCAO"
						lRet:=VTYesNo(STR0039,STR0040,.T.) //"Confirma a Operacao?"###"Pergunta"
					Else
						lRet:=Aviso(OemToAnsi(STR0013),OemToAnsi(STR0017),{OemToAnsi(STR0006),OemToAnsi(STR0007)}) == 2 //"ATENCAO"###"A quantidade da requisicao e' maior que o saldo empenhado deste produto para esta OP . Ao requisitar esta quantidade o empenho nao sera baixado."###"Abandona"### "Confirma"
					EndIf
				Else
					lRet:= .T.
				EndIf
			EndIf
		EndIf
	EndIf
EndIf
RestArea(aArea)
RETURN lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA240VldPrjЁ Autor Ё Edson Maricate        Ё Data Ё 22/07/01 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o ЁValidacao do codigo da tarefa digitada.                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240VldPrj()
Local lRet	    := .F.
Local aArea		:= GetArea()
Local aAreaAF8	:= AF8->(GetArea())
Local aAreaAF9	:= AF9->(GetArea())

If l240
	AF8->(dbSetOrder(1))
	If AF8->(dbSeek(xFilial()+M->D3_PROJPMS))
		// valida se o produto foi associado a um insumo do projeto no CORPORE RM
		If !Empty(M->D3_COD) .AND. SlmValid(M->D3_PROJPMS ,M->D3_COD)
			AF9->(dbSetOrder(1))
			If AF9->(dbSeek(xFilial("AF9")+AF8->AF8_PROJET+AF8->AF8_REVISA+M->D3_TASKPMS))
				lRet := .T.
				If ( Type("l240Auto") # "L" .or. !l240Auto )
					If Aviso(STR0023,STR0024,{STR0025,STR0026},2)==1 //"Empenhos do projeto"###"Voce deseja selecionar um empenho referente ao projeto / tarefa ?"###"Sim"###"Nao"
						M->D3_TRT := PmsSelEmp(M->D3_PROJPMS,M->D3_TASKPMS,,,M->D3_COD,M->D3_LOCAL,M->D3_TM<="500")
					Else
						M->D3_TRT := SPACE(LEN(SD3->D3_TRT))
					EndIf
				EndIf
			Else
				Help("   ",1,"REGNOIS")
			EndIf
		EndIf
	Else
		Help("   ",1,"REGNOIS")
	EndIf
Elseif l241Auto
	AF8->(dbSetOrder(1))
	If AF8->(dbSeek(xFilial()+M->D3_PROJPMS))
		// valida se o produto foi associado a um insumo do projeto no CORPORE RM
		If !Empty(M->D3_COD) .AND. SlmValid(M->D3_PROJPMS ,M->D3_COD)
			AF9->(dbSetOrder(1))
			If AF9->(dbSeek(xFilial()+AF8->AF8_PROJET+AF8->AF8_REVISA+M->D3_TASKPMS))
				lRet := .T.
				If ( Type("l241Auto") # "L" .or. !l241Auto )
					If Aviso(STR0023,STR0024,{STR0025,STR0026},2)==1 //"Empenhos do projeto"###"Voce deseja selecionar um empenho referente ao projeto / tarefa ?"###"Sim"###"Nao"
						M->D3_TRT := PmsSelEmp(M->D3_PROJPMS,M->D3_TASKPMS,,,M->D3_COD,M->D3_LOCAL,M->D3_TM<="500")
					Else
						M->D3_TRT := SPACE(LEN(SD3->D3_TRT))
					EndIf
				EndIf
			Else
				Help("   ",1,"REGNOIS")
			EndIf
		EndIf
	Else
		Help("   ",1,"REGNOIS")
	EndIf
Else
	AF8->(dbSetOrder(1))
	If AF8->(dbSeek(xFilial()+aCols[n][aScan(aHeader,{|x|Alltrim(x[2])=="D3_PROJPMS"})]))
		// valida se o produto foi associado a um insumo do projeto no CORPORE RM
		If !Empty(aCols[n][aScan(aHeader,{|x|Alltrim(x[2])=="D3_COD"})]) .AND. SlmValid(aCols[n][aScan(aHeader,{|x|Alltrim(x[2])=="D3_PROJPMS"})] ,aCols[n][aScan(aHeader,{|x|Alltrim(x[2])=="D3_COD"})])
			AF9->(dbSetOrder(1))
			If AF9->(dbSeek(xFilial()+AF8->AF8_PROJET+AF8->AF8_REVISA+&(ReadVar())))
				lRet := .T.
				If ( Type("l240Auto") # "L" .or. !l240Auto ) .And. ReadVar()=="M->D3_TASKPMS"
					If Aviso(STR0023,STR0024,{STR0025,STR0026},2)==1 //"Empenhos do projeto"###"Voce deseja selecionar um empenho referente ao projeto / tarefa ?"###"Sim"###"Nao"
						aCols[n][aScan(aHeader,{|x|Alltrim(x[2])=="D3_TRT"})]	 := PmsSelEmp(aCols[n][aScan(aHeader,{|x|Alltrim(x[2])=="D3_PROJPMS"})],M->D3_TASKPMS,,,aCols[n][aScan(aHeader,{|x|Alltrim(x[2])=="D3_COD"})],aCols[n][aScan(aHeader,{|x|Alltrim(x[2])=="D3_LOCAL"})] ,cTM<="500")
					Else
						aCols[n][aScan(aHeader,{|x|Alltrim(x[2])=="D3_TRT"})]	 :=	SPACE(LEN(SD3->D3_TRT))
					EndIf
				EndIf
			Else
				Help("   ",1,"REGNOIS")
			EndIf
		EndIf
	Else
		Help("   ",1,"REGNOIS")
	EndIf
EndIf

RestArea(aAreaAF8)
RestArea(aAreaAF9)
RestArea(aArea)

Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240VldeOPЁ Autor Ё Rodrigo de A. SartorioЁ Data Ё 28/06/01 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Valida se pode efetuar a devolucao                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A240VldeOP(ExpC1,ExpC2,ExpC3,ExpN1,ExpN2,ExpC4,ExpC5)      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Codigo do Produto                                  Ё╠╠
╠╠Ё          Ё ExpC2 = Local                                              Ё╠╠
╠╠Ё          Ё ExpC3 = Ordem de Producao                                  Ё╠╠
╠╠Ё          Ё ExpN1 = Qtd a ser verificada                               Ё╠╠
╠╠Ё          Ё ExpN2 = Qtd a ser verificada 2a UM                         Ё╠╠
╠╠Ё          Ё ExpC4 = Lote                                               Ё╠╠
╠╠Ё          Ё ExpC5 = SubLote                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240VlDeOP(cProduto,cLocal,cOP,nQuant,nQuant2UM,cLoteCtl,cNumLote)
Local lRet		:= .T.
Local lMT240DVL := .F.
Local aAreaSD3	:=SD3->(GetArea())
Local nQuantReq	:=0,nQuantReq2UM:=0

Default nQuant    := 0
Default nQuant2UM := 0
Default cLoteCtl  := CriaVar('D3_LOTECTL')
Default cNumLote  := CriaVar('D3_NUMLOTE')

dbSelectArea("SD3")
dbSetOrder(1)
dbSeek(xFilial("SD3")+cOP+cProduto)
While !Eof() .And. D3_FILIAL+D3_OP+D3_COD == xFilial("SD3")+cOp+cProduto
	// Ignora registros estornados ou com dados distintos
	If D3_ESTORNO <> "S" .AND. ((cLoteCtl+cNumLote) == (D3_LOTECTL+D3_NUMLOTE)).AND. (D3_CF $ "DE0/DE1/DE2/DE3/DE5/DE6/DE9")
		nQuant   +=D3_QUANT
		nQuant2UM+=D3_QTSEGUM	
	EndIf
	If D3_ESTORNO == "S" .Or. ((cLoteCtl+cNumLote) # (D3_LOTECTL+D3_NUMLOTE)).Or. !(D3_CF $ "RE0/RE1/RE2/RE3/RE5/RE6/RE9")	
		dbSkip()
		Loop
	EndIf
	nQuantReq   +=D3_QUANT
	nQuantReq2UM+=D3_QTSEGUM
	dbSkip()
End

If (QtdComp(nQuant) > QtdComp(0) .And. QtdComp(nQuantReq) < QtdComp(nQuant)) .Or.;
		(QtdComp(nQuant2UM) > QtdComp(0) .And. QtdComp(nQuantReq2UM) < QtdComp(nQuant2UM))
	If ( Type("l240Auto") == "L" .And. !l240Auto ) .Or. ( Type("l241Auto") == "L" .And. !l241Auto )
		  //здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Executa ponto de entrada para validar a apresentaГЦo  Ё
			//Ё ou nЦo da mensagem                                    Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If ExistBlock("MT240DVL")
				lMT240DVL := ExecBlock("MT240DVL",.F.,.F.)
				If ValType(lMT240DVL) == "L"
					lRet := lMT240DVL
				EndIf
			Else
			   Aviso(OemToAnsi(STR0013),OemToAnsi(STR0018),{OemToAnsi(STR0065)})  //"ATENCAO"###"A quantidade da devolucao e' maior que o saldo requisitado deste produto para esta OP . Ao devolver esta quantidade o saldo da OP podera ficar negativo."OK"
			   lRet:=.F.
			Endif
   Else
	  lRet:= .F.	
	  Help(" ",1,"MAIORQUESALDO") // A quantidade da devolucao e' maior que o saldo requisitado deste produto para esta OP 
   EndIf
EndIf
RestArea(aAreaSD3)
Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё A240Potenc  ЁAutorЁRodrigo de A. SartorioЁ Data Ё 17/06/02 Ё╠╠
╠╠цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Validacao para digitar a potencia do Lote corretamente     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Potenc()
Local lRet      := .T.
Local cCod		:= If(l240.Or.l250,M->D3_COD,If(!Empty(nPosCod),aCols[n,nPosCod],UserException('D3_COD'+OemToAnsi(STR0019))))
Local cTm       := If(l240.Or.l250,M->D3_TM,cTm)
Local cLocal    := If(l240.Or.l250,M->D3_LOCAL,If(!Empty(nPosLocal),aCols[n,nPosLocal],UserException('D3_LOCAL'+OemToAnsi(STR0019))))
Local cLote     := If(l240.Or.l250,M->D3_NUMLOTE,If(!Empty(nPosLote),aCols[n,nPosLote],CriaVar('D3_NUMLOTE')))
Local cLoteCtl  := If(l240.Or.l250,M->D3_LOTECTL,If(!Empty(nPosLotCTL),aCols[n,nPosLotCTL],CriaVar('D3_LOTECTL')))
Local nPotencia := &(ReadVar())
Local aAreaSB8  := SB8->(GetArea())
Local cAlias    := Alias()

If !Rastro(cCod)
	Help(" ",1,"NAORASTRO")
	lRet:=.F.
Else
	If !PotencLote(cCod)
		Help(" ",1,"NAOCPOTENC")
		lRet:=.F.
	EndIf
	If lRet .And. (!Empty(cLoteCtl) .Or. !Empty(cLote))
		// Verifica se a data de validade pode ser utilizada
		dbSelectArea("SB8")
		dbSetOrder(3)
		If dbSeek(xFilial()+cCod+cLocal+cLoteCtl+If(Rastro(cCod,"S"),+cLote,"")) .And. nPotencia # SB8->B8_POTENCI
			Help(" ",1,"POTENCORI")
			&(ReadVar()):=SB8->B8_POTENCI
		EndIf
		RestArea(aAreaSB8)
	EndIf
EndIf
dbSelectArea(cAlias)
Return lRet

/*ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA240VerSDGЁ Autor ЁPatricia A. Salomao     Ё Data Ё20.06.2002Ё╠╠
╠╠цддддддддддеддддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁVerifica se foi informado Rateio de Veiculo/Viagem ou Rateio Ё╠╠
╠╠Ё          Ёde Frota para o Produto                                      Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A240VerSDG(ExpC1)                                           Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Numero sequencial do movimento                      Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                      Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240                                                     Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Function a240VerSDG(cNumSeq)

Local aAreaSDG := SDG->(GetArea())
Local nPos     := 0

SDG->(dbSetOrder(7))
If SDG->(MsSeek(xFilial("SDG")+"SD3"+cNumSeq))
	If Empty(SDG->DG_CODVEI) .And. Empty(SDG->DG_VIAGEM) //Verifica se o Rateio foi por Veiculo/Viagem ou por Frota
		aadd(aRatFro,{SDG->DG_ITEM,{},SDG->DG_CODDES})
	Else
		aadd(aRatVei,{SDG->DG_ITEM,{},SDG->DG_CODDES})
	EndIf
	While SDG->(!Eof()) .And. SDG->DG_FILIAL + SDG->DG_ORIGEM + SDG->DG_SEQMOV == xFilial("SDG") + "SD3" + cNumSeq
		If Empty(SDG->DG_CODVEI) .And. Empty(SDG->DG_VIAGEM) //Verifica se o Rateio foi por Veiculo/Viagem ou por Frota
			Aadd(aRatFro[1][2],{SDG->DG_ITEM, SDG->DG_PERC,.F.})
		Else
			If ( nPos := Ascan(aRatVei[1][2], { |x| x[2] == SDG->DG_CODVEI } ) ) == 0
				Aadd(aRatVei[1][2],{SDG->DG_ITEM,SDG->DG_CODVEI,SDG->DG_FILORI,SDG->DG_VIAGEM, SDG->DG_TOTAL,"",0,0,.F.})
			EndIf
		EndIf
		SDG->(DbSkip())
	EndDo
EndIf

RestArea( aAreaSDG )

Return .T.

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA240AAcho Ё Prog. ЁRodrigo de A Sartorio  ЁData  Ё19.05.2003Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Monta o array com os campos a serem utilizados             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A240AAcho(ExpA1)                                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpA1 = Array com os campos a NAO serem incluidos          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      ЁMATA185/MATA240/MATA241                                     Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240AAcho(aNaoInclui)
Local aCampos	:={}
Local zi		:=0
Local aCTBEnt	:= CTBEntArr()
Local nX

Default aNaoInclui:={}
AADD(aCampos,"D3_TM")
AADD(aCampos,"D3_COD")
AADD(aCampos,"D3_QUANT")
AADD(aCampos,"D3_UM")
AADD(aCampos,"D3_QTSEGUM")
AADD(aCampos,"D3_SEGUM")
AADD(aCampos,"D3_LOCAL")
AADD(aCampos,"D3_OP")
AADD(aCampos,"D3_TRT")
AADD(aCampos,"D3_REVISAO")
AADD(aCampos,"D3_GRUPO")
AADD(aCampos,"D3_CC")
AADD(aCampos,"D3_CONTA")
AADD(aCampos,"D3_ITEMCTA")
AADD(aCampos,"D3_CLVL")
AADD(aCampos,"D3_EMISSAO")
AADD(aCampos,"D3_DOC")
AADD(aCampos,"D3_CUSTO1")
AADD(aCampos,"D3_CUSTO2")
AADD(aCampos,"D3_CUSTO3")
AADD(aCampos,"D3_CUSTO4")
AADD(aCampos,"D3_CUSTO5")
AADD(aCampos,"D3_DESCRI")
	AADD(aCampos,"D3_TEATF")
AADD(aCampos,"D3_CODVEI")
AADD(aCampos,"D3_VIAGEM")
//-- Tratamento dos campos para utilizacao do SIGAWMS
If IntWMS()
	aAdd(aCampos,'D3_STSERV')
	aAdd(aCampos,'D3_SERVIC')
	AAdd(aCampos,'D3_REGWMS')
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Tratamento dos campos para utilizacao do Siga PyMe.          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
AADD(aCampos,"D3_POTENCI")
AADD(aCampos,"D3_LOTECTL")
AADD(aCampos,"D3_NUMLOTE")
AADD(aCampos,"D3_DTVALID")
AADD(aCampos,"D3_NUMSERI")
AADD(aCampos,"D3_PROJPMS")
AADD(aCampos,"D3_TASKPMS")
AADD(aCampos,"D3_LOCALIZ")
If GetNewPar("MV_NGMNTES","N") == "S"
	AADD(aCampos,"D3_ORDEM")
	If NGD3GARANT()
		AADD(aCampos,"D3_GARANTI")
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inclui os campos referentes as entidades contabeis           Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
For nX := 1 To Len(aCTBEnt)
	aAdd(aCampos,"D3_EC" +aCTBEnt[nX] +"CR")
	aAdd(aCampos,"D3_EC" +aCTBEnt[nX] +"DB")
Next nX

//здддддддддддддддддддддддддддддддддддддд©
//Ё CAT83 - Permite ManutenГЦo no aCols  Ё
//юдддддддддддддддддддддддддддддддддддддды
If SuperGetMv("MV_CAT8309",.F.,.F.)
    aaDD(aCampos,"D3_CODLAN")
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Campos para tratamento especifico - Portugal         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( UsaSeqCor() )
	AADD(aCampos,"D3_NODIA")
EndIf

//здддддддддддддддддддддддддддд©
//Ё Guia de Abate - Portugal   Ё
//юдддддддддддддддддддддддддддды
If cPaisLoc=="PTG"
	AADD(aCampos,"D3_NRABATE")
EndIf

//Adicionando Campos DCL
If SuperGetMv("MV_DCLNEW",.F.,.F.)
	AADD(aCampos,"D3_TANQUE")
	AADD(aCampos,"D3_MASSA")
	AADD(aCampos,"D3_TEMPAMO")
	AADD(aCampos,"D3_TEMPTAQ")
	AADD(aCampos,"D3_DENSAMB")
	AADD(aCampos,"D3_QTDAMB")
	AADD(aCampos,"D3_FATCORR")
	AADD(aCampos,"D3_TPMOVAJ")
	AADD(aCampos,"D3_CODFOR")
	AADD(aCampos,"D3_LOJAFOR")
	AADD(aCampos,"D3_OBS")
EndIf

For zi:=1 To Len(aCampos)
	If ASCAN(aNaoInclui,aCampos[zi]) == 0
		AADD(aAcho,aCampos[zi])
	EndIf
Next zi
Return

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁB2ATUDTINVЁ Autor Ё Rodrigo de A. SartorioЁ Data Ё 05/08/03 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁAtualiza a data do inventario no arquivo SB2                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё B2AtuDtInv(ExpD1)                                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpD1 = data a ser atualizada no SB2                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё GENERICO                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function B2AtuDtInv(dDataInv)
Default dDataInv := CTOD('  /  /  ')
Reclock("SB2",.F.)
Replace B2_DINVENT With dDataInv
MsUnlock()
Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} BFAtuDtInv()
Atualiza a data do inventario no arquivo SBF
@author Bruno.Schmidt
@since 19/01/2017
@version 1.0
@return NIL
/*/
//-------------------------------------------------------------------
Function BFAtuDtInv()

Reclock("SBF",.F.)
Replace BF_DINVENT With CTOD('  /  /  ')
MsUnlock()

Return Nil
/*эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁA240TmsVldЁ Autor ЁEduardo de Souza       Ё Data Ё 30/08/04 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁValida exclusao do movimentos de custos de transporte.      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁExpL1 := A240TmsVld()                                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1 = Verifica se eh exclusao                             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁSigaTMS                                                     Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Function A240TmsVld()

Local lRet     := .T.
Local nCnt     := 0
Local aNumSeq  := {}
Local aAreaSD3 := SD3->(GetArea())

If IntTMS() // Integracao TMS
	If l240
		Aadd(aNumSeq, SD3->D3_NUMSEQ)
	ElseIf l241
		For nCnt := 1 To Len(aCols)
			SD3->(DbSetOrder(2))
			If SD3->(MsSeek(xFilial("SD3")+cDocumento+GDFieldGet("D3_COD",nCnt)))
				Aadd(aNumSeq, SD3->D3_NUMSEQ)
			EndIf
		Next nCnt
	EndIf
	For nCnt := 1 To Len(aNumSeq)
		SDG->(DbSetOrder(7))
		If SDG->(MsSeek(xFilial("SDG")+"SD3"+aNumSeq[nCnt]))
			While SDG->(!Eof()) .And. SDG->DG_FILIAL + SDG->DG_ORIGEM + SDG->DG_SEQMOV == xFilial("SDG") + "SD3" + aNumSeq[nCnt]
				If SDG->DG_STATUS <> StrZero(1,Len(SDG->DG_STATUS)) //-- Em Aberto
					If nModulo == 43 //--TMS
						//-- Caso somente a viagem esteja informada ou Frota, estorna o movimento de custo de transporte.
						If !( Empty(SDG->DG_CODVEI) .And. Empty(SDG->DG_FILORI) .And. Empty(SDG->DG_VIAGEM) ) .And. ;
						   !( Empty(SDG->DG_CODVEI) .And. !Empty(SDG->DG_FILORI) .And. !Empty(SDG->DG_VIAGEM) )
							//-- Caso a veiculo seja proprio estorna o movimento de custo de transporte.
							If !Empty(SDG->DG_CODVEI) .And. Empty(SDG->DG_FILORI) .And. Empty(SDG->DG_VIAGEM)
								DA3->(DbSetOrder(1))
								If DA3->(MsSeek(xFilial("DA3")+SDG->DG_CODVEI))
									If DA3->DA3_FROVEI <> "1"
										lRet := .F.
										Exit
									EndIf
								EndIf
							Else
								lRet := .F.
								Exit
							EndIf
						EndIf
					ElseIf nModulo == 39 //--OMS com Frete Embarcador
						//-- Caso somente a viagem esteja informada ou Frota, estorna o movimento de custo de transporte.
						If !( Empty(SDG->DG_CODVEI) .And. Empty(SDG->DG_IDENT) ) .And. ;
						   !( Empty(SDG->DG_CODVEI) .And. !Empty(SDG->DG_IDENT) )
							//-- Caso a veiculo seja proprio estorna o movimento de custo de transporte.
							If !Empty(SDG->DG_CODVEI) .And. Empty(SDG->DG_IDENT)
								DA3->(DbSetOrder(1))
								If DA3->(MsSeek(xFilial("DA3")+SDG->DG_CODVEI))
									If DA3->DA3_FROVEI <> "1"
										lRet := .F.
										Exit
									EndIf
								EndIf
							Else
								lRet := .F.
								Exit
							EndIf
						EndIf
					EndIf
				EndIf
				SDG->(DbSkip())
			EndDo
		EndIf
	Next nCnt
	RestArea( aAreaSD3 )
EndIf

If !lRet
	Help(" ",1,"A103NODEL") //-- Existe movimento de custo de transporte baixado, nao sera permitida a exclusao.
EndIf

Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤ao    ЁA240LegendaЁ Autor Ё Marcos V. Ferreira   Ё Data Ё 22.11.05 Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Cria uma janela contendo a legenda da mBrowse              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpA1 = Array aCores                                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240/MATA241/MATA242                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240Legenda(aCores)
Local aLegenda := {}
aAdd(aLegenda,{"BR_VERDE"	 ,OemToAnsi(STR0043)}) //E0
aAdd(aLegenda,{"BR_VERMELHO" ,OemToAnsi(STR0044)}) //E1
aAdd(aLegenda,{"BR_AZUL"     ,OemToAnsi(STR0045)})	//E2
aAdd(aLegenda,{"BR_LARANJA"  ,OemToAnsi(STR0046)}) //E3
aAdd(aLegenda,{"BR_MARROM"   ,OemToAnsi(STR0047)}) //E4
aAdd(aLegenda,{"BR_PRETO"    ,OemToAnsi(STR0048)}) //E5
aAdd(aLegenda,{"BR_PINK"     ,OemToAnsi(STR0049)}) //E6
aAdd(aLegenda,{"BR_BRANCO"   ,OemToAnsi(STR0050)}) //E7
aAdd(aLegenda,{"PMSEDT3"	 ,OemToAnsi(STR0051)}) //E8
aAdd(aLegenda,{"PMSEDT4"     ,OemToAnsi(STR0055)})	//E9
aAdd(aLegenda,{"PMSEDT1"     ,OemToAnsi(STR0058)}) //EA
aAdd(aLegenda,{"BR_AMARELO"  ,OemToAnsi(STR0052)}) //PR
aAdd(aLegenda,{"BR_CANCEL"   ,OemToAnsi(STR0053)})	//Estornados
BrwLegenda(cCadastro,OemToAnsi(STR0054),aLegenda)	//"Legenda"
Return

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤ao    ЁA240aCores Ё Autor Ё Marcos V. Ferreira   Ё Data Ё 22.11.05 Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Cria array aCores                                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё ExpA1 = Array aCores                                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA240/MATA241/MATA242                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240aCores()
Local aCores:= {{ 'SUBSTR(D3_CF,2,2)=="E0" .And. D3_ESTORNO <> "S"', 'BR_VERDE'		},;
				 {'SUBSTR(D3_CF,2,2)=="E1" .And. D3_ESTORNO <> "S"', 'BR_VERMELHO'	},;
				 {'SUBSTR(D3_CF,2,2)=="E2" .And. D3_ESTORNO <> "S"', 'BR_AZUL'  	},;
				 {'SUBSTR(D3_CF,2,2)=="E3" .And. D3_ESTORNO <> "S"', 'BR_LARANJA'	},;
				 {'SUBSTR(D3_CF,2,2)=="E4" .And. D3_ESTORNO <> "S"', 'BR_MARROM' 	},;
				 {'SUBSTR(D3_CF,2,2)=="E5" .And. D3_ESTORNO <> "S"', 'BR_PRETO' 	},;
				 {'SUBSTR(D3_CF,2,2)=="E6" .And. D3_ESTORNO <> "S"', 'BR_PINK' 		},;
				 {'SUBSTR(D3_CF,2,2)=="E7" .And. D3_ESTORNO <> "S"', 'BR_BRANCO' 	},;
				 {'SUBSTR(D3_CF,2,2)=="E8" .And. D3_ESTORNO <> "S"', 'PMSEDT3'   	},;
				 {'SUBSTR(D3_CF,2,2)=="E9" .And. D3_ESTORNO <> "S"', 'PMSEDT4'	    },;
				 {'SUBSTR(D3_CF,2,2)=="EA" .And. D3_ESTORNO <> "S"', 'PMSEDT1'	    },;
				 {'SUBSTR(D3_CF,1,2)=="PR" .And. D3_ESTORNO <> "S"', 'BR_AMARELO'	},;
				 {'D3_ESTORNO == "S"', 'BR_CANCEL' }}
Return aCores
/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤ao    ЁAvalMovSA  Ё Autor Ё Marcos V. Ferreira   Ё Data Ё 25.09.06 Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Avalia se o Movimento Interno foi gerado para rotina de    Ё╠╠
╠╠Ё          Ё Pre-Requisicao - MATA185                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё ExpL1 = .T. - Movimento Interno gerado pelo MATA185        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function AvalMovSA(cCod,cNumSeq)
Local lRet     := .F.
Local aAreaAnt := GetArea()
Local cTrbSCQ  := CriaTrab(Nil,.F.)
Local cIndice  := "CQ_FILIAL+CQ_PRODUTO+CQ_NUMREQ"
Local nInd     := 0
Local aHlpP    := {}
Local aHlpE    := {}
Local aHlpS    := {}

IndRegua("SCQ",cTrbSCQ,cIndice,,,"Selecionando Registros")	//"Selecionando Registros"
nInd := RetIndex("SCQ")
dbSetOrder(nInd+1)

If dbSeek(xFilial("SCQ")+cCod+cNumSeq)
	lRet := .T.
EndIf

RetIndex("SCQ")
dbClearFilter()
Ferase(cTrbSCQ+OrdBagExt())

//-- Criacao do Help A185ESTOR
aHlpP := {"Esta MovimentaГЦo nЦo pode ser Estornada",;
		  "porque foi gerada pela rotina de Baixa ",;
		  "da Pre-RequisiГЦo."}
aHlpE := {"This Operation cannot be Reversed",;
		  "as it was generated by the Pre-Requirement",;
		  "Posting routine."}
aHlpS := {"Estos Movimientos no pueden Revertirse",;
		  "porque se generaron por la rutina de Baja ",;
		  "de la Solicitud Previa."}

PutHelp ("PA185ESTOR", aHlpP, aHlpE, aHlpS, .F.)

//-- Criacao da Solucao do Help A185ESTOR
aHlpP := {"Para realizar o estorno desta Movimenta-",;
		  "ГЦo, acesse a rotina de baixa da  ",;
		  "pre-requisiГЦo e selecione a opГЦo de",;
		  "Estorno." }
aHlpE := {"In order to reverse this Operation",;
		  "access the pre-requirement posting ",;
		  "routine and select the operation",;
		  "Reversal." }
aHlpS := {"Para realizar la reversiСn de estos ",;
		  "Movimientos acceda a la rutina de baja" ,;
		  "de la solicitud previa y seleccione la ",;
		  "opcion de Reversion." }

PutHelp ("SA185ESTOR", aHlpP, aHlpE, aHlpS, .F.)

RestArea(aAreaAnt)
Return lRet

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁPrograma  ЁMenuDef   Ё Autor Ё Fabio Alves Silva     Ё Data Ё04/10/2006Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Utilizacao de menu Funcional                               Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁArray com opcoes da rotina.                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁParametros do array a Rotina:                               Ё╠╠
╠╠Ё          Ё1. Nome a aparecer no cabecalho                             Ё╠╠
╠╠Ё          Ё2. Nome da Rotina associada                                 Ё╠╠
╠╠Ё          Ё3. Reservado                                                Ё╠╠
╠╠Ё          Ё4. Tipo de Transa┤└o a ser efetuada:                        Ё╠╠
╠╠Ё          Ё	  1 - Pesquisa e Posiciona em um Banco de Dados           Ё╠╠
╠╠Ё          Ё    2 - Simplesmente Mostra os Campos                       Ё╠╠
╠╠Ё          Ё    3 - Inclui registros no Bancos de Dados                 Ё╠╠
╠╠Ё          Ё    4 - Altera o registro corrente                          Ё╠╠
╠╠Ё          Ё    5 - Remove o registro corrente do Banco de Dados        Ё╠╠
╠╠Ё          Ё5. Nivel de acesso                                          Ё╠╠
╠╠Ё          Ё6. Habilita Menu Funcional                                  Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function MenuDef()
Private aRotina := {	{OemToAnsi(STR0001),"AxPesqui"		, 0 , 1,0,.F.},;	//"Pesquisar"
						{OemToAnsi(STR0002),"A240Visual"	, 0 , 2,0,Nil},;	//"Visualizar"
						{OemToAnsi(STR0003),"A240Inclui"	, 0 , 3,0,Nil},;	//"Incluir"
						{OemToAnsi(STR0004),"A240Estorn"	, 0 , 5,0,Nil},;	//"Estornar"
						{OemToAnsi(STR0066),"CTBC662"   	, 0 , 7,0,Nil},;	//"Tracker ContАbil"
						{OemToAnsi(STR0054),"A240Legenda"	, 0 , 2,0,.F.} }	//"Legenda"
If ExistBlock ("MTA240MNU")
	ExecBlock ("MTA240MNU",.F.,.F.)
EndIf
RETURN (aRotina)

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммямммммммммммкммммммммяммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  Ё A240CAT83 ╨Autor   ЁTOTVS 			 ╨ Data Ё  08/09/10   ╨╠╠
╠╠лммммммммммьмммммммммммйммммммммоммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Descricao Ё FunГЦo para Atualizar o Cod.Lanc.CAT83 atravИs do Produto  ╨╠╠
╠╠╨			 Ё ou da TES												  ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠ЁParametrosЁ nLinha = Nro da Linha do aCols						  	  Ё╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠Ё          |															  Ё╠╠
╠╠╨Uso       Ё MATA240                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240CAT83(cProduto)

Local aArea	:= GetArea()
Local cRet	:= ""
Local cCod	:= ""
Local cCodE	:= ""
Local cOP	:= ""
Local cCF	:= ""
Local lInv	:= .F.
Local lValidCat := IsInCallStack("MATA240") .Or. IsInCallStack("MATA241") .Or. IsInCallStack("MATA260") .Or.;
					  IsInCallStack("MATA261") .Or. IsInCallStack("MATA250") .Or. IsInCallStack("MATA340") .Or.;
		            IsInCallStack("PCAT83_SD3") .Or. IsInCallStack("MATA242")
Default cProduto :=" "

#IFDEF TOP
If V240CAT83() .And. FindFunction("FSCODCAT83")
	//здддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Alimenta as Variaveis                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддды
	If	lValidCat
	
		cCod	:= SD3->D3_COD
		cOP		:= SD3->D3_OP
		cCF		:= SD3->D3_CF
		lInv	:= Alltrim(SD3->D3_DOC) == "INVENT"
	EndIf

	If Empty(cOP)
		//здддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Movimentos Internos - Sem OP                   Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддды
		
		//EspaГos em branco adicionados para corresponder ao tamanho do campo de hipotese
		If lInv
			If "RE" $ cCF
				cRet := FSCODCAT83("11 ",cCod)	// HIPOTESE 11 - Acerto Inventario (Saida)
			ElseIf "DE" $ cCF
				cRet := FSCODCAT83("10 ",cCod)	// HIPOTESE 10 - Acerto Inventario (Entrada)
			EndIf
		Else
			If "RE4" == cCF
				cRet := FSCODCAT83("08 ",cCod)	// HIPOTESE 08 - Transferencia entre Produtos (Saida)
			ElseIf "DE4" == cCF
				cRet := FSCODCAT83("09 ",cCod)	// HIPOTESE 09 - Transferencia entre Produtos (Entrada)
			ElseIf "RE7" == cCF
				cRet := FSCODCAT83("12 ",cCod)	// HIPOTESE 12 - RequisiГЦo de produto a ser desmontando (Saida)
			ElseIF "DE7" == cCF
				cRet := FSCODCAT83("13 ",cProduto,cCod)	// HIPOTESE 13 - Apontamento de Desmontagem (Entrada)		
			ElseIf "RE" $ cCF
				cRet := FSCODCAT83("07 ",cCod)	// HIPOTESE 07 - Requisicoes para Consumo Interno
			EndIf
		EndIf
	Else
		cCodE := A240OPPA(cOP)	// Busca o codigo do Produto da OP
		If "PR" $ cCF
			//здддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Movimentos de Producao                         Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддды
			If A240IsPI(cCod)
				cRet := FSCODCAT83("02",cCod)	// HIPOTESE 02 - Prod. Produto Intermediario
			Else
				cRet := FSCODCAT83("01",cCod)	// HIPOTESE 01 - Prod. Produto Acabado
			EndIf
		ElseIf "RE" $ cCF .And. !("E9" $ cCF)
			//здддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Requisicoes de Producao                        Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддды
			If A240IsPI(cCod)
				cRet := FSCODCAT83("04",cCodE,cCod)	// HIPOTESE 04 - Req. de PI para Producao
			Else
				cRet := FSCODCAT83("03",cCodE,cCod)	// HIPOTESE 03 - Req. de Insumo Producao
			EndIf
		ElseIf "DE" $ cCF .And. !("E9" $ cCF)
			//здддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Devolucoes de Producao                         Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддды
			If A240IsPI(cCod)
				cRet := FSCODCAT83("06",cCodE,cCod)	// HIPOTESE 06 - Dev. de PI para Producao
			Else
				cRet := FSCODCAT83("05",cCodE,cCod)	// HIPOTESE 05 - Dev. de Insumo Producao
			EndIf
		EndIf
	EndIf
EndIf
#ENDIF

RestArea(aArea)

Return (cRet)

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё A240IsPI Ё Autor ЁTOTVS 				    Ё Data Ё04/08/2015Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Retorna se um produto e PI (.T.) ou nao (.F.) - CAT83      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё CAT83                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ cProd - Codigo do Produto                                  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function A240IsPI(cProd)

Local lRet		:= .F.
Local cQuery	:= ""
Local aArea		:= GetArea()
Local cAliCOD	:= GetNextAlias()
Local cAliCMP	:= GetNextAlias()

cQuery := "SELECT COUNT(G1_COMP) AS COMP FROM "+RetSQLName("SG1")
cQuery += " WHERE D_E_L_E_T_ = ' ' AND G1_COMP = '"+cProd+"' "
cQuery += "AND G1_FILIAL = '"+xFilial("SG1")+"'"

ChangeQuery(cQuery)
dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliCMP,.T.,.T.)

cQuery := "SELECT COUNT(G1_COD) AS COD FROM "+RetSQLName("SG1")
cQuery += " WHERE D_E_L_E_T_ = ' ' AND G1_COD = '"+cProd+"' "
cQuery += "AND G1_FILIAL = '"+xFilial("SG1")+"'"

ChangeQuery(cQuery)
dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliCOD,.T.,.T.)

//здддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se for COMPONENTE e CODIGO = PI                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддды
If ! Empty((cAliCMP)->(COMP)) .And. ! Empty((cAliCOD)->(COD))
	lRet := .T.
EndIf

(cAliCOD)->(DbCloseArea())
(cAliCMP)->(DbCloseArea())

RestArea(aArea)

Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё A240OPPA Ё Autor ЁTOTVS 				    Ё Data Ё12/08/2015Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Retorna o produto que sera produzido pela OP               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё CAT83                                                      Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function A240OPPA(cOP)

Local aArea := GetArea()
Local cRet	:= ""

dbSelectArea("SC2")
dbSetOrder(1)
If MsSeek(xFilial("SC2")+cOP)
	cRet := SC2->C2_PRODUTO
EndIf

RestArea(aArea)

Return cRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё V240CAT83Ё Autor ЁTOTVS 				    Ё Data Ё13/09/2010Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Retorna se a CAT83 esta ativa ou nao                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё CAT83                                                      Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function V240CAT83()
Local lRet:=.F.

If SuperGetMv("MV_CAT8309",.F.,.F.)
	If SD3->(FieldPos("D3_CODLAN"))>0
		lRet:=.T.
	EndIf
EndIf
Return (lRet)

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё A240NGUIA  Ё Autor Ё Julio Cesar Guerato Ё Data Ё 18.10.11 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠╨Desc.     Ё Numeracao da Guia de Abate   							  ╨╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠╨ParametrosЁ cTm    = Codigo do Movimento	   							  ╨╠╠
╠╠╨			 Ё lGrava = .F. = Nao grava e retorna o numero da guia		  ╨╠╠
╠╠╨			 Ё 			.T. = Grava e retorno o numero da guia 			  ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MATA240,MATA241                                            ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A240NGUIA(cTm, lGrava)
Local cNumGuia := ""
Local lFim	   := .F.

If cPaisLoc=="PTG"
	dbSelectArea("SF5")
	If dbSeek(xFilial()+cTm)
		If !Eof() .And. SF5->F5_PERDA$"OB|EX"
			DbSelectArea('SX6')
			If GetMV('MV_ABATEST', .T.)
    			If lGrava
					Do While !lFim
						If MSRLock(Recno())
							cNumGuia := Right(Alltrim(X6_CONTEUD),8)
							PutMV("MV_ABATEST",Soma1(cNumGuia))
							MsRUnlock(Recno())
							lFim := .T.
						Endif
					EndDo
				Else
					cNumGuia := Right(Alltrim(X6_CONTEUD),8)
				EndIf
			EndIf
		EndIf
	EndIf
EndIf

Return cNumGuia

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁIntegDef  ╨Autor  ЁMicrosiga           ╨ Data Ё  11/07/12   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Funcao de tratamento para o recebimento/envio de mensagem  ╨╠╠
╠╠╨          Ё unica de grupo de produtos.                                ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MATA240                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function IntegDef(cXML,nTypeTrans,cTypeMessage)
Return MATI240(cXml,nTypeTrans,cTypeMessage)

///-------------------------------------------------------------------
/*/{Protheus.doc} A240Commit()
OperaГУes realizadas dentro da transaГЦo do MATA240
@author Leonardo Quintania
@since 04/05/2015
@version 1.0
@return NIL
/*/
//-------------------------------------------------------------------
Function A240Commit()
Local aCMNF     := {0,0,0,0,0}
Local nPosIdDCF := 0
Local nPosNumSeq:= 0
Local lMATA240  := FwIsInCallStack("MATA241") .Or. FwIsInCallStack("MATA240")
Local lWmsNew   := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local lWmsSD3   := Iif(Type('lExecWms')=='L', lExecWms, .F.)
Local aItenSD3  := {}
Local cAproPri  := "0"
Local cQuery    := ""

Local lCpoUser   := ExistBlock('CPOSDH1')
Local aCpoUser   := {}
Local aCpoAuxUsr := {}
Local nPosAux    := 0
Local nY         := 0

If l240Auto .And. lWmsSD3 // Tratamento para gravar o mesmo numero de sequencia da tabela espelho DH1 - WMS
	nPosIdDCF  := aScan(aRotAuto,{|x| AllTrim(x[1]) == "D3_IDDCF"})
	nPosNumSeq := aScan(aRotAuto,{|x| AllTrim(x[1]) == "D3_NUMSEQ"})
	cNumseq := aRotAuto[nPosNumSeq,2]
Else
	cNumseq := ProxNum() //Pega o numero sequencial do movimento
EndIf

If lWMSNew .And. !lWmsSD3 .And. (M->D3_TM > '500') .And. IntWMS(M->D3_COD) .And. !Empty(M->D3_SERVIC)
	#IFDEF TOP
		cQuery := "DELETE FROM " + RetSqlName("SD3") + " WHERE D3_FILIAL='"+xFilial("SD3") +"' AND D3_DOC = '" +M->D3_DOC+ "' AND D3_NUMSEQ = ' '"
		If ( TcSqlExec(cQuery) <> 0 )
			DisarmTransaction()
			UserException( TCSQLError() )
		EndIf
	#ENDIF

	Begin Transaction
		aAdd(aItenSD3,{})
		cCF:= A240GeraCF(cAproPri,M->D3_COD,M->D3_TM,M->D3_OP)
		AADD(aItenSD3[Len(aItenSD3)],xFilial("DH1")) 			//-- D3_FILIAL
		AADD(aItenSD3[Len(aItenSD3)],M->D3_TM )	 				//-- D3_TM
		AADD(aItenSD3[Len(aItenSD3)],M->D3_EMISSAO)				//-- D3_EMISSAO
		AADD(aItenSD3[Len(aItenSD3)],cNumseq) 					//-- D3_NUMSEQ
		AADD(aItenSD3[Len(aItenSD3)],M->D3_COD)					//-- D3_COD
		AADD(aItenSD3[Len(aItenSD3)],M->D3_LOTECTL)				//-- D3_LOTECTL
		AADD(aItenSD3[Len(aItenSD3)],M->D3_LOCAL)				//-- D3_LOCAL
		AADD(aItenSD3[Len(aItenSD3)],M->D3_LOCALIZ)				//-- D3_LOCALIZ
		AADD(aItenSD3[Len(aItenSD3)],M->D3_QUANT)				//-- D3_LOCALIZ
		AADD(aItenSD3[Len(aItenSD3)],M->D3_QTSEGUM)				//-- D3_QTSEGUM
		AADD(aItenSD3[Len(aItenSD3)],M->D3_TRT)					//-- D3_TRT
		AADD(aItenSD3[Len(aItenSD3)],M->D3_PROJPMS)				//-- D3_PROJPMS
		AADD(aItenSD3[Len(aItenSD3)],M->D3_TASKPMS)				//-- D3_TASKPMS
		AADD(aItenSD3[Len(aItenSD3)],M->D3_CLVL)				//-- D3_CLVL
		aAdd(aItenSD3[Len(aItenSD3)],M->D3_SERVIC)				//-- D3_SERVIC
		AADD(aItenSD3[Len(aItenSD3)],M->D3_CC)					//-- D3_CC
		AADD(aItenSD3[Len(aItenSD3)],M->D3_CONTA)				//-- D3_CONTA
		AADD(aItenSD3[Len(aItenSD3)],M->D3_ITEMCTA)				//-- D3_ITEMCTA
		AADD(aItenSD3[Len(aItenSD3)],M->D3_STATUS)				//-- D3_STATUS
		AADD(aItenSD3[Len(aItenSD3)],M->D3_OP)					//-- D3_OP
		If SD3->(FieldPos("D3_NUMSA")) > 0
			AADD(aItenSD3[Len(aItenSD3)],M->D3_NUMSA)			//-- D3_NUMSA
		Else
			AADD(aItenSD3[Len(aItenSD3)],""			)			//-- D3_NUMSA
		EndIf
		If SD3->(FieldPos("D3_ITEMSA")) > 0
			AADD(aItenSD3[Len(aItenSD3)],M->D3_ITEMSA)			//-- D3_ITEMSA
		Else
			AADD(aItenSD3[Len(aItenSD3)],""				)		//-- D3_ITEMSA
		EndIf
		AADD(aItenSD3[Len(aItenSD3)],M->D3_DOC)					//-- D3_DOC
		AADD(aItenSD3[Len(aItenSD3)],cCF)							//-- D3_CF
		AADD(aItenSD3[Len(aItenSD3)],M->D3_NUMLOTE)				//-- D3_NUMLOTE
		AADD(aItenSD3[Len(aItenSD3)],M->D3_NUMSERI)				//-- D3_NUMSERI

		AADD(aItenSD3[Len(aItenSD3)], M->D3_CUSTO1) //D3_CUSTO1
		AADD(aItenSD3[Len(aItenSD3)], M->D3_CUSTO2)	//D3_CUSTO2
		AADD(aItenSD3[Len(aItenSD3)], M->D3_CUSTO3)	//D3_CUSTO3
		AADD(aItenSD3[Len(aItenSD3)], M->D3_CUSTO4)	//D3_CUSTO4
		AADD(aItenSD3[Len(aItenSD3)], M->D3_CUSTO5)	//D3_CUSTO5
		AADD(aItenSD3[Len(aItenSD3)], M->D3_DTVALID)//D3_DTVALID
		AADD(aItenSD3[Len(aItenSD3)], M->D3_POTENCI)//D3_POTENCI

		If lCpoUser
			aCpoUser := ExecBlock('CPOSDH1',.F.,.F.,{"MATA240"})
			If ValType(aCpoUser) == 'A'
				aADD(aCpoAuxUsr,{})
				nPosAux := Len(aCpoAuxUsr)
				For nY := 1 To Len(aCpoUser)
					aADD(aCpoAuxUsr[nPosAux],{aCpoUser[nY,1],aCpoUser[nY,2]})
				Next nY
			EndIf
		EndIf

		EspDH1Wms(aItenSD3,"MATA240",cA240End,,,aCpoAuxUsr)
		ADEL(aItenSD3[1],1)
		ASIZE(aItenSD3[1],1)
		aItenSD3[1] := {}
	End Transaction

Else
	//Verifica se a rotina И mata240 ou mata241
	If lMATA240 .And. SF5->(MsSeek(xFilial("SF5")+SD3->D3_TM))
		If SF5->(FieldPos("F5_GERAATF"))> 0 .And. SF4->(MsSeek(xFilial("SF4")+SF5->F5_TEATF))
			If FindFunction("A241AvalATF") .And. SF5->F5_GERAATF == "1"
				aCMNF := {0,0,0,0,0}
				A241AvalATF(SF4->F4_BENSATF == "1",SF4->F4_COMPONE == "1",,cNumseq,@aCMNF) //Gera Ativo
			EndIf
		EndIf
	EndIf

	A240Atu(,,.T.,cNumseq,aCMNF)

	If l240Auto .And. lWmsSD3
		If nPosIdDCF > 0
			RecLock("SD3", .F.)
			SD3->D3_IDDCF:= aRotAuto[nPosIdDCF,2]
			MsUnLock()
		EndIf
	EndIf
EndIf

Return NIL

//-------------------------------------------------------------------
/*/{Protheus.doc} A240GeraCF()
FunГЦo componentizada que gera codigo CF
@author Leonardo Quintania
@since 04/05/2015
@version 1.0
@return NIL
/*/
//-------------------------------------------------------------------
Function A240GeraCF(cAproPri,cProduto,cTM,cOP)
Local cCF			:= ""
Local lCusAtivo   := .F.
Local lGerAtivo

SB1->(MsSeek(xFilial("SB1")+cProduto))
If SF5->(MsSeek(xFilial("SF5")+cTM))
	lCusAtivo := SF5->(ColumnPos("F5_CUSTATF")) > 0 .And. SF5->F5_CUSTATF == "1"
	lGerAtivo := SF5->(ColumnPos("F5_GERAATF"))>  0 .And. SF5->F5_GERAATF == "1"
EndIf

If cAproPri == "0" .And. (SB1->B1_APROPRI == "I" .And. Empty(cOP)) .And. SF5->F5_APROPR != "S"
	cApropri := "3"
Else
	cApropri := "0"
EndIf

If lGerAtivo .And. !lCusAtivo
	cApropri := "6"
ElseIf lCusAtivo  .And. lGerAtivo
	cApropri := "0"
EndIf
//-- Verifica o tipo do movimento e o custeio da OP
If cAproPri == "0" .And. !Empty(cOP) .And. !MAvalCusOP(cProduto,SF5->F5_CODIGO)
	cAproPri := "9"
EndIf

If cApropri == "0" .And. SF5->F5_VAL == "S"
	cApropri := "6"
EndIf

//-- Grava a classe do movimento RE0,RE3,DE0 ou DE3
If cTM <= "500"
	cCF:= "DE"+cApropri
Else
	cCF:= "RE"+cApropri
EndIf

Return cCF

//-------------------------------------------------------------------
// Solicita endereГo integraГЦo WMS
//-------------------------------------------------------------------
Function A240Ender(cLocal,cProduto,nQuant,cNumSeq,cTm,aEndereco)
Local lPergWMS  := .F.
Local lRet      := .T.
Local nPosEnd   := 0
Local lWmsNew   := SuperGetMV("MV_WMSNEW",.F.,.F.)

Default aEndereco := {}
	If (If(l241,!l241Auto .And. lPergWMS,If(l240,!l240Auto .And. lPergWMS,lPergWMS)))
		cA240End := CriaVar('DB_LOCALIZ')
	EndIf
	//-- Permite a informacao do Endereco e da Estrutura de Origem via Ponto de Entrada
	If ExistBlock('A240WMSO')
		aRetPE := ExecBlock('A240WMSO', Nil, Nil, {cProduto, nQuant, cNumSeq})
		If Len(aRetPE) > 0
			lPergWMS := .F.
			cA240End := aRetPE[1]
		EndIf
	EndIf
	If Empty(cA240End) .And. IntWMS(cProduto)
		If !Empty(aEndereco) .And. (nPosEnd := Ascan (aEndereco,{ |x| x[1]+x[2] == cLocal+cProduto})) > 0
			cA240End := aEndereco[nPosEnd,3]
			lPergWMS := .F.
		EndIf
		If Empty(cA240End) .And. SB5->(FieldPos('B5_ENDREQ')) > 0
			dbSelectArea("SB5")
			dbSetOrder(1)
			If dbSeek(xFilial("SB5")+cProduto)
				If cTm > '500'
					cA240End := SB5->B5_ENDREQ
				Else
					cA240End := SB5->B5_ENDDEV
				EndIf
			EndIf
			lPergWMS := .T.
		EndIf
	EndIf
	//-- Solicita indicaГЦo ou confirmaГЦo do endereГo para o WMS
	If (If(l241,!l241Auto .And. lPergWMS,If(l240,!l240Auto .And. lPergWMS,lPergWMS)))
		DLPergEnd(@cA240End,.T./*lSuggest*/,Iif(lWmsNew,.T.,.F.)/*lForce*/,Iif(cTm >'500','2','1'),cLocal)
		AAdd(aEndereco,{cLocal,cProduto,cA240End})
	EndIf
Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} IsProdCoPR()
Avalia se um produto И coproduto/subproduto (item negativo) em uma
ordem de producao
@author AndrИ Anjos
@since 14/09/2018
@version 1.0
@return (.T.) para sim, (.F.) para nЦo
/*/
//-------------------------------------------------------------------
Function IsProdCoPR(cProd,cOP,cTRT)
Local lRet		:= .F.
Local lNegEstr	:= SuperGetMV("MV_NEGESTR",.F.,.F.)
Local aSD4Area	:= SD4->(GetArea())
Local lUsaTRT	:= cTRT # NIL

If lNegEstr
	SD4->(dbSetOrder(1))
	SD4->(MsSeek(xFilial("SD4")+cProd+cOP+If(lUsaTRT,cTRT,"")))
	While !SD4->(EOF()) .And. SD4->(D4_FILIAL+D4_COD+D4_OP+If(lUsaTRT,D4_TRT,"")) ==;
	 								xFilial("SD4")+cProd+cOP+If(lUsaTRT,cTRT,"")
		If SD4->D4_QTDEORI < 0
			lRet := .T.
			Exit
		EndIf
		
		SD4->(dbSkip())
	End
	
	SD4->(RestArea(aSD4Area))
EndIf

Return lRet



