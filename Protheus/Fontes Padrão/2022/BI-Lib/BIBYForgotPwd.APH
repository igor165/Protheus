<%
#include "biportalby.ch"                  
%>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
    <head>
        <title><%=httpSession->Title%></title>
        <link href="./style.css" type="text/css" rel="stylesheet">
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
	</head>
	
    <body class="background" onLoad="document.form1.username.focus();restoreCookies();">
		<form name="form1" action="recPassword.apw" method="post" onSubmit="saveCookies();">	
			<div class="centralContainer" >
				<div class="suport">
					<img src='.\bi_byyouimages\interrogacao.png' style='margin-top: 8px; margin-left: 17px'>
					<br />
					<a href="http://www.totvs.com/suporte/microsiga" target="_blank" style='color: #00749D; font-weight: bold; text-decoration: none; margin-left: 10px;'><%=STR0021%></a> <!-- SUPORTE -->	
				</div>
				<div class="centralContainer containerLogin">
					<div class="subcontainer">
						<div class="imgTotvs"></div>
					</div>	
					<label class="containerLogin greeting"><%=STR0017%></label>
					<div class="containerLogin userlogin">
						<label class="textlogin"><%=STR0013%></label>
						<input id="txtNome" name="username" class="inputlogin" type="text" maxlength="26" />
					</div>
					<div class="containerLogin pwdlogin">
  					    <label class="textlogin" style="margin-left: 9px;"><%=STR0018%></label>
						<input class="inputlogin" id="txtEmail" name="email" type="text" style="margin-left: 9px;" />
					</div>
					<div class="containerLogin buttonlogin">
						 <input name="Submit" unselectable="on" type="button" class="btnlogin"  value="<%=STR0016%>" onClick="document.form1.submit()" >
					  	 <input type="hidden" name="login" value="true">
					</div>
				</div>
			</div>    
		</form>
	</body>
</html>


<SCRIPT LANGUAGE="JavaScript"> 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Chama Saiba Mais (BIBYLearnMore)												   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	function ChaLearnMore() {
	   window.open( "h_BIBYLearnMore.apw", "PopGuia", "width=920, height=765, left=80, top=50, scrollbars=0" );	
	}

	function restoreCookies() {
		 if(getCookie("USERNAME")) 
			document.form1.username.value = ""+getCookie("USERNAME"); 
		 if(getCookie("RADIO")) 
			document.form1.radiobutton[parseInt(""+getCookie("RADIO"))].checked = true; 
		 } 
	
	function saveCookies() { 
		var checkedButton = ""; 
		for(var i=0; i<document.form1.radiobutton.length; i++) { 
			if(document.form1.radiobutton[i].checked) { 
				checkedButton=""+i; 
			} 
		}	 
		setCookie("USERNAME", document.form1.username.value); 
		setCookie("RADIO", checkedButton); 
	} 
	
	//name - name of the cookie 
	//value - value of the cookie 
	//[expires] - expiration date of the cookie (defaults to end of current session) 
	//[path] - path for which the cookie is valid (defaults to path of calling document) 
	//[domain] - domain for which the cookie is valid (defaults to domain of calling document) 
	//[secure] - Boolean value indicating if the cookie transmission requires a secure transmission 
	//* an argument defaults when it is assigned null as a placeholder 
	//* a null placeholder is not required for trailing omitted arguments 
	function setCookie(name, value, expires, path, domain, secure) { 
		var curCookie = name + "=" + escape(value) + 
		((expires) ? "; expires=" + expires.toGMTString() : "") + 
		((path) ? "; path=" + path : "") + 
		((domain) ? "; domain=" + domain : "") + 
		((secure) ? "; secure" : ""); 
		document.cookie = curCookie; 
	} 
	
	// name - name of the desired cookie 
	// * return string containing value of specified cookie or null if cookie does not exist 
	function getCookie(name) { 
		var dc = document.cookie; 
		var prefix = name + "="; 
		var begin = dc.indexOf("; " + prefix); 
		if (begin == -1) { 
			begin = dc.indexOf(prefix); 
				if (begin != 0) return null; 
		} else 
			begin += 2; 
		var end = document.cookie.indexOf(";", begin); 
		if (end == -1) 
		end = dc.length; 
		return unescape(dc.substring(begin + prefix.length, end)); 
	} 
	
	// name - name of the cookie 
	// [path] - path of the cookie (must be same as path used to create cookie) 
	// [domain] - domain of the cookie (must be same as domain used to create cookie) 
	// * path and domain default if assigned null or omitted if no explicit argument proceeds 
	function deleteCookie(name, path, domain) { 
		if (getCookie(name)) { 
			document.cookie = name + "=" +  
			((path) ? "; path=" + path : "") + 
			((domain) ? "; domain=" + domain : "")+"; expires=Thu, 01-Jan-70 00:00:01 GMT"; 
		} 
	} 
	
	// date - any instance of the Date object 
	// * hand all instances of the Date object to this function for "repairs" 
	function fixDate(date) { 
		var base = new Date(0); 
		var skew = base.getTime(); 
		if (skew > 0) 
			date.setTime(date.getTime() - skew); 
	} 
 </SCRIPT> 