#INCLUDE "MATA350.CH"
#INCLUDE "PROTHEUS.CH"

#DEFINE _ENTER CHR(13)+CHR(10)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATA350  ³ Autor ³ Eveli Morasco         ³ Data ³ 17/03/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Faz a transferencia dos saldos atuais para saldos finais   ³±±
±±³          ³ do periodo. Ele deve ser utilizado apenas pelos usuarios   ³±±
±±³          ³ que trabalham com o custo medio ON-LINE                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Marcelo Pim.³15/01/98³xxxxxx³ Controle de Saldos em unidade de medida. ³±±
±±³Rodrigo Sart³20/07/99³22963a³ Acerto na gravacao ref 2a Unidade Medida ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MATA350(lBat, aFilList, lOnbord, oJour, cUserNameJ)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa variaveis                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local oDlg
Local oTNewProc
Local cTexto    := ""
Local bProcess  := { |oself|MA350Exec(oSelf) }
Local lUsaNewPrc := UsaNewPrc()
Local lSchedule := FWGetRunSchedule()
Local aSM0      := {}
Local nSM0      := 0
Local oObj      := Nil
Local aPergunte := {}
LOCAL lEnviron:= FindFunction("ACVERVLD")
	
Default aFilList:= {}
Default lBat := If(lBat == NIL, .F., lBat)
Default lOnbord := .F.
Default cUserNameJ:= " "
Private lJourney
Private oJourneyLog
Private cFilStart := cFilAnt

If lSchedule
	lBat := .T.
	oObj := FWSX1Util():New()
	oObj:AddGroup("MTA350")
	oObj:SearchGroup()
	aPergunte := oObj:GetGroup("MTA350")

	If !Empty(aPergunte[2]) //Existe MTA350 na base de dados
		If MV_PAR01 == 2 //Todas as filiais
			aSM0 := FWLoadSM0(.T.,,.T.)
			For nSM0 := 1 To Len(aSM0)
				If aSM0[nSM0, 1] == cEmpAnt .And. aSM0[nSM0, 3] == FWCompany()
					AAdd(aFilList, {.T., aSM0[nSM0, 2]})
				EndIf
			Next nSM0
		Else //Filial atual
			aFilList := {{.T., cFilAnt}} 
		EndIf
	Else //Pergunte não existe
		aFilList := {{.T., cFilAnt}}
	EndIf
EndIf

lJourney := lOnbord
if lEnviron
	If !lJourney
		oJourneyLog := acJourneyLog():New()	
	Else
		oJourneyLog := oJour
		iIf (Empty(cUserName), cUserName:= cUserNameJ, cUserName)
	EndIf
	oJourneyLog:envValid(lJourney)
else	
	Help(" ",1,"NOTATU",,STR0025,02,01)
	Return Nil
EndIf 


// mesma funcionalidade do proclogini
oJourneyLog:logIni()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa o log de processamento   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If  oJourneyLog:nCondition == 1
	oJourneyLog:idMovD3X()
	oJourneyLog:setThreadId( Strzero(ThreadID(),15))
elseIF oJourneyLog:nCondition == 4 .or. oJourneyLog:nCondition == 2 
	oJourneyLog:idMovCV8()
EndIF 
If lJourney
	M350PrcLog("INIJOB", STR0026) // Inicio do job de saldo atual para final
EndIf

TCInternal(5,"*OFF")   // Desliga Refresh no Lock do Top
If !lBat
	If lUsaNewPrc
		cTexto := OemToAnsi(STR0002) +_ENTER        //"O objetivo deste programa ‚ de transferir os saldos atuais em estoque para saldos finais do per¡odo."
		cTexto += OemToAnsi(STR0014) +_ENTER        //"Ela deve ser executada ap¢s todas as movimenta‡”es do mˆs estarem digitadas e conferidas, "
		cTexto += OemToAnsi(STR0015) +_ENTER        //"antes que as movimenta‡”es do mˆs seguinte come‡em a ser digitadas. Esta rotina dever  ser "
		cTexto += OemToAnsi(STR0016) +_ENTER        //"utilizada apenas por usu rios que trabalhem com o custo m‚dio ON-LINE ,caso contr rio  "
		cTexto += OemToAnsi(STR0017) +_ENTER+_ENTER //"vocˆ dever  rodar o Rec lculo do Custo M‚dio. "
		cTexto += OemToAnsi(STR0006) +_ENTER        //"Antes de continuar certifique-se de que n„o h  nenhum outro usu rio atualizando os arquivos de"
		cTexto += OemToAnsi(STR0007)                //"movimenta‡„o de estoque."
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Sintaxe da tNewProcess():New( cFunction, cTitle, bProcess, cDescription, cPerg, aInfoCustom ) |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oTNewProc := tNewProcess():New( "MATA350",OemToAnsi(STR0001),bProcess,cTexto,"") //"Rec lculo dos Saldos"
	Else
		DEFINE MSDIALOG oDlg FROM  96,   9 TO 342,592 TITLE OemToAnsi(STR0001) PIXEL  //"Rec lculo dos Saldos"
		@ 13, 6 TO 84, 287 LABEL "" OF oDlg  PIXEL
		@ 24, 15 SAY OemToAnsi(STR0002) SIZE 268, 8 OF oDlg PIXEL   //"O objetivo deste programa ‚ de transferir os saldos atuais em estoque para saldos finais do per¡odo."
		@ 33, 15 SAY OemToAnsi(STR0003) SIZE 268, 8 OF oDlg PIXEL   //"Ela deve ser executada ap¢s todas as movimenta‡”es do mˆs estarem digitadas e conferidas, antes que as"
		@ 43, 15 SAY OemToAnsi(STR0004) SIZE 268, 8 OF oDlg PIXEL   //"movimenta‡”es do mˆs seguinte come‡em a ser digitadas. Esta rotina dever  ser utilizada apenas por usu rios"
		@ 53, 15 SAY OemToAnsi(STR0005) SIZE 268, 8 OF oDlg PIXEL   //"que trabalhem com o custo m‚dio ON-LINE ,caso contr rio vocˆ dever  rodar o Rec lculo do Custo M‚dio."
		@ 63, 15 SAY OemToAnsi(STR0006) SIZE 268, 8 OF oDlg PIXEL   //"Antes de continuar certifique-se de que n„o h  nenhum outro usu rio atualizando os arquivos de"
		@ 73, 15 SAY OemToAnsi(STR0007) SIZE 268, 8 OF oDlg PIXEL   //"movimenta‡„o de estoque."
		DEFINE SBUTTON FROM 107, 224 TYPE 1 ACTION (oDlg:End(),MA350Exec()) ENABLE OF oDlg
		DEFINE SBUTTON FROM 107, 251 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg
		ACTIVATE MSDIALOG oDlg
	EndIf
else
	MA350Exec(,lBat, aFilList)
EndIf

Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MA350Exec   ³ Autor ³ Felipe Nunes de Toledo³ Data ³15/12/07³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Inicializa processamento dos saldos atuais para saldos     ³±±
±±³          ³ finais do periodo.                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³oTNewProc = Objeto tNewProcess()                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA350                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MA350Exec(oTNewProc,lBat, aFilList)

	If !lBat
		A710GrvTm(oTNewProc, STR0021) //"Inicio Processamento"
		M350PrcLog("INICIO") //"Inicio Processamento"
		M350PrcLog("AMBIENTE")
		If (oTNewProc<>Nil)
			MA350Process(oTNewProc:lEnd,oTNewProc)
		Else
			Processa({|lEnd| MA350Process(@lEnd)},STR0008,OemToAnsi(STR0009),.F.)   //"Transferˆncia de Saldos"###"Transferindo Saldos..."
		EndIf
		M350PrcLog("FIM") //"Fim Processamento"
		A710GrvTm(oTNewProc, STR0022) //"Fim Processamento"
	Else
		M350PrcLog("INICIO") //"Inicio Processamento"
		M350PrcLog("AMBIENTE")
		MA350Process(.F.,,lBat, aFilList)
		
		If lJourney 
			M350Analysis(aFilList)
		Endif

		M350PrcLog("FIM") //"Fim Processamento"

		If Valtype(oJourneyLog) == 'O'
			If lJourney 
				oJourneyLog:updateD3YPositi('MATA350')
				oJourneyLog:attStatus('FINISHED', .F.)
			Endif
			oJourneyLog:Destroy()
			FreeObj(oJourneyLog)
		Endif

	EndIF
Return
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATA350     ³ Autor ³ Rogerio F. Guimarae³ Data ³ 27.08.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ A Rotina padrao foi renomeada para xMA350Process p/ os ca- ³±±
±±³          ³ sos que utilizam banco de dados disparem uma Stored Proce- ³±±
±±³          ³ dure CalcEst.SQL. Se a procedure nao existir a rotina pa-  ³±±
±±³          ³ drao xMA350Process sera executada.                         ³±±
±±³          ³ Motivo basico da alteracao e a Otimizacao e Performance    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Transfere saldos atuais para saldos finais do periodo.     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³lEnd      = Indica se processamento devera abortar (logico) ³±±
±±³          ³oTNewProc = Objeto tNewProcess()                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA350                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MA350Process(lEnd,oTNewProc,lBat,aFilList)

Local cProcNam   := GetSPName("MAT026","21")
Local nForFilial := 0
Local aProcsOk   := {}

Private aFilsCalc  := {}
If lBat
	aFilsCalc := MatFilCalc(.F., aFilList,,,,,,lJourney)
Else
	aFilsCalc := MatFilCalc(.T.)
EndIf

If lJourney .And. oJourneyLog:processHasStarted(oJourneyLog:cIdParent, oJourneyLog:cIdChild, 'MATA350')
	oJourneyLog:attStatus('PROCESSING', .T.)
Endif

If ExistProc( cProcNam , VerIDProc() )

 	aResult  := {}
    M350PrcLog("MENSAGEM",OemToAnsi(I18N("Iniciando processamento Procedure",{cFilAnt})),OemToAnsi(I18N("Iniciando processamento Procedure",{cFilAnt})),'2')
	For nForFilial := 1 To Len( aFilsCalc )

		If aFilsCalc[ nForFilial, 1 ]

			If SM0->( dbSeek( cEmpAnt + aFilsCalc[ nForFilial, 2 ] ) )

				M350PrcLog("MENSAGEM",OemToAnsi(I18N("Transferindo os saldos dos arquivos na Filial : "+ aFilsCalc[ nForFilial, 2 ],{aFilsCalc[ nForFilial, 2 ]})),OemToAnsi(I18N("Iniciando processamento Procedure",{aFilsCalc[ nForFilial, 2 ]})),'3')
				aResult := TCSPExec( xProcedures( cProcnam ),;
									 SM0->M0_CODFIL,;
									 Substr( cUsuario, 7, 8 ),;
									 DTOS( dDataBase ) )

					If Empty(aResult)
						If !lBat
							aAdd(aProcsOk, STR0023 + aFilsCalc[ nForFilial, 2 ]+' - '+STR0010) // 'Erro na chamada do processo'
						EndIf
						M350PrcLog("ERRO",OemToAnsi(I18N(STR0010,{aFilsCalc[ nForFilial, 2 ]})),OemToAnsi(I18N(STR0010,{aFilsCalc[ nForFilial, 2 ]})),'ER')
					ElseIf aResult[1] == "0"
						If !lBat
							aAdd(aProcsOk, STR0023 + aFilsCalc[ nForFilial, 2 ]+' - '+STR0011)  //'Atualização com Erro'
						endif
						M350PrcLog("ERRO",OemToAnsi(I18N(STR0011,{aFilsCalc[ nForFilial, 2 ]})),OemToAnsi(I18N(STR0011,{aFilsCalc[ nForFilial, 2 ]})),'ER')
					ElseIf aResult[1] == "1"
						If !lBat
							aAdd(aProcsOk, STR0023 + aFilsCalc[ nForFilial, 2 ]+' - '+STR0012)  // Processamento concluído com êxito
						EndIf
						M350PrcLog("MENSAGEM",OemToAnsi(I18N(STR0012, {aFilsCalc[ nForFilial, 2 ]})),OemToAnsi(I18N(STR0012,{aFilsCalc[ nForFilial, 2 ]})),'4')
					EndIf
			EndIf
		EndIf
		
	Next nForFilial


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Apresenta mensagens relacionas a execucao das procedures.    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len(aProcsOk) > 0 .And. !lBat
		DEFINE MSDIALOG oDlgOcorr TITLE OemToAnsi(STR0024) From 8,05 To 20,65 OF oMainWnd //"Log de processamento da STORED PROCEDURE"
		@ 1,001 LISTBOX oOcorr Fields HEADER Space(63) SIZE 190,70
		oOcorr:SetArray(aProcsOk)
		oOcorr:bLine := { || {aProcsOk[oOcorr:nAT]} }
		DEFINE SBUTTON FROM 18,202 TYPE 1 ACTION oDlgOcorr:End() ENABLE OF oDlgOcorr
		ACTIVATE MSDIALOG oDlgOcorr
	EndIf
	// Função lendo e retornando o que tiver nesse aProcsOk	
Else
	Return xMA350Process(@lEnd,oTNewProc,lBat,aFilList) 
EndIf

Return NIL
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MA350Process³ Autor ³ Rodrigo de A. Sartorio³ Data ³28/11/95³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Transfere saldos atuais para saldos finais do periodo.     ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³lEnd      = Indica se processamento devera abortar (logico) ³±±
±±³          ³oTNewProc = Objeto tNewProcess()                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA350                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function xMA350Process(lEnd,oTNewProc,lBat,aFilList)

Local nV,nX,bBloco:={ |nV,nX| Trim(nV)+STR(nX,1) }
Local nTotRegs  := 0
Local lFatConv  := .F.
Local lFirst	:= .F.

Local cFilBack  := cFilAnt
Local nForFilial:= 0

dbSelectArea("SB2")
nTotRegs += LastRec()
dbSelectArea("SC2")
nTotRegs += LastRec()
dbSelectArea("AF9")
nTotRegs += LastRec()

For nForFilial := 1 To Len( aFilsCalc )

	If aFilsCalc[ nForFilial, 1 ]
	
		cFilAnt := 	aFilsCalc[ nForFilial, 2 ]
		If !lBat
			If (oTNewProc<>Nil)
				oTNewProc:SetRegua1( nTotRegs )
			Else
				ProcRegua(nTotRegs,21,6)
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Transfere os saldos do arquivo de saldos SB2                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SB1")
		dbSetOrder(1)
		dbSelectArea("SB2")
		dbSeek(xFilial())
		While !EOF() .And. B2_FILIAL == xFilial("SB2")
			If !IsProdMod(B2_COD)

				RecLock("SB2",.F.)
				Replace B2_QFIM  WITH B2_QATU
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ So recalcula saldo na 2a UM qdo tiver fator de conversao     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				lFatConv:=SB1->(dbSeek(xFilial("SB1")+SB2->B2_COD)).And.!Empty(SB1->B1_CONV)
				Replace B2_QFIM2 WITH If(lFatConv,ConvUm(B2_COD,B2_QATU,0,2),B2_QTSEGUM)
				For nX := 1 To 5
					Replace &(Eval(bBloco,"B2_VFIM",nX)) WITH &(Eval(bBloco,"B2_VATU",nX))
					If B2_QFIM > 0
		            	If &(Eval(bBloco,"B2_VFIM",nX)) > 0
			               Replace &(Eval(bBloco,"B2_CM",nX)) WITH &(Eval(bBloco,"B2_VFIM",nX)) / B2_QFIM
			            EndIf
			         EndIf
		    	Next nX
		      	MsUnlock()
			EndIf
			dbSkip()
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Movimentacao do Cursor                                       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !lBat
				If (oTNewProc<>Nil)
					oTNewProc:IncRegua1(STR0018) //-- "Transferindo os saldos do arquivo de saldos SB2 ..."
				Else
					IncProc()
				EndIf
			EndIF
			If !lFirst
				M350PrcLog("MENSAGEM",OemToAnsi(I18N(STR0018 + cFilAnt,{cFilAnt})),OemToAnsi(I18N(STR0018,{cFilAnt})),'2')
				lFirst:= .T.
			EndIf

		EndDo
		lFirst:= .F.
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Transfere os saldos das Ordens de Producao SC2               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SC2")
		dbSeek(xFilial())
		While !EOF() .And. C2_FILIAL == xFilial("SC2")
		   RecLock("SC2",.F.)
		   For nX := 1 To 5
		      Replace  &(Eval(bBloco,"C2_VFIM" ,nX))  WITH &(Eval(bBloco,"C2_VATU" ,nX)),;
		         &(Eval(bBloco,"C2_APRFIM",nX)) WITH &(Eval(bBloco,"C2_APRATU",nX))
		   Next nX
		   MsUnlock()
		   dbSkip()
		   //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		   //³ Movimentacao do Cursor                                       ³
		   //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !lBat
				If (oTNewProc<>Nil)
					oTNewProc:IncRegua1(STR0019) //-- "Transferindo os saldos das Ordens de Producao SC2 ..."
				Else
					IncProc()
				EndIf
			EndIF
			If !lFirst
				M350PrcLog("MENSAGEM",OemToAnsi(I18N(STR0019 + cFilAnt,{cFilAnt})),OemToAnsi(I18N(STR0019,{cFilAnt})),'3')
				lFirst:= .T.			
			EndIf
		EndDo
		lFirst:= .F.
		MsUnlockAll()

		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Transfere os saldos das Tarefas SIGAPMS                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("AF9")
		dbSeek(xFilial())
		While !EOF() .And. AF9_FILIAL == xFilial("AF9")
		   RecLock("AF9",.F.)
		   For nX := 1 To 5
		      Replace  &(Eval(bBloco,"AF9_VFIM" ,nX))  WITH &(Eval(bBloco,"AF9_VATU" ,nX))
		   Next nX
		   MsUnlock()
		   dbSkip()
		   //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		   //³ Movimentacao do Cursor                                       ³
		   //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !lBat
				If (oTNewProc<>Nil)
					oTNewProc:IncRegua1(STR0020) //-- Transferindo os saldos das Tarefas SIGAPMS ...
				Else
					IncProc()
				EndIf
			EndIF
			If !lFirst
				M350PrcLog("MENSAGEM",OemToAnsi(I18N(STR0020 + cFilAnt ,{cFilAnt})),OemToAnsi(I18N(STR0020,{cFilAnt})),'4')
				lFirst:= .T.
			EndIf
		EndDo
		lFirst:= .F.	
	EndIf
	
Next nForFilial

cFilAnt := cFilBack
	
MsUnlockAll()

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³VerIDProc ³ Autor ³ Marcelo Pimentel      ³ Data ³24.07.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Identifica a sequencia de controle do fonte ADVPL com a     ³±±
±±³          ³stored procedure, qualquer alteracao que envolva diretamente³±±
±±³          ³a stored procedure a variavel sera incrementada.            ³±±
±±³          ³Procedure MAT026                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/         
Static Function VerIDProc()
Return '001'

/*/{Protheus.doc} SchedDef
	Definição do Schedule MATA350
	@type  Static Function
	@author Gianluca Moreira
	@since 06/12/2021
/*/
Static Function SchedDef()
	Local aParam    := {}
	Local oObj      := FWSX1Util():New()
	Local aPergunte := {}
	oObj:AddGroup("MTA350")
	oObj:SearchGroup()
	aPergunte := oObj:GetGroup("MTA350")

	AAdd(aParam, 'P') //Processo
	If !Empty(aPergunte[2])
		AAdd(aParam, 'MTA350') //Pergunte
	Else
		AAdd(aParam, 'PARAMDEF') //Pergunte
	EndIf
	AAdd(aParam, Nil) //Pergunte (Relatório)
	AAdd(aParam, Nil) //Array de Ordens (Relatório)
	AAdd(aParam, Nil) //Título (Relatório)
Return aParam

/*/{Protheus.doc} EngSPS21Signature
Funcao executada durante a exibicao de informacoes detalhadas do processo na
interface de gestao de procedures.
Faz a execucao da funcao static VerIdProc
@type function
@version 1.0
@author Squad Entradas
@since 12/01/2021
@param cProcesso, character, Codigo do processo
@return character, Retorna a assinatura do processo
/*/
Function EngSPS21Signature(cProcess as character)

	Local cAssinatura as character

	cAssinatura := VerIDProc()

Return cAssinatura

/*/{Protheus.doc} M350PrcLog
	Encapsula chamada da LogProAtu para garantir gravação dos logs na D3X
	que está executando o processo.
	@type  Function
	@author andre.Maximo
	@since 04/09/2020
	@version 1.0
	@param cTipo, caracter, tipo do log a ser gerado
	@param cTexto, caracter, mensagem a ser gravada no log gerado
	@param cDetalhe, caracter, detalhe a ser gravado para o log gerado
/*/
Function M350PrcLog(cTipo,cTexto,cDetalhe, cStatus)

Default cStatus := " " 
oJourneyLog:LogProAtu(cTipo,cTexto,cDetalhe,cFilStart, cStatus,dDataBase,cFilAnt)

Return

Function A350Legacy() 

Return getLegacy()


/*/{Protheus.doc} M350Analisys
	Chama processo de analise apos fim de processamento
	@type  Function
	@author pedro.missaglia
	@since 21/12/2021
	@version 1.0
/*/
Static Function M350Analysis(aFilList)

Local nForFilial 	:= 0
Local aFilsFilter 	:= {}
Local oAnalysis	 := EstAcMiddle('ac.Results.Analysis.Service', 'acResultsAnalysisService():new()')
Local oBranches  := EstAcMiddle('ac.branchesList.Serv', 'acBranchesListServ():New()')
Local oBranchObj := JsonObject():New()
Local oItemObj 	 := JsonObject():New()
Local aFilterAna := {{"FILTER", ''}}

IF Valtype(oAnalysis) == 'O' .and. Valtype(oBranches) == 'O'

	For nForFilial := 1 to Len(aFilList)
		If aFilList[nForFilial,1]
			Aadd(aFilsFilter, aFilList[nForFilial])
		EndIf
	Next nForFilial

	oItemObj["items"] 		:= oBranches:listBranchesinformated(aFilsFilter)
	oBranchObj["branches"] 	:= oItemObj
	oAnalysis:doTheAnalysis(oJourneyLog:cIdParent, .T., .T., 1, 10, aFilterAna, oBranchObj)

	oItemObj 	:= NIL
	oBranchObj  := NIL
	oAnalysis   := NIL
	aFilterAna  := {}
	aFilsFilter := {}

ENDIF

Return
