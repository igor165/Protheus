#INCLUDE "mata320.ch"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWLIBVERSION.CH"

#DEFINE _ENTER CHR(13)+CHR(10)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Array     ³  aProcedure ³ Autor ³ Vicente Sementilli ³ Data ³ 22.07.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ O array aProcedure foi criado para armazenar os nomes de   ³±±
±±³          ³ procedures para evitar a checagem constante de sua existen-³±±
±±³          ³ cia no Banco de Dados                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static aProcedures := {}

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATA320  ³ Autor ³ Eveli Morasco         ³ Data ³ 06/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Calculo do custo de reposicao                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MATA320()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria variaveis do programa                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local oDlg
Local nOpca	   :=0
Local cPerg    := "MTA320"
Local cTexto   := ""
Local bProcess := { |oSelf|MA320Process(.F.,oSelf) }
Local oTProces
Local lUsaNewPrc := UsaNewPrc()

PRIVATE nTotRegs:=0
PRIVATE cTipoTemp	:=SuperGetMV("MV_TPHR")

ProcLogIni( {},"MATA320" )

If !IsBlind()
	If lUsaNewPrc
		cTexto := STR0002 +_ENTER+_ENTER+_ENTER	//"Este programa faz o cálculo do custo de reposiçäo (B1_CUSTD) configurável:  "
		cTexto += STR0003 +_ENTER        		//"1) Pela Moeda Real ou por qualquer das quatro moedas alternativas do sistema, considerando"
		cTexto += STR0004 +_ENTER+_ENTER   		//" uma taxa de referência diária ou mensal.  "
		cTexto += STR0032 +_ENTER        		//"2) Escolher e processar uma vez pelo Último Preço de Compra ou pelo Último Custo de Compra"
		cTexto += STR0033 +_ENTER+_ENTER+_ENTER+_ENTER	//" e processar outra vez pela Estrutura de Montagem, caso trabalhe com estruturas de produtos. "
		cTexto += STR0034 +_ENTER				//"Observação: Os campos do cadastro da TES: F4_UPRC, F4_CREDICM e F4_CREDIPI influenciam "
		cTexto += STR0035                		//"este processamento."
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Sintaxe da tNewProcess():New( cFunction, cTitle, bProcess, cDescription, cPerg, aInfoCustom ) |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oTProces := tNewProcess():New( "MATA320",OemToAnsi(STR0001),bProcess,cTexto,cPerg,,,,,,.T. )	 //"Rec lculo do Custo de Reposi‡„o"
	Else

		DEFINE MSDIALOG oDlg FROM  56,9 TO 310,592 TITLE OemToAnsi(STR0001) PIXEL    //"Rec lculo do Custo de Reposi‡„o"

		pergunte(cPerg,.F.)
		@ 09, 13 TO 103, 280 LABEL "" OF oDlg  PIXEL
		@ 18, 30 SAY STR0002 SIZE 258, 8 OF oDlg PIXEL    //"Este programa faz o cálculo do custo de reposiçäo (B1_CUSTD) configurável:  "
		@ 33, 30 SAY STR0003 SIZE 258, 8 OF oDlg PIXEL    //"1) Pela Moeda Real ou por qualquer das quatro moedas alternativas do sistema, considerando"
		@ 43, 30 SAY STR0004 SIZE 258, 8 OF oDlg PIXEL    //" uma taxa de referência diária ou mensal.  "
		@ 53, 30 SAY STR0032 SIZE 258, 8 OF oDlg PIXEL    //"2) Escolher e processar uma vez pelo Último Preço de Compra ou pelo Último Custo de Compra"
		@ 63, 30 SAY STR0033 SIZE 258, 8 OF oDlg PIXEL    //" e processar outra vez pela Estrutura de Montagem, caso trabalhe com estruturas de produtos. "
		@ 78, 30 SAY STR0034 SIZE 258, 8 OF oDlg PIXEL    //"Observação: Os campos do cadastro da TES: F4_UPRC, F4_CREDICM e F4_CREDIPI influenciam "
		@ 88, 30 SAY STR0035 SIZE 258, 8 OF oDlg PIXEL    //"este processamento."
		DEFINE SBUTTON FROM 110, 196 TYPE 5 ACTION pergunte(cPerg,.T.) ENABLE OF oDlg
		DEFINE SBUTTON FROM 110, 223 TYPE 1 ACTION (oDlg:End(),nOpca:=1) ENABLE OF oDlg
		DEFINE SBUTTON FROM 110, 250 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg
		DEFINE SBUTTON FROM 110, 169 TYPE 15 ACTION ProcLogView() ENABLE OF oDlg
		ACTIVATE MSDIALOG oDlg CENTER
	EndIf
Else
	nOpca := 1
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega as perguntas selecionadas                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ mv_par01 - Escolhe a moeda para atualizacao (1=nenhuma)             		³
//³ mv_par02 - Se deve considerar taxa diaria ou mensal (1/2)           		³
//³ mv_par03 - Calcula custos por: 1 Standard 2 Estrutura               		³
//³ mv_par04 - Se deve ou nao considerar o ultimo preco de compra       		³
//³ mv_par05 - Data final a considerar                                  		|
//³ mv_par06 - Tipo de produto inicial                                  		³
//³ mv_par07 - Tipo de produto final                                    		³
//³ mv_par08 - Grupo de produto inicial                                 		³
//³ mv_par09 - Grupo de produto final                                   		³
//³ mv_par10 - Considera Qtd. Neg.?                                     		³
//| mv_par11 - Avisar divergencia? (Avisar) (Atualizar) (Nao atualizar) 		|
//| mv_par12 - Seleciona Filial? (Sim) (Nao)                            		|
//| mv_par13 - Considera Mao de Obra? (Da Estrutura) (Rot. Operacoes) (Ambos)	|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If (nOpca==1) .And. (oTProces==Nil)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Faz Processamento.                                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !IsBlind()
		Processa({|lEnd| MA320Process(@lEnd)},STR0005,STR0006,.F.) //"Custo de Reposi‡„o"###"Calculando Custo de Reposi‡„o..."
	Else
		BatchProcess(STR0001,STR0002+STR0003+STR0004+STR0032+STR0033+STR0034+STR0035,cPerg,{ || Processa({|lEnd| MA320Process(@lEnd)},STR0005,STR0006,.F.)}) //"Custo de Reposi‡„o"###"Calculando Custo de Reposi‡„o..."
	EndIf
EndIf

Return NIL

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MA320Process³ Autor ³ Rodrigo de A. Sartorio³ Data ³14/12/95³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Processa o Calculo.                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MA320Process(@ExpL1,ExpO1)							      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 = var. p/ controle de interrupcao pelo usuario	      ³±±
±±³          ³ ExpO1 = Objeto tNewProcess()                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA320                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MA320Process(lEnd,oTProces)

If oTProces <> NIL
	oTProces:SaveLog(OemToAnsi(STR0037))
EndIf

If mv_par01 > 1
	dbSelectArea("SB1")
	nTotRegs += RecCount()
EndIf

If IsBlind() .and. mv_par11 == 1 
	Conout (OemToAnsi(STR0041)) //'MATA320 BATCH - Parametro 11 para avisar, porem em batch não existe uma pessoa para responder, foi assumido para não atualizar.'
	mv_par11 := 3
EndIf 

If mv_par03 == 2
	dbSelectArea("SG1")
	nTotRegs += RecCount()
EndIf

If (oTProces<>Nil)
	oTProces:SetRegua1( nTotRegs )
Else
	ProcRegua(nTotRegs,21,6)
EndIf
// Calcula por ult. preco de compra
If mv_par03 == 1
	If mv_par01 == 1 .And. mv_par04 == 2
		Help(" ",1,"A320PREC")
	Else
		MA320CuStd(oTProces)
	EndIf
	// Calcula pela estrutura
ElseIf mv_par03 == 2
	MA320Estru(oTProces)
	// Calcula pelo ultimo custo de NF de compra
ElseIf mv_par03 == 3
	MA320LCust(oTProces)
EndIf

If oTProces <> NIL
	oTProces:SaveLog(OemToAnsi(STR0038))
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ M320FIM - Ponto de Entrada utizado para customizacoes no final do |
//| processamento da rotina de Calculo do custo de Reposicao.         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("M320FIM")
	ExecBlock("M320FIM",.F.,.F.)
EndIf

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MA320CuStd³ Autor ³ Eveli Morasco         ³ Data ³ 09/03/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Atualiza o custo standard (B1_CUSTD) baseado na variacao de³±±
±±³          ³ uma das outras 4 moedas alternativas                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MA320CuStd(ExpO1)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 = Objeto tNewProcess()                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA320                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MA320CuStd(oTProces)
Local dChave,dDt,nCusto
Local lContinua  := .T.

Local aFilsCalc  := {}
Local cFilBack   := cFilAnt
Local nForFilial := 0
Local lM320FilPR := ExistBlock("M320FILPR")
Local lDivergente as Logical
Local lProcessa

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa o log de processamento   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcLogAtu("INICIO")

aFilsCalc := MatFilCalc( mv_par12 == 1 )

For nForFilial := 1 To Len( aFilsCalc )

	If aFilsCalc[ nForFilial, 1 ]

		cFilAnt := aFilsCalc[ nForFilial, 2 ]

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("MENSAGEM",STR0039+cFilAnt,STR0012+cFilAnt) // "Inicio Filial: "

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pega a taxa da moeda obter o indice de reajuste              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SM2")
		If mv_par02 == 1
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se for a taxa diaria ele devera'pegar o dia anterior mais proximo ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dChave := mv_par05
			dbSeek(dChave,.T.)
			If !Found()
				dbSkip(-1)
			EndIf
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se for a taxa mensal ele devera'pegar o dia posterior mais proximo, ³
			//³ pois , a taxa cadastrada devera' ser referente ao primeiro dia util ³
			//³ do mes                                                              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dChave := mv_par05-Day(mv_par05)+1
			dbSeek(dChave,.T.)
		EndIf

		dbSelectArea("SB1")
		dbSeek(xFilial("SB1"))
		While !EOF() .And. B1_FILIAL == xFilial("SB1")
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de Entrada utizado para customizacoes do filtro 				³
			//³ do Calculo do custo de Reposicao para a Ultimo Preço de Compra.     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lM320FilPR
		 		lContinua := ExecBlock("M320FILPR",.F.,.F.)
			 	If Valtype(lContinua) <> "L"
			   		lContinua := .T.
			   	EndIf
			Else
			   lContinua := .T.
			EndIf

			If lContinua
				If (oTProces<>Nil)
					oTProces:IncRegua1( STR0030 + aFilsCalc[ nForFilial, 2 ] + " - " + aFilsCalc[ nForFilial, 3 ] ) // "Processando Filial:  "
				Else
					IncProc( STR0030 + aFilsCalc[ nForFilial, 2 ] + " - " + aFilsCalc[ nForFilial, 3 ] ) // "Processando Filial:  "
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Filtra os tipos e grupos selecionados                               ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If B1_TIPO  < mv_par06 .Or. B1_TIPO  > mv_par07 .Or.;
						B1_GRUPO < mv_par08 .Or. B1_GRUPO > mv_par09
					dbSkip()
					Loop
				EndIf

				If mv_par04 == 1
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ O programa tenta evitar que o custo std fique com valores muito     ³
					//³ desatualizados ou com valores negativos, ele leva em consideracao   ³
					//³ a maior data e nao o maior custo para prever inflacao e deflacao.   ³
					//³ Porem podemos ter 2 casos em que o custo std e' menor que zero ou   ³
					//³ se a data da ultima compra e' menor que a data de referencia, a     ³
					//³ qual pode ser ou não avaliado pelo usuario.                         ³
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					lDivergente := (RetFldProd(SB1->B1_COD,"B1_CUSTD") < 0 .Or. RetFldProd(SB1->B1_COD,"B1_UCOM") < RetFldProd(SB1->B1_COD,"B1_DATREF"))

					If mv_par11 == 2 // Atualizar
						lProcessa := .T.
					else
						lProcessa := .T.

						If lDivergente // Divergente
							If mv_par11 == 1 // Avisar
								lProcessa := Aviso(STR0017, I18N(STR0018, {Alltrim(SB1->B1_COD), aFilsCalc[ nForFilial, 2 ]}), {STR0020, STR0021},,, 2)==1 //O produto #1[PRO001]# (#2[D MG 01]#)tem data de referência do custo standard maior que a data da última compra ou custo standard negativo. Recalcula este produto ?
							ElseIf mv_par11 == 3 // Nao Atualizar
								lProcessa := .F.
							EndIF
						EndIf

					EndIf

					If lProcessa .and. RetFldProd(SB1->B1_COD,"B1_UPRC") > 0.00
						If RetArqProd(SB1->B1_COD)
							RecLock("SB1",.F.)
							Replace B1_CUSTD   With B1_UPRC
							Replace B1_MCUSTD  With "1"
							Replace B1_UCALSTD With dDatabase
							Replace B1_DATREF  With B1_UCOM
							MsUnLock()
						Else
							RecLock("SBZ",.F.)
							Replace BZ_CUSTD   With BZ_UPRC
							Replace BZ_MCUSTD  With "1"
							Replace BZ_UCALSTD With dDatabase
							Replace BZ_DATREF  With BZ_UCOM
							MsUnLock()
							dbSelectArea("SB1")
						EndIf
						MA320CalcT()
					EndIf
				EndIf
				If mv_par01 > 1   // So' processa se for outras moedas
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³  Nao processa se precos negativos ou se a taxa for mensal e o  ³
					//³  mes do campo E_DATREF for maior ou igual ao mes da variavel   ³
					//³  ARQDATA ou se a taxa for diaria e o campo E_DATREF for maior  ³
					//³  ou igual ao campo ARQDATA                                     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If (RetFldProd(SB1->B1_COD,"B1_CUSTD") <= 0 .And. RetFldProd(SB1->B1_COD,"B1_UPRC") <= 0) .Or.;
						(mv_par01 == 1 .And. RetFldProd(SB1->B1_COD,"B1_DATREF") >= mv_par05) .Or.;
						(mv_par02 == 2 .And. Month(RetFldProd(SB1->B1_COD,"B1_DATREF")) != Month(mv_par05) .And.;
						RetFldProd(SB1->B1_COD,"B1_DATREF") >= mv_par05)
						dbSkip()
						Loop
					EndIf
					dDt    := RetFldProd(SB1->B1_COD,"B1_DATREF")
					nCusto := RetFldProd(SB1->B1_COD,"B1_CUSTD")
					If mv_par04 == 1
						If RetFldProd(SB1->B1_COD,"B1_DATREF") >= RetFldProd(SB1->B1_COD,"B1_UCOM")
							If RetFldProd(SB1->B1_COD,"B1_CUSTD") >= xMoeda(RetFldProd(SB1->B1_COD,"B1_UPRC"),1,If(Empty(RetFldProd(SB1->B1_COD,"B1_MCUSTD")),1,Val(RetFldProd(SB1->B1_COD,"B1_MCUSTD"))),RetFldProd(SB1->B1_COD,"B1_UCOM"))
								nCusto := RetFldProd(SB1->B1_COD,"B1_CUSTD")
							Else
								//-- Se for utilizar o UltPrc como CuStd, converte da 1a Moeda p/a moeda utilizada no CuStd
								nCusto := xMoeda(RetFldProd(SB1->B1_COD,"B1_UPRC"),1,If(Empty(RetFldProd(SB1->B1_COD,"B1_MCUSTD")),1,Val(RetFldProd(SB1->B1_COD,"B1_MCUSTD"))),RetFldProd(SB1->B1_COD,"B1_UCOM"))
							EndIf
						EndIf
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Pega a taxa anterior da moeda para poder calcular reajuste   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					dbSelectArea("SM2")
					If mv_par02 == 1
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Se for a taxa diaria ele devera'pegar o dia anterior mais proximo ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						dChave := dDt
						Set SoftSeek On
						Seek dChave
						Set SoftSeek Off
						If !Found()
							dbSkip(-1)
						Endif
					Else
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Se for a taxa mensal ele devera'pegar o dia posterior mais proximo, ³
						//³ pois , a taxa cadastrada devera' ser referente ao primeiro dia util ³
						//³ do mes                                                              ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						dChave := dDt-Day(dDt)+1
						Set SoftSeek On
						Seek dChave
						Set SoftSeek Off
					EndIf
					If RetArqProd(SB1->B1_COD)
						RecLock("SB1",.F.)
						Replace B1_CUSTD   With nCusto
						Replace B1_UCALSTD With dDatabase
						Replace B1_DATREF  With mv_par05
						MsUnLock()
					Else
						RecLock("SBZ",.F.)
						Replace BZ_CUSTD   With nCusto
						Replace BZ_UCALSTD With dDatabase
						Replace BZ_DATREF  With mv_par05
						MsUnLock()
						dbSelectArea("SB1")
					Endif

					MA320CalcT()
					nCusto := RetFldProd(SB1->B1_COD,"B1_CUSTD")
					nCusto := xMoeda(nCusto,If(Empty(RetFldProd(SB1->B1_COD,"B1_MCUSTD")),1,Val(RetFldProd(SB1->B1_COD,"B1_MCUSTD"))),mv_par01 ,dChave)
					If RetArqProd(SB1->B1_COD)
						RecLock("SB1",.F.)
						Replace B1_CUSTD   With nCusto
						Replace B1_MCUSTD  With Str(mv_par01,1)
						Replace B1_UCALSTD With dDatabase
						MsUnLock()
					Else
						RecLock("SBZ",.F.)
						Replace BZ_CUSTD   With nCusto
						Replace BZ_MCUSTD  With Str(mv_par01,1)
						Replace BZ_UCALSTD With dDatabase
						MsUnLock()
						dbSelectArea("SB1")
					EndIf
				EndIf
			EndIf
			dbSkip()
		EndDo

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("MENSAGEM",STR0040+cFilAnt,STR0013+cFilAnt) //"Final Filial: "

	EndIf

Next nForFilial

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza o log de processamento   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcLogAtu("FIM")

cFilAnt := cFilBack

Return Nil

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MA320Estru³ Autor ³ Eveli Morasco         ³ Data ³ 09/03/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Atualiza o custo standard (B1_CUSTD) dos PA's e PI's basea-³±±
±±³          ³ do na estrutura dos mesmos , pegando o custo  standard  dos³±±
±±³          ³ filhos e o indice tecnico de cada item.                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MA320Estru(ExpO1)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 = Objeto tNewProcess()                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA320                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MA320Estru(oTProces)
Local cCodAnt,nCusto,nCusTot,nQuantItem, nCustUni, cRoteiro
Local cIndSG1 := CriaTrab(NIL,.F.), nIndSG1
Local lQtdNeg

Local aFilsCalc 	:= {}
Local cFilBack  	:= cFilAnt
Local cChavG2 		:= ".F."
Local cTipo    		:= "MA320Estru"
Local nForFilial	:= 0
Local lA320CUSM 	:= ExistBlock('A320CUSM')
Local lA320CUStr	:= ExistBlock("A320CUST")
Local lContinua 	:=.T.
Local lM320Estru	:= ExistBlock('M320ESTRU')
local lPCPREVATU	:= FindFunction('PCPREVATU')
Local nQuantAloc 	:= 0
Local nQuant 		:= 1
Local oSx1			:= FWSX1Util():New()
Local cPerg			:= 'MTA320'
Local nTamCus		:= TamSX3("B1_CUSTD")[2]

oSx1:AddGroup(cPerg)
oSx1:SearchGroup()
oSx1:GetGroup(cPerg)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa o log de processamento   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcLogIni( {},"MATA320" )
ProcLogAtu("INICIO")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se considera ou nao itens negativos na estrutura    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lQtdNeg := mv_par10

aFilsCalc := MatFilCalc( mv_par12 == 1 )

For nForFilial := 1 To Len( aFilsCalc )

	If aFilsCalc[ nForFilial, 1 ]

		cFilAnt := aFilsCalc[ nForFilial, 2 ]

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("MENSAGEM",STR0039+cFilAnt,STR0012+cFilAnt) // "Inicio Filial: "

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Acerta os niveis das estruturas no SG1                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If GetMv("MV_NIVALT") == "S"
			MA320Nivel()
		EndIf

		dbSelectArea("SG1")
		nIndSG1 := RetIndex("SG1")
		IndRegua("SG1",cIndSG1,"G1_FILIAL+G1_NIVINV+G1_COD",,,OemToAnsi(STR0007))   //"Selecionando Registros..."

		dbSeek(A320Filial(.F.))

		While !EOF() .And. G1_FILIAL == A320Filial(.F.)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de Entrada utizado para customizacoes do filtro 				³
			//³ do Calculo do custo de Reposicao para o Custo Standard    		    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lM320Estru
		 		lContinua := ExecBlock("M320ESTRU",.F.,.F.)
			 	If Valtype(lContinua) <> "L"
			   		lContinua := .T.
			   	EndIf
			Else
			   lContinua := .T.
			EndIf

			If lContinua
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Filtra os tipos e grupos selecionados                               ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cCodAnt := G1_COD
				If SB1->(dbSeek(xFilial("SB1")+SG1->G1_COD))

					If SB1->B1_TIPO < mv_par06 .Or. SB1->B1_TIPO > mv_par07 .Or. SB1->B1_GRUPO < mv_par08 .Or. SB1->B1_GRUPO > mv_par09
						dbSkip()
						Loop
					EndIf

					nCusTot := 0
					While !EOF() .And. G1_FILIAL+G1_COD == A320Filial(.F.)+cCodAnt

						If (oTProces<>Nil)
							oTProces:IncRegua1( STR0030 + aFilsCalc[ nForFilial, 2 ] + " - " + aFilsCalc[ nForFilial, 3 ] ) // "Processando Filial:  "
						Else
							IncProc( STR0030 + aFilsCalc[ nForFilial, 2 ] + " - " + aFilsCalc[ nForFilial, 3 ] ) // "Processando Filial:  "
						EndIf
						dbSelectArea("SB1")
						dbSeek(xFilial("SB1")+SG1->G1_COD)

						nQuantItem := ExplEstr(1,,SB1->B1_OPC, IIF(lPCPREVATU , PCPREVATU(SB1->B1_COD), SB1->B1_REVATU) ,,,If(mv_par14==1,.T.,.F.))

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Verifica se considera ou nao itens negativos na estrutura    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lQtdNeg == 2 .and. nQuantItem < 0
							dbSelectArea("SG1")
							dbSkip()
							Loop
						EndIf

						If mv_par13 == 2 .And. IsProdMod(SB1->B1_COD)
							dbSelectArea("SG1")
							dbSkip()
							Loop
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Desconsidera somente itens vencidos , sem opcionais ou fora  ³
						//³ da revisao atual.                                            ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If QtdComp(nQuantItem) != QtdComp(0)
							nCusto  := IIf(lA320CUSM, MA320CusM(SB1->B1_COD), RetFldProd(SB1->B1_COD,"B1_CUSTD"))
							nCusto  := xMoeda(nCusto,val(alltrim(SB1->B1_MCUSTD)),mv_par01, mv_par05)
							nCusTot := nCusTot + (nQuantItem * nCusto)
						EndIf
						dbSelectArea("SG1")
						dbSkip()
					EndDo

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Busca MOD's relacionadas ao roteiro de operacao (SG2)        ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !(mv_par13 == 1)
						SB1->(dbSeek(xFilial("SB1")+cCodAnt))
						If (Len(oSx1:Agrupo[1][2])) > 15
							If !Empty(mv_par16)
								cRoteiro := mv_par16
							ElseIf !Empty(SB1->B1_OPERPAD)
								cRoteiro := SB1->B1_OPERPAD
							EndIf
						Else
							cRoteiro := SB1->B1_OPERPAD
						EndIf
						dbSelectArea("SG2")
						dbSetOrder(1)
						If (Len(oSx1:Agrupo[1][2])) > 15
							dbSeek(xFilial("SG2")+cCodAnt+If(!Empty(cRoteiro),cRoteiro,"01"))
						Else
							If dbSeek(xFilial("SG2")+cCodAnt+If(!Empty(cRoteiro),cRoteiro,""))
								cChavG2 := "SG2->(G2_FILIAL+G2_PRODUTO+G2_CODIGO) == xFilial('SG2')+'" +cCodAnt+SG2->G2_CODIGO +"'"
							EndIf
						EndIf

						While !SG2->(EOF()) .And. Iif(Len(oSx1:Agrupo[1][2]) > 15,xFilial("SG2")+cCodAnt+If(Empty(cRoteiro),"01",cRoteiro) == G2_FILIAL+G2_PRODUTO+G2_CODIGO, &(cChavG2))
							dbSelectArea("SH1")
							dbSetOrder(1)
							If dbSeek(xFilial("SH1")+SG2->G2_RECURSO)
								If SB1->(dbSeek(xFilial("SB1")+PadR("MOD"+SH1->H1_CCUSTO,TamSX3("B1_COD")[1])))
									nCusto  := If(lA320CUSM, MA320CusM(SB1->B1_COD), RetFldProd(SB1->B1_COD,"B1_CUSTD"))
									If (Len(oSx1:Agrupo[1][2]) > 15 .And. mv_par15 <> 1)
										If SG2->G2_TPOPER $ " 1"
											nCustUni := Round((If(Empty(SG2->G2_MAOOBRA),1,SG2->G2_MAOOBRA) * ( If(mv_par15 == 3,A690HoraCt(SG2->G2_SETUP) / IIf( SG2->G2_LOTEPAD == 0, 1, SG2->G2_LOTEPAD ), 0);
														+ IIf( SG2->G2_TEMPAD == 0, 1,A690HoraCt(SG2->G2_TEMPAD)) / IIf( SG2->G2_LOTEPAD == 0, 1, SG2->G2_LOTEPAD ));
														+ If(mv_par15 == 2, A690HoraCt(SG2->G2_SETUP), 0) ),5) * nCusto
											If SH1->H1_MAOOBRA # 0
												nCustUni := Round( nCustUni / SH1->H1_MAOOBRA,5)
											EndIf
											nCustUni := Round(nCustUni, nTamCus)
											nCusTot += nCustUni
										ElseIf SG2->G2_TPOPER $ "4"
											nQuantAloc := nQuant % IIf(SG2->G2_LOTEPAD == 0, 1, SG2->G2_LOTEPAD)
											nQuantAloc := Int(nQuant)+If(nQuantAloc>0,IIf(SG2->G2_LOTEPAD == 0, 1, SG2->G2_LOTEPAD)-nQuantAloc,0)
											nCustUni := Round(nQuantAloc * ( IIf( SG2->G2_TEMPAD == 0, 1,A690HoraCt(SG2->G2_TEMPAD)) / IIf( SG2->G2_LOTEPAD == 0, 1, SG2->G2_LOTEPAD ) ),5) * nCusto
											If SH1->H1_MAOOBRA # 0
												nCustUni := Round( nCustUni / SH1->H1_MAOOBRA,5)
											EndIf
											nCustUni := Round(nCustUni, nTamCus)
											nCusTot += nCustUni
										ElseIf SG2->G2_TPOPER == "2" .Or. SG2->G2_TPOPER == "3"
											nCusTot += IIf( SG2->G2_TEMPAD == 0 , 1 ,A690HoraCt(SG2->G2_TEMPAD) * nCusto)
											nCusTot := Round(nCusTot, nTamCus)
										EndIf
									Else
										nCusTot += If(Empty(SG2->G2_MAOOBRA),1,SG2->G2_MAOOBRA) * IIF( SG2->G2_LOTEPAD > 0,(SG2->G2_TEMPAD/SG2->G2_LOTEPAD),1) * nCusto
									EndIf
								EndIf
							EndIf
							SG2->(dbSkip())
						End
					EndIf

				 	SB1->(dbSeek(xFilial("SB1")+cCodAnt))
					If RetArqProd(SB1->B1_COD)
						RecLock("SB1",.F.)
						Replace B1_CUSTD   With nCusTot
						Replace B1_DATREF  With mv_par05
						Replace B1_MCUSTD  With Str(mv_par01,1)
						Replace B1_UCALSTD With dDataBase
						MsUnLock()
					Else
						RecLock("SBZ",.F.)
						Replace BZ_CUSTD   With nCusTot
						Replace BZ_DATREF  With mv_par05
						Replace BZ_MCUSTD  With Str(mv_par01,1)
						Replace BZ_UCALSTD With dDataBase
						MsUnLock()
						dbSelectArea("SB1")
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Executa Ponto de Entrada                                        ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lA320CUStr
						ExecBlock("A320CUST",.F.,.F.,{cCodAnt,nCusTot,cTipo})
					EndIf
				Else
					While !SG1->(EOF()) .And. SG1->G1_COD == cCodAnt
						SG1->(dbSkip())
					End
				EndIf

			Else
				dbSelectArea("SG1")
				dbSkip()

			EndIf
			dbSelectArea("SG1")

		EndDo

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("MENSAGEM",STR0040+cFilAnt,STR0013+cFilAnt) //"Final Filial: "

	EndIf

Next nForFilial

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza o log de processamento   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcLogAtu("FIM")

cFilAnt := cFilBack

RetIndex("SG1")
Ferase(cIndSG1+OrdBagExt())
dbSetOrder(1)
Return NIL


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MA320CusM ³ Autor ³ Emerson Rony Oliveira ³ Data ³ 08/10/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Executa PE para obter o custo do produto na moeda desejada ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MA320CusM(ExpC1)                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Codigo do produto a se obter o custo               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Numerico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA320                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function MA320CusM(cProduto)
Local nCustoM

nCustoM := ExecBlock('A320CUSM', .F., .F., {cProduto} )
If !(ValType(nCustoM) == 'N')
	nCustoM := 0
EndIf

Return (nCustoM)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MA320Nivel³ Autor ³ Eveli Morasco         ³ Data ³ 25/03/93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Acerta os niveis das estruturas no SG1                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MA320Nivel(ExpL1,ExpL2,ExpL3,ExpC1,ExpL4,ExpL5)	  		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 = se .F. devera' usar Stored Procedure, na MostraProc³±±
±±³          ³ ExpL2 = se recalcula o n¡vel dos produtos                  ³±±
±±³          ³ ExpL3 = se exibe a dialog                    			  ³±±
±±³          ³ ExpC1 = Alias do arquivo                   				  ³±±
±±³          ³ ExpL4 = usa pre-estrutura ou nao             			  ³±±
±±³          ³ ExpL5 = indica se arq. compartilhado		 				  ³±±
±±³          ³ ExpC2 = filial onde é processada a thread do recalculo	  ³±±
±±³          ³ 			(será utilizada para seek na temp SG1)			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T. / .F.								                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA320/MATA330                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MA320Nivel(lClient,lCalcNivel,lMostraDlg,cArqTrb,lPreEstru,lCompartilhado,cFil330)
Local oDlg

Local nOpca := 0

Local cTitulo:=""
Local cLinha1:=""
Local cLinha2:=""
Local cLinha3:=""
Local cLinha4:=OemToAnsi(STR0012)
Local cLinha5:=OemToAnsi(STR0013)
Local cLinha6:=""

Default cArqTrb       :=""
Default lPreEstru     :=.F.
Default lCompartilhado:=.F.
Default cFil330		  := cFilAnt

PRIVATE lNivelOk := .T.

lClient := IIF(lClient==Nil,.f.,lClient)

cTitulo:=IF(lPreEstru,OemToAnsi(STR0022),OemToAnsi(STR0008))
cLinha1:=IF(lPreEstru,OemToAnsi(STR0023),OemToAnsi(STR0009))
cLinha2:=IF(lPreEstru,OemToAnsi(STR0024),OemToAnsi(STR0010))
cLinha3:=IF(lPreEstru,OemToAnsi(STR0025),OemToAnsi(STR0011))
cLinha6:=IF(lPreEstru,OemToAnsi(STR0026),OemToAnsi(STR0014))

lMostraDlg:= IIF(Valtype(lMostraDlg) == "L",lMostraDlg,.T.)
lCalcNivel:= IIF(Valtype(lCalcNivel) == "L",lCalcNivel,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Desenha a tela do programa                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lMostraDlg
	DEFINE MSDIALOG oDlg FROM  90,78 TO 385,490 TITLE cTitulo PIXEL    //"Rec lculo dos N¡veis dos Produtos na Estrutura"
	@ 8, 18 TO 108, 180 LABEL "" OF oDlg  PIXEL
	@ 20, 27 SAY cLinha1 SIZE 151, 7 OF oDlg PIXEL     //"Foram feitas altera‡”es no cadastro de estruturas. Esta rotina"
	@ 33, 27 SAY cLinha2 SIZE 151, 7 OF oDlg PIXEL     //"recalcula o n¡vel dos produtos e seus componentes em  suas "
	@ 47, 27 SAY cLinha3 SIZE 151, 7 OF oDlg PIXEL     //"respectivas estruturas."
	@ 61, 27 SAY cLinha4 SIZE 151, 7 OF oDlg PIXEL     //"O rec lculo se faz necess rio para que cada produto receba "
	@ 75, 27 SAY cLinha5 SIZE 151, 7 OF oDlg PIXEL     //"um  tratamento  nas rotinas a serem executadas  de  acordo "
	@ 89, 27 SAY cLinha6 SIZE 151, 7 OF oDlg PIXEL     //"com sua hierarquia dentro da estrutura."
	DEFINE SBUTTON FROM 119, 125 TYPE 1 ACTION (oDlg:End(),nOpca:=1) ENABLE OF oDlg
	DEFINE SBUTTON FROM 119, 152 TYPE 2 ACTION  oDlg:End() ENABLE OF oDlg
	ACTIVATE MSDIALOG oDlg CENTER
Else
	nOpca := IF(lCalcNivel,1,0)
EndIf

If nOpca == 1
	If IsBlind()
		lNivelOk := MostraProc(NIL,NIL,NIL,NIL,lClient,cArqTrb,lPreEstru,lCompartilhado,cFil330)
	Else
		MsgMeter( {|oMeter, oText, oDlg, lEnd| lNivelOk := MostraProc(oMeter, oText, oDlg, lEnd, lClient, cArqTrb,lPreEstru,lCompartilhado,cFil330) },If(lPreEstru,STR0027,STR0016),OemToAnsi(STR0015))  //"Rec lculo de N¡veis" //"Recalculando Estrutura..."
	EndIf
EndIf
Return(lNivelOk)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Nivel     ³ Autor ³ Wilson jr.            ³ Data ³ 23/08/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Acerta os niveis das estruturas no SG1                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Nivel(ExpC1,ExpC2,ExpL1,ExpL2)					    	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = componente		                                  ³±±
±±³          ³ ExpC2 = nivel na estrutura		                          ³±±
±±³          ³ ExpL1 = indica se usa pre-estrutura ou nao		          ³±±
±±³          ³ ExpL2 = indica se arq. compartilhado		 				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T. / .F.								                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA320                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Nivel(cComp,cNivel,lPreEstru,lCompartilhado,cExp,cSeek)
Local cAliasPr:=If(lPreEstru,"SGG","SG1")
Local cCpoCod :=If(lPreEstru,"+GG_COD","+G1_COD")
Local nRec := (cAliasPr)->(Recno()), nSalRec, lRet := .t.

Default lCompartilhado := .F.

dbSeek(cSeek+cComp)

While !Eof() .And. &(cExp+cCpoCod) == cSeek+cComp
	nSalRec:=Recno()
	If lPreEstru
		dbSeek(cSeek+SGG->GG_COMP)
	Else
		dbSeek(cSeek+SG1->G1_COMP)
	EndIf
	lEof := Eof()
	dbGoto(nSalRec)
	If Val(cNivel) >= 98  // Testa Erro de estrutura
		lRet := .F.
	Endif
	If lPreEstru
		If Val(cNivel)+1 > Val(GG_NIV) .and. lRet
			RecLock("SGG")
			Replace GG_NIV With Strzero(Val(cNivel)+1,2)
			Replace GG_NIVINV With Strzero(100-Val(GG_NIV),2,0)
			MsUnLock()
			If !lEof
				lRet := NIVEL(SGG->GG_COMP,GG_NIV,lPreEstru,lCompartilhado,cExp,cSeek)
			EndIf
		EndIf
	Else
		If Val(cNivel)+1 > Val(G1_NIV) .and. lRet
			RecLock("SG1")
			Replace G1_NIV With Strzero(Val(cNivel)+1,2)
			Replace G1_NIVINV With Strzero(100-Val(G1_NIV),2,0)
			MsUnLock()
			If !lEof
				lRet := NIVEL(SG1->G1_COMP,G1_NIV,lPreEstru,lCompartilhado,cExp,cSeek)
			EndIf
		EndIf
	EndIf
	If !lRet
		Exit
	EndIf
	dbSkip()
End
(cAliasPr)->(dbGoto(nRec))
Return(lRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MostraProc³ Autor ³                       ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Varre arq. Estruturas/Pre-Estr., acertando niveis		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MostraProc(ExpO1,ExpO2,ExpO3,ExpL1,ExpL2,ExpC1,ExpL3,ExpL4)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 = obj da regua do processamento                      ³±±
±±³          ³ ExpO2 = obj do texto      		                          ³±±
±±³          ³ ExpO3 = obj da dialog      		                          ³±±
±±³          ³ ExpL1 = var. p/ controle de interrupcao pelo usuario 	  ³±±
±±³          ³ ExpL2 = se .F. devera' usar a Stored Procedure, existindo  ³±±
±±³          ³ ExpC1 = Alias do arquivo                   				  ³±±
±±³          ³ ExpL3 = usa pre-estrutura ou nao             			  ³±±
±±³          ³ ExpL4 = indica se arq. compartilhado         			  ³±±
±±³          ³ ExpC2 = filial onde é processada a thread do recalculo	  ³±±
±±³          ³ 			(será utilizada para seek na temp SG1)			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T. / .F.								                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA320                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Mostraproc(oMeter,oText,oDlg,lEnd,lClient,cArqTrb,lPreEstru,lCompartilhado,cFil330)
Local cAliasPr := If(lPreEstru,"SGG","SG1")
Local cProcNam := GetSPName("MAT005","20")
Local aResult  := {}
Local lRetTop  := .T.
Local cTRBSG1  := Iif(Empty(cArqTrb), '0' , '1' )
Local cQuery  as character
Local oExec   as object
Local nResult as numeric
Local cFilSG1 as character

Static __l320VLib

__l320VLib 	:= If(__l320VLib == NIL,FWLibVersion() >= "20211116",__l320VLib)

If ( ExistProc(cProcNam,VerIDProc()) .And. !lClient)
	aResult  := TCSPEXEC(xProcedures(cProcNam),cFilAnt,cTRBSG1,cFil330)
	If Empty(aResult) .Or. Valtype(aResult) <> "A"
		lRetTop := .F.
		MsgAlert(STR0028) // 'Erro na chamada do processo'
		cMsgError := TCSqlError()
		USEREXCEPTION(cMsgError)
	ElseIf aResult[1] = "01" .Or. aResult[1] = "1"
		If GetMV("MV_NIVALT") != NIL
			PutMV("MV_NIVALT","N")
		EndIf

		cFilSG1 := A320Filial(!Empty(cArqTrb))

		cQuery := "SELECT COUNT(R_E_C_N_O_) CNT FROM "
		cQuery += Iif(Empty(cArqTrb),RetSQLName("SG1"),cArqTrb)
		cQuery += " WHERE G1_FILIAL = ? "
		cQuery += " AND  G1_NIV = ? AND D_E_L_E_T_= ? "
		if !Empty(cArqTrb)
			cQuery += " AND G1_FILPROC = ? "
		EndIf
		cQuery := ChangeQuery(cQuery)
		If __l320VLib
			oExec := FwExecStatement():New(cQuery)
		Else
			oExec := FWPreparedStatement():New(cQuery)
		EndIf
		oExec:SetString(1,cFilSG1)
		oExec:SetString(2,space(TamSX3("G1_NIV")[1]))
		oExec:SetString(3,' ')
		if !Empty(cArqTrb)
			oExec:SetString(4,cFil330)
		EndIf
		If __l320VLib
			nResult := oExec:ExecScalar('CNT')
		Else
			cQuery  := oExec:GetFixQuery()
			nResult := MpSysExecScalar(cQuery,"CNT")
		EndIf
		If nResult >0
			lRetTop := .F.
		EndIf
		oExec:Destroy()
		oExec := NIL
	Else
		lRetTop := .F.
	EndIf
	dbSelectArea(cAliasPr)
Else
	lRetTop := xMostraproc(oMeter,oText,oDlg,lEnd,lClient,cArqTrb,lPreEstru,lCompartilhado,cFil330)
EndIf

Return (lRetTop)

Static Function xMostraproc(oMeter,oText,oDlg,lEnd,lClient,cArqTrb,lPreEstru,lCompartilhado,cFil330)
Local cAliasPr	:= If(lPreEstru,"SGG","SG1")
Local nRec		:= 1
Local bBlock	:= {}
Local nTotRegs	:= 0
Local lRet		:= .T.
Local lA320Loop	:= ExistBlock("A320LOOP")
Local lEstrTmp 	:= "SPSG1" $ cArqTrb
Local cExp		:= ""
Local cSeek		:= ""

dbSelectArea(cAliasPr)
If !IsBlind()
	bBlock:={|| oMeter:Set(nRec), SysRefresh(), !lEnd}
	nTotRegs += RecCount() * 2
	oMeter:nTotal:=nTotRegs:=LastRec()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava "01" em todos os niveis                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lEstrTmp
	dbSelectArea(cAliasPr)
	If lPreEstru
		dbSeek(xFilial("SGG"))
	Else
		dbSeek(A320Filial(lCompartilhado))
	EndIf
	While !Eof() .And. If(lPreEstru,GG_FILIAL == xFilial("SGG"),G1_FILIAL == A320Filial(lCompartilhado))
		RecLock(cAliasPr,.F.)
		If lPreEstru
			Replace GG_NIV With "01", GG_NIVINV With "99"
		Else
			Replace G1_NIV With "01", G1_NIVINV With "99"
		EndIf
		MsUnlock()
		dbSkip()
		If !IsBlind()
			EVAL(bBlock)
		EndIf
		nRec++
	EndDo
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Entra especificamente na rotina de acerto                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAliasPr)
If lPreEstru
	cExp := "GG_FILIAL"
	cSeek := xFilial("SGG")
ElseIf !lEstrTmp
	cExp := "G1_FILIAL"
	cSeek := A320Filial(lCompartilhado)
Else
	cExp := "G1_FILPROC+G1_FILIAL"
	cSeek := cFil330+A320Filial(lCompartilhado)
EndIf
dbSeek(cSeek)
While !Eof() .And. &(cExp) == cSeek
	If lPreEstru
		If GG_NIV == "01"
			lRet := Nivel(GG_COMP,GG_NIV,lPreEstru,lCompartilhado,cExp,cSeek)
			If !lRet
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Executa Ponto de Entrada A320LOOP                               ³
				//³ Passados os parametros:											³
				//³ PARAMIXB[1] - Nome do Arquivo de Trabalho do SGG Temporario		³
				//³ PARAMIXB[2] - Componente GG_COMP								³
				//³ PARAMIXB[3] - Nivel Atual do Componente GG_NIVEL				³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lA320Loop
					ExecBlock("A320LOOP",.F.,.F.,{cArqTrb,GG_COMP,GG_NIV,lPreEstru})
				EndIf
				HELP(" ",1,"MA320LOOP",,SGG->GG_COD,5,23)
			EndIf
		EndIf
	Else
		If G1_NIV == "01"
			lRet := Nivel(G1_COMP,G1_NIV,lPreEstru,lCompartilhado,cExp,cSeek)
			If !lRet
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Executa Ponto de Entrada A320LOOP                               ³
				//³ Passados os parametros:											³
				//³ PARAMIXB[1] - Nome do Arquivo de Trabalho do SG1 Temporario		³
				//³ PARAMIXB[2] - Componente G1_COMP								³
				//³ PARAMIXB[3] - Nivel Atual do Componente G1_NIVEL				³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lA320Loop
					ExecBlock("A320LOOP",.F.,.F.,{cArqTrb,G1_COMP,G1_NIV,lPreEstru})
				EndIf
				HELP(" ",1,"MA320LOOP",,SG1->G1_COD,5,23)
			EndIf
		EndIf
	EndIf
	If !IsBlind()
		EVAL(bBlock)
	EndIf
	nRec++
	If !lRet
		Exit
	EndIf
	dbSkip()
EndDo

If lRet
	If lPreEstru
		If GetMV("MV_NIVALTP") != NIL
			PutMV("MV_NIVALTP","N")
		EndIf
	Else
		If GetMV("MV_NIVALT") != NIL
			PutMV("MV_NIVALT","N")
		EndIf
	EndIf
	dbSelectArea(cAliasPr)
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MA320CalcT³ Autor ³Rodrigo de A. Sartorio ³ Data ³ 30/04/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava o custo de acordo com o calculo dos impostos         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA320                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MA320CalcT()
Static lValICMS  := NIL
Local  cTipo     := "MA320LCust"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Subtrai valores referentes aos Impostos (ICMS/IPI)              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local nIcm := 0,nIpi := 0, nValImp := 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a existencia de Ponto de Entrada                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lA320Custd:=ExistBlock("A320CUST")

lValICMS  := If(lValICMS == NIL,GetNewPar("MV_UPRCICM",.T.),lValICMS)
If cPaisLoc=="BRA"
	dbSelectArea("SF4")
	dbSetOrder(1)
	If dbSeek(xFilial("SF4")+RetFldProd(SB1->B1_COD,"B1_TE"))
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcula o valor do ICM a ser retirado do custo do material   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If F4_ICM <> "N"
			If F4_CREDICM == "S"
				nIcm := RetFldProd(SB1->B1_COD,"B1_CUSTD") * Iif(SB1->B1_FORAEST=="S",.12,(SB1->B1_PICM/100))
			EndIf
			nIcm:=If(lValICMS,NoRound(If(F4_BASEICM>0,F4_BASEICM/100,1)*nIcm,2),If(F4_BASEICM>0,F4_BASEICM/100,1)*nIcm)
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcula o valor do IPI a ser somado ao custo do material     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If F4_IPI <> "N"
			If F4_CREDIPI == "N"
				nIpi := RetFldProd(SB1->B1_COD,"B1_CUSTD") * (SB1->B1_IPI/100)
			ElseIf F4_IPI == "R"
				nIpi -= RetFldProd(SB1->B1_COD,"B1_CUSTD") * (SB1->B1_IPI/100)
			ElseIf F4_BASEIPI>0
				nIpi := RetFldProd(SB1->B1_COD,"B1_CUSTD") * (SB1->B1_IPI/100)
			EndIf
			nIpi := If(F4_BASEIPI>0,F4_BASEIPI/100,1)*nIpi
		EndIf
	EndIf
	If RetArqProd(SB1->B1_COD)
		RecLock("SB1",.F.)
		Replace B1_CUSTD   With B1_CUSTD+ nIpi - nIcm
		Replace B1_UCALSTD With dDataBase
		MsUnLock()
	Else
		RecLock("SBZ",.F.)
		Replace BZ_CUSTD   With SBZ->BZ_CUSTD+ nIpi - nIcm
		Replace BZ_UCALSTD With dDataBase
		MsUnLock()
		dbSelectArea("SB1")
	EndIf
Else
	SF4->(DbSetOrder(1))
	If SF4->(dbSeek(xFilial("SF4")+RetFldProd(SB1->B1_COD,"B1_TE")))
		SFC->(DbSetOrder(1))
		If SFC->(DbSeek(xFilial("SFC")+SF4->F4_CODIGO))
			If SFB->(DbSeek(xFilial("SFB")+SFC->FC_IMPOSTO))
				nValImp:=If(SFC->FC_CREDITA=="1",SFB->FB_ALIQ,If(SFC->FC_CREDITA=="2",-SFB->FB_ALIQ,0))
				nValImp:=(RetFldProd(SB1->B1_COD,"B1_CUSTD")*nValImp)/100
				If RetArqProd(SB1->B1_COD)
					RecLock("SB1",.F.)
					Replace B1_CUSTD   With B1_CUSTD+nValImp
					Replace B1_UCALSTD With dDataBase
					MsUnLock()
				Else
					RecLock("SBZ",.F.)
					Replace BZ_CUSTD   With SBZ->BZ_CUSTD+nValImp
					Replace BZ_UCALSTD With dDataBase
					MsUnLock()
					dbSelectArea("SB1")
				EndIf
			EndIf
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Executa Ponto de Entrada                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lA320Custd
	ExecBlock("A320CUST",.F.,.F.,If(cPaisLoc=="BRA",{nIcm,nIpi,cTipo},{nValImp,,cTipo}))
EndIf
Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MA320LCust³ Autor ³Rodrigo A Sartorio     ³ Data ³ 12/11/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Atualiza o custo standard (B1_CUSTD) baseado no ultimo     ³±±
±±³          ³ custo de NF de compra                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MA320LCust(ExpO1)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 = Objeto tNewProcess()                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA320                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MA320LCust(oTProces)
Local aCusto:={},nCusto:=0
Local aArea:=GetArea()
Local aAreaSD1:=SD1->(GetArea())
Local aAreaSF4:=SF4->(GetArea())
Local lContinua := .T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a existencia de Ponto de Entrada                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lA320Custd:=ExistBlock("A320CUST")
Local lM320FilNF:=ExistBlock("M320FILNF")
Local cTipo     := "MA320LCust"


Local aFilsCalc  := {}
Local cFilBack   := cFilAnt
Local nForFilial := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa o log de processamento   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcLogIni( {},"MATA320" )
ProcLogAtu("INICIO")

aFilsCalc := MatFilCalc( mv_par12 == 1 )

For nForFilial := 1 To Len( aFilsCalc )

	If aFilsCalc[ nForFilial, 1 ]

		cFilAnt := aFilsCalc[ nForFilial, 2 ]

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("MENSAGEM",STR0039+cFilAnt,STR0012+cFilAnt) // "Inicio Filial: "

		dbSelectArea("SD1")
		dbSetOrder(7)
		dbSelectArea("SF4")
		dbSetOrder(1)
		dbSelectArea("SB1")
		dbSeek(xFilial("SB1"))
		While !EOF() .And. B1_FILIAL == xFilial("SB1")
			If (oTProces<>Nil)
				oTProces:IncRegua1( STR0030 + aFilsCalc[ nForFilial, 2 ] + " - " + aFilsCalc[ nForFilial, 3 ] ) // "Processando Filial:  "
			Else
				IncProc( STR0030 + aFilsCalc[ nForFilial, 2 ] + " - " + aFilsCalc[ nForFilial, 3 ] ) // "Processando Filial:  "
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Filtra os tipos e grupos selecionados                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If B1_TIPO < mv_par06 .Or. B1_TIPO > mv_par07 .Or. B1_GRUPO < mv_par08 .Or. B1_GRUPO > mv_par09
				dbSkip()
				Loop
			EndIf
			dbSelectArea("SD1")
			dbSeek(xFilial("SD1")+SB1->B1_COD+Replicate("z",LEN(SD1->D1_LOCAL)),.T.)
			dbSkip(-1)
			aCusto:={}
			While !Bof() .And. D1_FILIAL+D1_COD == xFilial("SD1")+SB1->B1_COD
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ponto de Entrada utizado para customizacoes do filtro 					³
				//³ do Calculo do custo de Reposicao para a Ultimo Custo de Compra.     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lM320FilNF
			   		lContinua := ExecBlock("M320FILNF",.F.,.F.)
				   	If Valtype(lContinua) <> "L"
				   		lContinua := .T.
				   	EndIf
				Else
					lContinua := .T.
				EndIf

			   	If lContinua
					If SD1->D1_TIPO == "N" .And. SF4->(dbSeek(xFilial("SF4")+SD1->D1_TES)) .And. SF4->F4_ESTOQUE == "S" .And. SF4->F4_UPRC <> 'N'
						nCusto:=&("D1_CUSTO"+If(mv_par01==1," ",Str(mv_par01,1,0))) / SD1->D1_QUANT
						If nCusto > 0
							AADD(aCusto,{nCusto,SD1->D1_DTDIGIT,SD1->D1_NUMSEQ})
						EndIf
					EndIf
				EndIf
				dbSkip(-1)
			End
			If Len(aCusto) > 0
				ASORT(aCusto,,,{ |x,y| dtos(x[2])+x[3] < dtos(y[2])+y[3]})
				If RetArqProd(SB1->B1_COD)
					RecLock("SB1",.F.)
					Replace B1_CUSTD   With aCusto[Len(aCusto),1]
					Replace B1_MCUSTD  With Str(mv_par01,1,0)
					Replace B1_UCALSTD With dDatabase
					Replace B1_DATREF  With aCusto[Len(aCusto),2]
					MsUnLock()
				Else
					RecLock("SBZ",.F.)
					Replace BZ_CUSTD   With aCusto[Len(aCusto),1]
					Replace BZ_MCUSTD  With Str(mv_par01,1,0)
					Replace BZ_UCALSTD With dDatabase
					Replace BZ_DATREF  With aCusto[Len(aCusto),2]
					MsUnLock()
					dbSelectArea("SB1")
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Executa Ponto de Entrada                                        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lA320Custd
					ExecBlock("A320CUST",.F.,.F.,{SB1->B1_COD,aCusto[Len(aCusto),1],cTipo})
				EndIf
			EndIf
			dbSelectArea("SB1")
			dbSkip()
		EndDo

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o log de processamento             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("MENSAGEM",STR0040+cFilAnt,STR0013+cFilAnt) //"Final Filial: "

	EndIf

Next nForFilial

cFilAnt := cFilBack

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza o log de processamento   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcLogAtu("FIM")

SD1->(RestArea(aAreaSD1))
SF4->(RestArea(aAreaSF4))
RestArea(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A320Filial  ³ Autor ³Rodrigo de A. Sartorio ³ Data ³04/02/06³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna filial para uso no processamento                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpC1 := A320Filial(ExpL1)							      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 = indica se arq. compartilhado                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpC1 = filial para uso no processamento                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA320 / MATA330                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A320Filial(lCompartilhado)
Local cRet:=xFilial("SG1")
Default lCompartilhado := .F.
// Forca filial como compartilhada
If lCompartilhado
	cRet:=Criavar("G1_FILIAL",.F.)
EndIf
Return cRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³VerIDProc ³ Autor ³ Marcelo Pimentel      ³ Data ³24.07.2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Identifica a sequencia de controle do fonte ADVPL com a     ³±±
±±³          ³stored procedure, qualquer alteracao que envolva diretamente³±±
±±³          ³a stored procedure a variavel sera incrementada.            ³±±
±±³          ³Procedure MAT005                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function VerIDProc()
Return '003'

/*/{Protheus.doc} EngPre20Compile
Funcao executada antes da compilacao da procedure (Pre-Compile)
Utilizada para criacao das tabelas temporarias do processo
@type function
@version 1.0
@author Squad Entradas
@since 28/10/2021
@param cProcesso, character, Codigo do processo
@param cEmpresa, character, Codigo da empresa
@param cError, character, Passada por referencia, deve conter a mensagem de erro caso ocorra
@return logical, .T. caso tudo ok
/*/
Function EngPre20Compile(cProcesso as character, cEmpresa as character, cError as character)

	A330CrTabs(NIL,.T.)

Return .T.

/*/{Protheus.doc} EngOn20Compile
Funcao executada durante a compilacao da procedure (On Compile)
Utilizada para adaptar o codigo original da procedure, substituindo as tags '###' pela
sequencia especifica de acordo com a regra de negocio do processo
@type function
@version 1.0
@author Squad Entradas
@since 28/10/2021
@param cProcesso, character, Codigo do processo
@param cEmpresa, character, Codigo da empresa
@param cProcName, character, Nome da stored procedure
@param cBuffer, character, Codigo original da procedure (corpo da procedure)
@param cError, character, Passada por referencia, deve conter a mensagem de erro caso ocorra
@return logical, .T. caso tudo ok
/*/
Function EngOn20Compile(cProcesso as character, cEmpresa as character, cProcName as character, cBuffer as character, cError as character)

	Local cNomeTab := "SPSG1"

	// Faz a troca das tags "###" nos nomes de tabelas específicas do processo
	cBuffer := StrTran( cBuffer, "TRB###SG1", "TRB"+cEmpresa+cNomeTab )

Return .T.

/*/{Protheus.doc} EngSPS20Delete
Funcoes executadas durante a desinstalacao da procedure (On Uninstall)
Utilizada para fazer a exclusao das tabelas da classe "TR"
@type function
@version 1.0
@author Squad Entradas
@since 28/10/2021
@param cProcesso, character, Codigo do processo
@param cEmpresa, character, Codigo da empresa
@param cError, character, Passada por referencia, deve conter a mensagem de erro caso ocorra
@return logical, .T. caso tudo ok
/*/
Function EngSPS20Delete(cProcesso as character, cEmpresa as character, cError as character)

	// caso a procedure "MAT005_19_nn" exista, significa que a tabela TRBnnSPSG1 nao pode ser apagada
	If !TCSPExist( 'MAT005_19_'+cEmpresa ) .and. TcCanOpen("TRB"+cEmpresa+"SPSG1")
		TcDelFile("TRB"+cEmpresa+"SPSG1")
	EndIf

Return .T.

/*/{Protheus.doc} EngSPS20Signature
Funcao executada durante a exibicao de informacoes detalhadas do processo na
interface de gestao de procedures.
Faz a execucao da funcao static VerIdProc
@type function
@version 1.0
@author Squad Entradas
@since 14/01/2021
@param cProcesso, character, Codigo do processo
@return character, Retorna a assinatura do processo
/*/
Function EngSPS20Signature(cProcess as character)

	Local cAssinatura as character

	cAssinatura := VerIDProc()

Return cAssinatura

//-------------------------------------------------------------------
/*/{Protheus.doc} SchedDef
Retorna as perguntas definidas no schedule.
@return aReturn         Array com os parametros
/*/
//-------------------------------------------------------------------

Static Function Scheddef()

Local aParam  := {}

aParam := { "P",;           //Tipo R para relatorio P para processo
			"MTA320",;      //Pergunte do relatorio, caso nao use passar ParamDef
			,;              //Alias
			,;              //Array de ordens
			}               //Titulo

IF MsgYESNO (OemToAnsi(STR0042)) //'Em Execução batch o Parametro 11 = AVISAR será assumido como NÂO ATUALIZAR'
EndIf 

Return aParam
