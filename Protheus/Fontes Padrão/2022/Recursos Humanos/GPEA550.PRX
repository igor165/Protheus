#INCLUDE "PROTHEUS.CH"
#INCLUDE "GPEA550.CH"
#INCLUDE "FONT.CH"
#INCLUDE "COLORS.CH"

Static lIncluir	:= .F.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ gpea550  ³ Autor ³ Equipe RH.            ³ Data ³ 10.10.05            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Lancamentos Fixos                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ DATA   ³CHAMADO REQUISITO³  Motivo da Alteracao                     ³±±
±±³            ³        ³                 ³                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Mohanad Odeh|15/04/13|M12RH01    RQ002|Unificacao dos Fontes V12                  ³±±
±±³            |        |                |                                           ³±±
±±³Sidney O.   |31/03/14|M_RH007   TPCEIQ|Alteracao na rotina Gpea550Limpa,          ³±±
±±³            |        |                |adicinados campos a serem limpos           ³±±
±±³            |        |                |Correcao do bug em Gpea550LinOk - limpava  ³±±
±±³            |        |                |a linha errada(posicao do array fixa em 1) ³±±
±±³Esther V.   |22/04/14|    M_RH003     |Replica V11 para V12. Tratamento do para-  ³±±
±±³            |        |                |metro MV_ITMCLVL para aceitar '3', nao     ³±±
±±³            |        |                |obrigando o preenchimento dos campos.      ³±±
±±³Esther V.   |27/05/14|    M_RH003     |Adequações nas rotinas de gravação indivi- ³±±
±±³            |        |                |dual e coletiva para gravar dados de Item e³±±
±±³            |        |                |Classe de Valor quando MV_ITMCLVL = 1 ou 3.³±±
±±³Luis Artuso |10/06/14|          TPSUYY|Ajuste para nao gerar errorlog ao visuali- ³±±
±±³            |        |                |zar funcionario que nao possua lancamento. ³±±
±±³Raquel Hager|21/03/16|          TTTHYV|Ajuste uso de RG1_ROT apenas para Brasil.  ³±±
±±³Flavio C.   |04/04/16|          TURIPK|Ajuste validação data inicial 	         ³±±
±±³Gabriel A.  |21/12/16|MRH-3119        |Ajuste para que caso a string retornada    ³±±
±±³            |        |                |pela fValidFil() for maior que 2000 bytes  ³±±
±±³            |        |                |seja filtrada as filiais que o usuário     ³±±
±±³            |        |                |não tem acesso.                            ³±±
±±³Eduardo K.  |28/11/17|MPRIMESP-12380  |Ajuste em GPA550Proc para não ocorrer      ³±±
±±³            |        |                |estouro no array aComp.                    ³±±
±±³M. Camargo  ³17/04/18³DMINA-249       ³Se agrego a asientos fijos las opciones de ³±±
±±³            ³        ³                ³Apo Vol AFC y Apo Vol AFP para colombia.   ³±±
±±³            ³        ³                ³Se modifica funcion AJUSTASX para que si   ³±±
±±³            ³        ³                ³el pais es col entonces no reemplace con-  ³±±
±±³            ³        ³                ³sultas estándar para los campos RG1_TPDATO ³±±
±±³            ³        ³                ³Y RG1_TPBLEG.							     ³±
±±³            ³        ³                ³ Alteracion funcion fTpCalcBox se agrega   ³±±
±±³            ³        ³                ³ opcion 8=UF para Chile                    ³±±
±±³            ³        ³                ³ Se agrega función Rg1ENT() mostrará consul³±±
±±³            ³        ³                ³ estándar S03CHI Y S04CHI para CHILE       ³±±
±±³            ³        ³                ³ Alteracion funcion fTpCalcBox se agrega   ³±±
±±³            ³        ³                ³ opcion 9=%Imponible para Chile            ³±±
±±³            ³        ³                ³ Se agredo función NumIdVld()para generar  ³±±
±±³            ³        ³                ³ Num.Id que sea un valor único. Estos      ³±±
±±³            ³        ³                ³ cambios corresponden al estándar GPE M2.  ³±±
±±³            ³        ³                ³ Se define aCopyTab ya que causaba error,se³±±
±±³            ³        ³                ³ agrega validación para opción Colar si se ³±±
±±³            ³        ³                ³ detona sin usar Copy primero.             ³±±
±±³Veronica Flo³03/05/19³DMINA-6587      ³Se modifican las opciones del combo del    ³±±
±±³            ³        ³                ³campo RG1_TPCALC en la función fTpCalcBox: ³±±
±±³            ³        ³                ³ Se eliminan las opciones 4 y 5            ³±±
±±³            ³        ³                ³ Se modifican las opciones 6,7,9,A         ³±±
±±³            ³        ³                ³ solo para el país de Colombia             ³±±
±±³            ³        ³                ³ Se localiza en la Gpea550Grava para Brasil³±±
±±³            ³        ³                ³ ya que la tabla indicada solo aplica para ³±±
±±³            ³        ³                ³ ese país. COL                             ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function GpeA550(nOpcAuto,lAutomato,xAutoCab,xAutoItens,lGP011Alt)

Local aIndexSRA			:= {}		//Variavel Para Filtro
Local aOfusca			:= If(FindFunction('ChkOfusca'), ChkOfusca(), {.T. , .F.}) //[2]Ofuscamento
Local aFldOfusca		:= If(aOfusca[2], FwProtectedDataUtil():UsrNoAccessFieldsInList({'RA_NOME', 'RA_ADMISSA'}), {})

Private bFiltraBrw		:= {|| NIL }		//Variavel para Filtro
Private aHeader 		:= {}
Private aCols			:= {}
Private aColsAnt		:= {}
Private nUsado  		:= 0.00
Private aQueryCond	 	:= {}
Private aGpa550Field	:= {}
Private aGdAltera       := {}
Private aVirtual		:= {}
Private aVisual		 	:= {}
Private aColsRec		:= {}
Private aGdNaoAltera	:= {}
Private bSkip			:= { || .F. }
Private cKeySeek		:= ""
Private nOpca			:= 0.00
Private lDaRefresh 		:= .F.
Private oGet
Private nPosPd
Private nPosDesc
Private nPosCTab
Private nPosDesTb
Private lItemClVl   := SuperGetMv( "MV_ITMCLVL", .F., "2" ) $ "1*3" //Define se trabalha com item e classe contabil
Private lGPublica 	:= X3USADO("RG1_TPDATO") // Gestao Publica
Private aPerAtual	:= {}
Private cMat    	:= SRA->RA_MAT
Private cFil		:= SRA->RA_FILIAL
Private cRetCons	:= '' // Contendrá valor de retorno de la funcion Rg1ENT (Para Chile)
Private aRotina		:= MenuDef() // ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina
Private aAutoCab	:= {}
Private aAutoItens  := {}
Private lRobo		:= .F.
Private lOfuscaNom	:= .F.
Private lOfuscaAdm	:= .F.
Default lAutomato 	:= .F.
DEFAULT lGP011Alt    := .F.

If Len(aFldOfusca) > 0	//Protecao de Dados Sensiveis
	lOfuscaNom := aScan( aFldOfusca , { |x| x:CFIELD == "RA_NOME" } ) > 0
	lOfuscaAdm := aScan( aFldOfusca , { |x| x:CFIELD == "RA_ADMISSA" } ) > 0
EndIf

If lAutomato
	lRobo := lAutomato
	If xAutoCab <> NIL
		aAutoCab	:= aClone(xAutoCab)
		aAutoItens	:= aClone(xAutoItens)
	EndIf
Endif

If cPaisLoc == "RUS"
	cCadastro := OemToAnsi(STR0195) //Recurring Paym./Ded
Else
	cCadastro := OemToAnsi(STR0009)  //"Lancamentos Fixos"
EndIf

If (Type( "lResM2" ) <> "U" .And. lResM2) //Tratamento para chamada da rotina atraves de tela de rescisão (Modelo 2)
	If FWChkFuncAccess( "GPEA550", 4, .T.)
		Gpea550Mnt( "SRA" , 1 , 4 )
	Elseif FWChkFuncAccess( "GPEA550", 2, .T.)
		Aviso( STR0022, STR0164, {STR0165}) //"Atenção" ## "Permissão somente de visualização dos registros." ## "OK"
		Gpea550Mnt( "SRA" , 1 , 2 )
	Else
		Aviso( STR0022, STR0163, {STR0165}) //"Atenção" ## "O usuário não tem permissão de acesso a esta rotina." ## "OK"
	Endif
Endif

If nOpcAuto <> Nil
	dbSelectArea("SRA")
	nPos := Ascan(aRotina,{|x| x[4] == nOpcAuto})

	If lGP011Alt .and. nPos > 0 //Busca a opção de alteração
		nPos := Ascan(aRotina,{|x| x[4] == nOpcAuto}, nPos+1)
	EndIf

	If ( nPos <> 0 )
		bBlock := &( "{ |a,b,c,d,e| " + aRotina[ nPos,2 ] + "(a,b,c,d,e) }" )
		Eval( bBlock, Alias(), (Alias())->(Recno()), nPos)
	EndIf
Elseif (Type( "lResM2" ) == "U" .Or. !lResM2)

	// VERIFICA SE O ARQUIVO ESTA VAZIO
	If !ChkVazio("SRA")
		Return( NIL )
	Endif

	// INICIALIZA O FILTRO UTILIZANDO A FUNCAO FILBROWSE
	cFiltraRH	:= CHKRH("GPEA550","SRA","1")
	bFiltraBrw	:= {|| FilBrowse("SRA",@aIndexSRA,@cFiltraRH) }
	Eval(bFiltraBrw)

	// Endereca a funcao de BROWSE
	SetBrwCHGAll( .T. )
	dbSelectArea("SRA")

	mBrowse( 6, 1,22,75,"SRA",,,,,,fCriaCor() )

	// Deleta o filtro utilizando a funcao FilBrowse
	EndFilBrw("SRA",aIndexSRA)
EndIf
Return( NIL )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea550Mnt	 ³ Autor ³ Equipe RH   		   ³ Data ³05/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³ Lancamentos Fixos											 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>						 			 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                 	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³         													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Gpea550Mnt( cAlias , nReg , nOpcx )
Local aArea			 := GetArea()
Local aAdvSize		 := {}
Local aInfoAdvSize   := {}
Local aObjSize		 := {}
Local aObjCoords	 := {}
Local nX			 := 0
Local nY			 := 0
Local oDlg
Local oFont
Local oGroup
Local aButtons 		:= {}
Local nOpcNewGd		:= IF( ( ( nOpcx == 2 ) .or. ( nOpcx == 5 ) ) , 0 , GD_INSERT + GD_UPDATE + GD_DELETE	)
// objetos da pesquisa
Local aPesqIdx 		:= {}
Local aPesqOrd		:= {}
Local lSeeAll		:= .T.
Local cPesqOrd
Local cPesqCampo	:= space(40)
Local cPesqFiltro	:= space(7)
Local lAxPesqui 	:=.F.

// Blocos de Codigo usados para os objetos primeiro, ultimo, próximo e anterior
Local bRetrocOne := {|| SRA->( dbskip(-1)),gp150MntGetDados(cAlias, nOpcX, SRA->RA_FILIAL, @cMat, @aVirtual, @aColsRec,.T.,.F.), oGet:oBrowse:Refresh(),oDLG:Refresh()}
Local bRetrocAll := {|| SRA->( dbGoTop( )),gp150MntGetDados(cAlias, nOpcX, SRA->RA_FILIAL, @cMat, @aVirtual, @aColsRec,.T.,.F.), oGet:oBrowse:Refresh(),oDLG:Refresh()}
Local bAvancaOne := {|| SRA->( dbskip()),If( SRA->(! EOF()),aCols:= {},.T.), gp150MntGetDados(cAlias, nOpcX, SRA->RA_FILIAL, @cMat, @aVirtual, @aColsRec,.T.,.F.), oGet:oBrowse:Refresh(),oDLG:Refresh()}
Local bAvancaAll := {|| SRA->( dbGoBottom()),gp150MntGetDados(cAlias, nOpcX, SRA->RA_FILIAL, @cMat, @aVirtual, @aColsRec,.T.,.F.),oGet:oBrowse:Refresh(),oDLG:Refresh()}
Local bFica      := {|| gp150MntGetDados(cAlias, nOpcX, SRA->RA_FILIAL, @cMat, @aVirtual, @aColsRec,.T., .F.),If(lDaRefresh,(oGet:oBrowse:Refresh(),oDLG:Refresh()),.T.)}
Local bNovoReg   := {|| fNovoReg() } //"Tratamento na inclusao de novos registros"
Local bAlerta    := {|| Alert( STR0149 ) } //"Utilize os botoes de navegacao apenas quando estiver Visualizando ou Alterando registros"
Local lMsNewGetDados := .T.  //O tratamento do MsNewGetDados e diferente do MSGetDados
Local cFilterAux := ""
Local oBrwAux
Local oFilAux

Private nPosLin
Private nPosCol
Private nPosData
Private cNome   	:= SRA->RA_NOME
Private cProcesso  	:= SRA->RA_PROCES
Private cCusto  	:= SRA->RA_CC
Private cItem       := ""
Private cClasse     := ""

Private aMemos	 	:= {}
Private aTELA		:= {}
Private aGETS		:= {}
Private aColsTudo	:= {}
Private aDefCols	:= {}
Private aColsAux	:= {}
Private oAzul 		:= LoadBitmap( GetResources(), "BR_AZUL" )
Private oVerde 		:= LoadBitmap( GetResources(), "BR_VERDE" )
Private oBtnPag
Private oBtnAb
Private oBtnTodos
Private aCopyTab := {}

If !lRobo
	If !IsInCallStack("GPEM040") .AND. !IsInCallStack("GPEM042")
		oBrwAux    := GetMBrowse()
		oFilAux    := oBrwAux:FwFilter()
		cFilterAux := oFilAux:GetExprADVPL()

		If Len(fValidFil()) <= 2000
			cFilterAux += If( !( Empty( cFilterAux ) ), ' .And. SRA->RA_FILIAL $ fValidFil() ', ' SRA->RA_FILIAL $ fValidFil() ' )
		Else
			cFilterAux += If( !( Empty( cFilterAux ) ), ' .And. !( SRA->RA_FILIAL $ fValidFil(,.T.) ) ', ' !( SRA->RA_FILIAL $ fValidFil(,.T.) ) ' )
		EndIf

		DbSetFilter({||&cFilterAux},cFilterAux)
	EndIf
Endif

cMat := SRA->RA_MAT
cFil := SRA->RA_FILIAL

If lIncluir
	nOpcx := 3
	lIncluir :=.F.
Endif

If lItemClVl
	cItem       := SRA->RA_ITEM
	cClasse     := SRA->RA_CLVL
EndIf

dbSelectArea("SX3")
dbSetOrder(2)
If dbSeek("RG1_CMEMO")
	Aadd(aMemos,{"RG1_CMEMO","RG1_COMPL","RE6"})
Endif
M->RG1_COMPL := "" // Garante a inicializacao do campo

If cPaisLoc == "RUS"
	cCadastro := OemToAnsi(STR0195)  // Recurring Paym./Ded
Else
	cCadastro := OemToAnsi(STR0009)  //Lancamentos Fixos
EndIf

Begin Sequence

	//DEFINE QUAL ALIAS SERA UTILIZADO
	cAlias := "RG1"
	dbSelectArea(cAlias)

	//DEFINE OS CAMPOS QUE NAO SERAO MOSTRADOS
	If !lItemClVl
		aGpa550Field := {"RG1_FILIAL" ,	"RG1_MAT" , "RG1_ITEM" , "RG1_CLVL" }
	Else
		aGpa550Field := {"RG1_FILIAL" , "RG1_MAT" }
	EndIf

	//DEFINE OS CAMPOS QUE NAO SERAO ALTERADOS
	aGdNaoAltera := { }

	//MONTA A CHAVE PARA PESQUISA EM GDMONTACOLS
	cKeySeek := ( cFil + cMat )

	//MONTA BLOCO PARA SKIP EM GDMONTACOLS
	BSKIP := { || .F. }

	//MONTA QUERY PARA A SELECAO DAS INFORMACOES EM GDMONTACOLS    ³
    QrysTop()
	//MONTA OS DETALHES
	aCols := GdMontaCols(@aHeader,@nUsado,@aVirtual,@aVisual,cAlias,aGpa550Field,@aColsRec,cAlias,cKeySeek,NIL,bSkip,NIL,NIL,NIL,NIL,NIL,NIL,aQueryCond,.F.,.F.,.T.)

	nPosPd   := GdFieldPos( "RG1_PD",     aHeader )
	nPosDesc := GdFieldPos( "RG1_DESCPD", aHeader )
	nPosCTab := GdFieldPos( "RG1_CODTAB", aHeader )
	nPosDesTb:= GdFieldPos( "RG1_DESTAB", aHeader )
    nPosLin  := GdFieldPos( "RG1_LINHA",  aHeader )
    nPosCol  := GdFieldPos( "RG1_COLUNA", aHeader )
	nPosData := GdFieldPos( "RG1_DFIMPG", aHeader )
	nPosIniPg:= GdFieldPos( "RG1_DINIPG", aHeader )
	nPosRecno:= GdFieldPos( "RG1_REC_WT", aHeader )

	//CARREGA, APENAS, OS CAMPOS VIRTUAIS
	MontaVirtuais(nOpcx)

	If lRobo
		Do Case
			Case nOpcx == 3
				INCLUI := .T.
				ALTERA := .F.
			Case nOpcx == 4
				INCLUI := .F.
				ALTERA := .T.
			Otherwise
				INCLUI := .F.
				ALTERA := .F.
		EndCase
	EndIf

	//CARREGA, APENAS, OS CAMPOS EDITAVEIS
	MontaEditaveis()

	//MONTA AS DIMENSOES DOS OBJETOS
	aAdvSize		:= MsAdvSize()
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
	aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aAdd( aObjCoords , { 000 , 025 , .T. , .F. } )	// Navegacao
	aObjSize := MsObjSize( aInfoAdvSize , aObjCoords )

	//SALVA O ACOLS ANTES DA ALTERACAO
	aColsAnt	:= aClone( aCols )

	// CRIA ESTRUTURA VAZIA DO ARRAY PARA USO NOS FILTROS
	aDefCols := {}
	For nX := 1 To Len( aHeader )
		If aHeader[nX,8] == "N"
			Aadd(aDefCols,0)
		ElseIf aHeader[nX,8] == "D"
			Aadd(aDefCols,Ctod( "" ))
		ElseIf aHeader[nX,8] == "L"
			Aadd(aDefCols,.F.)
		Else
			Aadd(aDefCols,Space( aHeader[nX,4] ))
		EndIf
		// VERIFICA INICIALIZADOR PADRAO
		If nOpcx # 2 .And. nOpcx # 4
			If !Empty( aHeader[nX,12] )
				aDefCols[Len(aDefCols)] := &( Alltrim(aHeader[nX,12]) )
			EndIf
		EndIf
	Next nX
	Aadd(aDefCols,.F.)

	If !lRobo
		DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
		DEFINE MSDIALOG oDlg TITLE cCadastro From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL

		@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup 			TO aObjSize[1,3],aObjSize[1,4]*0.18	LABEL OemToAnsi(STR0010) OF oDlg PIXEL		// "Matricula:"
		oGroup:oFont:= oFont
		@ aObjSize[1,1] , aObjSize[1,4]*0.185 GROUP oGroup 	TO aObjSize[1,3],aObjSize[1,4]*0.87	LABEL OemToAnsi(STR0011) OF oDlg PIXEL		// "Nome:"
		oGroup:oFont:= oFont
		@ aObjSize[1,1] , aObjSize[1,4]*0.875 GROUP oGroup 	TO aObjSize[1,3] ,aObjSize[1,4]			LABEL OemToAnsi(STR0012) OF oDlg PIXEL		// "Admiss„o:"
		oGroup:oFont:= oFont
		@ aObjSize[1,1]+10 , aObjSize[1,2]* 2.5	 SAY OemToAnsi(SRA->RA_MAT)		SIZE 050,10 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,1]+10 , aObjSize[1,4]* 0.2	 SAY If(lOfuscaNom, Replicate('*',15),OemToAnsi(SRA->RA_NOME)	)	SIZE 146,10 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,1]+10 , aObjSize[1,4]* 0.89 SAY If(lOfuscaAdm, Replicate('*',10),Dtoc(SRA->RA_ADMISSA))		SIZE 050,10 OF oDlg PIXEL FONT oFont

		oGet := MsNewGetDados():New(;
	                               aObjSize[2,1],;
	                               aObjSize[2,2],;
		                           aObjSize[2,3],;
	                               aObjSize[2,4],;
	                               IF(nOpcx==2.Or.nOpcx==5,0, GD_INSERT+GD_UPDATE+GD_DELETE	),; // controle do que podera ser realizado na GetDado - nstyle
	                               "Gpea550LinOk",;
	                               "Gpea550TudOk",;
	                               Nil,;
	                               Nil,;
	                               0,;
	                               99999,;
	                               Nil,;
	                               Nil,;
	                               Nil,;
	                               oDlg,;
	                               aHeader,;
	                               aCols,;
	                               bNovoReg;
	                              )

		//DEFINE GRUPO DO RODAPE
		@ aObjSize[3,1] , aObjSize[3,2] 		GROUP oGroup TO aObjSize[3,3], aObjSize[3,4] LABEL OemToAnsi(STR0124) OF oDlg PIXEL	 //"Pesquisar Funcionarios"
		oGroup:oFont:= oFont

		//LISTA BOTOES DE POSICIONAMENTO DO FUNCIONARIO
		@ ( ( aObjSize[3,1] ) +10 ) , ( ( aObjSize[3,2] )+08.96) 	BUTTON oBtnPgPrev 	PROMPT OemToAnsi("<<")	 SIZE 021.5,009 DESIGN ACTION Gp150Mov(If(nOpcx==3,bAlerta,bRetrocAll)) OF oDlg PIXEL
		@ ( ( aObjSize[3,1] ) +10 ) , ( ( aObjSize[3,2] )+29.96)	BUTTON oBtnPrev		PROMPT OemToAnsi("<")	 SIZE 021.5,009 DESIGN ACTION Gp150Mov(If(nOpcx==3,bAlerta,bRetrocOne)) OF oDlg PIXEL
		@ ( ( aObjSize[3,1] ) +10 ) , ( ( aObjSize[3,2] )+50.96)	BUTTON oBntNext 	PROMPT OemToAnsi(">")	 SIZE 021.5,009 DESIGN ACTION Gp150Mov(If(nOpcx==3,bAlerta,bAvancaOne)) OF oDlg PIXEL
		@ ( ( aObjSize[3,1] ) +10 ) , ( ( aObjSize[3,2] )+71.96)	BUTTON oBtnPgNext 	PROMPT OemToAnsi(">>")	 SIZE 021.5,009 DESIGN ACTION Gp150Mov(If(nOpcx==3,bAlerta,bAvancaALL)) OF oDlg PIXEL

		AxPesqOrd("SRA",@aPesqIdx,,lSeeAll,@aPesqOrd)
		cPesqOrd := aPesqOrd[1]

		@ ((aObjSize[3,1])+10),((aObjSize[3,4])*0.32) 		COMBOBOX oPesqCbx 	VAR cPesqOrd ITEMS aPesqOrd SIZE 100,36 	PIXEL OF oDlg ON CHANGE If(lAxPesqui,(DbSelectArea(cAlias),DbSetOrder(aPesqIdx[oPesqCbx:nAt][1]),__oObjBrow:Refresh()),)
		@ ((aObjSize[3,1])+10),((aObjSize[3,4])*0.32 + 115) 	MSGET    oPesqGet 	VAR cPesqCampo 	SIZE 100,09 	PIXEL OF oDlg
		@ ((aObjSize[3,1])+10),((aObjSize[3,4])*0.32 + 215) 	BUTTON   "Ok" 		SIZE 021.5,009 	PIXEL OF oDlg ACTION (AxPesqSeek("SRA",.F.,cPesqCampo,,aPesqIdx,oPesqCbx:nAt,lSeeAll,),Gp640Movimenta(bFica))

		AAdd(aButtons, {"S4WB005N", {|| aCopyTab := fCopia(oGet:nAt)   }	, STR0141	, STR0141 }  )	//"Copiar..."
		SetKey( VK_F4 , {|| aCopyTab := fCopia(oGet:nAt)   } )

		AAdd(aButtons, {"S4WB007N", {|| IIF(len(aCopyTab)>0,fColar( aCopyTab,.T.,oGet:nAt, lMsNewGetDados),MsgAlert(STR0194)) }	, STR0142	, STR0142 }  )	//"Colar..."
		SetKey( VK_F5 , {|| fColar( aCopyTab,.T.,oGet:nAt, lMsNewGetDados) } )

		IF nOpcx != 2 .AND. nOpcx != 5 .AND. cPaisLoc != "RUS"
			AAdd(aButtons, {"SduSetDel", {|| fFiltraLctos(1) }		, STR0132	, STR0132 }  )	//"Filtrar Lanctos Pagos"
			AAdd(aButtons, {"SduSoftSeek", {|| fFiltraLctos(2) }	, STR0133	, STR0133 }  )	//"Filtrar Lanctos Em Aberto"
			AAdd(aButtons, {"SduPropr", {|| fFiltraLctos(3) }		, STR0134	, STR0134 }  )	//"Mostrar todos"
		EndIf

		bSet15	:= {|| If(oGet:TudoOk(),(nOpca:=1,oDlg:End()),nOpca:=0)}
		bSet24	:= {||(nOpca:=0, oDlg:End())}

		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg, bSet15 , bSet24 , Nil , aButtons )  CENTERED
	Else
		If nOpcNewGd != 5
			If MsGetDAuto( aAutoItens, "Gpea550LinOk", "Gpea550TudOk", , nOpcNewGd,.F.)
				nOpcA := 1
			EndIf
		Else
			nOpcA := 1
		EndIf
	Endif

	IF ( ( nOpcA == 1 ) .and. ( nOpcX <> 2 ) )
		AtualizaRegs()
		Gpea550Grava( cAlias , cFil , cMat , aVirtual , aColsRec , nOpcx )
	Endif

End Sequence

RestArea( aArea )

IF ( nOpcX == 3 )
	MBrChgLoop(.F.)
EndIf

Return( NIL )

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpea550Grava³ Autor ³ Equipe RH           ³ Data ³26/05/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Grava no arquivo de Historico                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA550                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gpea550Grava( cAlias , cFil , cMat , aVirtual , aRegAltera , nOpc )

Local cPrefixo		:= ( PrefixoCpo( cAlias ) + "_" )
Local cCampo		:= ""
Local cPd			:= ""
Local lTudoIgual	:= .F.
Local nX 			:= 0.00
Local nY 			:= 0.00
Local nI			:= 0
Local nPosAnt		:= 0
Local nLenHeader	:= Len( aHeader 	)
Local nLenCols		:= Len( IF( !lRobo , oGet:aCols , aCols) )
Local nLenRegAlt	:= Len( aRegAltera	)
Local nPosDeleted	:= GdFieldPos( "GDDELETED" )
Local nPosRecno		:= GdFieldPos( "RG1_REC_WT" )
Local dMesAnoPer	:= ""
Local nPosRot		:= GdFieldPos( "RG1_ROT", aHeader )
Local cTpFol		:= ""

Begin Transaction

	IF ( nOpc == 5 ) //Exclusao

		DelRecnos( cAlias , @aRegAltera )
		( cAlias )->( EvalTrigger() )

		If cPaisLoc == "BRA"
			If RAW->(dbSeek(SRA->RA_FILIAL+SRA->RA_MAT))
				For nI := 1 To Len(aCols)
					If PosSrv(aCols[nI][nPosPd],FwxFilial("SRV",SRA->RA_FILIAL),"RV_CODFOL") $ '288|0288|289|0289|290|0290|291|0291'
						dbSelectArea("SRY")
						SRY->(DbSetOrder(1))
						SRY->( dbSeek( xFilial("SRY", SRA->RA_FILIAL) + aCols[nI][nPosRot] ))
						cTpFol := SRY->RY_TIPO
						SRY->(dbCloseArea())
						fGetPerAtual(@aPerAtual, xFilial("RCH"), cProcesso, aCols[nI][nPosRot])
						If Empty(aPerAtual)
							Alert(STR0205)// "Não foi possível excluir os dados de múltiplos vínculos. Verifique os registros das tabelas RAW e RAZ."
							Break
						EndIf
						dMesAnoPer	:= If( aPerAtual[1][1] > AnoMes(aCols[nI][nPosIniPg]), aPerAtual[1][1], AnoMes(aCols[nI][nPosIniPg]) )

						While dMesAnoPer <= AnoMes(aCols[nI][nPosData])
							While RAZ->(dbSeek(xFilial("RAW",SRA->RA_FILIAL) + SRA->RA_MAT + dMesAnoPer + cTpFol ))
								RecLock("RAZ",.F.)
								dbDelete()
								MsUnLock() // Confirma e finaliza a operação
								RAZ->(dbGoTop())
							EndDo
							If RAW->(dbSeek(xFilial("RAW",SRA->RA_FILIAL) + SRA->RA_MAT + dMesAnoPer + cTpFol + SRA->RA_PROCES + aCols[nI][nPosRot] ))
								RecLock("RAW",.F.)
								dbDelete()
								MsUnLock() // Confirma e finaliza a operação
								RAW->(dbGoTop())
							EndIf
							dMesAnoPer := SomaMesAno(dMesAnoPer)
						EndDo
					EndIf
				Next
			EndIf
		EndIf
	Else //Inclusao ou Alteracao

		IF !fCompArray( If(!lRobo, oGet:aCols, aCols) , aColsAnt )

			IF ( nLenRegAlt > 0.00 )
				For nX := 1 To nLenRegAlt
					If nPosRecno > 0
						nPosAnt := aScan( aColsAnt, { |x| x[nPosRecno] == If(!lRobo, oGet:aCols[ nX, nPosRecno ], aCols[ nX, nPosRecno ]) } )
					EndIf
					If nPosAnt > 0
						lTudoIgual 	:= fCompArray( If(!lRobo, oGet:aCols[ nX ], aCols[ nX ]) , aColsAnt[nPosAnt] )
					Else
						lTudoIgual 	:= fCompArray( If(!lRobo, oGet:aCols[ nX ], aCols[ nX ]) , aColsAnt[nX] )
					EndIf
					IF ( lTudoIgual ) .and. If(!lRobo, !( oGet:aCols[nX,nPosDeleted] ), !(aCols[nX,nPosDeleted]))
						Loop
					EndIF
					If nPosRecno > 0
						( cAlias )->( dbGoto( If(!lRobo, oGet:aCols[ nX, nPosRecno ], aCols[ nX, nPosRecno ]) ) )
					Else
						( cAlias )->( dbGoto( aRegAltera[nX] ) )
					EndIf
					( cAlias )->( RecLock( cAlias , .F. , .T. ) )
					IF (!lRobo .And. (oGet:aCols[nX,nPosDeleted])) .Or. (lRobo .And. (aCols[nX,nPosDeleted]))
						(cAlias)->( dbDelete() )
					Else
						(cAlias)->(&(cPrefixo+"FILIAL"))	:= cFil
						(cAlias)->(&(cPrefixo+"MAT"))		:= cMat

						For nY := 1 To nLenHeader
							//OBTEM O CAMPO PARA GRAVACAO
							cCampo := aHeader[nY,2]
							//GRAVA O CAMPO NO ARQUIVO
							(cAlias)->( &cCampo ) := If(!lRobo, oGet:aCols[nX,nY], aCols[nX,nY])
						Next nY
	               EndIf

					//EFETUA A GRAVACAO DOS CAMPOS MEMOS NA TABELA RE6
					fGravaMemos(aMemos,cAlias)

				   //DESTRAVA O REGISTRO
				   ( cAlias )->( MsUnLock() )
				Next nX
				IF ( nLenCols > nLenRegAlt ) // Se Trata de Inclusao de Itens
					Gpea550GrInc( cAlias , cPrefixo , cFil , cMat , aVirtual , ( nLenRegAlt + 1 ) )
				EndIF
			Else
				Gpea550GrInc( cAlias , cPrefixo , cFil , cMat , aVirtual , 1 )
			EndIF
			(cAlias)->(EvalTrigger())
		EndIF
	EndIF

End Transaction

If Type( "lResM2" ) <> "U" .And. lResM2  //Tratamento para chamada da rotina atraves de tela de rescisão (Modelo 2)
	lM2Modif:= .T.
Endif

Return( .T. )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpea550GrInc³ Autor ³Equipe Advanced RH   ³ Data ³ 24.05.95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Grava os registros Incluidos na GetDados	                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Gpea550Grava                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function Gpea550GrInc( cAlias , cPrefixo , cFil , cMat , aVirtual , nIniciar )

Local cCampo		:= ""
Local nLenHeader	:= Len( aHeader )
Local nLenCols		:= If(!lRobo, Len( oGet:aCols), Len( aCols ))

Local nPosDeleted	:= GdFieldPos( "GDDELETED" )
Local nX		    := 0.00
Local nY 			:= 0.00

For nX := nIniciar To nLenCols
	IF (!lRobo .And. !( oGet:aCols[nX,nPosDeleted] )) .Or. (lRobo .And. !( aCols[nX,nPosDeleted] ))
		(cAlias)->( RecLock(cAlias,.T.) )
		(cAlias)->(&(cPrefixo+"FILIAL"))	:= cFil
		(cAlias)->(&(cPrefixo+"MAT"))		:= cMat

		For nY := 1 To nLenHeader
			//OBTEM O CAMPO PARA GRAVACAO
			cCampo := aHeader[nY,2]
			(cAlias)->( &cCampo ) := If(!lRobo, oGet:aCols[nX,nY], aCols[nX,nY])
			IF cCampo == "RG1_NUMID"
				cCPO  := cAlias+"->"+CCAMPO
				&cCPO := NumIdVld(cAlias,cFil,cMat,RG1->RG1_PD)
	       ENDIF
		Next nY

		//EFETUA A GRAVACAO DOS CAMPOS MEMOS NA TABELA RE6
		fGravaMemos(aMemos,cAlias)

		//DESTRAVA O REGISTRO
		( cAlias )->( MsUnLock() )
	EndIF
Next nX

Return( NIL )
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NumIdVld    ³ Autor ³ Hugo Hernandez      ³ Data ³26/06/2015³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³La formula para construir este Identificador del 		    ³±±
±±³			   ³registro único                                              ±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA550                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Function NumIdVld(cAlias,cFil,cMat,cRG1_PD)
	Local 	aAreaC	  	:= getArea()
	Local	cCONS 	:= CriaTrab(Nil,.F.)
	Local cNumId :=""
 	Local nMax := 0
 	Local cConsulta :=""
 	cConsulta := "SELECT RG1_NUMID "
	cConsulta += "FROM "+RetSqlName("RG1")+" RG1"
	cConsulta += " WHERE RG1_MAT  ='" + cMat + "' and "
	cConsulta += " RG1_PD  ='" + cRG1_PD + "' and "
	cConsulta += " RG1_filial='" + xFilial("RG1") + "' and RG1.D_E_L_E_T_ = '' "
	cConsulta += " ORDER BY RG1_NUMID "
	cConsulta := ChangeQuery(cConsulta)

	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cConsulta),cCONS,.T.,.T.)
	dbgoTop()

	IF !(cCONS)->(Eof())
		While ((cCONS)->(!Eof()))
	 		If Val(SubStr((cCONS)->RG1_NUMID,15,6)) > nMax
	 			nMax := Val(SubStr((cCONS)->RG1_NUMID,15,6))
	 		EndIf
	 		DbSkip()
	 	Enddo
	 	cNumId := cAlias+SubStr(cFil,1,2)+cMat+cRG1_PD+ STRZERO(nMax+1, 6)
	 Else
	 	cNumId := cAlias+SubStr(cFil,1,2)+cMat+cRG1_PD+"000001"
	 EndIf
	 (cCONS)->( dbCloseArea())
	restArea(aAreaC)
Return cNumId

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpea550Vld  ³ Autor ³ Abel Ribeiro        ³ Data ³16/12/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Função para validação dos campos a serem desbilitados qdo   ³±±
±±³          ³identificador for igual a "0889"                            ³±±
±±³          ³o campo Rg1_valor.                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA550                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Function Gpea550Vld()
Local cPd        := ""
Local cCampo     := readvar()
Local cIdent     := SPACE(03)
Local nPosAutom  := GdFieldPos( "RG1_AUTOM" ,  aHeader )
Local nPosTPCalc := GdFieldPos( "RG1_TPCALC",  aHeader )
Local nPosPD     := GdFieldPos( "RG1_PD",  aHeader )
Local nPosCodTab := GdFieldPos( "RG1_CODTAB",  aHeader )
Local nPosDesTab := GdFieldPos( "RG1_DESTAB",  aHeader )
Local nPosLinha  := GdFieldPos( "RG1_LINHA" ,  aHeader )
Local nPosColuna := GdFieldPos( "RG1_COLUNA",  aHeader )
Local nPosRefer  := GdFieldPos( "RG1_REFER" ,  aHeader )
Local nPosNumRes := GdFieldPos( "RG1_NUMRES",  aHeader )
Local nPosDtReso := GdFieldPos( "RG1_DTRESO",  aHeader )
Local nPosMotRet := GdFieldPos( "RG1_MOTRET",  aHeader )
Local nPosStatus := GdFieldPos( "RG1_STATUS",  aHeader )

Local lRet       := .T.

If !(IsLeeAsFx(Nil,Nil,.T.))
	lRet := .F.
EndIf

IF cPaisLoc == "COL"
    IF cCampo == "M->RG1_PD"
	   	cPd 		:= &(cCampo)
	    Begin Sequence
	    	IF PosSrv(cPD,cFIL,"RV_CODFOL") == "0889"
			    aCols[n,nPosAutom] := "1"
	       		aCols[n,nPosTPCalc] := "8"
			   	aCols[n,nPosCodTab] := Space(4)
			   	aCols[n,nPosDesTab] := ""
			    aCols[n,nPosLinha]  := 0
			    aCols[n,nPosColuna] := 0
			    aCols[n,nPosRefer]  := 100
		     Else
		     	//Limpa os campos
		         aCols[n,nPosNumRes] := Space(10)
	  	         aCols[n,nPosDtReso] := CTOD("//")
	  	         aCols[n,nPosMotRet] := Space(1)
	  	         aCols[n,nPosStatus] := Space(1)
		     Endif
		     oGet:oBrowse:Refresh()
	   End Sequence
	Elseif cCampo == "M->RG1_STATUS" .And. !Empty(aCols[n,nPosRecno])//nao permite modificacao para status "menor".
		cPd:= aCols[n,nPosPd]
		If !Empty(cPd) .And. PosSrv(cPD,cFIL,"RV_CODFOL") == "0889"
			If aCols[n,nPosStatus] > &(cCampo)
				Alert(STR0159) //"Nao e possivel modificar este campo para Status inferiores"
				lRet:= .F.
		 	Endif
		Endif

	Endif
Endif
Return lRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpea550WHEN ³ Autor ³ Abel Ribeiro        ³ Data ³16/12/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Desabilita campos especifcos abaixo, se o identificador for ³±±
±±³          ³= 0889 o campo Rg1_valor.                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA550                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Function Gpea550When()
Local lRet   :=.T.
Local cCmpRg1:= ReadVar()
Local nPosPD := GdFieldPos( "RG1_PD",  aHeader )
Local cPd    := aCols[n,nPosPd]
Local nPosTP := GdFieldPos( "RG1_TPCALC", aHeader )
Local nTipo := oGet:aCols[n, nPosTP]

// Tratamento para alteração de edição de campos dependendo do tipo de cálculo escolhido
Do Case
   Case nTipo == "1" // VALOR FIXO
		if (cCmpRg1 == "M->RG1_CODTAB" .or. cCmpRg1 == "M->RG1_LINHA" .or. cCmpRg1 == "M->RG1_COLUNA" .or. cCmpRg1 == "M->RG1_REFER")
		   lRet := .F.
		endif
   Case nTipo == "2" .or. nTipo == "3" .or. nTipo == "5" .or. nTipo == "6" .or. nTipo == "7"
		if (cCmpRg1 == "M->RG1_CODTAB" .or. cCmpRg1 == "M->RG1_LINHA" .or. cCmpRg1 == "M->RG1_COLUNA" .or. cCmpRg1 == "M->RG1_VALOR")
		   lRet := .F.
		endif
   Case nTipo == "4" // TABELA
   	    if (cCmpRg1 == "M->RG1_REFER" .or. cCmpRg1 == "M->RG1_VALOR")
		   lRet := .F.
		endif
EndCase

IF cPaisLoc == "COL"
	If PosSrv(cPD,cFIL,"RV_CODFOL") == "0889"
		If cCmpRg1 == "M->RG1_AUTOM" .Or. cCmpRg1=="M->RG1_TPCALC" .Or. cCmpRg1== "M->RG1_CODTAB" .Or. cCmpRg1=="M->RG1_LINHA" .Or. ;
		   cCmpRg1=="M->RG1_COLUNA" .Or. cCmpRg1=="M->RG1_REFER"
	   		lRet:=.F.
	   	Endif
	   	If !Empty(aCols[n,nPosRecno])
	   		If cCmpRg1=="M->RG1_PD" .Or. cCmpRg1=="M->RG1_PROP" .Or. cCmpRg1=="M->RG1_CC" .Or. cCmpRg1=="M->RG1_DINIPG" .Or. ;
	   		   cCmpRg1=="M->RG1_LIBPAG" .Or. cCmpRg1=="M->RG1_DFIMPG" .Or. cCmpRg1=="M->RG1_NUMRES" .Or. cCmpRg1=="M->RG1_DTRESO" .Or.;
	   		   cCmpRg1=="M->RG1_MOTRET"
	   			lRet:= .F.
	   		Endif
	   	Endif
	Else
		If cCmpRg1=="M->RG1_NUMRES"	 .Or. cCmpRg1=="M->RG1_DTRESO" .Or. cCmpRg1=="M->RG1_MOTRET" .Or. cCmpRg1=="M->RG1_STATUS"
			lRet:=.F.
		Endif
	Endif
Endif

If cPaisLoc == "PER"
	If PosSrv(cPD,cFIL,"RV_CODFOL") <> "1168" .And. cCmpRg1=="M->RG1_PISOS"
    	lRet:= .F.
    Endif
Endif

RETURN lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpea550LinOk³ Autor ³ Equipe RH           ³ Data ³26/05/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Critica linha digitada                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA550                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Gpea550LinOk(oBrowse)
Local aCposKey		:= {}
Local lLinOk		:= .T.
Local cPD			:= ""
Local cIdent		:= ""
Local cVbBonif		:= fGetCodFol("1167") + "*" + fGetCodFol("1168") + "*" + fGetCodFol("1169") + "*" + fGetCodFol("1192")
Local nPosSeq 		:= GdFieldPos("RG1_ORDEM")
Local nPosStatus	:= GdFieldPos("RG1_STATUS")
Local nLimDe		:= 0
Local nLimAte		:= 0
Local nCont			:= 0
Local ny			:= 0
Local nNext			:= 0
Local nTotPer		:= 0
Local nPosPd		:= GdFieldPos("RG1_PD",aHeader)
Local nPosDtIni		:= GdFieldPos("RG1_DINIPG",aHeader)
Local nPosDtFim		:= GdFieldPos("RG1_DFIMPG",aHeader)
Local nPosRot		:= GDFieldPos("RG1_ROT",aHeader)
Local nPosDeleted	:= GdFieldPos("GDDELETED")
Local nPosPer		:= 0
Local nQtde			:= 0
Local cVerba		:= ""   // Utilizada para armazenar o codigo da verba para ser mostrada na mensagem ao usuario
Local cTLanc		:= ""   // Utilizada para armazenar a quantidade maxima de lancamentos possiveis de acordo com o cadastro de verbas
Local dDTFim
Local dDTIni
Local aPeriodos		:= {}
Local aComp			:= If(cPaisLoc <> "BRA", Array(1,4), Array(1,5))
Local lIdMultiV		:= .F.

Begin Sequence
	cPd    := GdFieldGet( "RG1_PD" )
	cIdent := PosSrv(cPD,cFIL,"RV_CODFOL")

	If (GdFieldGet( "RG1_CODTAB" ) == SPACE(4)) .AND. GdFieldGet( "RG1_TPCALC" ) == "4"
		oGet:aCols[n,nPosLin] := 0
		oGet:aCols[n,nPosCol] := 0
	Endif

	IF !(GdDeleted())
		If !lRobo .And. Empty( oGet:aCols[ n, nPosSeq ] )
			fSequencia('1')
		ElseIf lRobo .And. Empty( aCols[ n, nPosSeq ] )
			fSequencia('1')
		Endif
		aCposKey := { "RG1_ORDEM" }
		IF !(lLinOk := GdCheckKey(aCposKey, 4))
			Break
		EndIF

		IF !(lLinOk := !Empty(GdFieldGet("RG1_DINIPG")))
			Alert(STR0171) // "Informe a Data de Início do Pagamento"
			Break
		EndIF

		If !(cPaisLoc $ "COL*PER")
			IF !( lLinOk := !( ( GdFieldGet( "RG1_TPCALC" ) $ "2-3-5-6-7" ) .and. ( GdFieldGet( "RG1_REFER" ) == 0.00 ) ) )
				Alert(STR0031) //"Informe a Referencia"
				Break
			EndIF
			IF !( lLinOk := !( ( GdFieldGet( "RG1_TPCALC" ) = "1" ) .and. ( GdFieldGet( "RG1_VALOR" ) == 0.00 ) ) )
				Alert(STR0032) //"Informe o Valor"
				Break
			EndIF

			If GdFieldGet( "RG1_TPCALC" ) = "1"
				nLimDe  := PosSrv(cPD,cFIL, "RV_VLIMDE" )
				nLimAte := PosSrv(cPD,cFIL, "RV_VLIMATE")
				If (nLimDe != 0) .OR. (nLimAte != 0)
					If !(GdFieldGet( "RG1_VALOR" ) >= nLimDe .AND. ;
							GdFieldGet( "RG1_VALOR" ) <= nLimAte)
						Alert(STR0174) // "Valor deve estar conforme os limites do Cadastro de Verbas"
						lLinOk := .F.
						Break
					EndIf
				EndIf
			ElseIf GdFieldGet( "RG1_TPCALC" ) $ "2|3|5|6|7"
				nLimDe  := PosSrv(cPD,cFIL, "RV_RLIMDE" )
				nLimAte := PosSrv(cPD,cFIL, "RV_RLIMATE")
				If (nLimDe != 0) .OR. (nLimAte != 0)
					If !(GdFieldGet( "RG1_REFER" ) >= nLimDe .AND. ;
							GdFieldGet( "RG1_REFER" ) <= nLimAte)
						Alert(STR0184) // "Referência deve estar conforme os limites do Cadastro de Verbas"
						lLinOk := .F.
						Break
					EndIf
				EndIf
			EndIf

			If cPaisLoc == "BRA" .And. !Empty(GdFieldGet("RG1_ROT"))
				aPerAtual := {}
				fGetPerAtual(@aPerAtual, xFilial("RCH"), cProcesso, GdFieldGet("RG1_ROT")) // Encontra o periodo em aberto

				If Empty(GdFieldGet("RG1_REC_WT")) //faz verificação somente se for inclusao
					If Empty(aPerAtual)
						Alert(OemToAnsi(STR0186) + GdFieldGet("RG1_ROT") + CRLF +;
						OemToAnsi(STR0187) +  DTOC(GdFieldGet("RG1_DINIPG")))  // "Roteiro sem periodo aberto: " ### "Verifique a Data de Início de Pagamento: "
						lLinOk := .F.
						Break
					EndIf

					If GdFieldGet("RG1_DINIPG") < aPerAtual[1][6] // RCH_DTINI
						Alert(STR0175) // "Data inicial não pode ser menor do que o período aberto"
						lLinOk := .F.
						Break
					EndIf
				EndIf
			EndIf

			//CONTROLE DE QUANTIDADES DE LANÇAMENTOS POR VERBA
			For nCont := 1 To Len(aCols)
				If Len(aCols) >= 1
					//SE NAO ESTIVER DELETADO E STATUS FOR IGUAL A ABERTO
					If aCols[nCont, nPosDeleted] == .F. .AND.  aCols[nCont, nPosStatus] == "1"
						cVerba		:= aCols[nCont, nPosPd]
						cTLanc		:= PosSrv(aCols[ nCont , nPosPD ], SRA->RA_FILIAL, "RV_QTDLANC")
						cTLanc		:= If((cTLanc == "0" .Or. Empty(cTLanc)), "1", cTLanc)
						dDTFim		:= aCols[nCont, nPosDtFim]
						dDTIni		:= aCols[nCont, nPosDtIni]
						lIdMultiV	:= PosSrv(aCols[nCont, nPosPD], SRA->RA_FILIAL, "RV_CODFOL") $ '288|0288|289|0289|290|0290|291|0291'

						If (lRobo .Or. !lIdMultiV) .And. Empty(dDTFim) // Se data Final nao estiver preenchida, sera considerado dois anos posteriores a Data Inicial
							dDTFim := YearSum(dDTIni, 2)
						EndIf

						If !lRobo .And. lIdMultiV .And. Empty(dDTFim)
							Help(,, OemToAnsi(STR0206),, + CRLF + OemToAnsi(STR0207) + cValToChar(nCont) + CRLF + OemToAnsi(STR0208), 1, 0)// "Atenção" ## "Campo Dt.Fim Pagto não pode ficar em branco, pois dessa forma, apenas o primeiro mês sera considerado."
							lLinOk := .F.
							Break
						EndIf

						// CARREGA OS PERIODOS ENTRE DUAS DATAS
						Aadd(aPeriodos, RHPerDat(dDTIni, dDTFim, 1))
						For ny := 1 to Len(aPeriodos[1])
							If cPaisloc <> "BRA"
								nPosPer := aScan(aComp, {|X| X[1] == aPeriodos[1, ny] .AND. X[2] == aCols[nCont, nPosPd]})
							Else
								nPosPer := aScan(aComp, {|X| X[1] == aPeriodos[1, ny] .AND. X[2] == aCols[nCont, nPosPd] .AND. X[3] == aCols[nCont, nPosRot]})
							EndIf
							If nPosPer == 0
								If cPaisLoc <> "BRA"
									aComp[Len(Acomp), 1] := aPeriodos[1, ny]
									aComp[Len(Acomp), 2] := aCols[nCont, nPosPd]
									aComp[Len(Acomp), 3] := 1
									aComp[Len(Acomp), 4] := AllTrim(STR(nCont))
									ASIZE(aComp,Len(aComp)+1) // REDEFINE TAMANHO INCREMENTANDO UMA LINHA
									aComp[Len(Acomp)] := {"", "",0, ""}
								Else
									aComp[Len(Acomp), 1] := aPeriodos[1, ny]
									aComp[Len(Acomp), 2] := aCols[nCont, nPosPd]
									aComp[Len(Acomp), 3] := aCols[nCont, nPosRot]
									aComp[Len(Acomp), 4] := 1
									aComp[Len(Acomp), 5] := AllTrim(STR(nCont))
									ASIZE(aComp,Len(aComp)+1) // REDEFINE TAMANHO INCREMENTANDO UMA LINHA
									aComp[Len(Acomp)] := {"", "", "",0, ""}
								EndIf
							Else
								If cPaisLoc <> "BRA"
									aComp[nPosPer, 3] := aComp[nPosPer, 3] + 1
									aComp[nPosPer, 4] := aComp[nPosPer, 4] + ", " + AllTrim(STR(nCont)) // INDICA LINHAS DA OCORRENCIA
								Else
									aComp[nPosPer, 4] := aComp[nPosPer, 4] + 1
									aComp[nPosPer, 5] := aComp[nPosPer, 5] + ", " + AllTrim(STR(nCont)) // INDICA LINHAS DA OCORRENCIA
								EndIf
								nQtde := If(cPaisLoc <> "BRA",aComp[nPosPer,3],aComp[nPosPer,4])
								If nQtde > Val(cTLanc)
									MsgInfo( ( OemToAnsi(STR0176) + cVerba + CRLF +; // "Há período(s) que excede(m) a quantidade permitida para a verba: "
											If(cPaisLoc <> "BRA", + CRLF, (OemToAnsi(STR0177) + aCols[nCont, nPosRot] + CRLF)) +; // "Roteiro: "
											OemToAnsi(STR0178) +  OemToAnsi(STR0179)  + Substr(aComp[nPosPer, 1], 1, 2) + ; // "Período conflitante: "  ### "Mês: "
											OemToAnsi(STR0180) + Substr(aComp[nPosPer, 1], 3, 4) +  CRLF + ; // " Ano: "
											OemToAnsi(STR0181) + AllTrim(STR(nQtde)) + CRLF +; // "Ocorrências: "
											OemToAnsi(STR0182) + cTLanc + CRLF +; // "Quantidade permitida: "
											OemToAnsi(STR0183) + If(cPaisLoc <>"BRA",aComp[nPosPer,4],aComp[nPosPer,5]) ), OemToAnsi(STR0022)) // "Linhas: " ### "Atenção"
									lLinOk := .F.
									Break
								EndIf
							EndIf
						Next ny
						aPeriodos := {}
					EndIf
				EndIf
			Next

		Else
			If cPaisLoc == "COL"
				IF !( lLinOk := !( ( GdFieldGet( "RG1_TPCALC" ) $ "2-3-5-6-7" .Or. GdFieldGet( "RG1_PD" ) == fGetCodFol("110") ) .and. ( GdFieldGet( "RG1_REFER" ) == 0.00 ) ))
					Alert(STR0031) //"Informe a Referencia"
					Break
				EndIF
				IF !( lLinOk := (   !( ( GdFieldGet( "RG1_TPCALC" ) = "1"  .And.  GdFieldGet( "RG1_PD" ) <> fGetCodFol("110") ) .and. ( GdFieldGet( "RG1_VALOR" ) == 0.00 ) )   ) )
					Alert(STR0032) //"Informe o Valor"
					Break
				EndIF
			Endif
			If cPaisLoc == "PER"
				IF !( lLinOk := !( ( GdFieldGet( "RG1_TPCALC" ) $ "2-3-5-6-7" ) .and. ( GdFieldGet( "RG1_REFER" ) == 0.00 ) ) )
					Alert(STR0031) //"Informe a Referencia"
					Break
				EndIF
				If !(GdFieldGet( "RG1_PD" ) $ cVbBonif)
					IF !( lLinOk := !( ( GdFieldGet( "RG1_TPCALC" ) = "1" ) .and. ( GdFieldGet( "RG1_VALOR" ) == 0.00 ) ) )
						Alert(STR0032) //"Informe o Valor"
						Break
					EndIF
				Endif
				If GdFieldGet( "RG1_PD" ) == fGetCodFol("1168") .And. GdFieldGet( "RG1_PISOS" ) == 0 .And. GdFieldGet( "RG1_VALOR" ) == 0.00
					Alert(STR0162)  //"Informe a quantidade de andares."
					lLinOK:= .F.
					Break
				Endif

			Endif
		Endif

		IF !( lLinOk := !( ( GdFieldGet( "RG1_TPCALC" ) = "4" ) .and. ( GdFieldGet( "RG1_CODTAB" ) == Space(4) ) ) )
			//Help(" ",1,"A040SVALOR")
			Alert(STR0033) // "Informe a Tabela"
			Break
		EndIF

		IF !( lLinOk := !( ( GdFieldGet( "RG1_TPCALC" ) = Space(01) ) ) )
			Alert(STR0166) // "Informe o Tipo de Calculo"
			Break
		EndIF

		IF !(lLinOk := !((GdFieldGet("RG1_PD") = Space(03))))
			Alert(STR0167) // "Informe o código da verba"
			Break
		EndIF

		If cPaisLoc == "BRA"
			IF !(lLinOk := !((GdFieldGet("RG1_ROT") = Space(03))))
				Alert(STR0168) // "Informe o Roteiro de Cálculo"
				Break
			EndIF
		EndIf

		IF cPaisLoc == "COL" .AND. cIdent == "0889"
			IF !( lLinOk := !( ( GdFieldGet( "RG1_DINIPG" ) = CTOD("//") ) ) )
				Alert(STR0156) // "Informe a Data Inicial de Pagamento"
				Break
			ENDIF
			IF !( lLinOk := !( ( GdFieldGet( "RG1_LIBPAG" ) = CTOD("//") ) ) )
				Alert(STR0157) // "Informe a Data de Liberacao do Pagamento"
				Break
			ENDIF
			IF !( lLinOk := !( ( GdFieldGet( "RG1_DFIMPG" ) = CTOD("//") ) ) )
				Alert(STR0158) // "Informe a Data final do Pagamento"
				Break
			ENDIF

			IF !( lLinOk := !( ( GdFieldGet( "RG1_NUMRES" ) = SPACE(04) ) ) )
				Alert(STR0150) // "Informe a o Nr. da Resolucao"
				Break
			ENDIF
			IF !( lLinOk := !( ( GdFieldGet( "RG1_DTRESO" ) = CTOD("//") ) ) )
				Alert(STR0151) // "Informe a Data da Resolucao"
				Break
			ENDIF
			IF !( lLinOk := !( ( GdFieldGet( "RG1_MOTRET" ) = SPACE(1) ) ) )
				Alert(STR0152) // "Informe qual o Motivo da Retirada"
				Break
			ENDIF
			IF !( lLinOk := !( ( GdFieldGet( "RG1_STATUS" ) = SPACE(1) ) ) )
				Alert(STR0153) // "Informe qual o Status da Retirada"
				Break
			ENDIF
			IF !( lLinOk := !( AnoMes( GdFieldGet( "RG1_DINIPG" )) <> AnoMes( GdFieldGet( "RG1_DFIMPG" )) ) )
				Alert(STR0154) // "A data final e inicial devem pertencer ao mesmo periodo"
				Break
			ENDIF
		ENDIF

	EndIF

End Sequence

Return( lLinOk )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpea550TudOk³ Autor ³ Equipe RH     		³ Data ³26/05/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Critica linha digitada                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA550                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gpea550TudOk(oBrowse)
Local lRet			:= .T.
Local n				:= 1
Local nPosPd		:= GdFieldPos("RG1_PD",aHeader)

	//Nao permite excluir registro referente a cesantia, caso jah esteja calculado.
	If cPaisLoc == "COL"
		For n:=1 to len(aCols)
			If !Empty(aCols[n,nPosRecno])
				If PosSrv(aCols[n,nPosPd],cFIL,"RV_CODFOL") == "0889" .And. !(GdFieldGet( "RG1_STATUS" ) $ "1*2" )
					If aCols[n,(len(aHeader)+1)]
						Alert(STR0160) // "Nao e possivel apagar este registro."
						lRet:= .F.
					Endif
				Endif
			Endif
		Next n
	ElseIf !fCompArray( aCols, aColsAnt )
		lRet := fGP550RawZ()
	Endif

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fTpCalcBox³ Autor ³ Equipe RH.            ³ Data ³ 15/10/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Combo dos tipos de calculo permitido nos lancamentos fixos.³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA550                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fTpCalcBox(lCombo)
Local cOpcBox := ""
Default lCombo := .T.
If lCombo
   cOpcBox += ( STR0013 + ";"  ) // "1=Valor Fixo"
   cOpcBox += ( STR0014 + ";"  ) // "2=Dias"
   cOpcBox += ( STR0015 + ";"  ) // "3=Horas"

   If !cPaisLoc $ "COS/DOM/COL"
   	  cOpcBox += ( STR0017 + ";"  ) // "5=Acumulador"
   Endif

   If cPaisLoc <> "COL"
   		cOpcBox += ( STR0016 + ";"  ) // "4=Tabela"
   		cOpcBox += ( STR0018 + ";"  ) // "6=Perc.Sal.Base"
   		cOpcBox += ( STR0019 + ";"  ) // "7=Perc.Sal.Minimo"
   Endif

	If cPaisLoc == "COL"
		cOpcBox += ( STR0199 + ";"  ) // "6=% Sueldo"
 	    cOpcBox += ( STR0200 + ";"  ) // "7=%SMMLV"
   		cOpcBox += ( STR0155 + ";"  ) // "8=Cesantia/Juros Cesantia"
   		cOpcBox += ( STR0192 + ";"  ) // "9=Aportacion Vol AFC"
   		cOpcBox += ( STR0193 + ";"  ) // "A=Aportacion Vol AFP"
 	Endif
	If cPaisLoc == "ARG"
   		cOpcBox += ( STR0161 + ";"  ) // "8=Acumulador Proporcional"
 	Endif
 	If cPaisLoc == "CHI"
 		cOpcBox += ( STR0190 + ";"  ) // 8=UF
 		cOpcBox += ( STR0191 + ";"  ) // 9=%Imponible
 	EndIf
	If	cPaisLoc == "RUS"
		cOpcBox := ( STR0013 + ";") // "1=Fixed Amount"
		cOpcBox += ( STR0018 + ";") // "6=Porc.Suel.Base"
	EndIf
Else
	If cPaisLoc == "COL"
 		cOpcBox := { STR0013,STR0014,STR0015,STR0199,STR0200,STR0155,STR0192,STR0193}//  "1=Valor Fijo" "2=Dias" "3=Horas" "6=% Sueldo" "7=%SMMLV" "8=Cesantia/Juros Cesantia" "9=Aportacion Vol AFC" "A=Aportacion Vol AFP"
    ElseIf cPaisLoc == "ARG"
   		cOpcBox := { STR0013,STR0014,STR0015,STR0016,STR0017,STR0018,STR0019,STR0161}
   	ElseIf cPaisLoc == "CHI"
 		cOpcBox := { STR0013,STR0014,STR0015,STR0016,STR0017,STR0018,STR0019,STR0190,STR0191} //  "1=Valor Fijo" "2=Dias" "3=Horas" "4=Tabla" "5=Acumulador" "6=Porc.Suel.Base" "7=Porc.Suel.Minimo" "8=UF" "9=%Imponible"
 	Else
   		cOpcBox := { STR0013,STR0014,STR0015,STR0016,STR0017,STR0018,STR0019}
 	Endif
EndIF
Return( cOpcBox )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³DescGPa550³ Autor ³ Equipe RH.            ³ Data ³ 15/10/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna a descricao do campo                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA550                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function DescGPa550(cCpoDes,cAlias,cCpoRet)
Local nPosDes := GdFieldPos(cCpoDes)
Local cVar := &(ReadVar())

If !lRobo
	oGet:aCols[n][nPosDes] := fDesc(cAlias,cVar,cCpoRet)
Else
	aCols[n][nPosDes] := fDesc(cAlias,cVar,cCpoRet)
EndIf

Return ( .t. )

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpea550Ger| Autor ³ Reginaldo           	³ Data ³ 30/08/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Gera Lancamentos por Grupo                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ gpea550                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Function Gpea550Ger

Local nOpca := 0
Local aSays :={}, aButtons := {} //<== arrays locais de preferencia

Private cCadastro := OemToAnsi(STR0009)
Private cCadTipBas := OemToAnsi(STR0148) //"Informe o Tipo de Ato e dados da Base Legal para o Lançamento"

Private cTextMemo := ""

If cPaisloc = "RUS"
	cCadastro := OemToAnsi(STR0195) // Recurring Paym./Ded
EndIf

If lGPublica
	Private cTpDAto    := ""
	Private dDtBaseLeg := ""
	Private cTpBLeg    := ""
	Private cNrBaseLeg := ""
Endif

If Pergunte("GPEA550",.T.)
	Private cAutomat    := Str(mv_par01,1)
	Private cTipo       := mv_par02
	Private cVerba      := mv_par03
	Private cCodTab     := mv_par04
	Private nLinha      := mv_par05
	Private nColuna     := mv_par06
	Private nRefe       := mv_par07
	Private nValor      := mv_par08
	Private dIniPg      := mv_par09
	Private dFimPg      := mv_par10
	Private cProp       := If (mv_par12 = 1,"2","1")
	Private cFilDe      := mv_par13
	Private cFilAte     := mv_par14
	Private cCcDe       := mv_par15
	Private cCcAte      := mv_par16
	Private cMatDe      := mv_par17
	Private cMatAte     := mv_par18
	Private cSindDe     := mv_par19
	Private cSindAte    := mv_par20
	Private cSituacao   := mv_par21
	Private cCategoria  := mv_par22
	Private nAcao       := mv_par23 // 1-Sim; 2=Nao; 3=Inclui Novo

	If cPaisLoc == "BRA"
		Private cRot		:= mv_par24
	EndIf

	If lGPublica

		If Pergunte("GP550A",.T.,cCadTipBas)
			cTpDAto      := mv_par01
			dDtBaseLegal := mv_par02
			cTpBLeg      := mv_par03
			cNrBaseLeg   := mv_par04
			cTextMemo    := mv_par05
		Else
			Return
		EndIf

	Endif

	AADD(aSays,OemToAnsi( STR0020 ) ) //"Este programa gera Lancamentos Fixos"

	AADD(aButtons, { 1,.T.,{|o| nOpca := 1,IF(gpa550OK(),FechaBatch(),nOpca:=0 ) }} )
	AADD(aButtons, { 2,.T.,{|o| FechaBatch() }} )

	If !lRobo
		FormBatch( cCadastro, aSays, aButtons )
	Else
		nOpca := 1
	Endif

	IF nOpca == 1
		// PROCESSA INCLUSAO DE LANCAMENTOS
		If !lRobo
			ProcGpe({|lEnd| GPA550Proc()})  // Chamada do Processamento
		Else
			GPA550Proc()  // Chamada do Processamento
		Endif
	Endif
EndIf
Return Nil

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³GPA550Proc| Autor ³ Reginaldo           	³ Data ³ 04/11/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Gera Lancamentos por Grupo                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ gpea550                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function GPA550Proc()

Local lRet			:= .T.
Local lExcedeu		:= .F.
Local cSQL			:= ""
Local cCatQuery		:= ""
Local cSitQuery		:= ""
Local cLinhas		:= ""
Local cChave		:= ""
Local cTexto		:= ""
Local nS			:= 0
Local aStruSRA		:= {}
Local lQuery		:= .F.
Local lGeraRaz		:= .F.
Local aTitle		:= {}
Local aTotRegs		:= Array(7)
Local cTLanc		:= ""   // Utilizada para armazenar a quantidade maxima de lancamentos possiveis de acordo com o cadastro de verbas
Local dDTFim
Local dDTIni
Local aPeriodos		:= {}
Local aComp			:= Array(1,5)
Local aColsRG1		:= {}
Local nCont			:= 0
Local ny			:= 0
Local nx			:= 0
Local nPosSeq 		:= 0
Local nPosStatus	:= 0
Local nPosPd		:= 0
Local nPosDtIni		:= 0
Local nPosDtFim		:= 0
Local nPosRot		:= 0
Local nQtde			:= 0
Local lIdMultV		:= .F.

Private cSeq
Private cAcessaSRA	:= &(" { || " + ChkRH( "GPEA550" , "SRA" , "2" ) + " } ")
Private aLog        := {}
Private cFil		:= ""
Private cMat		:= ""
Private cPeriodo	:= ""
Private cProcesso	:= ""
Private cSemana		:= ""
Private cRoteiro	:= ""

	If Empty(cTipo)
		Alert(STR0172) // "Parametro Invalido, não foi informado Tipo de Calculo"
		Return .F.
	EndIf

	If cPaisLoc == "BRA"
		If Empty(cRot)
			Alert(STR0173) // "Parametro Invalido, não foi informado Roteiro de Calculo"
			Return .F.
		EndIf
	EndIf

	If Empty(cVerba)
		Alert(STR0185) // "Parametro Invalido, não foi informado Código da Verba"
		Return .F.
	EndIf

	If cTipo = '1' .and. nValor = 0
		Alert(STR0034) // "Parametro Invalido, foi selecionado Tipo Valor, porem campo valor esta Zero"
		Return .F.
	ElseIf cTipo = '2'.and. nRefe = 0
		Alert(STR0035) // "Parametro Invalido, foi selecionado Tipo Dias, porem campo Referencia esta Zero"
		Return .F.
	ElseIf cTipo = '3' .and. nRefe = 0
		Alert(STR0036) // "Parametro Invalido, foi selecionado Tipo Horas, porem campo Referencia esta Zero"
		Return .F.
	ElseIf cTipo = '4' .and. Empty(cCodTab)
		Alert(STR0037) // "Parametro Invalido, foi selecionado Tipo Tabela, porem campo Tabela esta Vazio"
		Return .F.
	ElseIf cTipo = '5' .and. nRefe = 0
		Alert(STR0038) // "Parametro Invalido, foi selecionado Tipo Acumulador, porem campo Referencia esta Zero"
		Return .F.
	ElseIf cTipo = '6' .and. nRefe = 0
		Alert(STR0039) // "Parametro Invalido, foi selecionado Tipo % Sal.Base, porem campo Referencia esta Zero"
		Return .F.
	ElseIf cTipo = '7' .and. nRefe = 0
		Alert(STR0040) // "Parametro Invalido, foi selecionado Tipo % Sal.Min., porem campo Referencia esta Zero"
		Return .F.
	EndIF

	If cTipo == '1'
		nLimDe  := PosSrv(cVerba,SRA->RA_FILIAL, "RV_VLIMDE" )
		nLimAte := PosSrv(cVerba,SRA->RA_FILIAL, "RV_VLIMATE")
		If (nLimDe != 0) .OR. (nLimAte != 0)
			If !(nValor >= nLimDe .AND. nValor <= nLimAte)
				Alert(STR0174) // "Valor deve estar conforme os limites do Cadastro de Verbas"
				Return .F.
			EndIf
		EndIf
	ElseIf cTipo $ "2|3|5|6|7"
		nLimDe  := PosSrv(cVerba,SRA->RA_FILIAL, "RV_RLIMDE" )
		nLimAte := PosSrv(cVerba,SRA->RA_FILIAL, "RV_RLIMATE")
		If (nLimDe != 0) .OR. (nLimAte != 0)
			If !(nRefe >= nLimDe .AND. nRefe <= nLimAte)
				Alert(STR0184) // "Referência deve estar conforme os limites do Cadastro de Verbas"
				Return .F.
			EndIf
		EndIf
	EndIf

	If Empty(dIniPg)
		Alert(STR0041) // "Parametro Invalido, Nao foi informada a Data Inicio Pagamento"
		Return .F.
	EndIF
	If !Empty(dFimPg) .and. dFimPg < dIniPg
		Alert(STR0042) // "Parametro Invalido, Data Fim menor que Data Inicio Pagamento"
		Return .F.
	EndIF

	If ( cAutomat == "1" ) .and. ( cTipo == "4" ) .and. ( Empty(AllTrim(cCodTab)) )
		Alert(STR0054) // "Parâmetro inválido. Tabela não informada."
		Return .F.
	Endif

	If ( cAutomat == "1" ) .and. ( cTipo == "4" )
		If ( nLinha < 1 ) .and. ( nColuna < 1 )
			Alert(STR0055) // "Parâmetro inválido. Linha e Coluna inválidas."
			lRet := .f.
		ElseIf ( nLinha < 1 ) .and. ( nColuna > 0 )
			Alert(STR0056) // "Parâmetro inválido. Linha inválida."
			lRet := .f.
		ElseIf ( nLinha > 0 ) .and. ( nColuna < 1 )
			Alert(STR0057) // "Parâmetro inválido. Coluna inválida."
			lRet := .f.
		Endif
	Endif

	If !lRet
		Return nil
	EndIf

	aFill(aTotRegs,0)

	dbSelectArea("SRA")


	cFor:='(RA_FILIAL+RA_MAT >= "'+cFilDe+cMatDe+'")'
	cFor+=' .And. (RA_FILIAL+RA_MAT <= "'+cFilAte+cMatAte+'")'


	//FAZ FILTRO NO ARQUIVO
	lQuery	:= .T.
	//-- Modifica variaveis para a Query
	For nS:=1 to Len(cSituacao)
		cSitQuery += "'"+Subs(cSituacao,nS,1)+"'"
		If ( nS+1) <= Len(cSituacao)
			cSitQuery += ","
		Endif
	Next nS

	cCatQuery := ""
	For nS:=1 to Len(cCategoria)
		cCatQuery += "'"+Subs(cCategoria,nS,1)+"'"
		If ( nS+1) <= Len(cCategoria)
			cCatQuery += ","
		Endif
	Next nS

	cSQL := "SELECT * "
	cSQL += " FROM " +	RetSqlName("SRA")
	cSQL += " WHERE "
	cSQL += " RA_FILIAL  between  '" + cFilDe +"' AND '" +cFilAte  +"' AND "
	cSQL += " RA_MAT     between  '" + cMatDe    +"' AND '" +cMatAte     +"' AND "
	cSQL += " RA_CC      between  '" + cCcDe     +"' AND '" +cCcAte     +"' AND "
	cSQL += " RA_SINDICA between  '" + cSindDe   +"' AND '" +cSindAte   +"' AND "
	cSQL += " RA_SITFOLH IN ("   + Upper(cSitQuery)    + ") AND "
	cSQL += " RA_CATFUNC IN ("   + Upper(cCatQuery)    + ") AND "
	cSQL += " D_E_L_E_T_ = ' ' "

	// DEFINE ORDER BY DE ACORDO COM A ORDEM...
	cSQL 		+= " ORDER BY RA_FILIAL,RA_MAT "
	cSQL     	:= ChangeQuery(cSQL)
	aStruSRA 	:= SRA->(dbStruct())
	SRA->( dbCloseArea() ) //Fecha o SRA para uso da Query
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cSQL),"SRA",.F.,.T.)
	For nS := 1 To Len(aStruSRA)
		If ( aStruSRA[nS][2] <> "C" )
			TcSetField("SRA",aStruSRA[nS][1],aStruSRA[nS][2],aStruSRA[nS][3],aStruSRA[nS][4])
		EndIf
	Next nS

	DbSelectArea("SRA")
	DbGotop()

	If !lRobo
		GPProcRegua(SRA->(RecCount()))
	Endif

	While !Eof()
		If !lRobo
			GPIncProc(STR0010+SRA->RA_FILIAL+" - "+SRA->RA_MAT+ If(lOfuscaNom, "", " - "+SRA->RA_NOME) )
		Endif

		If !lQuery
			If (SRA->RA_MAT     < cMatDe) .Or. (SRA->RA_MAT     > cMatAte) .Or. ;
			   (SRA->RA_FILIAL  < cFilDe) .Or. (SRA->RA_FILIAL> cFilAte) .Or. ;
			   (SRA->RA_CC      < cCcDe ) .Or. (SRA->RA_CC      > cCcAte ) .or. ;
			   (SRA->RA_SINDICA < cSindDe ) .or. ( SRA->RA_SINDICA > cSindAte )
				DbSkip()
				Loop
			EndIf
			If !( SRA->RA_SITFOLH $ cSituacao ) .Or. !(SRA->RA_CATFUNC $ cCategoria)
				DbSkip()
				Loop
			EndIf
		EndIF

		If !(SRA->RA_FILIAL $ fValidFil()) .Or. !Eval(cAcessaSRA)
			DBSKIP()
			Loop
		EndIf

		cFil := SRA->RA_FILIAL
		cMat := SRA->RA_MAT
		cCC  := SRA->RA_CC

		//ITEM E CLASSE DE VALOR
		If lItemClVl
			cItem := SRA->RA_ITEM
			cClVl := SRA->RA_CLVL
		EndIf

		//ENCONTRA O PERIODO EM ABERTO
		If cPaisLoc == "BRA"
			aPerAtual := {}
			fGetPerAtual(@aPerAtual, xFilial("RCH"), SRA->RA_PROCES, cRot)
			If Empty(aPerAtual)
				If aTotRegs[6]== 0
					cLog := OemToAnsi(STR0186) +  cRot // "Roteiro sem período aberto: "
					Aadd(aTitle,cLog)
					Aadd(aLog,{})
					aTotRegs[6] := len(aLog)
				EndIf
				Aadd(aLog[aTotRegs[6]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+"-"+If(lOfuscaNom, Replicate('*',30), SRA->RA_NOME) )
				DbSelectArea('SRA')
				DbSkip()
				Loop
			EndIf
			If dIniPg < aPerAtual[1][6] // RCH_DTINI
				If aTotRegs[5]== 0
					cLog := STR0175 // "Data inicial não pode ser menor do que o período aberto"
					Aadd(aTitle,cLog)
					Aadd(aLog,{})
					aTotRegs[5] := len(aLog)
				EndIf
				Aadd(aLog[aTotRegs[5]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+"-"+If(lOfuscaNom, Replicate('*',30), SRA->RA_NOME) )
				DbSelectArea('SRA')
				DbSkip()
				Loop
			EndIF
		EndIf

		If nAcao == 3
			cFil	:= SRA->RA_FILIAL
			cMat	:= SRA->RA_MAT
			cKeySeek := (cFil + cMat) //MONTA A CHAVE PARA PESQUISA EM GDMONTACOLS
			//DEFINE OS CAMPOS QUE NAO SERAO MOSTRADOS
			If !lItemClVl
				aGpa550Field := {;
					"RG1_FILIAL" ,;
					"RG1_MAT" ,;
					"RG1_ITEM" ,;
					"RG1_CLVL" ;
				}
			Else
				aGpa550Field := {;
					"RG1_FILIAL" ,;
					"RG1_MAT" ;
				}
			EndIf
			aGdNaoAltera := { } //DEFINE OS CAMPOS QUE NAO SERAO ALTERADOS
			BSKIP := { || .F. } //MONTA BLOCO PARA SKIP EM GDMONTACOLS
			QrysTop()
			aColsRG1 := {}
			aColsRG1 := GdMontaCols(@aHeader,@nUsado,@aVirtual,@aVisual,"RG1",aGpa550Field,@aColsRec,"RG1",cKeySeek,NIL,bSkip,NIL,NIL,NIL,NIL,NIL,NIL,aQueryCond,.F.,.F.,.T.)

			nPosSeq 	:= GdFieldPos("RG1_ORDEM",aHeader)
			nPosStatus	:= GdFieldPos("RG1_STATUS",aHeader)
			nPosPd		:= GdFieldPos("RG1_PD",aHeader)
			nPosDtIni	:= GdFieldPos("RG1_DINIPG",aHeader)
			nPosDtFim	:= GdFieldPos("RG1_DFIMPG",aHeader)
			nPosRot	:= GDFieldPos("RG1_ROT",aHeader)

			//CONTROLE DE QUANTIDADES DE LANÇAMENTOS POR VERBA
			If !Empty(aColsRG1) .AND. !Empty(aColsRG1[1, nPosPd])
				aComp		:= Array(1,5)
				lExcedeu	:= .F.
				ASIZE(aColsRG1,Len(aColsRG1)+1)
				aColsRG1[Len(aColsRG1)] := {}
				For nx := 1 to Len(aHeader) // ATRIBUI DE ACORDO COM AS POSICOES DO AHEADER
					Do Case
						Case nx == nPosRot
							aAdd(aColsRG1[Len(aColsRG1)], cRot)
						Case nx == nPosPd
							aAdd(aColsRG1[Len(aColsRG1)], cVerba)
						Case nx == nPosDtIni
							aAdd(aColsRG1[Len(aColsRG1)], dIniPg)
						Case nx == nPosDtFim
							aAdd(aColsRG1[Len(aColsRG1)], dFimPg)
						Case nx == nPosStatus
							aAdd(aColsRG1[Len(aColsRG1)], "1")
						OTHERWISE
							If aHeader[nx, 8] $ "C|M"
								aAdd(aColsRG1[Len(aColsRG1)], "")
							ElseIf aHeader[nx, 8] == "N"
								aAdd(aColsRG1[Len(aColsRG1)], 0)
							ElseIf aHeader[nx, 8] == "D"
								aAdd(aColsRG1[Len(aColsRG1)], CTOD(""))
							ElseIf aHeader[nx, 8] == "L"
								aAdd(aColsRG1[Len(aColsRG1)], .T.)
							EndIf
					EndCase
				Next nx

				For nCont := 1 To Len(aColsRG1)

					//SE NAO ESTIVER DELETADO E STATUS FOR IGUAL A ABERTO
					If  aColsRG1[nCont, nPosStatus] == "1"
						cVerba		:= aColsRG1[nCont, nPosPd]
						cTLanc		:= PosSrv(aColsRG1[ nCont , nPosPD ], SRA->RA_FILIAL, "RV_QTDLANC")
						cTLanc		:= If((cTLanc == "0" .Or. Empty(cTLanc)), "1", cTLanc)
						dDTFim		:= aColsRG1[nCont, nPosDtFim]
						dDTIni		:= aColsRG1[nCont, nPosDtIni]
						lIdMultV	:= PosSrv(aColsRG1[nCont, nPosPD], SRA->RA_FILIAL, "RV_CODFOL") $ '288|0288|289|0289|290|0290|291|0291'

						If (lRobo .Or. !lIdMultV) .And. Empty(dDTFim) // Se data Final nao estiver preenchida, sera considerado dois anos posteriores a Data Inicial
							dDTFim := YearSum(dDTIni, 2)
						EndIf

						If !lRobo .And. lIdMultV .And. Empty(dDTFim)
							Help(,, OemToAnsi(STR0206),, + CRLF + OemToAnsi(STR0207) + cValToChar(nCont) + CRLF + OemToAnsi(STR0208), 1, 0)// "Atenção" ## "Campo Dt.Fim Pagto não pode ficar em branco, pois dessa forma, apenas o primeiro mês sera considerado."
							lRet := .F.
							Break
						EndIf

						// CARREGA OS PERIODOS ENTRE DUAS DATAS
						Aadd(aPeriodos, RHPerDat(dDTIni, dDTFim, 1))
						For ny := 1 to Len(aPeriodos[1])
							If cPaisLoc <> "BRA"
								nPosPer := aScan(aComp, {|X| X[1] == aPeriodos[1, ny] .AND. X[2] == aColsRG1[nCont, nPosPd]})
							Else
								nPosPer := aScan(aComp, {|X| X[1] == aPeriodos[1, ny] .AND. X[2] == aColsRG1[nCont, nPosPd] .AND. X[3] == aColsRG1[nCont, nPosRot]})
							EndIf
							If nPosPer == 0
								If cPaisLoc <> "BRA"
									aComp[Len(Acomp), 1] := aPeriodos[1, ny]
									aComp[Len(Acomp), 2] := aColsRG1[nCont, nPosPd]
									aComp[Len(Acomp), 3] := 1
									aComp[Len(Acomp), 4] := "1"
									aComp[Len(Acomp), 5] := AllTrim(STR(nCont))
									ASIZE(aComp,Len(aComp)+1) // REDEFINE TAMANHO INCREMENTANDO UMA LINHA
									aComp[Len(Acomp)] := {"", "",0, ""}
								Else
									aComp[Len(Acomp), 1] := aPeriodos[1, ny]
									aComp[Len(Acomp), 2] := aColsRG1[nCont, nPosPd]
									aComp[Len(Acomp), 3] := aColsRG1[nCont, nPosRot]
									aComp[Len(Acomp), 4] := 1
									aComp[Len(Acomp), 5] := AllTrim(STR(nCont))
									ASIZE(aComp,Len(aComp)+1) // REDEFINE TAMANHO INCREMENTANDO UMA LINHA
									aComp[Len(Acomp)] := {"", "", "",0, ""}
								EndIf
							Else
								nQtde 	:= If(cPaisLoc <> "BRA",aComp[nPosPer,3]+1,aComp[nPosPer,4]+1)
								cLinhas	:= If(cPaisLoc <> "BRA",aComp[nPosPer, 4] + ", " + AllTrim(STR(nCont)),aComp[nPosPer, 5] + ", " + AllTrim(STR(nCont))) // INDICA LINHAS DA OCORRENCIA
								If nQtde  > Val(cTLanc)
									lExcedeu := .T.
									If aTotRegs[7]== 0
										cLog := ( OemToAnsi(STR0176) + cVerba + CRLF +; // "Há período(s) que excede(m) a quantidade permitida para a verba: "
											If(cPaisLoc <> "BRA", + CRLF, (OemToAnsi(STR0177) + aColsRG1[nCont, nPosRot] + CRLF)) +; // "Roteiro: "
											OemToAnsi(STR0178) +  OemToAnsi(STR0179)  + Substr(aComp[nPosPer, 1], 1, 2) + ; // "Período conflitante: "  ### "Mês: "
											OemToAnsi(STR0180) + Substr(aComp[nPosPer, 1], 3, 4) +  CRLF + ; // " Ano: "
											OemToAnsi(STR0181) + AllTrim(STR(nQtde)) + CRLF +; // "Ocorrências: "
											OemToAnsi(STR0182) + cTLanc + CRLF ) // "Quantidade permitida: "
										Aadd(aTitle,cLog)
										Aadd(aLog,{})
										aTotRegs[7] := len(aLog)
									EndIf
									Aadd(aLog[aTotRegs[7]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+"-"+If(lOfuscaNom, Replicate('*',30), SRA->RA_NOME) )
									nCont := Len(aColsRG1)
									Exit
								EndIf
							EndIf
						Next ny
						aPeriodos := {}
					EndIf
				Next
			EndIf

			If lExcedeu // Controle externo aos For's para dar Loop na SRA
				DbSelectArea('SRA')
				SRA->(DbSkip())
				Loop
			EndIf
		EndIf

		If cAutomat = '1'
			cSeq := '001'
		Else
			cSeq := '900'
		EndIF

		DbSelectArea("RG1")
		If cPaisLoc == "BRA"
			RG1->(DbSetOrder(RetOrder("RG1", "RG1_FILIAL+RG1_MAT+RG1_PD+RG1_ROT")))
			cChave	:= cFil+cMat+cVerba+cRot
		Else
			RG1->(DbSetOrder(RetOrder("RG1", "RG1_FILIAL+RG1_MAT+RG1_PD+DTOS(RG1_DINIPG)")))
			cChave	:= cFil+cMat+cVerba
		EndIf
		// nAcao = 1-Sim; 2=Nao; 3=Inclui Novo
		If DBSeek(cChave)
			If nAcao = 2
				If aTotRegs[1]== 0
					cLog := STR0026 // "Registros Nao incluidos, pois ja existem com a mesma verba"
					Aadd(aTitle,cLog)
					Aadd(aLog,{})
					aTotRegs[1] := len(aLog)
				EndIf
				Aadd(aLog[aTotRegs[1]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+"-"+If(lOfuscaNom, Replicate('*',30), SRA->RA_NOME) )
				DbSelectArea('SRA')
				DbSkip()
				Loop
			ElseIf nAcao = 1
				nRecno := Recno()
				cChave  := cFil+cMat+RG1->RG1_PD
				DbSkip()
				If cChave == RG1->RG1_FILIAL+RG1->RG1_MAT+RG1->RG1_PD
					If aTotRegs[4]== 0
						cLog := STR0030 //"Nao e possivel Sobrepor o Registro, pois existem mais de um lancamento com o memso evento"
						Aadd(aTitle,cLog)
						Aadd(aLog,{})
						aTotRegs[4] := len(aLog)
					EndIf
					cTexto	:= If(cPaisLoc <> "BRA", ""," - " + cRot + " - " + fDesc("SRY", cRot, "RY_DESC"))
					Aadd(aLog[aTotRegs[4]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+" - "+If(lOfuscaNom, Replicate('*',30), SRA->RA_NOME) + " - " + cVerba + " - " + PosSrv(cVerba,SRA->RA_FILIAL,'RV_DESC') + cTexto)
					DbSelectArea('SRA')
					DbSkip()
					Loop
				Else
					DbGoto(nRecno)
				EndIF
				If aTotRegs[2]== 0
					cLog := STR0027 //"Registros ja existentes, porem foram Sobrepostos"
					Aadd(aTitle,cLog)
					Aadd(aLog,{})
					aTotRegs[2] := len(aLog)
				EndIf
				cTexto	:= If(cPaisLoc <> "BRA", ""," - " + cRot + " - " + fDesc("SRY", cRot, "RY_DESC"))
				Aadd(aLog[aTotRegs[2]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+" - "+If(lOfuscaNom, Replicate('*',30), SRA->RA_NOME) + " - " + cVerba + " - " + PosSrv(cVerba,SRA->RA_FILIAL,'RV_DESC') + cTexto)
				fGravaRG1(cFil, cMat, .F.)
				If !Empty(cTextMemo)
					MSMM(,80,,cTextMemo,1,,,"RG1","RG1_CMEMO","RE6")
				EndIf
				DbSelectArea('SRA')
				DbSkip()
				Loop
			EndIF
		EndIf

		DbSetOrder(1)
		If DbSeek(cFil+cMat)
			While cFil+cMat == RG1->RG1_FILIAL+RG1->RG1_MAT .AND.! Eof()
				If cAutomat = '1' .and. RG1->RG1_AUTOM = '1'
					cSeq := StrZero(Val(RG1->RG1_ORDEM)+1,3)
				ElseIf cAutomat = '2' .and. RG1->RG1_AUTOM = '2'
					cSeq := StrZero(Val(RG1->RG1_ORDEM)+1,3)
				EndIF
				DbSkip()
			EndDo
		EndIf
		If aTotRegs[3]== 0
			cLog := STR0028 //"Registros Incluidos"
			Aadd(aTitle,cLog)
			Aadd(aLog,{})
			aTotRegs[3] := len(aLog)
			lGeraRaz := .T.
		EndIf
		cTexto	:= If(cPaisLoc <> "BRA", ""," - " + cRot + " - " + fDesc("SRY", cRot, "RY_DESC"))
		Aadd(aLog[aTotRegs[3]], SRA->RA_FILIAL+"-"+SRA->RA_MAT+" - "+If(lOfuscaNom, Replicate('*',30), SRA->RA_NOME) + " - " + cVerba + " - " + PosSrv(cVerba,SRA->RA_FILIAL,'RV_DESC') + cTexto)
		fGravaRG1(cFil,cMat,.t.)
		If !Empty(cTextMemo)
			MSMM(,80,,cTextMemo,1,,,"RG1","RG1_CMEMO","RE6")
		EndIf

		If lGeraRaz
			SRV->(DbSetOrder(1))
			If SRV->(DbSeek(xFilial("SRV") + cVerba))
				If SRV->RV_CODFOL $ "0288|0289"
					oModel     	:= FWLoadModel( "GPEA924")
					dbSelectArea("RAW")
					RAW->(dbSetOrder(1))
					If RAW->(dbSeek(SRA->RA_FILIAL+SRA->RA_MAT) )
						oModel:SetOperation(4)
						oModel:Activate()
						lRet := FWExecView(OemtoAnsi(STR0007), "GPEA924", 4,,{||.T.},,,,,,,oModel) //"Multiplos Vinculos" Alterar
					Else
						oModel:SetOperation(3)
						oModel:Activate()
						lRet := FWExecView(OemtoAnsi(STR0006), "GPEA924", 3,,{||.T.}) //"Multiplos Vinculos" Incluir
					EndIf
					RAW->(dbCloseArea())
				EndIf
			EndIf
			lGeraRaz := .F.
		EndIf

		DbSelectArea("SRA")
		DbSkip()
	EndDo
	DbSelectArea("RG1")
	DbSetOrder(1)

	SRA->(dbCloseArea()) //FECHA O SRA DE USO DA QUERY
	dbSelectArea("SRA")

	RetIndex("SRA")

	fMakeLog(aLog,aTitle,,,"GPA550"+DTOS(dDataBase),STR0029,"M","P",,.F.)//  "Log de Ocorrencias - Lancamentos Fixos"
Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fGravaRG1 | Autor ³ Reginaldo                ³ Data ³ 04/11/05³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Grava lancamentos no RG1.                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ gpea550                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fGravaRG1(cFil,cMat,lInclui)
    RecLock("RG1", lInclui)

	If lInclui
	    RG1->RG1_FILIAL	:= cFil
	    RG1->RG1_MAT	:= cMat
	    RG1->RG1_PD		:= cVerba
	    RG1->RG1_ROT	:= If(cPaisLoc <> "BRA","",cRot)
	    RG1->RG1_ORDEM	:= cSeq
	EndIf

    RG1->RG1_CC		:= cCC
    RG1->RG1_AUTOM	:= cAutomat
    RG1->RG1_TPCALC	:= cTipo
	RG1->RG1_CODTAB	:= cCodTab
	RG1->RG1_LINHA	:= nLinha
	RG1->RG1_COLUNA	:= nColuna
	RG1->RG1_REFER	:= nRefe
	RG1->RG1_VALOR	:= nValor
	RG1->RG1_DINIPG	:= dIniPg
	RG1->RG1_DFIMPG	:= dFimPg
	RG1->RG1_PROP	:= cProp
	RG1->RG1_STATUS	:= "1" // 1=ABERTO;2=FECHADO

	// CAMPOS DA GESTAO PUBLICA
	If lGPublica
		RG1->RG1_TPDATO	:= cTpDAto
		RG1->RG1_DTBLEG	:= dDtBaseLeg
		RG1->RG1_TPBLEG	:= cTpBLeg
		RG1->RG1_NRBLEG	:= cNrBaseLeg
	Endif

	//ITEM E CLASSE DE VALOR
	If lItemClVl
		RG1->RG1_ITEM	:= cItem
		RG1->RG1_CLVL	:= cClVl
	EndIf

	MsUnlock()
Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fSequencia| Autor ³ Reginaldo           ³ Data ³ 30/08/02     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Controla a Sequencia de acordo com  o Tipo digitada           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ gpea550                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Function fSequencia(cTipo, cSeq, lPict)
Local nX
Local ny
Local nTotLin 	:= 0
Local nPosSeq	:= GdFieldPos("RG1_ORDEM")
Local aArray	:= {}

Default lPict := .F.

If lPict
	cSeq := Strzero(Val(cSeq),3)
	If !lRobo
		oGet:aCols[oGet:nAt,nPosSeq] := cSeq
	Else
		aCols[n][nPosSeq] := cSeq
	EndIf
	Return .T.
EndIf

aArray := aClone(aColsAux)
For nX := 1 to len(oGet:aCols)
	aAdd(aArray,oGet:aCols[nX])
Next nX

nTotLin := Len(aArray)

If cTipo = '1'
   cSeq  := "000"
Else
   cSeq  := "900"
EndIf

For ny := 1 To nTotLin
	If cTipo = '1' .and. aArray[ny,nPosSeq] < '900'
    	If aArray[ny,nPosSeq] > cSeq
        	cSeq := aArray[ny,nPosSeq]
		EndIf
	ElseIf cTipo = '2' .and. aArray[ny,nPosSeq] > '900'
    	If aArray[ny,nPosSeq] > cSeq
        	cSeq := aArray[ny,nPosSeq]
     	EndIf
	EndIf
Next
cSeq := Strzero(Val(cSeq)+1,3)

oGet:aCols[oGet:nAt,nPosSeq] := cSeq

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³fTpContra ³ Autor ³ Equipe RH  		    ³ Data ³ 02/03/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Selecionar Tipo de Calculo 								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fTpContra()											 	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fTpCalc(l1Elem,lForca)
Local cTitulo:=""
Local MvPar
Local MvParDef:=""

Private aTipo:={}
Default	lForca	:= .F.
l1Elem := If (l1Elem = Nil , .F. , .T.)

cAlias := Alias() 					 // Salva Alias Anterior
MvPar:=&(Alltrim(ReadVar()))		 // Carrega Nome da Variavel do Get em Questao
MvRet:=Alltrim(ReadVar())			 // Iguala Nome da Variavel ao Nome variavel de Retorno

aTipo:= fTpCalcBox(.f.)

MvParDef:="1234567"
cTitulo :=STR0024  //"Tipo Calculo"

IF f_Opcoes(@MvPar,cTitulo,aTipo,MvParDef,12,49,.T.,Iif(lForca,1,nil),Iif(lForca,2,nil))  // Chama funcao f_Opcoes
	&MvRet := mvpar										 // Devolve Resultado
EndIF
dbSelectArea(cAlias) 								 // Retorna Alias
Return( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ GPa550Ok ³ Autor ³ R.H.                  ³ Data ³ 20/01/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Confirma configuracao de parametros                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA550                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GPA550Ok()
Return (MsgYesNo(OemToAnsi(STR0021),OemToAnsi(STR0022))) //"Confirma configura‡„o dos parƒmetros?"###""Atenção""

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fTabLinhas³ Autor ³ Kelly Soares          ³ Data ³ 25.11.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Exibe os registros da tabela para selecao da linha desejada.³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³cOrigem: "1" - Manut. / "2" - Gerar Verbas                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fTabLinhas(cOrigem)
	Local bSet15
	Local bSet24
	Local oBtn1
	Local oBtn2

	Local nX, nY
	Local nCont
	Local nPosTab  := 0
	Local cCodTab  := ""
	Local cDescTab := ""
	Local cTitulo  := ""
	Local cExibe

	Local aAdvSize		 := {}
	Local aInfoAdvSize   := {}
	Local aObjSize		 := {}
	Local aObjCoords	 	 := {}

	Local aAdv1Size		:= {}
	Local aInfo1AdvSize	:= {}
	Local aObj1Coords	:= {}
	Local aObj1Size		:= {}

	Private oDlg
	Private oGroup
	Private oFont1
	Private oFont2
	Private oLbxLinha
	Private cLbxLinha
	Private oVerde := LoadBitmap( GetResources(), "BR_VERDE" )
	Private oNada  := LoadBitmap( GetResources(), "" )

	Private nOpcao   := 0
	Private nPosLin  := 0
	Private nPosCol  := 0
	Private nLinAtu  := 0

	Private aTabela  := {}
	Private aNomes   := {}
	Private aDados   := {}
	Private aTamanho := {}


	If cOrigem == "1"
			nPosTab := Ascan( aHeader, { |x| Trim(x[2]) == "RG1_CODTAB" } )
			cCodTab := AllTrim(oGet:aCols[n,nPosTab])
		If cCodTab == ""
				cCodTab := "M->RG1_CODTAB"
			Endif
			nPosLin := Ascan( aHeader, { |x| Trim(x[2]) == "RG1_LINHA" } )
			nPosCol := Ascan( aHeader, { |x| Trim(x[2]) == "RG1_COLUNA" } )
			nLinAtu := oGet:aCols[n,nPosLin] //carrega posição que estava ateriormente
		ElseIf cOrigem == "2"
			cCodTab := MV_PAR04
			nPosLin := 5  // mv_par05
			nLinAtu := MV_PAR05
		ElseIf cOrigem == "3"
			cCodTab := cTabelaDe
			nLinAtu := nLinhaDe
		ElseIf cOrigem == "4"
			cCodTab := cTabelaPara
			nLinAtu := nLinhaPara
	Endif

	// Cai fora se estiver nos parametros do "Gerar Verba" e nao indicar o tipo 4 = Tabela
	If (cOrigem == "2") .and. !( MV_PAR02 == "4")
		Return
	Endif

	If ( (cOrigem == "1") .or. ;
	   ( (cOrigem == "2") .and. (MV_PAR02 == "4") ) .or. ;
	   ( (cOrigem == "3") .and. (cTipCalcDe == "4") ) .or. ;
	   ( (cOrigem == "4") .and. (cTipCalcPara == "4") ) ) .and. ( Empty(cCodTab) )

		AVISO(OemToAnsi(STR0047),OemToAnsi(STR0053),{'OK'},,)  //"Informe a tabela antes de definir Linha e Coluna."

	Else

	// Carrega codigo e nome da tabela
		RCB->( DbSelectArea("RCB") )
		RCB->( DbSetOrder(1) )
		RCB->( DbSeek(xFilial("RCB") + cCodTab) )

		cDescTab := RCB->RCB_DESC
		cTitulo  := cCodTab+" - "+cDescTab

	// Carrega as seguintes arrays: dados dos campos, titulos e tamanhos

		SX3->( DbSelectArea("SX3") )
		SX3->( DbSetOrder(1) )
		SX3->( DbSeek("RCC" + "03") )

		aAdd( aNomes , Space(1) )
		aAdd( aTamanho , 10 )

		For nCont:=1 to 3  // Filial, Mes/Ano e Sequencia
			aAdd( aTabela , { StrZero(nCont,2) , ;
			                  "00" , ;
			                  Upper(SX3->X3_CAMPO) , ;
			                  Upper(X3TITULO()) , ;
			                  SX3->X3_TIPO , ;
			                  SX3->X3_TAMANHO , ;
			                  SX3->X3_DECIMAL } )
			aAdd( aNomes , X3TITULO() )
			aAdd( aTamanho , SX3->X3_TAMANHO * 12 )
			SX3->( DbSkip()	)
		Next nCont

		While !RCB->( Eof() ) .and. RCB->RCB_CODIGO == cCodTab
			aAdd( aTabela , { StrZero(nCont,2) , ;
							  RCB->RCB_ORDEM , ;
							  RCB->RCB_CAMPOS , ;
							  RCB->RCB_DESCPO , ;
							  RCB->RCB_TIPO , ;
							  RCB->RCB_TAMAN , ;
							  RCB->RCB_DECIMA } )
			aAdd( aNomes   , Upper(RCB->RCB_DESCPO) )
			aAdd( aTamanho , RCB->RCB_TAMAN * 12)
			nCont ++
			RCB->( DbSkip() )
		Enddo

	// Carrega array com registros da tabela
		If !fBuscaDados(@aDados,aTabela,Len(aTabela),cCodTab,cOrigem)
			Return
		Endif

		cExibe := ""

		DEFINE FONT oFont1  NAME "Arial"        SIZE 7,16 BOLD
		DEFINE FONT oFont2  NAME "Arial"        SIZE 7,14 BOLD


		//MONTA AS DIMENSOES DOS OBJETOS
		aAdvSize		:= MsAdvSize(,.T.,370)
		aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
		aObjSize := MsObjSize( aInfoAdvSize , aObjCoords )

		aAdv1Size    := aClone(aObjSize[1])

		aInfo1AdvSize    := { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 5 , 5 }
		aAdd( aObj1Coords , { 000 , 020 , .T. , .F. } )
		aAdd( aObj1Coords , { 000 , 000 , .T. , .T., .T. } )
		aObj1Size := MsObjSize( aInfo1AdvSize , aObj1Coords )

		DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0044) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL

		@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup TO aObjSize[1,3] , aObjSize[1,4] PROMPT Upper(STR0058) OF oDlg PIXEL
			oGroup:SetFont(oFont1)
			oGroup:SetColor(CLR_BLUE)

		@ aObj1Size[1,1]+10,aObj1Size[1,2] SAY STR0046 + ":  " + cTitulo SIZE 200,007 OF oDlg PIXEL FONT oFont2

		@ aObj1Size[2,1],aObj1Size[2,2] LISTBOX oLbxLinha VAR cLbxLinha FIELDS HEADER	"" ;
			ON DBLCLICK ( fOpcao1(aDados,oLbxLinha,nPosLin,cOrigem,"L") );
			SIZE aObj1Size[2,3],aObj1Size[2,4] OF oDlg PIXEL
	 		oLbxLinha:SetArray(aDados)
	 		oLbxLinha:aHeaders := aNomes
	 		oLbxLinha:aColSizes:= aTamanho
			oLbxLinha:LHSCROLL := .T.
			oLbxLinha:LVSCROLL := .T.
			oLbxLinha:nAt      := Max(If(nLinAtu>=Len(aDados),1,nLinAtu+1),1)

			cExibe := "{ || { "

			cExibe += "If ( !Empty( AllTrim( aDados[oLbxLinha:nAt,3] ) ) , oVerde , oNada ) , "

			For nX := 1 to Len(aTabela)
				cExibe += "aDados[oLbxLinha:nAt,"+StrZero(nX,2)+"]"
				If nX < Len(aTabela)
					cExibe += " , "
				Endif
			Next nX

			cExibe += " } }"

			oLbxLinha:bLine    := &cExibe

			oLbxLinha:Refresh()

		bSet15 := {||fOpcao1(aDados,oLbxLinha,nPosLin,cOrigem,"L")}
		bSet24 := {||oDlg:End()}

		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg , bSet15 , bSet24 , Nil )  CENTERED

	Endif
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fTabColunas³ Autor ³ Kelly Soares         ³ Data ³ 28.11.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Exibe os campos da tabela para selecao da coluna desejada.  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³cOrigem: "1" - Manut. / "2" - Gerar Verbas                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fTabColunas(cOrigem)
	Local bSet15
	Local bSet24
	Local oBtn1
	Local oBtn2
	Local nPosTab  := 0
	Local cCodTab  := ""
	Local cDescTab := ""
	Local cTitulo  := ""
	Local nCont
	Local nX
	Local nMaiorTitulo := 0
	Local aButtons		:= {}
	Local aAdvSize		:= {}
	Local aObjCoords	:= {}
	Local aInfoAdvSize	:= {}

	Local aAdv1Size		:= {}
	Local aInfo1AdvSize	:= {}
	Local aObj1Coords	:= {}
	Local aObj1Size		:= {}

	Private oDlg
	Private oFont1
	Private oFont2
	Private oLbxCol
	Private cLbxCol
	Private oVerde := LoadBitmap( GetResources(), "BR_VERDE" )
	Private oCinza := LoadBitmap( GetResources(), "BR_CINZA" )
	Private oNada  := LoadBitmap( GetResources(), "" )

	Private nOpcao  := 0
	Private nPosLin := 0
	Private nPosCol := 0
	Private nLinAtu := 0
	Private nColAtu := 0

	Private aTabela := {}
	Private aDados  := {}
	Private aTamanho := {}

	If cOrigem == "1"
		nPosTab := Ascan( aHeader, { |x| Trim(x[2]) == "RG1_CODTAB" } )
		cCodTab := AllTrim(oGet:aCols[n,nPosTab])
		If cCodTab == ""
			cCodTab := "M->RG1_CODTAB"
		Endif
		nPosLin := Ascan( aHeader, { |x| Trim(x[2]) == "RG1_LINHA" } )
		nPosCol := Ascan( aHeader, { |x| Trim(x[2]) == "RG1_COLUNA" } )
		nLinAtu := oGet:aCols[n,nPosLin]
		nColAtu := oGet:aCols[n,nPosCol]
	ElseIf cOrigem == "2"
		cCodTab := MV_PAR04
		nPosCol := 6  // mv_par06
		nLinAtu := MV_PAR05
		nColAtu := MV_PAR06
	ElseIf cOrigem == "3"
		cCodTab := cTabelaDe
		nLinAtu := nLinhaDe
		nColAtu := nColunaDe
	ElseIf cOrigem == "4"
		cCodTab := cTabelaPara
		nLinAtu := nLinhaPara
		nColAtu := nColunaPara
	Endif

	// Cai fora se estiver nos parametros do "Gerar Verba" e nao indicar o tipo 4 = Tabela
	If (cOrigem == "2") .and. !( MV_PAR02 == "4")
		Return
	Endif

	If ( (cOrigem == "1") .or. ;
	   ( (cOrigem == "2") .and. (MV_PAR02 == "4") ) .or. ;
	   ( (cOrigem == "3") .and. (cTipCalcDe == "4") ) .or. ;
	   ( (cOrigem == "4") .and. (cTipCalcPara == "4") ) ) .and. ( Empty(cCodTab) )

		AVISO(OemToAnsi(STR0047),OemToAnsi(STR0053),{'OK'},,)  //"Informe a tabela antes de definir Linha e Coluna."

	Else

	// Carrega codigo e nome da tabela
		RCB->( DbSelectArea("RCB") )
		RCB->( DbSetOrder(1) )
		RCB->( DbSeek(xFilial("RCB") + cCodTab) )

		cDescTab := RCB->RCB_DESC
		cTitulo  := cCodTab+" - "+cDescTab

	// Carrega a array com os dados dos campos e array de tamanho
		SX3->( DbSelectArea("SX3") )
		SX3->( DbSetOrder(1) )
		SX3->( DbSeek("RCC" + "03") )

		For nCont:=1 to 3  // Filial, Mes/Ano e Sequencia
			If Len(X3TITULO()) > nMaiorTitulo
				nMaiorTitulo := Len(X3TITULO())
			Endif
			aAdd( aTabela , { StrZero(nCont,2) , ;
							  "00" , ;
							  Upper(SX3->X3_CAMPO) , ;
							  Upper(X3TITULO()) , ;
				              SX3->X3_TIPO , ;
				              SX3->X3_TAMANHO , ;
				              SX3->X3_DECIMAL } )
			SX3->( DbSkip()	)
		Next nCont

	// Monta a array com os campos da tabela indicada
		While ( !RCB->( Eof() ) ) .and. ( RCB->RCB_CODIGO == cCodTab )
			If Len(X3TITULO()) > nMaiorTitulo
				nMaiorTitulo := Len(X3TITULO())
			Endif
			aAdd( aTabela , { StrZero(nCont,2) , ;
					  		  RCB->RCB_ORDEM , ;
					  		  Upper(RCB->RCB_CAMPOS) , ;
					  		  Upper(RCB->RCB_DESCPO) , ;
	                          RCB->RCB_TIPO , ;
	                          RCB->RCB_TAMAN , ;
	                          RCB->RCB_DECIMA } )
			nCont ++
			RCB->( DbSkip() )
		Enddo

	// Carrega array com registros da tabela
		If !fBuscaDados(@aDados,aTabela,Len(aTabela),cCodTab,cOrigem)
			Return
		Endif

	// Adiciona uma linha em branco para a selecao das colunas
		aAdd( aTabela , Array(len(aTabela)) )
		For nX := 1 to len(aTabela)-1
			aTabela[len(aTabela),nX] := Space(2)
		Next nX

		aSort(aTabela,,,{ |x,y| x[2]+x[1] < y[2]+y[1] } )

	// Monta a array com os tamanhos
		aAdd( aTamanho , 10 ) 										// Bitmap
		aAdd( aTamanho , Max( Len(STR0063)*5 , 50 ) ) 				// nCont
		aAdd( aTamanho , Max( Len(STR0049)*5 , 20 ) ) 				// Ordem
		aAdd( aTamanho , Max( Len(STR0050)*10 , nMaiorTitulo ) )   	// Nome Campo
		aAdd( aTamanho , Max( Len(STR0064)*10 , 200 ) ) 			// Conteudo

		DEFINE FONT oFont1  NAME "Arial"        SIZE 7,16 BOLD
		DEFINE FONT oFont2  NAME "Arial"        SIZE 7,14 BOLD

		//MONTA AS DIMENSOES DOS OBJETOS
		aAdvSize		:= MsAdvSize(,.T.,370)
		aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
		aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

		aAdv1Size    := aClone(aObjSize[1])

		aInfo1AdvSize    := { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 5 , 5 }
		aAdd( aObj1Coords , { 000 , 020 , .T. , .F. } )
		aAdd( aObj1Coords , { 000 , 000 , .T. , .T., .T. } )
		aObj1Size := MsObjSize( aInfo1AdvSize , aObj1Coords )

		DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0044 ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL

		@ aObjSize[1,1],aObjSize[1,2] GROUP oGroup TO aObjSize[1,3],aObjSize[1,4] PROMPT Upper(STR0059) OF oDlg PIXEL
			oGroup:SetFont(oFont1)
			oGroup:SetColor(CLR_BLUE)

		@ aObj1Size[1,1]+10,aObj1Size[1,2] SAY STR0046 + ":  " + cTitulo SIZE 200,007 OF oDlg PIXEL FONT oFont2

		@ aObj1Size[2,1],aObj1Size[2,2] LISTBOX oLbxCol VAR cLbxCol FIELDS HEADER	Space(1) , oEmToAnsi(STR0063) , oEmToAnsi(STR0049) , oEmToAnsi(STR0050) , oEmToAnsi(STR0064) ;
			ON DBLCLICK ( fOpcao1(aTabela,oLbxCol,nPosCol,cOrigem,"C") );
			SIZE aObj1Size[2,3],aObj1Size[2,4] OF oDlg PIXEL
	 		oLbxCol:SetArray(aTabela)
			oLbxCol:aColSizes := aTamanho
			oLbxCol:LHSCROLL := .T.
			oLbxCol:LVSCROLL := .T.
			oLbxCol:nAt      := Max(If(nColAtu>=Len(aTabela),1,nColAtu+1),1)
			oLbxCol:bLine := { || { If ( !Empty( AllTrim( aTabela[oLbxCol:nAt,2] ) ) , If ( aTabela[oLbxCol:nAt,2] == "00" , oCinza , oVerde ) , oNada ) , aTabela[oLbxCol:nAt,1] , aTabela[oLbxCol:nAt,2] , aTabela[oLbxCol:nAt,4] , If ( !Empty( AllTrim( aTabela[oLbxCol:nAt,3] ) ) , aDados[nLinAtu+1,oLbxCol:nAt-1] , aDados[oLbxCol:nAt,1] ) } }

			oLbxCol:Refresh()

		bSet15 := {||fOpcao1(aTabela,oLbxCol,nPosCol,cOrigem,"C")}
		bSet24 := {||oDlg:End()}

		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg , bSet15 , bSet24 , Nil , aButtons )  CENTERED
	Endif
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fOpcao1        ³ Autor: Kelly Soares     ³ Data ³ 30.11.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna linha/coluna selecionada.                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fOpcao1(aArray,oLbx,nPos,cOrigem,cTipo)
	Local nRetorno := 0

	If !(aArray[oLbx:nAt,2] == "00")
		nRetorno := Val(aArray[oLbx:nAt,If(cTipo=="L",3,1)])

		If cOrigem == "1"
			oGet:aCols[n,nPos] := nRetorno
			cCampo:= oGet:aHeader[nPos][2]
			aCols[n,nPos] := nRetorno
			oGet:oBrowse:Refresh()
		ElseIf cOrigem == "2"
			&("MV_PAR"+StrZero(nPos,2)) := nRetorno
		ElseIf cOrigem == "3"
			If (cTipo=="L",nLinhaDe:=nLinhaPara:=nRetorno,nColunaDe:=nColunaPara:=nRetorno)
		ElseIf cOrigem == "4"
			If(cTipo=="L",nLinhaPara:=nRetorno,nColunaPara:=nRetorno)
		Endif

		oDlg:End()
	Endif
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fTemLanctoFixo ³ Autor: Kelly Soares     ³ Data ³ 30.11.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Checa a existencia da linha e coluna atuais nos lancamentos³±±
±±³          ³ fixos, para permitir ou nao a alteracao/exclusao.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cTab = Tabela                                              ³±±
±±³          ³ nLin = Linha                                               ³±±
±±³          ³ nCol = Coluna                                              ³±±
±±³          ³ cOrigem = 1 - Definicao Tabelas / 2 - Manutencao Tabelas   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fTemLanctoFixo(cTab,nLin,nCol,cOrigem)
	Local aArea := GetArea()
	Local aAreaRG1 := RG1->( GetArea() )
	Local lTem
	Local lColuna := If ( nCol = 0 , .F. , .T. )

	SX3->( DbSelectArea("SX3") )
	SX3->( DbSetOrder(1) )
	RG1->( DbSelectArea("RG1") )

	If cOrigem == "1"
		RG1->( DbSetOrder(5) )
		lTem := ( SX3->( DbSeek("RG1") ) ) .and. ( RG1->( DbSeek(cTab + Str(nCol,3)) ) )
	Else
		RG1->( DbSetOrder(4) )

		If lColuna
			lTem := ( SX3->( DbSeek("RG1") ) ) .and. ( RG1->( DbSeek(cTab + Str(nLin,3) + Str(nCol,3)) ) )
		Else
			lTem := ( SX3->( DbSeek("RG1") ) ) .and. ( RG1->( DbSeek(cTab + Str(nLin,3)) ) )
		Endif
	Endif

	RestArea( aArea )
	RestArea( aAreaRG1 )
Return lTem

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fBuscaDados    ³ Autor: Kelly Soares     ³ Data ³ 01.12.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Carrega array com registros da tabela.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Static Function fBuscaDados(aArray,aArrayTab,nTam,cCodTab,cOrigem)
	Local nX
	Local nY
	Local nAtual
	Local nTamanho
	Local cFil
	Local cChave
	Local cConteudo
	Local cCont
	Local lOk := .T.
	Local lPosicionou := .F.

	RCC->( DbSelectArea("RCC") )
	RCC->( DbSetOrder(1) )

	lPosicionou := RCC->( DbSeek(xFilial("RCC") + cCodTab) )

	If ( (cOrigem == "1") .or. ;
	   ( (cOrigem == "2") .and. ( MV_PAR02 == "4") ) .or. ;
	   ( (cOrigem == "3") .and. ( cTipCalcDe == "4") ) .or. ;
	   ( (cOrigem == "4") .and. ( cTipCalcPara == "4") ) ) .and. ;
	   ( !lPosicionou )

			If cOrigem == "1"
				oGet:aCols[n,nPosLin] := 0
				oGet:aCols[n,nPosCol] := 0
			Elseif cOrigem == "2"
				mv_par05 := 0
				mv_par06 := 0
			Elseif cOrigem == "3"
				nLinhaDe  := 0
				nColunaDe := 0
			Elseif cOrigem == "4"
				nLinhaPara  := 0
				nColunaPara := 0
			Endif

			AVISO(OemToAnsi(STR0047),OemToAnsi(STR0052),{'OK'},,)  //"Atencao" ### "Não há dados a serem exibidos. A tabela está vazia."
			lOk := .F.

	Endif

	cFil    := RCC->RCC_FIL
	cChave  := RCC->RCC_CHAVE

	// Se nao encontrar registro com Filial e Chave em branco, localiza a do mes/ano corrente
	If ( !Empty(AllTrim(cFil)) ) .and. ( !Empty(AllTrim(cChave)) )

		lPosicionou := RCC->( DbSeek(xFilial("RCC") + cCodTab + xFilial("RG1") + AnoMes(Date())) )

		If ( (cOrigem == "1") .or. ;
		   ( (cOrigem == "2") .and. ( MV_PAR02 == "4") ) .or. ;
		   ( (cOrigem == "3") .and. ( cTipCalcDe == "4") ) .or. ;
		   ( (cOrigem == "4") .and. ( cTipCalcPara == "4") ) ) .and. ;
	  	   ( !lPosicionou )

			If cOrigem == "1"
				oGet:aCols[n,nPosLin] := 0
				oGet:aCols[n,nPosCol] := 0
			Elseif cOrigem == "2"
				mv_par05 := 0
				mv_par06 := 0
			Elseif cOrigem == "3"
				nLinhaDe  := 0
				nColunaDe := 0
			Elseif cOrigem == "4"
				nLinhaPara  := 0
				nColunaPara := 0
			Endif

	   		AVISO(OemToAnsi(STR0047),OemToAnsi(STR0048),{'OK'},,STR0047)  //"Atencao" ### "Nao foi encontrada a tabela do periodo atual."
			lOk := .F.

		Else

			cFil    := RCC->RCC_FIL
			cChave  := RCC->RCC_CHAVE

		Endif

	Endif

	aArray := {}

	aAdd( aArray , Array(nTam) )
	For nX := 1 to nTam
		aArray[1,nX] := Space(1)
	Next nX

	nX := 2
	While !RCC->( Eof() ) .and. RCC->RCC_CODIGO == cCodTab
								//.and. ;
			                    //RCC->RCC_FIL == cFil .and. ;
			                    //RCC->RCC_CHAVE == cChave

		aAdd( aArray , Array(nTam) )

		aArray[nX][1] := RCC->RCC_FIL
		aArray[nX][2] := RCC->RCC_CHAVE
		aArray[nX][3] := RCC->RCC_SEQUEN

		cConteudo := RCC->RCC_CONTEU

		nAtual := 1

		For nY := 4 to nTam
			nTamanho := aArrayTab[nY,6]
			cCont := SubStr(cConteudo,nAtual,nTamanho)
			aArray[nX][nY] := AllTrim(cCont)
			nAtual := nAtual + nTamanho
		Next nY

		nX ++

		RCC->( DbSkip() )

	Enddo

Return lOk

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ TrocaTab550    ³ Autor: Kelly Soares       ³ Data ³ 01.12.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Limpa linha e coluna quando o codigo da tabela for alterado. ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function TrocaTab550(cOrigem)
	If cOrigem == "1"
		If !(M->RG1_CODTAB == oGet:aCols[n][nPosCTab])
			oGet:aCols[n][nPosLin] := 0
			oGet:aCols[n][nPosCol] := 0
		Endif
	ElseIf cOrigem == "2"
		MV_PAR05 := 0
		MV_PAR06 := 0
	Endif
Return .T.

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³gp150MntGetDados   ³       ³					   ³ 	  ³										   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³cAlias                                                                               		       ³
³          ³nOpcX  																							   ³
³          ³cFil - Filial.																					   ³
³          ³cMat - Matricula.																				   ³
³          ³aVirtual - array dos campos virtuais.															   ³
³          ³aColsRec - array que contem o Recno() dos registros da aCols.									   ³
³          ³aColsSR0 																					       ³
³          ³lGravarAntes - indica se deve chamar a funcao de gravacao antes de montar a tela.				   ³
³          ³lEntrada - indica se a funcao gp150MntGetDados esta sendo chamada na entrada da rotina de lanca-   ³
³          ³           mentos por periodo.                                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Logico                                                          								   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³          ³Na alteracao do campo periodo                                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function gp150MntGetDados(cAlias, nOpcX, cFil, cMat, aVirtual, aColsRec, lGravarAntes, lEntrada)
Local nX:= 0

Default lEntrada 	:= .F.

	// Antes de montar a tela, verifica se deseja gravar ... caso tenha tido alguma alteracao.
	If lGravarAntes
		MsAguarde( { || Gpea550Grava( cAlias , cFil , cMat , aVirtual , aColsRec , nOpcx ), OemToAnsi(STR0123) } )
	EndIf

	cMat	:= SRA->RA_MAT

	 //MONTA QUERY PARA A SELECAO DAS INFORMACOES EM GDMONTACOLS
    QrysTop()

	// Se esta entrando na tela, verifica se existe algum lancamento, independente do periodo,
	// para o funcionario selecionado. Se for inclusao, nao deve ter nenhum registro. Se for
	// alteracao, deve ter pelo menos um registro.
	If lEntrada
		cKeySeek := ( cFil + cMat )

      // Monta array Acols
     	aCols := GdMontaCols(@aHeader,@nUsado,@aVirtual,@aVisual,cAlias,aGpa550Field,@aColsRec,cAlias,cKeySeek,NIL,bSkip,NIL,NIL,NIL,NIL,NIL,NIL,aQueryCond,.F.,.F.,.T.)

		IF ( ( nOpcX == 3 ) .and. ( Len( aColsRec ) > 0 ) ) //Quando for Inclusao
			Help(" ",1,"A040CLANC")
			Break
		ElseIf ( nOpcX <> 3 ) .and. ( Len( aColsRec ) == 0 ) .and. (Type( "lResM2" ) == "U" .Or. !lResM2)//Quando Nao for Inclusao
			Help(" ",1,"A040SLANC")
			Break
		EndIF
	EndIf

	cKeySeek := ( cFil + cMat )

	//MONTA OS DETALHES
	RG1->( dbSetOrder( RetOrder( "RG1" , "RG1_FILIAL+RG1_MAT" ) ) )

   // MONTA ARRAY ACOLS
  	aCols := GdMontaCols(@aHeader,@nUsado,@aVirtual,@aVisual,cAlias,aGpa550Field,@aColsRec,cAlias,cKeySeek,NIL,bSkip,NIL,NIL,NIL,NIL,NIL,NIL,aQueryCond,.F.,.F.,.T.)

	nPosPd   := GdFieldPos( "RG1_PD",     aHeader )
	nPosDesc := GdFieldPos( "RG1_DESCPD", aHeader )
	nPosCTab := GdFieldPos( "RG1_CODTAB", aHeader )
	nPosDesTb:= GdFieldPos( "RG1_DESTAB", aHeader )
	nPosLin  := GdFieldPos( "RG1_LINHA",  aHeader )
	nPosCol  := GdFieldPos( "RG1_COLUNA", aHeader )

	//CARREGA, APENAS, OS CAMPOS VIRTUAIS
	MontaVirtuais(nOpcx,lEntrada)

	//CARREGA, APENAS, OS CAMPOS EDITAVEIS
	MontaEditaveis()

  	//SALVA O ACOLS ANTES DA ALTERACAO
	aColsAnt	:= aClone( aCols )

	If !(oGet == nil)
		oGet:aCols := aClone(aCols)
		oGet:Refresh()
	EndIf

Return (.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Gp150Mov ³ Autor ³ Equipe RH             ³ Data ³ 19/07/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Movimentação dos funcionarios                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gp150Mov( bFunc )

Eval(bFunc)

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³QrysTop   ºAutor  ³Ronan               º Data ³  20/12/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Montar querys necessarias para uso com topconnection        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function QrysTop()
//MONTA QUERY PARA A SELECAO DAS INFORMACOES EM GDMONTACOLS
	AQUERYCOND		:= ARRAY( 05 )
	AQUERYCOND[01]	:= "RG1_FILIAL='"+cFil+"'"
	AQUERYCOND[02]	:= " AND "
	AQUERYCOND[03]	:= "RG1_MAT='"+cMat+"'"
	AQUERYCOND[04]	:= " AND "
	AQUERYCOND[05]	:= "D_E_L_E_T_=' ' "
Return( Nil )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MontaEditaveisºAutor  |Ronan               º Data ³  12/20/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Carrega, apenas, os Campos Editaveis usados em GDMONTACOLS      º±±
±±º          ³                                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MontaEditaveis()
Local nX:= 0.00
aGdAltera:= {}
//CARREGA, APENAS, OS CAMPOS EDITAVEIS
For nX := 1	To nUsado
	IF (;
		( aScan( aVirtual 		, aHeader[ nX , 02 ] ) == 0.00 ) .and. ;
   		( aScan( aVisual  		, aHeader[ nX , 02 ] ) == 0.00 ) .and. ;
   		( aScan( aGpa550Field	, aHeader[ nX , 02 ] ) == 0.00 ) .and. ;
   		( aScan( aGdNaoAltera	, aHeader[ nX , 02 ] ) == 0.00 ) 	   ;
	  	)
		aAdd( aGdAltera , aHeader[ nX , 02 ] )
	EndIF
Next nX

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MontaVirtuais ºAutor  |Ronan               º Data ³  12/20/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Monta os campos virtuais usados em GDMONTACOLS                  º±±
±±º          ³                                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MontaVirtuais(nOpcX,lEntrada)
Local nX:= 0

//Altera nOpcx para 4 - Alteração se houver registros gravados na execução do robô.
If lRobo .And. Len( aColsRec ) > 0.00
	nOpcX := 4
EndIf

Default lEntrada := .T.
//NAO PERMITE MANUTENCAO QUANDO NAO EXISTIREM REGISTROS
IF ( nOpcX <> 3 ) .and. (Type( "lResM2" ) == "U" .Or. !lResM2)//Quando Nao for Inclusao
	IF ( Len( aColsRec ) == 0.00 ) .And. lEntrada
		Help(" ",1,"A040SLANC")
		Break
	Else

		For nX := 1 To Len( aCols )
			//CARREGA A DESCRICAO DA VERBA
			aCols[nx,nPosDesc] := fDesc( "SRV" , aCols[ nX , nPosPd ] , "RV_DESC" )
			//CARREGA A DESCRICAO DA TABELA
			If cPaisLoc != "RUS"
				aCols[nx,nPosDesTb] := fDesc( "RCB" , aCols[ nX , nPosCTab ] , "RCB_DESC" )
			EndIf
		Next nX

	EndIF
ElseIF ( ( nOpcX == 3 ) .and. ( Len( aColsRec ) > 0.00 ) ) //Quando for Inclusao
	Help(" ",1,"A040CLANC")
	Break
EndIF

Return (Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fFiltraLctos³ Autor ³Kelly Soares        ³ Data ³ 14/06/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Filtra o browse de acordo com a opcao desejada.            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³ 1 = Pagos, 2 = Em Aberto, 3 = Todos                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA550                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fFiltraLctos(nOpcao)
Local nX
Local lCondicao
Local nPosOrd	:= GdFieldPos("RG1_ORDEM", aHeader)

fJuntaLctos()

For nX := 1 to len(aColsTudo)

	Do Case
		Case nOpcao == 1  // Pagos
			lCondicao := ( !Empty(aColsTudo[nX][nPosData]) .and. aColsTudo[nX][nPosData] <= dDataBase )
		Case nOpcao == 2
			lCondicao := ( Empty(aColsTudo[nX][nPosData]) .or. aColsTudo[nX][nPosData] > dDataBase )
		Case nOpcao == 3
			lCondicao := .T.
	EndCase

	aAdd( If ( lCondicao , oGet:aCols , aColsAux ) , aColsTudo[nX] )

Next nX

If Len(oGet:aCols) == 0
   Aadd(oGet:aCols,aDefCols)
EndIf

aSort( oGet:aCols ,,, {|x,y| x[nPosOrd] < y[nPosOrd] } )
If Type( "oGet" ) == "O"
	oGet:Refresh()
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fJuntaLctos ³ Autor ³Kelly Soares        ³ Data ³ 14/06/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Unifica as arrays                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA550                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fJuntaLctos()

Local nX
Local nPosPd	:= GdFieldPos("RG1_PD", aHeader)
Local nPosOrd	:= GdFieldPos("RG1_ORDEM", aHeader)

aColsTudo := {}

If !lRobo
	For nX := 1 To Len(oGet:aCols)
		If !Empty( oGet:aCols[nX,nPosPd] )
			Aadd(aColsTudo,oGet:aCols[nX])
		EndIf
	Next nX
Else
	For nX := 1 To Len(aCols)
		If !Empty( aCols[nX,nPosPd] )
			Aadd(aColsTudo,aCols[nX])
		EndIf
	Next nX
Endif

If len(aColsAux) > 0
	For nX := 1 to len(aColsAux)
		aAdd( aColsTudo , aColsAux[nX] )
	Next nX
Endif

aSort( aColsTudo ,,, {|x,y| x[nPosOrd] < y[nPosOrd] } )

If !lRobo
	oGet:aCols	:= {}
Else
	aCols   	:= {}
Endif

aColsAux := {}

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fNovoReg    ³ Autor ³Marcelo Silveira    ³ Data ³ 29/02/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Limpa conteudo de campos no acols - na inclusao de registro³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA550                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fNovoReg()

If Empty(oGet:aCols[oGet:oBrowse:nAt, nPosPd])
	oGet:aCols[oGet:oBrowse:nAt, nPosDesc]:= ""
	oGet:aCols[oGet:oBrowse:nAt, nPosIniPg]:= Ctod("//")
	oGet:Refresh()
EndIf

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ AtualizaRegs³ Autor ³Kelly Soares        ³ Data ³ 14/06/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Atualiza aCols para gravacao.                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA550                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AtualizaRegs()

fJuntaLctos()

If !lRobo
	oGet:aCols := aClone(aColsTudo)
Else
	aCols := aClone(aColsTudo)
Endif

Return

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ MenuDef		³Autor³  Luiz Gustavo     ³ Data ³10/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Isola opcoes de menu para que as opcoes da rotina possam    ³
³          ³ser lidas pelas bibliotecas Framework da Versao 9.12 .      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA540                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function MenuDef()

Local aRotina	:=	{	{	STR0004 , "PesqBrw"		, 0 , 1 , ,.F.}	,;		//"Pesquisar"
						{	STR0005 , "Gpea550Mnt"	, 0 , 2 }	,;			//"Visualizar"
						{	STR0006 , "Gpea550Aux"	, 0 , 4 }	,;			//"Incluir"
						{	STR0007 , "Gpea550Mnt"	, 0 , 4 }	,;			//"Alterar"
						{	STR0008 , "Gpea550Mnt"	, 0 , 5 }   ,;			//"Excluir"
						{	STR0065 , "Gpea550Ger"	, 0 , 3 }   ,;			//"Gerar Lanctos"
						{ 	STR0128 , "GpLegend"	, 0 , 8 , ,.F.};	    //"Legenda"
						}
If cPaisLoc != "RUS"
	aAdd(aRotina, {	STR0065 , "Gpea550Ger"	, 0 , 3 } )			//"Gerar Lanctos"
EndIf
Return aRotina

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA110   ºAutor  ³Christiane Vieira   º Data ³  11/07/2011 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³So exibe verbas que contem o parametro RV_LEEFIX=='1'       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IsLeeAsFx(lPosiciona, cCodPd, lMsg)
	Local lRet 			:= .F.
	Local aArea			:= {}
	Local nSave			:= -1
    Default lPosiciona 	:= .F.
    Default cCodPd		:= SRV->RV_COD
    Default lMsg		:= .F.

    If lPosiciona .OR. (SRV->RV_COD != cCodPd)
    	aArea:= getArea()
		dbSelectArea( "SRV" )

		//Guarda o Registro posicionado antes de entrar na function
		nSave := SRV->(recno())

		//Posiciona o Srv
		PosSRV(cCodPd, xFilial( "SRV" ))

		RestArea(aArea)
    EndIf

	lRet := SRV->RV_LEEFIX == "1"

	If !lPosiciona .AND. (nSave > 0)
		//Restaura o registro posicionado anteriormente
		SRV->(dbGoTo(nSave))
	EndIf

    If !lRet .AND. lMsg
		Help("",1, "RG1_PD")
    EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gpea550Limpa ºAutor  ³Raquel Hager      º Data ³  21/11/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Apaga campos Tabela, Descrição, Linha, Coluna, Refer. e     º±±
±±º          ³Valor se alterado o tipo de cálculo                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
FUNCTION Gpea550Limpa()
Local cCampo := ReadVar()
Local lRet := .T.
Local nTamCT := TamSX3("RG1_CODTAB")[1]
Local nTamDT := TamSX3("RG1_DESTAB")[1]

Local nTamNI := TamSX3("RG1_NUMID")[1]

If (cCampo == "M->RG1_TPCALC" .AND. cCampo != " ")
	//LIMPA CAMPOS AO TROCAR RG1_TPCALC
	aCOLS[n,GdFieldPos("RG1_CODTAB")]	:= Space(nTamCT)
	aCOLS[n,GdFieldPos("RG1_DESTAB")]	:= Space(nTamDT)
	aCOLS[n,GdFieldPos("RG1_LINHA")]	:= 0
	aCOLS[n,GdFieldPos("RG1_COLUNA")]	:= 0
	aCOLS[n,GdFieldPos("RG1_REFER")]	:= 0.00
	aCOLS[n,GdFieldPos("RG1_VALOR")]	:= 0.00

	aCOLS[n,GdFieldPos("RG1_PROP")]		:= "2"
	aCOLS[n,GdFieldPos("RG1_DINIPG")]	:= cToD("//")
	aCOLS[n,GdFieldPos("RG1_DFIMPG")]	:= cToD("//")
	aCOLS[n,GdFieldPos("RG1_NUMID")]	:= Space(nTamNI)
EndIf

Return lRet

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ Gpea550Aux		³Autor³  Gustavo M.       ³ Data ³17/08/2012³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Utilizada para identificar quando é selecionado a opçao de  ³
³          ³incluir                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA550                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³Gpea550Mnt                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >                                 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Gpea550Aux(cAlias,nReg,nOpcX)

lIncluir := .T.

Return(Gpea550Mnt(cAlias,nReg,nOpcX))

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Rg1ENT    ³ Autor ³ Alfredo Medrano       ³ Data ³18/11/2014³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Filtra Entidad para Chile, Si es 1 = AFP Consulta S03CHI    ³±±
±±³          ³Si es 2 = ISAPRE Consulta S04CHI                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Rg1ENT()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ RG1_ENTIDAD                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Rg1ENT()

Local cRConc := GdFieldGet("RG1_PD") //Obtiene codigo de concepto

If cRConc != NIL
	DbSelectArea("SRV")
	SRV->(DBSETORDER(1))   //RV_FILIAL+RV_COD
	SRV->(DbSeek(xFilial("SRV")+cRConc)) // Cod Concepto
	If SRV->(!Eof())
		If SRV->RV_TPOINS == '1'
			cRetCons := CONPAD1(,,,"S03CHI") // Previsionales
		ELseIf SRV->RV_TPOINS == '2'
			cRetCons := CONPAD1(,,,"S04CHI") // Instituciones de Salud
		EndIf
	EndIf
	SRV->(dbCloseArea())
EndIf

Return .T.

/*/{Protheus.doc} fGP550RawZ
	Separar lógica da gravação de dados de múltiplos vínculos em outras empresas,
	replicando os dados das tabelas RAW/RAZ por período, de acordo com as datas da RG1
@type    function
@author  isabel.noguti
@since   2019.04.17
@version 12.1.23
/*/
Static Function fGP550RawZ()
	Local aArea			:= GetArea()
	Local aRG1Ant		:= {}
	Local aRG1Atu		:= {}
	Local oModel
	Local nPosDel		:= GdFieldPos("GDDELETED")
	Local nPosPD		:= GdFieldPos("RG1_PD"		, aHeader)
	Local nPosDtIni		:= GdFieldPos("RG1_DINIPG"	, aHeader)
	Local nPosDtFim		:= GdFieldPos("RG1_DFIMPG"	, aHeader)
	Local nPosVal		:= GdFieldPos("RG1_VALOR"	, aHeader)
	Local nPosRot		:= GdFieldPos("RG1_ROT"		, aHeader)
	Local nI			:= 0
	Local cTpRec		:= ""
	Local cProxPer		:= ""
	Local cAliasRAZ		:= GetNextAlias()
	Local lRet			:= .T.
	Private cPeriodo
	Private cSemana		:= ""
	Private cRoteiro
	Private cTpFol		:= ""
	Private cTpFolRaz	:= ""

	aEval( aColsAnt, {|x| If( PosSrv(x[nPosPd],FwxFilial("SRV",SRA->RA_FILIAL),"RV_CODFOL") $ '288|0288|289|0289|290|0290|291|0291',;
							 aAdd( aRG1Ant, {	x[nPosDel],				;	//1: linha deletada
												x[nPosPd],				;	//2: verba
												AnoMes(x[nPosDtIni]),	;	//3: Período Inicial
												AnoMes(x[nPosDtFim]),	;	//4: Período Final
												x[nPosVal],				;	//5: Valor
												x[nPosRot]				;	//6: Roteiro
											}), Nil )})
	aEval( aCols, {|x| If( PosSrv(x[nPosPd],FwxFilial("SRV",SRA->RA_FILIAL),"RV_CODFOL") $ '288|0288|289|0289|290|0290|291|0291',;
						aAdd( aRG1Atu, {	x[nPosDel],				;
											x[nPosPd],				;
											AnoMes(x[nPosDtIni]),	;
											AnoMes(x[nPosDtFim]),	;
											x[nPosVal],				;
											x[nPosRot]				;
										}), Nil )})

	If !fCompArray( aRG1Atu, aRG1Ant )

		dbSelectArea("RAW")
		RAW->(dbSetOrder(1))
		dbSelectArea("RAZ")
		RAZ->(dbSetOrder(1))
		If Len(aRG1Ant) > 0
			for nI := 1 to Len(aRG1Ant)
				cRoteiro := aRG1Ant[nI][6]
				fGetPerAtual( @aPerAtual, xFilial("RCH"), cProcesso, cRoteiro )
				If Empty(aPerAtual)
					Alert(STR0205)// "Não foi possível excluir os dados de múltiplos vínculos. Verifique os registros das tabelas RAW e RAZ."
					lRet := .F.
					Exit
				EndIf
				cPeriodo := If( aPerAtual[1][1] > aRG1Ant[nI][3], aPerAtual[1][1], aRG1Ant[nI][3] )	//só altera a partir do período em aberto
				cSemana  := If( aPerAtual[1][1] > aRG1Atu[nI][3], aPerAtual[1][2], '01' )
				dbSelectArea("SRY")
				SRY->(DbSetOrder(1))
				SRY->( dbSeek( xFilial("SRY", SRA->RA_FILIAL) + cRoteiro ))
				cTpFol := SRY->RY_TIPO
				cTpFolRaz := IIF(cTpFol == "6", "2", "1")
				SRY->(dbCloseArea())

				While cPeriodo <= aRG1Ant[nI][4]
					While RAZ->( dbSeek(xFilial("RAZ",SRA->RA_FILIAL) + SRA->RA_MAT + cPeriodo + cTpFolRaz ))
						RecLock("RAZ",.F.)
						dbDelete()
						MsUnLock() // Confirma e finaliza a operação
						RAZ->(dbGoTop())
					EndDo
					If RAW->(dbSeek(xFilial("RAW",SRA->RA_FILIAL) + SRA->RA_MAT + cPeriodo + cTpFolRaz + cProcesso + cRoteiro))
						RecLock("RAW",.F.)
						dbDelete()
						MsUnLock()
						RAW->(dbGoTop())
					EndIf
					cPeriodo := SomaMesAno(cPeriodo)
				EndDo
			Next nI
		EndIf

		If lRet .And. Len(aRG1Atu) > 0
			for nI := 1 to Len(aRG1Atu)

				If !aRG1Atu[nI][1]
					cRoteiro := aRG1Atu[nI][6]
					fGetPerAtual( @aPerAtual, xFilial("RCH"), cProcesso, cRoteiro )
					If Empty(aPerAtual)
						Alert(STR0186 + cRoteiro)// "Roteiro sem periodo aberto: " ###
						lRet := .F.
						Exit
					EndIf
					cPeriodo := If( aPerAtual[1][1] > aRG1Atu[nI][3], aPerAtual[1][1], aRG1Atu[nI][3] )	//só altera a partir do período em aberto
					cSemana  := If( aPerAtual[1][1] > aRG1Atu[nI][3], aPerAtual[1][2], '01')
					SRY->(DbSetOrder(1))
					SRY->( dbSeek( xFilial("SRY", SRA->RA_FILIAL) + cRoteiro ))
					cTpFol := SRY->RY_TIPO
					cTpFolRaz := IIF(cTpFol == "6", "2", "1")
					SRY->(dbCloseArea())
					//qtos meses
					If !( RAW->(dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+cPeriodo+cTpFolRaz+cProcesso)) )
						oModel := FWLoadModel("GPEA924")
						oModel:SetOperation(3)
						oModel:Activate()
						FWExecView(OemtoAnsi(STR0006), "GPEA924", 3,,{||.T.}) //"Multiplos Vinculos - Incluir"
						//cPeriodo := SomaMesAno(cPeriodo)
					EndIf

					If RAW->( dbSeek(xFilial("RAW",SRA->RA_FILIAL) + cMat + cPeriodo + cTpFolRaz + cProcesso)) .And.;
						RAZ->( dbSeek(xFilial("RAZ",SRA->RA_FILIAL) + cMat + cPeriodo + cTpFolRaz )) .And. cPeriodo < aRG1Atu[nI][4]
						cProxPer := SomaMesAno(cPeriodo)

						cTpRec		:= RAW->RAW_TPREC
						cSemana		:= RAW->RAW_SEMANA

						BeginSql Alias cAliasRAZ
							SELECT RAZ_TPINS, RAZ_INSCR, RAZ_VALOR, RAZ_CATEG
							FROM %table:RAZ%
							WHERE RAZ_FILIAL = %exp:SRA->RA_FILIAL%
								AND RAZ_MAT = %exp:cMat%
								AND RAZ_FOLMES = %exp:cPeriodo%
								AND RAZ_TPFOL = %exp:cTpFolRaz%
								AND %NotDel%
						EndSql

						While cProxPer <= aRG1Atu[nI][4]
							//Replicar RAW
							If !RAW->( dbSeek(xFilial("RAW",SRA->RA_FILIAL) + cMat + cProxPer + cTpFolRaz + cProcesso))
								RecLock("RAW", .T.)
									RAW->RAW_FILIAL	:= xFilial("RAW",cFil)
									RAW->RAW_MAT	:= cMat
									RAW->RAW_FOLMES	:= cProxPer
									RAW->RAW_TPFOL	:= cTpFolRaz
									RAW->RAW_TPREC	:= cTpRec
									RAW->RAW_PROCES	:= cProcesso
									RAW->RAW_SEMANA	:= cSemana
									RAW->RAW_ROTEIR	:= cRoteiro
								MsUnLock()
							EndIf

							//Replicar RAZ
							(cAliasRAZ)->(dbGoTop())
							While (cAliasRAZ)->(!EoF())
								If !( RAZ->( dbSeek(xFilial("RAZ",SRA->RA_FILIAL) + cMat + cProxPer + cTpFolRaz + (cAliasRAZ)->(RAZ_INSCR) )) )
									RecLock("RAZ",.T.)
										RAZ->RAZ_FILIAL	:= xFilial("RAZ",cFil)
										RAZ->RAZ_MAT	:= cMat
										RAZ->RAZ_FOLMES	:= cProxPer
										RAZ->RAZ_TPFOL	:= cTpFolRaz
										RAZ->RAZ_TPINS	:= (cAliasRAZ)->(RAZ_TPINS)
										RAZ->RAZ_INSCR	:= (cAliasRAZ)->(RAZ_INSCR)
										RAZ->RAZ_VALOR	:= (cAliasRAZ)->(RAZ_VALOR)
										RAZ->RAZ_CATEG	:= (cAliasRAZ)->(RAZ_CATEG)
									MsUnLock()
								EndIf
								(cAliasRAZ)->(dbSkip())
							EndDo

							cProxPer := SomaMesAno(cProxPer)
						EndDo
						(cAliasRAZ)->(DbCloseArea())
					EndIf
				EndIf
			Next nI
		EndIf
		RAZ->(dbCloseArea())
		RAW->(dbCloseArea())
	EndIf
	RestArea(aArea)
Return lRet
