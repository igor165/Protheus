#INCLUDE "PROTHEUS.CH"
#INCLUDE "PONCALEN.CH"

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Static Utilizadas na Funcao RetIniTab() e RetFimTab()		   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static __bRetTabIniFimAscan__ := InitbRetTab()

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Static Utilizadas na Funcao TimeRemaining()				   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static aTimeRemaining := {}

/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁInRhLibHrsExecЁAutor ЁMarinaldo de Jesus   Ё Data Ё14/05/2003Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁExecutar Funcoes Dentro de RHLIBHRS                          Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁInRhLibHrsExec( cExecIn , aFormParam )						 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁuRet                                                 	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function InRhLibHrsExec( cExecIn , aFormParam )
         
Local uRet

DEFAULT cExecIn		:= ""
DEFAULT aFormParam	:= {}

IF !Empty( cExecIn )
	cExecIn	:= BldcExecInFun( cExecIn , aFormParam )
	uRet	:= __ExecMacro( cExecIn )
EndIF

Return( uRet )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁSomaHoras Ё Autor Ё Marinaldo de Jesus    Ё Data Ё18/07/2004Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё Retorna a soma entre duas horas.                           Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё SomaHoras( ExpN1,ExpN2)                                    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ ExpN1 - Primeiro Hor═rio                                   Ё
Ё          Ё ExpN2 - Segundo  Hor═rio                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       Ё Generico                                                   Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function SomaHoras( nHr1 , nHr2 )
Return( __Min2Hrs( ( __Hrs2Min( nHr1 ) + __Hrs2Min( nHr2 ) ) ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁSubHoras  Ё Autor Ё Marinaldo de Jesus    Ё Data Ё18/07/2004Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё Retorna a subtra┤└o entre duas horas.                      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё SubHoras( ExpN1,ExpN2)                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ ExpN1 - Primeiro Hor═rio                                   Ё
Ё          Ё ExpN2 - Segundo  Hor═rio                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       Ё Generico                                                   Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function SubHoras( nHr1 , nHr2 )
Return( __Min2Hrs( ( __Hrs2Min( nHr1 ) - __Hrs2Min( nHr2 ) ) ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    Ё Hrs2Min  Ё Autor Ё *EQUIPE RH ADVANCED*  Ё Data Ё 08/04/96 Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё Converte horas para minutos.                               Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё Hrs2Min( ExpN1 )                                           Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ ExpN1 - Horas                                              Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       Ё Generico                                                   Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Hrs2Min( nHoras )
Return( __Hrs2Min( nHoras )  )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    Ё Min2Hrs  Ё Autor Ё *EQUIPE RH ADVANCED*  Ё Data Ё 09/04/96 Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё Converte minutos para horas.                               Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё Min2Hrs( ExpN1 )                                           Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ ExpN1 - Minutos                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       Ё Generico                                                   Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Min2Hrs( nMinutos )
Return( __Min2Hrs( nMinutos ) )

/*/
зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    Ё fDHtoNS() Ё Autor Ё *EQUIPE RH ADVANCED*  Ё Data Ё24/02/1997Ё
цддддддддддедддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o Ё Calcula um Numero Serial equivalente a Data e Hora passados.Ё
Ё          Ё A parte inteira do numero equivale ao numero de dias, conta-Ё
Ё          Ё dos a partir de 01/01/1980, e os numeros a direita da virgu-Ё
Ё          Ё la representam o percentual de horas em relacao ao dia.     Ё
Ё          Ё Deste modo, o Numero Serial 0 representa 01/01/80, as 00:00,Ё
Ё          Ё e o Numero Serial 6261,98 representa 21/02/97, as 23:30.    Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё fDHtoNS(dData,nHoras)                                       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   Ё String numerica com o Numero Serial.                        Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ dData   = String Data com a data a que se deseja converter. Ё
Ё          Ё           A data passada deve ser no minimo igual a 01/01/80Ё
Ё          Ё nHoras  = String Numerica com as Horas a que se deseja con- Ё
Ё          Ё           verter. O formato deve ser HH.MM, onde HH deve serЁ
Ё          Ё           um numero entre 0 e 23, e MM deve ser um numero   Ё
Ё          Ё           entre 0 e 59.                                     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       Ё Generica.                                                   Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function fDHtoNS( dDate , nHour )
Return( __fDHtoNS( dDate , nHour ) )

/*/
зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    Ё fNStoDH() Ё Autor Ё Fernando Joly Siquini Ё Data Ё 24/02/97 Ё
цддддддддддедддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o Ё Calcula uma data e Hora equivalentes ao Numero Serial passa-Ё
Ё          Ё do. Este numero deve ter sido gerado pela funcao fDHtoNS, ouЁ
Ё          Ё pela funcao fHtoNS.                                         Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё fNStoDH(nSerial,dData,nHour,cTipoRet)                       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   Ё Data e Hora a partir do numero serial.                      Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ nSerial = String Numerica com um Numero Serial, que deve serЁ
Ё          Ё                       Igual ou Superior a Zero.             Ё
Ё          Ё cTipoRet= String que ira determinar o Result desta funcao.  Ё
Ё          Ё           Pode ser "H" para que o retorno seja a Hora, ou   Ё
Ё          Ё           "D" para que o retorno seja a data. O retorno de- Ё
Ё          Ё           fault ┌ "H"ora.                                   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       Ё Generica.                                                   Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function fNStoDH( nSerial , cTipoRet )

DEFAULT cTipoRet := "H"

Return( __fNStoDH( nSerial , cTipoRet ) )

/*/
зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    Ё fHtoNS()  Ё Autor Ё *EQUIPE RH ADVANCED*  Ё Data Ё24/02/1997Ё
цддддддддддедддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o Ё Calcula um Numero Serial equivalente a Hora passados.       Ё
Ё          Ё O numero resultante sera uma fracao do dia. Ex.: 12:00 = 0.5Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё fHtoNS(nHoras)                                              Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   Ё String numerica com o Numero Serial.                        Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ nHoras  = String Numerica com as Horas a que se deseja con- Ё
Ё          Ё           verter. O formato deve ser HH.MM, onde HH deve serЁ
Ё          Ё           um numero entre 0 e 23, e MM deve ser um numero   Ё
Ё          Ё           entre 0 e 59.                                     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       Ё Generica.                                                   Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function fHtoNS( nHour )
Return( __fHtoNS( nHour ) )

/*/
зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    Ё fNStoH()  Ё Autor Ё *EQUIPE RH ADVANCED*  Ё Data Ё24/02/1997Ё
цддддддддддедддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o Ё Calcula as Horas equivalente ao Numero Serial passado.      Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё fNStoH(nSerial)                                             Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   Ё String numerica com o as Horas no formato HH.MM (0 a 23.59) Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ nSerial = String Numerica com o numero serial, obtido pela  Ё
Ё          Ё           funcao fHtoNS ou pela funcao fDHtoNS.             Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       Ё Generica.                                                   Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function fNStoH( nSerial )
Return( __fNStoH( nSerial ) )

/*/
зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁfConvHr    Ё Autor ЁMauro Sergio       V.I Ё Data Ё26/11/1996Ё
Ё          Ё           Ё Autor ЁMarinaldo de Jesus V.IIЁ Data Ё19/07/2004Ё
цддддддддддедддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁConverter valores p/ Decimais ou Horas                       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                                     Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function fConvHr( nHoras , cTipo , lRound2Dec , nCasas, lNegativo )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria                                                                   Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local nHorRet   := 0    
Local lSinalNeg := .F.  

DEFAULT lNegativo := .F.          

// - Trata o valor negativo para horas em formato CENTESIMAL
// - Apresentando seu conteЗdo absoluto

IF lNegativo
   If nHoras < 0
       nHoras := Abs(nHoras)
       lSinalNeg := .T.
   Endif     
Endif

IF ( nHoras > 0 )

    nHorRet := nHoras

    DEFAULT cTipo := "Hh"
    DEFAULT nCasas              := 2
    IF ( cTipo $ "Dd" ) //--Converter para Decimais
       DEFAULT lRound2Dec := ( SuperGetMv( "MV_H2D_RDN" , NIL , "N" ) == "S" )
       nHorRet := __Hrs2Min( nHoras )
       nHorRet /= 60
       IF ( lRound2Dec )
           nHorRet := Round( nHorRet , nCasas )
       Else
           nHorRet := NoRound( nHorRet , nCasas )
       EndIF
    ElseIF ( cTipo $ "Hh" ) //--Converter para Horas
       nHorRet := ( nHoras * 60 )
       nHorRet := __TimeSum( __Min2Hrs( nHorRet ) , 0 )
    EndIF
EndIF  

// - Caso o valor passado para a funГЦo seja um valor negativo
// - Garante que serА enviado o cАlculo negativo.
IF lSinalNeg
    nHorRet := nHorRet * (-1)
Endif

Return( nHorRet )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁfCalHoras	  Ё Autor ЁMarinaldo de Jesus    Ё Data Ё19/04/2001Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCalcular Difereca de Horas Entre Dois Horarios                 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>	                             	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁDiferenca em Horas Entre dois Horarios                         Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function fCalHoras(	dDt1		,;	//01 -> Data 1
					nHr1		,;	//02 -> Hora 1
					dDt2		,;	//03 -> Data 2
					nHr2		,;	//04 -> Hora 2
					nHoras		,;	//05 -> <@>Horas Normais Apontadas
					nHorasNot	,;	//06 -> <@>Horas Noturnas Apontadas
					lNoturno	,;	//07 -> Apontar Horas Noturnas
					dDtIni		,;	//08 -> Data Inicial Para a Hora Noturna
					nHrAcNot	,;	//09 -> <@>Horas de Acrescimo Noturno
					nIniHnot	,;	//10 -> Inicio do Horario Noturno
					nFimHnot	,;	//11 -> Final do Horario Noturno
					nMinHnot	,;	//12 -> Minutos do Horario Noturno
					lAcreNot	,;	//13 -> Apenas Acrescimo Noturno
					aPerNot		 ;	//14 -> Periodo da Hora Noturna
				   )	
Return(;
			CalcHours(	@dDt1		,;	//01 -> Data 1
						@nHr1		,;	//02 -> Hora 1
						@dDt2		,;	//03 -> Data 2
						@nHr2		,;	//04 -> Hora 2
						@nHoras		,;	//05 -> <@>Horas Normais Apontadas
						@nHorasNot	,;	//06 -> <@>Horas Noturnas Apontadas
						@lNoturno	,;	//07 -> Apontar Horas Noturnas
						@dDtIni		,;	//08 -> Data Inicial Para a Hora Noturna
						@nHrAcNot	,;	//09 -> <@>Horas de Acrescimo Noturno
						@nIniHnot	,;	//10 -> Inicio do Horario Noturno
						@nFimHnot	,;	//11 -> Final do Horario Noturno
						@nMinHnot	,;	//12 -> Minutos do Horario Noturno
						@lAcreNot	,;	//13 -> Apenas Acrescimo Noturno
						@aPerNot	 ;	//14 -> Periodo da Hora Noturna
				  	 );
		)				  	 

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁCalcHours	  Ё Autor ЁMarinaldo de Jesus    Ё Data Ё22/04/2004Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCalcular Difereca de Horas Entre Dois Horarios                 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>	                             	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁDiferenca em Horas Entre dois Horarios                         Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function CalcHours( dDt1		,;	//01 -> Data 1
					nHr1		,;	//02 -> Hora 1
					dDt2		,;	//03 -> Data 2
					nHr2		,;	//04 -> Hora 2
					nHoras		,;	//05 -> <@>Horas Normais Apontadas
					nHorasNot	,;	//06 -> <@>Horas Noturnas Apontadas
					lNoturno	,;	//07 -> Apontar Horas Noturnas
					dDtIni		,;	//08 -> Data Inicial Para a Hora Noturna
					nHrAcNot	,;	//09 -> <@>Horas de Acrescimo Noturno
					nIniHnot	,;	//10 -> Inicio do Horario Noturno
					nFimHnot	,;	//11 -> Final do Horario Noturno
					nMinHnot	,;	//12 -> Minutos do Horario Noturno
					lAcreNot	,;	//13 -> Apenas Acrescimo Noturno
					aPerNot		 ;	//14 -> Periodo da Hora Noturna
				  )
/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local nHorNot		:= 0
Local nHorAcNot		:= 0
Local nHorTot		:= 0

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aMarcId
Local aNoturn
Local nHorCal
Local nMaxHor
Local nQtdCal

IF !(;
		( dDt1 == dDt2 );
		.and.;
		( NoRound(nHr1) == NoRound(nHr2) );
	)

	DEFAULT lNoturno	:= .T.
	DEFAULT dDtIni		:= dDt1
	DEFAULT nIniHnot	:= 0
	DEFAULT nFimHnot	:= 0
	DEFAULT nMinHnot	:= 60
	DEFAULT lAcreNot	:= .F.
	DEFAULT aPerNot		:= {}

	//--Chamada Recursiva Qdo Dif. de Hrs >= 24 e apuracao do Adicional Noturno
	IF (;
			( ( nHorCal := DataHora2Val( dDt1 , nHr1 , dDt2 , nHr2 , "H" ) ) >= 24 );
			.and.;
			( lNoturno );
		 )
		nMaxHor := nHorCal
		nHorCal	:= 0
		aMarcId := RetFimTab( dDt1 , nHr1 , 23.59 , 0 , .F. , dDtIni )
		While ( nMaxHor >= 24 )
			nQtdCal := CalcHours(dDt1,nHr1,aMarcId[1],aMarcId[2],@nHoras,@nHorasNot,lNoturno,dDtIni,@nHorAcNot,nIniHnot,nFimHnot,nMinHnot,lAcreNot,@aPerNot)
			nHorTot	:= SomaHoras( nHorTot , nQtdCal ) 
			nMaxHor := Abs( SubHoras(  nMaxHor , nQtdCal ) )
			( dDt1	:= aMarcId[1] , nHr1 := aMarcId[2] )
			dDtIni	:= dDt1
			aMarcId := RetFimTab( dDt1 , nHr1 , Min( 23.59 , nMaxHor ) , 0 , .F. , dDtIni )
		End While
		( dDt1	:= aMarcId[1] ,  nHr1 := aMarcId[2] )
		aMarcId := RetFimTab( dDt1 , nHr1 , nMaxHor , 0 , .F. , dDtIni )
		nHorTot	:= SomaHoras(nHorTot,CalcHours(dDt1,nHr1,aMarcId[1],aMarcId[2],@nHoras,@nHorasNot,lNoturno,dDtIni,@nHorAcNot,nIniHnot,nFimHnot,nMinHnot,lAcreNot,@aPerNot))
	Else 
		IF (;
				( lNoturno );
				.and.;
				( nHorCal > 0 );
			)
			aNoturn := DataHora2Not( dDt1 , nHr1 , dDt2 , nHr2 , dDtIni , nIniHnot , nFimHnot , nMinHnot , @aPerNot )
			nHorCal := SubHoras(  nHorCal , aNoturn[1] )
			IF ( lAcreNot )
				nHorNot		:= aNoturn[1]
				nHorAcNot	:= aNoturn[2]
			Else
				nHorNot := SomaHoras( aNoturn[1] , aNoturn[2] )
			EndIF
		EndIF
	EndIF
	
	DEFAULT nHoras		:= 0
	DEFAULT nHorasNot	:= 0
	DEFAULT nHrAcNot	:= 0
	
	nHoras		:= SomaHoras( nHoras	,	nHorCal   )
	nHorasNot	:= SomaHoras( nHorasNot	,	nHorNot   )
	nHrAcNot	:= SomaHoras( nHrAcNot	,	nHorAcNot )
	nHorTot		:= SomaHoras( nHorTot	, SomaHoras( SomaHoras( nHorCal , nHorNot ) , nHorAcNot  ) )

EndIF
		
Return( nHorTot )

/*/
зддддддддддбддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁInitbRetTab Ё Autor ЁMarinaldo de Jesus    Ё Data Ё12/12/2000Ё
цддддддддддеддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁInicializar o Bloco __bRetTabIniFimAscan__ 					 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   Ё{ dDfim , nHfim }                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁApontamento                                                  Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function InitbRetTab()

Local bRet := { |x|	x[1] == dDini;
					.and.;
			 		x[2] == nHini;
			 		.and.;
					x[3] == dDfim;
					.and.;
					x[4] == nHfim;
			  }
                
Return( bRet )

/*/
зддддддддддбддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁRetIniTab   Ё Autor ЁMarinaldo de Jesus    Ё Data Ё12/12/2000Ё
цддддддддддеддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁRetornar Data e Horario Ideal para o Inicio do Expediente	 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё< Vide Parametros Formais >									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   Ё{ dDini , nHini }                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                                     Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RetIniTab(	dDfim		,;	//01 -> Data da Ultima Marcacao
					nHfim		,;	//02 -> Hora da Ultima Marcacao
					nHtab		,;	//03 -> Total de Horas a Trabalhar
					nHint		,;	//04 -> Horas de Intervalo
					lHnot		,;	//05 -> Considera Horas Noturnas
					dDtIni		,;	//06 -> Data para o Inicio da Apuracao da Hora Noturna
					nIniHnot	,;	//07 -> Hora Inicial do Adicional Noturno
					nFimHnot	,;	//08 -> Hora Final   do Adicional Noturno
					nMinHnot	,;	//09 -> Minutos da Hora Noturna
					lAcreNot	,;	//10 -> Apenas Acrescimo Noturno
					aPerNot		 ;	//11 ->	Periodo da Hora Noturna
				  )
         
/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aJaProc
Local dDini
Local lNoExit
Local nHini
Local nHorCal
Local nHorTot
Local nJaProc
Local nMinuts

DEFAULT nHTab	:= 0
DEFAULT nHint	:= 0

IF ( ( nHorTot := SomaHoras( nHtab , nHint ) ) > 0 )

	DEFAULT dDfim 		:= Ctod("//")
	DEFAULT nHfim 		:= 0
	DEFAULT lHnot 		:= .F.
	DEFAULT dDtIni		:= dDfim
	DEFAULT nIniHnot	:= 0
	DEFAULT nFimHnot	:= 0
	DEFAULT nMinHnot	:= 60
	DEFAULT lAcreNot	:= .F.
	DEFAULT aPerNot		:= {}

	aJaProc	:= Array( 03 , 04 )
	( aJaProc[ 1 , 1 ] := Ctod("//") , aJaProc[ 1 , 2 ] := 0 )
	( aJaProc[ 1 , 3 ] := Ctod("//") , aJaProc[ 1 , 4 ] := 0 )

	aJaProc[ 2 ] := aClone( aJaProc[ 1 ]  )
	aJaProc[ 3 ] := aClone( aJaProc[ 1 ]  )

	dDini := dDfim
	IF ( nHorTot >= 24 )
		While ( nHorTot >= 24 )
			--dDini
			nHorTot := SubHoras( nHorTot , 24 )
		End While
	EndIF

	IF ( ( nHorTot := SubHoras(  nHfim , nHorTot ) ) < 0 )
		--dDini
		nHini := SubHoras( 24 , Abs( nHorTot ) )
		nHini := Abs( nHini )
	Else
		nHini := nHorTot
	EndIF
	
	nMinuts := __Hrs2Min( nHini )
	
	lNoExit := .T.
	While ( lNoExit )
		nHorCal := __TimeSum(;
									SubHoras(;
												CalcHours(	dDini 		,;	//01 -> Data 1
															nHini 		,;	//02 -> Hora 1
															dDfim 		,;	//03 -> Data 2
															nHfim 		,;	//04 -> Hora 2
															NIL	  		,;	//05 -> <@>Horas Normais Apontadas
															NIL	  		,;	//06 -> <@>Horas Noturnas Apontadas
															lHnot 		,;	//07 -> Apontar Horas Noturnas
															dDtIni		,;	//08 -> Data Inicial Para a Hora Noturna
															NIL			,;	//09 -> <@>Horas de Acrescimo Noturno
															nIniHnot	,;	//10 -> Inicio do Horario Noturno
															nFimHnot	,;	//11 -> Final do Horario Noturno
															nMinHnot	,;	//12 -> Minutos do Horario Noturno
															lAcreNot	,;	//13 -> Apenas Acrescimo Noturno
															@aPerNot	 ;	//14 -> Periodo da Hora Noturna
														  ),;
												nHint;
							 				),;
									0;
							  )
		IF ( ( nHorCal := __TimeSum( nHorCal , 0 ) ) == nHTab )
			lNoExit := .F.
		ElseIF ( nHorCal < nHTab )
			IF ( --nMinuts <= 0 )
				nMinuts := 1439
				--dDini
			EndIF	
			nHIni := __Min2Hrs( nMinuts )
		ElseIF ( nHorCal > nHTab )
			++nMinuts
			nHIni := __Min2Hrs( nMinuts )
			IF ( nHini >= 24 )
				While ( nHini >= 24 )
					++dDini
					nHini	:= SubHoras(  nHini , 24 )
					nMinuts := __Hrs2Min( nHini )
				End While
			EndIF		
		EndIF
		IF ( lNoExit )
			IF ( ( nJaProc := aScan( aJaProc , __bRetTabIniFimAscan__ ) ) > 0 )
				lNoExit := .F.
			Else
				IF Empty( aJaProc[ 1 , 1 ] )
					aJaProc[ 1 , 1 ] := dDini
					aJaProc[ 1 , 2 ] := nHini
					aJaProc[ 1 , 3 ] := dDfim
					aJaProc[ 1 , 4 ] := nHfim
					aJaProc[ 2 , 1 ] := Ctod("//")
					aJaProc[ 2 , 2 ] := 0
					aJaProc[ 2 , 3 ] := Ctod("//")
					aJaProc[ 2 , 4 ] := 0
				ElseIF Empty( aJaProc[ 2 , 1 ] )
					aJaProc[ 2 , 1 ] := dDini
					aJaProc[ 2 , 2 ] := nHini
					aJaProc[ 2 , 3 ] := dDfim
					aJaProc[ 2 , 4 ] := nHfim
					aJaProc[ 3 , 1 ] := Ctod("//")
					aJaProc[ 3 , 2 ] := 0
					aJaProc[ 3 , 3 ] := Ctod("//")
					aJaProc[ 3 , 4 ] := 0
				ElseIF Empty( aJaProc[ 3 , 1 ] )
					aJaProc[ 3 , 1 ] := dDini
					aJaProc[ 3 , 2 ] := nHini
					aJaProc[ 3 , 3 ] := dDfim
					aJaProc[ 3 , 4 ] := nHfim
					aJaProc[ 1 , 1 ] := Ctod("//")
					aJaProc[ 1 , 2 ] := 0
					aJaProc[ 1 , 3 ] := Ctod("//")
					aJaProc[ 1 , 4 ] := 0
				EndIF
			EndIF
		EndIF
	End While

Else

	dDini := dDfim
	nHini := nHfim

EndIF
	
Return( { dDini , nHini } )

/*/
зддддддддддбддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁRetFimTab   Ё Autor ЁMarinaldo de Jesus    Ё Data Ё20/10/2000Ё
цддддддддддеддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁRetornar Data e Horario Ideal para o Fim do Expediente	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais >								     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais >								     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   Ё{ dDfim , nHfim }                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                                     Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RetFimTab(	dDini		,;	//01 -> Data da Primeira Marcacao
					nHini 		,;	//02 -> Hora da Primeira Marcacao
					nHtab		,;	//03 -> Total de Horas a Trabalhar
					nHint		,;	//04 -> Horas de Intervalo
					lHnot		,;	//05 -> Considera Horas Noturnas
					dDtIni		,;	//06 -> Data Inicial do Adicional Noturno
					nIniHnot	,;	//07 -> Hora Inicial do Adicional Noturno
					nFimHnot	,;	//08 -> Hora Final   do Adicional Noturno
					nMinHnot	,;	//09 -> Minutos da Hora Noturna
					lAcreNot	,;	//10 -> Apenas Acrescimo Noturno
					aPerNot		,;	//11 -> Periodo da Hora Noturna 
					lPadrao		;  	//12 -> Validacao padrao para verificar saida projetada
				  ) 
         
/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aJaProc
Local dDfim
Local lNoExit
Local nHfim
Local nHorCal
Local nHorTot
Local nJaProc
Local nMinuts
Local nHrAcNot
Local lMinUp
Local lMinDw

DEFAULT lPadrao	:= .T.
DEFAULT nHTab	:= 0
DEFAULT nHint	:= 0

IF ( ( nHorTot := SomaHoras( nHtab , nHint ) ) > 0 )

	DEFAULT dDini		:= Ctod("//")
	DEFAULT nHini		:= 0
	DEFAULT lHnot		:= .F.
	DEFAULT dDtIni		:= dDini
	DEFAULT nIniHnot	:= 0
	DEFAULT nFimHnot	:= 0
	DEFAULT	nMinHnot	:= 60
	DEFAULT	lAcreNot	:= .F.
	DEFAULT aPerNot		:= {}

	aJaProc	:= Array( 03 , 04 )
	( aJaProc[ 1 , 1 ] := Ctod("//") , aJaProc[ 1 , 2 ] := 0 )
	( aJaProc[ 1 , 3 ] := Ctod("//") , aJaProc[ 1 , 4 ] := 0 )

	aJaProc[ 2 ] := aClone( aJaProc[ 1 ]  )
	aJaProc[ 3 ] := aClone( aJaProc[ 1 ]  )

	nMinuts := NoRound(__Hrs2Min(  nHini  ))
	nMinuts += NoRound(__Hrs2Min( nHorTot ))
	
	dDfim	:= dDini
	nHfim	:= __Min2Hrs( nMinuts )
	
	IF ( nHfim >= 24 )
		While ( nHfim >= 24 )
			++dDfim
			nHfim	:= Abs( SubHoras(  nHfim , 24 ) )
			nMinuts := __Hrs2Min( nHfim )
		End While
	EndIF
	
	lNoExit	:= .T.
	While ( lNoExit )
		lMinUp  := .F.
		lMinDw  := .F.
		nHorCal :=	CalcHours(	dDini 		,;	//01 -> Data 1
								nHini 		,;	//02 -> Hora 1
								dDfim 		,;	//03 -> Data 2
								nHfim 		,;	//04 -> Hora 2
								NIL	  		,;	//05 -> <@>Horas Normais Apontadas
								NIL	  		,;	//06 -> <@>Horas Noturnas Apontadas
								lHnot 		,;	//07 -> Apontar Horas Noturnas
								dDtIni		,;	//08 -> Data Inicial Para a Hora Noturna
								@nHrAcNot	,;	//09 -> <@>Horas de Acrescimo Noturno
								nIniHnot	,;	//10 -> Inicio do Horario Noturno
								nFimHnot	,;	//11 -> Final do Horario Noturno
								nMinHnot	,;	//12 -> Minutos do Horario Noturno
								lAcreNot	,;	//13 -> Apenas Acrescimo Noturno
								@aPerNot	 ;	//14 -> Periodo da Hora Noturna
							  )

		nHorCal :=	__TimeSum( SubHoras( nHorCal,	nHint	) , 0 ) 
							 		
		IF ( ( nHorCal == nHTab ) .or. ( lAcrenot .and. ( nHorCal == __TimeSum( SomaHoras( nHTab , nHrAcNot ) , 0 ) ) ) )
			lNoExit := .F.
		ElseIF ( nHorCal < nHTab )
			IF ( nMinuts >= 1439 )
				++dDfim
				nMinuts := IF( nMinuts > 1439 , ( nMinuts - 1439 ) , 0 )
			Else
				++nMinuts
				lMinUp := .T.
			EndIF
	    ElseIF ( nHorCal > nHTab )
			IF ( nHfim < 24  )
				IF ( nHfim == 0 )
					--dDfim
					nMinuts := 1439
				Else
					--nMinuts
					lMinDw := .T.
				EndIF
			EndIF
		EndIF
		IF ( lNoExit )
			IF ( nHfim >= 24 )
				While ( nHfim >= 24 )
					++dDfim
					nHfim	:= Abs( SubHoras(  nHfim , 24 ) )
					nMinuts := __Hrs2Min( nHfim )
				End While
			Else
				nHfim := __Min2Hrs( nMinuts )
			EndIF		
			IF ( ( nJaProc := aScan( aJaProc , __bRetTabIniFimAscan__ ) ) > 0 )
				lNoExit := .F.
                If lPadrao
					If ( lMinUp )
						--nMinuts
						nHfim := __Min2Hrs( nMinuts )
					ElseIf ( lMinDw )
						++nMinuts
						nHfim := __Min2Hrs( nMinuts )
					EndIf
				EndIf
			Else
				IF Empty( aJaProc[ 1 , 1 ] )
					aJaProc[ 1 , 1 ] := dDini
					aJaProc[ 1 , 2 ] := nHini
					aJaProc[ 1 , 3 ] := dDfim
					aJaProc[ 1 , 4 ] := nHfim
					aJaProc[ 2 , 1 ] := Ctod("//")
					aJaProc[ 2 , 2 ] := 0
					aJaProc[ 2 , 3 ] := Ctod("//")
					aJaProc[ 2 , 4 ] := 0
				ElseIF Empty( aJaProc[ 2 , 1 ] )
					aJaProc[ 2 , 1 ] := dDini
					aJaProc[ 2 , 2 ] := nHini
					aJaProc[ 2 , 3 ] := dDfim
					aJaProc[ 2 , 4 ] := nHfim
					aJaProc[ 3 , 1 ] := Ctod("//")
					aJaProc[ 3 , 2 ] := 0
					aJaProc[ 3 , 3 ] := Ctod("//")
					aJaProc[ 3 , 4 ] := 0
				ElseIF Empty( aJaProc[ 3 , 1 ] )
					aJaProc[ 3 , 1 ] := dDini
					aJaProc[ 3 , 2 ] := nHini
					aJaProc[ 3 , 3 ] := dDfim
					aJaProc[ 3 , 4 ] := nHfim
					aJaProc[ 1 , 1 ] := Ctod("//")
					aJaProc[ 1 , 2 ] := 0
					aJaProc[ 1 , 3 ] := Ctod("//")
					aJaProc[ 1 , 4 ] := 0
				EndIF
			EndIF
		EndIF
	End While

Else

	dDfim := dDini
	nHfim := nHini

EndIF
	
Return( { dDfim , nHfim } )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁDataHora2Val  Ё Autor ЁMarinaldo de Jesus    Ё Data Ё05/01/2001Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁApurar Diferenca de Dias/Horas/Minutos Entre Duas Datas/Horas  Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁDataHora2Val( dDt1 , nHr1 , dDt2 , nHr2 , cStr )			   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁdDt1 -> 1a Data                                   		       Ё
Ё          ЁnHr1 -> 1a Hora                                   		       Ё
Ё          ЁdDt2 -> 2a Data                                   		       Ё
Ё          ЁnHr2 -> 2a Hora                                   		       Ё
Ё          ЁcStr -> Flag de Retorno. "A"nos;"D"ias;"H"oras;"M"eses   	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁDiferenca em Anos/Dias/Horas/Meses ou Minutos entre Duas Datas Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function DataHora2Val( dDt1 , nHr1 , dDt2 , nHr2 , cStr )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local nValRet	:= 0

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local dDataAux
Local nHoraAux
Local nMinutos
Local nMinuts1
Local nMinuts2
Local nQtdDias

IF !(;
		( dDt1 == dDt2 );
		.and.;
		( nHr1 == nHr2 );
	 )

	IF ( ( DataHora2Str( dDt2 , nHr2 ) > DataHora2Str( dDt1 , nHr1 ) ) )
		dDataAux := dDt1
		nHoraAux := nHr1
		dDt1	 := dDt2
		nHr1	 := nHr2
		dDt2	 := dDataAux
		nHr2	 := nHoraAux
	EndIF
	
	nMinuts1 := __Hrs2Min( nHr1 )
	nMinuts2 := __Hrs2Min( nHr2 )
	
	IF ( nMinuts2 > nMinuts1 )
		nMinutos := ( Abs( 1440 - nMinuts2 ) + nMinuts1 )
		nQtdDias := 0
		IF (;
				( nMinuts2 >= 1440 );
				.or.;
				( ( dDt1 - dDt2 ) > 1 );
			)
			dDataAux := dDt2
			While ( ( ++dDataAux ) < dDt1 )
				++nQtdDias
			End While
		EndIF
	Else
		nQtdDias := ( dDt1 - dDt2 )
		nMinutos := ( nMinuts1 - nMinuts2 )
	EndIF
	
	DEFAULT cStr := ""
	IF ( cStr $ "hH" )
		nValRet := SomaHoras( ( nQtdDias * 24 ) , __Min2Hrs( Round(nMinutos,2) ) )
	ElseIF ( cStr $ "dD" )
		nValRet := nQtdDias
	ElseIF ( cStr $ "aA" )
		nValRet := Int( nQtdDias / 365 )
	ElseIF ( cStr $ "mM" )
		nValRet := Int( nQtdDias / 30 )
	Else
		nValRet := ( nMinutos + __Hrs2Min( ( nQtdDias * 24 ) ) )
	EndIF

EndIF
	
Return( nValRet )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁDataHora2Not  Ё Autor ЁMarinaldo de Jesus    Ё Data Ё19/04/2001Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁApurar a Hora Noturna e Adicional entre Dois Horarios          Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>                          		  	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁDiferenca em Horas Noturnas Entre Duas Datas / Horas           Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function DataHora2Not(	dDt1		,;	//1a Data
						nHr1		,;	//1a Hora
						dDt2		,;	//2a Data
						nHr2		,;	//2a Hora
						dDtIni 		,;	//Data Inicial do Adicional Noturno
						nIniHnot	,;	//Inicio do Adicional Noturno
						nFimHnot 	,;	//Final do Adicional Noturno
						nMinHnot	,;	//Minutos do Adicional Noturno
						aPerNot		 ;	//Marcacoes Correspondente ao Periodo Noturno
					  )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aRet	:= { 0 , 0 }

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local bCondNot
Local cDtAux
Local cDtAux1
Local cDtHr1
Local cDtHr2
Local cDtHIn
Local cDtHFn
Local dDtFim
Local dDtAux
Local nAcNot
Local nHrAux
Local nMinuts
Local dDtNot2	:= CTOD("//")
Local nFimBkp	:= 0
Local nPosCal	:= 0
Local cDtHrMarc
Local cDtHrNIni
Local cDtHrNFim

IF !(;
		( dDt1 == dDt2 );
		.and.;
		( nHr1 == nHr2 );
	)

	DEFAULT dDtIni		:= dDt1
	DEFAULT nIniHnot	:= 0
	DEFAULT nFimHnot	:= 0
	DEFAULT nMinHnot	:= 60
	DEFAULT aPerNot		:= {}
	
	nFimBkp := nFimHnot

	bCondNot := { ||;
						(;
							(;
								( cDtHr1 >= cDtHIn );
								.and.;
								( cDtHr2 >= cDtHFn );
								.and.;
								( cDtHr1 <= cDtHFn );
							 );
							.or.;
	   	   					(;
	   	   						( cDtHr1 >= cDtHIn );
	   	   						.and.;
	   	   						( cDtHr2 <= cDtHFn );
	   	   					);
	   	   					.or.;
		   					(;
		   						( cDtHr1 <= cDtHIn );
		   						.and.;
		   						( cDtHr2 >= cDtHFn );
		   					);	
		   					.or.;
	   						(;
	   							( cDtHr1 <= cDtHIn );
	   							.and.;
	   							( cDtHr2 <= cDtHFn );
	   							.and.;
	   							( cDtHr2 >= cDtHIn );
	   						);
	   					);	
	   			}
	
	cDtHrMarc := DataHora2Str( dDt1 , nHr1 )
	cDtHrNIni := DataHora2Str( dDtIni , nIniHnot )
	cDtHrNFim := DataHora2Str( dDtIni + 1 , nFimHnot )

	If dDt1 == dDtIni .And. nIniHnot >= nFimHnot .And. cDtHrMarc >= cDtHrNIni
		cDtHrNIni := DataHora2Str( dDtIni - 1 , nIniHnot )
		cDtHrNFim := DataHora2Str( dDtIni , nFimHnot )
		
		If cDtHrMarc >= cDtHrNIni .And. cDtHrMarc <= cDtHrNFim 
			dDtIni := dDt1 -1
		EndIf
	EndIf
	
	IF ( ( cDtHr2 := DataHora2Str( dDt2 , nHr2 ) ) < ( cDtHr1 := DataHora2Str( dDt1 , nHr1 ) ) )
		dDtAux	:= dDt1
		nHrAux	:= nHr1
		dDt1	:= dDt2
		nHr1	:= nHr2
		dDt2	:= dDtAux
		nHr2	:= nHrAux
		cDtHr1	:= DataHora2Str( dDt1 , nHr1 )
		cDtHr2	:= DataHora2Str( dDt2 , nHr2 )
	EndIF
	
	nIniHnot	:= IF( nIniHNot >= 24 , 00 , nIniHnot )
	nFimHnot	:= IF( nFimHnot >= 24 , 24 , IF( Empty( nFimHnot ) , 24 , nFimHnot ) )
	
	IF (;
			( dDtIni == dDt1 );
			.and.;
			( nHr1 < nIniHnot );
		)
		If nFimHnot < nIniHNot .AND. dDtIni <> dDt2 
			dDtNot2 := dDt1 + 1
		Else
			dDtNot2 := dDt1
			If Type("aTabCalend") <> "U"
				If (nPosCal := aScan( aTabCalend, { |x| x[CALEND_POS_DATA_APO] == dDt2 } ) ) > 0
					nFimHnot := aTabCalend[ nPosCal , CALEND_POS_FIM_H_NOT ]
				EndIf
			EndIf
		EndIf
		
		cDtAux  := DataHora2Str( dDtNot2 , nFimHnot )
		cDtAux1	:= DataHora2Str( dDt1 , nIniHNot )
		If 	dDtNot2 <= dDt1
			IF (;
					!(;
						( cDtHr2 >= cDtAux );
						.and.;
						( cDtHr2 >= cDtAux1 );
					);	
					.or.;
					(;
						( cDtHr1 <= cDtAux );
						.and.;
						( cDtHr1 >= cDtAux1 );
					);	
				)	
				dDtIni := ( Min( dDtIni , dDt1 ) - 1 )
			EndIF	
		EndIf
	ElseIF !Empty( nIniHNot )
		dDtIni := Min( dDtIni , dDt1 )
	ElseIF (;
				Empty( nIniHnot );
				.and.;
				( nFimHnot > nIniHnot );
				.and.;
				( nHr1 > nIniHnot );
				.and.;
				( nFimHnot != 24 );
			 )
		dDtIni := Min( Max( ( dDtIni + 1 ) , dDt1 ) , dDt2 )
	Else
		dDtIni := Max( dDtIni , dDt1 )
	EndIF	
	
	cDtHIn		:= DataHora2Str( dDtIni , nIniHnot )
	dDtFim		:= IF( nFimHnot > nIniHnot , dDtIni , ( dDtIni + 1 ) )
	cDtHFn		:= DataHora2Str( dDtFim , nFimHnot )
	cDtAux		:= DataHora2Str( dDtFim , nIniHnot )
	
	IF (;
			Eval( bCondNot );
			.and.;
			( cDtHr2 > cDtHFn );
			.and.;
			( cDtHr2 > cDtAux );
			.and.;
			( dDtIni != dDtFim );
		 )
		dDtAux	:= dDt2
		nHrAux	:= nHr2
		dDt2	:= dDtFim
		nHr2	:= nFimHnot
		aRet	:= DataHora2Not( dDt2 , nIniHnot , dDtAux , nHrAux , dDt2 , , , , @aPerNot )
	EndIF
		
	IF Eval( bCondNot )
	        
		Begin Sequence
			IF (;
					( cDtHr1 >= cDtHIn );
					.and.;
					( cDtHr2 >= cDtHFn );
					.and.;
					( cDtHr1 <= cDtHFn );
				)
		   		IF ( cDtHr2 > cDtHFn )
		   			dDt2 := dDtFim
		   			nHr2 := nFimHnot
		   		EndIF
		   		Break
		   	EndIF
		   	IF (;
		   			( cDtHr1 >= cDtHIn );
		   			.and.;
		   			( cDtHr2 <= cDtHFn );
		   		)
				Break
			EndIF
			IF (;
					( cDtHr1 <= cDtHIn );
					.and.;
					( cDtHr2 >= cDtHFn );
				)
		   		IF ( cDtHr1 < cDtHIn )
		   			dDt1 := dDtIni
		   			nHr1 := nIniHnot
		   		EndIF
		   		IF ( cDtHr2 > cDtHFn )
		   			dDt2 := dDtFim
		   			nHr2 := nFimHnot
		   		EndIF
		   		Break
		   	EndIF
		   	IF (;
		   			( cDtHr1 <= cDtHIn );
		   			.and.;
		   			( cDtHr2 <= cDtHFn );
		   			.and.;
		   			( cDtHr2 >= cDtHIn );
		   		)
		   		IF ( cDtHr1 < cDtHIn )
		   			dDt1 := dDtIni
		   			nHr1 := nIniHnot
		   		EndIF
		   		Break
		   	EndIF
		End Sequence
		        
		IF ( ( nMinuts := DataHora2Val( dDt2 , nHr2 , dDt1  , nHr1 ) ) > 0 )

			nMinHnot	:= ( 60 / nMinHnot  )
			nAcNot		:= ( nMinuts * nMinHnot )
			nAcNot		-= nMinuts
		
			aRet[1]		:= __Min2Hrs( ( __Hrs2Min( aRet[1] ) + nMinuts ) )
			IF ( nAcNot > 0 )
				aRet[2]	:= __Min2Hrs( ( __Hrs2Min( aRet[2] ) + nAcNot  ) )
			EndIF

		EndIF
		
		aAdd( @aPerNot , { dDt1 , nHr1 , dDt2 , nHr2 , DataHora2Str( dDt1 , nHr1 ) , DataHora2Str( dDt2 , nHr2 ) } )
	
	EndIF
	
	nFimHnot := nFimBkp
	
EndIF
		


Return( aRet )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁDataHora2Ale  Ё Autor ЁMarinaldo de Jesus    Ё Data Ё27/06/2001Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁRetornar Hora Aleatoria                                        Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁDataHora2Ale(dData,nHoras,nMax,nAleato,cTipo)				   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁdData   -> Data                                      		   Ё
Ё          ЁnHoras  -> Horas                                     		   Ё
Ё          ЁnMinMax -> Numero Maximo de Minutos                  		   Ё
Ё          ЁnAleato -> Ultimo Valor Aleatorio Gerado             		   Ё
Ё          ЁcTipo   -> "E" Para Subtriar Horas , "S" para Somar Horas      Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁHora Aleatorio                                                 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function DataHora2Ale( dData , nHoras , nMinMax , nAleato , cTipo )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local nSeconds	:= Seconds()

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local nDays
Local nHrAleat
Local nMinuts
Local nAux

DEFAULT dData	:= Ctod("//")
DEFAULT nHoras	:= 00
DEFAULT nMinMax	:= 01
DEFAULT nAleato := 00
DEFAULT cTipo	:= "E"

nMinMax := Abs( IF( Empty( nMinMax ) , 1 , nMinMax ) )

nAux	:= (Int((Day(dData)+Month(dData)+Year(dData))%255)/(10^Len(AllTrim(Str(nMinMax,2)))))
nAux	*= (1+(nSeconds/(10^Len(AllTrim(Str(Int(nSeconds),0))))))
nAux	/= ( nMinMax * 2 )
nAleato := IF( nAleato == 0 , ( ( nSeconds / IF( nMinMax < 10 , nMinMax * 10 , nMinMax ) ) + nAux ) , ( nAleato + nAux ) )
nAleato := MyAleatorio( ( nMinMax * 10 ) , nAleato )
nMinuts	:= ( nAleato / 10 )

nMinuts := __Min2Hrs( nMinuts )
nMinMax := __Min2Hrs( nMinMax )

IF ( nMinuts > nMinMax )
	While ( ( nMinuts := __TimeSub(  nMinuts , nMinMax ) ) > nMinMax )
	End While
EndIF

nMinuts := __TimeSum( nMinuts , 0 )

IF ( cTipo $ "Ee" )
	nHrAleat := __TimeSub(  nHoras , nMinuts )
	IF ( nHrAleat < 0 )
		IF ( ( nHrAleat := Abs( nHrAleat ) ) > 24 )
			nHrAleat	:= __Hrs2Min( nHrAleat )
			nDays		:= Int( nHrAleat / 1440 )
			nAux		:= ( nHrAleat - ( nDays * 1440 ) )
			dData		-= nDays
			nHrAleat	:= __Min2Hrs( nAux )
		Else
			--dData
			nHrAleat	:= __TimeSub(  24 , nHrAleat )
		EndIF	
	EndIF
ElseIF ( cTipo $ "Ss" )
	nHrAleat := __TimeSum( nHoras , nMinuts )
	IF ( nHrAleat >= 24 )
		nHrAleat	:= __Hrs2Min( nHrAleat )
		nDays		:= Int( nHrAleat / 1440 )
		nAux		:= ( nHrAleat - ( nDays * 1440 ) )
		dData		+= nDays
		nHrAleat	:= __Min2Hrs( nAux )
	EndIF		                       	
EndIF

nHrAleat := __TimeSum( nHrAleat , 0 )

Return( nHrAleat )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁMyAleatorio   Ё Autor ЁMarinaldo de Jesus    Ё Data Ё27/06/2001Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁRetornar Numero Aleatorio                                      Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁMyAleatorio( nMax , nSeed )									   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>                           		   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁHora Aleatorio                                                 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁDataHora2Ale()                                                 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function MyAleatorio( nMax , nSeed )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local lNoExit	:= .T.

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local nRand

While ( lNoExit )
	nRand	:= ( ( nSeed + ( Seconds() - Int( Seconds() ) ) ) / 0.717171717 )
	nRand	:= ( nRand * Log( Abs( nRand ) ) )
	nRand	:= ( Abs( nRand ) + Sqrt( nRand ) )
	nRand	:= ( nRand - Int( nRand ) )
	nRand	:= ( Int( nRand * ( nMax + 1 ) ) )
	lNoExit := ( nRand == nSeed )
End While

Return( nRand )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁHrsSem2OneDsr Ё Autor ЁMarinaldo de Jesus    Ё Data Ё08/02/2002Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁApurar as Horas Correspondente a 1 Dia de DSR                  Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁHrsSem2OneDsr( nHrsSemana )								       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁnHrsSemana -> Numero de Horas da Semana              		   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁHoras Correspondente 1 um DSR na Semana                        Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function HrsSem2OneDsr( nHrsSemana )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local nOneDsr

nOneDsr := ( nHrsSemana / 6 )
nOneDsr := fConvHr( nOneDsr , "H" )

Return( nOneDsr )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁTimeRemaining Ё Autor ЁMarinaldo de Jesus    Ё Data Ё26/12/2002Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁFuncao Contadora de Tempo                                      Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁTimeRemaining( [ < cTime > ] , [ < nPosTime > ] )		 	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcTime ( padrao "HH:MM:SS" )									   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁHoras Remanescentes											   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function TimeRemaining( cTime , nPosTime )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aTimeRet	:= Array( 02 )
Local cTimeAtu	:= Time()
Local dMsDate	:= MsDate()

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local cTimeDif
Local cTimeRem
Local nPos
Local nIncTime
Local nHrsInc
Local nMinInc
Local nSecInc

DEFAULT cTime				:= cTimeAtu
DEFAULT nPosTime			:= 0
DEFAULT aTimeRemaining		:= {}

IF ( ( nPos := aScan( aTimeRemaining , { |x| x[1] == nPosTime } ) ) == 0 )
	aAdd( aTimeRemaining , { nPosTime , { cTime , dMsDate , 0 } } )
	nPos := Len( aTimeRemaining )
EndIF

IF !( aTimeRemaining[ nPos , 2 , 2 ] == dMsDate )
	aTimeRemaining[ nPos , 2 , 2 ]	:= dMsDate
	++aTimeRemaining[ nPos , 2 , 3 ]
EndIF

IF ( ( nIncTime := aTimeRemaining[ nPos , 2 , 3 ] ) > 0 )
    ExtractTime( cTimeAtu , @nHrsInc , @nMinInc , @nSecInc  )
	cTimeAtu := IncTime( HMSToTime( ( nIncTime * 24 ) ) , nHrsInc , nMinInc , nSecInc )
EndIF

cTimeDif 	:= ElapTime( aTimeRemaining[ nPos , 2 , 1 ] , cTimeAtu )
cTimeRem 	:= ElapTime( cTimeDif , aTimeRemaining[ nPos , 2 , 1 ] )

aTimeRet[1] := cTimeDif
aTimeRet[2] := cTimeRem

Return( aClone( aTimeRet ) )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRstTimeRemainingЁAutorЁMarinaldo de Jesus Ё Data Ё11/03/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁReinicializa as Staticas utilizadas em TimeRemaining()		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RstTimeRemaining()
Return( ( aTimeRemaining := NIL ) )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁGetTimeRemainingЁAutorЁMarinaldo de Jesus Ё Data Ё10/06/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁRetorna Conteudo de aTimeRemaining                    		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function GetTimeRemaining()

Local aTimeRet := IF( ( Type( "aTimeRemaining" ) == "A" ) , aClone( aTimeRemaining ) , {} )

Return( aClone( aTimeRet ) )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁSetTimeRemainingЁAutorЁMarinaldo de Jesus Ё Data Ё10/06/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁSetar Novo Conteudo para aTimeRemaining                		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function SetTimeRemaining( aTimeSet )

Local aLstTimeRmg := GetTimeRemaining()

IF ( ValType( aTimeSet ) == "A" )
	aTimeRemaining := aClone( aTimeSet )
EndIF

Return( aClone( aLstTimeRmg ) )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁRemainingTime Ё Autor ЁMarinaldo de Jesus    Ё Data Ё26/12/2002Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁControla o Tempo de Processamento                              Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRemainingTime( cTime , nCountTime , lRetSeconds , @nSeconds )  Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcTime 		-> Horas no padrao "HH:MM:SS"					   Ё
Ё          ЁnCountTime	-> Indice para TimeRemaining()					   Ё
Ё          ЁlRetSeconds -> Se Calcula os Segundos     					   Ё
Ё          ЁnSeconds    -> Segundos Retornados pela Funcao TimeToSecs()	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁHoras Remanescentes											   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RemainingTime( cTime , nCountTime , lRetSeconds , nSeconds )

Local cTimeRemaining

DEFAULT cTime			:= Time()
DEFAULT nCountTime		:= 0
DEFAULT lRetSeconds		:= .F.
DEFAULT nSeconds		:= 0

cTimeRemaining := ( TimeRemaining( cTime , nCountTime )[1] )

IF ( lRetSeconds )
	nSeconds := TimeToSecs( cTimeRemaining )
EndIF

Return( cTimeRemaining )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁRetTimeEndProcЁ Autor ЁMarinaldo de Jesus    Ё Data Ё26/12/2002Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCalcular o Tempo Final de Processamento                        Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRetTimeEndProc( nRegsProc , nRegsEnd , nSeconds )			   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>                       			   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁHoras Finais no padrao "HH:MM:SS"							   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RetTimeEndProc( nRegsProc , nRegsEnd , nSeconds )

Local nTimeEnd

DEFAULT nRegsProc	:= 0
DEFAULT nRegsEnd	:= 0
DEFAULT nSeconds	:= 0

nTimeEnd := ( ( ( nRegsEnd - nRegsProc ) * nSeconds ) / nRegsProc )

Return( SecsToTime( nTimeEnd ) )

/*/
зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁHMSToTime	  Ё Autor ЁMarinaldo de Jesus     Ё Data Ё27/12/2002Ё
цддддддддддеддддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁTransformar Valores de Horas, Minutos e Segundos em String    noЁ
Ё          ЁPadrao "HH:MM:SS"											    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁHmsToTime( [ < nHours > ] , [ < nMinuts > ] , [ < nSeconds > ] )Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁnHours 		-> Valor das Horas									Ё
Ё          ЁnMinuts		-> Valor dos Minutos								Ё
Ё          ЁnSeconds	-> Valor dos Segundos								Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁcTime                             						   	    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                        Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function HMSToTime( nHours , nMinuts , nSeconds )

Local cTime

DEFAULT nHours		:= 0
DEFAULT nMinuts		:= 0
DEFAULT nSeconds	:= 0

cTime := AllTrim( Str( nHours ) )
cTime := StrZero( Val( cTime ) , Max( Len( cTime ) , 2 ) )
cTime += ":"
cTime += StrZero( Val( AllTrim( Str( nMinuts  ) ) ) , 2 )
cTime += ":"
cTime += StrZero( Val( AllTrim( Str( nSeconds ) ) ) , 2 )

Return( cTime )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁSecsToHMS	  Ё Autor ЁMarinaldo de Jesus    Ё Data Ё08/04/2003Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁConverte Segundos para Horas, Minutos e Segundos               Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁSecsToHMS( nSecsToHMS , @nHours , @nMinuts , @nSeconds )	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁnSecsToHMS	-> Numero de Segundos que sera convertidos		   Ё
Ё          ЁnHours 		-> Valor das Horas								   Ё
Ё          ЁnMinuts		-> Valor dos Minutos							   Ё
Ё          ЁnSeconds	-> Valor dos Segundos							   Ё
Ё          ЁcRet     	-> Tipo do Retorno Desejado: "H" ou "h" -> nHours  Ё
Ё          Ё                                         "M" ou "m" -> nMinuts Ё
Ё          Ё                                         "S" ou "s" -> nSedondsЁ
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁnRet                             							   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function SecsToHMS( nSecsToHMS , nHours , nMinuts , nSeconds , cRet )
         
Local nRet	:= 0

DEFAULT nSecsToHMS	:= 0
DEFAULT cRet		:= "H"

nHours		:= SecsToHrs( nSecsToHMS )
nMinuts		:= SecsToMin( nSecsToHMS )
nSeconds	:= ( HrsToSecs( nHours ) + MinToSecs( nMinuts ) )
nSeconds	:= ( nSecsToHMS - nSeconds )
nSeconds	:= Int( nSeconds )
nSeconds	:= Mod( nSeconds , 60 )

IF ( cRet $ "Hh" )
	nRet := nHours
ElseIF ( cRet $ "Mm" )
	nRet := nMinuts
ElseIF ( cRet $ "Ss" )
	nRet := nSeconds
EndIF

Return( nRet )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁSecsToTime	  Ё Autor ЁMarinaldo de Jesus    Ё Data Ё08/04/2003Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁConverte Segundos para Horas, Minutos e Segundos retornando   aЁ
Ё          Ёstring no formato "HH:MM:SS"                                   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁSecsToTime( nSecs )											   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁnSeconds	-> Valor dos Segundos							   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   Ё"HH:MM:SS"                      							   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function SecsToTime( nSecs )

Local nHours
Local nMinuts
Local nSeconds

SecsToHMS( nSecs , @nHours , @nMinuts , @nSeconds )

Return( HMSToTime( nHours , nMinuts , nSeconds ) )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁTimeToSecs	  Ё Autor ЁMarinaldo de Jesus    Ё Data Ё27/12/2002Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁTransformar a Sting Retornada pela Time() em Segundos          Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁTimeToSenconds( < cTime > )      							   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcTime	-> String Contendo as Horas, Minutos e Segundos RetornaЁ
Ё          Ё           da Pela Funcao Time "HH:MM:SS"	                   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁSegundos                          						   	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function TimeToSecs( cTime )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local nHours
Local nMinuts
Local nSeconds

DEFAULT cTime	:= "00:00:00"

ExtractTime( cTime , @nHours , @nMinuts , @nSeconds )

nMinuts		+= __Hrs2Min( nHours )
nSeconds	+= ( nMinuts * 60 )

Return( nSeconds )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁTimeToSeconds Ё Autor ЁMarinaldo de Jesus    Ё Data Ё27/12/2002Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁTransformar a Sting Retornada pela Time() em Segundos          Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁTimeToSenconds( < cTime > )      							   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcTime	-> String Contendo as Horas, Minutos e Segundos RetornaЁ
Ё          Ё           da Pela Funcao Time "HH:MM:SS"	                   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁSegundos                          						   	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁUtiliza a Funcao TimeToSecs() para a conversao         	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function TimeToSeconds( cTime )
Return( TimeToSecs( cTime ) )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁSecsToHrs	  Ё Autor ЁMarinaldo de Jesus    Ё Data Ё08/04/2003Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁConverte Segundos para Horas								   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁSecsToHrs( nSeconds )										   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁnSeconds -> Numero de Segundos que sera convertidos		   	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁnHours                           							   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function SecsToHrs( nSeconds )

Local nHours

nHours	:= ( nSeconds / 3600 )
nHours	:= Int( nHours )

Return( nHours )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁHrsToSecs	  Ё Autor ЁMarinaldo de Jesus    Ё Data Ё08/04/2003Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁConverte Horas para Segundos 							   	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁHrsToSecs( nHours )  										   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁnHours	-> Numero de Horas que sera convertidas			   	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁnSeconds                         							   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function HrsToSecs( nHours )
Return( ( nHours * 3600 ) )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁSecsToMin	  Ё Autor ЁMarinaldo de Jesus    Ё Data Ё08/04/2003Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁConverte Segundos para Minutos								   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁSecsToMin( nSeconds )										   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁnSeconds -> Numero de Segundos que sera convertidos		   	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁnMinuts                          							   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function SecsToMin( nSeconds )

Local nMinuts

nMinuts		:= ( nSeconds / 60 )
nMinuts		:= Int( nMinuts )
nMinuts		:= Mod( nMinuts , 60 )

Return( nMinuts )

/*/
зддддддддддбддддддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁMinToSecs	  Ё Autor ЁMarinaldo de Jesus    Ё Data Ё08/04/2003Ё
цддддддддддеддддддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁConverte Minutos para Segundos 							   	   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁMinToSecs( nMinuts )  										   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁnMinuts	-> Numero de Minutos que sera convertidas			   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁnSeconds                         							   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function MinToSecs( nMinuts )
Return( ( nMinuts * 60 ) )

/*/
зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁIncTime		  Ё Autor ЁMarinaldo de Jesus     Ё Data Ё17/03/2003Ё
цддддддддддеддддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁIncrementar Valores de Horas, Minutos e Segundos na String cTimeЁ
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>										Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>										Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   Ё"HH:MM:SS"                         						   	    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                        Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function IncTime( cTime , nIncHours , nIncMinuts , nIncSeconds )

Local nSeconds
Local nMinuts
Local nHours

DEFAULT nIncHours	:= 0
DEFAULT nIncMinuts	:= 0
DEFAULT nIncSeconds	:= 0

ExtractTime( cTime , @nHours , @nMinuts , @nSeconds )

nHours		+= nIncHours
nMinuts		+= nIncMinuts
nSeconds	+= nIncSeconds
nSeconds	:= ( HrsToSecs( nHours ) + MinToSecs( nMinuts ) + nSeconds )

Return( SecsToTime( nSeconds ) )

/*/
зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁDecTime		  Ё Autor ЁMarinaldo de Jesus     Ё Data Ё23/04/2004Ё
цддддддддддеддддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁDecrementar Valores de Horas, Minutos e Segundos na String cTimeЁ
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>										Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>										Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   Ё"HH:MM:SS"                         						   	    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                        Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function DecTime( cTime , nDecHours , nDecMinuts , nDecSeconds )

Local nSeconds
Local nMinuts
Local nHours

DEFAULT nDecHours	:= 0
DEFAULT nDecMinuts	:= 0
DEFAULT nDecSeconds	:= 0

ExtractTime( cTime , @nHours , @nMinuts , @nSeconds )

nHours		-= nDecHours
nMinuts		-= nDecMinuts
nSeconds	-= nDecSeconds
nSeconds	:= ( HrsToSecs( nHours ) + MinToSecs( nMinuts ) + nSeconds )

Return( SecsToTime( nSeconds ) )

/*/
зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁTime2NextDay  Ё Autor ЁMarinaldo de Jesus     Ё Data Ё12/10/2004Ё
цддддддддддеддддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁTratar Time e Date no padrao "00:00:00" para Time >= "24:00:00" Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>										Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>										Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁaTimeTo24Hr                        						   	    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                        Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Time2NextDay( cTime , dDate )

While ( Val( cTime ) >= 24 )
	cTime := DecTime( cTime , 24 )
	++dDate
End While

Return( { cTime , dDate } )

/*/
зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁExtractTime	  Ё Autor ЁMarinaldo de Jesus     Ё Data Ё17/03/2003Ё
цддддддддддеддддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁExtrair Valores de Horas, Minutos e Segundos da String cTime    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁExtractTime( cTime , @nHours , @nMinuts , @nSeconds , cRet )	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcTime	 -> String de Horas no padrao "00:00:00"    	    	Ё
Ё          ЁnHours 	 -> Valor das Horas								    	Ё
Ё          ЁnMinuts	 -> Valor dos Minutos							    	Ё
Ё          ЁnSeconds -> Valor dos Segundos							    	Ё
Ё          ЁcRet     -> Tipo do Retorno Formal Desejado:					Ё
Ё          Ё                                          "H" ou "h" -> nHours  Ё
Ё          Ё                                          "M" ou "m" -> nMinuts Ё
Ё          Ё                                          "S" ou "s" -> nSedondsЁ
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁnRet                               						   	    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                        Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function ExtractTime( cTime , nHours , nMinutes , nSeconds , cRet )

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Variaveis de Inicializacao Obrigatoria					  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	Local nRet		:= 0
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	Local nAt
	
	DEFAULT cTime	:= "00:00:00"
	DEFAULT cRet	:= "H"
	
	nAt	:= ( At( ":" , cTime ))
	
	If (nAt == 0)
		nHours	:= Val(cTime)
		nMinutes:= 0
		nSeconds:= 0
	Else
		nHours	:= Val( SubStr( cTime , 1 , nAt-1 ) )
		cTime	:= SubStr(cTime, nAt+1)
		nAt		:= ( At( ":" , cTime ) )
		
		If (nAt == 0)
			nMinutes:= Val(cTime)
			nSeconds:= 0
		Else
			nMinutes:= Val( SubStr(cTime , 1 , nAt-1 ) )
			nSeconds:= Val( SubStr(cTime, nAt+1))
		EndIf
	EndIf
	
	IF ( cRet $ "Hh" )
		nRet := nHours
	ElseIF ( cRet $ "Mm" )
		nRet := nMinutes
	ElseIF ( cRet $ "Ss" )
		nRet := nSeconds
	EndIF
Return( nRet )

/*/
зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁMediumTime	  Ё Autor ЁMarinaldo de Jesus     Ё Data Ё25/04/2003Ё
цддддддддддеддддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁRetornar o Tempo Medio											Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>										Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>										Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁcMediumTime                        						   	    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                        Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function MediumTime( cTime , nDividendo , lMiliSecs )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local cMediumTime	:= "00:00:00"

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local nSeconds
Local nMediumTime
Local nMiliSecs

IF ( nDividendo > 0 )

	nSeconds	:= TimeToSecs( cTime )
	nSeconds	:= ( nSeconds / nDividendo )
	nMediumTime	:= Int( nSeconds )

	nMiliSecs	:= ( nSeconds - nMediumTime )
	nMiliSecs	*= 100
	nMiliSecs	:= Int( nMiliSecs )

	cMediumTime	:= SecsToTime( nMediumTime )

	DEFAULT lMiliSecs	:= .F.
	IF (;
			( lMiliSecs );
			.and.;
			( nMiliSecs > 0 );
		)
		cMediumTime += ( ":" + StrZero( nMiliSecs , 02 ) )
	EndIF

EndIF

Return cMediumTime 


Function TimeToFloat(cTime)
	Local nHours
	Local nMinutes
	Local nReturn
	
	ExtractTime(cTime, @nHours, @nMinutes)
	
	nReturn:= nHours + (nMinutes / 100)
Return nReturn

