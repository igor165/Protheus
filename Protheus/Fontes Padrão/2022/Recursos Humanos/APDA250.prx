#INCLUDE "APDA250.CH"
#INCLUDE "PROTHEUS.CH"
/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³APDA250   ³Autor³ Emerson Campos          ³ Data ³02/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descriçao ³Resultados de Participantes por Avaliações                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                    ³
ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³            ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL           ³
ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Programador ³Data      ³FNC / Req  ³Motivo da Alteracao                ³
ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Cecilia Car.³03/07/2014³TPZWBQ     ³Incluido o fonte da 11 para a 12 e ³
³            ³          ³           ³efetuada a limpeza.                ³
³Renan Borges|04/11/2015|TTPSZK     |Ajuste para permitir a inclusão de ³
³            |          |           |Respostas por Avaliação            ³
³Renan Borges³12/02/2016³TULWGV     ³Ajuste para remover os campos      ³
³            ³          ³           ³RDB_CODMEM e RDB_CODJUS da visua-  ³
³            ³          ³           ³lização na getDados, pois são de   ³
³            ³          ³           ³uso interno.						  ³
³Isabel N.   ³12/12/2016³TWMCF6     ³Ajuste no array aRddRecnos para que³
³            ³          ³           ³sua ordenação coincida com a do    ³
³            ³          ³           ³aRddCols e não gere erro de chave  ³
³            ³          ³           ³duplicada quando houver mais de um ³
³            ³          ³           ³registro do participante por rede. ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function APDA250( cAlias , nReg , nOpc )

Local aArea		:= GetArea()
Local aAreaRd6	:= RD6->( GetArea() )
Local aAreaRdd	:= RDD->( GetArea() )
Local aAreaRd0	:= RD0->( GetArea() )
Local lExistOpc	:= ( ValType( nOpc ) == "N" )

Local bBlock
Local nPos

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³So Executa se o Modo de Acesso dos Arquivos do Modulo APD esti³
	³verem OK													   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( ApdRelationFile() )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Redefine o Alias                                              ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	cAlias	:= "RD6"

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Array contendo as Rotinas a executar do programa      ³
	³ ----------- Elementos contidos por dimensao ------------     ³
	³ 1. Nome a aparecer no cabecalho                              ³
	³ 2. Nome da Rotina associada                                  ³
	³ 3. Usado pela rotina                                         ³
	³ 4. Tipo de Transa‡„o a ser efetuada                          ³
	³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
	³    2 - Simplesmente Mostra os Campos                         ³
	³    3 - Inclui registros no Bancos de Dados                   ³
	³    4 - Altera o registro corrente                            ³
	³    5 - Remove o registro corrente do Banco de Dados          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	Private aRotina := MenuDef() // ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina
	
	Private cCadastro	:= OemToAnsi( STR0001 )	//"Resultados de Participantes por Avaliações"

	IF ( lExistOpc )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Garante o Posicinamento do Recno                              ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		DEFAULT nReg	:= ( cAlias )->( Recno() )
		IF !Empty( nReg )
			( cAlias )->( MsGoto( nReg ) )
		EndIF

		DEFAULT lExecAuto := .F.
		IF ( lExecAuto )

			nPos := aScan( aRotina , { |x| x[4] == nOpc } )
			IF ( nPos == 0 )
				Break
			EndIF
			bBlock := &( "{ |a,b,c,d| " + aRotina[ nPos , 2 ] + "(a,b,c,d) }" )
			Eval( bBlock , cAlias , nReg , nPos )
		
		Else

			Apda250Mnt( cAlias , nReg , nOpc , .T. )
		
		EndIF

	Else

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Chama a Funcao de Montagem do Browse                                   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ/*/
		RD6->( dbSetOrder( RetOrdem( cAlias , "RD6_FILIAL+RD6_CODIGO+RD6_CODTIP+RD6_CODMOD+RD6_CODCOM" ) ) )
		mBrowse( 6 , 1 , 22 , 75 , cAlias )
	EndIF
		
End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Coloca o Ponteiro do Mouse em Estado de Espera			   	   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorWait()

RestArea( aAreaRdd )
RestArea( aAreaRd6 )
RestArea( aAreaRd0 )
RestArea( aArea    )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Restaura o Cursor do Mouse                				   	   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorArrow()

Return( NIL )


/*                                	
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³ MenuDef		³Autor³  Emerson Campos   ³ Data ³02/01/2012³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrição ³Isola opcoes de menu para que as opcoes da rotina possam    ³
³          ³ser lidas pelas bibliotecas Framework da Versao 9.12 .      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
³ÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/   

Static Function MenuDef()

 Local aRotina := {;
						{ STR0002 , "AxPesqui"	 , 0 , 01, ,.F.} ,; //"Pesquisar"
						{ STR0004 , "Apda250Mnt" , 0 , 02      } ,; //"Visualizar"
						{ ""      , "Apda250Mnt" , 0 , 03      } ,; //""
						{ STR0003 , "Apda250Mnt" , 0 , 04,,,.T.}  ; //"Alterar"
				  }
Return aRotina 


/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³Apda250Mnt³ Autor ³Emerson Campos         ³ Data ³02/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrição ³Cadastro de Participantes/Pessoas (Manutencao)				³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Apda090Mnt( cAlias , nReg , nOpc , lDlgPadSiga )			³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³cAlias 		= Alias do arquivo                              ³
³          ³nReg   		= Numero do registro                            ³
³          ³nOpc   		= Numero da opcao selecionada                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Apda250()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Apda250Mnt( cAlias , nReg , nOpc )
Local aArea				:= GetArea(Alias())
Local aSvKeys			:= GetKeys()
Local aFreeLocks		:= {}
//Variáveis relacionadas ao RD6
Local aRd6NotFields		:= {}
Local aRd6Keys			:= {}
Local aRd6Cols			:= {} 
Local aRd6Header		:= {}
Local aRd6VirtEn		:= {}
Local aRd6VisuEn		:= {}
Local aRd6Fields		:= {}
Local bGetRd6			:= { || NIL }
Local lExecLock			:= ( ( nOpc <> 2 ) .and. ( nOpc <> 3 ) ) 
Local lLocks			:= .F.
Local nRd6Usado			:= 0
Local nLoop				:= 0
Local cRd6Filial
Local cRd6Codigo
Local cKeySeek
Local cRd0Codigo

//Variáveis relacionadas ao RD0
Local aRd0Recnos		:= {}
Local aRd0NotFields		:= {}
Local aRd0Header		:= {}
Local aRd0Cols			:= {}
Local nRd0Order			:= RetOrdem( "RD0" , "RD0_FILIAL+RD0_CODIGO" )
Local nRddOrder			:= RetOrdem( "RDD" , "RDD_FILIAL+RDD_CODAVA" )
Local nRd9Order			:= RetOrdem( "RD9" , "RD9_FILIAL+RD9_CODADO" )
Local nRd9Bytes			:= ( GetSx3Cache( "RD9_CODADO" , "X3_TAMANHO" ) + GetSx3Cache( "RD9_CODAVA" , "X3_TAMANHO" ) )
Local cRd9Filial		:= ""

//Variáveis relacionadas ao RDB
Local aRdbNotFields		:= {}
Local aRdbFldsAux		:= {}
Local aRdbQuery			:= {}
Local aRdbKeys			:= {}
Local aRdbVirtGd		:= {}
Local aRdbVisuGd		:= {}
Local aRdbRecnos		:= {}
Local aRdbGdAltera  	:= {}
Local nRdbUsado			:= 0
Local nRdbMaxLocks		:= 5
Local nRdbOrder			:= RetOrdem( "RDB" , "RDB_FILIAL+RDB_CODAVA" )
Local bGetRDB			:= { || NIL }  
Local aRdbMemoGd		:= {}
Local aSvRDBCols		:= {}
Local aRdyRecnos		:= {}
Local aRdyKeys			:= {}
Local aFreeRDBLocks		:= {}
Local bRdbGdDelOk		:= { |lDelOk| CursorWait() , lDelOk := RdbGdDelOk( nOpc ) , CursorArrow() , lDelOk }
Local bRDBSort			:= { || NIL }
Local cRdBFilial		:= ""

//Variáveis relacionadas ao RD7
Local aRd7GdAltera  	:= {}
Local aRd7GdNaoAlt		:= {}
Local aRd7Recnos		:= {}
Local aRd7Keys			:= {}
Local aRd7NotFields		:= {}
Local aRd7VirtGd		:= {}
Local aRd7VisuGd		:= {}
Local aRd7FldsAux		:= {}
Local aSvRd7Cols		:= {}
Local aRd7Query			:= {}
Local aFreeRd7Locks		:= {}
Local bRd7GdDelOk		:= { |lDelOk| CursorWait() , lDelOk := Rd7GdDelOk( nOpc ) , CursorArrow() , lDelOk }
Local bRd7Sort			:= { || NIL }
Local bGetRd7			:= { || NIL }
Local nRd7Order			:= RetOrdem( "RD7" , "RD7_FILIAL+RD7_CODAVA" )
Local nRd7Usado			:= 0
Local nRd7MaxLocks		:= 5
Local nRd7GhostCol		:= 0

//Variáveis relacionadas ao RDD
Local aRddGdAltera  	:= {}
Local aRddGdNaoAlt		:= {}
Local aRddRecnos		:= {}
Local aRddKeys			:= {}
Local aRddNotFields		:= {}
Local aRddVirtGd		:= {}
Local aRddVisuGd		:= {}
Local aRddFldsAux		:= {}
Local aSvRDDCols		:= {}
Local aRddQuery			:= {}
Local bRddSort			:= { || NIL } 
Local bGetRDD			:= { || NIL }
Local bRddGdDelOk		:= { |lDelOk| CursorWait() , lDelOk := RddGdDelOk( nOpc ) , CursorArrow() , lDelOk }
Local nRddUsado			:= 0
Local nRddMaxLocks		:= 5

//Variáveis relacionadas ao dimensionamento da tela e o conteudo interno da dialog 
Local aAdvSize			:= {}
Local aInfoAdvSize		:= {}
Local aObjSize			:= {}
Local aObjCoords		:= {}
Local aInfo2AdvSize		:= {}
Local aObj2Size			:= {}
Local aObj2Coords		:= {}
Local aObj3Size			:= {}
Local aObj3Coords		:= {}
Local aInfo4AdvSize		:= {}
Local aObj4Size			:= {}
Local aObj4Coords		:= {}
Local aButtons			:= {}
Local oDlg
Local oGroup
Local oFont
Local oFolders			
Local aFolders			:= Array( 03 )
Local aPages			:= Array( 03 )
Local aObjFolder		:= Array( 03 )
Local bDialogInit		:= { || NIL }
Local bGdSeek			:= { || NIL }
Local nOpcNewGd			:= IF( ( ( nOpc == 2 ) .or. ( nOpc == 5 ) ) , 0 , GD_INSERT + GD_UPDATE + GD_DELETE	)
Local nOpcAlt			:= 0
Local nRdbGhostCol		:= 0
Local aRdbaCols			:= {}
Local aRd7aCols			:= {}
Local aRddaCols			:= {}
Local aRdbGdNaoAlt		:= {}
Local aGdObjects		:= {}
Local bSet15			:= { || NIL }
Local bSet24			:= { || NIL }
Local nRddGhostCol		:= 0
Local nNewFolder		:= 1
Local bInitFolder		:= {|| FolderSetOption( nNewFolder , oFolders:nOption , aObjFolder , @aGdObjects , @nActFolder )}
Local nActFolder		:= 0

Private nGetSX8Len		:= GetSX8Len()
Private aRdbHeader
Private aRdbCols
Private cRDBNumGhostCol
Private oGdRdb
Private aRd7Header
Private aRd7Cols
Private cRd7NumGhostCol
Private oGdRd7
Private aGets
Private aTela
Private aRddHeader
Private aRddCols
Private cRDDNumGhostCol
Private oGdRd6
Private oGdRdd
Private oGdRd0 

Private __nRddRd0AtAnt		:= 0
Private __nRdbRd0AtAnt		:= 0 
Private __nRd7Rd0AtAnt		:= 0  

Private ___nRd0SvAt			:= 0

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Poe o cursor do Mouse em Estado de Espera					   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorWait()


	
aAdvSize		:= MsAdvSize()
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
aAdd( aObjCoords , { 000 , 000 , .T. , .T. , .T. } )
aObjSize 		:= MsObjSize( aInfoAdvSize , aObjCoords )
    
aAdvSize		:= MsAdvSize(.f.)
aAdvSize[4]		-=	25 // Altura
aAdvSize[3]		-=	3  // Largura
    
aInfo2AdvSize	:= { aAdvSize[1] , 1 , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
aAdd( aObj2Coords , { 000 , 000 , .T. , .T. } )
aObj2Size 		:= MsObjSize( aInfo2AdvSize , aObj2Coords )
    
aAdd( aObj3Coords , { 000 , 020 , .T. , .F. } )
aAdd( aObj3Coords , { 000 , 100 , .T. , .F. } )	
aAdd( aObj3Coords , { 000 , 000 , .T. , .T., .T. } )
aObj3Size 		:= MsObjSize( aInfo2AdvSize , aObj3Coords )	

aAdv4Size		:= aClone(aObj3Size[3])
aInfo4AdvSize	:= { 1 , 1 , aAdv4Size[3]-5 , aAdv4Size[4]-15 , 5 , 5 }
aAdd( aObj4Coords , { 000 , 000 , .T. , .T. } )
aObj4Size 		:= MsObjSize( aInfo4AdvSize , aObj4Coords )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Define o Conteudo do aFolders								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aFolders[ 01 ] 		:= OemToAnsi( "&"+STR0008 ) //"Resposta" 
aFolders[ 02 ] 		:= OemToAnsi( "&"+STR0009 ) //"Refinamento"
aFolders[ 03 ] 		:= OemToAnsi( "&"+STR0014 ) //"Resultado"

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Define o Conteudo do aPages								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aPages[ 01 ]		:= OemToAnsi( STR0008 ) //"Resposta"
aPages[ 02 ]		:= OemToAnsi( STR0009 ) //"Refinamento*
aPages[ 03 ]		:= OemToAnsi( STR0014 ) //"Resultado"
		
Begin Sequence
/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Checa a Opcao Selecionada									   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aRotSetOpc( cAlias , NIL , nOpc , .F. )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta os Dados para a Enchoice							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aRd6NotFields	:= { "RD6_FILIAL" }
	bGetRd6			:= { |lExclu|	IF( lExecLock , lExclu := .T. , aRd60Keys := NIL ),;
										aRd6Cols := RD6->(;
															GdBuildCols(	@aRd6Header		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																			@nRd6Usado		,;	//02 -> Numero de Campos em Uso
																			@aRd6VirtEn		,;	//03 -> [@]Array com os Campos Virtuais
																			@aRd6VisuEn		,;	//04 -> [@]Array com os Campos Visuais
																			"RD6"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																			aRd6NotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																			NIL         	,;	//07 -> [@]Array unidimensional contendo os Recnos
																			"RD6"		   	,;	//08 -> Alias do Arquivo Pai
																			NIL				,;	//09 -> Chave para o Posicionamento no Alias Filho
																			NIL				,;	//10 -> Bloco para condicao de Loop While
																			NIL				,;	//11 -> Bloco para Skip no Loop While
																			NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																			NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																			NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																			NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																			NIL				,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																			NIL				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																			NIL				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																			NIL				,;	//19 -> Carregar Coluna Fantasma
																			NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																			NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
																			NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
																			NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																			@aRd6Keys		,;	//24 -> [@]Array que contera as chaves conforme recnos
																			NIL   			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																			@lExclu			 ;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																	    );
														  ),;
										IF( lExecLock , ( lExclu ) , .T. );
	  					}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Lock do Registro do RD6									   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lLocks := WhileNoLock( "RD6" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetRd6 ) )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Garanto o Posicionamento do Recno no RD6					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RD6->( MsGoto( nReg ) )
	
	CursorWait()
	cRd6Filial		:= RD6->RD6_FILIAL
	cRd6Codigo		:= RD6->RD6_CODIGO
	cKeySeek		:= ( xFilial( "RDD" ,cRd6Filial ) + cRd6Codigo )
	cRd9Filial		:= xFilial( "RD9" , cRd6Filial )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Cria as Variaveis de Memoria e Carrega os Dados Conforme o ar³
	³ quivo														   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nLoop := 1 To nRd6Usado
		aAdd( aRd6Fields , aRd6Header[ nLoop , 02 ] )
		SetMemVar( aRd6Header[ nLoop , 02 ] , aRd6Cols[ 01 , nLoop ] , .T. )
	Next nLoop
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta os Dados para a GetDados							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aRd0NotFields , "RD0_FILIAL"  )
	RD0->( dbSetOrder( nRd0Order ) )
	bRd0Skip	:= { || ( fDesc( "RD9" , ( RD0->RD0_CODIGO + cRd6Codigo ) , "RD9_CODADO+RD9_CODAVA" , nRd9Bytes , cRd9Filial , nRd9Order , .F. ) <> ( RD0->RD0_CODIGO + cRd6Codigo  ) ) }
	cKeySeek	:= xFilial( "RD0" , cRd6Filial )
	aRd0Cols	:= RD0->(;
							GdBuildCols(	@aRd0Header		,;	//01 -> Array com os Campos do Cabecalho da GetDados
											NIL       		,;	//02 -> Numero de Campos em Uso
											NIL				,;	//03 -> [@]Array com os Campos Virtuais
											NIL         	,;	//04 -> [@]Array com os Campos Visuais
											"RD0"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
											aRd0NotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
											@aRd0Recnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
											"RD0"		   	,;	//08 -> Alias do Arquivo Pai
											cKeySeek		,;	//09 -> Chave para o Posicionamento no Alias Filho
											NIL				,;	//10 -> Bloco para condicao de Loop While
											bRd0Skip		 ;	//11 -> Bloco para Skip no Loop While
									    );
						  )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Nao Existem Avaliacoes para Este Participante 			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF Empty( aRd0Recnos )
		MsgInfo( STR0012 )	//"Não Existem Participantes para esta Avaliação"
		Break
	EndIF
	
	//Posiciona no primeiro 
	cRd0Codigo	:= aRd0Cols[1,1]
	
	
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Campos que nao serao carregados					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aRdbNotFields , "RDB_FILIAL"  )
	aAdd( aRdbNotFields , "RDB_CODJUS"  )
	aAdd( aRdbNotFields , "RDB_CODMEM"  )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Array com os Campos Auxiliares    					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( Altera )
		aRdbFldsAux := { { "GHOSTCOL" , "RDBNumGhostCol()" } }
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta os Dados para a GetDados							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aRdbQuery		:= Array( 05 )
	aRdbQuery[01]	:= "RDB_FILIAL='"+cRd6Filial+"'"
	aRdbQuery[02]	:= " AND "
	aRdbQuery[03]	:= "RDB_CODAVA='"+cRd6Codigo+"'"
	aRdbQuery[04]	:= " AND "
	aRdbQuery[05]	:= "D_E_L_E_T_=' ' "

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega Informacoes do RDB									   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		RDB->( dbSetOrder( nRdbOrder ) )
		cKeySeek	:= ( xFilial( "RDB" , cRd6Filial ) + cRd6Codigo )
		bGetRDB	:= { |lLock,lExclu| IF( lExecLock , ( lLock := .T. , lExclu := .T. ) , aRdbKeys := NIL ),;
						 			aRdbCols := RDB->(;
														GdBuildCols(	@aRdbHeader		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																		@nRdbUsado		,;	//02 -> Numero de Campos em Uso
																		@aRdbVirtGd		,;	//03 -> [@]Array com os Campos Virtuais
																		@aRdbVisuGd		,;	//04 -> [@]Array com os Campos Visuais
																		"RDB"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																		aRdbNotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																		@aRdbRecnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
																		"RD6"		   	,;	//08 -> Alias do Arquivo Pai
																		cKeySeek		,;	//09 -> Chave para o Posicionamento no Alias Filho
																		NIL				,;	//10 -> Bloco para condicao de Loop While
																		NIL				,;	//11 -> Bloco para Skip no Loop While
																		NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																		NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																		NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																		NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																		aRdbQuery		,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																		.F.				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																		.F.				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																		aRdbFldsAux		,;	//19 -> Carregar Coluna Fantasma
																		NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																		NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
																		NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
																		NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																		@aRdbKeys		,;	//24 -> [@]Array que contera as chaves conforme recnos
																		@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																		@lExclu			,;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																		nRdbMaxLocks	,;	//27 -> Numero maximo de Locks a ser efetuado
																		Altera			 ;	//28 -> Utiliza Numeracao na GhostCol
																    );
											  		),;
									IF( lExecLock , ( lLock .and. lExclu ) , .T. );
	  		    }
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Lock do Registro do RDB									   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lLocks := WhileNoLock( "RDB" , NIL , NIL , 1 , 1 , .T. , nRdbMaxLocks , 5 , bGetRDB ) )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Campos que nao serao carregados					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aRd7NotFields , "RD7_FILIAL"  )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Array com os Campos Auxiliares    					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( Altera )
		aRd7FldsAux := { { "GHOSTCOL" , "Rd7NumGhostCol()" } }
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta os Dados para a GetDados							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aRd7Query		:= Array( 05 )
	aRd7Query[01]	:= "RD7_FILIAL='"+cRd6Filial+"'"
	aRd7Query[02]	:= " AND "
	aRd7Query[03]	:= "RD7_CODAVA='"+cRd6Codigo+"'"
	aRd7Query[04]	:= " AND "
	aRd7Query[05]	:= "D_E_L_E_T_=' ' "

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega Informacoes do RD7									   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		RD7->( dbSetOrder( nRd7Order ) )
		cKeySeek	:= ( xFilial( "RD7" , cRd6Filial ) + cRd6Codigo )
		bGetRd7	:= { |lLock,lExclu| IF( lExecLock , ( lLock := .T. , lExclu := .T. ) , aRd7Keys := NIL ),;
						 			aRd7Cols := RD7->(;
														GdBuildCols(	@aRd7Header		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																		@nRd7Usado		,;	//02 -> Numero de Campos em Uso
																		@aRd7VirtGd		,;	//03 -> [@]Array com os Campos Virtuais
																		@aRd7VisuGd		,;	//04 -> [@]Array com os Campos Visuais
																		"RD7"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																		aRd7NotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																		@aRd7Recnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
																		"RD6"		   	,;	//08 -> Alias do Arquivo Pai
																		cKeySeek		,;	//09 -> Chave para o Posicionamento no Alias Filho
																		NIL				,;	//10 -> Bloco para condicao de Loop While
																		NIL				,;	//11 -> Bloco para Skip no Loop While
																		NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																		NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																		NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																		NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																		aRd7Query		,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																		.F.				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																		.F.				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																		aRd7FldsAux		,;	//19 -> Carregar Coluna Fantasma
																		NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																		NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
																		NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
																		NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																		@aRd7Keys		,;	//24 -> [@]Array que contera as chaves conforme recnos
																		@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																		@lExclu			,;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																		nRd7MaxLocks	,;	//27 -> Numero maximo de Locks a ser efetuado
																		Altera			 ;	//28 -> Utiliza Numeracao na GhostCol
																    );
											  		),;
									IF( lExecLock , ( lLock .and. lExclu ) , .T. );
	  		    }
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Lock do Registro do RD7									   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lLocks := WhileNoLock( "RD7" , NIL , NIL , 1 , 1 , .T. , nRd7MaxLocks , 5 , bGetRd7 ) )
		Break
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Campos que nao serao carregados					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aRddNotFields , "RDD_FILIAL"  )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Array com os Campos Auxiliares    					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( Altera )
		aRddFldsAux := { { "GHOSTCOL" , "RDDNumGhostCol()" } }
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta os Dados para a GetDados							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aRddQuery		:= Array( 05 )
	aRddQuery[01]	:= "RDD_FILIAL='"+cRd6Filial+"'"
	aRddQuery[02]	:= " AND "
	aRddQuery[03]	:= "RDD_CODAVA='"+cRd6Codigo+"'"
	aRddQuery[04]	:= " AND "
	aRddQuery[05]	:= "D_E_L_E_T_=' ' "

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega Informacoes do RDD									   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		RDD->( dbSetOrder( nRddOrder ) )
		cKeySeek	:= ( xFilial( "RDD" , cRd6Filial ) + cRd6Codigo )
		bGetRDD	:= { |lLock,lExclu| IF( lExecLock , ( lLock := .T. , lExclu := .T. ) , aRddKeys := NIL ),;
						 			aRddCols := RDD->(;
														GdBuildCols(	@aRddHeader		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																		@nRddUsado		,;	//02 -> Numero de Campos em Uso
																		@aRddVirtGd		,;	//03 -> [@]Array com os Campos Virtuais
																		@aRddVisuGd		,;	//04 -> [@]Array com os Campos Visuais
																		"RDD"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																		aRddNotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																		@aRddRecnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
																		"RD6"		   	,;	//08 -> Alias do Arquivo Pai
																		cKeySeek		,;	//09 -> Chave para o Posicionamento no Alias Filho
																		NIL				,;	//10 -> Bloco para condicao de Loop While
																		NIL				,;	//11 -> Bloco para Skip no Loop While
																		NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																		NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																		NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																		NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																		aRddQuery		,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																		.F.				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																		.F.				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																		aRddFldsAux		,;	//19 -> Carregar Coluna Fantasma
																		NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																		NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
																		NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
																		NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																		@aRddKeys		,;	//24 -> [@]Array que contera as chaves conforme recnos
																		@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																		@lExclu			,;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																		nRddMaxLocks	,;	//27 -> Numero maximo de Locks a ser efetuado
																		Altera			 ;	//28 -> Utiliza Numeracao na GhostCol
																    );
											  		),;
									IF( lExecLock , ( lLock .and. lExclu ) , .T. );
	  		    }
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Lock do Registro do RDD									   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lLocks := WhileNoLock( "RDD" , NIL , NIL , 1 , 1 , .T. , nRddMaxLocks , 5 , bGetRDD ) )
		Break
	EndIF
	
	CursorWait()
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Obtem o Pocisionamento no GHOSTCOL							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nRddGhostCol	:= GdFieldPos( "GHOSTCOL" , aRddHeader )
	IF ( nRddGhostCol > 0 )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Obtem a ultima numeracao Gerada							   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		cRDDNumGhostCol	:= aRddCols[ Len( aRddCols ) , nRddGhostCol ]
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Define Bloco para Sorteio das Informacoes Antes da Gravacao  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		bRDDSort := { || CursorWait() , aSort( aRddCols , NIL , NIL , { |x,y| ( x[ nRddGhostCol ] < y[ nRddGhostCol ] ) } ) , CursorArrow() }
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Efetuo Copia para Comparacao na Saida						   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aSvRDDCols	:= aClone( aRddCols )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Garanto que o Ponteiro Estara no Final do Arquivo para que nao³
	³Carregue Conteudo Invalido nos Inicializadores Padroes        ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	PutFileInEof( "RDD" )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Campos nao Editaveis na GetDados 				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aRddGdNaoAlt := { "RDD_CODAVA" , "RDD_CODADO" , "RDD_CODCOM" }

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Campos Editaveis para a GetDados				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nLoop := 1	To nRddUsado
		SetMemVar( aRddHeader[ nLoop , 02 ] , GetValType( aRddHeader[ nLoop , 08 ] , aRddHeader[ nLoop , 04 ] ) , .T. )
		IF (;
				( aScan( aRddVirtGd		, aRddHeader[ nLoop , 02 ] ) == 0 ) .and.	;
	   			( aScan( aRddVisuGd		, aRddHeader[ nLoop , 02 ] ) == 0 ) .and.	;
	   			( aScan( aRddNotFields	, aRddHeader[ nLoop , 02 ] ) == 0 ) .and.	;
	   			( aScan( aRddGdNaoAlt	, aRddHeader[ nLoop , 02 ] ) == 0 )			;
		  	)
			aAdd( aRddGdAltera , aRddHeader[ nLoop , 02 ] )
		EndIF
	Next nLoop
    
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para o TudoOk da GetDados do RDD			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bRddGdTudOk		:= { || oGdRdd:TudoOk() }						//Valida as Informacoes da GetDados RDD

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Obtem o Pocisionamento no GHOSTCOL							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nRd7GhostCol	:= GdFieldPos( "GHOSTCOL" , aRd7Header )
	IF ( nRd7GhostCol > 0 )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Obtem a ultima numeracao Gerada							   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		cRd7NumGhostCol	:= aRd7Cols[ Len( aRd7Cols ) , nRd7GhostCol ]
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Define Bloco para Sorteio das Informacoes Antes da Gravacao  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		bRd7Sort := { || CursorWait() , aSort( aRd7Cols , NIL , NIL , { |x,y| ( x[ nRd7GhostCol ] < y[ nRd7GhostCol ] ) } ) , CursorArrow() }
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Efetuo Copia para Comparacao na Saida						   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aSvRd7Cols	:= aClone( aRd7Cols )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Garanto que o Ponteiro Estara no Final do Arquivo para que nao³
	³Carregue Conteudo Invalido nos Inicializadores Padroes        ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	PutFileInEof( "RD7" )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Campos nao Editaveis na GetDados 				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aRd7GdNaoAlt := { "RD7_CODAVA" , "RD7_CODADO" , "RD7_CODCOM" }

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Campos Editaveis para a GetDados				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nLoop := 1	To nRd7Usado
		SetMemVar( aRd7Header[ nLoop , 02 ] , GetValType( aRd7Header[ nLoop , 08 ] , aRd7Header[ nLoop , 04 ] ) , .T. )
		SetMemVar( aRd0Header[ nLoop , 02 ] , aRd0Cols[ 01 , nLoop ] , .T. )
		SetMemVar( aRd7Header[ nLoop , 02 ] , aRd7Cols[ 01 , nLoop ] , .T. )
		IF (;
				( aScan( aRd7VirtGd		, aRd7Header[ nLoop , 02 ] ) == 0 ) .and.	;
	   			( aScan( aRd7VisuGd		, aRd7Header[ nLoop , 02 ] ) == 0 ) .and.	;
	   			( aScan( aRd7NotFields	, aRd7Header[ nLoop , 02 ] ) == 0 ) .and.	;
	   			( aScan( aRd7GdNaoAlt	, aRd7Header[ nLoop , 02 ] ) == 0 )			;
		  	)
			aAdd( aRd7GdAltera , aRd7Header[ nLoop , 02 ] )
		EndIF
	Next nLoop

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para o TudoOk da GetDados do RD7			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bRd7GdTudOk		:= { || oGdRd7:TudoOk() }						//Valida as Informacoes da GetDados RD7 
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Obtem o Pocisionamento no GHOSTCOL							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nRdbGhostCol	:= GdFieldPos( "GHOSTCOL" , aRdbHeader )
	IF ( nRdbGhostCol > 0 )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Obtem a ultima numeracao Gerada							   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		cRDBNumGhostCol	:= aRdbCols[ Len( aRdbCols ) , nRdbGhostCol ]
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Define Bloco para Sorteio das Informacoes Antes da Gravacao  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		bRDBSort := { || CursorWait() , aSort( aRdbCols , NIL , NIL , { |x,y| ( x[ nRdbGhostCol ] < y[ nRdbGhostCol ] ) } ) , CursorArrow() }
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Efetuo Copia para Comparacao na Saida						   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aSvRDBCols	:= aClone( aRdbCols )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Garanto que o Ponteiro Estara no Final do Arquivo para que nao³
	³Carregue Conteudo Invalido nos Inicializadores Padroes        ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	PutFileInEof( "RDB" )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Campos nao Editaveis na GetDados 				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aRdbGdNaoAlt := { "RDB_CODAVA" , "RDB_CODADO" , "RDB_CODCOM",  "RDB_CODMEM", "RDB_CODJUS", "RDB_ID" }
    
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Campos Memos                     				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aRdbMemoGd , { "RDB_MEMO" 	, "RDB_CODMEM" } )
	aAdd( aRdbMemoGd , { "RDB_JUSMEM" 	, "RDB_CODJUS" } )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Campos Editaveis para a GetDados				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nLoop := 1	To nRdbUsado
		SetMemVar( aRdbHeader[ nLoop , 02 ] , GetValType( aRdbHeader[ nLoop , 08 ] , aRdbHeader[ nLoop , 04 ] ) , .T. )
		IF (;
				( aScan( aRdbVirtGd		, aRdbHeader[ nLoop , 02 ] ) == 0 ) .and.	;
	   			( aScan( aRdbVisuGd		, aRdbHeader[ nLoop , 02 ] ) == 0 ) .and.	;
	   			( aScan( aRdbNotFields	, aRdbHeader[ nLoop , 02 ] ) == 0 ) .and.	;
	   			( aScan( aRdbGdNaoAlt	, aRdbHeader[ nLoop , 02 ] ) == 0 )			;
		  	)
			aAdd( aRdbGdAltera , aRdbHeader[ nLoop , 02 ] )
		EndIF
	Next nLoop
    
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega os Recnos e as Chaves correspondentes dos campos Memos³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpc <> 2 ) .and. ( nOpc <> 3 ) )
		IF !( lLocks := ApdMemRec( "RDB" , aRdbRecnos , aRdbMemoGd , @aRdyRecnos , @aRdyKeys , .T. ) )
			Break
		EndIF
    EndIF 
    

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para o TudoOk da GetDados do RDB			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bRdbGdTudOk		:= { || oGdRdb:TudoOk() }						//Valida as Informacoes da GetDados RDB

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para a Tecla <CTRL-O>						   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSet15		:= { || IF(; 
								(;									
									( nOpc == 3 );	//Inclusao
									.or.;
									( nOpc == 4 );	//Alteracao
								);			
								.and.;
								Eval( bRd7GdTudOk ) ;							//Valida as Informacoes da GetDados RD7		
								.and.;
								Eval( bRdbGdTudOk ) ;							//Valida as Informacoes da GetDados RDB
								.and.;
								Eval( bRddGdTudOk ),;							//Valida as Informacoes da GetDados RDD
								(;
									Eval( oGdRd0:bChange , .T. ),;				//Transere as informacoes Atuais para o aRddCols
									nOpcAlt := 1 ,;
									RestKeys( aSvKeys , .T. ),;
									oDlg:End();
							 	),;
							 	IF(;
							 		(;
							 			( nOpc == 4 );	//Alteracao
							 		),;		
							 			(;
							 				nOpcAlt := 0 ,;
							 				.F.;
							 			 ),;
									(;
										nOpcAlt := IF( nOpc == 2 , 0 , 1 ) ,;	//Visualizacao ou Exclusao
										RestKeys( aSvKeys , .T. ),;
										oDlg:End();
							 		);
							 	  );
						   );
					 }
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para a Tecla <CTRL-X>     	   				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSet24		:= { || ( nOpcAlt := 0 , RestKeys( aSvKeys , .T. ) , oDlg:End() ) }

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Botao de Pesquisa na GetDados					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
   	bGdSeek := { ||	Apda250GdSeek( aGdObjects , nActFolder , aPages , aObjFolder )	,;
					SetKey( VK_F4 , bGdSeek ) ;
			   }   
	aAdd(;
			aButtons	,;
							{;
								"pesquisa",;
	   							bGdSeek,;
	       	   					OemToAnsi( STR0002 + "...<F4>"  ),;	//"Pesquisar"
	       	   					OemToAnsi( STR0002 );				//"Pesquisar"
	           				};
	     )
    
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para a Inicializacao do Dialog            	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bDialogInit		:= { ||;							
								aObjFolder[01,01,01] := oGdRd0							,;
								aObjFolder[01,01,02] := { || .T. }						,;
								aObjFolder[01,01,03] := NIL								,;
								aObjFolder[01,02,01] := oGdRdb							,;
								aObjFolder[01,02,02] := bRdbGdTudOk						,;
								aObjFolder[01,02,03] := NIL								,;
								aObjFolder[02,01,01] := oGdRd0							,;
								aObjFolder[02,01,02] := { || .T. }						,;
								aObjFolder[02,01,03] := NIL								,;
								aObjFolder[02,02,01] := oGdRd7							,;
								aObjFolder[02,02,02] := bRd7GdTudOk						,;
								aObjFolder[02,02,03] := NIL								,;
								aObjFolder[03,01,01] := oGdRd0							,;
								aObjFolder[03,01,02] := { || .T. }						,;
								aObjFolder[03,01,03] := NIL								,;
								aObjFolder[03,02,01] := oGdRdd							,;
								aObjFolder[03,02,02] := bRddGdTudOk						,;
								aObjFolder[03,02,03] := NIL								,;
								EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons )	,;
								aGdObjects := {}										,;								
								Eval(bInitFolder)										,;
								aRotSetOpc( cAlias , NIL , nOpc , .F. )					 ;
					   }
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Garante o Posicionamento do RD0							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RD6->( MsGoto( nReg ) )
    
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Elementos para o Array do Objeto Folder        	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aObjFolder[ 01 ]	:= Array( 02 , 03 )
	aObjFolder[ 02 ]	:= Array( 02 , 03 )
	aObjFolder[ 03 ]	:= Array( 02 , 03 )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta o Dialogo Principal para a Manutencao das Formulas	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	DEFINE MSDIALOG oDlg TITLE cCadastro From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF GetWndDefault() PIXEL

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega o Objeto Folder               					   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
        oFolders := TFolder():New( aObj3Size[3,1],aObj3Size[3,2],aFolders,,oDlg,,,,.T.,.F.,aObj3Size[3,3],aObj3Size[3,4] )
 		oFolders:bSetOption := { |nNewFolder| FolderSetOption( nNewFolder , oFolders:nOption , aObjFolder , @aGdObjects , @nActFolder ) }
 
		@ aObj3Size[1,1] , aObj3Size[1,2]      GROUP oGroup TO aObj3Size[1,3] ,aObj3Size[1,4]*0.10 LABEL OemToAnsi(STR0006) OF oDlg PIXEL	// "Código"
		oGroup:oFont:= oFont
		@ aObj3Size[1,1] , aObj3Size[1,4]*0.11 GROUP oGroup TO aObj3Size[1,3] ,aObj3Size[1,4]/*0.8*/ LABEL OemToAnsi(STR0007) OF oDlg PIXEL	// "Descrição"
		oGroup:oFont:= oFont  
		
		@ aObj3Size[1,1]+10 , aObj3Size[1,2]+10      SAY StrZero(Val(RD6->RD6_CODIGO),Len(RD6->RD6_CODIGO))	SIZE 050,10 OF oDlg PIXEL FONT oFont
		@ aObj3Size[1,1]+10 , aObj3Size[1,4]*0.10+10 SAY OemToAnsi(RD6->RD6_DESC) 					SIZE 146,10 OF oDlg PIXEL FONT oFont
	    
	
		oGdRd6	:= MsNewGetDados():New(	0				,;
										0				,;
										0				,;
										0				,;
										0				,;
										NIL				,;
										NIL				,;
										""				,;
										{}				,;
										0				,;
										1				,;
										NIL				,;
										NIL				,;
										NIL				,;
										Nil				,;
										aRd6Header		,;
										aRd6Cols		 ;
									 )
									 
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta o Objeto GetDados para o RDD						   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	   	oGdRd0	:= MsNewGetDados():New(	aObj3Size[2,1]	,;
										aObj3Size[2,2]	,;
										aObj3Size[2,3]	,;
										aObj3Size[2,4]	,;
										0				,;
										NIL				,;
										NIL				,;
										""				,;
										{}				,;
										0				,;
										9999			,;
										NIL				,;
										NIL				,;
										NIL				,;
										Nil				,;
									   	aRd0Header		,;
										aRd0Cols		 ;
									 )
		oGdRd0:oBrowse:bGotFocus := { || Rd0GotFocus( oGdRd0 ) }
		oGdRd0:bChange := { |lColsToAll| Rd02RDDChg( oGdRd0 , @oGdRdd , @aRddCols , lColsToAll ),;
		                                 Rd02Rd7Chg( oGdRd0 , @oGdRd7 , @aRd7Cols , lColsToAll ),;
		                                 Rd02RDBChg( oGdRd0 , @oGdRdb , @aRdbCols , lColsToAll ) ;
		                  }
		oGdRd0:oBrowse:cToolTip := OemToAnsi( STR0010 ) //"Participantes"
        
        /*aRdbaCols 	:= GdRmkaCols( aRdbHeader , .F. , .T. , .T. , NIL , .F. )
		aRd7aCols	:= GdRmkaCols( aRd7Header , .F. , .T. , .F. , NIL , .F. )
		aRddaCols 	:= GdRmkaCols( aRddHeader , .F. , .T. , .T. , NIL , .F. ) */
        
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta o Objeto GetDados para o RDB						   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/  
		
	  	oGdRdb	:= MsNewGetDados():New(	aObj4Size[1,1]											,;
										aObj4Size[1,2]											,;
										aObj4Size[1,3]											,;
										aObj4Size[1,4]											,;
										nOpcNewGd												,;
										"RdbGdLinOk"											,;
										"RdbGdTudOk"											,;
										""														,;
										aRdbGdAltera											,;
										0														,;
										999999													,;
										NIL														,;
										NIL														,;
									   	bRdbGdDelOk												,;
										oFolders:aDialogs[ 01 ]									,;
										aRdbHeader												,;
										GdRmkaCols( aRdbHeader , .F. , .T. , .T. , NIL , .F. )   ;
									 )
		oGdRdb:oBrowse:cToolTip := OemToAnsi( STR0015 )	//"Respostas"
	    oGdRdb:oBrowse:bGotFocus	:={||	ChangeF3()	}
	    oGdRdb:bChange				:={||	ChangeF3()	}
	    oGdRdb:oBrowse:bMoved		:={||	ChangeF3()	}	    		    				
		bSvblDblClick := oGdRdb:oBrowse:blDblClick                                
		//-- somente permite a modificacao se for inclusao ou alteracao e a questao for dissertativa
		oGdRdb:oBrowse:blDblClick := { || Apd190EdtMem( oGdRdb , bSvblDblClick ,;
																 ( ( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) .and. ;
																      RdbMemoWhen()  ;
																 ) ; 
																 ) }
        
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta o Objeto GetDados para o RD7						   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	   	oGdRd7	:= MsNewGetDados():New(	aObj4Size[1,1]											,;
										aObj4Size[1,2]											,;
										aObj4Size[1,3]											,;
										aObj4Size[1,4]											,;
										nOpcNewGd												,;
										"Rd7GdLinOk"											,;
										"Rd7GdTudOk"											,;
										""														,;                            			
										aRd7GdAltera											,;
										0														,;
										999999													,;
										NIL														,;
										NIL														,;
										bRd7GdDelOk												,;
										oFolders:aDialogs[ 02 ]									,;	
										aRd7Header												,;
										GdRmkaCols( aRd7Header , .F. , .T. , .F. , NIL , .F. )  ;
									 )
		oGdRd7:oBrowse:cToolTip := OemToAnsi( STR0016 )	//"Refinamentos"
		
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta o Objeto GetDados para o RDD						   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		oGdRdd	:= MsNewGetDados():New(	aObj4Size[1,1]											,;
										aObj4Size[1,2]											,;
										aObj4Size[1,3]											,;
										aObj4Size[1,4]											,;
										nOpcNewGd												,;
										"RddGdLinOk"											,;
										"RddGdTudOk"											,;
										""														,;
										aRddGdAltera											,;
										0														,;
										999999													,;
										NIL														,;
										NIL														,;              
										bRddGdDelOk												,;
										oFolders:aDialogs[ 03 ]									,;
										aRddHeader												,;
										GdRmkaCols( aRddHeader , .F. , .T. , .T. , NIL , .F. )   ;
									 )
									 
		oGdRdd:oBrowse:cToolTip := OemToAnsi( STR0017 )	//"Resultados"

	ACTIVATE MSDIALOG oDlg ON INIT Eval( bDialogInit ) CENTERED
		/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Coloca o Ponteiro do Mouse em Estado de Espera			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	CursorWait()

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Garante o Posicionamento do RD0							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RD6->( MsGoto( nReg ) )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Restaura o Estado do Ponteiro do Mouse						   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	CursorArrow()
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Garante o Posicionamento do RD6							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RD6->( MsGoto( nReg ) ) 
    
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Quando Confirmada a Opcao e Nao for Visualizacao Grava ou   Ex³
	³clui as Informacoes do RD0 e RDD							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF( nOpcAlt == 1 )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Apenas se nao For Visualizacao              				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
 		IF ( nOpc != 2 )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Gravando/Incluido ou Excluindo Informacoes do SRY/RDD        ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		   	MsAguarde(;
							{ ||;
								   	Eval( bRDDSort  ),;				//Sorteia o aRddCols para Comparacao na Gravacao
									Apda090Grava(;
													nOpc		,;	//Opcao de Acordo com aRotina
							 						nReg		,;	//Numero do Registro do Arquivo Pai ( RD0 )
							 						aRddHeader	,;	//Campos do Arquivo de Sub-Itens ( RDD )
							 						aRddCols	,;	//Sub-Itens Atuis do Arquivo de Sub-Itens ( RDD )
							 						aSvRDDCols	,;	//Sub-Itens Anteriores do Arquivo de Sub-Itens ( RDD )
							 						aRddVirtGd	,;	//Campos Virtuais do Arquivo de Sub-Itens ( RDD )
							 						aRddRecnos	 ;	//Recnos do Arquivo de Sub-Itens ( RDD )
							 					),;
							 		Eval( bRd7Sort  ),;				//Sorteia o aRd7Cols para Comparacao na Gravacao
									Apda180Grava(;
													nOpc		,;	//Opcao de Acordo com aRotina
							 						nReg		,;	//Numero do Registro do Arquivo Pai ( RD0 )
							 						aRd7Header	,;	//Campos do Arquivo de Sub-Itens ( RD7 )
							 						aRd7Cols	,;	//Sub-Itens Atuis do Arquivo de Sub-Itens ( RD7 )
							 						aSvRd7Cols	,;	//Sub-Itens Anteriores do Arquivo de Sub-Itens ( RD7 )
							 						aRd7VirtGd	,;	//Campos Virtuais do Arquivo de Sub-Itens ( RD7 )
							 						aRd7Recnos	 ;	//Recnos do Arquivo de Sub-Itens ( RD7 )
							 					),;
							 		Eval( bRDBSort  ),;				//Sorteia o aRdbCols para Comparacao na Gravacao
									Apda190Grava(;
													nOpc		,;	//Opcao de Acordo com aRotina
							 						nReg		,;	//Numero do Registro do Arquivo Pai ( RD0 )
							 						aRdbHeader	,;	//Campos do Arquivo de Sub-Itens ( RDB )
							 						aRdbCols	,;	//Sub-Itens Atuis do Arquivo de Sub-Itens ( RDB )
							 						aSvRDBCols	,;	//Sub-Itens Anteriores do Arquivo de Sub-Itens ( RDB )
							 						aRdbVirtGd	,;	//Campos Virtuais do Arquivo de Sub-Itens ( RDB )
							 						aRdbRecnos	,;	//Recnos do Arquivo de Sub-Itens ( RDB )
							 						aRdbMemoGd	 ;	//Campos Memo na de Sub-Itens ( RDB )
							 					);
		 					 };
						)
		EndIF
	Else
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ RollBack da Numeracao Automatica            				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		While ( GetSX8Len() > nGetSX8Len )
			RollBackSX8()
		End While
	EndIF
End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Coloca o Ponteiro do Mouse em Estado de Espera			   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorWait()

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Libera os Locks             								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd( aFreeLocks , { "RDD_RD0"	, NIL 			, aRd6Keys } )
aAdd( aFreeLocks , { "RDD"		, aRddRecnos	, aRddKeys } )
ApdFreeLocks( aFreeLocks )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Restaura os Dados de Entrada								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestArea( aArea )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Restaura as Teclas de Atalho											 ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aSvKeys , .T. )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Restaura o Estado do Ponteiro do Mouse						   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorArrow()
Return ( MbrChgLoop( .F. ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³Rd0GotFocus	 	 ³Autor³Emerson Campos    ³ Data ³03/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrição ³GotFocus para os Objetos GetDados do RD0					³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³APDA250()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Rd0GotFocus( oGdRd0 )

IF Empty( __nRdbRd0AtAnt )
	__nRdbRd0AtAnt := oGdRd6:oBrowse:nAt
EndIF

IF Empty( __nRddRd0AtAnt )
	__nRddRd0AtAnt := oGdRd6:oBrowse:nAt
EndIF

IF Empty( __nRd7Rd0AtAnt )
	__nRd7Rd0AtAnt := oGdRd6:oBrowse:nAt
EndIF

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³Rd02RDDChg	 	 ³Autor³Emerson Campos    ³ Data ³03/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrição ³Change da GetDados Avaliados/Rede no Folder Avaliadores  	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³APDA250()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Rd02RDDChg( oGdRd0 , oGdRdd , aRddCols , lColsToAll )

Local aRddCposPes
Local aRddCposSrt

Local bColsToAll

Local nRd0SvAt

DEFAULT lColsToAll	:= .F.

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Garanto que o Ponteiro Estara no Final do Arquivo para que nao³
	³Carregue Conteudo Invalido nos Inicializadores Padroes        ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	PutFileInEof( "RDD" )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Verifica se Deve Transferir para do aCols para o aColsAll     ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF (;
			(;
				( Inclui );
				.or.;
				( Altera );
			);
		)		

		nRd0SvAt	:= oGdRd0:oBrowse:nAt

		IF (;
				!Empty( __nRddRd0AtAnt );
				.and.;
				( __nRddRd0AtAnt <> nRd0SvAt );
			)	
			
			oGdRd0:Goto( __nRddRd0AtAnt )

			IF !( oGdRdd:TudoOk() )
				oGdRdd:oBrowse:SetFocus()
				oGdRd0:Refresh()
				Break
			EndIF

			lColsToAll	:= .T.

		EndIF

		IF ( lColsToAll )
		
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Obtem as Informacoes para o GdColsExChange para o RDD         ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			RDDInfTrf(	oGdRd0			,;
						oGdRdd			,;
						@aRddCposPes	,;
						@aRddCposSrt	,;
						@bColsToAll		 ;
				  )
	
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Transfiro os Dados do aCols para o aColsAll				   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			GdColsExChange(	@aRddCols		,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
							@oGdRdd:aCols 	,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
							oGdRdd:aHeader	,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
							NIL				,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
							NIL				,;	//05 -> Chave para Busca no aColsAll para Carga do aCols
							aRddCposSrt		,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
							aRddCposPes		,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
							NIL				,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
							.T.				,;	//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
							.T.				,;	//10 -> Se deve Transferir do aCols para o aColsAll
							.F.				,;	//11 -> Se deve Transferir do aColsAll para o aCols
							.T.				,;	//12 -> Se Existe o Elemento de Delecao no aCols
							.T.				,;	//13 -> Se deve Carregar os Inicializadores padroes
							bColsToAll		 ;	//14 -> Condicao para a Transferencia do aCols para o aColsAll
						 )

		EndIF
		
		IF ( __nRddRd0AtAnt <> nRd0SvAt )

			oGdRd0:Goto( nRd0SvAt )
			PosRD0( oGdRd0 )
			__nRddRd0AtAnt := nRd0SvAt

		EndIF

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Obtem as Informacoes para o GdColsExChange para o RDD         ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		RDDInfTrf(	oGdRd0			,;
					oGdRdd			,;
					@aRddCposPes	,;
					@aRddCposSrt	,;
					@bColsToAll		 ;
			 	 )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Transfiro os Dados do aColsAll para o aCols				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		GdColsExChange(	@aRddCols		,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
						@oGdRdd:aCols 	,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
						oGdRdd:aHeader	,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
						NIL				,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
						NIL				,;	//05 -> Chave para Busca no aColsAll para Carga do aCols
						aRddCposSrt		,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
						aRddCposPes		,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
						NIL				,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
						.T.				,;	//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
						.F.				,;	//10 -> Se deve Transferir do aCols para o aColsAll
						.T.				,;	//11 -> Se deve Transferir do aColsAll para o aCols
						.T.				,;	//12 -> Se Existe o Elemento de Delecao no aCols
						.T.				,;	//13 -> Se deve Carregar os Inicializadores padroes
						bColsToAll		 ;	//14 -> Condicao para a Transferencia do aCols para o aColsAll
					 )

	Else
	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Obtem as Informacoes para o GdColsExChange para o RDD         ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		RDDInfTrf(	oGdRd0			,;
					oGdRdd			,;
					@aRddCposPes	,;
					@aRddCposSrt	,;
					@bColsToAll		 ;
			 	 )
		
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Transfiro os Dados do aColsAll para o aCols				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		GdColsExChange(	@aRddCols		,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
						@oGdRdd:aCols 	,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
						oGdRdd:aHeader	,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
						NIL				,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
						NIL				,;	//05 -> Chave para Busca no aColsAll para Carga do aCols
						aRddCposSrt		,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
						aRddCposPes		,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
						oGdRdd:aHeader	,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
						.T.				,;	//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
						.F.				,;	//10 -> Se deve Transferir do aCols para o aColsAll
						.T.				,;	//11 -> Se deve Transferir do aColsAll para o aCols
						.T.				,;	//12 -> Se Existe o Elemento de Delecao no aCols
						.T.				,;	//13 -> Se deve Carregar os Inicializadores padroes
						bColsToAll		 ;	//14 -> Condicao para a Transferencia do aCols para o aColsAll
					 )
	EndIF
	
	oGdRdd:Goto( 1 )
	oGdRdd:Refresh()

End Sequence

Return( NIL )


/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³RddInfTrf		 ³Autor³Emerson Campos    ³ Data ³03/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrição ³Monta as informacoes que serao utilizadas para a  transferen³
³          ³cia de informacoes no GdColsExChange do RDD                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³APDA250()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function RddInfTrf(	oGdRd0		,;
							oGdRdd		,;
							aRddCposPes	,;
							aRddCposSrt	,;
							bColsToAll	 ;
				  		)

Local cRd0Codigo		:= GdFieldGet( "RD0_CODIGO" , oGdRd0:nAt , .F. , oGdRd0:aHeader , oGdRd0:aCols )
Local cRd6Codigo		:= GetMemVar( "RD6_CODIGO" )
Local cRd6CodCom		:= GetMemVar( "RD6_CODCOM" )

Local nRddCodAva		:= GdFieldPos( "RDD_CODAVA"	, oGdRdd:aHeader )
Local nRddCodAdo		:= GdFieldPos( "RDD_CODADO"	, oGdRdd:aHeader )
Local nRddCodPro		:= GdFieldPos( "RDD_CODPRO"	, oGdRdd:aHeader )
Local nRddDtiAva		:= GdFieldPos( "RDD_DTIAVA"	, oGdRdd:aHeader )
Local nRddDtfAva		:= GdFieldPos( "RDD_DTFAVA"	, oGdRdd:aHeader )
Local nRddCodCom		:= GdFieldPos( "RDD_CODCOM"	, oGdRdd:aHeader )
Local nRddIteCom		:= GdFieldPos( "RDD_ITECOM"	, oGdRdd:aHeader )
Local nRddCodTip		:= GdFieldPos( "RDD_CODTIP"	, oGdRdd:aHeader )
Local nRddCodNet		:= GdFieldPos( "RDD_CODNET"	, oGdRdd:aHeader )
Local nRddGhostCol		:= GdFieldPos( "GHOSTCOL"	, oGdRdd:aHeader )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Carrega Array a Posicao dos Campos para o "Sort"			  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aRddCposSrt := {}
aAdd( aRddCposSrt	, nRddCodAva 	)
aAdd( aRddCposSrt	, nRddCodAdo 	)
aAdd( aRddCposSrt	, nRddCodCom 	)
IF ( nRddGhostCol > 0 )
	aAdd( aRddCposSrt	, nRddGhostCol	)
EndIF

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Carrega Array com a Posicao dos Campos e as Chaves  Correspon³
³dentes														  ³	
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aRddCposPes := {}
aAdd( aRddCposPes  	, { nRddCodAva	, cRd6Codigo } )
aAdd( aRddCposPes  	, { nRddCodAdo	, cRd0Codigo } )
aAdd( aRddCposPes  	, { nRddCodCom	, cRd6CodCom } )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define os Blocos para Validacao da Transferencia do aCols  pa³
³ra o aColsAll												  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
bColsToAll	:= bColsToAll	:= { | aCols , aHeader , nItem |;
												!Empty( aCols[ nItem , nRddCodAva ] );
												.and.;
												!Empty( aCols[ nItem , nRddCodAdo ] );
												.and.;
												!Empty( aCols[ nItem , nRddDtiAva ] );
												.and.;
												!Empty( aCols[ nItem , nRddDtfAva ] );
												.and.;
												!Empty( aCols[ nItem , nRddCodCom ] );
												.and.;
												!Empty( aCols[ nItem , nRddIteCom ] );
												.and.;
												!Empty( aCols[ nItem , nRddCodTip ] );
												.and.;
												!Empty( aCols[ nItem , nRddCodNet ] );
				}

Return( NIL )


/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³Rd02Rd7Chg	 	 ³Autor³Emerson Cmapos    ³ Data ³03/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrição ³Change da GetDados Avaliados/Rede no Folder Avaliadores  	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³APDA250()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Rd02Rd7Chg( oGdRd0 , oGdRd7 , aRd7Cols , lColsToAll )

Local aRd7CposPes
Local aRd7CposSrt

Local bColsToAll

Local nRd0SvAt

DEFAULT lColsToAll	:= .F.

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Garanto que o Ponteiro Estara no Final do Arquivo para que nao³
	³Carregue Conteudo Invalido nos Inicializadores Padroes        ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	PutFileInEof( "RD7" )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Verifica se Deve Transferir para do aCols para o aColsAll     ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF (;
			(;
				( Inclui );
				.or.;
				( Altera );
			);
		)		

		nRd0SvAt	:= oGdRd0:oBrowse:nAt

		IF (;
				!Empty( __nRd7Rd0AtAnt );
				.and.;
				( __nRd7Rd0AtAnt <> nRd0SvAt );
			)	
			
			oGdRd0:Goto( __nRd7Rd0AtAnt )

			IF !( oGdRd7:TudoOk() )
				oGdRd7:oBrowse:SetFocus()
				oGdRd0:Refresh()
				Break
			EndIF

			lColsToAll	:= .T.

		EndIF

		IF ( lColsToAll )
		
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Obtem as Informacoes para o GdColsExChange para o Rd7         ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			Rd7InfTrf(	oGdRd0			,;
						oGdRd7			,;
						@aRd7CposPes	,;
						@aRd7CposSrt	,;
						@bColsToAll		 ;
				  )
	
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Transfiro os Dados do aCols para o aColsAll				   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			GdColsExChange(	@aRd7Cols		,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
							@oGdRd7:aCols 	,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
							oGdRd7:aHeader	,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
							NIL				,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
							NIL				,;	//05 -> Chave para Busca no aColsAll para Carga do aCols
							aRd7CposSrt		,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
							aRd7CposPes		,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
							NIL				,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
							.T.				,;	//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
							.T.				,;	//10 -> Se deve Transferir do aCols para o aColsAll
							.F.				,;	//11 -> Se deve Transferir do aColsAll para o aCols
							.T.				,;	//12 -> Se Existe o Elemento de Delecao no aCols
							.T.				,;	//13 -> Se deve Carregar os Inicializadores padroes
							bColsToAll		 ;	//14 -> Condicao para a Transferencia do aCols para o aColsAll
						 )

		EndIF
		
		IF ( __nRd7Rd0AtAnt <> nRd0SvAt )

			oGdRd0:Goto( nRd0SvAt )
			PosRD0( oGdRd0 )
			__nRd7Rd0AtAnt := nRd0SvAt

		EndIF

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Obtem as Informacoes para o GdColsExChange para o Rd7         ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		Rd7InfTrf(	oGdRd0			,;
					oGdRd7			,;
					@aRd7CposPes	,;
					@aRd7CposSrt	,;
					@bColsToAll		 ;
			 	 )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Transfiro os Dados do aColsAll para o aCols				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		GdColsExChange(	@aRd7Cols		,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
						@oGdRd7:aCols 	,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
						oGdRd7:aHeader	,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
						NIL				,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
						NIL				,;	//05 -> Chave para Busca no aColsAll para Carga do aCols
						aRd7CposSrt		,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
						aRd7CposPes		,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
						NIL				,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
						.T.				,;	//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
						.F.				,;	//10 -> Se deve Transferir do aCols para o aColsAll
						.T.				,;	//11 -> Se deve Transferir do aColsAll para o aCols
						.T.				,;	//12 -> Se Existe o Elemento de Delecao no aCols
						.T.				,;	//13 -> Se deve Carregar os Inicializadores padroes
						bColsToAll		 ;	//14 -> Condicao para a Transferencia do aCols para o aColsAll
					 )

	Else
	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Obtem as Informacoes para o GdColsExChange para o Rd7         ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		Rd7InfTrf(	oGdRd0			,;
					oGdRd7			,;
					@aRd7CposPes	,;
					@aRd7CposSrt	,;
					@bColsToAll		 ;
			 	 )
		
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Transfiro os Dados do aColsAll para o aCols				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		GdColsExChange(	@aRd7Cols		,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
						@oGdRd7:aCols 	,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
						oGdRd7:aHeader	,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
						NIL				,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
						NIL				,;	//05 -> Chave para Busca no aColsAll para Carga do aCols
						aRd7CposSrt		,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
						aRd7CposPes		,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
						oGdRd7:aHeader	,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
						.T.				,;	//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
						.F.				,;	//10 -> Se deve Transferir do aCols para o aColsAll
						.T.				,;	//11 -> Se deve Transferir do aColsAll para o aCols
						.T.				,;	//12 -> Se Existe o Elemento de Delecao no aCols
						.T.				,;	//13 -> Se deve Carregar os Inicializadores padroes
						bColsToAll		 ;	//14 -> Condicao para a Transferencia do aCols para o aColsAll
					 )
	EndIF
	
	oGdRd7:Goto( 1 )
	oGdRd7:Refresh()

End Sequence

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³Rd7InfTrf		 ³Autor³Emerson Campos    ³ Data ³03/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrição ³Monta as informacoes que serao utilizadas para a  transferen³
³          ³cia de informacoes no GdColsExChange do RD7                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³APDA250()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Rd7InfTrf(	oGdRd0		,;
							oGdRd7		,;
							aRd7CposPes	,;
							aRd7CposSrt	,;
							bColsToAll	 ;
				  		)

Local cRd0Codigo		:= GdFieldGet( "RD0_CODIGO" , oGdRd0:nAt , .F. , oGdRd0:aHeader , oGdRd0:aCols )
Local cRd6Codigo		:= GetMemVar( "RD6_CODIGO" )
Local cRd6CodCom		:= GetMemVar( "RD6_CODCOM" )

Local nRd7CodAva		:= GdFieldPos( "RD7_CODAVA"	, oGdRd7:aHeader )
Local nRd7CodAdo		:= GdFieldPos( "RD7_CODADO"	, oGdRd7:aHeader )
Local nRd7CodCom		:= GdFieldPos( "RD7_CODCOM"	, oGdRd7:aHeader )
Local nRd7IteCom		:= GdFieldPos( "RD7_ITECOM"	, oGdRd7:aHeader )
Local nRd7Escala		:= GdFieldPos( "RD7_ESCALA"	, oGdRd7:aHeader )
Local nRd7IteEsc		:= GdFieldPos( "RD7_ITEESC"	, oGdRd7:aHeader )
Local nRd7GhostCol		:= GdFieldPos( "GHOSTCOL"	, oGdRd7:aHeader )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Carrega Array a Posicao dos Campos para o "Sort"			  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aRd7CposSrt := {}
aAdd( aRd7CposSrt	, nRd7CodAva 	)
aAdd( aRd7CposSrt	, nRd7CodAdo 	)
aAdd( aRd7CposSrt	, nRd7CodCom 	)
aAdd( aRd7CposSrt	, nRd7IteCom 	)
IF ( nRd7GhostCol > 0 )
	aAdd( aRd7CposSrt	, nRd7GhostCol	)
EndIF

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Carrega Array com a Posicao dos Campos e as Chaves  Correspon³
³dentes														  ³	
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aRd7CposPes := {}
aAdd( aRd7CposPes  	, { nRd7CodAva	, cRd6Codigo } )
aAdd( aRd7CposPes  	, { nRd7CodAdo	, cRd0Codigo } )
aAdd( aRd7CposPes  	, { nRd7CodCom	, cRd6CodCom } )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define os Blocos para Validacao da Transferencia do aCols  pa³
³ra o aColsAll												  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
bColsToAll	:= bColsToAll	:= { | aCols , aHeader , nItem |;
												!Empty( aCols[ nItem , nRd7CodAva ] );
												.and.;
												!Empty( aCols[ nItem , nRd7CodAdo ] );
												.and.;
												!Empty( aCols[ nItem , nRd7CodCom ] );
												.and.;
												!Empty( aCols[ nItem , nRd7IteCom ] );
												.and.;
												!Empty( aCols[ nItem , nRd7Escala ] );
												.and.;
												!Empty( aCols[ nItem , nRd7IteEsc ] );
				}

Return( NIL )


/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³Rd02RDBChg	 	 ³Autor³Emerson Campos    ³ Data ³03/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrição ³Change da GetDados Avaliados/Rede no Folder Avaliadores  	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³APDA250()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Rd02RDBChg( oGdRd0 , oGdRdb , aRdbCols , lColsToAll )

Local aRdbCposPes
Local aRdbCposSrt

Local bColsToAll

Local nRd0SvAt

DEFAULT lColsToAll	:= .F.

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Garanto que o Ponteiro Estara no Final do Arquivo para que nao³
	³Carregue Conteudo Invalido nos Inicializadores Padroes        ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	PutFileInEof( "RDB" )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Verifica se Deve Transferir para do aCols para o aColsAll     ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF (;
			(;
				( Inclui );
				.or.;
				( Altera );
			);
		)		

		nRd0SvAt	:= oGdRd0:oBrowse:nAt
		___nRd0SvAt	:= nRd0SvAt
		
		IF (;
				!Empty( __nRdbRd0AtAnt );
				.and.;
				( __nRdbRd0AtAnt <> nRd0SvAt );
			)	
			
			oGdRd0:Goto( __nRdbRd0AtAnt )

			IF !( oGdRdb:TudoOk() )
				oGdRdb:oBrowse:SetFocus()
				oGdRd0:Refresh()
				Break
			EndIF

			lColsToAll	:= .T.

		EndIF

		IF ( lColsToAll )
		
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Obtem as Informacoes para o GdColsExChange para o RDB         ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			RDBInfTrf(	oGdRd0			,;
						oGdRdb			,;
						@aRdbCposPes	,;
						@aRdbCposSrt	,;
						@bColsToAll		 ;
				  )
	
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Transfiro os Dados do aCols para o aColsAll				   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			GdColsExChange(	@aRdbCols		,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
							@oGdRdb:aCols 	,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
							oGdRdb:aHeader	,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
							NIL				,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
							NIL				,;	//05 -> Chave para Busca no aColsAll para Carga do aCols
							aRdbCposSrt		,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
							aRdbCposPes		,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
							NIL				,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
							.T.				,;	//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
							.T.				,;	//10 -> Se deve Transferir do aCols para o aColsAll
							.F.				,;	//11 -> Se deve Transferir do aColsAll para o aCols
							.T.				,;	//12 -> Se Existe o Elemento de Delecao no aCols
							.T.				,;	//13 -> Se deve Carregar os Inicializadores padroes
							bColsToAll		 ;	//14 -> Condicao para a Transferencia do aCols para o aColsAll
						 )

		EndIF
		
		IF ( __nRdbRd0AtAnt <> nRd0SvAt )

			oGdRd0:Goto( nRd0SvAt )
			PosRD0( oGdRd0 )
			__nRdbRd0AtAnt := nRd0SvAt

		EndIF

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Obtem as Informacoes para o GdColsExChange para o RDB         ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		RDBInfTrf(	oGdRd0			,;
					oGdRdb			,;
					@aRdbCposPes	,;
					@aRdbCposSrt	,;
					@bColsToAll		 ;
			 	 )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Transfiro os Dados do aColsAll para o aCols				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		GdColsExChange(	@aRdbCols		,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
						@oGdRdb:aCols 	,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
						oGdRdb:aHeader	,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
						NIL				,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
						NIL				,;	//05 -> Chave para Busca no aColsAll para Carga do aCols
						aRdbCposSrt		,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
						aRdbCposPes		,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
						NIL				,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
						.T.				,;	//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
						.F.				,;	//10 -> Se deve Transferir do aCols para o aColsAll
						.T.				,;	//11 -> Se deve Transferir do aColsAll para o aCols
						.T.				,;	//12 -> Se Existe o Elemento de Delecao no aCols
						.T.				,;	//13 -> Se deve Carregar os Inicializadores padroes
						bColsToAll		 ;	//14 -> Condicao para a Transferencia do aCols para o aColsAll
					 )

	Else
	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Obtem as Informacoes para o GdColsExChange para o RDB         ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		RDBInfTrf(	oGdRd0			,;
					oGdRdb			,;
					@aRdbCposPes	,;
					@aRdbCposSrt	,;
					@bColsToAll		 ;
			 	 )
		
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Transfiro os Dados do aColsAll para o aCols				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		GdColsExChange(	@aRdbCols		,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
						@oGdRdb:aCols 	,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
						oGdRdb:aHeader	,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
						NIL				,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
						NIL				,;	//05 -> Chave para Busca no aColsAll para Carga do aCols
						aRdbCposSrt		,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
						aRdbCposPes		,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
						oGdRdb:aHeader	,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
						.T.				,;	//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
						.F.				,;	//10 -> Se deve Transferir do aCols para o aColsAll
						.T.				,;	//11 -> Se deve Transferir do aColsAll para o aCols
						.T.				,;	//12 -> Se Existe o Elemento de Delecao no aCols
						.T.				,;	//13 -> Se deve Carregar os Inicializadores padroes
						bColsToAll		 ;	//14 -> Condicao para a Transferencia do aCols para o aColsAll
					 )
	EndIF
	
	oGdRdb:Goto( 1 )
	oGdRdb:Refresh()

End Sequence

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³RdbInfTrf		 ³Autor³Emerson Campos    ³ Data ³03/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrição ³Monta as informacoes que serao utilizadas para a  transferen³
³          ³cia de informacoes no GdColsExChange do RDB                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³APDA080()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function RdbInfTrf(	oGdRd0		,;
							oGdRdb		,;
							aRdbCposPes	,;
							aRdbCposSrt	,;
							bColsToAll	 ;
				  		)

Local cRd0Codigo		:= GdFieldGet( "RD0_CODIGO" , oGdRd0:nAt , .F. , oGdRd0:aHeader , oGdRd0:aCols )
Local cRd6Codigo		:= GetMemVar( "RD6_CODIGO" )
Local cRd6CodCom		:= GetMemVar( "RD6_CODCOM" )

Local nRdbCodAva		:= GdFieldPos( "RDB_CODAVA"	, oGdRdb:aHeader )
Local nRdbCodAdo		:= GdFieldPos( "RDB_CODADO"	, oGdRdb:aHeader )
Local nRdbTipoAv		:= GdFieldPos( "RDB_TIPOAV"	, oGdRdb:aHeader )
Local nRdbDtiAva		:= GdFieldPos( "RDB_DTIAVA"	, oGdRdb:aHeader )
Local nRdbDtfAva		:= GdFieldPos( "RDB_DTFAVA"	, oGdRdb:aHeader )
Local nRdbCodMod		:= GdFieldPos( "RDB_CODMOD"	, oGdRdb:aHeader )
Local nRdbCodCom		:= GdFieldPos( "RDB_CODCOM"	, oGdRdb:aHeader )
Local nRdbIteCom		:= GdFieldPos( "RDB_ITECOM"	, oGdRdb:aHeader )
Local nRdbCodTip		:= GdFieldPos( "RDB_CODTIP"	, oGdRdb:aHeader )
Local nRdbCodNet		:= GdFieldPos( "RDB_CODNET"	, oGdRdb:aHeader )
Local nRdbCodQue		:= GdFieldPos( "RDB_CODQUE"	, oGdRdb:aHeader )
Local nRdbId			:= GdFieldPos( "RDB_ID"		, oGdRdb:aHeader )
Local nRdbGhostCol		:= GdFieldPos( "GHOSTCOL"	, oGdRdb:aHeader )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Carrega Array a Posicao dos Campos para o "Sort"			  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aRdbCposSrt := {}
aAdd( aRdbCposSrt	, nRdbCodAva 	)
aAdd( aRdbCposSrt	, nRdbCodAdo 	)
aAdd( aRdbCposSrt	, nRdbCodCom 	)
IF ( nRdbGhostCol > 0 )
	aAdd( aRdbCposSrt	, nRdbGhostCol	)
EndIF

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Carrega Array com a Posicao dos Campos e as Chaves  Correspon³
³dentes														  ³	
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aRdbCposPes := {}
aAdd( aRdbCposPes  	, { nRdbCodAva	, cRd6Codigo } )
aAdd( aRdbCposPes  	, { nRdbCodAdo	, cRd0Codigo } )
aAdd( aRdbCposPes  	, { nRdbCodCom	, cRd6CodCom } )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define os Blocos para Validacao da Transferencia do aCols  pa³
³ra o aColsAll												  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
bColsToAll	:= bColsToAll	:= { | aCols , aHeader , nItem |;
												!Empty( aCols[ nItem , nRdbCodAva ] );
												.and.;
												!Empty( aCols[ nItem , nRdbCodAdo ] );
												.and.;
												!Empty( aCols[ nItem , nRdbTipoAv ] );
												.and.;
												!Empty( aCols[ nItem , nRdbDtiAva ] );
												.and.;
												!Empty( aCols[ nItem , nRdbDtfAva ] );
												.and.;
												!Empty( aCols[ nItem , nRdbCodMod ] );
												.and.;
												!Empty( aCols[ nItem , nRdbCodCom ] );
												.and.;
												!Empty( aCols[ nItem , nRdbIteCom ] );
												.and.;
												!Empty( aCols[ nItem , nRdbCodTip ] );
												.and.;
												!Empty( aCols[ nItem , nRdbCodNet ] );
												.and.;
												!Empty( aCols[ nItem , nRdbCodQue ] );
												.and.;
												!Empty( aCols[ nItem , nRdbId ] );
				}

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³ChangeF3     ³Autor³Emerson Cmapos		  ³ Data ³03/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Altera a Consulta padrao 						     		³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_F3 							                         	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function ChangeF3()
Local cAlias  
Local nF3

If Type("aHeader") <> "A" .and. Type("oGdRdb:aHeader") = "A"
   Private aCols 	:= aClone(oGdRdb:aCols) 	
   Private aHeader 	:= aClone(oGdRdb:aHeader) 	
   Private n 		:= oGdRdb:oBrowse:nAt 	       
Endif     

//Trata F3 para o campo RDB_CODALT
cAlias := IF(fQuestEscala(),"RBL","SQP")  
nF3:= GdFieldPos( "RDB_CODALT" , aRdbHeader )
oGdRdb:aHeader[nF3, 9]:= cAlias

RdbSxbFilt()

Return(Nil)

Static Function PosRD0( oGdRd0 )
Local lRet			:= .T.
Local aArea			:= GetArea( Alias() ) 
Local nRd0Order		:= RetOrdem( "RD0" , "RD0_FILIAL+RD0_CODIGO" )
Local cFilRd0		:=  xFilial( "RD0" , RD6->RD6_FILIAL )
LOcal cCodRd0		:= GdFieldGet( "RD0_CODIGO" , oGdRd0:nAt , .F. , oGdRd0:aHeader , oGdRd0:aCols )
dbSelectArea("RD0")
RD0->( dbSetOrder(nRd0Order) )

If (RD0->( dbSeek( cFilRd0 + cCodRd0 ) ))
	SetMemVar( "RD0_CODIGO" , cCodRd0 , .T. )
Endif

RestArea( aArea )
Return lRet 

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³Apda090Grava ³Autor³Emerson Campos        ³ Data ³10/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³                                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Apda250()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Apda090Grava(	nOpc		,;	//Opcao de Acordo com aRotina
							 	nReg		,;	//Numero do Registro do Arquivo Pai ( RD0 )
							 	aRddHeader	,;	//Campos do Arquivo de Sub-Itens ( RDD )
							 	aRddCols	,;	//Sub-Itens Atuis do Arquivo de Sub-Itens ( RDD )
							 	aSvRDDCols	,;	//Sub-Itens Anteriores do Arquivo de Sub-Itens ( RDD )
							 	aRddVirtGd	,;	//Campos Virtuais do Arquivo de Sub-Itens ( RDD )
							 	aRddRecnos	 ;	//Recnos do Arquivo de Sub-Itens ( RDD )
							  )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis de Inicializacao Obrigatoria					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Local aMestre	:= GdPutIStrMestre( 01 )
Local aItens	:= {}
Local cOpcao	:= IF( ( nOpc == 5 ) , "DELETE" , IF( ( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) , "PUT" , NIL ) )
Local lModItens	:= .F.
Local lRDDModif	:= .F.
Local lRDDDelet	:= .F.
Local lSuperDel	:= .T.
Local nPosRec	:= Ascan(aRddHeader,{ |x| x[2] = "RDD_REC_WT"})
Local aRddColDel
Local aRddRecDel
Local nItens
  
//Certifica-se que o array estará ordenado pelo Recno
aSort( aRddCols , NIL , NIL , { |x,y| ( x[nPosRec] < y[ nPosRec] ) } )
//Certifica-se que o array de recnos esteja ordenado
aSort(aRddRecnos)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Altera o Estado do Cursor  								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorWait()

	IF ( cOpcao == "DELETE" )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Simulo aqui uma Alteracao onde Todos os Itens Foram Deletados ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		cOpcao 		:= "PUT" 
		lSuperDel	:= .F.
		GdSuperDel( aRddHeader , @aRddCols , NIL , .T. )
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se Houveram Modificacoes no RDD					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lRDDModif := !ArrayCompare( aRddCols , aSvRDDCols ) )
		IF ( lSuperDel )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Deleto todos os Itens que nao Estao OK					   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			GdSuperDel( aRddHeader , @aRddCols , NIL , .T. , GdGetBlock( "RDD" , aRddHeader , .F. ) )
		EndIF	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Separa os Itens que foram Deletados     					   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		lRDDDelet := GdSplitDel( aRddHeader , @aRddCols , @aRddRecnos , @aRddColDel , @aRddRecDel  )
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se eh Delecao ou se Houveram Modificacoes       	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	lModItens := ( lRDDModif )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Itens Apenas se Houveram Alteracoes ou na Exclusao³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lModItens )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega as Informacoes deletadas RDD                   	   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( lRDDDelet )

			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )
		
			aItens[ nItens , 01 ] := "RDD"
			aItens[ nItens , 02 ] := NIL
			aItens[ nItens , 03 ] := aClone( aRddHeader )
			aItens[ nItens , 04 ] := aClone( aRddColDel )
			aItens[ nItens , 05 ] := aClone( aRddVirtGd )
			aItens[ nItens , 06 ] := aClone( aRddRecDel )

		EndIF

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega as Informacoes do RDD                   			   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		aAdd( aItens , GdPutIStrItens() )
		nItens := Len( aItens )
		
		aItens[ nItens , 01 ] := "RDD"
		aItens[ nItens , 02 ] := {;
									{ "FILIAL" , xFilial( "RDD" , RD6->RD6_FILIAL ) },;
									{ "CODAVA" , GetMemVar( "RD6_CODIGO" ) },;
									{ "CODTIP" , GetMemVar( "RD6_CODTIP" ) },;
									{ "CODMOD" , GetMemVar( "RD6_CODMOD" ) },;
									{ "CODCOM" , GetMemVar( "RD6_CODCOM" ) }; 
					 		 	 }
		aItens[ nItens , 03 ] := aClone( aRddHeader )
		aItens[ nItens , 04 ] := aClone( aRddCols   )
		aItens[ nItens , 05 ] := aClone( aRddVirtGd )
		aItens[ nItens , 06 ] := aClone( aRddRecnos )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Define as Informacoes para o Arquivo Mestre RD0			   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		aMestre[ 01 , 01 ]	:= "RD6"
		aMestre[ 01 , 02 ]	:= nReg
		aMestre[ 01 , 03 ]	:= .F.
		aMestre[ 01 , 04 ]	:= {}
		aMestre[ 01 , 05 ]	:= {}
		aMestre[ 01 , 06 ]	:= {}
		aMestre[ 01 , 07 ]	:= aClone( aItens )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Grava as Informacoes                        				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		GdPutInfoData( aMestre , cOpcao , .F. , .F.  )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Confirmando a Numeracao Automatica          				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		While ( GetSX8Len() > nGetSX8Len )
			ConfirmSX8()
		End While

	EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura o Estado do Cursor								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorArrow()

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³Apda180Grava ³Autor³Emerson Campos        ³ Data ³10/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrição ³                                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Apda250()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Apda180Grava(	nOpc		,;	//Opcao de Acordo com aRotina
							 	nReg		,;	//Numero do Registro do Arquivo Pai ( RD0 )
							 	aRd7Header	,;	//Campos do Arquivo de Sub-Itens ( RD7 )
							 	aRd7Cols	,;	//Sub-Itens Atuis do Arquivo de Sub-Itens ( RD7 )
							 	aSvRd7Cols	,;	//Sub-Itens Anteriores do Arquivo de Sub-Itens ( RD7 )
							 	aRd7VirtGd	,;	//Campos Virtuais do Arquivo de Sub-Itens ( RD7 )
							 	aRd7Recnos	 ;	//Recnos do Arquivo de Sub-Itens ( RD7 )
							  )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis de Inicializacao Obrigatoria					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Local aMestre	:= GdPutIStrMestre( 01 )
Local aItens	:= {}
Local cOpcao	:= IF( ( nOpc == 5 ) , "DELETE" , IF( ( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) , "PUT" , NIL ) )
Local lModItens	:= .F.
Local lRd7Modif	:= .F.
Local lRd7Delet	:= .F.
Local lSuperDel	:= .T.
Local nPosRec	:= Ascan(aRd7Header,{ |x| x[2] = "RD7_REC_WT"})
Local aRd7ColDel
Local aRd7RecDel
Local nItens
  
//Certifica-se que o array estará ordenado pelo Recno
aSort( aRd7Cols , NIL , NIL , { |x,y| ( x[nPosRec] < y[ nPosRec] ) } )
//Certifica-se que o array de recnos esteja ordenado
aSort(aRd7Recnos)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Altera o Estado do Cursor  								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorWait()

	IF ( cOpcao == "DELETE" )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Simulo aqui uma Alteracao onde Todos os Itens Foram Deletados ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		cOpcao 		:= "PUT" 
		lSuperDel	:= .F.
		GdSuperDel( aRd7Header , @aRd7Cols , NIL , .T. )
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se Houveram Modificacoes no RD7					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lRd7Modif := !ArrayCompare( aRd7Cols , aSvRd7Cols ) )
		IF ( lSuperDel )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Deleto todos os Itens que nao Estao OK					   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			GdSuperDel( aRd7Header , @aRd7Cols , NIL , .T. , GdGetBlock( "RD7" , aRd7Header , .F. ) )
		EndIF	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Separa os Itens que foram Deletados     					   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		lRd7Delet := GdSplitDel( aRd7Header , @aRd7Cols , @aRd7Recnos , @aRd7ColDel , @aRd7RecDel  )
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se eh Delecao ou se Houveram Modificacoes       	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	lModItens := ( lRd7Modif )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Itens Apenas se Houveram Alteracoes ou na Exclusao³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lModItens )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega as Informacoes deletadas RD7                   	   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( lRd7Delet )

			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )
		
			aItens[ nItens , 01 ] := "RD7"
			aItens[ nItens , 02 ] := NIL
			aItens[ nItens , 03 ] := aClone( aRd7Header )
			aItens[ nItens , 04 ] := aClone( aRd7ColDel )
			aItens[ nItens , 05 ] := aClone( aRd7VirtGd )
			aItens[ nItens , 06 ] := aClone( aRd7RecDel )

		EndIF

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega as Informacoes do RD7                   			   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		aAdd( aItens , GdPutIStrItens() )
		nItens := Len( aItens )
		
		aItens[ nItens , 01 ] := "RD7"
		aItens[ nItens , 02 ] := {;
									{ "FILIAL" , xFilial( "RD7" , RD6->RD6_FILIAL ) },;
									{ "CODAVA" , GetMemVar( "RD6_CODIGO" ) },;
									{ "CODTIP" , GetMemVar( "RD6_CODTIP" ) },;
									{ "CODMOD" , GetMemVar( "RD6_CODMOD" ) },;
									{ "CODCOM" , GetMemVar( "RD6_CODCOM" ) }; 
					 		 	 }
		aItens[ nItens , 03 ] := aClone( aRd7Header )
		aItens[ nItens , 04 ] := aClone( aRd7Cols   )
		aItens[ nItens , 05 ] := aClone( aRd7VirtGd )
		aItens[ nItens , 06 ] := aClone( aRd7Recnos )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Define as Informacoes para o Arquivo Mestre RD0			   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		aMestre[ 01 , 01 ]	:= "RD6"
		aMestre[ 01 , 02 ]	:= nReg
		aMestre[ 01 , 03 ]	:= .F.
		aMestre[ 01 , 04 ]	:= {}
		aMestre[ 01 , 05 ]	:= {}
		aMestre[ 01 , 06 ]	:= {}
		aMestre[ 01 , 07 ]	:= aClone( aItens )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Grava as Informacoes                        				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		GdPutInfoData( aMestre , cOpcao , .F. , .F.  )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Confirmando a Numeracao Automatica          				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		While ( GetSX8Len() > nGetSX8Len )
			ConfirmSX8()
		End While

	EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura o Estado do Cursor								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorArrow()

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³Apda190Grava ³Autor³Emerson Campos        ³ Data ³10/01/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrição ³                                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Apda250()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Apda190Grava(	nOpc		,;	//Opcao de Acordo com aRotina
							 	nReg		,;	//Numero do Registro do Arquivo Pai ( RD0 )
							 	aRdbHeader	,;	//Campos do Arquivo de Sub-Itens ( RDB )
							 	aRdbCols	,;	//Sub-Itens Atuis do Arquivo de Sub-Itens ( RDB )
							 	aSvRDBCols	,;	//Sub-Itens Anteriores do Arquivo de Sub-Itens ( RDB )
							 	aRdbVirtGd	,;	//Campos Virtuais do Arquivo de Sub-Itens ( RDB )
							 	aRdbRecnos	,;	//Recnos do Arquivo de Sub-Itens ( RDB )
							 	aRdbMemoGd	 ;	//Campos Memo na de Sub-Itens ( RDB )
							  )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis de Inicializacao Obrigatoria					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Local aMestre	:= GdPutIStrMestre( 01 )
Local aItens	:= {}
Local cOpcao	:= IF( ( nOpc == 5 ) , "DELETE" , IF( ( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) , "PUT" , NIL ) )
Local lModItens	:= .F.
Local lRDBModif	:= .F.
Local lRDBDelet	:= .F.
Local lSuperDel	:= .T.
Local nPosRec	:= Ascan(aRdbHeader,{ |x| x[2] = "RDB_REC_WT"})
  
Local aRdbColDel
Local aRdbRecDel
Local nItens

//Certifica-se que o array estará ordenado pelo Recno
aSort( aRdbCols , NIL , NIL , { |x,y| ( x[nPosRec] < y[ nPosRec] ) } )
//Certifica-se que o array de recnos esteja ordenado
aSort(aRdbRecnos)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Altera o Estado do Cursor  								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorWait()

	IF ( cOpcao == "DELETE" )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Simulo aqui uma Alteracao onde Todos os Itens Foram Deletados ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		cOpcao 		:= "PUT" 
		lSuperDel	:= .F.
		GdSuperDel( aRdbHeader , @aRdbCols , NIL , .T. )
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se Houveram Modificacoes no RDB					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lRDBModif := !ArrayCompare( aRdbCols , aSvRDBCols ) )
		IF ( lSuperDel )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Deleto todos os Itens que nao Estao OK					   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			GdSuperDel( aRdbHeader , @aRdbCols , NIL , .T. , GdGetBlock( "RDB" , aRdbHeader , .F. ) )
		EndIF	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Separa os Itens que foram Deletados     					   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		lRDBDelet := GdSplitDel( aRdbHeader , @aRdbCols , @aRdbRecnos , @aRdbColDel , @aRdbRecDel  )
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se eh Delecao ou se Houveram Modificacoes       	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	lModItens := ( lRDBModif )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Itens Apenas se Houveram Alteracoes ou na Exclusao³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lModItens )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega as Informacoes deletadas RDB                   	   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( lRDBDelet )

			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )
		
			aItens[ nItens , 01 ] := "RDB"
			aItens[ nItens , 02 ] := NIL
			aItens[ nItens , 03 ] := aClone( aRdbHeader )
			aItens[ nItens , 04 ] := aClone( aRdbColDel )
			aItens[ nItens , 05 ] := aClone( aRdbVirtGd )
			aItens[ nItens , 06 ] := aClone( aRdbRecDel )
			aItens[ nItens , 07 ] := aClone( aRdbMemoGd )
			aItens[ nItens , 08 ] := NIL
			aItens[ nItens , 09 ] := NIL
			aItens[ nItens , 10 ] := "RDY"			

		EndIF

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega as Informacoes do RDB                   			   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		aAdd( aItens , GdPutIStrItens() )
		nItens := Len( aItens )
		
		aItens[ nItens , 01 ] := "RDB"
		aItens[ nItens , 02 ] := {;
									{ "FILIAL" , xFilial( "RDB" , RD6->RD6_FILIAL ) },;
									{ "CODAVA" , GetMemVar( "RD6_CODIGO" ) },;
									{ "CODTIP" , GetMemVar( "RD6_CODTIP" ) },;
									{ "CODMOD" , GetMemVar( "RD6_CODMOD" ) },;
									{ "CODCOM" , GetMemVar( "RD6_CODCOM" ) }; 
					 		 	 }
		aItens[ nItens , 03 ] := aClone( aRdbHeader )
		aItens[ nItens , 04 ] := aClone( aRdbCols   )
		aItens[ nItens , 05 ] := aClone( aRdbVirtGd )
		aItens[ nItens , 06 ] := aClone( aRdbRecnos ) 
		aItens[ nItens , 07 ] := aClone( aRdbMemoGd )
		aItens[ nItens , 08 ] := NIL
		aItens[ nItens , 09 ] := NIL
		aItens[ nItens , 10 ] := "RDY"

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Define as Informacoes para o Arquivo Mestre RD6			   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		aMestre[ 01 , 01 ]	:= "RD6"
		aMestre[ 01 , 02 ]	:= nReg
		aMestre[ 01 , 03 ]	:= .F.
		aMestre[ 01 , 04 ]	:= {}
		aMestre[ 01 , 05 ]	:= {}
		aMestre[ 01 , 06 ]	:= {}
		aMestre[ 01 , 07 ]	:= aClone( aItens )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Grava as Informacoes                        				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		GdPutInfoData( aMestre , cOpcao , .F. , .F.  )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Confirmando a Numeracao Automatica          				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		While ( GetSX8Len() > nGetSX8Len )
			ConfirmSX8()
		End While

	EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura o Estado do Cursor								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorArrow()

Return( NIL ) 

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Apda250GdSeek³Autor³Marinaldo de Jesus    ³ Data ³14/08/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Efetuar Pesquisa na GetDados                               	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³APDA250                                                		³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Apda250GdSeek( aGdObjects , nActFolder , aPages , aObjFolder )

Local aSvKeys 		:= GetKeys()
Local cProcName3	:= Upper( AllTrim( ProcName( 3 ) ) )
Local cProcName5	:= Upper( AllTrim( ProcName( 5 ) ) )

Local cMsgInfo
Local cTitle
Local nPosGdObj

DEFAULT aGdObjects	:= {}

Begin Sequence

	IF !( "APDA250MNT" $ ( cProcName3 + cProcName5 ) )
		Break
	EndIf

   	IF (;
			Empty( aGdObjects );
			.or.;
			( ( nPosGdObj := aScan( aGdObjects[ nActFolder ] , .T. ) ) == 0 );
		)	
		cMsgInfo := STR0013	//"Opção disponível apenas para pesquisa na(s) Pasta(s):"
		cMsgInfo += CRLF
		cMsgInfo += aPages[ 02 ]
		MsgInfo( OemToAnsi( cMsgInfo ) , cCadastro )
		Break
	EndIF  

	nObj := GetApd250ObjGdSeek( aGdObjects , nActFolder , aObjFolder , @cTitle )
	IF ( nObj == 0 )
		Break
	EndIF
	GdSeek( aObjFolder[ nActFolder , nObj , 01 ] , OemToAnsi( cTitle ) )

End Sequence

RestKeys( aSvKeys , .T. )

Return( NIL )


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RdbSxbFiltºAutor  ³Henrique V.         ³ Data ³ 23/06/2015  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Filtro dinamico da consulta padrão utilizada no campo      º±±
±±º          ³ RDB_CODDOR    												    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ APDA250                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function RdbSxbFilt()

Local aArea		:= GetArea()
Local cFilt		:= "@#.T.@#"   
Local cFunName	:= FunName()
Local cCodAva	:= "" 	
Local cCodAdo	:= ""


If cFunName $ "APDA250|APDA260"

	cCodAva := oGdRdb:aCols[1][1]
	cCodAdo := oGdRdb:aCols[1][2] 
	cFilt := "@#aScan( fAprovador('"+cCodAva+"','"+cCodAdo+"'), RD0->RD0_CODIGO) > 0@#"
	    
EndIf

RestArea(aArea)

Return( cFilt )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fAprovadorºAutor  ³Henrique V.         ³ Data ³ 23/06/2015  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Filtro da consulta padrão utilizada no campo RDB_CODDOR    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ APDA250                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fAprovador(cCodAva, cCodAdo)

Local aArea			:= GetArea()
Local aAvaliador	:= {}

DbSelectArea("RDA")
DbSetOrder(1)

If DbSeek( xFilial("RDA", RD6->RD6_FILIAl) + cCodAva + cCodAdo )
	While !EoF() .And. RDA->RDA_CODAVA + RDA->RDA_CODADO == cCodAva + cCodAdo
		aAdd(aAvaliador, RDA->RDA_CODDOR)
		DbSkip()		
	EndDo
EndIf

RestArea(aArea)

Return (aAvaliador)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fValCodDorºAutor  ³Henrique V.         ³ Data ³ 23/06/2015  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valid do Trigger do campo RDB_CODDOR                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ APDA250                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fValCodDor()

Local aArea		:= GetArea()
Local cRet 		:= ""
Local nPosCampo	:= 0
Local cCodAva	:= cCodAdo		:= cCodDor		:= ""
Local nPosAva	:= nPosAdo		:= nPosDor		:= nPosProj		:= 0
Local nGdAt		:= 0

If ValType(oGdRdb) <> "U"
	nGdAt := oGdRDB:nAt
	nPosCampo := GdFieldPos("RDB_ID",oGdRdb:aHeader)
	nPosAva   := GdFieldPos("RDB_CODAVA",oGdRdb:aHeader)
	nPosAdo   := GdFieldPos("RDB_CODADO",oGdRdb:aHeader)
	nPosDor   := GdFieldPos("RDB_CODDOR",oGdRdb:aHeader)
	nPosProj  := GdFieldPos("RDB_CODPRO",oGdRdb:aHeader)
	
	cCodAva	:= oGdRdb:aCols[nGdAt][nPosAva]
	cCodAdo	:= oGdRdb:aCols[nGdAt][nPosAdo]
	cCodDor	:= oGdRdb:aCols[nGdAt][nPosDor]
	If !Empty(oGdRdb:aCols[nGdAt][nPosDor])
		cCodProj := oGdRdb:aCols[nGdAt][nPosProj]
	Else
		cCodProj := Space(TamSX3("RDB_CODPRO")[1])
	EndIf	
	
	DbSelectArea("RDC")
	DbSetOrder(1)
	
	If DbSeek( xFilial("RDC", RD6->RD6_FILIAL) + cCodAva + cCodAdo + cCodProj + cCodDor)							
		cRet := RDC->RDC_ID
	EndIf
EndIf

RestArea(aArea)
	
Return(cRet)
