#INCLUDE "PROTHEUS.CH"
#INCLUDE "APDA140.CH"

/*
зддддддддддбддддддддддбдддддбдддддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁAPDA140   ЁAutorЁMarinaldo de Jesus       Ё Data Ё05/08/2003Ё
цддддддддддеддддддддддадддддадддддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Modelos de Avalia┤└o                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                                    Ё
цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё            ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL           Ё
цддддддддддддбддддддддддбдддддддддддбддддддддддддддддддддддддддддддддддд╢
ЁProgramador ЁData      ЁBOPS       ЁMotivo da Alteracao                Ё
цддддддддддддеддддддддддедддддддддддеддддддддддддддддддддддддддддддддддд╢
ЁCecilia Car.Ё03/07/2014ЁTPZWBQ     ЁIncluido o fonte da 11 para a 12 e Ё
Ё            Ё          Ё           Ёefetuada a limpeza.                Ё
ЁIsabel N.   Ё25/04/2017ЁDRHPONTP-96ЁCriaГЦo da funГЦo RbjXBFilt() para Ё
Ё            Ё          Ё           Ёfiltro da consulta padrЦo RBJDR8.  Ё  
юддддддддддддаддддддддддадддддддддддаддддддддддддддддддддддддддддддддддды*/
Function APDA140(cAlias , nReg , nOpc , lExecAuto)
Local aArea 	:= GetArea()
Local aAreaRd2	:= RD2->( GetArea() )
Local aAreaRd3	:= RD3->( GetArea() )
Local aAreaRd8	:= RD8->( GetArea() )
Local aAreaRdm	:= RDM->( GetArea() )
Local aAreaRdo	:= RDO->( GetArea() )
Local aAreaSqp	:= SQP->( GetArea() )
Local aAreaSqo	:= SQO->( GetArea() )
Local lExistOpc	:= ( ValType( nOpc ) == "N" )

Local bBlock
Local nPos
 
Begin Sequence

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSo Executa se o Modo de Acesso dos Arquivos do Modulo APD estiЁ
	Ёverem OK													   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( ApdRelationFile() )
		Break
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁRedefine o Alias                                              Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cAlias	:= "RD3"

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define Array contendo as Rotinas a executar do programa      Ё
	Ё ----------- Elementos contidos por dimensao ------------     Ё
	Ё 1. Nome a aparecer no cabecalho                              Ё
	Ё 2. Nome da Rotina associada                                  Ё
	Ё 3. Usado pela rotina                                         Ё
	Ё 4. Tipo de Transa┤└o a ser efetuada                          Ё
	Ё    1 - Pesquisa e Posiciona em um Banco de Dados             Ё
	Ё    2 - Simplesmente Mostra os Campos                         Ё
	Ё    3 - Inclui registros no Bancos de Dados                   Ё
	Ё    4 - Altera o registro corrente                            Ё
	Ё    5 - Remove o registro corrente do Banco de Dados          Ё
	Ё    6 - Copiar                                                Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	Private aRotina := MenuDef() // ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina
	
	Private cCadastro   := OemToAnsi( STR0006 ) //"Cadastro de Modelos de Avalia┤└o"

	IF ( lExistOpc )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁGarante o Posicinamento do Recno                              Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		DEFAULT nReg	:= ( cAlias )->( Recno() )
		IF !Empty( nReg )
			( cAlias )->( MsGoto( nReg ) )
		EndIF

		DEFAULT lExecAuto := .F.
		IF ( lExecAuto )

			nPos := aScan( aRotina , { |x| x[4] == nOpc } )
			IF ( nPos == 0 )
				Break
			EndIF
			bBlock := &( "{ |a,b,c,d| " + aRotina[ nPos , 2 ] + "(a,b,c,d) }" )
			Eval( bBlock , cAlias , nReg , nPos )
		Else
			Apda140Mnt( cAlias , nReg , nOpc , .T. )
		EndIF	
	
	Else

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Chama a Funcao de Montagem do Browse                                   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		mBrowse( 6 , 1 , 22 , 75 , cAlias )

	EndIF
	
End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁColoca o Ponteiro do Mouse em Estado de Espera			   	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura os Dados de Entrada 											 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RestArea( aAreaRd2 )
RestArea( aAreaRd3 )
RestArea( aAreaRd8 )
RestArea( aAreaRdm )
RestArea( aAreaRdo )
RestArea( aAreaSqp )
RestArea( aAreaSqo )
RestArea( aArea	   )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura o Cursor do Mouse                				   	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( NIL )

/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁInApda140Exec ЁAutor ЁMarinaldo de Jesus   Ё Data Ё24/08/2004Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁExecutar Funcoes Dentro de APDA140                           Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁInApda140Exec( cExecIn , aFormParam )						 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁuRet                                                 	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function InApda140Exec( cExecIn , aFormParam )
         
Local uRet

DEFAULT cExecIn		:= ""
DEFAULT aFormParam	:= {}

IF !Empty( cExecIn )
	cExecIn	:= BldcExecInFun( cExecIn , aFormParam )
	uRet	:= &( cExecIn )
EndIF

Return( uRet )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda140VisЁ Autor ЁMarinaldo de Jesus     Ё Data Ё27/02/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Modelos de Avalia┤└o (Visualizar)				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Apda140Vis( cAlias , nReg )
Return( APDA140( cAlias , nReg , 2 ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda140IncЁ Autor ЁMarinaldo de Jesus     Ё Data Ё27/02/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Modelos de Avalia┤└o (Incluir)   				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Apda140Inc( cAlias , nReg )
Return( APDA140( cAlias , nReg , 3 ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda140AltЁ Autor ЁMarinaldo de Jesus     Ё Data Ё27/02/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Modelos de Avalia┤└o (Alterar)   				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Apda140Alt( cAlias , nReg )
Return( APDA140( cAlias , nReg , 4 ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda140DelЁ Autor ЁMarinaldo de Jesus     Ё Data Ё27/02/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Modelos de Avalia┤└o (Excluir)   				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Apda140Del( cAlias , nReg )
Return( APDA140( cAlias , nReg , 5 ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda140MntЁ Autor ЁMarinaldo de Jesus     Ё Data Ё05/08/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Modelos de Avalia┤└o (Manutencao)				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁApda140Mnt( cAlias , nReg , nOpc , lDlgPadSiga )			Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcAlias 		= Alias do arquivo                              Ё
Ё          ЁnReg   		= Numero do registro                            Ё
Ё          ЁnOpc   		= Numero da opcao selecionada                   Ё
Ё          ЁlDlgPadSiga = Numero da opcao selecionada                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Apda140Mnt( cAlias , nReg , nOpc , lDlgPadSiga )
                    	
Local aArea				:= GetArea(Alias())
Local aSvKeys			:= GetKeys()
Local aAdvSize			:= {}
Local aInfoAdvSize		:= {}
Local aObjSize			:= {}
Local aObjCoords		:= {}
Local aTreeCoords		:= {}
Local aGdCoords1		:= {}
Local aGdCoords2		:= {}
Local aGdCoords3		:= {}
Local aRD2Header		:= {}
Local aRD3Header		:= {}
Local aRD3Cols			:= {}
Local aSvRd3Cols		:= {}
Local aRD3Fields		:= {}
Local aRD3Altera		:= {}
Local aRD3NaoAlt		:= {}
Local aRD3VirtEn		:= {}
Local aRD3NotFields		:= {}
Local aRD3Recnos		:= {}
Local aRd3Keys			:= {}
Local aRD3VisuEn		:= {}
Local aRD3MemoEn		:= {}
Local aRdoGdAltera  	:= {}
Local aRdoGdNaoAlt		:= {}
Local aRdoRecnos		:= {}
Local aRdoKeys			:= {}
Local aRdoNotFields		:= {}
Local aRdoVirtGd		:= {}
Local aRdoVisuGd		:= {}
Local aRdoQuery			:= {}
Local aSvRDOCols		:= {}
Local aRdoFldsAux		:= {}
Local aRd8GdAltera  	:= {}
Local aRd8GdNaoAlt		:= {}
Local aRd8Recnos		:= {}
Local aRd8Keys			:= {}
Local aRd8NotFields		:= {}
Local aRd8VirtGd		:= {}
Local aRd8VisuGd		:= {}
Local aSvRd8Cols		:= {}
Local aRd8FldsAux		:= {}
Local aRd8Query			:= {}
Local aSqpNotFields		:= {}
Local aRblNotFields		:= {}
Local aSqpHeader		:= {}
Local aSqpCols			:= {}
Local aRblHeader		:= {}
Local aRblCols			:= {}
Local aRdmCols			:= {}
Local aRdmRecnos		:= {}
Local aRdmKeys			:= {}
Local aRD2Cols			:= {}
Local aRD2Recnos		:= {}
Local aRd2Keys			:= {}
Local aRD2Query			:= {}
Local aRdyRecnos		:= {}
Local aRdyKeys			:= {}
Local aFolders			:= { OemToAnsi( STR0017 ) , OemToAnsi( STR0018 ) } 													//"&Defini┤■es do Mod┬lo"###"&Pesos/Quest■es"
Local aPages			:= { StrTran( OemToAnsi( STR0017 ) , "&" , "" ) , StrTran( OemToAnsi( STR0018 ) , "&" , "" ) }	//"&Defini┤■es do Mod┬lo"###"&Pesos/Quest■es"
Local aObjFolder		:= Array( 02 )
Local aFreeLocks		:= {}

Local bRdoGdDelOk		:= { || .T. }
Local bRd8GdDelOk		:= { |lGdDelOk| CursorWait() , lGdDelOk := RD8GdDelOk( "RD8" , NIL , nOpc , cCodRD3 ) , CursorArrow() , lGdDelOk }
Local bSet15			:= { || NIL }
Local bSet24			:= { || NIL }
Local bDialogIni		:= { || NIL }
Local bRd3EnchOk		:= { || .F. }
Local bRdoGdTudOk		:= { || .F. }
Local bRd8GdTudOk		:= { || .F. }
Local bGdGotFocus		:= { || NIL }
Local bSvblDblClick		:= { || NIL }
Local bGetRd3			:= { || NIL } 
Local bGetRdm			:= { || NIL }
Local bGetRdo			:= { || NIL }
Local bGetRd8			:= { || NIL }
Local bRdoSort			:= { || NIL }
Local bSvRdoSort		:= { || NIL }
Local bRd8Sort			:= { || NIL }
Local bSvRd8Sort		:= { || NIL }

Local cRD3KeySeek		:= ""
Local cFilRD3			:= ""
Local cCodRD3			:= ""
Local cFilRDM			:= ""
Local cCodRDM			:= ""
Local cRDMKeySeek		:= ""
Local cTreeLastKey		:= "cTreeLastKey"
Local cRd3Codigo		:= ""
Local cRd3CodCom		:= ""
Local cItemChkDel		:= ""

Local lLocks			:= .F.
Local lExecLock			:= ( ( nOpc <> 2 ) .and. ( nOpc <> 3 ) )
Local lRd8MaxLin		:= .T.
Local lCopy				:= .F.

Local nOpcAlt			:= 0
Local nRDMRecno			:= 0
Local nRD2Usado			:= 0
Local nRD3Usado			:= 0
Local nRDOUsado			:= 0
Local nRD8Usado			:= 0
Local nSQPUsado			:= 0
Local nRblUsado			:= 0
Local nLoop				:= 0
Local nLoops			:= 0
Local nOpcNewGd			:= IF( ( ( nOpc == 2 ) .or. ( nOpc == 5 ) ) , 0 , GD_INSERT + GD_UPDATE + GD_DELETE	)
Local nFimColTree		:= 0
Local nFimLinTree		:= 0
Local nIniColGd			:= 0
Local nRdoIteCom		:= 0
Local nRd8IteCom		:= 0
Local nRd8CodQue		:= 0
Local nRdoGhostCol		:= 0
Local nRd8GhostCol		:= 0

Local oDlg				:= NIL


Private oTreeQst		:= NIL
Private bTreeBuild		:= { || NIL }



Private aGets
Private aTela
Private cRdoNumGhostCol
Private cRd8NumGhostCol

Private aRdoHeader		:= {}
Private aRdoCols		:= {}
Private aRd8Header		:= {}
Private aRd8Cols		:= {}
Private aSqpVirtGd		:= {}
Private aRblVirtGd		:= {}
Private nGetSX8Len		:= GetSX8Len()
Private aSqoGetDados	:= NIL
Private aRblGetDados	:= NIL
Private oGdRd8			:= NIL
Private oGdRdo			:= NIL
Private oFolders		:= NIL
Private oEnRd3			:= NIL	
Private cCargoAnt		:= Nil
/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

Begin Sequence

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁCheca a Opcao Selecionada									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lCopy := ( nOpc == 6 ) )
		nOpc := 2	//Na Copia Seto, Inicialmente, Como Visualizacao
		aRotSetOpc( cAlias , @nReg , nOpc )
	Else
		aRotSetOpc( cAlias , @nReg , nOpc )
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta os Dados para a Enchoice							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aRD3NotFields	:= { "RD3_FILIAL" , "RD3_CODMEM" }
	bGetRd3			:= { |lLock,lExclu|	IF( lExecLock , ( lLock := .T. , lExclu	:= .T. ) , aRd3Keys := NIL ),;
										aRd3Cols := RD3->(;
															GdBuildCols(	@aRd3Header		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																			@nRd3Usado		,;	//02 -> Numero de Campos em Uso
																			@aRd3VirtEn		,;	//03 -> [@]Array com os Campos Virtuais
																			@aRd3VisuEn		,;	//04 -> [@]Array com os Campos Visuais
																			"RD3"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																			aRd3NotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																			@aRd3Recnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
																			"RD3"		   	,;	//08 -> Alias do Arquivo Pai
																			NIL				,;	//09 -> Chave para o Posicionamento no Alias Filho
																			NIL				,;	//10 -> Bloco para condicao de Loop While
																			NIL				,;	//11 -> Bloco para Skip no Loop While
																			NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																			NIL				,;	//14 -> Se Sera considerado o Inicializador Padrao
																			NIL				,;	//15 -> Opcional, Carregar Todos os Campos
																			NIL				,;	//16 -> Opcional, Nao Carregar os Campos Virtuais
																			NIL				,;	//17 -> Opcional, Utilizacao de Query para Selecao de Dados
																			NIL				,;	//18 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																			NIL				,;	//19 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																			NIL				,;	//20 -> Carregar Coluna Fantasma
																			NIL				,;	//21 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																			NIL				,;	//22 -> Verifica se Deve Checar se o campo eh usado
																			NIL				,;	//23 -> Verifica se Deve Checar o nivel do usuario
																			NIL				,;	//24 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																			@aRd3Keys		,;	//25 -> [@]Array que contera as chaves conforme recnos
																			@lLock			,;	//26 -> [@]Se devera efetuar o Lock dos Registros
																			@lExclu			 ;	//27 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																	    );
														  ),;
										IF( lExecLock , ( lLock .and. lExclu ) , .T. );
	  					} 
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLock do Registro do RD3									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLocks := WhileNoLock( "RD3" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetRd3 ) )
		Break
	EndIF
	CursorWait()
	aSvRd3Cols		:= aClone( aRD3Cols )
	cFilRD3			:= RD3->RD3_FILIAL
	cCodRD3			:= RD3->RD3_CODIGO
	cRD3KeySeek		:= ( cFilRD3 + cCodRD3 )
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Cria as Variaveis de Memoria e Carrega os Dados Conforme o arЁ
	Ё quivo														   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	For nLoop := 1 To nRD3Usado
		aAdd( aRD3Fields , aRD3Header[ nLoop , 02 ] )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define as Variaveis de Memoria							   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		SetMemVar( aRD3Header[ nLoop , 02 ] , aRD3Cols[ 01 , nLoop ] , .T. )
	Next nLoop
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁObtem os Recnos e Chaves dos Memos                            Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdd( aRD3MemoEn , { "RD3_DESMEM" , "RD3_CODMEM" } )
	IF (;
			( nOpc <> 2 );
			.and.;
			( nOpc <> 3 );
		)
		IF !( lLocks := ApdMemRec( "RD3" , aRD3Recnos , aRD3MemoEn , @aRdyRecnos , @aRdyKeys , .T. ) )
			Break
		EndIF
	EndIF	
		
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁDefine os Campos Editaveis na Enchoice Apenas na Inclusao( 3 )Ё
	Ёou Alteracao(4)											   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF (;
			( nOpc == 3 );
			.or.;
			( nOpc == 4 );
			.or.;
			( lCopy );
		)
	
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define os Campos Editaveis								   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		nLoops := Len( aRD3VisuEn )
		For nLoop := 1 To nLoops
			aAdd( aRD3NaoAlt , aRD3VisuEn[ nLoop ] )
		Next nLoop
		IF (;
				( nOpc == 4 );
				.or.;
				( lCopy );
			)	
			aAdd( aRD3NaoAlt , "RD3_CODIGO" )
			IF ( lCopy )
				aAdd( aRD3NaoAlt , "RD3_CODCOM" )
				aAdd( aRD3NaoAlt , "RD3_ESCALA" )
			EndIF
		EndIF
		nLoops := Len( aRD3Fields )
		For nLoop := 1 To nLoops
			IF ( aScan( aRD3NaoAlt , { |cNaoA| cNaoA == aRD3Fields[ nLoop ] } ) == 0 )
				aAdd( aRD3Altera , aRD3Fields[ nLoop ] )
			EndIF
		Next nLoop
	
	EndIF
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta a chave para Pesquisa do Tree           			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cFilRDM		:= xFilial( "RDM" , RD3->RD3_FILIAL )
	cCodRDM		:= RD3->RD3_CODCOM
	cRDMKeySeek := ( cFilRDM + cCodRDM )
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Seta a Ordem do Arquivo de Cabecalho de competencias		   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	RDM->( dbSetOrder( RetOrdem( "RDM" , "RDM_FILIAL+RDM_CODIGO" ) ) )
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Posiciona na Chave Correspontente            				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	RDM->( dbSeek( cRDMKeySeek , .F. ) )
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega Informacoes do RDM    							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bGetRdm			:= { |lLock,lExclu|	IF( lExecLock , ( lLock := .T. , lExclu	:= .T. ) , aRdmKeys := NIL ),;
										aRdmCols := RDM->(;
															GdBuildCols(	NIL        		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																			NIL				,;	//02 -> Numero de Campos em Uso
																			NIL        		,;	//03 -> [@]Array com os Campos Virtuais
																			NIL        		,;	//04 -> [@]Array com os Campos Visuais
																			"RDM"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																			NIL          	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																			@aRdmRecnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
																			"RDM"		   	,;	//08 -> Alias do Arquivo Pai
																			cRDMKeySeek		,;	//09 -> Chave para o Posicionamento no Alias Filho
																			NIL				,;	//10 -> Bloco para condicao de Loop While
																			NIL				,;	//11 -> Bloco para Skip no Loop While
																			NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																			NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																			NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																			NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																			NIL				,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																			NIL				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																			NIL				,;	//28 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																			NIL				,;	//29 -> Carregar Coluna Fantasma
																			NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																			NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
																			NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
																			NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																			@aRdmKeys		,;	//24 -> [@]Array que contera as chaves conforme recnos
																			@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																			@lExclu			 ;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																	    );
														  ),;
										IF( lExecLock , ( lLock .and. lExclu ) , .T. );
	  					} 
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLock do Registro do RDM									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLocks := WhileNoLock( "RDM" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetRdm ) )
		Break
	EndIF
	CursorWait()
	nRDMRecno	:= IF( Len( aRdmRecnos ) > 0 , aRdmRecnos[1] , nRDMRecno )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Seta a Ordem do Arquivo de Detalhes de competencias		   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	RD2->( dbSetOrder( RetOrdem( "RD2" , "RD2_FILIAL+RD2_CODIGO" ) ) )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega as Informacoes do RD2 							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	#IFDEF TOP
		aRD2Query		:= Array( 05 )
		aRD2Query[01]	:= "RD2_FILIAL='"+cFilRDM+"'"
		aRD2Query[02]	:= " AND "
		aRD2Query[03]	:= "RD2_CODIGO='"+cCodRDM+"'"
		aRD2Query[04]	:= " AND "
		aRD2Query[05]	:= "D_E_L_E_T_=' ' "
	#ENDIF
	aRD2Cols	:= RD2->(;
							GdBuildCols(;
											@aRD2Header,;	//01 -> Array com os Campos do Cabecalho da GetDados
											@nRD2Usado,;	//02 -> Numero de Campos em Uso
											NIL,;			//03 -> [@]Array com os Campos Virtuais
											NIL,;			//04 -> [@]Array com os Campos Visuais
											NIL,;			//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
											NIL,;			//06 -> Opcional, Campos que nao Deverao constar no aHeader
											@aRD2Recnos,;	//07 -> [@]Array unidimensional contendo os Recnos
											"RD2",;			//08 -> Alias do Arquivo Pai
											cRDMKeySeek,;	//09 -> Chave para o Posicionamento no Alias Filho	
											NIL,;			//10 -> Bloco para condicao de Loop While
											NIL,;			//11 -> Bloco para Skip no Loop While
											NIL,;			//12 -> Se Havera o Elemento de Delecao no aCols 
											NIL,;			//13 -> Se Sera considerado o Inicializador Padrao
											NIL,;			//14 -> Opcional, Carregar Todos os Campos
											NIL,;			//15 -> Opcional, Nao Carregar os Campos Virtuais
											aRD2Query,;		//16 -> Opcional, Utilizacao de Query para Selecao de Dados
											.F.,;			//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
											.F.,;			//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
											.T.;			//19 -> Carregar Coluna Fantasma e/ou BitMap ( Logico ou Array )
										);
							)
	For nLoop := 1	To nRD2Usado
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define as Variaveis de Memoria							   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		SetMemVar( aRD2Header[ nLoop , 02 ] , GetValType( aRD2Header[ nLoop , 08 ] , aRD2Header[ nLoop , 04 ] ) , .T. )
	Next nLoop

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Seta a Ordem do Arquivo de Valores das Competencias		   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	RDO->( dbSetOrder( RetOrdem( "RDO" , "RDO_FILIAL+RDO_CODMOD" ) ) )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta os Dados para a GetDados							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdd( aRdoNotFields , "RDO_FILIAL"  )
	aAdd( aRdoNotFields , "RDO_CODMOD"	)
	aAdd( aRdoNotFields , "RDO_CODCOM"	)
	#IFDEF TOP
		aRdoQuery		:= Array( 05 )
		aRdoQuery[01]	:= "RDO_FILIAL='"+cFilRD3+"'"
		aRdoQuery[02]	:= " AND "
		aRdoQuery[03]	:= "RDO_CODMOD='"+cCodRD3+"'"
	 	aRdoQuery[04]	:= " AND "
		aRdoQuery[05]	:= "D_E_L_E_T_=' ' "
	#ENDIF
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Quando For Inclusao Posiciona o RDO No Final do Arquivo	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( nOpc == 3  ) //Inclusao
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Garante que na Inclusao o Ponteiro do RDO estara em Eof()    Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		PutFileInEof( "RDO" )
	EndIF
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define Array com os Campos Auxiliares    					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( Altera )
		aRdoFldsAux := { { "GHOSTCOL" , "RdoNumGhostCol()" } }
	EndIF	
	bGetRdo	:= { |lLock| IF( lExecLock , lLock := .T. , NIL ),;
					 aRdoCols := RDO->(;
										GdBuildCols(	@aRdoHeader		,;	//01 -> Array com os Campos do Cabecalho da GetDados
														@nRdoUsado		,;	//02 -> Numero de Campos em Uso
														@aRdoVirtGd		,;	//03 -> [@]Array com os Campos Virtuais
														@aRdoVisuGd		,;	//04 -> [@]Array com os Campos Visuais
														"RDO"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
														aRdoNotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
														@aRdoRecnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
														"RDO"		   	,;	//08 -> Alias do Arquivo Pai
														cRD3KeySeek		,;	//09 -> Chave para o Posicionamento no Alias Filho
														NIL				,;	//10 -> Bloco para condicao de Loop While
														NIL				,;	//11 -> Bloco para Skip no Loop While
														NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
														NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
														NIL				,;	//14 -> Opcional, Carregar Todos os Campos
														NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
														aRdoQuery		,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
														.F.				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
														.F.				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
														aRdoFldsAux		,;	//19 -> Carregar Coluna Fantasma
														NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
														NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
														NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
														NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
														NIL				,;	//24 -> [@]Array que contera as chaves conforme recnos
														@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
														.F.				,;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
														NIL				,;	//27 -> Numero maximo de Locks a ser efetuado
														Altera			 ;	//28 -> Utiliza Numeracao na GhostCol
												    );
										  ),;
					IF( lExecLock , lLock , .T. );
  		    }
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLock do Registro do RDO									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLocks := WhileNoLock( "RDO" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetRdo ) )
		Break
	EndIF
	CursorWait()
	aSvRDOCols	:= aClone( aRdoCols )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁObtem o Pocisionamento no GHOSTCOL							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	nRdoGhostCol	:= GdFieldPos( "GHOSTCOL" , aRdoHeader )
	IF ( nRdoGhostCol > 0 )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁRefaz a numeracao da coluna GHOST Gerada					   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		cRdoNumGhostCol := ""                                       
		aEval(aRdoCols ,{|x| x[nRdoGhostCol ] := cRdoNumGhostCol})
		aEval(aRdoCols ,{|x| x[nRdoGhostCol ] := RdoNumGhostCol()})
    	aSvRdoCols	:= aClone( aRdoCols )                                 
    	
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁObtem a ultima numeracao Gerada							   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		cRdoNumGhostCol	:= aRdoCols[ Len( aRdoCols ) , nRdoGhostCol ]
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define Bloco para Sorteio das Informacoes Antes da Gravacao  Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bRdoSort   := { || CursorWait() , aSort( aRdoCols , NIL , NIL , { |x,y| ( x[ nRdoGhostCol ] < y[ nRdoGhostCol ] ) } ) , CursorArrow() }
		bSvRdoSort := { || CursorWait() , aSort( aSvRdoCols , NIL , NIL , { |x,y| ( x[ nRdoGhostCol ] < y[ nRdoGhostCol ] ) } ) , CursorArrow() }
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define os Campos nao Alteraveis							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aRdoGdNaoAlt := { "RDO_ITECOM" , "RDO_ESCALA" }
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega os Campos Editaveis para a GetDados				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	For nLoop := 1	To nRDOUsado
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define as Variaveis de Memoria							   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		SetMemVar( aRdoHeader[ nLoop , 02 ] , GetValType( aRdoHeader[ nLoop , 08 ] , aRdoHeader[ nLoop , 04 ] ) , .T. )
		IF (;
				( aScan( aRdoVirtGd		, aRdoHeader[ nLoop , 02 ] ) == 0 );
				.and.;
		   		( aScan( aRdoVisuGd		, aRdoHeader[ nLoop , 02 ] ) == 0 );
		   		.and.;
		   		( aScan( aRdoNotFields	, aRdoHeader[ nLoop , 02 ] ) == 0 );
		   		.and.;
		   		( aScan( aRdoGdNaoAlt	, aRdoHeader[ nLoop , 02 ] ) == 0 );
		  	)
			aAdd( aRdoGdAltera , aRdoHeader[ nLoop , 02 ] )
		EndIF
	Next nLoop

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Seta a Ordem do Arquivo de Itens do Modelo de Avaliacao	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	RD8->( dbSetOrder( RetOrdem( "RD8" , "RD8_FILIAL+RD8_CODMOD+RD8_CODCOM+RD8_ITECOM+RD8_CODQUE" ) ) )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta os Dados para a GetDados							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdd( aRd8NotFields , "RD8_FILIAL"  )
	aAdd( aRd8NotFields , "RD8_CODMOD"	)
	aAdd( aRd8NotFields , "RD8_CODCOM"	)
	#IFDEF TOP
		aRd8Query		:= Array( 05 )
		aRd8Query[01]	:= "RD8_FILIAL='"+cFilRD3+"'"
		aRd8Query[02]	:= " AND "
		aRd8Query[03]	:= "RD8_CODMOD='"+cCodRD3+"'"
	 	aRd8Query[04]	:= " AND "
		aRd8Query[05]	:= "D_E_L_E_T_=' ' "
	#ENDIF
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Quando For Inclusao Posiciona o RD8 No Final do Arquivo	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( nOpc == 3  ) //Inclusao
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Garante que na Inclusao o Ponteiro do RD8 estara em Eof()    Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		PutFileInEof( "RD8" )
	EndIF
	IF ( Altera )
		aRd8FldsAux := { { "GHOSTCOL" , "Rd8NumGhostCol()" } }
	EndIF	
	bGetRd8	:= { |lLock| IF( lExecLock , lLock := .T. , NIL ),;
					 aRd8Cols := RD8->(;
										GdBuildCols(	@aRd8Header		,;	//01 -> Array com os Campos do Cabecalho da GetDados
														@nRd8Usado		,;	//02 -> Numero de Campos em Uso
														@aRd8VirtGd		,;	//03 -> [@]Array com os Campos Virtuais
														@aRd8VisuGd		,;	//04 -> [@]Array com os Campos Visuais
														"RD8"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
														aRd8NotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
														@aRd8Recnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
														"RD8"		   	,;	//08 -> Alias do Arquivo Pai
														cRD3KeySeek		,;	//09 -> Chave para o Posicionamento no Alias Filho
														NIL				,;	//10 -> Bloco para condicao de Loop While
														NIL				,;	//11 -> Bloco para Skip no Loop While
														NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
														NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
														NIL				,;	//14 -> Opcional, Carregar Todos os Campos
														NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
														aRd8Query		,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
														.F.				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
														.F.				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
														aRd8FldsAux		,;	//19 -> Carregar Coluna Fantasma
														NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
														NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
														NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
														NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
														NIL				,;	//24 -> [@]Array que contera as chaves conforme recnos
														@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
														.F.				,;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
														NIL				,;	//27 -> Numero maximo de Locks a ser efetuado
														Altera			 ;	//28 -> Utiliza Numeracao na GhostCol
												    );
										  ),;
					IF( lExecLock , lLock , .T. );
  		    }
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLock do Registro do RD8									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLocks := WhileNoLock( "RD8" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetRd8 ) )
		Break
	EndIF
	CursorWait()
	aSvRd8Cols	:= aClone( aRd8Cols )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁObtem o Pocisionamento no GHOSTCOL							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	nRd8GhostCol	:= GdFieldPos( "GHOSTCOL" , aRd8Header )
	IF ( nRd8GhostCol > 0 )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁRefaz a numeracao da coluna GHOST Gerada					   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/ 
		cRd8NumGhostCol := ""
		aEval(aRd8Cols ,{|x| x[nRd8GhostCol ] := cRd8NumGhostCol})
	    aEval(aRd8Cols ,{|x| x[nRd8GhostCol ] := Rd8NumGhostCol()})
    	aSvRd8Cols	:= aClone( aRd8Cols )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁObtem a ultima numeracao Gerada							   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		cRd8NumGhostCol	:= aRd8Cols[ Len( aRd8Cols ) , nRd8GhostCol ]
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define Bloco para Sorteio das Informacoes Antes da Gravacao  Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bRd8Sort   := { || CursorWait() , aSort( aRd8Cols , NIL , NIL , { |x,y| ( x[ nRd8GhostCol ] < y[ nRd8GhostCol ] ) } ) , CursorArrow() }
		bSvRd8Sort := { || CursorWait() , aSort( aSvRd8Cols , NIL , NIL , { |x,y| ( x[ nRd8GhostCol ] < y[ nRd8GhostCol ] ) } ) , CursorArrow() }
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define os Campos nao Alteraveis							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aRd8GdNaoAlt := {"RD8_ITECOM", "RD8_ESCALA"}

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega os Campos Editaveis para a GetDados				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	For nLoop := 1	To nRD8Usado
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define as Variaveis de Memoria							   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		SetMemVar( aRd8Header[ nLoop , 02 ] , GetValType( aRd8Header[ nLoop , 08 ] , aRd8Header[ nLoop , 04 ] ) , .T. )
		IF (;
				( aScan( aRd8VirtGd		, aRd8Header[ nLoop , 02 ] ) == 0 );
				.and.;
		   		( aScan( aRd8VisuGd		, aRd8Header[ nLoop , 02 ] ) == 0 );
		   		.and.;
		   		( aScan( aRd8NotFields	, aRd8Header[ nLoop , 02 ] ) == 0 );
		   		.and.;
		   		( aScan( aRd8GdNaoAlt	, aRd8Header[ nLoop , 02 ] ) == 0 );
		  	)
			aAdd( aRd8GdAltera , aRd8Header[ nLoop , 02 ] )
		EndIF
	Next nLoop

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Seta a Ordem do Arquivo de Alternativas                	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	SQP->( dbSetOrder( RetOrdem( "SQP" , "QP_FILIAL+QP_QUESTAO+QP_ALTERNA" ) ) )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta estrutura do SQP                      			   	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	PutFileInEof("SQP")	//Garante que SQP sempre estara em Eof()
	aSqpNotFields := { "QP_ALTERNA" , "QP_DESCRIC" , "QP_PERCENT" }
	aSqpCols := SQP->(;
						GdBuildCols(;
										@aSqpHeader,;	//01 -> Array com os Campos do Cabecalho da GetDados
										@nSQPUsado,;	//02 -> Numero de Campos em Uso	
										@aSqpVirtGd,;	//03 -> [@]Array com os Campos Virtuais
										NIL,;			//04 -> [@]Array com os Campos Visuais
										NIL,;			//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
										aSqpNotFields,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
										NIL,;			//07 -> [@]Array unidimensional contendo os Recnos
										"SQP",;			//08 -> Alias do Arquivo Pai
										NIL,;			//09 -> Chave para o Posicionamento no Alias Filho
										NIL,;			//10 -> Bloco para condicao de Loop While
										NIL,;			//11 -> Bloco para Skip no Loop While
										NIL,;			//12 -> Se Havera o Elemento de Delecao no aCols 
										NIL,;			//13 -> Se Sera considerado o Inicializador Padrao
										NIL,;			//14 -> Opcional, Carregar Todos os Campos
										NIL,;			//15 -> Opcional, Nao Carregar os Campos Virtuais
										NIL,;			//16 -> Opcional, Utilizacao de Query para Selecao de Dados
										.F.,;			//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
										.F.,;			//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
										.T.,;			//19 -> Carregar Coluna Fantasma e/ou BitMap ( Logico ou Array )
										.T.;			//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
									);
					  )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Seta a Ordem do Arquivo de Escalas                     	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	RBL->( dbSetOrder( RetOrdem( "RBL" , "RBL_FILIAL+RBL_ESCALA+RBL_ITEM" ) ) )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta estrutura do RBL                      			   	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	PutFileInEof("RBL")	//Garante que RBL sempre estara em Eof()
	aRblNotFields := { "RBL_ITEM" , "RBL_DESCRI" , "RBL_VALOR" }
	aRblCols := RBL->(;
							GdBuildCols(;
											@aRblHeader,;	//01 -> Array com os Campos do Cabecalho da GetDados
											@nRblUsado,;	//02 -> Numero de Campos em Uso	
											@aRblVirtGd,;	//03 -> [@]Array com os Campos Virtuais
											NIL,;			//04 -> [@]Array com os Campos Visuais
											NIL,;			//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
											aRblNotFields,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
											NIL,;			//07 -> [@]Array unidimensional contendo os Recnos
											"RBL",;			//08 -> Alias do Arquivo Pai
											NIL,;			//09 -> Chave para o Posicionamento no Alias Filho
											NIL,;			//10 -> Bloco para condicao de Loop While
											NIL,;			//11 -> Bloco para Skip no Loop While
											NIL,;			//12 -> Se Havera o Elemento de Delecao no aCols 
											NIL,;			//13 -> Se Sera considerado o Inicializador Padrao
											NIL,;			//14 -> Opcional, Carregar Todos os Campos
											.T.,;			//15 -> Opcional, Nao Carregar os Campos Virtuais
											NIL,;			//16 -> Opcional, Utilizacao de Query para Selecao de Dados
											.F.,;			//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
											.F.,;			//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
											.T.,;			//19 -> Carregar Coluna Fantasma e/ou BitMap ( Logico ou Array )
											.T.;			//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
										);
					  )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁVerifica se Pode Efetuar a Delecao dos Registros			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( nOpc == 5 )
		IF !( ApdChkDel( cAlias , nReg , nOpc , cCodRD3 , .T. , NIL , NIL , { "RD8" , "RDO" } ) )
			Break
		EndIF
	ElseIF ( lCopy )
		nOpc := 3	//Na Copia Re-Seto Como Inclusao
		aRotSetOpc( cAlias , @nReg , nOpc , .T. )
		IF !Apda140Cpy(	aRdoHeader	,;	//Array com os campos do RDO
						@aRdoCols	,;	//Array com os Itens do RDO
						@aSvRdoCols	,;	//Array com os Itens de entrada do RDO
						@aRdoRecnos	,;	//Array com os Recnos do RDO
						aRd8Header	,;	//Array com os campos do RD8
						@aRd8Cols	,;	//Array com os Itens do RD8
						@aSvRd8Cols	,;	//Array com os Itens de entrada do RD8
						@aRd8Recnos	 ;	//Array com os Recnos do RD8
					  )
			Break
		EndIF
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta as Dimensoes para o Dialogo Principal				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	DEFAULT lDlgPadSiga	:= .F.
	aAdvSize		:= MsAdvSize( NIL , lDlgPadSiga )
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para o TudoOk da Enchoice   				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bRd3EnchOk		:= { || Apda140TEncOk( nOpc , oEnRd3 ) }	//Valida Todos os Campos da Enchoice

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para o TudoOk da GetDados do RDO			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bRdoGdTudOk		:= { || oGdRdo:TudoOk() }					//Valida as Informacoes da GetDados RDO

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para o TudoOk da GetDados do RD8			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bRd8GdTudOk		:= { || oGdRd8:TudoOk() }					//Valida as Informacoes da GetDados RD8

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para a Tecla <CTRL-O>						   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bSet15		:= { ||;
							IF(; 
								(;
									( nOpc == 3 );	//Inclusao
									.or.;
									( nOpc == 4 );	//Alteracao
								);									
								.and.;
								( Eval( oTreeQst:bGotFocus , .T. ) , .T. );								//Verifica se Houve Alteracao na competencia
								.and.;
								Eval( bRd3EnchOk  );													//Executa o TudoOk para a Enchoice
								.and.;
								Eval( bRdoGdTudOk );													//Valida as Informacoes da GetDados RDO
								.and.;
								Eval( bRd8GdTudOk ),;													//Valida as Informacoes da GetDados RD8
								(;
									nRdoIteCom	:= GdFieldPos( "RDO_ITECOM" , oGdRdo:aHeader ),;
									nRd8IteCom	:= GdFieldPos( "RD8_ITECOM" , oGdRd8:aHeader ),;
									RdoTrfaCols( @aRdoCols , oGdRdo , NIL , oGdRdo:aCols[ 01 , nRdoIteCom ] ),;				//Transfere as Ultimas Informacoes da GetDados Atual para o Array Main do RDO
									Rd8TrfaCols( @aRd8Cols , oGdRd8 , NIL , oGdRd8:aCols[ 01 , nRd8IteCom ] ),;				//Transfere as Ultimas Informacoes da GetDados Atual para o Array Main do RD8
									nOpcAlt := 1,;
									RestKeys( aSvKeys , .T. ),;
									oDlg:End();
							 	),;
							 	IF(; 
							 		(;
							 			( nOpc == 3 );	//Inclusao
							 			.or.;
							 			( nOpc == 4 );	//Alteracao
							 		),;								
							 			(;
							 				nOpcAlt := 0 ,;
							 				.F.;
							 			 ),;
									(;
										nOpcAlt := IF( ( ( nOpc == 2 ) .and. !( lCopy ) ) , 0 , 1 ) ,;	//Visualizacao ou Exclusao
										RestKeys( aSvKeys , .T. ),;
										oDlg:End();
							 		);
							 	  );
						   	  );
					 }
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para a Tecla <CTRL-X>     	   				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bSet24		:= { || ( nOpcAlt := 0 , RestKeys( aSvKeys , .T. ) , oDlg:End() ) }

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para a Montagem do Tree                   	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bTreeBuild := { || ; 
							Apda140TreeBld(	oFolders:aDialogs[ 02 ]	,;
											aTreeCoords 			,;
											oTreeQst				,;
											@cTreeLastKey			,;
											nRDMRecno				,;
											cFilRDM					,;
											cCodRDM					,;
											oGdRdo					,;
											aRdoCols				,;
											oGdRd8					,;
											aRd8Cols				,;
											lRd8MaxLin				 ;
									     );
				 }

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define os Elementos para o Array do Objeto Folder        	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aObjFolder[ 01 ] := Array( 01 , 03 )
	aObjFolder[ 02 ] := Array( 04 , 03 )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para o Foco na GetDados                   	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bGdGotFocus	:= { || Eval( oTreeQst:bGotFocus , ( nOpc == 3 ) ) }

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para a Inicializacao do Dialog            	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bDialogIni		:= { ||;
								CursorWait()									,;
								oGdRdo:oBrowse:bGotFocus := bGdGotFocus			,;
								oGdRd8:oBrowse:bGotFocus := bGdGotFocus			,;
								oSqpGetDados:oBrowse:bGotFocus := bGdGotFocus	,;
								oRblGetDados:oBrowse:bGotFocus := bGdGotFocus	,;
								aObjFolder[01,01,01] := oEnRd3					,;
								aObjFolder[01,01,02] := bRd3EnchOk				,;
								aObjFolder[01,01,03] := NIL						,;
								aObjFolder[02,01,01] := oGdRdo					,;
								aObjFolder[02,01,02] := bRdoGdTudOk				,;
								aObjFolder[02,01,03] := NIL						,;
								aObjFolder[02,02,01] := oGdRd8					,;
								aObjFolder[02,02,02] := bRd8GdTudOk				,;
								aObjFolder[02,02,03] := NIL						,;
								aObjFolder[02,03,01] := oSqpGetDados			,;
								aObjFolder[02,03,02] := NIL						,;
								aObjFolder[02,03,03] := NIL						,;  	
								aObjFolder[02,04,01] := oTreeQst				,;
								aObjFolder[02,04,02] := NIL						,;
								aObjFolder[02,04,03] := oTreeQst:bChange		,;
								EnchoiceBar( oDlg , bSet15 , bSet24 )			,;
								Eval( oTreeQst:bChange )                        ,;
								oGdRdo:Hide()									,;
								oGdRd8:Hide()									,;
								oSqpGetDados:Hide()								,;
								oRblGetDados:Hide()								,;
								CursorArrow()									,;
					   }

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta o Dialogo Principal para a Manutencao das Formulas	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0006 ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF GetWndDefault() PIXEL
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Altera o Estado do Cursor  								   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		CursorWait()
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta as Dimensoes do Objeto Folder   					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aAdd( aObjCoords , { 0 , 0 , .T. , .T. } )
			aObjSize := MsObjSize( aInfoAdvSize , aObjCoords )
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Carrega o Objeto Folder               					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			oFolders := TFolder():New(	aObjSize[ 1 , 1 ]		,;
										aObjSize[ 1 , 2 ]		,;
										aFolders				,;
										aPages					,;
										oDlg					,;
										NIL						,;
										NIL						,;
										NIL						,;
										.T.						,;
										.F.						,;
										aObjSize[ 1 , 4 ]		,;
										aObjSize[ 1 , 3 ]   	 ;
									 )
			oFolders:bSetOption := { |nNewFolder,uSetOption| IF( uSetOption := FolderSetOption( nNewFolder , oFolders:nOption , aObjFolder ) , Eval( oTreeQst:bGotFocus ) , NIL ) , uSetOption  } 
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta as Dimensoes para o Objeto Enchoice               	   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		   	aObjCoords := {}
			aAdd( aObjCoords , { 0 , 0 , .T. , .T. } )
			aObjSize := MsObjSize( aInfoAdvSize , aObjCoords )
			aObjSize[ 1 , 1 ] += 15 //Alinha em Relacao ao Folder
			aObjSize[ 1 , 2 ] += 5
			aObjSize[ 1 , 3 ] -= 5 
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta o Objeto Enchoice para o RD3                      	   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			oEnRd3	:= MsmGet():New(	cAlias					,;
										nReg					,;
										nOpc					,;
										NIL						,;
										NIL						,;
										NIL						,;
										aRD3Fields				,;
										aObjSize[1]         	,;
										aRD3Altera				,;
										NIL						,;
										NIL						,;
										NIL						,;
										oFolders:aDialogs[ 01 ]	,;
										NIL						,;
										.F.						,;
										NIL						,;
										.F.			 			 ;
									)
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta as Dimensoes para o Objeto Tree		               	   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aObjSize[1,1] -= 25  //Alinha em Relacao ao Folder
			nFimColTree		:= ( ( aObjSize[1,4] /100 ) *40 )
			nFimLinTree		:= aObjSize[1,3]-15
			nIniColGd		:= ( ( ( aObjSize[1,4] / 100 ) * 40 ) + 5 )
			//aTreeCoords		:= { { aObjSize[1,1]+11,aObjSize[1,2],nFimLinTree-5,nFimColTree} }
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Recalculo as Dimensoes para as GetDados               	   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aAdvSize		:= MsAdvSize(.F.)
			aAdvSize[4]		-= 25  //Alinha em Relacao ao Folder
			aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 10 , 5 }
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Proporcionaliza a Janela da GetDados em Relacao ao Tree	   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aObjCoords		:= {}
			aAdd( aObjCoords , { 0 , 048 , .T. , .F. } )
			aAdd( aObjCoords , { 0 , 000 , .T. , .T. } )
			aAdd( aObjCoords , { 0 , 000 , .T. , .T. } )
			aObjSize := MsObjSize( aInfoAdvSize , aObjCoords )
			
			aTreeCoords		:= { { aObjSize[1,1],aObjSize[1,2],aObjSize[3,3]-5,nFimColTree} }
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta as Dimensoes para os Objetos GetDados				   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aGdCoords1	:= { aObjSize[1,1],nIniColGd,aObjSize[1,3],aObjSize[1,4]}
			aGdCoords2	:= { aObjSize[2,1],nIniColGd,aObjSize[2,3],aObjSize[2,4]}
			aGdCoords3	:= { aObjSize[3,1],nIniColGd,aObjSize[3,3]-5,aObjSize[3,4]} 
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta o Objeto GetDados para o RDO						   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			oGdRdo	:= MsNewGetDados():New(	aGdCoords1[1]			,;
											aGdCoords1[2]			,;
											aGdCoords1[3]			,;
											aGdCoords1[4]			,;
											nOpcNewGd				,;
											"GdRdoLinOk"			,;
											"GdRdoTudOk"			,;
											""						,;
											aRdoGdAltera			,;
											0						,;
											1						,;
											NIL						,;
											NIL						,;
											bRdoGdDelOk				,;
											oFolders:aDialogs[ 02 ]	,;
											aRdoHeader		 		 ;
										  )
			oGdRdo:oBrowse:lVScroll	:= .T.	//Retira o Scroll da Vertical
			oGdRdo:oBrowse:cToolTip	:= OemToAnsi( STR0016 )	//"Valores das Compet┬ncias..."
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Se o arquivo estiver Vazio, Inicializa a primeira linha  comoЁ
			Ё deletada													   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
 			IF (;
					Empty( aRdoRecnos );
					.OR.;
					( lCopy );
				)	
				nLoops := Len( oGdRdo:aCols )
				For nLoop := 1 To nLoops
					GdFieldPut( "GDDELETED" , .T. , nLoop , oGdRdo:aHeader , oGdRdo:aCols )
				Next nLoop
				nLoops := Len( aRdoCols  )
				For nLoop := 1 To nLoops
					GdFieldPut( "GDDELETED" , .T. , nLoop , oGdRdo:aHeader , aRdoCols )
				Next nLoop
			EndIF   
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta o Objeto GetDados para o RD8						   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			oGdRd8	:= MsNewGetDados():New(	aGdCoords2[1]			,;
											aGdCoords2[2]			,;
											aGdCoords2[3]			,;
											aGdCoords2[4]			,;
											nOpcNewGd				,;
											"GdRd8LinOk"			,;
											"GdRd8TudOk"			,;
											""						,;
											aRd8GdAltera			,;
											0						,;
											99999					,;
											NIL						,;
											NIL						,;
											bRd8GdDelOk				,;
											oFolders:aDialogs[ 02 ]	,;
											aRd8Header		 		 ;
										 )
			oGdRd8:oBrowse:cToolTip	:= OemToAnsi( STR0014 )	//"Quest■es..."
			oGdRd8:oBrowse:bChange	:= { |oGdRd8| Rd8ChgQuest( oGdRd8 , NIL ) }
			bSvblDblClick := oGdRd8:oBrowse:blDblClick
			oGdRd8:oBrowse:blDblClick := { || Apda140SwhQst( oGdRd8 , bSvblDblClick ) }
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Se o arquivo estiver Vazio, Inicializa a primeira linha  comoЁ
			Ё deletada													   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		   	IF (;
					Empty( aRd8Recnos );
					.or.;
					(lCopy);
				)
				nLoops := Len( oGdRd8:aCols )
				For nLoop := 1 To nLoops
					GdFieldPut( "GDDELETED" , .T. , nLoop , oGdRd8:aHeader , oGdRd8:aCols )
				Next nLoop
				nLoops := Len( aRd8Cols  )
				For nLoop := 1 To nLoops
					GdFieldPut( "GDDELETED" , .T. , nLoop , oGdRd8:aHeader , aRd8Cols )
				Next nLoop
			ElseIF ( nOpc == 4 ) //Alteracao
				/*/
				здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				Ё Verifica se deve Limitar o Tamanho de Linhas do aCols de QuesЁ
				Ё toes RD8													   Ё
				юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
				nRd8IteCom	:= GdFieldPos( "RD8_ITECOM" , aRd8Header )
				nRd8CodQue	:= GdFieldPos( "RD8_CODQUE" , aRd8Header )
				cRd3Codigo	:= GetMemVar( "RD3_CODIGO" )
				cRd3CodCom	:= GetMemVar( "RD3_CODCOM" )
				nLoops := Len( aRd8Cols  )
				For nLoop := 1 To nLoops
					cItemChkDel	:= ( cRd3Codigo + cRd3CodCom + aRd8Cols[ nLoop , nRd8IteCom ] + aRd8Cols[ nLoop , nRd8CodQue ] )
					IF !( lRd8MaxLin := ApdChkDel( "RD8" , NIL , nOpc , cItemChkDel , .F. , NIL , NIL , NIL , NIL , .T. ) )
						Exit
					EndIF
				Next nLoop
			EndIF
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta o Objeto GetDados para as Alternativas				   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			oSqpGetDados	:= MsNewGetDados():New(	aGdCoords3[1]			,;
													aGdCoords3[2]			,;
													aGdCoords3[3]			,;
													aGdCoords3[4]			,;
													0						,;
													"AllWaysTrue"			,;
													"AllWaysTrue"			,;
													""						,;
													{}						,;
													0						,;
													99999					,;
													NIL						,;
													NIL						,;
													NIL						,;
													oFolders:aDialogs[ 02 ]	,;
													aSqpHeader				,;
													aSqpCols		 		 ;
												  )
			oSqpGetDados:oBrowse:cToolTip	:= OemToAnsi( STR0015 )	//"Alternativas..."
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta o Objeto GetDados para as Alternativas				   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			oRblGetDados	:= MsNewGetDados():New(	aGdCoords3[1]			,;
													aGdCoords3[2]			,;
													aGdCoords3[3]			,;
													aGdCoords3[4]			,;
													0						,;
													"AllWaysTrue"			,;
													"AllWaysTrue"			,;
													""						,;
													{}						,;
													0						,;
													99999					,;
													NIL						,;
													NIL						,;
													NIL						,;
													oFolders:aDialogs[ 02 ]	,;
													aRblHeader				,;
													aRblCols		 		 ;
												  )
			oRblGetDados:oBrowse:cToolTip	:= OemToAnsi( STR0015 )	//"Alternativas..."

			oTreeQst := Eval( bTreeBuild )

		/*/	
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Restaura o Estado do Cursor								   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		CursorArrow()
	ACTIVATE MSDIALOG oDlg ON INIT Eval( bDialogIni ) CENTERED

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Coloca o Ponteiro do Mouse em Estado de Espera			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorWait()

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁQuando Confirmada a Opcao e Nao for Visualizacao Grava ou   ExЁ
	Ёclui as Informacoes do RD3 e RD8							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF( nOpcAlt == 1 )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Apenas se nao For Visualizacao              				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
 		IF ( nOpc != 2 )
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Gravando/Incluido ou Excluindo Informacoes do SRY/RD8        Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			MsAguarde(;
						{ ||;
								Eval( bRdoSort  ),;				//Sorteia o aRdvCols para Comparacao na Gravacao
								Eval( bSvRdoSort),;				//Sorteia o AsvRdoCols para que fique na mesma ordem do aRdoCols 
								Eval( bRd8Sort  ),;				//Sorteia o aRd8Cols para Comparacao na Gravacao
								Eval( bSvRd8Sort),;				//Sorteia aSvRd8Cols para que fique na mesma ordem do aRd8Cols
								Apda140Grava(	nOpc		,;	//Opcao de Acordo com aRotina
							 					nReg		,;	//Numero do Registro do Arquivo Pai ( RD3 )
							 					aRD3Header	,;	//Campos do Arquivo Pai ( RD3 )
							 					aRd3Cols	,;	//Array com as Informacoes Atuais do Arquivo Pai ( RD3 )
							 					aSvRd3Cols	,;	//Array com as Informacoes Anteriores do Arquivo Pai ( RD3 )
							 					aRD3VirtEn	,;	//Campos Virtuais do Arquivo Pai ( RD3 )
							 					aRD3MemoEn	,;	//Campos Memo do Arquivo Pai ( RD3 )
												aRdoHeader	,;	//Array com os campos do RDO
												aRdoCols	,;	//Array com os Itens do RDO
												aSvRdoCols	,;	//Array com os Itens de entrada do RDO
												aRdoVirtGd	,;	//Array com os Campos Virtuais do RDO
												aRdoRecnos	,;	//Array com os Recnos do RDO
												aRd8Header	,;	//Array com os campos do RD8
												aRd8Cols	,;	//Array com os Itens do RD8
												aSvRd8Cols	,;	//Array com os Itens de entrada do RD8
												aRd8VirtGd	,;	//Array com os Campos Virtuais do RD8
												aRd8Recnos	 ;	//Array com os Recnos do RD8
											);
						};
					  )
		EndIF
	Else
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё RollBack da Numeracao Automatica            				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		While ( GetSX8Len() > nGetSX8Len )
			RollBackSX8()
		End While
	EndIF

End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Coloca o Ponteiro do Mouse em Estado de Espera			   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁLibera os Locks             								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aAdd( aFreeLocks , { "RD2" , aRd2Recnos , aRd2Keys } )
aAdd( aFreeLocks , { "RD3" , aRd3Recnos , aRd3Keys } )
aAdd( aFreeLocks , { "RD8" , aRd8Recnos , aRd8Keys } )
aAdd( aFreeLocks , { "RDM" , aRdmRecnos , aRdmKeys } )
aAdd( aFreeLocks , { "RDO" , aRdoRecnos , aRdoKeys } )
aAdd( aFreeLocks , { "RDY" , aRdyRecnos , aRdyKeys } )
ApdFreeLocks( aFreeLocks )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura os Dados de Entrada								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RestArea( aArea )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura as Teclas de Atalho                				   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RestKeys( aSvKeys , .T. )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( nOpcAlt )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda140TEncOkЁAutorЁMarinaldo de Jesus    Ё Data Ё05/08/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁTudoOk para a Enchoice                                      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁApda140TEncOk( nOpc , oEnchoice )							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda140TEncOk( nOpc , oEnchoice )

Local lTudoOk := .T.
                
IF (;
		( nOpc == 3 );
		.or.;
		( nOpc == 4 );
	)
	lTudoOk := EnchoTudOk( oEnchoice )
EndIF
RstEnchoVlds()

Return( lTudoOk )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁGdRdoLinOk	ЁAutorЁMarinaldo de Jesus     Ё Data Ё05/08/2003Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁGdRdoLinOk( oBrowse )									    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function GdRdoLinOk( oBrowse )

Local aCposKey	:= {}
Local lLinOk	:= .T.

Local cFilRBL
Local cMsgInfo

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()
	
	Begin Sequence
	
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Se a Linha da GetDados Nao Estiver Deletada				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF !( GdDeleted() )
		
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica Itens Duplicados na GetDados						   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aCposKey := GetArrUniqe( "RDO" )
			IF !( lLinOk := GdCheckKey( aCposKey , 4 ) )
				Break
			EndIF
		
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica Se o Campos Estao Devidamente Preenchidos		   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aCposKey := GdObrigat( aHeader )
			IF !( lLinOk := GdNoEmpty( aCposKey ) )
		    	Break
			EndIF

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica se Existe a Chave Informada              		   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF (;
					( GdFieldPos( "RDO_ESCALA" ) > 0 );
					.and.;
					( GdFieldPos( "RDO_ITEESC" ) > 0 );
				)
				SetMemVar( "RDO_ESCALA" , GdFieldGet( "RDO_ESCALA" ) )
				SetMemVar( "RDO_ITEESC" , GdFieldGet( "RDO_ITEESC" ) )
				IF ( !Empty( GetMemVar( "RDO_ESCALA" ) ) .and. !Empty( GetMemVar( "RDO_ITEESC" ) ) )
					cFilRBL := xFilial( "RBL" , xFilial( "RDO" ) )
					IF !( lLinOk := RBL->( MsSeek( cFilRBL + GetMemVar( "RDO_ESCALA" ) + GetMemVar( "RDO_ITEESC" ) , .F. ) ) )
						CursorArrow()
						cMsgInfo := AllTrim( aHeader[ GdFieldPos( "RDO_ESCALA" ) , 01 ] )
						cMsgInfo += " "
						cMsgInfo += STR0036	//"e/ou"
						cMsgInfo += " "
						cMsgInfo += AllTrim( aHeader[ GdFieldPos( "RDO_ITEESC" ) , 01 ] )
						cMsgInfo += " "
						cMsgInfo += STR0037 //"InvАlido(s)."
						//"Aviso de InconsistЙncia!"
						MsgInfo( OemToAnsi( cMsgInfo ) , OemToAnsi( STR0023 ) )
						Break
					EndIF
				EndIF
			EndIF	

		EndIF
		
	End Sequence

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁReinicializa as variaveis de Melhoria                      o  Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	SetMemVar( "RDO_ESCALA" , Space( GetSx3Cache( "RDO_ESCALA" , "X3_TAMANHO" ) ) ) 
	SetMemVar( "RDO_ITEESC" , Space( GetSx3Cache( "RDO_ITEESC" , "X3_TAMANHO" ) ) )
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSe Houver Alguma Inconsistencia na GetDados, Seta-lhe o Foco  Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLinOk )
		oBrowse:SetFocus()
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Evitar que os Inicializadores padroes sejam carregados indeviЁ
	Ё damente													   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	PutFileInEof( "RDO" )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( lLinOk )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁGdRdoTudOk	ЁAutorЁMarinaldo de Jesus     Ё Data Ё05/08/2003Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁGdRdoTudOk( oBrowse )									    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function GdRdoTudOk( oBrowse )

Local lTudoOk	:= .T.
Local nSvn		:= oBrowse:nAt
Local nLoop
Local nLoops

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

	Begin Sequence
	
	    /*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Percorre Todas as Linhas para verificar se Esta Tudo OK      Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		nLoops := Len( aCols )
		For nLoop := 1 To nLoops
			n := nLoop
			IF !( lTudoOk := GdRdoLinOk( oBrowse ) )
				oBrowse:Refresh()
				Break
			EndIF
		Next nLoop
	
		n := nSvn
	
	End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()
	
Return( lTudoOk  )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdoNumGhostCol	ЁAutorЁMarinaldo de Jesus Ё Data Ё10/08/2004Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao de Inicializacao da Numeracao Automatica do GHOSTCOL Ё
Ё          Ёdo RDO														Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140  	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdoNumGhostCol()

Local cNumGhostCol	:= ""

IF (;
		( Type( "aRdoHeader" ) == "A" );
		.and.;
		( Type( "aRdoCols" ) == "A" );
		.and.;
		( GdFieldPos( "GHOSTCOL" , aRdoHeader ) > 0 );
	)	
	IF ( Type( "cRdoNumGhostCol" ) == "U" )
		Private cRdoNumGhostCol := ""
	EndIF
	cNumGhostCol	:= GdNumItem( "GHOSTCOL" , @cRdoNumGhostCol , NIL , aRdoHeader , aRdoCols )
EndIF

Return( cNumGhostCol )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁGdRd8LinOk	ЁAutorЁMarinaldo de Jesus     Ё Data Ё05/08/2003Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁGdRd8LinOk( oBrowse )									    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function GdRd8LinOk( oBrowse )

Local aCposKey	:= {}
Local lLinOk	:= .T.

Local cFilRBL
Local cMsgInfo
Local cQuestao

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

	Begin Sequence
	
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Se a Linha da GetDados Nao Estiver Deletada				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF !( GdDeleted() )
		
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica Itens Duplicados na GetDados						   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aCposKey := { "RD8_ITECOM" , "RD8_CODQUE" }
			IF !( lLinOk := GdCheckKey( aCposKey , 4 ) )
				Break
			EndIF
		
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica Se o Campos Estao Devidamente Preenchidos		   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aCposKey := { "RD8_ITECOM" , "RD8_ESCALA" , "RD8_CODQUE" , "RD8_DESQUE", "RD8_EDITA" }
			IF !( lLinOk := GdNoEmpty( aCposKey ) )
		    	Break
			EndIF

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica se Existe a Chave Informada              		   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF (;
					( GdFieldPos( "RD8_ESCALA" ) > 0 );
					.and.;
					( GdFieldPos( "RD8_ITEESC" ) > 0 );
				)
				SetMemVar( "RD8_ESCALA" , GdFieldGet( "RD8_ESCALA" ) )
				SetMemVar( "RD8_ITEESC" , GdFieldGet( "RD8_ITEESC" ) )
				IF ( !Empty( GetMemVar( "RD8_ESCALA" ) ) .and. !Empty( GetMemVar( "RD8_ITEESC" ) ) )
					cFilRBL := xFilial( "RBL" , xFilial( "RD8" ) )
					IF !( lLinOk := RBL->( MsSeek( cFilRBL + GetMemVar( "RD8_ESCALA" ) + GetMemVar( "RD8_ITEESC" ), .F. ) ) )
						cMsgInfo := AllTrim( aHeader[ GdFieldPos( "RD8_ESCALA" ) , 01 ] )
						cMsgInfo += " "
						cMsgInfo += STR0036	//"e/ou"
						cMsgInfo += " "
						cMsgInfo += AllTrim( aHeader[ GdFieldPos( "RD8_ITEESC" ) , 01 ] )
						cMsgInfo += " "
						cMsgInfo += STR0037 //"InvАlido(s)."
						//"Aviso de InconsistЙncia!"
						CursorArrow()
						MsgInfo( OemToAnsi( cMsgInfo ) , OemToAnsi( STR0023 ) )
						Break
					EndIF
				EndIF
			EndIF	

		EndIF

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Reinicializa as Variaveis de Memoria						   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		SetMemVar( "RD8_ESCALA" , Space( GetSx3Cache( "RD8_ESCALA" , "X3_TAMANHO" ) ) ) 
		SetMemVar( "RD8_ITEESC" , Space( GetSx3Cache( "RD8_ITEESC" , "X3_TAMANHO" ) ) )

	End Sequence
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLimpa o conteudo da variavel de Memoria que esta sendo utilizaЁ
	Ёda no Change												   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cQuestao := ( xFilial("SQO") + GetMemVar( "RD8_CODQUE" ) )
	SQO->( MsSeek( cQuestao , .F. ) )

	SetMemVar( "RD8_CODQUE" , Space( GetSx3Cache( "RD8_CODQUE" , "X3_TAMANHO" ) ) ) 
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSe Houver Alguma Inconsistencia na GetDados, Seta-lhe o Foco  Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLinOk )   

		oEnRd3:Hide()
		
		oGdRdo:Show()	
		oGdRd8:Show()   
	
		IF ( Empty( SQO->QO_ESCALA ) )
			oRblGetDados:Hide()
			oSqpGetDados:Show()
		Else
			oSqpGetDados:Hide()
			oRblGetDados:Show()
		EndIF	          
		oGdRdO:oBrowse:SetFocus()
		oGdRdO:OBROWSE:REFRESH()
	   	oBrowse:SetFocus()
	   	
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Evitar que os Inicializadores padroes sejam carregados indeviЁ
	Ё damente													   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	PutFileInEof( "RD8" )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( lLinOk )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁGdRd8TudOk	ЁAutorЁMarinaldo de Jesus     Ё Data Ё05/08/2003Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁGdRd8TudOk( oBrowse )									    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function GdRd8TudOk( oBrowse )

Local lTudoOk	:= .T.
Local nSvn		:= oBrowse:nAt
Local nLoop
Local nLoops

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

	Begin Sequence
	
	    /*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Percorre Todas as Linhas para verificar se Esta Tudo OK      Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		nLoops := Len( aCols )
		For nLoop := 1 To nLoops
			n := nLoop
			IF !( lTudoOk := GdRd8LinOk( oBrowse ) )
			
				oGdRd8:Show()
				oBrowse:Refresh()

				Break
			EndIF
		Next nLoop
	
	    /*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Restaura a Posicao de n Caso nao Tenha ocorrido Erro         Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		n := nSvn
	
	End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()
	
Return( lTudoOk  )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRD8GdDelOk	ЁAutorЁMarinaldo de Jesus     Ё Data Ё05/08/2003Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidar a Delecao na GetDados                               Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRD8GdDelOk( cAlias , nRecno , nOpc , cCodRD3 )				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁRD8GdDelOk( cAlias , nRecno , nOpc , cCodRD3 )				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function RD8GdDelOk( cAlias , nRecno , nOpc , cCodRD3 )
         
Local cCodCom		:= ""
Local cIteCom		:= ""
Local cCodQue		:= ""
Local cMsgInfo		:= ""
Local lDelOk 		:= .T.
Local lStatusDel	:= .F.

Static lFirstDelOk
Static lLstDelOk

DEFAULT lFirstDelOk	:= .T.
DEFAULT lLstDelOk	:= .T.

Begin Sequence

	//Apenas se for a primeira vez
	IF !( lFirstDelOk )
		lFirstDelOk	:= .T.
		lDelOk 		:= lLstDelOk
		lLstDelOk	:= .T.
		Break
	EndIF

	lStatusDel	:= !( GdDeleted() ) //Inverte o Estado

	IF ( lStatusDel )		//Deletar
		cCodCom		:= GetMemVar( "RD3_CODCOM" )
		cIteCom		:= GdFieldGet( "RD8_ITECOM" )
		cCodQue		:= GdFieldGet( "RD8_CODQUE" )
		IF !( nOpc == 3  )	//Quando nao for Inclusao
			IF !Empty( cCodQue )
				IF !( lDelOk := ApdChkDel( cAlias , nRecno , nOpc , ( cCodRD3 + cCodCom + cIteCom + cCodQue ) , .F. , NIL , NIL , NIL , NIL , .T. ) )
					CursorArrow()
					cMsgInfo := STR0028	//"Esta questЦo nЦo pode ser Excluida pois jА estА sendo usada em processo de AvaliaГЦo em andamento."
					//"Aviso de InconsistЙncia!"
					MsgInfo( OemToAnsi( cMsgInfo ) , OemToAnsi( STR0023 ) )
				EndIF
			EndIF
		EndIF
		IF ( lLstDelOk := lDelOk )
			IF ( Empty( SQO->QO_ESCALA ) )
				MyGdSuperDel( oSqpGetDados , .T. )
			Else
				MyGdSuperDel( oRblGetDados , .T. )
			EndIF	
		EndIF	
	Else
		IF ( Empty( SQO->QO_ESCALA ) )
			MyGdSuperDel( oSqpGetDados , .F. )
		Else
			MyGdSuperDel( oRblGetDados , .F. )
		EndIF	
	EndIF

	//Ja Passou pela funcao
	lFirstDelOk := .F.

End Sequence
	
Return( lDelOk )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8NumGhostCol	ЁAutorЁMarinaldo de Jesus Ё Data Ё10/08/2004Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao de Inicializacao da Numeracao Automatica do GHOSTCOL Ё
Ё          Ёdo RD8														Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140  	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8NumGhostCol()

Local cNumGhostCol	:= ""

IF (;
		( Type( "aRd8Header" ) == "A" );
		.and.;
		( Type( "aRd8Cols" ) == "A" );
		.and.;
		( GdFieldPos( "GHOSTCOL" , aRd8Header ) > 0 );
	)	
	IF ( Type( "cRd8NumGhostCol" ) == "U" )
		Private cRd8NumGhostCol := ""
	EndIF
	cNumGhostCol	:= GdNumItem( "GHOSTCOL" , @cRd8NumGhostCol , NIL , aRd8Header , aRd8Cols )
EndIF

Return( cNumGhostCol )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁMyGdSuperDel ЁAutorЁMarinaldo de Jesus    Ё Data Ё05/08/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁMarcar e Desmarcar as Informacoes da GetDados como DeletadasЁ
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function MyGdSuperDel( oObjGetDados , lStatusDel , aCols )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

	GdSuperDel( oObjGetDados:aHeader , @aCols , @oObjGetDados , lStatusDel )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( NIL )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda140Grava ЁAutorЁMarinaldo de Jesus    Ё Data Ё05/08/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda140Grava(	nOpc		,;	//Opcao de Acordo com aRotina
							 	nReg		,;	//Numero do Registro do Arquivo Pai ( RD3 )
							 	aRD3Header	,;	//Campos do Arquivo Pai ( RD3 )
							 	aRd3Cols	,;	//Array com as Informacoes Atuais do Arquivo Pai ( RD3 )
							 	aSvRd3Cols	,;	//Array com as Informacoes Anteriores do Arquivo Pai ( RD3 )
							 	aRD3VirtEn	,;	//Campos Virtuais do Arquivo Pai ( RD3 )
							 	aRD3MemoEn	,;	//Campos Memo do Arquivo Pai ( RD3 )
								aRdoHeader	,;	//Array com os campos do RDO
								aRdoCols	,;	//Array com os Itens do RDO
								aSvRdoCols	,;	//Array com os Itens de entrada do RDO
								aRdoVirtGd	,;	//Array com os Campos Virtuais do RDO
								aRdoRecnos	,;	//Array com os Recnos do RDO
								aRd8Header	,;	//Array com os campos do RD8
								aRd8Cols	,;	//Array com os Itens do RD8
								aSvRd8Cols	,;	//Array com os Itens de entrada do RD8
								aRd8VirtGd	,;	//Array com os Campos Virtuais do RD8
								aRd8Recnos	 ;	//Array com os Recnos do RD8
							  )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aMestre	:= GdPutIStrMestre( 01 )
Local aItens	:= {}
Local cOpcao	:= IF( ( nOpc == 5 ) , "DELETE" , IF( ( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) , "PUT" , NIL ) )
Local lAllModif	:= .F.
Local lAllItMod	:= .F.
Local lRdoModif	:= .F.
Local lRd3Modif := .F.
Local lRd8Modif	:= .F.
Local lRdoDelet	:= .F.
Local lRd8Delet := .F.

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aRdoColDel
Local aRdoRecDel
Local aRd8ColDel
Local aRd8RecDel

Local nLoop
Local nLoops
Local nItens

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

	IF ( cOpcao == "PUT" )
		IF ( lRdoModif := !ArrayCompare( aSvRdoCols , aRdoCols ) )
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Deleto todos os Itens que nao Estao OK					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			GdSuperDel( aRdoHeader , aRdoCols , NIL , .T. , GdGetBlock( "RDO" , aRdoHeader , .F. ) ) 
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Separa os Itens que foram Deletados     					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			lRdoDelet := GdSplitDel( aRdoHeader , @aRdoCols , @aRdoRecnos , @aRdoColDel , @aRdoRecDel )
		EndIF
		IF ( lRd8Modif := !ArrayCompare( aSvRd8Cols , aRd8Cols ) )
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Deleto todos os Itens que nao Estao OK					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			GdSuperDel( aRd8Header , aRd8Cols , NIL , .T. , GdGetBlock( "RD8" , aRd8Header , .F. ) )
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Separa os Itens que foram Deletados     					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			lRd8Delet := GdSplitDel( aRd8Header , @aRd8Cols , @aRd8Recnos , @aRd8ColDel , @aRd8RecDel )
		EndIF
		lAllItMod	:= ( ( lRdoModif ) .or. ( lRd8Modif ) )
    Else
		lAllItMod	:= .T.
		lAllItMod	:= .T.
		lRdoModif	:= .T.
		lRd8Modif	:= .T.
	EndIF

	IF ( lAllItMod )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Carrega as Informacoes deletadas RDO                   	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lRdoDelet )

			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )
			aItens[ nItens , 01 ] := "RDO"
			aItens[ nItens , 02 ] := NIL
			aItens[ nItens , 03 ] := aClone( aRdoHeader )
			aItens[ nItens , 04 ] := aClone( aRdoColDel )
			aItens[ nItens , 05 ] := aClone( aRdoVirtGd )
			aItens[ nItens , 06 ] := aClone( aRdoRecDel )

		EndIF

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Carrega as Informacoes deletadas RDO                   	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lRd8Delet )

			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )
			aItens[ nItens , 01 ] := "RD8"
			aItens[ nItens , 02 ] := NIL
			aItens[ nItens , 03 ] := aClone( aRd8Header )
			aItens[ nItens , 04 ] := aClone( aRd8ColDel )
			aItens[ nItens , 05 ] := aClone( aRd8VirtGd )
			aItens[ nItens , 06 ] := aClone( aRd8RecDel )

		EndIF
        
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Se ocorreram alteracoes no RD0                  			   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lRdoModif )

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Carrega as Informacoes do RDO                   			   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )
			
			aItens[ nItens , 01 ] := "RDO"
			aItens[ nItens , 02 ] := {;
										{ "FILIAL" , xFilial( "RDO" , xFilial( "RD3" ) ) },;
										{ "CODMOD" , GetMemVar( "RD3_CODIGO" ) },;
										{ "CODCOM" , GetMemVar( "RD3_CODCOM" ) };
							 		 }
			aItens[ nItens , 03 ] := aClone( aRdoHeader )
			aItens[ nItens , 04 ] := aClone( aRdoCols   )
			aItens[ nItens , 05 ] := aClone( aRdoVirtGd )
			aItens[ nItens , 06 ] := aClone( aRdoRecnos )

		EndIF

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Se ocorreram alteracoes no RD8                  			   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lRd8Modif )

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Carrega as Informacoes do RD8                   			   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )
			
			aItens[ nItens , 01 ] := "RD8"
			aItens[ nItens , 02 ] := {;
										{"FILIAL", xFilial("RDO", xFilial("RD3"))}	, ;
										{"CODMOD", GetMemVar("RD3_CODIGO")}			, ;
										{"CODCOM", GetMemVar("RD3_CODCOM")}			;
							 		 }

			aItens[ nItens , 03 ] := aClone(aRd8Header)
			aItens[ nItens , 04 ] := aClone(aRd8Cols)
			aItens[ nItens , 05 ] := aClone(aRd8VirtGd)
			aItens[ nItens , 06 ] := aClone(aRd8Recnos)

		EndIF
	
	EndIF

	IF !( lRd3Modif )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Atualiza aRdmCols para Verificar se Houveram Alteracoes	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		nLoops := Len( aRd3Header )
		For nLoop := 1 To nLoops
			aRd3Cols[ 01 , nLoop ] := GetMemVar( aRD3Header[ nLoop , 02 ] )
		Next nLoop
		lRd3Modif := !( ArrayCompare( aRd3Cols , aSvRd3Cols ) )
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Seta a Gravacao ou Exclusao Apenas se Houveram Alteracoes  ouЁ
	Ё se foi Selecionada a Exclusao								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
 	lAllModif := ( ( lAllItMod ) .or. ( lRd3Modif ) )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Se Houveram Alteracoes, ou Exclusao efetua a Gravacao        Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lAllModif )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Seta a Gravacao ou Exclusao Apenas se Houveram Alteracoes  ouЁ
		Ё se foi Selecionada a Exclusao								   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aMestre[ 01 , 01 ]	:= "RD3"
		aMestre[ 01 , 02 ]	:= nReg
		aMestre[ 01 , 03 ]	:= ((nOpc == 5) .Or. lRd3Modif)
		aMestre[ 01 , 04 ]	:= aClone( aRD3Header )
		aMestre[ 01 , 05 ]	:= aClone( aRD3VirtEn )
		aMestre[ 01 , 06 ]	:= aClone( aRD3MemoEn )
		aMestre[ 01 , 07 ]	:= aClone( aItens )
		aMestre[ 01 , 08 ]	:= "RDY"
		
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Grava as Informacoes                        				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		GdPutInfoData(aMestre, cOpcao)
	
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Confirmando a Numeracao Automatica          				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		While ( GetSX8Len() > nGetSX8Len )
			ConfirmSX8()
		End While

	EndIF
	
/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( NIL )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda140Cpy	 ЁAutorЁMarinaldo de Jesus    Ё Data Ё21/10/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda140Cpy(	aRdoHeader	,;	//Array com os campos do RDO
							aRdoCols	,;	//Array com os Itens do RDO
							aSvRdoCols	,;	//Array com os Itens de entrada do RDO
							aRdoRecnos	,;	//Array com os Recnos do RDO
							aRd8Header	,;	//Array com os campos do RD8
							aRd8Cols	,;	//Array com os Itens do RD8
							aSvRd8Cols	,;	//Array com os Itens de entrada do RD8
							aRd8Recnos	 ;	//Array com os Recnos do RD8
						  )		

Local cRd3Codigo

Local lCpyOk

Local nRdoCodMod
Local nRd8CodMod

Begin Sequence

	IF !( lCpyOk := Rd3CodigoVld( @cRD3Codigo ) )
		Break
	EndIF

	aRd8Recnos	:= {}
	aSvRd8Cols	:= {}
	aSvRdoCols	:= {}
	aRdoRecnos	:= {}

	nRdoCodMod	:= GdFieldPos( "RDO_CODMOD" , aRdoHeader  )
	IF ( nRdoCodMod > 0 )
		aEval( aRdoCols , { |x| x[nRdoCodMod] := cRd3Codigo } )
	EndIF

	nRd8CodMod	:= GdFieldPos( "RD8_CODMOD" , aRd8Header  )
	IF ( nRd8CodMod > 0 )
		aEval( aRd8Cols , { |x| x[nRd8CodMod] := cRd3Codigo } )
	EndIF

End Sequence

Return( lCpyOk )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdoChgTree		 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁChange do Tree de Questoes 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function RdoChgTree( oTreeQst , oGdRdo , aRdoCols, lTudOk )

Local cCargo		:= ""
Local cItemCom		:= ""
Local cItemAnt		:= ""
Local cEscala		:= ""
Local lChgTreeOk	:= .T.
Local nPosItemAnt	:= 0
Local nRdoIteCom	:= GdFieldPos( "RDO_ITECOM" , oGdRdo:aHeader )
Local nRdoEscala	:= GdFieldPos( "RDO_ESCALA" , oGdRdo:aHeader )
Local nRdoDelete	:= GdFieldPos( "GDDELETED" , oGdRdo:aHeader )
Local nTamIteCom	:= GetSx3Cache( "RDO_ITECOM" , "X3_TAMANHO" )
Local nLenaCols		:= 0

DEFAULT lTudOk		:= .T.

cCargo := oTreeQst:GetCargo()
IF !( Left( cCargo , 1 ) == "*" )
	cItemCom		:= SubStr( cCargo , 3 , nTamIteCom )
	SetMemVar( "RD2_ITEM" , cItemCom )
	nPosItemAnt		:= aScan( oGdRdo:aCols , { |x| Empty( x[nRdoIteCom] ) } )
	IF ( nPosItemAnt > 0 )
		cItemAnt	:= oGdRdo:aCols[ nPosItemAnt , nRdoIteCom ]
		aEval( oGdRdo:aCols , { |x|;
											IF(;
											 	Empty( x[ nRdoIteCom ] ) ,;
									 			x[ nRdoDelete ] := .T. ,;
												NIL ;
										 	);
							 		};
		  	)
		nPosItemAnt	:= aScan( oGdRdo:aCols , { |x| !Empty( x[nRdoIteCom] ) } )
		IF ( nPosItemAnt > 0 )
			cItemAnt	:= oGdRdo:aCols[ nPosItemAnt , nRdoIteCom ]
		EndIF
	Else
		cItemAnt	:= oGdRdo:aCols[ 01 , nRdoIteCom ]
	EndIF	
	nLenaCols := Len( oGdRdo:aCols )
	IF ( ( oGdRdo:nAt > nLenaCols ) .or. ( oGdRdo:oBrowse:nAt > nLenaCols ) )
		oGdRdo:nAt			:= 1
		oGdRdo:oBrowse:nAt	:= 1
	EndIF
	IF lTudOk .and. ( lChgTreeOk := oGdRdo:TudoOk() )
		oGdRdo:Show()
		RdoTrfaCols( @aRdoCols , oGdRdo , cItemCom , cItemAnt )
		cEscala := GetMemVar( "RD3_ESCALA" )
		aEval( oGdRdo:aCols , { |aColsElem| aColsElem[ nRdoIteCom ] := cItemCom , aColsElem[ nRdoEscala ] := cEscala } )
		oGdRdo:nAt			:= 1
		oGdRdo:oBrowse:nAt	:= 1
		oGdRdo:Refresh()
	Else
		oTreeQst:TreeSeek( "+-" + cItemAnt )
		oGdRdo:Show()
	EndIF
Else
	If !INCLUI
		RdoTrfaCols( @aRdoCols , oGdRdo , oGdRdo:aCols[ 01 , nRdoIteCom ] , oGdRdo:aCols[ 01 , nRdoIteCom ] )
		oGdRdo:nAt			:= 1
		oGdRdo:oBrowse:nAt	:= 1
		oGdRdo:Hide()
	EndIf
EndIF

Return( lChgTreeOk )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdoTrfaCols		 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁTransfere Informacoes para aRdoCols							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function RdoTrfaCols( aRdoCols , oGdRdo , cKeyAtu , cKeyAnt )

Local bColsToAll	:= { | aCols , aHeader , nItem |;
												!Empty( aCols[ nItem , nRdoIteCom ] );
												.and.;
												!Empty( aCols[ nItem , nRdoEscala ] );
												.and.;
												!Empty( aCols[ nItem , nRdoIteEsc ] );
					   }

Local bAllToCols	:= { | aColsAll , aHeaderAll , nFindKey |;
														!Empty( aColsAll[ nFindKey , nRdoIteCom ] );
														.and.;
														!Empty( aColsAll[ nFindKey , nRdoEscala ] );
														.and.;
														!Empty( aColsAll[ nFindKey , nRdoIteEsc ] );
					   }

Local lTransf2All   := !Empty( cKeyAnt )
Local lTransf2Cols  := !Empty( cKeyAtu )

Local nRdoIteCom	:= GdFieldPos( "RDO_ITECOM" , oGdRdo:aHeader )
Local nRdoEscala	:= GdFieldPos( "RDO_ESCALA" , oGdRdo:aHeader )
Local nRdoIteEsc	:= GdFieldPos( "RDO_ITEESC" , oGdRdo:aHeader )

Local aRdoCposSrt
Local aRdoCposPes

DEFAULT cKeyAtu		:= ""
DEFAULT cKeyAnt		:= ""

aRdoCposSrt			:= { nRdoIteCom , nRdoEscala , nRdoIteEsc }
aRdoCposPes			:= { { nRdoIteCom , cKeyAnt } }

GdColsExChange(	@aRdoCols,;			//01 -> Array com a Estrutura do aCols Contendo todos os Dados	
				oGdRdo:aCols,;		//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
				oGdRdo:aHeader,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
				NIL,;				//04 -> Array com as Posicoes dos Campos para Pesquisa
				cKeyAtu,;			//05 -> Chave para Busca no aColsAll para Carga do aCols
				aRdoCposSrt,;		//06 -> Array com as Posicoes dos Campos para Ordenacao
				aRdoCposPes,;		//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
				oGdRdo:aHeader,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
				NIL,;				//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
				lTransf2All,;		//10 -> Se deve Transferir do aCols para o aColsAll
				lTransf2Cols,;		//11 -> Se deve Transferir do aColsAll para o aCols
				.T.,;				//12 -> Se Existe o Elemento de Delecao no aCols
				.T.,;				//13 -> Se deve Carregar os Inicializadores padroes
				bColsToAll,;		//14 -> Condicao para a Transferencia do aCols para o aColsAll
				bAllToCols;			//15 -> Condicao para a Transferencia do aColsAll para o aCols
			  )

Return( NIL )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8ChgQuest		 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁChange da GetDados RD8                   					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁChange do RD8_CODQUE          								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Rd8ChgQuest( oGdRd8 , lObjMother , lSetMemVar )
                
Local aRd8Header	:= {}
Local aRd8Cols		:= {}
Local aQueryCond	:= {}
Local cQuestao		:= ""
Local cItensQst		:= ""
Local lStatusDel	:= .F.
Local nAtRD8		:= 0

DEFAULT lObjMother	:= .T.
DEFAULT lSetMemVar	:= .T.

Begin Sequence

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Atualiza o Codigo da Questao								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( ValType( oGdRd8 ) <> "O" )
		Break
	EndIF
	
	IF ( lObjMother )
		aRd8Header	:= oGdRd8:oMother:aHeader
		aRd8Cols	:= oGdRd8:oMother:aCols
		nAtRD8		:= oGdRd8:nAt
	Else
		aRd8Header	:= oGdRd8:aHeader
		aRd8Cols	:= oGdRd8:aCols
		nAtRD8		:= oGdRd8:oBrowse:nAt
	EndIF
	
	lStatusDel		:= GdFieldGet( "GDDELETED"  , nAtRD8 , NIL , aRd8Header , aRd8Cols )
	IF ( lSetMemVar )
		SetMemVar( "RD8_CODQUE" , GdFieldGet( "RD8_CODQUE" , nAtRD8 , NIL , aRd8Header , aRd8Cols ) )
	EndIF	

	cQuestao := ( xFilial("SQO") + GetMemVar( "RD8_CODQUE" ) )
	SQO->( MsSeek( cQuestao , .F. ) )

	IF ( Empty( SQO->QO_ESCALA ) )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё "oSqpGetDados" eh o Objeto GetDados onde serao demonstadas asЁ
		Ё alternativas das Questoes			   						   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF !( Type("oSqpGetDados") == "O" )
			Break
		EndIF
		PutFileInEof("SQP")	//Garante que SQP sempre estara em Eof()
		SQP->( dbSetOrder( RetOrdem( "SQP" , "QP_FILIAL+QP_QUESTAO" ) ) )
		#IFDEF TOP
			aQueryCond		:= Array( 05 )
			aQueryCond[01]	:= "QP_FILIAL='"+xFilial("SQP")+"'"
			aQueryCond[02]	:= " AND "
			aQueryCond[03]	:= "QP_QUESTAO='"+GetMemVar( "RD8_CODQUE" )+"'"
			aQueryCond[04]	:= " AND "
			aQueryCond[05]	:= "D_E_L_E_T_=' ' "
		#ENDIF
		cItensQst := ( xFilial("SQP") + GetMemVar( "RD8_CODQUE" ) )
		oSqpGetDados:aCols := GdBuildCols(	oSqpGetDados:aHeader	,;	//01 -> Array com os Campos do Cabecalho da GetDados
											NIL						,;	//02 -> Numero de Campos em Uso
											aSqpVirtGd				,;	//03 -> [@]Array com os Campos Virtuais
											NIL						,;	//04 -> [@]Array com os Campos Visuais
											"SQP"					,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
											NIL						,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
											NIL						,;	//07 -> [@]Array unidimensional contendo os Recnos
											"SQP"					,;	//08 -> Alias do Arquivo Pai
											cItensQst				,;	//09 -> Chave para o Posicionamento no Alias Filho
											NIL						,;	//10 -> Bloco para condicao de Loop While
											NIL						,;	//11 -> Bloco para Skip no Loop While
											.T.			 			,;	//12 -> Se Havera o Elemento de Delecao no aCols 
											.F.						,;	//13 -> Se Sera considerado o Inicializador Padrao
											.F.						,;	//14 -> Opcional, Carregar Todos os Campos
											.F.						,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
											aQueryCond				,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
											.F.						,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
											.F.						,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
											.T.						,;	//19 -> Carregar Coluna Fantasma
											.F.						,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
											.F.						,;	//21 -> Verifica se Deve Checar se o campo eh usado
											.F.						 ;	//22 -> Verifica se Deve Checar o nivel do usuario
								 	  )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё nAt do SQP eh setado sempre como 1 na Carga				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		oSqpGetDados:nAt			:= 1
		oSqpGetDados:oBrowse:nAt	:= 1
    	
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Atribui o Status de Delecao ao SQP conforme RD8		  	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		MyGdSuperDel( oSqpGetDados , lStatusDel )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Definir o Tipo de Alteranativa a Ser Visualizado		  	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		oRblGetDados:Hide()
		oSqpGetDados:Show()

	Else

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё "oRblGetDados" eh o Objeto GetDados onde serao demonstadas asЁ
		Ё alternativas das Questoes			   						   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF !( Type("oRblGetDados") == "O" )
			Break
		EndIF
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta estrutura do RBL                      			   	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		PutFileInEof("RBL")	//Garante que RBL sempre estara em Eof()
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Seta a Ordem do Arquivo de Alternativas                	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		RBL->( dbSetOrder( RetOrdem( "RBL" , "RBL_FILIAL+RBL_ESCALA+RBL_ITEM" ) ) )
		#IFDEF TOP
		   aQueryCond  := Array( 05 )
		   aQueryCond[01] := "RBL_FILIAL='"+xFilial("SQO")+"'"
		   aQueryCond[02] := " AND "
		   aQueryCond[03] := "RBL_ESCALA='"+SQO->QO_ESCALA+"'"
		   aQueryCond[04] := " AND "
		   aQueryCond[05] := "D_E_L_E_T_=' ' "
		#ENDIF
		cItensQst := ( xFilial("RBL") + SQO->QO_ESCALA )
		oRblGetDados:aCols := GdBuildCols(	@oRblGetDados:aHeader	,; //01 -> Array com os Campos do Cabecalho da GetDados
								          	NIL      				,; //02 -> Numero de Campos em Uso
								          	aRblVirtGd   			,; //03 -> [@]Array com os Campos Virtuais
								          	NIL      				,; //04 -> [@]Array com os Campos Visuais
								          	"RBL"     				,; //05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
								          	NIL      				,; //06 -> Opcional, Campos que nao Deverao constar no aHeader
								          	NIL      				,; //07 -> [@]Array unidimensional contendo os Recnos
								          	"RBL"     				,; //08 -> Alias do Arquivo Pai
								          	cItensQst    			,; //09 -> Chave para o Posicionamento no Alias Filho
								          	NIL     				,; //10 -> Bloco para condicao de Loop While
								          	NIL      				,; //11 -> Bloco para Skip no Loop While
								          	.T.       				,; //12 -> Se Havera o Elemento de Delecao no aCols 
								          	.F.      				,; //13 -> Se Sera considerado o Inicializador Padrao
								          	.F.      				,; //14 -> Opcional, Carregar Todos os Campos
								          	.T.      				,; //15 -> Opcional, Nao Carregar os Campos Virtuais
								          	aQueryCond    			,; //16 -> Opcional, Utilizacao de Query para Selecao de Dados
								          	.F.      				,; //17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
								          	.F.      				,; //18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
								          	.T.      				,; //19 -> Carregar Coluna Fantasma
								          	.F.      				,; //20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
								          	.F.      				,; //21 -> Verifica se Deve Checar se o campo eh usado
								          	.F.       				 ; //22 -> Verifica se Deve Checar o nivel do usuario
	             )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё nAt do RBL eh setado sempre como 1 na Carga				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		oRblGetDados:nAt			:= 1
		oRblGetDados:oBrowse:nAt	:= 1
    	
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Atribui o Status de Delecao ao SQP conforme RD8		  	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		MyGdSuperDel( oRblGetDados , lStatusDel )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Definir o Tipo de Alteranativa a Ser Visualizado		  	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		oSqpGetDados:Hide()
		oRblGetDados:Show()

    EndIF

End Sequence

Return( .T. )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8ChgTree		 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁChange do Tree de Questoes 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Rd8ChgTree(	oTreeQst	,;	//Tree com as Informacoes das Competencias/Itens
							oGdRd8		,;	//Objeto GetDados com as Informacoes do RD8
							aRd8Cols	,;	//Array contendo todas as informacoes do RD8 para a Competencia Selecionada
							lRd8MaxLin	,;	//Se permitira o Dimensionamento de Linhas no aCols do RD8
							lTudOk 		;   //Executa TudOK()
						  )

Local cCargo		:= ""
Local cItemCom		:= ""
Local cItemAnt		:= ""
Local cEscala 		:= ""
Local lChgTreeOk	:= .T.
Local nPosItemAnt	:= 0
Local nRd8IteCom	:= GdFieldPos( "RD8_ITECOM" , oGdRd8:aHeader )
Local nRd8CodQue	:= GdFieldPos( "RD8_CODQUE" , oGdRd8:aHeader )
Local nRd8Escala	:= GdFieldPos( "RD8_ESCALA" , oGdRd8:aHeader )
Local nRd8Delete	:= GdFieldPos( "GDDELETED"	, oGdRd8:aHeader )
Local nTamIteCom	:= GetSx3Cache( "RD8_ITECOM" , "X3_TAMANHO" )
Local nTamCodQue	:= GetSx3Cache( "RD8_CODQUE" , "X3_TAMANHO" )
Local nLenaCols		:= 0

DEFAULT lTudOk		:= .T.

//oTreeQst:IsTree() ira definir se eh a ultima camada (metodo a ser implementado pelo Ramalho na classe dbTree)
//por enquanto utilizar !( (oTreeQst:cArqTree)->( T_ISTREE ) == "S" )
cCargo := oTreeQst:GetCargo()
IF ( Left( cCargo , 1 ) == "+" ) .and. !( ( oTreeQst:cArqTree )->( T_ISTREE ) == "S" )
	cItemCom		:= SubStr( cCargo , 3 , nTamIteCom )
	SetMemVar( "RD2_ITEM" , cItemCom )
	nPosItemAnt		:= aScan( oGdRd8:aCols , { |x| Empty( x[nRd8IteCom] ) } )
	IF ( nPosItemAnt > 0 )
		cItemAnt	:= oGdRd8:aCols[ nPosItemAnt , nRd8IteCom ]
		aEval( oGdRd8:aCols , { |x|;
											IF(;
											 	Empty( x[ nRd8IteCom ] ) ,;
									 			x[ nRd8Delete ] := .T. ,;
												NIL ;
										 	);
							 		};
		  	)
		nPosItemAnt	:= aScan( oGdRd8:aCols , { |x| !Empty( x[nRd8IteCom] ) } )
		IF ( nPosItemAnt > 0 )
			cItemAnt	:= oGdRd8:aCols[ nPosItemAnt , nRd8IteCom ]
		EndIF
	Else
		cItemAnt	:= oGdRd8:aCols[ 01 , nRd8IteCom ]
	EndIF	
	nLenaCols := Len( oGdRd8:aCols )
	IF ( ( oGdRd8:nAt > nLenaCols ) .or. ( oGdRd8:oBrowse:nAt > nLenaCols ) )
		oGdRd8:nAt			:= 1
		oGdRd8:oBrowse:nAt	:= 1
	EndIF
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Verifica se Deve Limitar o Dimensionamento de Linhas na GetDaЁ
	Ё dos														   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lRd8MaxLin )
		oGdRd8:nMax := Len( oGdRd8:aCols )
	EndIF
	IF lTudOk .and. ( lChgTreeOk := oGdRd8:TudoOk() )
		oGdRd8:Show()
		IF ( Empty( SQO->QO_ESCALA ) )
			oRblGetDados:Hide()
			oSqpGetDados:Show()
		Else
			oSqpGetDados:Hide()
			oRblGetDados:Show()
		EndIF	
		Rd8TrfaCols( @aRd8Cols , oGdRd8 , cItemCom , cItemAnt )
		cEscala := GetMemVar("RD3_ESCALA")
		aEval( oGdRd8:aCols , { |aColsElem| aColsElem[ nRd8IteCom ] := cItemCom , aColsElem[ nRd8Escala ] := cEscala } )
		oGdRd8:nAt			:= 1
		oGdRd8:oBrowse:nAt	:= 1
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Verifica se Deve Limitar o Dimensionamento de Linhas na GetDaЁ
		Ё dos														   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF !( lRd8MaxLin )
			oGdRd8:nMax := Len( oGdRd8:aCols )
		EndIF
		oGdRd8:Refresh()
		Rd8ChgQuest( oGdRd8 , .F. )
	Else
		oTreeQst:TreeSeek( "+-" + cItemAnt )
		oGdRd8:Show()
		IF ( Empty( SQO->QO_ESCALA ) )
			oRblGetDados:Hide()
			oSqpGetDados:Show()
		Else
			oSqpGetDados:Hide()
			oRblGetDados:Show()
		EndIF	
	EndIF
Else
	If !INCLUI    
		Rd8TrfaCols( @aRd8Cols , oGdRd8 , oGdRd8:aCols[ 01 , nRd8IteCom ] , oGdRd8:aCols[ 01 , nRd8IteCom ] )
		oGdRd8:nAt 			:= 1
		oGdRd8:oBrowse:nAt	:= 1
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Verifica se Deve Limitar o Dimensionamento de Linhas na GetDaЁ
		Ё dos														   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF !( lRd8MaxLin )
			oGdRd8:nMax := Len( oGdRd8:aCols )
		EndIF
		oGdRd8:Hide()
		oSqpGetDados:Hide()
		oRblGetDados:Hide()
	EndIf
EndIF

Return( lChgTreeOk )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8TrfaCols		 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁTransfere Informacoes para aRd8Cols							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Rd8TrfaCols( aRd8Cols , oGdRd8 , cKeyAtu , cKeyAnt )

Local bColsToAll	:= { | aCols , aHeader , nItem |;
												!Empty( aCols[ nItem , nRd8IteCom ] );
												.and.;
												!Empty( aCols[ nItem , nRd8CodQue ] );
					   }

Local bAllToCols	:= { | aColsAll , aHeaderAll , nFindKey |;
														!Empty( aColsAll[ nFindKey , nRd8IteCom ] );
														.and.;
														!Empty( aColsAll[ nFindKey , nRd8CodQue ] );
					   }

Local lTransf2All   := !Empty( cKeyAnt )
Local lTransf2Cols  := !Empty( cKeyAtu )

Local nRd8IteCom	:= GdFieldPos( "RD8_ITECOM" , oGdRd8:aHeader )
Local nRd8CodQue	:= GdFieldPos( "RD8_CODQUE" , oGdRd8:aHeader )

Local aRd8CposSrt
Local aRd8CposPes

DEFAULT cKeyAtu		:= ""
DEFAULT cKeyAnt		:= ""

aRd8CposSrt			:= { nRd8IteCom , nRd8CodQue }
aRd8CposPes			:= { { nRd8IteCom , cKeyAnt } }

GdColsExChange(	@aRd8Cols,;			//01 -> Array com a Estrutura do aCols Contendo todos os Dados
				oGdRd8:aCols,;		//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
				oGdRd8:aHeader,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
				NIL,;				//04 -> Array com as Posicoes dos Campos para Pesquisa
				cKeyAtu,;			//05 -> Chave para Busca no aColsAll para Carga do aCols
				aRd8CposSrt,;		//06 -> Array com as Posicoes dos Campos para Ordenacao
				aRd8CposPes,;		//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
				NIL,;				//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
				NIL,;				//09 -> Conteudo do Elemento "Deleted" ( para uso na GdRmkaCols() )
				lTransf2All,;		//10 -> Se deve Transferir do aCols para o aColsAll
				lTransf2Cols,;		//11 -> Se deve Transferir do aColsAll para o aCols
				.T.,;				//12 -> Se Existe o Elemento de Delecao no aCols
				.T.,;				//13 -> Se deve Carregar os Inicializadores padroes
				bColsToAll,;		//14 -> Condicao para a Transferencia do aCols para o aColsAll
				bAllToCols;			//15 -> Condicao para a Transferencia do aColsAll para o aCols
			 )

Return( NIL )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda140TreeBld	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁMonta o Tree de Competencias para Escolha das Questoes		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda140TreeBld(	oDlg			,;
	   							aTreeCoords 	,;
	   							oTreeQst		,;
	   							cTreeLastKey	,;
	   							nRDMRecno		,;
	   							cFilRDM			,;
	   							cCodRDM			,;
	   							oGdRdo			,;
	   							aRdoCols		,;
	   							oGdRd8			,;
	   							aRd8Cols		,;
								lRd8MaxLin		 ;
	   						)

Local aDbTreeInfo
Local bTreeChage
Local cKey
Local lRebuildTree
Local lSuperDel    


Begin Sequence

	cKey := ( cEmpAnt + cFilAnt + xFilial("RD3") + GetMemVar( "RD3_CODCOM" ) )
	IF !( lRebuildTree := !( cTreeLastKey == cKey ) )
		Break
	EndIF

	lSuperDel		:= !( cTreeLastKey == "cTreeLastKey" )
	cTreeLastKey	:= cKey
	cFilRDM		 	:= xFilial("RDM")
	cCodRDM			:= GetMemVar( "RD3_CODCOM" )
	RDM->( dbSetOrder( RetOrdem( "RDM" , "RDM_FILIAL+RDM_CODIGO" ) ) ) 	
	IF RDM->( dbSeek( cFilRDM + cCodRDM , .F. ) )
 		nRDMRecno := RDM->( Recno() )
 	EndIF
 	IF ( ValType( oTreeQst ) == "O" )
 		oTreeQst:TreeSeek( "*-" )
 	EndIF	

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define aDbTreeInfo                                      	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aDbTreeInfo :=	{;
	 			    	{;
	 			    		"RDM",;
	 			    		nRDMRecno,;
	 			    		cFilRDM,;
	 			    		cCodRDM,;
	 			    		"RDM_DESC";
	 			    	},;
	 			    	{;
	 			    		"RD2",;
	 			    		"RD2_ITEM",;
	 			    		1,;
	 			    		"RD2_TREE",;
	 			    		2,;
	 			    		"RD2_DESC",;
	 			    	};
	 			    }
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para o Change do Tree                     	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bTreeChage := { ||;      
					Busccargo(	{|lTudOK|RdoChgTree( oTreeQst , oGdRdo , aRdoCols, lTudOK )}					,;
								{|lTudOK|Rd8ChgTree( oTreeQst , oGdRd8 , @aRd8Cols , lRd8MaxLin, lTudOK )} 	;
							)	;
				   }
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta o Tree de Competencias                             	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	oTreeQst := ApdBldTree(aDbTreeInfo,NIL,NIL,bTreeChage,NIL,.F.,aTreeCoords,NIL,oDlg,.T.,{3,4,5,6,7,8})
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Blogo do bGotFocus que ira Remontar o Tree caso hajaЁ
	Ё alteracao na competencia									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( Inclui )
		oTreeQst:bGotFocus := { |lNoExecChange|;
										Apda140TreeBld(;
															oDlg			,;
															aTreeCoords 	,;
															oTreeQst		,;
															@cTreeLastKey	,;
															nRDMRecno		,;
															cFilRDM			,;
															cCodRDM			,;
															oGdRdo			,;
															aRdoCols		,;
															oGdRd8			,;
															aRd8Cols		,;
															lRd8MaxLin		 ;
													   ),;									
							  }
	Else
		oTreeQst:bGotFocus := { || .T. }
	EndIF							  
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Deleta as Informacoes do RD8 se alterou a competencia    	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lSuperDel )
		MyGdSuperDel( oGdRdo , .T. , @aRdoCols )
		MyGdSuperDel( oGdRd8 , .T. , @aRd8Cols )
		IF ( Empty( SQO->QO_ESCALA ) )
			MyGdSuperDel( oSqpGetDados , .T. )
		Else
			MyGdSuperDel( oRblGetDados , .T. )
		EndIF	
	EndIF

End Sequence
	
Return( oTreeQst )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁBusccargo		 ЁAutorЁMauricio MR		  Ё Data Ё03/02/2010Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁPosiciona no Noh anterir se falhar os TudOK RDO e RD8		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA140()													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
static function Busccargo(bRdoChgTree, bRd8ChgTree)
Local lRDOOk	:= .T.
Local lRD8OK	:= .T.

IF 	(lRDOOk := Eval(bRdoChgTree,lRDOOk) )
	lRD8Ok:= Eval(bRd8ChgTree, lRD8OK )
Endif

IF lRDOOK .and. lRD8OK
	cCargoAnt:=oTreeQst:GetCargo()
Else

	Eval(bRdoChgTree, lRDOOK ) 
	Eval(bRd8ChgTree, lRD8OK )
	oGdRdo:oBrowse:Refresh()
	oGdRdo:Show()
	oGdRd8:Show()
Endif	


Return(.T.)
/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda140SwhQst	 ЁAutorЁMarinaldo de JesusЁ Data Ё02/10/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁMostra Todo o Conteudo da Questao        					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁoGdRd8:oBrowse:blDblClick									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda140SwhQst( oGdRd8 , blDblClick )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local nColDesQue	:= GdFieldPos( "RD8_DESQUE" , oGdRd8:aHeader )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aSvKeys
Local aAdvSize
Local aInfoAdvSize
Local aObjSize
Local aObjCoords
Local bSet15
Local bSet24
Local cKeyQst
Local cMemoQst
Local cTitCompl
Local oMemoQst
Local oFont
Local oDlg

Begin Sequence

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Se a Coluna Posicionada nao for a Coluna de Descricao da QuesЁ
	Ё tao 														   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( oGdRd8:oBrowse:nColPos == nColDesQue )
		GdRstDblClick( oGdRd8 , blDblClick )
		Break
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Seta a Ordem do Arquivo de Questoes                    	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	SQO->( dbSetOrder( RetOrdem( "SQO" , "QO_FILIAL+QO_QUESTAO" ) ) )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta a Chave para Pesquisa da Questao                 	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cKeyQst := xFilial( "SQO" )
	cKeyQst += GdFieldGet( "RD8_CODQUE" , oGdRd8:oBrowse:nAt , .F. , oGdRd8:aHeader , oGdRd8:aCols )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Posiciona na Questao                                   	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( SQO->( MsSeek( cKeyQst , .F. ) ) )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Obtem o Memo                               				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		cMemoQst := SQO->QO_QUEST

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta as Dimensoes dos Objetos             				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aAdvSize		:= MsAdvSize( .T. , .T. )
		aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
		aObjCoords		:= { { 0 , 0 , .T. , .T. } }
		aObjSize := MsObjSize( aInfoAdvSize , aObjCoords )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Salva as Teclas de Atalho                  				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aSvKeys := GetKeys()

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define o Bloco para a Tecla <CTRL-O>						   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bSet15	:= { || RestKeys( aSvKeys , .T. ) , oDlg:End() }

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define o Bloco para a Tecla <CTRL-X>     	   				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bSet24	:= { || RestKeys( aSvKeys , .T. ) , oDlg:End() }

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Carrega o Complemento do Titulo          	   				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		cTitCompl := oGdRd8:aHeader[ GdFieldPos( "RD8_ITECOM" , oGdRd8:aHeader ) , 01 ]
		cTitCompl += ": "
		cTitCompl += GdFieldGet( "RD8_ITECOM" , oGdRd8:oBrowse:nAt , .F. , oGdRd8:aHeader , oGdRd8:aCols )
		cTitCompl += " / "
		cTitCompl += oGdRd8:aHeader[ GdFieldPos( "RD8_CODQUE" , oGdRd8:aHeader ) , 01 ]
		cTitCompl += ": "
		cTitCompl += GdFieldGet( "RD8_CODQUE" , oGdRd8:oBrowse:nAt , .F. , oGdRd8:aHeader , oGdRd8:aCols )
	
		DEFINE FONT oFont NAME "Arial" SIZE 0,-18 //BOLD
		DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0006 + " - " + cTitCompl ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF GetWndDefault() PIXEL
			
			@ aObjSize[1,1],aObjSize[1,2] GET oMemoQst VAR cMemoQst MEMO SIZE aObjSize[1,4],(aObjSize[1,3]-15) FONT oFont OF oDlg PIXEL WHEN ( .T. )
			oMemoQst:lReadOnly := .T.
		
		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 ) CENTERED
		RestKeys( aSvKeys , .T. )

	EndIF
	
End Sequence

Return( NIL )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd3CodigoVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё06/10/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Validar o Conteudo do Campo RD3_CODIGO          Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RD3_CODIGO                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd3CodigoVld( cRD3Codigo )

Local lRd3CodigoOk	:= .T.

Begin Sequence

	DEFAULT cRD3Codigo := GetMemVar( "RD3_CODIGO" )

	IF !( lRd3CodigoOk := Rd3GetCodigo( @cRD3Codigo , .F. , .T. ) )
    	Break
    EndIF

	SetMemVar( "RD3_CODIGO" , cRD3Codigo )

End Sequence

Return( lRd3CodigoOk )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd3GetCodigo ЁAutorЁMarinaldo de Jesus    Ё Data Ё27/02/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁObtem Numeracao Valida para o RD3_CODIGO                    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁObter Numeracao valida para o RD3_CODIGO                 	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd3GetCodigo( cRD3Codigo , lExistChav , lShowHelp )
Return(;
			GetNrExclOk(	@cRD3Codigo 			,;
							"RD3"					,;
							"RD3_CODIGO"			,;
							"RD3_FILIAL+RD3_CODIGO" ,;
							NIL						,;
							lExistChav				,;
							lShowHelp	 			 ;
						);
		)

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd3CodigoInitЁAutorЁMarinaldo de Jesus    Ё Data Ё06/10/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador padrao do Campo RD3_CODIGO          			Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO para o campo RD3_CODIGO                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd3CodigoInit()
Local cRD3Codigo
Rd3GetCodigo( @cRD3Codigo , .F. , .F. )
Return( cRD3Codigo )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd3DescVld	 ЁAutorЁMarinaldo de Jesus    Ё Data Ё06/10/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Validar o Conteudo do Campo RD3_DESC          	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RD3_DESC                         		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd3DescVld()

Local lRd3DescOk := .T.

Begin Sequence

	IF !( lRd3DescOk := NaoVazio() )
		Break
	EndIF

	IF !( lRd3DescOk := Texto() )
    	Break
    EndIF

End Sequence

Return( lRd3DescOk )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd3DesMemInitЁAutorЁMarinaldo de Jesus    Ё Data Ё06/10/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Inicializar o Conteudo do Campo RD3_DESMEM      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO para o campo RD3_DESMEM                     		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd3DesMemInit()

Local cRd3DesMemInit := ""

IF !( Inclui := IF( ( Type("Inclui") == "L" ) , Inclui , .F. ) )
	cRd3DesMemInit := ApdMsMm( RD3->RD3_CODMEM )
EndIF

Return( cRd3DesMemInit )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd3CodComVld 	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do Campo RD3_CODCOM									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁValid do Campo RD3_CODCOM									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd3CodComVld()

Local lRd3CodComOK := .T.

Begin Sequence

	IF !( lRd3CodComOK := NaoVazio() )
		Break
	EndIF

	IF !( lRd3CodComOK := ExistCpo("RD2") )
		Break
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega a Descricao                                      	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	Rd3DesComInit( .T. )
	//Recarrega estrutura da arvore
	oTreeQst := Eval(bTreeBuild)
	oTreeQst:Refresh()

End Sequence	

Return( lRd3CodComOK )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd3DesComInit	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador Padrao para o Campo RD3_DESCOM				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RD3_DESCOM								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd3DesComInit( lReadVar )

Local cRd3DesComInit
Local cReadVar 

Local nOrder

DEFAULT lReadVar	:= .F.

IF ( lReadVar )
	cReadVar		:= &( ReadVar() )                   
	nOrder := RetOrder(xFilial("RDM") + cReadVar)
	cRd3DesComInit	:= fDesc( "RDM" , cReadVar , "RDM_DESC" , GetSx3Cache( "RD3_DESCOM" , "X3_TAMANHO" ) , xFilial("RDM"), nOrder, .F. )
	SetMemVar( "RD3_DESCOM" , cRd3DesComInit )
Else  
	nOrder := RetOrder(xFilial("RDM") + RD3->RD3_CODCOM)
	cRd3DesComInit := fDesc( "RDM" , RD3->RD3_CODCOM , "RDM_DESC" , GetSx3Cache( "RD3_DESCOM" , "X3_TAMANHO" ) , xFilial("RDM"), nOrder, .F. )
EndIF

Return( cRd3DesComInit )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd3DesComBrw	 ЁAutorЁMarinaldo de JesusЁ Data Ё23/03/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador Padrao para o Browse de Campo RD3_DESCOM		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_INIBRW do campo RD3_DESCOM								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd3DesComBrw()
Return( Rd3DesComInit() )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd3EscalaVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё22/03/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid para o campo RD3_ESCALA   			          		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RD3_ESCALA                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd3EscalaVld()

Local lRd3EscalaVld := .T.

Begin Sequence
    
	IF ( Type( "Inclui" ) == "L" ) .And. !(Altera)
		IF !( Inclui )
			Break
		EndIF
	EndIF
    
	IF !( lRd3EscalaVld := NaoVazio() )
		Break
	EndIF

	IF !( lRd3EscalaVld := ExistCpo( "RBK" ) )
		Break
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega a Descricao                                      	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	Rd3DescEsInit( .T. )
	//Atualiza campo
	oTreeQst:Refresh()

End Sequence

Return( lRd3EscalaVld )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd3EscalaWhenЁAutorЁMarinaldo de Jesus    Ё Data Ё22/03/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid para o campo RD3_ESCALA   			          		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RD3_ESCALA                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd3EscalaWhen()

Local cReadVar			:= Upper( AllTrim( ReadVar() ) )
Local lRd3EscalaWhen	:= .T.

Begin Sequence

	IF ( "RD3_ESCALA" $ cReadVar )
		IF ( Type( "Inclui" ) == "L" ) .And. !(Altera)
			lRd3EscalaWhen := Inclui
		EndIF
	EndIF

End Sequence

Return( lRd3EscalaWhen )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd3DescEsInit	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador Padrao para o Campo RD3_DESCES				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RD3_DESCES								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd3DescEsInit( lReadVar )

Local cRd3DescEsInit
Local cReadVar               
Local nOrder

DEFAULT lReadVar	:= .F.

IF ( lReadVar )
	cReadVar		:= &( ReadVar() )
	nOrder			:= RetOrder(xFilial("RBK") + cReadVar)
	cRd3DescEsInit	:= fDesc( "RBK" , cReadVar , "RBK_DESCRI" , GetSx3Cache( "RD3_DESCES" , "X3_TAMANHO" ) , xFilial("RBK"), nOrder, .F. )
	SetMemVar( "RD3_DESCES" , cRd3DescEsInit )
Else
	nOrder			:= RetOrder(xFilial("RBK") + RD3->RD3_ESCALA)   
	cRd3DescEsInit := fDesc( "RBK" , RD3->RD3_ESCALA , "RBK_DESCRI" , GetSx3Cache( "RD3_DESCES" , "X3_TAMANHO" ) , xFilial("RBK"), nOrder, .F. )
EndIF

Return( cRd3DescEsInit )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd3DescEsBrw	 ЁAutorЁMarinaldo de JesusЁ Data Ё21/03/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador Padrao para Browse do Campo RD3_DESCES		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_INIBRW do campo RD3_DESCES								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd3DescEsBrw()
Return( Rd3DescEsInit() )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8OrdemVld		 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidar o Campo RD8_ORDEM									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RD8_ORDEM									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8OrdemVld()

Local lRd8OrdemOK := .T.

Return( lRd8OrdemOK )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8CodComVld	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidar o Campo RD8_CODCOM									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RD8_CODCOM								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8CodComVld()

Local lRd8CodComOk := .T.

Begin Sequence

	IF !( lRd8CodComOk := NaoVazio() )
		Break
	EndIF
	
	IF !( lRd8CodComOk := ExistCpo( "RDM" ) )
		Break
	EndIF

End Sequence	

Return( lRd8CodComOk )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8CodComInit	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador Padrao do campo RD8_CODCOM					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RD8_CODCOM								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8CodComInit()

Local cCodCom

IF ( IsMemVar( "RD3_CODCOM" ) )
	cCodCom := GetMemVar( "RD3_CODCOM" )
Else
	cCodCom := Space( GetSx3Cache( "RD8_CODCOM" , "X3_TAMANHO" ) ) 
EndIF

Return( cCodCom )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8IteComVld	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidar o Campo RD8_ITECOM									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RD8_ITECOM								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8IteComVld()

Local lRd8IteComOK := .T.

Begin Sequence

	IF !( lRd8IteComOK := NaoVazio() )
		Break
	EndIF

	IF ( IsMemVar( "RD8_CODCOM" ) )
		IF !( lRd8IteComOK := ExistCpo( "RD2" , ( GetMemVar( "RD8_CODCOM" ) + GetMemVar( "RD8_ITECOM" ) ) ) )
			Break
		EndIF
	EndIF

End Sequence

Return( lRd8IteComOK )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8IteComInit	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador Padrao do campo RD8_ITECOM					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>				l					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RD8_ITECOM								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8IteComInit()

Local cIteCom

IF ( IsMemVar( "RD2_ITEM" ) )
	cIteCom := GetMemVar( "RD2_ITEM" )
Else
	cIteCom := Space( GetSx3Cache( "RD8_ITECOM" , "X3_TAMANHO" ) ) 
EndIF

Return( cIteCom )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8CodQueWhen	 ЁAutorЁMarinaldo de JesusЁ Data Ё21/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁWhen do Campo RD8_CODQUE									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁWhen do Campo RD8_CODQUE									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8CodQueWhen()
         
Local aLog			:= {}
Local aLogTitle		:= {}
Local cReadVar		:= Upper( AllTrim( ReadVar() ) )
Local cMsgNoYes		:= ""
Local cTitNoYes		:= IF( ( Type("cCadastro") == "C" ) , cCadastro , OemToAnsi( STR0031 ) /*"Aviso!"*/ )
Local lRd8CodQueOk	:= .T.
Local lExecObjGd	:= .F.
Local lExistRD3		:= .F.

Begin Sequence

	IF !( cReadVar == "M->RD8_CODQUE" )
		Break
	EndIF

	IF Empty( GetMemVar( "RD8_CODQUE" ) )
		Break
	EndIF

	lExecObjGd	:= IsInGetDados()

	IF ( lExecObjGd )
		IF ( GdFieldPos( "RD8_ITECOM" ) > 0 )
			SetMemVar( "RD8_ITECOM" , GdFieldGet( "RD8_ITECOM" ) )
		EndIF
		IF ( GdFieldPos( "RD8_ESCALA" ) > 0 )
			SetMemVar( "RD8_ESCALA" , GdFieldGet( "RD8_ESCALA" ) )
		EndIF
		IF ( GdFieldPos( "RD8_ITEESC" ) > 0 )
			SetMemVar( "RD8_ITEESC" , GdFieldGet( "RD8_ITEESC" ) )
		EndIF
	EndIF
	
	IF ( lExistRD3 := (;
							( IsMemVar( "RD3_CODIGO" ) );
							.and.;
							( IsMemVar( "RD3_CODCOM" ) );
					   );
		)
		SetMemVar( "RD8_CODMOD" , GetMemVar( "RD3_CODIGO" ) )
		SetMemVar( "RD8_CODCOM" , GetMemVar( "RD3_CODCOM" ) )
	EndIF
	
	IF (;
			( IsMemVar( "RD8_CODMOD" ) );
			.and.;
			( IsMemVar( "RD8_CODCOM" ) );
			.and.;
			( IsMemVar( "RD8_ITECOM" ) );
			.and.;
			( IsMemVar( "RD8_CODQUE" ) );
		)	
		IF !(;
				lRd8CodQueOk := ApdChkDel(	"RD8",;
											NIL,;
											4,;
											(;
												GetMemVar( "RD8_CODMOD" )+;
												GetMemVar( "RD8_CODCOM" )+;
												GetMemVar( "RD8_ITECOM" )+;
												GetMemVar( "RD8_CODQUE" );
											),;
											.F.,;
											@aLog,;
											@aLogTitle;
										  );
			)
			cMsgNoYes := STR0033	//"O C╒digo da Quest└o n└o pode ser alterado."
			cMsgNoYes += CRLF
			cMsgNoYes += CRLF
			cMsgNoYes += STR0034	//"A Quest└o j═ est═ sendo utilizada no processo de Avalia┤└o."
			cMsgNoYes += CRLF
			cMsgNoYes += CRLF
			cMsgNoYes += CRLF
			cMsgNoYes += STR0035	//"Deseja consultar o LOG?"
			IF MsgNoYes( OemToAnsi( cMsgNoYes ) , cTitNoYes )
				//"Log de Inconsistencia na Alteracao do Codigo de Questoes"
				fMakeLog( { aLog } , aLogTitle , NIL , NIL , FunName() , STR0032 )
			EndIF
			Break
		EndIF
	EndIF

End Sequence

Return( lRd8CodQueOk )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8CodQueVld	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do Campo RD8_CODQUE									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁValid do Campo RD8_CODQUE									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8CodQueVld()
         
Local lRd8CodQueOk	:= .T.

Begin Sequence

	IF !( lRd8CodQueOk := NaoVazio() )
		Break
	EndIF

	IF !( lRd8CodQueOk := ExistCpo("SQO") )
		Break
	EndIF

	If !( lRd8CodQueOk := (Posicione("SQO",1,xFilial("SQO")+M->RD8_CODQUE,"QO_TIPO") == 'APD') )
		MsgInfo( OemToAnsi( STR0038 ) , OemToAnsi( STR0023 ) ) // "Esta questЦo nЦo pertence ao tipo de AvaliaГЦo." ### "Aviso de Inconistencia"
		Break
	Endif
	
	IF ( IsInGetDados() )
		IF ( GdFieldPos( "RD8_DESQUE" ) > 0 )
			Rd8DesQueInit( .T. )
			IF ( Type( "oGdRd8" ) == "O" )
				Rd8ChgQuest( oGdRd8 , .F. , .F. )
			EndIF
		EndIF
	EndIF	

End Sequence	

Return( lRd8CodQueOk )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8DesQueInit	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RD8_DESQUE					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RD8_DESQUE								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8DesQueInit( lGetDados )

Local nOrder			:= RetOrdem( "SQO" , "QO_FILIAL+QO_QUESTAO" )
Local cRd8DesQueInit

DEFAULT lGetDados		:= .F.

IF ( lGetDados )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Posiciona no Final do Arquivo para Evitar que na Inclusao  deЁ
	Ё nova Linha na GetDados Seja Carregada a Descricao Baseado  noЁ
	Ё Posicionamento do RD8 pois a Funcao Rd8DesQueInit() Tambem EhЁ
	Ё Chamada no Inicializador Padrao do Campo RD8_DESQUE          Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	PutFileInEof( "RD8" )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega a Descricao do Campo								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cRd8DesQueInit	:= fDesc( "SQO" , GetMemVar( "RD8_CODQUE" ) , "QO_QUEST" , GetSx3Cache( "RD8_DESQUE" , "X3_TAMANHO" ) , NIL , nOrder , .F. )
	cRd8DesQueInit	:= Padr( cRd8DesQueInit , GetSx3Cache( "RD8_DESQUE" , "X3_TAMANHO" ) )
	GdFieldPut( "RD8_DESQUE" , cRd8DesQueInit )
Else
	cRd8DesQueInit	:= fDesc( "SQO" , RD8_CODQUE , "QO_QUEST" , GetSx3Cache( "RD8_DESQUE" , "X3_TAMANHO" ) , NIL , nOrder , .F. )
	cRd8DesQueInit	:= Padr( cRd8DesQueInit , GetSx3Cache( "RD8_DESQUE" , "X3_TAMANHO" ) )
EndIF

Return( cRd8DesQueInit )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8DesQueBrw	 ЁAutorЁMarinaldo de JesusЁ Data Ё23/03/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Browse para Campo RD8_DESQUE		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_INIBRW  do campo RD8_DESQUE								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8DesQueBrw()
Return( Rd8DesQueInit() )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8CodModVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё06/10/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Validar o Conteudo do Campo RD8_CODIGO          Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RD8_CODIGO                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8CodModVld()

Local lRd8CodModOk := .T.

Begin Sequence

	IF !( lRd8CodModOk := NaoVazio() )
		Break
	EndIF

	IF !( lRd8CodModOk := ExistCpo( "RD3" ) )
		Break
    EndIF

End Sequence

Return( lRd8CodModOk )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8EscalaVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё02/02/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValida a existencia da escala na tabela                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁApda140  	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8EscalaVld()

Local lRd8EscalaVld := .F.

Begin Sequence

	IF ( Vazio() )
		Break
	EndIF

	lRd8EscalaVld := ExistCpo( "RBK" )

End Sequence

Return( lRd8EscalaVld )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8EscalaWhen	 ЁAutorЁMarinaldo de JesusЁ Data Ё04/12/2002Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁWhen do Campo RD8_ESCALA									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RD8_ESCALA								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8EscalaWhen()

Local cReadVar	:= Upper( AllTrim( ReadVar() ) )

IF ( SubStr( cReadVar , 4 ) == "RD8_ESCALA" )
	IF ( IsInGetDados( { "RD8_ITEESC" } ) )
		SetMemVar( "RD8_ITEESC" , GdFieldGet( "RD8_ITEESC" ) )
	EndIF
EndIF

Return( .T. )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8EscalaInit	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador Padrao do campo RD8_ESCALA					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RD8_ESCALA								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8EscalaInit()

Local cRd8EscalaInit

IF ( IsMemVar( "RD3_ESCALA" ) )
	cRd8EscalaInit := GetMemVar( "RD3_ESCALA" )
Else
	cRd8EscalaInit := Space( GetSx3Cache( "RD8_ESCALA" , "X3_TAMANHO" ) )
EndIF

Return( cRd8EscalaInit )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8IteEscVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё02/02/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValida a existencia da escala na tabela                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RD8_ESCALA	                            Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8IteEscVld()

Local lRd8IteEscVld := .T.

Begin Sequence
	
	IF ( Vazio() )
		Break
	EndIF

	lRd8IteEscVld := ExistCpo( "RBL" , ( GetMemVar( "RD8_ESCALA" ) + GetMemVar( "RD8_ITEESC" ) ) )

End Sequence

Return( lRd8IteEscVld )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8IteEscWhen	 ЁAutorЁMarinaldo de JesusЁ Data Ё04/12/2002Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁWhen do Campo RD8_ITEESC									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RD8_ITEESC								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8IteEscWhen()

Local cReadVar	:= Upper( AllTrim( ReadVar() ) )

IF ( SubStr( cReadVar , 4 ) == "RD8_ITEESC" )
	IF ( IsInGetDados( { "RD8_ESCALA" } ) )
		SetMemVar( "RD8_ESCALA" , GdFieldGet( "RD8_ESCALA" ) )
	EndIF
EndIF

Return( .T. )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8IteEscInitЁAutorЁMarinaldo de Jesus    Ё Data Ё16/03/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador padrao do Campo RD8_ITEESC                    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO DO CAMPO RD8_ITEESC	                            Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8IteEscInit()
Return( Space( GetSx3Cache( "RD8_ITEESC" , "X3_TAMANHO" ) ) ) 

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdoCodModVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё06/10/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Validar o Conteudo do Campo RDO_CODMOD          Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RDO_CODMOD                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdoCodModVld()

Local lRdoCodModOk := .T.

Begin Sequence

	IF !( lRdoCodModOk := NaoVazio() )
		Break
	EndIF

	IF !( lRdoCodModOk := ExistCpo( "RD3" ) )
		Break
    EndIF

End Sequence

Return( lRdoCodModOk )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdoCodComVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё06/10/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Validar o Conteudo do Campo RDO_CODCOM          Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RDO_CODCOM                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdoCodComVld()

Local lRdoCodComOk := .T.

Begin Sequence

	IF !( lRdoCodComOk := NaoVazio() )
		Break
	EndIF

	IF !( lRdoCodComOk := ExistCpo( "RDM" ) )
		Break
    EndIF

End Sequence

Return( lRdoCodComOk )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdoIteComVld	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidar o Campo RDO_ITECOM									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RDO_ITECOM								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdoIteComVld()

Local lRdoIteComOK := .T.

Begin Sequence

	IF !( lRdoIteComOK := NaoVazio() )
		Break
	EndIF

	IF ( IsMemVar( "RDO_CODCOM" ) )
		IF !( lRdoIteComOK := ExistCpo( "RD2" , ( GetMemVar( "RDO_CODCOM" ) + GetMemVar( "RDO_ITECOM" ) ) ) )
			Break
		EndIF
	EndIF

End Sequence

Return( lRdoIteComOK )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdoIteComInit	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador Padrao do campo Rdo_ITECOM					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo Rdo_ITECOM								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdoIteComInit()

Local cIteCom

IF ( IsMemVar( "RD2_ITEM" ) )
	cIteCom := GetMemVar( "RD2_ITEM" )
Else
	cIteCom := Space( GetSx3Cache( "RDO_ITECOM" , "X3_TAMANHO" ) ) 
EndIF

Return( cIteCom )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdoEscalaVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё02/02/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do campo RDO_ESCALA                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RDO_ESCALA								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdoEscalaVld()

Local lRdoEscalaVld := .F.

Begin Sequence

	IF ( Vazio() )
		Break
	EndIF
	
	lRdoEscalaVld := ExistCpo( "RBK" )

End Sequence	

Return( lRdoEscalaVld )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdoEscalaInit	 ЁAutorЁMarinaldo de JesusЁ Data Ё05/08/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador Padrao do campo RDO_ESCALA					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RDO_ESCALA								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdoEscalaInit()

Local cRdoEscalaInit

IF ( IsMemVar( "RD3_ESCALA" ) )
	cRdoEscalaInit := GetMemVar( "RD3_ESCALA" )
Else
	cRdoEscalaInit := Space( GetSx3Cache( "RDO_ESCALA" , "X3_TAMANHO" ) ) 
EndIF

Return( cRdoEscalaInit )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdoEscalaWhen	 ЁAutorЁMarinaldo de JesusЁ Data Ё04/12/2002Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁWhen do Campo RDO_ESCALA									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RDO_ESCALA								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdoEscalaWhen()

Local cReadVar	:= Upper( AllTrim( ReadVar() ) )

IF ( SubStr( cReadVar , 4 ) == "RDO_ESCALA" )
	IF ( IsInGetDados( { "RDO_ITEESC" } ) )
		SetMemVar( "RDO_ITEESC" , GdFieldGet( "RDO_ITEESC" ) )
	EndIF
EndIF

Return( .T. )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdoIteEscVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё02/02/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do campo RD0_ITEESC                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RDO_ITEESC								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdoIteEscVld()

Local lRdoIteEscVld := .T.

Begin Sequence
	
	IF ( Vazio() )
		Break
	EndIF

	lRdoIteEscVld := ExistCpo( "RBL" , ( GetMemVar( "RDO_ESCALA" ) + GetMemVar( "RDO_ITEESC" ) ) )

End Sequence

Return( lRdoIteEscVld )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdoIteEscWhen	 ЁAutorЁMarinaldo de JesusЁ Data Ё04/12/2002Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁWhen do Campo RDO_ITEESC									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RDO_ITEESC								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdoIteEscWhen()

Local cReadVar	:= Upper( AllTrim( ReadVar() ) )

IF ( SubStr( cReadVar , 4 ) == "RDO_ITEESC" )
	IF ( IsInGetDados( { "RDO_ESCALA" } ) )
		SetMemVar( "RDO_ESCALA" , GdFieldGet( "RDO_ESCALA" ) )
	EndIF
EndIF

Return( .T. )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdhEditaBox  ЁAutorЁEduardo Ju            Ё Data Ё23/03/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Retornar as Opcoes do Campo RD8_EDITA         	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_CBOX para o campo RD8_EDITA                         		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdhEditaBox()
Return( OpBxEdita( .F. ) )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdhEditaInit ЁAutorЁEduardo Ju            Ё Data Ё23/03/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Retornar as Opcoes do Campo RD8_EDITA         	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO para o campo RD8_EDITA                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdhEditaInit()
Return( SubStr( OpBxEdita( .T. ) , 3 , 2 ) )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8EditaBox  ЁAutorЁEduardo Ju            Ё Data Ё23/03/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Retornar as Opcoes do Campo RD8_EDITA         	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_CBOX para o campo RD8_EDITA                         		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8EditaBox()
Return( OpBxEdita( .F. ) )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd8EditaInit ЁAutorЁEduardo Ju            Ё Data Ё23/03/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Retornar as Opcoes do Campo RD8_EDITA         	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO para o campo RD8_EDITA                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd8EditaInit()
Return( SubStr( OpBxEdita( .T. ) , 3 , 2 ) )


/*                                	
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    Ё MenuDef		ЁAutorЁ  Luiz Gustavo     Ё Data Ё21/12/2006Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁIsola opcoes de menu para que as opcoes da rotina possam    Ё
Ё          Ёser lidas pelas bibliotecas Framework da Versao 9.12 .      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё< Vide Parametros Formais >									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA140                                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Retorno  ЁaRotina														Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/   

Static Function MenuDef()

 Local aRotina :=  {;
								{ STR0001 , "AxPesqui"	 , 0 , 01,,.F. } ,; //"Pesquisar"
								{ STR0002 , "Apda140Mnt" , 0 , 02 } ,; //"Visualizar"
								{ STR0003 , "Apda140Mnt" , 0 , 03 } ,; //"Incluir"
								{ STR0004 , "Apda140Mnt" , 0 , 04 } ,; //"Alterar"
								{ STR0005 , "Apda140Mnt" , 0 , 05 } ,; //"Excluir"
								{ STR0010 , "Apda140Mnt" , 0 , 04 }  ; //"Copiar"
							}

Return aRotina

/*                                	
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFunГЦo    Ё RbjXBFilt   ЁAutoriaЁ  Isabel N.        Ё Data Ё25/04/2017 Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescriГЦo Ё Filtro da Consulta Padrao                                  Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё< Vide Parametros Formais >                                 Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      Ё Consulta Padrao RBJRD8 (SXB)                               Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢*/
Function RbjXBFilt()

Local lret := .T.
Local cCodComp := M->RD3_CODCOM
Local cItemComp := RD2_ITEM

If (!Empty(cCodComp) .And. !Empty(cItemComp))
	lret := RBJ->(RBJ_FILIAL + RBJ_CODCOM + RBJ_ITECOM) == xFilial("RBJ") + cCodComp + cItemComp
EndIf

Return( lret )
