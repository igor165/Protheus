
#INCLUDE "PROTHEUS.CH"
#INCLUDE "INKEY.CH"
#INCLUDE "GPEA040.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWADAPTEREAI.CH"

Static cEFDAviso
Static lIntegDef  := FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI")
Static lIntTaf    := ((SuperGetMv("MV_RHTAF",, .F.) == .T.) .AND. Val(SuperGetMv("MV_FASESOC",/*lHelp*/,' ')) >= 0 ) //Integracao com TAF
Static lIntConsig := GetMvRH("MV_CONSIG",, .F.) //Integracao com Consignado
Static lGp17SRVS  := FindFunction("FGP17SRVES")
Static nOpcAx	  := 3
Static cVersEnvio := ""
Static cVersGPE   := ""
Static lMiddleware:= If( cPaisLoc == 'BRA' .AND. Findfunction("fVerMW"), fVerMW(), .F. )
Static lCTabela	  := !ChkFile("RJ7") .And. !ChkFile("RJ8")
Static lTemRJG	  := ChkFile("RJG")

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜUÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±?
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±?
±±³Funcao    ?GPEA040  ?Autor ?Mohanad Odeh                   ?Data ?05/04/2013³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±?
±±³Descricao ?Cadastro de Verbas                                                   ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±³Sintaxe   ?GPEA040()                                                            ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±?Uso      ?Generico                                                             ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±?        ATUALIZACOES SOFRIDAS DESDE A CONSTRU?AO INICIAL.                       ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±³PROGRAMADOR ?DATA     ³FNC/CHAMADO  ? MOTIVO DA ALTERACAO                      ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±³MOHANAD ODEH?         ³TPCDYG       ³Verificação de modo de  compartilhamento   ³±?
±±?           ?         ?            ³entre SRV e RCN                            ³±?
±±³Raquel Hager?7/07/2014³TPZK57       ³Inclusao de replicas versao 11  com itens  ³±?
±±?           ?         ?            ³do eSocial.					            ³±?
±±³Flavio Corr.?5/09/2014³TQLLGD       ³Alteração do Valid/InitP do camp RV_DESMEMO³±?
±±?           ?         ?            ³para todos os tipos de folha	            ³±?
±±³Sidney O.   ?7/09/2014³TQO545       ³Ajuste na validacao do campo RV_CODMSEG    ³±?
±±?           ?         ?            ³Incluida validacao para o campo RV_TIPO. O ³±?
±±?           ?         ?            ³campo agora e de preenchimento obrigatorio ³±?
±±³Raquel Hager?2/10/2014³TQO545       ³Correcao quanto as validacoes pertinentes  ³±?
±±?           ?         ?            ³ao eSocial.					            ³±?
±±³Christiane V?2/07/2015³TSMUY2       ³Adaptações para versão 2.0 do eSocial      ³±?
±±³GSantacruz  ?9/07/2015³PCREQ-5930   ³Para Mexico no debe generar conceptos en   ³±?
±±?           ?         ?            ³automatico.					            ³±?
±±³Renan Borges?7/10/2015³TTMGMC       ³Ao executar a inclusão de um campo na SRV  ³±?
±±?           ?         ?            ³via Configurador e alterar a ordem, ao ten-³±?
±±?           ?         ?            ³tar incluir uma nova verba gerava error.log³±?
±±?           ?         ?            ³Não utilizar o valor do modelo de dados e  ³±?
±±?           ?         ?            ³sim o valor da tabela.                     ³±?
±±³GSantacruz  ?9/11/2015³PCREQ-5930   ³Merge 12.1.8                               ³±?
±±³Flavio C    ?4/03/2016³TUNT86       ³Ajuste F3 RV_HOMOLOG                       ³±?
±±³Marcia Moura?1/09/2016³TUWITW       ³Correcoes referentes aos campos Tp Processo³±?
±±?           ?         ?            ³pois o tipo de proc C.P. deveria ter sido  ³±?
±±?           ?         ?            ³mantido, o leiuate 2.1 retirou os demais   ³±?
±±³Raquel Hager?5/09/2016³TVQVEX       ³Validação para usuário que ainda possui o  ³±?
±±?           ?         ?            ³campo RV_TPPROCP como não usado.           ³±?
±±³GSantacruz  ?6/10/2016³TSSERMI01-26 ³Mod a las decripciones de fncion fBoxDecA  ³±?
±±?           ?         ?            ³para Chile.Se agrega  fncion gpea040fDesc  ³±?
±±?           ?         ?            ³ya que al visualizar un concepto se ob-    ³±?
±±?           ?         ?            ³servaba la info de codigo contenido en     ³±?
±±?           ?         ?            ?RV_CODMSEG                                ³±?
±±?           ?        ?             ³Para Chile, no debe generar conceptos en   ³±?
±±?           ?         ?            ³automatico.                                ³±?
±±³Marcos Cout ?6/04/2017³DRHESOCP-78  ³Compatibilização do E-social: Efetuado alte³±?
±±?           ?         ?            ³racação nos programas fValIRRF e fValINCCP ³±?
±±?           ?         ?            ?inclusao de novos codigos) e criado os pro³±?
±±?           ?         ?            ³gramas fValISIND(), fValIFGTS().           ³±?
±±³Claudinei S.?4/04/2017³DRHPAG-263/  ³AUDESP - f040ContPr() n_opções do campo    ³±?
±±?           ?         ³DRHPAG-305   ³RV_racação nos programas fValIRRF e fValINCCP ³±?
±±?           ?         ?            ?inclusao de novos codigos) e criado os pro³±?
±±?           ?         ?            ³gramas fValISIND(), fValIFGTS().           ³±?
±±|Jônatas A.  ?6/04/2017³MRH-8677/    ³Implementada a geração do XML 0 - Resumo   ³±?
±±|            ?         ³DPAG-425     ³Mensal da Folha de Pagto, módulo 4 fase III³±?
±±|Marcos Cout.?1/04/2017³DRHESOCP-78  ³Realizar ajustes dentro do campo RV_INCIRF ³±?
±±³Marcia Moura|02/05/2017|DRHESOCP-215 |Apenas para gerar o pacote                 ³±?
±±³Oswaldo L   |04/07/2017|DRHESOCP-552 |Remover tratativas de campos que passaram  ³±?
±±?           |          |             |a ser "nao utilizados" no SX3              ³±?
±±³Marcos Cout |26/07/2017|DRHESOCP-683 |Ajustes para exibir os valores corretos no ³±?
±±?           |          |             |campo Cd. Inc. IRRF (Remocao das opcoes)   ³±?
±±?           |          |             |Ajustes para que o campo Cod Inc CP  reco_ ³±?
±±?           |          |             |_nheça a opção "12" como válido            ³±?
±±³Eduardo Vic |17/08/2017|DRHESOCP-861 |Desenvolvimento de funcionalidade de envio ³±?
±±?           |          |             |extemporaneo na inclusao\exclusao\alteracao³±?
±±³Eduardo Vic |23/08/2017|DRHESOCP-910 |Tratativa quando tabela for compartilhada  ³±?
±±?           |          |             |para envio de verbas para o TAF			³±?
±±|Claudinei S.|30/08/2017|DRHESOCP-727 |Ajustes nos campos Cd.Inc.CP e Cd.Inc.IRRF |±±
±±|            |          |             |incluídas novas opções, eSocial leiaue 2.3.|±±
±±|Joao Balbino|03/10/2017|DRHESOCP-727 |Ajustes no campo RV_INCFGTS para que seja  |±±
±±|            |          |             |possivel utilizar as opções existentes.    |±±
±±|Cecília C.  |06/10/2017|DRHESOCP-1381|Ajuste na consistência efetuada pela função|±±
±±|            |          |             |fValInccp.                                 |±±
±±|Eduardo Vic |09/10/2017|DRHESOCP-1526|Inc. de envio do S1010 Extemporâneo esocial|±±
±±|Eduardo K.  |25/10/2017||MPRIMESP    |Ajuste em fValNatur p/ preencher o campo   |±±
±±|            |          |?11925      |RV_INCCP corretamente p/ os IDs 0407 e 0927|±±
±±|Oswaldo L   |16/11/2017|DRHPAG-8617  |Impedir que RV_FERSEG seja igual ao RV_COD |±±
±±|Eduardo Vic.|23/11/2017|DRHESOCP-2094|Inclusão de novas opções do campo leiaute 2.4|±±
±±|Cecilia Car.|27/11/2017|DRHESOCP-2124|Ajuste para não ocorre inconsistência no   |±±
±±|            |          |             |preenchimento do campo RV_INCIRF.          |±±
±±|Jaqueline L.|19/12/2017|DRHPAG-8479  |Ajuste na query, pois estava com Count(1)  |±±
±±|            |          |             |e foi ajustado para Count(*)               |±±
±±|Eduardo Vic.|27/12/2017|DRHESOCP-2456|Inclusão de mensagem para aviso de inconsis|±±
±±|            |          |			     |tência 		 			                     |±±
±±|Cecília Car.|03/01/2017|DRHESOCP-2675|Ajuste na inclusão de verbas através da con|±±
±±|            |          |			     |sulta padrão.                              |±±
±±|Eduardo Vic.|17/01/2018|DRHESOCP-31  |Ajuste para nova tratativa do TAF, referente|±±
±±|            |          |             |nova validação de registros não processados|±±
±±|Cecília Car.|22/01/2018|DRHESOCP-2822|Ajuste na consistência do campo RV_INCCP.  |±±
±±|Eduardo Vic.|29/01/2018|DRHESOCP-31  |Inclusão de nova variavel para chave de	|±±
±±|            |          |             |busca na função tafgetstat					|±±
±±|Eduardo Vic.|17/01/2018|DRHESOCP-31  |Tratativa de tabelas compartilhades e		|±±
±±|            |          |             |filial matriz								|±±
±±|E.Moskovkina|13/06/2018|DMA3-404     |Changes for Russia localization			|±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±?
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±?
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß?*/
Function GPEA040()
	Local oBrowse
	Local aCodFol
	Local aIntgSRV		:= {}
	Local lCriaVerb		:= .F.
	Local lDivAdi		:= GetRpoRelease() >= "12.1.025"  //GetMv("MV_RHG4MB1",Nil,.F.) //INTERNO. Para ativação dos novos ID's e testes na automação. DEFAULT ?.F./ Ser?alterado após a liberação total da implementação do desmembramento de adicionais dna rescisão
	cEFDAviso			:= If( cPaisLoc == 'BRA' .AND. Findfunction("fEFDAviso"), fEFDAviso(), "0" )			//Se nao encontrar este parametro apenas emitira alertas

	
	If FindFunction("fVersEsoc")
		fVersEsoc( "S1010", .F., /*aRetGPE*/, /*aRetTAF*/, @cVersEnvio, @cVersGPE, , ,"" )
		If lIntTAF .Or. lMiddleware 
			If FindFunction("ESocMsgVer") .And. !lMiddleware .And. cVersGPE <> cVersEnvio .And. (cVersGPE >= "9.0" .Or. cVersEnvio >= "9.0")
				//"Atenção! A versão do leiaute GPE é xxx e a do TAF é xxx, sendo assim, estão divergentes. O Evento xxx não será integrado com o TAF, e consequentemente, não será enviado ao RET.
				//Caso prossiga a informação será atualizada somente na base do GPE. Deseja continuar?"
				If ESocMsgVer(.F.,"S-1010", cVersGPE, cVersEnvio)
					lIntTaf := .F.
				Else
					Return
				EndIf
			EndIf
		EndIf
	EndIf

	oBrowse := BrowseDef()

	If !IsInCallStack( "RHIMPGEN" )
		//VERIFICAR A VERSAO DOS IDENTIFICADORES E ATUALIZAR A TABELA
		If cPaisLoc == "BRA"
			Fp_CodFol( @aCodFol , xFilial( "SRV" ), .F., .F. )
		Elseif cPaisLoc <> "RUS"
			Fp_CodFol( @aCodFol , xFilial( "SRV" ), !SRV->( Eof() ) )
		EndIf
		//Criar verbas com novos identificadores da versão 12
		IF !Empty(aCodFol) .And. cPaisLoc == 'BRA' .and. ( ( Empty(PosSrv(aCodFol[1329,1],xFilial("SRV"),"RV_COD")) .and. !Empty(PosSrv(aCodFol[43,1],xFilial("SRV"),"RV_COD")) ) .OR. (lDivAdi .and. Len(aCodFol) >= 1721 .And. fValidVerb(aCodFol) ) )
			//"O sistema irá criar novas verbas automaticamente de acordo com os novos "
			//"identificadores de cálculo."
			//"Deseja continuar?"
			//"Atenção"
			lCriaVerb := MsgYesNo( OemToAnsi( STR0265 + CRLF + CRLF + STR0266 ), OemToAnsi( STR0028 ) )
			If lCriaVerb
				aIntgSRV := fCriaVerbas( aCodFol, xFilial( "SRV" ) )
				If (lIntTAF .Or. lMiddleware) .And. !Empty(aIntgSRV)
					fIntVerbas(aIntgSRV)
				EndIf
			EndIf
		EndIf
	EndIf
	oBrowse:DisableDetails()
	oBrowse:Activate()

Return(Nil)

/*/{Protheus.doc} BrowseDef
Browse definition
@author E. Moskovkina
@since 13/06/2018
@version 1.0
@project MA3 - Russia
/*/
Static Function BrowseDef()
Local	oBrwSRV
Local	cFiltraRh

	oBrwSRV		:= FWMBrowse():New()
	oBrwSRV:SetAlias( "SRV" )
	oBrwSRV:SetDescription( OemToAnsi( STR0009 ) ) //"Cadastro de Verbas"

	//Inicializa o filtro utilizando a funcao FilBrowse
	cFiltraRh	:= CHKRH( FunName(), "SRV", "1" )

	oBrwSRV:SetFilterDefault( cFiltraRh )

Return oBrwSRV

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ?
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±?
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±?
±±³Funo    ³MenuDef     ?Autor ?MOHANAD ODEH          ?Data ?21/03/13 ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±?
±±³Descrio ³Menu Funcional                                                ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±³Sintaxe   ?MenuDef()                                                    ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±³Parametros?                                                             ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±?Uso      ?                                                             ³±?
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±?
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±?
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß?*/
STATIC FUNCTION MenuDef()
Local aRotina := {}
Local lImpRCM := .F.

ADD OPTION aRotina TITLE STR0004				ACTION 'PesqBrw'             		OPERATION 1 ACCESS 0 DISABLE MENU	// "Pesquisar"
ADD OPTION aRotina TITLE STR0005				ACTION 'VIEWDEF.GPEA040' 			OPERATION 2 ACCESS 0 				// "Visualizar"
ADD OPTION aRotina TITLE STR0006				ACTION 'VIEWDEF.GPEA040' 			OPERATION 3 ACCESS 0 				// "Incluir"
ADD OPTION aRotina TITLE STR0007 				ACTION 'VIEWDEF.GPEA040'	 		OPERATION 4 ACCESS 0 				// "Alterar"
ADD OPTION aRotina TITLE STR0008	   			ACTION 'Gpea040ChkDel'				OPERATION 5 ACCESS 0 				// "Excluir"

If cPaisLoc == "BRA" .And. (lIntTaf .Or. lMiddleware) .And. FindFunction("GPEA941A") .And. lTemRJG
	ADD OPTION aRotina TITLE STR0370 			ACTION 'VIEWDEF.GPEA941A'	 		OPERATION 4 ACCESS 0 				// "Processos da Verba"
EndIf

// OPCAO PARA MANUTENCAO INTERNA DA TOTVS
lManutence := (FunName() == "GPEA040M")
IF lManutence
	ADD OPTION aRotina TITLE OEMTOANSI(STR0087)  ACTION 'Gpea040Ger' OPERATION 7 ACCESS 0	// "Gerar Verbas"
Else
	If cPaisLoc == "PAR"
		lImpRCM := .T.
	EndIf
	Private lImpPD := .T.
EndIf

// CONDICAO PARA IGNORAR CARGA DE VERBAS DURANTE LEITURA AUTOMATICA DE TODAS AS MENUDEF'S DO MODULO
If FunName() == "GPEA040" .OR. FunName() == "GPEA040M"
	//INICIALIZA AS VERBAS PADROES
	If cPaisLoc == "PAR"
		If lImpRCM
			If FindFunction("fCargRCM")
				MsAguarde( { || fCargRCM() } , OemToAnsi(STR0369) )	// "Carregando as Verbas Padrões"
			EndIf
		EndIf
	EndIf
	If lImpPD
		If FindFunction("fCarPD")
			MsAguarde( { || fCarPD() } , OemToAnsi(STR0113) )	// "Carregando as Verbas Padrões"
		EndIf
	EndIf
EndIf

Return aRotina

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ?
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±?
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±?
±±³Funo    ³ModelDef    ?Autor ?MOHANAD ODEH          ?Data ?19/03/13 ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±?
±±³Descrio ³Modelo de dados e Regras de Preenchimento para o Cadastro de  ³±?
±±?         ³Verbas                                                        ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±³Sintaxe   ?ModelDef()                                                   ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±³Parametros?                                                             ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±?Uso      ?                                                             ³±?
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±?
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±?
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß?*/
Static Function ModelDef()
// Cria a estrutura a ser usada no Modelo de Dados
Local oStruSRV := FWFormStruct(1, 'SRV')
Local oModel

Local bPosValid	:= {|oMdl| Gpea040TudOk(oMdl)}


If MV_MODFOL == "1" .Or. cPaisLoc == "ARG"
	oStruSRV:SetProperty("RV_DESMEMO", MODEL_FIELD_VALID, { |oModel| FFILTROSRV(oModel) })
	oStruSRV:SetProperty("RV_DESMEMO", MODEL_FIELD_INIT, {|oMdl| GP040MEMO(oMdl)})
	oStruSRV:SetProperty("RV_DESMSEG", MODEL_FIELD_INIT, {|oMdl| DESMSEG(oMdl)})
	oStruSRV:AddTrigger( "RV_CODMSEG", "RV_DESMSEG", {|| .T. }, {|oMdl| DESMSEG(oMdl) }  )
EndIf

If cPaisLoc == "BRA"
	oStruSRV:SetProperty( "RV_EMPCONS", MODEL_FIELD_WHEN, { |oModel| FWhenEmpCons(oModel) } )
EndIf

// Cria o objeto do Modelo de Dados
oModel := MPFormModel():New('GPEA040', /*bPreValid*/ , bPosValid, /*bCommit*/, /*bCancel*/)

// Adiciona ao modelo uma estrutura de formulário de edição por campo
oModel:AddFields('SRVMASTER', /*cOwner*/, oStruSRV, /*bPreValidacao*/, /*bPosValidacao*/, /*bCarga*/)

// Adiciona a descricao do Modelo de Dados
oModel:SetDescription(OemToAnsi(STR0009))  // "Cadastro de Verbas"

// Adiciona a descricao do Componente do Modelo de Dados
oModel:GetModel('SRVMASTER'):SetDescription(OemToAnsi(STR0009)) // "Verbas"

Return oModel

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ?
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±?
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±?
±±³Funo    ³ViewDef     ?Autor ?MOHANAD ODEH          ?Data ?19/03/13 ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±?
±±³Descrio ?Visualizador de dados do Cadastro de Verbas                  ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±³Sintaxe   ?ViewDef()                                                    ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±³Parametros?                                                             ³±?
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±?
±±?Uso      ?                                                             ³±?
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±?
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±?
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß?*/
Static Function ViewDef()
Local oModel
Local oStruSRV
Local oView

// Cria o objeto de View
oView := FWFormView():New()

oModel   := FWLoadModel('GPEA040')
oStruSRV := FWFormStruct(2, 'SRV')

// Define qual o Modelo de dados será utilizado
oView:SetModel(oModel)

If SRV->(ColumnPos('RV_INCOP')) > 0 .And. cVersGPE < "9.0"
	oStruSRV:RemoveField('RV_INCOP')
	oStruSRV:RemoveField('RV_TETOP')
EndIf

// Adiciona no nosso View um controle do tipo FormFields(antiga enchoice)
oView:AddField('VIEW_SRV', oStruSRV, 'SRVMASTER')

oView:CreateHorizontalBox('SUPERIOR', 100) // 20

oView:SetOwnerView('VIEW_SRV', 'SUPERIOR')

// Liga a identificacao do componente
oView:EnableTitleView('VIEW_SRV', OemToAnsi(STR0009)) // "Cadastro de Verbas"

Return oView

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Funo    ³fFiltroSRV  ³ Autor ³Reginaldo P. Lyra      ³ Data ³04/11/2005³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrio ³Validacao evento WHEN campo RV_DESMEMO                        ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fFiltroSRV()										      	               ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³                                                              ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Gpea040()                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function fFiltroSRV(oModel)
Local aRetFiltro
Local cTabMestre := "SRV"
Local cConteudo
Local aFilterExp := {}
aAdd( aFilterExp , { "FILTRO_ALS" , "SRV"     	, NIL , NIL    } )
aAdd( aFilterExp , { "FILTRO_PRG" , FunName() 	, NIL , NIL    } )

cConteudo  := oModel:GetValue("RV_DESMEMO")
aRetFiltro := FilterBuildExpr( aFilterExp )
cExpFiltro := GpFltAlsGet( aRetFiltro , cTabMestre )
If !Empty(cExpFiltro)
	oModel:LoadValue("RV_DESMEMO", cExpFiltro)
	oModel:LoadValue("RV_CODMEMO", aRetFiltro[1,3])
ElseIf Len( aRetFiltro ) > 0 .Or. !GpFltBtnOk()
	oModel:LoadValue("RV_DESMEMO", cConteudo)
Else
	oModel:LoadValue("RV_DESMEMO", "")
EndIF

Return .T.

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun??o    ³Gpea040ChkDel	³Autor³Marinaldo de Jesus ³ Data ³30/08/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri??o ³Verificar se uma Verba Pode ser Excuida                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA040		                                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Gpea040ChkDel( cAlias , nReg , nOpcx )
Local aArea		:= GetArea()
Local aAreas	:= {}
Local aLog		:= {}
Local aLogTitle := {}
Local cFilSRV	:= xFilial("SRV")
Local cConteudo	:= ""
Local cChave	:= ""
Local cChaveAux := ""
Local cArqInd	:= ""
Local cCondDel	:= ""
Local cVerba	:= SRV->RV_COD
Local cCodFol	:= SRV->RV_CODFOL
Local cUseAlias	:= ""
Local cMsg		:= ""
Local lDelOk	:= .T.
Local lGeraLog	:= .F.
Local lRet		:= .T.
Local nArea		:= 0.00
Local nAreas	:= 0.00
Local uRet		:= NIL

Private cFilAux	:= ""
nOpcAx	:= nOpcx
If SR1->(FIELDPOS("R1_PD")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SR1->( GetArea() ), 'R1_PD == "'+cVerba+'"', "R1_PD" } )
	Else
		aAdd( aAreas, { SR1->( GetArea() ),'R1_FILIAL == cFilAux .and. R1_PD == "'+cVerba+'"',"R1_FILIAL + R1_PD"} )
	EndIf
EndIf

If SRC->(FIELDPOS("RC_PD")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SRC->( GetArea() ), 'RC_PD == "'+cVerba+'"', "RC_PD" } )
	Else
		aAdd( aAreas, { SRC->( GetArea() ),'RC_FILIAL == cFilAux .and. RC_PD == "'+cVerba+'"',"RC_FILIAL + RC_PD"} )
	EndIf
EndIf

If SRD->(FIELDPOS("RD_PD")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SRD->( GetArea() ),'RD_PD == "'+cVerba+'"', "RD_PD" } )
	Else
		aAdd( aAreas, { SRD->( GetArea() ),'RD_FILIAL == cFilAux .and. RD_PD == "'+cVerba+'"',"RD_FILIAL + RD_PD"} )
	EndIf
EndIf

If SRI->(FIELDPOS("RI_PD")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SRI->( GetArea() ),'RI_PD == "'+cVerba+'"', "RI_PD" } )
	Else
		aAdd( aAreas, { SRI->( GetArea() ),'RI_FILIAL == cFilAux .and. RI_PD == "'+cVerba+'"',"RI_FILIAL + RI_PD"} )
	EndIf
EndIf

If SRK->(FIELDPOS("RK_PD")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SRK->( GetArea() ),'RK_PD == "'+cVerba+'"', "RK_PD" } )
	Else
		aAdd( aAreas, { SRK->( GetArea() ),'RK_FILIAL == cFilAux .and. RK_PD == "'+cVerba+'"',"RK_FILIAL + RK_PD"} )
	EndIf
EndIf


If SRR->(FIELDPOS("RR_PD")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SRR->( GetArea() ),'RR_PD == "'+cVerba+'"', "RR_PD" } )
	Else
		aAdd( aAreas, { SRR->( GetArea() ),'RR_FILIAL == cFilAux .and. RR_PD == "'+cVerba+'"',"RR_FILIAL + RR_PD"} )
	EndIf
EndIf

If SRZ->(FIELDPOS("RZ_PD")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SRZ->( GetArea() ),'RZ_PD == "'+cVerba+'"', "RZ_PD" } )
	Else
		aAdd( aAreas, { SRZ->( GetArea() ),'RZ_FILIAL == cFilAux .and. RZ_PD == "'+cVerba+'"',"RZ_FILIAL + RZ_PD"} )
	EndIf
EndIf

If SRT->(FIELDPOS("RT_VERBA")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SRT->( GetArea() ),'RT_VERBA == "'+cVerba+'"', "RT_VERBA" } )
	Else
		aAdd( aAreas, { SRT->( GetArea() ),'RT_FILIAL == cFilAux .and. RT_VERBA == "'+cVerba+'"',"RT_FILIAL + RT_VERBA"} )
	EndIf
EndIf

If SP9->(FIELDPOS("P9_CODFOL")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SP9->( GetArea() ),'P9_CODFOL == "'+cVerba+'"', "P9_CODFOL" } )
	Else
		aAdd( aAreas, { SP9->( GetArea() ),'P9_FILIAL == cFilAux .and. P9_CODFOL == "'+cVerba+'"',"P9_FILIAL + P9_CODFOL"} )
	EndIf
EndIf

If SPB->(FIELDPOS("PB_PD")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SPB->( GetArea() ),'PB_PD == "'+cVerba+'"', "PB_PD" } )
	Else
		aAdd( aAreas, { SPB->( GetArea() ),'PB_FILIAL == cFilAux .and. PB_PD == "'+cVerba+'"',"PB_FILIAL + PB_PD"} )
	EndIf
EndIf

If SPL->(FIELDPOS("PL_PD")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SPL->( GetArea() ),'PL_PD == "'+cVerba+'"', "PL_PD" } )
	Else
		aAdd( aAreas, { SPL->( GetArea() ),'PL_FILIAL == cFilAux .and. PL_PD == "'+cVerba+'"',"PL_FILIAL + PL_PD"} )
	EndIf
EndIf

// SRM, RCM, RG7, RGB, SR8, RG1 e RCN
If SRM->(FIELDPOS("RM_VERBA")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SRM->( GetArea() ),'RM_VERBA == "'+cVerba+'"', "RM_VERBA" } )
	Else
		aAdd( aAreas, { SRM->( GetArea() ),'RM_FILIAL == cFilAux .and. RM_VERBA == "'+cVerba+'"',"RM_FILIAL + RM_VERBA"} )
	EndIf
EndIf

If RCM->(FIELDPOS("RCM_PD")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { RCM->( GetArea() ),'RCM_PD == "'+cVerba+'"', "RCM_PD" } )
	Else
		aAdd( aAreas, { RCM->( GetArea() ),'RCM_FILIAL == cFilAux .and. RCM_PD == "'+cVerba+'"',"RCM_FILIAL + RCM_PD"} )
	EndIf
EndIf

If AliasInDic("RG7")
	If RG7->(FIELDPOS("RG7_PD")) > 0
		If Empty(cFilSRV)
			aAdd( aAreas, { RG7->( GetArea() ),'RG7_PD == "'+cVerba+'"', "RG7_PD" } )
		Else
			aAdd( aAreas, { RG7->( GetArea() ),'RG7_FILIAL == cFilAux .and. RG7_PD == "'+cVerba+'"',"RG7_FILIAL + RG7_PD"} )
		EndIf
	EndIf
EndIf

If SR8->(FIELDPOS("R8_PD")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SR8->( GetArea() ),'R8_PD == "'+cVerba+'"', "R8_PD" } )
	Else
		aAdd( aAreas, { SR8->( GetArea() ),'R8_FILIAL == cFilAux .and. R8_PD == "'+cVerba+'"',"R8_FILIAL + R8_PD"} )
	EndIf
EndIf

If AliasInDic("RG1")
	If RG1->(FIELDPOS("RG1_PD")) > 0
		If Empty(cFilSRV)
			aAdd( aAreas, { RG1->( GetArea() ),'RG1_PD == "'+cVerba+'"', "RG1_PD" } )
		Else
			aAdd( aAreas, { RG1->( GetArea() ),'RG1_FILIAL == cFilAux .and. RG1_PD == "'+cVerba+'"',"RG1_FILIAL + RG1_PD"} )
		EndIf
	EndIf
EndIf

If RCN->(FIELDPOS("RCN_CODIGO")) > 0  .AND. RCN->(FIELDPOS("RCN_OBRIGA")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { RCN->( GetArea() ),'RCN_CODIGO == "'+cCodFol+'" .AND. RCN_OBRIGA == "1"', "RCN_CODIGO" } )
	Else
		aAdd( aAreas, { RCN->( GetArea() ),'RCN_FILIAL == cFilAux .AND. RCN_CODIGO == "'+cCodFol+'" .AND. RCN_OBRIGA == "1" ',"RCN_FILIAL + RCN_CODIGO"} )
	EndIf
EndIf

If AliasInDic("RGB")
	If RGB->(FIELDPOS("RGB_PD")) > 0
		If Empty(cFilSRV)
			aAdd( aAreas, { RGB->( GetArea() ), 'RGB_PD == "'+cVerba+'"', "RGB_PD" } )
		Else
			aAdd( aAreas, { RGB->( GetArea() ), 'RGB_FILIAL == cFilAux .and. RGB_PD == "'+cVerba+'"', "RGB_FILIAL + RGB_PD" } )
		EndIf
	EndIf
EndIf

If SRQ->(FIELDPOS("RQ_VERBADT")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SRQ->( GetArea() ), 'RQ_VERBADT == "'+cVerba+'"', "RQ_VERBADT" } )
	Else
		aAdd( aAreas, { SRQ->( GetArea() ), 'RQ_FILIAL == cFilAux .and. RQ_VERBADT == "'+cVerba+'"', "RQ_FILIAL + RQ_VERBADT"} )
	EndIf
EndIf

If SRQ->(FIELDPOS("RQ_VERBFOL")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SRQ->( GetArea() ), 'RQ_VERBFOL == "'+cVerba+'"', "RQ_VERBFOL"} )
	Else
		aAdd( aAreas, { SRQ->( GetArea() ), 'RQ_FILIAL == cFilAux .and. RQ_VERBFOL == "'+cVerba+'"', "RQ_FILIAL + RQ_VERBFOL"} )
	EndIf
EndIf

If SRQ->(FIELDPOS("RQ_VERBFER")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SRQ->( GetArea() ), 'RQ_VERBFER == "'+cVerba+'"', "RQ_VERBFER"} )
	Else
		aAdd( aAreas, { SRQ->( GetArea() ), 'RQ_FILIAL == cFilAux .and. RQ_VERBFER == "'+cVerba+'"', "RQ_FILIAL + RQ_VERBFER"} )
	EndIf
EndIf

If SRQ->(FIELDPOS("RQ_VERB131")) > 0
	If Empty(cFilSRV)
			aAdd( aAreas, { SRQ->( GetArea() ), 'RQ_VERB131 == "'+cVerba+'"', "RQ_VERB131"} )
	Else
			aAdd( aAreas, { SRQ->( GetArea() ), 'RQ_FILIAL == cFilAux .and. RQ_VERB131 == "'+cVerba+'"', "RQ_FILIAL + RQ_VERB131"} )
	EndIf
EndIf

If SRQ->(FIELDPOS("RQ_VERB132")) > 0
	If Empty(cFilSRV)
			aAdd( aAreas, { SRQ->( GetArea() ), 'RQ_VERB132 == "'+cVerba+'"', "RQ_VERB132"} )
	Else
			aAdd( aAreas, { SRQ->( GetArea() ), 'RQ_FILIAL == cFilAux .and. RQ_VERB132 == "'+cVerba+'"', "RQ_FILIAL + RQ_VERB132"} )
	EndIf
EndIf

If SRQ->(FIELDPOS("RQ_VERBPLR")) > 0
	If Empty(cFilSRV)
		aAdd( aAreas, { SRQ->( GetArea() ), 'RQ_VERBPLR == "'+cVerba+'"', "RQ_VERBPLR"} )
	Else
		aAdd( aAreas, { SRQ->( GetArea() ), 'RQ_FILIAL == cFilAux .and. RQ_VERBPLR == "'+cVerba+'"', "RQ_FILIAL + RQ_VERBPLR"} )
	EndIf
EndIf

IF ( lDelOk := MsgYesNo(	OemToAnsi(	STR0025 + ;	//"O Sistema Agora Ira efetuar a Verificacao para ver se a Verba Selecionado para"
										CRLF	+ ;
										STR0026	+ ;	//"Exclus?o esta sendo utilizado. A verifica??o pode ser demorada !!"
										CRLF	+ ;
										CRLF	+ ;
										STR0027   ;	//"Confirma a exclus?o da Verba?"
					   				 ),;
			 				OemToAnsi( STR0028 ) ;	//"Aten??o"
						);
	)

	lGeraLog := MsgNoYes( OemToAnsi( STR0034 ), OemToAnsi( STR0028 )  ) //"Deseja gerar Log?"###//"Aten??o"

	Begin Sequence
		nAreas := Len( aAreas )
		For nArea := 1 To nAreas
			cFilAux		:= xFilial( aAreas[ nArea , 1 , 1 ] )
			cFilAux		:= IF( !Empty( cFilAux ) , cFilAux , IF( Empty( cFilAux ) , cFilAux , cFilSRV ) )
			cCondDel	:= aAreas[ nArea , 2 ]
			cArqInd 	:= CriaTrab( "" , .F. )
			cChave		:= aAreas[ nArea , 3 ]
			If Substr(aAreas[nArea,2], 1,3) == "RCN" .AND. cPaisLoc == "COS"
				cChaveAux   := If( Empty(cFilSRV), cCodFol, cFilAux + cCodFol )
			Else
				cChaveAux   := If( Empty(cFilSRV), cVerba, cFilAux + cVerba)
			EndIf
			IndRegua( aAreas[ nArea , 1 , 1 ] , cArqInd , cChave , NIL , cCondDel , STR0029 ) //"Criando Indice no Servidor..."
			IF !( lDelOk := !( aAreas[ nArea , 1 , 1 ] )->( dbSeek( cChaveAux , .F. ) ) )
				IF !( lGeraLog )
					cUseAlias := aAreas[ nArea , 1 , 1 ]
					Break
				EndIF
				IF Empty( aLog )
					aAdd( aLog , STR0030 + cFilAux + "/" + cVerba + STR0031 ) //"A Verba( Filial/Codigo ): "###" nao pode ser Excluida pois esta sendo utilizado nos arquivos abaixo"
					aAdd( aLog , "" )
					aAdd( aLog , "" )
				EndIF
				While ( aAreas[ nArea , 1 , 1 ] )->( !Eof() .and. &( cChave ) == cChaveAux )
					cConteudo := ( aAreas[ nArea , 1 , 1 ] )->( &( cChave ) )
					aAdd( aLog , aAreas[ nArea , 1 , 1 ] + Space( 05 ) + ( aAreas[ nArea , 1 , 1 ] )->( StrZero( Recno() , 10 )  + Space( 01 ) + AllTrim( &( IndexKey() ) ) + "/" + cConteudo ) )
					( aAreas[ nArea , 1 , 1 ] )->( dbSkip() )
				End While
			EndIF
			cArqInd := ( cArqInd + OrdBagExt() )
			IF File( cArqInd )
				fErase( cArqInd )
			EndIF
			RetIndex( aAreas[ nArea , 1 , 1 ] )
			RestArea( aAreas[ nArea , 1 ] )
		Next nAreas

	End Sequence

	IF ( lGeraLog .and. !( lDelOk := Empty( aLog ) ) )
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Gera e Mostra o Log 										  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				10        20       30        40        50        60        70        80        90       100       110...
		1234567890123456789023456789012345678901234567890123456789012345678901234567890123456789012345678901234567890...
		Arquivo Registro   Conteudo
		XXX     9999999999 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX*/
		aAdd( aLogTitle , STR0032 )	//"Arquivo Registro   Chave/Conteudo"
		MsAguarde( { || fMakeLog( { aLog } , aLogTitle , NIL , NIL , FunName() , STR0033 ) } , STR0033 ) //"Log de Ocorrencias na Exclusao de Verbas"
	ElseIF !( lDelOk )
		cMsg := STR0018 + STR0019 + cUseAlias	//"A verba a ser excluida est  presente no"###"arquivo "
		cMsg += CRLF
		cMsg += STR0022							// "At? que as refer?ncias a esta verba sejam eliminadas,"
		cMsg += CRLF
		cMsg += STR0023							//"a mesma n?o pode ser excluida."
		MsgInfo( OemToAnsi( cMsg ) )
	Else
		//EXECUTA A DELECAO
		FWExecView(STR0009 ,'GPEA040', MODEL_OPERATION_DELETE , ,{|| .T. }, , , , , , , )
	EndIF

EndIF

RestArea(aArea)

Return(uRet)

// BLOCO RAIS
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³GP040CodRAIS	 ºAutor  ³Mauricio MR         º Data ³ 13/01/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Monta Tela de Escolha de Opcoes para o campo RV_RAIS.            º±±
±±º         ³                                                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ SX3                                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GP040CodRAIS(l1Elem)
Local cTitulo		:= ""
Local cMvPar
Local aRais			:= {}
Local aDescRais		:= {}
Local cMvParRais	:= ""
Local lRet			:= .T.

Static lPassou

l1Elem			:= IF( l1Elem == NIL .and. ValType( l1Elem ) != "L" , .T. , .F. )

CursorWait()

//-- Carrega Opcoes de Codigo de RAIS
GP040LoadRAIS(@aRais, @aDescRais, @cMvParRais)

CursorArrow()

If (f_Opcoes(@cMvPar,cTitulo,aDescRais,cMvParRais,12,49,l1Elem,2,999,.T.))
	VAR_IXB	:= cMvPar
	lRet:= .T.
Else
	lRet:= .F.
EndIf

Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³GP040LoadRAIS	 ºAutor  ³Mauricio MR         º Data ³ 13/01/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Funcao de Carga das opcoes do campo RV_RAIS.                     º±±
±±º         ³                                                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºATENCAO  ³ NAO ALTERE A ORDEM ou RETIRE as opcoes pois os programas abaixo  º±±
±±º         ³ utilizam a posicao da opcao no array em algoritmos de totalizacaoº±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ GPEA040, GPEM500, GPEM510                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GP040LoadRAIS(aRaisx, aDescRaisx, cMvParx, aCodRaisX, aRetRaisX)
Local nX
Static aRais
Static aCodRais
Static aDescRais
Static cMvParRais
Static aRetRais

If aRais == NIl

	aRais		:= {}
	AADD(aRais,{"A", STR0038,"V"} ) // "Rendimento"
	AADD(aRais,{"B", STR0039,"V"} ) // "1a.Parcela"
	AADD(aRais,{"C", STR0040,"V"} ) // "2a.Parcela"
	AADD(aRais,{"D", STR0041,"V"} ) // "Férias Indenizadas"
	AADD(aRais,{"E", STR0042,"V"} ) // "Horas Extras do Banco de Horas pagas na Rescisão"
	AADD(aRais,{"F", STR0043,"Q"} ) // "Qtde de meses de referência do valor pago a título de banco de horas"
	AADD(aRais,{"G", STR0044,"V"} ) // "Acréscimo Salarial pago na Rescisão"
	AADD(aRais,{"H", STR0045,"Q"} ) // "Qtde de meses de ref. ao valor do acréscimo salarial"
	AADD(aRais,{"I", STR0046,"V"} ) // "Outras acréscimos pagos em Rescisão"
	AADD(aRais,{"J", STR0047,"Q"} ) // "Qtde de meses de ref. ao valor de outros acréscimo salarial"
	AADD(aRais,{"K", STR0048,"V"} ) // "Valor da Multa FGTS"
	AADD(aRais,{"L", STR0049,"V"} ) // "Contribuição Associativa 1ª Ocorrência"
	AADD(aRais,{"M", STR0050,"V"} ) // "Contribuição Associativa 2ª Ocorrência"
	AADD(aRais,{"N", STR0051," "} ) // "Não considerar para a RAIS"
	AADD(aRais,{"O", STR0052,"V"} ) // "Contribuição Sindical"
	AADD(aRais,{"P", STR0053,"V"} ) // "Contribuição Assistencial"
	AADD(aRais,{"Q", STR0054,"V"} ) // "Contribuição Confederativa"
	AADD(aRais,{"R", STR0055,"H"} ) // "Horas Efetivamente Trabalhadas"
	AADD(aRais,{"S", STR0056,"V"} ) // "Aviso Prévio Indenizado"
	AADD(aRais,{"T", STR0059,"H"} ) // "Horas Extras Trabalhadas"

	aDescRais	:= {}
	aCodRais	:= {}
	cMvParRais	:= ""
	aRetRais	:= {}

	For nX:=1 To Len(aRais)
		AADD( aDescRais, aRais[nX, 1] + "-" + aRais[nX, 2] )
		cMvParRais += aRais[nX, 1]+"-"
		AADD( aCodRais, aRais[nX, 1] )
		AADD(aRetRais, aRais[nX, 3] )
	Next nX

Endif

If aRaisX <> NIL
	aRaisX		:= aClone(aRais)
Endif

If aDescRaisX <> NIL
	aDescRaisX	:= aClone(aDescRais)
Endif

If cMvParX <> NIL
	cMvParX		:= cMvParRais
Endif

If aCodRaisX <> NIL
	aCodRaisX	:= aCodRais
Endif

If aRetRaisX <> NIL
	aRetRaisX	:= aRetRais
Endif

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³GP040VRAIS		 ºAutor  ³Mauricio MR         º Data ³ 13/01/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Funcao VALID do campo  RV_RAIS.                                  º±±
±±º         ³                                                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ SX3                                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GP040VRAIS()
Local lRet			:= .F.
Local cMvPar		:= &(Alltrim(ReadVar()))
Local aCodRais		:= {}
Local cAuxCont		:= ""
Local cConteudo		:= If(Valtype(cMvPar) == Nil, "", cMvPar)
Local nTamRAIS		:= TamSX3("RV_RAIS")[1]
Local nx			:= 0
Local uMvRet		:= Alltrim(ReadVar())
Local cMsg			:= ""
Local oModelGrid	:= FwModelActive()
Local oModel  		:= oModelGrid:GetModel('SRVMASTER')

//-- CARREGA OPCOES DE CODIGO DE RAIS
GP040LoadRAIS(NIL, NIL, NIL, @aCodRais)

//-- "HIGIENIZA" O CONTEUDO DO CAMPO
fCleanOpc(nTamRAIS, @cConteudo, aCodRais)

cAuxCont:= StrTran(StrTran(cConteudo, "-",""), "*","")

//-- VERIFICA O RETORNO
If (cMvPar <> Nil .and. cMvParRais <> Nil)

	For nx := 0 to Len(cAuxCont)
		If !(SUBSTR(cAuxCont, nx, 1) $ cMvParRais)
			Return (lRet)
		EndIf
	Next nx

    //-- Verifica o conteudo "higienizado'
    If (("N" $ cAuxCont) .AND. (Len(cAuxCont) > 1))
    	cMsg 		:= STR0057 //"A opção 'N' não pode ser escolhida com outras incidências de RAIS"
		cMsg 		+= CRLF
		MsgInfo(OemToAnsi(cMsg))
		lRet		:= .F.
	Else
		If Empty(cAuxCont)
			cConteudo	:= "N-"
			//-- Substitui o conteudo do campo pelo conteudo "higienizado"
			cMvPar	:= cConteudo
			lRet	:= .T.
 		Else
   			//-- Substitui o conteudo do campo pelo conteudo "higienizado"
			cMvPar	:= cConteudo
			lRet	:= .T.
	    Endif
        fCleanOpc(nTamRAIS, @cConteudo, aCodRais)
    Endif
	//-- ATUALIZA O CONTEUDO DA VARIAVEL
	oModel:LoadValue('RV_RAIS', cMvPar)
Endif

Return (lRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun??o    ³Gpea040TudOk³ Autor ³Tatiane Matias         ³ Data ³22/06/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri??o ³Validacao dos campos Limite Ate de horas e valores.           ³
³          ³Os campos Limite Ate de horas e valores nao pode ser          ³
³          ³inferior aos campos horas e valores contidos no campo De.     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Gpea040TudOk( )										      	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³                                                              ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Gpea040Mnt()                                                  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Gpea040TudOk(oModelGrid, lRotRJG)

Local cEFDAviso := If(cPaisLoc == 'BRA' .AND. Findfunction("fEFDAviso"), fEFDAviso(), "0")			//Se nao encontrar este parametro apenas emitira alertas
Local aFilInTaf	:= {}
Local aArrayFil := {}
Local aTpAlt	:= {}
Local aDados	:= {}
Local aEvent	:= {}
Local nFil		:= 0
Local cIdTbRub	:= ""
Local cStatus	:= "-1"
Local cXml		:= ""
Local cMsgIncon	:= ""
Local cOpc		:= ""
Local cOpc1		:= ""
Local aErros	:= {}
Local cFilEnv	:= ""
Local cCampos	:= ""
Local cMsg		:= ""
Local lTudoOK 	:= .T.
Local lSemFilSRV:= .F.
Local lGeraCod	:= .F.
Local lAviso	:= isBlind()
Local lOrgPb	:= SuperGetMv("MV_ORGPB",,.F.)
Local cIncIRF	:= ""
Local lIncIRF4	:= .F.
Local lVldIR138 := .T.
Local lVldIRDt	:= .F.
Local cAliasRJ8 := "RJ8"
Local cChave	:= ""
Local cMsgRJE	:= ""
Local lAdmPubl	:= .F.
Local aInfos	:= {}
Local cFilEmp	:= ""
Local dDtGer	:= Date()
Local cHrGer	:= Time()
Local lRet		:= .T.
Local cRetfNew	:= ""
Local cRetfRJE	:= ""
Local cRetKey	:= ""
Local cOperNew 	:= ""
Local cOperRJE	:= "I"
Local cRetfNew	:= ""
Local cStatNew	:= ""
Local lNovoRJE	:= .F.
Local nOpcao 	:= 3
Local nRecRJE 	:= 0
Local lS1000 	:= .F.
Local cAliasRJ8 := "RJ8"
Local cChave	:= ""
Local nHoraInicio := 0
Local cStatRJ7	:= .F.
Local cAliasSRV	:= Nil
Local cComp1010	:= Left(dToS(dDatabase), 6)

Local aProcRJG	:= {}
Local lIncCP	:= .F.
Local lIncIRRF	:= .F.
Local lIncFGTS	:= .F.
Local lIncSind	:= .F.
Local lFaltaCP	:= .F.
Local lFaltaIR	:= .F.
Local lFaltaFG	:= .F.
Local lFaltaSi	:= .F.
Local cMsgProc	:= ""

Local aSM0    	:= FWLoadSM0(.T.,,.T.)
Local oModel  	:= oModelGrid:GetModel('SRVMASTER')
Local oGrid		:= Nil
Local cMFilial	:= oModel:GetValue('RV_FILIAL')

Local lAchouRCH := .T.
Local lContinua := .T.
Local cAliasQry	:= GetNextAlias()
Local cFilRCJ   := "%" + fwjoinfilial("RCH","RCJ") + "%"
Local cFilSRV   := xFilial("RCH", SRV->RV_FILIAL)
Local cPerRCH   := Substr(MesAno(dDatabase),1,4)+'12'
Local aLogs	    := {}

Local oButton1
Local oButton2
Local oButton3
Local oGroup1
Local oPanel1
Local oSay1
Local oSay2
Local oSay3
Local oSay4
Local oSay5
Local oDlg

Default lRotRJG	:= .F.

Private cGpeAmbe	:= ""
Private lIntegra	:= IIf( cPaisLoc == 'BRA' .And. FindFunction("fVersEsoc"), fVersEsoc( "S1010", .T., /*aRetGPE*/, /*aRetTAF*/, @cVersEnvio, @cVersGPE , , ,@cGpeAmbe ), .T.)

If lRotRJG
	cAliasSRV	:= "SRV"
	oGrid     	:= oModelGrid:GetModel("RJGDETAIL")
EndIf

nHoraInicio := Seconds()
nOpcAx:= oModelGrid:GetOperation()

	If !(oModelGrid:GetOperation() == 5) // Quando nao for exclusao, ele valida os campos da tela

		If Empty(oModel:GetValue('RV_TIPO')) .AND. !( cPaisLoc $ "RUS*CHI" )
			Help(" ", 1, "Help",, OemToAnsi(STR0209), 1, 0) // "O campo Tipo Verba deve ser preenchido!"
			lTudoOK := .F.
		EndIf

		IF (oModel:GetValue('RV_VLIMATE') < oModel:GetValue('RV_VLIMDE'))
			Help(" ", 1, "Help",, OemToAnsi(STR0035), 1, 0) // "Valor Ate nao pode ser menor que o Valor De"
			lTudoOK := .F.
		ENDIF

		IF lTudoOK  .AND. (oModel:GetValue('RV_COD') == oModel:GetValue('RV_CODMSEG'))
			Help(" ", 1, "Help",, OemToAnsi(STR0345), 1, 0) //"A verba não deve ter ela própria como verba do mês seguinte."
			lTudoOK := .F.
		ENDIF

		IF lTudoOK  .AND. (oModel:GetValue('RV_RLIMATE') < oModel:GetValue('RV_RLIMDE'))
			Help(" ", 1, "Help",, OemToAnsi(STR0036), 1, 0) //"Referencia Ate nao pode ser menor que a Referencia De"
			lTudoOK := .F.
		ENDIF

		IF lTudoOK  .AND. !(oModel:GetValue('RV_TIPOCOD') $ "3/4") .AND. (oModel:GetValue('RV_IMPRIPD') <> "1" .AND. !Empty(oModel:GetValue('RV_IMPRIPD')))
			Help(" ", 1, "Help",, OemToAnsi(STR0037), 1, 0) //"A opcao de impressao da verba so pode ser alterada quando o tipo da verba for base."
			lTudoOK := .F.
		ENDIF

		If lTudoOK .And. !(cPaisLoc $ "RUS|PER") .And. !Empty( oModel:GetValue( 'RV_FERSEG' ) )
			If Alltrim(oModel:GetValue('RV_COD')) == Alltrim(oModel:GetValue('RV_FERSEG'))
				Help(" ", 1, "Help",, OemToAnsi(STR0290), 1, 0) // O campo V.Dif.Fer não deve ser idêntico a Verba ao qual este cadastro se refere!
				lTudoOK := .F.
			EndIf
		EndIf

		If lTudoOK .And. cPaisLoc == "BRA" .And. oModel:GetValue('RV_COMPL_') == 'S' .and. Empty(oModel:GetValue('RV_CODCOM_'))
			Help(" ", 1, "Help",, OemToAnsi(STR0361), 1, 0) //"Verba configurada para Dissídio Retroativo! Obrigatório o preenchimento da verba para dissídio."
			lTudoOK := .F.
		EndIf

		If lTudoOK .And. cPaisLoc == "BRA" .And. oModel:GetValue('RV_COD') $ '997*998*999' 
			If ( !Empty(oModel:GetValue('RV_MEDFER')) .and. AllTrim(oModel:GetValue('RV_MEDFER')) <> "N") .or. ( !Empty(oModel:GetValue('RV_MEDAVI')) .and. AllTrim(oModel:GetValue('RV_MEDAVI')) <> "N") .or. ( !Empty(oModel:GetValue('RV_MED13')) .and. AllTrim(oModel:GetValue('RV_MED13')) <> "N")
				Help(" ", 1, "Help",, OemToAnsi(STR0407), 1, 0) //"Os codigos 997, 998 e 999 são reservados para totalização de médias e não devem ser utilizadas em verbas que possuam incidência para média."
				lTudoOK := .F.
			EndIf
		EndIf

		If lTudoOK
			If cPaisLoc == "BRA" .and. cEFDAviso <> "2"
				dbSelectArea("SX3")
				dbSetOrder(2)
				dbGoTop()

				If Empty(oModel:GetValue('RV_NATUREZ'))
					// Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
					SX3->(msSeek("RV_NATUREZ" ))
					cCampos += X3Titulo() + CRLF
				EndIf

				If cVersEnvio <= '2.3' .And. (Empty(oModel:GetValue('RV_PERC')) .Or. Empty(oModel:GetValue('RV_DSRHE')) .Or.;
					 Empty(oModel:GetValue('RV_MED13')) .Or. Empty(oModel:GetValue('RV_MEDFER')) .Or. Empty(oModel:GetValue('RV_MEDAVI')))
					// Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
					If Empty(oModel:GetValue('RV_PERC'))
						SX3->(msSeek("RV_PERC" ))
						cCampos += X3Titulo() + CRLF
					EndIf
					If Empty(oModel:GetValue('RV_DSRHE'))
						SX3->(msSeek("RV_DSRHE" ))
						cCampos += X3Titulo() + CRLF
					EndIf
					If Empty(oModel:GetValue('RV_MED13'))
						SX3->(msSeek("RV_MED13" ))
						cCampos += X3Titulo() + CRLF
					EndIf
					If Empty(oModel:GetValue('RV_MEDFER'))
						SX3->(msSeek("RV_MEDFER" ))
						cCampos += X3Titulo() + CRLF
					EndIf
					If Empty(oModel:GetValue('RV_MEDAVI'))
						SX3->(msSeek("RV_MEDAVI" ))
						cCampos += X3Titulo() + CRLF
					EndIf
				EndIf

				If !Empty(cCampos)
					cMsg := OemToAnsi(STR0210) + CRLF
					If cEFDAviso == "0"
						cMsg+= OemtoAnsi(STR0211) + CRLF + CRLF + cCampos		//"não será impeditivo para a gravação da verba."
						MsgInfo(cMsg, OemToAnsi(STR0017))
					Else
						cMsg+= OemtoAnsi(STR0212)+ CRLF + CRLF + cCampos		//"e será necessário o preenchimento dos mesmos para efetivar a gravação dos dados."
						lTudoOk := .F.
						Help("",1,OemtoAnsi(STR0017),,cMsg,1,0)	//"Campo nao preenchido"
					EndIf
					cCampos := ""
				EndIf

				If lTudoOK .And. ( lInttaf .Or. lMiddleware ) .And. lGp17SRVS .And. !IsInCallStack("GPA936ThA")
					if fGp17SRVEs(,cAliasSRV,@cMsgIncon)
						//-- Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
						If cEFDAviso == "1"
							Help(" ", 1, OemToAnsi(STR0017),, cMsgIncon, 1, 0) //"Atencao" ##
							lTudoOk	:= .F.
						Else
							cCampos += cMsgIncon + CRLF
						EndIf
					EndIf
				EndIf

				If lTudoOK
					If!Empty(oModel:GetValue('RV_NATUREZ')) .And.;
						 ( Empty(oModel:GetValue('RV_INCIRF')) .Or. Empty(oModel:GetValue('RV_INCCP')) .Or. ;
						  Empty(oModel:GetValue('RV_INCFGTS')) .Or. (cVersGPE < '9.0' .And. Empty(oModel:GetValue('RV_INCSIND'))) )
						// Se exibe aviso de inconsistencia
						IF cEFDAviso <> "2"
							// Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
							If cEFDAviso == "1"
								Help(" ", 1, OemToAnsi(STR0017),, OemToAnsi( STR0181 ), 1, 0) //"Atencao" ## "Se o campo Natureza for preenchido os campos "Cd.Inc.CP, Cd.Inc. IRRF, Cd.Inc.FGTS e Cd.Inc.Sind" deverao ser preenchidos."
				   				lTudoOk	:= .F.
							Else
								cCampos += OemToAnsi(STR0181) + CRLF  //"Se o campo Natureza for preenchido os campos "Cd.Inc.CP, Cd.Inc. IRRF, Cd.Inc.FGTS e Cd.Inc.Sind" deverao ser preenchidos."
							EndIf
						EndIf
					EndIf
				EndIf

				If lTudoOK
					cOpc	:= "00*01*11*12*13*14*15*16*21*22*25*26*31*32*34*35*51*91*92*93*94"
					If cVersGPE < '9.0'
						cOpc += "*23*24*61"
					EndIf
					If cVersEnvio >= '2.4'
						cOpc	:= cOpc+"*95*96*97*98"
					EndIf

					If cVersGPE >= '9.0'
						If lVldIR138 := ValidRCC('S138', oModel:GetValue('RV_INCIRF'), 1, 4)
							lVldIRDt := ( oModel:GetValue('RV_INCIRF') $ '0   |1   |15  |35  |44  |55  |78  |81  |82  |83  |91  |92  |93  |94  |95  ')
						EndIf
					Else
						If cVersEnvio >= '2.6.00'
							cOpc1	:= "0   *1   *9   *11  *12  *13  *14  *15  *31  *32  *33  *34  *35  *41  *42  *43  *44  *46  *47  *48  *51  *52  *53  *54  *55  *61  *62  *63  *64  *65  *66  *67  *70  *71  *72  *73  *74  *75  *76  *77  *78  *700 *701 *79  *81  *82  *83  *899 *91  *92  *93  *  94  *95  *9011*9012*9013*9014*9031*9032*9033*9034*9041*9042*9043*9046*9047*9048*9051*9052*9053*9054*9061*9062*9063*9064*9065*9066*9067"
						ElseIf cVersEnvio >= '2.3'
							cOpc1   := "00*01*09*11*12*13*14*15*31*32*33*34*35*41*42*43*44*46*47*51*52*53*54*55*61*62*63*64*70*71*72*73*74*75*76*77*78*79*81*82*83*91*92*93*94*95"
						Else
							cOpc1   := "00*01*11*12*13*14*15*31*32*33*34*35*41*42*43*44*46*47*51*52*53*54*55*61*62*63*64*70*71*72*73*74*75*76*77*78*79*81*82*83*91*92*93*94*95"
						EndIf

						If cVersEnvio >= '2.6.00'
							cIncIRF := oModel:GetValue('RV_INCIRF')
						Else
							cIncIRF := Substr(oModel:GetValue('RV_INCIRF'),1,2)
							If Len((Alltrim(oModel:GetValue('RV_INCIRF'))))> 2
								lIncIRF4 := .T.
							Endif
						Endif
					EndIf

					If !oModel:GetValue('RV_INCCP') $ (cOpc)
						cMsgIncon := OemToAnsi( If(oModel:GetValue('RV_INCCP') $ '23|24|61', STR0401, STR0184) ) // "O conteúdo 23, 24, 61 não pode mais ser usado no Leiaute S-1.0"
						// Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
						If cEFDAviso == "1"
							Help(" ", 1, OemToAnsi(STR0017),, cMsgIncon, 1, 0) //"Atencao" ##
			   				lTudoOk	:= .F.
						Else
							If !Empty(oModel:GetValue('RV_INCCP'))
								Help(" ", 1, OemToAnsi(STR0017),, cMsgIncon, 1, 0) //"Atencao" ##
			   					lTudoOk	:= .F.
							Else
								cCampos += OemToAnsi(STR0184) + CRLF //"Informe um valor valido no campo Cd.Inc.CP!"
							EndIf
						EndIf
					EndIf

					If lTudoOk .and. (cVersGPE < '9.0' .And. !cIncIRF $ (cOpc1) .Or. lIncIRF4) .Or. (cVersGPE >= '9.0' .And. !lVldIR138)
						// Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
						If cEFDAviso == "1"
							Help(" ", 1, OemToAnsi(STR0017),, OemToAnsi( STR0185 ), 1, 0) //"Atencao" ## "Informe um valor valido no campo Cd.Inc. IRRF!"
			   				lTudoOk	:= .F.
						Else
							If !Empty(oModel:GetValue('RV_INCIRF'))
								Help(" ", 1, OemToAnsi(STR0017),, OemToAnsi( STR0185 ), 1, 0) //"Atencao" ## "Informe um valor valido no campo Cd.Inc. IRRF!"
			   					lTudoOk	:= .F.
							Else
								cCampos += OemToAnsi(STR0185) + CRLF //"Informe um valor valido no campo Cd.Inc. IRRF!"
							EndIf
						EndIf
					EndIf

					cOpc := "00*11*12*21*91"
					cOpc += If(cVersGPE >= '9.0', "*92*93", "")
					If lTudoOk .and. !oModel:GetValue('RV_INCFGTS') $ cOpc
						// Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
						If cEFDAviso == "1"
							Help(" ", 1, OemToAnsi(STR0017),, OemToAnsi( STR0186 ), 1, 0) //"Atencao" ## "Informe um valor valido no campo Cd.Inc.FGTS!"
			   				lTudoOk	:= .F.
						Else
							If !Empty(oModel:GetValue('RV_INCFGTS'))
								Help(" ", 1, OemToAnsi(STR0017),, OemToAnsi( STR0186 ), 1, 0) //"Atencao" ## "Informe um valor valido no campo Cd.Inc.FGTS!"
			   					lTudoOk	:= .F.
							Else
								cCampos += OemToAnsi(STR0186) + CRLF //"Informe um valor valido no campo Cd.Inc.FGTS!"
							EndIf
						EndIf
					EndIf

					If lTudoOk .and. !( oModel:GetValue('RV_INCSIND') $ ("00*11*31*91") .Or. (cVersGPE >= '9.0' .And. Empty(oModel:GetValue('RV_INCSIND'))) )
						// Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
						If cEFDAviso == "1"
							Help(" ", 1, OemToAnsi(STR0017),, OemToAnsi( STR0187 ), 1, 0) //"Atencao" ## "Informe um valor valido no campo Cd.Inc.SIND.!"
			   				lTudoOk	:= .F.
						Else
							If !Empty(oModel:GetValue('RV_INCSIND'))
								Help(" ", 1, OemToAnsi(STR0017),, OemToAnsi( STR0187 ), 1, 0) //"Atencao" ## "Informe um valor valido no campo Cd.Inc.SIND.!"
			   					lTudoOk	:= .F.
							Else
								cCampos += OemToAnsi(STR0187) + CRLF //"Informe um valor valido no campo Cd.Inc.SIND.!"
							EndIf
						EndIf
					EndIf

					If lTudoOk .AND. lOrgPb .AND. SRV->(ColumnPos('RV_REMESP')) > 0
						If Empty(oModel:GetValue('RV_REMESP'))
							Help(" ", 1, OemToAnsi(STR0017),, OemToAnsi(STR0336), 1, 0) //"Atencao" ## Caso parâmetro MV_ORGPB estiver habilitado, o preenchimento do campo RV_REMESP é obrigatório."
			   				lTudoOk	:= .F.
						Endif
					Endif

				EndIf

				If lTudoOk .And. !Empty(cCampos)
					// Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
					cMsg := OemToAnsi(STR0213) + CRLF //"Ocorreram as seguintes inconsistências, conforme o conteúdo do parâmetro MV_EFDAVIS, "
					If cEFDAviso == "1"
						cMsg += OemToAnsi(STR0214) //"será necessária a correção  para efetivar a gravação dos dados."
						cMsg += CRLF + CRLF + cCampos
	   					lTudoOk	:= .F.
						Help(" ", 1, OemToAnsi(STR0017),, cMsg, 1, 0)
					Else
						cMsg += OemtoAnsi(STR0211) //"não será impeditivo para a gravação da verba."
						cMsg += CRLF + CRLF + cCampos
						MsgInfo(cMsg, OemToAnsi(STR0017))
					EndIf
				EndIf

			EndIf
		EndIf

        //-----------------------------------------------------------------------
        //| Verificação de período de Dezembro para orientação a respeito da DIRF
        //-----------------------------------------------------------------------
        If lTudoOk .AND. (oModel:GetValue('RV_CODFOL') $ "0006/0007") .AND. (oModel:GetValue('RV_IR') <> SRV->RV_IR)
                
            BeginSql alias cAliasQry
                SELECT 
                    RCH_FILIAL, 
                    RCH_PER, 
                    RCH_PROCES, 
                    RCH_PERSEL, 
                    RCJ_DESCRI 
                FROM  %table:RCH% RCH
                INNER JOIN %table:RCJ% RCJ ON RCJ.RCJ_CODIGO = RCH.RCH_PROCES AND %exp:cFilRCJ%
                WHERE 	   RCH.RCH_ROTEIR = 'FOL'
                AND 	   RCH.RCH_PER = %exp:cPerRCH%
                AND        RCH.RCH_FILIAL=%exp:cFilSRV%
                AND        RCH.%NotDel%
                AND        RCJ.%NotDel%
            EndSql

            If (cAliasQry)->(Eof())
                lAchouRCH := .F.
            Else

                While (cAliasQry)->( !Eof() )

                    If (cAliasQry)->RCH_PERSEL=='2'
                        lAchouRCH := .F.
                        aAdd(aLogs, (cAliasQry)->RCH_FILIAL+' - '+(cAliasQry)->RCH_PER+' - '+;
                                    (cAliasQry)->RCH_PROCES+' - '+(cAliasQry)->RCJ_DESCRI)
                    Endif
                    (cAliasQry)->( dbSkip() )
                EndDo
            EndIf


            If !lAchouRCH

                DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0095) FROM 000, 000  TO 200, 500 COLORS 0, 16777215 PIXEL 

                    @ 000, 000 MSPANEL oPanel1 SIZE 300, 150 OF oDlg COLORS 0, 16777215 RAISED
                    @ 005, 012 GROUP oGroup1 TO 075, 237 PROMPT OemToAnsi(STR0090) OF oPanel1 COLOR 0, 16777215 PIXEL //"Atenção"
                        //"Para maiores informações acerca dos efeitos da Medida Provisória 927 sobre o 13º Salário, clique em 'Abrir Link' para consultar a documentação no TDN"
                    @ 020, 017 SAY oSay1 PROMPT OemToAnsi(STR0408)  SIZE 215, 035 OF oPanel1 COLORS 0, 16777215 PIXEL 
                        //Não foi possível localizar Período de Folha aberto para o mês de Dezembro.
                    @ 028, 017 SAY oSay2 PROMPT OemToAnsi(STR0409)  SIZE 215, 035 OF oPanel1 COLORS 0, 16777215 PIXEL 
                        //"Desse modo, ao alterar o Regime de Folha de Pagamento em mês diferente de Dezembro, a  DIRF deverá ser preenchida manualmente."                    @ 020, 027 SAY oSay3 PROMPT OemToAnsi(STR0410)  SIZE 215, 035 OF oPanel1 COLORS 0, 16777215 PIXEL 

                    @ 045, 017 SAY oSay3 PROMPT OemToAnsi(STR0410)  SIZE 215, 035 OF oPanel1 COLORS 0, 16777215 PIXEL 
                        //"Mais informações no Link:"
                    @ 060, 017 SAY oSay5 PROMPT OemToAnsi(STR0412)  SIZE 215, 035 OF oPanel1 COLORS 0, 16777215 PIXEL 
                        //"Deseja prosseguir com a alteração?"

                    @ 083, 120 BUTTON oButton1 PROMPT OemToAnsi(STR0415) SIZE 037, 012 OF oPanel1 PIXEL//"Abrir Link"
                    @ 083, 160 BUTTON oButton2 PROMPT OemToAnsi(STR0362) SIZE 037, 012 OF oPanel1 PIXEL
                    @ 083, 200 BUTTON oButton3 PROMPT OemToAnsi(STR0001) SIZE 037, 012 OF oPanel1 PIXEL

                    oButton1:bLClicked := {|| ShellExecute("open",OemToAnsi(STR0411),"","",1) }
                        //"https://tdn.totvs.com/pages/releaseview.action?pageId=271167000"
                    oButton2:bLClicked := {|| lContinua:=.F., oDlg:End() }
                    oButton3:bLClicked := {|| oDlg:End() }

                ACTIVATE MSDIALOG oDlg CENTERED

                If lContinua
                    If Len(aLogs)>0

                        If MsgYesNo(OemToAnsi(STR0416), OemToAnsi(STR0090))
                            fMakeLog({aLogs}, {OemToAnsi(STR0413)}, Nil, Nil, "GPEA040RCH",; //"Log dos Períodos"
                                            OemToAnsi(STR0413), "M", "P",, .F.) 	
                        Endif        
                    Endif
                else
                    cMsg    := OemToAnsi(STR0414) // Retorne o campo ao seu conteúdo original.
                    lTudoOK := .F.
                Endif
            Endif
            (cAliasQry)->(dbCloseArea())
        Endif


	EndIf

	//Validar incidência de IR com data de término conforme competência informada/data de transmissão
	If lTudoOk .And. (lIntTaf .Or. lMiddleware) .And. Empty(cMsg) .And. (fTemAlt(oModel) .Or. lRotRJG)
		If !lAviso
			fAlert1010(@cComp1010)
		EndIf
		If !(oModelGrid:GetOperation() == 5) .And. lVldIRDt .And. cComp1010 >= '202105'
			lTudoOk := .F.
			Help(,, "RV_INCIRF",, OemToAnsi(STR0402), 1)	//"A partir do dia 01/05/2021, as verbas não poderão ser aceitas com este código de incidência de IRRF."
		EndIf
	EndIf

	//Primeiro parâmetro da VldRotTab, quais eventos validar {S-1005, S-1010, S-1020}
	If lIntTaf .And. !lMiddleware .And. !VldRotTab({.F.,.T.,.F.}, @aDados,@aEvent)
		Help( " ", 1, OemToAnsi(STR0090),, CRLF + aDados[1] + CRLF + CRLF + OemToAnsi(STR0346) + CRLF + OemToAnsi(STR0347), 1, 0)
		//Atenção # O compartilhamento da tabela (SRV) e (C8R) estão divergentes, altere o modo de acesso através do Configurador. Arquivos (SRV) e (C8R)
		//"O modo de acesso deve ser o mesmo para todas as tabelas envolvidas no processo, são elas: SRV e C8R."
		Return
	EndIf

	If lTudoOK .And. (lIntTaf .Or. lMiddleware) .And. Empty(cMsg) 	.And. ( IIF(FindFunction("fChkFMat"),lTudoOK:=fChkFMat("S-1010"),.T.)) .And. (fTemAlt(oModel) .Or. lRotRJG)
		If !lMiddleware
			//busca da filial matriz
			fGp23Cons(@aFilInTaf, @aArrayFil,@cFilEnv)
		Endif
	    //Tratamento de compartilhamento da tabela SRV
        If !Empty(xFilial("SRV"))
            lGeraCod := .T.
        EndIf
        If lGeraCod
            cIdTbRub := IIF(Empty(M->RV_FILIAL), xFilial("SRV"),M->RV_FILIAL)
        Else
            If cVersEnvio >= "2.3"
                cIdTbRub := cEmpAnt
            Else
                cIdTbRub := ""
            EndIf
        Endif

		if lMiddleware .And. !ChkFile("RJE") .And. !ChkFile("RJ9")
			// Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
			//| Se for 0: Ele avisa do erro e segue mesmo assim (Salva SRV e Não TAF)
			//| Se for 1, ele avisa do erro e bloqueia o cadastro de tudo (Não SRV e Não TAF)
			//| Se for 2, ele não avisa nada (Se tiver erro, salva só SRV / Se não tiver, salva SRV + TAF)
			If cEFDAviso == "0"
				MsgInfo(OemToAnsi( STR0348 ),OemToAnsi(STR0017))
				//"Atencao" ## "Tabelas RJE/RJ9 não encontradas. Execute o UPDDISTR - atualizador de dicionário e base de dados."
			ELSEif cEFDAviso == "1"
				lTudoOk	:= .F.
				CMSG := OemToAnsi( STR0348 )
			endif

		elseif lMiddleware .And. ChkFile("RJE") .And. ChkFile("RJ9")
			// verificar os predecessores - evento S1000
			lS1000 := fVld1000( AnoMes(dDataBase), @cStatus )

			/*
				* 1 - Não enviado - Gravar por cima do registro encontrado
				* 2 - Enviado - Aguarda Retorno - Enviar mensagem em tela e não continuar com o processo
				* 3 - Retorno com Erro - Gravar por cima do registro encontrado
				* 4 - Retorno com Sucesso -?Efetivar a gravação
			*/

			if lS1000 //evento S-1000
				aInfos   := fXMLInfos()

				IF LEN(aInfos) >= 4
					cTpInsc  := aInfos[1]
					lAdmPubl := aInfos[4]
					cNrInsc  := aInfos[2]
				ELSE
					cTpInsc  := ""
					lAdmPubl := .F.
					cNrInsc  := "0"
				ENDIF

				If ( nFilEmp := aScan(aSM0, { |x| x[1] == cEmpAnt .And. X[18] == cNrInsc }) ) > 0
					cFilEmp := aSM0[nFilEmp, 2]
				Else
					cFilEmp := cFilAnt
				EndIf

				// verifica se ja existe o evento s1010 na base de dados
				cChave 	:= cTpInsc + PADR( Iif( !lAdmPubl .And. cTpInsc == "1", SubStr(cNrInsc, 1, 8), cNrInsc), 14) + "S1010" + Padr(xFilial("SRV", cFilAnt) + oModel:GetValue('RV_COD'), fTamRJEKey(), " ") + cComp1010
				cStatus := "-1"
				//RJE_TPINSC+RJE_INSCR+RJE_EVENTO+RJE_KEY+RJE_INI
				GetInfRJE( 2, cChave, @cStatus, @cOperRJE, @cRetfRJE, @nRecRJE )

				//Alteração ou exclusão
				If nOpcAx == 4 .Or. nOpcAx == 5
					//Retorno pendente impede o cadastro
					If cStatus == "2"
						cMsgRJE 	:= STR0349//"Operação não ser?realizada pois o evento foi transmitido, mas o retorno est?pendente"
						lRet		:= .F.
					//ALTERACAO
					ELSEIF nOpcAx == 4 .AND. cStatus <> "2"
						//Evento de exclusão sem transmissão impede o cadastro
						If cOperRJE == "E" .And. cStatus != "4"
							cMsgRJE 	:= STR0350//"Operação não ser?realizada pois h?evento de exclusão que não foi transmitido ou com retorno pendente"
							lRet		:= .F.
						//Não existe na fila, ser?tratado como inclusão
						ElseIf cStatus == "-1"
							nOpcao 		:= 3
							cOperNew 	:= "I"
							cRetfNew	:= "1"
							cStatNew	:= "1"
							lNovoRJE	:= .T.
						//Evento sem transmissão, ir?sobrescrever o registro na fila
						ElseIf cStatus $ "1/3"
							If cOperRJE == "A"
								nOpcao 	:= 4
							EndIf
							cOperNew 	:= cOperRJE
							cRetfNew	:= cRetfRJE
							cStatNew	:= "1"
							lNovoRJE	:= .F.
						//Evento diferente de exclusão transmitido, ir?gerar uma retificação
						ElseIf cOperRJE != "E" .And. cStatus == "4"
							nOpcao 		:= 4
							cOperNew 	:= "A"
							cRetfNew	:= "2"
							cStatNew	:= "1"
							lNovoRJE	:= .T.
						//Evento de exclusão transmitido, ser?tratado como inclusão
						ElseIf cOperRJE == "E" .And. cStatus == "4"
							nOpcao 		:= 3
							cOperNew 	:= "I"
							cRetfNew	:= "1"
							cStatNew	:= "1"
							lNovoRJE	:= .T.
						EndIf
					//Exclusão
					ElseIf nOpcAx == 5
						nOpcao 		:= 5
						//Evento de exclusão sem transmissão impede o cadastro
						If cOperRJE == "E" .And. cStatus != "4"
							cMsgRJE 	:= STR0350//"Operação não ser?realizada pois h?evento de exclusão que não foi transmitido ou com retorno pendente"
							lRet		:= .F.
						//Evento diferente de exclusão transmitido ir?gerar uma exclusão
						ElseIf cOperRJE != "E" .And. cStatus == "4"
							cOperNew 	:= "E"
							cRetfNew	:= cRetfRJE
							cStatNew	:= "1"
							lNovoRJE	:= .T.
						EndIf
					EndIf
				ElseIf nOpcAx == 3
					//Retorno pendente impede o cadastro
					If cStatus == "2"
						cMsgRJE 	:= STR0349//"Operação não ser?realizada pois o evento foi transmitido, mas o retorno est?pendente"
						lRet		:= .F.
					//Evento de exclusão sem transmissão impede o cadastro
					ElseIf cOperRJE == "E" .And. cStatus != "4"
						cMsgRJE 	:= STR0350//"Operação não ser?realizada pois h?evento de exclusão que não foi transmitido ou com retorno pendente"
						lRet		:= .F.
					//Evento sem transmissão, ir?sobrescrever o registro na fila
					ElseIf cStatus $ "1/3"
						nOpcao		:= Iif( cOperRJE == "I", 3, 4 )
						cOperNew 	:= cOperRJE
						cRetfNew	:= cRetfRJE
						cStatNew	:= "1"
						lNovoRJE	:= .F.
					//Evento diferente de exclusão transmitido, ir?gerar uma retificação
					ElseIf cOperRJE != "E" .And. cStatus == "4"
						cOperNew 	:= "A"
						cRetfNew	:= "2"
						cStatNew	:=  "1"
						lNovoRJE	:= .T.
					//Ser?tratado como inclusão
					Else
						cOperNew 	:= "I"
						cRetfNew	:= "1"
						cStatNew	:= "1"
						lNovoRJE	:= .T.
					EndIf
				EndIf

				if lRet
					If (fCarrRub("", oModel:GetValue('RV_COD'), cComp1010, lGeraCod, cValToChar(nOpcao), @aErros, xFilial("SRV", cFilAnt), oModel, cVersEnvio, @cXml, @cRetKey, cGpeAmbe, lTemRJG, lRotRJG, oGrid))

						aAdd( aDados, { xFilial("RJE", cFilAnt), xFilial("SRV", cFilAnt), cTpInsc, Iif( cTpInsc == "1" .And. !lAdmPubl, SubStr(cNrInsc, 1, 8), cNrInsc ), "S1010", cComp1010, xFilial("SRV", cFilAnt) +  oModel:GetValue('RV_COD'), cRetKey, cRetfNew, "12", cStatNew, dDtGer, cHrGer, cOperNew } )

						//Se não for uma exclusão de registro não transmitido, cria/atualiza registro na fila
						If !( nOpcAx == 5 .And. ((cOperRJE == "E" .And. cStatus == "4") .Or. cStatus $ "-1/1/3") )
							If !( lRet := fGravaRJE( aDados, cXml, lNovoRJE, nRecRJE ) )
								cMsgRJE := STR0351//"Ocorreu um erro na gravação do registro na tabela RJE"
							EndIf
						//Se for uma exclusão e não for de registro de exclusão transmitido, exclui registro de exclusão na fila
						ElseIf nOpcAx == 5 .And. cStatus != "-1" .And. !(cOperRJE == "E" .And. cStatus == "4")
							If !( lRet := fExcluiRJE( nRecRJE ) )
								cMsgRJE := STR0352//"Ocorreu um erro na exclusão do registro na tabela RJE"
							EndIf
						EndIf
						If !lAviso .And. lRet
							fEFDMsg()
						EndIf
					ELSE
						LRET := .f.
					ENDIF
					if !lRet
						MsgInfo(aErros[1],OemToAnsi(STR0017))
					endif
				else
					MsgInfo(cMsgRJE,OemToAnsi(STR0017))
				endif

				If !lRet
					IF cEFDAviso == "0"
						MsgInfo(STR0403,OemToAnsi(STR0017))
					ELSEIf cEFDAviso == "1"
						lTudoOk := LRET
						CMSG := STR0403 //"Dados não enviados ao eSocial."
					ENDIF
				EndIf
			else
				lret := .F.
				cMsgRJE := "Problemas com evento S1000"
				do Case
					case cStatus == "-1" // nao encontrado na base de dados
						cMsgRJE := STR0353 //"Registro do evento S-1000 não localizado na base de dados"
					case cStatus == "1" // nao enviado para o governo
						cMsgRJE := STR0354 //"Registro do evento S-1000 não transmitido para o governo"
					case cStatus == "2" // enviado e aguardando retorno do governo
						cMsgRJE := STR0355 //"Registro do evento S-1000 aguardando retorno do governo"
					case cStatus == "3" // enviado e retornado com erro
						cMsgRJE := STR0356 //"Registro do evento S-1000 retornado com erro do governo"
				endcase

				// Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
				if cEFDAviso == "0"
					MsgInfo(cMsgRJE,OemToAnsi(STR0017))
				elseIf cEFDAviso == "1"
				   	lTudoOk	:= lret
					cMsg := cMsgRJE
				endif
			endif
		Else
			If cPaisLoc == 'BRA' .AND. FindFunction("fVersEsoc")
				fVersEsoc( "S1010", .T., /*aRetGPE*/, /*aRetTAF*/, @cVersEnvio)
			EndIf

			cStatus := TAFGetStat( "S-1010", oModel:GetValue('RV_COD')+";" +cIdTbRub +";"+ SubStr(cComp1010, 5, 2)+SubStr(cComp1010, 1, 4) )
			//------------------------
			//| Verificacao de Filial
			//| Verificar o compartilhamento das tabelas SRV
			//--------------------------------------------------------------
			If Empty(xFilial("SRV")) //SRV compartilhada
				lSemFilSRV := .T.
			EndIf
			If Empty(cFilEnv)
				cFilEnv:= cFilAnt
			EndIf
			if "#"+cStatus  $ "#-1"
				nOpcAx:= 3
			EndIf
			For nFil:= 1 to Len(aFilInTaf)
				If lSemFilSRV
					cFilEnv:= aFilInTaf[nFil][2]
				ElseIf !lSemFilSRV .And. nFil > 1
					loop
				EndIf
				//Se layouts de GPE x TAF forem compatíveis
				If aScan(aEvent[2][5],{|x| x == xFilial(aEvent[2][2],aFilInTaf[nFil][2]) }) == 0
					aAdd(aEvent[2][5], xFilial(aEvent[2][2],aFilInTaf[nFil][2]))
					aEvent[2][6]:= .T.
				Else
					aEvent[2][6]:= .F.
				EndIf
				If ((Len(aEvent[2][5])==1 .And. aEvent[2][3] == "CCC" .And. aFilInTaf[nFil,4]) .Or. aEvent[2][3] == "EEE".Or.;
								( aEvent[2][6] .And. !(aEvent[2][3] $ "CCC/EEE")))
					If (lTudoOk := fCarrRub("", oModel:GetValue('RV_COD'), cComp1010, lGeraCod, cValToChar(nOpcAx),@aErros,cFilEnv,oModel,cVersEnvio, Nil, Nil, Nil, lTemRJG, lRotRJG, oGrid))
						IF !lAviso
							fEFDMsg()
							lAviso := .T.
						ENDIF
					Else
						cMsg		:= ""
						FeSoc2Err( aErros[1], @cMsg ,IIF(aErros[1]!='000026',1,2))
						FrmTexto (cMsg)
						aErros[1]	:= cMsg
						lTudoOk		:= .F.
					EndIf
				EndIf
				aEvent[2][6]:= .F.
				If !lTudoOk .And.  (!lSemFilSRV .Or. (lSemFilSRV .And. len(aFilInTaf)== nFil))  .And. !Empty(cMsg)
					lTudoOk := cEFDAviso $ "0|2"
					If cEFDAviso <> "2"
						If cEFDAviso == "0" .AND. !Empty(cMsg)
							cMsg += OemToAnsi(STR0286)//"E de acordo com o valor do parâmetro MV_EFDAVIS"
							cMsg += CRLF + OemToAnsi(STR0287) //"O Registro ser?salvo mas não integrado com o TAF. Para corrigir, volte alterando o registro e informe os campos necessários."
						ElseIf cEFDAviso == "1" .AND. !Empty(cMsg)
							cMsg += OemToAnsi(STR0286) //"E de acordo com o valor do parâmetro MV_EFDAVIS"
							cMsg += CRLF + OemToAnsi(STR0288) //"O Registro não ser?salvo e nem integrado com o TAF. Corrija os campos informados para prosseguir com o cadastro."
						EndIf
						If !Empty(cMsg)
							MsgInfo(cMsg,OemToAnsi(STR0017)) //"Atenção"
						EndIf
					EndIf
				EndIf
			Next nFil
		endif
	ElseIf lIntTaf .And. !Empty(cMsg)
		MsgInfo(STR0289,OemToAnsi(STR0017)) //"Atenção"
	EndIf

	// Integração com TOTVS Consignado
	If lIntConsig
		If M->RV_CODFOL == '1857' .And. oModel:GetValue('RV_PERC') > 30
			MsgInfo(STR0399, OemToAnsi(STR0017)) // STR0017: "Atenção" e STR0399: "De acordo com a legislação atual, não é permitido inserir um valor maior que 30% para o cálculo da Margem Consignável."
			lTudoOK := .F.

		ElseIf SRV->(ColumnPos('RV_TCMARG')) > 0 .And. oModel:GetValue('RV_TCMARG') == '1' .And. oModel:GetValue('RV_TIPOCOD') == '3'
			MsgInfo(STR0400, OemToAnsi(STR0017)) // STR0017: "Atenção" e STR0400: "O cálculo da Margem Consignável será composto apenas por verbas dos tipos 'Provento' e 'Desconto'."
			lTudoOK := .F.
		EndIf
	EndIf

	If !lTudoOK .And. !Empty(cMsg)
		Help(" ", 1, OemToAnsi(STR0017),, CMSG, 1, 0)
		//oModelGrid:SetErrorMessage( oModel:GetId() , , oModel:GetId(), "" , OemToAnsi(STR0017), If(!Empty(cMsg), cMsg , "")  )
	EndIf

	If lTudoOK .And. (lIntTaf .Or. lMiddleware) .And. Empty(cMsg) .And. !lRotRJG .And. lTemRJG
		lIncCP		:= (oModel:GetValue("RV_INCCP") $ "91/92/93/94/95/96/97/98")
		lIncIRRF	:= (Left(oModel:GetValue("RV_INCIRF"),1) == "9") .And. oModel:GetValue("RV_INCIRF") >= "91  " .And. oModel:GetValue("RV_INCIRF") <= "9999"
		lIncFGTS	:= (oModel:GetValue("RV_INCFGTS") == "91") .Or. (cVersEnvio >= '9.0' .And. oModel:GetValue("RV_INCFGTS") $ '91|92|93')
		lIncSind	:= (cVersEnvio < '9.0' .And. oModel:GetValue("RV_INCSIND") == "91")

		If lIncCP .Or. lIncIRRF .Or. lIncFGTS .Or. lIncSind
			If RJG->( dbSeek( oModel:GetValue("RV_FILIAL")+oModel:GetValue("RV_COD") ) )
				While RJG->( !EoF() ) .And. RJG->RJG_FILIAL+RJG->RJG_COD == oModel:GetValue("RV_FILIAL")+oModel:GetValue("RV_COD")
					If aScan( aProcRJG, { |x| x[1]+x[2]+x[3]+x[4]+x[5] == RJG->RJG_TP+RJG->RJG_TPPROC+RJG->RJG_NRPROC+RJG->RJG_EXTDEC+RJG->RJG_CSUSP } ) == 0
						aAdd( aProcRJG, { RJG->RJG_TP, RJG->RJG_TPPROC, RJG->RJG_NRPROC, RJG->RJG_EXTDEC, RJG->RJG_CSUSP } )
					EndIf
					RJG->( dbSkip() )
				EndDo
			EndIf
		EndIf

		If lIncCP
			If aScan( aProcRJG, { |x| x[1] == "1" } ) == 0
				lFaltaCP	:= .T.
			EndIf
		EndIf
		If lIncIRRF
			If aScan( aProcRJG, { |x| x[1] == "2" } ) == 0
				lFaltaIR	:= .T.
			EndIf
		EndIf
		If lIncFGTS
			If aScan( aProcRJG, { |x| x[1] == "3" } ) == 0
				lFaltaFG	:= .T.
			EndIf
		EndIf
		If lIncSind
			If aScan( aProcRJG, { |x| x[1] == "4" } ) == 0
				lFaltaSi	:= .T.
			EndIf
		EndIf

		If lFaltaCP .Or. lFaltaIR .Or. lFaltaFG .Or. lFaltaSi
			cMsgProc := STR0371 + CRLF//"Informe os dados do(s) processo(s) de: "
			If lFaltaCP
				cMsgProc += STR0372 + CRLF//"Contribuição Previdenciária"
			EndIf
			If lFaltaIR
				cMsgProc += STR0373 + CRLF//"IRRF"
			EndIf
			If lFaltaFG
				cMsgProc += STR0374 + CRLF//"FGTS"
			EndIf
			If lFaltaSi
				cMsgProc += STR0375 + CRLF//"Contribuição Sindical"
			EndIf
			cMsgProc += STR0376//"em Outras Ações\Processos da Verba"
			MsgInfo(cMsgProc, OemToAnsi(STR0024)) //"Atenção"
		EndIf
	EndIf

	// limpa as variáveis Static
	If ExistFunc("RstaCodFol")
		RstaCodFol()
	EndIf
	If ExistFunc("Rst070Cod")
		Rst070Cod()
	EndIf

	//--------------------------------------------------------------
	//| Inclusão por RECLOCK na tabela RJ8 para tratamento posterior JOB
	//--------------------------------------------------------------
	If !IsInCallStack("GPA936ThA").And. ChkFile("RJ8") .And. lTudoOK

		//Gera a chave para validação da filial na tabela RJ7
		//Chave composta por: Filial da RJ7 + Cód. da Tabela + Filial Logada(cadastro)
		cChave:= xFilial("RJ7")+"1"+cFilAnt
		cStatRJ7 := fVldRJ7(1,cChave)

		If cStatRJ7 //Inclusao
			Begin Transaction
			//Alimentando a tabela
				 Reclock( cAliasRJ8, .T.  )
				( cAliasRJ8 )->RJ8_FILIAL  := xFilial( "RJ8" )
				( cAliasRJ8 )->RJ8_FILPAR  := ""
				( cAliasRJ8 )->RJ8_TABELA  := "1"
				( cAliasRJ8 )->RJ8_CONTEU  := xFilial("SRV") + oModel:GetValue('RV_COD')
				( cAliasRJ8 )->RJ8_DATA    := Date()
				( cAliasRJ8 )->RJ8_HORA    := SecsToTime(nHoraInicio)
				( cAliasRJ8 )->RJ8_OPERAC  := iif(nOpcAx == 3, "1",iif(nOpcAx== 4,"2","3"))
				( cAliasRJ8 )->RJ8_USUARI  := UsrRetName(RetCodUsr())
				( cAliasRJ8 )->RJ8_STATUS  := "0"
				( cAliasRJ8 )->RJ8_ESOCIA  := "1"
				( cAliasRJ8 )->RJ8_MSGLOG  := iif(nOpcAx==3,STR0358,iif(nOpcAx==4,STR0359,STR0360)) + oModel:GetValue('RV_COD')
				( cAliasRJ8 )->( MsUnlock() )

				( cAliasRJ8 )->( dbCloseArea() )
			End Transaction
		EndIf

	EndIf

Return lTudoOK


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³fMed13AviVld()  ºAutor  ³Tania Bronzeri      º Data ³ 30/03/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Funcao VALID dos campos RV_MED13 e RV_MEDAVI.                    º±±
±±º         ³                                                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ SX3                                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fMed13AviVld(cConteudo)
Local lValid	:=	.T.

lValid	:=	(cConteudo <> "SP")
lValid	:=	If(lValid,CheckIns(cConteudo),.F.)

If !lValid
	Help(" ", 1, OemToAnsi(STR0017),, OemToAnsi(STR0058), 1, 0) // "Parametro para Media informado invalido."
EndIf

Return lValid

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA040   ºAutor  ³Microsiga           º Data ³  01/10/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function f040DIRFVld()
Local lRet := .F.

lRet := ExistCpo("SX5","36"+AllTrim(M->RV_DIRF))

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun??o    ³ fBoxDecA ³ Autor ³Marcos Kato            ³ Data ³ 05/11/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri??o ³ Valida o Codigo da Declaracao Anual Chile       	  		   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM500                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fBoxDecA()
Local cOpcBox := ""
cOpcBox += ( "N=No Declarar;"	 					)
	cOpcBox += ( "A=Sueldo Bruto;" 					)
	cOpcBox += ( "B=Cotizac.Prev.Cagro del Trab.;"	)
	cOpcBox += ( "C=Imp Único X Rentas del año;"			)
	cOpcBox += ( "D=Imp Único X Rentas accesorias;"		)
	cOpcBox += ( "E=Mayor Retención Solicitada;"				)
	cOpcBox += ( "F=Renta Total Exenta;"			)
	cOpcBox += ( "G=Renta Total No gravada;"		)
cOpcBox += ( "H=Rebaja por Zonas Extremas"		)

Return(cOpcBox)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³fCodDsrVld()    ºAutor  ³Renata Bueno        º Data ³ 14/03/2010  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Funcao VALID do campo RV_CODDSR								           º±±
±±º         ³                                                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ SX3                                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fCodDsrVld(cCodDsr)

Local lRet	:=	.T.

If M->RV_DSRHE == "N" .Or. ( M->RV_DSRHE == "S" .and. Empty(cCodDsr))
	lRet := .T.
Else
	lRet := .F.
EndIf

If !lRet
	Aviso( STR0017, STR0082+STR0083, { "OK" } )		// "Atencao!"###"Parametro para Media informado invalido."
EndIf

Return ( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³ fCodVld()      ºAutor  ³Renata Bueno        º Data ³ 14/03/2010  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Funcao VALID do campo RV_CODBASE								           º±±
±±º         ³                                                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ SX3                                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fCodVld()
Local lRet	  := .T.
Local uMvRet  := Alltrim(ReadVar())
Local cAlias  := ALIAS()
Local cMvPar  := &(uMvRet)
Local cArqTemp:= ""
Local cIndTemp:= ""
Local nOrdem  := IndexOrd()
Local nRecno  := RecNo()
Local nRecSrv := 0
Local nOrdSrv := 0

dbSelectArea( "SRV" )
nRecSrv := RecNo()
cArqTemp 	:= CriaTrab(NIL,.F.)
cIndTemp 	:= "RV_FILIAL+RV_CODBASE+RV_COD"
IndRegua( "SRV", cArqTemp, cIndTemp )

Begin Sequence

	If uMvRet == "M->RV_CODBASE" .and. !Empty(cMvPar)
		If dbSeek( xFilial("SRV") + cMvPar )   .and. ( M->RV_COD # SRV->RV_COD)
			Help(" ",1,"XREPCODFOL")
			lRet := .F.
			Break
		Endif
	EndIf

	&(uMvRet) := cMvPar

End Sequence

dbSelectArea('SRV')
dbClearFilter()
RetIndex("SRV")
FErase(cArqTemp+OrdBagExt())
DbGoto(nRecSrv)
dbSetOrder(nOrdSrv)
dbSelectArea( cAlias )
dbSetOrder( nOrdem )
dbGoto( nRecNo )

Return (lRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun??o    ³ SrvTipoBox		³Autor³  Tatiane Matias   ³ Data ³08/11/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri??o ³Retorna as opcoes do combo                                  ³
³          ³ser lidas pelas bibliotecas Framework da Versao 9.12 .      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA040                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³cOpcBox														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function RvTipoBox()
Local cOpcBox := ""

	cOpcBox := "H=" + STR0060 + ";V=" + STR0061 + ";D=" + STR0062   //"Horas"#"Valor"#"Dias"

	If MV_MODFOL == "2"
		cOpcBox += ";F=" + STR0063 //"Data"
	endif

return cOpcBox

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun??o    ³fNatRssBox   ³Autor³Abel Ribeiro          ³ Data ³30/04/08  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri??o ³Funcao para Retornar as Opcoes do Campo RV_NATRSS          	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_CBOX para o campo RV_NATRSS	                         	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function fNatRssBox( lValid , lRetDesc , cOpcDesc )
Local cOpcBox

DEFAULT lValid		:= .F.
DEFAULT lRetDesc	:= .F.

IF !( lValid )

	IF !( lRetDesc )

	   	cOpcBox := ( "C=" + OemToAnsi(STR0066) + ";"	)	//Comissões
		cOpcBox += ( "F=" + OemToAnsi(STR0067) + ";"	)	//Subsídio de férias
		cOpcBox += ( "N=" + OemToAnsi(STR0068) + ";"	)	//Subsídio de Natal
		cOpcBox += ( "P=" + OemToAnsi(STR0069) + ";"	)	//Remunerações de carácter permantente
		cOpcBox += ( "X=" + OemToAnsi(STR0070) + ";"	)	//Outros subsídios
		cOpcBox += ( "O=" + OemToAnsi(STR0071) + ";"	)	//Forças armadas
		cOpcBox += ( "1=" + OemToAnsi(STR0072) + ";"	)	//Remunerações variáveis - Circular No 1 de 91/01/19.
		cOpcBox += ( "2=" + OemToAnsi(STR0073) + ";"	)	//Remuneracao ref. férias pagas enão gozadas por cessação do contrato detrabalho - Desp. 129/SESS/91 de 17/12
		cOpcBox += ( "6=" + OemToAnsi(STR0074) + ";"	)	//"Diferenças de vencimentos
		cOpcBox += ( "8=" + OemToAnsi(STR0075) + ";"	)	//"Exercício temporário de funções-categoria superior
		cOpcBox += ( "9=" + OemToAnsi(STR0076) + ";"	)	//"Promocoes"
		cOpcBox += ( "Q=" + OemToAnsi(STR0085)          )   //"Remunerações"

	Else

		Do Case
			Case ( cOpcDesc == "C" ) ; ( cOpcBox := OemToAnsi(STR0066) )	//Comissoes
			Case ( cOpcDesc == "F" ) ; ( cOpcBox := OemToAnsi(STR0067) )	//Subsidio de ferias
			Case ( cOpcDesc == "N" ) ; ( cOpcBox := OemToAnsi(STR0068) )	//Subsidio de Natal
			Case ( cOpcDesc == "P" ) ; ( cOpcBox := OemToAnsi(STR0069) )	//Remuneracoes caracter permanente
			Case ( cOpcDesc == "X" ) ; ( cOpcBox := OemToAnsi(STR0070) )	//Outros subsídios
			Case ( cOpcDesc == "O" ) ; ( cOpcBox := OemToAnsi(STR0071) )	//Forças armadas
			Case ( cOpcDesc == "1" ) ; ( cOpcBox := OemToAnsi(STR0072) )	//Remunerações variáveis - Circular No 1 de 91/01/19.
			Case ( cOpcDesc == "2" ) ; ( cOpcBox := OemToAnsi(STR0073) )	//Remun. Ferias Pagas Não Gozadas-Desp. 129/SESS/91 de 17/12
			Case ( cOpcDesc == "6" ) ; ( cOpcBox := OemToAnsi(STR0074) )	//"Autonomos"
			Case ( cOpcDesc == "8" ) ; ( cOpcBox := OemToAnsi(STR0075) )	//"Exercicio temp. categoria superior
			Case ( cOpcDesc == "9" ) ; ( cOpcBox := OemToAnsi(STR0076) )	//"Promocoes"
			Case ( cOpcDesc == "Q" ) ; ( cOpcBox := OemToAnsi(STR0085) )	//"Remunerações"
		End Case

	EndIF

Else

	cOpcBox := "CFNPXO12689Q"

EndIF

Return( cOpcBox )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun??o    ³fNatRssVld		³Autor³Abel Ribeiro       ³ Data ³30/04/08  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri??o ³Validar o conteudo do campo RV_NATRSS  	                    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fNatRssVld()   												³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_VALID do campo RV_NATRSS                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³NIL                                        					³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function fNatRssVld()
Local lNatRssVld := .T.

Begin Sequence

	IF !( lNatRssVld := NaoVazio() )
		Break
	EndIF

	IF !( lNatRssVld := Pertence( fNatRssBox( .T. ) ) )
		Break
	EndIF

End Sequence

Return( lNatRssVld )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³GP040CODFER	 ºAutor  ³Kelly Soares        º Data ³ 30/01/2008  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³Funcao VALID do campo RV_CODFER.		                           º±±
±±º         ³                                                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ SX3                                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GP040CODFER()
Local lRet		:= .T.
Local uMvRet	:= Alltrim( ReadVar() )
Local nOldInd	:= SRV->( IndexOrd() )
Local nNewInd	:= RetOrder("SRV","RV_FILIAL+RV_CODFER")
Local cMvPar	:= &( uMvRet )
Local cCodFol	:= M->RV_CODFOL
Local cIdFer	:= ""

If uMvRet == "M->RV_CODFER"

	//Identificadores de ferias
	cIdFer := "0016/0022/0060/0065/0067/0072/0073/0074/0075/0076/0077/0078/0079/0080/0081/0082/00'83/0102/0104/"
	cIdFer += "0159/0160/0168/0205/0206/0224/0226/0232/0343/0344/0345/0346/0622/0623/0632/0633/0634/0635"

	If !Empty(cMvPar)
		If fPosReg("SRV",nNewInd,xFilial("SRV")+cMvPar)
			If Empty(cCodFol) .Or. ( !Empty(cCodFol) .And. !cCodFol $ cIdFer .And. ( Empty(SRV->RV_CODFOL) .Or. !SRV->RV_CODFOL $ cIdFer ) )
				Help("",1,"GPCODFER")
				lRet := .F.
			Endif
		Endif
	Endif

	&(uMvRet) := cMvPar
	SRV->( DbSetOrder(nOldInd) )

Endif

Return (lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³fTipoRemunera   ºAutor  ³Alceu Pereira       º Data ³ 05/10/2009  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Funcao que retorna as opcoes para remuneracoes imponibles e totalº±±
±±º         ³                                                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ Gper801 - GPEA040 - ARGENTINA.                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fTipoRemunera()
Local nX
Local aSicoss
Local aCodSicoss
Local aDescSicoss
Local cMvParSicoss
Local aRetSicoss
Local cTitulo	:= Oemtoansi(STR0085)				//"Remuneraciones"
Local cMvPar	:= &( Alltrim( ReadVar() ) )
Local lRet		:= .T.
Local l1Elem	:= .T.
Static lPassou
Private uMvRet	:= Alltrim( ReadVar() )

	aSicoss		:= {}
	aAdd(aSicoss,{"0", Oemtoansi(STR0115)+" "+Oemtoansi(STR0116),  "0"})      															//"Remuneracao Total"
	aAdd(aSicoss,{"1", Oemtoansi(STR0115)+" "+Oemtoansi(STR0117)+" 1", "1"}) 														//"Remuneração Imponible"
	aAdd(aSicoss,{"2", Oemtoansi(STR0115)+" "+Oemtoansi(STR0117)+" 2", "2"})														//"Remuneração Imponible"
	aAdd(aSicoss,{"3", Oemtoansi(STR0115)+" "+Oemtoansi(STR0117)+" 3", "3"})														//"Remuneração Imponible"
	aAdd(aSicoss,{"4", Oemtoansi(STR0115)+" "+Oemtoansi(STR0117)+" 4", "4"})														//"Remuneração Imponible"
	aAdd(aSicoss,{"5", Oemtoansi(STR0115)+" "+Oemtoansi(STR0117)+" 5", "5"})														//"Remuneração Imponible"
	aAdd(aSicoss,{"6", Oemtoansi(STR0115)+" "+Oemtoansi(STR0117)+" 6", "6"})														//"Remuneração Imponible"
	aAdd(aSicoss,{"7", Oemtoansi(STR0115)+" "+Oemtoansi(STR0117)+" 7", "7"})														//"Remuneração Imponible"
	aAdd(aSicoss,{"8", Oemtoansi(STR0115)+" "+Oemtoansi(STR0117)+" 8", "8"})														//"Remuneração Imponible"
	aAdd(aSicoss,{"9", Oemtoansi(STR0115)+" "+Oemtoansi(STR0117)+" 9", "9"})

	aDescSicoss	 := {}
	aCodSicoss	 := {}
	cMvParSicoss := ""
	aRetSicoss	 := {}

	For nX:=1 To Len(aSicoss)
		AADD( aDescSicoss, aSicoss[nX, 1] + "-" + aSicoss[nX, 2] )
		cMvParSicoss += aSicoss[nX, 1]+"-"
		AADD( aCodSicoss, aSicoss[nX, 1] )
		AADD(aRetSicoss, aSicoss[nX, 3] )
	Next nX

l1Elem := IF( l1Elem == NIL .and. ValType( l1Elem ) != "L" , .T. , .F. )

CursorWait()

IF ( cMvPar != NIL )
//				    Retorno	 ,Titulo  ,  opcoes     , Strin Ret   ,lin  ,col  , Tipo Sel  ,tam chave , n. ele ret, Botao
	If ( f_Opcoes(@cMvPar  ,  cTitulo, aDescSicoss,cMvParSicoss  ,12   ,49  ,  l1Elem    ,  2       ,   999    , .T.   ) )
		If INCLUI .Or. ALTERA
			&(uMvRet) := cMvPar
		EndIf
		lRet:= .T.
	Else
		lRet:= .F.
	EndIF
EndIF

CursorArrow()

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³fAdicSicoss     ºAutor  ³Alceu Pereira       º Data ³ 23/11/2009  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Funcao que retorna as opcoes para remuneracoes Adicionais        º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ Gper801 - GPEA040 - ARGENTINA.                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fAdicSicoss()
Local nX
Local aSicoss
Local aCodSicoss
Local aDescSicoss
Local cMvParSicoss
Local aRetSicoss
Local cTitulo	:= "Adicionales"
Local cMvPar	:= "" //GetSx3Cache("RV_OADICIO","X3_TAMANHO" )
Local lRet		:= .T.
Local l1Elem	:= .T.
Static lPassou
Private uMvRet	:= Alltrim( ReadVar() )

	aSicoss		:= {}
	aAdd(aSicoss,{"IAO", "Importe Adicional OS", "IAO"})
	aAdd(aSicoss,{"IES", "Importe Excedentes Aportes SS", "IES"})
	aAdd(aSicoss,{"IEO", "Importe Excedentes Aportes OS", "IEO"})
	aAdd(aSicoss,{"AAO", "Aporte Adicional de Obra Social", "AAO"})
	aAdd(aSicoss,{"ZDF", "Zona Desfavorable", "ZDF"})
	aAdd(aSicoss,{"ADC", "Adicionales", "ADC"})
	aAdd(aSicoss,{"PRE", "Premios", "PRE"})
	aAdd(aSicoss,{"AFP", "Asignaciones Familiares Pagadas", "AFP"})
	aAdd(aSicoss,{"SMA", "Sueldo Más Adicionales", "SMA"})
	aAdd(aSicoss,{"CHE", "Cantidad de Horas Extras", "CHE"})
	aAdd(aSicoss,{"VAC", "Vacaciones", "VAC"})
	aAdd(aSicoss,{"RTR", "Retif. de Remuneracion", "RER"})
	aAdd(aSicoss,{"NOR", "Conceptos no Remunerativos", "NOR"})
	aAdd(aSicoss,{"AG1", "Aguinaldo 1", "AG1"})
	aAdd(aSicoss,{"AG2", "Aguinaldo 2", "AG2"})
	aAdd(aSicoss,{"BIA", "Base Inss Aut./Rem. Soc. 15%", "BIA"})
	aAdd(aSicoss,{"SLB", "Suel Contr. Hasta Limite Base", "SLB"})
	aAdd(aSicoss,{"BJF", "Base Jubilacion Empleado Anticipo", "BJF"})
	aAdd(aSicoss,{"ABI", "Aguinaldo Base INSS/Jubilacion Anticipo" , "ABI"})
	aAdd(aSicoss,{"OSE", "Obra Social Empleado", "OSE"})

	aDescSicoss	 := {}
	aCodSicoss	 := {}
	cMvParSicoss := ""
	aRetSicoss	 := {}

	For nX:=1 To Len(aSicoss)
		AADD( aDescSicoss, aSicoss[nX, 1] + "-" + aSicoss[nX, 2] )
		cMvParSicoss += aSicoss[nX, 1]+"-"
		AADD( aCodSicoss, aSicoss[nX, 1] )
		AADD(aRetSicoss, aSicoss[nX, 3] )
	Next nX

l1Elem := IF( l1Elem == NIL .and. ValType( l1Elem ) != "L" , .T. , .F. )

CursorWait()

IF ( cMvPar != NIL )
//				    Retorno	 ,Titulo  ,  opcoes     , Strin Ret    ,lin  ,col  , Tipo Sel  ,tam chave , n. ele ret, Botao
	If ( f_Opcoes(@cMvPar  ,  cTitulo, aDescSicoss ,cMvParSicoss  ,12   ,49  ,  l1Elem    ,  4       ,   999    , .T.   ) )
		If INCLUI .Or. ALTERA
			&(uMvRet) := cMvPar
		EndIf
		lRet:= .T.
	Else
		lRet:= .F.
	EndIF
EndIF

CursorArrow()

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fRetrBas   ºAutor  ³Tiago Malta        º Data ³  09/23/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Consulta Roteiros para a função de Retribuição Base.        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Portugal                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fRetrBas()
Local aSry     := {}
Local MvParDef := ""
Local cTitulo  := STR0086
Local cMvPar   := &(Alltrim(ReadVar()))
Local mvRet    := Alltrim(ReadVar())
Local cVar	   := Upper( Alltrim( ReadVar() ) )
Local cCpos	   := "M->RV_RETRBAS"

	IF cVar == cCpos

		DBSELECTAREA("SRY")
		SRY->(DBGOTOP())
		While SRY->(!eof())

			aAdd( aSry , SRY->RY_CALCULO + " - " + SRY->RY_DESC )

			MvParDef +=SRY->RY_CALCULO

			SRY->( dbskip() )
		Enddo

		f_Opcoes(@cMvPar,cTitulo,aSry,MvParDef,12,49,.F.,3,999,.T. )

		&MvRet := cMvpar

	ENDIF

Return()


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fReducBas  ºAutor  ³Tiago Malta        º Data ³  21/02/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Consulta Verbas para a tabela auxiliar S022 - Venezuela.    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Venezuela                                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fReducBas()
Local aSrV     := {}
Local MvParDef := ""
Local cTitulo  := STR0086
Local cMvPar   := &(Alltrim(ReadVar()))
Local mvRet    := Alltrim(ReadVar())
Local cVar	   := Upper( Alltrim( ReadVar() ) )
Local cCpos	   := "M->VERBAS"

	IF cVar == cCpos

		DBSELECTAREA("SRV")
		SRV->(DBGOTOP())
		While SRV->(!eof())

			aAdd( aSrV , SRV->RV_COD + " - " + SRV->RV_DESC )

			MvParDef +=SRV->RV_COD

			SRV->( dbskip() )
		Enddo

		f_Opcoes(@cMvPar,cTitulo,aSrV,MvParDef,12,49,.F.,3,999,.T. )

		cMvpar := StrTran( cMvpar , "*", " ")
		&MvRet := cMvpar

	ENDIF

Return(.T.)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun??o    ³DESMSEG       ³Autor³ Kelly Soares        ³ Data ³18/10/2011³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri??o ³Inicializa campo RV_DESMSEG com descricao da verba.         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³oModel                                                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³                                                            ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function DESMSEG(oModel)
Local aArea := GetArea()
Local cRet  := ""
SRV->(dbSetOrder(1))
cRet := Fdesc("SRV", SRV->RV_CODMSEG, "RV_DESC")

RestArea(aArea)
Return cRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CODMSEG    ºAutor  ³MOHANAD ODEH        º Data ³  05/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESC.     ³ INICIALIZADOR DO CAMPO RV_DESMEMO, DO QUAL O CONTEUDO ESTA  º±±
±±º          ³                                                             º±±
±±º          ³                                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA040                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function CODMSEG(oModel)
Local aArea := GetArea()
Local lRet := .T.

oModel:LoadValue('RV_DESMSEG', Fdesc("SRV", oModel:GetValue('RV_CODMSEG'), "RV_DESC"))

RestArea(aArea)
Return lRet

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun??o	   ³VldCod107		  ³Autor³ Kelly Soares    ³ Data ³17/01/2012³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri??o ³Valida conteudo do campo RV_COD107.                         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³                                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso	   ³X3_VALID do campo RV_COD107 (Equador) 					    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function VldCod107()
Local lRet  := .F.
Local aArea := GetArea()

DbSelectArea("SX5")
lRet := Empty(M->RV_COD107) .or. ;
      (!Empty(M->RV_COD107) .and. DbSeek(xFilial("SX5")+"37"+M->RV_COD107))

If !lRet
	MsgInfo(OemToAnsi(STR0114), OemToAnsi(STR0017))	// "Codigo nao encontrado. Selecione um codigo valido atraves da tecla [F3]." ## "Atencao!"
Endif

RestArea(aArea)

Return lRet

// BLOCO DE GERAÇÃO DO ARQUIVO PARA CARGA AUTOMÁTICA DAS VERBAS (COSTA RICA E REPÚBLICA DOMINICANA)
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Função    ³Gpea040Ger    ³Autor³ MOHANAD ODEH        ³ Data ³20/06/2011³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrição ³Chamar Programa Gerador de Programa de VERBAS               ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Gpea040Ger()                                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Gpea040Ger()
If cPaisLoc == "PAR"
	GpexAusent()
EndIf
Return( MsAguarde( { || GpexVerbas() } ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun??o	   ³GpexVerbas	  ³Autor³ MOHANAD ODEH³ Data ³20/06/2011³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri??o ³Gerar o Programa de Verbas                               ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³GpexVerbas              									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais> 									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso	   ³Generico      												³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function GpexVerbas()
Local aIniHdrSRV						// Cabecalho da tabela SRV com os campos
Local aSRVVirtual						// Campos virtuais de SRV
Local aLinesProg 	:= {}				// Array com as linhas dos programas
Local aLinesFunc 	:= {}			 	// Array com as linhas das funcoes dos itens SRV

Local cPath 		:= ""				// Caminho a gravar o arquivo
Local cArquivo 		:= ""			 	// Nome do arquivo a ser gerado
Local cProg								// string a ser enviado ao arquivo PRX
Local cTexto							// valor do campo do Header
Local cTipoVer							// Tipo da Verba
Local cValueCampo						// montagem da string a ser enviado ao array
Local cTipoNot		:= ""				// Tipo que nao cadastrado na tela do Box

Local nUsado							// Campos utilizados
Local nArq								// Situacao do arquivo
Local nX
Local nY
Local nPosMemo							// posicao do campo memo virtual
Local nLineMemo							// numero de linhas existentes no campo memo

cTiposVer    := "1/2/3/4"
cArquivo 	:= ("GPPD" + cPaisLoc + ".PRX")

aIniHdrSRV	:= SRV->( GdMontaHeader( @nUsado, @aSRVVirtual, NIL, NIL, NIL, .T.,.T.,,,,,,,.F. ) )
Begin Sequence
			  								       // MOSTRA DRIVES   MOSTRA HARD DISK RETORNA DIRETORIO
	cPath := cGetFile( "" ,OEMTOANSI(STR0088),0,,.F.,GETF_LOCALFLOPPY + GETF_LOCALHARD + GETF_RETDIRECTORY) //"Selecione o Diretorio"
	If Empty(cPath)
		Break
	EndIf
	cArquivo := cPath + cArquivo

	If File(cArquivo)
		If !(MsgYesNo( OemToAnsi(STR0089),;	//"O Arquivo ja Existe! Deseja Sobrescrever?"
 		 			   OemToAnsi(STR0090) ;	//"Atenção!"
					))
			Break
		EndIf
	EndIf

	nArq := MSFCREATE(cArquivo, 0)
	IF Ferror() # 0 .And. nArq = -1
		cMsg := OemToAnsi(STR0091) + STR(Ferror(),3) //"Erro de Gravacao do Arquivo - Codigo DOS: "
		MsgInfo(cMsg, OemToAnsi(STR0090)) //"Atenção!"
		Return(.F.)
	Endif

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Cabecalho da funcao                                          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd(aLinesProg, '#INCLUDE "PROTHEUS.CH"' + CRLF + CRLF)
	aAdd(aLinesProg, "/*/" + CRLF)
	aAdd(aLinesProg, "ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿" + CRLF)
	aAdd(aLinesProg, "³Fun??o    ³GpPD" + cPaisLoc + "      " + "³Autor³ Gerado pelo sistema ³ Data ³" + Substr(DtoS(date()),7,2)+"/"+Substr(DtoS(date()),5,2)+"/"+Substr(DtoS(date()),1,4) + "³" + CRLF)
	aAdd(aLinesProg, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
	aAdd(aLinesProg, "³Descri??o ³Verbas padroes                                              ³" + CRLF)
	aAdd(aLinesProg, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
	aAdd(aLinesProg, "³Sintaxe   ³                                                            ³" + CRLF)
	aAdd(aLinesProg, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
	aAdd(aLinesProg, "³Parametros³<Vide Parametros Formais>                                   ³" + CRLF)
	aAdd(aLinesProg, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
	aAdd(aLinesProg, "³ Uso      ³Generico                                                    ³" + CRLF)
	aAdd(aLinesProg, "ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/" + CRLF)
	aAdd(aLinesProg, "Function GpPD" + cPaisLoc + "( aVerbas, aSRVHeader )" + CRLF)
	aAdd(aLinesProg, "Local nPosVerbas 	:= 0" + CRLF)
	aAdd(aLinesProg, 'Local lRet	  		:= .T.' + CRLF + CRLF)

	aAdd(aLinesProg, "DEFAULT aVerbas 		:= {}" + CRLF)
	aAdd(aLinesProg, "DEFAULT aSRVHeader	:= {}" + CRLF + CRLF)

	aAdd(aLinesProg, "/*/" + CRLF)
	aAdd(aLinesProg, "ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿" + CRLF)
	aAdd(aLinesProg, "³ Cabecalho de SRV                                             ³" + CRLF)
	aAdd(aLinesProg, "ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/" + CRLF)

	For nX := 1 To Len(aIniHdrSRV)
		cProg      := ""
		cTipoTexto := ""
		For nY := 1 To Len(aIniHdrSRV[nX])
			cTexto := If(ValType(aIniHdrSRV[nX,nY]) == "N", AllTrim(Str(aIniHdrSRV[nX,nY])),;
						   	If(ValType(aIniHdrSRV[nX,nY])=="L", Transform(aIniHdrSRV[nX, nY],"@!"),;
						   	   aIniHdrSRV[nX, nY]))
			cTexto := StrTran(cTexto, "'", '"')
			cProg += "'" + cTexto + "'"
			If nY < Len(aIniHdrSRV[nX])
				cProg += ","
			EndIf

			If aIniHdrSRV[nX][2] == "RV_TIPOCOD"
				If nY == 11
					cTipoTexto += "'" + StrTran( RcaTipoBox( .F. , .F. , NIL, MV_MODFOL ), "'", '"') + "'"
				Else
					cTipoTexto += "'" + cTexto + "'"
				Endif
				If nY < Len(aIniHdrSRV[nX])
					cTipoTexto += ","
				EndIf
			Endif
		Next nY

		If !Empty(cProg)
			cTela := AllTrim(GetSx3Cache( aIniHdrSRV[nX][2], "X3_TELA" ))
			If !Empty(cTela) .or. !Empty(cTipoTexto)
				If !Empty(cTipoTexto)
					If aIniHdrSRV[nX][2] == "RV_TIPOCOD"
						cTela := '1'
					EndIf
					aAdd(aLinesProg, "IF( MV_MODFOL = '" + cTela + "', aAdd(aSRVHeader, " + '{ ' + cTipoTexto + ' })' + ", aAdd(aSRVHeader, " + '{ ' + cProg + ' })'+")" + CRLF )
				Else
					aAdd(aLinesProg, "IF( MV_MODFOL = '" + cTela + "', aAdd(aSRVHeader, " + '{ ' + cProg + ' })' + ", '')" + CRLF)
				EndIf
			Else
				aAdd(aLinesProg, "aAdd(aSRVHeader, " + '{ ' + cProg + ' })' + CRLF)
            Endif
		EndIf
	Next nX

	aAdd(aLinesProg, CRLF)

	aAdd(aLinesProg, "/*/" + CRLF)
	aAdd(aLinesProg, "ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿" + CRLF)
	aAdd(aLinesProg, "³ Validar a Estrutura das Tabela SRV                            ³" + CRLF)
	aAdd(aLinesProg, "ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/" + CRLF)
	aAdd(aLinesProg, 'lRet := fNewOldSx3(aSRVHeader, NIL, "SRV", NIL, .F.)' + CRLF + CRLF)

	aAdd(aLinesProg, 'If lRet' + CRLF)
	//RV_TIPOCOD
	//1=Provento;2=Desconto;3=Base (Provento);4=Base (Desconto)

	// Gera a chamada para a funcao //
	cNameFunc :=  'ItensVerba(aVerbas)'
	aAdd(aLinesProg, '		' + cNameFunc + CRLF)

	aAdd(aLinesFunc, "/*/" + CRLF)
	aAdd(aLinesFunc, "ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿" + CRLF)
	aAdd(aLinesFunc, "³Fun??o    ³"+cNameFunc + "³Autor³ Gerado pelo sistema ³ Data ³" + Substr(DtoS(date()),7,2)+"/"+Substr(DtoS(date()),5,2)+"/"+Substr(DtoS(date()),1,4) + "³" + CRLF)
	aAdd(aLinesFunc, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
	aAdd(aLinesFunc, "³Descri??o ³Verbas padroes da tabela SRV                                       ³" + CRLF)
	aAdd(aLinesFunc, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
	aAdd(aLinesFunc, "³Sintaxe   ³                                                                   ³" + CRLF)
	aAdd(aLinesFunc, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
	aAdd(aLinesFunc, "³Parametros³<Vide Parametros Formais>                                          ³" + CRLF)
	aAdd(aLinesFunc, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
	aAdd(aLinesFunc, "³ Uso      ³Generico                                                           ³" + CRLF)
	aAdd(aLinesFunc, "ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/" + CRLF)
	aAdd(aLinesFunc, "Static Function " + cNameFunc + CRLF + CRLF)

	aAdd(aLinesFunc, "DEFAULT aVerbas := {}" + CRLF + CRLF)


	//ITENS DAS VERBAS
	SRV->( dbSetOrder( RetOrdem( "SRV" , "RV_FILIAL+RV_TIPOCOD" ) ) )
	SRV->(dbGoTop())
		While SRV->( !Eof() )

			If !(SRV->RV_TIPOCOD $ cTiposVer)
				If !Empty(cTipoNot)
					cTipoNot += ", "
				EndIf
		   		cTipoNot += SRV->RV_TIPOCOD
			EndIf

			cProg := "aAdd(aVerbas, { "

			For nX := 1 To Len(aIniHdrSRV)
				cValueCampo := ""

				// CAMPO MEMO NORMAL
				If aIniHdrSRV[nX,8] == "M" .and. (aScan(aSRVVirtual, aIniHdrSRV[nX,2]) == 0)
					nLineMemo := MlCount(aIniHdrSRV[nX,2], 80)

					For nY := 1 To nLineMemo
						cValueCampo += AllTrim(MemoLine(aIniHdrSRV[nX,2], 80, nY))
						If nY < nLineMemo
							cValueCampo += ' '
						EndIf
					Next nY

				// CAMPO MEMO GRAVADO EM SYP - VIRTUAL //
				ElseIf aIniHdrSRV[nX,8] == "M" .and. (aScan(aSRVVirtual, aIniHdrSRV[nX,2]) > 0)
					If ((nPosMemo := Ascan(aSRVMemo, { |x|  Upper(x[2]) == aIniHdrSRV[nX,2] })) > 0)
						cValueCampo += MSMM(&(SRV->(aSRVMemo[nPosMemo,1])),80)
						cValueCampo := StrTran(cValueCampo, CRLF, "\13\10")
					EndIf
				ElseIF ( aScan(aSRVVirtual, aIniHdrSRV[nX,2]) > 0 )
					cValueCampo += AllToChar( CriaVar( aIniHdrSRV[nX,2] ) )
				ElseIf aIniHdrSRV[nX,8] == "N"
					cValueCampo += AllTrim(Str(&(aIniHdrSRV[nX,2])))
				ElseIf aIniHdrSRV[nX,8] == "D"
					cValueCampo += 'Ctod("' + DtoC(&(aIniHdrSRV[nX,2])) + '")'
				ElseIf aIniHdrSRV[nX,8] == "L"
					If &(aIniHdrSRV[nX,2])
						cValueCampo += ".T."
					Else
						cValueCampo += ".F."
					EndIf
				Else
					cValueCampo += AllTrim(&(aIniHdrSRV[nX,2]))
				EndIf
				cValueCampo := StrTran(cValueCampo, "'", '"')

				If (aIniHdrSRV[nX,8] != "N") .and. (aIniHdrSRV[nX,8] != "D") .and. (aIniHdrSRV[nX,8] != "L")
					cValueCampo := "'" + cValueCampo
					cValueCampo += "'"
				EndIf

				cProg += cValueCampo
				If nX < Len(aIniHdrSRV)
					cProg += ","
				EndIf
			Next nX
			cProg += "} )"

			If SRV->RV_TIPOCOD $ ("1/2/3/4")
				aAdd(aLinesFunc, cProg + CRLF)
			Endif

			SRV->(dbSkip())

		Enddo
		aAdd(aLinesFunc, CRLF)
		aAdd(aLinesFunc, 'Return( NIL )')

	 	aAdd(aLinesProg, CRLF)
		aAdd(aLinesProg, 'EndIf' + CRLF + CRLF)
		aAdd(aLinesProg, 'Return( NIL )' + CRLF + CRLF)

		If !Empty(cTipoNot)
			MsgInfo( OemToAnsi(STR0092) + cTipoNot + CRLF + OemToAnsi(STR0093) + CRLF + CRLF +OemToAnsi(STR0094) , OemToAnsi(STR0095) ) // "O(s) Tipo(s) de Verbas  " "não está(ão) cadastrado(s) no ComboBox do Campo RV_TIPOCOD." "O Arquivo nao foi Gerado!" "Aviso!"
		Else

			//TRANSFERIR AS LINHAS PARA DENTRO DO PROGRAMA
		    For nX := 1 To Len(aLinesProg)
			    Fwrite( nArq, aLinesProg[nX] )
			Next nX
		    For nX := 1 To Len(aLinesFunc)
			    Fwrite( nArq, aLinesFunc[nX] )
			Next nX

			MsgInfo( OemToAnsi(STR0096) + cArquivo + CRLF + OemToAnsi(STR0097)  ) // "O Programa " "para Cadastro de Verbas Padroes foi Gerado com Sucesso"
		EndIf

		FClose(nArq)

End Sequence

Return(NIL)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fWhenEmpConsºAutor ³Leandro Drumond    º Data ³ 29/10/2012  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ WHEN do campo RV_EMPCONS.                                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPE                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fWhenEmpCons(oStruct)
Local lRet := .T.
Local cAliasQry	:= GetNextAlias()
Local cFilTab := "%" + fwjoinfilial("SRV","SRK") + "%"

BeginSql alias cAliasQry
	SELECT COUNT(*) AS CONT
	FROM 		%table:SRK% SRK
	INNER JOIN %table:SRV% SRV ON SRV.RV_COD = SRK.RK_PD AND SRV.%NotDel% AND %exp:cFilTab%
	WHERE 		SRK.RK_PD = %exp:oStruct:GetValue("RV_COD") %
				AND SRK.%NotDel%
EndSql

If !(cAliasQry)->(Eof())
	lRet := (oStruct:GetValue("RV_EMPCONS") <> "1") .Or. (cAliasQry)->CONT == 0
EndIf
(cAliasQry)->(dbCloseArea())
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³VldRVGrpPD ³ Autor ³ Mohanad Odeh          ³ Data ³ 03/05/13  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Valida codigos do grupo de verbas                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA040                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function VldRVGrpPD(cCodigos)
Local lRet	:= .T.
Local nX	:= 0

cCodigos := StrTran(cCodigos, " ","")
For nx := 0 To Len(cCodigos)
	If !(SUBSTR(cCodigos, nx, 1) $ "1234567890")
		lRet := .F.
	EndIf
Next nx

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³f040GrpPD ³ Autor ³ Mohanad Odeh          ³ Data ³ 22/03/13   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Exibir os codigos para criar grupo de verbas                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA040                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function f040GrpPD()
Local cTitulo  		:= OemToAnsi(STR0132) // "Grupo de Verbas"
Local MvPar    		:= &(ReadVar())
Local MvParDef 		:= ""
Local MvStrRet		:= ""
Local lRet     		:= .T.
Local l1Elem   		:= .F.
Local nGrupo		:= 0
Local aArea			:= GetArea()

Private aGrpVerba	:= {}

VAR_IXB := MvPar

aGrpVerba := {;
OemToAnsi(STR0133),; //"1 - Grupo 1"
OemToAnsi(STR0134),; //"2 - Grupo 2"
OemToAnsi(STR0135),; //"3 - Grupo 3"
OemToAnsi(STR0136),; //"4 - Grupo 4"
OemToAnsi(STR0137),; //"5 - Grupo 5"
OemToAnsi(STR0138),; //"6 - Grupo 6"
OemToAnsi(STR0139),; //"7 - Grupo 7"
OemToAnsi(STR0140),; //"8 - Grupo 8"
OemToAnsi(STR0141),; //"9 - Grupo 9"
OemToAnsi(STR0142)}  //"0 - Grupo 0"

MvParDef := "1234567890"

If f_Opcoes(@MvPar,cTitulo,aGrpVerba,MvParDef,,,l1Elem)
	For nGrupo := 1 To Len(MvPar)
		If (SubStr(MvPar, nGrupo, 1) # "*")
			MvStrRet += SubStr(mvpar, nGrupo, 1)
		Else
			MvStrRet += Space(1)
		Endif
	Next nGrupo
	VAR_IXB := AllTrim(MvStrRet)
EndIf

RestArea(aArea)
Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³IntegDef   ºAutor  ³Microsiga           º Data ³  21/02/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao de integracao com o adapter EAI para recebimento e   º±±
±±º          ³ envio de informacoes do cadastro de Verbas                  º±±
±±º          ³                                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA040                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function IntegDef( cXML, nTypeTrans, cTypeMessage, cVersion )
Local aRet := {}
aRet:= GPEI040 ( cXml, nTypeTrans, cTypeMessage, cVersion )
Return aRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GP040Memo  ºAutor  ³MOHANAD ODEH        º Data ³  01/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDESC.     ³ INICIALIZADOR DO CAMPO RV_DESMEMO, DO QUAL O CONTEUDO ESTA  º±±
±±º          ³ GRAVADO EM TABELAS .USR NA PASTA PROFILE E NAO NA SYP       º±±
±±º          ³                                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA040                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GP040Memo(oModel)
Local aFilterExp	:= {}
Local cRet			:= ""
Local cCodExpr		:= ""
Local nPos			:= 0
aAdd(aFilterExp, {"FILTRO_ALS", "SRV", NIL, NIL})
aAdd(aFilterExp, {"FILTRO_PRG", FunName(), NIL, NIL})

cCodExpr	:= oModel:GetValue('RV_CODMEMO')

aRetFiltro := FilterBuildExpr(aFilterExp, .F.)
nPos := aScan(aRetFiltro, {|x| x[3] == AllTrim(cCodExpr)})
If nPos > 0
	cRet := aRetFiltro[nPos,2]
EndIf

Return cRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ fRetOpcGPE()  ³ Autor ³ Emerson Campos   ³ Data ³05/08/2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Função para disponibilizar uma lista de opcoes dos codigos ³±±
±±³          ³ de incidencia tributaria da rubrica de acordo coms os      ³±±
±±³          ³ campos 												      ³±±
±±³          ³ RV_INCCP;											      ³±±
±±³          ³ RV_INCIRF;											      ³±±
±±³          ³ RV_INCFGTS ou										      ³±±
±±³          ³ RV_INCSIND											      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Parametro³ cCampo - caracter contendo o nome do campo no qual retorna-³±±
±±³          ³ ra as opcoes correspondentes 						   	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Geral                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ*/
Function fRetOpcGPE(cCampo)
Local cTitulo  := ""
Local MvPar    := ""
Local MvParDef := ""
Local lRet     := .T.
Local l1Elem   := .T.
Local lIncRPP  := .F.
Local aArea    := GetArea()
Local MvStrRet := ""
Local nGrupo   := 0
Local lP1218   := SR8->(ColumnPos("R8_TPPROC")) > 0

Private aOcor:={}

cAlias 	:= Alias() 					// Salva Alias Anterior
MvPar	:=&(Alltrim(ReadVar()))		// Carrega Nome da Variavel do Get em Questao
MvRet	:=Alltrim(ReadVar())		// Iguala Nome da Variavel ao Nome variavel de Retorno

VAR_IXB := MvPar

lIncRPP := SRV->(ColumnPos("RV_INCRPP")) > 0

//--------------------------------------------------
//| Realiza a atribuicao de valores dentro da lista
//| Caso seja excluído algum dos itens abaixo, deve ser removida
//| da variavel MvParDef o valor removido
//---------------------------------------------------------------
If !Empty(ReadVar())
	//--------------------------------
	//| Programacao do campo RV_INCCP
	//-------------------------------
	If cCampo == 'RV_INCCP' //.AND. Alltrim(ReadVar())= "M->MOTEST"
		cTitulo           := "Cd.Inc.CP"
		AADD(aOcor,	OemToAnsi(STR0143))			//"00=Não é Base de Cálculo;"
		AADD(aOcor,	OemToAnsi(STR0273))			//"01=Não é base de cálculo em função de acordos internacionais de previdência social;"
		AADD(aOcor,	OemToAnsi(STR0144))			//"11=Base de Cálculo do Salário de Contribuição Mensal;"
		AADD(aOcor,	OemToAnsi(STR0145))			//"12=Base de Cálculo da Contrib. Prev. sobre 13o Salário;"

		If cVersEnvio >= '2.3'
			AADD(aOcor, OemToAnsi(STR0281))		//"13=Exclusiva do Empregador - mensal;"
			AADD(aOcor, OemToAnsi(STR0282))		//"14=Exclusiva do Empregador - 13º salário;"
			AADD(aOcor, OemToAnsi(STR0283))		//"15=Exclusiva do segurado - mensal;"
			AADD(aOcor, OemToAnsi(STR0284))		//"16=Exclusiva do segurado - 13º salário;"
		Endif
		If cVersEnvio >= '2.4'
			AADD(aOcor, OemToAnsi(STR0291))	//"95 - Exclusiva do Empregador - mensal;"
			AADD(aOcor, OemToAnsi(STR0292))	//"96 - Exclusiva do Empregador - 13º salário;"
			AADD(aOcor, OemToAnsi(STR0293))	//"97 - Exclusiva do Empregador - Salário maternidade;"
			AADD(aOcor, OemToAnsi(STR0294))	//"98 - Exclusiva do Empregador - Salário maternidade 13º salário"
		Endif

		AADD(aOcor, OemToAnsi(STR0146))			//"21=Base de Cálculo da Contrib. Prev. Sal. Maternidade;"
		AADD(aOcor, OemToAnsi(STR0147))			//"22=Base de Cálculo da Contrib. Prev. Sal. Maternidade - 13o Salário;"

		If cVersGPE < '9.0'
			AADD(aOcor, OemToAnsi(STR0251))		//"23=Base de Cálculo da Contrib. Prev. Auxílo Doença Mensal - Reg.Próprio de Prev.Social;"
			AADD(aOcor, OemToAnsi(STR0252))		//"24=Base de Cálculo da Contrib. Prev. Auxílo Doença 13o Salário Doença - Reg.Próprio de Prev.Social;"
		Endif

		AADD(aOcor, OemToAnsi(STR0269))			//"25=Salário Maternidade mensal pago pelo INSS"
		AADD(aOcor, OemToAnsi(STR0270))			//"26=Salário Maternidade 13º pago pelo INSS"
		AADD(aOcor, OemToAnsi(STR0148))			//"31=Contribuição Descontada do Segurado;"
		AADD(aOcor, OemToAnsi(STR0149))			//"32=Contribuição Descontada do Segurado - 13o Salário;"
		AADD(aOcor, OemToAnsi(STR0219))			//"34=Contribuição Descontada do Segurado - SEST;"
		AADD(aOcor, OemToAnsi(STR0253))			//"35=Contribuição Descontada do Segurado - SENAT;"
		AADD(aOcor, OemToAnsi(STR0152))			//"51=Salário-Família;"

		If cVersGPE < '9.0'
			AADD(aOcor, OemToAnsi(STR0254))		//"61=Complemento de Salário Mínimo - Regime Próprio Previdência Social"
		Endif

		AADD(aOcor, OemToAnsi(STR0153))			//"91=Incid. suspensa em decorrência de decisão judicial (BC SC Mensal);"
		AADD(aOcor, OemToAnsi(STR0154))			//"92=Incid. suspensa em decorrência de decisão judicial (BC 13o Salário);"
		AADD(aOcor, OemToAnsi(STR0201))			//"93=Incid. suspensa em decorrência de decisão judicial (BC Sal. Maternidade)
		AADD(aOcor, OemToAnsi(STR0202))			//"94=Incid. suspensa em decorrência de decisão judicial (BC Sal. Maternidade 13o Salário)
		ASORT(aOcor,,, { |x, y| x < y } )
		MvParDef := "0001111221222324252631323435516191929394"

		If cVersEnvio>='2.3'
			MvParDef := "000111121314151621222324252631323435516191929394"
		Endif
		If cVersEnvio>='2.4'
			If cVersGPE < '9.0'
				MvParDef := "00011112131415162122232425263132343551619192939495969798"
			Else
				MvParDef := "00011112131415162122252631323435519192939495969798"
			Endif
		Endif
	//---------------------------------
	//| Programacao do campo RV_INCIRF
	//---------------------------------
	ElseIf cCampo == 'RV_INCIRF'
		cTitulo           := "Cd.Inc. IRRF"
		AADD(aOcor, OemToAnsi(STR0155))			//00=Rendimento não tributável;"
		AADD(aOcor, OemToAnsi(STR0268))			//01=Rendimento não tributável em função de acordos internacionais de bitributação;

		If cVersEnvio >= '2.3'
			AADD(aOcor,	OemToAnsi(STR0285))		//09=Outras verbas não consideradas como base de cálculo ou rendimento;
		Endif

		AADD(aOcor, OemToAnsi(STR0156))			//11=Base de Cálculo do IRRF - Mensal;"
		AADD(aOcor, OemToAnsi(STR0157))			//12=Base de Cálculo do IRRF - 13o Salário;"
		AADD(aOcor, OemToAnsi(STR0158))			//13=Base de Cálculo do IRRF - Férias;"
		AADD(aOcor, OemToAnsi(STR0159))			//14=Base de Cálculo do IRRF - PLR;"
		AADD(aOcor, OemToAnsi(STR0220))			//15=Base de Cálculo do IRRF - RRA;"
		AADD(aOcor, OemToAnsi(STR0160))			//31=Valor do IRRF - Mensal;"
		AADD(aOcor, OemToAnsi(STR0161))			//32=Valor do IRRF - 13o Salário;"
		AADD(aOcor, OemToAnsi(STR0162))			//33=Valor do IRRF - Férias;"
		AADD(aOcor, OemToAnsi(STR0163))			//34=Valor do IRRF - PLR;"
		AADD(aOcor, OemToAnsi(STR0247))			//35=Valor do IRRF - RRA;"
		AADD(aOcor, OemToAnsi(STR0221))			//41=Previdencia Social Oficial - Remuneração Mensal;
		AADD(aOcor, OemToAnsi(STR0222))    		//42=Previdencia Social Oficial - 13o Salário;
		AADD(aOcor, OemToAnsi(STR0223))    		//43=Previdencia Social Oficial - Férias;
		AADD(aOcor, OemToAnsi(STR0225))    		//44=Previdencia Social Oficial - RRA
		AADD(aOcor, OemToAnsi(STR0226))    		//46=Previdencia privada- Remuneração Mensal;
		AADD(aOcor, OemToAnsi(STR0248))    		//47=Previdencia privada- 13o Salário;
		AADD(aOcor, OemToAnsi(STR0227))    		//51=Pensão Alimentícia - Remuneração Mensal;
		AADD(aOcor, OemToAnsi(STR0228))    		//52=Pensão Alimentícia - 13o Salário;
		AADD(aOcor, OemToAnsi(STR0229))    		//53=Pensão Alimentícia - Férias;
		AADD(aOcor, OemToAnsi(STR0224))    		//54=Pensão Alimentícia - PLR;
		AADD(aOcor, OemToAnsi(STR0230))    		//55=Pensão Alimentícia - RRA;
		AADD(aOcor, OemToAnsi(STR0234))    		//61=FAPI - Remuneração Mensal;
		AADD(aOcor, OemToAnsi(STR0235))    		//62=FAPI - 13o Salário;
		AADD(aOcor,		If(lIncRPP, OemToAnsi(STR0332), OemToAnsi(STR0255)))   //63 =Previdência Complementar do Servidor Público - Remuneração mensal; , 63=FUNPRESP - Remuneração Mensal;
		AADD(aOcor,		If(lIncRPP, OemToAnsi(STR0333), OemToAnsi(STR0256)))   //64 =Previdência Complementar do Servidor Público - 13° salário; , 64=FUNPRESP - 13o Salário;

		If lIncRPP
			AADD(aOcor,		OemToAnsi(STR0334))     //65 - Previdência Complementar do Servidor Público - RRA;
			AADD(aOcor,		OemToAnsi(STR0335))     //66 - Previdência Complementar do Servidor Público - Contribuição de Risco;
		Endif

		AADD(aOcor, OemToAnsi(STR0236))			//70=Parcela Isenta 65 anos - Remuneração Mensal;
		AADD(aOcor, OemToAnsi(STR0237))			//71=Parcela Isenta 65 anos - 13º Salário;
		AADD(aOcor, OemToAnsi(STR0238))			//72=Diárias;
		AADD(aOcor, OemToAnsi(STR0257))			//73=Ajuda de Custo;
		AADD(aOcor, OemToAnsi(STR0239))			//74=Indenização e rescisão de contrato, inclusive a título de PDV;
		AADD(aOcor, OemToAnsi(STR0240))			//75=Abono pecuniário;
		AADD(aOcor, OemToAnsi(STR0241))			//76=Pensão, aposentadoria ou reforma por moléstia grave ou acidente em serviço - Remuneração Mensal
		AADD(aOcor, OemToAnsi(STR0242))			//77=Pensão, aposentadoria ou reforma por moléstia grave ou acidente em serviço - 13º
		AADD(aOcor, OemToAnsi(STR0243))			//78=Valores pagos a titular ou sócio de microempresa ou empresa de pequeno porte, exceto pró-labore e aluguéis
		AADD(aOcor, OemToAnsi(STR0244))			//79=Outros (o nome da rubrica deve ser claro para identificação);
		AADD(aOcor, OemToAnsi(STR0245))			//81=Depósito Judicial;
		AADD(aOcor, OemToAnsi(STR0246))			//82=Compensação Judicial do ano calendário;
		AADD(aOcor, OemToAnsi(STR0249))			//83=Compensação Judicial de anos anteriores;
		AADD(aOcor, OemToAnsi(STR0164))			//91=Incidência suspensa em decorrência de decisão judicial (BC IRRF);"
		AADD(aOcor, OemToAnsi(STR0165))			//92=Incidência suspensa em decorrência de decisão judicial (BC IRRF 13o Salário);"
		AADD(aOcor, OemToAnsi(STR0166))			//93=Incidência suspensa em decorrência de decisão judicial (BC IRRF Férias);"
		AADD(aOcor, OemToAnsi(STR0167))			//94=Incidência suspensa em decorrência de decisão judicial (BC IRRF PLR);"
		AADD(aOcor, OemToAnsi(STR0250))			//95=Incidência suspensa em decorrência de decisão judicial (BC IRRF RRA);"

		MvParDef := "000111121314153132333435414243444647515253545561626364707172737475767778798182839192939495"

		If cVersEnvio >= '2.3'
			If !lIncRPP
				MvParDef := "00010911121314153132333435414243444647515253545561626364707172737475767778798182839192939495"
			Else
				MvParDef := "000109111213141531323334354142434446475152535455616263646566707172737475767778798182839192939495"
			Endif

		Endif

	//----------------------------------
	//| Programacao do campo RV_INCFGTS
	//----------------------------------
	ElseIf cCampo == 'RV_INCFGTS'
		cTitulo           := "Cd.Inc.FGTS"
		aOcor := {;
				OemToAnsi(STR0168),;		//"00=Não é Base de Cálculo do FGTS;"
				OemToAnsi(STR0169),;		//"11=Base de Cálculo do FGTS - Mensal;"
				OemToAnsi(STR0258) ;		//"12=Base de Cálculo do FGTS - 13o Salário;"
				}
		If cVersGPE < '9.0'
			aAdd(aOcor, OemToAnsi(STR0259))	//"21=Base de Cálculo do FGTS - Rescisório;"
			aAdd(aOcor, OemToAnsi(STR0170))	//"91=Incidência suspensa em decorrência de decisão judicial;"
		Else
			aAdd(aOcor, OemToAnsi(STR0387))	//"21=Base de cálculo do FGTS aviso prévio indenizado"
			aAdd(aOcor, OemToAnsi(STR0388))	//"91=Incidência suspensa em decorrência de decisão judicial - FGTS mensal"
			aAdd(aOcor, OemToAnsi(STR0389))	//"92=Incidência suspensa em decorrência de decisão judicial - FGTS 13º salário"
			aAdd(aOcor, OemToAnsi(STR0390))	//"93=Incidência suspensa em decorrência de decisão judicial - FGTS aviso prévio indenizado"
		EndIf

		MvParDef := "0011122191"
		If cVersGPE >= '9.0'
			MvParDef := "00111221919293"
		EndIf

	//----------------------------------
	//| Programacao do campo RV_INCSIND
	//----------------------------------
	ElseIf cCampo == 'RV_INCSIND'
		cTitulo           := "Cd.Inc.SIND."
		aOcor := {;
				OemToAnsi(STR0171),;		//"00=Não é base de cálculo;"
				OemToAnsi(STR0172),;		//"11=Base de cálculo;"
				OemToAnsi(STR0173),;		//"31=Valor da contribuição sindical laboral descontada;"
				OemToAnsi(STR0174) ;		//"91=Incidência suspensa em decorrência de decisão judicial"
		          	}
		MvParDef 	:= "00113191"

	//----------------------------------
	//| Programacao do campo RV_INCRPP
	//----------------------------------
	ElseIf cCampo == 'RV_INCRPP'
		cTitulo	:= "Reg.Pro.Prev"

		aOcor := {;
						OemToAnsi(STR0295),;		//00 - Sem incidência para RPPS/regime militar;"
						OemToAnsi(STR0296),;		//01 - Sem incidência em função de acordos internacionais de previdência social;"
						OemToAnsi(STR0297),;		//10 - Do segurado de RPPS/militar e a cargo do ente público - mensal;"
						OemToAnsi(STR0298),;		//11 - Do segurado de RPPS/militar e a cargo do ente público - 13º salário;"
						OemToAnsi(STR0299),;		//12 - Somente para o ente público - mensal;"
						OemToAnsi(STR0300),;		//13 - Somente para o ente público - 13° salário;"
						OemToAnsi(STR0301),;		//14 - Somente do segurado - mensal;"
						OemToAnsi(STR0302),;		//15 - Somente do segurado - 13° salário;"
						OemToAnsi(STR0303),;		//16 - Verbas temporárias - contribuição do segurado e a cargo do ente - mensal;"
						OemToAnsi(STR0304),;		//17 - Verbas temporárias - contribuição do segurado e a cargo do ente - 13º salário;"
						OemToAnsi(STR0305),;		//18 - Verbas temporárias - contribuição somente do segurado - mensal;"
						OemToAnsi(STR0306),;		//19 - Verbas temporárias - contribuição somente do segurado - 13° salário;"
						OemToAnsi(STR0307),;		//20 - Provento/pensão considerado para apuração da parcela excedente a teto RGPS;"
						OemToAnsi(STR0308),;		//21 - Do segurado de RPPS/militar e a cargo do ente público - mensal;"
						OemToAnsi(STR0309),;		//22 - Do segurado de RPPS/militar e a cargo do ente público - 13º salário;"
						OemToAnsi(STR0310),;		//23 - Somente para o ente público - mensal;"
						OemToAnsi(STR0311),;		//24 - Somente para o ente público - 13° salário;"
						OemToAnsi(STR0312),;		//25 - Verbas temporárias - contribuição do segurado e a cargo do ente - mensal;"
						OemToAnsi(STR0313),;		//26 - Verbas temporárias - contribuição do segurado e a cargo do ente - 13º salário;"
						OemToAnsi(STR0314),;		//27 - Verbas temporárias - contribuição somente do segurado - mensal;"
						OemToAnsi(STR0315),;		//28 - Verbas temporárias - contribuição somente do segurado - 13° salário;"
						OemToAnsi(STR0316),;		//31 - Do segurado ativo RPPS/militar - mensal;"
						OemToAnsi(STR0317),;		//32 - Do segurado ativo RPPS/militar - 13º salário;"
						OemToAnsi(STR0318),;		//33 - Do aposentado RPPS/reforma/reserva - mensal;"
						OemToAnsi(STR0319),;		//34 - Do aposentado RPPS /reforma/reserva - 13º salário;"
						OemToAnsi(STR0320),;		//35 - Do pensionista RPPS/militar - mensal;"
						OemToAnsi(STR0321),;		//36 - Do pensionista RPPS/militar - 13º salário;"
						OemToAnsi(STR0322),;		//41 - Do segurado ativo RPPS/militar - mensal;"
						OemToAnsi(STR0323),;		//42 - Do segurado ativo RPPS/militar - 13º salário;"
						OemToAnsi(STR0324),;		//51 - Pensão, aposentadoria ou reforma por moléstia grave ou acidente em serviço - mensal;"
						OemToAnsi(STR0325),;		//52 - Pensão, aposentadoria ou reforma por moléstia grave ou acidente em serviço - 13º salário;"
						OemToAnsi(STR0326),;		//91 - Contribuição do segurado ativo RPPS/militar - mensal;"
						OemToAnsi(STR0327),;		//92 - Contribuição do segurado ativo RPPS/militar - 13º salário;"
						OemToAnsi(STR0328),;		//93 - Contribuição do aposentado/reforma/reserva - mensal;"
						OemToAnsi(STR0329),;		//94 - Contribuição do aposentado/reforma/reserva - 13º salário;"
						OemToAnsi(STR0330),;		//95 - Contribuição do pensionista - mensal;"
						OemToAnsi(STR0331);			//96 - Contribuição do pensionista - 13º salário;"
		          }

		//Variavel contendo todas as opcoes acima
		MvParDef := "00011011121314151617181920212223242526272831323334353641425152919293949596"

	//----------------------------------
	//| Programacao do campo RV_INCOP
	//----------------------------------
	ElseIf cCampo == 'RV_INCOP'
		cTitulo	:= "Cd.Inc.RPPS"
		
		aOcor := {;
					OemToAnsi(STR0391),;		//"00 - Não é base de cálculo de contribuições devidas ao RPPS/regime militar"
					OemToAnsi(STR0392),;		//"11 - Base de cálculo de contribuições devidas ao RPPS/regime militar"
					OemToAnsi(STR0393),;		//"12 - Base de cálculo de contribuições devidas ao RPPS/regime militar - 13º salário"
					OemToAnsi(STR0394),;		//"31 - Contribuição descontada do segurado e beneficiário"
					OemToAnsi(STR0395),;		//"32 - Contribuição descontada do segurado e beneficiário 13º salário"
					OemToAnsi(STR0396), ;		//"91 - Suspensão de incidência em decorrência de decisão judicial"
					OemToAnsi(STR0417);			//"92 - Suspensão de incidência em decorrência de decisão judicial - 13º salário"
		}

		MvParDef := "00111231329192"

	EndIf

	If f_Opcoes(@MvPar,cTitulo,aOcor,MvParDef,,,l1Elem,2)
		For nGrupo := 1 To Len(MvPar)
			If (SubStr(MvPar, nGrupo, 2) # "*")
				MvStrRet += SubStr(mvpar, nGrupo, 1)
			Else
				MvStrRet += Space(1)
			Endif
		Next nGrupo
		VAR_IXB := AllTrim(MvStrRet)
	EndIf

	If MvStrRet $ MvParDef
		lRet := .T.
	Else
		lRet := .F.
	EndIf

EndIf
RestArea(aArea)
Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³ fValINCCP()    ³Autor  ³Emerson Campos      ³ Data ³ 07/08/2013  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Funcao de validação do campo RV_INCCP         				   º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ SX3                                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fValINCCP()
Local lRet		:= .T.
Local cVerba	:= ''
Local aVerba	:= {}
Local lValid	:= .T.
Local lP1218	:= SR8->(ColumnPos("R8_TPPROC")) > 0

If cVersEnvio>='2.3'
	If cVersGPE < '9.0'
		cVerba := "  #00#01#11#12#13#14#15#16#21#22#23#24#25#26#31#32#34#35#51#61#91#92#93#94"
	Else
		cVerba := "  #00#01#11#12#13#14#15#16#21#22#25#26#31#32#34#35#51#91#92#93#94"
	Endif
Else
	cVerba := "  #00#01#11#12#21#22#23#24#25#26#31#32#34#35#51#61#91#92#93#94"
Endif
if cVersEnvio>='2.4'
	cVerba:= cVerba+"#95#96#97#98"
EndIf
aVerba := STRTOKARR(cVerba,"#")

lValid	:= Iif( aScan(aVerba, M->RV_INCCP) > 0, .T., .F.)

If lValid
	If M->RV_INCCP	$ ('31#32#33#34') .And. M->RV_CODFOL <> '1412' .And. !(M->RV_TIPOCOD $ '2*3')
		lRet := .F.
		Help( , , 'HELP', , OemToAnsi(STR0175), 1, 0 )//"Se selecionar as opções 31/32/33/34 no campo 'Cd.Inc.CP'  (Cod.Incidencia Ctr.Prev.)  o campo 'Tipo de Cod' deverá ser obrigatoriamente igual a 2-DESCONTO."
	EndIf

	If M->RV_INCCP == '51' .AND. !M->RV_TIPOCOD $ '1/3'
		lRet	:= .F.
		Help( , , 'HELP', , OemToAnsi(STR0177), 1, 0 )//"Se o código escolhido no  campo 'Cd.Inc.CP (Cod.Incidencia Ctr.Prev.)  for igual à 51 - Salário-Família, o conteúdo do campo 'Tipo de Cod', deverá ser obrigatoriamente igual a 1-PROVENTO."
	EndIf

ElseIf lValid == .F.
	//Caso o usuário informe um código que não existe na tabela
	lRet := .F.
	If M->RV_INCCP $ '23|24|61'
		Help( , , 'HELP', , OemToAnsi(STR0401), 1, 0 ) //O conteúdo 23, 23, 41 não pode mais ser usado no Leiaute S-1.0.
	Else
		Help( , , 'HELP', , OemToAnsi(STR0272), 1, 0 ) //Informe um código válido
	EndIf
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³ fValIRRF		 ³Autor  ³Emerson Campos      ³ Data ³ 07/08/2013  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Funcao de validação do campo RV_INCIRF         				   º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ SX3                                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fValIRRF()
Local lRet		:= .T.
Local cVerba	:= ''
Local cIncIRF	:= ""
Local cPDDesc	:= ""
Local aVerba	:= {}
Local lValid	:= .T.
Local lP1218	:= SR8->(ColumnPos("R8_TPPROC")) > 0
Local lIncRPP	:= SRV->(ColumnPos("RV_INCRPP")) > 0

	If cVersGPE >= '9.0'
		lRet := ValidRCC('S138', M->RV_INCIRF, 1, 4)
	Else
		If cVersEnvio >= "2.6.00"
			cVerba := '0   #1   #9   #11  #12  #13  #14  #15  #31  #32  #33  #34  #35  #41  #42  #43  #44  #46  #47  #48  #51  #52  #53  #54  #55  #61  #62  #63  #64  #65  #66  #67  #70  #71  #72  #73  #74  #75  #76  #77  #78  #700 #701 #79  #81  #82  #83  #899 #91  #92  #93  #94  #95  #9011#9012#9013#9014#9031#9032#9033#9034#9041#9042#9043#9046#9047#9048#9051#9052#9053#9054#9061#9062#9063#9064#9065#9066#9067'
		ElseIf cVersEnvio >= '2.3'
			If !lIncRPP //2.5 atual
				cVerba	:= '  #00#01#09#11#12#13#14#15#31#32#33#34#35#41#42#43#44#46#47#51#52#53#54#55#61#62#63#64#70#71#72#73#74#75#76#77#78#79#81#82#83#91#92#93#94#95'
			Else
				cVerba	:= '  #00#01#09#11#12#13#14#15#31#32#33#34#35#41#42#43#44#46#47#51#52#53#54#55#61#62#63#64#65#66#70#71#72#73#74#75#76#77#78#79#81#82#83#91#92#93#94#95'
			Endif
		Else
			cVerba	:= '  #00#01#11#12#13#14#15#31#32#33#34#35#41#42#43#44#46#47#51#52#53#54#55#61#62#63#64#70#71#72#73#74#75#76#77#78#79#81#82#83#91#92#93#94#95'
		Endif

		If cVersEnvio >= '2.6.00'
			cIncIRF := M->RV_INCIRF
			cPDDesc	:= '31  #32  #33  #34  #35  '
		Else
			If Len((Alltrim(M->RV_INCIRF)))> 2
				lValid := .F.
			Endif
			cIncIRF := Substr(M->RV_INCIRF,1,2)
			cPDDesc := '31#32#33#34#35'
		Endif

		If lValid
			aVerba := STRTOKARR(cVerba,"#")
			lValid := Iif( aScan(aVerba,cIncIRF) > 0, .T., .F.)
		Endif

		If lValid
			If cIncIRF $ cPDDesc .AND. M->RV_TIPOCOD <> '2'
				/*Se selecionar as opções no campo 'Cd.Inc. IRRF' (Cod. Incidencia IRRF), o campo 'Tipo de Cod' deverá ser obrigatoriamente igual a 2-DESCONTO."	*/
				lRet := .F.
				Help( , , 'HELP', , OemToAnsi(STR0178), 1, 0 )
			EndIf
		ElseIf lValid == .F.
			//Caso o usuário informe um código que não existe na tabela
			lRet := .F.
			Help( , , 'HELP', , OemToAnsi(STR0272), 1, 0 ) //Informe um código válido
		EndIf
	EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³ fValISIND		 ³Autor  ³Marcos Coutinho      ³ Data ³ 16/03/2017  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Funcao de validação do campo RV_INCSIND                          º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ SX3                                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fValISIND()
Local lRet	:= .T.
Local cVerba := "  #00#11#31#91"
Local aVerba := STRTOKARR(cVerba,"#")
Local lValid := Iif( aScan(aVerba, M->RV_INCSIND) > 0, .T., .F.)

If !lValid
	//Caso o usuário informe um código que não existe na tabela
	lRet := .F.
	Help( , , 'HELP', , OemToAnsi(STR0272), 1, 0 ) //Informe um código válido
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³ fValIFGTS		 ³Autor  ³Marcos Coutinho      ³ Data ³ 16/03/2017  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Funcao de validação do campo RV_INCFGTS                          º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ SX3                                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fValIFGTS()
Local lRet	:= .T.
Local cVerba := "  #00#11#12#21#91"
Local aVerba := {}
Local lValid := .T.

	cVerba += If(cVersGPE >= '9.0', "#92#93", "")
	aVerba := STRTOKARR(cVerba,"#")
	lValid := Iif( aScan(aVerba, M->RV_INCFGTS) > 0, .T., .F.)
	If !lValid
		//Caso o usuário informe um código que não existe na tabela
		lRet := .F.
		Help( , , 'HELP', , OemToAnsi(STR0272), 1, 0 ) //Informe um código válido
	EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³ fValNatur()	 ³Autor  ³Emerson Campos      ³ Data ³ 07/08/2013  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Funcao facilitadora de primeiro preenchimento dos campos         º±±
±±º         ³ RV_INCCP, RV_INCIRF, RV_INCFGTS e RV_INCSIND                     º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ SX3                                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fValNatur()
Local aArea:= GetArea()
Local lRet	:= .F.

If Select("RCC")>0
	RCC->(DbCloseArea())
Endif

lRet := Vazio() .OR. ValidRCC('S047',M->RV_NATUREZ,1,4)  //Valida o campo natureza

//Facilitador de primeiro preenchimento do campo RV_INCCP
If !Empty(M->RV_NATUREZ)
	//If AllTrim(cReadVar) $ ("M->RV_NATUREZ#M->RV_CODFOL#M->RV_INSS#M->RV_REF13")
		If M->RV_CODFOL == '0034' .AND. M->RV_TIPOCOD == '1'
			M->RV_INCCP	:= '51'
		ElseIf M->RV_CODFOL	$ ('0040#0407#0927')
			M->RV_INCCP	:= '21'
		ElseIf M->RV_CODFOL $ ("0064#0065") .AND. M->RV_TIPOCOD == '2'
			M->RV_INCCP	:= '31'
		ElseIf M->RV_CODFOL == '0070' .AND. M->RV_TIPOCOD == '2'
			M->RV_INCCP	:= '32'
		ElseIf M->RV_CODFOL == '0200' .AND. M->RV_TIPOCOD == '2'
			M->RV_INCCP	:= '34'
		ElseIf M->RV_CODFOL == '0201' .AND. M->RV_TIPOCOD == '2'
			M->RV_INCCP	:= '34'
		ElseIf M->RV_INSS ==  'S' .AND. M->RV_REF13 == 'S'
			M->RV_INCCP	:= '12'
		ElseIf 	M->RV_INSS ==  'S' .AND. M->RV_REF13 == 'N'
			M->RV_INCCP	:= '11'
		EndIf
	//EndIf
EndIf

//Facilitador de primeiro preenchimento do campo RV_INCIRF
If Empty(M->RV_INCIRF) .AND. !Empty(M->RV_NATUREZ)
	//If AllTrim(cReadVar) $ ("M->RV_NATUREZ#M->RV_CODFOL#M->RV_REF13#M->RV_IR#M->RV_REFFER")
		If M->RV_CODFOL == '0066' .AND. M->RV_TIPOCOD == '2'
			M->RV_INCIRF	:= '31'
		ElseIf M->RV_CODFOL	== '0067' .AND. M->RV_TIPOCOD == '2'
			M->RV_INCIRF	:= '33'
		ElseIf M->RV_CODFOL == '0071' .AND. M->RV_TIPOCOD == '2'
			M->RV_INCIRF	:= '32'
		ElseIf M->RV_CODFOL == '0151'
			M->RV_INCIRF	:= '14'
		ElseIf M->RV_CODFOL == '0152' .AND. M->RV_TIPOCOD == '2'
			M->RV_INCIRF	:= '34'
		ElseIf M->RV_REF13 == 'S' .AND. M->RV_IR == 'S' .AND. M->RV_REFFER == 'N'
			M->RV_INCIRF	:= '12'
		ElseIf M->RV_REF13 == 'N' .AND. M->RV_IR == 'S' .AND. M->RV_REFFER == 'S'
			M->RV_INCIRF	:= '13'
		ElseIf M->RV_REF13 == 'N' .AND. M->RV_IR == 'S' .AND. M->RV_REFFER == 'N'
			M->RV_INCIRF	:= '11'
		EndIf
	//EndIf
EndIf

//Facilitador de primeiro preenchimento do campo RV_INCFGTS
If Empty(M->RV_INCFGTS) .AND. !Empty(M->RV_NATUREZ)
	//If AllTrim(cReadVar) $ ("M->RV_NATUREZ#M->RV_FGTS")
		If M->RV_FGTS == 'S'
			M->RV_INCFGTS	:= '11'
		EndIf
	//EndIf
EndIf

//Facilitador de primeiro preenchimento do campo RV_INCSIND
If Empty(M->RV_INCSIND) .AND. !Empty(M->RV_NATUREZ)
	//If AllTrim(cReadVar) $ ("M->RV_NATUREZ#M->RV_CODFOL#M->RV_SINDICA")
		If M->RV_CODFOL $ ("0068#0069#0175")
			M->RV_INCSIND	:= '31'
		ElseIf M->RV_SINDICA == 'S'
			M->RV_INCSIND	:= '11'
		EndIf
	//EndIf
EndIf
RestArea(aArea)
Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FRCCParametros ºAutor³Microsiga         º Data ³  06/08/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Apresenta a consulta padrao conforme o tipo de verba para   º±±
±±º          ³ o homolognet                                                º±±
±±º          ³                                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA040                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FRCCParametros()
Local lRet 		:= .F.
Local cTipoCod	:= M->RV_TIPOCOD
Local lGpem610	:= .F.

If Select("RCC")>0
	RCC->(DbCloseArea())
	dbSelectArea("RCC")
Endif

If M->RV_TIPOCOD =='2' .Or. M->RV_CODFOL == '0210'
	lGpem610 := .T.
	cTipoCod := '2'
EndIf

If lGpem610
	lRet := GPEM601V04(cTipoCod,0,M->RV_HOMOLOG)
EndIf

lRet := ConPad1(,,,"S20")

Return lRet




/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³ gpea040fDesc3  ³Autor  ³Gpe Santacruz       ³ Data ³ 07/09/2015  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Descripcion del Codigo de concepto para sig mes  			      º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ X3_RELACAO del campo RV_DESMSEG                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function gpea040fDesc3

Local aArea		:= GetArea()
LOCAL nPosreg:=SRV->(RECNO())
Local cCod:=SRV->RV_CODMSEG
Local cDesc:=''
SRV->(DBSETORDEr(1))
if SRV->(DBSEEK(XFILIAL("SRV")+cCod))
   cDesc:=SRV->RV_DESC
ENDIF


SRV->(DBGOTO(nPosreg))
RestArea( aArea )
Return( cDesc )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³f040ContPr³ Autor ³ Claudinei Soares    ³ Data ³ 23/03/17   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Exibir os codigos dos tipos de contribuições               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA040 - AUDESP                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function f040ContPr()
Local cTitulo  		:= OemToAnsi(STR0279) // "Contribuições Previdênciárias"
Local MvPar    		:= &(ReadVar())
Local MvParDef 		:= ""
Local MvStrRet		:= ""
Local lRet     		:= .T.
Local l1Elem   		:= .F.
Local nGrupo		:= 0
Local aArea			:= GetArea()
Local aContPr			:= {}

Private aGrpVerba	:= {}

VAR_IXB := MvPar

aContPr := {;
OemToAnsi(STR0280),; //"0 - Valor pago de FGTS."
OemToAnsi(STR0275),; //"1 - Valor pago de contribuição ao regime geral de previdência relativo a agentes políticos."
OemToAnsi(STR0276),; //"2 - Valor pago de contribuição ao regime próprio de previdência relativo a agentes políticos."
OemToAnsi(STR0277),; //"3 - Valor pago de contribuição ao regime geral de previdência relativo a agentes não políticos."
OemToAnsi(STR0278)}  //"4 - Valor pago de cintribuição ao regime próprio de previdência relativo a agentes não políticos."

MvParDef := "01234"

If f_Opcoes(@MvPar,cTitulo,aContPr,MvParDef,,,l1Elem)
	For nGrupo := 1 To Len(MvPar)
		If (SubStr(MvPar, nGrupo, 1) # "*")
			MvStrRet += SubStr(mvpar, nGrupo, 1)
		Else
			MvStrRet += Space(1)
		Endif
	Next nGrupo
	VAR_IXB := AllTrim(MvStrRet)
EndIf

RestArea(aArea)
Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³VldRVPrv ³ Autor ³ Claudinei Soares    ³ Data ³ 23/03/17  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Valida codigos do campo RV_INSSJUB                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA040 - AUDESP                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function VldRVPrv(cCodigos)
Local lRet	:= .T.
Local nX	:= 0

cCodigos := StrTran(cCodigos, " ","")
For nx := 0 To Len(cCodigos)
	If !(SUBSTR(cCodigos, nx, 1) $ "01234")
		lRet := .F.
	EndIf
Next nx

Return lRet

/*/{Protheus.doc} fTemAlt
//Verifica se campos que vão no XML do esocial sofreram alteração, caso não tenham sofrido alteração não é necessário enviar o xml
@author flavio.scorrea
@since 21/05/2018
/*/
Static Function fTemAlt(oModel)
Local lRet		:= .F.
Local aCampos 	:= {'RV_DESCDET', 'RV_DESC', 'RV_NATUREZ', 'RV_INCIRF', 'RV_INCFGTS', 'RV_INCCP'}
Local nI		:= 1

	If cVersEnvio >= '9.0'
		aAdd(aCampos, 'RV_INCOP')
		aAdd(aCampos, 'RV_TETOP')
	Else
		aAdd(aCampos, 'RV_INCSIND')
	EndIf

	If nOpcAx == 4
		For nI := 1 To Len(aCampos)
			If oModel:IsFieldUpdated(aCampos[nI])
				lRet := .T.
				Exit
			EndIf
		Next nI
	Else
		lRet := .T.
	EndIf
Return lRet

/*/{Protheus.doc}fOpInfSal
Opcoes de InfSal - Bolivia
@author Gabriel de Souza Almeida
@since 31/10/2016
@version P12
/*/
Function fOpInfSal()

	Local cTitulo	:= ""
	Local MvParDef	:= ""
	Local MvPar
	Local lRet	    := .T.

	Private aInc	:={}

	aInc		:=	{STR0118,STR0119,STR0120,STR0121,STR0122,STR0123,STR0124,STR0125,STR0126,STR0127,STR0128,STR0129,STR0130}
					//"Provento"###"Antiguidade"###H.Extras"###"Bonus Produc"###
					//"Dominical"###"Outr.Bonus"###"AFP"###"RC-IVA"###"Outr.Desc"###
					//"Fundo Solid"###"Desabilitado, utilizar opção N=Sindicato"###"Sindicato"###"Nenhuma"
	MvParDef	:=	"ABCDEFHIJKLN"
	cTitulo		:=	STR0131  //"Informe tipo de Inf. Suel."

	f_Opcoes(@MvPar,cTitulo,aInc,MvParDef,12,49,.T.) // Chama funcao f_Opcoes

	VAR_IXB := MvPar // Devolve Resultado

Return .T.

/*/{Protheus.doc} fValIncRPP
Funcao de validação do campo RV_INCRPP
@author Claudinei Soares
@since 24/08/2018
@version 1.0
@return lRet  	 - Indica é permitida a inclusão da opção
/*/
Function fValIncRPP()
Local lRet		:= .T.
Local cVerbas	:= ''
Local aVerbas	:= {}
/*	//00 - Sem incidência para RPPS/regime militar
	//01 - Sem incidência em função de acordos internacionais de previdência social
	//10 - Do segurado de RPPS/militar e a cargo do ente público - mensal
	//11 - Do segurado de RPPS/militar e a cargo do ente público - 13º salário
	//12 - Somente para o ente público - mensal
	//13 - Somente para o ente público - 13° salário
	//14 - Somente do segurado - mensal
	//15 - Somente do segurado - 13° salário
	//16 - Verbas temporárias - contribuição do segurado e a cargo do ente - mensal
	//17 - Verbas temporárias - contribuição do segurado e a cargo do ente - 13º salário
	//18 - Verbas temporárias - contribuição somente do segurado - mensal
	//19 - Verbas temporárias - contribuição somente do segurado - 13° salário
	//20 - Provento/pensão considerado para apuração da parcela excedente a teto RGPS
	//21 - Do segurado de RPPS/militar e a cargo do ente público - mensal
	//22 - Do segurado de RPPS/militar e a cargo do ente público - 13º salário
	//23 - Somente para o ente público - mensal
	//24 - Somente para o ente público - 13° salário
	//25 - Verbas temporárias - contribuição do segurado e a cargo do ente - mensal
	//26 - Verbas temporárias - contribuição do segurado e a cargo do ente - 13º salário
	//27 - Verbas temporárias - contribuição somente do segurado - mensal
	//28 - Verbas temporárias - contribuição somente do segurado - 13° salário
	//31 - Do segurado ativo RPPS/militar - mensal
	//32 - Do segurado ativo RPPS/militar - 13º salário
	//33 - Do aposentado RPPS/reforma/reserva - mensal
	//34 - Do aposentado RPPS /reforma/reserva - 13º salário
	//35 - Do pensionista RPPS/militar - mensal
	//36 - Do pensionista RPPS/militar - 13º salário
	//41 - Do segurado ativo RPPS/militar - mensal
	//42 - Do segurado ativo RPPS/militar - 13º salário
	//51 - Pensão, aposentadoria ou reforma por moléstia grave ou acidente em serviço - mensal
	//52 - Pensão, aposentadoria ou reforma por moléstia grave ou acidente em serviço - 13º salário
	//91 - Contribuição do segurado ativo RPPS/militar - mensal
	//92 - Contribuição do segurado ativo RPPS/militar - 13º salário
	//93 - Contribuição do aposentado/reforma/reserva - mensal
	//94 - Contribuição do aposentado/reforma/reserva - 13º salário
	//95 - Contribuição do pensionista - mensal
	//96 - Contribuição do pensionista - 13º salário
*/
cVerbas	:= '  #00#01#10#11#12#13#14#15#16#17#18#19#20#21#22#23#24#25#26#27#28#31#32#33#34#35#36#41#42#51#52#91#92#93#94#95#96'

aVerbas	:= strToArray(cVerbas, "#")
If !aScan(aVerbas,{|x| x == M->RV_INCRPP})>0
	lRet:= .F.
	Help( , , 'HELP', , OemToAnsi(STR0272), 1, 0 )//Informe um código válido
EndIf

Return lRet

/*/{Protheus.doc} fAlert1010
Funcao para exibição de alerta e link para o TDN ao incluir/alterar uma verba
@author Claudinei Soares
@since 08/10/2018
@version 1.0
@return Nil
/*/
Static Function fAlert1010( cCompet )

Local oDlg			:= NIL
Local oBtFechar		:= NIL
Local oBtTDN		:= NIL
Local oGroup		:= NIL

DEFINE FONT oFont  NAME "Arial" SIZE 0,-11 BOLD
DEFINE FONT oFont1 NAME "Arial" SIZE 0,-11

DEFINE MSDIALOG oDlg FROM  094,001 TO 400,600 TITLE OemToAnsi( STR0017 ) PIXEL Style 128 //--"Atenção!"

		@ 010 , 015 SAY OemToAnsi(STR0377) 	SIZE 150,17 OF oDlg PIXEL FONT oFont//"Informe o período inicial de vigência (AAAAMM):"
		@ 010 , 160 MSGET cCompet 			SIZE 126,07 OF oDlg PIXEL FONT oFont1 WHEN .T. PICTURE "@!" VALID (!Empty(cCompet) .And. fVldMesAno(cCompet, 2))

		@ 030,015	GROUP oGroup TO 120,285 LABEL OemToAnsi(STR0337)  OF oDlg PIXEL //"Alteração/Inclusão de Rubrica"
		oGroup:oFont:=oFont

		@ 040 , 030 SAY OemToAnsi(STR0338)	SIZE 300,15 OF oDlg PIXEL FONT oFont1 //"A chave dos eventos de tabela é composta pelo código da tabela e a data de início da vigência."
		@ 050 , 030 SAY OemToAnsi(STR0339)	SIZE 300,15 OF oDlg PIXEL FONT oFont1 //"Assim, quando é efetuada uma alteração em uma verba, caso a data de início informada já existir"
		@ 060 , 030 SAY OemToAnsi(STR0340)	SIZE 300,15 OF oDlg PIXEL FONT oFont1 //"no evento S-1010, será gerado um evento de retificação; caso contrário, será efetuado um"
		@ 070 , 030 SAY OemToAnsi(STR0341)	SIZE 300,15 OF oDlg PIXEL FONT oFont1 //"evento de inclusão, ou seja, será criado um novo registro com outra validade."
		@ 090 , 030 SAY OemToAnsi(STR0342)	SIZE 300,15 OF oDlg PIXEL FONT oFont1 //"Importante observar que, se informar uma data que já exista fechamento da folha, será necessário "
		@ 100 , 030 SAY OemToAnsi(STR0343)	SIZE 300,15 OF oDlg PIXEL FONT oFont1 //"reabrir a folha de pagamento (evento S-1298) e retificar os eventos periódicos (S-1200 e S-1210)."

		@ 130, 210 BUTTON oBtTDN PROMPT STR0378 SIZE 037, 012 OF oDlg PIXEL//"Abrir TDN"
		@ 130, 250 BUTTON oBtFechar PROMPT "OK" SIZE 037, 012 OF oDlg PIXEL

		oBtTDN:bLClicked 	:= {|| ShellExecute("open","http://tdn.totvs.com/x/K4kdGQ","","",1) }
		oBtFechar:bLClicked := {|| Iif(!Empty(cCompet) .And. fVldMesAno(cCompet, 2), oDlg:End(), Nil) }
		oDlg:lEscClose     	:= .F.

ACTIVATE DIALOG oDlg CENTERED

Return (Nil)

/*/{Protheus.doc} fValidVerb
Valida se não existe alguma das verbas obrigatórias informadas na documentação
http://tdn.totvs.com/x/F5r1H
@author gabriel.almeida
@since 31/07/2019
@version 1.0
/*/
Static Function fValidVerb(aCodFol)
	Local lTemVerbas := .F.
	Local nId        := 0

	If !( SRV->( MsSeek( xFilial("SRV") ) ) )
		Return lTemVerbas
	EndIf

	For nId := 1680 To 1721
		If ( lTemVerbas := Empty(aCodFol[nId,1]) )
			Exit
		EndIf
	Next nId
Return lTemVerbas

/*/{Protheus.doc} fIntVerbas
Integra verbas criadas automaticamente pelos IDs em fCriaVerbas a partir dos recnos
@author  isabel.noguti
@since   23/08/2019
@version 12.1.25
/*/
Static Function fIntVerbas(aRecnoSRV)
	Local aFilInTaf		:= {}
	Local cAnoMes		:= MesAno(dDatabase)
	Local cMesAno		:= Substr(cAnoMes,5,2) + Substr(cAnoMes,1,4)
	Local lExclu		:= !Empty(xFilial("SRV"))
	Local oDlg
	Local lIntegSRV		:= .F.
	Local bOk			:= { || lIntegSRV := .T., oDlg:End() }
	Local bFecha		:= { || oDlg:End() }
	Local bValid		:= { || fVldMesAno(cMesAno,1) }
	Local aAdvSize		:= MsAdvSize()
	Local aInfo			:= {}
	Local aPosObj		:= {}
	Local aObjects		:= {}
	Local aArrayFil		:= {}

	Private aLogProc	:= {}
	Private nContador	:= 0
	Private nContErr	:= 0

	aAdvSize[5] := 381.2
	aAdvSize[6] := 183.6
	aInfo := { aAdvSize[1], aAdvSize[2], aAdvSize[3], aAdvSize[4], 20, 0 }
	AAdd( aObjects, { 0, 1, .T., .T. } )
	aPosObj := MsObjSize( aInfo, aObjects, .T. )

	DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0260) FROM aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL							//"Integração - TAF"

		TSay():New(aPosObj[1, 1], aPosObj[1, 2], {|| OemToAnsi(STR0357)}, oDlg,,, .F., .F., .F., .T.,,, 80, 10, .F., .F., .F., .F., .F.)	//"Competência inicial dos eventos"
		TGet():New(aPosObj[1, 1] - 1, aPosObj[1, 2] + 80, {|u| If(PCount() == 0, cMesAno, cMesAno := u)}, oDlg, 30, 10,"999999",bValid,,,,,, .T.,,,,,,, .F.,,, "cMesAno")
		TButton():New(aPosObj[1, 1] + 30, aPosObj[1, 2] + 70,	OemToAnsi(STR0362), oDlg, bFecha,26,11,,,.F.,.T.,.F.,,.F.,,,.F. )	//"Cancelar"
		TButton():New(aPosObj[1, 1] + 30, aPosObj[1, 2] + 100,	OemToAnsi(STR0363), oDlg, bOk,26,11,,,.F.,.T.,.F.,,.F.,,,.F. )		//"Integrar"

	ACTIVATE MSDIALOG oDlg CENTER

	If lIntegSRV
		fGp23Cons( @aFilInTaf, @aArrayFil,{xFilial("SRV")} )
		fCrgRub(aFilInTaf[1],aLogProc,aRecnoSRV,!lExclu,lExclu,cMesAno,1,Len(aRecnoSRV),1,/*dDataRef*/,cVersEnvio)
		If !Empty(aLogProc)
			aAdd(aLogProc, "" )
			aAdd(aLogProc, OemToAnsi(STR0366) + AllTrim( STR(nContador)) )	//"Total de registros enviados ao TAF: "
			aAdd(aLogProc, OemToAnsi(STR0367) + AllTrim( STR(nContErr )) )	//"Total de registros não enviados ao TAF: "
			aAdd(aLogProc, "" )		//"Geração de evento S-1010 correspondente às verbas recém-criadas"
			fMakeLog({aLogProc}, {OemtoAnsi(STR0364)}, Nil, Nil, "GPEA040ID",OemToAnsi(STR0365), "M", "P",, .F.)	//"Log de Integração das Rubricas"
		EndIf
	Else
		Help(" ", 1, "Help",, OemToAnsi(STR0368), 1, 0) // "Integração do TAF cancelada pelo usuário."

		If Empty(aLogProc)
			aAdd(aLogProc, "" )
			aAdd(aLogProc, OemToAnsi(STR0368))									//"Integração do TAF cancelada pelo usuário."
			aAdd(aLogProc, OemToAnsi(STR0366) + AllTrim( STR(nContador)))		//"Total de registros enviados ao TAF: "
			aAdd(aLogProc, OemToAnsi(STR0367) + Alltrim(Str(Len(aRecnoSRV))))	//"Total de registros não enviados ao TAF: "
			aAdd(aLogProc, "" )		//"Geração de evento S-1010 correspondente às verbas recém-criadas"
			fMakeLog({aLogProc}, {OemtoAnsi(STR0364)}, Nil, Nil, "GPEA040ID", OemToAnsi(STR0368), "M", "P",, .F.)	//"Log de Integração das Rubricas"###"Integração do TAF cancelada pelo usuário."
		EndIf
	EndIf

Return

/*/{Protheus.doc} fTpRegPrev
Retorna os tipos de incidencia de Regime Propio de Previdencia.

@author  Silvio C. Stecca
@since   11/08/2020
@version P12

/*/
Function fTpRegPrev()

	Local cRegPrev := ""

	cRegPrev += (OemToAnsi(STR0379) + ";")// "00=Não é base de cálculo de contribuições devidas ao RPPS/regime militar"
	cRegPrev += (OemToAnsi(STR0380) + ";")// "11=Base de cálculo de contribuições devidas ao RPPS/regime militar"
	cRegPrev += (OemToAnsi(STR0381) + ";")// "12=Base de cálculo de contribuições devidas ao RPPS/regime militar - 13º salário"
	cRegPrev += (OemToAnsi(STR0382) + ";")// "31=Contribuição descontada do segurado e beneficiário"
	cRegPrev += (OemToAnsi(STR0383) + ";")// "32=Contribuição descontada do segurado e beneficiário - 13º salário"
	cRegPrev += (OemToAnsi(STR0384) + ";")// "91=Suspensão de incidência em decorrência de decisão judicial. Valores"

Return cRegPrev

/*/{Protheus.doc} fValINCOP()
Validação para o campo RV_INCOP
@type      	Function
@author   	isabel.noguti
@since		18/01/2021
@version	1.0
@return		lRet,	logic,	Retorno da função
/*/
Function fValINCOP()
Local lRet	:= .T.
Local cVerba := "  #00#11#12#31#32#91#92"
Local aVerba := STRTOKARR(cVerba,"#")
Local lValid := Iif( aScan(aVerba, M->RV_INCOP) > 0, .T., .F.)

If !lValid
	//Caso o usuário informe um código que não existe na tabela
	lRet := .F.
	Help( , , 'HELP', , OemToAnsi(STR0272), 1, 0 ) //Informe um código válido
EndIf
Return lRet

/*/{Protheus.doc} f3RVIncIRF()
Define qual consulta padrão será usada no campo RV_INCIRF de acordo com versão do leiaute
@type		Function
@author		isabel.noguti
@since		16/03/2021
@version	1.0
@return		lRet,	logic,	Retorno da função
/*/
Function f3RVIncIRF()
Local aArea			:= GetArea()
Local lRet			:= .T.

	If cVersGPE >= "9.0"
		lRet := GP310SXB('S138','CODIGO')
	Else
		lRet := fRetOpcGPE('RV_INCIRF')
	Endif

	RestArea(aArea)

Return lRet
