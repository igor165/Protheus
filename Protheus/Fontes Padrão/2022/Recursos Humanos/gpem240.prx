#INCLUDE "PROTHEUS.CH"
#INCLUDE "GPEM240.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ GPEM240  ³ Autor ³ Emerson                     ³ Data ³ 22/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Gera arquivo com os dados do INSS - GPS                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³CHAMADO/REQ³  Motivo da Alteracao                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Mohanad     ³28/02/14³ M12RH01   ³UnIficacao da Folha V12                    ³±±
±±³            ³        ³  194404   ³                                           ³±±
±±³Allyson M   ³15/08/14³TQINW9  	³Ajuste em VerRescDis() p/ verificar apenas ³±±
±±³            ³        ³        	³os valores da tabela SRR que foram gerados ³±±
±±³            ³        ³        	³na rescisao complementar por dissidio.     ³±±
±±³Flavio Corr.³01/09/14³TQIF05     ³Ajuste na variavel nTipRel/nOpcao 			³±±
±±³Allyson M   ³08/01/15³TQNIKP  	³Ajuste na chamada de fGPSVal() quando a    ³±±
±±³            ³        ³        	³GPS e' para os dois tipos de contrato.		³±±
±±³Raquel Hager³18/01/16³TUCDC0  	³Ajuste na funcao VerRescDis p/ capturar os ³±±
±±³            ³        ³        	³vlres calculados pela rescisao p/ dissidio.³±±
±±³Esther V.   ³30/05/16³   TVFY37	³Ajuste na validacao de acesso de filiais  	³±±
±±³            ³        ³      		³do usuario.								³±±
±±³Raquel Hager³11/08/16³TVUFWL   	³Ajuste na carga do Código de Pagamento para³±±
±±³            ³        ³      		³utilizar o código informado pelo usuário.  ³±±
±±³Raquel Hager³29/08/16³TVWRK5     ³Ajuste para impressão do campo 6 - Valor   ³±±
±±³            ³		³			³Inss quando cód. de pagto. 2607 para       ³±±
±±³            ³		³			³produtor rural.						    ³±±
±±³Allyson M   ³03/02/17³MRH-5876   ³Ajuste na FAcumula p/ considerar na GPS a  ³±±
±±³            ³		³		    ³devolucao do Inss - Id.1412                ³±±
±±³WinstonCosta³03/01/19³           ³Retirada do trecho que trata AS/400        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPEM240(lAutomato)

Local nOpca 	:= 0
Local aRegs 	:={}
Local oDlg
Local aSays		:= { }, aButtons := { } //<== arrays locais de preferencia
Local lGPSDiss	:= .f.
Local aTpc		:= {}
Local nX		:= 1
Local lDicInter	:= FindFunction("fChkInterm") .And. fChkInterm()

Private cFilSRZ   := ""
Private cCadastro := OemToAnsi(STR0001) //"Gera‡„o de I.N.S.S. em disquete (CNAB/SISPAG)"
Private nSavRec   := RECNO()

Private aPerAberto 	:= {}
Private aPerFechado	:= {}
Private cProcesso	:= ""
Private cRoteiro 	:= ""

Private oTmpTable
Private lRobo		:= .F.

Default lAutomato 	:= .F.

If lAutomato
	lRobo := lAutomato
Endif

Pergunte("GPM240",.F.)

AADD(aSays,OemToAnsi(STR0002))  //"Este programa gera o arquivo de G.P.S. em disco no padrao CNAB/SISPAG."
AADD(aSays,OemToAnsi(STR0003))  //"Antes de executa-lo sera necess rio cadastrar o LAY-OUT do arquivo no "
AADD(aSays,OemToAnsi(STR0004))  //"modulo SIGACFG op‡ao CNAB ou SISPAG.                                  "

AADD(aButtons, { 17,.T.,{|| cFilSRZ := BuildExpr("SRZ",,cFilSRZ) } })
AADD(aButtons, {  5,.T.,{|| Pergunte("GPM240",.T.) } })
AADD(aButtons, {  1,.T.,{|o| nOpca := 1,If(gpconfOK(),FechaBatch(),nOpca:=0) }})
AADD(aButtons, {  2,.T.,{|o| FechaBatch() }})

If !lRobo
	FormBatch(cCadastro, aSays, aButtons)
Else
	nOpca := 1
Endif

//CARREGA VARIAVEIS MV_PARXX PARA VARIAVEIS DO SISTEMA
cFilIni       := mv_par01
cFilFim       := mv_par02
cCcIni        := mv_par03
cCcFim        := mv_par04
nPorCc        := mv_par05
cCentra       := mv_par06
cCompetencia  := mv_par07
dDtRefe		:= ctod("01/" + SubStr(mv_par07,1,2)+"/"+SubStr(mv_par07,3,4), "DDMMYY")
cNivCCusto    := mv_par08
cTipo         := mv_par09
cTpc          := mv_par10    //1-Indeterminado, 2-Determinado, 3-Ambos
cCodPag       := mv_par11
nValJuros     := mv_par12
cCodAgencia   := mv_par13
cNumConta     := mv_par14
dDatRemessa   := mv_par15
dDatVencto		:= mv_par16
nMd1Md2Spg		:= mv_par17
cArqConf		:= mv_par18
cArqSaida		:= mv_par19
cAnoMes		:= substr(cCompetencia,3,4)+substr(cCompetencia,1,2)

if empty(cTpc)
	Help( "" , 1 , OemToAnsi(STR0010) , NIL , OemToAnsi(STR0033) , 1 , 0 ) //"Tipo de Contrato não preenchido, informe pelo menos um."
	return
endif

If lDicInter
	cTpc := Alltrim(Replace(cTpc,"*",""))
EndIf
cTipCont      := cTpc // Armazenar o tipo de contrato selecionado.

//VARIAVEIS UTILIZADAS PARA GERACAO DO SRZ VIA PROCEDURE
lFolPgto	:= (cTipo == 1)
lFol13Sl	:= (cTipo == 2)
lGPSDiss	:= (cTipo == 3)

//VERIfICA EXISTENCIA DA NOVA TABELA DE DISSIDIO ACUMULADO (RHH) SE A	GPS FOR DE DISSIDIO. SE NAO EXISTIR A TABELA SERA APRESENTADA A MENSAGEM
//INFORMANDO A NECESSIDADE DA EXECUCAO DO UPDATE 150 PARA A CRIACAO E IMPEDE A EXECUCAO DA GPS DE DISSIDIO ATE QUE O UPDATE SEJA EXECUTADO.
If lGPSDiss .and. ! Sx2ChkTable("RHH")
	Aviso(STR0010, STR0019, {STR0020}) //"Atencao" ## "Execute a opção do compatibilizador referente à criação da nova tabela de Dissídio Acumulado. Para maiores informações verIfique respectivo Boletim Técnico." ## "OK"
	Return
EndIf

If nOpca == 1
	//CARREGAR OS PERIODOS ABERTOS (APERABERTO) E/OU OS PERIODOS FECHADOS (APERFECHADO), DE ACORDO COM UMA DETERMINADA COMPETENCIA.
	fRetPerComp(SubStr(cCompetencia, 1, 2), SubStr(cCompetencia, 3, 4), Nil, Nil, Nil, @aPerAberto, @aPerFechado)

	//VERIfICA SE DEVE GERAR O ARQUIVO SRZ COM OS VALORES DE INSS. SOMENTE GERAR SRZ SE NAO FOR GPS DE DISSIDIO.
	If ! lGPSDiss
		If lDicInter
			For nx := 1 to Len(alltrim(cTpc))
				aAdd(aTpc,val(substr(alltrim(cTpc),nx,1)))
			next nx

	   		If !fGeraFolSRZ(cTipo,aTpc,cCompetencia, aPerAberto, aPerFechado)
				Return
			EndIf
		Else
			If cTpc = "3" // Se selecionar tipo de contrato 3-Ambos, gerar resumo da folha com os dois tipos de contrato.
		   		If !fGeraFolSRZ(cTipo,{1,2},cCompetencia, aPerAberto, aPerFechado)
					Return
				EndIf
			else
				If !fGeraFolSRZ(cTipo,{Val(cTipCont)},cCompetencia, aPerAberto, aPerFechado)
					Return
				EndIf
			EndIf
		EndIf
	EndIf

	// PARA GPS DE DISSIDIO FOI CRIADA UMA NOVA FUNCAO TAMBEM ARMAZENADA NESTE FONTE E
	// FOI ACRESCENTADO O MES/ANO COMPETENCIA NA PASSAGEM DE PARAMETROS PARA ESTA GPS
	If ! lGPSDiss
		Processa({|lEnd| GPM240Proc(1,@lEnd,,cFilSRZ,cFilIni,cFilFim,cCcIni,cCcFim,cTipCont),STR0001})  //"Gera‡„o de I.N.S.S. em disquete (CNAB/SISPAG)"
	Else
		Processa({|lEnd| GPM240PrcD(1,@lEnd,,xFilial("RHH"),cFilIni,cFilFim,cCcIni,cCcFim,cTipCont,cAnoMes)},STR0001) //"Gera‡„o de I.N.S.S. em disquete (CNAB/SISPAG)"
	EndIf
EndIf

If oTmpTable <> Nil
	oTmpTable:Delete()
EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GPEM240  ³ Autor ³ Equipe R.H.           ³ Data ³ 22/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao de processamento                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Gpm240Proc(nTipGer,lEnd,WnRel,cFilSRZ)					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM240                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gpm240Proc(nTipGer,lEnd,WnRel,cFilSRZ,cFilIni,cFilFim,cCcIni,cCcFim,cTipCont,lGPSDisMov)
Local lFim 		:= .T.   // SE FINALIZA O LOOPING
Local cTipoGPS  := ""
Local cArqNtx	:= ""
Local lFiltrou
Local nIndex
Local nSavOrd
Local lPula 	:= .F.
Local nX 		:= 0
Local cCodGps	:= ""
Local cCodPrm	:= ""
Local aAreaBkp	:= {}
Local oFont07   := TFont():New("Arial",07,10,,.F.,,,,.T.,.F.)
Local cTpcGPS	:= ""
Private lDicInter	:= FindFunction("fChkInterm") .And. fChkInterm()
Private n16         := n17    := n17a    := n17ap   := n17aa  := n17b   := n18    := n21    := n81    := n82     := nVez  :=  0
Private n16Fil      := n17Fil := n17aFil := n17bFil := n18Fil := n21Fil := n81Fil := n82Fil  := 0
Private nEmpregados := 0
Private cTerceiros  := Space(4)
Private lPrimeira   := .T.
Private nHdlBco     := 0
Private nHdlSaida   := 0
Private nSeq        := 0  // Sera utilizada na funcao Incrementa() no Lay-Out
Private nTotRegArq  := 0  // Sera utilizado no Lay-Out
Private nTotRegLote := 0  // Sera utilizado no Lay-Out
Private nNumRegLote := 0  // Sera utilizado no Lay-Out
Private nLin        := 0  // Sera utilizado na impressao da GPS
Private xConteudo
Private aInssEmp[25][2]
Private aGpsVal		:= {}
Private cFil
Private cParam
Private lImpVez		:= .T.
Private lTemDedMat	:= .F.
Private cRecFatEmp	:= " "
Private lPRural		:= .T.

Private dDtBaseIni  := CtoD("01/01/"+ left(cAnoMes,4),"DDMMYY")
Private dDtBaseFim  := CtoD("31/12/"+ left(cAnoMes,4),"DDMMYY")
Private aCodFol     := {}
Private aDeducao    := {}

Private nHeadArq    := 1
Private nHeadLote   := 2
Private nDetalhe    := 3
Private nTraiLote   := 4
Private nTraiArq    := 5

//DEFINE VARIAVES PARA FACILIAR O TRATAMENTO DO PROCESSAMENTO
Private lGeraTexto  := (nTipGer == 1)
Private lImpRelato  := (nTipGer == 2)
Private lGeraTitulo := (nTipGer == 3)
Private cObservacao := ""
Private aLog		:= {}

// LEI 10.710 - 05/08/2003(DOU 06/08/2003)
// LIMITA O VLR QUE A EMPRESA PODE DEDUZIR DA GUIA

Private nLimDMat 	:= GetMvRH("MV_LIMDMAT",, 0)
Private oPrint
Private nQtdGPS		:= 0 //Usado no fonte IMPGPS.PRX
Private nVlrMinGPS	:= 0
Private cVbProd		:= ""
Private cInssDev	:= ""

DEFAULT lGPSDisMov	:= .F.

If Type("cCodPag")=="U"
	cCodPag	:=  ""
EndIf
nSavRec := ""

If lImpRelato
	If nTipRel == 3
		oPrint 	:= TMSPrinter():New(STR0030) //"GPS - Guia da Previdência Social"
		oPrint	:SetPortrait()
		oPrint	:StartPage()
		nLin 	:= 030
	EndIf
EndIf

//ABERTURA ARQUIVO ASC II
If lGeraTexto
	If !AbrePar()
		Return Nil
	EndIf

	//CONFIGURACAO PARA GERACAO DE ARQUIVO SISPAG
	cHeadArq  := "A"   //Header Arquivo
	cHeadLote := "B"   //Header  Lote 1   Header Lote Cheque/OP/DOC/Cred.CC
	cTraiLote := "D"   //Trailler Lote Cheque/OP/DOC/Cred.CC
	cTraiArq  := "F"   //Trailer Arquivo
	cDetalhe  := "N"   //GPS

	//GRAVA O HEADER DE ARQUIVO
	fm240Linha(cHeadArq, nHeadArq)
EndIf

//CRIAR OS ARRAYS COM OS NIVEIS DE QUEBRAS
If nPorCc = 2
    Private aCc1[10]         // CENTRO DE CUSTO
    aFill(aCc1,0)
    Private cCcAnt1 := " "   //VARIAVEIS C.CUSTO DOS NIVEIS DE QUEBRA
EndIf

cFilAnterior := REPLICATE("!",FWGETTAMFILIAL)
nEmpregados  := 0
nTotFunc     := 0

//VARIAVEIS DE TOTAIS DISPONIVEIS-DEVEM SER EM LETRA MAIUSCULA
aTotINSS  := { {"NVALINSS",0},   {"NVALFUNC",0}, {"NVALEMPR",0}, {"NVALENTID",0}, {"NVALDEDGPS",0}, {"NSLCTRFUN",0}, {"NSLCTREMP",0} }


dbSelectArea("SRZ")
dbSetOrder(1)

//SE ENCONTRAR TIPO DE GUIA DIfERENTE DA GUIA SELECIONADA, FAZER FILTRO PARA EVITAR SOMAR AS DUAS GUIAS.
lFiltrou := .F.
cTipoGPS := If(cTipo == 1, "FL", "13")
lPRural  := !Empty(cCodPag) .And. cCodPag == "2607"
If dbSeek(Replicate("z",FwGetTamFilial) + If(cTipoGPS=="FL", "13", "FL"))
	lFiltrou := .T.
	cIndCond := "RZ_FILIAL+RZ_CC+RZ_PD+RZ_TPC"
	cFor     := '(RZ_TIPO = "'+cTipoGPS+'")'
	cArqNtx  := CriaTrab(NIL,.F.)
	IndRegua("SRZ",cArqNtx,cIndCond,,cFor,STR0012) //"Selecionando Registros..."
	nIndex := RetIndex("SRZ")
	dbSetOrder(nIndex+1)

EndIf

dbSeek(cFilIni + cCcIni , .T.)

cFil     := SRZ->RZ_FILIAL
cParam   := "\\\\\\\\\"
nTamCC	 := TamSX3("RZ_CC")[1]

//DESENHA CURSOR PARA MOVIMENTACAO
If lImpRelato
	SetRegua(SRZ->(RecCount()))
Else
	ProcRegua(SRZ->(RecCount()))
EndIf

While SRZ->(!Eof()) .And. lFim = .T.
	//MOVIMENTA CURSOR
	If lImpRelato
		IncRegua()
	ElseIf lGeraTexto
		IncProc(STR0008) //"GPS em Disquete (SISPAG)"
	ElseIf lGeraTitulo
		IncProc(STR0013 + " " + If(cTpc == "1", STR0014,If(cTpc == "2",STR0015,STR0018))) //""Gerando Titulos - INSS Contrato Determinado/Indeterminado
	EndIf

	//VARIAVEL DA QUEBRA DE C. CUSTO
	cCcOld := "!!!!!!!!!"

	//CANCELAMENTO DE IMPRESSAO
	If lEnd
		If lImpRelato
			@Prow()+1,0 PSAY cCancel
		EndIf
		Exit
	EndIf

	If lDicInter
		If (SRZ->RZ_FILIAL = Replicate("z", FWGETTAMFILIAL) .Or. !(SRZ->RZ_TPC $ cTpc)) // Tipo de contrato determinado ou Indeterminado
			SRZ->(dbSkip())
			Loop
		EndIf
	Else
		 If cTipCont == "3" .and. SRZ->RZ_FILIAL = Replicate("z", FWGETTAMFILIAL) //Tipo Contrato Ambos (determinado e indeterminado)
			SRZ->(dbSkip())
			Loop
		else
			If cTipCont $ "1*2" .and. (SRZ->RZ_FILIAL = Replicate("z", FWGETTAMFILIAL) .Or. SRZ->RZ_TPC # cTpc) // Tipo de contrato determinado ou Indeterminado
				SRZ->(dbSkip())
				Loop
			Endif
		EndIf
	EndIf
	//VERIfICA SE SATISFAZ A CONDICAO DE FILTRO DO USUARIO
	If cFilSRZ # Nil .And. !Empty(cFilSRZ) .And. !&cFilSRZ
		SRZ->(dbSkip())
		Loop
	EndIf

	If SRZ->RZ_TIPO <> cTipoGPS
		SRZ->(dbSkip())
		Loop
	EndIf

	If SRZ->RZ_FILIAL > cFilFim
		Exit
	EndIf

	//Consiste acesso do usuario a filiais
	If ! ( SRZ->RZ_FILIAL $ fValidFil() )
		SRZ->(dbSkip())
		Loop
	EndIf

	If SRZ->RZ_filial # cFilAnterior .And. lFim = .T.
		cFilAnterior := SRZ->RZ_FILIAL
		//CARREGA VARIAVEIS CODIGOS DA FOLHA
		If !FP_CODFOL(@aCodFol, SRZ->RZ_FILIAL)
			Exit
		EndIf
		//VERBAS DOS IDS 315/316 SAO EXCLUSIVAS PARA O CODIGO DE PAGAMENTO 2607 (PRODUCAO RURAL)
		cVbProd := aCodFol[315,1]+"#"+aCodFol[316,1]
		If ( lDicInter .And. Len(cTipCont) > 1 ) .Or. ( !lDicInter .And. cTipCont == "3" )  //MAIS DE 1 TIPO DE CONTRATO
			If lPrimeira
				//TESTE DE UTILIZOU O IDENTIfICADOR 670 PARA FAZER A DEDUCAO DE SALARIO MATERNIDADE PARA 13O SALARIO
				If aCodFol[670,1] <> "   "
					aAreaBkp	:= SRZ->(GetArea())
					SRZ->(DbSetOrder(2))         //FILIAL + PD + CC
					If Dbseek(replicate("z",FWGETTAMFILIAL)+aCodFol[670,1])
						While !SRZ->(eof()) .And. SRZ->RZ_PD == aCodFol[670,1] // Localizar no ZRZ verba 670.
							lTemDedMat	:= .T.
						SRZ->(dbskip())
						Enddo
					EndIf
			  		RestArea(aAreaBkp)
				EndIf

				aDeducao:={}
				lPrimeira:=.F.

				If !lTemDedMat
					FSDSMatern(1,"","",cFilIni,cFilFim,cCcIni,cCcFim,cTipCont)  // CALCULA DEDUCAO DE SAL.MATERNIDADE
				EndIf
			EndIf

		Else
			If lPrimeira .and. SRZ->RZ_TPC $ cTpc
				// TESTE DE UTILIZOU O IDENTIfICADOR 670 PARA FAZER A DEDUCAO DE SALARIO MATERNIDADE PARA 13O SALARIO
				If aCodFol[670,1] <> "   "
					aAreaBkp	:= SRZ->(GetArea())
					SRZ->(DbSetOrder(2))         // Filial + PD + CC
					If Dbseek (replicate("z",FWGETTAMFILIAL)+aCodFol[670,1])
						While !SRZ->(eof()) .And. SRZ->RZ_PD == aCodFol[670,1] // LOCALIZAR NO ZRZ VERBA 670.
							If SRZ->RZ_TPC $ cTpc
								lTemDedMat	:= .T.
							EndIf
							SRZ->(dbskip())
						Enddo
					EndIf
		  			RestArea(aAreaBkp)
				EndIf

				aDeducao:={}
				lPrimeira:=.F.

				If !lTemDedMat
					FSDSMatern(1,"","",cFilIni,cFilFim,cCcIni,cCcFim,cTipCont)  // CALCULA DEDUCAO DE SAL.MATERNIDADE
				EndIf
			EndIf
	    EndIf

		//RETIRADA DOS ID'S RELACIONADOS A DISSIDIO, POIS A ROTINA DO DISSIDIO PASSOU A
		//GERAR AS RESPECTIVAS VERBAS INDEPENDENTE DO CONTEUDO DO PARAMETRO MV_ENCINSS.
		If lGPSDisMov
			cContribuicao := aCodFol[338,1]+"x"+aCodFol[399,1]		// Base do Inss Dissidio
			cDescInss     := aCodFol[340,1]+"x"+aCodFol[401,1]		// Valor do Inss Dissidio
		Else
			cContribuicao := aCodFol[13,1]+"x"+aCodFol[14,1]+"x"+aCodFol[19,1]+"x"+aCodFol[20,1]						// Base do Inss
			cDescInss     := aCodFol[64,1]+"x"+aCodFol[65,1]+"x"+aCodFol[70,1]+"x"+aCodFol[351,1]+"x"+aCodFol[354,1]	// Valor do Inss
			cInssDev      := If( Len(aCodFol) >= 1412 .And. !Empty(aCodFol[1412,1]),"x"+aCodFol[1412,1],"" )			// Valor a deduzir do Inss
		EndIf

		cTpcGPS := If(SRZ->RZ_TPC == "3", "1", SRZ->RZ_TPC) //TIPO CONTRATO = 3-Intermitente, UTILIZAR ENCARGOS INFORMADOS NO TIPO CONTRATO 1

		//CARREGA PARAMETRO INSS EMPRESA
		If !fInssEmp(SRZ->RZ_FILIAL,@aInssEmp,,cAnoMes)
			Exit
		EndIf
		cRecFatEmp := aInssEmp[27, Val(cTpcGPS)]

		//CARREGA CODIGO DE PGTO. DA GPS
		cCodPag		:= If( !Empty(cCodPag), cCodPag, aInssEmp[24,Val(cTpcGPS)] )

		//CARREGA VALOR MINIMO PARA RECOLHIMENTO DA GPS
		nVlrMinGPS := aInssEmp[28,Val(cTpcGPS)]
		//TRAZ OS VALORES DA GPS CADASTRADOS NA TABELA AUXILIAR S035
		aGpsVal := {}
		fGPSVal(cFilAnterior, If(cTipo == 2, Left(cAnoMes,4)+"13", cAnoMes), @aGPSVal, cTpcGPS)
		For nx := 1 to len(aGpsVal)
			cObservacao += space(01)+alltrim(aGpsVal[nx,7])
		next
	EndIf

	cCodPrm := cCodPag
	cOldMat := "!!!!!!"
	cOldPd  := "!!!"
	cOldTpc := "!"
	lFirst	:= .T.

	DbSelectArea("SRZ")
	While !Eof() .And. SRZ->RZ_FILIAL == cFilAnterior
		//MOVIMENTA REGUA
		If lImpRelato
			IncRegua()
		ElseIf lGeraTexto
			IncProc(STR0008) //"GPS EM DISQUETE (SISPAG)"
		ElseIf lGeraTitulo
			IncProc(STR0013 + " " + If(cTpc == "1", STR0014, If(cTpc == "2", STR0015, STR0018))) //"GERANDO TITULOS - INSS CONTRATO DETERMINADO/INDETERMINADO"
		EndIf

		If SRZ->RZ_FILIAL > cFilFim
			Exit
		EndIf

		If SRZ->RZ_TIPO <> cTipoGPS
			dbSkip()
			Loop
		EndIf

		//QUEBRA DO CENTRO DE CUSTO GRAVA NO SRZ
		If (cCcOld # SRZ->RZ_CC) .Or. (!lFirst .And. SRZ->(	RZ_CC == cCCOld .And. RZ_MAT = "zzzzzz" .And. RZ_PD = "zzz" .And. RZ_MAT == cOldMat .And. RZ_PD == cOldPd .And. RZ_TPC # cOldTpc) .And. cCcOld # Replicate("z", nTamCC))

			If lImpRelato
				If nlin > 61 .And. nTipRel == 2
    				nlin := 0
	    		EndIf
			EndIf

			If cCcOld # "!!!!!!!!!"
				If nPorCC # 3 .and. CTT->(FieldPos("CTT_CODGPS")) # 0
					cCodGPS := fDesc("CTT",cCCOld,"CTT_CODGPS")
					cCodPag := If(!empty(cCodGPS),cCodGps,cCodPrm)
				EndIf

				//VERIfICA SE A IMPRESSAO PRO C. CUSTO
				cFil     := cFilAnterior
				cParam   := cCcOld
				cEscolha := "1"

				If lDicInter
					If SRZ->RZ_TPC $ cTpc
						FSDSMatern(2,cFilAnterior,cCcOld,cFilIni,cFilFim,cCcIni,cCcFim,cTipCont)  // CALCULA DEDUCAO DE SAL.MATERNIDADE
					ENdIf
				Else
					If !cTipCont == "3" .and. SRZ->RZ_TPC == cTpc
						FSDSMatern(2,cFilAnterior,cCcOld,cFilIni,cFilFim,cCcIni,cCcFim,cTipCont)  // -- Calcula Deducao de Sal.Maternidade
					else
						FSDSMatern(2,cFilAnterior,cCcOld,cFilIni,cFilFim,cCcIni,cCcFim,cTipCont)  // -- Calcula Deducao de Sal.Maternidade
					Endif
				EndIf

				If nPorCC == 1 //POR CENTRO DE CUSTO
					If lImpRelato
						CarImpGPS()
					//GRAVA AS LINHAS DE DETALHE NO ARQUIVO DE SAIDA
					ElseIf lGeraTexto
						fm240linha(cHeadLote, nHeadLote)
						fm240Linha(cDetalhe, nDetalhe)
						fm240linha(cTraiLote, nTraiLote)
					ElseIf lGeraTitulo
						fm240linha(,,.T.)
					EndIf
				EndIf

				//ACUMULA NOS TOTALIZADORES DA FILIAL
				n16Fil  += n16
				n17Fil  += n17
				n17aFil += n17a
				n17bFil += n17b
				n18Fil  += n18
				n21Fil  += n21
				n81Fil  += n81
				n82Fil  += n82
				nTotFunc+= nEmpregados
			EndIf

			//QUEBRA POR NIVEIS DE C.CUSTO
			If nPorCc = 2 .And. Val(cNivCCusto) > 0
				aCc1[1]  := cCcAnt1
				aCc1[2]  += n16
				aCc1[3]  += n17
				aCc1[4]  += n17a
				aCc1[5]  += n17b
				aCc1[6]  += n18
				aCc1[7]  += n21
				aCc1[8]  += n81
				aCc1[9]  += n82
				aCc1[10] += nEmpregados
				If cCcAnt1 # Subs(SRZ->RZ_CC,1,Val(cNivCCusto)) .And. cCcAnt1 # " "
					n16         := aCc1[2]
					n17         := aCc1[3]
					n17a        := aCc1[4]
					n17b        := aCc1[5]
					n18         := aCc1[6]
					n21         := aCc1[7]
					n81         := aCc1[8]
					n82         := aCc1[9]
					nEmpregados := aCc1[10]
					cParam      := cCcAnt1

					If lImpRelato
						If nlin > 61 .And. nTipRel ==  2
    						nlin := 0
			    		EndIf
					    CarImpGPS()
					//GRAVA AS LINHAS DE DETALHE NO ARQUIVO DE SAIDA
					ElseIf lGeraTexto
						fm240linha(cHeadLote, nHeadLote)
						fm240Linha(cDetalhe, nDetalhe)
						fm240linha(cTraiLote, nTraiLote)
					ElseIf lGeraTitulo
						fm240linha(,,.T.)
					EndIf

					aFill(aCc1,0)
					cCcAnt1  := Subs(SRZ->RZ_CC,1,val(cNivCCusto))
				Else
					cCcAnt1  := Subs(SRZ->RZ_CC,1,val(cNivCCusto))
				EndIf
			EndIf
			n16    := n17 := n17a := n17aa := n17ap := n17b := n18 := n21 := n81 := n82 := nEmpregados := 0
			cCcOld := SRZ->RZ_CC
		EndIf
		lPula := .F.

		cOldMat := SRZ->RZ_MAT
		cOldPd  := SRZ->RZ_PD
		cOldTpc := SRZ->RZ_TPC
		lFirst	:= .F.

		If nPorCC==3 .and. SRZ->RZ_CC == left(Replicate("z",GetSx3Cache("RZ_CC" , "X3_TAMANHO"))+space(20),len(SRZ->RZ_CC))
			lPula := .F.
		ElseIf SRZ->RZ_CC > cCcFim .OR. SRZ->RZ_CC < cCcIni
			lPula := .T.
		EndIf

	    If lPula
			cCcOld := "!!!!!!!!!"
			dbSelectArea("SRZ")
			dbSkip()
			Loop
		EndIf

		//ACUMULA OS VALORES DO SRZ E CALCULA OS PERCENTUAIS
  		If Type("SRZ->RZ_MAT") == "U"
			If (( lDicInter .And. Len(cTipCont) > 1 ) .Or. ( !lDicInter .And. cTipCont == "3" )) .and. SRZ->RZ_PD # "zzz"
				FAcumula(@n16,@n17,@n17a,@n17ap,@n17aa,@n17B,@n18,@n21,@n81,@n82,aCodFol,lGPSDisMov)
			Else
				If (SRZ->RZ_PD # "zzz" .and. SRZ->RZ_TPC $ cTpc)
					FAcumula(@n16,@n17,@n17a,@n17ap,@n17aa,@n17B,@n18,@n21,@n81,@n82,aCodFol,lGPSDisMov)
				EndIf
			EndIf
		Else
			If (( lDicInter .And. Len(cTipCont) > 1 ) .Or. ( !lDicInter .And. cTipCont == "3" )) .and. SRZ->RZ_PD # "zzz" .And. SRZ->RZ_MAT == Replicate("z", GetSx3Cache("RZ_MAT", "X3_TAMANHO"))
				FAcumula(@n16,@n17,@n17a,@n17ap,@n17aa,@n17B,@n18,@n21,@n81,@n82,aCodFol,lGPSDisMov)
			Else
				If (SRZ->RZ_PD # "zzz" .And. SRZ->RZ_MAT == Replicate("z", GetSx3Cache("RZ_MAT", "X3_TAMANHO")) .and. SRZ->RZ_TPC $ cTpc)
					FAcumula(@n16,@n17,@n17a,@n17ap,@n17aa,@n17B,@n18,@n21,@n81,@n82,aCodFol,lGPSDisMov)
				EndIf
			EndIf
		EndIf


		//CONTADOR DE FUNCIONARIOS
		If (( lDicInter .And. Len(cTipCont) > 1 ) .Or. ( !lDicInter .And. cTipCont == "3" )) .and. SRZ->RZ_PD = "zzz"
			nEmpregados := SRZ->RZ_OCORREN
			dbSkip()
			Loop
		Else
			If (SRZ->RZ_PD = "zzz" .And. SRZ->RZ_TPC $ cTpc)
				nEmpregados := SRZ->RZ_OCORREN
				dbSkip()
				Loop
			EndIf
		EndIf
		dbSelectArea("SRZ")
		dbSkip()
	Enddo

	If SRZ->(Eof()) .And. nPorCC == 1 .And. lImpRelato .And. n16 > 0

		cFil     := cFilAnterior
		cParam   := cCcOld
		cEscolha := "1"

		CarImpGPS()
	EndIf
	// Calcula % de terceiros para produtores rurais
	If lPRural
		TercRural()
	EndIf

	If (SRZ->RZ_FILIAL # cFilAnterior)

		If lImpRelato
			If nlin > 61 .And. nTipRel == 2
    			nlin := 0
    		EndIf
    	EndIf

		If cCentra == Space(FwGetTamFilial)
			If nPorCC == 3 //FILIAL
				cFil     := cFilAnterior
				cParam   := "\\\\\\\\\"
				cEscolha := "2"

				n16Fil  += n16
				n17Fil  += n17
				n17aFil += n17a
				n17bFil += n17b
				n18Fil  += n18
				n21Fil  += n21
				n81Fil  += n81
				n82Fil  += n82
				nTotFunc+= nEmpregados

				If lImpRelato
					CarImpGPS()
				//GRAVA AS LINHAS DE DETALHE NO ARQUIVO DE SAIDA
				ElseIf lGeraTexto
					fm240linha(cHeadLote, nHeadLote)
					fm240Linha(cDetalhe, nDetalhe)
					fm240linha(cTraiLote, nTraiLote)
				ElseIf lGeraTitulo
					fm240linha(,,.T.)
				EndIf
			EndIf
			nTotFunc := 0
			n17Fil := n82Fil := n21Fil := n81Fil := n18Fil := n16Fil := n17bFil := n17aFil := 0
		EndIf
	EndIf
Enddo

If n17Fil + n82Fil + n21Fil + n81Fil + n18Fil + n16Fil + n17aFil # 0 .And. nPorCc = 3
	cFil     := If(cCentra = Space(FwGetTamFilial),cFilAnterior,cCentra)
	cParam   := "\\\\\\\\\"
	cEscolha := "2"
	If lImpRelato
		If nlin > 61 .And. nTipRel == 2
	    	nlin := 0
	    EndIf
		CarImpGPS()
	//GRAVA AS LINHAS DE DETALHE NO ARQUIVO DE SAIDA
	ElseIf lGeraTexto
		fm240linha(cHeadLote, nHeadLote)
		fm240Linha(cDetalhe, nDetalhe)
		fm240linha(cTraiLote, nTraiLote)
	ElseIf lGeraTitulo
		fm240linha(,,.T.)
	EndIf
EndIf

If lGeraTexto
	//GRAVA OS TRAILLERS DE LOTE E DE ARQUIVO
	fm240linha(cTraiArq, nTraiArq)
	//TERMINO DO PROGRAMA
	fClose(nHdlSaida)
	fClose(nHdlBco)
EndIf

dbSelectArea("SRA")
dbSetOrder(1)

dbSelectArea("SRZ")
Set Filter to
If lFiltrou
	RetIndex("SRZ")
	fErase(cArqNtx + OrdBagExt())
EndIf
dbSetOrder(1)

If lImpRelato
	If len(aLog) > 0
		If !nTipRel == 3
			nLin := 0

			@ nLin , 0 PSAY "*" + Repl("-",132)
			nLin +=2
			@ nLin,49 PSAY STR0022 + Substr(cCompetencia,5,2)+"/"+Substr(cCompetencia,1,4) // "Log de ocorrencias da GPS - Competencia "
			nLin += 2
			@ nLin , 0 PSAY "*" + Repl("-",132)
			nLin +=2
			@ nLin , 0 PSAY "*" + Repl("-",132)
			nLin ++
			For nx := 1 to len(aLog)
				If aLog[Nx,3] = "2"
					If Upper(aLog[nx,1]) #Replicate('\',len(aLog[nx,1]))
						@ nLin, 00 PSAY STR0023 + aLog[nx,1] //"Centro de Custo - "
					EndIf
					@ nLin, 60 PSAY STR0024 + aLog[nx,2] // " VALOR DA GUIA    : "
				Else
					If Upper(aLog[nx,1]) #Replicate('\',len(aLog[nx,1]))
						@ nLin, 00 PSAY STR0023 + aLog[nx,1] //"Centro de Custo - "
					EndIf
					@ nLin, 60 PSAY STR0025 + aLog[nx,2]  //" VALOR DE RESIDUO : "
				EndIf
				nLin ++
			Next
		Else
	   		nLin := 0

			//DEFINICAO DO BOX PRINCIPAL
			oPrint:Box(nLin,0030,nLin+1100,2350)

			oPrint:Line(nLin+00,00,nLin+00,2350)
			oPrint:Say(nLin+050,450, STR0022 + Substr(cAnoMes,5,2)+"/"+Substr(cAnoMes,1,4),oFont07) //"Log de ocorrencias da GPS - Competencia "
			oPrint:Line(nLin+100,00,nLin+100,2350)
			nLin := 250
			For nx := 1 to len(aLog)
				If aLog[Nx,3] = "1"
					If Upper(aLog[nx,1]) #Replicate('\',len(aLog[nx,1]))
						oPrint:Say(nLin+150,50, STR0023 + aLog[nX,01] ,oFont07) // "Centro de Custo - "
					EndIf
					oPrint:Say(nLin+150,1000, STR0025  + aLog[nX,02] ,oFont07) //"VALOR DE RESIDUO :"
				Else
					If Upper(aLog[nx,1]) #Replicate('\',len(aLog[nx,1]))
						oPrint:Say(nLin+150,50, STR0023 + aLog[nX,01] ,oFont07) // "Centro de Custo - "
					EndIf
					oPrint:Say(nLin+150,1000, STR0024 + aLog[nx,2],oFont07) // " VALOR DA GUIA    : "
				EndIf
				nLin += 40
			Next
		EndIf
    EndIf

	Set Device To Screen
	If nTipRel # 2
		SeTPgEject(.F.)
	EndIf

	If aReturn[5] = 1  .And. nTipRel # 3
		Set Printer To
		Commit
		ourspool(wnrel)
	EndIf
	MS_FLUSH()

	If nTipRel == 3
		oPrint:Preview()  		// VISUALIZA IMPRESSAO GRAFICA ANTES DE IMPRIMIR
	EndIf
EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³FAcumula  ³ Autor ³ Equipe RH             ³ Data ³ 11/11/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ACUMULA VALORES DAS VERBAS                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEM240()                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function FAcumula(n16,n17,n17a,n17ap,n17aa,n17b,n18,n21,n81,n82,aCodFol,lGPSDisMov)
Local nx := 1
Local cVbInssEmp	:=	""
Local cVbAcTrab	:=	""
Local cVbTerc		:=	""
Local cTpcGps		:= ""
DEFAULT lGPSDisMov := .F.


cTpcGPS	:= If(SRZ->RZ_TPC == "3", "1", SRZ->RZ_TPC)		//TIPO CONTRATO = 3-AMBOS, UTILIZAR ENCARGOS INFORMADOS NO TIPO CONTRATO 1

If lGPSDisMov	//VERBAS DO DISSIDIO
	cVbInssEmp	:=	aCodFol[943,1]	//INSS EMPRESA DISSIDIO
	cVbAcTrab	:=	aCodFol[945,1]	//AC. TRABALHO DISSIDIO
	cVbTerc		:=	aCodFol[944,1]	//TERCEIROS DISSIDIO
Else
	cVbInssEmp	:=	aCodFol[148,1]	//INSS EMPRESA
	cVbAcTrab	:=	aCodFol[150,1]	//AC. TRABALHO
	cVbTerc		:=  aCodFol[149,1] //TERCEIROS
EndIf

If SRZ->RZ_CC # left(Replicate("z",GetSx3Cache("RZ_CC" , "X3_TAMANHO"))+space(20),len(SRZ->RZ_CC))
	//VARIAVEL ACUMULADORA DAS DEDUCOES NA GUIA DE INSS -> CAMPO2
	If (PosSrv(SRZ->RZ_PD,cFilial,"RV_DEDINSS") = "S") .Or. (SRZ->RZ_PD == aCodFol[670,1])

		If PosSrv(SRZ->RZ_PD,cFilial,"RV_TIPOCOD") == "1"     // PROVENTOS
			If lGpsDisMov .AND. !Empty(SRV->RV_CODCOM_)
			 	n21 += SRZ->RZ_VAL
			Elseif !lGpsDisMov
				n21 += SRZ->RZ_VAL
			Endif
		ElseIf PosSrv(SRZ->RZ_PD,cFilial,"RV_TIPOCOD") == "2" 	// DESCONTOS
			If lGpsDisMov .AND. !Empty(SRV->RV_CODCOM_)
		 		n21 -= SRZ->RZ_VAL
			Elseif !lGpsDisMov
				n21 -= SRZ->RZ_VAL
			Endif
		ElseIf SRZ->RZ_PD == aCodFol[670,1]						// BASE - DEDUCAO DA LIC.MATERNIDADE NO 13O SALARIO
			If lGpsDisMov .AND. !Empty(SRV->RV_CODCOM_)
		 		n21 += SRZ->RZ_VAL
		 	Elseif !lGpsDisMov
				n21 += SRZ->RZ_VAL
			Endif
		EndIf

		If (SRZ->RZ_PD $ aCodFol[040,1]+"*"+aCodFol[407,1]+"*"+aCodFol[1338,1]+"*"+aCodFol[1339,1]+"*"+aCodFol[1340,1]+"*"+aCodFol[1341,1] +"*"+aCodFol[1342,1]) .And. GetMvRH("MV_SALMGRP") = "S" .And. !lTemDedMat
			If lGpsDisMov .AND. !Empty(SRV->RV_CODCOM_)
		 		n21 += Round(If(nLimDMat > 0 .and. SRZ->RZ_VAL  >= nLimDMat, nLimDMat, SRZ->RZ_VAL) /12,2)
			 Elseif !lGpsDisMov
			 	n21 += Round(If(nLimDMat > 0 .and. SRZ->RZ_VAL  >= nLimDMat, nLimDMat, SRZ->RZ_VAL) /12,2)
			 Endif
		EndIf
	EndIf

	If SRZ->RZ_PD $ cContribuicao		//BASE INSS EMPRESA
		If lGpsDisMov .AND. !Empty(SRV->RV_CODCOM_)
			n81  += SRZ->RZ_VAL
		Elseif !lGpsDisMov
	    	n81  += SRZ->RZ_VAL
	    Endif
	ElseIf SRZ->RZ_PD = cVbInssEmp  	//INSS EMPRESA
		If !lPRural	// Apenas realiza somatoria se não for Produtor Rral - Cód. Pag. 2607
			If lGpsDisMov .AND. !Empty(SRV->RV_CODCOM_)
				n17  += SRZ->RZ_VAL
			Elseif !lGpsDisMov
				n17  += SRZ->RZ_VAL
			Endif
		EndIf
	ElseIf SRZ->RZ_PD = cVbAcTrab  		//AC. TRABALHO
		If !lPRural	// Apenas realiza somatoria se não for Produtor Rral - Cód. Pag. 2607
			If lGpsDisMov .AND. !Empty(SRV->RV_CODCOM_)
				n17  += SRZ->RZ_VAL
			    n17b += SRZ->RZ_VAL
			Elseif !lGpsDisMov
				n17  += SRZ->RZ_VAL
			    n17b += SRZ->RZ_VAL
			Endif
		EndIf
	ElseIf SRZ->RZ_PD $ cVbTerc .And. ! lPRural 		//TERCEIROS
		If lGpsDisMov .AND. !Empty(SRV->RV_CODCOM_)
			n18  += SRZ->RZ_VAL
		Elseif !lGpsDisMov
			n18  += SRZ->RZ_VAL
		Endif
	ElseIf SRZ->RZ_PD $ ( cDescInss + cInssDev )      //INSS FUNCIONARIOS
		If !lPRural	// Apenas realiza somatoria se não for Produtor Rral - Cód. Pag. 2607
			If SRZ->RZ_PD $ cDescInss
				If lGpsDisMov .AND. !Empty(SRV->RV_CODCOM_)
					n16 += SRZ->RZ_VAL
				Elseif !lGpsDisMov
					n16 += SRZ->RZ_VAL
				Endif
			Else
				//O Inss devolvido eh deduzido p/ que o valor descontado fique compativel com a base de calculo
				n16 -= SRZ->RZ_VAL
			EndIf
		EndIf
	ElseIf SRZ->RZ_PD $ aCodFol[221,1]+'*'+aCodfol[225,1]+'*'+ aCodfol[350,1]+'*'+aCodfol[353,1]	//BASE INSS, PRO-LABORE E AUTONOMO, BASE INSS FISICA E JURIDICA
		If lGpsDisMov .AND. !Empty(SRV->RV_CODCOM_)
			n82  += SRZ->RZ_VAL
		Elseif !lGpsDisMov
			n82  += SRZ->RZ_VAL
		Endif
	EndIf

	For nX := 1 to len(aGpsVal)
		If SRZ->RZ_PD == aGpsVal[nX,2] .And. If(aGpsVal[nX,2] $ cVbProd,lPRural,.T.)
			If aGpsVal[nX,6]=="D"
				If lGpsDisMov .AND. !Empty(SRV->RV_CODCOM_)
					n17a  	-= SRZ->RZ_VAL  //DEDUCAO
				Elseif !lGpsDisMov
					n17a  	-= SRZ->RZ_VAL  //DEDUCAO
				Endif
			Else
				If lGpsDisMov .AND. !Empty(SRV->RV_CODCOM_)
					n17a  	+= SRZ->RZ_VAL //RECOLHIMETO
				Elseif !lGpsDisMov
					n17a  	+= SRZ->RZ_VAL //RECOLHIMETO
				Endif
			EndIf
			Exit
		EndIf
	Next

EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³FSDSMatern³ Autor ³ Equipe RH             ³ Data ³ 11/11/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Totaliza a deducao de Sal.Maternidade                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEM240()                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function FSDSMatern(nTipo,cFilAtu,cCcAtu,cFilIni,cFilFim,cCcIni,cCcFim,cTipCont)
Local nCt
Local aArea := GetArea()
Local aSRAArea 	:= SRA->(GetArea())
If nTipo == 2
	For nCt:=1 to Len(aDeducao)
		If aDeducao[nCt,4]==.F. .And. aDeducao[nct,1]==cFilAtu .And. If(nPorCC == 3 ,.T., aDeducao[nCt,2]==cCcAtu)
			n21 += aDeducao[nct,3]
			aDeducao[nCt,4]:=.T.
		EndIf
	Next
Else
	If GetMvRH("MV_SALMGRP") = "N"   // DEDUCAO DE SAL.MATERN. NO 13O.SALARIO
		dbSelectArea("SRA")
		dbSetOrder(2)
		dbSeek(cFilIni+cCcIni,.T.)
		While !Eof() .And. cFilIni <= SRA->RA_FILIAL .And. cFilFim >= SRA->RA_FILIAL .And. SRA->RA_CC >= cCcIni .And. SRA->RA_CC <= cCcFim
			If (( lDicInter .And. Len(cTipCont) > 1 ) .Or. ( !lDicInter .And. cTipCont == "3" ))
				//FUNCAO DE DED. SAL.MAT. 13O.SALARIO
				//DEVE-SE VERIfICAR DDTREFE POIS A FC GPM240PROC TBEM EH CHAMADA DO GPEM650
				fDed13Mat(If(TYPE("dDtRefe")="D", dDtRefe, dDataBase), cTipo, aDeducao)
			Else
				If SRA->RA_TPCONTR $ cTpc    // VERIfICAR TIPO DE CONTRATO DO FUNCIONARIO
					//FUNCAO DE DED. SAL.MAT. 13O.SALARIO
					//DEVE-SE VERIfICAR DDTREFE POIS A FC GPM240PROC TBEM EH CHAMADA DO GPEM650
					fDed13Mat(If(type("dDtRefe")="D", dDtRefe  , dDataBase )  ,cTipo,aDeducao)
				EndIf
			EndIf
			dbSelectArea("SRA")
			dbSkip()
		Enddo
	EndIf
EndIf
RestArea(aSRAArea)
RestArea(aArea)
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³fDed13Mat³ Autor ³ Equipe RH              ³ Data ³ 11/11/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³FUNCAO DE DED. SAL.MAT. 13O.SALARIO                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEM240()                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fDed13Mat(dDataRef,cTipo,aDeducao)
Local nAvos 		:= 0
Local nItem		:= 0
Local nValDed13 	:= 0
Local lAchou		:= .F.
Local lAchouDed	:= .F.
Local bCondDed	:= { || (.T.) }
Local aArea		:= GetArea()
Local cRotSeek	:= ""
aEval( fGetRotTipo('6') , { |X| cRotSeek  += X+"/" } )
//DEMITIDOS NO MES OU 13.SALARIO QUE TENHA SAL.MATERNIDADE
If (SRA->RA_SITFOLH = "D" .And. MesAno(SRA->RA_DEMISSA) == MesAno(dDataRef)) .OR. cTipo == 2
	nVl13Sal:=0
	//APURA OS DIAS DE LICENCA MATERNIDADE OCORRIDOS NO ANO DA DATA DE REFERENCIA
	nDiasSM	:=fDiasSm13(Left(Dtos(dDataRef),4))
	nAvos	:=0
	If nDiasSM > 0
		If cTipo == 1      //FOLHA/FERIAS
			dbSelectArea('SRC')
			dbSetOrder(1)
			//VERIfICA A EXISTENCIA DA VERBA DE DEDUCAO DE SAL.MATERNIDADE PARA 13O SALARIO
			If aCodFol[670,1] <> "   "
				lAchouDed	:= dbSeek(SRA->RA_FILIAL + SRA->RA_MAT + aCodFol[670,1])
				If lAchouDed
					//CONDICAO PARA TESTAR A VERBA DE DEDUCAO SAL.MATERN.13O SAL.CASO EXISTA
					bCondDed	:= { || (SRC->RC_PD == aCodFol[670,1]) }
				EndIf
			EndIf
			//SE NAO ENCONTROU A VERBA DE DEDUCAO DE SAL.MATERNIDADE PARA 13O SALARIO PESQUISA O MOVIMENTO INTEIRO PARA APURAR A DEDUCAO
			If !lAchouDed
				lAchou := dbSeek(SRA->RA_FILIAL + SRA->RA_MAT)
			EndIf
			If lAchou .Or. lAchouDed
				While !Eof() .And. SRA->RA_FILIAL + SRA->RA_MAT == SRC->RC_FILIAL + SRC->RC_MAT .And. ;
					Eval(bCondDed)
					If !lAchouDed
						//VERIf. 13.SALARIO INDENIZADO E 13. SAL. AV. PREVIO
						//MEDIA 13O. SALARIO RESCISAO E MEDIA 13O. SALARIO SOBRE AVISO INDENIZADO RESCISAO
						If SRC->RC_PD == aCodFol[114,1] .Or. SRC->RC_PD == aCodFol[115,1] .or.;
						   SRC->RC_PD == aCodFol[251,1] .or. SRC->RC_PD == aCodFol[253,1]
							If SRC->RC_PD == aCodFol[114,1] .or. SRC->RC_PD == aCodFol[115,1]
								nAvos += Int(SRC->RC_HORAS)
							EndIf
							nVl13Sal += SRC->RC_Valor
						EndIf
					Else //ACUMULO OS VALORES JA CALCULADOS DE DEDUCAO DE SAL MATERNIDADE PARA 13O SALARIO
						nValDed13 += SRC->RC_VALOR
					EndIf
					dbSkip()
				Enddo
			EndIf
		Else		//13.SALARIO
			dbSelectArea('SRC')
			dbSetOrder(1)
			//VERIfICA SE EXISTEM VERBAS DE 13O SALARIO INDENIZADO NO MOVIMENTO MENSAL ANTES
			//DE BUSCAR A DEDUCAO DO 13O SALARIO, POIS A DEDUCAO JA FOI FEITA PELO MOVIMENTO MENSAL.
			If !dbSeek(SRA->RA_FILIAL + SRA->RA_MAT + aCodFol[114,1])
				If !dbSeek(SRA->RA_FILIAL + SRA->RA_MAT + aCodFol[115,1]) .And. ;
					!dbSeek(SRA->RA_FILIAL + SRA->RA_MAT + aCodFol[251,1]) .And. ;
					!dbSeek(SRA->RA_FILIAL + SRA->RA_MAT + aCodFol[253,1])
				    If Upper(AllTrim(RC_ROTEIR)) $ Upper(AllTrim(cRotSeek))
						//VERIfICA A EXISTENCIA DA VERBA DE DEDUCAO DE SAL.MATERNIDADE PARA 13O SALARIO
						If aCodFol[670,1] <> "   "
							lAchouDed	:= dbSeek(SRA->RA_FILIAL + SRA->RA_MAT + aCodFol[670,1])
							If lAchouDed
								//CONDICAO PARA TESTAR A VERBA DE DEDUCAO SAL.MATERN.13O SAL.CASO EXISTA
								bCondDed	:= { || (SRC->RC_PD == aCodFol[670,1]) }
							EndIf
						EndIf
						//SE NAO ENCONTROU A VERBA DE DEDUCAO DE SAL.MATERNIDADE PARA 13O SALARIO PESQUISA O MOVIMENTO INTEIRO PARA APURAR A DEDUCAO
						If !lAchouDed
							lAchou		:= dbSeek(SRA->RA_FILIAL + SRA->RA_MAT)
						EndIf
						If lAchou .Or. lAchouDed
							While !Eof() .And. (SRA->RA_FILIAL + SRA->RA_MAT == SRC->RC_FILIAL + SRC->RC_MAT) .And.;
								Eval(bCondDed)
								If !lAchouDed
									If PosSrv(SRC->RC_PD , SRA->RA_FILIAL , "RV_TIPOCOD") == "1" .And. PosSrv(SRC->RC_PD,SRC->RC_FILIAL,"RV_INSS") = "S"
										//CONSIDERA ID 123 E 124 - TOTAL MEDIAS EM HRS E VLRS
										If SRC->RC_PD == aCodFol[024,1]  .or. SRC->RC_PD == aCodFol[123,1] .or. SRC->RC_PD == aCodFol[124,1]
											nAvos := Int(If(nAvos==0,SRC->RC_HORAS, nAvos))
										EndIf
										nVl13Sal += SRC->RC_Valor
									EndIf
								Else //ACUMULO OS VALORES JA CALCULADOS DE DEDUCAO DE SAL MATERNIDADE PARA 13O SALARIO
									nValDed13 += SRC->RC_VALOR
								EndIf
								dbSkip()
							Enddo
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
	//ACUMULO A DEDUCAO DO SALARIO MATERNIDADE QUANDO HOUVER VALOR DE DEDUCAO CALCULADO OU
	//QUANDO HOUVER O VALOR BRUTO COM A QUANTIDADE DE AVOS DE DIREITO E DIAS DE SAL.MATERNIDADE
	If (nVl13Sal > 0 .Or. nValDed13 > 0) .And. nDiasSM > 0
		If nDiasSM > 0 .And. (nAvos > 0 .Or. nValDed13 > 0)
			nItem:=aScan(aDeducao,{ |x| x[1]==SRA->RA_FILIAL .And. x[2]==SRA->RA_CC })
			//SE O VALOR DA DEDUCAO JA ESTIVER ACUMULADO UTILIZO O PROPRIO VALOR, SENAO CALCULO A DEDUCAO
			nValDed13	:= If(nValDed13==0,ROUND(((nVl13Sal/nAvos)/30)*nDiasSM,2),nValDed13)
			If nItem > 0
				aDeducao[nItem,3] += nValDed13
			Else
				aAdd(aDeducao,{SRA->RA_FILIAL,SRA->RA_CC,nValDed13,.f.})
			EndIf
		EndIf
	EndIf
EndIf

RestArea(aArea)
Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³AbrePar   ³ Autor ³ Wagner Xavier         ³ Data ³ 11/11/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Abre arquivo de Parametros                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AbrePar()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEM240()                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AbrePar()
Local nError
Local cMsg

If !FILE(cArqConf)
	Help(" ",1,"NOARQPAR")
	Return .F.
ElseIf nMd1Md2Spg == 1  // CNAB MODELO 1
	nHdlBco:=FOPEN(cArqConf,0+64)
ElseIf nMd1Md2Spg == 2  // CNAB MODELO 2
	Return .T.
ElseIf nMd1Md2Spg == 3  // SISPAG
	nHdlBco:=FOPEN(cArqConf,0)
EndIf

//CRIA ARQUIVO SAIDA
nHdlSaida	:=	MSFCREATE(cArqSaida,0)
nError		:=	Ferror()

If nError # 0 .AND. nHdlSaida == -1
	cMsg := STR0016 + STR(nERROR,2) //"ERRO DE ABERTURA, CODIGO DOS:"
	Aviso(STR0010, cMsg, { "OK" },,STR0017) //"ATENCAO"###"IMPOSSIVEL CRIAR ARQUIVO DE SAIDA"
	Return .F.
EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Fm240Linha³ Autor ³ Emerson Rosa de Souza ³ Data ³ 23.06.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Grava linha do Arquivo Remessa SisPag                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Fm240Linha(cRegSispag, nTipoReg, lGeraTit)               ³±±
±±³          ³ cRegSispag: letra correspondente  „ linha do arquivo de     ³±±
±±³          ³              configura‡„o SisPag.                            ³±±
±±³          ³ nTipoReg:   1 - Header Arquivo                             ³±±
±±³          ³ nTipoReg:   2 - Header Lote                                ³±±
±±³          ³ nTipoReg:   3 - Detalhe                                    ³±±
±±³          ³ nTipoReg:   4 - Trailer Lote                               ³±±
±±³          ³ nTipoReg:   5 - Trailer Arquivo                            ³±±
±±³          ³ lGeraTit:   Indica se dever gerar titulo                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM240()                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Fm240Linha(cRegSispag,nTipoReg,lGeraTitu)
Local lTemReg := .F.
Local nError
Local cMsg
Local aFoneSM0	:= {}
Local aArea		:= GetArea()
Private aInfo      := {}
Private cCgc       := ""
Private cRazao     := ""
Private cEndereco  := ""
Private cTelefone  := ""
Private cCep       := ""
Private cCidade    := ""
Private cUf        := ""
Private cCei       := ""
Private nTipInsc   := 0
Private nValINSS   := 0
Private nValFunc   := 0
Private nValEmpr   := 0
Private nValEntid  := 0
Private nValDedGps := 0
Private nSlCtrFun  := 0
Private nSlCtrEmp  := 0

lGeraTitu := If(lGeraTitu == Nil, .F., lGeraTitu)

If !fInfo(@aInfo,cFil)
	RestArea(aArea)
	Return Nil
EndIf

cCgc       := aInfo[8]
cCei       := If(Len(aInfo) >= 27 .And. !Empty(aInfo[27]), aInfo[27], aInfo[8])
nTipInsc   := aInfo[15]			 // 1-CEI   2-CGC   3-CPF   4-INCRA
cRazao     := PadR(aInfo[3],40)
//FUNCAO PARA DESMEMBRAR O TELEFONE EM UM VETOR COM 3 ELEMENTOS:
//  	1O ELEMENTO - REFERE-SE AO DDI
//		2O ELEMENTO - REFERE-SE AO DDD
//		3O ELEMENTO - REFERE-SE AO TELEFONE
//     DEVE-SE ENVIAR O TELEFONE EM UMA VARIAVEL CARACTER COM O CONTEUDO DO CAMPO SM0->M0_FONE
aFoneSM0	:= FisGetTel(aInfo[10])
cTelefone	:= PadR(Str(aFoneSM0[01],2) + Str(aFoneSM0[02],2) + Str(aFoneSM0[03],8), 14)
cEndereco	:= PadR(aInfo[4],30)
cCidade	:= PadR(aInfo[5],20)
cBairro	:= PadR(aInfo[13],20)
cCep		:= PadR(aInfo[7],8)
cMunicipio	:= PadR(aInfo[5],20)
cUf			:= PadR(aInfo[6],2)

//MONTA OS VALORES DA GUIA E GERA O TITULO
If lGeraTitu
	fMontaVal(nTipoReg)
	fGravTit(cFilAnterior, cCcOld, , If((nValINSS + nValJuros) < 0 ,nValEntid , (nValINSS + nValEntid + nValJuros)))
Else
	//CRIA O HEADER DO CNAB MODELO 2
	If nTipoReg == nHeadArq .And. nMd1Md2Spg == 2
		nHdlSaida 	:= 	HeadCnab2(cArqSaida,cArqConf)
		nError		:=	Ferror()
		If nError # 0 .AND. nHdlSaida == -1
			cMsg := STR0016 + STR(nERROR,2) //"ERRO DE ABERTURA, CODIGO DOS:"
			Aviso(STR0010, cMsg, { "OK" },,STR0017) //"ATENCAO"###"IMPOSSIVEL CRIAR ARQUIVO DE SAIDA"
		EndIf
		RestArea(aArea)
		Return Nil
	EndIf

	//MONTA OS CAMPOS - INSS, OUTRAS ENTIDADES E JUROS/MULTA
	If nTipoReg # nHeadArq .And. nTipoReg # nTraiArq
		If !fMontaVal(nTipoReg)
			RestArea( aArea )
			Return Nil
		EndIf
	EndIf

	//TRATAMENTO ESPECIAL DE CONTAGEM SE HEADER DE ARQUIVO.
	If nTipoReg == nTraiArq
		nTotRegArq ++
		nNumRegLote --
		nTotRegLote --
	EndIf

	If nMd1Md2Spg == 1
		lTemReg := fLerCNAB(nMd1Md2Spg,nTipoReg)
	ElseIf nMd1Md2Spg == 2
		lTemReg := fLerCNAB(nMd1Md2Spg,nTipoReg)
	ElseIf nMd1Md2Spg == 3
		lTemReg := fLerSISPAG(cRegSispag)
	EndIf

	If lTemReg
		nSeq       ++
		nTotRegArq ++
		If nTipoReg == nHeadArq .Or. nTipoReg == nTraiLote
			nNumRegLote ++
			nTotRegLote ++
		EndIf
	EndIf
EndIf

RestArea(aArea)
Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ fLerCNAB ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 24/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Grava o registro no padrao CNAB                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ fLerCNAB()                                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function fLerCNAB(nMod1Mod2,nTipoReg)
Local lTemReg      := .F.
Local nLidos       := 0
Local nTamArq      := 0
Local nTam         := 0
Local nDec         := 0
Local cConteudo    := ""
Local nRegProc     := If(nTipoReg == nHeadArq, CHR(1), If(nTipoReg == nDetalhe, CHR(2),;
					  If(nTipoReg == nTraiArq, CHR(3), "/")))

//LE ARQUIVO DE PARAMETRIZACAO CNAB MODELO1 E SISPAG
If nMod1Mod2 == 1
	nLidos:=0
	fSeek(nHdlBco,0,0)
	nTamArq:=FSEEK(nHdlBco,0,2)
	fSeek(nHdlBco,0,0)
	While nLidos <= nTamArq
		//VERIfICA O TIPO QUAL REGISTRO FOI LIDO
		xBuffer:=Space(85)
		FREAD(nHdlBco,@xBuffer,85)
		If SubStr(xBuffer,1,1) == nRegProc
			lTemReg := .T.
			nTam := 1+(Val(SubStr(xBuffer,20,3))-Val(SubStr(xBuffer,17,3)))
			nDec := Val(SubStr(xBuffer,23,1))
			cConteudo:= SubStr(xBuffer,24,60)
			If !fM240Grava(nTam,nDec,cConteudo)
				Exit
			EndIf
		EndIf
		nLidos+=85
	EndDo
	If lTemReg
		fWrite(nHdlSaida,CHR(13)+CHR(10))
	EndIf
ElseIf nMod1Mod2 == 2
	lTemReg := .T.
	If nTipoReg == nDetalhe
		DetCnab2(nHdlSaida,cArqConf)
	ElseIf nTipoReg == nTraiArq
		RodaCnab2(nHdlSaida,cArqConf)
	EndIf
EndIf

Return lTemReg

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³fLerSISPAG³ Autor ³ Emerson Rosa de Souza ³ Data ³ 24/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Grava o registro no padrao SISPAG                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ fLerSISPAG()                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fLerSISPAG(cRegSispag)
Local nLidos       := 0
Local nTamArq      := 0
Local nTam         := 0
Local nDec         := 0
Local lTemReg      := .F.
Local cConteudo    := ""

//LEˆ ARQUIVO DE PARAMETRIZA‡„O
nLidos  := 0
fSeek(nHdlBco,0,0)
nTamArq := fSeek(nHdlBco,0,2)
fSeek(nHdlBco,0,0)

//VERIfICA O TIPO QUAL REGISTRO FOI LIDO
While nLidos <= nTamArq
	xBuffer := Space(85)
	fRead(nHdlBco,@xBuffer,85)
	If SubStr(xBuffer,1,1) == cRegSispag
		lTemReg   := .T.
		nTam      := 1+(Val(SubStr(xBuffer,20,3))-Val(SubStr(xBuffer,17,3)))
		nDec      := Val(SubStr(xBuffer,23,1))
		cConteudo := SubStr(xBuffer,24,60)
		If !fM240Grava(nTam,nDec,cConteudo)
			Exit
		EndIf
	EndIf
	nLidos += 85
Enddo

//GRAVA OS INDICADORES DE FIM DE LINHA
If lTemReg
	FWRITE(nHdlSaida,CHR(13)+CHR(10))
EndIf

Return lTemReg

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³fM240Grava³ Autor ³                       ³ Data ³ 11.11.96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Rotina de Gera‡„o do Arquivo de Remessa de Comunica‡„o          ³±±
±±³          ³Banc ria p/ Contas a Receber                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ExpL1 := fM240Grava(ExpN1,ExpN2,ExpC1)                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM240()                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function fM240Grava(nTam,nDec,cConteudo)
Local lConteudo := .T., cCampo

While .T.
    //ANALISA CONTEUDO
	If Empty(cConteudo)
		cCampo := Space(nTam)
	Else
		lConteudo := fm240Orig(cConteudo)
		If !lConteudo
			Exit
		Else
			If ValType(xConteudo)="D"
				cCampo := GravaData(xConteudo,.F.)
			ElseIf ValType(xConteudo)="N"
	            cCampo := Substr(Strzero(xConteudo,nTam,nDec),1,nTam)
			Else
    	        cCampo := Substr(xConteudo,1,nTam)
			EndIf
		EndIf
	EndIf
	If Len(cCampo) < nTam  //PREENCHE CAMPO A SER GRAVADO, CASO MENOR
		cCampo := cCampo+Space(nTam-Len(cCampo))
	EndIf
	Fwrite(nHdlSaida,cCampo,nTam)
	Exit
EndDo
Return lConteudo

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³fm240Orig ³ Autor ³ Wagner Xavier         ³ Data ³ 11/11/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³VerIfica se expressao e' valida para Remessa CNAB.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM240()                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fm240Orig(cForm)
Local bBlock:=ErrorBlock(),bErro := ErrorBlock({|e| ChecErr260(e,cForm)})
Private lRet := .T.

BEGIN SEQUENCE
	xConteudo := &cForm
END SEQUENCE
ErrorBlock(bBlock)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³fMontaVal ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 24/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Monta os valores da GPS.                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ fMontaVal(nTipoReg)                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fMontaVal(nTipoReg)

Local lTemVal := .T.

//GERA GPS POR CENTRO DE CUSTO
If nPorCc == 1 .OR. nPorCc == 2
	dbSelectArea("CTT")
	dbSeek(XFILIAL("CTT", cFil)+cParam)

	If TYPE("CTT->CTT_CEI") # "U" .AND. ((TYPE("CTT->CTT_RECFAT") #"U" .AND. CTT->CTT_RECFAT <> "S") .OR. (TYPE("CTT->CTT_RECFAT") == "U")) //CEI
		cCei := Left(CTT->CTT_CEI,14)
	EndIf
	dbSelectArea("SRZ")
EndIf

//VALOR INSS - EMPREGADOS
If cEscolha == "1"
	If n16 # 0 .And. n16 # Nil
		nValFunc  := n16
		nValINSS  += n16
	EndIf
Else
	If n16Fil # 0 .And. n16Fil # Nil
		nValFunc  := n16Fil
		nValINSS  += n16Fil
	EndIf
EndIf

//VALOR INSS - EMPRESA
If cEscolha == "1"
	If (n17 # 0 .And. n17 # Nil) .Or. (n17a # 0)
		nValEmpr := n17 + n17a
		nValINSS += (n17 + n17a)
	EndIf
Else
	If (n17Fil # 0 .And. n17Fil # Nil) .Or. (n17aFil # 0)
		nValEmpr := n17Fil + n17aFil
		nValINSS += (n17Fil + n17aFil)
	EndIf
EndIf

//VALOR DE OUTRAS ENTIDADES - TERCEIROS
If cEscolha == "1"
	If n18 # 0 .And. n18 # Nil
		nValEntid  := n18
	EndIf
Else
	If n18Fil # 0 .And. n18Fil # Nil
		nValEntid  := n18Fil
	EndIf
EndIf

//VALOR DAS DEDUCOES
If cEscolha == "1"
	If n21 # 0 .And. n21 # Nil
		nValDedGps := n21
		nValINSS := Max(nValINSS - n21, 0)
	EndIf
Else
	If n21Fil # 0 .And. n21Fil # Nil
		nValDedGps := n21Fil
		nValINSS := Max(nValINSS - n21Fil, 0)
	EndIf
EndIf

//SALARIO CONTRIBUICAO EMPREGADOS
If cEscolha == "1"
	If n81 # 0 .And. n18 # NIL
		nSlCtrFun := n81
	EndIf
Else
	If n81Fil #0 .And. n18Fil # NIL
		nSlCtrFun := n81Fil
	EndIf
EndIf

//SALARIO CONTRIBUICAO EMPREGADORES/AUTONOMOS
If cEscolha == "1"
	If n82 # 0 .And. n82 # NIL
		nSlCtrEmp := n82
	EndIf
Else
	If n82Fil #0 .And. n82Fil # NIL
		nSlCtrEmp := n82Fil
	EndIf
EndIf

//TOTALIZA OS VALORES DE INSS NO ARRAY aTotINSS
If nTipoReg == nDetalhe
	fTOTINSS(aTotINSS[1,1], 0, .T.)  // VALOR TOTAL DO INSS A RECOLHER
	fTOTINSS(aTotINSS[2,1], 0, .T.)  // VALOR TOTAL DO INSS FUNCIONARIOS
	fTOTINSS(aTotINSS[3,1], 0, .T.)  // VALOR TOTAL DO INSS EMPRESA
	fTOTINSS(aTotINSS[4,1], 0, .T.)  // VALOR TOTAL DO INSS OUTRAS ENTIDADES - TERCEIROS
	fTOTINSS(aTotINSS[5,1], 0, .T.)  // VALOR TOTAL DAS DEDUCOES
	fTOTINSS(aTotINSS[6,1], 0, .T.)  // SALARIO CONTRIBUICAO DOS FUNCIONARIOS
	fTOTINSS(aTotINSS[7,1], 0, .T.)  // SALARIO CONTRIBUICAO DOS EMPREGADORES/AUTONOMOS
EndIf

If ( nValFunc + nValEmpr + nValEntid + nSlCtrFun + nSlCtrEmp ) == 0 .And. ( nPorCc == 1 .Or. nPorCc == 2 )
	lTemVal := .F.
EndIf

Return( lTemVal )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³fValor    ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 24/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Formata os valores para geracao do arquivo                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ fValor()                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fValor(nValor,nTamanho)
Return StrZero(NoRound(nValor * 100,0),nTamanho)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³fString   ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 24/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Formata as strings para geracao do arquivo                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ fString()                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fString(cString,nTamanho)
Return Substr(cString + Space(nTamanho), 1, nTamanho)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ FGETGPS  ³ Autor ³ Equipe RH          ³ Data ³ 08/02/96    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Permite que o usuario selecione o arquivo de configuracao  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³uso                                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function FGETGPS()
Local mvRet:=Alltrim(ReadVar())
Local cExtensao := If(MV_PAR17 == 1, "CPE", If(MV_PAR17 == 2, "2PE", "PAG"))

oWnd := GetWndDefault()
While .T.
	cFile := cGetFile("*."+cExtensao+"|"+"*."+cExtensao, OemToAnsi(STR0011)) //##"SELECIONE DIRETORIO"
	If Empty(cFile)
		Return .F.
	EndIf
	If "."$cFile
		cFile := Substr(cFile,1,rat(".", cfile)-1)
	EndIf
	cFile += "." + cExtensao
	&mvRet := cFile
	Exit
EndDo
If oWnd != Nil
	GetdRefresh()
EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ fTOTINSS ³ Autor ³ Equipe RH             ³ Data ³ 10/09/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Soma no array ou retorna os totais do INSS                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³USO       ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fTOTINSS(cVarTot,nTamanho,lSoma)
Local nPosVar
Local uRet			:= 0.00
Local aVarBusca  := {}
Local nCnt

nTamanho := If(nTamanho == Nil,   0, nTamanho)
lSoma    := If(lSoma    == Nil, .F., lSoma)

//CARREGA ARRAY COM AS VARIAVEIS PASSADAS NO PARAMETRO
cVarTot   := '{ ' + '"' + StrTran(cVarTot, '+', '","') + '"' + ' }'
aVarBusca := &cVarTot

//TOTALIZA AS VARIAVEIS PASSADAS NO PARAMETRO
For nCnt := 1 To Len(aVarBusca)
	nPosVar := Ascan(aTotINSS, { |x| x[1] == UPPER(aVarBusca[nCnt]) })
	If nPosVar > 0
		If lSoma
			cVarTot := aVarBusca[nCnt]
			aTotINSS[nPosVar, 2] += &cVarTot
		Else
			uRet += aTotINSS[nPosVar,2]
		EndIf
	Else
		Aviso(STR0026, STR0027 + aVarBusca[nCnt] + STR0028 +; //"Aviso" ### "A variavel [ " ### " ] definida no LAY-OUT "
			   STR0029, {"Ok"}) // "nao existe no programa. VerIfique a relacao de variaveis disponiveis."
	EndIf
Next nCnt
If !lSoma .And. nTamanho > 0
	uRet := fValor(uRet,nTamanho)
EndIf

Return uRet

/*	VARIAVEIS DISPONIVEIS PARA UTILIZACAO NO ARQUIVO SISPAG
cCgc				// CGC
cCei				// CEI
nTipInsc            // Tipo de Inscricao   1-CEI   2-CGC   3-CPF   4-INCRA
cRazao				// Razao Social
cEndereco           // Endereco
cTelefone           // Telefone
cCep                // CEP
cCidade             // Cidade
cUf                 // Estado
==================================================================================
cCentra             // Filial Centralizadora
cCompetencia        // Competencia do Recolhimento
cCodPag             // Codigo de Pagamento
dDatRemessa         // Data da Remessa
dDatVencto          // Data do Vencimento da Guia
cCodAgencia		    // Codigo da Agencia
cNumConta           // Numero da Conta
==================================================================================
nValJuros           // Valor do Juros/Multa e Atualizacao Monetaria
nValINSS			// Valor do INSS a Recolher
nValFunc			// INSS Funcionarios
nValEmpr            // INSS Empresa
nValEntid		    // Valor de Outras Entidades
nValDedGps          // INSS Deducoes
nSlCtrFun           // Salario Contribuicao Funcionarios
nSlCtrEmp           // Salario Contribuicao Empregadores/Autonomos
fTOTINSS("nValINSS")    // Valor Total do INSS a Recolher (Menos Valor de Terceiros)
fTOTINSS("nValFunc")    // Valor Total do INSS Funcionarios
fTOTINSS("nValEmpr")    // Valor Total do INSS Empresa
fTOTINSS("nValEntid")   // Valor Total do INSS Outras Entidades - Terceiros
fTOTINSS("nValDedGps")  // Valor Total das Deducoes
fTOTINSS("nSlCtrFun")   // Salario Contribuicao dos Funcionarios
fTOTINSS("nSlCtrEmp")   // Salario Contribuicao dos Empregadores/Autonomos
==================================================================================
GRAVADATA(ExpD1,ExpL1,ExpN1)
ExpD1 := Data a ser convertida
ExpL1 := Tipo - Se .T. com Barra se .F. sem Barra
ExpN1 := Formato (1,2,3)
Formato 1 := ddmmaa
		2 := mmddaa
		3 := aaddmm
		4 := aammdd
		5 := ddmmaaaa
		6 := mmddaaaa
		7 := aaaaddmm
		8 := aaaammdd
==================================================================================
INCREMENTA  // Incrementa um sempre que montar uma nova linha
==================================================================================
nTotRegArq  // Total de registros gravados - Inclui o Header eo Trailer
==================================================================================
GetSXENum() // Grava numero de sequencial do arquivo - nunca devera ser o mesmo
==================================================================================
fValor(nValor,nTam)  // Funcao que retorna um valor com zeros a esquerda no tamanho definido
==================================================================================
fString(cString,nTam)  // Funcao que retorna uma String com o tamanho definido
==================================================================================
*/

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Gpm240PrcD ³ Autor ³ Luis Ricardo Cinalli  ³ Data ³ 21/07/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao de processamento da GPS de Dissidio					³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Gpm240PrcD(nTipGer, lEnd, WnRel, cFilArq, cFilIni, cFilFim,	³±±
±±³			 ³			   cCcIni, cCcFim, cTipCont, cAnoMes)				³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM240														³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gpm240PrcD(nTipGer, lEnd, WnRel, cFilArq, cFilIni, cFilFim, cCcIni, cCcFim, cTipCont, cAnoMes)

	Local lFim 		:= .T.   // SE FINALIZA O LOOPING
	Local cTipoGPS  := ""
	Local cArqNtx	:= ""
	Local lFiltrou
	Local nIndex
	Local nSavOrd
	Local nX 		:= 0
	Local cCodGps	:= ""
	Local cCodPrm	:= ""
	Local cRHH		:= 'RHH'
	Local cTPRDbf,cTPRNtx
	Local lTemItemClVl  := 	SRR->(FieldPos("RR_ITEM") # 0) .and. SRR->(FieldPos("RR_CLVL") # 0) .and. ;
	 						RHH->(FieldPos("RHH_ITEM") # 0) .and. RHH->(FieldPos("RHH_CLVL") # 0)
	Local lTemRescDis:=.F.
	Local lCriouDB	 :=.F.
	Local bCriouDB	 := {|x| lCriouDB:= x }
	Local aAreaBkp	:= {}
	Local oFont07   := TFont():New("Arial",07,10,,.F.,,,,.T.,.F.)
	Local cTpcGps	:= ""
	Local lFuncDemi	:= .F.

	Private lDicInter	:= FindFunction("fChkInterm") .And. fChkInterm()
	Private n16         := n17    := n17a    := n17ap   := n17aa  := n17b   := n18    := n21    := n81    := n82     := nVez  :=  0
	Private n16Fil      := n17Fil := n17aFil := n17bFil := n18Fil := n21Fil := n81Fil := n82Fil  := 0
	Private nEmpregados := 0
	Private cTerceiros  := Space(4)
	Private lPrimeira   := .T.
	Private nHdlBco     := 0
	Private nHdlSaida   := 0
	Private nSeq        := 0  // SERA UTILIZADA NA FUNCAO INCREMENTA() NO LAY-OUT
	Private nTotRegArq  := 0  // SERA UTILIZADO NO LAY-OUT
	Private nTotRegLote := 0  // SERA UTILIZADO NO LAY-OUT
	Private nNumRegLote := 0  // SERA UTILIZADO NO LAY-OUT
	Private nLin        := 0  // SERA UTILIZADO NA IMPRESSAO DA GPS
	Private xConteudo
	Private aInssEmp[25][2]
	Private aGpsVal		:= {}
	Private cFil
	Private cParam
	Private lImpVez		:= .T.
	Private lTemDedMat	:= .F.
	Private dDtBaseIni  := CtoD("01/01/" + Right(cAnoMes,4), "DDMMYY")
	Private dDtBaseFim  := CtoD("31/12/" + Right(cAnoMes,4), "DDMMYY")
	Private aCodFol     := {}
	Private aDeducao    := {}
	Private nHeadArq    := 1
	Private nHeadLote   := 2
	Private nDetalhe    := 3
	Private nTraiLote   := 4
	Private nTraiArq    := 5
	//DEFINE VARIAVES PARA FACILIAR O TRATAMENTO DO PROCESSAMENTO
	Private lGeraTexto  := (nTipGer == 1)
	Private lImpRelato  := (nTipGer == 2)
	Private lGeraTitulo := (nTipGer == 3)
	Private cObservacao := ""
	Private aLog		:= {}
	//LEI 10.710 -05/08/2003(DOU 06/08/2003)
	//LIMITA O VLR QUE A EMPRESA PODE DEDUZIR DA GUIA
	Private nLimDMat 	:= GetMvRH("MV_LIMDMAT",, 0)
	Private oPrint
	Private nQtdGPS		:= 0
	Private nVlrMinGPS	:= 0
	If Type("cCodPag") == "U"
		cCodPag	:=  ""
	EndIf

	nSavRec := ""

	If lImpRelato
		If nTipRel == 3
			oPrint 	:= TMSPrinter():New(STR0030) // "GPS - Guia da Previdência Social"
			oPrint	:SetPortrait()
			oPrint	:StartPage()
			nLin 	:= 030
		EndIf
	EndIf

	//ABERTURA ARQUIVO ASC II
	If lGeraTexto
		If !AbrePar()
			Return Nil
		EndIf

		//CONFIGURACAO PARA GERACAO DE ARQUIVO SISPAG
		cHeadArq  := "A"   //Header Arquivo
		cHeadLote := "B"   //Header  Lote 1   Header Lote Cheque/OP/DOC/Cred.CC
		cTraiLote := "D"   //Trailler Lote Cheque/OP/DOC/Cred.CC
		cTraiArq  := "F"   //Trailer Arquivo
		cDetalhe  := "N"   //GPS

		//GRAVA O HEADER DE ARQUIVO
		fm240Linha(cHeadArq, nHeadArq)
	EndIf

	//CRIAR OS ARRAYS COM OS NIVEIS DE QUEBRAS
	If nPorCc = 2
	    Private aCc1[10]         // CENTRO DE CUSTO
	    aFill(aCc1,0)
	    Private cCcAnt1 := " "   // VARIAVEIS C.CUSTO DOS NIVEIS DE QUEBRA
	EndIf

	cFilAnterior :=  Replicate("!", FWGETTAMFILIAL)
	nEmpregados  := 0
	nTotFunc     := 0

	//VARIAVEIS DE TOTAIS DISPONIVEIS-DEVEM SER EM LETRA MAIUSCULA
	aTotINSS := { {"NVALINSS"  ,0}, {"NVALFUNC" ,0}, {"NVALEMPR" ,0}, {"NVALENTID",0}, {"NVALDEDGPS",0}, {"NSLCTRFUN",0}, {"NSLCTREMP",0} }


	dbSelectArea("SRA")
	dbSetOrder(1)

	//VERIfICAR SE EXISTE RESCISAO COMPLEMENTAR POR DISSIDIO NO ANOMES DE COMPETENCIA SOLICITADO
	lTemRescDis	:= .F.
	lCriouDB	:= .F.

	If (lTemRescDis := VerRescDis(@cRHH, cFilIni, cFilFim, cCcIni, cCcFim, cTipCont, cAnoMes, @cTPRDbf,@cTPRNtx,lTemItemClVl,bCriouDB))
		//A GERACAO DA GPS DO DISSIDIO SERA PELO TEMPORARIO (SRR POR DISSIDIO  X RHH)
		dbSelectArea(cRHH)
	Else
		dbSelectArea("RHH")
		dbSetOrder(3)		// RHH_FILIAL + RHH_MESANO + RHH_CC + RHH_DATA + RHH_MAT + RHH_VB + RHH_ITEM + RHH_CLVL
	EndIf

	//DESENHA CURSOR PARA MOVIMENTACAO
	lFiltrou := .F.
	If lImpRelato
		SetRegua((cRHH)->(RecCount()))
	Else
		ProcRegua((cRHH)->(RecCount()))
	EndIf

	DbSeek(cFilIni + cAnoMes + cCcIni, .T.)
	cFil     := (cRHH)->RHH_FILIAL
	cParam   := "\\\\\\\\\"
	nTamCC	 := TamSX3("RHH_CC")[1]

	SRK->(DBSetOrder(1))
	While (cRHH)->(! Eof()) .and. (cRHH)->RHH_FILIAL >= cFilIni .And. (cRHH)->RHH_FILIAL <= cFilFim .AND. (cRHH)->RHH_CC >= cCcIni .And. (cRHH)->RHH_CC <= cCcFim .and. lFim = .T.

		// QUANDO BUSCA FOR DIRETO NA TABELA RHH
		If !lTemRescDis
			If (cRHH)->RHH_MESANO <> cAnoMes
				(cRHH)->(dbSkip())
				Loop
			EndIf

			If (cRHH)->RHH_INTEGR <> 'S'
				(cRHH)->(dbSkip())
				Loop
			EndIf
		EndIf

		//MOVIMENTA CURSOR
		If lImpRelato
			IncRegua()
		ElseIf lGeraTexto
			IncProc(STR0008) //"GPS EM DISQUETE (SISPAG)"
		ElseIf lGeraTitulo
			IncProc(STR0013 + " " + If(cTpc == "1", STR0014,If(cTpc == "2",STR0015,STR0018))) //"GERANDO TITULOS - INSS CONTRATO DETERMINADO/INDETERMINADO"
		EndIf

		// POSICIONA CAD. FUNCIONARIO E DESPREZA O MESMO SE NAO ENCONTRAR O FUNCIONARIO DO DISSIDIO NO SRA
		If ! SRA->(dbSeek(xFilial("SRA" ,(cRHH)->RHH_FILIAL) + (cRHH)->RHH_MAT))
			(cRHH)->(dbSkip())
			Loop
		EndIf

		//TIPO DE CONTRATO DETERMINADO OU INDETERMINADO
	    If (lDicInter .And. !(SRA->RA_TPCONTR $ cTpc)) .Or. (!lDicInter .And. (cTipCont $ "1*2" .and. SRA->RA_TPCONTR # cTpc))
			(cRHH)->(dbSkip())
			Loop
		EndIf

		//CANCELAMENTO DE IMPRESSAO
		If lEnd
			If lImpRelato
				@Prow()+1,0 PSAY cCancel
			EndIf
			Exit
		EndIf

		//Consiste acesso do usuario a filiais
		If ! ( (cRHH)->RHH_FILIAL $ fValidFil() )
			(cRHH)->(dbSkip())
			Loop
		EndIf

		If (cRHH)->RHH_FILIAL # cFilAnterior .And. lFim == .T.
			cFilAnterior := (cRHH)->RHH_FILIAL
			//CARREGA VARIAVEIS CODIGOS DA FOLHA
			If ! FP_CODFOL(@aCodFol, (cRHH)->RHH_FILIAL)
				Exit
			EndIf
	       // DEDUCAO SAL. MATERNIDADE - TIPO CONTRATO AMBOS (DETERMINADO E INDETERMINADO)
			If (lDicInter .And. SRA->RA_TPCONTR $ cTpc) .Or. ( !lDicInter .And. (( cTipCont == "3" ) .or. ( cTipCont $ "1*2" .and. SRA->RA_TPCONTR == cTpc )))
				If lPrimeira
					//TESTA SE UTILIZOU O IDENTIfICADOR 670 PARA FAZER A DEDUCAO DE SALARIO MATERNIDADE PARA 13O SALARIO
					If aCodFol[670,1] <> "   " .and. (cRHH)->RHH_VERBA == aCodFol[670,1]
						lTemDedMat	:= .T.
					EndIf
					aDeducao	:= {}
					lPrimeira	:= .F.
					If ! lTemDedMat
						FSDSMatern(1, "", "", cFilIni, cFilFim, cCcIni, cCcFim, cTipCont)// CALCULA DEDUCAO DE SAL.MATERNIDADE
					EndIf
				EndIf
			EndIf

			//TRATA SOMENTE ID'S RELACIONADOS A DISSIDIO
			cContribuicao := aCodFol[338,1]+"x"+aCodFol[399,1]		// BASE DO INSS
			cDescInss     := aCodFol[340,1]+"x"+aCodFol[401,1]		// VALOR DO INSS

			//CARREGA PARAMETRO INSS EMPRESA
			If ! fInssEmp((cRHH)->RHH_FILIAL, @aInssEmp,, cAnoMes)
				Exit
			EndIf

			//CARREGA CODIGO DE PGTO. DA GPS
			cTpcGPS	:= If(SRA->RA_TPCONTR == "3", "1", SRA->RA_TPCONTR)		//TIPO CONTRATO = 3-AMBOS, UTILIZAR ENCARGOS INFORMADOS NO TIPO CONTRATO 1
			cCodPag		:= If( !Empty(cCodPag), cCodPag, aInssEmp[24,Val(cTpcGPS)] )

			//CARREGA VALOR MINIMO PARA RECOLHIMENTO DA GPS
			nVlrMinGPS := aInssEmp[28,Val(cTpcGPS)]

			//TRAZ OS VALORES DA GPS CADASTRADOS NA TABELA AUXILIAR S035
			aGpsVal := {}
			fGPSVal(cFilAnterior, If(cTipo == 2, Left(cAnoMes,4)+"13", cAnoMes), @aGPSVal, cTpcGPS)
			for nx := 1 to len(aGpsVal)
				cObservacao += space(01)+alltrim(aGpsVal[nx,7])
			next
		EndIf

		//VARIAVEL DA QUEBRA DE C. CUSTO
		cCcOld	:= "!!!!!!!!!"
		cCodPrm := cCodPag
		cOldMat := "!!!!!!"
		cOldPd  := "!!!"
		cOldTpc := "!"
		lFirst	:= .T.

		DbSelectArea(cRHH)
		While (cRHH)->(! Eof()) .and. (cRHH)->RHH_FILIAL == cFilAnterior .AND. ;
				(cRHH)->RHH_MESANO == cAnoMes .And. (cRHH)->RHH_CC >= cCcIni .And. (cRHH)->RHH_CC <= cCcFim .and. lFim = .T.

			//MOVIMENTA REGUA
			If lImpRelato
				IncRegua()
			ElseIf lGeraTexto
				IncProc(STR0008) //"GPS EM DISQUETE (SISPAG)"
			ElseIf lGeraTitulo
				IncProc(STR0013 + " " + If(cTpc == "1", STR0014, If(cTpc == "2", STR0015, STR0018))) //"GERANDO TITULOS - INSS CONTRATO DETERMINADO/INDETERMINADO"
			EndIf

			If !lTemRescDis .And. (cRHH)->RHH_INTEGR <> 'S'
				(cRHH)->(dbSkip())
				Loop
			EndIf

			// POSICIONA CAD. FUNCIONARIO E DESPREZA O MESMO SE NAO ENCONTRAR O FUNCIONARIO DO DISSIDIO NO SRA
			If ! SRA->(dbSeek(xFilial("SRA" ,(cRHH)->RHH_FILIAL) + (cRHH)->RHH_MAT))
				(cRHH)->(dbSkip())
				Loop
			EndIf

			//ACUMULA OS VALORES DO DISSIDIO ACUMULADO (RHH) E CALCULA OS PERCENTUAIS
			If ( lDicInter .And. SRA->RA_TPCONTR $ cTpc) .Or. (!lDicInter .ANd. (( cTipCont == "3" ) .or. ( cTipCont $ "1*2" .and. SRA->RA_TPCONTR == cTpc )))
				FAcumDis(@n16, @n17, @n17a, @n17ap, @n17aa, @n17B, @n18, @n21, @n81, @n82, aCodFol, cRHH)
			EndIf

			//CONTADOR DE FUNCIONARIOS
			If (cRHH)->RHH_MAT # cOldMat .and. ( ( lDicInter .And. SRA->RA_TPCONTR $ cTpc) .Or. ((( cTipCont == "3" ) .or. ( cTipCont $ "1*2" .and.  SRA->RA_TPCONTR == cTpc ))))
				nEmpregados += 1
			EndIf

			cOldMat := (cRHH)->RHH_MAT
			cOldPd  := (cRHH)->RHH_VERBA
			cOldTpc := SRA->RA_TPCONTR
			lFirst	:= .F.

			DbSelectArea(cRHH)
			(cRHH)->(dbSkip())

			//QUEBRA DO CENTRO DE CUSTO
			If ( cCcOld # (cRHH)->RHH_CC ) .Or. ;
				( ! lFirst .And. (cRHH)->RHH_FILIAL != cFilAnterior )
				If lImpRelato
					If nlin > 61 .And. nTipRel == 2
						nlin := 0
					EndIf
				EndIf

				If nPorCC # 3 .and. CTT->(FieldPos("CTT_CODGPS")) # 0
					cCodGPS := fDesc("CTT",cCCOld,"CTT_CODGPS")
					cCodPag := If(!empty(cCodGPS),cCodGps,cCodPrm)
				EndIf

				//VERIfICA SE A IMPRESSAO PRO C. CUSTO
				cFil     := cFilAnterior
				cParam   := cCcOld
				cEscolha := "1"

				If lDicInter
					If SRA->RA_TPCONTR $ cTpc
						FSDSMatern(2, cFilAnterior, cCcOld, cFilIni, cFilFim, cCcIni, cCcFim, cTipCont)	//CALCULA DEDUCAO DE SAL.MATERNIDADE
					EndIf
				Else
					If ! cTipCont == "3" .and. SRA->RA_TPCONTR == cTpc
						FSDSMatern( 2, cFilAnterior, cCcOld, cFilIni, cFilFim, cCcIni, cCcFim, cTipCont )	// -- Calcula Deducao de Sal.Maternidade
					Else
						FSDSMatern( 2, cFilAnterior, cCcOld, cFilIni, cFilFim, cCcIni, cCcFim, cTipCont )	// -- Calcula Deducao de Sal.Maternidade
					Endif
				EndIf

				If nPorCC == 1 //POR CENTRO DE CUSTO
					If lImpRelato
						CarImpGPS()
					//GRAVA AS LINHAS DE DETALHE NO ARQUIVO DE SAIDA
					ElseIf lGeraTexto
						fm240linha(cHeadLote, nHeadLote)
						fm240Linha(cDetalhe, nDetalhe)
						fm240linha(cTraiLote, nTraiLote)
					ElseIf lGeraTitulo
						fm240linha(,,.T.)
					EndIf
				EndIf
				//ACUMULA NOS TOTALIZADORES DA FILIAL
				n16Fil  += n16
				n17Fil  := 0
				n17aFil += n17
				n17bFil += n17b
				n18Fil  += n18
				n21Fil  += n21
				n81Fil  += n81
				n82Fil  += n82
				nTotFunc+= nEmpregados

				//QUEBRA POR NIVEIS DE C.CUSTO
				If nPorCc == 2 .And. Val(cNivCCusto) > 0
					aCc1[1]  := cCcAnt1
					aCc1[2]  += n16
					aCc1[3]  += n17
					aCc1[4]  += n17a
					aCc1[5]  += n17b
					aCc1[6]  += n18
					aCc1[7]  += n21
					aCc1[8]  += n81
					aCc1[9]  += n82
					aCc1[10] += nEmpregados
					If ((cRHH)->RHH_CC > cCcFim).or. (cCcAnt1 # Subs((cRHH)->RHH_CC, 1, Val(cNivCCusto)) .And. cCcAnt1 # " ")
						n16         := aCc1[2]
						n17         := aCc1[3]
						n17a        := aCc1[4]
						n17b        := aCc1[5]
						n18         := aCc1[6]
						n21         := aCc1[7]
						n81         := aCc1[8]
						n82         := aCc1[9]
						nEmpregados := aCc1[10]
						cParam      := cCcAnt1
						If lImpRelato
							If nlin > 61 .And. nTipRel ==  2
								nlin := 0
							EndIf
							CarImpGPS()
						//GRAVA AS LINHAS DE DETALHE NO ARQUIVO DE SAIDA
						ElseIf lGeraTexto
							fm240linha(cHeadLote, nHeadLote)
							fm240Linha(cDetalhe, nDetalhe)
							fm240linha(cTraiLote, nTraiLote)
						ElseIf lGeraTitulo
							fm240linha(,,.T.)
						EndIf

						aFill(aCc1, 0)
						cCcAnt1  := Subs((cRHH)->RHH_CC, 1, val(cNivCCusto))
					Else
						cCcAnt1  := Subs((cRHH)->RHH_CC, 1, val(cNivCCusto))
					EndIf
				EndIf
				n16    := n17 := n17a := n17aa := n17ap := n17b := n18 := n21 := n81 := n82 := nEmpregados := 0
				cCcOld := (cRHH)->RHH_CC
			EndIf
		Enddo

		If ((cRHH)->RHH_FILIAL # cFilAnterior)
			If lImpRelato
				If nlin > 61 .And. nTipRel == 2
					nlin := 0
				EndIf
			EndIf
			If Empty(cCentra)
				If nPorCC == 3 //FILIAL
					cFil     := cFilAnterior
					cParam   := "\\\\\\\\\"
					cEscolha := "2"
					If lImpRelato
						CarImpGPS()
					//GRAVA AS LINHAS DE DETALHE NO ARQUIVO DE SAIDA
					ElseIf lGeraTexto
						fm240linha(cHeadLote, nHeadLote)
						fm240Linha(cDetalhe, nDetalhe)
						fm240linha(cTraiLote, nTraiLote)
					ElseIf lGeraTitulo
						fm240linha(,,.T.)
					EndIf
				EndIf
				nTotFunc := 0
				n17Fil := n82Fil := n21Fil := n81Fil := n18Fil := n16Fil := n17bFil := n17aFil := 0
			EndIf
		EndIf
	Enddo

	If n17Fil + n82Fil + n21Fil + n81Fil + n18Fil + n16Fil + n17aFil # 0 .And. nPorCc = 3
		cFil     := If(Empty(cCentra), cFilAnterior, cCentra)
		cParam   := "\\\\\\\\\"
		cEscolha := "2"
		If lImpRelato
			If nlin > 61 .And. nTipRel == 2
				nlin := 0
			EndIf
			CarImpGPS()
		//GRAVA AS LINHAS DE DETALHE NO ARQUIVO DE SAIDA
		ElseIf lGeraTexto
			fm240linha(cHeadLote, nHeadLote)
			fm240Linha(cDetalhe, nDetalhe)
			fm240linha(cTraiLote, nTraiLote)
		ElseIf lGeraTitulo
			fm240linha(,,.T.)
		EndIf
	EndIf

	If lGeraTexto
		//GRAVA OS TRAILLERS DE LOTE E DE ARQUIVO
		fm240linha(cTraiArq, nTraiArq)
		//TERMINO DO PROGRAMA
		fClose(nHdlSaida)
		fClose(nHdlBco)
	EndIf

	dbSelectArea("SRA")
	dbSetOrder(1)

	dbSelectArea("RHH")
	Set Filter to

	If lFiltrou
		RetIndex("RHH")
		fErase(cArqNtx + OrdBagExt())
	EndIf

	dbSetOrder(1)

	If lImpRelato
		If len(aLog) > 0
			If ! nTipRel == 3
				nLin := 0
				@ nLin , 0 PSAY "*" + Repl("-",132)
				nLin +=2
				@ nLin,49 PSAY	STR0022 + Substr(cAnoMes,5,2)+"/"+Substr(cAnoMes,1,4) // "Log de ocorrencias da GPS - Competencia "
				nLin += 2
				@ nLin , 0 PSAY "*" + Repl("-",132)
				nLin +=2
				@ nLin, 0 PSAY  STR0031 // "Centro de Custo            VALOR DE RESIDUO"
			 	nLin += 2
				@ nLin , 0 PSAY "*" + Repl("-",132)
				nLin ++
				For nx := 1 to len(aLog)
					If Upper(aLog[nx,1]) #Replicate('\',len(aLog[nx,1]))
						@ nLin, 00 PSAY aLog[nx,1]		// CENTRO DE CUSTO
					EndIf
					@ nLin, 25 PSAY aLog[nx,2]			// VALOR DO RESIDUO
					nLin ++
				Next
			Else
		   		oPrint:EndPage()
				nLin := 0
				//DEFINICAO DO BOX PRINCIPAL
				oPrint:Box(nLin,0030,nLin+1100,2350)
				oPrint:Line(nLin+00,00,nLin+00,2350)
				oPrint:Say(nLin+050,450, STR0022  + Substr(cAnoMes,5,2)+"/"+Substr(cAnoMes,1,4),oFont07) // "Log de ocorrencias da GPS - Competencia "
				oPrint:Line(nLin+100,00,nLin+100,2350)
				oPrint:Say(nLin+150,00,STR0023,oFont07) // "Centro de Custo"
				oPrint:Say(nLin+150,250,STR0032,oFont07) // "VALOR DE RESIDUO"
				oPrint:Line(nLin+200,00,nLin+200,2350)
				nLin := 250
				For nx := 1 to len(aLog)
					If Upper(aLog[nx,1]) #Replicate('\',len(aLog[nx,1]))
						oPrint:Say(nLin,00,aLog[nX,01],oFont07) //CENTRO DE CUSTO
					EndIf
					oPrint:Say(nLin,150,aLog[nX,02],oFont07)//VALOR DO RESIDUO
					nLin += 30
				Next
			EndIf
	    EndIf
		Set Device To Screen
		If nTipRel # 2
			SeTPgEject(.F.)
		EndIf

		If aReturn[5] = 1  .And. nTipRel # 3
			Set Printer To
			Commit
			ourspool(wnrel)
		EndIf
		MS_FLUSH()

		If nTipRel == 3
			oPrint:Preview() //VISUALIZA IMPRESSAO GRAFICA ANTES DE IMPRIMIR
		EndIf
	EndIf

	//ELIMINA ARQUIVO TEMPORARIO DBF OU QUERY
	If lTemRescDis
		(cRHH)->(dbCloseArea())
	EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ Gpm240PrcR ³ Autor ³ Leandro Drumond       ³ Data ³ 23/07/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao de processamento de titulo de RRA                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Gpm240PrcR(nTipGer, lEnd, WnRel, cFilArq, cFilIni, cFilFim,  ³±±
±±³          ³             cCcIni, cCcFim, cAnoMes)                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM240														      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gpm240PrcR(lEnd,WnRel,cFilSRZ,cFilIni,cFilFim,cCcIni,cCcFim,cTipCont)
Local lFim 		:= .T.   // SE FINALIZA O LOOPING
Local cTipoGPS  := ""
Local cArqNtx	:= ""
Local lFiltrou
Local nIndex
Local nSavOrd
Local lPula 	:= .F.
Local nX 		:= 0
Local cCodGps	:= ""
Local cCodPrm	:= ""
Local aAreaBkp	:= {}
Local oFont07   := TFont():New("Arial",07,10,,.F.,,,,.T.,.F.)
Local cTpcGPS   := ""
Private lDicInter		:= FindFunction("fChkInterm") .And. fChkInterm()
Private n16         := n17    := n17a    := n17ap   := n17aa  := n17b   := n18    := n21    := n81    := n82     := nVez  :=  0
Private n16Fil      := n17Fil := n17aFil := n17bFil := n18Fil := n21Fil := n81Fil := n82Fil  := 0
Private nEmpregados := 0
Private cTerceiros  := Space(4)
Private lPrimeira   := .T.
Private nHdlBco     := 0
Private nHdlSaida   := 0
Private nSeq        := 0  // SERA UTILIZADA NA FUNCAO INCREMENTA() NO LAY-OUT
Private nTotRegArq  := 0  // SERA UTILIZADO NO LAY-OUT
Private nTotRegLote := 0  // SERA UTILIZADO NO LAY-OUT
Private nNumRegLote := 0  // SERA UTILIZADO NO LAY-OUT
Private nLin        := 0  // SERA UTILIZADO NA IMPRESSAO DA GPS
Private xConteudo
Private aInssEmp[25][2]
Private aGpsVal		:= {}
Private cFil
Private cParam
Private lImpVez		:= .T.
Private lTemDedMat	:= .F.
Private cRecFatEmp	:= " "
Private dDtBaseIni  := CtoD("01/01/"+ left(cAnoMes,4),"DDMMYY")
Private dDtBaseFim  := CtoD("31/12/"+ left(cAnoMes,4),"DDMMYY")
Private aCodFol     := {}
Private aDeducao    := {}
Private nHeadArq    := 1
Private nHeadLote   := 2
Private nDetalhe    := 3
Private nTraiLote   := 4
Private nTraiArq    := 5
//DEFINE VARIAVES PARA FACILIAR O TRATAMENTO DO PROCESSAMENTO
Private cObservacao := ""
Private aLog		:= {}
//LEI 10.710 -05/08/2003(DOU 06/08/2003)
//LIMITA O VLR QUE A EMPRESA PODE DEDUZIR DA GUIA
Private nLimDMat 	:= GetMvRH("MV_LIMDMAT",, 0)
Private oPrint
Private nQtdGPS		:= 0
Private nVlrMinGPS	:= 0

If Type("cCodPag")=="U"
	cCodPag	:=  ""
EndIf

nSavRec := ""

//CRIAR OS ARRAYS COM OS NIVEIS DE QUEBRAS
If nPorCc = 2
    Private aCc1[10]         // CENTRO DE CUSTO
    aFill(aCc1,0)
    Private cCcAnt1 := " "   //VARIAVEIS C.CUSTO DOS NIVEIS DE QUEBRA
EndIf

cFilAnterior :=  Replicate("!", FWGETTAMFILIAL)
nEmpregados  := 0
nTotFunc     := 0

//VARIAVEIS DE TOTAIS DISPONIVEIS-DEVEM SER EM LETRA MAIUSCULA
aTotINSS  := { {"NVALINSS",0},   {"NVALFUNC",0}, {"NVALEMPR",0}, {"NVALENTID",0},;
             {"NVALDEDGPS",0}, {"NSLCTRFUN",0}, {"NSLCTREMP",0} }

dbSelectArea("SRZ")
dbSetOrder(1)

//SE ENCONTRAR TIPO DE GUIA DIfERENTE DA GUIA SELECIONADA,FAZER FILTRO PARA EVITAR SOMAR AS DUAS GUIAS
lFiltrou := .F.
cTipoGPS := If(cTipo == 1, "FL", "13")

dbSeek(cFilIni + cCcIni , .T.)
cFil     := SRZ->RZ_FILIAL
cParam   := "\\\\\\\\\"
nTamCC	 := TamSX3("RZ_CC")[1]

//DESENHA CURSOR PARA MOVIMENTACAO
ProcRegua(SRZ->(RecCount()))

While !Eof() .And. lFim = .T.
	//MOVIMENTA CURSOR
	IncProc(STR0021) //"GERANDO TITULOS - INSS RRA"
	//VARIAVEL DA QUEBRA DE C. CUSTO
	cCcOld := "!!!!!!!!!"
	//CANCELAMENTO DE IMPRESSAO
	If lEnd
		Exit
	EndIf

	If lDicInter
		If (SRZ->RZ_FILIAL = Replicate("z", FWGETTAMFILIAL) .Or. !(SRZ->RZ_TPC $ cTpc)) // TIPO DE CONTRATO DETERMINADO OU INDETERMINADO
			SRZ->(dbSkip())
			Loop
		EndIf
	Else
		If cTipCont == "3" .and. SRZ->RZ_FILIAL = Replicate("z", FWGETTAMFILIAL) //Tipo Contrato Ambos (determinado e indeterminado)
			dbSkip()
			Loop
		else
			If cTipCont $ "1*2" .and. (SRZ->RZ_FILIAL = Replicate("z", FWGETTAMFILIAL) .Or. SRZ->RZ_TPC # cTpc) // Tipo de contrato determinado ou Indeterminado
				dbSkip()
				Loop
			Endif
		EndIf
	EndIf
	//Consiste acesso do usuario a filiais
	If ! ( SRZ->RZ_FILIAL $ fValidFil() )
		SRZ->(dbSkip())
		Loop
	EndIf

	//VERIfICA SE SATISFAZ A CONDICAO DE FILTRO DO USUARIO
	If cFilSRZ # Nil .And. !Empty(cFilSRZ) .And. !&cFilSRZ
		SRZ->(dbSkip())
		Loop
	EndIf
	If SRZ->RZ_TIPO <> cTipoGPS
		SRZ->(dbSkip())
		Loop
	EndIf
	If SRZ->RZ_FILIAL > cFilFim
		Exit
	EndIf
	If SRZ->RZ_FILIAL # cFilAnterior .And. lFim = .T.
		cFilAnterior := SRZ->RZ_FILIAL
		//CARREGA VARIAVEIS CODIGOS DA FOLHA
		If !FP_CODFOL(@aCodFol,SRZ->RZ_FILIAL)
			Exit
		EndIf
		If (lDicInter .And. Len(cTipCont) > 1) .Or. (!lDicInter .And. cTipCont == "3")      //TIPO CONTRATO AMBOS (DETERMINADO E INDETERMINADO)
			If lPrimeira
				aDeducao:={}
				lPrimeira:=.F.
			EndIf
		Else // TIPO CONTRATO DETERMINADO OU INDETERMINADO
			If lPrimeira .and. SRZ->RZ_TPC $ cTpc
				aDeducao:={}
				lPrimeira:=.F.
			EndIf
		EndIf
		cContribuicao := ''										// BASE DO INSS
		cDescInss     := aCodFol[975,1]+"x"+aCodFol[980,1]	// VALOR DO INSS
		//CARREGA PARAMETRO INSS EMPRESA
		If !fInssEmp(SRZ->RZ_FILIAL,@aInssEmp,,cAnoMes)
			Exit
		EndIf
		cTpcGPS	:= If(SRZ->RZ_TPC == "3", "1", SRZ->RZ_TPC)		//TIPO CONTRATO = 3-AMBOS, UTILIZAR ENCARGOS INFORMADOS NO TIPO CONTRATO 1
		cRecFatEmp := aInssEmp[27, Val(cTpcGPS)]
		//CARREGA CODIGO DE PGTO. DA GPS
		cCodPag     := If(empty(aInssEmp[24,Val(cTpcGPS)]),cCodPag,aInssEmp[24,Val(cTpcGPS)])
		//CARREGA VALOR MINIMO PARA RECOLHIMENTO DA GPS
		nVlrMinGPS := aInssEmp[28,Val(cTpcGPS)]
		//TRAZ OS VALORES DA GPS CADASTRADOS NA TABELA AUXILIAR S035
		aGpsVal := {}
		fGPSVal(cFilAnterior, If(cTipo == 2, Left(cAnoMes,4)+"13", cAnoMes), @aGPSVal, cTpcGPS)
		for nx := 1 to len(aGpsVal)
			cObservacao += space(01)+alltrim(aGpsVal[nx,7])
		next
	EndIf

	cCodPrm := cCodPag
	cOldMat := "!!!!!!"
	cOldPd  := "!!!"
	cOldTpc := "!"
	lFirst  := .T.

	dbSelectArea("SRZ")
	While !Eof() .And. SRZ->RZ_FILIAL == cFilAnterior
		//MOVIMENTA REGUA
		IncProc(STR0021) //"GERANDO TITULOS - INSS RRA"
		If SRZ->RZ_FILIAL > cFilFim
			Exit
		EndIf
		If SRZ->RZ_TIPO <> cTipoGPS
			dbSkip()
			Loop
		EndIf
		//QUEBRA DO CENTRO DE CUSTO GRAVA NO SRZ
		If (cCcOld # SRZ->RZ_CC) .Or.;
			(!lFirst .And.;
				SRZ->(RZ_CC == cCCOld .And.;
				RZ_MAT = "zzzzzz" .And.;
				RZ_PD = "zzz" .And.;
				RZ_MAT == cOldMat .And.;
				RZ_PD == cOldPd .And.;
				RZ_TPC # cOldTpc) .And. cCcOld # Replicate("z", nTamCC))
			If cCcOld # "!!!!!!!!!"
				If nPorCC # 3 .and. CTT->(FieldPos("CTT_CODGPS")) # 0
					cCodGPS := fDesc("CTT",cCCOld,"CTT_CODGPS")
					cCodPag := If(!empty(cCodGPS),cCodGps,cCodPrm)
				EndIf
				//VERIfICA SE A IMPRESSAO PRO C. CUSTO
				cFil     := cFilAnterior
				cParam   := cCcOld
				cEscolha := "1"
				If nPorCC == 1 //POR CENTRO DE CUSTO
					fm240linha(,,.T.)
				EndIf
				//ACUMULA NOS TOTALIZADORES DA FILIAL
				n16Fil  += n16
				n17Fil  += 0
				n17aFil += 0
				n17bFil += 0
				n18Fil  += 0
				n21Fil  += 0
				n81Fil  += 0
				n82Fil  += 0
				nTotFunc+= nEmpregados
			EndIf
			//QUEBRA POR NIVEIS DE C.CUSTO
			If nPorCc = 2 .And. Val(cNivCCusto) > 0
				aCc1[1]  := cCcAnt1
				aCc1[2]  += n16
				aCc1[3]  += 0
				aCc1[4]  += 0
				aCc1[5]  += 0
				aCc1[6]  += 0
				aCc1[7]  += 0
				aCc1[8]  += 0
				aCc1[9]  += 0
				aCc1[10] += nEmpregados
				If cCcAnt1 # Subs(SRZ->RZ_CC,1,Val(cNivCCusto)) .And. cCcAnt1 # " "
					n16         := aCc1[2]
					n17         := aCc1[3]
					n17a        := aCc1[4]
					n17b        := aCc1[5]
					n18         := aCc1[6]
					n21         := aCc1[7]
					n81         := aCc1[8]
					n82         := aCc1[9]
					nEmpregados := aCc1[10]
					cParam      := cCcAnt1
					fm240linha(,,.T.)
					aFill(aCc1,0)
					cCcAnt1  := Subs(SRZ->RZ_CC,1,val(cNivCCusto))
				Else
					cCcAnt1  := Subs(SRZ->RZ_CC,1,val(cNivCCusto))
				EndIf
			EndIf
			n16    := n17 := n17a := n17aa := n17ap := n17b := n18 := n21 := n81 := n82 := nEmpregados := 0
			cCcOld := SRZ->RZ_CC
		EndIf
		lPula := .F.
		cOldMat := SRZ->RZ_MAT
		cOldPd  := SRZ->RZ_PD
		cOldTpc := SRZ->RZ_TPC
		lFirst  := .F.
		If nPorCC==3 .and. SRZ->RZ_CC == left(Replicate("z",GetSx3Cache("RZ_CC" , "X3_TAMANHO"))+space(20),len(SRZ->RZ_CC))
			lPula := .F.
		ElseIf SRZ->RZ_CC > cCcFim .OR. SRZ->RZ_CC < cCcIni
			lPula := .T.
		EndIf
		If lPula
			cCcOld := "!!!!!!!!!"
			dbSelectArea("SRZ")
			dbSkip()
			Loop
		EndIf
		//ACUMULA OS VALORES DO SRZ E CALCULA OS PERCENTUAIS
		If Type("SRZ->RZ_MAT") == "U"
			If	(( lDicInter .And. Len(cTipCont) > 1) .Or. (!lDicInter .And. cTipCont == "3")) .and. SRZ->RZ_PD # "zzz"
				FAcumula(@n16,@n17,@n17a,@n17ap,@n17aa,@n17B,@n18,@n21,@n81,@n82,aCodFol)
			Else
				If  (SRZ->RZ_PD # "zzz" .and. SRZ->RZ_TPC $ cTpc)
					FAcumula(@n16,@n17,@n17a,@n17ap,@n17aa,@n17B,@n18,@n21,@n81,@n82,aCodFol)
				EndIf
			EndIf
		Else
			If (( lDicInter .And. Len(cTipCont) > 1) .Or. (!lDicInter .And. cTipCont == "3"))  .and. SRZ->RZ_PD # "zzz" .And. SRZ->RZ_MAT == Replicate("z", GetSx3Cache("RZ_MAT", "X3_TAMANHO"))
				FAcumula(@n16,@n17,@n17a,@n17ap,@n17aa,@n17B,@n18,@n21,@n81,@n82,aCodFol)
			Else
				If (SRZ->RZ_PD # "zzz" .And. SRZ->RZ_MAT == Replicate("z", GetSx3Cache("RZ_MAT", "X3_TAMANHO")) .and. SRZ->RZ_TPC $ cTpc)
					FAcumula(@n16,@n17,@n17a,@n17ap,@n17aa,@n17B,@n18,@n21,@n81,@n82,aCodFol)
				EndIf
			EndIf
		EndIf
		//CONTADOR DE FUNCIONARIOS
		If (( lDicInter .And. Len(cTipCont) > 1) .Or. (!lDicInter .And. cTipCont == "3"))  .and. SRZ->RZ_PD = "zzz"
			nEmpregados := SRZ->RZ_OCORREN
			dbSkip()
			Loop
		Else
			If (SRZ->RZ_PD = "zzz" .And. SRZ->RZ_TPC $ cTpc)
				nEmpregados := SRZ->RZ_OCORREN
				dbSkip()
				Loop
			EndIf
		EndIf
		dbSelectArea("SRZ")
		dbSkip()
	Enddo
	If (SRZ->RZ_FILIAL # cFilAnterior)
		If Empty(cCentra)
			If nPorCC == 3 //FILIAL
				cFil     := cFilAnterior
				cParam   := "\\\\\\\\\"
				cEscolha := "2"
				fm240linha(,,.T.)
			EndIf
			nTotFunc := 0
			n17Fil := n82Fil := n21Fil := n81Fil := n18Fil := n16Fil := n17bFil := n17aFil := 0
		EndIf
	EndIf
Enddo

If n17Fil + n82Fil + n21Fil + n81Fil + n18Fil + n16Fil + n17aFil # 0 .And. nPorCc = 3
	cFil     := If(Empty(cCentra),cFilAnterior,cCentra)
	cParam   := "\\\\\\\\\"
	cEscolha := "2"

	fm240linha(,,.T.)
EndIf

dbSelectArea("SRA")
dbSetOrder(1)

dbSelectArea("SRZ")
Set Filter to
If lFiltrou
	RetIndex("SRZ")
	fErase(cArqNtx + OrdBagExt())
EndIf
dbSetOrder(1)

Return Nil
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³FAcumDis³ Autor ³ Equipe RH              ³ Data ³ 11/11/96  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ACUMULA OS VALORES DO DISSIDIO ACUMULADO (RHH) E CALCULA    ³±±
±±³          ³ OS PERCENTUAIS                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEM240()                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function FAcumDis(n16, n17, n17a, n17ap, n17aa, n17b, n18, n21, n81, n82, aCodFol, cRHH)
Local nx := 1

// PARA OS ID'S 670, 407, 040, 221, 225, 350, 353 FORAM UTILIZADAS AS VERBAS DE ORIGEM DO DISSIDIO ACUMULADO.
// ASSIM, NAO HOUVE NECESSIDADE DE CRIACAO DE NOVOS ID'S CORRELACIONADOS A ESTES PARA O CALCULO DE DISSIDIO.
If (cRHH)->RHH_CC # left(Replicate("z", GetSx3Cache("RHH_CC", "X3_TAMANHO")) + space(20), len((cRHH)->RHH_CC))
	//VARIAVEL ACUMULADORA DAS DEDUCOES NA GUIA DE INSS --> CAMPO21
	If (PosSrv((cRHH)->RHH_VERBA, xFilial("SRV", (cRHH)->RHH_FILIAL), "RV_DEDINSS") == "S") .Or. ((cRHH)->RHH_VB == aCodFol[670,1])
		If PosSrv((cRHH)->RHH_VERBA, xFilial("SRV", (cRHH)->RHH_FILIAL), "RV_TIPOCOD") == "1" // PROVENTOS
			n21 += (cRHH)->RHH_VALOR
		ElseIf PosSrv((cRHH)->RHH_VERBA, xFilial("SRV", (cRHH)->RHH_FILIAL), "RV_TIPOCOD") == "2" // DESCONTOS
			n21 -= (cRHH)->RHH_VALOR
		ElseIf (cRHH)->RHH_VB == aCodFol[670,1] // BASE - DEDUCAO DA LIC.MATERNIDADE NO 13O SALARIO
			n21 += (cRHH)->RHH_VALOR
		EndIf
		If ((cRHH)->RHH_VB $ aCodFol[040,1]+"*"+aCodFol[407,1]+"*"+aCodFol[1338,1]+"*"+aCodFol[1339,1]+"*"+aCodFol[1340,1]+"*"+aCodFol[1341,1] +"*"+aCodFol[1342,1]) .And.;
			 GetMvRH("MV_SALMGRP") = "S" .And. !lTemDedMat
			n21 += Round(If(nLimDMat > 0 .and. (cRHH)->RHH_VALOR  >= nLimDMat, nLimDMat, (cRHH)->RHH_VALOR) /12,2)
		EndIf
	ElseIf nPorcc # 3
		For nX := 1 to len(aGpsVal)
			If (cRHH)->RHH_VERBA == aGpsVal[nX,2]
				If alltrim((cRHH)->RHH_CC) == alltrim(aGpsVal[nX,1])
					If aGpsVal[nX,6] == "D"
						n17a -= (cRHH)->RHH_VALOR		//DEDUCAO
					Else
						n17a += (cRHH)->RHH_VALOR		//RECOLHIMENTO
					EndIf
				EndIf
			EndIf
		Next
    EndIf

	If (cRHH)->RHH_VERBA $ cContribuicao			//BASE INSS EMPRESA DISSIDIO
	    n81  += (cRHH)->RHH_VALOR
	ElseIf (cRHH)->RHH_VERBA = aCodFol[943,1]		//INSS EMPRESA DISSIDIO
	    n17  += (cRHH)->RHH_VALOR
	ElseIf (cRHH)->RHH_VERBA = aCodFol[945,1]		//AC. TRABALHO DISSIDIO
	    n17  += (cRHH)->RHH_VALOR
	    n17b += (cRHH)->RHH_VALOR
	ElseIf (cRHH)->RHH_VERBA = aCodFol[944,1]		//TERCEIROS DISSIDIO
	    n18  += (cRHH)->RHH_VALOR
	ElseIf (cRHH)->RHH_VERBA $ cDescInss			//INSS FUNCIONARIOS DISSIDIO
	    n16 += (cRHH)->RHH_VALOR
	ElseIf (cRHH)->RHH_VB $ aCodFol[221,1]+'*'+aCodfol[225,1]+'*'+;	// BASE INSS E PRO-LABORE E AUTONOMO
						 aCodfol[350,1]+'*'+aCodfol[353,1]			// BASE INSS FISICA E JURIDICA
		n82  += (cRHH)->RHH_VALOR
	EndIf
ElseIf nPorCc = 3
	For nX := 1 to len(aGpsVal)
		If (cRHH)->RHH_VERBA == aGpsVal[nX,2] .And. If(lPRural, If(aGpsVal[nX,2] $ cVbProd,.T.,.F.), .T.)
			If aGpsVal[nX,6] == "D"
				n17a  	-= (cRHH)->RHH_VALOR		//DEDUCAO
				n17aFil -= (cRHH)->RHH_VALOR
			Else
				n17a  	+= (cRHH)->RHH_VALOR		//RECOLHIMENTO
				n17aFil += (cRHH)->RHH_VALOR
			EndIf
			Exit
		EndIf
	Next
EndIf

Return Nil
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ VerRescDis ³ Autor ³ Mauricio MR           ³ Data ³ 27/01/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao para verIficar a existencia de Rescisao Complementar  ³±±
±±³          ³ por dissidio.                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ VerRescDis(nTipGer, lEnd, WnRel, cFilArq, cFilIni, cFilFim, ³±±
±±³          ³             cCcIni,cCcFim,cTipCont,cAnoMes,lTemItemClVl)    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM240                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function VerRescDis(cRHH, cFilDe, cFilAte, cCcIni, cCcFim, cTipCont, cAnoMes, cTPRDbf,cTPRNtx, lTemItemClVl, bCriouDB)

	Local aArea			:= GetArea()
	Local _aAreaSRG		:= SRG->(GetArea())
	Local _aAreaSRR		:= SRR->(GetArea())
	Local aCodFol		:= {}
	Local cFilDet		:= '!!!!!!!!'
	Local cSpNumId		:= ""
	Local cTipo2		:= ""
	Local dDataDe		:= sTod(SubStr(cAnoMes, 1, 4) + SubStr(cAnoMes, 5, 2) + '01')
	Local dDataAte		:= sTod(SubStr(cAnoMes, 1, 4) + SubStr(cAnoMes, 5, 2) + StrZero(f_ultDia(dDataDe), 2))
	Local nReg			:= 0
	Local nNumId		:= TamSX3("RR_NUMID")[1]
	Local lRet			:= .F.
	Local lQueryOpened	:= .F.
	Local lTMPExist		:= .F.
	Local cAliasSRG		:= ""	// ALIAS DA QUERY PARA CABECALHO DE RESCISAO
	Local cAliasSRR		:= ""	// ALIAS DA QUERY PARA DETALHE DE RESCISAO
	Local cCpos			:= ""	// CAMPOS DE SELECT
	Local cVerbas		:= ""
	Local cDataDet		:= ""
	Local cMatDet		:= ""
	Local cOrderSRD		:= "% RD_FILIAL, RD_CC, RD_MAT, RD_PD %"
	Local cGroupSRD		:= "% RD_FILIAL, RD_CC, RD_MAT, RD_PD, RD_ITEM,  RD_CLVL %"
	Local cGroupSRC		:= "% RC_FILIAL, RC_CC, RC_MAT, RC_PD, RC_ITEM,  RC_CLVL %"
	Local cDifMater		:= ""

	// VERIfICA TODOS OS REGISTROS DO FUNCIONARIO NO "SRG"
	lQueryOpened	:= .T.

	lTMPExist		:= .F.

	If !FP_CODFOL(@aCodFol, cFilAnt)
		Return ()
	EndIf

	cVerbas		:= "% '" + aCodFol[338, 1] + "','" + aCodFol[399, 1] + "','" + aCodFol[340, 1] + "','" + aCodFol[401, 1] + "','" + aCodFol[943, 1] + "','" + ;
    					aCodFol[944, 1] + "','" + aCodFol[945, 1]

	If !Empty( (cDifMater := PosSrv(aCodFol[040, 1], xFilial("SRV"), "RV_CODCOM_")))
		cVerbas += "','" + cDifMater
	EndIf

	cVerbas += "' %"

	cTipo2		:= "% 'I' %"

	cAliasSRR  := GetNextAlias()

	BeginSql alias cAliasSRR

		SELECT RD_FILIAL, RD_MAT, RD_CC, SUM(RD_VALOR) AS RD_VALOR, MAX(RD_PD) RD_PD,
		RD_ITEM,  RD_CLVL, 'SRD' AS TABELA
		FROM %table:SRD% SRD
		WHERE RD_PERIODO = %exp:cAnoMes%
		AND RD_FILIAL >= %exp:cFilDe% AND RD_FILIAL <= %exp:cFilAte%
		AND RD_CC >= %exp:cCcIni% AND RD_CC <= %exp:cCcFim%
		AND RD_PD IN (%exp:cVerbas%)
		AND RD_TIPO2 <> %exp:cTipo2%
		AND SRD.%notDel%
		GROUP BY %exp:Upper(cGroupSRD)%

		UNION

		SELECT RC_FILIAL AS RD_FILIAL, RC_MAT AS RD_MAT, RC_CC AS RD_CC, SUM(RC_VALOR) AS RD_VALOR, MAX(RC_PD) RD_PD,
		RC_ITEM AS RD_ITEM,  RC_CLVL AS RD_CLVL, 'SRC' AS TABELA
		FROM %table:SRC% SRC
		WHERE RC_PERIODO = %exp:cAnoMes%
		AND RC_FILIAL >= %exp:cFilDe% AND RC_FILIAL <= %exp:cFilAte%
		AND RC_CC >= %exp:cCcIni% AND RC_CC <= %exp:cCcFim%
		AND RC_PD IN (%exp:cVerbas%)
		AND RC_TIPO2 <> %exp:cTipo2%
		AND SRC.%notDel%
		GROUP BY %exp:Upper(cGroupSRC)%

		ORDER BY %exp:Upper(cOrderSRD)%
	EndSql

	While !(cAliasSRR)->(Eof())

		If !lTMPExist
			CriaTRB(@cRHH, @cTPRDbf, @cTPRNtx, bCriouDB)
			lTMPExist := .T.
		EndIf

		GravaTRB(	(cAliasSRR)->RD_FILIAL						, ; //1
					(cAliasSRR)->RD_MAT							, ; //2
					(cAliasSRR)->RD_CC							, ; //3
					(cAliasSRR)->RD_PD							, ; //4
					cAnoMes										, ; //5
					(cAliasSRR)->RD_PD							, ; //6
					(cAliasSRR)->RD_VALOR						, ; //7
					cAnoMes										, ; //8
					If(lTemItemClVl, (cAliasSRR)->RD_ITEM, " ")	, ; //9
					If(lTemItemClVl, (cAliasSRR)->RD_CLVL, " ")	, ; //10
					lTemItemClVl								, ; //11
					(cAliasSRR)->TABELA)						    //12

		(cAliasSRR)-> (DbSkip())
		lRet:= .T.

	Enddo

	(cAliasSRR)->(dbCloseArea())

	RestArea(_aAreaSRR)
	RestArea(_aAreaSRG)
	RestArea(aArea)

Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ CriaTRB	³ Autor ³ Mauricio MR			³ Data ³ 27.01.12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Cria  Arquivo de Trabalho para impressao da GPS dissidio   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ CRIATRB(cTPRDbf,cTPRNtx)                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cTPRDbf  - Nome do arquivo de dados                        ³±±
±±³          ³ cTPRNtx  - Nome do arquivo de indice                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
STATIC Function CriaTRB(cRHH, cArqDbf, cArqNtx, bCriouDB)

	Local lRet			:= .T.
	Local aFields		:= {}
	Local aTamFil		:= TamSx3("RHH_FILIAL")
	Local aTamCC		:= TamSx3("RHH_CC")
	Local aTamMat		:= TamSx3("RHH_MAT")
	Local aTamData		:= TamSx3("RHH_DATA")
	Local aTamVB		:= TamSx3("RHH_VB")
	Local aTamVerba		:= TamSx3("RHH_VERBA")
	Local aTamItem		:= TamSx3("RHH_ITEM")
	Local aTamClVl		:= TamSx3("RHH_CLVL")
	Local aTamMesAno	:= TamSx3("RHH_MESANO")
	Local aTamValor		:= TamSx3("RHH_VALOR")
	Local lQueryOpened	:= .T.
	Local cQuery		:= ""

	aAdd(aFields, { "RHH_FILIAL"	, "C", aTamFil[1]	, aTamFil[2]})
	aAdd(aFields, { "RHH_CC"		, "C", aTamCC[1]	, aTamCC[2]})
	aAdd(aFields, { "RHH_MAT"		, "C", aTamMat[1]	, aTamMat[2]})
	aAdd(aFields, { "RHH_VB"		, "C", aTamVb[1]	, aTamVb[2]})
	aAdd(aFields, { "RHH_VERBA"		, "C", aTamVerba[1]	, aTamVerba[2]})
	aAdd(aFields, { "RHH_ITEM"		, "C", aTamItem[1]	, aTamItem[2]})
	aAdd(aFields, { "RHH_CLVL"		, "C", aTamClVl[1]	, aTamClVl[2]})
	aAdd(aFields, { "RHH_MESANO"	, "C", aTamMesAno[1], aTamMesAno[2]})
	aAdd(aFields, { "TABELA"		, "C", aTamVerba[1]	, aTamVerba[2]})
	aAdd(aFields, { "RHH_DATA"		, "C", aTamData[1]	, aTamData[2]})
	aAdd(aFields, { "RHH_VALOR"		, "N", aTamValor[1]	, aTamValor[2]})

	Eval(bCriouDB, .F.) //SE VARIAVEL QUE SINALIZA A CRIACAO DE BDADOS VIA QUERY COM SUCESSO

	cArqDbf := "TRB"
	cArqNtx := GetNextAlias()

	Begin Sequence

		oTmpTable := FWTemporaryTable():New("TRB", aFields)

		oTmpTable:AddIndex(cArqNtx, {"RHH_FILIAL", "RHH_MESANO", "RHH_CC", "RHH_MAT", "RHH_DATA", "RHH_VB", "RHH_ITEM", "RHH_CLVL"} )

		oTmpTable:Create()

		cArqDbf := oTmpTable:GetRealName()

		lQueryOpened := (Select('TRB') > 0)

	End Sequence

	//SE ABRIU A QUERY TORNA O ARQUIVO TEMPORARIO A TABELA MESTRE DO PROCESSAMENTO
	If lQueryOpened
		cRHH :='TRB'
	EndIf

	Eval(bCriouDB, lQueryOpened)

Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao	   ³ GravaTRB	³ Autor ³ Mauricio MR			³ Data ³ 27.01.12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Grava dados de Dissidio para Arquivo de Trabalho           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GravaTRB(Par1,Par2,...ParN)                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico 												           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GravaTRB(cFilPar, cMatPar, cCCPar, cVbPar, cDatArqPar, cVerbaPar, nValorPar, cMesAnoPar, cItemPar, cClVlPar, lTemItemClVl, cTabela)

	RecLock("TRB", .T., .T.)
	TRB->TABELA		:= cTabela
	TRB->RHH_FILIAL	:= cFilPar
	TRB->RHH_MAT	:= cMatPar
	TRB->RHH_CC		:= cCCPar
	TRB->RHH_VB		:= cVbPar
	TRB->RHH_DATA	:= cDatArqPar
	TRB->RHH_VERBA	:= cVerbaPar
	TRB->RHH_VALOR	:= nValorPar
	TRB->RHH_MESANO	:= cMesAnoPar

	If lTemItemClVl
		TRB->RHH_ITEM	:= cItemPar
		TRB->RHH_CLVL	:= cClVlPar
	EndIf

	MsUnLock()

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao	 ³fGravaRHH	³ Autor ³ Mauricio MR			³ Data ³ 29.01.12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Adiciona registros ao Arquivo de Trabalho para GPS dissidio³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fGravaRHH(cTPRDbf,cFilIni,cFilFim, cAnoMes, cCcIni, cCcFim)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 												  			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ GPEM240													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
STATIC Function fGravaRHH(cTPRDbf,cFilIni, cFilFim, cAnoMes, cCcIni, cCcFim, lTemItemClVl)
Local aStruRHH		:= RHH->(DbStruct())
Local cDeclare 		:= ""
Local cSelect		:= ""
Local cDelete  		:= ""
Local cCorpo  		:= ""
Local cParam		:= ""
Local cInto			:= ""
Local cValue		:= ""
Local cQueryExec 	:= ""
Local cDel			:= ""
Local cRecno		:= 0
Local cCpoDel		:= "D_E_L_E_T_"
Local cRetProc		:= 0
Local cProcName		:= "SPGERARHH"
Local cFieldsSRD	:= ""
Local cProcErr		:= ""
Local nCposSRD		:= 0
Local nPosCpo		:= 0
Local nMinRec		:= 0
Local nMaxRec		:= 0
Local lGerouRHH		:= .T.
Local aResult		:= {}
Local aErrProc		:= {}
Local aArea			:= GetArea()
Local cWhere		:= ""

cDel	:= "" + cCpoDel + " = ' '"

cTPRDbf := StrTran(cTPRDbf,"dbo.","")

//DECLARA AS VARIAVEIS DA PROCEDURE DE ACORDO COM A ESTRUTURA DE CAMPOS ENCONTRADA NA TABELA RHH
aEval(aStruRHH, { |x|  cDeclare	+= "Declare @" + x[1] + If(x[2] $ "C*D", " char("+alltrim(str(x[3]))+")", " float ") + CRLF })
cDeclare	+= "Declare @iNroRegs integer "		+ CRLF
cDeclare	+= "Declare @iTranCount integer"	+ CRLF
cDeclare	+= "Declare @nReg integer"			+ CRLF
// FAZ O SELECT DOS CAMPOS DA PROCEDURE DE ACORDO COM A ESTRUTURA ENCONTRADA NA TABELA RHH
cCorpo	 := "begin "  +CRLF
cCorpo   += "	SELECT @OUT_RESULTADO = '0'" +CRLF
cCorpo	+= "	Select @iNroRegs = 0"+CRLF
cSelect	:= "declare curMov insensitive cursor for"  +CRLF
cSelect	+= "SELECT "

aEval(aStruRHH, { |x| cSelect	+=x[1] + ", " })

cSelect := Substr(cSelect,1,Len(cSelect)-2)	+CRLF
cSelect += "FROM " +  RetSqlName("RHH") + " RHH "  +CRLF
cSelect += "WHERE " +CRLF
cSelect += "RHH.RHH_MESANO = '" 	+cAnoMes 	+  "' AND " +CRLF
cSelect += "RHH.RHH_FILIAL >= '" 	+cFilIni 	+  "' AND " +"RHH.RHH_FILIAL <= '" +cFilFim 	+  "' AND " +CRLF
cSelect += "RHH.RHH_CC >= '" 		+cCCIni 	+  "' AND " +"RHH.RHH_CC <= '" +cCCFim 		+  "' AND " +CRLF
cSelect += "RHH." + cCpoDel + " = ' ' " +CRLF
cSelect += "ORDER BY " + SqlOrder(RHH->(IndexKey(3)))	+CRLF
cSelect += "open curMov"  +CRLF
cSelect += "fetch curMov into "

aEval(aStruRHH, { |x| cSelect	+="@" + x[1] + ", " })
cSelect := Substr(cSelect,1,Len(cSelect)-2) +CRLF
cSelect += "while (@@fetch_Status = 0)  "  +CRLF
cSelect += "	Begin"+CRLF
cSelect += "      select @iNroRegs = @iNroRegs + 1"+CRLF
cSelect += "      If @iNroRegs = 1"+CRLF
cSelect += " 		Begin"+CRLF

If !("MSSQL"$tcGetDB())
	cSelect += "			Begin Transaction"+CRLF
EndIf

cSelect += "         	Select @iNroRegs = @iNroRegs"+CRLF
cSelect += "      	End"+CRLF
cInto 	:= "	   			Insert Into " + cTPRDbf + "("
cValue	:= "	   	   		Values("

aEval(aStruRHH, { |x| cInto	+= x[1] + ", ", 	cValue	+= "@" + x[1] + ", " })
cSelect := Substr(cSelect,1,Len(cSelect)-2) +CRLF

cInto := 	SubStr(cInto,0,Len(cInto)-2) + CRLF
cInto += " ) " +CRLF

cValue := SubStr(cValue,0,Len(cValue)-2)
cValue += " ) " +CRLF

cSelect += cInto +  cValue
cSelect += "			If @iNroRegs = 1024 "+CRLF
cSelect += "				begin"+CRLF
If !("MSSQL"$tcGetDB())
   		cSelect += "         	Commit Transaction "+CRLF
EndIf
cSelect += "					Select @iNroRegs = 0"+CRLF
cSelect += "				End"+CRLF
cSelect += "fetch curMov into "

aEval(aStruRHH, { |x| cSelect	+="@" + x[1] + ", " })
cSelect := Substr(cSelect,1,Len(cSelect)-2) + CRLF
cSelect += "	End"+CRLF
cSelect += "	If @iNroRegs > 0 "+CRLF
cSelect += "		Begin"+CRLF
cSelect += "       		Select @iTranCount  = 0"+CRLF
cSelect +=	"			select @iNroRegs = 0"+CRLF

If !("MSSQL"$tcGetDB())
	cSelect += "		Commit Transaction"+CRLF
EndIf

cSelect += "      	End"+CRLF
cSelect += "close curMov " +CRLF
cSelect += "deallocate curMov" +CRLF
cFim 	:= "select @OUT_RESULTADO = '1'"  +CRLF
cFim 	+= "End "  +CRLF

//EXECUTA A PROCEDURE QUE GERA O TEMPORARIO RHH
cParam := "CREATE PROCEDURE " + cProcName+"_"+cEmpAnt+"("+CRLF
cParam += " @OUT_RESULTADO CHAR(01) OutPut " +CRLF
cParam += ")"+CRLF
cParam += " AS "+CRLF
cQueryExec := cParam + cDeclare + cCorpo + cSelect  + cFim
cQueryExec := MsParse(cQueryExec,Alltrim(TcGetDB()))
If (AllTrim(Upper(TcGetDb())) == 'INFORMIX')
	cQueryExec := StrTran(cQueryExec, "LET viTranCount  = 0 ;" , "LET viTranCount  = 0 ;" +CRLF+ "	COMMIT WORK ;")
EndIf

//VERIfICA SE A PROCEDURE EXISTE NO BANCO
If TCSPExist(cProcName+"_"+cEmpAnt)
	TcSqlExec("DROP PROCEDURE " + cProcName+"_"+cEmpAnt)
EndIf

//CRIA A PROCEDURE PARA A GERACAO DO TEMPORARIO RHH
cRetProc:= TcSqlExec(cQueryExec)

//EXECUTA A PROCEDURE
If cRetProc <> 0
	cProcErr := TCSQLError()
 	If !lImpRelato
		MsgStop("TCSQLError() " + cProcErr)
 	EndIf
	lGerouRHH := .F.
Else
	//EXECUTA A PROCEDURE CRIADA
	aResult := TCSPExec(xProcedures(cProcName))
	If Empty(aResult)
		cProcErr := TCSQLError()
   		If !lImpRelato
			MsgStop("TCSQLError() " + cProcErr)
		EndIf
		lGerouRHH := .F.
  	EndIf
EndIf

RestArea(aArea)
Return(lGerouRHH)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³CarImpGPS	³ Autor ³ Bruno Nunes			³ Data ³ 09.01.14 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Carrega RDMAKE para impressao de acordo com o Pergunte(SX1)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM240                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function CarImpGPS()
Local nQtdvias  := 1
Local lImpGPS	 := ExistBlock( "IMPGPS",.F.,.T. )//variavel p/ PE "IMPGPS"
Local lIMPGRPS	 := ExistBlock( "IMPGRPS",.F.,.T. )//variavel p/ PE "IMPGRPS"

If nOpcao == 1
	if lIMPGRPS
		ExecBlock("IMPGRPS",.F.,.F.)
	else
		GPER992()
	endif
ElseIf nOpcao == 2 		//2 - GPS
	For nQtdvias := 1 TO 2
		If nTipRel == 3  .And. nQtdGPS == 2
			oPrint:StartPage()
			nLin 	:= 030
			nQtdGPS := 0
		EndIf
		if lImpGPS
			ExecBlock("IMPGPS",.F.,.F.)
		else
			GPER991()
		endif
    Next nQtdvias
EndIf
Return()

/*/{Protheus.doc} TercRural
Separa o percentual de terceiros do valor do INSS, informado na S035, para Produtores rurais
@author cicero.pereira
@since 24/08/2017
@version 1.0
@see Consultoria utilizada como base para a alteração: http://tdn.totvs.com/x/RxQPEQ
/*/
Static Function TercRural()

	If aInssEmp[18][1] > 0 // % SENAR
		n18Fil := n17aFil * aInssEmp[18][1]
		n17aFil -= n18Fil
	EndIf

Return
