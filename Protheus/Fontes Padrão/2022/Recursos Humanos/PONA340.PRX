#INCLUDE "PROTHEUS.CH"
#INCLUDE "PONA340.CH"

Static l340Block	:= ExistBlock( "PN340VALID" ,.F.,.F.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PONA340  ³ Autor ³ Mauricio MR           ³ Data ³ 26/11/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cadastramento de Visitas                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PONA340()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Cecilia C.  ³20/05/14³TPQAN3³Incluido o fonte da 11 para a 12 e efetu- ³±±
±±³            ³        ³      ³ada a limpeza.                            ³±±
±±³Luis Artuso ³15/07/14³TPXU04³Ajuste na inclusao do cadastro de visitas.³±±
±±³			   ³        ³      ³Ao incluir foto para o visitante, a rotina³±±
±±³			   ³        ³      ³era encerrada devido alteracao na varia-  ³±±
±±³			   ³        ³      ³vel 'oDlg'.                               ³±±
±±³Alberto M   ³24/09/14³TQPJQX³Ajuste nas funções FGETVISITANTE,         ³±±
±±³			   ³        ³      ³FGETCONTATO, FGETCC e PnVMat para inclusão³±±
±±³			   ³        ³      ³de visitas em filial diferente da que     ³±±
±±³			   ³        ³      ³estamos logados                           ³±±
±±³Luis Artuso ³29/10/15³TTOUOI³Ajuste em fValidGet para que respeite o re³±±
±±³			   ³        ³      ³torno da execucao do P.E. PN340VALID.     ³±±
±±³Matheus M.  ³01/09/16³TUTZKE³Mudança do fonte para FwMBrowse.		  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function PONA340(aAuto,nOpc)

Local aSvKeys		:= GetKeys() 
Local aGrupoUser	:= {}
Local cFiltro		:= ""
Local uRet			
Local nPos  
Local nX    
Local nLenX
Local nReflesh		:= SuperGetMv("MV_P340ATU",NIL,5000)  			   //-- Tempo, em milisegundos, para atualizacao da tela			

Private oBrwPn340   := Nil
Private aRotAuto    := aClone(aAuto)
Private lPona340Aut := ( aAuto <> NIL )
Private cMemoAut    :=""  
Private lMudFVis    := ( SuperGetMv("MV_MUDFVIS",NIL,"S") == "S" )    //-- Verifica a mudanca de filtro a cada refresh de tela
Private lVerGrpUsr  := .T.
Private oEnchoice	 := NIL	
Private oDlg		:= NIL
Private oDlgBkp		:= NIL


If lPona340Aut
	nPos := aScan(aRotauto,{|x| x[1] == "PY_HISTVIS"})
	If nPos > 0
		cMemoAut:= aRotauto[nPos,2]
	End	
EndIf
	
Begin Sequence
		    
    SetRepName("IMGVIST")
    
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³So Executa se o Modo de Acesso dos Arquivos do Ponto estiverem OK		 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF !( ValidArqPon() )
		Break
	EndIF

	PRIVATE aFilterExp	 := {} 			//Expressao de filtro
	PRIVATE aAlsFilterExp:= {}
	PRIVATE aGrpFilterExp:= {}
	PRIVATE aUsrFilterExp:= {}
	PRIVATE cExpFiltro	:= ""
	PRIVATE aIndex		:= {}		
	PRIVATE cFiltra						//Variavel para filtro
	PRIVATE bFiltraBrw  := {|| Nil}		//Variavel para Filtro
	PRIVATE bEndFilBrw  := {||EndFilBrw("SPY",@aIndex)}   
	PRIVATE nOrdPesq	:= SPY->(INDEXORD())       

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define Array contendo as Rotinas a executar do programa      ³
	//³ ----------- Elementos contidos por dimensao ------------     ³
	//³ 1. Nome a aparecer no cabecalho                              ³
	//³ 2. Nome da Rotina associada                                  ³
	//³ 3. Usado pela rotina                                         ³
	//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
	//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
	//³    2 - Simplesmente Mostra os Campos                         ³
	//³    3 - Inclui registros no Bancos de Dados                   ³
	//³    4 - Altera o registro corrente                            ³
	//³    5 - Remove o registro corrente do Banco de Dados          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ   
	PRIVATE aAcho
	PRIVATE aAlter   
	
	Private aEtiqueta

	PRIVATE aRotina := MenuDef() // ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina	
	
	If ExistBlock( "P340ROTI")
	   	aRotina := ExecBlock( "P340ROTI" ,.F.,.F.,{aRotina}, .F. )
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define o cabecalho da tela de atualizacoes                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Private cCadastro := OemToAnsi( STR0009 )  //"Cadastro de Visitas"
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define o botao para consulta/alteracao do visitante          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Private aSpyVisVisitante
	Private aSpyAltVisitante
	Private bSpyVisVisitante
	Private bSpyAltVisitante
		
	bSpyVisVisitante:= {|| Pn340VerVisitante(2), SetKey( VK_F6 , bSpyVisVisitante  ) } 
	aSpyVisVisitante:=	{;
						"pesquisa" 							,;
				   		bSpyVisVisitante						,;
				    	OemToAnsi( STR0033  + "...<F6>"  )	,;	//"Visualiza Visitante"
				    	OemToAnsi( STR0033 )				 ;	//"Visualiza Visitante"
			    	}
	SetKey( VK_F6 , bSpyVisVisitante )	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define o botao para consulta do visitante                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	bSpyAltVisitante:= {|| Pn340VerVisitante(4), SetKey( VK_F7 , bSpyAltVisitante  ) } 
	aSpyAltVisitante:=	{;
						"pesquisa" 							,;
				   		bSpyAltVisitante						,;
				    	OemToAnsi( STR0038  + "...<F7>"  )	,;	//"Altera Visitante"
				    	OemToAnsi( STR0038 )				 ;	//"Altera Visitante"
			    	}
	SetKey( VK_F7 , bSpyAltVisitante )			    
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta a estrutura para obtencao de Filtros 							   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAlsFilterExp	:={}
	aGrupoUser		:= UsrRetGrp()
	aUsrFilterExp	:={}
	
	aAdd( aAlsFilterExp , { "FILTRO_ALS" , "SPY"     , .T. , ".AND." } )
	aAdd( aAlsFilterExp , { "FILTRO_PRG" , FunName() , .T. , ".AND." } )  
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se Nao se trata de usuario administrador e filtra filtros por ³
	//³ usuario e grupo										                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lVerGrpUsr .AND. EMPTY(Ascan(aGrupoUser,{|x| x == "000000"}))   
		nLenx:=Len(aGrupoUser)
		For nX:=1 to nLenx
			aAdd( aGrpFilterExp , { "FILTRO_GRP" , aGrupoUser[nX] , If(nLenx > 1, .T., .F.) , If(nLenx > 1,".OR.", ".AND.")   } )  	
		Next nX
		aAdd( aUsrFilterExp , { "FILTRO_USR" , RetCodUsr() , NIL , NIL 	   } )  	
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cFiltra 	:= CHKRH("PONA340","SPY","1")
	
	bFiltraBrw 	:= {|cCompleta| If( !Empty(cCompleta), ( cFiltro:=cFiltra + IF( !Empty(cFiltra), ' .AND. ', "" ) + cCompleta ), cFiltro:=cFiltra), FilBrowse("SPY", @aIndex,@cFiltro,.F.) }
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Executa ponto de entrada para filtro de browse (FilBrowse)             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
	aFilterExp:=aClone(aAlsFilterExp)
	cExpFiltro:= fExpFiltro(@aFilterExp,.F.,.T.,lVerGrpUsr) 
	If ExistBlock( "P340FILT")
	   	If (Valtype(uRet := ExecBlock( "P340FILT" ,.F.,.F.,{cExpFiltro}, .F. )) == "C")
	   	   cExpFiltro:= uRet
	   	Endif   
	EndIf
	
	If !lPona340Aut
		Eval(bFiltraBrw,cExpFiltro)
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Endereca a funcao de BROWSE                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "SPY" )
	dbGoTop()
	
	If lPona340Aut                       
		//Estas variaveis sao necessarias para que a rotina automatica funcione.
		PRIVATE INCLUI := (nOpc==3)
		PRIVATE ALTERA := (nOpc==4)
		Private nOpx	:= nOpc                                              
		Private nRegx	:= SPY->(Recno())
	 	RegToMemory("SPY") 
		MsRotAuto(nOpc,aRotAuto,"SPY")
	Else
		//Monta o Browse
		oBrwPn340:= FwMBrowse():New()
		oBrwPn340:SetAlias( 'SPY' )
		oBrwPn340:SetDescription(OemToAnsi(cCadastro))	
		
		// - Inclui as opções de legenda no Browse.
		oBrwPn340:AddLegend( "EMPTY(SPY->PY_DTBAIXA) .AND. !EMPTY(SPY->PY_DATAE)"	, "GREEN"	, OemToAnsi(STR0014) ) //"Em Visita"
		oBrwPn340:AddLegend( "EMPTY(SPY->PY_DTBAIXA) .AND. SPY->PY_CLASSIF == '1'"	, "YELLOW"	, OemToAnsi(STR0013) ) //"Agendada"
		oBrwPn340:AddLegend( "!EMPTY(SPY->PY_DTBAIXA)"	, "RED"		, OemToAnsi(STR0020) ) //"Encerrada"
		oBrwPn340:SetTimer({||AtuBrw(oBrwPn340)}, nReflesh)
		oBrwPn340:SetmenuDef( 'PONA340' )  		
		oBrwPn340:Activate()  
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Deleta o filtro utilizando a funcao FilBrowse                     	   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//--Cancela Filtros Anteriores  
	If !lPona340Aut
		Eval(bEndFilBrw) 
	Endif
	
End Sequence

RestKeys( aSvKeys , .T. )

SetRepName("SIGAADV")	

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ Pn340Rot ³ Autor ³ Mauricio MR           ³ Data ³ 26.11.03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Rotina para Manutencao de Visitas			              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Pn340Rot(ExpC1,ExpN1,ExpN2)                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo 								  ³±±
±±³ 		 ³ ExpN1 = Numero do registro								  ³±±
±±³ 	 	 ³ ExpN2 = Numero da opcao Selecionada						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ Pn340Rot  												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
                                                                             */
Function Pn340Rot(cAlias,nReg,nOpc)

Local aArea			:= GetArea()  
Local aBotoes     	:= {}              
Local aAcessos		:= {}
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}
Local aSPYHeader	:= {}
Local aSPYCols		:= {}
Local aSPYFields	:= {}
Local aSPYAltera	:= {}
Local aSPYNaoAlt	:= {}
Local aSPYVirtEn	:= {}
Local aSPYNotFields	:= {}
Local aSPYRecnos	:= {}
Local aSPYVisuEn	:= {}
Local aSPYMemoEn	:= {}
Local aSPZGdAltera  := {}
Local aSPZGdNaoAlt	:= {}
Local aSPZRecnos	:= {}
Local aSPZNotFields	:= {}
Local aSPZVirtGd	:= {}
Local aSPZVisuGd	:= {}
Local aSPZHeader	:= {}
Local aSPZCols		:= {}
Local aSvKeys		:= GetKeys()
Local aSYPRecnos	:= {}
Local bCFGEtiqueta	:= {||If( fProgAtual(), fCFGEtiqueta()	, Nil) }
Local bPRTEtiqueta	:= {||If( fProgAtual(), fImprime()		, Nil) }
Local bPn340Locks	:=	{|cAlias, aRecnos| WhileYesNoWait(;
											{ |cAlias,aRecnos| PonLockRegs( cAlias , aRecnos , NIL , 1 , 1 ) }	,;	//Bloco a Ser Executando Enquando ( Devera Retornar Valor Logico )
											05														,;	//Numero de Tentativas
											.T.														,;	//Se podera Encerrar as as Tentativas ( Button Cancel Enabled )
											OemToAnsi( STR0112 )									,;	//Mensagem de Corpo para a MsgInfo //"O Registro est  sendo utilizado por outro usu rio"
											cCadastro												,;	//Titulo para a MsgInfo 
											OemToAnsi( STR0114 )									,;	//Mensagem de Corpo para a MsgYesNo //"Tentar novamente?"
											cCadastro												,;	//Titulo para a MsgYesNo
											OemToAnsi( STR0116 )									,;	//Mensagem de corpo para a ProcWaiting //"Tentando acessar o registro."
											cCadastro												 ;	//Titulo para a ProcWaiting
					   						);
    					}										

Local bSPZGdDelOk	:= { || Pn340DelOk() }
Local bSet15		:= { || NIL }
Local bSet24		:= { || NIL }
Local cSPYKeySeek	:= ""
Local cFilSPY		:= ""
Local cVisSPY		:= ""
Local cCrachaSPY	:= ""
Local cDtVisitSPY	:= ""
Local cNumeroSPY	:= ""
Local lGetDados		:=  ( nOpc == 2  .OR. nOpc == 5) //Visualiza ou Exclusao
Local lLocks		:= .F.
Local nOpcAlt		:= 0.00
Local nSPYUsado		:= 0.00
Local nSPZUsado		:= 0.00
Local nLoop			:= 0.00
Local nLoops		:= 0.00
Local nOpcNewGd		:= IF( (( nOpc == 2 ) .or. ( nOpc == 5 )),0, If( (( nOpc == 6 ) .or. ( nOpc == 7 )), GD_UPDATE, GD_INSERT + GD_UPDATE + GD_DELETE ))	
Local nOpcGdMax		:= 9999
Local oGetDados		:= NIL 
Local aObject		:= {}
Local bGrava
Local lGrava		:= .T.

Private aSPZClone		:= {}
Private nPosSPZData		:= 0.00
Private nPosSPZHora		:= 0.00
Private nPosSPZFlag		:= 0.00
Private nPosSPZTpMarca	:= 0.00
Private nPosSPZRelogio	:= 0.00

Private nOpx			:= nOpc
Private nRegx			:= If(__cInternet=="AUTOMATICO",SPY->(Recno()),nReg)
Private nSaveSX8    	:= GetSX8Len() 

Private aTamMat		    := TamSX3( "PY_MAT" )
Private nLastRec		:= 0
Private nGetSX8Len		:= GetSX8Len()

DEFAULT nRegX := SPY->(RECNO())

If ExistBlock( "P340VLD")
 	If !(ExecBlock( "P340VLD" ,.F.,.F.,{nOpc}, , .F. ))
  		Return()
 	EndIf
EndIf

Begin Sequence  
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Permite Apenas Visualizar os casos abaixo					   ³
	³ a) Tentativa de registrar uma entrada ja realizada		   ³
	³ b) Tentativa de registrar uma baixa ja realizada			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
     
     If nOpx == 6 .AND. !Empty(SPY->PY_DATAE)
     	MsgAlert( OemToAnsi( STR0035) , STR0034 )	//Atencao# Entrada do Visitante ja Registrada"
        nOpc:=nOpx:= 2
     Endif                                                                
     
     If nOpx == 7 .AND. !Empty(SPY->PY_DTBAIXA)
     	MsgAlert( OemToAnsi( STR0036 ) , STR0034 )	//Atencao# Baixa ja Registrada"
        nOpc:=nOpx:= 2
     Endif                                                                
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Quando For Inclusao Posiciona o SPY No Final do Arquivo	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF ( nOpc == 3  ) //Inclusao
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Garante que na Inclusao o Ponteiro do SPY estara em Eof()    ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		PutFileInEof( "SPY" , @nReg )  
	Endif	

	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta os Dados para a Enchoice							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	
	aSPYNotFields	:= { "PY_FILIAL","PY_NUMERO","PY_DCARGO"}
   

	aSPYCols		:= SPY->(GdMontaCols(@aSPYHeader,@nSPYUsado,@aSPYVirtEn,@aSPYVisuEn,NIL,aSPYNotFields,@aSPYRecnos))
	cFilSPY			:= SPY->PY_FILIAL
	cVisSPY			:= SPY->PY_VISITA
	cCrachaSPY		:= SPY->PY_CRACHA
	cDtVisitSPY		:= Dtos(SPY->PY_DTVISIT)
	cNumeroSPY		:= SPY->PY_NUMERO
	cSPYKeySeek		:= ( cFilSPY + cNumeroSPY )

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Cria as Variaveis de Memoria e Carrega os Dados Conforme o ar³
	³ quivo														   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If ! lPona340Aut
		For nLoop := 1 To nSPYUsado
			aAdd( aSPYFields , aSPYHeader[ nLoop , 02 ] )
			Private &( "M->"+aSPYHeader[ nLoop , 02 ] ) := aSPYCols[ 01 , nLoop ]
		Next nLoop  
	EndIf
	

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Alimenta as Variaveis de Memoria.							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/	
	If nOpc <> 1
		PnVMat(M->PY_MAT, .F.)
		Pn340VCC()
		PnVVisita(M->PY_VISITA,.F.) 
		Pn340RDTBAIXA(@M->PY_DTBAIXA)
		Pn340RSAIDA(@M->PY_SAIDA)
		Pn340RDTS(@M->PY_DATAS)  
		Pn340RENTRADA(@M->PY_ENTRADA)       
		Pn340RDTE(@M->PY_DATAE)
    Endif

 	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define os Campos Editaveis na Enchoice.                       ³
	³                   										   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) .or. ( nOpc == 6 ) .or. ( nOpc == 7 ))

		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Define os Campos Editaveis								   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		nLoops := Len( aSPYVisuEn )
		
		For nLoop := 1 To nLoops
			aAdd( aSPYNaoAlt , aSPYVisuEn[ nLoop ] )
		Next nLoop
		
		IF ( nOpc == 4 ) .or. ( nOpc == 6 ) .or. ( nOpc == 7 )            
			aAdd( aSPYNaoAlt , "PY_VISITA" )

			IF ( nOpc == 6 )
				aAdd( aSPYNaoAlt , "PY_DATAS" 	)
				aAdd( aSPYNaoAlt , "PY_SAIDA" 	)
				aAdd( aSPYNaoAlt , "PY_DTBAIXA" )
			ElseIF ( nOpc == 7 )            
				aAdd( aSPYNaoAlt , "PY_DATAE" 	)
				aAdd( aSPYNaoAlt , "PY_ENTRADA"	)
				aAdd( aSPYNaoAlt , "PY_CRACHA" 	) 
				aAdd( aSPYNaoAlt , "PY_NOMEMP" 	) 							
				aAdd( aSPYNaoAlt , "PY_MAT" 	) 							
				aAdd( aSPYNaoAlt , "PY_CC" 		) 											
				aAdd( aSPYNaoAlt , "PY_TIPOVIS"	) 							
				aAdd( aSPYNaoAlt , "PY_CLASSIF"	) 							
			Endif

		EndIF
		
		nLoops := Len( aSPYFields )
		For nLoop := 1 To nLoops
			IF ( aScan( aSPYNaoAlt , { |cNaoA| cNaoA == aSPYFields[ nLoop ] } ) == 0.00 )
				aAdd( aSPYAltera , aSPYFields[ nLoop ] )
			EndIF
		Next nLoop
	EndIF
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Obtem os Recnos e Chaves dos Memos                            ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aAdd( aSPYMemoEn , { "PY_HISTVIS" , "PY_CODHIST" } )
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se nao For Visualizacao nem Inclusao	 					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	//-- Obtem dados de campo Memo
	IF ( ( nOpc <> 2 ) .and. ( nOpc <> 3 ) )
		MsMmObtemRec( "SPY" , aSPYRecnos , aSPYMemoEn , @aSYPRecnos )
	EndIF

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta os Dados para a GetDados							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	
	aAdd( aSPZNotFields , "PZ_FILIAL"  )
	aAdd( aSPZNotFields , "PZ_VISITA"	)
	aAdd( aSPZNotFields , "PZ_CRACHA"	)
	aAdd( aSPZNotFields , "PZ_NUMERO"	)
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Quando For Inclusao Posiciona o SPZ No Final do Arquivo	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF ( nOpc == 3  ) //Inclusao
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Garante que na Inclusao o Ponteiro do SPZ estara em Eof()    ³ 
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		PutFileInEof( "SPZ" )
	EndIF

	//aSPZCols := SPZ->(GdMontaCols(@aSPZHeader,@nSPZUsado,@aSPZVirtGd,@aSPZVisuGd,NIL,aSPZNotFields,@aSPZRecnos,"SPZ",cSPYKeySeek,NIL,NIL,NIL,NIL,NIL,NIL,NIL,NIL,aSPZQuery,.F.,.F.,.T.))
    aSPZHeader := GdMontaHeader( @nSPZUsado , @aSPZVirtGd , @aSPZVisuGd , 'SPZ' , aSPZNotFields )

	IF ( nOpc == 2  .OR. nOpc == 5) //Visualiza ou Exclusao
		GetAcessos(	@aAcessos			,;	//01 -> Acessos
					M->PY_DATAE			,;	//02 -> Periodo Inicial
					M->PY_ENTRADA		,;  //03 -> Hora Inicial
					M->PY_DATAS			,;	//04 -> Periodo Final
					M->PY_SAIDA			,;  //05 -> Hora Final
					cFilSPY				,;	//06 -> Filial
					M->PY_CRACHA		,;  //07 -> Cracha
					'SPZ'				,;	//08 -> Alias para Carga das Marcacoes
					.T.					 ;	//09 -> Se carrega Recno em aAcessos
				  )
		
	    GdSPZMontaCols(aAcessos, @aSPZCols, @aSPZRecnos)
	Else
    	aSPZCols := GdRmkaCols( aSPZHeader , .F.)
	Endif    
    /*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Obtem as Posicoes dos Campos do SPZ - Marcacoes dos Visitante³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
    nPosSPZData		:= GdFieldPos( "PZ_DATA" 	, aSPZHeader )
    nPosSPZHora		:= GdFieldPos( "PZ_HORA" 	, aSPZHeader )
    nPosSPZFlag		:= GdFieldPos( "PZ_FLAG" 	, aSPZHeader )
    nPosSPZTpMarca	:= GdFieldPos( "PZ_TPMARCA" , aSPZHeader )
    nPosSPZRelogio	:= GdFieldPos( "PZ_RELOGIO" , aSPZHeader )
    
                                                                        
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Copia as Marcacoes para Posterior Comparacao na Gravacao	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aSPZClone:=aClone(aSPZCols)
   
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Campos Editaveis para a GetDados				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	For nLoop := 1	To nSPZUsado
		Private &( "M->"+aSPZHeader[ nLoop , 02 ] ) := GetValType( aSPZHeader[ nLoop , 08 ] , aSPZHeader[ nLoop , 04 ] )
		IF (;
				( aScan( aSPZVirtGd		, aSPZHeader[ nLoop , 02 ] ) == 0.00 ) .and.	;
		   		( aScan( aSPZVisuGd		, aSPZHeader[ nLoop , 02 ] ) == 0.00 ) .and.	;
		   		( aScan( aSPZNotFields	, aSPZHeader[ nLoop , 02 ] ) == 0.00 ) .and.	;
		   		( aScan( aSPZGdNaoAlt	, aSPZHeader[ nLoop , 02 ] ) == 0.00 )			;
		  	)
			aAdd( aSPZGdAltera , aSPZHeader[ nLoop , 02 ] )
		EndIF
	Next nLoop

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Lock dos Registros											   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If ( ( nOpc <> 2 ) .and. ( nOpc <> 3 ) )
		IF !( lLocks := Eval(bPn340Locks,'SPY', aSPYRecnos, aSYPRecnos))
			Break
		EndIF 
		IF !( lLocks := Eval(bPn340Locks,'SYP', aSPYRecnos, aSYPRecnos))
			Break
		EndIF
		IF !( lLocks := Eval(bPn340Locks,'SPZ', aSPZRecnos))
			Break
		EndIF
    Endif


	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aAdvSize		:= MsAdvSize()
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }

	IF ( nOpc == 2  .OR. nOpc == 5) //Visualiza ou Exclusao
		aAdd( aObjCoords , { 000 , 120 , .T. , .F. } ) 
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	Else
		aAdd( aObjCoords , { 000 , 300 , .T. , .T. } ) 
	Endif	

	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para a Tecla <CTRL-O> 						   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	bSet15		:= { || fValidGet(nOpc,lGetDados,@nOpcAlt) }
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para a Teclas <CTRL-X>     	   			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	bSet24		:= { || ( nOpcAlt := 0.00 , oDlg:End() ) }

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco de Definicao de Botoes 	   	   			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If   ( ( nOpc == 3 ) .or. ( nOpc == 4 ) .or. ;
		   ( nOpc == 6 ) .or. ( nOpc == 7 ) )	
		 aAdd(; 
				aBotoes	,;
								{;
									"PRTETQ"			,;	
		   							bPRTEtiqueta		,;
		       	   					OemToAnsi( STR0021 ),; //"Imprime Etiqueta <F4>..."
		       	   					OemToAnsi( STR0121 ); //"Imprime"
		           				};
		    )	 
	
		 aAdd(; 
				aBotoes	,;
								{;
									"note"				,;	
		   							bCFGEtiqueta			,;
		       	   					OemToAnsi( STR0024 )	,; //"Configura Etiqueta <F5>..."
		       	   					OemToAnsi( STR0124 )	; //"Configura"
		           				};
		    )	


		 SetKey(VK_F4,bPRTEtiqueta)
 		 SetKey(VK_F5,bCFGEtiqueta)
	Endif                    

	If ! lPona340Aut	
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta o Dialogo Principal para a Manutencao             	   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
        
		DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0009 ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL
			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Monta o Objeto Enchoice para o SPY                      	   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			oEnchoice	:= MsmGet():New(	"SPY"		,; 
											nReg		,; 
											nOpc		,; 
											NIL			,; 
											NIL			,; 
											NIL			,; 
											aSPYFields	,; 
											aObjSize[1] ,; 
											aSPYAltera	,; 
											NIL			,; 
											NIL			,; 
											NIL			,; 
											"PN340EncTOk",;
											oDlg		,; 
											NIL			,; 
											.F.         ,; 
											NIL			,; 
											NIL			;  
										)
			Aadd(aObject, oEnchoice:oBox)
			oDlgBkp	:= oDlg			

			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Monta o Objeto GetDados para o SPZ						   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			// MsNewGetDados(nTop, nLeft, nBottom, nRight, nStyle, uLinhaOk, uTudoOk, cIniCpos, aAlter, nFreeze, nMax, cFieldOk, uSuperDel, uDelOk, oWnd, aParHeader, aParCols)
		   	IF lGetDados //Visualiza ou Exclusao
				oGetDados	:= MsNewGetDados():New(	aObjSize[2,1]								,;
													aObjSize[2,2]								,;
													aObjSize[2,3]								,;
													aObjSize[2,4]								,;
													nOpcNewGd									,;
													"Pn340LinOk"								,;
													"Pn340TudOk"								,;
													NIL											,;
													aSPZGdAltera								,;
													0											,;
													nOpcGdMax  									,;
													NIL											,;
													NIL											,;
													bSPZGdDelOk									,;
													oDlg										,;
													aSPZHeader									,;
													aSPZCols		 							 ;
												  )
			    oGetDados:oBrowse:bWhen	:={|| fLiberaGet(oEnchoice, nOpc)}
			    Aadd(aObject, oGetDados:oBrowse)
			Endif
	
		ACTIVATE MSDIALOG oDlg ON INIT ( EnchoiceBar( oDlg , bSet15 , bSet24 ,, aBotoes ),;
										AlignObject(oDlg,aObject,1))
	Else 
		If  PN340EncTOk() 
		   nOpcAlt := 1
		Else
		   nOpcAlt 	:= 0
	   	   AutoGRLog(STR0037+ "PN340EncTOk()") //"Inconsistencia em PN340EncTOk()"
   		   lMsErroAuto:= .t.
	   EndIf
	EndIf	

	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Quando Confirmada a Opcao e Nao for Visualizacao Grava ou   Ex³
	³clui as Informacoes do SPY e SPZ							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF( nOpcAlt == 1 )
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Apenas se nao For Visualizacao              				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
 		IF ( nOpc != 2 )
 		

			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Gravando/Incluido ou Excluindo Informacoes                   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			bGrava := { ||;
								Pn340Grava(		If(nOpc == 6 .or. nOpc == 7, 4, nOpc)	,;
												nReg			,;
												aSPYHeader		,;
												aSPYVirtEn		,;
												aSPYMemoEn		,;
												aSPZHeader		,;
												If(lGetDados,oGetDados:aCols,{}),;
												aSPZVirtGd		,;
												aSPZRecnos		 ;
											);
							}
					
			If ! lPona340Aut
				MsAguarde(bGrava)
			Else 
			   Eval(bGrava)
			EndIf	

		EndIF
	ElseIF ( nOpc == 3 )
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ RollBack da Numeracao Automatica            				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	  
		While (GetSx8Len() > nSaveSx8)
			RollBackSx8()
		EndDo            
		
	EndIF

End Sequence

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Libera os Locks             								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
PonFreeLocks()
/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Libera as Chaves Exclusivas 								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
FreeUsedCode()

/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura as Teclas de Atalho                				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
RestKeys( aSvKeys, .T. )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Restaura os Dados de Entrada								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
RestArea( aArea )

nLastRec := Iif(nLastRec == 0, SPY->( Recno() ), nLastRec)

// - Efetua o Refresh no Browse posicionando no último registro Visualizado/Alterado/Incluido.
If !lPona340Aut
	oBrwPn340:Refresh(.T.)
	oBrwPn340:GoTo(nLastRec)
EndIf

Return( nOpcAlt )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340Leg ³ Autor ³ Maurico MR	          ³ Data ³26/11/2003³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ Cria uma janela contendo a legenda da mBrowse              ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ PnLegend                                                   ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/

Function Pn340leg()
Local aCores:={}

IF Type( "cCadastro" ) == "U"
	Private cCadastro := STR0011						//"Legenda"
EndIF

aCores:={	{"ENABLE"		,OemToAnsi(STR0014)	}	,;	//"Em Visita"
			{"BR_AMARELO"	,OemToAnsi(STR0013)	}	,;	//"Agendada"
			{"BR_VERMELHO"	,OemToAnsi(STR0020)	}	;	//"Encerrada"
			}
              
If ExistBlock( "P340LEG")
   aCores := ExecBlock( "P340LEG" ,.F.,.F.,{aCores,1}, .F. )
EndIf

BrwLegenda(	OemToAnsi(cCadastro)					,;	//Titulo do Cadastro
			OemToAnsi( STR0012 )					,;	//"Legenda"
			aCores )

Return( .T. )
                 

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³Funcao    ³ fAgendCor³ Autor ³ Mauricio MR           ³ Data ³02.12.2003³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³Descri‡…o ³ Funcao p/ definir cores da Situacao da Visita.	  	        ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³Retorno   ³aCores                                                      ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³Parametros³													        ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
/*/
Function fAgendCor()

Local aCores	:=	{	 ;
						{ "EMPTY(SPY->PY_DTBAIXA) .AND. !EMPTY(SPY->PY_DATAE)" , 'BR_VERDE'		}	,;
	             		{ "EMPTY(SPY->PY_DTBAIXA) .AND. SPY->PY_CLASSIF == '1'" , 'BR_AMARELO'	}	,;
	           			{ "!EMPTY(SPY->PY_DTBAIXA)" , 'BR_VERMELHO'	}	;
				    }

IF ExistBlock( "P340LEG")
   aCores := ExecBlock( "P340LEG" ,.F.,.F.,{aCores,2}, .F. )
ENDIF

Return(aCores)


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340VCracha  ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ Valida Cracha										  	   ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340VCracha                                              ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/  
Function Pn340VCracha(cCracha,cVisita,dDtVisit)
Local aArea			:=	GetArea()
Local aAreaSPY		:=	SPY->(GetArea())
Local cFilSPY		:= xFilial('SPY')
Local cChave		:= cFilSPY+cCracha
Local lRet			:= .T. 

DEFAULT cVisita		:=M->PY_Visita
DEFAULT dDtVisit	:=M->PY_DtVisit  



Begin Sequence  

    If Empty(cCracha) .AND. ( M->PY_CLASSIF <> '1' .OR. nOpx == 6 .OR. nOpx == 7) 
       Help(" ",1,"PN340NOCRA")   //-- Cracha Obrigatorio para Visita Nao Agendada
       lRet:= .F.
       Break
    Endif  
    
    If !EMPTY(cCracha)
        If Texto()
			SPY->(DbSetOrder(2))
			If SPY->(Dbseek(cChave))
			   While SPY->(!EOF() .AND. cChave == (cFilSPY+PY_Cracha) )          
			   		 If EMPTY(SPY->PY_DtBaixa) .AND. (cVisita <> SPY->PY_Visita)
 			     		lRet:= .F.  
			            Help(" ",1,"PN340CRESV")   //-- Cracha Ja reservado a outro visitante
			            Exit
			         Endif          
			         SPY->(DbSkip())
			   Enddo
			Endif 
		Else
		    lRet:= .F.
       		Break
		Endif
	Endif
End
RestArea(aArea)
RestArea(aAreaSPY)
Return (lRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340VDtVisit ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ Valida Data da Visita								  	   ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340VDtVisit                                             ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/  
Function Pn340VDtVisit(cVisita,dDtVisit)
Local aArea			:= GetArea()
Local aAreaSPY		:= SPY->(GetArea())
Local lRet			:= .T.
Local cFilSPY		:= xFilial('SPY')
Local cChave		:= ''

DEFAULT cVisita		:=	M->PY_Visita
DEFAULT dDtVisit	:=	M->PY_DtVisit                          


//-- Verifica se Cracha em uso por outro Visitante
cChave	:= cFilSPY+cVisita+Dtos(dDtVisit)  

If SPY->(Dbseek(cChave))      
   While SPY->(!EOF() .AND. cChave == (cFilSPY+PY_Visita+Dtos(PY_DtVisit) ) )
   		If EMPTY(SPY->PY_DtBaixa) .AND. nRegX <> SPY->(Recno()) .AND.  !EMPTY(SPY->PY_CRACHA) 
       		lRet:= .F.  
       		Help(" ",1,"PN340EMVIS")   //-- Visitante Ja em Visita
    		Exit
    	Endif          
         
    	SPY->(DbSkip())
   Enddo        
Endif 


RestArea(aArea)
RestArea(aAreaSPY)

Return (lRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340VDtBaixa ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ Valida Data da Baixa								  	   ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340VDtBaixa                                             ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/
Function Pn340VDtBaixa(dDtVisit,dDtBaixa)
Local lRet			:= .T.

DEFAULT dDtBaixa	:=	M->PY_DtBaixa
DEFAULT dDtVisit	:=	M->PY_DtVisit 

If dDtVisit > dDtBaixa  .AND. !Empty(dDtBaixa)
	Help(" ",1,"PN340DTVB")   //-- Data de Baixa menor que Data de Visita ou de Saida
   lRet:= .F.
Endif
Return (lRet)


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340RDTBAIXA ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ Retorna o Conteudo do SX3_Relacao                         ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340RDTBAIXA                                             ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   
Function Pn340RDTBAIXA(dRet)
DEFAULT dRet:= Ctod("")

If nOpx = 7 
   dRet:= dDatabase
Endif

Return (dRet)       

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340WEntrada ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³          
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ When Entrada		  					                   ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340WENTRADA                                             ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   
Function Pn340WENTRADA()
Local lRet:= .T.
If nOpx <> 6 .AND. nOpx <> 3.AND. nOpx <> 4
   lRet:= .F.
Endif   
Return lRet
           
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340WDTE     ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³          
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ When DATAE		  					                       ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340WDTE                                                 ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   
Function Pn340WDTE()
Local lRet:= .T.
If nOpx <> 6 .AND. nOpx <> 3 .AND. nOpx <> 4
   lRet:= .F.
Endif   
Return lRet 

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340WDTS     ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³          
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ When DATAS		  					                       ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340WDTS                                                 ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   
Function Pn340WDTS()
Local lRet:= .T.
If nOpx <> 7.AND. nOpx <> 3 .AND. nOpx <> 4
   lRet:= .F.
Endif   
Return lRet 


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340WSAIDA   ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³          
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ When Saida  		  					                   ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340WSAIDA                                               ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   

Function Pn340WSAIDA()
Local lRet:= .T.
If nOpx <> 7.AND. nOpx <> 3 .AND. nOpx <> 4
   lRet:= .F.
Endif   
Return lRet

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340VENTRADA ³ Autor ³ Maurico MR      ³ Data ³18/12/2003³          
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ Valida Entrada  					                       ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340VENTRADA                                             ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/     
Function Pn340VENTRADA(nEntrada)
Local lRet:= .T.
DEFAULT nEntrada:=M->PY_ENTRADA

lRet:=VLDHORA(nEntrada)

Return lRet


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340VSAIDA   ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³          
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ Valida Saida  						                       ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340VSAIDA                                               ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   
Function Pn340VSAIDA(nSaida)
Local lRet:= .T.
DEFAULT nSaida:=M->PY_SAIDA

(lRet:=VLDHORA(nSaida))

Return lRet


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340RENTRADA ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³          
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³Retorna o Conteudo do SX3_Relacao 	                       ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340RENTRADA                                             ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   
Function Pn340RENTRADA(nEntrada)
DEFAULT  nEntrada:=0.00
If nOpx = 6 .and. Empty(M->PY_DATAE)  .and. ! lPona340Aut
	nEntrada:= VAL(StrTran(Substr(time(),1,5),":","."))
Endif
Return nEntrada


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340RSAIDA   ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³          
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³Retorna o Conteudo do SX3_Relacao 	                       ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340RSAIDA                                               ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   
Function Pn340RSAIDA(nSaida)
DEFAULT  nSaida:=0.00

If nOpx = 7   .and. Empty(M->PY_DATAS)
	nSaida:= VAL(StrTran(Substr(time(),1,5),":","."))
Endif

Return nSaida

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340RDTS     ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³          
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ Retorna o Conteudo do SX3_Relacao                         ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340RDTS                                                 ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   
Function Pn340RDTS(dRet)
DEFAULT dRet:= Ctod("")

If nOpx = 7   .and. Empty(M->PY_DATAS)
   dRet:= dDatabase
Endif 
Return dRet 

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340RDTE     ³ Autor ³ Maurico MR      ³ Data ³18/12/2003³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ Retorna o Conteudo do SX3_Relacao                         ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340RDTE                                                 ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   
Function Pn340RDTE(dRet)
DEFAULT dRet:= Ctod("")

If nOpx = 6 .and. Empty(M->PY_DATAE) .and. ! lPona340Aut
   dRet:= dDatabase
Endif 
Return dRet

/*             
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340VDTE   ³ Autor ³ Maurico MR	     ³ Data ³18/12/2003³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ Valida Data Entrada                                       ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340VDTE                                                 ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   
Function Pn340VDTE(dDataE)
Local lRet:= .T.

Return lRet

/*             
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340VDTS     ³ Autor ³ Maurico MR   	 ³ Data ³18/12/2003³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ Valida Data Saida                                         ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340VDTS                                                 ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   
Function Pn340VDTS(dDataS)
Local lRet:= .T.

Return lRet

                     
/*             
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
³ Fun‡…o   ³ Pn340EncTOk   ³ Autor ³ Maurico MR   	 ³ Data ³18/12/2003³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
³ Descri‡…o³ Valida Enchoice                                           ³  
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
³ Uso      ³ Pn340EncTOk                                               ³  
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
*/                   
Function PN340EncTOk(aGets,aTela, oEnchoice)
Local lRet		:= .T.                
Local laGets	:= (aGets  <> Nil)
Local loEncho	:= (oEnchoice <> Nil)

Begin Sequence
      If laGets 
		  If !(lRet:=Obrigatorio(aGets,aTela))
		     Break
		  Endif   
      Endif 
     
      If EMPTY(M->PY_MAT) .AND. EMPTY(M->PY_CC)
         Help(" ",1,"PN340NOCC") // "Matricula ou C.Custo Não Informado"
         lRet:=.F. 
         If loEncho
		   	 fPosEnchoice(oEnchoice, "PY_CC")
		 Endif  	 
	   	 Break
      Endif  
       
      //-- Cracha do Visitante Nao Informado  
      //-- Foi fornecida Data de Entrada ou de Saida ou de Baixa
      If EMPTY(M->PY_CRACHA) .AND. ( ! EMPTY(M->PY_DATAE) .OR. !EMPTY(M->PY_DATAS) .OR. !EMPTY(M->PY_DTBAIXA)) .and. ! lPona340Aut         
        
     	 lRet:=.F.
       	 Help(" ",1,"PN340NOCRA")   //-- Cracha do Visitante Nao Informado  
       	 
         //-- Se Nao for Saida posiciona no Campo Cracha 
         If loEncho .AND. nOpx <> 7  
		  	 fPosEnchoice(oEnchoice, "PY_CRACHA")
		 Endif  	 
  
         Break        
		      
	  ENDIF      	  
	        
      //-- Nao Consta Entrada do Visitante.
      //-- Foi fornecida a Data de Saida ou o Cracha 
      If !nOpx == 3 .And. EMPTY(M->PY_DATAE) .AND. ( !EMPTY(M->PY_DATAS)  .OR. ! EMPTY(M->PY_CRACHA) )
	     lRet:=.F.
	     Help(" ",1,"PN340SEM_E")   //-- Nao Consta Entrada do Visitante.  
	          
	      //-- Se Nao for Saida posiciona no Campo Data de Entrada 
         If loEncho .AND. nOpx <> 7  
		  	fPosEnchoice(oEnchoice, "PY_DATAE")
		 Endif  	 
			  
	     Break   
	     
      Endif 
       
      //-- Foi Fornecida a Data de Saida e DataHora informada eh inferior a DataHora de Entrada
      If !Empty(M->PY_DATAS) .AND. (DataHora2Str(M->PY_DATAS, M->PY_SAIDA) < DataHora2Str(M->PY_DATAE, M->PY_ENTRADA))
	     lRet:=.F.
       	 Help(" ",1,"PN340DTMAE")   //-- Data da Marcacao Anterior a Data de Entrada.
	     Break 
	  Endif 
	  
	   //-- Foi Fornecida a Hora de  Entrada e Data informada eh Nula
      If !EMPTY(M->PY_ENTRADA) .AND. EMPTY(M->PY_DATAE)
	     lRet:=.F.
       	 Help(" ",1,"NVAZIO")   //-- Sem data de Entrada    
          
          //-- Se Nao for Entrada posiciona no Campo Data de Saida 
         If loEncho .AND. nOpx <> 6
	   	 	 fPosEnchoice(oEnchoice, "PY_DATAE")
	  	 Endif  	 
	  
         Break        
      Endif  
	  
	  //-- Foi Fornecida a Hora de  Saida e Data Saida informada eh Nula
      If !EMPTY(M->PY_SAIDA) .AND. EMPTY(M->PY_DATAS)
	     lRet:=.F.
       	 Help(" ",1,"NVAZIO")   //-- Sem data de Saida    
          
         If loEncho 
	   	 	 fPosEnchoice(oEnchoice, "PY_DATAS")
	  	 Endif  	 
	  
         Break        
      Endif 
      
      //-- Foi Fornecida a Data de Baixa e Data Saida informada eh Nula
      If !EMPTY(M->PY_DTBAIXA) .AND. EMPTY(M->PY_DATAS)
	     lRet:=.F.
       	 Help(" ",1,"NVAZIO")   //-- Sem data de Saida    
          
         If loEncho 
	   	 	 fPosEnchoice(oEnchoice, "PY_DATAS")
	  	 Endif  	 
	  
         Break        
      Endif   
      
	  //-- Foi Fornecida a Data de Baixa e eh menor que a Data Saida informada 
      If !EMPTY(M->PY_DTBAIXA) .AND. ( M->PY_DTBAIXA < M->PY_DATAS )
	     lRet:=.F.
       	 Help(" ",1,"PN340DTVB")   //-- Data Baixa menor que Data de Saida    
          
         If loEncho 
	   	 	 fPosEnchoice(oEnchoice, "PY_DTBAIXA")
	  	 Endif  	 
	  
         Break        
      Endif  

	  //-- Foi Fornecida a Data de Entrada e eh menor que a Data Visitada informada 
      If !Empty(M->PY_DATAE) .AND. ( M->PY_DATAE < M->PY_DTVISIT )
	     lRet:=.F.
       	 MsgAlert( OemToAnsi( STR0125) , STR0034 )	//-- Data de Entrada Anterior a Data de Visita.
	     Break 
	  Endif
      
End

Return(lRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pn340LinOk  ³Autor³Mauricio MR            ³ Data ³27/11/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³                                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn340LinOk( oBrowse )									    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³ 															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona340()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Function Pn340LinOk( oBrowse)

Local aCposKey		:= {}
Local lLinOk		:= .T.
Local nPosEntrada	:= 0.00
Local nPosSaida		:= 0.00

nPosSaida	:= Ascan(aCols,{|x| x[nPosSPZTpMarca] == '2'})
nPosEntrada	:= Ascan(aCols,{|x| x[nPosSPZTpMarca] == '1'}) 

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Altera o Estado do Cursor  								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

CursorWait()

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Evitar que os Inicializadores padroes sejam carregados indevi³
	³ damente													   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

	PutFileInEof( "SPZ" )
	
	Begin Sequence
	
	   
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Se a Linha da GetDados Nao Estiver Deletada				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		
		IF !( GdDeleted() )   
			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Verifica Se o Campos Estao Devidamente Preenchidos		   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			
			aAdd( aCposKey , "PZ_DATA" )
			IF !( lLinOk := GdNoEmpty( aCposKey ) )
		    	Break
			EndIF
	        
	        //-- Se Lancamento for uma Marcacao
	        If aCols[n,nPosSPZTpMarca] == '3'
	           //-- Verifica a Marcacao em Relacao a Entrada
	           If Empty(nPosEntrada)
	              lLinOk:= .F.
	              Break 
		       Endif                                     
		       
		       If DataHora2Str(aCols[n		 	 , nPosSPZData], aCols[n			, nPosSPZHora] ) < ;
		          DataHora2Str(aCols[nPosEntrada , nPosSPZData], aCols[nPosEntrada	, nPosSPZHora] )
			       lLinOk:= .F.
               		Help(" ",1,"PN340DTMAE")   //-- Data da Marcacao Anterior a Entrada
	              Break 
		       Endif 
	           //-- Verifica a Marcacao em Relacao a Saida
		       If !Empty(nPosSaida)
	              If DataHora2Str(aCols[n		     , nPosSPZData], aCols[n			, nPosSPZHora] ) > ;
		          		DataHora2Str(aCols[nPosSaida , nPosSPZData], aCols[nPosSaida   	, nPosSPZHora] )
			       		lLinOk:= .F.
               			Help(" ",1,"PN340DTMAS")   //-- Data da Marcacao Apos a Saida
	              		Break 
		       	  Endif 
		       Endif
		       
		    Endif   
		EndIF
		
	End Sequence
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se Houver Alguma Inconsistencia na GetDados, Seta-lhe o Foco  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	
	IF !( lLinOk )
		oBrowse:SetFocus()
	EndIF

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura o Estado do Cursor								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

CursorArrow()

Return( lLinOk )             

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pn340TudOk  ³Autor³Mauricio MR            ³ Data ³27/11/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³                                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn340TudOk( oBrowse )									    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³ 															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona340()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Function Pn340TudOk( oBrowse )

Local lTudoOk 	:= .T.
Local nLenaCols	:= 0
Local n			:= 0
/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Altera o Estado do Cursor  								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

CursorWait()
	Begin Sequence
	
	    /*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Percorre Todas as Linhas para verificar se Esta Tudo OK      ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		nLenaCols:= Len( aCols )
		
		For n := 1 To Len( aCols )
			IF !( lTudoOk := Pn340LinOk( oBrowse ) )
				oBrowse:Refresh()
				Break
			EndIF
		Next n
	
	End Sequence
	                 
	//-- Libera aCols em branco quando nenhuma informacao foi digitada
	IF ( fCompArray( aCols, aSPZClone) )
		lTudoOk:= .T.
    Endif
/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura o Estado do Cursor								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

CursorArrow()

Return( lTudoOk  )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pn340DelOk  ³Autor³Mauricio MR            ³ Data ³05/12/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validar a Delecao na GetDados                               ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn340DelOk( oBrowse )									    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³ 															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pn340DelOk	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function Pn340DelOk(oBrowse)
         
Local lDelOk 		:= .T.
Local nPos			:= 0.00

Begin Sequence

	If !( GdDeleted() )                                          
	     If aCols[n, nPosSPZTPMARCA] == '1' 
	        If !Empty(nPos:= aScan( aCols , { |x| x[nPosSPZTPMARCA] == "2" } ) )
	           	lDelOk:= .F.
	           	Help(" ",1,"PN340DEL_S") //- Elimine a Saida primeiramente.
	           	Break       
	        Endif
	     ElseIf aCols[n, nPosSPZTPMARCA] == '2'      	                    
	            M->PY_DTBAIXA:=CTOD('')
	     Endif
	Endif

End Sequence
	
Return( lDelOk )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pn340Grava   ³Autor³Mauricio MR           ³ Data ³27/11/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³                                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona340()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Static Function Pn340Grava(		nOpc		,;	//Opcao de Acordo com aRotina
							 	nReg		,;	//Numero do Registro do Arquivo Pai ( SPY )
							 	aSPYHeader	,;	//Campos do Arquivo Pai ( SPY )
							 	aSPYVirtEn	,;	//Campos Virtuais do Arquivo Pai ( SPY )
							 	aSPYMemoEn  ,;  //Campo Memo
							 	aSPZHeader	,;	//Campos do Arquivo Filho ( SPZ )
							 	aSPZCols	,;	//Itens do Arquivo Filho ( SPZ )
							 	aSPZVirtGd	,;	//Campos Virtuais do Arquivo Filho ( SPZ )
							 	aSPZRecnos	 ;	//Recnos do Arquivo Filho ( SPZ )
							  )


Local lLock			:= .F.
Local aSPYPutMsMm	:= {}
Local cMsgErr		:= ""
Local nCpoMemo		:= 0.00
Local nChoice		:= 0.00
Local nChoices		:= 0.00
Local nHeader		:= 0.00
Local nHeaders		:= 0.00
Local nCol			:= 0.00
Local nCols			:= 0.00
Local nRecno		:= 0.00
Local nRecnos		:= 0.00        
Local nDeleted		:= GdFieldPos( "GDDELETED" , aSPZHeader )

  
DEFAULT nOpc		:= 0.00
DEFAULT nReg		:= 0.00
DEFAULT aSPYHeader	:= {}
DEFAULT aSPYVirtEn	:= {}
DEFAULT aSPYMemoEn	:= {}
DEFAULT aSPZHeader	:= {}
DEFAULT aSPZCols	:= {}
DEFAULT aSPZVirtGd	:= {}
DEFAULT aSPZRecnos	:= {}

nChoices			:= Len(	aSPYHeader	)
nHeaders			:= Len(	aSPZHeader	)
nCols				:= Len(	aSPZCols	)
nRecnos				:= Len( aSPZRecnos	)

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Se for Exclusao ( nOpc == 5 )								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
IF ( nOpc == 5 )
	IF !Empty( nReg )
		Begin Transaction
			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Deleta os Memos											   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			MsMmDel( "SPY" , { nReg } , aSPYMemoEn )
			PonDelRecnos( "SPZ" , aSPZRecnos )
			PonDelRecnos( "SPY" , { nReg } )

		End Transaction
	EndIF
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Se for Inclusao/Alteracao ( nOpc == 3 .or. nOpc == 4 )	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
ElseIF ( nOpc == 3 .or. nOpc == 4 )
	Begin Transaction
		IF !Empty( nReg )
			SPY->( MsGoto( nReg ) )
			lLock := RecLock( "SPY" , .F. , .F. )
		Else
			lLock := RecLock( "SPY" , .T. , .F. )
		EndIF 
		
		IF !( lLock )
			Break
		EndIF
        
        SPY->PY_FILIAL := xFilial('SPY')              	
		
		For nChoice := 1 To nChoices
			IF ( aScan( aSPYVirtEn , { |cCpo| ( cCpo == aSPYHeader[ nChoice , 02 ] ) } ) == 0.00 )
				
				SPY->( &( aSPYHeader[ nChoice , 02 ] ) ) :=FormataCampo( aSPYHeader[ nChoice , 02 ], aSPYHeader[ nChoice , 08 ], aSPYHeader[ nChoice , 04 ], aSPYHeader[ nChoice , 05 ],&( "M->"+aSPYHeader[ nChoice , 02 ] ) )

			ElseIF ( ( nCpoMemo := aScan( aSPYMemoEn , { |cCpo| ( cCpo[1] == aSPYHeader[ nChoice , 02 ] ) } ) ) > 0.00 )
				/*
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Armazena as Informacoes que serao gravadas no SYP      	   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				SPY->( aAdd( aSPYPutMsMm , { Recno() , &("SPY->"+aSPYMemoEn[nCpoMemo,02]) , &( "M->"+aSPYHeader[ nChoice , 02 ] ) , aSPYMemoEn[nCpoMemo,02] } ) )
			EndIF
		Next nChoice

		IF nOpc == 3
		   SPY->PY_NUMERO:=GetSX8NUM("SPY","PY_NUMERO")
		Endif

		SPY->( MsUnLock() )
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Grava as Informacoes no SYP                           	   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		If nOpc ==3 .and. lPona340Aut .and. ! Empty(cMemoAut)
			MSMM(,80,,cMemoAut,1,,,"SPY","PY_CODHIST")
 		EndIf
		nChoices := Len( aSPYPutMsMm )
		For nChoice := 1 To nChoices
			SPY->( dbGoto( aSPYPutMsMm[ nChoice , 01 ] ) )
			MsMm( aSPYPutMsMm[ nChoice , 02 ] , NIL , NIL , aSPYPutMsMm[ nChoice , 03 ] , 1 , NIL , NIL , "SPY" , aSPYPutMsMm[ nChoice , 04 ] )
		Next nChoice
		
		IF ( nRecnos == nCols )
			For nRecno := 1 To nRecnos
				SPZ->( dbGoto( aSPZRecnos[ nRecno ] ) )
				IF !RecLock( "SPZ" , .F. , .F. )
					Loop
				EndIF
				IF !( aSPZCols[ nRecno , nDeleted ] )
					For nHeader := 1 To nHeaders
						IF ( aScan( aSPZVirtGd , { |cCpo| ( cCpo == aSPZHeader[ nHeader , 02 ] ) } ) == 0.00 )
							SPZ->( &( aSPZHeader[ nHeader , 02 ] ) ) := FormataCampo( aSPZHeader[ nHeader , 02 ], aSPZHeader[ nHeader , 08 ], aSPZHeader[ nHeader , 04 ], aSPZHeader[ nHeader , 05 ], aSPZCols[ nRecno , nHeader ] )
						ElseIF ( ( nCpoMemo := aScan( aSPYMemoEn , { |cCpo| ( cCpo[1] == aSPYHeader[ nChoice , 02 ] ) } ) ) > 0.00 )
							/*
							ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							³ Armazena as Informacoes que serao gravadas no SYP      	   ³
							ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
								SPY->( aAdd( aSPYPutMsMm , { Recno() , &("SPY->"+aSPYMemoEn[nCpoMemo,02]) , &( "M->"+aSPYHeader[ nHeader , 02 ] ) , aSPYMemoEn[nCpoMemo,02] } ) )
						EndIF
					Next nHeader 
					/*
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Grava as Informacoes no SYP                           	   ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
					nChoices := Len( aSPYPutMsMm )
					For nChoice := 1 To nChoices
						SPY->( dbGoto( aSPYPutMsMm[ nChoice , 01 ] ) )
						MsMm( aSPYPutMsMm[ nChoice , 02 ] , NIL , NIL , aSPYPutMsMm[ nChoice , 03 ] , 1 , NIL , NIL , "SPY" , aSPYPutMsMm[ nChoice , 04 ] )
					Next nChoice
				Else
					MsMmDel( "SPY" , { nReg } , aSPYMemoEn )
					IF !SPZ->( FkDelete( @cMsgErr ) )
						SPZ->( RollBackDelTran( cMsgErr ) )
					EndIF
				EndIF
				SPZ->( MsUnlock() )
			Next nRecno
		ElseIF ( nRecnos < nCols )
			For nRecno := 1 To nRecnos
				SPZ->( dbGoto( aSPZRecnos[ nRecno ] ) )
				IF !RecLock( "SPZ" , .F. , .F. )
					Loop
				EndIF
				IF !( aSPZCols[ nRecno , nDeleted ] )
					SPZ->PZ_FILIAL		:= SPY->PY_FILIAL
					SPZ->PZ_VISITA  	:= SPY->PY_VISITA
					SPZ->PZ_CRACHA  	:= SPY->PY_CRACHA
					SPZ->PZ_DATA  		:= SPY->PY_DTVISIT
					SPZ->PZ_NUMERO 		:= SPY->PY_NUMERO
					For nHeader := 1 To nHeaders
						IF ( aScan( aSPZVirtGd , { |cCpo| ( cCpo == aSPZHeader[ nHeader , 02 ] ) } ) == 0.00 )
							SPZ->( &( aSPZHeader[ nHeader , 02 ] ) ) := FormataCampo( aSPZHeader[ nHeader , 02 ], aSPZHeader[ nHeader , 08 ], aSPZHeader[ nHeader , 04 ], aSPZHeader[ nHeader , 05 ], aSPZCols[ nRecno , nHeader ] )
						ElseIF ( ( nCpoMemo := aScan( aSPYMemoEn , { |cCpo| ( cCpo[1] == aSPYHeader[ nChoice , 02 ] ) } ) ) > 0.00 )
							/*
							ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							³ Armazena as Informacoes que serao gravadas no SYP      	   ³
							ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
								SPY->( aAdd( aSPYPutMsMm , { Recno() , &("SPY->"+aSPYMemoEn[nCpoMemo,02]) , &( "M->"+aSPYHeader[ nHeader , 02 ] ) , aSPYMemoEn[nCpoMemo,02] } ) )
						EndIF
					Next nHeader 
					/*
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Grava as Informacoes no SYP                           	   ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
					nChoices := Len( aSPYPutMsMm )
					For nChoice := 1 To nChoices
						SPY->( dbGoto( aSPYPutMsMm[ nChoice , 01 ] ) )
						MsMm( aSPYPutMsMm[ nChoice , 02 ] , NIL , NIL , aSPYPutMsMm[ nChoice , 03 ] , 1 , NIL , NIL , "SPY" , aSPYPutMsMm[ nChoice , 04 ] )
					Next nChoice
				Else   
					MsMmDel( "SPY" , { nReg } , aSPYMemoEn )
					IF !SPZ->( FkDelete( @cMsgErr ) )
						SPZ->( RollBackDelTran( cMsgErr ) )
					EndIF
				EndIF
				SPZ->( MsUnlock() )
			Next nRecno	
			For nCol := nRecno To nCols
				IF !( aSPZCols[ nCol , nDeleted ] )
					IF !RecLock( "SPZ" , .T. , .F. )
						Loop
					EndIF
					SPZ->PZ_FILIAL		:= SPY->PY_FILIAL
					SPZ->PZ_VISITA  	:= SPY->PY_VISITA
					SPZ->PZ_CRACHA  	:= SPY->PY_CRACHA    
					SPZ->PZ_DATA  		:= SPY->PY_DTVISIT					
					SPZ->PZ_NUMERO 		:= SPY->PY_NUMERO
					For nHeader := 1 To nHeaders
						IF ( aScan( aSPZVirtGd , { |cCpo| ( cCpo == aSPZHeader[ nHeader , 02 ] ) } ) == 0.00 )
							SPZ->( &( aSPZHeader[ nHeader , 02 ] ) ) := FormataCampo( aSPZHeader[ nHeader , 02 ], aSPZHeader[ nHeader , 08 ], aSPZHeader[ nHeader , 04 ], aSPZHeader[ nHeader , 05 ], aSPZCols[ nCol , nHeader ] )
						ElseIF ( ( nCpoMemo := aScan( aSPYMemoEn , { |cCpo| ( cCpo[1] == aSPYHeader[ nChoice , 02 ] ) } ) ) > 0.00 )
								/*
								ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								³ Armazena as Informacoes que serao gravadas no SYP      	   ³
								ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
								SPY->( aAdd( aSPYPutMsMm , { Recno() , &("SPY->"+aSPYMemoEn[nCpoMemo,02]) , &( "M->"+aSPYHeader[ nHeader , 02 ] ) , aSPYMemoEn[nCpoMemo,02] } ) )
						EndIF
					Next nHeader 
					/*
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Grava as Informacoes no SYP                           	   ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
					nChoices := Len( aSPYPutMsMm )
					For nChoice := 1 To nChoices
						SPY->( dbGoto( aSPYPutMsMm[ nChoice , 01 ] ) )
						MsMm( aSPYPutMsMm[ nChoice , 02 ] , NIL , NIL , aSPYPutMsMm[ nChoice , 03 ] , 1 , NIL , NIL , "SPY" , aSPYPutMsMm[ nChoice , 04 ] )
					Next nChoice
					SPZ->( MsUnlock() )
				EndIF
			Next nCol
		EndIF

	End Transaction

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ ATENCAO: Nao Colocar Dentro de Transacao	o comando abaixo   ³
	³ Confirmando a Numeracao Automatica          				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF ( nOpc == 3 .and. ( __lSX8 ) )
		While ( GetSX8Len() > nGetSX8Len )
			ConfirmSX8()
		End While
	EndIF
	
EndIF

// - Obtém o último registro Alterado/Incluido/Visualizado para posicionamento no browse.
nLastRec := SPY->( Recno() )

Return( NIL )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³FormataCampo ³Autor³Mauricio MR           ³ Data ³27/11/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Converte campo para o Formato de Gravacao                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona340()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function FormataCampo(cCampo, cTipo, nTam, nDecimal, xConteudo)

DEFAULT xConteudo:= &( "M->"+cCampo )
 
If Substr(cCampo,3)$'HORA.ENTRADA.SAIDA.DTVISIT.DTBAIXA'
   xConteudo:= (Substr(StrTran(xConteudo,":", "."),1,nTam))
Endif   

If cTipo == 'N' .AND. ValType(xConteudo) == 'C'
   xConteudo:= Val(xConteudo)
Endif

Return xConteudo
                    
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pn340PesqBrw ³Autor³Mauricio MR           ³ Data ³09/08/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³ Trata Pesquisa com Filtro                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona340()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Pn340PesqBrw( cAlias , nReg )                       
If AxPesqui() == 1
  	nOrdPesq	:= SPY->(IndexOrd())
	Eval(bFiltraBrw,fExpFiltro(aFilterExp,.F., lMudFVis,lVerGrpUsr)) 
Endif
Return (.T.)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pn340Filtro  ³Autor³Mauricio MR           ³ Data ³27/11/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³ Refaz o Filtro do mBrowse                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona340()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Pn340Filtro()

//-- Obtem a Expressao de Filtro Adicional da Rotina
cExpFiltro:= fExpFiltro(@aFilterExp,Nil, .T., lVerGrpUsr)

//--Cancela Filtros Anteriores  
Eval(bEndFilBrw) 
               
//--Executa Filtro do RH mais o Filtro Adicional da Rotina 
SPY->(DbSetOrder(nOrdPesq))
Eval(bFiltraBrw,cExpFiltro)

Return( MBrChgLoop( .F. ) )                             


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pn340KeepFilt³Autor³Mauricio MR           ³ Data ³20/07/2005³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³ Mantem o indice de entrada                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona340()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Pn340KeepFilt(lxMudFVis, lxVerGrpUsr)

Local nIndex 			:= 0 

DEFAULT lxMudFVis		:= lMudFVis
DEFAULT lxVerGrpUsr		:= lVerGrpUsr


If Empty(cExpFiltro)
	//--Executa Filtro do RH mais o Filtro Adicional da Rotina 
	//--IMPORTANTE: Nao retire esse filtro MALUCO pois ele garante
	//--que tenhamos pelo menos um indice na saida da rotina quando
	//--entramos nela filtrados e saimos sem nenhum filtro selecionado.
	//--O mBrowse tenta setar o indice que foi entrado.
	Eval(bFiltraBrw,If(Empty(cExpFiltro),"1 == 1",cExpFiltro))

	//--Posiciona num Indice Valido
	If !Empty((nIndex:=Len(aIndex))) 
  		SPY->(DbSetOrder( Indexord() ) )
 	Else
		cExpFiltro:=fExpFiltro(aFilterExp, .F., lxMudFVis, lxVerGrpUsr)
		Eval(bFiltraBrw, cExpFiltro)
//		SPY->(dbSetOrder(nOrdPesq))
 	Endif
Else

  	Eval(bEndFilBrw) 
	Eval(bFiltraBrw,cExpFiltro) 
//	SPY->(dbSetOrder(nOrdPesq)) 
Endif          

Return( .T. )                             


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³fExpFiltro   ³Autor³Mauricio MR           ³ Data ³10/08/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³ REcupra Expressao de Filtro                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona340()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function fExpFiltro(aFilterExp, lBuildExp, lMudFVis,lVerGrpUsr)
Local nPos					:= 0.00   
Local aCloneFilterExp		:= aClone(aAlsFilterExp) 
Local aFiltros				:= {}
Local cRetFiltro			:= ""
Local lForceReadFilter		:= Empty(aFilterExp)

DEFAULT lBuildExp			:= .T.
DEFAULT lMudfVis			:= .T.
DEFAULT lVerGrpUsr			:= .F.
//-- Se a expressao de filtro deva ser checada obtem a ultima expressao selecionada
//-- a partir do arquivo Crit_Sel no \Profile. Inclusive pode ser uma expressao salva
//-- por outro usuario. 

If lMudFVis 
	If lVerGrpUsr
		//-- Monta Expressao de Filtro conforme Alias, Programa, Grupo e Usuario
		aEval(aGrpFilter,{|X| AADD(aCloneFilterExp, x) } )
		
		If !Empty((aFiltros := GpFiltro( aCloneFilterExp , .F. , .F. ))) 
			aFilterExp		:= aClone(aCloneFilterExp) 
		Else
			aCloneFilterExp	:= aClone(aFilterExp) 
		Endif
		
		aEval(aUsrFilter,{|X| AADD(aCloneFilterExp, x) } )
		If !Empty((aFiltros := GpFiltro( aCloneFilterExp , .F. , .F. )))
			aFilterExp:=aClone(aCloneFilterExp)
		Endif 
	Endif
	
	//-- Abre Janela ( se solicitada) e ativa o filtro escolhido
	aFiltros := GpFiltro( aFilterExp , lBuildExp , .F. )
	
	nPos := 0 	
	nPos := Ascan(aFiltros,{|X|X[1]=="SPY"})
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta a expressao do filtro                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nPos > 0.00  
		cRetFiltro	:=	aFiltros[nPos][2]	
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Recupera o Valor Original da Expressao de Filtro se o Usuario   ³
	//³cancelou a escolha/definicao de filtros						   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If !GpFltBtnOk()
		cRetFiltro:= cExpFiltro
	Else
		cExpFiltro:= cRetFiltro 
	Endif
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Garante que o conteudo do filtro recupere todas as ocorrencias  ³
//³no caso do mesmo nao existir.								   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
If Empty(cExpFiltro)
   cExpFiltro := "1==1"
Endif   
Return(cExpFiltro)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pn340OpcFilt³ Autor ³Mauricio MR           ³ Data ³01/12/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Dialogo para Obter Opcoes de Filtro							 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL															 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     												 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Function Pn340OpcFilt( dIniPer, dFimPer )

Local aSvKeys		:= GetKeys()
Local aAdvSize		:= MsAdvSize( .F. , .T. , 25 )
Local bSet15		:= { || NIL }
Local bSet24		:= { || NIL }
Local oDlg 			:= NIL
Local oFont			:= NIL
Local oGroup1		:= NIL

     
DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
DEFINE MSDIALOG oDlg TITLE OemToAnsi( cCadastro + " - " + STR0017 ) From aAdvSize[7],0 TO aAdvSize[6]*.7,aAdvSize[5] OF oMainWnd PIXEL	//"Cadastro de Visitas" - "Filtro"

@ 015 , 003	GROUP oGroup1 TO 050,315 LABEL OemToAnsi(STR0018) OF oDlg PIXEL		//"Filtro de Visitas"
oGroup1:oFont:=oFont


@ 034 , 007 SAY OemToAnsi( STR0019 )	SIZE	100,10 OF oDlg PIXEL FONT oFont	//"Periodo: "
@ 030 , 060 GET dIniPer					SIZE	100,10 OF oDlg PIXEL FONT oFont	Valid (dIniPer<=dFimPer)
@ 030 , 170 GET dFimPer					SIZE	100,10 OF oDlg PIXEL FONT oFont	Valid (dFimPer >=dIniPer)
    
bSet15	:= { || oDlg:End() }
bSet24	:= { || oDlg:End() }

ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar( oDlg , bSet15 , bSet24  ) 

RestKeys( aSvKeys , .T. )

Return(Nil)
            
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³PnVVisita   	³ Autor ³Mauricio MR           ³ Data ³01/12/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Valida Codigo do Visitante										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PnVVisita(cCodVisita, lFree)
Local lRet		:= .T.    

DEFAULT lFree:= .T.

If !Empty(cCodVisita)
	If ExistCPO("SPW",cCodVisita) .AND. Val(cCodVisita) > 0.00
		M->PY_NOME	:= ALLTRIM(Posicione("SPW",1,xFilial("SPW")+cCodVisita,"PW_NOMFULL"))
	Else
	   lRet			:= .F.              
	   Help(" ",1,"PN340NOVIS") // Codigo de Visitante nao Encontrado
	Endif
Endif
                                     

If (lRet .AND. lFree)
   lRet:= FreeForUse("SPW",M->PY_VISITA)    
Endif 

If lRet .AND. !Empty(cCodVisita) .AND. GETSX3CACHE("PY_BITMAP","X3_CAMPO")<> NIL  
   M->PY_BITMAP:=SPW->PW_BITMAP
ENDIF   
                               
Return (lRet) 

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³PnVMat		³ Autor ³Mauricio MR           ³ Data ³01/12/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Valida o Codigo de Matricula do Funcionario					 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL															 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     												 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PnVMat(cCodMat, lValid)
Local lRet		:= .T.
Local aArea		:=GetArea()
Local aSRAArea	:=SRA->(GetArea())
Local nPos		:= 0	
Default lValid := .T. // Quando a chamada da função vem do fonte o lValid é .F. e quando vem do Valid do PY_MAT o lValid é .T. 


M->PY_MAT:=If(!Empty(cCodMat), cCodMat, M->PY_MAT)

If !lPona340Aut
	If Alltrim(UPPER(ReadVar())) ==  "M->PY_MAT"  .OR. !EMPTY(M->PY_MAT)
		If !Empty(M->PY_MAT) .AND. ExistCpo("SRA", M->PY_MAT)
			If(lValid)
				SRA->(DBSEEK(fFilfunc('SRA')+M->PY_MAT))
			Else
		    	SRA->(DBSEEK(SPY->PY_FILIAL+M->PY_MAT))
		    EndIf
		    M->PY_CONTATO	:= SRA->RA_NOME	    
		   	M->PY_CC		:= SRA->RA_CC
			M->PY_DESCCC	:= Upper( AllTrim( fDesc("CTT",M->PY_CC,"CTT_DESC01",,XFILIAL('CTT') ) ) )
		Else                               
	    	IF !EMPTY(M->PY_MAT)
		    	M->PY_MAT		:= SPACE(aTamMat[1]) 
	    	    lRet			:= .F.    
	    	Endif
	    	    
		Endif	
	Endif
	IF EMPTY(M->PY_MAT)
    	M->PY_CONTATO 	:= SPACE(LEN(M->PY_CONTATO))  
    Endif
	If TYPE("OENCHOICE") <>"U" .AND. !( ValType(oEnchoice:aEntryCtrls[1]) == "U" )
		fPosEnchoice(oEnchoice, "PY_MAT",.F.,@nPos)   
	    If nPos > 0
		    oEnchoice:aEntryCtrls[ nPos ]:Cargo:= M->PY_MAT
	  		oEnchoice:aEntryCtrls[ nPos ]:Refresh()
	    Endif
    Endif
Endif

RestArea(aSRAArea)
RestArea(aArea)

Return (lRet) 

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fLiberaGet	  	 ³ Autor ³Mauricio MR      ³ Data ³22/07/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Libera a Digitacao de Grupo e Eventos correspondentes.       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fLiberaGet()		  										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function fLiberaGet(oEnchoice, nOpc) 
Local aSvKeys	:= GetKeys()
Local lRet		:=.T.

IF ( nOpc == 3 ) .or. ( nOpc == 4 ) .or. ( nOpc == 6 ) .or. ( nOpc == 7 ) 
	IF ! Obrigatorio( oEnchoice:aGets , oEnchoice:aTela )   
     lRet:= .F.
	Endif    
Endif    

RestKeys( aSvKeys , .T. )

Return (lRet)            
                                                                    

/*
 ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
 ³Fun‡„o    ³fFilVisit ³ Autor ³Equipe Advanced RH     ³ Data ³09/10/2003³  
 ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
 ³Descri‡„o ³Retorna a filial a ser utilizada para Pesquisa/Grava‡„o no  ³  
 ³          ³arquivo desejado, sempre com base na Filial do Visitante.   ³  
 ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
 ³Sintaxe   ³ fFilVisit(cVar)                                            ³  
 ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
 ³Parƒmetros³ cVar = Alias do arquivo cuja filial se deseja Pesq./Gravar ³  
 ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
 ³Uso       ³ Gen‚rico                                                   ³  
 ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
 */
Function fFilVisit(cAlias )

DEFAULT cAlias	:= Alias()

Return( xFilial( Upper( AllTrim( cAlias ) ) , IF( Select( "SPW" ) > 0.00 , SPW->PW_FILIAL , cFilAnt ) ) )

/*
 ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿  
 ³Fun‡„o    ³fPosEnchoice  ³ Autor ³Equipe Advanced RH ³ Data ³09/10/2003³  
 ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´  
 ³Descri‡„o ³Obtem foco de determinado campo da Enchoice				 ³  
 ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
 ³Sintaxe   ³ fPosEnchoice(oEnchoice, cCampo)                            ³  
 ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
 ³Parƒmetros³ 															 ³  
 ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´  
 ³Uso       ³ Gen‚rico                                                   ³  
 ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
 */
Static Function fPosEnchoice(oEnchoice, cCampo, lPosiciona, nPosField)
  Local cReadVar:= ''
  Local cCpoVld	:= ''
  Local	nCtrls 	:= Len( oEnchoice:aEntryCtrls )
  Local nCtrl	:= 0.00
  
  DEFAULT lPosiciona	:= .T.                
 
  For nCtrl := 1 To nCtrls
  	   cReadVar := oEnchoice:aEntryCtrls[ nCtrl ]:cReadVar 
  	   cCpoVld	:= Upper( AllTrim( StrTran( cReadVar , "M->" , "" ) ) )
  	   If !(cCpoVld == ALLTRIM(UPPER(cCampo)))
  	      Loop
  	   Endif   
  	   
  	   //-- Obtem a posicao do campo
  	   If nPosField <> NIL
	  	   nPosField:= nCtrl
 	   Endif
 	   
 	   If lPosiciona
	 	   oEnchoice:aEntryCtrls[ nCtrl ]:SetFocus() 
 	   Endif
       
       Exit
  Next nCtrl 
  
Return Nil  	


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³GDSPZMontaCols	³ Autor ³Mauricio MR           ³ Data ³01/12/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Monta aCols do SPZ - Acessos									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Function GDSPZMontaCols(aAcessos, aCols, aRecnos)

Local nPos			:= 0.00
Local nAcessos		:= Len(aAcessos)  

aCols:= {}

For nPos:= 1 To nAcessos
	aAdd(aCols ,	{	aAcessos[nPos,01]	,;	//01 - Data
						aAcessos[nPos,02]	,;	//02 - Hora
						aAcessos[nPos,03]	,;	//03 - Relogio
						aAcessos[nPos,04]	,;	//04 - TpMarca
						aAcessos[nPos,05]	,;	//05 - Flag de Marcacao
						aAcessos[nPos,06]	,;	//06 - Funcao
						aAcessos[nPos,07]	,;	//07 - Giro
						"SPZ"				,;	//08 - Alias					
						aAcessos[nPos,08]	,;	//09 - Recno						
						.F.				 	;								 
					 };
		 )
	
	AADD(aRecnos,aAcessos[nPos,8]) 
Next nPos

Return (Nil)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³FGETVISITANTE	³ Autor ³Mauricio MR           ³ Data ³08/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Obtem o Nome do Visitante - Uso em Inic Browse					 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

FUNCTION FGETVISITANTE()
RETURN(Posicione("SPW",1,SPY->PY_FILIAL+SPY->PY_VISITA,"PW_NOMFULL"))	

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³FGETCONTATO		³ Autor ³Mauricio MR           ³ Data ³08/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Obtem o Nome do Funcionario - Uso em Inic Browse				 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
FUNCTION FGETCONTATO()
RETURN(Posicione("SRA",1,SPY->PY_FILIAL+SPY->PY_MAT,"RA_NOME"))	

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³FGETCC			³ Autor ³Mauricio MR           ³ Data ³08/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Obtem a Descricao do Cento de Custo - Uso em Inic Browse		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
FUNCTION FGETCC()
cRet:= ""
If !EMPTY(PY_MAT)
	cRet:=fDesc("CTT",SPY->PY_CC,"CTT_DESC01",,xFilial("CTT",SPY->PY_FILIAL))	
Endif	

RETURN(cRet)


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fImprime		³ Autor ³Mauricio MR           ³ Data ³08/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Executa Rotina de Impressao Individual de Etiquetas para Cracha	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/  
Static Function fImprime()
                                  
If EMPTY(M->PY_VISITA) 
   Help(" ",1,"PN340NOVIS") // Codigo de Visitante nao Encontrado
   Return(.F.)
Endif
	
//-- Imprime Cracha Individual
IF ExistBlock( "ETQVIST")
   ExecBlock( "ETQVIST" , .F. , .F. ,{2}, .F. )
ELSE
	GPER1017(2)
ENDIF

Return

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fCFGEtiqueta	³ Autor ³Mauricio MR           ³ Data ³08/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Executa Rotina de Configuracao de Etiquetas para Cracah de ID	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/  
Function fCFGEtiqueta()
	
	If ExistBlock( "ETQVIST")
		ExecBlock( "ETQVIST", .F. , .F., {1}, .F. )
	Else
		// Para realizar a configuração das etiquetas é necessário que o RDMake ETQVIST esteja compilado no ambiente.
		// Compile o RDMake ETQVIST no ambiente para configurar e imprimir as etiquetas para visitantes. 
		// Uma versão atualizada desse RDMake está disponível na central de downloads."
		//help( NIL, NIL, "ETQVIST", NIL, STR0126 + STR0130 + STR0128, 1 , 0,,,,,, {STR0129})
		GPER1017(1)
	EndIf
	
Return

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fEmissao		³ Autor ³Mauricio MR           ³ Data ³27/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Executa Rotina de Impressao Coltivas de Etiquetas para Crachas	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/  
Function fEmissao()
	
	If ExistBlock( "ETQVIST")
		ExecBlock( "ETQVIST", .F., .F., {3}, .F. )
	Else
		// Para realizar a emissão das etiquetas é necessário que o RDMake ETQVIST esteja compilado no ambiente.
		// Compile o RDMake ETQVIST no ambiente para configurar e imprimir as etiquetas para visitantes. 
		// Uma versão atualizada desse RDMake está disponível na central de downloads."
		//help( NIL, NIL, "ETQVIST", NIL, STR0126 + STR0127 + STR0128, 1 , 0,,,,,, {STR0129})
		GPER1017(3)
	EndIf
	
Return
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pn340VNum		³ Autor ³Mauricio MR           ³ Data ³14/02/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Valida Numero Sequencial de Visita'								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/  
Function Pn340VNum(cNumero)
Local lRet:= .T.

DEFAULT cNumero:= If(TYPE('M->PY_NUMERO') <> 'U', M->PY_NUMERO,SPY->PY_NUMERO)
 
lRet:=ExistChav("SPY",M->PY_NUMERO) .AND. FreeForUse("SPY",M->PY_NUMERO)

Return (lRet)
 
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pn340RNum		³ Autor ³Mauricio MR           ³ Data ³14/02/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Gera Numero Sequencial de Visita'								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/ 
Function Pn340RNum()
Local xRet:= ''

xRet:=IIF(INCLUI,GetSx8Num("SPY","PY_NUMERO"),"")

Return (xRet)                            


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pn340VCC		³ Autor ³Mauricio MR           ³ Data ³14/02/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Valida C.Custo													 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/  
Function Pn340VCC()
Local lRet:= .T.

If Alltrim(UPPER(ReadVar())) ==  "M->PY_CC"  .OR. !EMPTY(M->PY_CC)
	IF ((lRet:=(CTB105CC(M->PY_CC) .And. FHIST())))
		CTT->(DbsetOrder(RetOrder("CTT","CTT_FILIAL+CTT_CUSTO")))
	    M->PY_DESCCC	:= Upper( AllTrim( fDesc("CTT",M->PY_CC,"CTT_DESC01",,xFilial('CTT') ) ) )
	Endif
Endif
Return (lRet)


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fProgAtual()	³ Autor ³Mauricio MR           ³ Data ³14/02/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Controla recursividade de chamada de funcao via tecla programada ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/ 
Static function fProgAtual()
Local lRet			:= .T.
Local cProcName3	:= Upper( AllTrim( ProcName( 3 ) ) )
Local cProcName5	:= Upper( AllTrim( ProcName( 5 ) ) )

lRet:=( "PN340ROT" $ ( cProcName3 + cProcName5 ) )

Return (lRet) 

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pn340VerVisitante()³ Autor ³Mauricio MR        ³ Data ³20/05/2005³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Posiciona e Exibe o Cadastro do Visitante						 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL																 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                	      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³SIGAPON     													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/                                  
Function Pn340VerVisitante(nOpc)            
Local aSPYArea	:= GetArea("SPY")
Local aSPWArea	:= GetArea("SPW")
Local aSvKeys	:= GetKeys()

Private aNewBtn:={}

PosAlias( "SPW" , SPY->PY_VISITA, SPY->PY_FILIAL, Nil, Nil, .T. )
//AxCadVis("SPW",SPW->(Recno()),2)

Pn330Rot("SPW", SPW->(Recno()), nOpc)

RestArea(aSPWArea)
RestArea(aSPYArea)  
/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura as Teclas de Atalho                				   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
RestKeys( aSvKeys, .T. )
Return( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ TmBrowse ³ Autor ³ ASV                   ³ Data ³ 16/05/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao de timer do mbrowse                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cMBrowse -> objeto mbrowse a dar refresh                   ³±±
±±³          ³ oTimer   -> objeto timer                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T.                                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function TmBrowse(oObjBrow, lMudFVis, lVerGrpUsr)
Local cIndex	:= SPY->(IndexKey())
Local cConteudo	:= &cIndex  
Local nReg		:= SPY->(Recno())

cExpFiltro:= fExpFiltro(aFilterExp,.F.,lMudFVis, lVerGrpUsr )
nOrdPesq  := SPY->(IndexOrd())

//--Cancela Filtros Anteriores  
Eval(bEndFilBrw) 

//--Executa Filtro do RH mais o Filtro Adicional da Rotina 
SPY->(DbSetOrder(nOrdPesq))
Eval(bFiltraBrw,cExpFiltro)

SET SOFTSEEK ON
SPY->(Dbseek(cConteudo))
SET SOFTSEEK OFF
If eof()
   SPY->(DbGoto(nReg))
Endif   

AtuBrw(oObjBrow)
Return .T.  

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ MenuDef		³Autor³  Luiz Gustavo     ³ Data ³30/11/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Isola opcoes de menu para que as opcoes da rotina possam    ³
³          ³ser lidas pelas bibliotecas Framework da Versao 9.12 .      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA340                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/   

Static Function MenuDef()
  Local aRotina
  
  
  aEtiqueta:=          {		{ STR0022,"fCFGEtiqueta", 0 , 3}   ,; //"Cfg.Cracha"
								{ STR0023,"fEmissao"    , 0 , 2}   ;  //"Emissao"
					   }		
	


  aRotina :=         {  		{ STR0004,"Pn340PesqBrw", 0 , 1, ,.F.}	,; 	//"Pesquisar"
								{ STR0005,"Pn340Rot"	, 0 , 2}	,; 	//"Visualizar"
								{ STR0006,"Pn340Rot" 	, 0 , 3}	,; 	//"Incluir"
								{ STR0007,"Pn340Rot"	, 0 , 4}	,; 	//"Alterar"
								{ STR0008,"Pn340Rot"	, 0 , 5}	,; 	//"Excluir" 
								{ STR0015,"Pn340Rot"	, 0 , 4}	,; 	//"Entrada"
								{ STR0016,"Pn340Rot"	, 0 , 4}	,; 	//"Saida"
								{ STR0017,"Pn340Filtro"	, 0 , 3}	,; 	//"Filtro"
								{ STR0023, aEtiqueta    , 0 , 1, ,.F.}   ,;  //"Emissao"
								{ STR0012,"Pn340Leg"	, 0 , 2, ,.F.}    ;   //"Legenda"
								}	
								
  Return aRotina            

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AtuBrw    ºAutor  ³Luis Artuso         º Data ³  11/02/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AtuBrw(oObjBrow)

oObjBrow:ResetLen()
oObjBrow:Default()
oObjBrow:Refresh()

Return .T.


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fValidGet ºAutor  ³Luis Artuso         º Data ³  24/06/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fValidGet(nOpc,lGetDados,nOpcAlt)

Local lRet	:=	.T.
oDlg		:= oDlgBkp
nOpcAlt		:= 0

IF(	( ( nOpc == 3 ) .or. ( nOpc == 4 ) .or. ( nOpc == 6 ) .or. ( nOpc == 7 ) ) )
	
	If ( l340Block )
		lRet	:= ExecBlock("PN340VALID" , .F. , .F.)
	EndIf
	
	If ( lRet )
	
		RstEnchoVlds()
		
		If ( Obrigatorio( oEnchoice:aGets , oEnchoice:aTela ) )//Verifica os Campos Obrigatoris na Enchoice )
			If ( EnchoTudOk( oEnchoice ) )
				If ( PN340EncTOk(Nil, Nil, oEnchoice) )
					If( lGetDados )
						If !( oGetDados:TudoOk() )//Valida as Informacoes da GetDados
							lRet	:=	.F.
						EndIf
					EndIf
				Else
					lRet	:=	.F.
				EndIf
			Else
				lRet	:=	.F.
			EndIf
		Else
			lRet	:=	.F.
		EndIf
		
		If ( lRet )
			nOpcAlt := 1
			oDlg:End()
		EndIf
		
	EndIf

Else
	nOpcAlt := IF( nOpc == 2 , 0 , 1 ) 	//Visualizacao ou Exclusao
	oDlg:End()
EndIf

Return lRet
