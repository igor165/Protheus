#INCLUDE "PROTHEUS.CH"
#INCLUDE "GPEA810.CH"
#INCLUDE "FWMVCDEF.CH"

Static aSRACpos

Static cNewMat
Static cCpyCad

Static nRntOpc
Static nOldOpc
Static nTamMat

Static lOpcReint

Static dReinteg
Static dEstab

Static ocNewMat
Static ocCpyCad

Static cNroProc
Static oNroProc
Static cNroLeiAn
Static oNroLeiAn
Static dDtEfRein
Static oDtEfRein
Static dDtEfRet
Static oDtEfRet
Static cTpRei

Static cEFDAviso
Static lIntegDef 	:= FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI")
Static lEFDMsg		:= SuperGetMv("MV_EFDMSG",,.F.)
//Integração com o TAF
Static lIntTaf 		:= ((SuperGetMv("MV_RHTAF",, .F.) == .T.) .AND. Val(SuperGetMv("MV_FASESOC",/*lHelp*/,' ')) >= 1 )
Static cVersEnvio	:= ""
Static lMiddleware:= If( cPaisLoc == 'BRA' .AND. Findfunction("fVerMW"), fVerMW(), .F. )
Static cVerTaf		:= StrTran( StrTran(SuperGetMv("MV_TAFVLES",, "2.4"),"_",".") ,"0", "", 1, 2)
Static cVersGPE		:= ""

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡…o    ³ GPEA810    ³Autor  ³Jonatas A. T. Alves    ³ Data ³ 29/10/2008     º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±ºDescri‡…o ³ Reintegracao de funcionarios                                       º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±ºSintaxe   ³ GPEA810()                                                          º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±ºUso       ³ Generico                                                           º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±º         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                     º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±ºProgramador ³ Data     ³ FNC / Chamado  ³ Motivo da Alteracao                  º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±ºCarlos E. O.³13/05/2013³M12RH01\RQ3401  ³Conversao para MVC.                   º±±
±±ºLeandro D.  ³06/05/2013³TPLAE9		   ³Compatibilizacao de fontes.           º±±
±±ºFlavio S.   ³15/05/2014³TPMKRY		   ³Replicas V11 para V12.                º±±
±±ºRaquel Hager³11/07/2014³TPZVT4		   ³Replicas V11 para V12 - eSocial.      º±±
±±³Flavio Corr ³19/03/15  ³PCREQ-4163      ³Integração Mensagem Unica             ³±±
±±³Renan Borges³27/03/2015³TRUGON          ³Ajuste no filtro para impedir multi-  º±±
±±³            ³          ³                ³plas reintegraçao do mesmo funcionárioº±±
±±³Marcia Moura³09/06/2065³TVBYKB          ³Correcoes do eSocial                  º±±
±±³Raquel Hager³24/08/2016³TVTOQD          ³Remoção do uso do parâmetro MV_INTTAF ³±±
±±³            ³          ³                 ³para release 12.1.7.				  ³±±
±±³Renan Borges³29/11/2016³#157482         ³Ajuste para ao realizar a reintegração³±±
±±³            ³          ³                ³retroativa a admissão seja reativados ³±±
±±³            ³          ³                ³os períodos de férias pag na rescisão.³±±
±±³Marcelo F.  ³30/01/2017³MRH-5287        ³Liberação do ponto de entrada GP810GRV³±±
±±³            ³          ³                ³após a confirmação da reintegração    ³±±
±±³Gabriel A.  ³15/03/2017³MRH-7988        ³Ajuste na reintegração para base      ³±±
±±³            ³          ³                ³ORACLE.                               ³±±
±±³            ³          ³                ³para release 12.1.7.				  ³±±
±±³Marcos Cout.³19/05/2017³DRHESOCP-278    ³Inclusao para a integracao TAF,       ³±±
±±³            ³          ³                ³leiaute 2.2.1 - Evento S-2298         ³±±
±±³Marcia Moura³12/06/2017³DRHESOCP-397    ³Alteracoes para que o evento s-2298   º±±
±±³            ³          ³                ³seja gerado mesmo quando o evento de  º±±
±±³            ³          ³                ³desligamento e admissão ainda nao tenhaº±±
±±³            ³          ³                ³sido integrado com  o TAF             º±±
±±³Renan Borges³20/09/2017³DRHESOCP-1247   ³Ajuste para ao realizar a Reintegração³±±
±±³            ³          ³                ³ o sistema gere o evento S-2298 reinte³±±
±±³            ³          ³                ³gração de funcionários.               ³±±
±±³Jaqueline L.³21/12/2017³DRHPAG-10348    ³Ajuste para verificar a compatibilidad³±±
±±³            ³          ³                ³e de todos os bancos.                 ³±±
±±³Marcos Cout.³26/12/2017³DRHPAG-10444    ³Realizando ajustes para gerar a reinte³±±
±±³            ³          ³                ³gração mesmo com o parâmetro MV_RHTAF ³±±
±±³            ³          ³                ³desativado.                           ³±±
±±³Cecília Carv³08/01/2018³DRHESOCP-2682   ³Ajuste para geração de contrato inter-³±±
±±³            ³          ³                ³mitente - evento S-2200.              ³±±
±±³Tiago Bert. ³15/02/2018³MPRIMESP-13773  ³Ajuste realizado do erro causado pela ³±±
±±³            ³          ³                ³não utilização de FloatingPointPrecise³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPEA810()

	Local aArea			:= GetArea()
	Local aAreaSRA		:= SRA->( GetArea() )
	Local oBrwSRA
	Local cFiltraRh 	:= ""
	Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), { .T., .F., {"",""} }) //[1]Acesso; [2]Ofusca; [3]Mensagem
	Local aFldRel		:= {"RA_NOME", "RA_RACACOR"}
	Local lBlqAcesso	:= aOfusca[2] .And. !Empty( FwProtectedDataUtil():UsrNoAccessFieldsInList( aFldRel ) )
	Private aRotina := MenuDef() // ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina
	Private aIndexSRA	:= {}

	Private cCadastro := OemToAnsi( STR0001 ) // "Reintegração de Funcionários"

	// Informa usuário sobre compartilhamento indevido na SRA
	If fR33SRA()
		Return
	EndIf

	Iif( FindFunction("fVersEsoc"), fVersEsoc( "S2200", .F., /*aRetGPE*/, /*aRetTAF*/, @cVersEnvio, @cVersGPE ), .T.)
	
	If FindFunction("ESocMsgVer") .And. lIntTaf
		If !lMiddleware .And. cVersGPE <> cVersEnvio .And. (cVersGPE >= "9.0" .Or. cVersEnvio >= "9.0")
			//"Atenção! A versão do leiaute GPE é xxx e a do TAF é xxx, sendo assim, estão divergentes. O Evento xxx não será integrado com o TAF, e consequentemente, não será enviado ao RET.
			//Caso prossiga a informação será atualizada somente na base do GPE. Deseja continuar?"
			If ESocMsgVer(.F.,/*cEvento*/, cVersGPE, cVersEnvio)
				lIntTaf := .F.
			Else
				Return
			EndIf
		EndIf
	EndIf
	
	cEFDAviso  			:= If(cPaisLoc == 'BRA' .AND. Findfunction("fEFDAviso"), fEFDAviso(), "0")			//Se nao encontrar este parametro apenas emitira alertas
	
	If lMiddleware .And. !ChkFile("RJE")
		Help( " ", 1, OemToAnsi(STR0029),, OemToAnsi(STR0081), 1, 0 )//Atencao //"Tabela RJE não encontrada. Execute o UPDDISTR - atualizador de dicionário e base de dados."
		Return
	EndIf

	//Tratamento de acesso a Dados Sensíveis
	If lBlqAcesso
		//"Dados Protegidos- Acesso Restrito: Este usuário não possui permissão de acesso aos dados dessa rotina. Saiba mais em {link documentação centralizadora}"
		Help(" ",1,aOfusca[3,1],,aOfusca[3,2],1,0)
		Return
	EndIf

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o filtro do Browse												   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/
	cFiltraRh := CHKRH("GPEA810","SRA","1")

	If !Empty(cFiltraRh)
		cFiltraRh	+= ' .and. '
	Endif

	cFiltraRh	+= '!Empty(RA_DEMISSA) .and. RA_SITFOLH == "D" .and. RA_CATFUNC <> "A" .and. !(RA_RESCRAI $ "30/31") .AND. (Empty(RA_FECREI) .OR. RA_TIPOADM == "4B")'
	//cFiltraRh	+= IF(!Empty(cFiltraRh),'.and. !Empty(RA_DEMISSA) .and. RA_SITFOLH == "D" .and. RA_CATFUNC <> "A" .and. !(RA_RESCRAI $ "30/31")','!Empty(RA_DEMISSA) .and. RA_SITFOLH == "D" .and. RA_CATFUNC <> "A" .and. !(RA_RESCRAI $ "30/31")')

	If ! IsBlind()
		oBrwSRA := FWmBrowse():New()
		oBrwSRA:SetAlias( 'SRA' )
		oBrwSRA:SetDescription(cCadastro)
		GpLegend(@oBrwSRA,.T.)

		//Filtro padrao do Browse
		oBrwSRA:SetFilterDefault(cFiltraRh)
		oBrwSRA:Activate()
	Else
		GPEA810Inc()
	EndIf
	RestArea( aAreaSRA )
	RestArea( aArea )

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MenuDef     ³ Autor ³ Carlos Eduardo O.     ³ Data ³ 08/05/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Menu Funcional                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MenuDef()                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function MenuDef()

	Local aRotina := {}

	ADD OPTION aRotina Title STR0026 Action 'PesqBrw'		OPERATION 1 ACCESS 0 //"Pesquisar"
	ADD OPTION aRotina Title STR0027 Action 'GPEA810Inc'	OPERATION 4 ACCESS 0 //"Reintegrar"
	ADD OPTION aRotina Title STR0028 Action 'GpLegend'	OPERATION 6 ACCESS 0 //"Legenda"

Return aRotina

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³GPEA810Inc    ³Autor³ Jonatas A. T. Alves ³ Data ³30/10/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Rotina de Reintegraaco de Funcionarios                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³GPEA810Inc()                                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA810                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Nil                                                         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Nil                                                         ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*/
Function GPEA810Inc()

	Local aSvKeys		:= GetKeys()
	Local aOpcCad		:= {}
	Local aSftLck		:= {}
	Local bSet15   := { || If( GpVldTpRein() .And. fReintOk() .and. Gp810ValPE(), ( nOpcA := 1 , oDlg:End() ), ) }
    Local bSet24    := { ||  nOpcA := 2 , oDlg:End() }
	Local nOpcA 		:= 0

	Local oFont1,oFont2
	Local oDlg
	Local oRadio
	Local oGroup

	Local aAdvSize		:= {}
	Local aInfoAdvSize	:= {}
	Local aObjCoords 	:= {}
	Local aObjSize		:= {}

	Local aAdv1Size		:= {}
	Local aInfo1AdvSize	:= {}
	Local aObj1Size		:= {}
	Local aObj1Coords	:= {}

	Local aAdv3Size	:= {}
	Local aInfo3AdvSize	:= {}
	Local aObj3Size		:= {}
	Local aObj3Coords	:= {}

	Local aAdv3lSize		:= {}
	Local aInfo3lAdvSize	:= {}
	Local aObj3lSize		:= {}
	Local aObj3lCoords		:= {}

	Local aAdv5Size		:= {}
	Local aInfo5AdvSize	:= {}
	Local aObj5Size		:= {}
	Local aObj5Coords	:= {}

	Local nTamTela		:= 0
	Local aNroLei 		:= fGetLeiAn(Nil)
	Local aTpRei		:= {}
	Local aInfoTaf		:= {}
	Local cTrabVincu 	:= fCatTrabEFD("TCV") //"101|102|103|104|105|106|111|301|302|303|304|306|307|309" //Trabalhador com vinculo
	Local aErros		:= {}
	Local cCpf			:= ""
	Local lReinEFD		:= .T.
	local aTitle		:= {}
	local cCpf1			:= ""
	Local lRet			:= .T.
    Local dDcgIni		:=  SuperGetMV("MV_DTCGINI",nil,CTOD(" / / ") )

	Local aInfoC	 := {}
	Local cChaveMid	 := ""
	Local cStatMid   := ""
	Local lAdmPubl	:= .F.
	Local cBkpFil		:= cFilAnt
	Local cNrInsc		:= ""
	Local cTpInsc		:= ""

	Private aTpAlt		:= {.F.,.F.,.F.}
	Private cStatus		:= ""
	Private lEnd810GRV	:= .T.
	Private lS2200		:= .F.
	Private c810CodUnic := ""


	// Inicializa statics
	Rst810Stc()

	// Reserva registros das tabelas SRA, SRF e SRG
	dbSelectArea("SRA")
	If !SoftLock("SRA")
		Return( NIL )
	EndIf

	aAdd( aSftLck, { "SRA", Recno() } )

		If cVersGPE >= "9.0.00"
			aTpRei := {	OemToAnsi(STR0033),;
							OemToAnsi(STR0034),;
							OemToAnsi(STR0066),;
							OemToAnsi(STR0067),;
							OemToAnsi(STR0068),;
							OemToAnsi(STR0035)}
		Else
			aTpRei := {	OemToAnsi(STR0033),;
							OemToAnsi(STR0034),;
							OemToAnsi(STR0066),;
							OemToAnsi(STR0067),;
							OemToAnsi(STR0068),;
							OemToAnsi(STR0035),;
							OemToAnsi(STR0069),;
							OemToAnsi(STR0070),;
							OemToAnsi(STR0071),;
							OemToAnsi(STR0072),;
							OemToAnsi(STR0073),;
							OemToAnsi(STR0074)}
		EndIf


	dbSelectArea( "SRF" )
	dbSetOrder(1)
	If dbSeek( SRA->RA_FILIAL + SRA->RA_MAT )

		If !SoftLock("SRF")
			Return( NIL )
		EndIf

		aAdd( aSftLck, { "SRF", Recno() } )
		dOldBsFer	:= SRF->RF_DATABAS
	Else
		Help(" ",1,"GPEM30PER")	//Funcionário não tem período de férias no cadastro de Programação de Férias.
		Return( NIL )
	EndIf

	dbSelectArea( "SRG" )
	dbSetOrder(1)
	If dbSeek( SRA->RA_FILIAL + SRA->RA_MAT )

		If !SoftLock("SRG")
			Return( NIL )
		EndIf

		aAdd( aSftLck, { "SRG", Recno() } )
	Else
		Help(" ",1,"GPSEMRES")	//Funcionário não possui rescisão calculada.
		Return( NIL )
	EndIf

    //Verifica se Taf integra com TAF
    If (lIntTaf .Or. lMiddleware)  .AND. SRA->RA_CATEFD $ cTrabVincu
        cCPF := AllTrim(SRA->RA_CIC) + ";" + ALLTRIM(SRA->RA_CODUNIC)+";"+DTOS(SRA->RA_DEMISSA)

       If cVersEnvio < "2.2"
            Aviso(OemToAnsi(STR0029), OemToAnsi(STR0059)+" "+ OemToAnsi(STR0060)+" "+ OemToAnsi(STR0061)) //##"Ambiente TAF desatualizado."##"Assim esta rotina não poderá ser utilizada."##"Entre em contato com o Administrador do Sistema."##"Atencao"
            Return(.F.)
        Endif

        cCPF1 := AllTrim(SRA->RA_CIC) + ";" + ALLTRIM(SRA->RA_CODUNIC)

        If !lMiddleware
        	cStatus := TAFGetStat( "S-2200", cCPF1)
        Else
			cStatus := "-1"
			fPosFil( cEmpAnt, SRA->RA_FILIAL )
			aInfoC   := fXMLInfos()
			If LEN(aInfoC) >= 4
				cTpInsc  := aInfoC[1]
				lAdmPubl := aInfoC[4]
				cNrInsc  := aInfoC[2]
			Else
				cTpInsc  := ""
				lAdmPubl := .F.
				cNrInsc  := "0"
			EndIf
			cChaveMid	:= cTpInsc + PADR( Iif( !lAdmPubl .And. cTpInsc == "1", SubStr(cNrInsc, 1, 8), cNrInsc), 14) + "S2200" + Padr(SRA->RA_CODUNIC, 40, " ")
			cStatus 	:= "-1"
			//RJE_TPINSC+RJE_INSCR+RJE_EVENTO+RJE_KEY+RJE_INI
			GetInfRJE( 2, cChaveMid, @cStatus )
        Endif

        fStatusTAF(@aTpAlt,cStatus,'-1')

        If !lMiddleware
	        If !aTpAlt[3] .Or. cStatus == "0"
	            MsgStop(OemToAnsi(STR0079)) //"O evento S2200/S2100 nao foi integrado no TAF, o evento s2298 nao podera ser integrado) não foi efetivado no RET, portanto a reintegração não poderá ser integrada com o TAF. Deseja, ainda assim, afetivar a operação no SIGAGPE?"
	            Return(.F.)
	        EndIf
        Else
	        If !aTpAlt[3] .Or. cStatus <> "4"
	            MsgStop(OemToAnsi(STR0082)) //"O Evento de Admissão S-2100 / S-2200 nao foi integrado ao Middleware, não será possível integrar o evento S-2298, sendo assim, o reintegração não será efetivada"
	            Return(.F.)
	        EndIf
        Endif
    EndIf
	dbSelectArea("SRA")

	If !( SRA->( FieldPos( "RA_FECREI" ) # 0 ) .And. SRA->( FieldPos( "RA_DEMIANT" ) # 0 ) )
		MsgStop( OemToAnsi( STR0002 ), OemToAnsi( STR0029 ) ) // "É necessário criar os campos RA_FECREI e RA_DEMIANT para efetuar reintegrações." # "Atenção"
		Return
	EndIf

	nOldOpc		:= nRntOpc

	aOpcCad := { STR0003, STR0004, STR0005, STR0006 } // "1=Dependentes" # "2=Beneficiários" # "3=Ambos" # "4=Nenhum"

	If ! IsBlind()
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta as Dimensoes dos Objetos         					       ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

		nTamTela:= 600 //eSocial Fase 1
		aAdvSize	:= MsAdvSize(,.T.,nTamTela)
		aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 10 , 10}
		aAdd( aObjCoords , { 000 , 001 , .T. , .F. } )	//1-Espaco
		aAdd( aObjCoords , { 000 , 025 , .T. , .F. } )	//2-Cabecalho
		aAdd( aObjCoords , { 000 , 001 , .T. , .F. } )	//3-Espaco
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )	//4-Reintegracao
		aAdd( aObjCoords , { 000 , 001 , .T. , .F. } )	//5-Espaco
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )	//6-eSocial
		aAdd( aObjCoords , { 000 , 003 , .T. , .F. } )	//7-Espaco

		aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

		//2-Cabecalho - em colunas
		aAdv1Size		:= aClone(aObjSize[2])
		aInfo1AdvSize	:= { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 4 , 2 }
		aAdd( aObj1Coords , { 045 , 000 , .F. , .T. } )		//1-Filial
		aAdd( aObj1Coords , { 045 , 000 , .F. , .T. } )		//2-Matricula
		aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )		//3-Nome
		aAdd( aObj1Coords , { 045 , 000 , .F. , .T. } )		//4-Admissao
		aAdd( aObj1Coords , { 045 , 000 , .F. , .T. } )		//5-Demissao
		aObj1Size		:= MsObjSize( aInfo1AdvSize , aObj1Coords,,.T. )

		//4-Reintegracao - que sera reaproveitado no eSocial
		aAdv3Size		:= aClone(aObjSize[4])
		aInfo3AdvSize	:= { aAdv3Size[2] , aAdv3Size[1] , aAdv3Size[4] , aAdv3Size[3] , 1 , 2 }
		aAdd( aObj3Coords , { 015 , 000 , .F. , .T. } )		//1-Espaco
		aAdd( aObj3Coords , { 055 , 000 , .F. , .T. } )		//2-Col1
		aAdd( aObj3Coords , { 005 , 000 , .F. , .T. } )		//3-Espaco1
		aAdd( aObj3Coords , { 045 , 000 , .F. , .T. } )		//4-Col2
		aAdd( aObj3Coords , { 015 , 000 , .F. , .T. } )		//5-Espaco2
		aAdd( aObj3Coords , { 055 , 000 , .F. , .T. } )		//6-Col3
		aAdd( aObj3Coords , { 005 , 000 , .F. , .T. } )		//7-Espaco3
		aAdd( aObj3Coords , { 045 , 000 , .F. , .T. } )		//8-Col4
		aObj3Size		:= MsObjSize( aInfo3AdvSize , aObj3Coords,,.T. )

		//3-Reintegracao -Linhas
		aAdv3lSize		:= aClone(aObjSize[4])
		aInfo3lAdvSize	:= { aAdv3lSize[2] , aAdv3lSize[1] , aAdv3lSize[4] , aAdv3lSize[3] , 05 , 05 }
		aAdd( aObj3lCoords , { 000 , 000 , .T. , .T. } )		//1-Linha1
		aAdd( aObj3lCoords , { 000 , 000 , .T. , .T. } )		//2-Linha2
		aAdd( aObj3lCoords , { 000 , 000 , .T. , .T. } )		//3-Linha3
		aAdd( aObj3lCoords , { 000 , 000 , .T. , .T. } )		//4-Linha4
		aObj3lSize		:= MsObjSize( aInfo3lAdvSize , aObj3lCoords )


		//5-eSocial -Linhas
		aAdv5Size		:= aClone(aObjSize[6])
		aInfo5AdvSize	:= { aAdv5Size[2] , aAdv5Size[1] , aAdv5Size[4] , aAdv5Size[3] , 05 , 05 }
		aAdd( aObj5Coords , { 000 , 000 , .T. , .T. } )		//1-Linha1
		aAdd( aObj5Coords , { 000 , 000 , .T. , .T. } )		//2-Linha2
		aAdd( aObj5Coords , { 000 , 000 , .T. , .T. } )		//3-Linha3
		aAdd( aObj5Coords , { 000 , 000 , .T. , .T. } )		//4-Linha4
		aObj5Size		:= MsObjSize( aInfo5AdvSize , aObj5Coords )


		DEFINE FONT oFont1 NAME "Arial" SIZE 0,-11 BOLD
		DEFINE FONT oFont2 NAME "Arial" SIZE 0,-11

		DEFINE MSDIALOG oDlg FROM  aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] TITLE OemToAnsi( STR0001 ) PIXEL // "Reintegração de funcionários"

			nPosGroup:= 7

			@ aObjSize[1,1] , aObjSize[1,2]	GROUP oGroup TO aObjSize[nPosGroup,3],aObjSize[nPosGroup,4]  LABEL OemToAnsi( STR0007 ) OF oDlg PIXEL	// "Informações para realização da reintegração:"
			oGroup:oFont:=oFont1

			@ aObj1Size[1,1], aObj1Size[1,2] 	GROUP oGroup TO aObj1Size[1,3], aObj1Size[1,4] LABEL OemToAnsi( STR0008 )	OF oDlg PIXEL COLOR CLR_BLUE	// "Filial:"
			oGroup:oFont:= oFont1
			@ aObj1Size[2,1], aObj1Size[2,2]	GROUP oGroup TO aObj1Size[2,3], aObj1Size[2,4] LABEL OemToAnsi( STR0009 )	OF oDlg PIXEL COLOR CLR_BLUE	// "Matrícula:"
			oGroup:oFont:= oFont1
			@ aObj1Size[3,1], aObj1Size[3,2]	GROUP oGroup TO aObj1Size[3,3], aObj1Size[3,4] LABEL OemToAnsi( STR0010 )	OF oDlg PIXEL COLOR CLR_BLUE	// "Nome:"
			oGroup:oFont:= oFont1
			@ aObj1Size[4,1], aObj1Size[4,2]	GROUP oGroup TO aObj1Size[4,3], aObj1Size[4,4] LABEL OemToAnsi( STR0011 ) 	OF oDlg PIXEL COLOR CLR_BLUE	// "Admissão:"
			oGroup:oFont:= oFont1
			@ aObj1Size[5,1], aObj1Size[5,2]	GROUP oGroup TO aObj1Size[5,3], aObj1Size[5,4] LABEL OemToAnsi( STR0012 ) 	OF oDlg PIXEL COLOR CLR_BLUE	// "Demissão:"
			oGroup:oFont:= oFont1

			@ aObj1Size[1,1]+10, aObj1Size[1,2]+5	SAY OemToAnsi(SRA->RA_FILIAL)						SIZE 026,008 OF oDlg PIXEL FONT oFont1 COLOR CLR_BLUE
			@ aObj1Size[2,1]+10, aObj1Size[2,2]+5	SAY StrZero(Val(SRA->RA_MAT),Len(SRA->RA_MAT))	SIZE 036,008 OF oDlg PIXEL FONT oFont1 COLOR CLR_BLUE
			@ aObj1Size[3,1]+10, aObj1Size[3,2]+5	SAY SUBSTR(OemToAnsi(SRA->RA_NOME),1,22)			SIZE 100,008 OF oDlg PIXEL FONT oFont1 COLOR CLR_BLUE
			@ aObj1Size[4,1]+10, aObj1Size[4,2]+5	SAY Dtoc(SRA->RA_ADMISSA)							SIZE 048,008 OF oDlg PIXEL FONT oFont1 COLOR CLR_BLUE
			@ aObj1Size[5,1]+10, aObj1Size[5,2]+5	SAY Dtoc(SRA->RA_DEMISSA)							SIZE 048,008 OF oDlg PIXEL FONT oFont1 COLOR CLR_BLUE

			//-Linha 1
			@ aObj3lSize[1,1], aObj3Size[2,2] SAY OemToAnsi( STR0013 )	SIZE 146,20	 OF oDlg PIXEL FONT oFont2 // "Tipo de Reintegração:"
			@ aObj3lSize[1,1], aObj3Size[4,2] RADIO oRadio VAR nRntOpc ITEMS	OemToAnsi( STR0014 ) ,;	// "Retroativa à admissão"
														OemToAnsi( STR0015 );	// "A partir da data da decisão judicial"
						                                PIXEL SIZE 115,10 OF oDlg ON CHANGE ( fOpcReint() )

			//-Linha 2
			@ aObj3lSize[2,1], aObj3Size[2,2] SAY OemToAnsi( STR0016 )			SIZE 146,10 OF oDlg PIXEL FONT oFont2 // "Data Reintegração:"
			@ aObj3lSize[2,1], aObj3Size[4,2] MSGET odReinteg VAR dReinteg 	  	SIZE 050,10 OF oDlg PIXEL PICTURE "@D" VALID (GpVldRein()) HASBUTTON

			@ aObj3lSize[2,1], aObj3Size[6,2] SAY OemToAnsi( STR0017 )			SIZE 146,10 OF oDlg PIXEL FONT oFont2 // "Data Estabilidade:"
			@ aObj3lSize[2,1], aObj3Size[8,2] MSGET odEstab 	VAR dEstab		SIZE 050,10 OF oDlg PIXEL PICTURE "@D" HASBUTTON

			//-Linha 3
			@ aObj3lSize[3,1], aObj3Size[2,2] SAY OemToAnsi( STR0019 )			SIZE 146,10 OF oDlg PIXEL FONT oFont2 // "Nova Matrícula:"
			@ aObj3lSize[3,1], aObj3Size[4,2] MSGET ocNewMat	VAR cNewMat 	SIZE 040,10 OF oDlg PIXEL PICTURE PesqPict("SRA","RA_MAT") ;
														VALID Val(cNewMat) > 0 .And. ExistChav("SRA",cNewMat) .And. FreeForUse("SRA",cNewMat) HASBUTTON

			@ aObj3lSize[3,1], aObj3Size[6,2] SAY OemToAnsi( STR0020 )		SIZE 146,20 OF oDlg PIXEL FONT oFont2 // "Replicar Cadastros:"
			@ aObj3lSize[3,1], aObj3Size[8,2] MSCOMBOBOX ocCpyCad VAR cCpyCad ITEMS aOpcCad 	SIZE 050,10 OF oDlg PIXEL

			@ aObj3lSize[4,1], aObj3Size[2,2] SAY OemToAnsi( STR0080 ) 	SIZE 230,50 OF oDlg PIXEL FONT oFont2
			// "Na reintegração por decisão judicial será mantida a matrícula (código único) que foi informada anteriormente ao eSocial no cadastro inicial do funcionário, ou seja, o Código Único (RA_CODUNIC) se manterá no novo registro."

			@ aObj5Size[1,1]-15 , aObj5Size[1,2]	GROUP oGroup TO aObj5Size[4,3]+15 , aObj5Size[4,4] LABEL OemToAnsi( STR0058 ) OF oDlg PIXEL //eSocial
			oGroup:oFont:=oFont1

			@ aObj5Size[1,1], aObj3Size[2,2] SAY OemToAnsi( STR0036 )	SIZE 146,10 OF oDlg PIXEL FONT oFont2  // "Reintegração:"
			@ aObj5Size[1,1], aObj3Size[4,2] MSCOMBOBOX oTp VAR cTpRei ITEMS aTpRei SIZE 120,10 OF oDlg PIXEL

			@ aObj5Size[2,1], aObj3Size[2,2] SAY OemToAnsi( STR0037 )	SIZE 146,10 OF oDlg PIXEL FONT oFont2 // "Nro. do Processo:"
			@ aObj5Size[2,1], aObj3Size[4,2] MSGET oNroProc VAR cNroProc WHEN cTpRei=='1' .or. cTpRei=='1A' SIZE 100,10 OF oDlg PIXEL

			@ aObj5Size[3,1], aObj3Size[2,2] SAY OemToAnsi( STR0038 )	SIZE 146,10 OF oDlg PIXEL FONT oFont2 // "Nro. Lei Anistia:"
			@ aObj5Size[3,1], aObj3Size[4,2] MSGET oNroLeiAn VAR cNroLeiAn  WHEN cTpRei=='2' .or. cTpRei=='2A' SIZE 85,10 OF oDlg PIXEL

			@ aObj5Size[4,1], aObj3Size[2,2] 	SAY OemToAnsi( STR0040 )		SIZE 146,10 OF oDlg PIXEL FONT oFont2 // "Dt.Efeito"
			@ aObj5Size[4,1], aObj3Size[4,2] 	MSGET oDtEfRet 	VAR dDtEfRet 	SIZE 050,10 OF oDlg PIXEL PICTURE "@D" VALID (fGpEfReiVld())  HASBUTTON
			@ aObj5Size[4,1], aObj3Size[6,2] 	SAY OemToAnsi( STR0039 )  		SIZE 146,10 OF oDlg PIXEL FONT oFont2 // "Dt. Efeito Retorno"
			@ aObj5Size[4,1], aObj3Size[8,2] 	MSGET oDtEfRein VAR dDtEfRein	SIZE 050,10 OF oDlg PIXEL PICTURE "@D" VALID (fGpEfRetVld()) HASBUTTON

			If lOpcReint
				Eval( { || ocNewMat:Disable(), ocCpyCad:Disable() } )
			Else
				Eval( { || ocNewMat:Enable(), ocCpyCad:Enable() } )
			EndIf


			bSvSet24 := SetKey( 24 , bSet24 )

			oDlg:lEscClose := .F. //Nao permite sair ao pressionar a tecla ESC.

		ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 )
		RestKeys( aSvKeys , .T. )
	Else
		If FindFunction("GetParAuto")

			aRetAuto	:= GetParAuto("GPEA810TestCase")

			nRntOpc 	:= aRetAuto[1]	//-- Tipo de reintegração
			dReinteg 	:= aRetAuto[2]	//-- Data da reintegração
			dEstab 		:= aRetAuto[3]	//-- Data da estabilidade
			cNewMat		:= aRetAuto[4]	//-- Nova matricula
			cCpyCad		:= aRetAuto[5]	//-- Replicar cadastros

			//-- e-social

			cTpRei 		:= aRetAuto[6]	// Reintegração
			cNroProc	:= aRetAuto[7]	// Número do processo
			cNroLeiAn 	:= aRetAuto[8]	// Número da lei de anistia
			dDtEfRet	:= aRetAuto[9]	// Data efeito
			dDtEfRein	:= aRetAuto[10]	// Data efetivva do retorno

			nOpcA := 1

		EndIf
	EndIf

	If nOpcA == 1
	    c810CodUnic:= ALLTRIM(SRA->RA_CODUNIC)
		If (lIntTaf .Or. lMiddleware)  .AND. SRA->RA_CATEFD $ cTrabVincu .And. !lS2200
			//Carrega informacoes para Taf
			aInfoTaf := {SRA->RA_FILIAL,;
							SRA->RA_MAT,;
							SRA->RA_CIC,;
							cTpRei,;
							cNroProc,;
							cNroLeiAn,;
							dDtEfRet,;
							dDtEfRein}
			If( lReinEFD ) .And. lRet
				// Inclui novo funcionario ou altera funcionario corrente
				MsAguarde( { |lEnd| GPEA810Grv( SRA->RA_FILIAL, SRA->RA_MAT, SRA->RA_DEMISSA ) }, , OemToAnsi( STR0021 ) ) // "Processando reintegração..."
			EndIf

            If lEnd810GRV .And. lRet
                //Integracao com o TAF
                lReinEFD := fInt2298(aInfoTaf, @aErros,"S2298")

                If !lMiddleware
	                If ( !lReinEFD ) .And. MsgYesNo(OemToAnsi( STR0076 )) //Visualizar o Log?
	                    fMakeLog({aErros}, aTitle, Nil, Nil, , OemToAnsi( STR0077 ) , "M", "P",, .F.) //"Log de Ocorrencias - TAF"
	                    MsgStop(OemToAnsi(STR0078)) //O Desligamento não será efetivado no TAF. Deseja, ainda assim, efetivar a rescisão no SIGAGPE?
	                    lRet:= .F.
	                Else
	                    //Verifica se exibe ou não mensagem de integração - MV_EFDMSG
	                    fEFDMsg()
	                EndIf
	            Else
	                If ( !lReinEFD ) .And. MsgYesNo(OemToAnsi( STR0083 )) //"Houveram inconsistências na integração com o Middleware. Deseja visualizar o Log de ocorrências?"
	                    fMakeLog({aErros}, aTitle, Nil, Nil, , OemToAnsi( STR0077 ) , "M", "P",, .F.) //"Log de Ocorrencias
	                    MsgStop(OemToAnsi(STR0084)) //"Não foi possivel gravar o evento S-2298 - Reintegração no Middleware, desta forma a reintegração não será efetivada."
	                    lRet:= .F.
	                Else
	                    //Verifica se exibe ou não mensagem de integração - MV_EFDMSG
	                    fEFDMsg()
	                EndIf
	           Endif
	        Endif
		Else
        // Inclui novo funcionario ou altera funcionario corrente
			If !IsBlind()
				MsAguarde( { |lEnd| GPEA810Grv( SRA->RA_FILIAL, SRA->RA_MAT, SRA->RA_DEMISSA ) }, , OemToAnsi( STR0021 ) ) // "Processando reintegração..."
			Else
				GPEA810Grv( SRA->RA_FILIAL, SRA->RA_MAT, SRA->RA_DEMISSA )
			Endif
        EndIF

	EndIf

	// Destrava registros reservados
	aEval( aSftLck, { |x| If( IsLocked( x[1], x[2] ), Eval( { |y| ( y[1] )->( dbGoTo( y[2] ) ), ( y[1] )->( MsUnlock() ) }, x ) , ) } )

Return

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ fOpcReint		³Autor³  Jonatas A. T. A. ³ Data ³29/10/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Atualiza objetos de acordo com opcao de reintegracao de     ³
³          ³funcionarios selecionada.                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA810                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³Nil                                                         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Nil                                                         ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
STATIC Function fOpcReint()

	lOpcReint	:= ( nRntOpc == 1 )

	If lOpcReint
		ocNewMat:Disable()
		cNewMat		:= Space( nTamMat )
		ocCpyCad:Disable()
		cCpyCad		:= "4"
	Else
		ocNewMat:Enable()
		ocCpyCad:Enable()
	EndIf

	ocNewMat:Refresh()
	ocCpyCad:Refresh()

	nOldOpc := nRntOpc

Return

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ fReintOk		³Autor³  Jonatas A. T. A. ³ Data ³29/10/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Verifica preenchimento das informacoes necessarias para     ³
³          ³prosseguimento da reintegracao.                             ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA810                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³Nil                                                         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >                                 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
STATIC Function fReintOk()

	Local lReintOk	:= .T.

	If lOpcReint
		If !Empty( dReinteg )
			If !MsgNoYes( OemToAnsi( STR0022 ), OemToAnsi( STR0001 ) ) // "Todas as rescisões (normais ou complementares) já calculadas para o funcionário serão excluídas e não poderão ser restauradas. Deseja prosseguir com a reintegração?" # "Reintegração de Funcionários"
				lReintOk := .F.
			EndIf
		Else
			MsgAlert( OemToAnsi( STR0030 ), OemToAnsi( STR0029 ) ) // "Informe as datas de reintegração e de base de férias do funcionário." # "Atenção"
			lReintOk := .F.
		EndIf
	Else
		If !Empty( dReinteg ) .And. !Empty( cNewMat )
			If !MsgNoYes( OemToAnsi( STR0024 ), OemToAnsi( STR0001 ) ) // "Será incluída nova matrícula reutilizando os dados do funcionário reintegrado. Deseja prosseguir com a reintegração?" # "Reintegração de funcionários"
				lReintOk := .F.
			EndIf
		Else
			MsgAlert( OemToAnsi( STR0031 ), OemToAnsi( STR0029 ) ) // "Informe a data de reintegração e a nova matrícula do funcionário." # "Atenção"
			lReintOk := .F.
		EndIF
	EndIf

Return( lReintOk )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³GPEA810Grv    ³Autor³ Jonatas A. T. Alves ³ Data ³30/10/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inclui/altera informacoes no SRA, SRB, SRF, SRG, SRQ, SRR.  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³GPEA810Grv()                                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA810                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Nil                                                         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³cFilFun - Filial de origem                                  ³
³          ³cMatFun - Matricula de origem                               ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
STATIC Function GPEA810Grv( cFilFun, cMatFun )

	Local aSRAStru := SRA->( dbStruct() )
	Local cChave   := ""
	Local cTipoRes := ""
	Local lRet     := .T.

	aSRACpos	:= {}

	dbSelectArea( "SRA" )

	Begin Transaction

		// Reintegracao retroativa a admissao
		If lOpcReint

			RecLock( "SRA" , .F. )

			// Novos campos alimentados no SRA
			SRA->RA_FECREI		:= dReinteg
			SRA->RA_DEMIANT		:= SRA->RA_DEMISSA

			// Atualizacao de campos ja existentes no SRA
			SRA->RA_SITFOLH		:= ""
			SRA->RA_DEMISSA		:= Ctod( "//" )
			SRA->RA_AFASFGT		:= ""
			SRA->RA_RESCRAI      := ""
			SRA->RA_TIPOADM		:= "4B"

			If !Empty( dEstab )
				SRA->RA_DTVTEST		:= dEstab
			EndIf

			If Type( "SRA->RA_MSBLQL" ) # "U"
				SRA->RA_MSBLQL	:= "2"
			EndIf

			SRA->RA_TPREINT	:= cTpRei
			SRA->RA_NRPROC	:= If(cTpRei=="1" .AND. nRntOpc == 2, cNroProc, "")
			SRA->RA_NRLEIAN	:= If(cTpRei<>"1" .AND. nRntOpc == 1, cNroLeiAn, "")
			SRA->RA_DTEFRTN	:= dDtEfRein
			SRA->RA_DTEFRET	:= dDtEfRet

			SRA->( MsUnlock() )

			fAltFer(SRA->RA_FILIAL, SRA->RA_MAT)

			// Exclui as rescisoes do funcionario
			fExclRes( SRA->RA_FILIAL + SRA->RA_MAT, @cTipoRes )

			If lIntegDef
				SetRotInteg("GPEM040")
				FwIntegDef("GPEM040")
			EndIf

		Else

			// Alimenta array com os campos do funcionario
			aEval( aSRAStru, { |x| aAdd( aSRACpos, { x[1], &( "SRA->" + x[1] ) } ) } )

			// Deleta o filtro utilizando a funcao FilBrowse                     	 ³
			EndFilBrw( "SRA" , aIndexSra )

			//Grava data de reintegração para funcionario nao ser filtrado
			RecLock( "SRA" , .F. )
				SRA->RA_FECREI	:= dReinteg
			MsUnlock()

			cChave := SRA->RA_FILIAL + SRA->RA_MAT

			// Apresenta tela de cadastro do funcionario
			If Gpea010Mnt( "SRA", Nil, 3, cNewMat, Nil, Nil, Nil ) == 1

				MBrChgLoop( .F. ) // Não apresenta nova tela de inclusão

				// Replicacao dos cadastros de dependentes ou beneficiarios
				If cCpyCad # "4"

					SRA->( FKCOMMIT() )

					// Copia cadastro de dependentes (SRB) para a nova matricula
					If cCpyCad $ "1*3"
						fCadCopy( "SRB", "RB_", cFilFun, cMatFun )
					EndIf

					// Copia cadastro de beneficiarios (SRQ) para a nova matricula
					If cCpyCad $ "2*3"
						fCadCopy( "SRQ", "RQ_", cFilFun, cMatFun )
					EndIf

				EndIf
			Else
				SRA->(DbSetOrder(1))
				If SRA->(MsSeek(cChave))
					RecLock( "SRA" , .F. )
						SRA->RA_FECREI	:= Ctod( "//" )
					MsUnlock()
				EndIf
				SRA->(DbCloseArea())
			EndIf

			// Restaura filtro de browse
			aIndexSra := {}
			//Eval( bFiltraBrw )
		EndIf

		If ExistBlock("GP810GRV")
			Execblock("GP810GRV",.F.,.F.,{ lOpcReint,cFilFun, cMatFun, cNewMat, cTipoRes})
		Endif

	End Transaction
lEnd810GRV	:= lRet
Return lRet

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ fExclRes     ³Autor³ Jonatas A. T. Alves ³ Data ³30/10/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Exclui todas as rescisoes do funcionario.                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fExclRes()                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA810                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Nil                                                         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³cKeyExc - filial + matricula a ser excluida                 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
STATIC Function fExclRes( cKeyExc, cTipoRes )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa a gravacao dos lancamentos do SIGAPCO        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoIniLan( "000090" )

	dbSelectArea( "SRR" )
	dbSetOrder( 1 )
	If dbSeek( cKeyExc + "R" )
		While SRR->( !Eof() .and. cKeyExc + "R" == RR_FILIAL + RR_MAT + RR_TIPO3 )
			RecLock( "SRR", .F., .T. )
			SRR->( dbDelete() )
			SRR->( MsUnLock() )
			// Integracao com modulo SIGAPCO
			PcoDetLan( "000090", "01", "GPEM040", .T. )
			SRR->( dbSkip() )
		EndDo
	EndIf

	dbSelectArea( "SRG" )
	While SRG->( !Eof() .and. cKeyExc == RG_FILIAL + RG_MAT )

       If SRG->RG_EFETIVA == "S"
          cTipoRes := SRG->RG_TIPORES
       EndIF

		RecLock( "SRG", .F. )
		SRG->( dbDelete() )
		SRG->( MsUnLock() )
		SRG->( dbSkip() )
	EndDo

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Finaliza a gravacao dos lancamentos do SIGAPCO          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoFinLan( "000090" )

Return

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fGP810Var     ³Autor³ Jonatas A. T. Alves ³ Data ³30/10/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Alimenta variaveis de memoria do SRA com os dados do func.  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fGP180Ver()                                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA010                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Nil                                                         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Nil                                                         ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*/
Function fGP810Var()

	Local nPosDemi	:= 0

	// Preenchimento automatico das variaveis de memoria do SRA
	aEval( aSRACpos, { |x| &( "M->" + x[1] ) := x[2] } )

	// Novos campos alimentados no SRA
	M->RA_FECREI		:= dReinteg

	// Data da demissao anterior eh a data de demissao do cadastro antigo
	nPosDemi := aScan( aSRACpos, { |x| x[1] == "RA_DEMISSA" } )
	M->RA_DEMIANT		:= aSRACpos[ nPosDemi, 2 ]

	// Atualizacao de campos ja existentes no SRA
	M->RA_MAT			:= cNewMat
	M->RA_SITFOLH		:= ""
	M->RA_ADMISSA		:= Ctod( "//" )
	M->RA_OPCAO  		:= Ctod( "//" )
	M->RA_DEMISSA		:= Ctod( "//" )
	M->RA_AFASFGT		:= ""
	M->RA_RESCRAI		:= ""
	M->RA_TIPOADM		:= "4B"

	If !Empty( dEstab )
		M->RA_DTVTEST		:= dEstab
	EndIf

	If Type( "M->RA_MSBLQL" ) # "U"
		M->RA_MSBLQL	:= "2"
	EndIf

	M->RA_TPREINT	:= cTpRei
	M->RA_NRPROC	:= If(cTpRei=="1" .AND. nRntOpc == 2, cNroProc, "")
	M->RA_NRLEIAN	:= If(cTpRei<>"1" .AND. nRntOpc == 1, cNroLeiAn, "")
	M->RA_DTEFRTN	:= dDtEfRein
	M->RA_DTEFRET	:= dDtEfRet
	M->RA_CODUNIC	:= c810codUnic

Return

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fCadCopy      ³Autor³ Jonatas A. T. Alves ³ Data ³30/10/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Efetua copia dos cadastros de dependentes e beneficiarios.  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fCadCopy()                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA810                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Nil                                                         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Nil                                                         ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*/
STATIC Function fCadCopy( cAlias, cPrefx, cFilFun, cMatFun )

	Local aStruCad	:= {}
	Local aDadosCad	:= {}

	Local nElem		:= 0
	Local nCpos		:= 0

	dbSelectArea( cAlias )
	aStruCad := ( cAlias )->( dbStruct() )

	dbSelectArea( cAlias )
	dbSetOrder( 1 )
	If dbSeek( cFilFun + cMatFun )
		While !( cAlias )->( Eof() ) .And. ( cFilFun + cMatFun == &( cPrefx + "FILIAL" ) + &( cPrefx + "MAT" ) )

			// Array aDadosCad contendo nome do campo + conteudo da matricula original
			aAdd( aDadosCad, {} )
			aEval( aStruCad, { |x| aAdd( aDadosCad[ Len( aDadosCad ) ], { cAlias + "->" + x[1], &( cAlias + "->" + x[1] ) } ) } )

			( cAlias )->( dbSkip() )
		EndDo
	EndIf

	// Gravacao dos dados da matricula demitida na nova matricula
	For nElem := 1 To Len( aDadosCad )
			RecLock( cAlias, .T. )

			For nCpos := 1 To Len( aDadosCad[ nElem ] )
				Replace &( aDadosCad[ nElem, nCpos, 1 ] ) With aDadosCad[ nElem, nCpos, 2 ]
			Next nCpos

			Replace &( cAlias + "->" + cPrefx + "FILIAL"	) With SRA->RA_FILIAL
			Replace &( cAlias + "->" + cPrefx + "MAT"		) With SRA->RA_MAT

			( cAlias )->( MsUnlock() )
	Next nElem

Return

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Rst810Stc()   ³Autor³ Jonatas A. T. Alves ³ Data ³30/10/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializa Statics utilizadas em GPEA810.                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fCadCopy()                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA810                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Nil                                                         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Nil                                                         ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*/
Function Rst810Stc()

	TamNrLei := TamSx3( "RA_NRLEIAN" )[1]

	aSRACpos	:= {}

	nTamMat		:= TamSx3( "RA_MAT" )[1]
	nRntOpc		:= 1
	nOldOpc		:= 0

	cNewMat		:= Space( nTamMat )
	cCpyCad		:= "4"

	lOpcReint	:= ( nRntOpc == 1 )

	dReinteg	:= Ctod( "//" )
	dEstab		:= Ctod( "//" )

	ocNewMat	:= Nil
	ocCpyCad	:= Nil

	//Verifica o conteudo do campo, realiza 'de/para' e
	//atribui sempre o tamanho do campo RA_NRLEIAN a variavel
	If ( Empty(SRA->RA_NRLEIAN) )
		cNroLeiAn	:= Space(TamNrLei)
	Else
		If( Len( AllTrim(SRA->RA_NRLEIAN) ) == 1 )
			If( AllTrim(SRA->RA_NRLEIAN) == "1" )
				cNroLeiAn := Pad( "6.683/1979", TamNrLei )
			ElseIf( AllTrim(SRA->RA_NRLEIAN) == "2" )
				cNroLeiAn := Pad( "8.632/1993", TamNrLei )
			ElseIf( AllTrim(SRA->RA_NRLEIAN) == "3" )
				cNroLeiAn := Pad( "8.878/1994", TamNrLei )
			ElseIf( AllTrim(SRA->RA_NRLEIAN) == "4" )
				cNroLeiAn := Pad( "10.559/2002", TamNrLei )
			ElseIf( AllTrim(SRA->RA_NRLEIAN) == "5" )
				cNroLeiAn := Pad( "10.790/2003", TamNrLei )
			ElseIf( AllTrim(SRA->RA_NRLEIAN) == "6" )
				cNroLeiAn := Pad( "11.282/2006", TamNrLei )
			EndIf
		Else
			cNroLeiAn := SRA->RA_NRLEIAN
		EndIf
	EndIf

	cNroProc	:= Space(TamSx3( "RE0_PROJUD" )[1])
	cTpRei		:= SRA->RA_TPREINT
	cNroProc	:= SRA->RA_NRPROC
	cNroLeiAn	:= SRA->RA_NRLEIAN
	dDtEfRein	:= SRA->RA_DTEFRTN
	dDtEfRet    := SRA->RA_DTEFRET

Return

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gp810ValPE    ³Autor³ Gustavo M.		     ³ Data ³13/10/2011³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Permite novas validacoes antes da gravacao.				  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Gp810ValPE()												         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³                                                         	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRet														         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*/
Function Gp810ValPE()

	Local lRet	:= .T.

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada usado antes da gravacao da reintegracao.    ³
	//³  O retorno deve ser logico (.T. ou .F.)                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("GP810CONF")
		lRet := ExecBlock("GP810CONF",.F.,.F.)
	Endif

Return(lRet)
/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fCadCopy	  ³Autor³ Jonatas A. T. Alves ³ Data ³30/10/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Efetua copia dos cadastros de dependentes e beneficiarios.  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fCadCopy()													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Nil															³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
STATIC Function GpVldRein()

Local lRet	:= .T.

If cPaisLoc == "BRA" .And. !Empty(dReinteg)
	dDtReint := &( ReadVar() )
	If dDtReint < SRA->RA_ADMISSA
		Aviso("Aviso!", STR0032, {"OK"})
		lRet := .F.
	EndIF
EndIf

Return(lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fGetLeiAn   ³ Autor ³ Emerson Campos        ³ Data ³ 31/08/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Tipos de lei de anistia                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observa‡…o³Se for informado o parametro com o tipo de opção válida       ³±±
±±³          ³retorna o nome da lei equivalente se não for informado o      ³±±
±±³          ³parametro retorna a lista de leis para utilizar no combo      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fOpcLeiAnis()		                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fGetLeiAn(nOpc)
Local xRet

If Empty(nOpc)
	xRet 	:= { }
	xRet	:= {"1="+STR0041,;	//1=LEI 6.683/1979
				"2="+STR0042,;	//2=LEI 8.632/1993
				"3="+STR0043,;	//3=LEI 8.878/1994
				"4="+STR0044,;	//4=LEI 10.559/2002
				"5="+STR0045,;	//5=LEI 10.790/2003
				"6="+STR0075,;	//6=LEI 11.282/2006
				""}
ElseIf nOpc == "1"
	xRet	:= STR0041	//1=LEI 6.683/1979
ElseIf nOpc == "2"
	xRet	:= STR0042	//2=LEI 8.632/1993
ElseIf nOpc == "3"
	xRet	:= STR0043	//3=LEI 8.878/1994
ElseIf nOpc == "4"
	xRet	:= STR0044	//4=LEI 10.559/2002
ElseIf nOpc == "5"
	xRet	:= STR0045	//5=LEI 10.790/2003
ElseIf nOpc == "6"
	xRet	:= STR0075	//6=LEI 11.282/2006
EndIf
Return xRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fOpcLeiAnis ³ Autor ³ Emerson Campos        ³ Data ³ 31/08/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Tipo de reintegracao                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fOpcLeiAnis()		                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fOpcLeiAnis()
Local cOpcBox := ""
   cOpcBox += ( OemToAnsi("1="+STR0041) + ";"  ) //1=LEI 6.683/1979
   cOpcBox += ( OemToAnsi("2="+STR0042) + ";"  ) //2=LEI 8.632/1993
   cOpcBox += ( OemToAnsi("3="+STR0043) + ";"  ) //3=LEI 8.878/1994
   cOpcBox += ( OemToAnsi("4="+STR0044) + ";"  ) //4=LEI 10.559/2002
   cOpcBox += ( OemToAnsi("5="+STR0045) + ";"  ) //5=LEI 10.790/2003
   cOpcBox += ( OemToAnsi("6="+STR0075) + ";"  ) //6=LEI 11.282/2006

Return cOpcBox

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fOpcTpRein()³ Autor ³ Emerson Campos        ³ Data ³ 31/08/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Tipo de reintegracao                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fOpcTpRein()		                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fOpcTpRein()
	Local cOpcBox := ""

	cOpcBox += ( OemToAnsi(STR0033) + ";"  ) //"1=Reintegração por Determinação Judicial;"
	cOpcBox += ( OemToAnsi(STR0034) + ";"  ) //"2=Reintegração por Anistia Legal;"
	cOpcBox += ( OemToAnsi(STR0066) + ";"  ) //"3=Reversão de Servidor Público;"
	cOpcBox += ( OemToAnsi(STR0067) + ";"  ) //"4=Recondução de Servidor Público;"
	cOpcBox += ( OemToAnsi(STR0068) + ";"  ) //"5=Reinclusão de Militar"
	cOpcBox += ( OemToAnsi(STR0035) + ";"  ) //"9=Outros"

	cOpcBox += ( OemToAnsi(STR0069) + ";"  ) //"1A=Reint. por Decisão Judicial - pagto retroativo;"
	cOpcBox += ( OemToAnsi(STR0070) + ";"  ) //"2A=Reint. por Anistia Legal - pagto retroativo;"
	cOpcBox += ( OemToAnsi(STR0071) + ";"  ) //"3A=Rev. de Servidor Público - pagto retroativo;"
	cOpcBox += ( OemToAnsi(STR0072) + ";"  ) //"4A=Recondução de Servidor Público - pagto retroativo"
	cOpcBox += ( OemToAnsi(STR0073) + ";"  ) //"5A=Reinclusão de Militar - pagto retroativo;"
	cOpcBox += ( OemToAnsi(STR0074) + ";"  ) //"9A=Outros - pagto retroativo;"

Return cOpcBox

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fTpReinWhen ³ Autor ³ Emerson Campos        ³ Data ³ 02/09/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Disponibilizar acesso no GPEA810 somente quando Tipo de      ³±±
±±³          ³ Reintegração for igual a 2 nos demais fontes o acesso é livre³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fTpReinWhen()		                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function GpVldTpRein()
Local lRet := .T.
//-- Se exibe aviso de inconsistencia
IF cEFDAviso <> "2"
	If cTpRei == "1" .AND. nRntOpc <> 2
		Aviso (STR0029, STR0046+ CRLF + STR0047 + CRLF +STR0048 ,{STR0049}) //"Atenção", "Ao selecionar a Reintegração 'Reintegração por Determinação Judicial'"+ CRLF +"O campo acima 'Tipo de Reintegração' deve ser:"+ CRLF + "A partir da data da decisão judicial",{"ok"}
		If cEFDAviso == "1"
			lRet	:= .F.
		EndIf
	ElseIf cTpRei <> "1" .AND. nRntOpc == 2
		Aviso (STR0029, STR0050+ CRLF + STR0051 + CRLF +STR0052 ,{STR0049}) //"Atenção", "Ao selecionar uma Reintegração diferente de 'Reintegração por Determinação Judicial'"+ CRLF +"O campo acima 'Tipo de Reintegração' deve ser:"+ CRLF + "Retroativa à admissão",{"ok"}
		If cEFDAviso == "1"
			lRet	:= .F.
		EndIf
	EndIf
	If lRet
		If cTpRei == "1" .AND. Empty(cNroProc)//Reintegração por Determinação Judicial
			Aviso (STR0029, STR0056 ,{STR0049}) //"Atenção", "O campo 'Nro. do Processo' é um campo importante para o eSocial."+ CRLF +"O campo acima 'Tipo de Reintegração' deve ser:"+ CRLF + "Retroativa à admissão",{"ok"}
			If cEFDAviso == "1"
				lRet	:= .F.
			EndIf
		ElseIf cTpRei == "2" .AND. Empty(cNroLeiAn)  //Reintegração por Anistia Legal
			Aviso (STR0029, STR0057 ,{STR0049}) //"Atenção", "O campo 'Nro. Lei Anistia' é um campo importante para o eSocial.",{"ok"}
			If cEFDAviso == "1"
				lRet	:= .F.
			EndIf
		EndIf
	EndIf

	If lRet .AND. cTpRei == "1"
		lRet := ProcJud_VLD(cNroProc)
	EndIf

	If lRet
		If !fGpEfReiVld()
			If cEFDAviso == "1"
				lRet	:= .F.
			EndIf
		EndIf
	EndIf

	If lRet
		If !fGpEfRetVld()
			If cEFDAviso == "1"
				lRet	:= .F.
			EndIf
		EndIf
	EndIf
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fGpEfReiVld ³ Autor ³ Emerson Campos        ³ Data ³ 31/08/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validação do campo                                         	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fGpEfReiVld()		                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fGpEfReiVld()
Local lRet	:= .T.
IF ( FunName() == "GPEA810" )
	If 	dDtEfRet <= SRA->RA_DEMISSA
		lRet	:= .F.
		Aviso (STR0029, STR0053,{STR0049})	//"Atenção", "O campo 'Data Efeito' deve ser posterior ao evento do desligamento." ,{"ok"}
	EndIf
Else
	If !Empty(M->RA_DTEFRET) .AND. !Empty(SRA->RA_DEMISSA)
		If M->RA_DTEFRET <= SRA->RA_DEMISSA
			lRet	:= .F.
			Aviso (STR0029, STR0053,{STR0049})	//"Atenção", "O campo 'Data Efeito' deve ser posterior ao evento do desligamento." ,{"ok"}
		EndIf
	EndIf
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    fGpEfRetVld ³ Autor ³ Emerson Campos        ³ Data ³ 31/08/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validação do campo                                         	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   fGpEfRetVld()		                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fGpEfRetVld()
Local lRet	:= .T.

IF ( FunName() == "GPEA810" )
	If !Empty(dDtEfRet)
		If dDtEfRein < dDtEfRet
	   		lRet	:= .F.
			Aviso (STR0029,STR0054,{STR0049})	//"Atenção", "O campo 'Dt. Efeito Retorno' deve ser igual ou posterior ao campo 'Data Efeito'." ,{"ok"}
		EndIf
		If cVersGPE >= "9.0.00" .And. dDtEfRein > dDataBase + 30 	
			lRet	:= .F.
			Aviso (STR0029, STR0090,{STR0049})	//"Atenção", "O campo Dt. Efetivo Retorno' não pode ser posterior a 30 dias da data atual." ,{"ok"}
		EndIf
	EndIf
Else
	If !Empty(M->RA_DTEFRTN) .AND. !Empty(M->RA_DTEFRET)
		If M->RA_DTEFRTN < M->RA_DTEFRET
			lRet	:= .F.
			Aviso (STR0029,STR0054,{STR0049})	//"Atenção", "O campo 'Dt. Efeito Retorno' deve ser igual ou posterior ao campo 'Data Efeito'." ,{"ok"}
		EndIf
		If cVersGPE >= "9.0.00" .And. M->RA_DTEFRET > dDataBase + 30 	
			lRet	:= .F.
			Aviso (STR0029, STR0090,{STR0049})	//"Atenção", "O campo Dt. Efetivo Retorno' não pode ser posterior a 30 dias da data atual." ,{"ok"}
		EndIf
	EndIf
EndIf
Return lRet

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ fAltFer     ³Autor³ Renan Borges        ³ Data ³23/11/2016³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Altera as ferias pagas na rescisão.                        ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fAltFer()                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA810                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Nil                                                         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³cFilFun + cMat - filial + matricula                         ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
STATIC Function fAltFer( cFilFun, cMat )
Local nDiasVenc := 0
Local nDiasProp := 0
Local nMesesVenc:= 0
Local nVencParc := 0
Local nVencTotal := 0
Local lVenc     := .F.
Local lProp     := .F.
Local nDiasPg   := 0
Local nRegRound := 0
Local nRegTot   := 0
Local cAliasSRF 	:= "QSRF"
Local aSrfRecnos	:= {}
Local nx			:= 0
Local aPerAberto	:= {}
Local aPerFechado	:= {}
Local aNomeDb

//O banco DB2 não é compatível com o SQL TOP
cNameDB	:= Upper(TcGetDb())

dbSelectArea( "SRG" )
dbSetOrder(1)
If SRG->(dbSeek( SRA->RA_FILIAL + SRA->RA_MAT ))
	While SRG->(!Eof()) .and. SRG->(RG_FILIAL+RG_MAT) == SRA->RA_FILIAL + SRA->RA_MAT
		If SRG->RG_EFETIVA == 'S'
			Exit
		EndIf
		SRG->(DbSkip())
	Enddo
	RetPerAbertFech(SRG->RG_PROCES	,; // Processo selecionado na Pergunte.
				If(SRA->RA_CATFUNC $ 'A|P',fGetCalcRot('9'),fGetCalcRot('1'))	,; // Roteiro selecionado na Pergunte.
				SRG->RG_PERIODO	,; // Periodo selecionado na Pergunte.
				SRG->RG_SEMANA		,; // Numero de Pagamento selecionado na Pergunte.
				NIL			,; // Periodo Ate - Passar "NIL", pois neste relatorio eh escolhido apenas um periodo.
				NIL			,; // Numero de Pagamento Ate - Passar "NIL", pois neste relatorio eh escolhido apenas um numero de pagamento.
				@aPerAberto	,; // Retorna array com os Periodos e NrPagtos Abertos
				@aPerFechado ) // Retorna array com os Periodos e NrPagtos Fechados
	If !Empty(aPerFechado)
		//Dias Vencidos
		nDiasVenc	:= SRG->RG_DFERVEN
		lVenc := If(nDiasVenc > 0,.T.,.F.)
		nMesesVenc := NoRound ( nDiasVenc / 30 ) // Incluido devido o erro causado pela não utilização de FloatingPointPrecise
		nRegRound  := nMesesVenc - (nMesesVenc % 1)
		nRegTot  := If((nMesesVenc % 1) > 0, nRegRound + 1,nRegRound)
		If nDiasVenc >  30
			nVencParc  := (nMesesVenc % 1) * 30
		EndIf
		nVencTotal := nDiasVenc - nVencParc

		//Dias Proporcionais
		nDiasProp	:= SRG->RG_DFERPRO
		nRegTot += If(nDiasProp > 0,1,0)
	EndIf
EndIf

If nRegTot == 0
	Return()
Endif

If ( Select( cAliasSRF ) > 0 )
	( cAliasSRF )->( dbCloseArea() )
EndIf

cCposQuery 	:= "%SRF.RF_FILIAL, SRF.RF_MAT, SRF.R_E_C_N_O_%"

If ( cNameDB $ "ORACLE" )

	BeginSql alias cAliasSRF
		SELECT %exp:cCposQuery%
		  FROM %table:SRF% SRF
		 WHERE SRF.RF_FILIAL = %exp:SRA->RA_FILIAL%
	       AND SRF.RF_MAT = %exp:SRA->RA_MAT%
		   AND SRF.RF_STATUS <> '2'
	   	   AND SRF.%notDel%
	   	   AND ROWNUM <= %exp:nRegTot%
	     ORDER BY SRF.RF_DATABAS DESC
	EndSql

Elseif ( cNameDB $ "INFORMIX" )

	BeginSql alias cAliasSRF
		SELECT FIRST %exp:nRegTot% SRF.RF_FILIAL, SRF.RF_MAT, SRF.R_E_C_N_O_, SRF.RF_DATABAS
		  FROM %table:SRF% SRF
		 WHERE SRF.RF_FILIAL = %exp:SRA->RA_FILIAL%
		   AND SRF.RF_MAT = %exp:SRA->RA_MAT%
		   AND SRF.RF_STATUS <> '2'
	   	   AND SRF.%notDel%
	     ORDER BY SRF.RF_DATABAS DESC
	EndSql

Elseif ( cNameDB $ "DB2" )

	BeginSql alias cAliasSRF
		SELECT SRF.RF_FILIAL, SRF.RF_MAT, SRF.R_E_C_N_O_
		  FROM %table:SRF% SRF
		 WHERE SRF.RF_FILIAL = %exp:SRA->RA_FILIAL%
	       AND SRF.RF_MAT = %exp:SRA->RA_MAT%
		   AND SRF.RF_STATUS <> '2'
		   AND SRF.%notDel%
		   FETCH FIRST  %exp:nRegTot% ROWS ONLY
	EndSql
Elseif ( cNameDB $ "POSTGRES" )

	BeginSql alias cAliasSRF
		SELECT %exp:cCposQuery%
		  FROM %table:SRF% SRF
		 WHERE SRF.RF_FILIAL = %exp:SRA->RA_FILIAL%
	       AND SRF.RF_MAT = %exp:SRA->RA_MAT%
		   AND SRF.RF_STATUS <> '2'
	   	   AND SRF.%notDel%
		 ORDER BY SRF.RF_DATABAS DESC
		 LIMIT %exp:nRegTot%
	EndSql
Else

	BeginSql alias cAliasSRF
		SELECT TOP %exp:nRegTot% + %exp:" "% + %exp:cCposQuery%
		  FROM %table:SRF% SRF
		 WHERE SRF.RF_FILIAL = %exp:SRA->RA_FILIAL%
		   AND SRF.RF_MAT = %exp:SRA->RA_MAT%
		   AND SRF.RF_STATUS <> '2'
	   	   AND SRF.%notDel%
	     ORDER BY SRF.RF_DATABAS DESC
	EndSql

EndIf

While( ( cAliasSRF )->( !Eof() ))
	aadd(aSrfRecnos,(cAliasSRF)->R_E_C_N_O_)
	( cAliasSRF )->( dbSkip() )
EndDo

( cAliasSRF )->( dbCloseArea() )

dbSelectArea( "SRF" )
dbSetOrder(1)
If SRF->(dbSeek( SRA->RA_FILIAL + SRA->RA_MAT ))
	For nx := 1 to Len(aSrfRecnos)
		If(nDiasProp > 0)
			nDiasPg := nDiasProp
			nDiasProp := 0
		ElseIf( nVencTotal > 0 )
			nDiasPg := 30
			nVencTotal -= nDiasPg
		Else
			nDiasPg := nVencParc
			nVencParc := 0
		EndIf
		SRF->(DbGoTo(aSrfRecnos[nx]))
		RecLock( "SRF" , .F. )

		SRF->RF_DFERANT		-= nDiasPg
		SRF->RF_STATUS		:= '1'
		SRF->( MsUnlock() )
	Next
EndIf

Return
