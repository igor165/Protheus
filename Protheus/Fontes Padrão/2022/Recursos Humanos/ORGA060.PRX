#INCLUDE "PROTHEUS.CH"
#INCLUDE "ORGA060.CH"
#INCLUDE "HEADERGD.CH"
#INCLUDE "APDTREEN.CH"

Static cValAnt

/*/
зддддддддддбддддддддддбдддддбдддддддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁORGA060   ЁAutorЁKELLY SOARES               Ё Data Ё20/09/2006Ё
цддддддддддеддддддддддадддддадддддддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Visoes             				                  Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                                      Ё
цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё            ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL             Ё
цдддддддддддбддддддддддбдддддддддддддбдддддддддддддддддддддддддддддддддддд╢
ЁProgramadorЁData      ЁBOPS 	     ЁMotivo da Alteracao                 Ё
цдддддддддддеддддддддддедддддддддддддедддддддддддддддддддддддддддддддддддд╢
ЁCecilia C. Ё31/03/14  ЁM_R003       ЁAjuste na integracao SIGORG com ou  Ё
Ё	        Ё	       Ё             Ёtros SIGACSA, SIGATRM, SIGARSP e	  Ё
Ё	        Ё	       Ё             ЁSIGAGPE.                            Ё
ЁRaquel Hag.Ё05/06/2014ЁTPTBN8       ЁInclusao de replicas versao 11      Ё
Ё           Ё          Ё             Ёcom itens do eSocial.               Ё
ЁCecilia C. Ё26/08/14  ЁTQIEZY       ЁCorrigido o funcionamento da consul Ё
Ё	        Ё	       Ё             Ёta especifica RD4COD.               Ё
ЁFlavio C.  Ё27/08/14  ЁTQKBZM       ЁCorreГЦo na carga de departamentos  Ё
Ё	        Ё	       Ё             Ёe layout de tela             	      Ё
ЁGustavo M. Ё05/03/15  ЁTRFYNS       ЁAjuste para gerar a lista apenas    Ё
Ё	        Ё	       Ё       	     Ёdo nivel selecionado.        	      Ё
ЁRenan B.   Ё07/03/16  ЁTURIO8       ЁAjuste para nЦo gerar errorlog ao   Ё
Ё           Ё		   Ё		     Ёclicar no campo Cod. Ident em modo  Ё
Ё           Ё		   Ё		     ЁvisualizaГЦo.                       Ё
ЁRaquel H   Ё08/02/2017ЁMRH-6273     ЁAjuste para nЦo gerar errorlog ao   Ё
Ё           Ё		   Ё		     Ёgravar itens de visЦo com cpo custo-Ё
Ё           Ё		   Ё		     Ёmizado.                             Ё
ЁM. SilveiraЁ27/04/2017ЁDRHPONTP-272 ЁAjuste em Org60LstFun para pesquisarЁ
Ё           Ё		   Ё		     Ёa filial correta conforme o tipo da Ё
Ё           Ё		   Ё		     Ёvisao.                              Ё
iE.Moskovkina	i27/09/2017	iMA3A-714		iFor RUS localization type of Hierar-i
i				i			i				ichy 2=Communication is not used. Alli
i				i			i				iexpressions with field RDK->		 i
i				i			i				iRDK_HIERAR are extended with if-con i
i				i			i				idition for cPaisLoc var. 			 i
i				i			i				iIn func Rd4F3Ident standart query   i
i				i			i				iSQBORG will be used for RUS.		 i
i				i			i				iFunction RD4ORGFtr is created to 	 i
i				i			i				imake a filter for SQBORG. 			 i
i				i			i				iFunction GdRd4Carga is changed for	 i
i				i			i				iRUS - new fields are added in SQL	 i
i				i			i				iquery and in array with columns.	 i
i				i			i				iFunctions Rd4CodIdeVld, Rd4RetDesc	 i
i				i			i				iare changed for RUS to realize auto i
i				i			i				ifilling of new fields of table RD4	 i
i				i			i				ifrom table SQB.					 i
юдддддддддддаддддддддддадддддддддддддадддддддддддддддддддддддддддддддддддды/*/
Function ORGA060( cAlias , nReg , nOpc , lExecAuto , nOpcNewGd , lEstrutura )
	Local aArea 	:= GetArea()
	Local aAreaRdk	:= RDK->( GetArea() )
	Local aAreaRd4	:= RD4->( GetArea() )
	Local lExistOpc	:= ( ValType( nOpc ) == "N" )
	Local bBlock
	Local nPos

	Private __xValueRet := Nil

	DEFAULT lEstrutura := .F.
	If FindFunction("fVldCompt")
		If !fVldCompt()
			Return .F.
		EndIf
	EndIf
	Begin Sequence
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁRedefine o Alias                                              Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		cAlias	:= "RDK"

		Private aRotina:= MenuDef()
		Private cCadastro:= OemToAnsi( STR0007 ) //"Vis■es"

		IF ( lExistOpc )

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁGarante o Posicinamento do Recno                              Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			DEFAULT nReg	:= ( cAlias )->( Recno() )
			IF !Empty( nReg )
				( cAlias )->( MsGoto( nReg ) )
			EndIF

			DEFAULT lExecAuto := .F.
			IF ( lExecAuto )
				nPos := aScan( aRotina , { |x| x[4] == nOpc } )

				IF ( nPos == 0 )
					Break
				EndIF

				bBlock := &( "{ |a,b,c,d,e| " + aRotina[ nPos , 2 ] + "(a,b,c,d,e) }" )
				Eval( bBlock , cAlias , nReg , nPos )
			Else
				Orga060Mnt( cAlias , nReg , nOpc , .T. , nOpcNewGd , lEstrutura)
			EndIF

		Else

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Chama a Funcao de Montagem do Browse                                   Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			MBrowse( 6 , 1 , 22 , 75 , cAlias )

		EndIF

	End Sequence

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁColoca o Ponteiro do Mouse em Estado de Espera			   	      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	CursorWait()

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Restaura os Dados de Entrada 											          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	RestArea( aAreaRd4 )
	RestArea( aAreaRdk )
	RestArea( aArea	   )

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁRestaura o Cursor do Mouse                				   	      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	CursorArrow()
Return


/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁInOrga060Exec ЁAutor ЁMarinaldo de Jesus   Ё Data Ё24/08/2004Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁExecutar Funcoes Dentro de Orga060                           Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁInOrga060Exec( cExecIn , aFormParam )						 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁuRet                                                 	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function InORGA060Exec( cExecIn , aFormParam )
	Local uRet

	DEFAULT cExecIn		:= ""
	DEFAULT aFormParam	:= {}

	IF !Empty( cExecIn )
		cExecIn	:= BldcExecInFun( cExecIn , aFormParam )
		uRet	:= &( cExecIn )
	EndIF
Return uRet

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁOrga060VisЁ Autor ЁMarinaldo de Jesus     Ё Data Ё27/02/2004Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Visoes ( Visualizar )							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Orga060Vis( cAlias , nReg , nOpcNewGd )
Return( Orga060( cAlias , nReg , 2 , NIL , nOpcNewGd ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁOrga060IncЁ Autor ЁMarinaldo de Jesus     Ё Data Ё27/02/2004Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Visoes ( Incluir )								Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Orga060Inc( cAlias , nReg , nOpcNewGd )
Return( Orga060( cAlias , nReg , 3 , NIL , nOpcNewGd ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁOrga060AltЁ Autor ЁMarinaldo de Jesus     Ё Data Ё27/02/2004Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Visoes ( Alterar )								Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Orga060Alt( cAlias , nReg , nOpcNewGd  )
Return( Orga060( cAlias , nReg , 4 , NIL , nOpcNewGd , .T.) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁOrga060DelЁ Autor ЁMarinaldo de Jesus     Ё Data Ё27/02/2004Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Visoes ( Excluir )								Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Orga060Del( cAlias , nReg  )
Return( Orga060( cAlias , nReg , 5 , NIL , 0 ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁOrga060MntЁ Autor ЁMarinaldo de Jesus     Ё Data Ё18/06/2002Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Visoes (Manutencao)								Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁOrga060()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Orga060Mnt( cAlias , nReg , nOpc , lDlgPadSiga , nOpcNewGd , lEstrutura )
Local aArea			:= GetArea(Alias())
Local aSvKeys		:= GetKeys()
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}
Local aRdkHeader	:= {}
Local aRdkCols		:= {}
Local aSvRdkCols	:= {}
Local aRdkFields	:= {}
Local aRdkAltera	:= {}
Local aRdkNaoAlt	:= {}
Local aRdkVirtEn	:= {}
Local aRdkNotFields	:= {}
Local aRdkRecnos	:= {}
Local aRdkKeys		:= {}
Local aRdkVisuEn	:= {}
Local aRd4GdAltera  := {}
Local aRd4GdNaoAlt	:= {}
Local aRd4Recnos	:= {}
Local aRd4Keys		:= {}
Local aRd4NotFields	:= {}
Local aRd4VirtGd	:= {}
Local aRd4VisuGd	:= {}
Local aRd4Cols		:= {}
Local aSvRd4Cols	:= {}
Local aRd4Query		:= {}
Local aLog			:= {}
Local aLogTitle		:= {}
Local aLogGer		:= {}
Local aLogGerTitle	:= {}
Local aButtons		:= {}
Local aFreeLocks	:= {}
Local bRd4GdDelOk	:= { |lDelOk| CursorWait() , lDelOk := Rd4GdDelOk( "RD4" , NIL , nOpc , cCodRDK , nRd4ItemOrd ) , CursorArrow() , lDelOk }
Local bRd4TreeDelOk	:= { || .T. }
Local bSet15		:= { || NIL }
Local bSet24		:= { || NIL }
Local bDialogInit	:= { || NIL }
Local bGdRd4Seek	:= { || NIL }
Local bRd4Sort		:= { || NIL }
Local cRDKKeySeek	:= ""
Local cFilRDK		:= ""
Local cCodRDK		:= ""
Local cMsgYesNo		:= ""
Local cTitLog		:= ""
Local lLocks		:= .F.
Local lExecLock		:= ( ( nOpc <> 2 ) .and. ( nOpc <> 3 ) )
Local lExcGeraLog	:= .F.
Local nOpcAlt		:= 0
Local nRdkUsado		:= 0
Local nRd4Usado		:= 0
Local nLoop			:= 0
Local nLoops		:= 0
Local nX			:= 0
Local nRd4ItemOrd	:= RetOrdem( "RD4" , "RD4_FILIAL+RD4_CODIGO+RD4_ITEM+RD4_TREE" )
Local nRd4PosItem	:= 0
Local nRd4MaxLocks	:= 10
Local nRd4GhostCol	:= 0
Local oDlg			:= NIL
Local oEnRdk		:= NIL
Local lReplicar     := nOpc == 7
Local bRd4KeyTree   := { || Rd4KeyTree() }
Local cTipo 		:= alltrim(RDK->RDK_HIERAR)

Private lEmpDif		:= .F.
Private lClosed		:= .T.
Private lShared		:= .F.
Private lSharedQ3	:= .F.
Private lF3			:= .F.
Private lCarga		:= .F.
Private cEmpSel		:= ""
Private cEmpCar		:= ""
Private aGets		:= {}
Private aTela		:= {}
Private aEmps		:= {}
Private aRd4Header	:= {}
Private bGetRdk
Private bGetRd4
Private oGdRd4
Private nGetSX8Len  := GetSX8Len()
Private aKeyReplic  := {RDK->RDK_FILIAL, RDK->RDK_CODIGO}

DEFAULT lEstrutura := .F.

	// Verifica se eh a funcao para replicar visoes
	If lReplicar
		If cTipo <> "1"
        Aviso(STR0027,STR0042,{"OK"}) // "Atencao" - "Esse processo esta disponivel apenas para estruturas hierarquicas do tipo organizacional!"
        Return
    EndIf
    nOpc := 3
	EndIf

	Begin Sequence

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Coloca o ponteiro do Cursor do Mouse em Estado de Espera     Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		CursorWait()

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁCheca a Opcao Selecionada									         Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			aRotSetOpc( cAlias , @nReg , nOpc )

						/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			ЁConfigura o Tree  											   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF ( nOpc == 6  )
				bRd4TreeDelOk	:= { |cItem,aLog,aLogTitle| RD4->( dbSetOrder( nRd4ItemOrd ) ) , ApdChkDel( "RD4" , NIL , nOpc , ( RDK->RDK_CODIGO + cItem ) , @lExcGeraLog , @aLog , @aLogTitle , { "RD4", "RCD", "RAR", "RAQ" } ) }
				If Org060Tree( cAlias , nReg , nOpc , bRd4TreeDelOk )

					// Rd4KeyTree() - Substituido em 15/01/2013 para inclusao do MsAguarde() - By Adilson Silva
					MsAguarde( bRd4KeyTree, STR0040, STR0041 )		//"Aguarde..."###"Finalizando AtualizaГЦo da VisЦo..."
				EndIf
				Break
			EndIF


			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Monta os Dados para a Enchoice							            Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			aRdkNotFields	:= { "RDK_FILIAL" }
			bGetRdk			:= { |lLock,lExclu|	IF( lExecLock , ( lLock := .T. , lExclu	:= .T. ) , aRdkKeys := NIL ),;
												aRdkCols := RDK->(;
																	GdBuildCols(	@aRdkHeader		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																					@nRdkUsado		,;	//02 -> Numero de Campos em Uso
																					@aRdkVirtEn		,;	//03 -> [@]Array com os Campos Virtuais
																					@aRdkVisuEn		,;	//04 -> [@]Array com os Campos Visuais
																					"RDK"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																					aRdkNotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																					@aRdkRecnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
																					"RDK"		   	,;	//08 -> Alias do Arquivo Pai
																					NIL				,;	//09 -> Chave para o Posicionamento no Alias Filho
																					NIL				,;	//10 -> Bloco para condicao de Loop While
																					NIL				,;	//11 -> Bloco para Skip no Loop While
																					NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols
																					NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																					NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																					NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																					NIL				,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																					NIL				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																					NIL				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																					NIL				,;	//19 -> Carregar Coluna Fantasma
																					NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																					NIL				,;	//21 -> Verifica se Deve verificar se o campo eh usado
																					NIL				,;	//22 -> Verifica se Deve verificar o nivel do usuario
																					NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																					@aRdkKeys		,;	//24 -> [@]Array que contera as chaves conforme recnos
																					@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																					@lExclu			 ;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																			    );
																  ),;
												IF( lExecLock , ( lLock .and. lExclu ) , .T. );
			  					}
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁLock do Registro do RDK									            Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			IF !( lLocks := WhileNoLock( "RDK" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetRdk ) )
				Break
			EndIF
			CursorWait()
			aSvRdkCols		:= aClone( aRdkCols )
			cFilRDK			:= RDK->RDK_FILIAL
			cCodRDK			:= RDK->RDK_CODIGO
			cRDKKeySeek		:= ( cFilRDK + cCodRDK )

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Cria as Variaveis de Memoria e Carrega os Dados Conforme o arЁ
			//Ё quivo														               Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			For nLoop := 1 To nRdkUsado
				SetMemVar( aRdkHeader[ nLoop , 02 ] , aRdkCols[ 01 , nLoop ] , .T. )
			Next nLoop

			cValAnt :=  M->RDK_HIERAR

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁDefine os Campos Editaveis na Enchoice Apenas na Inclusao( 3 )Ё
			//Ёou Alteracao(4)											               Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
				IF ( nOpc == 4 ) .Or. lReplicar
					aAdd( aRdkNaoAlt , "RDK_CODIGO" )
					aAdd( aRdkNaoAlt , "RDK_HIERAR" )
				EndIF

			EndIF

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Carregando campos Alteraveis e Editavies					      Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			MkArrEdFlds( nOpc , aRdkHeader , aRdkVisuEn , aRdkVirtEn , @aRdkNaoAlt , @aRdkAltera , @aRdkFields )

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Define os Campos que nao serao Carregados					      Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			aAdd( aRd4NotFields , "RD4_FILIAL"  )
			aAdd( aRd4NotFields , "RD4_CODIGO"	)
			aAdd( aRd4NotFields , "RD4_DATA"	)
			aAdd( aRd4NotFields , "RD4_STATUS"	)
			If cPaisLoc == "RUS"
				aAdd( aRd4NotFields , "RD4_HIERAR"	)
			EndIf

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Monta os Dados para a GetDados							            Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				aRd4Query		:= Array( 05 )
				aRd4Query[01]	:= "RD4_FILIAL='"+cFilRDK+"'"
				aRd4Query[02]	:= " AND "
				aRd4Query[03]	:= "RD4_CODIGO='"+cCodRDK+"'"
				aRd4Query[04]	:= " AND "
				aRd4Query[05]	:= "D_E_L_E_T_=' ' "
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Quando For Inclusao Posiciona o RD4 No Final do Arquivo	      Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			IF ( nOpc == 3  ) //Inclusao
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Garante que na Inclusao o Ponteiro do RD4 estara em Eof()    Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				PutFileInEof( "RD4" )
			EndIF
			RD4->( dbSetOrder( nRd4ItemOrd ) )
			lExecLock := .F.
			bGetRd4	:= { |lLock,lExclu| IF( lExecLock , ( lLock := .T. , lExclu := .T. ) , aRd4Keys := NIL ),;
								 		aRd4Cols := RD4->(;
															GdBuildCols(	@aRd4Header		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																			@nRd4Usado		,;	//02 -> Numero de Campos em Uso
																			@aRd4VirtGd		,;	//03 -> [@]Array com os Campos Virtuais
																			@aRd4VisuGd		,;	//04 -> [@]Array com os Campos Visuais
																			"RD4"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																			aRd4NotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																			@aRd4Recnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
																			"RDK"		   	,;	//08 -> Alias do Arquivo Pai
																			cRDKKeySeek		,;	//09 -> Chave para o Posicionamento no Alias Filho
																			NIL				,;	//10 -> Bloco para condicao de Loop While
																			NIL				,;	//11 -> Bloco para Skip no Loop While
																			NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols
																			NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																			NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																			NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																			aRd4Query		,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																			.F.				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																			.F.				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																			.F./*Altera*/	,;	//19 -> Carregar Coluna Fantasma
																			NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																			NIL				,;	//21 -> Verifica se Deve verificar se o campo eh usado
																			NIL				,;	//22 -> Verifica se Deve verificar o nivel do usuario
																			NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																			@aRd4Keys  		,;	//24 -> [@]Array que contera as chaves conforme recnos
																			@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																			@lExclu			,;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																			nRd4MaxLocks	,;	//27 -> Numero maximo de Locks a ser efetuado
																				.F./*Altera*/			 ;	//28 -> Utiliza Numeracao na GhostCol
																	    );
														  ),;
										IF( lExecLock , ( lLock .and. lExclu ) , .T. );
			  		    }
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			ЁLock do Registro do RD4									   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF !( lLocks := WhileNoLock( "RD4" , NIL , NIL , 1 , 1 , .T. , nRd4MaxLocks , 5 , bGetRd4 ) )
				Break
			EndIF

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			ЁColoca o Ponteiro do Mouse em Estado de Espera			 	   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			CursorWait()

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			ЁInicializa o Ultimo Valor do RD4_ITEM   				   	   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF (;
					Empty( Rd4ItemGet() );
					.or.;
					Empty( StrTran( Rd4ItemGet() , "0" , "" ) );
				)
				Rd4ItemSet( GdFieldGet( "RD4_ITEM" , Len( aRd4Cols ) , .F. , aRd4Header , aRd4Cols ) )
			EndIF

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			ЁMonta Bloco para Sort antes da Gravacao					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF ( ( nRd4GhostCol := GdFieldPos( "GHOSTCOL" , aRd4Header ) ) > 0 )
				bRd4Sort := { |x,y| ( x[ nRd4GhostCol ] < y[ nRd4GhostCol ] ) }
			Else
				nRd4GhostCol := GdFieldPos( "RD4_ITEM" , aRd4Header )
				bRd4Sort := { |x,y| ( x[ nRd4GhostCol ] < y[ nRd4GhostCol ] ) }
			EndIF

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Salva o Conteudo do RD4aCols para comparacao na saida		   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aSvRd4Cols	:= aClone( aRd4Cols )

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Carrega os Campos Editaveis para a GetDados				   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			For nLoop := 1 To nRd4Usado
				SetMemVar( aRd4Header[ nLoop , 02 ] , GetValType( aRd4Header[ nLoop , 08 ] , aRd4Header[ nLoop , 04 ] ) , .T. )
			Next nLoop

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Carregando campos Alteraveis e Editavies					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			AAdd(aRd4VisuGd, "RD4_DESC")
			MkArrEdFlds( nOpc , aRd4Header , aRd4VisuGd , aRd4VirtGd , @aRd4GdNaoAlt , @aRd4GdAltera )

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			ЁVerifica se Pode Efetuar a Delecao dos Registros			   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF ( nOpc == 5 )
				cMsgYesNo	:= OemToAnsi(;
											STR0019 + ;	//"O sistema ir═ efetuar a verifica┤└o para ver se o registro selecionado"
											CRLF	+ ;
											STR0020 + ;	//"para exclus└o est═ sendo utilizado. A verifica┤└o pode ser demorada."
											CRLF	+ ;
											CRLF	+ ;
											STR0021	  ;	//"Confirma a exclus└o?"
										 )
				cTitLog		:= OemToAnsi( STR0022 )	//'Log de verifica┤└o de exclus└o'
				CursorArrow()
				IF ( MsgYesNo( OemToAnsi( cMsgYesNo ) , cCadastro + " - " + OemToAnsi( cTitLog ) ) )
					CursorWait()
					nRd4PosItem := GdFieldPos( "RD4_ITEM" , aRd4Header )
					RD4->( dbSetOrder( nRd4ItemOrd ) )
					nLoops := Len( aRd4Recnos )
					For nLoop := 1 To nLoops
							IF !( ApdChkDel( "RD4" , aRd4Recnos[ nLoop ] , nOpc , ( cCodRDK + aRd4Cols[ nLoop , nRd4PosItem ] ) , .F. , @aLog , @aLogTitle , { "RD4", "RCD", "RAR", "RAQ" } ) )
							aAdd( aLogGer , aClone( aLog ) )
							aAdd( aLogGerTitle , aLogTitle[1] )
						EndIF
					Next nLoop
					IF !( lExcGeraLog := !Empty( aLogGer ) )
							IF !( ApdChkDel( cAlias , nReg , nOpc , cCodRDK , .F. , @aLog , @aLogTitle , { "RD4", "RCD", "RAR", "RAQ" } ) )
							aAdd( aLogGer , aClone( aLog ) )
							aAdd( aLogGerTitle , aLogTitle[1] )
						EndIF
					EndIF

					IF ( lExcGeraLog := !Empty( aLogGer ) )
						CursorArrow()
						//"Deseja gerar Log?"
						IF ( lExcGeraLog := MsgNoYes( STR0025 , cCadastro + " - " + OemToAnsi( cTitLog ) ) )
							CursorWait()
								//"Log de Inconsistencia na Exclusao de Visoes"
								fMakeLog( aLogGer , aLogGerTitle , NIL , NIL , FunName() , STR0015 )
							CursorArrow()
						Else
							//"A chave a ser excluida est═ sendo utilizada."
							//"At┌ que as refer┬ncias a ela sejam eliminadas a mesma n└o pode ser excluida."
							MsgInfo( OemToAnsi( STR0023 + CRLF + STR0024 ) , cCadastro + " - " + OemToAnsi( cTitLog ) )
						EndIF
						Break
					EndIF
				Else
					Break
				EndIF
				CursorWait()
			EndIF

			// Carrega Informacoes para Replica
			If lReplicar
			   fMtaReplica( @aRd4Cols )
			EndIf

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta as Dimensoes dos Objetos         					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			DEFAULT lDlgPadSiga	:= .F.
			aAdvSize		:= MsAdvSize( NIL , lDlgPadSiga )
			aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
			aAdd( aObjCoords , { 000 , 072 , .T. , .F. } )
			aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
			aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Define o Botao de Pesquisa na GetDados					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			bGdRd4Seek := { ||	GdRd4Seek( oGdRd4 ),;
								SetKey( VK_F4 , bGdRd4Seek );
					   }
			aAdd(;
					aButtons	,;
									{;
										"PMSPESQ",;
			   							bGdRd4Seek,;
			       	   					OemToAnsi( STR0001 + "...<F4>"  ),;	//"Pesquisar"
			       	   					OemToAnsi( STR0001 );				//"Pesquisar"
			           				};
			     )

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Define o Botao de Carga dos Dados 						   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			If ( nOpc != 2 ) .And. ( nOpc != 5 )
				bGdRd4Car  := { ||	GdRd4Carga( oGdRd4 ),;
									SetKey( VK_F5 , bGdRd4Car );
						   }
				aAdd(;
						aButtons	,;
										{;
											"OPEN",;
				   							bGdRd4Car,;
				       	   					OemToAnsi( STR0026 + "...<F5>"  ),;	//"Carregar Dados"
				       	   					OemToAnsi( STR0026 );				//"Carregar"
				           				};
				     )
			Endif

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Define o Bloco para a Tecla <CTRL-O> 						   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			bSet15		:= { || IF(;
										(;
												( nOpc == 3 );	//Inclusao
												.or.;
												( nOpc == 4 );	//Alteracao
										 );
										.and.;
										Orga060TEncOk( nOpc , oEnRdk );
										.and.;													//Valida Todos os Campos da Enchoice
										IF(;
											!ArrayCompare( aSvRd4Cols , oGdRd4:aCols ),;
											oGdRd4:TudoOk(),;									//Valida as Informacoes da GetDados
											.T.;
										  ),;
										(;
											nOpcAlt		:= 1 ,;
											aRd4Cols	:= oGdRd4:aCols,;						//Redireciona o Ponteiro do aRd4Cols
											RestKeys( aSvKeys , .T. ),;
											oDlg:End();
									 	),;
									 	IF(;
									 		(;
									 			( nOpc == 3 );	//Inclusao
									 			.or.;
									 			( nOpc == 4 );	//Alteracao
									 		) ,;
									 			(;
									 				nOpcAlt := 0 ,;
									 				.F.;
									 			 ),;
											(;
												nOpcAlt := IF( nOpc == 2 , 0 , 1 ) ,;			//Visualizacao ou Exclusao
												RestKeys( aSvKeys , .T. ),;
												oDlg:End();
									 		);
									 	  );
								   );
							 }
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Define o Bloco para a Teclas <CTRL-X>     	   			   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			bSet24		:= { || ( nOpcAlt := 0 , RestKeys( aSvKeys , .T. ) , oDlg:End() ) }

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Define o Bloco para o Init do Dialog						   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			If ( nOpc = 2 ) .Or. ( nOpc = 5 )
				bDialogInit := { ||;
										EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons ),;
										SetKey( VK_F4 , bGdRd4Seek  ),;
								}
			Else
				bDialogInit := { ||;
										EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons ),;
										SetKey( VK_F4 , bGdRd4Seek  ),;
										SetKey( VK_F5 , bGdRd4Car   ),;
								}
			Endif

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Restaura o Ponteiro do Cursor do Mouse                  	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		CursorArrow()

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta o Dialogo Principal para a Manutencao das Formulas	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0007 ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF GetWndDefault() PIXEL

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta o Objeto Enchoice para o RDK                      	   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			oEnRdk	:= MsmGet():New(	cAlias						,;
										nReg						,;
										If (lEstrutura , 2 , nOpc)	,;
										NIL							,;
										NIL		   					,;
										NIL		   					,;
										aRdkFields 					,;
										aObjSize[1] 				,;
										aRdkAltera 					,;
										NIL		   					,;
										NIL		   					,;
										NIL		  					,;
										oDlg	  					,;
										NIL		  					,;
										.F.		  					,;
										NIL		   					,;
										.F.		  					 ;
									)
			Rd4ChecaEmp()

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Valor DEFAULT nOpcNewGd									   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			DEFAULT nOpcNewGd := IF( ( ( nOpc == 2 ) .or. ( nOpc == 5 ) ) , 0 , GD_INSERT + GD_UPDATE + GD_DELETE )

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta o Objeto GetDados para o RD4						   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			oGdRd4	:= MsNewGetDados():New(	aObjSize[2,1]												,;
											aObjSize[2,2]												,;
											aObjSize[2,3]												,;
											aObjSize[2,4]												,;
											nOpcNewGd													,;
											"ORG060LinOk"												,;
											"ORG060TudOk"												,;
											""															,;
											aRd4GdAltera												,;
											0															,;
											Val(Replicate("9",GetSx3Cache("RD4_ITEM","X3_TAMANHO")))	,;
											NIL															,;
											NIL															,;
											bRd4GdDelOk													,;
											oDlg														,;
											aRd4Header													,;
											aRd4Cols		 							 				 ;
										  )

		oGdRd4:bChange := {|x| MudaLinha()}
		ACTIVATE MSDIALOG oDlg ON INIT Eval( bDialogInit )


		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Coloca o Ponteiro do Mouse em Estado de Espera			   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		CursorWait()

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁQuando Confirmada a Opcao e Nao for Visualizacao Grava ou   ExЁ
		Ёclui as Informacoes do RDK e RD4							   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF( nOpcAlt == 1 )
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Apenas se nao For Visualizacao              				   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	 		IF ( nOpc != 2 )
				/*/
				здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				Ё Gravando/Incluido ou Excluindo Informacoes do SRY/RD4        Ё
				юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
				MsAguarde(;
							{ ||;
									aSort( aRd4Cols , NIL , NIL , bRd4Sort ),;	//Sorteia as Informacoes do RD4 para Comparacao Antes da Gravacao
									Orga060Grava(	nOpc		,;	//Opcao de Acordo com aRotina
								 					nReg		,;	//Numero do Registro do Arquivo Pai ( RDK )
								 					aRdkHeader	,;	//Campos do Arquivo Pai ( RDK )
								 					aRdkCols	,;	//Conteudo Atual dos Campos do Arquivo Pai ( RDK )
								 					aSvRdkCols  ,;	//Conteudo Anterior dos Campos do Arquivo Pai ( RDK )
								 					aRdkVirtEn	,;	//Campos Virtuais do Arquivo Pai ( RDK )
								 					aRd4Header	,;	//Campos do Arquivo Filho ( RD4 )
								 					aRd4Cols	,;	//Itens Atual do Arquivo Filho ( RD4 )
								 					aSvRd4Cols	,;	//Itens Anterior do Arquivo Filho ( RD4 )
								 					aRd4VirtGd	,;	//Campos Virtuais do Arquivo Filho ( RD4 )
								 					aRd4Recnos	 ;	//Recnos do Arquivo Filho ( RD4 )
								  				);
							};
						)
			EndIF
		Else
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё RollBack da Numeracao Automatica            				   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			While ( GetSX8Len() > nGetSX8Len )
				RollBackSX8()
			End While
		EndIF

	End Sequence


	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Coloca o Ponteiro do Mouse em Estado de Espera			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorWait()

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLibera os Locks             								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdd( aFreeLocks , { "RDK" , aRdkRecnos , aRdkKeys } )
	//aAdd( aFreeLocks , { "RD4" , aRd4Recnos , aRd4Keys } )	// 04/01/2013 - Retirado processamento pois o RD4 nao teve seus registros bloqueados - By Adilson Silva
	ApdFreeLocks( aFreeLocks )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁRestaura os Dados de Entrada								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	RestArea( aArea )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Restaura as Teclas de Atalho                				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	RestKeys( aSvKeys , .T. )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Restaura o Ponteiro do Cursor do Mouse                  	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorArrow()

Return nOpcAlt

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁOrga060TEncOkЁAutorЁMarinaldo de Jesus    Ё Data Ё18/06/2002Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁTudoOk para a Enchoice                                      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁOrga060TEncOk( nOpc , oEnRdk )								Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁOrga060()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Orga060TEncOk( nOpc , oEnRdk )
	Local lTudoOk := .T.

	IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		lTudoOk := EnchoTudOk( oEnRdk )
	EndIF
Return lTudoOk

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁOrga060Grava ЁAutorЁMarinaldo de Jesus    Ё Data Ё21/07/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁOrga060()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Orga060Grava(	nOpc		,;	//Opcao de Acordo com aRotina
							 	nReg		,;	//Numero do Registro do Arquivo Pai ( RDK )
							 	aRdkHeader	,;	//Campos do Arquivo Pai ( RDK )
							 	aRdkCols	,;	//Conteudo Atual dos Campos do Arquivo Pai ( RDK )
							 	aSvRdkCols  ,;	//Conteudo Anterior dos Campos do Arquivo Pai ( RDK )
							 	aRdkVirtEn	,;	//Campos Virtuais do Arquivo Pai ( RDK )
							 	aRd4Header	,;	//Campos do Arquivo Filho ( RD4 )
							 	aRd4Cols	,;	//Itens Atual do Arquivo Filho ( RD4 )
							 	aSvRd4Cols	,;	//Itens Anterior do Arquivo Filho ( RD4 )
							 	aRd4VirtGd	,;	//Campos Virtuais do Arquivo Filho ( RD4 )
							 	aRd4Recnos	 ;	//Recnos do Arquivo Filho ( RD4 )
							  )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aMestre	:= GdPutIStrMestre( 01 )
Local aItens	:= {}
Local cOpcao	:= IF( ( nOpc == 5 ) , "DELETE" , IF( ( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) , "PUT" , NIL ) )
Local lAllModif	:= .F.
Local lRdkModif	:= .F.
Local lRd4Modif	:= .F.
Local lRd4Delet	:= .F.
Local nPosRecNo	:= aScan(aRd4Header, { |aTemp| IsHeadRec( aTemp[__AHEADER_FIELD__] ) } )
Local oLstRD4:= ArrayList():New()

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aRd4ColDel:= {}
Local aRd4RecDel:= {}
Local nLoop
Local nLoops
Local nItens

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Altera o Estado do Cursor  								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorWait()

	IF ( cOpcao <> "DELETE" )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Verifica se Houveram Modificacoes no RDV					   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lRd4Modif := !ArrayCompare( aRd4Cols , aSvRd4Cols ) )
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Deleto todos os Itens que nao Estao OK					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			GdSuperDel( aRd4Header , @aRd4Cols , NIL , .T. , GdGetBlock( "RD4" , aRd4Header , .F. ) )
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Separa os Itens que foram Deletados     					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			lRd4Delet := GdSplitDel( aRd4Header , @aRd4Cols , @aRd4Recnos , @aRd4ColDel , @aRd4RecDel  )
		EndIF
	Else
		lRd4Modif := .T.
		lRdkModif := .T.
	EndIF

	oLstRD4:AddRange(aRd4Cols)
	oLstRD4:AddRange(aRd4ColDel)
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega os Itens Apenas se Houveram Alteracoes ou na ExclusaoЁ
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF lRd4Modif
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Carrega as Informacoes deletadas RD4                   	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lRd4Delet )
			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )

			aItens[ nItens , 01 ] := "RD4"
			aItens[ nItens , 02 ] := NIL
			aItens[ nItens , 03 ] := aClone( aRd4Header )
			aItens[ nItens , 04 ] := aClone( aRd4ColDel )
			aItens[ nItens , 05 ] := aClone( aRd4VirtGd )
			aItens[ nItens , 06 ] := aClone( aRd4RecDel )
		EndIF


		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Carrega as Informacoes do RD4                   			   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aAdd( aItens , GdPutIStrItens() )
		nItens := Len( aItens )
		aItens[ nItens , 01 ] := "RD4"
		aItens[ nItens , 02 ] := {;
									{ "FILIAL" , xFilial( "RD4" , xFilial( "RDK" ) ) },;
									{ "CODIGO" , GetMemVar( "RDK_CODIGO" ) };
							 	 }
		aItens[ nItens , 03 ] := aClone( aRd4Header )
		aItens[ nItens , 04 ] := aClone( aRd4Cols   )
		aItens[ nItens , 05 ] := aClone( aRd4VirtGd )
		aItens[ nItens , 06 ] := aClone( aRd4Recnos )
		aItens[ nItens , 07 ] := {}
	EndIF

	IF !( lRdkModif )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Atualiza aRdkCols para Verificar se Houveram Alteracoes	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		nLoops := Len( aRdkHeader )
		For nLoop := 1 To nLoops
			aRdkCols[ 01 , nLoop ] := GetMemVar( aRdkHeader[ nLoop , 02 ] )
		Next nLoop
		lRdkModif := !( ArrayCompare( aRdkCols , aSvRdkCols ) )
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Seta a Gravacao ou Exclusao Apenas se Houveram Alteracoes  ouЁ
	Ё se foi Selecionada a Exclusao								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
 	lAllModif := ( ( lRd4Modif ) .OR. ( lRdkModif ) )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Se Houveram Alteracoes, ou Exclusao efetua a Gravacao        Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lAllModif )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Seta a Gravacao ou Exclusao Apenas se Houveram Alteracoes  ouЁ
		Ё se foi Selecionada a Exclusao								   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aMestre[ 01 , 01 ]	:= "RDK"
		aMestre[ 01 , 02 ]	:= nReg
		aMestre[ 01 , 03 ]	:= lRdkModif
		aMestre[ 01 , 04 ]	:= aClone( aRdkHeader )
		aMestre[ 01 , 05 ]	:= aClone( aRdkVirtEn )
		aMestre[ 01 , 06 ]	:= {}
		aMestre[ 01 , 07 ]	:= aClone( aItens )


		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Grava as Informacoes                        				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		GdPutInfoData( aMestre , cOpcao , .F. , .F. )
		PutHistoryData(oLstRD4:ToArray(), aSvRd4Cols ,aRd4Header)

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Confirmando a Numeracao Automatica          				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		While ( GetSX8Len() > nGetSX8Len )
			ConfirmSX8()
		End While
	EndIF

	// Record of field RD4_HIERAR on Insert
	If ( cPaisLoc == "RUS" ) .And. ( cOpcao == "PUT" )
		fRd4HrRUS()
	EndIf
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Restaura o Estado do Cursor								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorArrow()
Return

/*/
зддддддддддбддддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁPutHistoryDataЁAutorЁRogerio Ribeiro 	   Ё Data Ё27/09/2007Ё
цддддддддддеддддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁGrava as alteracoes feitas na visao na tabela de historico	 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁORGA060()	                                                 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function PutHistoryData(aNewRows, aOldRows, aColumns)
	Local nPosRecNo	:= aScan(aColumns , { |aTemp| IsHeadRec( aTemp[__AHEADER_FIELD__] ) } )
	Local nPosCodIt := aScan(aColumns , { |aTemp| aTemp[__AHEADER_FIELD__] == "RD4_ITEM" } )
	Local aRowAux
	Local lInclusao, lExclusao
	Local cOperation
	Local nRow, nCol, nField, cFieldName
	Local xValue
	Local nHoraHis	:= Val(SubStr(StrTran(Time(), ":", "."), 1, 5))
	Local aArea 	:= GetArea()

	For nRow:= 1 To Len(aNewRows)
		aRowAux		:= aNewRows[nRow]

		// Ajuste na variavel lInclusao para tratar o aumento de linhas do novo vetor em relacao
		// ao original para nao gerar array out of bounds na comparacao entre os elementos. Esta
		// acao eh devida ao incluir um registro com sequencia que entrara no meio do vetor e nao
		// no final do vetor.
		lInclusao	:= aRowAux[nPosRecNo] == 0 .OR. aRowAux[nPosRecNo] == NIL .or. Len(aOldRows) < Len(aNewRows)
		lExclusao	:= ATail(aRowAux)

		If lInclusao .AND. !lExclusao			//Inclusao
			cOperation:= "1"
		ElseIf !lInclusao .AND. !lExclusao		//Alteracao

			If ArrayCompare(aRowAux, aOldRows[nRow]); Loop; EndIf

			cOperation:= "2"
		ElseIf lExclusao .AND. !lInclusao		//Exclusao
			cOperation:= "3"
		Else
			Loop
		EndIf

		If (cOperation == "1")
			RD4->(DBSeek(xFilial("RD4") + RDK->RDK_CODIGO + aRowAux[nPosCodIt] ))
		Else
			If (cOperation == "3")
				SET DELETED OFF
			EndIf

			RD4->(DBGoTo(aRowAux[nPosRecNo]))
		EndIf

		DbSelectArea("RCD")
		RCD->(DBSetOrder(1))  //RCD_FILIAL, RCD_CODIGO, RCD_ITEM, RCD_DATA, RCD_HORA, RCD_OPERAC

		If RCD->(DBSeek( RD4->(RD4_FILIAL+RD4_CODIGO+RD4_ITEM+DTOS(dDataBase)+STR(nHoraHis, 5, 2) + cOperation)  )  )
			RecLock("RCD", .F.)
		Else
			RecLock("RCD", .T.)
		EndIf

		RCD->RCD_DATA	:= dDataBase
		RCD->RCD_HORA	:= nHoraHis
		RCD->RCD_OPERAC	:= cOperation

		For nCol:= 1 To RD4->(FCount())
			cFieldName:= RD4->(StrTran(FieldName(nCol), "RD4", "RCD"))

			If cFieldName $ "RCD_DATA/RCD_HORA/RCD_OPERAC/RCD_STATUS"
				Loop
			EndIF

			nField:= RCD->(FieldPos(cFieldName))
			xValue:= RD4->(FieldGet(nCol))

			RCD->(FieldPut(nField, xValue))
		Next

		MsUnLock()

		If (cOperation == "3")
			SET DELETED ON
		EndIf
	Next

	RestArea( aArea )
Return


/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁOrg060Tree   ЁAutorЁMarinaldo de Jesus    Ё Data Ё21/07/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁOrga060()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Org060Tree( cAlias , nReg , nOpc , bRd4TreeDelOk )
	Local aComplDesc		:= {}
	Local aDbTreeInfo		:= {}
	Local oTree
	Local bPesquisa			:= {|| CursorWait() , Org60Pesq(oTree), CursorArrow()}
	Local bRd4TreeAddItem 	:= { |cLastItemNum| Rd4TreeAddItem( cAlias , nReg , cLastItemNum ) }
	Local bRD4Permit        := {|| .T.}
	Local bTreeDbClick		:= {|| CursorWait() , Org60LstFun(oTree), CursorArrow() }
    Local aFieldDados		:= {}
	Local cBloco			:=''

	Local cHierarchy
	Local cFilRDK			:= xFilial("RDK")
	Local cKeyFilter		:= ""
	Local nOrderItem		:= RetOrdem( "RD4" , "RD4_FILIAL+RD4_CODIGO+RD4_ITEM+RD4_TREE" )
	Local nOrderTree		:= RetOrdem( "RD4" , "RD4_FILIAL+RD4_CODIGO+RD4_TREE+RD4_ITEM" )
	Local lRet				:= .T.

	Private aChaves   := {}
	Private aDbTree

	//-- Array
	aFieldDados:= {"RD4_DESC", "RD4_EMPIDE", "RD4_FILIDE", "RD4_CODIDE" }

	RDK->( MsGoto( nReg ) )
	cKeyFilter	:= RDK->RDK_CODIGO
	cHierarchy	:= RDK->RDK_HIERAR
	bRD4Permit	:= Org060Perm(cFilRDK, cKeyFilter, cHierarchy)

		cBloco		:= "(AllTrim(RD4_CODIDE) + ' - ' + AllTrim(RD4_DESC)" + IIF(cHierarchy == "1", ")", " + ' (' + AllTrim(FDesc('SQB', FDesc('RCL', RD4_CODIDE, 'RCL_DEPTO', NIL, RD4_FILIDE, 2), 'QB_DESCRIC',NIL, RD4_FILIDE)) + ')')")
    //-- Igualamos o conteudo do RD4_DESC com ele mesmo para atender legado da funcao
    //-- ApdGrvSup (APDxTree) na qual a descricao eh gravada de qualquer jeito
    //-- Nao se deve igualar RD4_DESC := SETVAL, se nao sera gravada o codigo do departamento + descricao
    //-- e a estrutura ficara errada.
	cBloco		:= &('{|SETVAL| IF(SETVAL==NIL,RD4->(' + cBloco +'), RD4_DESC:= RD4_DESC )}')

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define aDbTreeInfo                                      	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aDbTreeInfo :=	{;
	 			    	{;
	 			    		cAlias,;				//01 , 01 -> Alias Mestre do Tree
	 			    		nReg,;					//01 , 02 -> Recno para o Posicionamento do Tree
	 			    		cFilRDK,;				//01 , 03 -> Filial para a Montagem do Tree
	 			    		cKeyFilter,;			//01 , 04 -> Chave para a Montagem do Tree
	 			    		"RDK_DESC",;			//01 , 05 -> Descricao do Tree
	 			    		{|| "NORMAS"},;
	 			    		{|| "NORMAS"};
	 			    	},;
	 			    	{;
	 			    		"RD4",;					//02 , 01 -> Alias Filho do Tree
	 			    		"RD4_ITEM",;			//02 , 02 -> Item
	 			    		nOrderItem,;			//02 , 03 -> Ordem do Item
	 			    		"RD4_TREE",;			//02 , 04 -> Tree (Grupo Superior)
	 			    		nOrderTree,;			//02 , 05 -> Ordem do Tree
	 			    		cBloco	,;				//02 , 06 -> Descricao do Item
	 			    		bRd4TreeDelOk,;			//02 , 07 -> Bloco para o DelOk
	 			    		"RD4SetPdFilter()",;	//02 , 08 -> Funcao Para Setar o Filtro
	 			    		NIL,;					//02 , 09 -> Bloco para Validar o Cut
	 			    		NIL,;					//02 , 10 -> Bloco para Get das Informacoes
	 			    		IIf(cHierarchy == "1", {|| 'BR_BRANCO'}, {|| 'BR_AMARELO'}),;//NIL,;					//02 , 11 -> Campo para Get do Resource1
	 			    		IIf(cHierarchy == "1", {|| 'BR_BRANCO'}, {|| 'BR_AMARELO'}),;//NIL,;					//02 , 12 -> Campo para Get do Resource2
	 			    		"RD4_FILIAL",;			//02 , 13 -> Campo de Filial
	 			    		"RD4_CODIGO",;			//02 , 14 -> Campo de Codigo
	 			    		bRd4TreeAddItem,;		//02 , 15 -> Bloco para Adicao de Novo Item
	 			    		IIf(cHierarchy == "1", "RD4SQB", "RD4RCL"),;					//02 , 16 -> Alias para a Consulta Padrao
	 			    		bRD4Permit,;             //02 , 17 -> Bloco para verificar a inclusao do node na Tree
	 			    		'BR_VERMELHO',;          //02 , 18 -> Resource 1 do cut
	 			    		'BR_VERMELHO',;          //02 , 19 -> Resource 2 do cut
	 			    		aFieldDados;			 //02 , 20 -> Campos Complementares
	 			    	};
	 			    }

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁMonta o Tree             												 Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	ApdBldTree( aDbTreeInfo , STR0007 ,,,,,,,,,,,,,{|| Org060MnuItEnable(cCargo) },bPesquisa,bTreeDbClick,@oTree,,@aDbTree,.F.,@lRet )	//"Vis■es"

Return lRet


/*/
зддддддддддбддддддддддддддбдддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4TreeAddItemЁAutorЁMarinaldo de Jesus   Ё Data Ё31/08/2004Ё
цддддддддддеддддддддддддддадддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Adicao de Novo Item no Tree                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁOrga060                    	                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Rd4TreeAddItem( cAlias , nReg , cLastItemNum )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSeta o Ultimo Numero Utilizado								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	Rd4ItemSet( cLastItemNum )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁExecuta a Rotina de Alteracao para Inclusao de Novos Itens	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	Orga060Alt( cAlias , nReg , GD_INSERT + GD_UPDATE )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLock do Registro do RDK									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	WhileNoLock( "RDK" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetRdk )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLock do Registro do RD4									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	WhileNoLock( "RD4" , NIL , NIL , 1 , 1 , .T. , 10 , 5 , bGetRd4 )
Return

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁGdRd4Seek	 ЁAutorЁMarinaldo de Jesus    Ё Data Ё08/01/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁEfetuar Pesquisa na GetDados                               	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁOrga060                                                		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function GdRd4Seek( oGdRd4 )
	Local aSvKeys 		:= GetKeys()
	Local cProcName3	:= Upper( AllTrim( ProcName( 3 ) ) )
	Local cProcName5	:= Upper( AllTrim( ProcName( 5 ) ) )

	Begin Sequence

		IF !( "ORGA060MNT" $ ( cProcName3 + cProcName5 ) )
			Break
		EndIF

		GdSeek( oGdRd4 , OemToAnsi( STR0001 ) )	//"Pesquisar"

	End Sequence

	RestKeys( aSvKeys , .T. )
Return

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁGdRd4Carga	 ЁAutorЁKelly Soares          Ё Data Ё20/09/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCarregar departamentos/postos para getdados.      			Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁOrga060                                                		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function GdRd4Carga( oGdRd4 )
Local aArea		:= GetArea()
Local nX
Local nCont		:= 0
Local cInicio	:= ""
Local cFim		:= ""
Local cFilIde	:= ""
Local cFilDe	:= ""
Local cFilAte	:= ""
Local cDepDe	:= ""
Local cDepAte	:= ""
Local cPosDe	:= ""
Local cPosAte	:= ""
Local cQuery	:= ""
Local cAliasQ	:= GetNextAlias()
Local cTipo		:= GetMemVar("RDK_HIERAR")
Local nTamCod	:= GetSx3Cache("RD4_CODIDE","X3_TAMANHO")
Local nUsado	:= Len(aRd4Header)
Local nRegs		:= Len(oGdRd4:aCols)
Local nItem		:= 0
Local nUltimo	:= 0
Local aEmptyCols
Local nPosDtStrt:= 0
Local nPosDtEnd := 0

	lCarga := Pergunte("ORGEMP", .T.)

	If !lCarga
		Return
	EndIf

	//зддддддддддддддддддддддддддддддддддд©
	//Ё Validacao da empresa selecionada  Ё
	//юддддддддддддддддддддддддддддддддддды
	If SM0->( dbSeek(MV_PAR01) )
		cEmpCar := MV_PAR01
		lCarga := .T.
	Else
		Aviso(STR0027, STR0032, {"Ok"}) //Atencao#"Informe uma empresa valida"
		Return
	EndIf

	Rd4ChecaEmp()

	lCarga := Pergunte(If(cTipo=="1","ORG60A","ORG60B"),.T.)

	If !lCarga
		Return
	Endif

	cFilDe	:= MV_PAR01
	cFilAte	:= MV_PAR02
	cDepDe	:= MV_PAR03
	cDepAte	:= MV_PAR04

	If cTipo == "1"
		If !Empty(cFilDe)
			cFilDe := xFilial("SQB",cFilDe)
		EndIf
		If !Empty(cFilAte) .and. cFilAte <> Replicate("Z",Len(cFilAte))
			cFilAte := xFilial("SQB",cFilAte)
		EndIf
 	Else
 		If !Empty(cFilDe)
			cFilDe := xFilial("RCL",cFilDe)
		EndIf
		If !Empty(cFilAte) .and. cFilAte <> Replicate("Z",Len(cFilAte))
			cFilAte := xFilial("RCL",cFilAte)
		EndIf
 	EndIf
	If cTipo == "2"
		cPosDe	:= MV_PAR05
		cPosAte	:= MV_PAR06
	EndIf

	If nRegs > 0 .AND. Empty(oGdRd4:aCols[nRegs][2] + oGdRd4:aCols[nRegs][3] + oGdRd4:aCols[nRegs][4] + oGdRd4:aCols[nRegs][5])
		If Len(oGdRd4:aCols) = 1
			aEmptyCols := AClone(oGdRd4:aCols)
			aDel(oGdRd4:aCols,1)
			aSize(oGdRd4:aCols,0)
			nRegs--
			nItem := 0
			nCont := nItem
		Else
			nUltimo := nRegs
			nCont	:= Len(oGdRd4:aCols)
			nItem   := Max(Val(oGdRd4:aCols[Len(oGdRd4:aCols),1]),Len(oGdRd4:aCols))
		Endif
	Else
		nCont	:= Len(oGdRd4:aCols)
		nItem := Max(Val(oGdRd4:aCols[Len(oGdRd4:aCols),1]),Len(oGdRd4:aCols))
	Endif

	If cTipo == "1"
		cQuery  := "SELECT DISTINCT "
		cQuery  +=		"QB_FILIAL AS FILIAL, "
		cQuery  +=		"QB_DEPTO AS CODIGO, "
		cQuery  +=		"QB_DESCRIC AS DESCRICAO "

		If cPaisLoc == "RUS"
			cQuery  +=	", "
			cQuery  +=	"QB_DTSTART AS DTSTART, "
			cQuery  +=	"QB_DTEND AS DTEND "
		EndIf

		cQuery  += "FROM "
		cQuery  +=		RetTableName("SQB", NIL, cEmpCar) + " SQB "


		cQuery  += "WHERE "
		IF !lShared
			cQuery  +=	"QB_FILIAL BETWEEN '" + cFilDe + "' AND '" + cFilAte + "' AND "
		EndIF
		cQuery  +=		"QB_DEPTO BETWEEN '" + cDepDe + "' AND '" + cDepAte + "' AND "
		cQuery  += 		"D_E_L_E_T_=' ' "
		cQuery  += "ORDER BY "
		cQuery  +=		"QB_FILIAL, "
		cQuery  +=		"QB_DEPTO, "
		cQuery  +=		"QB_DESCRIC "
	Else
		cQuery  := "SELECT DISTINCT "
		cQuery  +=		"RCL.RCL_FILIAL AS FILIAL, "
		cQuery  +=		"RCL.RCL_POSTO AS CODIGO, "
		cQuery  += 		"SQ3.Q3_DESCSUM AS DESCRICAO "
		cQuery  += "FROM "
		cQuery  += 		RetTableName("RCL", NIL, cEmpCar) + " RCL "
		cQuery  += "INNER JOIN " + RetTableName("SQ3", NIL, cEmpCar) + " SQ3 "
		cQuery  += "ON RCL.RCL_CARGO = SQ3.Q3_CARGO "
		cQuery  += " AND " + FWJoinFilial("RCL", "SQ3")


		cQuery  += "WHERE "
		IF !lShared
			cQuery  +=	"RCL.RCL_FILIAL BETWEEN '" + cFilDe + "' AND '" + cFilAte + "' AND "
		EndIf
		cQuery  +=		"RCL.RCL_DEPTO BETWEEN '" + cDepDe + "' AND '" + cDepAte + "' AND "
		cQuery  +=		"RCL.RCL_POSTO BETWEEN '" + cPosDe + "' AND '" + cPosAte + "' AND "
		cQuery  +=		"RCL.D_E_L_E_T_=' ' AND "
		cQuery  +=		"SQ3.D_E_L_E_T_=' ' "
		cQuery  += "ORDER BY "
		cQuery  +=		"RCL.RCL_FILIAL, "
		cQuery  +=		"RCL.RCL_POSTO, "
		cQuery  +=		"SQ3.Q3_DESCSUM "
	Endif

	cInicio := cAliasQ + "->(FILIAL+CODIGO)"
	cFim	:= cFilAte + cDepAte

	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQ,.T.,.T.)

	While !Eof()// .And. &cInicio <= cFim
		cFilIde := If(lShared,Space(FWGETTAMFILIAL),(cAliasQ)->FILIAL)

		nCont++
		nItem++
		aAdd(oGdRd4:aCols,Array(nUsado+1))
		oGdRd4:aCols[nCont][1] := StrZero(nItem, GetSx3Cache("RD4_ITEM","X3_TAMANHO"))
		oGdRd4:aCols[nCont][2] := cEmpCar
		oGdRd4:aCols[nCont][3] := cFilIde
		oGdRd4:aCols[nCont][4] := (cAliasQ)->CODIGO
		oGdRd4:aCols[nCont][5] := (cAliasQ)->DESCRICAO
		oGdRd4:aCols[nCont][6] := Space(GetSx3Cache("RD4_TREE", "X3_TAMANHO"))

		If cPaisLoc == "RUS"
			nPosDtStrt := GdFieldPos("RD4_DTSTAR" ,oGdRd4:aHeader)
			nPosDtEnd := GdFieldPos("RD4_DTEND" ,oGdRd4:aHeader)

			If nPosDtStrt <> 0 .AND. nPosDtEnd <> 0
				oGdRd4:aCols[nCont][nPosDtStrt] := SToD((cAliasQ)->DTSTART)
				oGdRd4:aCols[nCont][nPosDtEnd] := SToD((cAliasQ)->DTEND)
			EndIf
		EndIf

		If Altera
			oGdRd4:aCols[nCont][GdFieldPos( "RD4_ALI_WT"  , oGdRd4:aHeader )] := Space(10)
		Endif

		For nX:= 7 To Len(oGdRd4:aHeader)
			If oGdRD4:aHeader[nX][10] <> "V" .And. Empty(oGdRd4:aCols[nCont][nX]) // NЦo И virtual e vazio
				Do Case
					 Case ( oGdRD4:aHeader[nX][8] == "C" )
					 	oGdRd4:aCols[nCont][nX] 	:= Space(oGdRD4:aHeader[nX][4])
					 Case ( oGdRD4:aHeader[nX][8] == "D" )
					 	oGdRd4:aCols[nCont][nX]	:= CtoD("//")
					 Case ( oGdRD4:aHeader[nX][8] == "N" )
					 	oGdRd4:aCols[nCont][nX] := 0
				End Case
			EndIf
		Next

		oGdRd4:aCols[nCont][Len(oGdRd4:aCols[nCont])] := .F.

		DbSkip()
	End



	If Len(oGdRd4:aCols) == 0
		oGdRd4:aCols:= AClone(aEmptyCols)
	EndIf

	If !Empty(nUltimo)
		oGdRd4:aCols[nUltimo][1] := StrZero(nItem+1,GetSx3Cache("RD4_ITEM","X3_TAMANHO"))
	Endif

	aSort( oGdRd4:aCols ,,, { |x,y| x[1] < y[1] } )

	For nX:= 1 To Len(oGdRd4:aHeader)
		SetMemVar(oGdRd4:aHeader[nX, __AHEADER_FIELD__], oGdRd4:aCols[1, nX])
	Next

	(cAliasQ)->(DbCloseArea())

	If lEmpDif
		SQB->(DbCloseArea())
		SQ3->(DbCloseArea())
		RCL->(DbCloseArea())
	Endif

	lCarga := .F.

	RestArea(aArea)
Return

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4SetFil    ЁAutorЁKelly Soares          Ё Data Ё21/09/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁDefine filial utilizada na consulta padrao, de acordo com 	Ё
Ё          Ёfilial indicada para o identificador.                     	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁConsulta padrao SQBORG/RCLORG	                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4SetFil()
Local xReturn
Local cFunName := FunName()
Local cTipo    := GetMemVar("RDK_HIERAR")
Local oModel	:= Nil
Local oModelTMP	:= Nil

	if cFunName $ "TRMA100/GPEA010/GPEA180/GPEA265/RSPM001"
		If Type("M->RA_DEPTO") == "U" .And. Type("cDptoAte") <> "U"
			M->RA_DEPTO := cDptoAte
		Else
			M->RA_DEPTO := If(!Empty(M->RA_DEPTO), M->RA_DEPTO, "")
		Endif
		xReturn := xFilial("RCL") + IIF(!Empty(M->RA_DEPTO), M->RA_DEPTO, "")
    ElseIf cPaisLoc == "RUS" .And. cFunName $ 'RU07T03'
		oModel := FwModelActive()
		oModelTMP := oModel:GetModel("TMPDETAIL")
		xReturn := xFilial("RCL") +IIF(!Empty(oModelTMP:GetValue("DEPARTMENT")), oModelTMP:GetValue("DEPARTMENT"), "")
	Else
      xReturn := GetMemVar( "RD4_FILIDE" )
      If cTipo == "1"
         xReturn := xFilial('SQB', GetMemVar( "RD4_FILIDE" ) )
      Else
         xReturn := xFilial('RCL', GetMemVar( "RD4_FILIDE" ) )
      EndIf
	EndIf

Return xReturn

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4SetFilCar ЁAutorЁKelly Soares          Ё Data Ё06/10/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁDefine filial utilizada na consulta padrao, de acordo com 	Ё
Ё          Ёfilial indicada para o identificador.                     	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcPar = Numero do MVPAR referente a filial					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁConsulta padrao SQBCAR/RCLCAR	                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4SetFilCar(cPar)
	Local xReturn:= &("MV_PAR" + cPar)
Return xReturn

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4FiltraFil ЁAutorЁKelly Soares          Ё Data Ё21/09/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFiltra filiais da empresa indicada para o identificador.    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_F3 do campo RD4_FILIDE		                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4FiltraFil()
	Local cFiltro := ""
	Local cRet	  := ""

	If lCarga
		cFiltro := cEmpCar
	Else
		cFiltro := GetMemVar( "RD4_EMPIDE" )
	Endif

	cRet := "@#SM0->M0_CODIGO == '" + cFiltro + "'@#"
Return cRet

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4RetBlank  ЁAutorЁKelly Soares          Ё Data Ё04/10/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁRetorna espacos em branco para filial, quando selecionada a Ё
Ё          Ёempresa, e para o codigo, quando selecionada a filial, para Ё
Ё          Ёlimpar o que ja possa estar preenchido.                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁConsulta padrao RD4EMP/RD4FIL	        					Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4RetBlank()
	Local cRet  := ""
	Local cCons := SXB->XB_ALIAS

	If "EMP" $ cCons
		cRet := Space(2)
	Elseif "FIL" $ cCons
		cRet := Space(20)
	Endif
Return cRet

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4EmpIdeVld ЁAutorЁKelly Soares          Ё Data Ё26/09/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValida o conteudo do campo EMPRESA DO IDENTIFICADOR.        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RD4_EMPIDE                         		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4EmpIdeVld()
	Local lVazio:= Vazio()
	Local lRd4EmpresaOk:= lVazio .OR. (NaoVazio() .And. ExistCpo("SM0"))

	If lRd4EmpresaOk .AND. !lVazio
		lRd4EmpresaOk := Rd4ChecaEmp()
	EndIf

Return lRd4EmpresaOk

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4RetFil    ЁAutorЁKelly Soares          Ё Data Ё29/09/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁRetorna a filial referente a empresa+filial selecionada na	Ё
Ё          Ёconsulta padrao.                                          	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁConsulta padrao RD4EMP			        					Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4RetFil()
	Local cRet  := ""

	If lCarga
		cRet := FWGETCODFILIAL
		MV_PAR02 := cRet
	Else
		Rd4RetBlank()
	Endif

	Rd4RetBlank()

	lF3 := .T.
Return cRet

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4FilIdeVld ЁAutorЁKelly Soares          Ё Data Ё26/09/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValida oconteudo do campo FILIAL DO IDENTIFICADOR.          Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RD4_FILIDE                         		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4FilIdeVld()
	Local lRd4FilialOk := .T.

	If lShared
		If !Empty(M->RD4_FILIDE)
			Aviso(oEmToAnsi(STR0027),oEmToAnsi(STR0028),{"OK"}) // Atencao ## Nao e necessario informar a FILIAL,
			Return (.F.)										//            pois o arquivo de identificadores esta em modo compartilhado.
		EndIf
	Else
		If NaoVazio() .And. lF3
			lF3 := .F.
			lRd4FilialOk := ExistCpo("SM0" , GetMemVar( "RD4_EMPIDE" ) + SM0->M0_CODFIL )
		Endif
	Endif

	If lRd4FilialOk
		Rd4ChecaEmp()
	Endif
Return lRd4FilialOk

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4F3Ident   ЁAutorЁKelly Soares          Ё Data Ё26/09/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁExecuta a consulta padrao equivalente ao tipo da visao.     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_F3 do campo RD4_CODIDE					               	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4F3Ident()
Local lRet			:= .F.
Local cTipo			:= GetMemVar("RDK_HIERAR")
Local cFilIDE		:= If(Type("oGdRd4") != "U",GdFieldGet("RD4_FILIDE"),GetMemVar("RD4_FILIDE"))
Local cRd4EmpIDE	:= If(Type("oGdRd4") != "U",GdFieldGet("RD4_EMPIDE"),GetMemVar("RD4_EMPIDE"))
Local cRetCons		:= ""

	IF cFilIDE <> GetMemVar("RD4_FILIDE")
		SetMemVar("RD4_FILIDE", cFilIDE)
	Endif

	If Type("lShared") == 'U'
		_SetOwnerPrvt( 'lShared', .F. )
	EndIf

	Rd4ChecaEmp(cRd4EmpIDE)

	If !lShared .and. Empty(cFilIDE) .And. !VISUAL
		Aviso(oEmToAnsi(STR0027), oEmToAnsi(STR0035), {"OK"}) //Informe primeiro a filial
		Return lRet
	EndIF

	If cTipo == "1"
		cCons := "SQBORG"
		cRetCons := "SQB->QB_DEPTO"
		DbSelectArea("SQB")
		DbSetOrder(1)
	Else
		cCons := If(cPaisLoc == "RUS","RCLRUS","RCLORG")
		cRetCons := "RCL->RCL_DEPTO"
		DbSelectArea("RCL")
		DbSetOrder(RetOrder("RCL", "RCL_FILIAL+RCL_POSTO"))
		DbSelectArea("SQ3")
		DbSetOrder(1)
	EndIf

	lRet := Conpad1(NIL, NIL, NIL, cCons, NIL, NIL, .F.)
	lF3  := lRet

	if lRet
		__xValueRet  := &cRetCons
	Endif

	If lEmpDif .And. !lRet
		SQB->(DbCloseArea())
		SQ3->(DbCloseArea())
		RCL->(DbCloseArea())
		lClosed := .T.
	EndIf
Return lRet


/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4CodIdeVld ЁAutorЁKelly Soares          Ё Data Ё26/09/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValida o conteudo do campo CODIGO DO IDENTIFICADOR.         Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRd4CodIdeVld												Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RD4_CODIDE                         		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4CodIdeVld()
Local aArea			:= GetArea()
Local cTipo			:= GetMemVar("RDK_HIERAR")
Local cIdent		:= If(cTipo=="1","SQB","RCL")
Local cFilIde		:= GetMemVar("RD4_FILIDE")
Local nIndice		:= If(cTipo=="1", 1, 2)
Local nPosDesc		:= GdFieldPos("RD4_DESC", aRd4Header)
Local nPosDtStrt	:= 0
Local nPosDtEnd		:= 0
Local cRd4EmpIDE	:= oGdRd4:aCols[n][GdFieldPos("RD4_EMPIDE",aRd4Header)]
Local lRd4IdentOk	:= .T.
Local cCodIde		:= SubStr(GetMemVar("RD4_CODIDE"), 1, GetSx3Cache(If(cTipo=="1", "QB_DEPTO", "RCL_POSTO"), "X3_TAMANHO"))

	Rd4ChecaEmp(cRd4EmpIDE)

	DbSelectArea(cIdent)
	DbSetOrder(nIndice)

	lRd4IdentOk := Vazio() .Or. ( NaoVazio() .And. DbSeek(xFilial(Alias(), cFilIde) + cCodIde))

	If lRd4IdentOk
		oGdRd4:aCols[n][nPosDesc] := Rd4RetDesc(1)
		If cPaisLoc == "RUS"
			nPosDtStrt := GdFieldPos("RD4_DTSTAR", aRd4Header)
			nPosDtEnd := GdFieldPos("RD4_DTEND", aRd4Header)
			oGdRd4:aCols[n][nPosDtStrt] := Rd4RetDesc(2)
			oGdRd4:aCols[n][nPosDtEnd] := Rd4RetDesc(3)
		EndIf
	Else
		GDFieldPut("RD4_EMPIDE", Space(GetSx3Cache("RD4_EMPIDE", "X3_TAMANHO")))
		SetMemVar("RD4_EMPIDE", Space(GetSx3Cache("RD4_EMPIDE", "X3_TAMANHO")))
		GDFieldPut("RD4_DESC", Space(GetSx3Cache("RD4_DESC", "X3_TAMANHO")))
		SetMemVar("RD4_DESC", Space(GetSx3Cache("RD4_DESC", "X3_TAMANHO")))
		GDFieldPut("RD4_CODIDE", Space(GetSx3Cache("RD4_CODIDE", "X3_TAMANHO")))
		SetMemVar("RD4_CODIDE", Space(GetSx3Cache("RD4_CODIDE", "X3_TAMANHO")))
		HELP(" ",1,"REGNOIS")
	Endif


	If Empty(cRd4EmpIDE)
		MsgInfo( OemToAnsi(STR0038), OemToAnsi(STR0027) ) //"E necessАrio informar um cСdigo de empresa!"/"AtenГЦo"
		oGdRd4:aCols[n][nPosDesc] := ""
		lRd4IdentOk := .F.
	EndIf

	If lEmpDif .and. lRd4IdentOk
		lClosed := .T.
	Endif


	RestArea(aArea)
Return lRd4IdentOk

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4RetDesc   ЁAutorЁKelly Soares          Ё Data Ё26/09/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁRetorna a descricao do cargo como descricao do posto sele-  Ё
Ё          Ёcionado ( visao do tipo 2 - comunicacao ).                  Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRdaRetDesc()              									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁConsulta padrao RCLORG   					               	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4RetDesc(nFieldType)
Local aArea		:= GetArea()
Local cFil		:= GetMemVar("RD4_FILIDE")
Local cTipo		:= GetMemVar("RDK_HIERAR")
Local cChave	:= ""
Local cChaveAux	:= ""
Local cRet		:= ""
Local cFunName	:= FunName()

/*nFieldType - parameter is used for RUS localization.
It can take one of the values: 1, 2 or 3.
1 - function should return value of QB_DESCRIC field. Default value.
2 - function should return value of QB_DTSTAR field.
3 - function should return value of QB_DTEND field. */
Default nFieldType 	:= 1

	If cFunName $ "RSPM001" .OR. Type("lShared") == 'U'
		_SetOwnerPrvt( 'lShared', .F. )
	EndIf

	if cFunName $ "TRMA100/GPEA010/GPEA180"
		cRet:= FDesc("SQ3", RCL->RCL_CARGO, "Q3_DESCSUM")
	Elseif cPaisLoc == "RUS" .And. "RU07T03" $ cFunName
       	cRet := fDesc("SRJ",RCL->RCL_FUNCAO,"RJ_DESC")
	Else
		If cTipo == "1"  .OR. cFunName $ "RSPM001"
			Do Case
			Case	nFieldType == 1
					cField := "SQB->QB_DESCRIC"

			Case	nFieldType == 2
					cField := "SQB->QB_DTSTART"

			Case	nFieldType == 3
					cField := "SQB->QB_DTEND"
			End Case

			cChave := xFilial("SQB", cFil) + GetMemVar("RD4_CODIDE")

			DbSelectArea("SQB")
			DbSetOrder(1)

			If DbSeek( cChave )
				cRet := &cField
			Endif
		Else
			cChave := If(lShared,Space(FWGETTAMFILIAL),xFilial("RCL",cFil)) + GetMemVar("RD4_CODIDE")

			DbSelectArea("RCL")
			DbSetOrder(RetOrder("RCL","RCL_FILIAL+RCL_POSTO"))

			If DbSeek( cChave )
				If cPaisLoc = "RUS"
					If nFieldType == 2 .Or. nFieldType == 3
						cRet := ""
					Elseif nFieldType == 1
						cRet := Posicione("SRJ", RetOrdem( "SRJ" , "RJ_FILIAL+RJ_FUNCAO" , .F. ), xFilial("SRJ")+RCL->RCL_FUNCAO, "RJ_DESC")
					EndIf
				Else
					cChaveAux := xFilial("SQ3",cFil) + RCL->RCL_CARGO

					DbSelectArea("SQ3")
					DbSetOrder(1)

					If DbSeek( cChaveAux )
						cRet := SQ3->Q3_DESCSUM
					ELSE
						cRet := OemToAnsi(STR0037)					//"<Posto nao possui cargo definido>"
					Endif
				EndIf
			Endif
		Endif
	Endif

	RestArea(aArea)
Return cRet

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4ChecaEmp  ЁAutorЁKelly Soares          Ё Data Ё05/10/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCheca a necessidade de troca de arquivos.                 	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁRd4F3Ident() / GdRd4Carga()		        					Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4ChecaEmp(cRd4EmpIDE)
	Local cTipo		:= GetMemVar("RDK_HIERAR")
	Local cIdent 	:= ""
	Local cEmpAux	:= ""
	Local aArea		:= GetArea()
	Local lRet		:= .T.

	dbSelectArea("RCL")
	dbSelectArea("SQB")
	dbSelectArea("SQ3")

	DEFAULT cRd4EmpIDE := ""

	If lCarga
		cEmpAux := cEmpCar
	Else
		If !Empty(cRd4EmpIDE)
			cEmpSel := cRd4EmpIDE
		Else
			cEmpSel := GetMemVar("RD4_EMPIDE")
		EndIf
		cEmpAux := cEmpSel
	Endif

	lEmpDif := ( cEmpAnt <> cEmpAux )

	If lEmpDif .Or. lClosed
		lRet := Rd4TrocaEmp(cTipo,cEmpAux)
	EndIf

	If cTipo == "1"
		cIdent := "SQB"
		lShared := Empty(xFilial("SQB"))
	Else
		cIdent := "RCL"
		lShared := Empty(xFilial("RCL"))
		lSharedQ3 := Empty(xFilial("SQ3"))
	Endif

	RestArea(aArea)
	DbSelectArea(cIdent)
Return lRet

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4TrocaEmp  ЁAutorЁKelly Soares          Ё Data Ё02/10/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁAbre o arquivo correspondente ao tipo da visao de acordo    Ё
Ё          Ёcom a empresa selecionada, e nao com a de login.     		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRd4TrocaEmp(param1)        									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcTipo = Tipo da visao (1/2)									Ё
Ё          ЁcEmp  = Empresa selecionada									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁRd4ChecaEmp()								               	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4TrocaEmp(cTipo,cEmp)
	Local nArq
	Local cVar		:= ""
	Local cMsg		:= ""
	Local aArquivos	:= {{ "SQB" , .F. , "1" } , ; // Alias, SharedQ3, Tipo
						{ "SQ3" , .T. , "2" } , ;
						{ "RCL" , .F. , "2" } }
	Local lRet		:= .F.

	If Empty(cEmp)
		Return lRet
	EndIf

	For nArq := 1 to Len(aArquivos)
		If Select(aArquivos[nArq][1]) > 0
			(aArquivos[nArq][1])->(DbCloseArea())
		EndIf
	Next nArq

	OpenSxs(,,,,cEmp,"SX2TMP","SX2",,.F.,,,.F.)

	If Select("SX2TMP") > 0
		For nArq := 1 to Len(aArquivos)
			If cTipo != aArquivos[nArq][3]
				Loop
			Endif

			If ChkFile(aArquivos[nArq][1],.F.,,,,,,"SX2TMP") .And. ( Select(aArquivos[nArq][1]) > 0 )
				cVar  := If(aArquivos[nArq][2],"lSharedQ3","lShared")
				&cVar := FWModeAccess(aArquivos[nArq][1], 3, cEmp) == "C"
			Else
				If !Empty(cMsg)
					cMsg += ", "
				Endif

				cMsg += aArquivos[nArq][1]
			Endif
		Next nArq

		SX2TMP->(DbCloseArea())

		If !Empty(cMsg)
			MsgStop(oEmToAnsi(STR0029) + cMsg + oEmToAnsi(STR0031) + cEmp )
					//"NЦo foi possМvel abrir a(s) tabela(s) ___ da empresa __"
		Else
			lRet := .T.
		Endif
	Else
		MsgStop( oEmToAnsi(STR0030) + oEmToAnsi(STR0031) + cEmp + OemToAnsi(STR0052) )
				//"NЦo foi possМvel abrir o dicionАrio da empresa __. Efetue o primeiro acesso Ю empresa selecionada para concluir sua configuraГЦo."
	Endif

	lClosed := .F.

Return lRet

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4KeyTree   ЁAutorЁKelly Soares          Ё Data Ё10/10/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁGera a chave de cada registro, de acordo com seu(s)         Ё
Ё          Ёsuperior(es).                                        		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>  									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁOrga060Mnt()								               	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd4KeyTree()
	Local aArea		:= GetArea()
	Local nX
	Local cQuery	:= ""
	Local cKey		:= "000"
	Local nField, xValue, nCol, cFieldName
	Local nHoraHis	:= Val(SubStr(StrTran(Time(), ":", "."), 1, 5))
	Local cTreeZero	:= Replicate("0", GetSx3Cache("RD4_ITEM", "X3_TAMANHO"))

	Private aKeys	:= {}

	DbSelectArea("RD4")
	RD4->(dbSetOrder(2))//RD4_FILIAL, RD4_CODIGO, RD4_TREE, RD4_ITEM, RD4_DATA, R_E_C_N_O_, D_E_L_E_T_
	If RD4->(dbSeek(RDK->RDK_FILIAL+RDK->RDK_CODIGO+Space(6)))
		While RD4->(!Eof()) .And. RD4->(RD4_FILIAL+RD4_CODIGO+RD4_TREE) == RDK->RDK_FILIAL+RDK->RDK_CODIGO+Space(6)
			RD4->(RecLock("RD4", .F.))
			RD4->RD4_CHAVE := ""
			RD4->(MsUnLock())

			RD4->(DbSkip())
		End
	EndIf

	If RD4->(dbSeek(RDK->RDK_FILIAL+RDK->RDK_CODIGO+cTreeZero))
		While RD4->(!Eof()) .And. RD4->(RD4_FILIAL+RD4_CODIGO+RD4_TREE) == RDK->RDK_FILIAL+RDK->RDK_CODIGO+cTreeZero
			cKey := Soma1(cKey)
			aAdd( aKeys , { RD4->(Recno()) , cKey } )
			Rd4ChkKey(RD4->RD4_ITEM, cKey)
			RD4->(DbSkip())
		End
	EndIf

	DbSelectArea("RCD")
	DbSetOrder(1)	//RCD_FILIAL, RCD_CODIGO, RCD_ITEM, RCD_DATA, RCD_HORA, RCD_OPERAC
	DbSelectArea("RD4")
	DbSetOrder(1)

	For nX := 1 to Len(aKeys)
		RD4->(DbGoTo(aKeys[nX][1]))

		If !(RD4->RD4_CHAVE == aKeys[nX][2])
			RecLock("RD4", .F.)
			RD4->RD4_CHAVE := aKeys[nX][2]
			MsUnLock()

			If RCD->(DBSeek(RD4->(RD4_FILIAL+RD4_CODIGO+RD4_ITEM+DTOS(dDataBase)+STR(nHoraHis, 5, 2)+"2")))
				RecLock("RCD", .F.)
			Else
				RecLock("RCD", .T.)
			EndIf

			RCD->RCD_DATA	:= dDataBase
			RCD->RCD_HORA	:= nHoraHis
			RCD->RCD_OPERAC	:= "2"

			For nCol:= 1 To RD4->(FCount())
				cFieldName:= RD4->(StrTran(FieldName(nCol), "RD4", "RCD", ))

				If cFieldName $ "RCD_DATA/RCD_HORA/RCD_OPERAC/RCD_STATUS"
					Loop
				EndIF

				nField:= RCD->(FieldPos(cFieldName))
				xValue:= RD4->(FieldGet(nCol))

				RCD->(FieldPut(nField, xValue))
			Next

			MsUnLock()
		EndIf
	Next nX

	RestArea(aArea)
Return

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRd4ChkKey    ЁAutorЁKelly Soares          Ё Data Ё10/10/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁGera a chave de cada registro, de acordo com seu(s)         Ё
Ё          Ёsuperior(es).                                        		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRd4ChkKey(param1,param2)   									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcParent = Codigo do Item.                 					Ё
Ё          ЁcPKey   = Chave do registro pai.           					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁRd4KeyTree()								               	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function RD4ChkKey(cParent,cPKey)
	Local aArea		:= GetArea()
	Local cQuery	:= ""
	Local cKey		:= "000"
	Local cFullKey 	:= ""

	dbSelectArea("RD4")
	RD4->(dbSetOrder(2))//RD4_FILIAL, RD4_CODIGO, RD4_TREE, RD4_ITEM, RD4_DATA, R_E_C_N_O_, D_E_L_E_T_
	If RD4->(dbSeek(RDK->RDK_FILIAL+RDK->RDK_CODIGO+cParent))
		While RD4->(!Eof()) .And. RD4->(RD4_FILIAL+RD4_CODIGO+RD4_TREE) == RDK->RDK_FILIAL+RDK->RDK_CODIGO+cParent
			cKey := Soma1(cKey)
			cFullKey := cPKey + cKey
			aAdd( aKeys , { RD4->(recno()) , cFullKey } )
			RD4ChkKey(RD4->RD4_ITEM, cFullKey)
			RD4->(DbSkip())
		End
	EndIf
	RestArea(aArea)
Return

Function RDKStsVld()
Return .T.


/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁOrga060VisЁ Autor ЁRogerio     Ё Data Ё27/02/2004Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Visoes ( Visualizar )							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function MenuDef()
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define Array contendo as Rotinas a executar do programa      Ё
	Ё ----------- Elementos contidos por dimensao ------------     Ё
	Ё 1. Nome a aparecer no cabecalho                              Ё
	Ё 2. Nome da Rotina associada                                  Ё
	Ё 3. Usado pela rotina                                         Ё
	Ё 4. Tipo de Transa┤└o a ser efetuada                          Ё
	Ё    1 - Pesquisa e Posiciona em um Banco de Dados             Ё
	Ё    2 - Simplesmente Mostra os Campos                         Ё
	Ё    3 - Inclui registros no Bancos de Dados                   Ё
	Ё    4 - Altera o registro corrente                            Ё
	Ё    5 - Remove o registro corrente do Banco de Dados          Ё
	Ё    6 - Copiar                                                Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	Local aRotina:= {	{ STR0001 , "AxPesqui"	 , 0 , 01 } ,;	//"Pesquisar"
						{ STR0002 , "Orga060Mnt" , 0 , 02 } ,;	//"Visualizar"
						{ STR0003 , "Orga060Mnt" , 0 , 03 } ,;	//"Incluir"
						{ STR0004 , "Orga060Mnt" , 0 , 04 } ,;	//"Alterar"
						{ STR0005 , "Orga060Mnt" , 0 , 05 } ,;	//"Excluir"
						{ STR0006 , "Orga060Mnt" , 0 , 04 } ,;	//"Estrutura"
						{ STR0039 , "Orga060Mnt" , 0 , 04 } }	//"Replicar Visao"

Return aRotina



/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁOrg060Perm   ЁAutorЁTatiane Vieira Matias Ё Data Ё27/06/2008Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁRetorna um bloco de codigo com as permissoes do usuario paraЁ
Ё          Ёvisualizar os itens da estrutura das visoes.         		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁOrg060Perm(cFilVisao,cCodVisao, cHierarchy)         		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcFilVisao = Filial da Visao               					Ё
Ё          ЁcCodVisao = Codigo da Visao                					Ё
Ё          ЁcHierarchy = Hierarquia da Visao                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁOrg060Tree()								               	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Org060Perm(cFilVisao, cCodVisao, cHierarchy)
	Local cBlock    := ""
	Local cUserId   := RetCodUsr()
	Local cCampo    := ""
	Local cChave    := ""
	Local cLike     := ""
	Local cNotLike  := ""
	Local nGrp      := 0
	Local nTam      := 0
	Local nReg      := 0
	Local aGrupos   := UsrRetGrp( cUserName )

	DEFAULT cFilVisao := Space( GetSx3Cache("RD4_FILIAL","X3_TAMANHO"))
	DEFAULT cCodVisao := Space( GetSx3Cache("RD4_CODIGO","X3_TAMANHO"))

	If cUserId == "000000" .OR.;
	   (AScan(aGrupos, { |x| x == "000000"}) > 0) .OR.;
	   SuperGetMV("MV_ORGSPFL", .F., "N") == "N"
		Return {|| .T.}
	EndIf

	//Retornas as permissУes do usuАrio
	dbSelectArea("RBZ")
	RBZ->( dbSetOrder( RetOrdem( "RBZ", "RBZ_FILIAL+RBZ_CODUSR+RBZ_EMPVIS+RBZ_FILVIS+RBZ_CODVIS+RBZ_TIPO+RBZ_ACAO" ) ) )

	If RBZ->( dbSeek(xFilial("RBZ") + cUserId + cEmpAnt + cFilVisao + cCodVisao + cHierarchy) )

		While RBZ->( !Eof() ) .AND.;
	     		RBZ->RBZ_FILIAL == xFilial("RBZ") .AND.;
	     		RBZ->RBZ_CODUSR == cUserId .AND.;
	     		RBZ->RBZ_EMPVIS == cEmpAnt .AND.;
	     		RBZ->RBZ_FILVIS == cFilVisao .AND.;
	     		RBZ->RBZ_CODVIS == cCodVisao  .AND.;
	     		RBZ->RBZ_TIPO == cHierarchy
			dbSelectArea("RD4")
			RD4->( dbSetOrder( RetOrdem("RD4", "RD4_FILIAL+RD4_CODIGO+RD4_EMPIDE+RD4_FILIDE+RD4_CODIDE") ) )

            If RD4->( dbSeek(cFilVisao + cCodVisao + RBZ->RBZ_EMPIDE + RBZ->RBZ_FILIDE + RBZ->RBZ_CODIDE) )
            	cChave := AllTrim(RD4->RD4_CHAVE)
            	nTam   := Len(cChave)
            	cCampo := " SUBSTR(RD4->RD4_CHAVE,1," + AllTrim(str(nTam)) + ")"

            	//Tem permissЦo
            	If RBZ->RBZ_ACAO $ "2/4/6"
	            	cLike += cCampo + " == '" + cChave + "' .OR. "
					aAdd( aChaves, cChave)

				//NЦo tem permissЦo
	            ElseIf RBZ->RBZ_ACAO $ "3/5/7"
	            	cNotLike += cCampo + " <> '" + cChave + "' .AND. "
	            EndIf
            EndIf
        	RBZ->( dbSkip() )
		EndDo
	EndIf

	//Retornas as permissУes do grupo do usuАrio
	For nGrp := 1 to Len(aGrupos)
		dbSelectArea("RBV")
		RBV->( dbSetOrder( RetOrdem( "RBV", "RBV_FILIAL+RBV_CODGRP+RBV_EMPVIS+RBV_FILVIS+RBV_CODVIS+RBV_TIPO+RBV_ACAO" ) ) )

		If RBV->( dbSeek(xFilial("RBV") + aGrupos[nGrp] + cEmpAnt + cFilVisao + cCodVisao + cHierarchy) )
			While RBV->( !Eof() ) .AND.;
		     		RBV->RBV_FILIAL == xFilial("RBV") .AND.;
		     		RBV->RBV_CODGRP == aGrupos[nGrp] .AND.;
		     		RBV->RBV_EMPVIS == cEmpAnt .AND.;
		     		RBV->RBV_FILVIS == cFilVisao .AND.;
		     		RBV->RBV_CODVIS == cCodVisao .AND.;
		     		RBV->RBV_TIPO == cHierarchy
				dbSelectArea("RD4")
				RD4->( dbSetOrder( RetOrdem("RD4", "RD4_FILIAL+RD4_CODIGO+RD4_EMPIDE+RD4_FILIDE+RD4_CODIDE") ) )

	            If RD4->( dbSeek(cFilVisao + cCodVisao + RBV->RBV_EMPIDE + RBV->RBV_FILIDE + RBV->RBV_CODIDE) )
            		cChave := AllTrim(RD4->RD4_CHAVE)
	            	nTam   := Len(cChave)
    	        	cCampo := " SUBSTR(RD4->RD4_CHAVE,1," + AllTrim(str(nTam)) + ")"

	            	If RBV->RBV_ACAO $ "2/4/6"
		            	cLike += cCampo + " == '" + cChave + "' .OR. "
						aAdd( aChaves, cChave)
		            ElseIf RBV->RBV_ACAO $ "3/5/7"
	    	        	cNotLike += cCampo + " <> '" + cChave + "' .AND. "
		            EndIf
	            EndIf

	        	RBV->( dbSkip() )
			EndDo
		EndIf
    Next nGrp

    //Busca os superiores para mostrar na estrutura da visЦo
    For nReg := 1 to Len(aChaves)
   		cChave := aChaves[nReg]
   		nTam   := len(cChave) - 3
       	While nTam > 0
       		cChave := substr(cChave, 1, nTam)
       		If !(cLike $ " AllTrim(RD4->RD4_CHAVE) == '" + cChave + "' .OR. ")
		   		cLike += " AllTrim(RD4->RD4_CHAVE) == '" + cChave + "' .OR. "
		   	EndIf
    		nTam := nTam - 3
       	EndDo
    Next nReg

    //Monta codigo de bloco
	If !Empty(cLike) .or. !Empty(cNotLike)
		cBlock := "{ || ( "
		cBlock += " RD4->RD4_FILIAL == '" + cFilVisao + "' .AND."
		cBlock += " RD4->RD4_CODIGO == '" + cCodVisao + "' .AND."
		cBlock += If(!Empty(cLike), " (" + SubStr(cLike, 1, Len(cLike) - 5) + " ) ", "")
		cBlock += If(!Empty(cNotLike), If(!Empty(cLike), " .AND. ", "") + SubStr(cNotLike, 1, Len(cNotLike) - 6), "")
		cBlock += ") }"
	EndIf

	If Empty(cBlock)
		cBlock := "{|| .F.}"
	EndIf

Return &(cBlock)

/*/
зддддддддддбдддддддддддддбддддддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁOrg060MnuItEnable ЁAutorЁTatiane Vieira Matias Ё Data Ё02/07/2008Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддддддддаддддддаддддддддд╢
ЁDescri┤┘o ЁVerifica se o menu popup sera apresentado para o item selecionadoЁ
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁOrg060MnuItEnable(cItem)         		                         Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcItem = Item selecionado na estrutura      					     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁOrg060Tree()								                     Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Org060MnuItEnable(cItem)
	Local aArea 	:= GetArea()
	Local aAreaRd4	:= RD4->( GetArea() )
	Local lEnable 	:= .F.
	Local cUserId   := RetCodUsr()
	Local aGrupos

	If cUserId == "000000" .OR. SuperGetMV("MV_ORGSPFL", .F., "N") == "N"
		Return .T.
	Else
		aGrupos   := UsrRetGrp(cUserName)
		If AScan(aGrupos, { |x| x == "000000"}) > 0
			Return .T.
		EndIf
	EndIf

    //Verifica se tem acesso ao item selecionado
	dbSelectArea("RD4")
	RD4->( dbSetOrder(RetOrdem("RD4","RD4_FILIAL+RD4_CODIGO+RD4_ITEM")))
	If RD4->( dbSeek(xFilial("RD4") + RDK->RDK_CODIGO + SubStr(cItem,3)))
		If aScan(aChaves, {|x| AllTrim(x) $ AllTrim(RD4->RD4_CHAVE) }) > 0
			lEnable := .T.
		EndIf
	EndIf

	RestArea( aAreaRd4 )
	RestArea( aArea	   )
Return lEnable

Function RDKHieVld()
Local nRow
Local nPosDel
Local cValAtu	:= &(ReadVar())
Local lValid	:= .T.
Local cTipo		:= ""

	If Type("oGdRd4") != "U"
		nPosDel:= Len(oGdRd4:aHeader)+1

		If cValAtu != cValAnt
			If MsgYesNo(OemToAnsi(STR0036), cCadastro)		//"Ao alterar a hierarquia, os itens jА digitados serao removidos. Deseja prosseguir?"
				CursorWait()

				For nRow:= 1 To Len(oGdRd4:aCols)
					oGdRd4:aCols[nRow, nPosDel] := .T.
				Next

				oGdRd4:Refresh()
				cValAnt := cValAtu
				CursorArrow()
			Else
				lValid:= .F.
			EndIf
		EndIf
	EndIf

	cTipo :=  GetMemVar("RDK_HIERAR")

	If  cTipo == "1"
		cIdent := "SQB"
		lShared := Empty(xFilial("SQB"))
	Else
		cIdent := "RCL"
		lShared := Empty(xFilial("RCL"))
		lSharedQ3 :=  Empty(xFilial("SQ3"))
	Endif

Return lValid


/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁORG060LinOk	ЁAutorЁRogerio Ribeiro da CruzЁ Data Ё/06/2002Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁORG060LinOk(oBrowse)									    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁORGA060()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function ORG060LinOk( oBrowse )
Local aCposKey	:= {}
Local lLinOk	:= .T.
Local lRetBlock

	Begin Sequence
		IF !( GdDeleted() )
			//Verifica Itens Duplicados na GetDados
			If !(FwIsInCallStack("ORG060TudOk"))
				aCposKey := GetArrUniqe( "RD4" )
				IF !( lLinOk := GdCheckKey( aCposKey , 4 ) )
					Break
				EndIF
			Endif

			//Verifica Se o Campos Estao Devidamente Preenchidos
			aCposKey := GdObrigat( aHeader )
			IF !( lLinOk := GdNoEmpty( aCposKey ) )
		    	Break
			EndIF

		EndIF
	End Sequence

	//Se houver alguma inconsistencia na GetDados, Seta o foco nela
	IF !( lLinOk )
		oBrowse:SetFocus()
	EndIF

	//Evitar que os Inicializadores padroes sejam carregados indevidamente													   Ё
	PutFileInEof( "RD4" )

	//CursorArrow()
Return lLinOk

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁORG060TudOk	ЁAutorЁMarinaldo de Jesus     Ё Data Ё18/06/2002Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁORG060TudOk(oBrowse)									   	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁORGA060()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function ORG060TudOk( oBrowse )
	Local lTudoOk := .T.
	Local nLoop
	Local nLoops
	Local lRetBlock

	CursorWait()

	aCposKey := GetArrUniqe( "RD4" )
	IF !( lTudoOk := GdCheckKey( aCposKey , 4 ) )
		Break
	EndIF

	Begin Sequence
		//Percorre Todas as Linhas para verificar se Esta Tudo OK
		nLoops	:= Len( aCols )

		For nLoop := 1 To nLoops
			n := nLoop
			IF !( lTudoOk := ORG060LinOk( oBrowse ) )
				oBrowse:Refresh()
				Break
			EndIF
		Next n
	End Sequence

	If ExistBlock("ORG060MOV")
		lRetBlock := ExecBlock( "ORG060MOV", .F., .F., {RDK->RDK_FILIAL, RDK->RDK_CODIGO, aCols})
		IF ValType(lRetBlock) == 'L'
			oBrowse:Refresh()
			lTudoOk := lRetBlock
		Endif
	EndIf

	//Restaura o Estado do Cursor
	CursorArrow()

Return( lTudoOk  )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁORGA060   ╨Autor  Ё Adilson Silva      ╨ Data Ё 09/01/2013  ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Funcao para replicar visoes.                               ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MP11                                                       ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/

Static Function fMtaReplica( aRd4Cols )
 Local aOldAtu 		:= GETAREA()
 Local aOldSqb 		:= GETAREA()
 Local aTmpCols		:= {}
 Local aNotFields   := {}
 Local nTmpUsado	:= 0
 Local aTmpVirtGd	:= {}
 Local aTmpVisuGd	:= {}
 Local aTmpRecnos	:= {}
 Local nPosDepto	:= GdFieldPos( "RD4_CODIDE" , aRd4Header )
 Local nPosDesc		:= GdFieldPos( "RD4_DESC"	, aRd4Header )
 Local nPosRecno	:= GdFieldPos( "RD4_REC_WT" , aRd4Header )

 Local aQuery  		:= Array(05)
 Local cRDKKeySeek	:= aKeyReplic[1]+aKeyReplic[2]

 aQuery[01]	:= "RD4_FILIAL='"+ aKeyReplic[1] +"'"
 aQuery[02]	:= " AND "
 aQuery[03]	:= "RD4_CODIGO='"+ aKeyReplic[2] +"'"
 aQuery[04]	:= " AND "
 aQuery[05]	:= "D_E_L_E_T_=' ' "

 aAdd( aNotFields , "RD4_FILIAL"  )
 aAdd( aNotFields , "RD4_CODIGO"  )

 AAdd(aTmpVisuGd, "RD4_DESC")

 aTmpCols := RD4->(;
					GdBuildCols(	@aRd4Header		,;	//01 -> Array com os Campos do Cabecalho da GetDados
									@nTmpUsado		,;	//02 -> Numero de Campos em Uso
									@aTmpVirtGd		,;	//03 -> [@]Array com os Campos Virtuais
									@aTmpVisuGd		,;	//04 -> [@]Array com os Campos Visuais
									"RD4"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
									aNotFields		,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
									@aTmpRecnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
									"RDK"		   	,;	//08 -> Alias do Arquivo Pai
									cRDKKeySeek		,;	//09 -> Chave para o Posicionamento no Alias Filho
									NIL				,;	//10 -> Bloco para condicao de Loop While
									NIL				,;	//11 -> Bloco para Skip no Loop While
									NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols
									NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
									NIL				,;	//14 -> Opcional, Carregar Todos os Campos
									NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
									aQuery			,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
									.F.				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
									.F.				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
									.F./*Altera*/	,;	//19 -> Carregar Coluna Fantasma
									NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
									NIL				,;	//21 -> Verifica se Deve verificar se o campo eh usado
									NIL				,;	//22 -> Verifica se Deve verificar o nivel do usuario
									NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
									NIL 	 		,;	//24 -> [@]Array que contera as chaves conforme recnos
									.F.				,;	//25 -> [@]Se devera efetuar o Lock dos Registros
									.F.				,;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
									NIL				,;	//27 -> Numero maximo de Locks a ser efetuado
									.F./*Altera*/	 ;	//28 -> Utiliza Numeracao na GhostCol
							   );
				  )

 // Transfere o Acols Temporario para o Oficial
 aRd4Cols := Aclone( aTmpCols )
 // Zera a Coluna dos Recnos
 Aeval(aRd4Cols,{|x| x[nPosRecno] := 0})

 // Acerta a Descricao dos Departamentos
 dbSelectArea( "SQB" )
 dbSetOrder( 1 )
 dbGoTop()
 Do While !Eof()
    Aeval(aRd4Cols,{|x| x[nPosDesc] := If(x[nPosDepto]==SQB->QB_DEPTO,SQB->QB_DESCRIC,x[nPosDesc])})
    dbSkip()
 EndDo

 RESTAREA( aOldAtu )
 RESTAREA( aOldSqb )

Return

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммямммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁOrg60Pesq   ╨Autor  Ё Leandro Drumond  ╨ Data Ё 16/11/2014  ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Funcao para pesquisar dentro da Tree.                      ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MP11                                                       ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function Org60Pesq( oTree )

Local aSvKeys	:= GetKeys()
Local nSize		:= Len(xFilial("SRA")) + 6
Local nX		:= 0
Local cKeyFil	:= Space(Len(xFilial("SRA")))
Local cKeyMat	:= Space(6)
Local cKeyDepto	:= ""
Local cKeySeek	:= ""
Local cKeyAux	:= ""
Local lFilEmpty


Local nOpcA			:= 0
Local aAdvSize		:= {}
Local aObjCoords	:= {}
Local aObjSize		:= {}
Local aGdsCoords	:= {}
Local aNodes		:= {}
Local bSet15		:= { || NIL }
Local bSet24		:= { || NIL }

Local oDlg
Local oBut1
Local oBut2
Local oGetFil
Local oGetMat
Local oGetDepto
Local cTipo

aAdvSize		:= MsAdvSize( .T. , .T. , 50 )
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
aObjCoords		:= { { 0 , 0 , .T. , .T. } }
aObjSize 		:= MsObjSize( aInfoAdvSize , aObjCoords )

DEFINE MSDIALOG oDlg FROM 0,0 TO 150,440 TITLE OemToAnsi( STR0001 ) PIXEL //'Pesquisar' 0,0 TO 005,035

	DEFINE FONT oBold NAME "Arial" 			SIZE  0, -13 BOLD

	@ aObjSize[1][1]+5,aObjSize[1][2]+10 SAY OemToAnsi(STR0048)		SIZE 045,010 PIXEL FONT oBold //'Filial'
	@ aObjSize[1][1]+5,aObjSize[1][2]+35 MSGET oGetFil VAR cKeyFil		SIZE 030,010 VALID .T. PIXEL  //010.0,025
	@ aObjSize[1][1]+5,aObjSize[1][2]+90 SAY OemToAnsi(STR0049)	SIZE 045,010 PIXEL FONT oBold //'Filial'
	@ aObjSize[1][1]+5,aObjSize[1][2]+130 MSGET oGetMat VAR cKeyMat		SIZE 060,010 VALID .T. PIXEL  //010.0,025
	oGetFil:cF3 := "SM0"
	oGetMat:cF3 := "SRA"
	cTipo := RDK->RDK_HIERAR

	If cTipo == "1" //Departamento
		@ aObjSize[1][1]+30,aObjSize[1][2]+90 SAY OemToAnsi(Posicione("SX3",2,Padr("RA_DEPTO" ,10),"X3_TITULO"))	SIZE 045,010 PIXEL FONT oBold //'Departamento'
		@ aObjSize[1][1]+30,aObjSize[1][2]+130 MSGET oGetDepto VAR cKeyDepto		SIZE 060,010 VALID .T. PIXEL  //010.0,025
		cKeyDepto := Space(TamSX3("RA_DEPTO")[1])
		oGetDepto:cF3 := "SQB"
	Else //Posto
		@ aObjSize[1][1]+30,aObjSize[1][2]+90 SAY OemToAnsi(Posicione("SX3",2,Padr("RA_POSTO" ,10),"X3_TITULO"))	SIZE 045,010 PIXEL FONT oBold //'Posto'
		@ aObjSize[1][1]+30,aObjSize[1][2]+130 MSGET oGetDepto VAR cKeyDepto		SIZE 060,010 VALID .T. PIXEL  //010.0,025
		cKeyDepto := Space(TamSX3("RA_POSTO")[1])
		oGetDepto:cF3 := "RCL"
	EndIf

	bSet15	:= { || nOpcA := 1 , oDlg:End() }
	bSet24	:= { || nOpcA := 0 , oDlg:End() }

ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 )

If ( nOpcA == 1 )
	If !Empty(cKeyMat)
		DbSelectArea("SRA")
		DbSetOrder(1)
		cKeySeek := If(Empty(cKeyFil),xFilial("SRA"),cKeyFil) + cKeyMat
		If DbSeek(cKeySeek)
			cKeyAux := AllTrim( If(cTipo == "1", SRA->RA_DEPTO, SRA->RA_POSTO) )
		EndIf
	Else
		cKeyAux := AllTrim(cKeyDepto)
	EndIf

	If !Empty(cKeyAux)
		DbSelectArea("RD4")
		lFilEmpty := Empty(cKeyFil)

		If !lFilEmpty
			RD4->( DbSetOrder(7) ) //RD4_FILIAL+RD4_CODIGO+RD4_EMPDE+RD4_FILDE+RD4_CODIDE
		Else
			RD4->( DbSetOrder(5) ) //RD4_FILIAL+RD4_CODIGO+RD4_CODIDE
		EndIf

		If ( lFilEmpty .And. RD4->( DbSeek(xFilial("RD4")+RDK->RDK_CODIGO+cKeyAux) ) ) .Or. ( !lFilEmpty .And. RD4->( DbSeek(xFilial("RD4",cKeyFil)+RDK->RDK_CODIGO+cEmpAnt+cKeyFil+cKeyAux) ) )
			If !(oTree:TreeSeek( "+-" + RD4->RD4_ITEM ))
				If ( lFilEmpty .And. RD4->( DbSeek(xFilial("RD4")+RDK->RDK_CODIGO+cKeyAux) ) ) .Or. ( !lFilEmpty .And. RD4->( DbSeek(xFilial("RD4",cKeyFil)+RDK->RDK_CODIGO+cEmpAnt+cKeyFil+cKeyAux) ) )
					While .T.
						If RD4->RD4_TREE == "000000"
							CursorWait()
							ApdLoadTree(adbTree , oTree, RD4->RD4_ITEM)
							oTree:TreeSeek( "+-"+RD4->RD4_ITEM )
							CursorArrow()

							DbSetOrder(1) //RD4_FILIAL+RD4_CODIGO+RD4_ITEM+RD4_TREE+DTOS(RD4_DATA)

							If Empty(aNodes)
								Exit
							EndIf
							For nX:= Len(aNodes) to 1 step -1
								DbSeek(xFilial("RD4")+RDK->RDK_CODIGO+aNodes[nX])
								CursorWait()
								ApdLoadTree(adbTree , oTree, RD4->RD4_ITEM)
								oTree:TreeSeek( "+-"+RD4->RD4_ITEM )
								CursorArrow()
							Next
							Exit
						Else
							cNodeKey := RD4->RD4_TREE
							aAdd(aNodes,RD4->RD4_ITEM)
							DbSetOrder(1) //RD4_FILIAL+RD4_CODIGO+RD4_ITEM+RD4_TREE+DTOS(RD4_DATA)
							If !DbSeek(xFilial("RD4")+RDK->RDK_CODIGO+RD4->RD4_TREE)
								Exit
							EndIf
						EndIf
					EndDo
				Else
					MsgInfo( If(cTipo == "1", OemToAnsi( STR0045 ), OemToAnsi( STR0050 ) ) + cKeyAux + OemToAnsi( STR0046 ), OemToAnsi( STR0027 ) ) //'Departamento do funcionАrio ' + SRA->RA_DEPTO + ' nЦo encontrado...'###'Atencao!'
				EndIf
			EndIf
		Else
			MsgInfo( OemToAnsi( STR0047 ) , OemToAnsi( STR0027 ) ) //'FuncionАrio nЦo encontrado.'###'Aten┤└o!'
		EndIf
	EndIf
EndIf

RestKeys( aSvKeys , .T. )

Return Nil

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммямммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁOrg60LstFun ╨Autor  Ё Leandro Drumond  ╨ Data Ё 16/11/2014  ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Funcao para Listar funcionarios do Departamento/Posto.     ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MP11                                                       ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function Org60LstFun(oTree)
Local aArea	 	:= GetArea()
Local aColsTMP	:= {}
Local aHeaderTMP:= {}
Local cAliasTMP := GetNextAlias()
Local cWhere	:= oTree:GetPrompt()
Local cCargo	:= oTree:GetCargo()
Local cSRAFil 	:= ""
Local cFilAux	:= ""
Local cFilSRARD4:= ""
Local aIDCode	:= {}
Local nX		:= 0
Local nOrder	:= 0
Local lShowDem  := SuperGetMV("MV_SHOWDEM", .F., "S") == "S"
Local cTipo		:= ""
Local cEmpAux   := ""
Local cSRAEmp   := ""
Local cSQBEmp   := ""
Local cCTTEmp   := ""
Local cRD4Emp   := ""

If(cPaisLoc == "RUS")
	cTipo	:= "1"
ElseIf Type(RDK->RDK_HIERAR) != "U" .Or. !Empty(RDK->RDK_HIERAR)
	cTipo	:= RDK->RDK_HIERAR
Else
	cTipo	:= GetMemVar("RDK_HIERAR")
EndIf

cWhere := AllTrim(SubStr(cWhere,1,At("-",cWhere)-1))

RD4->(DbSetOrder(1)) //RD4_FILIAL+RD4_CODIGO+RD4_ITEM+RD4_TREE+DTOS(RD4_DATA)
RD4->(DbSeek(xFilial('RD4')+RDK->RDK_CODIGO + StrTran(cCargo,"+-","")))

cFilAux := RD4->RD4_FILIDE
cEmpAux := If(!Empty(RD4->RD4_EMPIDE), RD4->RD4_EMPIDE, cEmpAnt)
cSRAEmp := "%" + RetFullname("SRA", cEmpAux) + "%"
cSQBEmp := "%" + RetFullname("SQB", cEmpAux) + "%"
cCTTEmp := "%" + RetFullname("CTT", cEmpAux) + "%"
cRD4Emp := "%" + RetFullname("RD4", cEmpAux) + "%"

DbSelectArea(oTree:cArqTree)
nOrder := IndexOrd()
DbSetOrder(4)
DbSeek(cCargo)

aAdd(aIdCode, T_IDCODE)

DbSetOrder(2)

cWhere := "'" + cWhere + "'"

If Alltrim(cTipo) == '1'
	cWhere := "RA_DEPTO IN (" + cWhere + ")"
	cSRAFil := FWJoinFilial("SRA", "SQB")
Else
	cWhere := "RA_POSTO IN (" + cWhere + ")"
	cSRAFil := FWJoinFilial("SRA", "RCL")
EndIf

If !lShowDem
	cWhere += " AND RA_DEMISSA = '' "
EndIf

cWhere := "%" + cWhere + "%"

cSRAFil := "%" + SubStr( cSRAFil, 1, AT("=", cSRAFil)-1 ) + "LIKE '" + Alltrim(CFILAUX) + "%' %"

DbSetOrder(nOrder)

cFilSRASQB:= "%" + FWJoinFilial("SRA", "SQB") + "%"
cFilSRACTT:= "%" + FWJoinFilial("SRA", "CTT") + "%"
cFilSRARD4:= "%" + FWJoinFilial("SRA", "RD4") + "%"

BEGINSQL ALIAS cAliasTMP
	SELECT
		RA_FILIAL, RA_MAT, RA_NOME, RA_DEPTO, RA_POSTO, RA_CC, QB_DESCRIC, CTT_DESC01
	FROM %exp:cSRAEmp% SRA
	INNER JOIN %exp:cSQBEmp% SQB ON SRA.RA_DEPTO = SQB.QB_DEPTO AND SQB.%NotDel% AND %exp:cFilSRASQB%
	INNER JOIN %exp:cCTTEmp% CTT ON SRA.RA_CC = CTT.CTT_CUSTO AND CTT.%NotDel% AND %exp:cFilSRACTT%
	INNER JOIN %exp:cRD4Emp% RD4 ON RD4.%NotDel% AND %exp:cFilSRARD4%
	WHERE %exp:cWhere%
	AND RD4_FILIDE = %EXP:CFILAUX%
	AND SRA.%notDel%
	AND %exp:cSRAFil%
	GROUP BY RA_FILIAL, RA_MAT, RA_NOME, RA_DEPTO, RA_POSTO, RA_CC, QB_DESCRIC, CTT_DESC01
	ORDER BY RA_DEPTO, RA_FILIAL, RA_MAT
ENDSQL

While !(cAliasTMP)->(Eof())
	(cAliasTMP)->(aAdd(aColsTMP,{RA_FILIAL,RA_MAT,RA_NOME,RA_DEPTO, QB_DESCRIC, RA_POSTO, RA_CC, CTT_DESC01,Space(3),.F.}))
	(cAliasTMP)->(DbSkip())
EndDo

If !Empty(aColsTMP)
	Org60MntHeader(@aHeaderTMP)
	GpMntLista(aHeaderTMP,aColsTMP,OemToAnsi(STR0044)) //"FuncionАrios alocados"
Else
	MsgInfo( OemToAnsi( STR0043 ) , OemToAnsi( STR0027 ) ) //'N└o existem funcionАrios alocados.'###'Aten┤└o!'
EndIf
(cAliasTMP)->(DbCloseArea())

RestArea(aArea)

Return Nil

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммямммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁOrg60MntHeader╨Autor  Ё Leandro Drumond  ╨ Data Ё 16/11/2014  ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Monta aHeader para criacao da listagem.				      ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MP11                                                       ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function Org60MntHeader(aHeader)
Local nPos	:= 0

aHeader := {}

aAdd(aHeader,{})

nPos := Len(aHeader)

aHeader[nPos]:= Array( __ELEMENTOS_AHEADER__ )
aHeader[nPos , __AHEADER_TITLE__	]	:= Posicione("SX3",2,Padr("RA_FILIAL" ,10),"X3_TITULO") //Filial
aHeader[nPos , __AHEADER_FIELD__	]	:= "FILIAL"
aHeader[nPos , __AHEADER_PICTURE__	]	:= "@!"
aHeader[nPos , __AHEADER_WIDTH__	]	:= FwSizeFilial()
aHeader[nPos , __AHEADER_DEC__		]	:= 0
aHeader[nPos , __AHEADER_VALID__	]	:= ""
aHeader[nPos , __AHEADER_USE__		]	:= Chr(251)
aHeader[nPos , __AHEADER_TYPE__		]	:= "C"
aHeader[nPos , __AHEADER_F3__		]	:= ""
aHeader[nPos , __AHEADER_CONTEXT__	]	:= "R"
aHeader[nPos , __AHEADER_CBOX__		]	:= ""
aHeader[nPos , __AHEADER_INITPAD__	]	:= ""
aHeader[nPos , __AHEADER_WHEN__		]	:= ""
aHeader[nPos , __AHEADER_VISUAL__	]	:= "V"
aHeader[nPos , __AHEADER_VLDUSR__	]	:= ""
aHeader[nPos , __AHEADER_RESERV16__	]	:= ""
aHeader[nPos , __AHEADER_RESERV17__	]	:= .F.

aAdd(aHeader,{})

nPos := Len(aHeader)

aHeader[nPos]:= Array( __ELEMENTOS_AHEADER__ )
aHeader[nPos , __AHEADER_TITLE__	]	:= Posicione("SX3",2,Padr("RA_MAT" ,10),"X3_TITULO") //"Matricula"
aHeader[nPos , __AHEADER_FIELD__	]	:= "MAT"
aHeader[nPos , __AHEADER_PICTURE__	]	:= "@!"
aHeader[nPos , __AHEADER_WIDTH__	]	:= TamSX3("RA_MAT")[1]
aHeader[nPos , __AHEADER_DEC__		]	:= 0
aHeader[nPos , __AHEADER_VALID__	]	:= ""
aHeader[nPos , __AHEADER_USE__		]	:= Chr(251)
aHeader[nPos , __AHEADER_TYPE__		]	:= "C"
aHeader[nPos , __AHEADER_F3__		]	:= ""
aHeader[nPos , __AHEADER_CONTEXT__	]	:= "R"
aHeader[nPos , __AHEADER_CBOX__		]	:= ""
aHeader[nPos , __AHEADER_INITPAD__	]	:= ""
aHeader[nPos , __AHEADER_WHEN__		]	:= ""
aHeader[nPos , __AHEADER_VISUAL__	]	:= "V"
aHeader[nPos , __AHEADER_VLDUSR__	]	:= ""
aHeader[nPos , __AHEADER_RESERV16__	]	:= ""
aHeader[nPos , __AHEADER_RESERV17__	]	:= .F.

aAdd(aHeader,{})

nPos := Len(aHeader)

aHeader[nPos]:= Array( __ELEMENTOS_AHEADER__ )
aHeader[nPos , __AHEADER_TITLE__	]	:= Posicione("SX3",2,Padr("RA_NOME" ,10),"X3_TITULO") //"Nome"
aHeader[nPos , __AHEADER_FIELD__	]	:= "NOME"
aHeader[nPos , __AHEADER_PICTURE__	]	:= "@!"
aHeader[nPos , __AHEADER_WIDTH__	]	:= TamSX3("RA_NOME")[1]
aHeader[nPos , __AHEADER_DEC__		]	:= 0
aHeader[nPos , __AHEADER_VALID__	]	:= ""
aHeader[nPos , __AHEADER_USE__		]	:= Chr(251)
aHeader[nPos , __AHEADER_TYPE__		]	:= "C"
aHeader[nPos , __AHEADER_F3__		]	:= ""
aHeader[nPos , __AHEADER_CONTEXT__	]	:= "R"
aHeader[nPos , __AHEADER_CBOX__		]	:= ""
aHeader[nPos , __AHEADER_INITPAD__	]	:= ""
aHeader[nPos , __AHEADER_WHEN__		]	:= ""
aHeader[nPos , __AHEADER_VISUAL__	]	:= "V"
aHeader[nPos , __AHEADER_VLDUSR__	]	:= ""
aHeader[nPos , __AHEADER_RESERV16__	]	:= ""
aHeader[nPos , __AHEADER_RESERV17__	]	:= .F.

aAdd(aHeader,{})

nPos := Len(aHeader)

aHeader[nPos]:= Array( __ELEMENTOS_AHEADER__ )
aHeader[nPos , __AHEADER_TITLE__	]	:= Posicione("SX3",2,Padr("RA_DEPTO" ,10),"X3_TITULO") //"Departamento"
aHeader[nPos , __AHEADER_FIELD__	]	:= "DEPTO"
aHeader[nPos , __AHEADER_PICTURE__	]	:= "@!"
aHeader[nPos , __AHEADER_WIDTH__	]	:= TamSX3("RA_DEPTO")[1]
aHeader[nPos , __AHEADER_DEC__		]	:= 0
aHeader[nPos , __AHEADER_VALID__	]	:= ""
aHeader[nPos , __AHEADER_USE__		]	:= Chr(251)
aHeader[nPos , __AHEADER_TYPE__		]	:= "C"
aHeader[nPos , __AHEADER_F3__		]	:= ""
aHeader[nPos , __AHEADER_CONTEXT__	]	:= "R"
aHeader[nPos , __AHEADER_CBOX__		]	:= ""
aHeader[nPos , __AHEADER_INITPAD__	]	:= ""
aHeader[nPos , __AHEADER_WHEN__		]	:= ""
aHeader[nPos , __AHEADER_VISUAL__	]	:= "V"
aHeader[nPos , __AHEADER_VLDUSR__	]	:= ""
aHeader[nPos , __AHEADER_RESERV16__	]	:= ""
aHeader[nPos , __AHEADER_RESERV17__	]	:= .F.

aAdd(aHeader,{})

nPos := Len(aHeader)

aHeader[nPos]:= Array( __ELEMENTOS_AHEADER__ )
aHeader[nPos , __AHEADER_TITLE__	]	:= Posicione("SX3",2,Padr("QB_DESCRIC" ,10),"X3_TITULO") //"Desc. Depto"
aHeader[nPos , __AHEADER_FIELD__	]	:= "DESCDP"
aHeader[nPos , __AHEADER_PICTURE__	]	:= "@!"
aHeader[nPos , __AHEADER_WIDTH__	]	:= TamSX3("QB_DESCRIC")[1]
aHeader[nPos , __AHEADER_DEC__		]	:= 0
aHeader[nPos , __AHEADER_VALID__	]	:= ""
aHeader[nPos , __AHEADER_USE__		]	:= Chr(251)
aHeader[nPos , __AHEADER_TYPE__		]	:= "C"
aHeader[nPos , __AHEADER_F3__		]	:= ""
aHeader[nPos , __AHEADER_CONTEXT__	]	:= "R"
aHeader[nPos , __AHEADER_CBOX__		]	:= ""
aHeader[nPos , __AHEADER_INITPAD__	]	:= ""
aHeader[nPos , __AHEADER_WHEN__		]	:= ""
aHeader[nPos , __AHEADER_VISUAL__	]	:= "A"
aHeader[nPos , __AHEADER_VLDUSR__	]	:= ""
aHeader[nPos , __AHEADER_RESERV16__	]	:= ""
aHeader[nPos , __AHEADER_RESERV17__	]	:= .F.

aAdd(aHeader,{})

nPos := Len(aHeader)

aHeader[nPos]:= Array( __ELEMENTOS_AHEADER__ )
aHeader[nPos , __AHEADER_TITLE__	]	:= Posicione("SX3",2,Padr("RA_POSTO" ,10),"X3_TITULO") //"Posto"
aHeader[nPos , __AHEADER_FIELD__	]	:= "POSTO"
aHeader[nPos , __AHEADER_PICTURE__	]	:= "@!"
aHeader[nPos , __AHEADER_WIDTH__	]	:= TamSX3("RA_POSTO")[1]
aHeader[nPos , __AHEADER_DEC__		]	:= 0
aHeader[nPos , __AHEADER_VALID__	]	:= ""
aHeader[nPos , __AHEADER_USE__		]	:= Chr(251)
aHeader[nPos , __AHEADER_TYPE__		]	:= "C"
aHeader[nPos , __AHEADER_F3__		]	:= ""
aHeader[nPos , __AHEADER_CONTEXT__	]	:= "R"
aHeader[nPos , __AHEADER_CBOX__		]	:= ""
aHeader[nPos , __AHEADER_INITPAD__	]	:= ""
aHeader[nPos , __AHEADER_WHEN__		]	:= ""
aHeader[nPos , __AHEADER_VISUAL__	]	:= "A"
aHeader[nPos , __AHEADER_VLDUSR__	]	:= ""
aHeader[nPos , __AHEADER_RESERV16__	]	:= ""
aHeader[nPos , __AHEADER_RESERV17__	]	:= .F.

aAdd(aHeader,{})

nPos := Len(aHeader)

aHeader[nPos]:= Array( __ELEMENTOS_AHEADER__ )
aHeader[nPos , __AHEADER_TITLE__	]	:= Posicione("SX3",2,Padr("RA_CC" ,10),"X3_TITULO") //"Centro de Custo"
aHeader[nPos , __AHEADER_FIELD__	]	:= "CC"
aHeader[nPos , __AHEADER_PICTURE__	]	:= "@!"
aHeader[nPos , __AHEADER_WIDTH__	]	:= TamSX3("RA_CC")[1]
aHeader[nPos , __AHEADER_DEC__		]	:= 0
aHeader[nPos , __AHEADER_VALID__	]	:= ""
aHeader[nPos , __AHEADER_USE__		]	:= Chr(251)
aHeader[nPos , __AHEADER_TYPE__		]	:= "C"
aHeader[nPos , __AHEADER_F3__		]	:= ""
aHeader[nPos , __AHEADER_CONTEXT__	]	:= "R"
aHeader[nPos , __AHEADER_CBOX__		]	:= ""
aHeader[nPos , __AHEADER_INITPAD__	]	:= ""
aHeader[nPos , __AHEADER_WHEN__		]	:= ""
aHeader[nPos , __AHEADER_VISUAL__	]	:= "A"
aHeader[nPos , __AHEADER_VLDUSR__	]	:= ""
aHeader[nPos , __AHEADER_RESERV16__	]	:= ""
aHeader[nPos , __AHEADER_RESERV17__	]	:= .F.

aAdd(aHeader,{})

nPos := Len(aHeader)

aHeader[nPos]:= Array( __ELEMENTOS_AHEADER__ )
aHeader[nPos , __AHEADER_TITLE__	]	:= Posicione("SX3",2,Padr("CTT_DESC01" ,10),"X3_TITULO") //"Desc. CC"
aHeader[nPos , __AHEADER_FIELD__	]	:= "DESCCC"
aHeader[nPos , __AHEADER_PICTURE__	]	:= "@!"
aHeader[nPos , __AHEADER_WIDTH__	]	:= TamSX3("CTT_DESC01")[1]
aHeader[nPos , __AHEADER_DEC__		]	:= 0
aHeader[nPos , __AHEADER_VALID__	]	:= ""
aHeader[nPos , __AHEADER_USE__		]	:= Chr(251)
aHeader[nPos , __AHEADER_TYPE__		]	:= "C"
aHeader[nPos , __AHEADER_F3__		]	:= ""
aHeader[nPos , __AHEADER_CONTEXT__	]	:= "R"
aHeader[nPos , __AHEADER_CBOX__		]	:= ""
aHeader[nPos , __AHEADER_INITPAD__	]	:= ""
aHeader[nPos , __AHEADER_WHEN__		]	:= ""
aHeader[nPos , __AHEADER_VISUAL__	]	:= "A"
aHeader[nPos , __AHEADER_VLDUSR__	]	:= ""
aHeader[nPos , __AHEADER_RESERV16__	]	:= ""
aHeader[nPos , __AHEADER_RESERV17__	]	:= .F.

Return Nil

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммямммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁGpMntLista  ╨Autor  Ё Leandro Drumond  ╨ Data Ё 16/11/2014  ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Funcao para Montar listagem generica.				      ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MP11                                                       ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function GpMntLista(aHeader,aCols,cTitulo,nTam)

Local aAdvSize 		:= {}
Local aInfoAdvSize	:= {}
Local aObjCoords	:= {}
Local aObjSize		:= {}
Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), {.T., .F.}) //[1] Acesso; [2]Ofusca
Local aOfuscaCpo	:= {.F.,.F.,.F.,.F., .F., .F., .F., .F.} //um .F. para cada posicao do aHeader
Local aAvFields		:= {} //campos exibidos em tela a serem avaliados pelo gerenciamento de dados sensiveis
Local aPDFields		:= {} //campos que estao classificados como dados sensiveis
Local nX			:= 0
Local nPos			:= 0
Local oDlg
Local oGet

DEFAULT nTam	:= 390
DEFAULT cTitulo	:= ""

aAdvSize		:= MsAdvSize(  , .T. , 390)
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
aAdd( aObjCoords , { 000, 000, .T. , .T. } )
aObjSize := MsObjSize( aInfoAdvSize , aObjCoords )

DEFINE MSDIALOG oDlg FROM aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] Title cTitulo Pixel style DS_MODALFRAME

	oGet := MsNewGetDados():New( aObjSize[1,1],;	// nTop
								 aObjSize[1,2],;   // nLelft
								 aObjSize[1,3],;	// nBottom
	                          	 aObjSize[1,4],;	// nRright
								 NIL,;				// controle do que podera ser realizado na GetDado - nstyle
								 NIL,;				// funcao para validar a edicao da linha - ulinhaOK
								 NIL,;				// funcao para validar todas os registros da GetDados - uTudoOK
  								 NIL,;				// cIniCPOS
								 NIL,;				// aAlter
								 0,; 				// nfreeze
								 99999,;  			// nMax
								 NIL,;		 		// cFieldOK
								 NIL,;				// usuperdel
								 .F.,;				// udelOK
								 @oDlg,;        	// objeto de dialogo - oWnd
								 @aHeader,;			// Vetor com Colunas - AparHeader
								 @aCols;			// Vetor com Header - AparCols
								)

	bSet15	:= {|| nOpca:=1, oDlg:End()}
	bSet24	:= {|| nOpca:=0, oDlg:End()}

	//Tratamento de ProteГЦo de Dados
	If aOfusca[2]
		aAvFields := {"RA_FILIAL","RA_MAT","RA_NOME","RA_DEPTO", "RA_DDEPTO", "RA_POSTO", "RA_CC", "RA_DESCCC"}
		aPDFields := FwProtectedDataUtil():UsrNoAccessFieldsInList(aAvFields)
		oGet:oBrowse:lObfuscate := .T.
		For nX := 1 to Len(aPDFields)
			nPos := aScan(aAvFields, {|x| x == aPDFields[nX]:cField})
			If nPos == 2 //RA_MAT
				aOfuscaCpo[2] := .T.
			ElseIf nPos == 3 //RA_NOME
				aOfuscaCpo[3] := .T.
			ElseIf nPos == 4 //RA_DEPTO
				aOfuscaCpo[4] := .T.
			ElseIf nPos == 5 //RA_DDEPTO
				aOfuscaCpo[5] := .T.
			ElseIf nPos == 6 //RA_POSTO
				aOfuscaCpo[6] := .T.
			ElseIf nPos == 7 //RA_CC
				aOfuscaCpo[7] := .T.
			ElseIf nPos == 8 //RA_DESCCC
				aOfuscaCpo[8] := .T.
			EndIf
		Next nX
		oGet:oBrowse:aObfuscatedCols := aOfuscaCpo
	EndIf

ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 ) CENTERED

Return Nil

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммямммммммммммкмммммммяммммммммммммммммммммкммммммямммммммммммм╩╠╠
╠╠╨Programa  ЁRd4CarEmp  ╨Autor ЁMick William da Silva ╨ Data Ё 04/06/2015╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Funcao Carregar o grupo da filial.					      ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MP12                                                       ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function Rd4CarEmp(cEmpR)
Local cTipo		:=  GetMemVar("RDK_HIERAR")
If cTipo == "1"
	cGrup := xFilial("SQB",cEmpR)
Else
	cGrup := xFilial("RCL",cEmpR)
EndIf

Return cGrup

//-------------------------------------------------------------------
/*/{Protheus.doc} RD4ORGFtr
Making filter-string for standard search SQBORG
@author E.Moskovkina
@since 27/09/2017
@version 1.0
/*/
//-------------------------------------------------------------------
Function RD4ORGFtr()
Local cFiltro := ""

	cFiltro += "Empty(SQB->QB_DTEND) .OR. SQB->QB_DTEND >= Date() .OR. SQB->QB_DTEND == CToD('12/31/9999')"
	cFiltro := "@#" + cFiltro + "@#"

Return(cFiltro)

Static Function MudaLinha()
Local cRd4EmpIDE	:= oGdRd4:aCols[n][GdFieldPos("RD4_EMPIDE",aRd4Header)]
	If !Empty(cRd4EmpIDE)
		Rd4ChecaEmp(cRd4EmpIDE)
	EndIf
Return


//-------------------------------------------------------------------
/*/{Protheus.doc} fRd4HrRUS

@author
@since 29/05/2018
@version 1.0
/*/
//-------------------------------------------------------------------
Function fRd4HrRUS()
Local cTipe := GetMemVar("RDK_HIERAR")

	DBSELECTAREA("RD4")
	RD4->(DBGOTOP())
	While RD4->(!eof())

		IF (RD4->RD4_CODIGO == RDK->RDK_CODIGO .AND. EMPTY(RD4->RD4_HIERAR)  )
			RecLock("RD4",.F.)
			RD4->RD4_HIERAR := cTipe
			MsUnlock()
		Endif
   		RD4->( dbskip() )
  	Enddo
return

/*/{Protheus.doc} fVldCompt
//TODO VerificaГЦo de compartilhamento de tabelas.
@author Eduardo
@since 15/02/2019
@version 1.0
/*/
Function fVldCompt()
	Local cRCL		:= ""
	Local cSQB		:= ""
	Local cRBT		:= ""
	Local lRet		:= .T.

	cSQB := FWModeAccess( "SQB", 1) + FWModeAccess( "SQB", 2) + FWModeAccess( "SQB", 3)
	cRCL := FWModeAccess( "RCL", 1) + FWModeAccess( "RCL", 2) + FWModeAccess( "RCL", 3)
	cRBT:= FWModeAccess( "RBT", 1) + FWModeAccess( "RBT", 2) + FWModeAccess( "RBT", 3)

	If cRCL < cSQB .Or. cRBT <> cRCL
		MsgInfo( oEmToAnsi( STR0053) + CRLF +;
		 				CRLF + oEmToAnsi( STR0054 ) )
		 lRet:= .F.
	EndIf

Return lRet
/*/{Protheus.doc} fBuscDepto
//Consulta especМfica de departamentos.
@author edvf8
@since 19/11/2019
@version undefined
@return return, return_description
@example
(examples)
@see (links_or_references)
/*/
Function fBuscDepto()
Local cTitulo	:= OemToAnsi(STR0055)//"Departamentos"
Local nFor		:= 0
Local nElem		:= 0
Local MvPar
Local MvParDef	:= ""
Local cAlias	:= ""
Local nX3Tam	:= 0
Local cFilDe	:= ""
Local cFilAte	:= ""
Private MvRetor	:= ""
Private aSit	:= {}



DEFAULT lTipoRet 	:= .T.
DEFAULT aElem		:= {}

cFilDe				:= MV_PAR01
cFilAte				:= MV_PAR02

	cAlias := Alias()		// Salva Alias Anterior

	IF lTipoRet
		MvPar:= &(Alltrim(ReadVar()))	// Carrega Nome da Variavel do Get em Questao
		mvRet:=Alltrim(ReadVar())		// Iguala Nome da Variavel ao Nome variavel de Retorno
	EndIF
	If Alltrim(ReadVar()) == "MV_PAR03" .And. !Empty(MvPar)
		MvPar := MV_PAR01 + MvPar
	EndIf
	If Alltrim(ReadVar()) == "MV_PAR04" .And. !Empty(MvPar)
		MvPar := MV_PAR02 + MvPar
	EndIf
	dbSelectArea("SQB")
	If Empty(cFilDe)
		SQB->(DBGOTOP())
		cFilDe:= SQB->QB_FILIAL
	EndIF
	If dbSeek(cFilDe)
		CursorWait()
		While !Eof() .And. SQB->QB_FILIAL >= cFilDe .And. SQB->QB_FILIAL <= cFilAte
			Aadd(aSit, Alltrim(SQB->QB_DESCRIC))
			MvParDef += SQB->QB_FILIAL + SQB->QB_DEPTO
			dbSkip()
		Enddo
		CursorArrow()
	Endif

	IF lTipoRet
		nX3Tam := GetSx3Cache("QB_FILIAL","X3_TAMANHO")+(GetSx3Cache("QB_DEPTO","X3_TAMANHO"))
		IF f_Opcoes(@MvPar,cTitulo,aSit,MvParDef,,,.F., nX3Tam,1)		// Chama funcao f_Opcoes
			CursorWait()
			For nFor := 1 To Len( mVpar ) Step nX3Tam
				IF ( SubStr( mVpar , nFor , nX3Tam ) # Replicate("*",nX3Tam))
					mvRetor := SubStr( mVpar , nFor , nX3Tam )
				Endif
			Next nFor
		   	If( Empty(mvRetor) )
				mvRetor := Space(99)
			EndIf
			&MvRet 	:= mvRetor
			CursorArrow()
		EndIF
	EndIF
	If !Empty(mvRetor)

		VAR_IXB	:= &MvRet

		If Alltrim(ReadVar()) == "MV_PAR03"
			MV_PAR01:= LEFT(VAR_IXB,GetSx3Cache("QB_FILIAL","X3_TAMANHO"))
		EndIf
		If Alltrim(ReadVar()) == "MV_PAR04" .And. !Empty(MvPar)
			MV_PAR02:= LEFT(VAR_IXB,GetSx3Cache("QB_FILIAL","X3_TAMANHO"))
		EndIf
		VAR_IXB	:= RIGHT(VAR_IXB,GetSx3Cache("QB_DEPTO","X3_TAMANHO"))
		&MvRet	:= VAR_IXB
	Else
	 	lTipoRet	:= .F.
	Endif
	dbSelectArea(cAlias)		// Retorna Alias

Return lTipoRet
