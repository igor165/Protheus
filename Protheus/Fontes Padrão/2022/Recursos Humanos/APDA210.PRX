#INCLUDE "PROTHEUS.CH"
#INCLUDE "APDA210.CH"       

Static nRecno := Nil

/*/
зддддддддддбддддддддддбдддддбдддддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁAPDA210   ЁAutorЁEmerson Grassi Rocha     Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддадддддадддддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Participantes/Pessoas vs Mapa de Conhecimento   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                                    Ё
цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё            ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL           Ё
цддддддддддддбддддддддддбдддддддддддбддддддддддддддддддддддддддддддддддд╢
ЁProgramador ЁData      ЁBOPS       ЁMotivo da Alteracao                Ё
цддддддддддддеддддддддддедддддддддддеддддддддддддддддддддддддддддддддддд╢
ЁCecilia Car.Ё03/07/2014ЁTPZWBQ     ЁIncluido o fonte da 11 para a 12 e Ё
Ё            Ё          Ё           Ёefetuada a limpeza.                Ё  
юддддддддддддаддддддддддадддддддддддаддддддддддддддддддддддддддддддддддды/*/
Function APDA210( cAlias , nReg , nOpc , lExecAuto )

Local aArea		:= GetArea()
Local aAreaRbp	:= RBP->( GetArea() )
Local aAreaRbq	:= RBQ->( GetArea() )
Local aAreaRd0	:= RD0->( GetArea() )
Local lExistOpc	:= ( ValType( nOpc ) == "N" )

Local bBlock
Local nPos

Begin Sequence

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSo Executa se o Modo de Acesso dos Arquivos do Modulo APD estiЁ
	Ёverem OK													   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( ApdRelationFile() )
		Break
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁRedefine o Alias                                              Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cAlias	:= "RD0"

	Private aRotina	:=	MenuDef()
	
	Private cCadastro
	IF ( cModulo == "APD" )
		cCadastro   := OemToAnsi( STR0006 )	//"Participantes vs Mapa de Conhecimento"
	Else
		cCadastro   := OemToAnsi( STR0007 )	//"Pessoas vs Mapa de Conhecimento"
	EndIF	

	IF ( lExistOpc )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁGarante o Posicinamento do Recno                              Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		DEFAULT nReg	:= ( cAlias )->( Recno() )
		IF !Empty( nReg )
			( cAlias )->( MsGoto( nReg ) )
		EndIF

		DEFAULT lExecAuto := .F.
		IF ( lExecAuto )

			nPos := aScan( aRotina , { |x| x[4] == nOpc } )
			IF ( nPos == 0 )
				Break
			EndIF
			bBlock := &( "{ |a,b,c,d| " + aRotina[ nPos , 2 ] + "(a,b,c,d) }" )
			Eval( bBlock , cAlias , nReg , nPos )
		
		Else

			Apda210Mnt( cAlias , nReg , nOpc , .T. )
		
		EndIF	

	Else

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Chama a Funcao de Montagem do Browse                                   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		RD0->( dbSetOrder( RetOrdem( cAlias , "RD0_FILIAL+RD0_CODIGO" ) ) )
		mBrowse( 6 , 1 , 22 , 75 , cAlias , NIL , NIL , NIL , "RD0->RD0_MSBLQL=='2'")
	EndIF
		
End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁColoca o Ponteiro do Mouse em Estado de Espera			   	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

RestArea( aAreaRbq )
RestArea( aAreaRbp )
RestArea( aAreaRd0 )
RestArea( aArea    )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura o Cursor do Mouse                				   	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( NIL )

/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁInApda210Exec ЁAutor ЁEmerson Grassi Rocha Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁExecutar Funcoes Dentro de APDA210                           Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁInApda210Exec( cExecIn , aFormParam )						 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁuRet                                                 	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function InApda210Exec( cExecIn , aFormParam )
         
Local uRet

DEFAULT cExecIn		:= ""
DEFAULT aFormParam	:= {}

IF !Empty( cExecIn )
	cExecIn	:= BldcExecInFun( cExecIn , aFormParam )
	uRet	:= &( cExecIn )
EndIF

Return( uRet )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda210VisЁ Autor ЁEmerson Grassi Rocha   Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Participantes/Pessoas ( Visualizar )			Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Apda210Vis( cAlias , nReg )
Return( APDA210( cAlias , nReg , 2 ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda210IncЁ Autor ЁEmerson Grassi Rocha   Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Participantes/Pessoas ( Incluir )				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Apda210Inc( cAlias , nReg )
Return( APDA210( cAlias , nReg , 3 ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda210AltЁ Autor ЁEmerson Grassi Rocha   Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Participantes/Pessoas ( Alterar )				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Apda210Alt( cAlias , nReg )
Return( APDA210( cAlias , nReg , 4 ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda210DelЁ Autor ЁEmerson Grassi Rocha   Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Participantes/Pessoas ( Excluir )				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>          							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Apda210Del( cAlias , nReg )
Return( APDA210( cAlias , nReg , 5 ) )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda210MntЁ Autor ЁEmerson Grassi Rocha   Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Participantes/Pessoas (Manutencao)				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁApda210Mnt( cAlias , nReg , nOpc , lDlgPadSiga )			Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcAlias 		= Alias do arquivo                              Ё
Ё          ЁnReg   		= Numero do registro                            Ё
Ё          ЁnOpc   		= Numero da opcao selecionada                   Ё
Ё          ЁlDlgPadSiga = Numero da opcao selecionada                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Apda210Mnt( cAlias , nReg , nOpc , lDlgPadSiga )

Local aArea				:= GetArea(Alias())
Local aSvKeys			:= GetKeys()
Local aAdvSize			:= {}
Local aInfoAdvSize		:= {}
Local aObjSize			:= {}
Local aObjCoords		:= {}
Local aRd0Header		:= {}
Local aRd0Cols			:= {}
Local aRd0Fields		:= {}
Local aRd0Altera		:= {}
Local aRd0NaoAlt		:= {}
Local aRd0VirtEn		:= {}
Local aRd0NotFields		:= {}
Local aRd0Keys			:= {}
Local aRd0VisuEn		:= {}
Local aRbpHeader		:= {}
Local aRbpCols			:= {}
Local aRbpGdAltera  	:= {}
Local aRbpGdNaoAlt		:= {}
Local aRbpRecnos		:= {}
Local aRbpKeys			:= {}
Local aRbpNotFields		:= {}
Local aRbpVirtGd		:= {}
Local aRbpVisuGd		:= {}
Local aRbpMemoGd		:= {}
Local aSvRbpCols		:= {}
Local aRbpQuery			:= {}
Local aRbqGdAltera  	:= {}
Local aRbqGdNaoAlt		:= {}
Local aRbqRecnos		:= {}
Local aRbqKeys			:= {}
Local aRbqNotFields		:= {}
Local aRbqVirtGd		:= {}
Local aRbqVisuGd		:= {}
Local aRbqMemoGd		:= {}
Local aRbqFldsAux		:= {}
Local aSvRbqCols		:= {}
Local aRbqQuery			:= {}
Local aRdyRecnos		:= {}
Local aRdyKeys			:= {}
Local aFolders			:= Array( 02 )
Local aPages			:= Array( 02 )
Local aObjFolder		:= Array( 02 )
Local aSvSetModulo		:= {}
Local aButtons			:= {}
Local aFreeLocks		:= {}
Local aGdObjects		:= {}
Local bRbpGdDelOk		:= { |lDelOk| CursorWait() , lDelOk := RbpGdDelOk( nOpc , aRbqCols , oGdRbq ) , CursorArrow() , lDelOk }
Local bRbqGdDelOk		:= { |lDelOk|  CursorWait() , lDelOk := RbqGdDelOk(nOpc , oGdRbq) , CursorArrow() , lDelOk }
Local bRbpSort			:= { || NIL }
Local bRbqSort			:= { || NIL }
Local bSet15			:= { || NIL }
Local bSet24			:= { || NIL }
Local bDialogInit		:= { || NIL }
Local bRbpGdTudOk		:= { || NIL }
Local bGdSeek			:= { || NIL }
Local bGdLeg			:= { || NIL }
Local bSvRbqblDblClick	:= { || NIL }
Local bGetRd0			:= { || NIL } 
Local bGetRbp			:= { || NIL }
Local bGetRbq			:= { || NIL }
Local cFilRD0			:= ""
Local cCodRD0			:= ""
Local cRD0KeySeek		:= ""
Local cRBQKeySeek		:= ""
Local cRBPKeySeek		:= ""
Local lLocks			:= .F.
Local lExecLock			:= ( ( nOpc <> 2 ) .and. ( nOpc <> 3 ) )
Local nActFolder		:= 0
Local nOpcAlt			:= 0
Local nRd0Usado			:= 0
Local nRbpUsado			:= 0
Local nRbqUsado			:= 0
Local nLoop				:= 0
Local nOpcNewGd1		:= IF( ( ( nOpc == 2 ) .or. ( nOpc == 5 ) ) , 0 , GD_INSERT + GD_UPDATE + GD_DELETE	)
Local nOpcNewGd2		:= IF( ( ( nOpc == 2 ) .or. ( nOpc == 5 ) ) , 0 , GD_UPDATE + GD_DELETE	)
Local nRbpMaxLocks		:= 5
Local nRbpGhostCol		:= 0
Local nRbqMaxLocks		:= 5
Local nRbqGhostCol		:= 0
Local oDlg				:= NIL
Local oEndRd0			:= NIL	
Local oFolders			:= NIL
Local aFieldsAux		:= {}
Private nGetSX8Len		:= GetSX8Len()
Private __nRbpAtAnt		:= 0

Private aGets
Private aTela
Private aRbqHeader
Private aRbqCols   
Private cRbqNumGhostCol
Private oGdRbp
Private oGdRbq
Private nRd0Recno	:= RD0->( Recno() )   
Private lMsgDelt	:= .F.

nRecno := 0

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁPoe o cursor do Mouse em Estado de Espera					   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

Begin Sequence

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁCheca a Opcao Selecionada									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aRotSetOpc( cAlias , NIL , nOpc , .F. )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta os Dados para a Enchoice							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aRd0NotFields	:= { "RD0_FILIAL" }
	bGetRd0			:= { |lExclu|	IF( lExecLock , lExclu := .T. , aRd0Keys := NIL ),;
										aRd0Cols := RD0->(;
															GdBuildCols(	@aRd0Header		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																			@nRd0Usado		,;	//02 -> Numero de Campos em Uso
																			@aRd0VirtEn		,;	//03 -> [@]Array com os Campos Virtuais
																			@aRd0VisuEn		,;	//04 -> [@]Array com os Campos Visuais
																			"RD0"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																			aRd0NotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																			NIL         	,;	//07 -> [@]Array unidimensional contendo os Recnos
																			"RD0"		   	,;	//08 -> Alias do Arquivo Pai
																			NIL				,;	//09 -> Chave para o Posicionamento no Alias Filho
																			NIL				,;	//10 -> Bloco para condicao de Loop While
																			NIL				,;	//11 -> Bloco para Skip no Loop While
																			NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																			NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																			NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																			NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																			NIL				,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																			NIL				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																			NIL				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																			NIL				,;	//19 -> Carregar Coluna Fantasma
																			NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																			NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
																			NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
																			NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																			@aRd0Keys		,;	//24 -> [@]Array que contera as chaves conforme recnos
																			NIL   			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																			@lExclu			 ;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																	    );
														  ),;
										IF( lExecLock , ( lExclu ) , .T. );
	  					} 
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLock do Registro do RD0									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLocks := WhileNoLock( "RD0_RBQ" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetRd0 ) )
		Break
	EndIF
	CursorWait()
	cFilRD0			:= RD0->RD0_FILIAL
	cCodRD0			:= RD0->RD0_CODIGO
	cRD0KeySeek		:= ( xFilial( "RD0" ,cFilRD0 ) + cCodRD0 )
	cRBQKeySeek		:= ( xFilial( "RBQ" ) + cCodRD0 )
	cRBPKeySeek		:= ( xFilial( "RBP" ) + cCodRD0 )
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Cria as Variaveis de Memoria e Carrega os Dados Conforme o arЁ
	Ё quivo														   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	For nLoop := 1 To nRd0Usado
		aAdd( aRd0Fields , aRd0Header[ nLoop , 02 ] )
		SetMemVar( aRd0Header[ nLoop , 02 ] , aRd0Cols[ 01 , nLoop ] , .T. )
	Next nLoop
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta os Dados para a GetDados							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Campos que nao serao mostrados na GetDados.				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdd( aRbpNotFields , "RBP_FILIAL"  )

	RBP->( dbSetOrder( RetOrdem( "RBP" , "RBP_FILIAL+RBP_CODADO+RBP_CODMAP+RBP_VERSAO" ) ) )
	
	aFieldsAux		:= { { "COLBMP" , "Apda210Leg(RBP->RBP_STATUS, Nil, Nil, Nil, Nil)" } }

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Quando For Inclusao Posiciona o Rbq No Final do Arquivo	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( nOpc == 3  ) //Inclusao
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Garante que na Inclusao o Ponteiro do Rbq estara em Eof()    Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		PutFileInEof( "RBP" )
	EndIF
	bGetRbp	:= { |lLock,lExclu| IF( lExecLock , ( lLock := .T. , lExclu := .T. ) , aRbpKeys := NIL ),;
						 		aRbpCols := RBP->(;
													GdBuildCols(	@aRbpHeader		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																	@nRbpUsado		,;	//02 -> Numero de Campos em Uso
																	@aRbpVirtGd		,;	//03 -> [@]Array com os Campos Virtuais
																	aRbpVisuGd		,;	//04 -> [@]Array com os Campos Visuais
																	"RBP"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																	aRbpNotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																	@aRbpRecnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
																	"RD0"		   	,;	//08 -> Alias do Arquivo Pai
																	cRBPKeySeek		,;	//09 -> Chave para o Posicionamento no Alias Filho
																	NIL				,;	//10 -> Bloco para condicao de Loop While
																	NIL				,;	//11 -> Bloco para Skip no Loop While
																	NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																	NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																	NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																	NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																	aRbpQuery		,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																	.F.				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																	.F.				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																	aFieldsAux		,;	//19 -> Carregar Coluna Fantasma
																	NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																	NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
																	NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
																	NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																	@aRbpKeys		,;	//24 -> [@]Array que contera as chaves conforme recnos
																	@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																	@lExclu			,;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																	nRbpMaxLocks	,;	//27 -> Numero maximo de Locks a ser efetuado
																	Altera			 ;	//28 -> Utiliza Numeracao na GhostCol
															    );
													  ),;
								IF( lExecLock , ( lLock .and. lExclu ) , .T. );
	  		    }
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLock do Registro do RBP									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLocks := WhileNoLock( "RBP" , NIL , NIL , 1 , 1 , .T. , nRbpMaxLocks , 5 , bGetRbp ) )
		Break
	EndIF
	
	CursorWait()

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁObtem o Pocisionamento no GHOSTCOL							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	nRbpGhostCol	:= GdFieldPos( "GHOSTCOL" , aRbpHeader )
	IF ( nRbpGhostCol > 0 )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define Bloco para Sorteio das Informacoes Antes da Gravacao  Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bRbpSort := { || CursorWait() , aSort( aRbpCols , NIL , NIL , { |x,y| ( x[ nRbpGhostCol ] < y[ nRbpGhostCol ] ) } ) , CursorArrow() }
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁEfetuo Copia para Comparacao na Saida						   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aSvRbpCols	:= aClone( aRbpCols )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Campos que apenas serao visualizados na GetDados.			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
    aAdd( aRbpVisuGd, "RBP_CODADO" )
	aAdd( aRbpVisuGd, "RBP_VERSAO" )    		
	aAdd( aRbpVisuGd, "RBP_STATUS" )
	aAdd( aRbpVisuGd, "RBP_DTAPRO" )
	aAdd( aRbpVisuGd, "RBP_AUTOR"  )    
    
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega os Campos Editaveis para a GetDados				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	For nLoop := 1	To nRbpUsado
		SetMemVar( aRbpHeader[ nLoop , 02 ] , GetValType( aRbpHeader[ nLoop , 08 ] , aRbpHeader[ nLoop , 04 ] ) , .T. )
		IF (;
			 	(;
					( aScan( aRbpVirtGd		, aRbpHeader[ nLoop , 02 ] ) == 0 ) .and.	;
		   			( aScan( aRbpVisuGd		, aRbpHeader[ nLoop , 02 ] ) == 0 ) .and.	;
		   			( aScan( aRbpNotFields	, aRbpHeader[ nLoop , 02 ] ) == 0 ) .and.	;
		   			( aScan( aRbpGdNaoAlt	, aRbpHeader[ nLoop , 02 ] ) == 0 )			;
		   	 	);
		  	)
			aAdd( aRbpGdAltera , aRbpHeader[ nLoop , 02 ] )
		EndIF
	Next nLoop
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define os Campos que nao serao carregados					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdd( aRbqNotFields , "RBQ_FILIAL" )
	aAdd( aRbqNotFields , "RBQ_DESMAP" )
	aAdd( aRbqNotFields , "RBQ_DESDOR" )
	aAdd( aRbqNotFields , "RBQ_CMADO"  )
	aAdd( aRbqNotFields , "RBQ_MMADO"  )
	aAdd( aRbqNotFields , "RBQ_CMADOR" )
	aAdd( aRbqNotFields , "RBQ_MMADOR" )   
	  
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define Array com os Campos Auxiliares    					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
//	IF ( Altera )
//		aRbqFldsAux := { { "GHOSTCOL" , "RbqNumGhostCol()" } }
		aRbqFldsAux	:= { { "GHOSTCOL" , "RbqNumGhostCol()" }, { "COLBMP" , "Apda210Leg(RBQ->RBQ_STATUS, Nil, Nil, Nil, Nil)" } }
//	EndIF	

	RBQ->( dbSetOrder( RetOrdem( "RBQ" , "RBQ_FILIAL+RBQ_CODADO+RBQ_CODMAP+RBQ_VERSAO" ) ) )
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁCarrega Informacoes do Rbq									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bGetRbq	:= { |lLock,lExclu| IF( lExecLock , ( lLock := .T. , lExclu := .T. ) , aRbqKeys := NIL ),;
						 			aRbqCols := RBQ->(;
														GdBuildCols(	@aRbqHeader		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																		@nRbqUsado		,;	//02 -> Numero de Campos em Uso
																		@aRbqVirtGd		,;	//03 -> [@]Array com os Campos Virtuais
																		aRbqVisuGd		,;	//04 -> [@]Array com os Campos Visuais
																		"RBQ"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																		aRbqNotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																		@aRbqRecnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
																		"RD0"		   	,;	//08 -> Alias do Arquivo Pai
																		cRBQKeySeek		,;	//09 -> Chave para o Posicionamento no Alias Filho
																		NIL				,;	//10 -> Bloco para condicao de Loop While
																		NIL				,;	//11 -> Bloco para Skip no Loop While
																		NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																		NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																		NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																		NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																		aRbqQuery		,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																		.F.				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																		.F.				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																		aRbqFldsAux		,;	//19 -> Carregar Coluna Fantasma
																		NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																		NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
																		NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
																		NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																		@aRbqKeys		,;	//24 -> [@]Array que contera as chaves conforme recnos
																		@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																		@lExclu			,;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																		nRbqMaxLocks	,;	//27 -> Numero maximo de Locks a ser efetuado
																		.T.			 ;	//28 -> Utiliza Numeracao na GhostCol
																    );
											  		),;
									IF( lExecLock , ( lLock .and. lExclu ) , .T. );
	  		    }
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLock do Registro do Rbq									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLocks := WhileNoLock( "RBQ" , NIL , NIL , 1 , 1 , .T. , nRbqMaxLocks , 5 , bGetRbq ) )
		Break
	EndIF

	CursorWait()

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁObtem o Pocisionamento no GHOSTCOL							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	nRbqGhostCol	:= GdFieldPos( "GHOSTCOL" , aRbqHeader )
	IF ( nRbqGhostCol > 0 )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁObtem a ultima numeracao Gerada							   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		cRbqNumGhostCol	:= aRbqCols[ Len( aRbqCols ) , nRbqGhostCol ]
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define Bloco para Sorteio das Informacoes Antes da Gravacao  Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bRbqSort := { || CursorWait() , aSort( aRbqCols , NIL , NIL , { |x,y| ( x[ nRbqGhostCol ] < y[ nRbqGhostCol ] ) } ) , CursorArrow() }
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁEfetuo Copia para Comparacao na Saida						   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aSvRbqCols	:= aClone( aRbqCols )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁGaranto que o Ponteiro Estara no Final do Arquivo para que naoЁ
	ЁCarregue Conteudo Invalido nos Inicializadores Padroes        Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	PutFileInEof( "RBQ" )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSe ja houver informacoes no Rbq nao Permite a Inclusao, apenasЁ
	Ёalteracao ou Exclusao										   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( ( nOpc <> 3 ) .and. ( Len( aRbpRecnos ) == 0 ) )
		//"NЦo existem Mapas cadastrados para este participante. Selecione a op┤└o de InclusЦo"
		MsgInfo(  OemToAnsi( STR0018 ) , cCadastro )
		Break
	ElseIF ( ( nOpc == 3 ) .and. ( Len( aRbpRecnos ) > 0 ) )
		//"J═ Existem Mapas cadastrados para este participante. Selecione a op┤└o de Altera┤└o"
		MsgInfo(  OemToAnsi( STR0011 ) , cCadastro )
		Break
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define os Campos Nao Alteraveis            				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	For nLoop := 1 To Len( aRbqMemoGd )
		aAdd( aRbqGdNaoAlt  , aRbqMemoGd[ nLoop , 02 ] )
	Next nLoop

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Campos que apenas serao visualizados na GetDados.			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdd( aRbqVisuGd, "RBQ_CODADO" )
	aAdd( aRbqVisuGd, "RBQ_CODMAP" )
    aAdd( aRbqVisuGd, "RBQ_ESCALA" )           
    aAdd( aRbqVisuGd, "RBQ_CODDOR" )
    aAdd( aRbqVisuGd, "RBQ_VERSAO" )
    aAdd( aRbqVisuGd, "RBQ_STATUS" )           
    aAdd( aRbqVisuGd, "RBQ_AUTOR"  )           
   	aAdd( aRbqVisuGd, "RBQ_DATITM" )   
   	
	If nOpc == 4 //Alteracao
	    aAdd( aRbqVisuGd, "RBQ_CODCOM" )   
	    aAdd( aRbqVisuGd, "RBQ_ITECOM" )   
	    aAdd( aRbqVisuGd, "RBQ_HABIL"  )           
	EndIf
                                                                    
  /*здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega os Campos Editaveis para a GetDados				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aRbqGdAltera  	:= {"RBQ_ITEESC","RBQ_DITESC"}  
	
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁCarrega os Recnos e as Chaves correspondentes dos campos MemosЁ
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( ( nOpc <> 2 ) .and. ( nOpc <> 3 ) )
		IF !( lLocks := ApdMemRec( "RBQ" , aRbqRecnos , aRbqMemoGd , @aRdyRecnos , @aRdyKeys , .T. ) )
			Break
		EndIF
    EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta as Dimensoes dos Objetos         					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	DEFAULT lDlgPadSiga	:= .F.
	aAdvSize		:= MsAdvSize( NIL , lDlgPadSiga )
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para o TudoOk da GetDados do Rbp			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bRbpGdTudOk		:= { || oGdRbp:TudoOk() }						//Valida as Informacoes da GetDados Rbp

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para o TudoOk da GetDados do Rbq			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bRbqGdTudOk		:= { || oGdRbq:TudoOk() }						//Valida as Informacoes da GetDados Rbq

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para a Tecla <CTRL-O>						   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bSet15		:= { || IF(; 
								( ( nOpc == 3 ) .or. ( nOpc == 4 ) );			//Inclusao ou Alteracao
								.and.;
								Eval( bRbpGdTudOk );							//Valida as Informacoes da GetDados
								.and.;
								Eval( bRbqGdTudOk ),;							//Valida as Informacoes da GetDados
								(;
									Eval( oGdRbp:bChange , .T. ),;				//Transere as informacoes Atuais para o aRbqCols
									aRbpCols := oGdRbp:aCols,;					//Redireciona o Ponteiro do aRbpCols
									nOpcAlt := 1 ,;
									RestKeys( aSvKeys , .T. ),;
									oDlg:End();
							 	),;
							 	IF(;
							 		( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) ,;		//Inclusao ou Visualizacao
							 			(;
							 				nOpcAlt := 0 ,;
							 				.F.;
							 			 ),;
									(;
										nOpcAlt := IF( nOpc == 2 , 0 , 1 ) ,;	//Visualizacao ou Exclusao
										RestKeys( aSvKeys , .T. ),;
										oDlg:End();
							 		);
							 	  );
						   );
					 }
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para a Tecla <CTRL-X>     	   				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bSet24		:= { || ( nOpcAlt := 0 , RestKeys( aSvKeys , .T. ) , oDlg:End() ) }

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Botao de Pesquisa na GetDados					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bGdSeek := { ||	Apda210GdSeek( aGdObjects , nActFolder , aPages , aObjFolder )	,;
					SetKey( VK_F4 , bGdSeek ) ;
			   }
	aAdd(;
			aButtons	,;
							{;
								"pesquisa"							,;
	   							bGdSeek								,;
	       	   					OemToAnsi( STR0001 + "...<F4>"  )	,;	//"Pesquisar"
	       	   					OemToAnsi( STR0001 )				 ;	//"Pesquisar"
	           				};
	     )

	bGdLeg := { ||	Apda210Leg("#", aGdObjects , nActFolder , aPages , aObjFolder)	,;
					SetKey( VK_F5 , bGdLeg ) ;
			   }
	aAdd(;
			aButtons	,;
							{;
								"bmpvisual"							,;
	   							bGdLeg								,;
	       	   					OemToAnsi( STR0023+ "...<F5>"  )	,;	//"Legenda"
	       	   					OemToAnsi( STR0023)				 	;	//"Legenda"
	           				};
	     )


	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para a Inicializacao do Dialog            	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bDialogInit		:= { ||;
								oGdRbp:Hide()											,;
								oGdRbq:Hide()											,;
								aObjFolder[01,01,01] := oEndRd0							,;
								aObjFolder[01,01,02] := { || .T. }						,;
								aObjFolder[01,01,03] := NIL								,;
								aObjFolder[02,01,01] := oGdRbp							,;
								aObjFolder[02,01,02] := bRbpGdTudOk						,;
								aObjFolder[02,01,03] := NIL								,;
								aObjFolder[02,02,01] := oGdRbq							,;
								aObjFolder[02,02,02] := bRbqGdTudOk						,;
								aObjFolder[02,02,03] := NIL								,;
								EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons )	,;
								SetKey( VK_F4 , bGdSeek )								,;
								aGdObjects := {}										,;
					 	 		SetKey( VK_F5 , bGdLeg )								,;
								aRotSetOpc( cAlias , NIL , nOpc , .F. )					 ;
					   }

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Conteudo do aPages								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aPages[ 01 ]   		:= OemToAnsi( IF( cModulo == "APD" , STR0008 /*"Participante"*/ , STR0009 /*"Pessoa"*/ ) )
	aPages[ 02 ]		:= OemToAnsi( STR0010 /*"Mapas"*/ )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Conteudo do aFolders								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aFolders[ 01 ] 		:= OemToAnsi( "&"+IF( cModulo == "APD" , STR0008 /*"Participante"*/ , STR0009 /*"Pessoa"*/ ) )
	aFolders[ 02 ] 		:= OemToAnsi( "&"+STR0010 /*"Mapas"*/ )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define os Elementos para o Array do Objeto Folder        	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aObjFolder[ 01 ]	:= Array( 01 , 03 )
	aObjFolder[ 02 ]	:= Array( 02 , 03 )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁGarante o Posicionamento do RD0							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	RD0->( MsGoto( nReg ) )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta o Dialogo Principal para a Manutencao das Formulas	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	DEFINE MSDIALOG oDlg TITLE cCadastro From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF GetWndDefault() PIXEL

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta as Dimensoes do Objeto Folder   					   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
		aObjSize := MsObjSize( aInfoAdvSize , aObjCoords )
		
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Carrega o Objeto Folder               					   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		oFolders := TFolder():New(	aObjSize[ 1 , 1 ]		,;
									aObjSize[ 1 , 2 ]		,;
									aFolders				,;
									aPages					,;
									oDlg					,;
									NIL						,;
									NIL						,;
									NIL						,;
									.T.						,;
									.F.						,;
									aObjSize[ 1 , 4 ]		,;
									aObjSize[ 1 , 3 ]		 ;
								 )

		oFolders:bSetOption := { |nNewFolder| Apda210VldRec(),	FolderSetOption( nNewFolder , oFolders:nOption , aObjFolder , @aGdObjects , @nActFolder ) }
		
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta as Dimensoes para o Objeto Enchoice 				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aObjCoords := {}
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
		aObjSize := MsObjSize( aInfoAdvSize , aObjCoords )
		aObjSize[ 1 , 1 ] += 15 //Alinha em Relacao ao Folder

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta o Objeto Enchoice para o RD0                      	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		oEndRd0	:= MsmGet():New(	cAlias					,;
									nReg					,;
									2						,;
									NIL						,;
									NIL						,;
									NIL						,;
									aRd0Fields				,;
									aObjSize[1]				,;
									aRd0Altera				,;
									NIL						,;
									NIL						,;
									NIL						,;
									oFolders:aDialogs[ 01 ]	,;
									NIL						,;
									.F.						,;
									NIL						,;
									.F.			 			 ;
								)

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta as Dimensoes para os Objetos GetDados   	   		   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aObjCoords := {}
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
		aObjSize := MsObjSize( aInfoAdvSize , aObjCoords )
		aObjSize[ 1 , 1 ] += 15 //Alinha em Relacao ao Folder

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta o Objeto GetDados para o Rbq						   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		oGdRbp	:= MsNewGetDados():New(	aObjSize[1,1]								,;
										aObjSize[1,2]								,;
										aObjSize[1,3]								,;
										aObjSize[1,4]								,;
										nOpcNewGd1									,;
										"RbpGdLinOk"								,;
										"RbpGdTudOk"								,;
										""											,;
										aRbpGdAltera								,;
										0											,;
										9999										,;
										NIL											,;
										NIL											,;
										bRbpGdDelOk									,;
										oDlg										,;
										aRbpHeader									,;
										aRbpCols									 ;
									 )
		oGdRbp:oBrowse:bGotFocus := { || RbpGotFocus( oGdRbp ) }
		oGdRbp:bChange := { |lColsToAll| Rbp2RbqChg( oGdRbp , @oGdRbq , @aRbqCols , lColsToAll ) }
		oGdRbp:oBrowse:cToolTip := OemToAnsi( STR0010 )	//"Mapas"

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta o Objeto GetDados para o Rbq						   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		oGdRbq	:= MsNewGetDados():New(	aObjSize[2,1]											,;
										aObjSize[2,2]											,;
										aObjSize[2,3]											,;
										aObjSize[2,4]											,;
										nOpcNewGd2												,;
										"RbqGdLinOk"											,;
										"RbqGdTudOk"											,;
										""														,;
								   		aRbqGdAltera											,;  
										0														,;
										999999													,;
										NIL														,;
										NIL														,;
										bRbqGdDelOk												,;
										oDlg													,;
										aRbqHeader												,;
										GdRmkaCols( aRbqHeader , .F. , .T. , .T. , NIL , .F. )	 ;
									 )

		oGdRbq:oBrowse:cToolTip		:= OemToAnsi( STR0020 )	//"Itens dos Mapas"
		
	ACTIVATE MSDIALOG oDlg ON INIT Eval( bDialogInit ) CENTERED

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Coloca o Ponteiro do Mouse em Estado de Espera			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorWait()

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁGarante o Posicionamento do RD0							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	RD0->( MsGoto( nReg ) )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁQuando Confirmada a Opcao e Nao for Visualizacao Grava ou   ExЁ
	Ёclui as Informacoes do RD0 e Rbq							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF( nOpcAlt == 1 )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Apenas se nao For Visualizacao              				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
 		IF ( nOpc != 2 )
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Gravando/Incluido ou Excluindo Informacoes do SRY/Rbq        Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			MsAguarde(;
							{ ||;
									Eval( bRbpSort  ),;				//Sorteia o aRbpCols para Comparacao na Gravacao
									Eval( bRbqSort  ),;				//Sorteia o aRbqCols para Comparacao na Gravacao
									Apda210Grava(;
													nOpc		,;	//Opcao de Acordo com aRotina
							 						nReg		,;	//Numero do Registro do Arquivo Pai ( RD0 )
							 						aRbpHeader	,;	//Campos do Arquivo Filho ( Rbp )
							 						aRbpCols	,;	//Itens Atual do Arquivo Filho ( Rbp )
							 						aSvRbpCols	,;	//Itens Anteriores do Arquivo Filho ( Rbp )
							 						aRbpVirtGd	,;	//Campos Virtuais do Arquivo Filho ( Rbp )
							 						aRbpRecnos	,;	//Recnos do Arquivo Filho ( Rbp )
							 						aRbpMemoGd	,;	//Campos Memo  ( Rbp )							 						
							 						aRbqHeader	,;	//Campos do Arquivo de Sub-Itens ( Rbq )
							 						aRbqCols	,;	//Sub-Itens Atuis do Arquivo de Sub-Itens ( Rbq )
							 						aSvRbqCols	,;	//Sub-Itens Anteriores do Arquivo de Sub-Itens ( Rbq )
							 						aRbqVirtGd	,;	//Campos Virtuais do Arquivo de Sub-Itens ( Rbq )
							 						aRbqRecnos	,;	//Recnos do Arquivo de Sub-Itens ( Rbq )
							 						aRbqMemoGd	 ;	//Campos Memo na de Sub-Itens ( Rbq )
							 					);
		 					 };
						)
		EndIF
	Else
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё RollBack da Numeracao Automatica            				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		While ( GetSX8Len() > nGetSX8Len )
			RollBackSX8()
		End While
	EndIF

End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Coloca o Ponteiro do Mouse em Estado de Espera			   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁLibera os Locks             								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aAdd( aFreeLocks , { "RBQ_RD0"	, NIL 			, aRd0Keys } )
aAdd( aFreeLocks , { "RBQ"		, aRbqRecnos	, aRbqKeys } )
aAdd( aFreeLocks , { "RDY" 		, aRdyRecnos	, aRdyKeys } )
ApdFreeLocks( aFreeLocks )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura os Dados de Entrada								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RestArea( aArea )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura as Teclas de Atalho											 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RestKeys( aSvKeys , .T. )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura o Estado do Ponteiro do Mouse						   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( MbrChgLoop( .F. ) )


/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda210GdSeekЁAutorЁEmerson Grassi Rocha  Ё Data Ё27/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁEfetuar Pesquisa na GetDados                               	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA080                                                		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda210GdSeek( aGdObjects , nActFolder , aPages , aObjFolder )

Local aSvKeys 		:= GetKeys()
Local cProcName3	:= Upper( AllTrim( ProcName( 3 ) ) )
Local cProcName5	:= Upper( AllTrim( ProcName( 5 ) ) )

Local cMsgInfo
Local cTitle
Local nPosGdObj             

DEFAULT aGdObjects := {}

Begin Sequence

	IF !( "APDA210MNT" $ ( cProcName3 + cProcName5 ) )
		Break
	EndIF

	IF (;
			Empty( aGdObjects );
			.or.;
			( ( nPosGdObj := aScan( aGdObjects[ nActFolder ] , .T. ) ) == 0 );
		)	
		cMsgInfo := STR0013	//"OpГЦo disponМvel apenas para pesquisa na(s) Pasta(s):"
		cMsgInfo += CRLF
		cMsgInfo += aPages[ 02 ]
		MsgInfo( OemToAnsi( cMsgInfo ) , cCadastro )
		Break
	EndIF

	nObj := GetObjGdSeek( aGdObjects , nActFolder , aObjFolder , @cTitle )
	IF ( nObj == 0 )
		Break
	EndIF
	GdSeek( aObjFolder[ nActFolder , nObj , 01 ] , OemToAnsi( cTitle ) )

End Sequence

RestKeys( aSvKeys , .T. )

Return( NIL )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o	   ЁGetObjGdSeek	ЁAutorЁEmerson Grassi 	  Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁRetorna as Opcoes para Pesquisa na GetDados                 Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNumero do Objeto para Pesquisa na GetDados                  Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁApda210GdSeek() em APDA080()							    Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function GetObjGdSeek( aGdObjects , nActFolder , aObjFolder , cTitle )

Local aSvKeys		:= GetKeys()
Local aItens		:= {}
Local aObjs			:= {}
Local bSet15		:= { || lOpcOk	:= .T.	, RestKeys( aSvKeys , .T. ) , oDlg:End() }
Local bSet24		:= { || nOpcRel	:= 0	, RestKeys( aSvKeys , .T. ) , oDlg:End() }
Local lOpcOk		:= .F.
Local nOpjGdSeek	:= 1
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}

Local nLoop
Local nLoops
Local oRadio
Local oDlg
Local oGroup
Local oFont

Begin Sequence

	DEFAULT cTitle := STR0001 + " "	//Pesquisar
	nLoops := Len( aObjFolder[ nActFolder ] )
	For nLoop := 1 To nLoops
		IF aGdObjects[ nActFolder , nLoop ]
			aAdd( aObjs , nLoop )
			aAdd( aItens , aObjFolder[ nActFolder , nLoop , 1 ]:oBrowse:cToolTip )
		EndIF
	Next nLoop

	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta as Dimensoes dos Objetos         					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	aAdvSize		:= MsAdvSize()
	aAdvSize[5]	:=	(aAdvSize[5]/100) * 60	//horizontal
	aAdvSize[6]	:=  (aAdvSize[6]/100) * 50	//Vertical
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }					 
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aObjSize	:= MsObjSize( aInfoAdvSize , aObjCoords )
	aGdCoord	:= { (aObjSize[1,1]+3), (aObjSize[1,2]+5), (((aObjSize[1,3])/100)*50), (((aObjSize[1,4])/100)*55) }	//1,3 Vertical /1,4 Horizontal

	DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
	DEFINE MSDIALOG oDlg TITLE TITLE OemToAnsi( STR0001 ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF GetWndDefault() PIXEL //"Pesquisar"

		@ aGdCoord[1]+5 , aGdCoord[2]	GROUP oGroup TO (aGdCoord[3]/1.5),aGdCoord[4]+10  LABEL OemToAnsi(STR0019) OF oDlg PIXEL //"Selecione o Objeto da Pesquisa"
		oGroup:oFont:=oFont

 		oRadio 			:= TRadMenu():New( 025 , 010 , aItens , NIL , oDlg , NIL , NIL , NIL , NIL , NIL , NIL , NIL , 115 , 010 , NIL , NIL , NIL , .T. )
		oRadio:bSetGet	:= { |nItem| IF( nItem <> NIL , nOpjGdSeek := nItem , nOpjGdSeek ) }
		oDlg:lEscClose	:= .F. //Nao permite sair ao se pressionar a tecla ESC.
	
	ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 )
	RestKeys( aSvKeys , .T. )
	
	IF !( lOpcOk )
		nOpjGdSeek := 0
	Else
		cTitle 		+= aItens[ nOpjGdSeek ]
		nOpjGdSeek  := aObjs[ nOpjGdSeek ]
	EndIF

End Sequence

Return( nOpjGdSeek )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbpGotFocus	 	 ЁAutorЁEmerson Grassi    Ё Data Ё27/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁGotFocus para os Objetos GetDados do Rbp					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA080()													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function RbpGotFocus( oGdRbp )

IF Empty( __nRbpAtAnt )
	__nRbpAtAnt := oGdRbp:oBrowse:nAt
EndIF	

Return( NIL )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbp2RbqChg	 	 ЁAutorЁEmerson Grassi    Ё Data Ё27/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁChange da GetDados Avaliados/Rede no Folder Avaliadores  	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA080()													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Rbp2RbqChg( oGdRbp , oGdRbq , aRbqCols , lColsToAll )

Local aRbqCposPes
Local aRbqCposSrt

Local bColsToAll
Local bAllToCols

Local nRbpSvAt

DEFAULT lColsToAll	:= .F.

Begin Sequence

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁGaranto que o Ponteiro Estara no Final do Arquivo para que naoЁ
	ЁCarregue Conteudo Invalido nos Inicializadores Padroes        Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	PutFileInEof( "RBQ" )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁVerifica se Deve Transferir para do aCols para o aColsAll     Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF (;
			(;
				( Inclui );
				.or.;
				( Altera );
			);
		)		

		nRbpSvAt	:= oGdRbp:oBrowse:nAt

		IF (;
				!Empty( __nRbpAtAnt );
				.and.;
				( __nRbpAtAnt <> nRbpSvAt );
			)	
			
			oGdRbp:Goto( __nRbpAtAnt )

			IF !( oGdRbq:TudoOk() )
				oGdRbq:oBrowse:SetFocus()
				oGdRbp:Refresh()
				Break
			EndIF
			
			lColsToAll	:= (oGdRbp:oBrowse:nAt ==__nRbpAtAnt)

		EndIF
                                                      


		IF ( lColsToAll )
		
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			ЁObtem as Informacoes para o GdColsExChange para o Rbq         Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			RbqInfTrf(	oGdRbp			,;
						oGdRbq			,;
						@aRbqCposPes	,;
						@aRbqCposSrt	,;
						@bColsToAll		,;
						@bAllToCols		 ;
				  )
	
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			ЁTransfiro os Dados do aCols para o aColsAll				   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			GdColsExChange(	@aRbqCols		,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
							@oGdRbq:aCols 	,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
							oGdRbq:aHeader	,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
							NIL				,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
							NIL				,;	//05 -> Chave para Busca no aColsAll para Carga do aCols
							aRbqCposSrt		,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
							aRbqCposPes		,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
							NIL				,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
							.T.				,;	//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
							.T.				,;	//10 -> Se deve Transferir do aCols para o aColsAll
							.F.				,;	//11 -> Se deve Transferir do aColsAll para o aCols
							.T.				,;	//12 -> Se Existe o Elemento de Delecao no aCols
							.T.				,;	//13 -> Se deve Carregar os Inicializadores padroes
							bColsToAll		,;	//14 -> Condicao para a Transferencia do aCols para o aColsAll
							bAllToCols		 ;	//15 -> Condicao para a Transferencia do aColsAll para o aCols
						 )

		EndIF
		
		IF ( __nRbpAtAnt <> nRbpSvAt )

			oGdRbp:Goto( nRbpSvAt )

			__nRbpAtAnt := nRbpSvAt

		EndIF

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁObtem as Informacoes para o GdColsExChange para o Rbq         Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		RbqInfTrf(	oGdRbp			,;
					oGdRbq			,;
					@aRbqCposPes	,;
					@aRbqCposSrt	,;
					@bColsToAll		,;
					@bAllToCols		 ;
			 	 )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁTransfiro os Dados do aColsAll para o aCols				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		GdColsExChange(	@aRbqCols		,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
						@oGdRbq:aCols 	,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
						oGdRbq:aHeader	,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
						NIL				,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
						NIL				,;	//05 -> Chave para Busca no aColsAll para Carga do aCols
						aRbqCposSrt		,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
						aRbqCposPes		,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
						NIL				,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
						.T.				,;	//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
						.F.				,;	//10 -> Se deve Transferir do aCols para o aColsAll
						.T.				,;	//11 -> Se deve Transferir do aColsAll para o aCols
						.T.				,;	//12 -> Se Existe o Elemento de Delecao no aCols
						.T.				,;	//13 -> Se deve Carregar os Inicializadores padroes
						bColsToAll		,;	//14 -> Condicao para a Transferencia do aCols para o aColsAll
						bAllToCols		 ;	//15 -> Condicao para a Transferencia do aColsAll para o aCols
					 )

	Else
	
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁObtem as Informacoes para o GdColsExChange para o Rbq         Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		RbqInfTrf(	oGdRbp			,;
					oGdRbq			,;
					@aRbqCposPes	,;
					@aRbqCposSrt	,;
					@bColsToAll		,;
					@bAllToCols		 ;
			 	 )
		
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁTransfiro os Dados do aColsAll para o aCols				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		GdColsExChange(	@aRbqCols		,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
						@oGdRbq:aCols 	,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
						oGdRbq:aHeader	,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
						NIL				,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
						NIL				,;	//05 -> Chave para Busca no aColsAll para Carga do aCols
						aRbqCposSrt		,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
						aRbqCposPes		,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
						oGdRbq:aHeader	,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
						.T.				,;	//09 -> Conteudo do Elemento "Deleted" a ser Carregado na Remontagem dos aCols
						.F.				,;	//10 -> Se deve Transferir do aCols para o aColsAll
						.T.				,;	//11 -> Se deve Transferir do aColsAll para o aCols
						.T.				,;	//12 -> Se Existe o Elemento de Delecao no aCols
						.T.				,;	//13 -> Se deve Carregar os Inicializadores padroes
						bColsToAll		,;	//14 -> Condicao para a Transferencia do aCols para o aColsAll
						bAllToCols		 ;	//15 -> Condicao para a Transferencia do aColsAll para o aCols
					 )
	EndIF
	
	oGdRbq:Goto( 1 )
	oGdRbq:Refresh()

End Sequence

Return( NIL )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqInfTrf		 ЁAutorЁEmerson Grassi    Ё Data Ё27/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁMonta as informacoes que serao utilizadas para a  transferenЁ
Ё          Ёcia de informacoes no GdColsExChange do Rbq                 Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA080()													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function RbqInfTrf(	oGdRbp		,;
							oGdRbq		,;
							aRbqCposPes	,;
							aRbqCposSrt	,;
							bColsToAll	,;
							bAllToCols	 ;
				  		)

Local cRbpCodMap		:= GdFieldGet( "RBP_CODMAP" , oGdRbp:nAt , .F. , oGdRbp:aHeader , oGdRbp:aCols )
Local cRbpCodAdo		:= GdFieldGet( "RBP_CODADO" , oGdRbp:nAt , .F. , oGdRbp:aHeader , oGdRbp:aCols )
Local cRbpVersao		:= GdFieldGet( "RBP_VERSAO" , oGdRbp:nAt , .F. , oGdRbp:aHeader , oGdRbp:aCols )	

Local nRbqCodMap		:= GdFieldPos( "RBQ_CODMAP"	, oGdRbq:aHeader )
Local nRbqCodAdo  		:= GdFieldPos( "RBQ_CODADO"	, oGdRbq:aHeader )
Local nRbqVersao		:= GdFieldPos( "RBQ_VERSAO"	, oGdRbq:aHeader )
Local nRbqGhostCol		:= GdFieldPos( "GHOSTCOL"	, oGdRbq:aHeader )

/*
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCarrega Array a Posicao dos Campos para o "Sort"			  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
aRbqCposSrt := {}
aAdd( aRbqCposSrt	, nRbqCodMap 	)
aAdd( aRbqCposSrt	, nRbqCodAdo 	)
aAdd( aRbqCposSrt	, nRbqVersao  	)

IF ( nRbqGhostCol > 0 )
	aAdd( aRbqCposSrt	, nRbqGhostCol	)
EndIF

/*
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCarrega Array com a Posicao dos Campos e as Chaves  CorresponЁ
Ёdentes														  Ё	
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
aRbqCposPes := {}
aAdd( aRbqCposPes  	, { nRbqCodMap	, cRbpCodMap } ) 
aAdd( aRbqCposPes	, { nRbqCodAdo	, cRbpCodAdo } )
aAdd( aRbqCposPes	, { nRbqVersao	, cRbpVersao } )

/*
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁDefine os Blocos para Validacao da Transferencia do aCols  paЁ
Ёra o aColsAll												  Ё 
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
bColsToAll	:= { | aCols , aHeader , nItem |; 
												!Empty( aCols[ nItem , nRbqCodMap ] );
												.and.;
												!Empty( aCols[ nItem , nRbqCodAdo ] );
												.and.;
												!Empty( aCols[ nItem , nRbqVersao ] );												
			   }

/*
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁDefine os Blocos para Validacao da Transferencia do  aColsAllЁ
Ёparara o aColsAll											  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
bAllToCols	:= { | aColsAll , aHeaderAll , nFindKey |;
														!Empty( aColsAll[ nFindKey , nRbqCodMap ] );
														.and.;
														!Empty( aColsAll[ nFindKey , nRbqCodAdo ] );
														.and.;
														!Empty( aColsAll[ nFindKey , nRbqVersao  ] );
			   }

Return( NIL )


/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbpGdLinOk	ЁAutorЁEmerson Grassi    	  Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁLinha Ok do Rbp                                             Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRbpGdLinOk( oBrowse , lSetMemVar )						    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbpGdLinOk( oBrowse , lSetMemVar )

Local lLinOk		:= .T.

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

	Begin Sequence

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Se a Linha da GetDados Nao Estiver Deletada				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF !( GdDeleted() )
		
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica Itens Duplicados na GetDados						   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aCposKey := GetArrUniqe( "RBP" )
			IF !( lLinOk := GdCheckKey( aCposKey , 4 ) )
				Break
			EndIF

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica Se o Campos Estao Devidamente Preenchidos		   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aCposKey := GdObrigat( aHeader )
			IF !( lLinOk := GdNoEmpty( aCposKey ) )
		    	Break
			EndIF
		EndIF

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁReinicializa as Variaveis de Memoria                          Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		DEFAULT lSetMemVar := .T.
		IF ( lSetMemVar )
			SetMemVar( "RBP_CODMAP" , Space( GetSx3Cache( "RBP_CODMAP" , "X3_TAMANHO" ) ) ) 
			SetMemVar( "RBP_CODADO" , Space( GetSx3Cache( "RBP_CODADO" , "X3_TAMANHO" ) ) ) 
			SetMemVar( "RBP_VERSAO" , Space( GetSx3Cache( "RBP_VERSAO" , "X3_TAMANHO" ) ) )
		EndIF        

	End Sequence
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSe Houver Alguma Inconsistencia na GetDados, Seta-lhe o Foco  Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLinOk )
		oBrowse:SetFocus()
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁGaranto que o Ponteiro Estara no Final do Arquivo para que naoЁ
	ЁCarregue Conteudo Invalido nos Inicializadores Padroes        Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	PutFileInEof( "RBP" )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()
	
Return( lLinOk )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbpGdTudOk	ЁAutorЁEmerson Grassi    Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁTudo Ok do Rbp                                              Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRbpGdTudOk( oBrowse )									    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbpGdTudOk( oBrowse )

Local lTudoOk := .T.

Local nLoop

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

	Begin Sequence
	
	    /*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Percorre Todas as Linhas para verificar se Esta Tudo OK      Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		For nLoop := 1 To Len( aCols )
			n := nLoop
			IF !( lTudoOk := RbpGdLinOk( oBrowse ) )
				oBrowse:Refresh()
				Break
			EndIF
		Next nLoop
	
	End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( lTudoOk  )


/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbpGdDelOk   ЁAutorЁEmerson Grassi    Ё Data Ё27/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidar a Delecao na GetDados Rbp                           Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function RbpGdDelOk( nOpc , aRbqCols , oGdRbq , lNoChkFirst , lExecDel , cMsgInfo )
         
Local lDelOk 		:= .T.
Local lStatus		:= .F.

Local aRbqColPos
Local cRbpCodMap
Local cRbpCodAdo
Local cRbpVersao

Local nRbqCodMap
Local nRbqCodAdo
Local nRbqVersao

Local nRbqDeleted
Local nPosRec

Static lFirstDelOk
Static lLstDelOk

DEFAULT lFirstDelOk	:= .T.
DEFAULT lLstDelOk	:= .T.
DEFAULT lNoChkFirst	:= .F.
DEFAULT lExecDel	:= .T.	

Begin Sequence   
                      
                      
	//Quando for Visualizacao ou Exclusao Abandona
	IF (;
			( nOpc == 2 ) .or. ;	//Visualizacao
			( nOpc == 5 );			//Exclusao
		)
		Break
	EndIF
	           
	//Apenas se for a primeira vez
	IF !( lFirstDelOk )
		lFirstDelOk	:= .T.
		Break
	EndIF
	
	nPosRec:= GdFieldPos( "RBQ_REC_WT"	, oGdRbq:aHeader )   
	If oGdRbq:aCols[1][nPosRec] == 0  
		Break
	Endif      
	 
	lStatus:= oGdRbp:aCols[n][len(oGdRbp:aCols[n])]  
	
	cRbpCodMap	:= GdFieldGet( "RBP_CODMAP" )
	cRbpCodAdo	:= GdFieldGet( "RBP_CODADO" )
	cRbpVersao	:= GdFieldGet( "RBP_VERSAO" )
		
	nRbqCodMap	:= GdFieldPos( "RBQ_CODMAP" , oGdRbq:aHeader )
	nRbqCodAdo	:= GdFieldPos( "RBQ_CODADO" , oGdRbq:aHeader )
	nRbqVersao	:= GdFieldPos( "RBQ_VERSAO" , oGdRbq:aHeader )
	nRbqDeleted	:= GdFieldPos( "GDDELETED"	, oGdRbq:aHeader )

	aRbqColPos := {;
						{ nRbqCodAdo, nRbqCodMap, nRbqVersao },;
						{ cRbpCodAdo, cRbpCodMap, cRbpVersao },;
						nRbqDeleted;
    			  }
	
    If lStatus  //DELETAR
    
       	GdRstItens( @aRbqCols		, aRbqColPos )
		GdRstItens( @oGdRbq:aCols	, aRbqColPos )
		oGdRbq:oBrowse:Refresh()
    Else      // RESTAURAR       	
    	GdDelItens( @aRbqCols		, aRbqColPos )
    	GdDelItens( @oGdRbq:aCols	, aRbqColPos )
    	oGdRbq:oBrowse:Refresh()  
 	EndIf 
 	
	//Ja Passou pela funcao
	lFirstDelOk := .F.


End Sequence
	  
Return( lDelOk )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqGdLinOk	ЁAutorЁEmerson Grassi         Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁLinha Ok do Rbq                                             Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRbqGdLinOk( oBrowse )									    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqGdLinOk( oBrowse )

Local aCposKey		:= {}
Local lLinOk		:= .T.

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

	Begin Sequence
	
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Se a Linha da GetDados Nao Estiver Deletada				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF !( GdDeleted() )
		
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica Itens Duplicados na GetDados						   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aCposKey := GetArrUniqe( "RBQ" )
			IF !( lLinOk := GdCheckKey( aCposKey , 4 ) )
				Break
			EndIF

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica Se o Campos Estao Devidamente Preenchidos		   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aCposKey := GdObrigat( aHeader )
		   
			IF !( lLinOk := GdNoEmpty( aCposKey ) )
		    	Break
			EndIF

		EndIF
		
	End Sequence
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSe Houver Alguma Inconsistencia na GetDados, Seta-lhe o Foco  Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLinOk )
		IF ( ValType( "oBrowse" ) == "O" )
			oBrowse:SetFocus()
		EndIF	
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁGaranto que o Ponteiro Estara no Final do Arquivo para que naoЁ
	ЁCarregue Conteudo Invalido nos Inicializadores Padroes        Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	PutFileInEof( "RBQ" )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()
	
Return( lLinOk )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqGdTudOk	ЁAutorЁEmerson Grassi   	  Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁTudo Ok do Rbq                                              Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRbqGdTudOk( oBrowse )									    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqGdTudOk( oBrowse )

Local lTudoOk := .T.

Local nLoop

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

	Begin Sequence
	
	    /*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Percorre Todas as Linhas para verificar se Esta Tudo OK      Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		For nLoop := 1 To Len( aCols )
			n := nLoop
			IF !( lTudoOk := RbqGdLinOk( oBrowse ) )
				IF ( ValType( "oBrowse" ) == "O" )
					oBrowse:Refresh()
				EndIF	
				Break
			EndIF
		Next nLoop
	
	End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( lTudoOk  )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqGdDelOk   ЁAutorЁEmerson Grassi    	  Ё Data Ё27/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidar a Delecao na GetDados Rbq                           Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRbqGdDelOk( nOpc , oGdRbq )									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function RbqGdDelOk(nOpc, oGdRbq)

Local	nPosRec:=GdfieldPos("RBQ_REC_WT")      
 
// Exibe mensagem explicando o motivo de nao permitir incluir ou excluir habilidades           

//Quando for Visualizacao ou Exclusao Abandona
IF (;
		( nOpc == 2 ) .or. ;	//Visualizacao
		( nOpc == 5 );			//Exclusao
	)
	Break
EndIF

If !lMsgDelt             
	If oGdRbq:aCols[1][nPosRec] == 0
		MsgInfo(STR0034)
	Else
		MsgInfo(STR0035)
	EndIf
	
	lMsgDelt:= .T.  
Else
	lMsgDelt:= .F.  		
EndIf
	                       
Return( .F. ) 


/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqNumGhostCol	ЁAutorЁEmerson Grassi     Ё Data Ё27/09/2005Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao de Inicializacao da Numeracao Automatica do GHOSTCOL Ё
Ё          Ёdo Rbq														Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA080  	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqNumGhostCol()

Local cNumGhostCol	:= ""

IF (;
		( Type( "aRbqHeader" ) == "A" );
		.and.;
		( Type( "aRbqCols" ) == "A" );
		.and.;
		( GdFieldPos( "GHOSTCOL" , aRbqHeader ) > 0 );
	)	
	IF ( Type( "cRbqNumGhostCol" ) == "U" )
		Private cRbqNumGhostCol := ""
	EndIF
	cNumGhostCol	:= GdNumItem( "GHOSTCOL" , @cRbqNumGhostCol , NIL , aRbqHeader , aRbqCols )
EndIF

Return( cNumGhostCol )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda210Grava ЁAutorЁEmerson Grassi    	  Ё Data Ё27/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda210Grava(	nOpc		,;	//Opcao de Acordo com aRotina
							 	nReg		,;	//Numero do Registro do Arquivo Pai ( RD0 )
							 	aRbpHeader	,;	//Campos do Arquivo Filho ( Rbp )
							 	aRbpCols	,;	//Itens Atual do Arquivo Filho ( Rbp )
							 	aSvRbpCols	,;	//Itens Anteriores do Arquivo Filho ( Rbp )
							 	aRbpVirtGd	,;	//Campos Virtuais do Arquivo Filho ( Rbp )
							 	aRbpRecnos	,;	//Recnos do Arquivo Filho ( Rbp )
		 						aRbpMemoGd	,;	//Campos Memo ( Rbp )
							 	aRbqHeader	,;	//Campos do Arquivo de Sub-Itens ( Rbq )
							 	aRbqCols	,;	//Sub-Itens Atuis do Arquivo de Sub-Itens ( Rbq )
							 	aSvRbqCols	,;	//Sub-Itens Anteriores do Arquivo de Sub-Itens ( Rbq )
							 	aRbqVirtGd	,;	//Campos Virtuais do Arquivo de Sub-Itens ( Rbq )
							 	aRbqRecnos	,;	//Recnos do Arquivo de Sub-Itens ( Rbq )
							 	aRbqMemoGd	 ;	//Campos Memo na de Sub-Itens ( Rbq )
							  )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aMestre	:= GdPutIStrMestre( 01 )
Local aItens	:= {}
Local cOpcao	:= IF( ( nOpc == 5 ) , "DELETE" , IF( ( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) , "PUT" , NIL ) )
Local lModItens	:= .F.
Local lRbpModif	:= .F.
Local lRbpDelet	:= .F.
Local lRbqModif	:= .F.
Local lRbqDelet	:= .F.
Local lSuperDel	:= .T.

Local aRbqColDel
Local aRbqRecDel
Local aRbpColDel
Local aRbpRecDel
Local nItens

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

	IF ( cOpcao == "DELETE" )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁSimulo aqui uma Alteracao onde Todos os Itens Foram Deletados Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		cOpcao 		:= "PUT" 
		lSuperDel	:= .F.
		GdSuperDel( aRbpHeader , aRbpCols , NIL , .T. )
		GdSuperDel( aRbqHeader , aRbqCols , NIL , .T. )
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Verifica se Houveram Modificacoes no Rbp					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lRbpModif := !ArrayCompare( aRbpCols , aSvRbpCols ) )
		IF ( lSuperDel )
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Deleto todos os Itens que nao Estao OK					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			GdSuperDel( aRbpHeader , @aRbpCols , NIL , .T. , GdGetBlock( "RBP" , aRbpHeader , .F. ) ) 
		EndIF	
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Separa os Itens que foram Deletados     					   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		lRbpDelet := GdSplitDel( aRbpHeader , @aRbpCols , @aRbpRecnos , @aRbpColDel , @aRbpRecDel  )
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Verifica se Houveram Modificacoes no Rbq					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lRbqModif := !ArrayCompare( aRbqCols , aSvRbqCols ) )
		IF ( lSuperDel )
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Deleto todos os Itens que nao Estao OK					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			GdSuperDel( aRbqHeader , @aRbqCols , NIL , .T. , GdGetBlock( "RBQ" , aRbqHeader , .F. ) )
		EndIF
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Separa os Itens que foram Deletados     					   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		lRbqDelet := GdSplitDel( aRbqHeader , @aRbqCols , @aRbqRecnos , @aRbqColDel , @aRbqRecDel  )
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Verifica se eh Delecao ou se Houveram Modificacoes       	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	lModItens := ( ( lRbpModif ) .or. ( lRbqModif ) )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega os Itens Apenas se Houveram Alteracoes ou na ExclusaoЁ
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lModItens )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Carrega as Informacoes deletadas Rbq                   	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lRbqDelet )

			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )
		
			aItens[ nItens , 01 ] := "RBQ"
			aItens[ nItens , 02 ] := NIL
			aItens[ nItens , 03 ] := aClone( aRbqHeader )
			aItens[ nItens , 04 ] := aClone( aRbqColDel )
			aItens[ nItens , 05 ] := aClone( aRbqVirtGd )
			aItens[ nItens , 06 ] := aClone( aRbqRecDel )
			aItens[ nItens , 07 ] := aClone( aRbqMemoGd )
			aItens[ nItens , 08 ] := NIL
			aItens[ nItens , 09 ] := NIL
			aItens[ nItens , 10 ] := "RDY"

		EndIF

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Carrega as Informacoes deletadas Rbp                   	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lRbpDelet )

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Carrega as Informacoes do Rbp                   			   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )
		
			aItens[ nItens , 01 ] := "RBP"
			aItens[ nItens , 02 ] := NIL
			aItens[ nItens , 03 ] := aClone( aRbpHeader )
			aItens[ nItens , 04 ] := aClone( aRbpColDel )
			aItens[ nItens , 05 ] := aClone( aRbpVirtGd )
			aItens[ nItens , 06 ] := aClone( aRbpRecDel )
			aItens[ nItens , 07 ] := aClone( aRbpMemoGd )
			aItens[ nItens , 08 ] := NIL
			aItens[ nItens , 09 ] := {}
			aItens[ nItens , 10 ] := "RDY"

		EndIF

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Se Ocorreram Alteracoes no Rbp                   			   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lRbpModif )

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Carrega as Informacoes do Rbp                   			   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )
			
			aItens[ nItens , 01 ] := "RBP"
			aItens[ nItens , 02 ] := {;
										{ "FILIAL" , xFilial( "RBP" ) },;
										{ "CODPAR" , GetMemVar( "RD0_CODIGO" ) };
						 		 	 }
			aItens[ nItens , 03 ] := aClone( aRbpHeader )
			aItens[ nItens , 04 ] := aClone( aRbpCols   )
			aItens[ nItens , 05 ] := aClone( aRbpVirtGd )
			aItens[ nItens , 06 ] := aClone( aRbpRecnos )
			aItens[ nItens , 07 ] := aClone( aRbpMemoGd )
			aItens[ nItens , 08 ] := NIL
			aItens[ nItens , 09 ] := {}
			aItens[ nItens , 10 ] := "RDY"
		
		EndIF

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Se Ocorreram Alteracoes no Rbq                   			   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lRbqModif )

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Carrega as Informacoes do Rbq                   			   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )
			
			aItens[ nItens , 01 ] := "RBQ"
			aItens[ nItens , 02 ] := {;
										{ "FILIAL" , xFilial( "RBQ" ) },;
										{ "CODPAR" , GetMemVar( "RD0_CODIGO" ) };
						 		 	 }
			aItens[ nItens , 03 ] := aClone( aRbqHeader )
			aItens[ nItens , 04 ] := aClone( aRbqCols   )
			aItens[ nItens , 05 ] := aClone( aRbqVirtGd )
			aItens[ nItens , 06 ] := aClone( aRbqRecnos )
			aItens[ nItens , 07 ] := aClone( aRbqMemoGd )
			aItens[ nItens , 08 ] := NIL
			aItens[ nItens , 09 ] := NIL
			aItens[ nItens , 10 ] := "RDY"

		EndIF

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define as Informacoes para o Arquivo Mestre RD0			   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aMestre[ 01 , 01 ]	:= "RD0"
		aMestre[ 01 , 02 ]	:= nReg
		aMestre[ 01 , 03 ]	:= .F.
		aMestre[ 01 , 04 ]	:= {}
		aMestre[ 01 , 05 ]	:= {}
		aMestre[ 01 , 06 ]	:= {}
		aMestre[ 01 , 07 ]	:= aClone( aItens )
		aMestre[ 01 , 08 ]	:= "RDY"

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Grava as Informacoes                        				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		GdPutInfoData( aMestre , cOpcao , .F. , .F.  )
		
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Confirmando a Numeracao Automatica          				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		While ( GetSX8Len() > nGetSX8Len )
			ConfirmSX8()
		End While

	EndIF

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( NIL )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbpCodMapVld ЁAutorЁEmerson Grassi Rocha  Ё Data Ё29/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidacao para o campo RBP_CODMAP			   			    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RBP_CODMAP                      		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbpCodMapVld()

Local lRBPCodMapVld	:= .T.

Local bSortaCols
Local cLstCodMap
Local cNewCodMap
Local lCodMapChj
Local nRBQCodMap
Local nRBQGhostCol
Local nPosCodMap
Local oRBPBrowse

Begin Sequence

	IF !( lRBPCodMapVld := NaoVazio() )
		Break
	EndIF
	
	IF !( lRBPCodMapVld := ExistCpo( "RBO" ) )
		Break
	EndIF

	IF IsInGetDados( { "RBP_CODMAP" } )
		lCodMapChj	:= ( ( cLstCodMap := GdFieldGet( "RBP_CODMAP" ) ) <> ( cNewCodMap := GetMemVar( "RBP_CODMAP" ) ) ) 
		IF ( lCodMapChj )
			IF !Empty( cLstCodMap )
				IF ( Type( "oGdRBP" ) == "O" )
					oRBPBrowse := oGdRBP:oBrowse
				EndIF
				GdFieldPut( "RBP_CODMAP" , cNewCodMap )
				IF !( lRBPCodMapVld := RBPGdLinOk( oRBPBrowse , .F. ) )
					GdFieldPut( "RBP_CODMAP" , cLstCodMap )
					SetMemVar( "RBP_CODMAP" , cLstCodMap )
					Break
				EndIF
			EndIF	
			bSortaCols	:= { |x,y| ( x[ nRBQCodMap ] < y[ nRBQCodMap ] ) }
			bAscaCols	:= { |aColsElem| ( aColsElem[ nRBQCodMap ] == cLstCodMap ) }
			IF (;
					( Type( "aRBQHeader" ) == "A" );
					.and.;
					( Type( "aRBQCols" ) == "A" );
					.and.;
					( ( nRBQCodMap := GdFieldPos( "RBQ_CODMAP" , aRBQHeader ) ) > 0 );
				 )
				aSort( aRBQCols , NIL , NIL , bSortaCols )
				IF ( ( nPosCodMap := aScan( aRBQCols , bAscaCols ) ) > 0 )
					While ( ( nPosCodMap := aScan( aRBQCols , bAscaCols , nPosCodMap ) ) > 0 )
						aRBQCols[ nPosCodMap , nRBQCodMap ] := cNewCodMap
						++nPosCodMap
					End While
				EndIF
				IF ( ( nRBQGhostCol := GdFieldPos( "GHOSTCOL" , aRBQHeader ) ) > 0 )
					bSortaCols := { |x,y| x[ nRBQGhostCol ] < y[ nRBQGhostCol ] }
					aSort( aRBQCols , NIL , NIL , bSortaCols )
				EndIF
			EndIF
			IF ( Type( "oGdRBQ" ) == "O" )
				IF ( ( nPosCodMap := GdFieldPos( "RBQ_CODMAP" , oGdRBQ:aHeader ) ) > 0 )
					aSort( oGdRBQ:aCols , NIL , NIL , bSortaCols )
					IF ( ( nPosCodMap := aScan( oGdRBQ:aCols , bAscaCols ) ) > 0 )
						While ( ( nPosCodMap := aScan( oGdRBQ:aCols , bAscaCols , nPosCodMap ) ) > 0 )
							oGdRBQ:aCols[ nPosCodMap , nRBQCodMap] := cNewCodMap
							++nPosCodMap
						End While
					EndIF
					IF ( ( nRBQGhostCol := GdFieldPos( "GHOSTCOL" , aRBQHeader ) ) > 0 )
						bSortaCols := { |x,y| x[ nRBQGhostCol ] < y[ nRBQGhostCol ] }
						aSort( aRBQCols , NIL , NIL , bSortaCols )
					EndIF
				 	oGdRBQ:Refresh()
				EndIF
			EndIF
		EndIF
	EndIF

	SetMemVar( "RBP_DESMAP" , RBPDesMapInit() )

End Sequence

Return( lRBPCodMapVld )


/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqCodMapInitЁAutorЁEmerson Grassi Rocha  Ё Data Ё29/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador padrao para o campo RBQ_CODMAP   			    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RBQ_CODMAP                      		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqCodMapInit()

Local cRbqCodMapInit

IF ( Type( "oGdRbp" ) == "O" )
	cRbqCodMapInit := GdFieldGet( "RBP_CODMAP" , oGdRbp:nAt , .F. , oGdRbp:aHeader , oGdRbp:aCols )
Else
	cRbqCodMapInit := Space( GetSx3Cache( "RBQ_CODMAP" , "X3_TAMANHO" ) ) 	
EndIF

Return( cRbqCodMapInit )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqCodAdoInitЁAutorЁEmerson Grassi Rocha  Ё Data Ё29/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador padrao para o campo RBQ_CODADO  			    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RBQ_CODADO                      		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqCodAdoInit()

Local cRbqCodAdoInit

IF ( Type( "oGdRbp" ) == "O" )
	cRbqCodAdoInit := GdFieldGet( "RBP_CODADO" , oGdRbp:nAt , .F. , oGdRbp:aHeader , oGdRbp:aCols )
Else
	cRbqCodAdoInit := Space( GetSx3Cache( "RBQ_CODADO" , "X3_TAMANHO" ) ) 	
EndIF

Return( cRbqCodAdoInit )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqCodDorInitЁAutorЁEmerson Grassi Rocha  Ё Data Ё29/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador padrao para o campo RBQ_CODDOR   			    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RBQ_CODDOR                      		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqCodDorInit()

Local cRbqCodDorInit

IF ( Type( "oGdRbp" ) == "O" )
	cRbqCodDorInit := GdFieldGet( "RBP_CODDOR" , oGdRbp:nAt , .F. , oGdRbp:aHeader , oGdRbp:aCols )
Else
	cRbqCodDorInit := Space( GetSx3Cache( "RBQ_CODDOR" , "X3_TAMANHO" ) ) 	
EndIF

Return( cRbqCodDorInit )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbpCodAdoInitЁAutorЁEmerson Grassi Rocha  Ё Data Ё29/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador padrao para o campo RBP_CODADO  			    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RBP_CODADO                      		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbpCodAdoInit()

Local cRbpCodAdoInit

cRBPCodAdoInit := RD0->RD0_CODIGO

Return( cRBPCodAdoInit )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbpDesMapInit	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RBP_DESMAP					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RBP_DESMAP								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbpDesMapInit()

Local lGetDados	:= IsInGetDados( { "RBP_CODMAP" , "RBP_DESMAP" } )

Local cDesc

IF ( lGetDados )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega a Descricao do Codigo Mapa   						   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cDesc	:= fDesc( "RBO" , GetMemVar( "RBP_CODMAP" ) , "RBO_DESC" , GetSx3Cache( "RBP_DESMAP" , "X3_TAMANHO" ) , NIL , NIL , .F. )
	IF !( InAddLine( "APDA210/__EXECUTE/RUNAPP/SIGAAPD/" ) )
		GdFieldPut( "RBP_DESMAP" , cDesc )
	EndIF	
Else
	cDesc	:= fDesc( "RBO" , RBP->RBP_CODMAP , "RBO_DESC" , GetSx3Cache( "RBP_DESMAP" , "X3_TAMANHO" ) , NIL , NIL , .F. )
EndIF

Return( cDesc )


/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRBPCodDorVld	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do Campo RBP_CODDOR									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁValid do Campo RBP_CODDOR									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RBPCodDorVld()

Local lRBPCodDorVld	:= .T.

Local bSortaCols
Local cLstCodDor
Local cNewCodDor
Local lCodDorChj
Local nRBQCodDor
Local nRBQGhostCol
Local nPosCodDor
Local oRBPBrowse

DEFAULT nRd0Recno := RD0->( Recno() )

Begin Sequence

	IF !( lRBPCodDorVld := NaoVazio() )
		Break
	EndIF
	
	IF !( lRBPCodDorVld := ExistCpo( "RD0" ) )
		Break
	EndIF

	IF IsInGetDados( { "RBP_CODDOR" } )
		lCodDorChj	:= ( ( cLstCodDor := GdFieldGet( "RBP_CODDOR" ) ) <> ( cNewCodDor := GetMemVar( "RBP_CODDOR" ) ) ) 
		IF ( lCodDorChj )
			IF !Empty( cLstCodDor )
				IF ( Type( "oGdRBP" ) == "O" )
					oRBPBrowse := oGdRBP:oBrowse
				EndIF
				GdFieldPut( "RBP_CODDOR" , cNewCodDor )
				IF !( lRBPCodDorVld := RBPGdLinOk( oRBPBrowse , .F. ) )
					GdFieldPut( "RBP_CODDOR" , cLstCodDor )
					SetMemVar( "RBP_CODDOR" , cLstCodDor )
					Break
				EndIF
			EndIF	
			bSortaCols	:= { |x,y| ( x[ nRBQCodDor ] < y[ nRBQCodDor ] ) }
			bAscaCols	:= { |aColsElem| ( aColsElem[ nRBQCodDor ] == cLstCodDor ) }
			IF (;
					( Type( "aRBQHeader" ) == "A" );
					.and.;
					( Type( "aRBQCols" ) == "A" );
					.and.;
					( ( nRBQCodDor := GdFieldPos( "RBQ_CODDOR" , aRBQHeader ) ) > 0 );
				 )
				aSort( aRBQCols , NIL , NIL , bSortaCols )
				IF ( ( nPosCodDor := aScan( aRBQCols , bAscaCols ) ) > 0 )
					While ( ( nPosCodDor := aScan( aRBQCols , bAscaCols , nPosCodDor ) ) > 0 )
						aRBQCols[ nPosCodDor , nRBQCodDor ] := cNewCodDor
						++nPosCodDor
					End While
				EndIF
				IF ( ( nRBQGhostCol := GdFieldPos( "GHOSTCOL" , aRBQHeader ) ) > 0 )
					bSortaCols := { |x,y| x[ nRBQGhostCol ] < y[ nRBQGhostCol ] }
					aSort( aRBQCols , NIL , NIL , bSortaCols )
				EndIF
			EndIF
			IF ( Type( "oGdRBQ" ) == "O" )
				IF ( ( nPosCodDor := GdFieldPos( "RBQ_CODDOR" , oGdRBQ:aHeader ) ) > 0 )
					aSort( oGdRBQ:aCols , NIL , NIL , bSortaCols )
					IF ( ( nPosCodDor := aScan( oGdRBQ:aCols , bAscaCols ) ) > 0 )
						While ( ( nPosCodDor := aScan( oGdRBQ:aCols , bAscaCols , nPosCodDor ) ) > 0 )
							oGdRBQ:aCols[ nPosCodDor , nRBQCodDor] := cNewCodDor
							++nPosCodDor
						End While
					EndIF
					IF ( ( nRBQGhostCol := GdFieldPos( "GHOSTCOL" , aRBQHeader ) ) > 0 )
						bSortaCols := { |x,y| x[ nRBQGhostCol ] < y[ nRBQGhostCol ] }
						aSort( aRBQCols , NIL , NIL , bSortaCols )
					EndIF
				 	oGdRBQ:Refresh()
				EndIF
			EndIF
		EndIF
	EndIF

	SetMemVar( "RBP_DESDOR" , RBPDesDorInit() )

End Sequence

RD0->( MsGoto( nRd0Recno ) )

Return( lRBPCodDorVld )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRBPCodDorInit	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RBP_CODDOR					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RBP_CODDOR								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RBPCodDorInit()

Local cFilRD0			:= xFilial( "RD0" )
Local cRd0CodDor		:= GetMemVar( "RD0_CODIGO" )
Local cRBPCodDorInit	:= Space( GetSx3Cache( "RBP_CODDOR" , "X3_TAMANHO" ) ) 
Local cRd0Order			:= RetOrdem( "RD0" , "RD0_FILIAL+RD0_CODIGO" )

DEFAULT nRd0Recno := RD0->( Recno() )

cRBPCodDorInit			:= fDesc( "RD0" , cRd0CodDor , "RD0_CODMEN" , GetSx3Cache( "RBP_CODDOR" , "X3_TAMANHO" ) , cFilRD0 , cRd0Order , .F. )

SetMemVar( "RBP_CODDOR" , cRBPCodDorInit )

RD0->( MsGoto( nRd0Recno ) )

Return( cRBPCodDorInit )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRBPDesDorInit	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RBP_DESDOR					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RBP_DESDOR								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RBPDesDorInit()

Local cCodDor
Local cDesc
Local lGdFieldPut
Local lGetDados		:= IsInGetDados( { "RBP_CODDOR" , "RBP_DESDOR" } )

DEFAULT nRd0Recno := RD0->( Recno() )

IF ( lGetDados )
	cCodDor	:= GetMemVar( "RBP_CODDOR" )
Else
	DEFAULT cCodDor := RBP->RBP_CODDOR
	IF Empty( cCodDor )
		cCodDor := RBPCodDorInit()
	EndIF
EndIF

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Carrega o Nome do Avaliador            				   	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
cDesc := fDesc( "RD0" , cCodDor , "RD0_NOME" , GetSx3Cache( "RBP_DESDOR" , "X3_TAMANHO" ) , NIL , NIL , .F. )

IF ( lGetDados )
	lGdFieldPut := (;
						!Empty( cCodDor );
						.or.;
						!( InAddLine( "APDA210/__EXECUTE/RUNAPP/SIGAAPD/" ) );
					)	
	IF ( lGdFieldPut )
		GdFieldPut( "RBP_DESDOR" , cDesc )
	EndIF
EndIF

RD0->( MsGoto( nRd0Recno ) )

Return( cDesc )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbpVersaoInitЁAutorЁEmerson Grassi Rocha  Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Validar o Conteudo do Campo RBP_VERSAO 	        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RBP_VERSAO	                  	   	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbpVersaoInit()

Local cRbpVersaoOk

cRbpVersaoOk := "0    "

Return( cRbpVersaoOk )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqDesMapInit	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RBQ_DESMAP					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RBQ_DESMAP								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqDesMapInit()

Local lGetDados	:= IsInGetDados( { "RBQ_CODMAP" , "RBQ_DESMAP" } )

Local cDesc

IF ( lGetDados )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega a Descricao do Codigo da Visao					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cDesc	:= fDesc( "RBO" , GetMemVar( "RBQ_CODMAP" ) , "RBO_DESC" , GetSx3Cache( "RBQ_DESMAP" , "X3_TAMANHO" ) , NIL , NIL , .F. )
	IF !( InAddLine( "APDA210/__EXECUTE/RUNAPP/SIGAAPD/" ) )
		GdFieldPut( "RBQ_DESMAP" , cDesc )
	EndIF	
Else
	cDesc	:= fDesc( "RBO" , RBP->RBP_CODMAP , "RBO_DESC" , GetSx3Cache( "RBQ_DESMAP" , "X3_TAMANHO" ) , NIL , NIL , .F. )
EndIF

Return( cDesc )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqDesDorInit	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RBQ_DESDOR					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RBQ_DESDOR								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RBQDesDorInit()

Local cCodDor
Local cDesc
Local lGdFieldPut
Local lGetDados		:= IsInGetDados( { "RBQ_CODDOR" , "RBQ_DESDOR" } )

DEFAULT nRd0Recno := RD0->( Recno() )

IF ( lGetDados )
	cCodDor	:= GetMemVar( "RBQ_CODDOR" )
Else
	DEFAULT cCodDor := RBQ->RBQ_CODDOR
	IF Empty( cCodDor )
		cCodDor := RBQCodDorInit()
	EndIF
EndIF

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Carrega o Nome do Avaliador            				   	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
cDesc := fDesc( "RD0" , cCodDor , "RD0_NOME" , GetSx3Cache( "RBQ_DESDOR" , "X3_TAMANHO" ) , NIL , NIL , .F. )

IF ( lGetDados )
	lGdFieldPut := (;
						!Empty( cCodDor );
						.or.;
						!( InAddLine( "APDA210/__EXECUTE/RUNAPP/SIGAAPD/" ) );
					)	
	IF ( lGdFieldPut )
		GdFieldPut( "RBQ_DESDOR" , cDesc )
	EndIF
EndIF

RD0->( MsGoto( nRd0Recno ) )

Return( cDesc )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqDesComInit	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RBQ_DESCOM					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RBQ_DESMAP								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqDesComInit()

Local lGetDados	:= IsInGetDados( { "RBQ_CODCOM" , "RBQ_DESCOM" } )

Local cDesc

IF ( lGetDados )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega a Descricao do Codigo da Competencia				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cDesc	:= fDesc( "RDM" , GetMemVar( "RBQ_CODCOM" ) , "RDM_DESC" , GetSx3Cache( "RBQ_DESCOM" , "X3_TAMANHO" ) , NIL , NIL , .F. )
	IF !( InAddLine( "APDA210/__EXECUTE/RUNAPP/SIGAAPD/" ) )
		GdFieldPut( "RBQ_DESCOM" , cDesc )
	EndIF	
Else
	cDesc	:= fDesc( "RDM" , RBQ->RBQ_CODCOM , "RDM_DESC" , GetSx3Cache( "RBQ_DESCOM" , "X3_TAMANHO" ) , NIL , NIL , .F. )
EndIF

Return( cDesc )  

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqDesItComInit	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RBQ_DITCOM					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RBQ_DESMAP								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqDesItComInit()

Local lGetDados	:= IsInGetDados( { "RBQ_ITECOM" , "RBQ_DITCOM" } )

Local cDesc

IF ( lGetDados )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega a Descricao do Codigo do Item de Comptencia		   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cDesc	:= fDesc( "RD2" , GdFieldGet("RBQ_CODCOM")+GetMemVar( "RBQ_ITECOM" ) , "RD2_DESC" , GetSx3Cache( "RBQ_DITCOM" , "X3_TAMANHO" ) , NIL , NIL , .F. )
	IF !( InAddLine( "APDA210/__EXECUTE/RUNAPP/SIGAAPD/" ) )
		GdFieldPut( "RBQ_DITCOM" , cDesc )
	EndIF	
Else
	cDesc	:= fDesc( "RD2" , RBQ->RBQ_CODCOM + RBQ->RBQ_ITECOM , "RD2_DESC" , GetSx3Cache( "RBQ_DITCOM" , "X3_TAMANHO" ) , NIL , NIL , .F. )
EndIF

Return( cDesc )  

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqDesHabilInit	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RBQ_DESHAB					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RBQ_DESHAB								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqDesHabilInit()

Local lGetDados	:= IsInGetDados( { "RBQ_HABIL" , "RBQ_DESHAB" } )

Local cDesc

IF ( lGetDados )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega a Descricao do Codigo da Habilidade				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cDesc	:= fDesc( "RBG" , GetMemVar( "RBQ_HABIL" ) , "RBG_DESC" , GetSx3Cache( "RBQ_DESHAB" , "X3_TAMANHO" ) , NIL , NIL , .F. )
	IF !( InAddLine( "APDA210/__EXECUTE/RUNAPP/SIGAAPD/" ) )
		GdFieldPut( "RBQ_DESHAB" , cDesc )
	EndIF	
Else
	cDesc	:= fDesc( "RBG" , RBQ->RBQ_HABIL , "RBG_DESC" , GetSx3Cache( "RBQ_DESHAB" , "X3_TAMANHO" ) , NIL , NIL , .F. )
EndIF

Return( cDesc )  

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    Ё RbqEscalaInit	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RBQ_ESCALA					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RBQ_ESCALA								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqEscalaInit()

Local lGetDados	:= IsInGetDados( { "RBQ_HABIL" , "RBQ_ESCALA" } )

Local cEscala

IF ( lGetDados )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega a Descricao do Codigo da Escala    				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cEscala	:= fDesc( "RBG" , GetMemVar( "RBQ_HABIL" ) , "RBG_ESCALA" , GetSx3Cache( "RBQ_ESCALA" , "X3_TAMANHO" ) , NIL , NIL , .F. )
	IF !( InAddLine( "APDA210/__EXECUTE/RUNAPP/SIGAAPD/" ) )
		GdFieldPut( "RBQ_ESCALA" , cEscala )
	EndIF	
Else
	cEscala	:= fDesc( "RBG" , RBQ->RBQ_HABIL , "RBG_ESCALA" , GetSx3Cache( "RBQ_ESCALA" , "X3_TAMANHO" ) , NIL , NIL , .F. )
EndIF

Return( cEscala )  

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqDesEscalInit	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RBQ_DESESC					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RBQ_DESESC								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqDesEscalInit()

Local lGetDados	:= IsInGetDados( { "RBQ_ESCALA" , "RBQ_DESESC" } )

Local cDesc

IF ( lGetDados )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega a Descricao do Codigo da Escala    				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cDesc	:= fDesc( "RBK" , GetMemVar( "RBQ_ESCALA" ) , "RBK_DESCRI" , GetSx3Cache( "RBQ_DESESC" , "X3_TAMANHO" ) , NIL , NIL , .F. )
	IF !( InAddLine( "APDA210/__EXECUTE/RUNAPP/SIGAAPD/" ) )
		GdFieldPut( "RBQ_DESESC" , cDesc )
	EndIF	
Else
	cDesc	:= fDesc( "RBK" , RBQ->RBQ_ESCALA , "RBK_DESCRI" , GetSx3Cache( "RBQ_DESESC" , "X3_TAMANHO" ) , NIL , NIL , .F. )
EndIF

Return( cDesc )  

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqDesItEscalInitЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RBQ_DITESC					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RBQ_DITESC								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqDesItEscalInit()

Local lGetDados	:= IsInGetDados( { "RBQ_ESCALA" , "RBQ_ITEESC", "RBQ_DITESC" } )

Local cDesc

IF ( lGetDados )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega a Descricao do Item de Escala						   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cDesc	:= fDesc( "RBL" , GdFieldGet( "RBQ_ESCALA" ) + GetMemVar( "RBQ_ITEESC" ) , "RBL_DESCRI" , GetSx3Cache( "RBQ_DITESC" , "X3_TAMANHO" ) , NIL , NIL , .F. )
	IF !( InAddLine( "APDA210/__EXECUTE/RUNAPP/SIGAAPD/" ) )
		GdFieldPut( "RBQ_DITESC" , cDesc )
	EndIF	
Else
	cDesc	:= fDesc( "RBL" , RBQ->RBQ_ESCALA + RBQ->RBQ_ITEESC , "RBL_DESCRI" , GetSx3Cache( "RBQ_DITESC" , "X3_TAMANHO" ) , NIL , NIL , .F. )
EndIF

Return( cDesc )  

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqVersaoInitЁAutorЁEmerson Grassi Rocha  Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Validar o Conteudo do Campo RBQ_VERSAO 	        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RBQ_VERSAO	                  	   	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqVersaoInit()

Local cRbqVersaoInit

IF ( Type( "oGdRbp" ) == "O" )
	cRbqVersaoInit := GdFieldGet( "RBP_VERSAO" , oGdRbp:nAt , .F. , oGdRbp:aHeader , oGdRbp:aCols )
Else
	cRbqVersaoInit := Space( GetSx3Cache( "RBQ_VERSAO" , "X3_TAMANHO" ) ) 	
EndIF

Return( cRbqVersaoInit )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbpStatusVld     ЁAutorЁEmerson Grassi    Ё Data Ё04/10/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do Campo RBP_STATUS									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁValid do Campo RBP_STATUS									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbpStatusVld()

Local lRbpStatus := .T.

Begin Sequence

	IF !( lRbpStatus := Pertence( RbpStatusBox( .T. ) ) )
		Break
	EndIF

End Sequence

Return( lRbpStatus )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbpStatusBox ЁAutorЁEmerson Grassi    	  Ё Data Ё04/10/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Retornar as Opcoes do Campo RBP_STATUS         	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_CBOX para o campo RBP_STATUS                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbpStatusBox( lValid , lRetDesc , cOpcDesc )

Local cOpcBox

DEFAULT lValid		:= .F.
DEFAULT lRetDesc	:= .F.

IF !( lValid )

	IF !( lRetDesc )

		cOpcBox := ( "1=" + STR0024 + ";" )	//"NЦo Preenchido"
		cOpcBox += ( "2=" + STR0021 + ";" )	//"Pendente"
		cOpcBox += ( "3=" + STR0012       )	//"Aprovado"

	Else

		Do Case
			Case ( cOpcDesc == "1" ) ; ( cOpcBox := STR0024 )	//"NЦo Preenchido"
			Case ( cOpcDesc == "2" ) ; ( cOpcBox := STR0021 )	//"Pendente"
			Case ( cOpcDesc == "3" ) ; ( cOpcBox := STR0012 )	//"Aprovado"
		End Case

	EndIF
Else

	cOpcBox := "123"

EndIF
	
Return( cOpcBox )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbpStatusInitЁAutorЁEmerson Grassi    	  Ё Data Ё04/10/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Retornar as Opcoes do Campo RBP_STATUS         	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO para o campo RBP_STATUS                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbpStatusInit()
Return( SubStr( RbpStatusBox( .T. ) , 1 , 1 ) )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbpVersaoVld ЁAutorЁEmerson Grassi Rocha  Ё Data Ё29/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidacao para o campo RBP_VERSAO			   			    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RBP_VERSAO                      		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbpVersaoVld()

Local lRBPVersaoVld	:= .T.

Local bSortaCols
Local cLstVersao
Local cNewVersao
Local lVersaoChj
Local nRBQVersao
Local nRBQGhostCol
Local nPosVersao
Local oRBPBrowse

Begin Sequence

	IF !( lRBPVersaoVld := NaoVazio() )
		Break
	EndIF

	IF IsInGetDados( { "RBP_VERSAO" } )
		lVersaoChj	:= ( ( cLstVersao := GdFieldGet( "RBP_VERSAO" ) ) <> ( cNewVersao := GetMemVar( "RBP_VERSAO" ) ) ) 
		IF ( lVersaoChj )
			IF !Empty( cLstVersao )
				IF ( Type( "oGdRBP" ) == "O" )
					oRBPBrowse := oGdRBP:oBrowse
				EndIF
				GdFieldPut( "RBP_VERSAO" , cNewVersao )
				IF !( lRBPVersaoVld := RBPGdLinOk( oRBPBrowse , .F. ) )
					GdFieldPut( "RBP_VERSAO" , cLstVersao )
					SetMemVar( "RBP_VERSAO" , cLstVersao )
					Break
				EndIF
			EndIF	
			bSortaCols	:= { |x,y| ( x[ nRBQVersao ] < y[ nRBQVersao ] ) }
			bAscaCols	:= { |aColsElem| ( aColsElem[ nRBQVersao ] == cLstVersao ) }
			IF (;
					( Type( "aRBQHeader" ) == "A" );
					.and.;
					( Type( "aRBQCols" ) == "A" );
					.and.;
					( ( nRBQVersao := GdFieldPos( "RBQ_VERSAO" , aRBQHeader ) ) > 0 );
				 )
				aSort( aRBQCols , NIL , NIL , bSortaCols )
				IF ( ( nPosVersao := aScan( aRBQCols , bAscaCols ) ) > 0 )
					While ( ( nPosVersao := aScan( aRBQCols , bAscaCols , nPosVersao ) ) > 0 )
						aRBQCols[ nPosVersao , nRBQVersao ] := cNewVersao
						++nPosVersao
					End While
				EndIF
				IF ( ( nRBQGhostCol := GdFieldPos( "GHOSTCOL" , aRBQHeader ) ) > 0 )
					bSortaCols := { |x,y| x[ nRBQGhostCol ] < y[ nRBQGhostCol ] }
					aSort( aRBQCols , NIL , NIL , bSortaCols )
				EndIF
			EndIF
			IF ( Type( "oGdRBQ" ) == "O" )
				IF ( ( nPosVersao := GdFieldPos( "RBQ_VERSAO" , oGdRBQ:aHeader ) ) > 0 )
					aSort( oGdRBQ:aCols , NIL , NIL , bSortaCols )
					IF ( ( nPosVersao := aScan( oGdRBQ:aCols , bAscaCols ) ) > 0 )
						While ( ( nPosVersao := aScan( oGdRBQ:aCols , bAscaCols , nPosVersao ) ) > 0 )
							oGdRBQ:aCols[ nPosVersao , nRBQVersao] := cNewVersao
							++nPosVersao
						End While
					EndIF
					IF ( ( nRBQGhostCol := GdFieldPos( "GHOSTCOL" , aRBQHeader ) ) > 0 )
						bSortaCols := { |x,y| x[ nRBQGhostCol ] < y[ nRBQGhostCol ] }
						aSort( aRBQCols , NIL , NIL , bSortaCols )
					EndIF
				 	oGdRBQ:Refresh()
				EndIF
			EndIF
		EndIF
	EndIF

End Sequence

Return( lRBPVersaoVld )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    Ё RbqStatusInit	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RBQ_STATUS					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RBQ_STATUS								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqStatusInit()

Local lGetDados	:= IsInGetDados( { "RBQ_ITEESC" , "RBQ_STATUS" } )

Local cStatus := "2"

IF ( lGetDados ) 
	    
	//Altera Status do RBP/RBQ
	GdFieldPut( "RBP_STATUS" , cStatus, oGdRBP:nAt ,oGdRBP:aHeader, oGdRBP:aCols ) 
	GdFieldPut( "RBQ_STATUS" , cStatus, oGdRBQ:nAt ,oGdRBQ:aHeader, oGdRBQ:aCols ) 

	cResourceName := Apda210Leg(cStatus, Nil, Nil, Nil, Nil)		
	GdFieldPut( "COLBMP" , cResourceName, oGdRBQ:nAt ,oGdRBQ:aHeader, oGdRBQ:aCols )
	GdFieldPut( "COLBMP" , cResourceName, oGdRBP:nAt ,oGdRBP:aHeader, oGdRBP:aCols )
	oGdRBP:oBrowse:Refresh()
			
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega o Status do Item (RBQ)							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( InAddLine( "APDA210/__EXECUTE/RUNAPP/SIGAAPD/" ) )
		GdFieldPut( "RBQ_STATUS" , cStatus )
	EndIF	
Else
	cStatus	:= RBQ->RBQ_STATUS
EndIF

Return( cStatus )  

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqCodComVld	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do Campo RBQ_CODCOM									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁValid do Campo RBQ_CODCOM									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqCodComVld()

Local lRbqCodComVld	:= .T.

Local cLstCodCom
Local cNewCodCom
Local lCodComChj

Begin Sequence

	IF !( lRbqCodComVld := NaoVazio() )
		Break
	EndIF
	
	IF !( lRbqCodComVld := ExistCpo( "RDM" ) )
		Break
	EndIF               
	
	//Verifica tipo da competencia                          
	cTipo 	:= Fdesc( "RDM" , GetMemVar( "RBQ_CODCOM" ) , "RDM_TIPO" , GetSx3Cache( "RDM_TIPO" , "X3_TAMANHO" ) , NIL , NIL , .F. )
    If !( lRbqCodComVld := cTipo $"23" )
		Break    
    EndIf
    
	IF IsInGetDados( { "RBQ_CODCOM" } )
		lCodComChj	:= ( ( cLstCodCom := GdFieldGet( "RBQ_CODCOM" ) ) <> ( cNewCodCom := GetMemVar( "RBQ_CODCOM" ) ) ) 
		IF ( lCodComChj )
			IF !Empty( cLstCodCom )
				IF ( Type( "oGdRbq" ) == "O" )
					oRbqBrowse := oGdRbq:oBrowse
				EndIF
				GdFieldPut( "RBQ_CODCOM" , cNewCodCom )
				IF !Inclui .And. !( lRbqCodComVld := RbqGdLinOk( oRbqBrowse , .F. ) )
					GdFieldPut( "RBQ_CODCOM" , cLstCodCom )
					SetMemVar( "RBQ_CODCOM" , cLstCodCom )
					Break
				EndIF
			EndIF	
		EndIF
	EndIF

	SetMemVar( "RBQ_DESCOM" , RbqDesComInit() )

End Sequence

Return( lRbqCodComVld )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqIteComVld	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do Campo RBQ_ITECOM									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁValid do Campo RBQ_ITECOM									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqIteComVld()

Local lRbqIteComVld	:= .T.

Local cLstIteCom
Local cNewIteCom
Local lIteComChj
Local oRbqBrowse

Begin Sequence

	IF !( lRbqIteComVld := NaoVazio() )
		Break
	EndIF
	
	IF !( lRbqIteComVld := ExistCpo( "RD2",GdFieldGet( "RBQ_CODCOM" ) + GetMemVar( "RBQ_ITECOM" ) ) )
		Break
	EndIF

	IF IsInGetDados( { "RBQ_ITECOM" } )
		lIteComChj	:= ( ( cLstIteCom := GdFieldGet( "RBQ_ITECOM" ) ) <> ( cNewIteCom := GetMemVar( "RBQ_ITECOM" ) ) ) 
		IF ( lIteComChj )
			IF !Empty( cLstIteCom )
				IF ( Type( "oGdRbq" ) == "O" )
					oRbqBrowse := oGdRbq:oBrowse
				EndIF
				GdFieldPut( "RBQ_ITECOM" , cNewIteCom )
				IF !Inclui .And. !( lRbqIteComVld := RbqGdLinOk( oRbqBrowse , .F. ) )
					GdFieldPut( "RBQ_ITECOM" , cLstIteCom )
					SetMemVar( "RBQ_ITECOM" , cLstIteCom )
					Break
				EndIF
			EndIF	
		EndIF
	EndIF

	SetMemVar( "RBQ_DITCOM" , RbqDesItComInit() )

End Sequence

Return( lRbqIteComVld )


/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqHabilVld	 	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do Campo RBQ_HABIL									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁValid do Campo RBQ_HABIL									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqHabilVld()

Local lRbqHabilVld	:= .T.
Local cLstHabil
Local cNewHabil
Local lHabilChj
Local oRbqBrowse

Begin Sequence

	IF !( lRbqHabilVld := NaoVazio() )
		Break
	EndIF
	
	IF !( lRbqHabilVld := ExistCpo( "RBG" ) )
		Break
	EndIF

	IF IsInGetDados( { "RBQ_HABIL" } )
		lHabilChj	:= ( ( cLstHabil := GdFieldGet( "RBQ_HABIL" ) ) <> ( cNewHabil := GetMemVar( "RBQ_HABIL" ) ) ) 
		IF ( lHabilChj )
			IF !Empty( cLstHabil )
				IF ( Type( "oGdRbq" ) == "O" )
					oRbqBrowse := oGdRbq:oBrowse
				EndIF
				GdFieldPut( "RBQ_HABIL" , cNewHabil )
				IF !Inclui .And. !( lRbqHabilVld := RbqGdLinOk( oRbqBrowse , .F. ) )
					GdFieldPut( "RBQ_HABIL" , cLstHabil )
					SetMemVar( "RBQ_HABIL" , cLstHabil )
					Break
				EndIF
			EndIF	
		EndIF
	EndIF

	SetMemVar( "RBQ_DESHAB" , RbqDeshabilInit() )
	SetMemVar( "RBQ_ESCALA" , RbqEscalaInit() )
	SetMemVar( "RBQ_DESESC" , RbqDesEscalInit() )

End Sequence

Return( lRbqHabilVld )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqIteEscVld 	 ЁAutorЁEmerson Grassi    Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do Campo RBQ_ITEESC									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁValid do Campo RBQ_ITEESC									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqIteEscVld()

Local lRbqIteEscVld	:= .T.

Local cLstIteEsc
Local cNewIteEsc
Local lIteEscChj
Local oRbqBrowse

Begin Sequence

	IF !( lRbqIteEscVld := NaoVazio() )
		Break
	EndIF
	
	IF !( lRbqIteEscVld := ExistCpo( "RBL",GdFieldGet( "RBQ_ESCALA" ) + GetMemVar( "RBQ_ITEESC" ) ) )
		Break
	EndIF

	IF IsInGetDados( { "RBQ_ITEESC" } )
		lIteEscChj	:= ( ( cLstIteEsc := GdFieldGet( "RBQ_ITEESC" ) ) <> ( cNewIteEsc := GetMemVar( "RBQ_ITEESC" ) ) ) 
		IF ( lIteEscChj )
			IF !Empty( cLstIteEsc )
				IF ( Type( "oGdRbq" ) == "O" )
					oRbqBrowse := oGdRbq:oBrowse
				EndIF
				GdFieldPut( "RBQ_ITEESC" , cNewIteEsc )
				IF !Inclui .And. !( lRbqIteEscVld := RbqGdLinOk( oRbqBrowse , .F. ) )
					GdFieldPut( "RBQ_ITEESC" , cLstIteEsc )
					SetMemVar( "RBQ_ITEESC" , cLstIteEsc )
					Break
				EndIF
			EndIF	
			
			SetMemVar( "RBQ_DITESC" , RbqDesItEscalInit() )
			SetMemVar( "RBQ_DATITM" , RbqDatItmInit() )
			SetMemVar( "RBQ_STATUS" , RbqStatusInit() )	
			
		EndIF
	EndIF

End Sequence

Return( lRbqIteEscVld )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRbqDatItmInitЁAutorЁEmerson Grassi Rocha  Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Validar o Conteudo do Campo RBQ_DATITM 	        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RBQ_DATITM	                  	   	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RbqDatItmInit()

Local cRbqDatItmInit

cRbqDatItmInit := dDataBase

Return( cRbqDatItmInit )

/*/
зддддддддддбддддддддддбдддддбдддддддддддддддддддддддддддбддддбдддддддддд©
ЁFun┤┘o    ЁAp210F3RbjЁAutorЁEmerson Grassi Rocha 		ЁDataЁ07/10/2005Ё
цддддддддддеддддддддддадддддадддддддддддддддддддддддддддаддддадддддддддд╢
ЁDescri┤┘o ЁFiltro de Consulta Padrao									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁConsulta Padrao (SXB)				                  	   	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Ap210F3Rbj()
         
Local cReadVar	:= Upper( AllTrim( ReadVar() ) )
Local cCodCom	:= ""
Local cRet		:= "@#.T.@#"

//RBQ = Habilidade do Participante x Mapa
IF ( "RBQ_HABIL" $ cReadVar ) 
	IF ( IsInGetDados( { "RBQ_CODCOM" } ) )
		cCodCom	:= GdFieldGet( "RBQ_CODCOM" )
	ElseIF ( IsMemVar( "RBQ_CODCOM" ) )
		cCodCom := GetMemVar( "RBQ_CODCOM" )
	EndIF
EndIF

IF !Empty( cCodCom )
	cRet := "@#RBJ->RBJ_CODCOM=='"+cCodCom+"'@#"
EndIF

Return( cRet )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda210Leg() ЁAutorЁEmerson Grassi Rocha  Ё Data Ё30/09/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao coluna de legenda                                    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210								                  	   	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Apda210Leg(cStatus, aGdObjects , nActFolder , aPages , aObjFolder)
Local aCollor	:= {}  
Local cCor		:= "BR_BRANCO"

Local aSvKeys 	:= GetKeys()

Local cMsgInfo
Local nPosGdObj          
                        
DEFAULT aGdObjects 	:= {}

cStatus := If(Empty(cStatus), "1", cStatus)
Begin Sequence

	IF (;
			cStatus == "#" .And.;
			(;
				Empty( aGdObjects );
				.or.;
				( ( nPosGdObj := aScan( aGdObjects[ nActFolder ] , .T. ) ) == 0 );
			);
		)	
		cMsgInfo := STR0013	//"OpГЦo disponМvel apenas para pesquisa na(s) Pasta(s):"
		cMsgInfo += CRLF
		cMsgInfo += aPages[ 02 ]
		MsgInfo( OemToAnsi( cMsgInfo ) , cCadastro )
		Break
	EndIF
		
	aadd(aCollor,{"BR_BRANCO"	, STR0024})	//"NЦo Preenchido"
	aadd(aCollor,{"BR_AMARELO"	, STR0021})	//"Pendente" 
	aadd(aCollor,{"BR_VERDE" 	, STR0012})	//"Aprovado"
	
	If !Empty(aGdObjects) .And. cStatus == "#"
		BrwLegenda	(STR0025,STR0023, aCollor) //"Status do Mapa de Conhecimento","Legenda"###"Legenda"
	Else
		cCor:=aCollor[Val(cStatus),1]	
	EndIf

End Sequence

RestKeys( aSvKeys , .T. )
	
Return cCor

/*                                	
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    Ё Apda210VldRec  ЁAutorЁ  Eduardo Ju       Ё Data Ё12/04/2007Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁValidacao das informacoes do participante na mudanca entre  Ё
Ё          Ёos folders Participante/Habilidades do Participante         Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё< Vide Parametros Formais >									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA210                                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Static Function Apda210VldRec()   

If nRecno == 0
	nRecno := RD0->(RECNO())    
EndIf

If nRecno <> RD0->(RECNO())
	RD0->( DbGoTo(nRecno) )
EndIf

Return .T.
/*                                	
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    Ё MenuDef		ЁAutorЁ  Luiz Gustavo     Ё Data Ё05/12/2006Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁIsola opcoes de menu para que as opcoes da rotina possam    Ё
Ё          Ёser lidas pelas bibliotecas Framework da Versao 9.12 .      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё< Vide Parametros Formais >									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA210                                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Retorno  ЁaRotina														Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/   

Static Function MenuDef()
/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Define Array contendo as Rotinas a executar do programa      Ё
Ё ----------- Elementos contidos por dimensao ------------     Ё
Ё 1. Nome a aparecer no cabecalho                              Ё
Ё 2. Nome da Rotina associada                                  Ё
Ё 3. Usado pela rotina                                         Ё
Ё 4. Tipo de Transa┤└o a ser efetuada                          Ё
Ё    1 - Pesquisa e Posiciona em um Banco de Dados             Ё
Ё    2 - Simplesmente Mostra os Campos                         Ё
Ё    3 - Inclui registros no Bancos de Dados                   Ё
Ё    4 - Altera o registro corrente                            Ё
Ё    5 - Remove o registro corrente do Banco de Dados          Ё
Ё    6 - Copiar                                                Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aRotina		:= {;
								{ STR0001 , "AxPesqui"	 , 0 , 01, ,.F. } ,; //"Pesquisar"
								{ STR0002 , "Apda210Mnt" , 0 , 02 } ,; //"Visualizar"
								{ STR0003 , "Apda210Mnt" , 0 , 04 } ,; //"Incluir"
								{ STR0004 , "Apda210Mnt" , 0 , 04 } ,; //"Alterar"
								{ STR0005 , "Apda210Mnt" , 0 , 05 }  ; //"Excluir"
							}	 
Return aRotina
