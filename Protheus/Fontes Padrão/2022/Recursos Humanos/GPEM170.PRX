#INCLUDE "PROTHEUS.CH"
#INCLUDE "GPEM1170.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GPEM170  ³ Autor ³ Equipe do RH          ³ Data ³ 15/03/2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Calculo Geral de Verbas                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GPEM170(void)                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS  ³ Motivo da Alteracao                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄ ÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Cecilia     |15/03/13|RH210  |Unificacao da Folha de Pagamento          ³±±
±±³Esther V.   |22/04/14|M_RH003|Replica V11 para V12. Tratamento do para- ³±±
±±³            |        |       |metro MV_ITMCLVL para aceitar '3', nao    ³±±
±±³            |        |       |obrigando o preenchimento dos campos.     ³±±
±±³Flavio C.   |05/06/14|TPICHL |Alteração  fValRot para validar corretamen-³±±
±±³            |        |       |te o roteiro com processo/periodo         ³±±
±±³Flavio C.   |27/08/14|TQKKHW |Passar como parametro o periodo para a    ³±±
±±³            |        |       |funcao fSalario                           ³±±
±±³WinstonCosta|31/10/18|       |Preparando o fonte padrão para execucao do³±±
±±³            |        |       |Robo. Tratativa realizada atraves da va-  ³±±
±±³            |        |       |riavel lAutomato e array aRetAuto que é   ³±±
±±³            |        |       |carregado pelo Robô                       ³±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPEM170(aRetAuto)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Locais (Programa)                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local nOpca		:= 0
Local aSays		:= {}
Local aButtons	:= {}  

Private cCond		:= "1"
Private cProcesso	:= ""
Private cPeriodo	:= ""
private cFilRCJ 	:= ""

Private lAutomato	:= IsBlind()	// -- Se .T. execução via Robô

Private aFldRot 	:= {'RA_NOME'}
Private aOfusca	 	:= If(FindFunction('ChkOfusca'), ChkOfusca(), {.T.,.F.}) //[1] Acesso; [2]Ofusca
Private lOfuscaNom 	:= .F. //RA_NOME
Private aFldOfusca	:= {}

If aOfusca[2]
	aFldOfusca := FwProtectedDataUtil():UsrNoAccessFieldsInList( aFldRot ) // CAMPOS SEM ACESSO
	IF aScan( aFldOfusca , { |x| x:CFIELD == "RA_NOME" } ) > 0
		lOfuscaNom := FwProtectedDataUtil():IsFieldInList( "RA_NOME" )
	ENDIF
ENDIF

cCadastro  			:= OemToAnsi( STR0001 ) //"Geracao de Verbas "

dbSelectArea("RGB")

Pergunte("GPE170M",.F.)

// -- Analisando se a execução é via Robô
If lAutomato
	nOpca := 1
Else
	AADD(aSays,OemToAnsi(STR0002) )  //"Este programa gera verbas no movimento mensal."
	AADD(aSays,OemToAnsi(STR0003) )  //"Ser  processado de acordo com parƒmetros selecionados"
	AADD(aSays,OemToAnsi(STR0004) )  //"pelo us£ario."
	
	AADD(aButtons, { 5,.T.,{|| Pergunte("GPE170M",.T. ) } } ) 
	AADD(aButtons, { 1,.T.,{|o| nOpca := 1,IF(gpm170valper() .and. gpconfOK(),FechaBatch(),nOpca:=0) }} )
	AADD(aButtons, { 2,.T.,{|o| FechaBatch() }} )
	
	FormBatch( cCadastro, aSays, aButtons )
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Chamada do Processamento             			   			   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// -- Analisando se a execução é via Robô
IF lAutomato
	Processa({|lEnd| GPM170Processa(aRetAuto)},STR0005)	//	-- Gerando Verba
Elseif nOpca == 1
    Processa({|lEnd| GPM170Processa()},STR0005)  		//	-- Gerando Verba
EndIF

Return( NIL )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³ GPM170Processa ³ Autor ³ Equipe do RH          ³ Data ³ 15/03/2013³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³ Calculo Geral de Verbas                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³ GPEM170(void)                                               ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³ Generico                                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static FUNCTION GPM170Processa(aRetAuto)

Local aFaixas     := {}
Local cLimite     := ""
Local cMascara    := ""
Local cAnoPLR     := ""
Local nPict       := 0
Local cDeci       := 0
Local nPos        := 0
Local nSalMin     := 0
Local nSalario    := nSalMes     := nSalDia     := nSalHora  := 0
Local nHrsSR1     := nValParcela := nValResiduo := 0
Local nValor      := nBaseCalc   := 0
Local lCalcVerba  := .F. // Calculo da Verba a Partir da Base Apurada
Local lGravaVerba := .F. // Define se Deve ou Nao Gravar a Verba Gerada
Local nPerceVerba := 0   // Percentual que Sera Aplicado Sobre a Verba Calculada
Local cAlias      := ""  // Alias do Arquivo de Acordo com o Tipo de Geracao
Local cTipoGrava  := " "
Local cQVerba     := " "
Local X
Local n
Local cFilSv    := cFilAnt
Local aLog		:= {}
Local aLogTitle := {}

Local lAvisoBlq   := .T.
Local lAvisoVrb   := .T.
Local lAvisoPON   := .T.
Local lBloqPON	  := ("4" $ SuperGetMv( "MV_BLOQPON",,"" ))

Local bSraScope

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis de Acesso do Usuario                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cAcessaSRA	:= &( " { || " + IF( Empty( cAcessaSRA := ChkRH( "GPEM170" , "SRA" , "1" ) ) , ".T." , cAcessaSRA ) + " } " )
Local cAcessaSRV	:= &( " { || " + IF( Empty( cAcessaSRV := ChkRH( "GPEM170" , "SRV" , "1" ) ) , ".T." , cAcessaSRV ) + " } " )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis de uso Dimensoes do Objeto                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Private(Programa)                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aCodFol   := {}
Private aRoteiro  := {}
Private nPosAnt   := nPosAtu := 6
Private nPosCnt,nTotRegs
Private nMult
Private lItemClvl := SuperGetMv( "MV_ITMCLVL", .F., "2" ) $ "1*3" //variavel que define se os campos "Item Contabil" e Classe de Valor" estão ativos

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define array contendo as Rotinas a executar do programa      ³
//³ ----------- Elementos contidos por dimensao ------------     ³
//³ 1. Nome a aparecer no cabecalho                              ³
//³ 2. Nome da Rotina associada                                  ³
//³ 3. Usado pela rotina                                         ³
//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
//³    2 - Simplesmente Mostra os Campos                         ³
//³    3 - Inclui registros no Bancos de Dados                   ³
//³    4 - Altera o registro corrente                            ³
//³    5 - Remove o registro corrente do Banco de Dados          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aRotina := { { STR0012 , "        ", 0 , 1},; //"Pesquisar"
                     { STR0013 , "        ", 0 , 2},; //"Visualizar"
					 { STR0014 , "        ", 0 , 3},; //"Incluir"
					 { STR0015 , "        ", 0 , 4},; //"Alterar"
					 { STR0016 , "        ", 0 , 5} } //"Excluir"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando as Perguntas                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cProcesso	:= mv_par01	//Processo
cPeriodo	:= mv_par02	//Periodo
cSemana		:= mv_par03	//Numero de Pagamento
cRoteiro	:= mv_par04	//Roteiro
nOrdem  	:= mv_par05	//Processar por 1-Matricula  2-C.Custo
cFilDe 	   	:= mv_par06	//Filial De
cFilAte 	:= mv_par07	//Filial Ate
cCcDe       := mv_par08	//Centro de Custo De    
cCcAte      := mv_par09	//Centro de Custo Ate   
cMatDe      := mv_par10	//Matricula De
cMatAte     := mv_par11	//Matricula Ate
cFunDe      := mv_par12	//Funcao De
cFunAte     := mv_par13	//Funcao Ate
cCodigo     := mv_par14	//Informe a Verba
nParcela    := mv_par15 //Informe a Parcela
lRegrava    := If(mv_par16 == 1,.T.,.F.)	//Regrava Onde Existe 1-Sim 2-Não
cSindicato  := mv_par17	//Informe Sindicato
cTurnoDe	:= mv_par18	//Turno De
cTurnoAte	:= mv_par19	//Turno Ate
nBase       := mv_par20	//Base em Horas Valor Percentual Dias
nSalVerba   := mv_par21	//Percentual Sobre Verba ou Salario  

If cPaisLoc == "BRA"
 	 nSalIncor   := mv_par22	//Salario Base ou Composto
 	 cQualVerba  := mv_par23	//Percentual Sobre Qual Verba   
	 dVencto     := mv_par24	//Data do Vencimento para Valores Futuros
	 lZerada     := If(mv_par25 == 1,.T.,.F.)	//Se gera a verba com 0                  
	 nGeracao    := mv_par26	//Geracao de Valores 1-Variaveis ou 2-Futuros
	 cSituacao   := mv_par27	//Situacao na Folha
	 cCategoria  := mv_par28	//Categoria Funcional                               
Else
 	 cQualVerba  := mv_par22	//Percentual Sobre Qual Verba   
	 dVencto     := mv_par23	//Data do Vencimento para Valores Futuros
	 lZerada     := If(mv_par24 == 1,.T.,.F.)	//Se gera a verba com 0                  
	 nGeracao    := mv_par25	//Geracao de Valores 1-Variaveis ou 2-Futuros
	 cSituacao   := mv_par26	//Situacao na Folha
	 cCategoria  := mv_par27	//Categoria Funcional                               
Endif

dDataPgto   := dDataBase
dDataRef	:= RCH->RCH_DTFIM	// Data Final   
dFolMes     := RCH->RCH_DTINI

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria o Bloco dos Funcionarios que atendam ao Scopo	   	   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
bSraScope := { || (;
						( RA_FILIAL 	>= cFilDe	    .and. RA_FILIAL 	<= cFilAte	    ) .and. ;
						( RA_CC 		>= cCcDe		.and. RA_CC 		<= cCcAte		) .and. ;
						( RA_TNOTRAB	>= cTurnoDe	    .and. RA_TNOTRAB	<= cTurnoAte	) .and. ;
						( RA_MAT 		>= cMatDe		.and. RA_MAT 		<= cMatAte		) .and. ;
						( RA_CODFUNC	>= cFunDe		.and. RA_CODFUNC	<= cFunAte		) .and. ; 
						( RA_CATFUNC $ cCategoria )     .and. ( RA_SITFOLH $ cSituacao 	    )		;							
				   );
			 }

If Empty(cCodigo) 
	MsgAlert( oemToAnsi(STR0035) )
	Return ( NIL)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para checar as perguntas de calculo.        |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("GPCHKPER")
	If !ExecBlock("GPCHKPER",.F.,.F.)
		Return
	EndIf
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica Restricoes em Relacao a Geracao da Verba             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PosSrv( cCodigo , SRA->RA_FILIAL )
dbSelectArea("SRV")
IF !Eval( cAcessaSRV )
	Help(" ",1,"GPMNOAUTPD")
	Return( NIL )
EndIF
			
//- Valida se a verba permite lancamentos.
If !fNoLancPD(cCodigo, SRA->RA_FILIAL, .T.)
	Return(.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define se Devera Calcular a Verba ou Acatar o Valor Informado³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lCalcVerba :=( (nGeracao == 1 .And. nBase == 3) .Or. (nGeracao # 1 .And. nBase # 2) )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o Alias do Arquivo de Acordo com o Tipo de Geracao    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cAlias := If(nGeracao == 1, "RGB", "SRK")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se o Calculo for Pela Verba, a Verba Deve ser Informada.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCalcVerba .And. nSalVerba == 1 .And. Empty( cQualVerba ) 
	Help(" ",1,"G170SVERBA")
	Return Nil
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se Geracao de Valores Futuros, o N§ de parcelas e obrigatorio|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nGeracao == 2 .And. nParcela == 0
	Help(" ",1,"A1100PARC")
	Return Nil
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se Geracao de Valores Futuros, o Vencimento e obrigatorio    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nGeracao == 2 .And. Empty(dVencto)
	Help(" ",1,"A060SDTVEN")
	Return Nil
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta o as Verbas                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If  lCalcVerba .And. nSalVerba == 1
	For X=1 To len(cQualVerba) step 3
		cQVerba	+= substr(cQualVerba,X,3)
		cQVerba += "*"
	Next x	
Endif	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Obtem os Dados Que Irao Compor o Browse                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nBase == 1
	cLimite  := STR0017 //" Horas "
	cMascara := "@E 999.99"
	nPict    := 6
	nDeci    := 2
ElseIf nBase == 2
	cLimite  := STR0018 //" Valor "
	cMascara := "@E 999,999,999,999.99"
	nPict    := 15
	nDeci    := 2
ElseIf nBase == 3
	cLimite  := STR0019 //"Percentual"
	cMascara := "@E 999.999999"
	nPict    := 10
	nDeci    := 6
Else
	cLimite  := STR0020 //" Dias"
	cMascara := "@E 999.99"
	nPict    := 6
	nDeci    := 2
Endif

Private aHeader := {}
Private aCols 	:= {}

If (cPaisLoc == "MEX" .AND. nBase == 2)//alteração para o Mexico poder gerar valores Negativo.
	Aadd(aHeader,{cLimite ,"GPM170PERC",cMascara               , nPict , nDeci ,  , "û" , "N" , "   " })
Else	
	Aadd(aHeader,{cLimite ,"GPM170PERC",cMascara               , nPict , nDeci , "positivo()", "û" , "N" , "   " })
EndIf

Aadd(aHeader,{STR0021 ,"GPM170DE"  ,"@E 999,999,999,999.99", 15    , 2     , "positivo()" , "û" , "N" , "   " }) //"Faixa De"
Aadd(aHeader,{STR0022 ,"GPM170ATE" ,"@E 999,999,999,999.99", 15    , 2     , "positivo()" , "û" , "N" , "   " }) //"Faixa Ate"
If nBase == 3
	Aadd(aHeader,{STR0023 ,"GPM170MIN" ,"@E 999,999,999,999.99", 15    , 2     , "positivo()" , "û" , "N" , "   " }) //"Minimo"
	Aadd(aHeader,{STR0024 ,"GPM170MAX" ,"@E 999,999,999,999.99", 15    , 2     , "positivo()" , "û" , "N" , "   " }) //"Maximo"
	aAlter := { "GPM170PERC" , "GPM170DE" , "GPM170ATE" , "GPM170MIN" , "GPM170MAX" }
	aAdd( aCols , { 0 , 0 , 0 , 0 , 0 , .F. } )
Else
	aAlter := { "GPM170PERC" , "GPM170DE" , "GPM170ATE"}
	aAdd( aCols , { 0 , 0 , 0 , .F. } )
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa 1§ Item                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nUsado := 5
Private aTELA[0,0],aGETS[0]
nOpca  := 0
          
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta as Dimensoes dos Objetos         					   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

// -- Analisando se a execução é via Robô
If lAutomato
	nOpca:=1
Else
	aAdvSize		:= MsAdvSize()
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aObjSize := MsObjSize( aInfoAdvSize , aObjCoords )
	While .T.
		nOpca := 0
		DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0026) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL //"Informe as Faixas"
		oGet 	:= MsGetDados():New(aObjSize[1,1],aObjSize[1,2],aObjSize[1,3],aObjSize[1,4],3,"gpM170LinOk","gpM170TudOk","",.T.,, ,NIL,99999)
		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpca:=1,If(oGet:TudoOk(),oDlg:End(),nOpca:=0)},{||oDlg:End()})
		If	nOpca == 1
			Exit
		Else
			Return
		Endif
	Enddo
Endif

If Len(Acols) == 0
	Return Nil
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Desconsidera Faixas deletadas                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aFaixas := { }
If nBase == 3
	For N=1 To Len(aCols)
		If aCols[N,6] == .F.
		
			If lAutomato
				acols[N,1] := aRetAuto[N,1]
				acols[N,2] := aRetAuto[N,2]
				acols[N,3] := aRetAuto[N,3]
				acols[N,4] := aRetAuto[N,4]
				acols[N,5] := aRetAuto[N,5]
			Endif
			Aadd(aFaixas,{aCols[N,1] , aCols[N,2] , aCols[N,3] , aCols[N,4] , aCols[N,5] , aCols[N,6]})
		Endif
	Next N
Else
	For N=1 To Len(aCols)
		If aCols[N,4] == .F.
			// -- Analisando se a execução é via Robô
			If lAutomato
				acols[N,1] := aRetAuto[N,1]
				acols[N,2] := aRetAuto[N,2]
				acols[N,3] := aRetAuto[N,3]
			Endif

			Aadd(aFaixas,{aCols[N,1] , aCols[N,2] , aCols[N,3] , aCols[N,4]})
		Endif
	Next N
EndIf

If nOpca == 1
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Procura primeiro funcionario                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "SRA" )
	If nOrdem = 1 		//Matricula - indice G
		dbSetOrder( RetOrdem( "SRA" , "RA_FILIAL+RA_PROCES+RA_MAT" ) )
		dbSeek( cFilDe + cProcesso + cMatDe , .T. )
	Elseif nOrdem = 2  //Centro de Custo - indice H
		dbSetOrder( RetOrdem( "SRA" , "RA_FILIAL+RA_PROCES+RA_CC+RA_MAT" ) )
		dbSeek( cFilDe + cProcesso + cCcDe + cMatDe , .T. )
	Elseif nOrdem = 3 //Funcao - indice I
		dbSetOrder( RetOrdem( "SRA" , "RA_FILIAL+RA_PROCES+RA_CODFUNC" ) )
		dbSeek( cFilDe + cProcesso + cFunDe , .T. )
	Endif

	cFilAnte := Space(FWGETTAMFILIAL)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega Regua Processamento	                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ProcRegua(SRA->(RECCOUNT()))

	While !Eof()

		IncProc( SRA->( RA_FILIAL +" - " + RA_MAT + If(lOfuscaNom,''," - " + RA_NOME) ) )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Consiste o De/Ate                                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF nOrdem = 1
			If Eof() .Or. ( SRA->RA_FILIAL + SRA->RA_PROCES + SRA->RA_MAT > cFilAte + cProcesso + cMatAte )
				Exit
			Endif
		ElseIf nOrdem = 2
			If Eof() .Or. ( SRA->RA_FILIAL + SRA->RA_PROCES + SRA->RA_CC + SRA->RA_MAT > cFilAte + cProcesso + cCcAte + cMatAte )
				Exit
			Endif
		ElseIf nOrdem = 3
			If Eof() .Or. ( SRA->RA_FILIAL + SRA->RA_PROCES + SRA->RA_CODFUNC  > cFilAte + cProcesso + cFunAte )
				Exit
			Endif
		Endif

		//?- Verifica se o calculo esta Liberado
		dDtaVld := If(nGeracao==2,dVencto,dFolMes) 
	   If !fVldAccess( SRA->RA_FILIAL, dDtaVld, cSemana, lAvisoBlq, cRoteiro,"2" )
			 lAvisoBlq := .F.
			 dbSelectArea( "SRA" )
			 dbSkip()
			 Loop
      EndIf 
       //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	    //³ PE para desprezar funcionario, caso retorne .t.   ³
       //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF ExistBlock("GPROXFUN")
			If Execblock("GPROXFUN",.F.,.F.)
				dbSelectArea( "SRA" )
				SRA->( dbSkip() )
				Loop      	
			EndIf
		EndIF                
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica Quebra de Filial                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SRA->RA_FILIAL # cFilAnte
			If !FP_CODFOL(@aCodFol)
				Return
			Endif
			cFilAnte := SRA->RA_FILIAL

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Define o Percentual Referente a Verba 						 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PosSrv(cCodigo,SRA->RA_FILIAL)
			nPerceVerba := SRV->RV_PERC
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica Sindicato                                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cSindicato # "99"
			If SRA->RA_SINDICA # cSindicato
				dbSelectArea( "SRA" )
				dbSkip()
				Loop
			Endif

			// Caso o sindicato esteja configurado no MV_PAR, busco o contudo do RCE_PLRARC
			dbSelectArea( "RCE" )
			dbSetOrder( RetOrdem( "RCE" , "RCE_FILIAL+RCE_CODIGO" ) )
			dbSeek( xFilial("RCE", SRA->RA_FILIAL) + cSindicato)
			If !Empty(RCE->RCE_PLRARC)
				cAnoPLR := RCE->RCE_PLRARC + "0101"
			EndIF
		Endif

	   //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	   //³ Consiste filtro do intervalo De / Ate                        ³
	   //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF SRA->( !Eval( bSraScope ) )
			SRA->( dbSkip() )
			Loop
 		EndIF

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica Processo                                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SRA->RA_PROCES # cProcesso
			dbSelectArea( "SRA" )
			dbSkip()
			Loop
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Consiste Filiais e Acessos                                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF !( SRA->RA_FILIAL $ fValidFil() ) .or. !Eval( cAcessaSRA )
			dbSelectArea("SRA")
	      	dbSkip()
	       	Loop
		EndIF

		nSalario   := 0
		nSalMes    := 0
		nSalDia    := 0
		nSalHora   := 0

		If (cPaisLoc == "BRA" .And. nSalIncor == 1 .And. nSalVerba == 2 ) .Or. (cPaisLoc != "BRA" .And. nSalVerba == 2 ) .Or. nSalVerba == 1    //Salario Base
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Calcula Salario Mes , Dia , Hora do Funcionario              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			fSalario(@nSalario,@nSalHora,@nSalDia,@nSalMes,"A",cPeriodo)
		ElseIf (cPaisLoc == "BRA" .And. nSalIncor == 2 .And. nSalVerba == 2 ) .Or. (nSalVerba == 3 .and. nBase == 3)   //Salario Composto e Percentual
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se Existe Incorporacao de Salario                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			fSalInc(@nSalario,@nSalMes,@nSalHora,@nSalDia)
		Endif

		nBaseCalc := 0
		nValor    := 0

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Montara Base de Calculo nas Seguintes Condicoes:		         |
      //|	(Se Valores Variaveis e Base Percentual) ou (Valores Futuros  |
      //|	 e Base Diferente de Valor).                                  |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lCalcVerba
			If nSalVerba == 1 
				dbSelectArea( "RGB" )
				RGB->( dbSetOrder(5) )                         
				dbSeek( SRA->RA_FILIAL + cProcesso + cPeriodo + cSemana + cRoteiro + SRA->RA_MAT ) 
				While !eof() .and. SRA->RA_FILIAL + cProcesso + cPeriodo + cSemana + cRoteiro + SRA->RA_MAT == RGB->RGB_FILIAL+ RGB_PROCES + RGB_PERIOD + RGB_SEMANA + RGB_ROTEIR + RGB->RGB_MAT
					If !(RGB->RGB_PD $ cQVerba)
						RGB->(dbSkip())
						Loop
					ElseIf RGB->RGB_CC == SRA->RA_CC
						nBaseCalc += RGB->RGB_VALOR
					EndIf
					RGB->(dbSkip())
				Enddo	
			Else
				dbSelectArea( "SRA" )
				nBaseCalc := nSalmes
			Endif
		Endif

		nPos := Ascan(aFaixas, { |X| X[2] <= nSalMes  .And. X[3] >= nSalMes })
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se o Salario nao Entrar nas Faixas ler proximo Funcionario   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPos == 0
			dbSelectArea( "SRA" )
			dbSkip()
			Loop
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se calcula a verba ou aceita o valor informado      |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        nValor := aFaixas[nPos,1]   // O proprio valor informado
		If lCalcVerba 				// Calcular a Verba
	        If nGeracao == 1        // Valores Variaveis
    	      	If nBase == 3       // Percentual
					nValor := Round(( nBaseCalc * aFaixas[nPos,1] ) / 100,2)
				Endif
			Else			        // Valores Futuros
				If nBase == 1       // Horas
	               	nValor := Round((( nBaseCalc * aFaixas[nPos,1] ) / SRA->RA_HRSMES) * (nPerceVerba/100),2)
	           	ElseIf nBase == 3   // Percentual
					nValor := Round(( nBaseCalc * aFaixas[nPos,1] ) / 100,2)
	            Elseif nBase == 4   // Dias
	               	nValor := Round((( nBaseCalc * aFaixas[nPos,1] ) / 30) * (nPerceVerba/100),2)
				EndIf
	        EndIf
	        If nBase == 3
				If nValor < aFaixas[nPos,4]
					nValor := aFaixas[nPos,4]
				Endif
				If nValor > aFaixas[nPos,5]
					nValor := aFaixas[nPos,5]
				Endif
	        EndIf
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica Qual Tipo Vai Gravar                                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nBase == 3
			cTipoGrava := "V" 
		ElseIf nBase == 1
			cTipoGrava := "H"
		ElseIf nBase == 2
			cTipoGrava := "V"
		ElseIf nBase = 4
			cTipoGrava = "D"
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava de Acordo com o Tipo de Geracao: 						      |
		//|	1-Valores Variveis   2-Valores Futuros                        |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea( cAlias )
      If nGeracao == 2	  // Valores Futuros
		    SRK->( dbSetOrder(4) )                         
			 dbSeek(SRA->RA_FILIAL + SRA->RA_MAT + cCodigo + cPeriodo + cSemana)
      Else // Valores Variaveis  
			 RGB->( dbSetOrder(5) )
			 dbSeek(SRA->RA_FILIAL +SRA->RA_PROCES + cPeriodo + cSemana + cRoteiro + SRA->RA_MAT + cCodigo )
      EndIf

		//?-Verifica se pode alterar Verbas de Adto.
		//?-fVldAccess( c_Filial, dData, c_Semana, lAviso, cRoteiro, cTpAviso, cTipoVld )
		If nGeracao == 1 .And. !fVldAccess( SRA->RA_FILIAL, dFolMes, cSemana, lAvisoVrb, "ADI", "4", "V" )
			lAvisoVrb := .F.
	      dbSelectArea( "SRA" )
	      dbSkip()
	      Loop
		EndIf

        lGravaVerba := .F.  
	    //alteração para o Mexico, Possibilita a geração de valores negativos
	    If (cPaisLoc == "MEX")
	    	IF !Eof() .And.	lRegrava
				lGravaVerba := RecLock(cAlias,.F.,.T.)
			ElseIf Eof() 
				lGravaVerba := RecLock(cAlias,.T.)
	        EndIF
	    Else
			If !Eof() .And.	lRegrava .And. ( nValor > 0  .OR. lZerada == .T. )
				//?-Bloqueia Verbas vindas do SIGAPON
				If nGeracao == 1 .And. lBloqPON .And. Upper(RGB->RGB_TIPO2) == "E"
					Iif( lAvisoPON, fVldAltPon( "2" ),Nil )	//?-Apresenta Mensagem
					lAvisoPON := .F.
	        	Else
					lGravaVerba := RecLock(cAlias,.F.,.T.)
				EndIf
			ElseIf Eof() .And. ( nValor > 0 .OR. lZerada == .T. )
				lGravaVerba := RecLock(cAlias,.T.)
	        EndIF
	    EndIf

        If lGravaVerba
        	cFilAnt := SRA->RA_FILIAL
			If nGeracao == 1     // Valores Variaveis
				RGB->RGB_FILIAL := SRA->RA_FILIAL
				RGB->RGB_MAT    := SRA->RA_MAT
				RGB->RGB_PD     := cCodigo
				RGB->RGB_TIPO1  := cTipoGrava
				RGB->RGB_HORAS  := If(nBase = 1 .Or. nBase = 4 , nValor , 0 )
				RGB->RGB_VALOR  := If(nBase = 2 .Or. nBase = 3 , nValor , 0 )
				RGB->RGB_DEPTO  := SRA->RA_DEPTO
				If RGB->(FieldPos(RGB_CODFUN)) > 0
					RGB->RGB_CODFUN := SRA->RA_CODFUNC
   	          	EndIf
				RGB->RGB_SEMANA := cSemana
				RGB->RGB_CC     := SRA->RA_CC
				If lItemClvl
					RGB->RGB_ITEM := SRA->RA_ITEM
					RGB->RGB_CLVL := SRA->RA_CLVL
				EndIf	
				RGB->RGB_PARCEL := nParcela
				RGB->RGB_TIPO2  := "G"

				// Se a verba for de PLR, força a gravação
				// de Acordo com o ano do cadastro de sindicatos.
				// Para a correta apuração do IRRF, em casos de PLR em mais de 1 parcela.
				If cCodigo == aCodFol[151,1] .And. !Empty(cAnoPLR)
					RGB->RGB_DTREF := sTod(cAnoPLR)
				Else
					RGB->RGB_DTREF  := dDataRef
				Endif
				RGB->RGB_PROCES := cProcesso
				RGB->RGB_PERIOD := cPeriodo
				RGB->RGB_POSTO  := SRA->RA_POSTO								
				RGB->RGB_ROTEIR := cRoteiro  
				MsUnlock()
			ElseIf nGeracao == 2 // Valores Futuros
   				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Se Nı Parcela maior que um Calcula Valor Parcela e Residuo   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	            nValResiduo := 0
	            nValParcela := nValor
				If nParcela > 1
					nValParcela := NoRound(nValor / nParcela,2)
					nValResiduo := NoRound(nValor - (nValParcela*nParcela),2)
				EndIF
     			SRK->RK_FILIAL  := SRA->RA_FILIAL
				SRK->RK_MAT     := SRA->RA_MAT
				SRK->RK_PD      := cCodigo
				SRK->RK_VALORTO := nValor
				SRK->RK_PARCELA := nParcela
				SRK->RK_VALORPA := nValParcela
				SRK->RK_VALORAR := nValResiduo
				SRK->RK_DTVENC  := dVencto
				SRK->RK_DTMOVI  := dDataBase
				SRK->RK_DOCUMEN := "000001"
				SRK->RK_CC      := SRA->RA_CC
                    	
                //--Se for regravacao, zera os valores do num de parcelas pagas e do valor pago
            	If lRegrava
            	    SRK->RK_PARCPAG := 0
            		SRK->RK_VLRPAGO := 0.00
            	EndIf

				If lItemClvl
					SRK->RK_ITEM := SRA->RA_ITEM
					SRK->RK_CLVL := SRA->RA_CLVL
				EndIf
				SRK->RK_PERINI  := cPeriodo
				SRK->RK_NUMPAGO := cSemana
				SRK->RK_PROCES  := SRA->RA_PROCES
				SRK->RK_STATUS  := "2"
				SRK->RK_NUMID   := cAlias + SRA->RA_FILIAL + SRA->RA_MAT + cCodigo + "000001"
				MsUnlock()
			Endif
			cFilAnt := cFilSv
		EndIf
        dbSelectArea( "SRA" )
        dbSkip()
	Enddo
Endif

If Len(aLog) > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera e Mostra o Log 										           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//	    10        20       30        40        50        60        70        80        90       100       110...
	//1234567890123456789023456789012345678901234567890123456789012345678901234567890123456789012345678901234567890...
	//Arquivo Registro   Conteudo
	//XXX     9999999999 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	aAdd( aLogTitle ,STR0031)	//"       Verba   Matricula   Nome do funcionario"
	MsAguarde( { || fMakeLog( { aLog } , aLogTitle , NIL , NIL , FunName() , STR0032 ) } , STR0032 )  // "Log de Ocorrencia"
Endif

Return( Nil )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o   ³GPM170LinOk³ Autor ³ Marcos A. Stiefano    ³ Data ³ 07/11/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o³Critica linha digitada                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso     ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function GPM170LinOk(o)
Local lRet     := .T.
Local aFaixas1 := {}
Local nI
Local X

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Desconsidera Faixas deletadas                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aFaixas1 := { }
If nBase == 3
	For Ni=1 To Len(aCols)
		If aCols[Ni,6] == .F.
			Aadd(aFaixas1,{aCols[Ni,1] , aCols[Ni,2] , aCols[Ni,3] , aCols[Ni,4] , aCols[Ni,5] , aCols[Ni,6]})
		Endif
	Next Ni
Else
	For Ni=1 To Len(aCols)
		If aCols[Ni,4] == .F.
			Aadd(aFaixas1,{aCols[Ni,1] , aCols[Ni,2] , aCols[Ni,3] , aCols[Ni,4]})
		Endif
	Next Ni
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a Linha Digitada para Validacao                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For X = 1 to Len(aFaixas1)
	If aFaixas1[X,2] > aFaixas1[X,3]
		Help(" ",1,"GM170FAIXA")
		lRet := .F.
		Exit
	Endif

	If X > 1
		If aFaixas1[X,2] <= aFaixas1[X-1,3]
			Help(" ",1,"GM170FAIXA")
			lRet := .F.
			Exit
		Endif
	Endif
Next X

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o   ³GPM170TudOk³ Autor ³ Marcos A. Stiefano    ³ Data ³ 07/11/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso     ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function GPM170TudOk(o)
Local lRetorna  := .T.
Continua := .F.

Return lRetorna

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³gpm170ValidParcºAutor  ³Tatiane Matias      º Data ³ 26/04/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para validar o campo parcela da pergunte GPM170.          º±±
±±º          ³Quando o roteiro for Valores Futuros podera ser informado ate    º±±
±±º          ³"9999" no campo parcela da pergunte, porem para outros roteiros  º±±
±±º          ³so podera ser ate "99". Essa validacao precisa ser feita pois    º±±
±±º          ³o campo parcela da tabela de valores futuros (RK_PARCELA) tem ta-º±±
±±º          ³manho de 4 e a tabela de lancamentos (SRC->RC_PARCELA) tem tama- º±±
±±º          ³nho de 2.                                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SX1-Valid do campo GPM170-15                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function gpm170ValidParc(cParcela, cRoteiro)

Local lRet := .T.

	If cRoteiro <> "FUT" .and. Len(Alltrim(Str(cParcela))) > 2
		lRet := .F.	
		MsgInfo( STR0029 , STR0028 ) // "Quando o roteiro não for valores futuros, o número de parcelas deve ser menor ou igual a 99." # " "Atenção"
	EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³gpm170valper   ºAutor  ³Mauricio Takakura   º Data ³ 19/10/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validar o Periodo informado nos parametros.                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gpm170valper()
Local lRet := .F.              
              
// mv_par01	--> Processo
// mv_par02 --> Periodo
// mv_par03 --> Numero de Pagamento
// mv_par04 --> Roteiro
  
lRet := fPosPeriodo( Nil, mv_par01, mv_par02, mv_par03, mv_par04 )
If !lRet
	Help(" ",1,"NOTPERIODO")
EndIf

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³fValRot   ³Autor³Igor Franzoi			    ³Data³31/08/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Valida o Roteiro Digitado									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Consulta Padrao (SXB)				                  	   	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function fValRot()

Local lRet := .T.

lRet := Gpem170Rot( mv_par01, mv_par02, mv_par03, "mv_par04" )
    
Return (lRet)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Gpem170Rot³Autor³Igor Franzoi		        ³Data³17/10/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validar o roteiro selecionado								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Consulta Padrao (SXB)				                  	   	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpem170Rot( cProcesso, cPeriodo, cNumPag, cVarRet, lPergRot )

Local cFilRCH

Local lRet 		:= .T.
Local lFound 	:= .F.
Local cTipoRot

DEFAULT lPergRot := .T.

Begin Sequence

 	IF Empty( cProcesso ) .Or. !( lRet := ExistCpo( "SRY" ) )
		lRet := .F.
		Break
	EndIF

	cFilRCH	:= xFilial("RCH")
	DbSelectArea("RCH")
	RCH->( dbsetOrder( Retorder( "RCH" , "RCH_FILIAL+RCH_PROCES+RCH_PER+RCH_NUMPAG+RCH_ROTEIR" ) ) )
	cTipoRot := fGetTipoRot( &cVarRet )
	If cTipoRot <> "9"   //Roteiro Diferente de Autonomos
		RCH->( dbSeek( cFilRCH + cProcesso + cPeriodo + cNumPag, .F. ) )
		While RCH->(!Eof() .and. (( RCH_FILIAL + RCH_PROCES + RCH_PER + RCH_NUMPAG )==( cFilRCH + cProcesso + cPeriodo + cNumPag )))	
			If RCH->((RCH_ROTEIR == &cVarRet .and.	Empty( RCH_DTFECH))	.Or. (Empty( RCH_ROTEIR ) .and. Empty( RCH_DTFECH )))
				lFound := .T.
				Exit
			EndIf
			RCH->( dbSkip() )
		EndDo
	Else	
		RCH->( dbSeek( cFilRCH + cProcesso + cPeriodo , .F. ) )
		While RCH->(!Eof() 	.and. (( RCH_FILIAL + RCH_PROCES + RCH_PER )	==( cFilRCH + cProcesso + cPeriodo  )))	
			If RCH->((RCH_ROTEIR == &cVarRet .and. Empty(RCH_DTFECH)) .Or. (Empty(RCH_ROTEIR)	.and. Empty(RCH_DTFECH)))
				lFound := .T.
				Exit
			EndIf
			RCH->( dbSkip() )
		EndDo
   Endif
	If ( lFound )
		lFound := ExistCpo( "SRY" )
	EndIf

	If !( lFound )
		lRet := .F.
		MsgInfo( STR0030 , STR0028 ) // "Roteiro Invalido!" - "Atenção"
	EndIf

End Sequence
		
Return( lRet )
