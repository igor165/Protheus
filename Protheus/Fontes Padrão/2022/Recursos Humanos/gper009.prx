#INCLUDE "PROTHEUS.CH"
#INCLUDE "GPER009.CH"
#INCLUDE "report.ch"

/*                                                                      
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ GPER009  ³ Autor ³ Equipe RH Inovacao                     ³ Data ³ 03.04.2013 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GPER009(void)                                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Impressao do Mapa de Beneficios                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±± 
±±³Uso       ³ Generico                                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         		ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL                  		 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programador ³   Data   ³ BOPS / Chamado ³  Motivo da Alteracao                            ³±±
±±³Cecilia     ³ 03/04/13 ³RHU210          ³ Unificacao da Folha. Beneficios.                ³±±
±±³Cecilia     ³ 22/08/13 ³RHU210          ³ Unif.Folha. Beneficios-conversao do calculo dos ³±±
±±³            ³          ³                ³ beneficios para ser eftuado por roteiro.        ³±±
±±³Raquel Hager³ 17/01/13 ³M12RH01         ³ Unificacao da Folha. Beneficios Fase 2.         ³±±
±±³Carlos E. O.³ 16/04/14 ³M_RH003         ³ Ajuste para exibir totais NQTDEVALE e NVALEDIF  ³±±
±±³            ³          ³2951_02         ³ com 4 digitos.                                  ³±±
±±³            ³          ³                ³ Ajuste para exibir os totais gerais.            ³±±
±±³Claudinei S.³03/06/2014³          TPSCXP³ Ajuste para que caso o pergunte C.C em outra    ³±±
±±³            ³          ³                ³ pagina (mv_par06) esteja como sim, seja feita a ³±±
±±³            ³          ³                ³ quebra da pagina para as ordens 2, 4 e 5.       ³±±
±±³M. Silveira ³30/06/2014³TPT248          ³Ajuste na picture p/ nao gerar valores truncados.³±±
±±³Flavio C.   ³03/09/2014³TQJD43          ³Ajuste no valid do Pergunte p/ preencher num pag.³±±
±±³Wag Mobile  ³23/12/2014³TRFJI6          ³Ajuste para nao imprimir o total de funcionarios ³±±
±±³            ³          ³				   ³na impressao em planilha.                        ³±±
±±³Henrique V. ³12/03/2015³TRVNMK          ³Correção para que o sistema imprima corretamente ³±±
±±³            ³          ³                ³os meios de transporte respeitando suas filiais  ³±±
±±³Christiane V³21/10/2015³TTIFCV          ³Ajuste na função Gp009Cabec para buscar empresa  ³±±
±±³			   ³	  	  ³                ³e filial para correta exibição no cabeçalho.     ³±±
±±³Esther V.   ³27/06/2016³TVIAMO          ³Ajuste na definicao da collection do Total Geral. ³±±
±±³Willian U.  ³29/09/2017³DRHPAG-162      ³Ajuste para imprimir todo o nome do funcionário. ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/               
Function GPER009()
Local oReport   
Local aArea 			:= GetArea() 
Local oDlg
Local oRadio
Local nRadio
Local nOpca 	:= 1

Private cCodVale	    := ""
Private cDesVale  	 	:= ""
Private cTipRel  	 	:= "0"   
Private nTpVale			:= 0
Private nValUnitario 	:= nVlUnitAcu := 0
Private nValTot 	    := nValeDif := nVlTotAcu := 0
Private nQtdeVale  		:= nValUnAn := nValUnAt := nQtValeAcu := 0
Private nCustFun 		:= nCustEmp := nTotCust := 0
Private nValor6			:= nValor7  := nCusFunAcu := nCusEmpAcu := 0
Private cAliasQry		:= "SRA"
Private cAliasRel   	:= "RG2"
Private lPerFech    	:= .T.
Private cComp       	:= ""
Private cRoteir     	:= "" 
Private cRot			:= "" 
Private cPerg			:= ""
Private aCargFil		:= FwLoadSm0()
Private cTitulo			:= "" 
Private lNovoCalc		:= NovoCalcBEN()
Private lExibeLog       := .T.    

Private aPreparaErro    := {}

	While nOpca == 1      
    
		DEFINE MSDIALOG oDlg FROM  94,1 TO 273,293 TITLE OemToAnsi(STR0049) PIXEL // "Tipo do Beneficio"
		
		@ 10,17 Say OemToAnsi(STR0050) SIZE 150,7 OF oDlg PIXEL // "Escolha o Tipo do Beneficio:"
		
		@ 27,07 TO 72, 140 OF oDlg  PIXEL
		
	 
			@ 35,10 Radio 	oRadio VAR nRadio;
					ITEMS 	OemToAnsi(STR0046),;	// " Vale Transporte "
							OemToAnsi(STR0047),;	// " Vale Refeicao "
							OemToAnsi(STR0048);		// " Vale Alimentacao"
					3D SIZE 100,10 OF oDlg PIXEL
	
		
		DEFINE SBUTTON FROM 75,085 TYPE 1 ENABLE OF oDlg ACTION (nOpca := 1, oDlg:End())
		DEFINE SBUTTON FROM 75,115 TYPE 2 ENABLE OF oDlg ACTION (nOpca := 0, oDlg:End())
		
		ACTIVATE MSDIALOG oDlg CENTERED ON INIT (nOpca := 0, .T.)	// Zero nOpca caso 
	                                                             	// para saida com ESC
	
		If nOpca == 1   
	
			If nRadio == 1
				cTipRel := "0" // Vale Transporte
				nTpVale	:= 0 
				cRot	:= fGetCalcRot("8")
			ElseIf nRadio == 2  
				cTipRel := "1" // Vale Refeicao 
				nTpVale	:= 1   
				cRot	:= fGetCalcRot("D")
			ElseIf nRadio == 3
	            cTipRel := "2" // Vale Alimentacao	
	            nTpVale := 2	
	            cRot	:= fGetCalcRot("E")
			EndIf   
			
			If nTpVale == 0 //Vale Transporte
		    	If lNovoCalc
		    		cPerg	:= "GPR009RVT" 
		    	Else
		    		cPerg	:= "GPE009RVT" 
		    	EndIf
		    Else //Vale Alimentacao/Vale Refeicao
		    	If lNovoCalc
		    		cPerg	:= "GPR009RVL" 
		    	Else
		    		cPerg	:= "GPE009RVL" 
		    	EndIf
		    EndIf
		    Pergunte(cPerg,.F.)
		    oReport := ReportDef()
		    oReport:PrintDialog()
			
			nOpcA := 0
		
		EndIf  
	
	EndDo

RestArea( aArea )

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ ReportDef  ³ Autor ³ Equipe da Folha       ³ Data ³24/01/2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Mapa de Beneficios                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPER009                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ReportDef()
Local oReport 
Local oSection1 
Local oSection2        
Local cDesc1    := ""	
Local cFilRCH	:= xFilial("RCH")
Local cRepProc  := mv_par01
Local cRepPer   := mv_par02
Local cRepNmPg  := mv_par03

Private aOrd    := {}	
Private cTitulo	:= ""
	
	If cTipRel == "0"
	    cRoteir := fGetCalcRot('8') // Vale Transporte
	ElseIf cTipRel="1"
	    cRoteir := fGetCalcRot('D') // Vale Refeicao
	Else
	    cRoteir := fGetCalcRot('E') // Vale Alimentacao
	EndIf

	fPerBene(cRepProc, cRepPer, cRepNmpg, cRoteir)

	aOrd     := {OemToAnsi(STR0004),OemToAnsi(STR0005),OemToAnsi(STR0006),OemToAnsi(STR0007),OemToAnsi(STR0008)}	
             //"Matricula","C.Custo","Nome","C.Custo + Nome","C.Custo + Turno + Nome"
                    
	If nTpVale == 0 //Vale Trasporte
	   cDesc1	:= OemToAnsi(STR0001) + " " + OemToAnsi(STR0002) + " " + OemToAnsi(STR0003)  
	   //Mapa Vale Transporte será impresso de acordo com os parametros solicitados pelo usuário.
	   cTitulo	:= OemToAnsi(STR0011) 	//"Mapa Vale Transporte    
	
	   DEFINE REPORT oReport NAME "GPER009" TITLE cTitulo PARAMETER cPerg ACTION {|oReport| GR009Imp(oReport,(cAliasQry)->RA_FILIAL)} DESCRIPTION OemToAnsi(STR0037) + OemToAnsi(STR0038)		
	   //"Esta rotina gera um mapa que resume as informacoes de Vale transporte por "
	   // "funcionarios permitindo que o desconto seja gerado para a folha de pagamento."
	
	   DEFINE SECTION oSRA OF oReport TITLE OemToAnsi(STR0039) ORDERS aOrd TABLES "SRA" TOTAL IN COLUMN TOTAL TEXT STR0037
	
	   DEFINE CELL NAME "RA_FILIAL"  	OF oSRA ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_FILIAL}
	   DEFINE CELL NAME "RA_TNOTRAB" 	OF oSRA ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_TNOTRAB}
	   DEFINE CELL NAME "RA_CC"	  		OF oSRA ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_CC}
	   DEFINE CELL NAME "RA_MAT"	  	OF oSRA ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_MAT}
	   DEFINE CELL NAME "RA_NOME"	  	OF oSRA ALIAS "SRA"	SIZE 30	BLOCK {|| (cAliasQry)->RA_NOME}
	   oSRA:SetHeaderBreak(.T.)
	
	   DEFINE SECTION oRG2 OF oReport  TITLE OemToAnsi(STR0036) ORDERS aOrd TABLES cAliasRel,"SRN" TOTAL IN COLUMN TOTAL TEXT STR0037 
	
	   DEFINE CELL NAME "RA_FILIAL"  	OF oRG2 ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_FILIAL}
	   DEFINE CELL NAME "RA_MAT"	  	OF oRG2 ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_MAT}

	   DEFINE CELL NAME "VALE"	        OF oRG2 TITLE OEMTOANSI(STR0035) BLOCK {|| cCodVale	+ " - " + cDesVale	} ALIGN LEFT 
	   DEFINE CELL NAME "NQTDEVALE"	  	OF oRG2 TITLE STR0026 BLOCK {|| nQtdeVale   }   SIZE 6 PICTURE "999999"                                
	   DEFINE CELL NAME "BARRA"	     	OF oRG2 BLOCK {||"/"} 
	   DEFINE CELL NAME "NVALEDIF"	  	OF oRG2 TITLE STR0033 BLOCK {|| nValeDif }      PICTURE "999" 				
	   DEFINE CELL NAME "NVALUNITARIO"  OF oRG2 TITLE STR0027 BLOCK {|| nValUnitario } 	PICTURE "@E 999,999.99"
	   DEFINE CELL NAME "NVALTOT"		OF oRG2 TITLE STR0028 BLOCK {|| nValTot	}		PICTURE "@E 999,999.99"
	   DEFINE CELL NAME "NCUSTFUN"		OF oRG2 TITLE STR0029 BLOCK {|| nValor6	} 		PICTURE "@E 999,999.99"
	   DEFINE CELL NAME "NCUSTEMP"		OF oRG2 TITLE STR0030 BLOCK {|| nValor7	} 		PICTURE "@E 999,999.99"
		
	   // Coluna de Total de Beneficiario SEM titulo. Apenas para gerar os totais.
	   DEFINE CELL NAME "BENEFIC"		OF oRG2 TITLE OemToAnsi( "" )	  PICTURE "9999" 				//"TOTAL DE BENEFICIARIO"
		
	   TRPosition():New(oRG2,"SRN",1,{|| RhFilial("SRN",SR0->R0_FILIAL)+SR0->R0_MEIO},.T.)

	   oRG2:Cell("BARRA"   ):Disable()
	   oRG2:Cell("NVALEDIF"):Disable()
	   oRG2:Cell("RA_FILIAL"):Disable()
	   oRG2:Cell("RA_MAT"):Disable()
	
	   oRG2:SetHeaderBreak(.T.)
	   
	ElseIf nTpVale == 1 // Refeicao
	   cDesc1	:= OemToAnsi(STR0017) + " " + OemToAnsi(STR0002) + " " + OemToAnsi(STR0003)
	   //Mapa Vale Refeicao sera impresso de acordo com os parametros solicitados pelo usuario.
	   cTitulo	:= OemToAnsi(STR0009)//Vale Refeicao			
	
	   //Criacao dos componentes de impressao                                     
	   DEFINE REPORT oReport NAME "GPER009" TITLE cTitulo PARAMETER cPerg ACTION {|oReport| GR009Imp(oReport,(cAliasQry)->RA_FILIAL)} DESCRIPTION OemToAnsi(STR0012) + OemToAnsi(STR0038)                                   	
	   //"Esta rotina gera um mapa que resume as informacoes de Vale refeição por "
	   // "funcionarios permitindo que o desconto seja gerado para a folha de pagamento."
	
	   DEFINE SECTION oSRA OF oReport TITLE OemToAnsi(STR0039) ORDERS aOrd TABLES "SRA" TOTAL IN COLUMN TOTAL TEXT STR0012
	
	   DEFINE CELL NAME "RA_FILIAL"  	OF oSRA ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_FILIAL}
	   DEFINE CELL NAME "RA_TNOTRAB" 	OF oSRA ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_TNOTRAB}
	   DEFINE CELL NAME "RA_CC"	  		OF oSRA ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_CC}
	   DEFINE CELL NAME "RA_MAT"	  	OF oSRA ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_MAT}
	   DEFINE CELL NAME "RA_NOME"	  	OF oSRA ALIAS "SRA"	SIZE 30	BLOCK {|| (cAliasQry)->RA_NOME}
	   oSRA:SetHeaderBreak(.T.)
	
	   DEFINE SECTION oRG2 OF oReport  TITLE OemToAnsi(STR0036) ORDERS aOrd TABLES cAliasRel TOTAL IN COLUMN TOTAL TEXT STR0012 
	
	   DEFINE CELL NAME "RA_FILIAL"  	OF oRG2 ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_FILIAL}
	   DEFINE CELL NAME "RA_MAT"	  	OF oRG2 ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_MAT}
	
	   DEFINE CELL NAME "VALE"	       OF oRG2 TITLE STR0035 BLOCK {|| cCodVale	+ " - " + cDesVale	} ALIGN LEFT 
	   DEFINE CELL NAME "NQTDEVALE"		OF oRG2 TITLE STR0026 BLOCK {|| nQtdeVale   } 
	   DEFINE CELL NAME "NVALUNITARIO"	OF oRG2 TITLE STR0027 BLOCK {|| nValUnitario } 	PICTURE "@E 999,999.99"
	   DEFINE CELL NAME "NVALTOT"		OF oRG2 TITLE STR0028 BLOCK {|| nValTot	}		PICTURE "@E 999,999.99"
	   DEFINE CELL NAME "NCUSTFUN"		OF oRG2 TITLE STR0029 BLOCK {|| nValor6	} 		PICTURE "@E 999,999.99"
	   DEFINE CELL NAME "NCUSTEMP"		OF oRG2 TITLE STR0030 BLOCK {|| nValor7	} 		PICTURE "@E 999,999.99"
	   
	   oRG2:Cell("RA_FILIAL"):Disable()
	   oRG2:Cell("RA_MAT"):Disable()
	   
	   oRG2:SetHeaderBreak(.T.)
	
	Else // Vale alimentacao
	   cDesc1	:= OemToAnsi(STR0018) + " " + OemToAnsi(STR0002) + " " + OemToAnsi(STR0003)
	   //Mapa Vale Alimentacao sera impresso de acordo com os parametros solicitados pelo usuário.
	   cTitulo	:= OemToAnsi(STR0010) //Vale Alimentacao			
	
	   //Criacao dos componentes de impressao                                     
	   DEFINE REPORT oReport NAME "GPER009" TITLE cTitulo PARAMETER cPerg ACTION {|oReport| GR009Imp(oReport,(cAliasQry)->RA_FILIAL)} DESCRIPTION OemToAnsi(STR0016) + OemToAnsi(STR0038)	
	   // "Esta rotina gera um mapa que resume as informacoes de Vale alimentação por "
	   // "funcionarios permitindo que o desconto seja gerado para a folha de pagamento."
	
	   DEFINE SECTION oSRA OF oReport TITLE OemToAnsi(STR0039) ORDERS aOrd TABLES "SRA" TOTAL IN COLUMN TOTAL TEXT STR0016
	
	   DEFINE CELL NAME "RA_FILIAL"  	OF oSRA ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_FILIAL}
	   DEFINE CELL NAME "RA_TNOTRAB" 	OF oSRA ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_TNOTRAB}
	   DEFINE CELL NAME "RA_CC"	   		OF oSRA ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_CC}
	   DEFINE CELL NAME "RA_MAT"	  	OF oSRA ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_MAT}
	   DEFINE CELL NAME "RA_NOME"	  	OF oSRA ALIAS "SRA"		SIZE 30	BLOCK {|| (cAliasQry)->RA_NOME}
	   oSRA:SetHeaderBreak(.T.)
	
	   DEFINE SECTION oRG2 OF oReport  TITLE OemToAnsi(STR0036) ORDERS aOrd TABLES cAliasRel TOTAL IN COLUMN TOTAL TEXT STR0016 
	
	   DEFINE CELL NAME "RA_FILIAL"  	OF oRG2 ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_FILIAL}
	   DEFINE CELL NAME "RA_MAT"	  	OF oRG2 ALIAS "SRA" BLOCK {|| (cAliasQry)->RA_MAT}
	
 	   DEFINE CELL NAME "VALE"          OF oRG2 TITLE OemToAnsi(STR0035) BLOCK {|| cCodVale	+ " - " + cDesVale	} ALIGN LEFT 
	   DEFINE CELL NAME "NQTDEVALE"		OF oRG2 TITLE STR0026 BLOCK {|| nQtdeVale   } 
	   DEFINE CELL NAME "NVALUNITARIO"	OF oRG2 TITLE STR0027 BLOCK {|| nValUnitario } 	PICTURE "@E 999,999.99"
	   DEFINE CELL NAME "NVALTOT"		OF oRG2 TITLE STR0028 BLOCK {|| nValTot	}		PICTURE "@E 999,999.99"
	   DEFINE CELL NAME "NCUSTFUN"		OF oRG2 TITLE STR0029 BLOCK {|| nValor6	} 		PICTURE "@E 999,999.99"
	   DEFINE CELL NAME "NCUSTEMP"		OF oRG2 TITLE STR0030 BLOCK {|| nValor7	} 		PICTURE "@E 999,999.99"
	   
	   oRG2:Cell("RA_FILIAL"):Disable()
	   oRG2:Cell("RA_MAT"):Disable()
	
	EndIf  

Return( oReport )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³GR009Imp  ºAutor  ³Microsiga           º Data ³ 24/01/2013  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Impressão Mapa de Benefícios                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPER009                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GR009Imp(oReport,cImpFil)
Local oSection1 	:= oReport:Section(1)
Local oSection2 	:= oReport:Section(2)
Local dAux	   		:= dDataBase
Local cFiltro  		:= "" 
Local cArqNtx 		:= ""
Local cSitQuery		:= ""
Local cCatQuery		:= ""  
Local cIndCond 		:= ""
Local cTitFil  		:= ""
Local cTitCc   		:= ""
Local cTitTurno		:= ""
Local cTitFunc 		:= ""    
Local cFilRCH		:= xFilial("RCH")    
Local cProcFiltr	:= ""          
Local oBreak                                                                                  

//Variaveis de Acesso do Usuario
Local cAcessaSRA	:= &( " { || " + ChkRH( "GPER009" , "SRA" , "2" ) + " } " )
Local cAcessaRG2	:= ""
Local nReg			:= 0
Local lPass     	:= .T.
Local lExcel 		:= "XML" $ UPPER(oReport:cReport)
Local cPed			:= ""

Local lErroFilial := .T.

Private nOrdem	   	:= oSection1:GetOrder()
Private cProc       := mv_par01
Private cPeriodo    := mv_par02    // 	Periodo
Private cNumPag     := mv_par03    // 	Nro pagamento
Private lSalta      := .F.         //  Imprime C.C em outra Pagina
Private nMapDif     := 1           //  Vale ou Diferenca ou Ambos 
Private cSituacao   := ""          //  Situacoes
Private cCategoria  := ""          //  Categorias
Private cRoteir     := ""

Private cTipTotalG	:= "1" // 1-Analitico; 2-Sintético; 3-Ambos

If nTpVale == 0
	If lNovoCalc
		Default mv_par13	:= "1"
		cTipTotalG	:= cValToChar(mv_par13) 
	Else	
		Default mv_par12	:= "1"
		cTipTotalG	:= cValToChar(mv_par12) 
	EndIf
Else
	If lNovoCalc
		Default mv_par12	:= "1"
		cTipTotalG	:= cValToChar(mv_par12) 
	Else	
		Default mv_par11	:= "1"
		cTipTotalG	:= cValToChar(mv_par11) 
	EndIf
EndIf

If oReport:nDevice == 4 .And. oReport:nExcelPrintType == 3
	oSection2:Cell("RA_FILIAL"):Enable()
	oSection2:Cell("RA_MAT"):Enable()
EndIf

	lSalta   := If(mv_par08 == 1 , .T. , .F.)      
	
	If nTpVale == 0
	    nMapDif    	:= mv_par09		
	    cSituacao  	:= mv_par10		
	    cCategoria 	:= mv_par11		
	Else    
	    cSituacao  	:= mv_par09		
	    cCategoria 	:= mv_par10		
	EndIf
	
	oReport:SetCustomText( {|| Gp009Cabec( oReport, cImpFil ) })  
	
	cRoteir := fGetCalcRot('1')           
	If cTipRel == "0"
	    cRoteir := fGetCalcRot('8')
	ElseIf cTipRel="1"
	    cRoteir := fGetCalcRot('D')
	Else
	    cRoteir := fGetCalcRot('E')
	EndIf
	
	If cComp <> Substr(cPeriodo,5,2)+"/"+Substr(cPeriodo,1,4)
	   fPerBene(cProc, cPeriodo, cNumpag, cRoteir)
	EndIf	
		
	If lPerFech 
	    cAcessaRG2 := &( " { || " + ChkRH( "GPER009" , "RG2" , "2" ) + " } " )
	Else
	    cAcessaRG2 := &( " { || " + ChkRH( "GPER009" , "SR0" , "2" ) + " } " )
	EndIf
	oSection2:SetLeftMargen(60)
	//Totalizador de Funcionario
	oBreakFunc 	:= TRBreak():New(oSection1, oSection1:Cell("RA_MAT"),STR0004, .F.)
	
	//Altera titulo do break
	oBreakFunc:OnBreak({|x,y|,cTitFunc:=OemToAnsi(STR0019)+"  "+OemToAnsi(STR0020)+"  "+x})		//"ASSINATURA ___________________________" ### "TOTAL DO FUNCIONARIO "
	oBreakFunc:SetTotalText({||cTitFunc})
	
	DEFINE FUNCTION FROM oSection2:Cell("NQTDEVALE")		FUNCTION SUM BREAK oBreakFunc TITLE STR0026  	PICTURE "@E 99999" 			NO END SECTION NO END REPORT
	If nTpVale == 0
	    DEFINE FUNCTION FROM oSection2:Cell("NVALEDIF")		FUNCTION SUM BREAK oBreakFunc TITLE STR0034  PICTURE "9999" 			NO END REPORT	NO END SECTION	WHEN {||nMapDif ==2}	//"QT.DIF."
	EndIf
	DEFINE FUNCTION FROM oSection2:Cell("NVALUNITARIO")		FUNCTION SUM BREAK oBreakFunc TITLE STR0027  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
	DEFINE FUNCTION FROM oSection2:Cell("NVALTOT")  		FUNCTION SUM BREAK oBreakFunc TITLE STR0028  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
	DEFINE FUNCTION FROM oSection2:Cell("NCUSTFUN")			FUNCTION SUM BREAK oBreakFunc TITLE STR0029  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
	DEFINE FUNCTION FROM oSection2:Cell("NCUSTEMP")			FUNCTION SUM BREAK oBreakFunc TITLE STR0030  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
	
	If nOrdem == 5
		oBreakTrn 	:= TRBreak():New(oSection1, oSection1:Cell("RA_TNOTRAB"),STR0024, .F.) //CENTRO DE CUSTO + TURNO + NOME
		oBreakTrn:OnBreak({|x,y|,cTitTurno:=AllTrim(OemToAnsi(STR0024))+"  "+x}) //
		oBreakTrn:SetTotalText({||cTitTurno})
	    
		
		DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NQTDEVALE")	BREAK oBreakTrn TITLE OemToAnsi(STR0031) PICTURE "9999"			NO END SECTION NO END REPORT //"QUANTIDADE"
		If nTpVale == 0
			DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NVALEDIF")		BREAK oBreakTrn TITLE OemToAnsi(STR0034) PICTURE "9999"			NO END SECTION NO END REPORT WHEN {||nMapDif ==2}	//"QT.DIF."
		EndIf
		DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NVALTOT")		BREAK oBreakTrn TITLE OemToAnsi(STR0032) PICTURE "@E 999,999,999.99"	NO END SECTION NO END REPORT //"VALOR TOTAL"
		DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NCUSTFUN")		BREAK oBreakTrn TITLE OemToAnsi(STR0029) PICTURE "@E 999,999,999.99"	NO END SECTION NO END REPORT //"CUSTO FUNC."
		DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NCUSTEMP")		BREAK oBreakTrn TITLE OemToAnsi(STR0030) PICTURE "@E 999,999,999.99"	NO END SECTION NO END REPORT //"CUSTO EMPR."
	
	
	    DEFINE FUNCTION FROM oSection2:Cell("NQTDEVALE")		FUNCTION SUM BREAK oBreakTrn TITLE STR0026  	PICTURE "@E 99999" 			NO END SECTION NO END REPORT
	    If nTpVale == 0
		    DEFINE FUNCTION FROM oSection2:Cell("NVALEDIF") 	FUNCTION SUM BREAK oBreakTrn TITLE STR0034 PICTURE "9999" NO END SECTION NO END REPORT WHEN {||nMapDif ==2} 		     
	    EndIf
		DEFINE FUNCTION FROM oSection2:Cell("NVALTOT")  		FUNCTION SUM BREAK oBreakTrn TITLE STR0028  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
		DEFINE FUNCTION FROM oSection2:Cell("NCUSTFUN")			FUNCTION SUM BREAK oBreakTrn TITLE STR0029  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
		DEFINE FUNCTION FROM oSection2:Cell("NCUSTEMP")			FUNCTION SUM BREAK oBreakTrn TITLE STR0030  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
		
		oBreakTrn2 	:= TRBreak():New(oSection1, oSection1:Cell("RA_TNOTRAB"),STR0024, .F.) //CENTRO DE CUSTO + TURNO + NOME
		oBreakTrn2:SetTotalText( {|| STR0023 } )  //TOTAL DE BENEFICIOS
		If ! lExcel
			DEFINE FUNCTION FROM oSection1:Cell("RA_MAT") FUNCTION COUNT BREAK oBreakTrn2 PICTURE "@E 99999" NO END SECTION NO END REPORT
		EndIf
	Endif
	
	If nOrdem == 2 .OR. nOrdem == 4 .OR. nOrdem == 5
		oBreakCC 	:= TRBreak():New(oSection1, oSection1:Cell("RA_CC"),STR0021, .F.)
		oBreakCC:OnBreak({|x,y|,cTitCC:=OemToAnsi(STR0021)+"  "+x}) //TOTAL C. CUSTO
		oBreakCC:SetTotalText({||cTitCC})
		oBreakCc:lPageBreak := lSalta 
	
		
	    DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NQTDEVALE")      BREAK oBreakCC TITLE OemToAnsi(STR0031) PICTURE "999999"           NO END SECTION NO END REPORT //"QUANTIDADE"
	    If nTpVale == 0
			DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NVALEDIF")		BREAK oBreakCc TITLE OemToAnsi(STR0034) PICTURE "9999" 			NO END SECTION	NO END REPORT WHEN {||nMapDif ==2}	//"QT.DIF."
		EndIf
		DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NVALTOT")      BREAK oBreakCC TITLE OemToAnsi(STR0032) PICTURE "@E 999,999,999.99" NO END SECTION NO END REPORT //"VALOR TOTAL"
		DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NCUSTFUN")     BREAK oBreakCC TITLE OemToAnsi(STR0029) PICTURE "@E 999,999,999.99" NO END SECTION NO END REPORT //"CUSTO FUNC."
		DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NCUSTEMP")     BREAK oBreakCC TITLE OemToAnsi(STR0030) PICTURE "@E 999,999,999.99" NO END SECTION NO END REPORT //"CUSTO EMPR."
		
	   	DEFINE FUNCTION FROM oSection2:Cell("NQTDEVALE")		FUNCTION SUM BREAK oBreakCC TITLE STR0026  	PICTURE "@E 99999" 			NO END SECTION NO END REPORT
	    If nTpVale == 0
	    	DEFINE FUNCTION FROM oSection2:Cell("NVALEDIF") 	FUNCTION SUM BREAK oBreakCC TITLE STR0034 PICTURE "99999" NO END SECTION NO END REPORT WHEN {||nMapDif ==2} 		     
	    EndIf
		DEFINE FUNCTION FROM oSection2:Cell("NVALTOT")  		FUNCTION SUM BREAK oBreakCC TITLE STR0028  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
		DEFINE FUNCTION FROM oSection2:Cell("NCUSTFUN")			FUNCTION SUM BREAK oBreakCC TITLE STR0029  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
		DEFINE FUNCTION FROM oSection2:Cell("NCUSTEMP")			FUNCTION SUM BREAK oBreakCC TITLE STR0030  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
		
		oBreakCC2 	:= TRBreak():New(oSection1, oSection1:Cell("RA_CC"),STR0021, .F.)
		oBreakCC2:SetTotalText( {|| STR0023 } )
		If ! lExcel
			DEFINE FUNCTION FROM oSection1:Cell("RA_MAT") FUNCTION COUNT BREAK oBreakCC2 PICTURE "@E 99999" NO END SECTION NO END REPORT
		EndIf
	EndIf
	
	//Totalizador de Filial
	oBreakFil2	:= TRBreak():New(oSection1, oSection1:Cell("RA_FILIAL"),STR0022, .F.)
	oBreakFil2:OnBreak({|x,y|cTitFil:=OemToAnsi(STR0022)+" "+x})
	oBreakFil2:SetTotalText({||cTitFil})
	      
	
	DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NQTDEVALE")    BREAK oBreakFil2 TITLE OemToAnsi(STR0031) PICTURE "999999"           NO END SECTION NO END REPORT //"QUANTIDADE"
	If nTpVale == 0
		DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NVALEDIF")	  BREAK oBreakFil2 TITLE OemToAnsi(STR0034) PICTURE "9999" 			 NO END SECTION	NO END REPORT WHEN {||nMapDif ==2}	//"QT.DIF."
	EndIf
	DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NVALTOT")      BREAK oBreakFil2 TITLE OemToAnsi(STR0032) PICTURE "@E 999,999,999.99" NO END SECTION NO END REPORT //"VALOR TOTAL"
	DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NCUSTFUN")     BREAK oBreakFil2 TITLE OemToAnsi(STR0029) PICTURE "@E 999,999,999.99" NO END SECTION NO END REPORT //"CUSTO FUNC."
	DEFINE COLLECTION OF oSection2 FUNCTION SUM     FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NCUSTEMP")     BREAK oBreakFil2 TITLE OemToAnsi(STR0030) PICTURE "@E 999,999,999.99" NO END SECTION NO END REPORT //"CUSTO EMPR."

	
	DEFINE FUNCTION FROM oSection2:Cell("NQTDEVALE")		FUNCTION SUM BREAK oBreakFil2 TITLE STR0026  	PICTURE "999999" 			NO END SECTION NO END REPORT
	
	If nTpVale == 0
		DEFINE FUNCTION FROM oSection2:Cell("NVALEDIF") 	FUNCTION SUM BREAK oBreakFil2 TITLE STR0034   PICTURE "9999"  NO END SECTION NO END REPORT WHEN {||nMapDif ==2} 	     
	EndIf 
	
	DEFINE FUNCTION FROM oSection2:Cell("NVALTOT")  		FUNCTION SUM BREAK oBreakFil2 TITLE STR0028  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
	DEFINE FUNCTION FROM oSection2:Cell("NCUSTFUN")			FUNCTION SUM BREAK oBreakFil2 TITLE STR0029  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
	DEFINE FUNCTION FROM oSection2:Cell("NCUSTEMP")			FUNCTION SUM BREAK oBreakFil2 TITLE STR0030  	PICTURE "@E 999,999,999.99" 		NO END SECTION NO END REPORT
	
	If ! lExcel
		DEFINE FUNCTION FROM oSection1:Cell("RA_MAT") FUNCTION COUNT BREAK oBreakFil2 PICTURE "@E 99999" NO END SECTION NO END REPORT
	EndIf
	
	If cTipTotalG $ "1|3" // Total Geral Analitico ou Ambos
		// Total de Beneficiario do TOTAL LINHAS com titulo alterado para manter alinhamento
		DEFINE COLLECTION OF oSection2 FUNCTION SUM FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NQTDEVALE")		TITLE OemToAnsi(STR0031) PICTURE "999999"			NO END SECTION						//"QUANTIDADE"
		If nTpVale == 0
			DEFINE COLLECTION OF oSection2 FUNCTION SUM FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NVALEDIF")	TITLE OemToAnsi(STR0033) PICTURE "999999" 			NO END SECTION WHEN {||nMapDif ==2}	//"QT.DIF."
		EndIf
		DEFINE COLLECTION OF oSection2 FUNCTION SUM FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NVALUNITARIO")	TITLE OemToAnsi(STR0027) PICTURE "@R 999,999.99"	NO END SECTION						//"TOTAL UNIT."
		DEFINE COLLECTION OF oSection2 FUNCTION SUM FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NVALTOT")		TITLE OemToAnsi(STR0028) PICTURE "@R 999,999.99"	NO END SECTION						//"VALOT TOTAL"
		DEFINE COLLECTION OF oSection2 FUNCTION SUM FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NCUSTFUN")		TITLE OemToAnsi(STR0029) PICTURE "@R 999,999.99"	NO END SECTION						//"CUSTO FUNC."
		DEFINE COLLECTION OF oSection2 FUNCTION SUM FORMULA oSection2:Cell("VALE") CONTENT oSection2:Cell("NCUSTEMP")		TITLE OemToAnsi(STR0030) PICTURE "@R 999,999.99"	NO END SECTION						//"CUSTO EMPR."
	EndIf
	oSection2:SetHeaderBreak(.T.)
	
	cAliasQry := GetNextAlias()
	
	//Modifica variaveis para a Query 
	cSitQuery := ""
	For nReg:=1 to Len(cSituacao)
		cSitQuery += "'"+Subs(cSituacao,nReg,1)+"'"
		If ( nReg+1 ) <= Len(cSituacao)
			cSitQuery += "," 
		EndIf
	Next nReg        
	cSitQuery := "%" + cSitQuery + "%"
		
	cCatQuery := ""
	For nReg:=1 to Len(cCategoria)
		cCatQuery += "'"+Subs(cCategoria,nReg,1)+"'"
		If ( nReg+1 ) <= Len(cCategoria)
			cCatQuery += "," 
		EndIf
	Next nReg  
	      
	cCatQuery := "%" + cCatQuery + "%"
	
	cProcFiltr := "(SRA.RA_PROCES = '"+ cProc +"')"
	   
	//Transforma parametros do tipo Range em expressao ADVPL para ser utilizada no filtro
   	MakeSqlExpr(cPerg)
				
	oSection1:BeginQuery()
		
	If nOrdem == 1
		cOrdem := "%SRA.RA_FILIAL,SRA.RA_MAT%"
	ElseIf nOrdem == 2
		cOrdem := "%SRA.RA_FILIAL,SRA.RA_CC,SRA.RA_MAT%"
	ElseIf nOrdem == 3
		cOrdem := "%SRA.RA_FILIAL,SRA.RA_NOME,SRA.RA_MAT%"
	ElseIf nOrdem == 4
		cOrdem := "%SRA.RA_FILIAL,SRA.RA_CC,SRA.RA_NOME%"
	ElseIf nOrdem == 5
		cOrdem := "%SRA.RA_FILIAL,SRA.RA_CC,SRA.RA_TNOTRAB,SRA.RA_NOME%"
	EndIf
	
	BEGIN REPORT QUERY oSection1	
		BeginSql alias cAliasQry
			SELECT SRA.RA_FILIAL, SRA.RA_MAT, SRA.RA_TNOTRAB, SRA.RA_CC, SRA.RA_NOME, SRA.RA_SITFOLH, SRA.RA_CATFUNC, SRA.R_E_C_N_O_
			FROM %table:SRA% SRA
			WHERE SRA.RA_SITFOLH	IN	(%exp:Upper(cSitQuery)%)	AND
				  SRA.RA_CATFUNC	IN	(%exp:Upper(cCatQuery)%)	AND
				  SRA.%notDel%
			ORDER BY %exp:cOrdem%
		EndSql    
	END REPORT QUERY oSection1 PARAM mv_par04, mv_par05, mv_par06, mv_par07, cProcFiltr
	
	oSection1:EndQuery()
	
	//Utiliza a query do Pai  
	oSection1:SetParentQuery(.T.)
		
	//Define o total da regua da tela de processamento do relatorio
	oReport:SetMeter( 200 )  
	
	If nTpVale == 0
	    cTitulo := STR0011+If(nMapDif==1,STR0013,If(nMapDif==2,STR0014,STR0015))  + STR0043 + cComp	//" MAPA VALE TRANSPORTE "###"( NORMAL )"###"( DIFERENCA )"###"( NORMAL + DIFERENCA )"
	ElseIf nTpVale == 1
	    cTitulo := STR0009 + STR0043 + cComp	//" MAPA VALE REFEIÇÃO "
	Else
	    cTitulo := STR0010  + STR0043 + cComp	//" MAPA VALE ALIMENTAÇÃO "
	EndIf   
	
	oReport:SetTitle(cTitulo)
	
	oSection1:Init()
	oSection2:Init()

	DbSelectArea("SRA")
	
	DbSelectArea(cAliasQry)
	DbGoTop(cAliasQry)

	If (cAliasQry)->( EOF() )
		PreparaLog(STR0070) //"Não foi possível encontar nenhum funcionário com as informações de SITUAÇÃO E CATEGORIA informados no parâmetro do relatório"
	EndIf
	
	If lNovoCalc
		MakeadvplExpr(cPerg)
		If nTpVale == 0
		    cPed  	:= mv_par12	
		Else    
		    cPed  	:= mv_par11		
		EndIf
		
		If cAliasRel=="SR0"
			cPed := Replace(cPed,"RG2","R0")
		EndIf
	EndIf

	lExibeLog := .T.
	
	While !( (cAliasQry)->( EOF() ) )
		SRA->( DbGoTo((cAliasQry)->R_E_C_N_O_) )

		//Movimenta Regua Processamento                                
		oReport:IncMeter(1)
		lPass := .t.
		                                   
		//Cancela impressao                                            
		If oReport:Cancel()
			Exit
		EndIf 
		
		//Verifica se func. tem  V.T.                                  
	   If cAliasRel=="RG2" 
			DbSelectArea("RG2")
			RG2->(dbSetOrder(RetOrder("RG2", "RG2_FILIAL+RG2_PERIOD+RG2_NROPGT+RG2_ROTEIR+RG2_MAT+RG2_TPVALE+RG2_CODIGO")))
			If !(RG2->(dbSeek((cAliasQry)->RA_FILIAL + cPeriodo + cNumPag + cRoteir + (cAliasQry)->RA_MAT + cTipRel))) 	    
				dbSelectArea(cAliasQry)
				dbSkip()
		     	Loop
			EndIf 
		Else
			DbSelectArea("SR0")
			SR0->(dbSetOrder(RetOrder("SR0", "SR0_FILIAL+SR0_MAT+SR0_TPVALE+SR0_CODIGO")))
			If !(SR0->(dbSeek((cAliasQry)->RA_FILIAL + (cAliasQry)->RA_MAT))) 	    
				dbSelectArea(cAliasQry)
				dbSkip()
		     	Loop
			EndIf 	
		EndIf
		
		//Consiste Filiais e Acessos
		If ! ( (cAliasQry)->RA_FILIAL $ fValidFil() ) .or. !Eval( cAcessaSRA ) 
			If lErroFilial
				lErroFilial := .F.
				PreparaLog( STR0071 + " " + (cAliasQry)->RA_FILIAL + " " + STR0072) //"Verifique a Filial: pois a mesma não está configurada para impressão." "				
			EndIf

			dbSelectArea(cAliasQry)
			dbSkip()
	
	     	Loop
		EndIf
	
		If !((cAliasQry)->RA_SITFOLH $ cSituacao) .Or. !((cAliasQry)->RA_CATFUNC $ cCategoria)
			dbSelectArea(cAliasQry)
			dbSkip()
		 	Loop
		EndIf
	   
	   If cAliasRel=="RG2"
			 DbSelectArea("RG2")
			 While !Eof() .And. ( (cAliasQry)->RA_FILIAL + (cAliasQry)->RA_MAT + cPeriodo + cNumPag = RG2->RG2_FILIAL + RG2->RG2_MAT + RG2_PERIOD + RG2_NROPGT)
		 	    
		 	    If RG2->RG2_TPVALE <> cTipRel 
				     dbSelectArea("RG2")
				   	  RG2->( dbSkip())
		    	   	  Loop
				 EndIf                                                           
		                                            
			    If nTpVale == 0 
				    If ( (nMapDif == 1 .And. RG2->RG2_VALCAL <= 0 ) .or. (nMapDif==2 .And. RG2->RG2_VALDIF <= 0) )
		     			dbSelectArea("RG2")
		        	   	RG2->( dbSkip()) 
						Loop
					EndIf
			    EndIf	
			    
				 //Consiste Filiais e Acessos
		 		 If !( RG2->RG2_FILIAL $ fValidFil() ) .or. !Eval( cAcessaRG2 )
				 	If lErroFilial
						lErroFilial := .F.
						PreparaLog(STR0071 + " " + RG2->RG2_FILIAL + " " + STR0072) //"Verifique a Filial: pois a mesma não está configurada para impressão." "			
		    	   	EndIf
					
					dbSelectArea("RG2")   
					RG2->( dbSkip()) 
				   	Loop
				 EndIf                                         
				
			    If !Empty(cPed) .And. !RG2->(&cPed)
			    	PreparaLog(STR0055 + " " + STR0073 + " " + (cAliasQry)->RA_FILIAL + (cAliasQry)->RA_MAT ) //Verifique o número do Pedido informado no parâmetro do relatório!
		    	   	
					dbSelectArea("RG2")
				   	RG2->( dbSkip()) 
					Loop
			    EndIf
			    
			    If nTpVale == 0
					  SRN->( dbSelectArea( "SRN" ) )
					  If SRN-> ( dbSeek( xFilial("SRN") + RG2->RG2_CODIGO ) )
						   cCodVale := SRN->RN_COD
						   cDesVale := SRN->RN_DESC
						   nValUnAn := SRN->RN_VUNIANT
						   nValUnAt := SRN->RN_VUNIATU
					  EndIf  
					                                              
					  If RG2->RG2_DIAPRO > 0 
						   If nMapDif == 1 
						    	 nQtdeVale := RG2->RG2_DIAPRO * RG2->RG2_VTDUTE
						   ElseIf nMapDif == 3
						   	    nQtdeVale := (RG2->RG2_DIAPRO * RG2->RG2_VTDUTE) + RG2->RG2_DIADIF
						   EndIf
					  EndIf	 
					  		
					  If ( nQtdeVale <> RG2->RG2_DIACAL )
						   nQtdeVale := RG2->RG2_DIACAL
					  EndIf	
					  						
		    		  nValedif  := RG2->RG2_DIADIF*RG2->RG2_VTDUTE	
		    		  nValTot   := If(nMapDif == 1, RG2->RG2_VALCAL , If(nMapDif == 2, RG2->RG2_VALDIF ,RG2->RG2_VALCAL + RG2->RG2_VALDIF))			
		   		     
		   		     If nMapDif == 2
						   nValUnitario := ( nValUnAt - ( nValUnAt - nValUnAn ) )
						   If nValUnitario = 0
							    nValUnitario := nValUnAt
						   EndIf
					  Else
						   nValUnitario := nValUnAt
					  EndIf		
		        Else	
					  RFO->( dbSelectArea( "RFO" ) )
					  If RFO-> ( dbSeek( xFilial("RFO") + Alltrim(Str(nTpVale)) + RG2->RG2_CODIGO ) )
						   cDesVale := RFO->RFO_DESCR
					   EndIf                                              
					   cCodVale     := RG2->RG2_CODIGO
		    		   nValTot      := RG2->RG2_VALCAL			
					   nValUnitario := RG2->RG2_CUSUNI
					   nQtdeVale    := RG2->RG2_DIACAL
				  EndIf		

			      nQtValeAcu += nQtdeVale
			      nVlUnitAcu += nValUnitario
			      nVlTotAcu += nValTot

		   		  nValor6	:= RG2->RG2_CUSFUN+RG2_CFUNDF
		    	  nValor7	:= RG2->RG2_CUSEMP+RG2_CEMPDF
		    	  nCusFunAcu += nValor6
		    	  nCusEmpAcu += nValor7
		
				  If nQtdeVale <=0
					   PreparaLog(STR0061 + " " + STR0073 + " " + (cAliasQry)->RA_FILIAL + (cAliasQry)->RA_MAT ) //"Tabela RG2 - Verifique a quantidade do benefício!"
			    	   
					   dbSelectArea("RG2")
					   RG2->( dbSkip() ) 
					   Loop
				  EndIf
			
				  If lPass
				  	   lExibeLog := .F.
					   //Incializa impressao   
					   oSection1:PrintLine()
					   lPass := .f.
		   		  EndIf
		                
				  oSection2:PrintLine()
		
				  dbSelectArea("RG2")
				  RG2->( dbSkip() ) 
			 Enddo
		Else 
		    DbSelectArea("SR0")
		    While !Eof() .And. ( (cAliasQry)->RA_FILIAL + (cAliasQry)->RA_MAT = SR0->R0_FILIAL + SR0->R0_MAT)
	 		    If  SR0->R0_TPVALE <> cTipRel 
				    dbSelectArea("SR0")
			   	    SR0->( dbSkip())
					Loop
			    EndIF                                                           
	                                            
		       If nTpVale == 0 
			        If ( (nMapDif == 1 .And. SR0->R0_VALCAL <= 0 ) .or. (nMapDif==2 .And. SR0->R0_VALDIF <= 0) )
	     			      dbSelectArea("SR0")
	     		   	      SR0->( dbSkip()) 
						  Loop
				     EndIf
		       EndIf	
			    //Consiste Filiais e Acessos
	 		    If !( SR0->R0_FILIAL $ fValidFil() ) .or. !Eval( cAcessaRG2 )
				    PreparaLog( STR0064 + " " + SR0->R0_FILIAL + " " + STR0072) //"Verifique a Filial: pois a mesma não está configurada para impressão." "			
	    	   	     
					 dbSelectArea("SR0")
			   	     SR0->( dbSkip()) 
					Loop
			    
				EndIF                                         
			  
			   If  lNovoCalc .AND. ( SR0->R0_PERIOD <> cPeriodo .Or. SR0->R0_NROPGT <> cNumPag )
			        PreparaLog(STR0065) //"Tabela SR0 - Verifique o período do processo!" 
	    	   	     
					dbSelectArea("SR0")
			   	    SR0->( dbSkip())
					Loop
			    EndIF   
			
			
			    If !Empty(cPed) .And. !SR0->(&cPed)
			    	PreparaLog(STR0066 + " " + STR0073 + " "+ (cAliasQry)->RA_FILIAL + (cAliasQry)->RA_MAT ) //Verifique o número do Pedido informado no parâmetro do relatório
		    	   	dbSelectArea("SR0")
				   	SR0->( dbSkip()) 
					Loop
			    EndIf
			
		       If nTpVale == 0
				     SRN->( dbSelectArea( "SRN" ) )
				    
				     If SRN-> ( dbSeek( xFilial("SRN",(cAliasQry)->RA_FILIAL) + SR0->R0_CODIGO ) )
					      cCodVale := SRN->RN_COD
					      cDesVale := SRN->RN_DESC
					      nValUnAn := SRN->RN_VUNIANT
					      nValUnAt := SRN->RN_VUNIATU
				     EndIf 
				                                                  
				     If SR0->R0_DIASPRO > 0 
					      If nMapDif == 1 
						       nQtdeVale := SR0->R0_DIASPRO * SR0->R0_DUTILM 
					      ElseIf nMapDif == 3
						       nQtdeVale := (SR0->R0_DIASPRO * SR0->R0_DUTILM) + SR0->R0_QDIADIF
					      Endif
				     EndIf			
				     
				     If ( nQtdeVale <> SR0->R0_QDIACAL )
					      nQtdeVale := SR0->R0_QDIACAL
				     EndIf							
	    		     
	    		     nValedif  := SR0->R0_QDIADIF*SR0->R0_DUTILM	
	    		     nValTot   := If(nMapDif == 1, SR0->R0_VALCAL , If(nMapDif == 2, SR0->R0_VALDIF ,SR0->R0_VALCAL + SR0->R0_VALDIF))			
	   		        
	   		        If nMapDif == 2
					      nValUnitario := ( nValUnAt - ( nValUnAt - nValUnAn ) )
					      If nValUnitario = 0
						       nValUnitario := nValUnAt
					      EndIf
				     Else
					      nValUnitario := nValUnAt
				     EndIf		
				     
	           Else	
				     RFO->( dbSelectArea( "RFO" ) )
				     If RFO-> ( dbSeek( xFilial("RFO") + Alltrim(Str(nTpVale)) + SR0->R0_CODIGO ) )
					      cDesVale := RFO->RFO_DESCR
				     EndIf                                              
				     cCodVale     := SR0->R0_CODIGO
	    		     nValTot      := SR0->R0_VALCAL			
				     nValUnitario  := SR0->R0_VLRVALE
				     nQtdeVale    := SR0->R0_QDIACAL
			   EndIf		
			    
			    nQtValeAcu += nQtdeVale
			    nVlUnitAcu += nValUnitario
			    nVlTotAcu += nValTot
			    
	   		    nValor6	:= SR0->R0_VLRFUNC+SR0->R0_CFUNDF  
	    	    nValor7	:= SR0->R0_VLREMP+SR0->R0_CEMPDF 
	    	    nCusFunAcu += nValor6
		    	nCusEmpAcu += nValor7
	
			    If nQtdeVale <=0
				     PreparaLog(STR0067 + " " + STR0073 + " " + SR0->R0_FILIAL + SR0->R0_MAT) //"Tabela SR0 - Verifique a quantidade do benefício! Matricula: "
		    	     
					 dbSelectArea("SR0")
				     SR0->( dbSkip() ) 
					 Loop
			    EndIf
		
			    If lPass
					lExibeLog := .F.
				     //Incializa impressao   
				     oSection1:PrintLine()
				     lPass := .f.
	   		    EndIf
	                
			    oSection2:PrintLine()
	
			    dbSelectArea("SR0")
		 	    SR0->( dbSkip() ) 
		    Enddo
	   EndIf 
	   dbSelectArea(cAliasQry)
		dbSkip()
		lPass := .t.
	Enddo

	PrintLog()
	
	//Termino do relatorio                                         
	oSection1:Finish()
	oSection2:Finish()
	
	If cTipTotalG $ "2|3" // Total Geral Sintético ou Ambos
		fTotSintet(oReport)
	EndIf

Return( Nil ) 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ fPerBene º Autor ³ Equipe RH          º Data ³ 27/08/2013  º±±
±±ÃÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Verifica periodo do beneficio.                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPER009                                                    º±±
±±ÀÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fPerBene(cBeneProc, cBenePer, cBeneNmpg, cBeneRot)
Local cFilRCH	   := xFilial("RCH")

	DbSelectArea("RCH")
	RCH->( dbsetOrder( Retorder( "RCH" , "RCH_FILIAL+RCH_PROCES+RCH_PER+RCH_NUMPAG+RCH_ROTEIR" ) ) )
	RCH->( dbSeek( cFilRCH + cBeneProc + cBenePer + cBeneNmPg + cBeneRot, .F. ) )
	If RCH->( !Eof() )
		If !Empty(RCH->RCH_DTFECH) .And. RCH->RCH_PERSEL=="2" 
		    cAliasRel := "RG2"
		    lPerFech  := .T.
		Else //periodo atual
		    cAliasRel   := "SR0"
		    lPerFech  := .F.
		EndIf
		cComp := RCH->RCH_MES+"/"+RCH->RCH_ANO
	EndIf 

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Funcao	 ³ Gpr009Per  ³ Autor ³ Equipe RH Inovacao    ³ Data ³22/08/13³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Valida os campos periodo e numero de pagamento da pergunte.³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nTipo - 1=Periodo e 2=Numero Pagamento  					  ³±±
±±³    		 ³                   cPergPro - processo                      ³±±
±±³    		 ³                   cPergPer - Periodo                       ³±±
±±³    		 ³                   cPergPag - Numero de Pagamento           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Pergunte GPER009  		 	                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function Gpr009Per( nTipo, cPergProc, cPergPer, cPergPag)	// 1 - Campo RCH_PER e 2 - RCH_NUMPAG
Local cOldAlias := Alias()
Local cFilRCH	   := xFilial("RCH")
Local cMsg      := ""
Local lRet 		:= .T.
Local cPergRot   := ""
Local lAchou     := .F. 

	If cTipRel="0"
	    cPergRot = "VTR"
	ElseIf cTipRel="1"
	    cPergRot = "VRF"
	Else
	    cPergRot = "VAL" 
	EndIf
	
	Begin Sequence
	
		If ( nTipo == 1 )
			If !( lRet := NaoVazio() )
				Break
			EndIf
		EndIf
	
		DbSelectArea("RCH")
		If ( nTipo == 1 )
			RCH->( dbsetOrder( Retorder( "RCH" , "RCH_FILIAL+RCH_PROCES+RCH_ROTEIR+RCH_PER+RCH_NUMPAG" ) ) )
			RCH->( dbSeek( cFilRCH + cPergProc + cPergRot + cPergPer + SPACE(2) , .T. ) )
			While RCH->(!Eof())  	
				If RCH_FILIAL+RCH_PROCES+RCH_PER+RCH_ROTEIR	== cFilRCH+cPergProc+cPergPer+cPergRot	
					lAchou := .T.
					Exit
				EndIf
				RCH->( dbSkip() )
				
			EndDo
			
			If ! (lAchou)
				PreparaLog(STR0068) //"Tabela RCH - Verifique as informações de Processo/Período/Roteiro!"
			EndIf

			If Empty(&cPergPag)
				&cPergPag := RCH->RCH_NUMPAG
			Endif
		Else
			RCH->( dbsetOrder( Retorder( "RCH" , "RCH_FILIAL+RCH_PROCES+RCH_PER+RCH_NUMPAG+RCH_ROTEIR" ) ) )
			RCH->( dbSeek( cFilRCH + cPergProc + cPergPer + cPergPag + cPergRot, .F. ) )
		EndIf
		If RCH->( Eof() )
			lRet := .F.
			If nTipo == 1
				cMsg := STR0041	// "Periodo nao Cadastrado!"
				MsgInfo( cMsg, STR0040)
			Else
				cMsg := STR0042	// "No. Pagamento nao Cadastrado para este Periodo!"
				MsgInfo( cMsg, STR0040)	
			EndIf
		EndIf
	
	End Sequence
	
	DbSelectArea(cOldAlias)

Return( lRet )

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o    ³Gp009Cabec  º Autor ³ TOTVS RH         º Data ³ 10/09/15    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Altera o cabecalho do relatorio                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPER009                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gp009Cabec( oReport, cImpFil )

Local aCabec	:= {}
Local cChar		:= chr(160)
Local nPos
 
nPos := aScan( aCargFil, {|x| x[1] + x[2]  == cEmpAnt + FWCodFil() } )

If nPos > 0
	aCabec := {	"__LOGOEMP__" , cChar + "         " ;
		      + "         " + cChar + RptFolha+ TRANSFORM(oReport:Page(),'999999');
	          , cChar + "         " ;
	          + "         " + cChar ;
	          , "SIGA/" + 'GPER009.prt' + "/v." + cVersao ; 
	          + "         " + cChar + UPPER(AllTrim(cTitulo)) + Space(20);
	          , RptHora + " " + time() ;
	          + "         " + cChar + RptEmiss + " " + Dtoc(dDataBase),;
	          + ("Empresa: " + AllTrim(aCargFil[nPos,06]) + " / " + "Filial: " + AllTrim(aCargFil[nPos,07])) ;
	          , cChar + "         " }
EndIf

Return( aCabec )

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o    ³fTotSintet  º Autor ³ TOTVS RH         º Data ³ 13/11/18    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Imprime o totalizador sintético semelhante ao da P11        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPER009                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fTotSintet(oReport)

	Local cTxtTotalG := ""
	
	cTxtTotalG += "QUANT.: " + TRANSFORM(nQtValeAcu,"@E 99999") + Chr(09)
	cTxtTotalG += "CUSTO UNITARIO: " + TRANSFORM(nVlUnitAcu,"@R 999,999.99") + Chr(09)
	cTxtTotalG += "CUSTO TOTAL: " + TRANSFORM(nVlTotAcu,"@R 999,999.99") + Chr(09)
	cTxtTotalG += "CUSTO FUNC.: " + TRANSFORM(nCusFunAcu,"@R 999,999.99") + Chr(09)
	cTxtTotalG += "CUSTO EMPR.: " + TRANSFORM(nCusEmpAcu,"@R 999,999.99") + Chr(09)
	
	// Total Geral Sintético
	oReport:SkipLine()
	oReport:PrintText("Totalizador Geral Sintético:")
	oReport:ThinLine()
	oReport:PrintText(cTxtTotalG)
	oReport:SkipLine()
	
Return ()

/*
{Protheus.doc} PreparaLog
	Prepara Log para ser exibido na tela, caso não seja impresso o relatório. 
		
	@author	Wesley Alves Pereira
	@version	P12
	@since	11/02/2020
*/
Static Function PreparaLog(cMotivo)

Local TAB := Space(10)

	aAdd(aPreparaErro,TAB)
	aAdd(aPreparaErro,TAB)

	aAdd(aPreparaErro,cMotivo)

Return (.T.)

/*
{Protheus.doc} PrintLog
	Exibe um relatório demonstrando os erros encontrados no processo de geração do relatório. 
		
	@author	Wesley Alves Pereira
	@version	P12
	@since	11/02/2020
*/
Static Function PrintLog()
	
	If Len (aPreparaErro) > 0
		If lExibeLog
			fMakeLog( { aPreparaErro } , { STR0069 } , "" , .T. , NIL , "GPER009.PRX" , NIL , NIL , NIL , .F. )  
		EndIf
	EndIf

Return (.T.)
