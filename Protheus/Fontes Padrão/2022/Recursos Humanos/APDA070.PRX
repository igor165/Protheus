#INCLUDE "PROTHEUS.CH"
#INCLUDE "APDA070.CH"

/*/
зддддддддддбддддддддддбдддддбдддддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁAPDA070   ЁAutorЁMarinaldo de Jesus       Ё Data Ё16/07/2003Ё
цддддддддддеддддддддддадддддадддддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁAloca┤└o ( Participantes vs Vis■es )                        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                                    Ё
цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё            ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL           Ё
цддддддддддддбддддддддддбдддддддддддбддддддддддддддддддддддддддддддддддд╢
ЁProgramador ЁData      ЁBOPS       ЁMotivo da Alteracao                Ё
цддддддддддддеддддддддддедддддддддддеддддддддддддддддддддддддддддддддддд╢
ЁCecilia Car.Ё03/07/2014ЁTPZWBQ     ЁIncluido o fonte da 11 para a 12 e Ё
Ё            Ё          Ё           Ёefetuada a limpeza.                Ё
ЁHenrique V. Ё25/02/2015ЁTRLIDV     ЁRИplica TQPKLM. CorreГЦo para que  Ё
Ё            Ё          Ё           ЁnЦo sejam duplicados registros jА  Ё
Ё            Ё          Ё           Ёcontidos na tabela RDE na hora de  Ё
Ё            Ё          Ё           Ёgravar ou alterar outros registros Ё
ЁHenrique V. Ё03/03/2015ЁTRLIDV     ЁCorreГЦo na validaГЦo na alteraГЦo Ё
Ё            Ё          Ё           Ёdo Status de AlocaГЦo do partici.  Ё
ЁRenan BorgesЁ18/03/2016ЁTUJIMU     ЁAjuste para nЦo inativar os particiЁ
Ё            Ё          Ё           Ёpantes que ainda estЦo na lista de Ё
Ё            Ё          Ё           ЁalocaГЦo da visЦo.                 Ё
ЁKaha        Ё27/04/2016ЁTVBBW9     ЁAjuste na gravaГЦo dos participant Ё
Ё            Ё          Ё           Ёgravava apenas o ultimo participantЁ
Ё            Ё          Ё           Ёtransf. de grids, agora serА atualiЁ
Ё            Ё          Ё           Ёzado\gravado todos                 Ё
юддддддддддддаддддддддддадддддддддддаддддддддддддддддддддддддддддддддддды/*/
Function APDA070( nOpc )

Local aArea			:= GetArea()
Local aAreaRd0		:= RD0->( GetArea() )
Local aAreaRd4		:= RD4->( GetArea() )
Local aAreaRde		:= RDE->( GetArea() )
Local aAreaRdk		:= RDK->( GetArea() )
Local cFunName		:= Upper( AllTrim( FunName() ) )
Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), { .T., .F., {"",""} }) //[1]Acesso; [2]Ofusca; [3]Mensagem
Local aFldRel		:= { "RD0_NOME" , "RD0_CIC" }
Local lBlqAcesso	:= aOfusca[2] .And. !Empty( FwProtectedDataUtil():UsrNoAccessFieldsInList( aFldRel ) )
Private lIsApda070	:= ( cFunName == "APDA070" )

Begin Sequence

	If lBlqAcesso
		//"Dados Protegidos-Acesso Restrito"
		Help(" ",1,aOfusca[3,1],,aOfusca[3,2],1,0)
		Break
	EndIf

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSo Executa se o Modo de Acesso dos Arquivos do Modulo APD estiЁ
	Ёverem OK													   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( ApdRelCompl() )
		Break
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define Array contendo as Rotinas a executar do programa      Ё
	Ё ----------- Elementos contidos por dimensao ------------     Ё
	Ё 1. Nome a aparecer no cabecalho                              Ё
	Ё 2. Nome da Rotina associada                                  Ё
	Ё 3. Usado pela rotina                                         Ё
	Ё 4. Tipo de Transa┤└o a ser efetuada                          Ё
	Ё    1 - Pesquisa e Posiciona em um Banco de Dados             Ё
	Ё    2 - Simplesmente Mostra os Campos                         Ё
	Ё    3 - Inclui registros no Bancos de Dados                   Ё
	Ё    4 - Altera o registro corrente                            Ё
	Ё    5 - Remove o registro corrente do Banco de Dados          Ё
	Ё    6 - Copiar                                                Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	Private aRotina := MenuDef() // ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina

	Private cCadastro   := OemToAnsi( STR0004 ) //"Aloca┤└o ( Participantes vs Vis■es )"

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Chama a Funcao de Montagem do Browse                                   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lIsApda070 )
		mBrowse( 6 , 1 , 22 , 75 , "RDK" )
	Else
		ApdA070Mnt( "RDK" , RDK->( Recno() ) , nOpc )
	EndIF

End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁColoca o Ponteiro do Mouse em Estado de Espera			   	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura os Dados de Entrada 											 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RestArea( aAreaRd0 )
RestArea( aAreaRd4 )
RestArea( aAreaRde )
RestArea( aAreaRdk )
RestArea( aArea    )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura o Cursor do Mouse                				   	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( NIL )

/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁInApda070Exec ЁAutor ЁMarinaldo de Jesus   Ё Data Ё24/08/2004Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁExecutar Funcoes Dentro de APDA070                           Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁInApda070Exec( cExecIn , aFormParam )						 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁuRet                                                 	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function InApda070Exec( cExecIn , aFormParam )

Local uRet

DEFAULT cExecIn		:= ""
DEFAULT aFormParam	:= {}

IF !Empty( cExecIn )
	cExecIn	:= BldcExecInFun( cExecIn , aFormParam )
	uRet	:= &( cExecIn )
EndIF

Return( uRet )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApdA070MntЁ Autor ЁMarinaldo de Jesus     Ё Data Ё18/06/2002Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁApdA070Mnt( cAlias , nReg , nOpc )							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcAlias = Alias do arquivo                                   Ё
Ё          ЁnReg   = Numero do registro                                 Ё
Ё          ЁnOpc   = Numero da opcao selecionada                        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function ApdA070Mnt( cAlias , nReg , nOpc )

Local aArea				:= GetArea(Alias())
Local aAreaRd0			:= RD0->( GetArea() )
Local aAreaRde			:= RDE->( GetArea() )
Local aSvKeys			:= GetKeys()
Local aAdvSize			:= {}
Local aInfoAdvSize		:= {}
Local aObjSize			:= {}
Local aObjSizeTree		:= {}
Local aObjSizeLbx		:= {}
Local aObjCoords		:= {}
Local aRdkCols			:= {}
Local aRdkRecnos		:= {}
Local aRdkKeys			:= {}
Local aRd4Cols			:= {}
Local aRd4Recnos		:= {}
Local aRd4Keys			:= {}
Local aRd4Query			:= {}
Local aRdeHeader		:= {}
Local aRdeCols			:= {}
Local aRdeRecnos		:= {}
Local aRdeKeys			:= {}
Local aRdeQuery			:= {}
Local aRd0Recnos		:= {}
Local aRd0Keys			:= {}
Local aRd0Fields		:= { "RD0_FILIAL" , "RD0_CODIGO" , "RD0_NOME" , "RD0_CIC" , "RD0_CC" }
Local aLbxChave			:= { "RD0_FILIAL" , "RD0_CODIGO" , "RD0_NOME" }
Local aLbx2				:= {}
Local aLbxTree			:= {}
Local aDbTreeInfo		:= {}
Local aFreeLocks		:= {}
Local bSet15			:= { || NIL }
Local bSet24			:= { || NIL }
Local bLboxInit			:= { || NIL }
Local bTreeChange		:= { || NIL }
Local bTreeLbxGrv		:= { || NIL }
Local bDialogIni		:= { || NIL }
Local bEvalAntFiltro	:= { || .T. }
Local bEvalPosFiltro	:= { || .T. }
Local bGetRdk			:= { || NIL }
Local cRd4KeySeek		:= ""
Local cFilRD4			:= ""
Local cFilRDE			:= ""
Local cCodRDK			:= ""
Local cFiltra			:= ""
Local lLocks			:= .F.
Local lExecLock			:= ( nOpc == 3 )
Local oDlg				:= NIL
Local oTree				:= NIL

Private aGets
Private aTela

Private aLbx1a			:= {}
Private cCargoAnt		:= ""
Private oLbx1			:= "__IsFutureObject__"
Private oLbx2			:= "__IsFutureObject__"
Private oBtnPrev		:= "__IsFutureObject__"
Private oBtnPgPrev		:= "__IsFutureObject__"
Private oBtnNext		:= "__IsFutureObject__"
Private oBtnPgNext		:= "__IsFutureObject__"

Begin Sequence

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Bloco para Lock no RDK        							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bGetRdk	:= { |lLock,lExclu|	IF( lExecLock , ( lLock := .T. , lExclu	:= .T. ) , aRdkKeys := NIL ),;
									RDK->(;
												GdBuildCols(	NIL        		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																NIL       		,;	//02 -> Numero de Campos em Uso
																NIL        		,;	//03 -> [@]Array com os Campos Virtuais
																NIL        		,;	//04 -> [@]Array com os Campos Visuais
																"RDK"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																NIL				,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																@aRdkRecnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
																"RDK"		   	,;	//08 -> Alias do Arquivo Pai
																NIL				,;	//09 -> Chave para o Posicionamento no Alias Filho
																NIL				,;	//10 -> Bloco para condicao de Loop While
																NIL				,;	//11 -> Bloco para Skip no Loop While
																NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols
																NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																NIL				,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																NIL				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																NIL				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																NIL				,;	//19 -> Carregar Coluna Fantasma
																NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
																NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
																NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																@aRdkKeys		,;	//24 -> [@]Array que contera as chaves conforme recnos
																@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																@lExclu			 ;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
														    );
									      ),;
									IF( lExecLock , ( lLock .and. lExclu ) , .T. );
	  			}
	 /*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLock do Registro do RD0									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLocks := WhileNoLock( "RDK" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetRdk ) )
		Break
	EndIF
	CursorWait()
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta chave para pesquisa nos demais arquivos				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cFilRD4		:= xFilial("RD4")
	cCodRDK		:= RDK->RDK_CODIGO
	cRd4KeySeek := ( cFilRD4 + cCodRDK )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega as Informacoes do RD4								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aRd4Query		:= Array( 05 )
	aRd4Query[01]	:= "RD4_FILIAL='"+cFilRD4+"'"
	aRd4Query[02]	:= " AND "
	aRd4Query[03]	:= "RD4_CODIGO='"+cCodRDK+"'"
	aRd4Query[04]	:= " AND "
	aRd4Query[05]	:= "D_E_L_E_T_=' ' "
/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Altera o Estado do Cursor  								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorWait()
		MsAguaRde( { || aRd4Cols := RD4->(;
												GdBuildCols(;
																NIL,;			//01 -> Array com os Campos do Cabecalho da GetDados
																NIL,;			//02 -> Numero de Campos em Uso
																NIL,;			//03 -> [@]Array com os Campos Virtuais
																NIL,;			//04 -> [@]Array com os Campos Visuais
																NIL,;			//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																NIL,;			//06 -> Opcional, Campos que nao Deverao constar no aHeader
																@aRd4Recnos,;	//07 -> [@]Array unidimensional contendo os Recnos
																"RD4",;			//08 -> Alias do Arquivo Pai
																cRd4KeySeek,;	//09 -> Chave para o Posicionamento no Alias Filho
																NIL,;			//10 -> Bloco para condicao de Loop While
																NIL,;			//11 -> Bloco para Skip no Loop While
																NIL,;			//12 -> Se Havera o Elemento de Delecao no aCols
																NIL,;			//13 -> Se Sera considerado o Inicializador Padrao
																NIL,;			//14 -> Opcional, Carregar Todos os Campos
																NIL,;			//15 -> Opcional, Nao Carregar os Campos Virtuais
																aRd4Query,;		//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																.F.,;			//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																.F.,;			//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																.T.;			//19 -> Carregar Coluna Fantasma e/ou BitMap ( Logico ou Array )
															);
											);
					},;
					NIL,;
					OemToAnsi( STR0011 ); //"Carregando Dados da Vis└o..."
				 )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Restaura o Estado do Cursor								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorArrow()

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega as Informacoes para o RDE							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cFilRDE		:= xFilial("RDE")

	RDE->( dbSetOrder( RetOrdem( "RDE" , "RDE_FILIAL+RDE_CODVIS+RDE_ITEVIS+RDE_CODPAR" ) ) )
	aRdeQuery		:= Array( 05 )
	aRdeQuery[01]	:= "RDE_FILIAL='"+cFilRDE+"'"
	aRdeQuery[02]	:= " AND "
	aRdeQuery[03]	:= "RDE_CODVIS='"+cCodRDK+"'"
	aRdeQuery[04]	:= " AND "
	aRdeQuery[05]	:= "D_E_L_E_T_=' ' "

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Altera o Estado do Cursor  								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorWait()
		MsAguarde( { || aRdeCols := RDE->(;
												GdBuildCols(;
																@aRdeHeader,;				//01 -> Array com os Campos do Cabecalho da GetDados
																NIL,;						//02 -> Numero de Campos em Uso
																NIL,;						//03 -> [@]Array com os Campos Virtuais
																NIL,;						//04 -> [@]Array com os Campos Visuais
																NIL,;						//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																NIL,;						//06 -> Opcional, Campos que nao Deverao constar no aHeader
																@aRdeRecnos,;				//07 -> [@]Array unidimensional contendo os Recnos
																"RDE",;						//08 -> Alias do Arquivo Pai
																(cFilRDE+cCodRDK),; 		//09 -> Chave para o Posicionamento no Alias Filho
																NIL,;						//10 -> Bloco para condicao de Loop While
																NIL,;						//11 -> Bloco para Skip no Loop While
																NIL,;						//12 -> Se Havera o Elemento de Delecao no aCols
																NIL,;						//13 -> Se Sera considerado o Inicializador Padrao
																NIL,;						//14 -> Opcional, Carregar Todos os Campos
																NIL,;						//15 -> Opcional, Nao Carregar os Campos Virtuais
																aRdeQuery,;					//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																.F.,;						//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																.F.,;						//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																.T.;						//19 -> Carregar Coluna Fantasma e/ou BitMap ( Logico ou Array )
															);
											);
					},;
					NIL,;
					OemToAnsi( STR0012 );	//"Carregando Participantes Alocados..."
				 )


	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Restaura o Estado do Cursor								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorArrow()

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Altera o Estado do Cursor  								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
    CursorWait()
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Carrega as Informacoes do RD0 para Lock dos Registros		   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		//"Carregando Registros dos Participantes Alocados..."
		MsAguaRde( { || Apda070Rd0Rec( @aRd0Recnos , @aRd0Keys , aRdeRecnos ) } , NIL , OemToAnsi( STR0013 ) )
	CursorArrow()
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Restaura o Estado do Cursor								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Altera o Estado do Cursor  								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorWait()
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁLock dos Registros											   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		//"Reservando Registros..."
		MsAguaRde( { || lLocks := ApdA070Locks( nOpc , aRdkRecnos , aRd4Recnos , aRdeRecnos , aRd0Recnos ) } , NIL , OemToansi( STR0014 ) )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Restaura o Estado do Cursor								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorArrow()
	IF !( lLocks )
		Break
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Altera o Estado do Cursor  								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorWait()

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Garante o Posicionamento do RDK							   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		RDK->( MsGoto( nReg ) )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta as Dimensoes dos Objetos         					   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aAdvSize := MsAdvSize()
		IF !( lIsApda070 )
			aAdvSize[3] -= 15
			aAdvSize[4] -= 50
			aAdvSize[5] -= 50
			aAdvSize[6] -= 50
			aAdvSize[7] += 50
		EndIF
		aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
		aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
		aObjSizeTree	:= { { aObjSize[1,1] , aObjSize[1,2] , aObjSize[1,3] , ( aObjSize[1,4 ]/100*30 ) } }
		aObjSizeLbx		:= {   aObjSize[1,1] , ( aObjSize[1,4 ]/100*30 ) , aObjSize[1,3] , aObjSize[1,4 ] }

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta o Bloco Execucao Antes do Filtro nos ListBox de SelecaoЁ
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bEvalAntFiltro	:= { |cCargo|	CursorWait(),;
										oLbx1:Hide() ,;					//Esconde o ListBox de Selecao
										oLbx2:Hide() ,;					//Esconde o ListBox de Selecao
										cCargo := oTree:GetCargo(),;	//Salva a Posicao no Tree
										oTree:TreeSeek( "*-" ),;		//Posiciona no Mestre para que bTreeChage possa ser executada
										Eval( bTreeChange ),;			//Atualiza as Informacoes em aLbxTree
										oTree:TreeSeek( cCargo ),;		//Reposiciona o Tree
										CursorArrow();
							}

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta o Bloco Execucao apos o Filtro nos ListBox de Selecao  Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bEvalPosFiltro	:= { || CursorWait(),;
								Apda070Lbx1Inic( aLbxTree , aRd0Fields ),;	//Apos o filtro, Elimina do ListBox de Selecao os Participantes que ja foram selecionados
								oLbx1:SetArray( aLbx1a ) ,;					//Seta o Array aLbx1a para o ListBox de Selecao apos Eliminacao dos participantes ja selecionados
								oLbx1:bLine:= { || ApdLbxbLine( oLbx1 ) },;	//Carrega bLine para que os Marks sejam selecionados
								oLbx1:Refresh(),;							//Refresh do objeto
								oLbx1:Show(),;								//Mostra o Objeto que havia sido escondido pela bEvalAntFiltro
								oLbx2:Show(),;								//Mostra o Objeto que havia sido escondido pela bEvalAntFiltro
								Apda070EnbButtons(),;						//Habilitar os Botoes de Transferencia de Tree.
								CursorArrow();
							}

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Bloco para Inicializacao do ListBox                      	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bLboxInit		:= { || CursorWait(),;
								APDListFilter( nOpc , aObjSizeLbx , @aLbx2 , aRd0Fields , oDlg , "RD0" , cFiltra , aLbxChave , NIL , NIL , NIL , NIL , bEvalAntFiltro , bEvalPosFiltro ),;
								APDA070LLbx( @aLbxTree , aRd0Fields , aRd0Recnos , aRd0Keys , aRdeCols , aRdeHeader ),;
								CursorArrow();
						   }
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta o Bloco para o Change do Tree de Visoes            	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( nOpc <> 2 )
			bTreeChange	:= { |oBj| CursorWait() , APDA070ChgTree(  cFilRDE , cCodRDK , oTree , @aLbxTree , oLbx1 , aLbx1a , oLbx2 , aLbx2 , aRd0Fields ) , Apda070EvbChange() , CursorArrow() }
		Else
			bTreeChange	:= { |oBj| CursorWait() , APDA070ChgTree(  cFilRDE , cCodRDK , oTree , @aLbxTree , oLbx1 , aLbx1a , oLbx2 , aLbx2 , aRd0Fields ) , Apda070DsbButtons() , Apda070EvbChange() , CursorArrow() }
		EndIF

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta o Bloco para a Gravacao das Informacoes            	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bTreeLbxGrv		:= { || APDA70RdePutInf( cFilRDE , cCodRDK , oTree , @aLbxTree , aLbx2 , aRdeCols , aRdeHeader , aRdeRecnos ) }

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define aDbTreeInfo                                      	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aDbTreeInfo :=	{;
		 			    	{;
		 			    		cAlias,;
		 			    		nReg,;
		 			    		cFilRDE,;
		 			    		cCodRDK,;
		 			    		"RDK_DESC";
		 			    	},;
		 			    	{;
		 			    		"RD4",;
		 			    		"RD4_ITEM",;
		 			    		1,;
		 			    		"RD4_TREE",;
		 			    		2,;
		 			    		"RD4_DESC",;
		 			    	};
		 			    }

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define o Bloco para a Inicializacao do Dialog            	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bDialogIni		:= { || oLbx1:Hide(),;
								oLbx2:Hide(),;
								Eval( bTreeChange ),;
								EnchoiceBar( oDlg , bSet15 , bSet24 ),;
						   }

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define o Bloco para a Tecla <CTRL-O> 						   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bSet15		:= { || IF( nOpc == 3 , ( CursorWait() , MsAguaRde( bTreeLbxGrv ) , CursorArrow() ) , NIL ) , oDlg:End() }
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define o Bloco para a Teclas <CTRL-X>     	   			   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bSet24		:= { || ( oDlg:End() ) }

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Restaura o Estado do Cursor								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	CursorArrow()

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta o Dialogo Principal para a Manutencao das Formulas	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0004 ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF GetWndDefault() PIXEL

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Altera o Estado do Cursor  								   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		CursorWait()
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta o ListBox para a Selecao dos Participantes             Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			MsAguaRde( bLboxInit , NIL , OemToAnsi( STR0010 ) ) // "Carregando Participantes..."
		CursorArrow()
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Restaura o Estado do Cursor								   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁInicializa os Botoes de Selecao da ListBox como Desabilitados Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		Apda070DsbButtons()

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Altera o Estado do Cursor  								   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		CursorWait()
			MsAguaRde( { || oTree := ApdBldTree(aDbTreeInfo,NIL,NIL,bTreeChange,NIL,.F.,aObjSizeTree,NIL,oDlg,.T.,{3,4,5,6,7,8}) } , OemToAnsi( STR0011 ) ) //"Carregando Dados da Vis└o..."
		CursorArrow()
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Restaura o Estado do Cursor								   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/

	ACTIVATE MSDIALOG oDlg ON INIT Eval( bDialogIni ) CENTERED

End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Coloca o Ponteiro do Mouse em Estado de Espera			   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁLibera os Locks             								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aAdd( aFreeLocks , { "RDK" , aRdkRecnos , aRdkKeys } )
aAdd( aFreeLocks , { "RD4" , aRd4Recnos , aRd4Keys } )
aAdd( aFreeLocks , { "RDE" , aRdeRecnos , aRdeKeys } )
aAdd( aFreeLocks , { "RD0" , aRd0Recnos , aRd0Keys } )
ApdFreeLocks( aFreeLocks )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura os Dados de Entrada								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RestArea( aAreaRd0 )
RestArea( aAreaRde )
RestArea( aArea )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura as Teclas de Atalho                				   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RestKeys( aSvKeys )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura o Cursor do Mouse                				   	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( NIL )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApdA070Locks ЁAutorЁMarinaldo de Jesus    Ё Data Ё21/07/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁLock dos Registros                                          Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdA070Locks( nOpc , aRdkRecnos , aRd4Recnos , aRdeRecnos , aRd0Recnos )

Local lLocks	:= .T.

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁSe nao For Visualizacao nem Inclusao	 					   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( nOpc == 3 )

	Begin Sequence

		IF !( lLocks := WhileNoLock( "RDK" , aRdkRecnos , NIL , 1 , 1 , NIL , 1 ) )
			Break
		EndIF

		IF !( lLocks := WhileNoLock( "RD4" , aRd4Recnos , NIL , 1 , 1 , NIL , 1 ) )
			Break
		EndIF

		IF !( lLocks := WhileNoLock( "RDE" , aRdeRecnos , NIL , 1 , 1 ) )
			Break
		EndIF

		IF !( lLocks := WhileNoLock( "RD0" , aRd0Recnos , NIL , 1 , 1 ) )
			Break
		EndIF

	End Sequence

EndIF

CursorWait()

Return( lLocks )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda070Rd0RecЁAutorЁMarinaldo de Jesus    Ё Data Ё25/07/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCarrega os Recnos e as Chaves do RD0 para Lock dos RegistrosЁ
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda070Rd0Rec( aRd0Recnos , aRd0Keys , aRdeRecnos )

Local cFilRD0	:= xFilial( "RD0" )
Local cKeySeek	:= ""
Local nRecno	:= 0
Local nRecnos	:= Len( aRdeRecnos )
Local nOrderRD0	:= RD0->( IndexOrd() )

RD0->( dbSetOrder( RetOrdem( "RD0" , "RD0_FILIAL+RD0_CODIGO" ) ) )
For nRecno := 1 To nRecnos
	RDE->( dbGoto( aRdeRecnos[ nRecno ] ) )
	cKeySeek := ( cFilRD0 + RDE->RDE_CODPAR )
	IF RD0->( dbSeek( cKeySeek , .F. ) )
		RD0->( aAdd( aRd0Recnos , Recno() ) )
		RD0->( aAdd( aRd0Keys , cKeySeek ) )
	EndIF
Next nRecno

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura a Ordem de Entrada					   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RD0->( dbSetOrder( nOrderRD0 ) )

Return( NIL )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁAPDA070LLbx  ЁAutorЁMarinaldo de Jesus    Ё Data Ё26/07/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCarrega os Participantes que Ja Estao Vinculados a Visoes   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function APDA070LLbx(	aLbxLastSelect	,;	//Array com os participantes ja Selecionados ( PorReferecia )
								aRd0Fields		,;	//Array com os Campos que serao utilizados para a Montagem do ListBox
								aRd0Recnos		,;	//Array com os Recnos do RD0
								aRd0Keys		,;	//Array com as Chaves do RD0 conforme aRd0Recnos
								aRdeCols		,;	//Array com as Informacoes do RDE
								aRdeHeader		 ;	//Cabecalho do aRdeCols
							)

Local bAscKeysRD0	:= { |x| x == ( cFilRD0 + cCodPar ) }
Local cFilRD0		:= xFilial( "RD0" )
Local cFilRDE		:= xFilial( "RDE" , cFilRD0 )
Local cCodPar		:= ""
Local cCodVis		:= ""
Local cCodIte		:= ""
Local dData         := cTod(Space(8))
Local cStatus       := ""
Local nLoop 		:= 0
Local nLoops		:= Len( aRdeCols )
Local nPosRD0		:= 0
Local nRDECodPar	:= GdFieldPos( "RDE_CODPAR" , aRdeHeader )
Local nRDECodVis	:= GdFieldPos( "RDE_CODVIS" , aRdeHeader )
Local nRDECodIte	:= GdFieldPos( "RDE_ITEVIS" , aRdeHeader )
Local nRDEData  	:= GdFieldPos( "RDE_DATA"   , aRdeHeader )
Local nRDEStatus	:= GdFieldPos( "RDE_STATUS" , aRdeHeader )

aLbxLastSelect		:= {}

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCarrega Informacoes dos Participantes SelecionadosЁ
юдддддддддддддддддддддддддддддддддддддддддддддддддды/*/
For nLoop := 1 To nLoops
	cCodPar := aRdeCols[ nLoop , nRDECodPar ]
    cCodVis := aRdeCols[ nLoop , nRDECodVis ]
    cCodIte := aRdeCols[ nLoop , nRDECodIte ]
    dData   := aRdeCols[ nLoop , nRDEData   ]
    cStatus := aRdeCols[ nLoop , nRDEStatus ]
    IF ( ( ( nPosRD0 := aScan( aRd0Keys , bAscKeysRD0 ) ) > 0 ) .and. cStatus == "1" )
    	RD0->( dbGoto( aRd0Recnos[ nPosRD0 ] ) )
		RD0->(;
				aAdd( aLbxLastSelect , {;
											{;
												cFilRDE ,;
												cCodVis ,;
												cCodIte	,;
												dData  	,;
												cStatus	 ;
											},;
											{;
												.F.			,;
												RD0_FILIAL	,;
												RD0_CODIGO	,;
												RD0_NOME	,;
												RD0_CIC	   	,;
												RD0_CC	   	 ;
											};
							 			};
					 );
			 )

    EndIF
Next nLoop

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁMonta Listbox Selecao de Participantes   Inicial  Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Apda070Lbx1Inic( aLbxLastSelect , aRd0Fields )

Return( NIL )

/*/
зддддддддддбдддддддддддддддбдддддбддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda070Lbx1InicЁAutorЁMarinaldo de Jesus  Ё Data Ё26/07/2003Ё
цддддддддддедддддддддддддддадддддаддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁMonta o List Box de Selecao Eliminaldo os Participantes anteЁ
Ё          Ёriormente selecionados                                      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda070Lbx1Inic( aLbxLastSelect , aRd0Fields )

Local aLbx1Aux	:= {}
Local aLbx1Cod	:= {}
Local nLoop		:= 0
Local nLoops	:= 0

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCarrega o Codigo do Participante               			Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
nLoops := Len( aLbxLastSelect )
For nLoop := 1 To nLoops
	aAdd( aLbx1Cod , aLbxLastSelect[ nLoop , 2 , 3 ] )
Next nLoop

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁElimina os Participantes Ja Selecionados do ListBox de SeleЁ
Ёcao														Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
nLoops := Len( aLbx1a )
For nLoop := 1 To nLoops
	IF ( ( aScan( aLbx1Cod , { |cCodigo| cCodigo == aLbx1a[ nLoop , 3 ] } ) ) ==  0 )
		aAdd( aLbx1Aux , aClone( aLbx1a[ nLoop ] ) )
	EndIF
Next nLoop

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCaso a ListBox de Selecao tenha ficado vazio, inclui um elemenЁ
Ёto															   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( Len( aLbx1Aux ) == 0 )
	ApdLbxMArray( "RD0" , @aLbx1Aux , aRd0Fields )
EndIF

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCarrega o ListBox para a Selcao de Participantes			   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aLbx1a := aClone( aLbx1Aux )

Return( NIL )

/*/
зддддддддддбддддддддддддддбдддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁAPDA070ChgTreeЁAutorЁ1a. Versao           Ё      Ё          Ё
Ё          Ё              Ё     ЁNatie Sugahara       Ё Data Ё14/10/2002Ё
Ё          Ё              ЁAutorЁ2a. Versao           Ё Data Ё16/07/2003Ё
Ё          Ё              Ё     ЁMarinaldo de Jesus   Ё Data Ё16/07/2003Ё
цддддддддддеддддддддддддддадддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁMonta o Array com  todos os elementos da Visao desejada     Ё
Ё          ЁRotina executada no bTreeChange								Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function APDA070ChgTree(	cFilRDE			,;
								cCodigo			,;
								oTree			,;
								aLbxTree		,;
								oLbx1			,;
								aLbx1a			,;
								oLbx2			,;
								aLbx2			,;
								aRd0Fields		 ;
							  )

Local aLbx1				:= {}
Local aLbxTreeAux		:= aClone( aLbxTree )
Local bSortLbx			:= { |x,y| x[2] + x[3] < y[2] + y[3] }
Local cCargo 			:= oTree:GetCargo()
Local cGrupoItem 		:= ""
Local lDisableButtons	:= ( Left( cCargo, 1 ) <> '+' )

IF !( lDisableButtons )

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Obtem o Item do Grupo                                       Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cGrupoItem 	:= SubStr( cCargo, 3 )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Salva Listbox anterior no aLbxTree                 Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( !Empty( cCargoAnt ) .and. ( cGrupoItem <> cCargoAnt ) )
		aLbxTreeAux	:= Apda070TrfLbx( cFilRDE , cCodigo , oTree , aLbxtree, aLbx2 )
    EndIF

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁMonta Listbox com  Participantes selecionados   			  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aLbx2	:= Apda0702ParSel( aLbxTreeAux , cGrupoItem , aRd0Fields )

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁMonta Listbox Selecao de Participantes          			  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aLbx1	:= Apda0701ParSel( aLbx1a , aLbx2 , aRd0Fields )

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Retorna o conteudo original das ListBox                     Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aLbx1a	:= aClone( aLbx1 )

EndIF

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Atualiza o Conteudo de aLbxTree							  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aLbxTree	:= aClone( aLbxTreeAux )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Seta as Informacoes do 1o ListBox                           Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aSort( aLbx1a , NIL , NIL , bSortLbx )
oLbx1:SetArray( aLbx1a )
oLbx1:bLine:= { || ApdLbxbLine( oLbx1 ) }
oLbx1:Refresh()

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Seta as Informacoes do 2o ListBox                           Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aSort( aLbx2  , NIL , NIL , bSortLbx )
oLbx2:SetArray( aLbx2 )
oLbx2:bLine:= { || ApdLbxbLine( oLbx2 ) }
oLbx2:Refresh()

IF ( lDisableButtons )

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Desabilita os Botoes de Selecao                             Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	Apda070DsbButtons()
	oLbx1:Hide()
	oLbx2:Hide()

Else

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Habilita os Botoes de Selecao                        		  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	oLbx1:Show()
	oLbx2:Show()
	Apda070EnbButtons()

EndIF

Return( NIL )

/*/
зддддддддддбддддддддддддддбдддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda0702ParSelЁAutorЁ2a. Versao		      Ё      Ё          Ё
Ё          Ё              Ё     ЁNatie Sugahara       Ё Data Ё14/10/2002Ё
Ё          Ё              ЁAutorЁ2a. Versao           Ё      Ё          Ё
Ё          Ё              Ё     ЁMarinaldo de Jesus   Ё Data Ё16/07/2003Ё
цддддддддддеддддддддддддддадддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCarregar Informacoes na ListBox de Participantes que ja  forЁ
Ё          Ёram Selecionados											Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda0702ParSel( aLbxTreeAux , cGrupoItem , aRd0Fields )

Local aLbx2Aux	:= {}
Local nLoop		:= 0
Local nLoops	:= Len( aLbxTreeAux )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCarrega os Participantes no 2o. ListBox conforme Item de GrupoЁ
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
For nLoop := 1 To nLoops
	IF (;
			( !Empty( aLbxTreeAux[ nLoop , 1 , 3 ] ) ) .and.;
			( aLbxTreeAux[ nLoop , 1 , 3 ] == cGrupoItem ) ;
		)
		aAdd( aLbx2Aux , aClone( aLbxTreeAux[ nLoop , 2 ] ) )
	EndIF
Next Loop

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCarrega cCargoAnt											   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
cCargoAnt	:= cGrupoItem

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCaso a ListBox de Selecao tenha ficado vazio, inclui um elemenЁ
Ёto															   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( Len( aLbx2Aux ) == 0 )
	ApdLbxMArray( "RD0" , @aLbx2Aux , aRd0Fields )
EndIF

Return( aClone( aLbx2Aux ) )

/*/
зддддддддддбддддддддддддддбдддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda0701ParSelЁAutorЁ1a. Versao           Ё      Ё          Ё
Ё          Ё              Ё     ЁNatie Sugahara       Ё Data Ё14/10/2002Ё
Ё          Ё              ЁAutorЁ2a. Versao           Ё      Ё          Ё
Ё          Ё              Ё     ЁMarinaldo de Jesus   Ё Data Ё16/07/2003Ё
цддддддддддеддддддддддддддадддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCarregar Informacoes na ListBox de Participantes que   estaoЁ
Ё          Ёdisponivies para selecao									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda0701ParSel( aLbx1 , aLbx2 , aRd0Fields )

Local aLbx1Aux	:= {}
Local nLoop		:= 0
Local nLoops	:= 0

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCarrega o 1o. ListBox eliminando os participantes ja selecionaЁ
Ёdos														   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
nLoops := Len( aLbx1 )
For nLoop := 1 To nLoops
	IF ( ( aScan( aLbx2 , { |x| aLbx1[ nLoop , 3 ] == x[3] } ) ) == 0 )
		aAdd( aLbx1Aux , aClone( aLbx1[ nLoop ] ) )
	EndIF
Next nLoop
aLbx1Aux := IF( Len( aLbx1Aux ) > 0 , aClone( aLbx1Aux ) , aLbx1 )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCaso a ListBox de Selecao tenha ficado vazio, inclui um elemenЁ
Ёto															   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( Len(aLbx1Aux) == 0 )
	ApdLbxMArray( "RD0" , @aLbx1Aux , aRd0Fields )
EndIF

Return( aClone( aLbx1Aux ) )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda070TrfLbxЁAutorЁ1a. Versao    		  Ё      Ё          Ё
Ё          Ё             Ё     ЁNatie Sugahara        Ё Data Ё14/10/2002Ё
Ё          Ё             ЁAutorЁ2a. Versao            Ё      Ё          Ё
Ё          Ё             Ё     ЁMarinaldo de Jesus    Ё Data Ё16/07/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁPermuta de Informacoes entre a ListBox de Participantes SeleЁ
Ё          Ёcionados e o ListBox que sera utilizado para a Gravacao  dasЁ
Ё          Ёinformacoes													Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda070TrfLbx( cFilRDE , cCodigo , oTree , aLbxtree , aLbx2 )

Local aLbxTreeAux	:= {}
Local cCargo 		:= oTree:GetCargo()
Local nLoop			:= 0
Local nLoops		:= 0

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRedefine cCargoAnt              						 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
cCargoAnt := IF( Empty( cCargoAnt ) , SubStr( cCargo , 3 ) , cCargoAnt )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁSalva as Informacoes que nao pertencem ao Item Atual	 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
nLoops := Len( aLbxTree )
For nLoop := 1 To nLoops
	IF ( albxTree[ nLoop , 1 , 3 ] <>  cCargoAnt )
		aAdd( aLbxTreeAux , aClone( aLbxTree[ nLoop ] ) )
	EndIF
Next nLoop

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁAdiciona novo cCargoAnt a aLbxTree						 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
nLoops := Len( aLbx2 )
For nLoop := 1 To nLoops
	IF !Empty( aLbx2[ nLoop , 3 ] )
		aAdd( aLbxTreeAux , {;
								{;
									cFilRDE 	,;
									cCodigo 	,;
									cCargoAnt	 ;
								},;
								aClone( aLbx2[ nLoop ] );
							};
			)
	EndIF
Next nLoop

Return( aClone( aLbxTreeAux ) )

/*/
зддддддддддбдддддддддддддддбдддддбддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁAPDA70RdePutInfЁAutorЁMarinaldo de Jesus  Ё Data Ё16/07/2003Ё
цддддддддддедддддддддддддддадддддаддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁSalva as Informacoes                                        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function APDA70RdePutInf(	cFilRDE		,;	//Filial
									cCodigo 	,;	//Codigo da Visao
									oTree		,;	//Objeto Tree Referente a Visao
									aLbxTree	,;	//ListBox com as Informacoes a Serem Gravadas
									aLbx2		,;	//ListBox de Selecao dos Participantes com a Ultima selecao efetuada
									aRdeCols	,;	//Array com as Informacoes ja Existentes no RDE
									aRdeHeader	,;	//Array com o Cabecalho de aRdeCols
									aRdeRecnos	 ;	//Recnos correspondentes a aRdeCols
								)

Local cSeekRd0	:= ""
Local cKeySeek	:= ""
Local cCodVis	:= ""
Local cCodIte	:= ""
Local cCodPar	:= ""
Local dData  	:= Ctod("//")
Local cStatus	:= ""
Local nLoop		:= 0
Local nLoops	:= 0
Local nOrdRDE	:= RDE->( IndexOrd() )
Local nOrdRD0	:= RD0->( IndexOrd() )
Local nCodVis	:= GdFieldPos( "RDE_CODVIS" , aRdeHeader )
Local nCodIte	:= GdFieldPos( "RDE_ITEVIS" , aRdeHeader )
Local nCodPar	:= GdFieldPos( "RDE_CODPAR" , aRdeHeader )
Local nData  	:= GdFieldPos( "RDE_DATA"   , aRdeHeader )
Local nStatus	:= GdFieldPos( "RDE_STATUS" , aRdeHeader )
Local nRecnoRDE := 0

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁSalva Listbox anterior no aLbxTree									     Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aLbxTree	:= Apda070TrfLbx( cFilRDE , cCodigo , oTree , aLbxtree , aLbx2 )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Seta a Ordem para pesquisa                                             Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RDE->( dbSetOrder( RetOrdem( "RDE" , "RDE_FILIAL+RDE_CODVIS+RDE_ITEVIS+RDE_CODPAR" ) ) )
RD0->( dbSetOrder( RetOrdem( "RD0" , "RD0_FILIAL+RD0_CODIGO" ) ) )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁSalva as Informacoes no RDE								 			 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
nLoops := Len( aLbxTree )
For nLoop := 1 To nLoops
	nRecnoRDE := 0
	MsProcTxt( OemToAnsi( STR0008  ) )		//"Salvando Registros..."
	IF(;
		( Len( aLbxTree[ nLoop , 1 ] ) == 0 ) .or. ;
		( Len( aLbxTree[ nLoop , 2 ] ) == 0 ))/* .or. ;( (aLbxTree[ nLoop ,2 , 1 ]) )	  ;		)*/ // Se o registro nЦo estiver selecionado.


	   Loop
	EndIF
	cSeekRd0 := xFilial( "RD0" , aLbxTree[ nLoop ,1 , 1 ] )	//Filial
	cSeekRd0 += aLbxTree[ nLoop ,2 , 3 ]					//Participante
	IF ( !RD0->( dbSeek( cSeekRd0 , .F. ) ) )
		Loop
	EndIF
	cKeySeek := aLbxTree[ nLoop ,1 , 1 ]	//Filial do RDE
	cKeySeek += aLbxTree[ nLoop ,1 , 2 ]	//Codido da Visao
	cKeySeek += aLbxTree[ nLoop ,1 , 3 ]	//Codigo do Item da Visao
	cKeySeek += aLbxTree[ nLoop ,2 , 3 ]	//Codigo do Participante
	IF ( !RDE->( dbSeek( cKeySeek , .F. ) ) )
		RDE->( RecLock( "RDE" , .T. , .T. ) )
	Else
		// posiciona no ultimo registro de alocacao desta visao/item/participante
		While RDE->( !Eof() .and. ( cKeySeek == ( RDE_FILIAL+RDE_CODVIS+RDE_ITEVIS+RDE_CODPAR ) ) )
			If ( RDE->RDE_DATA != dDataBase )
				If RDE->RDE_STATUS <> "2"
					RDE->( RecLock( "RDE" , .F. , .T. ) )
						RDE->RDE_STATUS	:= "2"
					RDE->( MsUnLock() )
				EndIf
			Else
				nRecnoRDE := RDE->( Recno() )
			EndIf
			RDE->( dbSkip() )
		End While
		If nRecnoRDE <> 0
			RDE->( MsGoto( nRecnoRDE ) )
			RDE->( RecLock( "RDE" , .F. , .T. ) )
		Else
			RDE->( RecLock( "RDE" , .T. , .T. ) )
		EndIf
		RDE->RDE_STATUS	:= "1"
	EndIF
	RDE->RDE_FILIAL	:= aLbxTree[ nLoop , 1 , 1 ]
	RDE->RDE_CODVIS	:= aLbxTree[ nLoop , 1 , 2 ]
	RDE->RDE_ITEVIS	:= aLbxTree[ nLoop , 1 , 3 ]
	RDE->RDE_DATA  	:= IF(Empty(RDE->RDE_DATA),dDataBase,RDE->RDE_DATA)
	RDE->RDE_STATUS	:= IF(Empty(RDE->RDE_STATUS),"1",RDE->RDE_STATUS)
	RDE->RDE_CODPAR	:= aLbxTree[ nLoop , 2 , 3 ]
	RDE->( MsUnLock() )
Next nLoop

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁAltera o Status da Alocacao                  							 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
nLoops := Len( aRdeRecnos )
For nLoop	:= 1 To nLoops
	MsProcTxt( OemToAnsi( STR0009  ) )		//"Alterando Status..."
	cCodVis	:= aRdeCols[ nLoop , nCodVis ]
	cCodIte	:= aRdeCols[ nLoop , nCodIte ]
	cCodPar	:= aRdeCols[ nLoop , nCodPar ]
	IF (;
			aScan( aLbxTree , { |x|;
										( Len( x[ 1 ] ) >= 3 )	.and. ;
										x[ 1 , 1 ] == cFilRDE 	.and. ;
										x[ 1 , 2 ] == cCodVis 	.and. ;
										x[ 1 , 3 ] == cCodIte 	.and. ;
										( Len( x[ 2 ] ) >= 3 )	.and. ;
										x[ 2 , 3 ] == cCodPar         ;
						 	  };
			 	) == 0 ;
		)
		RDE->( dbGoto( aRdeRecnos[ nLoop ] ) )
		RDE->( RecLock( "RDE" , .F. , .T. ) )
		IF RDE->( !Empty(RDE_DATA) .and. ( RDE_STATUS == "1" ) )
			// nao deleta os registros e sim passa para Inativo para manter historico
			RDE->RDE_STATUS	:= "2"
		EndIF
		RDE->( MsUnlock() )
	EndIF
Next nLoop

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura a Ordem de Entrada											 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RDE->( dbSetOrder( nOrdRDE ) )
RD0->( dbSetOrder( nOrdRD0 ) )

Return( NIL )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda070DsbButtonsЁAutorЁMarinaldo de JesusЁ Data Ё16/07/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁDisabilita os Botoes                                        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda070DsbButtons()

oBtnNext:Disable()
oBtnPgNext:Disable()
oBtnPrev:Disable()
oBtnPgPrev:Disable()

Return( NIL )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda070EnbButtonsЁAutorЁMarinaldo de JesusЁ Data Ё25/05/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁHabilita os Botoes                                          Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda070EnbButtons()

oBtnNext:Enable()
oBtnPgNext:Enable()
oBtnPrev:Enable()
oBtnPgPrev:Enable()

Return( NIL )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda070EvbChange ЁAutorЁMarinaldo de JesusЁ Data Ё16/07/2003Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁAtualiza os Contadores dos ListBox                          Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA070()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Apda070EvbChange()

Eval( oLbx1:bChange )
Eval( oLbx2:bChange )

Return( NIL )


/*
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    Ё MenuDef		ЁAutorЁ  Luiz Gustavo     Ё Data Ё20/12/2006Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁIsola opcoes de menu para que as opcoes da rotina possam    Ё
Ё          Ёser lidas pelas bibliotecas Framework da Versao 9.12 .      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё< Vide Parametros Formais >									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA070                                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Retorno  ЁaRotina														Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/

Static Function MenuDef()

 Local aRotina := {;
							{ STR0001 , "AxPesqui"	 , 0 , 01,,.F. } ,; //"Pesquisar"
							{ STR0002 , "ApdA070Mnt" , 0 , 02 } ,; //"Visualizar"
							{ STR0003 , "ApdA070Mnt" , 0 , 04 }  ; //"Alocar"
						}
Return aRotina

/*
зддддддддддбдддддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdRelCompl    Ё Autor ЁFabio G.             Ё Data Ё18/06/2013Ё
цддддддддддедддддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁValida o Relacionamentos dos Arquivos do Modulo APD            Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁApdRelCompl( lShowHelp )						     		   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ                                         					   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁlRetModo													   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	       Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerica                                                       Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function ApdRelCompl( lShowHelp )

Local cAlias1	:= "RDE"
Local cAlias2	:= "RDK"
Local cAlias3	:= "RD4"
Local lRetModo	:= .T.
Local cRDE
Local cRDK
Local cRD4

Static lApdChkRel
Static cLastEmpChk

DEFAULT lShowHelp	:= .T.

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Coloca o Ponteiro do Mouse em Estado de Espera               Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( lShowHelp )
	CursorWait()
EndIF

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Consiste o Modo de Acesso dos Arquivos                       Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Begin Sequence
	DEFAULT lApdChkRel 	:= .T.
	DEFAULT cLastEmpChk	:= cEmpAnt
	IF ( cLastEmpChk <> cEmpAnt )
		lApdChkRel := .T.
	EndIF
	IF !( lApdChkRel )
		Break
	EndIF

	cRDE	:= FWModeAccess( "RDE", 1)+FWModeAccess( "RDE", 2)+FWModeAccess( "RDE", 3)
	cRDK	:= FWModeAccess( "RDK", 1)+FWModeAccess( "RDK", 2)+FWModeAccess( "RDK", 3)
	cRD4	:= FWModeAccess( "RD4", 1)+FWModeAccess( "RD4", 2)+FWModeAccess( "RD4", 3)

	If (cRDE != cRDK)
		cHelp := STR0017 + cAlias1 +  " - "
		cHelp += STR0017 + cAlias2
		Help( "" , 1 , "MODOACESSO" , , cHelp, 5 , 0 )
		lRetModo	:= .F.
		Break
	Elseif(cRDE != cRD4)
		cHelp := STR0017 + cAlias1 + " - "
		cHelp += STR0017 + cAlias3
		Help( "" , 1 , "MODOACESSO" , , cHelp, 5 , 0 )
		lRetModo	:= .F.
		Break
	EndIf

End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Ponteiro do Mouse                                 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( lShowHelp )
	CursorArrow()
EndIF

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Se estiver Tudo Ok nao verifica Novamente					   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
lApdChkRel := !( lRetModo )

Return( lRetModo )