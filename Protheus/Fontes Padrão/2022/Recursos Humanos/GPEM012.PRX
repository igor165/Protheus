#INCLUDE "PROTHEUS.CH"
#INCLUDE "GPEM012.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GPEM012  ³ Autor   ³ IP Rh - Inovacao                   ³ Data ³ 11/04/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Recriacao de Acumuladores                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data     ³   BOPS/FNC   ³  Motivo da Alteracao                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sidney O.   ³24/09/2014³TQQLDE        ³Replica para a      P12                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function GPEM012()

Local aArea			:= GetArea()
Local aSays			:= {}		// array com as mensagem para visualizacao na caixa de Processamento
Local aButtons		:= {}		// botoes da caixa de processamento

Local cMens

Local nOpca			:= 0
Local cMsgConf		:= ""

Private cCadastro	:= OemToAnsi(STR0001) // "Recriacao de Acumuladores"
Private cPerg		:= "GPEM012"

IF !PgsExclusive()
   Help(" ",1,"PGSEXC")
Endif

cMsgConf := STR0024+CHR(13)	 // "Os acumuladores existentes para os parâmetros informados "
cMsgConf += STR0025+CHR(13)	 // "serão zerados e os valores recalculados conforme o "
cMsgConf += STR0026+CHR(13)	 // "histórico de movimentos (SRD). Os acumuladores são "
cMsgConf += STR0027+CHR(13)	 // "armazenados agrupados por filial, matrícula, processo, "
cMsgConf += STR0028+CHR(13)	 // "verba, critério, ano inicial e ano final. Não é considerado"
cMsgConf += STR0029+CHR(13)	 // " o procedimento de cálculo para o armazenamento dos "
cMsgConf += STR0030+CHR(13)	 // "acumuladores, ou seja, todos os procedimentos de cálculos "
cMsgConf += STR0031+CHR(13)	 // "são armazenados num mesmo registro, conforme o agrupamento"
cMsgConf += STR0032+CHR(13)	 // " citado acima."
cMsgConf += STR0033+CHR(13)	 // "Por exemplo: Se já existir acumuladores para o procedimento"
cMsgConf += STR0034+CHR(13)	 // " de cálculo de Folha e regerar os acumuladores para este "
cMsgConf += STR0035+CHR(13)	 // " mesmo período porém escolher somente o procedimento de "
cMsgConf += STR0036+CHR(13)	 // "cálculo de Férias, a rotina irá zerar os valores já "
cMsgConf += STR0037+CHR(13)	 // "existentes e regerar novos valores apenas para o procedimento"
cMsgConf += STR0038+CHR(13)	 // " de cálculo de Férias, não acumulando os valores do "
cMsgConf += STR0040+CHR(13)	 // "procedimento de cálculo da Folha. Se desejar os"
cMsgConf += STR0041+CHR(13)	 // " acumuladores também para o procedimento de cálculo de "
cMsgConf += STR0042+CHR(13) // "Folha, deverá selecionar os roteiros Folha e Férias na "
cMsgConf += STR0043+CHR(13)+CHR(13) // "pergunte 'Procedimento de Cálculo'."
cMsgConf += STR0044+CHR(13)	 // " Deseja prosseguir? "

Begin Sequence

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Restaurar as informacoes do Ultimo Pergunte                   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	Pergunte("GPEM012",.F.)

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Janela de Processamento do Fechamento                         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	AADD(aSays, STR0002 )	// "Esta rotina irá regerar as informações na tabela de acumuladores dos períodos já"
	AADD(aSays, STR0003	)	// "fechados, garantindo assim a integridade das informações conforme as "
	AADD(aSays, STR0004	)	// "configurações do critério de acumulação."

	AADD(aButtons, { 5,.T., { || Pergunte("GPEM012", .T. ) } } )
	AADD(aButtons, { 1,.T.,{|o| nOpca := 1,;
								 IF(GPEM012TudoOK() .And. GpConfOk( cMsgConf, OemToAnsi(STR0006) ),;	// "Confirma configura‡„o dos parƒmetros?" ### "Aten‡„o"
								 		FechaBatch(),;
								 		nOpca:=0) ;
							 } ;
					} ) //"Confirma configura‡„o dos parƒmetros?"###"Aten‡„o"

	AADD(aButtons, { 2,.T.,{|o| FechaBatch() }} )

	FormBatch( cCadastro, aSays, aButtons )

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Chamada do Processamento                                     ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF nOpca == 1

		ProcGpe({|lEnd| GPM012Processa() },,,.T.)

	Endif

End Sequence

PgsShared()

RestArea( aArea )

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³GPM012Processa³ Autor ³IP RH Inovacao         ³ Data ³12/04/2012³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Processamento para Recriacao dos Acumulados                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³GPM012Processa										    		³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³                                                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEM012()	                                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static function GPM012Processa()

Local nPosBarra := 0
Local cAliasQry		:= GetNextAlias()
Local cWhere		:= ""
Local cTextoWhere 	:= ""
Local cAuxWhere		:= ""
Local nValMes 		:= 0
Local cAliasCount	:= ""
Local cSelect		:= ""
Local cQuery		:= ""
Local nRegProc		:= 0
Local nStepFun 		:= 0
Local lContinua 	:= .T.
Local lMesaMes 		:= .T.
Local lExecutou		:= .F.
Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), { .T., .F. }) //[2]Ofuscamento
Local aFldRel		:= If(aOfusca[2], FwProtectedDataUtil():UsrNoAccessFieldsInList( {"RA_NOME"} ), {})
Local lOfusca		:= Len(aFldRel) > 0

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis de acumulacao                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Local cCriterio		:= ""						// Criterio de acumulacao da verba
Local cSequencia	:= ""						// Sequencia de acumulacao da verba
Local aMesesAcu		:= {}
Local lApagaAcu		:= .T.
Local nSeqMes		:= 0
Local cFilOld		:= ""
Local cMatOld		:= ""
Local cVerbaOld 	:= ""
Local cProOld 		:= ""
//Local cRotOld 		:= ""

Local lGeraLog		:= .F.
Local aLogTitle		:= {}
Local aLogXDet		:= {}

Local uVar			:= ""
Local cVar			:= ""
Local cPicture		:= ""
Local cLinParam		:= ""
Local nX 			:= 1

Private aLogDet		:= {}

/* - Parametros
MV_PAR01 - Processo
MV_PAR02 - Procedimentos de Calculo
MV_PAR03 - Filial
MV_PAR04 - Matricula
MV_PAR05 - Verbas1
MV_PAR06 - Verbas2
MV_PAR07 - Origem do Critério
MV_PAR08 - Critério
MV_PAR09 - Ano
MV_PAR10 - Mes
MV_PAR11 - Gerar Log
*/

/* - Criterios para selecao
RD_PROCES	Processos selecionados na pergunte "Processos".
RD_ROTEIR	Procedimentos de cálculo selecionados na pergunte "Procedimentos de Cálculo".
RD_FILIAL	Filiais selecionadas na pergunte "Filiais"
RD_MAT	Matrículas selecionadas na pergunte "Matrículas"
RD_PD	Verbas selecionadas na pergunte "Verbas"
RD_PERIODO e RD_SEMANA	Períodos (RCH_PER e RCH_NUMPAG) a serem processados conforme processos, procedimentos de cálculo, ano e mês informados nas perguntes e que estejam fechados ( !EMPTY(RCH_DTFECH) ). Buscar os períodos na tabela RCH, onde o campo RCH_PROCES seja igual aos processos informados na pergunte "Processos", RCH_ROTEIR seja igual aos procedimentos de cálculo informados na pergunte "Procedimentos de Cálculo", RCH_ANO seja igual ao informado na pergunte "Ano" e o campo RCH_MES seja os meses selecionados na pergunte "Meses".
RD_CRITER	Critério selecionado na pergunte "Critério".  Filtrar o critério do histórico de movimentos somente se a associação de critério VS verbas escolhida for a do histórico
*/

lGeraLog := (MV_PAR11 == 1)

MakeSqlExpr( cPerg )

// Adiciona Processos na pesquisa
If !Empty(MV_PAR01)
	cTextoWhere := ""
	cAuxWhere	:= MV_PAR01
	While !Empty(cAuxWhere)
		If !Empty(cTextoWhere)
			cTextoWhere += ","
		Endif
		cTextoWhere += "'" + SubStr(cAuxWhere,1,TAMSX3("RD_PROCES")[1]) + "'"
		cAuxWhere := SubStr(cAuxWhere,TAMSX3("RD_PROCES")[1]+1 )
	Enddo
	cWhere += " SRD.RD_PROCES IN (" + cTextoWhere + ") AND RCH.RCH_PROCES IN (" + cTextoWhere + ")"
Endif

// Adiciona Procedimentos de Calculos - Roteiro
If !Empty(MV_PAR02)

	If !Empty( cWhere )
		cWhere += " AND "
	Endif

	cTextoWhere := ""
	cAuxWhere	:= MV_PAR02
	While !Empty(cAuxWhere)
		If !Empty(cTextoWhere)
			cTextoWhere += ","
		Endif
		cTextoWhere += "'" + SubStr(cAuxWhere,1,TAMSX3("RD_ROTEIR")[1]) + "'"
		cAuxWhere := SubStr(cAuxWhere,TAMSX3("RD_ROTEIR")[1]+1 )
	Enddo
	cWhere += " SRD.RD_ROTEIR IN (" + cTextoWhere + ") AND  RCH.RCH_ROTEIR IN (" + cTextoWhere + ")"
Endif

// Adiciona Filial
If !Empty(MV_PAR03)

	If !Empty( cWhere )
		cWhere += " AND "
	Endif
	cWhere += AllTrim(MV_PAR03)

Endif

// Adiciona Matricula
If !Empty(MV_PAR04)

	If !Empty( cWhere )
		cWhere += " AND "
	Endif
	cWhere += AllTrim(MV_PAR04)

Endif

// Adiciona Verbas
If !Empty(MV_PAR05) .Or. !Empty(MV_PAR06)

	If !Empty( cWhere )
		cWhere += " AND "
	Endif
	cTextoWhere := ""
	If !Empty(MV_PAR05)
		cTextoWhere += AllTrim(MV_PAR05)
	EndIf
	If !Empty(MV_PAR06)
		cTextoWhere += AllTrim(MV_PAR06)
	EndIf
	cWhere += " SRD.RD_PD IN (" + fSqlIn(cTextoWhere, TamSX3("RD_PD")[1]) + ")"
Endif

If MV_PAR07 == 1	// Historico
	// Adiciona Criterios
	If !Empty( cWhere )
		cWhere += " AND "
	Endif

	cWhere += "SRD.RD_CRITER = '" + AllTrim(MV_PAR08) + "'"
Endif

SRA->(dbSetOrder(1))

// Posiciona no codigo da Criterio no cadastro para verificar o mes inicial e quantidade sequencias
dbSelectArea("RG9")
RG9->(dbSetOrder(RetOrder("RG9","RG9_FILIAL+RG9_CODCRI")))
RG9->(dbSeek( xFilial("RG9") + MV_PAR08 ))

// Pesquisa Ano + Mes

// Verifica qual eh o tipo de Mes ( Meses separados ou Meses com intervalo )
nPosBarra := AT("-", AllTrim(MV_PAR10) )

If nPosBarra > 0

	lMesAMes := If(nPosBarra > 5 .And. SubStr(MV_PAR10,nPosBarra-5,1) == "/", .F., .T. )

	cTextoWhere := ""
	cAuxWhere	:= MV_PAR10
	nColAno		:= 0
	cAnoI 		:= ""
	aMesesAcu	:= {}
	nSeqMes		:= 0

	While !Empty(cAuxWhere)
		nSeqMes++
		If lMesaMes

			If SubStr(cAuxWhere,1,nPosBarra) <> "*****"	// 1111-

				cAnoI := If(SubStr(cAuxWhere,3,2) < SubStr(MV_PAR09,3,2),;
							 SubStr(StrZero(Val(MV_PAR09)+1,4),1,2) + SubStr(cAuxWhere,3,2),;
							 SubStr(MV_PAR09,1,2) + SubStr(cAuxWhere,3,2)  )

				If !Empty(cTextoWhere)
					cTextoWhere += " OR "
				Endif

				cTextoWhere += "( RCH.RCH_ANO = '" + cAnoI + "' AND RCH.RCH_MES = '" + SubStr(cAuxWhere,1,2) + "' )"
				aAdd( aMesesAcu , StrZero(nSeqMes,2) )
			Endif
		Else
			If SubStr(cAuxWhere,1,10) <> "**********"	// 1112/1212-

				cAnoI := If(SubStr(cAuxWhere,3,2) < SubStr(MV_PAR09,3,2),;
								 SubStr(StrZero(Val(MV_PAR09)+1,4),1,2) + SubStr(cAuxWhere,8,2),;
								 SubStr(MV_PAR09,1,2) + SubStr(cAuxWhere,3,2)  )

				nValMes := Val(SubStr(cAuxWhere,1,2))

				aAdd( aMesesAcu , StrZero(nSeqMes,2) )

				While nValMes <= Val(SubStr(cAuxWhere,6,2)) .Or. ( nValMes <= 12 .And. SubStr(cAnoI,3,2) <> SubStr(cAuxWhere,8,2)  )
					If !Empty(cTextoWhere)
						cTextoWhere += " OR "
					Endif

					cTextoWhere += "( RCH.RCH_ANO = '" + cAnoI + "' AND RCH.RCH_MES = '" + StrZero(nValMes,2) + "' )"
					nValMes += 1
					If nValMes > 12
						cAnoI := If(SubStr(cAuxWhere,3,2) < SubStr(MV_PAR09,3,2),;
										 SubStr(StrZero(Val(MV_PAR09)+1,4),1,2) + SubStr(cAuxWhere,8,2),;
										 SubStr(MV_PAR09,1,2) + SubStr(cAuxWhere,8,2)  )
						nValMes := 1
					Endif
				Enddo

			Endif
		Endif
		cAuxWhere := SubStr(cAuxWhere,If(lMesaMes,5,10)+1)
	Enddo

	If !Empty( cWhere )
		cWhere += " AND "
	Endif

	cWhere += "( " + cTextoWhere + " ) "

	If Empty(cTextoWhere)
		Return
	Endif
Else
	Return
Endif

If !Empty( cWhere )
	cWhere += " AND "
Endif

cWhere += " RCH.RCH_DTFECH <> '        ' "
cWhere += " AND RCH.RCH_PER = SRD.RD_PERIODO "
cWhere += " AND RCH.RCH_NUMPAG = SRD.RD_SEMANA "
cWhere += " AND RCH.RCH_PROCES = SRD.RD_PROCES "
cWhere += " AND RCH.RCH_ROTEIR = SRD.RD_ROTEIR "
cWhere += " AND SRD.D_E_L_E_T_ = ' ' "
cWhere += " AND RCH.D_E_L_E_T_ = ' ' "

cWhere := "% " + cWhere + " %"

BeginSql alias cAliasQry
   	SELECT SRD.RD_FILIAL,SRD.RD_MAT,SRD.RD_PD,SRD.RD_HORAS,SRD.RD_VALOR,SRD.RD_PROCES,SRD.RD_ROTEIR,SRD.RD_CRITER,SRD.RD_SEQUE,SRD.RD_PERIODO,RCH.RCH_CRITER,RCH.RCH_SEQUE,RCH.RCH_ANO,RCH.RCH_MES
	FROM %table:SRD% SRD,%table:RCH% RCH
	WHERE %exp:cWhere%
	ORDER BY RD_FILIAL,RD_MAT,RD_PD,RD_PROCES,RD_ROTEIR
EndSql

If (cAliasQry)->(!Eof())

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega Regua Processamento	                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    DbSelectArea(cAliasQry)

	(cAliasQry)->(dbGotop())
	(cAliasQry)->(dbEval({|| nRegProc++ }))
	(cAliasQry)->(dbGotop())

	GPProcRegua(nRegProc)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcula funcionarios por bloco da regua									³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nStepFun 	:= If( nRegProc < 150, 1, Int( nRegProc / ( 30 * 5 ) ) ) // 5 funcionarios por bloco da barra de progresso

	While !(cAliasQry)->(Eof())

		SRA->( MSSeek( (cAliasQry)->RD_FILIAL + (cAliasQry)->RD_MAT ),.F. )

		cFilOld		:= (cAliasQry)->RD_FILIAL
		cMatOld		:= (cAliasQry)->RD_MAT
		cVerbaOld 	:= (cAliasQry)->RD_PD
		cProOld 	:= (cAliasQry)->RD_PROCES

		//Foi retirado o codigo do Roteiro do While devido nao estar sendo gravado na RG7_ROTEIR
		//Caso seja feita a gravacao devera retornar a comparacao cRotOld 	== (cAliasQry)->RD_ROTEIR no While abaixo
		//cRotOld 	:= (cAliasQry)->RD_ROTEIR

		lApagaAcu 	:= .T.

		While !(cAliasQry)->(Eof()) .And. cFilOld 	== (cAliasQry)->RD_FILIAL ;
									.And. cMatOld	== (cAliasQry)->RD_MAT	;
									.And. cVerbaOld == (cAliasQry)->RD_PD  ;
									.And. cProOld 	== (cAliasQry)->RD_PROCES

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Movimenta Regua de Processamento                             ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			GPIncProc( SRA->RA_FILIAL + " - " + SRA->RA_MAT + If(lOfusca, "", " - " + SRA->RA_NOME ), nStepFun, .T. )

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica criterio no cadastro de Procedimentos qdo MV_PAR07 = 2 (Atual)   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			lContinua 	:= .T.
			cCriterio	:= ""						// Criterio de acumulacao da verba
			cSequencia	:= ""						// Sequencia de acumulacao da verba

			If MV_PAR07 == 1	// Historico

				cCriterio 	:= (cAliasQry)->RD_CRITER
				cSequencia	:= (cAliasQry)->RD_SEQUE

			Else	// Atual

				If fBuscaCrit(@cCriterio , @cSequencia, cAliasQry, (cAliasQry)->RD_PROCES, (cAliasQry)->RD_ROTEIR, (cAliasQry)->RD_PD, (cAliasQry)->RCH_CRITER, (cAliasQry)->RCH_SEQUE)
					If cCriterio <> MV_PAR08
						lContinua := .F.
					Endif
				Else
					lContinua := .F.
				Endif

			Endif

			// Verificar se existem registros na tabela RG7 e gravar
	        If lContinua
				fGrvAcumulador( cCriterio , cSequencia , .T. , cAliasQry , aMesesAcu , lApagaAcu, (cAliasQry)->RCH_MES, (cAliasQry)->RCH_ANO, lGeraLog )
				lApagaAcu := .F.
				lExecutou := .T.
			Endif

			(cAliasQry)->(dbSkip())

        Enddo

	Enddo

Endif

(cAliasQry)->(dbCloseArea())

If !lExecutou
	MsgAlert( STR0007, OemToAnsi(STR0006) ) 	// "Nenhum registro foi processado. Por favor, verifique os parâmetros informados." ### "Atencao"
Else
	If lGeraLog
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Gera o Log de gravacao 		                               ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		IF Len( aLogDet ) > 0
			aAdd( aLogTitle , Padr(TitSX3("RG7_FILIAL")[1],12) + " " + ;
							Padr(TitSX3("RG7_MAT")[1] ,40) + " " + ;
							Padr(TitSX3("RG7_PROCES")[1],12) + " " + ;
							Padr(TitSX3("RG7_PD")[1],40) + " " + ;
							Padr(TitSX3("RG7_ANOINI")[1],12) + " " + ;
							Padr(TitSX3("RG7_ANOFIM")[1],12) + " " + ;
							Padr(TitSX3("RG7_CODCRI")[1],12) + " " + ;
							Padr(TitSX3("RG7_SEQACU")[1],12) )

			Pergunte("GPEM012",.F.)

			For nX := 1 to Len(aLogDet)

				aAdd( aLogXDet , Padr(aLogDet[nX,1],12) + " " + ;
								Padr(aLogDet[nX,2]+ " - " + If(lOfusca, Replicate('*',30), fDesc("SRA", aLogDet[nX,2], "RA_NOME",, aLogDet[nX,1]) ),40) + " " + ;
								Padr(aLogDet[nX,3],12) + " " + ;
								Padr(aLogDet[nX,4]+ " - " + fDesc("SRV", aLogDet[nX,4], "RV_DESC",, aLogDet[nX,1]),40) + " " + ;
								Padr(aLogDet[nX,5],12) + " " + ;
								Padr(aLogDet[nX,6],12) + " " + ;
								Padr(aLogDet[nX,7],12) + " " + ;
								Padr(aLogDet[nX,8],12) )

			Next

			fMakeLog( { aLogXDet } , aLogTitle , "GPEM012" , NIL , NIL , STR0039,,,,.F. ) // "Log de Ocorrências - Geração de Acumuladores"
		EndIF
	Else
		MsgAlert( STR0008, OemToAnsi(STR0006) ) 	// "Geração de acumuladores realizada com sucesso! Para visualizar os registros, por favor, acesse o Cad. Acumuladores." ### "Atencao"
	Endif
Endif

Return( Nil )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³fMesesAcum³ Autor ³ Ip RH Inovacao        ³ Data ³ 12/04/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Selecionar os meses para os acumuladores            		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fMesesAcum()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ GPEM012   												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fMesesAcum()

Local cTitulo 	:= STR0009  //"Critérios de Acumulação"
Local MvPar		:= ""
Local MvParDef	:= ""
Local nQtdSeq	:= 12
Local aDMeses	:= {STR0010,STR0011,STR0012,STR0013,STR0014,STR0015,STR0016,STR0017,STR0018,STR0019,STR0020,STR0021} // "Janeiro" ### "Fevereiro" ### "Março" ### "Abril" ### "Maio" ### "Junho" ### "Julho" ### "Agosto" ### "Setembro" ### "Outubro" ### "Novembro" ### "Dezembro"
Local nX		:= 0
Local nY		:= 0
Local nAux01 	:= 0
Local nCount	:= 0

Private aMeses	:={}

// Verifica se o Ano está preenchido para montagem dos meses.
If Empty( MV_PAR09 )
	MsgAlert( STR0022, OemToAnsi(STR0006) ) 	// "O parametro Ano deve ser preenchido para montagem dos meses!" ### "Atencao"
	Return .T.
Endif

cAlias := Alias() 					 // Salva Alias Anterior

MvPar:=&(Alltrim(ReadVar()))		 // Carrega Nome da Variavel do Get em Questao
mvRet:=Alltrim(ReadVar())			 // Iguala Nome da Variavel ao Nome variavel de Retorno

dbSelectArea("RG9")
RG9->(dbSetOrder(RetOrder("RG9","RG9_FILIAL+RG9_CODCRI")))
If dbSeek( xFilial("RG9") + MV_PAR08 )

	nAux01 	:= 12 / RG9->RG9_QTDSEQ
	cAnoI	:= MV_PAR09
	cAnoF	:= MV_PAR09
	nCount	:= 0
	nMesI 	:= Val(RG9->RG9_MESINI)
	nMesF 	:= nMesI + ( nAux01 - 1 )
	If nMesF > 12
		nMesF := nMesF - 12
		cAnoF := StrZero(Val(cAnoF)+1,4)
	Endif

	If nAux01 <= 1
		For nX := 1 to 12
			aAdd( aMeses, cAnoI + " - " + aDMeses [ nMesI ] )
			MvParDef += StrZero(nMesI,2) + SubStr(cAnoI,3,2) + "-"
			nMesI += 1
			If nMesI > 12
				nMesI := 1
				cAnoI := StrZero(Val(cAnoI)+1,4)
			Endif
		Next
	Else
		For nX := 1 to RG9->RG9_QTDSEQ

			aAdd( aMeses, cAnoI + "/" + cAnoF + " - " + aDMeses [ nMesI ]+ " ate " + aDMeses [ nMesF ] )
			MvParDef += StrZero(nMesI,2) + SubStr(cAnoI,3,2) +"/"+StrZero(nMesF,2) + SubStr(cAnoF,3,2) +"-"

			nMesI := nMesF + 1

			If nMesI > 12
				nMesI := 1
				cAnoI := StrZero(Val(cAnoI)+1,4)
			Endif

			nMesF := nMesI + ( nAux01 - 1 )
			If nMesF > 12
				nMesF := nMesF - 12
				cAnoF := StrZero(Val(cAnoF)+1,4)
			Endif

			If cAnoI < cAnoF .And. nMesI < nMesF
				cAnoI := StrZero(Val(cAnoI)+1,4)
			Endif

			If cAnoI > cAnoF
				cAnoF := cAnoI
			Endif

		Next
	Endif

Endif

IF f_Opcoes(@MvPar,cTitulo,aMeses,MvParDef,12,49,.F.,If(nAux01 <= 1,5,10) )
	&MvRet := mvpar
EndIF

dbSelectArea(cAlias)

Return( If(!Empty(MvParDef), .T. , .F. ) )


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³GPEM012TudoOK³ Autor ³ Ip RH Inovacao     ³ Data ³ 16/04/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao de Todos os parametros                     		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ GPEM012TudoOK()											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ GPEM012   												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function GPEM012TudoOK()
Local lRet	:= .T.
Local nX	:= 0

If Empty(MV_PAR07) .Or. ; 	// Origem do Critério
	Empty(MV_PAR08) .Or. ;  // Critério
	Empty(MV_PAR09) .Or. ;  // Ano
	Empty(MV_PAR10)			 // Mes
	lRet := .F.
Endif

If !Empty(MV_PAR10)
	lRet := .F.
	For nX := 1 to Len(MV_PAR10)
		If SubStr(MV_PAR10,nX) <> "*"
			lRet := .T.
			Exit
		Endif
	Next
Endif

If !lRet
	MsgAlert( STR0023, OemToAnsi(STR0006) ) 	// "Origem do Critério, Critério, Ano ou Mês nao está preenchido, favor verificar!." ### "Atencao"
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³GPM01208Vld  ³ Autor ³ Ip RH Inovacao     ³ Data ³ 10/06/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao do parametro do codigo do Criterio         		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ GPM01208Vld()											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ GPEM012   												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function GPM01208Vld()
Local lRet := .F.

If ExistCpo("RG9")
	// Quando mudar o codigo do criterio devera zerar o parametro do mes
	MV_PAR10 := Space(60)
	lRet := .T.
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³GPM01209Vld  ³ Autor ³ Ip RH Inovacao     ³ Data ³ 10/06/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao do parametro do Ano Inicial do Criterio    		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ GPM01209Vld()											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ GPEM012   												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function GPM01209Vld()
Local lRet := .F.

If Len(AllTrim(MV_PAR09)) == 4
	MV_PAR10 := Space(60)
	lRet := .T.
Endif

Return lRet
