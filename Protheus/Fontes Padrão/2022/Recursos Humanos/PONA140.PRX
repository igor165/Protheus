#INCLUDE "PONA140.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "PONCALEN.CH"

#DEFINE Confirma 1

//-- Variavel usada para verificar se a integração por EAI pode ser realizada
Static lIntegDef := FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI")

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ Pona140  ³ Autor ³ Fernando Joly Siquini ³ Data ³ 14.07.97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Manutencao das Exce‡”es Diarias                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Leandro Dr. ³14/04/14³      ³Retirada de ajustes, database e FieldPos  ³±±
±±³            ³        ³      ³que nao serao utilizados na P12.		  ³±±
±±|Allyson M   ³16/10/15³TTPMJ1³Ajuste p/ integracao com o TSA p/ somente ³±±
±±³            ³        ³      ³considerar os funcionario integrados.  	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function Pona140()

Local cFiltraSRA	   := ""
Local aIndexSRA		:= {}
Local aArea			:= GetArea()

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³So executa se o Modo de Acesso do SP2 e SRA foram iguais e se este  ulti³
³mo nao estiver vazio.                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
IF ValidArqPon() .and. ChkVazio('SRA')

	Private aTabPadrao	:= {}
	Private bFiltraBrw	:= {|| NIL }
	Private cCalc		:= "SP2"
	Private dDataIni	:= CtoD('  /  /  ')
	Private dDataFim	:= CtoD('  /  /  ')
	Private cCadastro	:= OemToAnsi(STR0009 ) // 'Exce‡”es Diarias'

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define array contendo as Rotinas a executar do programa      ³
	³ ----------- Elementos contidos por dimensao ------------     ³
	³ 1. Nome a aparecer no cabecalho                              ³
	³ 2. Nome da Rotina associada                                  ³
	³ 3. Usado pela rotina                                         ³
	³ 4. Tipo de Transa‡„o a ser efetuada                          ³
	³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
	³    2 - Simplesmente Mostra os Campos                         ³
	³    3 - Inclui registros no Bancos de Dados                   ³
	³    4 - Altera o registro corrente                            ³
	³    5 - Remove o registro corrente do Banco de Dados          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	Private aRotina := MenuDef()

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Endereca a funcao de BROWSE                                  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	dbSelectArea('SRA')
	dbSelectArea('SP2')
	dbSetOrder(1)

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	cFiltraRh := ChkRh("PONA140","SRA","1")
	bFiltraBrw 	:= {|| FilBrowse("SRA",@aIndexSRA,@cFiltraRH) }
	Eval(bFiltraBrw)

	mBrowse( 6, 1,22,75,"SRA",,,,,,fCriaCor() )

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Deleta o filtro utilizando a funcao FilBrowse                     	 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	EndFilBrw("SRA",aIndexSra)

	dbSelectArea('SP2')
	dbSetOrder(3)
	dbSelectArea('SRA')

EndIF

RestArea( aArea )

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pona140Atu³ Autor ³ Fernando Joly Siquini ³ Data ³ 14.07.97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Programa de Vis.,Inc.,Alt. e Del. de  Exce‡”es Diarias      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³Pona140Atu(ExpC1,ExpN1,ExpN2)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1 = Alias do arquivo                                    ³±±
±±³          ³ExpN1 = Numero do registro                                  ³±±
±±³          ³ExpN2 = Numero da opcao selecionada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Pona140                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pona140Atu(cAlias,nReg,nOpcx)

Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}
Local aButtons		:= {}
Local aGdAltera		:= {}
Local aSeleFolders	:= SeleFolder("SP2")
Local aFolders		:= {}
Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), {.T.,.F.}) //[1] Acesso; [2]Ofusca
Local bSet15		:= { || NIL }
Local bSet24		:= { || NIL }
Local cCC        	:= SRA->RA_CC
Local cMat       	:= SRA->RA_MAT
Local cNome      	:= SRA->RA_NOME
Local cTnoTrab   	:= SRA->RA_TNOTRAB
Local cFolder		:= ""
Local a140Field  	:= { 'P2_FILIAL', 'P2_MAT', 'P2_CC', 'P2_TURNO', 'P2_DATAATE' }
Local dDtIni     	:= CtoD('  /  /  ')
Local dDtFim     	:= CtoD('  /  /  ')
Local dDtBkp     	:= CtoD('  /  /  ')
Local nElementos 	:= 0.00
Local nOpcNewGd		:= IF( ( nOpcx == 2 ) , 0 , GD_INSERT + GD_UPDATE + GD_DELETE )
Local lOfuscaNom	:= .F.
Local lOfuscaAdm	:= .F.
Local oDlg, oGet , oFont , oGroup , oFolders

Local aFldRot 		:= {'RA_NOME', 'RA_ADMISSA'}
Local aFldOfusca 	:= {}


Private aAC       	:= { STR0003 , STR0001 } // 'Abandona'###'Confirma'
Private aVirtual  	:= {}
Private aTabCalend  := {}
Private aCalend2	:= {}
Private aTurnos		:= {}
Private aExcePer	:= {}
Private aCposFolder	:= {}
Private lGatForceGd	:= .T.
Private lHrsTrbGat	:= .F.

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Coloca o ponteiro do cursor em estado de espera               ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
CursorWait()

Begin Sequence

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Bloqueia Chaves Logicas de Excecoes do Funcionario Antes da   ³
	³montagem do Calendario. Temos que realizar nesse momento pois ³
	³se deixarmos no 2o bloqueio abaixo, o Calendario podera ser di³
	³ferente em virtude de novas excecoes de outra sessao dessa ro ³
	³rotina.                                                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If !Pona140Locks( nOpcX , 'SP2', {}, ProcName() )
       Break
    Endif

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Monta os Folders											   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	For nElementos := 1 To Len( aSeleFolders )
		cFolder	:= SubStr( aSeleFolders[ nElementos ] , 5 )
		IF !Empty( cFolder )
			aAdd( aFolders , "&"+cFolder )
			aAdd( aCposFolder , { SubStr( aSeleFolders[ nElementos ] , 1 , 1 ) , {} , {} , cFolder } )
		EndIF
	Next nElementos

	If Upper( AllTrim( GetMv("MV_PAPEXCE") ) ) == "P" .OR. IsInCallStack("PONA280")
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o Parƒmetro MV_PAPONTA                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !PerAponta(@dDataIni,@dDataFim )
			Return Nil
		EndIf
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Define datas Inicial e Final                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dDataIni := CtoD('01'+Right(DtoC(dDataBase),Len(DtoC(MsDate()))-2),'ddmmyy')
		dDataFim := CtoD(StrZero(f_UltDia(dDataBase),2)+Right(DtoC(dDataBase),Len(DtoC(MsDate()))-2),'ddmmyy')
	Endif

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Cria o Calendario de Marcacoes do Funcionario                 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	SRA->( CriaCalend(	dDataIni	,; //Periodo Inicial
						dDataFim	,; //Periodo Final (Com um Dia a Mais para a Obtencao da Proxima Sequencia)
						RA_TNOTRAB	,; //Turno de Trabalho
						RA_SEQTURN	,; //Sequencia de Turno
						@aTabPadrao	,; //Tabela de Horario Padrao
						@aTabCalend	,; //Calendario de Marcacoes
						RA_FILIAL	,; //Filial do Funcionario
						RA_MAT		,; //Matricula do Funcionario
						SRA->RA_CC	,; //Centro de Custo do Funcionario
						@aTurnos	,; //Array com as Trocas de Turno
						@aExceper	,; //Array com Todas as Excecoes do Periodo ( Apenas quando TOP )
						NIL			,; //Se executa Query para a Montagem da Tabela Padrao
						.F.			 ; //Se executa a funcao se sincronismo do calendario
					 );
		  )
	// Carrega calendário sem considerar as exceções já cadastradas
	SRA->(CriaCalend(	dDataIni	,; //01 -> Data Inicial do Periodo
		 				dDataFim	,; //02 -> Data Final do Periodo
						RA_TNOTRAB	,; //03 -> Turno Para a Montagem do Calendario
						RA_SEQTURN	,; //04 -> Sequencia Inicial para a Montagem Calendario
						NIL			,; //05 -> Array Tabela de Horario Padrao
						@aCalend2	,; //06 -> Array com o Calendario de Marcacoes
						RA_FILIAL	,; //07 -> Filial para a Montagem da Tabela de Horario
						RA_MAT		,; //08 -> Matricula para a Montagem da Tabela de Horario
						SRA->RA_CC	,; //09 -> Centro de Custo para a Montagem da Tabela
						NIL			,; //10 -> Array com as Trocas de Turno
						NIL			,; //11 -> Array com Todas as Excecoes do Periodo
						NIL 		,; //12 -> Se executa Query para a Montagem da Tabela Padrao
						.F.			,; //13 -> Se executa a funcao se sincronismo do calendario
						.T.			,; //14 -> Se Forca a Criacao de Novo Calendario
						NIL 		,; //15 -> Array com marcacoes para tratamento de Turnos Opcionais
						.F. 		 ; //16 -> Se considera as exceções cadastradas
					))
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Numero de elementos para a GetDados				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	nElementos := ( ( dDataFim - dDataIni ) + 1 )

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aAdvSize		:= MsAdvSize()
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
	aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. , .T.}  )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Button Para Consulta dos Horarios da Tabela           ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aButtons := {;
					{	"S4SB014N",;
	   	    			{ || (;
	   	    					SPJExceConPad( 2 , oGet:oBrowse:nAt , @aHeaderAll , @aColsAll , .F. ),;
	   	    				 	IF( ( oFolders:nOption == 2 ),;
	   	    				 		Pona140SetOption( nOpcNewGd , @oGet , oDlg , aObjSize[2] , oFolders:nOption , oFolders:nOption , oFolders , aCposFolder , nElementos , aGdAltera , .T. ),;
	   	    				 		NIL;
	   	    				 	   );
	   	    				 );
	   	    			},;
	       				OemToAnsi( STR0038 ),;	//"Gerar Horas..."
	       				OemToAnsi( STR0138 );	//"Horas"
	           		};
				}

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega Array de Campos Alteraveis                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAlias := 'SP2'

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o cabecalho                                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Private aHeaderAll := {}
	Pona140aHead( a140Field , @aCposFolder , @aFolders )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gerar o array aCols com os Eventos                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Private aColsAll	:= {}
	Private aColsPad	:= {}
	Private aColsRec	:= {}

	dDtBkp := dDataIni
	Pona140aCols(a140Field,aGdAltera,.T.)
	aColsPad	:= aClone( aColsAll )
	aColsAll	:= {}
	aColsRec	:= {}
	dDataIni := dDtBkp
	Pona140aCols(a140Field,@aGdAltera,.F.)

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Salva o Conteudo do aCols                                   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	Private aColsAnt	:= aClone( aColsAll )


   	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Bloqueia Chaves Logicas e Registros de Excecoes do Funcionario³
	³Depois da Montagem do Calendario.							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If !Pona140Locks( nOpcX , 'SP2', aColsRec, ProcName() )
       Break
    Endif

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Restaura o ponteiro do cursor                                 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	CursorArrow()

	//Tratamento dados sensíveis
	If aOfusca[2]
		aFldOfusca 	:= FwProtectedDataUtil():UsrNoAccessFieldsInList( aFldRot ) // CAMPOS SEM ACESSO
		IF aScan( aFldOfusca , { |x| x:CFIELD == "RA_NOME" } ) > 0
			lOfuscaNom	:= FwProtectedDataUtil():IsFieldInList( "RA_NOME" )
		ENDIF
		IF aScan( aFldOfusca , { |x| x:CFIELD == "RA_ADMISSA" } ) > 0
			lOfuscaAdm	:= FwProtectedDataUtil():IsFieldInList( "RA_ADMISSA" )
		ENDIF
	EndIf

	nOpca := 0
	DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
	DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0009 ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL	// 'Manuten‡„o das Exce‡”es'

		@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup TO ( aObjSize[1,3] ),(( aObjSize[1,4])*0.18 )			LABEL OemToAnsi(STR0015) OF oDlg PIXEL	// "Matricula:"
		oGroup:oFont:= oFont
	   	@ aObjSize[1,1] , (( aObjSize[1,4])*0.185 ) GROUP oGroup TO aObjSize[1,3],((aObjSize[1,4])*0.87)		LABEL OemToAnsi(STR0016) OF oDlg PIXEL	// "Nome:"
 		oGroup:oFont:= oFont
	 	@ aObjSize[1,1] , ((aObjSize[1,4])*0.875) GROUP oGroup TO  aObjSize[1,3] ,aObjSize[1,4]		   		LABEL OemToAnsi(STR0037) OF oDlg PIXEL	// "Admiss„o:"
   	   	oGroup:oFont:= oFont

		@ ((aObjSize[1,1]) +10) , ((aObjSize[1,2]) * 2.5)	SAY StrZero(Val(SRA->RA_MAT),Len(SRA->RA_MAT))					SIZE 050,10 OF oDlg PIXEL FONT oFont
		@ ((aObjSize[1,1]) +10) , ((aObjSize[1,4]) * 0.2)	SAY If(lOfuscaNom,Replicate('*',15),OemToAnsi(SRA->RA_NOME)) 	SIZE 146,10 OF oDlg PIXEL FONT oFont
		@ ((aObjSize[1,1]) +10) , ((aObjSize[1,4]) * 0.89)	SAY If(lOfuscaAdm,Replicate('*',10),Dtoc(SRA->RA_ADMISSA))		SIZE 050,10 OF oDlg PIXEL FONT oFont

		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega o Objeto Folder               					   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		oFolders := TFolder():New(	aObjSize[ 2 , 1 ]		,;
									aObjSize[ 2 , 2 ]		,;
									aFolders				,;
									aFolders				,;
									oDlg					,;
									NIL						,;
									NIL						,;
									NIL						,;
									.T.						,;
									.F.						,;
									aObjSize[ 2 , 3 ]		,;
									aObjSize[ 2 , 4 ]		 ;
								 )

		oFolders:bSetOption := { |nNewFolder| Pona140SetOption( nOpcNewGd , @oGet , oDlg , aObjSize[2] , nNewFolder , oFolders:nOption , oFolders , aCposFolder , nElementos , aGdAltera ) }

		bSet15		:= { || Pona140TrfCols( oGet:aCols , oGet:aHeader , @aColsAll , @aHeaderAll , oGet:oBrowse:nAt ),;
							IF( ( oGet:TudoOk()  )	,;
									(;
										nOpca := 1 ,;
										oDlg:End() ;
									),;
									(;
										nOpca := 0 ,;
										.F.;
									);
								);
						}
		bSet24		:= { || oDlg:End() }

	ACTIVATE MSDIALOG oDlg ON INIT ( Eval( oFolders:bSetOption , 1 ) , EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons ) )  CENTERED

	If nOpcA == Confirma .And. nOpcx # 2
		//--Gravacao
		Begin Transaction
			Pona140Grava(cAlias)
			//--Processa Gatilhos
			EvalTrigger()
		End Transaction
	Endif

End Sequence

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Libera Retgistros Locados		                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

FreeLocks( cAlias , NIL , .T. )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade da janela                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cAlias := 'SRA'
dbSelectArea(cAlias)

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³ Fun‡„o   ³Pona140aHead³Autor³ Fernando Joly Siquini ³ Data ³ 14/07/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Descri‡„o³ Criar os Arrays Aheader e aCols dos  dependentes           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Pona140                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Pona140aHead( a140Field , aCposFolder , aFolders )

Local aArea			:= GetArea()
Local aAreaSX3		:= SX3->( GetArea() )
Local aOutros		:= {}
Local aFolderComCampos	:= {}
Local aAuxFolder 	:= {}
Local cCpo			:= ""
Local cP2TrabaVld	:= ""
Local nPosFolder	:= 0.00
Local nX			:= 0

//-- Adiciona o 1 elemento ( Data )
aAdd( aHeaderAll , {;
						STR0017,;	// 'Data'
						"M_DATAATU",;
						"",;
						14,;
						0,;
						".F.",;
						CHR(251),;
						"C",;
						"";
					};
	)
aAdd( aVirtual , "M_DATAATU")

//-- Adiciona o 3 elemento ( Trabalhado )
SX3->( dbSetOrder(2))
IF SX3->( dbSeek( "P2_TRABA" , .F. ) )
	cP2TrabaVld := SX3->X3_VALID
Else
	cP2TrabaVld := "P2TrabaVld()"
EndIF

aAdd( aHeaderAll,  {;
						STR0019 ,;	// 'Trabalhado'
						"P2_TRABA",;
						"@!",;
						1,;
						0,;
						cP2TrabaVld,;
						"",;
						"C",;
						"";
					};
	)

dbSelectArea('Sx3')
SX3->( dbSetOrder( 01 ) )
SX3->( dbseek('SP2') )
While SX3->( !Eof() .And. (X3_ARQUIVO == 'SP2') )
	cCpo := Upper( AllTrim( SX3->X3_CAMPO ) )
	IF (;
			x3uso(SX3->X3_USADO) .And. ;
			cNivel >= SX3->X3_NIVEL .And. ;
			aScan(a140Field,cCpo) == 0 .And. ;
			cCpo # "P2_TRABA";
		)
		SX3->(;
					aAdd(aHeaderAll,{	AllTrim(X3Titulo() ),;
										cCpo,;
										X3_PICTURE,;
										X3_TAMANHO,;
										X3_DECIMAL,;
										IF( fContemStr( X3_CAMPO , "P2_TIPODIA" , .T. ) , "Pn140TipoDia(M->P2_TIPODIA)", X3_VALID	),;
										"",;
										X3_TIPO	,;
										"";
								 };
						 );
				)
		IF ( ( nPosFolder := aScan( aCposFolder , { |x| x[1] == SX3->X3_FOLDER } ) ) > 0.00 )
			aAdd( aCposFolder[ nPosFolder , 02 ] , cCpo )
			//Identificar os folders que possuem campos (a busca eh feita pelo nome do folder)
			IF Empty(aScan( aFolderComCampos , { |x| x == aCposFolder[ nPosFolder , 04 ] } ) )
				AADD(aFolderComCampos, aCposFolder[ nPosFolder , 04 ])
		    Endif
		Else
			aAdd( aOutros , cCpo )
		EndIF
		IF ( SX3->X3_ConText == 'V' )
			Aadd( aVirtual , cCpo )
		EndIF
	EndIF
	SX3->( dbSkip() )
End While

//Inclusao das duas colunas para o uso WalkThru
// Inclui coluna de registro atraves de funcao generica
ADHeadRec("SP2",aHeaderAll)

//Eliminar Folders que nao possuem campos validos (conforme nao usado e nivel do usuario)
aAuxFolder := {}
For nX:= 1 to Len(aFolderComCampos)
	IF ( ( nPosFolder := aScan( aFolders , { |x| aFolderComCampos[nX] $ x } ) ) > 0.00 )
		aadd(aAuxFolder,  aFolders[nPosFolder] )
    Endif
Next nX
aFolders	:= aClone(aAuxFolder)

//Eliminar Campos de Folders que nao possuem campos validos (conforme nao usado e nivel do usuario)
aAuxFolder := {}
For nX:= 1 to len(aCposFolder)
	IF ( ( nPosFolder := aScan( aFolderComCampos , { |x| x == aCposFolder[nX,4]  } ) ) > 0.00 )
		aadd(aAuxFolder,  aCposFolder[nX] )
    Endif
Next nX
aCposFolder	:=	aClone(aAuxFolder)

IF !Empty( aOutros )
	aAdd( aFolders , "&"+STR0048 )
	aAdd( aCposFolder , { "" , aClone( aOutros ) , {} , {} , STR0048 } )
EndIF

For nPosFolder := 1 To Len( aCposFolder )
	aAdd( aCposFolder[ nPosFolder , 02 ] , "M_DATAATU" )
	aAdd( aCposFolder[ nPosFolder , 02 ] , "P2_TRABA"  )
	aAdd( aCposFolder[ nPosFolder , 02 ] , "P2_MOTIVO" )
	aAdd( aCposFolder[ nPosFolder , 03 ] , "M_DATAATU" )
	IF ( nPosFolder <> 1 )
		aAdd( aCposFolder[ nPosFolder , 03 ] , "P2_TRABA"  )
		aAdd( aCposFolder[ nPosFolder , 03 ] , "P2_MOTIVO" )
	EndIF
	aAdd( aCposFolder[ nPosFolder , 03 ] , "P2_TIPODIA"	)
Next nPosFolder

For nPosFolder:= 1 to Len(aCposFolder)
	aAdd( aCposFolder[ nPosFolder , 02 ] , "P2_ALI_WT" )
	aAdd( aCposFolder[ nPosFolder , 02 ] , "P2_REC_WT" )
Next

RestArea( aAreaSX3 )
RestArea( aArea )

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pona140aCols³Autor³ Mauro                 ³ Data ³ 23/04/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Criar os Arrays Aheader e aCols dos APONTAMENTOS           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Pona140o                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Pona140aCols(a140Field,aAlter,lPadrao)

Local aArea			:= GetArea()
Local aExcecoes 	:= {}
Local cAlias    	:= "SP2"
Local cFil      	:= xFilial( "SP2" , SRA->RA_FILIAL )
Local cFilSR6		:= xFilial( "SR6" , SRA->RA_FILIAL )
Local cTno			:= SRA->RA_TNOTRAB
Local cCpo			:= ""
Local cTipoDia		:= ""
Local dDataAtu  	:= CtoD("//")
Local nX        	:= 0.00
Local nPos			:= 0.00
Local nVezes		:= ( ( dDataFim - dDataIni ) + 1 )
Local nPosCalend	:= 0.00
Local nLoop			:= 0.00
Local nLoops		:= Len( aHeaderAll )

dbSelectArea(cAlias)
( cAlias )->( dbSetOrder(3) )

aColsAll := Array( nVezes , ( nLoops + 1 ) )
--dDataIni
For nX := 1 To nVezes
	dDataAtu := ( dDataIni + nX )
	aColsAll[ nX , 01 ] := ( DtoC(dDataAtu) + ' - ' + DiaSemana( dDataAtu , 3 ) )	//-- Datas do mes atual
	aExcecoes	:= {}
	nPosCalend	:= aScan( If(!lPadrao, aTabCalend, aCalend2) , { |x| x[CALEND_POS_DATA] == dDataAtu .and. x[CALEND_POS_TIPO_MARC] == "1E" } )
	IF ( nPosCalend > 0.00 )
		If !lPadrao
			cTipoDia	:= aTabCalend[ nPosCalend , CALEND_POS_TIPO_DIA	]
			cTno 		:= aTabCalend[ nPosCalend , CALEND_POS_SEQ_TURNO	]
		Else
			cTipoDia	:= aCalend2[ nPosCalend , CALEND_POS_TIPO_DIA	]
			cTno 		:= aCalend2[ nPosCalend , CALEND_POS_SEQ_TURNO	]
		EndIf
	Else
		cTipoDia	:= ""
		cTno 		:= SRA->RA_TNOTRAB
	EndIF
	SR6->( MsSeek( cFilSR6 + cTno , .F. ) )
	//Verifica se Funcionario Tem Excecao e Posiciona o Recno.
	IF !lPadrao .AND. GetExcecoes(;
						@aExcecoes		,;	// 01 - Array a ser Carregado com as Exce‡oes
						cTno			,;	// 02 - Turno de Trabalho do Funcion rio
						SRA->RA_CC		,;	// 03 - Centro de Custo do Funcion rio
						SRA->RA_FILIAL	,;	// 04 - Filial do Funcionario
						SRA->RA_MAT		,;	// 05 - Matricula do Funcion rio
						dDataAtu		,;	// 06 - Data a ser pesquisada
						cTipoDia		,;	// 07 - Tipo do Dia Para a Excecao
						aExcePer		,;	// 08 - Array com Todas as Exce‡oes do Periodo
						NIL				,;	// 09 - Periodo Inicial Para Carga de aExcePer
						NIL				,;	// 10 - Periodo Final   Para Carga de aExcePer
						.F.				,;	// 11 - True para Carregar Todas as Excecoes do Periodo
						NIL			 	,;	// 12 - Mostrar Dialogo na IndRegua
						.T.				 ;	// 13 - Se, quando pesquisa em array, forca o posicionamento no SP2
					)
		//-- Carrega 1 Excecao Diaria
		aColsAll[ nX , 02 ] := SP2->P2_TRABA	//-- Tipo do Dia
		For nLoop := 1 To nLoops
			cCpo := aHeaderAll[ nLoop , 02 ]
			If cCpo $ "P2_ALI_WT/P2_REC_WT"
               Loop
			Endif
			IF ( cCpo $ "P2_TRABA/M_DATAATU/GHOSTCOL" )
				IF ( cCpo $ "GHOSTCOL" )
					aColsAll[ nX , nLoop ] := ""
				EndIF
				Loop
			EndIF
			IF ( aScan( aVirtual , cCpo ) > 0.00 )
				aColsAll[ nX , nLoop ] := CriaVar( cCpo , NIL , NIL , .F. )
			Else
				aColsAll[ nX , nLoop ] := &( cAlias + "->" + cCpo )
			EndIF
		Next nLoop

		// Gravando o Alias para o uso no WalkThru
		// Somente apresentar o Recno do registro quando a matricula for igual ao SRA->RA_MAT
		IF( P2_MAT == SRA->RA_MAT )
			aColsAll[ nX , nLoop-2 ] 	:= cAlias
			aColsAll[ nX , nLoop-1 ] 	:= ( cAlias )->(Recno())
		EndIf
		aColsAll[ nX , nLoop ] 		:=  .F.

		//-- Adiciona informacoes sobre os registros
		aAdd( aColsRec , ( cAlias )->( IF( ( P2_MAT == SRA->RA_MAT ) , Recno() , 0 ) ) )
	Else //-- Inclui 1 Elemento Vazio
		aColsAll[ nX , 02 ]	:= Space( TamSx3("P2_TRABA")[1] )
		For nLoop := 1 To nLoops
			cCpo := aHeaderAll[ nLoop , 02 ]
			If cCpo $ "P2_ALI_WT/P2_REC_WT"
               Loop
			Endif

			IF ( cCpo $ "P2_TRABA/M_DATAATU/GHOSTCOL" )
				IF ( cCpo $ "GHOSTCOL" )
					aColsAll[ nX , nLoop ] := ""
				EndIF
				Loop
			EndIF
			aColsAll[ nX , nLoop ] := CriaVar( cCpo , NIL , NIL , .F. )
			IF ( nPosCalend > 0.00 )
				IF ( cCpo == "P2_NONAHOR" )
					aColsAll[ nX , nLoop ]	:= If(lPadrao, aCalend2[ nPosCalend , CALEND_POS_PG_NONA_HORA ], aTabCalend[ nPosCalend , CALEND_POS_PG_NONA_HORA ])
				ElseIF ( cCpo == "P2_CODHEXT" )
					aColsAll[ nX , nLoop ]	:= If(lPadrao, aCalend2[ nPosCalend , CALEND_POS_TIPO_HE_NOR ], aTabCalend[ nPosCalend , CALEND_POS_TIPO_HE_NOR ])
				ElseIF ( cCpo == "P2_CODHNOT" )
					aColsAll[ nX , nLoop ]	:= If(lPadrao, aCalend2[ nPosCalend , CALEND_POS_TIPO_HE_NOT ], aTabCalend[ nPosCalend , CALEND_POS_TIPO_HE_NOT ])
				EndIF
			EndIF
		Next nLoop

		// Gravando o Alias para o uso no WalkThru
		// Somente apresentar o Recno do registro quando a matricula for igual ao SRA->RA_MAT
		IF( P2_MAT == SRA->RA_MAT )
			aColsAll[ nX , nLoop-2 ] 	:= cAlias
			aColsAll[ nX , nLoop-1 ] 	:= ( cAlias )->(Recno())
		EndIf
		aColsAll[ nX , nLoop ] 		:=  .F.

		//-- Adiciona informacoes sobre os registros
		aAdd( aColsRec , 0 )
	EndIf
Next nX

If !lPadrao
	For nX := 1 To nLoops
		IF ( aScan( aVirtual , aHeaderAll[ nX , 02 ] ) == 0.00 )
			aAdd( aAlter , aHeaderAll[ nX , 02 ] )
		EndIF
	Next nX
EndIf

//-- Restaura Integridade do Sistema
RestArea( aArea )

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pona140Grava³Autor³ J. Ricardo            ³ Data ³ 06.08.94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava no arquivo de Dependentes                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ gp020Grava                                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pona140Grava(cAlias)

Local aArea			:= GetArea()
Local aRecnosRep	:= {}
Local aUsers		:= {}
Local cCampo		:= ''
Local cFil			:= xFilial( 'SP2' , SRA->RA_FILIAL )
Local cTraba		:= ''
Local cMsgErr		:= ''
Local dData			:= Ctod("//")
Local lAddNew		:= .F.
Local nX			:= 0.00
Local nY			:= 0.00
Local nFornX		:= 0.00
Local nFornY		:= 0.00
Local nSX3TamCC		:= TamSx3("P2_CC")[1]
Local nSX3TamTno	:= TamSx3("P2_TURNO")[1]
Local nPosData		:= GdFieldPos('M_DATAATU',aHeaderAll)
Local nPosTrab		:= GdFieldPos('P2_TRABA',aHeaderAll)
Local nPos			:= 0
Local lTSREP		:= SuperGetMv( "MV_TSREP" , NIL , .F. )

Local IncluiBkp 	:= Inclui
Local AlteraBkp 	:= Altera

Private oObjREP		:= Nil

dbSelectArea(cAlias)

nFornX	:= Len( aColsRec )
For nX := 1 To nFornX
	IF ( aScan( aRecnosRep , { |x| x[2] == aColsRec[ nX ] } ) > 0.00 )
		aColsRec[ nX ] := 0.00
	Else
		aAdd( aRecnosRep , { nX , aColsRec[ nX ] , 1 } )
	EndIF
Next nX

If lTSREP .And. !Empty(SRA->RA_RHEXP)
	aAdd( aUsers, SRA->RA_MAT )
EndIf

nFornX	:= Len( aColsAll )
For nX := 1 To nFornX //-- Linhas

	dData	:= CtoD( Left( aColsAll[ nX , nPosData ] , Len( DTOC( MsDate() ) ) ) ,'ddmmyy' )
	cTraba	:= aColsAll[ nX ,nPosTrab ]

	// Se for uma exceção por período, forço a alteração do registro para que ele fique salvo 
	// individualmente assim como nos demais dias dentro do período
	nPos := aScan( aExcePer, { |x| x[2] == dData } )
	If nPos > 0 .And. aExcePer[nPos , 2] <> aExcePer[nPos , 3]
		nReg := 0
	Else
		nReg := aColsRec[ nX ]
	EndIf
	
	//-- Grava somente registros Com Recno Zerados ou que foram Alterados
	If ( ( lAddNew := Empty( nReg ) ) .or. !fCompArray( aColsAnt[ nX ] , aColsAll[ nX ] ) )

		SP2->( DbSetOrder( 3 ) )

		//-- Grava somente se existir ou se houver exceção
		//-- Inclui ou Altera registro
		If Empty( cTraba ) .And. lAddNew
			Loop
		ElseIf SP2->(DbSeek(cFil + SRA->RA_MAT + Space(nSX3TamCC) + Space(nSX3TamTno) + DTOS(dData)))
			lAddNew := .F.
		Else
			lAddNew := .T.
		EndIf

		//-- Inicializa a integracao via WebServices TSA
		If lTSREP
			oObjREP := PTSREPOBJ():New()
		Endif

		IF RecLock( "SP2" , lAddNew )
			Inclui := lAddNew
			Altera := !lAddNew

			//-- Grava Excecoes j  existentes ou n„o
			IF !Empty( cTraba )

				//-- Campos n„o mostrados na Tela ( a140Field )
				SP2->P2_FILIAL	:= cFil
				SP2->P2_MAT		:= SRA->RA_MAT
				SP2->P2_CC		:= Space(nSX3TamCC)
				SP2->P2_TURNO	:= Space(nSX3TamTno)
				SP2->P2_DATA    := dData
				SP2->P2_DATAATE := dData
				SP2->P2_TRABA	:= cTraba

				nFornY := ( Len( aColsAll[nX] ) -1 )
				For nY := 1 To nFornY  //-- Colunas
					cCampo    := aHeaderAll[nY,2]
					xConteudo := aColsAll[ nX , nY ]
					IF ( aScan( aVirtual , cCampo ) == 0 )
						SP2->( &cCampo ) := xConteudo
					EndIF
				Next nY

				If lTSREP

					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Verifica se o periodo de excecao esta presente ou futuro para envio ao TSA     ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
					// Verifica se a data de Inicio for maior/igual que a data de hoje
					// Verifica se nao existe data final de afastamento
					// Verifica se a data final for maior/igual que a data de hoje
					// Foi utilizado o Date() ao inves do dDataBase para pegar a data do computador
					If (SP2->P2_DATA >= Date() .Or. Empty(SP2->P2_DATAATE) .Or. (!Empty(SP2->P2_DATAATE) .And. SP2->P2_DATAATE >= Date()))

						/*/
						ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						³ Executa o WebServices TSA - Dias nao trabalhados             ³
						ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
						If oObjREP:WSException( If(lAddNew, 1, 2), aUsers )
							/*/
							ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							³ Grava o Log do controle de exportacao WebServices TSA        ³
							ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
							oObjRep:WSUpdRHExp( "SP2" )

						Endif
					Endif
				Endif
			//-- Deleta Excecoes que foram alteradas para " "
			Else

				IF ( SP2->P2_MAT == SRA->RA_MAT )
					IF SP2->( !FkDelete( @cMsgErr ) )
						SP2->( RollBackDelTran( cMsgErr ) )
					EndIF

					Inclui := .F.
					Altera := .F.

					If lTSREP
						/*/
						ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						³ Executa o WebServices TSA - Dias nao trabalhados             ³
						ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
						oObjREP:WSException( 3, aUsers )
					Endif

				EndIF

			EndIF

			SP2->( MsUnLock() )

			If lIntegDef

				// indica para o EAI em qual rotina chamar o retorno da response
				SetRotInteg('PONA090')
				FwIntegdef( "PONA090" )

				If !PI090GetStatus()[1]
					Help(,,'Pona140Grava',, PI090GetStatus()[2],1,0)
				EndIf
			EndIf

		EndIF

	EndIF

Next nX

Inclui := IncluiBkp
Altera := AlteraBkp

//-- Restaura Integridade do Sistema
RestArea( aArea )

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³                   ROTINAS DE CRITICA DE CAMPOS                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pona140LinOk³Autor³ Marinaldo de Jesus    ³ Data ³21/02/2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Critica linha digitada                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pona140LinOk( o , lShowMsg )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis de Inicializacao Obrigatoria					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Local aSvCols	:= aClone( aCols )
Local aSvHeader	:= aClone( aHeader )
Local aHorarios	:= Array( 8 )
Local lExcluiu	:= .F.
Local lRet		:= .T.
Local nTotHoras	:= 0.00

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis que serao inicializadas no Corpo da Funcao		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Local cCodHExt
Local cCodHNot
Local cHerdHor
Local cTraba
Local cMotivo
Local cMsgInfo
Local nPosE1
Local nPosS1
Local nPosE2
Local nPosS2
Local nPosE3
Local nPosS3
Local nPosE4
Local nPosS4
Local nPosHExt
Local nPosHNot
Local nPosTraba
Local nPosMotiv
Local nPosHrt
Local nPosHr2
Local nPosHr3
Local nPosHr4
Local nPosTot
Local nPosHi1
Local nPosHi2
Local nPosHi3
Local nPosHerd
Local nHorMeno
Local nHorMais
Local lPna140Val := ExistBlock( "PNA140VAL")
Local nPosDif

DEFAULT lShowMsg := .T.

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Transfere as Informacoes para os Arrays Princiais			  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Pona140TrfCols( aCols , aHeader , @aColsAll , @aHeaderAll , n )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ A validacao deve ser Sempe feira sobre o Arrays Principais  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aCols 	:= aClone( aColsAll )
aHeader	:= aClone( aHeaderAll )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Obtem o posicionamento dos Campos							  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
nPosE1		:= GdFieldPos( "P2_ENTRA1"	)
nPosS1		:= GdFieldPos( "P2_SAIDA1"	)
nPosE2		:= GdFieldPos( "P2_ENTRA2"	)
nPosS2		:= GdFieldPos( "P2_SAIDA2"	)
nPosE3		:= GdFieldPos( "P2_ENTRA3"	)
nPosS3		:= GdFieldPos( "P2_SAIDA3"	)
nPosE4		:= GdFieldPos( "P2_ENTRA4"	)
nPosS4		:= GdFieldPos( "P2_SAIDA4"	)
nPosHExt	:= GdFieldPos( "P2_CODHEXT" )
nPosHNot	:= GdFieldPos( "P2_CODHNOT" )
nPosTraba	:= GdFieldPos( "P2_TRABA"   )
nPosMotiv	:= GdFieldPos( "P2_MOTIVO"  )
nPosHrt		:= GdFieldPos( "P2_HRSTRAB" )
nPosHr2		:= GdFieldPos( "P2_HRSTRA2" )
nPosHr3		:= GdFieldPos( "P2_HRSTRA3" )
nPosHr4		:= GdFieldPos( "P2_HRSTRA4" )
nPosTot		:= GdFieldPos( "P2_TOTHORA" )
nPosHi1		:= GdFieldPos( "P2_HRINTV1" )
nPosHi2		:= GdFieldPos( "P2_HRINTV2" )
nPosHi3		:= GdFieldPos( "P2_HRINTV3" )
nPosHerd	:= GdFieldPos( "P2_HERDHOR" )

lHrsTrbGat := .T.

//Grava Horas Trabalhadas 1a. Jornada
IF !Empty( nPosHrt )
	aCols[ n , nPosHrt ] := fHrsTrabGat("H","SP2","GD","1")
EndIF

//Grava Horas Trabalhadas 2a. Jornada
IF !Empty( nPosHr2 )
	aCols[ n , nPosHr2 ] := fHrsTrabGat("H","SP2","GD","2")
EndIF

//Grava Horas Trabalhadas 3a. Jornada
IF !Empty( nPosHr3 )
	aCols[ n , nPosHr3 ] := fHrsTrabGat("H","SP2","GD","3")
EndIF

//Grava Horas Trabalhadas 4a. Jornada
IF !Empty( nPosHr4 )
	aCols[ n , nPosHr4 ] := fHrsTrabGat("H","SP2","GD","4")
EndIF

//Grava Horas 1o. Intervalo
IF !Empty( nPosHi1 )
	aCols[ n , nPosHi1 ] := fHrsTrabGat("I","SP2","GD","1")
EndIF

//Grava Horas 2o. Intervalo
IF !Empty( nPosHi2 )
	aCols[ n , nPosHi2 ] := fHrsTrabGat("I","SP2","GD","2")
EndIF

//Grava Horas 3o. Intervalo
IF !Empty( nPosHi3 )
	aCols[ n , nPosHi3 ] := fHrsTrabGat("I","SP2","GD","3")
EndIF

//Grava Total de Horas ( Trabalhadas + Intervalo )
IF !Empty( nPosTot )
	aCols[ n , nPosTot ] := fHrsTrabGat( "T" , "SP2" , "GD" )
EndIF

aFill( aHorarios , 0 )

//-- Campos da Exce‡„o
aHorarios[ 1 ]	:= aCols[ n , nPosE1	]
aHorarios[ 2 ]	:= aCols[ n , nPosS1	]
aHorarios[ 3 ]	:= aCols[ n , nPosE2	]
aHorarios[ 4 ]	:= aCols[ n , nPosS2	]
aHorarios[ 5 ]	:= aCols[ n , nPosE3	]
aHorarios[ 6 ]	:= aCols[ n , nPosS3	]
aHorarios[ 7 ]	:= aCols[ n , nPosE4	]
aHorarios[ 8 ]	:= aCols[ n , nPosS4	]
cCodHExt		:= aCols[ n , nPosHExt	]
cCodHNot		:= aCols[ n , nPosHNot	]
cTraba			:= aCols[ n , nPosTraba	]
cMotivo			:= aCols[ n , nPosMotiv	]
cHerdHor		:= If( !EMPTY(nPosHerd), aCols[n, nPosHerd], 'N' )

lExcluiu		:= !Empty(aColsAnt[n , nPosTraba]) .And. Empty(cTraba)

Begin Sequence
	//-- Consiste Excecoes
	If !lExcluiu .And. !fCompArray( aColsAnt[ n ] , aCols[ n ] ) .AND. !fCompArray( aColsPad[ n ] , aCols[ n ], @nPosDif) .And. nPosDif != Len(aColsPad[n]) - 1
		IF !Empty(cTraba)
			IF ( ( cTraba == "S" ) .and. ( aEval( aHorarios , { |x| nTotHoras += x } ) , nTotHoras ) == 0.00 .and. cHerdHor <> 'S' )
				cMsgInfo := STR0045  //"Para Dias Trabalhados sera necessario o preenchimento dos horarios"
				lRet := .F.
				Break
			EndIf
			IF Empty(cMotivo)
				cMsgInfo := STR0046	//"O campo: "
				cMsgInfo += aHeader[ nPosMotiv , 01 ]
				cMsgInfo += STR0047	//" ‚ de preenchimento obrigat¢rio."
				cMsgInfo += CRLF
				cMsgInfo += CRLF
				cMsgInfo += STR0049	//"Folder: "
				cMsgInfo += Pona140FldRetPos( aHeader[ nPosMotiv , 02 ]  )
				lRet := .F.
				Break
			EndIF
			IF Empty(cCodHExt)
				cMsgInfo := STR0046	//"O campo: "
				cMsgInfo += aHeader[ nPosHExt , 01 ]
				cMsgInfo += STR0047	//" ‚ de preenchimento obrigat¢rio."
				cMsgInfo += CRLF
				cMsgInfo += CRLF
				cMsgInfo += STR0049	//"Folder: "
				cMsgInfo += Pona140FldRetPos( aHeader[ nPosHExt , 02 ]  )
				lRet := .F.
				Break
			EndIF
			IF Empty( cCodHNot )
				cMsgInfo := STR0046	//"O campo: "
				cMsgInfo += aHeader[ nPosHNot , 01 ]
				cMsgInfo += STR0047	//" ‚ de preenchimento obrigat¢rio."
				cMsgInfo += CRLF
				cMsgInfo += CRLF
				cMsgInfo += STR0049	//"Folder: "
				cMsgInfo += Pona140FldRetPos( aHeader[ nPosHNot , 02 ]  )
				lRet := .F.
				Break
			EndIF
			//Verifica se Existe Saida de Intervalo sem Entrada correspondente
			IF ( ( ( aCols[ n , nPosHi1 ] <> 0 ) .or. ( GdFieldGet( 'P2_INTERV1' ) == "S" ) ) .and. ( aCols[ n , nPosHr2 ] == 0.00 ) )
				lRet		:= .F.
				cMsgInfo	:= STR0040  //"Os Horarios n„o podem terminar com uma saida de intervalo"
				cMsgInfo	+= CRLF
				cMsgInfo	+= CRLF
				cMsgInfo	+= STR0041	//"O intervalo: "
				cMsgInfo	+= " 1 "
				cMsgInfo	+= STR0042  //"Nao possui a entrada correspondente"
				cMsgInfo	+= CRLF
				cMsgInfo	+= CRLF
				cMsgInfo	+= STR0043  //"Altere o conteudo do campo: "
				cMsgInfo	+= aHeader[ GdFieldPos( 'P2_INTERV1' ) , 01 ]
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= STR0049	//"Folder: "
				cMsgInfo 	+= Pona140FldRetPos( 'P2_INTERV1' )
				cMsgInfo	+= CRLF
				cMsgInfo	+= CRLF
				cMsgInfo    += STR0044	//"ou informe Hor rio nos campos: "
				cMsgInfo	+= aHeader[ GdFieldPos( 'P2_ENTRA2' ) , 01 ]
				cMsginfo	+= " / "
				cMsgInfo	+= aHeader[ GdFieldPos( 'P2_SAIDA2' ) , 01 ]
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= STR0049	//"Folder: "
				cMsgInfo 	+= Pona140FldRetPos( 'P2_ENTRA2' )
				Break
			EndIF
			//Verifica se Existe Saida de Intervalo sem Entrada correspondente
			IF ( ( ( aCols[ n , nPosHi2 ] <> 0 ) .or. ( GdFieldGet( 'P2_INTERV2' ) == "S" ) ) .and. ( aCols[ n , nPosHr3 ] == 0.00 ) )
				lRet		:= .F.
				cMsgInfo	:= STR0040  //"Os Horarios n„o podem terminar com uma saida de intervalo"
				cMsgInfo	+= CRLF
				cMsgInfo	+= CRLF
				cMsgInfo	+= STR0041	//"O intervalo: "
				cMsgInfo	+= " 2 "
				cMsgInfo	+= STR0042  //"Nao possui a entrada correspondente"
				cMsgInfo	+= CRLF
				cMsgInfo	+= CRLF
				cMsgInfo	+= STR0043  //"Altere o conteudo do campo: "
				cMsgInfo	+= aHeader[ GdFieldPos( 'P2_INTERV2' ) , 01 ]
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= STR0049	//"Folder: "
				cMsgInfo 	+= Pona140FldRetPos( 'P2_INTERV2' )
				cMsgInfo	+= CRLF
				cMsgInfo	+= CRLF
				cMsgInfo    += STR0044	//"ou informe Hor rio nos campos: "
				cMsgInfo	+= aHeader[ GdFieldPos( 'P2_ENTRA3' ) , 01 ]
				cMsginfo	+= " / "
				cMsgInfo	+= aHeader[ GdFieldPos( 'P2_SAIDA3' ) , 01 ]
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= STR0049	//"Folder: "
				cMsgInfo 	+= Pona140FldRetPos( 'P2_SAIDA3' )
				Break
			EndIF
			//Verifica se Existe Saida de Intervalo sem Entrada correspondente
			IF ( ( ( aCols[ n , nPosHi3 ] <> 0 ) .or. ( GdFieldGet( 'P2_INTERV3' ) == "S" ) ) .and. ( aCols[ n , nPosHr4 ] == 0.00 ) )
				lRet		:= .F.
				cMsgInfo	:= STR0040  //"Os Horarios n„o podem terminar com uma saida de intervalo"
				cMsgInfo	+= CRLF
				cMsgInfo	+= CRLF
				cMsgInfo	+= STR0041	//"O intervalo: "
				cMsgInfo	+= " 3 "
				cMsgInfo	+= STR0042  //"Nao possui a entrada correspondente"
				cMsgInfo	+= CRLF
				cMsgInfo	+= CRLF
				cMsgInfo	+= STR0043  //"Altere o conteudo do campo: "
				cMsgInfo	+= aHeader[ GdFieldPos( 'P2_INTERV3' ) , 01 ]
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= STR0049	//"Folder: "
				cMsgInfo 	+= Pona140FldRetPos( 'P2_INTERV3' )
				cMsgInfo	+= CRLF
				cMsgInfo	+= CRLF
				cMsgInfo    += STR0044	//"ou informe Hor rio nos campos: "
				cMsgInfo	+= aHeader[ GdFieldPos( 'P2_ENTRA4' ) , 01 ]
				cMsginfo	+= " / "
				cMsgInfo	+= aHeader[ GdFieldPos( 'P2_SAIDA4' ) , 01 ]
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= STR0049	//"Folder: "
				cMsgInfo 	+= Pona140FldRetPos( 'P2_SAIDA4' )
				Break
			EndIF
			//Consiste HorMeno
			IF ( ( nHorMeno := GdFieldGet("P2_HORMENO") ) <= 0.00 )
				lRet := .F.
				cMsgInfo	:= STR0046  //"O Campo: "
				cMsgInfo	+= aHeader[ GdFieldPos( "P2_HORMENO" ) , 01 ]
				cMsgInfo    += STR0047	//" ‚ de preenchimento obrigat¢rio."
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= STR0049	//"Folder: "
				cMsgInfo 	+= Pona140FldRetPos( "P2_HORMENO" )
				Break
			EndIF
			//Consiste HorMais
			IF ( ( nHorMais := GdFieldGet("P2_HORMAIS") ) <= 0.00 )
				lRet := .F.
				cMsgInfo	:= STR0046  //"O Campo: "
				cMsgInfo	+= aHeader[ GdFieldPos( "P2_HORMAIS" ) , 01 ]
				cMsgInfo    += STR0047	//" ‚ de preenchimento obrigat¢rio."
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= CRLF
				cMsgInfo 	+= STR0049	//"Folder: "
				cMsgInfo 	+= Pona140FldRetPos( "P2_HORMAIS" )
				Break
			EndIF
		Else
			lRet := .F.
			cMsgInfo	:= STR0046  //"O Campo: "
			cMsgInfo	+= aHeader[ GdFieldPos( "P2_TRABA" ) , 01 ]
			cMsgInfo    += STR0047	//" ‚ de preenchimento obrigat¢rio."
			cMsgInfo 	+= CRLF
			cMsgInfo 	+= CRLF
			cMsgInfo 	+= STR0049	//"Folder: "
			cMsgInfo 	+= Pona140FldRetPos( "P2_TRABA" )
		EndIF
		If lPna140Val
			IF ( ValType( lPeRet := ExecBlock("PNA140VAL",.F.,.F.,{aCols, aHeader}) ) == "L" )
				lRet		:= lPeRet
				//Nao exibe mensagens quando o PE retornar falso. Tratamento de erro deve ser feito dentor do PE
				lShowMsg := lRet
			EndIF
		EndIf
	EndIf
End Sequence

IF !( lRet)
	IF ( lShowMsg )
		IF !Empty( cMsgInfo )
			//"Existe inconsistˆncias na Exce‡„o"
			MsgInfo( OemToAnsi( cMsgInfo ) , OemToAnsi( STR0039 ) )
		Else
			Help(' ',1,'PONA140OBR')
		EndIF
	EndIF
Else
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Transfere as Informacoes para os Arrays Especificos		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	Pona140TrfCols( aCols , aHeader , @aSvCols , @aSvHeader , n )
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Transfere as Informacoes para os Arrays Princiais			  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	Pona140TrfCols( aCols , aHeader , @aColsAll , @aHeaderAll , n )
EndIF

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura os Arrays Especificos							  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aCols 	:= aClone( aSvCols	 )
aHeader := aClone( aSvHeader )

lHrsTrbGat := .F.

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pona140TudOk³Autor³ Marinaldo de Jesus    ³ Data ³26/09/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Critica tudo antes de salvar                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pona140TudOk(o)

Local aSvCols	:= aClone( aCols )
Local aSvHeader	:= aClone( aHeader )
Local lRet		:= .T.
Local nI		:= 0.00
Local nItera	:= Len( aCols )
Local nSvn		:= n

For nI := 1 To nItera
	n := nI
	IF !( lRet := Pona140LinOk( o ) )
		Exit
	EndIF
Next nI

n := nSvn

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura os Arrays Especificos							  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aCols 	:= aClone( aSvCols  )
aHeader := aClone( aSvHeader )

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pn140VldTr³ Autor ³ Marinaldo de Jesus    ³ Data ³21/02/2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida o campo "Trab?" e altera campos no aCols            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fPn140VldTrab(cTrab)

Local cData		:= ""
Local lRet		:= .T.
Local nPosdAtu	:= GdFieldPos( 'M_DATAATU' )
Local nPosMoti	:= GdFieldPos( 'P2_MOTIVO' )

IF Len( cTrab ) == 0.00
	cTrab+= Space(01)
EndIF

IF !cTrab $ "SNDC "
	lRet := .F.
Else
	IF !cTrab $ "S "
		cData := Space(1) + Transform(Left(aCols[n,nPosdAtu],Len(DTOC(MsDate()))),'@D')
		IF ( nPosMoti > 0.00 )
			aCols[n, nPosMoti] := Padr( "** "  + IF(cTrab=="N",STR0030 ,If(cTrab=="C",STR0031 ,STR0032 )) + cData + " **" , TamSx3("P2_MOTIVO")[1] ) // 'Nao Trabalhado'###'Compensado'###'D.S.R.'
		EndIF
	ElseIF Empty(cTrab) //Limpa o motivo da Excecao
		IF ( nPosMoti > 0.00 )
			aCols[n, nPosMoti] := Space( TamSx3("P2_MOTIVO")[1] )
		EndIF
	ElseIF cTrab == "S"
		IF ( nPosMoti > 0.00 )
			aCols[ n , nPosMoti ] := Padr( "** " + STR0036 + " **" , TamSx3("P2_MOTIVO")[1] ) // 'Excecao Trabalhada'
		EndIF
	EndIF
EndIF

Return( lRet )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pn140TipoDia³ Autor ³Marinaldo de Jesus    ³ Data ³26/06/2001³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validar o campo P2_TIPODIA                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn140TipoDia()												 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRet                                                	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA140                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Pn140TipoDia( cTipoDia )

Local lRet			:= .T.
Local nPosTipoDia	:= GdFieldPos("P2_TIPODIA")

cTipoDia := IF( Len( cTipoDia ) == 0.00 , Space(01) , cTipoDia )

IF ( lRet := ( cTipoDia $ " SNDC" ) )
	IF Empty( cTipoDia )
		aCols[ n , nPosTipoDia ] := cTipoDia
	EndIF
EndIF

Return( lRet )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³P2TrabaVld  ³ Autor ³Marinaldo de Jesus    ³ Data ³08/09/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validar o campo P2_TRABA                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P2TrabaVld()   												 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lP2TrabaOk                                          	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³X3_VALID para o campo P2_TRABA                               ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P2TrabaVld()

Local cVar			:= &( ReadVar() )
Local cData			:= ""
Local cCpo			:= ""
Local dData			:= Ctod("//")
Local lP2TrabaOk	:= .T.
Local lGetDados		:= .F.
Local lAlterou		:= .F.
Local nPosCalend	:= 0.00
Local nAt			:= 0.00
Local nLoop 		:= 0.00
Local nLoops		:= 0.00

Begin Sequence

	lGetDados := (;
					( Type( "aHeader" ) == "A" )		.and. ;
					( Type( "aCols"	  ) == "A" )		.and. ;
					( GdFieldPos("P2_TRABA") > 0.00 )	.and. ;
					( GdFieldPos("P2_CODHEXT") > 0.00 )	.and. ;
					( GdFieldPos("P2_CODHNOT") > 0.00 )	.and. ;
					( GdFieldPos("P2_ALI_WT") > 0.00 )	.and. ;
					( GdFieldPos("P2_REC_WT") > 0.00 )	.and. ;
					( GdFieldPos("M_DATAATU") > 0.00 )		  ;
				  )

	IF ( lGetDados )
		IF ( Vazio() ) //Limpa o Conteudo dos Demais Campos
			M->P2_TRABA := " "
			cVar		:= &( ReadVar() )
			nLoops := Len( aHeaderAll )
			For nLoop := 1 To nLoops
				cCpo := aHeaderAll[ nLoop , 02 ]
				IF ( cCpo $ "P2_TRABA/M_DATAATU/GHOSTCOL/P2_ALI_WT/P2_REC_WT" )
					IF ( cCpo $ "GHOSTCOL" )
						aColsAll[ n , nLoop ] := ""
					EndIF
					Loop
				EndIF
				aColsAll[ n , nLoop ] := CriaVar( cCpo , NIL , NIL , .F. )
				IF ( ( nAt := GdFieldPos( cCpo , aHeader ) ) > 0 )
					aCols[ n , nAt ] := aColsAll[ n , nLoop ]
				EndIF
			Next nLoop
			Break
		EndIF
		IF !( lP2TrabaOk := ( Pertence(" SNDC") ) )
			Break
		EndIF
		IF !( lP2TrabaOk := fPn140VldTrab( cVar ) )
			Break
		EndIF
		IF ( Type("aTabCalend") == "A" )
			IF ( lAlterou := !( GdFieldGet("P2_TRABA") == cVar ) )
				cData := GdFieldGet("M_DATAATU")
				nAt	  := At( "-" , cData )
				dData := Ctod( SubStr( cData , 1 , nAt - 1 ) )
				IF ( ( nPosCalend := aScan( aTabCalend , { |x| x[CALEND_POS_DATA] == dData .and. x[CALEND_POS_TIPO_MARC] == "1E" } ) ) > 0.00 )
					GdFieldPut( "P2_CODHEXT" , aTabCalend[ nPosCalend , CALEND_POS_TIPO_HE_NOR  ] )
					GdFieldPut( "P2_CODHNOT" , aTabCalend[ nPosCalend , CALEND_POS_TIPO_HE_NOT  ] )
				EndIF
			EndIF
		EndIF
	Else
		IF !( lP2TrabaOk := ( Pertence("SNDC") ) )
			Break
		EndIF
	EndIF

End Sequence

Return( lP2TrabaOk )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona140SetOption³Autor³Marinaldo de Jesus  ³ Data ³27/09/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Monta GetDados Conforme Folder                               ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T.                                                 	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA140														 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function Pona140SetOption(	nOpcNewGd 	,;
									oGetDados 	,;
									oDlg		,;
									aGdCoords	,;
									nNewFolder	,;
									nOption		,;
									oFolders	,;
									aCposFolder	,;
									nElementos	,;
									aGdAltera	,;
									lNoTrfCols	 ;
								)

Local aFolderCpos	:= aClone( aCposFolder[ nNewFolder , 02 ] )
Local aGdNoAlter	:= aClone( aCposFolder[ nNewFolder , 03 ] )
Local aNewHeader 	:= {}
Local aNewCols	 	:= {}
Local aNewGdAltera	:= {}
Local aRmkCols		:= {}
Local cCpo			:= ""
Local lSetOption	:= .T.
Local nHeader		:= 0.00
Local nHeaders		:= Len( aHeaderAll )
Local nLoop			:= 0.00
Local nLoops		:= Len( aColsAll )
Local nAt			:= 1.00

DEFAULT lNoTrfCols	:= .F.

IF ( ValType( oGetDados ) == "O" )
	nAt := oGetDados:oBrowse:nAt
	IF !( lNoTrfCols )
		Pona140TrfCols( oGetDados:aCols , oGetDados:aHeader , @aColsAll , @aHeaderAll , nAt )
		Private aCols	:= aClone( aColsAll )
		Private aHeader	:= aClone( aHeaderAll )
		Private n		:= nAt
		Pona140LinOk( oGetDados:oBrowse , .F. )
	EndIF
	oGetDados:Hide()
	oGetDados := NIL
EndIF

For nHeader := 1 To nHeaders
	cCpo := aHeaderAll[ nHeader , 02 ]
	IF ( aScan( aFolderCpos , { |x| x == cCpo } ) > 0.00 )
		aAdd( aNewHeader , aClone( aHeaderAll[ nHeader ] ) )
	EndIF
Next nHeader

aRmkCols := Array( 01 , Len( aNewHeader ) + 1 )

For nLoop := 1 To nLoops
	aAdd( aNewCols , aClone( aRmkCols[1] ) )
	Pona140TrfCols( aColsAll , aHeaderAll , @aNewCols , @aNewHeader , nLoop )
Next nLoop

nLoops := Len( aGdAltera )
For nLoop := 1 To nLoops
	cCpo := aGdAltera[ nLoop ]
	IF (;
			( aScan( aFolderCpos , { |x| x == cCpo } ) > 0.00 ) .and. ;
			( aScan( aGdNoAlter  , { |x| x == cCpo } ) == 0.00 ) ;
		)
		aAdd( aNewGdAltera , cCpo )
	EndIF
Next nLoop

oGetDados := MsNewGetDados():New(	0			,;
								   	0			,;
									aGdCoords[4]-13,;
									aGdCoords[3]-2			,;
									nOpcNewGd				,;
									"Pona140LinOk"			,;
									"Pona140TudOk"			,;
									""						,;
									aNewGdAltera			,;
									0						,;
									nElementos				,;
									NIL						,;
									NIL						,;
									{ || .F. }				,;
									oFolders:aDialogs[nNewFolder],;
									aNewHeader		 		,;
									aNewCols				 ;
					 )

oGetDados:oBrowse:nAt := nAt
oGetDados:Show()
oGetDados:oBrowse:SetFocus()
oGetDados:oBrowse:Refresh()
oGetDados:oBrowse:nAt := nAt

Return( lSetOption )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona140TrfCols  ³Autor³Marinaldo de Jesus  ³ Data ³27/09/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Transfere informacoes entre aCols                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL		                                               	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA140                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function Pona140TrfCols( aCols , aHeader , aColsAll , aHeaderAll , n )

Local nHeader	:= 0.00
Local nHeaders	:= Len( aHeader )

For nHeader := 1 To nHeaders
	cCpo := aHeader[ nHeader , 02 ]
	IF ( GdFieldPos( cCpo , aHeaderAll ) > 0.00 )
		GdFieldPut( cCpo , GdFieldGet( cCpo , n , .F. , aHeader , aCols ) , n , aHeaderAll , aColsAll , .F. )
	EndIF
Next nHeader
GdFieldPut( "GDDELETED" , GdFieldGet( "GDDELETED" , n , .F. , aHeader , aCols ) , n , aHeaderAll , aColsAll , .F. )

Return( NIL )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona140FldRetPos³Autor³Marinaldo de Jesus  ³ Data ³21/10/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Retorna Informacoes do Folder de campos                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL		                                               	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA140                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function Pona140FldRetPos( cCpo , lDesc )

Local aCpos1
Local aCpos2
Local nLoop
Local nLoops
Local nPosFolder
Local uRet

DEFAULT lDesc := .T.

cCpo := Upper( AllTrim( cCpo ) )
nLoops := Len( aCposFolder )
For nLoop := 1 To nLoops
	aCpos1 := aClone( aCposFolder[ nLoop , 02 ] )
	aCpos2 := aClone( aCposFolder[ nLoop , 03 ] )
	IF ( ( nPosFolder := aScan( aCpos1 , { |x| x == cCpo } ) ) > 0.00 )
		IF ( aScan( aCpos2 , { |x| x == cCpo } ) == 0.00 )
			Exit
		Else
			nPosFolder := 0.00
		EndIF
	EndIF
Next nLoop

IF ( nPosFolder > 0.00 ) .and. ( nLoop <= nLoops )
	IF ( lDesc )
		uRet := aCposFolder[ nLoop , 04 ]
	Else
		uRet := { nLoop , nPosFolder }
	EndIF
Else
	IF ( lDesc )
		uRet := ""
	Else
		uRet := { 0 , 0 }
	EndIF
EndIF

Return( uRet )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona140Locks    ³Autor³Mauricio MR         ³ Data ³09/03/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Bloqueia Lancamentos de Excecoes do Funcionario              ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL		                                               	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA140                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function Pona140Locks( nOpc , cAlias , aRecnos , cProcName )

Local lLocks	:= .T.
Local aRecAux

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Se nao For Visualizacao nem Inclusao	 					   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
IF ( nOpc <> 2 )

	Begin Sequence

		aRecAux := {}
		aEval( aRecnos , { |x| IF( !Empty(x) , aAdd( aRecAux , x ) , NIL ) } )

		IF !( lLocks := WhileNoLock( cAlias , aRecAux , { xFilial(cAlias) + SRA->RA_MAT + cProcName} , 1 , 1 , .T. , NIL ) )
			Break
		EndIF

	End Sequence

EndIF

Return( lLocks )
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ MenuDef		³Autor³  Luiz Almeida     ³ Data ³22/11/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Isola opcoes de menu para que as opcoes da rotina possam    ³
³          ³ser lidas pelas bibliotecas Framework da Versao 9.12 .     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA140                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/


Static Function MenuDef()

	Local aRotina :=    {	{ STR0004	, 'PesqBrw'		    , 0 , 1, ,.F. },; // 'Pesquisar'
							{ STR0005	, 'Pona140Atu'	    , 0 , 2 },; // 'Visualizar'
							{ STR0007	, 'Pona140Atu'	    , 0 , 4 },; // 'Atualizar'
							{ STR0035	, 'PutHrsTab(cCalc)', 0 , 3 },;	// 'Calcular Horas'
							{ STR0034	, 'gpLegend'		, 0 , 5 , ,.F.} }	// 'Legenda'

Return aRotina
