#INCLUDE "TOTVS.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "GPEA030.CH"
#INCLUDE "FWADAPTEREAI.CH"

//Recuperar versão de envio
Static cVersEnvio 	:= ""
Static cVersGPE   	:= ""
Static lIntTAF    	:= ((SuperGetMv("MV_RHTAF",, .F.) == .T.) .AND. Val(SuperGetMv("MV_FASESOC",/*lHelp*/,' ')) >= 0 )
Static lCargSQ3		:= SuperGetMv("MV_CARGSQ3",,.F.) //Define se o envio do evento S-1030 serão feito pela tabela SQ3 e não pela SRJ (Padrão .F. -> SRJ).
Static lMiddleware	:= If( cPaisLoc == 'BRA' .AND. Findfunction("fVerMW"), fVerMW(), .F. )
Static cEFDAviso	:= If(cPaisLoc == 'BRA' .And. Findfunction("fEFDAviso"), fEFDAviso(), SuperGetMv("MV_EFDAVIS",, "0")) //Integracao com TAF)
Static lMsbql

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    	³ GPEA030    ³ Autor ³ Mauricio Takakura     	      ³ Data ³ 31/10/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o 	³ Cadastro de Funcoes em MVC                                   			³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   	³ GPEA030()                                                    			³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      	³ Generico ( DOS e Windows )                                   			³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.               			³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador  ³ Data     ³ FNC			³  Motivo da Alteracao                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Leandro Dr.  ³15/10/2012³         M12RH01³Requisito RHU210_03_03. Unificacao da Folha³±±
±±³Renan Borges ³05/08/2015³          TRZVKM³Ajuste para  verificar compartilhamento en-³±±
±±³             ³          ³                ³tre tabelas SQS, SRJ e SQ3.                ³±±
±±³Marcos Cout. ³04/07/2017³    DRHESOCP-543³Realizar a compatibilização do evento S1030³±±
±±³             ³          ³                ³(Funcao) Extemporâneo                      ³±±
±±³Claudinei S. ³19/09/2017³DRHESOCP-904    ³Liberação dos campos exclusivos AUDESP     ³±±
±±³             ³          ³                ³somente se MV_AUDESP estiver ativo.        ³±±
±±³Eduardo Vicen³22/11/2017³DRHESOCP-2077	³Inclusão de função de consulta padrão		³±±
±±³E.Moskovkina ³11/12/2017³DMA3-35         ³RUS-Localization: Changes on Model/View in ³±±
±±³             ³          ³                ³accordance with localized MVC.  	        ³±±
±±|Eduardo Vice ³06/12/2017³DRHESOCP-2197   ³Inclusão de novas TAGS para orgão publico  ³±±
±±³Marcos Cout. ³17/01/2018³DRHESOCP-2483   ³Realizada compatibilização do programa para³±±
±±³             ³          ³                ³geração dos extemporâneos do evento S-1030 ³±±
±±³             ³          ³                ³e S-1040 do eSocial                        ³±±
±±³Eduardo vic  ³02/03/2018|DRHESOCP-3167	³inclusão de validação de tab compartilhada ³±±
±±³             ³          ³                ³e S-1040 do eSocial                        ³±±
±±³Marcos Cout. ³08/03/2018³DRHESOCP-3455   ³Realizar os ajustes necessários para que a ³±±
±±³             ³          ³                ³geração do evento S-1030 seja efetivo      ³±±
±±³Wesley Alves ³10/07/2019³DRHGCH-96235    ³Limpar o conteudo do campo memo quando o   ³±±
±±³             ³          ³                ³ponteiro associado (RDY) for apagado       ³±±

±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPEA030()

	Local oMBrowse
	Local cFiltraRh
	Local cSQ3		:= ""
	Local cSRJ		:= ""

	cSRJ := FWModeAccess( "SRJ", 1) + FWModeAccess( "SRJ", 2) + FWModeAccess( "SRJ", 3)
	cSQ3 := FWModeAccess( "SQ3", 1) + FWModeAccess( "SQ3", 2) + FWModeAccess( "SQ3", 3)

	If cSQ3 > cSRJ
		//"O compartilhamento da tabela de Cargos (SQ3) deverá ser igual ou possuir menor quantidade de compartilhamento Exclusivo (Filial/Unidade/Empresa) que a tabela de Funções (SRJ). Ex: Se a tabela de Funções (SRJ) estiver com C E E, a SQ3 não poderá ser E E E."
		//"Altere o modo de acesso atraves do Configurador. Arquivos SRJ e SQ3."
		MsgInfo( oEmToAnsi( STR0015 ) + CRLF + CRLF + oEmToAnsi( STR0016 ) )
		Return (.F.)
	EndIf
	
	If lMiddleware .And. !ChkFile("RJE")
		cMsgDesatu := CRLF + OemToAnsi(STR0038) + CRLF //"Tabela RJE não encontrada. Execute o UPDDISTR - atualizador de dicionário e base de dados."
	EndIf	

	If lIntTAF .And. !lMiddleware 
		If FindFunction("fVersEsoc")
			fVersEsoc("S1030", .F., /*aRetGPE*/, /*aRetTAF*/, @cVersEnvio, @cVersGPE)
		EndIf
		If FindFunction("ESocMsgVer") .And. cVersGPE <> cVersEnvio .And. (cVersGPE >= "9.0" .Or. cVersEnvio >= "9.0")
			//"Atenção! A versão do leiaute GPE é xxx e a do TAF é xxx, sendo assim, estão divergentes. O Evento xxx não será integrado com o TAF, e consequentemente, não será enviado ao RET.
			//Caso prossiga a informação será atualizada somente na base do GPE. Deseja continuar?"
			If ESocMsgVer(.F.,"S-1030", cVersGPE, cVersEnvio)
				lIntTaf := .F.
			Else
				Return
			EndIf
		EndIf
	EndIf
	
	oMBrowse := FWMBrowse():New()

	oMBrowse:SetAlias("SRJ")
	If  cPaisloc != "PAR"	
		oMBrowse:SetDescription(OemToAnsi(STR0009)) //'Cadastro de Fun‡”es'
	Else
		oMBrowse:SetDescription(OemToAnsi(STR0052)) //'Cadastro de Fun‡”es' 
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cFiltraRh := CHKRH("GPEA030","SRJ","1")
	oMBrowse:SetFilterDefault( cFiltraRh )

	oMBrowse:Activate()

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} BrowseDef
Browse definition

@author E. Moskovkina
@since 11/12/2017
@version 1.0
@project MA3 - Russia
/*/
//-------------------------------------------------------------------
Static Function BrowseDef()
	Local oBrwSRJ
	Local cFiltraRh

	oBrwSRJ := FWmBrowse():New()
	oBrwSRJ:SetAlias( 'SRJ' )
	//oBrwSRJ:SetDescription(STR0001)	//"Cargo"

	//Inicializa o filtro utilizando a funcao FilBrowse
	cFiltraRh	:= CHKRH(FunName(),"SRJ","1")
	//Filtro padrao do Browse conforme tabela SRJ (Cargo)
	oBrwSRJ:SetFilterDefault(cFiltraRh)

Return oBrwSRJ

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ MenuDef		³Autor³  Mauricio Takakura³ Data ³31/10/2010³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Criacao do Menu do Browse.                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA030                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function MenuDef()

	Local aRotina := {}

	ADD OPTION aRotina TITLE STR0004  ACTION "PESQBRW"         		OPERATION 1 ACCESS 0 DISABLE MENU 	//'Pesquisar'
	ADD OPTION aRotina TITLE STR0005  ACTION "VIEWDEF.GPEA030" 		OPERATION 2 ACCESS 0 				//'Visualizar'
	ADD OPTION aRotina TITLE STR0006  ACTION "VIEWDEF.GPEA030" 		OPERATION 3 ACCESS 0				//'Incluir'
	ADD OPTION aRotina TITLE STR0007  ACTION "VIEWDEF.GPEA030" 		OPERATION 4 ACCESS 0				//'Alterar'
	ADD OPTION aRotina TITLE STR0008  ACTION "VIEWDEF.GPEA030" 		OPERATION 5 ACCESS 0				//'Excluir'
	ADD OPTION aRotina TITLE STR0013  ACTION 'VIEWDEF.GPEA030'		OPERATION 9 ACCESS 0 				//"Copiar"
	If cPaisLoc == "PAR"
		ADD OPTION aRotina TITLE STR0050  ACTION "GPEM051()"		OPERATION 6 ACCESS 0 				//"Cambio Sal Min"
		ADD OPTION aRotina TITLE STR0051  ACTION "ConsHist()"		OPERATION 7 ACCESS 0 				//"Consultar histórico"
	Endif

Return aRotina

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ ModelDef 		³Autor³  Mauricio Takakura³ Data ³31/10/2010³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Regras de Modelagem da gravacao.                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA030                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function ModelDef()

	Local oModel
	Local oStructSRJ

	// Bloco de codigo doa Fields
	Local bTOkVld		:= { || GPEA030TOK( oModel )}

	// Criacao do Objeto de Modelagem de dados da tabela SRJ //
	oModel     := MPFormModel():New("GPEA030", NIL, bTOkVld, {|oModel| GPEA030Commit(oModel)})
	oModel:SetDescription( OemToAnsi(STR0009) ) //'Cadastro de Fun‡”es'

	// Estrutura de campos do Model //
	oStructSRJ := FWFormStruct(1, "SRJ")
	If cPaisLoc <> "RUS"
		oStructSRJ:AddField("REQUISITOS","REQUISITOS","RJ_DESCREQ","C",  6,0,{|a,b,c,d| FWInitCpo (a,b,c),lRet:=.T.,FWCloseCpo(a,b,c,lRet),lRet } ,Nil,,.F.,Nil,.F.,.F.,.F.,"")
		FWMemoVirtual( oStructSRJ,{ {'RJ_DESCREQ','RJ_MEMOREQ', "RDY"} } )
	EndIf
	oStructSRJ:RemoveField("RJ_FILIAL")

	oModel:AddFields("GPEA030_SRJ", NIL, oStructSRJ)
	oModel:SetPrimaryKey({"RJ_FUNCAO"})

	oModel:GetModel( "GPEA030_SRJ" ):SetDescription( OemToAnsi(STR0009) ) //'Cadastro de Fun‡”es'

Return( oModel )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ ViewDef  		³Autor³  Mauricio Takakura³ Data ³31/10/2010³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Regras de Interface com o Usuario                           ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA030                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function ViewDef()
	Local oView
	Local oModel
	Local oStructSRJ

	// Criacao da Interface //
	oView := FWFormView():New()

	// Vincular o View ao Model //
	oModel := FWLoadModel("GPEA030")
	oStructSRJ := FWFormStruct(2, "SRJ")

	oStructSRJ:RemoveField("RJ_FILIAL")
	oStructSRJ:RemoveField("RJ_DESCREQ")

	oStructSRJ:SetProperty( 'RJ_FUNCAO' , MVC_VIEW_FOLDER_NUMBER,'C')
	oStructSRJ:SetProperty( 'RJ_DESC' , MVC_VIEW_FOLDER_NUMBER,'C')

	If ColumnPos("RJ_CUMADIC") > 0 .And. aScan(oStructSRJ:aFields, {|x|x[1]=="RJ_CUMADIC"} ) > 0
		oStructSRJ:SetProperty( 'RJ_CUMADIC' , MVC_VIEW_FOLDER_NUMBER,'C')
	EndIf

	// retira os códigos da Audesp
	If !SuperGetMv('MV_AUDESP',, .F.)
		oStructSRJ:RemoveField( "RJ_ADTPFUN" )
		oStructSRJ:RemoveField( "RJ_ADTPJU" )
		oStructSRJ:RemoveField( "RJ_ADTPESC" )
		oStructSRJ:RemoveField( "RJ_ADATIV" )
		oStructSRJ:RemoveField( "RJ_ADTPROV" )
		oStructSRJ:RemoveField( "RJ_ADHORAS" )
	Endif


	oView:SetModel(oModel)
	oView:AddField("GPEA030_SRJ", oStructSRJ)

	oView:CreateHorizontalBox("FIELDS", 100)

	oView:SetOwnerView("GPEA030_SRJ", "FIELDS")

Return oView

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Funcao     ³ GPEA030TOK     ³Autor³  Marcos Coutinho ³ Data ³15/01/2018³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descricao ³ Realiza a validação do TudOk                               ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA030                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >                                 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function GPEA030TOK(oMdlSRJ)

Local lRet       := .T.
Local nOperation := oMdlSRJ:nOperation
Local cFuncao    := ""
Local dDataAux   := dDataBase
Local cData      := cValToChar( StrZero( Month(dDataAux), 2 ) ) + cValToChar( Year(dDataAux))
Local cAnoMes    := cValToChar( Year(dDataAux)) + "-" + cValToChar( StrZero( Month(dDataAux), 2 ) )
Local cChave     := ""
Local cCampos	 := ""
Local lSemFilial := .F.
Local lContinua	 := .T.
Local cStatus    := ""
Local aErros     := {}
Local aFilInTaf  := {}
Local aArrayFil  := {}
Local cFilEnv    := ""
Local lIntegra   := .F.
Local lIntgTAF	 := .T.
Local aCposVal   := {}
Local cDescr     := ""
Local cCBO       := ""
Local oMdl		 := oMdlSRJ:GetModel("GPEA030_SRJ")
Local cEvento	 := ""
Local cMsgErro	 := ""
Local aInfoC	 := {}
Local cChaveMid	 := ""	
Local cStatMid   := ""
Local cOpcRJE	 := "I"		
Local cRetfRJE	 := ""					
Local nRecRJE    := 0
Local cOperNew	 := ""
Local cRetfNew	 := ""
Local cStatNew	 := ""
Local cRetKey	 := ""
Local cVersMW	 := ""
Local lNovoRJE	 := .F.
Local cMsgRJE    := ""
Local aSM0    	:= FWLoadSM0(.T.,,.T.)
Local dDtGer	:= Date()
Local cHrGer	:= Time()
Local cXml		:= ""
Local aDados	:= {}
Local nOpcao		:= 3
Local cFilEmp	:= ""
Local cTpInsc	:= ""
Local cNRInsc   := ""
Local lAdmPubl	:= .F.
Local lRetRJE   := .T.
Local lS1000	:= .F.
Local cAliasRJ8  := "RJ8"
Local cStatRJ7	:= .F.
Local lCopiaTab  := ChkFile("RJ7") .And. ChkFile("RJ8")
Local nHoraInicio := 0
Local lVldInteg	  := .T.	

DEFAULT	lMsbql		:= SRJ->( ColumnPos( "RJ_MSBLQL" ) ) > 0

nHoraInicio := Seconds()

IF lInttaf .AND. EMPTY(oMdl:GetValue("RJ_CODCBO"))
	lContinua := .F.
	IF IsBlind() .Or. !(MsgYesNo(STR0035, STR0033))
		lRet := .F.	
		Help(,,,OemToAnsi(STR0033),OemtoAnsi(STR0036),1,0)
	ENDIF
ENDIF

If SRJ->(ColumnPos( 'RJ_ACUM' )) > 0 .And. !Empty(oMdl:GetValue("RJ_ACUM"))
	aAdd(aCposVal,oMdl:GetValue("RJ_ACUM"))
	aAdd(aCposVal,oMdl:GetValue("RJ_CTESP"))
	aAdd(aCposVal,oMdl:GetValue("RJ_DEDEXC"))
	aAdd(aCposVal,oMdl:GetValue("RJ_LEI"))
	aAdd(aCposVal,oMdl:GetValue("RJ_DTLEI"))
	aAdd(aCposVal,oMdl:GetValue("RJ_SIT"))
EndIf

If aScan( aCposVal, { |x| !Empty(x) } ) > 0

	If aScan( aCposVal, { |x| Empty(x) } ) > 0

		lContinua := .F.
		lRet	  := .F.

		If Empty(oMdl:GetValue("RJ_ACUM"))
			cCampos := cCampos + Iif(Len(cCampos)>0,", ","") + "RJ_ACUM"
		Endif
		If Empty(oMdl:GetValue("RJ_CTESP"))
			cCampos := cCampos + Iif(Len(cCampos)>0,", ","") + "RJ_CTESP"
		Endif
		If Empty(oMdl:GetValue("RJ_DEDEXC"))
			cCampos := cCampos + Iif(Len(cCampos)>0,", ","") + "RJ_DEDEXC"
		Endif
		If Empty(oMdl:GetValue("RJ_LEI"))
			cCampos := cCampos + Iif(Len(cCampos)>0,", ","") + "RJ_LEI"
		Endif
		If Empty(oMdl:GetValue("RJ_DTLEI"))
			cCampos := cCampos + Iif(Len(cCampos)>0,", ","") + "RJ_DTLEI"
		Endif
		If Empty(oMdl:GetValue("RJ_SIT"))
			cCampos := cCampos + Iif(Len(cCampos)>0,", ","") + "RJ_SIT"
		Endif

		Help(,,,OemToAnsi(STR0033),OemtoAnsi(STR0034) + cCampos,1,0)//##"Atenção" ## Os campos devem estar preenchidos: "

	Endif

Endif

If lContinua .And. lMsbql .And. nOperation == MODEL_OPERATION_UPDATE .And. oMdl:GetValue("RJ_MSBLQL") == "1" .And. oMdl:GetValue("RJ_MSBLQL") != SRJ->RJ_MSBLQL .And. fVldAtiv( oMdl:GetValue("RJ_FUNCAO") )
	lContinua 	:= .F.
	lRet 		:= .F.	
	Help( " ", 1, OemToAnsi(STR0033), Nil, OemToAnsi(STR0058), 1, 0 )//"Atenção"##"Não é possivel efetuar o bloqueio da função pois há funcionários ativos vinculados"
EndIf

//Verificando versão do GPE
lIntegra := Iif(FindFunction("fVersEsoc"), fVersEsoc("S-1030", .F., /*@aRetGPE*/, /*@aRetTAF*/, @cVersEnvio,@cVersGPE,@cVersMW), .F. )

If lRet .And. (lInttaf .Or. lMiddleware)
	If Len(FwFldGet('RJ_MEMOREQ')) > 999 
		Help(,,,OemToAnsi(STR0033),OemToAnsi(STR0059),1,0)//##"O campo Requisitos ultrapassou o número de caracteres permitido para tag dscAtivDes no eSocial (999)."
		lRet := .F.
	EndIf
EndIf	

//----------------------------------
//| E X T E M P O R Â N E O  S-1030
//----------------------------------
//Se a integração estiver ativa e não for consistência de tabela

If lContinua .And. ((lInttaf .Or. lMiddleware) .And. (cVersGPE < "9.0") .And. lVldInteg .And. lRet ).And. FUNNAME() <> "GPEM035" .And. ( IIF(FindFunction("fChkFMat"),lRet:=fChkFMat("S-1030"),.T.))

	If lMiddleware
		//Identificando Filial de Envio
		fGp23Cons(@aFilInTaf, @aArrayFil,@cFilEnv)
		If Empty(cFilEnv)
			cFilEnv:= cFilAnt
		EndIf
	Endif	

	//Tratamento de compartilhamento da tabela SRJ
	If Empty( xFilial("SRJ") )
		lSemFilial := .T.
	EndIf

	//Montando as variaveis utilizadas na chave de pesquisa
	cFuncao := IIf(lSemFilial, AllTrim( oMdl:GetValue("RJ_FUNCAO") ), AllTrim(xFilial("SRJ") + oMdl:GetValue("RJ_FUNCAO") ) )
	cDescr  := AllTrim( oMdl:GetValue("RJ_DESC") )
 	cCBO    := oMdl:GetValue("RJ_CODCBO")
	cChave  := cFuncao + ";" + cData

	If !lMiddleware
		//-------------------------------------------------
		//| Função centralizadora para gerar Extemporâneos
		//| Extemporâneo S-1035: GY_CODIGO + MMAAAA
		//-------------------------------------------------
		nOperation := fVerExtemp( If(lCargSQ3,"S-1040","S-1030"), cChave, nOperation, @cStatus )
		//-------------------------------------------------
		//| Baseado no evento de retorno, geramos o nOpc
		//| nOpc irá variar de 3 <inclusao>, 4 <alteracao> e 5 <exclusao>
		//----------------------------------------------------------------
		If ( nOperation > 0 )
	
			IF ((nOperation == 4 .OR. (oMdlSRJ:nOperation == 4 .AND. nOperation == 3)) .AND. !fAltVer({"RJ_DESC", "RJ_CODCBO" }, "SRJ", oMdl))
				lIntgTAF := .F.
			ENDIF
	
			IF lIntgTAF
				//Realizando integração do evento
				lRet := fCarrFun( cFuncao, cDescr, cCBO, nOperation, cAnoMes,@aErros,cFilEnv,aCposVal, lCargSQ3 )
	
				If( !lRet )
					Help(,,,OemToAnsi(STR0033),aErros[1],1,0)//##"Atenção"
	
				ElseIf FindFunction("fEFDMsg") .AND. lRet .And. !IsBlind()
					fEFDMsg()
				EndIf
			ENDIF
		Else
			cEvento := If(lCargSQ3,"S-1040","S-1030")
			Help(,,,OemToAnsi(STR0033), cEvento + OemToAnsi(STR0037) + cData  ,1,0)//##"Atenção"##" Evento não encotrado para a função no periodo: "	
			lRet := .F.
		EndIf
	Else
		If  !ChkFile("RJE") .And. ChkFile("RJ9")
			MsgInfo(OemToAnsi(STR0038)) //"Tabela RJE não encontrada. Execute o UPDDISTR - atualizador de dicionário e base de dados."
			lRet		:= .F.
		Elseif ChkFile("RJE")
			// verificar os predecessores - evento S1000
			cStatus := "-1"
			lS1000 := fVld1000( AnoMes(dDataBase), @cStatus )
			//	* 1 - Não enviado - Gravar por cima do registro encontrado
			//	* 2 - Enviado - Aguarda Retorno - Enviar mensagem em tela e não continuar com o processo
			//	* 3 - Retorno com Erro - Gravar por cima do registro encontrado
			//	* 4 - Retorno com Sucesso -?Efetivar a gravação
			
			If lS1000 //evento S-1000

				aInfoC   := fXMLInfos()
				IF LEN(aInfoC) >= 4
					cTpInsc  := aInfoC[1]
					lAdmPubl := aInfoC[4]
					cNrInsc  := aInfoC[2]
				ELSE
					cTpInsc  := ""
					lAdmPubl := .F.
					cNrInsc  := "0"
				ENDIF

				If ( nFilEmp := aScan(aSM0, { |x| x[1] == cEmpAnt .And. X[18] == cNrInsc }) ) > 0
					cFilEmp := aSM0[nFilEmp, 2]
				Else
					cFilEmp := cFilAnt
				EndIf
			
				cChaveMid	:= cTpInsc + PADR( Iif( !lAdmPubl .And. cTpInsc == "1", SubStr(cNrInsc, 1, 8), cNrInsc), 14) + If(lCargSQ3,"S1040","S1030") + Padr(xFilial("SRJ", cFilAnt) + oMdl:GetValue("RJ_FUNCAO"), fTamRJEKey(), " ") + AnoMes(dDataBase)
				cStatMid := "-1"

				//RJE_TPINSC+RJE_INSCR+RJE_EVENTO+RJE_KEY+RJE_INI
				GetInfRJE( 2, cChaveMid, @cStatMid, @cOpcRJE, @cRetfRJE, @nRecRJE )
					
				If nOperation == MODEL_OPERATION_UPDATE .Or. nOperation == MODEL_OPERATION_DELETE
					//Retorno pendente impede o cadastro
					If cStatMid == "2"
						cMsgErro 	:= STR0039//"Operação não será realizada pois o evento foi transmitido, mas o retorno está pendente"
						lRet		:= .F.
					EndIf
					//Alteração
					If nOperation == MODEL_OPERATION_UPDATE
						//Evento de exclusão sem transmissão impede o cadastro
						If cOpcRJE == "E" .And. cStatMid != "4"
							cMsgErro 	:= STR0040//"Operação não será realizada pois há evento de exclusão que não foi transmitido ou com retorno pendente"
							lRet		:= .F.
						//Não existe na fila, será tratado como inclusão
						ElseIf cStatMid == "-1"
							nOpcao 		:= 3
							cOperNew 	:= "I"
							cRetfNew	:= "1"
							cStatNew	:= "1"
							lNovoRJE	:= .T.
						//Evento sem transmissão, irá sobrescrever o registro na fila
						ElseIf cStatMid $ "1/3"
							If cOpcRJE == "A"
								nOpcao 	:= 4
							EndIf
							cOperNew 	:= cOpcRJE
							cRetfNew	:= cRetfRJE
							cStatNew	:= "1"
							lNovoRJE	:= .F.
						//Evento diferente de exclusão transmitido, irá gerar uma retificação
						ElseIf cOpcRJE != "E" .And. cStatMid == "4"
							nOpcao 		:= 4
							cOperNew 	:= "A"
							cRetfNew	:= "2"
							cStatNew	:= "1"
							lNovoRJE	:= .T.
						//Evento de exclusão transmitido, será tratado como inclusão
						ElseIf cOpcRJE == "E" .And. cStatMid == "4"
							nOpcao 		:= 3
							cOperNew 	:= "I"
							cRetfNew	:= "1"
							cStatNew	:= "1"
							lNovoRJE	:= .T.
						EndIf
						//Exclusão
					ElseIf nOperation == MODEL_OPERATION_DELETE
						nOpcao 		:= 5
						//Evento de exclusão sem transmissão impede o cadastro
						If cOpcRJE == "E" .And. cStatMid != "4"
							cMsgErro 	:= STR0040//"Operação não será realizada pois há evento de exclusão que não foi transmitido ou com retorno pendente"
							lRet		:= .F.
						//Evento diferente de exclusão transmitido irá gerar uma exclusão
						ElseIf cOpcRJE != "E" .And. cStatMid == "4"
							cOperNew 	:= "E"
							cRetfNew	:= cRetfRJE
							cStatNew	:= "1"
							lNovoRJE	:= .T.
						EndIf
					EndIf
				ElseIf nOperation == MODEL_OPERATION_INSERT
					//Retorno pendente impede o cadastro
					If cStatMid == "2"
						cMsgErro 	:= STR0039//"Operação não será realizada pois o evento foi transmitido, mas o retorno está pendente"
						lRet		:= .F.
					//Evento de exclusão sem transmissão impede o cadastro
					ElseIf cOpcRJE == "E" .And. cStatMid != "4"
						cMsgErro 	:= STR0040//"Operação não será realizada pois há evento de exclusão que não foi transmitido ou com retorno pendente"
						lRet		:= .F.
					//Evento sem transmissão, irá sobrescrever o registro na fila
					ElseIf cStatMid $ "1/3"
						nOpcao		:= Iif( cOpcRJE == "I", 3, 4 )
						cOperNew 	:= cOpcRJE
						cRetfNew	:= cRetfRJE
						cStatNew	:= "1"
						lNovoRJE	:= .F.
					//Evento diferente de exclusão transmitido, irá gerar uma retificação
					ElseIf cOpcRJE != "E" .And. cStatMid == "4"
						cOperNew 	:= "A"
						cRetfNew	:= "2"
						cStatNew	:= "1"
						lNovoRJE	:= .T.
					//Será tratado como inclusão
					Else
						cOperNew 	:= "I"
						cRetfNew	:= "1"
						cStatNew	:= "1"
						lNovoRJE	:= .T.
					EndIf
				EndIf

				If lRet
					lRetRJE := fCarrFun(  cFuncao , cDescr, cCBO, nOpcao, cAnoMes, @aErros, xFilial("SRJ", cFilAnt), aCposVal, lCargSQ3, cVersMW, @cXml, @cRetKey)
					If lRetRJE 
						aAdd( aDados, { xFilial("RJE", cFilAnt), xFilial("SRJ", cFilAnt), cTpInsc, Iif( cTpInsc == "1" .And. !lAdmPubl, SubStr(cNrInsc, 1, 8), cNrInsc ), If(lCargSQ3,"S1040","S1030"), AnoMes(dDataBase), xFilial("SRJ", cFilAnt) +  oMdl:GetValue('RJ_FUNCAO'), cRetKey, cRetfNew, "12", cStatNew, dDtGer, cHrGer, cOperNew } )
					
						//Se não for uma exclusão de registro não transmitido, cria/atualiza registro na fila
						If !( nOpcao == 5 .And. ((cOpcRJE == "E" .And. cStatMid == "4") .Or. cStatMid $ "-1/1/3") )
							If !( lRet := fGravaRJE( aDados, cXml, lNovoRJE, nRecRJE ) )
								cMsgRJE := STR0041//"Ocorreu um erro na gravação do registro na tabela RJE"
							EndIf
							//Se for uma exclusão e não for de registro de exclusão transmitido, exclui registro de exclusão na fila
						ElseIf nOpcao == 5 .And. cStatMid != "-1" .And. !(cOpcRJE == "E" .And. cStatMid == "4")
							If !( lRet := fExcluiRJE( nRecRJE ) )
								cMsgRJE := STR0041//"Ocorreu um erro na exclusão do registro na tabela RJE"
							EndIf
						EndIf
					Else
						lRet := .F.
						Help(,,,OemToAnsi(STR0033),aErros[1],1,0)//##"Atenção"
					Endif
				Else
					Help(,,,OemToAnsi(STR0033),cMsgErro,1,0)//##"Atenção"
				Endif
			Else
				lRet := .F.
				cMsgRJE := OemtoAnsi(STR0042)//"Problemas com o Evento S-1000"
				do Case 
					case cStatus == "-1" // nao encontrado na base de dados
						cMsgRJE := OemtoAnsi(STR0043) //"Registro do evento S-1000 não localizado na base de dados"
					case cStatus == "1" // nao enviado para o governo
						cMsgRJE := OemtoAnsi(STR0044) //"Registro do evento S-1000 não transmitido para o governo"
					case cStatus == "2" // enviado e aguardando retorno do governo
						cMsgRJE := OemtoAnsi(STR0045) //"Registro do evento S-1000 aguardando retorno do governo"
					case cStatus == "3" // enviado e retornado com erro 
						cMsgRJE := OemtoAnsi(STR0046) //"Registro do evento S-1000 retornado com erro do governo"
				endcase

				// Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
				If cEFDAviso == "0"
					//MsgInfo(cMsgRJE,OemToAnsi(STR0033))
					MsgInfo(cMsgRJE,OemToAnsi(STR0033)) //"Atenção"
					lRet := .T.
				elseIf cEFDAviso == "1"
				   	lRet := .F.
				   	Help(,,,OemToAnsi(STR0033),cMsgRJE,1,0)//##"Atenção"
				Endif			
			Endif			
		Endif
	Endif  	
Endif
	  //------------------------------------------------------------------
	//| Verificação se é inclusão e alteração do cadastro de verbas 
	//| Inclusão por RECLOCK na tabela RJ* para tratamento posterior JOB
	//------------------------------------------------------------------	
	If !IsBlind() .And. lCopiaTab .And. lRet
		//Gera a chave para validação da filial na tabela RJ7
		//Chave composta por: Filial da RJ7 + Cód. da Tabela + Filial Logada(cadastro)
		cChave:= xFilial("RJ7")+"4"+cFilAnt
		cStatRJ7 := fVldRJ7(1,cChave)
		
		If cStatRJ7 //Inclusao
			Begin Transaction
				//Alimentando a tabela
				 Reclock( cAliasRJ8, .T.  )
				( cAliasRJ8 )->RJ8_FILIAL  := xFilial( "RJ8" )
				( cAliasRJ8 )->RJ8_FILPAR  := ""
				( cAliasRJ8 )->RJ8_TABELA  := "4"
				( cAliasRJ8 )->RJ8_CONTEU  := xFilial("SRJ") + oMdl:GetValue('RJ_FUNCAO')
				( cAliasRJ8 )->RJ8_DATA    := Date()
				( cAliasRJ8 )->RJ8_HORA    := SecsToTime(nHoraInicio) 
				( cAliasRJ8 )->RJ8_OPERAC  := iif(nOperation == 3, "1",iif(nOperation== 4,"2","3"))
				( cAliasRJ8 )->RJ8_USUARI  := UsrRetName(RetCodUsr())
				( cAliasRJ8 )->RJ8_STATUS  := "0"
				( cAliasRJ8 )->RJ8_ESOCIA  := "1"
				( cAliasRJ8 )->RJ8_MSGLOG  := iif(nOperation==3,STR0047,iif(nOperation==4,STR0048,STR0049)) + oMdl:GetValue('RJ_FUNCAO') //"Inclusao de função cod: " ## "Alteração de Função cod: " ## "Exclusão de Função cod: "   
				( cAliasRJ8 )->( MsUnlock() )
				
				( cAliasRJ8 )->( dbCloseArea() )
			End Transaction
	    Endif
	Endif

Return lRet

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ GPEA030Commit  ³Autor³  Mauricio Takakura³ Data ³31/10/2010³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Gravacao das informacoes com as validacoes pertinentes      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA030                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function GPEA030Commit(oModel)
	Local aAreaGPE
	Local cKeyChkDel

	Local lIntGPE  		:= If(GetMv("MV_QGINT",.F.,"N") == "S",.T.,.F.)
	Local lChkDelOK     := .T.

	Local nOperation

	Local lTSREP		:= SuperGetMv( "MV_TSREP" , NIL , .F. )
	Private oObjREP		:= Nil

	nOperation := oModel:GetOperation()

	//-- Inicializa a integracao via WebServices TSA
	If lTSREP
		oObjREP := PTSREPOBJ():New()
	EndIF

	If nOperation == MODEL_OPERATION_INSERT .or. nOperation == MODEL_OPERATION_UPDATE

		If Empty(FwFldGet( 'RJ_MEMOREQ', 1, oModel ))
			FwFldPut( 'RJ_DESCREQ', '',, oModel )
		EndIf		
		
		FWFormCommit(oModel)

		If lIntGPE
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Realiza a gravacao do responsavel no arquivo utilizado  |
			//|pelos modulos do Quality Celerina, caso haja integracao.|
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			DbSelectArea( "SRJ" )
			DbSetOrder( 1 )
			DbSeek( xFilial( 'SRJ' ) + FwFldGet( 'RJ_FUNCAO', 1, oModel ), .F. )

			QC_QUALITY()
		EndIf

	   	If lTSREP
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Funcoes                          ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If oObjREP:WSPositionLevel( If(nOperation == MODEL_OPERATION_INSERT,1,2) )

				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava o Log do controle de exportacao WebServices TSA        ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				oObjRep:WSUpdRHExp( "SRJ" )

            Endif
		Endif

		//Integração com o SIGAMDT
		If SuperGetMV( "MV_MDTGPE" , .F. , "N" ) == "S" .And. nOperation == MODEL_OPERATION_INSERT .And. FindFunction("MDTW030")
			MDTW030( "SRJ" , M->RJ_FUNCAO ) //Executa o W.F. de Aviso do SESMT
		EndIf

	// Tratamento de exclusão da integração com o Quality //
	ElseIf nOperation == MODEL_OPERATION_DELETE
		If lIntGPE
			aAreaGPE := GetArea()

			dbSelectArea("SRJ")
			cKeyChkDel := SRJ->( FieldGet( FieldPos( "RJ_FUNCAO" ) ) )

			DbSeek("QAC")
			cModoQAC:= FWModeAccess("QAC", 3)
			DbSetOrder(1)

			cPriFil := QXPOSFIL(cEmpAnt)

			If TAMSX3("QAC_FUNCAO")[1] == 8		// Limitar o codigo gerado ao tamanho do campo
				If cModoQAC == "C"
					cCargo:= cEmpAnt+cPriFil+Right(AllTrim(cKeyChkDel), 4)
				Else
					cCargo:= cEmpAnt+cFilAnt+Right(AllTrim(cKeyChkDel), 4)
				Endif
			Else
				If cModoQAC == "C"
					cCargo:= cEmpAnt+cPriFil+cKeyChkDel
				Else
					cCargo:= cEmpAnt+cFilAnt+cKeyChkDel
				Endif
			Endif

			If QAC->(DbSeek(cFilial+cCargo))
				QDA160Dele(@lChkDelOK)
			Endif

			RestARea(aAreaGPE)

		EndIf

		FWFormCommit( oModel )    	


		If lTSREP
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Funcoes                          ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			oObjREP:WSPositionLevel( 3 )

		Endif

	EndIf

Return(.T.)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Função ³GPEA030VLDSAL³ Autor ³ MOHANAD ODEH ³Data³05/12/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descrição ³Valida Salário de acordo com mínimo do Cód. MTSS³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³GPEA030VLDSAL()                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Vide Paramentros Formais                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ Generico 									  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function GPEA030VLDSAL(nSalario)
Local lRet := .T.

	If !POSITIVO(nSalario)
			lRet := .F.
	EndIf

	If cPaisLoc == "COS" .AND. lRet == .T.
		DbSelectArea("RCC")
		DbSetOrder(1)
		dbSeek(xFilial('SRJ') + "S006")
		While !EOF() .AND. xFilial('SRJ') + "S006" == RCC->RCC_FILIAL+RCC->RCC_CODIGO

			If M->RJ_CODMTSS == Substr(RCC->RCC_CONTEU, 1, 4)
				If nSalario < NoRound(Val(Substr(RCC->RCC_CONTEU, 50, 12)),2)
					Help(" ",1,".A030VLD.") // Problema: "Valor Inválido" ### Solução: "O Salário deve ser maior ou igual ao Salário Mínimo do Código MTSS"
					//Help( " ", 1, "Help",, OemToAnsi(STR0014), 1, 0 ) // "O Salário deve ser maior ou igual ao Salário Mínimo do Código MTSS"
				    lRet := .F.
				    Exit
				EndIf
			EndIf
			dbSkip()
		Enddo
		RCC->(DbCloseArea())
	EndIf

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³IntegDef  ºAutor  ³ Totvs  			   º Data ³  15/02/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Mensagem Única											    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Mensagem Única                                            	º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function IntegDef(cXML, nTypeTrans, cTypeMessage, cVersion)

Local aRet

// Chama a rotina que trata a parte principal
aRet := GPEI030( cXML, nTypeTrans, cTypeMessage, cVersion )
//
Return aRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fTpContSRJ³ Autor ³ Eduardo Vicente       ³ Data ³ 22/11/17 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Opcoes de Contagem 											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fTpContSRJ()

Local cTitulo:= OemtoAnsi(STR0031)//"Contagem de Tempo Especial" //
Local MvParDef	:="1234"
Local MvStrRet	:= ""
Local aSaveArea := GetArea()
Local lOpt 		:= .F.
Local MvPar
Local mvRet
Static aCat:={"1-"+OemtoAnsi(STR0027),"2-"+OemtoAnsi(STR0028),"3-"+OemtoAnsi(STR0029),"4-"+OemtoAnsi(STR0030)}

MvPar:=&(Alltrim(ReadVar()))		 // Carrega Nome da Variavel do Get em Questao
MvRet:=Alltrim(ReadVar())			 // Iguala Nome da Variavel ao Nome variavel de Retorno

VAR_IXB := MvPar

// Chama funcao f_Opcoes
lOpt := f_Opcoes(@MvPar,cTitulo,aCat,MvParDef,12,49,.F.)
If lOpt
	VAR_IXB :=  StrTran(MvPar,"*","")
EndIf

RestArea(aSaveArea)
Return( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fAltVer³ Autor ³ Guilherme Bertelli    ³ Data ³ 16/08/18    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Função para verificar se houve alterações em campos 	       ±±
±± utilizados pelo E-Social                                                ±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA030                                                    ³±±
±±³ Parâmetros:                                                           ³±±
±±³        aArrCPO - Array dos campos                                     ³±±
±±³        cTab    - Tabela que será realizada a pesquisa                 ³±±
±±³        oMdl    - Model que contém o valor dos campos                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fAltVer(aArrCPO,cTab, oMdl)
Local lRet	:= .F.
Local nX		:= 0

For nX:= 1 to Len(aArrCPO)
	If &(cTab+"->"+aArrCPO[nX]) != oMdl:GetValue(aArrCPO[nX]) .And. !lRet
		lRet	:= .T.
	EndIf
Next nX
Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} fVldAtiv()
Função que efetua a verificação se há funcionários ativos vinculados à função
@author  Allyson Luiz Mesashi
@since   28/04/2022
/*/
//-------------------------------------------------------------------
Static Function fVldAtiv( cCodFunc )

Local cAliasQRY	:= "QRYSRA"
Local cQuery	:= ""
Local cTabSRA	:= RetSqlName("SRA")
Local cTabSRJ	:= RetSqlName("SRJ")
Local lTemAtiv	:= .F.

cQuery	:= "SELECT COUNT(*) AS CONT "
cQuery 	+= "FROM " + cTabSRJ + " SRJ "
cQuery 	+= "INNER JOIN " + cTabSRA + " SRA "
cQuery 	+= "ON " + FWJoinFilial( "SRJ", "SRA" ) + " AND SRA.RA_CODFUNC = SRJ.RJ_FUNCAO AND SRA.RA_SITFOLH != 'D' AND SRA.D_E_L_E_T_ = ' ' " 
cQuery 	+= "WHERE SRJ.RJ_FILIAL = '" + xFilial("SRJ") + "' "
cQuery 	+= "AND SRJ.RJ_FUNCAO = '" + cCodFunc + "' "
cQuery 	+= "AND SRJ.D_E_L_E_T_ = ' ' "

dbUseArea(.T., "TOPCONN", TcGenQry( Nil, Nil, cQuery), cAliasQRY, .T., .T.)

lTemAtiv := (cAliasQRY)->CONT > 0

(cAliasQRY)->( dbCloseArea() )

Return lTemAtiv
