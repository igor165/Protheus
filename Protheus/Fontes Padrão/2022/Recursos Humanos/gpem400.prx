#Include "Protheus.ch"
#Include "GPEM400.CH"
#Include "FWMVCDEF.CH"

Static  lCancela := .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³ Funcao    ³ GPEM400    ³ Autor ³ Equipe R.H.                         ³ Data ³ 19/06/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Descricao ³ Gerar disquete do CAGED.                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Programador ³  Data    ³ Requisito         ³            Motivo da alteracao            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Bruno Nunes ³20/01/2014³RHU210_01_001944_02³ Unificacao CAGED da versao 11 e fase 4    ³±±
±±³ Cecilia C.  ³11/04/2014³M_RH003 002974     ³ Retirada da chamada dos campos RA_INSMIN, ³±±
±±³             ³          ³                   ³ RA_INSMED, RA_PENSALI e RA_ASMEDIC.       ³±±
±±³ Antonio C.  ³29/04/2014³TPJZH4             ³ Réplicas da Versão 11 para a Versão 12.   ³±±
±±³ Allyson M   ³28/05/2014³TPKK75             ³ Ajuste na msg exibida quando nao houve    ³±±
±±³             ³          ³                   ³ gravacao de registros no arquivo.         ³±±
±±³Renan Borges ³04/06/2014³TPTEIX             ³ Ajuste p/ considerar adequadamente funcio-³±±
±±³             ³          ³                   ³nários quando filial do c.custo for compar-³±±
±±³             ³          ³                   ³tilhada.                                   ³±±
±±³Claudinei S. ³27/08/2014³TQJXEZ             ³ Ajustada a rotina para atender a portaria ³±±
±±³             ³          ³                   ³ 768, incluida a FwMarkBrowse para selecao ³±±
±±³             ³          ³                   ³ dos admitidos que farao parte do Arquivo. ³±±
±±³Claudinei S. ³18/09/2014³TQPAAW             ³ Alterado o tipo do campo RA_SALINCO para  ³±±
±±³             ³          ³                   ³ Numerico na fCriaTmp().                   ³±±
±±³Gustavo M.   ³22/09/2014³TQPFB5             ³ Ajuste para corrigir error.log ao entrar  ³±±
±±³             ³          ³                   ³ no log de inconsistencia.                 ³±±
±±³Claudinei S. ³01/10/2014³TQJXEZ             ³- Ajustada a FwMarkBrowse para quando nao  ³±±
±±³             ³          ³                   ³ retornar registros nao emitir aviso.      ³±±
±±³             ³          ³                   ³- Ajustada a selecao de todos os registros ³±±
±±³             ³          ³                   ³- Validacao para grupo de verbas.          ³±±
±±³             ³          ³                   ³- Ajustada a totalizacao dos Ativos.       ³±±
±±³             ³          ³                   ³- Informacoes de transferencia, somente no ³±±
±±³             ³          ³                   ³  ultimo dia do mes.                       ³±±
±±³Vitor Pires  ³14/11/2014³TGGULE             ³ Ajusta vínculo empregatício da RAIS 90 e  ³±±
±±³             ³          ³                   ³ 55 para menor aprendiz(43)                ³±±
±±³Vitor Pires  ³11/12/2014³TRABLP             ³ Somente atualizar RA_DTCAGED dos funcio-  ³±±
±±³             ³          ³                   ³ nários que estiverem no arquivo gerado    ³±±
±±³Claudinei S. ³03/02/2015³TQUCXB             ³-Geracao do arquivo para funcionarios      ³±±
±±³             ³          ³                   ³Reingegrados e funcionarios sem salario    ³±±
±±³             ³          ³                   ³informado no cadastro (Comissionistas)     ³±±
±±³Mariana M.   ³06/06/2015³TSIPNN    		   ³Ajuste na geração do CAGED para que o sis- ³±±
±±³        	    ³          ³           		   ³tema respeite a data de Referencia dos pa- ³±±
±±³        	    ³          ³           		   ³râmetros.								   ³±±
±±³Allyson M.   ³19/06/2015³TSMSXQ			   ³Ajuste no filtro de data de admissao       ³±±
±±³Allyson M.   ³17/07/2015³TSRS29			   ³Ajuste no filtro de data de admissao       ³±±
±±³Esther V.    ³23/05/2016³TVFY37			   ³Ajuste no filtro de filiais de acordo com  ³±±
±±³        	    ³          ³           		   ³permissao de acesso do usuario.			   ³±±
±±³Paulo O      ³02/03/2016³MRH-7804		   ³Verificado se a variavel Val_SalMin existe ³±±
±±³Inzonha      ³          ³           		   ³na função fM400Salario. Se não a declara   ³±±
±±³Paulo O.     ³14/07/17  ³DRHPAG-3750        ³Ajuste para no caso de reintegração        ³±±
±±³Inzonha      ³          ³                   ³considerar a data de reintegração ao invés ³±±
±±³             ³          ³                   ³da data de admissão.					   ³±±
±±³Cecília C.   ³03/08/2017³DRHPAG-4087        ³Ajuste para contemplar os novos campos do  ³±±
±±³             ³          ³                   ³do CAGED para motoristas profissionais.    ³±±
±±³             ³          ³                   ³Testa se campos existem no dicionário      ³±±
±±³Oswaldo L    ³18/09/2017³DRHPAG-5698        ³Incluir tratamentos do Projeto Ctree       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CAGED     ºAutor  ³ **TESTES BASICOS** º Data ³  05/30/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºTeste que devem ser efetuados em qualquer alteracao deste  fonte       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±º-Transferencias entre filiais que foram cadastradas no SIGAMAT como C.Cº±±
±±º (SIGAMAT como Centros de Custo (filiais com mesmo CGC/CEI))		    º±±
±±º-Transferencias entre C.C com CEI's diferentes no CTT                  º±±
±±º-Transferencias entre Filiais/CC (CEI/CNPJ diferentes)no mesmo mes, conº±±
±±ºsiderar apenas apenas o 1o e ultimo movto.So interessa onde estava no  º±±
±±ºinicio do mes e pra onde foi no ult.mvto do mes.                       º±±
±±º-Transferencias entre Filiais/CEI /cc de saida e entrada no mesmo mes  º±±
±±ºnao deve ser consideradas  (mesmo cnpj)                                º±±
±±º-                                                                      º±±
±±º                                                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPEM400()
Local nOpca     	:= 0
Local aSays 		:= {}
Local aButtons		:= {}
Local aRegs     	:= {}
Local cPerg     	:= "GPM400"
Local lIsBlind      := IsBlind()
Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), { .T., .F. }) //[1]Acesso; [2]Ofusca; [3]Mensagem
Local aFldRel		:= {"RA_NOME","RA_NUMCP","RA_SERCP","RA_UFCP","RA_SEXO","RA_RACACOR","RA_CIC","RA_DEFIFIS","RA_CIC","RA_CEP","RA_NOMECMP","RA_TPDEFFI"}
Local lBlqAcesso	:= aOfusca[2] .And. !Empty( FwProtectedDataUtil():UsrNoAccessFieldsInList( aFldRel ) )

Private cCadastro	:= OemToAnsi( STR0001 ) 	//##"Gera‡„o do Disco do CAGED"
Private aListEmp	:= fGetSM0(.T.)
Private cSraFilter	:= ""
Private aRetFiltro	:= {}
Private aFilterExp	:= {}
Private aMark		:= {}
Private lGeraCaged	:= .F.
Private Val_SalMin  := 0.00						//Valor Salario Minimo
Private oTmpTable
Private oTmpCAGED
Private aCBOMoto    := {"782310", "782320", "782405", "782410", "782415", "782505", "782510", "782515"} //CBO dos motoristas profissionais

	If lBlqAcesso	//Tratamento de acesso a dados pessoais
		Help(" ",1,aOfusca[3,1],,aOfusca[3,2],1,0)	//"Dados Protegidos- Acesso Restrito: Este usuário não possui permissão de acesso aos dados dessa rotina. Saiba mais em {link documentação centralizadora}"
	Else
		//Carrega as perguntas do SX1
		Pergunte( "GPM400", .F. )

		If !lIsBlind
			//Retorne os Filtros que contenham os Alias Abaixo
			aAdd( aFilterExp , { "FILTRO_ALS" , "SRA", .T. } )

			//Que Estejam Definidos para a Funcao
			aAdd( aFilterExp , { "FILTRO_PRG" , FunName() 	, NIL , NIL    } )

			AAdd( aSays, OemToAnsi( STR0002 ) )  //##" Este programa gera o disquete do Cadastro Geral Empregados"
			AAdd( aSays, OemToAnsi( STR0003 ) )  //##" e Desempregados (CAGED) "

			aAdd( aButtons, { 17, .T., { | | aRetFiltro := FilterBuildExpr( aFilterExp ) } } )
			aAdd( aButtons, { 05, .T., { | | Pergunte( "GPM400", .t. ) } } )
			aAdd( aButtons, { 01, .T., { |o| nOpca := 1, Iif( gpconfOK(), FechaBatch(), nOpca := 0 ) } } )
			aAdd( aButtons, { 02, .T., { |o| FechaBatch() } } )

			FormBatch( cCadastro, aSays, aButtons )
		EndIf

		//Variaveis utilizadas para parametros.
		If nOpca == 1 .And. !lIsBlind
			ProcGPE( { |lEnd| GPM400Proc(), STR0008 },STR0016)  // "Gera‡„o do Disco do CAGED"
		ElseIf lIsBlind
			If Type("aMarkAuto") <> "U"
				aMark := aClone(aMarkAuto)
			EndIf

			GPM400Proc()
		EndIf

		If oTmpTable <> NIL
			oTmpTable:Delete()
			oTmpTable := Nil
		Endif

		If oTmpCAGED <> Nil
			oTmpCAGED:Delete()
			oTmpCAGED := Nil
		EndIf

	EndIf
Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Gpm400Proc³ Autor ³ J. Ricardo          	³ Data ³ 14/03/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Executa o processamento do CAGED.                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Gpm400Proc()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gpm400Proc()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define variaveis locais de execucao.                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local bMakeLog		:= { || NIL }
Local aStruSRA		:= {}
Local aOrdBag		:= {}
Local aFilMat		:= {}
Local aInfo			:= {}
Local aTransf		:= {} //-- Armazena as transferencias do funcionario
Local aSituacao		:= {} //-- Armazena a situacao do funcionario no mes referencia, ou seja,  se esta demitido, se foi transferido, etc.
Local cEmpCaged		:= ''
Local cInicio		:= ''
Local cFim			:= ''
Local cMesArqRef	:= ''
Local cDtPq			:= ''
Local cSQL			:= ''
Local cFilProc     	:= ''
Local cFilAnte 		:= ''
Local cCeiCC		:= ''
Local cCgcCC		:= ''
Local nPos			:= 0
Local nTotFunc		:= 0
Local nStepFun		:= 0
Local nPosEstab		:= 0
Local nEmpTmp		:= 0
Local nSequencia 	:= 0
Local nTransf		:= 0
Local nTotEPDia		:= 0
Local nX			:= 0
Local nCount		:= 1
Local lDemissao 	:= .F.
Local lAdmissao 	:= .F.
Local lModoSRV		:= .T.
Local lMark			:= .F.
Local nGravou		:= 0 //--Contador de gravação no arquivo caged
Local aMDTExm    	:= {}
Local cBkpFil		:= cFilAnt
Local lIsBlind      := IsBlind()

Private lDemis		:= .F.
Private lSalInc		:= .F.
Private lTpdeffi	:= .F.
Private lHoParc		:= .F.
Private lBloqAdm	:= SRA->(ColumnPos("RA_BLOQADM")) > 0
Private lSubsTp		:= "MSSQL" $  AllTrim( Upper( TcGetDb() ) ) .Or. AllTrim( Upper( TcGetDb() ) ) == 'SYBASE'
Private dDtCalIni	:= Dtoc( MsDate() )
Private nIniTime 	:= nTimeFim	:= Seconds()	// Tempo de calculo para o GRID
Private nEmpAtu		:= 0
Private nArq		:= 0
Private nCtDia		:= 0
Private nItem		:= 0
Private Salario		:= 0.00
Private SalHora		:= 0.00
Private SalDia		:= 0.00
Private SalMes		:= 0.00
Private aCodFol		:= {}
Private aRoteiro	:= {}
Private aTotDia		:= {}
Private aEmpresa	:= {}
Private aPosicao	:= {} //-- Armazena posicao do funcionario no Mes referencia ( qdo tem transferencia )
Private aAux_posicao:= {} //-- Armazena as Emp/filiais/mat/cc por onde o funcionario ja passou e que ja foram analisadas
Private aLog		:= {} //-- Log de Ocorrencias
Private aCaracter	:= { "/",".","\","-",", "," " } // Caracteres nao aceitos no CAGED
Private aValidFil	:= StrToArray(fValidFil(),"/") //array com as filiais que o usuario possui acesso
Private cTipInsc	:= ''
Private cArqGage	:= ''
Private cTipoCorre	:= ''
Private cVerbas_Aux	:= ''
Private cGrpVerbas  := ''
Private dAdmissao 	:= CtoD('//')
Private dDemissao 	:= CtoD('//')
Private dReintegra  := CtoD('//')
Private cAliasSRA	:= 'SRA'
Private cAliasMov	:= 'SRC'

SetMnemonicos(NIL, NIL, .T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verificar se existe Campo Sal.Incorporado no cadastro      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SX3")
dbSetOrder( 2 )
If dbSeek("RA_SALINCO")
	lSalInc := .T.
Endif
If dbSeek("RA_TPDEFFI")
	lTpdeffi := .T.
Endif
If dbSeek("RA_HOPARC")
	lHoParc := .T.
Endif

dbsetOrder( 1 )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica modo de acesso da tabela SRV                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lModoSRV := FWModeAccess("SRV",3) == "C"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros											³
//³ mv_par01 - Filial  De															³
//³ mv_par02 - Filial  Ate															³
//³ mv_par03 - Matricula De															³
//³ mv_par04 - Matricula Ate														³
//³ mv_par05 - Data de Referencia - ( Ultima data do Mes						³
//³ mv_par06 - Filial Centralizadora												³
//³ mv_par07 - Mudou de Endereco   1-Sim -- 2-Nao								³
//³ mv_par08 - Encerrou Atividade  1-Sim -- 2-Nao								³
//³ mv_par09 - Correcao de Declaracao Anterior 1-Sim--2-Nao						³
//³ mv_par10 - 1¦ Declaracao 1-Sim -- 2-Nao										³
//³ mv_par11 - Numero do Convenio													³
//³ mv_par12 - Verbas do SRD a serem somadas ao Salario							³
//³ mv_par13 - Versao do Caged 1 = Atual    2 = Anteriores						³
//³ mv_par14 - Peq. ou Micro Empresa 1=Sim; 2=Nao								³
//³ mv_par15 - Diretorio Gravacao													³
//³ mv_par16 - Codigo do Centro de Custo inicial									³
//³ mv_par17 - Codigo do Centro de Custo final									³
//³ mv_par18 - Tipo de geracao														³
//³ mv_par19 - Tipo da correcaTo 1=Exclusao 2=Inclusao							³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cFilDe     	    := mv_par01
cFilAte     	:= mv_par02
cMatDe      	:= mv_par03
cMatAte     	:= mv_par04
dDtRef	     	:= mv_par05
cFilResp    	:= mv_par06
cDia 		 	:= Strzero( Day( dDtRef ), 2 )
cMudou      	:= Iif( Str( mv_par07, 1 )=="1", "2", "1" )
cEncerrou    	:= Str( mv_par08, 1 )
cCorrecao    	:= Str( mv_par09, 1 )
cPrimeira    	:= Str( mv_par10, 1 )
cConvenio    	:= mv_par11
cVerbas     	:= mv_par12
cGrpVerbas	 	:= AllTrim( mv_par13 )
cMesComp	 	:= Strzero( Month( dDtRef ), 2 ) + Strzero( Year( dDtRef ), 4 )
cMesCorren	 	:= cMesComp
lVerCaged    	:= Iif( mv_par14 == 1, .T., .F. )
cPeqMed      	:= Str( mv_par15, 1 )
cPathArq	 	:= AllTrim(mv_par16)
cCcDe        	:= mv_par17
cCcAte       	:= mv_par18
nTipoCaged	 	:= mv_par19
cTipoCorre	 	:= If(mv_par20 == 1, "1", "2")
cEmail		 	:= mv_par21
cNomeCont	 	:= mv_par22
cCpfCont	 	:= mv_par23

If ValType(mv_par24) == "N"
	lRemuneracao := If( Str( mv_par24, 1 ) == "1", .T., .F. )//Tipo do salario
Else
	lRemuneracao := .F.
EndIf

//Pegar os demitidos somente se for o ultimo dia do mes
lDemis := Day(dDtRef) == F_ULTDIA(dDtRef)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ano/Mes de referencia para arquivo Movimento do Mes                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cMesArqRef := StrZero(Month(dDtRef),2) + StrZero(Year(dDtRef),4)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se nao exitir campo CEI, forca o tipo de caged por Filial               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("CTT")
If Type( "CTT->CTT_CEI" ) == "U"
   nTipoCaged := 1
Endif

Begin Sequence
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona as filiais que serao processadas                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	fAdEmpresa(nTipoCaged, @aEmpresa)
	If Len(aEmpresa) == 0
		Break
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Checa se o Diretorio para Gravacao esta correto           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cPathArq :=	If(Subst(cPathArq,-1)!= "\",cPathArq+"\",cPathArq)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Cria o Arquivo CAGED                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	While .T.
		If cCorrecao=="1"
			cPathArq	:= cPathArq + "A" + Right(DtoS(dDtRef),2) + Left(DtoS(dDtRef),4) + ".M" + SubStr(DtoS(dDtRef),5,2)
			nArq		:= MSFCREATE(cPathArq)
		Else
			cPathArq	:=	cPathArq + "CGED" + Left(DtoS(dDtRef),4) + ".M" + SubStr(DtoS(dDtRef),5,2)
			nArq		:=	MSFCREATE(cPathArq)
		EndIf

		If Ferror() # 0 .AND. nArq = -1
			cMsg := STR0017 + STR(FERROR(),3) 			//-- "Erro de abertura, codigo DOS: "
			Help('',1, "OPENERROR",,cMsg,1)				//-- "Nao foi possivel abrir ou  criar o arquivo do drive especifidado."
		    Break
		EndIf
		Exit
	EndDo

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pocisiona No Primeiro Registro Selecionado                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea(cAliasSRA)
   	aSRAArea := (cAliasSRA)->( GetArea() )
	If nTipoCaged == 1
	   dbSetOrder(1)
	   dbSeek( cFilDe + cMatDe,.T. )
	   cInicio  := "(cAliasSRA)->RA_FILIAL + (cAliasSRA)->RA_MAT"
	   cFim     := cFilAte + cMatAte
	Else
	   dbSetOrder(2)
	   dbSeek( cFilDe + cCcDe + cMatDe,.T. )
	   cInicio  := "(cAliasSRA)->RA_FILIAL + (cAliasSRA)->RA_CC + (cAliasSRA)->RA_MAT"
	   cFim     := cFilAte + cCcAte + cMatAte
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Faz filtro no arquivo...                                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	cSQL := "SELECT COUNT(*) TOTAL "
	cSQL += " FROM " +	RetSqlName(cAliasSRA) + " RA "

	cSQL += " WHERE "
	cSQL += " RA_FILIAL  BETWEEN  '" + cFilDe +"' AND '" +cFilAte  +"' AND "
	//monta filtro de filiais de acordo com o acesso do usuario
	cSQL += " RA_FILIAL IN ('' "
	For nX := 1 to Len(aValidFil)
		If aValidFil[nX] >= RTRIM(cFilDe) .AND. aValidFil[nX] <= RTRIM(cFilAte)
			cSQL += " ,'" + aValidFil[nX] +"' "
		ElseIf aValidFil[nX] > RTRIM(cFilAte)
			Exit
		EndIf
	Next nX
	cSQL += " ) AND "

	cSQL += " RA_MAT     BETWEEN  '" + cMatDe +"' AND '" +cMatAte  +"' AND "
	cSQL += " RA_CC      BETWEEN  '" + cCcDe  +"' AND '" +cCcAte   +"' AND "
	cSQL += " RA_CATFUNC NOT IN ('A','E','P','G')  AND "

 	cSQL += " NOT( "
 	cSQL += " RA_VIEMRAI = '80' AND "
 	cSQL += " RA_TIPOADM IN ('1A','1B','1C','4B') "
 	cSQL += " ) AND "
 	cSQL += " RA_REGIME <> '2' AND"
	cSQL += " ( "

	If lSubsTp
		cSQL += " SUBSTRING(RA_ADMISSA,1,6) =  '" + MesAno(dDtRef) + "' AND "
		cSQL += " SUBSTRING(RA_ADMISSA,7,2) <= '" + cDia + "' )"
	Else
		cSQL += " SUBSTR(RA_ADMISSA,1,6) =  '" + MesAno(dDtRef) + "' AND "
		cSQL += " SUBSTR(RA_ADMISSA,7,2) <= '" + cDia + "' )"
	EndIf

 	cSQL += " AND "

 	cSQL += " ( "
 	cSQL += " RA_DEMISSA = '" + Space(Len(Dtos(SRA->RA_DEMISSA))) + "' OR "

 	If lSubsTp
 		cSQL += " SUBSTRING(RA_DEMISSA,1,6) >= '" + MesAno(dDtRef) + "' "
 	Else
 		cSQL += " SUBSTR(RA_DEMISSA,1,6) >= '" + MesAno(dDtRef) + "' "
 	EndIf

 	cSQL += " ) AND "
	cSQL += "  RA.D_E_L_E_T_ = ' ' "

	cSQL		:= ChangeQuery(cSQL)
	aStruSRA 	:= (cAliasSRA)->(dbStruct())
	cAliasSRA	:= GetNextAlias()

	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cSQL),cAliasSRA,.F.,.T.)

	nTotFunc	:= (cAliasSRA)->TOTAL
	(cAliasSRA)->( dbCloseArea() )
	cAliasSRA	:= "SRA"

	cSQL := "SELECT	RA_FILIAL,  RA_MAT    , RA_CC     , RA_CATFUNC, RA_VIEMRAI, RA_HRSMES , "
	cSQL += "		RA_TIPOADM, RA_NOME   , RA_ADMISSA, RA_DEMISSA, RA_PIS    , RA_NASC   , "
	cSQL += "		RA_NUMCP  , RA_SERCP  , RA_UFCP   , RA_SEXO   , RA_CODFUNC, RA_HRSEMAN, "
	cSQL += "		RA_CATEG  , RA_TPCONTR, RA_RESCRAI, RA_GRINRAI, RA_SINDICA, RA_SITFOLH, "
	cSQL += "		RA_TIPOPGT, RA_ADTPOSE, RA_PERICUL, RA_SALARIO, RA_OPCAO  , RA_VCTOEXP, "
	cSQL += "		RA_VCTEXP2, RA_EXAMEDI, RA_PENSALI, RA_PERCADT, RA_ANTEAUM, RA_INSMIN , "
	cSQL += "		RA_INSMED , RA_INSMAX , RA_MESESAN, RA_PERCSAT, RA_PERFGTS, RA_TNOTRAB, "
	cSQL += "		RA_ASMEDIC, RA_DTVTEST, RA_RACACOR, RA_DEFIFIS, RA_CIC    , RA_CEP    , "
	cSQL += "		RA_NOMECMP "

	If (cAliasSRA)->(ColumnPos("RA_TPDEFFI")) > 0
		cSQL += ", RA_TPDEFFI "
	EndIf

	If lSalInc
		cSQL +=	", RA_SALINCO "
	Endif

	cSQL += " , RA_FECREI "

	If (cAliasSRA)->(ColumnPos("RA_HOPARC")) > 0
		cSQL += " , RA_HOPARC "
	EndIf

	If (cAliasSRA)->(ColumnPos("RA_CATEFD")) > 0
		cSQL += " , RA_CATEFD "
	Else
		cSQL += " , '' AS RA_CATEFD "
	EndIf

	cSQL += " , RA_TPJORNA, RA_TPCONTR "
	cSQL += " , RA.R_E_C_N_O_ RECNO "

	cSQL += " FROM " +	RetSqlName(cAliasSRA) + " RA "

	cSQL += " WHERE "
	cSQL += " RA_FILIAL  BETWEEN  '" + cFilDe +"' AND '" +cFilAte  +"' AND "
	//monta filtro de filiais de acordo com o acesso do usuario
	cSQL += " RA_FILIAL IN ('' "
	For nX := 1 to Len(aValidFil)
		If aValidFil[nX] >= RTRIM(cFilDe) .AND. aValidFil[nX] <= RTRIM(cFilAte)
			cSQL += " ,'" + aValidFil[nX] +"' "
		ElseIf aValidFil[nX] > RTRIM(cFilAte)
			Exit
		EndIf
	Next nX
	cSQL += " ) AND "

	cSQL += " RA_MAT     BETWEEN  '" + cMatDe +"' AND '" +cMatAte  +"' AND "
	cSQL += " RA_CC      BETWEEN  '" + cCcDe  +"' AND '" +cCcAte   +"' AND "
	cSQL += " RA_CATFUNC NOT IN ('A','E','P','G')  AND "

 	cSQL += " NOT( "
 	cSQL += " RA_VIEMRAI = '80' AND "
 	cSQL += " RA_TIPOADM IN ('1A','1B','1C','4B') "
 	cSQL += " ) AND "
 	cSQL += " RA_REGIME <> '2' AND"
	cSQL += " RA_ADMISSA <= '" + dTos(dDtRef) + "'"

 	cSQL += " AND "

 	cSQL += " ( "
	cSQL += " RA_DEMISSA = '" + Space(Len(Dtos(SRA->RA_DEMISSA))) + "' OR "

 	If lSubsTp
 		cSQL += " SUBSTRING(RA_DEMISSA,1,6) >= '" + MesAno(dDtRef) + "' "
 	Else
 		cSQL += " SUBSTR(RA_DEMISSA,1,6) >= '" + MesAno(dDtRef) + "' "
 	EndIf

 	cSQL += " ) AND "
	cSQL += "  RA.D_E_L_E_T_ = ' ' "

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define order by de acordo com a ordem...                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nTipoCaged  == 1
		cSQL += " ORDER BY " + SqlOrder("RA_FILIAL + RA_MAT " )
	ElseIf nTipoCaged  == 2
		cSQL += " ORDER BY " + SqlOrder("RA_FILIAL + RA_CC+ RA_MAT ")
	Endif

	cSQL     := ChangeQuery(cSQL)

	cAliasSRA:= GetNextAlias()

	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cSQL),cAliasSRA,.F.,.T.)

	For nX := 1 To Len(aStruSRA)
		If ( aStruSRA[nX][2] <> "C" )
			TcSetField(cAliasSRA,aStruSRA[nX][1],aStruSRA[nX][2],aStruSRA[nX][3],aStruSRA[nX][4])
		EndIf
	Next nX

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Chama a FwMarkBrowse para selecao dos funcionarios admitidos             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	fGP400Mark()
	DbSelectArea(cAliasSRA)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa os contadores                                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nSequencia := 0
	nTotReg_B  := 0
	nTotReg_C  := 0
	nCtDia     := 0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria o arquivo DBF temporiario para geracao do arquivo texto            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cArqGage := "CAGED"+cEmpant
	Gp400Cria( )

	If lCancela
		fDelCaged(nArq)
		Break
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega os Filtros                                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cSraFilter	:= GpFltAlsGet( aRetFiltro , "SRA" )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Desenha Regua para Movimentacao.                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lIsBlind
		GPProcRegua( nTotFunc )
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcula funcionarios por bloco da regua                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nStepFun := If( nTotFunc < 150, 1, Int( nTotFunc / ( 30 * 5 ) ) ) // 5 funcionarios por bloco da barra de progresso

	dbSelectArea( cAliasSRA )
	cFilAnte := Replicate("!", FWGETTAMFILIAL)
	cCCAnte  := "!!!!!!!!!"
	If !Empty( cGrpVerbas )
		cFilProc := If( lModoSRV, Space( TamSx3("RA_FILIAL")[1] ), (cAliasSRA)->RA_FILIAL )
		cVerbas_Aux	:= gp400GrpVerb( cFilProc )
	EndIf

	While !(cAliasSRA)->(Eof()) .And. &cInicio <= cFim

		lMark:= (Ascan(aMark,{|X| X[1] == (cAliasSRA)->RA_FILIAL .And. X[2] == (cAliasSRA)->RA_MAT}))> 0

		If cFilAnte # (cAliasSRA)->RA_FILIAL
			 nCount	:= 1
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Posiciono a matricula no SRA quando estiver usando Top Connect          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SRA->(dbSetOrder(1))
		If !SRA->(dbSeek((cAliasSRA)->(RA_FILIAL+RA_MAT)))
			(cAliasSRA)->(dbSkip())
			Loop
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Nao quebra de filial, busca os identificadores de calculo               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cFilAnte # (cAliasSRA)->RA_FILIAL
			If !Fp_CodFol(@aCodFol, xFilial('SRV', (cAliasSRA)->RA_FILIAL))
				Exit
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Posiciona na Filial que esta sendo processada				             ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nEmpAtu  := Ascan( aEmpresa, { |x| x[2] == (cAliasSRA)->RA_FILIAL } )
		   	cFilAnte := (cAliasSRA)->RA_FILIAL

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza o grupo de verbas conforme a Filial que esta sendo processada  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !lModoSRV .And. !Empty( cGrpVerbas ) .And. cFilProc # cFilAnte
				cVerbas_Aux	:= ""
		   		cVerbas_Aux	:= gp400GrpVerb( cFilAnte )
		   		cFilProc	:= cFilAnte
		 	EndIf
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Aplicação do filtro na tabela SRA.       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty( cSraFilter )
			If !( &( cSraFilter ) )
				dbSkip()
				Loop
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Processa Regua                                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	 	If !lIsBlind
			GpIncProc( (cAliasSRA)->RA_FILIAL + " - " + (cAliasSRA)->RA_MAT + " - " + Left((cAliasSRA)->RA_NOME,25), nStepFun, .T. )
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Datas de admissao e demissao.                                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dAdmissao := (cAliasSRA)->RA_ADMISSA
		dDemissao := (cAliasSRA)->RA_DEMISSA
		dReintegra:= CtoD("")

		//Se o campo RA_BLOQADM existir, já foi rodado o compaibilizador a a data de bloqueio esta neste campo, logo o RA_FECREI
		//sempre estara preenchido com a data de reintegração, do contrário verifica se a data é igual a data de dmeissão
		If	!Empty((cAliasSRA)->RA_FECREI) .and. ( lBloqAdm .or. (cAliasSRA)->RA_FECREI <> (cAliasSRA)->RA_DEMISSA )
			dReintegra:= (cAliasSRA)->RA_FECREI
		EndIf

		aSituacao := {}
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se funcionario foi transferido no mes, qdo funcionario nao for ³
		//³ demitido, ou demissao for maior ou igual ao mes de referencia           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Empty(dDemissao)  .or. ( MesAno( dDemissao) >=  MesAno( dDtRef ) )
			fVerTran( (cAliasSRA)->RA_FILIAL, ;
					  (cAliasSRA)->RA_MAT, ;
					  (cAliasSRA)->RA_CC, ;
					  dDtRef, ;
					  aEmpresa, ;
					  Iif(!Empty(dReintegra) .or. ( MesAno( dReintegra) >=  MesAno( dDtRef ) ), dReintegra, dAdmissao), ;
					  dDemissao, ;
					  @aSituacao )
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Processa Regua                                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IncProc((cAliasSRA)->RA_FILIAL + " - " + (cAliasSRA)->RA_MAT + " - " + (cAliasSRA)->RA_NOME)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se nao houver empresa correspondente a Filial/CEI, busca proxima        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nEmpAtu == 0
			dbSelectArea( cAliasSRA )
			dbSkip()
			Loop
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Datas de admissao e demissao.											      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dAdmissao := (cAliasSRA)->RA_ADMISSA
		dDemissao := (cAliasSRA)->RA_DEMISSA
		aSituacao := {}

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se funcionario foi transferido no mes, qdo funcionario nao for ³
		//³ demitido, ou demissao for maior ou igual ao mes de referencia          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If  Empty(dDemissao)  .or. ( MesAno( dDemissao) >=  MesAno( dDtRef ) )
			fVerTran( (cAliasSRA)->RA_FILIAL, (cAliasSRA)->RA_MAT, (cAliasSRA)->RA_CC, dDtRef, aEmpresa,If( !Empty(dReintegra) .or. ( MesAno( dReintegra) >=  MesAno( dDtRef ) ), dReintegra, dAdmissao), dDemissao, @aSituacao )
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Funcionario nao deve ser considerado no mes referencia                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Len(aSituacao) <= 0
			(cAliasSRA)->(dbSkip())
			Loop
		Endif
		For nX := 1 to len( aSituacao )
			lDemissao 	:= .F.
			lAdmissao 	:= .F.

	   		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Desconsidera funcion rios demitidos em meses Anteriores  e posteriores  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( !Empty( aSituacao[nx,5] ) .and.   MesAno( aSituacao[nx,5] ) < MesAno( dDtRef ) ) .or. ;
				MesAno( aSituacao[nx,4]  ) > MesAno( dDtRef )
				Exit
			Endif

	    	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Posiciona no CEI (Centro de Custo ) que esta sendo processado           ³
			//³ Nao posso testar ntipocaged=2 pois pode haver casos onde nao houve trans³
			//³ ferencia e func.esta em um determidado cc/cei e neste caso tenho que    ³
			//³ apenas posicionar no cc/cei                                             ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nEmpAtu := Ascan( aEmpresa, { |x| x[2]+ x[3] ==  aSituacao[nX,6] + aSituacao[nX,7] } )   //-- Filial + Cc
			If nEmpAtu = 0
				nEmpAtu  := Ascan( aEmpresa, { |x| x[2] == aSituacao[nX,6] } )
			EndIf

			If nEmpAtu == 0
				Exit
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se e admissao.													      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IF lMark .OR. (( MesAno( aSituacao[nx,4] ) = MesAno( dDtRef ) .And. ( aSituacao[nx,2] ) ) .and. lDemis)
				lAdmissao := .T.
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se e demissao.													      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (( MesAno( aSituacao[nx,5] ) = MesAno( dDtRef  )   .or. ;
		 	      aSituacao[nx,3] .or. ;                                                    //-- "Demissao" por transferencia
		 	      (  !(aSituacao[nx,3]) .and. !Empty(ddemissao) .and.  MesAno(ddemissao) = MesAno( dDtRef  ) ) ) .and. ;   //-- qdo nao houve transf. mas teve demissao no mes
				  (lDemis))
				lDemissao 	:= .T.

			Endif

			cCusto		:= If(!Empty(aSituacao[nX,7]),aSituacao[nX,7], (cAliasSRA)->RA_CC )
			cEstabel	:= aEmpresa[nEmpAtu,1]
			cUFEstab	:= aEmpresa[nEmpAtu,6]
			cAdmissao	:= StrZero( Day( aSituacao[nx,4] ), 2 ) + StrZero( Month( aSituacao[nx,4] ), 2 ) + StrZero( Year( aSituacao[nx,4] ), 4 )
			cDemissao   := If(MesAno( aSituacao[nx,5] ) # MesAno( dDtRef ), "00", StrZero( Day( aSituacao[nx,5] ), 2 ) )

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Buscar dados do funcionario somente se houve alguma        ³
			//³transferencia ou se for admissao ou demissao,caso contrario³
			//³so preciso verificar se o funcionario deve ser contado no  ³
			//³inicio do mes ou nao                                       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( nX = 1 .And. ( aSituacao[nX,02] .or. aSituacao[nX,03] )  )  .Or. ;
				lAdmissao .Or. lDemissao

				Salario := SalHora := SalDia := SalMes := 0.00
				If lSalInc .And. (cAliasSRA)->RA_SALINCO > 0
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verifica se existe o campo no cadastro e utiliza como salario de refer. ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					SalMes := (cAliasSRA)->RA_SALINCO
				Else
					If !lRemuneracao .And. (cAliasSRA)->RA_CATFUNC == "M"
						If Empty( SalMes := (cAliasSRA)->RA_SALARIO )
							fM400Salario( cAliasMov, cVerbas_Aux, cGrpVerbas  )
						EndIf
					ElseIf !lRemuneracao .And. (cAliasSRA)->RA_CATFUNC == "H"
						If Empty( SalMes := (cAliasSRA)->RA_SALARIO * (cAliasSRA)->RA_HRSMES )
							fM400Salario( cAliasMov, cVerbas_Aux, cGrpVerbas  )
						EndIf
					Else
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera SALARIO incorporado + verbas informadas-Retorna SalMes             ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						fM400Salario()
					EndIf
				Endif

				// Gera variaveis de trabalho
				cFil		:= (cAliasSRA)->RA_FILIAL
				cPis		:= StrZero( Val( AllTrim( (cAliasSRA)->RA_PIS ) ), 11 )
				cNascimento	:= StrZero( Day( (cAliasSRA)->RA_NASC ), 2 ) + StrZero( Month( (cAliasSRA)->RA_NASC ), 2 ) + Strzero( Year( (cAliasSRA)->RA_NASC ), 4 )
				If Empty((cAliasSRA)->RA_NUMCP) // Portaria 1065 - CTPS Digital
					cCtps 		:= StrZero( Val( Left((cAliasSRA)->RA_CIC,7) ), 8 )
				Else
					cCtps 		:= StrZero( Val( (cAliasSRA)->RA_NUMCP ), 8 )
				EndIf
				If Empty((cAliasSRA)->RA_SERCP) .And. Empty((cAliasSRA)->RA_NUMCP)
					cSerieCTPS	:= fChkTamCpo( Substr((cAliasSRA)->RA_CIC,8,4), 4 )
				Else
					cSerieCTPS	:= fChkTamCpo( (cAliasSRA)->RA_SERCP, 4 )
				EndIf
				If Empty((cAliasSRA)->RA_UFCP) .And. Empty((cAliasSRA)->RA_NUMCP)
					If fInfo( @aInfo, (cAliasSRA)->RA_FILIAL )
						cUfCtps		:= aInfo[6] // UF da Filial do Funcionário (local de trabalho)
					Else
						cUfCtps		:= Space(2)
					EndIf
				Else
					cUfCtps		:= (cAliasSRA)->RA_UFCP
				EndIf
				cRaca		:= If ((cAliasSRA)->RA_RACACOR=="0","1", (cAliasSRA)->RA_RACACOR)
				cDeficiente	:= (cAliasSRA)->RA_DEFIFIS
				cSexo		:= If( (cAliasSRA)->RA_SEXO = "M", "1", "2" )
				cMovto		:= Space(2)
				cInstrucao	:= fInstrucao()
				cCbo		:= fCodCBO(xFilial('SRJ', (cAliasSRA)->RA_FILIAL),(cAliasSRA)->RA_CODFUNC,dDtRef)
				cRemune		:= StrZero( Round(SalMes, MsDecimais(1) )   * 100 , 8 )
				cHoras		:= StrZero( (cAliasSRA)->RA_HRSEMAN, 2 )
				If !Empty((cAliasSRA)->RA_NOMECMP) .And. Len(AllTrim((cAliasSRA)->RA_NOMECMP)) <= 40
					cNome 	:= (cAliasSRA)->RA_NOMECMP
				Else
					cNome 	:= (cAliasSRA)->RA_NOME
				EndIf
				cNome		:= Left( cNome + Space( 40 ), 40 )
				cTpDefFi	:= ""
				cTpDefFi	:= 	If( Empty( (cAliasSRA)->RA_TPDEFFI ) .or. (cAliasSRA)->RA_DEFIFIS== "2","0",(cAliasSRA)->RA_TPDEFFI )
				cCPF		:= StrZero( Val( (cAliasSRA)->RA_CIC ), 11 )
				cCEP		:= StrZero( Val( (cAliasSRA)->RA_CEP ), 8 )
				cExCodi		:= ""
				cExData		:= ""
				cExCnpj		:= ""
				cExCRM		:= ""
				cExUFCR		:= ""
				cTParc    	:= If( lHoParc .And. (cAliasSRA)->RA_HOPARC == "1" .And. (cAliasSRA)->RA_HRSEMAN <= 25, "1", "2" )
				cTTele		:= If( (cAliasSRA)->RA_TPJORNA == "4", "1", "2" )
				cTInte		:= If( (cAliasSRA)->RA_TPCONTR == "3", "1", "2" )
				//para geração a partir de 08/2017 e acerto de competências superiores a 03/2016,
				//funcionários motoristas  profissionais precisam
				//preencher dados do exame toxicológico
				If SuperGetMv("MV_MDTGPE",,"N") == "S" .And. !Empty(Alltrim(cCbo)) .And. IIf( cCorrecao == "1", MesAno(dDtref) >= "201603", Right(cMesComp,4) + Left(cMesComp,2) >= "201709" )
					If ChkFile("TM5") .And. ChkFile("SA2") .And. ChkFile("TM0") .And. ChkFile("TM4") .And. ChkFile("TNP")
						DbSelectArea("TM5")

						If TM5->( ColumnPos("TM5_CODDET") ) > 0 .And. TM5->( ColumnPos("TM5_USUARI") ) > 0
							If Ascan( aCBOMoto , cCbo) > 0
								aMDTExm := MDTExCAGED((cAliasSRA)->RA_FILIAL, (cAliasSRA)->RA_MAT,;
										Iif(lAdmissao .OR. (cAliasSRA)->RA_RESCRAI $ '30/31',(cAliasSRA)->RA_ADMISSA,(cAliasSRA)->RA_DEMISSA),;
										Iif(lAdmissao .OR. (cAliasSRA)->RA_RESCRAI $ '30/31',"1","5"))
								If Len(aMDTExm) >= 1
									cExCodi := aMDTExm[1,1]
									cExData := Substr(aMDTExm[1,2],7,2)+Substr(aMDTExm[1,2],5,2)+Substr(aMDTExm[1,2],1,4)
									cExCnpj := aMDTExm[1,4]
									cExCRM  := aMDTExm[1,6]
									cExUFCR := aMDTExm[1,5]

									If !Empty(cExCRM)
										cExCRM := Replace(cExCRM, ",", "")
										cExCRM := Replace(cExCRM, ".", "")
									EndIf
								EndIf
							EndIf
						EndIf
					EndIf
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica Categ.SEFIP=07 -Menor aprendiz.Somente se nada for informado, verifica³
				//³ o tipo de Admissao Menor Aprendiz 1-Sim  2- Nao                                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !Empty((cAliasSRA)->RA_CATEG) .And. (cAliasSRA)->RA_CATEG == "07" .And. !(cAliasSRA)->RA_CATEFD $ "107/108" .Or. (cAliasSRA)->RA_TIPOADM $ "3A/3B/3C"
					cAprendiz := "1"
				Else
					cAprendiz := "2"
				EndIf
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Totaliza funcionarios do 1o. Dia Mes                                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If aSituacao[nx,1]				//-- Conta inicio

				If MesAno(aSituacao[nx,4]) < MesAno(dDtRef)  .and. ( Empty( aSituacao[nx,5] ) .or. ;
				   MesAno( aSituacao[nx,5] ) > MesAno(dDtRef) ) .and. ;
				   !aSituacao[nx,2]

					aEmpresa[nEmpAtu,4] ++
					aAdd( aLog , {  "MOVINI",          		;
								     asituacao[nx,6],     	;
								    (cAliasSRA)->RA_MAT, 	;
								    (cAliasSRA)->RA_NOME,	;
					                StrZero( Day( dAdmissao ), 2 ) + "/" + StrZero( Month( dAdmissao ), 2 ) + "/" + StrZero( Year( dAdmissao ), 4 ), ;
					                If( cDemissao =="00", "          ", StrZero( Day( dDemissao ), 2 ) + "/" + StrZero( Month( dDemissao ), 2 ) + "/" + StrZero( Year( dDemissao ), 4 ) ), ;
					                strzero(ncount++,5) } )

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Saidas (Demissoes/Transf.) no mes e mes posterior                       ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ElseIf MesAno(aSituacao[nx,5]) >= MesAno(dDtRef)  .and. MesAno(aSituacao[nx,4])< MesAno(dDtRef) //-- Saidas (Demissoes/Transf.) no mes e mes posterior
					aEmpresa[nEmpAtu,4] ++
					aAdd( aLog , {  "MOVINI",            ;
								    asituacao[nx,6],     ;
								    (cAliasSRA)->RA_MAT, ;
								    (cAliasSRA)->RA_NOME,;
					                StrZero( Day( dAdmissao ), 2 ) + "/" + StrZero( Month( dAdmissao ), 2 ) + "/" + StrZero( Year( dAdmissao ), 4 ), ;
					                If( cDemissao =="00" , "          ", StrZero( Day( dDemissao ), 2 ) + "/" + StrZero( Month( dDemissao ), 2 ) + "/" + StrZero( Year( dDemissao ), 4 ) ), ;
					                strzero(ncount++,5) } )
				Endif
			Endif

			nGravou:=0;
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Registra a Admissao     												      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lAdmissao
				cMovto		:= Space(2)
			    If (cAliasSRA)->RA_TPCONTR = "2" .AND. !((cAliasSRA)->RA_TIPOADM == "3A" .And. (cAliasSRA)->RA_VIEMRAI == "55" )
				   	cMovto := "25"										//-- 25 - Contrato por prazo determinado
				ElseIf Right( (cAliasSRA)->RA_TIPOADM, 1 ) = "A"
				   	cMovto := "10"  										//-- 10 - Primeiro emprego
				ElseIf Right( (cAliasSRA)->RA_TIPOADM, 1 ) = "C"
					cMovto := "70"										//-- 70 - Transferência de entrada
				Elseif  (cAliasSRA)->RA_TIPOADM = "4B"
				  	cMovto := "35"										//-- 35 - Reintegração
				Else
					cMovto := "20"                              	//-- 20 - Reemprego
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Forca cMvto de transferencia para registrar a entrada por transferencia  ³
				//³qdo a situacao do funcionario ja eh outra                                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If  aSituacao[nX,02] .and. ( cMovto# "70" )
					cMovto := "70"										//-- 70 - Transferência de entrada
				Endif

				nGravou+=GrvCaged("A",aSituacao[nx,4])
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Registra a Demissao    													      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lDemissao
				cDemissao  	:= If ( !Empty(aSituacao[nx,5])  ,StrZero( Day( aSituacao[nx,5] ), 2 ), StrZero( Day( dDemissao ), 2 )   )
				cMovto		:= Space(2)
				If (cAliasSRA)->RA_RESCRAI $ "20*21"
					cMovto := "40"							//-- 40 - A pedido (espontâneo)
				ElseIf ( cAliasSRA )->RA_VIEMRAI $ "90/55"			//VINCULO EMPREGATICIO DA RAIS - CONTRATO COM PRAZO DETERMINADO
					cMovto := "43"							//-- 43 - Término de contrato por prazo determinado
				ElseIf (cAliasSRA)->RA_RESCRAI $ "10"
					cMovto := "32"							//-- 32 - Dispensa por justa causa
				ElseIf (cAliasSRA)->RA_RESCRAI $ "11*40*90"
					cMovto := "31"							//-- 31 - Dispensa sem justa causa
				ElseIf (cAliasSRA)->RA_RESCRAI $ "12"
					cMovto := "45"							//-- 45 - Término de contrato
				ElseIf (cAliasSRA)->RA_RESCRAI $ "60*62*64"
					cMovto := "60"							//-- 60 - Morte
				ElseIf (cAliasSRA)->RA_RESCRAI $ "50*70*71*72*73*74*75*76*78*79*80"
					cMovto := "50"							//-- 50 - Aposentado
				ElseIf ( (cAliasSRA)->RA_RESCRAI $ "30" .and. !Empty(aSituacao[nx,5]) .and. MesAno(aSituacao[nx,5]) = MesAno( dDtRef  ) ) .or. ;		//30 - Com Onus p/Cedente ; normalmente tem  rescisao
			           ( (cAliasSRA)->RA_RESCRAI $ "31" .and. !Empty(aSituacao[nx,5]) .and. MesAno(aSituacao[nx,5]) = MesAno( dDtRef  ) ) .or. ;		//31 - Sem Onus p/ Cedente
			           (aSituacao[nx,3] .and. Empty((cAliasSRA)->RA_RESCRAI) .and. !Empty(aSituacao[nx,5])  )
					cMovto := "80"							//-- 80 - Transferência de saída
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Forca cMvto de transferencia para registrar a saida   por transferencia  ³
				//³qdo a situacao do funcionario ja eh outra   (ex: se ja estiver demitido) ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If  aSituacao[nX,03] .and. ( cMovto# "80" )
					cMovto := "80"							//-- 80 - Transferência de saída
				Endif

				nPos := fPosTab("S043", fDesc("SRG", (cAliasSRA)->RA_MAT+dToS((cAliasSRA)->RA_DEMISSA), "RG_TIPORES", , (cAliasSRA)->RA_FILIAL, 3), "==", 04)
				If nPos > 0 .And. fTabela("S043", nPos, 7) $ "A*B" //Aviso Previo
					cMovto := "90"							//-- 90 - Desligamento por acordo empregado/empregador
				EndIf

				If !Empty(cMovto)
					nGravou+=GrvCaged("D", aSituacao[nx,4])
				EndIf
			EndIf

			IF (nGravou>0)

				//Array de funcionarios a atualizar o campo RA_DTCAGED
				aAdd(aFilMat,(cAliasSRA)->RA_FILIAL+(cAliasSRA)->RA_MAT)

			Endif
		Next nX

	   	dbSelectArea( cAliasSRA )
		dbSkip()
	EndDo

	dbSelectArea(cAliasSRA) //Seleciona a Query
	dbCloseArea()       	//Fecha a Query
	dbSelectArea("SRA") 	//Abre o SRA padrao
	cAliasSRA	:= "SRA"

	dbSelectArea( cArqGage )
	If Reccount() = 0
		nOpc := Aviso( STR0022, STR0023, { STR0024 } ) //##"Alerta"##"Não foram incluídos registros no arquivo do CAGED"##"OK"
		fDelCaged(nArq)
		Break
	Endif

	nQtdMov := Reccount()
	nQtdEst := 0
	dbGoTop()
	cEmpCaged := "!!!!!!!!!!!!!!"
	While !Eof()
		If cEmpCaged # CAG_ESTABE
			nQtdEst++
			cEmpCaged := CAG_ESTABE
		Endif
		dbSkip()
	Enddo

	cFilAnt := cFilResp
	If !fInfo( @aInfo, cFilResp )
		fDelCaged(nArq)
		Break
	EndIf
	cTipInsc := If( aInfo[28]=1, "2", If( aInfo[28]=2, "1", "1" ) )

	GERA_A( @nSequencia, aInfo, nQtdEst, nQtdMov )

	dbGoTop()
	cEmpCaged := "!!!!!!!!!!!!!!"
	While !Eof()
		If cEmpCaged # CAG_ESTABE
			cFilAnt := CAG_FILIAL
			cCgcCC := cCeiCC := ""
			If !fInfo( @aInfo, CAG_FILIAL )
				fDelCaged(nArq)
				Break
			EndIf
			dbSelectArea( cArqGage )
			cTipInsc  := If( aInfo[28]=1, "2", If( aInfo[28]=2, "1", "1" ) )
			cEmpCaged := CAG_ESTABE
			nPosEstab := aScan( aEmpresa, { |x| x[1] == cEmpCaged .And. x[3] == CAG_CUSTO } )
			If nTipoCaged == 2 .And. !Empty( aEmpresa[nPosEstab,5] )// Tipo de Incricao CEI
				cTipInsc := aEmpresa[nPosEstab,5]
				cCgcCC := If( cTipInsc == "1", aEmpresa[nPosEstab,1], "" )
				cCeiCC := If( cTipInsc == "2", aEmpresa[nPosEstab,1], "" )
			EndIf
			nTotEPDia := 0
			Aeval(aEmpresa,{ |X| If( X[1] == cEmpCaged, nTotEPDia += X[4], nTotEPDia )})

			Gera_B( @nSequencia, aInfo, nTotEPDia, cCeiCC, cCgcCC )
		Endif
		Gera_C( @nSequencia, aInfo, cCeiCC, cCgcCC )

		dbSkip()
	Enddo

	GERA_Z()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Deleta os arquivos temporarios(DBF/CDX) utilizados para geracao do CAGED³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	fDelCaged(nArq)
	fGravaData(aFilMat)
End Sequence

cFilAnt := cBkpFil
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apresenta log de erros, se houver.                                      	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTimeFim := Seconds()
If !lCancela
	GeraLog(aLog, "GPM400")

	If Type("aSRAArea") <> "U"
		RestArea(aSRAArea)
	Endif

	dbSelectArea( cAliasSRA )
	dbSetOrder(1)
Endif
Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ Gera_a   ³ Autor ³ J. Ricardo            ³ Data ³ 14/03/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gera o registro do tipo "A" do CAGED.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Gera_a( nSequencia, aInfo, nTotReg_B, nTotReg_C )		    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ nSequencia - Numero da sequencia		   					    ³±±
±±³          ³ aInfo      - Matriz de informacoes da filial				    ³±±
±±³          ³ nTotReg_B  - Total de registros do tipo "B"				    ³±±
±±³          ³ nTotReg_C  - Total de registros do tipo "C"				    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GERA_A( nSequencia, aInfo, nTotReg_B, nTotReg_C )
Local	REG10_001, REG10_002, REG10_003, REG10_004
Local	REG10_010, REG10_016, REG10_017, REG10_022
Local	REG10_023, REG10_037, REG10_072, REG10_112
Local	REG10_120, REG10_122, REG10_139, REG10_144
Local	REG10_149
Local	nCol	 := 0
Local	cDetalhe := ''
Local	cFoneSM0 := ' '
Local	aFoneSM0 := {}

++nSequencia
REG10_001   := "A"																				// Tipo de Registro
REG10_002   := "L2009"																			// Tipo de Layout
REG10_003   := Space( 2 )																		// Filler
REG10_004   := "2"																				// Meio Fisico
REG10_010   := If(cCorrecao == "1",cMesCorren,cMesComp)											// Mes/Ano - MMAAAA
REG10_016   := cMudou																			// Alterou Endereco
REG10_017   := StrZero( nSequencia, 5 )															// Numero Sequencial de Lactos
REG10_022   := cTipInsc																			// Tipo de Inscricao - 1-CGC/2-CEI
REG10_023   := If(cTipInsc == "1", StrZero( Val(aInfo[08]), 14), StrZero(Val(aInfo[27]), 14 ))	// CGC/n.Cei.
REG10_037   := Left( aInfo[3] + Space( 35 ), 35 )												// Razao Social
REG10_072   := Left( alltrim(aInfo[4]) + Space( 1) + ;
					alltrim(aInfo[14]) + Space( 40 ), 40 )										// Endereco + Complemento
REG10_112   := StrZero( Val( aInfo[07] ), 8 )													// Cep
REG10_120   := Left( aInfo[6] + Space( 2 ), 2 )													// Uf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Funcao para desmembrar o telefone em um vetor com 3 elementos:		  ³
//³		1o Elemento - Refere-se ao DDI                                   ³
//³		2o Elemento - Refere-se ao DDD                                   ³
//³		3o Elemento - Refere-se ao TELEFONE                              ³
//³ Deve-se enviar o telefone em uma variavel caracter com o conteudo   ³
//³ do campo SM0->M0_FONE.											         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cFoneSM0    := aInfo[10]									// DDD + Telefone
aFoneSM0	:= FisGetTel( cFoneSM0 )							// DDD + Telefone
REG10_122   := StrZero(aFoneSM0[02],4) +  Right(AllTrim(Str(aFoneSM0[03])) , 8)
For nCol := 1 to Len( aCaracter )
	REG10_122 := Left( StrTran( REG10_122, aCaracter[nCol], "" ), 17 )	// DDD + Telefone
Next nCol
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apos a exclusao dos Caracteres nao aceitos no CAGED                 ³
//³ completa a informacao para tamanho de 17 caracteres                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
REG10_122 := Left( REG10_122 + Space( 17 - Len( REG10_122 )), 17 )		// DDI + DDD + Telefone

REG10_139   := StrZero( nTotReg_B, 5 )          				// Total de Registros B
REG10_144   := StrZero( nTotReg_C, 5 )          				// Total de Registros C
REG10_149   := Space( 92 )			                         // Filler

cDetalhe    :=	REG10_001 + REG10_002 + REG10_003 + REG10_004 + REG10_010 + ;
            	   REG10_016 + REG10_017 + REG10_022 + REG10_023 + REG10_037 + ;
               	REG10_072 + REG10_112 + REG10_120 + REG10_122 + REG10_139 + ;
               	REG10_144 + REG10_149

If !GRAVA( cDetalhe, 240 )
	Return(.F.)
Endif
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ Gera_b   ³ Autor ³ J. Ricardo            ³ Data ³ 14/03/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gera o registro do tipo "B" do CAGED.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Gera_B( nSequencia, aInfo, nTotEPDia )                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ nSequencia - Numero da sequencia                           ³±±
±±³          ³ aInfo      - Matriz de informacoes da filial               ³±±
±±³          ³ nTotEPDia  - Qtdade total de funcionarios no primeiro dia  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GERA_B( nSequencia, aInfo, nTotEPDia, cCeiCC, cCgcCC )
Local REG20_001, REG20_002, REG20_003, REG20_017
Local REG20_022, REG20_023, REG20_024, REG20_032
Local REG20_037, REG20_077, REG20_117, REG20_137
Local REG20_139, REG20_144
Local nCol := 0

DEFAULT cCeiCC := ""
DEFAULT cCgcCC := ""

++nSequencia

REG20_001   := "B"
REG20_002   := cTipInsc																			// Tipo de Inscricao - 1-CGC/2-CEI
REG20_003   := If(cTipInsc == "1", If(Empty(cCgcCC),StrZero(Val(aInfo[08]), 14), cCgcCC), If(Empty(cCeiCC),StrZero(Val(aInfo[27]), 14 ),cCeiCC))	// CGC ou CEI
REG20_017   := StrZero( nSequencia, 5 )															// Numero Sequencial de Lactos
REG20_022   := cPrimeira																		// Declaracao 1-Sim 2-Nao
REG20_023   := If( cEncerrou="1", "3", cMudou )													// Alterou Endereco/Encerramento
REG20_024   := StrZero( Val( aInfo[07] ), 8 )													// Cep
REG20_025   := Space( 5 )																		// Filler
REG20_032   := StrZero( Val( Subst( aInfo[16], 1, 5 ) ), 5 )									// Atividade Economica CNAE
REG20_037   := Left( aInfo[3] + Space( 40 ), 40 )												// Razao Social
REG20_077   := Left( alltrim(aInfo[4]) + Space( 1)+ ;
				alltrim(aInfo[14])+ Space( 40 ), 40 )											// Endereco + Complemento
REG20_117   := Left( aInfo[13] + Space( 20 ), 20 )												// Bairro
REG20_137   := Left( aInfo[6] + Space( 2 ), 2 )													// Uf
REG20_139   := Strzero( nTotEPDia, 5 )															// Total Empreg.1o.Dia
REG20_140   := cPeqMed																			// Porte da Empresa
REG20_141   := StrZero( Val( Subst( aInfo[16], 1, 7 ) ), 7 )									//Ativ.Econ.CNAE+SUBCLASSES

cFoneSM0	:= aInfo[10]	// DDD + Telefone
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Funcao para desmembrar o telefone em um vetor com 3 elementos:		  ³
//³		1o Elemento - Refere-se ao DDI								 		  ³
//³		2o Elemento - Refere-se ao DDD										  ³
//³		3o Elemento - Refere-se ao TELEFONE								  ³
//³ Deve-se enviar o telefone em uma variavel caracter com o conteudo	  ³
//³ do campo SM0->M0_FONE.													  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aFoneSM0	:= FisGetTel( cFoneSM0 ) 							// DDD + Telefone
REG20_143   := StrZero(aFoneSM0[02],4) + RIGHT(ALLTRIM(Str(aFoneSM0[03])) , 8 )
For nCol := 1 to Len( aCaracter )
	REG20_143 := Left( STRTRAN( REG20_143, aCaracter[nCol], "" ), 12 )	// DDD + Telefone
Next

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apos a exclusao dos Caracteres nao aceitos no CAGED					³
//³	completa a informacao para tamanho de 12 caracteres					³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
REG20_143 := Left( REG20_143 + Space( 12 - Len( REG20_143 )), 12 )  	// DDD + Telefone
REG20_144   := cEmail													// Email Responsavel
REG20_147   := Space( 27 )												// Filler

If nTipoCaged == 2
	dbSelectArea( "CTT" )
	dbSeek( If( xFilial( "CTT" ) == Space(FwGetTamFilial), Space(FwGetTamFilial), xFilial('CTT', (cArqGage)->CAG_FILIAL)) + (cArqGage)->CAG_CUSTO )
	If Type( "CTT->CTT_CEI"  ) # "U"  .and. !EMPTY(CTT->CTT_CEI) .and. ;
	   Type( "CTT->CTT_NOME" ) # "U"  .And. Type( "CTT->CTT_ENDER" ) # "U" .and. ;
	   ( (TYPE("CTT->CTT_RECFAT") #"U" .and. CTT->CTT_RECFAT <> "S") .or. (TYPE("CTT->CTT_RECFAT") == "U") )

		REG20_024   := StrZero( Val( CTT->CTT_CEP ), 8 )			// Cep
		REG20_037   := Left( CTT->CTT_NOME    + Space( 40 ), 40 )   // Razao Social
		REG20_077   := Left( CTT->CTT_ENDER   + Space( 40 ), 40 )	// Endereco
		REG20_117   := Left( CTT->CTT_BAIRRO  + Space( 20 ), 20 )	// Bairro
		REG20_137   := Left( CTT->CTT_ESTADO  + Space( 02 ), 02 )	// Uf
	EndIf
	dbSelectArea( cArqGage )
EndIf

cDetalhe    :=	REG20_001 + REG20_002 + REG20_003 + REG20_017 + REG20_022 + ;
				REG20_023 + REG20_024 + REG20_025 + REG20_037 + REG20_077 + ;
				REG20_117 + REG20_137 + REG20_139 + REG20_140 + REG20_141 + ;
				REG20_143 + REG20_144 + REG20_147

If !GRAVA( cDetalhe, 240 )
	Return(.F.)
Endif
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ Gera_c   ³ Autor ³ J. Ricardo            ³ Data ³ 14/03/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gera o registro do tipo "C" ou "X" do CAGED.               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Gera_c( nSequencia, aInfo )                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ nSequencia - Numero da sequencia                           ³±±
±±³          ³ aInfo      - Matriz de informacoes da filial               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GERA_C( nSequencia, aInfo, cCeiCC, cCgcCC  )
Local REG30_001, REG30_002, REG30_003, REG30_017, REG30_022
Local REG30_033, REG30_034, REG30_042, REG30_044, REG30_048
Local REG30_056, REG30_058, REG30_066, REG30_068, REG30_070
Local REG30_110, REG30_118, REG30_122, REG30_129, REG30_130
Local REG30_131, REG30_137, REG30_138, REG30_140, REG30_141
Local REG30_152, REG30_160, REG30_211, REG30_212, REG30_213
Local REG30_214, cDetalhe

DEFAULT cCeiCC := ""
DEFAULT cCgcCC := ""

++nSequencia

REG30_001 := If( cCorrecao == "2", "C", "X" )
REG30_002 := cTipInsc						// Tipo de Inscricao - 1-CGC/2-CEI
REG30_003 := If(cTipInsc == "1", If(Empty(cCgcCC),StrZero(Val(aInfo[08]), 14), cCgcCC), If(Empty(cCeiCC),StrZero(Val(aInfo[27]), 14 ),cCeiCC))	// CGC ou CEI
REG30_017 := StrZero( nSequencia, 5 )		// Numero Sequencial de Lactos
REG30_022 := (cArqGage)->CAG_PIS			// No.do PIS do funcionario
REG30_033 := (cArqGage)->CAG_SEXO			// Sexo 1-Masculo 2-Feminino
REG30_034 := (cArqGage)->CAG_DTNASC			// Data de Nascimento DDMMAAA
REG30_042 := Left( (cArqGage)->CAG_INSTR + Space( 2 ), 2 )				// Grau de instrucao
REG30_044 := If( lVerCaged, Space( 04 ), AllTrim((cArqGage)->CAG_CBO) )	// Filler Ou CBO
REG30_048 := (cArqGage)->CAG_RENUME			// Salario Mensal
REG30_056 := (cArqGage)->CAG_HORAS			// Horas Trabalhadas
REG30_058 := (cArqGage)->CAG_DTADM			// Dia da Admissao DD
REG30_066 := (cArqGage)->CAG_TIPMOV			// Tipo Movimentacao
REG30_068 := (cArqGage)->CAG_DESLIG			// Dia Desligamento
REG30_070 := (cArqGage)->CAG_NOME			// Nome Empregado
REG30_110 := (cArqGage)->CAG_CTPS			// Numero da Carteira Profissional
REG30_118 := (cArqGage)->CAG_SCTPS			// Serie da Carteira Profissional
REG30_122 := Space( 01 )			    	// Filler
REG30_123 := Space( 06 )			    	// Filler
If cCorrecao == "1"							// Correcao
	REG30_122 := cTipoCorre					// Atualizacao 1-Exclusao/2-Inclusao
	REG30_123 := cMesComp			 		// Competencia a Acertar
EndIf
REG30_129 := (cArqGage)->CAG_RACA			// Raca
REG30_130 := (cArqGage)->CAG_DEFFIS			// Deficiente fisico
REG30_131 := If( lVerCaged, (cArqGage)->CAG_CBO, Space(6) ) // Codigo CBO Ou Filler
REG30_137 := (cArqGage)->CAG_APREND			// Menor Aprendiz 1-Sim 2-Nao
REG30_138 := (cArqGage)->CAG_UFCTPS			// Uf CTPS
REG30_140 := (cArqGage)->CAG_TPDEF			// Filler
REG30_141 := (cArqGage)->CAG_CPF  			// CPF Trabalhador
REG30_152 := (cArqGage)->CAG_CEP  			// Cep Trabalhador
//verifica se vai gravar detalhes do exame toxicologico
If !Empty(Alltrim((cArqGage)->CAG_CODEXA))
    REG30_160 := (cArqGage)->CAG_CODEXA + (cArqGage)->CAG_DTEXA + (cArqGage)->CAG_CNPJL + ;
                 (cArqGage)->CAG_UFCRM + (cArqGage)->CAG_MDCRM
Else
    REG30_160 := Space( 51 )					// Filler
EndIf

REG30_211 := (cArqGage)->CAG_TPARC 				// Trabalho Parcial
REG30_212 := (cArqGage)->CAG_TTELE  			// Teletrabalho
REG30_213 := (cArqGage)->CAG_TINTE  			// Trabalho Intermitente
REG30_214 := Space( 27 )						// Filler

cDetalhe :=	REG30_001 + REG30_002 + REG30_003 + REG30_017 + REG30_022 + ;
			REG30_033 + REG30_034 + REG30_042 + REG30_044 + REG30_048 + ;
			REG30_056 + REG30_058 + REG30_066 + REG30_068 + REG30_070 + ;
			REG30_110 + REG30_118 + REG30_122 + REG30_123 + REG30_129 + ;
			REG30_130 + REG30_131 + REG30_137 + REG30_138 + REG30_140 + ;
			REG30_141 + REG30_152 + REG30_160 + REG30_211 + REG30_212 + ;
			REG30_213 + REG30_214

If !GRAVA( cDetalhe, 240 )
	Return(.F.)
Endif
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Gp400Cria ³ Autor ³ Ricardo               ³ Data ³ 14/03/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Cria arquivo temporario de trabalho do CAGED				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Gp400Cria(  )						                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gp400Cria( )
Local aStru := {}

aStru 	:= { 	{ "CAG_FILIAL"	, "C", FwGetTamFilial, 00 }, ;
				{ "CAG_CUSTO" 	, "C", TamSX3("RA_CC")[1], 00 }, ;
				{ "CAG_ESTABE"	, "C", 014, 00 }, ;
				{ "CAG_PIS"   	, "C", 011, 00 }, ;
				{ "CAG_SEXO"  	, "C", 001, 00 }, ;
				{ "CAG_DTNASC"	, "C", 008, 00 }, ;
				{ "CAG_INSTR" 	, "C", 002, 00 }, ;
				{ "CAG_CBO"   	, "C", 006, 00 }, ;
				{ "CAG_RENUME"	, "C", 008, 00 }, ;
				{ "CAG_HORAS" 	, "C", 002, 00 }, ;
				{ "CAG_DTADM" 	, "C", 008, 00 }, ;
				{ "CAG_TIPMOV"	, "C", 002, 00 }, ;
				{ "CAG_DESLIG"	, "C", 002, 00 }, ;
				{ "CAG_NOME"  	, "C", 040, 00 }, ;
				{ "CAG_CTPS"  	, "C", 008, 00 }, ;
				{ "CAG_SCTPS" 	, "C", 004, 00 }, ;
				{ "CAG_UFCTPS"	, "C", 002, 00 }, ;
				{ "CAG_RACA"  	, "C", 001, 00 }, ;
				{ "CAG_DEFFIS"	, "C", 001, 00 }, ;
				{ "CAG_APREND"	, "C", 001, 00 }, ;
				{ "CAG_TPDEF "	, "C", 001, 00 }, ;
				{ "CAG_CPF"   	, "C", 011, 00 }, ;
				{ "CAG_CEP"   	, "C", 008, 00 }, ;
				{ "CAG_CODEXA" 	, "C", 017, 00 }, ;
				{ "CAG_DTEXA"   , "C", 008, 00 }, ;
				{ "CAG_CNPJL"   , "C", 014, 00 }, ;
				{ "CAG_MDCRM"   , "C", 010, 00 }, ;
				{ "CAG_UFCRM"	, "C", 002, 00 }, ;
				{ "CAG_TPARC"	, "C", 001, 00 }, ;
				{ "CAG_TTELE"	, "C", 001, 00 }, ;
				{ "CAG_TINTE"	, "C", 001, 00 } }


oTmpCAGED := FWTemporaryTable():New(cArqGage,aStru)
oTmpCAGED:AddIndex( "INDCAG1", {"CAG_ESTABE","CAG_NOME"} )
oTmpCAGED:Create()

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ GrvCaged ³ Autor ³ Ricardo               ³ Data ³ 14/03/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Grava dados no arquivo CAGED                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GrvCaged(cTipoMov)							                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ cTipoMov - A -> Admitido ou B -> Demitido				    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GrvCaged(cTipoMov,dAdmissao )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Desconsidera PIS vazios, e gera Log.                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If StrZero( Val( AllTrim( (cAliasSRA)->RA_PIS ) ), 11 ) == "00000000000" .and. ;
   Right( (cAliasSRA)->RA_TIPOADM, 1 ) # "A" 	//-- Sem No.PIS e tipo de admissao primeiro emprego

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Incluir campos a serem apresentados no log                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAdd( aLog , { "PIS", ;
					(cAliasSRA)->RA_FILIAL, ;
				    (cAliasSRA)->RA_MAT,    ;
				    (cAliasSRA)->RA_NOME,   ;
				    (cAliasSRA)->RA_PIS,    ;
 	                StrZero( Day( dAdmissao ), 2 ) + "/" + StrZero( Month( dAdmissao ), 2 ) + "/" + StrZero( Year( dAdmissao ), 4 ) , ;
				    cMovto,                 ;
				    If( cDemissao == "00" .Or. cTipoMov == "A", "  ",         StrZero( Day( dDemissao ), 2 ) + "/" + StrZero( Month( dDemissao ), 2 ) + "/" + StrZero( Year( dDemissao ), 4 ) ) } )
	Return(0)
Endif

dbSelectArea( cArqGage )
RecLock( cArqGage, .t. )

Replace	CAG_FILIAL	With cFil
Replace	CAG_CUSTO	With cCusto
Replace	CAG_ESTABE	With cEstabel
Replace	CAG_PIS		With cPis
Replace	CAG_SEXO	With cSexo
Replace	CAG_DTNASC	With cNascimento
Replace	CAG_INSTR	With cInstrucao
Replace	CAG_CBO		With cCbo
Replace	CAG_RENUME	With cRemune
Replace	CAG_HORAS	With cHoras
Replace	CAG_DTADM	With cAdmissao
Replace	CAG_TIPMOV	With cMovto
Replace	CAG_DESLIG	With If( cDemissao == "00" .Or. cTipoMov == "A", "  ", cDemissao )
Replace	CAG_NOME	With cNome
Replace	CAG_CTPS	With cCtps
Replace	CAG_SCTPS	With cSerieCTPS
Replace	CAG_UFCTPS	With cUFCTPS
Replace	CAG_RACA	With cRaca
Replace	CAG_DEFFIS	With If(empty(cDeficiente),"2",cDeficiente)
Replace	CAG_APREND  With cAprendiz
Replace CAG_TPDEF	With If(cTpDefFi=="0"," ", cTpDefFi)
Replace CAG_CPF		With cCPF
Replace CAG_CEP		With cCEP
Replace CAG_CODEXA  With cExCodi
Replace CAG_DTEXA   With cExData
Replace CAG_CNPJL   With cExCnpj
Replace CAG_MDCRM   With cExCRM
Replace CAG_UFCRM   With cExUFCR
Replace CAG_TPARC	With cTParc
Replace CAG_TTELE	With cTTele
Replace CAG_TINTE	With cTInte

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Incluir campos a serem apresentados no log                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd( aLog , { "MOVMES", ;
				(cAliasSRA)->RA_FILIAL, ;
			    (cAliasSRA)->RA_MAT,    ;
			    (cAliasSRA)->RA_NOME,   ;
			    (cAliasSRA)->RA_PIS,    ;
                StrZero( Day( dAdmissao ), 2 ) + "/" + StrZero( Month( dAdmissao ), 2 ) + "/" + StrZero( Year( dAdmissao ), 4 ) , ;
			    cMovto,                 ;
			    If( cDemissao == "00" .Or. cTipoMov == "A", "  ",         StrZero( Day( dDemissao ), 2 ) + "/" + StrZero( Month( dDemissao ), 2 ) + "/" + StrZero( Year( dDemissao ), 4 ) ) } )

Return(1)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fVerTran ³ Autor ³ Mauro Sergio Testoni  ³ Data ³ 20/12/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se funcionario foi transferido no Mes             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fVerTran( cFil,cMat,dDataRef,aEmpresa,dTransf,Inicio)      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ cFil    - Filial do Funcionario                            ³±±
±±³          ³ cMat    - Matricula do Fucnionario                         ³±±
±±³          ³ cCc     - Centro de Custo Funcionario                      ³±±
±±³          ³ dDataRef- Data da Pesquisa                                 ³±±
±±³          ³ aEmpresa- Array CGC e Filiais da Empresa                   ³±±
±±³          ³ dTransf - Data da Transferencia                            ³±±
±±³          ³ lTrfPost- Indica se houve transf em meses futuros          ³±±
±±³          ³ lTransfEnt-Indica se houve transf - Entrada                ³±±
±±³          ³ lTransfSai-Indica se houve transf - Saida                  ³±±
±±³          ³ dTrfDem   -Dt de Demissao                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico - GPER490                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fVerTran(cFil,cMat,cCc,dDtRef,aEmpresa,dTransf,dTrfDem, aSituacao )
Local cAnoMes	 	:= Strzero( Year( dDtRef ), 4 ) + Strzero( Month( dDtRef ), 2 )
Local cEmprD		:= ""
Local cEmprP		:= ""
Local cCcD 			:= ""
Local cCcP			:= ""
Local cFilD			:= ""
Local cFilP			:= ""
Local nTransf		:= 0
Local nX			:= 0
Local nPos			:= 0
Local nPosicao		:= 0
Local nTranD		:= 0
Local nTranP		:= 0
Local aTransf    	:= {}
Local lPosicao 		:= .F.
Local lContou		:= .F.
Local lProcessou 	:= .F.
Local lTransfEnt 	:= .F.					//-- Identifica entrada por transferencia
Local lTransfSai 	:= .F.					//-- Identifica saida   por transferencia
Local lInicio 		:= .T.

/*
RE_EMPD              ,; // 01 - Empresa De
RE_FILIALD + RE_MATD ,; // 02 - Filial  De + Matricula De
RE_CCD               ,; // 03 - Centro de Custo De
RE_EMPP              ,; // 04 - Empresa Para
RE_FILIALP + RE_MATP ,; // 05 - Filial  Para + Matricula Para
RE_CCP               ,; // 06 - Centro de Custo Para
RE_DATA				 ,; // 07 - Data da Transferencia
RE_FILIALD			 ,; // 08 - Filial de Origem
RE_MATD				 ,; // 09 - Matricula de Origem
RE_FILIALP			 ,; // 10 - Filial de Destino
RE_MATP				 ,; // 11 - Matricula de Destino
MesAno( RE_DATA )	 ,;	// 12 - Ano/Mes da Transferencia
Recno()				  ;	// 13 - Recno() da Transferencia
*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se funcionario ja foi processado                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (nPosicao:= ascan(aPosicao, {|x| x[1] + x[2]  == cEmpAnt+ cFil+cMat  }) ) > 0  .OR. ;
   (nPosicao:= ascan(aPosicao, {|x| x[4] + x[5]  == cEmpAnt+ cFil+cMat  }) ) > 0
	lProcessou 	:= .T.
Endif

If (ascan(aAux_posicao, {|x| x == cEmpAnt+ cFil+cMat+cCc }) ) > 0  .and. nPosicao = 0
	Return(Nil)
Endif

If !lProcessou
	If SRA->(RA_FILIAL+RA_MAT) != (cAliasSRA)->(RA_FILIAL+RA_MAT)
		SRA->(DbSetOrder(1))
		SRA->(DbSeek((cAliasSRA)->(RA_FILIAL+RA_MAT)))
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega o array aTransf    - Se nao houver transf. no mes  referencia   ³
	//³ deve-se verificar as outras transf. p/ determinar onde o funcionario    ³
	//³ estava no mes referencia                                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "SRE" )
	If nTipoCaged == 2
		aTransf	:= {}
		fTransf( @aTransf, MesAno( dDtRef ), .T., , .T., , ,.T. ) //-- Transferencia entre Cc
		fChkTrf( @aTransf )
	Endif

	If Len( aTransf ) <= 0
		fTransf( @aTransf, MesAno( dDtRef ), ,,,,,.T.) 			  //FTransf( aTransf, uData   , lEmp , lFil , lCct , lMat , lNoRept , lOrigem )
		fChkTrf( @aTransf )
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se nao houve transf no mes referencia, entao deve verificar todas as trnasf. do|
	//³funcionario para achar a posicao dele                                          |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len( aTransf ) <= 0
		fTransf( @aTransf,,,,,,, .T. )
	Endif

	aSort( aTransf ,,,{ |x,y| dtos(x[7]) + strzero(x[13],6)< dtos(y[7])+ strzero(y[13],6)  } )
	nTransf	:= Len( aTransf )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Identifica e armazena no aPosicao onde o funcionario estava no mes de referenc.|
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nTransf > 0  													//-- Testa se, para este funcionario, já foi verificado suas transferencias e ja se tem a posicao dele na data referenc.
		For nX := 1 to nTransf
			If cAnoMes == aTransf[nTransf,12]
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Houve transfer. do funcionario no mes de referencia-armazeno onde estava e pra |
				//³onde ele foi.                                                                  |
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nX = 1
					//--             Empde         + FilDe/MatrDe CCDe           Empde         + FilP /MatrP +CCP            Dta Transferencia Recno
					aadd(aPosicao, { aTransf[nX,1],aTransf[nX,2],aTransf[nX,3] ,aTransf[nX,4],aTransf[nX,5],aTransf[nX,6], aTransf[nX,07] ,aTransf[nX,13] } )
				Else
					//-- Tenho que ver pra onde o funcionario foi
					aPosicao[Len(aPosicao),04] 	:= aTransf[nX,04]
					aPosicao[Len(aPosicao),05] 	:= aTransf[nX,05]
					aPosicao[Len(aPosicao),06] 	:= aTransf[nX,06]
					aPosicao[Len(aPosicao),07] 	:= aTransf[nX,07]
				Endif
			ElseIf aTransf[nX,12] < cAnoMes
				//-- Verificar a data da transferencia ( Entrada / Saida )
				//--             Empde         + FilDe/MatrDe+CCDe                Empde         + FilP /MatrP +CCP            Dta Transferencia Recno
				If !lPosicao
					If nX = nTransf
						aAdd(aPosicao, { aTransf[nX,4],aTransf[nX,5],aTransf[nX,6] ,aTransf[nX,4],aTransf[nX,5],aTransf[nX,6],  dDtRef        ,aTransf[nX,13] } )
					Else
						aAdd(aPosicao, { aTransf[nX,1],aTransf[nX,2],aTransf[nX,3] ,aTransf[nX,4],aTransf[nX,5],aTransf[nX,6], aTransf[nX,07] ,aTransf[nX,13] } )
					Endif
					lPosicao 	:= .T.
				Else
					If nX = nTransf											//-- Se for ultima transferencia, tenho q gerar aposicao no mes de referencia
						aPosicao[Len(aPosicao),01]	:= aTransf[nX,04]
						aPosicao[Len(aPosicao),02]	:= aTransf[nX,05]
						aPosicao[Len(aPosicao),03]	:= aTransf[nX,06]
						aPosicao[Len(aPosicao),04]	:= aTransf[nX,04]
						aPosicao[Len(aPosicao),05]	:= aTransf[nX,05]
						aPosicao[Len(aPosicao),06]	:= aTransf[nX,06]
						aPosicao[Len(aPosicao),07]	:= dDtRef
					Else
						aPosicao[Len(aPosicao),01]	:= aTransf[nX,01]
						aPosicao[Len(aPosicao),02]	:= aTransf[nX,02]
						aPosicao[Len(aPosicao),03]	:= aTransf[nX,03]
						aPosicao[Len(aPosicao),04]	:= aTransf[nX,04]
						aPosicao[Len(aPosicao),05]	:= aTransf[nX,05]
						aPosicao[Len(aPosicao),06]	:= aTransf[nX,06]
						aPosicao[Len(aPosicao),07]	:= aTransf[nX,07]
					Endif
				Endif
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Se todas as transf. forem com data superior a dt refer., entao so preciso da   |
				//³primeira para determinar onde o funcinario estava                              |
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !lContou  .and. !lPosicao
					aAdd(aPosicao, { aTransf[nX,1],aTransf[nX,2],aTransf[nX,3] ,aTransf[nX,1],aTransf[nX,2],aTransf[nX,3], dDtRef ,aTransf[nX,13] } )
					lPosicao 	:= .T.
					lContou		:= .T.
				Else
                    If !lContou
						aPosicao[Len(aPosicao),01]	:= aTransf[nX,01]
						aPosicao[Len(aPosicao),02]	:= aTransf[nX,02]
						aPosicao[Len(aPosicao),03]	:= aTransf[nX,03]
						aPosicao[Len(aPosicao),04]	:= aTransf[nX,01]
						aPosicao[Len(aPosicao),05]	:= aTransf[nX,02]
						aPosicao[Len(aPosicao),06]	:= aTransf[nX,03]
						aPosicao[Len(aPosicao),07]	:= dDtRef
						lContou	:= .T.
					Endif
				Endif
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Armazerna Emp+Fil+Mat+CC já analisados                                         |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (npos:= aScan(aAux_Posicao, {|x| x == aTransf[nX,1]+aTransf[nX,2]+aTransf[nX,3] }) ) <= 0
				aAdd( aAux_posicao, aTransf[nX,1]+aTransf[nX,2]+aTransf[nX,3] )
			Endif
			If (npos:= aScan(aAux_Posicao, {|x| x == aTransf[nX,4]+aTransf[nX,5]+aTransf[nX,6] }) ) <= 0
				aAdd( aAux_posicao, aTransf[nX,4]+aTransf[nX,5]+aTransf[nX,6] )
			Endif
		Next nTransf
	Else
  		aAdd(aSituacao, { .T.       	, ; 			//-- 1 Conta Inicio
					      .F.       	, ; 			//-- 2 Transferencia de Entrada
					      .F.       	, ; 			//-- 3 Transferencia de Saida
					      dTransf   	, ;   			//-- 4 Data de Transferencia/Entrada
					      dTrfDem  	 	, ;				//-- 5 Data de Transferencia/Saida/Demissao
					      (cAliasSRA)->RA_FILIAL,;      //-- 6 Filial
				    	  (cAliasSRA)->RA_CC   } ) 		//-- 7 Centro de Custo
	Endif
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³--------------------Identifica onde se o tipo de transf. sera considerada no CAGED --------------|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nPosicao	:= If(nPosicao> 0 , nPosicao, Len(aPosicao)  )
If nPosicao > 0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se funcionario corrente nao teve  mvto no mes referencia                        |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cEmpAnt+ cFil+cMat # aPosicao[nPosicao,1]+aPosicao[nPosicao,02] .and. ;
	   cEmpAnt+ cFil+cMat # aPosicao[nPosicao,4]+aPosicao[nPosicao,05]    			//-- Neste mes refer.o funcionario nao estava nest Emp+Fil+Matr+cc
		Return(Nil)
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se Origem  for igual destino, entao nao houve transferencia                    |
	//³Se forem  diferentes, entao houve algum tipo de transfercia                    |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (aPosicao[nPosicao,1]+aPosicao[nPosicao,02]+aPosicao[nPosicao,03] #  aPosicao[nPosicao,4]+aPosicao[nPosicao,05]+aPosicao[nPosicao,06] )

		cEmprD 		:= aPosicao[nPosicao,1]
		cFilD 		:= SubStr(aPosicao[nPosicao,2],1,FWGETTAMFILIAL)
		cCCD 		:= aPosicao[nPosicao,3]

		cEmprP 		:= aPosicao[nPosicao,4]
		cFilP		:= SubStr(aPosicao[nPosicao,5],1,FWGETTAMFILIAL)
		cCCP		:= aPosicao[nPosicao,6]

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se houve Transferencia de saida                                       |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cEmpAnt+ cFil+cMat == (aPosicao[nPosicao,1]+aPosicao[nPosicao,02])  		//-- Verifica se houve Transferencia de Saida
			lInicio		:= .T.
			lTransfEnt	:= .F.
			dTrfDem		:= Ctod("//")
			If nTipoCaged = 2  .and. ;
			   (nTranP := aScan(aEmpresa,{|x| x[2] + x[3] == cFilP  + cCcP } ))  > 0   .and.  ;
			   (nTranD := aScan(aEmpresa,{|x| x[2] + x[3] == cFilD  + cCcD } ))  > 0   .and.  ;
			   !(aEmpresa[nTranP,1] == aEmpresa[nTranD,1] )				//-- Verifica CGC/CEI sao diferentes

				lTransfSai	:= .T.
				dTrfDem		:= aPosicao[nPosicao, 07] 				   		//-- Data da Transferencia
			ElseIf cEmpAnt # cEmprP   										//-- houve Transferencia entre Empresas

				lTransfSai	:= .T.
				dTrfDem		:= aPosicao[nPosicao, 07] 						//-- Data da Transferencia
			ElseIf cFil # cFilP .and. nTipoCaged # 2 .and. ;
			       (nTranP := aScan(aEmpresa,{|x| x[2] == cFilP  }) ) > 0    .and.  ;
			   	   (nTranD := aScan(aEmpresa,{|x| x[2] == cFilD  } ))  > 0   .and.  ;
			       !(aEmpresa[nTranP,1] == aEmpresa[nTranD,1] )

				lTransfSai	:= .T.
				dTrfDem		:=  aPosicao[nPosicao, 07] 						//-- Data da Transferencia

			Endif
			If lInicio .or. lTransfSai
				aAdd(aSituacao, { lInicio,; 										//-- 1 Conta Inicio
						      lTransfEnt, ; 										//-- 2 Transferencia de Entrada
						      lTransfsai, ; 										//-- 3 Transferencia de Saida
						      dTransf,    ;   										//-- 4 Data de Transferencia/Entrada
						      dTrfDem, 	  ;											//-- 5 Data de Transferencia/Saida/Demissao
						      left(aPosicao[nPosicao,02], FWGETTAMFILIAL)  ,;	    //-- 6 Filial
						      If(nTipoCaged = 2, aPosicao[nPosicao,03] ,"" )  } ) 	//-- 7 Centro de Custo
			Endif

		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se houve Transferencia de Entrada                                     |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cEmpAnt+ cFil+cMat == (aPosicao[nPosicao,4]+aPosicao[nPosicao,05])  	//-- Verifica se houve Transferencia de Entrada
			lInicio		:= .F.
			lTransfSai	:= .F.
			dTrfDem		:= Ctod("//")

			If nTipoCaged = 2 .and. ;
			   (nTranD := aScan(aEmpresa,{|x| x[2] + x[3] == cFilD + cCcD } ))  > 0   .and. ;
			   (nTranP := aScan(aEmpresa,{|x| x[2] + x[3] == cFilP  + cCcP } ))  > 0   .and.  ;
			   !(aEmpresa[nTranD,1] == aEmpresa[nTranP,1] )						//-- Verifica CGC/CEI sao diferentes

				lTransfEnt	:= .T.
				dTransf 	:= aPosicao[nPosicao, 07] 								//-- Data da Transferencia
			ElseIf cEmpAnt # cEmprD   												//-- houve Transferencia entre Empresas

				lTransfEnt	:= .T.
				dTransf 	:= aPosicao[nPosicao, 07] 								//-- Data da Transferencia

			ElseIf cFil # cFilD .and. nTipoCaged # 2 .and. ;
			   (nTranP := aScan(aEmpresa,{|x| x[2] == cFilP }) ) > 0 .and.  ;
			   (nTranD := aScan(aEmpresa,{|x| x[2] == cFilD }) ) > 0 .and.  ;
			   !(aEmpresa[nTranD,1] == aEmpresa[nTranP,1] )
				lTransfEnt	:= .T.
				dTransf 	:= aPosicao[nPosicao,07] 								//-- Data da Transferencia
			ElseIf cEmprD + cFilD + cCCD == cEmprP + cFilP + cCCP					//-- Houve transferencia de MAT
				lInicio		:= .T.
			Endif
			If lTransfEnt
				aAdd(aSituacao, { lInicio,; 											//-- 1 Conta Inicio
							      lTransfEnt, ; 										//-- 2 Transferencia de Entrada
							      lTransfsai, ; 										//-- 3 Transferencia de Saida
							      dTransf,    ;   										//-- 4 Data de Transferencia/Entrada
							      dTrfDem, 	  ;											//-- 5 Data de Transferencia/Saida/Demissao
							      Left(aPosicao[nPosicao,05],FWGETTAMFILIAL)      ,;	//-- 6 Filial
							      If(nTipoCaged = 2, aPosicao[nPosicao,06]  ,""  ) } )	//-- 7 Centro de Custo
			Endif
		Endif
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Nao teve movimentacao  de transferencia                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aAdd(aSituacao, { lInicio   ,; 													//-- 1 Conta Inicio
					      .F.       , ; 												//-- 2 Transferencia de Entrada
					      .F.       , ; 												//-- 3 Transferencia de Saida
					      dTransf   , ;   												//-- 4 Data de Transferencia/Entrada
						  dTrfDem   ,; 													//-- 5 Data de Transferencia/Saida/Demissao
					      Left(aPosicao[nPosicao,05],FWGETTAMFILIAL),;   		        //-- Filial
				    	  If(nTipoCaged = 2, aPosicao[nPosicao,06],(cAliasSRA)->RA_CC  ) } ) 	//-- Centro de Custo
	Endif
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³-------------FIM    Identifica onde se o tp de transf. sera considerada no CAGED ----------------³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Se nao encontrar transferencias, avaliar se funcionario foi demitido no mes de referencia.       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Len(aSituacao) == 0 .and. (!Empty(dDemissao) .and. ( MesAno( dDemissao) ==  MesAno( dDtRef ) ) )
	aAdd(aSituacao, {lInicio,; 	   		    								//-- 1 Conta Inicio
 			      	 .F.,;		       	    								//-- 2 Transferencia de Entrada
			      	 .F.,; 		       	    								//-- 3 Transferencia de Saida
		    	     dTransf,;			    								//-- 4 Data de Transferencia/Entrada
          			 dDemissao,;			    							//-- 5 Data de Transferencia/Saida/Demissao
			      	 cFil,;	                                       			//-- 6 Filial
	 				 If(nTipoCaged = 2, aPosicao[nPosicao,06]  ,""  ) } )	//-- 7 Centro de Custo
EndIf

Return(NIL)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ Grava    ³ Autor ³ Desconhecido         	³ Data ³ 14/03/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Grava registro no arquivo texto							    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Grava( cRegistro, nBytes ) 								    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Grava( cRegistro, nbytes )

cRegistro := Left(cRegistro+Space(nBytes),nBytes)+CHR(13)+CHR(10)

Fwrite(nArq,cRegistro,Len(cRegistro))

If Ferror() # 0
	cMsg := STR0018 + STR(Ferror(),3) 		//-- "Erro de gravacao, codigo DOS:"
	Help('',1, 'OPENERROR',,cMsg,1)			//-- "Nao foi possivel abrir ou  criar o arquivo do drive especifidado."
	Return (.F.)
Endif

Return ( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fAdEmpresa³ Autor ³ Emerson Rosa de Souza ³ Data ³ 02/08/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Adiciona a Filial(CGC) ou C. de Custo(CEI) em aEmpresa     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fAdEmpresa( nEmpAtu, nTipoCaged, aEmpresa, cCcGravar )     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³ nEmpAtu    - Posicao da filial no array aEmpresa           ³±±
±±³          ³ nTipoCaged - 1 -> Por Filial  2 -> Por Centro de Custo	    ³±±
±±³          ³ aEmpresa   - Array que contera as filias					    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fAdEmpresa(nTipoCaged, aEmpresa)
Local aAreaSM0:= SM0->( GetArea() )
Local cAlias  		 := ALIAS()
Local cInsc   := ""
Local iEmp    		 := 0
Local aListaEmpresas := fGetSM0(.T.)

If nTipoCaged == 1
	For iEmp := 1 to Len(aListaEmpresas)
		SM0->( dbSeek(aListaEmpresas[iEmp][1] + aListaEmpresas[iEmp][2]) )
	    cInsc := If( Type( "SM0->M0_CEI" ) # "U" .And. !Empty( SM0->M0_CEI) .And. SM0->M0_TPINSC == 1, SM0->M0_CEI, aListaEmpresas[iEmp][18] )
		Aadd( aEmpresa, { cInsc, aListaEmpresas[iEmp][2], "", 0, 0, SM0->M0_ESTCOB } )
	Next iEmp
Else
	dbSelectArea( cAliasSRA )
	dbGoTop()
	ProcRegua( (cAliasSRA)->( RecCount() ) )
	cFilCC := Replicate("!", FWGETTAMFILIAL) + "!!!!!!!!!"
	While !Eof()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Processa Regua                                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IncProc( STR0021 ) //##"Selecionando registros"
		If !Empty((cAliasSRA)->RA_CC) .And. (cAliasSRA)->RA_FILIAL + (cAliasSRA)->RA_CC # cFilCC
			cFilCC := (cAliasSRA)->RA_FILIAL + (cAliasSRA)->RA_CC
			fAdCCto( @aEmpresa, (cAliasSRA)->RA_FILIAL, (cAliasSRA)->RA_CC )
		EndIf
		dbSelectArea( cAliasSRA )
		dbSkip()
	EndDo
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para alteracao do No Incricao CGC           ³
//³ (Conforme P.E. "GPEXINSCR" - Gpexfun)                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("GPM400INSC")
	EXECBLOCK("GPM400INSC",.F.,.F.)
Endif

RestArea( aAreaSM0 )
dbSelectArea( cAlias )

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fDelCaged ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 06/08/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Deleta os arquivos temporarios do CAGED                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fDelCaged(nArq)                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fDelCaged(nArq)

dbSelectArea( cArqGage )
dbCloseArea()

If oTmpCAGED <> Nil
	oTmpCAGED:Delete()
	oTmpCAGED := Nil
EndIf

Fclose( nArq )

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fChkTrf  ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 06/08/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se as transferencias sao entre centros de custo   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fChkTrf( aTransf )                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fChkTrf( aTransf )
Local nTrf,cCgcDe,cCgcPara

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento para transferencias entre filiais que foram cadastradas no   ³
//³ SIGAMAT como Centros de Custo (filiais com mesmo CGC/CEI).			      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTrf := Len( aTransf )
If nTrf > 0 .and. nTipoCaged==2
	If aTransf[1,1]+Left(aTransf[1,2],FwGetTamFilial) # aTransf[nTrf,4]+Left(aTransf[nTrf,5],FwGetTamFilial)
		If Left(aTransf[1,2],FwGetTamFilial) == aEmpresa[nEmpAtu, 2] .Or. Left(aTransf[nTrf,5],FwGetTamFilial) == aEmpresa[nEmpAtu, 2]
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se transferencia entre filiais com mesmo CGC/CEI, alterar os codigos das³
			//³ filiais para que sejam tratadas como transferencia entre centro de custo³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea( "SM0" )
			dbSeek( aTransf[1,1]+Left(aTransf[1,2],FwGetTamFilial) )
			cCgcDe   := SM0->M0_CGC
			dbSeek( aTransf[nTrf,4]+Left(aTransf[nTrf,5],FwGetTamFilial) )
			cCgcPara := SM0->M0_CGC
			If cCgcDe == cCgcPara
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Caso nao encontre o C. de Custo da transferencia atual no array aEmpresa³
				//³ adiciona-o. Isso ocorrera caso seja efetuada uma transferencia para um  ³
				//³ centro de custo que nao tenha nenhum funcionario cadastrado.            ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				fAdCCto( @aEmpresa, aEmpresa[nEmpAtu,2], aTransf[1,3] )
				fAdCCto( @aEmpresa, aEmpresa[nEmpAtu,2], aTransf[nTrf,6] )
			EndIf
		EndIf
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se transferencia entre C.C. com mesmo CEI, nao caracteriza transferencia³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		fAdCCto( @aEmpresa, aEmpresa[nEmpAtu,2], aTransf[1,3] )
		fAdCCto( @aEmpresa, aEmpresa[nEmpAtu,2], aTransf[nTrf,6] )
	EndIf
EndIf

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fAdCCto  ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 06/08/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Adiciona um Centro de Custo no array aEmpresa.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fAdCCto( @aEmpresa, cFilAtu, cCCAtu )                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fAdCCto( aEmpresa, cFilAtu, cCCAtu )
Local cAlias := ALIAS()

If Ascan( aEmpresa, { |x| x[2]+x[3] == cFilAtu+cCCAtu } ) == 0
	dbSelectArea( "CTT" )
	If dbSeek( If( xFilial("CTT")==Space(FWGETTAMFILIAL), Space(FWGETTAMFILIAL),xFilial("CTT",cFilAtu) ) + cCCAtu)
		If !Empty( CTT->CTT_CEI ) .and. ( (TYPE("CTT->CTT_RECFAT") #"U" .and. CTT->CTT_RECFAT <> "S") .Or. (TYPE("CTT->CTT_RECFAT") == "U") )
			AAdd( aEmpresa, { CTT->CTT_CEI, cFilAtu, cCCAtu, 0, CTT->CTT_TIPO, CTT->CTT_ESTADO } )
		Else
	    	dbSelectArea( "SM0" )
			If dbSeek( cEmpAnt + cFilAtu )
				aAdd( aEmpresa, { M0_CGC, cFilAtu, cCCAtu, 0, " ", SM0->M0_ESTCOB } )
			EndIf
		EndIf
	EndIf
	dbSelectArea( cAlias )
EndIf

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fSMesAno  ºAutor  ³Microsiga           º Data ³  05/22/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funçao para somar ou substrair numero de meses determinado  º±±
±±º          ³no parametro retornando ano e mes apos a operacao           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fSMesAno(dDtRef,nMesSoma)

Local cDt
Local cMes
Local cAno
Local nM
If Type("dDtRef") == "D"
	cDt  := MesAno(dDtref)
Else
	cDt  := dDtref
Endif
cMes := Right(cDt,2)
cAno := Left(cDt,4)

For nM := 1 to ABS(nMesSoma)

	If nMesSoma > 0
		cMes := StrZero(Val(cMes) + 1 ,2)
	Elseif nMesSoma < 0
		cMes := StrZero(Val(cMes) - 1 ,2)
	Endif
	If Val(cMes) > 12
		cAno := StrZero(Val(cAno) + 1 ,4)
		cMes := "01"
	Elseif Val(cMes) <= 0
		cAno := StrZero(Val(cAno) - 1 ,4)
		cMes := "12"
	Endif
Next nM
cRet := cAno + cMes

Return(cRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fChkTamCpoºAutor  ³Microsiga           º Data ³  05/22/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Retorno o conteudo do campo caracter no tamanho solicitado. º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEM400                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fChkTamCpo( cCpoChk, nTamCpo )
Local nCnt
Local cCharAux
Local lLetra := .F.
Local cRet   := ""

For nCnt := 1 To Len( cCpoChk )
	cCharAux := Substr(cCpoChk,nCnt,1)
	If Ascan( aCaracter, { |X| X == cCharAux }) == 0 //Caracteres nao permitidos
		cRet += cCharAux
		If !(cCharAux $ "0*1*2*3*4*5*6*7*8*9")
			lLetra := .T.
		EndIf
	EndIf
Next nCnt
cRet := If(lLetra, Right( Replicate( " ", nTamCpo ) + cRet, nTamCpo ),;
				    StrZero( Val( cCpoChk ), nTamCpo ) )
Return(cRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEM400   ºAutor  ³Microsiga           º Data ³  06/07/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Retorna codigo de instrucao do funcionario                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fInstrucao()
Local cInstrucao 	:= ""

	If SRA->(RA_FILIAL+RA_MAT) != (cAliasSRA)->(RA_FILIAL+RA_MAT)
		SRA->(DbSetOrder(1))
		SRA->(DbSeek((cAliasSRA)->(RA_FILIAL+RA_MAT)))
	Endif

	If Val((cAliasSRA)->RA_GRINRAI) == 10
		cInstrucao := "1"
	ElseIf Val((cAliasSRA)->RA_GRINRAI) == 20
		cInstrucao := "2"
	ElseIf Val((cAliasSRA)->RA_GRINRAI) == 25
		cInstrucao := "3"
	ElseIf Val((cAliasSRA)->RA_GRINRAI) == 30
		cInstrucao := "4"
	ElseIf Val((cAliasSRA)->RA_GRINRAI) == 35
		cInstrucao := "5"
	ElseIf Val((cAliasSRA)->RA_GRINRAI) == 40
		cInstrucao := "6"
	ElseIf Val((cAliasSRA)->RA_GRINRAI) == 45
		cInstrucao := "7"
	ElseIf Val((cAliasSRA)->RA_GRINRAI) == 50
		cInstrucao := "8"
	ElseIf ( Val((cAliasSRA)->RA_GRINRAI ) == 55 ) .or. ( Val((cAliasSRA)->RA_GRINRAI ) == 85 )
		cInstrucao := "9"    //Superior completo ou Pos-Graduacao (Especializacao)
	ElseIf Val((cAliasSRA)->RA_GRINRAI) == 65
		cInstrucao := "10"
	ElseIf ( Val((cAliasSRA)->RA_GRINRAI ) == 75 ) .or. ( Val((cAliasSRA)->RA_GRINRAI ) == 95 )
		cInstrucao := "11"	 //Doutorado ou Pos-Doutorado
	Endif
Return(cInstrucao)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEM400   ºAutor  ³Microsiga           º Data ³  06/12/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Monta a remuneracao do funcionario                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEM400 - GPER490                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fM400Salario(cVerbas_Aux, cGrpVerbas)
Local nValAcl		:=	0
Local nTar		:=	0
Local aPerAnt		:= {}
Local aPerAtu		:= {}

//-- Traz a data inicial e final para busca das tarefas
Local dIniTar  := ctod("01/"+StrZero(Month(dDtRef),2)+"/"+StrZero(Year(dDtRef),4))
Local dFimTar  := ctod(Str(F_ULTDIA(dDtRef))+"/"+StrZero(Month(dDtRef),2)+"/"+StrZero(Year(dDtRef),4))
Local aTarefas := {}

DEFAULT cVerbas_Aux := ""
DEFAULT cGrpVerbas  := ""

If SRA->(RA_FILIAL+RA_MAT) != (cAliasSRA)->(RA_FILIAL+RA_MAT)
	SRA->(DbSetOrder(1))
	SRA->(DbSeek((cAliasSRA)->(RA_FILIAL+RA_MAT)))
Endif

If Type("Val_SalMin") == "U"
	Val_SalMin := 0.00	//Valor Salario Minimo
EndIf

cVerbas_Aux := fAjustaVerba( cVerbas_Aux )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Buscar os periodos relacionados a competencia anterior a selecionada    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dDataAnt := MonthSub( dDtRef, 1 )
fRetPerComp( 	Strzero(Month(dDataAnt),2)  ,;	// Obrigatorio - Mes para localizar as informacoes
            	Strzero(Year(dDataAnt),4)   ,;	// Obrigatorio - Ano para localizar as informacoes
				Nil						 		,;	// Opcional - Filial a Pesquisar
			 	Nil				         		,;	// Opcional - Filtro por Processo
			 	Nil        				 	,;	// Opcional - Filtro por Roteiro
			 	Nil		    		     		,;	// Por Referencia - Array com os periodos Abertos
			 	Nil	       				 	,;	// Por Referencia - Array com os periodos Fechados
			 	@aPerAnt 				      ;	// Por Referencia - Array com todos os periodos em ordem crescente
		    	)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Buscar os periodos relacionados a competencia selecionada               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fRetPerComp( Left(cMesComp,2)	,;	// Obrigatorio - Mes para localizar as informacoes
	       	 Right(cMesComp,4)	,;	// Obrigatorio - Ano para localizar as informacoes
 			 Nil	 			,;	// Opcional - Filial a Pesquisar
			 Nil	  			,;	// Opcional - Filtro por Processo
			 Nil	  			,;	// Opcional - Filtro por Roteiro
			 Nil	  			,;	// Por Referencia - Array com os periodos Abertos
			 Nil	  			,;	// Por Referencia - Array com os periodos Fechados
			 @aPerAtu 			 ;	// Por Referencia - Array com todos os periodos em ordem crescente
	   		)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Seta o Processo para Calculo                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetProcesCalc( SRA->RA_PROCES )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Seta o Periodo para Calculo                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetPeriodCalc( MesAno(dDtRef) )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Seta o Numero de Pagamento do Calculo                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetNumPgCalc( "  " )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Seta o Roteiro de Calculo                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetRotExec(fGetCalcRot('1'))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se Existe Incorporacao de Salario                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Salario := SalHora := SalDia := SalMes := 0.00

fSalInc(@Salario,@SalMes,@SalHora,@SalDia,, , , , dDtRef, , , , , , , , , , )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Incorpora verbas do Acumulado ao Salario                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nValAcl := 0
If Len(aPerAtu) > 0
	cPerIni := aPerAtu[1,1]
	cPerFim := aPerAtu[Len(aPerAtu),1]
    fBuscaAcmPer(cVerbas,"","V",@nValAcl,, cPerIni,cPerFim,"  ", "99", fGetCalcRot('1') )
EndIf
If Salmes + nValAcl == 0.00
	If Len(aPerAnt) > 0
		cPerIni := aPerAnt[1,1]
		cPerFim := aPerAnt[Len(aPerAnt),1]
	    fBuscaAcmPer(cVerbas,"","V",@nValAcl,, cPerIni,cPerFim,"  ", "99", fGetCalcRot('1') )
	EndIf
	If Salmes == 0
		If (cAliasSRA)->RA_CATFUNC $ "I|J|T|C"
			GeraTarefa(dIniTar,dFimTar,@aTarefas,"N")
			If Len(aTarefas) > 0
				For nTar := 1 to Len(aTarefas)
					Salmes += aTarefas[nTar,2]
				Next nTar
			Endif
		Endif
		If (cAliasSRA)->RA_CATFUNC == "T" .and. Salmes == 0
			Sal_Min(@Val_SalMin,MesAno(dDataBase),(cAliasSRA)->RA_FILIAL)
			Salmes:= Val_SalMin
		Elseif (cAliasSRA)->RA_CATFUNC == "C"
			Salmes := fDesc("RCE", (cAliasSRA)->RA_SINDICA, "RCE_GCOMISS", Nil, (cAliasSRA)->RA_FILIAL)
		Endif
	EndIf
Endif
SalMes	+= nValAcl

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fm400FiltrºAutor  ³Microsiga           º Data ³  06/12/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Filtra o processamento de acordo com a parametrizacao do    º±±
±±º          ³usuario                                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEM400 - GPER490                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fm400Filtro()

If SRA->(RA_FILIAL+RA_MAT) != (cAliasSRA)->(RA_FILIAL+RA_MAT)
	SRA->(DbSetOrder(1))
	SRA->(DbSeek((cAliasSRA)->(RA_FILIAL+RA_MAT)))
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Desconsidera Funcion rios Diretores                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (cAliasSRA)->RA_VIEMRAI == "80" .And. (cAliasSRA)->RA_TIPOADM $ "1A*1B*1C"
	Return (.F. )
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Desconsidera Autonomo,Pro-labore,Estagiario               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (cAliasSRA)->RA_CATFUNC $ "A,E,P,G"
	Return (.F. )
EndIf

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ GeraLog  ³ Autor ³ Microsiga             ³ Data ³25/09/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Emissao do Log de Ocorrencias                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ aLog -> Log com as Ocorrencias Encontradas                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GeraLog( aLog , cPerg )
Local aTitLog		:= {}
Local aNewLog		:= {}
Local cTamanho		:= "M"
Local cTitulo		:= ( STR0015 )					//"Log de Ocorrencias na Geracao das Informacoes da RAIS"
Local nLenLog		:= Len(aLog)
Local nLoop			:= 1
Local cGrupo		:= ""
Local lIsBlind      := IsBlind()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ordena por Ocorrências                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aSort( @aLog , NIL , NIL , { |x,y| ( x[1]+x[2]+x[3] < y[1]+y[2]+y[3] ) } )

aAdd(aNewLog, "")
aAdd(aNewLog, "")
aAdd(aNewLog, STR0027 + Space(2) + SecsToTime(nIniTime) + Space(1) + STR0028 + Space(1) + dDtCalIni) // "Início 	do processamento:" ## "de"
aAdd(aNewLog, STR0029 + Space(5) + SecsToTime(nTimeFim) + Space(1) + STR0028 + Space(1) + Dtoc( MsDate() ) ) 	// "Fim do processamento:" ## "de"
aAdd(aNewLog, STR0030 + Space(1) + SecsToTime(nTimeFim - nIniTime) ) // "Duração do processamento:"
aAdd(aNewLog, "")
aAdd(aNewLog, "")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Corre todas as Ocorrencias e as trata conforme os tipos identificados³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nLoop:= 1 to nLenLog
 	If aLog[nLoop,1] == "MOVINI"
	    If cGrupo <> "MOVINI"
	    	cGrupo	:= "MOVINI"
			aAdd(aNewLog, Space(2) + STR0031 ) // "  Funcionarios no 1.Dia do Mes"
		  	aAdd(aNewLog, Space(2) + STR0032 + Space(4) + STR0033 + Space(10) + STR0034 + Space(45) + STR0035 + "/" + STR0041 + Space(6) + STR0036 + Space(2) ) // "  Filial  					Matricula    Nome                               Admissao/Reintegracao      Demissao  "
	    Endif
   		aAdd(aNewLog, Space(2) + aLog[nLoop, 2] + Space(2) + aLog[nLoop, 3] + Space(4) + aLog[nLoop, 4] + Space(25) + aLog[nLoop, 5] + Space(10) + aLog[nLoop, 6] + Space(08) + aLog[nLoop, 7])
   		aAdd(aNewLog, "")
	ElseIf aLog[nLoop,1] == "PIS"
		If cGrupo <> "PIS"
    		cGrupo	:= "PIS"
			aAdd(aNewLog, Space(2) + STR0037 ) // "  Foram encontrados funcionarios sem PIS 					cadastrado. Funcionarios nao serao incluidos no arquivo."
			aAdd(aNewLog, Space(2) + STR0032 + Space(4) + STR0033 + Space(10) + STR0034 + Space(45) + STR0039 + Space(13) + STR0035 + "/" + STR0041 + Space(6) + STR0040 + Space(3) + STR0036 + Space(2) ) // "  Filial  Matricula   Nome                               PIS             				Admissao/Reintegracao    Movimento   Demissao "
	    Endif
		aAdd(aNewLog, Space(2) + aLog[nLoop, 2] + Space(2) + aLog[nLoop, 3] + Space(6) + aLog[nLoop, 4] + Space(25) + aLog[nLoop, 5] + Space(10) + aLog[nLoop, 6] + Space(08) + aLog[nLoop, 7] + Space(8) + aLog[nLoop, 8] )
	    aAdd(aNewLog, "")
	ElseIf aLog[nLoop,1] == "MOVMES"
		If cGrupo <> "MOVMES"
    		cGrupo	:= "MOVMES"
			aAdd(aNewLog, "  " + STR0038) // "  Funcionarios Incluidos no arquivo do CAGED"
			aAdd(aNewLog, Space(2) + STR0032 + Space(4) + STR0033 + Space(10) + STR0034 + Space(45) + STR0039 + Space(13) + STR0035 + "/" + STR0041 + Space(6) + STR0040 + Space(3) + STR0036 + Space(2) ) // "  Filial  Matricula   Nome                               PIS             				Admissao/Reintegracao    Movimento   Demissao "
    	Endif
	    aAdd(aNewLog, Space(2) + aLog[nLoop, 2] + Space(2) + aLog[nLoop, 3] + Space(6) + aLog[nLoop, 4] + Space(25) + aLog[nLoop, 5] + Space(10) + aLog[nLoop, 6] + Space(08) + aLog[nLoop, 7] + Space(8) + aLog[nLoop, 8] )
        aAdd(aNewLog, "")
 	Endif

Next nLoop

aLog:= {}

If !Empty(aNewLog) .And. !lIsBlind
	aAdd(aLog, aClone(aNewLog) )

	IF ( MsgYesNo( OemToAnsi( STR0026 )  , OemToAnsi( STR0007 ) ) )
		fMakeLog( aLog , aTitLog , cPerg , .T. , FunName() , cTitulo, "M","P",,.F. )
	EndIf
EndIf

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ GeraLog  ³ Autor ³ Microsiga             ³ Data ³ 10/01/14 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Busca verbas especificadas no parametro                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ aLog -> Log com as Ocorrencias Encontradas                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function  fAjustaVerba( cVerbas_Aux )
Local nFor			:= 1

DEFAULT cVerbas_Aux := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Separa os Codigos das verbas solicitadas a listar         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nFor := 1 To Len(ALLTRIM(cVerbas)) Step 3
	If !( Subs(cVerbas,nFor,3) $ cVerbas_Aux )
		cVerbas_Aux += Subs(cVerbas,nFor,3)
		If Len(ALLTRIM(cVerbas)) > ( nFor+3 )
			cVerbas_Aux += "/"
		Endif
	Endif
Next nFor

Return(cVerbas_Aux)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ GERA_Z   ³ Autor ³ Microsiga             ³ Data ³ 10/01/14 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gera o registro do tipo "Z" do CAGED.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                  		    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GERA_Z()
Local REGZ_001, REGZ_002, REGZ_003
Local REGZ_004, REGZ_005, REGZ_006
Local cDetalhe

REGZ_001  := "Z"  								// Tipo de Registro
REGZ_002  := Left(cNomeCont+Space(40),40)		// Nome de Contato
REGZ_003  := Left(cEmail+Space(50),50)			// Email de Contato
REGZ_004  := StrZero( Val( cCpfCont ), 18 )		// Cpf de Contato

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Colocado zero a direta do campo de CPF, erro dentro do        ³
//³ validador do CAGED, so carrega o CPF se existir zero a direita³
//³ Versao: 1.51 Build 022.1 (20130423-1122)                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
REGZ_005  := PadL('',50,'0')					//
REGZ_006  := Space(130)					        // Filler

cDetalhe :=	REGZ_001 + REGZ_002 + REGZ_003 + REGZ_004 + REGZ_005 + REGZ_006

If !GRAVA( cDetalhe, 240 )
	Return(.F.)
Endif
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³gp400GrpVe³ Autor ³ Microsiga             ³ Data ³ 10/01/14 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³                                                  		    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                  		    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function gp400GrpVerb(cFilProc)
Default cFilProc := Space( TamSx3("RA_FILIAL")[1] )

If ( SRV->( Type("RV_GRPVERB") ) # "U" )
	aAreaSRV := SRV->( getArea() )
	dbSelectArea("SRV")
	SRV->( dbGoTop() )
	While SRV->(!Eof()) .And. SRV->RV_FILIAL == cFilProc
		IF AllTrim( SRV->RV_GRPVERB ) $ cGrpVerbas .Or. cGrpVerbas $ AllTrim( SRV->RV_GRPVERB )
			cVerbas_Aux += AllTrim( SRV->RV_COD ) + "/"
		EndIf
		SRV->( dbSkip() )
	Enddo
	RestArea( aAreaSRV )
EndIf

Return( cVerbas_Aux )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o      ³fGP400Mark³ Autor   ³ Claudinei Soares                ³ Data ³ 26/08/2014 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o   ³ FwMarkBrowse para selecao dos Admitidos na geracao do arquivo CAGED      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe     ³ fGP400Mark()                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso        ³ Generico                                                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fGP400Mark()

Local lMarcar     	:= .F.
Local oSize
Local oPanelUp
Local oTela
Local oPanelDown
Local oGroup
Local oFont
Local bSet15 	:= { || fGP400Arq()}
Local bSet24	:= { || oDlg:End() }
Local cTexto	:= ""

Private cAliasMark 	:= "TABAUX"
Private cRotina		:= "GPEM400"
Private oMark
Private oDlg

cTexto += STR0051 + chr(10) // "As admissões apresentadas nesta tela serão todas as admissões do 1º dia do mês até a data informada no parâmetro Data de Referência."
cTexto += STR0052 + chr(10)//"Caso o funcionário já tenha sido gerado em algum processamento anterior, ele será apresentado com a legenda em vermelho, indicando a data que este foi gerado."
cTexto += STR0053 + chr(10) //"Se precisar enviar o registro de admissão novamente, basta selecioná-lo."
cTexto += STR0054 + chr(10)+ chr(10) //"Os funcionários apresentados com a legenda Verde são os que ainda não foram enviados. "
cTexto += STR0055 + chr(10) //"Marque os funcionários admitidos no mês que devem gerar movimento de admissão."

fCriaTmp()

If !IsBlind()
	aColsMark:= fMntColsMark()

	DbSelectArea(cAliasMark)

	oSize := FwDefSize():New(.F.)

	oSize:AddObject( "CABECALHO",(oSize:aWindSize[4]),(oSize:aWindSize[3]) , .F., .F. ) // Não dimensionavel
	oSize:aMargins 	:= { 3, 3, 3, 3  } 	// Espaco ao lado dos objetos 0, entre eles 3
	oSize:lProp 		:= .F. 				// Proporcional
	oSize:Process() 	   						// Dispara os calculos

	lCancela := .T.

	DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0043 ) From oSize:aWindSize[1],oSize:aWindSize[2] TO (oSize:aWindSize[3]),(oSize:aWindSize[4] ) OF oMainWnd PIXEL

	// Cria o conteiner onde serão colocados os paineis
	oTela		:= FWFormContainer():New( oDlg )
	cIdCab	  	:= oTela:CreateHorizontalBox( 20 )
	cIdGrid  	:= oTela:CreateHorizontalBox( 70 )

	oTela:Activate( oDlg, .F. )

	//Cria os paineis onde serao colocados os browses
	oPanelUp  	:= oTela:GeTPanel( cIdCab )
	oPanelDown	:= oTela:GeTPanel( cIdGrid )

		@ oSize:GetDimension("CABECALHO","LININI")  , oSize:GetDimension("CABECALHO","COLINI")	GROUP oGroup TO oSize:GetDimension("CABECALHO","LINEND")  ,oSize:GetDimension("CABECALHO","COLEND")    LABEL OemToAnsi(STR0044) OF oPanelUp PIXEL
		oGroup:oFont:=oFont
		@ oSize:GetDimension("CABECALHO","LININI")+15 , oSize:GetDimension("CABECALHO","COLINI")+20 SAY OemToAnsi(cTexto) SIZE 450,350  Of oPanelUp Pixel

	oMark := FWMarkBrowse():New()

	oMark:SetAlias((cAliasMark))
	oMark:SetFields(aColsMark)

	oMark:SetOnlyFields( { 'RA_FILIAL', 'RA_MAT', 'RA_NOME', 'RA_PIS', 'RA_ADMISSA','RA_FECREI', 'RA_DTCAGED', 'RA_DEMISSA' } )

	//Indica o container onde sera criado o browse
	oMark:SetOwner(oPanelDown)

	oMark:bAllMark := { || SetMarkAll(oMark:Mark(),lMarcar := !lMarcar ), oMark:Refresh(.T.)  }

	oMark:SetFieldMark('RA_OK')

	If lBloqAdm
		oMark:AddLegend( "!Empty(RA_DTCAGED).AND. Empty(RA_FECREI)"	 , "RED", STR0047 ) //Funcionario ja enviado anteriormente ao CAGED
		oMark:AddLegend( "Empty(RA_DTCAGED).AND. Empty(RA_FECREI)"	 , "GREEN" , STR0048 ) //Funcionario ainda nao foi enviado ao CAGED
		oMark:AddLegend( "!Empty(RA_DTCAGED).AND. !Empty(RA_FECREI)" , "PINK" , STR0049 ) //Reintegração, já enviado ao CAGED
		oMark:AddLegend( "Empty(RA_DTCAGED).AND. !Empty(RA_FECREI)"	 , "BLUE" , STR0050 ) //Reintegração, ainda não enviado ao CAGED
	Else
		oMark:AddLegend( "!Empty(RA_DTCAGED).AND. (Empty(RA_FECREI) .OR. (RA_FECREI == RA_DEMISSA))"	 , "RED", STR0047 ) //Funcionario ja enviado anteriormente ao CAGED
		oMark:AddLegend( "Empty(RA_DTCAGED).AND. (Empty(RA_FECREI) .OR. (RA_FECREI == RA_DEMISSA))"	 , "GREEN" , STR0048 ) //Funcionario ainda nao foi enviado ao CAGED
		oMark:AddLegend( "!Empty(RA_DTCAGED).AND. !Empty(RA_FECREI)" , "PINK" , STR0049 ) //Reintegração, já enviado ao CAGED
		oMark:AddLegend( "Empty(RA_DTCAGED).AND. !Empty(RA_FECREI)"	 , "BLUE" , STR0050 ) //Reintegração, ainda não enviado ao CAGED
	EndIf

	oMark:Activate()

	ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar( oDlg , bSet15 , bSet24)

	PgsShared()

	While !(cAliasMark)->(Eof())
		If !Empty((cAliasMark)->RA_OK)
			aAdd( aMark, { (cAliasMark)->RA_FILIAL, (cAliasMark)->RA_MAT, (cAliasMark)->RA_OK } )
		Endif
		DbSkip()
	EndDo
EndIf

Return(aMark)

Return(cAliasMark)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fCriaTmp       ³ Autor ³ Claudinei Soares   ³ Data ³26/08/2014³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Cria tabela temporaria para uso no FWMarkBrowse               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fCriaTmp()				                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³GPEM400                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fCriaTmp()
Local aArea		:= GetArea()
Local aColumns	:= {}
Local cQuery	:= ''
Local cAliasSRA	:= 'QSRA'
Local cKeyAux	:= ""
Local cCategoria:= "A|E|P|G"
Local cTipoAdm	:= "1A|1B|1C|4B"
Local nX		:= 0
Local lRet		:= .F.

If Select(cAliasMark) > 0
	DbSelectArea(cAliasMark)
	DbCloseArea()
EndIf

aAdd( aColumns, { "RA_OK"			,"C",02,00 })
aAdd( aColumns, { "RA_FILIAL"		,"C",TAMSX3("RA_FILIAL")[1],TAMSX3("RA_FILIAL")[2]})
aAdd( aColumns, { "RA_MAT"    		,"C",TAMSX3("RA_MAT")[1],TAMSX3("RA_MAT")[2]})
aAdd( aColumns, { "RA_CC"     		,"C",TAMSX3("RA_CC")[1],TAMSX3("RA_CC")[2]})
aAdd( aColumns, { "RA_CATFUNC"		,"C",TAMSX3("RA_CATFUNC")[1],TAMSX3("RA_CATFUNC")[2]})
aAdd( aColumns, { "RA_VIEMRAI"		,"C",TAMSX3("RA_VIEMRAI")[1],TAMSX3("RA_VIEMRAI")[2]})
aAdd( aColumns, { "RA_HRSMES" 		,"N",TAMSX3("RA_HRSMES")[1],TAMSX3("RA_HRSMES")[2]})
aAdd( aColumns, { "RA_TIPOADM"		,"C",TAMSX3("RA_TIPOADM")[1],TAMSX3("RA_TIPOADM")[2]})
aAdd( aColumns, { "RA_NOME"   		,"C",TAMSX3("RA_NOME")[1],TAMSX3("RA_NOME")[2]})
aAdd( aColumns, { "RA_ADMISSA"		,"D",8,0})
aAdd( aColumns, { "RA_DEMISSA"		,"D",8,0})
aAdd( aColumns, { "RA_PIS"    		,"C",TAMSX3("RA_PIS")[1],TAMSX3("RA_PIS")[2]})
aAdd( aColumns, { "RA_NASC"   		,"D",8,0})
aAdd( aColumns, { "RA_NUMCP"  		,"C",TAMSX3("RA_NUMCP")[1],TAMSX3("RA_NUMCP")[2]})
aAdd( aColumns, { "RA_SERCP"  		,"C",TAMSX3("RA_SERCP")[1],TAMSX3("RA_SERCP")[2]})
aAdd( aColumns, { "RA_UFCP"   		,"C",TAMSX3("RA_UFCP")[1],TAMSX3("RA_UFCP")[2]})
aAdd( aColumns, { "RA_SEXO"   		,"C",TAMSX3("RA_SEXO")[1],TAMSX3("RA_SEXO")[2]})
aAdd( aColumns, { "RA_CODFUNC"		,"C",TAMSX3("RA_CODFUNC")[1],TAMSX3("RA_CODFUNC")[2]})
aAdd( aColumns, { "RA_HRSEMAN"		,"N",TAMSX3("RA_HRSEMAN")[1],TAMSX3("RA_HRSEMAN")[2]})
aAdd( aColumns, { "RA_CATEG"  		,"C",TAMSX3("RA_CATEG")[1],TAMSX3("RA_CATEG")[2]})
aAdd( aColumns, { "RA_TPCONTR"		,"C",TAMSX3("RA_TPCONTR")[1],TAMSX3("RA_TPCONTR")[2]})
aAdd( aColumns, { "RA_RESCRAI"		,"C",TAMSX3("RA_RESCRAI")[1],TAMSX3("RA_RESCRAI")[2]})
aAdd( aColumns, { "RA_GRINRAI"		,"C",TAMSX3("RA_GRINRAI")[1],TAMSX3("RA_GRINRAI")[2]})
aAdd( aColumns, { "RA_SINDICA"		,"C",TAMSX3("RA_SINDICA")[1],TAMSX3("RA_SINDICA")[2]})
aAdd( aColumns, { "RA_SITFOLH"		,"C",TAMSX3("RA_SITFOLH")[1],TAMSX3("RA_SITFOLH")[2]})
aAdd( aColumns, { "RA_TIPOPGT"		,"C",TAMSX3("RA_TIPOPGT")[1],TAMSX3("RA_TIPOPGT")[2]})
aAdd( aColumns, { "RA_ADTPOSE"		,"C",TAMSX3("RA_ADTPOSE")[1],TAMSX3("RA_ADTPOSE")[2]})
aAdd( aColumns, { "RA_PERICUL"		,"N",TAMSX3("RA_PERICUL")[1],TAMSX3("RA_PERICUL")[2]})
aAdd( aColumns, { "RA_SALARIO"		,"N",TAMSX3("RA_SALARIO")[1],TAMSX3("RA_SALARIO")[2]})
aAdd( aColumns, { "RA_OPCAO"  		,"D",8,0})
aAdd( aColumns, { "RA_VCTOEXP"		,"D",8,0})
aAdd( aColumns, { "RA_VCTEXP2"		,"D",8,0})
aAdd( aColumns, { "RA_EXAMEDI"		,"D",8,0})
aAdd( aColumns, { "RA_PENSALI" 		,"N",TAMSX3("RA_PENSALI")[1],TAMSX3("RA_PENSALI")[2]})
aAdd( aColumns, { "RA_PERCADT"		,"N",TAMSX3("RA_PERCADT")[1],TAMSX3("RA_PERCADT")[2]})
aAdd( aColumns, { "RA_ANTEAUM"		,"N",TAMSX3("RA_ANTEAUM")[1],TAMSX3("RA_ANTEAUM")[2]})
aAdd( aColumns, { "RA_INSMIN" 		,"N",TAMSX3("RA_INSMIN")[1],TAMSX3("RA_INSMIN")[2]})
aAdd( aColumns, { "RA_INSMED" 		,"N",TAMSX3("RA_INSMED")[1],TAMSX3("RA_INSMED")[2]})
aAdd( aColumns, { "RA_INSMAX" 		,"N",TAMSX3("RA_INSMAX")[1],TAMSX3("RA_INSMAX")[2]})
aAdd( aColumns, { "RA_MESESAN"		,"N",TAMSX3("RA_MESESAN")[1],TAMSX3("RA_MESESAN")[2]})
aAdd( aColumns, { "RA_PERCSAT"		,"N",TAMSX3("RA_PERCSAT")[1],TAMSX3("RA_PERCSAT")[2]})
aAdd( aColumns, { "RA_PERFGTS"		,"N",TAMSX3("RA_PERFGTS")[1],TAMSX3("RA_PERFGTS")[2]})
aAdd( aColumns, { "RA_TNOTRAB"		,"C",TAMSX3("RA_TNOTRAB")[1],TAMSX3("RA_TNOTRAB")[2]})
aAdd( aColumns, { "RA_ASMEDIC"		,"C",TAMSX3("RA_ASMEDIC")[1],TAMSX3("RA_ASMEDIC")[2]})
aAdd( aColumns, { "RA_DTVTEST"		,"D",8,0})
aAdd( aColumns, { "RA_RACACOR"		,"C",TAMSX3("RA_RACACOR")[1],TAMSX3("RA_RACACOR")[2]})
aAdd( aColumns, { "RA_DEFIFIS"		,"C",TAMSX3("RA_DEFIFIS")[1],TAMSX3("RA_DEFIFIS")[2]})
aAdd( aColumns, { "RA_CIC"    		,"C",TAMSX3("RA_CIC")[1],TAMSX3("RA_CIC")[2]})
aAdd( aColumns, { "RA_CEP"    		,"C",TAMSX3("RA_CEP")[1],TAMSX3("RA_CEP")[2]})
aAdd( aColumns, { "RA_NOMECMP"		,"C",TAMSX3("RA_NOMECMP")[1],TAMSX3("RA_NOMECMP")[2]})
aAdd( aColumns, { "RA_DTCAGED"		,"D",8,0})
If lTpdeffi
	aAdd( aColumns, { "RA_TPDEFFI"	,"C",TAMSX3("RA_TPDEFFI")[1],TAMSX3("RA_TPDEFFI")[2]})
EndIf
If lSalInc
	aAdd( aColumns, { "RA_SALINCO"	,"N",TAMSX3("RA_SALINCO")[1],TAMSX3("RA_SALINCO")[2]})
Endif

aAdd( aColumns, { "RA_FECREI"	,"D",8,0})

If lHoParc
	aAdd( aColumns, { "RA_HOPARC"	,"C",TAMSX3("RA_HOPARC")[1],TAMSX3("RA_HOPARC")[2]})
EndIf

aAdd( aColumns, { "RA_TPJORNA"		,"C",TAMSX3("RA_TPJORNA")[1],TAMSX3("RA_TPJORNA")[2]})

oTmpTable := FWTemporaryTable():New( cAliasMark, aColumns )

oTmpTable:Create()

dbSelectArea( "SRA" )
DbSetOrder(RetOrdem("SRA","RA_FILIAL+RA_MAT"))

cQuery := "SELECT	RA_FILIAL,  RA_MAT    , RA_CC     , RA_CATFUNC, RA_VIEMRAI, RA_HRSMES , "
cQuery += "		RA_TIPOADM, RA_NOME   , RA_ADMISSA, RA_DEMISSA, RA_PIS    , RA_NASC   , "
cQuery += "		RA_NUMCP  , RA_SERCP  , RA_UFCP   , RA_SEXO   , RA_CODFUNC, RA_HRSEMAN, "
cQuery += "		RA_CATEG  , RA_TPCONTR, RA_RESCRAI, RA_GRINRAI, RA_SINDICA, RA_SITFOLH, "
cQuery += "		RA_TIPOPGT, RA_ADTPOSE, RA_PERICUL, RA_SALARIO, RA_OPCAO  , RA_VCTOEXP, "
cQuery += "		RA_VCTEXP2, RA_EXAMEDI, RA_PENSALI, RA_PERCADT, RA_ANTEAUM, RA_INSMIN , "
cQuery += "		RA_INSMED , RA_INSMAX , RA_MESESAN, RA_PERCSAT, RA_PERFGTS, RA_TNOTRAB, "
cQuery += "		RA_ASMEDIC, RA_DTVTEST, RA_RACACOR, RA_DEFIFIS, RA_CIC    , RA_CEP    , "
cQuery += "		RA_NOMECMP,	RA_DTCAGED"

If lTpdeffi
	cQuery += ", RA_TPDEFFI "
EndIf

If lSalInc
	cQuery +=	", RA_SALINCO "
Endif

cQuery += " , RA_FECREI "

If lHoParc
	cQuery += " , RA_HOPARC "
EndIf

cQuery += " , RA_TPJORNA "
cQuery += " , RA.R_E_C_N_O_ RECNO "

cQuery += " FROM " +	RetSqlName("SRA") + " RA "

cQuery += " WHERE "
cQuery += " RA_FILIAL  BETWEEN  '" + cFilDe +"' AND '" +cFilAte  +"' AND "
//monta filtro de filiais de acordo com o acesso do usuario
cQuery += " RA_FILIAL IN ('' "
For nX := 1 to Len(aValidFil)
	If aValidFil[nX] >= RTRIM(cFilDe) .AND. aValidFil[nX] <= RTRIM(cFilAte)
		cQuery += " ,'" + aValidFil[nX] +"' "
	ElseIf aValidFil[nX] > RTRIM(cFilAte)
		Exit
	EndIf
Next nX
cQuery += " ) AND "

cQuery += " RA_MAT     BETWEEN  '" + cMatDe +"' AND '" +cMatAte  +"' AND "
cQuery += " RA_CC      BETWEEN  '" + cCcDe  +"' AND '" +cCcAte   +"' AND "
cQuery += " RA_CATFUNC NOT IN ('A','E','P','G')  AND "

cQuery += " NOT( "
cQuery += " RA_VIEMRAI = '80' AND "
cQuery += " RA_TIPOADM IN ('1A','1B','1C','4B') "
cQuery += " ) AND "
cQuery += " RA_REGIME <> '2' AND"
cQuery += " (( "

If lSubsTp
	cQuery += " SUBSTRING(RA_ADMISSA,1,6) =  '" + MesAno(dDtRef) + "' AND "
	cQuery += " SUBSTRING(RA_ADMISSA,7,2) <= '" + cDia + "' )"
Else
	cQuery += " SUBSTR(RA_ADMISSA,1,6) =  '" + MesAno(dDtRef) + "' AND "
	cQuery += " SUBSTR(RA_ADMISSA,7,2) <= '" + cDia + "' )"
EndIf

cQuery += " OR "
cQuery += " ( "

If lSubsTp
	cQuery += " SUBSTRING(RA_FECREI,1,6) =  '" + MesAno(dDtRef) + "' AND "
	cQuery += " SUBSTRING(RA_FECREI,7,2) <= '" + cDia + "' ) AND"
Else
	cQuery += " SUBSTR(RA_FECREI,1,6) =  '" + MesAno(dDtRef) + "' AND "
	cQuery += " SUBSTR(RA_FECREI,7,2) <= '" + cDia + "' ) AND"
EndIf

cQuery += " RA_FECREI <> RA_DEMISSA "

cQuery += " ) AND "
cQuery += "  RA.D_E_L_E_T_ = ' ' "

cQuery += " ORDER BY " + SqlOrder("RA_ADMISSA","RA_MAT" ) + " DESC "

cQuery := ChangeQuery( cQuery )

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSRA)

DbSelectArea(cAliasSRA)

DbSelectArea(cAliasMark)

While (cAliasSRA)->(!Eof())

	If cKeyAux <> (cAliasSRA)->RA_FILIAL + (cAliasSRA)->RA_MAT

		cSraFilter	:= GpFltAlsGet( aRetFiltro , "SRA" )

		SRA->(DbGoto((cAliasSRA)->RECNO))

		If !Empty( cSraFilter )
     		If !( &( cSraFilter ) )
				(cAliasSRA)->(DbSkip())
				Loop
   			EndIf
		EndIf

		lRet := .T.
		RecLock(cAliasMark,.T.)
		(cAliasMark)->RA_FILIAL			:= (cAliasSRA)->RA_FILIAL
		(cAliasMark)->RA_MAT    		:= (cAliasSRA)->RA_MAT
		(cAliasMark)->RA_CC     		:= (cAliasSRA)->RA_CC
		(cAliasMark)->RA_CATFUNC		:= (cAliasSRA)->RA_CATFUNC
		(cAliasMark)->RA_VIEMRAI		:= (cAliasSRA)->RA_VIEMRAI
		(cAliasMark)->RA_HRSMES 		:= (cAliasSRA)->RA_HRSMES
		(cAliasMark)->RA_TIPOADM		:= (cAliasSRA)->RA_TIPOADM
		(cAliasMark)->RA_NOME   		:= (cAliasSRA)->RA_NOME
		(cAliasMark)->RA_ADMISSA		:= StoD((cAliasSRA)->RA_ADMISSA)
		(cAliasMark)->RA_DEMISSA		:= StoD((cAliasSRA)->RA_DEMISSA)
		(cAliasMark)->RA_PIS    		:= (cAliasSRA)->RA_PIS
		(cAliasMark)->RA_NASC   		:= StoD((cAliasSRA)->RA_NASC)
		(cAliasMark)->RA_NUMCP  		:= (cAliasSRA)->RA_NUMCP
		(cAliasMark)->RA_SERCP  		:= (cAliasSRA)->RA_SERCP
		(cAliasMark)->RA_UFCP   		:= (cAliasSRA)->RA_UFCP
		(cAliasMark)->RA_SEXO   		:= (cAliasSRA)->RA_SEXO
		(cAliasMark)->RA_CODFUNC		:= (cAliasSRA)->RA_CODFUNC
		(cAliasMark)->RA_HRSEMAN		:= (cAliasSRA)->RA_HRSEMAN
		(cAliasMark)->RA_CATEG  		:= (cAliasSRA)->RA_CATEG
		(cAliasMark)->RA_TPCONTR		:= (cAliasSRA)->RA_TPCONTR
		(cAliasMark)->RA_RESCRAI		:= (cAliasSRA)->RA_RESCRAI
		(cAliasMark)->RA_GRINRAI		:= (cAliasSRA)->RA_GRINRAI
		(cAliasMark)->RA_SINDICA		:= (cAliasSRA)->RA_SINDICA
		(cAliasMark)->RA_SITFOLH		:= (cAliasSRA)->RA_SITFOLH
		(cAliasMark)->RA_TIPOPGT		:= (cAliasSRA)->RA_TIPOPGT
		(cAliasMark)->RA_ADTPOSE		:= (cAliasSRA)->RA_ADTPOSE
		(cAliasMark)->RA_PERICUL		:= (cAliasSRA)->RA_PERICUL
		(cAliasMark)->RA_SALARIO		:= (cAliasSRA)->RA_SALARIO
		(cAliasMark)->RA_OPCAO  		:= StoD((cAliasSRA)->RA_OPCAO)
		(cAliasMark)->RA_VCTOEXP		:= StoD((cAliasSRA)->RA_VCTOEXP)
		(cAliasMark)->RA_VCTEXP2		:= StoD((cAliasSRA)->RA_VCTEXP2)
		(cAliasMark)->RA_EXAMEDI		:= StoD((cAliasSRA)->RA_EXAMEDI)
		(cAliasMark)->RA_PENSALI 		:= (cAliasSRA)->RA_PENSALI
		(cAliasMark)->RA_PERCADT		:= (cAliasSRA)->RA_PERCADT
		(cAliasMark)->RA_ANTEAUM		:= (cAliasSRA)->RA_ANTEAUM
		(cAliasMark)->RA_INSMIN 		:= (cAliasSRA)->RA_INSMIN
		(cAliasMark)->RA_INSMED 		:= (cAliasSRA)->RA_INSMED
		(cAliasMark)->RA_INSMAX 		:= (cAliasSRA)->RA_INSMAX
		(cAliasMark)->RA_MESESAN		:= (cAliasSRA)->RA_MESESAN
		(cAliasMark)->RA_PERCSAT		:= (cAliasSRA)->RA_PERCSAT
		(cAliasMark)->RA_PERFGTS		:= (cAliasSRA)->RA_PERFGTS
		(cAliasMark)->RA_TNOTRAB		:= (cAliasSRA)->RA_TNOTRAB
		(cAliasMark)->RA_ASMEDIC		:= (cAliasSRA)->RA_ASMEDIC
		(cAliasMark)->RA_DTVTEST		:= StoD((cAliasSRA)->RA_DTVTEST)
		(cAliasMark)->RA_RACACOR		:= (cAliasSRA)->RA_RACACOR
		(cAliasMark)->RA_DEFIFIS		:= (cAliasSRA)->RA_DEFIFIS
		(cAliasMark)->RA_CIC    		:= (cAliasSRA)->RA_CIC
		(cAliasMark)->RA_CEP    		:= (cAliasSRA)->RA_CEP
		(cAliasMark)->RA_NOMECMP		:= (cAliasSRA)->RA_NOMECMP
		(cAliasMark)->RA_DTCAGED		:= StoD((cAliasSRA)->RA_DTCAGED)
		If lTpdeffi
			(cAliasMark)->RA_TPDEFFI	:= (cAliasSRA)->RA_TPDEFFI
		EndIf
		If lSalInc
			(cAliasMark)->RA_SALINCO	:= (cAliasSRA)->RA_SALINCO
		Endif
		(cAliasMark)->RA_FECREI			:= StoD((cAliasSRA)->RA_FECREI)
		If lHoParc
			(cAliasMark)->RA_HOPARC		:= (cAliasSRA)->RA_HOPARC
        Endif

		(cAliasMark)->RA_TPJORNA		:= (cAliasSRA)->RA_TPJORNA

		MsUnLock()

		cKeyAux := (cAliasSRA)->RA_FILIAL + (cAliasSRA)->RA_MAT
	EndIf

	(cAliasSRA)->(DbSkip())

EndDo

( cAliasSRA )->( dbCloseArea() )

RestArea(aArea)

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fMntColsMark³ Autor ³ Claudinei Soares      ³ Data ³26/08/2014³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Monta dados dos campos da tabela temporaria                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fMntColsMark()                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fMntColsMark()
Local aArea		:= GetArea()
Local aColsAux 	:=`{}
Local aColsSX3	:= {}
Local aCampos  	:= {}
Local aDados	:= {}
Local nX		:= 0

aCampos  	:= {"RA_FILIAL","RA_MAT","RA_NOME","RA_PIS","RA_ADMISSA",'RA_FECREI','RA_DTCAGED' }

aDados		:= {{||(cAliasMark)->RA_FILIAL},{||(cAliasMark)->RA_MAT},{||(cAliasMark)->RA_NOME},{||(cAliasMark)->RA_PIS}, {||(cAliasMark)->RA_ADMISSA},{||(cAliasMark)->RA_FECREI},{||(cAliasMark)->RA_DTCAGED}}

DbSelectArea("SX3")
DbSetOrder(2)

For nX := 1 to Len(aCampos)
	If SX3->( dbSeek(aCampos[nX]) )
	    aColsSX3 := {X3Titulo(),aDados[nX], SX3->X3_TIPO, SX3->X3_PICTURE,1,SX3->X3_TAMANHO,SX3->X3_DECIMAL,.F.,,,,,,,,1}
	    aAdd(aColsAux,aColsSX3)
	    aColsSX3 := {}
	EndIf
Next nX

RestArea(aArea)

Return aColsAux

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fGP400Arq()³ Autor ³ Claudinei Soares      ³ Data ³26/08/2014³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Inicia a Gravacao do arquivo Caged para os admitidos         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fGP400Arq()                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fGP400Arq()

lCancela := .F.
oDlg:End()   //Fecha dialog
oMark:Refresh(.T.)

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fGravaData()³ Autor ³ Claudinei Soares      ³ Data ³ 26/08/14 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava a data de geracao do arquivo Caged no campo RA_DTCAGED ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fGravaData()                                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fGravaData(aFilMatri)

Local aAreaAnt	:= GetArea()
Local nFilMat		:= 1

dbSelectArea("SRA")
SRA->( dbSetOrder(1))

If RecLock("SRA",.F.)
	For nFilMat := 1 to Len(aFilMatri)
		IF SRA->( dbSeek( aFilMatri[nFilMat] ) )
			SRA->( RecLock( "SRA" , .F. , .T. ) )
			SRA->RA_DTCAGED	:= DATE()
			SRA->( MsUnLock())
		EndIf
	Next nFilMat
Endif

RestArea(aAreaAnt)

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³SetMarkAll  ³ Autor ³ Leandro Drumond       ³ Data ³ 17/10/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Marca/desmarca todos os itens                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SetMarkAll(cMarca,lMarcar )                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function SetMarkAll(cMarca,lMarcar )

Local aAreaMark  := (cAliasMark)->( GetArea() )

dbSelectArea(cAliasMark)
(cAliasMark)->( dbGoTop() )

While !(cAliasMark)->( Eof() )
	RecLock( (cAliasMark), .F. )
	(cAliasMark)->RA_OK := IIf( lMarcar , cMarca, '  ' )
	MsUnLock()
	(cAliasMark)->( dbSkip() )
EndDo

RestArea( aAreaMark )

Return .T.

/*/{Protheus.doc} fStcGPM400
Seta as estáticas da rotina
@author gabriel.almeida
@since 18/07/2019
@version 1.0
/*/
Function fStcGPM400(lCancel)
	lCancela := lCancel
Return