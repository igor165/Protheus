#INCLUDE "TOTVS.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "HEADERGD.CH"
#INCLUDE 'GPEA300.CH'

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ão    ³ GPEA300  ³ Autor ³ Glaucia C. Messina				³ Data ³ 26/04/2011 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cadastro Mnemonicos														³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GPEA300()                                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data     ³ FNC           ³  Motivo da Alteracao                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Leandro Dr. ³27/09/2012³M12RH01		   ³Requisito RHU210- Unificação das folhas.     ³±±
±±³Raquel Hager³09/09/2012³TQLZZ8		   ³Ajuste tela - Ref. Cruzada.				       ³±±
±±³Marcia Moura³14/01/15³TUFJVO/TTXLIX 	³Correcoes no tratamento dos mnemonicos uti- ³±±
±±³            ³        ³         			³lizados na DIRF                       	   ³±±
±±³Victor A.   ³04/05/16³TVBFGR		   	³Ajusta na declaração da variável lManutRCA nas ³±±
±±³            ³        ³         		³funções fPictMnemo e GP300PosValid        	    ³±±
±±³Jonathan Glz³31/10/2016³    TSSERMI01-34³En la funcion ModelDef,Se quita el when para³±±
±±³            ³          ³                ³los campos RCA_ALIAS y RCA_CAMPOS y el when ³±±
±±³            ³          ³                ³se trata por diccionario.                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function GPEA300()
	Local oBrwRCA
	Local cFiltraRh
	Local acol		:= {.T.,.F.,.F.,.F.,.F.}
	Local awidth	:= {10,15,20}
	Local aColumns	:= {}
	Local cMod  	:= FWModeAccess("RCA", 3)

	lManutRCA		:= If(Type( "lManutRCA" ) == "L", lManutRCA, .F.)
	lImpMnemo		:= If(Type( "lImpMnemo" ) == "L", lImpMnemo, .T.)

 	If (cMod == "C")

		//Faz a carga dos Mnemonicos Padroes do Protheus
		fCarMnemo()

		oBrwRCA := FwMBrowse():New()
		oBrwRCA:SetAlias( 'RCA' )
		oBrwRCA:SetDescription(oEmToAnsi(STR0001)) 		//"Cadastro de Mnemonicos"

		//Monta legenda de acordo com modelo da folha em uso
		If MV_MODFOL == "1"
			oBrwRCA:AddLegend( "!(SUBSTR(RCA_MNEMON,1,2)$'M_|P_')",	"BR_AZUL",	OemToAnsi( STR0020 ) )  //"Mnemonico Definido Pela Microsiga"
			oBrwRCA:AddLegend( "SUBSTR(RCA_MNEMON,1,2)=='M_'",	"BR_VERDE",	OemToAnsi( STR0021 ) )		//"Mnemonico Definido Pelo Usuario"
			oBrwRCA:AddLegend( "SUBSTR(RCA_MNEMON,1,2)=='P_'",	"BR_AMARELO",	OemToAnsi( STR0094 ) ) //"Mnemonico ( Tipo Parametro ) Definido Pela Microsiga"
		Else
			oBrwRCA:AddLegend( "SUBSTR(RCA_MNEMON,1,2)!='M_' .AND. !(RCA_TIPO $ 'P|R')",	"BLUE",	OemToAnsi( STR0020 ) )  //"Mnemonico Definido Pela Microsiga"
			oBrwRCA:AddLegend( "SUBSTR(RCA_MNEMON,1,2)=='M_'",	"GREEN",	OemToAnsi( STR0021 ) )		//"Mnemonico Definido Pelo Usuario"
			oBrwRCA:AddLegend( "RCA_TIPO=='P'",	"YELLOW",	OemToAnsi( STR0084 ) ) //"Operador"
			oBrwRCA:AddLegend( "RCA_TIPO=='R'",	"GRAY",	OemToAnsi( STR0078 ) ) //"Reservado"
		EndIf

		//Contorno Dicionario de Dados
		//Omitir o campo RCA_MNEMON, devido a função PictVar, a qual estava alterando os valores no Browse Inicial
		If MV_MODFOL == "1"
			oBrwRCA:SetOnlyFields({ 'RCA_DESC','RCA_TIPO', 'RCA_ACUMUL'})
		Else
			oBrwRCA:SetOnlyFields({ 'RCA_DESC','RCA_TIPO', 'RCA_CONTEU', 'RCA_ALIAS', 'RCA_CAMPO'})
		EndIf

		//Adicao do Campo RCA_MNEMON, sem picture
		Aadd( aColumns, { GetSx3Cache("RCA_MNEMON", "X3_TITULO")    ,{ || RCA_MNEMON  },"C","",,20,0,.F.,,.F.,,"RCA_MNEMON" })

		oBrwRCA:SetFields(aColumns)

		cFiltraRh	:= CHKRH(FunName(),"RCA","1")
		oBrwRCA:SetFilterDefault(cFiltraRh)

		oBrwRCA:Activate()

	Else
		MsgInfo( oEmToAnsi( STR0025 ) + CRLF + oEmToAnsi( STR0026 ) ) //"O Modo de Acesso do Cadastro de Mnem¢nicos deve ser OBRIGATORIAMENTE Compartilhado."  ## "Altere o Modo de Acesso Atraves do Configurador."
	EndIf

Return NIL


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MenuDef    ³ Autor ³ Glaucia C. Messina    ³ Data ³ 26/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Menu Funcional                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MenuDef()                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()

	Local aRotina := {}

	ADD OPTION aRotina TITLE STR0002	ACTION 'PesqBrw'			OPERATION 1 ACCESS 0 	//"Pesquisar"
	ADD OPTION aRotina TITLE STR0003	ACTION 'VIEWDEF.GPEA300'	OPERATION 2 ACCESS 0	//"Visualizar"
	ADD OPTION aRotina TITLE STR0004	ACTION 'VIEWDEF.GPEA300'	OPERATION 3 ACCESS 0	//"Incluir"
	ADD OPTION aRotina TITLE STR0005	ACTION 'VIEWDEF.GPEA300'	OPERATION 4 ACCESS 0	//"Alterar"
	ADD OPTION aRotina TITLE STR0006	ACTION 'VIEWDEF.GPEA300'	OPERATION 5 ACCESS 0	//"Excluir"

Return aRotina

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ ModelDef   ³ Autor ³ Glaucia C. Messina    ³ Data ³ 26/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Modelo de dados e Regras de Preenchimento do Cadastro de		³±±
±±³          ³ Mnemonicos													³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ModelDef()                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ModelDef()

	//--> Declara a variável aqui, pois quando essa função é chamada no X3_PICTVAR não passa pela função pincipal
	//--> onde a mesma é declarada e essa variável é chamada em outros pontos do programa.
	Local lManutRCA		:= If(Type( "lManutRCA" ) == "L", lManutRCA, .F.)
	Local oModel
	Local oStruRCA 		:= FWFormStruct( 1, 'RCA')
	Local bPosField		:= {|oModel| GP300PosField(oModel)}
	Local bPosValid		:= {|oModel| GP300PosValid(oModel,lManutRCA)}
    Local bCommit		:= {|oModel| GP300Commit(oModel)}
	Local bWhenCont 	:= { || If(LEFT(RCA_MNEMON,2) $ "M_*P_" .or. oModel:GetOperation() == 3 .or. lManutRCA .or. (MV_MODFOL == '2' .and. !(RCA_TIPO $ "P|R")), .T., .F.) }
    Local bWhen			:= { || If(LEFT(RCA_MNEMON,2) == "M_" .or. oModel:GetOperation() == 3 .or. lManutRCA .or. (MV_MODFOL == '2' .and. !(RCA_TIPO $ "P|R")), .T., .F.) }

	oStruRCA:SetProperty( 'RCA_FILIAL', MODEL_FIELD_WHEN, bWhen )
	oStruRCA:SetProperty( 'RCA_MNEMON', MODEL_FIELD_WHEN, bWhen )
	oStruRCA:SetProperty( 'RCA_DESC'  , MODEL_FIELD_WHEN, bWhen )
	oStruRCA:SetProperty( 'RCA_TIPO'  , MODEL_FIELD_WHEN, bWhen )
	oStruRCA:SetProperty( 'RCA_CONTEU', MODEL_FIELD_WHEN, bWhenCont )
	oStruRCA:SetProperty( 'RCA_ACUMUL', MODEL_FIELD_WHEN, bWhen )
	oStruRCA:SetProperty( 'RCA_PROCES', MODEL_FIELD_WHEN, bWhen )

	if  cPaisLoc <> "COL"
		oStruRCA:SetProperty( 'RCA_ALIAS' , MODEL_FIELD_WHEN, bWhen )
		oStruRCA:SetProperty( 'RCA_CAMPO' , MODEL_FIELD_WHEN, bWhen )
	endif

	If MV_MODFOL == "1"
		oStruRCA:RemoveField( "RCA_ALIAS" )
		oStruRCA:RemoveField( "RCA_CAMPO" )
	Else
		oStruRCA:RemoveField( "RCA_ACUMUL" )
	EndIf

	oModel	:= MPFormModel():New('GPEA300',,bPosValid,bCommit)
	oModel:AddFields( 'RCAMASTER',, oStruRCA,,bPosField)
	oModel:SetDescription(STR0001)   							//"Cadastro de Mnemonicos"
	oModel:GetModel( 'RCAMASTER' ):SetDescription(STR0001)		//"Cadastro de Mnemonicos"
	oModel:SetPrimaryKey( { } )

Return oModel

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ ViewDef    ³ Autor ³ Glaucia Messina       ³ Data ³ 26/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Visualizador de dados do Cadastro de Mnemonicos				³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ViewDef()                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ViewDef()

	Local oModel		:= FWLoadModel( 'GPEA300' )
	Local oStruRCA		:= FWFormStruct( 2, 'RCA' )
	Local oView

 	oView := FWFormView():New()
	oView:SetModel( oModel )

	If MV_MODFOL == "1"
		oStruRCA:RemoveField( "RCA_ALIAS" )
		oStruRCA:RemoveField( "RCA_CAMPO" )
	Else
		oStruRCA:RemoveField( "RCA_ACUMUL" )
	EndIf

	oView:AddField( 'VIEW_RCA', oStruRCA, 'RCAMASTER' )

	oView:AddUserButton( STR0074, 'CLIPS', {|oView| fLocaliza(RCA_MNEMON, "RC3", {"RC3_RESULT","RC3_FORM01","RC3_FORM02" } )} )   //"Localizar Referência Cruzada"

Return oView

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GP300PosField³ Autor ³Glaucia C. Messina	  ³ Data ³ 26/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verificacoes apos preenchimento do Formulario Mnemonicos		³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GP300PosField(oModel)                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oModel = objeto do modelo									³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ModelDef()                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GP300PosField(oModel)
	Local nOp		 	:= oModel:GetOperation()
	Local oModelRCA     := oModel:GetModel( 'RCAMASTER' )
	Local lRet			:=.T.
	Local cMnemon		:= FwFldGet('RCA_MNEMON',,oModelRCA)

	If nOp == 3
		If LEFT(cMnemon,2) <> 'M_' 	.and. !lManutRCA						//Garantindo que o Mnemonico incluido comece por M_ se nao for manutencao
			cMnemon:='M_'+cMnemon
			FwFldPut('RCA_MNEMON',ALLTRIM(cMnemon),,oModelRCA,.T.,.T.)
		ElseIf ALLTRIM(cMnemon) == 'M_'          					   		//Garantindo que o Mnemonico não seja apenas "M_"
			Help( ,, 'HELP',, oEmToAnsi(STR0091), 1, 0) 					//"Mnemonico invalido."
			lRet:=.F.
		EndIf
	EndIf

Return(lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GP300PosValid³ Autor ³Glaucia C. Messina	  ³ Data ³ 26/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verificacoes antes de realizar o Commit na tabela RCA		³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GP300PosValid(oModel)										³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oModel = objeto do modelo									³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ModelDef()                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GP300PosValid(oModel,lManutRCA)
	Local aArea		:= GetArea()
	Local nOp		:= oModel:GetOperation()
    Local lRet		:=.T.

    //--> Declara a variável aqui, pois quando essa função é chamada no X3_PICTVAR não passa pela função pincipal
	//--> onde a mesma é declarada e essa variável é chamada em outros pontos do programa.
	lManutRCA		:= If(Type( "lManutRCA" ) == "L", lManutRCA, .F.)

	If nOp == 5 .AND. ( LEFT(RCA_MNEMON,2) <> 'M_' ) .AND. !lManutRCA //Não é permitido excluir mnemonicos definidos pelo Sistema
		If RCA_TIPO $ "P|R"
			Help( ,, 'HELP',, OemToAnsi(STR0081), 1, 0)
		Else
			Help( ,, 'HELP',, OemToAnsi(STR0018), 1, 0)
		EndIf
		lRet := .F.
	EndIf

	If !(nOp == 5) .and. M->RCA_TIPO == "F"
		If (Empty(M->RCA_ALIAS) .or. Empty(M->RCA_CAMPO) )
			Help( ,, 'HELP',, OemToAnsi(STR0093), 1, 0)
			lRet := .F.
		EndIf
	EndIf

	RestArea( aArea )

Return (lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GP300Commit	³ Autor ³Glaucia C. Messina	  ³ Data ³ 26/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verificacoes antes de realizar o Commit na tabela RCA		³±±
±±³			 ³ Se faz necessário, pois quando a exclusão não é realizada, 	³±±
±±³			 ³ não será necessário enviar retorno ao MVC, e sim apenas 		³±±
±±³			 ³ apresentar um relatório com orientações ao usuário.			³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GP300Commit(oModel)											³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oModel = objeto do modelo									³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ModelDef()                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GP300Commit(oModel)
	Local nOp			:= oModel:GetOperation()

	If !(nOp == 5   .AND. !fUseVar(RCA_MNEMON))
		FWFormCommit( oModel )
	EndIf
	
	If ChkFile('RFT') .And. Alltrim(RCA->RCA_MNEMON) =="P_LMEMCALC"
		RstMnemonicos()
		SetMnemonicos(xFilial("RCA"),NIL,.T.,"P_LMEMCALC")
		RstStMem()
		f160RstSt()
		dbSelectArea("SYP")
		GPCallCmpAll(,,,.T.)
	EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fUseVar		³ Autor ³Glaucia C. Messina	  ³ Data ³ 26/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao adaptada da versão anterior ao MVC.					³±±
±±³			 ³ Retirei o parêmtro com o ponteiro de registro RCA.			³±±
±±³			 ³ Verifica se o conteudo dos campos: RC3_RESULT,RC3_FORM01,	³±±
±±³			 ³ RC3_FORM02, RM_IF, RM_FORMULA e RM_FALSE, possuem em seu 	³±±
±±³			 ³ conteudo o valor do campo RCA_MNEMON, caso sim gera Log.		³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fUseVar(cFormula)											³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cFormula = é o conteudo do campo RCA_MNEMON					³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ModelDef()                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fUseVar(cFormula)

Local aArea		:= GetArea()
Local aAreaRCA	:= RCA->( GetArea() )
Local aAreas	:= Array( 02 , 03 )
Local aLog		:= {}
Local aLogTitle := {}
Local cFilArea	:= ""
Local cConteudo	:= ""
Local nArea		:= 0.00
Local nAreas	:= 0.00
Local nCampo	:= 0.00
Local nCampos	:= 0.00
Local  lExclu	:= .F.

aAreas[ 01 , 01 ] := "RC3"
aAreas[ 01 , 02 ] := RC3->( GetArea() )
aAreas[ 01 , 03 ] := {}

aAdd( aAreas[ 01 , 03 ] , "RC3_RESULT" )
aAdd( aAreas[ 01 , 03 ] , "RC3_FORM01" )
aAdd( aAreas[ 01 , 03 ] , "RC3_FORM02" )

aAreas[ 02 , 01 ] := "SRM"
aAreas[ 02 , 02 ] := SRM->( GetArea() )
aAreas[ 02 , 03 ] := {}

aAdd( aAreas[ 02 , 03 ] , "RM_IF"      )
aAdd( aAreas[ 02 , 03 ] , "RM_FORMULA" )
aAdd( aAreas[ 02 , 03 ] , "RM_FALSE"   )

If ( lExclu := MsgYesNo(	OemToAnsi(	oEmToAnsi(STR0010) + ;	//""O Sistema Agora Ira efetuar a Verificacao para ver se o mneomonico selecionado para"
										CRLF	+ ;
										oEmToAnsi(STR0011)	+ ;	//"esta sendo utilizado. A verifica‡„o pode ser demorada !!"
										CRLF	+ ;
										CRLF	+ ;
										oEmToAnsi(STR0012)   ;	//"Confirma a exclus„o do Mnemonico ?
						 	          ),;
			 				OemToAnsi( STR0013 ) ;	//"Aten‡„o"
						);
	)

	nAreas := Len( aAreas )
	For nArea := 1 To nAreas
		cFilArea := xFilial( aAreas[ nArea , 01 ] )
		If ( aAreas[ nArea , 01 ] )->( dbSeek( cFilArea , .F. ) )
			While ( ( aAreas[ nArea , 01 ] )->( !Eof() .and. FieldGet( FieldPos( PrefixoCpo( aAreas[ nArea , 01 ] ) + "_FILIAL" ) ) == cFilArea ) )
				nCampos := Len( aAreas[ nArea , 03 ] )
				For nCampo := 1 To nCampos
		   			cConteudo := ( aAreas[ nArea , 01 ] )->( Upper( AllTrim( ( aAreas[ nArea , 01 ] )->(FieldGet( ( aAreas[ nArea , 01 ] )->(FieldPos( aAreas[ nArea , 03 , nCampo ] ) ) ) ) ) ) )
					If ( AllTrim(cFormula) $ cConteudo )
						If Empty( aLog )
							aAdd( aLog , oEmToAnsi(STR0014) + cFormula + oEmToAnsi(STR0015) ) //"O Mnemonico "###" nao pode ser Excluido pois esta sendo utilizada nos arquivos abaixo"
							aAdd( aLog , "" )
							aAdd( aLog , "" )
						EndIf
						aAdd( aLog , aAreas[ nArea , 01 ] + Space( 05 ) + ( aAreas[ nArea , 01 ] )->( StrZero( Recno() , 10 )  + Space( 01 ) + AllTrim( &( IndexKey() ) ) + "/" + cConteudo ) )
					EndIf
				Next nCampo
				( aAreas[ nArea , 01 ] )->( dbSkip() )
			End While
		EndIf
		RestArea( aAreas[ nArea , 02 ] )
	Next nArea

	If !( lExclu := Empty( aLog ) )
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Gera e Mostra o Log 										  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				10        20       30        40        50        60        70        80        90       100       110...
		1234567890123456789023456789012345678901234567890123456789012345678901234567890123456789012345678901234567890...
		Arquivo Registro   Conteudo
		XXX     9999999999 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX*/
		aAdd( aLogTitle , oEmToAnsi(STR0016) )
		fMakeLog( { aLog } , aLogTitle , NIL , NIL , NIL , oEmToAnsi(STR0017) ) //"Log de Ocorrencias na Exclusao de Formulas"
	EndIf

EndIf

( RestArea( aAreaRCA ) , RestArea( aArea ) )

Return( lExclu  )

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³fPictMnemo³ Autor ³ R.H. -  Natie         ³ Data ³ 08/08/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Altera Picture para inclusao de Mnemonico - x3_pictvar      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fPict                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parƒmetros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ Gen‚rico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fPictMnemo()
Local cPicture	:= "@!R XXXXXXXXXX" +"%C"
Local bCampo 	:= {|nCPO| Field(nCPO) }
Local cCampo 	:= EVAL(bCampo,2)

Local oModel := FWModelActive()

Local nOperation	:= 0

//--> Declara a variável aqui, pois quando essa função é chamada no X3_PICTVAR não passa pela função pincipal
//--> onde a mesma é declarada e essa variável é chamada em outros pontos do programa.
	lManutRCA	:= If(Type( "lManutRCA" ) == "L", lManutRCA, .F.)
If IsInCallStack("GPEA290")
	nOperation := MODEL_OPERATION_INSERT
ElseIf Type("oModel") <> "U"
	nOperation	:= oModel:GetOperation()
EndIf

If nOperation == MODEL_OPERATION_INSERT

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa a Static em Gpea290MnemGet()					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	RstMnemonicos()

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Altera a Marcara do Campo RCA_MNEMON carregando os 2   primei³
	³ ros Bytes com M_											   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
    If ( cCampo = "RCA_MNEMON" ) .and. !lManutRCA
		If ( SubStr( M->RCA_MNEMON , 1 , 2 ) # "M_" )	//--Verificar se ja esta com  a picture para nao aplica-la novamente
			cPicture := ( "@!R M_XXXXXXXX"  + "%C" )	//--M_ no inicio do nome do mnemonico, para que apareca
		EndIf											//--na digitacao do campo
	EndIf

EndIf

Return( cPicture )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fChkIniMne	³ Autor ³Glaucia C. Messina	  ³ Data ³ 26/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao adaptada da versão anterior ao MVC.					³±±
±±³			 ³ Inicializador campo RCA_CONTEU, apos preenchimento RCA_TIPO	³±±
±±³			 ³ Espacos a preencher diminuidos, pois estoura o tamanho campo.³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fChkIniMne(cTipo)											³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cTipo = é o conteudo do campo RCA_TIPO						³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA300()													³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fChkIniMne(cTipo)

Local nTam_Conteu := GetSx3Cache("RCA_CONTEU", "X3_TAMANHO")

	If cTipo = "N"
		M->RCA_CONTEU := "0" + Space(nTam_Conteu-1)
	ElseIf cTipo = "D"
		M->RCA_CONTEU := "//" + Space(nTam_Conteu-2)
	ElseIf cTipo="L"
		M->RCA_CONTEU := ".F." + Space(nTam_Conteu-3)
	Else
		M->RCA_CONTEU := space(nTam_Conteu)
	EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fChkConMne	³ Autor ³Glaucia C. Messina	  ³ Data ³ 27/04/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao adaptada da versão anterior ao MVC.					³±±
±±³			 ³ Verifica se Conteudo é compativel com o tipo do mnemonico.	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fChkConMne(cTipo)											³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cTipo = é o conteudo do campo RCA_TIPO						³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA300()	                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fChkConMne(cTipo)

Local lNaoConf	:= .F.
Local cVlrConteu:= alltrim(M->RCA_CONTEU)
Local nX 		:= 0
Local lTemPonto := .F.
Local lRet		:= .T.

If cTipo = "N"
	If Type(M->RCA_CONTEU) # "N"
		lNaoConf	:= .T.
	EndIf
	//Validacao especifica para o Mnemonico "P_VLLIMDIRF"
	If !lNaoConf .and. AllTrim(M->RCA_MNEMON) == "P_VLLIMDIRF"
		If At(",",cVlrConteu) > 0
			Help( ,, 'HELP',, oEmToAnsi(STR0088)+" "+oEmToAnsi(STR0089), 1, 0) //"Não pode conter vírgula no conteúdo."###"Utilize apenas (ponto) para separar as casas decimais."
			Return .F.
		Else
			For nX:=1 to Len(cVlrConteu)
				If SubStr(cVlrConteu,nX,1) == "."
					If lTemPonto
						Help( ,, 'HELP',, oEmToAnsi(STR0089), 1, 0)  //"Utilize apenas (ponto) para separar as casas decimais."
			  			Return .F.
					Else
						lTemPonto := .T.
					EndIf
				EndIf
			Next nX

			//Valida ultimos 3 digitos
			cVlrConteu := Right(cVlrConteu,3)
			If SubStr(cVlrConteu,1,1) <> "." .or. !(SubStr(cVlrConteu,2,1) $ "0123456789") .or. !(SubStr(cVlrConteu,3,1) $ "0123456789")
				Help( ,, 'HELP',, oEmToAnsi(STR0090), 1, 0) 	//"Valor digitado em formato inválido."
			    Return .F.
			EndIf
		EndIf
	EndIf
ElseIf cTipo = "L"
	If !(M->RCA_CONTEU = ".T." .or. M->RCA_CONTEU =".F.")
		lNaoConf	:= .T.
	EndIf
EndIf

If lNaoConf
	Help( ,, 'HELP',, oEmToAnsi(STR0024), 1, 0)  		//"Tipo e Conteudo do Mnemonico nao säo compativeis"
	lRet	:= .F.
EndIf

Return lRet

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³RcaTipoBox 	 ³Autor³Marinaldo de Jesus    ³ Data ³27/11/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Funcao para Retornar as Opcoes do Campo RCA_TIPO         	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_CBOX para o campo RCA_TIPO	                         	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function RcaTipoBox( lValid , lRetDesc , cOpcDesc, cTipFol )

Local cOpcBox := ""

DEFAULT cTipFol := MV_MODFOL

DEFAULT lValid		:= .F.
DEFAULT lRetDesc	:= .F.

If !( lValid )

	If !( lRetDesc )

		If cTipFol == "1" //Folha Mexico
			cOpcBox := ( "A=" + STR0042 + ";" )	//"Array"
			cOpcBox += ( "B=" + STR0043 + ";" )	//"Bloco"
		EndIf
		cOpcBox += ( "C=" + STR0044 + ";" )	//"Caracter"
		cOpcBox += ( "D=" + STR0045 + ";" )	//"Data"
		cOpcBox += ( "L=" + STR0046 + ";" )	//"Logico"
		cOpcBox += ( "N=" + STR0047 + ";" )	//"Numerico"

		If cTipFol == "1" //Folha Mexico
			cOpcBox += ( "O=" + STR0055 + ";" )	//"Objeto"
			cOpcBox += ( "U=" + STR0048       )	//"Indefinido"
		Else
			cOpcBox += ( ";" + "R=" + STR0078 + ";") //"Reservado"
			cOpcBox += (       "P=" + STR0079 + ";") //"Operador"
			cOpcBox += (       "F=" + STR0080      ) //"Arquivo"
		EndIf

	Else

		Do Case
			Case ( cOpcDesc == "A" ) ; ( cOpcBox := STR0042 )	//"Array"
			Case ( cOpcDesc == "B" ) ; ( cOpcBox := STR0043 )	//"Bloco"
			Case ( cOpcDesc == "C" ) ; ( cOpcBox := STR0044 )	//"Caracter"
			Case ( cOpcDesc == "D" ) ; ( cOpcBox := STR0035 )	//"Data"
			Case ( cOpcDesc == "L" ) ; ( cOpcBox := STR0046 )	//"Logico"
			Case ( cOpcDesc == "N" ) ; ( cOpcBox := STR0047 )	//"Numerico"
			Case ( cOpcDesc == "O" ) ; ( cOpcBox := STR0055 )	//"Objeto"
			Case ( cOpcDesc == "U" ) ; ( cOpcBox := STR0048 )	//"Indefinido"
			Case ( cOpcDesc == "R" ) ; ( cOpcBox := STR0078	)   //"Reservado"
			Case ( cOpcDesc == "P" ) ; ( cOpcBox := STR0079	)   //"Operador"
			Case ( cOpcDesc == "F" ) ; ( cOpcBox := STR0080	)   //"Arquivo"
		End Case

	EndIf

Else

	cOpcBox := "ABCDLNOURPF"

EndIf

Return( cOpcBox )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³RcaAcumulInit³Autor³Marinaldo de Jesus		³Data³27/11/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validar o Conteudo do Campo RCA_ACUMUL                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³RcaAcumulInit()									            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_RELACAO para o campo RCA_ACUMUL							³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function RcaAcumulInit()
Return( SubStr( RcaAcumulBox( .T. ) , 1 , 1 ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³RcaAcumulBox ³Autor³Marinaldo de Jesus    ³ Data ³27/11/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Funcao para Retornar as Opcoes do Campo RCA_ACUMUL         	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_CBOX para o campo RCA_ACUMUL                         	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function RcaAcumulBox( lValid , lRetDesc , cOpcDesc )

Local cOpcBox

DEFAULT lValid		:= .F.
DEFAULT lRetDesc	:= .F.

If !( lValid )

	If !( lRetDesc )

		cOpcBox := ( "1=" + STR0040 + ";" )	//"Publica"
		cOpcBox += ( "2=" + STR0039 + ";" )	//"Privada"
		cOpcBox += ( "3=" + STR0041       )	//"Local"

	Else

		Do Case
			Case ( cOpcDesc == "1" ) ; ( cOpcBox := STR0040 )	//"Publica"
			Case ( cOpcDesc == "2" ) ; ( cOpcBox := STR0039 )	//"Privada"
			Case ( cOpcDesc == "3" ) ; ( cOpcBox := STR0041 )	//"Local"
		End Case

	EndIf

Else

	cOpcBox := "123"

EndIf

Return( cOpcBox )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³fLocaliza	  ³Autor³ Mauricio T. Takakura³ Data ³09/01/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Localizar String em Tabelas ou Arquivos                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fLocaliza(cString)	     									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais> 									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generico      												³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function fLocaliza(cString, cTables, aFieldsSel)

Local aArea			:= GetArea()
Local aAdvSize
Local aObjSize
Local aObjCoords	:= {}
Local aInfoAdvSize	:= {}
Local aFolders      := Array(2)
Local aPages		:= Array(2)

Local bSet15
Local bSet24
Local bDialogInit

Local cExpFiltro

Local oDlg
Local oFont

Private aLbxFields	:= {}
Private oFolders		:= Array(2)
Private aSvAllCols	:= {}
Private aCampos		:= {}
Private lChBoxCS	:= .F. 		// Case Sensitive
Private oOk 		:= LoadBitmap( GetResources(), "LBOK" )
Private oNo 		:= LoadBitmap( GetResources(), "LBNO" )
Private oLbxFields
Private oGetPesq
Private oGetItens
Private oBtnPesq
Private oBtnImpr
Private cTitulo := OemToAnsi(STR0056)	//"Localizar"

Static aListAlias := {}
Static aTabCampos := {}

Begin Sequence

	aAdd( aLbxFields, { .F., "" } )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos - Possui mais itens atualiza- ³
	³ dos na funcao Gpe290Window                                   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdvSize		:= MsAdvSize()

	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )


	bSet15 := { || oDlg:End() }
	bSet24 := { || oDlg:End() }

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco a ser Executado na Inicializacao do Dialog    ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bDialogInit	:= { || EnchoiceBar( oDlg , bSet15 , bSet24 ) }

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco a ser Executado na Inicializacao do Dialog    ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aFolders[ 01 ] 		:= OemToAnsi( "&" + OemToAnsi(STR0057) )	//"Tabelas"
	aFolders[ 02 ] 		:= OemToAnsi( "&" + OemToAnsi(STR0066) )	//"Resultado Pesquisa"

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Conteudo do aPages								   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aPages[ 01 ]   		:= OemToAnsi( "&" + OemToAnsi(STR0057) )	//"Tabelas"
	aPages[ 02 ] 		:= OemToAnsi( "&" + OemToAnsi(STR0066) )	//"Resultado Pesquisa"


	DEFINE FONT oFont NAME "Arial" SIZE 000 , -011 BOLD
	DEFINE MSDIALOG oDlg TITLE cTitulo From 0,0 TO 450,750  OF oMainWnd PIXEL

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega o Objeto Folder               					   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		oFolders := TFolder():New(	aObjSize[1][1]		,;
									aObjSize[1][2]		,;
									aFolders				,;
									aPages					,;
									oDlg					,;
									NIL						,;
									NIL						,;
									NIL						,;
									.T.						,;
									.F.						,;
									375		,;
									190	 ;
								 )

		oFolders:bChange := { || If( oFolders:nOption == 1, ( oBtnImpr:lActive := .F., oBtnPesq:lActive := .T. ), ( oBtnImpr:lActive := .T., oBtnPesq:lActive := .F.) ), oBtnPesq:Refresh(), oBtnImpr:Refresh() }




		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Criacao dos componentes da Pesquisa na Tabela                ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		GpWinTable(	oFolders:aDialogs[ 01 ]	,;
					aObjSize				,;
					@cString                ,;
					@cExpFiltro				,;
					@cTables				,;
					aFieldsSel				 ;
				  )

	ACTIVATE MSDIALOG oDlg ON INIT Eval( bDialogInit ) CENTERED

End Sequence

RestArea(aArea)

Return( .T. )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³GpWinTable	  ³Autor³ Mauricio T. Takakura³ Data ³09/01/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Componentes e pesquisa na Tabelas                           ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³GpWinTable(oDlg)	     									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais> 									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generico      												³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function GpWinTable( oDlg		,;	// Objeto da Janela da Folder
							aObjSize	,;	// Posicionamento da Janela
							cTexto		,;	// Texto a Ser Pesquisado - Por Referencia
							cExpFiltro	,;	// Expressao do Filtro - Por Referencia
							cTables		,;	// Nome da Tabela - Por Referencia
							aFieldsSel  ;	// Campos Pre Selecionados
						  )

Local aSvListAlias

Local bAltFilter
Local bFastFilter

Local cMemoEdit
Local cLbxFields

Local nX

Local oTexto
Local oGroup
Local oCheckBox
Local oTables
Local oMemoEdit
Local oBtnFastFil
Local oGrpButtons
Local aRetcoords
Local bPrint
Local bPesquisar
Local cString  := cTexto

DEFAULT cTexto := Space(60)

If Len(cTexto) < 60
	cTexto := AllTrim( cTexto ) + Replicate( " ", 60-Len(AllTrim( cTexto )))
EndIf

If Upper(FunName()) $ "GPEA290*GPEA291"
	cTables := "RC3"
EndIf

aRetcoords := RetCoords(4,10,40,20,2,80,,15)

Begin Sequence

	@ aRetcoords[1][1],aRetcoords[1][2] SAY OemToAnsi( STR0059 ) SIZE 080,10 OF oDlg PIXEL	//"Pesquisar Texto"
	@ aRetcoords[2][1],aRetcoords[2][2]  MsGet oTexto Var cTexto PICTURE "@S60" F3 "RCA" SIZE 100,10 OF oDlg PIXEL
	@ aRetcoords[3][1],aRetcoords[3][2]  CheckBox oCheckBox VAR lChBoxCS Prompt OemToAnsi( STR0060 ) SIZE 55,08 OF oDlg PIXEL //"Case Sensitive"

	@ aRetcoords[5][1],aRetcoords[5][2] GROUP oGroup TO 150,355 LABEL OemToAnsi(STR0061) OF oDlg PIXEL	//"Onde Pesquisar"

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carregar os Alias em SX2                                               ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	If Empty( aListAlias )
		fSeleArq( "" 			,;	// utilizado na janela (nesta opcao estara desativado)
				 .T. 			,;	// se carrega um item em branco
				 @aSvListAlias	,;	// array com os Alias
				 .F.			,;	// se mostra janela com os alias
				)					// funcao em GpexFun

		aAdd( aListAlias, "" )
		For nX := 1 To Len( aSvListAlias )
			If !Empty( AllTrim(aSvListAlias[nX, 1]) )
			    aAdd( aListAlias, aSvListAlias[nX, 1] + "=" + aSvListAlias[nX, 2] + "  (" + aSvListAlias[nX, 1] + ")" )
			EndIf
		Next nX
	EndIf

	@ aRetcoords[5][1]+10,aRetcoords[5][2]+10 SAY OemToAnsi( STR0062 ) SIZE 080,10 OF oDlg PIXEL	//"Tabela"
	@ aRetcoords[6][1]+10,aRetcoords[6][2]+10 MsComboBox oTables Var cTables ITEMS aListAlias VALID ( fGetCampos(cTables, @aLbxFields, oBtnFastFil, aFieldsSel), oLbxFields:Refresh()) SIZE 100,10 OF oDlg PIXEL

	@ aRetcoords[7][1]+10,aRetcoords[7][2]+10 SAY OemToAnsi( STR0063 ) SIZE 080,10 OF oDlg PIXEL	//"Campos"

	@ aRetcoords[8][1]+10,aRetcoords[8][2]+10 LISTBOX oLbxFields VAR cLbxFields FIELDS HEADER "", OemtoAnsi(STR0063); //"Campos"
		ON DBLCLICK ( fSelLbFields(oLbxFields:nAt, @aLbxFields) ) ;
		SIZE 125,84 OF oDlg PIXEL

	oLbxFields:SetArray(aLbxFields)
	oLbxFields:LHSCROLL := .F.
	oLbxFields:LVSCROLL := .T.
	oLbxFields:nFreeze  := 1
	oLbxFields:bLine    := { || {If(aLbxFields[oLbxFields:nAt,1],oOk,oNo),aLbxFields[oLbxFields:nAt,2]}}
  	oLbxFields:nAt      := Max(1,1)
	oLbxFields:nRowPos  := 1
	oLbxFields:Refresh()

  	@ aRetcoords[9][1]+5,aRetcoords[9][2]+10 TO 145,185 LABEL OemToAnsi(STR0064) OF oDlg PIXEL	//"Filtros"
	@ aRetcoords[9][1]+15,aRetcoords[9][2]+20 GET oMemoEdit VAR cMemoEdit MEMO SIZE 145,48 HSCROLL CENTERED DESIGN NO VSCROLL OF oDlg PIXEL WHEN ( .T. )
	oMemoEdit:lReadOnly := .T.

	bFastFilter 	:= { || GpFltBldExp( cTables, NIL , @cExpFiltro , NIL ), cMemoEdit := cExpFiltro, oMemoEdit:Refresh() }
   	@ aRetcoords[23][1]+7,aRetcoords[23][2]-35 BUTTON oBtnFastFil PROMPT OemToAnsi(STR0065) SIZE 040,012 DESIGN ACTION Eval(bFastFilter) OF oDlg PIXEL
	oBtnFastFil:lActive	:= .F.

	bPesquisar 	:= { || If(oFolders:nOption = 1, MsAguarde( { || fPesqTab(cTexto, cTables, aLbxFields, cExpFiltro, @oFolders) } ,  STR0072 ), .T. ) }
	bPrint		:= { || GpPrintPesq(cTables, cTitulo, cTexto) }

   	@ aRetcoords[31][1],aRetcoords[31][2]+50 BUTTON oBtnImpr PROMPT OemToAnsi(STR0073) SIZE 040,012 DESIGN ACTION Eval(bPrint) OF oDlg PIXEL
 	@ aRetcoords[32][1],aRetcoords[32][2]+70 BUTTON oBtnPesq PROMPT OemToAnsi(STR0067) SIZE 040,012 DESIGN ACTION Eval(bPesquisar) OF oDlg PIXEL
 	oBtnImpr:lActive := .F.

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carregar o Campos da Tabela Pre-Selecionada                            ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	If !Empty(cTables)

		fGetCampos(cTables, @aLbxFields, oBtnFastFil, aFieldsSel )
	EndIf

End Sequence

Return

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³fGetCampos	  ³Autor³ Mauricio T. Takakura³ Data ³09/01/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Retornar array com os campos da tabela selecionada          ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fGetCampos()		     									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais> 									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generico      												³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function fGetCampos(cTable, aLbxFields, oBtnFastFil, aFieldsSel)

Local lActive

Local nY
Local nPos

If (AllTrim(cTable) == "RC3")
	aFieldsSel := {"RC3_RESULT","RC3_FORM01","RC3_FORM02" }
EndIf

nPos := aScan( aTabCampos, { |x| x[1] == cTable } )
If nPos == 0
	aCampos := GdAllFields( cTable,, .F. )
	aAdd( aTabCampos, { cTable, aCampos } )
Else
	aCampos := aClone( aTabCampos[ nPos, 2] )
EndIf

aLbxFields := {}
For nY := 1 To Len( aCampos )
	lActive := aScan( aFieldsSel, { |x| x == aCampos[nY, 02] } ) > 0
	aAdd( aLbxFields, { lActive, aCampos[nY, 01] + " - " + aCampos[nY, 02], aCampos[nY, 02] } ) // Titulo
Next nY

oLbxFields:SetArray(aLbxFields)
oLbxFields:bLine    := { || {If(aLbxFields[oLbxFields:nAt,1],oOk,oNo),aLbxFields[oLbxFields:nAt,2]}}

If !Empty(cTable)
	oBtnFastFil:lActive	:= .T.
Else
	oBtnFastFil:lActive	:= .F.
EndIf

Return( .T. )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³fSelLbFields  ³Autor³ Mauricio T. Takakura³ Data ³17/01/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Marca e Desmarca Itens da ListBox                           ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fSelLbFields(nAt,aArray)   									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais> 									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generico      												³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function fSelLbFields(nAt,aArray)

aArray[nAt,1]   := If(aArray[nAt,1], .F., .T.)

Return aArray

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³fPesqTab      ³Autor³ Mauricio T. Takakura³ Data ³17/01/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Realizar a Pesquisa das Informacoes                         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³                           									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais> 									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generico      												³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function fPesqTab(cString	,;		// String a Ser pesquisada
						 cTables	,;		// Nome da Tabela a Pesquisar
						 aLbxFields	,;		// Lista de Campos a Pesquisar
						 cExpFiltro	,;		// Expressao de Filtro
						 oFolders	 ;		// Objeto da Folder
						)

Local aCols		:= {}
Local aSvCols	:= {}
Local aHeader	:= {}
Local aSvHeader	:= {}
Local aVirtual	:= {}
Local aPesqCols := {}
Local aSvPesqCols:={}
Local aHdrPesq	:= {}
Local aColsTrf	:= {}
Local aIndex	:= {}
Local aItens	:= {}

Local bFiltraBrw

Local cFilter
Local cLogExit	:= ""

Local lSelField
Local lAddItem

Local nX
Local nY
Local nPos
Local nCampos
Local nPosGhost
Local nOcor			:= 0

Local oGrpGet1
Local oGrpGet2

Local uValue

Local aRetcoords   := RetCoords(1,2,40,80,,,,10)
DEFAULT cTables	   := ""
DEFAULT cExpFiltro := ""

oGetPesq	:= NIL
oGetItens	:= NIL

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Filtrar somente os campos Selecionados                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	For nX := 1 To Len( aLbxFields )
		If lSelField := aLbxFields[nX, 1]
			Exit
		EndIf
	Next nX

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Validacao dos Parametros                                     ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If Empty( cTables ) .Or. !lSelField
		cLogExit += OemToAnsi( STR0068 ) + CRLF + CRLF	// "Verifique se foi selecionado a Tabela ou os Campos!"
	EndIf

	If Len( AllTrim(cString) ) < 4 .AND. cTables != "SRM"
		cLogExit += OemToAnsi( STR0069 )				// "Texto para Pesquisa menor que 5 caracteres!"
	EndIf

	If !Empty(cLogExit)
		Help(' ',1,"PESQTAB",,cLogExit,1,0)
		Break
	EndIf

	aSvHeader := GdMontaHeader( 	NIL 			,;	//01 -> Por Referencia contera o numero de campos em Uso
		  						 	@aVirtual		,;	//02 -> Por Referencia contera os Campos do Cabecalho da GetDados que sao Virtuais
									NIL				,;	//03 -> Por Referencia contera os Campos do Cabecalho da GetDados que sao Visuais
									cTables			,;	//04 -> Opcional, Alias do Arquivo Para Montagem do aHeader
									NIL    		,;	//05 -> Opcional, Campos que nao Deverao constar no aHeader
									NIL       		,;	//06 -> Opcional, Carregar Todos os Campos
									NIL         	,;	//07 -> Nao Carrega os Campos Virtuais
									.T. 			,;	//08 -> Carregar Coluna Fantasma e/ou BitMap ( Logico ou Array )
									NIL				,;	//09 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
									NIL				 ;	//10 -> Verifica se Deve Checar se o campo eh usado
							   )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Extrair os campos Virtuais, exceto o campo Ghost             ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	For nX := 1 To Len( aSvHeader )
		cCampo := aSvHeader[nX, 2]
		If aScan( aVirtual, { |x| x ==  cCampo } ) == 0 .Or. cCampo == "GHOSTCOL"
			aAdd( aHeader, aClone( aSvHeader[ nX ] ) )
		EndIf
	Next nX

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Filtrar somente os campos Selecionados                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	For nX := 1 To Len( aLbxFields )
		If aLbxFields[nX, 1]
			nPos := aScan( aHeader, { |x| x[2] ==  aLbxFields[nX, 3] } )
			If nPos > 0
				aAdd( aHdrPesq, aClone( aHeader[ nPos ] ) )
			EndIf
		EndIf
	Next nX

	nPos := aScan( aHeader, { |x| x[2] == "GHOSTCOL" } )
	aAdd( aHdrPesq, aClone( aHeader[ nPos ] ) )
	aHdrPesq[ Len(aHdrPesq), 1 ] := "Recno"


	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Ordena se for RC3 - 1Form + Oper + 2Form + Result            ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	 If  cTables $ "RC3" .and. MV_MODFOL == "2"
	 	fOrdRc3(@aHdrPesq,cTables)
	 	fOrdRc3(@aHeader,cTables)
	 EndIf


	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Filtro do Browse                                             ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	cFilter		:= ChkRh( FunName() , cTables , "1" )
	cFilter		+= IF(!Empty(cFilter), " .and. " + cExpFiltro , cExpFiltro )
	bFiltraBrw 	:= { || FilBrowse( cTables, @aIndex , @cFilter ) }
	Eval( bFiltraBrw )

	aSvPesqCols := GdRmkaCols(	aHdrPesq 		,;	//Array com a Estrutura para criacao do aCols
								.F.				,;	//Estado do Elemento de Delecao no aCols
								.T.				,;	//Se existe o Elemento de Delecao
								.F.				 ;	//Se deve carregar os inicializadores padroes
							)

	aSvCols		 := GdRmkaCols(	aHeader 		,;	//Array com a Estrutura para criacao do aCols
								.F.				,;	//Estado do Elemento de Delecao no aCols
								.T.				,;	//Se existe o Elemento de Delecao
								.F.				 ;	//Se deve carregar os inicializadores padroes
							)

	DbSelectArea( cTables )
	DbGoTop()
	nCampos := Len( aHdrPesq )
	While !Eof()
		lAddItem := .T.
		For nX := 1 To nCampos
			cCampo := aHdrPesq[nX, 2]

			If cCampo <> "GHOSTCOL"
				uValue :=  (cTables)->(&(cCampo))
				If ValType( uValue ) == "N"
					cValCampo := AllToChar(uValue,'9999999999.9999',.T.)
				Else
					cValCampo := AllToChar(uValue,NIL,.T.)
				EndIf

				If (lChBoxCS .and. AllTrim(cString) $ cValCampo) .Or. (!lChBoxCS .and. AllTrim(UPPER(cString)) $ UPPER(cValCampo))
					If lAddItem
						aAdd( aPesqCols, aClone( aSvPesqCols[1] ) )
						aAdd( aCols, aClone( aSvCols[1] ) )
						For nY := 1 To Len( aHeader )
							If aHeader[nY, 2] <> "GHOSTCOL"
								aCols[ Len(aCols), nY ] := (cTables)->(&(aHeader[nY, 2]))
							Else
								aCols[ Len(aCols), nY ] := Strzero( Recno(), 10 )
							EndIf
						Next nY
						aPesqCols[Len(aPesqCols), aScan( aHdrPesq, { |x| x[2] ==  "GHOSTCOL" } ) ] := Strzero( Recno(), 10 )

						lAddItem := .F.
					EndIf
					nPos := aScan( aHdrPesq, { |x| x[2] ==  cCampo } )
					aPesqCols[Len(aPesqCols),nPos] := uValue
					nOcor++
				EndIf
			EndIf
		Next nX
		DbSkip()
	EndDo

	If Empty( aPesqCols )
		aAdd( aPesqCols, aClone( aSvPesqCols[1] ) )
		aAdd( aCols, aClone( aSvCols[1] ) )
	EndIf
	aAdd( aColsTrf, aClone( aSvCols[1] ) )

	oFolders:nOption := 2
	oFolders:Refresh()

	nPosGhost := GdFieldPos( "GHOSTCOL" , aHdrPesq )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Criar as Getdados com os Resultados	                                ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	@ aRetcoords[1][1], aRetcoords[1][2] GROUP oGrpGet1 TO 80,353 LABEL ( OemToAnsi(STR0070) + ":" + Str( nOcor, 8) ) OF oFolders:aDialogs[ 02 ] PIXEL			// "Ocorrencia encontradas"
	oGetPesq	:= MsNewGetDados():New(aRetcoords[1][1]+10			,;  			// nTop
										aRetcoords[1][2]+10			,;				// nLelft
										70			,;				// nBottom
										343			,;				// nRright
										GD_UPDATE	,; 				// controle do que podera ser realizado na GetDado - nstyle
										NIL			,;				// funcao para validar a edicao da linha - ulinhaOK
										NIL			,;				// funcao para validar todos os registros da GetDados - uTudoOK
										NIL			,;				// cIniCPOS
										NIL			,;				// aAlter
										0			,;				// nfreeze
										99999		,;				// nMax
										NIL			,;				// cFieldOK
										NIL			,;				// usuperdel
										NIL			,;				// bloco com funcao para validar registros deletados (Gp400DelOk())
										oFolders:aDialogs[ 02 ],;	// objeto de dialogo - oWnd
									    aHdrPesq	,;				// Vetor com Header - AparHeader
									    aPesqCols	;				// Vetor com Colunas - AparCols
									  )

    // evento bChange - Efetuara a troca dos registros da tabela RCG para os turnos selecionados em RCF //
	oGetPesq:bChange := { || ;
								GpeaPesqTrf(	aCols	 		,;	//01 -> aCols com todas as informacoes
												aHeader			,;	//02 -> aHeader com todas as informacoes
												@oGetItens:aCols,;	//03 -> aCols para retornar com as informacoes do filtro
												oGetPesq:aCols[ oGetPesq:nAt, nPosGhost ] ;	//04 -> Chave de Pesquisa
											),;
								oGetItens:Refresh();
				  		}

	@ aRetcoords[2][1],aRetcoords[2][2] GROUP oGrpGet2 TO 160,353 LABEL OemToAnsi(STR0071) OF oFolders:aDialogs[ 02 ] PIXEL			// "Registro"
	oGetItens	:= MsNewGetDados():New( aRetcoords[2][1]+10			,;		  		// nT
									     aRetcoords[2][2]+10			,;				// nL
										 149		,;				// nB
										 343		,;				// nR
										 GD_UPDATE	,; 				// controle do que podera ser realizado na GetDado - nstyle
										 NIL		,;				// funcao para validar a edicao da linha - ulinhaOK
										 NIL		,;				// funcao para validar todas os registros da GetDados - uTudoOK
										 NIL		,;				// cIniCPOS
										 NIL		,;				// aAlter
										 0			,;				// nfreeze
										 99999		,;				// nMax
										 NIL		,;				// cFieldOK
										 NIL		,;				// usuperdel
										 NIL		,;				// udelOK
										 oFolders:aDialogs[ 02 ],;	// objeto de dialogo - oWnd
									     aHeader	,;				// Vetor com Header -  AparHeader
									     aColsTrf	 ; 				// Vetor com Colunas - AparCols
									   )

	Eval( oGetPesq:bChange )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Finalizando o Filtro                                                   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	EndFilBrw( cTables, @aIndex )

	aSvAllCols := aClone(aCols)

End Sequence

Return( .T. )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³GpeaPesqTrf		³Autor³Mauricio T. Takakura³ Data ³18/01/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Transfere Informacoes do aCols para o aColsAll               ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>     								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA400                                                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >						   			 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function GpeaPesqTrf(	aColsAll 		,;	//01 -> aCols com todas as informacoes
						aHeader			,;	//02 -> aHeader com todas as informacoes
						aCols	 		,;	//03 -> aCols para retornar com as informacoes do filtro
						cChave			 ;	//04 -> Chave de Pesquisa
					)
Local nX := 0

Local nPosGhost := GdFieldPos( "GHOSTCOL" , aHeader )

aCols := {}

For nX := 1 To Len( aColsAll )
	If aColsAll[ nX, nPosGhost ] == cChave
		aAdd( aCols, aColsAll[ nX ] )
	EndIf
Next nX

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³GpPrintPesq		³Autor³Mauricio T. Takakura³ Data ³19/01/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Imprimir os Itens Localizados                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>     								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Genericos                                                    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >						   			 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function GpPrintPesq(cTables, cTitulo, cString)

Local aItens	:= {}
Local aImpFields:= {}
Local aHeader	:= oGetItens:aHeader

Local cCampos	:= ""
Local MvParDef	:= ""

Local nX

Local wnrel

Private aReturn	:= { STR0076, 1,STR0077, 2, 2, 1,"",1 }	//"Zebrado"###"Administra‡„o"

Private nTamanho:= "G"

Begin Sequence

	If Type( "oGetItens" ) <> "O"
		Break
	EndIf

	For nX := 1 To Len( aCampos )
		If aScan( aHeader, { |x| x[2] == aCampos[nX, 02] } ) > 0
			MvParDef+=Left(aCampos[nX, 02], 10)+If( Len(Left(aCampos[nX, 02], 10)) = 10, "", Space(10-Len(Left(aCampos[nX, 02], 10))))
			aAdd( aItens, aCampos[nX, 01] )
		EndIf
	Next nX

	If !(f_Opcoes(@cCampos,OemToAnsi(STR0075),aItens,MvParDef,12,49,,10,15))	// "Selecione os Campos a Imprimir"
	  	Break
	EndIf

	For nX := 1 To Len( cCampos ) Step 10
		If Substr(cCampos, nX, 10) # "**********"
			aAdd( aImpFields, Substr(cCampos, nX, 10))
		EndIf
	Next nX

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Envia controle para a funcao SETPRINT                        ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	wnrel:="GPFIND"            //Nome Default do relatorio em Disco
	wnrel:=SetPrint(cTables,wnrel,NIL,@cTitulo,,,,.F.,,,nTamanho)

	If nLastKey = 27
		Break
	EndIf

	SetDefault(aReturn,cTables)

	RptStatus({|lEnd| GRPesqImp(@lEnd,wnRel,cTables,aImpFields,cString)},Capital(cTitulo))

End Sequence

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³GRPesqImp		³Autor³Mauricio T. Takakura³ Data ³20/01/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Imprimir os Itens Localizados                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>     								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Genericos                                                    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >						   			 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function GRPesqImp(lEnd,wnRel,cTables,aImpFields,cString)

Local aHeader	:= aClone( oGetItens:aHeader )
Local aCols	  	:= aClone( aSvAllCols )
Local aPosHdr	:= {}

Local cDesc
Local cCampo
Local cVarCabec := "WCabec"

Local nX
Local nY
Local nG
Local nTam
Local nSpace
Local nCol		:= 1
Local nInic		:= 1
Local nTotCab	:= 1		// Numero de Cabecalhos
Local nColMax	:= 220		// Tamanho de Colunas da Pagina
Local nMaxTam	:= 80		// Limite maximo para o tamanho de campo

Local uValue

Private Li		:= 0
Private Titulo	:= OemToAnsi( STR0058 ) + " " + cString	// "Texto Localizado: "
Private WCabec0 := 0

Begin Sequence

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Montagem do Cabecalho Dinamico                               ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	cVarCabec 	:= cVarCabec + StrZero(nTotCab,1)
	&cVarCabec 	:= ""
	aAdd( aPosHdr, {} )
	For nX := 1 To Len( aImpFields )
		cCampo	:= aImpFields[ nX ]   // Campo
		nPosHdr	:= aScan( aHeader, {|x| x[2] = AllTrim(cCampo) } )
		cDesc 	:= aHeader[ nPosHdr, 1 ]	// Titulo
		nTam  	:= If( aHeader[ nPosHdr, 4 ] > nMaxTam, nMaxTam, aHeader[ nPosHdr, 4 ] )  // Tamanho
		If Len(&cVarCabec)+(If(Len(cDesc) > nTam, Len(cDesc), nTam))  > nColMax
			nTotCab++
        	cVarCabec := Left(cVarCabec, Len(cVarCabec)-1) + StrZero(nTotCab,1)
        	If Mod( nTotCab, 2 ) > 0
        		&cVarCabec 	:= ""
        	Else
        		&cVarCabec 	:= "    "
        	EndIf
        	aAdd( aPosHdr, {} )
		EndIf
		nSpace := If(Len(cDesc) >= nTam, 2, nTam - Len(cDesc))
		nInic  := Len( &cVarCabec )+1
		&cVarCabec += cDesc + Space( nSpace )
		aAdd( aPosHdr[Len(aPosHdr)], { cCampo, nTam, nInic } )
	Next nX
	WCabec0 := nTotCab

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Impressao dos Itens                                          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	For nX := 1 To Len( aCols )
		For nY := 1 To Len(aPosHdr)
        	If Mod( nY, 2 ) > 0
				DET := ""
        	Else
        		DET := "    "
        	EndIf
			For nG := 1 To Len(aPosHdr[nY])
				cCampo 	:= aPosHdr[nY,nG,1]
				nPosHdr := aScan( aHeader, {|x| x[2] = AllTrim(cCampo) } )
				uValue  := aCols[ nX, nPosHdr]
				If ValType( uValue ) == "N"
					cValCampo := AllToChar(uValue,aHeader[nPosHdr,3],.T.)
				Else
					cValCampo := AllToChar(uValue,NIL,.T.)
				EndIf
				If aPosHdr[nY,nG,3] > Len( DET )
					nSpace := (aPosHdr[nY,nG,3] - Len( DET ))-1
				Else
					nSpace := 0
				EndIf
				DET +=  If( nSpace > 0, Space(nSpace), "") + Substr( cValCampo, 1, aPosHdr[nY,nG,2])
			Next nG
			IMPR(DET, "C")
		Next nY
		IMPR("", "C")
	Next nX

End Sequence

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Termino do relatorio  - Gerar Rodape no final da Impressao   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Impr("","F")
Set Device To Screen
If aReturn[5] = 1
	Set Printer To
	Commit
	ourspool(wnrel)
EndIf
MS_FLUSH()

Return( .T. )
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ fOrdRc3		³Autor³  Raquel Hager     ³ Data ³02/04/2012³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Ordena aHeader de pesquisa quando for a tabela RC3.         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA300                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³     														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Function fOrdRc3(aHdr,cTables)
Local nPos1, nPos2, nPos3, nPos4,nPos5
Local aPos := {}
Local aVal := {}
Local aPosDisp := {}
Local aHdrCopy := AClone(aHdr)
Local nX

nPos1:= aScan( aHdr, { |x| Alltrim(x[2]) ==  "RC3_FORM01" } )
nPos2:= aScan( aHdr, { |x| Alltrim(x[2]) ==  "RC3_OPERA1" } )
nPos3:= aScan( aHdr, { |x| Alltrim(x[2]) ==  "RC3_FORM02" } )
nPos4:= aScan( aHdr, { |x| Alltrim(x[2]) ==  "RC3_OPERA2" } )
nPos5:= aScan( aHdr, { |x| Alltrim(x[2]) ==  "RC3_RESULT" } )
Aadd(aPos,{nPos1,nPos2,nPos3,nPos4,nPos5})

// Ira realizar ordenacao/alteracao de aheader apenas se forem selecionados os campos acima
If (cTables $ "RC3")
	For nX := 1 to Len(aPos[1])
		If aPos[1][nX] <> 0
			Aadd(aVal,aPos[1][nX])
			Aadd(aPosDisp,aPos[1][nX])
		EndIf
	Next

	ASort(aVal)

	For nX := 1 to Len(aVal)
		ACopy(aHdrCopy[aPosDisp[nX]], aHdr[aVal[nX]]) // Origem, Destino
	Next
EndIf

Return nil

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³RcaConteuVld ³Autor³Marinaldo de Jesus		³Data³27/11/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validar o Conteudo do Campo RCA_CONTEU                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³RcaConteuVld()									            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_VALID para o campo RCA_CONTEU							³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function RcaConteuVld()

Local lRcaConteuVld := .T.

Local cType
Local uChk

Begin Sequence

	cType	:= GetMemVar( "RCA_TIPO" )
	If !( cType $ "U/O/R/P/F" )
		uChk := GetMemVar( "RCA_CONTEU" )
		CheckExecForm( @uChk , .T. )
		If !( lRcaConteuVld := ( ValType( uChk ) == cType ) )
			MsgInfo( OemToAnsi( STR0024 ) )
		EndIf
	EndIf

End Sequence

Return( lRcaConteuVld )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³RcaMnemonVld ³Autor³Marinaldo de Jesus		³Data³27/11/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validar o Conteudo do Campo RCA_MNEMON                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³RcaMnemonVld()									            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_VALID para o campo RCA_MNEMON							³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function RcaMnemonVld()

Local lRcaMnemonVld := .T.

Local cRcaMnemon	:= Alltrim(GetMemVar( "RCA_MNEMON" ))
Local cMsgHelp

Begin Sequence

	If !( lRcaMnemonVld := NaoVazio() )
		Break
	EndIf

	If (cPaisloc == "MEX") .and. !(MV_MODFOL == "1") .and. (len(cRcaMnemon) > 10)
		lRcaMnemonVld := .F.
		cMsgHelp := STR0086 + CRLF	//"O codigo do mnemonico não pode "
		cMsgHelp += STR0087	        //"conter mais de 10 caracteres."
		Help( "" , 1 , "CODMNEMNINV" , NIL , OemToAnsi( cMsgHelp ) , 1 , 0 )
		Break
	EndIf

	If LEFT(cRcaMnemon,2) <> 'M_' .And. !lManutRCA						//Garantindo que o Mnemonico incluido comece por M_ se nao for manutencao
		cRcaMnemon :='M_'+cRcaMnemon
	EndIf

	If !( lRcaMnemonVld := ExistChav( "RCA" , cRcaMnemon , RetOrdem( "RCA" , "RCA_FILIAL+RCA_MNEMON" ) ) )
		Break
	EndIf

	cRcaMnemon := Upper( AllTrim( cRcaMnemon ) )

	If !( lRcaMnemonVld := ChkAddVar( cRcaMnemon ) )
		cMsgHelp := STR0049	//"Nao é possível incluir Mnemonico pois já"
		cMsgHelp += CRLF
		cMsgHelp += STR0050	//existe função, variável, Mnemonico   ou"
		cMsgHelp += CRLF
		cMsgHelp += STR0051	//Alias ( Tabela )  com  o  mesmo nome do"
		cMsgHelp += CRLF
		cMsgHelp += STR0052	//"Mnemonico informado. Ou o Primeiro Cara"
		cMsgHelp += CRLF
		cMsgHelp += STR0053	//"cter do Mnemonico é inválido ou existem"
		cMsgHelp += CRLF
		cMsgHelp += STR0054	//"caracteres inválidos no Mnemonico."
		Help( "" , 1 , "NOADDMNEMN" , NIL , OemToAnsi( cMsgHelp ) , 1 , 0 )
		Break
	EndIf

	If !( lRcaTipoVld := FreeForUse( "RCA" , cRcaMnemon ) )
		Break
	EndIf

	cRcaMnemon := Padr( cRcaMnemon , GetSx3Cache( "RCA_MNEMON" , "X3_TAMANHO" ) )
	SetMemVar( "RCA_MNEMON" , cRcaMnemon )

End Sequence

Return( lRcaMnemonVld )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³RcaDescVld 	 ³Autor³Marinaldo de Jesus		³Data³27/11/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validar o Conteudo do Campo RCA_DESC                        ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³RcaDescVld()									            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_VALID para o campo RCA_DESC								³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function RcaDescVld()

Local lRcaDescVld := .T.

Begin Sequence

	If !( lRcaDescVld := NaoVazio() )
		Break
	EndIf

End Sequence

Return( lRcaDescVld )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³RcaTipoVld³Autor³Marinaldo de Jesus 		³Data³16/11/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Valid Para o Campo RCA_TIPO                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³RcaTipoVld()									            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_VALID para o campo RCA_TIPO								³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function RcaTipoVld()

Local cTypeVar 	  := GetMemVar( "RCA_TIPO" )

Local lRcaTipoVld := .T.

Begin Sequence

	If !( lRcaTipoVld := !Empty(cTypeVar) )
		Break
	EndIf

	If !( lRcaTipoVld := cTypeVar $ RcaTipoBox( .T. ) )
		Break
	EndIf


	If !(cTypeVar $ ("R/P"))
		SetMemVar( "RCA_CONTEU" , Padr( 'GetValType("' + cTypeVar + '")' , GetSx3Cache( "RCA_CONTEU" , "X3_TAMANHO" ) ) )
		If MV_MODFOL == "2"
			If !(cTypeVar == "F")
				SetMemVar( "RCA_ALIAS" , "" , GetSx3Cache( "RCA_CONTEU" , "X3_TAMANHO" ) )
				SetMemVar( "RCA_CAMPO" , "" , GetSx3Cache( "RCA_CONTEU" , "X3_TAMANHO" ) )
			EndIf
		EndIf
	Else
		//"Nao e permitido a inclusao ou alteracao de mnemónicos do tipo Reservado e Operadores."
		MsgInfo( OemToAnsi( STR0082 ) )
		lRcaTipoVld := .F.
	EndIf

End Sequence

Return(lRcaTipoVld)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³RcaAcumulVld ³Autor³Marinaldo de Jesus		³Data³27/11/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validar o Conteudo do Campo RCA_ACUMUL                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³RcaAcumulVld()									            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_VALID para o campo RCA_ACUMUL							³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function RcaAcumulVld()

Local lRcaAcumulVld := .T.

Begin Sequence

	If MV_MODFOL == "1"
		If !( lRcaAcumulVld := NaoVazio() )
			Break
		EndIf

		If !( lRcaAcumulVld := Pertence( RcaAcumulBox( .T. ) ) )
			Break
		EndIf
	EndIf

End Sequence

Return( lRcaAcumulVld )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³RcaAliasVld³ Autor ³ Tatiane Matias      ³ Data ³ 05/11/07  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validar o Conteudo do Campo RCA_ALIAS                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ RcaAliasVld()  										      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function RcaAliasVld()
Local lRcaAliasVld := .T.

If M->RCA_TIPO == "F"
	If !( lRcaAliasVld := NaoVazio() )
		Return lRcaAliasVld
	EndIf
EndIf

Return lRcaAliasVld

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³fListaField³ Autor ³ Tatiane Matias        ³ Data ³ 01/11/07³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Selecionar os campos conforme tabela                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fListaField()											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fListaField()

Local cTabela := If( Empty(M->RCA_ALIAS), Alias(), M->RCA_ALIAS)

Local MvPar
Local cTitulo  := STR0063
Local MvParDef := ""
Local cCampos  := ""
Local cItem    := ""
Local aCampos  := {}
Local i
Local aMvParDef:= {}

If !Empty(cTabela)
	cAlias := Alias() 				// Salva Alias Anterior
	MvPar  := M->RCA_CAMPO	        // Carrega Nome da Variavel do Get em Questao
	MvRet  := "M->RCA_CAMPO"		// Iguala Nome da Variavel ao Nome variavel de Retorno

	cCampos := fTablesBox(2, cTabela)
	While Len(cCampos) > 0
		cItem := if(at(";",cCampos)==0, cCampos, substr(cCampos,1,at(";",cCampos)-1))
		If 	(SUBSTRING(cItem,1,6) # 'R3_SEQ') .AND. (SUBSTRING(cItem,1,7) # 'R3_TIPO')  ;
			.AND. (SUBSTRING(cItem,1,11) # 'R7_DESCCAR') ;
			.AND. (SUBSTRING(cItem,1,11) # 'R7_SEQ')

			Aadd(aCampos, cItem)
			Aadd(aMvParDef,substr(cItem,1,at("=",cItem)-1))
		EndIf
		cCampos := If(at(";",cCampos)==0, "", SubStr(cCampos, at(";",cCampos)+1))
	End While

	If Len(aCampos) > 0
		aSort(aCampos)
		aSort(aMvParDef)
		For i := 1 to Len(aMvParDef)
			MvParDef += aMvParDef[i]
		Next
	EndIf

	If f_Opcoes(@MvPar,cTitulo,aCampos,MvParDef,,,.T., 10)  // Chama funcao f_Opcoes
		&MvRet := mvpar  // Devolve Resultado
	EndIf

	dbSelectArea(cAlias) // Retorna Alias

EndIf

Return(.T.)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Gpea300Ger	  ³Autor³ Marinaldo de Jesus  ³ Data ³18/11/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Chamar Programa Gerador de Programa de Mnemonicos Padrao    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Gpea300Ger()	          									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais> 									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generico      												³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Gpea300Ger()
Return( MsAguarde( { || GpexMnemo() } ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³GpexMnemo	  ³Autor³ Mauricio T. Takakura³ Data ³11/11/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Gerar o Programa de Mnemonico                               ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³GpexMnemo              										³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais> 									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso	   ³Generico      												³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function GpexMnemo()

Local cTiposMne		:= {}				// Tipos de Mnemonicos - Vinculado ao Combo
Local aLinesProg 	:= {}				// array com as linhas dos programas
Local aLinesFunc 	:= {}			 	// array com as linhas das funcoes dos itens RCA
Local aIniHdrRCA						// cabecalho da tabela RCA com os campos
Local aRCAVirtual						// campos virtuais de RCA
Local aRCAMemo		:= {}				// campos memos da tabela RCA

Local cPath 		:= ""				// Path a gravar o arquivo
Local cArquivo 		:= ""			 	// nome do arquivo a ser gerado
Local cNameFunc							// nome da funcao
Local cMsg								// mensagem de erro na geracao do arquivo PRX
Local cProg								// string a ser enviado ao arquivo PRX
Local cTexto							// valor do campo do Header
Local cTipoMne							// Tipo do Mnemonico
Local cValueCampo						// montagem da string a ser enviado ao array
Local cTipoNot		:= ""				// Tipo que nao cadastrado na tela do Box
Local cTipoTexto    := ""
Local cTela			:= "" 				// Controle do tipo do modelo da folha

Local lSetCentury	:= __SetCentury("on")

Local nUsado							// campos utilizados
Local nPosMemo							// posicao do campo memo virtual
Local nLineMemo							// numero de linhas existentes no campo memo
Local nArq								// situacao do arquivo
Local nX
Local nY

cTiposMne    := RcaTipoBox(.T.)
cArquivo 	:= ( "GPMNE" + cPaisLoc + ".PRX" )

aIniHdrRCA	:= RCA->( GdMontaHeader( @nUsado, @aRCAVirtual, NIL, NIL, NIL, .T.,.T.,,,,,,,.F. ) )

Begin Sequence
			  								       // mostra drives   mostra hard disk retorna diretorio
	cPath := cGetFile("",OemToAnsi(STR0028),0,,.F.,GETF_LOCALHARD + GETF_RETDIRECTORY,,) //"Selecione o Diretorio"
	If Empty(cPath)
		Break
	EndIf

	cArquivo := cPath + cArquivo

	If File(cArquivo)
		If !(MsgYesNo( OemToAnsi( STR0029 ),;	// "O Arquivo ja Existe !! Deseja Sobrescrever?"
 		 			   OemToAnsi( STR0013 ) ;	//"Aten‡„o"
					))
			Break
		EndIf
	EndIf

	nArq := MSFCREATE(cArquivo, 0)
	If Ferror() # 0 .And. nArq = -1
		cMsg := STR0030 + STR(Ferror(),3) //-- "Erro de Gravacao do Arquivo - Codigo DOS: "
		MsgInfo( cMsg, STR0013 )
		Return(.F.)
	EndIf

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Cabecalho da funcao                                          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd(aLinesProg, '#INCLUDE "PROTHEUS.CH"' + CRLF + CRLF)
	aAdd(aLinesProg, "/*/" + CRLF)
	aAdd(aLinesProg, "ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿" + CRLF)
	aAdd(aLinesProg, "³Fun‡…o    ³GpMne" + cPaisLoc + "      " + "³Autor³ Gerado pelo sistema ³ Data ³" + Substr(DtoS(date()),7,2)+"/"+Substr(DtoS(date()),5,2)+"/"+Substr(DtoS(date()),1,4) + "³" + CRLF)
	aAdd(aLinesProg, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
	aAdd(aLinesProg, "³Descri‡…o ³Mnemonicos padroes                                          ³" + CRLF)
	aAdd(aLinesProg, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
	aAdd(aLinesProg, "³Sintaxe   ³                                                            ³" + CRLF)
	aAdd(aLinesProg, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
	aAdd(aLinesProg, "³Parametros³<Vide Parametros Formais>                                   ³" + CRLF)
	aAdd(aLinesProg, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
	aAdd(aLinesProg, "³ Uso      ³Generico                                                    ³" + CRLF)
	aAdd(aLinesProg, "ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/" + CRLF)
	aAdd(aLinesProg, "Function GpMne" + cPaisLoc + "( aMnemo, aRCAHeader )" + CRLF)
	aAdd(aLinesProg, "Local aItensRCA		:= {}" + CRLF)
	aAdd(aLinesProg, "Local nPosMnemo 	:= 0" + CRLF)
	aAdd(aLinesProg, 'Local lRet	  		:= .T.' + CRLF + CRLF)

	aAdd(aLinesProg, "DEFAULT aMnemo 		:= {}" + CRLF)
	aAdd(aLinesProg, "DEFAULT aRCAHeader	:= {}" + CRLF + CRLF)

	aAdd(aLinesProg, "/*/" + CRLF)
	aAdd(aLinesProg, "ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿" + CRLF)
	aAdd(aLinesProg, "³ Cabecalho de RCA                                             ³" + CRLF)
	aAdd(aLinesProg, "ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/" + CRLF)

	For nX := 1 To Len(aIniHdrRCA)
		cProg      := ""
		cTipoTexto := ""
		For nY := 1 To Len(aIniHdrRCA[nX])
			If "_FILIAL" $ aIniHdrRCA[nX][2] .AND. nY == __AHEADER_WIDTH__    // Tratamento para Gestão Corporativa.
				cTexto := ""
			Else
				cTexto := If(ValType(aIniHdrRCA[nX,nY]) == "N", AllTrim(Str(aIniHdrRCA[nX,nY])),;
							   	If(ValType(aIniHdrRCA[nX,nY])=="L", Transform(aIniHdrRCA[nX, nY],"@!"),;
							   	   aIniHdrRCA[nX, nY]))
			EndIf
			cTexto := StrTran(cTexto, "'", '"')
			cProg += "'" + cTexto + "'"
			If nY < Len(aIniHdrRCA[nX])
				cProg += ","
			EndIf

			If aIniHdrRCA[nX][2] == "RCA_TIPO"
				if nY == 11
					cTipoTexto += "'" + StrTran( RcaTipoBox( .F. , .F. , NIL, MV_MODFOL ), "'", '"') + "'"
				else
					cTipoTexto += "'" + cTexto + "'"
				endif
				If nY < Len(aIniHdrRCA[nX])
					cTipoTexto += ","
				EndIf
			endif
		Next nY

		If !Empty(cProg)
			If !Empty(cTipoTexto)
				If !Empty(cTipoTexto)
					aAdd(aLinesProg, "aAdd(aRCAHeader, " + '{ ' + cTipoTexto + ' })' + CRLF )
				Else
					aAdd(aLinesProg, "aAdd(aRCAHeader, " + '{ ' + cProg + ' })' + CRLF)
				EndIf
			else
				aAdd(aLinesProg, "aAdd(aRCAHeader, " + '{ ' + cProg + ' })' + CRLF)
            endif
		EndIf
	Next nX
	aAdd(aLinesProg, CRLF)

	aAdd(aLinesProg, "/*/" + CRLF)
	aAdd(aLinesProg, "ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿" + CRLF)
	aAdd(aLinesProg, "³ Validar a Estrutura das Tabela RCA                            ³" + CRLF)
	aAdd(aLinesProg, "ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/" + CRLF)
	aAdd(aLinesProg, 'lRet := fNewOldSx3(aRCAHeader, NIL, "RCA", NIL, .F.)' + CRLF + CRLF)

	aAdd(aLinesProg, 'If lRet' + CRLF)

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Itens do Mnemonico                                           ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		RCA->( dbSetOrder( RetOrdem( "RCA" , "RCA_FILIAL+RCA_TIPO+RCA_MNEMON" ) ) )
		RCA->(dbGoTop())

		aAdd(aLinesProg, '		If MV_MODFOL == "2"' + CRLF)
		aAdd(aLinesProg, '			GpexOper(aMnemo)' + CRLF)
		aAdd(aLinesProg, '		EndIf' + CRLF)

		While RCA->(!Eof())
			// Filtrar os Mnemonicos de Usuario.
			If ( Left(RCA->RCA_MNEMON,2) == "M_" ) .OR. RCA->RCA_TIPO $ ("P/R")
			 	dbSkip()
				Loop
			EndIf

			If ( cTipoMne != RCA->RCA_TIPO ) .and. !(RCA->RCA_TIPO $ ("P/R"))

				If !(RCA->RCA_TIPO $ cTiposMne)
					If !Empty(cTipoNot)
						cTipoNot += ", "
					EndIf
			   		cTipoNot += RCA->RCA_TIPO
				EndIf

				// Gerar as chamadas para as funcoes //
				cNameFunc := RCA->RCA_TIPO + 'Mnem(aMnemo)'

				//Mnemonicos do tipo A,B,O e U carregam somente se a folha for modelo 1, e tipo F carrega apenas no modelo 2
				If RCA->RCA_TIPO $ "A*B*O*U*F"
					aAdd(aLinesProg, If(RCA->RCA_TIPO=="F",'		If MV_MODFOL == "2"','		If MV_MODFOL == "1"') + CRLF)
					aAdd(aLinesProg, '			' + cNameFunc + CRLF)
					aAdd(aLinesProg, '		EndIf' + CRLF)
				Else
					aAdd(aLinesProg, '		' + cNameFunc + CRLF)
				EndIf

				aAdd(aLinesFunc, "/*/" + CRLF)
				aAdd(aLinesFunc, "ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿" + CRLF)
				aAdd(aLinesFunc, "³Fun‡…o    ³"+cNameFunc + "³Autor³ Gerado pelo sistema ³ Data ³" + Substr(DtoS(date()),7,2)+"/"+Substr(DtoS(date()),5,2)+"/"+Substr(DtoS(date()),1,4) + "³" + CRLF)
				aAdd(aLinesFunc, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
				aAdd(aLinesFunc, "³Descri‡…o ³Mnemonicos padroes da tabela RCA                            ³" + CRLF)
				aAdd(aLinesFunc, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
				aAdd(aLinesFunc, "³Sintaxe   ³                                                            ³" + CRLF)
				aAdd(aLinesFunc, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
				aAdd(aLinesFunc, "³Parametros³<Vide Parametros Formais>                                   ³" + CRLF)
				aAdd(aLinesFunc, "ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´" + CRLF)
				aAdd(aLinesFunc, "³ Uso      ³Generico                                                    ³" + CRLF)
				aAdd(aLinesFunc, "ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/" + CRLF)
				aAdd(aLinesFunc, "Static Function " + cNameFunc + CRLF + CRLF)

				aAdd(aLinesFunc, "DEFAULT aMnemo := {}" + CRLF + CRLF)
			EndIf

			cProg := "aAdd(aMnemo, { "

			For nX := 1 To Len(aIniHdrRCA)
				cValueCampo := ""

				// campo memo normal //
				If aIniHdrRCA[nX,8] == "M" .and. (aScan(aRCAVirtual, aIniHdrRCA[nX,2]) == 0)
					nLineMemo := MlCount(aIniHdrRCA[nX,2], 80)

					For nY := 1 To nLineMemo
						cValueCampo += AllTrim(MemoLine(aIniHdrRCA[nX,2], 80, nY))
						If nY < nLineMemo
							cValueCampo += ' '
						EndIf
					Next nY

				// campo memo gravado em SYP - Virtual //
				ElseIf aIniHdrRCA[nX,8] == "M" .and. (aScan(aRCAVirtual, aIniHdrRCA[nX,2]) > 0)
					If ((nPosMemo := Ascan(aRCAMemo, { |x|  Upper(x[2]) == aIniHdrRCA[nX,2] })) > 0)
						cValueCampo += MSMM(&(RCA->(aRCAMemo[nPosMemo,1])),80)
						cValueCampo := StrTran(cValueCampo, CRLF, "\13\10")
					EndIf
				ElseIF ( aScan(aRCAVirtual, aIniHdrRCA[nX,2]) > 0 )
					cValueCampo += AllToChar( CriaVar( aIniHdrRCA[nX,2] ) )
				ElseIf aIniHdrRCA[nX,8] == "N"
					cValueCampo += AllTrim(Str(&(aIniHdrRCA[nX,2])))
				ElseIf aIniHdrRCA[nX,8] == "D"
					cValueCampo += 'Ctod("' + DtoC(&(aIniHdrRCA[nX,2])) + '")'
				ElseIf aIniHdrRCA[nX,8] == "L"
					If &(aIniHdrRCA[nX,2])
						cValueCampo += ".T."
					Else
						cValueCampo += ".F."
					EndIf
				ElseIf "FILIAL" $ aIniHdrRCA[nX,2]
					cValueCampo += ""
				Else
					cValueCampo += AllTrim(&(aIniHdrRCA[nX,2]))
				EndIf
				cValueCampo := StrTran(cValueCampo, "'", '"')

				If (aIniHdrRCA[nX,8] != "N") .and. (aIniHdrRCA[nX,8] != "D") .and. (aIniHdrRCA[nX,8] != "L")
					cValueCampo := "'" + cValueCampo
					cValueCampo += "'"
				EndIf

				cProg += cValueCampo
				If nX < Len(aIniHdrRCA)
					cProg += ","
				EndIf
			Next nX
			cProg += "} )"

			If !RCA->RCA_TIPO $ ("P/R")
				aAdd(aLinesFunc, cProg + CRLF)
			Endif

			cTipoMne := RCA->RCA_TIPO
			RCA->(dbSkip())

			If ( cTipoMne != RCA->RCA_TIPO )
				aAdd(aLinesFunc, CRLF)
				aAdd(aLinesFunc, 'Return( NIL )')

				If !RCA->( Eof() )
				 	aAdd(aLinesFunc, CRLF + CRLF)
				EndIf
			EndIf
		Enddo

	aAdd(aLinesProg, CRLF)
	aAdd(aLinesProg, '	nPosMnemo := GdFieldPos ( "RCA_MNEMON" , aRCAHeader )' + CRLF)
	aAdd(aLinesProg, '	aSort( aMnemo ,,, { |x, y| Upper( AllTrim( x[nPosMnemo] )  ) < Upper( AllTrim( y[nPosMnemo] ) ) } )' + CRLF + CRLF)
	aAdd(aLinesProg, 'EndIf' + CRLF + CRLF )
	aAdd(aLinesProg, 'Return( NIL )' + CRLF + CRLF )

	If !Empty(cTipoNot)
		MsgInfo( STR0031 + cTipoNot + CRLF + STR0032 + CRLF + CRLF + STR0035, STR0013 ) // "O(s) Tipo(s) de Mnemonicos " ### " nao esta(o) cadastrado(s) no ComboBox do Campo RCA_Tipo." "O Arquivo nao foi Gerado!"
	Else
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Transferir as linhas para dentro do programa                 ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	    For nX := 1 To Len(aLinesProg)
		    Fwrite( nArq, aLinesProg[nX] )
		Next nX

	    For nX := 1 To Len(aLinesFunc)
		    Fwrite( nArq, aLinesFunc[nX] )
		Next nX


		MsgInfo( STR0033 + cArquivo + CRLF + STR0034 ) // "O Programa " #### "para Cadastro de Mnemonicos Padroes foi Gerado com Sucesso"
	EndIf

	FClose(nArq)
End Sequence

If !( lSetCentury )
	__SetCentury("off")
EndIf

Return( NIL )