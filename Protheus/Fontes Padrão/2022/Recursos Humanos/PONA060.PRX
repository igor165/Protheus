#INCLUDE "PONA060.CH"
#INCLUDE "PROTHEUS.CH"


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PONA060  ³ Autor ³ Wiliam R. Bertoncini  ³ Data ³ 16/02/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cadastro de Regras de Apontamento                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PONA060()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Cecilia Car.³29/05/14³TPQAN3³Incluido o fonte da 11 para a 12 e efetua-³±±
±±³            ³        ³      ³da a limpeza.                             ³±±
±±³Sidney O.   ³30/07/14³TPWURF³Ajuste na mensagem de exclusao de regra   ³±±
±±³Wag Mobile  ³23/01/15³TREVTN³Correção na atualização quando houver  in-³±±
±±³            ³        ³      ³tegração com TSA                          ³±±
±±³Gabriel A.  ³02/02/15³TRH603³Adicionado o comando "VAR_IXB:=&cVar" na  ³±±
±±³            ³        ³      ³função SpaWhen() para que a variável      ³±±
±±³            ³        ³      ³"VAR_IXB" fosse retornada na consulta (F3)³±±
±±³            ³        ³      ³de alguns campos da tela de inclusão de   ³±±
±±³            ³        ³      ³regras de apontamento.                    ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function PONA060(aCab,nOpcAuto)

Local aArea			:= GetArea()
Local aIndexSPA		:= {}
Local aAdvSize		:= MsAdvSize()
Local cFiltraSPA	:= ""

DEFAULT aCab		:= {}
DEFAULT nOpcAuto	:= 0

Private lAutoExec	:= .F.
Private aAutoCab	:= aCab 

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³So Executa se o Modo de Acesso dos Arquivos do Ponto Estiverem³
³OK															   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
IF ValidArqPon()
	Private aRotina			:= MenuDef()
	
	Private bFiltraBrw		:= {|| Nil }	//Variavel para Filtro
	Private cCadastro		 := OemToAnsi(STR0009 ) // "Regras de Apontamento"
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	cFiltraRh := CHKRH("PONA060","SPA","1")
	bFiltraBrw 	:= {|| FilBrowse("SPA",@aIndexSPA,@cFiltraRH) }
	Eval(bFiltraBrw)
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Endereca a funcao de BROWSE                                  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	dbSelectArea ( "SPA" )
	dbGoTop()
	If nOpcAuto != 0 .And. Len(aAutoCab) > 0
		lAutoExec	:= .T.
		mBrowseAuto( nOpcAuto, aAutoCab, 'SPA', .T., .T. )
	Else
		mBrowse( aAdvSize[7] , 0 , aAdvSize[6] , aAdvSize[5] , "SPA" )
	EndIf
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Deleta o filtro utilizando a funcao FilBrowse                     	 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	EndFilBrw("SPA",aIndexSpa)

EndIF

RestArea( aArea )

Return( NIL )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³SpaWhen     ³ Autor ³Marinaldo de Jesus    ³ Data ³12/06/2001³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Verificar os Campos do SPA onde sera utilizada a fValidmarc()³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³SpaWhen()             			              			 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>                                               		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T.                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³X3_WHEN dos campos do SPA                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function SpaWhen()

Local cCpos	:= "M->PA_PAGHEXT*M->PA_PAGINT*M->PA_PGADNIN*M->PA_MARCAUT*M->PA_PGHEDNT*M->PA_ASSIN"
Local cVar	:= Upper( Alltrim( ReadVar() ) )
Local lRet	:= .T.

Static __cWhenLastVar__

DEFAULT __cWhenLastVar__ := "__cWhenLastVar__"

IF ( cVar $ cCpos )
	IF !( __cWhenLastVar__ == cVar )
		CposInitWhen()
	EndIF
	IF ( CposInitWhen( NIL , .T. ) )
		IF ( ( cVar == "M->PA_PAGINT" ) .or. ( cVar == "M->PA_PGADNIN" ) .or.  (cVar == "M->PA_ASSIN"))
			fValidMarc( NIL , "I" )
		ElseIF ( cVar == "M->PA_PGHEDNT" )
			ShowTipoDia( "CDFN" )
		Else
			fValidMarc()
		EndIF
		CposInitWhen( .F. )
	EndIF
Else
	CposInitWhen()
EndIF

VAR_IXB:=&cVar

__cWhenLastVar__ := cVar

Return( lRet )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona060ChkDel	³Autor³Marinaldo de Jesus ³ Data ³30/08/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Verificar se a Regra Pode ser Deletada  					³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Firmais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA100                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Firmais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Pona060ChkDel( cAlias , nReg , nOpcx )

Local aArea			:= GetArea()
Local aAreas		:= {}
Local cFilSPA		:= xFilial( "SPA" )
Local cRegra		:= SPA->PA_CODIGO
Local cMsgYesNo		:= ""
Local cTitLog		:= STR0018	//"Log de Ocorrencias na Exclusao de Regras do Ponto"
Local lDelOk		:= .T.
Local cAliasRJ8 	:= "RJ8"
Local lPona060Auto	:= Type("lAutoExec") == "L" .AND. lAutoExec
Local cStatRJ7		:= .F.
Local lCopiaTab     := ChkFile("RJ7") .And. ChkFile("RJ8")
Local nHoraInicio	:= 0

nHoraInicio := Seconds()

//SRA
aAdd( aAreas , Array( 03 ) )
nAreas := Len( aAreas )
aAreas[nAreas,01] := SRA->( GetArea() )
aAreas[nAreas,02] := Array( 2 )
				aAreas[nAreas,02,01] := "RA_FILIAL"
				aAreas[nAreas,02,02] := "RA_REGRA"
aAreas[nAreas,03] := RetOrdem( "SRA" , "RA_FILIAL+RA_REGRA" , .T. )

//SPF
aAdd( aAreas , Array( 03 ) )
nAreas := Len( aAreas )
aAreas[nAreas,01] := SPF->( GetArea() )
aAreas[nAreas,02] := Array( 2 )
				aAreas[nAreas,02,01] := "PF_FILIAL"
				aAreas[nAreas,02,02] := "PF_REGRADE"
aAreas[nAreas,03] := RetOrdem( "SPF" , "PF_FILIAL+PF_REGRADE" , .T. )

//SPF
aAdd( aAreas , Array( 03 ) )
nAreas := Len( aAreas )
aAreas[nAreas,01] := SPF->( GetArea() )
aAreas[nAreas,02] := Array( 2 )
				aAreas[nAreas,02,01] := "PF_FILIAL"
				aAreas[nAreas,02,02] := "PF_REGRAPA"
aAreas[nAreas,03] := RetOrdem( "SPF" , "PF_FILIAL+PF_REGRAPA" , .T. )

//SP2
aAdd( aAreas , Array( 03 ) )
nAreas := Len( aAreas )
aAreas[nAreas,01] := SP2->( GetArea() )
aAreas[nAreas,02] := Array( 2 )
				aAreas[nAreas,02,01] := "P2_FILIAL"
				aAreas[nAreas,02,02] := "P2_REGRA"
aAreas[nAreas,03] := RetOrdem( "SP2" , "P2_FILIAL+P2_REGRA" , .T. )

		cMsgYesNo	:= STR0010	//"O Sistema Agora Ira efetuar a Verifica‡„o para ver se a Regra Selecionado para" 
		cMsgYesNo	+= " "+STR0011	//"Exclus„o esta sendo utilizado. A verifica‡„o pode ser demorada !!"
		cMsgYesNo	+= CRLF
		cMsgYesNo	+= CRLF
		cMsgYesNo	+= STR0012	//"Confirma a exclus„o da Regra?"
		
		( cAlias )->( MsGoto( nReg ) )

		lDelOk := ChkDelRegs(	cAlias			,;	//01 -> Alias do Arquivo Principal
								nReg			,;	//02 -> Registro do Arquivo Principal
								nOpcx			,;	//03 -> Opcao para a AxDeleta
								cFilSPA			,;	//04 -> Filial do Arquivo principal para Delecao
								cRegra			,;	//05 -> Chave do Arquivo Principal para Delecao
								aAreas			,;	//06 -> Array contendo informacoes dos arquivos a serem pesquisados
								cMsgYesNo  		,;	//07 -> Mensagem para MsgYesNo
								cTitLog			,;	//08 -> Titulo do Log de Delecao
								NIL				,;	//09 -> Mensagem para o corpo do Log
								.T.				,;	//10 -> Se executa AxDeleta
								.T.				,;	//11 -> Se deve Mostrar o Log
								NIL				,;	//12 -> Array com o Log de Exclusao
								NIL				,;	//13 -> Array com o Titulo do Log
								NIL				,;	//14 -> Bloco para Posicionamento no Arquivo
								NIL				,;	//15 -> Bloco para a Condicao While
								NIL				,;	//16 -> Bloco para Skip/Loop no While
								NIL				,;  //17 -> Verifica os Relacionamentos no SX9
								NIL				,;  //18 -> Alias que nao deverao ser Verificados no SX9
								NIL     	    ,;  //19 -> Se faz uma checagem soft
								lPona060Auto     ;  //20 -> Se esta executando rotina automatica
							)
		
							
		 If !IsBlind() .And. lCopiaTab .And. lDelOk
			
			//Gera a chave para validação da filial na tabela RJ7
			//Chave composta por: Filial da RJ7 + Cód. da Tabela + Filial Logada(cadastro)
			cChave:= xFilial("RJ7")+"2"+cFilAnt
			cStatRJ7 := fVldRJ7(1,cChave)
			
			if cStatRJ7
				Begin Transaction
					
					Reclock( cAliasRJ8, .T. )
					( cAliasRJ8 )->RJ8_FILIAL  := xFilial( "RJ8" )
					( cAliasRJ8 )->RJ8_FILPAR  := ""
					( cAliasRJ8 )->RJ8_TABELA  := "2"
					( cAliasRJ8 )->RJ8_CONTEU  := xFilial("SPA") + SPA->PA_CODIGO
					( cAliasRJ8 )->RJ8_DATA    := Date()
					( cAliasRJ8 )->RJ8_HORA    := SecsToTime(nHoraInicio)
					( cAliasRJ8 )->RJ8_OPERAC  := "3"
					( cAliasRJ8 )->RJ8_USUARI  := UsrRetName(RetCodUsr())
					( cAliasRJ8 )->RJ8_STATUS  := "0"
					( cAliasRJ8 )->RJ8_ESOCIA  := "1"
					( cAliasRJ8 )->RJ8_MSGLOG  := OemToAnsi(STR0028) + SPA->PA_CODIGO //"EXCLUSAO DE REGRA DE APONTAMENTO COD: "
				
					( cAliasRJ8 )->( MsUnlock() )
					
				End Transaction
			Endif		
			
		EndIf
	    

RestArea( aArea )

Return( lDelOk )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ MenuDef		³Autor³  Luiz Almeida     ³ Data ³21/11/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Isola opcoes de menu para que as opcoes da rotina possam    ³
³          ³ser lidas pelas bibliotecas Framework da Versao 9.12 .      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA060                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/


Static Function MenuDef()

Local aRotina  := 	{;
									{ STR0004 , "PesqBrw"  		, 0 , 1, ,.F.},;	// "Pesquisar"
	                    			{ STR0005 , "AxVisual" 		, 0 , 2},;	// "Visualizar"
	                     			{ STR0006 , "Pona060Mnt" 	, 0 , 3},;	// "Incluir"
	                     			{ STR0007 , "Pona060Mnt" 	, 0 , 4},;	// "Alterar"
	                     			{ STR0008 , "Pona060ChkDel"	, 0 , 5};	// "Excluir"
	                   	 		} 
	                   	 		
Return aRotina        

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Pona060MntºAutor  ³ RH - Inovacao      º Data ³  22/07/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Rotina de Inclusão/Alteracao de Regra de Apontamento       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ PONA060                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Pona060Mnt(cAlias , nReg , nOpcx )
Local nOpca 	:= 0
Local lTSREP	:= SuperGetMv( "MV_TSREP" , NIL , .F. )
Local lOk		:= .F.
Local cAliasRJ8 := "RJ8"
Local lCopiaTab  := ChkFile("RJ7") .And. ChkFile("RJ8")
Local cStatRJ7	:= .F.
Local nHoraInicio := 0


nHoraInicio := Seconds()

Private oObjREP	:= Nil

//-- Inicializa a integracao via WebServices TSA
If lTSREP
	oObjREP := PTSREPOBJ():New()	
EndIF

If Type("lAutoExec") == "U"
	lAutoExec	= .F.
Endif

If nOpcx == 3
	// Executa a chamada da funcao padrao de inclusao
	nOpca := AxInclui(cAlias, nReg, nOpcx, ,,, "P060TudoOK()", ,,,, Iif(lAutoExec, aAutoCab, Nil) )

ElseIf nOpcx == 4
	// Executa a chamada da funcao padrao de alteracao
	If lTSREP
		oObjRep:WSReadRHExp( "SPA", 1 ) 	
	EndIF
	
	nOpca := AxAltera(cAlias, nReg, nOpcx, ,,,, "P060TudoOK()", ,,,, Iif(lAutoExec, aAutoCab,Nil) )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os campos alterados para analise da integracao WebServices TSA ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If lTSREP
		oObjRep:WSReadRHExp( "SPA", 2 )
	Endif
	
Endif

If nOpca == 1
	
	If lTSREP
		
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Verifica se houve alteracoes nos campos de integracao WebServices TSA ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		If oObjRep:WSChkRHExp( "SPA", If(nOpcX == 3, .T., .F. ))
			
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Usuario x Regras de Apontamentos ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			oObjRep:WSUpdRHExp( "SPA" , .T. )
			
			ProcGpe({|lEnd| lOk := WSRHRules()()})  // CHAMADA DO PROCESSAMENTO
			
			If lOk
				
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava o Log do controle de exportacao WebServices TSA        ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				oObjRep:WSUpdRHExp( "SPA" )
				
            Endif
		Endif	
		
	EndIF
	
Endif


If nOpca == 1
	If !IsBlind() .And. lCopiaTab 
		
		//Gera a chave para validação da filial na tabela RJ7
		//Chave composta por: Filial da RJ7 + Cód. da Tabela + Filial Logada(cadastro)
		cChave:= xFilial("RJ7")+"2"+cFilAnt
		cStatRJ7 := fVldRJ7(1,cChave)
		
		if cStatRJ7		
			Begin Transaction
				
				Reclock( cAliasRJ8, .T. )
				( cAliasRJ8 )->RJ8_FILIAL  := xFilial( "RJ8" )
				( cAliasRJ8 )->RJ8_FILPAR  := ""
				( cAliasRJ8 )->RJ8_TABELA  := "2"
				( cAliasRJ8 )->RJ8_CONTEU  := xFilial("SPA") + SPA->PA_CODIGO
				( cAliasRJ8 )->RJ8_DATA    := Date()
				( cAliasRJ8 )->RJ8_HORA    := SecsToTime(nHoraInicio)
				( cAliasRJ8 )->RJ8_OPERAC  := IIF(nOpcx == 3,"1","2")
				( cAliasRJ8 )->RJ8_USUARI  := UsrRetName(RetCodUsr())
				( cAliasRJ8 )->RJ8_STATUS  := "0"
				( cAliasRJ8 )->RJ8_ESOCIA  := "1"
				( cAliasRJ8 )->RJ8_MSGLOG  := IIF(nOpcx == 3,OemToAnsi(STR0026),OemToAnsi(STR0027)) + SPA->PA_CODIGO //"INCLUSAO DE REGRA DE APONTAMENTO COD: " ## "ALTERACAO DE REGRA DE APONTAMENTO COD: "
				
				( cAliasRJ8 )->( MsUnlock() )
				
				End Transaction
		Endif		
		
	Endif
EndIf

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Pn060VlIntºAutor  ³ RH - Inovacao      º Data ³  30/07/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Rotina de validacao de preenchimento de campo              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ PONA060                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Pn060VlInt()
	Local cCampo := ReadVar()
	Local cValor := AllTrim(&cCampo)
	Local lRet := .T.
	Local aArea := GetArea()
	Local cValorSX3 := ""
	
	Local nPosIni := 1
	Local aValorSX3 := {}
	Local aValor := {}
	Local lConfere := .F.
	Local i := 1
	Local lTraco := .F.

	cValorSX3 	:= AllTrim(GetSx3Cache(StrTran(cCampo, "M->", ""),"X3_RELACAO"))
	cValorSX3 	:= strTran(cValorSX3, '"', "")
	
	cValor		:= strTran(cValor, "*", "")
	
	If at("-", cValorSX3) > 1
		lTraco := .T.
	Else
		lTraco := .F.
	EndIf 
	
	While lTraco
		nPosFim := at("-", subStr(cValorSX3, nPosIni))
		
		If nPosFim < 1
			nPosFim := len(subStr(cValorSX3, nPosIni))
		EndIf
		
		aadd(aValorSX3, subStr(cValorSX3, nPosIni, nPosFim))
		nPosIni := nPosFim+nPosIni
		
		If at("-", subStr(cValorSX3, nPosIni)) > 0
			lTraco := .T.
		Else
			lTraco := .F.
		EndIf
	EndDo
	
	nPosIni := 1
	
	nPosFim := at("-", subStr(cValor, nPosIni))
	
	While nPosIni <= len(cValor)
		For i := 1 To Len(aValorSX3)
			If allTrim(subStr(cValor, nPosIni, nPosFim)) == aValorSX3[i]
				lConfere := .T.
			EndIf 
		Next
		
		nPosFim := at("-", subStr(cValor, nPosIni))
		
		If nPosFim < 1
			nPosFim := len(allTrim(subStr(cValor, nPosIni)))
		EndIf
		
		nPosIni := nPosFim + nPosIni
		
		If !lConfere
			lRet := .F.
			Exit
		Else
			lConfere := .F.
		EndIf
	EndDo
	
	RestArea( aArea )
Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Pn060VlIntºAutor  ³ RH - Inovacao      º Data ³  04/09/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Rotina de validacao de preenchimento de campo              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ PONA060                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Pn060VlDnt()
	Local lRet		:= .T.
	Local aArea 	:= GetArea()
	Local cDnt 	:= ""
	Local cCampo 	:= ReadVar()
	Local cValor 	:= AllTrim(&cCampo)
	Local i := 1
	cDNT := "CDFN"
	
	cValor := strTran(cValor, "*", "")
	
	for i := 1 to len(cValor)
		if !subStr(cValor, i, 1) $ cDNT
			lRet := .F.
		endIf
	Next
	
	if !lRet
		msgStop(STR0023, STR0024)
	EndIf

	RestArea( aArea )
Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³WhenTolNrºAutor  ³ RH - Manutenção    º Data ³  23/01/20    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Rotina de validacao do when do campo PA_TOLHRNR            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ PONA060                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WhenTolNr()
	Local lRet		:= .T.
	Local cCpos		:= "M->PA_TOLHRNR"
	Local cCampo	:= Upper( Alltrim( ReadVar() ) )
	
	If cCampo == cCpos
		If M->PA_TOLATRA == 0 .And. M->PA_TOLSAIA == 0
			lRet := .T.
		Else
			M->PA_TOLHRNR := 0
			lRet := .F.
		EndIf
	EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³VldTolAtSaºAutor  ³ RH - Manutenção    º Data ³  23/01/20   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Rotina de validacao de preenchimento dos campos PA_TOLATRA º±±
±±º          ³ e PA_TOLSAIA para alterar o valor do PA_TOLHRNR            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ PONA060                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function VldTolAtSa()
	Local lRet		:= .T.
	
	If M->PA_TOLATRA > 0 .Or. M->PA_TOLSAIA > 0
		M->PA_TOLHRNR := 0
	EndIf
	
Return lRet

/*/{Protheus.doc} P060TudoOK
Valida os períodos de apuração para atraso e sdaída antecipada quando utiliza tolerância de horas não realizadas
@type  Function
@author Cícero Alves
@since 23/09/2021
@return lTudoOK, lógico, Falso quando existir tolerância e os períodos forem diferentes
@see 
/*/
Function P060TudoOK()
	
	Local lTudoOK	:= .T.
	
	If M->PA_TOLHRNR > 0 .And. M->PA_PERATRA != M->PA_PERSAIA
		// "Período de Apuração"
		// "Quando utilizada a tolerância para horas não realizadas o período de apuração dos atrasos e das saídas antecipadas deve ser igual"
		// "Verifique na aba Apuração os campos período de apuração para atrasos e para saída antecipada"
		Help(,, STR0029,, STR0030, 1, 0 ,,,,,, {STR0031}) 
		lTudoOK := .F.
	EndIf
	
Return lTudoOK
