#INCLUDE "PONA080.CH"  
#INCLUDE "PROTHEUS.CH"

Static lPna08001Block
Static lIntegdef := FindFunction( "GETROTINTEG" ) .And. FindFunction("FWHasEai")

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função  ³PONA080³Autor ³Equipe Advanced RH (Versao I ) ³Data³07/03/1996³±±
±±³        ³       ³      ³Marinaldo de Jesus (Versao II) ³Data³07/05/2003³±±
±±ÃÄÄÄÄÄÄÄÄÁÄÂÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrição ³Cadastro de tabela de hor rio padr„o.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³PONA080()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Generico                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRUÇÃO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Leandro Dr. ³14/04/14³      ³Retirada de ajustes, database e FieldPos  ³±±
±±³            ³        ³      ³que nao serao utilizados na P12.		  ³±±
±±³Allyson M   ³16/10/15³TTPMJ1³Ajuste p/ integracao com o TSA p/ efetuar ³±±
±±³            ³        ³      ³a exclusao da sequencia do turno.	  	  ³±±
±±³Oswaldo L.  ³03/04/17³DRHPONTP-164 ³Projeto cTree                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±± 
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/


Function PONA080(aCab,aItem,nOpcAuto)

Local aArea			:= GetArea()
Local aAreaSR6		:= SR6->( GetArea() )
Local aAreaSPJ		:= SPJ->( GetArea() )
Local aIndexSR6		:= {}		
Local cFiltraSR6	:= ""
Local nPosSR6		:= 0
Local nPosFil		:= 0

DEFAULT lPna08001Block	:= ExistBlock( "PNA08001"	)
DEFAULT aCab				:= {}
DEFAULT aItem				:= {}
DEFAULT nOpcAuto			:= 0

Private aAutoCab			:= aCab
Private aAutoItem			:= aItem
Private lAutoExec			:= (Len(aAutoCab) > 0 .AND. nOpcAuto > 0)

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ So Executa se os Modos de Acesso dos Arquivos Relacionados es³
	³ tiverm OK.												   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( ValidArqPon() )
		Break	
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se Existem Turnos de Trabalho Cadastrados           ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !ChkVazio( "SR6" )
		Break
	Else	
		If cPaisLoc $ "RUS"
			MsAguarde( { || GpIniWfSq()} , OemtoAnsi(STR0398) ) // "Loading standard Work Shifts"
		EndIf
	EndIF
	
	Private bFiltraBrw	:= { || NIL }
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Array contendo os tipos de Horas Extras               ³
	³ ----------- Elementos contidos por dimensao ------------     ³
	³ 1. Nome do Dia da Semana                                     ³
	³ 2. Tipo do Dia S=Trabal.,N=Nao Trab.,C=Compes.,D=D.S.R.      ³
	³ 3. Tipo de H.Extra 1-2-3 horas normais                       ³
	³ 4. Tipo de H.Extra 5-6-7 horas noturnas                      ³
	³ 5. Indice do Dia de Acordo com Dow()                         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	Private aDias :=	{  							   ;	
							{STR0052 ,"S","1","5","2"},;	// "Segunda"
							{STR0053 ,"S","1","5","3"},;	// "Terca"
							{STR0054 ,"S","1","5","4"},;	// "Quarta"
							{STR0055 ,"S","1","5","5"},;	// "Quinta"
							{STR0056 ,"S","1","5","6"},;	// "Sexta"
							{STR0057 ,If(cPaisLoc == "RUS","N","C"),"3","7","7"},;	// "Sabado"
							{STR0058 ,If(cPaisLoc == "RUS","N","D"),"2","6","1"} ;	// "Domingo"
						}	
	
	Private nLenaDias := Len( aDias )
	
	Private cSemana		:= Space( GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )
	Private cLstSemana	:= cSemana
	Private cCalc	:= "SPJ"
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Array contendo as Rotinas a executar do programa      ³
	³ ----------- Elementos contidos por dimensao ------------     ³
	³ 1. Nome a aparecer no cabecalho                              ³
	³ 2. Nome da Rotina associada                                  ³
	³ 3. Usado pela rotina                                         ³
	³ 4. Tipo de Transa‡„o a ser efetuada                          ³
	³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
	³    2 - Simplesmente Mostra os Campos                         ³
	³    3 - Inclui registros no Bancos de Dados                   ³
	³    4 - Altera o registro corrente                            ³
	³    5 - Remove o registro corrente do Banco de Dados          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	Private aRotina := MenuDef()
	
	Private cCadastro := IIF(cPaisLoc <> "RUS",OemToAnsi(STR0020 ),OemToAnsi(STR0397 ))	// "Tabela de Horario Padrao"
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	cFiltraRh	:= ChkRh("PONA080","SR6","1")
	bFiltraBrw 	:= { || FilBrowse( "SR6" , @aIndexSR6 , @cFiltraRH ) }
	Eval( bFiltraBrw )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Monta Browse Baseado no SR6 (Turnos de Trabalho) para a configuracao das³
	³Tabelas de Horario Padrao												 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	dbSelectArea ( "SR6" )
	
	If lAutoExec
		// Posiciona no turno
		nPosFil := Ascan(aAutoCab, {|x| Alltrim(x[1]) == "PJ_FILIAL"})
		nPosSR6 := Ascan(aAutoCab, {|x| Alltrim(x[1]) == "PJ_TURNO"})
		If nPosFil > 0 .And. nPosSR6 > 0 .And. SR6->(dbSeek(xFilial("SR6", aAutoCab[nPosFil][2]) + aAutoCab[nPosSR6][2]))
			MBrowseAuto(nOpcAuto, aAutoCab, 'SR6', .F., .T.)
		Else
			// Turno não encontrado
			Help(,, "Help",, STR0404, 1, 0,,,,,, {STR0405})
		EndIf
	Else
		mBrowse( 06 , 01 , 22 , 75 , "SR6" )
	EndIf
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Deleta o filtro utilizando a funcao FilBrowse                     	 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	EndFilBrw( "SR6" , @aIndexSr6 )

End Sequence
	
RestArea( aAreaSPJ )
RestArea( aAreaSR6 )
RestArea( aArea )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Elimina variavel Static                    	                         ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
lPna08001Block := NIL
Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Inc³ Autor ³ Marinaldo de Jesus    ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Inclus„o de tabelas de hor rio padr„o                       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona080Inc()                                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona080Inc( cAlias , nReg , nOpcx )

Local aColsRec	:= {}
Local aSpjKeys	:= {}
Local nOpcA		:= 0
Local cAliasRJ8 := "RJ8"
Local lCopiaTab  := ChkFile("RJ7") .And. ChkFile("RJ8")
Local cStatRJ7  := .F.
Local nHoraInicio := 0

nHoraInicio := Seconds()

cSemana  := Space( GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )

IF ( ChkVazio( "SR6" ) )
    nOpcA := Pona080Win( .F. , STR0026 , nOpcx , NIL , @aColsRec , NIL , @aSpjKeys )	// "  -  Inclus„o"
    If Type("lAutoExec") <> "L" .Or. !lAutoExec
	FreeLocks( "SPJ" , aColsRec , .T. , aSpjKeys )
    EndIf
	
	//*************************************************************************************
	// ENVIO PARA A RJ8 PARA INCLUSÃO EM OUTRAS FILIAIS 
	//*************************************************************************************	
	 
	 If nOpcx == 3 .And. nOpca == 1
	 
		 If !IsBlind() .And. lCopiaTab
		  	
		  	//Gera a chave para validação da filial na tabela RJ7
		  	//Chave composta por: Filial da RJ7 + Cód. da Tabela + Filial Logada(cadastro)
		  	cChave:= xFilial("RJ7")+"5"+cFilAnt
		  	cStatRJ7 := fVldRJ7(1,cChave)
		
			If cStatRJ7 //Inclusao
				Begin Transaction 
				  	RecLock(cAliasRJ8,.T.)
			 		( cAliasRJ8 )->RJ8_FILIAL  := xFilial( "RJ8" )
			 		( cAliasRJ8 )->RJ8_FILPAR  := ""
			 		( cAliasRJ8 )->RJ8_TABELA  := "5"
			 		( cAliasRJ8 )->RJ8_CONTEU  := xFilial("SPJ") + SPJ->PJ_TURNO + SPJ->PJ_SEMANA
			 		( cAliasRJ8 )->RJ8_DATA    := Date()
			 		( cAliasRJ8 )->RJ8_HORA    := SecsToTime(nHoraInicio)
			 		( cAliasRJ8 )->RJ8_OPERAC  := "1"
			 		( cAliasRJ8 )->RJ8_USUARI  := UsrRetName(RetCodUsr())
			 		( cAliasRJ8 )->RJ8_STATUS  := "0"
			 		( cAliasRJ8 )->RJ8_ESOCIA  := "1"
			 		( cAliasRJ8 )->RJ8_MSGLOG  := OemToAnsi(STR0401) + SPJ->PJ_TURNO //"INCLUSAO TABELA DE HORARIO COD: " 
			 	
			 		( cAliasRJ8 )->( MsUnlock() )
				End Transaction
				 	
			Endif
		EndIf
	 EndIf
EndIF

Return( nOpcA ) 

/*/{Protheus.doc} Pon080Clear
Function used in Russia, Clear acols
@author andrews.egas
@since 28/02/2018
@version 1.0
@project MA3 - Russia
/*/
Function Pon080Clear()
Local n2 as numeric
Local n1 as numeric

	If MsgYesNo(STR0396) // Are you sure you want to cleat all fields?
		For n1 := 1 To Len(aCols)
			For n2 := 1 To Len(aHeader)
				IF (aHeader[ n2 , 2 ] $ "PJ_ENTRA1|PJ_SAIDA1|PJ_ENTRA2|PJ_SAIDA2|PJ_INTERV1|PJ_INTERV2|PJ_JND1CON|PJ_JND2CON|PJ_HRSINT1|PJ_HRSINT2|PJ_HRSTRAB|PJ_HRSTRA2|PJ_HRTOTAL|PJ_HRSTRA3")
					aCols[ n1 , n2 ] := Iif(aHeader[n2,8]=="N",0,"N")
				EndIF
			Next n2
			RunTrigger(2,n1,nil,,'PJ_ENTRA1')
		Next n1	
	EndIf	

Return() 


/*/{Protheus.doc} Pon080Import
Function used in Russia, Import
@author andrews.egas
@since 28/02/2018
@version 1.0
@project MA3 - Russia
/*/
Function Pon080Import()
Local n as numeric

	If Pergunte('PON080IMPO',.T.)
		for n := 1 to 7
		    Do Case
				Case n == 1 // Monday
					aCols[n][aScan(aHeader,{|x| Trim(x[2])=="PJ_TPDIA"})]  := If( fDescRCC('S024',alltrim(MV_PAR01),1,6,107,1) == "E","S","N")
				Case n == 2 // Tuesday
					aCols[n][aScan(aHeader,{|x| Trim(x[2])=="PJ_TPDIA"})]  := If( fDescRCC('S024',alltrim(MV_PAR01),1,6,108,1) == "E","S","N")
				Case n == 3 // Wednesday
					aCols[n][aScan(aHeader,{|x| Trim(x[2])=="PJ_TPDIA"})]  := If( fDescRCC('S024',alltrim(MV_PAR01),1,6,109,1) == "E","S","N")
				Case n == 4 // Thursday
					aCols[n][aScan(aHeader,{|x| Trim(x[2])=="PJ_TPDIA"})]  := If( fDescRCC('S024',alltrim(MV_PAR01),1,6,110,1) == "E","S","N")
				Case n == 5 // Friday
					aCols[n][aScan(aHeader,{|x| Trim(x[2])=="PJ_TPDIA"})]  := If( fDescRCC('S024',alltrim(MV_PAR01),1,6,111,1) == "E","S","N")
				Case n == 6 // Saturday
					aCols[n][aScan(aHeader,{|x| Trim(x[2])=="PJ_TPDIA"})]  := If( fDescRCC('S024',alltrim(MV_PAR01),1,6,112,1) == "E","S","N")
				Case n == 7 // Sunday
					aCols[n][aScan(aHeader,{|x| Trim(x[2])=="PJ_TPDIA"})]  := If( fDescRCC('S024',alltrim(MV_PAR01),1,6,113,1) == "E","S","N")
			EndCase
			aCols[n][aScan(aHeader,{|x| Trim(x[2])=="PJ_SAIDA2"})] 	:= Val(fDescRCC('S024',alltrim(MV_PAR01),1,6,119,5))
			aCols[n][aScan(aHeader,{|x| Trim(x[2])=="PJ_SAIDA1"})] 	:= Val(fDescRCC('S024',alltrim(MV_PAR01),1,6,124,5)) 
			aCols[n][aScan(aHeader,{|x| Trim(x[2])=="PJ_ENTRA2"})] 	:= Val(fDescRCC('S024',alltrim(MV_PAR01),1,6,129,5))
			aCols[n][aScan(aHeader,{|x| Trim(x[2])=="PJ_ENTRA1"})] 	:= Val(fDescRCC('S024',alltrim(MV_PAR01),1,6,114,5))		
			RunTrigger(2,n,nil,,'PJ_ENTRA1')
			aCols[n][aScan(aHeader,{|x| Trim(x[2])=="PJ_INTERV1"})]	:= "S"
			RunTrigger(2,n,nil,,'PJ_INTERV1')
		Next
	EndIf

Return() 

/*/{Protheus.doc} Pona080Cop
Function used in Russia, copy SPJ
@author andrews.egas
@since 28/02/2018
@version 1.0
@project MA3 - Russia
/*/
Function Pona080Cop( cAlias , nReg , nOpcx )
Local aColsSPJ 		as array
Local aHeaderSPJ 	as array
Local nE 			as numeric
Local n 			as numeric
Local cNextSeq 		as character
Local lRet 			as logical
Local nS 			as numeric
Local aSeqAux		as array

aColsSPJ 	:= {}
lRet 		:= .T.

	If Pergunte('PON080COPY',.T.)
		If ( '-' $ MV_PAR02)// if is '-' is from one number to another one
			if len(StrTokArr2(alltrim(MV_PAR02),'-')) == 2
				aSeqAux := StrTokArr2(alltrim(MV_PAR02),'-')
				aSeq := {}
				AADD(aSeq,aSeqAux[1])
				For n := 1 to Val(aSeqAux[2])-Val(aSeqAux[1])
					AADD(aSeq,iif(Val(aSeqAux[1])+n < 10,	"0"+alltrim(str(Val(aSeqAux[1])+n,1)),;
						alltrim(str(Val(aSeqAux[1])+n))))		
				Next
			Else
				lRet := .F.
			EndIf

		Else
			aSeq := StrTokArr2(alltrim(MV_PAR02),';')
		EndIf
	

		If lRet
			aHeaderSPJ := GETAHEADER("SPJ")
			dbSelectArea("SPJ")
			DbSetOrder(1)
			lRet := .F.
			cNextSeq := "01"
			while dbSeek(xFilial("SPJ") + MV_PAR03 + cNextSeq)
				lRet := .T.
				cNextSeq := iif(val(cNextSeq)+1 < 10,"0"+alltrim(str(val(cNextSeq)+1,1)),alltrim(str(val(cNextSeq)+1)))
				dbskip()
			EndDo

			For nS:=1 to len(aSeq) 
				DbSetOrder(1)
				If lRet .And. dbSeek(xFilial("SPJ") + MV_PAR01 + allTrim(aSeq[nS]))
					while !EOF() .And. (SPJ->PJ_FILIAL + SPJ->PJ_TURNO + SPJ->PJ_SEMANA == ;
						xFilial("SPJ") + MV_PAR01 + allTrim(aSeq[nS]))
						AADD(aColsSPJ,Array(Len(aHeaderSPJ)))		
						For nE := 1 to Len(aHeaderSPJ)		
							aColsSPJ[Len(aColsSPJ),nE] := FieldGet(FieldPos(aHeaderSPJ[nE,2]))		
						Next	
						dbskip()
					Enddo
				Else
					lRet := .F.
					Exit
				EndIf
			Next
		EndIf

		If lRet
			begin transaction
				For nE := 1 To Len(aColsSPJ)
					RecLock("SPJ", .T.)
						SPJ->PJ_FILIAL := xFilial("SPJ")
						SPJ->PJ_TURNO := allTrim(MV_PAR03)
						For n:= 1 to Len(aHeaderSPJ)
							If !(aHeaderSPJ[n][2] $ "PJ_TURNO|PJ_SEMANA")
								SPJ->&(aHeaderSPJ[n][2]) := aColsSPJ[nE][n]
							EndIf
						Next
						SPJ->PJ_SEMANA := cNextSeq
						cNextSeq :=	IIf(Mod(nE,7)==0,iif(val(cNextSeq)+1 < 10,"0"+alltrim(str(val(cNextSeq)+1,1)),alltrim(str(val(cNextSeq)+1)));
							,cNextSeq)
				
					SPJ->(MsUnLock())
				Next
			End transaction
		EndIf
			
		If lRet	
			MsgInfo(STR0394,STR0299)
		Else
		 	MsgInfo(STR0395,STR0299)
		EndIf
	 
	EndIf

Return() 
/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Alt³ Autor ³Marinaldo de Jesus     ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Altera‡„o de tabelas de hor rio padr„o                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona080Alt()                                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona080Alt( cAlias , nReg , nOpcx )

Local aColsRec	:= {}
Local aSpjKeys	:= {}
Local nOpcA		:= 0
Local cAliasRJ8 := "RJ8"
Local lCopiaTab  := ChkFile("RJ7") .And. ChkFile("RJ8")
Local cStatRJ7  := .F.
Local nHoraInicio := 0

nHoraInicio := Seconds()

cSemana	:= Space( GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )

nOpcA := Pona080Win( .T. , STR0028 , nOpcx , NIL , @aColsRec , NIL , @aSpjKeys )	// "  -  Alteracao"
If Type("lAutoExec") <> "L" .Or. !lAutoExec
	FreeLocks( "SPJ" , aColsRec , .T. , aSpjKeys )
EndIf

	//*************************************************************************************
	//SE NÃO FOR ROTINA AUTOMATICA, ENVIO PARA A RJ8 PARA INCLUSÃO EM OUTRAS FILIAIS 
	//*************************************************************************************	
	 if nOpca == 1
		 If !IsBlind() .And. lCopiaTab 
			//Gera a chave para validação da filial na tabela RJ7
			//Chave composta por: Filial da RJ7 + Cód. da Tabela + Filial Logada(cadastro)
			cChave:= xFilial("RJ7")+"5"+cFilAnt
			cStatRJ7 := fVldRJ7(1,cChave)
			
			If cStatRJ7 //Inclusao
				
				Begin Transaction
				
					RecLock(cAliasRJ8,.T.)
					( cAliasRJ8 )->RJ8_FILIAL  := xFilial( "RJ8" )
					( cAliasRJ8 )->RJ8_FILPAR  := ""
					( cAliasRJ8 )->RJ8_TABELA  := "5"
					( cAliasRJ8 )->RJ8_CONTEU  := xFilial("SPJ") + SPJ->PJ_TURNO + SPJ->PJ_SEMANA
					( cAliasRJ8 )->RJ8_DATA    := Date()
					( cAliasRJ8 )->RJ8_HORA    := SecsToTime(nHoraInicio)
					( cAliasRJ8 )->RJ8_OPERAC  := "2"
					( cAliasRJ8 )->RJ8_USUARI  := UsrRetName(RetCodUsr())
					( cAliasRJ8 )->RJ8_STATUS  := "0"
					( cAliasRJ8 )->RJ8_ESOCIA  := "1"
					( cAliasRJ8 )->RJ8_MSGLOG  := OemToAnsi(STR0402) + SPJ->PJ_TURNO //"ALTERACAO TABELA DE HORARIOS COD: " 
				
					( cAliasRJ8 )->( MsUnlock() )
			
				End Transaction
			EndIf
		Endif
	Endif
Return( nOpcA )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Vis³ Autor ³Marinaldo de Jesus     ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Visualiza‡„o de tabelas de hor rio padr„o                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona080Vis()	                                          	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona080Vis( cAlias , nReg , nOpcx )

Local aColsRec	:= {}
Local aSpjKeys	:= {}
Local lSeq		:= .F.
Local nOpcA		:= 0

cSemana	:= Space( GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )
nOpcA := Pona080Win( .T. , STR0029 , nOpcx , lSeq , @aColsRec , NIL , @aSpjKeys )	// "  -  Visualiza‡„o"
If Type("lAutoExec") <> "L" .Or. !lAutoExec
	FreeLocks( "SPJ" , aColsRec , .T. , aSpjKeys )
EndIf

Return( nOpcA )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Exc³ Autor ³ Marinaldo de Jesus    ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Exclus„o de tabelas de hor rio padr„o                       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona080Exc()                                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona080Exc( cAlias , nReg , nOpcx )

Local aRecnos	:= {}
Local aSeqDel	:= {}
Local aSeqAux	:= {}
Local aSeqAux1	:= {}
Local aLog		:= {}
Local aLogTitle	:= {}
Local aSpjKeys	:= {}
Local bCondDele	:= { || .F. }
Local cChave	:= ""
Local cMsg		:= ""
Local cSeq		:= ""
Local cUseAlias	:= ""
Local lChkDel	:= .T.
Local lDelOk	:= .T.
Local lDelAll	:= .F.
Local lGeraLog	:= .F.
Local nOpcA		:= 0
Local nSeq		:= 0
Local nSeqs		:= 0
Local lPona080Auto := Type("lAutoExec") == "L" .AND. lAutoExec
Local lTSREP		:= SuperGetMv( "MV_TSREP" , NIL , .F. )
Local cAliasRJ8 := "RJ8"
Local lCopiaTab  := ChkFile("RJ7") .And. ChkFile("RJ8")
Local cStatRJ7  := .F.
Local nHoraInicio := Seconds()

Private oObjREP		:= Nil



//-- Inicializa a integracao via WebServices TSA
If lTSREP
	oObjREP := PTSREPOBJ():New()
EndIf

cSemana	:= Space( GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )
nOpcA	:= Pona080Win( .T. , STR0032 , nOpcx , NIL , @aRecnos , @aSeqDel , @aSpjKeys ) // "  -  Dele‡„o"

IF ( nOpcA == 1 )

	IF ( lPona080Auto .OR. (lChkDel := MsgYesNo(	OemToAnsi(	STR0065 + ;	//""O Sistema Agora Ira efetuar a Verificacao para ver se a(s) Sequencia(s) selecionada(s)"
											CRLF	+ ;	
											STR0066	+ ;	//"para Exclusao esta(o) sendo utilizada(s)."
											CRLF	+ ;
											CRLF	+ ;	
											STR0081 + ; //"A verifica‡„o pode ser demorada !!"
											CRLF	+ ;
											CRLF	+ ;
											STR0067   ;	//"Confirma a exclus„o da(s) Sequencia(s)?"
					   					 ),;
			 					OemToAnsi( STR0068 ) ;	//"Aten‡„o"
							));
		)
		//Execauto sempre apaga apenas uma sequência e não gera log
		If (lPona080Auto)
			lGeraLog	:= .F.
			lDelAll	:= .F.			
		Else
			//"Deseja gerar Log?"###//"Aten‡„o"
			lGeraLog := MsgNoYes( OemToAnsi( STR0073 ), OemToAnsi( STR0068 )  ) 

			//"Excluir todas as sequencias da Tabela?"###"Exclus„o de Sequencias"
			lDelAll := MsgNoYes( OemToAnsi( STR0077 ) , OemToAnsi( STR0078 ) )
		EndIf
	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Verifica se vai Excluir Todas as Sequencias				  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF !( lDelAll )
			aAdd( aSeqAux , cSemana )
		Else
			aSeqAux := aClone( aSeqDel )
		EndIF
		
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Consistindo a Exclusao                       				  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		nSeqs := Len( aSeqAux )
		For nSeq := 1 To nSeqs
			cSeq := aSeqAux[ nSeq ]
			//"Consistindo a Sequencia: "
			MsAguarde( { || lChkDel := SR6->( Pona080DelChk( R6_FILIAL , R6_TURNO , cSeq , lGeraLog , @aLog , @aLogTitle , @cUseAlias ) ) } , NIL , STR0082 + cSeq + "..." )
			IF ( lChkDel )
				aAdd( aSeqAux1 , cSeq )
			Else
				lDelOk := .F.
			EndIF
		Next nSeq

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Exclusao da(s) Sequencia(s)                  				  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( lDelOk )
			nSeqs := Len( aSeqDel )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Verifica se a Sequencia a ser Excluida nao eh a Ultima	  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF !( lDelAll )
				IF ( nSeqs > 1.00 )
					nSeq := aScan( aSeqDel , { |x| x == cSemana } )
					lDelOk := ( nSeq >= nSeqs )
				EndIF
			EndIF	
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Se estiver tudo OK, Efetiva a Exclusao da(s) Sequencia(s)	  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( lDelOk )
				Begin Transaction
					nSeqs := Len( aSeqAux1 )
					For nSeq := 1 To nSeqs
						cSeq 		:= aSeqAux1[ nSeq ]
						SPJ->( DbSeek( PJ_FILIAL + PJ_TURNO + cSeq) )
						cChave 		:= ( SR6->( R6_FILIAL + R6_TURNO ) + cSeq )
						bCondDele	:= { |cChave| PJ_FILIAL + PJ_TURNO + PJ_SEMANA == cChave }
						If lIntegdef
							FwIntegdef( "PONA080" )
						EndIf
						//"Excluido a Sequencia: "
						MsAguarde( { || PonDelRecnos( "SPJ" , aRecnos , bCondDele,cChave ) } , NIL , STR0083 + cSeq + "..." )						

						If lTsRep
							/*/
							ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							³ Executa o WebServices TSA - Turno de Trabalho                ³
							ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/							
							If oObjREP:WSShiftWork( 3, cSeq )
								/*/
								ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								³ Grava o Log do controle de exportacao WebServices TSA        ³
								ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
								oObjRep:WSUpdRHExp( "SR6" )							
							EndIf						
						EndIf
						
					Next nSeq
				End Transaction
			Else
				IF ( lGeraLog )
					//"A Sequencia ( Filial/Turno/Seq )###"Nao Pode ser Excluida."
					SR6->(aAdd( aLog , STR0069 + R6_FILIAL + "/" + R6_TURNO + "/" + cSemana + " " + STR0079 )  )
					//"A Exclusao de Sequencia(s) deve ser feita da Ultima para a Primeira.
					aAdd( aLog , STR0080 ) 
				Else
					cMsg := SR6->( STR0069 + R6_FILIAL + "/" + R6_TURNO + "/" + cSemana + " " )	//"A Sequencia ( Filial/Turno/Seq )
					cMsg += STR0079 														//"Nao Pode ser Excluida."
					cMsg += CRLF
					cMsg += STR0080															//"A Exclusao de Sequencia(s) deve ser feita da Ultima para a Primeira.
				EndIF	
			EndIF	
		EndIF		

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Verifica se Deve Gerar o Log								  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( ( lGeraLog ) .and. !( lDelOk ) )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Gera e Mostra o Log 										  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				10        20       30        40        50        60        70        80        90       100       110...
			1234567890123456789023456789012345678901234567890123456789012345678901234567890123456789012345678901234567890...
			Arquivo Registro   Conteudo
			XXX     9999999999 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX*/
			aAdd( aLogTitle , STR0072 )	//"Arquivo Registro   Chave/Conteudo"
			MsAguarde( { || fMakeLog( { aLog } , aLogTitle , NIL , NIL , FunName() , STR0071 ) } , STR0071 ) //"Log de Ocorrencias na Exclusao de Sequencias"
		ElseIF !( lDelOk )
			IF Empty( cMsg )
				cMsg := ( STR0074 + cUseAlias )	//"A Sequencia a ser excluida est  presente no"###"arquivo "
				cMsg += CRLF
				cMsg += STR0075					// "At‚ que as referˆncias a esta Sequencia sejam eliminadas,"
				cMsg += CRLF
				cMsg += STR0076					//"a mesma n„o pode ser excluida."
			EndIF
			
			Help(,,'Pona080Exc',, OEmToAnsi( cMsg ),1,0)
		EndIF
	EndIF
EndIF

If !lPona080Auto
	FreeLocks( "SPJ" , aRecnos , .T. , aSpjKeys )
EndIf
	
	//*************************************************************************************
	//SE NÃO FOR ROTINA AUTOMATICA, ENVIO PARA A RJ8 PARA INCLUSÃO EM OUTRAS FILIAIS 
	//*************************************************************************************	
	 If nOpcA == 1 .And. !IsBlind() .And. lCopiaTab .And. lDelOk
		
		//Gera a chave para validação da filial na tabela RJ7
		//Chave composta por: Filial da RJ7 + Cód. da Tabela + Filial Logada(cadastro)
		cChave:= xFilial("RJ7")+"5"+cFilAnt
		cStatRJ7 := fVldRJ7(1,cChave)
		
		If cStatRJ7 //Inclusao
			
			Begin Transaction
			
			RecLock(cAliasRJ8,.T.)
			( cAliasRJ8 )->RJ8_FILIAL  := xFilial( "RJ8" )
			( cAliasRJ8 )->RJ8_FILPAR  := ""
			( cAliasRJ8 )->RJ8_TABELA  := "5"
			( cAliasRJ8 )->RJ8_CONTEU  := xFilial("SPJ") + SPJ->PJ_TURNO + SPJ->PJ_SEMANA
			( cAliasRJ8 )->RJ8_DATA    := Date()
			( cAliasRJ8 )->RJ8_HORA    := SecsToTime(nHoraInicio)
			( cAliasRJ8 )->RJ8_OPERAC  := "3"
			( cAliasRJ8 )->RJ8_USUARI  := UsrRetName(RetCodUsr())
			( cAliasRJ8 )->RJ8_STATUS  := "0"
			( cAliasRJ8 )->RJ8_ESOCIA  := "1"
			( cAliasRJ8 )->RJ8_MSGLOG  := OemToAnsi(STR0400) + SPJ->PJ_TURNO //"EXCLUSAO TABELA DE HORARIOS COD: "
		
			( cAliasRJ8 )->( MsUnlock() )
		
			End Transaction
		EndIf
	EndIf
		
Return( nOpcA )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080DelChk	³Autor³Marinaldo de Jesus ³ Data ³25/07/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Verificar se uma Sequencia pode Ser Deletada                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080DelChk( cFil , cTno , cSeq , lGeraLog , aLog , aLogTitle , cUseAlias )
                
Local aArea		:= GetArea()
Local aAreas	:= Array( 02 )
Local cFilAux	:= ""
Local cConteudo	:= ""
Local cChave	:= ""
Local lDelOk	:= .T.
Local nArea		:= 0
Local nAreas	:= 0
Local lInteGS	:= FindFunction("TecSeqAgen") .AND. SuperGetMV("MV_TECXRH", NIL, .F. ) 

aAreas[1] := SRA->( GetArea() )
aAreas[2] := SPF->( GetArea() )

Begin Sequence

	SRA->( dbSetOrder( RetOrdem( "SRA" , "RA_FILIAL+RA_TNOTRAB+RA_SEQTURN" ) ) )
	cFilAux	:= IF( Len(Alltrim( cFil )) < FwGetTamFilial , xFilial("SRA") , cFil )

	cChave := ( cFilAux + cTno + cSeq )
	IF !( lDelOk := !( SRA->( dbSeek( cChave , .F. ) ) ) )
		IF !( lGeraLog )
			cUseAlias := "SRA"
			Break
		EndIF
		aAdd( aLog , STR0069 + cFil + "/" + cTno + "/" + cSeq + STR0070 ) //"A Sequencia ( Filial/Turno/Seq ) "###" nao pode ser Excluida pois esta sendo utilizada nos arquivos abaixo"
		aAdd( aLog , "" )
		aAdd( aLog , "" )
		While SRA->( !Eof() .and. RA_FILIAL + RA_TNOTRAB + RA_SEQTURN == cChave )
			cConteudo := SRA->( RA_FILIAL + "/" + RA_TNOTRAB + "/" + RA_SEQTURN + "/" + RA_MAT )
			aAdd( aLog , "SRA" + Space( 05 ) + SRA->( StrZero( Recno() , 10 )  + Space( 01 ) + AllTrim( &( IndexKey() ) ) + "/" + cConteudo ) )
			SRA->( dbSkip() )
		EndDo	
	EndIF
    
    cFilAux := IF( Len(Alltrim( cFil )) < FwGetTamFilial  , xFilial("SPF") , cFil )
	SPF->( dbSeek( cFilAux , .F. ) )
	While SPF->( !Eof() .and. PF_FILIAL == cFilAux )
		IF ( SPF->( PF_TURNODE + PF_SEQUEDE ) == ( cTno + cSeq ) ) .or. ;
		   ( SPF->( PF_TURNOPA + PF_SEQUEPA ) == ( cTno + cSeq ) )
			IF !( lGeraLog )
				lDelOk := .F. 
				cUseAlias := "SPF"
				Break
			EndIF
            IF Empty( aLog )
				lDelOk := .F.
				aAdd( aLog , STR0069 + cFil + "/" + cTno + "/" + cSeq + STR0070 ) //"A Sequencia ( Filial/Turno/Seq ) "###" nao pode ser Excluida pois esta sendo utilizada nos arquivos abaixo"
				aAdd( aLog , "" )
				aAdd( aLog , "" )
			EndIF	
			cConteudo := SPF->( PF_FILIAL + "/" + PF_MAT + "/" + PF_TURNODE + "/" + PF_SEQUEDE + "/" + PF_TURNOPA + "/" + PF_SEQUEPA )
			aAdd( aLog , "SPF" + Space( 05 ) + SPF->( StrZero( Recno() , 10 )  + Space( 01 ) + AllTrim( &( IndexKey() ) ) + "/" + cConteudo ) )
		EndIF
		SPF->( dbSkip() )
	EndDo
	If lInteGS
		TecSeqAgen( cTno , cSeq, @aLog, @lDelOk, @cUseAlias )
	EndIf
End Sequence

nAreas := Len( aAreas )
For nArea := 1 To nAreas
	RestArea( aAreas[ nArea ] )
Next nAreas
RestArea( aArea )

Return( lDelOk )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Win³ Autor ³Marinaldo de Jesus     ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Carregar as Tabelas de Horario Padrao para Manutencao ou  Vi³
³          ³sualizacao													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080Win(	lLe			,;
							cTitulo		,;
							nOpcx		,;
							lSeq		,;
							aColsRec	,;
							aSeq		,;
							aSpjKeys	 ;
						   )

Local aSvKeys		:= GetKeys()
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}
Local aNotFields	:= {}
Local aNotAltera	:= {}
Local aQueryCond	:= {}
Local aVirtual		:= {}
Local aVisual		:= {}
Local aButtonsEnch	:= {}
Local bSet15		:= { || nOpcA := 1 , IF( Prossegue(nOpcX,cSemana,lLe,@n,.T.,@aCols,aHeader,@aColsAll,aHeaderAll,nCountSeq, @nVezChk ) ,;
                                              If( oGet:TudoOk() .And. fVldNTrab( .T. ), ;
                                                  ( RestKeys( aSvKeys , .T. ) , oDlg:End() ),;
                                                   nOpcA:= 0  ;
                                                ),;
                                              nOpcA := 0 ;
                                             ) ;
                       } 
Local bSet24		:= { || RestKeys( aSvKeys , .T. ) , oDlg:End() , nOpcA := 0 }
Local bReplicate	:= { || NIL }
Local bCalendario	:= { || NIL }
Local bValid		:= { || NIL }
Local bGetSpj		:= { || NIL }
Local cKey			:= ""
Local cKeyLock		:= ""
Local cAlias  		:= "SPJ"
Local lContinua		:= .F.
Local lExecLock		:= ( ( nOpcx == 3 ) .or. ( nOpcx == 4 ) .or. ( nOpcx == 5 ) )
Local lLocks		:= .T.
Local nOpcA			:= 0
Local nCountSeq		:= 0
Local nField		:= 0
Local nVezChk		:= 0
Local oDlg			:= NIL
Local oGet			:= NIL
Local oFont			:= NIL
Local oGroup		:= NIL	
Local oFontBig		:= NIL
Local oComboBox		:= NIL
Local oMsGet		:= NIL
Local nPosSem		:= 0

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Monta a entrada de dados do arquivo                          ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Private aHeader		:= {}
Private aHeaderAll	:= {}
Private aCols		:= {}
Private aColsAll	:= {}
Private aAntColsAll	:= {}
Private aAltera  	:= {}
Private cFilSR6		:= SR6->R6_FILIAL
Private cTnoSR6		:= SR6->R6_TURNO
Private nUsado  	:= 0
Private nUsadoAll	:= 0
                	
DEFAULT lLe			:= .F.
DEFAULT lSeq		:= .T.
DEFAULT aColsRec	:= {}
DEFAULT aSeq		:= {}

Begin Sequence

	If !Type("lAutoExec") == "L" .OR. !lAutoExec
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta as Dimensoes dos Objetos         					   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		aAdvSize		:= MsAdvSize()
		aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
		aAdd( aObjCoords , { 015 , 035 , .T. , .F. } )
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
		aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
	EndIf
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta o Cabecalho do ArrayMain (aHeaderAll)				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aHeaderAll	:= GdMontaHeader(@nUsadoAll,@aVirtual,@aVisual,cAlias,aNotFields,.T.,.T.,.T.)
	aHeaderAll[GdFieldPos("PJ_DIA",aHeaderAll),4] := nLenaDias
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta Query para a Selecao das Informacoes                   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aQueryCond		:= Array( 05 )
	aQueryCond[01]	:= "PJ_FILIAL='"+cFilSR6+"'"
	aQueryCond[02]	:= " AND "
	aQueryCond[03]	:= "PJ_TURNO='"+cTnoSR6+"'"
	aQueryCond[04]	:= " AND "
	aQueryCond[05]	:= "D_E_L_E_T_=' ' "
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Detalhes conforme aHeaderAll    				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	cKey 		:= ( cFilSR6 + cTnoSR6 )
	IF ( lExecLock )
		aSpjKeys := {}
		cKeyLock := StrTran( cKey , " " , "_" )
		aAdd( aSpjKeys , cKeyLock )
		IF !( lLocks := WhileNoLock( "SPJ" , NIL , aSpjKeys , 1 , 1 , .T. , 1 , 5 ) )
			Break
		EndIF
	EndIF	
	bGetSpj		:= { |lLock,lExclu|	IF( lExecLock , ( lLock := .T. , lExclu	:= .T. ) , NIL ),;
											aColsAll := SPJ->(;
																GdMontaCols(	aHeaderAll	,;	//01 -> Array com os Campos do Cabecalho da GetDados
																				nUsadoAll	,;	//02 -> Numero de Campos em Uso
																				aVirtual	,;	//03 -> [@]Array com os Campos Virtuais
																				aVisual		,;	//04 -> [@]Array com os Campos Visuais
																				cAlias		,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																				aNotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																				@aColsRec	,;	//07 -> [@]Array unidimensional contendo os Recnos
																				cAlias		,;	//08 -> Alias do Arquivo Pai
																				cKey		,;	//09 -> Chave para o Posicionamento no Alias Filho
																				NIL			,;	//10 -> Bloco para condicao de Loop While
																				NIL			,;	//11 -> Bloco para Skip no Loop While
																				NIL			,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																				NIL			,;	//13 -> Se cria variaveis Publicas
																				NIL			,;	//14 -> Se Sera considerado o Inicializador Padrao
																				NIL			,;	//15 -> Lado para o inicializador padrao
																				NIL			,;	//16 -> Opcional, Carregar Todos os Campos
																				NIL			,;	//17 -> Opcional, Nao Carregar os Campos Virtuais
																				aQueryCond	,;	//18 -> Opcional, Utilizacao de Query para Selecao de Dados
																				.F.			,;	//19 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																				.F.			,;	//20 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																				.T.			,;	//21 -> Carregar Coluna Fantasma
																				NIL			,;	//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																				NIL			,;	//23 -> Verifica se Deve verificar se o campo eh usado
																				NIL			,;	//24 -> Verifica se Deve verificar o nivel do usuario
																				NIL			,;	//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																				@aSpjKeys	,;	//26 -> [@]Array que contera as chaves conforme recnos
																				@lLock		,;	//27 -> [@]Se devera efetuar o Lock dos Registros
																				@lExclu		 ;	//28 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																		    );
															  ),;
											IF( lExecLock , ( lLock .and. lExclu ) , .T. );
		  			}
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Lock do Registro do SPJ									   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lLocks := WhileNoLock( "SPJ" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetSpj ) )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Consiste Informacoes Quando inclusao       				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nOpcX == 3 )	//Inclusao
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Quando nao Existirem Informacoes Para o Turno o Unico Elemento³
		³do aColsAll, Carregado pela GdMontaCols(), devera Ser Deletado³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( Len( aColsRec ) == 0 )
			IF !Empty( aColsAll )
				GdFieldPut( "GDDELETED" , .T. , 01 , aHeaderAll , @aColsAll )
			EndIF
		Else
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Na inclusao aColsRec devera Permanecer Vazio				   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			aColsRec := {}
		EndIF
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Quando nao Existirem Registros, Soh permitir a Inclusao      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpcX <> 3 ) .and. ( Len( aColsRec ) == 0 ) )
		Help(" ",1,"P080SP7NEX")
		Break
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Salva conteudo de aColsAll para Comparacao antes da Gravacao ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAntColsAll	:= aClone( aColsAll )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Campos Nao Alteraveis           					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aNotAltera , "PJ_DIA" 	)
	aAdd( aNotAltera , "PJ_SEMANA"	)
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Campos que nao Conterao na GetDados    					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aNotFields , "PJ_FILIAL"  )
	aAdd( aNotFields , "PJ_TURNO"  	)
	aAdd( aNotFields , "PJ_NMARCS" 	)
	aAdd( aNotFields , "PJ_MOUTDIA"	)
	IF ( lSeq )
		aAdd( aNotFields , "PJ_SEMANA"	)
	EndIF
	aAdd( aNotFields , "PJ_RHEXP" )	

	If cPaisLoc == 'RUS'
		aAdd( aNotFields , "PJ_HORMENO" )
		aAdd( aNotFields , "PJ_HORMAIS" )
		aAdd( aNotFields , "PJ_CODREF" )
		aAdd( aNotFields , "PJ_TPEXT" )
		aAdd( aNotFields , "PJ_TPEXTN" )
		aAdd( aNotFields , "PJ_NONAHOR" )
		aAdd( aNotFields , "PJ_RHEXP" )
		aAdd( aNotFields , "PJ_ENTRA3" )
		aAdd( aNotFields , "PJ_SAIDA3" )
		aAdd( aNotFields , "PJ_ENTRA4" )
		aAdd( aNotFields , "PJ_SAIDA4" )
		aAdd( aNotFields , "PJ_INTERV2" )
		aAdd( aNotFields , "PJ_INTERV3" )
		aAdd( aNotFields , "PJ_JND3CON" )
		aAdd( aNotFields , "PJ_JND4CON" )
		aAdd( aNotFields , "PJ_HRSINT2" )
		aAdd( aNotFields , "PJ_HRSINT3" )
		aAdd( aNotFields , "PJ_HRSTRA3" )
		aAdd( aNotFields , "PJ_HRSTRA4" )
	EndIf
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta o Cabecalho Real (aHeader )       					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nField := 1 To nUsadoAll
		IF ( aScan( aNotFields , aHeaderAll[ nField , 02 ] ) == 0 )
			++nUsado
			aAdd( aHeader , aClone( aHeaderAll[ nField ] ) )
		EndIF
	Next nField
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Campos Editaveis conforme aHeader				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nField := 1	To nUsado
		IF (;
				( aScan( aVirtual 		, aHeader[ nField , 02 ] ) == 0 ) .and. ;
		   		( aScan( aVisual  		, aHeader[ nField , 02 ] ) == 0 ) .and. ;
		   		( aScan( aNotFields		, aHeader[ nField , 02 ] ) == 0 ) .and. ;
		   		( aScan( aNotAltera		, aHeader[ nField , 02 ] ) == 0 )       ;
		  	)
			aAdd( aAltera , aHeader[ nField , 02 ] )
		EndIF			   
	Next nField
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica as Sequencias do Turno Corrente e carrega Tabela  Va³
	³ zia														   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aSeq := Pona080BldCols(	nOpcX 		,;	//01 ->	//Opcao do aRotina
							@aCols 		,;	//02 ->	//Array com os Detalhes para Alteracao
							aHeader		,;	//03 ->	//Cabecalho do aCols para Alteracao
							aColsAll	,;	//04 ->	//Array com Todos os Detalhes para o Turno
							aHeaderAll	,;	//05 ->	//Cabecalhjo do aColsAll
							lSeq		,;	//06 ->	//Se carregara ou nao a Sequencia
							.T.      	,;	//07 ->	//Se eh apenas para Contar as Sequencias
							@nCountSeq	 ;	//08 ->	//Numero de Sequencias
					   	  )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se Devera Continuar o Processo					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lContinua := ( ( lSeq ) .or. ( !( lSeq ) .and. ( nCountSeq > 0 ) ) ) )
		Break
	EndIF
	
	If Type("lAutoExec") == "L" .AND. lAutoExec
		// Monta o Bloco para Validação
		bValid := { |lValid| lValid := Pona080SPJChk(nOpcX,cSemana,lLe,1,.T.,@aCols,aHeader,@aColsAll,aHeaderAll,nCountSeq,( ++nVezChk > 1 ) ) }
		
		cSemana := ""
		
		If ( Inclui )
			cSemana := StrZero( ++nCountSeq , GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )
		EndIf
			
		If (nPosSem := aScan( aAutoCab, { |x| AllTrim(x[1]) == "PJ_SEMANA" } )) > 0
			cSemana := StrZero( Val(Trim(aAutoCab[nPosSem][2])) , GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )
		EndIf				
			
		If Empty(cSemana)
			Help(" ", 1, "P080SEM1") //A Semana/Sequencia deve ser preenchida e diferente de vazio.#Preencha corretamente a semana.
		EndIf
		
		//Valid da Semana
		If Inclui .AND. !(ValidMaxSeq( Val(cSemana) ) .and. ChkSeqAnt( @cSemana ) .and. Eval( bValid ))
			Help(" ", 1, "P080SEM2") //A Semana/Sequencia preenchida é invalida. Verifique se a sequencia informada já existe.#Preencha corretamente a semana.
		EndIf
		
		If Eval( bValid ) .And. MsGetDAuto(aAutoItem, 'Pona080Lok', "Pona080Tok", aAutoCab, nOpcx)
			nOpca:=1
		EndIf			
	Else
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta os Botoes para a EnchoiceBar             			  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		If ( ( Inclui ) .or. ( Altera ) ) //Na Inclusao ou Alteracao
			//Adiciona Botao para Replicar os Horarios
			bReplicate	:= {|| (;
								 IF( (;
								 		!Empty( cSemana ) .and.;
								 		Pona080SPJChk(nOpcX,cSemana,lLe,@n,NIL,@aCols,aHeader,@aColsAll,aHeaderAll,nCountSeq);
								 	  ),;
									  (;
		            					IF(	Pona080RplMarc(	aClone( aHeader )	,;
		            										aClone( aCols	)	,;
															aClone( aAltera )	,;
															aClone( aVisual )	 ;
														  )						,;
											oGet:ForceRefresh(),;
											NIL;
									  	  );
								 		),;
										MsgInfo( OemToAnsi( STR0003 ) , OemToAnsi( STR0002 ) );//"Informe uma Sequˆncia V lida"###"Sequˆncia Inv lida"
								  	),;
									oDlg:bSet15 := bSet15		,;
									oDlg:bSet24 := bSet24		,;
									SetKey( 15 , oDlg:bSet15 )	,;
									SetKey( 24 , oDlg:bSet24 )	,;
									SetKey( VK_F4 , bReplicate ) ;
								); 
							}
			aAdd(; 
					aButtonsEnch ,;
									{;
										"DESTINOS"			,;
		    							bReplicate			,;
		        	   					OemToAnsi( STR0001 ),;//"Replicar Informa‡”es <F4>..."
		        	   					OemToAnsi( STR0299 ) ;//"Replicar"
		            				};
		         )					 	
		     
		    If cPaisLoc == "RUS"
				bImport	:= { || Pon080Import(aCols) }
				aAdd(; 
						aButtonsEnch ,;
						{;
							"IMPORT"				,;
							bImport					,;
							OemToAnsi( STR0393 ) 	,;//"Import"
							OemToAnsi( STR0393 )	 ;//"Importar"
						};
					)
	
				bClear	:= { || Pon080Clear(aCols) }
				aAdd(; 
						aButtonsEnch ,;
						{;
							"CLEAR"					,;
							bClear					,;
							OemToAnsi( STR0392 ) 	,;//"Clear"
							OemToAnsi( STR0392 )	 ;//"Clear"
						};
					)
			EndIf
			
		EndIf
		
		bCalendario	:= {|| (;
							 	Pona080Calend( ( ( Inclui ) .or. ( Altera ) ) )	,;
								oDlg:bSet15 := bSet15							,;
								oDlg:bSet24 := bSet24							,;
								SetKey( 15 , oDlg:bSet15 )						,;
								SetKey( 24 , oDlg:bSet24 )						,;
								SetKey( VK_F5 , bCalendario )					 ;
							); 
						}
		aAdd(; 
				aButtonsEnch ,;
								{;
									"S4SB014N"				,;
	   		       					bCalendario				,;
	   	    	   					OemToAnsi( STR0090 ) 	,;//"Consultar o Calend rio <F5>..."
	   	    	   					OemToAnsi( STR0390 ) 	;//"Consultar"
	   	        				};
	   	     )
			
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Disponibiliza "DIALOG BOX" para Manutencao ou Visualizacao da³
		³ Tabela													   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		DEFINE FONT oFont		NAME "Arial" SIZE 0,-11 BOLD
		DEFINE FONT oFontBig	NAME "Arial" SIZE 07,25 BOLD
		DEFINE MSDIALOG oDlg TITLE IIF(cPaisLoc <> "RUS",OemToAnsi(STR0040 ),OemToAnsi(STR0397 )) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL									   			// 'Tabela de Horario Padrao
		
			@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup TO ( aObjSize[1,3] - 5 ),( ( aObjSize[1,4]/100*80 - 2 ) ) LABEL OemToAnsi(STR0042) OF oDlg PIXEL				// 'Turno:'
			oGroup:oFont:= oFont
			@ aObjSize[1,1] , ( aObjSize[1,4]/100*80 ) GROUP oGroup TO ( aObjSize[1,3] - 5 ),aObjSize[1,4] LABEL OemToAnsi(IF(lSeq,STR0043,STR0004))	OF oDlg PIXEL	// "Sequˆncia:"###//"No.Sequˆncias"
			oGroup:oFont:= oFont
		
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Mostra a Descricao do Turno na Caixa de Dialogo			  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			@ ( aObjSize[1,1] + 10 ) , 010.2 SAY LEFT(SR6->( R6_TURNO+" - "+AllTrim(R6_DESC)),60) 	SIZE 250,10 OF oDlg PIXEL FONT oFontBig 
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Mostra a Sequencia de Turno na Caixa de Dialogo			  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( lSeq )
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Monta o Bloco para Validacao                   			  ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF ( Inclui )
					cSemana := StrZero( ++nCountSeq , GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )
					bValid := { |lValid| lValid := Pona080SPJChk(nOpcX,cSemana,lLe,@n,.T.,@aCols,aHeader,@aColsAll,aHeaderAll,nCountSeq,( ++nVezChk > 1 ) ) , ;
								 	IF( lValid , ( oGet:ForceRefresh() , oGet:oBrowse:SetFocus() , lValid ) , lValid ) }
								 	
					@ ( aObjSize[1,1] + 09 ) , ( aObjSize[1,4]/100*80 ) + ( ( aObjSize[1,4] - ( aObjSize[1,4]/100*80 ) ) / 3 )  MSGET oMsGet VAR cSemana PICTURE "99" SIZE 010,10 OF oDlg PIXEL FONT oFont
					oMsGet:bValid := { || ( cSemana := StrZero( Val( cSemana ) , GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) ) ) ,;
										  ValidMaxSeq( nCountSeq ) .and. ChkSeqAnt( @cSemana ) .and. Eval( bValid );
									  }
				Else
					bValid := { |lValid| lValid := fVldNTrab( .F. , oComboBox ) , ;
								 	IF( lValid , ( Pona080SPJChk(nOpcX,cSemana,lLe,@n,.T.,@aCols,aHeader,@aColsAll,aHeaderAll,nCountSeq,( ++nVezChk > 1 ) ) , oGet:ForceRefresh() , oGet:oBrowse:SetFocus() , lValid ) , lValid ) }
					@ ( aObjSize[1,1] + 09 ) , ( aObjSize[1,4]/100*80 ) + ( ( aObjSize[1,4] - ( aObjSize[1,4]/100*80 ) ) / 3 ) COMBOBOX oComboBox VAR cSemana ITEMS aSeq SIZE 025,10 OF oDlg PIXEL FONT oFont WHEN ( cLstSemana := cSemana , .T. )
					oComboBox:bChange:= bValid 				
				EndIF
			Else
			 	@ ( aObjSize[1,1] + 09 ) , ( aObjSize[1,4]/100*80 ) + ( ( aObjSize[1,4] - ( aObjSize[1,4]/100*80 ) ) / 3 ) SAY StrZero( nCountSeq , GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) ) SIZE 025,10 OF oDlg PIXEL FONT oFontBig
			EndIF
			
			oGet := MsGetDados():New(aObjSize[2,1],aObjSize[2,2],aObjSize[2,3],aObjSize[2,4],nOpcx,"Pona080Lok","Pona080Tok","",NIL,aAltera,NIL,NIL,nLenaDias)
				
		ACTIVATE MSDIALOG oDlg ON INIT (;
														IF( ValType( oComboBox ) == "O",;
																Eval( oComboBox:bChange ),;
																NIL;
														   ),;		
														SetKey( VK_F4 , bReplicate  )		,;
														SetKey( VK_F5 , bCalendario )		,;
														EnchoiceBar(	oDlg				,;
																		bSet15				,;
		        	 		                  							bSet24				,;
																	   	NIL					,;
			            												aButtonsEnch		 ;
		         				                  		   			);
		         				                  	 )	 CENTERED  			
	EndIf
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura as Teclas de Atalho                     	  		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RestKeys( aSvKeys , .T. )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Grava as Informacoes no SPJ                      	  		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpcx == 3 .or. nOpcx == 4 ) .and. ( nOpcA == 1 ) )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Transfere os Dados do aCols para o aColsAll                  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		Pona080AllTrf( aCols , aHeader , @aColsAll , aHeaderAll , cSemana )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Apenas se Houveram Modificacoes                  	  		  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF !( fCompArray( aAntColsAll , aColsAll ) )
			Pona080Grava( aColsRec , nOpcX , cSemana )
		EndIF
	EndIF

End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Carrega Chave para Liberacao do Lock						   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lExecLock )
	aAdd( aSpjKeys , cKeyLock )
EndIF

Return( nOpcA )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³ChkSeqAnt	 ³Autor³Marinaldo de Jesus	  ³ Data ³01/12/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Garantir que as Sequencias na Tabela sejam cadastradas em or³
³          ³dem															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function ChkSeqAnt( cSeqAtu , lMaxSeq )

Local lSeqOk	:= .T.

Local bSeqOk
Local cSeqAnt
Local nSeq
Local nTamSeq

DEFAULT lMaxSeq := .F.

Begin Sequence

	nSeq	:= Val( cSeqAtu )

	IF ( nSeq == 1 )
		Break
	EndIF

	cSeqAnt	:= cSeqAtu
	nTamSeq	:= GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" )

	IF ( nSeq < 1 )
		nSeq := 1
		cSeqAtu := StrZero( nSeq , nTamSeq )
		Break
	EndIF

	cSeqAnt := StrZero( --nSeq , nTamSeq )
	bSeqOk	:= { || SPJ->( dbSeek( xFilial( "SPJ" ) + SR6->R6_TURNO + cSeqAnt , .F. ) ) }
	IF ( lSeqOk := Eval( bSeqOk ) )
		Break
	Else
		cSeqAtu := cSeqAnt
		While !( lSeqOk := ChkSeqAnt( @cSeqAtu , @lMaxSeq ) )
			IF ( lMaxSeq )
				Break
			EndIF
			cSeqAnt := StrZero( --nSeq , nTamSeq )
			cSeqAtu := cSeqAnt
		EndDo
	EndIF
	
	IF Empty( StrTran( cSeqAtu , "*" , "" ) )
		cSeqAtu := Str( RetMaxSeq() + 1 )
	EndIF
	nSeq := Val( cSeqAtu )
	
	IF ( lMaxSeq := !( lSeqOk := ValidMaxSeq( nSeq ) ) )
		cSeqAtu	:= StrZero( --nSeq , nTamSeq )
		Break
	EndIF

End Sequence

Return( lSeqOk )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³RetMaxSeq	 ³Autor³Marinaldo de Jesus	  ³ Data ³02/12/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Retorna o Numero Maximo de Sequencias Permitidas para a Tabe³
³          ³la de Horario Padrao										³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function RetMaxSeq()

Local nTamSeq	:= GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" )
Local nMaxSeq	:= Val( Replica( "9" , nTamSeq ) )

Return( nMaxSeq )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³ValidMaxSeq	 ³Autor³Marinaldo de Jesus	  ³ Data ³02/12/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validar o Numero Maximo de Sequencias Permitidas para a Tabe³
³          ³la de Horario Padrao										³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function ValidMaxSeq( nSeqAtu )

Local cMsg
Local lNoMaxSeq

IF !( lNoMaxSeq := ( nSeqAtu <= RetMaxSeq() ) )
	cMsg := STR0097 //"Excedeu o N£mero de Sequências.
	cMsg += CRLF + CRLF
	cMsg += STR0098	//"Sequência Atual:
	cMsg += AllTrim( Str( nSeqAtu ) )
	cMsg += CRLF + CRLF
	cMsg += STR0099 //Máximo permitido: 
	cMsg += AllTrim( Str( RetMaxSeq() ) )
	MsgInfo( OemToAnsi( cMsg ) , OemToAnsi( STR0068 ) )	//"Atenção"
EndIF

Return( lNoMaxSeq )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Grava³Autor³ Marinaldo de Jesus	  ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Gravar Informacoes no SPJ                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080Grava( aColsRec , nOpcX , cSemana )

Local aColsAux		:= {}
Local aCposPos		:= {}
Local lAddNew		:= .F.
Local nCol			:= 0
Local nCols			:= Len( aColsAll	)
Local nField		:= 0
Local nFields		:= Len( aHeaderAll	)
Local nRec			:= 0
Local nRecnos		:= Len( aColsRec 	)
Local nPosField		:= 0
Local nPosDeleted	:= GdFieldPos( "GDDELETED" , aHeaderAll )
Local nPosSemana	:= GdFieldPos( "PJ_SEMANA" , aHeaderAll )
Local lTSREP		:= SuperGetMv( "MV_TSREP"  , NIL , .F. )
Local lTsaInt
Private oObjREP		:= Nil

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Obtem o Posicionamento dos Campos                	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
For nField := 1 To nFields 
	nPosField := SPJ->( FieldPos( aHeaderAll[ nField , 02 ] ) )
	aAdd( aCposPos , { aHeaderAll[ nField , 02 ] , nPosField } )
Next nField

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Elimina os Elementos Deletados do aColsAll       	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( aScan( aColsAll , { |x| x[ nPosDeleted ] } ) > 0 )
	For nCol := 1 To nCols
		IF ( aColsAll[ nCol , nPosDeleted ] )
			Loop
		EndIF
		aAdd( aColsAux , aClone( aColsAll[ nCol ] ) )
	Next nCol
	aColsAll := aClone( aColsAux )
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Na Inclusao soh Inclui os Novos Registros         	  	  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( nOpcX == 3 )
	IF ( aScan( aColsAll , { |x| ( x[ nPosSemana ] <> cSemana ) } ) > 0 )
		For nCol := 1 To nCols
			IF !( aColsAll[ nCol , nPosSemana ] == cSemana )
				Loop
			EndIF
			aAdd( aColsAux , aClone( aColsAll[ nCol ] ) )
		Next nCol
		aColsAll := aClone( aColsAux )
	EndIF	
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica se Deve Adicionar novos Registros       	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lAddNew := ( nRecnos == 0 ) )
	nRecnos := Len( aColsAll )
EndIF

//-- Inicializa a integracao via WebServices TSA
If lTSREP
	oObjREP := PTSREPOBJ():New()	
EndIF

Begin Transaction
	nFields := Len( aCposPos )
	IF ( nRecnos > 0 )
		For nRec := 1 To nRecnos
			IF !( lAddNew )
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Soh grava o que efetivamente foi alterado        	  		  ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF ( fCompArray( aColsAll[ nRec ] , aAntColsAll[ nRec ] ) )
					Loop
				EndIF
				SPJ->( dbGoto( aColsRec[ nRec ] ) )
			EndIF
			IF SPJ->( RecLock( "SPJ" , lAddNew ) )
				For nField := 1 To nFields
					IF ( ( nPosField := aCposPos[ nField , 02 ] ) > 0 )
						SPJ->( FieldPut( nPosField , aColsAll[ nRec , nField ] ) )
					EndIF
				Next nField
				SPJ->( MsUnlock() )

			EndIF	
		Next nRec
	EndIF
	SPJ->( EvalTrigger() )
	
	If lIntegdef
		FwIntegdef( "PONA080" )
	EndIf

	If lTSREP
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Executa o WebServices TSA - Turno de Trabalho                ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		lTsaInt := SuperGetMv( "MV_TSAINT" , NIL , .T., SPJ->PJ_FILIAL)

		If nOpcX == 3 .Or. lAddNew 
			oObjREP:WSShiftWork( 1 )
		Else
			If !lTsaInt .And. nOpcX == 4
				oObjREP:WSShiftWork( 1 )
			Else
				oObjREP:WSShiftWork( 2 )
				oObjREP:WSSCale( 4 )
			EndIf
		Endif
				
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Grava o ontrole de exportacao para o TSA - Usuario           ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

		oObjRep:WSUpdRHExp( "SR6" )
	EndIf

End Transaction

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Lok  ³Autor³Marinaldo de Jesus     ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Critica linha digitada                                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona080Lok( oBbj )
         
Local cMsgInfo		:= ""
Local lRet			:= .T.
Local nCtMarc		:= 0      
Local nX			:= 0
Local nHeader		:= Len( aHeader )
Local nPosTpDia		:= GdFieldPos( 'PJ_TPDIA'   )
Local nPosHr1		:= GdFieldPos( 'PJ_HRSTRAB' )
Local nPosHr2		:= GdFieldPos( 'PJ_HRSTRA2' ) 
Local nPosHr3		:= GdFieldPos( 'PJ_HRSTRA3' )
Local nPosHr4		:= GdFieldPos( 'PJ_HRSTRA4' )
Local nPosHr5		:= 0
Local nPosHr6		:= 0
Local nPosTot		:= GdFieldPos( 'PJ_HRTOTAL' ) 
Local nPosHi1		:= GdFieldPos( 'PJ_HRSINT1' ) 
Local nPosHi2   	:= GdFieldPos( 'PJ_HRSINT2' ) 
Local nPosHi3		:= GdFieldPos( 'PJ_HRSINT3' )
Local nPosHi4		:= 0
Local nPosHi5		:= 0
Local nPosMen		:= GdFieldPos( 'PJ_HORMENO' ) 
Local nPosMai		:= GdFieldPos( 'PJ_HORMAIS' )
Local nColsMarc		:= SuperGetmv( "MV_COLMARC" , NIL , 2 , cFilAnt )
Local lCustom		:= cPaisLoc $ "BRA" .And. (nColsMarc == 5 .Or. nColsMarc == 6) 


If lCustom
	nPosHr5		:= GdFieldPos( 'PJ_HRSTRA5' )
	nPosHr6		:= GdFieldPos( 'PJ_HRSTRA6' )
	nPosHi4		:= GdFieldPos( 'PJ_HRSINT4' )
	nPosHi5		:= GdFieldPos( 'PJ_HRSINT5' )
EndIf

Begin Sequence

	//-- Nao permite campos em branco
	For nX := 1 To nHeader
		IF Subs(aHeader[nX,2],1,8) $ 'PJ_ENTRA*PJ_SAIDA'
			IF aCols[n,nX] > 0 .or. (aCols[n,nX] == 0 .and. Subs(aHeader[Min(nHeader,nX+1),2],1,8)$"PJ_ENTRA,PJ_SAIDA" .and. nHeader > nX .and. aCols[n,nX+1] > 0) .or. aCols[n,nX] == 0 .and. nCtMarc%2 # 0
				nCtMarc++
			EndIF
		EndIF
	Next nX
	
	IF nCtMarc > 0 .and. nCtMarc % 2 > 0 .and. aCols[n, nPosTpDia] == 'S'
		// Nao sao permitidas marcacoes impares.
		Help(' ',1,'PNA080MPAR')
		lRet := .F.
		Break
	EndIF
	
	IF nPosMen > 0 .and. nPosMai > 0 .And. (Empty( aCols[ n , nPosMen ] ) .or. Empty( aCols[ n , nPosMai ] ))
		// Horas Inferior ou Horas Superior Nao podem ser zero
		IF Empty( aCols[ n , nPosMen ] )
			Help(' ',1,'HORMAMEZER',,STR0060 + aHeader[ nPosMen , 01 ] + " - " + aHeader[ nPosMen , 02 ]  , 5 , 0 ) //"Campo: "	
		Else
			Help(' ',1,'HORMAMEZER',,STR0060 + aHeader[ nPosMai , 01 ] + " - " + aHeader[ nPosMai , 02 ] , 5 , 0 ) //"Campo: "
		EndIF
		lRet := .F. 
		Break
	EndIF
	
	//Grava Horas Trabalhadas 1a. Jornada
	IF nPosHr1 > 0 .And. !Empty( nPosHr1 )
		aCols[ n , nPosHr1 ] := fHrsTrabGat( "H" ,,, "1" )
	EndIF
	
	//Grava Horas Trabalhadas 2a. Jornada
	IF nPosHr2 > 0 .And. !Empty( nPosHr2 )
		aCols[ n , nPosHr2 ] := fHrsTrabGat( "H" ,,, "2" )
	EndIF
	
	//Grava Horas Trabalhadas 3a. Jornada
	IF nPosHr3 > 0 .And. !Empty( nPosHr3 )
		aCols[ n , nPosHr3 ] := fHrsTrabGat( "H" ,,, "3" )
	EndIF
	
	//Grava Horas Trabalhadas 4a. Jornada
	IF nPosHr4 > 0 .And. !Empty( nPosHr4 )
		aCols[ n , nPosHr4 ] := fHrsTrabGat( "H" ,,, "4" )
	EndIF

	If lCustom
		//Grava Horas Trabalhadas 4a. Jornada
		IF nPosHr5 > 0 .And. !Empty( nPosHr5 )
			aCols[ n , nPosHr5 ] := fHrsTrabGat( "H" ,,, "5" )
		EndIF

		//Grava Horas Trabalhadas 5a. Jornada
		IF nPosHr6 > 0 .And. !Empty( nPosHr6 )
			aCols[ n , nPosHr6 ] := fHrsTrabGat( "H" ,,, "6" )
		EndIF
	EndIf
	
	//Grava Horas 1o. Intervalo
	IF nPosHi1 > 0 .And. !Empty( nPosHi1 )
		aCols[ n , nPosHi1 ] := fHrsTrabGat( "I",,,"1" )
	EndIF
	
	//Grava Horas 2o. Intervalo
	IF nPosHi2 > 0 .And. !Empty( nPosHi2 )
		aCols[ n , nPosHi2 ] := fHrsTrabGat( "I",,,"2" )
	EndIF
	
	//Grava Horas 3o. Intervalo
	IF nPosHi3 > 0 .And. !Empty( nPosHi3 )
		aCols[ n , nPosHi3 ] := fHrsTrabGat( "I",,,"3" )
	EndIF

	If lCustom
		//Grava Horas 4o. Intervalo
		IF nPosHi4 > 0 .And. !Empty( nPosHi4 )
			aCols[ n , nPosHi4 ] := fHrsTrabGat( "I",,,"4" )
		EndIF

		//Grava Horas 5o. Intervalo
		IF nPosHi5 > 0 .And. !Empty( nPosHi5 )
			aCols[ n , nPosHi5 ] := fHrsTrabGat( "I",,,"5" )
		EndIF
	EndIf
	
	//Grava Total de Horas ( Trabalhadas + Intervalo )
	IF !Empty( nPosTot )
		aCols[ n , nPosTot ] := 0
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , If( nPosHi1 > 0 ,aCols[ n , nPosHi1 ],0) )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , If( nPosHi2 > 0 ,aCols[ n , nPosHi2 ],0) )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , If( nPosHi3 > 0 ,aCols[ n , nPosHi3 ],0) )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , If( nPosHr1 > 0 ,aCols[ n , nPosHr1 ],0) )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , If( nPosHr2 > 0 ,aCols[ n , nPosHr2 ],0) )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , If( nPosHr3 > 0 ,aCols[ n , nPosHr3 ],0) )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , If( nPosHr4 > 0 ,aCols[ n , nPosHr4 ],0) )
		If lCustom
				aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , If( nPosHr5 > 0 ,aCols[ n , nPosHr5 ],0) )
				If nColsMarc == 6
					aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , If( nPosHr6 > 0 ,aCols[ n , nPosHr6 ],0) )
				EndIf
		EndIf
	EndIF
	
	//Verifica se Existe Saida de Intervalo sem Entrada correspondente
	IF ( ( ( aCols[ n , nPosHi1 ] <> 0 ) .or. ( GdFieldGet( 'PJ_INTERV1' ) == "S" ) ) .and. ( aCols[ n , nPosHr2 ] == 0 ) )
		lRet		:= .F.
		cMsgInfo	:= STR0092  //"Tabela n„o pode terminar com uma saida de intervalo"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0093	//"O intervalo: "
		cMsgInfo	+= " 1 "
		cMsgInfo	+= STR0094  //"Nao possui a entrada correspondente"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0095  //"Altere o conteudo do campo: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_INTERV1' ) , 01 ]
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo    += STR0096	//"ou informe Hor rio nos campos: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_ENTRA2' ) , 01 ]
		cMsginfo	+= " / " 
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_SAIDA2' ) , 01 ]
		Break		
	EndIF

	//Verifica se Existe Saida de Intervalo sem Entrada correspondente
	IF ( ( ( nPosHi2 > 0 .And. aCols[ n , nPosHi2 ] <> 0 ) .or. ( GdFieldGet( 'PJ_INTERV2' ) == "S" ) ) .And. nPosHr3 > 0 .And. ( aCols[ n , nPosHr3 ] == 0 ) )
		lRet		:= .F.
		cMsgInfo	:= STR0092  //"Tabela n„o pode terminar com uma saida de intervalo"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0093	//"O intervalo: "
		cMsgInfo	+= " 2 "
		cMsgInfo	+= STR0094  //"Nao possui a entrada correspondente"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0095  //"Altere o conteudo do campo: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_INTERV2' ) , 01 ]
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo    += STR0096	//"ou informe Hor rio nos campos: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_ENTRA3' ) , 01 ]
		cMsginfo	+= " / " 
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_SAIDA3' ) , 01 ]
		Break		
	EndIF

	//Verifica se Existe Saida de Intervalo sem Entrada correspondente
	IF ( ( ( nPosHi3 > 0 .And. GdFieldPos( 'PJ_INTERV3' ) > 0 .And. aCols[ n , nPosHi3 ] <> 0 ) .or. ( GdFieldGet( 'PJ_INTERV3' ) == "S" ) ) .And. nPosHr4 > 0 .And.( aCols[ n , nPosHr4 ] == 0 ) )
		lRet		:= .F.
		cMsgInfo	:= STR0092  //"Tabela n„o pode terminar com uma saida de intervalo"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0093	//"O intervalo: "
		cMsgInfo	+= " 3 "
		cMsgInfo	+= STR0094  //"Nao possui a entrada correspondente"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0095  //"Altere o conteudo do campo: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_INTERV3' ) , 01 ]
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo    += STR0096	//"ou informe Hor rio nos campos: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_ENTRA4' ) , 01 ]
		cMsginfo	+= " / " 
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_SAIDA4' ) , 01 ]
		Break		
	EndIF

End Sequence

IF ( !( lRet) .and. !Empty( cMsgInfo ) )
	//"Existe inconsistˆncias na Tabela de Hor rio"
	MsgInfo( OemToAnsi( cMsgInfo ) , OemToAnsi( STR0091 ) )
EndIF
	
Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Tok ³ Autor ³Marinaldo de Jesus    ³ Data ³28/02/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validacao das Linhas Digitadas na GetDados					³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona080Tok( oObj )

Local lRet			:= .T.
Local lExibMsg		:= .F.
Local nI			:= 0
Local nItera		:= Len( aCols )
Local nSvn			:= n
Local nPosTpDia		:= GdFieldPos( 'PJ_TPDIA' )
Local nPosEntra1	:= GdFieldPos( 'PJ_ENTRA1' )
Local nPosSaida1	:= GdFieldPos( 'PJ_SAIDA1' )
Local cSemAux		:= cLstSemana 

For nI := 1 To nItera
	n := nI
	If !( lRet := Pona080Lok( oObj ) )
		Exit
	EndIF
Next nI

n := nSvn

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080SPJChk³Autor³Marinaldo de Jesus    ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validar a Semana Digitada e Transferir os Dados para o Array³
³          ³Master ( aColsAll )										    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080SPJChk(	nOpcX 		,;
								cSemana 	,;
								lLe			,;
								nLinCols	,;
								lValid		,;
								aCols		,;
								aHeader		,;
								aColsAll	,;
								aHeaderAll	,;
								nCountSeq	,;
								lTransfToAll ;
							  )		

Local lRet			:= .T.
Local nSvN			:= nLinCols
Local nPos			:= 0
Local nPos1			:= 0
Local nSemana		:= GdFieldPos( "PJ_SEMANA" , aHeaderAll )

DEFAULT lValid			:= .F.
DEFAULT lTransfToAll	:= .F.

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se a Sequencia estiver Vazia                                 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lRet := !Empty(cSemana) )
		Help(" ",1,"CSEMANA")
		Break
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Procura a Sequencia no aColsAll	                          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nPos := aScan( aColsAll , { |x| x[nSemana] == cSemana 	} )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Retorna o Help correspondente  	                          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( lRet ) .and. ( nPos > 0 ) .and. !( lLe ) )
	   Help(" ",1,"P080SP7EXI")
	   lRet := .F.
	   Break
	ElseIF ( ( lRet ) .and. ( nPos == 0 ) .and. ( lLe ) )
	   Help(" ",1,"P080SP7NEX")
	   lRet := .F.
	   Break
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Tranferindo Dados e Remontando o aCols		                  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( lRet ) .and. ( lLe ) .and. ( lValid ) )
		IF ( ( lTransfToAll ) .and. ( nOpcX == 4 ) )		
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Transfere os Dados do aCols para o aColsAll                  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( ( nPos1	:= aScan( aColsAll , { |x| x[nSemana] == cLstSemana	} ) ) > 0 )
				Pona080AllTrf( aCols , aHeader , @aColsAll , aHeaderAll , cLstSemana )
			EndIF
		EndIF
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Monta Novo aCols Conforme a Sequencia						  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		Pona080BldCols(	nOpcX 		,;	//01 ->	//Opcao do aRotina
						@aCols 		,;	//02 ->	//Array com os Detalhes para Alteracao
						aHeader		,;	//03 ->	//Cabecalho do aCols para Alteracao
						aColsAll	,;	//04 ->	//Array com Todos os Detalhes para o Turno
						aHeaderAll	,;	//05 ->	//Cabecalhjo do aColsAll
						NIL			,;	//06 ->	//Se carregara ou nao a Sequencia
						NIL			,;	//07 ->	//Se eh apenas para Contar as Sequencias
						nCountSeq	 ;	//08 ->	//Numero de Sequencias
				  	  )
	EndIF

End Sequence
	
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Reposiona aCols											  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
nLinCols := IF( lValid , 1 , nSvN )

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080RplMarc  ³Autor³Marinaldo de Jesus ³ Data ³22/01/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Replica informacao da Linha de Marcacoes para os Demais Dias³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³lRet														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080RplMarc( aLocHeader , aLocCols , aLocAltera , aLocVisual )

Local aSvKeys		:= GetKeys()
Local aCloneCols	:= { aClone( aLocCols[n] ) }
Local aCloneHeader	:= aClone( aLocHeader )
Local aSvLocCols	:= aClone( aLocCols )
Local aDiaSemana	:= {}
Local aListBox		:= {}
Local bSet15		:= { || nOpcA := 1 , IF( oGet:TudoOk() , ( RestKeys( aSvKeys , .T. ) , oDlg:End() ) , nOpcA := 0 ) }
Local bSet24		:= { || RestKeys( aSvKeys , .T. ) , oDlg:End() , nOpcA := 0 }
Local nX			:= 0
Local nY			:= 0
Local nLenCols		:= 0
Local nLenHeader	:= 0
Local nLenAlter		:= 0
Local nLenVisual	:= 0
Local nPosDia		:= 0
Local nOpcA			:= 0
Local nSvN			:= n
Local lRet			:= .F.
Local oDlg
Local oGet
Local oFont
Local oGroup
Local oFontBig
Local oMain
Local oCheckSeg
Local oCheckTer
Local oCheckQua
Local oCheckQui
Local oCheckSex
Local oCheckSab
Local oCheckDom
Local oListBox
Local oBtnMarcTod
Local oBtnDesmTod
Local oBtnInverte
Local oOk			:= LoadBitmap( GetResources(), "LBOK" )
Local oNo			:= LoadBitmap( GetResources(), "LBNO" )
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}

aCols	:= {}
aHeader := {}

IF ( ( nPosDia := aScan( aAltera , { |x| Upper( AllTrim( x ) ) == "PJ_DIA" } ) ) > 0 )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Elimina os Elementos Correspondentes ao Tipo do Dia         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	( aDel(aLocAltera,nPosDia) , aSize(aLocAltera,Len( aLocAltera )-1) )
EndIF

IF ( ( nPosDia := GdFieldPos( "PJ_DIA" , aLocHeader ) ) > 0 )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega o Array aDiaSemana com a Descricao dos Dias da Semana³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aEval( aLocCols , { |x,y| aAdd( aDiaSemana , { IF( y < 6 , .T. , .F. ) , aLocCols[ y , nPosDia ] } ) } )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Elimina os Elementos Correspondentes ao Tipo do Dia         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nLenCols	:= Len( aCloneCols[1] )
	nLenHeader	:= Len( aCloneHeader )

	( aDel(aCloneCols[1],nPosDia) , aSize(aCloneCols[1],--nLenCols) )
	( aDel(aCloneHeader,nPosDia) , aSize(aCloneHeader,--nLenHeader) )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Monta a Estrutura do aCols e do aHeader padrao para Digitacao³
	³das Informacoes da Tabela de Horario                    	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aCols	:= aClone( aCloneCols )
	aHeader	:= aClone( aCloneHeader )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega no aListBox os Campos para que poderao ser Alterados ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nLenAlter := Len( aLocAltera )
	For nX := 1 To nLenAlter
		IF ( ( nY := GdFieldPos( aLocAltera[ nX ] )  ) > 0 )
			aAdd( aListBox , { .T. , aHeader[ nY , 1 ],nY } )
		EndIF
	Next Nx
	nLenVisual := Len( aLocVisual )
	For nX := 1 To nLenVisual
		IF ( ( nY := GdFieldPos( aLocVisual[ nX ] )  ) > 0 )
			IF !Empty( aHeader[ nY , 1 ] )
				aAdd( aListBox , { .T. , aHeader[ nY , 1 ],nY } )
			EndIF	
		EndIF
	Next Nx
	
	aSort(aListBox,,, {|x,y| x[3] < y[3]} )
	aEval(aListBox, {|x| x:= { x[1], x[2] } } )          
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdvSize		:= MsAdvSize()
	aAdvSize[5]:=	(aAdvSize[5]/100) * 70.5
	aAdvSize[6]:= 	(aAdvSize[6]/100) * 95.5
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }					 
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
	
	aObjSize[1,2] := 12
			
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Monta Caixa de Dialogo para Digitacao que Contera os  Objetos³
	³GetDados, ListBox e CheckBox								  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	DEFINE FONT oFont		NAME "Arial" SIZE 0,-11 BOLD
	DEFINE FONT oFontBig	NAME "Arial" SIZE 07,25 BOLD
                                                     
	DEFINE MSDIALOG oDlg TITLE IIF(cPaisLoc <> "RUS",OemToAnsi(STR0040 ),OemToAnsi(STR0397 )) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMain PIXEL			// 'Tabela de Horario Padrao
	                                                                                          
    	@ aObjSize[1,3] *0.075,aObjSize[1,2] * 0.4 GROUP oGroup TO aObjSize[1,3] *0.158,aObjSize[1,3] * 0.92 LABEL OemToAnsi(STR0042) OF oDlg PIXEL	// 'Turno:'
		oGroup:oFont := oFont         
	                                                      
		@ aObjSize[1,3] *0.075,aObjSize[1,3] * 0.93 GROUP oGroup TO aObjSize[1,3] *0.158,aObjSize[1,4] * 0.7 LABEL OemToAnsi(STR0043) OF oDlg PIXEL	// "Sequˆncia:"
		oGroup:oFont := oFont
                    
    	@ aObjSize[1,3] * 0.10,aObjSize[1,2] * 0.75 SAY SR6->( R6_TURNO+" - "+AllTrim(R6_DESC))	SIZE aObjSize[1,4] * 0.412, aObjSize[1,3] * 0.055 OF oDlg PIXEL FONT oFontBig
		@ aObjSize[1,3] * 0.10,aObjSize[1,3] * 0.96 SAY cSemana 								SIZE aObjSize[1,3] * 0.035, aObjSize[1,3] * 0.055 OF oDlg PIXEL FONT oFontBig
	                                                                                              
    	oGet := MSGetDados():New(aObjSize[1,3] * 0.18, aObjSize[1,2] * 0.4, aObjSize[1,3]*0.5, aObjSize[1,4] * 0.7,4,"Pona080Lok","Pona080Tok","",NIL,aLocAltera,,,1)
                             
		@ aObjSize[1,3] * 0.515,aObjSize[1,2] * 0.4 GROUP oGroup TO aObjSize[1,3] * 0.87, aObjSize[1,3] * 0.30 LABEL OemToAnsi( STR0061 ) OF oDlg PIXEL				// "Dia da Semana:"
		oGroup:oFont := oFont
                   
		@ aObjSize[1,3]*0.57,	(aObjSize[1,3]/100) * 3.3 CHECKBOX oCheckSeg VAR aDiaSemana[1,1] PROMPT OemToAnsi( aDiaSemana[1,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,3]*0.61,	(aObjSize[1,3]/100) * 3.3 CHECKBOX oCheckTer VAR aDiaSemana[2,1] PROMPT OemToAnsi( aDiaSemana[2,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,3]*0.65,	(aObjSize[1,3]/100) * 3.3 CHECKBOX oCheckQua VAR aDiaSemana[3,1] PROMPT OemToAnsi( aDiaSemana[3,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,3]*0.69,	(aObjSize[1,3]/100) * 3.3 CHECKBOX oCheckQui VAR aDiaSemana[4,1] PROMPT OemToAnsi( aDiaSemana[4,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,3]*0.73,	(aObjSize[1,3]/100) * 3.3 CHECKBOX oCheckSex VAR aDiaSemana[5,1] PROMPT OemToAnsi( aDiaSemana[5,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,3]*0.77,	(aObjSize[1,3]/100) * 3.3 CHECKBOX oCheckSab VAR aDiaSemana[6,1] PROMPT OemToAnsi( aDiaSemana[6,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,3]*0.81,	(aObjSize[1,3]/100) * 3.3 CHECKBOX oCheckDom VAR aDiaSemana[7,1] PROMPT OemToAnsi( aDiaSemana[7,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
	                                                                                                                                          
		@ aObjSize[1,3] * 0.53, aObjSize[1,3] * 0.32 LISTBOX oListBox FIELDS HEADER "" , OemToAnsi( StrTran( AllTrim( STR0060 ) , ":" , "" ) ), SIZE aObjSize[1,3]*0.45, aObjSize[1,3]*0.33 PIXEL ON DBLCLICK (Pona080BoxMarc(oListBox,@aListBox,@oDlg),oListBox:nColPos := 1,oListBox:Refresh()) NOSCROLL //"Campo: "
	
		oListBox:SetArray(aListBox)
		oListBox:bLine := { || { IF(aListBox[oListBox:nAt,1],oOk,oNo),aListBox[oListBox:nAt,2] } }
                                                                                                     
		@ aObjSize[1,3] * 0.53, aObjSize[1,3] * 0.79 BUTTON oBtnMarcTod	PROMPT OemToAnsi( STR0062 )		SIZE aObjSize[1,3] * 0.267, aObjSize[1,3] * 0.07 OF oDlg	PIXEL ACTION (Pona080BoxMarc( oListBox , @aListBox , @oDlg , "M" ),oListBox:nColPos := 1,oListBox:Refresh()) //"Marca Todos" 
		SetKey(VK_F4,{ || ( Pona080BoxMarc( oListBox , @aListBox , @oDlg , "M" ),oListBox:nColPos := 1,oListBox:Refresh()) } )
	
		@ aObjSize[1,3] * 0.61, aObjSize[1,3] * 0.79 BUTTON oBtnDesmTod	PROMPT OemToAnsi( STR0063 )		SIZE aObjSize[1,3] * 0.267, aObjSize[1,3] * 0.07 OF oDlg	PIXEL ACTION (Pona080BoxMarc( oListBox , @aListBox , @oDlg , "D" ),oListBox:nColPos := 1,oListBox:Refresh()) //"Desmarca Todos"
		SetKey(VK_F5,{ || ( Pona080BoxMarc( oListBox , @aListBox , @oDlg , "D" ),oListBox:nColPos := 1,oListBox:Refresh()) } )
	
		@ aObjSize[1,3] * 0.69, aObjSize[1,3] * 0.79 BUTTON oBtnInverte	PROMPT OemToAnsi( STR0064 ) 	SIZE aObjSize[1,3] * 0.267, aObjSize[1,3] * 0.07 OF oDlg	PIXEL ACTION (Pona080BoxMarc( oListBox , @aListBox , @oDlg , "I" ),oListBox:nColPos := 1,oListBox:Refresh()) //"Inverte Sele‡„o"
		SetKey(VK_F6,{ || ( Pona080BoxMarc( oListBox , @aListBox , @oDlg , "I" ),oListBox:nColPos := 1,oListBox:Refresh()) } )

	ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar( @oDlg , bSet15 , bSet24 )

	DeleteObject(oOk)
	DeleteObject(oNo)

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura as Teclas de Atalho                     	  		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RestKeys( aSvKeys , .T. )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Atualiza a GetDados do Dialogo Principal                    ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nOpcA == 1 )
		nLenHeader := Len( aHeader )
		nLenCols := Len( aLocCols )
		For nX := 1 To nLenCols
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Apenas para o Dia Selecionado                               ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( aDiaSemana[ nX , 1 ] )
				For nY := 1 To nLenHeader
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Se o Campo Nao for Alteravel Procura o Proximo              ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					IF (;
							(;
								( aScan( aLocAltera , { |x| x == aHeader[ nY , 02 ] } ) == 0 ) .and. ;
					   			( aScan( aLocVisual , { |x| x == aHeader[ nY , 02 ] } ) == 0 ) ;
					   		) .or.;
					   		Empty( aHeader[ nY , 01 ] );
					   	)	 	 
						Loop
					EndIF
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Apenas para o Campo Selecionado                             ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					IF ( aListBox[ nY , 01 ] )
						aLocCols[ nX , GdFieldPos( aHeader[ nY , 02 ] , aLocHeader ) ]  := aCols[ 01 , nY ]
					EndIF
				Next nY
			EndIF
		Next nX
	EndIF

EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica se Houveram Alteracoes no aCols para o ForceRefresh³
³ no Objeto GetDados										  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lRet := !fCompArray( aLocCols , aSvLocCols ) )
	aCols := aClone( aLocCols )
Else
	aCols := aClone( aSvLocCols )
EndIF
aHeader := aClone( aLocHeader )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura Posicao da Linha do aCols						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
n := nSvN

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080BoxMarc	³Autor³Marinaldo de Jesus ³ Data ³22/01/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Controla o Marck do ListBox									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona080BoxMarc( @oListBox , @aListBox , @oDlg , cMarckTip )	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona080RplMarc() em PONA080                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080BoxMarc( oListBox , aListBox , oDlg , cMarckTip )

DEFAULT cMarckTip := ""

IF Empty( cMarckTip )
	aListBox[ oListBox:nAt , 1 ] := !aListBox[ oListBox:nAt , 1 ]
ElseIF cMarckTip	 == "M"
	aEval( aListBox , { |x,y| aListBox[y,1] := .T. } )
ElseIF cMarckTip == "D"
	aEval( aListBox , { |x,y| aListBox[y,1] := .F. } )
ElseIF cMarckTip == "I"
	aEval( aListBox , { |x,y| aListBox[y,1] := !aListBox[y,1] } )
EndIF

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080BldCols	³Autor³Marinaldo de Jesus ³ Data ³22/01/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Montar a Estrutura do aCols para aGetDados para   Manutencao³
³          ³da Tabela de Horario Padrao									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                  					³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080BldCols(	nOpcX 		,;	//01 ->	//Opcao do aRotina
								aCols 		,;	//02 ->	//Array com os Detalhes para Alteracao
								aHeader		,;	//03 ->	//Cabecalho do aCols para Alteracao
								aColsAll	,;	//04 ->	//Array com Todos os Detalhes para o Turno
								aHeaderAll	,;	//05 ->	//Cabecalhjo do aColsAll
								lSeq		,;	//06 ->	//Se carregara ou nao a Sequencia
								lCountSeq	,;	//07 ->	//Se eh apenas para Contar as Sequencias
								nCountSeq	 ;	//08 ->	//Numero de Sequencias
						   	  )

Local aSeq			:= {}
Local cSeq			:= cSemana
Local cSeqAnt		:= "__cSeqAnt__"
Local cSeqAtu		:= "__cSeqAtu__"
Local nCountLin		:= 0
Local nSemana		:= GdFieldPos( "PJ_SEMANA" , aHeaderAll )
Local nPosSeq		:= 0
Local nDia			:= 0 
Local nField		:= 0
Local nMaxTab		:= 0
Local nMaxAll		:= 0
Local nPosDeleted	:= 0
Local nX			:= 0

DEFAULT aCols		:= {}
DEFAULT lSeq 		:= .T.
DEFAULT lCountSeq	:= .F.
DEFAULT nCountSeq	:= 0

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica se Deve contar as Sequencias Existentes			   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lCountSeq )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega o Numero de Sequencias Existentes					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nX := 1 To Len( aColsAll )
		IF !Empty( ( cSeqAtu := GdFieldGet( "PJ_SEMANA" , nX , NIL , aHeaderAll , aColsAll ) ) )
			IF !( cSeqAnt == cSeqAtu )
				++nCountSeq
				aAdd( aSeq , cSeqAtu )
				cSeqAnt := cSeqAtu
			EndIF
		EndIF	
	Next nX
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Carrega os Dados do Calendario conforme Sequencia			  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( ( ( nOpcX <> 3 ) .and. !( lCountSeq ) ) .or. ( nOpcX == 2 ) )
	IF ( nCountSeq > 0 )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta as Linhas e Colunas do aCols						   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		aCols := IF( lSeq , Array( nLenaDias , ( nUsado + 1 ) ) , Array( ( nLenaDias * nCountSeq ) , ( nUsado + 1 ) ) )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega o Numero de Elemementos no aCols  				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		nMaxAll	:= Len( aColsAll )
		IF ( nMaxAll < nMaxTab )
			IF ( nOpcx <> 5 )
				MsgInfo( OemToAnsi( STR0391 ) ) //"Existem Inconsistências na Tabela de Horário. Exclua as Sequências e Reinclua-as."
			EndIF
		EndIF
		nMaxTab	:= Len( aCols )
		For nX := 1 To nMaxTab
			IF ( lSeq )
				IF ( ( nPosSeq := aScan( aColsAll , { |x| x[nSemana] == cSeq } , ++nPosSeq ) ) == 0 )
					IF ( ( nPosSeq := aScan( aColsAll , { |x| x[nSemana] == cSeq } ) ) == 0 )
						Loop
					EndIF
				EndIF
			Else
				IF ( nX <= nMaxAll )
					nPosSeq := nX
				Else
					nPosSeq := nMaxAll
				EndIF
			EndIF
			cSeqAtu := GdFieldGet( "PJ_SEMANA" , nPosSeq , NIL , aHeaderAll , aColsAll )
			IF ( ( lSeq .and. ( cSeq == cSeqAtu ) ) .or. !( lSeq ) )
				For nField := 1 To nUsado
					GdFieldPut(;
									aHeader[ nField , 02 ] ,;
									GdFieldGet( aHeader[ nField , 02 ] , nPosSeq , NIL , aHeaderAll , aColsAll ),;
									nX,;
									aHeader,;
									@aCols;
							   )		
				Next nField
			EndIF
		Next nX
	Else
		Help(" ",1,"P080SP7NEX")
	EndIF
Else
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Neste Caso o Calendario eh Vazio                             ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nMaxTab := Len( aCols := Array( nLenaDias , ( nUsado + 1 ) ) )
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Consistindo o aCols                                          ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( ( nOpcX == 3 ) .or. ( lCountSeq ) .or. ( nCountSeq > 0 ) )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Preenche os Valores "DEFAULT" para os Campos                 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nPosDeleted := GdFieldPos( "GDDELETED" , aHeader )
	For nDia := 1 To nMaxTab
		For nX := 1 To Len( aHeader )
			IF ( aHeader[ nX , 02 ] == "GHOSTCOL" )
				Loop
			EndIF
			IF Empty( aCols[ nDia , nX ] )
				aCols[ nDia , nX ] := CriaVar( aHeader[ nX , 02 ] )
			EndIF
		Next nX
		GdFieldPut( "GDDELETED" , .F. , nDia , aHeader , @aCols )
	Next nDia	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Quando nao estiver verificando a quantidade de sequencias   e³
	³nao for inclusao Remonta o aCols							  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( !( lCountSeq ) .and. ( nOpcX <> 3 ) ) .or. ( nOpcX == 2 ) )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Remonta o aCols Considerando a Segunda como o Primeiro dia da³
		³Semana														  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		Pona080RmkCols( @aCols )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Carrega a Descricao do Tipo do Dia							  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		nDia := 0
		For nX := 1 To nMaxTab
			IF ( ++nDia > 7 )
				nDia := 1
			EndIF
			GdFieldPut( "PJ_DIA" , aDias[ nDia , 01 ] , nX , aHeader , @aCols )
		Next nX
	Else
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Carrega a Descricao do Tipo do Dia							  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		nDia := 0
		For nX := 1 To nMaxTab
			IF ( ++nDia > 7 )
				nDia := 1
			EndIF
			GdFieldPut( "PJ_DIA"	, aDias[ nDia , 01 ] , nX , aHeader , @aCols )
			GdFieldPut( "PJ_TPDIA"	, aDias[ nDia , 02 ] , nX , aHeader , @aCols )
			GdFieldPut( "PJ_TPEXT"	, aDias[ nDia , 03 ] , nX , aHeader , @aCols )
			GdFieldPut( "PJ_TPEXTN"	, aDias[ nDia , 04 ] , nX , aHeader , @aCols )
		Next nX
	EndIF
EndIF

Return( aSeq )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080RmkCols	³Autor³Marinaldo de Jesus ³ Data ³22/01/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Remonta o aCols Para Considerar a Segunda o 1o. Dia da  Sema³
³          ³na															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona080RmkCols( aCols , nMaxTab )							³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080RmkCols( aCols , nMaxTab )

Local aSvDom	:= {}
Local nX		:= 0

DEFAULT nMaxTab	:= Len( aCols )

For nX := 1 To nMaxTab Step 7
	aAdd( aSvDom , aClone( aCols[ nX ] ) )
Next nX
For nX := 1 To nMaxTab
	IF ( ( nX % 7 ) != 0 )
		aCols[ nX ] := aClone( aCols[ nX + 1 ] )
	Else
		aCols[ nX ] := aClone( aSvDom[ ( nX / 7 ) ] )
	EndIF
Next nX

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080AllTrf	³Autor³Marinaldo de Jesus ³ Data ³06/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Transfere Informacoes do aCols para o aColsAll              ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>     								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080AllTrf( aCols , aHeader , aColsAll , aHeaderAll , cSemana )

Local aPosSortAll	:= {}
Local aPosKeyAll	:= {}
Local nITem			:= 0
Local nItens		:= 0
Local nPosFilial	:= 0
Local nPosTurno		:= 0
Local nPosSemana	:= 0
Local nPosDia		:= 0
Local nPos			:= 0

IF !Empty( cSemana )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Retorna o Conteudo Original do PJ_DIA						  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nPosDia := GdFieldPos( "PJ_DIA" , aHeader )
	For nItem := 1 To Len( aCols )
		IF ( ( nPos := aScan( aDias , { |x| x[1] == aCols[ nItem , nPosDia ] } ) ) > 0 )
			aCols[ nItem , nPosDia ] := aDias[ nPos , 05 ]
		EndIF
	Next nItem

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Obtem o Posicionamento dos Campos    						  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nPosFilial	:= GdFieldPos( "PJ_FILIAL"	, aHeaderAll )
	nPosTurno	:= GdFieldPos( "PJ_TURNO"	, aHeaderAll )
	nPosSemana	:= GdFieldPos( "PJ_SEMANA" 	, aHeaderAll )
	nPosDia		:= GdFieldPos( "PJ_DIA"	 	, aHeaderAll )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega Array a Posicao dos Campos para o "Sort"			  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aPosSortAll	, nPosFilial )
	aAdd( aPosSortAll	, nPosTurno	 )
	aAdd( aPosSortAll	, nPosSemana )
	aAdd( aPosSortAll	, nPosDia	 )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega Array com a Posicao dos Campos e as Chaves  Correspon³
	³dentes														  ³	
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aPosKeyAll  	, { nPosFilial	, cFilSR6 	} )
	aAdd( aPosKeyAll  	, { nPosTurno	, cTnoSR6 	} )
	aAdd( aPosKeyAll  	, { nPosSemana  , cSemana	} )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Transfere os Dados Entre aCols        					  	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	GdTransfaCols(	@aColsAll   ,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
					@aCols		,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
					aHeader		,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
					NIL			,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
					NIL			,;	//05 -> Chave para Busca
					aPosSortAll	,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
					aPosKeyAll	,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
					aHeaderAll	,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
					.T.			 ;	//09 -> Se Carrega o Elemento como Deletado na Remontagem do aCols
				   )
EndIF
	
Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080Calend	³Autor³Marinaldo de Jesus ³ Data ³26/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Disponibilizar Calendario para consulta                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>     								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080Calend( lBuildTemp )

Local aKeys				:= GetKeys()
Local aArea				:= GetArea()
Local aAreaSPJ			:= {}
Local aSvaCols			:= {}
Local aSvaColsAll		:= {}
Local aAdvSize			:= {}
Local aInfoAdvSize		:= {}
Local aObjSize			:= {}
Local aObjCoords		:= {}

Local aAdv1Size			:= {}
Local aInfo1AdvSize		:= {}
Local aObj1Size			:= {}
Local aObj1Coords		:= {}

Local aButtons			:= {}
Local bSet15			:= { || NIL }
Local bSet24			:= { || NIL }
Local bCriaCalend		:= { || NIL }
Local bShowCalend		:= { || NIL }
Local bPrev				:= { || GetPerPrev( @dDataIni , @dDataFim , oDataIni , oDataFim )	, SetKey( VK_F4 , bPrev 	) }
Local bAtu				:= { || GetPerAtu( @dDataIni , @dDataFim , oDataIni , oDataFim )	, SetKey( VK_F5 , bAtu		) }
Local bNext				:= { || GetPerNext( @dDataIni , @dDataFim , oDataIni , oDataFim )	, SetKey( VK_F6 , bNext 	) }
Local bPerSPO			:= { || GetPerSPO( @dDataIni , @dDataFim , oDataIni , oDataFim )	, SetKey( VK_F7 , bPerSPO	) }
Local bDialogInit		:= { || NIL }

Local cIndexKey			:= ""
Local cSequencia		:= IF( Empty( cSemana ) , StrZero( 01 , GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) ) , cSemana )
Local dDataIni			:= Ctod("//")
Local dDataFim      	:= Ctod("//")
Local lBuildData		:= .F.
Local lShowCalend		:= .F.
Local lCriaCalend		:= .F.
Local lMaxP8PGOrdVld	:= .T.
Local nMaxOrd			:= 0
Local oDlg				:= NIL
Local oFont				:= NIL
Local oFontBig			:= NIL
Local oGroup			:= NIL
Local oDataIni			:= NIL
Local oDataFim			:= NIL
Local	aFields  := {}
Local	nTotLoop := 0
Local  nLoop := 0
Local aLstIndices := {}
						
Static __aStruSPJ__

Private aTabCalend	:= {}
Private oTmpTabFO1 
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Obtem Periodo conforme Parametro ( Sugerido )				   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
GetPonMesDat( @dDataIni , @dDataFim )


/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Botao para o Periodo Anterior  					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd(; 
		aButtons	,;
						{;
							"PREV"				,;	
   							bPrev				,;
       	   					OemToAnsi( STR0100 ),;	//"Anterior <F4>..."
       	   					OemToAnsi( STR0300 ) ;	//"Anterior"
           				};
        )					 	

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Botao para o Periodo Atual     					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd(; 
		aButtons	,;
						{;
							"OBJETIVO"				,;
   							bAtu				,;
       	   					OemToAnsi( STR0101 ),;	//"Atual <F5>..."
       	   					OemToAnsi( STR0301 ) ;	//"Atual"
           				};
        )					 	

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Botao para o Proximo Periodo						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd(; 
		aButtons	,;
						{;
							"NEXT"				,;
   							bNext				,;
       	   					OemToAnsi( STR0102 ),;	//"Pr¢ximo <F6>..."
       	   					OemToAnsi( STR0302 ) ;	//"Pr¢ximo"       	   					
           				};
        )					 	

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Botao para os Periodos do SPO						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd(; 
		aButtons	,;
						{;
							"BMPSXB"			,;
   							bPerSPO				,;
       	   					OemToAnsi( STR0103 ),;	//"Per¡odo do SP0 <F7>..."
       	   					OemToAnsi( STR0303) ;	//"Per¡odo"
           				};
        )					 	

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Define o Bloco para a Teclas <CTRL-O>   ( Button OK da Enchoi³
³ ceBar )													   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
bSet15 := { || 			IF(;
							Eval( oDataIni:bValid ) .and.;
							Eval( oDataFim:bValid ) .and.;
							( lMaxP8PGOrdVld := MaxP8PGOrdVld( dDataIni , dDataFim , .T. , @nMaxOrd ) ),;
							(;
								lShowCalend := .T. 		,;
							(;
								RestKeys( aKeys , .T. ) ,;
								oDlg:End()			     ;
							),;
							),;
							(;
								IF( !( lMaxP8PGOrdVld ) , dDataFim := ( dDataIni + ( nMaxOrd  - 1 ) ) , NIL ) ,;
								.F.;
							);	
						   );
			}

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Define o  Bloco  para a Teclas <CTRL-X> ( Button Cancel da En³
³ choiceBar )												   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
bSet24 := { || RestKeys( aKeys , .T. ) , oDlg:End() }

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Bloco para o Init do Dialog 						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
bDialogInit := { ||;
						SetKey( VK_F4 , bPrev	),;
						SetKey( VK_F5 , bAtu 	),; 
						SetKey( VK_F6 , bNext	),;
						SetKey( VK_F7 , bPerSPO	),;
						EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons );
				}


/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Monta as Dimensoes dos Objetos         					   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdvSize	:= MsAdvSize( ,.T.,370)

aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
aAdd( aObjCoords , { 000 , 45 , .T. , .F. } )
aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )   

//Divisao Em 5 colunas verticais o espaco disponivel na tela
aObj1Coords := {}
aAdv1Size    := aClone(aObjSize[1])

aInfo1AdvSize    := { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 5 , 20 }
aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )	
aAdd( aObj1Coords , { 020 , 000 , .F. , .T. } )	
aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )	
aAdd( aObj1Coords , { 001 , 000 , .F. , .T. } )	
aAdd( aObj1Coords , { 020 , 000 , .F. , .T. } )	
aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )	
aObj1Size := MsObjSize( aInfo1AdvSize , aObj1Coords,,.T.)


/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Monta Dialogo para a selecao do Periodo 					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
DEFINE FONT oFont		NAME "Arial" SIZE 0,-11 BOLD
DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0084) From aAdvSize[7],0 TO aAdvSize[6]/2.3,aAdvSize[5] OF oMainWnd PIXEL			//"Selecione o Periodo Para a Montagem do Calend rio"

	@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup TO aObjSize[1,3],aObjSize[1,4] LABEL OemToAnsi(STR0085) OF oDlg PIXEL	//"Periodo:"
	oGroup:oFont:= oFont

	@ aObj1Size[2,1] ,  aObj1Size[2,2]	SAY OemToAnsi(STR0086)		SIZE 50,10 OF oDlg PIXEL FONT oFont	//"Inicial:"
	@ aObj1Size[3,1] ,  aObj1Size[3,2]	MSGET oDataIni VAR dDataIni	SIZE 50,10 OF oDlg PIXEL FONT oFont VALID !Empty( dDataIni )HASBUTTON

	@ aObj1Size[5,1]  , aObj1Size[5,2]	SAY OemToAnsi(STR0087)		SIZE 50,10 OF oDlg PIXEL FONT oFont	//"Final:"
	@ aObj1Size[6,1]  , aObj1Size[6,2]	MSGET oDataFim VAR dDataFim	SIZE 50,10 OF oDlg PIXEL FONT oFont VALID ( !Empty( dDataFim ) .and. ( dDataIni <= dDataFim ) ) HASBUTTON
			
ACTIVATE MSDIALOG oDlg CENTERED ON INIT Eval( bDialogInit )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura as Teclas de Atalho                     	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aKeys , .T. )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³So Mostra Calendario se nao Cancelou o Dialogo do Periodo    ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lShowCalend )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Verifica se Deve Criar o arquivo Temporario               	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lBuildTemp )
		DEFAULT __aStruSPJ__ := SPJ->( dbStruct() )
	    aAreaSPJ	:= SPJ->( GetArea() )
		
		cIndexKey	:= SPJ->( IndexKey() )
		SPJ->( dbCloseArea() )
		
		nTotLoop	:= Len(__aStruSPJ__)  

		For nLoop:=1 To nTotLoop
			AADD(aFields,{	__aStruSPJ__[nLoop,1]   ,;
               		        __aStruSPJ__[nLoop,2]  	,;
					        __aStruSPJ__[nLoop,3]  	,;
					        __aStruSPJ__[nLoop,4]    }    )  
		Next
		
		AAdd (aLstIndices, {"PJ_FILIAL","PJ_TURNO","PJ_SEMANA","PJ_DIA"  } ) 
		oTmpTabFO1:= RhCriaTrab("SPJ", aFields, aLstIndices)
		
		lBuildData := .T.
		
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Se foi Possivel criar o Arquivo Temporario					  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( lBuildData )
			
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Se foi Possivel Abrir o Arquivo Temporario					  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( lBuildData )
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Se o Arquivo Estiver Selecionado							  ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF ( lBuildData := ( Select( "SPJ" ) > 0 ) )
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³Salva o Conteudo do aCols e do aColsAll para Restauracao   na³
					³Saida														  ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					aSvaCols	:= aClone( aCols )
					aSvaColsAll	:= aClone( aColsAll )
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³Transfere os dados do aCols para o aColsAll e Grava as  infor³
					³macoes no Temporario										  ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					Pona080AllTrf( aCols , aHeader , @aColsAll , aHeaderAll , cSequencia )
					Pona080TmpGrv()
					
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³Restaura o Conteudo do aCols e do aColsAll                   ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					aCols		:= aClone( aSvaCols )
					aColsAll	:= aClone( aSvaColsAll )
				EndIF
			EndIF
		EndIF
	Else
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Na Visualizacao Obtem sequencia conforme a Linha da GetDados ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		cSequencia := GdFieldGet( "PJ_SEMANA" )
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Cria o Calendario do Periodo        						  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bCriaCalend	:= { || lCriaCalend := CriaCalend(	dDataIni 	,;	//01 -> Data Inicial do Periodo
													dDataFim 	,;	//02 -> Data Final do Periodo
													cTnoSR6	 	,;	//03 -> Turno Para a Montagem do Calendario
													cSequencia 	,;	//04 -> Sequencia Inicial para a Montagem Calendario
													NIL			,;	//05 -> Array Tabela de Horario Padrao
													@aTabCalend ,;	//06 -> Array com o Calendario de Marcacoes
													cFilSR6		,;	//07 -> Filial para a Montagem da Tabela de Horario
													NIL			,;	//08 -> Matricula para a Montagem da Tabela de Horario
													NIL			,;	//09 -> Centro de Custo para a Montagem da Tabela
													NIL			,;	//10 -> Array com as Trocas de Turno
													NIL			,;	//11 -> Array com Todas as Excecoes do Periodo
													.F. 		 ;	//12 -> Se executa Query para a Montagem da Tabela Padrao
												  );
					}
	MsAguarde( bCriaCalend , OemToAnsi( STR0088 ) ) //"Criando o Calend rio..."
	IF ( lCriaCalend  )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Mostra o Calendario conforme periodo						  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		bShowCalend	:= { || F_ALT_H(NIL,NIL,NIL,NIL,NIL,NIL,NIL,.F.) }
		MsAguarde( bShowCalend , OemToAnsi( STR0089 ) ) //"Montando o Calend rio..."
	EndIF	
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Apaga os Arquivos Temporarios       						  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lBuildData )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Fecha e Exclui o SPJ Temporario     						  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		SPJ->( dbCloseArea() )
		
				
		If oTmpTabFO1 <> Nil
		    oTmpTabFO1:Delete()
		    Freeobj(oTmpTabFO1)
		EndIf
		
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Abre o SPJ padrao                   						  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		ChkFile("SPJ")
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Restaura o Estado do SPJ            						  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF !Empty( aAreaSPJ )
			RestArea( aAreaSPJ )
		EndIF
	EndIF

EndIF
	
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Restaura Dados de Entrada           						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aKeys , .T. )
RestArea( aArea )

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080TmpGrv³Autor³Marinaldo de Jesus	  ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Gravar Informacoes no SPJ                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080TmpGrv()

Local aColsAux		:= {}
Local aCposPos		:= {}
Local nCol			:= 0
Local nCols			:= Len( aColsAll	)
Local nField		:= 0
Local nFields		:= Len( aHeaderAll	)
Local nRec			:= 0
Local nRecnos		:= 0
Local nPosField		:= 0
Local nPosDeleted	:= GdFieldPos( "GDDELETED" , aHeaderAll )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Obtem o Posicionamento dos Campos                	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
For nField := 1 To nFields 
	nPosField := SPJ->( FieldPos( aHeaderAll[ nField , 02 ] ) )
	aAdd( aCposPos , { aHeaderAll[ nField , 02 ] , nPosField } )
Next nField

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Elimina os Elementos Deletados do aColsAll       	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( aScan( aColsAll , { |x| x[ nPosDeleted ] } ) > 0 )
	For nCol := 1 To nCols
		IF ( aColsAll[ nCol , nPosDeleted ] )
			Loop
		EndIF
		aAdd( aColsAux , aClone( aColsAll[ nCol ] ) )
	Next nCol
	aColsAll := aClone( aColsAux )
EndIF

nFields := Len( aCposPos )
nRecnos	:= Len( aColsAll )

IF ( nRecnos > 0 )
	For nRec := 1 To nRecnos
		IF SPJ->( RecLock( "SPJ" , .T. ) )
			For nField := 1 To nFields
				IF ( ( nPosField := aCposPos[ nField , 02 ] ) > 0 )
					SPJ->( FieldPut( nPosField , aColsAll[ nRec , nField ] ) )
				EndIF
			Next nField
			SPJ->( MsUnlock() )
		EndIF	
	Next nRec
EndIF

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao    ³Prossegue    ³Autor³Mauricio MR     	  ³ Data ³02/06/2005³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³ Chama Ponto de Entrada                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/

Static Function Prossegue(nOpcX,cSemana,lLe,n,lValida,aCols,aHeader,aColsAll,aHeaderAll,nCountSeq,nVezChk )
Local lRet		:= .T.
Local aRetBlock

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Ponto de Entrada para Antes de Confirmar as Informacoes  da  ³
³ Tabela de Horario Padrao.                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

IF ( lPna08001Block ) 
   
		/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Valida e Transfere os Dados do aCols para o aColsAll         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
 
 	IF ( ValType( aRetBlock := ExecBlock("PNA08001",.F.,.F.,{aClone(aColsAll), aClone(aHeaderAll), cSemana, nOpcx}) ) == "A" )
		aColsAll	:= If( ValType(aRetBlock[1]) == "A", aClone(aRetBlock[1]) , aColsAll	)
		lRet		:= If( ValType(aRetBlock[2]) == "L", aRetBlock[2] 			, lRet		)
	EndIF 

EndIF

Return ( lRet )           
                   
Static Function MenuDef()

Local aRotina :=       { { STR0011 ,"PesqBrw"  			 , 0 , 1,,.F.},;  // "Pesquisar"
	                     { STR0012 ,"Pona080Vis"		 , 0 , 2},;  // "Visualizar"
	                     { STR0014 ,"Pona080Inc"		 , 0 , 3,,,.T.},;  // "Incluir"
	                     { STR0016 ,"Pona080Alt"		 , 0 , 4},;  // "Alterar"
	                     { STR0018 ,"Pona080Exc"		 , 0 , 5},;  // "Excluir"
						 { STR0059 ,"PutHrsTab(cCalc)" 	 , 0 , 6}}   // "Calcular Horas"
	If cPaisLoc == "RUS"					 
		aAdd(aRotina,{STR0299,"Pona080Cop", 0, 4}) //"Copy"
	EndIf

Return aRotina

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³INTEGDEF  ºAutor  ³                     º Data ³ 23/01/2012 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função para a interação com EAI                             º±±
±±º          ³envio e recebimento                                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ PONA080                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function IntegDef( cXML, nTypeTrans, cTypeMessage, cVerMsg )

Local aRet := {}

aRet:= PONI080 ( cXml, nTypeTrans, cTypeMessage, cVerMsg )

Return aRet

/*/{Protheus.doc} GpIniWfSq
Performs upload of template for standard Work Shitfs
for Russia localization.
@author raquel.andrade
@since 10/09/2018
@version 1.0
@project MA3 - Russia
/*/
Function GpIniWfSq()
Local aTempl	:= {}
Local nX		:= 0
Local nY		:= 0

aTempl:= { {"NORM40","001"}, {"NORM36","002"} , {"NORM24","003"} }
	
    // CHeck if Template was uploaded
	If fPosTab( "S024","NORM40","==",4) == 0 .And.;
		fPosTab( "S024","NORM36","==",4) == 0 .And. ;
		fPosTab( "S024","NORM24","==",4) == 0
	   Help( , , "PONA080TABS024", , OemToAnsi(STR0399), 1, 0 )// "Templates not registered, S024 - Working Time Schedule Templates."
	Else
		DbSelectArea("SPJ")
		DbSetOrder(1) // PJ_FILIAL + PJ_TURNO + PJ_SEMANA + PJ_DIA
				
		Begin Transaction 
			For nX := 1 to Len(aTempl)				
				For nY := 1 to 7
					cTempl		:= aTempl[nX][01]
					cTurno		:= aTempl[nX][02]
					If !dbSeek(xFilial("SPJ")+cTurno+"01"+cValToChar(nY))
						If SPJ->( RecLock( "SPJ" , .T. ) )
						
							SPJ->PJ_FILIAL 	    := xFilial("SPJ")
							SPJ->PJ_TURNO	    := cTurno
							SPJ->PJ_SEMANA 	    := "01"
							SPJ->PJ_DIA   		:= cValToChar(nY)

							Do Case
								Case nY == 1 // Sunday
									SPJ->PJ_TPDIA:= If( fDescRCC('S024',cTempl,1,6,113,1) == "E","S","N")
								Case nY == 2 // Monday
									SPJ->PJ_TPDIA := If( fDescRCC('S024',cTempl,1,6,107,1) == "E","S","N")
								Case nY == 3 // Tuesday
									SPJ->PJ_TPDIA  := If( fDescRCC('S024',cTempl,1,6,108,1) == "E","S","N")
								Case nY == 4 // Wednesday
									SPJ->PJ_TPDIA  := If( fDescRCC('S024',cTempl,1,6,109,1) == "E","S","N")
								Case nY == 5 // Thursday
									SPJ->PJ_TPDIA  := If( fDescRCC('S024',cTempl,1,6,110,1) == "E","S","N")
								Case nY == 6 // Friday
									SPJ->PJ_TPDIA  := If( fDescRCC('S024',cTempl,1,6,111,1) == "E","S","N")
								Case nY == 7 // Saturday
									SPJ->PJ_TPDIA  := If( fDescRCC('S024',cTempl,1,6,112,1) == "E","S","N")
							EndCase

							SPJ->PJ_SAIDA2	:= Val(fDescRCC('S024',cTempl,1,6,119,5))
							SPJ->PJ_SAIDA1	:= Val(fDescRCC('S024',cTempl,1,6,124,5)) 
							SPJ->PJ_ENTRA2	:= Val(fDescRCC('S024',cTempl,1,6,129,5))
							SPJ->PJ_ENTRA1	:= Val(fDescRCC('S024',cTempl,1,6,114,5))
							
							
							SPJ->PJ_HRSTRAB	:= fHrsTrabGat("H", "SPJ","DB","1")
							SPJ->PJ_HRSTRA2	:= fHrsTrabGat("H", "SPJ","DB","2")												
							// 1st Break
							SPJ->PJ_INTERV1	:= "S"
							SPJ->PJ_HRSINT1	:= fHrsTrabGat("I", "SPJ","DB","1")
							SPJ->PJ_HRTOTAL	:= fHrsTrabGat("T", "SPJ","DB")
												
							SPJ->(MsUnlock())
						EndIf
					EndIf
				Next nY
			Next nX

		End Transaction

    EndIf	

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fVldNTrab ºAutor Marco Nakazawa ³       º Data ³ 20/09/2012 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função para avisar que existem dias não trabalhados sem     º±±
±±º          ³os horários preenchidos                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ PONA080                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function fVldNTrab( lInclui , oObj )
Local lRet			:= .T.
Local nI			:= 0
Local nPosTpDia		:= GdFieldPos( 'PJ_TPDIA' )
Local nPosEntra1	:= GdFieldPos( 'PJ_ENTRA1' )
Local nPosSaida1	:= GdFieldPos( 'PJ_SAIDA1' )
Local cSemAux		:= cLstSemana

Default lInclui		:= .F.
Default oObj		:= ""

If lInclui .Or. ( !lInclui .And. cLstSemana <> cSemana )
	For nI:=1 To Len( aCols )
		If ( aCols[ nI,nPosTpDia ] $ "C*D*N" .And. aCols[ nI,nPosEntra1 ] == 0  .And. aCols[ nI,nPosSaida1 ] == 0)
			If MsgYesNo( OemToAnsi( STR0403 ) , OemToAnsi( STR0068 ) )
				lRet := .T.
			Else
				If !Empty(oObj)
					oObj:Select(Val(cSemAux))
				EndIf
				lRet := .F.
			EndIf
			Exit
		EndIf	
	Next
EndIf

cLstSemana := cSemAux

Return( lRet )
