#INCLUDE "PROTHEUS.CH"

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁVerifica se a Execucao eh no AS/400                          Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static lExInAs400 := ExeInAs400()

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё RHLIBAFA Ё Autor Ё Equipe Advanced RH              Ё Data Ё25/10/2004Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Biblioteca de funcoes para tratamento de afastamentos                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                             Ё╠╠
╠╠цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё         ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL.                       Ё╠╠
╠╠цддддддддддддбддддддддбддддддбдддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁProgramador Ё Data   Ё BOPS Ё  Motivo da Alteracao                               Ё╠╠
╠╠цддддддддддддеддддддддддддддддддеддддддедддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁChristiane VЁ11/04/2014ЁM_RH003/003252ЁCriaГЦo da funГЦo fCargaTpAus e alteraГЦo Ё╠╠
╠╠Ё			   Ё          Ё              Ёda funГЦo fDescAfast.                     Ё╠╠
╠╠ЁM. Silveira Ё14/07/2017ЁDRHPONTP-1062 ЁAjuste em fLoadTransf p/ retornar os dadosЁ╠╠
╠╠Ё			   Ё          Ё              Ёde transferencias sem alterar o conteudo. Ё╠╠
╠╠юддддддддддддаддддддддддаддддддддддддддадддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ/*/

/*
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁInRhLibAfaExecЁAutor ЁMarinaldo de Jesus   Ё Data Ё14/05/2003Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁExecutar Funcoes Dentro de RHLIBAFA                          Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁInRhLibAfaExec( cExecIn , aFormParam )						 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁuRet                                                 	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function InRhLibAfaExec( cExecIn , aFormParam )
         
Local uRet

DEFAULT cExecIn		:= ""
DEFAULT aFormParam	:= {}

IF !Empty( cExecIn )
	cExecIn	:= BldcExecInFun( cExecIn , aFormParam )
	uRet	:= __ExecMacro( cExecIn )
EndIF

Return( uRet )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁfAfasta   Ё Autor Ё Equipe Advanced RH    Ё Data Ё30/01/1998Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o Ё Verifica se Funcionario est═ afastado na data passada.     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁPar┐metrosЁcFil     = Filial do Funcion═rio                            Ё
Ё          ЁcMat     = Matricula Funcion═rio                            Ё
Ё          ЁdDtPesq  = Data para Pesquisa                               Ё
Ё          ЁdIniAfas = Vari═vel Data para retorno Inicio Afastamento    Ё
Ё          ЁdFimAfas = Vari═vel Data para retorno Fim Afastamento       Ё
Ё          ЁcTipAfas = Vari═vel String para retorno Tipo Afastamento    Ё
Ё          ЁcIdAfas  = Vari═vel String para retorno NUMID 				Ё
Ё          ЁlPesqId  = Se efetua pesquisa de datas pelo NUMID			Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁfAfasta(cFil, cMat, dDtPesq, dIniAfas , dFimAfas, cTipAfas) Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                                    Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function fAfasta( cFil , cMat , dDtPesq , dIniAfas , dFimAfas , cTipAfas , aAfasta, cIdAfas, lPesqId )

Local bAfasta	:= { || NIL }
Local cFilMat	:= ""
Local nSvOrder	:= 0
Local nOrder	:= RetOrdem( "SR8" , "R8_FILIAL+R8_MAT+DTOS(R8_DATAINI)+R8_TIPO" )
Local nAfa		:= 0
Local nAfasta	:= 0
Local lRet		:= .F.
Local lVerArea	:= .F.

Local cCpos		:= ""
Local cWhere	:= ""
Local cOrder	:= ""
Local cAliasQry := "_QRYSR8"
Local cSvAlias	:= Alias()

DEFAULT cFil    := SRA->RA_FILIAL
DEFAULT cMat    := SRA->RA_MAT
DEFAULT dDtPesq := dDataBase
DEFAULT cIdAfas := ""
DEFAULT lPesqId := .F.

Static lUseR8NumId := fVerNumId()

dIniAfas := Ctod("//")
dFimAfas := dIniAfas
cTipAfas := ""

If lPesqId
	
		
	cCpos  := "% SR8.R8_DATAINI, SR8.R8_DATAFIM, SR8.R8_TIPO, SR8.R8_NUMID, SR8.R8_TIPOAFA %"

	cWhere := "% SR8.R8_FILIAL = '"+cFil+"'"
	cWhere += " AND SR8.R8_MAT    = '"+cMat+"'"
	cWhere += " AND SR8.R8_NUMID  = '"+cIdAfas+"'%"
	
	cOrder := "% SR8.R8_NUMID %"
	
	BeginSql alias cAliasQry

		SELECT 		%exp:cCpos%
		FROM 		%table:SR8% SR8
		WHERE 		%exp:cWhere% AND SR8.%NotDel%
		ORDER BY	%exp:cOrder%
			
	EndSql
		
	If !Empty( dIniAfas )
		dIniAfas  := (cAliasQry)->(R8_DATAINI)
		dFimAfas  := (cAliasQry)->(R8_DATAFIM)
		cTipAfas  := fCargaTpAus((cAliasQry)->(R8_TIPOAFA))
	EndIf
	
	(cAliasQry)->( dbCloseArea() )
	dbSelectArea( cSvAlias )
	
Else

	IF !( ValType( aAfasta ) == "A" )
		cFil		:= xFilial( "SR8" , cFil )
		cFilMat 	:= ( cFil + cMat )
		nSvOrder	:= SR8->( IndexOrd() )
		IF !( nOrder == nSvOrder )
			SR8->( dbSetOrder( nOrder ) )
		EndIF
		bAfasta := { || dDtPesq >= R8_DATAINI .and. dDtPesq <= IF( !Empty( R8_DATAFIM ) , R8_DATAFIM , dDtPesq ) }
		IF SR8->( dbSeek( cFilMat , .F. ) )
			While SR8->( !Eof() .and. R8_FILIAL + R8_MAT == cFilMat )
				IF ( lRet := SR8->( Eval( bAfasta ) ) )
					dIniAfas  := SR8->R8_DATAINI
					dFimAfas  := SR8->R8_DATAFIM				
					cTipAfas  := fCargaTpAus(SR8->(R8_TIPOAFA))
					If lUseR8NumId 
						cIdAfas	  := SR8->R8_NUMID
					EndIf
					Exit
				EndIF
				SR8->( dbSkip() )
			End While
		EndIF
		IF !( nOrder == nSvOrder )
			SR8->( dbSetOrder( nSvOrder ) )
		EndIF
	Else
		bAfasta := { || dDtPesq >= aAfasta[ nAfa , 01 ] .and. dDtPesq <= IF( !Empty( aAfasta[ nAfa , 02 ] ) , aAfasta[ nAfa , 02 ] , dDtPesq ) }
		nAfasta	:= Len( aAfasta )
		If ( Select("SR8") == 0 )
			dbSelectArea("SR8")
			lVerArea := .T.
		EndIf
		If lVerArea
			SR8->( dbCloseArea() )
		EndIf	
	    For nAfa := 1 To nAfasta
	    	IF ( lRet := Eval( bAfasta ) )
				dIniAfas  := aAfasta[ nAfa , 01 ]
				dFimAfas  := aAfasta[ nAfa , 02 ]
				cTipAfas  := fCargaTpAus(aAfasta[ nAfa , 03 ])
				If lUseR8NumId 
					cIdAfas   := aAfasta[ nAfa , 04 ]
				EndIf
	    		Exit
	    	EndIF
	    Next nAfa
	EndIF

EndIf
	
Return( lRet )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁfVerNumId		ЁAutorЁIgor Franzoi		  Ё Data Ё16/06/2008Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁVerifica se o numero R8_NUMID esta como usado				Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function fVerNumId()

Local aArea := GetArea()
Local aSx3Area := SX3->(GetArea())
Local lRet := .F.

SX3->(dbSetOrder(2))

If SX3->(dbSeek("R8_NUMID"))
	lRet := SX3->(x3uso(X3_USADO))
Else
	lRet := .F.
EndIf

RestArea(aSx3Area)
RestArea(aArea)

Return lRet

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁfAfastaPer		ЁAutorЁMarinaldo de Jesus Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCarregar em aAfasta Todos os Afastamentos do Periodo		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function fAfastaPer( aAfasta , dPerIni , dPerFim , cFil , cMat )

Local cAlias		:= "SR8"
Local cAliasQuery	:= ""
Local lAfasta		:= .F.
Local cIniData	 	:= ""
Local cFimData		:= ""
Local cQuery	 	:= ""
Local nX			:= 0

Static aSr8Fields
Static cQrySr8Fields
Static nSr8Fields
Static __oSt1
Static __cEmpAux

DEFAULT aSr8Fields := ( cAlias )->( dbStruct() )
DEFAULT nSr8Fields := Len( aSr8Fields )

If ( cQrySr8Fields == NIL )
	cQrySr8Fields := ""
	For nX := 1 To nSr8Fields
		cQrySr8Fields += aSr8Fields[ nX , 01 ] + ", "
	Next nX
EndIf
	
aAfasta := {}
DEFAULT dPerIni	:= Ctod("//")
DEFAULT dPerFim	:= Ctod("//")
DEFAULT cFil	:= SRA->RA_FILIAL
DEFAULT cMat	:= SRA->RA_MAT

cIniData	:= Dtos( dPerIni )
cFimData	:= Dtos( dPerFim )
cAliasQuery := GetNextAlias()

If __oSt1 == Nil .or. ( __cEmpAux == Nil .or. __cEmpAux <> cEmpAnt )
	__cEmpAux   := cEmpAnt

	__oSt1 := FWPreparedStatement():New()

	cQuery := "SELECT "
	cQuery += cQrySr8Fields
	cQuery := SubStr( cQuery , 1 , Len( cQuery ) - 2 )
	cQuery += " FROM "
	cQuery += InitSqlName( cAlias )
	cQuery += " WHERE "
	cQuery += "R8_FILIAL = ? "
	cQuery += " AND "
	cQuery += "R8_MAT = ? "
	cQuery += " AND "
	cQuery += " ( "
	cQuery += 		"R8_DATAFIM = ? "        //Data Fim em branco
	cQuery += 		" OR "
	cQuery += 		" ( "
	cQuery += 				"R8_DATAINI >= ? "           // Data Inicial dentro do Periodo
	cQuery += 				" AND "
	cQuery += 				"R8_DATAINI <= ? "
	cQuery += 		" ) "
	cQuery += 		" OR "
	cQuery += 		" ( "
	cQuery += 				"R8_DATAFIM >= ? "          // Data Final dentro do Periodo
	cQuery += 				" AND "
	cQuery += 				"R8_DATAFIM <= ? "
	cQuery += 		" ) "
	cQuery += 		" OR "
	cQuery += 		" ( "
	cQuery += 				"R8_DATAINI <= ? "          // Periodo do Afastamento Engloba o Periodo de Apontamento
	cQuery += 				" AND "
	cQuery += 				"R8_DATAFIM >= ? "
	cQuery += 		" ) "
	cQuery += " ) "
	cQuery += " AND "
	cQuery += "D_E_L_E_T_=' ' "
	cQuery += "ORDER BY " + SqlOrder( (cAlias)->( IndexKey() ) )

	cQuery := ChangeQuery( cQuery )

	__oSt1:SetQuery(cQuery)

EndIf

__oSt1:SetString(1,cFil)
__oSt1:SetString(2,cMat)
__oSt1:SetString(3,Space(Len(cFimData)))
__oSt1:SetString(4,cIniData)
__oSt1:SetString(5,cFimData)
__oSt1:SetString(6,cIniData)
__oSt1:SetString(7,cFimData)
__oSt1:SetString(8,cIniData)
__oSt1:SetString(9,cFimData)

cQuery := __oSt1:getFixQuery()

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQuery)

For nX := 1 To nSr8Fields
	If !( aSr8Fields[ nX , 02 ] == "C" )
		TcSetField(cAliasQuery,aSr8Fields[nX,01],aSr8Fields[nX,02],aSr8Fields[nX,03],aSr8Fields[nX,04])
	EndIf
Next nX

While ( cAliasQuery )->( !Eof() )
	( cAliasQuery )->( aAdd( aAfasta , { R8_DATAINI , R8_DATAFIM , R8_TIPOAFA , R8_NUMID } ) )

	( cAliasQuery )->( dbSkip() )
End While
	
( cAliasQuery )->( dbCloseArea() )

lAfasta := ( Len( aAfasta ) > 0 )

Return( lAfasta )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁfDescAfastЁ Autor Ё Equipe Advanced RH    Ё Data Ё13/06/1997Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o ЁRetorna uma descri┤└o de afastamento ( SX5 - Tab.30 )       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁfDescAfast( cTipAfasta , nSize , cFil )					  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁGenerico                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ/*/
Function fDescAfast( cTipAfasta , nSize , cFil, lDemitido, cNumID, cFilFun )

Local cRet   		:= ""
Local aArea 		:= GetArea()

DEFAULT cTipAfasta	:= ""  
DEFAULT cNumId		:= ""
DEFAULT nSize		:= 60
DEFAULT lDemitido   := .F.
DEFAULT cFilFun		:= cFilAnt
                            
If !Empty(cNumId)
	dbSelectArea("SR8")
	SR8->( dbSetOrder(RetOrder("SR8","R8_FILIAL+R8_NUMID")) )
	IF SR8->( dbSeek( xFilial("SR8",cFilFun) + cNumId ))   
		If !lDemitido
			cRet :=  fDesc( "RCM", SR8->R8_TIPOAFA, "RCM_DESCRI", nSize, cFil, NIL, .F. )
		Endif
	Endif
Endif

RestArea(aArea)

Return( cRet )     

/*
зддддддддддбдддддддддддддддддддбдддддбддддддддддддддддддбддддбдддддддддд©
ЁFun┤└o    ЁPonSitPer()        ЁAutorЁMauricio MR       ЁDataЁ09/09/2005Ё
цддддддддддедддддддддддддддддддадддддаддддддддддддддддддаддддадддддддддд╢
ЁDescri┤└o ЁObtem Afatamentos e Transferencias do Funcionario para o pe-Ё
Ё          Ёriodo informado.											Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRetSituacao(cFil,cMat,dDataIni,dDataFim,aAfasta,aTransf )	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcFil		-> Filial do Funcionario						Ё
Ё          ЁcMat   		-> Matricula do Funcionario						Ё
Ё          ЁdDataIni	-> Data Inicio do Periodo						Ё
Ё          ЁdDataFim	-> Data Final do Periodo						Ё
Ё          ЁaAfasta		-> Array com os afastamentos (Por Referencia)	Ё
Ё          ЁaTransf		-> Array com as transferencias (Por Referencia)	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL 														Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁGenerico                                                    Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function PonSitPer( cFil , cMat , dDataIni , dDataFim, aAfasta, aTransf )

Local aArea				:= GetArea()
Local aAreaSRA			:= SRA->( GetArea() )
Local cSvFilAnt			:= cFilAnt
Local lTransfEmp		:= .F.

DEFAULT cFil			:= SRA->RA_FILIAL
DEFAULT cMat			:= SRA->RA_MAT
DEFAULT dDataIni		:= Ctod("//")
DEFAULT dDataFim		:= Ctod("//")
DEFAULT aTransf			:= {}
     
/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁAtualiza cFilAnt Conforme Filial do Funcionario               Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
cFilAnt		:= IF( !Empty( cFil ) , cFil , cFilAnt )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Carrega os Afastamentos Referente ao Periodo se o array dos Ё
Ё mesmos foi passado (mesmo que vazio).						  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/   
If aAfasta <> NIL
	aAfasta := {}
	fAfastaPer( @aAfasta , dDataIni , dDataFim , cFil , cMat )
Else
	aAfasta := {}
Endif

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Verifica se Funcionario foi Transferido De Empresa ou de FiЁ
Ё lial	e carrega as transferencias							 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/	
If aTransf <> NIL
	aTransf:= {}
	lTransfEmp := fLoadTransf( @aTransf )
Else
	aTransf	:= {}
Endif 
/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura Dados de Entrada									 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/	
cFilAnt := cSvFilAnt

RestArea( aAreaSRA )
RestArea( aArea )

Return( lTransfEmp  )                                    

/*
зддддддддддбдддддддддддддддддддбдддддбддддддддддддддддддбддддбдддддддддд©
ЁFun┤└o    ЁfLoadTransf()      ЁAutorЁEquipe RH         ЁDataЁ06/08/2008Ё
цддддддддддедддддддддддддддддддадддддаддддддддддддддддддаддддадддддддддд╢
ЁDescri┤└o ЁObtem Afatamentos e Transferencias do Funcionario para o pe-Ё
Ё          Ёriodo informado.											Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁfLoadTransf(aTransf)                                     	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁaTransf		-> Array com as transferencias (Por Referencia)	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁLogico(se possui transferencias, .T.)						Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁSIGAPON                                                     Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Static Function fLoadTransf(aTransf)

Local nX		:= 0
Local cFilMat	:= SRA->(RA_FILIAL + RA_MAT )
Local aAux		:= {}
Local nElem		:= 0
          
//-- Variaveis para obter as transferencias do funcionario
Local lOrigem := .T.			//Executar a Pesquisa pela Tambem pela Origem
Local lNoRept := .F.			//Nao Armazena Itens Iguais

//-- Carrega todas as transferencias
fTransfAll( aAux , , lNoRept , lOrigem )

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Filtrar as Transferencias do Funcionario				       Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/	
aTransf:= {}

If !Empty(aAux)
	For nX := 1 to Len(aAux)  
		//-- Se Transf DE e Transf PARA for diferente ( cEmpAnt + cFilAnt + cMat ) desconsidera
		If ( ( cEmpAnt + cFilMat ) <> (aAux[ nX , 04 ] + aAux[ nX , 10 ] + aAux[ nX , 11 ] )) .AND.;
			( ( cEmpAnt + cFilMat ) <> (aAux[ nX , 01 ] + aAux[ nX , 08 ] + aAux[ nX , 09 ] ) ) 
			Loop
		Endif
                 
		//Posicao anterior a Transferencia 
		aAdd(aTransf, aClone(aAux[nX]))
		nElem:= Len(aTransf)
		
		//-- Carrega informacoes para montagem do registro anterior aa transferencia
		//-- Desativado em 07/2017 para avaliacao, para que o array passe a retornar os dados sem alteracao de conteudo
		/*
		If ( ( cEmpAnt + cFilMat ) <> (aAux[ nX , 04 ] + aAux[ nX , 10 ] + aAux[ nX , 11 ] )) 
			aTransf[nElem , 7 ] := aTransf[nElem, 7 ] - 1 	//Data Trf - 1
			aTransf[nElem , 4 ] := aTransf[nElem, 1 ]		//Emp Para  = Emp De
			aTransf[nElem , 5 ] := aTransf[nElem, 2 ]     	//(Fil+Mat) Para  = (Fil+Mat) De
			aTransf[nElem , 6 ] := aTransf[nElem, 3 ]     	//CC  Para  = CC De 
			aTransf[nElem , 11] := aTransf[nElem, 9 ]    	//Mat Para  = Mat De
			aTransf[nElem , 10] := aTransf[nElem, 8 ]     	//Fil Para  = Fil De 
		Else

			aTransf[nElem , 1 ] := aTransf[nElem, 4 ]		//Emp De  = Emp Para
			aTransf[nElem , 2 ] := aTransf[nElem, 5 ]     	//(Fil+Mat) De  = (Fil+Mat) Para
			aTransf[nElem , 3 ] := aTransf[nElem, 6 ]     	//CC  De  = CC Para
			aTransf[nElem , 9 ] := aTransf[nElem, 11]    	//Mat De  = Mat Para
			aTransf[nElem , 8 ] := aTransf[nElem, 10]     	//Fil De  = Fil Para
		Endif
		*/
	Next  
Endif                  
           
Return (!Empty(aTransf))

/*
зддддддддддбдддддддддддддддддддбдддддбддддддддддддддддддбддддбдддддддддд©
ЁFun┤└o    ЁPonRetSit()        ЁAutorЁMauricio MR       ЁDataЁ09/09/2005Ё
цддддддддддедддддддддддддддддддадддддаддддддддддддддддддаддддадддддддддд╢
ЁDescri┤└o ЁObtem a Situacao do Funcionario em determinada data em fun- Ё
Ё          Ёcao dos afastamentos e das transferencias. 					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRetSituacao(cFil,cMat,dDataIni,dDataFim,aAfasta,aTransf )	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcFil		-> Filial do Funcionario						Ё
Ё          ЁcMat   		-> Matricula do Funcionario						Ё
Ё          ЁdDataRef	-> Data para a pesquisa da situacao do func.	Ё
Ё          ЁaAfasta		-> Array com os afastamentos (Por Referencia)	Ё
Ё          ЁaTransf		-> Array com as transferencias (Por Referencia)	Ё
Ё          ЁlTransfEmp	-> Logico que indica se a transferencia encon- 	Ё
Ё          Ё               trada foi entre empresas.                  	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL 														Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁGenerico                                                    Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function PonRetSit( cFil , cMat , dDataRef, aAfasta, aTransf, lTransfEmp  )

Local aArea				:= GetArea()
Local aAreaSRA			:= SRA->( GetArea() )
Local aReturn			:= Array( 4 )
Local bAscanTrf			:= { || NIL }
Local bAscanRTrf		:= { || NIL }

Local dIniAfas			:= Ctod("//")                                      
Local dFimAfas			:= Ctod("//")                                      
Local cTipAfas			:= ""
Local cSvFilAnt			:= cFilAnt
Local lTransf			:= .F.
Local nX				:= 0
Local nPosTransf		:= 0
Local nPosRTransf		:= 0

DEFAULT cFil			:= SRA->RA_FILIAL
DEFAULT cMat			:= SRA->RA_MAT
DEFAULT dDataRef		:= Ctod("//")
DEFAULT aAfasta			:= {}
DEFAULT aTransf			:= {}    
DEFAULt lTransfEmp 		:= .F.

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁInicializa os Valores DEFAULT para o aReturn                  Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
aReturn[1]	:= Space( Len( SRA->RA_SITFOLH ) )
aReturn[2]	:= Space( Len( SRA->RA_AFASFGT ) )
aReturn[3]	:= Space( Len( SRA->RA_RESCRAI ) )
aReturn[4]	:= Ctod("//")

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁAtualiza cFilAnt Conforme Filial do Funcionario               Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
cFilAnt		:= IF( !Empty( cFil ) , cFil , cFilAnt )

    dIniAfas:= dFimAfas:= Ctod("//")                                      
    cTipAfas:= ""
    IF (lAfastper:= !Empty(aAfasta) )                                 
		If ( lAfast := fAfasta( cFil , cMat , dDataRef , @dIniAfas , @dFimAfas , @cTipAfas , aAfasta ) )
			 aReturn[1] := IF( AllTrim( cTipAfas) == "F" , "F" , "A" )
			 aReturn[2] := AllTrim( cTipAfas )
		Endif
	Endif		
	
	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Verifica se Funcionario foi Transferido De Empresa ou de FiЁ
	Ё lial														 Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/	
	IF !( aReturn[1] == "D" )
		IF ( lTransf := !Empty(aTransf) )	
			/*
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Monta Bloco para Buca da Transferencia                     Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/	
			bAscanTrf := { |x|;
								( x[01] == cEmpAnt );		//Empresa de Origem igual a cEmpAnt
								.and.;
								( x[08] == cFilAnt );		//Filial de Origem igual a cFilAnt
								.and.;
								( x[07] <= dDataRef );		//Data da Transferencia igual Data de Referencia
						 }
			/*
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Procura o Indice da ultima Transferencia                   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/	
			nPosTransf := aScan( aTransf , bAscanTrf )
			nX		   := nPosTransf
			While ( ( nX := aScan( aTransf , bAscanTrf , ++nX ) ) > 0 )
				nPosTransf := nX
			End While
			/*
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё So considera a Transferencia se funcionario nao Retornou   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
			IF ( nPosTransf > 0 )
				/*
				здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				Ё Monta Bloco para Buca da Transferencia                     Ё
				юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/	
				bAscanRTrf := { |x|;
									( x[04] == cEmpAnt );					//Empresa de Destino igual a cEmpAnt
									.and.;
									( x[10] == cFilAnt );					//Filial de Destino igual a cFilAnt
									.and.;
									( x[07] >= aTransf[ nPosTransf , 7 ] );	//Retorno de Transferencia
								}
				/*
				здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				Ё Verifica Se Teve Transferencia Posterior a Referencia      Ё
				юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
				IF ( (nPosRTransf := aScan( aTransf , bAscanRTrf ) ) == 0 )
					/*
					здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					Ё So Atualiza se Nao Teve Retorno e Se a Transferencia    forЁ
					Ё Dentro da Referencia										 Ё
					юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
					aReturn[1] := "D"
					aReturn[2] := IF( lTransfEmp , "N" , "5" )
					aReturn[3] := "31"
					aReturn[4] := aTransf[ nPosTransf , 07 ] //A Demissao И a Data de Transferencia
				EndIF
			EndIF
		EndIF
	ElseIF Empty( aReturn[1] )
		/*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Considera a Situacao do Proprio Cadastro                   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
		aReturn[1] := SRA->RA_SITFOLH
		aReturn[2] := SRA->RA_AFASFGT
		aReturn[3] := SRA->RA_RESCRAI
		aReturn[4] := SRA->RA_DEMISSA
	EndIF

	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Se Funcionario foi Transferido a Situacao esta como de DemiЁ
	Ё tido e Devera Ser Mantida. Caso a Data de Demissao   estejaЁ
	Ё preenchida e Funcionario Esteja com Situacao Diferente   DeЁ
	Ё Demitido Atualiza a Situacao do Funcionario				 Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/	
	
	IF !( aReturn[1] == "D" )
		IF !Empty( SRA->RA_DEMISSA )
			IF ( Dtos( SRA->RA_DEMISSA ) <= Dtos(dDataRef ) )
				aReturn[1] := "D"
				aReturn[2] := SRA->RA_AFASFGT
				aReturn[3] := SRA->RA_RESCRAI
				aReturn[4] := SRA->RA_DEMISSA
			EndIF
		EndIF
	EndIF	

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura Dados de Entrada									 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/	
cFilAnt := cSvFilAnt
RestArea( aAreaSRA )
RestArea( aArea )

Return( aReturn )

/*
зддддддддддбдддддддддддддддддддбдддддбддддддддддддддддддбддддбдддддддддд©
ЁFunГЦo    ЁfCargaTpAus()      ЁAutorЁEquipe RH         ЁDataЁ09/04/2014Ё
цддддддддддедддддддддддддддддддадддддаддддддддддддддддддаддддадддддддддд╢
ЁDescriГЦo ЁObtem Tipo de AusЙncia conforme a tabela RCM                Ё
Ё          Ё                                 							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁfCargaTpAus(cCodAus)                                     	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcCodAus		-> CСdigo da AusЙncia (tabela SR8)             	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁRetorna o tipo de ausЙncia            						Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁSIGAPON                                                     Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Static Function fCargaTpAus(cCodAus)

Local cTipAus := ""
            
dbSelectArea("RCM")
If DbSeek(xFilial("RCM")+cCodAus)
	If RCM->RCM_TIPOAF == "1"
		cTipAus := "A"
	ElseIf RCM->RCM_TIPOAF == "4"
		cTipAus := "F"	
	Endif
Endif
           
Return (cTipAus)