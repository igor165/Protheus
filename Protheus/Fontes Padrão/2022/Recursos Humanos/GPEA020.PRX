#INCLUDE "TOTVS.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "GPEA020.CH"

Static lGp020Auto:= IsBlind()
Static cEFDAviso
Static lMsg := .F.
//Integração com o TAF
Static lIntTAF		:= ((SuperGetMv("MV_RHTAF",, .F.) == .T.) .AND. Val(SuperGetMv("MV_FASESOC",/*lHelp*/,' ')) >= 1 )
Static cCatNTSV		:= If( Empty(SuperGetMv("MV_NTSV",,"")), "701|711|712|741|", SuperGetMv("MV_NTSV",, "701|711|712|741|") )
Static lMiddleware	:= If( cPaisLoc == 'BRA' .AND. Findfunction("fVerMW"), fVerMW(), .F. )
Static lGeraEvt		:= lIntTAF .Or. lMiddleware
Static cVersEnvio	:= ""
Static cVersGPE		:= ""
Static cVerTaf		:= StrTran(StrTran(SuperGetMv("MV_TAFVLES",, "2.4"), "_", "."), "0", "", 1, 2)
Static lOpeSoc		:= SuperGetMv("MV_OPESOC", NIL, .F.) 

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Gpea020  ³ Autor ³ Mauro Sergio              ³ Data ³  09.09.96  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cadastramento de Dependentes                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data     ³ FNC      ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Leandro Dr. |03/10/2012|RHU210_3_1|Projeto M12RH01 - Padronizacao de fontes. ³±±
±±³            |          |          |Conversao para MVC.                       ³±±
±±³Cecilia Car.|16/04/2014|M_RH003   |Replica da versao 11 para versao 12.      ³±±
±±³            |          |002951_04 |                                          ³±±
±±³Raquel Hager³02/07/2014³TPZIUS    ³Inclusao de replicas versao 11  com itens ³±±
±±³            ³          ³          ³do eSocial.                               ³±±
±±³Emerson Camp|23/07/2014|TPXDBM    |Validações solicitadas pelo SQA.          ³±±
±±³            |          |          |                                          ³±±
±±³Flavio Corre|28/08/2014|TQLAPL    |Tratamento do campo RB_AUXCRE somente     ³±±
±±³            |          |          | quando for BRASIL                        ³±±
±±³Raquel Hager³04/09/2014³TQIDD2    ³Inclusao de help para CPF invalido para   ³±±
±±³            |          ³          ³dependente.                               ³±±
±±³Christiane V|09/04/2015|PCREQ-2663|Consistência da Existência de Plano Saúde ³±±
±±³            |          |          |ao alterar o campo RB_PLSAUDE.            ³±±
±±³Gabriel A.  |28/04/2015|PCREQ-2663|Alteração para que o campo                ³±±
±±³            |          |          |"Tem Plano de Saude" seja validado.       ³±±
±±³Gabriel A.  |28/04/2015|PCREQ-2663|Alteração para que não seja exibida a     ³±±
±±³            |          |          |mensagem do campo "TP Dep.eSoci" mais de  ³±±
±±³            |          |          |uma vez.                                  ³±±
±±³Christiane V|02/07/2015|  TSMUY2  |Alt. funções fTpDepBox() e fTpDepVld para ³±±
±±³            |          |          |versão 2.0 do eSocial.                    ³±±
±±³Philipe Pomp|03/09/2015|PCREQ-4499|Fontes referentes ao requisito da         ³±±
±±³            |          |          |convergência Logix                        ³±±
±±³Philipe Pomp|09/10/2015|PCREQ-4499|Alterações simbólicas.	                ³±±
±±³Marcos Perei|21/09/2015|PCREQ-5349|Ajuste na legenda p/chamar funcao padrão  ³±±
±±³Mariana M.  |04/11/2015|TTLNTL    |Ajuste na função Gp020TOk para que verifi-³±±
±±³            |          |          |que se existe valor de Auxilio Creche na  ³±±
±±³            |          |          |tabela S015. Caso existir, sistema deverá ³±±
±±³            |          |          |considerar este valor para pagamento do 	³±±
±±³            |          |          |auxilio. Senão deverá informar no cadastro³±±
±±³            |          |          |de dependentes                       	  	³±±
±±³Marcos Perei|06/11/2015|PCREQ-5588|Na validacao do Aux.Creche buscar a tabela³±±
±±³            |          |          |S109 quando for SIGAGFP                   ³±±
±±³Marcia Moura|13/01/2016|TTXLIX    |Ajuste em Gp020LOk para passar a pedir o  ³±±
±±³            |		  |	         |CPF para dependentes a partir dos 16 anos.³±±
±±³            |		  |	         |DIRF 2016.                                ³±±
±±³Claudinei S.|27/01/2016|TUIFD8    |Alterada a validacao do preenchimento do  ³±±
±±³            |		  |	         |CPF para 14 anos e nao mais 16            ³±±
±±³Renan Borges|10/05/2016|    TVCKUM|Ajuste para quando possuir auxilio creche ³±±
±±³            |		  |	         |realizar a busca pelo periodo aberto e nao³±±
±±³            |		  |	         |pela database.                            ³±±
±±³Gabriel A.  |16/06/2016|TVHDD5    |Ajuste para permitir inclusão via MILE.   ³±±
±±³Cícero Alves|14/09/2016|TW4480    |Retirados os PE GP020OKT, GP020LOK e 		³±±
±±³            |		  |	         |GP020CGV									³±±
±±³Raquel H.   |04/11/2016|TWCXMD    |Inclusão de método SetChAll e acerto no   ³±±
±±³			   |          |          |SetRelation de acordo com a Filial do func³±±
±±³Jônatas A.  |11/01/2017| MRH-4752 |Compatibilização fontes DIRF P118->P12114 ³±±
±±³			   |          |          |CPF obrigatório mudou de 14 p/ 18 anos.   ³±±
±±³Marcos Cout.|11/05/2017|DRHESOCP- |Aplicar a geração do evento S-2300 para o ³±±
±±³			   |          |       237|cadastro de dependentes. Adaptar esocial  ³±±
±±³			   |          |          |layout no formato 2.2.01.                 ³±±
±±³MArcia M..|11/05/2017|DRHESOCP- |Subindo inclusao do controle S-2205 quando ³±±
±±³			   |          |       222|gerado o dependentes                      ³±±
±±³Cecília C.|04/07/2017|DRHPAG-3753|Ajuste em Gp020TOK para não ocorrer error.³±±
±±³          |          |           |log em fPosTab e acessar a tabela S015 cor³±±
±±³          |          |           |retamente.                                ³±±
±±³Oswaldo L |19/07/2017|DRHESOCP-  |Ajuste exclusao dependentes no evento     ³±±
±±³          |          |629        |S2100                                     ³±±
±±³Oswaldo L |19/07/2017|DRHESOCP-  |Ajuste do DE\PARA da tabela de dependente ³±±
±±³          |          | 635       |do e-Social para o protheus               ³±±
±±³Oswaldo L |24/07/2017|DRHESOCP-  |Ajuste quanto ao acionar direto no botao  ³±±
±±³          |          | 652       |de exclusão total dos dependentes         ³±±
±±³Oswaldo L |03/08/2017|DRHESOCP755|Merge versao 11.80 e 12.1.17 e-social     ³±±±±±±±±±±±±
±±|Claudinei S.|31/08/2017|DRHESOCP-988 |Ajuste em Gp020LOk() para realizar as validações|±±
±±|            |		  |	            |do CPF do Beneficiário, eSocial leiaute 2.3     |±±
±±|Eduardo V   |14/09/2017|DRHESOCP-1123| Tratativa para a nova versão 2.3               |±±
±±|Marco A. Glz|03/10/2017|TSSERMI01-165| Se realizan ajustes para localizar campos de   |±±
±±|            |          |	            | uso exclusivo para Brasil, que son utilizados  |±±
±±|            |          |	            | para funcionalidad eSocial con TAF. (MEX)      |±±
±±|Cecília C.  |04/07/2017|DRHESOCP-1368|Ajuste para emitir mensagem de integração com o |±±
±±|            |          |             |TAF na geração dos eventos S-2200 e S-2205.     |±±
±±|Cecília C.  |18/10/2017|DRHESOCP-1519|Ajuste para permitir gerar evento S-2300  na in-|±±
±±|            |          |             |clusão do dependente.                           |±±
±±|  Marco A.  |19/10/2017|TSSERMI01-218|Se realiza modificacion en funcion Gp020Grav, ya|±±
±±|            |          |             |que mostraba error porque la variable wn no     |±±
±±|            |          |             |existia y se reemplaza por nLoop. (ARG)         |±±
±±|Eduardo K.  |20/10/2017|MPRIMESP11860|Ajuste em Gp020TOk para que o help exiba qual   |±±
±±|            |          |             |campo do array aCpoObrig não foi preenchido.    |±±
±±|Cecília C.  |05/12/2017|DRHESCOP-2199|Ajuste na função fTpDepBox para o leiaute 2.4.1,|±±
±±|            |          |             |dos tipos de dependentes.                       |±±
±±|Marcos Cout.|18/12/2017|DRHESCOP-2491|Realizando ajustes no trecho em que  bloqueia   |±±
±±|            |          |             |a operação quando o MV_RHTAF esta desativado.   |±±
±±|            |          |             |Ajustes na validação de CPF. Retorno de cate_   |±±
±±|            |          |             |goria do trabalhador. Ajuste na função de integ |±±
±±|Julio Silva |29/01/2018|MPRIMESP12929|Ajuste para que seja importado o dependente     |±±
±±|            |          |             |corretamente no envento  S-2200.			     |±±
±±³Marcos Cout.|09/02/2017|DRHESCOP-2924|Realizada a criação do campo RB_INCT e validado ³±±
±±³            |          |             |o seu preenchimento nas funções internas        ³±±
±±³Cecilia Car.|28/02/2017|DRHESCOP-3129|Realizado ajuste para respeitar o conteudo do pa³±±
±±³            |          |             |râmetro MV_EFDAVIS na validação de campos do    ³±±
±±³            |          |             |eSocial.                                        ³±±
±±³Marcos Cout.|16/02/2017|DRHESOCP-3618|Realizando ajuste na chave de pesquisa do trab  ³±±
±±³            |          |             |sem vinculo (TSV)                               ³±±
±±³Cecilia Car.|17/04/2018|DRHESCOP-4061|Ajuste ajuste para integrar na filial do funcio-³±±
±±³            |          |             |nário e não na filail logada, quando a configu- ³±±
±±³            |          |             |ração de empresas é 1x1.                        ³±±
±±³Wesley Alves|08/04/2019|DRHGCH-18567 |Criação de pontos de chamada para envio de dados³±±
±±³Pereira     |          |             |por API nos processos de 					     ³±±
±±³            |          |             |inclusão/alteração/deleção de dependentes.      ³±±
±±³Marco A. Glz|07/06/2021| DMINA-12701 |Se excluye validación fVldCmpTab para MI.       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPEA020(nOpcAuto,xAutoCab,xAutoItens,nOpc,lAutomato)

Local oBrowse
Local xRetFilRh
Local cFiltraRh 	:= ""
Local cFil			:= ""
Local cMat			:= ""
Local oModelAuto
Local nOpcao 		:= nOpc
Local aRetGPE       := Array(2)
Local aRetTAF       := Array(2)
Local lVerBlq       := Iif(cPaisLoc == 'BRA' .And. FindFunction("fVersEsoc"), fVersEsoc( "S2300", .F., @aRetGPE, @aRetTAF, @cVersEnvio, @cVersGPE,,, ""), .T.)

Private aAutoCab	:= {}
Private aAutoItens  := {}
Private cRoteiro 	:= ""
Private cProcesso	:= ""
Private aCpyGrid	:= {}
Private lRobo 		:= .F.

Default lAutomato	:= .F.

If lAutomato
	lRobo := .T.
Endif

If Empty(cVersGPE)
	cVersGPE := cVersEnvio
EndIf

// RECEBE A VERSÃO DO TAF.
cVerTaf := StrTran(Iif(cVerTaf == "2.4.01", "2.4", cVerTaf), "S.1", "9")

If FindFunction("ESocMsgVer") .And. lIntTaf .And. !lMiddleware .And. cVersGPE <> cVersEnvio .And. (cVersGPE >= "9.0" .Or. cVersEnvio >= "9.0")
	//"Atenção! A versão do leiaute GPE é xxx e a do TAF é xxx, sendo assim, estão divergentes. O Evento xxx não será integrado com o TAF, e consequentemente, não será enviado ao RET.
	//Caso prossiga a informação será atualizada somente na base do GPE. Deseja continuar?"
	If ESocMsgVer(.F., /*cEvento*/, cVersGPE, cVersEnvio)
		lIntTaf := .F.
	Else
		Return
	EndIf
EndIf

lMsg := .F.

cEFDAviso	:= If(cPaisLoc == 'BRA' .AND. Findfunction("fEFDAviso"), fEFDAviso(), "0")	//Se nao encontrar este parametro apenas emitira alertas

If lMiddleware .And. !ChkFile("RJE")
	Help( " ", 1, OemToAnsi(STR0017),, OemToAnsi(STR0109), 1, 0 )//"Tabela RJE não encontrada. Execute o UPDDISTR - atualizador de dicionário e base de dados."
	Return
EndIf

lGp020Auto  :=(xAutoCab<>NIl)

If lGp020Auto
	dbSelectArea("SRA")
	aAutoCab	:= aClone(xAutoCab)
	aAutoItens	:= aClone(xAutoItens)

	If (nT := aScan(aAutoCab,{|x| UPPER(Alltrim(x[1]))=='RA_FILIAL'})) > 0
		cFil := aAutoCab[nT,2]
	Else
		cFil := xFilial("SRA")
	EndIf

	If (nT := aScan(aAutoCab,{|x| UPPER(Alltrim(x[1]))=='RA_MAT'})) > 0
		cMat := aAutoCab[nT,2]
	EndIf

	dbSelectArea('SRA')
	dbSetOrder(1)
	If !dbSeek(cFil+cMat)
		AutoGRLog("Tabela "+Alias()+" "+Dtoc(MsDate())+' '+Time() )
		AutoGrLog("RA_FILIAL: "+cFil)
		AutoGrLog("RA_MAT: "+cMat)
		AutoGRLog("Pesquisa nao encontrada com dados acima")
		AutoGRLog(Replicate("-",80))
		Return .F.
	EndIf
EndIf

If nOpcAuto <> Nil
	Do Case
		Case nOpcAuto == 3
			INCLUI := .T.
			ALTERA := .F.
		Case nOpcAuto == 4
			INCLUI := .F.
			ALTERA := .T.
		OtherWise
			INCLUI := .F.
			ALTERA := .F.
	EndCase
	nOpcao := nOpcAuto
EndIf

If lGp020Auto .or. nOpcAuto <> Nil

	If lGp020Auto
		nOpcao 		:= If(nOpc<>Nil,nOpc,nOpcao)
		aRotina 	:= MenuDef()
		oModelAuto  := ModelDef()

		//Valida se continua ou aborta o processo
		If G020VldIni( oModelAuto, nOpc)

			// VERIFICA SE JÁ EXISTE DEPENDENTE CADASTRADO, CASO EXISTA,
			// ADICIONA REGISTRO AO ARRAY DO EXECAUTO.
			fTemDepen(@aAutoItens, nOpc)

			//Executa rotina automatica SEM Interface
			FWMVCRotAuto(oModelAuto,"SRA",nOpcao,{{"GPEA020_SRA",aAutoCab},{"GPEA020_SRB",aAutoItens}}, .F.)
		EndIf

		/*
			O propósito das linhas a seguir é limpar o objeto da memória para que não dê
			"Reference counter overflow ( over 32600 ) on CodeBlock assignment", erro que acontecia
			quando o ExecAuto era chamado mais de 3000x consecutivas.
			Mais informações: http://tdn.totvs.com/pages/viewpage.action?pageId=146179637
		*/
		oModelAuto:Deactivate()
		oModelAuto:Destroy()
		oModelAuto:= nil
		aSize(aAutoCab,0)
		aAutoCab:= nil
		aSize(aAutoItens,0)
		aAutoItens:= nil
	Else
		//Executa rotina COM Interface
		lOk := ( FWExecView(STR0009,'GPEA020', nOpcao, , { || .T. } ) == 0 ) //"Cadastro de Dependentes"
	EndIf

Else

	//------------------------------------------
	//Busca o filtro a ser utilizado no Browse
	//------------------------------------------
	xRetFilRh := CHKRH("GPEA020","SRA","1")
	If ValType(xRetFilRh) == "L"
		cFiltraRh := if(xRetFilRh,".T.",".F.")
	Else
		cFiltraRh := xRetFilRh
	EndIf

	//Monta o Browse
	oBrowse := FWMBrowse():New()
	oBrowse:SetAlias('SRA')
	oBrowse:SetDescription(STR0010) //Dependentes
	GpLegend(@oBrowse,.T.)
	oBrowse:SetmenuDef( 'GPEA020' )

	//Filtro padrao do Browse conforme tabela SRW (Controle de Restricoes de Usuarios)
	oBrowse:SetFilterDefault(cFiltraRh)
	oBrowse:Activate()

EndIf

//Retorna o SET EPOCH padrao do framework
RetPadEpoch()

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MenuDef   ºAutor  ³Leandro Drumond     º Data ³  03/10/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Menu Funcional                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MenuDef()
Local aRotina :=  {}

ADD OPTION aRotina TITLE STR0004 ACTION 'PesqBrw'          	OPERATION 1 ACCESS 0 //"Pesquisar"
ADD OPTION aRotina TITLE STR0005 ACTION 'VIEWDEF.GPEA020'	OPERATION 2 ACCESS 0 //"Visualizar"
ADD OPTION aRotina TITLE STR0043 ACTION 'VIEWDEF.GPEA020' 	OPERATION 3 ACCESS 0 //"Atualizar"
ADD OPTION aRotina TITLE STR0008 ACTION 'VIEWDEF.GPEA020' 	OPERATION 5 ACCESS 0 //"Excluir"

Return aRotina

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ModelDef  ºAutor  ³Leandro Drumond     º Data ³  03/10/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Definicao do modelo de dados do cadastro de dempendentes    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ModelDef()
Local oStructSRA
Local oStructSRB
Local oModel
Local aRemovCmps	:= {}

If cPaisLoc == "ARG"
	oModel:= MpFormModel():New("GPEA020",{ |oModel| ObtnSRB( oModel ) } /*Pre-Validacao*/, { || Gpea020ValPE() } /*Pos-Validacao*/, { |oModel| Gp020Grav( oModel,cVersEnvio ) } /*Commit*/, /*Cancel*/)
Else
	oModel:= MpFormModel():New("GPEA020",/*Pre-Validacao*/, { || Gpea020ValPE() } /*Pos-Validacao*/, { |oModel| Gp020Grav( oModel, cVersEnvio ) } /*Commit*/, /*Cancel*/)
Endif

oStructSRA := FWFormStruct(1,"SRA",{|cCampo| AllTrim(cCampo)+"|" $ "RA_FILIAL|RA_MAT|RA_NOME|RA_ADMISSA|"})
oModel:AddFields("GPEA020_SRA", /*cOwner*/, oStructSRA , /*Pre-Validacao*/,/*Pos-Validacao*/,/*Carga*/)
oModel:GetModel("GPEA020_SRA"):SetOnlyView( .T. )
oModel:GetModel("GPEA020_SRA"):SetOnlyQuery( .T. )

If !IsInCallStack("FWMILEIMPORT")
	oStructSRA:SetProperty( 'RA_MAT'    ,MODEL_FIELD_INIT,FwBuildFeature( STRUCT_FEATURE_INIPAD, 'SRA->RA_MAT'     ) )
	oStructSRA:SetProperty( 'RA_NOME'   ,MODEL_FIELD_INIT,FwBuildFeature( STRUCT_FEATURE_INIPAD, 'SRA->RA_NOME'    ) )
	oStructSRA:SetProperty( 'RA_ADMISSA',MODEL_FIELD_INIT,FwBuildFeature( STRUCT_FEATURE_INIPAD, 'SRA->RA_ADMISSA' ) )
EndIf

oStructSRB := FWFormStruct(1,"SRB")
oModel:AddGrid("GPEA020_SRB", "GPEA020_SRA"/*cOwner*/, oStructSRB , /*bLinePre*/, { |oGrid| Gp020LOk(oGrid, cVersEnvio) } /* bLinePost*/, /*bPre*/, { |oGrid| Gp020TOk(oGrid) } /*bPost*/,/*bLoad*/)
oModel:GetModel('GPEA020_SRB'):SetOptional(.T.)

If !lGp020Auto
	oStructSRB:RemoveField( "RB_MAT" ) //Remove campo do modelo de dados
EndIf

oModel:SetRelation("GPEA020_SRB",{{"RB_FILIAL",'xFilial("SRB",SRA->RA_FILIAL)'},{"RB_MAT","RA_MAT"}},SRB->(IndexKey()))

//Funcao a ser chamada antes da ativacao do Modelo de Dados.
//Pode ser utilizada para inibir a inicializacao do model.
//Se o retorno for negativo, o Model nao sera exibido e a rotina sera abortada
If !lGp020Auto
	oModel:SetVldActivate( { |oModel| G020VldIni(oModel,oModel:GetOperation()) } )
EndIf

Return(oModel)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ViewDef   ºAutor  ³Leandro Drumond     º Data ³  03/10/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Definicao da tela do cadastro de dempendentes    			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ViewDef()
Local oModel		:= FwLoadModel("GPEA020")
Local oStructSRA	:= Nil
Local oStructSRB	:= Nil
Local oView			:= FWFormView():New()

oView:SetModel(oModel)

oStructSRA := FWFormStruct(2,"SRA",{|cCampo| AllTrim(cCampo)+"|" $ "RA_MAT|RA_NOME|RA_ADMISSA|"})
oStructSRA:SetNoFolder()

oView:AddField( "GPEA020_SRA" , oStructSRA )

oStructSRB := FWFormStruct(2,"SRB")
oView:AddGrid(  "GPEA020_SRB" , oStructSRB )

oStructSRB:RemoveField( "RB_MAT" )

oView:SetViewProperty("GPEA020_SRA","OnlyView") //Somente visualizacao. Nao permite edicao dos campos do cabecalho (SRA)

oView:createHorizontalBox("FORMFIELD",15)
oView:createHorizontalBox("GRID"     ,85)

oView:SetOwnerView( "GPEA020_SRA","FORMFIELD")
oView:SetOwnerView( "GPEA020_SRB","GRID")

oView:AddIncrementField("GPEA020_SRB","RB_COD")

oView:SetCloseOnOk({ || .T. })//retira bota salvar e criar novo

Return(oView)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³                    ROTINAS DE CRITICA DE CAMPOS                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpea020ValPE³ Autor ³ Allyson Mesashi       ³ Data ³ 10/09/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao ponto entrada de Inclusao/Alteracao de Dependentes  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gpea020                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Gpea020ValPE()

Local lRet	:= .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para checar os dados de inclusao/alteracao  |
//³ de dependentes. O retorno deve ser logico (.T. ou .F.)       |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock( "Gp020ValPE" )
	lRet := ExecBlock( "Gp020ValPE", .F., .F. )
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA020   ºMárcia/Chris   Microsiga    º Data ³  12/30/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao para testar o conteudo do campo grau de parentesco  º±±
±±º          ³e assim tornar ou nao editavel o cpo incapacidade           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function WHEN_RBINCAPAC()
Local oModel 	:= FWModelActive()
Local oGrid   	:= oModel:GetModel("GPEA020_SRB")
Local lRet 		:= .T.

lRet := Iif( oGrid:GetValue("RB_GRAUPAR") $ "156", .T., .F.)
oGrid	:= Nil
oModel 	:= Nil
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA020   ºMárcia/Chris  Microsiga     º Data ³  12/30/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para testar o conteudo do campo grau de parentesco e º±±
±±º          ³assim tornar ou n editavel o cpo de docto e tp docto paternoº±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WHEN_RBDOCPAT()
Local oModel 	:= FWModelActive()
Local oGrid   	:= oModel:GetModel("GPEA020_SRB")
Local lRet 		:= .T.

lRet := Iif( oGrid:GetValue("RB_GRAUPAR") == "4", .T., .F.)
oGrid	:= Nil
oModel	:= Nil
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³fRetUbiPeru  ³ Autor ³Erika Kanamori         ³ Data ³ 23.04.10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡Æo ³ Preenche Estado, Municipio e Bairro                           ³±±
±±³			 ³                                							     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Peru													 	     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fRetUbiPeru()
Local oModel		:= FWModelActive()
Local oGrid			:= oModel:GetModel("GPEA020_SRB")
Local nAux			:= 1
Local nPosTab		:= 0
Local lRet			:= .F.
Local aTabUbiGeo	:= {}

fCarrTab( @aTabUbiGeo, "S022", Nil)

If ( len(aTabUbiGeo) >= 1 ) .And. !IsInCallStack("FWMILEIMPORT")
    nAux := 1
	While ( nAux <= len(aTabUbiGeo) )
        If ( aTabUbiGeo[nAux,1] == "S022" .And. aTabUbiGeo[nAux,5] == SubStr(M->RB_CEP,1,2) .And. ;
        	aTabUbiGeo[nAux,6] == SubStr(M->RB_CEP,3,2) .And. aTabUbiGeo[nAux,7] == SubStr(M->RB_CEP,5,2) )

    		oGrid:SetValue("RB_BAIRRO", aTabUbiGeo[nAux,8])

    		nPosTab:= fPosTab("S021", SubStr(M->RB_CEP,1,2), "=", 4, SubStr(M->RB_CEP,3,2), "=", 5)
    		If nPosTab > 0
    			oGrid:SetValue("RB_MUNICIP", fTabela("S021", nPosTab, 6 ) )
       		EndIf

       		nPosTab:= fPosTab("S020", SubStr(M->RB_CEP,1,2), "=", 4 )
       		If nPosTab > 0
    			oGrid:SetValue("RB_ESTADO", fTabela("S020", nPosTab, 5 ) )
    		EndIf

    		nAux := Len(aTabUbiGeo)
    		lRet:= .T.
    	EndIf
    	nAux++
    EndDo
EndIf
oGrid	:= Nil
oModel := Nil
aSize(aTabUbiGeo,0)
aTabUbiGeo := Nil
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA020   ºAutor  ³Erika Kanamori      º Data ³  06/07/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para controle: campo RB_DOCESCO devera ser habilitadoº±±
±±º          ³para edicao de acordo com o conteudo de RB_AUXESCO.         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Peru                                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WHENRBDOCESCO()
Local oModel 	:= FWModelActive()
Local oGrid   	:= oModel:GetModel("GPEA020_SRB")
Local lRet 		:= .F.

lRet := Iif(oGrid:GetValue("RB_AUXESCO") $ "1*2*3", .T., .F.)
oGrid	:= Nil
oModel := Nil
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA020   ºAutor  ³Erika Kanamori      º Data ³  03/09/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para controle: campo RB_DTALTA devera ser habilitado º±±
±±º          ³para edicao de acordo com o conteudo de RB_SITUACA.         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Peru                                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function RBDTALTA_WHEN()
Local oModel 	:= FWModelActive()
Local oGrid   	:= oModel:GetModel("GPEA020_SRB")
Local lRet 		:= .T.

If Alltrim(ReadVar()) $ "M->RB_DTALTA"

	lRet := Iif(oGrid:GetValue("RB_SITUACA") == "10", .T., .F.)

	If !lRet .And. !oGrid:lUpdateLine
		Help( " ", 1, "HELP",, OemToAnsi(STR0039),1,0) //"Este campo só pode ser editado para a Situação 10 - Alta"
	EndIf

EndIf
oGrid	:= Nil
oModel := Nil
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA020   ºAutor  ³Erika Kanamori      º Data ³  03/09/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para controle: campos RB_DTBAIXA e RB_MOTIVOB devera º±±
±±º          ³ser habilitado para edicao de acordo com o conteudo de      º±±
±±º          ³RB_SITUACA.   										      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Peru                                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function RBDTBAIXA_WHEN()
Local oModel 	:= FWModelActive()
Local oGrid   	:= oModel:GetModel("GPEA020_SRB")
Local lRet 		:= .T.

If Alltrim(ReadVar()) $ "M->RB_DTBAIXA"

	lRet := Iif(oGrid:GetValue("RB_SITUACA") == "11", .T., .F.)

	If !lRet .And. !oGrid:lUpdateLine .And. !IsInCallStack("FWMILEIMPORT")
		Help( " ", 1, "HELP",, OemToAnsi(STR0040),1,0) //"Este campo só pode ser editado para a Situação 11 - Baixa"
		oGrid:SetValue("RB_DTBAIXA", CtoD(""))
	EndIf

EndIf
oGrid	:= Nil
oModel := Nil
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³G020VldIniºAutor  ³Leandro Drumond     º Data ³  03/10/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validacao antes da ativacao do modelo de dados   			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function G020VldIni(oModel, nOperacao)

	Local aArea     := GetArea()
	Local lRet 		:= .T.
	Local cMsgRet	:= ""
	Local cRetGPE 	:= ""

	Local lVerBlq   := .T.
	Local aRetGPE   := Array(2)
	Local aRetTAF   := Array(2)

	If !(lGp020Auto)
		lVerBlq     := Iif(cPaisLoc == 'BRA' .And. FindFunction("fVersEsoc"), fVersEsoc( "S2300", .F., @aRetGPE, @aRetTAF, @cVersEnvio, @cVersGPE,,, ""), .T.)
	Endif

	If len(aRetGPE) >= 2
		cRetGPE := aRetGPE[2]
	EndIf

	cMsgRet	:= STRTRAN(STRTRAN(STR0099,"#GPE#",cRetGPE),"#TAF#",cRetGPE)

	If !(IsInCallStack("CFG600lmdl")) .And. nOperacao == 3
		oModel:SetOperation( 4 )
	EndIf

	//--------------------------------------------------------------
	//Verifica se o Arquivo Esta Vazio
	//--------------------------------------------------------------
	If !ChkVazio("SRA")
		Return .F.
	EndIf

	If nOperacao == MODEL_OPERATION_DELETE .and. Gp020SrbNull()
		If lGp020Auto
			AutoGrLog(STR0044)
		Else
			Help(,,'HELP',, STR0044,1,0 ) //"Não existe nenhum dependente cadastrado para este funcionário."
		EndIf
		lRet := .F.
	EndIf

	RestArea( aArea )

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp020SrbNullºAutor  ³Leandro Drumond   º Data ³  30/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se existe registro na SRB para funcionario atual.  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gp020SrbNull()
Local aArea := GetArea()
Local lRet	:= .T.

DbSelectArea("SRB")

If DbSeek(xFilial("SRA")+SRA->RA_MAT)
	lRet := .F.
EndIf

RestArea(aArea)

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp020LOk  ºAutor  ³Leandro Drumond     º Data ³  03/10/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validacao de bLinePos. Valida a troca de linha do Grid	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Gp020LOk(oGrid, cVersGPE)

	Local cDia      := If (Month(dDataBase) == 2 , "28" , "30")
	Local lRet 		:= .T.
	Local lMes		:= .T.
	Local dAniver 	:= CtoD("")
	Local ddacalc   := CtoD("")
	Local dFaz14Anos:= CtoD("")
	Local oStruct   := oGrid:GetStruct()
	Local aCampos	:= oStruct:GetFields()
	Local nPosBaixa	:= oGrid:GetIdField("RB_DTBAIXA")
	Local nPosEntreg:= oGrid:GetIdField("RB_DTENTRA")
	Local nPosNasc	:= oGrid:GetIdField("RB_DTNASC")
	Local nPosTipSF	:= oGrid:GetIdField("RB_TIPSF")
	Local nPosIniAM	:= oGrid:GetIdField("RB_DTINIAM")
	Local nPosFimAM	:= oGrid:GetIdField("RB_DTFIMAM")
	Local nPosIniAO	:= oGrid:GetIdField("RB_DTINIAO")
	Local nPosFimAO	:= oGrid:GetIdField("RB_DTFIMAO")
	Local nPosCPF	:= oGrid:GetIdField("RB_CIC")
	Local nPosPS	:= oGrid:GetIdField("RB_PLSAUDE")
	Local cPerRef	:= AnoMes(dDataBase)
	Local nIdade 	:= 0
	Local nx		:= 0
	Local cCodDep	:= oGrid:GetValue("RB_COD")
	Local cDepIR	:= ""
	Local aEstb		:= {}
	Local nPosEstb	:= 0
	Local cTpInscr	:= ""
	Local cInscr	:= ""
	Local cCPF_Dep	:= ""
	Local nGrid		:= 0
	Local nG		:= 0

	Default cVersGPE:= "2.2"

	If cPaisLoc == "BRA"
		cDepIR := oGrid:GetValue("RB_TIPIR")
	EndIf

	ddacalc :=CtoD(cDia+"/"+StrZero(Month(dDataBase),2)+"/"+StrZero(Year(dDataBase),4), "DDMMYY" ) //Atualizacao da Variavel ddacalc para não utilizar o DDATABASE

	Begin Sequence

		// VERIFICA O COMPARTILHAMENTO DAS TABELAS C9V/C9Y/CUP/T3L/CRQ/T80/T90/T1U/T1V/TOF/CUU/T3A E COMPARA
		// AO DA TABELA SRA.
		If cPaisLoc == "BRA" .And. Findfunction("fVldCmpTab") .And. !fVldCmpTab()
			lRet := .F.
		EndIf

		If lRet .And. !oGrid:IsDeleted()

			For nx := 1 To Len(aCampos)

				If lRet .And. Empty(oGrid:GetValue(Trim(aCampos[nx][MODEL_FIELD_IDFIELD])))

					nIdade   := CALC_IDADE(dDataBase,oGrid:GetValue("RB_DTNASC"))
					dAniver  := StrZero(Year(dDataBase),4)+StrZero(Month(oGrid:GetValue("RB_DTNASC")),2)

					If cPaisLoc == "BRA"
						If ( MesAno(ddacalc) > MesAno(oGrid:GetValue("RB_DTNASC"),14) )
							lMes := .F.
						EndIf

						dFaz14Anos := YearSum( oGrid:GetValue("RB_DTNASC"), 14 )

						If ( ((oGrid:GetValue("RB_TIPIR") == "2" .And. nIdade > 21) .and. !lMes) .Or.;
						((oGrid:GetValue("RB_TIPIR") == "3" .And. nIdade > 24) .and. !lMes) ) .and. lRet
							Help(" ",1,"A020STIPIR")
							lRet := .F.
							Exit
						EndIf

						If nPosTipSF > 0
							If oGrid:GetValue("RB_TIPSF") == "2" .And. nIdade >= 14 .And. MesAno(ddacalc) > MesAno(dFaz14Anos) .and. lRet
								Help(" ",1,'HELP', , OemToAnsi(STR0079),1,0 )
								lRet := .F.
								Exit
							EndIf
						EndIf

						// Se exibe aviso de inconsistencia eSocial
						If Empty(oGrid:GetValue("RB_TPDEP"))
							If lRet .And. cEFDAviso <> "2" .And. !(SRA->RA_CATEFD $ cCatNTSV)
								// "O campo (TP Dep.eSoci) - 'Tipo de Dependente eSocial' nao foi informado."###"Atencao"

								//-- Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
								Help(" ", 1, OemToAnsi(STR0017),, OemToAnsi( STR0056 ),1,0 )
								If cEFDAviso == "1"
									lRet := .F.
								EndIf
								lGeraEvt := .F.
								Exit
							Else
								lGeraEvt := .F.
							EndIf
						EndIf

					ElseIf cPaisLoc == "ARG"	//# Argentina
						If oGrid:GetValue("RB_TIPSF") == "2" .And. (nIdade > 18 .Or. nIdade == 18 .And.;
							MesAno(ddacalc) > dAniver) .And. lRet
							Help(" ",1,"A020STIPSF")
							lRet := .F.
							Exit
						EndIf
					ElseIf cPaisLoc $ "ANG"	//# Angola
						If oGrid:GetValue("RB_TIPSF") == "2" .And. nIdade > 18 .And. lRet
							Help(" ",1,"A020STIPSF")
							lRet := .F.
							Exit
						EndIf
					EndIf
					If Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_NOME" .and. lRet
						Help(" ",1,"A020SNOME")
						lRet := .F.
						Exit
					EndIf
					If Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_DTNASC" .and. lRet
						Help(" ",1,"A020SDTNAS")
						lRet := .F.
						Exit
					EndIf
					If Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_SEXO" .and. lRet
						Help(" ",1,"A020SSEXO")
						lRet := .F.
						Exit
					EndIf
					If Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_GRAUPAR" .and. lRet
						Help(" ",1,"A020SGRAUP")
						lRet := .F.
						Exit
					EndIf
					If Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_TIPIR" .and. lRet
						Help(" ",1,"A020STIPIR")
						lRet := .F.
						Exit
					EndIf
					If Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_TIPSF" .and. lRet
						Help(" ",1,"A020STIPSF")
						lRet := .F.
						Exit
					EndIf

					If lRet .And. Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_TIPAMED" .and. oGrid:GetValue("RB_TPDEPAM") $ "1|2"
						Help(" ",1,"A020STPAM") //Tipo de Assistência Médica em branco
						lRet := .F.
						Exit
					EndIf
					If lRet .And. Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_CODAMED" .and. oGrid:GetValue("RB_TPDEPAM") $ "1|2"
						Help(" ",1,"A020SCODAM") //Código do plano de Assistência Médica em branco
						lRet := .F.
						Exit
					EndIf
					If lRet .And. Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_VBDESAM" .and. oGrid:GetValue("RB_TPDEPAM") $ "1|2"
						Help(" ",1,"A020SVERBAM") //Código da verba de desconto da Assistência Médica em branco
						lRet := .F.
						Exit
					EndIf

					If lRet .And. Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_TPASODO" .and. oGrid:GetValue("RB_TPDPODO") $ "1|2"
						Help(" ",1,"A020STPAO")  //Tipo de Assistência Odontológia em branco
						lRet := .F.
						Exit
					EndIf
					If lRet .And. Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_ASODONT" .and. oGrid:GetValue("RB_TPDPODO") $ "1|2"
						Help(" ",1,"A020SCODAO")//Código do plano de Assistência Odontológia em branco
						lRet := .F.
						Exit
					EndIf
					If lRet .And. Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_VBDESAO" .and. oGrid:GetValue("RB_TPDPODO") $ "1|2"
						Help(" ",1,"A020SVERBAO")//Código da verba de desconto da Assistência Odontológia em branco
						lRet := .F.
						Exit
					EndIf
					If lRet .And. Trim(aCampos[nx][MODEL_FIELD_IDFIELD]) == "RB_DEFP" .and. SRA->RA_TPPREVI == "2"
						Help(" ", 1, OemToAnsi(STR0017),, OemToAnsi( STR0105 ),1,0 )
						lRet := .F.
						Exit
					Endif

					If lRet .And. cVersEnvio >= "9.0.00" .And. oGrid:GetValue("RB_TIPIR") <> "4" .And. Empty(oGrid:GetValue("RB_CIC"))
						Help(, 1, "CPFDEPEN",, + CRLF + OemToAnsi(STR0136), 1, 0,,,,,, { + CRLF + OemToAnsi(STR0142) + OemToAnsi(TITSX3("RB_CIC")[1])})
						lRet := .F.
						Exit
					Endif
				EndIf
			Next nx

			If !lRet
				Break
			EndIf

			If lRet .And. nPosPs > 0 .And. oGrid:GetValue("RB_PLSAUDE") == "2"
				DbSelectArea("RHL")
				RHL->(DbSetOrder(2))
				RHL->(DbSeek( xFilial( "RHL" , xFilial("SRB") ) + SRA->RA_MAT + cCodDep ))
				If RHL->RHL_FILIAL == SRA->RA_FILIAL .And. RHL->RHL_MAT == SRA->RA_MAT .And. RHL->RHL_CODIGO == cCodDep .And. RHL->RHL_TPFORN == '1'
					cPerIni := Right(RHL->RHL_PERINI, 4) + Left(RHL->RHL_PERINI, 2)
					cPerFim := Right(RHL->RHL_PERFIM, 4) + Left(RHL->RHL_PERFIM, 2)
					If (cPerRef >= cPerIni .And. (Empty(RHL->RHL_PERFIM) .Or. cPerRef <= cPerFim ))
						//"O Dependente possui Plano de Saúde Ativo, não é possível alterar o campo 'Pl.Saúde' para 'Não'
						Help("",1,OemtoAnsi(STR0017),,OemtoAnsi(STR0065)+oGrid:GetValue("RB_COD")+ OemtoAnsi(STR0066),1,0)
						lRet:= .F.
						Break
					Endif
				Endif
			Endif

			If nPosBaixa > 0 .and. nPosEntreg > 0 .and. nPosNasc > 0
				If (!empty(oGrid:GetValue("RB_DTBAIXA")).and. oGrid:GetValue("RB_DTBAIXA") < oGrid:GetValue("RB_DTENTRA")) .and. lRet
					lRet := .F.
					Help( " ", 1, "HELP",, OemToAnsi(STR0016),1,0 )//"Data da Baixa nao pode ser inferior a data de entrega!"
					Break
				EndIf
				If (( !Empty(oGrid:GetValue("RB_DTBAIXA")) .and. oGrid:GetValue("RB_DTBAIXA")< oGrid:GetValue("RB_DTNASC")) .or. (!empty(oGrid:GetValue("RB_DTENTRA")) .And. oGrid:GetValue("RB_DTENTRA") < oGrid:GetValue("RB_DTNASC"))) .and. lRet
					lRet := .F.
					Help( " ", 1, "HELP",, OemToAnsi(STR0018),1,0 ) //"Data da Baixa e Data de Entrega nao podem ser inferiores a data de Nascimento!"
					Break
				EndIf
			EndIf

			If lRet .and. nPosIniAM > 0 .and. nPosFimAM > 0
				If !Empty(oGrid:GetValue("RB_DTINIAM")) .and. !Empty(oGrid:GetValue("RB_DTFIMAM")) .and. oGrid:GetValue("RB_DTFIMAM") < oGrid:GetValue("RB_DTINIAM")
					lRet := .F.
					Help( " ", 1, "HELP",, OemToAnsi(STR0023),1,0 )//"A data de encerramento da vigência do plano de assistência médica não pode ser inferior a data de início."
					Break
				EndIf
			EndIf

			If lRet .and. nPosIniAO > 0 .and. nPosFimAO > 0
				If !Empty(oGrid:GetValue("RB_DTINIAO")) .and. !Empty(oGrid:GetValue("RB_DTFIMAO")) .and. oGrid:GetValue("RB_DTFIMAO") < oGrid:GetValue("RB_DTINIAO")
					lRet := .F.
					Help( " ", 1, "HELP",, OemToAnsi(STR0024),1,0 )//"A data de encerramento da vigência do plano de assistência odontológica não pode ser inferior a data de início."
					Break
				EndIf
			EndIf

			If cPaisLoc == "BRA" .And. cVersGPE < "9.0.00"
				If lRet .And. nPosCPF > 0 .and. nPosNasc > 0
					//Se for maior de 18 anos, apenas informa que CPF necessario mas nao obriga.
					If !(lInttaf .And. lMiddleware) .And. nIdade >= 18 .Or. (lInttaf .Or. lMiddleware) .And. oGrid:GetValue("RB_TIPIR") $ "123" .And. (cVersGPE >= "2.5.00" .OR. (cVersGPE >= '2.4.02' .And. cVersGPE < "2.5.00" .And. nIdade >= 8))
						If Empty(oGrid:GetValue("RB_CIC"))
							If(!lGp020Auto)
								If cEFDAviso == "1"
									// eSocial: Preenchimento do CPF obrigatório para idade maior ou igual a 12 anos e dependente de IR.
									Help( " ", 1, "HELP",, OemToAnsi( IIF(cVersGPE >= '2.5.00', STR0100,STR0096)),1,0 )
									lRet 	:= .F.
									Break
								Else
									If MsgNoYes( OemToAnsi( IIF(cVersGPE >= '2.5.00', STR0106, Iif(cVersGPE >= '2.4.02',STR0104, STR0060)) ) ) // "CPF do Dependente que possui idade maior ou igual a 8 anos cadastrado não foi Preenchido. Deseja Continuar?" , "CPF do Dependente maior de 18 anos cadastrado não foi Preenchido. Deseja Continuar?"
										lRet	 := .T.
										lGeraEvt := .F.
									Else
										Help(" ",1,"A020CPFVLD")// "Informe um CPF valido para o Dependente."###"Atencao"
										lRet 	 := .F.
										Break
									EndIf
								EndIf
							Else
								If Type("lRobo") == "U" .Or. !lRobo
									AutoGRLog("Dependente "+AllTrim(oGrid:GetValue("RB_NOME"))+" "+"não possui CPF.")
									lRet	:= .F.
									Break
								Endif
							EndIf
						ElseIf oGrid:GetValue("RB_CIC") == SRA->RA_CIC
							Help( , , 'HELP', , OemToAnsi(IIF(cVersGPE == '2.4.02',STR0103,STR0064)), 1, 0 ) //"Dependente maior de 14 anos não deve utilizar o mesmo CPF do funcionário."
							lRet := .F.
							Break
						EndIf
					EndIf
				EndIf

				If cVersGPE >= "2.3"//Se estiver no leiaute 2.3 do eSocial faz as validações.
					//Validações para o eSocial leiaute 2.3
					//1- Deve ser um número de CPF válido (validação já existente no cadastro)
					//2- O preenchimento é obrigatório para maior ou igual a 12 (doze) anos e {depIRRF} = [S];
					//3- Em arquivo de empregador Pessoa Física, deve ser diferente do CPF informado em {ideEmpregador};
					//4- Não pode haver mais de um dependente com um mesmo número do CPF.

					//2 - Se for dependente de IR e idade maior que 11 deverá ser preenchido o CPF
					If ( cDepIR <> "4" .Or. Empty(cDepIR) ) .And. lRet .and. nPosCPF > 0 .and. nPosNasc > 0 .And. cVersGPE < "2.5.00"
						If nIdade > 11 .And. Empty(oGrid:GetValue("RB_CIC"))
							 //"eSocial:Preenchimento do CPF obrigatório para idade maior ou igual a 12 anos e dependente de IR."
							If cEFDAviso == "1" //-- Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
								Help( , , 'HELP', , OemToAnsi(STR0096), 1, 0 )
								lRet := .F.
								Break
							Else
								MsgInfo(OemToAnsi(STR0096),OemToAnsi(STR0017))
								lGeraEvt := .F.
							EndIf
						Endif
					EndIf

					//3-Busca informações do {ideEmpregador}
					aEstb:= fGM23SM0()
					If Len(aEstb) > 0
						nPosEstb 	:= aScan(aEstb, {|x| x[1] == ALLTRIM(SRA->RA_FILIAL)})
						If nPosEstb > 0
							cTpInscr	:= aEstb[nPosEstb,3]
							cInscr		:= aEstb[nPosEstb,2]
							If cTpInscr == "2" .And. !Empty(cInscr)
								If Alltrim(cInscr) == 	Alltrim(oGrid:GetValue("RB_CIC"))
									//"eSocial:O CPF do dependente não pode ser o mesmo do empregador."
									Help( " ", 1, "HELP",, OemToAnsi(STR0097),1,0)
									lRet := .F.
									Break
								Endif
							Endif
						Endif
					Endif

					//4 - Não pode haver mais de um dependente com um mesmo número do CPF.
					nGrid:=oGrid:GetLine()
					cCPF_Dep:= Alltrim(oGrid:GetValue("RB_CIC"))
					For nG := 1 To oGrid:Length()
						oGrid:GoLine( nG )
						If nGrid <> nG .And. !Empty(oGrid:GetValue("RB_CIC"))
							If !oGrid:IsDeleted() .And. Alltrim(oGrid:GetValue("RB_CIC")) == cCPF_Dep
								Help( " ", 1, "HELP",, OemToAnsi(STR0098),1,0) //"eSocial:O CPF informado já foi cadastrado para outro dependente."
								lRet := .F.
								Break
							Endif
						Endif
					Next nG
					oGrid:GoLine( nGrid )
				Endif
			Endif
			If cPaisLoc == "PER"
				If oGrid:GetValue("RB_TPDOCPA") $ "123" .And. oGrid:GetValue("RB_GRAUPAR") # "4" //Gestante
					lRet := .F.
				ElseIf oGrid:GetValue("RB_TPDOCPA") $ "4" .And. oGrid:GetValue("RB_GRAUPAR") # "6" //Filho maior de idade incapacitado
					lRet := .F.
				ElseIf oGrid:GetValue("RB_TPDOCPA") $ "567" .And. oGrid:GetValue("RB_GRAUPAR") # "2" //Conjuge
					lRet := .F.
				ElseIf oGrid:GetValue("RB_TPDOCPA") $ "89" .And. oGrid:GetValue("RB_GRAUPAR") # "3" //Concubina(o)
					lRet := .F.
				ElseIf oGrid:GetValue("RB_TPDOCPA") $ "A" .And. oGrid:GetValue("RB_GRAUPAR") # "5" //Filho menor de idade
					lRet := .F.
				EndIf

				If !lRet
					Help( " ", 1, "HELP",, OemToAnsi(STR0035),1,0)//"O Documento Paterno não é compatível com o grau de parentesco"
					Break
				EndIf

				If Empty( oGrid:GetValue("RB_DOCPAT") ) .And. oGrid:GetValue("RB_GRAUPAR") $ "36"
					Help( " ", 1, "HELP",, OemToAnsi(STR0036),1,0) //"O Numero de Documento é obrigatório para este tipo de vínculo"
					lRet := .F.
					Break
				EndIf

				If lRet .and. oGrid:GetValue("RB_TPCIC") == "07" .and. Empty(oGrid:GetValue("RB_PAISPAS"))
					Help( " ", 1, "HELP",, OemToAnsi(STR0042),1,0) //"Pais emissor do Passaport obrigatório para este tipo de documento."
					lRet := .F.
					Break
				EndIf

			EndIf

		EndIf

	End Sequence

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp020TOk  ºAutor  ³Leandro Drumond     º Data ³  03/10/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validacao de bPost. Valida Grid ao confirmar a tela	  	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gp020TOk(oGrid)
Local oStruct   := oGrid:GetStruct()
Local aCampos	:= oStruct:GetFields()
Local lRetorna  := .T.
Local lRetEFD   := .F.
Local lRetPE	:= .T.
Local dDtRef   	:= CtoD("//")
Local nValBase	:= 0
Local nBusca, cTab, nLinha
Local lGestPubl := if(ExistFunc("fUsaGFP"),fUsaGFP(),.f.)	//Verifica se utiliza o modulo de Gestao de Folha Publica - SIGAGFP
Local aPerAtual	:= {}
Local cRoteiro	:= If(SRA->RA_CATFUNC $ 'A|P',fGetCalcRot('9'),fGetCalcRot('1'))
Local aCpoObrig := {{"RB_NOME"},{"RB_DTNASC"},{"RB_TIPIR"},{"RB_TIPSF"}}
Local nX		:= 1
Local nSizeSin	:= TamSX3("RA_SINDICA")[1]
Local cMsgObri  := ""
Local lCpoObr   := .T.

If fGetPerAtual( @aPerAtual, xFilial("RCH"), SRA->RA_PROCES, cRoteiro )
	dDtRef		:= aPerAtual[1,6]
Else
	dDtRef   	:= firstday(dDatabase)
EndIf

Continua := .F.

If (lInttaf .Or. lMiddleware) .And. !(SRA->RA_CATEFD $ cCatNTSV)
	aAdd(aCpoObrig,{"RB_TPDEP"})
EndIf

If cPaisLoc == "BRA"
	For nX := 1 To Len(aCpoObrig)
		If Empty(oGrid:GetValue(aCpoObrig[nX,1]))
			dbSelectArea("SX3")
			dbSetOrder(2)
			dbSeek( aCpoObrig[nX,1] )
			cMsgObri += aCpoObrig[nX,1] +" - "+ X3Titulo() + CRLF
			lCpoObr  := .F.
			lRetorna := .F.
			If aCpoObrig[nX,1] == "RB_TPDEP"
				lRetEFD := .T.
			EndIf
		EndIf
	Next

	If oGrid:GetValue("RB_AUXCRE") == "1" .AND. Empty(oGrid:GetValue("RB_VLRCRE"))
		// Bsca Tabela Relacionada
		nBusca   := DateDiffMonth( dDtRef , oGrid:GetValue("RB_DTNASC") )
		cTab     := IIf(lGestPubl,"S109","S015")
		dDataRef := dDtRef

		nLinha := fPosTab(cTab,SRA->RA_SINDICA,"==",4 ,nBusca,"<=",5,,,,,SRA->RA_FILIAL,,,,dDataRef) //filial+mes/ano+sindicato (preenchidos)
		If nLinha == 0
			nLinha := fPosTab(cTab,SRA->RA_SINDICA,"==",4 ,nBusca,"<=",5,,,,,SRA->RA_FILIAL,,,,Ctod("  /  /    ")) //filial+sindicato (preenchidos)
		EndIf
       	If nLinha == 0
			nLinha := fPosTab(cTab,SRA->RA_SINDICA,"==",4 ,nBusca,"<=",5,,,,,Space(FWGetTamFilial),,,,dDataRef) //mes/ano+sindicato (preenchidos)
		EndIf
       	If nLinha == 0
			nLinha := fPosTab(cTab,SRA->RA_SINDICA,"==",4 ,nBusca,"<=",5,,,,,Space(FWGetTamFilial),,,,Ctod("  /  /    ")) //sindicato (preenchido)
		EndIf
       	If nLinha == 0
			nLinha := fPosTab(cTab,Space(nSizeSin),"==",4 ,nBusca,"<=",5,,,,,Space(FWGetTamFilial),,,,Ctod("  /  /    ")) //filial+mes/ano+sindicato (em branco)
		EndIf

		If nLinha > 0
			nValBase := fTabela(cTab,nLinha,6,dDataRef,SRA->RA_FILIAL)
		EndIf
       	If nValBase <= 0
			lRetorna		:= .F.
			Help( " ", 1, "HELP",, STR0080 + cTab + '.', 1, 0 ) //"Quando o campo 'Aux Creche' for preenchido com 'Sim', deverá existir valor no campo 'Valor Creche' ou então existir registro válido na tabela " + "S015" ou "S109"
		EndIf
	EndIf
EndIf

If lCpoObr == .F. .And. lRetorna == .F.
   If lRetEFD
		If cEFDAviso <> "1"
           lRetorna := .T.
       EndIf
   EndIf
   Help( " ", 1, "HELP",, STR0102 + CRLF + cMsgObri , 1, 0 )
EndIf
Return lRetorna
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp020Grav ºAutor  ³Leandro Drumond     º Data ³  03/10/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Grava no arquivo de Dependentes						  	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Gp020Grav( oModel,cVersEnvio )
Local aArea      := GetArea()
Local nOperacao  := oModel:GetOperation()
Local oGrid 	 := oModel:GetModel("GPEA020_SRB")
Local oStruct    := oGrid:GetStruct()
Local aCampos	 := oStruct:GetFields()
Local nDepIr 	 := 0
Local nDepSf  	 := 0
Local nI	 	 := 0
Local nJ	 	 := 0
Local nPosTipIR  := oGrid:GetIdField("RB_TIPIR")
Local nPosTipSF  := oGrid:GetIdField("RB_TIPSF")
Local nPosNasc   := oGrid:GetIdField("RB_DTNASC")
Local nPosDpInc  := oGrid:GetIdField("RB_INCT")
Local cIncTrab	 := "N"
Local aSaveLines := FWSaveRows( oModel )
Local nLoop      := 0
Local nLoops     := 0
Local lRet 		 := .t.
Local aDadosXml  := {}
Local aTpAlt	 := {.F.,.F.,.F.,.F.} // indica o tipo de integracao com eSocial
Local cCPF	     := ""
Local cStat1	 := ""
Local cStatus    := ""
Local cTCV		 := fCatTrabEFD("TCV")
Local cTSV		 := fCatTrabEFD("TSV")
Local lUpdated	 := .F.

Local lRetif
Local lAltCad
Local lAltCon
Local aContainer := {}

Local aFilInTaf		:= {}
Local aArrayFil		:= {}
Local cFilEnv    	   := ""
Local cFilTrab		:= If(Empty(SRA->RA_FILIAL) , cFilAnt, SRA->RA_FILIAL )
Local cCatTSVPl     := "721|722" // Trabalhadores pro-labore sem vínculo.
Local cRetf2300		:= "1"
Local lGeraMat		:= SRA->(ColumnPos("RA_DESCEP")) > 0
Local cGeraMat		:= If(lGeraMat, SRA->RA_DESCEP, "")
Local lIntMDT       := SuperGetMv( "MV_MDTGPE", .F., "N" ) == "S"
Local aInfoC	 := {}
Local cChaveMid	 := ""
Local cStatMid   := ""
Local lAdmPubl	:= .F.

Default cVersEnvio:= "2.2"

If nOperacao != 5 .And. cPaisLoc == "BRA"//se for exclusão não deixa montar adadosXml para que então os dados sejam excluidos no TAF
	For nI := 1 To oGrid:Length()
		oGrid:GoLine( nI )

		//Verificação do Dependente Incapaz
		If nPosDpInc > 0
			cIncTrab := Iif( oGrid:GetValue("RB_INCT") $ " |1","N","S")
		EndIf

		// Caso o dependente seja classificado como Agregados/Outros e o plano estiver ativo, será exibido um help alertando sobre a necessidade
		// do cadastro do registro no Planos ativos para calculo do plano de saúde.
		If oGrid:GetValue("RB_GRAUPAR") == "O" .And. oGrid:GetValue("RB_PLSAUDE") == "1"
			Help(" ", 1, "GRAUPAR",, OemToAnsi(STR0107), 1, 0,,,,,, { OemToAnsi(STR0108)})
		Endif

		If !oGrid:IsDeleted()
			Aadd(aDadosXml, {	oGrid:GetValue("RB_TPDEP")                         ,; //01-TP DEP
									AllTrim( oGrid:GetValue("RB_NOME")                ),; //02-NOME
									oGrid:GetValue("RB_DTNASC")                        ,; //03-DT NASC
									AllTrim( oGrid:GetValue("RB_CIC")                 ),; //04-CIC
									IIf( oGrid:GetValue("RB_TIPIR") == "4" .Or. !Empty(oGrid:GetValue("RB_DTBAIXA")) .And. oGrid:GetValue("RB_DTBAIXA") <= dDataBase,"N","S"  ),; //05-TP IR
									IIf( oGrid:GetValue("RB_TIPSF") == "3" .Or. !Empty(oGrid:GetValue("RB_DTBAIXA")) .And. oGrid:GetValue("RB_DTBAIXA") <= dDataBase,"N","S"  ),; //06-TP SF
									""												   ,; //07-PL SAUDE (descontinuado)
									oGrid:GetValue("RB_COD")                           ,; //08-COD
									cIncTrab                                           ,; //09-INC TRAB
									oGrid:GetValue("RB_SEXO")							})//10 -SEXO
			If !lUpdated
				lUpdated := fTemAlt(oGrid)
			EndIf
		Else
			lUpdated := .T.
		EndIf
	Next
EndIf

If (lInttaf .Or. lMiddleware) .And. cPaisLoc == "BRA" .And. FUNNAME() <> "GPEM035" .And. !(SRA->RA_CATEFD $ cCatNTSV) .And. lGeraEvt

	lRetif :=  fAltRetNew(cVersEnvio)
	lAltCad := .F.
	lAltCon := .F.

	If !lRetif
		lAltCad := fAltCadNew() // alterado cadastro
		lAltCon := fAltConNew() // alterado dados contrato
	Endif

	aAdd( aContainer, { lRetif, lAltCad, lAltCon } )

	aTpAlt := {.F.,.F.,.F.,.F.}

	If lMiddleware
		If  !ChkFile("RJE") .And. ChkFile("RJ9")
			MsgInfo(OemToAnsi(STR0109)) //"Tabela RJE não encontrada. Execute o UPDDISTR - atualizador de dicionário e base de dados."
			lRetorno		:= .F.
		Elseif ChkFile("RJE")
			fPosFil( cEmpAnt, SRA->RA_FILIAL )
			aInfoC   := fXMLInfos()

			IF LEN(aInfoC) >= 4
				cTpInsc  := aInfoC[1]
				lAdmPubl := aInfoC[4]
				cNrInsc  := aInfoC[2]
			Else
				cTpInsc  := ""
				lAdmPubl := .F.
				cNrInsc  := "0"
			Endif
		Endif
	Endif

	If !lMiddleware
		fGp23Cons(@aFilInTaf, @aArrayFil,@cFilEnv)
	EndIf

	If Empty(cFilEnv)
		cFilEnv:= cFilAnt
	EndIf
	//tratamento para empresa configurada como 1x1 ou 1xN
	If !lMiddleware .And. Len(aFilInTaf[1,3]) == 1 //1X1
		cFilEnv:= cFilTrab
	EndIf

	If cVersEnvio >= "9.0" .And. lOpeSoc .And. (SRA->RA_CATFUNC == "9" .Or. SRA->RA_EAPOSEN == "1" )
		cCPF := AllTrim(SRA->RA_CIC) 
		cStatus := TAFGetStat( "S-2400", cCPF )
		cStat1  := "-1"
	ElseIf SRA->RA_CATEFD $ cTCV
		If !lMiddleware
			cCPF := AllTrim(SRA->RA_CIC) + ";" + alltrim(SRA->RA_CODUNIC)
			cStatus := TAFGetStat( "S-2200", cCPF, cEmpAnt, cFilEnv )
			cStat1  := TAFGetStat( "S-2100", cCPF, cEmpAnt, cFilEnv )
		Else
			cChaveMid	:= cTpInsc + PADR( Iif( !lAdmPubl .And. cTpInsc == "1", SubStr(cNrInsc, 1, 8), cNrInsc), 14) + "S2200" + Padr(SRA->RA_CODUNIC, 40, " ")
			cStatus 	:= "-1"
			cStat1  	:= "-1"
			//RJE_TPINSC+RJE_INSCR+RJE_EVENTO+RJE_KEY+RJE_INI
			GetInfRJE( 2, cChaveMid, @cStatus )
		EndIf
	ElseIf (SRA->RA_CATEFD $ cTSV)
		If !lMiddleware
			If cVersEnvio >= "9.0"
				cCPF := AllTrim( SRA->RA_CIC ) + ";" + If(cGeraMat == "1", SRA->RA_CODUNIC, "") + ";" + AllTrim( SRA->RA_CATEFD ) + ";" + DTOS( SRA->RA_ADMISSA )
			Else
				cCPF := AllTrim( SRA->RA_CIC ) + ";" + AllTrim( SRA->RA_CATEFD ) + ";" + DTOS( SRA->RA_ADMISSA )
			EndIf
			cStatus := TAFGetStat( "S-2300", cCPF, cEmpAnt, cFilEnv )
		Else
			cCPF 		:= If( cVersEnvio >= "9.0" .And. cGeraMat == "1", SRA->RA_CODUNIC, AllTrim( SRA->RA_CIC ) + AllTrim( SRA->RA_CATEFD ) + DTOS( SRA->RA_ADMISSA ) )
			cChaveMid	:= cTpInsc + PADR( Iif( !lAdmPubl .And. cTpInsc == "1", SubStr(cNrInsc, 1, 8), cNrInsc), 14) + "S2300" + Padr(cCPF, 40, " ")
			cStatus 	:= "-1"
			//RJE_TPINSC+RJE_INSCR+RJE_EVENTO+RJE_KEY+RJE_INI
			GetInfRJE( 2, cChaveMid, @cStatus, ,@cRetf2300 )
		EndIf
		cStat1  := "-1"
	EndIf

	fStatusTAF(@aTpAlt,cStatus,cStat1,, aContainer)

	If cStatus == "2" // em transito
		If !lMiddleware
			cMsg	:= STR0082
		Else
			cMsg	:= STR0110//"eSocial: Registro de admissão do funcionário em trânsito. A alteração não será efetivada."
		EndIf
		MsgAlert(OemToAnsi(cMsg))
		lRet := .F.
	EndIf

	If lRet .AND. lUpdated
		//Caso não encontre nenhuma inconsistencia no TudoOk
		//Ele realiza a geração do XML. Verificando a Cat EFD do funcionário
		//Caso apresente algum erro ele não gera o registro no banco e fica em tela aguardando até a correção
		
		//Gera evento S-2400 Beneficiarios Orgãos Publicos 
		If cVersEnvio >= "9.0" .And. lOpeSoc .And. (SRA->RA_CATFUNC == "9" .Or. SRA->RA_EAPOSEN == "1" )
			RegToMemory("SRA",,, .F.)
			If aTpAlt[1] .OR. aTpAlt[2]
				lRet:= fInt2400New("SRA",/*lAltCad*/,3,"S2400",/*cTFilial*/,aDadosXml,/*cCodUn*/,/*oModel*/,/*cOrigem*/,/*aErros*/,cVersEnvio) 
			Else
				lRet:= fInt2400New("SRA",,3,"S2405", ,aDadosXml,,,,,cVersEnvio)
			Endif
			If( lRet ) .And. !IsBlind() .And. FindFunction("fEFDMsg")
				fEFDMsg()
			EndIf
		ElseIf (SRA->RA_CATEFD $ cTSV)
			If( aTpAlt[1] ) .And. !(SRA->RA_CATEFD $ cCatNTSV)
				RegToMemory("SRA",,, .F.)

				If cVersEnvio >= "9.0"
					If cStatus <> "4" .And. ( (lMiddleware .And. cRetf2300 <>"2") .Or. (!lMiddleware .And. Empty(C9V->C9V_VERANT)) )
						cGeraMat := "1"
					ElseIf Empty(cGeraMat)	//se houve retificação, manter conforme registro original
						cGeraMat := "0"
					EndIf
				EndIf

				lRet:= fInt2300New("SRA",,3,"S2300", ,aDadosXml,cVersEnvio,,,,,,,,,,cGeraMat)
				If( lRet )
					If lGeraMat .And. cVersEnvio >= "9.0" .And. SRA->RA_DESCEP <> cGeraMat
						dbSelectArea( "SRA" )
						RecLock("SRA",.F.)
							SRA->RA_DESCEP := cGeraMat
						SRA->(MsUnlock())
					EndIf
					If !IsBlind() .And. FindFunction("fEFDMsg")
						fEFDMsg()
					EndIf
				EndIf
			ElseIf( aTpAlt[3] )
				If !(SRA->RA_CATEFD $ cCatNTSV .Or. SRA->RA_CATEFD $ cCatTSVPl)  .Or. ;
					((SRA->RA_CATEFD $ cCatNTSV .Or. SRA->RA_CATEFD $ cCatTSVPl) .And. cStatus == '4')
					RegToMemory("SRA",,, .F.)
					lRet := fIntAdmiss("SRA",,3,"S2205", ,aDadosXml,,,,,cVersEnvio)
					If( lRet ) .And. !IsBlind() .And. FindFunction("fEFDMsg")
						fEFDMsg()
					EndIf
				EndIf
			EndIf
		ElseIf (SRA->RA_CATEFD $ cTCV)
			RegToMemory("SRA",,, .F.)
			If aTpAlt[1] .OR. aTpAlt[2]
				lRet:= (  Iif( aTpAlt[1] ,fIntAdmiss("SRA",/*lAltCad*/,3,"S2200",/*cTFilial*/,aDadosXml,/*cCodUn*/,/*oModel*/,/*cOrigem*/,/*aErros*/,cVersEnvio) ,;
												  fIntAdmiss("SRA",/*lAltCad*/,3,"S2100",/*cTFilial*/,aDadosXml,/*cCodUn*/,/*oModel*/,/*cOrigem*/,/*aErros*/,cVersEnvio) )   )
			Else
				lRet:= fIntAdmiss("SRA",,3,"S2205", ,aDadosXml,,,,,cVersEnvio)
			Endif
			If( lRet ) .And. !IsBlind() .And. FindFunction("fEFDMsg")
				fEFDMsg()
			EndIf
		EndIf
	Endif
Endif

lGeraEvt := lIntTAF .Or. lMiddleware // Reseto o valor, pois o usuário pode continuar na tela e tentar incluir os dados que faltaram para enviar para o TAF

If lRet
	FWFormCommit(oModel,{ |oModel,cID,cAlias,lNewRecord| GP020PEGRV(oModel,cID,cAlias,lNewRecord) } )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza o Cadastro de Funcionario "SRA"                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "SRA" )
	If nOperacao == MODEL_OPERATION_DELETE
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o Cadastro de Funcionario "SRA"                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea( "SRA" )
		RecLock("SRA",.F.)
		SRA->RA_DEPIR := "00"
		SRA->RA_DEPSF := "00"
		SRA->(MsUnlock())

	Else
		For nI := 1 To oGrid:Length()
			oGrid:GoLine( nI )
			If !oGrid:IsDeleted()
				if(nPosNasc > 0)
					If MesAno(oGrid:GetValue("RB_DTNASC")) <= MesAno(dDataBase)
						If nPosTipIR > 0
							If oGrid:GetValue("RB_TIPIR") $ "123"
								nDepIr++
							EndIf
						EndIf
						If nPosTipSF > 0
							If cPaisLoc == "CHI"
								If oGrid:GetValue("RB_TIPSF") $ "12345"
									nDepSf++
								EndIf
							ElseIf cPaisLoc $ "ARG|ANG"
								If oGrid:GetValue("RB_TIPSF") $ "123"
									nDepSf++
								EndIf
							Else
								If oGrid:GetValue("RB_TIPSF") $ "12"
									nDepSf++
								EndIf
							EndIf
						EndIf
					EndIf
					//  Grabar historico en SR9 para Dependientes
					If  cPaisLoc == "ARG"
						If	( SR9->(FieldPos("R9_COD")) >0  .And. RetOrdem("SR9","R9_FILIAL+R9_MAT+R9_CAMPO+R9_COD+DTOS(R9_DATA)") >0 )
							// Graba las modificaciones de los campos en la tabla SR9 (Historico) - Mediante la validacion FHIST()
							For nLoop := 1 To Len(oGrid:aHeader)
								If !( AllTrim(oGrid:aHeader[nLoop,02]) $ "RB_FILIAL*RB_MAT*RB_COD")
									If  nLoop <= Len(aCpyGrid)
										If  oGrid:aHeader[nLoop,02] == aCpyGrid[nLoop,nLoop,02]  .And. !Empty(oGrid:GetValue("RB_COD"))  //Es el mismo campo y existe una secuencia
											GravaSR9(oGrid:aHeader[nLoop,02],oGrid:GetValue(oGrid:aHeader[nLoop,02]),aCpyGrid[nLoop,nLoop,01],oGrid:GetValue("RB_COD"),.F. )
										Endif
									Elseif !Empty(oGrid:GetValue("RB_COD"))  //Son registro nuevos y existe la secuencia
										GravaSR9(oGrid:aHeader[nLoop,02],oGrid:GetValue(oGrid:aHeader[nLoop,02]),"",oGrid:GetValue("RB_COD"),.T. )
									Endif
								EndIf
							Next nLoop
						Endif
					EndIf
				EndIf

				//Se existir integração com o MDT, atualiza a ficha médica
				If lIntMDT
					dbSelectArea( "TM0" )
					dbSetOrder( 3 ) //TM0_FILFUN+TM0_MAT+TM0_NUMDEP
					If dbSeek( SRA->RA_FILIAL + SRA->RA_MAT + oGrid:GetValue("RB_COD") )
						MdtAltTrf( SRA->RA_FILIAL , SRA->RA_MAT , ;
									{   oGrid:GetValue("RB_COD"), ;
										oGrid:GetValue("RB_NOME"), ;
										oGrid:GetValue("RB_DTNASC"), ;
										oGrid:GetValue("RB_SEXO"), ;
										oGrid:GetValue("RB_CIC") } )
					EndIf
				EndIf
			EndIf
		Next nI

		aCpyGrid := {}

		fGravaSr9("RA_DEPIR",StrZero( nDepIr , 2 ),If(Empty(SRA->RA_DEPIR),"00",SRA->RA_DEPIR),dDataBase)
		fGravaSr9("RA_DEPSF",StrZero( nDepSf , 2 ),If(Empty(SRA->RA_DEPSF),"00",SRA->RA_DEPSF),dDataBase)
		RecLock("SRA",.F.)
		SRA->RA_DEPIR := StrZero( nDepIr , 2 )
		SRA->RA_DEPSF := StrZero( nDepSf , 2 )

		MsUnlock()
	EndIf

	fPrepDadosApi(nOperacao,oGrid)

	FWRestRows( aSaveLines, oModel )

	RestArea( aArea )

	aSize(aSaveLines,0)
	aSaveLines := Nil
	oGrid := Nil
Else
	If !(cVersEnvio >= "9.0" .And. lOpeSoc )
		Help( " ", 1, "Help",, OemToAnsi(STR0093), 1, 0 )
	Endif	
EndIf


Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GP020PEGRVºAutor  ³Leandro Drumond     º Data ³  03/10/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Faz a chamada do Ponto de Entrada                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GP020PEGRV(oModel,cID,cAlias,lNewRecord)
If ExistBlock("GP020GRV")
	ExecBlock("GP020GRV",.F.,.F.)
EndIf
Return Nil



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp020TpAMOºAutor  ³Leandro Drumond     º Data ³  03/10/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao de validacao dos campos "RB_TIPAMED" e "RB_TPASODO"  º±±
±±º			 ³para atualizar os campos "RB_CODAMED" e "RB_ASODONT"        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Gp020TpAMO()
Local cVar 		:= ReadVar()
Local oModel	:= FWModelActive()
Local oGrid		:= oModel:GetModel("GPEA020_SRB")

If !IsInCallStack("FWMILEIMPORT")
	If cVar == "M->RB_TIPAMED"
		oGrid:SetValue("RB_CODAMED", Space(TamSx3("RB_CODAMED")[1]))
	ElseIf cVar == "M->RB_TPASODO"
		oGrid:SetValue("RB_ASODONT", Space(TamSx3("RB_ASODONT")[1]))
	EndIf
EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp020VBDesºAutor  ³Leandro Drumond     º Data ³  03/10/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao de validacao dos campos "RB_VBDESAM" e "RB_VBDESAO"  º±±
±±º			 ³para nao permitir digitar uma verba ja informada antes      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Gp020VBDes()
Local lRet 		:= .T.
Local cVar 		:= ReadVar()
Local cValor	:= &(ReadVar())
Local nInd		:= 0
Local oModel	:= FWModelActive()
Local oGrid		:= oModel:GetModel("GPEA020_SRB")
Local nLinOld	:= nInd

If cVar == "M->RB_VBDESAM"
	If cValor == oGrid:GetValue("RB_VBDESAO")
		lRet  := .F.
	EndIf
ElseIf cVar == "M->RB_VBDESAO"
	If cValor == oGrid:GetValue("RB_VBDESAM")
		lRet  := .F.
	EndIf
EndIf

If !lRet
	Help( " ", 1, "Help",, STR0030, 1, 0 ) //"Não é permitido informar a mesma verba de desconto para Assistência Médica e Assistência Odontológica."
Else
	For nInd := 1 To oGrid:Length()
		If n <> nInd
			oGrid:GoLine( nInd )
			If (oGrid:GetValue("RB_VBDESAM",nInd) == cValor .or. oGrid:GetValue("RB_VBDESAO",nInd) == cValor);
				.and. !( Trim(oGrid:GetValue("RB_NOME",nInd)) == Trim(oGrid:GetValue("RB_NOME",n)) )
				lRet  := .F.
				Help( " ", 1, "Help",, STR0031+" "+Trim(oGrid:GetValue("RB_NOME",nInd)), 1, 0 ) //"Esta verba já foi informada para o dependente"
				Exit
			EndIf
		EndIf
	Next nInd
	oGrid:GoLine( nLinOld )
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fOpTpDocPa³ Autor ³ Marcelo Silveira      ³ Data ³ 22/03/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para exibir os tipos de documento validos           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fOpTpDocPa()
Local oModel 		:= FWModelActive()
Local oGrid   		:= oModel:GetModel("GPEA020_SRB")
Local cTitulo		:= OemToAnsi(STR0034) //"Tipo de Documento que comprova o vínculo"
Local cGraup		:= ""
Local MvPar			:= ""
Local MvParDef		:= ""
Local cRet			:= ""
Local lRet			:= .T.
Local l1Elem		:= .T.
Local nPosGraup		:= 0

Private aTpDocPa	:={}

If Alltrim( ReadVar() )== "M->RB_TPDOCPA"

	cAlias 		:= Alias() 					 // Salva Alias Anterior
	MvPar		:= &(Alltrim(ReadVar()))	 // Carrega Nome da Variavel do Get em Questao
	mvRet		:= Alltrim(ReadVar())		 // Iguala Nome da Variavel ao Nome variavel de Retorno
	nPosGraup	:= oGrid:GetIdField("RB_GRAUPAR")
	cGraup		:= oGrid:GetValue("RB_GRAUPAR")

    aTpDocPa	:= {;
						STR0111,; //"1=ESCRITURA PUBLICA"
						STR0112,; //"2=TESTAMENTO"
						STR0113,; //"3=SENTENCIA DE DECLARATORIA DE PATERNIDAD"
						STR0114,; //"4=RESOLUCION DE INCAPACIDAD"
						STR0115,; //"5=ACTA O PARTIDA DE MATRIMONIO CIVIL"
						STR0116,; //"6=ACTA O PARTIDA DE MATRIMONIO INSCRITO EN REG CONSULAR PERUANO"
						STR0117,; //"7=ACTA O PARTIDA DE MATRIMONIO REALIZADO EN EL EXTERIOR E INSCRITO EN RENIEC O MUNICIPALIDAD"
						STR0118,; //"8=ESCRITURA PUBLICA - RECONOC. DE UNION DE HECHO - LEY N.29560"
						STR0119,; //"9=RESOLUCION JUDICIAL - RECONOC. DE UNION DE HECHO"
						STR0120,; //"A=ACTA DE NACIMIENTO O DOCUMENTO ANALOGO QUE SUSTENTA FILIACION"
						" " ;
					}

	MvParDef:= "123456789A "

	If f_Opcoes(@MvPar,cTitulo,aTpDocPa,MvParDef,,,l1Elem,1,1)  	//Chama funcao f_Opcoes
		cRet	:= substr(mvpar,1,1)								//Devolve Resultado
	EndIf

	If nPosGraup > 0
		If cRet $ "123" .And. cGraup # "4" //Gestante
			lRet := .F.
		ElseIf cRet $ "4" .And. !cGraup $ "1|6" //Filho / Filho maior incapacitado
			lRet := .F.
		ElseIf cRet $ "567" .And. cGraup # "2" //Conjuge
			lRet := .F.
		ElseIf cRet $ "89" .And. cGraup # "3" //Concubina
			lRet := .F.
		ElseIf cRet $ "A" .And. !cGraup $ "1|5" //Filho / Filho menor de idade
			lRet := .F.
		EndIf

		If !lRet
			Help( " ", 1, "HELP",, OemToAnsi(STR0035),1,0) //"O Tipo de Documento Paterno não é compatível com o grau de parentesco"
		Else
			&(MvRet) := cRet
		EndIf

	EndIf

ElseIf !empty(mvpar)
	lRet := .T.
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fMotivoBx ³ Autor ³ Marcelo Silveira      ³ Data ³ 22/03/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para exibir as opcoes de Motivo de Baixa            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fMotivoBx()

Local cTitulo		:= OemToAnsi(STR0037) //"Motivo de Baixa"
Local MvPar			:= ""
Local MvParDef		:= ""
Local cRet			:= ""
Local lRet			:= .T.
Local l1Elem		:= .T.

Private aMotivoBx	:={}

If Alltrim( ReadVar() )== "M->RB_MOTIVOB"

	cAlias := Alias() 					 // Salva Alias Anterior
	MvPar  := &(Alltrim(ReadVar()))		 // Carrega Nome da Variavel do Get em Questao
	mvRet  := Alltrim(ReadVar())			 // Iguala Nome da Variavel ao Nome variavel de Retorno

    aMotivoBx	:= {;
						STR0121,; //"2=FALLECIMIENTO"
						STR0122,; //"3=OTROS MOTIVOS NO PREVISTOS"
						STR0123,; //"4=DIVORCIO O DISOLUCION DE VINCULO MATRIMONIAL"
						STR0124,; //"5=FIN DE CONCUBINATO"
						STR0125,; //"6=FIN DE LA GESTACION"
						STR0126,; //"7=HIJO ADQUIERE MAYORIA DE EDAD"
						STR0127,; //"8=ERROR EN EL REGISTRO"
						STR0128,; //"9=DERECHOHABIENTE ADQUIERE CONDICION DE ASEGURADO REGULAR"
						" " ;
					}

	MvParDef:= "23456789 "

	If f_Opcoes(@MvPar,cTitulo,aMotivoBx,MvParDef,,,l1Elem,1,1)  	//Chama funcao f_Opcoes
		&(MvRet) := substr(mvpar,1,1)								//Devolve Resultado
	EndIf

ElseIf !empty(mvpar)
	lRet := .T.
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WHEN_RBPAISPAS ³ Autor ³ Marcelo Silveira ³ Data ³ 22/03/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para permitir editar ou nao o campo RB_PAISPAS      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function RBPAISPAS_WHEN()
Local oModel 		:= FWModelActive()
Local oGrid   		:= oModel:GetModel("GPEA020_SRB")
Local lRet 			:= .T.

	//Edita o campo RB_PAISPAS apenas se o documento for do tipo passaporte
	lRet := Iif( oGrid:GetValue("RB_TPCIC") == "07", .T., .F. )

Return lRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WHEN_RBMESCONC ³ Autor ³ Marcelo Silveira ³ Data ³ 22/03/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para permitir editar ou nao o campo RB_MESCONC      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function RBMESCONC_WHEN()
Local oModel 		:= FWModelActive()
Local oGrid   		:= oModel:GetModel("GPEA020_SRB")
Local lRet 			:= .T.

	//Edita o campo RB_MESCONC apenas se o grau de parentesco for gestante
	lRet := Iif( oGrid:GetValue("RB_GRAUPAR") == "4", .T., .F. )

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WHEN_RBMOTIVOB ³ Autor ³ Marcelo Silveira ³ Data ³ 22/03/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para permitir editar ou nao o campo RB_MOTIVOB      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function RBMOTIVOB_WHEN()
Local oModel 		:= FWModelActive()
Local oGrid   		:= oModel:GetModel("GPEA020_SRB")
Local lRet 			:= .T.

If Alltrim(ReadVar()) $ "M->RB_MOTIVOB"

	//Edita o campo RB_MOTIVOB apenas se a situacao for igual a 11 - Baixa
	lRet := Iif( oGrid:GetValue("RB_SITUACA") == "11", .T., .F. )

	If !lRet .And. !oGrid:lUpdateLine
		Help( " ", 1, "HELP",, OemToAnsi(STR0040),1,0) //"Este campo só pode ser editado para a Situação 11 - Baixa"
	EndIf

EndIf

Return (IIf(lRet, fMotivoBx(), lRet))


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fValContCpo ³ Autor ³ Marcelo Silveira      ³ Data ³ 24/02/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Avalia o conteudo do campo passado no parametro para validar a³±±
±±³          ³edicao de outro campo vinculado a ele.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Rspa010                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fValContCpo(cNomCpo)
Local oModel	:= FWModelActive()
Local oGrid		:= oModel:GetModel("GPEA020_SRB")

If cNomCpo $ Alltrim(ReadVar()) .And. !IsInCallStack("FWMILEIMPORT")

	//Valida o campo RB_GRAUPAR
	If "RB_GRAUPAR" $ cNomCpo
		//O campo RB_MESCONC aceita conteudo somente o grau de parentesco Gestante
		If!( oGrid:GetValue("RB_GRAUPAR") == "4" )
			oGrid:SetValue("RB_MESCONC", Space(TamSX3("RB_MESCONC")[1]))
		EndIf
	EndIf

	//Valida o campo RB_TPCIC
	If "RB_TPCIC" $ cNomCpo
		//O campo RB_PAISPAS aceita conteudo somente se o tipo de documento for passaporte
		If!( oGrid:GetValue("RB_TPCIC") == "07" )
			oGrid:SetValue("RB_PAISPAS", Space(TamSX3("RB_PAISPAS")[1]))
		EndIf
	EndIf

EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fGetDirecc  ³ Autor ³ Marcelo Silveira    ³ Data ³ 25/03/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Monta dialogo para inclusao do complemento do endereco     ³±±
±±³			 ³ no cadastro de funcionario ou dependente.                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA010, GPEA020                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Function fGetDirecc()

	Local oModel 	:= FWModelActive()
	Local oModelSRB	:= oModel:GetModel("GPEA020_SRB")
	Local oDlg		:= Nil
	Local oFont		:= Nil
	Local oDirecc	:= Nil
	Local cVarAlias	:= ""
	Local cTexto1 	:= Space(4)
	Local cTexto2 	:= Space(4)
	Local cTexto3 	:= Space(4)
	Local cTexto4 	:= Space(4)
	Local cTexto5 	:= Space(4)
	Local cTexto6 	:= Space(4)
	Local lRet    	:= .T.

	If Alltrim(ReadVar()) $ "M->RA_COMPLEM*M->RB_COMPLEM"

		If IsInCallStack( "GPEA010")
			cVarAlias	+= "M->RA_COMPLEM"
		ElseIf IsInCallStack( "GPEA020")
			cVarAlias	+= "M->RB_COMPLEM"
		EndIf

		If !Empty( &cVarAlias )
			cTexto1 :=  SubStr(&cVarAlias,1,4)
			cTexto2 :=  SubStr(&cVarAlias,5,4)
			cTexto3 :=  SubStr(&cVarAlias,9,4)
			cTexto4 :=  SubStr(&cVarAlias,13,4)
			cTexto5 :=  SubStr(&cVarAlias,17,4)
			cTexto6 :=  SubStr(&cVarAlias,21,4)
		EndIf

		DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
		DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0129) FROM 095,001 TO 340,250 PIXEL //"Complemento de Dirección"

			@ 12,  10 SAY STR0130 SIZE 40,10 PIXEL //"Interior"
			@ 10,  50 MSGET oDirecc VAR cTexto1 SIZE 40,10 PIXEL

			@ 27,  10 SAY STR0131 SIZE 40,10 PIXEL //"Manzana"
			@ 25,  50 MSGET oDirecc VAR cTexto2  SIZE 40,10 PIXEL

			@ 42,  10 SAY STR0132 SIZE 40,10 PIXEL //"Lote"
			@ 40,  50 MSGET oDirecc VAR cTexto3  SIZE 40,10 PIXEL

			@ 57,  10 SAY STR0133 SIZE 40,10 PIXEL //"Kilómetro"
			@ 55,  50 MSGET oDirecc VAR cTexto4  SIZE 40,10 PIXEL

			@ 72,  10 SAY STR0134 SIZE 40,10 PIXEL //"Bloque"
			@ 70,  50 MSGET oDirecc VAR cTexto5  SIZE 40,10 PIXEL

			@ 87,  10 SAY STR0135 SIZE 40,10 PIXEL //"Etapa"
			@ 85,  50 MSGET oDirecc VAR cTexto6  SIZE 40,10 PIXEL

		DEFINE SBUTTON FROM 105, 035 TYPE 1 ENABLE OF oDlg ACTION ( lRet := .T., oDlg:End() )
		DEFINE SBUTTON FROM 105, 070 TYPE 2 ENABLE OF oDlg ACTION ( lRet := .F., oDlg:End() )

		ACTIVATE MSDIALOG oDlg CENTERED

		If !Empty( cVarAlias ) .And. lRet
			&cVarAlias := cTexto1+cTexto2+cTexto3+cTexto4+cTexto5+cTexto6
			If cVarAlias $ "M->RB_COMPLEM"
				oModelSRB:LoadValue("RB_COMPLEM", &cVarAlias)
			EndIf
		EndIf

		If cVarAlias $ "M->RA_COMPLEM"
			lRet := .F.
		EndIf

	EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³RBValidS043	 ³ Autor ³ Leandro Drumond  ³ Data ³ 19/12/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para validar campos codigo do pais no passaporte.   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ gpea020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function RBValidS043()
Local oModel 	:= FWModelActive()
Local oGrid   	:= oModel:GetModel("GPEA020_SRB")
Local lRet 		:= .F.
Local nPos		:= fPosTab("S043", &(readvar()), "=", 4 )
Local cTpDoc 	:= oGrid:GetValue("RB_TPCIC")

If nPos > 0 .or. cTpDoc <> '07'
   	lRet:= .T.
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fTpDepBox() ³ Autor ³ Emerson Campos        ³ Data ³ 30/07/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Tipo de dependente                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fTpDepBox()		                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fTpDepBox()
Local cTitulo           := OemToAnsi(STR0045) // "Tp Dep. eSocial"
Local MvPar             := &(ReadVar())
Local MvParDef          := ""
Local MvStrRet          := ""
Local lRet              := .T.
Local l1Elem            := .F.
Local nGrupo            := 0
Local aArea             := GetArea()

Private aOcor := {}

VAR_IXB := MvPar

aOcor := {;
				OemToAnsi(STR0067),;		//"01=Cônjuge;"
				OemToAnsi(STR0068),;		//"02=Companheiro(a) com o(a) qual tenha filho ou viva há mais de 5 (cinco) anos ou possua Declaração de União Estável; "
				OemToAnsi(STR0069),;		//"03=Filho(a) ou enteado(a);"
				OemToAnsi(STR0070),;		//"04=Filho(a) ou enteado(a) universitário(a) ou cursando escola técnica de 2º grau; "
				OemToAnsi(STR0071),;		//"05=Filho(a) ou enteado(a) em qualquer idade, quando incapacitado física e/ou mentalmente para o trabalho; "
				OemToAnsi(STR0072),;		//"06=Irmão(ã), neto(a) ou bisneto(a) sem arrimo dos pais, do(a) qual detenha a guarda judicial; "
				OemToAnsi(STR0073),;		//"07=Irmão(ã), neto(a) ou bisneto(a) sem arrimo dos pais se ainda estiver cursando estabelecimento de nível superior ou escola técnica de 2º grau, desde que tenha detido sua guarda judicial; "
				OemToAnsi(STR0074),;		//"08=Irmão(ã), neto(a) ou bisneto(a) sem arrimo dos pais, do(a) qual detenha a guarda judicial, em qualquer idade, quando incapacitado física e/ou mentalmente para o trabalho; "
				OemToAnsi(STR0075),;		//"09=Pais, avós e bisavós;"
				OemToAnsi(STR0076),;		//"10=Menor pobre que crie e eduque e do qual detenha a guarda judicial; "
				OemToAnsi(STR0077),;		//"11=A pessoa absolutamente incapaz, da qual seja tutor ou curador; "
				OemToAnsi(STR0078),;		//"12=Ex-cônjuge."
	           OemToAnsi(STR0095)}			//"13=AGregado\Outros"
MvParDef := "01020304050607080910111213"

If f_Opcoes(@MvPar,cTitulo,aOcor,MvParDef,,,l1Elem,2)
      For nGrupo := 1 To Len(MvPar)
            If (SubStr(MvPar, nGrupo, 2) # "*")
                  MvStrRet += SubStr(mvpar, nGrupo, 2)
            Else
                  MvStrRet += Space(2)
            Endif
      Next nGrupo
      VAR_IXB := AllTrim(MvStrRet)
EndIf

RestArea(aArea)
aSize(aOcor,0)
aOcor := Nil
Return(lRet)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ fTpDepVld()   ³ Autor ³ Emerson Campos   ³ Data ³03/09/2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Função para validar o tipo de dependente do cad. GPEA020   ³±±
±±³          ³ Opções disponíveis 01,02,03,04,05,06,07,08,09 10           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Geral                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ*/
Function fTpDepVld()
Local lRet 		:= .T.
Local cOpc 		:= "01*02*03*04*05*06*07*08*09*10*11*12*13"

If !Empty(M->RB_TPDEP) .and. !M->RB_TPDEP $ cOpc
	If cEFDAviso <> "2"
		Help( , , 'HELP', , OemToAnsi(STR0059), 1, 0 )//"Selecione um tipo de dependente válido!"
		If cEFDAviso == "1"
			lRet := .F.
       EndIf
    EndIf
EndIf

Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ fValidDtEntra()³ Autor ³ Emerson Campos  ³ Data ³23/07/2014³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Função para validar a data de entrada do cad. GPEA020      ³±±
±±³          ³ A data de entrada pode ser vazia ou maior que a data de    ³±±
±±³          ³ admissão e data de nascimento                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Geral                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ*/
Function fValidDtEntra()
Local lRet			:= .T.
Local oModel		:= FWModelActive()
Local oGrid		:= oModel:GetModel("GPEA020_SRB")
Local nPosBaixa	:= oGrid:GetIdField("RB_DTBAIXA")
Local nPosEntreg	:= oGrid:GetIdField("RB_DTENTRA")
Local nPosNasc	:= oGrid:GetIdField("RB_DTNASC")

	If Empty(oGrid:GetValue("RB_DTENTRA")) .OR. SRA->RA_ADMISSA > oGrid:GetValue("RB_DTENTRA")
		lRet		:= .F.
		Help( " ", 1, "Help",, STR0061, 1, 0 ) //"A 'Data de Entrega' da documentação do dependente, não pode ser inferior a 'Data de Admissão' do funcionário"
	EndIf

	If nPosBaixa > 0 .and. nPosEntreg > 0 .and. nPosNasc > 0
		If (!empty(oGrid:GetValue("RB_DTBAIXA")) .and. oGrid:GetValue("RB_DTBAIXA") < oGrid:GetValue("RB_DTENTRA")) .and. lRet
			lRet := .F.
			Help( " ", 1, "Help",, STR0016, 1, 0 ) //"Data da Baixa nao pode ser inferior a data de entrega!"
		EndIf
		If (( !Empty(oGrid:GetValue("RB_DTBAIXA")) .and. oGrid:GetValue("RB_DTBAIXA")< oGrid:GetValue("RB_DTNASC")) .or. (!empty(oGrid:GetValue("RB_DTENTRA")) .And. oGrid:GetValue("RB_DTENTRA") < oGrid:GetValue("RB_DTNASC"))) .and. lRet
			lRet := .F.
			Help( " ", 1, "Help",, STR0018, 1, 0 ) //"Data da Baixa e Data de Entrega nao podem ser inferiores a data de Nascimento!"
		EndIf
	EndIf

Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ VldVlrCre()   ³ Autor ³ Emerson Campos   ³ Data ³23/07/2014³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Função para validar o campo valor creche do cad. GPEA020   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Geral                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ*/
Function VldVlrCre()
Local lRet		:= .T.
Local oModel	:= FWModelActive()
Local oGrid		:= oModel:GetModel("GPEA020_SRB")
Local dDtRef   	:= CtoD("//")
Local nValBase	:= 0
Local nBusca, cTab, nLinha
Local lGestPubl := if(ExistFunc("fUsaGFP"),fUsaGFP(),.f.)	//Verifica se utiliza o modulo de Gestao de Folha Publica - SIGAGFP
Local aPerAtual	:= {}
Local cRoteiro := If(SRA->RA_CATFUNC $ 'A|P',fGetCalcRot('9'),fGetCalcRot('1'))

If fGetPerAtual( @aPerAtual, xFilial("RCH"), SRA->RA_PROCES, cRoteiro )
	dDtRef		:= aPerAtual[1,6]
Else
	dDtRef   	:= firstday(dDatabase)
EndIf

If cPaisLoc == "BRA"
	If oGrid:GetValue("RB_AUXCRE") == "1" .AND. Empty(oGrid:GetValue("RB_VLRCRE"))
		nBusca :=  DateDiffMonth( dDtRef , oGrid:GetValue("RB_DTNASC") )
		cTab   := if(lGestPubl,"S109","S015")
		dDataRef	:= dDtRef

    	If ( nLinha := fPosTab(cTab,SRA->RA_SINDICA,"=",4,nBusca,"<=",5) ) > 0
        	nValBase := fTabela(cTab,nLinha,6,dDtRef)
		EndIf
		If nValBase <= 0
			lRet		:= .F.
			Help( " ", 1, "Help",, STR0080 + cTab + '.', 1, 0 ) //"Quando o campo 'Aux Creche' for preenchido com 'Sim', deverá existir valor no campo 'Valor Creche' ou então existir registro válido na tabela " + "S015" ou "S109"
		EndIf
	EndIf

	If oGrid:GetValue("RB_AUXCRE") == "2" .AND. !Empty(oGrid:GetValue("RB_VLRCRE")) .AND. lRet
		lRet		:= .F.
		Help( " ", 1, "Help",, STR0062, 1, 0 ) //"Se o campo 'Auxílio Creche' estiver como Não o campo 'Valor Creche' não deve ser preenchido."
	EndIf
EndIf
Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ VldAuxCre()   ³ Autor ³ Emerson Campos   ³ Data ³23/07/2014³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Função para validar o campo Aux. creche do cad. GPEA020    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Geral                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ*/
Function VldAuxCre()
Local lRet		:= .T.
Local oModel	:= FWModelActive()
Local oGrid	:= oModel:GetModel("GPEA020_SRB")
If cPaisLoc == "BRA" .And. !IsInCallStack("FWMILEIMPORT")
	If oGrid:GetValue("RB_AUXCRE") == "2"
		oGrid:SetValue("RB_VLRCRE",0)
	EndIf

	If oGrid:GetValue("RB_AUXCRE") == "2" .AND. !Empty(oGrid:GetValue("RB_VLRCRE"))
		lRet		:= .F.
		Help( " ", 1, "Help",, STR0062, 1, 0 ) //"Se o campo 'Auxílio Creche' estiver como Não o campo 'Valor Creche' não deve ser preenchido."
	EndIf
EndIf
Return lRet


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ ObtnSRB()     ³ Autor ³ Laura Medina     ³ Data ³20/10/2015³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcion para obtener los registro originales del empleado  ³±±
±±³          ³ (tabla SRB), se ejecuta antes de que se realice algun cam- ³±±
±±³          ³ bio, para posteriormente grabarse en el historico (SR9)    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Dependientes                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ*/
Static Function ObtnSRB(oModelGrid)
Local oGrid
Local nLoop   := 0
Local nLoops  := 0
Local aHeader := {}
Local aRegist := {}

If  !(SR9->(FieldPos("R9_COD")) >0 .AND. RetOrdem("SR9","R9_FILIAL+R9_MAT+R9_CAMPO+R9_COD+DTOS(R9_DATA)") >0 )
	 Return .T.
Endif

If  !Empty(aCpyGrid)
	 Return .T.
Endif

oGrid 		:= oModelGrid:GetModel("GPEA020_SRB")
aHeader	:= oGrid:aHeader

For nLoops := 1 To oGrid:Length()
	oGrid:GoLine( nLoops )
		If !oGrid:IsDeleted()
			aRegist := {}
			For nLoop := 1 To Len(aHeader)
				If  nloop == 2
					aAdd(aRegist,{SRA->RA_MAT,aHeader[nLoop,2]})
				Else
					aAdd(aRegist,{oGrid:GetValue(aHeader[nLoop,2]),aHeader[nLoop,2]})
				Endif
			Next nLoop
			If  !Empty(aRegist)
				 aAdd(aCpyGrid, aRegist)
			Endif
		EndIf
	Next nLoops

Return .T.


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ GravaSR9()    ³ Autor ³ Laura Medina     ³ Data ³20/10/2015³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcion para grabar los cambios en la tabla SR9, basados en³±±
±±³          ³ la funcion FHIST() del campo de validacion y vld de usuario³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Dependientes                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ*/
Static Function GravaSR9( cCampo , uConteudo , uContAnt , cSecuencia , lNew)
Local cValid
Local cVldUser
Local cContAnt
Local cConteudo
Local cTypeCnt1
Local cTypeCnt2
Local lHist			:= .F.
Local lSraLocked		:= IsLocked( "SRA" , SRA->( Recno() ) )
Local lLock			:= .F.
Local lSetCentury	:= __SetCentury("on")
Local lAddNew
Default cSecuencia := ""

	Begin Sequence
		cTypeCnt1 := ValType( uConteudo )
		If  !lNew  //Compara solo si ya existia el registro (SR9)
			cTypeCnt2 := ValType( uContAnt  )

			If !( cTypeCnt1 == cTypeCnt2 )
				Break
			EndIf

		Endif

		//Validar que el campo contenga en la validacion X3_VALID o X3_VLDUSER la funcion "FHIST"
		cCampo	:= Upper( AllTrim( cCampo ) )
		cValid	:= GetSx3Cache( cCampo , "X3_VALID" )
		If !( lHist := ( cValid <> Nil .And. ( "FHIST" $ Upper( cValid ) ) ) )
			cVldUser	:= GetSx3Cache( cCampo , "X3_VLDUSER"	)
			If !( lHist := ( cVldUser <> Nil .And. ( "FHIST" $ Upper( cVldUser ) ) ) )
				Break
			EndIf
		EndIf

		cPictCpo	:= Upper( AllTrim( GetSx3Cache( cCampo , "X3_PICTURE" ) ) )
		cConteudo	:= AllTrim( AllToChar( uConteudo , cPictCpo ) )
		If  !lNew  //Compara solo si ya existia el registro
			cContAnt	:= AllTrim( AllToChar( uContAnt , cPictCpo ) )

			If !( lHist := cContAnt <> cConteudo )
				Break
			EndIf
		Endif

		SR9->(DBSETORDER(RETORDEM("SR9","R9_FILIAL+R9_MAT+R9_CAMPO+R9_COD+DTOS(R9_DATA)")))
		// Verifica se Houve alguma alteracao caso nao haja grava o anterior como primeira
		If  !Empty( uContAnt )   // So grava quando nao for vazio
			lAddNew := SR9->( !dbSeek( SRA->( RA_FILIAL + RA_MAT ) + cCampo + cSecuencia) )

			cMes := If( ( Month(dDataBase) -1 > 0 ) , StrZero( Month( dDataBase ) -1 , 2 ) , "12" )
			cAno := If( cMes == "12" , StrZero( Year( dDataBase ) - 1 , 4 ) , StrZero( Year( dDataBase ) , 4 ) )

			If ( lAddNew )
			    If SR9->( RecLock( "SR9" , .T. , .T. ) )
					SR9->R9_FILIAL   := SRA->RA_FILIAL
					SR9->R9_MAT      := SRA->RA_MAT
					SR9->R9_DATA     := Ctod("01/"+cMes+"/"+cAno,"ddmmyy")
					SR9->R9_CAMPO    := cCampo
					SR9->R9_DESC     := cContAnt
					SR9->R9_COD     := cSecuencia
					SR9->( MsUnLock() )
				EndIf
			EndIf

		EndIf

		// Gravacao da alteracao cadastral atual
		lAddNew := !( SR9->( dbSeek( SRA->RA_FILIAL + SRA->RA_MAT + cCampo + cSecuencia + Dtos( dDataBase )  ) ) )
		If SR9->( RecLock( "SR9" , lAddNew , .T. ) )
			SR9->R9_FILIAL   := SRA->RA_FILIAL
			SR9->R9_MAT      := SRA->RA_MAT
			SR9->R9_DATA     := dDataBase
			SR9->R9_CAMPO    := cCampo
			SR9->R9_DESC     := cConteudo
			SR9->R9_COD     := cSecuencia
			SR9->( MsUnLock() )
		EndIf

		End Sequence

	If !( lSetCentury )
		__SetCentury("off")
	EndIf

Return( lHist )


/*/{Protheus.doc} Gp020SetAuto
@author Leandro Drumond
@since 08/03/2022
@version P12
/*/
Function Gp020SetAuto(lValue)
	Default lValue := .F.
	lGp020Auto := lValue
Return (Nil)

/*/{Protheus.doc} RstGpe020
Função para reinicializar as variáveis Static
@author allyson.mesashi
@since 23/01/2019
@version P12.1.17
/*/
Function RstGpe020()

cEFDAviso 	:= Nil
lIntTAF		:= ((SuperGetMv("MV_RHTAF",, .F.) == .T.) .AND. Val(SuperGetMv("MV_FASESOC",/*lHelp*/,' ')) >= 1 )
lMiddleware	:= If( cPaisLoc == 'BRA' .AND. Findfunction("fVerMW"), fVerMW(), .F. )
lGeraEvt	:= lIntTAF .Or. lMiddleware

Return( NIL )

/*/{Protheus.doc} fTemAlt
Verifica se campos que vão no XML do esocial sofreram alteração, caso não tenham sofrido alteração não é necessário enviar o xml
@author guilherme.bertelli
@since 21/05/2018
/*/
Static Function fTemAlt(oModel)
	Local lRet		:= .F.
	Local aCampos 	:= {'RB_TPDEP', 'RB_NOME', 'RB_DTNASC', 'RB_CIC', 'RB_TIPIR', 'RB_TIPSF'}
	Local nI		:= 1

	If SRB->( ColumnPos('RB_INCT') ) > 0
		AAdd(aCampos,'RB_INCT')
	EndIf

	For nI := 1 To Len(aCampos)
		If oModel:IsFieldUpdated(aCampos[nI])
			lRet := .T.
			Exit
		EndIf
	Next nI
Return lRet

/*/{Protheus.doc} fTemDepen
Quando for chamada via execauto, verifica se existe registro na SRB diferente do que esta sendo enviado, caso exista,
será incluido no array de itens para geração correta do evento S-2205.

@since	25/03/2020
@autor	Silvio C. Stecca
@version P12.1.XX

/*/
Static Function fTemDepen(aItens, nOpc)

	Local nReg		:= 0
	Local nPosfil	:= 0
	Local nPosMat	:= 0
	Local nPosCod	:= 0
	Local cFilSRB	:= ""
	Local cMatSRB	:= ""
	Local cCodSRB	:= ""

	If nOpc == 3
		For nReg := 1 To Len(aItens)

			If (nPosfil := AScan(aItens[1], {|x|x[1]=='RB_FILIAL'})) > 0
				cFilSRB := aItens[nReg, nPosfil, 2]
			Else
				cFilSRB := xFilial("SRA")
			EndIf

			If (nPosMat := AScan(aItens[1], {|x|x[1]=='RB_MAT'})) > 0
				cMatSRB := aItens[nReg, nPosMat, 2]
			EndIf

			If (nPosCod := AScan(aItens[1], {|x|x[1]=='RB_COD'})) > 0
				cCodSRB := aItens[nReg, nPosCod, 2]
			EndIf

			// CHAMA FUNÇÃO QUE VERIFICA SE JÁ EXISTE OUTRO DEPENDENTE PARA A MATRICULA.
			fIncDepen(aItens, cFilSRB, cMatSRB, cCodSRB)

		Next nReg
	EndIf

Return Nil

/*/{Protheus.doc} fTemDepen
Quando for chamada via execauto, verifica se existe registro na SRB diferente do que esta sendo enviado, caso exista,
será incluido no array de itens para geração correta do evento S-2205.

@since	25/03/2020
@autor	Silvio C. Stecca
@version P12.1.XX

/*/
Static Function fIncDepen(aItens, cFilSRB, cMatSRB, cCodSRB)

	Local cAliasSRB	:= GetNextAlias()
	Local aArea		:= GetArea()
	Local aLinSRB	:= {}
	Local aRecSRB	:= {}
	Local nRec		:= 0

	// FECHA O ALIAS CASO ESTEJA SENDO USADO.
	If (Select(cAliasSRB) > 0)
		(cAliasSRB)->(DbCloseArea())
	EndIf

	BeginSql alias cAliasSRB
		SELECT RB_FILIAL, RB_MAT, RB_COD, RB_NOME, RB_TPDEP, RB_DTNASC, RB_SEXO, RB_GRAUPAR, RB_TIPIR, RB_TIPSF, RB_LOCNASC, RB_CIC, R_E_C_N_O_ RECSRB
		FROM %table:SRB% SRB
		WHERE
		RB_FILIAL = %exp:cFilSRB%
		AND RB_MAT = %exp:cMatSRB%
		AND RB_COD <> %exp:cCodSRB%
		AND SRB.%NotDel%
	EndSql

	If !(cAliasSRB)->(Eof())
		While !(cAliasSRB)->(Eof())

			aLinSRB := {}

			aAdd(aLinSRB, {"RB_FILIAL"	, (cAliasSRB)->RB_FILIAL		, Nil})
			aAdd(aLinSRB, {"RB_MAT"   	, (cAliasSRB)->RB_MAT			, Nil})
			aAdd(aLinSRB, {"RB_COD"     , (cAliasSRB)->RB_COD			, Nil})
			aAdd(aLinSRB, {"RB_NOME"   	, (cAliasSRB)->RB_NOME			, Nil})
			aAdd(aLinSRB, {"RB_TPDEP"   , (cAliasSRB)->RB_TPDEP			, Nil})
			aAdd(aLinSRB, {"RB_DTNASC" 	, sTod((cAliasSRB)->RB_DTNASC)	, Nil})
			aAdd(aLinSRB, {"RB_SEXO"  	, (cAliasSRB)->RB_SEXO			, Nil})
			aAdd(aLinSRB, {"RB_GRAUPAR"	, (cAliasSRB)->RB_GRAUPAR		, Nil})
			aAdd(aLinSRB, {"RB_TIPIR" 	, (cAliasSRB)->RB_TIPIR			, Nil})
			aAdd(aLinSRB, {"RB_TIPSF" 	, (cAliasSRB)->RB_TIPSF			, Nil})
			aAdd(aLinSRB, {"RB_LOCNASC" , (cAliasSRB)->RB_LOCNASC		, Nil})
			aAdd(aLinSRB, {"RB_CIC"    	, (cAliasSRB)->RB_CIC			, Nil})

			// ARMAZENA NO ARRAY OS RECNO´S DOS REGISTROS ENCONTRADOS.
			aAdd(aRecSRB, {(cAliasSRB)->RECSRB})

			// ADICIONA O REGISTRO ENCONTRADO AO ARRAY ENVIADO PELO EXECAUTO DA ROTINA.
			aadd(aItens, aLinSRB)

			(cAliasSRB)->(dbSkip())
		EndDo

		// ORDENA O ARRAY DO EXECAUTO.
		aSort(aItens)

		// COM O ARRAY DE RECNO CONTENDO INFORMAÇÃO, VAI DELETAR OS REGISTROS
		// ENCONTRADOS DA TABELA SRB PARA GARANTIR QUE NÃO HAJA CHAVE DUPLICADA DURANTE O EXECAUTO.
		If Len(aRecSRB) > 0
			For nRec := 1 To Len(aRecSRB)
				SRB->(DbSetOrder(1))

				Begin Transaction
					// DELETA OS ITENS DA SRB ENCONTRADOS.
					SRB->(DbGoTo(aRecSRB[nRec, 1]))
					If Reclock("SRB", .F.)
						SRB->(DbDelete())
						SRB->(MsUnLock())
					EndIf
				End Transaction
			Next nRec
		EndIf
	EndIf

	// FECHA O ARQUIVO TEMPORARIO CRIADO.
	(cAliasSRB)->(DbCloseArea())

	// RESTAURA A AREA.
	RestArea(aArea)

Return Nil

/*/{Protheus.doc} fAltCamposApi
Verifica se os campos de envio da API foram alterados
@since	08/04/2020
@autor	Wesley Alves Pereira
@version P12.1.XX

/*/
Static Function fAltCamposApi(oGridApi,nNumLinha)
Local aArea		:= GetArea()
Local aCampos 	:= {'RB_NOME', 'RB_DTNASC', 'RB_CIC', 'RB_SEXO'}
Local lAlterou  := .F.
Local nI		:= 1
Local nJ        := 1

For nJ := 1 To oGridApi:Length()
	If nJ == nNumLinha
		oGridApi:GoLine( nJ )
		For nI := 1 To Len(aCampos)
			If oGridApi:IsFieldUpdated(aCampos[nI])
				lAlterou := .T.
				Exit
			EndIf
		Next nI
	EndIf
Next nJ

RestArea(aArea)

Return (lAlterou)

*/

/*/{Protheus.doc} fPrepDadosApi
Processo para preparar os dados de inclusão/alteração/deleção para
integração via API REST.

@since	08/04/2020
@autor	Wesley Alves Pereira
@version P12.1.XX

/*/
Static Function fPrepDadosApi(nOpcModel,oGrid)

Local aArea		:= GetArea()
Local cTmpCod   := ""

Local nI		:= 1
Local cOperacao := ""
Local lIntegrac := SUPERGETMV('MV_RHNG', .F., .F.)

If ( ! ( lIntegrac) )
	Return (.T.)
EndIf

If nOpcModel == MODEL_OPERATION_DELETE
	For nI := 1 To oGrid:Length()
		oGrid:GoLine( nI )
		cTmpCod := oGrid:GetValue("RB_COD")
		cOperacao := "E"
		fSendDadosApi(cOperacao,cTmpCod)
	Next nI
Else
	For nI := 1 To oGrid:Length()
		oGrid:GoLine( nI )
		If oGrid:IsDeleted()
			cTmpCod := oGrid:GetValue("RB_COD")
			cOperacao := "E"
			fSendDadosApi(cOperacao,cTmpCod)
		Else
			If oGrid:IsInserted()
				cTmpCod := oGrid:GetValue("RB_COD")
				cOperacao := "I"
				fSendDadosApi(cOperacao,cTmpCod)
			Else
				If fAltCamposApi(oGrid,nI)
					cTmpCod := oGrid:GetValue("RB_COD")
					cOperacao := "A"
					fSendDadosApi(cOperacao,cTmpCod)
				EndIf
			EndIf
		EndIf
	Next nI
EndIf

RestArea(aArea)

Return (.T.)

/*/{Protheus.doc} fSendDadosApi
Processo para enviar os dados de inclusão/alteração/deleção para
integração via API REST.

@since	08/04/2020
@autor	Wesley Alves Pereira
@version P12.1.XX

/*/
Static Function fSendDadosApi(cOperacao, cTmpCod)

Local dDtBase   := DDATABASE
Local cHoraAt   := time()
Local cTmpEmp   := cEmpAnt
Local cProces   := "SRB"
Local cUserId   := SubStr(cUsuario,7,15)
Local cTmpMat   := SRB->RB_MAT
Local cTmpFil   := SRB->RB_FILIAL
Local cChave    := cTmpEmp + "|" + cTmpFil + "|" + cTmpMat + "|" + cTmpCod

fSetInforRJP(cTmpFil, cTmpMat, cProces, cChave, cOperacao,  dDtBase, cHoraAt,cUserId)

Return (.T.)
