#Include "PROTHEUS.CH"
#INCLUDE "GPER670.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GPER670  ³ Autor ³ Mauricio T. Takakura       ³ Data ³ 04.04.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Resumo da Folha de Pagamento por Competencia                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GpeR670(void)                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS      ³  Motivo da Alteracao                     ³±±
±±ºRenan Borges³17/06/16³TVGBXY     ³Disponibilizado relatório de resumo por   º±±
±±º            ³        ³           ³competência, sendo possível a impressão   º±±
±±º            ³        ³           ³para todos os processos em uma determinadaº±±
±±º            ³        ³           ³competência.                              º±±
±±ºIsabel N.   ³06/01/17³MRH-2545   ³Declaração da variável lFechado p/ evitar º±±
±±º            ³        ³           ³error.log na impressão do resumo por      º±±
±±º            ³        ³           ³competência (GPER040).                    º±±
±±ºIsabel N.   ³23/01/17³MRH-5342   ³Declaração da variável cEncInss(GPER040)p/º±±
±±º            ³        ³           ³evitar error.log em período fechado.      º±±
±±³Marco A. Glz³12/06/14³   MMI-74  ³Se replica llamado TVJRC4 V11.8, que solu-³±±
±±³            ³        ³           ³siguiente: Tratamiento para modelo 2 de   ³±±
±±³            ³        ³           ³Resumen de Competencias para V12.1.14, se ³±±
±±³            ³        ³           ³agregan preguntas MV_PAR17 y MV_PAR18, que³±±
±±³            ³        ³           ³ahora seran para todos los paises.        ³±±
±±ºEduardo K.  ³03/08/17³MPRIMESP   ³Ajuste no valor da variavel cDeptoDe para º±±
±±º            ³        ³10651      ³correta impressão em ambiente Oracle.     º±±
±±ºJaqueline L.³27/12/17³DRHPAG-8462³Ajuste no MV_par18 para quando o processo º±±
±±º            ³        ³           ³não for preenchido não deixar prosseguir. º±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GpeR670()

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Variaveis Locais (Basicas)                            ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	Local cDesc1 		:= STR0001		//"Resumo da Folha de Pagamento"
	Local cDesc2 		:= STR0002		//"Ser  impresso de acordo com os parametros solicitados pelo usuario."
	Local cDesc3 		:= STR0003		//"Obs. Dever  ser impressa uma Folha/Resumo para cada Tipo de Contrato."
	Local cString		:= "SRA"        //alias do arquivo principal (Base)

	Local aOrd      	:= {}
	Local aPerAberto	:= {}
	Local aPerFechado	:= {}
	Local cMesAnoRef	:= ""
	Local cMes			:= ""
	Local cAno			:= ""
	Local lProcRot			:= .T.

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Variaveis Private(Basicas)                            ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	Private nomeprog	:= "GPER670"
	Private aReturn 	:= { STR0009, 1,STR0010, 2, 2, 1,"",1 }	//"Zebrado"###"Administra‡„o"
	Private aLinha  	:= {}
	Private nLastKey 	:= 0
	Private cPerg   	:= "GPER670"

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Variaveis Utilizadas na funcao IMPR                          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	Private Titulo	:= STR0011		//"IMPRESSAO DO RESUMO POR COMPETENCIA"
	Private CONTFL  := 1
	Private LI      := 0
	Private wCabec0 := 1
	Private wCabec1 := ""
	Private wCabec2 := ""
	Private cCabec
	Private	cRefOco
	Private nTamanho:= "M"
	Private nOrdem
	Private aInfo   := {}
	Private dDataRef
	Private nTpContr

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Variaveis criadas apenas para utilizacao das outras funcoes  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	Private cProcesso	:= "" // Armazena o processo selecionado na Pergunte GPR040 (MV_PAR01).
	Private cRoteiro	:= "" // Armazena o Roteiro selecionado na Pergunte GPR040 (MV_PAR02).
	Private cPeriodo	:= "" // Armazena o Periodo selecionado na Pergunte GPR040 (MV_PAR03).
	Private Semana		:= ""
	Private lSalta   	:= .F.
	Private cSinAna  	:= "A"
	Private lImpNiv  	:= .F.
	Private lUnicNV  	:= .F.
	Private lImpTot  	:= .T.
	Private cTipCC   	:= "3"
	Private cDeptoDe    := " "
	Private cDeptoAte   := "ZZZZZZZZZZ"
	Private lImpDepto   := .F.
	Private lSaltaDepto := .F.
	Private dDtPerIni	:= Ctod("  /  /  ")
	Private dDtPerFim	:= Ctod("  /  /  ")
	Private lImpBase   := .T.
	Private cListProc  := ""
	Private cListRot   := ""
	Private lMODFOL    := IF( GetMv("MV_MODFOL") == "2" , .T. , .F. )
	Private lDifLiq		:= .F.
	Private lItemClVl 	:= SuperGetMv( "MV_ITMCLVL", .F., "2" ) $ "1*3"	// Determina se utiliza Item Contabil e Classe de Valores
	Private lFechado
	Private cEncInss	:= SuperGetMv( "MV_ENCINSS", .F., "S" )
	
	Private cFilDe   
	Private cFilAte  
	Private cCcDe    
	Private cCcAte   
	Private cMatDe   
	Private cMatAte 
	Private cNomDe   
	Private cNomAte   
	Private cSit     
	Private cCat     
	Private lImpFil   
	Private lImpEmp   
	
	
	If cPaisLoc == "BRA"
		Private lPaisagem	:= .F.
		Private cProcAbe	:= ""
		Private cProcFec	:= ""
		Private cPrcAbeSQL	:= ""
		Private cPrcFecSQL	:= ""
	EndIf
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Variaveis utilizadas para parametros                         ³
	³ mv_par01        //  Processo						           ³
	³ mv_par02        //  Filial  De                               ³
	³ mv_par03        //  Filial  Ate                              ³
	³ mv_par04        //  Centro de Custo De                       ³
	³ mv_par05        //  Centro de Custo Ate                      ³
	³ mv_par06        //  Matricula De                             ³
	³ mv_par07        //  Matricula Ate                            ³
	³ mv_par08        //  Nome De                                  ³
	³ mv_par09        //  Nome Ate                                 ³
	³ mv_par10        //  Situacao                                 ³
	³ mv_par11        //  Categoria                                ³
	³ mv_par12        //  Imprime Total Filial                     ³
	³ mv_par13        //  Imprime Total Empresa                    ³
	³ mv_par14        //  Imprime Referencia ou Ocorrencias        ³
	³ mv_par15	      //  Tp Contrato                              ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carregando variaveis mv_par?? para Variaveis do Sistema.     ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	pergunte("GPER670",.F.)
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³  Parametros fixos para a emissao do Resumo                   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	lSalta   := .F.
	cSinAna  := "S"
	lImpNiv  := .F.
	lUnicNV  := .F.
	lImpTot  := .T.
	cTipCC   := "1"
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Envia controle para a funcao SETPRINT                        ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If TRepInUse()
		GPER106(.T.)
		Return
	Else
		wnrel:="GPER670"            //Nome Default do relatorio em Disco
		wnrel:=SetPrint(cString,wnrel,cPerg,@Titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd,,nTamanho)
		aPerAberto := {}
		aPerFechado := {}
		cListProc := ""
		GetPergunte(@cMes,@cAno,@aPerAberto,@aPerFechado,@lProcRot)
		
		If nLastKey = 27
			Return
		Endif
		
		SetDefault(aReturn,cString)
		
		If nLastKey = 27
			Return
		Endif

		If !lProcRot
			Help( " ", 1, OemToAnsi(STR0018),, OemToAnsi(STR0020), 1, 0 )//"Atenção"###"Perguntes 'Quais Processos?' e 'Quais procedimentos?' não podem ficar vazio."
			Return
		EndIf
		
	EndIf

	If cPaisLoc == "BRA"
		If aReturn[4] == 2 // 1-Retrato/2-Paisagem
			lPaisagem := .T.
			nTamanho := "G"
		EndIf
	EndIf
	
	nOrdem	:= aReturn[8]
	

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Cabecalho do Relatorio                                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	dbSelectArea("SRA")
	cCabec := " / "+Upper(MesExtenso(Month(dDataRef)))+STR0017+STR(YEAR(dDataRef),4)
	Titulo := AllTrim(Titulo) + AllTrim(cCabec)
	cMesAnoRef := StrZero(Month(dDataRef),2) + StrZero(Year(dDataRef),4)
	cRelFil    := aReturn[7]

	RptStatus({|lEnd| GR040Imp(@lEnd,wnRel,cString,cMesAnoRef,nTpContr,.F., aPerAberto, aPerFechado)},Capital(Titulo))

Return

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fRetPer670		³Autor³Renan Borges      ³ Data ³17/06/2016³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Retorna array periodos abertos e fechados de uma competencia³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function fPerComp670(	cMes		,;		//Obrigatorio - Mes para localizar as informacoes
								cAno		,;		//Obrigatorio - Ano para localizar as informacoes
								cRCHFil	,;		//Opcional - Filial a Pesquisar
								cProcesso	,;		//Obrigatorio - Filtro por Processo
								cRoteiro	,;		//Opcional - Filtro por Roteiro
								aPerAberto	,;		//Por Referencia - Array com os periodos Abertos
								aPerFechado,;		//Por Referencia - Array com os periodos Fechados
								aPerTodos  ,;		//Por Referencia - Array com os periodos Abertos e Fechados em Ordem Crescente
								lVerific   ,;    //Opcional - Verifica se a chamada da função veio do GPER050.
								dDataDe    ,;    //Opcional - Caso a chamada da função vier do GPER050 verifica a data incial de pagamento.
								dDataAte   ,;    //Opcional - Caso a chamada da função vier do GPER050 verifica a data final de pagamento.
								cProcAbe	,;		//Por Referencia - Caracter contendo os processos abertos selecionados 
								cProcFec	)		//Por Referencia - Caracter contendo os processos fechados selecionados

	Local aArea			:= GetArea()
	Local cAliasRCH 	:= ""
	Local cWhereRCH   	:= ""
	Local cCamposRCH  	:= "" 
	Local nCnt

	DEFAULT cRCHFil		:= xFilial("RCH")
	DEFAULT cProcesso 	:= ""
	DEFAULT cRoteiro	:= ""
	DEFAULT lVerific    := .F.
	DEFAULT dDataDe     := cToD("//")
	DEFAULT dDataAte    := cToD("//")
	DEFAULT cProcAbe	:= ""
	DEFAULT cProcFec	:= ""

	If Empty(cMes) .Or. Empty(cAno)
		Return(NIL)
	EndIf

	aPerAberto 	:= {}
	aPerFechado	:= {}

	cAliasRCH := "RCH"
	dbSelectArea(cAliasRCH)
	DbSetOrder(RetOrder("RCH", "RCH_FILIAL+RCH_ANO+RCH_MES"))	// Ordem 4
	DbSeek( cRCHFil+cAno+cMes, .F. )
	While RCH->( !Eof() ) .and. RCH->( RCH_FILIAL + RCH_ANO + RCH_MES ) == cRCHFil + cAno + cMes

		If 	(!Empty(cProcesso) .And. !RCH->(&cProcesso)) .Or.;
		(!(RCH->RCH_ROTEIR $ cRoteiro))
			RCH->( DbSkip() )
			Loop
		EndIf

		If Empty( RCH->RCH_DTFECH )
			aAdd(aPerAberto	, RCH->({RCH_PER, RCH_NUMPAG, RCH_MES, RCH_ANO, RCH_DTINI, RCH_DTFIM, RCH_PROCES, RCH_ROTEIR, RCH_DTPAGO, RCH_DTCORT, RCH_DTINTE }))
			cProcAbe += If(!Empty(cProcAbe), "|" + RCH->RCH_PROCES,RCH->RCH_PROCES)
		Else
			aAdd(aPerFechado, RCH->({RCH_PER, RCH_NUMPAG, RCH_MES, RCH_ANO, RCH_DTINI, RCH_DTFIM, RCH_PROCES, RCH_ROTEIR, RCH_DTPAGO, RCH_DTCORT, RCH_DTINTE }))
			cProcFec += If(!Empty(cProcFec), "|" + RCH->RCH_PROCES,RCH->RCH_PROCES)
		EndIf

		RCH->( DbSkip() )
	EndDo

	If aPerTodos # Nil
		aPerTodos := {}
		If Len(aPerAberto) > 0 .And. Len(aPerFechado) > 0
			aPerTodos := aClone(aPerAberto)
			For nCnt := 1 To Len( aPerFechado )
				If aScan( aPerTodos, { |x| x[1] == aPerFechado[nCnt,1] } ) == 0
					aAdd( aPerTodos, ACLONE(aPerFechado[nCnt]) )
				EndIf
			Next nCnt
		ElseIf Len(aPerAberto) > 0
			aPerTodos := aClone( aPerAberto )
		ElseIf Len(aPerFechado) > 0
			aPerTodos := aClone( aPerFechado )
		EndIf
		aSort( aPerTodos,,, { |x,y| x[1] < y[1] } )
	EndIf

	RestArea( aArea )

Return ( NIL )

Static Function GetPergunte(cMes,cAno,aPerAberto,aPerFechado,lProcRot)
	fGpr670Perg(@cMes,@cAno,@aPerAberto,@aPerFechado,@lProcRot)
Return NIL


Function fGpr670Perg(cMes,cAno,aPerAberto,aPerFechado,lProcRot)
Local aRotAut		:= {}
Local nRot
Local nCount
Local nX
Local nY
Local nPer

DEFAULT lProcRot	:= .T.
	
cMes	:= Substr(mv_par01,1,2)
cAno	:= Substr(mv_par01,3,4)

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carregar os periodos abertos (aPerAberto) e/ou os periodos   ³
	³ fechados (aPerFechado), de acordo com uma determinada compe- ³
	³ tencia.                 									   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	fRetPerComp( cMes, cAno, Nil, Nil, Nil, @aPerAberto, @aPerFechado)

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Gerar periodos de Autonomos, caso existam lancamentos nos    ³
	³ periodos da competencia.                                     ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	SRY->( DbGoTop() )
	While SRY->( !Eof() )
		If SRY->RY_TIPO == "9"
			aAdd( aRotAut, SRY->RY_CALCULO )
		EndIf
		SRY->( DbSkip() )
	EndDo

	nRot := Len(aRotAut)
	For nX := 1 To nRot
		nPer := Len(aPerAberto)
		For nY := 1 To nPer
			If (aPerAberto[nY,08] == aRotAut[nX] .Or. Empty(AllTrim(aPerAberto[nY,08]))) .And. Empty(AllTrim(aPerAberto[nY,02]))
				aPerAberto[nY,02] := "**"
			EndIf
		Next nY
		nPer := Len(aPerFechado)
		For nY := 1 To nPer
			If (aPerFechado[nY,08] == aRotAut[nX] .Or. Empty(AllTrim(aPerFechado[nY,08]))) .And. Empty(AllTrim(aPerFechado[nY,02]))
				aPerFechado[nY,02] := "**"
			EndIf
		Next nY
	Next nX

	//--Montagem das Datas
	dDtPerIni := CTOD("01/" + cMes + "/" + cAno)
	dDtPerFim := LastDate( dDtPerIni )
	dDataRef  := dDtPerIni
	cFilDe    := MV_PAR02
	cFilAte   := MV_PAR03
	cCcDe     := MV_PAR04
	cCcAte    := MV_PAR05
	cMatDe    := MV_PAR06
	cMatAte   := MV_PAR07
	cNomDe    := MV_PAR08
	cNomAte   := MV_PAR09
	cSit      := MV_PAR10
	cCat      := MV_PAR11
	lImpFil   := If( MV_PAR12 == 1 , .T. , .F. )
	lImpEmp   := If( MV_PAR13 == 1 , .T. , .F. )
	cRefOco   := MV_PAR14
	nTpContr  := MV_PAR15
	lImpBase  := MV_PAR16 == 1

	cperiodo := substr(mv_par01,3,4) + substr(mv_par01,1,2)
	//semana := '01'
	
	IF lMODFOL .OR. cPaisLoc == "BRA"
		cRoteiro  := MV_PAR17 // Roteiro.
		cProcesso := MV_PAR18 // Processo

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Genera una lista de Procesos     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty(cProcesso)
			If AT(";",cProcesso) > 0
				cProcesso := StrTran(cProcesso,";")
			EndIf
			For nCount := 1 To Len(cProcesso) Step TAMSX3('RCJ_CODIGO')[1]
				if empty( SubStr( cProcesso , nCount , TAMSX3('RCJ_CODIGO')[1] ) )
					exit
				endif
				cListProc += "'" + SubStr( cProcesso , nCount , TAMSX3('RCJ_CODIGO')[1] ) + "',"
			Next
			cListProc := Substr( cListProc , 1 , len( cListProc ) - 1 )
		Endif 

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Genera una lista de procedimientos      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nCount := 1 To Len(cRoteiro) Step TAMSX3('RY_CALCULO')[1]
			if empty( SubStr( cRoteiro , nCount , TAMSX3('RY_CALCULO')[1] ) )
				exit
			endif
			cListRot += "'" + SubStr( cRoteiro , nCount , TAMSX3('RY_CALCULO')[1] )+ "',"
		Next
		cListRot := Substr( cListRot , 1 , len( cListRot ) - 1 )
	
		If Empty(cListProc) .Or. Empty(cListRot)
			lProcRot	:= .F.
		EndIf
	EndIf

Return
