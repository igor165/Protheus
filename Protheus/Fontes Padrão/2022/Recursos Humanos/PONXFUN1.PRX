#INCLUDE "PONXFUN1.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "PONCALEN.CH"
#INCLUDE "TOPCONN.CH"
#Include "SIGAWF.CH"
Static lPort1510 := Port1510() //Verifica se Portaria 1510/2009 esta em vigor.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³PonxFun   ³ Autor ³ *EQUIPE RH ADVANCED*  ³ Data ³02/02/1996³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Biblioteca de Fun‡”es Utilizadas no M¢dulo SigaPon         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Void                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³                     ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL. ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Leandro Dr. ³14/04/14³      ³Retirada de ajustes, database e FieldPos  ³±±
±±³            ³        ³      ³que nao serao utilizados na P12.		  ³±±
±±³Allyson M.  ³27/10/14³TQVI54³-Ajuste p/ nao enviar ao TSA registros da ³±±
±±³			   ³		³	   ³SRH sem data inicial e final pois esses   ³±±
±±³			   ³		³	   ³registros tratam de perda do periodo e nao³±±
±±³			   ³		³	   ³de saida de gozo das ferias.			  ³±±
±±³			   ³		³	   ³-Ajuste p/ eliminar os objetos utilizados ³±±
±±³			   ³		³	   ³para a integracao afim de evitar carga    ³±±
±±³			   ³		³	   ³excessiva da memoria do AppServer, que cau³±±
±±³			   ³		³	   ³sava encerramento do Server (Ch TQVRQ8).  ³±±
±±³Wag Mobile  ³27/10/14³TR1157³Melhorias no processo de integração do TSA³±±
±±³Luis Artuso ³03/07/15³TSGNVO³Melhorias no processo de integração do TSA³±±
±±³Allyson M.  ³16/10/15³TTPMJ1³Ajuste para integracao com TSA para nao   ³±±
±±³			   ³		³	   ³validar existencia de funcionario na SRA  ³±±
±±³			   ³		³	   ³na carga de empresas, ajuste na logica	  ³±±
±±³			   ³		³	   ³de troca de turno quando nao for a carga  ³±±
±±³			   ³		³	   ³inicial, ajuste para executar metodo 	  ³±±
±±³			   ³		³	   ³WsNatural() antes de WsUser() e ajuste p/ ³±±
±±³			   ³		³	   ³gerar codigo unico do funcionario 		  ³±±
±±³Renan Borges³13/11/15³TTPMJ1³Ajuste não gerar error.log quando nao for ³±±
±±³			   ³		³	   ³a rotina de lançamentos integrados.       ³±±
±±³Cícero Alves³13/07/16³TVDRRB³Ajuste na função WSRHAbsenceReason para   ³±±
±±³			   ³		³	   ³buscar informações na RCM e não na SX5    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³GetAcessos  ³Autor ³ Mauricio MR          ³ Data ³18/12/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Retornar Array aAcessos com os Acessos do Periodo           ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Ver Parametros > 											³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Ponto Eletronico                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Nil		                        							³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³ < Vide Parametros Formais >								³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function GetAcessos(	aAcessos			,;	//01 -> Acessos
						dPerIni 			,;	//02 -> Periodo Inicial
						nHorIni				,;  //03 -> Hora Inicial
						dPerFim				,;	//04 -> Periodo Final
						nHorFim				,;  //05 -> Hora Final
						cFil				,;	//06 -> Filial
						cCracha				,;  //07 -> Cracha
						cAlias				;	//08 -> Alias para Carga das Marcacoes
					  )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis de Inicializacao Obrigatoria					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Local cSvAlias			:= Alias()

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis que serao inicializadas no Corpo da Funcao		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Local cSetOrdem
Local cFilCracha
Local cAliasQuery
Local cPrefixo
Local nLenAcess
Local nSerIni
Local nSerFim
Local nSerAcess
Local nSetOrder
Local nSvIndexOrd

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis de Inicializacao Obrigatoria					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Local aGetAcessFields	:= {}

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis que serao inicializadas no Corpo da Funcao		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Local cQryAcessFields
Local cIniData
Local cFimData
Local cQuery
Local lQueryOpened
Local nGetAcessFields
Local nX

Static aGetSPZFields
Static cQrySPZFields
Static nGetSPZFields

DEFAULT cFil				:= SPY->PY_FILIAL
DEFAULT cCracha				:= SPY->PY_CRACHA
DEFAULT dPerIni				:= Ctod("//")
DEFAULT dPerFim				:= Ctod("//")
DEFAULT cAlias				:= "SPZ"

If !Empty(dPerIni)
   nHorFim:=If(Empty(dPerFim),VAL(StrTran(Substr(time(),1,5),":",".")), nHorFim)
   dPerFim:=If(Empty(dPerFim), dDataBase, dPerFim)
Endif

Begin Sequence


	cAlias			:= Upper( AllTrim( cAlias ) )
	cAliasQuery 	:= cAlias
	cPrefixo		:= ( PrefixoCpo( cAliasQuery ) + "_" )
	aAcessos	  	:= {}

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Seleciona o Arquivo de Marca‡”es e Seta a Ordem corresponden³
	³ te:														  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	nSvIndexOrd := ( cAlias )->( IndexOrd() )
	cSetOrdem	:= ""

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Data  <=> _FILIAL+_MAT+_DTOS(_DATA)+STR(_HORA,5,2)    	  	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	cSetOrdem += cPrefixo+"FILIAL+"
	cSetOrdem += cPrefixo+"VISITA+"
	cSetOrdem += cPrefixo+"CRACHA+"
	cSetOrdem += cPrefixo+"NUMERO+"
	cSetOrdem += "DTOS("+cPrefixo+"DATA)+"
	cSetOrdem += "STR("+cPrefixo+"HORA,5,2)"

	nSetOrder	:= RetOrdem( cAlias , cSetOrdem )
	IF !( nSvIndexOrd == nSetOrder )
		( cAlias )->( dbSetOrder( nSetOrder ) )
	EndIF

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Cria array com os Acessos  do Periodo.					  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta Query para Carga das Marcacoes                         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF ( aGetSPZFields == NIL )
		aGetSPZFields	:= (cAlias)->( dbStruct() )
		nGetSPZFields	:= Len( aGetSPZFields )
		cQrySPZFields	:= ""
		For nX := 1 To nGetSPZFields
        		cQrySPZFields += aGetSPZFields[ nX , 01 ] + ", "
		Next nX
	EndIF
	aGetAcessFields	:= aClone( aGetSPZFields )
	cQryAcessFields	:= cQrySPZFields
	nGetAcessFields	:= nGetSPZFields

	cIniData	:= Dtos( dPerIni )
	cFimData	:= Dtos( dPerFim )
	cAliasQuery := ( "__Q" + cAliasQuery + "QRY" )
	cQuery := "SELECT "
	cQuery += cQryAcessFields
	cQuery += "R_E_C_N_O_ RECNO "
	cQuery += " FROM "
	cQuery += InitSqlName(cAlias)
	cQuery += " WHERE "
	cQuery += cPrefixo + "FILIAL='"+cFil+"'"
	cQuery += " AND "
	cQuery += cPrefixo + "CRACHA='"+cCracha+"'"
	cQuery += " AND "
	cQuery += cPrefixo + "DATA>='"+cIniData+"'"
	cQuery += " AND "
	cQuery += cPrefixo + "DATA<='"+cFimData+"'"
	cQuery += " AND "
	cQuery += "D_E_L_E_T_=' ' "
	cQuery += "ORDER BY " + SqlOrder( (cAlias)->( IndexKey() ) )
	cQuery := ChangeQuery(cQuery)
	IF ( lQueryOpened := MsOpenDbf(.T.,"TOPCONN",TcGenQry(NIL,NIL,cQuery),cAliasQuery,.F.,.T.) )
		For nX := 1 To nGetAcessFields
			IF ( aGetAcessFields[ nX , 02 ] <> "C" )
				TcSetField(cAliasQuery,aGetAcessFields[nX,01],aGetAcessFields[nX,02],aGetAcessFields[nX,03],aGetAcessFields[nX,04])
			EndIF
		Next nX
	Else
		cAliasQuery := cAlias
	EndIF

	cFilCracha := ( cFil + SPACE( LEN( (cAliasQuery)->&( cPrefixo+"VISITA" ) ) ) + cCracha )

	IF !( lQueryOpened )
		( cAliasQuery )->( dbseek( cFilCracha ) )
	EndIF

 	nSerIni:= __fDHtoNS(dPerIni, nHorIni)
    nSerFim:= __fDHtoNS(dPerFim, nHorFim)

	While ( cAliasQuery )->( !Eof() .and. &( cPrefixo+"FILIAL" ) + &( cPrefixo+"VISITA" ) + &( cPrefixo+"CRACHA" ) == cFilCracha )


		( cAliasQuery )->(	nSerAcess := __fDHtoNS( &( cPrefixo+"DATA" ),&( cPrefixo+"HORA" ) ))

		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Obtem todas as Marcacoes Posteriores a Data de Entrada para o³
		³ Cracha corrente se Nao foi dada a Baixa da Visita			   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		If Empty(nSerFim)
			If !(nSerAcess >=nSerIni)
				( cAliasQuery )->( dbSkip() )
				Loop
			Endif
		Else
			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Obtem todas as Marcacoes do Cracha Para o Periodo de Duracao ³
			³ da Visita													   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If (nSerAcess < nSerIni .OR. nSerAcess > nSerfim)
				( cAliasQuery )->( dbSkip() )
				Loop
			EndIF
		EndIF

		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega as Marcacoes 					                       ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		aAdd( aAcessos , Array( 8)  )
		nLenAcess := Len( aAcessos )
		( cAliasQuery )->( aAcessos[ nLenAcess , 1   ] := &(cPrefixo+"DATA"	)	)			//01 - Data
		( cAliasQuery )->( aAcessos[ nLenAcess , 2   ] := &(cPrefixo+"HORA"	)	)			//02 - Hora
		( cAliasQuery )->( aAcessos[ nLenAcess , 3	  ] := &(cPrefixo+"RELOGIO")	)			//03 - Relogio
		( cAliasQuery )->( aAcessos[ nLenAcess , 4	  ] := &(cPrefixo+"TPMARCA")	)			//04 - Tipo da Marcacao
		( cAliasQuery )->( aAcessos[ nLenAcess , 5   ] := &(cPrefixo+"FLAG"	)	)			//05 - Flag
		( cAliasQuery )->( aAcessos[ nLenAcess , 6	  ] := &(cPrefixo+"FUNCAO"	)	)			//06 - Funcao
		( cAliasQuery )->( aAcessos[ nLenAcess , 7	  ] := &(cPrefixo+"GIRO"	) 	)			//07 - Giro
		IF !( lQueryOpened )
			( cAliasQuery )->(aAcessos[ nLenAcess , 8 ] := Recno() 	)					//08 - Recno
		Else
			( cAliasQuery )->(aAcessos[ nLenAcess , 8] := RECNO		)					//08 - Recno
		EndIF

		( cAliasQuery )->( dbSkip() )
	End While

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Fecha a Query e Seta a Area do Arquivo Original              ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
   	IF ( ( lQueryOpened ) .and. ( Select( cAliasQuery ) > 0.00 ) )
   		( cAliasQuery )->( dbCloseArea() )
   		dbSelectArea( cAlias )
   	EndIF

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura a Ordem de Entrada                                  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	( cAlias )->( dbSetOrder( nSvIndexOrd ) )

End Sequence

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura a Area de Entrada                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
IF !Empty( cSvAlias )
	dbSelectArea( cSvAlias )
EndIF

Return (Nil)


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³fSitVisita³ Autor ³Mauricio MR		      ³ Data ³ 22/12/03 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Selecionar a Situacao do Visitante	    				    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³ fSitVisita() 											    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso	   ³ Generico 												    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/
Function fSitVisita(l1Elem,lTipoRet)

Local cTitulo :=""
Local MvPar
Local MvParDef:=""

Private aSit:={}
l1Elem := If (l1Elem = Nil , .F. , .T.)

DEFAULT lTipoRet := .T.

cAlias := Alias() 					 	  // Salva Alias Anterior

IF lTipoRet
	MvPar:=&(Alltrim(ReadVar()))		 // Carrega Nome da Variavel do Get em Questao
	mvRet:=Alltrim(ReadVar())			 // Iguala Nome da Variavel ao Nome variavel de Retorno
EndIF

dbSelectArea("SX5")
If dbSeek(cFilial+"00RO")
   cTitulo := Alltrim(Left(X5Descri(),35))
Endif
If dbSeek(cFilial+"RO")
	CursorWait()
		While !Eof() .And. SX5->X5_Tabela == "RO"
			Aadd(aSit,Left(SX5->X5_Chave,1) + " - " + Alltrim(X5Descri()))
			MvParDef+=Left(SX5->X5_Chave,1)
			dbSkip()
		Enddo
	CursorArrow()
Endif
IF lTipoRet
	IF f_Opcoes(@MvPar,cTitulo,aSit,MvParDef,12,49,l1Elem)  // Chama funcao f_Opcoes
		&MvRet := mvpar                                      // Devolve Resultado
	EndIF
EndIF

dbSelectArea(cAlias) 								 // Retorna Alias

Return( IF( lTipoRet , .T. , MvParDef ) )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fGetFoto  ³ Autor ³ Mauricio MR           ³ Data ³ 20/12/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Obtem o Caminho da Foto a ser Impressa					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fGetFoto(cPath, cBmpPict, nLin, nCol, cPathPict,aFotos)     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cPath 	- Caminho do \RootPath							  ³±±
±±³          ³ cBmpPict - Nome do BMP a ser Recuperado					  ³±±
±±³          ³ aFotos   - Array com as Fotos Extraidas					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ cPathPict - Caracter representado a Localizacao da Foto    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ETQINDIV                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fGetFoto(cPath, cBmpPict,aFotos)

Local cPathPict	:= ""
Local cIMGSource
Local nHandle


DEFAULT cPath   	:= Upper(GetTempPath()+cFileJpg)  //cPath	:= GetSrvProfString("Startpath","")
DEFAULT aFotos	:= {}

cBmpPict		:= ALLTRIM(cBmpPict)

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Carrega a Foto               								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cPathPict 	:= ( cPath + cBmpPict+".BMP" )

cIMGSource	:= LoadReposit( cBmpPict )
nHandle		:= fCreate(cPathPict)
fWrite(nHandle,cImgSource)
fClose(nHandle)

If !(nHandle < 0 )
	aAdd(aFotos,cPathPict)
Else //se nao achou com extensao .BMP, procura com .JPG
	cPathPict 	:= ( cPath + cBmpPict+".JPG" )
	cIMGSource	:= LoadReposit( cBmpPict )
	nHandle		:= fCreate(cPathPict)
	fWrite(nHandle,cImgSource)
	fClose(nHandle)

	If !(nHandle < 0 )
		aAdd(aFotos,cPathPict)
	EndIf
Endif

Return (cPathPict)


/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fIniPrtGraf   ³ Autor ³ RH - Mauricio MR      ³ Data ³ 24/01/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao generica iniciliazar impressao Grafica                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                                ³±±
±±³        01³ ExpO1 = Objeto grafico                                         ³±±
±±³        02³ ExpO2 = Titulo do Relatorio                                    ³±±
±±³        03³ ExpO3 = .T. -> Paisagem ; .F. - Retrato                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function  fIniPrtGraf(cTitulo, nColPg, nLinPg, bProcesso, lPreview, lJumpPage )

DEFAULT nLinPg		:= 3100
DEFAULT	nColPg		:= 800
DEFAULT lPreview	:= .F.
DEFAULT lJumpPage	:= .F.


Private  oCouNew07 :=TFont():New("Courier New",07,07,,.F.,,,,.T.,.F.)     //-- Modo Normal
Private  oCouNew07N:=TFont():New("Courier New",07,07,,.T.,,,,.T.,.F.) 	//-- Modo Negrito(5o parametro New() )
Private  oCouNew08 :=TFont():New("Courier New",08,08,,.F.,,,,.T.,.F.)
Private  oCouNew08N:=TFont():New("Courier New",08,08,,.T.,,,,.T.,.F.)
Private  oCouNew10 :=TFont():New("Courier New",10,10,,.F.,,,,.T.,.F.)
Private  oCouNew10N:=TFont():New("Courier New",10,10,,.T.,,,,.T.,.F.)
Private  oCouNew12 :=TFont():New("Courier New",12,12,,.F.,,,,.T.,.F.)
Private  oCouNew12N:=TFont():New("Courier New",12,12,,.T.,,,,.T.,.F.)
Private  oCouNew15 :=TFont():New("Courier New",15,15,,.F.,,,,.T.,.F.)
Private  oCouNew15N:=TFont():New("Courier New",15,15,,.T.,,,,.T.,.F.)
Private  oCouNew21 :=TFont():New("Courier New",21,21,,.F.,,,,.T.,.T.)
Private  oCouNew21N:=TFont():New("Courier New",21,21,,.T.,,,,.T.,.T.)
Private  oArial08  :=TFont():New("Arial"      ,08,08,,.F.,,,,.T.,.F.)
Private  oArial08N :=TFont():New("Arial"      ,08,08,,.T.,,,,.T.,.F.)
Private  oArial12  :=TFont():New("Arial"      ,12,12,,.F.,,,,.T.,.F.)
Private  oArial12N :=TFont():New("Arial"      ,12,12,,.T.,,,,.T.,.F.)
Private  oArial16  :=TFont():New("Arial"      ,16,16,,.F.,,,,.T.,.F.)
Private  oArial16N :=TFont():New("Arial"      ,16,16,,.T.,,,,.T.,.F.)

_SetOwnerPrvt("oPrint", )

//-- Objeto para Impressao grafica
oPrint 	:= TMSPrinter():New(cTitulo)

oPrint  :SetPortrait()		//Modo retrato
nLinMax	:= nLinPg
nColMax	:= nColPg

If lJumpPage
	oPrint  :StartPage() 			//Inicia uma nova pagina
Endif

If bProcesso !=NIL
	eval( bProcesso )
Endif

oPrint:EndPage() 	   			// Finaliza a pagina

If lPreview
   oPrint:Preview()  			// Visualiza antes de imprimir
Endif


Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fAdCpoSra     ³ Autor ³ RH - Igor Franzoi     ³ Data ³ 10/05/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para verificacao de outros campos existentes no SRA     ³±±
±±³			 ³ para insercao na query nos fontes do ponto                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto                                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fAdCpoSra(aCposSra)

aAdd( aCposSRA , "RA_PROCES" )

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ WSRHLegal    ³ Autor ³ RH - Inovacao         ³ Data ³ 27/06/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de empresas para  ³±±
±±³			 ³ WebServices TSA via JOB (rodar por ambiente)                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHLegal(oProcess,cFilDe,cFilAte)
Local aEmpresas		:= {}
Local aAreaSM0		:= SM0->(GetArea())
Local nRecSM0		:= SM0->(Recno())
Local nA			:= 0
Local cEmpresa		:= ""
Local cAliasSRA		:= GetNextAlias()
Local cWhere		:= ""
Local nTotReg		:= 0
Local nReg			:= 0
Local lRegua		:= .F.

DEFAULT oProcess	:= NIL
DEFAULT cFilDe		:= Space(FWGETTAMFILIAL)
DEFAULT cFilAte		:= Replicate("Z",FWGETTAMFILIAL)

Private oObjRep     := Nil

dbSelectArea("SM0")
dbSetOrder(1)
dbGoTop()
lRegua	:= ValType(oProcess)== "O"
If ( lRegua )
	nTotReg	:=	SM0->(LastRec())
	oProcess:SetRegua2(nTotReg)
EndIf

While SM0->(!Eof())

	If !(SM0->M0_CODFIL >= cFilDe .and. SM0->M0_CODFIL <= cFilAte)
		SM0->(dbSkip())
		Loop
	EndIf

	If cEmpresa <> SM0->M0_CODIGO+SM0->M0_CODFIL
		cEmpresa	:= SM0->M0_CODIGO+SM0->M0_CODFIL
		aAdd(aEmpresas,{SM0->M0_CODIGO,SM0->M0_CODFIL})
	Endif

	If ( lRegua )
		oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
	EndIf

	SM0->(dbSkip())

Enddo

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Analise envio das informacoes das empresas                   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
If Len(aEmpresas) > 0

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()

	For nA := 1 to Len(aEmpresas)
		If SM0-> ( dbSeek ( aEmpresas [ nA , 1] + aEmpresas [ nA , 2] ) )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Pessoa Juridica                  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			oObjREP:WSLegal( 1 )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Unidades                         ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			oObjREP:WSUnit( 1 )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Unidades de Lotacao              ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			oObjREP:WSAllocation( 1 )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Unidades de Lotacao              ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			oObjREP:WSLocation( 1 )
			DelClassIntf()

		Endif
	Next
	DelClassIntf()
Endif

dbSelectArea("SM0")
RestArea(aAreaSM0)
SM0->(dbGoTo(nRecSM0))

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WSRHSindicatoLegal³ Autor ³ RH - Inovacao     ³ Data ³ 27/06/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de empresas para  ³±±
±±³			 ³ WebServices TSA via JOB (rodar por Empresa)                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHSindicatoLegal(oProcess,cFilDe,cFilAte)
Local cAliasRCE		:= GetNextAlias()
Local cWhere		:= ""
Local nTotReg		:= 0
Local nReg			:= 0
Local lRegua		:= .F.

DEFAULT oProcess	:= NIL
DEFAULT cFilDe		:= Space(FWGETTAMFILIAL)
DEFAULT cFilAte		:= Replicate("Z",FWGETTAMFILIAL)

Private oObjRep     := Nil

lRegua	:= ValType(oProcess) == "O"

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Query de Registros para selecao dos Sindicatos 				      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cWhere		:= "% RCE.RCE_RHEXP = '      ' AND RCE.RCE_FILIAL >= '" + xFilial("RCE",cFilDe) + "' AND RCE.RCE_FILIAL <= '" + xFilial("RCE",cFilAte) + "'%"
BeginSql alias cAliasRCE
	SELECT COUNT(R_E_C_N_O_) AS TOTAL
	FROM %table:RCE% RCE
	WHERE %exp:cWhere%
	and RCE.D_E_L_E_T_  = ' '
EndSql

nTotReg	:= (cAliasRCE)->TOTAL
(cAliasRCE)->(dbCloseArea())

BeginSql alias cAliasRCE
	SELECT RCE_FILIAL,RCE_CODIGO,RCE_RHEXP
	FROM %table:RCE% RCE
	WHERE %exp:cWhere%
	and RCE.D_E_L_E_T_  = ' '
EndSql

If (cAliasRCE)->(!Eof())

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()

	If ( lRegua )
		oProcess:SetRegua2(nTotReg)
	EndIf

	While (cAliasRCE)->(!Eof())
		If RCE-> ( dbSeek ( (cAliasRCE)->RCE_FILIAL + (cAliasRCE)->RCE_CODIGO ) )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Sindicato                        ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If oObjREP:WSSindicatoLegal( 1 )
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava o ontrole de exportacao para o TSA - Sindicato         ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				oObjRep:WSUpdRHExp( "RCE" )
			Endif
			DelClassIntf()

		Endif
		If ( lRegua )
			oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
		EndIf

		(cAliasRCE)->(dbSkip())

	Enddo
	DelClassIntf()
Endif

(cAliasRCE)->(DbCloseArea())

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ WSRHShifWork     ³ Autor ³ RH - Inovacao     ³ Data ³ 27/06/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de Turno de       ³±±
±±³			 ³ trabalho WebServices TSA via JOB (rodar por Empresa)           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHShiftWork(oProcess,cFilDe,cFilAte,lSchedule)
Local cAliasSR6 	:= GetNextAlias()
Local lTsaInt		:= SUPERGETMV("MV_TSAINT",,.T.)
Local cWhere		:= ""
Local nTotReg		:= 0
Local nReg			:= 0
Local lRegua		:= .F.
Local lMsBlQl		:= .F.
Local cFilSR6SPJ	:= "%" + FWJoinFilial("SR6","SPJ") + "%"
Local cFilSR6SRA	:= "%" + FWJoinFilial("SR6","SRA") + "%"
Local cFilSR6SPF	:= "%" + FWJoinFilial("SR6","SPF") + "%"
Local cServTSA		:= GetMv("MV_TSASERV",.F.,"localhost:8080")
Local cDataAtual	:= DtoS(Date())
Local oRvmTrn
Local oWSSrvCnt
Local aServices	:= {"ShiftWork",;
					"WSShiftWorkIntegrationServiceBeanService",;
					"ShiftWorkIntegrationServiceBeanService_ShiftWorkDTO",;
					"removeAll",;
					"" }

DEFAULT oProcess	:= NIL
DEFAULT cFilDe		:= Space(FWGETTAMFILIAL)
DEFAULT cFilAte		:= Replicate("Z",FWGETTAMFILIAL)
DEFAULT lSchedule	:= .F.

lRegua	:= ValType(oProcess) == "O"

Private oObjRep     := Nil

dbSelectArea("SR6")
lMsBlQl	:=	FieldPos('R6_MSBLQL') > 0

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Query de Registros para selecao dos Turnos de Trabalho		      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

If lTsaInt
	cWhere		:= "% SR6.R6_RHEXP = '      ' AND SR6.R6_FILIAL >= '" + xFilial("SR6",cFilDe) + "' AND SR6.R6_FILIAL <= '" + xFilial("SR6",cFilAte) + "'%"

	BeginSql alias cAliasSR6
		SELECT COUNT(R_E_C_N_O_) AS TOTAL
		FROM %table:SR6% SR6
		WHERE %exp:cWhere%
		and SR6.D_E_L_E_T_  = ' '
	EndSql

	nTotReg	:= (cAliasSR6)->TOTAL
	(cAliasSR6)->(dbCloseArea())

	BeginSql alias cAliasSR6
		SELECT R_E_C_N_O_ AS RECNO
		FROM %table:SR6% SR6
		WHERE %exp:cWhere%
		and SR6.D_E_L_E_T_  = ' '
	EndSql
Else
	cWhere		:= "% (SRA.RA_DEMISSA = '        ' OR SRA.RA_DEMISSA > '" + DtoS(dDatabase) + "') AND SR6.R6_FILIAL >= '" + xFilial("SR6",cFilDe) + "' AND SR6.R6_FILIAL <= '" + xFilial("SR6",cFilAte) + "'%"

	BeginSql alias cAliasSR6
		SELECT COUNT(RECNO) AS TOTAL FROM (
			SELECT SR6.R_E_C_N_O_ AS RECNO
			FROM %table:SR6% SR6
			INNER JOIN %table:SPJ% SPJ ON %exp:cFilSR6SPJ% AND SR6.R6_TURNO = SPJ.PJ_TURNO
			INNER JOIN %table:SRA% SRA ON %exp:cFilSR6SRA% AND SR6.R6_TURNO = SRA.RA_TNOTRAB
			WHERE %exp:cWhere%
			  AND SR6.%notDel%
			  AND SPJ.%notDel%
			  AND SRA.%notDel%
			GROUP BY SR6.R_E_C_N_O_
			UNION
			SELECT SR6.R_E_C_N_O_ AS RECNO
			FROM %table:SR6% SR6
			INNER JOIN %table:SPF% SPF ON %exp:cFilSR6SPF% AND SR6.R6_TURNO = SPF.PF_TURNOPA
			WHERE SPF.PF_DATA >= %exp:cDataAtual%
			  AND SR6.%notDel%
			  AND SPF.%notDel%	
		) SR6
	EndSql

	nTotReg	:= (cAliasSR6)->TOTAL
	(cAliasSR6)->(dbCloseArea())

	BeginSql alias cAliasSR6
		SELECT SR6.R_E_C_N_O_ AS RECNO
		FROM %table:SR6% SR6
		INNER JOIN %table:SPJ% SPJ ON %exp:cFilSR6SPJ% AND SR6.R6_TURNO = SPJ.PJ_TURNO
		INNER JOIN %table:SRA% SRA ON %exp:cFilSR6SRA% AND SR6.R6_TURNO = SRA.RA_TNOTRAB
		WHERE %exp:cWhere%
			AND SR6.%notDel%
			AND SPJ.%notDel%
			AND SRA.%notDel%
		UNION
		SELECT SR6.R_E_C_N_O_ AS RECNO
		FROM %table:SR6% SR6
		INNER JOIN %table:SPF% SPF ON %exp:cFilSR6SPF% AND SR6.R6_TURNO = SPF.PF_TURNOPA
		WHERE SPF.PF_DATA >= %exp:cDataAtual%
			AND SR6.%notDel%
			AND SPF.%notDel%	
		GROUP BY SR6.R_E_C_N_O_
	EndSql
EndIf

If !lTsaInt .And. nTotReg > 0 .And. IsInCallStack("PONM430")
	oObjREP		:= PTSREPOBJ():New()
	

	oWSSrvCnt	:= WSShiftWorkIntegrationServiceBeanService():New()
	oRvmTrn		:= ShiftWorkIntegrationServiceBeanService_ShiftWorkRMV():New()
	cServTSA		+= If(Right(cServTSA,1) <> "/","/","")
	oWSSrvCnt:_URL 	:= cServTSA+"ShiftWorkIntegrationServiceBean"
	aServices[5]	:= cServTSA+"ShiftWorkIntegrationServiceBean"
	oRvmTrn:lRemoveAll 	:= .T.
	oRvmTrn:cIntDate 	:= FWTimeStamp(5)

	WsdlSaveXml (oObjREP:WsdlSave) // utilizado para gerar XML de envio e recebimento do client(somente para debug)

	oWSSrvCnt:oWSShiftWorkRMV := oRvmTrn
	oWSSrvCnt:removeAll(oWSSrvCnt:oWSShiftWorkRmv)

EndIf

If (cAliasSR6)->(!Eof())

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()

	If lRegua .And. !lSchedule
		oProcess:SetRegua2(nTotReg)
	EndIf

	While (cAliasSR6)->(!Eof())

		SR6->( dbGoTo ( (cAliasSR6)->RECNO ) )

		If ( !(lMsBlQl) .OR. ( (lMsBlQl) .AND. !(SR6->R6_MSBLQL = '1') )  )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Turno de Trabalho                ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If oObjREP:WSShiftWork( 1 )

				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava o ontrole de exportacao para o TSA - Usuario           ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				oObjRep:WSUpdRHExp( "SR6" )

				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Executa o WebServices TSA - Escalas                          ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				If lTsaInt
					oObjREP:WSSCale( 1 )
				EndIf
	        Endif
			If !lSchedule
	        	DelClassIntf()
			EndIf
		EndIf
		If lRegua .And. !lSchedule
			oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
		EndIf

		(cAliasSR6)->(dbSkip())

	Enddo
	If !lSchedule
		DelClassIntf()
	EndIf
Endif

(cAliasSR6)->(DbCloseArea())

Return


/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ WSRHUser         ³ Autor ³ RH - Inovacao     ³ Data ³ 27/06/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de usuarios para  ³±±
±±³			 ³ WebServices TSA via JOB (rodar por Empresa)-funcionarios       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHUser(oProcess,cFilDe,cFilAte)
Local cAliasSRA 	:= GetNextAlias()
Local cWhere		:= ""
Local cAuxFilial	:= ""
Local nRecnoSM0		:= SM0->(Recno())
Local nDiasIni	 	:= GetMv("MV_TSANDIA",.F.,30)
Local cDataIni		:= DTOS((Date()-nDiasIni))
Local nTotReg		:= 0
Local nReg			:= 0
Local lRegua		:= .F.

DEFAULT oProcess	:= NIL
DEFAULT cFilDe		:= Space(FWGETTAMFILIAL)
DEFAULT cFilAte		:= Replicate("Z",FWGETTAMFILIAL)

Private oObjRep     := Nil

lRegua	:= ValType(oProcess)== "O"
dbSelectArea("SM0")
SM0->(dbSetOrder(1))

dbSelectArea("SRA")
SRA->(dbSetOrder(1))

dbSelectArea("SR6")
SR6->(dbSetOrder(1))

dbSelectArea("SRJ")
SRJ->(dbSetOrder(1))

dbSelectArea("CTT")
CTT->(dbSetOrder(1))

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Query de Registros para selecao dos funcionarios 				      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cWhere		:= "% SRA.RA_RHEXP = '      ' AND ( (SRA.RA_SITFOLH NOT IN ('D','T')) OR (SRA.RA_DEMISSA >= '" + cDataIni + "' )) AND SRA.RA_FILIAL >= '" + xFilial("SRA",cFilDe) + "' AND SRA.RA_FILIAL <= '" + xFilial("SRA",cFilAte) + "'%"

BeginSql alias cAliasSRA
	SELECT COUNT(R_E_C_N_O_) AS TOTAL
	FROM %table:SRA% SRA
	WHERE %exp:cWhere%
	AND SRA.D_E_L_E_T_  = ' '
EndSql

nTotReg	:= (cAliasSRA)->TOTAL
(cAliasSRA)->(dbCloseArea())

BeginSql alias cAliasSRA
	SELECT RA_FILIAL,RA_MAT,RA_RHEXP
	FROM %table:SRA% SRA
	WHERE %exp:cWhere%
	AND SRA.D_E_L_E_T_  = ' '
	ORDER BY RA_FILIAL,RA_MAT
EndSql

If ( lRegua )
	oProcess:SetRegua2(nTotReg)
EndIf

If (cAliasSRA)->(!Eof())

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()

	While (cAliasSRA)->(!Eof())
		If SRA-> ( dbSeek ( (cAliasSRA)->RA_FILIAL + (cAliasSRA)->RA_MAT ) )

			// Posiciona na empresa da filial correspondente ao funcionario
			If cAuxFilial <>  SRA->RA_FILIAL
				If !SM0->(dbSeek( cEmpAnt + AllTrim(SRA->RA_FILIAL) ))
					(cAliasSRA)->(dbSkip())
					Loop
				Endif
				cAuxFilial := SRA->RA_FILIAL
			Endif

			If Empty( SRA->RA_CODUNIC )
				If SRA->( RecLock( "SRA" , .F. ) )
					SRA->RA_CODUNIC := fRACodUnic()
					SRA->( MsUnLock() )
				EndIf
			EndIf

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Pessoa Fisica e Usuarios         ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If oObjREP:WSNatural( 1 )
				If oObjREP:WSUser( 1 )

					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Grava o ontrole de exportacao para o TSA - Usuario           ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
					oObjRep:WSUpdRHExp( "SRA" )
				EndIf

			Endif
			DelClassIntf()

		Endif
		If ( lRegua )
			oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
		EndIf

		(cAliasSRA)->(dbSkip())
	Enddo
	DelClassIntf()
Endif

(cAliasSRA)->(DbCloseArea())
SM0->(dbGoTo(nRecnoSM0))

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o 	 ³WSRHDayNotWorked  ³ Autor ³RH - Inovacao      ³ Data ³ 05/07/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de Feriados para  ³±±
±±³			 ³ WebServices TSA via JOB (rodar por empresa)-Feriados           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHDayNotWorked(oProcess,cFilDe,cFilAte)
Local cAliasSP3 	:= GetNextAlias()
Local cWhere		:= ""
Local cDateNow		:= DTOS(Date())
Local nTotReg		:= 0
Local nReg			:= 0
Local lRegua		:= .F.
Local aAreaSPJ		:= {}
Local lGrava		:= .F.
Local cAliasSR6		:= 'SR6'
Local lMsBlQl		:=	(cAliasSR6)->(FieldPos( "R6_MSBLQL" )) > 0

DEFAULT oProcess	:= NIL
DEFAULT cFilDe		:= Space(FWGETTAMFILIAL)
DEFAULT cFilAte		:= Replicate("Z",FWGETTAMFILIAL)

lRegua	:= ValType(oProcess) == "O"
Private oObjRep     := Nil

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Query de Registros para selecao dos feriados    				      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cWhere		:= "% SP3.P3_RHEXP = '      ' AND ( ( SP3.P3_DATA >= '" + cDateNow + "' AND SP3.P3_FIXO = 'N') OR (SP3.P3_FIXO = 'S' AND SP3.P3_MESDIA <> '    ') )  AND SP3.P3_FILIAL >= '" + xFilial("SP3",cFilDe) + "' AND SP3.P3_FILIAL <= '" + xFilial("SP3",cFilAte) + "'%"

BeginSql alias cAliasSP3
	SELECT COUNT(R_E_C_N_O_) AS TOTAL
	FROM %table:SP3% SP3
	WHERE %exp:cWhere%
	and SP3.D_E_L_E_T_  = ' '
EndSql

nTotReg	:= (cAliasSP3)->TOTAL
(cAliasSP3)->(dbCloseArea())

BeginSql alias cAliasSP3
	SELECT P3_FILIAL,P3_DATA
	FROM %table:SP3% SP3
	WHERE %exp:cWhere%
	and SP3.D_E_L_E_T_  = ' '
EndSql

If (cAliasSP3)->(!Eof())

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()
	If ( lRegua )
		oProcess:SetRegua2(nTotReg)
	EndIf

	While (cAliasSP3)->(!Eof())
		If SP3-> ( dbSeek ( (cAliasSP3)->P3_FILIAL + (cAliasSP3)->P3_DATA ) )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Dias nao trabalhados             ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If oObjREP:WSDayNotWorked( 1 )

				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava o ontrole de exportacao para o TSA - Dia nao trabalhado ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				oObjRep:WSUpdRHExp( "SP3" )


			Endif
			DelClassIntf()

		Endif
		If ( lRegua )
			oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
		EndIf

		(cAliasSP3)->(dbSkip())

	Enddo
	DelClassIntf()
Endif

(cAliasSP3)->(DbCloseArea())

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o 	 ³WSRHEDayNotWorked ³ Autor ³RH - Inovacao      ³ Data ³ 05/07/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de Excecoes para  ³±±
±±³			 ³ WebServices TSA via JOB (rodar por empresa)-Excecoes p/Periodo ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHEDayNotWorked(oProcess,cFilDe,cFilAte)
Local cAliasSP2 	:= GetNextAlias()
Local cWhere		:= ""
Local cDateNow		:= DTOS(Date())
Local nTotReg		:= 0
Local nReg			:= 0
Local lRegua		:= .F.

DEFAULT oProcess	:= NIL
DEFAULT cFilDe		:= Space(FWGETTAMFILIAL)
DEFAULT cFilAte		:= Replicate("Z",FWGETTAMFILIAL)

lRegua	:= ValType(oProcess) == "O"
Private oObjRep     := Nil

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Query de Registros para selecao dos feriados    				      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cWhere		:= "% SP2.P2_RHEXP = '      ' "
cWhere		+= "AND ( SP2.P2_DATA >= '" + cDateNow + "' OR SP2.P2_DATAATE = '" + SPACE(8) + "' OR (SP2.P2_DATAATE <> '" + SPACE(8) + "' AND SP2.P2_DATAATE >= '" + cDateNow + "'))"
cWhere		+= "AND SP2.P2_FILIAL >= '" + xFilial("SP2",cFilDe) + "' AND SP2.P2_FILIAL <= '" + xFilial("SP2",cFilAte) + "'"
cWhere		+= " %"

BeginSql alias cAliasSP2
	SELECT COUNT(R_E_C_N_O_) AS TOTAL
	FROM %table:SP2% SP2
	WHERE %exp:cWhere%
	and SP2.D_E_L_E_T_  = ' '
EndSql

nTotReg	:= (cAliasSP2)->TOTAL
(cAliasSP2)->(dbCloseArea())

BeginSql alias cAliasSP2
	SELECT P2_FILIAL,P2_DATA,P2_DATAATE,P2_TRABA,P2_MAT
	FROM %table:SP2% SP2
	WHERE %exp:cWhere%
	and SP2.D_E_L_E_T_  = ' '
EndSql

If (cAliasSP2)->(!Eof())

	If ( lRegua )
		oProcess:SetRegua2(nTotReg)
	EndIf

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()

	While (cAliasSP2)->(!Eof())
		If SP2-> ( dbSeek ( (cAliasSP2)->P2_FILIAL + (cAliasSP2)->P2_DATA ) )

			IF Empty((cAliasSP2)->P2_MAT) .And. (cAliasSP2)->P2_TRABA == 'N'
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Executa o WebServices TSA - Dias nao trabalhados             ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				If oObjREP:WSDayNotWorked( 4 )

					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Grava o ontrole de exportacao para o TSA - Excecoes           ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
					oObjRep:WSUpdRHExp( "SP2" )

				Endif
			Endif

			IF !Empty((cAliasSP2)->P2_MAT)
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Executa o WebServices TSA - Excecoes diversas                ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				If oObjREP:WSException( 1 )

					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Grava o ontrole de exportacao para o TSA - Excecoes           ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
					oObjRep:WSUpdRHExp( "SP2" )

				Endif
			Endif
			DelClassIntf()

		Endif
		If ( lRegua )
			oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
		EndIf

		(cAliasSP2)->(dbSkip())
	Enddo
	DelClassIntf()
Endif

(cAliasSP2)->(DbCloseArea())

Return


/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o 	 ³WSRHPositionLevel ³ Autor ³RH - Inovacao      ³ Data ³ 06/07/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de Funcoes  para  ³±±
±±³			 ³ WebServices TSA via JOB (rodar por empresa)                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHPositionLevel(oProcess,cFilDe,cFilAte)
Local cAliasSRJ 	:= GetNextAlias()
Local cWhere		:= ""
Local nTotReg		:= 0
Local nReg			:= 0
Local lRegua		:= .F.

DEFAULT oProcess	:= NIL
DEFAULT cFilDe		:= Space(FWGETTAMFILIAL)
DEFAULT cFilAte		:= Replicate("Z",FWGETTAMFILIAL)

lRegua	:= ValType(oProcess) == "O"

Private oObjRep     := Nil

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Query de Registros para selecao das funcoes                         ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

cWhere		:= "% SRJ.RJ_RHEXP = '      ' AND SRJ.RJ_FILIAL >= '" + xFilial("SRJ",cFilDe) + "' AND SRJ.RJ_FILIAL <= '" + xFilial("SRJ",cFilAte) + "' %"
BeginSql alias cAliasSRJ
	SELECT COUNT(R_E_C_N_O_) AS TOTAL
	FROM %table:SRJ% SRJ
	WHERE %exp:cWhere%
	and SRJ.D_E_L_E_T_  = ' '
EndSql

nTotReg	:= (cAliasSRJ)->TOTAL
If ( lRegua )
	oProcess:SetRegua2(nTotReg)
EndIf

(cAliasSRJ)->(dbCloseArea())

BeginSql alias cAliasSRJ
	SELECT RJ_FILIAL,RJ_FUNCAO
	FROM %table:SRJ% SRJ
	WHERE %exp:cWhere%
	and SRJ.D_E_L_E_T_  = ' '
EndSql

If (cAliasSRJ)->(!Eof())

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()

	While (cAliasSRJ)->(!Eof())
		If SRJ-> ( dbSeek ( (cAliasSRJ)->RJ_FILIAL + (cAliasSRJ)->RJ_FUNCAO ) )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Cargos/Funcoes                   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If oObjREP:WSPositionLevel( 1 )

				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava o ontrole de exportacao para o TSA - Funcoes            ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				oObjRep:WSUpdRHExp( "SRJ" )

			Endif
			DelClassIntf()

		Endif
		If ( lRegua )
			oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
		EndIf

		(cAliasSRJ)->(dbSkip())

	Enddo
	DelClassIntf()
Endif

(cAliasSRJ)->(DbCloseArea())

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o 	 ³ WSRHCostCenter   ³ Autor ³RH - Inovacao      ³ Data ³ 07/07/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de Centro de Custo³±±
±±³			 ³ para WebServices TSA via JOB (rodar por empresa)               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHCostCenter(oProcess,cFilDe,cFilAte)
Local cAliasCTT := GetNextAlias()
Local cWhere	:= ""
Local nTotReg	:= 0
Local nReg		:= 0
Local lRegua	:= .F.

DEFAULT oProcess	:= NIL
DEFAULT cFilDe		:= Space(FWGETTAMFILIAL)
DEFAULT cFilAte		:= Replicate("Z",FWGETTAMFILIAL)

lRegra	:= ValType(oProcess) == 'O'
Private oObjRep := Nil

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Query de Registros para selecao das funcoes                         ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cWhere		:= "% CTT.CTT_RHEXP = '      ' AND CTT.CTT_FILIAL >= '" + xFilial("CTT",cFilDe) + "' AND CTT.CTT_FILIAL <= '" + xFilial("CTT",cFilAte) + "' %"

BeginSql alias cAliasCTT
	SELECT COUNT(R_E_C_N_O_) AS TOTAL
	FROM %table:CTT% CTT
	WHERE %exp:cWhere%
	and CTT.D_E_L_E_T_  = ' '
EndSql

nTotReg	:= (cAliasCTT)->TOTAL
(cAliasCTT)->(dbCloseArea())

BeginSql alias cAliasCTT
	SELECT CTT_FILIAL,CTT_CUSTO
	FROM %table:CTT% CTT
	WHERE %exp:cWhere%
	and CTT.D_E_L_E_T_  = ' '
EndSql

If ( lRegua )
	oProcess:SetRegua2(nTotReg)
EndIf

If (cAliasCTT)->(!Eof())

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()

	While (cAliasCTT)->(!Eof())
		If CTT-> ( dbSeek ( (cAliasCTT)->CTT_FILIAL + (cAliasCTT)->CTT_CUSTO ) )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Centro de Custo                  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If oObjREP:WSCostCenter( 1 )

				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava o ontrole de exportacao para o TSA - Centro de Custo    ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				oObjRep:WSUpdRHExp( "CTT" )


			Endif
			DelClassIntf()

		Endif

		If ( lRegua )
			oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
		EndIf

		(cAliasCTT)->(dbSkip())

	Enddo
	DelClassIntf()
Endif

(cAliasCTT)->(DbCloseArea())

Return

/*/{Protheus.doc} WSRHAbsenceReason
Funcao para envio de informacoes do cadastro de Situacao de
Afastamento para WebServices TSA via JOB (rodar por empresa)
@author RH - Inovacao
@since 12/07/2011
@version 2.0
@History 13/07/2016, Cícero Alves, Alterada a tabela de busca para RCM, antes utilizava SX5
/*/
Function WSRHAbsenceReason(oProcess, cFilDe, cFilAte)

	Local cAliasRCM 	:= GetNextAlias()
	Local cWhere		:= ""
	Local nTotReg		:= 0
	Local nReg			:= 0
	Local lRegua		:= .F.

	DEFAULT oProcess	:= NIL
	DEFAULT cFilDe		:= Space(FWGETTAMFILIAL)
	DEFAULT cFilAte		:= Replicate("Z",FWGETTAMFILIAL)

	lRegra	:= ValType(oProcess) == 'O'
	Private oObjRep := Nil

	cWhere		:= "% RCM.RCM_RHEXP = '      ' AND RCM.RCM_FILIAL >= '" + xFilial("RCM", cFilDe) + "' AND RCM.RCM_FILIAL <= '" + xFilial("RCM", cFilAte) + "' %"

	BeginSql alias cAliasRCM
		SELECT COUNT(R_E_C_N_O_) AS TOTAL
		FROM %table:RCM% RCM
		WHERE %exp:cWhere%
		and RCM.D_E_L_E_T_  = ' '
	EndSql

	nTotReg	:= (cAliasRCM)->TOTAL
	(cAliasRCM)->(dbCloseArea())

	BeginSql alias cAliasRCM
		SELECT RCM.R_E_C_N_O_ AS RECNO
		FROM %table:RCM% RCM
		WHERE %exp:cWhere%
		and RCM.D_E_L_E_T_  = ' '
	EndSql

	If ( lRegua )
		oProcess:SetRegua2(nTotReg)
	EndIf

	If (cAliasRCM)->(!Eof())

		//Inicializa o ambiente dos metodos do WebService TSA
		oObjREP := PTSREPOBJ():New()

		While (cAliasRCM)->(!Eof())

			RCM-> ( dbGoTo( (cAliasRCM)->RECNO ) )

				//Executa o WebServices TSA -
				If oObjREP:WSAbsenceReason( 1 )

					oObjREP:WSAbsenceReason( 4, RCM->RCM_FILIAL )
					oObjRep:WSUpdRHExp( "RCM" )

				Endif
				DelClassIntf()

			If ( lRegua )
				oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
			EndIf

			(cAliasRCM)->(dbSkip())

		Enddo

		DelClassIntf()

	Endif

	(cAliasRCM)->(DbCloseArea())

Return



/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ WSRHUserAbsence  ³ Autor ³ RH - Inovacao     ³ Data ³ 12/07/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de afastamentos   ³±±
±±³			 ³ para WebServices TSA via JOB (rodar por Empresa)               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHUserAbsence(oProcess,cFilDe,cFilAte)
Local cAliasSR8 	:= GetNextAlias()
Local cWhere		:= ""
Local cDateNow		:= DTOS(Date())
Local lRegua		:= .F.
Local nTotReg		:= 0
Local nReg			:= 0

DEFAULT oProcess	:= NIL
DEFAULT cFilDe		:= Space(FWGETTAMFILIAL)
DEFAULT cFilAte		:= Replicate("Z",FWGETTAMFILIAL)

Private oObjRep     := Nil

lRegua	:= ValType(oProcess) == "O"
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Query de Registros para selecao dos funcionarios 				      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cWhere		:= "% SR8.R8_RHEXP = '      ' AND SR8.R8_TIPO <> 'F' "
cWhere		+= "AND ( SR8.R8_DATAINI >= '" + cDateNow + "' OR SR8.R8_DATAFIM = '" + SPACE(8) + "' OR (SR8.R8_DATAFIM <> '" + SPACE(8) + "' AND SR8.R8_DATAFIM >= '" + cDateNow + "'))"
cWhere		+= "AND SR8.R8_FILIAL >= '" + xFilial("SR8",cFilDe) + "' AND SR8.R8_FILIAL <= '" + xFilial("SR8",cFilAte) + "'"
cWhere		+= " %"

BeginSql alias cAliasSR8
	SELECT COUNT(R_E_C_N_O_) AS TOTAL
	FROM %table:SR8% SR8
	WHERE %exp:cWhere%
	and SR8.D_E_L_E_T_  = ' '
EndSql

nTotReg	:= (cAliasSR8)->TOTAL
(cAliasSR8)->(dbCloseArea())

BeginSql alias cAliasSR8
	SELECT R_E_C_N_O_ AS RECNO, SR8.R8_DATAINI,SR8.R8_DATAFIM	// Utilizado o recno devido nao existir uma chave de indice com todos os campos necessarios
	FROM %table:SR8% SR8
	WHERE %exp:cWhere%
	and SR8.D_E_L_E_T_  = ' '
EndSql

If (cAliasSR8)->(!Eof())
	If ( lRegua )
		oProcess:SetRegua2(nTotReg)
	EndIf

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()

	dbSelectArea("RCM")

	While (cAliasSR8)->( !Eof() )
		SR8-> ( dbGoTo ( (cAliasSR8)->RECNO ) )
		If RCM->( dbSeek( xFilial("RCM") + SR8->R8_TIPOAFA ) )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Posiciona no cadastro de Funcionarios                        ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			SRA->( dbSeek ( SR8->R8_FILIAL + SR8->R8_MAT ) )
			If !( SRA->RA_SITFOLH $ 'D|T' )

				/*/ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Executa o WebServices TSA - Pessoa Fisica e Usuarios         ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				If oObjREP:WSAbsenceReason( 5 , , SR8->R8_DATAINI, SR8->R8_DATAFIM )
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Grava o ontrole de exportacao para o TSA - Usuario           ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
					oObjRep:WSUpdRHExp( "SR8" )

				Endif
				DelClassIntf()

			EndIf

		Endif
		If ( lRegua )
			oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
		EndIf

		(cAliasSR8)->(dbSkip())
	Enddo
	DelClassIntf()
Endif

(cAliasSR8)->(DbCloseArea())

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ WSRHUser         ³ Autor ³ RH - Inovacao     ³ Data ³ 27/06/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de usuarios para  ³±±
±±³			 ³ WebServices TSA via JOB (rodar por Empresa)-funcionarios       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHUserVacationAbsence(oProcess,cFilDe,cFilAte)
Local cAliasSRH 	:= GetNextAlias()
Local cWhere		:= ""
Local cDateNow		:= DTOS(Date())
Local nTotReg		:= 0
Local nReg			:= 0
Local lRegua		:= .F.
Local aAreaSRA		:= {}

DEFAULT oProcess	:= NIL
DEFAULT cFilDe		:= Space(FWGETTAMFILIAL)
DEFAULT cFilAte		:= Replicate("Z",FWGETTAMFILIAL)

lRegua	:= ValType(oProcess) == 'O'

Private oObjRep     := Nil

dbSelectArea("SRH")
SRH->(dbSetOrder(1))

dbSelectArea("SRA")
SRA->(dbSetOrder(1))

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Query de Registros para selecao dos funcionarios 				      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cWhere		:= "% SRH.RH_RHEXP = '      ' "
cWhere		+= "AND ( SRH.RH_DATAINI >= '" + cDateNow + "' OR SRH.RH_DATAFIM >= '" + cDateNow + "')"
cWhere		+= "AND SRH.RH_FILIAL >= '" + xFilial("SRH",cFilDe) + "' AND SRH.RH_FILIAL <= '" + xFilial("SRH",cFilAte) + "'"
cWhere		+= " %"

BeginSql alias cAliasSRH
	SELECT COUNT(R_E_C_N_O_) AS TOTAL
	FROM %table:SRH% SRH
	WHERE %exp:cWhere%
	and SRH.D_E_L_E_T_  = ' '
EndSql

nTotReg	:= (cAliasSRH)->TOTAL
(cAliasSRH)->(dbCloseArea())

BeginSql alias cAliasSRH
	SELECT R_E_C_N_O_ AS RECNO	// Utilizado o recno devido nao existir uma chave de indice com todos os campos necessarios
	FROM %table:SRH% SRH
	WHERE %exp:cWhere%
	and SRH.D_E_L_E_T_  = ' '
EndSql

If (cAliasSRH)->(!Eof())
	If ( lRegua )
		oProcess:SetRegua2(nTotReg)
	EndIf

	DbSelectArea("RCM")
	RCM->(DbSetOrder(3))
	RCM->(DbSeek(FwxFilial("RCM") +  PosSrv("0072",xFilial("SRA"),"RV_COD",2) ))

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()
	aAreaSRA	:= SRA->(GetArea())

	While (cAliasSRH)->(!Eof())
		If ( lRegua )
			oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
		EndIf

		SRH-> ( dbGoTo ( (cAliasSRH)->RECNO ) )

		SRA->(dbSetOrder(1))

		If ( SRA->(dbSeek( SRH->RH_FILIAL + SRH->RH_MAT)) ) .AND. !( SRA->RA_SITFOLH $ 'D|T' )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Pessoa Fisica e Usuarios         ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If oObjREP:WSAbsenceReason( 7 , , SRH->RH_DATAINI , SRH->RH_DATAFIM)

				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava o ontrole de exportacao para o TSA - Usuario           ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				oObjRep:WSUpdRHExp( "SRH" )


			Endif
			DelClassIntf()

		Endif


		(cAliasSRH)->(dbSkip())
	Enddo
	DelClassIntf()
	RestArea(aAreaSRA)
Endif

(cAliasSRH)->(DbCloseArea())

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ WSRHDUser        ³ Autor ³ RH - Inovacao     ³ Data ³ 22/07/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de usuarios para  ³±±
±±³			 ³ WebServices TSA via JOB (rodar por Empresa)-Cab.Rescisao       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHDUser(oProcess,cFilDe,cFilAte)
Local cAliasSRG 	:= GetNextAlias()
Local cWhere		:= ""
Local nDiasIni	 	:= GetMv("MV_TSANDIA",.F.,30)
Local cDataIni		:= DTOS((Date()-nDiasIni))
Local nTotReg		:= 0
Local nReg			:= 0
Local lRegua		:= .F.

DEFAULT oProcess	:= NIL
DEFAULT cFilDe		:= Space(FWGETTAMFILIAL)
DEFAULT cFilAte		:= Replicate("Z",FWGETTAMFILIAL)

lRegua	:= ValType(oProcess) == 'O'

Private oObjRep     := Nil

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Query de Registros para selecao dos funcionarios 				      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cWhere		:= "% SRG.RG_RHEXP = '      ' AND SRG.RG_EFETIVA = 'S' AND SRG.RG_DATADEM >= '" + cDataIni + "' AND SRG.RG_FILIAL >= '" + xFilial("SRG",cFilDe) + "' AND SRG.RG_FILIAL <= '" + xFilial("SRG",cFilAte) + "' %"
BeginSql alias cAliasSRG
	SELECT COUNT(R_E_C_N_O_) AS TOTAL
	FROM %table:SRG% SRG
	WHERE %exp:cWhere%
	and SRG.D_E_L_E_T_  = ' '
EndSql

nTotReg	:= (cAliasSRG)->TOTAL
(cAliasSRG)->(dbCloseArea())

BeginSql alias cAliasSRG
	SELECT R_E_C_N_O_ AS RECNO
	FROM %table:SRG% SRG
	WHERE %exp:cWhere%
	and SRG.D_E_L_E_T_  = ' '
EndSql
If ( lRegua )
	oProcess:SetRegua2(nTotReg)
EndIf

If (cAliasSRG)->(!Eof())

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()

	While (cAliasSRG)->(!Eof())

		SRG->( dbGoTo( (cAliasSRG)->RECNO ) )

		If SRA-> ( dbSeek ( SRG->RG_FILIAL + SRG->RG_MAT ) )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Pessoa Fisica e Usuarios         ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If oObjREP:WSNatural( 1 ) .And. oObjREP:WSUser( 1 )

				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava o ontrole de exportacao para o TSA - Usuario           ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				oObjRep:WSUpdRHExp( "SRG" )
				oObjRep:WSUpdRHExp( "SRA" )


			Endif
			DelClassIntf()

		Endif
		If ( lRegua )
			oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
		EndIf

		(cAliasSRG)->(dbSkip())
	Enddo
	DelClassIntf()
Endif

(cAliasSRG)->(DbCloseArea())

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ WSRHTUser        ³ Autor ³ RH - Inovacao     ³ Data ³ 22/07/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de usuarios para  ³±±
±±³			 ³ WebServices TSA via JOB (rodar por Empresa)-Transferenc Turno  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHTUser(cFilMat,cCodMat,oProcess,lPONM430)
Local cAliasSPF 	:= GetNextAlias()
Local cWhere		:= ""
Local nRegSPF 		:= 0
Local cAuxDtFimTSREP:= '20491231'
Local cDtIniTSREP	:= DTOS(Date())
Local cDtFimTSREP 	:= '20491231'
Local cChaveSPF 	:= ""
Local nRegSRA		:= SRA->(Recno())
Local nOrdSRA		:= SRA->(IndexOrd())
Local nOpcUSer 		:= 4
Local lGrava		:= .F.
Local lRegua		:= .F.
Local nTotReg		:= 0
Local nReg			:= 0
Local lMsBlQl		:= .F.
Local aAreaSPF		:= {}
Local cAliasSR6		:= "SR6"
Local aAreaSRA		:= {}

Default cFilMat		:= ""
Default cCodMat		:= ""
Default oProcess	:= NIL
Default lPONM430	:= .T.

Private oObjRep     := Nil

SRA->(dbSetOrder(1))

lRegua		:= ValType(oProcess)== "O"
aAreaSRA	:= SRA->( GetArea() )
dbSelectArea('SR6')
lMsBlQl		:=	SR6->(FieldPos( "R6_MSBLQL" )) > 0
RestArea(aAreaSRA)

If lPONM430
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Query de Registros para selecao dos funcionarios 				      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	cWhere := "% "
	If !Empty(cFilMat) .And. !Empty(cCodMat)
		cWhere += "SPF.PF_FILIAL = '" + cFilMat + "' AND SPF.PF_MAT = '" + cCodMat + "' AND "
	Endif
	cWhere += " SPF.D_E_L_E_T_  = ' '%"


	BeginSql alias cAliasSPF
		SELECT COUNT(R_E_C_N_O_) AS TOTAL
		FROM %table:SPF% SPF
		WHERE %exp:cWhere%
	EndSql

	nTotReg	:= (cAliasSPF)->TOTAL
	(cAliasSPF)->(dbCloseArea())

	BeginSql alias cAliasSPF
		SELECT PF_FILIAL,PF_MAT,PF_DATA,PF_RHEXP,R_E_C_N_O_ AS RECNO
		FROM %table:SPF% SPF
		WHERE %exp:cWhere%
		ORDER BY PF_FILIAL,PF_MAT,PF_DATA
	EndSql

	If (cAliasSPF)->(!Eof())

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Inicializa o ambiente dos metodos do WebService TSA          ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		oObjREP := PTSREPOBJ():New()

		If ( lRegua )
			oProcess:SetRegua2(nTotReg)
		EndIf

		While (cAliasSPF)->(!Eof())

			cChaveSPF := (cAliasSPF)->PF_FILIAL + (cAliasSPF)->PF_MAT

			While (cAliasSPF)->(!Eof()) .And. (cAliasSPF)->PF_FILIAL+(cAliasSPF)->PF_MAT == cChaveSPF

				If ( lRegua )
					oProcess:IncRegua2(STR0003 + Str(++nReg) + STR0004 + Str(nTotReg) )// Registro : 'x' # De : 'y'
				EndIf

				If Empty(cFilMat) .And. Empty(cCodMat)
					SRA-> ( dbSeek ( (cAliasSPF)->PF_FILIAL + (cAliasSPF)->PF_MAT ) )
				Endif

				SPF->( dbGoTo( (cAliasSPF)->RECNO ) )
				nRegSPF := (cAliasSPF)->RECNO

				If ( lMsBlQl )
					lGrava	:= .F.

					aAreaSPF	:= SPF->( GetArea() )

					If (cAliasSR6)->( dbSeek( SPF->PF_FILIAL + SPF->PF_TURNOPA ) ) // Localiza o turno do funcionario no cadastro de turnos
						If ( (cAliasSR6)->R6_MSBLQL == '2' ) // Se registro for permitido para uso
							lGrava	:= .T.
						EndIf
					EndIf

					RestArea(aAreaSPF)
				Else
					lGrava	:= .T.
				EndIf

				If ( lGrava )
					cAuxDtFimTSREP	:= '20491231'

					cDtIniTSREP	:= DTOS(SPF->PF_DATA)
					cDtIniTSREP := SubStr(cDtIniTSREP,1,4)+"-"+SubStr(cDtIniTSREP,5,2)+"-"+SubStr(cDtIniTSREP,7,2)

					nOpcUSer := 4

					(cAliasSPF)->(dbSkip())
					If (cAliasSPF)->(!Eof()) .And. (cAliasSPF)->PF_FILIAL+(cAliasSPF)->PF_MAT == cChaveSPF
						cAuxDtFimTSREP	:= DTOS(STOD((cAliasSPF)->PF_DATA)-1)
						If (STOD((cAliasSPF)->PF_DATA)-1) < Date()
							If Empty(SPF->PF_RHEXP)
								Loop
							Else
								nOpcUSer := 5
							Endif
						Endif
					Endif

					cDtFimTSREP	:= SubStr(cAuxDtFimTSREP,1,4)+"-"+SubStr(cAuxDtFimTSREP,5,2)+"-"+SubStr(cAuxDtFimTSREP,7,2)
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Executa o WebServices TSA - Usuarios                         ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
					If oObjREP:WSUser( nOpcUSer , cDtIniTSREP,,,SPF->PF_TURNOPA,,cDtFimTSREP,SPF->PF_SEQUEPA)

						/*/
						ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						³ Grava o ontrole de exportacao para o TSA - Usuario           ³
						ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
						oObjRep:WSUpdRHExp( "SPF" )

					Endif
					DelClassIntf()
				Else
					(cAliasSPF)->(dbSkip())
				EndIf

			Enddo
		Enddo
		DelClassIntf()
	Endif

	(cAliasSPF)->(DbCloseArea())
Else
	If ( lMsBlQl )
		If (cAliasSR6)->( dbSeek( SPF->PF_FILIAL + SPF->PF_TURNOPA ) ) // Localiza o turno do funcionario no cadastro de turnos
			If ( (cAliasSR6)->R6_MSBLQL == '2' ) // Se registro for permitido para uso
				lGrava	:= .T.
			EndIf
		EndIf
	Else
		lGrava	:= .T.
	EndIf

	If lGrava
		cDtIniTSREP		:= DTOS(SPF->PF_DATA)
		cDtIniTSREP 	:= SubStr(cDtIniTSREP,1,4)+"-"+SubStr(cDtIniTSREP,5,2)+"-"+SubStr(cDtIniTSREP,7,2)
		cAuxDtFimTSREP	:= '20491231'
		cDtFimTSREP		:= SubStr(cAuxDtFimTSREP,1,4)+"-"+SubStr(cAuxDtFimTSREP,5,2)+"-"+SubStr(cAuxDtFimTSREP,7,2)
		oObjREP 		:= PTSREPOBJ():New()

		If oObjREP:WSUser( 4 , cDtIniTSREP,,,SPF->PF_TURNOPA,,cDtFimTSREP,SPF->PF_SEQUEPA)
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Grava o ontrole de exportacao para o TSA - Usuario           ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			oObjRep:WSUpdRHExp( "SPF" )
		Endif
		DelClassIntf()
	Endif
Endif

SRA->(dbGoTo(nRegSRA))
SRA->(dbSetOrder(nOrdSRA))

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ WSRHRules        ³ Autor ³ RH - Inovacao     ³ Data ³ 22/07/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de usuarios para  ³±±
±±³			 ³ WebServices TSA via JOB (rodar por Empresa)-Regra Apontamento  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHRules()
Local cAliasSRA		:= GetNextAlias()
Local cWhere		:= ""
Local cSpace		:= Space(Len(SRA->RA_RHEXP))
Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), { .T., .F. }) //[2]Ofuscamento
Local aFldRel		:= If(aOfusca[2], FwProtectedDataUtil():UsrNoAccessFieldsInList( {"RA_NOME"} ), {})
Local lOfusca		:= Len(aFldRel) > 0

Private oObjRep     := Nil

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Query de Registros para selecao dos funcionarios 				      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cWhere		:= "% SRA.RA_REGRA = '" + SPA->PA_CODIGO + "' AND SRA.RA_SITFOLH NOT IN ('D','T') AND NOT SRA.RA_RHEXP = '" + cSpace + "' %"
BeginSql alias cAliasSRA
	SELECT RA_FILIAL,RA_MAT
	FROM %table:SRA% SRA
	WHERE %exp:cWhere%
	and SRA.D_E_L_E_T_  = ' '

EndSql

If (cAliasSRA)->(!Eof())

	GPProcRegua( (cAliasSRA)->(RecCount()) )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()

	While (cAliasSRA)->(!Eof())

		If SRA-> ( dbSeek ( (cAliasSRA)->RA_FILIAL + (cAliasSRA)->RA_MAT ) )

			GPIncProc(STR0003 + SRA->RA_FILIAL + " - " + SRA->RA_MAT + If(lOfusca, "", " - " + SRA->RA_NOME))

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Usuarios     					   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If oObjREP:WSNatural( 1 ) .And. oObjREP:WSUser( 16 )

				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava o ontrole de exportacao para o TSA - Regra de Apontamento ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				oObjRep:WSUpdRHExp( "SPA" )
				DelClassIntf()
			Endif

		Endif
		(cAliasSRA)->(dbSkip())
	Enddo
Endif

(cAliasSRA)->(DbCloseArea())

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ WSRHRules        ³ Autor ³ RH - Inovacao     ³ Data ³ 22/07/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes do cadastro de usuarios para  ³±±
±±³			 ³ WebServices TSA via JOB (rodar por Empresa)-Regra Apontamento  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WFRHTRep(aParam1)
Local cLogin	:= 'Administrador' //GetMv("MV_TSALJOB",.F.,'Administrador')
Local cSenha	:= ''	 			//GetMv("MV_TSAPJOB",.F.,'')
Local lTsaLogin := ExistBlock( "PTSALJOB" )

Private cAcesso		:= ""	//utilizado pela funcao VerSenha
Private lWorkFlow	:= .F.

Default aParam1 := {}
lWorkFlow := Iif( Len(aParam1)>=3, .T., .F. )

If lWorkFlow
	RpcSetType(3)//-Nao console licencas
	//-RpcSetEnv ( cRpcEmp, cRpcFil, cEnvUser, cEnvPass, cEnvMod, cFunName, aTables, lShowFinal, lAbend, lOpenSX, lConnect )
    RpcClearEnv()

	If lTsaLogin
		aArrayLogin := ExecBlock("PTSALJOB",.F.,.F. )
		If Len(aArrayLogin) > 0
			cLogin := aArrayLogin[1]
			cSenha := aArrayLogin[2]
		Endif
	Endif

	If RpcSetEnv( aParam1[2],aParam1[3],cLogin,cSenha,'PON',GetEnvServer() )
		Conout("Schedule Protheus x TSA" )
	Endif

	//Se Portaria estiver ativada, verifica se base esta OK
	If lPort1510
		If !fVerBasePort(.F.)
			return
		EndIf
	EndIf

	// Atualiza primeiro os registros deletados do Protheus para o TSA antes de rodar os outros JOB's
	WSRHSyncTSA()

	Do Case
		Case upper(aParam1[1]) == upper("Empresa_Unidade_Lotacao")
			WSRHLegal()
		Case upper(aParam1[1]) == upper("Sindicato")
			WSRHSindicatoLegal()
		Case upper(aParam1[1]) == upper("Turno_Escala")
			WSRHShiftWork()
		Case upper(aParam1[1]) == upper("Funcionario")
			WSRHUser()
			WSRHTUser()
		Case upper(aParam1[1]) == upper("Ausencias")
			WSRHDayNotWorked()
		Case upper(aParam1[1]) == upper("Excecoes")
			WSRHEDayNotWorked()
		Case upper(aParam1[1]) == upper("Cargos_Funcoes")
			WSRHPositionLevel()
		Case upper(aParam1[1]) == upper("CCusto")
			WSRHCostCenter()
		Case upper(aParam1[1]) == upper("Afastamentos")
//			WSRHAbsenceReason()
			WSRHUserAbsence()
			WSRHUserVacationAbsence()
	EndCase

    RpcClearEnv()
EndIf

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ WSTSAEmpresa     ³ Autor ³ RH - Inovacao     ³ Data ³ 26/04/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna empresa + Filial + nome da filial para os WS           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSTSAEmpresa(nTipo,cFilBsc)
Local cRet 		:= SM0->M0_CODIGO+SM0->M0_CODFIL+SM0->M0_FILIAL
Local aArea		:= GetArea()
Local nRecSM0	:= SM0->(Recno())

Default nTipo 	:= 1 	// 1-Empresa+Filial+Nome Filial 2-Empresa+Filial
Default cFilBsc	:= SRA->RA_FILIAL

cFilBsc	:= IF(Empty(cFilBsc),cFilAnt,cFilBsc)

dbSelectArea("SM0")
dbSetOrder(1)
If SM0->( dbSeek( cEmpAnt + cFilBsc) )
	If nTipo == 1
		cRet := AllTrim(cEmpAnt + SM0->M0_CODFIL + SM0->M0_FILIAL)
	ElseIf nTipo == 2
		cRet := AllTrim(cEmpAnt + SM0->M0_CODFIL)
	Endif
Endif
SM0->(dbGoTo(nRecSM0))

RestArea(aArea)
Return cRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ WSRHSyncTSA      ³ Autor ³ RH - Inovacao     ³ Data ³ 31/08/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para envio de informacoes de registros deletados        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nenhum                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponto Eletronico                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSRHSyncTSA()
Local cAliasTSA		:= GetNextAlias()
Local cOrder		:= ""
Local cSelect		:= ""
Local cWhere		:= ""
Local cKeyTSA		:= ""
Local cSQLEXEC		:= ""
Local cTsaCommand	:= ""
Local cTabInteg		:= "% SYNC_PROTHEUS_TSA %"
Local lExecWS 		:= .F.
Local lEndWhile 	:= .F.
Local cConteudo 	:= ""
Local nDel			:= 0
Local aDeleRecnos	:= {}
Local lTemRR2 		:= AliasInDic("RR2")

Private oWSSrvCnt
Private oSrvCnt
Private oObjRep     := Nil

If !lTemRR2
	If ! ( TCSQLExec("Select * FROM SYNC_PROTHEUS_TSA") >= 0)
		Return
	Endif
	cSelect		:= "% * %"
	cWhere		:= "% SYNC_TSA.COMPANY = '" + cEmpAnt + "'%"
	cOrder		:= "% ID,URL,TSAOBJECT,TSAMETHOD,TSACOMMAND,TSASEQUENC %"
Else
	fMigrRR2()
	If RR2->( EoF() )
		Return
	EndIf
	cSelect		:= "% RR2_ID AS ID, RR2_COMPAN AS COMPANY, RR2_BRANCC AS BRANCH_C, RR2_BRANCE AS BRANCH_E, RR2_REGIST AS REGISTER, RR2_URL AS URL, RR2_OBJECT AS TSAOBJECT, RR2_METHOD AS TSAMETHOD, RR2_SEQUEN AS TSASEQUENC, RR2_COMMAN AS TSACOMMAND, RR2_PROPER AS PROPERTY, RR2_TYPEDA AS TYPE_DATA, RR2_CONTEN AS TSACONTENT, RR2_LENGTH AS TSALENGHT, R_E_C_N_O_ %"
	cTabInteg	:= "% " + RetSqlName('RR2') + " %"
	cWhere		:= "% SYNC_TSA.RR2_COMPAN = '" + cEmpAnt + "'%"
	cOrder		:= "% ID,URL,TSAOBJECT,TSAMETHOD,TSACOMMAND,TSASEQUENC %"
EndIf

BeginSql alias cAliasTSA
	SELECT %exp:cSelect%
	FROM %exp:cTabInteg% SYNC_TSA
	WHERE %exp:cWhere%
	ORDER BY ID,URL,TSAOBJECT,TSAMETHOD,TSACOMMAND,TSASEQUENC
EndSql

cTabInteg := StrTran(cTabInteg,"%","")

If (cAliasTSA)->(!Eof())

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o ambiente dos metodos do WebService TSA          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oObjREP := PTSREPOBJ():New()

	While (cAliasTSA)->(!Eof())

        //Exemplo de chamada do client
        // Local oWSSrvCnt	:= WSUserIntegrationServiceBeanService():New()
        // oWSSrvCnt:_URL := cServTSA+"UserIntegrationServiceBean"
        // oSrvCnt	:= UserIntegrationServiceBeanService_userDTO():New()
		//
        // 	lRet := oWSSrvCnt:insertOrUpdate(oWSSrvCnt:oWSUserDTO)
        //
		//	oShiftWork:= UserIntegrationServiceBeanService_userShiftWorkRemoveDTO():New()
		//	oShiftWork:cinitialDate 			:= cDataIni
		//	oShiftWork:cshiftWorkExternalKey	:= AllTrim(cEmpAnt+SR6->R6_FILIAL+SR6->R6_TURNO)
		//	oShiftWork:cuserExternalKey			:= AllTrim(cEmpAnt+SRA->RA_FILIAL+SRA->RA_MAT)
		//
		//	lRet := oWSSrvCnt:removeUserShiftWork(oShiftWork)

		oWSSrvCnt := &(AllTrim((cAliasTSA)->TSAOBJECT) + "():New()")
		oWSSrvCnt :_URL := AllTrim((cAliasTSA)->URL)
		oSrvCnt := &(AllTrim((cAliasTSA)->TSAMETHOD) + "():New()")

		cKeyTSA 	:= ((cAliasTSA)->ID+(cAliasTSA)->URL+(cAliasTSA)->TSAOBJECT+(cAliasTSA)->TSAMETHOD+(cAliasTSA)->TSACOMMAND)
		lExecWS 	:= .F.
		lEndWhile 	:= .F.
        lRet		:= .F.
		aDeleRecnos := {}
		cTsaCommand	:= AllTrim((cAliasTSA)->TSACOMMAND)
		While (cAliasTSA)->(!Eof()) .And. cKeyTSA == ((cAliasTSA)->ID+(cAliasTSA)->URL+(cAliasTSA)->TSAOBJECT+(cAliasTSA)->TSAMETHOD+(cAliasTSA)->TSACOMMAND)
			If (cAliasTSA)->TYPE_DATA = 'X'
				lRet := Eval( &("{||oWSSrvCnt:" + AllTrim((cAliasTSA)->TSACOMMAND)+"('"+ Padr(AllTrim((cAliasTSA)->TSACONTENT),(cAliasTSA)->TSALENGHT) +"')" + "}" ) )
	            If lRet
					cSQLEXEC := "DELETE FROM " + cTabInteg + " WHERE R_E_C_N_O_ = " + STR((cAliasTSA)->R_E_C_N_O_)
					TcSqlExec(cSQLEXEC)
				Endif
				lEndWhile := .T.
			Else
				cConteudo := ""
				If (cAliasTSA)->TYPE_DATA = 'C' .Or. (cAliasTSA)->TYPE_DATA = 'D'
					cConteudo := "'" + Padr(AllTrim((cAliasTSA)->TSACONTENT),(cAliasTSA)->TSALENGHT) + "'"
				ElseIf (cAliasTSA)->TYPE_DATA = 'L' .Or. (cAliasTSA)->TYPE_DATA = 'N'
					cConteudo := Padr(AllTrim((cAliasTSA)->TSACONTENT),(cAliasTSA)->TSALENGHT)
				Endif
				Eval( &("{||oSrvCnt:" + AllTrim((cAliasTSA)->PROPERTY)+":=" + cConteudo + "}" ) )
				lExecWS := .T.
				aAdd(aDeleRecnos, STR((cAliasTSA)->R_E_C_N_O_) )
			Endif
			(cAliasTSA)->(dbSkip())
			If lEndWhile
				Exit
			Endif
		Enddo

		If lExecWS
			lRet := Eval( &("{||oWSSrvCnt:" + cTsaCommand +"(oSrvCnt)" + "}" ) )
            If lRet
				For nDel := 1 to Len(aDeleRecnos)
					cSQLEXEC := "DELETE FROM " + cTabInteg + " WHERE R_E_C_N_O_ = " + aDeleRecnos [nDel]
					TcSqlExec(cSQLEXEC)
				Next
            Endif
		Endif

	Enddo


Endif

(cAliasTSA)->(DbCloseArea())

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fValEnter	  ³ Autor ³Gustavo Maranho 	    ³ Data ³02/10/2012³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida a tecla Enter para confirmar a marcacao			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±± */

Function fValEnter(lRet)

Local lMainRet := .F.

	If ValType(M->P8_MOTIVRG) == "C" .and. !Empty(M->P8_MOTIVRG)
	  	If MsgYesNo(STR0002)
			lMainRet := .T.
	    Endif
   	Endif
	lRet := lMainRet

Return lMainRet

/*/{Protheus.doc} fMigrRR2
Efetua migração dos registros da SYNC_PROTHEUS_TSA para a tabela RR2
@author allyson.mesashi
@since 07/10/2020
@version P12.1.27
/*/
Function fMigrRR2()

Local aArea			:= GetArea()
Local cAliasSYNC	:= GetNextAlias()
Local lMigra		:= .T.
Local lOk			:= .T.

If !( TCSQLExec("Select * FROM SYNC_PROTHEUS_TSA") >= 0)
	Return
Endif

BeginSql alias cAliasSYNC
	SELECT * FROM SYNC_PROTHEUS_TSA
EndSql

dbSelectArea( "RR2" )
RR2->( dbSetOrder(1) )
If (cAliasSYNC)->( !Eof() ) .And. RR2->( dbSeek( (cAliasSYNC)->ID + (cAliasSYNC)->COMPANY + (cAliasSYNC)->BRANCH_C + (cAliasSYNC)->BRANCH_E + (cAliasSYNC)->REGISTER ) )
	lMigra	:= .F.
EndIf

If lMigra
	While (cAliasSYNC)->( !Eof() )
		If !RR2->( dbSeek( (cAliasSYNC)->ID + (cAliasSYNC)->COMPANY + (cAliasSYNC)->BRANCH_C + (cAliasSYNC)->BRANCH_E + (cAliasSYNC)->REGISTER ) )
			If RR2->( RecLock("RR2", .T.) )
				RR2->RR2_ID			:= (cAliasSYNC)->ID
				RR2->RR2_COMPAN		:= (cAliasSYNC)->COMPANY
				RR2->RR2_BRANCC		:= (cAliasSYNC)->BRANCH_C
				RR2->RR2_BRANCE		:= (cAliasSYNC)->BRANCH_E
				RR2->RR2_REGIST		:= (cAliasSYNC)->REGISTER
				RR2->RR2_URL		:= (cAliasSYNC)->URL
				RR2->RR2_OBJECT		:= (cAliasSYNC)->TSAOBJECT
				RR2->RR2_METHOD		:= (cAliasSYNC)->TSAMETHOD
				RR2->RR2_SEQUEN		:= (cAliasSYNC)->TSASEQUENC
				RR2->RR2_COMMAN		:= (cAliasSYNC)->TSACOMMAND
				RR2->RR2_PROPER		:= (cAliasSYNC)->PROPERTY
				RR2->RR2_TYPEDA		:= (cAliasSYNC)->TYPE_DATA
				RR2->RR2_CONTEN		:= (cAliasSYNC)->TSACONTENT
				RR2->RR2_LENGTH		:= (cAliasSYNC)->TSALENGHT
				RR2->( MsUnlock() )
				TcSqlExec("DELETE FROM SYNC_PROTHEUS_TSA WHERE R_E_C_N_O_ = '" + cValToChar( (cAliasSYNC)->R_E_C_N_O_ ) + "'")
			Else
				lOk		:= .F.
			EndIf
		EndIf
		(cAliasSYNC)->( dbSkip() )
	EndDo
	If lOk
		TCSQLExec("DROP TABLE SYNC_PROTHEUS_TSA")
	EndIf
EndIf

(cAliasSYNC)->( dbCloseArea() )

Return
