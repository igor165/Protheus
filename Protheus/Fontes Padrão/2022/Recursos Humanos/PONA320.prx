#INCLUDE 'PONA320.CH'
#INCLUDE 'PROTHEUS.CH'

#DEFINE Confirma 1
#DEFINE Redigita 2
#DEFINE Abandona 3

Static aCabecFiles	 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ PONA320  ³ Autor ³ Mauricio MR           ³ Data ³ 10/06/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Cadastro de Configuracao de Graficos                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PONA320()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³             ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±± 
±±³Cecilia C.  ³20/05/14³TPQAN3³Incluido o fonte da 11 para a 12 e efetu- ³±±
±±³            ³        ³      ³ada a limpeza.                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±± 
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß


ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
							 D E S C R I T I V O 
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
Esse programa destina-se ao cadastro de informacoes de um grafico.
Ele permite a administracao de tres arquivos:
1) 	Um arquivo Principal com as informacoes sobre a identificacao, titulos, nome
	arquivo fonte de dados e o campo de geracao de dados.
2)	Um arquivo de grupos de series. 
3)	Um arquivo de itens do grupo.

A partir do fornecimento do arquivo fonte de dados gera-se on-line uma lista com
os campos possiveis de geracao de grafico. Selecionado o campo valido, permite-se
o cadastro de grupos de itens e monta-se uma lista de opcoes de eventos validos 
para arquivo fornecido.	

*/    

Function PONA320

Local aArea			:= GetArea()
Local aIndexSPU		:= {}
Local aAdvSize		:= MsAdvSize()


Begin Sequence

	Private aRotina		:= MenuDef() // ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina
	
	Private bFiltraBrw	:= { || NIL }
	Private cCadastro  := OemToAnsi(STR0009 ) // "Cadastro de Graficos"
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

	cFiltraRh := ChkRh( FunName() , "SPU" , "1" )
	bFiltraBrw 	:= {|| FilBrowse( "SPU" , @aIndexSPU , @cFiltraRH ) }
	Eval(bFiltraBrw)
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Endereca a funcao de BROWSE                                  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	dbSelectArea('SPU')
	dbGoTop()
	mBrowse( aAdvSize[7] , 0 , aAdvSize[6] , aAdvSize[5] , 'SPU')

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Deleta o filtro utilizando a funcao FilBrowse                     	 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	EndFilBrw("SPU",aIndexSpU)


End Sequence

RestArea( aArea )

//-- Libera Variavel estatica
aCabecFiles	:= Nil

Return( NIL )



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³PN320Atu  ³ Autor ³ Mauricio MR           ³ Data ³ 17.06.03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de (Vis.,Inc.,Alt. e Del. )                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PN320Atu(ExpC1,ExpN1,ExpN2)                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Numero da opcao selecionada                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Pona320                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn320Atu(cAlias,nSPUReg,nOpcx)

Local aArea			:= GetArea()
Local aAreaSPU		:= SPU->( GetArea() )

Local aAdvSize		:= {}   
Local aBotoes		:= {} 
Local aInfoAdvSize	:= {} 
Local aObjSize		:= {}
Local aObjCoords	:= {}
Local aGdCoord		:= {}
Local aArrayPos		:= {}
Local aGpLboxCoords	:= {}
Local aLboxCoords	:= {}

Local aQueryCond	:= {} 

Local aKeys			:= GetKeys()    

Local aSPVNaoField	:= {} 
Local aSPVRecnos	:= {}
Local aSPVVirtual	:= {}       

Local aSPUAltera	:= {}
Local aSPUField		:= {}       
Local aSPUNaoField	:= {}
Local aSPUNaoAltera	:= {}
Local aSPUVisual	:= {}
Local aSPUVirtual	:= {}

Local aSPXNaoField	:= {}  
Local aSPXRecnos	:= {}
Local aSPXVirtual	:= {}


Local bSet15		:= { ||nopcA:=1,IF(oGetSPX:TudoOk(),;
                                             (cGrupo:= ;
                                             aCols[oGetSPX:oBrowse:nAt		,;
                                             GdFieldPos("PX_GRUPO")]		,;
                                             Pn320GetaCols(	    aSPVaHeader	,;
                                             					@aSPVaCols	,;
                                                                @aSPVaMain	,;
                                                                nOpc		,;
                                                                cGrupo		,;
                                                                aInfoEventos,;
                                                                .T.			;
                                                              ) 			,;  
                                               fCriaList(		@aListBox	,;
                                               					aSPVaHeader	,;
                                               					aSPVaCols	,;
                                               					nSPVUsado   ;
                                               			 )					,;                
                                               oDlg:End()					;
                                              )								,;
                                              (nOpcA:=0,.T.)				;
                                         ), RestKeys(aKeys,.T.);
                      }
Local bSet24		:= { ||oDlg:End(),RestKeys(aKeys,.T.) } 

//-- chama Tela  para escolha dos Eventos/Verbas do Grupo
Local bSetF4		:= { ||IF(Pn320LinOK (oGetSPX,.F.)  ,;
										( cGrupo:= aCols[oGetSPX:oBrowse:nAt,GdFieldPos("PX_GRUPO")],;
			                              fGeraDados(	aSPVaHeader		,;
			                              				@aSPVaCols		,;
			                               				nSPVUsado		,;
			                                			aInfoEventos	,;
			                                 			cGrupo			,;
			                                  			@oGetSPX		;
			                                  		 )					;
			                            )								,;
			                            .F.								;
	                          ) 										; 
						}
//-- Chama Tela para Escolha da Ordem de Agrupamento                      
Local bSetF5		:=	{ ||If (PnVSPUChave()								,;
   	    					       		fOrdena(@aOrdemChave,@M->PU_CHAVE)	,;
   	    					       		Nil									;
   	    				       	)											;
   	    				}
Local bSkip			:= { || .F. }
Local bChangeGet	:= { || }
Local bChangeList	:= { || }

Local cFilSPV		:= FWxFilial("SPV")
Local cFilSPX		:= FWxFilial("SPX")

Local cCodigo      	:= SPU->PU_CODIGO

Local cAliasSPU 	:= 'SPU'
Local cAliasSPV 	:= 'SPV'
Local cAliasSPX 	:= 'SPX'

Local nCnt			:= 0.00  
Local nSPUUsado		:= 0.00   

Local nXs			:= 0.00
Local nX			:= 0.00     

Local oFont
Local oBtnF4 

Local oPanelTop 
Local oPanelBottom 
Local oPanelGrupo 
Local oPanelDados 



Local oBar1, oBar2
Local oTitulo1, oTitulo2

Private aInfoEventos	:= {}
Private aListBox		:={}

Private cPrefSPU		:= ""
Private cPrefSPV		:= ""
Private cPrefSPX		:= ""

Private lPrimvez		:= .T.

Private nSPVUsado		:= 0.00   
Private nSPXUsado		:= 0.00   
Private nSvnAt			:= 1.00

Private n				:= 1 
Private nOpc			:= nOpcx

Private oDlg
Private oGetSPX       
Private oEnchoice 
Private oListbox 
Private aOrdemChave		:= {}

cPrefSPU 			:= ( PrefixoCpo( cAliasSPU ) + "_" )
aSPUNaoField		:= { cPrefSPU+"FILIAL",cPrefSPU+"TIPOBRW",cPrefSPU+"CPOBRW"}
cPrefSPV 			:= ( PrefixoCpo( cAliasSPV ) + "_" )
aSPVNaoField		:= { cPrefSPV+"FILIAL",cPrefSPV+"CODIGO"}
cPrefSPX 			:= ( PrefixoCpo( cAliasSPX ) + "_" )
aSPXNaoField		:= { cPrefSPX+"FILIAL",cPrefSPX+"CODIGO"}

bChangeGet 			:= { || (     (	fGetaColsList(	aSPVaHeader			,;
														@aSPVaCols		,;
														@aSPVaMain		,;
														aInfoEventos	,;
														 nOpc			;
													  )					,; 
									 	fCriaList(		@aListBox		,;
			                                            	aSPVaHeader	,;
			                                            	aSPVaCols	,;
			                                            	nSPVUsado	;
			                                     )						,; 
		 				 	 	 			 fRestartList(bChangeList)	;
				 				 	)									;				 				 
								);	
						}															

aOrdemChave		:= {	{.F.,'FILIAL',	''	},;
						{.F.,'MAT'	  ,	''	},;
						{.F.,'CC'	  ,	''	};
					}

bChangeList:={||fRefreshList()	 	   	 }		

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Cria Variaveis para a Enchoice e Obtem os campos do SPU	   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

aSPUHeader := GdMontaHeader(@nSPUUsado , @aSPUVirtual , @aSPUVisual , cAliasSPU , aSPUNaoField , NIL, .T., Nil, NIl, .F. )

 
/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Cria as Variaveis de Memoria e Carrega os Dados Conforme o ar³
³ quivo														   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
nXs := Len( aSPUHeader )
For nX := 1 To nXs
	aAdd( aSPUField , aSPUHeader[ nX , 02 ] )
   	If nOpc <>3 
      	IF ( aScan( aSPUVirtual , { |cVirt| cVirt ==  aSPUHeader[ nX , 02 ] } ) == 0.00 )
	   		&( "M->"+aSPUHeader[ nX , 02 ] ) := (cAliasSPU)->( &( aSPUHeader[ nX , 02 ] ) )
	  	Else
			&( "M->"+aSPUHeader[ nX , 02 ] ) := CriaVar( aSPUHeader[ nX , 02 ] )
	  	EndIF
	 ElseIf nOpc==3
		&( "M->"+aSPUHeader[ nX , 02 ] ) := CriaVar( aSPUHeader[ nX , 02 ] )	 
	 Endif 
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Neste Ponto Carrega os Inicializadores padroes para campos  vi³
	³suais														   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF ( aScan( aSPUVisual , { |cVisu| cVisu ==  aSPUHeader[ nX , 02 ] } ) > 0.00 )
		IF Empty( &( "M->"+aSPUHeader[ nX , 02 ] ) )
			&( "M->"+aSPUHeader[ nX , 02 ] ) := CriaVar( aSPUHeader[ nX , 02 ] )
		EndIF
	EndIF 
Next nX

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define os Campos Editaveis na Enchoice Apenas na Inclusao( 3 )³
³ou Alteracao(4)											   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Campos Editaveis								   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	nXs := Len( aSPUVisual )
	For nX := 1 To nXs
		aAdd( aSPUNaoAltera , aSPUVisual[ nX ] )
	Next nX
    
    //-- Na Alteracao nao permite alteracao de codigo do grafico
    If nOpc==4
	   aAdd( aSPUNaoAltera , 'PU_CODIGO' )
    Endif

	nXs := Len( aSPUField )
	For nX := 1 To nXs
		IF ( aScan( aSPUNaoAltera , { |cNaoA| cNaoA == aSPUField[ nX ] } ) == 0.00 )
  			aAdd( aSPUAltera , PADR(aSPUField[ nX ],10) )
		EndIF
	Next nX

EndIF



/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Monta as Dimensoes dos Objetos         					   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aAdvSize		:= MsAdvSize()
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
//aAdd( aObjCoords , { 030 , 90 , .T. , .F. } )
aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
aGdCoord	:= { (aObjSize[1,1]+3), (aObjSize[1,2]+5), aObjSize[1,3], aObjSize[1,4] }	//1,3 Vertical /1,4 Horizontal


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicia a Manutencao de Campos Alteraveis                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Do While  .T.    
    //-- Trata nSPUReg na Inclusao
	If nOpc == 3
		SPU->( dbGoBottom() )
		SPU->( dbSkip() )
		nSPUReg		:= 	0.00
		cCodigo		:=	'ZZZZZZ'
        M->PU_ALIAS	:= 	'SPC'    
        M->PU_CAMPO	:=	'PC_QUANTC'  
        M->PU_TIPO	:= 	'1'
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta a entrada de dados do arquivo                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
   	Private lContinua		:= .F.
	Private aTELA[0][0]
	Private aGETS[0]             
	Private aCols			:= {}
	Private aElem			:= {}
	Private aHeader			:= {}
	Private aSPVaHeader		:= {}
	Private aSPVaCols		:= {}
	Private aSPVaMain		:= {}
    Private cGrupo			:= ''

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Reinicializa aColsStatic a Cada Grafico                     ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	Pn320GetaCols()  //-- Essa funcao ira realizar migracao entre os dados de um acols
					 //-- de itens de um grupo para um acols MAIN onde estao todos os itens
					 //-- de todo o grafico.	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o cabecalho do Grupo		                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aHeader 	:= GdMontaHeader( @nSPXUsado , @aSPXVirtual , NIL , cAliasSPX , aSPXNaoField, NIL, .T., NIL, Nil, .F. )	
    
    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona no Graficoe obtem o grupo inicial do grafico       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	(cAliasSPX)->( dbSeek( cFilSPX + cCodigo , .F. ) )
	 cGrupo:=	(cAliasSPX)->PX_GRUPO
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o cabecalho dos Dados		                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aSPVaHeader 	:= GdMontaHeader( @nSPVUsado , @aSPVVirtual , NIL , cAliasSPV , aSPVNaoField, nIL, nIL, nIL, nIL, .F.) 
	
	(cAliasSPV)->( dbSeek( cFilSPV + cCodigo + cGrupo , .F. ) )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta Bloco com condicao									 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	bSkip		:= { || } 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta Query para a Selecao das Informacoes                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aQueryCond := Array( 05 )
	aQueryCond[01] := cPrefSPX + "FILIAL='"+cFilSPX+"'"
	aQueryCond[02] := " AND "
	aQueryCond[03] := cPrefSPX + "CODIGO='"+cCodigo+"'"
	aQueryCond[04] := " AND "
	aQueryCond[05] := "D_E_L_E_T_=' ' "
        

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o aCols dos Grupos de Dados                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aSPXRecnos	:={}    
	aCols		:= OLDGdMontaCols(aHeader,@nSPXUsado,aSPXVirtual,NIL,cAliasSPX,aSPXNaoField,@aSPXRecnos,cAliasSPX,(cFilSPX+cCodigo),NIL,bSkip,NIL,NIL,NIL,NIL,NIL,NIL,aQueryCond,.F.,.F.)
    
   	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta Bloco com condicao									 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	bSkip		:= { || } 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta Query para a Selecao das Informacoes                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aQueryCond := Array( 05 )
	aQueryCond[01] := cPrefSPV + "FILIAL='"+cFilSPV+"'"
	aQueryCond[02] := " AND "
	aQueryCond[03] := cPrefSPV + "CODIGO='"+cCodigo+"'"
	aQueryCond[04] := " AND "
	aQueryCond[05] := "D_E_L_E_T_=' ' "

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o aCols dos Dados			                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    aSPVRecnos	:={}
    aSPVaMain	:= OLDGdMontaCols(aSPVaHeader,@nSPVUsado,aSPVVirtual,NIL,cAliasSPV,aSPVNaoField,@aSPVRecnos,cAliasSPU,(cFilSPV+cCodigo),NIL,bSkip,NIL,NIL,NIL,NIL,NIL,NIL,aQueryCond,.F.,.F.,.T.)
    
   
    If ( ( nCnt := Len( aSPVRecnos ) ) > 0 ) .and. nOpc = 3    //--Quando Inclusao e existir Registro
			Help(" ",1,"PN320EXIST")
 			Exit
    Elseif nCnt = 0 .And. nOpc # 3  //--Quando Nao for Inclusao e nao existir Registro
        Help(" ",1,"PN320NCAD")
	     Exit
	Endif
	
						
	nOpca		:= 0.00                                 
	

	 
	IF ( nOpcX == 3 .Or. nOpcX == 4 )
		aBotoes := {; 
						{	"BMPORD1"										,;
   	    					bSetF5											,;
       						OemToAnsi( STR0039 )		 					,;	//'Agrupa Campos...<F5>'  
       						OemToAnsi( STR0139 )		 					;	//'Campos'
           				};
					}
	EndIF
    
	DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
	DEFINE MSDIALOG oDlg TITLE cCadastro From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL
	aArrayPos := {aGdCoord[1],aGdCoord[2],((aGdCoord[3]/100)*40),aGdCoord[4]}

	oEnchoice					:= MsmGet():New( cAliasSPU , nSPUReg   , nOpc  , NIL        , NIL , NIL , aSPUField , aArrayPos , aSPUAltera , NIL , NIL , "A320VldTOK" , oPanelTop, NIL , .T. )
    
    
    @ ((aGdCoord[3]/100)*41), aGdCoord[2] 				GROUP oGroup TO aGdCoord[3], (aGdCoord[4]/100)*50	LABEL OemToAnsi(STR0045) OF oDlg PIXEL	//"Grupos de Dados"
	oGroup:oFont:= oFont
	@ ((aGdCoord[3]/100)*41), (aGdCoord[4]/100)*50 	GROUP oGroup2 TO aGdCoord[3], aGdCoord[4]			LABEL OemToAnsi(STR0046) OF oDlg PIXEL	//"Dados do Grupo"
	oGroup2:oFont:= oFont
	
	
	oGetSPX 					:= MSGetDados():New(((aGdCoord[3]/100)*45),aGdCoord[2]+5,aGdCoord[3]-5,((aGdCoord[4]/100)*50)-5  , nOpc, "Pn320LinOK", "Pn320TudOK", " ", .T., , 2 , , , , , , , oGroup )
	//oGetSPX:oBrowse:Align		:= CONTROL_ALIGN_ALLCLIENT
	oGetSPX:oBrowse:bChange		:= bChangeGet   
    oGetSPX:oBrowse:bWhen		:= {|| fLiberaGet()}
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Obter os Eventos Iniciais do 1o.Grupo                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aInfoEventos:= fGetInfoTab(M->PU_ALIAS)
	
	Pn320GetaCols(	aSPVaHeader	,;
					@aSPVaCols	,;
					@aSPVaMain	,;
					nOpc 		,;
					cGrupo		,;
					aInfoEventos;
				  )   
    
    fCriaList(		@aListBox	,;
                    aSPVaHeader	,;
                    aSPVaCols	,;
                    nSPVUsado	;
      		 )
     
     
    /*DEFINE BUTTON  oBtnF4  RESOURCE 'BMPINCLUIR' OF oGroup2 ACTION Eval(bSetF4) 
	//oBtnF4:Align := CONTROL_ALIGN_LEFT
	oBtnF4:CTOOLTIP := OemToAnsi( STR0010) //##"Inclui Dados"	
	oBtnF4:cTitle   := OemToAnsi( STR0006) //##"Incluir" */	
    @ ((aGdCoord[3]/100)*45), (aGdCoord[4]/100)*51	BUTTON oBtnF4 	PROMPT OemToAnsi( STR0010)	 SIZE 070,015 ACTION Eval(bSetF4) 	OF oDlg PIXEL //RESOURCE 'BMPINCLUIR'

	//-- Desabilita botao se diferente de alteracao e inclusao
	IF ( nOpc <> 4 .AND. nOpc <> 3  )
		oBtnF4:Disable() 
	Else
		SetKey( VK_F4 , bSetF4 )
		SetKey( VK_F5 , bSetF5 )         
	Endif
	 
   	aLboxCoords := {((aGdCoord[3]/100)*45)+17, (aGdCoord[4]/100)*51, aGdCoord[3]-((aGdCoord[3]/100)*45)-22, aGdCoord[4]-((aGdCoord[4]/100)*52)-5}
	
	ListBoxDados( aLboxCoords , @oGroup2 , aListBox , @oListBox, aSPVaHeader, bChangeList )
	//oListBox:Align := CONTROL_ALIGN_ALLCLIENT	
	bSet15	:= {||nOpca:=1,If(A320VldTOK(aGets,aTela) .And. oGetSPX:TudoOk(),oDlg:End(),(nOpca:=2,.F.)),RestKeys(aKeys,.T.)}
	bSet24	:= {||nOpca:=2,oDlg:End(),RestKeys(aKeys,.T.)}
    
 	 	 
	
	ACTIVATE MSDIALOG oDlg ON INIT 	(;
						   			 	IF( nOpc == 3 .or. nOpc == 4 ,;
									 			(;
									 				SetKey( VK_F4 , bSetF4 ),;
								 					SetKey( VK_F5 , bSetF5 );
								 	 			),;
								 	 			NIL;
								 	 	 ),;	
								  		EnchoiceBar(oDlg,bSet15,bSet24,Nil,aBotoes );
								  	)
		 
    
   	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Restaura as Teclas de Atalho								   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	RestKeys( aKeys , .T. )
	
    IF nOpcA == 2
       EXIT    
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Quando Confirmada a Opcao e Nao for Visualizacao Grava ou   Ex³
		³clui as Informacoes do SPU e SPV							   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/            
    ELSEIF nOpcA == Confirma .And. nOpc # 2
			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Gravando/Incluido ou Excluindo Informacoes do SPU/SPV        ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			Pona320Grava( nOpc , nSPUReg , aSPUHeader , aSPUVisual , aHeader, aCols , aSPXVirtual , aSPXRecnos , nSPXUsado , aSPVaHeader	, aSPVaMain	, aSPVVirtual, aSPVRecnos,	nSPVUsado )
	Endif
    Exit

Enddo    


/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Restaura os Dados de Entrada								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
RestKeys( aKeys , .T. ) 
RestArea( aAreaSPU ) 
RestArea( aArea ) 

Return (.T.)  
 

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pn320LinOK    ³Autor³Mauricio MR 		  ³ Data ³02/07/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Consiste as informacoes do Eventos Digitado.			    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn320LinOK ()							     				³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³oGet 	-> Objeto Get										³
³          ³lPrimVez->Flag para realizar operacoes somente na incializa ³
³          ³          cao da rotina.								    ³
³          ³lChkItem->Checa a consistencia de Eventos/Verbas		    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T.        													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico  	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Pn320LinOK (oGet,lChkItem)  
Local lRet		:= .T.
Local naHeader	:= Len(aHeader)
Local nSPVaCols := Len(aSPVaCols)
Local nX		:= 0        
Local nDeleted	:= ( nSPXUsado + 1 )     
Local nPosDado	:= GdFieldPos("PV_DADO" ,aSPVaHeader) 
Local nValidos  := 0 

DEFAULT lChkItem	:= .T.


//-- Nao consiste Deletados
If !aCols[n,nDeleted] .AND. !lPrimVez   
   
	//-- Nao permite campos em branco
	For nX := 1 To naHeader
		If !(aHeader[nx,2] $ "PX_ALI_WT/PX_REC_WT" )
			IF EMPTY(aCols[n,nX])  
			  lRet:= .F.
			  Return(lRet)
			EndIF
		EndIf
	Next nX
 	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verfica a Consistencia de Eventos/Verbas informados          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lChkItem
		If lRet 
			If Empty(aInfoEventos)
				aInfoEventos:= fGetInfoTab(M->PU_ALIAS) 
			Endif	
			For nX:=1 To nSPVaCols
	   			//Conta os Elementos Validos
				If !aSPVaCols[nX,nSPVUsado + 1 ]
			   		nValidos++
			   		//-- Verifica se o evento existe na tabela    
			   		If !(lRet:=Existcpo(aInfoEventos[1],aSPVaCols[nX,nPosDado])) 
			   		   	Help(" ",1,"PN320NOEVE")
			   		   Exit
			   		Endif
			   	Endif	
		   Next nX		
		Endif	
		//-- Verifica se Existem Elementos Validos
		If lRet
	   		IF !(lRet:=If(Empty(nValidos), .F., .T.))
	     		Help(" ",1,"PN320NODADO")
	  		Endif  	
	  	Endif 
	Endif 	
Endif

Return (lRet)

           
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pn320TudOK 	  ³Autor³Mauricio MR 		  ³ Data ³02/07/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Consiste Todos os Eventos Digitados.					    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn320TudOK()							     				³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³															³
³          ³															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T.        													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico  	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Pn320TudOK()
Local aSvaSPV	:= aClone(aSPVaCols)
Local cGrupo	:= ''
Local lRet		:=.T.
Local naCols	:= Len(aCols) 
Local nX		:= 0.00
Local nDeleted	:= ( nSPXUsado + 1 )     
Local nValidos	:= 0.00  
Local nSvn		:= n       
Local nPosGrupo	:= GdFieldPos("PX_GRUPO" ,aHeader)    

aInfoEventos	:= fGetInfoTab(M->PU_ALIAS) 

/*	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Corre todas as linhas e verifica a consistencia dos dados     ³
	³informados.												   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/  
For nX:= 1 To naCols    
	//Conta os Elementos Validos
	If !aCols[nX,nDeleted]
	   nValidos++
	Endif   
	
    n			:=	nX
	aSPVaCols	:=	{}	
	Pn320GetaCols() //Inicializa a variveis static    
	//-- Obtem o Grupo
	cGrupo		:=  aCols[nX,nPosGrupo]
	//-- Carrega todos os itens do Grupo
	Pn320GetaCols(   aSPVaHeader	,;
                     @aSPVaCols		,;
                     @aSPVaMain		,;
                     nOpc			,;
                     cGrupo			,;
                     aInfoEventos	,;
                      .F.			;
                   )
	//-- Valida a linha
	If !(lRet:=Pn320LinOK())
	   Exit
	Endif

Next nX

//-- Verifica se Existem Elementos Validos
If lRet
   IF !(lRet:=If(Empty(nValidos), .F., .T.))
     	Help(" ",1,"PN320NODADO")
   Endif  	                                                   
   
Endif   

n			:= 	nSvn
aSPVaCols	:=	aClone(aSVaSPV)

Return (lRet)



/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao	   ³PnVSPUCodigo() 		³ Autor ³ Mauricio MR         ³ Data ³20/06/03  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Valida Codigo de Identificacao do Grafico RH.						³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PnVSPUCodigo()														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T. -> Valido / .F. -> Nao Valido									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³PONA320   													    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PnVSPUCodigo()   
Local lRet:=	.T.  

If !(lRet := ExistChav( "SPU" , M->PU_CODIGO))
	Help(" ",1,"PN320EXIST")
Endif	

Return (lRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao	   ³PnVSPUTipo()		³ Autor ³ Mauricio MR         ³ Data ³20/06/03  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Valida o tipo de Grafico.											³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PnVSPUTipo()														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T. -> Valido / .F. -> Nao Valido									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³PONA320   													    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PnVSPUTipo()
Local cTipos 	:= ''
Local cConteudo	:= ''
Local cVar		:= Alltrim(ReadVar())
Local lRet		:= .T.


cTipos			:= GrafRetOpcBox( 01 )
cConteudo		:= (&cVar)

lRet:= If(cConteudo$cTipos .AND. !EMPTY(cConteudo),.T.,.F.)

Return (lRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao	   ³PnVSPUAlias()		³ Autor ³ Mauricio MR         ³ Data ³20/06/03  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Valida o Alias informado do arquivo.								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PnVSPUAlias()														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T. -> Valido / .F. -> Nao Valido									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³PONA320   													    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PnVSPUAlias(cVar, lMontaOpcoes)
Local cAlias 		:= ''
Local lRet			:= .T.

DEFAULT cVar		:= &(Alltrim(ReadVar()))
DEFAULT lMontaOpcoes:= .T.

cAlias:=GrafRetOpcBox( 02 )

If( lRet:=(cVar$cAlias) ) .AND. lMontaOpcoes
	fMontaCamposOpcoes(cVar,Nil, lMontaOpcoes)
Endif

Return (lRet)


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao	   ³PnVSPUCampo()		³ Autor ³ Mauricio MR         ³ Data ³20/06/03  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Valida o nome do campo conforme o alias informado.					³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PnVSPUCampo()														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T. -> Valido / .F. -> Nao Valido									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³PONA320   													    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PnVSPUCampo(cVar)  
Local lRet		:= .T.   
Local cCampo	:= GrafRetOpcBox( 03 )

DEFAULT cVar 	:= &(ALLTRIM(ReadVar()))

If Type('CVAR') <> "U"
	lRet:=(cVar$cCampo) 
Endif	

Return (lRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao	   ³PnVSPUChave()		³ Autor ³ Mauricio MR         ³ Data ³20/06/03  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Valida a chave de ordem e totalizacao dos dados do arquivo			³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PnVSPUChave()														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T. -> Valido / .F. -> Nao Valido									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³PONA320   													    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PnVSPUChave()
Local aCampos	:= aClone(aOrdemChave)  
Local aAux		:= {}
Local cCampo	:= ''
Local cChave	:= ALLTRIM(STRTRAN(M->PU_CHAVE,' '))
Local lRet		:= .T.   
Local nChave	:= Len(cChave)
Local nElem		:= 0
Local nPosMais	:= 0
Local nX	    := 0


//-- Se for informada alguma chave consiste
If !Empty(nChave)
	//-- Corre Caracter a Caracter da Chave
	For nX:=1 to nChave
	
	    nPosMais:=At('+',cChave)
	    nPosMais:=If(Empty(nPosMais),Len(cChave)+1,nPosMais)
	    cCampo:= UPPER(Substr(cChave,1,nPosMais-1))
	    If Empty(cCampo) .OR. Empty((nElem:=Ascan(aCampos,{|x| x[2] == cCampo})))
	       Help(" ",1,"PN320NOKEY")
	       lRet:=.F.
	       Exit
	    Endif  
	    AADD(aAux,aClone(aCampos[nElem]))       
	    //-- Zera conteudo para evitar que existam mais de uma ocorrencia de campo na chave
	    aCampos[nElem,2]:=''     
	    
	    If nPosMais > nChave
	       Exit
	    Endif
	    
	    cChave:=Substr(cChave,nPosMais+1)
	    nChave:=Len(cChave)
	    nX:=1
	
	Next nX
	                    
	//-- Seleciona as opcoes da lista de campos partir da cadeia de caracteres    
	If lRet                     
	   aCampos		:=aClone(aOrdemChave)
	   aOrdemChave	:={}
	   aEval(aAux,{|x|(AADD(aOrdemChave,aClone(x)),aOrdemChave[Len(aOrdemChave),1]:=.T.)})
	   nElem		:=Len(aCampos)
	   
	   For nX:=1 To nElem
	   	   If Empty( Ascan(aOrdemChave, {|y| y[2] == aCampos[nX,2]} ))
	   	      aCampos[nX,1]:=.F.
	   	      AADD(aOrdemChave,aClone(aCampos[nX]))	
	   	   Endif
	   Next nX
	   
	Endif    
Endif

Return (lRet)


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao	   ³PnVSPXCodigo() 		³ Autor ³ Mauricio MR         ³ Data ³20/06/03  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Valida Codigo de Identificacao do Grafico RH.						³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PnVSPXCodigo()														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T. -> Valido / .F. -> Nao Valido									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³PONA320   													    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/           
Function PnVSPXCodigo()   
Local lRet:=	.T.
Return (lRet)



/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao	   ³PnVSPXGrupo() 		³ Autor ³ Mauricio MR         ³ Data ³20/06/03  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Valida Grupo de Dados do Grafico RH.			        			³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PnVSPXGrupo()														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T. -> Valido / .F. -> Nao Valido									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³PONA320   													    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/           
Function PnVSPXGrupo()   
Local cGrupo	:= ''
Local lRet		:=	.T.   
Local nPosGrupo	:= GdFieldPos("PX_GRUPO")  
Local nPosSPVGrupo	:= GdFieldPos("PV_GRUPO", aSPVaHeader)  
Local nX   		:= 	0
Local nY		:=	0
Local nLenaCols	:=  Len(aCols)

For nX:=1 To nLenaCols        
    cGrupo:= M->PX_GRUPO 
	For nY:=1 To nLenaCols        
	    If ( aCols[nY,nPosGrupo] == cGrupo .And. nX <> nY )
	       lRet:= .F.
	       Help(" ",1,"PN320NOGRP")
	       Exit
	    ElseIF  ( nX == nY .AND. n == nX .AND. aCols[nY,nPosGrupo] <> cGrupo ) .AND.;
		        (!Empty(aCols[nY, nPosGrupo]) )
		        If Len(aSPVaCols) > 0
			        If ( aSPVaCols[1,nPosSPVGrupo] <> cGrupo)
		       			lRet:= .F.
		      			Help(" ",1,"PN320TROCA")
				        Exit
				    Endif   
				Endif    
	    Endif   
	Next nY
	If !lRet
	   Exit
	Endif
Next nX
  
Return (lRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao	   ³PnVSPVCodigo() 		³ Autor ³ Mauricio MR         ³ Data ³20/06/03  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Valida Codigo de Identificacao do Grafico RH.						³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PnVSPVCodigo()														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T. -> Valido / .F. -> Nao Valido									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³PONA320   													    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/           
Function PnVSPVCodigo()   
Local lRet:=	.T.
Return (lRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao	   ³PnVSPVDado() 		³ Autor ³ Mauricio MR         ³ Data ³20/06/03  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Valida Codigo de Evento/Verba conforme o alias/campo informados.	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PnVSPVDado()														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T. -> Valido / .F. -> Nao Valido									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³PONA320   													    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/ 
Function PnVSPVDado()
Local aInfoEventos	:= {}
Local cCodEvento	:=	M->PV_DADO  //-- Codigo do Evento
Local cAliasEventos	:= 	M->PU_ALIAS //-- Alias do Arquivo do Evento (Nao da Tabela Correspondente) 
Local lRet			:=	.T. 
Local nPosDesc 		:= SPU->(GdFieldPos( "PV_DESC" , aSPVaHeader))
                

//-- Obtem a Tabela de Informacoes sobre a tabela de codigos correspondente ao alias informado
If Empty(aInfoEventos)
   aInfoEventos:= fGetInfoTab(cAliasEventos)
Endif

If (lRet:=Existcpo(aInfoEventos[1],cCodEvento))
	//-- Obtem a Descricao do Evento
	fPn320EveDesc(aInfoEventos, cCodEvento, 	aSPVaCols[n,nPosDesc] )
	
	//-- Atualiza a Variavel de Memoria
	M->PV_DESC:= aSPVaCols[n,nPosDesc]
Endif
    
Return (lRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao	   ³fPn320EveDesc 		³ Autor ³ Mauricio MR         ³ Data ³29/06/03  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Verifica se Codigo Existe e recupera a descricao correspondente.	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fPn320EveDesc()														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T. -> Valido / .F. -> Nao Valido									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³PONA320   													    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/   
Function fPn320EveDesc(aInfoEventos, cCodEvento, cVarDesc)
Local lRet		:=	.T. 

//-- Verifica se o codigo do evento e valido
cVarDesc	:=Eval(aInfoEventos[2], cCodEvento)

Return (lRet)

	

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³GrafRetOpcBox ³Autor³ Mauricio MR  		  ³ Data ³17/06/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Retornar as Opcoes para o X3_BOX                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³#GrafRetOpcBox( nOpcBox )									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais> 									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso	   ³SX3->X3_BOX   												³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Function GrafRetOpcBox( nOpcBox )

Local cOpcBox		:= "" 

DEFAULT nOpcBox		:= 0.00

//-- Tipo do Grafico
IF ( nOpcBox == 01 )
     cOpcBox:=fMontaOpcGraf()[2]       

//-- Alias	
ElseIF ( nOpcBox == 02 )
	cOpcBox += ( "SPC=" + STR0025 	+ ";"	)	//"SPC - Apontamento"
	cOpcBox += ( "SPI=" + STR0026	+ ";"	)	//"SPI - Banco de Horas"
	cOpcBox	+= ( "SPB=" + STR0027 			)	//"SPB - Resultado"

//-- Campos
ElseIF ( nOpcBox == 03 )      
 	cOpcBox:=If(Type("M->PU_ALIAS") <> 'U', fMontaCamposOpcoes( If( EMPTY(M->PU_ALIAS), SPU->PU_ALIAS, M->PU_ALIAS)), fMontaCamposOpcoes(SPU->PU_ALIAS) ) 

EndIF

Return (cOpcBox)               





                        

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao	   ³fMontaCamposOpcoes 	³ Autor ³ Mauricio MR         ³ Data ³20/06/03  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Obtem os campos de um alias e gera lista de opcoes do mesmo			³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fMontaCamposOpcoes(cAlias,aCpos, lCriaLista)	   				    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³cCpoRet -> String com as opcoes de campos 							³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³PONA320   													    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
     
Static Function fMontaCamposOpcoes(cAlias, aCpos, lCriaLista)


 Local aOpcoes			:= {}
 Local aSvItens			:= {} 
 Local nPosFile			:= 0.00
 Local nItem			:= 0.00
 Local cCpoRet			:= SPACE(10)


 DEFAULT aCpos			:= {}                             
 DEFAULT lCriaLista		:= .F.                          
  
 If cAlias == Nil
 	cAlias			:= 'SPC'     
 	lCriaLista		:= .T.
 Endif
 
 If aCabecFiles == Nil
    aCabecFiles:={}
 Endif 
                               
 //-- Posiciona no Alias
 If !( nPosfile:= Ascan(aCabecFiles,{|x| x[1] == cAlias } )  ) > 0.00 
    AADD( aCabecFiles, { cAlias, GdMontaHeader( NIL , NIL , NIL , cAlias , NIL , NIL,.T. ) } )
    nPosFile:= Len(aCabecFiles)
 Endif                        

 //-- Obtem somente os Campos do Alias que sejam numericos e cria arrays com o nome do campo e sua descricao
// Aeval( aCabecFiles[nPosFile,2], { |x| If( x[8] == "N", ( AADD(aCpos, x[2] ), AADD(aSvItens,(X[2]+'='+X[1])) , (cCpoRet+=(PADR(X[2],TAMSX3("PU_CAMPO")[1])+'='+X[1]+';'))), NIl ) } )   
 Aeval( aCabecFiles[nPosFile,2], { |x| If( x[8] == "N", ( AADD(aCpos, x[2] ), AADD(aSvItens,(X[2]+'='+X[1])) , (cCpoRet+=X[2]+'='+X[1]+';') ), NIl ) } )   
If Type("oEnchoice") == 'O' .AND. lCriaLista
  	nItem:=Ascan(oEnchoice:aGets,{|X| "PU_CAMPO"$X})   
   	If !(oEnchoice:aEntryCtrls[nItem] == NIL)  .and. !EMPTY(nItem) 
   	    //-- Obtem as opcoes iniciais do combo
   	    aOpcoes:= oEnchoice:aEntryCtrls[nItem]:aItems
   	    //-- Adiciona o elemento em branco padrao das listas em objeto combo.
   	    If ( Len(aOpcoes) > 1)
			AADD( aSvItens, SPACE( LEN( aOpcoes[Len(aOpcoes)-1] ) ) )
		Else 
			AADD( aSvItens, SPACE( LEN( aOpcoes[1] ) ) )	                                
	   	Endif
   		oEnchoice:aEntryCtrls[nItem]:aItems:=Aclone(aSvItens)  
   		oEnchoice:aEntryCtrls[nItem]:lModified:= .T.
   		aOpcoes:= oEnchoice:aEntryCtrls[nItem]:aItems
   	    nopcao:=ASCAN(aOpcoes,;
   	                  {|x|(UPPER(ALLTRIM(oEnchoice:aEntryCtrls[nItem]:Cargo)))$UPPER(ALLTRIM(x))})  
   	    //-- Atualiza Campo "campo"
		eVAL(oEnchoice:aEntryCtrls[nItem]:BGOTFOCUS)
	    eVAL(oEnchoice:aEntryCtrls[nItem]:BSETGET) 
	   	oEnchoice:aEntryCtrls[nItem]:nAt := Max(1,nopcao)
   	Endif	
Endif		

cCpoRet:=ALLTRIM(Substr(cCpoRet, 1, ( Len(cCpoRet)-1 ) ))
   
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Obter os Eventos Iniciais do 1o.Grupo                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aInfoEventos:= fGetInfoTab( IF( Type("M->PU_ALIAS") <> "U", M->PU_ALIAS, SPU->PU_ALIAS) )

Return (cCpoRet)
  




/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fGetInfoTab	³ Autor ³Mauricio MR           ³ Data ³27/06/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Cria Array com informacoes da Tabela de Codigos corresponden ³
³          ³ao Alias informado.                                          ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fGetInfoTab(cAliasEventos)									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³cAliasEventos -> Alias Informado						 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/   

Function fGetInfoTab(cAliasEventos) 

If cAliasEventos == 'SPB'
   	cTab		:= 'SRV'
   	cCod		:= 'COD'
  	bDescEveTab	:= {|cCodEvento| PosSRV(cCodEvento, FWxFilial("SPV"), "RV_DESC") }		
Else 
    cTab		:= 'SP9'
   	cCod		:= 'CODIGO'
    bDescEveTab	:= {|cCodEvento| DescPDPon(cCodEvento, FWxFilial("SPX") ) }
Endif   
Return {cTab,bDescEveTab, cCod}
            
   
Function A320VldTOK(aGets,aTela)
Local lRet	:= .T.

lRet:=Obrigatorio(aGets,aTela)

Return (lRet)


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pn320GetaCols	³ Autor ³Mauricio MR       ³ Data ³27/06/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Realiza a Transferencia de Dados entre Eventos/Verbas de um  ³
³          ³Grupo e o array Principal com todas os eventos/verbas do gra ³
³          ³fico.                                                        ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Ver Descricao abaixo										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/                     
Static Function Pn320GetaCols(	aHeader		,; //Array de Cabec de Eventos/Verbas (SPV)
								aCols		,; //Array de Eventos/Verbas(SPV)
								aArrayMain	,; //Array com Todas as Informacoes de Dados dos Arquivos
								nOpc		,; //Opcao do aRotina
								cGrupo		,; //Grupo de Dados 
								aInfoEventos,; //Tabela de Eventos do Alias Selecionado
								lTudoOk 	; //Se montado a partir de TudoOk
							  )
                          
Local aGrupo	:= {} 
Local cDesc		:= ''
Local nX		:= 0.00
Local nLenX 	:= 0.00
Local nY		:= 0.00
Local nLenY		:= 0.00 
Local nPosGrupo	:= 0
Local nPosDado	:= 0 
Local nPosDesc	:= 0 
Local lManutenc	:= .F.
Local lPrimeira := ( PCount() == 0 )
Local nSvUsado	:= 0

Static aColsStatic

DEFAULT nOpc	:= 3.00
DEFAULT lTudoOk := .F.
                    
IF lPrimeira
	aColsStatic := NIL
Else
	nLenX 		:= Len( aArrayMain ) 
	nSvUsado	:= Len(aHeader)+1
	nPosGrupo	:= GdFieldPos("PV_GRUPO",aHeader)
 	nPosDado	:= GdFieldPos("PV_DADO" ,aHeader)    
 	nPosDesc	:= GdFieldPos("PV_DESC" ,aHeader)   
	IF aColsStatic != NIL .and. !fCompArray( aColsStatic , aCols )
		nLenY := Len( aElem )
		For nY := 1 To nLenY
			IF !fCompArray( aArrayMain[ aElem[ nY ] ] , aCols[ nY ] )
				lManutenc := .T.
				aArrayMain[ aElem[ nY ] ] := aClone( aCols[ nY ] )
				aAdd( aGrupo , aCols[ nY , nPosGrupo ] )
			EndIF
		Next nY
		IF Len( aCols ) > Len( aColsStatic )
			IF nLenX == 1.00 .and. Empty( aArrayMain[ nLenX , nPosDado ] )
				aArrayMain := {}
			EndIF
			nLenY := Len( aCols )
			For nY := nY To nLenY
				IF !Empty( aCols[ nY , nPosDado ] ) .and. !aCols[nY , nSvUsado ]
					aAdd( aArrayMain , aClone( aCols[ nY ] ) )
				EndIF	
			Next nY
		ElseIF nLenY == 0.00 .and.( ( ( nLenY := Len( aCols ) ) == Len( aColsStatic ) ) .and. nLenY == 1.00 )
			IF Len( aArrayMain ) == nLenY  .AND. !EMPTY(aElem)
				aArrayMain[ nLenY ] := aClone( aCols[ nLenY ] )
			Else
				aAdd( aArrayMain , aClone( aCols[ nLenY ] ) )
			EndIF	
		EndIF
		//-- Se sortear tera que incluir as informacoes do sort no aRecnos
		//aSort( aArrayMain ,,, { |x,y| x[nPosDado] < y[nPosDado] } )
		IF lManutenc
			nLenY := Len( aGrupo )
			nLenX := Len( aArrayMain )
			For nY := 1 To nLenY
				IF ( nX := aScan( aArrayMain , { |x| x[ nPosGrupo ] == aGrupo[ nY ] } ) ) > 0.00
					For nX := nX To nLenX
						IF aArrayMain[ nX , nPosGrupo ] == aGrupo[ nY ]
					
						Else
							Exit
						EndIF
					Next nX
				EndIF
			Next nY	
			aGrupo		:= {} 	
			lManutenc	:= .F.
		EndIF
	EndIF
    	
	IF !lTudoOk
		aCols  := {} ; aElem := {}
		IF ( nX := aScan( aArrayMain , { |x| x[ nPosGrupo ] == cGrupo } ) ) > 0.00
			nLenX := Len( aArrayMain )
			For nX := nX To nLenX
				IF aArrayMain[ nX , nPosGrupo ] == cGrupo
					aAdd( aCols , aClone( aArrayMain[ nX ] ) ) 
					fPn320EveDesc(aInfoEventos, aCols[Len(aCols) ,nPosDado ], @cDesc)
					aCols[Len(aCols), nPosDesc]:= cDesc 
					aAdd( aElem, nX  )
				EndIF
			Next nX
		Else
			aCols := GdRmkaCols( aHeader , .F.)
		EndIF	
		aColsStatic := aClone( aCols )
	EndIF
	
EndIF
Return (NIL)
	

 
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fCriaList	³ Autor ³Mauricio MR           ³ Data ³27/06/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Cria Array List com informacoes do aCols de Itens do Grupo   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fCriaList(aList, aHeader, aCols, nUsado)					 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/   

Static Function fCriaList(aList, aHeader, aCols, nUsado)	 
Local nPosDado	:= GdFieldPos("PV_DADO" ,aHeader)    
Local nPosDesc	:= GdFieldPos("PV_DESC" ,aHeader)   
Local nDeletado	:= nUsado+1
aList:={}

aEval(aCols,{|x| If(! x[nDeletado], aAdd(aList, {x[ nPosDado] , x[ nPosDesc]  }), Nil ) }  )   

Return (Nil)		     

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fGetaColsList	 ³ Autor ³Mauricio MR      ³ Data ³27/06/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Cria Array List com informacoes do aCols de Itens do Grupo   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fGetaColsList(aSPVaHeader,aSPVaCols,aSPVaMain,	aInfoEventos,³
³          ³              nOpc)											 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/            
Static Function fGetaColsList(aSPVaHeader,aSPVaCols,aSPVaMain,	aInfoEventos, nOpc)
//-- Obtem Informacoes da Lista de Eventos/Verbas
cGrupo:= aCols[oGetSPX:oBrowse:nAt,GdFieldPos("PX_GRUPO")]
Pn320GetaCols(	aSPVaHeader	,;
				@aSPVaCols	,;
 				@aSPVaMain	,;
 				nOpc 		,;
 				cGrupo		,; 
 				aInfoEventos;
 			 )
Return (.T.)                 

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fRestartList	 ³ Autor ³Mauricio MR      ³ Data ³27/06/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Remonta na Tela a Lista de Opcoes de Eventos/verbas			 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fRestartList(bChangeList)									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/     
Static Function fRestartList(bChangeList)
//Atualiza ListBox 			 
oListBox:SetArray(aListBox)
oListBox:bLine:={ || LineLstBox( oListBox ) }
oListBox:SetFocus()
//oListBox:lModified	:=.T.  
Eval(bChangeList)
oGetSPX:oBrowse:SetFocus() 

lPrimVez := .F. 
Return (.T.)   

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fRefreshList	 ³ Autor ³Mauricio MR      ³ Data ³27/06/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Dar refresh na lista de opcoes de Eventos/Verbas			 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fRefreshList(lPrimVez)     									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/   
Static Function fRefreshList()           


If Type("oListBox") =='O' 
  oListbox:nAt := nSvnAt		
  oListbox:Refresh()
Endif

Return (.T.)



Function ListBoxDados( aCords , oDlg , aListBox , oListBox , aCabec, bChangeList)
Local nPosDado		:= GdFieldPos("PV_DADO", aSPVaHeader)
Local nPosDesc		:= GdFieldPos("PV_DESC", aSPVaHeader)

DEFAULT aCords		:= {030,005,310,140}
DEFAULT aListBox	:= {}
DEFAULT bChangeList	:= { || .T. }

@ aCords[1],aCords[2] LISTBOX oListBox FIELDS HEADERS ; 
									 OemToAnsi( aCabec[nPosDado	, 1] )			 			,;	//02 - "Data Ref."
									 OemToAnsi( aCabec[nPosDesc		, 1] )		 	  		 ;	//17 - "Motivo do Afastamento"
							COLSIZES ; 
									 GetTextWidth(0,Replicate("B",aCabec[nPosDado	, 4]))	 ,;	//02 - "Data Ref."
									 GetTextWidth(0,Replicate("B",aCabec[nPosDesc	, 4]))	 ;	//02 - "Data Ref."
							SIZE aCords[4],aCords[3] OF oDlg PIXEL ON CHANGE Eval( bChangeList ) 
oListBox:SetArray(aListBox)
oListBox:bGotFocus:={||fRefreshList()}
oListBox:bLine:={ || LineLstBox( oListBox ) }
//oListBox:bLine		:={ || aListBox[oListBox:nAt,1], aListBox[oListBox:nAt,2] }
Return (NIL)   



/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fGeraDados		 ³ Autor ³Mauricio MR      ³ Data ³27/06/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Alimenta o aCols de Eventos/Verbas a partir dos eventos/ver- ³
³          ³bas escolhidos pelo usuario de uma Lista                   	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fGeraDados(aSPVaHeader, aSPVaCols, nUsado, aInfoEventos, 	 ³
³          ³           cGrupo, oGet) 									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T.                                                    	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/ 

Static Function fGeraDados(aSPVaHeader, aSPVaCols, nUsado, aInfoEventos, cGrupo, oGet)

Local aRetorno	:= {}  
Local aNew		:= {}
Local nX        := 0     
Local nPosDado	:=GdFieldPos("PV_DADO",aSPVaHeader)
Local nPosDesc	:=GdFieldPos("PV_DESC",aSPVaHeader)
Local nPosGrupo	:=GdFieldPos("PV_GRUPO",aSPVaHeader)
Local naCols	:= Len(aSPVaCols)
Local nElem		:= 0
Local nDeleted  := 0 

 
Private cVar	:= ''
nDeleted			:= ( nUsado + 1 )

//-- Leia os Codigos e Cria String
Aeval(aSPVaCols,{|x| If( !x[nDeleted],cVar+=x[nPosDado],Nil) } )

//-- Passa a String para Montagem e Selecao de Opcoes de Codigos                
aRetorno:=fEventos("cVar",,aInfoEventos)  


//-- Obtem o Total de Elementos Selecionados
nElem:= Len(aRetorno)     

//-- Transfere Codigos Informados para o aCols
IF ( nElem == naCols )
	For nX := 1 To nElem
		aSPVaCols[ nX , nDeleted ]	:= .F.      
		aSPVaCols[ nX , nPosDado] 	:= aRetorno[nX, 1]
		aSPVaCols[ nX , nPosDesc] 	:= aRetorno[nX, 2]
	    aSPVaCols[ nX , nPosGrupo] 	:= cGrupo
	Next nRecno
ElseIF ( nElem < naCols )
	For nX := 1 To nElem
		aSPVaCols[ nX , nDeleted ]:= .F.      
		aSPVaCols[ nX , nPosDado] := aRetorno[nX, 1]
		aSPVaCols[ nX , nPosDesc] := aRetorno[nX, 2]			     
	    aSPVaCols[ nX , nPosGrupo]:= cGrupo
	Next nRecno

	For nX := nX To naCols
	    aSPVaCols[ nX , nDeleted ]:=.T.
	Next nX
Else
	For nX := 1 To naCols
		aSPVaCols[ nX , nDeleted ]:= .F.      
		aSPVaCols[ nX , nPosDado] := aRetorno[nX, 1]
		aSPVaCols[ nX , nPosDesc] := aRetorno[nX, 2]		     
	    aSPVaCols[ nX , nPosGrupo]:= cGrupo
	Next nRecno  
	For nX := nX To nElem        
	    aNew := GdRmkaCols( aSPVaHeader , .F.)
	    aNew[ 1 , nDeleted ]:= .F.      
		aNew[ 1 , nPosDado] := aRetorno[nX, 1]
		aNew[ 1 , nPosDesc] := aRetorno[nX, 2] 
	    aNew[ 1 , nPosGrupo]:= cGrupo		     
		AADD(aSPVaCols,aNew[1])
	Next nRecno
Endif                  

Eval(oGetSPX:oBrowse:bChange) 

Return (.T.)


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fEventos		 ³ Autor ³Mauricio MR      ³ Data ³27/06/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Cria Dialogo com os Eventos do Alias da tabela de codigos    ³
³          ³aTabCod[1].                                             	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fEventos(MvRet, l1Elem, aTabCod)							 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³aDesc->Array com a descricao dos eventos               	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/ 
Static Function fEventos(MvRet, l1Elem, aTabCod)

Local aArea		:= GetArea()    
Local aDesc		:= {} 
Local cCodigo	:= ""
Local cTitulo	:= ""  
Local cAlias	:= aTabCod[1]
Local MvPar
Local MvParDef	:= ""
Local MvRetor	:= ""
Local MvParam	:= ""
Local nAuxFor	:= 1  
Local nElem		:= 0  
Local nFor		:= 0  
Local nI		:= 0
Local oWnd
Local cPrefixo	:= ( PrefixoCpo( cAlias ) + "_" )

Private aOpc		:= {}

l1Elem := If (l1Elem = Nil , .F. , .T.)

oWnd := GetWndDefault()

MvPar	:=&(mvRet)		// Carrega Nome da Variavel do Get em Questao

If !l1Elem
	For nFor := 1 TO Len(alltrim(MvPar))
		Mvparam += Subs(MvPar,nAuxFor,3)
		MvParam += Replicate("*",3)
		nAuxFor := (nFor * 3) + 1
	Next
Endif
mvPar 	:= MvParam

dbSelectArea(cAlias)
If DbSeek(cFilial)
	While !Eof() .and. cFilial == (cAlias)->&(cPrefixo+'FILIAL')
	    cCodigo:=(cAlias)->&(cPrefixo+aTabCod[3])
		Aadd(aOpc,cCodigo + " - " + Alltrim(Eval( (cAlias)->(aTabCod[2]), cCodigo) ) )
		MvParDef+=Left(cCodigo,3)
		dbSkip(	)
	Enddo
Endif

f_Opcoes(@MvPar,cTitulo,aOpc,MvParDef,12  ,70   ,l1Elem,3,9999)


For nI=1 to len(mvpar) step 3
	If substr(mvpar,nI,3) # "***"
	    cCodigo:= substr(mvpar,nI,3)
		mvRetor += cCodigo
		If !EMPTY( ( nElem:=Ascan( aOpc, { |x| Substr(x,1,3) == cCodigo  } ) ) )
		   AADD(aDesc,{cCodigo, Substr(aOpc[nElem],7)})
		Endif   
	Endif
Next

&MvRet :=alltrim(Mvretor)						// Devolve Resultado

RestArea(aArea)

Return (aDesc) 




/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona320Grava ³Autor³Mauricio MR           ³ Data ³01/07/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³                                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona3200()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/ 
	
Static Function Pona320Grava(	nOpc		,;	//Opcao de Acordo com aRotina
							 	nReg		,;	//Numero do Registro do Arquivo Pai ( SPU )
							 	aEnchoice	,;	//Campos do Arquivo Pai ( SPU ) Mesma Estrutrua do aHeader
							 	aVirtChoice ,;	//Campos Virtuais do Arquivo Pai ( SPU )
								aSPXaHeader	,;	//Campos do Arquivo Filho ( SPX )
							 	aSPXaCols	,;	//Itens do Arquivo Filho ( SPX )
							 	aSPXVirtGd	,;	//Campos Virtuais do Arquivo Filho ( SPX )
							 	aSPXRecnos	,;	//Recnos do Arquivo Filho ( SPX )
							 	nSPXUsado	,;	//Campos em uso na GetDados ( SPX )	 
							 	aSPVaHeader	,;	//Campos do Arquivo Filho ( SPV )
							 	aSPVaMain	,;	//Itens do Arquivo Filho ( SPV )
							 	aSPVVirtGd	,;	//Campos Virtuais do Arquivo Filho ( SPV )
							 	aSPVRecnos	,;	//Recnos do Arquivo Filho ( SPV )
							 	nSPVUsado	 ;	//Campos em uso na GetDados ( SPV )
							  )
                                   
Local cMsgErr		:= ""
Local cGrupo		:= ''			
Local lLock			:= .F.
Local nChoice		:= 0
Local nChoices		:= 0
Local nSPXDeleted	:= 0
Local nSPVDeleted	:= 0
Local nLenaSPXaCols	:= 0
Local nLenaSPXRecnos:= 0
Local nLenaSPVaCols	:= 0  
Local nLenaSPVRecnos:= 0
Local nSPVRecno		:= 0
Local nSPXRecno		:= 0

Local nX			:= 0
Local nY			:= 0
 

Local aSPVaCols		:= {}
Local aSPXKey		:= {}
Local aSPXField		:= {}
Local aSPVKey		:= {}
Local aSPVField		:= {}

nChoices			:= Len(		aEnchoice	)

nLenaSPVRecnos		:= Len(aSPVRecnos)  

nLenaSPXaCols		:= Len(aCols) 
nLenaSPXRecnos		:= Len(aSPXRecnos)
	         
nSPXDeleted	:= 	(nSPXUsado+1)
nSPVDeleted	:=	(nSPVUsado+1)	

aSPXKey		:= {'SPU->PU_FILIAL'	,'SPU->PU_CODIGO'					}	
aSPXField	:= {'PX_FILIAL'			,'PX_CODIGO'						}
aSPVKey		:= {'SPX->PX_FILIAL'	,'SPX->PX_CODIGO'	,'SPX->PX_GRUPO'}
aSPVField	:= {'PV_FILIAL'			,'PV_CODIGO'		,'PV_GRUPO'		}

nPosGrupo	:= GdFieldPos("PX_GRUPO"	,aSPXaHeader)

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Se for Exclusao ( nOpc == 5 )								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
IF ( nOpc == 5 )
	IF !Empty( nReg )
		Begin Transaction
			SPU->( dbGoto( nReg ) )
			IF RecLock( "SPU" , .F. , .F. )       
				For nSPXRecno := 1 To nLenaSPXRecnos                  
					SPX->( dbGoto( aSPXRecnos[ nSPXRecno ] ) )  
					IF !RecLock( "SPX" , .F. , .F. )
						Loop
					EndIF
					For nSPVRecno := 1 To nLenaSPVRecnos
						SPV->( dbGoto( aSPVRecnos[ nSPVRecno ] ) )
						IF !RecLock( "SPV" , .F. , .F. )
							Loop
						EndIF
						IF !SPV->( FkDelete( @cMsgErr ) )
							SPV->( RollBackDelTran( cMsgErr ) )
						EndIF
						SPV->( MsUnLock() )
						SPV->( FKCOMMIT() )
					Next nLenaSPVRecnos 
					IF !SPX->( FkDelete( @cMsgErr ) )
						SPX->( RollBackDelTran( cMsgErr ) )
					EndIF
					SPX->( MsUnLock() )
					SPX->( FKCOMMIT() )
				Next nLenaSPXRecnos				
				IF !SPU->( FkDelete( @cMsgErr ) )
					SPU->( RollBackDelTran( cMsgErr ) )
				EndIF
				SPU->( MsUnLock() )
				SPU->( FKCOMMIT() )
				SPU->( EvalTrigger() )
				SPV->( EvalTrigger() ) 
				SPX->( EvalTrigger() )
			EndIF	
		End Transaction
	EndIF
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Se for Inclusao/Alteracao ( nOpc == 3 .or. nOpc == 4 )	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
ElseIF ( nOpc == 3 .or. nOpc == 4 )
	Begin Transaction
		IF !Empty( nReg )
			SPU->( dbGoto( nReg ) )
			lLock := RecLock( "SPU" , .F. , .F. )
		Else
			lLock := RecLock( "SPU" , .T. , .F. )
			SPU->PU_FILIAL:= FWxFilial("SPU")
		EndIF
		IF !( lLock )
			Break
		EndIF
		For nChoice := 1 To nChoices
			IF ( aScan( aVirtChoice , { |cCpo| ( cCpo == aEnchoice[ nChoice , 02 ] ) } ) == 0.00 )
				SPU->( &( aEnchoice[ nChoice , 02 ] ) ) := &( "M->"+aEnchoice[ nChoice , 02 ] )
			EndIF
		Next nChoice
		SPU->( MsUnLock() )    
		SPU->( FKCOMMIT() )    		
		//-- Corre Todos os Grupos do Grafico
		For nX:=1 To nLenaSPXaCols       
		     
			 //-- Obtem a Identificacao do Grupo
		     cGrupo 		:= aSPXaCols[nX, nPosGrupo]
		        
		     //-- Obtem os Lancamentos de itens do Grafico
		     aElem		:={} //Posicao de referencia a linha do ArrayMain para verificar a existencia fisica do registro  
		     aSPVaCols	:={} //Lancamentos de itens do grafico
			 Pn320GetaCols () // Restarta a varivel static
			 Pn320GetaCols(		aSPVaHeader	,;
								@aSPVaCols	,;
								@aSPVaMain	,;
								nOpc 		,;
								cGrupo		,;
								aInfoEventos,;
								.F.         ;
							 )   
	         
	         //-- Obtem a Qtde de Itens do Grupo   
	         nLenaSPVaCols	:= Len(aSPVaCols)
		     
		     //-- Se o Grupo Pre-existe
		     If nX <= nLenaSPXRecnos
		        
		        //-- Poisicio no Grupo e Bloqueia o mesmo
		        SPX->(DbGoto(aSPXRecnos[ nX ]))
		        IF !RecLock('SPX',.F.,.T.)
		        	Loop
		        EndIF
		        
		        //-- Se o Grupo estiver Deletado
		        If aSPXaCols[nX, nSPXDeleted]
		           //-- Corre Todos os Itens do Grupo
		           For nY:= 1 To nLenaSPVaCols     
		               //-- Obtem a Linha do ArrayMain de itens para o item lido  
		               //-- Que corresponde a elemento no array aRecnos que contem o numero
		               //-- registro a ser referenciado.
		               nSPVRecno:=aElem[nY]    
		               //-- Se o Item Pre-Existe
		               If nSPVRecno <= nLenaSPVRecnos
		                  SPV->(DbGoto(aSPVRecnos[ nSPVRecno ]))
		        		  IF RecLock('SPV',.F.,.T.)      
								IF !SPV->( FkDelete( @cMsgErr ) )
									SPV->( RollBackDelTran( cMsgErr ) )
								EndIF
		        		  		SPV->(MsUnlock())
	        		  			SPV->( FKCOMMIT() )
		        		  EndIF		
		               Endif
		           Next nY
		           
		           //-- Deleta o Grupo e desbloqueia
					IF !SPX->( FkDelete( @cMsgErr ) )
						SPX->( RollBackDelTran( cMsgErr ) )
					EndIF
		           //--Destrava Pai
               	   SPX->(MsUnlock())
             	   SPX->( FKCOMMIT() )
		        Else    
		            //-- Se o Grupo nao estiver deletado Grava
		        	fGrava('SPX', aSPXaHeader, aSPXaCols, aSPXVirtGd, nX, aSPXField, aSPXKey)
		        	//-- Destrava o Grupo
			        SPX->(MsUnlock())
	        		SPX->( FKCOMMIT() )
	        		//-- Corre Todos os itens do Grupo
		        	For nY:= 1 To nLenaSPVaCols 
		        	    nSPVRecno:=aElem[nY]    
		                //-- Se o item Pre-existe
		                If nSPVRecno <= nLenaSPVRecnos
		                   SPV->(DbGoto(aSPVRecnos[ nSPVRecno ])) 
		                   IF RecLock('SPV',.F.,.T.)      
								IF !SPV->( FkDelete( @cMsgErr ) )
									SPV->( RollBackDelTran( cMsgErr ) )
								EndIF
		                   EndIF		
		        		Endif	 
		        		SPV->(MsUnlock())
	        			SPV->( FKCOMMIT() )
                    Next nY
		        	
		        	//-- Corre Todos os itens do Grupo
		        	For nY:= 1 To nLenaSPVaCols     
		                //-- Se nao Deletado
		                If !aSPVaCols[nY, nSPVDeleted]
			        	   //-- Se o for novo item Cria-o
			               IF RecLock('SPV',.T.,.T.)
               					SPV->PV_FILIAL:= FWxFilial("SPV")      
		        		   		fGrava('SPV', aSPVaHeader, aSPVaCols, aSPVVirtGd, nY, aSPVField, aSPVKey)
  	  		        	   		SPV->(MsUnlock())
  		        	   			SPV->( FKCOMMIT() )
  	  		        	   	EndIF	
		               Endif
		            Next nY
		        Endif             
		        
		       
		     Else  
		        //-- Se o Pai NAO estiver Deletado
		        If !aSPXaCols[nX, nSPXDeleted]
			        //-- Cria Novo Grupo
			        IF !RecLock('SPX',.T.,.T.)
			        	Loop
			        EndIF
			         //-- Grava o Pai
         			SPX->PX_FILIAL:= FWxFilial("SPX")
			        fGrava('SPX', aSPXaHeader, aSPXaCols, aSPXVirtGd, nX,  aSPXField, aSPXKey)
		        	//--Destrava Pai
               		SPX->(MsUnlock())
					SPX->( FKCOMMIT() )
		        	//-- Corre Todos os itens do grafico
		        	For nY:= 1 To nLenaSPVaCols
		                //-- Se Nao Deletado Grava o Item
						If !aSPVaCols[nY, nSPVDeleted]
				           	IF RecLock('SPV',.T.,.T.)      
	           					SPV->PV_FILIAL:= FWxFilial("SPV")
				        		fGrava('SPV', aSPVaHeader, aSPVaCols, aSPVVirtGd, nY, aSPVField, aSPVKey)
				        		SPV->(MsUnlock())	
			        			SPV->( FKCOMMIT() )		        		
				        	EndIF	
			        	Endif	
		            Next nY
               				        		
		        Endif   
		     Endif   
		Next nX	                     
		
		SPU->( EvalTrigger() ) 
		SPX->( EvalTrigger() )
		SPV->( EvalTrigger() )
	End Transaction
EndIF

Return (NIL)

Static Function fGrava(cAlias	, aHeader	, aCols		, aVirtual		, nRecno,	aCampo	, aChave	)
Local lRet		:= .F.
Local nX		:=	0
Local naChave	:= Len(aChave)  
Local nHeaders	:= Len(aHeader)
Local nHeader	:= 0


For nX:= 1 To naChave
     (cAlias)->( &(aCampo[nX]) ):=&( aChave[nX] )
Next nX   
For nHeader := 1 To nHeaders
	IF ( aScan( aVirtual , { |cCpo| ( cCpo == aHeader[ nHeader , 02 ] ) } ) == 0.00 )
		(cAlias)->( &( aHeader[ nHeader , 02 ] ) ) := aCols[ nRecno , nHeader ]
	EndIF
Next nHeader

	
Return (lRet)


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fLiberaGet	  	 ³ Autor ³Mauricio MR      ³ Data ³22/07/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Libera a Digitacao de Grupo e Eventos correspondentes.       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fLiberaGet()		  										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function fLiberaGet() 
Local aKeys	:= GetKeys()
Local lRet		:=.T.

If !PnVSPUAlias(M->PU_ALIAS,.F.) .OR. !PnVSPUCampo(M->PU_CAMPO)   
   lRet:= .F.
Endif    

RestKeys( aKeys , .T. )

Return (lRet)
    

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fOrdena		  	 ³ Autor ³Mauricio MR      ³ Data ³22/07/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Cria Dialogo para Escolha e Ordenacao de uma lista de Campos.³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fOrdena(aChave, cVar)  										 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function fOrdena(aChave,cVar)
Local cTexto	:= 	Space(3)
Local cPrefixo	:= 	''
Local cCampo	:= 	''
Local nChave	:= 	0    
Local nElem		:=	0
Local nPosFile	:=	0
Local nX		:= 	0
Local nOpt1		:= 	0
Local oList,oOk,oNo
Local oDlg, oGroup1, oGroup0, oFont, oFont1, oGetOrdem, oAcima, oAbaixo, oBmp1, oBmp2

Local oPanelTop 
Local oPanelBottom 
Local oPanelCampos
Local oPanelBotoes
Local oPanelBt1
Local oPanelBt2
Local oPanelBt3
Local aAdvSize				:= {}
Local aInfoAdvSize			:= {}
Local aObjSize				:= {}
Local aObjCoords			:= {}

Local aAdv1Size				:= {}
Local aInfo1AdvSize			:= {}
Local aObj1Size				:= {}
Local aObj1Coords			:= {}  

Local aAdv12Size			:= {}
Local aInfo12AdvSize		:= {}
Local aObj12Size			:= {}
Local aObj12Coords			:= {}  

Local aAdv2Size				:= {}
Local aInfo2AdvSize			:= {}
Local aObj2Size				:= {}
Local aObj2Coords			:= {} 

Local oGroup2
Local oGroup3

DEFAULT	 aChave		:= {	{.F.,'FILIAL'	,	''	},;
							{.F.,'MAT'	  	,	''	},;
							{.F.,'CC'	  	,	''	};
						}
				

oOk := LoadBitmap( GetResources(), "Enable" )
oNo := LoadBitmap( GetResources(), "LBNO" )

nChave:=Len(aChave)

//-- Preenche Descricao do Campo
cPrefixo:= ( PrefixoCpo( M->PU_ALIAS) + "_" )         
If aCabecFiles <> NIL 
	 If ( nPosfile:= Ascan(aCabecFiles,{|x| x[1] == M->PU_ALIAS } )  ) > 0.00 
		For nX:=1 to Len(aChave)
	    	cCampo:= (cPrefixo+aChave[nX,2])
			If (nElem:=ascan(aCabecFiles[nPosFile,2],{|x| x[2] == cCampo })) > 0
			   aChave[nX,3]:=aCabecFiles[nPosFile,2,nElem,1]
			Endif
		Next nX 
	 Endif	
Endif

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Monta as Dimensoes dos Objetos         					   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aAdvSize		:= MsAdvSize(,.T.,380)
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )				//1-Listbox - Setas
aAdd( aObjCoords , { 000 , 030 , .T. , .F. } )				//2-Rodape
aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

//1-Divisao Linha 1-Listbox - Setas
aAdv1Size		:= aClone(aObjSize[1])
aInfo1AdvSize	:= { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 5 , 5 }
aAdd( aObj1Coords , { 000 , 000 , .T. , .T. , .T. } )  	//1-ListBox
aAdd( aObj1Coords , { 017 , 000 , .F. , .T. } )			//2-Setas
aObj1Size		:= MsObjSize( aInfo1AdvSize , aObj1Coords,,.T. )     


//1-2-Divisao Coluna 2-Setas
aAdv12Size		:= aClone(aObj1Size[2])
aInfo12AdvSize	:= { aAdv12Size[2] , aAdv12Size[1] , aAdv12Size[4] , aAdv12Size[3] , 5 , 5 }
aAdd( aObj12Coords , { 000 , 000 , .T. , .T. } )  
aAdd( aObj12Coords , { 000 , 000 , .T. , .T. } )
aAdd( aObj12Coords , { 000 , 000 , .T. , .T. } )
aAdd( aObj12Coords , { 000 , 000 , .T. , .T. } )
aAdd( aObj12Coords , { 000 , 000 , .T. , .T. } )
aObj12Size		:= MsObjSize( aInfo12AdvSize , aObj12Coords )     


//2-Divisao Linha 2-Rodape
aAdv2Size		:= aClone(aObjSize[2])
aInfo2AdvSize	:= { aAdv2Size[2] , aAdv2Size[1] , aAdv2Size[4] , aAdv2Size[3] , 5 , 5 }
aAdd( aObj2Coords , { 000 , 000 , .T. , .T. } )  
aAdd( aObj2Coords , { 000 , 000 , .T. , .T. } )
aAdd( aObj2Coords , { 000 , 000 , .T. , .T. } )
aAdd( aObj2Coords , { 000 , 000 , .T. , .T. } )
aAdd( aObj2Coords , { 000 , 000 , .T. , .T. } )
aObj2Size		:= MsObjSize( aInfo2AdvSize , aObj2Coords,,.T. )

DEFINE FONT oFont1  NAME "Arial" BOLD	
DEFINE FONT oFont   NAME "Arial"         
DEFINE MSDIALOG oDlg FROM aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] TITLE OemToAnsi(STR0042) OF oMainWnd PIXEL//"Escolha de Ordem"

    //Campos
	@ aObj1Size[1,1],aObj1Size[1,2] LISTBOX oList 	FIELDS  HEADER 	'' ,OemToAnsi(STR0043),OemToAnsi(STR0044)	 ; //"Campo"##"Descricao"			;
							  	ON DBLCLICK (	fTroca(@oList, @aChave, oList:nAT, oOk, oNo)	,;
	             								fCriaTexto(@oGetOrdem, @cTexto, aChave))		;
											   SIZE aObj1Size[1,3],aObj1Size[1,4] 	OF oDlg PIXEL
	oList:SetArray(aChave)
	oList:bLine := { ||{ If(aChave[oList:nAt,1], oOk, oNo),aChave[oList:nAt,2], aChave[oList:nAt,3]} }   
	oList:Refresh() 

    //Botoes 
	@ aObj12Size[2,1] , aObj12Size[2,2] BITMAP oAcima	RESOURCE 'PMSSETAUP' NO BORDER SIZE 15,20 OF oDlg ON CLICK (fMove(1, @oList, @aChave, oOk, oNo),	fCriaTexto(@oGetOrdem, @cTexto, aChave)) FONT oFont1 PIXEL		//"Acima"
	oAcima:CTOOLTIP := OemToAnsi( STR0040) //##"Acima"		
	

	@ aObj12Size[4,1] , aObj12Size[4,2] BITMAP oAbaixo RESOURCE 'PMSSETADOWN' NO BORDER SIZE 15,20 OF oDlg ON CLICK (fMove(2, @oList, @aChave, oOk, oNo),	fCriaTexto(@oGetOrdem, @cTexto, aChave)) FONT oFont1 PIXEL		//"Abaixo"
	oAbaixo:CTOOLTIP := OemToAnsi( STR0041) //##"Abaixo"		
	    
    //Ordem
	@ aObj2Size[1,1] , aObj2Size[1,2] SAY		OemToAnsi(STR0038)		SIZE 39, 7		OF oDlg	PIXEL FONT oFont COLOR CLR_BLUE //"bmpord1"
	@ aObj2Size[2,1] , aObj2Size[2,2] MSGET	oGetOrdem Var cTexto  	SIZE 120,5  	OF oDlg	PIXEL FONT oFont When .F.

	 
 
ACTIVATE DIALOG oDlg CENTERED ON INIT (fCriaTexto	(@oGetOrdem, @cTexto, aChave),;
										EnchoiceBar	(oDlg,	{|| nOpt1:=1,oDlg:End() },;
											     			{|| nOpt1:=0,oDlg:End()}))
SETAPILHA()

If nOpt1 == 1
   cVar:= PAD(cTexto,Len(cVar))
Endif

DeleteObject(oOk)
DeleteObject(oNo)

Return  

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fMove 		  	 ³ Autor ³Mauricio MR      ³ Data ³22/07/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Assinala/Nao Assinala itens da lista.				         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fMove(nMov, oList, aArray, oOk, oNo) 	 					 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Static Function fMove(	nMov		,;    //Movimento a ser Executado
 						oList		,;    //Objeto List 
  						aArray		,;    //Array correspondente com as Opcoes  
   						oOk			,;    //Objeto de Assinalar    
    					oNo			;     //Objeto de Nao Assinalar
    				 )
Local aAux 	:= {}
Local nElem := Len( aArray )
Local nEstou:= oList:nAt

IF nMov == 1			//--	Inverter Acima
	IF nEstou # 1   	//-- 	Se nao se trata do Primeiro Elemento da Lista                                               
		aAux						:= aClone( aArray[ nEstou		] )
		aArray[ nEstou      ]		:= aClone( aArray[ nEstou - 1 ] )
		aArray[ nEstou - 1  ]		:= aClone( aAux )
		oList:nAt					:= nEstou - 1
	EndIF
ElseIF nMov == 2		//--	Inverter Abaixo
	IF 	nEstou # nElem 	//-- 	Se nao se trata do ultimo elemento da Lista
		aAux 						:= aClone( aArray[ nEstou ]	  )
		aArray[ nEstou      ]		:= aClone( aArray[ nEstou + 1 ] )
		aArray[ nEstou + 1  ]		:= aClone( aAux )
		oList:nAt					:= nEstou + 1
	EndIF
Endif
nSvnAt:= oList:nAt
oList:SetArray(aArray) 
oList:bLine := { ||{ If(aArray[oList:nAt,1],oOk,oNo),aArray[oList:nAt,2], aArray[oList:nAt,3]} }   
oList:Refresh()   
oList:nAt:= nSvnAt

Return .T.

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fTroca 		  	 ³ Autor ³Mauricio MR      ³ Data ³22/07/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Checa/Nao checa itens da lista.						         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fTroca(oList, aArray, nEstou, oOk, oNo) 					 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function fTroca( 	oList		,; //Objeto List
							aArray		,; //Array contendo os elementos para troca
						   	nEstou 		,; //Posicao do Elemento Atual
						   	oOk			,; //Obj Assinala
						   	oNo			;  //Obj Nao Assinala
					  ) 

	                   
aArray[nEstou,1]	:= 	If(aArray[nEstou,1],.F.,.T.)
oList:SetArray(aArray)
oList:bLine 		:= { ||{ If(aArray[oList:nAt,1],oOk,oNo),aArray[oList:nAt,2], aArray[oList:nAt,3]} }   
oList:Refresh()

Return 

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fCriaTexto   	 ³ Autor ³Mauricio MR      ³ Data ³22/07/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Concatena os campos de uma lista em na forma de texto.       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fCriaTexto(oGet, cVar, aArrayList)							 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function fCriaTexto(	oGet,;          //Objeto MSGET  
							cVar,;          //Variavel Caracter do Objeto o Get
							aArrayList;     //Array da Lista de Opcoes	
						 )
Local cTexto 	:= ''               
Local nElem		:=	0

aEval(aArrayList, {|x|nElem++,if( x[1],( cTexto+= if( Empty(cTexto), '', '+' ) + x[2]), Nil)})

cVar:= If(!Empty(cTexto),cTexto,Space(10))
oGet:Refresh()                     

Return Nil

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³PN320ICAMPO   	 ³ Autor ³Mauricio MR      ³ Data ³22/07/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Exbe campo virtual sobre Campo do arquivo				     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PN320ICAMPO()												 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
function PN320ICAMPO()
Local cCpoRet			:= SPACE(10)
Local cTexto			:=''
Local aCpos 			:= {}
Local aTitulos 			:= {}
Local aOpcoes			:= {}
Local aSvItens			:= {} 
Local nCampo			:= 0
Local nPosFile			:= 0.00
Local nItem				:= 0.00
Local cAlias			:= SPU->PU_ALIAS


                          

If aCabecFiles == Nil
   aCabecFiles:={}
Endif 
                               
//-- Posiciona no Alias
If !( nPosfile:= Ascan(aCabecFiles,{|x| x[1] == cAlias } )  ) > 0.00 
   AADD( aCabecFiles, { cAlias, GdMontaHeader( NIL , NIL , NIL , cAlias , NIL , NIL,.T. ) } )
   nPosFile:= Len(aCabecFiles)
Endif                        

//-- Obtem somente os Campos do Alias que sejam numericos e cria arrays com o nome do campo e sua descricao
Aeval( aCabecFiles[nPosFile,2], { |x| If( x[8] == "N", ( AADD(aCpos, ALLTRIM(UPPER( x[2] )) ), AADD(aTitulos, x[1] )), NIl ) } )

If !Empty( ( nCampo:=Ascan(aCpos, ALLTRIM(UPPER(SPU->PU_CAMPO))) ) )
	cTexto:= aTitulos[nCampo]
Endif

Return (cTexto)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³PN320ITIPO   	 ³ Autor ³Mauricio MR      ³ Data ³22/07/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Exbe campo virtual sobre Tipo do Grafico				     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PN320ITIPO()												 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³Ver abaixo												 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA320                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
function PN320ITIPO()
Local cCpoRet			:= SPACE(10)
Local cTexto			:= ''
Local aGraficos 		:= {}
Local aTitulos 			:= {}
Local aOpcoes			:= {}

aOpcoes	:= fMontaOpcGraf()[1]

Aeval(aOpcoes,{|x| AADD(aGraficos, x[1] )})
Aeval(aOpcoes,{|x| AADD(aTitulos,  x[2] )})

If !Empty( ( nCampo:=Ascan(aGraficos, VAL(SPU->PU_TIPO) ) ) )
	cTexto:= aTitulos[nCampo]
Endif

Return (cTexto)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ MenuDef		³Autor³  Luiz Gustavo     ³ Data ³30/11/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Isola opcoes de menu para que as opcoes da rotina possam    ³
³          ³ser lidas pelas bibliotecas Framework da Versao 9.12 .      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA300                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Static Function MenuDef()

	Local  aRotina		:= {;
						   		{ STR0004 ,'PesqBrw' 	, 0, 1, ,.F.} ,; // "Pesquisar"
								{ STR0005 ,'Pn320Atu'	, 0, 2} ,; // "Visualizar"
								{ STR0006 ,'Pn320Atu'	, 0, 3} ,; // "Incluir"
								{ STR0007 ,'Pn320Atu'	, 0, 4} ,; // "Alterar"
								{ STR0008 ,'Pn320Atu'	, 0, 5} ,; // "Excluir" 
								{ STR0011, 'Ponm330Gra'	, 0, 6} ; 	// "Grafico"
							}

 Return aRotina
