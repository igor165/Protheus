#INCLUDE "PROTHEUS.CH"
#INCLUDE "PONA010.CH"
#INCLUDE "PONCALEN.CH"

Static lPnaCel := ExistBlock( "PNA010CEL" )
/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³PONA010   ³Autor³Marinaldo de Jesus       ³ Data ³27/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Cadastro de Marca‡”es                                       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                    ³
ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³            ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL           ³
ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Programador ³Data      ³BOPS       ³Motivo da Alteracao                ³
ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Cecilia Car.³29/05/14  ³TPQAN3     ³Incluido o fonte da 11 para a 12 e ³
³            ³14/06/11  ³           ³efetuada a limpeza.                ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/

Function PONA010( cAlias , nReg , nOpc , aNewAdvSize , lMinSize )

Local aSvKeys		  := GetKeys()
Local aArea			:= GetArea()
Local aAreaSRA		:= SRA->( GetArea() )
Local aAreaSP8		:= SP8->( GetArea() )
Local aAreaSPC		:= SPC->( GetArea() )
Local aIndexSRA		:= {}
Local cFiltraSRA	:= ""
Local cFunName		:= Upper( AllTrim( FunName() ) )

DEFAULT nOpc		:= 4
DEFAULT aNewAdvSize	:= MsAdvSize()
DEFAULT lMinSize	:= .F.

Private lIsPona010	:= ( cFunName == "PONA010" )

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³So Executa se o Modo de Acesso dos Arquivos do Ponto estiverem OK e o Ca³
	³dastro de Funcionario Nao Estiver Vazio								 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( ValidArqPon() .and. ChkVazio("SRA") )
		Break
	EndIF

	IF ( lIsPona010 )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Define Array contendo as Rotinas a executar do programa      ³
		³ ----------- Elementos contidos por dimensao ------------     ³
		³ 1. Nome a aparecer no cabecalho                              ³
		³ 2. Nome da Rotina associada                                  ³
		³ 3. Usado pela rotina                                         ³
		³ 4. Tipo de Transa‡„o a ser efetuada                          ³
		³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
		³    2 - Simplesmente Mostra os Campos                         ³
		³    3 - Inclui registros no Bancos de Dados                   ³
		³    4 - Altera o registro corrente                            ³
		³    5 - Remove o registro corrente do Banco de Dados          ³
		³    6 - Legenda                                               ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		
		Private aRotina := MenuDef()
		
		Private bFiltraBrw	:= { || NIL }
		Private cCadastro   := OemToAnsi( STR0006 )	//"Cadastro de Marca‡”es"
	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		cFiltraRh	:= ChkRh( "PONA010" , "SRA" , "1" )
		bFiltraBrw 	:= { || FilBrowse( "SRA" , @aIndexSRA , @cFiltraRH ) }
		Eval( bFiltraBrw )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Chama a Funcao de Montagem do Browse                                   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		mBrowse( 6 , 1 , 22 , 75 , "SRA"  , NIL , NIL , NIL , NIL , NIL , fCriaCor() )
    	/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Deleta o filtro utilizando a funcao FilBrowse                     	 ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		EndFilBrw( "SRA" , aIndexSra )
	Else
		Pona010Mnt( cAlias , nReg , nOpc )
	EndIF

End Sequence
		
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura os Dados de Entrada 											 ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aSvKeys )
RestArea( aAreaSPC )
RestArea( aAreaSP8 )
RestArea( aAreaSRA )
RestArea( aArea )

Return( NIL )
/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010Mnt³ Autor ³Marinaldo de Jesus     ³ Data ³18/06/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³                                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona010Mnt( cAlias , nReg , nOpc )							³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³cAlias = Alias do arquivo                                   ³
³          ³nReg   = Numero do registro                                 ³
³          ³nOpc   = Numero da opcao selecionada                        ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona010Mnt( cAlias , nReg , nOpc )

Local aArea				:= GetArea()
Local aSvKeys			:= GetKeys()
Local aButtons			:= {}
Local aInfoAdvSize		:= {}
Local aObjSize			:= {}
Local aObjCoords		:= {}
Local aSRAHeader		:= {}
Local aSRACols			:= {}
Local aSRAFields		:= {}
Local aSRAAltera		:= {}
Local aSRANotFields		:= {}
Local aSRARecnos		:= {}
Local aSP8GdAltera  	:= {}
Local aSP8GdNaoAlt		:= {}
Local aSP8Recnos		:= {}
Local aSP8NotFields		:= {}
Local aSP8VirtGd		:= {}
Local aSP8VisuGd		:= {}
Local aSP8MemoGd		:= {}
Local aSP8Header		:= {}
Local aSP8Cols			:= {}
Local aSP8Query			:= {}
Local aSP8Dele			:= {}
Local bSP8GdDelOk		:= { || Pona010DelOk( cAlias , nReg , nOpc , @aSP8Dele , @aGdSp8ColR ) }
Local bSP8KeySkip		:= { || .F. }
Local bSet15			:= { || NIL }
Local bSet24			:= { || NIL }
Local bDialogInit		:= { || NIL }
Local bOrdMarc			:= { || NIL }
Local bOrdMarcs			:= { || NIL }
Local bCalend			:= { || NIL }
LocAL bClrOrd			:= { || NIL }
Local bSrtOrd			:= { || NIL }
Local bFiltro			:= { || NIL }
Local bGdSeek			:= { || NIL }
Local cFilSRA			:= ""
Local cCodSRA			:= ""
Local cSRAKeySeek		:= ""
Local cPerg				:= "PNA010"
Local dPerIni			:= Ctod("//")
Local dPerFim			:= Ctod("//")
Local lSelePer			:= .F.
Local lSp8Lock			:= .F.
Local lSpcLock			:= .F.
Local nOpcAlt			:= 0
Local nSRAUsado			:= 0
Local nSP8Usado			:= 0
Local nLoop				:= 0
Local nLoops			:= 0
Local nOpcNewGd			:= IF( ( ( nOpc == 2 ) .or. ( nOpc == 5 ) ) , 0 , GD_UPDATE + GD_DELETE	)
Local oDlg				:= NIL
Local oEnchoice			:= NIL	
Local oGetDados			:= NIL

Private	aGdSp8ColR		:= {}
Private aGdSp8HedR		:= {}
Private aTabPadrao		:= {}
Private aTabCalend		:= {}
Private cLinOKUltKey	:= "__LinOKUltKey__"
Private cBldCldUltKey	:= "__cBldCldUltKey__"
Private lP8PGIniCa		:= .F.

DEFAULT lPnaCel	:= ExistBlock( "PNA010CEL" )
Begin Sequence

 
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Checa o periodo de Apontamento em Relacao ao Pergunte		   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( Pona010PergChk( cPerg , @aTabPadrao , @aTabCalend ) )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica o Periodo Para a Carga das Informacoes			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	//"Deseja selecionar per¡odo?"###
	IF ( lSelePer := MsgNoYes( OemToAnsi( STR0050 ) , cCadastro ) )
		IF !Pergunte( cPerg , .T. )
			Break
		EndIF
		dPerIni := MV_PAR01
		dPerFim := MV_PAR02
	EndIF	

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta os Dados para a Enchoice							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aSRANotFields , "RA_MAT"		)
	aAdd( aSRANotFields , "RA_NOME"		)
	aAdd( aSRANotFields , "RA_SITFOLH"	)
	aAdd( aSRANotFields , "RA_ADMISSA"	)
	aAdd( aSRANotFields , "RA_CATFUNC"	)
	aAdd( aSRANotFields , "RA_CODFUNC"	)
	aAdd( aSRANotFields , "RA_DESCFUN"	)
	aAdd( aSRANotFields , "RA_CC"	   	)
	aAdd( aSRANotFields , "RA_DESCCC"	)
	
	aAdd( aSRANotFields , "RA_REGRA"	)
	aAdd( aSRANotFields , "RA_CRACHA"	)
	aAdd( aSRANotFields , "RA_TNOTRAB"	)
	aAdd( aSRANotFields , "RA_SEQTURN"	)
	aAdd( aSRANotFields , "RA_DESCTUR"	)
	aSRACols		:= SRA->(;
								GDMontaCols(;
												@aSRAHeader,;	//01 -> Array com os Campos do Cabecalho da GetDados
												@nSRAUsado,;	//02 -> Numero de Campos em Uso
												NIL,;			//03 -> [@]Array com os Campos Virtuais
												NIL,;			//04 -> [@]Array com os Campos Visuais	
												NIL,;			//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
												aSRANotFields,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
												@aSRARecnos,;	//07 -> [@]Array unidimensional contendo os Recnos
												NIL,;			//08 -> Alias do Arquivo Pai
												NIL,;			//09 -> Chave para o Posicionamento no Alias Filho
												NIL,;			//10 -> Bloco para condicao de Loop While
												NIL,;			//11 -> Bloco para Skip no Loop While
												NIL,;			//12 -> Se Havera o Elemento de Delecao no aCols 
												NIL,;			//13 -> Se cria variaveis Publicas
												NIL,;			//14 -> Se Sera considerado o Inicializador Padrao
												NIL,;			//15 -> Lado para o inicializador padrao
												NIL,;			//16 -> Opcional, Carregar Todos os Campos
												NIL,;			//17 -> Opcional, Nao Carregar os Campos Virtuais
												NIL,;			//18 -> Opcional, Utilizacao de Query para Selecao de Dados
												NIL,;			//19 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
												NIL,;			//20 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
												NIL,;			//21 -> Carregar Coluna Fantasma e/ou BitMap ( Logico ou Array )
												.T.,;			//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
												NIL,;			//23 -> Verifica se Deve Checar se o campo eh usado
												NIL,;			//24 -> Verifica se Deve Checar o nivel do usuario
												NIL,;			//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols
												NIL,;			//26 -> [@]Array que contera as chaves conforme recnos
												NIL,;			//27 -> [@]Se devera efetuar o Lock dos Registros
												NIL,;			//28 -> [@]Se devera obter a Exclusividade nas chaves dos registros
												NIL,;			//29 -> Numero maximo de Locks a ser efetuado
												NIL,;			//30 -> Utiliza Numeracao na GhostCol
												.F.;			//31 -> Carrega os Campos de Usuario
											);
							 )
	cFilSRA			:= SRA->RA_FILIAL
	cCodSRA			:= SRA->RA_MAT
	cSRAKeySeek		:= ( cFilSRA + 	cCodSRA )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Bloqueia Chaves Logicas de Marcacoes do Funcionario           ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lSp8Lock := Pona010Locks( nOpc , "SP8" ) )
		Break
	EndIF
	IF !( lSpcLock := Pona010Locks( nOpc , "SPC" ) )
       Break
    EndIF
    
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Cria as Variaveis de Memoria e Carrega os Dados Conforme o ar³
	³ quivo														   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nLoop := 1 To nSRAUsado
		aAdd( aSRAFields , aSRAHeader[ nLoop , 02 ] )
		SetMemVar( aSRAHeader[ nLoop , 02 ] , aSRACols[ 01 , nLoop ] , .T. )
	Next nLoop
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Adiciona o Elemento "NOUSER" para que os Campos de Usuario nao³
	³sejam Carregados na MsMGet()								   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aSRAFields , "NOUSER" )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Campos que nao serao carregados					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aSP8NotFields , "P8_FILIAL"	)
	aAdd( aSP8NotFields , "P8_MAT"		)

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta os Dados para a GetDados							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aSP8Query		:= Array( 09 )
	aSP8Query[01]	:= "P8_FILIAL='"+cFilSRA+"'"
	aSP8Query[02]	:= " AND "
	aSP8Query[03]	:= "P8_MAT='"+cCodSRA+"'"
	IF ( lSelePer )
		aSP8Query[04]	:= " AND "
		aSP8Query[05]	:= "P8_DATA>='"+Dtos( dPerIni )+"'"
		aSP8Query[06]	:= " AND "
		aSP8Query[07]	:= "P8_DATA<='"+Dtos( dPerFim )+"'"
	Else
		aSP8Query[04]	:= ""
		aSP8Query[05]	:= ""
		aSP8Query[06]	:= ""
		aSP8Query[07]	:= ""
	EndIF
	aSP8Query[08]	:= " AND "
	aSP8Query[09]	:= "D_E_L_E_T_=' ' "
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Quando For Inclusao Posiciona o SP8 No Final do Arquivo	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nOpc == 3  ) //Inclusao
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Garante que na Inclusao o Ponteiro do SP8 estara em Eof()    ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		PutFileInEof( "SP8" )
	EndIf
	
	IF ( lSelePer )
		bSP8KeySkip := { || P8_DATA < dPerIni .or. P8_DATA > dPerFim }
	EndIF	
	SP8->( dbSetOrder( RetOrdem( "SP8" , "P8_FILIAL+P8_MAT+DTOS(P8_DATA)+STR(P8_HORA,5,2)" ) ) )
   	
	aSP8Cols:= SP8->(GDMontaCols(	@aSP8Header,;
									@nSP8Usado,;
									@aSP8VirtGd,;
									@aSP8VisuGd,;
									NIL,;
									aSP8NotFields,;
									@aSP8Recnos,;
									"SP8",;
									cSRAKeySeek,;
									NIL,;        //10
									bSP8KeySkip,;
									NIL,;
									NIL,;
									NIL,;
									NIL,;
									NIL,;
									NIL,;
									aSP8Query,;
									.F.,;
									.F.,;       //20
									.T.,;
									NIL,;
									NIL,;
									NIL,;
									NIL,;
									NIL,;
									NIL,;
									NIL,;
									NIL,;
									NIL,;		//30
									NIL,;
									nOpc;
								  );
					  )
					  
	aGdSp8HedR	:= aClone( aSP8Header )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³  Ponto-de-Entrada inclusão de novos campos				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lPnaCel )
		IF ( ValType( uRet := ExecBlock("PNA010CEL",.F.,.F.,{ aSP8Cols } ) ) == "A" )
			aSP8Cols := aClone(uRet)
			uRet	 := NIL
		EndIF
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se ja houver informacoes no SP8 nao Permite a Inclusao, apenas³
	³alteracao ou Exclusao										   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpc == 3 ) .and. ( Len( aSP8Recnos ) > 0 ) )
		//"J  Existem Marca‡”es cadastrados para este funcion rio. Selecione a op‡„o de Altera‡„o"
		MsgInfo(  OemToAnsi( STR0007 ) , cCadastro )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Campos Nao Alteraveis            				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nLoop := 1 To Len( aSP8MemoGd )
		aAdd( aSP8GdNaoAlt  , aSP8MemoGd[ nLoop , 02 ] )
	Next nLoop

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Campos que so poderao ser Alterados via Manutencao de   Marca³
	³ coes Normais												   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aSP8GdNaoAlt , "P8_DATA"  )
	aAdd( aSP8GdNaoAlt , "P8_HORA"  )
	aAdd( aSP8GdNaoAlt , "P8_CC"    )
	aAdd( aSP8GdNaoAlt , "P8_FLAG"  )
	aAdd( aSP8GdNaoAlt , "P8_TURNO" )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Campos Editaveis para a GetDados				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nLoop := 1	To nSP8Usado
		SetMemVar( aSP8Header[ nLoop , 02 ] , GetValType( aSP8Header[ nLoop , 08 ] , aSP8Header[ nLoop , 04 ] ) , .T. )
		IF (;
				(;
					( aScan( aSP8VirtGd		, aSP8Header[ nLoop , 02 ] ) == 0 );
					.and.;
		   			( aScan( aSP8VisuGd		, aSP8Header[ nLoop , 02 ] ) == 0 );
		   			.and.;
		   			( aScan( aSP8NotFields	, aSP8Header[ nLoop , 02 ] ) == 0 );
		   			.and.;
		   			( aScan( aSP8GdNaoAlt	, aSP8Header[ nLoop , 02 ] ) == 0 );
		   		);
		   		.or.;
		   		( aScan( aSP8MemoGd	, { |x| aSP8Header[ nLoop , 02 ] == x[1] } ) > 0 );
		  	)
			aAdd( aSP8GdAltera , aSP8Header[ nLoop , 02 ] )
		EndIF
	Next nLoop

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdvSize		:= MsAdvSize()
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 0 }
	aAdd( aObjCoords , { 000 , 060 , .T. , .F. } )
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Bloco para o Botao e Tecla de Atalho de Insercao  de³
	³Ordem na Marcacao										      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bOrdMarc	:= { ||	MsAguarde(;
									{ ||;
											Pona010MarcOrd(	oGetDados	,;
															nOpc		,;
															@aTabPadrao	,;
															@aTabCalend	 ;
														   );
								    },;
								    cCadastro	,;
								    OemToAnsi( STR0030 );	//"Ordenando Marca‡„o..."
								   ),;
						SetKey( VK_F4 , bOrdMarc	);
					}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Bloco para o Botao e Tecla de Atalho de Insercao  de³
	³Ordens nas Marcacoes										  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bOrdMarcs	:= { || MsAguarde(;
									{ ||;
											Pona010OrdMarc(	oGetDados	,;
															nOpc		,;
															@aTabPadrao	 ;
														   );
									},;
									cCadastro	,;
									OemToAnsi( STR0014 );	//"Ordenando Marca‡”es..."
								 ),;
						SetKey( VK_F5 , bOrdMarcs );
					}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Bloco para o Botao e Tecla de Atalho para a Montagem³
	³e Visualizacao do Calendario			 					  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bCalend		:= { ||	MsAguarde(;
									{ ||;
											Pona010CalMarc(	oGetDados	,;
															@aTabPadrao ,;
															@aTabCalend	 ;
										   				  );
									},;
									cCadastro,;
									OemToAnsi( STR0015 );	//"Calend rio de Marca‡”es..."
								  ),;
						SetKey( VK_F6 , bCalend );
					 }

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Bloco para o Botao e Tecla de Atalho para Limpar   o³
	³conteudo do campo P8_ORDEM									  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bClrOrd		:= { ||	MsAguarde(;
									{ ||;
											Pona010ClrOrdM(	oGetDados , nOpc );
									},;
									cCadastro,;
									OemToAnsi( STR0019 );	//"Limpando as Ordens..."
								  ),;
						SetKey( VK_F7 , bClrOrd );
					}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Bloco para o Botao e Tecla de Atalho que indexam  os³
	³lancamentos                								  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSrtOrd		:= { ||	MsAguarde(;
									{ ||;
											Pona010StrOrdM( oGetDados , nOpc );
									},;
									cCadastro,;
									OemToAnsi( STR0032 );	//"Indexando Lan‡amentos..."
								  ),;
						SetKey( VK_F8 , bSrtOrd );
					}
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Bloco para o Botao e Tecla de Atalho que indexam  os³
	³lancamentos                								  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bFiltro		:= { ||	Pona010FltMarc(	oGetDados		,;
										nOpc			,;
										nOpcNewGd		,;
										aTabPadrao		,;
										@aTabCalend		,;
										dPerIni			,;
										dPerFim			,;
										aSP8GdAltera	,;
										bSP8GdDelOk		 ;
									   ),;
						SetKey( VK_F9 , bFiltro );
					}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Botao para a Ordenacao da Marcacao Corrente		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		aAdd(; 
				aButtons	,;
								{;
									"BMPTRG"				,;	
		   							bOrdMarc				,;
		       	   					OemToAnsi( STR0029  )	,;	//"Ordenar Marca‡„o <F4>"
		       	   					OemToAnsi( STR0029  )	 ;	//"Ordenar"    
		           				};
		     )					 	
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Botao para a Ordenacao de Todas as Marcacoes		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		aAdd(; 
				aButtons	,;
								{;
									"AUTOM"					,;	
		   							bOrdMarcs				,;
		       	   					OemToAnsi( STR0013  )	,;	//"Ordenar Marca‡”es <F5>"
		       	   					OemToAnsi( STR0013  )	 ;	//"Ordenar" 
		           				};
		     )					 	
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Botao para a Consulta ao Calendario de Marcacoes	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd(; 
			aButtons	,;
							{;
								"S4SB014N"			,;
   		       					bCalend				,;
   	    	   					OemToAnsi( STR0015 ),;//"Calend rio de Marca‡”es <F6>"
   	    	   					OemToAnsi( STR0015 ) ;//"Calend."  	    	   					
   	        				};
   	     )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Botao para Limpar as Ordens                     	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		aAdd(; 
				aButtons	,;
								{;
									"note"				,;
	   		       					bClrOrd					,;
	   	    	   					OemToAnsi( STR0018  ) 	,;//"Limpar as Ordens <F7>"
	   	    	   					OemToAnsi( STR0018  ) 	; //"Limpar"	  118 	    	   					
	   	        				};
	   	     )
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Botao para Indexar os Lancamentos               	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		aAdd(; 
				aButtons	,;
								{;
									"SDUORDER"				,;
	   		       					bSrtOrd					,;
	   	    	   					OemToAnsi( STR0031  ) 	,;//"Indexar Lan‡amentos <F8>"
	   	    	   					OemToAnsi( STR0031  ) 	;//"Indexar" 131
	   	        				};
	   	     )
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Botao para Filtrar os Lancamentos               	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd(; 
			aButtons	,;
							{;
								"FILTRO"			,;
   		       					bFiltro				,;
   	    	   					OemToAnsi( STR0042 ),;//"Filtrar Lan‡amentos <F9>"
   	    	   					OemToAnsi( STR0042 ) ;//"Filtrar" 142
   	        				};
   	     )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Botao de Pesquisa na GetDados					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bGdSeek	:= { ||	GdSeek( oGetDados ),;
					SetKey( VK_F10 , bGdSeek );
				   }
	aAdd(;
			aButtons	,;
							{;
								"pesquisa" 							,;
	   							bGdSeek								,;
	       	   					OemToAnsi( STR0001 + "...<10>"  )	,;	//"Pesquisar"
	       	   					OemToAnsi( STR0001+ " <10>")		 ;	//"Pesquisar"
	           				};
	     )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para a Teclas <CTRL-O>   ( Button OK da Enchoi³
	³ ceBar )													   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSet15		:= { || IF(; 
								( ( nOpc == 3 ) .or. ( nOpc == 4 ) );					//Inclusao ou Alteracao
								.and.;				
								oGetDados:TudoOk(),;									//Valida as Informacoes da GetDados
								(;
									nOpcAlt := 1,;
									RestKeys( aSvKeys ),;
									oDlg:End();
							 	),;
							 	IF(; 
							 		( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) ,;				//Inclusao ou Visualizacao
							 			(;
							 				nOpcAlt := 0 ,;
							 				.F.;
							 			 ),;	
									(;
										nOpcAlt := IF( nOpc == 2 , 0 , 1 ) ,;		//Visualizacao ou Exclusao
										RestKeys( aSvKeys ),;
										oDlg:End();
							 		);
							 	  );
						   );
					 }
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o  Bloco  para a Teclas <CTRL-X> ( Button Cancel da En³
	³ choiceBar )												   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSet24		:= { || ( nOpcAlt := 0 , RestKeys( aSvKeys ) , oDlg:End() ) }

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para o Init do Dialog						   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bDialogInit := { ||;
						IF( ( nOpc == 3 ) .or. ( nOpc == 4 ) , SetKey( VK_F4 , bOrdMarc	)	, NIL ),;
						IF( ( nOpc == 3 ) .or. ( nOpc == 4 ) , SetKey( VK_F5 , bOrdMarcs )	, NIL ),;
						SetKey( VK_F6 , bCalend  ),;
						IF( ( nOpc == 3 ) .or. ( nOpc == 4 ) , SetKey( VK_F7 , bClrOrd  )	, NIL ),;
						IF( ( nOpc == 3 ) .or. ( nOpc == 4 ) , SetKey( VK_F8 , bSrtOrd )	, NIL ),;
						SetKey( VK_F9  , bFiltro ),;
						SetKey( VK_F10 , bGdSeek ),;
						EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons );
					}
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta o Dialogo Principal para a Manutencao das Marcacoes    ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0006 ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta o Objeto Enchoice para o SRA                      	   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		oEnchoice	:= MsmGet():New(	"SRA"		,;
										nReg		,;
										2			,;
										NIL			,;
										NIL			,;
										NIL			,;
										aSRAFields	,;
										aObjSize[1]	,;
										aSRAAltera	,;
										NIL			,;
										NIL			,;
										NIL			,;
										oDlg		,;
										NIL			,;
										.F.			 ;
									)
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta o Objeto GetDados para o SP8						   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		oGetDados	:= MsNewGetDados():New(	aObjSize[2,1]								,;
											aObjSize[2,2]								,;
											aObjSize[2,3]								,;
											aObjSize[2,4]								,;
											nOpcNewGd									,;
											"Pona010LinOk"								,;
											"Pona010TudOk"								,;
											""											,;
											aSP8GdAltera								,;
											0											,;
											Len(aSP8Cols)								,;
											NIL											,;
											NIL											,;
											bSP8GdDelOk									,;
											oDlg										,;
											aSP8Header									,;
											aSP8Cols									 ;
										 )
	ACTIVATE MSDIALOG oDlg CENTERED ON INIT Eval( bDialogInit )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Restaura as Teclas de Atalho								   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RestKeys( aSvKeys )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Quando Confirmada a Opcao e Nao for Visualizacao Grava ou   Ex³
	³clui as Informacoes do SRA e SP8							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF( nOpcAlt == 1 )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Apenas se nao For Visualizacao              				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
 		IF ( nOpc != 2 )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Gravando/Incluido ou Excluindo Informacoes do SRY/SP8        ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			MsAguarde(;
							{ ||;
									Pona010Grava(;
													nOpc			,;
													nReg			,;
													aSRAHeader		,;
													aSP8Header		,;
													oGetDados:aCols	,;
													aSP8VirtGd		,;
													aSP8Recnos		,;
													aSP8MemoGd		,;
													aTabPadrao		,;
													aTabCalend		 ;
												 );
							 },;
							 cCadastro;
						)
		EndIF
	EndIF

End Sequence         

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Libera Locks						                           ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lSp8Lock )
	FreeLocks( "SP8" , NIL , .T. )
EndIF
IF ( lSpcLock )
	FreeLocks( "SPC", NIL , .T. )
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Restaura os Dados de Entrada								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestArea( aArea )

Return( nOpcAlt )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010LinOk³Autor³Marinaldo de Jesus     ³ Data ³18/06/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³                                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona010LinOk( oBrowse )									    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³ 															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona010LinOk( oBrowse )

Local aCposKey			:= {}
Local cOrdem			:= ""
Local cPeriodo			:= ""
Local cKeyAtu			:= ""
Local dPerIni			:= Ctod("//")
Local dPerFim			:= Ctod("//")
Local dPerIAux			:= Ctod("//")
Local dPerFAux			:= Ctod("//")
Local dDataRef			:= Ctod("//")
Local lLinOk			:= .T.
Local lNotMcIgual		:= ( SuperGetMv( "MV_MCIGUAL" , NIL , "N" , cFilAnt ) == "N" )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Coloca o Cursor do Mouse em estado de Espera  	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorWait()

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Evitar que os Inicializadores padroes sejam carregados indevi³
	³ damente													   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	PutFileInEof( "SP8" )
	
	Begin Sequence

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Se a Linha da GetDados Nao Estiver Deletada				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF !( GdDeleted() )
		
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Verifica Itens Duplicados na GetDados	apenas se o conteudo do³
			³ parametro MV_MCIGUAL for igual a "N"						   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( lNotMcIgual )
				aCposKey := { "P8_DATA" , "P8_HORA" }
				IF !( lLinOk := GdCheckKey( aCposKey , 4 ) )
					Break
				EndIF
			EndIF	

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Verifica Se o Campos Estao Devidamente Preenchidos		   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			aCposKey := { "P8_DATA" , "P8_PAPONTA" }
			IF !( lLinOk := GdNoEmpty( aCposKey ) )
		    	Break
			EndIF

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Carrega o Periodo Informado                       		   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			cPeriodo	:= GdFieldGet("P8_PAPONTA")
			dPerIni	    := Stod( SubStr( cPeriodo , 1 , 8 ) )
			dPerFim	    := Stod( SubStr( cPeriodo , 9 , 8 ) )
			dDataRef	:= dPerFim
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Valida Periodo e Carrega Calendario de Marcacoes  		   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			cKeyAtu := ( cEmpAnt + SRA->( RA_FILIAL + RA_MAT ) + ( Dtos( dPerIni ) + Dtos( dPerFim ) ) )
			IF ( !( cLinOKUltKey == cKeyAtu ) .or. Empty( aTabCalend ) )
				cLinOKUltKey := cKeyAtu
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Verifica se o periodo informado eh valido         		   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF !( lLinOk := PerAponta(	@dPerIAux 		,;	//Data Inicial passada como referencia
											@dPerFAux 		,;	//Data Final   passada como referencia
											dDataRef		,;	//Data Base
											.T.				,;	//Mostrar o Help
											xFilial("SRA")	,;	//Filial para GetMv
											.F.				 ;	//Se eh para gerar um novo periodo
		 								  );
					)		 			 					
					cLinOKUltKey := "__LinOKUltKey__"
					Break
				EndIF
				IF !( lLinOk := ( ( dPerIni == dPerIAux ) .and. ( dPerFim == dPerFAux ) ) )
					//"O per¡odo informado n„o ‚ v lido"###"Aviso de Inconsistˆncia"
            		MsgInfo( OemToAnsi( STR0012 ) , OemToAnsi( STR0010 ) )
					cLinOKUltKey := "__LinOKUltKey__"
					Break
				EndIF
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Monta Calendadrio Conforme Periodo Para Validacao da Ordem   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF !( lLinOk := Pona010BldCld( @aTabPadrao , @aTabCalend , dPerIni , dPerFim ) )
            		cLinOKUltKey := "__LinOKUltKey__"
            		Break
				EndIF
			EndIF	

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Verifica se a Ordem Informaca eh Valida           		   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF !Empty( cOrdem := GdFieldGet("P8_ORDEM") )
				IF !( lLinOk := ( aScan( aTabCalend , { |x| x[ CALEND_POS_ORDEM ] == cOrdem .and. x[ CALEND_POS_TIPO_MARC ] == "1E" } ) > 0 ) )
					//"A Ordem informada n„o ‚ v lida para o per¡odo"###"Aviso de Inconsistˆncia"
            		MsgInfo( OemToAnsi( STR0011 ) , OemToAnsi( STR0010 ) )
					Break
				EndIF
			EndIF	
		
		EndIF
		
	End Sequence
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se Houver Alguma Inconsistencia na GetDados, Seta-lhe o Foco  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lLinOk )
		oBrowse:SetFocus()
	EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura o Estado do Cursor								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorArrow()
	
Return( lLinOk )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010TudOk³Autor³Marinaldo de Jesus     ³ Data ³18/06/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³                                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona010TudOk( oBrowse )									    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³ 															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona010TudOk( oBrowse )

Local lTudoOk := .T.

Return( lTudoOk  )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010DelOk³Autor³Marinaldo de Jesus     ³ Data ³18/07/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validar a Delecao na GetDados                               ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona010TudOk( oBrowse )									    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³ 															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona010DelOk( cAlias , nRecno , nOpc , aSP8Dele , aGdSp8ColR )
         
Local bAscan		:= { || NIL }
Local bAeval		:= { || NIL }
Local cOrdem		:= ""
Local cPaponta		:= ""
Local dData			:= Ctod("//")
Local lDelOk 		:= .T.
Local lStatusDel	:= .F.
Local nHora			:= 0
Local nPosData		:= 0
Local nPosHora		:= 0
Local nPosOrdem		:= 0
Local nPosAponta	:= 0
Local nPosPaponta	:= 0
Local nPosDeleted	:= 0
Local nExistDele	:= 0
Local nExistRel		:= 0
Local nLoop			:= 0
Local nLoops		:= 0

Static lFirstDelOk
Static lLstDelOk

DEFAULT lFirstDelOk	:= .T.
DEFAULT lLstDelOk	:= .T.

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Coloca o Cursor do Mouse em estado de Espera  	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorWait()
	Begin Sequence
	
		//Apenas se for a primeira vez
		IF !( lFirstDelOk )
			lFirstDelOk	:= .T.
			lDelOk 		:= lLstDelOk
			lLstDelOk	:= .T.
			Break
		EndIF
	
		lStatusDel	:= !( GdDeleted() ) //Inverte o Estado
	
		bAscan		:= { |x| x[nPosData] == dData .and. x[ nPosHora ] == nHora }
		bAeval		:= { |x| IF(;
									( x[nPosOrdem] == cOrdem );
									.and.;
									( x[nPosPaponta] == cPaponta ) ,;
									(;
										dData	:= x[nPosData],;
										nHora	:= x[nPosHora],;
										IF(;
												( aScan( aGdSp8ColR , bAscan ) == 0 ) ,;
												aAdd( aGdSp8ColR , aClone( x ) ) ,;
												NIL;
										  ),;
										x[ nPosAponta ] := "N";
									),;
									NIL;	
								);	
					 	}
		cOrdem		:= GdFieldGet( "P8_ORDEM"	)
		cPaponta	:= GdFieldGet( "P8_PAPONTA"	)
		dData		:= GdFieldGet( "P8_DATA"	)
		nHora		:= GdFieldGet( "P8_HORA"	)
		nPosData	:= GdFieldPos( "P8_DATA"	)
		nPosHora	:= GdFieldPos( "P8_HORA"	)
		nPosOrdem	:= GdFieldPos( "P8_ORDEM"	)
		nPosAponta	:= GdFieldPos( "P8_APONTA"	)
		nPosPaponta	:= GdFieldPos( "P8_PAPONTA"	)
		nPosDeleted	:= GdFieldPos( "GDDELETED"	)
	
		IF ( lStatusDel )	//Deletar
			IF ( ( nExistDele := aScan( aSP8Dele , bAscan ) ) == 0 )
				aAdd( aSP8Dele , aClone( aCols[ n ] ) )
				aEval( aCols , bAeval )
			EndIF
		Else				//Restaurar
			IF ( ( nExistDele := aScan( aSP8Dele , bAscan ) ) > 0 )
				nLoops := Len( aGdSp8ColR )
				For nLoop := 1 To nLoops
					dData	:= aGdSp8ColR[ nLoop , nPosData		]
					nHora	:= aGdSp8ColR[ nLoop , nPosHora		]
					IF ( ( nExistRel := aScan( aCols , bAscan ) ) > 0 )
						IF (;
								( aCols[ nExistRel , nPosPaponta ] == aGdSp8ColR[ nLoop , nPosPaponta ] );
								.and.;
								( aCols[ nExistRel , nPosOrdem	 ] == aGdSp8ColR[ nLoop , nPosOrdem	  ] );
							)								
							IF !( aCols[ nExistRel , nPosDeleted ] )
								aCols[ nExistRel , nPosAponta ] := aGdSp8ColR[ nLoop , nPosAponta ]
							ElseIF (;
										( aCols[ nExistRel , nPosData ] == aSP8Dele[ nExistDele , nPosData ] );
										.and.;
										( aCols[ nExistRel , nPosHora ] == aSP8Dele[ nExistDele , nPosHora ] );
									)
								aCols[ nExistRel , nPosAponta ] := aGdSp8ColR[ nLoop , nPosAponta ]
							EndIF
						EndIF
					EndIF
				Next nLoop
				aDel( aSP8Dele , nExistDele )
				aSize( aSP8Dele , ( Len( aSP8Dele ) - 1 ) )
			EndIF
		EndIF
	
		//Ja Passou pela funcao
		lFirstDelOk := .F.
	
	End Sequence
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura o Cursor do Mouse								  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorArrow()
		
Return( lDelOk )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010Grava ³Autor³Marinaldo de Jesus    ³ Data ³27/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Grava as Informacoes no SP8                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona010Grava(	nOpc		,;	//Opcao de Acordo com aRotina
							 	nReg		,;	//Numero do Registro do Arquivo Pai ( SRA )
							 	aSRAHeader	,;	//Campos do Arquivo Pai ( SRA )
							 	aSP8Header	,;	//Campos do Arquivo Filho ( SP8 )
							 	aSP8Cols	,;	//Itens do Arquivo Filho ( SP8 )
							 	aSP8VirtGd	,;	//Campos Virtuais do Arquivo Filho ( SP8 )
							 	aSP8Recnos	,;	//Recnos do Arquivo Filho ( SP8 )
							 	aSP8MemoGd	,;	//Campos Memo na GetDados ( SP8 )
							 	aTabPadrao 	,;	//Array com as Informacoes para Montagem do Calendario de Marcacoes
							 	aTabCalend	 ;	//Array contendo as Informacoes do Calendario de Marcacoes
							  )

Local aTamHora		:= TamSX3( "P8_HORA" )
Local aPeriodos		:= {}
Local aSP8PutMsMm	:= {}
Local cFil			:= SRA->RA_FILIAL
Local cMat			:= SRA->RA_MAT
Local cFilMat		:= ( cFil + cMat )
Local cPeriodo		:= ""
Local cOrdem		:= ""
Local cChave		:= ""
Local cMsgErr		:= ""
Local dPerIni		:= Ctod("//")
Local dPerFim		:= Ctod("//")
Local lSPCDelInfo	:= .F.
Local lExistOrdDel	:= .F.
Local lAddNew		:= .F.
Local lNotMcIgual	:= ( SuperGetMv( "MV_MCIGUAL" , NIL , "N" , cFilAnt ) == "N" )
Local lLock			:= .F.
Local nHeader		:= 0
Local nHeaders		:= 0
Local nCol			:= 0
Local nCols			:= 0
Local nRecno		:= 0
Local nRecnos		:= 0
Local nCpoMemo		:= 0
Local nLoop			:= 0
Local nLoops		:= 0
Local nOrdem		:= 0
Local nOrdens		:= 0
Local nPosPer		:= 0
Local nPosCalend	:= 0
Local nDeleted		:= GdFieldPos( "GDDELETED"	, aSP8Header )
Local nPosPaponta	:= GdFieldPos( "P8_PAPONTA" , aSP8Header )
Local nPosOrdem		:= GdFieldPos( "P8_ORDEM"	, aSP8Header )
Local nPosAponta	:= GdFieldPos( "P8_APONTA"	, aSP8Header )
Local nPosData		:= GdFieldPos( "P8_DATA"	, aSP8Header )
Local nPosHora		:= GdFieldPos( "P8_HORA"	, aSP8Header )

DEFAULT nOpc		:= 0
DEFAULT nReg		:= 0
DEFAULT aSRAHeader	:= {}
DEFAULT aSP8Header	:= {}
DEFAULT aSP8Cols	:= {}
DEFAULT aSP8VirtGd	:= {}
DEFAULT aSP8Recnos	:= {}

nHeaders			:= Len(	aSP8Header	)
nCols				:= Len(	aSP8Cols	)
nRecnos				:= Len( aSP8Recnos	)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Apenas se Existir o Participante							   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF !Empty( nReg )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Se for Exclusao ( nOpc == 5 )								   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nOpc == 5 )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega os Periodos para a Exclusao dos Apontamentos		   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		nLoops := Len( aSP8Cols )
		For nLoop := 1 To nLoops
			IF Empty( cPeriodo := aSP8Cols[ nLoop , nPosPaponta ] )
				Loop
			EndIF
			IF ( aScan( aPeriodos , { |x| ( x[1] == cPeriodo ) } ) == 0 )
				dPerIni	    := Stod( SubStr( cPeriodo , 1 , 8 ) )
				dPerFim	    := Stod( SubStr( cPeriodo , 9 , 8 ) )
				aAdd( aPeriodos , { cPeriodo , dPerIni , dPerFim } )
			EndIF
		Next nLoop
		//""Excluir, alˆm dos apontamentos calculados pelo sistema, os apontamentos informados pelo usu rio?"
		IF ( SPC->( dbSeek( cFilMat , .F. ) ) )
			lSPCDelInfo := MsgNoYes( OemToAnsi( STR0037 ) , cCadastro ) 
		EndIF
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Coloca o Cursor do Mouse em estado de Espera  	  		  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		CursorWait()
			Begin Transaction
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Exclui os Apontamentos									   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				nLoops := Len( aPeriodos )
				For nLoop := 1 To nLoops
					MsProcTxt( OemToAnsi( STR0040 ) )	//"Excluindo Apontamentos..."
					cPeriodo	:= aPeriodos[ nLoop , 01 ]
					dPerIni		:= aPeriodos[ nLoop , 02 ]
					dPerFim		:= aPeriodos[ nLoop , 03 ]
					SP8DelSPC( dPerIni , dPerFim , cFil , cMat , lSPCDelInfo )
				Next nLoop
				MsProcTxt( OemToAnsi( STR0039 ) )	//"Excluindo Marca‡”es..."
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Deleta os Memos											   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				MsMmDel( "SP8" , aSP8Recnos , aSP8MemoGd )
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Deleta os Dados do Arquivo Filho							   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				PonDelRecnos( "SP8" , aSP8Recnos )
			End Transaction
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Restaura o Cursor do Mouse								  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		CursorArrow()
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Se for Inclusao/Alteracao ( nOpc == 3 .or. nOpc == 4 )	   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	ElseIF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Coloca o Cursor do Mouse em estado de Espera  	  		  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		CursorWait()
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Carrega os Periodos para a Exclusao dos Apontamentos correspon³
			³dente a Marcacoes que serao Deletadas ou que foram    flegadas³
			³como nao Apontadas											   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			nLoops := Len( aSP8Cols )
			For nLoop := 1 To nLoops
				IF Empty( cPeriodo := aSP8Cols[ nLoop , nPosPaponta ] )
					Loop
				EndIF
				IF ( aSP8Cols[ nLoop , nDeleted ] .or. !( aSP8Cols[ nLoop , nPosAponta ] == "S" ) )
					lExistOrdDel	:= .T.
					cOrdem			:= aSP8Cols[ nLoop , nPosOrdem ]
				EndIF
				IF ( ( nPosPer := aScan( aPeriodos , { |x| ( x[1] == cPeriodo ) } ) ) == 0 )
					dPerIni	    := Stod( SubStr( cPeriodo , 1 , 8 ) )
					dPerFim	    := Stod( SubStr( cPeriodo , 9 , 8 ) )
					aAdd( aPeriodos , { cPeriodo , dPerIni , dPerFim , { cOrdem } } )
				Else
					IF ( aScan( aPeriodos[ nPosPer , 04 ] , { |x| ( x == cOrdem ) } ) == 0 )
						aAdd( aPeriodos[ nPosPer , 04 ] , cOrdem )
					EndIF
				EndIF
			Next nLoop
			IF ( ( lExistOrdDel ) .and. SPC->( dbSeek( cFilMat , .F. ) ) )
				//""Excluir, alˆm dos apontamentos calculados pelo sistema, os apontamentos informados pelo usu rio?"
				lSPCDelInfo := MsgNoYes( OemToAnsi( STR0037 ) , cCadastro ) 
			EndIF
			Begin Transaction
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Garante o Posicionamento no Arquivo Pai                	   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				SRA->( MsGoto( nReg ) )
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava os Dados do Arquivo Filho                        	   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF ( nRecnos == nCols )
					For nRecno := 1 To nRecnos
						SP8->( dbGoto( aSP8Recnos[ nRecno ] ) )
						IF !( lLock := RecLock( "SP8" , .F. , .F. ) )
							Loop
						EndIF
						IF !( aSP8Cols[ nRecno , nDeleted ] )
							MsProcTxt( OemToAnsi( STR0038 ) )	//"Gravando Marca‡”es..."
							For nHeader := 1 To nHeaders
								IF ( aScan( aSP8VirtGd , { |cCpo| ( cCpo == aSP8Header[ nHeader , 02 ] ) } ) == 0 )
									SP8->( &( aSP8Header[ nHeader , 02 ] ) ) := aSP8Cols[ nRecno , nHeader ]
								ElseIF ( ( nCpoMemo := aScan( aSP8MemoGd , { |cCpo| ( cCpo[1] == aSP8Header[ nHeader , 02 ] ) } ) ) > 0 )
									/*/
									ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									³ Armazena as Informacoes que serao gravadas no SYP      	   ³
									ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
									SP8->( aAdd( aSP8PutMsMm , { Recno() , &("SP8->"+aSP8MemoGd[nCpoMemo,02]) , aSP8Cols[ nRecno , nHeader ] , aSP8MemoGd[nCpoMemo,02] } ) )
								EndIF
							Next nHeader
						Else
							MsProcTxt( OemToAnsi( STR0039 ) ) //"Excluindo Marca‡”es..."
							/*/
							ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							³ Deleta os Memos do Arquivo Filho                       	   ³
							ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
							MsMmDel( "SP8" , { aSP8Recnos[ nRecno ] } , aSP8MemoGd )
							/*/
							ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							³ Deleta o Registro do Arquivo Filho                    	   ³
							ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
							IF !SP8->( FkDelete( @cMsgErr ) )
								RollBackDelTran( cMsgErr )
							EndIF
						EndIF
						SP8->( MsUnlock() )
					Next nRecno
				ElseIF ( nRecnos < nCols )
					For nRecno := 1 To nRecnos
						SP8->( dbGoto( aSP8Recnos[ nRecno ] ) )
						IF !( lLock := RecLock( "SP8" , .F. , .F. ) )
							Loop
						EndIF
						IF !( aSP8Cols[ nRecno , nDeleted ] )
							MsProcTxt( OemToAnsi( STR0038 ) )	//"Gravando Marca‡”es..."
							SP8->P8_FILIAL	:= cFil
							SP8->P8_MAT		:= cMat
							For nHeader := 1 To nHeaders
								IF ( aScan( aSP8VirtGd , { |cCpo| ( cCpo == aSP8Header[ nHeader , 02 ] ) } ) == 0 )
									SP8->( &( aSP8Header[ nHeader , 02 ] ) ) := aSP8Cols[ nRecno , nHeader ]
								ElseIF ( ( nCpoMemo := aScan( aSP8MemoGd , { |cCpo| ( cCpo[1] == aSP8Header[ nHeader , 02 ] ) } ) ) > 0 )
									/*/
									ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									³ Armazena as Informacoes que serao gravadas no SYP      	   ³
									ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
									SP8->( aAdd( aSP8PutMsMm , { Recno() , &("SP8->"+aSP8MemoGd[nCpoMemo,02]) , aSP8Cols[ nRecno , nHeader ] , aSP8MemoGd[nCpoMemo,02] } ) )
								EndIF
							Next nHeader
						Else
							MsProcTxt( OemToAnsi( STR0039 ) ) //"Excluindo Marca‡”es..."
							/*/
							ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							³ Deleta os Memos do Arquivo Filho                       	   ³
							ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
							MsMmDel( "SP8" , { aSP8Recnos[ nRecno ] } , aSP8MemoGd )
							/*/
							ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							³ Deleta o Registro do Arquivo Filho                    	   ³
							ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
							IF !SP8->( FkDelete( @cMsgErr ) )
								RollBackDelTran( cMsgErr )
							EndIF
						EndIF
						SP8->( MsUnlock() )
					Next nRecno	
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Seta a Ordem do SP8                                   	   ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					SP8->( dbSetOrder( RetOrdem( "SP8" , "P8_FILIAL+P8_MAT+DTOS(P8_DATA)+STR(P8_HORA,5,2)" ) ) )
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Grava os Novos Registros                              	   ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					For nCol := nRecno To nCols
						MsProcTxt( OemToAnsi( STR0038 ) )	//"Gravando Marca‡”es..."
						IF !( aSP8Cols[ nCol , nDeleted ] )
							/*/
							ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							³ Verifica se ja Existe o Registro e efetua o Lock corresponden³
							³ te														   ³
							ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
							cChave	:= ( cFilMat + Dtos( aSP8Cols[ nCol , nPosData ] ) + Str( aSP8Cols[ nCol , nPosHora ] , aTamHora[1] , aTamHora[2] ) )
							IF !( lAddNew := !( SP8->( dbSeek( cChave , .F. ) ) ) )
								IF !( lNotMcIgual )
									lAddNew := .T. 
								EndIF
							EndIF
							IF !( lLock := RecLock( "SP8" , lAddNew , .F. ) )
								Loop
							EndIF
							SP8->P8_FILIAL	:= cFil
							SP8->P8_MAT		:= cMat
							For nHeader := 1 To nHeaders
								IF ( aScan( aSP8VirtGd , { |cCpo| ( cCpo == aSP8Header[ nHeader , 02 ] ) } ) == 0 )
									SP8->( &( aSP8Header[ nHeader , 02 ] ) ) := aSP8Cols[ nCol , nHeader ]
								ElseIF ( ( nCpoMemo := aScan( aSP8MemoGd , { |cCpo| ( cCpo[1] == aSP8Header[ nHeader , 02 ] ) } ) ) > 0 )
									/*/
									ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									³ Armazena as Informacoes que serao gravadas no SYP      	   ³
									ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
									SP8->( aAdd( aSP8PutMsMm , { Recno() , &("SP8->"+aSP8MemoGd[nCpoMemo,02]) , aSP8Cols[ nCol , nHeader ] , aSP8MemoGd[nCpoMemo,02] } ) )
								EndIF
							Next nHeader
							SP8->( MsUnlock() )
						EndIF
					Next nCol
				EndIF
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava as Informacoes no SYP                           	   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				nRecnos := Len( aSP8PutMsMm )
				For nRecno := 1 To nRecnos
					SP8->( dbGoto( aSP8PutMsMm[ nRecno , 01 ] ) )
					MsMm( aSP8PutMsMm[ nRecno , 02 ] , NIL , NIL , aSP8PutMsMm[ nRecno , 03 ] , 1 , NIL , NIL , "SP8" , aSP8PutMsMm[ nRecno , 04 ] )
				Next nRecno
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Deleta as Informacoes do SPC para o Reapontamento     	   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF SPC->( dbSeek( cFilMat , .F. ) )
					nLoops := Len( aPeriodos )
					For nLoop := 1 To nLoops
						MsProcTxt( OemToAnsi( STR0040 ) )	//"Excluindo Apontamentos..."
						cPeriodo	:= aPeriodos[ nLoop , 01 ]
						dPerIni		:= aPeriodos[ nLoop , 02 ]
						dPerFim		:= aPeriodos[ nLoop , 03 ]
						IF !( Pona010BldCld( @aTabPadrao , @aTabCalend , dPerIni , dPerFim , .F. ) )
							Loop
						EndIF
						nOrdens := Len( aPeriodos[ nLoop , 04 ] )
						For nOrdem := 1 To nOrdens
							cOrdem := aPeriodos[ nLoop , 04 , nOrdem ]
							IF (;
									(;
										nPosCalend := aScan( aTabCalend , {;
																				|x| ( x[ CALEND_POS_ORDEM ] == cOrdem ); 
																					.and.;
																					( x[ CALEND_POS_TIPO_MARC ] == "1E" );
																	  	  };
													        );
									) > 0;
								)
								dPerIni := aTabCalend[ nPosCalend , CALEND_POS_DATA ]
								dPerFim := dPerIni
								SP8DelSPC( dPerIni , dPerFim , cFil , cMat , lSPCDelInfo )
							EndIF	
						Next nOrdem	
					Next nLoop
				EndIF
			End Transaction
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Restaura o Cursor do Mouse								  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		CursorArrow()
	EndIF
EndIF
	
Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010MarcOrd³Autor³Marinaldo de Jesus   ³ Data ³27/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Ordenar a Marcacao Corrente                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona010MarcOrd( oGetDados , nOpc , aTabPadrao , aTabCalend )

Local aSvKeys			:= GetKeys()
Local aMarcacoes		:= {}
Local cPeriodo			:= ""
Local dPerIni			:= Ctod("//")
Local dPerFim			:= Ctod("//")
Local lReordena			:= .F.
Local nPosData			:= GdFieldPos( "P8_DATA" 	, oGetDados:aHeader )
Local nPosHora			:= GdFieldPos( "P8_HORA" 	, oGetDados:aHeader )
Local nPosOrdem			:= GdFieldPos( "P8_ORDEM" 	, oGetDados:aHeader )
Local nPosFlag			:= GdFieldPos( "P8_FLAG" 	, oGetDados:aHeader )
Local nPosTno			:= GdFieldPos( "P8_TURNO" 	, oGetDados:aHeader )
Local nPosFunc			:= GdFieldPos( "P8_FUNCAO" 	, oGetDados:aHeader )
Local nPosGiro			:= GdFieldPos( "P8_GIRO" 	, oGetDados:aHeader )
Local nPosCc			:= GdFieldPos( "P8_CC" 		, oGetDados:aHeader )
Local nPosApont			:= GdFieldPos( "P8_APONTA" 	, oGetDados:aHeader )
Local nPosRelog			:= GdFieldPos( "P8_RELOGIO"	, oGetDados:aHeader )
Local nPosTpMarc		:= GdFieldPos( "P8_TPMARCA"	, oGetDados:aHeader )
Local nPosPaponta		:= GdFieldPos( "P8_PAPONTA" , oGetDados:aHeader )
Local nPosDeleted		:= GdFieldPos( "GDDELETED"	, oGetDados:aHeader )
Local nLenMarc			:= 0
Local nAt				:= oGetDados:oBrowse:nAt

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Apenas na Inclusao no Alteraca         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Nao Ordena Marcacao Deletada           					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( oGetDados:aCols[ nAt , nPosDeleted ]  )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Coloca o Cursor do Mouse em estado de Espera  	  		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	CursorWait()

		cPeriodo	:= oGetDados:aCols[ nAt , nPosPaponta ] 
		dPerIni	    := Stod( SubStr( cPeriodo , 1 , 8 ) )
		dPerFim	    := Stod( SubStr( cPeriodo , 9 , 8 ) )
		aAdd( aMarcacoes , Array( ELEMENTOS_AMARC ) )
		nLenMarc := Len( aMarcacoes )
		aMarcacoes[ nLenMarc , AMARC_DATA   	] := oGetDados:aCols[ nAt , nPosData	]					//01 - Data
		aMarcacoes[ nLenMarc , AMARC_HORA   	] := oGetDados:aCols[ nAt , nPosHora	]					//02 - Hora
		aMarcacoes[ nLenMarc , AMARC_ORDEM  	] := oGetDados:aCols[ nAt , nPosOrdem	]					//03 - Ordem
		aMarcacoes[ nLenMarc , AMARC_FLAG   	] := oGetDados:aCols[ nAt , nPosFlag	]					//04 - Flag
		aMarcacoes[ nLenMarc , AMARC_RECNO 		] := 0   													//05 - Recno
		aMarcacoes[ nLenMarc , AMARC_TURNO		] := oGetDados:aCols[ nAt , nPosTno		]					//06 - Turno
		aMarcacoes[ nLenMarc , AMARC_FUNCAO		] := oGetDados:aCols[ nAt , nPosFunc	]					//07 - Funcao 
		aMarcacoes[ nLenMarc , AMARC_GIRO		] := oGetDados:aCols[ nAt , nPosGiro	]					//08 - Giro
		aMarcacoes[ nLenMarc , AMARC_CC			] := oGetDados:aCols[ nAt , nPosCc		]					//09 - Centro de Custo
		aMarcacoes[ nLenMarc , AMARC_APONTA		] := oGetDados:aCols[ nAt , nPosApont	]					//10 - Flag de Apontamento
		aMarcacoes[ nLenMarc , AMARC_RELOGIO	] := oGetDados:aCols[ nAt , nPosRelog	]					//11 - Relogio
		aMarcacoes[ nLenMarc , AMARC_TIPOMARC	] := oGetDados:aCols[ nAt , nPosTpMarc	]					//12 - Tipo da Marcacao
		lReordena := (;
						( aMarcacoes[ nLenMarc , AMARC_FLAG ] $ "M,I" );
						.and.;
						!Empty( aMarcacoes[ nLenMarc , AMARC_ORDEM ] );
		  			  )
		aMarcacoes[ nLenMarc , AMARC_L_ORIGEM 	] := lReordena												//13 - Logico Origem 
		aMarcacoes[ nLenMarc , AMARC_DTHR2STR 	] := DataHora2Str(;                                           
																	oGetDados:aCols[ nAt , nPosData	] ,;
																	oGetDados:aCols[ nAt , nPosHora	]  ;
																  )                                 		//14 - String de Data/Hora para aSort
		aMarcacoes[ nLenMarc , AMARC_PERAPONTA	] := oGetDados:aCols[ nAt , nPosPaponta	]					//15 - Periodo de Apontamento
		IF !( Pona010BldCld( @aTabPadrao , @aTabCalend , dPerIni , dPerFim ) )
			Break
		EndIF
		PutOrdMarc( @aMarcacoes , aTabCalend , .T. )
        oGetDados:aCols[ nAt , nPosOrdem	] := aMarcacoes[ nLenMarc , AMARC_ORDEM ]
        oGetDados:aCols[ nAt , nPosApont	] := "N"
        oGetDados:aCols[ nAt , nPosTno		] := aMarcacoes[ nLenMarc , AMARC_TURNO ]
        oGetDados:aCols[ nAt , nPosPaponta	] := aMarcacoes[ nLenMarc , AMARC_PERAPONTA ]
		oGetDados:oBrowse:Refresh()
		
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura o Cursor do Mouse								  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	CursorArrow()

End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura as Teclas de Atalho                     	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aSvKeys , .T. )

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010OrdMarc³Autor³Marinaldo de Jesus   ³ Data ³27/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Ordenar as Marcacoes                                        ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona010OrdMarc( oGetDados , nOpc , aTabPadrao )

Local aSvKeys		:= GetKeys()
Local aMarcacoes	:= {}
Local aTabCalend	:= {}
Local aMarcAll		:= {}
Local aPeriodos		:= {}
Local aCols			:= aClone( oGetDados:aCols )
Local aHeader		:= aClone( oGetDados:aHeader )
Local bSort			:= { || NIL } 
Local bAsc			:= { || NIL }
Local cPeriodo		:= ""
Local dPerIni		:= Ctod("//")
Local dPerFim		:= Ctod("//")
Local lReordena		:= .F.
Local nPosData		:= GdFieldPos( "P8_DATA" 	, aHeader )
Local nPosHora		:= GdFieldPos( "P8_HORA" 	, aHeader )
Local nPosOrdem		:= GdFieldPos( "P8_ORDEM" 	, aHeader )
Local nPosFlag		:= GdFieldPos( "P8_FLAG" 	, aHeader )
Local nPosTno		:= GdFieldPos( "P8_TURNO" 	, aHeader )
Local nPosFunc		:= GdFieldPos( "P8_FUNCAO" 	, aHeader )
Local nPosGiro		:= GdFieldPos( "P8_GIRO" 	, aHeader )
Local nPosCc		:= GdFieldPos( "P8_CC" 		, aHeader )
Local nPosApont		:= GdFieldPos( "P8_APONTA" 	, aHeader )
Local nPosRelog		:= GdFieldPos( "P8_RELOGIO"	, aHeader )
Local nPosTpMarc	:= GdFieldPos( "P8_TPMARCA"	, aHeader )
Local nPosPaponta	:= GdFieldPos( "P8_PAPONTA" , aHeader )
Local nPosDeleted	:= GdFieldPos( "GDDELETED"	, aHeader )
Local nLoop			:= 0
Local nLoops		:= 0
Local nPeriodo		:= 0
Local nPeriodos		:= 0
Local nMarc			:= 0
Local nLenMarc		:= 0
Local nPosMarc		:= 0
Local nPosPer		:= 0

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Apenas na Inclusao no Alteraca         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Coloca o Cursor do Mouse em estado de Espera  	  		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	CursorWait()
	
		bSort := { |x,y| (;
								DataHora2Str( x[nPosData] , x[nPosHora] ) + ;
								x[nPosPaponta];
						  ) < ;
						  (;
						  		DataHora2Str( y[nPosData] , y[nPosHora] ) + ;
						  		y[nPosPaponta];
						   );
				  }
		aSort( aCols , NIL , NIL , bSort )
		
		nLoops := Len( aCols )
		For nLoop := 1 To nLoops
			MsProcTxt( OemToAnsi( STR0014  ) )	//"Ordenando Marca‡”es..."
			IF Empty( cPeriodo := aCols[ nLoop , nPosPaponta ] )
				Loop
			EndIF
			IF ( aScan( aPeriodos , { |x| ( x[1] == cPeriodo ) } ) == 0 )
				dPerIni	    := Stod( SubStr( cPeriodo , 1 , 8 ) )
				dPerFim	    := Stod( SubStr( cPeriodo , 9 , 8 ) )
				aAdd( aPeriodos , { cPeriodo , dPerIni , dPerFim } )
			EndIF
		Next nLoop
		
		nPeriodos := Len( aPeriodos )
		For nPeriodo := 1 To nPeriodos
			MsProcTxt( OemToAnsi( STR0014  ) )	//"Ordenando Marca‡”es..."
			cPeriodo := aPeriodos[ nPeriodo , 01 ]
			IF ( ( nPosPer := aScan( aCols , { |x| x[ nPosPaponta ] == cPeriodo } ) ) > 0 )
				dPerIni		:= aPeriodos[ nPeriodo , 02 ]
				dPerFim		:= aPeriodos[ nPeriodo , 03 ]
				aMarcacoes	:= {}
				nLenMarc	:= 0
				For nLoop := nPosPer To nLoops
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Nao Ordena Marcacao Deletada           					   ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					IF ( aCols[ nLoop , nPosDeleted ] )
						Loop
					EndIF
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Nao Ordena Marcacao Fora do Periodo    					   ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					IF !( aCols[ nLoop , nPosPaponta ] == cPeriodo )
						Exit
					EndIF
					aAdd( aMarcacoes , Array( ELEMENTOS_AMARC ) )
					nLenMarc := Len( aMarcacoes )
					aMarcacoes[ nLenMarc , AMARC_DATA   	] := aCols[ nLoop , nPosData	]					//01 - Data
					aMarcacoes[ nLenMarc , AMARC_HORA   	] := aCols[ nLoop , nPosHora	]					//02 - Hora
					aMarcacoes[ nLenMarc , AMARC_ORDEM  	] := aCols[ nLoop , nPosOrdem	]					//03 - Ordem
					aMarcacoes[ nLenMarc , AMARC_FLAG   	] := aCols[ nLoop , nPosFlag	]					//04 - Flag
					aMarcacoes[ nLenMarc , AMARC_RECNO 		] := 0   											//05 - Recno
					aMarcacoes[ nLenMarc , AMARC_TURNO		] := aCols[ nLoop , nPosTno		]					//06 - Turno
					aMarcacoes[ nLenMarc , AMARC_FUNCAO		] := aCols[ nLoop , nPosFunc	]					//07 - Funcao 
					aMarcacoes[ nLenMarc , AMARC_GIRO		] := aCols[ nLoop , nPosGiro	]					//08 - Giro
					aMarcacoes[ nLenMarc , AMARC_CC			] := aCols[ nLoop , nPosCc		]					//09 - Centro de Custo
					aMarcacoes[ nLenMarc , AMARC_APONTA		] := aCols[ nLoop , nPosApont	]					//10 - Flag de Apontamento
					aMarcacoes[ nLenMarc , AMARC_RELOGIO	] := aCols[ nLoop , nPosRelog	]					//11 - Relogio
					aMarcacoes[ nLenMarc , AMARC_TIPOMARC	] := aCols[ nLoop , nPosTpMarc	]					//12 - Tipo da Marcacao
					lReordena := (;
									( aMarcacoes[ nLenMarc , AMARC_FLAG ] $ "M,I" );
									.and.;
									!Empty( aMarcacoes[ nLenMarc , AMARC_ORDEM ] );
					  			  )
					aMarcacoes[ nLenMarc , AMARC_L_ORIGEM 	] := lReordena										//13 - Logico Origem 
					aMarcacoes[ nLenMarc , AMARC_DTHR2STR 	] := DataHora2Str(;                                           
																				aCols[ nLoop , nPosData	] ,;
																				aCols[ nLoop , nPosHora	]  ;
																			  )                                 //14 - String de Data/Hora para aSort
					aMarcacoes[ nLenMarc , AMARC_PERAPONTA	] := aCols[ nLoop , nPosPaponta	]					//15 - Periodo de Apontamento
				Next nLoop
				IF ( nLenMarc > 0    )
					IF !( Pona010BldCld( @aTabPadrao , @aTabCalend , dPerIni , dPerFim , .F. ) )
						nLenMarc := 0   
						Loop
					EndIF
					PutOrdMarc( @aMarcacoes , aTabCalend , .T. )
					For nMarc := 1 To nLenMarc
						aAdd( aMarcAll , aClone( aMarcacoes[ nMarc ] ) )
					Next nMarc 
				EndIF
			EndIF
		
		Next nPeriodo
		
		aMarcacoes	:= {}
		aTabCalend	:= {}
		nLenMarc	:= Len( aMarcAll )
		aCols		:= oGetDados:aCols
		bAsc		:= { |x| ( x[ nPosData ] == aMarcAll[ nMarc , AMARC_DATA ] );
							 .and.;
					 		 ( x[ nPosHora ] == aMarcAll[ nMarc , AMARC_HORA ] );
						}
		For nMarc := 1 To nLenMarc
			MsProcTxt( OemToAnsi( STR0014  ) )	//"Ordenando Marca‡”es..."
			IF ( ( nPosMarc := aScan( aCols , bAsc )  ) > 0    )
		        aCols[ nPosMarc , nPosOrdem 	] := aMarcAll[ nMarc , AMARC_ORDEM ]
		        aCols[ nPosMarc , nPosTno		] := aMarcAll[ nMarc , AMARC_TURNO ]
		        aCols[ nPosMarc , nPosApont		] := "N"
		        aCols[ nPosMarc , nPosPaponta	] := aMarcAll[ nMarc , AMARC_PERAPONTA ]
			EndIF
		Next nMarc
		
		oGetDados:oBrowse:Refresh()
		
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura o Cursor do Mouse								  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	CursorArrow()

End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura as Teclas de Atalho                     	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aSvKeys , .T. )
	
Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010CalMarc³Autor³Marinaldo de Jesus   ³ Data ³27/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Mostrar Calendario de Marcacoes conforme Periodo            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona010CalMarc( oGetDados , aTabPadrao , aLstTabCalend )

Local aSvKeys		:= GetKeys()
Local bCriaCalend	:= { || NIL }
Local bShowCalend	:= { || NIL }
Local cPeriodo		:= ""
Local lCriaCalend	:= .F.

Private aTabCalend	:= aLstTabCalend
Private aCols		:= aClone( oGetDados:aCols	 )
Private aHeader		:= aClone( oGetDados:aHeader )
Private dPerIni		:= Ctod("//")
Private dPerFim		:= Ctod("//")
Private lP8PGIniCa	:= .T.
Private n			:= oGetDados:oBrowse:nAt

cPeriodo	:= GdFieldGet( "P8_PAPONTA" )
dPerIni		:= Stod( SubStr( cPeriodo , 1 , 8 ) )
dPerFim		:= Stod( SubStr( cPeriodo , 9 , 8 ) )

Begin Sequence

	IF Empty( cPeriodo )
		//"O per¡odo informado n„o ‚ v lido"###"Aviso de Inconsistˆncia"
		MsgInfo( OemToAnsi( STR0012 ) , OemToAnsi( STR0010 ) )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Cria o Calendario do Periodo        						  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bCriaCalend	:= { || lCriaCalend := Pona010BldCld( @aTabPadrao , @aTabCalend , dPerIni , dPerFim ) }
	MsAguarde( bCriaCalend , cCadastro , OemToAnsi( STR0016 ) ) //"Criando o Calend rio..."
	IF ( lCriaCalend  )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Mostra o Calendario conforme periodo						  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		bShowCalend	:= { || F_ALT_H(NIL,aCols,GdFieldPos("GDDELETED"),aHeader,.F.,NIL,NIL,.T.) }
		MsAguarde( bShowCalend , cCadastro , OemToAnsi( STR0017 ) ) //"Montando o Calend rio..."
	EndIF

End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura as Teclas de Atalho                     	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aSvKeys , .T. )

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010ClrOrdM³Autor³Marinaldo de Jesus   ³ Data ³27/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Limpar as Ordens das Marcacoes                              ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona010ClrOrdM( oGetDados , nOpc )

Local aSvKeys			:= GetKeys()
Local aArea				:= GetArea()

Local aAdvSize			:= {}
Local aInfoAdvSize		:= {}
Local aObjCoords		:= {}
Local aObjSize			:= {}

Local aInfo1AdvSize		:= {}
Local aObj1Coords		:= {}
Local aObj1Size			:= {}

Local aInfo2AdvSize		:= {}
Local aObj2Coords		:= {}
Local aObj2Size			:= {}

Local aInfo3AdvSize		:= {}
Local aObj3Coords		:= {}
Local aObj3Size			:= {}

Local aInfo4AdvSize		:= {}
Local aObj4Coords		:= {}
Local aObj4Size			:= {}

Local bSet15			:= { || NIL }
Local bSet24			:= { || NIL }
Local cSpaceOrdem		:= Space( TamSx3("P8_ORDEM")[1] )
Local cPeriodo			:= ""
Local dPerIni			:= Ctod("//")
Local dPerFim			:= Ctod("//")
Local lbSet15			:= .F.
Local nOpcRad1			:= 2
Local nOpcRad2			:= 2
Local nLoop				:= 0
Local nLoops			:= 0
Local nPosOrdem			:= GdFieldPos( "P8_ORDEM" 	, oGetDados:aHeader )
Local nPosAponta		:= GdFieldPos( "P8_APONTA" 	, oGetDados:aHeader )
Local nPosPaponta		:= GdFieldPos( "P8_PAPONTA"	, oGetDados:aHeader )
Local nPosFlag			:= GdFieldPos( "P8_FLAG"	, oGetDados:aHeader )
Local nPosData			:= GdFieldPos( "P8_DATA"	, oGetDados:aHeader )
Local nPosDeleted		:= GdFieldPos( "GDDELETED"	, oGetDados:aHeader )
Local oDlg				:= NIL
Local oFont				:= NIL
Local oFontBig			:= NIL
Local oGroup			:= NIL
Local oPerIni			:= NIL
Local oPerFim			:= NIL
Local oRadio1			:= NIL
Local oRadio2			:= NIL

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Apenas na Inclusao no Alteraca         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		Break
	EndIF

    /*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para a Teclas <CTRL-O>   ( Button OK da Enchoi³
	³ ceBar )													   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSet15 := { ||	IF(;
							Eval( oPerIni:bValid );
							.and.;
							Eval( oPerFim:bValid ),;
							(;
								lbSet15 := .T. ,;
								RestKeys( aSvKeys , .T. ),;
								oDlg:End();
							),;
							.F.;
					   );
				}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o  Bloco  para a Teclas <CTRL-X> ( Button Cancel da En³
	³ choiceBar )												   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSet24 := { || RestKeys( aSvKeys , .T. ) , oDlg:End() }

/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdvSize	:= MsAdvSize( ,.T.,370)
	
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
	aAdd( aObjCoords , { 000 , 080, .T. , .F. } )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )   
	
	//Divisao Em 3 linhas horizontais proporcionais
	aObj1Coords := {}
	aAdv1Size    := aClone(aObjSize[1])
	
	aInfo1AdvSize    := { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 5 , 5 }
	aAdd( aObj1Coords , { 000 , 020 , .T. , .F. } )	//1-Inicial - Final
	aAdd( aObj1Coords , { 000 , 020 , .T. , .F. } )	//2-Limpar
	aAdd( aObj1Coords , { 000 , 020 , .T. , .F. } )	//3-Considerar
	aObj1Size := MsObjSize( aInfo1AdvSize , aObj1Coords)
 

	//Divisao Em 6 Colunas da Linha 1-Inicial - Final
	aObj2Coords := {}
	aAdv2Size    := aClone(aObj1Size[1])
	
	aInfo2AdvSize    := { aAdv2Size[2] , aAdv2Size[1] , aAdv2Size[4] , aAdv2Size[3] , 5 , 5 }
	aAdd( aObj2Coords , { 055 , 000 , .F. , .T. } )	
	aAdd( aObj2Coords , { 020 , 000 , .F. , .T. } )	
	aAdd( aObj2Coords , { 060 , 000 , .F. , .T. } )	
	aAdd( aObj2Coords , { 020 , 000 , .F. , .T. } )	
	aAdd( aObj2Coords , { 030 , 000 , .F. , .T. } )	

	aObj2Size := MsObjSize( aInfo2AdvSize , aObj2Coords,,.T.)


	//Divisao Em 2 Colunas da Linha 2-Limpar
	aObj3Coords := {}
	aAdv3Size    := aClone(aObj1Size[2])
	
	aInfo3AdvSize    := { aAdv3Size[2] , aAdv3Size[1] , aAdv3Size[4] , aAdv3Size[3] , 5, 0 }
	aAdd( aObj3Coords , { 055 , 000 , .F. , .T. } )	
	aAdd( aObj3Coords , { 140 , 000 , .F. , .T. } )	
	aAdd( aObj3Coords , { 000 , 000 , .T. , .T. } )	

	aObj3Size := MsObjSize( aInfo3AdvSize , aObj3Coords,,.T.)

	//Divisao Em 2 Colunas da Linha 3-Considerar
	aObj4Coords := {}
	aAdv4Size    := aClone(aObj1Size[3])
	
	aInfo4AdvSize    := { aAdv4Size[2] , aAdv4Size[1] , aAdv4Size[4] , aAdv4Size[3] , 5 , 0 }
	aAdd( aObj4Coords , { 055 , 000 , .F. , .T. } )	
	aAdd( aObj4Coords , { 140 , 000 , .F. , .T. } )	
	aAdd( aObj4Coords , { 000 , 000 , .T. , .T. } )	

	aObj4Size := MsObjSize( aInfo4AdvSize , aObj4Coords,,.T.)


	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Monta Dialogo para a selecao do Periodo 					  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(cCadastro) From aAdvSize[7],0 TO aAdvSize[6]/1.65,aAdvSize[5] OF oMainWnd PIXEL			
	
		@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup TO aObjSize[1,3],aObjSize[1,4] LABEL OemToAnsi(STR0020) OF oDlg PIXEL		//"Per¡odo:"
		oGroup:oFont:= oFont  
		
		@ aObj2Size[2,1] , aObj2Size[2,2]	SAY OemToAnsi(STR0021)		SIZE 50,10 OF oDlg PIXEL FONT oFont	//"Inicial:"
		@ aObj2Size[3,1] , aObj2Size[3,2]	MSGET oPerIni VAR dPerIni	SIZE 50,10 OF oDlg PIXEL FONT oFont VALID !Empty( dPerIni ) HASBUTTON
	
		@ aObj2Size[4,1] , aObj2Size[4,2]	SAY OemToAnsi(STR0022)		SIZE 50,10 OF oDlg PIXEL FONT oFont	//"Final:"		
		@ aObj2Size[5,1] , aObj2Size[5,2]	MSGET oPerFim VAR dPerFim	SIZE 50,10 OF oDlg PIXEL FONT oFont VALID ( !Empty( dPerFim ) .and. ( dPerIni <= dPerFim ) ) HASBUTTON
	                                                                        
		@ aObj3Size[2,1] , aObj3Size[2,2]	SAY OemToAnsi(STR0025)		SIZE 150,10 OF oDlg PIXEL FONT oFont	//"Limpar Ordens de Itens Informados/Modificados?"

		@ aObj3Size[3,1] , aObj3Size[3,2]	RADIO oRadio1 VAR nOpcRad1	ITEMS 	OemToAnsi(STR0023)	,;			//"Sim"  
																				OemToAnsi(STR0024)	 ;			//"N„o"
																		SIZE 050,010 OF oDlg PIXEL
	
		@ aObj4Size[2,1] , aObj4Size[2,2]	SAY OemToAnsi(STR0026)		SIZE 150,10 OF oDlg PIXEL FONT oFont	//"Considerar o Periodo de Apontamento ou a Data?"
		@ aObj4Size[3,1] , aObj4Size[3,2]	RADIO oRadio2 VAR nOpcRad2	ITEMS 	OemToAnsi(STR0027)	,;			//"Periodo"
																				OemToAnsi(STR0028)	 ;			//"Data"
																		SIZE 050,010 OF oDlg PIXEL
																							

	ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 )
	
	IF ( lbSet15 )
		IF ( nOpcRad2 == 1 )
			cPeriodo := ( Dtos( dPerIni ) + Dtos( dPerFim ) )
		EndIF
		nLoops := Len( oGetDados:aCols )
		For nLoop := 1 To nLoops
			MsProcTxt( OemToAnsi( STR0019  ) )	//"Limpando as Ordens..."
			IF ( ( nOpcRad2 == 1 ) .and. !( oGetDados:aCols[ nLoop , nPosPaponta ] == cPeriodo ) )
				Loop
			ElseIF ( ( oGetDados:aCols[ nLoop , nPosData ] < dPerIni ) .or. ( oGetDados:aCols[ nLoop , nPosData ] > dPerFim ) )
				Loop			
			End IF
			IF ( ( nOpcRad1 == 2 ) .and. ( oGetDados:aCols[ nLoop , nPosFlag ] $ "M/I" ) )
				Loop
			EndIF
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Nao Ordena Marcacao Deletada           					   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( oGetDados:aCols[ nLoop , nPosDeleted ]  )
				Loop
			EndIF
			oGetDados:aCols[ nLoop , nPosOrdem 	] := cSpaceOrdem
			oGetDados:aCols[ nLoop , nPosAponta	] := "N"
		Next nLoop
		oGetDados:oBrowse:Refresh()
	EndIF

End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura as Teclas de Atalho                     	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aSvKeys , .T. )
	
Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010StrOrdM³Autor³Marinaldo de Jesus   ³ Data ³27/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Indexar os Lancamentos                                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona010StrOrdM( oGetDados , nOpc )

Local aSvKeys		:= GetKeys()
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjCoords	:= {}
Local aObjSize		:= {}
Local bSort			:= { || NIL }
Local lbSet15		:= .F.
Local nPosData		:= GdFieldPos( "P8_DATA" 	, oGetDados:aHeader )
Local nPosHora		:= GdFieldPos( "P8_HORA"	, oGetDados:aHeader )
Local nPosPaponta	:= GdFieldPos( "P8_PAPONTA" , oGetDados:aHeader )
Local nOpcRad		:= 1
Local oFont			:= NIL
Local oDlg			:= NIL
Local oGroup		:= NIL
Local oRadio		:= NIL	

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Apenas na Inclusao no Alteraca         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		Break
	EndIF
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdvSize		:= MsAdvSize( , .T.,380 )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Redimensiona                           					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
	aAdd( aObjCoords , { 000 , 040 , .T. , .F. } )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

	//Inclusao de uma linha dentro do aObjSize
	aObj1Coords := {}
	aAdv1Size    := aClone(aObjSize[1])
	
	aInfo1AdvSize    := { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 5 , 5 }
	aAdd( aObj1Coords , { 000 , 012 , .T. , .F. } )	
	aObj1Size := MsObjSize( aInfo1AdvSize , aObj1Coords)

	//Divisao Em 3 Colunas para posicionar a Radio Centralizado
	aObj2Coords := {}
	aAdv2Size    := aClone(aObj1Size[1])
	
	aInfo2AdvSize    := { aAdv2Size[2] , aAdv2Size[1] , aAdv2Size[4] , aAdv2Size[3] , 5, 10 }
	aAdd( aObj2Coords , { 055 , 000 , .F. , .T. } )	
	aAdd( aObj2Coords , { 140 , 000 , .F. , .T. } )	
	aAdd( aObj2Coords , { 000 , 000 , .T. , .T. } )	
	aObj2Size := MsObjSize( aInfo2AdvSize , aObj2Coords,,.T.)

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para a Teclas <CTRL-O>   ( Button OK da Enchoi³
	³ ceBar )													   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSet15 := { ||	(;
						lbSet15 := .T. ,;
						RestKeys( aSvKeys , .T. ),;
						oDlg:End();
					  );
				}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o  Bloco  para a Teclas <CTRL-X> ( Button Cancel da En³
	³ choiceBar )												   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSet24 := { || RestKeys( aSvKeys , .T. ) , oDlg:End() }
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Monta Dialogo para a selecao do Periodo 					  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(cCadastro) From aAdvSize[7],0 TO aAdvSize[6]/2.6,aAdvSize[5] OF oMainWnd PIXEL			
	
		@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup TO aObjSize[1,3],aObjSize[1,4] LABEL OemToAnsi(STR0033 ) OF oDlg PIXEL		//"Indexa‡„o:"
		oGroup:oFont:= oFont

		@ aObj2Size[2,1] , aObj2Size[2,2]	SAY OemToAnsi(STR0034)		SIZE 150,10 OF oDlg PIXEL FONT oFont	//"Indexar os Lan‡amentos de Marca‡”es em ordem:"
		@ aObj2Size[3,1] , aObj2Size[3,2]	RADIO oRadio VAR nOpcRad	ITEMS 	OemToAnsi(STR0035)	,;			//"Ascendente"
																		 		OemToAnsi(STR0036)	 ;			//"Descendente"
																		SIZE 115,010 OF oDlg PIXEL

	ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 )
	
	IF ( lbSet15 )
		IF ( nOpcRad == 1 )
			bSort := { |x,y| (;
								DataHora2Str( x[nPosData] , x[nPosHora] ) + ;
								x[nPosPaponta];
							  ) < ;
					  		(;
					  			DataHora2Str( y[nPosData] , y[nPosHora] ) + ;
					  			y[nPosPaponta];
					   		);
			  		}
		Else
			bSort := { |x,y| (;
								DataHora2Str( x[nPosData] , x[nPosHora] ) + ;
								x[nPosPaponta];
							  ) > ;
					  		(;
					  			DataHora2Str( y[nPosData] , y[nPosHora] ) + ;
					  			y[nPosPaponta];
					   		);
			  		}
		EndIF
		aSort( oGetDados:aCols , NIL , NIL , bSort )
		oGetDados:oBrowse:Refresh()
	EndIF		

End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura as Teclas de Atalho                     	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aSvKeys , .T. )

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010FltMarc³Autor³Marinaldo de Jesus   ³ Data ³29/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Filtrar os Lancamentos                                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona010FltMarc(	oGetDados		,;	//Objeto GetDados Original
								nOpc			,;	//Opcao conforme a Rotina
								nOpcNewGd		,;	//Opcao do Objeto GetDados de acordo com nOpc do aRotina
								aTabPadrao		,;	//Array com as Informacoes para Montagem do Calendario de Marcacoes
								aTabCalend		,;	//Array contendo as Informacoes do Calendario de Marcacoes
								dIniPer			,;  //Periodo Inicial Previamente Selecionado
								dFimPer			,;	//Periodo Final Previamente Selecionado
								aSP8GdAltera	,;	//Campos Alteraveis na GetDados
								bSP8GdDelOk		 ;	//Bloco para Validacao da Delecao
							  )	

Local aSvKeys		:= GetKeys()
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjCoords	:= {}
Local aObjSize		:= {}

Local aAdv1Size		:= {}
Local aInfo1AdvSize	:= {}
Local aObj1Coords	:= {}
Local aObj1Size		:= {} 

Local aAdv2Size		:= {}
Local aInfo2AdvSize	:= {}
Local aObj2Coords	:= {}
Local aObj2Size		:= {}

Local aCheckBox		:= {}
Local aChecks		:= {}
Local bSort			:= { || NIL }
Local dPerIni		:= dIniPer
LOcal dPerFim		:= dFimPer
Local lbSet15		:= .F.
Local nCheck		:= 0
Local nChecks		:= 0
Local oFont			:= NIL
Local oDlg			:= NIL
Local oGroup		:= NIL

Begin Sequence


	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Elementos do CheckBox							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aCheckBox , Array( 03 ) )
	nChecks := Len( aCheckBox )
	aCheckBox[ nChecks , 01 ] := NIL
	aCheckBox[ nChecks , 02 ] := .F.
	aCheckBox[ nChecks , 03 ] := OemToAnsi( STR0044 )	//"Marca‡”es n„o ordenadas"

	aAdd( aCheckBox , Array( 03 ) )
	nChecks := Len( aCheckBox )
	aCheckBox[ nChecks , 01 ] := NIL
	aCheckBox[ nChecks , 02 ] := .F.
	aCheckBox[ nChecks , 03 ] := OemToAnsi( STR0045 )	//"Marca‡”es ordenadas ¡mpares"

	aAdd( aCheckBox , Array( 03 ) )
	nChecks := Len( aCheckBox )
	aCheckBox[ nChecks , 01 ] := NIL
	aCheckBox[ nChecks , 02 ] := .F.
	aCheckBox[ nChecks , 03 ] := OemToAnsi( STR0046 )	//"Duplicadas"

	aAdd( aCheckBox , Array( 03 ) )
	nChecks := Len( aCheckBox )
	aCheckBox[ nChecks , 01 ] := NIL
	aCheckBox[ nChecks , 02 ] := .F.
	aCheckBox[ nChecks , 03 ] := OemToAnsi( STR0047 )	//"Considerar o per¡odo:"

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para a Teclas <CTRL-O>   ( Button OK da Enchoi³
	³ ceBar )													   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSet15 := { ||	(;
						lbSet15 := .T. ,;
						RestKeys( aSvKeys , .T. ),;
						oDlg:End();
					 );
				}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o  Bloco  para a Teclas <CTRL-X> ( Button Cancel da En³
	³ choiceBar )												   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSet24 := { || RestKeys( aSvKeys , .T. ) , oDlg:End() }
	

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdvSize		:= MsAdvSize( , .T., 380 )
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
	aAdd( aObjCoords , { 000 , 090 , .T. , .F. } )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
	
	//Divisao Em 5 linhas horizontais 
	aObj1Coords := {}
	aAdv1Size    := aClone(aObjSize[1])
	
	aInfo1AdvSize    := { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 20 , 5 }
	aAdd( aObj1Coords , { 000 , 010 , .T. , .F. } )	
	aAdd( aObj1Coords , { 000 , 005 , .T. , .F. } )	
	aAdd( aObj1Coords , { 000 , 005 , .T. , .F. } )	
	aAdd( aObj1Coords , { 000 , 005 , .T. , .F. } )	
	aAdd( aObj1Coords , { 000 , 005 , .T. , .F. } )	
	aAdd( aObj1Coords , { 000 , 020 , .T. , .F. } )	//Dta Inicial - Final
	aObj1Size := MsObjSize( aInfo1AdvSize , aObj1Coords)
	

	//Divisao Em 6 Colunas da Linha 5 -Inicial - Final
	aObj2Coords := {}
	aAdv2Size    := aClone(aObj1Size[6])
	
	aInfo2AdvSize    := { aAdv2Size[2] , aAdv2Size[1] , aAdv2Size[4] , aAdv2Size[3] , 5 , 5 }
	aAdd( aObj2Coords , { 055 , 000 , .F. , .T. } )	
	aAdd( aObj2Coords , { 020 , 000 , .F. , .T. } )	
	aAdd( aObj2Coords , { 060 , 000 , .F. , .T. } )	
	aAdd( aObj2Coords , { 020 , 000 , .F. , .T. } )	
	aAdd( aObj2Coords , { 030 , 000 , .F. , .T. } )	
	aObj2Size := MsObjSize( aInfo2AdvSize , aObj2Coords,,.T.)

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Monta Dialogo para a selecao do Periodo 					  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(cCadastro) From aAdvSize[7],0 TO aAdvSize[6]/1.6,aAdvSize[5] OF oMainWnd PIXEL			
	
		@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup TO aObjSize[1,3],aObjSize[1,4] LABEL OemToAnsi(STR0043) OF oDlg PIXEL		//"Filtro Lan‡amentos de Marca‡”es:"
		oGroup:oFont:= oFont

		@ aObj1Size[2,1] , aObj1Size[2,2]	CHECKBOX aCheckBox[ 01 , 01 ] VAR aCheckBox[ 01 , 02 ] PROMPT aCheckBox[ 01 , 03 ] SIZE 200,10 OF oDlg PIXEL FONT oFont
		@ aObj1Size[3,1] , aObj1Size[3,2]	CHECKBOX aCheckBox[ 02 , 01 ] VAR aCheckBox[ 02 , 02 ] PROMPT aCheckBox[ 02 , 03 ] SIZE 200,10 OF oDlg PIXEL FONT oFont
		@ aObj1Size[4,1] , aObj1Size[5,2]	CHECKBOX aCheckBox[ 03 , 01 ] VAR aCheckBox[ 03 , 02 ] PROMPT aCheckBox[ 03 , 03 ] SIZE 200,10 OF oDlg PIXEL FONT oFont
		@ aObj1Size[5,1] , aObj1Size[5,2]	CHECKBOX aCheckBox[ 04 , 01 ] VAR aCheckBox[ 04 , 02 ] PROMPT aCheckBox[ 04 , 03 ] SIZE 200,10 OF oDlg PIXEL FONT oFont
		aCheckBox[ 04 , 01 ]:cToolTip := OemToAnsi( STR0048 )	//"Ap¢s selecionar pressione a tecla <TAB> para habilitar a digita‡„o do per¡odo"

		@ aObj2Size[2,1] , aObj2Size[2,2]	SAY OemToAnsi(STR0021)		SIZE 50,10 OF oDlg PIXEL FONT oFont	//"Inicial:"
		@ aObj2Size[3,1] , aObj2Size[3,2]	MSGET oPerIni VAR dPerIni	SIZE 50,10 OF oDlg PIXEL FONT oFont WHEN ( aCheckBox[ 04 , 02 ] ) VALID !Empty( dPerIni ) HASBUTTON
		@ aObj2Size[4,1] , aObj2Size[4,2]	SAY OemToAnsi(STR0022)		SIZE 50,10 OF oDlg PIXEL FONT oFont	//"Final:"
		@ aObj2Size[5,1] , aObj2Size[5,2]	MSGET oPerFim VAR dPerFim	SIZE 50,10 OF oDlg PIXEL FONT oFont WHEN ( aCheckBox[ 04 , 02 ] ) VALID ( !Empty( dPerFim ) .and. ( dPerIni <= dPerFim ) ) HASBUTTON
				
	ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 )

	IF ( lbSet15 )
		For nCheck := 1 To nChecks
			aAdd( aChecks , aCheckBox[ nCheck , 02 ] )
		Next nCheck
		Pona010McFilt(	oGetDados		,;	//Objeto GetDados Original
						nOpc			,;	//Opcao conforme a Rotina
						nOpcNewGd		,; 	//Opcao do Objeto GetDados de acordo com nOpc do aRotina
						@aTabPadrao		,;	//Array com as Informacoes para Montagem do Calendario de Marcacoes
						@aTabCalend		,;	//Array contendo as Informacoes do Calendario de Marcacoes
						aSP8GdAltera	,;	//Campos Alteraveis na GetDados
						bSP8GdDelOk		,;	//Bloco para Validacao da Delecao
						aChecks			,;	//Array com as Opcoes de Filtro
						dPerIni			,;	//Data Inicial para Filtro	( Depende do elemento 4 de aChecks )
						dPerFim			 ;	//Data Final para Filtro	( Depende do elemento 4 de aChecks )
					)
	EndIF		

End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura as Teclas de Atalho                     	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aSvKeys , .T. )

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010McFilt ³Autor³Marinaldo de Jesus   ³ Data ³29/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Disponibilizar as Marcacoes Filtradas para alteracao        ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010FltMarc() em Pona010()	                            ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona010McFilt(	oGetDados		,;	//Objeto GetDados Original
								nOpc			,;	//Opcao conforme a Rotina
								nOpcNewGd		,; 	//Opcao do Objeto GetDados de acordo com nOpc do aRotina
								aTabPadrao		,;	//Array com as Informacoes para Montagem do Calendario de Marcacoes
								aTabCalend		,;	//Array contendo as Informacoes do Calendario de Marcacoes
								aSP8GdAltera	,;	//Campos Alteraveis na GetDados
								bSP8GdDelOk		,;	//Bloco para Validacao da Delecao
								aChecks			,;	//Array com as Opcoes de Filtro
								dPerIni			,;	//Data Inicial para Filtro	( Depende do elemento 4 de aChecks )
								dPerFim			 ;	//Data Final para Filtro	( Depende do elemento 4 de aChecks )
							)

Local aSvKeys		:= GetKeys()
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjCoords	:= {}
Local aObjSize		:= {}
Local aCols			:= aClone( oGetDados:aCols   )
Local aHeader		:= aClone( oGetDados:aHeader )
Local aNewCols		:= {}
Local aDuplic		:= {}
Local aJaProc		:= {}
Local aImpares		:= {}
Local aButtons		:= {}
Local bOrdMarc		:= { || NIL }
Local bOrdMarcs		:= { || NIL }
Local bCalend		:= { || NIL }
LocAL bClrOrd		:= { || NIL }
Local bSet15		:= { || NIL }
Local bSet24		:= { || NIL }
Local bDialogInit	:= { || NIL }
Local bImpares		:= { || NIL }
Local bSort			:= { || NIL }
Local cOrdem		:= ""
Local dData			:= Ctod("//")
Local nHora			:= 0
Local lbSet15		:= .F.
Local lNaoOrdena	:= aChecks[ 1 ]
Local lImpares		:= aChecks[ 2 ]
Local lDuplicadas	:= aChecks[ 3 ]
Local lConsiPer		:= aChecks[ 4 ]
Local nLoop			:= 0
Local nLoop1		:= 0
Local nLoops		:= 0
Local nDuplic		:= 0
Local nImpar		:= 0
Local nImpares		:= 0
Local nPosData		:= GdFieldPos( "P8_DATA"	, aHeader )
Local nPosHora		:= GdFieldPos( "P8_HORA"	, aHeader )
Local nPosOrdem		:= GdFieldPos( "P8_ORDEM"	, aHeader )
Local nPosDelete	:= GdFieldPos( "GDDELETED"	, aHeader )
Local oFont			:= NIL
Local oDlg			:= NIL
Local oGroup		:= NIL
Local oGdMcFilt		:= NIL

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se ja processou desconsidera       						  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bImpares := { |x,y| IF(;
							( nLoop1 <> nLoop );
							.and.;
							cOrdem == x[ nPosOrdem ];
							.and.;
							!( x[nPosDelete ] ),;
							(;
								++nImpar,;
								aAdd( aImpares , y );
							),;	
							NIL;
						 );
				}		 	

	nLoops := Len( aCols )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Coloca o Cursor do Mouse em estado de Espera  	  		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	CursorWait()
		For nLoop := 1 To nLoops
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Nao Considera Marcacoes Deletadas  						  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( aCols[ nLoop , nPosDelete ] )
				Loop
			EndIF
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Se ja processou desconsidera       						  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( aScan( aJaProc , nLoop ) > 0 )
				Loop
			EndIF
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Verifica as Marcacoes Nao Ordenadas						  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( ( lNaoOrdena ) .and. Empty( aCols[ nLoop , nPosOrdem ] ) )
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Desconsidera as Marcacoes fora do Periodo Selecionado		  ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF ( lConsiPer )
					IF (;
							( aCols[ nLoop , nPosData ] < dPerIni );
							.or.;
							( aCols[ nLoop , nPosData ] > dPerFim );
						)
						Loop
					EndIF
				EndIF
				aAdd( aNewCols , aClone( aCols[ nLoop ] ) )
				aAdd( aJaProc , nLoop )
			Else
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Desconsidera as Marcacoes fora do Periodo Selecionado		  ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF ( lConsiPer )
					IF (;
							( aCols[ nLoop , nPosData ] < dPerIni );
							.or.;
							( aCols[ nLoop , nPosData ] > dPerFim );
						)
						Loop
					EndIF
				EndIF
				cOrdem		:= aCols[ nLoop , nPosOrdem ]
				dData		:= aCols[ nLoop , nPosData	]
				nHora		:= aCols[ nLoop , nPosHora	]
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Verifica as Marcacoes Duplicadas   						  ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF ( lDuplicadas )
					aDuplic		:= {}
					For nLoop1 := ( nLoop + 1 ) To nLoops
						/*/
						ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						³Nao Considera Marcacoes Deletadas  						  ³
						ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
						IF ( aCols[ nLoop , nPosDelete ] )
							Loop
						EndIF
						IF ( aScan( aJaProc , nLoop1 ) == 0 )
							IF (;
									( aCols[ nLoop1 , nPosData ] == dData );
									.and.;
									( aCols[ nLoop1 , nPosHora ] == nHora );
								)
								aAdd( aDuplic , nLoop1 )
							EndIF		
						EndIF
					Next nLoop1
					IF ( ( nDuplic := Len( aDuplic ) ) > 0 )
						IF ( aScan( aJaProc , nLoop ) == 0 )
							aAdd( aNewCols , aClone( aCols[ nLoop ] ) )
							aAdd( aJaProc , nLoop )
						EndIF
						For nLoop1 := 1 To nDuplic
							IF ( aScan( aJaProc , aDuplic[ nLoop1 ] ) == 0 )
								aAdd( aNewCols , aClone( aCols[ aDuplic[ nLoop1 ] ] ) )
								aAdd( aJaProc , aDuplic[ nLoop1 ] )
							EndIF
						Next nLoop1
					EndIF	
				EndIF
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Verifica as Marcacoes Impares      						  ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF ( ( lImpares ) .and. !Empty( aCols[ nLoop , nPosOrdem ] ) )
					aImpares	:= {}
					nImpar	    := 0
					aEval( aCols , bImpares )
					IF ( ( nImpar % 2 ) > 0 )
						nImpares := Len( aImpares )
						For nLoop1 := 1 To nImpares
							IF ( aScan( aJaProc , aImpares[ nLoop1 ] ) == 0 )
								aAdd( aNewCols , aClone( aCols[ aImpares[ nLoop1 ] ] ) )
								aAdd( aJaProc , aImpares[ nLoop1 ] )
							EndIF	
						Next nLoop1
					EndIF
				EndIF	
			EndIF
		Next nLoop
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura o Cursor do Mouse								  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	CursorArrow()
		
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega aCols com as Novas Informacoes						  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF Empty( aCols := aClone( aNewCols ) )
		//"N„o existem informa‡”es a serem disponibilizadas"
		MsgInfo(  OemToAnsi( STR0049 ) , cCadastro )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Bloco para o Botao e Tecla de Atalho de Insercao  de³
	³Ordem na Marcacao										      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bOrdMarc	:= { ||	MsAguarde(;
									{ ||;
											Pona010MarcOrd(	oGdMcFilt	,;
															nOpc		,;
															@aTabPadrao	,;
															@aTabCalend	 ;
														   );
								    },;
								    cCadastro	,;
								    OemToAnsi( STR0030 );	//"Ordenando Marca‡„o..."
								   ),;
						SetKey( VK_F4 , bOrdMarc	);
					}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Bloco para o Botao e Tecla de Atalho de Insercao  de³
	³Ordens nas Marcacoes										  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bOrdMarcs	:= { || MsAguarde(;
									{ ||;
											Pona010OrdMarc(	oGdMcFilt	,;
															nOpc		,;
															@aTabPadrao	 ;
														   );
									},;
									cCadastro	,;
									OemToAnsi( STR0014 );	//"Ordenando Marca‡”es..."
								 ),;
						SetKey( VK_F5 , bOrdMarcs );
					}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Bloco para o Botao e Tecla de Atalho para a Montagem³
	³e Visualizacao do Calendario			 					  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bCalend		:= { ||	MsAguarde(;
									{ ||;
											Pona010CalMarc(	oGdMcFilt	,;
															@aTabPadrao ,;
															@aTabCalend	 ;
										   				  );
									},;
									cCadastro,;
									OemToAnsi( STR0015 );	//"Calend rio de Marca‡”es..."
								  ),;
						SetKey( VK_F6 , bCalend );
					 }

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Bloco para o Botao e Tecla de Atalho para Limpar   o³
	³conteudo do campo P8_ORDEM									  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bClrOrd		:= { ||	MsAguarde(;
									{ ||;
											Pona010ClrOrdM(	oGdMcFilt , nOpc );
									},;
									cCadastro,;
									OemToAnsi( STR0019 );	//"Limpando as Ordens..."
								  ),;
						SetKey( VK_F7 , bClrOrd );
					}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Botao para a Ordenacao da Marcacao Corrente		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		aAdd(; 
				aButtons	,;
								{;
									"BMPTRG"				,;	
		   							bOrdMarc				,;
		       	   					OemToAnsi( STR0029  )	,;	//"Ordenar Marca‡„o <F4>..."
		       	   					OemToAnsi( STR0113  )	 ;	//"Ordenar"
		           				};
		     )					 	
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Botao para a Ordenacao de Todas as Marcacoes		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		aAdd(; 
				aButtons	,;
								{;
									"AUTOM"					,;	
		   							bOrdMarcs				,;
		       	   					OemToAnsi( STR0013  )	,;	//"Ordenar Marca‡”es <F5>..."
		       	   					OemToAnsi( STR0113  )	 ;	//"Ordenar"
		           				};
		     )					 	
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Botao para a Consulta ao Calendario de Marcacoes	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd(; 
			aButtons	,;
							{;
								"S4SB014N"			,;
   		       					bCalend				,;
   	    	   					OemToAnsi( STR0015 ),;//"Calend rio de Marca‡”es <F6>..."
   	    	   					OemToAnsi( STR0115 ) ;//"Calend."
   	        				};
   	     )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Botao para Limpar as Ordens                     	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		aAdd(; 
				aButtons	,;
								{;
									"note"				,;
	   		       					bClrOrd					,;
	   	    	   					OemToAnsi( STR0018  ) 	,;//"Limpar as Ordens <F7>..."
	   	    	   					OemToAnsi( STR0118  ) 	;//"Limpar"
	   	        				};
	   	     )
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdvSize		:= MsAdvSize( )
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 0 }
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para a Teclas <CTRL-O>   ( Button OK da Enchoi³
	³ ceBar )													   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSet15		:= { || IF(; 
								( ( nOpc == 3 ) .or. ( nOpc == 4 ) );			//Inclusao ou Alteracao
								.and.;				
								oGdMcFilt:TudoOk(),;							//Valida as Informacoes da GetDados
								(;
									lbSet15 := .T. ,;
									RestKeys( aSvKeys ),;
									oDlg:End();
							 	),;
							 	IF(; 
							 		( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) ,;		//Inclusao ou Visualizacao
							 			(;
							 				lbSet15 := .F. ,;
							 				.F.;
							 			 ),;	
									(;
										lbSet15 := .F.,;						//Visualizacao ou Exclusao
										RestKeys( aSvKeys ),;
										oDlg:End();
							 		);
							 	  );
						   );
					 }

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o  Bloco  para a Teclas <CTRL-X> ( Button Cancel da En³
	³ choiceBar )												   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSet24 := { || RestKeys( aSvKeys , .T. ) , oDlg:End() }

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define o Bloco para o Init do Dialog						   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bDialogInit := { ||;
						IF( ( nOpc == 3 ) .or. ( nOpc == 4 ) , SetKey( VK_F4 , bOrdMarc	)	, NIL ),;
						IF( ( nOpc == 3 ) .or. ( nOpc == 4 ) , SetKey( VK_F5 , bOrdMarcs )	, NIL ),;
						SetKey( VK_F6 , bCalend  ),;
						IF( ( nOpc == 3 ) .or. ( nOpc == 4 ) , SetKey( VK_F7 , bClrOrd  )	, NIL ),;
						EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons );
					}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Monta Dialogo para a selecao do Periodo 					  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(cCadastro) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL			

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta o Objeto GetDados para o SP8						   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		oGdMcFilt	:= MsNewGetDados():New(	aObjSize[1,1]								,;
											aObjSize[1,2]								,;
											aObjSize[1,3]								,;
											aObjSize[1,4]								,;
											nOpcNewGd									,;
											"Pona010LinOk"								,;
											"Pona010TudOk"								,;
											""											,;
											aSP8GdAltera								,;
											0											,;
											Len(aCols)									,;
											NIL											,;
											NIL											,;
											bSP8GdDelOk									,;
											oDlg										,;
											aHeader										,;
											aCols									 	 ;
										 )
        
	ACTIVATE MSDIALOG oDlg CENTERED ON INIT Eval( bDialogInit )

	IF ( lbSet15 )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Coloca o Cursor do Mouse em estado de Espera  	  		  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		CursorWait()
			IF ( ( nLoops := Len( aJaProc ) ) > 0 )
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Substitui as Informacoes Antigas                 	  		  ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				For nLoop := 1 To nLoops
					oGetDados:aCols[ aJaProc[ nLoop ] ] := aClone( oGdMcFilt:aCols[ nLoop ] )
				Next nLoop
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Adiciona as Novas Informacoes                    	  		  ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				nLoops := Len( oGdMcFilt:aCols )
				For nLoop := nLoop To nLoops
					aAdd( oGetDados:aCols , aClone( oGdMcFilt:aCols[ nLoop ] ) )
				Next nLoop
				oGetDados:oBrowse:Refresh()
				bSort := { |x,y| (;
									DataHora2Str( x[nPosData] , x[nPosHora] )	;
									< ;
						  			DataHora2Str( y[nPosData] , y[nPosHora] )	;
						  		  );	
				  		}
				aSort( oGetDados:aCols , NIL , NIL , bSort )
			EndIF	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Restaura o Cursor do Mouse								  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		CursorArrow()
	EndIF		

End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura as Teclas de Atalho                     	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aSvKeys , .T. )

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010BldCld ³Autor³Marinaldo de Jesus   ³ Data ³28/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Criar o Calendario de Marcacoes conforme Periodo            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona010BldCld(	aTabPadrao		,;	//Array contendo informacoes da Tabela Padrao
								aTabCalend		,;	//Array contendo informacoes do Calendario de Marcacoes
								dPerIni			,;	//Periodo Inicial Para a Montagem do Calendario
								dPerFim			,;	//Periodo Final Para a Montagem do Calendario
								lShowMsgInfo	 ;	//Se deve Mostrar mensagem de Inconsitencia
							 )

Local cKeyAtu	:= ( cEmpAnt + SRA->( RA_FILIAL + RA_MAT ) + ( Dtos( dPerIni ) + Dtos( dPerFim ) ) )
Local lCalendOk	:= .T.

DEFAULT aTabPadrao		:= {}
DEFAULT aTabCalend		:= {}
DEFAULT lShowMsgInfo	:= .T.

IF ( !( cBldCldUltKey == cKeyAtu ) .or. Empty( aTabCalend ) )
	aTabCalend		:= {}
	cBldCldUltKey	:= cKeyAtu
	IF !( lCalendOk := SRA->( CriaCalend(	dPerIni			,;	//Data Inicial do Calendario
											dPerFim			,;	//Data Final do Calendario
											RA_TNOTRAB		,;	//Turno de Trabalho
											RA_SEQTURN		,;	//Sequencia de Turno
											@aTabPadrao		,;	//Tabela de Horario Padrao
											@aTabCalend		,;	//Calendario de Marcacoes
											RA_FILIAL		,;	//Filial do Funcionario
											RA_MAT			,;	//Matricula do Funcionario
											RA_CC			,;	//Centro de Custo do Funcionario
											{}				 ;	//Trocas de Turno
							  			  );
							);
		)
		IF ( lShowMsgInfo )
			//"N„o foi poss¡vel criar o calend rio de Marca‡”es para o per¡odo informado"###"Aviso de Inconsistˆncia"
			MsgInfo( OemToAnsi( STR0009 ) , OemToAnsi( STR0010 ) )
		EndIF
	EndIF
EndIF

Return( lCalendOk )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona010PergChk³Autor³Marinaldo de Jesus   ³ Data ³28/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Ajusta Pergunte com o periodo atual                         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona010PergChk( cPerg , aTabPadrao , aTabCalend )

Local aArea			:= GetArea()
Local aAreaSX1		:= SX1->( GetArea() )
Local dPerIni		:= Ctod("//")
Local dPerFim		:= Ctod("//")
Local dPerCIni		:= Ctod("//")
Local dPerCFim		:= Ctod("//")
Local lPerAponOk    := .F.

CursorWait()

	IF ( lPerAponOk := PerAponta( @dPerIni , @dPerFim , NIL , .T. , xFilial("SRA") ) )
		IF Pona010BldCld( @aTabPadrao , @aTabCalend , dPerIni , dPerFim )
			dPerCIni	:= aTabCalend[ 01					, CALEND_POS_LIM_MARCACAO , 01 ]
			dPerCFim	:= aTabCalend[ Len( aTabCalend )	, CALEND_POS_LIM_MARCACAO , 01 ]
			IF ( dPerCIni < dPerIni )
				dPerIni := dPerCIni
			EndIF
			IF ( dPerCFim > dPerFim )
				dPerFim := dPerCFim
			EndIF
			Pergunte( cPerg , .F. )
			IF ( MV_PAR01 <> dPerIni )
				SetMVValue(cPerg, "MV_PAR01", dPerIni )
			EndIF	
			IF ( MV_PAR02 <> dPerFim )
				SetMVValue(cPerg, "MV_PAR02", dPerFim )
			EndIF	
		EndIF
	EndIF
	Pergunte(cPerg, .F.)
	RestArea( aAreaSX1 )
	RestArea( aArea )

CursorArrow()

Return( lPerAponOk )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³AltPona010	 ³Autor ³Marinaldo de Jesus    ³ Data ³03/09/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Executa a Opcao de Alteracao do PONA010              		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>   								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>   								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                    	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generica                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function AltPona010( cAlias , nReg , nOpc )
Return( PONA010( cAlias , nReg , 4 , NIL , NIL ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona010Locks    ³Autor³Mauricio MR         ³ Data ³14/04/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Bloqueia Lancamentos de Marcacoes /Apont/Abonos		         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL		                                               	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA010                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona010Locks( nOpc , cAlias , aRecnos )

Local lLocks	:= .T.

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se nao For Visualizacao				 					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nOpc == 2 )
		Break
	EndIF

	IF !( lLocks := WhileNoLock( cAlias , aRecnos , { xFilial( cAlias ) + SRA->RA_MAT } , 1 , 1 , .T. , NIL ) )
		Break
	EndIF

End Sequence

Return( lLocks )            

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ MenuDef		³Autor³  Luiz Almeida     ³ Data ³14/11/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Isola opcoes de menu para que as opcoes da rotina possam    ³
³          ³ser lidas pelas blibliotecas Framework da Versao 9.12 .     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA010                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Static Function MenuDef()

 Local aRotina := {;	   
 							{ STR0001 , "PesqBrw"	 , 0 , 01, ,.F.} ,; //"Pesquisar"
							{ STR0002 , "Pona010Mnt" , 0 , 02} ,; //"Visualizar"
							{ STR0008 , "GpLegend"   , 0 , 05, ,.F.}; //"Legenda"
							}                                                     
							
	Return aRotina
