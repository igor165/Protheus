#INCLUDE "PROTHEUS.CH"
#INCLUDE "GPEA280.CH"

#define Confirma 1
#define Redigita 2
#define Abandona 3

Static lIncluir:= .F.
Static cEFDAviso
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Gpea280  ³  Autor  ³ Emerson Rosa de Souza   ³ Data ³ 04.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cadastramento de beneficiarios                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS/FNC ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Leandro Dr. ³15/10/12³M12RH01   ³Requisito RHU210_03_03. Unificao da Folha ³±±
±±³Raquel Hager³07/07/14³TZZLU8    ³Inclusao de replicas versao 11  com itens ³±±
±±³            ³        ³          ³do eSocial.                               ³±±
±±³Sidney O.   ³30/07/14³TPXFNJ    ³Mensagens para aviso de inclusao,         ³±±
±±³Sidney O.   ³30/07/14³TPXFNJ    ³alteracao e exclusao de registros.        ³±±
±±³Sidney O.   ³05/08/14³TPXFNJ    ³GP280DtFim agora aceita data em branco    ³±±
±±³Sidney O.   ³05/08/14³TPXFNJ    ³GP280DtFim e GP280DtIni - modificacao     ³±±
±±³            ³                   ³na validacao das datas de Inicio e Fim    ³±±
±±³Renan Borges|07/08/15|TSTZB1    |Ajuste para não incluir nos “Beneficiari- ³±±
±±³            |        |          |os” as verbas que possuem o campo         ³±±
±±³            |        |          |“Beneficiário” (RV_LEEBEN) com "não".     ³±±
±±³Cecilia Carv|01/12/15|PCDEF86053|Ajuste para não ocorrer error.log ao efe- ³±±
±±³            |        |          |tuar manutencao nos beneficiarios.        ³±±
±±³Alex Hdez.  |02/03/16|PCREQ-9393|Merge 12.1.11 para Col. Se agrego funcion ³±±
±±³            |        |          |GP280whenof, si el campo RQ_OFCIO tiene va³±±
±±³            |        |          |lores permite editar los campos RQ_DTOFICI³±± 
±±³            |        |          | Y RQ_UNIDOFI. Función gp280Grava, gp280- ³±±
±±³            |        |          |Dele. Se Realizan validaciones al incluir ³±±
±±³            |        |          |beneficiarios tipo 3, modificar y eliminar³±±
±±³            |        |          |Se modifica funcion gp280Grava al guardar ³±± 
±±³            |        |          |RQ_NUMID campo RQ_VERBFER por RQ_VERBFOL. ³±± 
±±³Raquel Hager|17/06/16|TVGS32    |Ajustes diversos para importação via MILE.³±±
±±³Allyson M   ³30/06/16³TVLOBF    ³Ajuste p/ validacao do cadastro de verbas ³±±
±±³            ³                   ³p/ outros beneficiarios     			  ³±±
±±³Gabriel A.  ³29/07/16³TVK957    ³Alteração na MenuDef quando for inclusão. ³±±
±±³Flavio C.   |21/09/16|RHRH001-402|Ajuste de variaves private  workarea     ³±±
±±³Raquel Hager³12/01/17³  MRH-4110³Campos Fornec/Loja no cad. de Beneficiário³±±
±±³            ³        ³          ³para ger. de Tit. Pensão Alimentícia.     ³±±
±±³ Marco A.   ³20/10/17³TSSERMI01-³Se elimina variable Local dDtNasc en las  ³±±
±±³            ³        ³220       ³funciones GP280DtFim y Gp280DtIni, ya que ³±±
±±³            ³        ³          ³no era utilizada, pero generaba error al  ³±±
±±³            ³        ³          ³inicializarla con aCols. (ARG)            ³±±
±±³WinstonCosta³02/01/19³DRHPAG-22991³Retirada do trecho que trata o AS/400   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gpea280(nOpcAuto,xAutoCab,xAutoItens,nOpc)

	Local cFiltraSRA			//Variavel para filtro
	Local aIndexSRA		:= {}		//Variavel Para Filtro
	Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), { .T., .F., {"",""} }) //[1]Acesso; [2]Ofusca; [3]Mensagem
	Local aFldRel		:= {"RA_NOME", "RA_RACACOR"}
	Local lBlqAcesso	:= aOfusca[2] .And. !Empty( FwProtectedDataUtil():UsrNoAccessFieldsInList( aFldRel ) )

	Private lUsadoGP	:= IF(Empty(X3USADO("RE_TPDATO")),.F.,X3USADO("RE_TPDATO"))//Verifica se é Gestão Pública
	Private bFiltraBrw	:= {|| Nil}		//Variavel para Filtro
	Private aRotina		:= MenuDef() 		// ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina
	Private cModFol		:= SuperGetMv("MV_MODFOL",NIL,"1")
	Private lGp280Auto	:=( xAutoCab<>Nil )
	Private aAutoCab	:={}
	Private aAutoItens	:={}

	cCadastro := OemToAnsi(STR0009)  //"Cadastro de beneficiarios"

	//Tratamento de acesso a Dados Sensíveis
	If lBlqAcesso
		//"Dados Protegidos- Acesso Restrito: Este usuário não possui permissão de acesso aos dados dessa rotina. Saiba mais em {link documentação centralizadora}"
		Help(" ",1,aOfusca[3,1],,aOfusca[3,2],1,0)
		Return
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Endereca a funcao de BROWSE                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpcAuto <> Nil
		Do Case
			Case nOpcAuto == 3
			INCLUI := .T.
			ALTERA := .F.
			Case nOpcAuto == 4
			INCLUI := .F.
			ALTERA := .T.
			OtherWise
			INCLUI := .F.
			ALTERA := .F.
		EndCase

		dbSelectArea('SRA')
		nPos := Ascan(aRotina,{|x| x[4]== nOpcAuto})
		If ( nPos <> 0 )
			bBlock := &( "{ |a,b,c,d,e| " + aRotina[ nPos,2 ] + "(a,b,c,d,e) }" )
			Eval( bBlock, Alias(), (Alias())->(Recno()),nPos)
		EndIf
	Else
		If lGp280Auto
			aAutoCab:=xAutoCab
			aAutoItens:= xAutoItens
			mBrowseAuto(nOpc,aAutoCab,"SRA")
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se o Arquivo Esta Vazio                             ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !ChkVazio("SRA")
				Return
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cFiltraRh := CHKRH("GPEA280","SRA","1")
			bFiltraBrw 	:= {|| FilBrowse("SRA",@aIndexSRA,@cFiltraRH) }

			Eval(bFiltraBrw)
			SetBrwCHGAll( .T. )

			dbSelectArea("SRA")
			mBrowse( 6, 1,22,75,"SRA",,,,,,fCriaCor() )

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Deleta o filtro utilizando a funcao FilBrowse                     	   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			EndFilBrw("SRA",aIndexSra)
		EndIf
	EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp280Atu  ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 04.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de (Vis.,Inc.,Alt. e Del. de  beneficiarios       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ gp280Atu(ExpC1,ExpN1,ExpN2)                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Numero da opcao selecionada                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA280                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function gp280Atu(cAlias,nReg,nOpcx)
	Local aArea			:= SRA->(GetArea())
	local nT:=0
	Local a280Field 	:= {"RQ_FILIAL","RQ_MAT","RQ_ORDEM","RQ_SEQUENC"}
	Local aAdvSize		:= {}
	Local aInfoAdvSize	:= {}
	Local aObjSize		:= {}
	Local aObjCoords	:= {}
	Local aSRK			:= {}		//array auxiliar, carrega propriedades dos campos "SRK"
	Local bSet15		:= { || NIL }
	Local bSet24		:= { || NIL }
	Local nCnt			:= 0.00
	Local nTam			:= 0
	Local nAux			:= 0
	Local nSavRec   	:= 0
	Local oDlg
	Local oFont
	Local oGroup

	Local aNoFields 	:= 	If(!(cPaisLoc $ "COL*PER"), {"RQ_FILIAL","RQ_MAT","RQ_ORDEM","RQ_SEQUENC" }, {"RQ_FILIAL","RQ_MAT","RQ_SEQUENC" })
	Local bSeekWhile	:= {|| SRQ->RQ_FILIAL + SRQ->RQ_MAT }
	Local nSRQOrd		:= RetOrdem( "SRQ" , "RQ_FILIAL+RQ_MAT+RQ_ORDEM+RQ_SEQUENC" )

	Local lAlteracao := .F.

	Private nPosRec		:= 0

	Private aAC       	:= {STR0003,STR0001}
	Private aColsNew	:= {}
	Private aColsRec  	:= {}   //--Array que contem o Recno() dos registros da aCols
	Private aVerbRec  	:= {}   //--Array que contem o Recno() dos registros da aVbCompl
	Private aVbCompl  	:= {}
	Private aLbx1     	:= {}
	Private aLbx2     	:= {}
	Private aArqSRV   	:= {}
	Private cFil      	:= ""
	Private cMat      	:= ""
	Private oGet


	Private nPosTipoBen   := 0
	Private nPosVerbFol   := 0
	Private nPosSequen    := 0
	Private nPosParcela   := 0
	Private nPosValorPa   := 0
	Private nPosPercent
	Private nPosNrSlMin
	Private nPosVerbas
	Private nPosValFixo
	Private nPosOficio
	Private nPosDtOfic
	Private nPosUniDof
	Private nPosRecno

	Private lInclusao := .F.

	If lIncluir
		nOpcx := 3
		lIncluir :=.F.
	EndIf

	If ( Type('lGp280Auto') == "U" )
		lGp280Auto := .F.
	EndIf

	If ( Type('lUsadoGP') == "U" )
		lUsadoGP    := IF(Empty(X3USADO("RE_TPDATO")),.F.,X3USADO("RE_TPDATO"))//Verifica se é Gestão Pública
	EndIf

	If ( Type('cModFol') == "U" )
		cModFol	:= SuperGetMv("MV_MODFOL",NIL,"1")
	EndIf

	If ( Type('aRotina') == "U" )
		aRotina := MenuDef()
	EndIf

	If lGp280Auto
		cFil	:=	xFilial("SRA")
		If (nT := aScan(aAutoCab,{|x| UPPER(Alltrim(x[1]))=='RA_MAT'})) > 0
			cMat :=	aAutoCab[nT,2]
		EndIf

		dbSelectArea("SRA")
		dbSetOrder(1)
		If !dbSeek(cFil+cMat)
			Help( " ", 1, "REGNOIS" )
			Return
		EndIf
	Else
		cFil      	:= SRA->RA_FILIAL
		cMat      	:= SRA->RA_MAT
	EndIf
	nSavRec   	:= RecNo()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega Array de Campos Alteraveis                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAlias := "SRQ"

	cCod 	:= SRA->RA_MAT
	cDesc	:= SRA->RA_NOME

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If !lGp280Auto
		aAdvSize		:= MsAdvSize()
		aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
		aAdd( aObjCoords , { 015 , 020 , .T. , .F. } )
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
		aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
	EndIf

	While .T.

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe algum dado no arquivo                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea( cAlias )
		dbSeek( cFil + cMat )
		nCnt := 0
		While !EOF() .And. RQ_FILIAL + RQ_MAT == cFil + cMat
			If SRQ->RQ_SEQUENC == "01"
				nCnt++
			EndIf
			dbSkip()
		EndDo

		If nCnt > 0  .And. nOpcx = 3 .And. !lGp280Auto   //--Quando Inclusao e existir Registro
			Help(" ",1,"A280CBENEF")
			Exit
		ElseIf nCnt = 0 .And. nOpcx # 3  //--Quando Nao for Inclusao e nao existir Registro
			Help(" ",1,"A280SBENEF")
			Exit
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta a entrada de dados do arquivo                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Private aTELA[0][0],aGETS[0],aHeader[0],Continua:=.F.	//,nUsado:=0
		nCnt     :=0
		aVbCompl := {}
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gerar o array aCols com os beneficiarios                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		dbSelectArea(cAlias)
		FillGetDados(nOpcX							,; //1-nOpcX - número correspondente à operação a ser executada, exemplo: 3 - inclusão, 4 alteração e etc;
		cAlias							,; //2-cAlias - area a ser utilizada;
		nSRQOrd						,; //3-nOrder - ordem correspondente a chave de indice para preencher o  acols;
		xFilial(cAlias)+cCod			,; //4-cSeekKey - chave utilizada no posicionamento da area para preencher o acols;
		bSeekWhile						,; //5-bSeekWhile - bloco contendo a expressão a ser comparada com cSeekKey na condição  do While.
		NIL							,; //6-uSeekFor - pode ser utilizados de duas maneiras:1- bloco-de-código, condição a ser utilizado para executar o Loop no While;2º - array bi-dimensional contendo N.. condições, em que o 1º elemento é o bloco condicional, o 2º é bloco a ser executado se verdadeiro e o 3º é bloco a ser executado se falso, exemplo {{bCondicao1, bTrue1, bFalse1}, {bCondicao2, bTrue2, bFalse2}.. bCondicaoN, bTrueN, bFalseN};
		aNoFields		   	    		,; //7-aNoFields - array contendo os campos que não estarão no aHeader;
		NIL							,; //8-aYesFields - array contendo somente os campos que estarão no aHeader;
		NIL							,; //9-lOnlyYes - se verdadeiro, exibe apenas os campos de usuário;
		NIL				  			,; //10-cQuery - query a ser executada para preencher o acols(Obs. Nao pode haver MEMO);
		NIL                     		,; //11-bMontCols - bloco contendo função especifica para preencher o aCols; Exmplo:{|| MontaAcols(cAlias)}
		If(nOpcX = 3,.t.,.f.)     		,; //12-lEmpty – Caso True ( default é false ), inicializa o aCols com somente uma linha em branco ( como exemplo na inclusão).
		NIL     	             		,; //13-aHeaderAux, eh Caso necessite tratar o aheader e acols como variáveis locais ( várias getdados por exemplo; uso da MSNewgetdados )
		aColsNew                  		,; //14-aColsAux eh Caso necessite tratar o aheader e acols como variáveis locais ( várias getdados por exemplo; uso da MSNewgetdados
		NIL							)




		//Para localizacao Colombia e Peru, forca a criacao dos campos "Nro. Parcelas" e "Valor parcela".
		//Estes campos so podem ser preenchidos quando o beneficiario for do tipo executivo (Colombia) ou do tipo Cooperativas(Peru).
		//Caso estes campos sejam preenchidos, a tabela de valores futuros SRK eh alimentada.
		If cPaisLoc $ "COL*PER"
			dbSelectArea("SX3")
			SX3->(dbSetOrder(RetOrder("SX3","X3_ARQUIVO+X3_ORDEM")))
			SX3->(dbSeek("SRK"))
			While SX3->(!Eof()) .And. X3_ARQUIVO == "SRK"
				If SX3->X3_CAMPO == "RK_PARCELA" .Or. SX3->X3_CAMPO == "RK_VALORPA"
					If SX3->X3_CAMPO == "RK_PARCELA"
						cAux:= "RK1PARCELA"
					Else
						cAux:= "RK1VALORPA"
					EndIf

					Aadd(aSRK, {Trim(x3Titulo()),cAux, X3_PICTURE, X3_TAMANHO, X3_DECIMAL,"fVldRQParcela()", X3_USADO, X3_TIPO, X3_ARQUIVO} )
				EndIf
				SX3->(dbSkip())
			End

			If len(aSRK) == 2
				aAdd(aSRK, aHeader[len(aHeader)-1])
				Aadd(aSRK, aHeader[len(aHeader)])

				aHeader[Len(aHeader)-1]:= aSRK[1]
				aHeader[Len(aHeader)]:= aSRK[2]
				Aadd(aHeader, aSRK[3])
				Aadd(aHeader, aSRK[4])

			EndIf


			nPosTipoBen := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_TPBENEF" } )
			nPosParcela := Ascan( aHeader, { |x| Trim(x[2]) == "RK1PARCELA" } )
			nPosValorPa := Ascan( aHeader, { |x| Trim(x[2]) == "RK1VALORPA" } )
			nPosVerbFol := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_VERBFOL" } )
			nPosSequen  := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_ORDEM" } )
			nPosPercent := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_PERCENT" } )
			nPosNrSlMin := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_NRSLMIN" } )
			nPosVerbas  := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_VERBAS" } )
			nPosVerbFer := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_VERBFER" } )
			nPosValFixo := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_VALFIXO" } )
			nPosOficio  := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_OFICIO" } )
			nPosDtOfic  := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_DTOFICI" } )
			nPosUniDof  := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_UNIDOFI" } )
			nPosRecno   := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_REC_WT" } )
			If cPaisLoc == "COL"
				nPosTpCIC   := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_TPCIC" } )
				nPosCIC     := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_CIC" } )
			EndIf

			If len(aColsNew) >= 1
				nTam:= Len(aColsNew[1])
				For nAux:= 1 to len(aColsNew)
					Aadd(aColsNew[nAux], aColsNew[nAux][nTam-1])
					Aadd(aColsNew[nAux], aColsNew[nAux][nTam])
					aColsNew[nAux][nTam]:= aColsNew[nAux][nTam-2]
					aColsNew[nAux][nTam-1]:= 0
					aColsNew[nAux][nTam-2]:= 0
				Next nAux

				For nAux:= 1 to len(aColsNew)  //se tipo 3, busca valores dos 'valores futuros'
					If (cPaisLoc == "COL" .And. aColsNew[nAux][nPosTipoBen] == "3") .Or. (cPaisLoc == "PER" .And. aColsNew[nAux][nPosTipoBen] == "2")
						dbSelectArea("SRK")
						dbSetOrder(RetOrder("SRK","RK_FILIAL+RK_MAT+RK_NUMID"))
						If dbSeek(SRA->(RA_FILIAL+RA_MAT)+"SRK"+SRA->(RA_FILIAL+RA_MAT)+aColsNew[nAux][nPosVerbFol]+aColsNew[nAux][nPosSequen]+"SRQ")
							aColsNew[nAux][nPosParcela]:= SRK->RK_PARCELA
							aColsNew[nAux][nPosValorPa]:= SRK->RK_VALORPA
						EndIf
					EndIf
				Next nAux
			EndIf

		EndIf


		aCols	:= {}

		gp280aCols(nOpcx)

		nPosRec	:=GdfieldPos("RQ_REC_WT")

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Carrega o arquivo SRV no array aArqSRV					     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nOpca := 0
		If !lGp280Auto
			fMontArray(@aArqSRV,lUsadoGP)

			//RegtoMemory(cAlias)
			DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
			DEFINE MSDIALOG oDlg TITLE OemToAnsi(Space(1)+STR0010) FROM aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL  //"beneficiarios"

			@ aObjSize[1,1], aObjSize[1,2] 			GROUP oGroup TO aObjSize[1,3], aObjSize[1,4]*0.18 	LABEL OemToAnsi(STR0012) OF oDlg PIXEL	// "Matricula:"
			oGroup:oFont:= oFont
			@ aObjSize[1,1], aObjSize[1,4]*0.185 	GROUP oGroup TO aObjSize[1,3], aObjSize[1,4]*0.87 	LABEL OemToAnsi(STR0013) OF oDlg PIXEL	// "Nome:"
			oGroup:oFont:= oFont
			@ aObjSize[1,1], aObjSize[1,4]*0.875 	GROUP oGroup TO aObjSize[1,3], aObjSize[1,4] 		LABEL OemToAnsi(STR0027) OF oDlg PIXEL	// "Admiss„o:"
			oGroup:oFont:= oFont

			@ aObjSize[1,1]+10 , aObjSize[1,2]* 2.5	SAY OemToAnsi(SRA->RA_MAT)		SIZE 050,10 OF oDlg PIXEL FONT oFont
			@ aObjSize[1,1]+10 , aObjSize[1,4]* 0.2	SAY OemToAnsi(SRA->RA_NOME) 	SIZE 146,10 OF oDlg PIXEL FONT oFont
			@ aObjSize[1,1]+10 , aObjSize[1,4]* 0.89	SAY Dtoc(SRA->RA_ADMISSA)		SIZE 050,10 OF oDlg PIXEL FONT oFont

			oGet := MSGetDados():New(aObjSize[2,1],aObjSize[2,2],aObjSize[2,3],aObjSize[2,4],nOpcx,"gp280LinOk","gp280TudOk","",If(nOpcx=2.Or.nOpcx=5,Nil,.T.),,1,,,,,,,,,cModFol)

			bSet15 := {|| nOpca:=If(nOpcx=5,2,1),If(oGet:TudoOk(),oDlg:End(),nOpca:=0)}
			bSet24 := {|| nOpca := 0, oDlg:End()}

			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 )
		Else
			If MsGetDAuto(aAutoItens,"gp280LinOk","gp280TudOk",,nOpcx)
				nOpca:=If(nOpcx=5,2,1)
			EndIf
		EndIf

		//--Se nao for Exclusao
		If nOpcx # 5
			IF nOpcA == Redigita
				LOOP
			ElseIf nOpcA == Confirma .And. nOpcx # 2
				Begin Transaction
					//--Gravacao
					gp280Grava(cAlias)
					//--Processa Gatilhos
					EvalTrigger()
				End Transaction
			EndIf
			//--Se for Exclusao
		ElseIf nOpca = 2 .And. nOpcx = 5
			Begin Transaction
				gp280Dele()
			End Transaction
		EndIf

		Exit
	EndDo
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Restaura a integridade da janela                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//cAlias := "SRA"
	//dbSelectArea(cAlias)
	//Go nSavRec
	RestArea(aArea)
	If nOpcx == 3    //--Quando Inclusao
		MbrChgLoop(.F.)
	EndIf

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp280Dele ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 04.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Deleta os Registro de  beneficiarios                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ gp280Dele                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gp280Dele()
	Local cAlias	:= ALIAS()
	Local cCPF 		:= ""//variavel p/ PE GP280G01
	Local lGP280G01	:= ExistBlock( "GP280G01" )//variavel p/ PE GP280G01
	Local lRet  	:= .F.
	Local nCnt  	:= 0
	Local nx		:= 0
	Local lDel   := .F.
	Local lMsj   := .F.

	dbSelectArea( "SRQ" )
	For nx := 1 to Len(aCols)
		dbSeek(SRA->RA_FILIAL+SRA->RA_MAT)
		While SRQ->RQ_FILIAL+SRQ->RQ_MAT == SRA->RA_FILIAL+SRA->RA_MAT .And. SRQ->(!Eof())
			If (cPaisLoc == "PER" .And. SRQ->RQ_TPBENEF == "2")   //caso existam valores futuros "ativos", nao permite exclusao.
				dbSelectArea("SRK")
				dbSetOrder(RetOrder("SRK","RK_FILIAL+RK_MAT+RK_NUMID"))
				SRK->(dbGoTop())
				If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT)
					Do While SRK->(RK_FILIAL+RK_MAT) == SRA->(RA_FILIAL+RA_MAT) .And. !SRK->(Eof())
						If SRK->(dbSeek(SRA->(RA_FILIAL+RA_MAT)+"SRK"+SRA->(RA_FILIAL+RA_MAT)+SRQ->(RQ_VERBFOL+RQ_ORDEM)+"SRQ"));
						.Or. SRK->(dbSeek(SRA->(RA_FILIAL+RA_MAT)+"SRK"+SRA->(RA_FILIAL+RA_MAT)+SRQ->(RQ_VERBFER+RQ_ORDEM)+"SRQ"))
							If SRK->RK_PARCPAG == 0
								RecLock("SRQ",.F.,.T.)
								SRQ->(dbDelete())
								SRQ->(MsUnlock())
								RecLock("SRK",.F.,.T.) //apaga valores futuros
								SRK->(dbDelete())
								SRK->(MsUnlock())
								dbSelectArea("RCK")  //se houver registro na tabela "conta corrente valores futuros", deleta tambem.
								RCK->(dbSetOrder(RetOrder("RCK","RCK_FILIAL+RCK_MAT+RCK_NUMID")))
								If RCK->(dbSeek(SRA->(RA_FILIAL+RA_MAT)+"SRK"+SRA->(RA_FILIAL+RA_MAT)+SRQ->(RQ_VERBFOL+RQ_ORDEM)+"SRQ"))
									RecLock("RCK",.F.,.T.)
									RCK->(dbDelete())
									RCK->(MsUnlock())
								EndIf
							Else
								lRet:= .T.
							EndIf
						EndIf
						SRK->(Dbskip())
					Enddo
				Else
					RecLock("SRQ",.F.,.T.)
					SRQ->(dbDelete())
					SRQ->(MsUnlock())
					nCnt++
				EndIf
			ElseIf cPaisLoc == "COL" 
				lRet := gp280VldMod(@lDel)
				IF !lRet // Si no encontró registros en RCK,SRD y SRC puede eliminarse de SRQ
					RecLock("SRQ",.F.,.T.)
					SRQ->(dbDelete())	
					SRQ->(MsUnlock())
					nCnt++
					dbSelectArea("SRK")
					dbSetOrder(RetOrder("SRK","RK_FILIAL+RK_MAT+RK_NUMID")) // RK_FILIAL+RK_MAT+RK_NUMID
					IF lDel .and. SRQ->RQ_TPBENEF == "3"
						If SRK->(dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"SRK"+SRA->(RA_FILIAL+RA_MAT)+SRQ->(RQ_VERBFOL+RQ_ORDEM)+"SRQ"))	
							RecLock("SRK",.F.,.T.) //apaga valores futuros
							SRK->(dbDelete())
							SRK->(MsUnlock())
						ENDIF
					End IF
				
				
				Else
					lMsj := .T.
				EndIf
				lDel := .F.
			Else
				RecLock("SRQ",.F.,.T.)
				SRQ->(dbDelete())
				SRQ->(MsUnlock())
				nCnt++
			EndIf
			//--Ponto de Entrada para efetuar manutencao do beneficiario na tabela SA2
			If lGP280G01
				cCPF := SRQ->RQ_CIC
				ExecBlock( "GP280G01", .F., .F., {cCPF} )
			EndIf

			SRQ->(dbSkip())
		EndDo
	Next nx
	dbSelectArea( cAlias )
	WRITESX2("SRQ",nCnt)

	If lRet .Or. lMsj
		Help(" ",1,"A280SDEL")
	EndIf
	
	MsgInfo(STR0065,"")

Return Nil


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³                   ROTINAS DE CRITICA DE CAMPOS                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp280Grava³ Autor ³ Emerson Rosa de Souza ³ Data ³ 04.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava no arquivo de Beneficiarios                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ gp280Grava                                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function gp280Grava(cAlias)
	Local cCPF 		:= ""//variavel p/ PE GP280G01
	Local cChaveDel := ""
	Local cOrdem	:= "0"
	Local lGP280G01	:= ExistBlock( "GP280G01" )//variavel p/ PE GP280G01
	Local lTravou	:= .F.
	Local n			:= 0
	Local nMaxArray	:= Len(aHeader)
	Local nSeq		:= 0
	Local ny		:= 0
	Local nz		:= 0
	Local nT		:= 0
	Local nTmOrdem	:= TamSx3("RQ_ORDEM")[1]
	Local lDelete	:= .F.
	Local nPosNId		:= GdFieldPos("RQ_NUMID", aHeader)
	Local nPosVerb		:= GdFieldPos("RQ_VERBFOL", aHeader)
	Local nPosDtini		:= GdFieldPos("RQ_DTINI", aHeader)
	Local lAlteracao := .F.
	Local lDel   := .F.


	Private cRot:= ""
	Private cProcesso

	If ExistBlock("GP280GRV")
		ExecBlock("GP280GRV",.F.,.F.)
	EndIf

	dbSelectArea(cAlias)
	For n:=1 TO Len(aCols)
		lTravou:=.F.
		Begin Transaction

			If aCols[n][nPosRec] > 0 .Or. (lGp280auto .And. ALTERA)
				lAlteracao :=.T.
				If (lGp280auto .And. ALTERA)
					If (nT := aScan(aAutoItens[n],{|x| UPPER(Alltrim(x[1]))=='RQ_ORDEM'})) > 0
						SRQ->(dbSetOrder(1))
						If dbSeek(xFilial("SRQ",cFil)+cMat+aAutoItens[n,nT,2])
							RecLock(cAlias,.F.)
							lTravou:=.T.
						Else
							RecLock(cAlias,.T.)
							lTravou:=.T.
						EndIf
						cOrdem :=	aAutoItens[n,nT,2]
					Else
						cOrdem := IIF(cPaisLoc $ "COL",fUltOrdCol(cFil,cMat),fUltOrd(cFil,cMat))
					EndIf
				Else
					IIF(cPaisLoc $ "COL" ,(cAlias) -> (MSGoto(aCols[n][nPosRec])),MSGoto(aCols[n][nPosRec]))
					RecLock(cAlias,.F.,.T.)
					lTravou :=.T.
					cOrdem := IIF(cPaisLoc $ "COL",(cAlias)->RQ_ORDEM,StrZero(n,2))
					IF cPaisLoc == "COL" .and. (ALTERA .OR. aCols[n][Len(aCols[n])] ) 
						lTravou := !gp280VldMod(@lDel)		
					EndIF
				EndIf
			Else
				If !(aCols[n][Len(aCols[n])])
					RecLock(cAlias,.T.)
					cOrdem :=  IIF(cPaisLoc $ "COL",fUltOrdCol(cFil,cMat),StrZero(n,2)) 
					lTravou:=.T.
					lInclusao := .T.
				EndIf
			EndIf
			If lTravou
				//--Verifica se esta deletado
				If aCols[n][Len(aCols[n])]
					dbDelete()
					lDelete := .T.
					If aCols[n][Len(aCols[n])]
						cQuery := "UPDATE " + RetSqlName("SRQ") + " "
						cQuery += "   SET D_E_L_E_T_ = '*' "
						cQuery += " WHERE RQ_FILIAL	= '"+ SRQ->RQ_FILIAL + "' "
						cQuery += "   AND RQ_MAT = '" + SRQ->RQ_MAT 	+ "' "
						cQuery += "   AND RQ_ORDEM 	= '" + SRQ->RQ_ORDEM + "' "
						cQuery += "   AND D_E_L_E_T_ = ' '"
						TcSqlExec(cQuery)
					EndIf
					IF cPaisloc $ "COL"
						dbSelectArea("SRK")
						dbSetOrder(RetOrder("SRK","RK_FILIAL+RK_MAT+RK_NUMID")) // RK_FILIAL+RK_MAT+RK_NUMID
						IF lDel .And. SRQ->RQ_TPBENEF == "3"  
							If SRK->(dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"SRK"+SRA->(RA_FILIAL+RA_MAT)+SRQ->(RQ_VERBFOL+RQ_ORDEM)+"SRQ"))	
								RecLock("SRK",.F.,.T.) //apaga valores futuros
								SRK->(dbDelete())
								SRK->(MsUnlock())
							ENDIF
						EndIF
						lDel := .F.
					EndIf
				Else
					Replace SRQ->RQ_FILIAL  WITH SRA->RA_FILIAL
					Replace SRQ->RQ_MAT     WITH SRA->RA_MAT
					Replace SRQ->RQ_SEQUENC WITH "01"
					If cPaisLoc == "PAR"
						Replace SRQ->RQ_NUMID  WITH cAlias  + SRA->RA_MAT + aCols[n,nPosVerb] + DTOS(aCols[n,nPosDtini])  // cAlias + MAT + Concepto + Date Ini
						If (nPosNId > 0)
							aCols[n, nPosNId] := SRQ->RQ_NUMID
						EndIf
					EndIf	
				EndIf
				If ( lGP280G01, cCPF := SRQ->RQ_CIC, )//pega o valor do cpf antes da alteracao, caso haja PE
				For ny := 1 To nMaxArray
					If aHeader[ny][2] <> "RK1PARCELA" .Or. aHeader[ny][2] <> "RK1VALORPA"
						cCampo    := Trim(aHeader[ny][2])
						xConteudo := aCols[n,ny]
						Replace &cCampo With xConteudo
					EndIf
				Next ny

				//--Ponto de Entrada para efetuar manutencao do beneficiario na tabela SA2
				If lGP280G01
					ExecBlock( "GP280G01", .F., .F., {cCPF} )
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gravar a ordem de acordo com o que foi digitado no aCols.    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				Replace SRQ->RQ_ORDEM WITH StrZero(Val(cOrdem),nTmOrdem)

				If cPaisLoc $ "COL*PER"
					// RQ_NUM ID Para Colombia
					If cPaisLoc == "COL"  
						SRQ -> RQ_NUMID := "SRK"+SRA->(RA_FILIAL+RA_MAT)+SRQ->RQ_VERBFOL+Transform(SRQ->RQ_ORDEM, "99")+"SRQ"
					EndIF
					//grava valores futuros, caso beneficiario for tipo executivo e campos referentes a parcelas estejam preenchidos.
					If ((cPaisLoc == "COL" .And. SRQ->RQ_TPBENEF == "3") .Or. (cPaisLoc == "PER" .And. SRQ->RQ_TPBENEF == "2") ).And. !Empty(aCols[n][nPosParcela]) .And.;
					(  Empty(aCols[n][nPosRecno]) .Or. aColsNew[n][nPosParcela] <> aCols[n][nPosParcela]  )
						dbSelectArea("SRK")
						RecLock("SRK",.T.)
						cProcesso:= SRA->RA_PROCES
						Replace SRK->RK_FILIAL  WITH SRA->RA_FILIAL
						Replace SRK->RK_MAT	    WITH SRA->RA_MAT
						Replace SRK->RK_PD      WITH SRQ->RQ_VERBFOL
						Replace SRK->RK_VALORTO WITH SRQ->RQ_VALFIXO
						Replace SRK->RK_PARCELA WITH aCols[n][nPosParcela]
						Replace SRK->RK_VALORPA WITH aCols[n][nPosValorPa]
						Replace SRK->RK_DTVENC  WITH Date()
						Replace SRK->RK_DTMOVI  WITH IIF(cPaisLoc <> "COL" ,Date(), IIF(!Empty(SRQ->RQ_DTOFICI),SRQ -> RQ_DTOFICI,Date()))
						Replace SRK->RK_CC      WITH SRA->RA_CC
						Replace SRK->RK_PERINI  WITH Gp110PerIni()
						Replace SRK->RK_NUMPAGO WITH Gp110NumPago()
						Replace SRK->RK_STATUS  WITH "2"
						Replace SRK->RK_VLSALDO WITH SRQ->RQ_VALFIXO
						Replace SRK->RK_NUMID   WITH "SRK"+SRA->(RA_FILIAL+RA_MAT)+SRQ->RQ_VERBFOL+Transform(SRQ->RQ_ORDEM, "99")+"SRQ"
						Replace SRK->RK_PROCES  WITH SRA->RA_PROCES
						//Replace SRK->RK_DEPTO  WITH SRA->RA_DEPTO
						Replace SRK->RK_POSTO   WITH SRA->RA_POSTO
						If cPaisLoc == "COL"
							SRK -> RK_JUROANO := 0
							SRK -> RK_JUROMES := 0
							SRK -> RK_PARCPAG := 0
							SRK -> RK_VLRPAGO := 0
							SRK -> RK_VALORAR := 0
							SRK -> RK_VNAOAPL := 0
							SRK -> RK_DOCUMEN := SRQ -> RQ_OFICIO
							SRK -> RK_PDJUROS := ""
							SRK -> RK_VLJUROS := 0
							SRK -> RK_PCJUROS := 0
							SRK -> RK_PGJUROS := 0
							SRK -> RK_QUITAR  := ""
							SRK -> RK_ITEM	  := SRA -> RA_ITEM
							SRK -> RK_CLVL	  := SRA -> RA_CLVL
							SRK -> RK_VALPARE := 0
							SRK -> RK_CODBCO  := SRQ -> RQ_BCDEPBE
							SRK -> RK_NRCONTR := SRQ -> RQ_CTDEPBE
						EndIF
						SRK->(MsUnLock())

						If ! Empty(SRQ->RQ_VERBFER)                 // Geracao de Lancamento Futuro para Ferias no caso de beneficiario executivo

							RecLock("SRK",.T.)
							Replace SRK->RK_FILIAL  WITH SRA->RA_FILIAL
							Replace SRK->RK_MAT	    WITH SRA->RA_MAT
							Replace SRK->RK_PD      WITH SRQ->RQ_VERBFER
							Replace SRK->RK_VALORTO WITH SRQ->RQ_VALFIXO
							Replace SRK->RK_PARCELA WITH aCols[n][nPosParcela]
							Replace SRK->RK_VALORPA WITH aCols[n][nPosValorPa]
							Replace SRK->RK_DTVENC  WITH Date()
							Replace SRK->RK_DTMOVI  WITH Date()
							Replace SRK->RK_CC      WITH SRA->RA_CC
							Replace SRK->RK_PERINI  WITH Gp110PerIni()
							Replace SRK->RK_NUMPAGO WITH Gp110NumPago()
							Replace SRK->RK_STATUS  WITH "2"
							Replace SRK->RK_VLSALDO WITH SRQ->RQ_VALFIXO
							Replace SRK->RK_NUMID   WITH "SRK"+SRA->(RA_FILIAL+RA_MAT)+SRQ->RQ_VERBFER+Transform(SRQ->RQ_ORDEM, "99")+"SRQ"
							Replace SRK->RK_PROCES  WITH SRA->RA_PROCES
							Replace SRK->RK_POSTO   WITH SRA->RA_POSTO
							SRK->(MsUnlock())

						EndIf
					EndIf
				EndIf
			
			
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se existirem verbas complementares, gravar em novos registros³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Len(aVbCompl) >= n .And. !lDelete
				fPackGpe("SRQ")
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Grava as verbas complementares em novos registros            ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SRQ")
				nSeq   := 2
				For nZ := 1 To Len(aVbCompl[n])

					If Len(aVerbRec) >= n .And. Len(aVerbRec[n]) >= nZ
						dbGoTo(aVerbRec[n,nZ])
						RecLock(cAlias,.F.,.T.)
						If Empty(aVbCompl[n,Nz])
							SRQ->(dbDelete())
							Loop
						EndIf
					Else
						RecLock(cAlias,.T.,.T.)
						Replace SRQ->RQ_FILIAL  WITH SRA->RA_FILIAL
						Replace SRQ->RQ_MAT     WITH SRA->RA_MAT	
					EndIf 

					Replace SRQ->RQ_ORDEM   WITH StrZero(n,2)
					Replace SRQ->RQ_SEQUENC WITH StrZero(nSeq,2)
					Replace SRQ->RQ_VERBAS  WITH aVbCompl[n,nZ]
					
					nSeq ++
					SRQ->(MsUnlock())
				Next nZ
			EndIf
		End Transaction
	Next n

	If lAlteracao
		lInclusao := .F.
	EndIf

	If lInclusao
		MsgInfo(STR0066,"")
	Else
		MsgInfo(STR0067,"")
	EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp280LinOk³ Autor ³ Emerson Rosa de Souza ³ Data ³ 04.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Critica linha digitada                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function gp280LinOk(o)
	Local nx    		:= 0
	Local lRet 			:= .T.
	Local nPosValFixo 	:= Ascan( aHeader, { |x| Trim(x[2]) == "RQ_VALFIXO" } )
	Local nPosSalMini 	:= Ascan( aHeader, { |x| Trim(x[2]) == "RQ_NRSLMIN" } )
	Local nPosPercent	:= GdFieldPos("RQ_PERCENT")
	Local lUsadoDT 		:= X3USADO("RQ_DTINIPG")
	Local nPosVFer		:= 0
	Local nPosVDFe		:= 0
	Local nPosVFol		:= GdFieldPos("RQ_VERBFOL")
	Local nPosTpDoc		:= GdFieldPos("RQ_TPDOCTO")
	Local nPosPas		:= GdFieldPos("RQ_PAISPAS")
	Local nPosTpPen		:= GdFieldPos("RQ_TPPENS")
	Local nPosDtFim		:= GdFieldPos("RQ_DTFIM")
	Local nPosDtIn		:= GdFieldPos("RQ_DTINI")
	Local nPosDtNasc	:= 0
	Local nPosMBen		:= 0
	Local nPosTpPiso	:= 0
	Local nPosVlPiso	:= 0
	Local x				:= 0
	Local cVerbaFol     := ""

	Default cEFDAviso	:= If(cPaisLoc == 'BRA' .AND. Findfunction("fEFDAviso"), fEFDAviso(), "0")			//Se nao encontrar este parametro apenas emitira alertas

	IF !( GdDeleted() )
		If aCols[n,len(aHeader)+1]  = .F.
			For nx = 1 To Len(aHeader)
				If Empty(aCols[n][nx])
					If Trim(aHeader[nx][2]) == "RQ_NOME"
						Help(" ",1,"A280SNOME")
						Return .F.
					ElseIf Trim(aHeader[nx][2]) == "RQ_PERCENT" .and. ( (!(cPaisLoc $ "COL*PER")) .or. ( cPaisLoc $ "COL*PER" .and. aCols[n][nPosTipoBen] != "4" ) )
						If (!(cPaisLoc $ "COL*PER") .Or. (aCols[n][nPosParcela] == 0 .And. aCols[n][nPosValorPa] == 0 ))
							If (nPosValFixo > 0 .And. aCols[n,nPosValFixo] == 0) .And.;
							(nPosSalMini > 0 .And. aCols[n,nPosSalMini] == 0)
								Help(" ",1,"A280SPERC")
								Return .F.
							EndIf
						EndIf
					EndIf
				EndIf
				If Trim(aHeader[nx][2]) == "RQ_VERBDFE"
					nPosVFer:= Ascan(aHeader, { |x| Trim(x[2]) == "RQ_VERBFER" } )
					nPosVDFe:= Ascan(aHeader, { |x| Trim(x[2]) == "RQ_VERBDFE" } )
					If (nPosVFer > 0 .And. !Empty(aCols[n,nPosVFer])) .And.;
					(nPosVDFe > 0 .And. !Empty(aCols[n,nPosVDFe])) .And.;
					aCols[n,nPosVFer] == aCols[n,nPosVDFe]
						Aviso( OemToAnsi(STR0029), OemToAnsi(STR0033), {OemToAnsi(STR0034)},,OemToAnsi(STR0035))
						//"Atencao" ### "A verba de dif. férias (RQ_VERBDFE) informada deve ser diferente da verba de férias (RQ_VERBFER)" ### "OK" ### "Verba Duplicada"
						Return .F.
					EndIf
				ElseIf Trim(aHeader[nx][2]) == "RQ_DTINI"
					If Empty(aCols[n, nx])
						// "Data Inicio" # "O cmapo Data Início - RQ_TDINI - é obrigatório." # "Informe a data em que se inicia o desconto da pensão alimentícia."
						Help(NIL, NIL, STR0073, NIL, STR0074, 1, 0, NIL, NIL, NIL, NIL, NIL, {STR0075})
						Return .F.
					EndIf
				EndIf
			Next nx

			If cPaisLoc == 'BRA'
				If !fVldForn(3) //valida fornecedor/loja
					Return .F.
				EndIf
			EndIf

			//Verifica se existe os campos necessarios para eSocial
			//O controle do cPaisloc eh reduntante, e porque futuramente o controle de fases sera retirado
			lAviso := .F.
			If cPaisLoc == 'BRA'

				If !Empty(aCols[n,GdFieldPos("RQ_NASC",aHeader)]) .And. !Empty(aCols[n,GdFieldPos("RQ_DTINI",aHeader)])
					If (aCols[n,GdFieldPos("RQ_NASC",aHeader)] > aCols[n,GdFieldPos("RQ_DTINI",aHeader)])
						Aviso(OemToAnsi(STR0029),OemToAnsi(STR0064)+".",{OemToAnsi(STR0034)} ) //"Atencao" ## "Data nascimento beneficiario invalida, a Data de Inicia  devera ser maior ou igual a Data de Nascimento." ## "OK"
						Return .F.
					EndIf
				EndIf

				nPosDtNasc	:= GdFieldPos("RQ_NASC")
				nPosCPF		:= GdFieldPos("RQ_CIC")
				nPosTpPiso	:= GdFieldPos("RQ_TPPISO")
				nPosVlPiso	:= GdFieldPos("RQ_VLPISO")

				cCpfBenef	:= aCols[n,nPosCPF]
				nValFixo	:= aCols[n,nPosValFixo]
				nSalMin		:= aCols[n,nPosSalMini]
				nPercent	:= aCols[n,nPosPercent]
				cVerbaFol   := aCols[n,nPosVFol]

				//Como eh regra nao permitir inclusao de dados invalidos, nao validaremos o parametro MV_EFDAVIS para alerta
				If nPosDtNasc > 0 .And. nPosCPF > 0
					If  aCols[n,nPosDtNasc] > dDataBase
						If !( Year(aCols[n,nPosDtNasc]) == Year(dDataBase) )
							cDataTemp	:= DtoS(aCols[n,nPosDtNasc])
							nAno		:= Val(SubStr(cDataTemp , 1 , 4)) - 100
							cDataTemp	:= AllTrim(Str(nAno))+SubStr(cDataTemp , 5 , 4)
							dDataTemp	:= StoD(cDataTemp)
							aCols[n,nPosDtNasc]	:= dDataTemp
						Else
							Aviso (OemToAnsi(STR0029),OemToAnsi(STR0061),{OemToAnsi(STR0034)}) // "Data nascimento beneficiario invalida, pois e maior que a database do sistema."
							Return .F.
						EndIf
					EndIf

					If 	!Empty(SRA->RA_CIC) .And. cCpfBenef == SRA->RA_CIC
						Aviso(OemToAnsi(STR0029),OemToAnsi(STR0054)+".",{OemToAnsi(STR0034)} ) //"Atencao" ## "O CPF do Beneficiario nao pode ser igual ao CPF do titular" ## "OK"
						Return .F.
					EndIf

					If !(Empty(cCpfBenef))
						For x := 1 To Len(aCols)
							If ( x <> n ) .And. !( aCols[x,len(aHeader)+1] ) .And. ( aCols[x,nPosCPF] == cCpfBenef ) .And. ( aCols[x,nPosValFixo] == nValFixo .And. aCols[x,nPosSalMini] == nSalMin .And. aCols[x,nPosPercent] == nPercent .And. aCols[x,nPosVFol] == cVerbaFol )
								If ( Empty(aCols[n,nPosDtFim]) .And. Empty(aCols[x,nPosDtFim]) ) .OR. ( Empty(aCols[x,nPosDtFim]) .And. aCols[x,nPosDtIn] <= aCols[n,nPosDtFim] ) .OR.;
									( Empty(aCols[n,nPosDtFim]) .And. aCols[n,nPosDtIn] <= aCols[x,nPosDtFim] ) .Or.;
									( !Empty(aCols[x,nPosDtFim]) .And. !Empty(aCols[n,nPosDtFim]) .And. ConflictDate(aCols[x,nPosDtIn], aCols[x,nPosDtFim], aCols[n,nPosDtIn], aCols[n,nPosDtFim] ) )

									Aviso( OemToAnsi(STR0029),OemToAnsi(STR0060),{OemToAnsi(STR0034)} )//O CPF do Beneficiario e inválido, pois existe outro beneficiario com o mesmo CPF.
									Return .F.
								EndIf
							EndIf
						Next x
					EndIf

					If cEFDAviso <> "2"
						//##	"mas nao sera impeditivo para a gravacao dos dados de beneficiario(s)." ##"e sera necessario o preenchimento do mesmo para efetivar a gravacao dos dados deste de beneficiario(s)."
						cMsg:= IIf (cEFDAviso == "0", OemToAnsi(STR0058),OemToAnsi(STR0059))
						If Empty(aCols[n,nPosCPF]) .AND. !lGp280Auto
							//"Atencao" ## ""O CPF do beneficiário não foi informado." ## "Este campo e obrigatorio na eSocial."## "OK"
							Aviso (OemToAnsi(STR0029), OemToAnsi(STR0072)+ CRLF + OemToAnsi(STR0056)+", "+CRLF +cMsg,{OemToAnsi(STR0034)})
							lAviso := .T.
						EndIf

						If lAviso .And. cEFDAviso == "1"
							Return .F.
						EndIf
					EndIf
				EndIf

				If nPosTpPiso > 0
					If !Empty( aCols[n,nPosTpPiso] ) .And. aCols[n,nPosTpPiso] != "1" .And. Empty( aCols[n,nPosVlPiso] )
						Help(NIL, NIL, 'HELP', NIL, STR0076, 1, 0, NIL, NIL, NIL, NIL, NIL, {STR0077})//"Não foi informado o valor do piso"##"Preencha o valor do piso"
						Return .F.
					ElseIf !Empty( aCols[n,nPosVlPiso] ) .And. !(aCols[n,nPosTpPiso] $ "2/3/4")
						Help(NIL, NIL, 'HELP', NIL, STR0078, 1, 0, NIL, NIL, NIL, NIL, NIL, {STR0079})//"Houve preenchimento indevido do valor do piso"##"Retire o preenchimento do valor do piso ou ajuste o valor do tipo de piso"
						Return .F.					
					ElseIf aCols[n,nPosTpPiso] == "4" .And. (!Empty(nValFixo) .Or. !Empty(nSalMin))
						Help(NIL, NIL, 'HELP', NIL, STR0080, 1, 0, NIL, NIL, NIL, NIL, NIL, {STR0081})//"Houve preenchimento incorreto do tipo do piso"##"O piso sobre base de cálculo somente pode ser selecionado se o cálculo não for realizado sobre valor fixo ou sobre o salário mínimo"
						Return .F.							
					ElseIf !Empty(nValFixo) .And. aCols[n,nPosTpPiso] $ "2/3/4"
						Help(NIL, NIL, 'HELP', NIL, STR0080, 1, 0, NIL, NIL, NIL, NIL, NIL, {STR0082})//"Houve preenchimento incorreto do tipo do piso"##"O valor do piso deve ser informado diretamente no campo do valor fixo"
						Return .F.							
					EndIf
				EndIf
			EndIf


			If cPaisLoc $ "COL*PER" .And. aCols[n][nPosTipoBen] == "4" .And. aCols[n][nPosValFixo] == 0
				Aviso(STR0029, STR0037,{"OK"}) //"Informe o valor da parcela"
				Return .F.
			Endif

		EndIf

		If ( cPaisLoc == "BRA" )
			cPosVADT  := GdFieldPos( "RQ_VERBADT", aHeader )
			cPosVFol  := GdFieldPos( "RQ_VERBFOL", aHeader )
			cPosVFer  := GdFieldPos( "RQ_VERBFER", aHeader )
			cPosV131  := GdFieldPos( "RQ_VERB131", aHeader )
			cPosV132  := GdFieldPos( "RQ_VERB132", aHeader )
			cPosVPLR  := GdFieldPos( "RQ_VERBPLR", aHeader )
			cPosCPF   := GdFieldPos( "RQ_CIC"	 , aHeader )
			cPosNome  := GdFieldPos( "RQ_NOME"   , aHeader )
			cCPF	  := GdFieldGet( "RQ_CIC" )
			cNome     := GdFieldGet( "RQ_NOME" )

			If lUsadoDT .And. lUsadoGP
				cDtIniPg  := GdFieldGet( "RQ_DTINIPG" )
				cPosDtFim := GdFieldPos( "RQ_DTFIMPG", aHeader )
			EndIf

			cVerbas   := AllTrim(GdFieldGet( "RQ_VERBADT" )) + "*" + AllTrim(GdFieldGet( "RQ_VERBFOL" )) + "*" +  AllTrim(GdFieldGet( "RQ_VERBFER" )) ;
			+ "*" +  AllTrim(GdFieldGet( "RQ_VERB131" )) + "*" +  AllTrim(GdFieldGet( "RQ_VERB132" )) + "*" +  AllTrim(GdFieldGet( "RQ_VERBPLR" ))

			nPosItem := aScan( aCols, { |x| !x[Len(x)] .And. ((x[cPosVAdt] $ cVerbas .OR. x[cPosVFol] $ cVerbas .OR. x[cPosVFer] $ cVerbas .OR. ;
			x[cPosV131] $ cVerbas .OR. x[cPosV132] $ cVerbas .OR. x[cPosVPLR] $ cVerbas) .AND. ;
			( ((Empty(x[cPosCPF]) .OR. Empty(cCPF)) .Or. ( !Empty(x[cPosCPF]) .And. !Empty(cCPF).And. x[cPosCPF] <> cCPF )) .AND. AllTrim(x[cPosNome]) <> AllTrim(cNome) ))})


			If lUsadoDT .And. lUsadoGP
				nPosMBen := aScan( aCols, { |x| (x[cPosVAdt] $ cVerbas .OR. x[cPosVFol] $ cVerbas .OR. x[cPosVFer] $ cVerbas .OR. ;
				x[cPosV131] $ cVerbas .OR. x[cPosV132] $ cVerbas .OR. x[cPosVPLR] $ cVerbas) .AND. ;
				((x[cPosCPF] == cCPF .OR. ((Empty(x[cPosCPF]) .OR. Empty(cCPF)) .AND. AllTrim(x[cPosNome]) == AllTrim(cNome))) .AND. ;
				(Empty(x[cPosDtFim]).OR. x[cPosDtFim] > cDtIniPg))})
			EndIf

			If nPosItem > 0 .AND. nPosItem <> n

				Aviso(STR0029,STR0032,{"OK"}) //"Verba já cadastrada para outro Beneficiário"
				lRet:= .F.

			EndIf


			If nPosMBen > 0 .AND. nPosMBen <> n

				Aviso(STR0029,STR0031,{"OK"},,STR0030) //"Preencha o campo Dt. Fim Pg. da pensão anterior com data inferior a Dt. Inico Pg. da nova pensão. ### Mesmo Beneficiário e Mesma Verba! ###
				lRet:= .F.

			EndIf

		ElseIf ( lUsadoDT .and. cPaisLoc == "MEX" )

			cPosVFol  := GdFieldPos( "RQ_VERBFOL", aHeader )
			cVerbas := AllTrim(GdFieldGet( "RQ_VERBFOL" ))

			nPosItem := 0

			For nx := 1 To Len(aCols)
				If ( (aCols[nx,cPosVFol] == cVerbas) .and. (nx <> n) )
					nPosItem := nx
					nx := Len(aCols)
				EndIf
			Next

			If ( nPosItem > 0 )

				Aviso(STR0029,STR0032,{"OK"}) //"Verba já cadastrada para outro Beneficiário"
				lRet:= .F.

			EndIf

		EndIf

		If lRet .And. cPaisLoc == "PER"
			If Empty( aCols[n][nPosTipoBen] )
				Aviso(STR0029,STR0048,{"OK"}) //"Preencha o campo Tipo de Beneficiário."
				Return .F.
			EndIf
		EndIf

		If lRet .And. cPaisLoc == "COS"
			If !Empty(aCols[n,GdFieldPos("RQ_CIC",aHeader)]) .And. !Empty(aCols[n,GdFieldPos("RQ_TPCIC",aHeader)])
				lRet := ValidRcc("S014",aCols[n,GdFieldPos("RQ_TPCIC",aHeader)],1,1)
			ElseIf !Empty(aCols[n,GdFieldPos("RQ_CIC",aHeader)]) .And. Empty(aCols[n,GdFieldPos("RQ_TPCIC",aHeader)])
				Help("",1, "A280NTPCIC")
				Return .F.
			ElseIf Empty(aCols[n,GdFieldPos("RQ_CIC",aHeader)]) .And. !Empty(aCols[n,GdFieldPos("RQ_TPCIC",aHeader)])
				Help("",1, "A280NCIC")
				Return .F.
			EndIf
		EndIf

		If lRet .And. cPaisLoc $ "COL*PER"
			If (cPaisLoc == "COL" .And. aCols[n][nPosTipoBen] == "3") .Or. (cPaisLoc == "PER" .And. aCols[n][nPosTipoBen] == "2")
				If aCols[n][nPosParcela] <> 0 .Or. aCols[n][nPosValorPa] <> 0
					If aCols[n][nPosValorPa] == 0
						Aviso(STR0029, STR0037,{"OK"}) //"Informe o valor da parcela"
						Return .F.
					EndIf
					If aCols[n][nPosParcela] == 0
						Aviso(STR0029, STR0038,{"OK"}) //"Informe o número de parcelas"
						Return .F.
					EndIf
					If Empty(aCols[n][nPosVerbFol])
						Aviso(STR0029, STR0039,{"OK"}) //"Informe a verba para Folha (RQ_VERBFOL)"
						Return .F.
					EndIf

					aCols[n][nPosPercent]   := 0
					aCols[n][nPosNrSlMin]   := 0
					aCols[n][nPosVerbas]    := ""

					oGet:oBrowse:Refresh()

				EndIf
			EndIf

			If cPaisLoc == "COL"
				If !Empty(aCols[n][nPosOficio])
					If Empty(aCols[n][nPosDtOfic])
						Aviso(STR0029, STR0040,{"OK"}) //"Informe a data do ofício (RQ_DTOFICI)"
						Return .F.
					EndIf
					If Empty(aCols[n][nPosUniDof])
						Aviso(STR0029, STR0041,{"OK"})  //"Informe a Unidade Judicial (RQ_UNIDOFI)"
						Return .F.
					EndIf
				EndIf
			EndIf

			If cPaisLoc == "PER"
				If lRet .and. aCols[n,nPosTpDoc] == "07" .and. Empty(aCols[n,nPosPas])
					MsgInfo( OemToAnsi(STR0049) ) //"Pais emissor do Passaport obrigatório para este tipo de documento."
					lRet := .F.
				EndIf

				If lRet .and. !(aCols[n,nPosTpPen] $ "24|26")
					MsgInfo( OemToAnsi(STR0050) ) //"Tipo de pensionista deve ser 24 ou 26"
					lRet := .F.
				EndIf
			EndIf
		EndIf
	EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp280TudOk³ Autor ³ Emerson Rosa de Souza ³ Data ³ 04.12/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function gp280TudOk()
	Local lRetorna  := .T.
	Continua := .F.
Return lRetorna

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fSeleVerba³ Autor ³ Emerson Rosa de Souza ³ Data ³ 05.12/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Seleciona as verbas para calculo da pensao                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fSeleVerba()
	Local bSet15
	Local bSet24
	Local oDlg
	Local oBtn1
	Local oBtn2
	Local oBtn3
	Local oBtn4
	Local oBProv 		:= LoadBitmap( GetResources(), "BR_VERDE" )
	Local oBDesc 		:= LoadBitmap( GetResources(), "BR_VERMELHO" )
	Local oBDtiv 		:= LoadBitmap( GetResources(), "BR_CINZA" )

	Local aAdvSize		:= {}
	Local aInfoAdvSize	:= {}
	Local aObjCoords 	:= {}
	Local aObjSize		:= {}

	Local aAdv1Size		:= {}
	Local aInfo1AdvSize	:= {}
	Local aObj1Coords 	:= {}
	Local aObj1Size		:= {}

	Local aAdv2Size		:= {}
	Local aInfo2AdvSize	:= {}
	Local aObj2Coords 	:= {}
	Local aObj2Size		:= {}

	Local aAdv3Size		:= {}
	Local aInfo3AdvSize	:= {}
	Local aObj3Coords 	:= {}
	Local aObj3Size		:= {}

	Local aAdv4Size		:= {}
	Local aInfo4AdvSize	:= {}
	Local aObj4Coords 	:= {}
	Local aObj4Size		:= {}

	Private oFont1
	Private oFont2
	Private oLbx1
	Private oLbx2
	Private cLbx1
	Private cLbx2
	Private nPosVerba 	:= Ascan( aHeader, { |x| Trim(x[2]) == "RQ_VERBAS" } )
	Private nLbxAtiva

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta os ListBox aLbx1 e aLbx2								 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	gp280MontaLbx(@aLbx1,@aLbx2,lUsadoGP)

	DEFINE FONT oFont1  NAME "Arial"        SIZE 7,16 BOLD
	DEFINE FONT oFont2  NAME "Courier New"  SIZE 7,16 BOLD


	aAdvSize		:= MsAdvSize(,.T.,380)
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
	aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )					//Linha 1
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )					//Linha 2
	aAdd( aObjCoords , { 000 , 035 , .T. , .F. } )					//Linha 3
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

	aAdv1Size		:= aClone(aObjSize[1])
	aInfo1AdvSize	:= { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 0 , 0 }
	aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )			//1-verbas disponiveis
	aAdd( aObj1Coords , { 020 , 000 , .F. , .T. } )		    //2-setas
	aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )			//3-verbas selecionadas
	aObj1Size		:= MsObjSize( aInfo1AdvSize , aObj1Coords,,.T. )

	aAdv2Size		:= aClone(aObjSize[2])
	aInfo2AdvSize	:= { aAdv2Size[2] , aAdv2Size[1] , aAdv2Size[4] , aAdv2Size[3] , 0 , 0 }
	aAdd( aObj2Coords , { 000 , 000 , .T. , .T. , .T.} )			//1-listbox verbas disponiveis
	aAdd( aObj2Coords , { 020 , 000 , .F. , .T. } )  			    //2-setas
	aAdd( aObj2Coords , { 000 , 000 , .T. , .T. , .T.} )			//3-listbox verbas selecionadas
	aObj2Size		:= MsObjSize( aInfo2AdvSize , aObj2Coords,,.T. )

	aAdv3Size		:= aClone(aObjSize[3])
	aInfo3AdvSize	:= { aAdv3Size[2] , aAdv3Size[1] , aAdv3Size[4] , aAdv3Size[3] , 5 , 5}
	aAdd( aObj3Coords , { 000 , 000 , .T. , .T. } )				//legenda 1
	aAdd( aObj3Coords , { 000 , 000 , .T. , .T. } )  			    //legenda 2
	aAdd( aObj3Coords , { 000 , 000 , .T. , .T. } )				//legenda 3
	aObj3Size		:= MsObjSize( aInfo3AdvSize , aObj3Coords )



	aAdv4Size		:= aClone(aObj2Size[2])
	aInfo4AdvSize	:= { aAdv4Size[2] , aAdv4Size[1] , aAdv4Size[4] , aAdv4Size[3] , 4 , 4 }
	aAdd( aObj4Coords , { 000 , 000 , .T. , .T. } )				//espaco
	aAdd( aObj4Coords , { 000 , 000 , .T. , .T. } )  			    //seta 1
	aAdd( aObj4Coords , { 000 , 000 , .T. , .T. } )				//seta 2
	aAdd( aObj4Coords , { 000 , 000 , .T. , .T. } )				//espaco
	aAdd( aObj4Coords , { 000 , 000 , .T. , .T. } )				//seta 3
	aAdd( aObj4Coords , { 000 , 000 , .T. , .T. } )				//seta 4
	aAdd( aObj4Coords , { 000 , 000 , .T. , .T. } )				//epaco
	aObj4Size		:= MsObjSize( aInfo4AdvSize , aObj4Coords )


	DEFINE MSDIALOG oDlg FROM aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5]  Title OemToAnsi(STR0014) PIXEL //##"Selecao das verbas para composicao da base de calculo da pensao"

	@ aObj1Size[1,1]	, aObj1Size[1,2] GROUP oGroup TO aObj1Size[1,3], aObj1Size[1,4] OF oDlg PIXEL
	@ aObj1Size[1,1]+5	, aObj1Size[1,2]+5 SAY OemToAnsi(STR0015) SIZE 120,07 PIXEL FONT oFont1 COLOR CLR_BLUE //##"Verbas Disponiveis Para Selecao"

	@ aObj1Size[3,1]	, aObj1Size[3,2] GROUP oGroup TO aObj1Size[3,3], aObj1Size[3,4] OF oDlg PIXEL
	@ aObj1Size[3,1]+5	, aObj1Size[3,2]+5 SAY OemToAnsi(STR0016) SIZE 120,07 PIXEL FONT oFont1 COLOR CLR_BLUE //##"Verbas Selecionadas Para Calculo"


	@ aObjSize[3,1]	, aObjSize[3,2] GROUP oGroup TO aObjSize[3,3], aObjSize[3,4]  OF oDlg PIXEL
	@ aObj3Size[1,1]	, aObj3Size[1,2] BITMAP NAME "BR_VERDE" SIZE 8,8 of oDlg PIXEL
	@ aObj3Size[2,1]	, aObj3Size[2,2] BITMAP NAME "BR_VERMELHO" SIZE 8,8 of oDlg PIXEL
	@ aObj3Size[3,1]	, aObj3Size[3,2] BITMAP NAME "BR_CINZA" SIZE 8,8 of oDlg PIXEL

	@ aObj3Size[1,1]	, aObj3Size[1,2]+10 SAY OemToAnsi(STR0024) SIZE 280,07 PIXEL FONT oFont2 COLOR CLR_BLUE //##
	@ aObj3Size[2,1]	, aObj3Size[2,2]+10 SAY OemToAnsi(STR0025) SIZE 280,07 PIXEL FONT oFont2 COLOR CLR_BLUE //##
	@ aObj3Size[3,1]	, aObj3Size[3,2]+10 SAY OemToAnsi(STR0026) SIZE 280,07 PIXEL FONT oFont2 COLOR CLR_BLUE //##

	@ aObj2Size[1,1]	, aObj2Size[1,2] LISTBOX oLbx1 VAR cLbx1 FIELDS HEADER  Space(2),;
	OemtoAnsi(STR0017),;  //##"Verba"
	OemtoAnsi(STR0018),; //##"Descricao"
	OemtoAnsi(STR0019);  //##"Incide Pensao"
	COLSIZES GetTextWidth(0,"B"),;
	GetTextWidth(0,"BBB"),;
	GetTextWidth(0,"BBBBBBBBBBBBBBBBBBBB"),;
	GetTextWidth(0,"BBB");
	SIZE aObj2Size[1,3]	, aObj2Size[1,4] OF oDlg PIXEL
	oLbx1:SetArray(aLbx1)


	@ aObj2Size[3,1]	, aObj2Size[3,2] LISTBOX oLbx2 VAR cLbx2 FIELDS HEADER Space(2),;
	OemtoAnsi(STR0017),; //##"Verba"
	OemtoAnsi(STR0018),; //##"Descricao"
	OemtoAnsi(STR0019);  //##"Incide Pensao"
	COLSIZES GetTextWidth(0,"B"),;
	GetTextWidth(0,"BBB"),;
	GetTextWidth(0,"BBBBBBBBBBBBBBBBBBBB"),;
	GetTextWidth(0,"BBB");
	SIZE aObj2Size[3,3]	, aObj2Size[3,4] OF oDlg PIXEL
	oLbx2:SetArray(aLbx2)


	If MV_MODFOL $ "1/2"
		oLbx1:bLine := { ||  { If(aLbx1[oLbx1:nAt,1] $ "1/3",oBProv,If(aLbx1[oLbx1:nAt,1] $ "2/4",oBDesc, oBDtiv)), aLbx1[oLbx1:nAt,2],aLbx1[oLbx1:nAt,3],aLbx1[oLbx1:nAt,4] }}
		oLbx2:bLine := { ||  { If(aLbx2[oLbx2:nAt,1] $ "1/3",oBProv,If(aLbx2[oLbx2:nAt,1] $ "2/4",oBDesc, oBDtiv)), aLbx2[oLbx2:nAt,2],aLbx2[oLbx2:nAt,3],aLbx2[oLbx2:nAt,4] }}
	Else
		oLbx1:bLine := { ||  { If(aLbx1[oLbx1:nAt,1] == "1",oBProv,If(aLbx1[oLbx1:nAt,1] == "2",oBDesc, oBDtiv)), aLbx1[oLbx1:nAt,2],aLbx1[oLbx1:nAt,3],aLbx1[oLbx1:nAt,4] }}
		oLbx2:bLine := { ||  { If(aLbx2[oLbx2:nAt,1] == "1",oBProv,If(aLbx2[oLbx2:nAt,1] == "2",oBDesc, oBDtiv)), aLbx2[oLbx2:nAt,2],aLbx2[oLbx2:nAt,3],aLbx2[oLbx2:nAt,4] }}
	EndIf


	oBtn1 := TBitmap():New(aObj4Size[2,1]	, aObj4Size[2,2],25,25,,"NEXT",.T.,oDlg,;
	{||fMoveVerba(1,.T.,oLbx1:nAt)},,.F.,.F.,,,.F.,,.T.,,.F.)
	oBtn1:CTOOLTIP := STR0020 //##"Mover a verba selecionada"


	oBtn2 := TBitmap():New(aObj4Size[3,1]	, aObj4Size[3,2],25,25,,"PGNEXT",.T.,oDlg,;
	{||fMoveVerba(1,.F.,oLbx1:nAt)},,.F.,.F.,,,.F.,,.T.,,.F.)
	oBtn2:CTOOLTIP := STR0021 //##"Mover as verbas com incidencia de pensao"


	oBtn3 := TBitmap():New(aObj4Size[5,1]	, aObj4Size[5,2],25,25,,"PREV",.T.,oDlg,;
	{||fMoveVerba(2,.T.,oLbx2:nAt)},,.F.,.F.,,,.F.,,.T.,,.F.)
	oBtn3:CTOOLTIP := STR0020 //##"Mover a verba selecionada"


	oBtn4 := TBitmap():New(aObj4Size[6,1]	, aObj4Size[6,2],25,25,,"PGPREV",.T.,oDlg,;
	{||fMoveVerba(2,.F.,oLbx2:nAt)},,.F.,.F.,,,.F.,,.T.,,.F.)
	oBtn4:CTOOLTIP := STR0021 //##"Mover as verbas com incidencia de pensao"


	nOpca := 0

	bSet15 := {||nopca:=1,oDlg:End()}
	bSet24 := {||oDlg:End()}

	ACTIVATE MSDIALOG oDlg ON INIT ( EnchoiceBar( oDlg , bSet15 , bSet24 ) )

	If nOpca == Confirma
		A280LbGrava()
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Restaura a integridade da janela                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAlias := "SRA"
	dbSelectArea(cAlias)

Return .F.

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp280Monta³ Autor ³ Emerson Rosa de Souza ³ Data ³ 02.01.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao que efetua a montagem dos listbox                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gp280MontaLbx(aLbx1,aLbx2,lUsadoGP)
	Local nCntVerba
	Local nMaxVerba
	Local cCodVerba
	Local nCnt2
	Local nCnt3
	Local nVbSrv
	Local aTotVerba := {}

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inclui verbas no array que sera processado (aTotVerba)       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Aadd(aTotVerba, aCols[n,nPosVerba])

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existem outras verbas no array aVbCompl          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len(aVbCompl) >= n
		For nCnt2 := 1 To Len(aVbCompl[n])
			Aadd(aTotVerba, aVbCompl[n,nCnt2])
		Next nCnt2
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Limpa arrays para uma nova montagem.                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aLbx1 := {}
	aLbx2 := {}

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o array aLbx2 a partir das verbas do aCols e aVbCompl  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nCnt2 := 1 To Len(aTotVerba)
		nMaxVerba := Len(Trim(aTotVerba[nCnt2]))
		For nCntVerba := 1 To nMaxVerba Step 4
			cCodVerba := Substr(aTotVerba[nCnt2], nCntVerba, 3)
			nVbSrv    := Ascan( aArqSRV, { |x| x[2] == cCodVerba } )
			If nVbSrv > 0
				Aadd(aLbx2, { aArqSRV[nVbSrv,1], aArqSRV[nVbSrv,2], aArqSRV[nVbSrv,3], aArqSRV[nVbSrv,4] })
			EndIf
		Next nCntVerba
	Next nCnt2

	If Len(aLbx2) == 0 .AND. (cPaisLoc == "MEX")
		Aadd(aLbx2, { "5", Space(3), Space(20), Space(3) })
	ElseIf Len(aLbx2) == 0
		If !lUsadoGP
			Aadd(aLbx2, { "3", Space(3), Space(20), Space(3) })
		Else
			Aadd(aLbx2, { "5", Space(3), Space(20), Space(3) })
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem de aLbx1                                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nCnt3 := 1 To Len(aArqSRV)
		If Ascan( aLbx2, { |x| x[2] == aArqSRV[nCnt3,2] } ) == 0
			Aadd(aLbx1, { aArqSRV[nCnt3,1], aArqSRV[nCnt3,2], aArqSRV[nCnt3,3], aArqSRV[nCnt3,4] })
		EndIf
	Next nCnt3

	If Len(aLbx1) == 0 .AND. (cPaisLoc == "MEX")
		Aadd(aLbx1, { "5", Space(3), Space(20), Space(3) })
	ElseIf Len(aLbx1) == 0
		If !lUsadoGP
			Aadd(aLbx1, { "3", Space(3), Space(20), Space(3) })
		Else
			Aadd(aLbx1, { "5", Space(3), Space(20), Space(3) })
		EndIf
	EndIf

Return Nil

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A280LbGrav³ Autor ³ Emerson Rosa de Souza ³ Data ³ 26.12.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para gravacao do campo de verbas a partir da listbox ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³A280LbGrava                                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A280LbGrava()
	Local cVerbas 	:= ""
	Local nNroVerba := 0
	Local nPosVb 	:= 0
	Local nCnt2
	Local lPriVez 	:= .T.

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Limpa as verbas que estao sendo editadas para nova montagem  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len(aVbCompl) >= n
		For nCnt2 := 1 To Len(aVbCompl[n])
			aVbCompl[n,nCnt2] := ""
		Next nCnt2
	EndIf

	For nCnt2 := 1 To Len(aLbx2)
		cVerbas   += If(Empty(aLbx2[nCnt2,2]), "", aLbx2[nCnt2,2] + ",")
		nNroVerba ++
		If nCnt2 == Len(aLbx2) .Or. nNroVerba == 30 // Maximo de trinta verbas por registro do arquivo
			If lPriVez
				If nPosVerba > 0
					aCols[n,nPosVerba] := cVerbas
				EndIf
				lPriVez := .F.
			Else
				nPosVb ++
				If n > Len(aVbCompl)
					Aadd(aVbCompl, { cVerbas })
				Else
					If nPosVb > Len(aVbCompl[n])
						Aadd(aVbCompl[n], cVerbas)
					Else
						aVbCompl[n,nPosVb] := cVerbas
					EndIf
				EndIf
			EndIf
			cVerbas   := ""
			nNroVerba := 0
		EndIf
	Next nCnt2

Return .T.

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³aArqSRV() ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 28.02.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Carrega o arquivo SRV no array aArqSRV.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fMontArray(aArqSRV,lUsadoGP)
	Local cAlias 	:= ALIAS()
	Local cFilAtu 	:= xFilial("SRV")

	dbSelectArea("SRV")
	dbSetOrder(1)
	dbSeek(cFilAtu)
	While !Eof() .AND. SRV->RV_FILIAL == cFilAtu
		If (cPaisLoc == "MEX")
			Aadd(aArqSRV, { If(SRV->RV_PENSAO # "S", "5", SRV->RV_TIPOCOD), SRV->RV_COD, SRV->RV_DESC, If(SRV->RV_PENSAO == "S", STR0022, STR0023) }) //##Sim##Nao
			dbSkip()
			Loop
		End If

		Aadd(aArqSRV, { If(SRV->RV_PENSAO # "S", "5", SRV->RV_TIPOCOD), SRV->RV_COD, SRV->RV_DESC, If(SRV->RV_PENSAO == "S", STR0022, STR0023) }) //##Sim##Nao

		dbSkip()
	EndDo
	dbSelectArea( cAlias )

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fMoveVerba³ Autor ³ Emerson Rosa de Souza ³ Data ³ 12.03.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Move verbas de um Listbox para o outro                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nLBx        - Indica o LisBox origem                       ³±±
±±³          ³ lSoUmaVerba - Indica se dever move uma verba ou todas      ³±±
±±³          ³ nPosLbx     - Posicao do elemento que sera movido       	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fMoveVerba(nLbx,lSoUmaVerba,nPosLbx)
	Local nCnt1
	Local nQtdDel
	Local nPosCod
	Local aLbxOrig  := If(nLbx == 1, aLbx1, aLbx2)
	Local aLbxDest  := If(nLbx == 1, aLbx2, aLbx1)
	Local cCodVerba := aLbxOrig[nPosLbx,2]

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verba nao disponivel por estar com 'Nao' na incidencia pensao³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (cPaisLoc $ "MEX|PAR")
		If lSoUmaVerba .And. aLbxOrig[nPosLbx,1] == "5"
			Return .T.
		EndIf
	Else
		If lSoUmaVerba .And. aLbxOrig[nPosLbx,1] == "3" .And. !lUsadoGP
			Return .T.
		ElseIf lSoUmaVerba .And. aLbxOrig[nPosLbx,1] == "5" .And. lUsadoGP
			Return .T.
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Retorna caso esteja tentando mover de uma ListBox vazia		 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len(aLbxOrig) == 1 .And. Empty(aLbxOrig[1,2])
		Return .T.
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Caso a ListBox destino esteja vazia, exclui o elemento vazio ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len(aLbxDest) == 1 .And. Empty(aLbxDest[1,2])
		Adel(aLbxDest,1)
		ASize(aLbxDest,Len(aLbxDest)-1)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inclui na ListBox destino e exclui da origem                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lSoUmaVerba
		Aadd(aLbxDest, { aLbxOrig[nPosLbx,1], aLbxOrig[nPosLbx,2], aLbxOrig[nPosLbx,3], aLbxOrig[nPosLbx,4] })
		Adel(aLbxOrig,nPosLbx)
		ASize(aLbxOrig,Len(aLbxOrig)-1)
	Else
		nQtdDel   := 0
		For nCnt1 := 1 To Len(aLbxOrig)
			If aLbxOrig[nCnt1,1] == "3" .And. !lUsadoGP .And. (cPaisLoc <> "PAR")
				Loop
			ElseIf aLbxOrig[nCnt1,1] == "5" .And. lUsadoGP
				Loop
			EndIf
			If aLbxOrig[nCnt1,4] == STR0022 //##Sim
				Aadd(aLbxDest, { aLbxOrig[nCnt1,1], aLbxOrig[nCnt1,2], aLbxOrig[nCnt1,3], aLbxOrig[nCnt1,4] })
				aLbxOrig[nCnt1,2] := Space(3)
				nQtdDel ++
			EndIf
		Next nCnt1
		aSort(aLbxOrig,,,{|x,y| x[2] > y[2] })
		ASize(aLbxOrig,Len(aLbxOrig)-nQtdDel)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Caso a ListBox origem tenha fica vazia, inclui um elemento	 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Len(aLbxOrig) == 0 .AND. (cPaisLoc == "MEX")
		Aadd(aLbxOrig, { "5", Space(3), Space(20), Space(3) })
	ElseIf Len(aLbxOrig) == 0
		If !lUsadoGP
			Aadd(aLbxOrig, { "3", Space(3), Space(20), Space(3) })
		Else
			Aadd(aLbxOrig, { "5", Space(3), Space(20), Space(3) })
		EndIf
	EndIf

	aSort(aLbxOrig,,,{|x,y| x[2] < y[2] })
	aSort(aLbxDest,,,{|x,y| x[2] < y[2] })

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona o ListBox destino na verba movida a partir da orig.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lSoUmaVerba
		nPosCod := Ascan(aLbxDest, { |x| x[2] == cCodVerba })
		If nPosCod > 0
			If(nLbx == 1, oLbx2:nAt := nPosCod, oLbx1:nAt := nPosCod)
			If(nLbx == 1, oLbx2:nRowPos := 6, oLbx1:nRowPos := 6)
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Retorna o conteudo original das ListBox                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aLbx1 := If(nLbx == 1, aLbxOrig, aLbxDest)
	aLbx2 := If(nLbx == 1, aLbxDest, aLbxOrig)

	oLbx1:Refresh(.T.)
	oLbx2:Refresh(.T.)

Return .T.


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ MenuDef		³Autor³  Luiz Gustavo     ³ Data ³07/12/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Isola opcoes de menu para que as opcoes da rotina possam    ³
³          ³ser lidas pelas bibliotecas Framework da Versao 9.12 .      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA280                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Static Function MenuDef()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define array contendo as Rotinas a executar do programa      ³
	//³ ----------- Elementos contidos por dimensao ------------     ³
	//³ 1. Nome a aparecer no cabecalho                              ³
	//³ 2. Nome da Rotina associada                                  ³
	//³ 3. Usado pela rotina                                         ³
	//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
	//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
	//³    2 - Simplesmente Mostra os Campos                         ³
	//³    3 - Inclui registros no Bancos de Dados                   ³
	//³    4 - Altera o registro corrente                            ³
	//³    5 - Remove o registro corrente do Banco de Dados          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	Local aRotina :=  {	{ STR0004 , "PesqBrw"	, 0 , 1,,.F.},;    //"Pesquisar"
	{ STR0005 , "gp280atu"	, 0 , 2},;         //"Visualizar"
	{ STR0006 , "gp280Aux"	, 0 , 3,,,.T.},;   //"Incluir"
	{ STR0007 , "gp280Atu"	, 0 , 4},;         //"Alterar"
	{ STR0008 , "gp280Atu"	, 0 , 5},;         //"Excluir"
	{ STR0028 , "gpLegend"  , 0 , 6 , ,.F.} }  //"Legenda"


Return aRotina

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³g280aCols ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 04/12/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Criar os Arrays Aheader e aCols dos  beneficiarios         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ gpea280                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gp280aCols(nopcx)
	Local nCnt		:= 0
	Local nCont		:= 0
	Local nPosRecWt :=GdfieldPos("RQ_REC_WT")
	Local nPosRQVerb:=GdfieldPos("RQ_VERBAS")

	//-- Readequacao do acols a ser mostrado para o usuario
	If Len(aColsNew) > 0 .And. nOpcx <> 3
		For nCont := 1 to Len(aColsNew)

			If !Empty(aColsNew[nCont][1])
				Aadd(aCols, aColsNew[nCont] )
				Aadd(aColsRec, aColsNew[nCont,nPosRecWT] )
				nCnt ++
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Grava as verbas complementares no array aVbCompl			 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nCnt > Len(aVbCompl)
					Aadd(aVbCompl, { aColsNew[nCont,nPosRQVerb] } )
				Else
					Aadd(aVbCompl[nCnt], aColsNew[nCont,nPosRQVerb] )
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Grava os registro referente a cada linha do aCols			 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nCnt > Len(aVerbRec)
					Aadd(aVerbRec, { aColsNew[nCont,nPosRecWT] } )
				Else
					Aadd(aVerbRec[nCnt], aColsNew[nCont,nPosRecWT] )
				EndIf
			EndIf
		Next nCont
	EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GP280VLD  ³ Autor ³ Ademar Fernandes     ³ Data ³ 22.10.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Atualiza o campo RQ_NOME do aCols de Beneficiarios         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Como usar ³ Via Gatilho nos campos RQ_PRINOME/RQ_PRISOBR/RQ_SECSOBR    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA280                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function GP280VLD()
	Local cRet := ""
	Local cPriNome := aCols[n,GdFieldPos("RQ_PRINOME",aHeader)]
	Local cSecNome := aCols[n,GdFieldPos("RQ_SECNOME",aHeader)]
	Local cPriSobr := aCols[n,GdFieldPos("RQ_PRISOBR",aHeader)]
	Local cSecSobr := aCols[n,GdFieldPos("RQ_SECSOBR",aHeader)]

	cRet := ALLTRIM(cPriNome)+ " "+ALLTRIM(cSecNome)+" "+ALLTRIM(cPriSobr)+ " "+ALLTRIM(cSecSobr)
	aCols[n,GdFieldPos("RQ_NOME",aHeader)] := cRet

Return(cRet)



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA280   ºAutor  ³Erika Kanamori      º Data ³  11/21/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para validacao: campos valor e quantidade de parcelasº±±
±±º          ³devem ser preenchidas somente quando RQ_TPBENEF = 3.        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fVldRQParcela()

	oGet:oBrowse:Refresh()

	If cPaisLoc == "COL" .And. aCols[n][nPosTipoBen] <> "3" .Or. (cPaisLoc == "PER" .And. aCols[n][nPosTipoBen] <> "2" )

		If cPaisLoc == "COL"
			Aviso(STR0029, STR0042,{"OK"}) //"Este campo só deve ser preenchido para beneficiários do tipo executivo"
		Else
			Aviso(STR0029, STR0047,{"OK"}) //"Este campo só deve ser preenchido para beneficiários do tipo cooperativas."
		EndIf
		aCols[n][nPosParcela]:= 0
		aCols[n][nPosValorPa]:= 0
		M->RK1PARCELA := 0
		M->RK1VALORPA = 0

	Else
		aCols[n][nPosPercent]:= 0
		aCols[n][nPosNrSlMin]:= 0
		aCols[n][nPosVerbas] := ""
		M->RQ_POSPERCENT	:= 0
		M->RQ_NRSLMIN   	:=  0
		M->RQ_VERBAS   	:= ""

		If type("M->RK1PARCELA") <> "U" .And. type("M->RK1VALORPA") <> "U"
			If aCols[n][nPosValorPa] <> 0 .Or. M->RK1PARCELA <> 0
				aCols[n][nPosValFixo]:=(M->RK1VALORPA * M->RK1PARCELA)
				M->RQ_VALFIXO		 :=(M->RK1VALORPA * M->RK1PARCELA)
			EndIf
		Else
			If type("M->RK1PARCELA") <> "U"
				aCols[n][nPosValFixo]:=(aCols[n][nPosValorPa] * M->RK1PARCELA)
				M->RQ_VALFIXO		 :=(aCols[n][nPosValorPa] * M->RK1PARCELA)
			Else
				If type("M->RK1VALORPA") <> "U"
					aCols[n][nPosValFixo]:=(M->RK1VALORPA * aCols[n][nPosParcela])
					M->RQ_VALFIXO		  :=(M->RK1VALORPA * aCols[n][nPosParcela])
				EndIf
			EndIf
		EndIf


		//soh permite modificacao se nao existirem valores futuros para este beneficiafrio
		If !Empty(aCols[n][nPosRecno])
			If type("M->RK1PARCELA") <> "U"
				If aColsNew[n][nPosParcela] <> 0 .And. aColsNew[n][nPosParcela] <> M->RK1PARCELA
					//Aviso(STR0029, STR0043,{"OK"})//"Não é possível modificar este campo, pois existem valores fixos cadastrados para este beneficiário."
					Help(" ",1,"A280SMODIF")
					IF cPaisloc $ "COL"
						aCols[n][nPosValFixo]:= aColsNew[n][nPosValFixo]
					ENDIF
					Return(.F.)
				EndIf
			EndIf
			If type("M->RK1VALORPA") <> "U"
				If aColsNew[n][nPosValorPa] <> 0 .And. aColsNew[n][nPosValorPa] <> M->RK1VALORPA
					//Aviso(STR0029, STR0043,{"OK"})//"Não é possível modificar este campo, pois existem valores fixos cadastrados para este beneficiário."
					Help(" ",1,"A280SMODIF")
					IF cPaisloc $ "COL"
						aCols[n][nPosValFixo]:= aColsNew[n][nPosValFixo]
					ENDIF
					Return(.F.)
				EndIf
			EndIf
		EndIf
	EndIf

	If !(oGet == nil)
		oGet:oBrowse:Refresh()
	EndIf


Return(.T.)





/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA280   ºAutor  ³Erika Kanamori      º Data ³  11/25/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para validacao do campo RQ_TPBENEF, para localizacao º±±
±±º          ³Colombia.                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function fVldRQTpBen()

	Local lRet:= .T.

	If !Empty(aCols[n][nPosRecno])  //caso beneficiario for do tipo executivo, soh deixa modificar o tipo de beneficiario se nao existirem valores futuros para este beneficiario.
		If (cPaisLoc == "COL" .And. aColsNew[n][nPosTipoBen] == "3" .And. M->RQ_TPBENEF <> "3") .Or.;
		(cPaisLoc == "PER" .And. aColsNew[n][nPosTipoBen] == "2" .And. M->RQ_TPBENEF <> "2")
			dbSelectArea("SRK")
			dbSetOrder(RetOrder("SRK","RK_FILIAL+RK_MAT+RK_NUMID"))
			If dbSeek(SRA->(RA_FILIAL+RA_MAT)+"SRK"+SRA->(RA_FILIAL+RA_MAT)+aColsNew[n][nPosVerbFol]+aColsNew[n][nPosSequen]+"SRQ")
				//If SRK->RK_STATUS == "2"
				Help(" ",1,"A280SMODIF")//"Não é possível modificar este campo, pois existem valores fixos cadastrados para este beneficiário."
				lRet:= .F.
				//EndIf
			EndIf
		EndIf
	Else
		If ( (cPaisLoc == "COL" .And. M->RQ_TPBENEF <> "3") .Or. (cPaisLoc == "PER" .And. M->RQ_TPBENEF <> "2") )
			aCols[n][nPosParcela]:= 0
			aCols[n][nPosValorPa]:= 0
			M->RQ_VALFIXO := 0
			M->RK1PARCELA := 0
		EndIf
	EndIf

Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA280   ºAutor  ³Equipe RH Inovacao  º Data ³ 25/01/2013  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para validacao do campo RQ_CIC, Tipo NIT, pra locali-º±±
±±º          ³zacao Colombia.                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ X3_VALID do campo RQ_CIC                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fVldRQnit()

	Local lRet:= .T.

	If !Empty(aCols[n][nPosTpCIC]) .And. aCols[n][nPosTpCIC] == "31"

		lRet := VALIDNIT( aCols[n][nPosCIC] )

	EndIf

Return(lRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA280   ºAutor  ³Equipe RH Inovacao  º Data ³ 25/01/2013  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para "montar" o RQ_NOME, de acordo com os campos:    º±±
±±º          ³-RQ_PRINOME, RQ_SECNOME, RQ_PRISOBR, RQ_SECSOBR             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Gatilho                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fRQNome()

	Local cRet:= ""
	Local nPos0Nome := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_NOME" } )
	Local nPos1Nome := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_PRINOME" } )
	Local nPos2Nome := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_SECNOME" } )
	Local nPos1Sobr := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_PRISOBR" } )
	Local nPos2Sobr := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_SECSOBR" } )

	//-ALLTRIM(RA_PRINOME)+" "+ALLTRIM(RA_SECNOME)+" "+ALLTRIM(RA_PRISOBR)+ " "+ALLTRIM(RA_SECSOBR)
	aCols[n][nPos0Nome] := ALLTRIM(aCols[n][nPos1Nome])+" "+ALLTRIM(aCols[n][nPos2Nome])+" "+ALLTRIM(aCols[n][nPos1Sobr])+" "+ALLTRIM(aCols[n][nPos2Sobr])
	M->RQ_NOME := ALLTRIM(aCols[n][nPos1Nome])+" "+ALLTRIM(aCols[n][nPos2Nome])+" "+ALLTRIM(aCols[n][nPos1Sobr])+" "+ALLTRIM(aCols[n][nPos2Sobr])
	cRet := ALLTRIM(aCols[n][nPos1Nome])+" "+ALLTRIM(aCols[n][nPos2Nome])+" "+ALLTRIM(aCols[n][nPos1Sobr])+" "+ALLTRIM(aCols[n][nPos2Sobr])

	oGet:oBrowse:Refresh()

Return(cRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA280   ºAutor  ³Erika Kanamori      º Data ³  11/25/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para validacao do campo RQ_VALFIXO para localizacao  º±±
±±º          ³Colombia.                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function fRQValFixo()

	If ( (cPaisLoc == "COL" .And. aCols[n][nPosTipoBen] == "3") .Or. (cPaisLoc == "PER" .And. aCols[n][nPosTipoBen] == "2") )
		If aCols[n][nPosParcela] <> 0 .And. aCols[n][nPosValorPa] <> 0 //M->RQ_TPBENEF == "3" .And. M->RK1PARCELA <> 0 .And. M->RK1VALORPA <> 0
			aCols[n][nPosValFixo]:= aCols[n][nPosParcela] * aCols[n][nPosValorPa]
			M->RQ_VALFIXO		 := aCols[n][nPosParcela] * aCols[n][nPosValorPa]
		else
			IF cPaisLoc == "COL"
				aCols[n][nPosValFixo]:= 0
				M->RQ_VALFIXO		 := 0
				Aviso(STR0029, STR0083,{"OK"}) //"Este campo se calcula a partir del valor de la cuota y número de cuotas para beneficiarios del tipo ejecutivo, por favor informe dichos campos."
			EndIF
		Endif
	EndIf

	oGet:oBrowse:Refresh()

Return(.T.)




/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA280   ºAutor  ³Erika Kanamori      º Data ³  12/03/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para nao permitir a modificacao da verba de folha ca-º±±
±±º          ³so beneficiario optar por pagamento em parcelas. (Colombia) º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ usado para validacao do campo RQ_VERBFOL (Colombia.)       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function fRQVerbFol()
	Local lRet := .T.

	If !Empty(aCols[n][nPosRecno]) .And. aColsNew[n][nPosParcela] <> 0 //caso RQ_TPBENEF == 3 e pagamento por parcela
		If 	aColsNew[n][nPosVerbFol] <> M->RQ_VERBFOL
			Help(" ",1,"A280SMODIF")//"Não é possível modificar este campo, pois existem valores fixos cadastrados para este beneficiário."
			lRet:= .F.
		EndIf
	EndIf

Return lRet

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³FindUpd   ³Autor³Igor Franzoi	            ³Data³05/01/2009³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Pesquisa o campo no SX3									    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEM040				     				             	   	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function FindUpd()

	Local aArea		:= GetArea()
	Local aSX3Area  := SX3->(GetArea())

	Local lRet := .T.

	SX3->(DbSetOrder(2))

	If SX3->( dbSeek("RQ_VERBADT") )
		If SX3->(AllTrim(X3_TELA) != "1" .or. !X3Uso(X3_USADO) )
			lRet := .F.
		EndIf
	EndIf

	If ( SX3->( dbSeek("RQ_VERBFER") ) .and. lRet )
		If SX3->(AllTrim(X3_TELA) != "1" .or. !X3Uso(X3_USADO))
			lRet := .F.
		EndIf
	EndIf

	If ( SX3->( dbSeek("RQ_VERB131") ) .and. lRet )
		If SX3->(AllTrim(X3_TELA) != "1" .or. !X3Uso(X3_USADO) )
			lRet := .F.
		EndIf
	EndIf

	If ( SX3->( dbSeek("RQ_VERB132") ) .and. lRet )
		If SX3->(AllTrim(X3_TELA) != "1" .or. !X3Uso(X3_USADO) )
			lRet := .F.
		EndIf
	EndIf

	If ( SX3->( dbSeek("RQ_VERBPLR") ) .and. lRet )
		If SX3->(AllTrim(X3_TELA) != "1" .or. !X3Uso(X3_USADO) )
			lRet := .F.
		EndIf
	EndIf

	If ( SX3->( dbSeek("RQ_VERBDFE") ) .and. lRet )
		If SX3->(AllTrim(X3_TELA) != "1" .or. !X3Uso(X3_USADO) )
			lRet := .F.
		EndIf
	EndIf

	RestArea(aSX3Area)
	RestArea(aArea)

Return (lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA280   ºAutor  ³Christiane Vieira   º Data ³  27/10/2011 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³So exibe verbas que contem o parametro RV_LEEBEN=='1'       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function IsLeeBen(lPosiciona, cCodPd, lMsg)
	Local lRet 			:= .F.
	Local aArea			:= {}
	Local nSave			:= -1
	Default lPosiciona 	:= .F.
	Default cCodPd		:= SRV->RV_COD
	Default lMsg		:= .F.

	If lPosiciona .OR. (SRV->RV_COD != cCodPd)
		aArea:= getArea()
		dbSelectArea( "SRV" )

		//Guarda o Registro posicionado antes de entrar na function
		nSave := SRV->(recno())

		//Posiciona o Srv
		PosSRV(cCodPd, xFilial( "SRV" ))

		RestArea(aArea)
	EndIf

	lRet := SRV->RV_LEEBEN == "1"

	If !lPosiciona .AND. (nSave > 0)
		//Restaura o registro posicionado anteriormente
		SRV->(dbGoTo(nSave))
	EndIf

	If !lRet .AND. lMsg
		Help("",1, "RQ_PD")
	EndIf
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³RQValidS043	 ³ Autor ³ Leandro Drumond  ³ Data ³ 19/12/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para validar campos codigo do pais no passaporte.   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ gpea280                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function RQValidS043()

	Local lRet 		:= .F.
	Local nPos		:= fPosTab("S043", &(readvar()), "=", 4 )
	Local cTpDoc 	:= aCols[n][GdFieldPos( "RQ_TPDOCTO"  , aHeader )]

	If nPos > 0 .or. cTpDoc <> '07'
		lRet:= .T.
	EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WHEN_RQPAISPAS ³ Autor ³ Leandro Drumond  ³ Data ³ 27/12/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para permitir editar ou nao o campo RQ_PAISPAS      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function RQPAISPAS_WHEN()

	Local lRet := .T.

	//Edita o campo RB_PAISPAS apenas se o documento for do tipo passaporte
	lRet := Iif( aCols[n,GdFieldPos("RQ_TPDOCTO",aHeader)] == "07", .T., .F. )

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³GP280DtIni  ³ Autor ³ Equipe RH			  ³ Data ³ 18/05/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validação do RF_DTFIM, para nao aceitar data menor que a data ³±±
±±³          ³de inicio do beneficiario.                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³GP280DtFim()		                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GP280DtFim()

	Local dRQData		:= Ctod("//")
	Local lRQDataOk 	:= .T.

	Local dDtAdm	:= SRA->RA_ADMISSA
	Local dDtIni	:= aCols[n,GdFieldPos("RQ_DTINI",aHeader)]
	Local dDtFim	:= M->RQ_DTFIM

	If !empty(dDtFim)
		If empty(dDtIni)
			MsgStop(STR0068,"")
			lRQDataOk := .F.
		ElseIf dDtFim < dDtAdm
			MsgStop(STR0069,"")
			lRQDataOk := .F.
		ElseIf !empty(dDtIni)
			If dDtIni > dDtFim
				Help(" ",1,".GPEA28001.")
				lRQDataOk := .F.
			EndIf
		EndIf
	EndIf

Return( lRQDataOk )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ gp280Aux		³Autor³  Gustavo M.	      ³ Data ³17/08/2012³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Utilizada para identificar quando é selecionado a opçao de  ³
³          ³incluir    													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA280                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³gp280atu													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function gp280Aux(cAlias,nReg,nOpcX)

	lGPEA011 := IF(Type("lGPEA011")== "U",.F.,lGPEA011)

	If lGPEA011
		lIncluir := .T.
		lGPEA011 := .F.
	ElseIf IsInCallStack("GPEA011")
		nOpcX := 4
	EndIf

Return(gp280atu(cAlias,nReg,nOpcX))

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ DtNDepVld     ³ Autor ³ Emerson Campos   ³ Data ³ 21/05/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Validacao de data de nascimento do Beneficiario            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Geral                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ*/
Function DtNDepVld(dNascFunc, dNascDep)
Return ChkValDt(dNascFunc, dNascDep,'>=',STR0055)//"A data de nascimento do beneficiário deve ser maior que a data de nascimento do funcionário."

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gp280VlIn	 ³ Autor ³ RH		         	³ Data ³ 29/07/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao da data de Dt Inicial x Dt Admissão			      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA280                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gp280DtIni()

	Local dDtAdm	:= SRA->RA_ADMISSA
	Local dDtIni	:= M->RQ_DTINI
	Local dDtFim	:= aCols[n,GdFieldPos("RQ_DTFIM",aHeader)]
	Local lRet := .T.

	If !empty(dDtIni)
		If dDtIni < dDtAdm
			MsgStop( OemToAnsi( STR0057 ), OemToAnsi( STR0029 ) )
			lRet := .F.
		ElseIf !empty(dDtFim)
			If dDtIni > dDtFim
				Help(" ",1,".GPEA28001.")
				lRet := .F.
			EndIf
		EndIf
	Else
		// "Data Inicio" # "O cmapo Data Início - RQ_TDINI - é obrigatório." # "Informe a data em que se inicia o desconto da pensão alimentícia."
		Help(NIL, NIL, STR0073, NIL, STR0074, 1, 0, NIL, NIL, NIL, NIL, NIL, {STR0075})
		lRet := .F.
	EndIf

Return( lRet )

/*{Protheus.doc} fUltOrd

Funcao para retornar última ordem válida do beneficiário
do funcionário em caso de importação via rotina automática
sem o campo RQ_ORDEM no layout.

@author Raquel Hager
@since 17/06/2016
@version P12 R7
*/
Function fUltOrd(cFil,cMat)
	Local aArea	:= GetArea()
	Local cOrdem	:= "0"



	dbSelectArea("SRQ")
	dbSetOrder(1)
	If SRQ->(dbSeek(cFil+cMat))
		While SRQ->( !Eof() ).And. (SRQ->RQ_FILIAL + SRQ->RQ_MAT == cFil+cMat)
			cOrdem := SRQ->RQ_ORDEM



			SRQ->( dbSkip() )

		EndDo
	EndIf



	RestArea(aArea)

Return cValtoChar(Val(cOrdem)+1)


/*{Protheus.doc} fVldForn
Função utilizada para validar conteudo dos campos RQ_FORNEC e
RQ_LOJA.
@author Raquel Hager
@since 06/01/2017
@version P12.1.16
*/
Function fVldForn(nCpo)
	Local nPosForn	:= GdFieldPos("RQ_FORNEC",aHeader)
	Local nPosLoja	:= GdFieldPos("RQ_LOJA",aHeader)
	Local lRet			:= .T.

	If nPosForn > 0 .And. nPosLoja > 0
		If nCpo == 1 // Chamada do campo RQ_FORNEC
			lRet := ExistCpo("SA2",M->RQ_FORNEC,,,,.F.)
		ElseIf nCpo == 2 // Chamada do campo RQ_LOJA
			lRet := ExistCpo("SA2",aCols[n,nPosForn]+M->RQ_LOJA)
		ElseIf nCpo == 3 // linok
			If !Empty(aCols[n,nPosForn]+aCols[n,nPosLoja])
				lRet := ExistCpo("SA2",aCols[n,nPosForn]+aCols[n,nPosLoja])
			EndIf
		EndIf
	EndIf

Return(lRet)

/*{Protheus.doc} fVldDatFim
Função utilizada para validar se as datas finais são vazias
@author martins.ana
@since 10/10/2019
@version 1.0
*/
Function fVldDatFim(dDtFinal, nLen, dDtInicio)
Local lRet := .F.
	If (!Empty(dDtFinal) .And. nLen > 1 .And. !Empty(dDtInicio) .AND. !ChkValDt(dDtInicio,dDtFinal ,'>=',STR0071))
		//"Atencao"## "Data inválida, favor preencher data início e data final corretamente.##"OK"
		If !lGp280Auto
			oGet:GoTo(x)
			oGet:oBrowse:Refresh()
		EndIf
	Else
		lRet := .T.
	EndIf
Return(lRet)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³GP280whenof³ Autor ³Alex Hdez             ³ Data ³ 27/01/16 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Si el campo RQ_OFCIO tiene valores permite editar los       ³±±
±±³          ³campos RQ_DTOFICI Y RQ_UNIDOFI                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³X3_WHEN campos RQ_DTOFICI Y RQ_UNIDOFI                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GP280whenof() 
	Local LRET:= .T. 
	Local NposOfi   := Ascan( aHeader, { |x| Trim(x[2]) == "RQ_OFICIO"} ) 
	IF  EMPTY(acols[Oget:obrowse:NAT,NPOSOFI]) 
	    LRET:=.F. 
	ENDIF 
RETURN LRET


/*{Protheus.doc} fUltOrdCol

Función para retornar última orden del beneficiario automatico aplica para Colombia.
@author Verónica Flores
@since 11/11/2021

*/
Function fUltOrdCol(cFil,cMat)
	Local aArea	   := GetArea()
	Local nCont    := 0
	Local nOrden   := 0
	Local lOrden   := .F.

	dbSelectArea("SRQ")
	dbSetOrder(1) //RQ_FILIAL+RQ_MAT+RQ_ORDEM+RQ_SEQUENC
	If SRQ->(dbSeek(cFil+cMat))
		While SRQ->( !Eof() ).And. (SRQ->RQ_FILIAL + SRQ->RQ_MAT == cFil+cMat) .And. !lOrden
			If nCont != Val(SRQ->RQ_ORDEM)
				lOrden := .T.
				nOrden := nCont
			Endif
			SRQ->( dbSkip() )
			nCont++
		EndDo
	EndIf
	If nOrden == 0 .And. !lOrden
		nOrden := nCont
	Endif
	RestArea(aArea)

Return cValtoChar(nOrden)
