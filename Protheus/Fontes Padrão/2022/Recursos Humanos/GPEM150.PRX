#INCLUDE "PROTHEUS.CH"
#INCLUDE "GPEM150.CH"

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё GPEM150  Ё Autor Ё Marcos A. Stiefano    Ё Data Ё 24/10/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Instrucao Normativa 65                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё GPEM150(void)                                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Esporadico                                                 Ё╠╠
╠╠цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё         ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL.             Ё╠╠
╠╠цддддддддддддбддддддддбддддддбдддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁProgramador Ё Data   Ё BOPS Ё  Motivo da Alteracao                     Ё╠╠
╠╠цддддддддддддеддддддддеддддддедддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁCecilia Car.Ё15/05/17ЁTPPCSBЁIncluido o fonte da 11 para a 12 e efetua-Ё╠╠
╠╠Ё            Ё        Ё      Ёda a limpeza.                             Ё╠╠
╠╠ЁMarcelo F.  Ё16/12/16ЁMRH-3218  ЁCompatibilizaГЦo projeto soyuz(Russia)Ё╠╠
╠╠юддддддддддддаддддддддаддддддадддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Function GPEM150

Local aSays:={ }, aButtons:= { } //<== arrays locais de preferencia
Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), { .T., .F., {"",""} }) //[1]Acesso; [2]Ofusca; [3]Mensagem
Local aMsg			:= aOfusca[3]
Local aFldRel		:= {"RA_NOME", "RA_RACACOR"}
Local lBlqAcesso	:= aOfusca[2] .And. !Empty( FwProtectedDataUtil():UsrNoAccessFieldsInList( aFldRel ) )

Private cCadastro	:= OemToAnsi(STR0001) //"Instru┤└o Normativa 65 "
Private nSavRec		:= RecNO()

if !lBlqAcesso
	nOpca := 0
	Pergunte("GPM150",.F.)

	/*
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁFuncao verifica se existe alguma restriГЦo de acesso para oЁ
	ЁusuАrio que impeГa a execuГЦo da rotina.                   Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	If FindFunction("FVALIDFUN")
		If !(fValidFun({"SRA","SRD","SRV"}))
			Return (Nil)
		Endif
	Endif
	AADD(aSays,OemToAnsi(STR0002) )  //"Este programa gera os arquivos da Instru┤└o Normativa 65."
	AADD(aSays,OemToAnsi(STR0003) )  //"Sera gerado de acordo com os parametros selecionados pelo usuario."

	AADD(aButtons, { 5,.T.,{|| Pergunte("GPM150",.T. ) } } )
	AADD(aButtons, { 1,.T.,{|o| nOpca := 1,IF(gpconfOK(),FechaBatch(),nOpca:=0) }} )
	AADD(aButtons, { 2,.T.,{|o| FechaBatch() }} )

	FormBatch( cCadastro, aSays, aButtons )

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Variaveis utilizadas para parametros                         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	IF nOpca == 1
		Processa({|lEnd| GPM150Processa(),STR0004})  // "Instru┤└o Normativa 65"
	Endif
Else
	Help(" ",1,aMsg[1],,aMsg[2],1,0)
EndIf

Return

*-------------------------------*
Static Function Gpm150Processa()
*-------------------------------*
Local aCodFol  := {}
Local aRenda   := Array(12)
Local aDesconto:= Array(12)
Local aOutDesc := Array(12)
Local aImposto := Array(12)
Local nFunHdl  := nFolHdl := 0

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё mv_par01  - Filial De                                        Ё
//Ё mv_par02  - Filial Ate                                       Ё
//Ё mv_par03  - Matricula De                                     Ё
//Ё mv_par04  - Matricula Ate                                    Ё
//Ё mv_par05  - Ano Base                                         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Carregando as Perguntas                                      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cFilDe      :=  mv_par01
cFilAte     :=  mv_par02
cMatDe      :=  mv_par03
cMatAte     :=  mv_par04
cAnoBase    :=  mv_par05
aFill(aRenda   ,0)
aFill(aDesconto,0)
aFill(aOutDesc ,0)
aFill(aImposto ,0)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Procura primeiro funcionario                                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea( "SRD" )
dbSeek( cFilDe + cMatDe , .T. )

nFunHdl := MSFCREATE("EMPREGAD.I65")
If Ferror() # 0 .or. nFunHdl < 0
	Help(" ",1,"M150FUNHDL")
	Return
Endif

nFolHdl := MSFCREATE("FOLHA.I65")
If Ferror() # 0 .or. nFolHdl < 0
	Help(" ",1,"M150FOLHDL")
	Return
Endif

cFilAnterior := Replicate("!",FwGetTamFilial)
cMatAnterior := "      "

dbSelectArea( "SRD" )
dbGotop()

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Carrega Regua Processamento	                                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
ProcRegua(SRD->(RECCOUNT()))

While .T.

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Move Regua Processamento	                                   Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	IncProc(STR0011)  //"Gerando Instru┤└o Normativa 65"

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Consiste o De / Ate                                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If Eof() .Or. (SRD->RD_FILIAL + SRD->RD_MAT > cFilAte + cMatAte )
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё  Funcao para Gravar o arquivo ASCII                          Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		Grava65(@aRenda, @aDesconto, @aOutDesc, @aImposto, @nFolHdl, @nFunHdl)
		Exit
	Endif

		// -- Despresa os lanctos de transferencias de outras empresas
  	If SRD->RD_EMPRESA # FWCODEMP("SRD") .And. !Empty(SRD->RD_EMPRESA)
			dbSkip()
			Loop
	Endif



	If !(SubStr(StrZero(Year(SRD->RD_DATPGT),4),3,2) == cAnoBase)
		dbSkip()
		Loop
	EndIf

	If SRD->RD_FILIAL # cFilAnterior
		If !Fp_CodFol(@aCodFol,SRD->RD_FILIAL)
			Exit
		Endif
		cFilAnterior := SRD->RD_FILIAL
	Endif

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё  Verifica Quebra do Funcionario                              Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If !(SRD->RD_FILIAL + SRD->RD_MAT == cFilAnterior + cMatAnterior)
		If !(Empty(cMatAnterior))
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё  Funcao para Gravar o arquivo ASCII                          Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			Grava65(@aRenda, @aDesconto, @aOutDesc, @aImposto, @nFolHdl, @nFunHdl)
		EndIf
		aFill(aRenda   ,0)
		aFill(aDesconto,0)
		aFill(aOutDesc ,0)
		aFill(aImposto ,0)
		dbSelectArea( "SRA" )
		dbSeek( SRD->RD_FILIAL + SRD->RD_MAT )
		If Eof()
			dbSelectArea( "SRD" )
			dbSkip()
			Loop
		Else
			cMatAnterior := SRA->RA_MAT
		EndIf
		dbSelectArea( "SRD" )
	EndIf

	If PosSrv(SRD->RD_PD,cFilial,"RV_IR") = "S"
		If PosSrv(SRD->RD_PD,cFilial,"RV_TIPOCOD") == "1"
			aRenda[Month(SRD->RD_DATPGT)]    += SRD->RD_VALOR
		Else
			aRenda[Month(SRD->RD_DATPGT)]    -= SRD->RD_VALOR
			aDesconto[Month(SRD->RD_DATPGT)] += SRD->RD_VALOR
		EndIf
	Else
		If PosSrv(SRD->RD_PD,cFilial,"RV_TIPOCOD") == "2"
			aOutDesc[Month(SRD->RD_DATPGT)]  += SRD->RD_VALOR
		EndIf
	EndIf

	If SRD->RD_PD $ aCodFol[012,1]+"*"+aCodFol[009,1]+"*"+aCodFol[101,1]+"*"+aCodFol[071,1]+"*"+aCodFol[066,1]+"*"+aCodFol[067,1]
		aImposto[Month(SRD->RD_DATPGT)]     += SRD->RD_VALOR
	EndIf
	dbSkip()
EndDo

fClose(nFolHdl)
fClose(nFunHdl)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Recupera a Integridade dos dados                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea( "SRA" )
dbGoTo( nSavRec )
Return

*-------------------------------------------------------------------------------*
Static Function Grava65(aRenda, aDesconto, aOutDesc, aImposto, nFolHdl, nFunHdl)
*-------------------------------------------------------------------------------*
Local cDetFun := cDetFol := ""
Local nBytes := 0
Local X

cDetFol := SRA->RA_FILIAL + SRA->RA_MAT

For X = 1 to 12
	cDetFol += StrZero(NoRound(aRenda[X]*100),13)
	cDetFol += StrZero(NoRound(aDesconto[X]*100),13)
	cDetFol += StrZero(NoRound(aOutDesc[X]*100),13)
	cDetFol += StrZero(NoRound((aRenda[X]-aDesconto[X])*100),13)
	cDetFol += StrZero(NoRound(aImposto[X]*100),13)
Next X

cDetFol += Chr(13) + Chr(10)
nBytes  := Fwrite(nFolHdl,cDetFol,Len(cDetFol))

cDetFun := SRA->RA_NOME + "000" + SubStr(SRA->RA_CIC,01,03) + SubStr(SRA->RA_CIC,05,03) + SubStr(SRA->RA_CIC,09,03) + SubStr(SRA->RA_CIC,13,02)
cDetFun += SRA->RA_FILIAL + SRA->RA_MAT
cDetFun += Right(StrZero(Year(SRA->RA_ADMISSA),4),2) + StrZero(Month(SRA->RA_ADMISSA),2) + StrZero(Day(SRA->RA_ADMISSA),2)
cDetFun += Right(StrZero(Year(SRA->RA_DEMISSA),4),2) + StrZero(Month(SRA->RA_DEMISSA),2) + StrZero(Day(SRA->RA_DEMISSA),2)
cDetFun += DescFun(SRA->RA_CODFUNC,SRA->RA_FILIAL) + SRA->RA_DEPIR + SRA->RA_ENDEREC + SRA->RA_COMPLEM + SRA->RA_BAIRRO + SRA->RA_MUNICIP + SRA->RA_ESTADO + SRA->RA_CEP
cDetFun += SRA->RA_NACIONA + Right(StrZero(Year(SRA->RA_NASC),4),2) + StrZero(Month(SRA->RA_NASC),2) + StrZero(Day(SRA->RA_NASC),2)
cDetFun += Chr(13) + Chr(10)
nBytes  := Fwrite(nFunHdl,cDetFun,Len(cDetFun))

Return