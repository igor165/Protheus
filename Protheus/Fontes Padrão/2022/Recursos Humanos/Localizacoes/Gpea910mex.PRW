#INCLUDE 'PROTHEUS.CH'
#INCLUDE 'FWMVCDEF.CH'
#INCLUDE 'GPEA910.CH'
/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Programa  ≥GPEA910   ∫Autor  ≥MOHANAD ODEH        ∫ Data ≥  14/07/11   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Desc.     ≥CADASTRO DE CREDITO INFONAVIT                               ∫±±
±±∫          ≥                                                            ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥                                                            ∫±±
±±√ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥         ATUALIZACOES SOFRIDAS DESDE A CONSTRUÄAO INICIAL.             ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Programador ≥ Data     ≥ FNC/CHAMADO    ≥  Motivo da Alteracao         ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Mohanad Odeh≥21/09/2011≥00000024324/2011≥ Inclus„o de validaÁıes dos   ≥±±
±±≥            ≥          ≥TDRXMG		   ≥ tipos de movimentos e cadas_   ≥±±
±±≥            ≥          ≥                ≥tro de mensagens de help      ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥gsantacruz  ≥18/10/2011≥		 ≥Corr: asort (etiqueta gsa)              ≥±±
±±≥fmonroy     ≥29/11/2011≥ 	 ≥Mjr: Valiaciones al campo de  RHB_TIPINF≥±±
±±≥R.Berti     ≥13/09/2012≥TFTLRJ≥Creacion del fuente GPEM830MEX;		    ≥±±
±±≥            ≥          ≥      ≥Se corrije funciones para estaticas.    ≥±±
±±≥gsantacruz  ≥10/09/2012≥ TFQAGX                                        ≥±±
±±≥lmedina     ≥16/01/2012≥ TGKPZB: Se modifico el asort                  ≥±± 
±±≥Laura Medina≥19/06/2013≥THDQZ0≥Correcion para la eliminacion del maes- ≥±±
±±≥            ≥          ≥      ≥tro de empleados del credito infonavit. ≥±±
±±≥Laura Medina≥12/02/2014≥TIGCNQ≥Correcion para que actualice Empleados  ≥±±
±±≥            ≥          ≥      ≥cuando se ordena por Nombre.            ≥±±
±±≥Ra˙l Ortiz M≥22/04/2014≥TPGGSW≥LÌmite cuota fija: 99,9999              ≥±±
±±≥Laura Medina≥21/10/2014≥TQQPI5≥Correcion para que actualice la informa-≥±±
±±≥            ≥          ≥      ≥cion del credito Infonavit en Empleados ≥±±
±±≥Laura Medina≥24/06/2015≥TRRDM6≥Correcion para que permita capturar un  ≥±±
±±≥            ≥          ≥      ≥segundo credito que sera tratado como un≥±±
±±≥            ≥          ≥      ≥reinicio con un nuevo numero de credito.≥±±
±±≥Alf. Medrano≥22/10/2015≥PCREQ-≥se modifica func GPEA910GRV se Limpian  ≥±±
±±≥            ≥          ≥2095  ≥variables de SRA para que se actualicen ≥±±
±±≥            ≥          ≥      ≥con los nuevos valores asignados de RHB ≥±±
±±»ÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
*/
Function GPEA910MEX()
Local oBrowse
Local xRetFilRh
Local cFiltraRh 	:= ""   

Private cFilInf := SRA->RA_FILIAL 
Private cMatInf := SRA->RA_MAT

oBrowse := FWMBrowse():New()
oBrowse:SetAlias('SRA')
oBrowse:SetDescription(OemToAnsi(STR0001)) // "Cadastro de CrÈdito Infonavit"
oBrowse:AddLegend( "SRA->RA_SITFOLH==' '", "GREEN")
oBrowse:AddLegend( "SRA->RA_SITFOLH=='D'", "RED")
oBrowse:AddLegend( "SRA->RA_SITFOLH=='A'", "YELLOW")
oBrowse:AddLegend( "SRA->RA_SITFOLH=='F'", "BLUE")

//------------------------------------------
//Busca o filtro a ser utilizado no Browse
//------------------------------------------
xRetFilRh := CHKRH(FunName(),"SRA","1")
If ValType(xRetFilRh) == "L"
	cFiltraRh := if(xRetFilRh,".T.",".F.")
Else
	cFiltraRh := xRetFilRh
EndIf

oBrowse:SetFilterDefault(cFiltraRh)
oBrowse:DisableDetails()
oBrowse:Activate() 

Return NIL

/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥MenuDef     ≥ Autor ≥ MOHANAD ODEH          ≥ Data ≥ 14/07/11 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥Menu Funcional                                                ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Sintaxe   ≥ MenuDef()                                                    ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Parametros≥                                                              ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥                                                              ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Static Function MenuDef()
Local aRotina := {}

ADD OPTION aRotina TITLE OemToAnsi(STR0002)  		ACTION 'PesqBrw'             	OPERATION 1 ACCESS 0 // "Pesquisar"
ADD OPTION aRotina TITLE OemToAnsi(STR0003)			ACTION 'VIEWDEF.GPEA910MEX' 		OPERATION 2 ACCESS 0 // "Visualizar"
ADD OPTION aRotina TITLE OemToAnsi(STR0004) 		ACTION 'VIEWDEF.GPEA910MEX'	 	OPERATION 4 ACCESS 0 // "LanÁamentos"
ADD OPTION aRotina TITLE OemToAnsi(STR0005)		   	ACTION 'VIEWDEF.GPEA910MEX' 		OPERATION 8 ACCESS 0 // "Imprimir"
Return aRotina


/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥ModelDef    ≥ Autor ≥ MOHANAD ODEH          ≥ Data ≥ 14/07/11 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥Modelo de dados e Regras de Preenchimento para o Cadastro de  ≥±±
±±≥          ≥Credito Infonavit                                             ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Sintaxe   ≥ ModelDef()                                                   ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Parametros≥                                                              ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥                                                              ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Static Function ModelDef()
// Cria a estrutura a ser usada no Modelo de Dados
//Define os campos do SRA que ser„o apresentados na tela     
Local bAvalCampo          := {|cCampo| AllTrim(cCampo)+"|" $ "RA_MAT|RA_NOME|RA_ADMISSA|"}
// Cria a estrutura a ser usada no Modelo de Dados
Local oStruSRA := FWFormStruct(1, 'SRA', bAvalCampo,/*lViewUsado*/)
Local oStruRHB := FWFormStruct(1, 'RHB', /*bAvalCampo*/,/*lViewUsado*/)
Local oModel

// Blocos de codigo do modelo
//Local bPreValid	:= {|oMdl, aSavedLines ,nLines| Gp910PreVal(oMdl, aSavedLines := FWsaverows()  )}
Local bLinePos	:= {|oMdl| Gp910LinePos(oMdl)}
Local bCommit := {|oMdl| GPEA910GRV(oMdl)}
Local bPosValid := {|oMdl| Gp910PosVal(oMdl)}
Local bLinePre := {|oMdl| Gp910Lipre(oMdl)}
// REMOVE CAMPOS DA ESTRUTURA
//oStruRHB:RemoveField('RHB_MAT')


oStruRHB:SetProperty( 'RHB_TPMINF' , MODEL_FIELD_VALID,{|oMdl| GPEA9101(oMdl)}) 
oStruRHB:SetProperty( 'RHB_TIPINF' , MODEL_FIELD_WHEN,{|oMdl| !(oMdl:GetValue('RHB_TPMINF') $ '19/16') }) 
oStruRHB:SetProperty( 'RHB_NUMINF' , MODEL_FIELD_WHEN,{|oMdl| !(oMdl:GetValue('RHB_TPMINF') $ '19/16') }) 
oStruRHB:SetProperty( 'RHB_VALINF' , MODEL_FIELD_WHEN,{|oMdl| !(oMdl:GetValue('RHB_TPMINF') $ '16') }) 

// Cria o objeto do Modelo de Dados
oModel := MPFormModel():New('GPEA910MEX', /*bPreValid*/ , bPosValid, bCommit, /*bCancel*/)

// Adiciona ao modelo uma estrutura de formul·rio de ediÁ„o por campo
oModel:AddFields('SRAMASTER', /*cOwner*/, oStruSRA, /*bPreValidacao*/, /*bPosValidacao*/, /*bCarga*/)

// Adiciona ao modelo uma estrutura de formul·rio de ediÁ„o por grid
oModel:AddGrid( 'RHBDETAIL', 'SRAMASTER', oStruRHB, bLinePre, bLinePos, /*bPreVal*/, /*bPosVal*/, /*BLoad*/ )
//oModel:AddGrid( 'ZA2DETAIL', 'ZA1MASTER', oStruZA2, /*bLinePre*/,  { | oMdlG | COMP021LPOS( oMdlG ) } , /*bPreVal*/, /*bPosVal*/ )

// Faz relaciomaneto entre os compomentes do model
oModel:SetRelation('RHBDETAIL', {{'RHB_FILIAL', 'xFilial("RHB")'}, {'RHB_MAT', 'RA_MAT'}}, RHB->(IndexKey(1)))

//Define Chave ⁄nica
oModel:GetModel('RHBDETAIL'):SetUniqueLine({'RHB_MAT', 'RHB_DTMINF', 'RHB_TPMINF'})

//Permite grid sem dados
oModel:GetModel('RHBDETAIL'):SetOptional(.T.)

oModel:GetModel('SRAMASTER'):SetOnlyView(.T.)
//oModel:GetModel('SRAMASTER'):SetOnlyQuery(.T.)
//oModel:SetOnlyQuery('SRAMASTER')

// Adiciona a descricao do Modelo de Dados
oModel:SetDescription(OemToAnsi(STR0001))  // "Cadastro de CrÈdito Infonavit"

// Adiciona a descricao do Componente do Modelo de Dados
oModel:GetModel('SRAMASTER'):SetDescription(OemToAnsi(STR0006)) // "Funcion·rios"
oModel:GetModel('RHBDETAIL'):SetDescription(OemToAnsi(STR0007)) // "CrÈdito Infonavit"

// Liga a validaÁ„o da ativacao do Modelo de Dados
//oModel:SetVldActivate( { |oModel| COMP011ACT( oModel ) } )

Return oModel

/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥ViewDef     ≥ Autor ≥ MOHANAD ODEH          ≥ Data ≥ 14/07/11 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥ Visualizador de dados do Cadastro de Credito Infonavit       ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Sintaxe   ≥ ViewDef()                                                    ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Parametros≥                                                              ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥                                                              ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Static Function ViewDef()
// Cria um objeto de Modelo de Dados baseado no ModelDef do fonte informado
Local oModel   := FWLoadModel('GPEA910MEX')
// Cria a estrutura a ser usada na View 
//Define os campos do SRA que ser„o apresentados na tela     
Local bAvalCampo          := {|cCampo| AllTrim(cCampo)+"|" $ "RA_MAT|RA_NOME|RA_ADMISSA|"}
// Cria a estrutura a ser usada na View
Local oStruSRA := FWFormStruct(2, 'SRA', bAvalCampo)
Local oStruRHB := FWFormStruct(2, 'RHB')
Local oView
// Local cCampos := {}

cFilInf := SRA->RA_FILIAL 
cMatInf := SRA->RA_MAT

// Cria o objeto de View
oView := FWFormView():New()

// REMOVE CAMPOS DA ESTRUTURA
oStruRHB:RemoveField('RHB_MAT')


oStruRHB:SetProperty('RHB_DTMINF', MVC_VIEW_ORDEM,'01')
oStruRHB:SetProperty('RHB_CODRPA', MVC_VIEW_ORDEM,'02')
oStruRHB:SetProperty('RHB_TPMINF', MVC_VIEW_ORDEM,'03')
oStruRHB:SetProperty('RHB_NUMINF', MVC_VIEW_ORDEM,'04')
oStruRHB:SetProperty('RHB_TIPINF', MVC_VIEW_ORDEM,'05')
oStruRHB:SetProperty('RHB_VALINF', MVC_VIEW_ORDEM,'06')

// Define qual o Modelo de dados ser· utilizado
oView:SetModel(oModel)

// Adiciona no nosso View um controle do tipo FormFields(antiga enchoice)
oView:AddField('VIEW_SRA', oStruSRA, 'SRAMASTER')

oStruSRA:SetNoFolder()

// Adiciona no nosso View um controle do tipo FormGrid(antiga newgetdados)
oView:AddGrid('VIEW_RHB', oStruRHB, 'RHBDETAIL')

// Criar um "box" horizontal para receber algum elemento da view
oView:CreateHorizontalBox('SUPERIOR', 20)
oView:CreateHorizontalBox('INFERIOR', 80)

// Relaciona o ID da View com o "box" para exibicao
oView:SetOwnerView('VIEW_SRA', 'SUPERIOR')
oView:SetOwnerView('VIEW_RHB', 'INFERIOR')

// Liga a identificacao do componente
// oView:EnableTitleView('VIEW_ZA2')
oView:EnableTitleView('VIEW_RHB', OemToAnsi(STR0007)) // "CrÈdito Infonavit"

Return oView

/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥Gp910LinePos≥ Autor ≥ MOHANAD ODEH          ≥ Data ≥ 22/07/11 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥ Pos validacao de CrÈdito de Infonavit                        ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Sintaxe   ≥ Gp910LinePos(oMdl)                                           ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Parametros≥ oMdl = objeto do modelo                                      ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ ModelDef()                                                   ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Static Function Gp910LinePos(oModelGrid)
Local oModel    := oModelGrid:GetModel()
Local nOperation:= oModel:GetOperation()
Local aArea     := GetArea()
Local cQuery    := ''
Local cTemp		:= ''
Local lRet 		:= .T.
Local nLinha	:= 0
Local nPos:=0
Local nPosFec  :=GdFieldPos( "RHB_DTMINF" ,   oModelGrid:AHEADER)
Local nPosTip  :=GdFieldPos( "RHB_TPMINF" ,   oModelGrid:AHEADER)

If !oModelGrid:IsDeleted()
	If nOperation == 4

		nLinha		:= oModelGrid:nLine
		nLinhaAnt	:= oModelGrid:nLine - 1

		cTemp    := GetNextAlias()

		//VALIDA DATA DE MOVIMENTO
		cQuery  := ""
		cQuery  += "  SELECT * FROM " + RetSqlName('SRA') + "  "
		cQuery  += "   WHERE RA_FILIAL = '" + xFilial('SRA') + "'  "   
		//cQuery  += "     AND RA_MAT = '" + AllTrim(FwFldGet('RHB_MAT')) + "' "
		//cQuery  += "     AND RA_MAT = '" +	AllTrim(oModel:GetValue('RHBDETAIL','RHB_MAT')) + "' "		//gsa
		cQuery  += "     AND RA_MAT = '" +	AllTrim(oModelGrid:GetValue('RHB_MAT', nLinha)) + "' "		//gsa
		
	 
		cQuery  += "     AND D_E_L_E_T_ = ' ' "

		dbUseArea( .T., "TOPCONN", TcGenQry(,, cQuery), cTemp, .F., .T.)

		If (cTemp)->RA_SITFOLH == 'D'

			If lRet .and. oModelGrid:GetValue('RHB_DTMINF', nLinha) >= STOD((cTemp)->RA_DEMISSA)
				Help(" ",1,"RHB0006") // Data de Movimento inv·lida ### N„o È permitido movimentos para funcion·rios inativos, verifique a situaÁ„o do funcion·rio
				lRet := .F.
			EndIf

		EndIf

		(cTemp)->(dbCloseArea())

        If nLinha == 1
			If lRet .and. oModelGrid:GetValue('RHB_TPMINF', nLinha) <> '15'
				Help(" ",1,"RHB0006") // SequÍncia de movimentos inv·lida ### O primeiro Movimento deve ser do tipo InÌcio! Verifique a sequÍncia lÛgica dos movimentos
				lRet := .F.
			EndIf        
        Else
			//VALIDA FECHA fm
			If (npos:= ASCAN(oModelGrid:aDataModel, {|aVal| aVal[1, 1, nPosFec] == oModelGrid:GetValue('RHB_DTMINF', nLinha)}))>0 .and. npos<> nLinha
				If (oModelGrid:ADATAMODEL[nPos][1][1][nPosTip]=='15'.Or. oModelGrid:ADATAMODEL[nPos][1][1][nPosTip]=='16') .AND.      ;
				   (oModelGrid:ADATAMODEL[nLinha][1][1][nPosTip]=='15'.Or. oModelGrid:ADATAMODEL[nLinha][1][1][nPosTip]=='16')
					lRet := .T.
				Else
					Help( " ", 1, "Help",, "Problema: Fecha del movimiento inv·lida SoluciÛn: Ya existe la fecha del movimiento solo es permitida la misma fecha para movimientos de tipo Inicio y SuspensiÛn", 1, 0 ) //gsa
						lRet := .F.
				EndIf
				
			EndIf
			//VALIDA OS TIPOS DE MOVIMENTOS
			Do Case

				Case oModelGrid:GetValue('RHB_TPMINF', nLinhaAnt) == '15' //InÌcio

					If lRet .and. oModelGrid:GetValue('RHB_TPMINF', nLinha) == '15'
						Help(" ",1,"RHB00001") // SequÍncia de movimentos inv·lida ### J· existe inÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
						lRet := .F.
					EndIf

					If lRet .and. oModelGrid:GetValue('RHB_TPMINF', nLinha) == '17'
						Help(" ",1,"RHB0009")   // SequÍncia de movimentos inv·lida ### Inclus„o de ReinÌcio sÛ È permitida se houver uma suspens„o
						lRet := .F.
					EndIf

				Case oModelGrid:GetValue('RHB_TPMINF', nLinhaAnt) == '16' //Suspens„o

					If lRet .and. oModelGrid:GetValue('RHB_TPMINF', nLinha) <> '17'
						Help(" ",1,"RHB00002") // SequÍncia de movimentos inv·lida ### ApÛs um movimento de Suspens„o sÛ È permitido incluir um movimento de ReinÌcio
						lRet := .F.
					EndIf
					
				Case oModelGrid:GetValue('RHB_TPMINF', nLinhaAnt) == '17' //ReinÌcio

					If lRet .and. oModelGrid:GetValue('RHB_TPMINF', nLinha) == '15'
						Help(" ",1,"RHB00001") // SequÍncia de movimentos inv·lida ### J· existe inÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
						lRet := .F.
					EndIf

					If lRet .and. oModelGrid:GetValue('RHB_TPMINF', nLinha) == '17'
						Help(" ",1,"RHB0008")  // SequÍncia de movimentos inv·lida ### J· existe reinÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
						lRet := .F.
					EndIf

				Case oModelGrid:GetValue('RHB_TPMINF', nLinhaAnt) == '18' //ModificaÁ„o do Tipo do Desconto

					If lRet .and. oModelGrid:GetValue('RHB_TPMINF', nLinha) == '15'
						Help(" ",1,"RHB00001") // SequÍncia de movimentos inv·lida ### J· existe inÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
						lRet := .F.
					EndIf

					If lRet .and. oModelGrid:GetValue('RHB_TPMINF', nLinha) == '17'
						Help(" ",1,"RHB0009")   // SequÍncia de movimentos inv·lida ### Inclus„o de ReinÌcio sÛ È permitida se houver uma suspens„o
						lRet := .F.
					EndIf

				Case oModelGrid:GetValue('RHB_TPMINF', nLinhaAnt) == '19' //ModificaÁ„o do Valor do Desconto

					If lRet .and. oModelGrid:GetValue('RHB_TPMINF', nLinha) == '15'
						Help(" ",1,"RHB00001") // SequÍncia de movimentos inv·lida ### J· existe inÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
						lRet := .F.
					EndIf

					If lRet .and. oModelGrid:GetValue('RHB_TPMINF', nLinha) == '17'
						Help(" ",1,"RHB0009")   // SequÍncia de movimentos inv·lida ### Inclus„o de ReinÌcio sÛ È permitida se houver uma suspens„o
						lRet := .F.
					EndIf

				Case oModelGrid:GetValue('RHB_TPMINF', nLinhaAnt) == '20' //ModificaÁ„o do N˙mero de CrÈdito

					If lRet .and. oModelGrid:GetValue('RHB_TPMINF', nLinha) == '15'
						Help(" ",1,"RHB00001") // SequÍncia de movimentos inv·lida ### J· existe inÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
						lRet := .F.
					EndIf

					If lRet .and. oModelGrid:GetValue('RHB_TPMINF', nLinha) == '17'
						Help(" ",1,"RHB0009")   // SequÍncia de movimentos inv·lida ### Inclus„o de ReinÌcio sÛ È permitida se houver uma suspens„o
						lRet := .F.
					EndIf

			EndCase

			If lRet .and. !oModelGrid:IsDeleted(nLinha)
				If oModelGrid:GetValue('RHB_TPMINF', nLinha) == '16' .AND. (oModelGrid:GetValue('RHB_NUMINF', nLinhaAnt) <> oModelGrid:GetValue('RHB_NUMINF', nLinha);
					.OR. oModelGrid:GetValue('RHB_TIPINF', nLinha) <> oModelGrid:GetValue('RHB_TIPINF', nLinhaAnt).OR.;
							oModelGrid:GetValue('RHB_VALINF', nLinha) <> oModelGrid:GetValue('RHB_VALINF', nLinhaAnt))
					Help(" ",1,"RHB0010") // Movimento inv·lido ### N„o È possÌvel suspender um crÈdito diferente do vigente
					lRet := .F.
            	EndIf
			EndIf

			If lRet .and. !oModelGrid:IsDeleted(nLinha)
				If oModelGrid:GetValue('RHB_TPMINF', nLinha) == '17' .And. !(oModelGrid:GetValue('RHB_TPMINF', nLinhaAnt) == "16")
					Help(" ",1,"RHB0011") // Movimento inv·lido ### N„o È possÌvel reiniciar um crÈdito diferente do suspenso!
					lRet := .F.
   				Elseif oModelGrid:GetValue('RHB_NUMINF', nLinhaAnt) <> oModelGrid:GetValue('RHB_NUMINF', nLinha)  //Es un segundo credito
					 If !MSGYESNO("El movimiento ser· considerado como un segundo crÈdito, øConfirma que se grabara un segundo crÈdito?")     
					 	Help(" ",1,"RHB0011") // Movimento inv·lido ### N„o È possÌvel reiniciar um crÈdito diferente do suspenso!
					 	lRet := .F.
					 Endif
            	EndIf
			EndIf

			If lRet .and. !oModelGrid:IsDeleted(nLinha)
				If oModelGrid:GetValue('RHB_TPMINF', nLinha) == '18' .AND. (oModelGrid:GetValue('RHB_NUMINF', nLinhaAnt) <> oModelGrid:GetValue('RHB_NUMINF', nLinha);
					.OR. oModelGrid:GetValue('RHB_TIPINF', nLinha) == oModelGrid:GetValue('RHB_TIPINF', nLinhaAnt))
					Help(" ",1,"RHB0012") // Movimento inv·lido ### Se o tipo de movimento for igual a ModificaÁ„o de Tipo de Desconto, o Tipo de Desconto deve ser modificado, mantendo os dados do Movimento vigente  
					lRet := .F.
            	EndIf
			EndIf

			If lRet .and. !oModelGrid:IsDeleted(nLinha)
				If oModelGrid:GetValue('RHB_TPMINF', nLinha) == '19' .AND. (oModelGrid:GetValue('RHB_NUMINF', nLinhaAnt) <> oModelGrid:GetValue('RHB_NUMINF', nLinha);
					.OR. oModelGrid:GetValue('RHB_VALINF', nLinha) == oModelGrid:GetValue('RHB_VALINF', nLinhaAnt))
					Help(" ",1,"RHB0013") // Movimento inv·lido ### Se o tipo de movimento for igual a ModificaÁ„o do Valor do Desconto, o Valor do Desconto deve ser modificado, mantendo os dados do Movimento vigente
					lRet := .F.
            	EndIf
			EndIf

			If lRet .and. !oModelGrid:IsDeleted(nLinha)
				If oModelGrid:GetValue('RHB_TPMINF', nLinha) <> '20' .AND.  oModelGrid:GetValue('RHB_TPMINF', nLinha) <> '17' .AND. oModelGrid:GetValue('RHB_NUMINF', nLinhaAnt) <> oModelGrid:GetValue('RHB_NUMINF', nLinha)
					Help(" ",1,"RHB0014") // Movimento inv·lido ### A alteraÁ„o de crÈdito Infonavit sÛ È permitida se o tipo de movimento for igual a ModificaÁ„o de N˙mero de CrÈdito
					lRet := .F.
            	EndIf
			EndIf

			If lRet .and. !oModelGrid:IsDeleted(nLinha)
				If oModelGrid:GetValue('RHB_TPMINF', nLinha) == '20' .AND. oModelGrid:GetValue('RHB_NUMINF', nLinhaAnt) == oModelGrid:GetValue('RHB_NUMINF', nLinha)
					Help(" ",1,"RHB0015") // Movimento inv·lido ### Se o tipo de movimento for igual a ModificaÁ„o de N˙mero de CrÈdito, esse n˙mero dever· ser alterado!
					lRet := .F.
            	EndIf
			EndIf											

		EndIf

		//VALIDA VALORES
		If lRet .and. oModelGrid:GetValue('RHB_TIPINF', nLinha) == '1'
			If oModelGrid:GetValue('RHB_VALINF', nLinha) > 100
				Help(" ",1,"RHB00003") // Para tipo de CrÈdito Porcentagem SDI, sÛ È permitido valores menores que 100 ### Inclua uma quantidade v·lida de acordo com o tipo de crÈdito selecionado
				lRet := .F.
			EndIf
		ElseIf lRet .and. oModelGrid:GetValue('RHB_TIPINF', nLinha) == '2'
			If oModelGrid:GetValue('RHB_VALINF', nLinha) > 99999
				Help(" ",1,"RHB00005") // Para tipo de CrÈdito Cota Fixa, sÛ È permitido valores menores que 10.000,00 ### Inclua uma quantidade v·lida de acordo com o tipo de crÈdito selecionado
				lRet := .F.
			EndIf
		ElseIf lRet .and. oModelGrid:GetValue('RHB_TIPINF', nLinha) == '3'
			If oModelGrid:GetValue('RHB_VALINF', nLinha) > 1000
				Help( " ", 1, "Help",, "Problema: Para tipo de CrÈdito Sal·rio MinÌmo, sÛ È permitido valores menores que 1.000,00 SoluÁ„o: Inclua uma quantidade v·lida de acordo com o tipo de crÈdito selecionado", 1, 0 )
			EndIf
		EndIf

		//VALIDA C”DIGO REGISTRO PATRONAL
		dbSelectArea("RCO")
		dbSetOrder(1)
		If lRet .AND. !dbSeek(xFilial("RCO")+oModelGrid:GetValue('RHB_CODRPA', nLinha))
			Help(" ",1,"RHB0016") // Movimento inv·lido ### CÛdigo do Registro patronal n„o existe!
			lRet := .F.
		EndIf
		DbCloseArea()

	EndIf

EndIf

RestArea(aArea)

Return lRet

/*/{Protheus.doc} Gp910LiPre
FunciÛn que se encarga de detonar las validaciones previas de linea
@type function
@author eduardo.manriquez
@since 03/12/2021
@version 1.0
@param oModelGrid, object, Objeto que contiene el modelo utilizado en MVC
/*/
Static Function Gp910LiPre(oModelGrid)
	Local oModel    := oModelGrid:GetModel('RHBDETAIL')
	Local nOperation:= oModel:GetOperation()
	
	if !oModelGrid:IsDeleted()
		if nOperation == 4
			if oModelGrid:Length() > 0
				oModelGrid:loadValue("RHB_CODRPA", SRA->RA_CODRPAT)
			EndIf
		Endif
	Endif
Return

/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥Gp910PosVal ≥ Autor ≥ MOHANAD ODEH          ≥ Data ≥ 29/07/11 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥ Pos validacao de CrÈdito de Infonavit (TudoOk)               ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Sintaxe   ≥ Gp910PosVal(oMdl)                                            ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Parametros≥ oMdl = objeto do modelo                                      ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ ModelDef()                                                   ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Static Function Gp910PosVal(oModelGrid)
Local oModel     	:= oModelGrid:GetModel('RHBDETAIL')
Local nOperation	:= oModel:GetOperation()
Local aArea     	:= GetArea()
Local lRet 	   		:= .T.
Local lPri			:= .T.
Local nLinha		:= 0
Local nLinhaAnt		:= 0
Local nTotLin   	:= 0
Local n				:= 0
Local aRHBaCols 	:= AClone(oModel:aDataModel)

//GSA ASORT(oModel:aDataModel,,, { | x ,y| x[1, 1, 4] < y[1, 1, 4] } )
ASORT(oModel:aDataModel,2,, { | x ,y| dtos(x[1, 1, 5])+x[1, 1, 4] < dtos(y[1, 1, 5])+y[1, 1, 4] } ) //gsa //lemp

If nOperation == 4

	nTotLin := oModel:GetQtdLine()

	For nLinha:=1 to nTotLin

	        If lPri
	        	If !oModel:IsDeleted(nLinha)

					If oModel:GetValue('RHB_TPMINF', nLinha) <> '15'
						Help(" ",1,"RHB0008")  // SequÍncia de movimentos inv·lida ### O primeiro Movimento deve ser do tipo InÌcio! Verifique a sequÍncia lÛgica dos movimentos
						lRet := .F.
					EndIf
					lPri := .F.
				EndIf

	        Else

				nLinhaAnt	:= nLinha - 1

		        If lRet .and. oModel:IsDeleted(nLinha) .AND. oModel:IsDeleted(nLinhaAnt)
					Loop
				EndIf

		        If lRet .and. oModel:IsDeleted(nLinha) .AND. !oModel:IsDeleted(nLinhaAnt)
			        nLinhaAnt	:= nLinha - 1
			        For n := nLinha to nTotLin
			        	If !oModel:IsDeleted(n)
			        		nLinha := n
			        		Exit 
			        	EndIf
			        Next n
			    EndIf

				//VALIDA OS TIPOS MOVIMENTOS
				Do Case

					Case oModel:GetValue('RHB_TPMINF', nLinhaAnt) == '15' //InÌcio

						If lRet .and. oModel:GetValue('RHB_TPMINF', nLinha) == '15'
							Help(" ",1,"RHB00001") // SequÍncia de movimentos inv·lida ### J· existe inÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
							lRet := .F.
						EndIf

						If lRet .and. oModel:GetValue('RHB_TPMINF', nLinha) == '17'
							Help(" ",1,"RHB0009")   // SequÍncia de movimentos inv·lida ### Inclus„o de ReinÌcio sÛ È permitida se houver uma suspens„o
							lRet := .F.
						EndIf

					Case oModel:GetValue('RHB_TPMINF', nLinhaAnt) == '16' //Suspens„o
					
						If lRet .and. oModel:GetValue('RHB_TPMINF', nLinha) <> '17'
							Help(" ",1,"RHB00002") // SequÍncia de movimentos inv·lida ### ApÛs um movimento de Suspens„o sÛ È permitido incluir um movimento de ReinÌcio
							lRet := .F.
						EndIf

					Case oModel:GetValue('RHB_TPMINF', nLinhaAnt) == '17' //ReinÌcio
	
						If lRet .and. oModel:GetValue('RHB_TPMINF', nLinha) == '15'
							Help(" ",1,"RHB00001") // SequÍncia de movimentos inv·lida ### J· existe inÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
							lRet := .F.
						EndIf

						If lRet .and. oModel:GetValue('RHB_TPMINF', nLinha) == '17'
							Help(" ",1,"RHB0008")  // SequÍncia de movimentos inv·lida ### J· existe reinÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
							lRet := .F.
						EndIf
	
					Case oModel:GetValue('RHB_TPMINF', nLinhaAnt) == '18' //ModificaÁ„o do Tipo do Desconto

						If lRet .and. oModel:GetValue('RHB_TPMINF', nLinha) == '15'
							Help(" ",1,"RHB00001") // SequÍncia de movimentos inv·lida ### J· existe inÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
							lRet := .F.
						EndIf
	
						If lRet .and. oModel:GetValue('RHB_TPMINF', nLinha) == '17'
							Help(" ",1,"RHB0008")  // SequÍncia de movimentos inv·lida ### J· existe reinÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
							lRet := .F.
						EndIf

					Case oModel:GetValue('RHB_TPMINF', nLinhaAnt) == '19' //ModificaÁ„o do Valor do Desconto
	
						If lRet .and. oModel:GetValue('RHB_TPMINF', nLinha) == '15'
							Help(" ",1,"RHB00001") // SequÍncia de movimentos inv·lida ### J· existe inÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
							lRet := .F.
						EndIf
	
						If lRet .and. oModel:GetValue('RHB_TPMINF', nLinha) == '17'
							Help(" ",1,"RHB0008")  // SequÍncia de movimentos inv·lida ### J· existe reinÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
							lRet := .F.
						EndIf

					Case oModel:GetValue('RHB_TPMINF', nLinhaAnt) == '20' //ModificaÁ„o do N˙mero de CrÈdito
	
						If lRet .and. oModel:GetValue('RHB_TPMINF', nLinha) == '15'
							Help(" ",1,"RHB00001") // SequÍncia de movimentos inv·lida ### J· existe inÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
							lRet := .F.
						EndIf
	
						If lRet .and. oModel:GetValue('RHB_TPMINF', nLinha) == '17'
							Help(" ",1,"RHB0008")  // SequÍncia de movimentos inv·lida ### J· existe reinÌcio para este movimento, n„o pode existir movimentos duplicados! Verifique a sequÍncia lÛgica dos movimentos
							lRet := .F.
						EndIf

				EndCase
                     
				If lRet .and. !oModel:IsDeleted(nLinha)
					If oModel:GetValue('RHB_TPMINF', nLinha) == '16' .AND. (oModel:GetValue('RHB_NUMINF', nLinhaAnt) <> oModel:GetValue('RHB_NUMINF', nLinha);
						.OR. oModel:GetValue('RHB_TIPINF', nLinha) <> oModel:GetValue('RHB_TIPINF', nLinhaAnt).OR.;
								oModel:GetValue('RHB_VALINF', nLinha) <> oModel:GetValue('RHB_VALINF', nLinhaAnt))
						Help(" ",1,"RHB0010") // Movimento inv·lido ### N„o È possÌvel suspender um crÈdito diferente do vigente
						lRet := .F.
	            	EndIf
				EndIf

				If lRet .and. !oModel:IsDeleted(nLinha)
					If oModel:GetValue('RHB_TPMINF', nLinha) == '17' .And. !(oModel:GetValue('RHB_TPMINF', nLinhaAnt) == "16") 
						Help(" ",1,"RHB0011") // Movimento inv·lido ### N„o È possÌvel reiniciar um crÈdito diferente do suspenso!
						lRet := .F.
	            	EndIf
				EndIf

				If lRet .and. !oModel:IsDeleted(nLinha)
					If oModel:GetValue('RHB_TPMINF', nLinha) == '18' .AND. (oModel:GetValue('RHB_NUMINF', nLinhaAnt) <> oModel:GetValue('RHB_NUMINF', nLinha);
						.OR.oModel:GetValue('RHB_TIPINF', nLinha) == oModel:GetValue('RHB_TIPINF', nLinhaAnt))
						Help(" ",1,"RHB0012") // Movimento inv·lido ### Se o tipo de movimento for igual a ModificaÁ„o de Tipo de Desconto, o Tipo de Desconto deve ser modificado, mantendo os dados do Movimento vigente  
						lRet := .F.
	            	EndIf
				EndIf
				
				If lRet .and. !oModel:IsDeleted(nLinha)
					If oModel:GetValue('RHB_TPMINF', nLinha) == '19' .AND. (oModel:GetValue('RHB_NUMINF', nLinhaAnt) <> oModel:GetValue('RHB_NUMINF', nLinha);
						.OR. oModel:GetValue('RHB_VALINF', nLinha) == oModel:GetValue('RHB_VALINF', nLinhaAnt))
						Help(" ",1,"RHB0013") // Movimento inv·lido ### Se o tipo de movimento for igual a ModificaÁ„o do Valor do Desconto, o Valor do Desconto deve ser modificado, mantendo os dados do Movimento vigente
						lRet := .F.
	            	EndIf
				EndIf

				If lRet .and. !oModel:IsDeleted(nLinha)
					If oModel:GetValue('RHB_TPMINF', nLinha) <> '20' .AND.  oModel:GetValue('RHB_TPMINF', nLinha) <> '17' .AND. oModel:GetValue('RHB_NUMINF', nLinhaAnt) <> oModel:GetValue('RHB_NUMINF', nLinha)
						Help(" ",1,"RHB0014") // Movimento inv·lido ### A alteraÁ„o de crÈdito Infonavit sÛ È permitida se o tipo de movimento for igual a ModificaÁ„o de N˙mero de CrÈdito
					lRet := .F.
	            	EndIf
				EndIf

				If lRet .and. !oModel:IsDeleted(nLinha)
					If oModel:GetValue('RHB_TPMINF', nLinha) == '20' .AND. oModel:GetValue('RHB_NUMINF', nLinhaAnt) == oModel:GetValue('RHB_NUMINF', nLinha)
						Help(" ",1,"RHB0015") // Movimento inv·lido ### Se o tipo de movimento for igual a ModificaÁ„o de N˙mero de CrÈdito, esse n˙mero dever· ser alterado!
						lRet := .F.
	            	EndIf
				EndIf											


			EndIf

			If lRet .and. !oModel:IsDeleted(nLinha)
				//VALIDA VALORES
				If oModel:GetValue('RHB_TIPINF', nLinha) == '1'
					If oModel:GetValue('RHB_VALINF', nLinha) > 100
						Help(" ",1,"RHB00003") // Para tipo de CrÈdito Porcentagem SDI, sÛ È permitido valores menores que 100 ### Inclua uma quantidade v·lida de acordo com o tipo de crÈdito selecionado
						lRet := .F.
					EndIf
				ElseIf lRet .and. oModel:GetValue('RHB_TIPINF', nLinha) == '2'
					If oModel:GetValue('RHB_VALINF', nLinha) > 99999
						Help(" ",1,"RHB00005") // Para tipo de CrÈdito Cota Fixa, sÛ È permitido valores menores que 10.000,00 ### Inclua uma quantidade v·lida de acordo com o tipo de crÈdito selecionado
						lRet := .F.
					EndIf
				ElseIf lRet .and. oModel:GetValue('RHB_TIPINF', nLinha) == '3'
					If oModel:GetValue('RHB_VALINF', nLinha) > 1000
						Help(" ",1,"RHB00004") // Para tipo de CrÈdito Sal·rio MinÌmo, sÛ È permitido valores menores que 1.000,00 ### Inclua uma quantidade v·lida de acordo com o tipo de crÈdito selecionado
						lRet := .F.
					EndIf
				EndIf

			EndIf

			//VALIDA C”DIGO REGISTRO PATRONAL
			dbSelectArea("RCO")
			dbSetOrder(1)
			If lRet .AND. !dbSeek(xFilial("RCO")+oModel:GetValue('RHB_CODRPA', nLinha))
				Help(" ",1,"RHB0016") // Movimento inv·lido ### CÛdigo do Registro patronal n„o existe!
				lRet := .F.
			EndIf
			DbCloseArea()

	Next

EndIf

oModel:aDataModel := aClone(aRHBaCols)

RestArea(aArea)

Return lRet

/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥GPEA910GRV   ≥ Autor ≥ MOHANAD ODEH         ≥ Data ≥ 22/07/11 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥ Grava nas tabelas de Credito Infonavit e Funcionarios        ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Sintaxe   ≥GPEA910GRV(oMdl)                                             ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Parametros≥ oMdl = objeto do modelo                                      ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ModelDef()                                                   ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Static Function GPEA910GRV(oModelGrid)
Local oModel     	:= oModelGrid:GetModel('RHBDETAIL')
Local nOperation 	:= oModel:GetOperation()
Local aArea      	:= GetArea()
Local cQuery     	:= ''
Local cTmp			:= ''
Local nUltLin		:= 0

cFilInf := SRA->RA_FILIAL 
cMatInf := SRA->RA_MAT

nUltLin:= oModel:GetQtdLine()

FWFormCommit(oModelGrid)

If nOperation == 4
	cTmp    := GetNextAlias()

	cQuery := ""
	cQuery += "   SELECT MAX(RHB_DTMINF) AS RHB_DTMINF "
	cQuery += "        , RHB_TPMINF"
	cQuery += "     FROM " + RetSqlName('RHB') + "  "
	cQuery += "    WHERE RHB_FILIAL = '"+ xFilial('RHB') + "' "
	cQuery += "      AND RHB_TPMINF IN ('15', '16', '17', '18', '19', '20')"
	//gsa cQuery += "      AND  RHB_MAT = '" + AllTrim(FwFldGet('RHB_MAT')) + "' AND D_E_L_E_T_ = ' '"
	cQuery += "      AND  RHB_MAT = '" + 	AllTrim(oModel:GetValue('RHB_MAT'))  + "' AND D_E_L_E_T_ = ' '"	 //gsa
	cQuery += " GROUP BY RHB_TPMINF "

	dbUseArea( .T., "TOPCONN", TcGenQry(,, cQuery), cTmp, .F., .T.)

	
	//Limpia valores de SRA para infonavit
		Begin Transaction
			DbSelectArea("SRA")
			If DbSeek(SRA->RA_FILIAL+SRA->RA_MAT)		
				RecLock("SRA",.F.,.T.)
				SRA->RA_NUMINF := space(TAMSX3("RA_NUMINF")[1]) 
				SRA->RA_TIPINF := space(TAMSX3("RA_TIPINF")[1])
				SRA->RA_VALINF := 0  
				SRA->RA_DTCINF := CTOD("//")  //Fch, Inico de Credito Infonavit
				SRA->RA_DTISINF:= CTOD("//")  //Fch. Susp de Credito Infonavit
				SRA->RA_DTRDINF:= CTOD("//")  //Fch. Rein Desc. de Credito Infonavit
				SRA->RA_DTMDINF:= CTOD("//")  //Fch. Modif. Tipo Descuento de Credito 
				SRA->RA_DTMVINF:= CTOD("//")  //Fch. Modif. Vlr Decuento de Credito 
				SRA->RA_DTMNINF:= CTOD("//")  //Fch. Modif. de No. de Credito Infonavit
   				MsUnlock()
				FKCOMMIT()    
			EndIf
		End Transaction 
	
	If !(cTmp)->(EOF())
		Begin Transaction
			DbSelectArea("SRA")  
			SRA->(DbSetOrder(1))
//gsa			If DbSeek(SRA->RA_FILIAL+AllTrim(FwFldGet('RHB_MAT')))
				// If DbSeek(SRA->RA_FILIAL+	AllTrim(oModel:GetValue('RHB_MAT')))			 //gsa
			If DbSeek(cFilInf+cMatInf)
				RecLock("SRA",.F.,.T.)
				SRA->RA_NUMINF := oModel:GetValue('RHB_NUMINF', nUltLin)
				SRA->RA_TIPINF := oModel:GetValue('RHB_TIPINF', nUltLin)
				SRA->RA_VALINF := oModel:GetValue('RHB_VALINF', nUltLin)
				While !(cTmp)->(EOF())	
					If (cTmp)->RHB_TPMINF == '15' .AND. !Empty((cTmp)->RHB_DTMINF)
						SRA->RA_DTCINF := STOD((cTmp)->RHB_DTMINF)
					EndIf
					If (cTmp)->RHB_TPMINF == '16' .AND. !Empty((cTmp)->RHB_DTMINF)
						SRA->RA_DTISINF := STOD((cTmp)->RHB_DTMINF)
					EndIf
					If (cTmp)->RHB_TPMINF == '17' .AND. !Empty((cTmp)->RHB_DTMINF)
						SRA->RA_DTRDINF := STOD((cTmp)->RHB_DTMINF)
					EndIf
					If (cTmp)->RHB_TPMINF == '18' .AND. !Empty((cTmp)->RHB_DTMINF)
						SRA->RA_DTMDINF := STOD((cTmp)->RHB_DTMINF)
					EndIf
					If (cTmp)->RHB_TPMINF == '19' .AND. !Empty((cTmp)->RHB_DTMINF)
						SRA->RA_DTMVINF := STOD((cTmp)->RHB_DTMINF)
					EndIf
					If (cTmp)->RHB_TPMINF == '20' .AND. !Empty((cTmp)->RHB_DTMINF)
						SRA->RA_DTMNINF := STOD((cTmp)->RHB_DTMINF)
					EndIf
					(cTmp)->(DbSkip())
				EndDo
				MsUnlock()
				FKCOMMIT()
			EndIf
		End Transaction  	
	EndIf

	RestArea(aArea)
EndIf

RETURN .t.
/*/
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥FunáÖo    ≥ GPEA9101   ≥ Autor ≥Flor Monroy            ≥ Data ≥ 28/11/11 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥DescriáÖo ≥ Validar tipo de movimiento 19                                ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Sintaxe   ≥ GPEA9101(oMdl)                                               ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Parametros≥ oMdl = objeto del modelo                                     ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥ Uso      ≥ ModelDef()                                                   ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
/*/
Static Function GPEA9101(oModelGrid)                                                                                                                      

Local lRet  :=.T.
Local oModel:= oModelGrid:GetModel('RHBDETAIL')
Local nLinha:= 0

nLinha:= oModelGrid:nLine
IF oModelGrid:GetValue('RHB_TPMINF', nLinha) $ '19' //19=ModificaciÛn del valor de Descuento
	oModelGrid:loadValue('RHB_NUMINF', oModelGrid:GetValue('RHB_NUMINF',if (nLinha-1==0,1,nLinha-1)))
	oModelGrid:loadValue('RHB_TIPINF', oModelGrid:GetValue('RHB_TIPINF', if (nLinha-1==0,1,nLinha-1)))
EndIf

IF oModelGrid:GetValue('RHB_TPMINF', nLinha) $ '16/17' //16=Suspension 17=Reinicio
	oModelGrid:loadValue('RHB_NUMINF', oModelGrid:GetValue('RHB_NUMINF', if (nLinha-1==0,1,nLinha-1)))
	oModelGrid:loadValue('RHB_TIPINF', oModelGrid:GetValue('RHB_TIPINF', if (nLinha-1==0,1,nLinha-1)))
	oModelGrid:loadValue('RHB_VALINF', oModelGrid:GetValue('RHB_VALINF', if (nLinha-1==0,1,nLinha-1)))	
EndIf
IF oModelGrid:GetValue('RHB_TPMINF', nLinha) $ '18' //18=Tipo de descuento
	oModelGrid:loadValue('RHB_NUMINF', oModelGrid:GetValue('RHB_NUMINF', if (nLinha-1==0,1,nLinha-1)))
endif
Return lRet
