#INCLUDE "GPER610.CH"                   
#INCLUDE "PROTHEUS.CH"
#INCLUDE "topconn.ch"
#IFNDEF CRLF
	#DEFINE CRLF ( chr(13)+chr(10) )
#ENDIF

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GPER030  ³ Autor ³ R.H. - Ze Maria       ³ Data ³ 14.03.1995	   ³±±
±±³          ³ GPER610  ³ Autor ³ Ademar Fernandes      ³ Data ³ 16.06.2010    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Emissao de Recibos de Pagamento Grafico                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GPER610(void)                                             	   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                           	   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                               		   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ Nr.FNC    ³ Motivo da Alteracao                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Ademar Jr.  ³16/06/10³011304/2010|-Loc.ARG-Reescrito o recibo de forma grafi³±±
±±³            ³        ³           | ca conf. modelo apresentado pela ARG.    ³±±
±±³Andreia     ³24/06/10³011304/2010|-Loc.ARG-Feito ajuste na impressao das co-³±±
±±³            ³        ³           | lunas e quebra de pagina.                ³±±
±±³L.Trombini  ³12/11/10³025687/2010|-Loc.ARG-Ajuste para verificacao da coluna³±±
±±³            ³        ³           | a imprimir o Valor da Verba, verificando ³±±
±±³            ³        ³           | o Campo RV_COLIMP.                       ³±±
±±³Andreia     ³22/10/10³022082/2010|-Loc.ARG-Passa a imprimir o banco.        ³±±
±±³Andreia     ³26/11/10³022082/2010|-Ajuste na impressao de alguns quadros    ³±±
±±³Glaucia M.  ³11/05/12³010754/2012|Adequação de realtorio para atender calc. ³±±
±±³			   ³		³     TEWXWH|modelo 2 Argentina.					   ³±±
±±³			   ³		³			|Ajuste de localidade de pago e parametros ³±±
±±³			   ³		³			|Retirada de todos tratamentos por ID de   ³±±
±±³			   ³		³			|calculo. A coluna de bases (Nao remunerati³±±
±±³			   ³		³			|vos) não apresentará total. 			   ³±±
±±³Glaucia M.  ³24/05/12³010802/2012³Campo RV_COLIMP foi alterado por RV_CLASIF³±±
±±³			   ³		³     TEX837³conforme especificacao Hub Mexico.        ³±± 
±±³			   ³		³			|Ajustes para impressao de mensagens e     ³±±
±±³			   ³		³			|apresentacao da figura FIRMA.BMP          ³±±
±±³Glaucia M.  ³18/09/12³010802/2012³A coluna "no renumerativo" sera preechida,³±±
±±³			   ³		³     TFTAHE³se houver valores, independente do parame-³±± 
±±³			   ³		³           ³bsae.                                     ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function GPER610(lTerminal,cFilTerminal,cMatTerminal,cProcTerminal, nRecTipo, cPerTerminal, cSemanaTerminal)                 
Local aArea		:= GetArea()
Local bProc := {|oSelf| fGPR610(oSelf,lTerminal,cFilTerminal,cMatTerminal,cProcTerminal, nRecTipo, cPerTerminal, cSemanaTerminal) }    

oProcess := tNewProcess():New("GPER610",OemtoAnsi(STR0013),bProc,OemtoAnsi(STR0006),"GPER610",,,,,.T.,.T. ) 
RestArea(aArea)

Return          


Static Function fGPR610(oProcess,lTerminal,cFilTerminal,cMatTerminal,cProcTerminal, nRecTipo, cPerTerminal, cSemanaTerminal)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Locais (Basicas)                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cString		:="SRA"        // alias do arquivo principal (Base)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Locais (Programa)                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cIndCond
Local cHtml 		:= ""
Local cMes			:= ""
Local cAno			:= ""

Private cRotBlank 	:= Space(GetSx3Cache( "RCH_ROTEIR", "X3_TAMANHO" ))
Private cBaseAux
Private nOrdem		:= 1
Private DESC_MSG1	:= ""
Private DESC_MSG2	:= ""
Private DESC_MSG3	:= ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o numero da linha de impressão como 0                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetPrc(0,0)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Private(Basicas)                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aReturn  := {STR0009, 1,STR0010, 2, 2, 1, "",1 }	//"Zebrado"###"Administra‡„o"
Private nomeprog :="GPER610"
Private nLastKey := 0
Private cPerg    :="GPER610"
Private nAteLim , nBaseFgts , nFgts , nBaseIr , nBaseIrFe

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Private(Programa)                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aLanca 		:= {}
Private aProve 		:= {}
Private aDesco 		:= {}
Private aBases 		:= {}
Private aInfo  		:= {}
Private aCodFol		:= {}
Private li     		:= _PROW()
Private Titulo 		:= STR0011		//"EMISION DE RECIBOS DE PAGO     "
Private cIRefSem    := GetMv("MV_IREFSEM",,"S")
Private aPerAberto	:= {}
Private aPerFechado	:= {}
Private cProcesso	:= "" // Armazena o processo selecionado na Pergunte GPR040 (mv_par01).
Private cRoteiro	:= "" // Armazena o Roteiro selecionado na Pergunte GPR040 (mv_par02).
Private cPeriodo	:= "" // Armazena o Periodo selecionado na Pergunte GPR040 (mv_par03).    
Private cPrxSeq 	:= ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis da Impressao Grafica                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private oPrint   
Private oArial06	:= TFont():New("Courier New",06,06,,.F.,,,,.T.,.F.)//Normal
Private oArial07	:= TFont():New("Courier New",07,07,,.F.,,,,.T.,.F.)//Normal
Private oArial08	:= TFont():New("Courier New",08,08,,.F.,,,,.T.,.F.)//Normal
Private oArial08N	:= TFont():New("Courier New",08,08,,.T.,,,,.T.,.F.)//Negrito
Private oArial10	:= TFont():New("Courier New",10,10,,.F.,,,,.T.,.F.)//Normal
Private oArial10N	:= TFont():New("Courier New",10,10,,.T.,,,,.T.,.F.)//Negriot
Private aVerbas		:= {}


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega as Perguntas                                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte(cPerg,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o programa foi chamado do terminal - TCF         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lTerminal := Iif( lTerminal == Nil, .F., lTerminal )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando variaveis mv_par?? para Variaveis do Sistema.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cSemanaTerminal := IF( Empty( cSemanaTerminal ) , Space( Len( SRC->RC_SEMANA ) ) , cSemanaTerminal )
cProcesso  := IF( !( lTerminal ), mv_par01 , cProcTerminal		)   //Processo
cRoteiro   := IF( !( lTerminal ), mv_par02 , nRecTipo			)	//Roteiro
cPeriodo   := IF( !( lTerminal ), mv_par03 , cPerTerminal		)   //Periodo
Semana     := IF( !( lTerminal ), mv_par04 , cSemanaTerminal	)	//Numero da Semana

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verificar se o sistema esta trabalhando com ou sem roteiro   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea( "RCH" )
DbSetOrder( 4 )
DbSeek(  FWxFilial( "RCH" ) + cProcesso + cRoteiro + cPeriodo + Semana, .F. )
If Eof()
	DbSeek(  FWxFilial( "RCH" ) + cProcesso + cRotBlank + cPeriodo + Semana, .F. )
Else
	cRotBlank := cRoteiro
EndIf                                       

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Busca o ultimo Nr.Sequencial gravado no SRC                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If RCH->( !EOF() )
	cPrxSeq := RCH->RCH_NUMREC
EndIf
cPrxSeq := If(empty(cPrxSeq),"000001",SOMA1(cPrxSeq))

dDataPago := RCH->RCH_DTPAGO

//carregar somentes verbas com RV_TIPOCOD $ '1/2' e RV_CLASIF nao vazio
DbSelectArea("SRV")
DbSetOrder(1)  
dbSeek(xFilial("SRV"))
While !Eof("SRV") .And. SRV->RV_FILIAL == xFilial("SRV") 
	if SRV->RV_TIPOCOD $ ('1|2') 
		Aadd(aVerbas,{SRV->RV_COD,0}) 
	Endif
	dbSkip()	
EndDo
		
If (len(aVerbas) <= 0) 
	alert(OemtoAnsi(STR0054))				 							//"Não existem Verbas ou Processos para os parâmetros informados."
	Return .F.
EndIf


//Carregar os periodos abertos (aPerAberto) e/ou 
// os periodos fechados (aPerFechado), dependendo 
// do periodo (ou intervalo de periodos) selecionado
RetPerAbertFech(cProcesso	,; // Processo selecionado na Pergunte.
				cRotBlank	,; // Roteiro selecionado na Pergunte.
				cPeriodo	,; // Periodo selecionado na Pergunte.
				Semana		,; // Numero de Pagamento selecionado na Pergunte.
				NIL			,; // Periodo Ate - Passar "NIL", pois neste relatorio eh escolhido apenas um periodo.
				NIL			,; // Numero de Pagamento Ate - Passar "NIL", pois neste relatorio eh escolhido apenas um numero de pagamento.
				@aPerAberto	,; // Retorna array com os Periodos e NrPagtos Abertos
				@aPerFechado ) // Retorna array com os Periodos e NrPagtos Fechados
				

If (len(aPerAberto) <= 0) .AND. (len(aPerFechado) <= 0)
	alert(OemtoAnsi(STR0054))				 							//"Não existem Verbas ou Processos para os parâmetros informados."
	Return .F.
EndIf

cAno:=RCH->RCH_ANO
cMes:=RCH->RCH_MES 

dDataRef := CTOD("01/" + cMes + "/" + cAno)

cFilDe     := IF( !( lTerminal ), mv_par05,cFilTerminal		)	//Filial De
cFilAte    := IF( !( lTerminal ), mv_par06,cFilTerminal		)	//Filial Ate
cCcDe      := IF( !( lTerminal ), mv_par07,SRA->RA_CC		)	//Centro de Custo De
cCcAte     := IF( !( lTerminal ), mv_par08,SRA->RA_CC		)	//Centro de Custo Ate
cMatDe     := IF( !( lTerminal ), mv_par09,cMatTerminal		)	//Matricula Des
cMatAte    := IF( !( lTerminal ), mv_par10,cMatTerminal		)	//Matricula Ate
cNomDe     := IF( !( lTerminal ), mv_par11,SRA->RA_NOME		)	//Nome De
cNomAte    := IF( !( lTerminal ), mv_par12,SRA->RA_NOME		)	//Nome Ate
ChapaDe    := IF( !( lTerminal ), mv_par13,SRA->RA_CHAPA	)	//Chapa De
ChapaAte   := IF( !( lTerminal ), mv_par14,SRA->RA_CHAPA	)	//Chapa Ate
DESC_MSG1  := ALLTRIM(LEFT(mv_par15,35))					 						//Mensagem 1
DESC_MSG2  := ALLTRIM(LEFT(mv_par16,35))											//Mensagem 2
DESC_MSG3  := ALLTRIM(LEFT(mv_par17,35))											//Mensagem 3
cSituacao  := IF( !( lTerminal ),mv_par18, fSituacao( NIL , .F. ) )	//Situacoes a Imprimir
cCategoria := IF( !( lTerminal ),mv_par19, fCategoria( NIL , .F. ))	//Categorias a Imprimir
cBaseAux   := "S" //Imprimir Bases - Para Argentina a pergunta 20 não tem efeito, pois sempre imprimirá a coluna "NO RENUMERATIVOS"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Chama Pergunta especifica do recibo grafico                  ³                                             
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dDataJub  := MV_PAR21
cPerJub   := MV_PAR22
cBancoJub := MV_PAR23

If empty(cSituacao) .OR. empty(cCategoria) 
	alert(OemtoAnsi(STR0055))		//	Por favor preencher adequadamente os campos categoria e/ou situação")
	RETURN
Endif    

cMesAnoRef := StrZero(Month(dDataRef),2) + StrZero(Year(dDataRef),4)

Set Century On

DbSelectArea( "SRA" )

R610Imp(oProcess,cString,cMesAnoRef,.f.)  // Chamada do Relatorio

If !( lTerminal ) 
	oPrint:Preview()  
Endif               

IF !( lTerminal ) 
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Termino do relatorio                                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SRC")
	dbSetOrder(1)          // Retorno a ordem 1
	dbSelectArea("SRD")
	dbSetOrder(1)          // Retorno a ordem 1
	dbSelectArea("SRA")
	SET FILTER TO
	RetIndex("SRA")
	
	If !(Type("cArqNtx") == "U")
		fErase(cArqNtx + OrdBagExt())
	Endif
	
	Set Device To Screen
	
	SeTPgEject(.F.)
	
	If aReturn[5] = 1
		dbCommitAll()
		Set Printer To
	Endif
	
	MS_FLUSH()
EndIF

Set Century Off
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ R610IMP  ³ Autor ³ Equipe RH             ³ Data ³ 14.03.95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Processamento Para emissao do Recibo                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ R610Imp(lEnd,WnRel,cString,cMesAnoRef,lTerminal)			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function R610Imp(oProcess,cString,cMesAnoRef,lTerminal)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Locais (Basicas)                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aCodBenef   := {}
Local cAcessaSR1  := &("{ || " + ChkRH("GPER610","SR1","2") + "}")
Local cAcessaSRA  := &("{ || " + ChkRH("GPER610","SRA","2") + "}")
Local cAcessaSRC  := &("{ || " + ChkRH("GPER610","SRC","2") + "}")
Local cAcessaSRD  := &("{ || " + ChkRH("GPER610","SRD","2") + "}")
Local cNroHoras   := &("{ || If(aVerbasFunc[nReg,5] > 0 .And. cIRefSem == 'S', aVerbasFunc[nReg,5], aVerbasFunc[nReg,6]) }")
Local cHtml		  := ""
Local nHoras      := 0
Local nMes, nAno
Local nX
Local nReg		  := 0
Local cPerAnt	  := ""                    
Local cKey		  := ""
Local cInicio	  := ""
Local aAreaRCH    := RCH->( GetArea() )

Local dDataLibRh
Local cPerCorrente	:= ""
Local cSemCorrente	:= ""
Local cMesCorrente 	:= ""
Local cAnoCorrente 	:= ""

Local nTcfDadt		:= if(lTerminal,getmv("MV_TCFDADT",,0),0)		// indica o dia a partir do qual esta liberada a consulta ao TCF 
Local nTcfDfol		:= if(lTerminal,getmv("MV_TCFDFOL",,0),0)		// indica a quantidade de dias a somar ou diminuir no ultimo dia do mes corrente para liberar a consulta do TCF
Local nTcfD131		:= if(lTerminal,getmv("MV_TCFD131",,0),0)		// indica o dia a partir do qual esta liberada a consulta ao TCF
Local nTcfD132		:= if(lTerminal,getmv("MV_TCFD132",,0),0)		// indica o dia a partir do qual esta liberada a consulta ao TCF
Local nTcfDext		:= if(lTerminal,getmv("MV_TCFDEXT",,0),0)		// indica o dia a partir do qual esta liberada a consulta ao TCF

Local lImprimiu		:= .F.
Local lProximo		:= .F.

Private tamanho     := "M"
Private limite		:= 132
Private cDtPago     := ""
Private cPict1		:=	"@E 9,999,999,999.99"
Private cPict2 		:= X3PICTURE("RD_VALOR")		
Private cPict3 		:= X3PICTURE("RA_SALARIO")

Private cTipoRot 	:= PosAlias("SRY", cRoteiro, FwxFilial("SRY"), "RY_TIPO")
Private aVerbasFunc := {}
Private cRotBlank
Private nHraExtra 	:= 0
Private nPagoDom	:= 0


If MsDecimais(1) == 0
	cPict1	:=	"@E 99,999,999,999"
	cPict2 	:=	"@E 9,999,999,999"
	cPict3 	:=	"@E 99,999,999"
Endif

// Ajuste do tipo da variavel
nTcfDadt	:= if(valtype(ntcfdadt)=="C",val(ntcfdadt),ntcfdadt)
nTcfD131	:= if(valtype(nTcfD131)=="C",val(nTcfD131),nTcfD131)
nTcfD132	:= if(valtype(nTcfD132)=="C",val(nTcfD132),nTcfD132)
nTcfDfol	:= if(valtype(ntcfdfol)=="C",val(ntcfdfol),ntcfdfol)
nTcfDext	:= if(valtype(ntcfdext)=="C",val(ntcfdext),ntcfdext)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Verifica se o Mes solicitado esta liberado para consulta no  |
//| terminal de consulta do funcionario.                         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lTerminal

	dbSelectArea("RCH")
	dbSetOrder(6)                          
	cKey := "FwxFilial('RCH') + cProcesso + cRoteiro" 
	cInicio := "RCH_FILIAL + RCH_PROCES + RCH_ROTEIR" 		

	
	DbSeek( &(cKey))
	
	If !Eof()
		While RCH->( !Eof() .and. &(cInicio) == &(cKey))
			If Empty(RCH->RCH_DTFECH)
				cPerCorrente := RCH->RCH_PER
				cSemCorrente := RCH->RCH_NUMPAG
				cMesCorrente := RCH->RCH_MES
				cAnoCorrente := RCH->RCH_ANO
				Exit
			EndIf		
			RCH->( dbSkip() )
		EndDo
	EndIf

	If	(cPerCorrente == cPeriodo .AND. cSemCorrente == Semana)  .OR. ;
		( MesAno(dDataRef) >= (cAnoCorrente + cMesCorrente) )

		If  cTipoRot == "2" //Adiantamento
			If ( MesAno(dDataRef) > (cAnoCorrente + cMesCorrente) ) .Or.;
			   ( If(MesAno(Date()) == (cAnoCorrente + cMesCorrente), Day(Date()) < nTCFDADT,.F.) )
				Return( IF( lTerminal <> NIL .And. lTerminal , cHtml , NIL ) )
			EndIf
		ElseIf cTipoRot == "1" .and. !empty(nTCFDFOL) //Folha
			dDataLibRh := fMontaDtTcf(cMesCorrente + cAnoCorrente,nTCFDFOL)
			If Date() < dDataLibRH 
				Return( IF( lTerminal <> NIL .And. lTerminal , cHtml , NIL ) )
			Endif
		ElseIf cTipoRot == "5" //1a parcela  Salario
			If ( MesAno(dDataRef) > (cAnoCorrente + cMesCorrente) ) .Or.;
  			   ( If(MesAno(Date()) == (cAnoCorrente + cMesCorrente), Day(Date()) < nTCFD131,.F.) )
				Return( IF( lTerminal <> NIL .And. lTerminal , cHtml , NIL ) )
			Endif
		ElseIf cTipoRot == "6" //2a parcela Salario
			If ( MesAno(dDataRef) > (cAnoCorrente + cMesCorrente) ) .Or.;
			   ( If(MesAno(Date()) == (cAnoCorrente + cMesCorrente), Day(Date()) < nTCFD132,.F.) )
				Return( IF( lTerminal <> NIL .And. lTerminal , cHtml , NIL ) )
			Endif
		EndIf
	Endif
Endif


nMes := Month(dDataRef) - 1
nAno := Year(dDataRef)

If nMes == 0
	nMes := 12
	nAno := nAno - 1
Endif

If nMes < 0
	nMes := 12 - ( nMes * -1 )
	nAno := nAno - 1
Endif
	
dbSelectArea( "RCH")
dbSetOrder(6)
dbSeek(FwxFilial("RCH") + cProcesso + cRoteiro + Transform(nAno,"9999") + Transform(nMes,"99"))

If Eof()
	dbSeek(FwxFilial("RCH") + cProcesso + Space(GetSx3Cache( "RCH_ROTEIR", "X3_TAMANHO" )) +Transform(nAno,"9999") + Transform(nMes,"99"))
EndIF

If !Eof()
	cPerAnt := RCH->RCH_PER + RCH->RCH_NUMPAG
EndIf
	


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Selecionando a Ordem de impressao escolhida no parametro.    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SRA")
IF !( lTerminal )
	If nOrdem == 1
		dbSetOrder(1)
	ElseIf nOrdem == 2
		dbSetOrder(2)
	ElseIf nOrdem == 3
		dbSetOrder(3)
	Elseif nOrdem == 4
		cArqNtx  := CriaTrab(NIL,.f.)
		cIndCond :="RA_Filial + RA_Chapa + RA_Mat"
		IndRegua("SRA",cArqNtx,cIndCond,,,STR0012)		//"Selecionando Registros..."
	ElseIf nOrdem == 5
		dbSetOrder(8)
	Endif
	
	dbGoTop()
	
	@ LI,00 PSAY AvalImp(Limite)
EndIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Selecionando o Primeiro Registro e montando Filtro.          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If nOrdem == 1 .or. lTerminal
	cInicio := "SRA->RA_FILIAL + SRA->RA_MAT"
	IF !( lTerminal )
		dbSeek(cFilDe + cMatDe,.T.)
		cFim    := cFilAte + cMatAte
	Else
		cFim    := &(cInicio)
	EndIF
ElseIf nOrdem == 2
	dbSeek(cFilDe + cCcDe + cMatDe,.T.)
	cInicio  := "SRA->RA_FILIAL + SRA->RA_CC + SRA->RA_MAT"
	cFim     := cFilAte + cCcAte + cMatAte
ElseIf nOrdem == 3
	dbSeek(cFilDe + cNomDe + cMatDe,.T.)
	cInicio := "SRA->RA_FILIAL + SRA->RA_NOME + SRA->RA_MAT"
	cFim    := cFilAte + cNomAte + cMatAte
ElseIf nOrdem == 4
	dbSeek(cFilDe + ChapaDe + cMatDe,.T.)
	cInicio := "SRA->RA_FILIAL + SRA->RA_CHAPA + SRA->RA_MAT"
	cFim    := cFilAte + ChapaAte + cMatAte
ElseIf nOrdem == 5
	dbSeek(cFilDe + cCcDe + cNomDe,.T.)
	cInicio  := "SRA->RA_FILIAL + SRA->RA_CC + SRA->RA_NOME"
	cFim     := cFilAte + cCcAte + cNomAte
Endif

//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega Regua Processamento                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SRA")
oProcess:SetRegua1(RecCount())

TOTNVENC := TOTVENC := TOTDESC := FLAG := CHAVE := 0

Desc_Fil := Desc_End := DESC_CC:= DESC_FUNC:= ""
Desc_Comp:= Desc_Cid:= ""

cFilialAnt := "  "
Vez        := 0

If !( lTerminal ) 
	oPrint:= TMSPrinter():New(Titulo)//Emissao de Recibos de Pagamentos
	oPrint:SetLandScape()            //Define que a impressao deve ser PAISAGEM
Endif


aModalid := fCarregaMod()

While SRA->( !Eof() .And. &cInicio <= cFim )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Busca Obra Social                                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ     
    cObra := RetcObra("S002","=")
	
	IF !( lTerminal )
		

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Consiste Parametrizacao do Intervalo de Impressao            ³                                       
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lProximo:=.F.
		If 		((SRA->RA_CHAPA < ChapaDe) .Or. (SRA->Ra_CHAPa > ChapaAte))
				lProximo:= .T. 
		ElseIf  ((SRA->RA_NOME < cNomDe)    .Or. (SRA->Ra_NOME > cNomAte))  
				lProximo:= .T.
		ElseIf  ((SRA->RA_MAT < cMatDe)     .Or. (SRA->Ra_MAT > cMatAte)) 
				lProximo:= .T.		
		ElseIf  ((SRA->RA_CC < cCcDe)       .Or. (SRA->Ra_CC > cCcAte))
				lProximo:= .T.
		EndIf
			
		If (lProximo)
			SRA->(dbSkip(1))
			loop

		EndIf
		
	EndIF
	oProcess:IncRegua1(SRA->RA_MAT) 
	aLanca:={}         // Zera Lancamentos
	aProve:={}         // Zera Lancamentos
	aDesco:={}         // Zera Lancamentos
	aBases:={}         // Zera Lancamentos
	
	nAteLim := nBaseFgts := nFgts := nBaseIr := nBaseIrFe := 0.00
	
	Ordem_rel := 1     // Ordem dos Recibos
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica Data Demissao         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cSitFunc := SRA->RA_SITFOLH
	dDtPesqAf:= CTOD("01/" + Left(cMesAnoRef,2) + "/" + Right(cMesAnoRef,4),"DDMMYY")
	If cSitFunc == "D" .And. (!Empty(SRA->RA_DEMISSA) .And. MesAno(SRA->RA_DEMISSA) > MesAno(dDtPesqAf))
		cSitFunc := " "
	Endif
	
	IF !( lTerminal )
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Consiste situacao e categoria dos funcionarios			     |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !( cSitFunc $ cSituacao ) .OR.  ! ( SRA->RA_CATFUNC $ cCategoria )
			dbSkip()
			Loop
		Endif
		If cSitFunc $ "D" .And. Mesano(SRA->RA_DEMISSA) # Mesano(dDataRef)
			dbSkip()
			Loop
		Endif
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Consiste controle de acessos e filiais validas				 |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !(SRA->RA_FILIAL $ fValidFil()) .Or. !Eval(cAcessaSRA)
			dbSkip()
			Loop
		EndIf
		
	EndIF
	
	If SRA->RA_Filial # cFilialAnt
		If  ! fInfo(@aInfo,Sra->Ra_Filial)
			Exit
		Endif 
		
		Desc_Comp	:= IF (!EMPTY(LEFT(UPPER(ALLTRIM(aInfo[14])),10)),;
					 " ," + LEFT(UPPER(ALLTRIM(aInfo[14])),10,),	"")    			// Complemento Cobranca
		Desc_Fil	:= LEFT(UPPER(ALLTRIM(aInfo[3])),50)
		Desc_End	:= LEFT(UPPER(ALLTRIM(aInfo[4])),40) + Desc_Comp     // Dados da Filial
		Desc_CGC	:= LEFT(UPPER(ALLTRIM(aInfo[8])),15)
		Desc_Cid := LEFT(UPPER(ALLTRIM(aInfo[05])),25)
	Endif
	
	TOTNVENC := Totvenc := Totdesc := 0
	            
	//Retorna as verbas do funcionario, de acordo com os periodos selecionados
	aVerbasFunc	:= RetornaVerbasFunc(SRA->RA_FILIAL		  				,; // Filial do funcionario corrente
										SRA->RA_MAT	  					,; // Matricula do funcionario corrente
										NIL								,; // 
										cRoteiro	  					,; // Roteiro selecionado na pergunte
										aVerbas		  					,; // Array com as verbas que deverão ser listadas. Se NIL retorna todas as verbas.
										aPerAberto	  					,; // Array com os Periodos e Numero de pagamento abertos
										aPerFechado	 	 				 ) // Array com os Periodos e Numero de pagamento fechados
	DbSelectArea("SRA")
	
	If len(aVerbasFunc) > 0

		For nReg := 1 to Len(aVerbasFunc)
			If (Len(aPerAberto) > 0 .AND. !Eval(cAcessaSRC)) .OR. (Len(aPerFechado) > 0 .AND. !Eval(cAcessaSRD)) //.Or.;
				dbSkip()
				Loop
			EndIf 
			
			If PosSrv( aVerbasFunc[nReg,3] , SRA->RA_FILIAL , "RV_TIPOCOD" ) == "1" .AND. ;
				!EMPTY(PosSrv( aVerbasFunc[nReg,3] , SRA->RA_FILIAL , "RV_CLASIF" )) .AND. ; 
				PosSrv( aVerbasFunc[nReg,3] , SRA->RA_FILIAL , "RV_CLASIF" ) != "N" 
	
				nHoras := Eval(cNroHoras)
				fSomaPdRec("P",aVerbasFunc[nReg,3],nHoras,aVerbasFunc[nReg,7])
				TOTVENC += aVerbasFunc[nReg,7]
				
			Elseif PosSrv( aVerbasFunc[nReg,3] , SRA->RA_FILIAL , "RV_TIPOCOD" ) == "2"
				fSomaPdRec("D",aVerbasFunc[nReg,3],Eval(cNroHoras),aVerbasFunc[nReg,7])
				TOTDESC += aVerbasFunc[nReg,7]
			
			Elseif cBaseAux == "S" .AND. ;
				PosSrv( aVerbasFunc[nReg,3] , SRA->RA_FILIAL , "RV_TIPOCOD" ) == "1" .AND. ;
				!EMPTY(PosSrv( aVerbasFunc[nReg,3] , SRA->RA_FILIAL , "RV_CLASIF" )) .AND. ; 
				PosSrv( aVerbasFunc[nReg,3] , SRA->RA_FILIAL , "RV_CLASIF" ) == "N" 

				 fSomaPdRec("B",aVerbasFunc[nReg,3],Eval(cNroHoras),aVerbasFunc[nReg,7])
				 TOTNVENC += aVerbasFunc[nReg,7]
			Endif
			
		Next nReg
	EndIf		     

	dbSelectArea("SRD")
	If dbSeek(SRA->RA_FILIAL + SRA->RA_MAT + cProcesso + cRoteiro + cPerAnt)
		cDtPago := dtoc(SRD->RD_DATPGT)
	Endif
	
	dbSelectArea("SRA")
	
	If TOTVENC = 0 .And. TOTDESC = 0 .And. TOTNVENC = 0
		dbSkip()
		Loop
	Endif
	             
	If !( lTerminal )
		fImpreGraf()
		
		ASize(AProve,0)
		ASize(ADesco,0)
		ASize(aBases,0)
		lImprimiu := .T.
	Endif
	
	dbSelectArea("SRA")
	SRA->( dbSkip() )
	TOTNVENC := TOTDESC := TOTVENC := 0
	
EndDo
                                                                     
If lImprimiu
	cRotBlank := Space(GetSx3Cache( "RCH_ROTEIR", "X3_TAMANHO" ))
	
	DbSelectArea( "RCH" )
	DbSetOrder( 4 )
	If RCH->(! dbSeek( FwxFilial("RCH") +cProcesso+ cRoteiro + cPeriodo + Semana) )
		DbSeek(  FwxFilial( "RCH" ) + cProcesso + cRotBlank + cPeriodo + Semana, .F. )
	EndIf

    If !EOF()
		RecLock("RCH",.F.)
		RCH->RCH_NUMREC := cPrxSeq
		MsUnLock("RCH")
	EndIf
EndIf

RestArea( aAreaRCH)

Return( cHtml )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fImpreGraf³ Autor ³ Equipe RH             ³ Data ³ 05.05.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ IMRESSAO DO RECIBO FORMULARIO GRAFICO                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fImpreGraf()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fImpreGraf()

Local nConta := nContr := nContrT := 0

fCabecG()

fLancaG(nConta)

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fCabecG   ³ Autor ³ Equipe RH             ³ Data ³ 04.05.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ IMRESSAO Cabe‡alho Grafico                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fCabecG()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fCabecG()   // Cabecalho do Recibo Zebrado 
Local cCodFunc		:= ""		//-- codigo da Funcao do funcionario
Local cDescFunc		:= ""		//-- Descricao da Funcao do Funcionario
Local cCodCargo		:= ""   	//-- codigo do cargo do funcionario
Local cDescCargo	:= ""		//-- descricao do cargo do funcionario
Local nIniHor1		:= 0020     // primeira coluna de impressao recibo 01
Local nfimrec1		:= 1555
Local nIniHor2		:= 1608     // primeira coluna de impressao recibo 02
Local nfimrec2		:= 3143
Local cStartPath	:= GetSrvProfString("Startpath","")    

oPrint:StartPage() 		

//CAIXA PRINCIPAL RECIBO 1
oPrint:Box(060,nIniHor1,2360,nfimrec1)        
oPrint:SayBitmap(110,070,cStartPath+"lgrl"+cEmpAnt+".bmp",280,150) // 
oPrint:Say(0080,0650,STR0013,oArial10N) //"RECIBO DE PAGO    
oPrint:Say(0130,0360,DESC_Fil,oArial10N)	
oPrint:Say(0180,0360,DESC_CGC,oArial10N)
oPrint:Say(0225,0360,DESC_END,oArial10N)

oPrint:Line(0270,nIniHor1,0270,nfimrec1) // Horizontal
oPrint:Line(0270,0310,0390,0310) // Vertical
oPrint:Line(0270,1105,0400,1105) // Vertical ( cuil ate ingreso) 
oPrint:Say(0280,0080,STR0014,oArial08 )		//# "LEGAJO"
oPrint:Say(0280,0610,STR0015,oArial08 )		//# "APELLIDO Y NOMBRE"
oPrint:Say(0280,01300,"CUIL",oArial08 ) 
oPrint:Line(0310,nIniHor1,0310,nfimrec1) // Horizontal                

oPrint:Line(0390,nIniHor1,0390,nfimrec1) // Horizontal
oPrint:Line(0390,0820,0510,0820) // Vertical/sueldo
oPrint:Line(0390,1105,0510,1105) // Vertical/ingresso
oPrint:Line(0390,1360,0510,1360) // Vertical/fehca rec

oPrint:Say(0400,0310,STR0016,oArial08 )		//# "PUESTO"
oPrint:Say(0400,0890,STR0017,oArial08 )		//# "SUELDO"
oPrint:Say(0400,1150,STR0018,oArial08 )		//# "INGRESO"
oPrint:Say(0400,1380,STR0019,oArial08 )		//# "FECHA REC."
oPrint:Line(0430,nIniHor1,0430,nfimrec1) // Horizontal               

oPrint:Line(0510,nIniHor1,0510,nfimrec1)                
oPrint:Line(0510,0420,0630,0420) // Vertical
oPrint:Line(0510,0700,0630,0700) // Vertical
oPrint:Line(0510,1105,0630,1105) // Vertical
oPrint:Line(0510,1360,0630,1360) // Vertical

oPrint:Say(0520,0160,STR0020,oArial08 )		//# "SECCION"
oPrint:Say(0520,0440,STR0021,oArial08 )		//# "PERIODO DE PAGO"
oPrint:Say(0520,0840,STR0022,oArial08 )		//# "FUNCION"
oPrint:Say(0520,1125, STR0053,oArial08 )		//"COMPROVANTE SICORE"
oPrint:Say(0520,1370,STR0023,oArial08 )		//# "NRO.RECIBO"

oPrint:Line(0550,nIniHor1,0550,nfimrec1)                

//CAIXA PRINCIPAL RECIBO 2
oPrint:Box(060,nIniHor2,2360,nfimrec2 )                
oPrint:SayBitmap(110,nIniHor2+50,cStartPath+"lgrl"+cEmpAnt+".bmp",280,150) // Tem que estar abaixo do RootPath
oPrint:Say(0080,nIniHor2+630,STR0013,oArial10N) //"RECIBO DE PAGAMENTO    
oPrint:Say(0130,nIniHor2+340,DESC_Fil,oArial10N)	
oPrint:Say(0180,nIniHor2+340,DESC_CGC,oArial10N)
oPrint:Say(0225,nIniHor2+340,DESC_END,oArial10N)

oPrint:Line(0270,nIniHor2,0270,nfimrec2) // Horizontal
oPrint:Line(0270,nIniHor2+290,0390,nIniHor2+290) // Vertical
oPrint:Line(0270,nIniHor2+1065,0390,nIniHor2+1065) // Vertical
oPrint:Say(0280,nIniHor2+060,STR0014,oArial08 )		//# "LEGAJO"
oPrint:Say(0280,nIniHor2+590,STR0015,oArial08 )			//# "APELLIDO Y NOMBRE"
oPrint:Say(0280,nIniHor2+1280,"CUIL",oArial08 ) 
oPrint:Line(0310,nIniHor2,0310,nfimrec2) // Horizontal                

oPrint:Line(0390,nIniHor2,0390,nfimrec2) // Horizontal
oPrint:Line(0390,nIniHor2+800,0510,nIniHor2+800) // Vertical
oPrint:Line(0390,nIniHor2+1065,0510,nIniHor2+1065) // Vertical
oPrint:Line(0390,nIniHor2+1320,0510,nIniHor2+1320) // Vertical

oPrint:Say(0400,2000,STR0016,oArial08 )			//# "PUESTO"
oPrint:Say(0400,nIniHor2+870,STR0017,oArial08 )	//# "SUELDO"
oPrint:Say(0400,nIniHor2+1130,STR0018,oArial08 )//# "INGRESO"
oPrint:Say(0400,nIniHor2+1360,STR0019,oArial08 ) //# "FECHA REC."
oPrint:Line(0430,nIniHor2,0430,nfimrec2) // Horizontal               

oPrint:Line(0510,nIniHor2,0510,nfimrec2)                
oPrint:Line(0510,nIniHor2+400,0630,nIniHor2+400) // Vertical
oPrint:Line(0510,nIniHor2+680,0630,nIniHor2+680) // Vertical
oPrint:Line(0510,nIniHor2+1065,0630,nIniHor2+1065) // Vertical
oPrint:Line(0510,nIniHor2+1320,0630,nIniHor2+1320) // Vertical

oPrint:Say(0520,nIniHor2+140,STR0020,oArial08 )		//# "SECCION"
oPrint:Say(0520,nIniHor2+410,STR0021,oArial08 )		//# "PERIODO DE PAGO"
oPrint:Say(0520,nIniHor2+800,STR0022,oArial08 )	    //# "FUNCION"
oPrint:Say(0520,nIniHor2+1075, STR0053,oArial08 )		//"COMPROVANTE SICORE"
oPrint:Say(0520,nIniHor2+1340,STR0023,oArial08 )		//# "NRO.RECIBO"

oPrint:Line(0550,nIniHor2,0550,nfimrec2)                


/*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
  ³ Carrega Funcao do Funcion. de acordo com a Dt Referencia     ³
  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
fBuscCargo(dDataRef, @cCodCargo, @cDescCargo )

fBuscaFunc(dDataRef, @cCodFunc, @cDescFunc   )

nValSal := 0
nValSal := fBuscaSal(dDataRef)
If nValSal ==0
	nValSal := SRA->RA_SALARIO
EndIf

cPeriod := substr(cPeriodo,5,2)+"/"+substr(cPeriodo,1,4)+Iif(!Empty(Semana), " - "+Semana, " ") //" - Sem. "

// DESCRIÇÃO RECIBO 1
oPrint:Say(0340,0080,SRA->RA_MAT,oArial10N)
oPrint:Say(0340,0340,IIF(!EMPTY(SRA->RA_NOMECMP),SRA->RA_NOMECMP,SRA->RA_NOME),oArial10N)
oPrint:Say(0340,1210,SRA->RA_CIC,oArial10N)  

oPrint:Say(0460,0080,cCodCargo+" - "+cDescCargo,oArial08N)	//Puesto         
oPrint:Say(0460,0850,TRansform(nValSal,cPict3),oArial08N)	//sueldo				     //900
oPrint:Say(0460,1120,DTOC(SRA->RA_ADMISSA),oArial08N)	    //ingresso
oPrint:Say(0460,1370,DTOC(SRA->RA_DTREC),oArial08N)	
oPrint:Say(0570,0040,LEFT(UPPER(DescCc(SRA->RA_CC,SRA->RA_FILIAL)),22),oArial08N)	//Seccion
oPrint:Say(0570,0450,cPeriod,oArial08N)     				//Periodo
oPrint:Say(0570,0730,cDescFunc,oArial08N)               		//funcion   
oPrint:Say(0570,1145,SRA->RA_MAT,oArial08N)               	//comprovante   
oPrint:Say(0570,1410,cPrxSeq,oArial08N)						//NR. recibo

// DESCRIÇÃO RECIBO 2
oPrint:Say(0340,nIniHor2+060,SRA->RA_MAT,oArial10N)
oPrint:Say(0340,nIniHor2+320,IIF(!EMPTY(SRA->RA_NOMECMP),SRA->RA_NOMECMP,SRA->RA_NOME),oArial10N)
oPrint:Say(0340,nIniHor2+1190,SRA->RA_CIC,oArial10N)  

oPrint:Say(0460,nIniHor2+060,cCodCargo+" - "+cDescCargo,oArial08N)	//Puesto      
oPrint:Say(0460,nIniHor2+810,TRansform(nValSal,cPict3),oArial08N)	//sueldo				     
oPrint:Say(0460,nIniHor2+1100,DTOC(SRA->RA_ADMISSA),oArial08N)	
oPrint:Say(0460,nIniHor2+1350,DTOC(SRA->RA_DTREC),oArial08N)	
oPrint:Say(0570,nIniHor2+021,LEFT(UPPER(DescCc(SRA->RA_CC,SRA->RA_FILIAL)),22),oArial08N)	//SECCION
oPrint:Say(0570,nIniHor2+430,cPeriod,oArial08N)          			//Periodo
oPrint:Say(0570,nIniHor2+690,cDescFunc,oArial08N)          			//funcion
oPrint:Say(0570,nIniHor2+1125,SRA->RA_MAT,oArial08N)      			//comprovante   
oPrint:Say(0570,nIniHor2+1390,cPrxSeq,oArial08N)					//NR. recibo
				     
Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fLancaG() ³ Autor ³ Equipe RH             ³ Data ³ 04.05.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ IMRESSAO Detalhe do Grafico                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ flancaG()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fLancaG()   
Local nCont     	:= 0
Local nValidos  	:= 0
Local nIniHor1		:= 0020
Local nIniHor2		:= 1608
Local nPosClasif    := ""
Local cStartPath	:= GetSrvProfString("Startpath","")    
Local cExtenso2		:= "" 
Local nRodape		:= 700
Local k				:= 0 

//Box do Detalhe do Recibo de vencimento 1
oPrint:Line(0630,nIniHor1,0630,1555)          
oPrint:Line(0680,nIniHor1,0680,1555)          
oPrint:Line(0630,0160,1660,0160) // VERTICAL         
oPrint:Line(0630,0700,1660,0700) // VERTICAL         
oPrint:Line(0630,0850,1760,0850) // VERTICAL         
oPrint:Line(0630,1105,1760,1105) // VERTICAL         
oPrint:Line(0630,1360,1760,1360) // VERTICAL         

oPrint:Say(0645,0058,STR0025,oArial07)  //"CODIGO"
oPrint:Say(0645,0405,STR0026,oArial07)   //"CONCEPTO"
oPrint:Say(0645,0705,STR0027,oArial07)  //"UNIDADES"
oPrint:Say(0645,0860,STR0028,oArial07)  //"REMUNERATIVO"
oPrint:Say(0645,1115,STR0029,oArial07)  //"NO REMUNERATIVO"
oPrint:Say(0645,1370,STR0030,oArial07)  //"DEDUCCIONES"

//Box do Detalhe do Recibo de vencimento 2
oPrint:Line(0630,nIniHor2,0630,3143)          
oPrint:Line(0680,nIniHor2,0680,3143)          
oPrint:Line(0630,1738,1660,1738) // VERTICAL         
oPrint:Line(0630,2288,1660,2288) // VERTICAL         
oPrint:Line(0630,2418,1760,2418) // VERTICAL         
oPrint:Line(0630,2673,1760,2673) // VERTICAL         
oPrint:Line(0630,2928,1760,2928) // VERTICAL         

oPrint:Say(0645,1646,STR0025,oArial07)  //"CODIGO"
oPrint:Say(0645,1993,STR0026,oArial07) //"CONCEPTO"
oPrint:Say(0645,2293,STR0027,oArial07) //"UNIDADES"
oPrint:Say(0645,2448,STR0028,oArial07) //"REMUNERATIVO"
oPrint:Say(0645,2690,STR0029,oArial07) //"NO REMUNERATIVO"
oPrint:Say(0645,2958,STR0030,oArial07) //"DEDUCCIONES"

nLinDet :=710
nTermina:= Len(aLanca)
nTotRem := 0
nTotNRem:= 0
nTotDesc:= 0
                                                                       


For nCont := 1 To nTermina
	
	oPrint:Say(nLinDet,0070,aLanca[nCont,2],oArial08)
	oPrint:Say(nLinDet,0175,aLanca[nCont,3],oArial08)
	oPrint:Say(nLinDet,0720,TRANSFORM(aLanca[nCont,4],'999.99'),oArial08)
	
	oPrint:Say(nLinDet,1658,aLanca[nCont,2],oArial08)
	oPrint:Say(nLinDet,1763,aLanca[nCont,3],oArial08)
	oPrint:Say(nLinDet,2308,TRANSFORM(aLanca[nCont,4],'999.99'),oArial08)
	
	nValor := aLanca[nCont,5]
    
   // Ajuste para utilizar campo de coluna de impressao. 

    nPosClasif	:= PosSrv(aLanca[ncont,2],SRA->RA_FILIAL, "RV_CLASIF")
                                            
    If !empty(nPosClasif) .and. nPosClasif != 'N' .and. SRV->RV_TIPOCOD == '1'
    	nPosImp	:= '1'
    ElseIf nPosClasif == 'N' .and. SRV->RV_TIPOCOD == '1'
    	nPosImp	:= '2'
    ElseIf SRV->RV_TIPOCOD == '2'
       	nPosImp	:= '3'
    EndIf

	If nPosImp == "1" 
		nColVal1 := 0860
		nColVal2 := 2430
		nTotRem += nValor
   	ElseIf nPosImp == "2"
 		nColVal1 := 1110
		nColVal2 := 2673 
		nTotNRem += nValor
   	ElseIf nPosImp == "3"
		nColVal1 := 1300
		nColVal2 := 2888
		nTotDesc += nValor
   	Endif

	oPrint:Say(nLinDet,nColVal1,TRANSFORM(nValor,cPict3),oArial08)
	oPrint:Say(nLinDet,nColVal2,TRANSFORM(nValor,cPict3),oArial08)

	//====================================================
	//---- Soma 1 nos nValidos e Linha
	//====================================================
	nValidos ++
	nLinDet+=40   
	
	If nLinDet>=1633 .And. nTermina > nCont
		nLinDet+=40
	    
	    // recibo 1
		oPrint:Line(1660,0020,1660,1555) //HORIZONTAL
		oPrint:Line(1760,0020,1760,1555) //HORIZONTAL
		oPrint:Line(1860,0020,1860,1555) //HORIZONTAL
		oPrint:Line(1960,0020,1960,1555) //HORIZONTAL

		oPrint:Line(1960,0860,2360,0860) // VERTICAL

		oPrint:Line(2060,0020,2060,1555) //HORIZONTAL

		oPrint:Say(2070,0040,STR0031,oArial08 ) //"OBSERVACIONES:"
		oPrint:Say(2100,0040,STR0032,oArial08 )	//"CONTINUA ... "	  		
 
		//recibo 2       
		oPrint:Line(1660,nIniHor2,1660,3143) //HORIZONTAL
		oPrint:Line(1760,nIniHor2,1760,3143) //HORIZONTAL
		oPrint:Line(1860,nIniHor2,1860,3143) //HORIZONTAL
		oPrint:Line(1960,nIniHor2,1960,3143) //HORIZONTAL
		oPrint:Line(1960,2600,2360,2600) // VERTICAL  
		oPrint:Line(2060,nIniHor2,2060,3143) //HORIZONTAL
		oPrint:Say(2070,nIniHor2+20,STR0031,oArial08 )  //"OBSERVACIONES:"
		oPrint:Say(2100,nIniHor2+20,STR0032,oArial08 )	 //"CONTINUA ... "	  		
 
		oPrint:EndPage() 		
		fCabecG()

		//Box do Detalhe do Recibo de vencimento 1
		oPrint:Line(0630,nIniHor1,0630,1555)          
		oPrint:Line(0680,nIniHor1,0680,1555)          
		oPrint:Line(0630,0160,1660,0160) // VERTICAL         
		oPrint:Line(0630,0700,1660,0700) // VERTICAL         
		oPrint:Line(0630,0850,1760,0850) // VERTICAL         
		oPrint:Line(0630,1105,1760,1105) // VERTICAL         
		oPrint:Line(0630,1360,1760,1360) // VERTICAL         

		oPrint:Say(0645,0058,STR0025,oArial07)  //"CODIGO"
		oPrint:Say(0645,0405,STR0026,oArial07)	//"CONCEPTO"
		oPrint:Say(0645,0705,STR0027,oArial07)	//"UNIDADES"
		oPrint:Say(0645,0860,STR0028,oArial07) //"REMUNERATIVO"
		oPrint:Say(0645,1115,STR0029,oArial07)	//"NO REMUNERATIVO"
		oPrint:Say(0645,1370,STR0030,oArial07)	//"DEDUCCIONES"

		//Box do Detalhe do Recibo de vencimento 2
		oPrint:Line(0630,nIniHor2,0630,3143)          
		oPrint:Line(0680,nIniHor2,0680,3143)          
		oPrint:Line(0630,1738,1660,1738) // VERTICAL         
		oPrint:Line(0630,2268,1660,2268) // VERTICAL         
		oPrint:Line(0630,2418,1760,2418) // VERTICAL         
		oPrint:Line(0630,2673,1760,2673) // VERTICAL         
		oPrint:Line(0630,2928,1760,2928) // VERTICAL         

		oPrint:Say(0645,1646,STR0025,oArial07)  	//"CODIGO"
		oPrint:Say(0645,1993,STR0026,oArial07)		//"CONCEPTO"
		oPrint:Say(0645,2293,STR0027,oArial07)		//"UNIDADES"
		oPrint:Say(0645,2448,STR0028,oArial07)    	//"REMUNERATIVO"
		oPrint:Say(0645,2703,STR0029,oArial07)		//"NO REMUNERATIVO"
		oPrint:Say(0645,2958,STR0030,oArial07)		//"DEDUCCIONES"
			
		nLinDet :=710

		nValidos := 0
	Endif         
	
Next nCont

//RODAPE RECIBO 1
oPrint:Line(1660,0020,1660,1555) //HORIZONTAL
oPrint:Say(1670,0080,STR0033,oArial08 )	//"LUGAR Y FECHA DE PAGO" 
oPrint:Say(1700,0080,LEFT(UPPER(ALLTRIM(DESC_CID)),18)+", " + StrZero(Day(dDataPago),2) + STR0034 + MesExtenso(MONTH(dDataPago)) + STR0034+STR(YEAR(dDataPago),4),oArial08N) 	//" de "

oPrint:Say(1700,0830,TRANS(NTOTREM,cPict1),oArial08N)	
oPrint:Say(1700,1080,TRANS(NTOTNREM,cPict1),oArial08N)
oPrint:Say(1700,1270,TRANS(NTOTDESC,cPict1),oArial08N)	
                             
oPrint:Line(1760,0020,1760,1555) //HORIZONTAL
oPrint:Say(1770,0080,STR0035,oArial08 ) //"FORMA DE PAGO"
oPrint:Say(1800,0080,STR0036,oArial08N ) //"DEPOSITO BANCARIO"
oPrint:Say(1800,1070,STR0037,oArial08N ) //"TOTAL NETO =>" -40
oPrint:Say(1800,1265,TRANS(((TOTNVENC + TOTVENC)-TOTDESC),cPict1),oArial08N)

oPrint:Line(1860,0020,1860,1555) //HORIZONTAL
oPrint:Say(1870,0080,STR0038,oArial08 ) //"SON PESOS"

cExtenso:=ALLTRIM(EXTENSO((TOTNVENC + TOTVENC)-TOTDESC,.F.))
cExtenso2:=cExtenso

aLinhas:={} 
x:=1
nTam:=70
While (Len(cExtenso2)>0)
	If x!=1
		nTam:=100
	Endif

	If len(cExtenso2)<=nTam
	   	AADD(aLinhas,cExtenso2)
   		cExtenso2:=""
  	Else

		AADD(aLinhas,SUBSTR(cExtenso2,1,nTam))
		cExtenso:=cExtenso2
		cExtenso2:=SUBSTR(cExtenso2,nTam+1,len(cExtenso2))
		nRat:= RAT(' ',aLinhas[x])
		If nRat != nTam .and. nRat != 0
			aLinhas[x]:= SUBSTR(aLinhas[x],1,nRat)
			cExtenso2:=SUBSTR(cExtenso,nRat+1,len(cExtenso))
		Endif
	EndIf

	
	x++
EndDo
	
For k:=1 to len(aLinhas)			
	oPrint:Say(1170+nRodape+((k)*30),0080,aLinhas[k],oArial08n ) //"SON PESOS"
Next k

oPrint:Line(2000,0020,2000,1555) //HORIZONTAL

oPrint:Line(2000,0820,2360,0820) // VERTICAL  
oPrint:Say(2010,0070,STR0031,oArial08 )  //"OBSERVACIONES:"
oPrint:Say(2010,0830,STR0039,oArial08 )  //"OBRA SOCIAL:"
oPrint:Say(2020,0960,cObra,oArial10N )	//#2000,1060

oPrint:Line(2060,0020,2060,1555) //HORIZONTAL

nMsg:=2080	

If !Empty(DESC_MSG1)
	oPrint:Say(nMsg,0070,DESC_MSG1		,oArial08 ) 
	nMsg+=35
Endif

If !Empty(DESC_MSG2) 
	oPrint:Say(nMsg,0070,DESC_MSG2		,oArial08 )
	nMsg+=35
Endif    

If !Empty(DESC_MSG3) 
	oPrint:Say(nMsg,0070,DESC_MSG3		,oArial08 ) 
Endif

oPrint:Line(2210,0020,2210,0820) //HORIZONTAL
oPrint:Say(2220,0260,STR0040,oArial08 ) //"DEPOSITO JUBILATORIO:"
oPrint:Line(2250,0020,2250,0820) //HORIZONTAL 
oPrint:Say(2250,0030,STR0041,oArial08 ) 	//"FECHA"
oPrint:Say(2250,0230,STR0042,oArial08 )		//"PERIODO"
oPrint:Say(2250,0570,STR0043,oArial08 )  	//"BANCO"

oPrint:Say(2290,0030,DTOC(dDataJub),oArial08 ) 
oPrint:Say(2290,0230,cPerJub,oArial08 )
oPrint:Say(2290,0570,cBancoJub,oArial08 ) 

//oPrint:Line(2280,0220,2280,0262) // VERTICAL  

oPrint:Say(2190,0930,"____________________________",oArial08)
oPrint:Say(2240,0970,STR0044,oArial08) //"FIRMA DEL EMPLEADO"

oPrint:Say(2280,0830,STR0045,oArial06) //"Recibi de conformidad el importe de la presente  "
oPrint:Say(2300,0830,STR0046,oArial06) //"liquidación asi como su duplicado en pago de mi "
oPrint:Say(2320,0830,STR0047,oArial06) //"remuneración correspondiente al periodo arriba indicado."

//RODAPE RECIBO 2
oPrint:Line(1660,nIniHor2,1660,3143) //HORIZONTAL
oPrint:Say(1670,nIniHor2+60,STR0033,oArial08 )           //"LUGAR Y FECHA DE PAGO"
oPrint:Say(1700,nIniHor2+60,LEFT(UPPER(ALLTRIM(DESC_CID)),18)+", " + StrZero(Day(dDataPago),2) + STR0034 + MesExtenso(MONTH(dDataPago)) + STR0034+STR(YEAR(dDataPago),4),oArial08N) //" de "	
oPrint:Say(1700,nIniHor2+825,TRANS(NTOTREM,cPict3),oArial08N)	
oPrint:Say(1700,nIniHor2+1075,TRANS(NTOTNREM,cPict3),oArial08N)
oPrint:Say(1700,nIniHor2+1285,TRANS(NTOTDESC,cPict3),oArial08N)	

oPrint:Line(1760,nIniHor2,1760,3143) //HORIZONTAL
oPrint:Say(1770,nIniHor2+60,STR0035,oArial08 ) //"FORMA DE PAGO"
oPrint:Say(1800,nIniHor2+60,STR0036,oArial08N ) //"DEPOSITO BANCARIO"
oPrint:Say(1800,nIniHor2+1050,STR0037,oArial08N ) //"TOTAL NETO =>"
oPrint:Say(1800,nIniHor2+1245,TRANS(((TOTNVENC+TOTVENC)-TOTDESC),cPict1),oArial08N)

oPrint:Line(1860,nIniHor2,1860,3143) //HORIZONTAL
oPrint:Say(1870,nIniHor2+60,STR0038,oArial08 ) //"SON PESOS"

For k:=1 to len(aLinhas)			
	oPrint:Say(1870+((k)*30),nIniHor2+60,aLinhas[k],oArial08n ) //"SON PESOS"
Next k


oPrint:Line(2000,nIniHor2,2000,3143) //HORIZONTAL

oPrint:Line(2000,nIniHor2+800,2360,nIniHor2+800) // VERTICAL  
oPrint:Say(2010,nIniHor2+50,STR0031,oArial08 )  //"OBSERVACIONES:"
oPrint:Say(2010,nIniHor2+840,STR0039,oArial08 ) //"OBRA SOCIAL:"

oPrint:Say(2020,2750,cObra,oArial10N )	//#2000,2800

oPrint:Line(2060,nIniHor2,2060,3143) //HORIZONTAL

nMsg:=2080	
If !Empty(DESC_MSG1)
	oPrint:Say(nMsg,nIniHor2+50,DESC_MSG1		,oArial08 ) 
	nMsg+=35
Endif
If !Empty(DESC_MSG2) 
	oPrint:Say(nMsg,nIniHor2+50,DESC_MSG2		,oArial08 )
	nMsg+=35
Endif
If !Empty(DESC_MSG3) 
	oPrint:Say(nMsg,nIniHor2+50,DESC_MSG3		,oArial08 ) 
Endif

oPrint:Line(2210,nIniHor2,2210,nIniHor2+800) //HORIZONTAL
oPrint:Say(2220,nIniHor2+240,STR0040,oArial08 ) //"DEPOSITO JUBILATORIO:"
oPrint:Line(2250,nIniHor2,2250,nIniHor2+800) //HORIZONTAL 

oPrint:Say(2250,nIniHor2+10,STR0041,oArial08 ) //"FECHA"
oPrint:Say(2250,nIniHor2+210,STR0042,oArial08 ) //"PERIODO"
oPrint:Say(2250,nIniHor2+550,STR0043,oArial08 ) //"BANCO"

oPrint:Say(2290,nIniHor2+10,DTOC(dDataJub),oArial08 ) 
oPrint:Say(2290,nIniHor2+210,cPerJub,oArial08 )
oPrint:Say(2290,nIniHor2+550,cBancoJub,oArial08 ) 

oPrint:Line(2280,2000,2280,2000) // VERTICAL  

oPrint:SayBitmap(2090,nIniHor2+840,cStartPath+"FIRMA.bmp",430,200) 

oPrint:Say(2280,nIniHor2+840,STR0048,oArial06) //"La presente liquidación es copia del recibo firmado  "
oPrint:Say(2300,nIniHor2+840,STR0049,oArial06) //"que obra en poder de la empresa como comprabante de "
oPrint:Say(2320,nIniHor2+840,STR0050,oArial06) //"pago."

oPrint:EndPage() 		

//=========================================
//=== Grava o campo de Sequencia no SRC ===
//=========================================
cIndice := SRA->RA_FILIAL+cProcesso+SRA->RA_MAT+cPeriodo+Semana+cRoteiro

aArea := GetArea()
aSRCarea := SRC->( GetArea() )
dbSelectArea("SRC")
dbSetorder(13)

If dbSeek( cIndice, .F. )
	
	While !Eof() .And. RC_FILIAL+RC_PROCES+RC_MAT+RC_PERIODO+RC_SEMANA+RC_ROTEIR == cIndice
		RecLock("SRC",.F.)
		SRC->RC_SEQIMP := cPrxSeq
		MsUnLock("SRC")
		dbSkip()
	EndDo      
	
EndIf

RestArea(aSRCarea)
RestArea(aArea)
Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fSomaPdRec³ Autor ³ Equipe RH             ³ Data ³ 24.09.95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Somar as Verbas no Array                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fSomaPdRec(Tipo,Verba,Horas,Valor)                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fSomaPdRec(cTipo,cPd,nHoras,nValor)
Local Desc_paga
Local cCodFol

Static lAglutPd // Sera utilizada em todas as chamadas da funcao fSomaPdRec()

If lAglutPd == Nil
	 lAglutPd := ( GetMv("MV_AGLUTPD",,"1") == "1" ) // 1-Aglutina verbas   2-Nao Aglutina
EndIf

Desc_paga := DescPd(cPd,Sra->Ra_Filial)  // mostra como pagto
nPos := Ascan(aLanca,{ |X| X[2] = cPd })

If nPos == 0 .Or. !lAglutPd
	Aadd(aLanca,{cTipo, cPd, Desc_Paga, nHoras, nValor, cCodFol})
Else
	aLanca[nPos,4] += nHoras
	aLanca[nPos,5] += nValor
Endif


//--Array para o Recibo Pre-Impresso
If cTipo == 'P'
	cArray := "aProve"
Elseif cTipo == 'D'
	cArray := "aDesco"
Elseif cTipo == 'B'
	cArray := "aBases"
Endif

nPos := Ascan(&cArray,{ |X| X[1] = cPd })
If nPos == 0 .Or. !lAglutPd
	Aadd(&cArray,{cPd+" "+Desc_Paga, nHoras, nValor, cCodFol})
Else
	&cArray[nPos,2] += nHoras
	&cArray[nPos,3] += nValor
Endif

Return

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³fMontaDtTcf 	³Autor³ Equipe RH         ³ Data ³13/08/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Retorna a data valida para a consulta do Terminal Consulta  ³
³          ³do Funcionario                                         		³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³cHtml  														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³ Generico      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function fMontaDtTcf(cMesAno,nDia)

Local dDataValida
Default nDia := 0

dDataValida := stod(right(cMesAno,4)+left(cMesAno,2)+"01")
dDataValida := stod(right(cMesAno,4)+left(cMesAno,2)+strzero(f_UltDia(dDataValida),2))+nDia

return(dDataValida)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fCarregaMod   ³ Autor ³ Equipe RH        ³ Data ³27/06/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Carrega as Modalidades em array                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fCarregaMod()

Local aArea := GetArea()
Local aModalid := {}

DbSelectArea("RCC")
DbGotop()
While !eof() 
   IF RCC->RCC_FILIAL == FWxFilial("RCC") .and. RCC->RCC_CODIGO == "S023" .and. !Eof()
      aAdd(aModalid,{Substring(RCC->RCC_CONTEUD,1,2),Substring(RCC->RCC_CONTEUD,3,25)})
   ENDIF
   DbSkip()
EndDo

RestArea(aArea)
Return(aModalid)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fBuscCargoºAutor  ³ Equipe RH          º Data ³  16/03/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Carrega Funcoes de acordo com  a data de referencia        º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Generico                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fBuscCargo(dDataDe,cCodFunc, cDescFunc, nTamFunc, cCatFunc, cDescCateg, nTamCateg, lDataRef )
Local aRecno	:= {}
Local nPos 		:= 0 
Local lCateg	:= .F.                                                                      
Local cDesc		:= ""

DEFAULT lDataRef 	:= .T.   

DEFAULT nTamFunc	:= 30
DEFAULT nTamCateg   := 25
                           
//-- Verifica se foi passado o codigo da categoria para buscar a sua descricao 
lCateg				:= (cCatFunc <> NIL) 				
DEFAULT cCatFunc	:= ""
DEFAULT cDescCateg	:= SPACE(nTamCateg)

If SR7->( dbSeek( SRA->(RA_FILIAL + RA_MAT) )  )
	While SR7->(!EOF()) .and. If(lDataRef, (MesAno(SR7->R7_DATA)	<= MesAno(dDataDe) ), ( SR7->R7_DATA	<= dDataDe) ) .AND.;
								SR7->R7_FILIAL 	== SRA->RA_FILIAL .AND. ;
								SR7->R7_MAT   	== SRA->RA_MAT          
		
		cDesc	:= LEFT(fDesc("SQ3",SR7->R7_CARGO,"Q3_DESCSUM",,SR7->R7_FILIAL),nTamFunc) 						
		AADD(aRecno, {DTOS(SR7->R7_DATA), strzero(SR7->(Recno()),10) , SR7->R7_CARGO, cDesc, SR7->R7_CATFUNC }) 
		SR7->(dbSkip())
	EndDo 
	If Len(aRecno) > 0 
		aSort( aRecno,,,{ |x,y| x[1] + x[2] < y[1] + y[2]  } ) 
		nPos 		:= Len( aRecno ) 
		cCodFunc 	:=	aRecno[nPos,3]
		cDescFunc 	:= 	aRecno[nPos,4]									//-- 20 Bytes
		cCatFunc	:= 	aRecno[nPos,5]
	Endif
Endif

//-- Se nao encontrou a funcao na data solicitada, assume a do Cadastro de Funcionarios
If  Empty( Len(aRecno) )
	cCodFunc 	:=	SRA->RA_CARGO
	cDescFunc	:=  LEFT(fDesc("SQ3",SRA->RA_CARGO,"Q3_DESCSUM",,SRA->RA_FILIAL),nTamFunc) 
	cCatFunc	:=  SRA->RA_CATFUNC
Endif
	
//-- Se foi passado o Codigo de Categoria, busca a descricao 
cDescCateg	:=   If( lCateg , DescCateg(cCatFunc, nTamCateg), cDescCateg )						//-- 25 Bytes	
	
Return         

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RetcObra  ºAutor  ³ Equipe RH          º Data ³  12/01/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna o Codigo da obra social.                           º±±
±±º          ³                                                            º±±
±±º          ³   PARAMETROS:                                              º±±
±±º          ³    cTabela     == Nome da tabela que sera pesquisada       º±±
±±º          ³    cOperador   == Tipo de comparacao de valores            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Generico                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RetcObra(cTabela,cOperador)

Local nPos := 0
Local cCodObra := ""

nPos := fPosTab(cTabela, SRA->RA_ASMEDIC , cOperador, 4  )
If nPos > 0
	If FTABELA(cTabela, nPos, 12) <> NIL
		cCodObra := Alltrim(FTABELA(cTabela, nPos, 12))+"-"+FTABELA(cTabela, nPos, 5)
	Endif                                               
Endif                                               

Return(cCodObra)


/**************************************/
Function fValMax(cAlias,Campo,cSumCond)
Local cRet   := ""
Local cQuery := ""

cQuery  := "SELECT MAX("+Campo+") "+Campo+" FROM "+RetSqlName(cAlias)+" "
cQuery  += "WHERE D_E_L_E_T_=' ' "
If !Empty(cSumCond)
	cQuery  += cSumCond
EndIf
cQuery := ChangeQuery(cQuery)

cAlias := "Q"+cAlias
If Select(cAlias) > 0
	(cAlias)->(dbCloseArea())
Endif

TCQUERY cQuery NEW ALIAS &cAlias

cRet := (cAlias)->&Campo

Return(cRet)                                                                                   

