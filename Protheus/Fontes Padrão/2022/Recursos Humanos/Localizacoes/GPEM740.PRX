#INCLUDE "PROTHEUS.CH"
#INCLUDE "GPEM740.CH"

#DEFINE   nColMax 2300

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GPEM740  ³ Autor ³ Silvia Taguti                   ³ Data ³ 28/12/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Impressao das Constancias - Mexico                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS/FNC       ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Silvia T    ³08/02/08³140541          ³Ajustes usando o campo RCP_SALMES,        ³±± 
±±³Erika K     ³02/06/08³------          ³Alteracao do nome do pergunte para integra³±±
±±³Rogerio R.  ³09/10/08³------          ³Alteracao do escopo da funcao fBuscaTraj  ³±±
±±³Valdeci Lira³23/01/09³00000001218/2009³Ajuste para nova vigencia de 26/12/2008   ³±±
±±³            ³        ³                ³Para geracao e impressao de constancias   ³±±
±±³Valdeci Lira³11/03/09³00000005837/2009³Ajuste para imprimir o campo numero de    ³±±
±±³            ³        ³                ³anos de trabalho e o campo 3e mesmo nao   ³±±
±±³            ³        ³                ³tendo o RCW_TIPORE==3A p/ o funcionario.  ³±±
±±³            ³        ³                ³Solicitados pela Concepcion chamado SAZUSE³±±
±±³Rogerio R.  ³05/05/09³00000005837/2009³Incluido ajuste dos helps do pergunte     ³±±
±±³Reginaldo GR³15/09/09³00000022951/2009³Ajuste para não imprimir uma pagima em    ³±±
±±³            ³        ³                ³branco no inicio, ajuste para imprimir 	³±±  
±±³            ³        ³                ³somente o ano informado na perg. ano ref. ³±±  
±±³Tiago Malta ³29/12/09³00000030785/2009³Retirado a Funcao AjustaSx1.              ³±±  
±±³			   ³        ³                ³Ajuste conteudo da variavel cFilAnterior  ³±±
±±³			   ³        ³                ³de "!!" para Replicate("!",FWGETTAMFILIAL)³±±
±±³Raul Ortiz  ³19/06/14³TPVLP2          ³Se modifico la funcion GPM740IMP          º±±
±±³            ³        ³                ³para generacion de constancias            º±±
±±³Raul Ortiz  ³19/06/14³TPVLZC          ³Se modifico la funcion fBuscaTraj()       º±±
±±³            ³        ³                ³para mes inicial y final                  º±±
±±³Raul Ortiz  ³08/07/14³TQANSE          ³Se modifica el filtro de datos de la tablaº±±
±±³            ³        ³                ³RCV                                       º±±
±±³            ³        ³                ³                                          º±±
±±³L Samaniego ³02/12/14³TRCSP0          ³- Se modifico la buscqueda de la funcion  º±±
±±³            ³        ³                ³fBuscaTraj(), cuando es detonada de la Genº±±
±±³            ³        ³                ³de Acumulados (GPEM710), para que busque  º±±
±±³            ³        ³                ³con el registro em proceso de la SRA.     º±±
±±³            ³        ³                ³ - Se modifico la funcion GPM740IMP       º±±
±±³            ³        ³                ³para consolidar informacion.              ³±±
±±³Alf. Medrano³10/11/15³TTLWHG          ³- Se agrega función fAniosTrb, Calcula losº±±
±±³            ³        ³                ³años reconocidos. Se agrga mat en encab deº±±
±±³            ³        ³                ³ Cada Pag. Se agrega Filtro de Loc. Pag. yº±±
±±³            ³        ³                ³orden por Loc. Pag. y Matricula           º±±
±±³Alf. Medrano³18/11/15³TTLWHG          ³- Se modifica func GPM740IMP, solo Calculaº±±
±±³            ³        ³                ³años reconocidos cuando hay despido en añoº±±
±±³            ³        ³                ³de ref. o cuando exista monto total pagadoº±±
±±³Alf. Medrano³18/11/15³TTLWHG          ³- Se agrega func AjustaSx1, si la preguntaº±±
±±³            ³        ³                ³de loc. de pago no existe la agrega       º±±
±±³Alf. Medrano³11/12/15³TUAA48          ³- se quita control de acceso en funcion   º±±
±±³            ³        ³                ³GPM740IMP para mostrar info de  diferentesº±±
±±³            ³        ³                ³sucursales. se aumenta tamaño de Matriculaº±±
±±³            ³        ³                ³en encabezados de informe. 				º±±
±±³Alf. Medrano³16/12/15³TTURUL          ³- se agregan cambios realizados en V11  	º±±  
±±³            ³        ³                ³relacionados al llamado TTLWHG y TUAA48   º±± 
±±³Alf. Medrano³21/06/16³TVLNAG          ³- Replica para V12 se agren cambios rela  º±±  
±±³            ³        ³                ³cionados al llamado TUJQL4 se agrega la   º±±   
±±³            ³        ³                ³ pregunta de imprimir anualizados         º±± 
±±³LuisEnriquez³11/05/17³MMI-4483        ³- Se realiza merge 12.1.14 MI MEXICO      º±± 
±±³            ³        ³                ³se atendió replica se issue MMI-4399 para º±± 
±±³            ³        ³                ³corregir error de calculo años de serv. deº±± 
±±³            ³        ³                ³trabajador de año ant. al año que se está º±±
±±³            ³        ³                ³declarando.                               º±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPEM740()
	Local cString := "RCV"  // alias do arquivo principal (Base)
	Local aOrd     := {STR0107,STR0108,STR0235} 	//" Matricula ##RFC Fonte Pag ## " Localidad depago y Matricula"
	Local cDesc1  := STR0110 //"Constancias
	Local cDesc2  := STR0111 //"Ser  impresso de acordo com os parametros solicitados pelo"
	Local cDesc3  := STR0112 //"usuario."
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Define Variaveis PRIVATE utilizadas para Impressao Grafica³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Private nPos		:= 0				//LINHA DE IMPRESSAO DO RELATORIO GRAFICO
	Private NomeProg := "GPEM740"
	Private cPerg    := "GPEM740"
	
	Private Titulo   := STR0109 		//"RELACION DE CONSTANCIAS"	
	Private nOrdem
	Private aReturn 	:= { STR0006 , 1, STR0007, 2, 2, 1, "",1 } //"Branco"###"Administra‡„o"
	Private aInfo	:={}
	Private nAuxSoma	:= 	0
	Private n6Q1		:=	0
	Private n6R1		:=	0
	Private n4M			:=	0
	Private nPrecAcTit := 0
	Private nValorMercado := 0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Objetos para Impressao Grafica - Declaracao das Fontes Utilizadas.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Private oFont04		:= TFont():New("Arial",				NIL,  6, NIL, .F., NIL, NIL, NIL, .T., .F.)
	Private oFont06		:= TFont():New("Arial",				NIL,  5, NIL, .F., NIL, NIL, NIL, .T., .F.)
	Private oFont06n	:= TFont():New("Arial",				NIL,  5, NIL, .T., NIL, NIL, NIL, .T., .F.)    //Negrito
	Private oFont07 	:= TFont():New("Arial",				NIL,  7, NIL, .F., NIL, NIL, NIL, .T., .F.)
	Private oFont07n	:= TFont():New("Arial",				NIL,  7, NIL, .T., NIL, NIL, NIL, .T., .F.)    //Negrito
	Private oFont08 	:= TFont():New("Arial",				NIL,  8, NIL, .F., NIL, NIL, NIL, .T., .F.)
	Private oFont08n	:= TFont():New("Arial",				NIL,  8, NIL, .T., NIL, NIL, NIL, .T., .F.)    //Negrito
	Private oFont08t	:= TFont():New("Times New Roman",	NIL,  8, NIL, .T., NIL, NIL, NIL, .T., .F.)
	Private oFont09		:= TFont():New("Times New Roman",	NIL,  9, NIL, .F., NIL, NIL, NIL, .T., .F.)
	Private oFont10  	:= TFont():New("Arial",				NIL, 10, NIL, .F., NIL, NIL, NIL, .T., .F.)    
	Private oFont10n	:= TFont():New("Times New Roman",	NIL, 10, NIL, .T., NIL, NIL, NIL, .T., .F.)
	Private oFont11n 	:= TFont():New("Arial",				NIL, 11, NIL, .T., NIL, NIL, NIL, .T., .F.)     //Negrito//
	
	oPrint := TMSPrinter():New()
	
	SET CENTURY ON 

	Pergunte(cPerg, .F.)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³mv_par01 - Filial de                              ³
	//³mv_par02 - Filial Ate                             ³
	//³mv_par03 - Matricula de                           ³
	//³mv_par04 - Matricula Ate                          ³
	//³MV_PAR05 - RFC De?                                ³
	//³MV_PAR06 - RFC Ate?                               ³
	//³MV_PAR07 - Ano Referencia ?                       ³
	//³MV_PAR08 - Tarifa Utilizada?                      ³
	//³MV_PAR09 - Proporcao Subsidio?                    ³
	//³MV_PAR10 - Valor Subsidio?                        ³
	//³MV_PAR11 - Data de Geracao?                       ³
	//³MV_PAR12 - Numero de Folio?                       ³
	//³MV_PAR13 - Localidad de Pago?                     ³
	//³MV_PAR14 - imprimir anualizados?                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Envia controle para a funcao SETPRINT                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	wnrel:="GPEM740"            //Nome Default do relatorio em Disco
	wnrel:=SetPrint(cString,wnrel,cPerg,@Titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd)

	If nLastKey == 27
		Return
	Endif

	SetDefault(aReturn,cString)

	If nLastKey == 27
		Return
	Endif

	RptStatus({|lEnd| GPM740Imp(@lEnd,wnRel,cString)},Titulo)

	// Mostra la pentalla de Setup
	oPrint:Setup()
	
	// Mostra la pentalla de preview
	oPrint:Preview()
	
	// Mostra la pentalla de Setup
	//oPrint:Setup()
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPM740IMP ºAutor  ³Silvia Taguti       º Data ³  28/12/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Processamento das Constancias                               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Generico                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GPM740IMP(lEnd,WnRel,cString)
	Local cFilAnterior
	Local cQuery		:= ""
	Local cTRBCON  	:= ""
	Local nRECNO		:= ""
	Local cPerg		:= 'GPEM740'
	Local cLocPag		:= ""
	Local cOrd		:= ""
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Variaveis de Acesso do Usuario                               ³ 	
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/ 
	Local cAcessaRCV	:= &( " { || " + IF( Empty( cAcessaRCV := ChkRH( "GPEM740" , "RCV" , "2" ) ) , ".T." , cAcessaRCV ) + " } " ) 
	Local cAcessaRCW	:= &( " { || " + IF( Empty( cAcessaRCW := ChkRH( "GPEM740" , "RCW" , "2" ) ) , ".T." , cAcessaRCW ) + " } " ) 
	Local cMatR	:=''
	Private aFunc		:= {}
	Private nDiasTrab 	:= 0
	Private nAnosTrab  	:= 0
	Private nAnosTTem  	:= 0
	Private nTotGrav  	:= 0
	Private nTotIsen  	:= 0
	Private nIngExen	:= 0
	Private nIngNAcum 	:= 0
	Private nImpRet   	:= 0
	Private aRCP        := {}
	Private aEntFed     := {}
	Private dDataGer  	:= ctod("")
	Private cFolio   	:= ""
	Private nAnual  		:= 0
	Private lCalcAnu  	:= .F.
	Private nContImp	:= 0
	Private cNuevaFil	:= ""
	Private aRFCTrans	:= {}
	Private cMesFinAnt := "01"
	
	nOrdem 		:= aReturn[8]
	
	cFilDe		:= mv_par01
	cFilAte		:= mv_par02
	cMatDe		:= mv_par03
	cMatAte		:= mv_par04
	cRfcDe   	:= mv_par05				//RFC Empresa
	cRfcAte  	:= mv_par06          //RFC Empresa
	cAnoRef	 	:= mv_par07
	cTarExerc  	:= If(mv_par08 == 1,"X"," ")
	cTar1991  	:= If(mv_par08 == 1," ","X")
	cPropSub 	:= mv_par09
	nVlSubs  	:= mv_par10
	dDataGer 	:= mv_par11
	cFolio   	:= mv_par12
	nAnual   	:= mv_par14

	MakeSqlExpr(cPerg) 
	cLocPag  := mv_par13
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona Ponteiro "DE" Informado                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "RCV" )
	dbGoTop()

	If nOrdem == 1
		dbSetOrder(1)
		dbSeek(cFilDe + cMatDe,.T.)
		cInicio  := "RCV->RCV_Filial + RCV->RCV_MAT"
		cFim     := cFilAte + cMatAte
	Endif

	If nOrdem == 2
		dbSetOrder(2)
		dbSeek(cFilDe + cRfcDe,.T.)
		cInicio  := "RCV->RCV_Filial + RCV->RCV_RFCFON"
		cFim     := cFilAte + cRfcAte
	Endif

	cRfcFonAnt := "!!!!!!!!!!!!!!"
	nReg    := 0
	nReg2   := 0
	
	cFilAnterior  := Replicate("!",FWGETTAMFILIAL)
	cRfcAnt    := "!!!!!!!!!!!!!!"
	
	//Carrega os codigos de Entidade Federativa
	fEntFed()
	
	cQuery := "SELECT RCV_FILIAL, RCV_MAT, RCV_RFC, RCV_RFCFON, RCV.R_E_C_N_O_ "
	cQuery += " FROM " + RetsqlName("RCV")+ " RCV INNER JOIN  " + RetsqlName("SRA")+ " SRA "
	cQuery += " ON RCV_MAT = RA_MAT AND RCV_FILIAL = RA_FILIAL  "
	cQuery += " WHERE SRA.D_E_L_E_T_='' AND RCV.D_E_L_E_T_='' "
	cQuery += " AND RCV_FILIAL BETWEEN '" + cFilDe + "' AND '" + cFilAte + "'"
	cQuery += " AND RCV_MAT BETWEEN '" + cMatDe + "' AND '" + cMatAte + "'"
	cQuery += " AND RCV_RFCFON BETWEEN '" + cRfcDe + "' AND '" + cRfcAte + "'"
	cQuery += " AND RCV_ANO = '" +  cAnoRef + "'"
	If !empty(cLocPag) 
		cQuery += " AND " +  cLocPag
	EndIf
	If  nAnual!=0 .and. nAnual != 3 
		cQuery += " AND RA_AJUANU = '" + ALLTRIM(STR(nAnual)) + "'"
	EndIf
	If nOrdem == 1 
		cOrd := "RCV_MAT, RCV_FILIAL, RCV_RFCFON"
	ElseIf nOrdem == 2
		cOrd := "RCV_RFCFON, RCV_MAT, RCV_FILIAL"
	ElseIf nOrdem == 3
		cOrd := "RCV_KEYLOC, RCV_MAT, RCV_FILIAL"
	Endif
	
	cQuery += " ORDER BY " + cOrd	
	
	If Select("TRBCON")>0
		DbSelectArea("TRBCON")
		TRBCON->(DbCloseArea())
	Endif
	
	cTRBCON := ChangeQuery(cQuery)
	dbUseArea(.T., 'TOPCONN', TcGenQry( ,, cTRBCON ) ,"TRBCON", .T., .F.)
	
	DbSelectArea("TRBCON")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Desenha cursor para movimentacao                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	While TRBCON->(!Eof()) //.And. &cInicio <= cFim
		nRECNO := TRBCON->R_E_C_N_O_
		RCV->(dbGoTo(nRECNO))
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Movimenta Regua Processamento                                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IncProc(STR0007)	//"Constancias         

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Consiste Controle de Acesso                                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	  	If Len(aRFCTrans) <> 0
				If Ascan(aRFCTrans,cRfcAnt) <> 0
					TRBCON->(dbSkip()) 
					Loop
				EndIf
			EndIf
		
		If lEnd
			@Prow()+1,0 PSAY cCancel
			Exit
	    Endif
	
		If RCV->RCV_Filial # cFilAnterior
			cFilAnterior := RCV->RCV_FILIAL
			fInfo(@aInfo,cFilAnterior)
		Endif
	
		If cAnoRef # RCV->RCV_ANO
			TRBCON->(dbSkip())
			Loop
	  	EndIF   
	  	   
	 	If TRBCON->RCV_RFCFON # cRFCFonAnt
   			cRfcFonAnt := TRBCON->RCV_RFCFON
		Endif  
		 
	 	cRfcAnt := TRBCON->RCV_RFC //cRfcAnt   := RCV->RCV_RFC
		fBuscaTraj(aRCP)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta Registro Tipo 2    Beneficiario                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("RCW")    // Preenche a matriz com os valores existentes
		dbSeek( RCV->RCV_FILIAL + RCV->RCV_MAT + RCV->RCV_RFC +RCV->RCV_ANO+RCV->RCV_MESINI+RCV->RCV_MESFIN )
		While ! Eof() .And.  RCV->RCV_FILIAL + RCV->RCV_MAT + RCV->RCV_RFC+RCV->RCV_ANO+RCV->RCV_MESINI+RCV->RCV_MESFIN ==	RCW->RCW_FILIAL + RCW->RCW_MAT + RCW->RCW_RFC+RCW->RCW_ANO+RCW->RCW_MESINI+RCW->RCW_MESFIN
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Consiste Controlde de Acesso                                           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ        
			nPos := Ascan(aFunc,{ |x| x[1] == RCW->RCW_TIPORE})
			If nPos > 0
				aFunc[nPos,2] += RCW->RCW_VALOR
			Else
				If RCW->RCW_VALOR <> 0
					Aadd(aFunc,{RCW->RCW_TIPORE,RCW->RCW_VALOR})
				EndIf	
			Endif
			
			RCW->(dbSkip())
		Enddo
		
		If (Ascan(aFunc,{ |x| x[1] = "3A  " })) > 0  // cuando exista monto total pagado
			If cMatR != RCV->RCV_MAT
				cMatR := fAniosTrb()	 // calcula Años Reconocidos
			EndIf
		Endif
			
		If cMesFinAnt #  RCV->RCV_MESFIN .And. Val(RCV->RCV_MESFIN) > Val(cMesFinAnt)
			cMesFinAnt := RCV->RCV_MESFIN
		EndIf
	
	   	TRBCON->(dbSkip())
   		If TRBCON->RCV_RFC # cRFCAnt .Or. TRBCON->RCV_RFCFONT # cRfcFonAnt
		   	fImprime()
		   	nContImp ++
			nDiasTrab := 0
			nAnosTrab := 0
			nAnosTTem := 0
			cMesFinAnt := "01"
		EndIf
	Enddo 

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Termino do relatorio                                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Set Device To Screen
	MS_FLUSH()
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fImprime  ºAutor  ³Silvia Taguti       º Data ³  12/28/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Imprime as Constancias                                     º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fImprime()
	Local aFuncRed := {}
	Local nx := 0                 
	
	If Len(aFunc) > 0
		aFuncRed := aFunc
		
		For nx := 1 to Len(aFuncRed)
			aFunc[nx,2] := Round(Abs(aFuncRed[nx,2]),0)
		Next
		
		aFuncRed := {}
		fPrimPag()
		fSegPag()
		fTerPag()
	Endif
	
	aFunc := {}	
	aRCP := {}
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fPrimPag	³ Autor ³ Recursos Humanos      ³ Data ³ 04.11.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Impressao da Primeira Pagina de Constancias                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fPrimPag()
	Local cIntValSub 	:= " "
	Local cDecValsub 	:= "    "
	Local cEstado 		:= " "
	Local nPos 			:= 0
	Local nTotalAs 	:= 0      
	Local nValorMercado := 0
	Local nPrecAcTit   	:= 0
	Local nx := 0
	Local nImpLocal := 0
	Local nImpIng   := 0
	Local n2A		:= 0
	Local n2B		:= 0
	Local n2C		:= 0
	Local n2D		:= 0
	Local n2E		:= 0
	Local n2P		:= 0
	
	Local cPPS		:= "PPS.BMP"

	cIntValSub := Alltrim(Str(Int(nVlSubs)))
	cDecValSub := Substr(Alltrim(Str(nVlsubs - Int(nVlSubs),6,4)),3,4)
	cEstado	 := fEntFed(RCV->RCV_KEYLOC)
	
	nTotGrav := 0
	nTotIsen := 0
	nIngExen := 0
	nIngNAcum:= 0
	nImpRet		:= 0
	lCalcAnu 	:= .F.
	lHas3Q		:= .F.
		
	For nx:= 1 to Len(aFunc)
		If Substr(aFunc[nx,1],1,1) == "5"  .And. (aFunc[nx,1] <> "5P1G" .or. aFunc[nx,1] <> "5P1E") 
			nTam := If(Substr(aFunc[nx,1],Len(aFunc[nx,1]),1) <> " ",Len(aFunc[nx,1]),Len(aFunc[nx,1])-1)
			If Substr(aFunc[nx,1],nTam,1) == "G"
				nTotGrav += aFunc[nx,2]
			ElseIf Substr(aFunc[nx,1],nTam,1) == "E"
				nTotIsen += aFunc[nx,2]
			Endif
		Endif		
	Next

    If nContImp>0
    	oPrint:StartPage() 			//Inicia uma nova pagina  
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³PRIMEIRA PAGINA DAS CONSTANCIAS                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oPrint:say( 045,600 ,"CONSTANCIA DE SUELDOS, SALARIOS, CONCEPTOS ASIMILADOS,",oFont11n)
	oPrint:Say( 105,690 ,"CRÉDITO AL SALARIO Y SUBSIDIO PARA EL EMPLEO")
	oPrint:say( 095,2120,STR0220,oFont06)				 				 		//"Anverso
	oPrint:say( 085,2275,"37",oFont11n)											//"37
	oPrint:say( 160,2250,"37P1A09",oFont06)					 				    //37P1A09
	oPrint:say( 160,2120,RCV->RCV_MAT,oFont08)                              //Matricula del empleado       
	                                      
	oPrint:say( 180,1000,STR0003,oFont08t)										//"(INCLUYE INGRESOS POR ACCIONES)"
	
	oPrint:say( 250,250 ,STR0008,oFont06)										//""PERIODO QUE AMPARA LA CONSTANCIA"
	oPrint:say( 250,850 ,STR0004,oFont07)										//"MES INICIAL
	oPrint:say( 250,1150,STR0005,oFont07)										//"MES FINAL
	oPrint:say( 250,1350,STR0006,oFont07)										//"EJERCICIO
		
	oPrint:Box( 290,870,340,920)	
	oPrint:say( 290,880 ,RCV->RCV_MESINI,oFont08)										//"MES INICIAL

	oPrint:Box( 290,1170,340,1220)	
	oPrint:say( 290,1180,cMesFinAnt,oFont08)   //RCV->RCV_MESFIN						//"MES FINAL

	oPrint:Box( 290,1360,340,1460)  
	oPrint:say( 290,1370 ,RCV->RCV_ANO,oFont08)										//"ANO
	
	oPrint:say( 320,1500 ,STR0009,oFont06)									//""ESTA CONSTANCIA DEVERA SER CONSERVADA POR EL TRABAJADOR"
	
	oPrint:Box(380,100,2640,nColMax) 					 					//Box Externo      
	oPrint:say(385,110,"1",oFont08n)										
	oPrint:say(395,800,STR0010,oFont08n)									//DATOS DEL TRABAJADOR O ASIMILADO A SALARIOS									
	oPrint:line(440,100,440,nColMax)											//Linha Horizontal
	
	oPrint:say( 445,110,STR0011,oFont06)									//REGISTRO FEDERAL
	oPrint:say( 465,110,STR0012,oFont06)									//DE CONTRIBUYENTES
	oPrint:line(440,400,500,400)												//Linha Vertical
	oPrint:say( 455,405 ,RCV->RCV_RFC,oFont07)						
	
	oPrint:line(440,1200,500,1200)											//Linha Vertical
	oPrint:say( 455,1210,STR0013,oFont06)									//CLAVE UNICA DE
	oPrint:say( 475,1210,STR0014,oFont06)									//REGISTRO DE POBLACION
	oPrint:line(440,1600,500,1600)											//Linha Vertical
	oPrint:say( 455,1620,RCV->RCV_CURP,oFont07)						
	oPrint:line(500,100,500,nColMax)											//Linha Horizontal
	
	oPrint:say( 520,110,STR0015,oFont06)									//APELLIDO PATERNO
	oPrint:line(500,890,560,890)												//Linha Vertical
	
	oPrint:say( 520,910,STR0016,oFont06)									//APELLIDO MATERNO
	oPrint:line(500,1500,560,1500)												//Linha Vertical
	oPrint:say( 520,1510,STR0017,oFont06)									//NOMBRE(S)
	oPrint:line(550,100,550,nColMax)											//Linha Horizontal
	
	oPrint:say( 555,110 ,Alltrim(RCV->RCV_PRISOB),oFont07)						
	oPrint:line(560,890,590,890)												//Linha Vertical
	oPrint:say( 555,910 ,Alltrim(RCV->RCV_SEGSOB),oFont07)						
	oPrint:line(560,1500,590,1500)												//Linha Vertical
	oPrint:say( 555,1520,Alltrim(RCV->RCV_PRINOM)+ " "+ Alltrim(RCV->RCV_SEGNOM),oFont07)						
	oPrint:line(590,100,590,nColMax)											//Linha Horizontal
	
	oPrint:say( 600,110,STR0018,oFont06n)									//MARQUE CON "X" EL RECUADRO QUE CORRESPONDA Y/O CONTESTE LO QUE SE SOLICITA:
	oPrint:say( 640,120,STR0019,oFont06)									//"AREA GEOGRAFICA"
	oPrint:say( 660,120,STR0020,oFont06)                          //"DEL SALARIO MINIMO(1)"
	oPrint:Box( 640,430,680,470)
	oPrint:say( 650,440,RCV->RCV_CVEZON,oFont07)						
	
	oPrint:say( 640,650,STR0021,oFont06)									//"SI EL PATRÓN REALIZO"
	oPrint:say( 660,650,STR0022,oFont06)                          //"CALCULO ANUAL"
	oPrint:Box( 640,990,680,1030)
	oPrint:say( 650,1000,RCV->RCV_EMCALA,oFont07)						
	
	oPrint:say( 650,1150,STR0232,oFont06)							//TARIFA UTILIZADA
	oPrint:say( 640,1350,STR0023,oFont06)							//"DEL EJERCICIO"
	oPrint:say( 660,1350,STR0024,oFont06)                          	//"QUE DECLARA
	oPrint:Box( 640,1520,680,1560)
	oPrint:say( 650,1530,cTarExerc,oFont07)						
	
	oPrint:say( 640,1700,STR0025,oFont06)									//"1991
	oPrint:say( 660,1700,STR0026,oFont06)                          //"(actualizada)
	oPrint:Box( 640,2000,680,2040)
	oPrint:say( 650,2020,cTar1991,oFont07)						
	
	oPrint:say( 700,110,STR0027,oFont06n)									//PROPORCIÓN DEL SUBSIDIO:
	oPrint:say( 730,120,STR0028,oFont06)									//"CALCULADA CONFORME A"
	oPrint:say( 750,120,STR0029,oFont06)                          //"LAS DISPOSICIONES"
	oPrint:say( 770,120,STR0030,oFont06)                          //"VIGENTES EN EL EJERCICIO"
	oPrint:say( 790,120,STR0031,oFont06)                          //"QUE DECLARA (*)
	oPrint:Box( 730,450,790,490)
	oPrint:Box( 730,500,790,580)
	
	oPrint:say( 730,700,STR0032,oFont06)									//"CALCULADA CONFORME"
	oPrint:say( 750,700,STR0033,oFont06)                          //"DISPOSICIONES"
	oPrint:say( 770,700,STR0034,oFont06)                          //"VIGENTES EN 1991 (*)"
	oPrint:Box( 730,1030,790,1070)
	oPrint:Box( 730,1080,790,1160)
	
	oPrint:say( 700,1300,STR0035,oFont06)									//"FRACCIÓN (2)"
	oPrint:Box( 730,1300,790,1340)
	oPrint:Box( 730,1350,790,1430)
	
	oPrint:say( 700,1700,STR0036,oFont06)									//"FRACCIÓN  II (2)"
	oPrint:Box( 730,1700,790,1740)
	oPrint:Box( 730,1750,790,1830)
	
	oPrint:say( 700,2100,STR0037,oFont06)									//"APLICADA (3)"
	oPrint:Box( 730,2100,790,2140)
	oPrint:Box( 730,2150,790,2230)
	
	If RCV->RCV_PROAPL > 0 
		cIntValSub := Alltrim(Str(Int(RCV->RCV_PROAPL)))
		cDecValSub := Substr(Str(RCV->RCV_PROAPL - Int(RCV->RCV_PROAPL),6,4),3,4)
		oPrint:say( 740,2110,cIntValSub,oFont07)								//Subsidio Aplicada
		oPrint:say( 740,2160,cDecValSub,oFont07)								//Subsidio Aplicada
	ElseIf cPropSub == 1
		oPrint:say( 740,460,cIntValSub,oFont07)						      //Subsidio Ejercicio
		oPrint:say( 740,510,cDecValSub,oFont07)						      //Subsidio Ejercicio
	ElseIf cPropSub == 2
		oPrint:say( 740,1040,cIntValSub,oFont07)						      //Subsidio 1991
		oPrint:say( 740,1090,cDecValSub,oFont07)						      //Subsidio Ejercicio
	ElseIf cPropSub == 3
		oPrint:say( 740,1310,cIntValSub,oFont07)						      //Subsidio Fraccion
		oPrint:say( 740,1360,cDecValSub,oFont07)						      //Subsidio Ejercicio
	ElseIf cPropSub == 4
		oPrint:say( 740,1710,cIntValSub,oFont07)						      //Subsidio Fraccion II
		oPrint:say( 740,1760,cDecValSub,oFont07)						      //Subsidio Ejercicio
	Endif	 
	
	oPrint:say( 820,120,STR0038,oFont06n)									//'MARQUE CON "X" SI EL  TRABAJADOR'
	oPrint:say( 870,120,STR0039,oFont06)                          //"ES SINDICALIZADO"
	oPrint:Box( 865,550,900,590)
	oPrint:say( 870,560,RCV->RCV_SINDIC,oFont07)						 
	
	oPrint:say( 870,650,"SI ES ASIMILADO A SALARIOS, SEÑALE",oFont06)									//"SI ES ASIMILADO A SALARIOS, SEÑALE"
	oPrint:say( 890,650,STR0041,oFont06)                          //"LA CLAVE CORRESPONDIENTE (4)"
	oPrint:Box( 865,1080,900,1150)    
	oPrint:say( 870,1090,RCV->RCV_CLASIM,oFont07)						 
	
	oPrint:say( 870,1180,STR0042,oFont06)									//"CLAVE DE LA ENTIDAD FEDERATIVA"
	oPrint:say( 890,1180,STR0043,oFont06)                          //"DONDE PRESTO SUS SERVICIOS (5)"
	oPrint:Box( 865,1610,900,1900)    
	oPrint:say( 870,1620,cEstado,oFont07)						 
	
	oPrint:say( 905,110,STR0044,oFont06n)									//RFC DEL(LOS) OTRO(S) PATRÓN(ES) (6):
	oPrint:Box( 930,110,970,810)    
	oPrint:say( 940,120,Alltrim(RCV->RCV_RFCOT1),oFont07)						 
	
	oPrint:Box( 930,840,970,1540)    
	oPrint:say( 940,850,Alltrim(RCV->RCV_RFCOT2),oFont07)						 
	
	oPrint:Box( 930,1570,970,2250)                                      
	oPrint:say( 940,1580,Alltrim(RCV->RCV_RFCOT3),oFont07)						 

	oPrint:line(980,100,980,nColMax)										//Linha Horizontal
	oPrint:say(990,900,"OTROS DATOS INFORMATIVOS",oFont08n)					//"OTROS DATOS INFORMATIVOS"
	oPrint:line(1020,100,1020,nColMax)										//Linha Horizontal	

	oPrint:say(1040,110,"MONTO DE LAS APORTACIONES VOLUNTARIAS",oFont06)		
	oPrint:say(1060,110,"EFECTUADAS",oFont06)
	oPrint:Box(1030,620,1080,1180)	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "1A  " }))> 0
		oPrint:say( 1030,980,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99" )),oFont08)	
		nPos := 0
	EndIf	

	oPrint:say(1120,110,"INDIQUE SI EL PATRÓN APLICÓ EL MONTO DE LAS APORTACIONES",oFont06)		
	oPrint:say(1140,110,"VOLUNTARIAS EN EL CÁLCULO DEL IMPUESTO",oFont06)
	oPrint:Box(1130,920,1180,1180)	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "1D  " }))> 0
		If (aFunc[nPos,2] > 0)
			oPrint:say( 1130,1000,"1",oFont08)			
		Else
			oPrint:say( 1130,1000,"2",oFont08)		
		EndIf
		nPos := 0
	EndIf
	
	oPrint:say(1040,1210,"MONTO DE LAS APORTACIONES VOLUNTARIAS",oFont06)					
	oPrint:say(1060,1210,"DEDUCIBLES PARA TRABAJADORES QUE",oFont06)						
	oPrint:say(1080,1210,"REALIZARÁN SU DECLARACIÓN",oFont06)								   
	oPrint:Box(1030,1680,1080,nColMax-5)
	If (nPos := Ascan(aFunc,{ |x| x[1] = "1C  " }))> 0
		oPrint:say( 1030,nColMax-400,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99" )),oFont08)	
		nPos := 0
	EndIf	
	
	oPrint:say(1120,1210,"MONTO DE LAS APORTACIONES VOLUNTARIAS",oFont06)
	oPrint:say(1140,1210,"DEDUCIBLES APLICADAS POR EL PATRÓN",oFont06)	
	oPrint:Box(1130,1680,1180,nColMax-5)	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "1D  " }))> 0
		oPrint:say( 1130,nColMax-400,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99" )),oFont08)	
		nPos := 0
	EndIf		

	oPrint:line(1230,100,1230,nColMax)										//Linha Horizontal
	
	oPrint:say( 1235,110,"2",oFont08n)										//2
	oPrint:say( 1235,900,"IMPUESTO SOBRE LA RENTA",oFont08n)									//"IMPUESTO SOBRE LA RENTA"
	oPrint:line(1270,100,1270,nColMax)										//Linha Horizontal
	oPrint:line(1270,0900,2080,0900)											//Linha Vertical
	oPrint:line(1270,1200,2080,1200)											//Linha Vertical
	oPrint:line(1270,2000,2080,2000)											//Linha Vertical

	oPrint:say( 1280,110,"A. TOTAL DE INGRESOS POR SUELDOS, SALARIOS",oFont06)								   //"A. TOTAL DE SUELDOS, SALARIOS Y CONCEPTOS"
	oPrint:say( 1300,110,"   Y CONCEPTOS ASIMILADOS (Campo Q, más el",oFont06)								   //"ASIMILADOS (Campo O, más el campo P de esta "
	oPrint:say( 1320,110,"   campo R de esta página, más los campos a, más i, más",oFont06)								   //"pagina, más los campos a más i, más m de la página "
	oPrint:say( 1340,110,"   m de la página2, más el campo S1 de la página 3)",oFont06)								   //"2, más el campo S1 de la página 3)"

	oPrint:say( 1290,500,""		,oFont07)							   //"   ASIMILADOS (Campo O, más el campo P de esta "
	oPrint:say( 1300,1210,"I. SUBSIDIO NO ACREDITABLE",oFont06)								   //"I. SUBSIDIO PARA EL EMPLEO"	
	oPrint:say( 1320,1210,"   (2007 y anteriores)",oFont06)                                 //"(2008 y posteriores)

	If (nPos := Ascan(aFunc,{ |x| x[1] = "2I  " }))> 0
		oPrint:say( 1300,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99" )),oFont08)	
		nPos := 0
	Endif

	oPrint:line(1370,100,1370,nColMax)										//Linha Horizontal

	oPrint:say( 1390,110,"B. IMPUESTO LOCAL A LOS INGRESOS POR ",oFont06)								   //
	oPrint:say( 1410,110,"   SUELDOS, SALARIOS Y EN GENERAL POR LA ",oFont06)								   //	
	oPrint:say( 1430,110,"   PRESTACIÓN DE UN SERVICIO PERSONAL ",oFont06)								   //	
	oPrint:Say( 1450,110,"   SUBORDINADO (7)",oFont06)

	If (nPos := Ascan(aFunc,{ |x| x[1] = "6T1 " }))> 0
		n2B := aFunc[nPos,2]		
		oPrint:say( 1420,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99" )),oFont08)		
		nImpLocal := aFunc[nPos,2]
		nPos := 0
	Endif
	
	oPrint:say( 1380,1210,"J. MONTO DEL SUBISIDIO PARA EL EMPLEO",oFont06)								   //"J. MONTO DEL SUBSIDIO ACREDITABLE   FRACCIÓN III "	
	oPrint:say( 1400,1210,"   QUE LE CORRESPONDIÓ AL TRABAJADOR",oFont06)								   //"(2)"	
	oPrint:say( 1420,1210,"   DURANTE EL EJERCICIO",oFont06)								   //"(2)"		
	oPrint:say( 1440,1210,"   (2008 y posteriores)(8)",oFont06)								   //"(2)"			

	If (nPos := Ascan(aFunc,{ |x| x[1] = "2J  " }))> 0
		oPrint:say( 1410,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99" )),oFont08)	
		nPos := 0
	Endif

	oPrint:line(1470,100,1470,nColMax)										//Linha Horizontal
	
	oPrint:say( 1500,110,"C. INGRESOS EXENTOS ",oFont06)								   //"C. INGRESOS EXENTOS (Campo T de esta página más el"	
	oPrint:Say( 1520,110,"   (Campo V de esta página más el campo c de la")
	oPrint:say( 1540,110,"   página 2, más el campo R1 de la página 3)",oFont06)								   //"campo c de la página 2, más el campo R1 de la página 3)"	
	
	oPrint:say( 1500,1210,"K. MONTO DEL SUBSIDIO ACREDITABLE",oFont06)								   //"K. MONTO DEL SUBSIDIO ACREDITABLE     FRACCIÓN  "	
	oPrint:say( 1520,1210,"FRACCIÓN III (2)",oFont06)								   //"IV (2)"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "2K  " }))> 0
		oPrint:say( 1510,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99" )),oFont08)	
		nPos := 0
	Endif

	oPrint:line(1570,100,1570,nColMax)										//Linha Horizontal
	
	oPrint:say( 1590,110,"D. TOTAL DE LAS APORTACIONES",oFont06)								   //"D. INGRESOS NO ACUMULABLES (Campo W de esta"	
	oPrint:say( 1610,110,"    VOLUNTARIAS DEDUCIBLES",oFont06)								   //"página más el campo g de la página 2)"	
	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "2D  " })) > 0
		n2D := aFunc[nPos,2]
		oPrint:say( 1600,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)
		nPos := 0
	Endif	

	oPrint:say( 1610,1210,"L. MONTO DEL SUBSIDIO ACREDITABLE",oFont06)								   //"L. IMPUESTO SOBRE INGRESOS ACUMULABLES"	
	oPrint:say( 1630,1210,"   FRACCIÓN IV(2)",oFont06)								   //"L. IMPUESTO SOBRE INGRESOS ACUMULABLES"		

	If (nPos := Ascan(aFunc,{ |x| x[1] = "2L  " })) > 0
		oPrint:say( 1620,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	
		nPos := 0
	Endif

	oPrint:line(1670,100,1670,nColMax)										//Linha Horizontal
	oPrint:say(	1700,110,"E. INGRESOS NO ACUMULABLES",oFont06)								   //str0057"E. INGRESOS  ACUMULABLES (A - B - C - D)"	
	oPrint:Say( 1720,110,"   (Campo Y de esta página, más el campo g de la página 2)",oFont06)
	
	oPrint:say( 1700,1210,"M. IMPUESTO SOBRE INGRESOS ACUMULABLES",oFont06)								   //"M. IMPUESTO SOBRE INGRESOS NO ACUMULABLES"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "2M  " }))> 0
		oPrint:say( 1700,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	
		nPos := 0
	EndIf
	oPrint:line(1770,100,1770,nColMax)										//Linha Horizontal
	
	oPrint:say( 1790,110,"F. INGRESOS ACUMULABLES",oFont06)
	oPrint:say( 1810,110,"   (A - B - C - D - E)",oFont06)	
	
	oPrint:say( 1790,1210,"N. IMPUESTO SOBRE INGRESOS NO ACUMULABLES",oFont06)
	If (nPos := Ascan(aFunc,{ |x| x[1] = "2N  " }))> 0
		oPrint:say( 1790,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	
		nPos := 0
	EndIf
	
	oPrint:line(1870,100,1870,nColMax)										//Linha Horizontal

	oPrint:say( 1900,110,"G. ISR CONFORME A LA TARIFA ANUAL",oFont06)								   //"G. SUBSIDIO ACREDITABLE "	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "2G  " }))> 0 .And. !Empty(RCV->RCV_EMCALA)
		oPrint:say( 1900,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	
		nPos := 0                                                                                       
	Endif                                                                                               
	
	oPrint:say( 1890,1210,"O. IMPUESTO SOBRE LA RENTA CAUSADO EN EL",oFont06)
	oPrint:say( 1910,1210,"    EJERCICIO QUE DECLARA (M+N)",oFont06)
	            
	oPrint:line(1980,100,1980,nColMax)										//Linha Horizontal
	
	oPrint:say( 2000,110,"H. SUBSIDIO ACREDITABLE",oFont06)								   //"H. SUBSIDIO NO ACREDITABLE"	
	oPrint:say( 2020,110,STR0231,oFont06)								   //"(2007 E ANTERIORES)"	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "2H  " }))> 0
		oPrint:say( 2000,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	
		nPos := 0
	Endif

	oPrint:say( 2000,1210,"P. IMPUESTO RETENIDO AL CONTRIBUYENTE",oFont06)
	oPrint:say( 2020,1210,"   (Campo Z de esta página, más los campos h, más j, ",oFont06)
	oPrint:say( 2040,1210,"   más n de la página 2, más los campos U1, más V1 de",oFont06)
	oPrint:say( 2060,1210,"   la página 3)",oFont06)	

	oPrint:line(2080,100,2080,nColMax)										//Linha Horizontal
		
	//Imagem lateral
	fRHLoadImg(@cPPS)
	oPrint:SayBitmap(2105,010,cPPS,080,540,,.F.) //"JUBILACIONES, PENSIONES O HABERES DEL RETIRO"

	oPrint:say( 2105,110,"3",oFont08n)										//3
	oPrint:say( 2105,900,STR0073,oFont08n)									//"PAGOS POR SEPARACIÓN"					
	oPrint:line(2140,100,2140,nColMax)										//Linha Horizontal
	oPrint:line(2140,0900,2640,0900)											//Linha Vertical
	oPrint:line(2140,1200,2640,1200)											//Linha Vertical
	oPrint:line(2140,2000,2640,2000)											//Linha Vertical
	
	oPrint:say( 2170,110,"Q. MONTO TOTAL DEL PAGO EN UNA SOLA",oFont06)								   //"P. MONTO TOTAL DEL PAGO EN UNA SOLA"					
	oPrint:say( 2190,110,"   EXHIBICIÓN (No deberá hacer anotación alguna en)",oFont06)								   //"EXHIBICIÓN (No deberá hacer anotación alguna"					
	oPrint:say( 2210,110,"   R,S y T)",oFont06)								   //"EXHIBICIÓN (No deberá hacer anotación alguna"						
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3Q  " })) > 0
		oPrint:say( 2190,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	
		lHas3Q := .T.
		nPos := 0
	Endif
	
	oPrint:say( 2190,1210,"V. INGRESOS EXENTOS",oFont06)								   //"U. INGRESOS EXENTOS"					
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3V  " })) > 0
		oPrint:say( 2190,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	oPrint:line(2240,100,2240,nColMax)										//Linha Horizontal
	
	oPrint:say( 2290,110,"R. INGRESOS TOTALES POR PAGO EN",oFont06)								   //"Q. INGRESOS TOTALES POR PAGO EN PARCIALIDADES "					
	oPrint:say( 2310,110,"   PARCIALIDADES (No hacer anotación alguna en Q)",oFont06)								   //"(No hacer anotación alguna en O)"					
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3R  " })) > 0
		If !lHas3Q
			oPrint:say( 2300,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	
			nPos := 0
		EndIf
	Endif
	
	oPrint:say( 2310,1210,"W. INGRESOS GRAVABLES",oFont06)								   //"V. INGRESOS GRAVABLES"					
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3W  " })) > 0
		oPrint:say( 2310,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0	
	Endif
	oPrint:line(2340,100,2340,nColMax)										//Linha Horizontal
	
	oPrint:say( 2370,110,"S. MONTO DIARIO PERCIBIDO POR JUBILACIONES, PENSIONES ",oFont06)								   //""R. MONTO DIARIO PERCIBIDO POR JUBILACIONES, PENSIONES  "					
	oPrint:say( 2390,110,"   O HABERES DE RETIRO EN PARCIALIDADES (No hacer anotación",oFont06)								   //"O HABERES DE RETIRO EN PARCIALIDADES (No deberá hacer "					
	oPrint:say( 2410,110,"   alguna en Q)",oFont06)								   //"alguna en O)"					
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3S  " })) > 0
		If !lHas3Q
			oPrint:say( 2380,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
			nPos := 0	
		EndIf
	Endif
	
	oPrint:say( 2390,1210,"X. INGRESOS ACUMULABLES",oFont06)								   //"W. INGRESOS ACUMULABLES"
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3X  " })) > 0
		oPrint:say( 2390 ,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0	
	Endif
	oPrint:line(2440,100,2440,nColMax)										//Linha Horizontal
	
	oPrint:say( 2460,110,"T. CANTIDAD QUE SE HUBIERA PERCIBIDO EN EL PERIODO DE NO",oFont06)								   //"S. CANTIDAD QUE SE HUBIERA PERCIBIDO EN EL PERIODO DE NO  "					
	oPrint:say( 2480,110,"   HABER PAGO ÚNICO POR JUBILACIONES, PENSIONES O HABERES",oFont06)								   //"HABER PAGO ÚNICO POR JUBILACIONES, PENSIONES O HABERES "					
	oPrint:say( 2500,110,"   DE RETIRO EN UNA SOLA EXHIBICIÓN (No hacer anotación ",oFont06)								   //"DE RETIRO EN UNA SOLA EXHIBICIÓN (No deberá hacer anotación "					
	oPrint:say( 2520,110,"   alguna en Q)",oFont06)								   //"alguna en O)"					
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3T  " })) > 0
		If !lHas3Q
			oPrint:say( 2480,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
			nPos := 0
		EndIf
	Endif
	
	oPrint:say( 2480,1210,"Y. INGRESOS NO ACUMULABLES",oFont06)								   //"X. INGRESOS NO ACUMULABLES"					
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3Y  " })) > 0
		oPrint:say( 2480,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0	
	Endif
	oPrint:line(2540,100,2540,nColMax)										//Linha Horizontal
	
	oPrint:say( 2590,110,"U. NÚMERO DE DÍAS (9)",oFont06)								   //"T. NUMERO DE DÍAS (8)"					
	
	oPrint:say( 2590,1210,"Z. IMPUESTO RETENIDO",oFont06)								   //Y. IMPUESTO RETENIDO "				
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3Z  " })) > 0
		oPrint:say( 2590,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0	
	Endif
	oPrint:line(2640,100,2640,nColMax)										//Linha Horizontal
	
	oPrint:say( 2710,150,"		" + OemToAnsi("(*) Es obligatorio requisitar estos campos"),oFont06)								   //"(*)		Es obligatorio requisitar estos campos"	
	oPrint:say( 2730,150,"		" + OemToAnsi("(1) Anotará A, B o C según corresponda al área geográfica que señala la Comisión Nacional de los Salarios Mínimos.   "),oFont06)								   //"(1)		Anotará A, B o C según corresponda al área geográfica que señala la Comisión Nacional de los Salarios Mínimos."	
	oPrint:say( 2750,150,"		" + OemToAnsi("(2) Únicamente para constancias del 2001, de conformidad con el Art. Segundo Transitorio del Decreto por el que se reforma el Art. 80-A de la LISR, publicado en el DOF el 29   "  ),oFont06)								   //"(2)	Únicamente para constancias del 2001, de conformidad con el Art. Segundo Transitorio del Decreto por el que se reforma el Art. 80-A de la LISR, publicado en el DOF el 29 de" 
	oPrint:say( 2770,150,"		" + OemToAnsi("	    de noviembre de 2001."),oFont06)								   //"noviembre de 2001."	
	oPrint:say( 2790,150,"		" + OemToAnsi("(3) Deberá utilizarse este campo cuando el patrón haya realizado cálculo anual de ISR y al trabajador le corresponda una proporción distinta a la de los demás trabajadores.    "),oFont06)								   //"(3)		Deberá utilizarse este campo cuando el patrón haya realizado cálculo anual de ISR y al trabajador le corresponda una proporción distinta a la de los demás trabajadores."	
	oPrint:say( 2810,150,"		" + OemToAnsi("(4) A. Miembros de las sociedades cooperativas de producción, B. Integrantes de sociedades y asociaciones civiles, C. Miembros de consejos directivos, de vigilancia, consultivos    "),oFont06)								   //"(4)		A. Miembros de las sociedades cooperativas de producción, B. Integrantes de sociedades y asociaciones civiles, C. Miembros de consejos directivos, de vigilancia, consultivos "	
	oPrint:say( 2830,150,"		" + OemToAnsi("	   o comisarios; D. Actividad empresarial (comisionistas), E. Honorarios asimilados a salarios, F. Ingresos en acciones o títulos valor, G. Otros      "),oFont06)								   //"o comisarios; D. Actividad empresarial (comisionistas), E. Honorarios asimilados a salarios, F. Ingresos en acciones o títulos valor, G. Otros"	
	oPrint:say( 2850,150,"		" + OemToAnsi("(5) 01 Aguascalientes, 02 Baja California, 03 Baja California Sur, 04 Campeche, 05 Coahuila, 06 Colima, 07 Chiapas, 08 Chihuahua, 09 Distrito Federal, 10 Durango, 11    "),oFont06)								   //"(5)		01 Aguascalientes, 02 Baja California, 03 Baja California Sur, 04 Campeche, 05 Coahuila, 06 Colima, 07 Chiapas, 08 Chihuahua, 09 Distrito Federal, 10 Durango, 11 "	
	oPrint:say( 2870,150,"		" + OemToAnsi("    Guanajuato,12 Guerrero, 13 Hidalgo, 14 Jalisco, 15 México, 16 Michoacán, 17 Morelos, 18 Nayarit, 19 Nuevo León, 20 Oaxaca, 21 Puebla, 22 Querétaro, 23 Quintana Roo, 24      "),oFont06)								   //"Guanajuato,12 Guerrero, 13 Hidalgo, 14 Jalisco, 15 México, 16 Michoacán, 17 Morelos, 18 Nayarit, 19 Nuevo León, 20 Oaxaca, 21 Puebla, 22 Querétaro, 23 Quintana Roo, 24 "	
	oPrint:say( 2890,150,"		" + OemToAnsi("	   San Luis Potosí, 25 Sinaloa, 26 Sonora, 27 Tabasco, 28 Tamaulipas, 29 Tlaxcala, 30 Veracruz, 31 Yucatán, 32 Zacatecas.   "),oFont06)								   //"San Luis Potosí, 25 Sinaloa, 26 Sonora, 27 Tabasco, 28 Tamaulipas, 29 Tlaxcala, 30 Veracruz, 31 Yucatán, 32 Zacatecas."	
	oPrint:say( 2910,150,"		" + OemToAnsi("(6) En caso de que el trabajador haya tenido más de un patrón en el ejercicio, deberá señalar el(los RFC de(los) otro(s) patrón(es).  "	),oFont06)								   //
	oPrint:say( 2930,150,"		" + OemToAnsi("(7) Aplicable a partir del 2005."),oFont06)	
	oPrint:say( 2950,150,"		" + OemToAnsi("(8) Se refiere al subsidio para el Empleo que corresponda, determinado conforme a la tabla contenida en las disposiciones fiscales.  "),oFont06)	
	oPrint:say( 2970,150,"		" + OemToAnsi("(9) Tratándose de pagos en parcialidades, numero de días del periodo. En el caso del pago  de jubilaciones, pensiones o haberes de retiro en una sola exhibición, numero de días  "),oFont06)								   //(9)		Tratándose de pagos en parcialidades, numero de días del periodo. En el caso del pago  de jubilaciones, pensiones o haberes de retiro en una sola exhibición, numero de días "	
	oPrint:say( 2990,150,"		" + OemToAnsi("    comprendidos entre la fecha en que se realizó el pago y el 31 de diciembre del año de que se trate.    "),oFont06)								   //comprendido entre la fecha en que se realizó el pago y el 31 de diciembre del año en que se trata."	
	
	oPrint:say( 3040,850,STR0105,oFont06n)								   //"SE EXPIDE POR DUPLICADO"	
	oPrint:say( 3070,740,STR0106,oFont06)								   //"Original - Trabajador o Asimilados a Salarios Duplicado-Retenedor"	
	/***********************************************************************************/
	//Formulas e impressao dos campos com somatorios
	/***********************************************************************************/
	//Campo 2O 
	//3Y + 2H + 2N + 6U1 + 6V1
	nAuxSoma	:= 0
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3Y  " })) > 0
		nAuxSoma += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3H  " })) > 0
		nAuxSoma += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "4J  " })) > 0
		nAuxSoma += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "4N  " })) > 0
		nAuxSoma += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6U1 " })) > 0
		nAuxSoma += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6V1 " })) > 0
		nAuxSoma += aFunc[nPos,2]
	Endif     

	//Fim Campo O
	
	//Calcula nImpRet
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3Y  " })) > 0
		nImpRet += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "2H  " })) > 0
		nImpRet += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "2J  " })) > 0
		nImpRet += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "4N  " })) > 0
		nImpRet += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6U1 " })) > 0
		nImpRet += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6V1 " })) > 0
		nImpRet += aFunc[nPos,2]
	Endif                                                       
	//Fim Calculo nImpRet
	
	//Calcula campo nQ1 e nR1
	                             
	nAuxSoma	:= 0	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5OG " })) > 0
		nAuxSoma += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5PG " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5QG " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5RG " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5SG " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5TG " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5UG " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5VG " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5WG " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5XG " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5YG " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5ZG " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5A1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5B1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5C1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5D1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5E1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5F1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5G1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5H1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5I1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5J1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5K1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5L1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5M1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5N1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5O1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5P1G" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	n6Q1 := nAuxSoma
	
	//n6r1
	nAuxSoma	:= 0	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5OE " })) > 0
		nAuxSoma += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5PE " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5QE " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5RE " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5SE " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5TE " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5UE " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5VE " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5WE " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5XE " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5YE " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5ZE " })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5A1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5B1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf                                   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5C1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5D1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5E1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5F1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5G1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5H1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5I1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5J1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5K1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5L1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5M1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5N1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5O1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5P1E" })) > 0
		nAuxSoma += aFunc[nPos,2]
	EndIf     
	n6R1 := nAuxSoma
	
	//Fim do calculo de nQ1 e nR1
	
	//Calcula campo 4m
	If (nPos := Ascan(aFunc,{ |x| x[1] = "41K " })) > 0
		nValorMercado := aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "41L " })) > 0
		nPrecAcTit := aFunc[nPos,2]
	Endif
	If nValorMercado > nPrecAcTit
		n4M := nValorMercado - nPrecAcTit
	EndIf 
	//Fim do calculo campo 4m
	
	//Campo 2A
	//3P + 3Q + 2J + 2M + 6S1 := (nQ1 + nR1) 
	n2A := 0
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3Q  " })) > 0  
	 	n2A += aFunc[nPos,2]
	EndIf
	If !lHas3Q
		If (nPos := Ascan(aFunc,{ |x| x[1] = "3R  " })) > 0  
		 	n2A += aFunc[nPos,2]
		EndIf	
	EndIf
	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3A  " })) > 0  
	 	n2A += aFunc[nPos,2]
	EndIf	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "4I  " })) > 0  
	 	n2A += aFunc[nPos,2]
	EndIf
	
	//SOMA O CAMPO S1 E 4M
	n2A += (n6Q1 + n6R1 + n4M)
	If n2A > 0
		oPrint:say( 1300,1000,Alltrim(Transform( n2A, "@R 999,999,999,999.99")),oFont08)	
		
	Endif
	
	//Calcula total AS
	nTotalAs := 0
	If nImpRet > 0
		nTotalAs += nImpRet
	EndIf
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3P  " })) > 0  
	 	nTotalAs += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "2I  " })) > 0
	 	nTotalAs += aFunc[nPos,2]
	Endif 	        
	If (nPos := Ascan(aFunc,{ |x| x[1] = "4K  " })) > 0
		nValorMercado := aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "4L  " })) > 0
		nPrecAcTit := aFunc[nPos,2]
	Endif
	If nValorMercado > nPrecAcTit
		nTotalAs += ( nValorMercado - nPrecAcTit)
	Endif		
	If nTotGrav + nTotIsen > 0
		nTotalAs += (nTotGrav + nTotIsen)
	Endif	
	
	//Fim Campo 2A 
	
	//Campo 2C
	//3U + 3C + (6R1:= 5O + 5P1 )
	nPos := 0  
	nIngExen := 0

	If (nPos := Ascan(aFunc,{ |x| x[1] = "3V  " })) > 0
		nIngExen += aFunc[nPos,2]
	Endif	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3C  " })) > 0
		nIngExen += aFunc[nPos,2]
	Endif

	nIngExen += N6R1  
	n2C := nIngExen
	If nIngExen > 0
		oPrint:say( 1510,1000,Alltrim(Transform( nIngExen, "@R 999,999,999,999.99")),oFont08)	
	Endif
	//Fim Campo C    
	
	//Campo 2D    
	//3X + 3G
	nPos := 0  
	nIngNAcum := 0
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3Y  " })) > 0
		nIngNAcum += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3G  " })) > 0
		nIngNAcum += aFunc[nPos,2]
	Endif    
	
	n2E := nIngNAcum
	If nIngNAcum > 0
		oPrint:say( 1700,1050,Alltrim(Transform( nIngNAcum, "@R 999,999,999,999.99")),oFont08)				
	Endif	
	//Fim Campo D 
	
	//Campo 2E
	If (n2A - n2B + n2C + n2D + n2E) > 0
		oPrint:say( 1790,1050,Alltrim(Transform( (n2A - n2B - n2C - n2D - n2E), "@R 999,999,999,999.99")),oFont08)		
	Endif    
	//Fim Campo E
	
	//Campo 3N 
	//2L + 2M
	nImpIng := 0
	If (nPos := Ascan(aFunc,{ |x| x[1] = "2M  " }))> 0
		nImpIng += aFunc[nPos,2]
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "2N  " })) > 0
		nImpIng += aFunc[nPos,2]
	Endif   
	If nImpIng > 0
		oPrint:say( 1900,2150,Alltrim(Transform( nImpIng, "@R 999,999,999,999.99")),oFont08)			
	Endif
	//Fim Campo N 
	
	//P. IMPUESTO RETENIDO AL CONTRIBUYENTE
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3Z  " })) > 0
		n2P += aFunc[nPos,2]
	EndIf	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3H  " })) > 0
		n2P += aFunc[nPos,2]
	EndIf
	If (nPos := Ascan(aFunc,{ |x| x[1] = "4J  " })) > 0
		n2P += aFunc[nPos,2]
	EndIf	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "41N " })) > 0
		n2P += aFunc[nPos,2]
	EndIf		
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6U1 " })) > 0
		n2P += aFunc[nPos,2]
	EndIf
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6V1 " })) > 0
		n2P += aFunc[nPos,2]
	EndIf   

	If ( n2P > 0)
		oPrint:say( 2000,2150,Alltrim(Transform( n2P, "@R 999,999,999,999.99")),oFont08)		
	EndIf
	
	// Campo 3T   
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3U  " })) > 0
		oPrint:say( 2590,1050,StrZero(nDiasTrab,3),oFont08)
	EndIf
	//Fim Campo 3T  
	
	/**********************************************************************************/
	
	// Cerra la pagina
	oPrint:EndPage()
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fSegPag	³ Autor ³ Recursos Humanos      ³ Data ³ 04.11.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Impressao da Segunda Pagina de Constancias                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fSegPag()
	Local nPos 		:= 0
	Local lMonto 	:= .F.
	
	Local cOPS		:= "OPS.BMP"

	oPrint:StartPage() 			//Inicia uma nova pagina  

	oPrint:say( 100,110,"2",oFont10)										//2

	oPrint:say( 090,2100,STR0221,oFont07)				 				 		//"Reverso
	oPrint:say( 085,2280,"37",oFont11n)				 				 		//"37
	oPrint:say( 160,2250,"37P2A09",oFont06)				 				    //37P2A08	
	oPrint:say( 160,2120,RCV->RCV_MAT,oFont08)                              //Matricula del empleado 

	//Imagem lateral
	fRHLoadImg(@cOPS)
	oPrint:SayBitmap(225,010,cOPS,080,540,,.F.) //"JUBILACIONES, PENSIONES O HABERES DEL RETIRO"

	oPrint:Box(200,100,2640,nColMax) 					 					//Box Externo      
	oPrint:say( 225,110,"3",oFont08n)										//3
	oPrint:say( 225,900,STR0112,oFont08n)									//"PAGOS POR SEPARACIÓN (Continuación)"	
	oPrint:line(260,100,260,nColMax)										//Linha Horizontal
	oPrint:line(260,0900,660,0900)											//Linha Vertical
	oPrint:line(260,1200,660,1200)											//Linha Vertical
	oPrint:line(260,2000,660,2000)											//Linha Vertical

	oPrint:say( 300,110,STR0113,oFont06)								   //""a. MONTO TOTAL PAGADO"	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3A  " })) > 0
		oPrint:say( 300,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
		lMonto := .T.
	Endif

	oPrint:say( 300,1210,STR0117,oFont06)								   //"3e.  INGRESOS ACUMULABLES"	
	oPrint:say( 320,1210,AllTrim(STR0118),oFont06)									//"(Ultimo sueldo mensual ordinario) (2)"	
	If lMonto .And. Len(aRCP) > 0
		oPrint:say( 310,2150,Alltrim(Str(Round(aRCP[1,3],0))),oFont08)	 
	Endif
	oPrint:line(360,100,360,nColMax)										//Linha Horizontal
	oPrint:say( 390,110,("b. NúMERO DE AÑOS DE SERVICIO DEL TRABAJADOR"),oFont06)								   //"b. NUMERO DE AÑOS DE SERVICIO DEL TRABAJADOR"	
	oPrint:say( 390,1050,If(nAnosTTem==0,'',AllTrim(Str(nAnosTTem))),oFont08)	 
	                                                       '
	oPrint:say( 390,1210,STR0119,oFont06)								   //"f.  IMPUESTO CORRESPONDIENTE AL ULTIMO   "	
	oPrint:say( 410,1210,AllTrim(STR0120),oFont06)								   //"SUELDO MENSUAL ORDINARIO"	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3F  " })) > 0
		oPrint:say( 400,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	oPrint:line(460,100,460,nColMax)										//Linha Horizontal
	                      
	oPrint:say( 500,110,STR0115,oFont06)								   //"c. INGRESOS EXENTOS"	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3C  " })) > 0
		oPrint:say( 500,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	
	oPrint:say( 500,1210,STR0121,oFont06)								   //"g.  INGRESOS NO ACUMULABLES"	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3G  " })) > 0
		oPrint:say( 500,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(560,100,560,nColMax)										//Linha Horizontal
	
	oPrint:say( 590,110,STR0116,oFont06)								   //"d.  INGRESOS GRAVADOS"	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3D  " })) > 0
		oPrint:say( 590,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:say( 590,1210,STR0122,oFont06)								   //"h.  IMPUESTO RETENIDO"	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "3H  " })) > 0
		oPrint:say( 590,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	oPrint:line(660,100,660,nColMax)										//Linha Horizontal

	oPrint:say( 685,110,"4",oFont08n)										//4
	oPrint:say( 685,850,STR0123,oFont08n)									//"INGRESOS ASIMILADOS A SALARIOS (Sin incluir (3))"	
	oPrint:line(720,100,720,nColMax)											//Linha Horizontal
	oPrint:line(720,0900,820,0900)											//Linha Vertical
	oPrint:line(720,1200,820,1200)											//Linha Vertical
	oPrint:line(720,2000,820,2000)											//Linha Vertical

	oPrint:say( 750,110,STR0124,oFont06)								   //"i.  INGRESOS ASIMILADOS A SALARIOS"		
	If (nPos := Ascan(aFunc,{ |x| x[1] = "4I  " })) > 0
		oPrint:say( 750,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	
	oPrint:say( 750,1210,STR0125,oFont06)								   //"j.  IMPUESTOS RETENIDOS DURANTE EL EJERCICIO"	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "4J  " })) > 0
		oPrint:say( 750,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	oPrint:line(820,100,820,nColMax)											//Linha Horizontal
	
	oPrint:say( 845,110,STR0126,oFont08n)									//"4.1  INGRESOS EN ACCIONES O TÍTULO VALOR QUE REPRESENTAN BIENES (Por ejercer la opción otorgada por el empleador)"	
	oPrint:line(880,100,880,nColMax)											//Linha Horizontal
	oPrint:line(880,0900,1080,0900)											//Linha Vertical
	oPrint:line(880,1200,1080,1200)											//Linha Vertical
	oPrint:line(880,2000,1080,2000)											//Linha Vertical
	
	oPrint:say( 910,110,STR0127,oFont06)								   //"k. VALOR DE MERCADO DE LAS ACCIONES O TÍTULOS VALOR "	
	oPrint:say( 930,110,AllTrim(STR0128),oFont06)								   //"AL EJERCER LA OPCIÓN (4)"	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "41K " })) > 0
		nValorMercado := aFunc[nPos,2]
		oPrint:say( 920,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	
	oPrint:say( 1010,110,STR0129,oFont06)								   //"l. PRECIO ESTABLECIDO AL OT	ORGARLSE LA OPCIÓN DE "	
	oPrint:say( 1030,110,AllTrim(STR0130),oFont06)								   //"INGRESOS EN ACCIONES O TÍTULOS VALOR"	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "41L " })) > 0
		nPrecAcTit := aFunc[nPos,2]
		oPrint:say( 1020,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	
	oPrint:say( 910,1210,STR0131,oFont06)								   //"m. INGRESO ACUMULABLE (k - l siempre que k sea "	
	oPrint:say( 930,1210,AllTrim(STR0132),oFont06)								   //"mayor)"	
	If nValorMercado > nPrecAcTit
		oPrint:say( 920,2150,Alltrim(Str(nValorMercado - nPrecAcTit)),oFont08)	 
		nPos := 0
	Endif
	oPrint:line(980,100,980,nColMax)											//Linha Horizontal
                                                                                                     
                                                                                                      
	oPrint:say( 1010,1210,STR0133,oFont06)								   //"n.  IMPUESTO RETENIDO."	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "41N " })) > 0
		oPrint:say( 1010,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	oPrint:line(1080,100,1080,nColMax)											//Linha Horizontal

	oPrint:say( 1105,110,"5",oFont08n)										//5
	oPrint:say( 1105,800,STR0134,oFont08n)									//"PAGOS DEL PATRÓN EFECTUADOS A SUS TRABAJADORES (Incluyendo (3))"	
	oPrint:line(1140,100,1140,nColMax)											//Linha Horizontal
	
	oPrint:say( 1170,1250,STR0135,oFont08n)									//"GRAVADO"	
	oPrint:say( 1170,1900,STR0136,oFont08n)									//"EXENTO
	oPrint:line(1200,100,1200,nColMax)											//Linha Horizontal
	oPrint:line(1200,1000,2640,1000)											//Linha Vertical
	oPrint:line(1200,1650,2640,1650)											//Linha Vertical

	oPrint:say( 1240,110,STR0137,oFont06)								   //"o. SUELDOS, SALARIOS, RAYAS Y JORNALES"	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5OG " })) > 0
		oPrint:say( 1240,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5OE " })) > 0
		oPrint:say( 1240,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(1280,100,1280,nColMax)											//Linha Horizontal
	oPrint:say( 1320,110,STR0138,oFont06)								   //"p. GRATIFICACIÓN ANUAL"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5PG " })) > 0
		oPrint:say( 1320,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5PE " })) > 0
		oPrint:say( 1320,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(1360,100,1360,nColMax)											//Linha Horizontal
	oPrint:say( 1400,110,STR0139,oFont06)								   //"q. VIÁTICOS Y GASTOS DE VIAJE"	
	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5QG " })) > 0
		oPrint:say( 1400,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5QE " })) > 0
		oPrint:say( 1400,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(1440,100,1440,nColMax)											//Linha Horizontal
	oPrint:say( 1480,110,STR0140,oFont06)								   //"r. TIEMPO EXTRAORDINARIO"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5RG " })) > 0
		oPrint:say( 1480,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5RE " })) > 0
		oPrint:say( 1480,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(1520,100,1520,nColMax)											//Linha Horizontal
	oPrint:say( 1560,110,STR0141,oFont06)								   //"s. PRIMA VACACIONAL"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5SG " })) > 0
		oPrint:say( 1560,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5SE " })) > 0
		oPrint:say( 1560,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(1600,100,1600,nColMax)											//Linha Horizontal
	oPrint:say( 1640,110,STR0142,oFont06)								   //"t. PRIMA DOMINICAL"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5TG " })) > 0
		oPrint:say( 1640,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5TE " })) > 0
		oPrint:say( 1640,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(1680,100,1680,nColMax)											//Linha Horizontal
	oPrint:say( 1720,110,STR0143,oFont06)								   //"u. PARTICIPACIÓN DE LOS TRABAJADORES EN LAS UTILIDADES    (PTU)"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5UG " })) > 0
		oPrint:say( 1720,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5UE " })) > 0
		oPrint:say( 1720,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(1760,100,1760,nColMax)											//Linha Horizontal
	oPrint:say( 1800,110,STR0144,oFont06)								   //"v. REEMBOLSO DE GASTOS MÉDICOS, DENTALES Y HOSPITALARIOS"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5VG " }))> 0
		oPrint:say( 1800,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5VE " })) > 0
		oPrint:say( 1800,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(1840,100,1840,nColMax)											//Linha Horizontal
	oPrint:say( 1880,110,STR0145,oFont06)								   //"w. FONDO DE AHORRO"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5WG " })) > 0
		oPrint:say( 1880,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5WE " })) > 0
		oPrint:say( 1880,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(1920,100,1920,nColMax)											//Linha Horizontal
	oPrint:say( 1960,110,STR0146,oFont06)								   //"x. CAJA DE AHORRO"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5XG " })) > 0
		oPrint:say( 1960,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5XE " })) > 0
		oPrint:say( 1960,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(2000,100,2000,nColMax)											//Linha Horizontal
	oPrint:say( 2040,110,STR0147,oFont06)								   //"y. VALES PARA DESPENSA"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5YG " })) > 0
		oPrint:say( 2040,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5YE " })) > 0
		oPrint:say( 2040,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(2080,100,2080,nColMax)											//Linha Horizontal
	oPrint:say( 2120,110,STR0148,oFont06)								   //"z. AYUDA PARA GASTOS DE FUNERAL"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5ZG " })) > 0
		oPrint:say( 2120,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5ZE " })) > 0
		oPrint:say( 2120,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(2160,100,2160,nColMax)											//Linha Horizontal
	oPrint:say( 2200,110,STR0149,oFont06)								   //"A1. CONTRIBUCIONES A CARGO DEL TRABAJADOR PAGADAS POR EL PATRÓN"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5A1G" })) > 0
		oPrint:say( 2200,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5A1E" })) > 0
		oPrint:say( 2200,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(2240,100,2240,nColMax)											//Linha Horizontal
	oPrint:say( 2280,110,STR0150,oFont06)								   //"B1. PREMIO POR PUNTUALIDAD"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5B1G" })) > 0
		oPrint:say( 2280,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5B1E" })) > 0
		oPrint:say( 2280,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(2320,100,2320,nColMax)											//Linha Horizontal
	oPrint:say( 2360,110,STR0151,oFont06)								   //"C1. PRIMA DE SEGURO DE VIDA"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5C1G" })) > 0
		oPrint:say( 2360,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5C1E" })) > 0
		oPrint:say( 2360,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(2400,100,2400,nColMax)											//Linha Horizontal
	oPrint:say( 2440,110,STR0152,oFont06)								   //"D1. SEGURO DE GASTOS MÉDICOS MAYORES"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5D1G" })) > 0
		oPrint:say( 2440,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5D1E" })) > 0
		oPrint:say( 2440,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(2480,100,2480,nColMax)											//Linha Horizontal
	oPrint:say( 2520,110,STR0153,oFont06)								   //"E1. VALES PARA RESTAURANTE"	

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5E1G" })) > 0
		oPrint:say( 2520,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5E1E" })) > 0
		oPrint:say( 2520,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif      

oPrint:line(2560,100,2560,nColMax)										//Linha Horizontal
oPrint:say( 2600,110,STR0160,oFont06)								   //"F1. VALES PARA GASOLINA"
If (nPos := Ascan(aFunc,{ |x| x[1] = "5F1G" })) > 0
	oPrint:say( 2600,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
	nPos := 0
Endif
If (nPos := Ascan(aFunc,{ |x| x[1] = "5F1E" })) > 0
	oPrint:say( 2600,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
	nPos := 0
Endif

oPrint:line(2640,100,2640,nColMax)											//Linha Horizontal    

oPrint:say( 2730,150,STR0154,oFont06)								   //"(1)Incluyendo, entre otros, prima de antigüedad e indemnizaciones."	
oPrint:say( 2755,150,STR0155,oFont06)								   //"(2)Si el pago por separación es menor al último  sueldo mensual ordinario, deberá anotar el pago por separación."	
oPrint:say( 2780,150,STR0156,oFont06)								   //"(3)Funcionarios y trabajadores de la Federación, de las Entidades Federativas y de los Municipios, así como miembros de las fuerzas armadas."	
oPrint:say( 2805,150,STR0157,oFont06)								   //"(4)Si la opción para adquirir acciones o títulos valor se otorgó antes del 1° de enero de 2005, se anotará el valor de mercado que tenían dichas acciones o títulos valor al "	
oPrint:say( 2830,150,STR0158,oFont06)								   //""31 dediciembre de 2004."	
	
	// Cerra la pagina
	oPrint:EndPage()

Return Nil  
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fTerPag   ºAutor  ³Silvia Taguti       º Data ³  01/04/07   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Impressao da Terceira Pagina de Constancias                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fTerPag()

	Local cDRL	:= "DRL.BMP"
	Local cSim	:= " "
	Local cNao	:= " "

	oPrint:StartPage() 			//Inicia uma nova pagina  

	oPrint:say( 100,110,"3",oFont10)											//3
	oPrint:say( 090,2100,STR0220,oFont07)				 				 		//"Anverso
	oPrint:say( 085,2280,"37",oFont11n)				 				 		   //"37
	//oPrint:say( 160,2250,cFormato,oFont06)				 				    //37P3A08
	oPrint:say( 160,2250,"37P3A09",oFont06)				 				    //37P3A08
	oPrint:say( 160,2120,RCV->RCV_MAT,oFont08)                              //Matricula del empleado 

	oPrint:Box(200,100,2510,nColMax) 					 					//Box Externo      
	oPrint:say( 225,110,"5",oFont08n)										//5
	oPrint:say( 225,800,STR0159,oFont08n)									//" PAGOS DEL PATRÓN EFECTUADOS A SUS TRABAJADORES (Incluyendo (1)) (Continuación)"	
	oPrint:line(260,100,260,nColMax)											//Linha Horizontal

	oPrint:say( 260,1250,STR0135,oFont08n)									//"GRAVADO"	
	oPrint:say( 260,1900,STR0136,oFont08n)									//"EXENTO
	oPrint:line(290,100,290,nColMax)										//Linha Horizontal
	oPrint:line(290,1000,1100,1000)											//Linha Vertical
	oPrint:line(290,1650,1100,1650)											//Linha Vertical
	
	oPrint:say( 340,110,STR0161,oFont06)								   //"G1. VALES PARA ROPA"
	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5G1G" })) > 0
		oPrint:say( 340,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	
	If (nPos := Ascan(aFunc,{ |x| x[1] = "5G1E" })) > 0
		oPrint:say( 340,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(380,100,380,nColMax)										//Linha Horizontal
	oPrint:say( 420,110,STR0162,oFont06)								   //"H1. AYUDA PARA RENTA"

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5H1G" })) > 0
		oPrint:say( 420,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5H1E" })) > 0
		oPrint:say( 420,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(460,100,460,nColMax)										//Linha Horizontal
	oPrint:say( 500,110,STR0163,oFont06)								   //"I1. AYUDA PARA ARTÍCULOS ESCOLARES"

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5I1G" })) > 0
		oPrint:say( 500,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5I1E" })) > 0
		oPrint:say( 500,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(540,100,540,nColMax)										//Linha Horizontal
	oPrint:say( 580,110,STR0164,oFont06)								   //"J1.DOTACIÓN O AYUDA PARA ANTEOJOS"

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5J1G" })) > 0
		oPrint:say( 580,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5J1E" })) > 0
		oPrint:say( 580,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(620,100,620,nColMax)										//Linha Horizontal
	oPrint:say( 640,110,STR0165,oFont06)								   //"K1. AYUDA PARA TRANSPORTE"

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5K1G" })) > 0
		oPrint:say( 640,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5K1E" })) > 0
		oPrint:say( 640,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(700,100,700,nColMax)										//Linha Horizontal
	oPrint:say( 740,110,STR0166,oFont06)								   //"L1. CUOTAS SINDICALES PAGADAS POR EL PATRÓN"

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5L1G" })) > 0
		oPrint:say( 740,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5L1E" })) > 0
		oPrint:say( 740,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(780,100,780,nColMax)										//Linha Horizontal	
	oPrint:say( 820,110,STR0167,oFont06)								   //"M1. SUBSIDIOS POR INCAPACIDAD"

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5M1G" })) > 0
		oPrint:say( 820,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5M1E" })) > 0
		oPrint:say( 820,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(860,100,860,nColMax)										//Linha Horizontal
	oPrint:say( 900,110,STR0168,oFont06)								   //"N1. BECAS PARA TRABAJADORES Y/O SUS HIJOS"

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5N1G" })) > 0
		oPrint:say( 900,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5N1E" })) > 0
		oPrint:say( 900,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(940,100,940,nColMax)										//Linha Horizontal
	
	oPrint:say( 980,110,STR0169,oFont06)								   //"O1. PAGOS EFECTUADOS POR OTROS EMPLEADORES (2) (3)"

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5O1G" })) > 0
		oPrint:say( 980,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5O1E" })) > 0
		oPrint:say( 980,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(1020,100,1020,nColMax)										//Linha Horizontal
	
	oPrint:say( 1060,110,STR0170,oFont06)								   //"P1. OTROS INGRESOS POR SALARIOS"

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5P1G" })) > 0
		oPrint:say( 1060,1300,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	If (nPos := Ascan(aFunc,{ |x| x[1] = "5P1E" })) > 0
		oPrint:say( 1060,2000,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif

	oPrint:line(1100,100,1100,nColMax)										//Linha Horizontal
	
	oPrint:say( 1125,110,"6",oFont08n)										//6
	oPrint:say( 1125,900,STR0171,oFont08n)									//"IMPUESTO SOBRE LA RENTA POR SUELDOS Y SALARIOS"
	oPrint:line(1160,100,1160,nColMax)										//Linha Horizontal
	oPrint:line(1160,0900,1860,0900)											//Linha Vertical
	oPrint:line(1160,1200,1860,1200)											//Linha Vertical
	oPrint:line(1160,2000,1860,2000)											//Linha Vertical
	
	oPrint:say( 1190,110,STR0172,oFont06)								   //"Q1.  SUMA DEL INGRESO GRAVADO POR SUELDOS Y "
	oPrint:say( 1210,110,STR0173,oFont06)								   //"SALARIOS (Suma de los campos o al P1 de la columna "
	oPrint:say( 1230,110,STR0174,oFont06)								   //'"gravado")'
	
	If n6Q1 > 0
		oPrint:say( 1210,1000,Alltrim(Transform( n6Q1, "@R 999,999,999,999.99")),oFont08)	 		
	EndIf
	
	oPrint:line(1260,100,1260,nColMax)										//Linha Horizontal
	
	oPrint:say( 1290,110,STR0175,oFont06)								   //"R1. SUMA DEL INGRESO EXENTO POR SUELDOS Y "
	oPrint:say( 1310,110,"    SALARIOS (Suma de los campos o de la página 2 al P1 de",oFont06)								   //'SALARIOS (Suma de la o a la P1 de la columna "exento")'
	oPrint:say( 1330,110,"    la columna 'exento' de la página 3)",oFont06)
	
	If n6R1 > 0
		oPrint:say( 1300,1000,Alltrim(Transform( n6R1, "@R 999,999,999,999.99")),oFont08)	 		
	EndIf
	
	oPrint:say( 1190,1210,STR0189,oFont06)								   //"X1. SALDO A FAVOR DEL EJERCICIO ANTERIOR NO COMPENSADO"
	oPrint:say( 1210,1210,STR0190,oFont06)								   //"DURANTE EL EJERCICIO QUE AMPARA LA CONSTANCIA"
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6X1 " })) > 0
		oPrint:say( 1200,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	oPrint:line(1360,100,1360,nColMax)										//Linha Horizontal
	
	oPrint:say( 1390,110,STR0177,oFont06)								   //"S1. SUMA DE INGRESOS POR SUELDOS Y SALARIOS "
	oPrint:say( 1410,110,STR0178,oFont06)								   //"(Q1 + R1)"
	If nTotGrav + nTotIsen > 0 
		oPrint:say( 1400,1000,Alltrim(Transform( (n6Q1 + n6R1), "@R 999,999,999,999.99")),oFont08)			
	Endif
	
	oPrint:say( 1290,1210,STR0191,oFont06)								   //"Y1. SUMA DE LAS CANTIDADES QUE  POR CONCEPTO  DE CRÉDITO AL "
	oPrint:say( 1310,1210,STR0192,oFont06)								   //"SALARIO LE CORRESPONDIÓ AL   TRABAJADOR (5)"
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6Y1 " })) > 0
		oPrint:say( 1300,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	oPrint:line(1460,100,1460,nColMax)										//Linha Horizontal
	
	oPrint:say( 1480,110,STR0179,oFont06)								   //"T1. MONTO DEL IMPUESTO LOCAL A LOS INGRESOS POR "
	oPrint:say( 1500,110,STR0180,oFont06)								   //"SUELDOS, SALARIOS Y EN GENERAL POR LA "
	oPrint:say( 1520,110,STR0181,oFont06)								   //"PRESTACION DE UN SERVICIO PERSONAL"
	oPrint:say( 1540,110,STR0182,oFont06)								   //"SUBORDINADO RETENIDO (4)"
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6T1 " })) > 0
		oPrint:say( 1500,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	
	oPrint:say( 1400,1210,STR0193,oFont06)								   //"Z1. CRÉDITO AL SALARIO ENTREGADO EN EFECTIVO   AL TRABAJADOR "
	oPrint:say( 1420,1210,STR0194,oFont06)								   //"DURANTE EL EJERCICIO (6)"
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6Z1 " })) > 0 
		oPrint:say( 1400,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif 
	
	oPrint:line(1560,100,1560,nColMax)										//Linha Horizontal
	
	oPrint:say( 1610,110,STR0183,oFont06)								   //"U1. IMPUESTO RETENIDO DURANTE EL EJERCICIO"
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6U1 " })) > 0
		oPrint:say( 1610,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	
	oPrint:say( 1490,1210,STR0195,oFont06)								   //"a1. MONTO TOTAL DE INGRESOS OBTENIDOS POR  CONCEPTO DE "
	oPrint:say( 1510,1210,STR0196,oFont06)								   //"PRESTACIONES DE PREVISIÓN  SOCIAL"
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6A1 " })) > 0 
		oPrint:say( 1500,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif 
	
	oPrint:line(1660,100,1660,nColMax)										//Linha Horizontal
	
	oPrint:say( 1690,110,STR0184,oFont06)								   //"V1. IMPUESTO RETENIDO POR OTRO(S) PATRÓN(ES) "
	oPrint:say( 1710,110,STR0185,oFont06)								   //"DURANTE EL EJERCICIO (2)"
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6V1 " })) > 0
		oPrint:say( 1700,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	
	oPrint:say( 1590,1210,STR0197,oFont06)								   //"b1. SUMA DE INGRESOS EXENTOS POR CONCEPTO"
	oPrint:say( 1610,1210,STR0198,oFont06)								   //"DE PRESTACIONES DE PREVISIÓN SOCIAL"

	If (nPos := Ascan(aFunc,{ |x| x[1] = "6B1 " })) > 0 
		oPrint:say( 1600,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	
	oPrint:line(1760,100,1760,nColMax)										//Linha Horizontal
	
	oPrint:say( 1790,110,STR0186,oFont06)								   //"W1. SALDO A FAVOR DETERMINADO EN EL EJERCICIO QUE "
	oPrint:say( 1810,110,STR0187,oFont06)								   //"DECLARA QUE EL PATRÓN COMPENSARA DURANTE EL"
	oPrint:say( 1830,110,STR0188,oFont06)								   //"SIGUIENTE EJERCICIO O SOLICITARA SU DEVOLUCIÓN."
		 
	If (nPos := Ascan(aFunc,{ |x| x[1] = "6W1 " })) > 0
		oPrint:say( 1790,1050,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif
	
	oPrint:say( 1690,1210,STR0228,oFont06)								   //"c1. MONTO DEL SUBSIDIO PARA EL EMPLEO"
	oPrint:say( 1710,1210,STR0229,oFont06)								   //"ENTREGADO EM EFECTIVO AL TRABAJADOR"
	oPrint:say( 1730,1210,STR0230 + " (7)",oFont06)								   //"DURANTE EL EJERCICIO QUE DECLARA"

	If (nPos := Ascan(aFunc,{ |x| x[1] = "6C1 " })) > 0 
		oPrint:say( 1700,2150,Alltrim(Transform( aFunc[nPos,2], "@R 999,999,999,999.99")),oFont08)	 
		nPos := 0
	Endif   
	
	oPrint:line(1860,100,1860,nColMax)										//Linha Horizontal
	
	oPrint:say( 1885,110,"7",oFont08n)										//7
	oPrint:say( 1885,900,STR0199,oFont08n)									//"DATOS DEL RETENEDOR"
	oPrint:line(1920,100,1920,nColMax)										//Linha Horizontal
	
	oPrint:say( 1950,110,STR0011,oFont06)									//REGISTRO FEDERAL
	oPrint:say( 1970,110,STR0233,oFont06)									//DE CONTRIBUYENTES
	oPrint:say( 1960,480,RCV->RCV_RFCFON,oFont07)						
	oPrint:line(1920,460,2270,460)											//Linha Vertical
	
	oPrint:say( 1950,1210,STR0013,oFont06)									//CLAVE UNICA DE
	oPrint:say( 1970,1210,STR0014 + "*",oFont06)									//REGISTRO DE POBLACION
	oPrint:line(1920,1200,2000,1200)											//Linha Vertical
	oPrint:line(1920,1800,2000,1800)											//Linha Vertical
	oPrint:line(2000,100,2000,nColMax)										//Linha Horizontal
	
	oPrint:say( 2030,110,STR0200,oFont06)									//"APELLIDO PATERNO, MATERNO Y"
	oPrint:say( 2050,110,STR0201,oFont06)									//"NOMBRE(S), O DENOMINACIÓN O "
	oPrint:say( 2070,110,STR0202,oFont06)									//"RAZÓN SOCIAL"
	oPrint:say( 2070,480,AllTrim(RCV->RCV_NOMFON),oFont07)						
	oPrint:line(2100,100,2100,nColMax)										//Linha Horizontal
	
	//Imagem
	fRHLoadImg(@cDRL)
	oPrint:SayBitmap(2105,130,cDRL,100,200,,.F.) //DATOS DEL REPRESENTANTE LEGAL

	oPrint:say( 2130,480,STR0013,oFont06)									//CLAVE UNICA DE
	oPrint:say( 2150,480,STR0014,oFont06)									//REGISTRO DE POBLACION
	oPrint:say( 2150,760,RCV->RCV_CURPRE,oFont07)						
    
	oPrint:line(2100,750,2180,750)											//Linha Vertical
	oPrint:line(2180,750,2270,750)											//Linha Vertical
	oPrint:line(2180,460,2180,nColMax)										//Linha Horizontal
	
	oPrint:say( 2210,480,STR0015,oFont06)									//"APELLIDO PATERNO"
	oPrint:say( 2240,480,STR0203,oFont06)									//"MATERNO Y NOMBRE(S)"
	oPrint:say( 2230,760,RCV->RCV_NOMREP,oFont07)						
	oPrint:line(2270,100,2270,nColMax)										//Linha Horizontal
	
	oPrint:Box( 2320,110,2460,820)    
	oPrint:Box( 2320,860,2460,1560)    
	oPrint:Box( 2320,1580,2460,nColMax)                                      
	
	oPrint:say( 2390,170,STR0204,oFont06)									//"FORMATO DEL RETENEDOR O REPRESENTANTE LEGAL"
	oPrint:say( 2390,940,STR0205,oFont06)									//"SELLO DEL RETENEDOR (EN CASO DE TENERLO)"
	oPrint:say( 2390,1700,STR0206,oFont06)									//"FIRMA DE RECIBIDO POR EL CONTRIBUYENTE"
	
	oPrint:say( 2520,110,"(*) Sólo personas físicas     ",oFont06)								   //"(*) Solo personas físicas"
	oPrint:say( 2540,110,"(1) Funcionarios y trabajadores de la Federación, de las  Entidades Federativas y de los      ",oFont06)								   //"(1) Funcionarios y trabajadores de la Federación, de las  Entidades Federativas y de los Municipios, así "
	oPrint:say( 2560,110,"     Municipios, así como miembros de las fuerzas armadas.     ",oFont06)								   //"como miembros de las fuerzas armadas."
	oPrint:say( 2580,110,"(2) Sólo si el patrón que expide la constancia realizó cálculo anual.      ",oFont06)					 		   	//"(2) Sólo si el patrón que expide la constancia realizó cálculo anual."
	oPrint:say( 2600,110,"(3) No deberá duplicar los conceptos exentos que se resten una sola vez por ejemplo:       ",oFont06)								   //"(3) No deberá duplicar los conceptos exentos que se resten una sola vez por ejemplo: gratificación anual, "
	oPrint:say( 2620,110,"     gratificación anual, prima vacacional, entre otros.       ",oFont06)								   //"gratificación anual, prima vacacional, entre otros."
	
	oPrint:say( 2520,1150,"(4) Aplicable a partir de 2005.      ",oFont06)								   //
	oPrint:say( 2540,1150,"(5) Se deberá anotar la suma del crédito al salario determinado conforme a la tabla de la LISR correspondiente.     ",oFont06)								   //"(5) Se deberá anotar la suma del crédito al salario determinado conforme a la tabla de la LISR correspondiente."
	oPrint:say( 2560,1150,"(6) Suma de las diferencias que durante el ejercicio se entregaron en efectivo al trabajador conforme a las          ",oFont06)								   //
	oPrint:say( 2580,1150,"     disposiciones fiscales vigentes.         ",oFont06)								   //"    disposiciones fiscales vigentes."
	oPrint:say( 2600,1150,"(7) Se refiere a la(s) diferencia(s) por subsidio para el empleo mensual entregada(s) en efectivo",oFont06)
	oPrint:say( 2620,1150,"     al trabajador.",oFont06)	
	
	If lCalcAnu
		cSim := "X"
	Else
		cNao := "X"
	EndIf	
	oPrint:say( 2650,130,StrTran(STR0207,"cDataGer",dtoc(dDataGer)),oFont04) 								   
    oPrint:Say( 2670,130,StrTran(STR0208,"cFolio",Alltrim(cFolio)) + StrTran(StrTran(STR0209,"cSim",cSim),"cNao",cNao),oFont04)

	// Cerra la pagina
	oPrint:EndPage()
Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fEntFed   ºAutor  ³Marcelo Silveira    º Data ³  06/12/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna o codigo da Entidade Federativa (Estado)           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fEntFed( cCod )

Local nPosCod	:= 0
Local cCodEnt	:= ""

DEFAULT cCod  	:= ""
DEFAULT aEntFed	:= {}

If Empty( aEntFed )
	aAdd( aEntFed, { '01' , 'AGS'	, 'AGUASCALIENTES'			} )
	aAdd( aEntFed, { '02' , 'BC' 	, 'BAJA CALIFORNIA' 		} )
	aAdd( aEntFed, { '03' , 'BCS' 	, 'BAJA CALIFORNIA SUR'		} )
	aAdd( aEntFed, { '04' , 'CAMP' 	, 'CAMPECHE' 				} )
	aAdd( aEntFed, { '05' , 'COAH'	, 'COAHUILA DE ZARAGOZA'	} )
	aAdd( aEntFed, { '06' , 'COL' 	, 'COLIMA' 					} )
	aAdd( aEntFed, { '07' , 'CHIS' 	, 'CHIAPAS' 				} )
	aAdd( aEntFed, { '08' , 'CHIH' 	, 'CHIHUAHUA' 				} )
	aAdd( aEntFed, { '09' , 'DF' 	, 'DISTRITO FEDERAL' 		} )
	aAdd( aEntFed, { '10' , 'DGO' 	, 'DURANGO' 				} )
	aAdd( aEntFed, { '11' , 'GTO' 	, 'GUANAJUATO' 				} )
	aAdd( aEntFed, { '12' , 'GRO' 	, 'GUERRERO' 				} )
	aAdd( aEntFed, { '13' , 'HGO' 	, 'HIDALGO' 				} )
	aAdd( aEntFed, { '14' , 'JAL' 	, 'JALISCO' 				} )
	aAdd( aEntFed, { '15' , 'MEX' 	, 'MEXICO'  				} )
	aAdd( aEntFed, { '16' , 'MICH' 	, 'MICHOACAN' 				} )
	aAdd( aEntFed, { '17' , 'MOR' 	, 'MORELOS'  				} )
	aAdd( aEntFed, { '18' , 'NAY' 	, 'NAYARIT'  				} )
	aAdd( aEntFed, { '19' , 'NL' 	, 'NUEVO LEON'  			} )
	aAdd( aEntFed, { '20' , 'OAX' 	, 'OAXACA'  				} )
	aAdd( aEntFed, { '21' , 'PUE' 	, 'PUEBLA'  				} )
	aAdd( aEntFed, { '22' , 'QRO' 	, 'QUERETARO'  				} )
	aAdd( aEntFed, { '23' , 'QROO' 	, 'QUINTANA ROO'  			} )
	aAdd( aEntFed, { '24' , 'SLP' 	, 'SAN LUIS POTOSI' 		} )
	aAdd( aEntFed, { '25' , 'SIN' 	, 'SINALOA'  				} )
	aAdd( aEntFed, { '26' , 'SON' 	, 'SONORA'  				} )
	aAdd( aEntFed, { '27' , 'TAB' 	, 'TABASCO'  				} )
	aAdd( aEntFed, { '28' , 'TAMPS' , 'TAMAULIPAS' 			 	} )
	aAdd( aEntFed, { '29' , 'TLAX' 	, 'TLAXCALA'  				} )
	aAdd( aEntFed, { '30' , 'VER' 	, 'VERACRUZ'  				} )
	aAdd( aEntFed, { '31' , '31' 	, 'YUCATAN'  				} )
	aAdd( aEntFed, { '32' , '32' 	, 'ZACATECAS'  				} )
EndIf

If !Empty( cCod ) .And. !Empty( aEntFed )
	nPosCod := Ascan( aEntFed,{|x| x[2] == AllTrim(cCod)} )
	If nPosCod > 0
		cCodEnt := aEntFed[nPosCod,1]
	EndIf
EndIf
	
Return( cCodEnt )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fBuscaTrajºAutor  ³Silvia Taguti       º Data ³  12/15/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Busca Trajetoria Laboral                                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fBuscaTraj(aRCP)     
	Local aArea		:= GetArea()
	Local aRCPTraj 	:= {}
	Local aRCPAtu 	:= {}          
	Local nx 		:= 0
	Local nAux      := 0
	Local aRCPTot 	:= {}
	Local nPos      := 0
	Local nPosAlta  := 0
	Local nPosBaja  := 0
	Local nLoop     := 0
	Local lEsAlta   := .F.
	Local lEsBaja   := .F.
	Local cRCPChave := RCV->RCV_FILIAL+RCV->RCV_MAT
	If Alltrim(funname())== 'GPEM710'
		cRCPChave := SRA->RA_FILIAL+SRA->RA_MAT
	Endif
	
	dbSelectArea("RCP")              
	dbSetOrder(1)
	dbSeek(cRCPChave)  //RCV->RCV_FILIAL+RCV->RCV_MAT
	
	While !Eof() .And. RCP->RCP_FILIAL+RCP->RCP_MAT == cRCPChave //RCV->RCV_FILIAL+RCV->RCV_MAT
		If RCP->RCP_FILIAL+RCP->RCP_MAT == cRCPChave .And. Str(Year(RCP->RCP_DTMOV),4) <= cAnoRef //RCV->RCV_FILIAL+RCV->RCV_MAT
			AADD(aRCP,{RCP->RCP_FILIAL, RCP->RCP_MAT, RCP->RCP_SALMES } )
		Endif
		
		If RCP->RCP_FILIAL+RCP->RCP_MAT == cRCPChave .And. RCP->RCP_TPMOV $ "01|02|06" //RCV->RCV_FILIAL+RCV->RCV_MAT
			AADD(aRCPTraj,{RCP->RCP_FILIAL, RCP->RCP_MAT, RCP->RCP_DTMOV,RCP->RCP_TPMOV } )
		Endif
		RCP->(dbSkip())	
	Enddo
	
	//Busca primeira baixa do Ano
	nPos := Ascan(aRCPTraj,{|x| Str(Year(x[3]),4) == cAnoRef .And. x[4] $ "02|04"}) 
	//Se o primeiro movimento do ano for uma baixa, buscar o Entrada anterior
	
	For nx := 1 to Len(aRCPTraj)
		If Str(Year(aRCPTraj[nx,3]),4) == cAnoRef
			AADD(aRCPAtu,{aRCPTraj[nx,1],aRCPTraj[nx,2],aRCPTraj[nx,3],aRCPTraj[nx,4]})
	   Endif
	Next   
	
	nPos := Ascan(aRCPAtu,{|x| Str(Year(x[3]),4) == cAnoRef .And. x[4] $ "01"})
	
	For  nLoop := 1 To Len(aRCPAtu)
		If aRCPAtu[nLoop,4] $ "01|06" //Ingreso, Reingreso
			nPosAlta := nLoop
		ElseIf aRCPAtu[nLoop,4] $ "02|04" //Baja IMSS, Baja Registro Patronal
			nPosBaja := nLoop	
		EndIf
	Next
	Iif(nPos == 1, lEsAlta := .T., "")
	Iif(nPosBaja > nPosAlta, lEsBaja := .T., "")
	If (nPosAlta > 0 .And. nPosBaja > 0) .And. (nPosAlta > nPosBaja)
		If (aRCPAtu[nPosAlta,3] - aRCPAtu[nPosBaja,3]) > 1
			lEsAlta := .T.
			nPos := nPosAlta
		EndIf
	EndIf
	
	If Len(aRcpAtu) = 0	
		nVez := 1
	Else
		nVez := Len(aRCPAtu)
	Endif		
	
	For nx := 1 to  nVez Step 2
		nNumDias := 0
		nAnosTrab:= 0
		If Len(aRCPAtu) == 0
			cMesIni := "01"
			cMesFin := "12"   
			nNumdias := (Ctod("31/12/"+cAnoRef) - Ctod("01/01/"+cAnoRef))+1
		Else	
			If lEsAlta .And. lEsBaja
				cMesIni := StrZero(Month(aRCPAtu[nPos,3]),2)
				cMesFin := StrZero(Month(aRCPAtu[nPosBaja,3]),2)
				nNumDias:= (aRCPAtu[nPosBaja,3] - aRCPAtu[nPos,3]) + 1
			ElseIf lEsAlta
				cMesIni := StrZero(Month(aRCPAtu[nPos,3]),2)
				cMesFin := "12"
				nNumDias:= (Ctod("31/12/"+cAnoRef) - aRCPAtu[nPos,3]) + 1
			ElseIf lEsBaja
				cMesIni := "01"
				cMesFin := StrZero(Month(aRCPAtu[nPosBaja,3]),2)
				nNumDias:= (aRCPAtu[nPosBaja,3] - Ctod("01/01/"+cAnoRef)) + 1
			Else
				cMesIni := "01"
				cMesFin := "12"	
				nNumDias:= (Ctod("31/12/"+cAnoRef) - Ctod("01/01/"+cAnoRef)) + 1
			EndIf		
		Endif	
	Next
	aRCPTot := aClone(aRCP)
	aRCP := {}            
	nAux := Len(aRCPTot)
	If nAux > 0
		AADD(aRCP,{aRCPTot[nAux,1],aRCPTot[nAux,2],aRCPTot[nAux,3]} )
	Endif	
	
	nDiasTrab := nNumDias
   //nAnosTrab := Round(nNumDias/365,2)
	
	nAux := Len(aRCPTraj)
	aRCPAtu := {}
	While ( nAux >= 1 )
		If ( AllTrim(Str(Year(aRCPTraj[nAux,3]))) == cAnoRef  .and. aRCPTraj[nAux,4] $ "02|04")
			AADD(aRCPAtu,{aRCPTraj[nAux,1],aRCPTraj[nAux,2],aRCPTraj[nAux,3],aRCPTraj[nAux,4]})
			If ( nAux > 1 )
				AADD(aRCPAtu,{aRCPTraj[nAux-1,1],aRCPTraj[nAux-1,2],aRCPTraj[nAux-1,3],aRCPTraj[nAux-1,4]})
				nAux := 0
			EndIf
		EndIf
		nAux := nAux - 1
	EndDo
	
	If ( Len(aRCPAtu) > 0 )
		nAnosTrab := Round((aRCPAtu[1,3] - aRCPAtu[2,3] + 1)/365,2)
		nPos := aScan( aRCPAtu, { |x| x[4] $ "02|04" } )
		If ( AllTrim(Str(Year(aRCPAtu[nPos,3])))  == cAnoRef )
			nDiasTrab := Ctod("31/12/"+cAnoRef) - aRCPAtu[1,3] + 1		
		Else
			nNumdias := (Ctod("31/12/"+cAnoRef) - Ctod("01/01/"+cAnoRef))+1		
		EndIf
	EndIf

	RestArea( aArea )
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ fAniosTrb  ³ Autor ³ Alfredo Medrano       ³ Data ³13/10/2015³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ calcular el número de años reconocidos de acuerdo a la fecha ³±±
±±³          ³ de reconocimiento (RA_DTREC), de reingreso (RA_FECREI) o de  ³±±
±±³          ³ admision (RA_ADMISSA)                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fAniosTrb()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ cReturn: cMat                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³CGPM740IMP                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
static function fAniosTrb()
	Local aArea		:= GetArea()
	Local cTempF 		:= CriaTrab(Nil, .F.)
	Local cMat		:= RCV->RCV_MAT
	Local cFil		:= RCV->RCV_FILIAL
	Local cBajLiq		:= SuperGetMv("MV_BAJLIQ",,"")
	Local cAplMes		:= SuperGetMv("MV_APLMES",,"N")
	Local dFech		:= CTOD("//")
	Local dFechIn		:= CTOD("//")
	Local dFechFi		:= CTOD("//")
	Local cCad		:= ''
	Local cValc		:= ''
	Local cQuery		:= ''
	Local nDias		:= 0
	Local nX			:= 0
	Local nAnioB		:= 0
	Local nMesB		:= 0
	Local aLiq		:= {}
	Local aDec		:= {}

	dFechIn := CTOD("01/01/" + Str(Val(cAnoRef) - 1))
	dFechFi := CTOD("31/12/" + cAnoRef)

	aLiq := STRTOKARR(ALLTRIM(cBajLiq), ',')
	If Len(aLiq) > 0 
		For nX:=1 to Len(aLiq)
			cCad += " '" + aLiq[nX]	+ "' ,"
		Next
			cBajLiq := Subs(cCad,1,len(cCad) - 1)
	EndIf
	
	cQuery := "SELECT RA_DTREC, RA_FECREI, RA_ADMISSA, RA_DEMISSA FROM " +  RetsqlName("SRA") + " SRA "
	cQuery += " WHERE RA_MAT = '" + cMat + "' AND D_E_L_E_T_='' "
	IF !Empty(cBajLiq)
		cQuery += " AND RA_TIPOFIN IN (" + cBajLiq + ") "
	EndIF
	cQuery += " AND RA_DEMISSA >= '" + DTOS(dFechIn) + "' AND RA_DEMISSA <= '"+ DTOS(dFechFi) +"'"
	cQuery += " ORDER BY RA_ADMISSA DESC "
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cTempF,.T.,.T.)
	TCSetField(cTempF,"RA_DTREC",	"D",8,0) // Formato de fecha Reconocimiento
	TCSetField(cTempF,"RA_FECREI",	"D",8,0) // Formato de fecha Reingreso
	TCSetField(cTempF,"RA_ADMISSA",	"D",8,0) // Formato de fecha Ingreso
	TCSetField(cTempF,"RA_DEMISSA",	"D",8,0) // Formato de fecha Baja
	count to nTotal
	
	nAnosTrab:= 0 // variable privada
	nAnosTTem:= 0
	(cTempF)->(dbGoTop())
	While (!(cTempF)->(EOF()))
	
		If !empty((cTempF)->RA_DTREC) // Fecha de Reconocimiento  
			
			nDias := ((cTempF)->RA_DEMISSA - (cTempF)->RA_DTREC ) + 1 
			nDias := nDias/365
			nAnioB := NoRound(nDias, 0)
		
			IF cAplMes == 'S'
				//nDias := NoRound(nDias,2)
				aDec := STRTOKARR(ALLTRIM(str(nDias)), '.')
				If Len(aDec) = 2 
					cValc:= Substr(aDec[2],1,2)
					nMesB := (Val(cValc)/100) * 12
				EndIf
				nAnosTrab := nAnosTrab + nAnioB
				If nMesB	>= 6  
					nAnosTrab := nAnosTrab + 1
				EndIf	
			Else
				nAnosTrab := nAnosTrab + nAnioB
			EndIf
			
		ElseIf !empty((cTempF)->RA_FECREI) // Fecha de Reingreso   
			nDias := ((cTempF)->RA_DEMISSA - (cTempF)->RA_FECREI )+ 1  
			nDias := nDias/365
			nAnioB := NoRound(nDias, 0)
		
			IF cAplMes == 'S'
				//nDias := NoRound(nDias,2)
				aDec := STRTOKARR(ALLTRIM(str(nDias)), '.')
				If Len(aDec) = 2 
					cValc:= Substr(aDec[2],1,2)
					nMesB := (Val(cValc)/100) * 12
				EndIf
				nAnosTrab := nAnosTrab + nAnioB
				If nMesB	>= 6  
					nAnosTrab := nAnosTrab + 1
				EndIf	
			Else
				nAnosTrab := nAnosTrab + nAnioB
			EndIf
			
		ElseIf !empty((cTempF)->RA_ADMISSA) // Fecha de Admision   
			nDias := ((cTempF)->RA_DEMISSA - (cTempF)->RA_ADMISSA ) + 1 
			nDias := nDias/365 
			nAnioB := NoRound(nDias, 0)
		
			IF cAplMes == 'S'
				aDec := STRTOKARR(ALLTRIM(str(nDias)), '.')
				If Len(aDec) = 2 
					cValc:= Substr(aDec[2],1,2)
					nMesB := (Val(cValc)/100) * 12
				EndIf
				nAnosTrab := nAnosTrab + nAnioB
				If nMesB	>= 6  
					nAnosTrab := nAnosTrab + 1
				EndIf	
			Else
				nAnosTrab := nAnosTrab + nAnioB
			EndIf
				
		EndIf

		( cTempF )->(dbSkip())
	EndDo
	
	nAnosTTem := nAnosTrab
	
	( cTempF )->(dbCloseArea())
	RestArea( aArea )
return  cMat
