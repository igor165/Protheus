#INCLUDE "PROTHEUS.CH"
#INCLUDE "SCOPECNT.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  |GPEXFUNCOLºAutor  ³mayra.camargo       º Data ³ 14/11/2016  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Contiene funciones auxiliares en la localización del GPE    º±±
±±º          ³para COLOMBIA.                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ MCamargo   ³08/09/16³      ³Merge v12.1.13                            ³±±
±±³Diego Rivera³22/08/18³DMINA-³Replica DMINA-2716 - Se modifica func     ³±±
±±³            ³        ³3753  ³MkNewSRFCol para generar un registro en   ³±±
±±³            ³        ³      ³SRF por cada año calculado en el periodo  ³±±
±±³            ³        ³      ³abierto / DMINA-3221 - Se elimina variable³±±
±±³            ³        ³      ³re-definida nDaysRef en func MkNewSRFCol  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MkNewSRFColºAutor  ³Mayra Camargo      º Data ³  30/09/2013 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Función para Insertar en SRF dias derecho para Colombia     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSintaxe   ³ MkNewSRFCol(cFilSRA,cMat,cPdSRF,dDateIni                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ cFilSRA     = Filial del empleado                          º±±
±±º          ³ cMat        = Matrícula                         	  	    º±±
±±º          ³ cPdSrf      = Concepto de días Derecho                     º±±
±±º          ³ dDateIni    = Fecha de Admisión del empleado               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Gpea010Grv()                                                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MkNewSRFCol(cFilSra, cMat, cPdSrf, dDateIni,lMod)  
	Local aArea		:= GetArea()
	Local lRet		:= .T.
	Local lFound		:= .F. 
	Local lDtNova		:= .T.
	Local dDatePer	:= CToD("  /  /  ") 
	Local dDateRec	:= CToD("  /  /  ") 
	Local dDateFinish:= CToD("  /  /  ") 
	Local dDatePerAtu:= CToD("  /  /  ")
	Local cFilSRF		:= ""     
	Local cProcess	:= ""           
	Local nDaysAux	:= 0
	Local nDaysLat	:= 0
	Local nYear		:= 0
	
	//--------------//
	Local dBsEmployee, dDateFin, dtFimPer, dVigVac, dtIniPer
	Local lDefMon 		:= .T. 
	Local cGpoVac 		:= ""
	Local nDaysRef 		:= 0   //->Dias de Referencia do funcionario
	Local nI	   		:= 0   //->Contador de linhas para FTabela
	Local nYearsWorked 	:= 0   //->Anos trabalhados 
	Local nX 			:= 0		
	Local nAnt			:= 0	//Antigüedad
	Local nDfervat 		:= 0 
	Local nDferaat 		:= 0 
	//--------------//
        
	Default cPDSrf 	:= fGetCodFol("0072") 	//Verba de ferias	      
	Default lMod 		:= .F.
                          	
	If Type("cPerFeAc") == "U"
		cPerFeAc := SuperGetMv("MV_FERPAC", NIL, "N") //AD Ferias por ano civil 
	EndIf

	If(!(SRA->(RA_FILIAL+RA_MAT)) ==(cFilSra + cMat))
		DbSelectArea("SRA")        
		SRA->(DbSetOrder( RetOrdem("SRA", "RA_FILIAL+RA_MAT") ))
		lFound := SRA->(DbSeek(cFilSra + cMat))
	Else
		lFound := .T.
	EndIf
	
	If(lFound) .and. !(SRA->RA_SITFOLH == "D") .And. dDateIni >= SRA->RA_ADMISSA
		cProcess := SRA->RA_PROCES			
		//Posiciona nos periodos de dia de direito do admifuncionadio
		DbSelectArea("SRF")
		SRF->(DbSetOrder( RetOrdem( "SRF", "RF_FILIAL+RF_MAT+RF_PD+DTOS(RF_DATABAS)" ) ))  
	
		If FWModeAccess("SRF") == "C"
			cFilSRF := Space(FWGETTAMFILIAL)
		Else
			cFilSRF:= cFilSra
		EndIf
	
		lFound := SRF->(DbSeek( cFilSrf + cMat + cPdSRF ))
		
		dDateFinish := CToD("  /  /  ")
		If(lFound)   
			nI := 1       
			While ((SRF->( RF_FILIAL + RF_MAT + RF_PD )) == (cFilSrf + cMat + cPdSRF))
				//Nao considera periodos vencidos ou pagos
				If Empty(SRF->RF_STATUS) .Or. SRF->RF_STATUS == "1"
					dDatePer	:= SRF->RF_DATABAS
					dDateFinish	:= SRF->RF_DATAFIM  //04/01/2011
				EndIf
				SRF->(dbSkip())
				nI ++
			EndDo	
		
			//Checa se pelo menos uma data eh superior ao inicio do ultimo periodo cadastrado
			//esta situacao so eh possivel na primeira vez (reingresso ou reconhecimento)
			lDtNova	 := SRA->RA_DTREC >= dDatePer

        Endif
		
		If Type("SRA->RA_DTREC") # "U" .And. !Empty(SRA->RA_DTREC) //Campo s  existe ARG/MEX/BOL - ARG nao usa no fechamento
			dDateRec := SRA->RA_DTREC                  
		Else
	   		If Type("SRA->RA_FECREI") # "U" .And. !Empty(SRA->RA_FECREI) //Campo s  existe MEX/BRA
				dDateRec := SRA->RA_FECREI
			Else 
				dDateRec := SRA->RA_ADMISSA
			EndIf                              
		EndIf
		
		
		
		//Considera a data do ultimo periodo somente se nao for o primeiro reingresso ou reconhecimento
		If  Type("SRA->RA_FECREI") # "U"
			If(!Empty(dDateFinish))
				If !lDtNova .Or. ( Empty(SRA->RA_FECREI) .Or. Empty(SRA->RA_DTREC) )
					dDateIni := DaySum( dDateFinish, 1)	
				EndIf
			EndIf
	    Endif
	    
		If ((Type("SRA->RA_FECREI") # "U" .And. !Empty(SRA->RA_FECREI)))
			dDateIni := CTOD(STRZERO(Day(SRA->RA_FECREI),2)+"/"+STRZERO(Month(SRA->RA_FECREI),2)+"/"+STRZERO(Year(dDateIni),4))
		ElseIf cPerFeAc == "S"
			dDateIni := CTOD("01/01/"+STRZERO(Year(YearSum(dDateIni, 1)),4))
		Else
			dDateIni := CTOD(STRZERO(Day(SRA->RA_ADMISSA),2)+"/"+STRZERO(Month(SRA->RA_ADMISSA),2)+"/"+STRZERO(Year(dDateIni),4))
		EndIf
			    
		dDatePerAtu := cToD( STRZERO(Day(dDateIni),2)+ "/"+RCH->RCH_MES+"/"+RCH->RCH_ANO )
   		
   		nYear := val(_aPerSel[1,5])
   		If  nYear > YEAR(dDateIni)
   			
   			dDateFinish := CTOD(STRZERO(Day(dDateIni),2)+"/"+STRZERO(Month(dDateIni),2)+"/"+ _aPerSel[1,5])
   			dDateFinish := DaySub(dDateFinish, 1)
   			
   			If dDateFinish < _aPerSel[1,6]
   				dDateFinish := YearSum(dDateFinish, 1)
   			End If
   			
		ElseIF nYear == YEAR(dDateIni)
		
			dDateFinish := YearSum(dDateIni, 1) //Data mas ano incrementando  + 1
			dDateFinish := DaySub(dDateFinish, 1)
			
		ElseIF nYear < YEAR(dDateIni)		
		
			dDateFinish := YearSum(dDateIni, 2) //Data mas ano incrementando  + 2
			dDateFinish := DaySub(dDateFinish, 1)
			
		End IF
		
		nDaysRef := getDDerCol(IIF(lMod,dDateIni,dDateRec),DaySum(dDateFinish,1), SRA->RA_GPOVAC,_aPerSel[1,7],@nDaysLat)
		
		nDaysAux := IIF(DaySub(_aPerSel[1,6],1) > dDateIni ,(nDaysLat/365) * ( (_aPerSel[1,6]-dDateIni) + 1 ), 0)
		    		
		If FWModeAccess("SRF") == "C"
			cFilSRF := Space(FWGETTAMFILIAL)
		Else
			cFilSRF:= cFilSra
		EndIf
		
		lDefMon := If(cPerFeAc <> "S",( Empty(dDatePer) .Or. dateDiffMonth(dDatePer,dDatePerAtu) >= 12 ),.T.)

		
		If lDefMon
		
			dBsEmployee := IIF(lMod,dDateIni,dDateRec)
			dDateFin 	:= DaySum(dDateFinish,1)
			cGpoVac 	:= SRA->RA_GPOVAC
			dtIniPer 	:= _aPerSel[1,6]//dtini
			dtFimPer 	:= _aPerSel[1,7]//dtfim
		
			nYearsWorked:= DateDiffYear( dDateFin, dBsEmployee)
			nAnt 		:= (( dtFimPer - dBsEmployee) + 1) / 365
			
			// Informa en la tabla SRF un registro por cada año calculado en el periodo abierto 	
			For nI:= 1 to nYearsWorked  
				nX 			:= fPosTab("S013",cGpoVac,"=",4,nI,"<=",7)				
				nLastDays 	:= IIF( nX > 0, fTabela("S013",nX,8) , 0)
				nDaysRef 	:= nLastDays	
				
				nAnt	:= nAnt + 1
				
				If nI > 1
					dDateIni := YearSum(dDateIni, 1)
				EndIf
				
				dDateFinish := CTOD(STRZERO(Day(dDateIni),2)+"/"+STRZERO(Month(dDateIni),2)+"/"+ alltrim(str(Year(dDateIni))))
   				dDateFinish := DaySub(dDateFinish, 1)
   				dDateFinish := YearSum(dDateFinish, 1)
   				
   				If dDateFinish > dtFimPer 
   					nDfervat := 0
   				Else
   					nDfervat := nDaysRef
   				EndIf
   				
   				If dDateFinish <= dtIniPer 
   					nDferaat := 0
   				Else
   				
	   				If RCJ->RCJ_CALEND == "1" 
	   					//				rch_dtfim               fecha inicio             fecha Fin
	   					nDferaat := ((((year(dtFimPer) - year(dDateIni))*360) + ((MONTH(dtFimPer) - MONTH(dDateIni)) * 30) + ( DAY(dtFimPer) - DAY(dDateIni)) + 1 ) / 360) * nDaysRef
	   					
	   				ElseIf RCJ->RCJ_CALEND == "2" 
	   					nDferaat := (( dtFimPer - dDateIni + 1)/365) * nDaysRef
					EndIf
				
				EndIf
				
				dVigVac :=  dtFimPer - ( RCJ->RCJ_VIGVAC * 365)
		
				If !( SRF->(dbSeek( cFilSRF + SRA->RA_MAT + cPdSrf + DtoS(dDateIni))) ) 
			
					RecLock( "SRF" , .T. )                                                
				
					SRF->RF_FILIAL	:= cFilSRF
					SRF->RF_MAT		:= cMat			//Matrícula
					SRF->RF_PD		:= cPdSrf		//Verba lancamento 
					SRF->RF_DATABAS	:= dDateIni		//Data Inicio do Periodo
					SRF->RF_DATAFIM := dDateFinish	//Data Fim do Periodo
					SRF->RF_DIASDIR := nDaysRef    	//Calculado considerando anos de empresa
					SRF->RF_DFERVAT := nDfervat     //Días vencidos
					SRF->RF_DIASANT := 0            //Días antecipados
					SRF->RF_DFERAAT := nDferaat		//días proporcionales
					SRF->RF_DFERANT := 0        	//Saldo
					SRF->RF_STATUS	:= IIf(  dVigVac <= dDateFinish , "1" , "2" )
					
					SRF->( MsUnlock() )
				EndIf
				
			Next nI
			
		EndIf
		
		RestArea( aArea )
	EndIf 
Return lRet 
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³getDDerColºAutor  ³Mayra Camargo       º Data ³  30/09/2013 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Obtienes dias derecho para Colombia                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSintaxe   ³ getDDerCol(dBSEmployee,dDateFin,cGpoVac,dfFimPer,nLastDay) º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ dBSEmployee = Fecha de Admisión o reconocimiento           º±±
±±º          ³ dDateFin    = Fecha de aniversario              	  	    º±±
±±º          ³ cGpoVac     = Grupo de Vacaciones del empleado             º±±
±±º          ³ dfFimPer    = Fecha de término del periodo abierto nom ord.º±±
±±º          ³ nLastDay    = últimos dias obtenidos del ciclo for         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³MkNewSRFCol                                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function getDDerCol	(dBsEmployee, dDateFin, cGpoVac,dtFimPer,nLastDays)  
	Local nDaysRef 		:= 0   //->Dias de Referencia do funcionario
	Local nI	   			:= 0   //->Contador de linhas para FTabela
	Local nYearsWorked 	:= 0   //->Anos trabalhados 
	Local nX 				:= 0		
	Local nAnt			:= 0	//Antigüedad
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Considerando os anos trabalhados e o processo do trabalhador  ³
	³ira buscar na tabela S013 os dias de direito para o retorno   ³
	³da funcao 															³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

	nYearsWorked:= DateDiffYear( dDateFin, dBsEmployee)
	nAnt := (( dtFimPer - dBsEmployee) + 1) / 365
		
	For nI:= 1 to nYearsWorked  
		nX := fPosTab("S013",cGpoVac,"=",4,nI,"<=",7)				
		nLastDays := IIF( nX > 0, fTabela("S013",nX,8) , 0)
		nDaysRef += nLastDays	
		
		nAnt:= nAnt + 1
	Next nI
		
Return( nDaysRef )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fGetVal() ºAutor  ³mayra.camargo       º Data ³ 08/10/2013  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Coloca al incluir un nuevo empleado, el valor por default   º±±
±±º          ³del NIT de la ARL a la cual esta afiliada la empresa a la   º±±
±±º          ³que pertenece el empleado.                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSintaxe   ³ fGetValARL()                                               º±±
±±ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶±±
±±ºParametros³ Ninguno                                                    º±±
±±ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶±±
±±ºUso       ³Campo RA_NITARL                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function fgetValARL()
	Local cDesc 	:= space(TamSX3("RA_NITARL")[1])
	Local nI 		:= 0

	IF Inclui
		fPosTab( "S012", SRA->RA_FILIAL, "==", 1,,,,,@nI)
		
		If nI == 0
			nI := 1	
		End If
		
		cDesc := FTABELA("S012",nI,4)
			
		cDesc := IIF(Empty(cDesc),space(TamSX3("RA_NITARL")[1]),cDesc)							
	End If	
Return cDesc


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³g280VldMod³ mayra.camargo              º Data ³  21/10/2013 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida que al modificar/eliminar el registro de un benefi-  º±±
±±º          ³ciario, se valide que no tenga registros en SRK,RCK,SRC y   º±±
±±º          ³SRD.                                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSintaxe   ³lVar := gp280VldMod()                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³lDel := Parámetro por referencia que indica si se eliminará º±±
±±º          ³        el registro procesado.                              º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ gp280Grava                                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function gp280VldMod(lDel)
	Local lRet	:= .F.
	Local aArea 	:= getArea()
	
	Default lDel := .F.
	IF SRQ->RQ_TPBENEF == "3" // Si el tipo de beneficiarios en ejeutivo
				
		dbSelectArea("SRK")
		dbSetOrder(RetOrder("SRK","RK_FILIAL+RK_MAT+RK_NUMID"))

		If SRK->(dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"SRK"+SRA->(RA_FILIAL+RA_MAT)+SRQ->(RQ_VERBFOL+RQ_ORDEM)+"SRQ"))	
														
			If SRK->RK_VLSALDO <> SRK->RK_VALORTO		// Si el valor inicial es diferente al valor saldado no puede eliminarse	
				lRet := .T.	
			Else
				lDel := .T.
			End IF								
				
			// Se buscan registros en amortizaciones
			dbSelectArea("RCK")  
			RCK->(dbSetOrder(RetOrder("RCK","RCK_FILIAL+RCK_MAT+RCK_NUMID")))
			If RCK->(dbSeek(SRA->(RA_FILIAL+RA_MAT)+ "SRK"+SRA->(RA_FILIAL+RA_MAT)+SRQ->(RQ_VERBFOL+RQ_ORDEM)+"SRQ"))
			  	lRet := .T.
			  	lDel := .F.
			Endif						
		End IF
																			
	End IF
				
	IF !lRet
					
		// Si se encuentra un registro en SRC no se podrá modificar el beneficiario.
		dbSelectArea("SRC")
		SRC->(dbSetOrder(RetOrder("RC_FILIAL+RC_MAT+RC_PROCES+RC_ROTEIR+RC_PERIODO+RC_SEMANA")))
		IF SRC->(dbSeek(SRA -> RA_FILIAL + SRA -> RA_MAT + SRA -> RA_PROCES))															
			Do while !SRC->(Eof()) 
				IF SRC->RC_NUMID == SRA->RA_FILIAL+SRA->RA_MAT+"SRK"+SRA->(RA_FILIAL+RA_MAT)+SRQ->(RQ_VERBFOL+RQ_ORDEM)+"SRQ"
					lRet := .T.
					Exit
				EndIF
				SRC->(Dbskip())
			EndDo
		End IF
					//Si se cuenta con al menos un registro en SRD no se podrá modificar el beneficiario.
		dbSelectArea("SRD")
		SRD->(dbSetOrder(RetOrder("RD_FILIAL+RD_MAT+RD_PROCES+RD_ROTEIR+RD_PERIODO+RD_SEMANA")))
		IF SRD->(dbSeek(SRA -> RA_FILIAL + SRA ->  RA_MAT + SRA -> RA_PROCES))															
			Do while !SRD->(Eof()) 
				IF SRD->RD_NUMID == SRA->RA_FILIAL+SRA->RA_MAT+"SRK"+SRA->(RA_FILIAL+RA_MAT)+SRQ->(RQ_VERBFOL+RQ_ORDEM)+"SRQ"
					lRet := .T.
					Exit
				EndIF
				SRD->(Dbskip())
			EndDo
		End IF
	End IF
		
	RestArea(aArea)
Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fGetAusCont|Autor ³ mayra.camargo      º Data ³  04/11/2013 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Obtiene la suma de los días de una incapacidad subsecuente. º±±
±±º          ³Ausencia continua                                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSintaxe   ³ fGetAusCont(cCampo,cFil,cMat,cPD)                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³cCampo   := Campo a sumar R8_SDPAGAR/R8_SPAGAR              º±±
±±º          ³cFil     := Filial del empleado                             º±±
±±º          ³cMat     := Matrícula del empleado                          º±±
±±º          ³cPD      := Concepto a Procesar                             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³GPEXFOR1                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fGetAusCont(cCampo,cFil,cMat,cPD)

	Local aArea		:= GetArea()
	Local aSR8Table
	
	Local cCodTip
	Local cFields
	Local cAliasSR8	:= "QSR8"
	
	Local nAusCont	:= 0
	Local nCampos
	Local cSR8Tab	:= '%'+RetSqlName('SR8')+'%'
	Local cQryDep := "" 
	Local cDelete 		:= If( !__lSrvAs400, "%D_E_L_E_T_ = ' '%", "%@DELETED@ = ' '%" )
	
	DEFAULT cFil	 := SRA->RA_FILIAL
	DEFAULT cMat 	 := SRA->RA_MAT
	
	//- Carregar somente os itens gerados pelo select
		
	If Empty( cQryDep )
		
		cFields		:= ""
		
		cFields :=  "R8_CONTINU, " 
		
		If __lSrvAs400
			cFields += "RRN("+RetSqlName('SR8')+")" + " RECNO,"
		Else
			cFields += "R_E_C_N_O_" + " RECNO,"
		EndIf
	
		cQryDep := "%" + cFields + cCampo+ "%"
	EndIf
	
	//-- Leitura dos registros por ordem de Sequencia
	BeginSql alias cAliasSR8
		SELECT %exp:cQryDep%
		FROM %exp:cSR8tab%
		WHERE R8_FILIAL = %exp:cFil%
		  AND R8_MAT = %exp:cMat%
		  AND R8_PD = %exp:cPD%//AND R8_DATAINI <= %exp:dDtFim%
		  AND (%exp:cDelete%)
		  ORDER BY R8_DATAFIM DESC
	EndSql
	
	//-- Geracao das informacoes no array de Trajetoria Laboral do Funcionario
	While (cAliasSR8)->(!Eof())
	
		If 	(cAliasSR8)-> R8_CONTINU == "1"
			nAusCont := nAusCont + (cAliasSR8)->&(cCampo)
			(cAliasSR8)->(dbSkip())
		Else
			nAusCont := nAusCont + (cAliasSR8)->&(cCampo)
			Exit
		EndIF
				
	EndDo
	(cAliasSR8)->( DbCloseArea() )
	
	RestArea(aArea)

Return nAusCont
