#INCLUDE "PROTHEUS.CH"
#INCLUDE "gpea720.ch"
#INCLUDE "FONT.CH"
#INCLUDE "COLORS.CH"
#INCLUDE "HEADERGD.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ gpea720  ³ Autor ³ Rogerio Vaz Melonio   ³ Data ³ 22/04/08      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Historico de Contratos                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Paulo Leme  ³03/12/08³      ³ Localizacao Venezuela                         ³±±
±±³Paulo Leme  ³15/12/08³      ³ Novos ajustes para localizacao Venezuela      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±³Erika K.    ³30/12/09³29417/2009³ Ajustes no Menudef para Peru.             ³±±
±±³------------³--------³----------³ versao 11.5-------------------------------³±±
±±³Emerson     ³14/06/11³13527/2011³Atender a Nova Interface Totvs 11.5 utili- ³±±
±±³Campos      ³        ³          ³zando a funcao MsAdvSize( p/ flexibilidade ³±±
±±³            ³        ³          ³da tela de acordo com a resolucao).        ³±±
±±³            ³        ³          ³Limpeza e indentação do fonte.             ³±±
±±³R.Berti     ³22/04/13³THBVIT    ³Ajustes p/localizacao ANGOLA.      	 	  ³±±
±±³gSantacruz  ³17/10/13³COL11.8_RH³Tabla s022 por s018. y S23 A S19     	 	  ³±±
±±³            ³        ³          ³                                           ³±±
±±³Jonathan Glz³29/04/15³PCREQ-4256³Se elimina la funcion Sx3RGE() con motivo  ³±±
±±³            ³        ³          ³de ajuste para las nueva estructuras de    ³±±
±±³            ³        ³          ³version 12                                 ³±±
±±³Cecilia Carv³30/11/15³PCREQ85940³Tratamento nas funcoes Gpea720When, Gp720Vl³±±
±±³            ³        ³          ³dIni e Gp720VldFim para nao executar quando³±±
±±³            ³        ³          ³for Brasil.                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Gpea720(nOpcAuto)
Local aIndexSRA		:= {}

Private lTudoOk 		:= .F.
Private bFiltraBrw	:= {|| NIL }		//Variavel para Filtro

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define array contendo as Rotinas a executar do programa      ³
//³ ----------- Elementos contidos por dimensao ------------     ³
//³ 1. Nome a aparecer no cabecalho                              ³
//³ 2. Nome da Rotina associada                                  ³
//³ 3. Usado pela rotina                                         ³
//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
//³    2 - Simplesmente Mostra os Campos                         ³
//³    3 - Inclui registros no Bancos de Dados                   ³
//³    4 - Altera o registro corrente                            ³
//³    5 - Remove o registro corrente do Banco de Dados          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aRotina := MenuDef() // ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina
cCadastro       := OemToAnsi(STR0001)  //"Historico de Contratos"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o Arquivo Esta Vazio                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !ChkVazio("SRA")
	Return( NIL )
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cFiltraRh	:= CHKRH("GPEA720","SRA","1")
bFiltraBrw	:= {|| FilBrowse("SRA",@aIndexSRA,@cFiltraRH) }
Eval(bFiltraBrw)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Endereca a funcao de BROWSE                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SRA")
mBrowse( 6, 1,22,75,"SRA",NIL , NIL , NIL , NIL , NIL,fCriaCor() )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Deleta o filtro utilizando a funcao FilBrowse                     	   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
EndFilBrw("SRA",aIndexSra)
Return( NIL )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea720Mnt	 ³ Autor ³ Rogerio Vaz Melonio ³ Data ³22/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³ Historico de Contratos 									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                 	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³ Localizacao Portugal                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³ GPEA720													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/
Function Gpea720Mnt( cAlias , nReg , nOpcx )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Local                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aButtons		:= {}
Local aArea			:= GetArea()

Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords		:= {}

Local aAdv1Size		:= {}
Local aInfo1AdvSize	:= {}
Local aObj1Size		:= {}
Local aObj1Coords 	:= {}

Local aVirtual		:= {}
Local aRGECols		:= {}
Local aColsRec		:= {}
Local aSitFunc		:= RetSituacao( SRA->RA_FILIAL , SRA->RA_MAT , .F., dDataBase )
Local cFil				:= SRA->RA_FILIAL
Local cMat     		:= SRA->RA_MAT
Local cNome    		:= SRA->RA_NOME
Local cLancDemi		:= SuperGetMv("MV_DEMISRC" )
Local nOpca			:= 0
Local uSvMvPar01		:= IF( Type("mv_par01") <> "U" , mv_par01 , NIL )
Local nCoordLin		:= 0
Local bFreeLocks		:= {|| FreeLocks("RGE" , NIL , .T. ), .T.}
Local aPesqIdx 		:= {}
Local aPesqOrd		:= {}
Local lSeeAll			:= .T.
Local cPesqOrd
Local cPesqCampo		:= space(40)
Local lAxPesqui 		:= .F.
Local lValPer			:= .T.
Local bOpcRoda

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Objetos          ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/
Local oFont
Local oGroup
Local oDlg
Local oBtnPgNext
Local oBtnPgPrev
Local oBntNext
Local oBntPrev
Local oPesqCbx
Local oPesqGet
Local oFunc

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Blocos de Codigo                                            ³
//³================                                            ³
//³Serao utilizados na acao do botoes de movimentacao, "Avanca"³
//³"Retrocede", "Avanca Todos" e "Retrocede Todos".            ³
//³O Bloco "bFica" sera utilizado quando forem alterados os    ³
//³campos data de referencia, semana e tipo de lancamento.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local bRetrocOne := {|| bOpcRoda := {|| SRA->( dbskip(-1))  },gp720MontaGetDados(cAlias, nOpcX, SRA->RA_FILIAL, @cMat, @aVirtual, @aColsRec, @aRGECols, .T., .F.,bOpcRoda), oGet:oBrowse:Refresh(),oDLG:Refresh()}
Local bRetrocAll := {|| bOpcRoda := {|| SRA->( dbGoTop())   },gp720MontaGetDados(cAlias, nOpcX, SRA->RA_FILIAL, @cMat, @aVirtual, @aColsRec, @aRGECols, .T., .F.,bOpcRoda), oGet:oBrowse:Refresh(),oDLG:Refresh()}
Local bAvancaOne := {|| bOpcRoda := {|| SRA->( dbskip()),If( SRA->(! EOF()),aCols:= {}, SRA->( dbGoBottom())) }, gp720MontaGetDados(cAlias, nOpcX, SRA->RA_FILIAL, @cMat, @aVirtual, @aColsRec, @aRGECols, .T., .F.,bOpcRoda), oGet:oBrowse:Refresh(),oDLG:Refresh()}
Local bAvancaAll := {|| bOpcRoda := {|| SRA->( dbGoBottom())},gp720MontaGetDados(cAlias, nOpcX, SRA->RA_FILIAL, @cMat, @aVirtual, @aColsRec, @aRGECols, .T., .F.,bOpcRoda),oGet:oBrowse:Refresh(),oDLG:Refresh()}
Local bFica      := {|| bOpcRoda := {|| .F.                 },gp720MontaGetDados(cAlias, nOpcX, SRA->RA_FILIAL, @cMat, @aVirtual, @aColsRec, @aRGECols, .T., .F.,bOpcRoda),If(lDaRefresh,(oGet:oBrowse:Refresh(),oDLG:Refresh()),.t.)}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Privadas                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aTELA			:= {}
Private aGETS			:= {}
Private aHeader 		:= {}
Private aCols			:= {}
Private aColsAnt		:= {}
Private aGdAltera		:= {}
Private	cCategoria	:= SRA->RA_CATFUNC
Private cProcesso		:= SRA->RA_PROCES
Private cPosto 		:= SRA->RA_POSTO
Private oGet
Private lRGELock		:= .F.
Private cCond			:= "1"
Private lDaRefresh 	:= .F.
Private lCorrecao 	:= (nOpcx==4)
Private lCadFun 		:= (nOpcx==7)
Private lJaAvisou 	:= .F.
Private cTabTip      := ""

If cPaisLoc == "PTG"
	cTabTip := "S011"
ElseIf cPaisLoc == "COL"
	cTabTip := "S018"
ElseIf cPaisLoc == "VEN"
	cTabTip := "S014"
ElseIf cPaisLoc == "ANG"
	cTabTip := "S016"
EndIf

_SetOwnerPrvt( "nOpcNewGd", IF( nOpcX == 2 .or. nOpcX == 5 , 0 , GD_INSERT + GD_UPDATE + GD_DELETE))

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Monta as Dimensoes dos Objetos         					   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/
aAdv1Size	:= MsAdvSize()
aInfo1AdvSize    := { aAdv1Size[1] , aAdv1Size[2] , aAdv1Size[3] , aAdv1Size[4] , 2 , 2 }
aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )
aObj1Size := MsObjSize( aInfo1AdvSize , aObj1Coords )

aAdvSize    := aClone(aObj1Size[1])
aInfoAdvSize	:= { aAdvSize[2] , aAdvSize[1] , aAdvSize[4] , aAdvSize[3] , 1 , 1 }
aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )

IF !lCadFun
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aAdd( aObjCoords , { 000 , 030 , .T. , .F. } )
ELSE
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
ENDIF

aObjSize	:= MsObjSize( aInfoAdvSize , aObjCoords )

cCadastro := OemToAnsi(STR0001)  //"Historico de Contratos"
Begin Sequence
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Qual Alias sera utilizado                             ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	cAlias := "RGE"
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Cria Array de Campos Alteraveis                              ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	dbSelectArea(cAlias)
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se o Funcionario Esta Demitido                      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF ( aSitFunc[1] == "D" )
	    IF !( cLancDemi == "S" )
		 	/*
		 	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Nao Permite o Lancamento Para o Funcionario                  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		 	Help(" ",1,"NOLANCDEMI")
		 	Break
	    Else
		 	/*
		 	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Permite o Lancamento Para o Funcionario                      ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	    	Help(" ",1,"A090DEMITI")
	    EndIF
	EndIF

	IF ( aSitFunc[1] == "A" )
	   	/*
	   	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Funcionario Esta Afastado.                                   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		Help(" ",1,"A090AFASTA")
	ElseIF ( aSitFunc[1] == "F" )
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Funcionario Esta de F‚rias                                   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		Help(" ",1,"A090FERIAS")
	ElseIF ( aSitFunc[1] == "T" )
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Verifica se o Funcionario Esta de Transferido                ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		Help(" ",1,"A090TRANSF")
	EndIF

	If !( lRGELock := Gpea720Locks( nOpcx , "RGE" ) )
		Break
	EndIf

	gp720MontaGetDados(cAlias, nOpcX, cFil, cMat, @aVirtual, @aColsRec, @aRGECols, .F., .F.)
	DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
	DEFINE MSDIALOG oDlg TITLE cCadastro From aAdv1Size[7],0 TO aAdv1Size[6],aAdv1Size[5] OF oMainWnd PIXEL
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Define grupo do cabecalho       ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		 /*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	       ³ Matricula, Nome, Admissao, Processo e Posto       ³
		   ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		@ aObjSize[1,1],aObjSize[1,2]				GROUP oGroup TO aObjSize[1,3],((aObjSize[1,4]/100)*10)-2	LABEL OemToAnsi(STR0006) OF oDlg PIXEL // Matricula:
		oGroup:oFont:= oFont
		@ aObjSize[1,1],(aObjSize[1,4]/100)*10 	GROUP oGroup TO aObjSize[1,3],((aObjSize[1,4]/100)*70)-2 	LABEL OemToAnsi(STR0007) OF oDlg PIXEL // Nome:
		oGroup:oFont:= oFont
		@ aObjSize[1,1],(aObjSize[1,4]/100)*70		GROUP oGroup TO aObjSize[1,3],((aObjSize[1,4]/100)*80)-2	LABEL OemToAnsi(STR0010) OF oDlg PIXEL	// Admiss„o:
		oGroup:oFont:= oFont
		@ aObjSize[1,1],(aObjSize[1,4]/100)*80 	GROUP oGroup TO aObjSize[1,3],((aObjSize[1,4]/100)*90)-2 	LABEL OemToAnsi(STR0011) OF oDlg PIXEL // Processo:
		oGroup:oFont:= oFont
		@ aObjSize[1,1],(aObjSize[1,4]/100)*90 	GROUP oGroup TO aObjSize[1,3], aObjSize[1,4] 				LABEL OemToAnsi(STR0012) OF oDlg PIXEL // Posto:
		oGroup:oFont:= oFont

		//nCoordLin := 	( ( aObjSize[1,3] ) - ( ( ( aObjSize[1,3] - 3 ) - aObjSize[1,2] ) / 2 ) )
		@ aObjSize[1,1]+10, aObjSize[1,2] + 5 			SAY oFunc Var cMat 					SIZE 050,10 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,1]+10, (aObjSize[1,4]/100*10) + 5	SAY OemToAnsi(SRA->RA_NOME)			SIZE 146,10 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,1]+10, (aObjSize[1,4]/100*70) + 5	SAY Dtoc(SRA->RA_ADMISSA) 			SIZE 050,10 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,1]+10, (aObjSize[1,4]/100*80) + 5	SAY OemToAnsi(SRA->RA_PROCES) 		SIZE 050,10 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,1]+10, (aObjSize[1,4]/100*90) + 5	SAY OemToAnsi(SRA->RA_POSTO)		SIZE 050,10 OF oDlg PIXEL FONT oFont

		//nCoordLin := ( ( aObjSize[2,3] ) - ( ( ( aObjSize[2,3] - 3 ) - aObjSize[2,2] ) / 2 ) + 12 )

		oGet := MsNewGetDados():New(aObjSize[2,1] + 6,;// nTop
									 aObjSize[2,2],;   	// nLeft
									 aObjSize[2,3],;	// nBottom
		                             aObjSize[2,4],;	// nRright
									 nOpcNewGd,;		// controle do que podera ser realizado na GetDado - nstyle
									 "Gpea720LinOk",;	// funcao para validar a edicao da linha - ulinhaOK
									 "Gpea720TudOk",;	// funcao para validar todas os registros da GetDados - uTudoOK
	  								 NIL,;				// cIniCPOS
									 aGdAltera,;		// aAlter
									 0,; 				// nfreeze
									 Len(aCols),; // 99999,;	// nMax
									 NIL,;		 		// cFieldOK
									 "AllwaysFalse" ,;  // usuperdel
									 "AllwaysFalse" ,;  // udelOK
									 @oDlg,;        	// objeto de dialogo - oWnd
									 @aHeader,;			// Vetor com Colunas - AparHeader
									 @aRGECols;			// Vetor com Header - AparCols
									)
	 	// Validar a linha atual quando a GetDados perder o foco.
	 	oGet:oBrowse:bLostFocus := { || If(!Gpea720TudOk(), oGet:oBrowse:SetFocus(), .T.) }
		/*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		  ³ Define grupo do rodape          ³
		  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	//	@ (aObjSize[4,1] + 6) , ( ( aObjSize[4,2]+2		  ) ) 	GROUP oGroup TO ( aObjSize[4,3] +05 ),( (aObjSize[4,4])	  ) LABEL OemToAnsi(STR0015) OF oDlg PIXEL	 //"Pesquisar Funcionarios"
	//  ACERTO DE POSICAO DE 4 P/ 3
		If !lCadFun // se chamou pelo historico de contratos exibe opcoes de posicionamento de funcionario, se foi pelo GPEA010 nao mostra
			@ aObjSize[3,1], aObjSize[3,2] GROUP oGroup TO aObjSize[3,3], aObjSize[3,4] LABEL OemToAnsi(STR0015) OF oDlg PIXEL	 //"Pesquisar Funcionarios"
			oGroup:oFont:= oFont
			/*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			  ³ Lista Botoes de posicionamento do funcionario ³
			  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			@ aObjSize[3,1]+10, aObjSize[3,2]+08.96 	BUTTON oBtnPgPrev 	PROMPT OemToAnsi("<<")	 SIZE 021.5,009 DESIGN ACTION Gp720Movimenta(bRetrocAll) OF oDlg PIXEL
			@ aObjSize[3,1]+10, aObjSize[3,2]+29.96	BUTTON oBtnPrev		PROMPT OemToAnsi("<")	 SIZE 021.5,009 DESIGN ACTION Gp720Movimenta(bRetrocOne) OF oDlg PIXEL
			@ aObjSize[3,1]+10, aObjSize[3,2]+50.96	BUTTON oBntNext 	PROMPT OemToAnsi(">")	 SIZE 021.5,009 DESIGN ACTION Gp720Movimenta(bAvancaOne) OF oDlg PIXEL
			@ aObjSize[3,1]+10, aObjSize[3,2]+71.96	BUTTON oBtnPgNext 	PROMPT OemToAnsi(">>")	 SIZE 021.5,009 DESIGN ACTION Gp720Movimenta(bAvancaALL) OF oDlg PIXEL
		    AxPesqOrd("SRA",@aPesqIdx,,lSeeAll,@aPesqOrd)
		    cPesqOrd := aPesqOrd[1]
			@ aObjSize[3,1]+10, aObjSize[3,4]*0.28 		    COMBOBOX oPesqCbx 	VAR cPesqOrd ITEMS aPesqOrd SIZE 100,36 	PIXEL OF oDlg ON CHANGE If(lAxPesqui,(DbSelectArea(cAlias),DbSetOrder(aPesqIdx[oPesqCbx:nAt][1]), ,__oObjBrow:Refresh()),)    // //Ajuste para Funciones no Compiladas en RPO
		  	@ aObjSize[3,1]+10, (aObjSize[3,4]*0.28) + 110 	MSGET    oPesqGet 	VAR cPesqCampo 				SIZE 100,09 	PIXEL OF oDlg
		    @ aObjSize[3,1]+10, (aObjSize[3,4]*0.28) + 220 	BUTTON   "Ok" 									SIZE 021.5,009 	PIXEL OF oDlg ACTION (AxPesqSeek("SRA",.F.,cPesqCampo,,aPesqIdx,oPesqCbx:nAt,lSeeAll,),Gp720Movimenta(bFica))
		Endif
		bSet15	:= {|| nOpca:=1,If(oGet:TudoOk(), oDlg:End(), nOpca:=0)}
		bSet24	:= {|| oDlg:End()}
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar( oDlg , bSet15 , bSet24, NIL , aButtons )

	IF ( ( nOpcA == 1 ) .and. ( nOpcX == 4 ) )
       	MsAguarde( { || If(Gpea720TudOk(),Gpea720Grava(cAlias,cFil,cMat,aVirtual,aColsRec,nOpcx,.F.,.T.),.T.) }, OemToAnsi(STR0013)) //"Aguarde..."
	EndIF

End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Libera Locks						                           ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
If ( lRGELock )
	FreeLocks( "RGE" , NIL , .T. )
EndIf

RestArea( aArea )
IF ( nOpcX == 3 )
	MBrChgLoop(.F.)
EndIf

Return( NIL )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpea720Grava³ Autor ³ Equipe Advanced RH  ³ Data ³22/04/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Grava no arquivo de Historico de Contratos                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA720                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function Gpea720Grava( cAlias , cFil , cMat , aVirtual , aRegAltera , nOpc, lMontaGetDados, lPerg )
Local cTimeIni			:= Time()
Local aRGECols		:= ( oGet:aCols )
Local cPrefixo		:= ( PrefixoCpo( cAlias ) + "_" )
Local cCampo		:= ""
Local lTudoIgual	:= .F.
Local nX 			:= 0
Local nY 			:= 0
Local nLenHeader	:= Len( aHeader 	)
Local nLenCols		:= Len( aRGECols   	)
Local nLenRegAlt	:= Len( aRegAltera	)
Local nPosTip  	:= GdFieldPos("RGE_TIPOCO")
Local nPosMot 	:= GdFieldPos("RGE_MOTCON")
Local nPosIni 	:= GdFieldPos("RGE_DATAIN")
Local nPosFim	:= GdFieldPos("RGE_DATAFI")
Local aGP720Log		:= {}
Local aGP720TitLog	:= {}

IF nOpc == 4 // se foi chamado pela rotina de correcao
	IF !ArrayCompare( aRGECols , aColsAnt ) // se o array atual esta diferente do carregado inicialmente
		If lPerg //Se deve fazer a pergunta ...
			If !(MsgYesNo( OemToAnsi( STR0017 ) ) )	//"Deseja salvar as alteracoes?"
				// se nao deseja gravar retorna para a Getdados e nao grava nada
				Return(.T.)
			EndIf
		EndIf
	Else // se o array atual esta igual ao carregado inicialmente retorna para a Getdados e nao grava nada
		Return(.T.)
	Endif
Else // se nao foi chamado pela rotina de correcao sempre retorna para a Getdados e nao grava nada
	Return(.T.)
EndIF

// se houve alteracao e o usuario confirmou a gravacao
Begin Transaction
	IF ( nLenRegAlt > 0 )
		For nX := 1 To nLenRegAlt // analisa cada elemento do acols para verificar se houve alteracao
			lTudoIgual := ArrayCompare( aRGECols[ nX ] , aColsAnt[nX] )
			IF ( lTudoIgual ) // se nao houve alteracao na linha do acols passa para o proximo elemento do acols
				Loop
			EndIF
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Adiciona Informacoes no Log de Processamento							³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			aAdd( aGP720TitLog , {0,STR0037} )	// "Log de Correções do Histórico de Contratos"
			aAdd( aGP720Log , {STR0038 + " " + cTimeIni + " " + Dtoc( MsDate() )+" "+STR0006+SRA->RA_MAT+" "+STR0039 + " " + AllTrim(CUSERNAME)+Chr(13) })
			// "Inicio da gravacao da Correcao:"###"Matricula:"###"Usuário responsável pela Correcao:"
			( cAlias )->( dbGoto( aRegAltera[nX] ) ) // posiciona no registro correspondente da tabela RGE
			( cAlias )->( RecLock( cAlias , .F. , .T. ) )
			For nY := 1 To nLenHeader
				/*
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Obtem o Campo para Gravacao  							       ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				cCampo := aHeader[nY,2]
				/*
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Nao Grava Campo Virtual									   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				IF ( aScan(aVirtual,cCampo) # 0 )
					Loop
				EndIF
				xConteudo := aRGECols[nX,nY]
				If xConteudo <> (cAlias)->( &cCampo )
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³Adiciona Informacoes no Log de Processamento							³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
					If ValType(xConteudo) == "D"
						cTxtAnt := Dtoc((cAlias)->( &cCampo ))
						cTxtAtu := Dtoc(xConteudo)
					Else
						cTxtAnt := AllTrim((cAlias)->( &cCampo ))
						cTxtAtu := AllTrim(xConteudo)
					Endif
					aAdd( aGP720Log , {STR0040+cCampo+STR0041+cTxtAnt+STR0042+cTxtAtu+Chr(13)} ) // "Campo "###" alterado de: "###" para: "
					(cAlias)->( &cCampo ) := xConteudo
				Endif
			Next nY
			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Destrava o Registro										   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			( cAlias )->( MsUnLock() )
		Next nX
		nX := Len(aRGECols)
		lTudoIgual := ArrayCompare( aRGECols[ nX ] , aColsAnt[nX] )
		IF ! lTudoIgual  // se houve alteracao na linha do acols da ultima renovacao / contrato
						// atualiza o SRA com os dados do RGE da ultima renovacao / contrato
			dbSelectArea("SRA")
			RecLock("SRA",.F.)
			SRA->RA_TIPOCO  := aRGECols[nX,nPosTip]
			SRA->RA_MOTCON  := aRGECols[nX,nPosMot]
			SRA->RA_DATAINI := aRGECols[nX,nPosIni]
			SRA->RA_DATAFIM := aRGECols[nX,nPosFim]
		    MsUnlock()
			dbSelectArea("RGE")
		Endif
	EndIF
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Adiciona Informacoes do Processamento no Log Geral           			³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aAdd( aGP720Log , {STR0044 + " " + Time()} ) // "Fim da gravacao da Correcao:"
	MsAguarde( { || fMakeLog(aGP720Log,aGP720TitLog,"",.F.,"GPEA720",STR0037,"M","P") } ,  STR0037 ) //"Log de Correções do Histórico de Contratos"
	/*fMakeLog(	aLogFile 	,;	//Array que contem os Detalhes de Ocorrencia de Log
	aLogTitle	,;	//Array que contem os Titulos de Acordo com as Ocorrencias
	cPerg		,;	//Pergunte a Ser Listado
	lShowLog	,;	//Se Havera "Display" de Tela
	cLogName	,;	//Nome Alternativo do Log
	cTitulo		,;	//Titulo Alternativo do Log
	cTamanho	,;	//Tamanho Vertical do Relatorio de Log ("P","M","G")
	cLandPort	,;	//Orientacao do Relatorio ("P" Retrato ou "L" Paisagem )
	aRet		,;	//Array com a Mesma Estrutura do aReturn
	lAddOldLog	 ;	//Se deve Manter ( Adicionar ) no Novo Log o Log Anterior
	)*/
	aColsAnt	 := aClone( aCols ) // atualiza acolsAnt com os dados do aCols
	lGravarAntes := .F.
End Transaction

Return( .T. )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ Gp720VldIni 	³Autor³Rogerio Vaz Melonio³ Data ³09/06/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³ Valida a data inicio do contrato                           ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA720                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Gp720VldIni()
Local nX

If cPaisLoc == "BRA"
    Return(.T.)
EndIf
nPosIni	:= GdFieldPos("RGE_DATAIN")
nPosFim	:= GdFieldPos("RGE_DATAFI")
nPosTip  	:= GdFieldPos("RGE_TIPOCO")
nPosMov  	:= GdFieldPos("RGE_MOVIM")
aCols  	:= oGet:aCols
n 	   		:= If(Type("n")="U",oGet:nat, n)
cTipoCont 	:= acols[n,nPosTip] // SRA->RA_TIPOCO
dDataIni  	:= &(ReadVar())
/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica se a Data Inicio esta devidamente Preenchida³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
IF Empty(dDataIni)
	MsgStop(STR0005) // "Data Inicio deve ser preenchida"
	Return(.F.)
EndIF
/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica Itens Duplicados na GetDados						   ³
³ Nao eh permitido registro do mesmo tipo de contrato e mesma  ³
³ data inicial.     										   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
// procura no acols linha que tenha tipo de contrato + data inicio com mesmo conteudo da linha digitada
nPosAcols := aScan(aCols,{|x| x[nPosTip]+Dtos(x[nPosIni]) == cTipoCont+Dtos(dDataIni) } )
If (nPosAcols > 0) .And. (nPosAcols <> n)
	MsgStop(STR0021+AllTrim(Str(nPosAcols))) // "Data Inicio de contrato/renovacao ja existe para o mesmo tipo de contrato - linha "
	Return(.F.)
Endif

// procura no acols linha que tenha data inicio com mesmo conteudo da linha digitada
nPosAcols := aScan(aCols,{|x| Dtos(x[nPosIni]) == Dtos(dDataIni) } )
If (nPosAcols > 0) .And. (nPosAcols <> n)
	MsgStop(STR0022+AllTrim(Str(nPosAcols))) // "Data Inicio de contrato/renovacao ja existe para o Funcionario - linha "
	Return(.F.)
Endif

// procura no acolsAnt linha que tenha tipo de contrato + data inicio com mesmo conteudo da linha digitada
nPosAcols := aScan(aColsAnt,{|x| x[nPosTip]+Dtos(x[nPosIni]) == cTipoCont+Dtos(dDataIni) } )
If (nPosAcols > 0) .And. (nPosAcols <> n)
	MsgStop(STR0021+AllTrim(Str(nPosAcols))) // "Data Inicio de contrato/renovacao ja existe para o mesmo tipo de contrato - linha "
	Return(.F.)
Endif

// procura no acolsAnt linha que tenha data inicio com mesmo conteudo da linha digitada
nPosAcols := aScan(aColsAnt,{|x| Dtos(x[nPosIni]) == Dtos(dDataIni) } )
If (nPosAcols > 0) .And. (nPosAcols <> n)
	MsgStop(STR0022+AllTrim(Str(nPosAcols))) // "Data Inicio de contrato/renovacao ja existe para o Funcionario - linha "
	Return(.F.)
Endif

// Procura em todas as linhas do acols/acolsAnt se a data inicio digitada pertence a algum intervalo de datas ja gravado
nPosAcols := aScan(aCols,{|x| ( Dtos(dDataIni) >= Dtos(x[nPosIni]) ) .And. ( Dtos(dDataIni) <= Dtos(x[nPosFim])) } )
If (nPosAcols > 0) .And. (nPosAcols <> n)
	MsgStop(STR0022+AllTrim(Str(nPosAcols))) // "Data Inicio de contrato/renovacao ja existe para o Funcionario - linha "
	Return(.F.)
Endif

nPosAcols := aScan(aColsAnt,{|x| ( Dtos(dDataIni) >= Dtos(x[nPosIni]) ) .And. ( Dtos(dDataIni) <= Dtos(x[nPosFim])) } )
If (nPosAcols > 0) .And. (nPosAcols <> n)
	MsgStop(STR0022+AllTrim(Str(nPosAcols))) // "Data Inicio de contrato/renovacao ja existe para o Funcionario - linha "
	Return(.F.)
Endif

// se for renovacao, verifica se a data inicio eh menor que a data de contratacao
cMov  := acols[n,nPosMov]
If cMov == "R" 	// procura pela contratacao no aCols
	If (nPosAcols := aScan(aCols,{|x| x[nPosTip]+x[nPosMov] == cTipoCont+"C" } )) > 0 // Localiza a linha da contratacao do mesmo tipo de contrato
		dDataCont := aCols[nPosAcols,nPosIni]
		If dDataIni < dDataCont // nao permite data de renovacao digitada menor que a correspondente data de contratacao
			MsgStop(STR0024+AllTrim(Str(nPosAcols))+" "+Dtoc(dDataCont) ) // "Data Inicio de Renovação não pode ser menor que a data de Contratação - linha "
			Return(.F.)
		Endif
	Else // nao foi encontrada contratacao
		MsgStop(STR0025) // "Data Inicio de Contrataçã não foi encontrada para a Renovação atual"
		Return(.F.)
	Endif
Else  // cMov == "C" (contratacao ou alteracao) verifica se no aCols existe alguma contratacao / alteracao com data anterior
	lContrAnt := .F.
	For nX := 1 To Len(aCols)
		cMovimento := aCols[nx,nPosMov]
		dDataCont := aCols[nx,nPosIni]
		If cMovimento == "C" .And. dDataIni <= dDataCont .And. nX <> n
			lContrAnt := .T.
			Exit
		Endif
	Next
	If lContrAnt
		MsgStop(STR0026+AllTrim(Str(nX))) // "Data Inicio de Contrataçã/Alteração não pode ser inferior à data da primeira contratação - linha "
		Return(.F.)
	Endif
	lContrPos := .F.
	// verifica se no aCols existe alguma contratacao / alteracao com data posterior
	For nX := 1 To Len(aCols)
		cMovimento := aCols[nx,nPosMov]
		dDataCont := aCols[nx,nPosIni]
		If dDataIni > dDataCont .And. nX <> n
			lContrPos := .T.
			Exit
		Endif
	Next
	If lContrPos
		MsgStop(STR0032+AllTrim(Str(nX))) // "Data Inicio de Contrataçã/Alteração não pode ser posterior à data de outra contratação/renovação - linha "
		Return(.F.)
	Endif
Endif

Return(.T.)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ Gp720VldFim 	³Autor³Rogerio Vaz Melonio³ Data ³05/05/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³ Valida a data fim do contrato                              ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA720                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Gp720VldFim()
Local nX
Local nRegs:= 0

If cPaisLoc == "BRA"
    Return(.T.)
EndIf

n 	   		:= If(Type("n")="U",oGet:nat, n)
dDataFim  	:= &(ReadVar())
dDataIni 	:= GdFieldGet("RGE_DATAIN",n)
cTipoCont	:= GdFieldGet("RGE_TIPOCO",n)  // SRA->RA_TIPOCO
nPosTip  	:= GdFieldPos("RGE_TIPOCO")
nPosMov  	:= GdFieldPos("RGE_MOVIM")
nPosIni	:= GdFieldPos("RGE_DATAIN")
nPosFim	:= GdFieldPos("RGE_DATAFI")

IF cPaisLoc == "PTG"

	If cTipoCont $ "01/03" // se o tipo de contrato eh a termo incerto ou sem termo a data final nao deve ser preenchida.
		If !Empty(dDataFim)
			MsgStop(STR0020) // "Contrato sem Termo (01) ou a Termo Incerto (03) não deve ter data fim preenchida"
			Return(.F.)
		Endif
		Return(.T.)
	Endif
	If (dDataFim <= dDataIni)
		MsgStop(STR0009) // "Data Final deve ser maior que a Inicial"
		Return(.F.)
	Endif
ENDIF

IF cPaisLoc == "COL"
	If cTipoCont == "03"      // se o tipo de contrato eh Termino Indefinido a data final nao deve ser preenchida.
		If !Empty(dDataFim)
			MsgStop(STR0047) // "Contrato a Termo indefinido não deve ter data fim preenchida"
			Return(.F.)
		Endif
		Return(.T.)
	Endif
	If (dDataFim <= dDataIni)
		MsgStop(STR0009) // "Data Final deve ser maior que a Inicial"
		Return(.F.)
	Endif
ENDIF

IF cPaisLoc == "VEN"
	If cTipoCont == "01"      // se o tipo de contrato eh Termino Indefinido a data final nao deve ser preenchida.
		If !Empty(dDataFim)
			MsgStop(STR0047) // "Contrato a Termo indefinido não deve ter data fim preenchida"
			Return(.F.)
		Endif
		Return(.T.)
	Endif
	If (dDataFim <= dDataIni)
		MsgStop(STR0009) // "Data Final deve ser maior que a Inicial"
		Return(.F.)
	Endif
ENDIF

If cPaisLoc == "ANG"
	If Left(cTipoCont,1) == "1"      // se o tipo de contrato eh Termo Incerto a data final nao deve ser preenchida.
		If !Empty(dDataFim)
			MsgStop(STR0047) // "Contrato a Termo indefinido não deve ter data fim preenchida"
			Return(.F.)
		Endif
		Return(.T.)
	EndIf
	If (dDataFim <= dDataIni)
		MsgStop(STR0009) // "Data Final deve ser maior que a Inicial"
		Return(.F.)
	EndIf
EndIf

	// Procura em todas as linhas do acols/acolsAnt se a data fim digitada pertence a algum intervalo de datas ja gravado
nPosAcols := aScan(aCols,{|x| ( Dtos(dDataFim) >= Dtos(x[nPosIni]) ) .And. ( Dtos(dDataFim) <= Dtos(x[nPosFim])) } )
If (nPosAcols > 0) .And. (nPosAcols <> n)

	MsgStop(STR0033+AllTrim(Str(nPosAcols))) // "Data Fim de contrato/renovacao ja existe para o Funcionario - linha "
	Return(.F.)
Endif

nPosAcols := aScan(aColsAnt,{|x| ( Dtos(dDataFim) >= Dtos(x[nPosIni]) ) .And. ( Dtos(dDataFim) <= Dtos(x[nPosFim])) } )
If (nPosAcols > 0) .And. (nPosAcols <> n)
	MsgStop(STR0033+AllTrim(Str(nPosAcols))) // "Data Fim de contrato/renovacao ja existe para o Funcionario - linha "
	Return(.F.)
Endif

aCols := oGet:aCols
// se for renovacao, verifica se a data inicio eh menor que a data de contratacao
cMov  := acols[n,nPosMov]
If cMov == "R" 	// procura pela contratacao no aCols
	If (nPosAcols := aScan(aCols,{|x| x[nPosTip]+x[nPosMov] == cTipoCont+"C" } )) > 0 // Localiza a linha da contratacao do mesmo tipo de contrato
		dDataCont := aCols[nPosAcols,nPosIni]
		If dDataFim < dDataCont // nao permite data fim de renovacao digitada menor que a correspondente data de contratacao
			MsgStop(STR0034+AllTrim(Str(nPosAcols))+" "+Dtoc(dDataCont) ) // "Data Fim de Renovação não pode ser menor que a data de Contratação - linha "
			Return(.F.)
		Endif
	Else // nao foi encontrada contratacao
		MsgStop(STR0025) // "Data Inicio de Contrataçã não foi encontrada para a Renovação atual"
		Return(.F.)
	Endif
Else  // cMov == "C" (contratacao ou alteracao) verifica se no aCols existe alguma contratacao / alteracao com data anterior
	lContrAnt := .F.
	nRegs := Len(aCols)

	For nX := 1 To nRegs
		cMovimento := aCols[nx,nPosMov]
		dDataCont := aCols[nx,nPosIni]
		If cMovimento == "C" .And. dDataFim <= dDataCont .And. n < nRegs
			lContrAnt := .T.
			Exit
		Endif
	Next

	If lContrAnt
		MsgStop(STR0035+AllTrim(Str(nX))) // "Data Fim de Contrataçã/Alteração não pode ser inferior à data da primeira contratação - linha "
		Return(.F.)
	Endif
	lContrPos := .F.

	// verifica se no aCols existe alguma contratacao / alteracao com data posterior
	For nX := 1 To nRegs
		cMovimento := aCols[nx,nPosMov]
		dDataCont := aCols[nx,nPosIni]
		If dDataFim > dDataCont .And. n < nRegs
			lContrPos := .T.
			Exit
		Endif
	Next

	If lContrPos
		MsgStop(STR0036+AllTrim(Str(nX))) // "Data Fim de Contrataçã/Alteração não pode ser posterior à data de outra contratação/renovação - linha "
		Return(.F.)
	Endif

Endif

// verifica limitacoes de renovacao cadastradas na tabela de tipos de contratos
lRetorna := Gp720VldCtr(dDataFim,dDataIni,n)
Return(lRetorna)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ Gp720VldCtr 	³Autor³Rogerio Vaz Melonio³ Data ³11/06/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³ Valida os limites do contrato                              ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA720                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Gp720VldCtr(dDataFim,dDataIni,n)
Local nX
cTipoCont 	:= gdFieldGet("RGE_TIPOCO",n) // SRA->RA_TIPOCO

IF cPaisLoc == "PTG"
	nDiasContr  	:= Val(fDescRCC(cTabTip,cTipoCont,1,2,53,4))
	nDiasMin   	:= Val(fDescRCC(cTabTip,cTipoCont,1,2,57,4)) // dias minimo de contrato / renovacao
	nDiasMax   	:= Val(fDescRCC(cTabTip,cTipoCont,1,2,61,4)) // dias maximo de renovacao
	nPerMin		:= Val(fDescRCC(cTabTip,cTipoCont,1,2,69,4)) // periodo minimo de renovacao apos a ultima
	nPerMax		:= Val(fDescRCC(cTabTip,cTipoCont,1,2,73,4)) // periodo maximo de renovacao apos a ultima
	nQtdRenov 		:= Val(fDescRCC(cTabTip,cTipoCont,1,2,65,4)) // quantidade maxima de renovacoes
	lExcessao   	:= (nPerMin > 0) .And. (nPerMax > 0) // flag para indicar se os campos de excessao estao preenchidos
	nPosFim		:= GdFieldPos("RGE_DATAFI")
	nPosIni		:= GdFieldPos("RGE_DATAIN")
	nPosTip  		:= GdFieldPos("RGE_TIPOCO")
	nPosMov  		:= GdFieldPos("RGE_MOVIM")
	aCols  		:= oGet:aCols
	cMov  			:= acols[n,nPosMov]
ELSEIF cPaisLoc $ "COL|VEN|ANG"
	nDiasContr  	:= Val(fDescRCC(cTabTip,cTipoCont,1,2,53,4))
	nDiasMin   	:= Val(fDescRCC(cTabTip,cTipoCont,1,2,57,4)) // dias minimo de contrato / renovacao
	nDiasMax   	:= Val(fDescRCC(cTabTip,cTipoCont,1,2,61,4)) // dias maximo de renovacao
	nQtdRenov 		:= Val(fDescRCC(cTabTip,cTipoCont,1,2,65,4)) // quantidade maxima de renovacoes
	lExcessao   	:= .F.
	nPosFim		:= GdFieldPos("RGE_DATAFI")
	nPosIni		:= GdFieldPos("RGE_DATAIN")
	nPosTip  		:= GdFieldPos("RGE_TIPOCO")
	nPosMov  		:= GdFieldPos("RGE_MOVIM")
	aCols  		:= oGet:aCols
	cMov  			:= acols[n,nPosMov]
ENDIF

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica Itens Duplicados na GetDados						   ³
³ Nao eh permitido registro do mesmo tipo de contrato e mesma  ³
³ data inicial.     										   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
// procura no acols linha que tenha data fim com mesmo conteudo da linha digitada
nPosAcols := aScan(aCols,{|x| Dtos(x[nPosFim]) == Dtos(dDataFim) } )
If (nPosAcols > 0) .And. (nPosAcols <> n)
	MsgStop(STR0023+AllTrim(Str(nPosAcols))) // "Data Fim de contrato/renovacao ja existe para o Funcionario - linha "
	Return(.F.)
Endif

// procura no acolsAnt linha que tenha data fim com mesmo conteudo da linha digitada
nPosAcols := aScan(aColsAnt,{|x| Dtos(x[nPosFim]) == Dtos(dDataFim) } )
If (nPosAcols > 0) .And. (nPosAcols <> n)
	MsgStop(STR0023+AllTrim(Str(nPosAcols))) // "Data Fim de contrato/renovacao ja existe para o Funcionario - linha "
	Return(.F.)
Endif

// Procura em todas as linhas do acols/acolsAnt se a data inicio digitada pertence a algum intervalo de datas ja gravado
nPosAcols := aScan(aCols,{|x| ( Dtos(dDataFim) >= Dtos(x[nPosIni]) ) .And. ( Dtos(dDataFim) <= Dtos(x[nPosFim])) } )
If (nPosAcols > 0) .And. (nPosAcols <> n)
	MsgStop(STR0023+AllTrim(Str(nPosAcols))) // "Data Fim de contrato/renovacao ja existe para o Funcionario - linha "
	Return(.F.)
Endif

nPosAcols := aScan(aColsAnt,{|x| ( Dtos(dDataFim) >= Dtos(x[nPosIni]) ) .And. ( Dtos(dDataFim) <= Dtos(x[nPosFim])) } )
If (nPosAcols > 0) .And. (nPosAcols <> n)
	MsgStop(STR0023+AllTrim(Str(nPosAcols))) // "Data Fim de contrato/renovacao ja existe para o Funcionario - linha "
	Return(.F.)
Endif

// verifica limitacoes de renovacao cadastradas na tabela de tipos de contratos
If cMov == "C" 	// valida a data fim quando a linha eh de contratacao
	dDataCont := aCols[n,nPosIni]
	If (dDataFim > dDataCont + nDiasContr - 1) // verifica se nao ultrapassou o maximo de dias do contrato
		MsgStop(STR0008+Dtoc(dDataCont + nDiasContr - 1)) // "Data Final ultrapassa o limite de dias do Tipo de Contrato - data máxima incluindo renovações: "
		Return(.F.)
	Endif
Else
	cMov  := acols[n,nPosMov]
	nQtRge := 0 // contador de renovacoes do mesmo tipo de contrato
	// procura no acols a linha que tem a data inicio de contrato
	If (nPosAcols := aScan(aCols,{|x| x[nPosTip]+x[nPosMov] == cTipoCont+"C" } )) > 0 // Localiza a linha da contratacao do mesmo tipo de contrato
		dDataCont := aCols[nPosAcols,nPosIni]
		// Conta as renovacoes que ja foram realizadas para o mesmo tipo de contrato
		For nX := 1 To Len(aCols)
			If aCols[nX][nPosTip] == cTipoCont .And. aCols[nX][nPosMov] == "R"
				nQtRge++
			Endif
		Next
	Else // nao foi encontrada contratacao
		MsgStop(STR0025) // "Data Inicio de Contrataçã não foi encontrada para a Renovação atual"
		Return(.F.)
	Endif
	// verifica se nao ultrapassou o maximo de dias do contrato
	lMaxDias  := (dDataFim-dDataCont+1)>nDiasContr // se a data fim da renovacao ultrapassa o limite de dias de contrato
	lDiasMin  := (dDataFim-dDataIni+1)<nDiasMin // se data fim de vigencia da renovacao eh inferior `a data minima
	lDiasMax  := (dDataFim-dDataIni+1)>nDiasMax // se data fim de vigencia da renovacao eh superior `a data maxima
	If nQtRge > nQtdRenov // se passou o maximo de renovacoes para o tipo de contrato
		If lExcessao // se eh excessao
			If nQtRge == nQtdRenov + 1 // se ja renovou mais uma vez alem da ultima
				lMaxDias  := .F.  // prazo maximo eh controlado pela variavel nPerMax
				lDiasMin  := ((dDataFim-dDataIni+1) < nPerMin) // se vigencia da renovacao eh inferior `a tolerancia minima
				lDiasMax  := ((dDataFim-dDataIni+1) > nPerMax) // se vigencia da renovacao eh superior `a tolerancia maxima
				// tratar aqui a consistencia de data minima e maxima comparadas com a tolerancia
				If lDiasMax
					MsgStop(STR0030+" - "+Dtoc(dDataIni + nPerMax - 1))
					// "Data Final da renovação após a última deve respeitar à máxima do Tipo de Contrato"
					Return(.F.)
				Endif
				If lDiasMin
					MsgStop(STR0029+" - "+Dtoc(dDataIni + nPerMin - 1))
					// "Data Final da renovação após a última deve respeitar à mínima do Tipo de Contrato"
					Return(.F.)
				Endif
			Endif
		Endif
	Endif
	// se nao atingiu o maximo de renovacoes do contrato verifica se a nova renovacao esta dentro dos limites do tipo de contrato
	If lMaxDias // se a data fim da renovacao ultrapassa o limite de dias de contrato
		MsgStop(STR0008+Dtoc(dDataCont + nDiasContr - 1)) // "Data Final ultrapassa o limite de dias do Tipo de Contrato - data máxima incluindo renovações: "
		Return(.F.)
	Endif

	If lDiasMax
		MsgStop(STR0028+" - "+Dtoc(dDataIni + nDiasMax - 1)) // "Data Final deve ser inferior ao máximo de dias do Tipo de Contrato"
		Return(.F.)
	Endif

	If lDiasMin
		MsgStop(STR0027+" - "+Dtoc(dDataIni + nDiasMin - 1)) // "Data Final deve ser superior ao mínimo de dias do Tipo de Contrato"
		Return(.F.)
	Endif
Endif
Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpea720LinOk³ Autor ³ Rogerio Vaz Melonio ³ Data ³22/04/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Critica linha digitada                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA720                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Gpea720LinOk( oBrowse )
aCposKey	:= {}
lLinOk		:= .T.
nPosIni 	:= GdFieldPos("RGE_DATAIN")
nPosFim	:= GdFieldPos("RGE_DATAFI")
nPosTip  	:= GdFieldPos("RGE_TIPOCO")
nPosMov  	:= GdFieldPos("RGE_MOVIM")

If !lCorrecao// se nao foi chamada a funcao de correcao sempre retorna .T.
	Return(.T.)
Endif

aCols  := oGet:aCols
If (!ArrayCompare( aCols , aColsAnt ) .And. Empty(aCols)) .Or. (ArrayCompare( aCols , aColsAnt ))
	// Se eh o primeiro registro visualizado ou se nao houve alteracao sempre retorna .T.
	Return(.T.)
Endif

// Variavel n nao estara criada quando a funcao de validacao
// for chamada pelo LostFocus da GetDados. Se estiver criada,
// continua com o valor de n, senao, recebe a linha que estava
// selecionada da GetDados no momento que perdeu o foco.
n 	   := If(Type("n")="U",oGet:nat, n)

Begin Sequence
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Se a Linha da GetDados Nao Estiver Deletada				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF !( GdDeleted() )
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Verifica Itens Duplicados na GetDados						   ³
		³ Nao eh permitido registro do mesmo tipo de contrato e mesma  ³
		³ data inicial.     										   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		// verificar se ja existe um registro que tenha a chave formada pela mesma
		// filial + matricula + tipo de contrato + data de inicio em posicao diferente da linha
		// atual do acols.
		aCposKey := { "RGE_MOVIM" , "RGE_TIPOCO" , "RGE_DATAIN" }
		IF !( lLinOk := GdCheckKey( aCposKey , 4 ) )
			Break
		EndIF
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Verifica se a Data Inicio esta devidamente Preenchida³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		IF !( lLinOk := !( Empty(aCols[n, nPosIni])))
			MsgStop(STR0005) // "Data Inicio deve ser preenchida"
			Break
		EndIF
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Verifica se a Data Fim esta devidamente Preenchida   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		lDtFimVazia := Empty(aCols[n, nPosFim] )

		IF cPaisLoc == "PTG"

			// verificar se o tipo de contrato eh 01/03

			cTipoCont   := aCols[n, nPosTip] // SRA->RA_TIPOCO
			nDiasContr  := Val(fDescRCC(cTabTip,cTipoCont,1,2,53,4))
			nDiasMin   	:= Val(fDescRCC(cTabTip,cTipoCont,1,2,57,4)) // dias minimo de contrato / renovacao
			nDiasMax   	:= Val(fDescRCC(cTabTip,cTipoCont,1,2,61,4)) // dias maximo de renovacao
			nPerMin		:= Val(fDescRCC(cTabTip,cTipoCont,1,2,69,4)) // periodo minimo de renovacao apos a ultima
			nPerMax		:= Val(fDescRCC(cTabTip,cTipoCont,1,2,73,4)) // periodo maximo de renovacao apos a ultima
			lExcessao   := (nPerMin > 0) .And. (nPerMax > 0) // flag para indicar se os campos de excessao estao preenchidos
			If cTipoCont $ "01/03" // se o tipo de contrato eh a termo incerto ou sem termo a data final nao deve ser preenchida.
				If !Empty(aCols[n, nPosFim])
					lLinOk := .F.
					MsgStop(STR0020) // "Contrato sem Termo (01) ou a Termo Incerto (03) não deve ter data fim preenchida"
				Else
					lLinOk := .T.
				Endif
				Break
			Endif
				// para demais tipos de contrato que serao a termo certo

			If (aCols[n, nPosFim] <= aCols[n, nPosIni]) // verifica se data fim > data inicio
				lLinOk := .F.
				MsgStop(STR0009) // "Data Final deve ser maior que a Inicial"
				Break
			Endif
			dDataFim := aCols[n, nPosFim]
			dDataIni := aCols[n, nPosIni]
			lLinOk := Gp720VldCtr(dDataFim,dDataIni,n)

		ElseIF  cPaisLoc == "ANG"

				cTipoCont   := aCols[n, nPosTip] // SRA->RA_TIPOCO
				nDiasContr  := Val(fDescRCC(cTabTip,cTipoCont,1,2,53,4))
				nDiasMin   	:= Val(fDescRCC(cTabTip,cTipoCont,1,2,57,4)) // dias minimo de contrato / renovacao
				nDiasMax   	:= Val(fDescRCC(cTabTip,cTipoCont,1,2,61,4)) // dias maximo de renovacao
				If Left(cTipoCont,1) == "1"      // se o tipo de contrato eh Termo Incerto a data final nao deve ser preenchida.
					If !Empty(aCols[n, nPosFim])
						lLinOk := .F.
						MsgStop(STR0047) // "Contrato a Termo Indefinido não deve ter data fim preenchida"
					Else
						lLinOk := .T.
					Endif
					Break
				Endif
					// para demais tipos de contrato que serao a termo Fixo

				If (aCols[n, nPosFim] <= aCols[n, nPosIni]) // verifica se data fim > data inicio
					lLinOk := .F.
					MsgStop(STR0009) // "Data Final deve ser maior que a Inicial"
					Break
				Endif
				dDataFim := aCols[n, nPosFim]
				dDataIni := aCols[n, nPosIni]
				lLinOk := Gp720VldCtr(dDataFim,dDataIni,n)

		ElseIF  cPaisLoc == "VEN"

			   // verificar se o tipo de contrato eh 01/03

				cTipoCont   := aCols[n, nPosTip] // SRA->RA_TIPOCO
				nDiasContr  := Val(fDescRCC(cTabTip,cTipoCont,1,2,53,4))
				nDiasMin   	:= Val(fDescRCC(cTabTip,cTipoCont,1,2,57,4)) // dias minimo de contrato / renovacao
				nDiasMax   	:= Val(fDescRCC(cTabTip,cTipoCont,1,2,61,4)) // dias maximo de renovacao
				If cTipoCont $ "01" // se o tipo de contrato eh a termo indeterminado a data final nao deve ser preenchida.
					If !Empty(aCols[n, nPosFim])
						lLinOk := .F.
						MsgStop(STR0047) // "Contrato Termo Indefinido (03) não deve ter data fim preenchida"
					Else
						lLinOk := .T.
					Endif
					Break
				Endif
					// para demais tipos de contrato que serao a termo Fixo

				If (aCols[n, nPosFim] <= aCols[n, nPosIni]) // verifica se data fim > data inicio
					lLinOk := .F.
					MsgStop(STR0009) // "Data Final deve ser maior que a Inicial"
					Break
				Endif
				dDataFim := aCols[n, nPosFim]
				dDataIni := aCols[n, nPosIni]
				lLinOk := Gp720VldCtr(dDataFim,dDataIni,n)
		EndIF
   ENDIF
End Sequence
Return( lLinOk )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gpea720TudOk³ Autor ³ Rogerio Vaz Melonio ³ Data ³22/04/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verifica o Tudo OK                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA720                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Gpea720TudOk( oBrowse )
Local nX

If lCadFun // se foi chamado pelo cadastro de funcionario sempre retorna .T.
	lTudoOk := .T.
	Return( lTudoOk )
Endif

If lTudoOk // se ja foi tudo validado anteriormente, retorna .T.
	Return( lTudoOk )
Endif

If !lCorrecao// se nao foi chamada a funcao de correcao sempre retorna .T. para sair da rotina
	Return(.T.)
Endif

aRGECols := oGet:aCols
If ArrayCompare(aRGECols,aColsAnt) // se nao houve alteracao sempre retorna .T.
	Return(.T.)
Endif

Begin Sequence
	IF ( Len(aRGECols) > 0 )
		For nX := 1 To Len(aRGECols) // analisa cada elemento do acols para verificar se houve alteracao
			lTudoIgual := ArrayCompare( aRGECols[ nX ] , aColsAnt[nX] )
			// verificar cada linha do acols modificada
			n := nX
			If !( lTudoOk := Gpea720LinOk() )
				Break
			Endif
		Next nX
	EndIF
End

Return( lTudoOk )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³gp720MontaGetDados ³ Autor ³ Rogerio Vaz Melonio   ³ Data ³ 22/04/2008						       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Montar a GetDados de acordo com o funcionario selecionado       						           ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ³
³Sintaxe   ³gp720MontaGetDados(cAlias, nOpcX, cFil, cMat, aVirtual, aColsRec, aRGECols, lGravarAntes, lEntrada)³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³cAlias                                                                               		       ³
³          ³nOpcX  																							   ³
³          ³cFil - Filial.																					   ³
³          ³cMat - Matricula.																				   ³
³          ³aVirtual - array dos campos virtuais.															   ³
³          ³aColsRec - array que contem o Recno() dos registros da aCols.									   ³
³          ³aRGECols 																					       ³
³          ³lGravarAntes - indica se deve chamar a funcao de gravacao antes de montar a tela.				   ³
³          ³lEntrada - indica se a funcao gp720MontaGetDados esta sendo chamada na entrada da rotina de        ³
³          ³           historico de contratos.                                                                 ³
³          ³bOpcRoda - executa skip do registro da tabela SRA conforme botao acionado do rodape da Getdados    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Logico                                                          								   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Gpea720Mnt                                                            							   ³
³          ³Na troca do registro do funcionario                                   							   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function gp720MontaGetDados(cAlias, nOpcX, cFil, cMat, aVirtual, aColsRec, aRGECols, lGravarAntes, lEntrada,bOpcRoda)
Local aGdNaoAltera	:= {}
Local bSkip			:= { || .F. }
Local cQueryCond		:= ""
Local aGpaRGEField	:= {}
Local nUsado  		:= 0
Local aVisual			:= {}
Local cKeySeek		:= ""
Local nPosPd			:= 0
Local nPosDesc		:= 0
Local nPosHoras		:= 0
Local nPosTp1			:= 0
Local nX				:= 0
Local nTamArray		:= 0
Local lAs400			:= ( TcSrvType() == "AS/400" )		//-- Retiramos a execucao da query para servidores AS/400.
Default bOpcRoda 		:= { || .F. }
Default lEntrada 		:= .F.

	// Antes de montar a tela, verifica se deseja gravar ... caso tenha tido alguma alteracao.
	If lGravarAntes .And. lCorrecao
		aRGECols := oGet:aCols
		If !ArrayCompare(aRGECols,aColsAnt) // se houve alteracao faz validacao do acols
			lTudoOk := Gpea720TudOk()
			If lTudoOk // se o acols foi validado chama a rotina de gravacao antes de avancar para o proximo registro
				If MsgYesNo( OemToAnsi( STR0017 ) ) //"Deseja salvar as alteracoes?"
					// se nao deseja gravar retorna para a Getdados e nao grava nada
					MsAguarde( { || Gpea720Grava(cAlias,cFil,cMat,aVirtual,aColsRec,nOpcx, .T.,.F.) }, OemToAnsi(STR0013)) //"Aguarde..."
				EndIf
			Endif
		Endif
	EndIf

	Eval(bOpcRoda) // movimenta o SRA conforme o botao pressionado (avanca, retrocede, vai p/ o primeiro, vai p/ o ultimo)
	lTudoOk := .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atualiza os dados do Funcionario.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cMat	:= SRA->RA_MAT
	lDaRefresh := .F.
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Campos que nao serao Mostrados                     ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aGpaRGEField	:= {"RGE_FILIAL","RGE_MAT"}
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta Bloco para Skip em GdMontaCols                         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	bSkip := { || .F. }
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta Query para a Selecao das Informacoes em GdMontaCols    ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	#IFDEF TOP
		If !lAs400
			cQueryCond	:= "RGE_FILIAL='"+cFil+"'"
			cQueryCond	+= " AND "
			cQueryCond	+= "RGE_MAT='"+cMat+"'"
			cQueryCond	+= " AND "
			cQueryCond	+= "D_E_L_E_T_<>'*' "
		EndIf
	#ENDIF

	/*
	ÚÄÄÄÄÄÄÄÄ	ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta a chave para Pesquisa em GdMontaCols                   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	cKeySeek := ( cFil + cMat )
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta os Detalhes                                    		   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	RGE->( dbSetOrder(2)) // ordem por RGE_FILIAL+RGE_MAT+RGE_DATAIN+RGE_TIPOCO
	aRGECols := GdMontaCols(@aHeader,@nUsado,@aVirtual,@aVisual,cAlias,aGpaRGEField,@aColsRec,cAlias,cKeySeek,NIL,bSkip,NIL,NIL,NIL,NIL,NIL,NIL,cQueryCond,.F.,.F.,.T.)
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega, apenas, os Campos Editaveis            			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aGdAltera := {}
	For nX := 1	To nUsado
		IF (;
				( aScan( aVirtual 		, aHeader[ nX , 02 ] ) == 0 );
				.and.;
		   		( aScan( aVisual  		, aHeader[ nX , 02 ] ) == 0 );
		   		.and.;
		   		( aScan( aGpaRGEField	, aHeader[ nX , 02 ] ) == 0 );
		   		.and.;
		   		( aScan( aGdNaoAltera	, aHeader[ nX , 02 ] ) == 0 );
		  	)
			aAdd( aGdAltera , aHeader[ nX , 02 ] )
		EndIF
	Next nX

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ salva o acols e o historico antes da alteracao 			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aColsAnt	:= aClone( aRGECols )
	lJaAvisou 		:= .F.
	// atualiza a getdados
	If !(oGet == nil)
		oGet:aCols := aClone(aRGECols)
		oGet:Refresh()
	EndIf

Return (.T.)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³GPEA720Locks    ³Autor³ Rogerio Vaz Melonio³ Data ³22/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Bloqueia Lancamentos                                         ³
³          ³(por Funcionario)                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL		                                               	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³gp720MontaGetDados                                           ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function GPEA720Locks( nOpc , cAlias , aRecnos )

Local lLocks	:= .T.

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se nao For Visualizacao				 					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nOpc == 3 )
		Break
	EndIF

	IF !( lLocks := WhileNoLock( cAlias , aRecnos , { xFilial( cAlias ) + SRA->RA_MAT } , 1 , 1 , .T. , NIL ) )
		Break
	EndIF

End Sequence

Return( lLocks )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao  ³Gp720MovimentaºAutor  ³Tatiane Matias      º Data ³  22/04/08   º±±
±±ÌÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.   ³ Executa bloco de codigo a cada movimentacao dos botoes de      º±±
±±º        ³ movimentacao.                                                  º±±
±±ÌÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso     ³ AP                                                             º±±
±±ÈÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Gp720Movimenta( bFunc )

Eval(bFunc)

Return(.T.)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ MenuDef		³Autor³Rogerio Vaz Melonio³ Data ³22/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Isola opcoes de menu para que as opcoes da rotina possam    ³
³          ³ser lidas pelas bibliotecas Framework da Versao 9.12 .      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA720                                                    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Static Function MenuDef()

Local aRotina:= {}
//Retornar o menu ao padrao para localizao Peru na Fase 2 do projeto.
If cPaisLoc <> "PER"
	aRotina :=  {	{	STR0002 , "PesqBrw"		, 0 , 1 }	,;  //"Pesquisar"
						{	STR0003 , "Gpea720Mnt"	, 0 , 2 }	,;  //"Visualizar"
						{	STR0004 , "Gpea720Cor"	, 0 , 4 }	,;  //"Correcao"
						{	STR0019 , "GPCONTR"		, 0 , 2 }	,;  //"Renovacao/Alteracao"
						{	STR0031 , "Gpea720Log"	, 0 , 2 }	,;  //"Log de Correções"
						{ 	STR0016	, "GpLegend"	, 0 , 6 , ,.F.}	 ;	//"Legenda"
					 }
Else
	aRotina :=  {	{	STR0002 , "PesqBrw"		, 0 , 1 }	,;  //"Pesquisar"
						{	STR0003 , "Gpea720Mnt"	, 0 , 2 }	,;  //"Visualizar"
						{	STR0031 , "Gpea720Log"	, 0 , 2 }	,;  //"Log de Correções"
						{ 	STR0016	, "GpLegend"	, 0 , 6 , ,.F.}	 ;	//"Legenda"
					 }
Endif

Return aRotina

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ Gpea720Hist	³Autor³Rogerio Vaz Melonio³ Data ³24/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³ Exibe historico de contratos do funcionario quando chamada ³
³          ³ por outras rotinas.                                        ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA720                                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Gpea720Hist()
Gpea720Mnt( "SRA" , 0 , 7 )
Return Nil

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ Gpea720Cor 	³Autor³Rogerio Vaz Melonio³ Data ³25/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³ Permite correcao do historico de contrato do funcionario   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA720                                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Gpea720Cor()
Gpea720Mnt( "SRA" , 0 , 4 )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ Gpea720When	³Autor³Rogerio Vaz Melonio³ Data ³25/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³ Permite a edicao do campo da getdados do contrato ou       ³
³          ³ renovacao em vigencia.                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA720                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Gpea720When()

If cPaisLoc == "BRA"
    lRet := .T.
Else
	nPosTipo		:= GdFieldPos("RGE_TIPOCO")
	nPosDataIni	:= GdFieldPos("RGE_DATAIN")
	nPosMov		:= GdFieldPos("RGE_MOVIM")
	cTipAnt		:= aColsAnt[n][nPosTipo]	// tipo de contrato original que esta gravado na tabela RGE
	dDataIni		:= aColsAnt[n][nPosDataIni] // data inicio original que esta gravada na tabela RGE
	cMov  			:= acols[n,nPosMov]
	lRet 			:= .F.
	
	If !lCorrecao // se nao foi chamada a funcao de correcao nao permite editar os campos da getdados
		lRet := .F.
	Else
		// se eh a linha da contratacao inicial ou a linha da alteracao permite alterar tudo, desde que seja o movimento atual
		lRet := (dDataIni == SRA->RA_DATAINI .And. cTipAnt == SRA->RA_TIPOCO .And. cMov == "C")
		If !lRet // nao eh o movimento atual
			If (AllTrim(ReadVar()) == "M->RGE_TIPOCO")	// se eh o campo Tipo de Contrato
				Return(.F.)
			Endif
			// demais campos sao permitidos mas nao eh recomendavel que isto seja feito.
			// sera exibido alerta para o usuario, informando que a alteracao sera registrada em log
			cTxt1 := STR0045+Chr(13) // "Não é recomendável a correção de Registros de Históricos anteriores ao do Contrato/Renovação atual"
			cTxt1 += STR0046 // "Esta correção será registrada em Log."
			If !lJaAvisou .And. (n <> Len(aCols)) // se ainda nao avisou, mostra mensagem somente na primeira vez
				lJaAvisou := .T.
				MsgStop(cTxt1) //
			Endif
			Return(.T.)
		Endif
		// caso necessite permitir somente a linha da vigencia atual do contrato/renovacao (com os mesmos dados da tabela SRA)
		// descomente a linha abaixo
		// lRet := (dDataIni == SRA->RA_DATAINI .And. cTipAnt == SRA->RA_TIPOCO )
		If cTipAnt <> SRA->RA_TIPOCO // se esta posicionado em alguma linha que NAO eh do mesmo tipo de contrato atual
									 // so permite alterar os campos motivo, data inicio e data fim de contrato
			If (AllTrim(ReadVar()) == "M->RGE_TIPOCO")
				lRet := .F.
			Else
				lRet := .T.
			Endif
		Else // se esta em alguma linha que Eh do mesmo tipo de contrato atual
			// se Eh a linha da contratacao / alteracao permite alterar todos os campos
			lRet := .T.
		Endif
	Endif
EndIf
Return(lRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ Gpea720Log  	³Autor³Rogerio Vaz Melonio³ Data ³23/06/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³ Permite a a visualizacao do log de correcoes realizado     ³
³          ³ na rotina de historico de contratos.                       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³GPEA720                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/
Function Gpea720Log()
Local cPathFile := ""
Local cExtRel := ".##R"

cPathFile := ( __RelDir + "GPEA720" + cExtRel )

If File(cPathFile)
	OurSpool( "GPEA720" )
	Ms_Flush()
Else
	MsgStop(STR0043) // "Não existe Log de Correção para exibir"
Endif

Return