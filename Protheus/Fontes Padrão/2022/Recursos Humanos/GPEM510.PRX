#INCLUDE "GPEM510.CH"
#INCLUDE "HEADERGD.CH"
#INCLUDE "PROTHEUS.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ GPEM510      ³ Autor ³ Mauricio MR       ³ Data ³ 27/01/06  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Manutencao no arquivo da RAIS.                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GPEM510()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ AP                                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZA€åES SOFRIDAS DESDE A CONSTRUCAO INICIAL                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³CHAMADO/REQ³  Motivo da Altera‡„o                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Raquel Hager³01/11/12³M12RH01    ³RQ002 - Unificacao da Folha de Pgto.  ³±±  
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPEM510(cAlias, nReg, nOpc)
Local aSvKeys			:= GetKeys()
Local aArea			:= GetArea()
Local aAreaSR2		:= SR2->(GetArea())
Local aIndexSR2		:= {}  		// Variavel Para Filtro
Local aRegs		
Local cFunName		:= Upper(AllTrim(FunName()))
Local cFiltraSR2	    		// Variavel para filtro
Private bFiltraBrw 	:= {|| Nil}	 // Variavel para Filtro	
Private cAno			:= ""
Private lIsGPEM510	:= (cFunName == "GPEM510")

	If(lIsGPEM510)     
		Private aRotina := MenuDef() // Ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina
		
		//Comunicado sobre a não disponibilização da Rais e Dirf para releases inferiores à 12.1.25
		If GetRpoRelease() < "12.1.023" .AND. FindFunction("DirfRaisMsg") 
			DirfRaisMsg()
		EndIf	
		
		If !Pergunte("GPM510",.T.)
			Return
		EndIf

		cAno 		:= Strzero(MV_PAR01,4)
		cCadastro	:= OeMtoAnsi(STR0009)  + OemToAnsi(STR0047) + cAno // "MANUTENCA‡„O DA R.A.I.S." ### " - ANO CALENDARIO "

		If fRAISChk("Gera510Manu") // VERIFICA SE FOI ATUALIZADA A ROTINA DA RAIS
			// ENDERECA A FUNCAO DE BROWSE                                  
			dbSelectArea("SR2")
			dbSetOrder(1)
			dbGoTop()                 
			cFiltraSR2 := CHKRH("GPEM510","SR2","1")             
			cFiltraSR2 += If(!empty(cFiltraSR2),'.and. R2_ANOBASE = cAno','R2_ANOBASE = cAno')
			bFiltraBrw := {|| FilBrowse("SR2",@aIndexSR2,@cFiltraSR2)}
			Eval(bFiltraBrw)
			mBrowse(6, 1,22,75,"SR2")
		EndIf
   	Else
    	GP510MAN(cAlias, nReg, nOpc)
   	EndIf

	EndFilBrw("SR2",aIndexSR2) // DELETA O FILTRO UTILIZANDO A FUNCAO FILBROWSE

	// RESTAURA OS DADOS DE ENTRADA 											 
	RestKeys(aSvKeys)
	RestArea(aAreaSR2)
	RestArea(aArea)

Return (.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³GP510Man  ³ Autor ³ Mauricio MR           ³ Data ³ 18/01/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Programa de Visualizacao,Inclusao,Alteracao do Arquivo da   ³±±
±±³          ³RAIS.                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³GP510MAN(cAlias,nReg,nOpc)                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Numero da opcao selecionada                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³gpeM560                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GP510MAN(cAlias,nReg,nOpc)   
Local aAreaSR2		:= SR2->(GetArea())
Local aArea			:= GetArea()
Local aSvKeys		:= GetKeys()    
// TRATAMENTO DE CABECALHO DA RAIS
Local aSR2Header	:= {}
Local aSR2Cols		:= {}
Local aSR2Fields	:= {}
Local aSR2Altera	:= {}
Local aSR2VirtEn	:= {}
Local aSR2NotFields	:= {}
Local aSR2Recnos	:= {}
Local aSR2VisuEn	:= {} 
Local cSR2NaoAlt	:= ""
Local nSR2Usado		:= 0
// TRATAMENTO DE ITENS DA RAIS
Local aCopRCuHeader := {}
Local aCopCols		:= {}
Local aRCUHeader	:= {}
Local aRCUCols		:= {}
Local nRCUUsado		:= 0   
Local aRCUAltera	:= {}
Local aRCUVirtual	:= {}
Local aRCUVisual    := {}  
Local aRCUNotFields := {"RCU_DTADM", "RCU_ANO", "RCU_CEI", "RCU_CGC"} 
Local aRCUColsRec	:= {} 
Local aRCUQueryCond	:= {}
Local aRCUColsAnt	:= {}   
Local aRCUKeys		:= {}
//TRATAMENTO DE OBJETOS DA TELA DE MANUTENCAO
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}
Local aObject		:= {}
Local aButton		:= {}
Local bSet15		:= {|| NIL}
Local bSet24		:= {|| NIL}
Local nOpca			:= 0.00
Local nOpcNewGd		:= If(((nOpc == 2) .OR. (nOpc == 5)),0, (GD_INSERT + GD_UPDATE))	
Local oGetDados
Local oDlg
//TRATAMENTO DE GRAVACAO CABECALHO E ITENS
Local cFilSR2		:= SR2->R2_FILIAL
Local cSR2AnoBase	:= SR2->R2_ANOBASE
Local cMat			:= SR2->R2_MAT    
Local cCEI			:= SR2->R2_CEI 
Local dDtAdm		:= SR2->R2_ADMISSA 
Local cDtAdm		:= DTOS(dDtAdm)
//TRATAMENTO DE BLOQUEIOS DE REGISTROS
Local lExecLock		:= ((nOpc == 3) .OR. (nOpc == 4) .or. (nOpc == 5))  
Local lRCULock		:= .F.
Local bGetRCU
Local nLoop			:= 0
Private cSR2Chave	:= ""
Private oEnchoice	:= NIL	 
Private aPosMesCol	:= {}

	// ALTERA A ORDEM DE REFERENCIA AO REGISTRO DE CABECALHO DA RAIS
	// ORDEM 4: R2_FILIAL+R2_ANOBASE+R2_CEI+R2_MAT+DTOS(R2_ADMISSA) 
	SR2->(DbSetOrder(4))

	Begin Sequence
		// QUANDO FOR INCLUSAO POSICIONA O SPW NO FINAL DO ARQUIVO
		If (nOpc == 3) // Inclusao
			// GARANTE QUE NA INCLUSAO O PONTEIRO DO SR2 ESTARA EM EOF()    
			PutFileInEof("SR2" , @nReg)
			cFilSR2		:= SR2->R2_FILIAL
			cSR2AnoBase	:= SR2->R2_ANOBASE
			cMat		:= SR2->R2_MAT    
			cCEI		:= SR2->R2_CEI 
			dDtAdm		:= SR2->R2_ADMISSA 
			cDtAdm		:= DTOS(dDtAdm)		
		ElseIf nOpc == 4 // ALTERACAO
			// DEFINE CAMPOS NAO ALTERAVEIS DO CABECALHO DA RAIS
			cSR2NaoAlt := "R2_ANOBASE.R2_CEI.R2_ADMISSA.R2_CGC"
		EndIf	

		// MONTA OS DADOS PARA A ENCHOICE  - CABECALHO DA RAIS		   
		cSR2Chave	    := SR2->(cFilSR2 + cSR2AnoBase + R2_MAT + R2_CEI + cDtAdm)	
		aSR2NotFields	:= {"R2_FILIAL"}	
		aSR2Cols		:= SR2->(GdMontaCols(@aSR2Header,@nSR2Usado,@aSR2VirtEn,@aSR2VisuEn,NIL,aSR2NotFields,@aSR2Recnos))

		// CRIA AS VARIAVEIS DE MEMORIA E CARREGA OS DADOS CONFORME O ARQUIVO
		For nLoop := 1 To nSR2Usado
			aAdd(aSR2Fields , aSR2Header[nLoop, 02])
			Private &("M->"+aSR2Header[nLoop, 02]) := aSR2Cols[01, nLoop]
	        // VERIFICA SE EXISTE CAMPOS NAO ALTERAVEIS EM FUNCAO DA OPCAO DE MANUTENCAO ESCOLHIDA
	        If !(Upper(Alltrim(aSR2Header[nLoop , 02])) $ cSR2NaoAlt)
					aAdd(aSR2Altera , aSR2Header[nLoop , 02])
			EndIf
		Next nLoop
		// MONTA QUERY PARA A SELECAO DAS INFORMACOES DE ITENS DA RAIS
		aRCUQueryCond		:= Array(09)
		aRCUQueryCond[01]	:= "RCU_FILIAL='"+cFilSR2+"'"
		aRCUQueryCond[02]	:= " AND "
		aRCUQueryCond[03]	:= "RCU_MAT ='"+cMat+"'"
		aRCUQueryCond[04]	:= " AND "
		aRCUQueryCond[05]	:= "RCU_CEI ='"+cCEI+"'"
		aRCUQueryCond[06]	:= " AND "
		aRCUQueryCond[07]	:= "RCU_ANO ='"+cSR2AnoBase+"'"
		aRCUQueryCond[08]	:= " AND "
		aRCUQueryCond[09]	:= "D_E_L_E_T_=' ' "
		// CARREGA OS DETALHES CONFORME aHeaderAll
		If (lExecLock)
			aAdd(aRCUKeys:={cSR2Chave})
			If !(lRCULock := WhileNoLock("RCU", NIL, {cSR2Chave}, 1, 1, .T., 1, 5))
				Break
			EndIf
		EndIf

		bGetRCU		:= {|lLock,lExclu|	IF(lExecLock , (lLock := .T. , lExclu	:= .T.) , NIL),;
											aRCUCols := RCU->(;
														GdMontaCols(	aRCUHeader		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																		nRCUUsado		,;	//02 -> Numero de Campos em Uso
																		aRCUVirtual		,;	//03 -> [@]Array com os Campos Virtuais
																		aRCUVisual		,;	//04 -> [@]Array com os Campos Visuais
																		"RCU"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																		aRCUNotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																		@aRCUColsRec	,;	//07 -> [@]Array unidimensional contendo os Recnos
																		cAlias			,;	//08 -> Alias do Arquivo Pai
																		cSR2Chave		,;	//09 -> Chave para o Posicionamento no Alias Filho
																		NIL				,;	//10 -> Bloco para condicao de Loop While
																		NIL				,;	//11 -> Bloco para Skip no Loop While
																		NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																		NIL				,;	//13 -> Se cria variaveis Publicas
																		NIL				,;	//14 -> Se Sera considerado o Inicializador Padrao
																		NIL				,;	//15 -> Lado para o inicializador padrao
																		NIL				,;	//16 -> Opcional, Carregar Todos os Campos
																		NIL				,;	//17 -> Opcional, Nao Carregar os Campos Virtuais
																		aRCUQueryCond	,;	//18 -> Opcional, Utilizacao de Query para Selecao de Dados
																		.F.				,;	//19 -> Opcional, Se deve Executar bKey  (Apenas Quando TOP)
																		.F.				,;	//20 -> Opcional, Se deve Executar bSkip (Apenas Quando TOP)
																		.T.				,;	//21 -> Carregar Coluna Fantasma
																		NIL				,;	//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																		NIL				,;	//23 -> Verifica se Deve verificar se o campo eh usado
																		NIL				,;	//24 -> Verifica se Deve verificar o nivel do usuario
																		NIL				,;	//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																		@aRCUKeys		,;	//26 -> [@]Array que contera as chaves conforme recnos
																		@lLock			,;	//27 -> [@]Se devera efetuar o Lock dos Registros
																		@lExclu			,;	//28 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																		NIL				,;	//29 -> Numero maximo de Locks a ser efetuado
																		NIL				,;	//30 -> Utiliza Numeracao na GhostCol
																		NIL				,;	//31 -> Carrega os Campos de Usuario
																		nOpc			;	//32 -> Numero correspondente a operação a ser executada, exemplo: 3 - inclusao, 4 alteracaão e etc;
																 	  )), IF(lExecLock , (lLock .and. lExclu) , .T.)}

		// LOCK DO REGISTRO DO RCU
		If !(lRCULock := WhileNoLock("RCU" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetRCU))
			Break
		EndIf
		// CONVERSAO DO ACOLS DOS ITENS PARA A JANELA DE MANUTENCAO
		// MANTEM A COPIA DO ACOLS E AHEADER ANTES DA TRANSFORMACAO DE ESTRUTURA
		aCopRCuHeader	:= aRCUHeader
		aCopCols		:= aRCUCols   
		// CONVERTE OS DADOS
		Gera510Manu(@aRCUHeader,@aRCUCols,@nRCUUsado,nOpc, @aPosMesCol)	
		aEval(aRCUHeader,{|x|  AADD(aRCUAltera, x[2]), 2}) 

		aRCUColsAnt	:= Aclone(aRCUCols)	

		// MONTA AS DIMENSOES DOS OBJETOS         					   
		aAdvSize		:= MsAdvSize()

		// REDEFINE AS DIMENSOES DOS OBJETOS
		If  !(lIsGPEM510)
			aAdvSize[3] -= 25
			aAdvSize[4] -= 50
			aAdvSize[5] -= 50
			aAdvSize[6] -= 50
			aAdvSize[7] += 50
		EndIf

		aInfoAdvSize	:= {aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0}
		aAdd(aObjCoords , {015 , 080 , .T. , .F.})
		aAdd(aObjCoords , {000 , 000 , .T. , .T.})
		aObjSize		:= MsObjSize(aInfoAdvSize , aObjCoords)

		DEFINE MSDIALOG oDlg TITLE cCadastro From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL 
		// MONTA O OBJETO ENCHOICE PARA O SR2  - CABECALHO DA RAIS
		oEnchoice	:= MsmGet():New(	"SR2"			,;
										nReg			,;
										nOpc			,;
										NIL				,;
										NIL				,;
										NIL				,;
										aSR2Fields		,;
										aObjSize[1] 	,;
										aSR2Altera		,;
										NIL				,;
										NIL				,;
										"GP510EncTOk"	,;
										oDlg			,;
										NIL				,;
										.F.	 			)         
	    // ARRAY PARA O ALINHAMENTO DOS OBJETOS NA TELA								
		Aadd(aObject, oEnchoice:oBox) 

		// MONTA O OBJETO GETDADOS PARA O RCU - ITENS DA RAIS      	   
		oGetDados	:= MsNewGetDados():New(	aObjSize[2,1]								,;
												aObjSize[2,2]								,;
												aObjSize[2,3]								,;
												aObjSize[2,4]								,;
												nOpcNewGd									,;
												NIL											,; 
												NIL											,;
												NIL											,;
												aRCUAltera									,;
												1											,;
												12		  									,;
												NIL											,;
												NIL											,;
												NIL  										,;
												oDlg										,;
												aRCUHeader									,;
												aRCUCols		 							)

	    // ARRAY PARA O ALINHAMENTO DOS OBJETOS NA TELA
	    Aadd(aObject, oGetDados:oBrowse)

		// DEFINE O BLOCO PARA A TECLA <CTRL-O>
		bSet15		:= {|| IF(;
										((nOpc == 3) .or. (nOpc == 4)) ;
										.AND.;
										Obrigatorio(oEnchoice:aGets , oEnchoice:aTela) 	.AND.;	//Verifica os Campos Obrigatoris na Enchoice
									     GP510EncTOk(Nil, Nil, oEnchoice, nOpc)					.AND.;
									    oGetDados:TudoOk(),;									//Valida as Informacoes da GetDados
										(;
											nOpcA := 1.00 ,;
											oDlg:End();
									 	),;
									 	IF(; 
									 		((nOpc == 3) .OR. (nOpc == 4)) ,;				//Inclusao ou Visualizacao
									 			(;
									 				nOpcA := 0.00 ,;
									 				.F.;
									 			),;	
											(;
												nOpcA := IF(nOpc == 2 , 0 , 1.00) ,;		//Visualizacao ou Exclusao
												oDlg:End();
									 		);
									 	);
								 );
							}

		// DEFINE O BLOCO PARA A TECLAS <CTRL-X>
		bSet24		:= {|| (nOpcA := 0.00 , oDlg:End())}

		ACTIVATE MSDIALOG oDlg ON INIT (EnchoiceBar(oDlg , bSet15 , bSet24 , NIL , aButton),;
											AlignObject(oDlg,aObject,1)) CENTERED 

		// RESTAURA AS TECLAS DE ATALHO
		RestKeys(aSvKeys)

		// QUANDO CONFIRMADA A OPCAO E NAO FOR VISUALIZACAO GRAVA OU   
		// EXCLUI AS INFORMACOES DO SR2 E RCU							   
		If(nOpcA == 1)
	 		If (nOpc != 2) // APENAS SE NAO FOR VISUALIZACAO
				// GRAVANDO/INCLUIDO OU EXCLUINDO INFORMACOES DO SR2/RCU
				MsAguarde(;
								{||;
										GPEM510Transpor(aCopRCuHeader,@aCopCols, aRCUHeader, oGetDados:aCols, aPosMesCol),;	
										GPEM510Grava(;
														nOpc			,;
														nReg			,;
														aSR2Header		,;
														aSR2VirtEn		,;
														aCopRCuHeader	,;
														aCopCols		,;
														aRCUVirtual		,;
														aRCUColsRec		;
													);
								},;
								 cCadastro;
							)
			EndIf
		EndIf
	End

	If (lRCULock) // LIBERA LOCKS
		FreeLocks("RCU" , NIL , .T.)
	EndIf
	
	// RESTAURA A INTEGRIDADE DA JANELA
	RestArea(aAreaSR2)
	RestArea(aArea)
	dbSelectArea(cAlias)

Return (nOpca)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³GPEM510Grava ³ Autor ³ Mauricio MR        ³ Data ³ 27/01/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Grava as Informacoes da RAIS no SR2 e RCU.                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³GPEM510                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GPEM510Grava(nOpc		,;	// Opcao de Acordo com aRotina
							 	nSR2Reg	,;	// Numero do Registro do Arquivo Pai (SR2)
							 	aSR2Header	,;	// Campos do Arquivo Pai (SR2)  
							 	aSR2VirtEn,;	// Campos Virtuais do Arquivo Pai (SR2)
							 	aRCUHeader	,;	// Campos do Arquivo Filho (RCU)
							 	aRCUCols	,;	// Itens do Arquivo Filho (RCU)
							 	aRCUVirtGd	,;	// Campos Virtuais do Arquivo Filho (RCU)
							 	aRCURecnos	)	// Recnos do Arquivo Filho (RCU) 
Local cFil			:= If(nOpc # 3, SR2->R2_FILIAL,cFilAnt)
Local cMat			:= If(nOpc # 3, SR2->R2_MAT, M->R2_MAT) 
Local cChave		:= ""
Local cMsgErr		:= ""
Local lAddNew		:= .F.
Local lLock			:= .T.    
Local nDeleted		:= GdFieldPos("GDDELETED"	, aRCUHeader)
Local nHeader		:= 0
Local nHeaders		:= 0
Local nChoice		:= 0
Local nChoices		:= 0
Local nCol			:= 0
Local nCols			:= 0
Local nRecno		:= 0
Local nRecnos		:= 0
Local nLoop			:= 0
Local nLoops		:= 0
Local nPosMes		:= GdFieldPos("RCU_MES"		, aRCUHeader)
Local nPosTipo	    := GdFieldPos("RCU_TIPO"	, aRCUHeader)
Local aAreaRCU		:= GetArea()

DEFAULT nOpc		:= 0
DEFAULT aSR2Header	:= {}
DEFAULT aRCUHeader	:= {} 
DEFAULT aSR2VirtEn	:= {} 
DEFAULT aRCUCols	:= {}
DEFAULT aRCUVirtGd	:= {}
DEFAULT aRCURecnos	:= {}

	nHeaders			:= Len(aRCUHeader)
	nCols				:= Len(aRCUCols)
	nRecnos				:= Len(aRCURecnos)
	nChoices			:= Len(aSR2Header)

	Begin Sequence
			If (nOpc == 5) // SE FOR EXCLUSAO
				CursorWait() // COLOCA O CURSOR DO MOUSE EM ESTADO DE ESPERA
				Begin Transaction  
					// BLOQUEIA DADOS DO REGISTRO PAI (SR2)			  	  		  
					SR2->(dbGoto(nSR2Reg))
					If RecLock("SR2" , .F. , .F.)       
						// DELETA OS DADOS DO ARQUIVO FILHO (RCU)					   
						DelRecnos("RCU" , aRCURecnos)
						If !SR2->(FkDelete(@cMsgErr))
							SR2->(RollBackDelTran(cMsgErr))
						EndIF
						SR2->(MsUnLock())
						SR2->(FKCOMMIT())
						SR2->(EvalTrigger())  
					Endif
				End Transaction
				CursorArrow() // RESTAURA O CURSOR DO MOUSE
			ElseIf ((nOpc == 3) .Or. (nOpc == 4)) // SE FOR INCLUSAO/ALTERACAO (NOPC == 3 .OR. NOPC == 4)
				CursorWait() // COLOCA O CURSOR DO MOUSE EM ESTADO DE ESPERA
					nLoops := Len(aRCUCols)
					Begin Transaction
						If !Empty(nSR2Reg)
							SR2->(dbGoto(nSR2Reg))
							lLock := RecLock("SR2" , .F. , .F.)
						Else
							lLock := RecLock("SR2" , .T. , .F.)
						EndIf
						If lLock 					
							SR2->R2_FILIAL	:= cFil
							//SR2->R2_MAT		:= cMat
								For nChoice := 1 To nChoices
								If (aScan(aSR2VirtEn , {|cCpo| (cCpo == aSR2Header[nChoice , 02])}) == 0)
									SR2->(&(aSR2Header[nChoice , 02])) := &("M->"+aSR2Header[nChoice , 02])
								EndIf
							Next nChoice
							SR2->(MsUnLock())    
							SR2->(FKCOMMIT()) 
							If (nRecnos == nCols) // GRAVA OS DADOS DO ARQUIVO FILHO
								For nRecno := 1 To nRecnos
									RCU->(dbGoto(aRCURecnos[nRecno]))
									If !(lLock := RecLock("RCU" , .F. , .F.))
										Loop
									EndIf
									If !(aRCUCols[nRecno , nDeleted])
										MsProcTxt(OemToAnsi(STR0038))	// "GRAVANDO INFORMACOES MENSAIS..."
										For nHeader := 1 To nHeaders
											If (aScan(aRCUVirtGd , {|cCpo| (cCpo == aRCUHeader[nHeader , 02])}) == 0)
												RCU->(&(aRCUHeader[nHeader , 02])) := aRCUCols[nRecno , nHeader]
											EndIf
										Next nHeader
									Else
										MsProcTxt(OemToAnsi(STR0039)) // "EXCLUINDO INFORMACOES MENSAIS..."
										// DELETA O REGISTRO DO ARQUIVO FILHO                    	   
										If !RCU->(FkDelete(@cMsgErr))
											RollBackDelTran(cMsgErr)
										EndIf
									EndIf
									RCU->(MsUnlock())
								Next nRecno
							ElseIf (nRecnos < nCols)   
									RCU->(dbSetOrder(2))
									For nRecno := 1 To nRecnos
										RCU->(dbGoto(aRCURecnos[nRecno]))
										If !(lLock := RecLock("RCU" , .F. , .F.))
											Loop
										EndIf
										If !(aRCUCols[nRecno , nDeleted])
											MsProcTxt(OemToAnsi(STR0038))	//"GRAVANDO INFORMACOES MENSAIS..."
											RCU->RCU_FILIAL	:= cFil
											RCU->RCU_MAT	:= cMat
											RCU->RCU_ANO	:= M->R2_ANOBASE
											RCU->RCU_DTADM 	:= M->R2_ADMISSA							
											RCU->RCU_CEI 	:= M->R2_CEI
											RCU->RCU_CGC	:= M->R2_CGC
											For nHeader := 1 To nHeaders
												If (aScan(aRCUVirtGd , {|cCpo| (cCpo == aRCUHeader[nHeader , 02])}) == 0)
													RCU->(&(aRCUHeader[nHeader , 02])) := aRCUCols[nRecno , nHeader] 
												EndIf
											Next nHeader
										Else
											MsProcTxt(OemToAnsi(STR0039)) // "EXCLUINDO INFORMACOES MENSAIS..."
											// DELETA O REGISTRO DO ARQUIVO FILHO                    	   
											If !RCU->(FkDelete(@cMsgErr))
												RollBackDelTran(cMsgErr)
											EndIf
										EndIf
										RCU->(MsUnlock())
									Next nRecno
								// GRAVA OS NOVOS REGISTROS                              	   
								For nCol := nRecno To nCols
									MsProcTxt(OemToAnsi(STR0038))	// "GRAVANDO INFORMACOES MENSAIS..."
									If !(aRCUCols[nCol , nDeleted])
									  	// DESPREZAR REGISTROS QUE NÃO CONTENHAM MES E TIPO CADASTRADOS.
										If Empty(aRCUCols[nCol , nPosMes]) .or. Empty(aRCUCols[nCol , nPosTipo])
											Loop
										EndIf
										// VERIFICA SE JA EXISTE O REGISTRO E EFETUA O LOCK CORRESPONDENTE     
										cChave	:= (cFil + M->R2_ANOBASE + cMat + M->R2_CEI + aRCUCols[nCol , nPosMes] + aRCUCols[nCol , nPosTipo])
										lAddNew := !(RCU->(dbSeek(cChave , .F.))) 

										If !(lLock := RecLock("RCU" , lAddNew , .F.))
											Loop
										EndIf
											RCU->RCU_FILIAL	:= cFil
											RCU->RCU_MAT	:= cMat
											RCU->RCU_ANO	:= M->R2_ANOBASE
											RCU->RCU_DTADM 	:= M->R2_ADMISSA							
											RCU->RCU_CEI 	:= M->R2_CEI
											RCU->RCU_CGC 	:= M->R2_CGC  
											For nHeader := 1 To nHeaders
												If (aScan(aRCUVirtGd , {|cCpo| (cCpo == aRCUHeader[nHeader , 02])}) == 0)
													If !aRCUHeader[nheader][2] == "RCU_MAT"
														RCU->(&(aRCUHeader[nHeader , 02])) := aRCUCols[nCol , nHeader]
													EndIf
												EndIf	
											Next nHeader
										RCU->(MsUnlock())
									EndIf
								Next nCol
							EndIf
						Endif				
					End Transaction
				CursorArrow() // RESTAURA O CURSOR DO MOUSE
			EndIf
	End
	
	RestArea(aAreaRCU)		

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Gera510Manu  ³ Autor ³ Mauricio MR        ³ Data ³ 27/01/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Gera o aHeader e aCols para digitacao das verbas mensais.   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³GPEM510                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/ 
Function Gera510Manu(aMesHeader,aMesCols,nUsado,nOpc,aPosMesCol)
Local aArea		:= GetArea()
Local aRCUArea	:= RCU->(GetArea())
Local aMes   	:= {	STR0015,STR0016,STR0017,STR0018,STR0019,STR0020,; //"Janeiro    R$"###"Fevereiro  R$"###"Marco      R$"###"Abril      R$"###"Maio       R$"###"Junho      R$"
            		  	STR0021,STR0022,STR0023,STR0024,STR0025,STR0026}  //"Julho      R$"###"Agosto     R$"###"Setembro   R$"###"Outubro    R$"###"Novembro   R$"###"Dezembro   R$"
Local cCodRais 	:= ""
Local aRais		:= {}
Local aCols		:= {}
Local aHeader	:= {}
Local aHeaderVal:= {}
Local aNewHeader:= {} 
Local aCpos		:= Array(20)
Local aCodRais	:= {}
Local aRetRais	:= {}
Local nCodRais	:= 0
Local nX
Local nY         
Local nElem		:= 0
Local nPosMes	:= 0   
Local nPosTipo	:= 0   
Local nPosValor	:= 0          

	// OBTEM AS OPCOES DE RAIS PARA AS VERBAS E A QTDE DE ELEMENTOS 
	GP040LoadRAIS(NIL, NIL, @cCodRais, @aCodRais, @aRetRais)                          
	nCodRais	:= Len(aCodRais)

	// MONTA O CABECALHO REAL (aHeader)       					   
	If ((nElem:=aScan(aMesHeader,{|x| x[__AHEADER_FIELD__] == "RCU_VALOR"})) >0)
		aHeaderVal:= aClone(aMesHeader[nElem])
	EndIf

	aCpos[01]:={STR0027 , "GPEM510_" 	,"@!"                      ,  13    , 0  ,  "!EMPTY()  "  ,"C"} // "Mes       "
	aCpos[02]:={STR0028 , "GPEM510A"  	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO()"  ,"N"} // "Remuneracoes"
	aCpos[03]:={STR0044 , "GPEM510R" 	,"@E 999"   			   ,  03    , 0  ,  "POSITIVO() " ,"N"} // "H.Efetiv.Trab."
	aCpos[04]:={STR0046 , "GPEM510T"  	,"@E 999"   			   ,  03    , 2  ,  "POSITIVO() " ,"N"} // "Horas Extras"
	aCpos[05]:={STR0029 , "GPEM510B" 	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "1a.Parcela"
	aCpos[06]:={STR0030 , "GPEM510C" 	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "2a.Parcela"
	aCpos[07]:={STR0031 , "GPEM510D" 	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Vl.Fer.Indeniz."
	aCpos[08]:={STR0032 , "GPEM510E"	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Vl.H.E.B.Horas"
	aCpos[09]:={STR0045 , "GPEM510S"	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Avis.Prev.Indz."
	aCpos[10]:={STR0033 , "GPEM510F"  	,"@E 999" 			   	   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Meses Vl.H.E.B." 
	aCpos[11]:={STR0034 , "GPEM510G"  	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Acresc.Sal."
	aCpos[12]:={STR0035 , "GPEM510H"  	,"@E 999"   			   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Mes Ref.Acrescimo"
	aCpos[13]:={STR0036 , "GPEM510I"  	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Outros Acresc."
	aCpos[14]:={STR0037 , "GPEM510J"  	,"@E 999"   			   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Mes Ref. Outros"
	aCpos[15]:={STR0038 , "GPEM510K"  	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Multa FGTS"
	aCpos[16]:={STR0039 , "GPEM510L" 	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Contr.Associ.1ª"
	aCpos[17]:={STR0040 , "GPEM510M"  	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Contr.Associ.2ª"
	aCpos[18]:={STR0041 , "GPEM510O"  	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Sindical"	
	aCpos[19]:={STR0042 , "GPEM510P"  	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Assistencial"
	aCpos[20]:={STR0043 , "GPEM510Q"  	,"@E 999,999,999,999.99"   ,  15    , 2  ,  "POSITIVO() " ,"N"} // "Confederativa"

	nUsado 		:= Len(aCpos)
	aHeader		:= Array(nUsado)
	For nX := 1 to nUsado
		aNewHeader:= aClone(aHeaderVal)

		aNewHeader[ __AHEADER_TITLE__		]	:= aCpos[nX, 1]
		aNewHeader[ __AHEADER_FIELD__		]	:= aCpos[nX, 2]
		aNewHeader[ __AHEADER_PICTURE__	]	:= aCpos[nX, 3]
		aNewHeader[ __AHEADER_WIDTH__		]	:= aCpos[nX, 4]
		aNewHeader[ __AHEADER_DEC__		]	:= aCpos[nX, 5]
		aNewHeader[ __AHEADER_VALID__		]	:= aCpos[nX, 6]
		aNewHeader[ __AHEADER_USE__    	]	:= Chr(251)
		aNewHeader[ __AHEADER_TYPE__		]	:= aCpos[nX, 7]
		aNewHeader[ __AHEADER_F3__			]	:= ""
		aNewHeader[ __AHEADER_CONTEXT__	]	:= ""
		aNewHeader[ __AHEADER_CBOX__		]	:= ""
		aNewHeader[ __AHEADER_INITPAD__	]	:= ""
		aNewHeader[ __AHEADER_WHEN__		]	:= ""
		aNewHeader[ __AHEADER_VLDUSR__		]	:= ""
		aNewHeader[ __AHEADER_RESERV16__	]	:= ""
		aNewHeader[ __AHEADER_RESERV17__	]	:= .F.
		aHeader[nX]	:= aClone(aNewHeader)
	Next nX
	
	aCols	:=	Array(12, Len(aHeader) + 1)  
	For nX := 1 to Len(aCols) 
	    For nY := 1 TO Len(aHeader)+1
		   	If nY == 1
				aCols[nX,nY] := aMes[nX]
			ElseIf nY <= Len(aHeader)
				aCols[nX,nY] := 0
			Else
				aCols[nX,nY] := .F.
			EndIf
		Next nY
	Next nX

	If nOpc # 3
	    // TRANSFERE O CONTEUDO DO RCU PARA O aCols DA TELA DE MANUTENCAO                
	    nPosMes		:= GdFieldPos("RCU_MES", aMesHeader)
		nPosTipo	:= GdFieldPos("RCU_TIPO", aMesHeader)
		nPosValor	:= GdFieldPos("RCU_VALOR", aMesHeader)

		For nX := 1 to Len(aMesCols)
			nMes   := Val(aMesCols[nX, nPosMes])
			GDFieldPut("GPEM510" + aMesCols[nX, nPosTipo], aMesCols[nX, nPosValor],  nMes, @aHeader,@aCols)  
			AADD(aPosMesCol, {nMes, aMesCols[nX, nPosTipo]})
		Next nLoop
	EndIf

	// TRANSFERE AS NOVAS ESTRUTURAS DE aCols E aHeader 
	aMesCols	:= aClone(aCols)
	aMesHeader	:= aClone(aHeader)
	
	RestArea(aRCUArea)      
	RestArea(aArea)

Return 


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³GPEM510Transpor  ³ Autor ³ Mauricio MR    ³ Data ³ 30/01/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Converte o aCols para o formato padrao de Gravacao.		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³GPEM510                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/ 
Static Function GPEM510Transpor(aRCUHeader,aRCUCols, aMesHeader, aMesCols, aPosMesCol)	
Local aRCUColEmpty 		:= GdRmkaCols(aRCUHeader , .F.) 
Local cTipo				:= ""
Local lDelete			:= .F.
Local nLenaCols			:= Len(aMesCols)
Local nLenaHeader		:= Len(aMesHeader) 
Local nElem				:= 0
Local nLoop				:= 0
Local nLoop1			:= 0
Local nPosMes			:= GdFieldPos("RCU_MES"		, aRCUHeader)
Local nPosTipo	    	:= GdFieldPos("RCU_TIPO"	, aRCUHeader)
Local nPosValor	  		:= GdFieldPos("RCU_VALOR"	, aRCUHeader)    
Local nDeleted			:= GdFieldPos("GDDELETED"	, aRCUHeader)  

	For nLoop:=1 To nLenaCols
	    // NAO CONSIDERA A COLUNA DO MES (A PRIMEIRA)
	    For nLoop1:=2 To nLenaHeader
	        // COLUNA ZERADA SERA DELETADA SE FOR DE REGISTRO EXISTENTE
		    lDelete := EMPTY(aMesCols[nLoop, nLoop1])
	        // OBTEM O TIPO (COLUNA) DA INCIDENCIA DE RAIS
			cTipo	:=Right(aMesHeader[nLoop1,2] , 1)
		    // VERIFICA SE TRATA-SE DE UM ELEMENTO JA EXISTENTE
		    If !Empty((nElem:=Ascan(aPosMesCol, {|x| x[1] == nLoop .and. x[2] == cTipo})))
			  	aRCUCols[nElem, nDeleted] 		:= lDelete
				aRCUCols[nElem, nPosValor]			:=  aMesCols[nLoop, nLoop1]	       	   	    
		    Else
				// ADICIONA UM ELEMENTO VAZIO NO aCols
	    		AADD(aRCUCols, aClone(aRCUColEmpty[1]))                                          
				aRCUCols[Len(aRCUCols), nPosMes] 		:=	StrZero(nLoop, 2)	       	   	    
				aRCUCols[Len(aRCUCols), nPosValor]		:=	aMesCols[nLoop, nLoop1]	       	   	    
				aRCUCols[Len(aRCUCols), nPosTipo]		:= 	cTipo
				aRCUCols[Len(aRCUCols), nDeleted]		:=	lDelete    	   
	    	EndIf	
	    Next nLoop1	
	Next nLoop

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³GP510EncTOk      ³ Autor ³ Mauricio MR    ³ Data ³ 30/01/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Consiste Enchoice do SR2 (Cabecalho da RAIS).				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³GPEM510                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/ 
Function GP510EncTOk(aGets,aTela, oEnchoice, nOpc)     
Local lRet		:= .T.                
Local laGets	:= (aGets  <> Nil)
	
	Begin Sequence
	      If laGets 
			  If !(lRet:=Obrigatorio(aGets,aTela))
			     Break
			  EndIf   
	      EndIf 

	     If nOpc == 3 // INCLUSAO
	     	// CONSISTE A EXISTENCIA DE CHAVE NA INCLUSAO DE NOVO CABECALHO DA RAIS
	     	lRet:= !(SR2->(dbSeek(cFilAnt + M->R2_ANOBASE + M->R2_CEI + M->R2_MAT + DTOS(M->R2_ADMISSA))))   
	     EndIf	
	End Sequence

Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³GPEM510VANO      ³ Autor ³ Mauricio MR    ³ Data ³ 01/02/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Consiste campo R2_ANOBASE.    							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³GPEM510                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/ 
Function GPEM510VAnoBase(cAnoBase)  
Local lRet 		:= .T.
Local nAnoBase	:= Val(cAnoBase)

	If nAnoBase < 0 
	   lRet:= .F.
	EndIf   

	lRet := (ExistChav("SR2", M->R2_ANOBASE + M->R2_MAT,5))

Return (lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Gp510PesqBrw     ³ Autor ³ Eduardo Ju     ³ Data ³ 25/04/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Pesquisa com Filtro. 						                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³GPEM510                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/ 
Function Gp510PesqBrw()   

	If AxPesqui() == 1
	  	Eval(bFiltraBrw)
	EndIf 

Return (.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³MenuDef   ³ Autor ³ Luiz Gustavo          ³ Data ³ 15/12/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Isola opcoes de menu para que as opcoes da rotina possam    ³±±
±±³          ³ser lidas pelas bibliotecas Framework da Versao 9.12 .      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³aRotina                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³GEM510                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/  
Static Function MenuDef()  
		// DEFINE ARRAY CONTENDO AS ROTINAS A EXECUTAR DO PROGRAMA 
		// ----------- ELEMENTOS CONTIDOS POR DIMENSAO ------------
		// 1. NOME A APARECER NO CABECALHO
		// 2. NOME DA ROTINA ASSOCIADA
		// 3. USADO PELA ROTINA
		// 4. TIPO DE TRANSA‡„O A SER EFETUADA
		//    1 - PESQUISA E POSICIONA EM UM BANCO DE DADOS
		//    2 - SIMPLESMENTE MOSTRA OS CAMPOS
		//    3 - INCLUI REGISTROS NO BANCOS DE DADOS
		//    4 - ALTERA O REGISTRO CORRENTE
		//    5 - REMOVE O REGISTRO CORRENTE DO BANCO DE DADOS
Local aRotina :=	{	{STR0004 ,"Gp510PesqBrw", 0 , 1,,.F.},;	// "Pesquisar"
						{STR0005 ,"GP510MAN", 0 , 2},;				// "Visualizar"
						{STR0006 ,"GP510MAN", 0 , 3},;				// "Incluir"
						{STR0007 ,"GP510MAN", 0 , 4},;				// "Alterar"
						{STR0008 ,"GP510MAN", 0 , 5}}				// "Excluir" 
Return aRotina