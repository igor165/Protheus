#INCLUDE "TOTVS.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "SCOPECNT.CH"
#INCLUDE "GPEM060.CH"

Static lIntegDef
Static lRefTrab
Static lIntTAF
Static lMiddleware
Static lGP060FAL
Static lGPM060CO
Static lGP030FER
Static lGP060MULT
Static lTemREQ

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o     ³ GPEM060  ³ Autor      ³ Marcos A. Stiefano    ³ Data ³ 25/05/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o  ³ F‚rias Coletivas / Programadas                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe    ³ GPEM060(void)                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso       ³ Mensal                                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ FNC        ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Leandro Dr. |05/03/13|M12RH01     |Unificao da Folha. Projeto Versao 12.     ³±±
±±³            |        |RHU210_06_01|                                          ³±±
±±³Esther V.   |22/04/14|M_RH003     |Replica V11 para V12. Tratamento do para- ³±±
±±³            |        |            |metro MV_ITMCLVL para aceitar '3', nao    ³±±
±±³            |        |            |obrigando o preenchimento dos campos.     ³±±
±±³Christiane V|17/07/14|TPXKHW      |Correção posicionamento tela e calculo p/ ³±±
±±³            |        |            |menores de 18 anos e maiores de 50 anos.  ³±±
±±³Renan Borges|18/09/14|TQJITY      |Ajuste para calcular as faltas incluidas  ³±±
±±³            |        |      		 |na programação de férias.                 ³±±
±±³M. Silveira ³10/12/14³TRAWZ0      ³Ajuste p/ nao considerar o abono informado³±±
±±³            ³        ³            ³para funcionario c/ menos de 1 ano e dias ³±±
±±³            ³        ³            ³proporcionais inferiores aos da coletiva. ³±±
±±³Renan Borges³02/09/14³TQMH75      ³Ajuste para impedir exclusão e visualiza- ³±±
±±³            ³        ³            ³ção de férias pagas em meses anteriores ao³±±
±±³            ³        ³            ³ da folha corrente.                       ³±±
±±³Wag Mobile  ³06/01/15³TRHCFH      ³Ajuste na validacao de ferias coletivas   ³±±
±±³            ³        ³            ³por dias de direito.                      ³±±
±±³Allyson M.  ³28/01/15³TRIZBF      ³Ajuste em fCColet() p/ ordernar correta-  ³±±
±±³            ³        ³            ³mente a tabela SRH e p/ validar os dias de³±±
±±³            ³        ³            ³ferias antecipadas da mesma forma que e'  ³±±
±±³            ³        ³            ³feito no calculo de ferias normal.        ³±±
±±³Thiago Y.M.N³28/01/15³TRKAOH      ³Ajuste na funcao GPM060Proc, para que a   ³±±
±±³            ³        ³            ³geracao da data de pagamento do recibo    ³±±
±±³            ³        ³            ³respeite a seguinte regra: Caso parametro ³±±
±±³            ³        ³            ³Dt.Pgto informada = Sim entao a data igual³±±
±±³            ³        ³            ³ao parametro Dt.Pgto Fer. Col., senao leva³±±
±±³            ³        ³            ³o parametro Ini. Fer. coletivas.          ³±±
±±³Christiane V³30/01/15³PCDEF-11829 ³Correção do cálc. de férias coletivas para³±±
±±³            ³        ³            ³func. c/faltas e menos de 1 ano de empresa³±±
±±³Flavio Corr ³19/03/15³PCREQ-4163  ³Integração Mensagem Unica                 ³±±
±±³            ³        ³            ³                                          ³±±
±±³M. Silveira ³22/05/14³TSHTD2      ³Ajuste p/ guardar o tempo de admissao do  ³±±
±±³            ³        ³            ³funcionario p/ uso na execucao do roteiro.³±±
±±³Allyson M.  ³06/07/15³TSOG89      ³Ajuste em fCColet() p/ situacao em que o  ³±±
±±³            ³        ³            ³funcionario possui mais de um ano e possui³±±
±±³            ³        ³            ³menos dias de direito do que os dias das  ³±±
±±³            ³        ³            ³ferias coletivas.                         ³±±
±±³Raquel H    ³05/10/15³TTNHGI      ³Remocao de validacao de Dt. Corte do      ³±±
±±³            ³        ³            ³periodo - campo nao e mais usado na v12.  ³±±
±±³Cícero Alves³08/12/15³TTZBO5      ³Correções dos chamados TTZBO5, TTWXNN		³±±
±±³            ³        ³      	     ³ e TTYSSE									³±±
±±³Cícero Alves³17/12/15³TTZIF8		 ³Ajuste na validacao entre dias coletivas 	³±±
±±³            ³        ³      		 ³e dias direito p/ admitidos c/ menos 1 ano³±±
±±³M. Silveira ³01/02/16³TUHFQ1      ³Ajuste p/ tratar corretamente os dias de  ³±±
±±³            ³        ³            ³ferias quando for somente s/abono e exibir³±±
±±³            ³        ³            ³os erros gerados na execucao do roteiro.  ³±±
±±³Raquel Hager³15/03/16³TURMXS      ³Ajuste p/ nao atualizar a situacao folha  ³±±
±±³			    ³        ³           ³quando calculo contendo somente abono.    ³±±
±±³Gabriel A.  ³08/07/16³TVN808      ³Ajuste para calcular licença remunerada   ³±±
±±³            ³        ³            ³nas férias coletivas.                     ³±±
±±³Esther V.   |08/07/16|   TVN825   |Ajuste na exclusao de Ferias Coletivas	³±±
±±³            |        |            |Realizada limpeza da variavel aPerAtual a ³±±
±±³            |        |            |fim de manter apenas os dados do periodo	³±±
±±³            |        |            |do funcionario processado no momento.		³±±
±±³Raquel Hager|22/07/16|TVPITA      |Inclusão de parâmetro no PE GPM060CO.  	³±±
±±³            |        |            |Ajuste pra retorno de ambas informações:  ³±±
±±³            |        |            |novo filtro e condição se executa cálculo.³±±
±±³Renan Borges|10/01/16|MRH-4548    |Ajuste para ao tentar realizar Cálculo de ³±±
±±³            |        |      		 |Férias coletivas para funcionários com Res³±±
±±³            |        |      		 |cisão Simulada, o sistema não apresente te³±±
±±³            |        |      		 |la com Aviso e permita o calculo.         ³±±
±±³Gabriel A.  ³07/02/17³MRH-6152    ³Ajuste na gravação do campo RH_SALARIO.   ³±±
±±³Oswaldo L.  ³24/03/17³MRH-151     ³Complementar com tratamentos do GPEM030   ³±±
±±³            ³24/03/17³             vrf qtde dias abono e data inicio das ferias³±±
±±³Claudinei S.|28/04/17|MRH-482    |Implementado o cálculo para funcionários  ³±±
±±³            |        |           |com regime parcial.                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPEM060(nPosARotina,cFiltro)
Local cFiltraRH

Private lAuto       := IsBlind()
Private cFiltroAut  := ""
Private bFiltraBrw	:= { || NIL }
Private cFilRCJ		:= ""
Private nVez        := 1

If Type("nColPro") == "U"
	Private nColPro := 1
EndIf

Private lSvMen1Ano	:= .F.
Private lItemClVl   := GetMvRH( "MV_ITMCLVL", .F., "2" ) $ "1*3" // Define se trabalha com item e classe contabil
Private lGestPubl 	:= IIF(ExistFunc("fUsaGFP"),fUsaGFP(),.F.)	//Verifica se utiliza o modulo de Gestao de Folha Publica - SIGAGFP
Private cVersEnv	:= ""
Private cVersGPE	:= ""

Default nPosArotina := 0
Default cFiltro     := ""

DEFAULT lIntTAF		:= (GetMv("MV_RHTAF",.T., .F.) == .T. .AND. Val(GetMv('MV_FASESOC',.T.,' ')) >= 1  )
DEFAULT lMiddleware := If( cPaisLoc == 'BRA' .AND. Findfunction("fVerMW"), fVerMW(), .F. )

If lIntTaf .And. FindFunction("ESocMsgVer")
	If FindFunction("fVersEsoc")
		fVersEsoc( "S2230", .F., , , @cVersEnv , @cVersGPE)
	Endif
	If !lMiddleware .And. cVersGPE <> cVersEnv .And. (cVersGPE >= "9.0" .Or. cVersEnv >= "9.0")
		//"Atenção! A versão do leiaute GPE é xxx e a do TAF é xxx, sendo assim, estão divergentes. O Evento xxx não será integrado com o TAF, e consequentemente, não será enviado ao RET.
		//Caso prossiga a informação será atualizada somente na base do GPE. Deseja continuar?"			
		If ESocMsgVer(.F.,/*cEvento*/, cVersGPE, cVersEnv)
			lIntTaf := .F.
		Else
			Return(.F.)
		Endif
	Endif
Endif

cFiltroAut := cFiltro

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a Integridade dos dados de Entrada                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aPos1 := { 15, 01, 95, 315 }

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Seleciona opcao de ferias Coletivas / Programadas            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lAuto
	If cPaisLoc $ "PTG|ARG|COL|VEN|ANG"
		nColPro := 1
	Else
		If fOpcRadio(@nColPro, STR0001,;      //"Ferias Coletivas / Programadas"
							STR0022,;      //"Selecione a opcao de calculo:"
							STR0002,;      //"Ferias Coletivas"
							STR0003 ) == 0 //"Ferias Programadas"
			Return
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabecalho da tela de atualizacoes                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCadastro := OemToAnsi(If(nColPro == 1, STR0002, STR0003)) //"F‚rias Coletivas"##"Ferias Programadas"

Private aRotina := MenuDef()

If !cPaisLoc $ "BRA|CHI|PAR"
	Private oSRCClone
	Private oSRC
EndIf

//--Seta e Carrega os Mnemonicos.
SetMnemonicos(NIL,NIL,.T.)

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Carregando Filtro de BROWSE                                  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cFiltraRh 	:= CHKRH("GPEM060","SRA","1")

If !lAuto
	oBrwSRA := FwMBrowse():New()

	oBrwSRA:SetAlias( 'SRA' )
	oBrwSRA:SetDescription(OeMtoAnsi(cCadastro))
	oBrwSRA:SetmenuDef( 'GPEM060' )

	//Filtro padrao do Browse conforme tabela SRW (Controle de Restricoes de Usuarios)
	oBrwSRA:SetFilterDefault(cFiltraRh)

	GpLegMVC(@oBrwSRA)	// Adicionar a Legenda no Browse

	oBrwSRA:Activate()
Else
	If nPosArotina > 0 .And. nPosArotina <= Len(aRotina)
		If nPosArotina == 2
			ALTERA := .T.
			INCLUI := .F.
		ElseIf nPosArotina == 4
			ALTERA := .F.
			INCLUI := .F.
		End
		&( aRotina[nPosArotina, 2] + "()" )
	EndIf
EndIf

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MenuDef   ºAutor  ³Leandro Drumond     º Data ³  05/10/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Menu Funcional                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MenuDef()

Local aRotina :=  {}

ADD OPTION aRotina TITLE STR0004 ACTION 'PesqBrw'          	OPERATION 1 ACCESS 0 //"Pesquisar"
ADD OPTION aRotina TITLE STR0005 ACTION 'GPCA060'  			OPERATION 4 ACCESS 0 //"Calculo"

If cPaisLoc == "VEN"
	ADD OPTION aRotina TITLE STR0006 ACTION 'GPER131'		 	OPERATION 6 ACCESS 0 //"Impressao"
Else
	ADD OPTION aRotina TITLE STR0006 ACTION 'GPER130'		 	OPERATION 6 ACCESS 0 //"Impressao"
EndIf

ADD OPTION aRotina TITLE STR0007 ACTION 'GPEX061'  			OPERATION 5 ACCESS 0 //"Excluir"
ADD OPTION aRotina TITLE STR0008 ACTION 'VIEWDEF.GPEM030'	OPERATION 2 ACCESS 0 //"Visualizar"

Return aRotina

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GPCA060   ³ Autor ³ Stiefano              ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa Para informacoes dos dados de ferias a serem      ³±±
±±³          ³ Calculados                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ GPCA060()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPCA060()
Local aFilterExp	:= {} 					//expressao do filtro
Local aRetFiltro							//retorno do filtro
Local bNewFiltro							//bloco para inclusao de novos filtros
Local bAltFilter							//bloco para Alteracao do filtro selecionado
Local bFastFilter							//bloco para Filtro Rapido
Local bBtnCalcule							//bloco do botão OK
Local bPergunte								//bloco para o pergunte
Local bDialogInit
Local cExpFiltro	:= ""					//variavel com o retorno do filtro
Local lShowDlgFilt	:= .T.					//visualizar a dialog de filtros
Local nRecno		:= SRA->( Recno() )
Local nIndexOrd		:= SRA->( IndexOrd() )
Local oBtnNewFil
Local oBtnAltFil
Local oBtnFastFil
Local oBtnCalcule
Local oBtnPergunte
Local oBtnEnd

Private lAbortPrint := .F.
Private cGrupoCalc  := If(nColPro == 1, "GPM060", "GPM062")
Private nSavRec

nOpca := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Seleciona o grupo de perguntas de acordo com o calculo       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte(cGrupoCalc, .F.)

If !lAuto
	SetMVValue(cGrupoCalc,"MV_PAR01","")//Zera parametro do processo paraa obrigar que seja selecionado e setado a variavel cFilRCJ

	If !(FWModeAccess("RCJ",1) == "C")
		cFilRCJ := xFilial("RCJ", FWPesqSM0("M0_CODFIL",cEmpAnt)) //Escolher a filial para caso o processo seja digitado e não escolhido através da consulta padrão
		DbSelectArea( "RCJ" )
		DbSetOrder( RetOrdem( "RCJ", "RCJ_FILIAL+RC_CODIGO" ) )
		RCJ->(DbSeek(cFilRCJ))
	EndIf

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Bloco de Inicializacao da Janela						       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	bDialogInit 	:= { || CursorWait(),;
							Gpem020SetFil(@aFilterExp, "SRA")	,;	// Setar as opcoes que filtrara o cadastro de Filtro
							lShowDlgFilt := .F.						,;
							Gpem020Filter( 	aFilterExp	,;
											"SRA"	,;
											@cExpFiltro ,;
											lShowDlgFil  ;
										),;	// setar o ultimo filtro utilizado
							lShowDlgFilt := .T.,;
							CursorArrow();
					}

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	oSize := FwDefSize():New(.F.)
	oSize:AddObject( "CABECALHO",(oSize:aWindSize[3]*1.1),(oSize:aWindSize[3]*0.4) , .F., .F. ) // Não dimensionavel
	oSize:aMargins 	:= { 0, 0, 0, 0 } // Espaco ao lado dos objetos 0, entre eles 3
	oSize:lProp 	:= .F. // Proporcional
	oSize:Process() 	   // Dispara os calculos

	DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
	DEFINE MSDIALOG oDlg TITLE OemToAnsi( cCadastro ) From 0,0 TO (oSize:aWindSize[3]*0.4),(oSize:aWindSize[3]*1.1) OF oMainWnd PIXEL

		@ oSize:GetDimension("CABECALHO","LININI")+3 , oSize:GetDimension("CABECALHO","COLINI")+3	GROUP oGroup TO oSize:GetDimension("CABECALHO","LINEND") * 0.49471 ,oSize:GetDimension("CABECALHO","COLEND") * 0.5  LABEL OemToAnsi(If(nColPro == 1,STR0020,STR0021)) OF oDlg PIXEL
		oGroup:oFont:=oFont
		@ oSize:GetDimension("CABECALHO","LININI")+20 , oSize:GetDimension("CABECALHO","COLINI")+13 SAY OemToAnsi(STR0019) Of oDlg Pixel

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Funcoes em GpFiltro  - Blocos de Execucao dos filtros                    ³
		³ GpFiltro - Chama a janela principal do cadastro de filtros               ³
		³ GpFltAlsGet - Retorna a expressao para elaborar o filtro                 ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		bNewFiltro 		:= { || aRetFiltro := GpFiltro( aFilterExp ), cExpFiltro := GpFltAlsGet( aRetFiltro , "SRA" ) }
		bAltFilter 		:= { || Gpem020Filter( aFilterExp, "SRA", @cExpFiltro, lShowDlgFil ) }
		bFastFilter 	:= { || GpFltBldExp( "SRA" , NIL , @cExpFiltro , NIL ) }
		bBtnCalcule		:= { || nOpca := 1,IF(gpconfOK(),oDlg:End(),nOpca:=0) }
		bPergunte 		:= { || Pergunte(cGrupoCalc,.T. ) }

		oBtnFastFil 	:= TButton():New( oSize:GetDimension("CABECALHO","LINEND") * 0.412 , 022 , "&"+OemToAnsi(STR0048),NIL,bFastFilter		, 040 , 012 , NIL , NIL , NIL , .T. )	// "Filtro Rapido"
		oBtnAltFil  	:= TButton():New( oSize:GetDimension("CABECALHO","LINEND") * 0.412 , 066 , "&"+OemToAnsi(STR0049),NIL,bAltFilter		, 040 , 012 , NIL , NIL , NIL , .T. )	// "Alterar Filtro"
		oBtnNewFil  	:= TButton():New( oSize:GetDimension("CABECALHO","LINEND") * 0.412 , 110 , "&"+OemToAnsi(STR0050),NIL,bNewFiltro		, 040 , 012 , NIL , NIL , NIL , .T. )	// "Incluir Filtro"
		oBtnPergunte	:= TButton():New( oSize:GetDimension("CABECALHO","LINEND") * 0.412 , 154 , "&"+OemToAnsi(STR0039),NIL,bPergunte 		, 040 , 012 , NIL , NIL , NIL , .T. )	// "Parametros"
		oBtnCalcule		:= TButton():New( oSize:GetDimension("CABECALHO","LINEND") * 0.412 , 198 , "&"+OemToAnsi(STR0051),NIL,bBtnCalcule 		, 040 , 012 , NIL , NIL , NIL , .T. )	// "Calcular"
		oBtnEnd			:= TButton():New( oSize:GetDimension("CABECALHO","LINEND") * 0.412 , 242 , "&"+OemToAnsi(STR0052),NIL,{ || oDlg:End() }	, 040 , 012 , NIL , NIL , NIL , .T. )	// "Sair"

		Eval( bDialogInit )

	ACTIVATE MSDIALOG oDlg CENTERED //ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 , Nil , aButtons )
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lAuto
	If nOpca == 1
		ProcGpe({|lEnd| GPM060Proc(cExpFiltro)},,,.T.)  // Chamada do Processamento
	EndIf
Else
	GPM060Proc( cFiltroAut ,lAuto )
EndIf

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Reposiciona ponteiro nos Bancos de Dados                     ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
dbSelectArea("SRA")
dbSetOrder( nIndexOrd )
dbGoto( nRecno )

Return( NIL )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GPM060Proc³ Autor ³ Equipe R.H.           ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Processa o calculo de ferias coletiva ou programadas       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ GPM060Proc()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPM060Proc(cFilterRot,lRotAuto)

Local aPerAberto	:= {}
Local aIndex		:= {}
Local aRecsBarG		:= {}
Local aLogInit		:= {}
Local aTitleLog		:= {}
Local aLog			:= {}
Local cSituacao		:= ""
Local cFilSv		:= cFilAnt
Local cFiltraSRA	:= ""
Local cMsgTAF		:= ""
Local dDtIniAf      := CtoD("") // Inicio do Afastamento
Local dDtRetAf      := CToD("") // Retorno do Afastamento
Local dDataAux		:= CtoD("")
Local lIdade		:= .F.
Local lIntFePr		:= GetMvRH( "MV_INTFEPR", NIL, .F. )
Local lJobFePr		:= !lIntFePr
Local lTSREP		:= GetMvRH( "MV_TSREP" , NIL , .F. )
Local nX	   		:= 0
Local nY			:= 0
Local nTam			:= 0
Local nExecRot		:= 0
Local nIdade		:= 0
Local nRecCount		:= 0
Local nPosTbFer		:= 0
Local nTempoParc	:= 0
Local nRecSRA		:= 0
Local nTot1870		:= 0
Local nTot1871		:= 0
Local nTot1872		:= 0
Local nTot1882		:= 0
Local nTot1891		:= 0
Local nTot1892		:= 0
Local nCount		:= 0
Local lRescEfet		:= .F.
Local lCarga		:= .T.
Local cModRCJ       := ""
Local lIntRet		:= .T.
Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), {.T., .F.}) //[2]Ofuscamento
Local aFldRel		:= If(aOfusca[2], FwProtectedDataUtil():UsrNoAccessFieldsInList({"RA_NOME"}), {})

P_REGPARCI			:= If( Type("P_REGPARCI") == "U", .F., P_REGPARCI)
Private lOfusca		:= IF( IsInCallStack("Gpm020Thread"), .F., Len(aFldRel) > 0 )
Private cAboAnt 	:= If(GetMvRH("MV_ABOPEC")=="S","1","2") //-- Abono antes ferias
Private cVerbaFer	:= fGetCodFol("0072")
Private cAboPec		:= ""
Private cMesAnoRef	:= ""
Private dData_pgto	:= CtoD("")
Private lAvisoBlq 	:= .T.
Private lTemCpoProg := fTCpoProg()
Private nDiasAviso 	:= 0   // Dias Aviso Ferias
Private nDiasPer   	:= 0 // Dias gozados no per. aquisitivo (usado no calculo de ferias programadas)
Private oObjREP		:= Nil
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis de Acesso do Usuario                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aRotFer

Private cPerFeAc    := If (!cPaisLoc == "BRA",P_FERPAC,"") //-- Ferias Por Ano Civil

Private cInssFM		:= GetMvRH( "MV_DINSSFM" )  // Desc.Inss Ferias MS
Private cDia2501    := GetMvRH( "MV_DIA2501" )  // Dias de licenca remunerada

Private cTabela, cTabAnt, nCasasPrcVen, nCasasPrcTab
Private cTurnoAnt  := "   "
Private nDlicRem   := nDiasVen := 0

Private Mediasem   := 12
Private lNovoPer   := .T.
Private dDtIniFer
Private dDtFimFer
Private dDtBasFe
Private lTDiasFer

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a entrada de dados do arquivo                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aLogFile := {}
Private aLogTitle := { UPPER(STR0011) } //'- Log de ocorrencias do Calculo Ferias -'
Private cDescTipAfa

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a existencia dos campos de programacao ferias no SRF³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private lTemVenc	:= .F.
Private dDataSem	:=	CtoD('')
Private aPeriodo	:= {}

If cPaisLoc == "PAR"
	Private nIPSPatr	:= 0
	Private nIPSFunc 	:= 0
ElseIf cPaisLoc == "DOM"
	Private aSegSoc
	Private lDiaHora 	:= GetNewPar('MV_DIAHOR',.T.)
	Private nVlrAlim 	:= 0
	Private aAFPS
	Private aARS
ElseIf cPaisLoc == "ANG"
	Private cPerAnt   := space(6)
	Private	nDiasAntF := 0
EndIf

Private nProFerP 	:= SuperGetMv("MV_PROFERP",.T.,0)
Private nDFerGrv 	:= 0	//dias de ferias gravados
Private nDFerPro 	:= 0	//dias de ferias programados
Private aProFerP 	:= {}	//informacoes para segundo calculo
Private lTemLog  	:= .F.	//identifica se tem log do funcionario
Private lPrimVez 	:= .T. //identifica se eh primeira vez do calculo do funcionario
Private nListaFunc	:= 3

Private nFaltasFER	:= 0
DEFAULT lRotAuto 	:= .F.

DEFAULT lIntTAF		:= (GetMv("MV_RHTAF",.T., .F.) == .T. .AND. Val(GetMv('MV_FASESOC',.T.,' ')) >= 1  )
DEFAULT lMiddleware := If( cPaisLoc == 'BRA' .AND. Findfunction("fVerMW"), fVerMW(), .F. )
DEFAULT lIntegDef 	:= FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI")
DEFAULT lRefTrab	:= FindFunction("fRefTrab") .And. fRefTrab("F")
DEFAULT lGPM060CO 	:= ExistBlock("GPM060CO")
DEFAULT lGP030FER   := ExistBlock("GP030FER")
DEFAULT lGP060MULT  := ExistBlock("GP060MULT")

If lRotAuto
	If IsInCallStack("Gpm020Thread") .Or. IsInCallStack("GPEM020A") //Execução através da rotina de cálculo multiplo (GPEM020A) - Apenas férias programadas
		nColPro := 2
		cGrupoCalc  := "GPM062"
	EndIf
	If aOfusca[2] .And. IsInCallStack("Gpm020Thread")
		GetGlbVars("lOfuscaJob", lOfusca)
	EndIf
	lAbortPrint := .F.
	lGestPubl 	:= IIF(ExistFunc("fUsaGFP"),fUsaGFP(),.F.)
	lItemClVl   := GetMvRH( "MV_ITMCLVL", .F., "2" ) $ "1*3" // Define se trabalha com item e classe contabil
	//--Seta e Carrega os Mnemonicos.
	SetMnemonicos(NIL,NIL,.T.)
EndIf

DbSelectArea("SRG")
DbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa variaveis de memoria                     		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SX3")
dbSetOrder(1)
dbSeek( "SRH")
While ! Eof() .and. (X3_ARQUIVO == "SRH")
	If X3_CONTEXT # "V"
		cCampo   := "M->"+X3_CAMPO
		cX3Campo := "SRH->"+X3_CAMPO
		If ValType(&cX3Campo) = "C"
			&cCampo := ""
		ElseIf ValType(&cX3Campo) = "N"
			&cCampo := 0
		ElseIf ValType(&cX3Campo) = "D"
			&cCampo := CtoD("")
		ElseIf ValType(&cX3Campo) = "L"
			&cCampo := .F.
		EndIf
	EndIf
	dbSkip()
Enddo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ 			PARAMETROS DAS FERIAS COLETIVAS                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte(cGrupoCalc, .F.)
If nColPro == 1
	cProcesso	:=  mv_par01		//Processo
    nOrdem      :=  mv_par02       // Calcular por 1-Matricula  2-C.Custo
    nDiasCol    :=  mv_par03       // Dias Ferias Coletivas
    nDAboCol    :=  mv_par04       // Dias de Abono de Coletivas
    nColeDire   :=  mv_par05       // Func. Menos Um Ano?  1-Dias Col  2-Dias Direito
    dDtInCol    :=  mv_par06       // Inicio Ferias Coletivas
    dDtAviso    :=  mv_par07       // Data Aviso das Ferias Coletivas
    dDtRec	    :=  mv_par08       // Data Pagamento Ferias Coletivas
    lMesAtu     :=  (mv_par09==1)  // Media do Mes Atual
  	nVenAveAmb  :=  mv_par10       // Calcular periodos  1-Vencido 2-A vencer 3-Ambos

	If cPaisLoc $ "BRA|CHI|PAR"
		nPerc13S    :=  mv_par11
		lCalcDtPgt  :=  (mv_par12==1)
	EndIf

	If cPaisLoc $ "ANG|EQU|HAI"
		cPerAnt    :=  mv_par11
		nDiasAntF  :=  mv_par12
	EndIf

	If cPaisLoc == "VEN"
		cTipoCalc  :=  mv_par11
	EndIf

	dDataAux := dDtInCol
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ 			PARAMETROS DAS FERIAS PROGRAMADAS                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Else
	cProcesso	:=  mv_par01
	nOrdem      :=  mv_par02       							// Calcular por 1-Matricula  2-C.Custo
	lCalcDtPgt  :=  (mv_par03==1)  							// Calcular Data de Pagto  1-Sim   2-Nao
	dDtRec	    :=  mv_par04       							// Data Pagamento Programada
	dDtDeFer    :=  mv_par05       							// Data Inicio Programa De
	dDtAteFer   :=  mv_par06      							// Data Inicio Programa Ate
	lMesAtu     :=  (mv_par07==1)  							// Media do Mes Atual
	nVenAveAmb  :=  mv_par08       							// Calcular periodos  1-Vencido 2-A vencer 3-Ambos
    dDtAviso    :=  CtoD("")       							// Data calculada em fCProgr()
    nListaFunc  :=  If(Type("mv_par09") <> "N", 3 , mv_par09)       // Calcular periodos  1-Vencido 2-A vencer 3-Ambos

	dDataAux := dDtDeFer
EndIf

If Empty(cProcesso)
	Help(,,'HELP',, STR0061,1,0 ) //"Informe o processo para cálculo."
	Return(.F.)
EndIf

cFiltraSRA		:= ChkRh( FunName() , "SRA" , "1" )
cFiltraSRA		+= IF(!Empty(cFiltraSRA), " .and. " + "RA_PROCES" + " = '" + cProcesso + "'", "RA_PROCES" + " = '" + cProcesso + "'" )
cFiltraSRA		+= IF(!Empty(cFiltraSRA), If(Empty(cFilterRot),""," .and. ") + cFilterRot , cFilterRot )

If Type("cFilRCJ") == "C" .And. !Empty(cFilRCJ)
	cFiltraSRA += " .And. RA_FILIAL >= '" + SubStr(RTrim(cFilRCJ) + Space(FWGETTAMFILIAL),1,FWGETTAMFILIAL) + "'"
	cFiltraSRA += " .And. RA_FILIAL <= '" + SubStr(RTrim(cFilRCJ) + Replicate("Z",FWGETTAMFILIAL),1,FWGETTAMFILIAL) + "'"
EndIf

If lGestPubl
	DbSelectArea( "RCJ" )
	DbSetOrder( RetOrdem( "RCJ", "RCJ_FILIAL+RC_CODIGO" ) )
	If RCJ->(DbSeek(xFilial("RCJ") + cProcesso))
		cModRCJ := RCJ->RCJ_MODULO
	EndIf
	If cModRCJ $ "GFP|VDF"
		Help(,,'HELP',, STR0094,1,0,,,,,, {STR0095} )
		Return(.F.)
	EndIf
EndIf

cTipoRot := "3"
cRot 	 := cRoteiro := fGetCalcRot(cTipoRot)

// Valida os parametros informados

If nColPro == 1
	If nDiasCol+nDAboCol == 0   // Verificar Quando Coletivas se o Dias N„o Estao Zerado
		Help(' ',1,"DIASZERO")
		Return(.F.)
	ElseIf Empty( dDtInCol )    // Verificar Quando Coletivas se a Data N„o Esta Vazia
		Help(' ',1,"DATABRAN")
		Return(.F.)
	EndIf
	lJobFePr := .F.
ElseIf nColPro == 2
	If Empty( dDtDeFer ) .Or. Empty( dDtAteFer ) // Verificar Quando Programadas se a Datas N„o Estao Vazias
		Help(' ',1,"DATABRAN1")
		Return(.F.)
	EndIf
EndIf

//--Ponto de Entrada para usuario definir se deve ou nao calcular ferias, deve retornar .T. ou .F.
If lGPM060CO
	aDados := Execblock("GPM060CO",.F.,.F.,{cFiltraSRA})
	If ValType(aDados) == "A" .And. !Empty(aDados) .And. Len(aDados) == 2
		If aDados[1]
			cFiltroSRA := aDados[2]
		Else
			Return(.F.)
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria Temporario para Calculo de Medias                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Cria_Trp()

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Aplicar o filtro na tabela                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
bFiltraBrw 	:= { || FilBrowse( "SRA", @aIndex , @cFiltraSRA ) }
Eval( bFiltraBrw )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Obtenho o Numero de Registros a serem Processados            ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
If !Empty( cFiltraSRA )
	CREATE SCOPE aRecsBarG FOR __ExecMacro( cFiltraSRA )
	nRecCount := SRA->( ScopeCount( aRecsBarG ) )
Else
	nRecCount := SRA->( RecCount() )
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Procura primeiro funcionario                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SRA" )
nSavRec  := Recno()
dbGotop()
If nOrdem == 1
	dbSetOrder( 1 )
	dbGoTop()
ElseIf nOrdem == 2
	dbSetOrder( 2 )
	DbGoTop()
EndIf

cFilAnte  := Replicate("!", FWGETTAMFILIAL)
cPerAtual := Replicate("!", 6)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega Regua Processamento	                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lRotAuto
	GpProcRegua(nRecCount)
EndIf

While SRA->(!Eof())

	If SRA->RA_FILIAL != cFilAnte .Or. cPerAtual != cPeriodo

		aPerAberto := {}
		aPeriodo := {}

		/*Carrega o periodo aberto*/
		//Procura periodo de calculo de acordo com a data digitada
		fRetPerComp( SubStr( Dtos(dDataAux), 5, 2), SubStr( Dtos(dDataAux), 1, 4), xFilial("RCH", SRA->RA_FILIAL), SRA->RA_PROCES, cRot, @aPerAberto )

		If Empty(aPerAberto)
			FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT + " - " + If( lOfusca, Replicate('*', 30), SRA->RA_NOME) + STR0046, 2)
			SRA->(dbSkip())
			LOOP
		ElseIf !Empty(aPerAberto[1, 11]) //Período já foi integrado
			FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT + " - " + If( lOfusca, Replicate('*', 30), SRA->RA_NOME) + STR0092, 2)
			SRA->(dbSkip())
			LOOP
		EndIf

		cMesAnoRef 	:= aPerAberto[1, 4] + aPerAberto[1, 3]
		dDataSem 	:= aPerAberto[1, 6]
		cPeriodo	:= aPerAberto[1, 1]
		cPerAtual	:= aPerAberto[1, 1]
		cNumPag		:= cSemana := aPerAberto[1, 2]
		cFilRCJ 	:= xFilial("RCJ", SRA->RA_FILIAL)
	EndIf

	If Empty(aPeriodo)
		//Carrega todos os dados do periodo
		fCarPeriodo( cPeriodo, cRot, @aPeriodo, @lUltSemana, @nPosSem, .F.)

		If ( Len(aPeriodo) > 0 )

			dDataDe 	:= aPeriodo[nPosSem,3]
			dDataAte 	:= aPeriodo[nPosSem,4]
			NSVNORMAL 	:= NORMAL 	:= aPeriodo[nPosSem,14]
			NSVDESCAN 	:= DESCANSO	:= aPeriodo[nPosSem,13]
			cAnoMes  	:= aPeriodo[nPosSem,15] + aPeriodo[nPosSem,16]
			dData_Pgto 	:= aPeriodo[nPosSem,17]
			dDataRef 	:= CtoD("01/" + aPeriodo[nPosSem,16] + "/" + aPeriodo[nPosSem,15])
		EndIf
	EndIf

	If lAbortPrint
		Exit
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Testa Categoria do Funcionario                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc == "VEN" .AND. SRA->RA_SITFOLH == "F"
		dbSelectArea("SRA")
		dbSkip()
		Loop
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica Se Funcionario Esta Demitido ou Afastado            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SRA->RA_SITFOLH == "D"
		dbSelectArea("SRA")
		dbSkip()
		Loop
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Consiste Filiais e Acessos                                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !( SRA->RA_FILIAL $ fValidFil() )
		dbSelectArea("SRA")
		dbSkip()
		Loop
	EndIf

	If SRG->(DbSeek(SRA->RA_FILIAL+SRA->RA_MAT))
		While SRG->(!Eof()) .and. SRG->(RG_FILIAL+RG_MAT) == SRA->RA_FILIAL + SRA->RA_MAT
			If SRG->RG_EFETIVA == 'S'
				FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0074, 2) //###'- Funcionario : '###"Possui rescisão calculada."
				lRescEfet := .T.
			EndIf
			SRG->(dbSkip())
		EndDo
		If lRescEfet
			dbSelectArea( "SRA" )
			dbSkip()
			lRescEfet := .F.
			Loop
		EndIf
	EndIf

	cProcesso	:= SRA->RA_PROCES

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta cursor para movimentacao da barra                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lRotAuto
		GpIncProc(SRA->RA_FILIAL + " - " + SRA->RA_MAT + If(lOfusca, "", " - " + SRA->RA_NOME) )
	EndIf

	If SRA->RA_FILIAL # cFilAnte
		aPdv     := {}
		cFilAnte := SRA->RA_FILIAL
		lCarga	 := .T.

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Arredondamento                                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValArred := GetMvRH("MV_ARREDFE")

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ajusta a Data de Recibo/Pagamento para as Ferias Coletivas   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nColPro == 1
            //-- Assume a data de recibo como a data de inicio das ferias se não informada
			If lCalcDtPgt .or. Empty(dDtRec)
				dDtRec	:= dDtInCol
				//-- Antecipa a data para o primeiro dia util se solicitado
				dDtRec :=  DataValida(DataValida(dDtRec-1,.F.)-1,.F.)
			Endif
			M->RH_DTRECIB 	:= dDtRec
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Carregando a Tabela do IPS                		 		     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cPaisLoc == "PAR"
			If !LOC_IPS(@nIPSPatr,@nIPSFunc,MesAno(dDataSem))
				Return
			EndIf
		EndIf

		FP_CODFOL(@aCodFol,SRA->RA_FILIAL)

	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Carrega tabela para apuracao dos dias de ferias - aTabFer    |
	//| 1-Meses Periodo    2-Nro Periodos   3-Dias do Mes    4-Fator |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Verifica a existecia do array aTabFer p/ o calculo de ferias |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("aTabFer") # "A" .Or. Len(aTabFer) == 0
		aTabFer := {}
		If cPaisLoc == "PER"
			fRetTab(@aTabFer,"S017",,,fCalcFimAq(Iif(dDataRef==Nil,dDataSem,dDataRef)),)
		Else
			fTab_Fer(@aTabFer)
		EndIf
		If cPaisLoc == "BRA"
			If Type("aTabFer2") # "A" .Or. Len(aTabFer2) == 0
				aTabFer2 := {}
				fTab_Fer(,,@aTabFer2)
			Endif
			//Se as horas semanais forem inferiores a 26, e o Mnemonico P_REGPARCI estiver ativo,
			//utiliza os dias de férias da tabela S065 - Tabela de férias tempo parcial (Artigo 130A da CLT)
			If cPaisLoc == "BRA"
				nTempoParc := SRA->RA_HRSEMAN
				If ( SRA->RA_HOPARC == "1" .And. nTempoParc <= 25 .And. nTempoParc  > 0 .And. Len(aTabFer2) > 0	.And. P_REGPARCI )
					nPosTbFer := Ascan(aTabFer2, { |X|  nTempoParc <= X[6] .And. nTempoParc > X[5] })
					If nPosTbFer > 0
						aTabFer := aClone(aTabFer2[nPosTbFer])
					Endif
				Endif
			EndIf
		Endif
	EndIf

    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis de Medias                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nMediaOut := nMediaHrs := nMedia13s := nAntec13o := 0.00

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calculando D.S.R. Sobre Medias                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Dsr_hrex := Dsr_hhex := nBaseCalc := 0.00

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Soma as Verbas de Provento Para 1/3                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nValProv := 0.00

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Soma as Verbas de Provento Total                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nValProvT := 0.00

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Soma as Verbas de Desconto                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nValDesc := 0.00

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variavel para calculo da licenca remunerada		             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nDlicRem := 0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Mnemonico referente a adicionais de ferias     	             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("P_NINCMED") != "U"
		P_NINCMED := 0
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Indica novo periodo de ferias                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lNovoPer := .T.

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Observacao do tipo de afastamento que ocasionou a perda ou   |
	//| alteracao do periodo aquisitivo.							 |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cDescTipAfa := ""

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variavel que define se existem dias de ferias    			 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lTDiasFer := .T.

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se tiver dias de ferias vencidas considera o periodo vencido ³
	//³ para a busca das faltas em ferias vencidas em fVerMed()      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lTemVenc	:= .F.

 	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcula a Idade do Funcionario								 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nIdade := DateDiffYear(dDataSem,SRA->RA_NASC)
	lIdade := If (!lRefTrab .And. (nIdade < 18 .Or. nIdade >= 50), .T., .F.)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Executa a rotina de calculo de coletivas ou programadas      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nColPro == 1
		If !fCColet(lIdade)
			Loop
		EndIf
	Else
		nRecSRA := SRA->(Recno())
		If !fCProgr(nIdade)
			If nProFerP != 0 .AND. lTemLog //significa que deve ser refeito o calculo com o proximo periodo aquisitivo
				dDtBasFe := YearSum(dDtBasFe,1)	//novo período aquisitivo
				lPrimVez := .F.
				SRA->(DbGoTo(nRecSRA))
			EndIf
			Loop
		EndIf
	EndIf

	If cPaisLoc <> "COL"
		cSituacao := RetSituacao(,,.F.,M->RH_DATAFIM,,,,M->RH_DATAINI)[1]
		If cSituacao == "A"
			dbSelectArea("SRA")
			dbSkip()
			Loop
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Alimenta a variavel dData_Pagto que sera utilizada na execucao³
	//³ dos roteiros da Folha e Ferias através da funcao fSalInc()    ³
	//³ Na inexistencia dessa variavel sera assumida a database para  ³
	//³ a carga da tabela de IR por exemplo na fSalInc().			  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dData_pgto	:=  dDtRec

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se calcula periodo vencido ou a vencer		         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nVenAveAmb # 3
		If !((nVenAveAmb == 1 .And. M->RH_DBASEAT <= dDataSem) .Or.;
		     (nVenAveAmb == 2 .And. M->RH_DBASEAT > dDataSem))
			dbSelectArea("SRA")
			dbSkip()
			Loop
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se funcionario tem afastamento no inicio das ferias ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dDtIniAf := Ctod("")
	dDtretAf := Ctod("")
	fChkAfas(SRA->RA_FILIAL,SRA->RA_MAT,M->RH_DATAINI,@dDtIniAf,@dDtRetAf)
	If !Empty(dDtIniAf) .And. (Empty(dDtRetAf) .Or. dDtRetAf >= M->RH_DATAINI)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Adiciona no Array de Processamento os funcionarios afastados ³
		//³ que nao foram calculadas as ferias							 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0015 + DTOC(ddtIniAf) + "  " + DTOC(dDtRetAf), 2) // '- Funcionario : '###' Afastado Periodo : '

		dbSelectArea( "SRA" )
		dbSkip()
		Loop
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Reinicializa as variaveis estaticas antes de cada calculo    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RstExecCalc(lCarga)

	If !cPaisLoc $ "BRA|CHI|PAR"
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Cria objeto oSRC e oSRCClone, sendo que este ultimo sera     ³
		³ alimentado pela formula SALINC com os mesmos dados do oSRC.  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		oSRC	  := GetDetFormula():New( "SRC" ,,, "0 = 1" )
		oSRCClone := GetDetFormula():New( "SRC" ,,, "0 = 1" )
	EndIf

    SetPeriodCalc(cPeriodo)
	SetNumPgCalc(cNumPag)

	If cPaisLoc $ "CHI|PAR"
		fSalInc(@Salario,@SalMes,@SalHora,@Saldia)
	ElseIf cPaisLoc <> "BRA"
		nExecRot := ExecForm( SRA->RA_FILIAL, "SALINC", fGetCalcRot('1') ) // Executa a Formula SALINC para Retornar o SalMes, Saldia e Salhora

		If nExecRot < 0
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Adiciona no LOG de funcionarios que ocorreu erro no calculo  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ //#
			If nColPro == 1
				FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0009,2) //###'- Funcionario : '###"Cancelamento do calculo de ferias coletivas"
			Else
				FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0010,2) //###'- Funcionario : '###"Cancelamento do calculo de ferias programadas"
			EndIf
			//# Break
			Exit
		EndIf

		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Transferir dados clonados do oSRC para o objeto oSRCClone    ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		oSRC:Acols := aClone(oSRCClone:aCols)

		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Criar o objeto oSrr que sera utilizado na formula          ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		oSrr := Nil
		GetSRR( @oSrr, "1 = 0" )	// Expressao de filtro para criar um objeto em branco
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Iguala Variaveis Como campo de Memoria                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	M->RH_SALMES  := Salmes
	M->RH_SALHRS  := SalHora
	M->RH_SALDIA  := SalDia
	M->RH_MEDATU  := If( lMesAtu, "S", "N" )

	If cPaisLoc == "ANG" .AND. !Empty(cPerAnt) .AND. nDiasAntF > 0
		M->RH_PERANTE := cPerAnt
		M->RH_DIASANT := nDiasAntF
	EndIf

	If cPaisLoc == "VEN"
		M->RH_VACBON := ALLTRIM(STR(cTipoCalc))
	EndIf

	cSvSetRot 		:= SetRotExec( cRot )
	cSvSetPer 		:= SetPeriodCalc( cPeriodo )
	cSvSetNumPago 	:= SetNumPgCalc( cNumPag )
	cFilAnt			:= SRA->RA_FILIAL

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Limpa Arquivo par Calcular Medias							 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( cTBLXMED )
	Zap

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Retorna area aberta para o SRA   							 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "SRA" )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Executa as Formulas Roteiro das Ferias                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SRA->RA_TPCONTR != "3"
		nRet := ExecRot( SRA->RA_FILIAL , cRot )
		If nRet < 0 .Or. nRet == 2 //Retorna 2 quando calculo eh abortado
			lErrExecRot	:= .T.

			aLogInit := LogExecRot()
			For nX := 1 To Len( aLogInit )
				If !Empty(aLogInit[ nX, 2 ])
					If nX == 1
						aAdd( aTitleLog, STR0054 ) //"Erro de Carga de Mnemonicos"
					ElseIf nX == 2
						aAdd( aTitleLog, STR0055 ) //"Erro de Carga de Formulas"
					ElseIf nX == 3
					aAdd( aTitleLog, STR0056 ) //"Ocorreu erro na compilacao ou Execucao do Roteiro"
					ElseIf nX == 4
						aAdd( aTitleLog, STR0057 ) //"Erros ocasionados durante o Calculo da Ferias"
					EndIf
					aAdd( aLog, aLogInit[nX, 2] )
				EndIf
			Next nX

			If !Empty( aLog )
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Mostrar o Log                                                          ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				If lRotAuto
					//Grava o log em arquivo texto
					For nX := 1 to Len(aTitleLog)
						AutoGrLog(aTitleLog[nX])
						For nY := 1 to Len(aLog[nX])
							AutoGrLog(aLog[nX,nY])
						Next nY
					Next nX
				Else
					MsAguarde( { || fMakeLog( aLog , aTitleLog , "GPEM060" , NIL , FunName() , STR0053 ) } ,  STR0053 ) //"Log de Ocorrencias do Calculo de Ferias"
				EndIf
			EndIf
			Return( .F. )
		EndIf
	Else
		SetMnemonicos(NIL,NIL,.T.) //Reseta mnemonicos
	EndIf

	SetRotExec( cSvSetRot )
	SetPeriodCalc( cSvSetPer )
	SetNumPgCalc( cSvSetNumPago )
	cFilAnt	:= SRA->RA_FILIAL
	lCarga	:= .F.

	If nColPro == 2 .And. lIntFePr
		lJobFePr := ( dDtIniFer - dDatabase ) > 60	//data início das férias não pode ultrapassar 60 dias do envio
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava Ferias                                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Begin Transaction

		If lTDiasFer
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava os afastamentos de ferias e licenca remunerada no SR8  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cMsgTAF := ""
			lIntRet := fGFerSR8(dDtIniFer, dDtFimFer,,,@cMsgTAF, lJobFePr, lIntTaf )

			If lMiddleware .And. !lIntRet
				FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + OemToAnsi(STR0108), 1) //###'- Funcionario : '###"Férias não integrada ao Middleware devido ao erro abaixo:"
				FiltraLog(@aLogFile, cMsgTAF, 1)
				DisarmTransaction()
				Break
			ElseIf !Empty(cMsgTAF) .Or. lJobFePr
				If !lMiddleware
					FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + OemToAnsi(STR0090), 1) //###'- Funcionario : '###"Férias não integrada ao TAF, será integrada a partir do JOB de envio de afastamentos na data de início das férias"
				Else
					FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + OemToAnsi(STR0106), 1) //###'- Funcionario : '###"Férias não integrada ao Middleware, será integrada a partir do JOB de envio de afastamentos na data de início das férias"
				EndIf

				//Tratamento para tamanho do Log
				If nColPro != 2
					If Len(cMsgTAF) <= 120
						FiltraLog(@aLogFile, Space(16) + cMsgTAF, 1)
					Else
						FiltraLog(@aLogFile, Space(16) + Subs(cMsgTAF, 1, 120), 1)
						For nTam:= 1 to Int(Len(cMsgTAF)/120)
							FiltraLog(@aLogFile, Space(16) + Subs(cMsgTAF, 120 * nTam + 1, 120), 1)
						Next nTam
					EndIf
				EndIf
			ElseIf (lIntTAF .Or. lMiddleware) .And. !IsBlind()
				If !lMiddleware
					FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT + "-" + If(lOfusca, Replicate('*',30), SRA->RA_NOME) + OemToAnsi(STR0091), 1) //###'- Funcionario : '###  Enviado para o TAF com sucesso.
				Else
					FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT + "-" + If(lOfusca, Replicate('*',30), SRA->RA_NOME) + OemToAnsi(STR0107), 1) //###'- Funcionario : '###  Enviado para o Middleware com sucesso.
				EndIf
			Endif
		EndIf

		If M->RH_PERC13S > 0 .and. ( aScan(aPd, {|x| x[1] == aCodFol[22,1] .and. x[5] > 0 .and. x[9] <> 'D'}) ) == 0
			M->RH_PERC13S := 0
		EndIf

		dbSelectArea( "SRH" )
		If !dbSeek( SRA->RA_FILIAL + SRA->RA_MAT + DtoS( M->RH_DATABAS ) ) .Or. !lNovoPer
			RecLock("SRH",.T.,.T.)
		Else
			RecLock("SRH",.F.,.T.)
		EndIf
		SRH->RH_FILIAL  := SRA->RA_FILIAL
		SRH->RH_MAT     := SRA->RA_MAT
		SRH->RH_DATABAS := M->RH_DATABAS
		SRH->RH_DBASEAT := M->RH_DBASEAT
		SRH->RH_DIALREM := M->RH_DIALREM
		SRH->RH_DIALRE1 := M->RH_DIALRE1
		SRH->RH_DFERVEN := M->RH_DFERVEN
		SRH->RH_DFERIAS := M->RH_DFERIAS
		SRH->RH_DABONPE := M->RH_DABONPE
		SRH->RH_PERC13S := M->RH_PERC13S
		SRH->RH_DATAINI := dDtIniFer
		SRH->RH_DATAFIM := dDtFimFer
		SRH->RH_DFALTAS := nFaltasFER
		SRH->RH_DTAVISO := dDtAviso
		SRH->RH_DTRECIB := dDtRec
		SRH->RH_SALMIN  := Val_SalMin
		SRH->RH_MEDATU  := M->RH_MEDATU
		SRH->RH_OBSERVA := cDescTipAfa // Descricao do afastamento que ocasionou a perda (se houver)
		SRH->RH_ABOPEC  := M->RH_ABOPEC
        SRH->RH_PERIODO := cPeriodo
        SRH->RH_NPAGTO  := cNumPag
        SRH->RH_ROTEIR  := cRot
		SRH->RH_TIPCAL  := If( nColPro == 1 , "C" , "P" )
		SRH->RH_OBSERVA := If( Empty( cDescTipAfa ) .and. nFaltasFER >= 32, STR0040, cDescTipAfa )
		SRH->RH_ABOPEC  := If(M->RH_DABONPE > 0, If(cAboPec == "1", "1", "2"),"")
		If cPaisLoc <> "BRA"
			SRH->RH_SALARIO := SRA->RA_SALARIO
			SRH->RH_SALMES  := SalMes
			SRH->RH_SALDIA  := SalDia
			SRH->RH_SALHRS  := SalHora
		Else
			SRH->RH_SALMES := nSalM1
			SRH->RH_SALDIA := nSalD1
			SRH->RH_SALHRS := nSalH1
			SRH->RH_SALARIO:= SRA->RA_SALARIO
			SRH->RH_SALDIA1:= nSalD2  //Salario Dia Prox. Mes
			SRH->RH_SALHRS1:= nSalH2  //Salario Hora Prox. Mes
		EndIf
		SRH->RH_PROCES  := cProcesso

        If cPaisLoc == "ANG"
			SRH->RH_PERANTE :=  M->RH_PERANTE
			SRH->RH_DIASANT :=  M->RH_DIASANT
			SRH->RH_TIPO    := "1"
		EndIf

		If cPaisLoc == "PTG"
			SRH->RH_TIPO := "1"
		EndIf
		If cPaisLoc == "VEN"
			SRH->RH_VACBON  := M->RH_VACBON
			SRH->RH_DBONIFI := M->RH_DBONIFI
		EndIf

		MsUnLock()

		FKCOMMIT()

		//grava historico de médias
		fHistMed(SRH->RH_DATAINI)

		//Atualiza dias de ferias calculados para ferias particionadas
		nDFerGrv += SRH->RH_DFERIAS

		If cPaisLoc $ "BRA|CHI|PAR"

			dbSelectArea( "SRR" )
			If SRA->RA_TPCONTR != "3"

				If cPaisLoc == "BRA" 
					nTot1870	:= 0
					nTot1871	:= 0
					nTot1872	:= 0
					nTot1882	:= 0
					nTot1891	:= 0
					nTot1892	:= 0
					
					For nCount := 1 To Len(aPd)
						cRet_COD 		:= RetValSrv(aPd[nCount, 1], SRA->RA_FILIAL, "RV_TIPOCOD")
						cRet_IncCP 		:= RetValSrv(aPd[nCount, 1], SRA->RA_FILIAL, "RV_INCCP")
						cRet_IncFGTS 	:= RetValSrv(aPd[nCount, 1], SRA->RA_FILIAL, "RV_INCFGTS")
						cRet_IncIRF 	:= RetValSrv(aPd[nCount, 1], SRA->RA_FILIAL, "RV_INCIRF")

						If cRet_IncCP == "11" .And. Len(aCodFol) >= 1870 .And. !Empty(aCodFol[1870,1])
							nTot1870 += ( aPd[nCount, 5] * Iif( cRet_COD == "2", (-1), 1 ) )
						EndIf

						If cRet_IncCP == "31" .And. Len(aCodFol) >= 1871 .And. !Empty(aCodFol[1871,1])
							nTot1871 += ( aPd[nCount, 5] * Iif( cRet_COD == "1", (-1), 1 ) )
						EndIf
						
						If cRet_IncFGTS == "11" .And. Len(aCodFol) >= 1872 .And. !Empty(aCodFol[1872,1])
							nTot1872 += ( aPd[nCount, 5] * Iif( cRet_COD == "2", (-1), 1 ) )
						EndIf

						If cRet_IncFGTS == "12" .And. Len(aCodFol) >= 1882 .And. !Empty(aCodFol[1882,1])
							nTot1882 += ( aPd[nCount, 5] * Iif( cRet_COD == "2", (-1), 1 ) )
						EndIf

						If cRet_IncCP == "91" .And. Len(aCodFol) >= 1891 .And. !Empty(aCodFol[1891,1]) 
							nTot1891 += ( aPd[nCount, 5] * Iif( cRet_COD == "2", (-1), 1 ) )
						EndIf
								
						If cRet_IncCP == "95" .And. Len(aCodFol) >= 1892 .And. !Empty(aCodFol[1892,1]) 
							nTot1892 += ( aPd[nCount, 5] * Iif( cRet_COD == "2", (-1), 1 ) )
						EndIf
					Next 

					If nTot1870 > 0
						FMatriz(aCodfol[1870, 1], nTot1870)
					EndIf

					If nTot1871 > 0
						FMatriz(aCodfol[1871, 1], nTot1871)
					EndIf

					If nTot1872 > 0
						FMatriz(aCodfol[1872, 1], nTot1872)
					EndIf

					If nTot1882 > 0
						FMatriz(aCodfol[1882, 1], nTot1882)
					EndIf

					If nTot1891 > 0
						FMatriz(aCodfol[1891, 1], nTot1891)
					EndIf

					If nTot1892 > 0
						FMatriz(aCodfol[1892, 1], nTot1892)
					EndIf
				EndIf

				For nx = 1 To Len(aPd)
					If aPd[nx,1] # "   " .And. aPd[nx,9] # "D" .And. aPd[nx,5] # 0
						If dbSeek(SRA->RA_FILIAL + SRA->RA_MAT + "F" + DtoS(SRH->RH_DATAINI) + aPd[nx,1] + aPd[nx,2] )
							If SRR->RR_SEQ == aPd[nx,11]
								RecLock("SRR",.F.,.T.)
							Else
								RecLock("SRR",.T.,.T.)
							EndIf
						Else
							RecLock("SRR",.T.,.T.)
						EndIf
						SRR->RR_FILIAL := SRA->RA_FILIAL
						SRR->RR_MAT    := SRA->RA_MAT
						SRR->RR_CC     := aPd[nx,2]
						If lItemClVl
							SRR->RR_ITEM	:= SRA->RA_ITEM	//Item Contábil
							SRR->RR_CLVL	:= SRA->RA_CLVL	//Classe de Valor
						EndIf
						SRR->RR_DATA   := SRH->RH_DATAINI
						SRR->RR_DATAPAG:= dDtRec
						SRR->RR_PD     := aPd[nx,1]
						SRR->RR_TIPO1  := aPd[nx,6]
						SRR->RR_TIPO2  := aPd[nx,7]
						SRR->RR_HORAS  := aPd[nx,4]
						SRR->RR_VALOR  := aPd[nx,5]
						SRR->RR_SEQ	   := aPd[nX,11]
						SRR->RR_VALORBA:= aPd[nX,20]
						SRR->RR_TIPO3  := "F"
						SRR->RR_PERIODO:= cPeriodo
						SRR->RR_SEMANA := cNumPag
						SRR->RR_ROTEIR := cRot
						SRR->RR_PROCES := cProcesso
						MsUnLock()
					EndIf
				Next
			Else
				If RecLock("SRR",.T.,.T.)
					SRR->RR_FILIAL 		:= SRA->RA_FILIAL
					SRR->RR_MAT    		:= SRA->RA_MAT
					SRR->RR_CC     		:= SRA->RA_CC
					If lItemClVl
						SRR->RR_ITEM	:= SRA->RA_ITEM	//Item Contábil
						SRR->RR_CLVL	:= SRA->RA_CLVL	//Classe de Valor
					EndIf
					SRR->RR_DATA   		:= SRH->RH_DATAINI
					SRR->RR_DATAPAG		:= dDtRec
					SRR->RR_PD     		:= FGetCodFol('0102',, xFilial("SRV", SRA->RA_FILIAL))
					SRR->RR_TIPO1  		:= "V"
					SRR->RR_TIPO2  		:= "C"
					SRR->RR_HORAS  		:= 0
					SRR->RR_VALOR  		:= 0
					SRR->RR_VALORBA		:= 0
					SRR->RR_TIPO3  		:= "F"
					SRR->RR_PERIODO		:= SRH->RH_PERIODO
					SRR->RR_SEMANA 		:= SRH->RH_NPAGTO
					SRR->RR_ROTEIR 		:= SRH->RH_ROTEIR
					SRR->RR_PROCES 		:= SRH->RH_PROCES
					MsUnLock()
				EndIf
			EndIf
		Else
			fo_GoTop( @oSrr )
			For nX := 1 To Len( oSrr:aCols )
				FO_SETVAL(@oSrr,CCPODATA,dDtRec)
				FO_SETVAL(@oSrr,CCPOPER,cPeriodo)
				FO_SETVAL(@oSrr,CCPONPAGTO,cNumPag)
				If !lItemCLVL
					FO_SETVAL(@oSrr,"RR_ITEM","")
					FO_SETVAL(@oSrr,"RR_CLVL","")
				EndIf
				FO_SKIP(@oSrr)
			Next nX

		 	FO_PUT(@oSRR) // Grava lancamentos no Arquivo SRR
		EndIf

		RetSituacao()
		If !lTDiasFer
			dbSelectArea( "SRA" )
			RecLock("SRA",.F.,.T.)
			SRA->RA_SITFOLH := "F"
			MsUnlock()
		EndIf


		// Caso o funcionario tenha faltas acima de 32 dias ele perde o direito as ferias e
		// a situacao deve ser mantida como NORMAL.
		If SRH->RH_DFERIAS + SRH->RH_DABONPE == 0
			dbSelectArea( "SRA" )
			RecLock( "SRA", .F., .T. )
			SRA->RA_SITFOLH := " "
			MsUnlock()
		EndIf

		If lIntegDef
			SetRotInteg("GPEM040")
			FwIntegDef("GPEM040")
		EndIf

	End Transaction

	If lMiddleware .And. !lIntRet
		//--Retorna a Filial do Processamento Integridade
		cFilAnt := cFilSv
		dbSelectArea( "SRA" )
		dbSkip()
		Loop
	EndIf

	//-- Inicializa a integracao via WebServices TSA
	If lTSREP
		oObjREP := PTSREPOBJ():New()

		If SX5->( dbSeek( xFilial("SX5", SRA->RA_FILIAL) + "31" + "F" ) )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Executa o WebServices TSA - Situacao de Afastamento          ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If oObjREP:WSAbsenceReason( 7 , , SRH->RH_DATAINI , SRH->RH_DATAFIM)
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Grava o ontrole de exportacao para o TSA - Situacao de Afastamento ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				oObjRep:WSUpdRHExp( "SRH" )

			EndIf
		EndIf
	EndIf

	//--Retorna a Filial do Processamento Integridade
	cFilAnt := cFilSv

	dbSelectArea( "SRA" )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada p/ Alterar valores de Ferias (nos arquivos) |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lGP030FER
		EXECBLOCK("GP030FER",.F.,.F.)
	EndIf

	If nColPro == 2
		If nProFerP > 0 .AND.( nDFerGrv < nDFerPro )		//se dias gravados forem menor que dias programados
			AAdd(aProFerP, (nDFerPro - nDFerGrv) )			//dias remanescentes
			AAdd(aProFerP, ( fProFerPDt(dDtFimFer + 1) ) )	//nova data inicial
			AAdd(aProFerP, YearSum(dDtBasFe,1))				//novo período aquisitivo
			AAdd(aProFerP, (dData_pgto) )					//data de pagamento
			AAdd(aProFerP, (dDtRec) )					    //data do recibo
			AAdd(aProFerP, (dDtAviso) )						//data do aviso
			AAdd(aProFerP, .F.)								//ocorre abono
			lPrimVez := .F.
			Loop
		ElseIf lGP060MULT
			aProFerP := {}
			aProFerP := EXECBLOCK("GP060MULT",.F.,.F.)
			If ValType(aProFerP) == "A" .And. Len(aProFerP) > 0
				dData_pgto 	:= aProFerP[4]
				dDtRec 		:= aProFerP[5]
				dDtAviso 	:= aProFerP[6]
				If aProFerP[7]
					M->RH_DABONPE := aProFerP[8]
				Else
					M->RH_DABONPE := 0
				EndIf
				lPrimVez := .F.
				Loop
			EndIf
		EndIf
	EndIf

	nDFerGrv	:= 0
	nDiaFerGrv	:= 0
	nDFerPro	:= 0
	aProFerP	:= {}
	lTemLog		:= .F.
	lPrimVez	:= .T.

	If FindFunction("TecConfAlo") .AND. SuperGetMV("MV_TECXRH", NIL, .F. ) .AND. !IsBlind()
		TecConfAlo( /*oModel*/ )
	EndIf

	FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0104, 1) //###'- Funcionario : '###"calculado com sucesso"
	If SRA->RA_TPCONTR == "3"
		FiltraLog(@aLogFile, STR0109, 1)// "  Obs.: o funcionário possui contrato intermitente. O cálculo das férias não gerou valores, pois estes foram pagos na folha de pagamento."
	EndIf

	dbSkip()

EndDo

fDelTMPMED()

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Finalizando o Filtro                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
EndFilBrw( "SRA", @aIndex )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Recupera a Integridade dos dados                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SRA" )
dbSetOrder( 1 )
dbGoTo(nSavRec)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apresenta Tela com Log de erros								 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Len(aLogFile) > 0
	aLog := {}
	aAdd(aLog, aLogFile)
	If lRotAuto
		//Grava o log em arquivo texto
		For nX := 1 to Len(aLogTitle)
			AutoGrLog(aLogTitle[nX])
			For nY := 1 to Len(aLog[nX])
				AutoGrLog(aLog[nX,nY])
			Next nY
		Next nX
		lMsErroAuto  := .F.
	Else
		fMakeLog( aLog, aLogTitle, cGrupoCalc, .T., , , , , , .F.)
	EndIf
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fCColet  ºAutor  ³Microsiga           º Data ³  26/09/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Trata os calculos de ferias coletivas                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fCColet(lIdade)
Local aPerAberto	:= {}
Local aPerAtual		:= {}
Local cTipoDia 		:= "2"
Local cSeekSRF		:= ""
Local cPerFol		:= ""
Local dDtICole   	:= dDtInCol
Local dDtFimBFer 	:= CtoD("")
Local dDatafim 		:= CtoD("")
Local dDtIniAux		:= CtoD("")
Local lMenUmAno   	:= .F.
Local nDiasAbCol 	:= nDAboCol
Local nDMes12 		:= 0
Local nDMes01 		:= 0
Local nDiasMes      := 0
Local nDiasMse      := 0
Local nFalColet		:= 0
Local nDiasFer		:= 0
Local nDiasAbo		:= 0
Local nDFerAnt		:= 0
Local nDLicQ1    	:= 0
Local nDLicQ2 		:= 0
Local nDiasDire  	:= 0
Local nRCMOrder 	:= 0
Local nDBonVen 		:= 0
Local nDMaxLic		:= 0
Local nDAuxFVen  	:= 0
Local nX			:= 0
Local nFaltAnt		:= 0

aPerFerias := {}

cSeekSRF := SRA->RA_FILIAL + SRA->RA_MAT + fGetCodFol("0072")

DbSelectArea("SRF")
DbSetOrder(2)

If DbSeek(cSeekSRF)
	While SRF->(!Eof() .and. RF_FILIAL + RF_MAT + RF_PD == cSeekSRF )
		If SRF->RF_STATUS $ " 1" .and. ( SRF->RF_DFERVAT > 0 .or. SRF->RF_DFERAAT > 0 ) //Carrega o primeiro periodo aquisitivo com dias vencidos ou a vencer
			aAdd(aPerFerias,{	SRF->RF_DATABAS	,;										  		 			// 01 - Inicio Database de Ferias
								If(Empty(SRF->RF_DATAFIM),fCalcFimAq(SRF->RF_DATABAS),SRF->RF_DATAFIM),;  // 02 - Final Database de Ferias
								SRF->RF_DFERVAT	,;															// 03 - Dias de ferias vencidas
								SRF->RF_DFERAAT	,;															// 04 - Dias de ferias a vencer
								0.00			,;															// 05 - Dias totais de afastamento por periodo
								SRF->RF_OBSERVA	,;															// 06 - Descricao do tipo de afastamento do periodo
								CtoD("")		,;															// 07 - Data de original de termino do p.aquisitivo quando houver prorrogacao do mesmo RWX
								If(Empty(SRF->RF_STATUS),"1",SRF->RF_STATUS),;								// 08 - Status do periodo de ferias:  1-Ativo (Vencidos/A vencer)/2-Prescrito (Perdido)/3-Pago
								CtoD("")		,;															// 09 - Data de Inicio do Proximo periodo caso seja um periodo perdido.
								0				,;															// 10 - Quantidade dias de deducao para o direito apurado no periodo
								SRF->RF_DVENPEN ,;     														// 11 - Dias Vencidos Pendentes
								SRF->RF_IVENPEN ,;     														// 12 - Data Inicia Vencido Pendente
								SRF->RF_FVENPEN ,;															// 13 - Data Inicia Vencido Pendente
								SRF->RF_DFERANT ,;     														// 14 - Dias de Ferias Antecipadas
								SRF->RF_DFALVAT ,;     														// 15 - Dias de Faltas Vencidas
								SRF->RF_DFALAAT ,; 				    										// 16 - Dias de Faltas a Vencer
								If(cPaisLoc$"VEN|EQU",SRF->RF_DBONVAT,NIL),;				 				// 17 - Dias de bono vencido
								If(cPaisLoc$"VEN|EQU",SRF->RF_DBONAAT,NIL),; 								// 18 - Dias de bono a Vencer
								0				,;															// 19 - Total de dias de ferias
								0				,;															// 20 - Total de dias de bonificacao
								0				,;															// 21 - Dias de Faltas vencidas bonificacao
								0				,;															// 22 - Dias de ¦Faltas a Vencer bonificacao
								0				,;															// 23 - Dias de ausencia convertidos em ferias
								0				,;      													// 24 - Total de Dias de Ferias do Periodo
								SRF->RF_DIASANT ,;					      									// 25 - Dias Gozados Vencidos
								SRF->RF_DIASANT	,;	    													// 26 - Dias Gozados a Vencer
								0               ,;      													// 27 - Dias Subsid. Vencidos
								0               ,;   														// 28 - Dias Subsid. a Vencer
								0				,; 															// 29 - Dias de Pagto. Minimo na Adm/Dem (cpo. RF_PAGOFER desabilitado 08/2012)
								SRF->( RECNO() ),;															// 30 - Recno do aquivo
								Iif(Type("SRF->RF_FERPAGA")<>"U",  SRF->RF_FERPAGA, 0) ,;					// 31 - Dias pagos em R$ na folha
								SRF->RF_DATAATU	,;															// 32 - Data de atualizacao
								0                ;                                                          // 33 - Dias de suspensão do período
								})
		EndIf
		SRF->(DbSkip())
	EndDo
EndIf

If !Empty(aPerFerias)
	dDtBasFe := aPerFerias[1,1]
Else
	dDtBasFe := CtoD("")
EndIf
Calc_Fer(@aPerFerias,dDtICole,@nDferven,@nDferave,,,,.F.,@dDtBasFe,,,@dDtFimBFer)

// Posicionar no periodo aberto atual
nPosFer		:= Ascan(aPerFerias,{ |X| X[8] == "1" })
If nPosFer = 0
	FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0047,2) //###'- Funcionario : '###"Não existe período de férias aberto cadastrado."
	dbSelectArea( "SRA" )
	dbSkip()
	Return( .F. )
EndIf

//--Armazena data do Periodo e Dias Antecipados.
dDtBasFe  := aPerFerias[nPosFer][1]
dDtFimBFer := aPerFerias[nPosFer][2]
dNDataBas := aPerFerias[nPosFer][1]
dDT1      := dDtBasFe	 // dDt1 - Mnemonico Tipo Publico utilizado no GPEXMED
nDAntPer  := 0
nDFerVen  := 0
nDFerAve  := 0
nDiasPend := 0

For nX := 1 to Len(aPerFerias)
	nDAntPer   += aPerFerias[nX][14]
	nDferven   += aPerFerias[nX][3]
	nDferave   += aPerFerias[nX][4]
	nDiasPend  += aPerFerias[nX][11]
Next nX

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se no Arquivo SRF Existe Periodo de Ferias          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SRF")
SRF->(dbSetOrder(RetOrder("RF_FILIAL+RF_MAT+DTOS(RF_DATABAS)+RF_PD")))
If dbSeek( SRA->RA_FILIAL + SRA->RA_MAT+DTOS(dDtBasFe)+cVerbaFer )

	If SRF->RF_FERCOLE == "N"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Adiciona no LOG funcionarios que não devem  calcular f.colet.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0023,2) //###'- Funcionario : '###"Nao esta previsto o calculo de ferias coletivas para este funcionario.
		dbSelectArea( "SRA" )
		dbSkip()
		Return .F.
	ElseIf dDtBasFe > dDtICole
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Adiciona no LOG funcionarios com base > que inicio das ferias³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0013,2) //###'- Funcionario : '###'Inicio Periodo Aquisitivo Superior a Data de Inicio das ferias'
		dbSelectArea( "SRA" )
		dbSkip()
		Return .F.
	EndIf
	If !fVldAccess( SRA->RA_FILIAL, dDtICole, cSemana, lAvisoBlq, ,"2" )
	   lAvisoBlq := .F.
		dbSelectArea( "SRA" )
		dbSkip()
		Return .F.
	EndIf
Else
	If !dbSeek( SRA->RA_FILIAL + SRA->RA_MAT+DTOS(SRA->RA_ADMISSA)+cVerbaFer )
		RecLock("SRF",.T.)
		SRF->RF_FILIAL := SRA->RA_FILIAL
		SRF->RF_MAT    := SRA->RA_MAT
		SRF->RF_PD     := cVerbaFer
		SRF->RF_DATABAS:= SRA->RA_ADMISSA
		SRF->RF_DATAFIM:= fCalcFimAq(SRA->RA_ADMISSA)
		SRF->RF_STATUS := "1"
		MsUnlock()
	EndIf
EndIf

If cPaisLoc = "COL"
	If !fDiasAfCol(SRA->RA_MAT, SRF->RF_DATABAS, SRF->RF_DATAFIM)
		dbSelectArea("SRA")
		dbSkip()
		Return .F.
	EndIf
EndIf

//Verifica se possui regime de tempo parcial e os dias de férias serão reduzidos por causa das faltas
lMetadeFal := If( Type("lMetadeFal") == "U", .F. , lMetadeFal)
lTempoParc := If( Type("lTempoParc") == "U", .F. , lTempoParc)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica Se Ferias Ja Foi Calculada                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSetOrder(1)
dbselectArea( "SRH" )
dbSeek( SRA->RA_FILIAL + SRA->RA_MAT + DtoS( dDtBasFe ) )
If !Eof() .And. SRH->RH_FILIAL+SRH->RH_MAT+Dtos(SRH->RH_DATABAS) == SRA->RA_FILIAL+SRA->RA_MAT+Dtos(dDtBasFe)
	aPerAtual := {} //limpa o array com o periodo para nova carga de acordo com funcionario processado.
	cPerFol   := cMesAnoRef
	If fGetPerAtual( @aPerAtual,xFilial("RCH",( "SRA" )->RA_FILIAL) , SRA->RA_PROCES , fGetCalcRot('1') ) //Busca o período atual da folha
		cPerFol := aPerAtual[1][1]
	EndIf
	While SRH->(!Eof() .and. SRH->RH_FILIAL+SRH->RH_MAT+Dtos(SRH->RH_DATABAS) == SRA->RA_FILIAL+SRA->RA_MAT+Dtos(dDtBasFe) )
		If dDtICole > SRH->RH_DATAFIM
			nFaltAnt := SRH->RH_DFALTAS
			If SRH->RH_PERIODO >= cPerFol //Se período for maior a folha ainda não foi fechada, portanto a SRF (aPerFerias) não esta atualizada
				nFalColet += SRH->RH_DFALTAS
				nDiasFer  += SRH->RH_DFERIAS
				nDiasAbo  += SRH->RH_DABONPEC
				dDtIniAux := SRH->RH_DATAINI
				nDFerAnt  += If(MesAno(SRH->RH_DATAINI) == MesAno(dDtICole), SRF->RF_DFERANT,0)
			EndIf
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Adiciona no Array de processamento os funcionarios em ferias ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), RTrim(SRA->RA_NOME)) + " - " + STR0014,2) //###'- Funcionario : '###' em Ferias, retorno superior a data de inicio do novo periodo de gozo'
			dbSelectArea("SRA")
			dbSkip()
			Return .F.
		EndIf
		SRH->(DBSkip())
	EndDo
	TabFaltas(@nFalColet)
	nDFerParc := If(lMetadeFal, nDiasFer / 2, If(!lTempoParc, nFalColet, 0))
	If nDiasFer + ndFerParc + nDiasAbo + nDFerAnt + nDAntPer >= aTabFer[3]
		dDtBasFe := fCalcFimAq(dDtBasFe)+1 // Inicio do proximo periodo
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se deve trocar o periodo por afastamento. 0-Acidente ³
		//|P-Doenca  R-Servico Militar  X-Licenca sem Vencimentos        |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Calc_Fer(@aPerFerias,dDtICole,,,,,,.F.,@dDtBasFe)
	Else
		lNovoPer := .F.
		If MesAno(dDtIniAux) >= cPerFol
			nDAntPer := nDiasFer + nDiasAbo + nDFerAnt + nDAntPer
		Else
			nDAntPer := nDAntPer + nDFerParc
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula Dias de Ferias Coletivas                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
M->RH_ABOPEC := SRF->RF_ABOPEC

If nDiasPend > 0
	nDFerAve := nDferave
	nDferven := nDiasPend
Else
	nDiasVen     := nDferven
	nDiasDire    := If(nDferven > 0, nDferven, nDferave)
	lMenUmAno  	 := If (SRA->RA_ADMISSA+365 > dDtICole, .T., .F.)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se tiver dias de ferias vencidas considera o periodo vencido ³
//³ para a busca das faltas em ferias vencidas em fVerMed()      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lTemVenc := nDiasVen > 0

If nDferven > 0
	nDAuxFVen:= nDferven
	If nDiasPend == 0
		nDferven := If(lIdade, aTabFer[3], nDiasCol)
	EndIf
Else
	If SRA->RA_ADMISSA+365 > dDtICole
		If lIdade  // Menor de 18 e Maior que 50 Ferias Totais
			nDFerVen := nDFerAve
		Else
			nDferven := If( nDiasCol > nDferave , nDferave , nDiasCol )
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se tem saldo para abono							 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nDiasAbCol > 0
			nDiasAbCol := If(nDiasCol > nDferave, 0, Min(nDferave-nDiasCol, nDiasAbCol))
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcula os dias de licenca remunerada						 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nDferven >= nDiasCol
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se os <18 ou > 50, entao deve-se pagar os dias de direito    ³
			//³ como ferias e não tem  lic.remunerada        				 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nDlicRem  := If( lIdade, 0 ,( nDferven - nDiasCol) )
		Else
			nDlicRem  := ( nDiasCol - nDferven )
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Limita os dias de licenca de acordo com o maximo de D.ferias ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (nDMaxLic := ((nDferven+nDlicRem)-aTabFer[3])) > 0
			nDlicRem := nDMaxLic
		EndIf
		nDiasVen     := nDFerave
		lMenUmAno    := .T.
	Else
		nDferven := If(lIdade,aTabFer[3],nDiasCol)
		nDiasVen := If(lIdade,aTabFer[3],If(nDferave <= 0,nDiasCol,nDferave))
		nDAuxFVen:= nDiasVen
	EndIf
	nDferAve := 0
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se deve conceder dias de direito ou de coletivas    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nColeDire == 2 .And. lMenUmAno
	If !lIdade
		nDlicRem := 0
	EndIf
	If ( !lIdade .And. nDferven > nDiasCol ).Or. ;
		( lIdade .And. nDferven == nDiasCol + nDiasAbCol )
		nDferven := nDiasCol
		nDiasVen := nDiasDire
	Else
		nDferven := nDiasDire - nDiasAbCol
		nDiasVen := nDiasDire
	EndIf
EndIf

nDferven  := If( nDferven > aTabFer[3], aTabFer[3], nDferven )
nDiasVen  := If( nDiasVen == 0, nDferven, nDiasVen )
nDiasVen  := If( nDiasVen > aTabFer[3], aTabFer[3], nDiasVen )
lSvMen1Ano:= lMenUmAno

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variavel que identifica se deve calcular dias de ferias		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lTDiasFer := (nDiasCol > 0)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apura os dias de ferias do periodo ( Saldo )				 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !fApuraD(@nDferven,@nDiasAbCol,If(cPaisLoc <> "BRA" .and. cPerFeAc=="S", nDiasVen,If(lMenUmAno,nDiasDire,aTabFer[3])),nDiasCol+nDAboCol,dDtBasFe,0,nColPro)
	dbSelectArea( "SRA" )
	dbSkip()
	Return .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se dias ferias igual a Zero, forcar dias p/ calculo do abono ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nDferven := If(nDferven > 0, nDferven, nDiasVen)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica As Faltas e Calcula as Medias do Periodo            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fVerMed(@nFaltasFER,dDtBasFe)

If nFaltasFER == 0
	//--Quando as Ferias for a Vencer deve proporcionalizar as Ferias
	If nDferVen < aTabFer[3]
		If cPaisLoc=="BRA" .and. cPerFeAc=='S' .and. nDferVen > 0
			nFaltasFER  := SRF->RF_DFALVAT
	   	Else
			nFaltasFER  := SRF->RF_DFALAAT
		EndIf
	Else
		nFaltasFER  := SRF->RF_DFALVAT
	Endif
Else //Abate Faltas já descontadas em férias anterior do mesmo periodo aquisitivo
	nFaltasFER -= nFaltAnt
Endif

nDescFal := nFaltasFER
TabFaltas(@nDescFal)
lMetadeFal := If( Type("lMetadeFal") == "U", .F. , lMetadeFal)
lTempoParc := If( Type("lTempoParc") == "U", .F. , lTempoParc)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza a quantidade de faltas                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
M->RH_DFALTAS := nFaltasFER

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Quando houver menos dias de ferias devera proporcionalizar	 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nDiasVen < aTabFer[3]
	If !lMetadeFal .And. !lTempoParc
		nDescFal := ((nDescFal / 30) * nDiasVen)
	 	nDescFal := If(nDiasVen - SRF->RF_DFERANT >= nDferven + nDescFal, 0, nDescFal)
 	Endif
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se tem menos que 1 ano e tem faltas, jogar faltas em licenca ³
//³ para garantir o total de dias de coletiva (Param. nColeDire) ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nColeDire == 1 .And. lMenUmAno .And. nDescFal > 0
	nDlicRem += nDescFal
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta Variaveis Igual ao Campo de Memoria do SRH para Roteiro³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

M->RH_DFERVEN := nDiasVen
If ( nDferven - If(!lMetadefal, If(!lTempoParc, nDescFal, 0), nDferven/2) ) < 10 .And. nDAuxFVen > 0 .And. nDescFal > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Avalia os dias de gozo das ferias coletivas para funcionarios³
	//³ com dias de ferias vencidas.                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nDiasCol > nDAuxFVen - nDescFal - nDAntPer
		M->RH_DFERIAS := Max( nDAuxFVen - nDAntPer - If(!lMetadefal, If(!lTempoParc, nDescFal, 0), nDAuxFVen/2)  - nDiasAbCol, 0 )
	Else
		M->RH_DFERIAS := Min( nDiasCol , Max( nDAuxFVen - If(!lMetadefal, If(!lTempoParc, nDescFal, 0), nDAuxFVen/2) - nDiasAbCol, 0 ) )
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona no Array de processamento os funcionarios em ferias ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nDiasCol > ( nDAuxFVen - nDAntPer - If(!lMetadefal, nDescFal, nDAuxFVen/2) )
		FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), RTrim(SRA->RA_NOME)) + " - " + STR0024 + str(M->RH_DFERIAS,5,1), 1) //###'- Funcionario : '###		#" após o abatimento das faltas nos dias de direito do funcionário, os dias de gozo ficaram inferiores aos dias de férias coletivas. Gozo: "
	ElseIf nDAuxFVen-nDescFal-nDiasCol < 10
		FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), RTrim(SRA->RA_NOME)) + " - " + STR0025 + str(nDAuxFVen- If(!lMetadefal, If(!lTempoParc, nDescFal, 0), nDAuxFVen/2)-nDiasCol,5,1), 1 ) //###'- Funcionario : '###" o saldo de dias de ferias a gozar neste periodo aquisitivo é inferior ao minimo legal, 10 dias. Saldo: "
	EndIf
Else
	If nDAuxFVen > 0 .And. nDiasCol > nDAuxFVen - nDescFal
		M->RH_DFERIAS := If(!lMetadeFal, nDAuxFVen - If(!lTempoParc, nDescFal, 0), nDAuxFVen/2)
	Else
		M->RH_DFERIAS := If(!lMetadeFal, nDferven - If(!lTempoParc, nDescFal, 0), nDferven/2)
	EndIf
EndIf

// Para ferias coletivas com direito as ferias, calcula a licenca remunerada depois de descontadas as faltas e abonos.
If nColeDire == 1 .and. ( nDAuxFVen > 0 .And. nDescFal > 0 )
    //Ajusta dias de licenca remunerada qdo funcionario possui faltas acima dos dias de coletiva
	If nColeDire == 1 .and. nDiasCol > ( nDAuxFVen - nDescFal - nDAntPer )
		nDlicRem := nDiasCol - ( nDAuxFVen - nDAntPer - nDescFal- nDiasAbCol )
	EndIf
EndIf

If nColeDire == 1 .And. nDiasCol > M->RH_DFERIAS
	nDlicRem := ( nDiasCol - M->RH_DFERIAS )
EndIf

M->RH_DABONPE := nDiasAbCol
M->RH_PERC13S := nPerc13S

If lMenUmAno .And. cPerFeAc # "S"
	M->RH_DBASEAT := dDtICole -1
Else
	nPosFer		:= aScan(aPerFerias,{ |X| X[8] == "1" .And. x[1] == dDtBasFe  })
	If nPosFer > 0
		M->RH_DBASEAT := aPerFerias[nPosFer][2]
	Else
		M->RH_DBASEAT := fCalcFimAq(dDtBasFe)  //Calculo Fim Periodo Aquisitivo
	EndIf
EndIf
M->RH_DATABAS := dDtBasFe

If cPaisLoc $ "PTG|COL"
	nRCMOrder := RetOrder( "RCM", "RCM_FILIAL+RCM_PD" )
	cTipoDia := gp240RetCont(;
					"RCM", 									; 						// cAlias
  					nRCMOrder, 								; 						// nIndex
   				xFilial("RCM") + fGetCodFol( "0072"),	; 			// cKey
   				"RCM_TIPODI")
   				// Coluna retorno
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula Data Inicio/Final, Data de Aviso e Data do Recibo    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dDtIniFer 		:= dDtICole
dDtFimFer		:= dDtICole + If( (lIdade .Or. nColeDire == 2), Round(nDferven,0)+nDlicRem, nDiasCol) - 1

If ( AnoMes(dDtICole) <> AnoMes(dDtFimFer) )
	fRetPerComp(SubStr(Dtos(dDtFimFer),5,2), SubStr(Dtos(dDtFimFer),1,4),, cProcesso , cRot, @aPerAberto )

	If Empty(aPerAberto)
		If lIdade
			FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT + "-" + If(lOfusca, Replicate('*',30), SRA->RA_NOME) + " - " + STR0060 + " " + DtoC(dDtFimFer),2)  //'- Funcionario : ' "Menor de 18 anos ou maior de 50 anos devem tirar férias em período único. Não existe período cadastrado que compreenda a data final das férias" ####
		Else
			FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT + "-" + If(lOfusca, Replicate('*',30), SRA->RA_NOME) + " - " + STR0062 + " " + DtoC(dDtFimFer),2)  //'- Funcionario : ' "Não existe período cadastrado que compreenda a data final das férias" ####
		EndIf
		dbSelectArea( "SRA" )
		dbSkip()
		Return .F.
	EndIf
EndIf

M->RH_DATAINI 	:= dDtICole

If cPaisLoc $ "PTG|COL|ANG"
	If cTipoDia == "2"
		dDtFimFer := If(lTDiasFer, (dDtIniFer + Round(M->RH_DFERIAS,0) + nDlicRem)-1, dDtIniFer)
	Else
		GpeCalend(,,,,,dDtIniFer,@dDataFim,M->RH_DFERIAS,"F",dDtIniFer,.F.)
		dDtFimFer  := If(lTDiasFer,dDataFim, dDtIniFer )
	EndIf
Else
 	dDtFimFer := If(dDtFimFer < M->RH_DATAINI, M->RH_DATAINI, dDtFimFer)
 	If cPaisLoc == "BRA" .And. nDescFal > 0
 		dDtFimFer := M->RH_DATAINI + M->RH_DFERIAS + nDlicRem - 1
 	Endif
EndIf

IF cPaisLoc == "VEN"
	M->RH_DFERIAS := M->RH_DFERVEN
	M->RH_DBONIFI := nDBonVen
	FDatafer()
	dDtFimFer := 	M->RH_DATAFIM
EndIf

IF cPaisLoc == "ANG"
	M->RH_DFERVEN := M->RH_DFERIAS
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Checa licenca remunerada de acorodo com parametro MV_DIA2501 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fChkLicRem(dDtIniFer,dDtFimFer,@nDMes12,@nDMes01,cDia2501)
nTot2501 := ( nDMes12 + nDMes01 )
nDLicRem += nTot2501
dDtFimFer += nTot2501
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava as datas de fim das ferias e recibo                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

M->RH_DATAFIM   := dDtFimFer
dDtRec:= fVerData(dDtRec)
M->RH_DTRECIB := dDtRec

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se houver dias de ferias = 0.5, lancar 0.5 em Lic. Remunerda ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fChkFQueb(dDtIniFer,dDtFimFer,@nDLicQ1,@nDLicQ2,nDLicRem)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apura os dias de licenca para o mes e mes seguinte           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nDlicRem > 0
   	nTotDiaMes := nDiasMes := nDiasMse := 0
	If nDlicRem - nTot2501 > 0
	   	If Month( dDtIniFer ) # Month( dDtFimFer )
	   		nTotDiaMes 	:= (F_ULTDIA(dDtIniFer) - Day(dDtIniFer) + 1)
	   		nDiasMes 	:= Max(nTotDiaMes - (M->RH_DFERIAS + nDMes12), 0 )
	   		nDiasMse 	:= nDlicRem - nDMes01 - nDiasMes
	   	Else
	   		nDiasMes 	:= nDlicRem - nTot2501
		EndIf
	EndIf
	M->RH_DIALREM := nDiasMes + nDMes12 + nDLicQ1
	M->RH_DIALRE1 := Max(nDiasMse - nDMes12, 0) + nDMes01 + nDLicQ2
ElseIf (nDLicQ1 + nDLicQ2) > 0
	M->RH_DIALREM := nDLicQ1
	M->RH_DIALRE1 := nDLicQ2
Else
	M->RH_DIALREM := 0
	M->RH_DIALRE1 := 0
EndIf

If (lIdade)  .And. ( nDiasCol < aTabFer[3] )
	FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0044 ,1)  //'- Funcionario : ' "Férias calculadas - menor de 18 anos ou maior de 50 anos"
EndIf

If  !fVerDias( nDiasPend ) .or. !fVerDiaSem()
	dbSelectArea( "SRA" )
	dbSkip()
	return .F.
EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fCProgr  ºAutor  ³Microsiga           º Data ³  26/09/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Trata os calculos de ferias programadas                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fCProgr(nIdade)

Local cSQL
Local cSeekSRF	 := ""
Local cKeySRF	 := ""
Local dDtBasFim
Local dDtIniProg
Local lTrataCpos := lTemCpoProg
Local nDiasFePro := 0
Local nDiasAbono := 0
Local nDMes12    := 0
Local nDMes01    := 0
Local nDLicQ1    := 0
Local nDLicQ2    := 0
Local nDiasPend  := 0
Local nTDiasDir  := 0
Local nS		 := 0
Local nX		 := 0
Local cFor 		 :=	'(RF_FILIAL+RF_MAT+RF_PD = "'+SRA->RA_FILIAL+SRA->RA_MAT+cVerbaFer+'") .and. '
      cFor		 +=	'(  RF_STATUS = " " .or. RF_STATUS = "1" ) .and. '
      cFor		 +=	'(( DTOS(RF_DATAINI) >= "'+DTOS(dDtDeFer)+'" .and. DTOS(RF_DATAINI) <= "'+DTOS(dDtAteFer)+'") .or. '
      cFor		 +=	' ( DTOS(RF_DATINI2) >= "'+DTOS(dDtDeFer)+'" .and. DTOS(RF_DATINI2) <= "'+DTOS(dDtAteFer)+'") .or. '
      cFor		 +=	' ( DTOS(RF_DATINI3) >= "'+DTOS(dDtDeFer)+'" .and. DTOS(RF_DATINI3) <= "'+DTOS(dDtAteFer)+'"))'

DEFAULT lRefTrab := FindFunction("fRefTrab") .And. fRefTrab("F")

lMetadeFal	 := If( Type("lMetadeFal") == "U", .F. , lMetadeFal)
lTempoParc 	 := If( Type("lTempoParc") == "U", .F. , lTempoParc)


If Empty(aProFerP) //verifica SRF apenas se for primeiro calculo do funcionario

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Faz filtro no arquivo...                                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAliasSrf := "SRF"

	//-- Modifica variaveis para a Query
	cAliasSrf := "QSRF"
	cSQL := "SELECT * "
	cSQL += "FROM " +	RetSqlName("SRF")
	cSQL += " WHERE "
	cSQL += "RF_FILIAL = '" + SRA->RA_FILIAL +"' AND "
	cSQL += "RF_MAT = '" + SRA->RA_MAT    +"' AND "
	cSQL += "RF_PD = '" + cVerbaFer      +"' AND "
	cSQL += "RF_STATUS IN(' ','1') AND "

	IF lTrataCpos
		cSQL += "("
	EndIf

	cSQL += "( RF_DATAINI between '" + DtoS(dDtDeFer)  +"' AND '" + DtoS(dDtAteFer) + "')"

	IF lTrataCpos
		cSQL += " OR "
	    cSQL += "(RF_DATINI2 between '" + DtoS(dDtDeFer)  +"' AND '" + DtoS(dDtAteFer) + "') OR "
	   	cSQL += "(RF_DATINI3 between '" + DtoS(dDtDeFer)  +"' AND '" + DtoS(dDtAteFer) + "')"
	   	cSQL += ")"
	EndIf

	cSQL += " AND D_E_L_E_T_ = ' '"


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define order by de acordo com a ordem...                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cSQL 		+= " ORDER BY RF_FILIAL,RF_MAT,RF_PD"
	cSQL     	:= ChangeQuery(cSQL)
	aStruSRF 	:= SRF->(dbStruct())
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cSQL),cAliasSRF,.F.,.T.)

	For nS := 1 To Len(aStruSRF)
		If ( aStruSRF[nS][2] <> "C" )
			TcSetField(cAliasSRF,aStruSRF[nS][1],aStruSRF[nS][2],aStruSRF[nS][3],aStruSRF[nS][4])
		EndIf
	Next nS

	dDtIniProg := CtoD("")
	nDiasPend  := 0

	If (cAliasSRF)->RF_DVENPEN > 0 // Verificar se funcionario tem ferias pendentes
		nDiasPend := (cAliasSRF)->RF_DVENPEN
	EndIf

	If (cAliasSRF)->RF_DATAINI >= dDtDeFer .And. (cAliasSRF)->RF_DATAINI <= dDtAteFer
		dDtIniProg := (cAliasSRF)->RF_DATAINI
		nDiasFePro := If(lTrataCpos, (cAliasSRF)->RF_DFEPRO1, 0)
		nDiasAbono := If(lTrataCpos, If((cAliasSRF)->RF_TEMABPE <>'N',(cAliasSRF)->RF_DABPRO1,0), 0)
	ElseIf lTrataCpos
		If (cAliasSRF)->RF_DATINI2 >= dDtDeFer .And. (cAliasSRF)->RF_DATINI2 <= dDtAteFer
			dDtIniProg := (cAliasSRF)->RF_DATINI2
			nDiasFePro := (cAliasSRF)->RF_DFEPRO2
			nDiasAbono := If((cAliasSRF)->RF_TEMABPE <>'N',(cAliasSRF)->RF_DABPRO2,0)
		ElseIf (cAliasSRF)->RF_DATINI3 >= dDtDeFer .And. (cAliasSRF)->RF_DATINI3 <= dDtAteFer
			dDtIniProg := (cAliasSRF)->RF_DATINI3
			nDiasFePro := (cAliasSRF)->RF_DFEPRO3
			nDiasAbono := If((cAliasSRF)->RF_TEMABPE <>'N',(cAliasSRF)->RF_DABPRO3,0)
		EndIf
		lTrataCpos := If(nDiasFePro+nDiasAbono == 0, .F., lTrataCpos)
	EndIf

	If lPrimVez
		dDtBasFe := (cAliasSrf)->RF_DATABAS
	EndIf
	cKeySRF  := (cAliasSrf)->(RF_FILIAL+RF_MAT+DTOS(RF_DATABAS)+RF_PD)

	dbSelectARea(cAliasSRF)
	dbCloseArea()
	dbSelectArea("SRF")

	If Empty(dDtIniProg)
		FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0058, 2) //###'- Funcionario : '###"Não existe registro de férias programada cadastrado"
		dbSelectArea( "SRA" )
		dbSkip()
		Return .F.
	EndIf

	//?- Verifica se o calculo esta Liberado
	If !fVldAccess( SRA->RA_FILIAL, dDtIniProg, cSemana, lAvisoBlq, ,"2" )
	    lAvisoBlq := .F.
		dbSelectArea( "SRA" )
		dbSkip()
		Return .F.
	EndIf

	aPerFerias := {}

	DbSelectArea("SRF")
	DbSetOrder(2)

	cSeekSRF := SRA->RA_FILIAL + SRA->RA_MAT + fGetCodFol("0072")

	If DbSeek(cSeekSRF)
		While SRF->(!Eof() .and. RF_FILIAL + RF_MAT + RF_PD == cSeekSRF )
			If SRF->RF_STATUS $ " 1" .and. ( SRF->RF_DFERVAT > 0 .or. SRF->RF_DFERAAT > 0  .Or. Len(aPerFerias) == 0) //Carrega o primeiro periodo aquisitivo com dias vencidos ou a vencer
				aAdd(aPerFerias,{	SRF->RF_DATABAS	,;										  		 			// 01 - Inicio Database de Ferias
									If(Empty(SRF->RF_DATAFIM),fCalcFimAq(SRF->RF_DATABAS),SRF->RF_DATAFIM),;  // 02 - Final Database de Ferias
									SRF->RF_DFERVAT	,;															// 03 - Dias de ferias vencidas
									SRF->RF_DFERAAT	,;															// 04 - Dias de ferias a vencer
									0.00			,;															// 05 - Dias totais de afastamento por periodo
									SRF->RF_OBSERVA	,;															// 06 - Descricao do tipo de afastamento do periodo
									CtoD("")		,;															// 07 - Data de original de termino do p.aquisitivo quando houver prorrogacao do mesmo RWX
									If(Empty(SRF->RF_STATUS),"1",SRF->RF_STATUS),;								// 08 - Status do periodo de ferias:  1-Ativo (Vencidos/A vencer)/2-Prescrito (Perdido)/3-Pago
									CtoD("")		,;															// 09 - Data de Inicio do Proximo periodo caso seja um periodo perdido.
									0				,;															// 10 - Quantidade dias de deducao para o direito apurado no periodo
									SRF->RF_DVENPEN ,;     														// 11 - Dias Vencidos Pendentes
									SRF->RF_IVENPEN ,;     														// 12 - Data Inicia Vencido Pendente
									SRF->RF_FVENPEN ,;															// 13 - Data Inicia Vencido Pendente
									SRF->RF_DFERANT ,;     														// 14 - Dias de Ferias Antecipadas
									SRF->RF_DFALVAT ,;     														// 15 - Dias de Faltas Vencidas
									SRF->RF_DFALAAT ,; 				    										// 16 - Dias de Faltas a Vencer
									If(cPaisLoc$"VEN|EQU",SRF->RF_DBONVAT,NIL),;				 				// 17 - Dias de bono vencido
									If(cPaisLoc$"VEN|EQU",SRF->RF_DBONAAT,NIL),; 								// 18 - Dias de bono a Vencer
									0				,;															// 19 - Total de dias de ferias
									0				,;															// 20 - Total de dias de bonificacao
									0				,;															// 21 - Dias de Faltas vencidas bonificacao
									0				,;															// 22 - Dias de ¦Faltas a Vencer bonificacao
									0				,;															// 23 - Dias de ausencia convertidos em ferias
									0				,;      													// 24 - Total de Dias de Ferias do Periodo
									SRF->RF_DIASANT ,;					      									// 25 - Dias Gozados Vencidos
									SRF->RF_DIASANT	,;	    													// 26 - Dias Gozados a Vencer
									0               ,;      													// 27 - Dias Subsid. Vencidos
									0               ,;   														// 28 - Dias Subsid. a Vencer
									0				,; 															// 29 - Dias de Pagto. Minimo na Adm/Dem (cpo. RF_PAGOFER desabilitado 08/2012)
									SRF->( RECNO() ),;															// 30 - Recno do aquivo
									Iif(Type("SRF->RF_FERPAGA")<>"U",  SRF->RF_FERPAGA, 0) ,;					// 31 - Dias pagos em R$ na folha
									SRF->RF_DATAATU	,;															// 32 - Data de atualizacao
									0                ;                                                          // 33 - Dias de suspensão do período
									})
			EndIf
			SRF->(DbSkip())
		EndDo
	EndIf

	If Empty(aPerFerias)
		Calc_Fer(@aPerFerias,dDataAte,,,,,,.F.)
	EndIf
	// Posicionar no periodo aberto atual
	nPosFer		:= Ascan(aPerFerias,{ |X| X[8] == "1" .and. x[1] = dDtBasFe })
	If nPosFer = 0
		FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0047, 2) //###'- Funcionario : '###"Não existe período de férias aberto cadastrado."
		dbSelectArea( "SRA" )
		dbSkip()
		Return( .f. )
	EndIf

	//--Armazena data do Periodo e Dias Antecipados.
	If lPrimVez
		dDtBasFeP := aPerFerias[nPosfer][12]
	EndIf
	dDT1      := dDtBasFe	 				// dDt1 - Mnemonico Tipo Publico utilizado no GPEXMED
	nDiasPer  := 0                			//   Qtd de dias gozadas no periodo aquisitivo
	nDiasPerP := 0                			//   Qtd de dias gozadas no periodo aquistiivo pendente
	nTDiasDir := aPerFerias[nPosFer][19]   //   Qtd de dias de direito referente ao periodo aquistiivo pendente

	nDAntPer  := 0
	nDFerVen  := 0
	nDFerAve  := 0

	For nX := 1 to Len(aPerFerias)
		nDferven  += Max(aPerFerias[nX][3] - aPerFerias[nX][14],0)
		nDferave  += Max(aPerFerias[nX][4] - aPerFerias[nX][14],0)
	Next nX
Else
	dDtIniProg	:= aProFerP[2] //data inicio
	nDiasFePro	:= aProFerP[1] //dias de gozo
	dDtBasFe	:= aProFerP[3] //data base
EndIf

nDFerPro  := If(nDFerPro == 0, nDiasFePro, nDFerPro) //se dias programacao estiver zerado, atualiza

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica Se Ferias Ja Foi Calculada                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbselectArea( "SRH" )
If nDiasPend > 0 // verificar se funcionario tem ferias pendentes
	If  dbSeek( SRA->RA_FILIAL + SRA->RA_MAT + DtoS( dDtBasFeP ) )
		nTDiasDir := SRH->RH_DFERVEN

		If dDtIniProg > SRH->RH_DATAFIM
			While !Eof() .And. SRH->RH_FILIAL+SRH->RH_MAT+DTOS(SRH->RH_DATABAS) = SRA->RA_FILIAL+SRA->RA_MAT+DtoS( dDtBasFeP )
				nDiasPerP += SRH->RH_DFERIAS+SRH->RH_DABONPEC
				dbSkip()
			Enddo
			If nDiasPerP = nTDiasDir
				FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), RTrim(SRA->RA_NOME)) +" / "+STR0037, 2) //###'- Funcionario : '###'Periodo aquisitivo ja calculado. Para calcular novo periodo, executar calculo de Ferias Individual, em Miscelanea \ Calculo \Ferias.
				dbSelectArea("SRA")
				dbSkip()
				Return .F.
		  	EndIf
		lNovoPer   := .F.
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Adiciona no Array de processamento os funcionarios em ferias ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), RTrim(SRA->RA_NOME)) + " - " + STR0014, 2) //###'- Funcionario : '###' em Ferias, retorno superior a data de inicio do novo periodo de gozo'
			dbSelectArea("SRA")
			dbSkip()
			Return .F.
		EndIf
	EndIf
Else
	If  dbSeek( SRA->RA_FILIAL + SRA->RA_MAT + DtoS( dDtBasFe ) )
		If dDtIniProg > SRH->RH_DATAFIM
			While !Eof() .And. SRH->RH_FILIAL+SRH->RH_MAT+DTOS(SRH->RH_DATABAS) = SRA->RA_FILIAL+SRA->RA_MAT+DtoS( dDtBasFe )
				nDiasPer += SRH->RH_DFERIAS+SRH->RH_DABONPEC
				dbSkip()
			Enddo

			If nDiasPer == 30
				FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), RTrim(SRA->RA_NOME)) +" / "+STR0037, 2) //###'- Funcionario : '###'Periodo aquisitivo ja calculado. Para calcular novo periodo, executar calculo de Ferias Individual, em Miscelanea \ Calculo \Ferias.
				dbSelectArea("SRA")
				dbSkip()
				Return .F.
			EndIf

			lNovoPer   := .F.
			nDAntPer   := nDiasPer
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Adiciona no Array de processamento os funcionarios em ferias ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), RTrim(SRA->RA_NOME)) + " - " + STR0014, 2) //###'- Funcionario : '###' em Ferias, retorno superior a data de inicio do novo periodo de gozo'
			dbSelectArea("SRA")
			dbSkip()
			Return .F.
		EndIf
	EndIf
EndIf

If lPrimVez //verifica SRF apenas se for primeiro calculo do funcionario
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcula Dias de Ferias Programadas                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbselectArea( "SRF" )
	DbSetOrder(1)
	dbSeek( cKeySRF )

	If SRF->RF_DVENPEN > 0
		nDFerAve := SRF->RF_DFERAAT
		nDferven := SRF->RF_DVENPEN
	ElseIf SRF->RF_DFERVAT > 0.0
		nDFerAve := SRF->RF_DFERAAT
		nDferven := SRF->RF_DFERVAT
	Else
		nDferven := nDferave := 0
		Calc_Fer(@aPerFerias,dDtIniProg)
		nPosFer	:= Ascan(aPerFerias,{ |X| X[8] == "1" .and. x[1] == dDtBasFe })
		If nPosFer == 0
			FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0047, 2) //###'- Funcionario : '###"Não existe período de férias aberto cadastrado."
			dbSelectArea( "SRA" )
			dbSkip()
			Return( .f. )
		EndIf
		nDferven  := aPerFerias[nPosFer][3]
		nDferave  := aPerFerias[nPosFer][4]
		nDferven := If( nDferven <= 0 , nDferave , nDferven )
	EndIf
Else
	nDferven := nDferave := 0
	Calc_Fer(@aPerFerias,dDtIniProg)
	nPosFer	:= Ascan(aPerFerias,{ |X| X[8] == "1" .and. x[1] == dDtBasFe })
	If nPosFer == 0
		FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0047, 2) //###'- Funcionario : '###"Não existe período de férias aberto cadastrado."
		dbSelectArea( "SRA" )
		dbSkip()
		Return( .f. )
	EndIf
	nDferven  := aPerFerias[nPosFer][3]
	nDferave  := aPerFerias[nPosFer][4]
	nDferven := If( nDferven <= 0 , nDferave , nDferven )
EndIf

If SRF->RF_ABOPEC == "1" .And.  ( AnoMes( dDtIniProg - nDiasAbono ) < AnoMes(dDtIniProg) .Or. cMesAnoRef > AnoMes( dDtIniProg - nDiasAbono ) )
	FiltraLog( @aLogFile, STR0012 + SRA->RA_MAT + "-" + If(lOfusca, Replicate('*',30), RTrim(SRA->RA_NOME)) + " - " + OemToAnsi(STR0096), 2) //O Abono Pecuniário esta sendo concedido antes do início do gozo de férias...
	FiltraLog( @aLogFile, Space(2) + OemToAnsi(STR0097) + OemToAnsi(STR0098), 2)

	SRA->( DbSkip() )
	Return .F.
ElseIf cMesAnoRef > AnoMes(dDtIniProg)
	FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT + "-" + If(lOfusca, Replicate('*',30), RTrim(SRA->RA_NOME)) + " - " + OemToAnsi(STR0100), 2) //"O mês para o cálculo de férias selecionado já foi fechado. Por favor, indique uma data válida para o início das férias."

	SRA->( DbSkip() )
	Return .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variavel que identifica se deve calcular dias de ferias		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lTDiasFer := If(!lTrataCpos, .T., (nDiasFePro > 0))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se dias foram programados ou calculados pelo sistema³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nDferven   := If( nDferven > aTabFer[3], aTabFer[3], nDferven )
nDiasFePro := If( lTrataCpos, nDiasFePro, nDFerVen )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apura os dias de ferias do periodo ( Saldo )				 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !fApuraD(@nDiasFePro,@nDiasAbono,If(cPaisLoc <> "BRA" .and. cPerFeAc=="S", nDferven,If(nDiasPend == 0, aTabFer[3], nTDiasDir)), nDiasFePro+nDiasAbono,dDtBasFe,If(nDiasPend > 0, nDiasPerP, nDiasPer),nColPro)
	FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT + "-" + If(lOfusca, Replicate('*',30), RTrim(SRA->RA_NOME)) + " - " + OemToAnsi(STR0105), 2) //"Não foi possível concluir o cáculo das férias. Verifique as informações contidas no controle de dias de direito do funcionário."
	dbSelectArea( "SRA" )
	dbSkip()
	Return .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se dias ferias igual a Zero, forcar dias p/ calculo do abono ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nDiasFePro := If(nDiasFePro > 0, nDiasFePro, nDFerVen)

If nDiasFePro == 0
	FiltraLog(@aLogFile, STR0012 + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), RTrim(SRA->RA_NOME)) +" / "+STR0037, 2) //###'- Funcionário: '###'Período aquisitivo já calculado. Para calcular novo período, executar cálculo de Férias Individual, em Miscelânea \ Cálculo \Férias.
	dbSelectArea( "SRA" )
	dbSkip()
	Return .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica As Faltas e Calcula as Medias do Periodo            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fVerMed(@nFaltasFER, dDtBasFe)

If lPrimVez //verifica SRF apenas se for primeiro calculo do funcionario
	If nFaltasFER == 0
		//--Quando as Ferias for a Vencer deve proporcionalizar as Ferias
		If nDferVen < aTabFer[3]
			If cPaisLoc=="BRA" .and. cPerFeAc=='S' .and. nDferVen > 0
				nFaltasFER  := SRF->RF_DFALVAT
		   	Else
				nFaltasFER  := SRF->RF_DFALAAT
			EndIf
		Else
			nFaltasFER  := SRF->RF_DFALVAT
		Endif
	Endif
EndIf

nDescFal := nFaltasFER
TabFaltas(@nDescFal)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Paginar msg de alerta qdo funcionario, devido a qtd de faltas  ³
//³ perder o direito ou seu calculo for porporcional.	           ³
//³ 				 											   		    ³
//³ Ate 5 faltas = 30 dias ferias                                  ³
//³ De 6 a 14    = 24 dias ferias                                  ³
//³ De 15 a 23   = 18 dias ferias                                  ³
//³ De 24 a 32   = 12 dias ferias                                  ³
//³ Acima de 32  =  0 dias ferias  - Perde o direito               ³
//³                                                                ³
//³ Regime de tempo parcial											    ³
//³ Acima de 7   = Metade dos dias de direito						    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nDescFal >= 30
	If nProFerP == 0
		FiltraLog( @aLogFile, STR0012+SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) +" - "+STR0027 +;//"Funcionario: Funcionario com mais de 32 faltas no periodo, nao tem direito a ferias."
						Str(nFaltasFER,4), 2)									//"Faltas: "
	Else
		If !lTemLog
			FiltraLog( @aLogFile, STR0012+SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) +" / " + STR0071, 1) //"Realizado calculado particionado das ferias"
		EndIf

		FiltraLog(@aLogFile, Space(30) + STR0072 + DtoC(dDtBasFe)		+ " - " +;	 //Período Aquisitivo
						STR0027 + " - " + Str(nFaltasFER,4) +;//"Faltas"
						STR0018 + Transform(0,"99.99"),  1)//Dias Calculados
		lTemLog := .T.
	EndIf
	lTDiasFer := .F.
ElseIf nDescFal > 0
	If !lMetadeFal .And. !lTempoParc
		If nProFerP == 0
			FiltraLog( @aLogFile, STR0012+SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + " - " + STR0028    +;	// " Funcionario: apos o abatimento das faltas nos dias de direito do funcionário, os dias de gozo ficaram inferiores aos dias de ferias programadas."
							Str((nDiasFePro+nDiasAbono)-nDescFal,4)   + " - " + STR0029    +;	// " Gozo: "
							Str(nFaltasFER,4), 1 )													//"Faltas: "
		Else
			If !lTemLog
				FiltraLog(@aLogFile, STR0012+SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) +" / " + STR0071, 1) //"Realizado calculado particionado das ferias"
			EndIf
			lTemLog := .T.
			If ( (nDiasFePro+nDiasAbono) - nDescFal ) < 0 //se o desconto de faltas for maior que os dias disponiveis, zera dias de gozo
				FiltraLog(@aLogFile, Space(30) + STR0072 + DtoC(dDtBasFe) + " - " +;	// " Funcionario: ### apos o abatimento das faltas nao ha mais dias de direito no periodo aquisitivo."
							STR0073 + Str(0, 4) + " - " +;						// " Gozo: "
							STR0029 + Str(nFaltasFER,4), 2)							// " Faltas: "
				Return .F. //cancela calculo pois dias de direito foram zerados apos abatimento de faltas

			Else
				FiltraLog(@aLogFile, Space(30) + STR0072 + DtoC(dDtBasFe) + " - " +;			// " Funcionario: apos o abatimento das faltas nos dias de direito do funcionário, os dias de gozo ficaram inferiores aos dias de ferias programadas."
							STR0028 + Str((nDiasFePro+nDiasAbono)-nDescFal,4) + " - " +;// " Gozo: "
							STR0029 + Str(nFaltasFER,4), 1)									// " Faltas: "
			EndIf
		EndIf
	Else
		If nProFerP == 0
			FiltraLog(@aLogFile, STR0012+SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + " - " + STR0028    +;	// " Funcionario: apos o abatimento das faltas nos dias de direito do funcionário, os dias de gozo ficaram inferiores aos dias de ferias programadas."
							Str( (If (lMetadeFal, nDiasFePro / 2, nDiasFePro) + nDiasAbono),4)   + " - " + STR0029    +;	// " Gozo: "
							Str(nFaltasFER,4), 1)													//"Faltas: "
		Else
			If !lTemLog
				FiltraLog(@aLogFile, STR0012+SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) +" / " + STR0071, 1) //"Realizado calculado particionado das ferias"
			EndIf
			lTemLog := .T.
			If ( (nDiasFePro+nDiasAbono) - If(lMetadeFal, nDiasFePro / 2, 0) ) < 0 //se o desconto de faltas for maior que os dias disponiveis, zera dias de gozo
				FiltraLog(@aLogFile, Space(30) + STR0072 + DtoC(dDtBasFe) + " - " +;	// " Funcionario: ### apos o abatimento das faltas nao ha mais dias de direito no periodo aquisitivo."
							STR0073 + Str(0, 4) + " - " +;						// " Gozo: "
							STR0029 + Str(nFaltasFER,4), 2)							// " Faltas: "
				Return .F. //cancela calculo pois dias de direito foram zerados apos abatimento de faltas

			Else
				FiltraLog( @aLogFile, Space(30) + STR0072 + DtoC(dDtBasFe) + " - " +;			// " Funcionario: apos o abatimento das faltas nos dias de direito do funcionário, os dias de gozo ficaram inferiores aos dias de ferias programadas."
						STR0028 + Str((nDiasFePro+nDiasAbono)- If(lMetadeFal, nDiasFePro / 2, 0),4) + " - " +;// " Gozo: "
						STR0029 + Str(nFaltasFER,4), 1)									// " Faltas: "
			EndIf
		Endif
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se Tem Abono Pecuniario                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lPrimVez
	If lTrataCpos
		If nDescFal > 0 .And. nDiasAbono > 0
			If !lMetadeFal .And. !lTempoParc
				M->RH_DABONPE := int( ( nDiasFePro + nDiasAbono - nDescFal ) / 3 )
			Else
				M->RH_DABONPE := int( ( nDiasFePro / 2  ) / 3 )
			Endif
			nDiasFePro	  := nDiasFePro + ( nDiasAbono - M->RH_DABONPE )
			nDiasAbono	  := M->RH_DABONPE
		Else
			M->RH_DABONPE := nDiasAbono
		EndIf
	Else
		If SRF->RF_TEMABPE == "S"
			If !lMetadeFal .And. !lTempoParc
			M->RH_DABONPE := ( nDiasFePro - nDescFal ) / 3
			ElseIf lMetadeFal
				M->RH_DABONPE := ( nDiasFePro / 2 ) / 3
			Else
				M->RH_DABONPE := nDiasFePro / 3
			Endif
		Else
			M->RH_DABONPE := 0
		EndIf
	EndIf
EndIf

M->RH_ABOPEC := SRF->RF_ABOPEC
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta Variaveis Igual ao Campo de Memoria do SRH para Roteiro³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lPrimVez .AND. SRF->RF_DVENPEN > 0 //verifica SRF apenas se for primeiro calculo do funcionario
	M->RH_DFERIAS := nDiasFePro
	M->RH_DFERVEN := nDferven
	M->RH_DFERIAS := nDferven
	M->RH_PERC13S := SRF->RF_PERC13S
	M->RH_DBASEAT := SRF->RF_FVENPEN
	M->RH_DATABAS := SRF->RF_IVENPEN
	M->RH_DIALREM := 0
	lNovoPer	  := .F.
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//|Busca o fim do periodo aquisitivo. No caso de afastamento para|
	//|o servico militar, o final do periodo pode se estender muito  |
	//|alem da data de retorno ao trabalho.							 |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Calc_Fer(@aPerFerias,dDtIniProg,,,,,,.F.)

	M->RH_DFERVEN := nDferven
	If !lMetadeFal .And. !lTempoParc
		M->RH_DFERIAS := nDiasFePro - nDescFal - If(lTrataCpos,0, M->RH_DABONPE)
	ElseIf lMetadefal
		M->RH_DFERIAS := nDiasFePro	:= nDiasFePro / 2 - If(lTrataCpos,0,M->RH_DABONPE)
	Else
		M->RH_DFERIAS := nDiasFePro	:= nDiasFePro - If(lTrataCpos,0,M->RH_DABONPE)
	Endif
	M->RH_PERC13S := SRF->RF_PERC13S
	If !Empty(dDtBasFim) .And. cPerFeAc # "S"
  		M->RH_DBASEAT := dDtBasFim				        // Fim do Periodo Aquisitivo
	Else
		nPosFer		:= aScan(aPerFerias,{ |X| X[8] == "1" .And. x[1] == dDtBasFe  })
		If nPosFer > 0
			M->RH_DBASEAT := aPerFerias[nPosFer][2]
		Else
			M->RH_DBASEAT := fCalcFimAq(dDtBasFe)  //Calculo Fim Periodo Aquisitivo
		EndIf
	EndIf
	M->RH_DATABAS := dDtBasFe
	M->RH_DIALREM := 0
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula Data Inicio/Final, Data de Aviso e Data do Recibo    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dDtIniFer  		:= dDtIniProg
dDtFimFer		:= If(lTDiasFer, (dDtIniProg + Round(M->RH_DFERIAS,0))-1, dDtIniFer)
M->RH_DATAINI 	:= dDtIniProg
dDtFimFer		:= If(dDtFimFer < M->RH_DATAINI, M->RH_DATAINI, dDtFimFer)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Checa licenca remunerada de acorodo com parametro MV_DIA2501 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fChkLicRem(dDtIniFer,dDtFimFer,@nDMes12,@nDMes01,cDia2501)
nDLicRem := ( nDMes12 + nDMes01 )
dDtFimFer += ( nDMes12 + nDMes01 )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava as datas de fim das ferias e recibo                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
M->RH_DATAFIM   := dDtFimFer
If !Empty(M->RH_ABOPEC)
	cAboPec :=	M->RH_ABOPEC
Else
	cAboPec := cAboAnt
EndIf

If Empty(aProFerP) //realiza calculo das datas de aviso e recibo apenas no primeiro calculo do funcionario
	nDiasAviso 		:= GetNewPar("MV_AVISFER",aTabFer[3])  // Dias Aviso Ferias
	dDtAviso   		:= fVerData(dDtIniFer - (If (nDiasAviso > 0, nDiasAviso,aTabFer[3])))

	If cAboPec 	=="1" .and. M->RH_DABONPE > 0
		dDtRec := If(lCalcDtPgt .Or. Empty(dDtRec), DataValida(DataValida((dDtIniFer-M->RH_DABONPE)-1,.F.)-1,.F.),dDtRec)
	Else
		dDtRec := If(lCalcDtPgt .Or. Empty(dDtRec), DataValida(DataValida(dDtIniFer-1,.F.)-1,.F.), dDtRec)
	EndIf
EndIf

M->RH_DTRECIB	:= dDtRec

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se houver dias de ferias = 0.5, lancar 0.5 em Lic. Remunerda ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fChkFQueb(dDtIniFer,dDtFimFer,@nDLicQ1,@nDLicQ2,nDLicRem)

M->RH_DIALREM := nDMes12 + nDLicQ1
M->RH_DIALRE1 := nDMes01 + nDLicQ2

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Emite aviso qdo eh feito o calc.ferias em mais de um periodo ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lRefTrab .And. (nIdade < 18 .Or. nIdade >= 50)  .And. ((M->RH_DFERIAS + M->RH_DABONPE + nDescFal ) < aTabFer[3])
	FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0044, 1)  //'- Funcionario : ' "Férias progamadas calculadas - menor de 18 anos ou maior de 50 anos"
EndIf

If  !fVerDias( nDiasPend ) .or. !fVerDiaSem()
	dbSelectArea( "SRA" )
	dbSkip()
	return .F.
EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fChkFQueb ºAutor  ³Microsiga           º Data ³  02/12/02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se ferias tem dias quebrados                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Generico                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fChkFQueb(dDataini,dDataFim,nDLicQ1,nDLicQ2,nDiasLR, nDiaFeQueb)

DEFAULT nDiaFeQueb := If(MV_MODFOL == "2", M->RHI_DFERIAS,M->RH_DFERIAS)

nDiaFeQueb:= nDiaFeQueb - Int(nDiaFeQueb)

nDLicQ1 := 0
nDLicQ2 := 0
nDiasLR := If(nDiasLR == Nil, 0, nDiasLR-Int(nDiasLR))

If nDiasLR # nDiaFeQueb
	If MesAno(dDataFim) > MesAno(dDataini)
		nDLicQ2 += nDiaFeQueb
	Else
		nDLicQ1 += nDiaFeQueb
	EndIf
EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fVerMed   ºAutor  ³Microsiga           º Data ³  08/03/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Carrega as Medias                                           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fVerMed(nFaltasFER,dDtBasBus)

Local cAlias := Alias()

DEFAULT lGP060FAL 	:= ExistBlock("GP060FAL")

dbSelectArea(cTBLXMED)
Zap

GPEXMED(dDtBasBus,CtoD(" "),dDataBase,CtoD(""),If(cPaisLoc <> "BRA" .and. cPerFeAc=="S",fCalcFimAq(dDtBasBus),If(nColPro==1,dDtInCol,dDataBase)),SalHora,Val_Salmin,aCodfol,.T.,.T.,.T.)
nFaltasFER := 0
dbSelectArea( cTBLXMED )

If ndFerven >= aTabFer[3] .Or. lTemVenc
	If dbSeek( SRA->RA_FILIAL + SRA->RA_MAT + "1" + "998" + "9698" )
		nFaltasFER := (cTBLXMED)->RP_HORAS
	EndIf
//-- Quando o Periodo a considerar for igual a 2-A vencer ou 3-Ambos
ElseIf nVenAveAmb == 3 .Or. nVenAveAmb == 2
	If dbSeek( Sra->Ra_filial+Sra->Ra_mat+"2"+"998"+"9698" )
		nFaltasFER := (cTBLXMED)->Rp_Horas
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para alterar valores de faltas				 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lGP060FAL
	ExecBlock("GP060FAL",.F.,.F.)
EndIf

dbSelectArea(cAlias)

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ GPEX061  ºAutor  ³Emerson R. de Souza º Data ³  30/11/99   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Cancelamento das ferias Coletivas/Programadas               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Local                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPEX061()

Local aSays		:= {}
Local aButtons	:= {}
Local nRecno	:= SRA->( Recno() )
Local nIndexOrd	:= SRA->( IndexOrd() )
Local cGrupoExcl:= If(nColPro == 1, "GPM061", "GPM063")
Local aLog		:= {}
Local nCont		:= 0

Private lAbortPrint := .F.
Private nSavRec
Private aLogFile  := {}
Private aLogTitle := { Upper(OemToAnsi(STR0101)) } //'Log de ocorrencias da Exclusão Ferias'

If !lAuto
	nOpca := 0
	Pergunte(cGrupoExcl,.F.)

	aAdd(aSays,OemToAnsi(If(nColPro == 1, STR0009, STR0010)) )  //"Cancelamento do calculo de ferias coletivas"##"Cancelamento do calculo de ferias programadas."
	aAdd(aSays,OemToAnsi(STR0019))						          //"Ser  processado de acordo com os parametros selecionados pelo us£ario."
	aAdd(aButtons, { 5,.T.,{|| Pergunte(cGrupoExcl,.T. ) } } )
	aAdd(aButtons, { 1,.T.,{|o| nOpca := 1,IF(gpconfOK(),FechaBatch(),nOpca:=0) }} )
	aAdd(aButtons, { 2,.T.,{|o| FechaBatch() }} )

	FormBatch( cCadastro, aSays, aButtons )
Else
	nOpca := 1
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpca == 1 .And. !lAuto
	ProcGpe({|lEnd| GPM061Proc()},,,.T.)  // Chamada do Processamento
ElseIf nOpca == 1 .And. lAuto
	GPM061Proc()  // Chamada do Processamento
EndIf

If !Empty(aLogFile)
	aAdd(aLog, {})

	For nCont := 1 To Len(aLogFile)
		aAdd( aLog[1], aLogFile[nCont] )
	Next nCont
	fMakeLog( aLog, aLogTitle, "GPEM060", NIL, FunName(), STR0101 )//'Log de ocorrencias da Exclusão Ferias'
EndIf

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Reposiciona ponteiro nos Bancos de Dados                     ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
dbSelectArea("SRA") ; dbSetOrder( nIndexOrd ) ; dbGoto( nRecno )

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPm061ProcºAutor  ³MICROSIGA           º Data ³  01/12/99   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Inicia o cancelamento a partir dos parametros               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Local                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPM061Proc()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis de Acesso do Usuario                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cAcessaSRA	:= &( " { || " + IF( Empty( cAcessaSRA := ChkRH( "GPEM060" , "SRA" , "1" ) ) , ".T." , cAcessaSRA ) + " } " )
Local cExclui		:= ""
Local bEval			:= { |e| &(e) }
Local aPerAtual		:= {}
Local lRegNovo 		:= .T.
Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), {.T., .F.}) //[2]Ofuscamento
Local aFldRel		:= If(aOfusca[2], FwProtectedDataUtil():UsrNoAccessFieldsInList({"RA_NOME"}), {})
Local lOfusca		:= Len(aFldRel) > 0
Local nRet			:= 0
Private lAvisoBlq	:= .T.

DEFAULT lIntTAF		:= (GetMv("MV_RHTAF",.T., .F.) == .T. .AND. Val(GetMv('MV_FASESOC',.T.,' ')) >= 1  )
DEFAULT lMiddleware := If( cPaisLoc == 'BRA' .AND. Findfunction("fVerMW"), fVerMW(), .F. )
DEFAULT lTemREQ     := GetMvRH( "MV_RHTAEEX",,3 ) <> 3 .and. ChkFile("REQ") .and. FindFunction("fDelDocTAE") .and. FindFunction("FwTotvsSign")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando as Perguntas                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nOrdem      :=  mv_par01  // Processar por 1-Matricula  2-C.Custo
cFilDe      :=  mv_par02  // Filial De
cFilAte     :=  mv_par03  // Filial Ate
cCcDe       :=  mv_par04  // Centro de Custo De
cCcAte      :=  mv_par05  // Centro de Custo Ate
cMatDe      :=  mv_par06  // Matricula De
cMatAte     :=  mv_par07  // Matricula Ate
cCategoria  :=  mv_par08  // Categoria do Funcionario
dDtDeFer    :=  mv_par09  // Data Inicio De
dDtAteFer   :=  mv_par10  // Data Inicio Ate

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se datas "inicio de" e "inicio ate" estao prenchidas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Empty( dDtDeFer ) .Or. Empty( dDtAteFer )
	If nColPro == 1
		Help(' ',1,"DATABRAN")
	Else
		Help(' ',1,"DATABRAN1")
	EndIf
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Procura primeiro funcionario                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SRA" )
nSavRec  := Recno()
dbGotop()
If nOrdem == 1
	dbSetOrder( 1 )
	dbSeek( cFilDe + cMatDe , .T. )
ElseIf nOrdem == 2
	dbSetOrder( 2 )
	dbSeek( cFilDe + cCcDe + cMatDe , .T. )
EndIf

cExclui := cExclui + "(RA_FILIAL  < cFilDe     .or. RA_FILIAL  > cFilAte    ).or."
cExclui := cExclui + "(RA_MAT     < cMatDe     .or. RA_MAT     > cMatAte    ).or."
cExclui := cExclui + "(RA_CC      < cCcDe      .or. RA_CC      > cCCAte     ).or."
cExclui := cExclui + "!(RA_CATFUNC $ cCategoria)"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega Regua Processamento	                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If !lAuto
	GpProcRegua(SRA->(RecCount()))
EndIf

While SRA->(!Eof())

	IF lAbortPrint
		Exit
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Consiste o De / Ate  nOrdem = 1-Matricula / 2-Centro Custo   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOrdem == 1
		If SRA->(Eof()) .Or. ( SRA->RA_FILIAL + SRA->RA_MAT > cFilAte + cMatAte )
			Exit
		EndIf
	ElseIf nOrdem == 2
		If SRA->(Eof()) .Or. ( SRA->RA_FILIAL + SRA->RA_CC + SRA->RA_MAT > cFilAte + cCcAte + cMatAte )
			Exit
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Consiste parametrizacao DE-ATE                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SRA->( Eval( bEval , cExclui ) )
		SRA->( dbSkip() )
		Loop
	EndIf

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Consiste Filiais e Acessos                                             ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If !( SRA->RA_FILIAL $ fValidFil() ) .or. !Eval( cAcessaSRA )
		SRA->( dbSkip() )
		Loop
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta cursor para movimentacao da barra                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lAuto
		GpIncProc(SRA->RA_FILIAL + " - " + SRA->RA_MAT + If(lOfusca, "", " - " + SRA->RA_NOME) )
	EndIf

	aPerAtual := {} //limpa o array com o periodo para nova carga de acordo com funcionario processado.
	If !fGetPerAtual( @aPerAtual,xFilial("RCH",( "SRA" )->RA_FILIAL) , SRA->RA_PROCES , fGetCalcRot('3') )
		SRA->( dbSkip() )
		Loop
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica no Arquivo SRH se Existe Periodo de Ferias          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbselectArea( "SRH" )
	If SRH->(dbSeek( SRA->RA_FILIAL + SRA->RA_MAT ) )
		lRegNovo := .T.
		While SRH->(!EOF()) .And. SRH->RH_FILIAL + SRH->RH_MAT == SRA->RA_FILIAL + SRA->RA_MAT
			If SRH->RH_DATAINI >= dDtDeFer .And. SRH->RH_DATAINI <= dDtAteFer
				//Verifica se existe integração do documento no TAE e se ele pode ser excluído
				If lTemREQ .and. ( nRet := fChkDocTAE(SRA->RA_FILIAL, SRA->RA_MAT, , "1", SRH->RH_DATAINI, .F.) ) > 1
					If nRet == 2
						aAdd(aLogFile, STR0012 + SRA->RA_MAT + "-" + If(lOfusca, Replicate('*',30), SRA->RA_NOME) ) //###'- Funcionario : '
						aAdd(aLogFile, STR0116 ) //"Falha na autenticação com TAE. Efetue a exclusão através da rotina de cálculo individual."
					ElseIf nRet == 3
						aAdd(aLogFile, STR0012 + SRA->RA_MAT + "-" + If(lOfusca, Replicate('*',30), SRA->RA_NOME) ) //###'- Funcionario : '
						aAdd(aLogFile, STR0117 ) //"O recibo de férias já foi assinado no TAE. Efetue a exclusão através da rotina de cálculo individual."
					EndIf	
				ElseIf MesAno(SRH->RH_DATAINI) >= MesAno(aPerAtual[1][6]) .AND. ( Empty(aPerAtual[1][10]) .or. aPerAtual[1][1] < SRH->RH_PERIODO )  //Mês e ano das férias deve ser igual ao período de férias ativo e o período não pode estar integrado, ou mês e ano das férias deve ser superior ao período ativo.
					//?- Verifica se o calculo esta Liberado
					If !fVldAccess( SRA->RA_FILIAL, SRH->RH_DATAINI, cSemana, lAvisoBlq, ,"2" )
						lAvisoBlq := .F.
					ElseIf (nColPro == 1 .And. SRH->RH_TIPCAL == "C") .Or.;
						(nColPro == 2 .And. SRH->RH_TIPCAL == "P")
						Fm030Can(Recno(), @lRegNovo) // Cancela ferias do funcionario
						fDelHist() //deleta historico de medias
					ElseIf cPaisLoc == "VEN"  .AND. nColPro == 1
						Fm030Can(Recno()) // Cancela ferias do funcionario
						fDelHist() //deleta historico de medias
					EndIf
				Else
					aAdd(aLogFile, STR0012 + SRA->RA_MAT + "-" + If(lOfusca, Replicate('*',30), SRA->RA_NOME) ) //###'- Funcionario : '
					aAdd(aLogFile, STR0114 + dToC(SRH->RH_DATAINI) + STR0115 ) //"Férias iniciadas em "###" pois o período das férias é anterior ao que está ativo para o roteiro de férias.."
				EndIf
			EndIf
			SRH->(dbSkip())

			If (lIntTaf .Or. lMiddleware) .And. !lRegNovo
				aAdd(aLogFile, STR0012 + SRA->RA_MAT + "-" + If(lOfusca, Replicate('*',30), SRA->RA_NOME) ) //###'- Funcionario : '
			EndIf
		EndDo
	EndIf
	SRA->(dbSkip())
Enddo
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Recupera a Integridade dos dados                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SRA" )
dbSetOrder( 1 )
dbGoTo(nSavRec)

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fDtBusFer ºAutor  ³Emerson Rosa        º Data ³  25/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Testa se o campo existe e busca data de pagto das ferias.  º±±
±±º          ³ Este campo sera utilizado para calculo de 2 recibos.       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Generico                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fDtBusFer()
Local cAlias := ALIAS()
Static lExistCpo

dbSelectArea( "SRH" )
If lExistCpo == Nil
	cEmpAtu   := FwCodEmp("SRH")
	lExistCpo := ( SRH->(FieldPos( "RH_DTITENS" )) # 0 )
EndIf

dDtRetorno := SRH->RH_DTRECIB
If lExistCpo .And. !Empty(SRH->RH_DTITENS)
	dDtRetorno := SRH->RH_DTITENS
EndIf
dbSelectArea( cAlias )

Return dDtRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³  fApuraD ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 26/10/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Apura os dias de ferias do periodo               	      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fApuraD(nDiasGozo,nDAboPec,nTotDPer,nDiasInf,dDtBasFe,nDiasPer,nColPro)
Local nTDProxPer := nDAboAux := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apura dias de ferias que excederam o periodo atual - Somente ³
//³ se NAO trocou o periodo aquisitivo, pois, do contrario, as   ³
//³ informacoes contidas no SRF sao do periodo anterior.	     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (nColPro == 1 .OR. nProFerP == 0) .AND. dDtBasFe == SRF->RF_DATABAS
	nTDProxPer := nDiasGozo + nDAboPec - (nTotDPer -  nDAntPer )
	If nTDProxPer > 0
		If nDAboPec > 0
			nDAboAux := (nDAboPec - nTDProxPer)
			If nDAboAux > 0
				nDAboPec   := nDAboAux
			Else
				nDAboPec   := 0
				nDiasGozo  -= (nDAboAux*-1)
			EndIf
		Else
			nDiasGozo := Max(nDiasGozo - nTDProxPer, 0)
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Registra funcionario caso dias de ferias > que dias direito. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    	If 	nColPro == 1
				FiltraLog(@aLogFile, STR0012+SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) +" / "      +STR0016 +;  //"Dias Antecipados "
						 	Transform(nDAntPer,"99.9") + " - "             	   		+STR0017 +;  //"Dias Informados "
						 	Transform(nDiasInf,"99.9")+" - "                      	+STR0018 +;  //"Dias Calculados "
						 	Transform(nDiasGozo+nDAboPec,"99.9"), 1)
	  	else
			If ( nDiasGozo+nDAboPec ) == 0
				FiltraLog(@aLogFile, STR0012+SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) +" / "+STR0037, 2 ) //###'- Funcionario : '###'Periodo aquisitivo ja calculado. Para calcular novo periodo, executar calculo de Ferias Individual, em Miscelanea \ Calculo \Ferias.
			else
				FiltraLog(@aLogFile, STR0012+SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) +" / "      +STR0016 +;
						 	Transform(SRF->RF_DFERANT+ nDiasPer,"99.9") + " - "   +STR0017 +;  //"Dias Antecipados "
						 	Transform(nDiasInf,"99.9")+" - "                      +STR0038 +;  //"Dias Informados "
						 	Transform(nTotDPer,"99.9")+" - "                      +STR0018 +;  //"Dias Direito "
						 	Transform(nDiasGozo+nDAboPec,"99.9"), 1)                           //"Dias Calculados "

			EndIf
		EndIf
	EndIf
ElseIf nColPro == 2 .AND. nProFerP != 0
	If lPrimVez
		nTDProxPer := nDiasGozo + nDAboPec - (nTotDPer - ( nDiasPer ) )

		If nTDProxPer > 0
			If nDAboPec > 0
				nDAboAux := (nDAboPec - nTDProxPer)
				If nDAboAux > 0
					nDAboPec   := nDAboAux
				Else
					nDAboPec   := 0
					nDiasGozo  -= (nDAboAux*-1)
				EndIf
			Else
				nDiasGozo := Max(nDiasGozo - nTDProxPer, 0)
			EndIf

			// Registra funcionario caso dias de ferias > que dias direito.
			FiltraLog(@aLogFile, STR0012+SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) +" / " + STR0071, 1) //"Realizado calculado particionado das ferias"
			FiltraLog(@aLogFile, Space(30) + STR0072 + DtoC(dDtBasFe)		+ " - " +;	 //Período Aquisitivo
							STR0018 + Transform(nDiasGozo + nDAboPec,"99.99"), 1	)//Dias Calculados
			lTemLog := .T.
		EndIf

	Else
		FiltraLog(@aLogFile,	Space(30) + STR0072 + DtoC(dDtBasFe)		+ " - " +;  //Periodo Aquisitivo
						STR0018 + Transform(nDiasGozo + nDAboPec,"99.99"),1	) 			//Dias Calculados
		lTemLog := .T.
	EndIf
EndIf

Return (nDiasGozo + nDAboPec + If(nColPro == 1 .and. nColeDire == 1 , nDLicRem , 0 ) > 0 )		//-- somente considera lic.remunerada  se  tiver dias de ferias

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fChkAbFe  ³ Autor ³ Emerson Rosa de Souza ³ Data ³ 26/10/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Zera todas as verbas de ferias preservando apenas o abono  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fChkAbFe(aPd,nValProv)
Local aPdTmp 	:= Aclone(aPd)
Local nPosCod	:= 0
Local nX		:= 0

If Type("lTDiasFer") == "U" .Or. lTDiasFer
	Return Nil
EndIf

//mantém apenas as verbas referentes a abono pecuniário

aPd      := {}
nValProv := 0

Static aPdAbAux := {}

If Empty(aPdAbAux)
	aPdAbAux := fCarPdAbo()
EndIf

M->RH_DIALREM := 0
M->RH_DIALRE1 := 0
M->RH_DFERIAS := 0

For nX := 1 to Len(aPdAbAux)
	nPosCod := Ascan(aPdTmp,{ |X| X[1] = aPdAbAux[nX] .And. X[9] # 'D' } )
	If nPosCod > 0
		Aadd( aPd, aPdTmp[nPosCod] )
	EndIf
Next nX

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fCarPdAbo ³ Autor ³ Leandro Drumond       ³ Data ³ 16/02/16 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Carrega as verbas referente a Abono pecuniário             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fCarPdAbo()

Local aRet := {}

aAdd(aRet, aCodFol[74,1])
aAdd(aRet, aCodFol[79,1])
aAdd(aRet, aCodFol[94,1])
aAdd(aRet, aCodFol[95,1])
aAdd(aRet, aCodFol[205,1])
aAdd(aRet, aCodFol[206,1])
aAdd(aRet, aCodFol[207,1])
aAdd(aRet, aCodFol[208,1])
aAdd(aRet, aCodFol[622,1])
aAdd(aRet, aCodFol[623,1])
aAdd(aRet, aCodFol[633,1])
aAdd(aRet, aCodFol[634,1])
aAdd(aRet, aCodFol[1312,1])
aAdd(aRet, aCodFol[1313,1])
aAdd(aRet, aCodFol[1314,1])
aAdd(aRet, aCodFol[1315,1])
aAdd(aRet, aCodFol[1316,1])
aAdd(aRet, aCodFol[1317,1])
aAdd(aRet, aCodFol[1318,1])
aAdd(aRet, aCodFol[1319,1])
aAdd(aRet, aCodFol[1320,1])
aAdd(aRet, aCodFol[1321,1])
aAdd(aRet, aCodFol[1322,1])
aAdd(aRet, aCodFol[1323,1])
aAdd(aRet, aCodFol[1324,1])
aAdd(aRet, aCodFol[1325,1])
aAdd(aRet, aCodFol[1326,1])
aAdd(aRet, aCodFol[1327,1])
aAdd(aRet, aCodFol[1330,1])
aAdd(aRet, aCodFol[1331,1])

Return aRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fOpcRadio ³ Autor ³ Equipe R.H.           ³ Data ³ 26/10/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Monta dialogo para selecao com botoes de radio             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Function fOpcRadio(nOpcRadio, cTitJan, cTitBox, cTitRad1, cTitRad2)
Local nOpcAux
Local oRadio
Local oDlg
Local oFont

Local oSize

nOpcAux   := nOpcRadio
nOpcRadio := 0


DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD

oSize := FwDefSize():New()
oSize:AddObject( "CABECALHO",  160, 50, .F., .F. ) // Não dimensionavel

oSize:lProp 	:= .F. // Proporcional
oSize:aMargins 	:= { 3, 3, 3, 3 } // Espaco ao lado dos objetos 0, entre eles 3
oSize:Process() 	   // Dispara os calculos

Define MSDialog oDlg Title OemToAnsi(cTitJan) FROM 0,0 TO 200,380 OF oMainWnd PIXEL

	@ oSize:GetDimension("CABECALHO","LININI") +5 , oSize:GetDimension("CABECALHO","COLINI")+10;
		TO oSize:GetDimension("CABECALHO","LINEND") +10,oSize:GetDimension("CABECALHO","COLEND")+10 LABEL OemToAnsi(cTitBox) OF oDlg PIXEL //"Selecione a Opção de Cálculo"

	@ oSize:GetDimension("CABECALHO","LININI")+17,oSize:GetDimension("CABECALHO","COLINI")+20   RADIO oRadio VAR nOpcAux ITEMS 	OemToAnsi(cTitRad1), OemToAnsi(cTitRad2);
          SIZE 115,010 OF oDlg PIXEL //"Produto"


	bSet15 := {|| nOpcRadio := nOpcAux, oDlg:End() }
	bSet24 := {|| nOpcRadio := 0,       oDlg:End() }


ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 )

Return( nOpcRadio )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fDiasAfCol³ Autor ³ Equipe R.H.           ³ Data ³ 26/10/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ 													          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Function fDiasAfCol(cMat, dDatIni, dDatFim) // MAT, DATA INICIO FERIAS, DATA FINAL

Local aArea
Local lRet

lRet := .T.

aArea := GetArea()

nSr8Order := RetOrdem( "SR8" , "R8_FILIAL + R8_MAT + DTOS(R8_DATAINI) + R8_TIPO" )
SR8->(dbSetOrder(nSR8Order))
SR8->(dbSeek(xFilial("SR8") + cMat))

While ! SR8->(Eof()) .And. SR8->R8_MAT = cMat

	If SRA->RA_SITFOLH = "A" .and. Empty(SR8->R8_DATAFIM)
		lRet := .F.
		Exit
	EndIf

	If Substr(Dtos(SR8->R8_DATAINI),1,6) = Substr(Dtos(dDatini),1,6)

	     Do case
	     	case dToS(dDatIni) > dToS(SR8->R8_DATAFIM)
	     		lRet := .T.
	        case dTos(SR8->R8_DATAINI) >= dToS(dDatIni) .and. dTos(SR8->R8_DATAFIM) <= dToS(dDatFim)
	     		lRet := .F.
	     	case dTos(SR8->R8_DATAINI) >= dToS(dDatIni) .and. dTos(SR8->R8_DATAINI) <= dToS(dDatFim)
	     		lRet := .F.
	     	case dTos(SR8->R8_DATAFIM) >= dToS(dDatIni) .and. dTos(SR8->R8_DATAFIM) <= dToS(dDatFim)
	     		lRet := .F.
	     End case

	EndIf

	SR8->(DbSkip())

Enddo

Restarea(aArea)

Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fTCpoProg ºAutor  ³Emerson Rosa        º Data ³  25/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica a existencia dos campos de ferias programadas (SRF)º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Generico                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fTCpoProg()
Local cAlias    := ALIAS()
Local lExistCpo := .F.

dbSelectArea( "SRF" )
lExistCpo := ( FieldPos( "RF_DFEPRO1" ) # 0 .And. FieldPos( "RF_DFEPRO2" ) # 0 .And.;
               FieldPos( "RF_DFEPRO3" ) # 0  .And. FieldPos( "RF_DATINI2" ) # 0 .And.;
               FieldPos( "RF_DATINI3" ) # 0 .And.  FieldPos( "RF_DABPRO1" ) # 0 .And.;
               FieldPos( "RF_DABPRO2" ) # 0 .And.  FieldPos( "RF_DABPRO3" ) # 0 )
dbSelectArea( cAlias )

Return lExistCpo

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gpm060SetVar ºAutor  ³Leandro Drumond  º Data ³  18/04/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Seta a filial do processo selecionado.                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Generico                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Gpm060SetVar()

	cFilRCJ	  := xFilial("RCJ",RCJ->RCJ_FILIAL)

Return .T.



/*{Protheus.doc} fVerDiaSem
Cópia da Funcao do gpem030 "fVerDiaSem", que verifica o dia de semana de inicio das ferias
Para quando a data de início das férias ou da programação de férias for um feriado, um sábado ou um domingo.
@author Oswaldo Leite
@since 21/03/2017
@version P12.1.16
*/
Static Function fVerDiaSem()
	Local lFeriado	:= .F.
	Local lDiaDom	:= .F.
	Local lDiaSab	:= .F.

	If cPaisLoc == "BRA" .And. !lAuto
		//Verifica se o dia de inicio das férias sera em um feriado, sabado ou domingo.
		lFeriado	:= fFeriado( SRA->RA_FILIAL, M->RH_DATAINI ) //<-- o feriado depende da filial do funcionario avaliado na SRA
		lDiaDom 	:= If( Alltrim(DiaSemana( M->RH_DATAINI )) == "Domingo", .T., .F.)	//Domingo
		lDiaSab 	:= If( Alltrim(DiaSemana( M->RH_DATAINI )) == "Sabado"	, .T., .F.)	//Sabado

		If lFeriado
			FiltraLog(@aLogFile,  STR0086  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0083, 1) //###'- Funcionario : '###"As férias do funcionário irão iniciar em um feriado."
		EndIf

		If lDiaSab
			FiltraLog(@aLogFile,  STR0086  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0084, 1) //###'- Funcionario : '###"As férias do funcionário irão iniciar em um sábado."
		EndIf

		If lDiaDom
			FiltraLog(@aLogFile,  STR0086  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0085, 1) //###'- Funcionario : '###"As férias do funcionário irão iniciar em um domingo."
		EndIf
	EndIf
Return( .T. )

/*{Protheus.doc} fVerDias

- Para quando o valor informado do abono pecuniário for maior que 1/3 do total de dias de férias de direito.

@author Oswaldo Leite
@since 21/03/2017
@version P12.1.16
*/
Static function fVerDias( nDiasPend )
Local aArea		:= GetArea()
Local cTexto 	:= ''
Local nDFal		:= 0
Local nQtdFer	:= 0
Local nQtdDias	:= 0
Local lMaior14	:= .F.
Local lRet 		:= .T.

DEFAULT nDiasPend := 0

DEFAULT lRefTrab  := FindFunction("fRefTrab") .And. fRefTrab("F")

nDFal := M->RH_DFALTAS
//nDAntPer é calculado no fColet invocado antes do fVerDias
//aTabFer é calculado antes fColet invocado antes do fVerDias

TabFaltas(@nDFal)

If cPaisLoc =="BRA"
	If M->RH_DABONPE > ( (M->RH_DFERIAS + M->RH_DABONPE + nDFal + nDAntPer) / 3 )
		cTexto := 	STR0075 + "[ " + AllTrim(Str(nDAntPer,3))	  			+ " ] + " 	+;	//"Dias Antecipados"
			  		STR0076 + "[ " + AllTrim(Str(M->RH_DFERIAS,3))   	+ " ] + " 	+;	//"Dias Ferias"
			  		STR0077 + "[ " + AllTrim(Str(M->RH_DABONPE,3))   	+ " ] + " 	+;	//"Dias Abono"
			  		STR0078 + "[ " + AllTrim(Str(nDFal,3))           	+ " ] )"  	+;	//Faltas
			  		STR0079 + ""	 + AllTrim(Str((aTabFer[3]/3),3)) 		+ ""    	+;	//"que totalizam"
			  		STR0080 + "." 															//"Dias"

		FiltraLog(@aLogFile, STR0086  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + STR0081 + cTexto, 1) //"Aviso"#"De acordo com a CLT, os dias de abono devem corresponder a 1/3 do total de dias de férias: ( # OK

		//lRet := .F.  foi solicitado que nesta rotina as criticas sejam somente alertas ...mas que permita o sistema prosseguir e calcular as férias
	EndIf

	If lRefTrab
		If M->RH_DFERIAS + M->RH_DIALREM + M->RH_DIALRE1 < 5
			FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + " - " + STR0087, 2) // '- Funcionario : '###' Conforme Artigo 134 parágrafo 1º da CLT, as férias não devem ser concedidas com menos de 5 dias de gozo.'
			lRet := .F.
		ElseIf M->RH_DFERIAS < 14
			SRH->(DbSetOrder(1))
			If SRH->(DbSeek(SRA->RA_FILIAL + SRA->RA_MAT + DtoS(M->RH_DATABAS)))
				While SRH->(RH_FILIAL + RH_MAT + DtoS(RH_DATABAS) == SRA->RA_FILIAL + SRA->RA_MAT + DtoS(M->RH_DATABAS))
					nQtdFer++
					nQtdDias += SRH->RH_DFERIAS + SRH->RH_DABONPE
					If SRH->RH_DFERIAS >= 14
						lMaior14 := .T.
					EndIf
					SRH->(DbSkip())
				EndDo
			EndIf
			If !lMaior14 .And. nDiasPend == 0  //Quando for quitacao de saldo a quantidade pode ser menor
				If nQtdFer == 2
					FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + " - " + STR0088 , 2) // '- Funcionario : '###' Conforme Artigo 134 parágrafo 1º da CLT, ao menos uma férias por período aquisitivo deve ter no mínimo 14 dias. Já foram efetuados dois cálculos com menos de 14 dias para este periodo aquisitivo.'
					lRet := .F.
				ElseIf ( ( aTabFer[1] * aTabFer[4] - nDescFal ) - ( nQtdDias + M->RH_DFERIAS + M->RH_DABONPE ) ) < 14
					FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + " - " + STR0089 , 2) // '- Funcionario : '###' Conforme Artigo 134 parágrafo 1º da CLT, ao menos uma férias por período aquisitivo deve ter no mínimo 14 dias. A configuraçao atual das férias não permitirá que esta premissa seja cumprida.'
					lRet := .F.
				EndIf
			EndIf
			RestArea(aArea)
		ElseIf (SRF->RF_DIASDIR - SRF->RF_DFERANT - M->RH_DABONPE - (M->RH_DFERIAS + M->RH_DIALREM + M->RH_DIALRE1)) < 5 .And. (SRF->RF_DIASDIR - SRF->RF_DFERANT - M->RH_DABONPE - (M->RH_DFERIAS + M->RH_DIALREM + M->RH_DIALRE1)) > 0
			FiltraLog(@aLogFile, STR0012  + SRA->RA_MAT+"-"+ If(lOfusca, Replicate('*',30), SRA->RA_NOME) + " - " + STR0103 + STR0087 , 2) // '- Funcionario : '###' O saldo de férias que restará é inferior a 5 dias. Conforme Artigo 134 parágrafo 1º da CLT, as férias não devem ser concedidas com menos de 5 dias de gozo.'
			lRet := .F.
		EndIf
	EndIf
EndIf

Return ( lRet )

/*/{Protheus.doc} fProFerPDt()
Funcao para validação e atualização da data inicial da segunda parcela do cálculo das
férias programadas conforme configuração do parâmetro MV_PROFERP:
	1 - Inicia sempre na segunda-feira
	2 - Utiliza dias corridos
	3 - Utiliza dias corridos com abono
@author esther.viveiro
@since 23/03/2016
@version 11.80
@param 	dDtVld, date, data a ser validada.
@return dDtVld, date, data validada e atualizada.
@example
fProFerPDt(dDtVld)
/*/
Function fProFerPDt(dDtVld)
Local nDiaSem := DoW(dDtVld) // 1- Domingo ... 7 - Sabado

	Do Case
		Case nProFerP == 1
			Do Case
				Case nDiaSem == 2
					nDiaSem := 0 //jah eh segunda, nao preciso somar
				Case nDiaSem == 3
					nDiaSem := 6
				Case nDiaSem == 4
					nDiaSem := 5
				Case nDiaSem == 5
					nDiaSem := 4
				Case nDiaSem == 6
					nDiaSem := 3
				Case nDiaSem == 7
					nDiaSem := 2
			End Case
			dDtVld := dDtVld + nDiaSem

		/*Case nProFerP == 2
			no caso da opcao doi nao ha necessidade de validacao pois
			sempre sera o dia seguinte ao termino do primeiro calculo*/

	End Case
Return dDtVld

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³RstGpm060	  ³Autor ³Marco Nakazawa	   ³ Data ³15/01/2019³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Reinicializar as Static utilizadas no GPEA925				 ³
³          ³															 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                    	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico 													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function RstGpm060()

lIntegDef 	:= FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI")
lRefTrab	:= FindFunction("fRefTrab") .And. fRefTrab("F")
lIntTAF		:= (GetMv("MV_RHTAF",.T., .F.) == .T. .AND. Val(GetMv('MV_FASESOC',.T.,' ')) >= 1  )
lMiddleware := If( cPaisLoc == 'BRA' .AND. Findfunction("fVerMW"), fVerMW(), .F. )

Return( NIL )


/*/{Protheus.doc} FiltraLog
//Função que filtra pelo parametro do calculo se devem ser exibido no log os funcionários calculados, não calculados ou ambos
@author paulo.inzonha
@since 25/07/2019
@version 1.0
@return NIL
@param aLogCalc, array, Array que deve ser preenchido com a mensagem do log
@param cTexto, characters, Texto que deve ser apresentado no log
@param nTipoLog, numeric, Tipo da Mensagem 1 - Funcionário Calculado, 2 - Funcionário não calculado.
@type function
/*/
Static Function FiltraLog(aLogCalc, cTexto ,nTipoLog)
Local nPos := 0
If nListaFunc == 3 .OR. nListaFunc == nTipoLog
	If Len(Alltrim(cTexto)) >= 210
		nPos := At(" ",cTexto,200)
		If nPos > 0
			aAdd(aLogCalc, substr(cTexto,1,nPos))
			aAdd(aLogCalc, substr(cTexto,nPos))
		Else
			aAdd(aLogCalc, substr(cTexto,1,209))
			aAdd(aLogCalc, substr(cTexto,210))
		EndIf
	Else
		aAdd(aLogCalc, cTexto)
	EndIf
EndIf

Return( NIL )

/*/{Protheus.doc} fDelHist
/Delete historico de medias
@author flavio.scorrea
@since 23/10/2019
/*/
Static Function fDelHist()

Local cIdHistMed	:= ""
Local lHistMed		:= AliasInDic("RJK") .And. AliasInDic("SRP")

If lHistMed
	If fTemHMed(SRH->RH_DATAINI,,SRH->RH_PERIODO,SRH->RH_NPAGTO,SRH->RH_ROTEIR)
		cIdHistMed := RJK->RJK_ID
		fDelHMedId(cIdHistMed)
	Endif
EndIf

Return
