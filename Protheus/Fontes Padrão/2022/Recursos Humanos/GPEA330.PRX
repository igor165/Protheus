#INCLUDE "GPEA330.CH"
#INCLUDE "PROTHEUS.CH"

#DEFINE Confirma 1
#DEFINE Redigita 2
#DEFINE Abandona 3                                                                           

#DEFINE __Convert_Apostrofe__ ( Chr(39) + "+" + Chr(34) + Chr(39) + Chr(34) + "+" + Chr(39) )

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø±±
±±≥Funcao      ≥ GPEA330  ≥ Autor ≥ Mauro Sergio          ≥ Data ≥ 24/07/02      ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Descricao   ≥ Cadastramento de Biblioteca de Funcoes                          ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Uso         ≥ Generico                                                        ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥         ATUALIZACOES SOFRIDAS DESDE A CONSTRUÄAO INICIAL.             	     ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Programador ≥ Data     ≥ BOPS/FNC   ≥  Motivo da Alteracao                    ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Raquel Hager≥12/04/2013≥M12RH01     ≥RQ002 - Unificacao da Folha de Pagamento.≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function GPEA330           
// Definicao das variaveis de Filtro do Browse                
Local cFiltra
Private aIndexRC4		:= {}			// Variavel Para Filtro
Private bFiltraBrw 		:= {|| Nil}		// Variavel para Filtro

Private aRotina := MenuDef() // Ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina
	
	// Opcao para gerar o programa com as Tabelas Padroes. Uso Siga 
	If ( FunName() == "GPEA330M" )
		aAdd(aRotina, { STR0025 , "Gpea330Atu" , 0 , 6 } )	// Gerar Codigo 
	Else
		Private lImpFuncoes	:= .T.
	EndIf					
	
	// Verifica o Modo de Acesso do RC4 e RC5. Ambos Tem que ser Iguais       
	If xRetModo( "RC4" , "RC5" )
		
		cCadastro := OemToAnsi(STR0006)  //"Cadastro de Biblioteca de Funcoes"	
		// Carregar as funcoes Padroes do Sistema                       
		If lImpFuncoes
			MsAguarde( { || GpDelFun(),GpIniFuncao() } , OemToAnsi( STR0034 ) )	//"Carregando Cadastro Padrao de Biblioteca de Funcoes"
		EndIf
		
		// Inicializa o filtro utilizando a funcao FilBrowse                      
		cFiltra		:= CHKRH(FunName(),"RC4","1")
		bFiltraBrw 	:= {|| FilBrowse("RC4",@aIndexRC4,@cFiltra) }
		UniqueKey()	 // Limpar variaveis
		Eval(bFiltraBrw)
	
		// Endereca a funcao de BROWSE                                  
		dbSelectArea("RC4")
		mBrowse( 6, 1,22,75,"RC4",,,,,,)
	
		//-- Deleta o filtro utilizando a funcao FilBrowse                     	 
		EndFilBrw("RC4",aIndexRC4)
	
	EndIf 
	
Return

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥Funcao    ≥ Gpea330Atu ≥ Autor ≥ Mauro Sergio        ≥ Data ≥ 23/04/96 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Descricao ≥ Programa de Vis.,Inc.,Alt. e Del. de Afastamentos.         ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Sintaxe   ≥ Gpea330Atu(ExpC1,ExpN1,ExpN2)                              ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Parametros≥ ExpC1 = Alias do arquivo                                   ≥±±
±±≥          ≥ ExpN1 = Numero do registro                                 ≥±±
±±≥          ≥ ExpN2 = Numero da opcao selecionada                        ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Uso       ≥ GPEA330                                                    ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function Gpea330Atu(cAlias,nReg,nOpcx)
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}
Local nCnt
Local cFilRC4		:= xFilial("RC4")
Local nSavRec   	:= RecNo()
Local aVisual		:= {"RC5_SEQ"}
Local aVirtGd		:= {}
Local aRecnos		:= {}
Local aNotFields	:= {"RC5_FILIAL","RC5_NOMFUN","RC5_CONTEM"}
Local aSvCols		:= {}
Local aEnchoice		:= {}
Local aVirtChoice	:= {}
Local aVisuChoice	:= {}
Local aFields		:= {}
Local aNaoAltera	:= {}
Local aAltera		:= {}
Local A330alter 	:={}
Local nX
Local oDlg, oFont , oGroup

Private aColsBack	:= {}
Private aCols		:= {}
Private aColsRec 	:= {}  // Array que contem o Recno() dos registros da aCols
Private cDescFun	:= If (nOpcx == 3 , Space(TAMSX3("RC4_DESC") [1]) ,RC4->RC4_DESC)
Private cNomFun		:= If (nOpcx == 3 , Space(TAMSX3("RC4_NOMFUN")[1]),RC4->RC4_NOMFUN)
Private cMemo	 	:= MSMM(RC4->RC4_MDESC,,,,3)
Private nOpcao 		:= nOpcx                        
Private oGet
Private oMemo

	
	// Monta as Dimensoes dos Objetos         					   
	aAdvSize		:= MsAdvSize()
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
	aAdd( aObjCoords , { 015 , 080 , .T. , .F. } )
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
	cAlias := "RC5"
	
	While .T.
	
		If ( nOpcx == 6 )    // Entrada pela rotina gpea330M
			MsAguarde( { || Gpea330Ger() } )
			Exit
		EndIf
	
		If ( nOpcx == 3 )    // Inclusao
			RC4->( dbGoBottom() )
			RC4->( dbSkip() )
			nReg	 := 0.00
		EndIf
	
		// Monta os Dados para a Enchoice							   
		aEnChoice := RC4->( GdMontaHeader( NIL , @aVirtChoice , @aVisuChoice , NIL , { "RC4_FILIAL" },,.T. ) )
		
		// Cria as Variaveis de Memoria e Carrega os Dados Conforme o arquivo
		nXs := Len( aEnChoice )
		For nX := 1 To nXs
			aAdd( aFields , aEnchoice[ nX , 02 ] )
			If ( aScan( aVirtChoice , { |cVirt| cVirt ==  aEnchoice[ nX , 02 ] } ) == 0.00 )
				&( "M->"+aEnchoice[ nX , 02 ] ) := RC4->( &( aEnchoice[ nX , 02 ] ) )
			Else
				&( "M->"+aEnchoice[ nX , 02 ] ) := CriaVar( aEnchoice[ nX , 02 ] )
			EndIf
	
			// Neste Ponto Carrega os Inicializadores padroes para campos  visuais														   ≥
			If ( aScan( aVisuChoice , { |cVisu| cVisu ==  aEnchoice[ nX , 02 ] } ) > 0.00 )
				If Empty( &( "M->"+aEnchoice[ nX , 02 ] ) )
					&( "M->"+aEnchoice[ nX , 02 ] ) := CriaVar( aEnchoice[ nX , 02 ] )
				EndIf
			EndIf
		Next nX
	
	
		// Define os Campos Editaveis								  
		nXs := Len( aVisuChoice )
		For nX := 1 To nXs
			aAdd( aNaoAltera , aVisuChoice[ nX ] )
		Next nX
		If ( nOpcx == 4 )
			aAdd( aNaoAltera , "RC4_NOMFUN" )
		EndIf
		nXs := Len( aFields )
		For nX := 1 To nXs
			If ( aScan( aNaoAltera , { |cNaoA| cNaoA == aFields[ nX ] } ) == 0.00 )
				aAdd( aAltera , aFields[ nX ] )
			EndIf
		Next nX
	
		// Monta a entrada de dados do arquivo 
		Private aTELA[0][0],aGETS[0],aHeader[0],Continua:=.F.,nUsado:=0
	
		// Monta o cabecalho                                            
		aCols :=RC5->( GdMontaCols( @aHeader , @nUsado , @aVirtGd , @aVisual , NIL , aNotFields , @aRecnos , "RC5", cFilRC4+cNomFun ) )
		aSvCols := aClone( aCols )
		
		// Inicializacao da Sequencia quando Inclusao 
		If nOpcx == 3
			aCols[1][1] := "001"
		EndIf	
	
		aColsBack := Aclone(aCols)
	
		// Posiciona ponteiro do arquivo cabeca e inicializa variaveis  
		nOpcA := 0
	
		DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
		DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0007) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL	//"Biblioteca de Funcoes"
	
		oEnchoice	:= MsmGet():New( "RC4" , nReg , nOpcx , NIL , NIL , NIL , aFields , aObjSize[1] , aAltera , NIL , NIL , NIL , oDlg , NIL , .F. )
		
		oGet	:= MsNewGetDados():New(	aObjSize[2,1]	,;  		// nTop
										aObjSize[2,2]	,;			// nLelft
										aObjSize[2,3]	,;			// nBottom
										aObjSize[2,4]	,;			// nRright
										IF(nOpcx==2.Or.nOpcx==5,0, GD_INSERT + GD_UPDATE + GD_DELETE ),; // controle do que podera ser realizado na GetDado - nstyle
										"Gpea330LinOk"	,;			// funcao para validar a edicao da linha - ulinhaOK
										"Gpea330TudOk"	,;			// funcao para validar todos os registros da GetDados - uTudoOK
										"+RC5_SEQ"		,;			// cIniCPOS
										NIL				,;			// aAlter
										0				,;			// nfreeze
										100				,;			// nMax
										NIL				,;			// cFieldOK
										NIL				,;			// usuperdel
										NIL				,;			// bloco com funcao para validar registros deletados (Gp400DelOk())
										oDlg			,;         	// objeto de dialogo - oWnd
										aHeader			,;			// Vetor com Header - AparHeader
										aCols			 ;			// Vetor com Colunas - AparCols
									 )	
	
		If nOpcx == 4
			FRETFUNCAO(RC4->RC4_NOMFUN)
		EndIf
	
	    ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpca:=If(nOpcx=5,2,1),If(oGet:TudoOk(),(aCols:=aClone(oGet:aCols),oDlg:End()),nOpca:=0)},{||oDlg:End()}) CENTERED
	
	    // Se nao for Exclusao
	    If nOpcx # 5
	        If nOpcA == Redigita
	            LOOP
	        ElseIf nOpcA == Confirma .And. nOpcx # 2
				Gpea330Grava( nOpcx , nReg , aEnchoice , aVirtChoice , aHeader , aCols , aVirtGd , aRecnos , nUsado, aSvCols )
	        EndIf
	    // Se for Exclusao 
	    ElseIf nOpca = 2 .And. nOpcx = 5
	        Begin Transaction
	            Gpea330Dele()
	        End Transaction
	    EndIf
		Exit
	EndDo
	
	// Restaura a integridade da janela                             
	cAlias := "RC4"
	dbSelectArea("RC4")
	If nOpcx # 3
		Go nSavRec
	EndIf

Return

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥Funcao    ≥ Gpea330Grava ≥ Autor ≥ Mauro             ≥ Data ≥ 22/04/96 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Descricao ≥ Grava no arquivo de Afastamentos.                          ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Uso       ≥ GPEA300                                                    ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Static Function Gpea330Grava(	nOpcx		,;	// Opcao de Acordo com aRotina
							 	nReg		,;	// Numero do Registro do Arquivo Pai ( RC4 )
							 	aEnchoice	,;	// Campos do Arquivo Pai ( RC4 ) Mesma Estrutrua do aHeader
							 	aVirtChoice ,;	// Campos Virtuais do Arquivo Pai ( RC4 )
							 	aHeader		,;	// Campos do Arquivo Filho ( RC5 )
							 	aCols		,;	// Itens do Arquivo Filho ( RC5 )
							 	aVirtGd		,;	// Campos Virtuais do Arquivo Filho ( RC5 )
							 	aRecnos		,;	// Recnos do Arquivo Filho ( RC5 )
							 	nUsado		,;	// Campos em uso na GetDados ( RC5 )
							 	aSvCols		 ;  // Copia do aCols antes das alteracoes/inclusoes
							  )
Local cNewVersao 	:= StrZero(0, TamSx3( "RC4_VERSAO" )[1])
Local cFilRC4       := xFilial("RC4")
Local lAlter		:= .F. 
Local lAjSeq		:= .F.
Local nChoice		:= 0.00
Local nChoices		:= 0.00
Local nHeader		:= 0.00
Local nHeaders		:= 0.00
Local nCol			:= 0.00
Local nCols			:= 0.00
Local nRecno		:= 0.00
Local nRecnos		:= 0.00
Local nDeleted		:= 0.00 

DEFAULT nOpcx		:= 0.00
DEFAULT nReg		:= 0.00
DEFAULT aEnchoice	:= {}
DEFAULT aVirtChoice	:= {}
DEFAULT aHeader		:= {}
DEFAULT aCols		:= {}
DEFAULT aVirtGd		:= {}
DEFAULT aRecnos		:= {}
DEFAULT nUsado		:= 0.00
	
	nChoices			:= Len(		aEnchoice	)
	nHeaders			:= Len(		aHeader		)
	nCols				:= Len(		aCols		)
	nRecnos				:= Len(		aRecnos		)
	nDeleted			:= ( nUsado + 1 )
	
	// Se for Exclusao ( nOpc == 5 )								   
	If ( nOpcx == 5 )
		If !Empty( nReg )
			Begin Transaction
				RC4->( dbGoto( nReg ) )
				RecLock( "RC4" , .F. , .F. )
					For nRecno := 1 To nRecnos
						RC5->( dbGoto( aRecnos[ nRecno ] ) )
						RecLock( "RC5" , .F. , .F. )
						RC5->( dbDelete() )
						RC5->( MsUnLock() )
					Next nRecno
				MsMm(RC4->RC4_MDESC,NIL,NIL,NIL,2,NIL,NIL,"RC4","RC4_MDESC")
				RC4->( dbDelete() )
				RC4->( MsUnLock() )
				RC4->( EvalTrigger() )
				RC5->( EvalTrigger() )
			End Transaction
		EndIf
	// Se for Inclusao/Alteracao ( nOpcx == 3 .or. nOpcx == 4 )	   
	ElseIf ( nOpcx == 3 .or. nOpcx == 4 )
		Begin Transaction
		
			If !fCompArray( aCols, aSvCols )
				lAlter := .T.
			EndIf
		
			If !Empty( nReg )
				RC2->( dbGoto( nReg ) )
				RecLock( "RC4" , .F. , .F. )
				cNewVersao := RC4->( RC4_VERSAO )
			Else                                         
				RecLock( "RC4" , .T. , .F. )
			EndIf   
					
			RC4->RC4_FILIAL := cFilRC4 
			For nChoice := 1 To nChoices
				If ( aScan( aVirtChoice , { |cCpo| ( cCpo == aEnchoice[ nChoice , 02 ] ) } ) == 0.00 )
					RC4->( &( aEnchoice[ nChoice , 02 ] ) ) := &( "M->"+aEnchoice[ nChoice , 02 ] )
				ElseIf ( AllTrim(aEnchoice[ nChoice , 02 ]) == "RC4_MEMO" )
					MsMm(RC4->RC4_MDESC,NIL,NIL,&( "M->"+aEnchoice[ nChoice , 02 ] ),1,NIL,NIL,"RC4","RC4_MDESC")
					RecLock( "RC4" , .F. , .F. ) //Garante que o Registro continuara em Lock apos MsMm()
				EndIf
			Next nChoice
	
			If (FunName() == "GPEA330M") .And. lAlter
			 	cNewVersao := Soma1( cNewVersao )
			 	RC4->( RC4_VERSAO ) := cNewVersao
			EndIf   
			
			RC4->( MsUnLock() )
			
		   	// Ajuste Sequencia - RC5_SEQ
			For nCol:= 1 to nCols
				If ( aCols[nCol][Len(aCols[nCol])] )
					lAjSeq := .T.
				EndIf
			Next     
			
			If(lAjSeq, fAjustaSeq(@aCols), aCols)
			
			If ( nRecnos == nCols )
				For nRecno := 1 To nRecnos
					RC5->( dbGoto( aRecnos[ nRecno ] ) )
					RecLock( "RC5" , .F. , .F. )
					If !aCols[ nRecno , nDeleted ]
						For nHeader := 1 To nHeaders
							If ( aScan( aVirtGd , { |cCpo| ( cCpo == aHeader[ nHeader , 02 ] ) } ) == 0.00 )
								RC5->( &( aHeader[ nHeader , 02 ] ) ) := aCols[ nRecno , nHeader ]
							EndIf
						Next nHeader
					Else
						RC5->( dbDelete() )
					EndIf
					RC5->( MsUnlock() )
				Next nRecno
			ElseIf ( nRecnos < nCols )
				For nRecno := 1 To nRecnos
					RC5->( dbGoto( aRecnos[ nRecno ] ) )
					RecLock( "RC5" , .F. , .F. )
					If !aCols[ nRecno , nDeleted ]
						RC5->RC5_FILIAL	:= cFilRC4
						For nHeader := 1 To nHeaders
							If ( aScan( aVirtGd , { |cCpo| ( cCpo == aHeader[ nHeader , 02 ] ) } ) == 0.00 )
								RC5->( &( aHeader[ nHeader , 02 ] ) ) := aCols[ nRecno , nHeader ]
							EndIf
						Next nHeader
					Else
						RC5->( dbDelete() )
					EndIf
					RC5->( MsUnlock() )
				Next nRecno	
				For nCol := nRecno To nCols
					If !aCols[ nCol , nDeleted ]
						RecLock( "RC5" , .T. , .F. )
						RC5->RC5_FILIAL	:= cFilRC4
						RC5->RC5_NOMFUN	:= RC4->RC4_NOMFUN
						For nHeader := 1 To nHeaders
							If ( aScan( aVirtGd , { |cCpo| ( cCpo == aHeader[ nHeader , 02 ] ) } ) == 0.00 )
								RC5->( &( aHeader[ nHeader , 02 ] ) ) := aCols[ nCol , nHeader ]
							EndIf
						Next nHeader
						RC5->( MsUnlock() )
					EndIf
				Next nCol
			EndIf
			RC4->( EvalTrigger() )
			RC5->( EvalTrigger() )
		End Transaction
	EndIf

Return( Nil )

/*  
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥Funcao    ≥ Gpea330Dele ≥ Autor ≥ Mauro              ≥ Data ≥ 24/04/96 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Descricao ≥ Deleta os Registro de Afastamentos.                        ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Uso       ≥ GPEA330                                                    ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Static Function Gpea330Dele()
Local cAlias := "RC5"  
Local nX   
	
	lRet		 := .T. 
	     
	// Verifica se a funcao È usada na formula 
	If ! fUseVar(@lRet,cNomFun)
		Return
	EndIf	
	
	// Deleta os Itens (Parametros da Funcao) 
	dbSelectArea("RC5")
	For nX = 1 to Len(aCols)
	    If dbSeek(xFilial(cAlias)+cNomFun+aCols[nX][1])
		    RecLock(cAlias,.F.,.T.)
		    dbDelete( )
		    MsUnlock()
	    EndIf	
	Next nX
	
	// Deleta a funcao 
	dbSelectArea("RC4")
	If dbSeek(xFilial("RC4") + cNomFun)
		RecLock("RC4",.F.,.T.)
		dbDelete( )
		MsUnlock()	
	EndIf
	
Return( Nil )

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥Funcao    ≥ Gpea330LinOk ≥ Autor ≥ J. Ricardo        ≥ Data ≥ 06/08/94 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Descricao ≥ Critica linha digitada.                                    ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Uso       ≥ GPEA330                                                    ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function Gpea330LinOk() 
Local lLinOk := .T.
	
	Begin Sequence     
	
		// Valida Enchoice
		If !( lLinOk := !( Empty(  M->RC4_NOMFUN  ) ) )
			// "O campo "###" esta com o Conteudo Invalido."###"Este Campo e de Preenchimento Obrigatorio."
			MsgInfo( STR0010 + GetSx3Cache("RC4_NOMFUN", "X3_TITULO") + STR0012 + STR0013 , STR0014 )
			Break
		EndIf 
		
		If !( lLinOk := !( Empty( M->RC4_DESC ) ) )
			// "O campo "###" esta com o Conteudo Invalido."###"Este Campo e de Preenchimento Obrigatorio."
			MsgInfo( STR0010 + GetSx3Cache("RC4_DESC", "X3_TITULO")  + STR0012 + STR0013 , STR0014 )
			Break
		EndIf   
		
		// Valida getDados
		If ! aCols[ n , Len( aCols[ n ] ) ]
			If !( lLinOk := !( Empty( GdFieldGet( "RC5_PARAM" ) ) ) )
				// "O campo "###" da sequencia "###" esta com o Conteudo Invalido."###"Este Campo e de Preenchimento Obrigatorio."
				MsgInfo( STR0010 + aHeader[ GdFieldPos( "RC5_PARAM" ) , 01 ] + STR0011 + aCols[ n ,1 ] + STR0012 + STR0013 , STR0014 )
				Break
			EndIf
			If !( lLinOk := !( Empty( GdFieldGet( "RC5_TPARAM" ) ) ) )
				//"O campo "###" da sequencia "###" esta com o Conteudo Invalido."###"Este Campo e de Preenchimento Obrigatorio."
				MsgInfo( STR0010 + aHeader[ GdFieldPos( "RC5_TPARAM" ) , 01 ] + STR0011 + aCols[ n ,1 ] + STR0012 + STR0013 , STR0014 )
				Break
			EndIf	
			If !( lLinOk := !( Empty( GdFieldGet( "RC5_OBRIG" ) ) ) )
				//"O campo "###" da sequencia "###" esta com o Conteudo Invalido."###"Este Campo e de Preenchimento Obrigatorio."
				MsgInfo( STR0010 + aHeader[ GdFieldPos( "RC5_OBRIG" ) , 01 ] + STR0011 + aCols[ n ,1 ] + STR0012 + STR0013 , STR0014 )
				Break
			EndIf	
		EndIf
		
	End Sequence
	
Return( lLinOk )

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø±±
±±≥Funcao    ≥ Gpea330TudOk   ≥ Autor ≥ J. Ricardo      ≥ Data ≥ 15/02/95 ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Descricao ≥ Critica linha digitada.                                    ≥±±
±±√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥±±
±±≥Uso       ≥ GPEA330                                                    ≥±±
±±¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function Gpea330TudOk(o)     
Local lRetorna  := .T.
	
	Continua := .F.

Return( lRetorna )

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ fRC4Pict ≥ Autor ≥ Equipe RH          ≥ Data ≥  08/01/02   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Funcao para Retornar Inicializacao fixa no nome.           ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ GPEA300                                                    ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function fRC4Pict(nOpcx)   
Local cPict
	          
	If nOpcx == 3
		cPict := "@!R U_AAAAAAAA"
	EndIf	

Return ( cPict )

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ X3VALID  ≥ Autor ≥ Equipe RH          ≥ Data ≥  08/01/02   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Verifica se campo tem validacao padrao.                    ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ GPEA300                                                    ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function X3VALID(cCpo)   
Local cSavAlias := Alias()
Local cRet := ""
	
	DbSelectArea("SX3")
	DbSetOrder(2)
	If DbSeek(PadR(cCpo,Len(X3_CAMPO)),.F.)
		cRet := (X3_VALID)
	EndIf
	DbSetOrder(1)
	DbSelectArea(cSavAlias)

Return ( cRet )

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ fUseVar  ≥ Autor ≥ Equipe RH          ≥ Data ≥  23/05/02   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Verifica se variavel esta sendo usada e gera Log.          ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Parametros≥ lExclu    = variavel logica que determina exclusao.        ∫±± 
±±∫          ≥ cPesquisa = conteudo a ser pesquisado.                     ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ GPEA300                                                    ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Static Function fUseVar(lExclu,cPesquisa)  
Local aArea		:= GetArea()
Local aAreaRCA	:= RCA->( GetArea() )
Local aAreas	:= Array( 02 , 03 )
Local aLog		:= {}
Local aLogTitle := {}
Local cFilArea	:= ""
Local cConteudo	:= ""
Local nArea		:= 0.00
Local nAreas	:= 0.00	
Local nCampo	:= 0.00
Local nCampos	:= 0.00

DEFAULT lExclu	:= .F.
	
	aAreas[ 01 , 01 ] := "RC3"
	aAreas[ 01 , 02 ] := RC3->( GetArea() )
	aAreas[ 01 , 03 ] := {}
		aAdd( aAreas[ 01 , 03 ] , "RC3_RESULT" )
		aAdd( aAreas[ 01 , 03 ] , "RC3_FORM01" )
		aAdd( aAreas[ 01 , 03 ] , "RC3_FORM02" )
	
	aAreas[ 02 , 01 ] := "SRM"
	aAreas[ 02 , 02 ] := SRM->( GetArea() )
	aAreas[ 02 , 03 ] := {}
		aAdd( aAreas[ 02 , 03 ] , "RM_IF"      )
		aAdd( aAreas[ 02 , 03 ] , "RM_FORMULA" )
		aAdd( aAreas[ 02 , 03 ] , "RM_FALSE"   )
	
	If ( lExclu := MsgYesNo(	OemToAnsi(	oEmToAnsi(STR0015) + ;	// "O Sistema Agora Ira efetuar a Verificacao para ver se o item selecionado "
											CRLF	+ ;	
											oEmToAnsi(STR0016)	+ ;	// "esta sendo utilizado. A verificacao pode ser demorada !!"
											CRLF	+ ;
											CRLF	+ ;
											oEmToAnsi(STR0017)   ;	// "Confirma a exclusao do Item ?"
							 	          ),;
				 				OemToAnsi( STR0018 ) ;	// "AtenáÑo"
							);
		)
	
		nAreas := Len( aAreas )
		For nArea := 1 To nAreas
			cFilArea := xFilial( aAreas[ nArea , 01 ] )
			If ( aAreas[ nArea , 01 ] )->( dbSeek( cFilArea , .F. ) )
				nCampos := Len( aAreas[ nArea , 03 ] )
				For nCampo := 1 To nCampos    
				   ( aAreas[ nArea , 01 ] )->( dbSetOrder() )
				   ( aAreas[ nArea , 01 ] )->( dbGoTop() )
					While  ( ( aAreas[ nArea , 01 ] )->( !Eof() .and. FieldGet( FieldPos( PrefixoCpo( aAreas[ nArea , 01 ] ) + "_FILIAL" ) ) == cFilArea ) )
			   			cConteudo := ( aAreas[ nArea , 01 ] )->( Upper( AllTrim( FieldGet( FieldPos( aAreas[ nArea , 03 , nCampo ] ) ) ) ) )
						If ( Upper( AllTrim(cPesquisa)) $ cConteudo )
							If Empty( aLog )
								aAdd( aLog , oEmToAnsi(STR0035) + AllTrim(cPesquisa) + " " + oEmToAnsi(STR0036) ) //"A funcao "###" nao sera excluida pois esta sendo utilizada nos arquivos abaixo."
								aAdd( aLog , "" )
								aAdd( aLog , oEmToAnsi(STR0037) )
								aAdd( aLog , "" )
							EndIf
							aAdd( aLog , aAreas[ nArea , 01 ] + Space( 05 ) + ( aAreas[ nArea , 01 ] )->( StrZero( Recno() , 10 )  + Space( 01 ) + AllTrim( &( IndexKey() ) ) + "/" + cConteudo ) )
						EndIf
					    ( aAreas[ nArea , 01 ] )->( dbSkip() )
					End While
				Next nCampo				
			EndIf
			RestArea( aAreas[ nArea , 02 ] )
		Next nArea
	
		If !( lExclu := Empty( aLog ) )
			/*
			⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
			≥ Gera e Mostra o Log 										  ≥
			¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
					10        20       30        40        50        60        70        80        90       100       110...
			1234567890123456789023456789012345678901234567890123456789012345678901234567890123456789012345678901234567890...
			Arquivo Registro   Conteudo
			XXX     9999999999 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX*/
			aAdd( aLogTitle , oEmToAnsi(STR0038) )
			fMakeLog( { aLog } , aLogTitle , NIL , NIL , NIL , oEmToAnsi(STR0038) ) //"Log de Ocorrencias na Exclusao de Formulas"
		EndIf
	
	EndIF
	
	( RestArea( aAreaRCA ) , RestArea( aArea ) )

Return( lExclu  )


/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ fRetFuncao ≥ Autor ≥ Equipe RH        ≥ Data ≥  23/05/02   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Verifica se variavel esta sendo usada e gera Log.          ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ GPEA300                                                    ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function fRetFuncao(cFuncao) 
Local aParGetFun	:= {}
Local cTpParam		:= ""
Local lRet			:= .T.
Local nElemPar		:= 0
Local nPosPar		:= GdFieldPos( "RC5_PARAM" )
Local nPosSeq		:= GdFieldPos( "RC5_SEQ" )
Local nPosTpar		:= GdFieldPos( "RC5_TPARAM" )
Local nP
	
	
	If cFuncao == NIL
		cFuncao := &(READVAR())
	EndIf	
	
	cFuncao := Upper( AllTrim( cFuncao ) )
	
	// Verifica se Existe a Funcao no Repositorio
	If FindFunction(cFuncao)
	
		aCols := aClone(aColsBack)
	
		// Funcao que retorna um array com os parametros da funcao
		aParGetFun	:= GetFuncPrm(cFuncao)
	        
		nElemPar := Len(aParGetFun)	
		aCopyAcols := aClone(aCols[1])
		// Se inclusao adicionar os Parametros no Acols
		If nPosPar > 0 .And. (nOpcao == 3 .Or. nOpcao == 4)
			For nP := 1 To nElemPar
	
				// Copia o Conteudo do Elemento para adicionar 
				aCopyAcols := aClone(aCols[1])
	
				// Define o Tipo do Parametro.
				cTipoPar	:= Upper(SubStr(aParGetFun[nP],1,1))
				cTpParam	:= Rc5GetTParam( cTipoPar )
	
				If nOpcao == 3
					If nP == 1
						aCols[1][nPosPar]  := aParGetFun[nP]
						aCols[1][nPosSeq]  := StrZero(nP,3)
						aCols[1][nPosTpar] := cTpParam
					Else
						Aadd(aCols,aCopyACols)
						aCols[Len(aCols)][nPosPar]  := aParGetFun[nP]
						aCols[Len(aCols)][nPosSeq]  := StrZero(nP,3)
						aCols[Len(aCols)][nPosTpar] := cTpParam
					EndIf
				ElseIf nOpcao == 4	
					// Se alteracao verifica se o numero de parametros esta de acordo com o cadastrado 
					// se estiver faltando algun cria no acols.		
					If nP > Len(Acols)
						Aadd(aCols,aCopyACols)
						aCols[Len(aCols)][nPosPar] := aParGetFun[nP]
						aCols[Len(aCols)][nPosSeq] := StrZero(nP,3)
						aCols[Len(aCols)][nPosTpar] := cTpParam
					EndIf	
				EndIf	
			Next nP
		EndIf  
		oGet:aCols := aClone( aCols )
   		oGet:Refresh()
	Else    
		MsgAlert(OemToAnsi(STR0039), OemToAnsi(STR0018)) // "Funcao inexistente no RPO."
		lRet := .F.
	EndIf


Return( lRet )


/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ Rc5GetTParam ≥ Autor ≥ Equipe RH      ≥ Data ≥  23/05/02   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Retorna Codigo Conforme Tipo do Parametro.                 ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ GPEA300                                                    ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function Rc5GetTParam( cType ) 
Local cRc5CodParam
	
	If ( cType $ "C" )
		cRc5CodParam := "1"
	ElseIf ( cType == "N" )
		cRc5CodParam := "2"					
	ElseIf ( cType == "D" )
		cRc5CodParam := "3"					
	ElseIf ( cType == "L" )
		cRc5CodParam := "4"					
	ElseIf ( cType == "A" )
		cRc5CodParam := "5"					
	ElseIf ( cType == "B" )
		cRc5CodParam := "6"
	ElseIf ( cType == "O" )
		cRc5CodParam := "7"
	ElseIf ( cType == "U" )
		cRc5CodParam := "8"
	Else
		cRc5CodParam := " "
	EndIf

Return( cRc5CodParam )


/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ Rc5TParamBox ≥ Autor ≥ Equipe RH      ≥ Data ≥  12/07/04   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Retorna as Opcoes do X3_CBOX para o campo RC5_TPARAM.      ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ X3_CBOX para o campo RC5_TPARAM                            ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function Rc5TParamBox()
Local cRc5TParamBox 
Local lCarrega     
	
	If( MV_MODFOL == '1', lCarrega := .T. , lCarrega := .F. )
	If( cPaisLoc == "BRA", If( GetMv( "MV_GSPUBL",, "1" ) == '2', lCarrega := .T., lCarrega := .F. ), lCarrega ) 
	
	cRc5TParamBox := ( "1=" + STR0019	+ ";" )	// Caracter
	cRc5TParamBox += ( "2=" + STR0020	+ ";" )	// Numerico
	cRc5TParamBox += ( "3=" + STR0021	+ ";" )	// Data
	cRc5TParamBox += ( "4=" + STR0022	+ ";" )	// Logico
	cRc5TParamBox += ( "5=" + STR0023	+ ";" )	// Array
	cRc5TParamBox += ( "6=" + STR0024  	+ ";" )	// Bloco 
	If lCarrega
		cRc5TParamBox += ( "7=" + STR0032  	+ ";" )	// Objeto
		cRc5TParamBox += ( "8=" + STR0033  	+ ";" )	// Indefinido 
	EndIf
	
Return( cRc5TParamBox )

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ Rc4TipRetVld ≥ Autor ≥ Marinaldo J.   ≥ Data ≥  20/12/04   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Valid para o campo RC4_TIPRET.                             ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ X3_VALID para o campo RC4_TIPRET                           ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function Rc4TipRetVld()
Return( Pertence( "12345678" ) )


/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ Rc4TipRetInit ≥ Autor ≥ Marinaldo J.  ≥ Data ≥  20/12/04   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Inicializador Padrao para o campo RC4_TIPRET.              ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ X3_RELACAO para o campo RC4_TIPRET                         ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function Rc4TipRetInit()
Return(Space(GetSx3Cache("RC4_TIPRET","X3_TAMANHO")))

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ Rc4TipRetBox  ≥ Autor ≥ Marinaldo J.  ≥ Data ≥  20/12/04   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Retorna as Opcoes do X3_CBOX para o campo RC4_TIPRET.      ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ X3_CBOX para o campo RC4_TIPRET                            ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function Rc4TipRetBox()
Return( Rc5TParamBox() )

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ Rc4NomFunVld  ≥ Autor ≥ Marinaldo J.  ≥ Data ≥  20/12/04   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Valid para o campo RC4_NOMFUN.                             ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ X3_VALID para o campo RC4_NOMFUN                           ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function Rc4NomFunVld()
Local lRc4NomFunVld
	
	Begin Sequence
	
		If !( lRc4NomFunVld := NaoVazio() )
			Break
		EndIf
		
		If !( lRc4NomFunVld := ExistChav("RC4") )
			Break
		EndIf
		
		If !( lRc4NomFunVld := FreeForUse("RC4",M->RC4_NOMFUN) )
			Break
		EndIf
		
		If !( lRc4NomFunVld := fRetFuncao() )
			Break 	
		EndIf
	
	End Sequence	

Return( lRc4NomFunVld )


/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ Rc4DescVld    ≥ Autor ≥ Marinaldo J.  ≥ Data ≥  20/12/04   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Valid para o campo RC4_DESC.                               ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ X3_VALID para o campo RC4_DESC                             ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function Rc4DescVld()
Return( NaoVazio() .And. Texto() )


/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ Rc4MemoInit   ≥ Autor ≥ Marinaldo J.  ≥ Data ≥  20/12/04   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Inicializador Padrao para o campo RC4_MEMO.                ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ X3_RELACAO para o campo RC4_MEMO                           ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function Rc4MemoInit()

	If Type("INCLUI") <> "L"
		Private Inclui := .F.
	EndIf	
	
Return( If( Inclui , "" , MSMM( RC4->RC4_MDESC , 80 ) ) )

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ Gpea330Ger    ≥ Autor ≥ Mauricio T.   ≥ Data ≥  07/12/04   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Gerar o fonte com as Bibliotecas de Funcoes.               ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ GPEA330                                                    ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Static Function Gpea330Ger()   
Local aIniHdrRC4
Local aRC4Virtual
Local aIniHdrRC5
Local aRC5Virtual
Local aRC4Memo	 	:= {}
Local aRC5Memo	 	:= {}
Local aLinesFunc 	:= {}
Local aLinesProg 	:= {}
Local cMsg
Local cProg
Local cNameFunc
Local cValueCampo
Local cPath 		:= ""
Local cArquivo 		:= ""
Local cFunNum		:= "0000"
Local lSetCentury	:= __SetCentury("on")
Local nY
Local nArq
Local nItem
Local nUsado
Local nPosMemo
Local nLineMemo
Local nRecno := 0
	        
	If cPaisLoc == "RUS"
		cArquivo 	:= ( "GPFUNRUS" + ".PRX" )
	Else
		cArquivo 	:= ( "GPFUNALL" + ".PRX" )
	EndIf
	
	aIniHdrRC4	:= RC4->( GdMontaHeader( @nUsado , @aRC4Virtual , NIL , NIL , NIL , .T. ) )
	aIniHdrRC5	:= RC5->( GdMontaHeader( @nUsado , @aRC5Virtual , NIL , NIL , NIL , .T. ) )
	
	Begin Sequence
				  								       				   // Mostra drives    mostra hard disk retorna diretorio
		cPath := cGetFile( "" , OemToAnsi( STR0026 ) , 0 , NIL , .F. , GETF_LOCALFLOPPY + GETF_LOCALHARD + GETF_RETDIRECTORY ) //"Selecione o Diretorio"
		If Empty( cPath )
			Break
		EndIf
		cArquivo := ( cPath + cArquivo )
	
		If File(cArquivo)
			If !(MsgYesNo( OemToAnsi( STR0027 ),;	// "O Arquivo ja Existe !! Deseja Sobrescrer?"
	 		 			   OemToAnsi( STR0018 ) ;	//"AtenáÑo"
						))
				Break
			EndIf
		EndIf
	        
		nArq := MsFCreate( cArquivo , 0 )
		If (;
				( Ferror() # 0 );
				.and.;
				( nArq = -1  );
			)
			cMsg := STR0028 + Str( Ferror() , 3 ) //-- "Erro de Gravacao do Arquivo - Codigo DOS: "
			MsgInfo( OemToAnsi( cMsg ) )
			Break
		EndIf
	
		//-- Cabecalho da funcao                                          
		aAdd(aLinesProg, '#INCLUDE "PROTHEUS.CH"' + CRLF + CRLF)
		aAdd(aLinesProg, "/*/" + CRLF)
		aAdd(aLinesProg, "⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø" + CRLF)
		If cPaisLoc == "RUS"
			aAdd(aLinesProg, "≥FunáÖo    ≥GpFunRus      ≥Autor≥ Gerado pelo sistema ≥ Data ≥" + Dtoc( Msdate() ) + "≥" + CRLF)
		Else
			aAdd(aLinesProg, "≥FunáÖo    ≥GpFunAll      ≥Autor≥ Gerado pelo sistema ≥ Data ≥" + Dtoc( Msdate() ) + "≥" + CRLF)
		EndIf
		aAdd(aLinesProg, "√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒ¥" + CRLF)
		aAdd(aLinesProg, "≥DescriáÖo ≥Bibliotecas de Funcoes                                      ≥" + CRLF)
		aAdd(aLinesProg, "√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥" + CRLF)
		aAdd(aLinesProg, "≥Sintaxe   ≥                                                            ≥" + CRLF)
		aAdd(aLinesProg, "√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥" + CRLF)
		aAdd(aLinesProg, "≥Parametros≥<Vide Parametros Formais>                                   ≥" + CRLF)
		aAdd(aLinesProg, "√ƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥" + CRLF)
		aAdd(aLinesProg, "≥ Uso      ≥Generico                                                    ≥" + CRLF)
		aAdd(aLinesProg, "¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ/*/" + CRLF)
		If cPaisLoc == "RUS"
			aAdd(aLinesProg, "Function GpFunRus()" + CRLF)
		Else
			aAdd(aLinesProg, "Function GpFunAll()" + CRLF)
		EndIf
		aAdd(aLinesProg,  CRLF )
		aAdd(aLinesProg, "Local aRC4Header	:= {}"	+ CRLF)
		aAdd(aLinesProg, "Local aRC4Memo	:= {}"	+ CRLF)
		aAdd(aLinesProg, "Local aRC5Header	:= {}"	+ CRLF)
		aAdd(aLinesProg,  CRLF )
		aAdd(aLinesProg, "Local bExecFunc	:= { || NIL }" + CRLF + CRLF)
		aAdd(aLinesProg, 'Local cFuncao		:= ""' + CRLF)
		aAdd(aLinesProg, "Local cFuncNum  	:= '0000'" + CRLF)
		If cPaisLoc == "RUS"
			aAdd(aLinesProg, "Local cIdiom		:= FWRetIdiom()" + CRLF)
		EndIf
		aAdd(aLinesProg,  CRLF )
		aAdd(aLinesProg, "Local lRet		:= .T." + CRLF)
		aAdd(aLinesProg, "Local nItem		:= 0"	+ CRLF)
		aAdd(aLinesProg,  CRLF )

		If cPaisLoc == "RUS"
			aAdd(aLinesProg, "FWSetIdiom('ru')" + CRLF)
			aAdd(aLinesProg,  CRLF )
		EndIf

		aAdd(aLinesProg, "/*/" + CRLF)
		aAdd(aLinesProg, "⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø" + CRLF)
		aAdd(aLinesProg, "≥ Cabecalho de RC4 e RC5 gerado pela Funcoes padroes           ≥" + CRLF)
		aAdd(aLinesProg, "¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ/*/" + CRLF)
		
		For nItem := 1 To Len( aIniHdrRC4 )  
			If aScan(aRC4Virtual, aIniHdrRC4[nItem,2]) > 0
				Loop
			EndIf
			cProg := ""
			For nY := 1 To Len( aIniHdrRC4[ nItem ] )
				cProg += "'" + If(ValType(aIniHdrRC4[nItem,nY])=="N", AllTrim(Str(aIniHdrRC4[nItem,nY])),;
							   	If(ValType(aIniHdrRC4[nItem,nY])=="L", Transform(aIniHdrRC4[nItem, nY],"@!"),;
							   	   aIniHdrRC4[nItem, nY])) + "'" 
				If ( nY < Len( aIniHdrRC4[ nItem ] ) )
					cProg += ","
				EndIf
			Next nY
			If !Empty(cProg)
				aAdd(aLinesProg, "aAdd(aRC4Header, " + '{ ' + cProg + ' })' + CRLF)
			EndIf
		Next nItem
		aAdd(aLinesProg, CRLF)
	
		For nItem := 1 To Len( aIniHdrRC5 )
			If aScan(aRC5Virtual, aIniHdrRC5[nItem,2]) > 0
				Loop
			EndIf
			cProg := ""
			For nY := 1 To Len( aIniHdrRC5[ nItem ] )
				cProg += "'" + If(ValType(aIniHdrRC5[nItem,nY])=="N", AllTrim(Str(aIniHdrRC5[nItem,nY])),;
							   	If(ValType(aIniHdrRC5[nItem,nY])=="L", Transform(aIniHdrRC5[nItem, nY],"@!"),;
							   	   aIniHdrRC5[nItem, nY])) + "'"
				If ( nY < Len( aIniHdrRC5[ nItem ] ) )
					cProg += ","
				EndIf
			Next nY
			If !Empty(cProg)
				aAdd(aLinesProg, "aAdd(aRC5Header, " + '{ ' + cProg + ' })' + CRLF)
			EndIf
		Next nItem
		aAdd(aLinesProg, CRLF )
	
		aAdd(aLinesProg, "/*/" + CRLF)
		aAdd(aLinesProg, "⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø" + CRLF)
		aAdd(aLinesProg, "≥ Validar a Estrutura das Tabela RC4 e RC5 com a do Cliente     ≥" + CRLF)
		aAdd(aLinesProg, "¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ/*/" + CRLF)
		aAdd(aLinesProg, 'lRet := fNewOldSx3(aRC4Header, aRC5Header, "RC4", "RC5")' + CRLF )
	
		aAdd(aRC4Memo, {'RC4_MDESC','RC4_MEMO'})
		aRC5Memo := {}
	
		//-- Itens das Funcoes                                            
		RC4->( dbSetOrder( RetOrdem( "RC4" , "RC4_FILIAL+RC4_NOMFUN" ) ) )
		RC4->( dbGoTop() )
	
		While RC4->( !Eof() )
	
			//-- Adiciona os Itens das Funcoes - Tabela RC5                   
			dbSelectArea( "RC5" )
			RC5->( dbSetOrder( RetOrdem( "RC5", "RC5_FILIAL+RC5_NOMFUN+RC5_SEQ" ) ) )
	        RC5->( dbSeek( RC4->( RC4_FILIAL + RC4_NOMFUN ) ) )
			
			cFunNum 	:= Soma1( cFunNum )
			cNameFunc 	:= "FunAll" + cFunNum
	
			aAdd(aLinesFunc, "/*/" + CRLF)
			aAdd(aLinesFunc, "⁄ƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒø" + CRLF)
			aAdd(aLinesFunc, "≥FunáÖo    ≥"+cNameFunc + "    ≥Autor≥ Gerado pelo sistema ≥ Data ≥" + "          " + "≥" + CRLF)
			aAdd(aLinesFunc, "¿ƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ/*/" + CRLF)
			cNameFunc := "Function " + cNameFunc + "( aRc4Header , aRc5Header , aRc4Memo )"
	
			aAdd(aLinesFunc, cNameFunc + CRLF)
			aAdd(aLinesFunc, CRLF )
			aAdd(aLinesFunc, "Local aRc4Cols		:= {}" + CRLF)
			aAdd(aLinesFunc, "Local aRc5Cols		:= {}" + CRLF)
			aAdd(aLinesFunc, CRLF )
			aAdd(aLinesFunc, "Local cFilRC4		:= xFilial('RC4')" + CRLF)
			aAdd(aLinesFunc, "Local cCliVersao	:= ''" + CRLF)
			aAdd(aLinesFunc, CRLF )
			aAdd(aLinesFunc, "Local lFound		:= .F." + CRLF)
			aAdd(aLinesFunc, CRLF )
			aAdd(aLinesFunc, "Local nRc4NomFun	:=  GdFieldPos( 'RC4_NOMFUN' , aRC4Header )" + CRLF)
			aAdd(aLinesFunc, "Local nRc4Versao	:=  GdFieldPos( 'RC4_VERSAO' , aRC4Header )" + CRLF)
			aAdd(aLinesFunc, CRLF)
	
			aAdd(aLinesFunc, "/*/" + CRLF)
			aAdd(aLinesFunc, "⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø" + CRLF)
			aAdd(aLinesFunc, "≥ Vetor com o Cabecalho das funcoes dos diversos paises        ≥" + CRLF)
			aAdd(aLinesFunc, "¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ/*/" + CRLF)
	
	
			//-- Adiciona o cabecalho - RC4                                   
			cProg := "aAdd(aRc4Cols, { "
	
			For nItem := 1 To Len( aIniHdrRC4 )
				cValueCampo := ""
				// campo memo normal //
				If (;
						( aIniHdrRC4[nItem,8] == "M" );
						.and.;
						( aScan(aRC4Virtual, aIniHdrRC4[nItem,2]) == 0 );
					)
					nLineMemo := MlCount(aIniHdrRC4[nItem,2], 80)
	
					For nY := 1 To nLineMemo
						cValueCampo += AllTrim(MemoLine(aIniHdrRC4[nItem,2], 80, nY))
						If nY < nLineMemo
							cValueCampo += ' '
						EndIf
					Next nY
					
				// campo memo gravado em RC4 - Virtual //
				ElseIf (;
							( aIniHdrRC4[nItem,8] == "M" );
							.and.;
							( aScan(aRC4Virtual, aIniHdrRC4[nItem,2]) > 0 );
						)
					If ((nPosMemo := aScan(aRC4Memo, { |x|  Upper(x[2]) == aIniHdrRC4[nItem,2] })) > 0)
						cValueCampo += MSMM(RC4->(FieldGet(FieldPos(aRC4Memo[nPosMemo,1]))),80)
						cValueCampo := StrTran(cValueCampo, CRLF, "\13\10")
					EndIf				
				ElseIF ( aScan(aRC4Virtual, aIniHdrRC4[nItem,2]) > 0 )
					Loop
				ElseIf ( aIniHdrRC4[nItem,8] == "N" )
					cValueCampo += AllTrim(Str(RC4->(FieldGet(FieldPos(aIniHdrRC4[nItem,2])))))
				ElseIf aIniHdrRC4[nItem,8] == "D"
					cValueCampo += 'Ctod("' + DtoC(&(aIniHdrRC4[nItem,2])) + '")'
				ElseIf aIniHdrRC4[nItem,8] == "L"
					If &(aIniHdrRC4[nItem,2])
						cValueCampo += ".T."
					Else
						cValueCampo += ".F."
					EndIf
				Else
					cValueCampo += AllTrim(RC4->(FieldGet(FieldPos(aIniHdrRC4[nItem,2]))))
				EndIf
				cValueCampo := StrTran( cValueCampo , "'" , __Convert_Apostrofe__ )
	
				If (aIniHdrRC4[nItem,8] != "N") .and. (aIniHdrRC4[nItem,8] != "D") .and. (aIniHdrRC4[nItem,8] != "L")
					cValueCampo := "'" + cValueCampo
					cValueCampo += "'"
				EndIf
				cProg		+= cValueCampo
				If ( nItem < Len( aIniHdrRC4 ) )
					cProg += ","
				EndIf
			Next nItem
			cProg += "} )"
			aAdd(aLinesFunc, cProg + CRLF)
	
			aAdd(aLinesFunc, CRLF)
			aAdd(aLinesFunc, "/*/" + CRLF)
			aAdd(aLinesFunc, "⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø" + CRLF)
			aAdd(aLinesFunc, "≥ Vetor com os Itens das Funcoes dos diversos paises           ≥" + CRLF)
			aAdd(aLinesFunc, "¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ/*/" + CRLF)
	
	        While RC5->(;
	        				!Eof();
	        				.and.;
	        				( RC5_NOMFUN == RC4->RC4_NOMFUN );
	     			)
	
		        cProg := "aAdd(aRc5Cols, { "
				For nItem := 1 To Len( aIniHdrRC5 )
					cValueCampo := ""
					// campos memo normal //
					If (;
							( aIniHdrRC5[nItem,8] == "M" );
							.and.;
							( aScan(aRC5Virtual, aIniHdrRC5[nItem,2]) == 0 );
						)	
						nLineMemo := MlCount(aIniHdrRC5[nItem,2], 254)
						For nY := 1 To nLineMemo
							cValueCampo += AllTrim(MemoLine(aIniHdrRC5[nItem,2], 254, nY))
							If nY < nLineMemo
								cValueCampo += ' '
							EndIf
						Next nY
	
					// Campo memo Virtual - gravacao realizada em RC5 //
					ElseIf (;
								( aIniHdrRC5[nItem,8] == "M" );
								.and.;
								( aScan(aRC5Virtual, aIniHdrRC5[nItem,2]) > 0 );
							)
						If ( ( nPosMemo := aScan( aRC5Memo , { |x| Upper(x[2]) == aIniHdrRC5[nItem,2] } ) ) > 0 )
							cValueCampo += MsMm(RC5->(FieldGet(FieldPos(aRC5Memo[nPosMemo,1]))),80)
							cValueCampo := StrTran(cValueCampo, CRLF, "\13\10")
						EndIf
					ElseIF ( aScan(aRC5Virtual, aIniHdrRC5[nItem,2]) > 0 )
						Loop
					ElseIf ( aIniHdrRC5[nItem,8] == "N" )
						cValueCampo += AllTrim(Str(RC5->(FieldGet(FieldPos(aIniHdrRC5[nItem,2])))))
					ElseIf aIniHdrRC5[nItem,8] == "D"
						cValueCampo += 'Ctod("' + DtoC(RC5->(FieldGet(FieldPos(aIniHdrRC5[nItem,2])))) + '")'
					ElseIf aIniHdrRC5[nItem,8] == "L"
						If &(aIniHdrRC5[nItem,2])
							cValueCampo += ".T."
						Else
							cValueCampo += ".F."
						EndIf
					Else
						cValueCampo += AllTrim(RC5->(FieldGet(FieldPos(aIniHdrRC5[nItem,2]))))
					EndIf
	
					cValueCampo := StrTran( cValueCampo , "'" , __Convert_Apostrofe__ )
					If (aIniHdrRC5[nItem,8] != "N") .and. (aIniHdrRC5[nItem,8] != "D") .and. (aIniHdrRC5[nItem,8] != "L")
						cValueCampo := "'" + cValueCampo
						cValueCampo += "'"
					EndIf
					cProg		+= cValueCampo
					If ( nItem < Len( aIniHdrRC5 ) )
						cProg += ","
					EndIf
				Next nItem
				cProg += "} )"
				aAdd(aLinesFunc, cProg + CRLF)
				RC5->( dbSkip() )
		    Enddo
	
			aAdd(aLinesFunc, CRLF)
			aAdd(aLinesFunc, 'dbSelectArea("RC4")' + CRLF)
			aAdd(aLinesFunc, "RC4->( dbSetOrder( RetOrdem('RC4','RC4_FILIAL+RC4_NOMFUN') ) )" + CRLF)
			aAdd(aLinesFunc, "lFound := RC4->( dbSeek( cFilRC4 + aRc4Cols[ 1 , nRc4NomFun ] ) )" + CRLF)
			aAdd(aLinesFunc, "IF ( lFound )" + CRLF)
			aAdd(aLinesFunc, "	cCliVersao := RC4->RC4_VERSAO" + CRLF)
			aAdd(aLinesFunc, "Else" + CRLF)
			aAdd(aLinesFunc, "	cCliVersao := '__New_Version__' " + CRLF)
			aAdd(aLinesFunc, "EndIF" + CRLF)
			aAdd(aLinesFunc, "IF ( cCliVersao != aRc4Cols[ 1 , nRc4Versao ] )" + CRLF)
		   	aAdd(aLinesFunc, "	fGravaFunc( aRc4Cols , aRc5Cols , aRC4Header , aRC5Header , aRC4Memo )" + CRLF)
		   	aAdd(aLinesFunc, "EndIF" + CRLF)
		   	aAdd(aLinesFunc, CRLF )
			aAdd(aLinesFunc, "Return( NIL )")
			aAdd(aLinesFunc, CRLF )
			aAdd(aLinesFunc, CRLF )
	
			nRecno++
	
			RC4->( dbSkip() )
		Enddo
	    aAdd(aLinesProg, CRLF)
	
		aAdd(aLinesProg, "/*/" + CRLF)
		aAdd(aLinesProg, "⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø" + CRLF)
		aAdd(aLinesProg, "≥ Executar gravacao da Biblioteca de Funcoes                    ≥" + CRLF)
		aAdd(aLinesProg, "¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ/*/" + CRLF)
		aAdd(aLinesProg, "IF ( lRet )" + CRLF )
		aAdd(aLinesProg, CRLF)
	
	
		// Campos Memo - Passar como parametro - exige tratamento difer.
		// Se vier a ter campos em RC5, incluir o vetor na declaracao   
		// da variavel.                                                 
		aAdd(aLinesProg, "	/*/" + CRLF)
		aAdd(aLinesProg, "	⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø" + CRLF)
		aAdd(aLinesProg, "	≥ Campos Memo - possuem tratamento diferentes para gravacao    ≥" + CRLF)
		aAdd(aLinesProg, "	¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ/*/" + CRLF)
		aAdd(aLinesProg, "	aAdd(aRC4Memo, {" + "'RC4_MDESC'" + "," + "'RC4_MEMO'" + '})' + CRLF + CRLF )
	
		aAdd(aLinesProg, "	/*/" + CRLF)
		aAdd(aLinesProg, "	⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø" + CRLF)
		aAdd(aLinesProg, "	≥ Chamada da funcao de gravacao                                ≥" + CRLF)
		aAdd(aLinesProg, "	¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ/*/" + CRLF)
		aAdd(aLinesProg, "	For nItem := 1 To " + AllTrim( Str( nRecno ) ) + CRLF)
		aAdd(aLinesProg, '		cFuncNum	:= Soma1( cFuncNum )' + CRLF)
		aAdd(aLinesProg, '		cFuncao 	:= "FunAll" + cFuncNum' + CRLF)
		aAdd(aLinesProg, '		IF FindFunction( cFuncao )' + CRLF)
		aAdd(aLinesProg, '			cFuncao		:= "{ || FunAll" + cFuncNum + "( aRC4Header, aRC5Header, aRC4Memo )" + " }"' + CRLF)
		aAdd(aLinesProg, "			bExecFunc	:= &cFuncao" + CRLF)
		aAdd(aLinesProg, "			Eval(bExecFunc)" + CRLF)
		aAdd(aLinesProg, '		EndIF' + CRLF)
		aAdd(aLinesProg, "	Next nItem" + CRLF)
	
		aAdd(aLinesProg, CRLF)
		aAdd(aLinesProg, "EndIF" + CRLF )
		aAdd(aLinesProg, CRLF)
	
		If cPaisLoc == "RUS"
			aAdd(aLinesProg, "FWSetIdiom(cIdiom)" + CRLF)
			aAdd(aLinesProg,  CRLF )
		EndIf

	    aAdd(aLinesProg, "Return( NIL )" + CRLF)
	    aAdd(aLinesProg, CRLF)
	    aAdd(aLinesProg, CRLF)
	    
	
		//-- Transferir as linhas para dentro do programa                 
	    For nItem := 1 To Len( aLinesProg )
		    Fwrite( nArq , aLinesProg[ nItem ] )
		Next nItem
	
	    For nItem := 1 To Len( aLinesFunc )
		    Fwrite( nArq , aLinesFunc[ nItem ] )
		Next nItem
	
		fClose( nArq )
	
		MsgInfo( STR0029 + cArquivo + CRLF + STR0030 ) // "O Programa " #### "para Cadastro de Biblioteca de Funcoes Padroes foi Gerado com Sucesso"
	
	End Sequence
	
	If !( lSetCentury )
		__SetCentury("off")
	EndIf

Return( NIL ) 

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ fSequencia    ≥ Autor ≥ Raquel Hager  ≥ Data ≥  18/07/12   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Ordena campo RC5_SEQ da GetDados.                          ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ GPEA330                                                    ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Function fAjustaSeq(aColsRC5)  
Local aCols 	:= {} 
Local nX    	:= 0  
Local nSeq  	:= 0     
Local nTam  	:= TAMSX3("RC5_SEQ")[1]  
Local nPosSeq  	:= Ascan(aHeader,{ |x| x[2] = "RC5_SEQ"}) 
Local nLenX 	:= Len( aColsRC5 )
	
	If nPosSeq  > 0
		For nX := 1 To nLenX  
			If !( aColsRC5[ nX , Len(aColsRC5[nX]) ] ) // Se nao for linha deletada
			   nSeq++
			   aColsRC5[ nX ][nPosSeq] := PADL(cValtoChar(nSeq), nTam, "0")
			EndIf
		Next nX
	EndIf
	
Return( Nil )

/*
‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±…ÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕª±±
±±∫Funcao    ≥ MenuDef       ≥ Autor ≥ Luiz Gustavo  ≥ Data ≥  10/01/07   ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Descricao ≥ Isola opcoes de menu para que as opcoes da rotina possam   ∫±±
±±∫          ≥ ser lidas pelas bibliotecas Framework da Versao 9.12.      ∫±±
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Uso       ≥ GPEA330                                                    ∫±± 
±±ÃÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ±±
±±∫Retorno   ≥ aRotina                                                    ∫±±
±±»ÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ*/
Static Function MenuDef()
	/*
	⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
	≥ Define array contendo as Rotinas a executar do programa      ≥
	≥ ----------- Elementos contidos por dimensao ------------     ≥
	≥ 1. Nome a aparecer no cabecalho                              ≥
	≥ 2. Nome da Rotina associada                                  ≥
	≥ 3. Usado pela rotina                                         ≥
	≥ 4. Tipo de TransaáÑo a ser efetuada                          ≥
	≥    1 - Pesquisa e Posiciona em um Banco de Dados             ≥
	≥    2 - Simplesmente Mostra os Campos                         ≥
	≥    3 - Inclui registros no Bancos de Dados                   ≥
	≥    4 - Altera o registro corrente                            ≥
	≥    5 - Remove o registro corrente do Banco de Dados          ≥
	¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ*/
	PRIVATE aRotina	:=	{;
							{ STR0001	, "PesqBrw"		, 0 , 1 , ,.F.},; 	// "Pesquisar"
							{ STR0002	, "Gpea330Atu"	, 0 , 2},;			// "Visualizar"
							{ STR0003	, "Gpea330Atu"	, 0 , 3},;			// "Incluir"
							{ STR0004	, "Gpea330Atu"	, 0 , 4},;			// "Alterar"
							{ STR0005	, "Gpea330Atu"	, 0 , 5};			// "Excluir"
							}
Return aRotina  


/*/{Protheus.doc} GPDelFun
//Deleta funÁıes descontinuadas
@author flavio.scorrea
@since 18/04/2019
/*/
Static function GPDelFun()
Local cNomFun 	:= ""
Local aFunc		:= {"ADDDET","DEFAULTDET","DELDET","GETCABDET","GETDET","PUTCABDET","TOPGETCABDET"}
Local nI		:= 1

dbSelectArea("RC5")
RC5->(dbSetOrder(1))
dbSelectArea("RC4")
RC4->(dbSetOrder(1))

For nI := 1 To Len(aFunc)
	cNomFun := aFunc[nI]
	If !FindFunction(cNomFun)
		// Deleta os Itens (Parametros da Funcao) 
		If RC5->(dbSeek(xFilial("RC5") + cNomFun))
		    While !RC5->(Eof()) .And. Alltrim(xFilial("RC5") + cNomFun) == alltrim(RC5->(RC5_FILIAL+RC5_NOMFUN))
		    	RecLock("RC5",.F.,.T.)
			    	RC5->(dbDelete( ))
			   	RC5->(MsUnlock())
			   	RC5->(dbSkip())
			End	
		EndIf
		  
		// Deleta a funcao 
		If RC4->(dbSeek(xFilial("RC4") + cNomFun))
			RecLock("RC4",.F.,.T.)
			 RC4->(dbDelete())
			 RC4->(MsUnlock())
		EndIf
	EndIf
Next nI
Return