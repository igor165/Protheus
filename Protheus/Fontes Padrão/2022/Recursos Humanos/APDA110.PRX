#INCLUDE "PROTHEUS.CH"
#INCLUDE "APDA110.CH"

Static cRdwItemInit
/*
зддддддддддбддддддддддбдддддбдддддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁAPDA110   ЁAutorЁMarinaldo de Jesus       Ё Data Ё24/07/2003Ё
цддддддддддеддддддддддадддддадддддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Tipos de Objetivos                              Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                                    Ё
цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё            ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL           Ё
цддддддддддддбддддддддддбдддддддддддбддддддддддддддддддддддддддддддддддд╢
ЁProgramador ЁData      ЁBOPS       ЁMotivo da Alteracao                Ё
цддддддддддддеддддддддддедддддддддддеддддддддддддддддддддддддддддддддддд╢
ЁCecilia Car.Ё03/07/2014ЁTPZWBQ     ЁIncluido o fonte da 11 para a 12 e Ё
Ё            Ё          Ё           Ёefetuada a limpeza.                Ё  
юддддддддддддаддддддддддадддддддддддаддддддддддддддддддддддддддддддддддды*/
Function APDA110( cAlias , nReg , nOpc , lExecAuto )

Local aArea 	:= GetArea()
Local aAreaRdi	:= RDI->( GetArea() )
Local aAreaRdw	:= RDW->( GetArea() )
Local lExistOpc	:= ( ValType( nOpc ) == "N" )

Begin Sequence
     
	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSo Executa se o Modo de Acesso dos Arquivos do Modulo APD estiЁ
	Ёverem OK													   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	IF !( ApdRelationFile() )
		Break
	EndIF

	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁRedefine o Alias                                              Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	cAlias	:= "RDI"

	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define Array contendo as Rotinas a executar do programa      Ё
	Ё ----------- Elementos contidos por dimensao ------------     Ё
	Ё 1. Nome a aparecer no cabecalho                              Ё
	Ё 2. Nome da Rotina associada                                  Ё
	Ё 3. Usado pela rotina                                         Ё
	Ё 4. Tipo de Transa┤└o a ser efetuada                          Ё
	Ё    1 - Pesquisa e Posiciona em um Banco de Dados             Ё
	Ё    2 - Simplesmente Mostra os Campos                         Ё
	Ё    3 - Inclui registros no Bancos de Dados                   Ё
	Ё    4 - Altera o registro corrente                            Ё
	Ё    5 - Remove o registro corrente do Banco de Dados          Ё
	Ё    6 - Copiar                                                Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	Private aRotina := MenuDef() // ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina

	Private cCadastro   := OemToAnsi( STR0006 ) //"Cadastro de Tipos de Objetivos"

	IF ( lExistOpc )

		/*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁGarante o Posicinamento do Recno                              Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
		DEFAULT nReg	:= ( cAlias )->( Recno() )
		IF !Empty( nReg )
			( cAlias )->( MsGoto( nReg ) )
		EndIF

		DEFAULT lExecAuto := .F.
		IF ( lExecAuto )

			nPos := aScan( aRotina , { |x| x[4] == nOpc } )
			IF ( nPos == 0 )
				Break
			EndIF
			bBlock := &( "{ |a,b,c,d| " + aRotina[ nPos , 2 ] + "(a,b,c,d) }" )
			Eval( bBlock , cAlias , nReg , nPos )
		
		Else

			Apda110Mnt( cAlias , nReg , nOpc , .T. )
		
		EndIF	
		
	Else

		/*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Chama a Funcao de Montagem do Browse                                   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
		mBrowse( 6 , 1 , 22 , 75 , cAlias )
	
	EndIF
	
End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁColoca o Ponteiro do Mouse em Estado de Espera			   	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura os Dados de Entrada 											 Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
RestArea( aAreaRdi )  
RestArea( aAreaRdw )
RestArea( aArea )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura o Cursor do Mouse                				   	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( NIL )

/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁInApda110Exec ЁAutor ЁMarinaldo de Jesus   Ё Data Ё24/08/2004Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁExecutar Funcoes Dentro de APDA110                           Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁInApda110Exec( cExecIn , aFormParam )						 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁuRet                                                 	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function InApda110Exec( cExecIn , aFormParam )
         
Local uRet

DEFAULT cExecIn		:= ""
DEFAULT aFormParam	:= {}

IF !Empty( cExecIn )
	cExecIn	:= BldcExecInFun( cExecIn , aFormParam )
	uRet	:= &( cExecIn )
EndIF

Return( uRet )

/*
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda110VisЁ Autor ЁMarinaldo de Jesus     Ё Data Ё27/02/2004Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Tipos de Objetivos (Visualizar)					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁApda110()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function Apda110Vis( cAlias , nReg )
Return( APDA110( cAlias , nReg , 2 ) )

/*
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda110IncЁ Autor ЁMarinaldo de Jesus     Ё Data Ё27/02/2004Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Tipos de Objetivos (Incluir)					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁApda110()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function Apda110Inc( cAlias , nReg )
Return( APDA110( cAlias , nReg , 3 ) )

/*
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda110AltЁ Autor ЁMarinaldo de Jesus     Ё Data Ё27/02/2004Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Tipos de Objetivos (Alterar)					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁApda110()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function Apda110Alt( cAlias , nReg )
Return( APDA110( cAlias , nReg , 4 ) )

/*
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda110DelЁ Autor ЁMarinaldo de Jesus     Ё Data Ё27/02/2004Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Tipos de Objetivos (Excluir)					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<vide parametros formais>  		                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁApda110()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function Apda110Del( cAlias , nReg )
Return( APDA110( cAlias , nReg , 5 ) )

/*
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda110MntЁ Autor ЁMarinaldo de Jesus     Ё Data Ё22/07/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCadastro de Tipos de Objetivos (Manutencao)					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁApda110Mnt( cAlias , nReg , nOpc , lDlgPadSiga )			Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁcAlias 		= Alias do arquivo                              Ё
Ё          ЁnReg   		= Numero do registro                            Ё
Ё          ЁnOpc   		= Numero da opcao selecionada                   Ё
Ё          ЁlDlgPadSiga = Numero da opcao selecionada                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁApda110()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function Apda110Mnt( cAlias , nReg , nOpc , lDlgPadSiga )

Local aArea			:= GetArea(Alias())
Local aSvKeys		:= GetKeys()
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}
Local aRdiHeader	:= {}
Local aRdiCols		:= {}
Local aSvRdiCols	:= {}
Local aRdiFields	:= {}
Local aRdiAltera	:= {}
Local aRdiNaoAlt	:= {}
Local aRdiVirtEn	:= {}
Local aRdiNotFields	:= {}
Local aRdiRecnos	:= {}
Local aRdiKeys		:= {}
Local aRdiVisuEn	:= {}
Local aRdiMemoEn	:= {}
Local aRdyRecnos	:= {}
Local aRdyKeys		:= {}
Local aEnchoVld		:= {}
Local aRdwGdAltera  := {}
Local aRdwGdNaoAlt	:= {}
Local aRdwRecnos	:= {}
Local aRdwKeys		:= {}
Local aRdwNotFields	:= {}
Local aRdwVirtGd	:= {}
Local aRdwVisuGd	:= {}
Local aRdwHeader	:= {}
Local aRdwCols		:= {}
Local aSvRdwCols	:= {}
Local aRdwQuery		:= {}
Local aFreeLocks	:= {} 
Local bRdwGdDelOk	:= { |lDelOk| CursorWait() , lDelOk := RdwGdDelOk( "RDW" , NIL , nOpc , cCodRDI , nRdwItemOrd ) , CursorArrow() , lDelOk }
Local aLog			:= {}
Local aLogTitle		:= {}
Local aLogGer		:= {}
Local aLogGerTitle	:= {}
Local bSet15		:= { || NIL }
Local bSet24		:= { || NIL }
Local bGetRdi		:= { || NIL } 
Local bGetRdw		:= { || NIL }
Local bRdwSort		:= { || NIL } 
Local bRdwGdTudOk	:= { || NIL }
Local cMsgYesNo		:= ""
Local cTitLog		:= ""
Local lExcGeraLog	:= .F.
Local cFilRDI		:= ""
Local cCodRDI		:= ""
Local cRDIKeySeek	:= ""
Local lLocks		:= .T.	
Local lExecLock		:= ( ( nOpc <> 2 ) .and. ( nOpc <> 3 ) )
Local nLoop			:= 0
Local nLoops		:= 0
Local nOpcNewGd		:= IF( ( ( nOpc == 2 ) .or. ( nOpc == 5 ) ) , 0 , GD_INSERT + GD_UPDATE + GD_DELETE	)
Local nOpcAlt		:= 0
Local nRDIUsado		:= 0  
Local nRdWUsado		:= 0  
Local nRdwPosItem	:= 0
Local nRdwItemOrd	:= RetOrdem( "RDW" , "RDW_FILIAL+RDW_CODOBJ+RDW_ITEM" )
Local oDlg			:= NIL


Private aGets
Private aTela
Private oGdRdw
Private oEnRdi		

Private nGetSX8Len	:= GetSX8Len()

Begin Sequence

	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁCheca a Opcao Selecionada									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	aRotSetOpc( cAlias , @nReg , nOpc )

	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta os Dados para a Enchoice							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	aRdiNotFields	:= { "RDI_FILIAL" , "RDI_CODMEM" }
	bGetRdi			:= { |lLock,lExclu|	IF( lExecLock , ( lLock := .T. , lExclu	:= .T. ) , aRdiKeys := NIL ),;
										aRdiCols := RDI->(;
															GdBuildCols(	@aRdiHeader		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																			@nRdiUsado		,;	//02 -> Numero de Campos em Uso
																			@aRdiVirtEn		,;	//03 -> [@]Array com os Campos Virtuais
																			@aRdiVisuEn		,;	//04 -> [@]Array com os Campos Visuais
																			"RDI"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																			aRdiNotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																			@aRdiRecnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
																			"RDI"		   	,;	//08 -> Alias do Arquivo Pai
																			NIL				,;	//09 -> Chave para o Posicionamento no Alias Filho
																			NIL				,;	//10 -> Bloco para condicao de Loop While
																			NIL				,;	//11 -> Bloco para Skip no Loop While
																			NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																			NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																			NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																			NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																			NIL				,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																			NIL				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																			NIL				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																			NIL				,;	//19 -> Carregar Coluna Fantasma
																			NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																			NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
																			NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
																			NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																			@aRdiKeys		,;	//24 -> [@]Array que contera as chaves conforme recnos
																			@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																			@lExclu			 ;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																	    );
														  ),;
										IF( lExecLock , ( lLock .and. lExclu ) , .T. );
	  					} 
	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLock do Registro do RDI									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	IF !( lLocks := WhileNoLock( "RDI" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetRdi ) )
		Break
	EndIF
	CursorWait()
	aSvRdiCols		:= aClone( aRdiCols )
	cFilRDI			:= RDI->RDI_FILIAL
	cCodRDI			:= RDI->RDI_CODIGO
	cRDIKeySeek		:= ( cFilRDI + cCodRDI )
	
	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Cria as Variaveis de Memoria e Carrega os Dados Conforme o arЁ
	Ё quivo														   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	For nLoop := 1 To nRDIUsado
		aAdd( aRdiFields , aRdiHeader[ nLoop , 02 ] )
		SetMemVar( aRdiHeader[ nLoop , 02 ] , aRdiCols[ 01 , nLoop ] , .T. )
	Next nLoop
	
	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁDefine os Campos Editaveis na Enchoice Apenas na Inclusao( 3 )Ё
	Ёou Alteracao(4)											   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )

		/*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Define os Campos Editaveis								   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
		nLoops := Len( aRdiVisuEn )
		For nLoop := 1 To nLoops
			aAdd( aRdiNaoAlt , aRdiVisuEn[ nLoop ] )
		Next nLoop
		IF ( nOpc == 4 )
			/*
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Define os Campos Nao Alteraveis							   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
			aAdd( aRdiNaoAlt  , "RDI_CODIGO" )
			/*
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Define os Campos Que Serao Validados na Alteracao		   	   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
			nLoops := Len( aRdiFields )
			For nLoop := 1 To nLoops
				IF ( Empty( GetMemVar( aRdiHeader[ nLoop , 02 ] ) ) )
					aAdd( aEnchoVld , aRdiHeader[ nLoop , 02 ] )
				EndIF
			Next nLoop
		EndIF
		nLoops := Len( aRdiFields )
		For nLoop := 1 To nLoops
			IF ( aScan( aRdiNaoAlt , { |cNaoA| cNaoA == aRdiFields[ nLoop ] } ) == 0 )
				aAdd( aRdiAltera , aRdiFields[ nLoop ] )
			EndIF
		Next nLoop
	
	EndIF

	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁObtem os Recnos e Chaves dos Memos                            Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	aAdd( aRdiMemoEn , { "RDI_DESMEM" , "RDI_CODMEM" } )
	IF ( ( nOpc <> 2 ) .and. ( nOpc <> 3 ) )
		IF !( lLocks := ApdMemRec( "RDI" , aRdiRecnos , aRdiMemoEn , @aRdyRecnos , @aRdyKeys , .T. ) )
			Break
		EndIF
	EndIF

	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁVerifica se Pode Efetuar a Delecao dos Registros			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	IF ( nOpc == 5 )
		IF !( ApdChkDel( cAlias , nReg , nOpc , cCodRDI ) )
			Break
		EndIF
	EndIF
    
   	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta os Dados para a GetDados							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdd( aRdwNotFields , "RDW_FILIAL"  )
	aAdd( aRdwNotFields , "RDW_CODOBJ"	) 
	
	aRdwQuery		:= Array( 05 )
	aRdwQuery[01]	:= "RDW_FILIAL='"+cFilRDI+"'"
	aRdwQuery[02]	:= " AND "                   
	aRdwQuery[03]	:= "RDW_CODOBJ='"+cCodRDI+"'"
	aRdwQuery[04]	:= " AND "
	aRdwQuery[05]	:= "D_E_L_E_T_=' ' "
/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Quando For Inclusao Posiciona o RDW No Final do Arquivo	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( nOpc == 3  ) //Inclusao
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Garante que na Inclusao o Ponteiro do RDW estara em Eof()    Ё 
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		PutFileInEof( "RDW" )
	EndIF
	RDW->( dbSetOrder( nRdwItemOrd ) )
	bGetRdw	:= { |lLock,lExclu| IF( lExecLock , ( lLock := .T. , lExclu := .T. ) , aRdwKeys := NIL ),;
						 			aRdwCols := RDW->(;
														GdBuildCols(	@aRdwHeader		,;	//01 -> Array com os Campos do Cabecalho da GetDados
																		@nRdwUsado		,;	//02 -> Numero de Campos em Uso
																		@aRdwVirtGd		,;	//03 -> [@]Array com os Campos Virtuais
																		@aRdwVisuGd		,;	//04 -> [@]Array com os Campos Visuais
																		"RDW"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																		aRdwNotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																		@aRdwRecnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
																		"RDI"		   	,;	//08 -> Alias do Arquivo Pai
																		cRDIKeySeek		,;	//09 -> Chave para o Posicionamento no Alias Filho
																		NIL				,;	//10 -> Bloco para condicao de Loop While
																		NIL				,;	//11 -> Bloco para Skip no Loop While
																		NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																		NIL				,;	//13 -> Se Sera considerado o Inicializador Padrao
																		NIL				,;	//14 -> Opcional, Carregar Todos os Campos
																		NIL				,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
																		aRdwQuery		,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
																		.F.				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																		.F.				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																		Altera			,;	//19 -> Carregar Coluna Fantasma
																		NIL				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																		NIL				,;	//21 -> Verifica se Deve Checar se o campo eh usado
																		NIL				,;	//22 -> Verifica se Deve Checar o nivel do usuario
																		NIL				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																		@aRdwKeys		,;	//24 -> [@]Array que contera as chaves conforme recnos
																		@lLock			,;	//25 -> [@]Se devera efetuar o Lock dos Registros
																		@lExclu			,;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																		NIL         	,;	//27 -> Numero maximo de Locks a ser efetuado
																		Altera			 ;	//28 -> Utiliza Numeracao na GhostCol
																    );
														  ),;
									IF( lExecLock , ( lLock .and. lExclu ) , .T. );
	  		    }
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁLock do Registro do RDW									   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLocks := WhileNoLock( "RDW" , NIL , NIL , 1 , 1 , .T. , NIL , 5 , bGetRdw ) )
		Break
	EndIF
	CursorWait()

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁMonta Bloco para Sort antes da Gravacao					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( ( nRdwGhostCol := GdFieldPos( "GHOSTCOL" , aRdwHeader ) ) > 0 )
		bRdwSort := { || CursorWait() , aSort( aRdwCols , NIL , NIL , { |x,y| ( x[ nRdwGhostCol ] < y[ nRdwGhostCol ] ) } ) , CursorArrow() }
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Salva o Conteudo do RdwaCols para comparacao na saida		   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/

	aSvRdwCols	:= aClone( aRdwCols )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega os Campos Editaveis para a GetDados				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	For nLoop := 1	To nRdwUsado
		SetMemVar( aRdwHeader[ nLoop , 02 ] , GetValType( aRdwHeader[ nLoop , 08 ] , aRdwHeader[ nLoop , 04 ] ) , .T. )
		IF (;
				( aScan( aRdwVirtGd		, aRdwHeader[ nLoop , 02 ] ) == 0 ) .and.	;
		   		( aScan( aRdwVisuGd		, aRdwHeader[ nLoop , 02 ] ) == 0 ) .and.	;
		   		( aScan( aRdwNotFields	, aRdwHeader[ nLoop , 02 ] ) == 0 ) .and.	;
		   		( aScan( aRdwGdNaoAlt	, aRdwHeader[ nLoop , 02 ] ) == 0 )			;
		  	)
			aAdd( aRdwGdAltera , aRdwHeader[ nLoop , 02 ] )
		EndIF
	Next nLoop
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁRedefine aRdwCols na Inclusao ou se vazio para que a numeracaoЁ
	Ёautomatica do campo RDW_ITEM seja feita corretamente na  GetDaЁ
	Ёdos. 														   Ё
	ЁUma outra opcao seria utilizar a funcao   GdNumItem("RDW_ITEM)Ё
	Ёno Inicializador padrao do campo RDW_ITEM e nao efetuar o ajusЁ
	Ёte abaixo ( Reinicializar aRdwaCols )						   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( ( Inclui ) .or. Empty( aRdwRecnos ) )
		aRdwCols := {}
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁVerifica se Pode Efetuar a Delecao dos Registros			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( nOpc == 5 )
		cMsgYesNo	:= OemToAnsi(;
									STR0014 + ;	//"O sistema ir═ efetuar a verifica┤└o para ver se o registro selecionado"
									CRLF	+ ;	
									STR0015 + ;	//"para exclus└o est═ sendo utilizado. A verifica┤└o pode ser demorada." 
									CRLF	+ ;
									CRLF	+ ;
									STR0016	  ;	//"Confirma a exclus└o?"
								 )
		cTitLog		:= OemToAnsi( STR0017  )	//"Log de verifica┤└o de exclus└o"
		CursorArrow()
		IF MsgYesNo( OemToAnsi( cMsgYesNo ) , cCadastro + " - " + OemToAnsi( cTitLog ) )
			CursorWait()
			nRdwPosItem := GdFieldPos( "RDW_ITEM" , aRdwHeader )
			nLoops := Len( aRdwRecnos )
			//Verificando os Itens
			For nLoop := 1 To nLoops
				IF !( ApdChkDel( "RDW" , NIL , nOpc , ( cCodRDI + aRdwCols[ nLoop , nRdwPosItem ] ) , @lExcGeraLog , @aLog , @aLogTitle ) )
					aAdd( aLogGer , aClone( aLog ) )
					aAdd( aLogGerTitle , aLogTitle[1] )
				EndIF
			Next nLoop
			//Verificando o Cabecalho
			IF !( lExcGeraLog := !Empty( aLogGer ) )
				IF !( ApdChkDel( cAlias , nReg , nOpc , cCodRDI , @lExcGeraLog , @aLog , @aLogTitle , { "RDW" } ) )
					aAdd( aLogGer , aClone( aLog ) )
					aAdd( aLogGerTitle , aLogTitle[1] )
				EndIF
			EndIF
			IF ( lExcGeraLog := !Empty( aLogGer ) )
				cTitLog := STR0018	//"Log de Inconsistencia na Exclusao de "
				cTitLog += STR0006	//"Cadastro de Tipos de Objetivos"
				CursorArrow()
				IF ( lExcGeraLog := MsgNoYes( STR0019 , cCadastro + " " + cTitLog ) ) //"Deseja gerar Log?" 
					CursorWait()
						fMakeLog( aLogGer , aLogGerTitle , NIL , NIL , FunName() , cTitLog )
					CursorArrow()
				Else
					//"A chave a ser excluida est═ sendo utilizada."
					//"At┌ que as refer┬ncias a ela sejam eliminadas a mesma n└o pode ser excluida."
					MsgInfo( OemToAnsi( STR0020 + CRLF + STR0021 ) , cCadastro + " " + cTitLog )
				EndIF
				Break
			EndIF	
		Else
			Break
		EndIF
		CursorWait()
	EndIF


	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta as Dimensoes dos Objetos         					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	DEFAULT lDlgPadSiga	:= .F.
	aAdvSize		:= MsAdvSize( NIL , lDlgPadSiga )
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para o TudoOk da GetDados do RDW			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bRdwGdTudOk		:= { || oGdRdw:TudoOk() }						//Valida as Informacoes da GetDados RDW

	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para a Tecla <CTRL-O> 						   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	bSet15		:= { || IF(; 
								(;
									( nOpc == 3 );	//Inclusao
									.or.;
									( nOpc == 4 );	//Alteracao
								);					
								.and.;
								Apda110TEncOk( nOpc , oEnRdi );							//Valida Todos os Campos da Enchoice
								.and.;
								oGdRdw:TudoOk(),;										//Valida as Informacoes da GetDados
								(;
									nOpcAlt 	:= 1 ,;
									aRdwCols	:= oGdRdw:aCols,;						//Redireciona o Ponteiro do aRdwCols
									RestKeys( aSvKeys , .T. ),;
									oDlg:End();
							 	),;
							 	IF(; 
							 		(;
							 			( nOpc == 3 );	//Inclusao
							 			.or.;
							 			( nOpc == 4 );  //Alteracao
							 		) ,;				
							 			(;
							 				nOpcAlt := 0 ,;
							 				.F.;
							 			 ),;	
									(;
										nOpcAlt := IF( nOpc == 2 , 0 , 1 ) ,;		//Visualizacao ou Exclusao
										RestKeys( aSvKeys , .T. ),;
										oDlg:End();
							 		);
							 	  );
						   );
					 }
	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para a Teclas <CTRL-X>     	   			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	bSet24		:= { || ( nOpcAlt := 0 , RestKeys( aSvKeys , .T. ) , oDlg:End() ) }
	
	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta o Dialogo Principal para a Manutencao das Formulas	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0006 ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF GetWndDefault() PIXEL

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta as Dimensoes para o Objeto Enchoice 				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aObjCoords := {}
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
		aAdd( aObjCoords , { 000 , 100 , .T. , .T. } )
		aObjSize := MsObjSize( aInfoAdvSize , aObjCoords )
		
		/*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta o Objeto Enchoice para o RDI                      	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
		oEnRdi	:= MsmGet():New(	cAlias		,;
									nReg		,;
									nOpc		,;
									NIL			,;
									NIL			,;
									NIL			,;
									aRdiFields	,;
									aObjSize[1]	,;
									aRdiAltera	,;
									NIL			,;
									NIL			,;
									NIL			,;
									oDlg		,;
									NIL			,;
									.F.			,;
									NIL			,;
									.F.			 ;
								)
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta o Objeto GetDados para o RDW						   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		oGdRdW	:= MsNewGetDados():New(	aObjSize[2,1]											,;
										aObjSize[2,2]											,;
										aObjSize[2,3]											,;
										aObjSize[2,4]											,;
										nOpcNewGd												,;
										"RdwGdLinOk"											,;
										"RdwGdTudOk"											,;
										""														,;
										aRdwGdAltera											,;
										0														,;
										999999													,;
										NIL														,;
										NIL														,;
										bRdwGdDelOk												,;
										oDlg													,;
										aRdwHeader												,;
										aRdwCols									 			 ;
									 )									 
									 
		oGdRdw:oBrowse:cToolTip		:= OemToAnsi( STR0022 )	//"Itens dos Objetivos"								
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 ) CENTERED

	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Coloca o Ponteiro do Mouse em Estado de Espera			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	CursorWait()
	
	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁQuando Confirmada a Opcao e Nao for Visualizacao Grava ou   ExЁ
	Ёclui as Informacoes do RDI e RD2							   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	IF( nOpcAlt == 1 )
		/*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Apenas se nao For Visualizacao              				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
 		IF ( nOpc != 2 )                         

			/*
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Gravando/Incluido ou Excluindo Informacoes do SRY/RD2        Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
				MsAguarde(;
							{ ||;
									Eval( bRdwSort  ) ,;	//Sorteia o aRdwCols para Comparacao na Gravacao
									Apda110Grava(;
											nOpc		,;	//Opcao de Acordo com aRotina
							 				nReg		,;	//Numero do Registro do RDI)
							 				aRdiHeader	,;	//Campos do Arquivo RDI
							 				aRdiCols	,;	//Conteudo Atual do RDI
							 				aSvRdiCols	,;	//Conteudo Anterior de RDI
							 				aRdiVirtEn	,;	//Campos Virtuais do Arquivo RDI
							 				aRdiMemoEn	,;	//Campos Memo para a MsMm
							 				aRdwHeader	,;	//Campos do Arquivo de Sub-Itens ( RDW )
							 				aRdwCols	,;	//Sub-Itens Atuis do Arquivo de Sub-Itens ( RDW )
							 				aSvRdwCols	,;	//Sub-Itens Anteriores do Arquivo de Sub-Itens ( RDW )
							 				aRdwVirtGd	,;	//Campos Virtuais do Arquivo de Sub-Itens ( RDW )
							 				aRdwRecnos	;	//Recnos do Arquivo de Sub-Itens ( RDW )
			 					 				 );
			 			};
			 		)                                 
			 	
		EndIF
	Else
		/*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё RollBack da Numeracao Automatica            				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
		While ( GetSX8Len() > nGetSX8Len )
			RollBackSX8()
		End While
	EndIF

End Sequence

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Coloca o Ponteiro do Mouse em Estado de Espera			   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
CursorWait()

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁLibera os Locks             								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
aAdd( aFreeLocks , { "RDI" , aRdiRecnos , aRdiKeys } )
aAdd( aFreeLocks , { "RDW" , aRdwRecnos	, aRdwKeys } )
aAdd( aFreeLocks , { "RDY" , aRdyRecnos , aRdyKeys } )
ApdFreeLocks( aFreeLocks )

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura os Dados de Entrada								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
RestArea( aArea )

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura as Teclas de Atalho								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
RestKeys( aSvKeys , .T. )

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura o Estado do Cursor do Mouse						   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
CursorArrow()

Return( nOpcAlt )

/*
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda110TEncOkЁAutorЁMarinaldo de Jesus    Ё Data Ё24/07/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁTudoOk para a Enchoice                                      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁApda110TEncOk( nOpc , oEnRdi , aValid , aNotValid )			Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA110()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Static Function Apda110TEncOk( nOpc , oEnRdi , aValid , aNotValid )

Local lTudoOk := .T.
                
IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
	lTudoOk := EnchoTudOk( oEnRdi , aValid , aNotValid )
EndIF

Return( lTudoOk )

/*
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁApda110Grava ЁAutorЁMarinaldo de Jesus    Ё Data Ё24/07/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё                                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁApda110()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Static Function Apda110Grava(	nOpc		,;	//Opcao de Acordo com aRotina
							 	nReg		,;	//Numero do Registro do RDI)
							 	aRdiHeader	,;	//Campos do Arquivo RDI
							 	aRdiCols	,;	//Conteudo Atual do RDI
							 	aSvRdiCols	,;	//Conteudo Anterior de RDI
							 	aRdiVirtEn	,;	//Campos Virtuais do Arquivo RDI
							 	aRdiMemoEn	,;	//Campos Memo para a MsMm  
							 	aRdwHeader	,;	//Campos do Arquivo Filho ( RDW )
							 	aRdwCols	,;	//Itens Atual do Arquivo Filho ( RDW )
							 	aSvRdwCols	,;	//Itens Anterior do Arquivo Filho ( RDW )
							 	aRdwVirtGd	,;	//Campos Virtuais do Arquivo Filho ( RDW )
							 	aRdwRecnos	 ;	//Recnos do Arquivo Filho ( RDW )
							 )

/*
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Local aMestre	:= GdPutIStrMestre( 01 )
Local aItens	:= {}
Local cOpcao	:= IF( ( nOpc == 5 ) , "DELETE" , IF( ( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) , "PUT" , NIL ) )
Local lAllModif	:= .F.
Local lRdiModif	:= .F.
Local lRdwModif	:= .F.
Local lRdwDelet	:= .F.

/*
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Local aRdwColDel
Local aRdwRecDel
Local nLoop
Local nLoops
Local nItens

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
CursorWait()
	IF ( cOpcao <> "DELETE" )
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Verifica se Houveram Modificacoes no RDV					   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lRdwModif := !ArrayCompare( aRdwCols , aSvRdwCols ) )
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Deleto todos os Itens que nao Estao OK					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			GdSuperDel( aRdwHeader , @aRdwCols , NIL , .T. , GdGetBlock( "RDW" , aRdwHeader , .F. ) ) 
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Separa os Itens que foram Deletados     					   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			lRdwDelet := GdSplitDel( aRdwHeader , @aRdwCols , @aRdwRecnos , @aRdwColDel , @aRdwRecDel  )
		EndIF
	Else
		lRdwModif := .T.
		lRdiModif := .T.
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega os Itens Apenas se Houveram Alteracoes ou na ExclusaoЁ
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lRdwModif )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Carrega as Informacoes deletadas RDW                   	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lRdwDelet )

			aAdd( aItens , GdPutIStrItens() )
			nItens := Len( aItens )
		
			aItens[ nItens , 01 ] := "RDW"
			aItens[ nItens , 02 ] := NIL
			aItens[ nItens , 03 ] := aClone( aRdwHeader )
			aItens[ nItens , 04 ] := aClone( aRdwColDel )
			aItens[ nItens , 05 ] := aClone( aRdwVirtGd )
			aItens[ nItens , 06 ] := aClone( aRdwRecDel )

		EndIF

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Carrega as Informacoes do RDW                   			   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		aAdd( aItens , GdPutIStrItens() )
		nItens := Len( aItens )
		aItens[ nItens , 01 ] := "RDW"
		aItens[ nItens , 02 ] := {;
									{ "FILIAL" , xFilial( "RDW" , xFilial( "RDI" ) ) },;
									{ "CODOBJ" , GetMemVar( "RDI_CODIGO" ) };
							 	 }
		aItens[ nItens , 03 ] := aClone( aRdwHeader )
		aItens[ nItens , 04 ] := aClone( aRdwCols   )
		aItens[ nItens , 05 ] := aClone( aRdwVirtGd )
		aItens[ nItens , 06 ] := aClone( aRdwRecnos )
		aItens[ nItens , 07 ] := {}

	EndIF

	IF !( lRdiModif )   
	    /*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Atualiza aRdiCols para Verificar se Houveram Alteracoes	   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		nLoops := Len( aRdiHeader )
		For nLoop := 1 To nLoops
			aRdiCols[ 01 , nLoop ] := GetMemVar( aRdiHeader[ nLoop , 02 ] )
		Next nLoop
		lRdiModif := !( ArrayCompare( aRdiCols , aSvRdiCols ) )
	EndIF	
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Seta a Gravacao ou Exclusao Apenas se Houveram Alteracoes  ouЁ
	Ё se foi Selecionada a Exclusao								   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
 	lAllModif := ( ( lRdwModif ) .or. ( lRdiModif ) )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Se Houveram Alteracoes, ou Exclusao efetua a Gravacao        Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lAllModif )
		/*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Seta a Gravacao ou Exclusao Apenas se Houveram Alteracoes  ouЁ
		Ё se foi Selecionada a Exclusao								   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
		aMestre[ 01 , 01 ]	:= "RDI"
		aMestre[ 01 , 02 ]	:= nReg
		aMestre[ 01 , 03 ]	:= lRdiModif
		aMestre[ 01 , 04 ]	:= aClone( aRdiHeader )
		aMestre[ 01 , 05 ]	:= aClone( aRdiVirtEn )
		aMestre[ 01 , 06 ]	:= aClone( aRdiMemoEn )
		aMestre[ 01 , 07 ]	:= aClone( aItens )
		aMestre[ 01 , 08 ]	:= "RDY" 
	
		/*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Grava as Informacoes                        				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
		GdPutInfoData( aMestre , cOpcao , .F. , .F. )
		
		/*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Confirmando a Numeracao Automatica          				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
		While ( GetSX8Len() > nGetSX8Len )
			ConfirmSX8()
		End While
	Endif
/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
CursorArrow()

Return( NIL )

/*
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiCodigoVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё06/10/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Validar o Conteudo do Campo RDI_CODIGO          Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RDI_CODIGO                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function RdiCodigoVld()

Local cRDICodigo	:= GetMemVar( "RDI_CODIGO" )
Local lRdiCodTipOk	:= .T.

Begin Sequence

	IF !( lRdiCodTipOk := RdiGetCodigo( @cRDICodigo , .F. , .T. ) )
    	Break
    EndIF

End Sequence

Return( lRdiCodTipOk )

/*
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiGetCodigo ЁAutorЁMarinaldo de Jesus    Ё Data Ё27/02/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁObtem Numeracao Valida para o RDI_CODIGO                    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁObter Numeracao valida para o RDI_CODIGO                 	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function RdiGetCodigo( cRDICodigo , lExistChav , lShowHelp )
Return(;
			GetNrExclOk(	@cRDICodigo 			,;
							"RDI"					,;
							"RDI_CODIGO"			,;
							"RDI_FILIAL+RDI_CODIGO" ,;
							NIL						,;
							lExistChav				,;
							lShowHelp	 			 ;
						);
		)

/*
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiCodigoInitЁAutorЁMarinaldo de Jesus    Ё Data Ё06/10/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador padrao para o Campo RDI_CODIGO          		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO para o campo RDI_CODIGO                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function RdiCodigoInit()
Local cRDICodigo
RdiGetCodigo( @cRDICodigo , .F. , .F. )
Return( cRDICodigo )

/*
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiDescVld   ЁAutorЁMarinaldo de Jesus    Ё Data Ё12/03/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid para o campo RDI_DESC  				          		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RDI_DESC                           	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function RdiDescVld()

Local lRdiDescVld := .T.

Begin Sequence

	IF !( lRdiDescVld := NaoVazio() )
		Break
	EndIF
	
	IF !( lRdiDescVld := Texto() )
		Break
	EndIF

End Sequence

Return( lRdiDescVld )

/*
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiEscRelVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё13/03/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid para o campo RDI_ESCREL   			          		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RDI_ESCREL                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function RdiEscRelVld()

Local lRdiEscRelVld	:= .T.

Begin Sequence

	IF ( ( Type( "Inclui" ) == "L" ) .and. !( Inclui ) )
		Break
	EndIF

	IF !( lRdiEscRelVld := NaoVazio() )
		Break
	EndIF
	
	IF !( lRdiEscRelVld := ExistCpo("RBK") )
		Break
	EndIF

End Sequence

Return( lRdiEscRelVld )

/*
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiEscRelWhen	 ЁAutorЁMarinaldo de JesusЁ Data Ё23/03/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁWhen para o campo RDI_ESCREL             					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_WHEN do campo RDI_ESCREL 								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function RdiEscRelWhen()

Return( RdiEscChkAlt())

/*
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiEscAtgVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё13/03/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid para o campo RDI_ESCATG   			          		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RDI_ESCATG                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function RdiEscAtgVld()

Local lRdiEscAtgVld	:= .T.

Begin Sequence

	IF ( ( Type( "Inclui" ) == "L" ) .and. !( Inclui ) )
		Break
	EndIF

	IF !( lRdiEscAtgVld := NaoVazio() )
		Break
	EndIF
	
	IF !( lRdiEscAtgVld := ExistCpo("RBK") )
		Break
	EndIF

End Sequence

Return( lRdiEscAtgVld )

/*
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiEscAtgWhen	 ЁAutorЁMarinaldo de JesusЁ Data Ё23/03/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁWhen para o campo RDI_ESCATG             					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_WHEN do campo RDI_ESCATG 								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function RdiEscAtgWhen()
Return( RdiEscChkAlt())

/*
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiEscConVld ЁAutorЁMarinaldo de Jesus    Ё Data Ё13/03/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid para o campo RDI_ESCCON   			          		Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RDI_ESCCON                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function RdiEscConVld()

Local lRdiEscConVld := .T.

Begin Sequence
    
	IF ( ( Type( "Inclui" ) == "L" ) .and. !( Inclui ) )
		Break
	EndIF
	
	IF !( lRdiEscConVld := NaoVazio() )
		Break
	EndIF
	
	IF !( lRdiEscConVld := ExistCpo("RBK") )
		Break
	EndIF

End Sequence

Return( lRdiEscConVld )


/*
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiEscConWhen	 ЁAutorЁMarinaldo de JesusЁ Data Ё23/03/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁWhen para o campo RDI_ESCCON             					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_WHEN do campo RDI_ESCCON 								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function RdiEscConWhen()
Return( RdiEscChkAlt())

/*
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiDesMemInit	 ЁAutorЁMarinaldo de JesusЁ Data Ё22/03/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RDI_DESMEM					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RDI_DESMEM 								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function RdiDesMemInit()

Local cRdiDesMemInit := ""

IF !( Inclui := IF( ( Type( "Inclui" ) == "L" ) , Inclui , .F. ) )

	cRdiDesMemInit := ApdMsMm( RDI->RDI_CODMEM )

EndIF

Return( cRdiDesMemInit )

/*
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiEscChkAlt	 ЁAutorЁMarinaldo de JesusЁ Data Ё23/03/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁVerificar se as Escalas do RDI podem ser alteradas			Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁRdiEscConWhen(), RdiEscAtgWhen() e RdiEscRelWhen()			Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Static Function RdiEscChkAlt()

Local lRdiEscChkAlt := .T.

Begin Sequence

	IF ( ( Type( "Inclui" ) == "L" ) .and. ( Inclui ) )
		Break
	EndIF
	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Caso algum participante tenha inserido pelo menos um item do Ё
	Ёplano as escalas nao poderЦo ser alterada                     Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
    RDJ->(dbSetOrder(2))
    lRdiEscChkAlt := !RDJ->(dbSeek(xFilial("RDJ")+GetMemVar("RDI_CODIGO")))
    
End Sequence

Return( lRdiEscChkAlt )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiTipoVld     	 ЁAutorЁMarinaldo de JesusЁ Data Ё26/04/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do Campo RDI_TIPO										Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁValid do Campo RDI_TIPO										Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdiTipoVld()

Local lRdiTipoOk := .T.

Begin Sequence

	IF !( lRdiTipoOk := Pertence( RdiTipoBox( .T. ) ) )
		Break
	EndIF

End Sequence

Return( lRdiTipoOk )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiTipoBox 	 ЁAutorЁMarinaldo de Jesus    Ё Data Ё26/04/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Retornar as Opcoes do Campo RDI_TIPO         	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_CBOX para o campo RDI_TIPO                         		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdiTipoBox( lValid , lRetDesc , cOpcDesc )

Local cOpcBox

DEFAULT lValid		:= .F.
DEFAULT lRetDesc	:= .F.

IF !( lValid )

	IF !( lRetDesc )

		cOpcBox := ( "1=" + STR0012 + ";" )	//"Plano"
		cOpcBox += ( "2=" + STR0013       )	//"Meta"

	Else

		Do Case
			Case ( cOpcDesc == "1" ) ; ( cOpcBox := STR0012 )	//"Plano"
			Case ( cOpcDesc == "2" ) ; ( cOpcBox := STR0013 )	//"Meta"
		End Case

	EndIF

Else

	cOpcBox := "12"

EndIF
	
Return( cOpcBox )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiTipoInit	 ЁAutorЁMarinaldo de Jesus    Ё Data Ё26/04/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Retornar as Opcoes do Campo RDI_TIPO         	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO para o campo RDI_TIPO                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdiTipoInit()
Return( SubStr( RdiTipoBox( .T. ) , 1 , 1 ) )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwCodObjInitЁAutorЁMauricio MR           Ё Data Ё14/12/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializador padrao para o campo RDW_CODOBJ   			    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RDW_CODOBJ                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwCodObjInit()

Local cRdwCodObjInit

cRdwCodObjInit := GetMemVar( "RDI_CODIGO" )


Return( cRdwCodObjInit )


/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwItemVld 	 ЁAutorЁMauricio MR           Ё Data Ё15/12/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Validar o Conteudo do Campo RDW_ITEM 	        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RDW_ITEM                      	   	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwItemVld()

Local lRdwItemOk := .T.

Begin Sequence

	IF !( lRdwItemOk := NaoVazio() )
		Break
	EndIF

	IF !( lRdwItemOk := ExistChav( "RDW" , ( GetMemVar( "RDW_CODOBJ" ) + GetMemVar( "RDW_ITEM" ) ) ) )
    	Break
    EndIF

End Sequence

Return( lRdwItemOk )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwItemInit		ЁAutorЁMauricio MR        Ё Data Ё15/12/2004Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao de Inicializacao da Numeracao Automatica do RDW_ITEM Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RDW_ITEM		                        Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdWItemInit()

Local cLastRdwItem
Local cNumRdwItem
Local cKeyAux
Local cRdiCodigo

IF IsMemVar( "RDI_CODIGO" )
	cRdiCodigo := GetMemVar( "RDI_CODIGO" )
Else
	cRdiCodigo := RDI->RDI_CODIGO
EndIF
cKeyAux		:= ( xFilial( "RDI" , xFilial( "RDW" ) ) + cRdiCodigo )

IF !IsInCallStack( "APDA110ALT" , "__EXECUTE/RUNAPP/SIGAAPD/" )
	cLastRdwItem	:= Replicate( "0" , GetSx3Cache( "RDW_ITEM" , "X3_TAMANHO" ) )
Else
	cLastRdwItem	:= RdwItemGet()
EndIF

IF IsInGetDados( { "RDW_ITEM" } )
	cNumRdwItem := GdNumItem( "RDW_ITEM" , cLastRdwItem )
EndIF    

DEFAULT cNumRdwItem := cLastRdwItem
cNumRdwItem		:= GetNewCodigo("RDW","RDW_ITEM",GetSx2Unico("RDW"),{ || cNumRdwItem := Soma1( cNumRdwItem ) },.F.,.F.,cKeyAux,NIL,cNumRdwItem)

RdwItemSet( cNumRdwItem )

Return( cNumRdwItem )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwItemSet 	 ЁAutorЁMauricio MR           Ё Data Ё15/12/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁSetar a Variavel Static cRdwItemInit						Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                            	   	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwItemSet( cNewItem )

IF Empty( cNewItem )
	cNewItem := Replicate( "0" , GetSx3Cache( "RDW_ITEM" , "X3_TAMANHO" ) )
EndIF	

cRdwItemInit := cNewItem

Return( NIL)

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwItemGet 	 ЁAutorЁMauricio MR           Ё Data Ё15/12/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁObter o Conteudo da Variavel Static cRdwItemInit			Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                            	   	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwItemGet()

IF Empty( cRdwItemInit )
	RdwItemSet( NIL )
EndIF

Return( cRdwItemInit )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwItemClear ЁAutorЁMauricio MR           Ё Data Ё15/12/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁLimpar a Variavel Static cRdwItemInit						Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                            	   	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwItemClear()

cRdwItemInit := NIL

Return( NIL )



/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdWDescVld 	 ЁAutorЁMauricio MR           Ё Data Ё15/12/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Validar o Conteudo do Campo RDW_DESC 	        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID para o campo RDW_DESC                      	   	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwDescVld()

Local lRdwDescOk := .T.

Begin Sequence

	IF !( lRdwDescOk := NaoVazio() )
		Break
	EndIF

	IF !( lRdwDescOk := Texto() )
    	Break
    EndIF

End Sequence

Return( lRdwDescOk )


/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwTipoBox 	 ЁAutorЁMauricio MR           Ё Data Ё14/12/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Retornar as Opcoes do Campo RDW_TIPO         	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_CBOX para o campo RDW_TIPO                         		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwTipoBox( lValid , lRetDesc , cOpcDesc )

Local cOpcBox

DEFAULT lValid		:= .F.
DEFAULT lRetDesc	:= .F.

IF !( lValid )

	IF !( lRetDesc )

		cOpcBox := ( "1=" + STR0023 + ";" )	//"Padrao"
		cOpcBox += ( "2=" + STR0024 + ";" )	//"Capacitacao"
		cOpcBox += ( "3=" + STR0025 + ";" )	//"Dissertativa"
		cOpcBox += ( "4=" + STR0026 + ";" )	//"CapacitaГЦo"
		cOpcBox += ( "5=" + STR0027       )	//"Capacitacao interna"

	Else

		Do Case
			Case ( cOpcDesc == "1" ) ; ( cOpcBox := STR0023 )//"Padrao"
			Case ( cOpcDesc == "2" ) ; ( cOpcBox := STR0024 )//"Capacitacao"
			Case ( cOpcDesc == "3" ) ; ( cOpcBox := STR0025 )//"Dissertativa"
			Case ( cOpcDesc == "4" ) ; ( cOpcBox := STR0026 )//"CertificaГЦo
			Case ( cOpcDesc == "5" ) ; ( cOpcBox := STR0027 )//"Capacitacao interna"
		End Case

	EndIF

Else

	cOpcBox := "12345"

EndIF
	
Return( cOpcBox )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwTipoInit	 ЁAutorЁMauricio MR           Ё Data Ё14/12/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Retornar as Opcoes do Campo RDW_TIPO         	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO para o campo RDW_TIPO                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwTipoInit()
Return( SubStr( RdwTipoBox( .T. ) , 1 , 1 ) ) 

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwTipoWhen	 ЁAutorЁMauricio MR           Ё Data Ё16/12/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁWhen para o campo RDW_TIPO         							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_WHEN para o campo RDW_TIPO    	                      	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwTipoWhen()
Local lRet		:= .T.
Local nOrdem 	:= RetOrdem( "RDJ" , "RDJ_FILIAL+RDJ_CODOBJ+RDJ_ITEM" , .F. )

lRet:= Empty(PosAlias( "RDJ" , RDI->RDI_CODIGO + GetMemVar("RDW_TIPO") , xFilial( "RDJ" , xFilial( "RDW" ) ) , "RDJ_CODOBJ" , nOrdem , .F.))

Return( lRet ) 

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwTipoVld	     ЁAutorЁMauricio MR       Ё Data Ё14/12/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do Campo RDW_TIPO     								Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁValid do Campo RDW_TIPO 									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwTipoVld()                                   
Local lRet:= .T.  

If ( (lRet:= (GetMemVar( "RDW_TIPO" )$RdwTipoBox( .T. ) ) ) )
  	RdwTpCursWhen()
Endif
Return( lRet )


/*
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwTpCursVld	 ЁAutorЁMauricio MR       Ё Data Ё14/12/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid para o Campo RDW_TPCURS           					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_VALID do campo RDW_TPCURS								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwTpCursVld()
     
Local cRdwTpCurs	:= &( ReadVar() )     
Local cRdwTipo		:= GetMemVar( "RDW_TIPO" )
Local lRdwTpCursOK	:= .T.
Local nTamTipo		:= GetSx3Cache( "RDW_TIPO" , "X3_TAMANHO" ) 

cRdwTipo := GdFieldGet( "RDW_TIPO"  )

Begin Sequence
    
	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Se Tipo de Item for 'Capacitacao' exige que seja informado   Ё
	Ё algum Tipo de Curso (por exemplo,'Outros' para genericos).   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/ 
	IF (cRdwTipo == PADL('2',nTamTipo,'0') ) .Or. (cRdwTipo == PADL('5',nTamTipo,'0') ) // Capacitacao / Capacitacao interna
		IF!( lRdwTpCursOK := NaoVazio() )
			Break
		EndIF
    Endif
    
	IF !( lRdwTpCursOK := ExistCpo( "SQX" ) )
		Break
	EndIF

	RdwDescTPInit( cRdwTpCurs , .T. )

End Sequence	

Return( lRdwTpCursOK )                             

/*
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwTpCursWhen	 ЁAutorЁMauricio MR       Ё Data Ё15/12/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁWhen para o campo RDW_TPCURS    	       					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_WHEN do campo RDW_TPCURS	  								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwTpCursWhen()

Local cRdwTipo			:= GdFieldGet( "RDW_TIPO" )
Local cRdwDescInit      := ' '
Local cRdwTpcurs		:= ' '
Local lRdwTpCursWhen	:= .T.
Local nTamTipo			:= GetSx3Cache( "RDW_TIPO" , "X3_TAMANHO" ) 

If !( lRdwTpCursWhen	:= (cRdwTipo == PADL('2',nTamTipo,'0') ) .Or. (cRdwTipo == PADL('5',nTamTipo,'0') ) )
	cRdwDescInit	:= Padr( cRdwDescInit , GetSx3Cache( "RDW_DESCTP" , "X3_TAMANHO" ) )
	GdFieldPut( "RDW_DESCTP" , cRdwDescInit )
	SetMemVar( "RDW_DESCTP" , cRdwDescInit )
	cRdwTpcurs		:= Padr( cRdwTpcurs , GetSx3Cache( "RDW_TPCURS" , "X3_TAMANHO" ) )
	GdFieldPut( "RDW_TPCURS" , cRdwTpcurs )
	SetMemVar( "RDW_TPCURS" , cRdwTpcurs )
Endif
Return( lRdwTpCursWhen )



/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwGdLinOk	ЁAutorЁMauricio MR            Ё Data Ё14/12/2004Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁLinha Ok do RDW                                             Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRdwGdLinOk( oBrowse )									    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA110()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwGdLinOk( oBrowse )

Local aCposKey		:= {}
Local lLinOk		:= .T.


/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

	Begin Sequence
	
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Se a Linha da GetDados Nao Estiver Deletada				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF !( GdDeleted() )
		
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica Itens Duplicados na GetDados						   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aCposKey := GetArrUniqe( "RDW" )
			IF !( lLinOk := GdCheckKey( aCposKey , 4 ) )
				Break
			EndIF

			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica Se o Campos Estao Devidamente Preenchidos		   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aCposKey := GdObrigat( aHeader )
			IF !( lLinOk := GdNoEmpty( aCposKey ) )
		    	Break
			EndIF
			
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica Se os Campos Limite de Metas e Limite de Pesos И	   Ё 
			Ё menor que o valor definido escala de relevБncia, atingimento Ё
			Ё e conhecimento.		   									   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			If !( lLinOk := VldLimPes() )
				Break
			EndIf
			
		EndIF
		
	End Sequence
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSe Houver Alguma Inconsistencia na GetDados, Seta-lhe o Foco  Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lLinOk )
		IF ( ValType( "oBrowse" ) == "O" )
			oBrowse:SetFocus()
		EndIF	
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁGaranto que o Ponteiro Estara no Final do Arquivo para que naoЁ
	ЁCarregue Conteudo Invalido nos Inicializadores Padroes        Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	PutFileInEof( "RDW" )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()
	
Return( lLinOk )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwGdTudOk	ЁAutorЁMauricio MR            Ё Data Ё14/12/2004Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁTudo Ok do RDW                                              Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRdwGdTudOk( oBrowse )									    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA110()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwGdTudOk( oBrowse )

Local lTudoOk := .T.

Local nLoop

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Altera o Estado do Cursor  								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorWait()

	Begin Sequence
	
	    /*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Percorre Todas as Linhas para verificar se Esta Tudo OK      Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		For nLoop := 1 To Len( aCols )
			n := nLoop
			IF !( lTudoOk := RdwGdLinOk( oBrowse ) )
				IF ( ValType( "oBrowse" ) == "O" )
					oBrowse:Refresh()
				EndIF	
				Break
			EndIF
		Next nLoop
	
	End Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura o Estado do Cursor								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
CursorArrow()

Return( lTudoOk )  

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdwGdDelOk   ЁAutorЁMauricio MR           Ё Data Ё14/12/2004Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidar a Delecao na GetDados RDW                           Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁRdwGdDelOk( parametros )									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ 															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁAPDA110()	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function RdwGdDelOk( cAlias , nRecno , nOpc , cCodigo , nRdWItemOrd )
Local lDelOk 		:= .T.
Local lStatusDel	:= .F.

Static lFirstDelOk
Static lLstDelOk

DEFAULT lFirstDelOk	:= .T.
DEFAULT lLstDelOk	:= .T.

Begin Sequence

	//Quando for Visualizacao ou Exclusao Abandona
	IF (;
			( nOpc == 2 ) .or. ;	//Visualizacao
			( nOpc == 5 );			//Exclusao
		)
		Break
	EndIF

	//Apenas se for a primeira vez
	IF !( lFirstDelOk )
		lFirstDelOk	:= .T.
		lDelOk 		:= lLstDelOk
		lLstDelOk	:= .T.
		Break
	EndIF

	lStatusDel	:= !( GdDeleted() ) //Inverte o Estado
	
	IF ( lStatusDel )	//Deletar
    	
    	IF !( nOpc == 3  )	//Quando nao for Inclusao
    		RDW->( dbSetOrder( nRdWItemOrd ) )
    		IF !( lDelOk := ApdChkDel( cAlias , nRecno , nOpc , ( cCodigo + GdFieldGet( "RDW_ITEM" ) ) , .F. , NIL , NIL , NIL , NIL , .T. ) )
				CursorArrow()
				//"A chave a ser excluida est═ sendo utilizada."
				//"At┌ que as refer┬ncias a ela sejam eliminadas a mesma n└o pode ser excluida."
				MsgInfo( OemToAnsi( STR0020 + CRLF + STR0021 ) , cCadastro )
    			lLstDelOk := lDelOk
    			//Ja Passou pela funcao
				lFirstDelOk := .F.
    			Break
    		EndIF
    	EndIF
	EndIF

	//Ja Passou pela funcao
	lFirstDelOk := .F.

End Sequence
	
Return( lDelOk )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdWDescTP	 	 ЁAutorЁMauricio MR       Ё Data Ё15/12/2004Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializadora Padrao do Campo RDW_DESCTP					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO do campo RDW_DESCTP								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdwDescTPInit( cRdwTpCurs , lGdFieldPut )

Local cRdwDescInit	:= ""
Local lGetDados		:= .F.

DEFAULT lGdFieldPut := .F.

lGetDados := IsInGetDados( { "RDW_DESCTP" , "RDW_TPCURS" } )

IF ( lGetDados )
	IF ( IsMemVar( "RDW_TPCURS" ) )
		DEFAULT cRdwTpCurs := GetMemVar( "RDW_TPCURS"  )
	Else
		DEFAULT cRdwTpCurs := GdFieldGet( "RDW_TPCURS"  )
	EndIF
	cRdwDescInit	:= fDesc( "SQX" , cRdwTpCurs , "QX_DESC" , NIL , NIL , NIL , .F. )
	cRdwDescInit	:= Padr( cRdwDescInit , GetSx3Cache( "QX_DESC" , "X3_TAMANHO" ) )
	IF ( lGdFieldPut )
		GdFieldPut( "RDW_DESCTP" , cRdwDescInit )
	EndIF	
	SetMemVar( "RDW_DESCTP" , cRdwDescInit )
Else
	DEFAULT cRdwTpCurs	:= RDW->RDW_TPCURS
	cRdwDescInit	:= fDesc( "SQX" , cRdwTpCurs , "QX_DESC" , NIL , NIL , NIL , .F. )
	cRdwDescInit	:= Padr( cRdwDescInit , GetSx3Cache( "QX_DESC" , "X3_TAMANHO" ) )
EndIF

Return( cRdwDescInit )


/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdjTipoBox 	 ЁAutorЁEmerson Grassi Rocha  Ё Data Ё07/12/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Retornar as Opcoes do Campo RDJ_TIPO         	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_CBOX para o campo RDJ_TIPO                         		Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdjTipoBox( lValid , lRetDesc , cOpcDesc )

Local cOpcBox

DEFAULT lValid		:= .F.
DEFAULT lRetDesc	:= .F.

IF !( lValid )

	IF !( lRetDesc )

		cOpcBox := ( "1=" + STR0023 + ";" )	//"Padrao"
		cOpcBox += ( "2=" + STR0024 + ";" )	//"Capacitacao"
		cOpcBox += ( "3=" + STR0025 + ";" )	//"Dissertativa"
		cOpcBox += ( "4=" + STR0026 + ";" )	//"CapacitaГЦo"
		cOpcBox += ( "5=" + STR0027       )	//"Capacitacao interna"

	Else

		Do Case
			Case ( cOpcDesc == "1" ) ; ( cOpcBox := STR0023 )//"Padrao"
			Case ( cOpcDesc == "2" ) ; ( cOpcBox := STR0024 )//"Capacitacao"
			Case ( cOpcDesc == "3" ) ; ( cOpcBox := STR0025 )//"Dissertativa"
			Case ( cOpcDesc == "4" ) ; ( cOpcBox := STR0026 )//"CertificaГЦo
			Case ( cOpcDesc == "5" ) ; ( cOpcBox := STR0027 )//"Capacitacao interna"
		End Case

	EndIF

Else

	cOpcBox := "12345"

EndIF
	
Return( cOpcBox )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdjTipoInit	 ЁAutorЁEmerson Grassi Rocha  Ё Data Ё07/12/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao para Retornar as Opcoes do Campo RDJ_TIPO         	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO para o campo RDJ_TIPO                         	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdjTipoInit()
Return( SubStr( RdjTipoBox( .T. ) , 1 , 1 ) ) 

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdjTipoVld	     ЁAutorЁEmerson Grassi    Ё Data Ё07/12/2005Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do Campo RDJ_TIPO     								Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁValid do Campo RDJ_TIPO 									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdjTipoVld()                                   
Return( GetMemVar( "RDJ_TIPO" )$ RdjTipoBox( .T. ) )

/*/
зддддддддддбдддддддддддддддддбдддддбддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiVisaoVld 	 ЁAutorЁEmerson Grassi    Ё Data Ё16/02/2006Ё
цддддддддддедддддддддддддддддадддддаддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValid do Campo RDI_VISAO									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁValid do Campo RDI_VISAO									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdiVisaoVld()

Local lRdiVisaoVld	:= .T.

Begin Sequence

	IF !( lRdiVisaoVld := ( Vazio() .Or. ExistCpo( "RDK", GetMemVar( "RDI_VISAO" ) ) ) )
		Break
	EndIF

	SetMemVar( "RDI_DESVIS" , RdiDesVisInit() )

End Sequence

Return( lRdiVisaoVld )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRdiDesVisInitЁAutorЁEmerson Grassi Rocha  Ё Data Ё16/02/2006Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁFuncao de Inicializador Padrao do campo RDI_DESVIS	        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁX3_RELACAO para o campo RDI_DESVIS	                  	   	Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function RdiDesVisInit()

Local cRdiDesVis 	:= ""
Local cCodVis 		:= ""

IF Type("M->RDI_VISAO") != "U" .And. !Empty( M->RDI_VISAO )
	cCodVis := M->RDI_VISAO
ElseIf !Inclui
	cCodVis	:= RDI->RDI_VISAO
Else
	cCodVis := Space(GetSx3Cache( "RDI_VISAO" , "X3_TAMANHO" ))
EndIF

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Descricao da Visao			           				   	   	 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cRdiDesVis := FDesc("RDK", cCodVis, "RDK_DESC", GetSx3Cache( "RDI_DESVIS" , "X3_TAMANHO" ) , NIL , NIL , .F.)

Return( cRdiDesVis )

/*                                	
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    Ё MenuDef		ЁAutorЁ  Luiz Gustavo     Ё Data Ё21/12/2006Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁIsola opcoes de menu para que as opcoes da rotina possam    Ё
Ё          Ёser lidas pelas bibliotecas Framework da Versao 9.12 .      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё< Vide Parametros Formais >									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁAPDA110                                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Retorno  ЁaRotina														Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/   

Static Function MenuDef()

 Local aRotina := {;
								{ STR0001 , "AxPesqui"	 , 0 , 01,,.F.} ,; //"Pesquisar"
								{ STR0002 , "Apda110Mnt" , 0 , 02 } ,; //"Visualizar"
								{ STR0003 , "Apda110Mnt" , 0 , 03 } ,; //"Incluir"
								{ STR0004 , "Apda110Mnt" , 0 , 04 } ,; //"Alterar"
								{ STR0005 , "Apda110Mnt" , 0 , 05 }  ; //"Excluir"
							}
Return aRotina

/*/{Protheus.doc} VldLimPes
//TODO Verifica Se os Campos Limite de Metas e Limite de Pesos И menor que o valor definido escala de relevБncia, atingimento e conhecimento.
@author martins.marcio
@since 16/11/2018
@version 1.0
@return ${return}, ${return_description}
@type function
/*/
Static Function VldLimPes()

Local lRet := .T.
Local nMaxEscRel := 0 // Valor mАximo cadastrado na tabela RBL para a Escala (Escala/Grau de Importancia)
Local cChave := ""

// Varre tabela RBL capturando o maior valor
DbselectArea("RBL")
DbSetOrder(1) // RBL_FILIAL+RBL_ESCALA+RBL_ITEM

//RELEVANCIA
cChave := xFilial("RBL")+M->RDI_ESCREL
If RBL->(DbSeek(cChave))
	While !Eof() .and. (RBL_FILIAL + RBL_ESCALA) == cChave
		nMaxEscRel := Max(nMaxEscRel,RBL->RBL_VALOR)
		RBL->(dbSkip())
	EndDo
EndIf

//ATINGIMENTO
If !(M->RDI_ESCATG == M->RDI_ESCREL) 
	cChave := xFilial("RBL")+M->RDI_ESCATG
	If RBL->(DbSeek(cChave))
		While !Eof() .and. (RBL_FILIAL + RBL_ESCALA) == cChave
			nMaxEscRel := Max(nMaxEscRel,RBL->RBL_VALOR)
			RBL->(dbSkip())
		EndDo
	EndIf
EndIf

//CONHECIMENTO
If !(M->RDI_ESCCON == M->RDI_ESCREL) .AND. !(M->RDI_ESCCON == M->RDI_ESCATG) 
	cChave := xFilial("RBL")+M->RDI_ESCCON
	If RBL->(DbSeek(cChave))
		While !Eof() .and. (RBL_FILIAL + RBL_ESCALA) == cChave
			nMaxEscRel := Max(nMaxEscRel,RBL->RBL_VALOR)
			RBL->(dbSkip())
		EndDo
	EndIf
EndIf

If aCOLS[N][GdFieldPos( "RDW_LIMMET" )] < nMaxEscRel
	MsgInfo( OemToAnsi(STR0028) , cCadastro ) // Limite de Metas nЦo pode ser menor que o valor definido escala de relevБncia, atingimento e conhecimento.
	lRet := .F.
ElseIf aCOLS[N][GdFieldPos( "RDW_LIMPES" )] < nMaxEscRel
	MsgInfo( OemToAnsi(STR0029) , cCadastro ) // Limite de Pesos nЦo pode ser menor que o valor definido escala de relevБncia, atingimento e conhecimento.
	lRet := .F.
EndIf

Return lRet