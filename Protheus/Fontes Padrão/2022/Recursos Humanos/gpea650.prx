#INCLUDE "GPEA650.CH"
#INCLUDE "FONT.CH"
#INCLUDE "COLORS.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "PONCALEN.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao        ³ Gpea650 ³ Autor    ³ Pedro Eloy          ³ Data ³ 16/01/06   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao     ³ Cadastro Contrib. Patronal                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso           ³ Generico                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³		      	   ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL     		³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador   ³Data    ³ FNC      ³ Motivo da alteracao 				        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Raquel Hager  ³12/04/13³M12RH01   ³RQ003 - Unificacao da Folha de Pagamento. ³±±
±±³Raquel Hager  ³19/06/13³M12RH01   ³Inclusao da funcao gp650TudOk e validacao ³±±
±±³				 ³        |RQ003     ³de linha deletada na funcao gp650LinOk.   ³±±
±±³Raquel Hager  ³25/06/13³M12RH01   ³Correcao no gp650TudOk para utilizacao da ³±±
±±³				 ³        |RQ003     ³funcao GdValidGet.					    ³±±
±±³Henrique Vita ³19/12/14³TRGW99    ³Réplica do chamado TRECZG referente ao    ³±±
±±³				 ³        |          ³Cadastro de Contribuição Patronal 	    ³±±
±±³Allyson M     ³16/06/16³TVIT55    ³Ajuste p/ validar permissao de acesso		³±±
±±³Jônatas A.    ³12/04/17³DRHPAG-241³Substituição das funções de criação de    ³±±
±±³              ³        ³	         ³tabelas temporárias pela classe           ³±±
±±³              ³        ³	         ³FWTemporaryTable().                       ³±±
±±³Rafael Reis   ³29/08/17³DRHPAG5326³Tratamento para criação de tabela         ³±±
±±³              ³        ³	         ³temporária quando dicionário não existe   ³±±
±±³              ³        ³	         ³no banco.                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function Gpea650()
Local aFixe 	:= {}
Local nTamEmp   := 0
Local aIndex    := { { "TR_CODEMP+TR_FILIAL" } }
Local aSeek     := { { STR0002,{{"" ,"C",nTamEmp,0,STR0002}} } }	// 'Tipo' ## 'Descrição'
Local aCampos	:= {}
Local cAliasTMP	:= GetNextAlias()
Local cFilAcess	:= ""
Local cFilQry	:= ""
Local cCodFil	:= ""
Local nI		:= 0
Local nSizeFil		:= FWSizeFilial()
Local nRegSm0	:= 0

Private oTmpTbl

DbSelectArea("SM0")
//Verifica se o Arquivo Esta Vazio
If SELECT ("SM0") == 0
	Return
EndIf

// Definicao dos campo da mBrowse
nTamEmp := Iif(Len(FWCODEMP("SM0")) = 0, Len(cEmpant), Len(FWCODEMP("SM0")))
aFixe := {	{STR0002	,{|| TRB->TR_CODEMP}, "C" , "@!" , 0 , nTamEmp , 0 , , , , , , , },;     	// "Empresa"
			{STR0003	,{|| TRB->TR_FILIAL}, "C" , "@!" , 0 , nSizeFil , 0 , , , , , , , , },;	// "Filial"
			{STR0004	,{|| TRB->TR_NOME}  , "C" , "@!" , 0 , Len(M0_FILIAL) , 0 , , , , , , , , } } 	            // "Descricao"

// Criado um arquivo temporario para utilizar como espelho para a mBrowse
aCampos := {{ "TR_CODEMP" 	,"C",nTamEmp, 0 	} ,;	    // Codigo da Empresa
       		{ "TR_FILIAL"  	,"C",nSizeFil,0 	} ,;	// Codigo da Filial
       		{ "TR_NOME"		,"C",Len(M0_FILIAL) ,0 }}	   				// Descricao da Filial


	oTmpTbl := FWTemporaryTable():New("TRB")
	oTmpTbl:SetFields(aCampos)
	oTmpTbl:AddIndex("EMPFIL", {"TR_CODEMP", "TR_FILIAL"})
	oTmpTbl:Create()

	If MPDicInDB()

		// Monta variavel com filiais que o usuário tem acesso
		cFilAcess := fValidFil()
		For nI := 1 To Len(cFilAcess) Step (nSizeFil + 1)
			If !Empty(cCodFil := Substr(cFilAcess, nI, nSizeFil))

				cFilQry += "'" + cCodFil + "'"

				If (nI + nSizeFil + 1) < Len(cFilAcess)
					cFilQry += ","
				EndIf
			ElseIf nI == (Len(cFilAcess)-(nSizeFil + 1)) .And. !Empty(cFilQry)
				cFilQry := Substr(cFilQry, 1, Len(cFilQry) - 1)
			EndIf
		Next

		// Modifica variaveis para a Query
		cFilQry := "%" + cFilQry + "%"

		BeginSql alias cAliasTMP
			SELECT SM0.M0_CODIGO, SM0.M0_CODFIL, SM0.M0_FILIAL
			FROM %table:SM0% SM0
			WHERE      SM0.M0_CODIGO = %exp:cEmpant%
				   AND SM0.M0_CODFIL IN ( %exp:Upper( cFilQry )% )
				   AND SM0.%notDel%
			ORDER BY SM0.M0_CODIGO, SM0.M0_CODFIL, SM0.M0_FILIAL
		EndSql
		While !(cAliasTMP)->(Eof())
				RecLock("TRB",.T.)
		        	TRB->TR_CODEMP	:=	(cAliasTMP)->M0_CODIGO
		        	TRB->TR_FILIAL	:=	(cAliasTMP)->M0_CODFIL
		        	TRB->TR_NOME	:=	(cAliasTMP)->M0_FILIAL
				TRB->(MsUnLock())
	  		(cAliasTMP)->(dbSkip())
		EndDo
		(cAliasTMP)->(dbCloseArea())

	Else

		// Gravar no temporario somente os registros do SigaMat.Emp
		// com a mesma empresa, setada ao escolher.
		nRegSm0 := SM0->(RECNO())
		dbSelectArea("SM0")
		dbGotop()
		While !Eof()
			If SM0->M0_CODIGO == cEmpant .And. FWGETCODFILIAL $ fValidFil()
				RecLock("TRB",.T.)
		        	TRB->TR_CODEMP	:=	SM0->M0_CODIGO
		        	TRB->TR_FILIAL	:=	FWGETCODFILIAL
		        	TRB->TR_NOME	:=	SM0->M0_FILIAL
				MsUnLock()
			EndIf
			dbSelectArea("SM0")
	  		SM0->(dbSkip())
		EndDo
		dbGoTo(nRegSm0)

	Endif

Private aRotina := MenuDef() // Ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina														}

dbSelectArea("TRB")

oBrowse := FWMBrowse():New()
oBrowse:SetAlias('TRB')
oBrowse:SetFields(aFixe)
oBrowse:SetDescription(OemToAnsi(STR0001))
oBrowse:SetQueryIndex(aIndex)
oBrowse:SetSeek(.T.,aSeek)
oBrowse:DisableDetails()
oBrowse:Activate()

// Fechando o arquivo temporario, criado como espelho
dbSelectArea("TRB")
dbCloseArea()
If oTmpTbl <> Nil
	oTmpTbl:Delete()
	oTmpTbl := Nil
Endif

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ gp650Atu ³Autor  ³ Equipe RH          ³Data  ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Vis.,Inc.,Alt. e Del. "Cadastro de Contribuicao Patronal". º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSintaxe   ³ gp650Atu(ExpC1,ExpN1,ExpN2)								  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ ExpC1 = Alias do arquivo									  º±±
±±º          ³ ExpN1 = Numero do registro   							  º±±
±±º          ³ ExpN2 = Numero da opcao selecionada						  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA650                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function gp650Atu(RCTcAlias,nReg,nOpcx)
Local nCnt								// Armazena a quantidade de registros de um determinado funcionario. Utilizada para verificar se usuario podera "Incluir" ou "Alterar".
Local aAdvSize		:= {}				// Variavel para controle de coordenadas da janela.
Local aInfoAdvSize	:= {}				// Variavel para controle de coordenadas da janela.
Local aObjCoords	:= {}				// Variavel para controle de coordenadas da janela.
Local aObjSize		:= {}				// Variavel para controle de coordenadas da janela.
Local oDlg								// Variavel do tipo objetos
Local oFont								// Variavel do tipo objetos
Local oGroup							// Variavel do tipo objetos
Local cKey			:= ''				// variavel com os valores das chaves. (variavel para getdados da tabela RCT)
Local aRCTNotFields	:= {"RCT_FILIAL"}  // vetor com os campos que nao seria visualizados. (variavel para getdados da tabela RCT)
Local aRCTVirtGd	:= {}				// vetor com os campos virtuais. (variavel para getdados da tabela RCT)
Local aRCTVisualGd	:= {} 				// vetor com os campos visuais. (variavel para getdados da tabela RCT)
Local aRCTCols		:= {}				// vetor com as colunas da GetDados RCT. (variavel para getdados da tabela RCT)
Local bSet15		:= { || NIL }		// Bloco com as validacoes do botao OK. (variavel da janela)
Local bSet24		:= { || NIL }		// Bloco com as validacoes do botao Cancelar. (variavel da janela)
Local nPosDtIni		:= 0
Local nPosTipoAfa 	:= 0
Local nPosDiasEmp	:= 0
Local nPosStatus	:= 0
Local nPosDesc		:= 0
Local nLinha		:= 0
Local cQuery		:= ""
Local bSeekWhile	:= {|| RCT->RCT_FILIAL  }
Local cSVFil 		:= cFilAnt
Local cSVEmp 		:= cEmpAnt

Private cFil	 	:= TRB->TR_FILIAL
Private aRCTColsRec	:= {}				// Vetor que contem os Recnos da tabela. (variavel para getdados da tabela RCT)
Private aHeader		:= {}				// Vetor com o cabecalho da GetDados RCT. (variavel para getdados da tabela RCT)
Private nRCTUsado	:= 0.00 			// Variavel que retorna a quantidade de campos da tabela. (variavel para getdados da tabela RCT)
Private oGet							// Variavel do tipo objetos

		RCTcAlias	:= "RCT"
cFilAnt 			:= TRB->TR_FILIAL
cEmpAnt 			:= TRB->TR_CODEMP

		// Nao habilita Insert/Altera/Deletar se a opcao do aRotina for igual de 2(Visualizacao) e 5(Exclusao)
		_SetOwnerPrvt( "nOpcNewGd", IF( nOpcX == 2 .or. nOpcX == 5 , 0 , GD_INSERT + GD_UPDATE + GD_DELETE))

		// Monta as Dimensoes dos Objetos
		aAdvSize		:= MsAdvSize()
		aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
		aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
		aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

		nOpca := 0

		cKey	 := ( cFil )
		aRCTCols := RCT->( GdMontaCols(		@aHeader		,;  //01 -> Array com os Campos do Cabecalho da GetDados
											@nRCTUsado		,;	//02 -> Numero de Campos em Uso
											@aRCTVirtGd		,;	//03 -> [@]Array com os Campos Virtuais
											@aRCTVisualGd	,;	//04 -> [@]Array com os Campos Visuais
											"RCT"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
											aRCTNotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
											@aRCTColsRec	,;	//07 -> [@]Array unidimensional contendo os Recnos
											"SM0"			,;	//08 -> Alias do Arquivo Pai
											cKey			,;	//09 -> Chave para o Posicionamento no Alias Filho
											bSeekWhile		,;	//10 -> Bloco para condicao de Loop While
											Nil				,;	//11 -> Bloco para Skip no Loop While
											Nil				,;	//12 -> Se Havera o Elemento de Delecao no aCols
											Nil				,;	//13 -> Se cria variaveis Publicas
											Nil				,;	//14 -> Se Sera considerado o Inicializador Padrao
											Nil				,;	//15 -> Lado para o inicializador padrao
											Nil				,;	//16 -> Opcional, Carregar Todos os Campos
											Nil 			,;	//17 -> Opcional, Nao Carregar os Campos Virtuais
											cQuery			,;	//18 -> Opcional, Utilizacao de Query para Selecao de Dados
											.F.				,;	//19 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
											.F.				,;	//20 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
											.F.				,;	//21 -> Carregar Coluna Fantasma e/ou BitMap ( Logico ou Array )
											Nil				,;	//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
											Nil				,;	//23 -> Verifica se Deve Checar se o campo eh usado
											Nil				,;	//24 -> Verifica se Deve Checar o nivel do usuario
											Nil				,;	//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols
											Nil				,;	//26 -> [@]Array que contera as chaves conforme recnos
											Nil				,;	//27 -> [@]Se devera efetuar o Lock dos Registros
											Nil				,;	//28 -> [@]Se devera obter a Exclusividade nas chaves dos registros
											Nil				,;	//29 -> Numero maximo de Locks a ser efetuado
											.F.			 	;	//30 -> Utiliza Numeracao na GhostCol
		 						  ))

		// Validacao da existencia de registro no Incluir
		If ( ( nOpcX == 3 ) .And. ( Len( aRCTCols ) > 0 ) .And. !Empty(aRCTCols[1][1]) ) // Quando for Inclusao
			Alert(STR0010)	// "Ja possui registro cadastrado."
			cFilAnt := cSVFil
			cEmpAnt := cSVEmp
			Return
		ElseIf ( nOpcX # 3 ) .And. Empty(aRCTCols[1][1]) //Quando Nao for Inclusao
			Alert(STR0011)	// "Nao possui registro cadastrado."
			cFilAnt := cSVFil
			cEmpAnt := cSVEmp
			Return
		EndIf

		DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
		DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0012) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL	// "Contribuicao Sindical"

		// Atribuindo o nome ao campo Visual (descricao do sindicato)
		nPosTipoAfa := GdFieldPos( "RCT_SIND"	, aHeader )
		nPosDesc	:= GdFieldPos( "RCT_DESC"	, aHeader )
		For nLinha := 1 to Len(aRCTCols)
			aRCTCols[nLinha, nPosDesc] := fDesc("RCE", aRCTCols[nLinha, nPosTipoAfa], "RCE_DESCRI")
		Next nLinha

		@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup TO aObjSize[1,3] ,aObjSize[1,4]*0.10	LABEL OemToAnsi(STR0002) OF oDlg PIXEL		// "Empresa"
		oGroup:oFont:= oFont
		@ aObjSize[1,1] , aObjSize[1,4]*0.11 GROUP oGroup TO aObjSize[1,3] ,aObjSize[1,4]*0.8	LABEL OemToAnsi(STR0013) OF oDlg PIXEL	//"Nome da Empresa"
		oGroup:oFont:= oFont
		@ aObjSize[1,1] , aObjSize[1,4]*0.81 GROUP oGroup TO aObjSize[1,3] ,aObjSize[1,4] LABEL OemToAnsi(STR0003) OF oDlg PIXEL		// "Filial"
		oGroup:oFont:= oFont
		@ aObjSize[1,1]+10 , aObjSize[1,2]+10      SAY TRB->TR_CODEMP			SIZE 050,10 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,1]+10 , aObjSize[1,4]*0.10+10 SAY TRB->TR_NOME 			SIZE 146,10 OF oDlg PIXEL FONT oFont
		@ aObjSize[1,1]+10 , aObjSize[1,4]*0.80+10 SAY TRB->TR_FILIAL 			SIZE 050,10 OF oDlg PIXEL FONT oFont

		oGet := MsNewGetDados():New(aObjSize[2,1],;	// nTop
									 aObjSize[2,2],;   	// nLelft
									 aObjSize[2,3],;	// nBottom
		                             aObjSize[2,4],;	// nRright
									 nOpcNewGd,;		// Controle do que podera ser realizado na GetDado - nstyle
									 "gp650LinOk",;		// Funcao para validar a edicao da linha - ulinhaOK
									 "gp650TudOk",;		// Funcao para validar todas os registros da GetDados - uTudoOK
	  								 NIL,;				// cIniCPOS
									 NIL,;				// aAlter
									 0,; 				// nfreeze
									 99999,;  			// nMax
									 NIL,;		 		// cFieldOK
									 NIL,;				// usuperdel
									 Nil,;				// udelOK
									 @oDlg,;        	// Objeto de dialogo - oWnd
									 @aHeader,;			// Vetor com Colunas - AparHeader
									 @aRCTCols;			// Vetor com Header - AparCols
									)

			bSet15	:= {|| nOpcA:= (IF(nOpcx=2.Or.nOpcx=3.Or.nOpcx=4,1,2)),IF(oGet:TudoOk(),oDlg:End(),nOpca:=0)} 	// Botao OK
			bSet24	:= {|| oDlg:End()} 																			    	// Botao Cancela
		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 )

	    // Visualizacao, Inclusao e Alteracao
	    If nOpcA == 1
		        Begin Transaction
		        	// Gravacao
		        	gp650Grava(RCTcAlias, nOpcx)
		        	// Processa Gatilhos
		            EvalTrigger()
		        End Transaction
		ElseIf nOpcA == 2
		    	// Se for Exclusao
		        Begin Transaction
		            gp650Dele()
		        End Transaction
		EndIf

	dbSelectArea("TRB")
	cFilAnt := cSVFil
	cEmpAnt := cSVEmp

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ gp650Grava ³ Autor ³ Equipe RH        ³Data  ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Grava no arquivo.										  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA650                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function gp650Grava(RCTcAlias, nOpc)
Local aArea		:= GetArea()
Local aRCTCols  := (oGet:aCols)
Local nAcols	:= Len( aRCTCols    )
Local nAcolsRec := Len( aRCTColsRec )
Local nMaxArray	:= Len( aHeader  )
Local nCol 		:= 0
Local nX		:= 0

		dbSelectArea(RCTcAlias)
		For nX := 1 to nAcols
		    If nX <= nAcolsRec
		        dbGoto(aRCTColsRec[nX])
		        RecLock(RCTcAlias,.F.)
		        // Verifica se esta deletado
		        If aRCTCols[nX,nRCTUsado+1]  # .F.
		            (RCTcAlias)->( dbDelete() )
		        Else
		        	For nCol:= 1 to nMaxArray
				        cCampo    	:= Trim(aHeader[nCol][2])
			    	    xConteudo 	:= aRCTCols[nX,nCol]
			        	&cCampo 	:= xConteudo
	                Next
		        EndIf
	       	    ( RCTcAlias )->( MsUnlock() )
		        Loop
		    EndIf

	    	// Verifica se Nao esta Deletado no aCols
	    	// e faz a gravacao dos campos digitados na GetDados
	    	// rotina utilizada na inclusão de registro.
	       	If aRCTCols[nX,nRCTUsado+1]  = .F.
	          		RecLock(RCTcAlias,.T.)
	   				RCT->RCT_FILIAL	:=	TRB->TR_FILIAL
		        	For nCol:= 1 to nMaxArray
				        cCampo    	:= Trim(aHeader[nCol][2])
			    	    xConteudo 	:= aRCTCols[nX,nCol]
			        	&cCampo 	:= xConteudo
	                Next
		    Else
		        Loop
		    EndIf
		    ( RCTcAlias )->( MsUnlock() )
		Next nX

		RestArea(aArea)

Return( Nil )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ gp650Dele ³Autor  ³ Equipe RH         ³ Data ³             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Deleta os Registros. 									  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA650                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gp650Dele()
Local aArea	:= GetArea()

	// Tem a finalidade de apagar os registro de todas as filiais
	// setada, ja que esta sendo utilizado o SM0 e a mesma empresa.
    dbSelectArea("RCT")
    dbSetOrder(1)
    If dbSeek(TRB->TR_FILIAL,.f.)
		While !Eof() .And. TRB->TR_FILIAL == RCT->RCT_FILIAL
	    	RecLock("RCT",.F.)
			    dbDelete( )
	    	MsUnlock()
	     	RCT->(dbSkip())
	    EndDo
	EndIf

	RestArea(aArea)

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ gp650LinOk ³Autor  ³ Equipe RH        ³Data  ³ 16/01/06    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Critica linha digitada									  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA650                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function gp650LinOk()
Local aArea		:= GetArea()
Local lRet		:= .T.
Local nPos		:= 0
Local aRCTCols	:= (oGet:aCols)
Local nAcols	:= Len( aRCTCols )
Local cSindPos	:= GdFieldPos( "RCT_SIND"	, aHeader )
Local cTipoPos	:= GdFieldPos( "RCT_TPCONT"	, aHeader )
Local nPosMes	:= GdFieldPos( "RCT_MES"	, aHeader )
Local nPosAno	:= GdFieldPos( "RCT_ANO"	, aHeader )
Local cSind		:= aRCTCols[oGet:nAt][cSindPos]
Local cTipo		:= aRCTCols[oGet:nAt][cTipoPos]
Local cMesNat	:= aRCTCols[oGet:nAt][nPosMes]
Local cAnoNat	:= aRCTCols[oGet:nAt][nPosAno]
Local nLinha	:= oGet:nAt

		// Caso o registro no aCols esteja deletado e/ou vazio
	   	If !aRCTCols[nLinha,nRCTUsado+1]
			If lRet .And. Empty(aRCTCols[nLinha,nPosAno]) .Or. Empty(aRCTCols[nLinha,nPosMes])
	       		Alert(STR0014)		// "Registro em branco"
	       		lRet := .F.
			EndIf
	    EndIf

		// Verifica o periodo do mes valido
		If lRet .And. !aRCTCols[nLinha,nRCTUsado+1] .And. nPosMes > 0
		    If ( (Val(Alltrim(aRCTCols[nLinha,nPosMes]))< Val("1") .Or. Val(Alltrim(aRCTCols[nLinha,nPosMes]) )> Val("12") ) )
		     	Alert(STR0015)		// "Mes no periodo incorreto."
		        lRet := .F.
		    EndIf
		EndIf

		// Verifica a duplicidade na aCols
	  	If lRet .And. Len(aRCTCols) > 1
			nPos := aScan(aRCTCols,{|x| x[1]==cSind .And. x[3]==cTipo .And. x[4]==cMesNat .And. x[5]==cAnoNat .And. !x[nRCTUsado+1] })
		    If nPos > 0 .And. nPos # nLinha
		     	Alert(STR0016) 	// "Analise este registro, duplicidade"
		       	lRet := .F.
		    EndIf
		EndIf

	RestArea(aArea)

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ gp650TudOk ³Autor  ³ Equipe RH        ³Data  ³ 19/06/13    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Critica todas as linhas.									  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA650                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function gp650TudOk()
Local aArea			:= GetArea()
Local aRCTCols		:= (oGet:aCols)
Local aCposKey      := {}
Local aCposObrig	:= {}
Local lRet 			:= .T.

	// Campos de preenchimento obrigatorio
	aCposObrig	:= {"RCT_SIND", "RCT_TPCONT", "RCT_MES", "RCT_ANO"}
	// Campos que compoem a chave
	aCposKey	:= {"RCT_SIND", "RCT_TPCONT", "RCT_MES", "RCT_ANO"}

	If !(GdValidGet(aCposKey, 4, aCposObrig,.T.,aHeader,aRCTCols))
 		lRet := .F.
	EndIf

	RestArea(aArea)

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ Gp650Top ³Autor  ³ Equipe RH          ³Data  ³ 01/18/06    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Rotina utilizada pela a mBrowse, quando o foco e utilizado º±±
±±º          ³ a tabela SM0, validado quando retorna para mBrowse.        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA650                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gp650Top()
Return "    "

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ Gp650Bot  ³ Autor ³ Equipe RH         ³Data  ³ 01/18/06    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Rotina utilizada pela a mBrowse, quando o foco e utilizado º±±
±±º          ³ a tabela SM0, validado quando retorna para mBrowse.        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA650                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gp650Bot()

Return "ZZZZ"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ Gp650Pes ³Autor  ³ Pedro Eloy         ³Data  ³ 01/18/06    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Realiza pesquisa. 				  					      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA650                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gp650Pes()
Local cCampo,oDlg,nOpcaPes:=0
Local cOrd,oCbx,nOpt1
Local aOrd			:= {}
Local aAdvSize		:= {}				// Variavel para controle de coordenadas da janela.
Local aInfoAdvSize	:= {}				// Variavel para controle de coordenadas da janela.
Local aObjCoords	:= {}				// Variavel para controle de coordenadas da janela.
Local aObjSize		:= {}				// Variavel para controle de coordenadas da janela.
Local aAdv1Size		:= {}
Local aInfo1AdvSize	:= {}
Local aObj1Size		:= {}
Local aObj1Coords 	:= {}
Local bSet15		:= { || Nil }		// Bloco com as validacoes do botao OK. (variavel da janela)
Local bSet24		:= { || Nil }		// Bloco com as validacoes do botao Cancelar. (variavel da janela)

	Aadd(aOrd,"Empresa + Codigo Filial")

	aAdvSize	:= MsAdvSize( ,.T.,370)
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 10 , 10 }
	aAdd( aObjCoords , { 000 , 000 , .T. , .T.}  )
	aObjSize	:= MsObjSize( aInfoAdvSize , aObjCoords )
	aAdv1Size    := aClone(aObjSize[1])

	aInfo1AdvSize    := { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 5 , 5 }
	aAdd( aObj1Coords , { 000 , 020 , .T. , .F. } )
	aAdd( aObj1Coords , { 000 , 020 , .T. , .F. } )
	aObj1Size := MsObjSize( aInfo1AdvSize , aObj1Coords )

	// Processa Choices dos Campos do Banco de Dados
	cOrd   := "1"
	cCampo := cEmpAnt+SPACE(2)

	DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0017) From aAdvSize[7],0 TO aAdvSize[6]*0.45,aAdvSize[5]*0.70 OF oMainWnd PIXEL //"Pesquisa"
		@ aObj1Size[1,1] , aObj1Size[1,2] COMBOBOX oCBX VAR cOrd ITEMS aOrd  SIZE 165,44  ON CHANGE (nOpt1:=oCbx:nAt)  OF oDlg FONT oDlg:oFont PIXEL//0.6,1.3
		@ aObj1Size[2,1] , aObj1Size[2,2] MSGET cCampo SIZE 165,10 PIXEL//2.1,1.3

		bSet15	:= {|| nOpcaPes := 1,oDlg:End()} 	// Botao OK
		bSet24	:= {|| oDlg:End()} 					// Botao Cancela

	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar( oDlg , bSet15 , bSet24 ) CENTERED

	If nOpcaPes == 0
		Return
	Else
		dbSelectArea("TRB")
		If !dbSeek(AllTrim(cCampo),.F.)
			Alert(STR0018)  //"Filial nao encontrada"
			dbGotop()
		EndIf
	EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ MenuDef  ³ Autor ³ Luiz Gustavo       ³Data  ³ 12/01/07    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Isola opcoes de menu para que as opcoes da rotina possam   º±±
±±º          ³ ser lidas pelas bibliotecas Framework da Versao 9.12 .     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA650                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MenuDef()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define array contendo as Rotinas a executar do programa      ³
	//³ ----------- Elementos contidos por dimensao ------------     ³
	//³ 1. Nome a aparecer no cabecalho                              ³
	//³ 2. Nome da Rotina associada                                  ³
	//³ 3. Usado pela rotina                                         ³
	//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
	//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
	//³    2 - Simplesmente Mostra os Campos                         ³
	//³    3 - Inclui registros no Bancos de Dados                   ³
	//³    4 - Altera o registro corrente                            ³
	//³    5 - Remove o registro corrente do Banco de Dados          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Local aRotina	:=	{ 	{ OemToAnsi(STR0017)  , "Gp650Pes"  , 0 , 1, ,.F.},;	// "Pesquisa"
							{ OemToAnsi(STR0006)  , "gp650Atu"	, 0 , 2},;			// "Visualizar"
							{ OemToAnsi(STR0007)  , "gp650Atu"	, 0 , 6},;			// "Incluir"
							{ OemToAnsi(STR0008)  , "gp650Atu"	, 0 , 4},; 			// "Alterar"
							{ OemToAnsi(STR0009)  , "gp650Atu"	, 0 , 5}}  			// "Excluir"


Return aRotina