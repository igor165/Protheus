#INCLUDE "PONA350.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "PONCALEN.CH"
#INCLUDE "TBICONN.CH"

Static lPEaCols	:=	ExistBlock("PN350ACOLS")
Static lPEGrv 	:=	ExistBlock("PN350GRV")

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ PONA350       ³ Autor ³  Mauricio MR     ³ Data ³12/04/2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Manutencao de Pre-Abonos                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Pona350                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Program.  ³ Data   ³ BOPS ³  Motivo da Alteracao                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Cecilia C.³20/05/14³TPQAN3³Incluido o fonte da 11 para a 12 e efetuada ³±±
±±³          ³        ³      ³a limpeza.                                  ³±±
±±³Artuso    ³11/11/14³039565³Ajuste na validacao de inclusao. Ao incluir ³±±
±±³          ³        ³  2014³pre-abono com arquivo vazio, era exibida men³±±
±±³          ³        ³      ³sagem indicando a existencia de pre-abono.  ³±±
±±³          ³        ³      ³Efetuado ajuste para corrigir errorlog na   ³±±
±±³          ³        ³      ³consistencia das datas: De/Ate. Caso a data ³±±
±±³          ³        ³      ³inicial fosse superior a data final, ao exi-³±±
±±³          ³        ³      ³bir a mensagem de inconsistencia, era gerado³±±
±±³          ³        ³      ³errorlog.                                   ³±±
±±³Artuso    ³26/10/15³032947³Criacao do P.E. PN350ACOLS.				  ³±±
±±³          ³        ³  2015³                                            ³±±
±±³Renan B.  ³13/05/16³TVEQZX³Criacao do P.E. PN350GRV para alterar dados ³±±
±±³          ³        ³      ³no aCols antes da gravação e da TudoOk.     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function PONA350(xAutoCab, xAutoItens, nOpcAuto)
	
	Local bBlock
	Local aArea			:= GetArea()
	Local aAreaRF0		:= {}
	Local aIndex		 := {}
	Local cFiltra		:= ""
	Local dPerIniPar	:= Ctod("//")
	Local dPerFimPar	:= Ctod("//")
	Local nPos			:= 0
	Local nPosFil		:= 0
	Local nPosMat		:= 0
	Local nX			:= 0
	Local nRegSRA		:= 0
	Local lContinua 	:= .T.
	
	Private	aAutoCab	:= xAutoCab
	Private	aAutoItens	:= xAutoItens
	Private l350Auto	:= (xAutoCab <> Nil)
	
	Private bFiltraBrw	:= { || NIL }
	
	Private dPerIni     := Ctod("//")
	Private dPerFim     := Ctod("//")
	
	// Só executa se o Modo de Acesso do SPB e SRA foram iguais e se este último nao estiver vazio e Se o Periodo Estiver em Aberto
	If ValidArqPon() .and. ChkVazio("SRA")
		
		// Reinicializa Variáveis Staticas
		PonDestroyStatic()
		
		aAreaRF0 := RF0->( GetArea() )
		
		// Declara Variáveis que Serão Utilizadas
		Private cCadastro   := OemToAnsi( STR0001 ) // "Manutenção de Pré-Abonos"
		
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Define Array contendo as Rotinas a executar do programa      ³
		³ ----------- Elementos contidos por dimensao ------------     ³
		³ 1. Nome a aparecer no cabecalho                              ³
		³ 2. Nome da Rotina associada                                  ³
		³ 3. Usado pela rotina                                         ³
		³ 4. Tipo de Transa‡„o a ser efetuada                          ³
		³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
		³    2 - Simplesmente Mostra os Campos                         ³
		³    3 - Inclui registros no Bancos de Dados                   ³
		³    4 - Altera o registro corrente                            ³
		³    5 - Remove o registro corrente do Banco de Dados          ³
		³    6 - Legenda                                               ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		Private aRotina := MenuDef() // ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina
		
		// Inicializa o filtro utilizando a função FilBrowse
		cFiltra		:= ChkRh( FunName(), "SRA" , "1" )
		bFiltraBrw 	:= { || FilBrowse( "SRA" , @aIndex , @cFiltra ) }
		Eval( bFiltraBrw )
		
		// Endereça a função de BROWSE
		If !( l350Auto )
			
			If nOpcAuto<>Nil
				nPos := Ascan(aRotina, {|x| x[4]== nOpcAuto})
				If ( nPos # 0 )
					bBlock := &( "{ |x,y,z,k| " + aRotina[ nPos,2 ] + "(x,y,z,k) }" )
					Eval( bBlock, Alias(), SRA->(Recno()), nPos)
				EndIf
			Else
				// Chamada da mBrowse
				mBrowse( 6, 1, 22, 75, "SRA",,,,,, fCriaCor())
			EndIf
		Else
			nPos := Ascan(aRotina, {|x| x[4] == nOpcAuto})
			If ( nPos # 0 )
				
				// Posiciona no funcinoário
				nPosFil := Ascan(aAutoCab, {|x| Alltrim(x[1]) $ "RA_FILIAL|RF0_FILIAL" })
				nPosMat := Ascan(aAutoCab, {|x| Alltrim(x[1]) $ "RA_MAT|RF0_MAT"})
				
				If nPosFil > 0 .And. nPosMat > 0 .And. SRA->(dbSeek(aAutoCab[nPosFil][2] + aAutoCab[nPosMat][2]))
					bBlock := &( "{ |x, y, z, k| " + aRotina[ nPos, 2 ] + "(x, y, z, k) }" )
					Eval( bBlock, Alias(), SRA->(Recno()), nPos)
				Else
					// Funcionário não encontrado
					Help(,, "Help",, STR0144, 1, 0,,,,,.T., {STR0145})  // "Revise as informações de filial e matrícula informadas"
				EndIf
				
			EndIf
		Endif
		
		// Deleta o filtro utilizando a função FilBrowse
		EndFilBrw( "SRA" , aIndex )
		
		RestArea( aAreaRF0 )
		
	EndIf
	
	RestArea( aArea )
	
Return( NIL )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pn350Atu  ³ Autor ³Mauricio MR            ³ Data ³12/04/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³                                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn350Atu(ExpC1,ExpN1,ExpN2)                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³ ExpC1 = Alias do arquivo                                   ³
³          ³ ExpN1 = Numero do registro                                 ³
³          ³ ExpN2 = Numero da opcao selecionada                        ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³ Pona350                                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Pn350Atu(cAlias,nReg,nOpcX)

Local aQueryCond		:= {}
Local aAreaSRA			:= SRA->( GetArea() )
Local aRecno			:= {}
Local aNotFields		:= {"RF0_FILIAL", "RF0_MAT"}
Local aNotAltera		:= {"RF0_ABONA", "RF0_NATEST", "RF0_USUAR", "RF0_FLAG"}
Local aAltera			:= {}
Local aAdvSize			:= {}
Local aInfoAdvSize		:= {}
Local aObjSize			:= {}
Local aObjCoords		:= {}
Local aGdCoords			:= {}
Local aGpGdCoords		:= {}
Local aKeys				:= GetKeys()
Local aGrava			:= {}
Local aFldRot 			:= {'RA_NOME', 'RA_ADMISSA'}
Local aOfusca			:= If(FindFunction('ChkOfusca'), ChkOfusca(), {.T. , .F.}) //[1] Acesso; [2]Ofusca
Local aFldOfusca 		:= {}

Local bSet15			:= { ||aCols	:= aClone(oGet:aCols) , nopcA:=1, ;
											IF( (nOpcx == 5) , ;
											    ( ;
											       If( fPon350AllDel()	,;
											           (oDlg:End(),.T.),;
											           (nOpcA:=0, .F.)  ;
											         );
											     ),;
											     If( IIF (lPEaCols , fVldPe() , .T.) .And. IIF (lPEGrv, fVldPEGrv() , .T.) .AND. oGet:TudoOk() ,;
											         oDlg:End()    		,;
											         (nOpcA:=0, .F.) 	;
											        );
											  );
							 }
Local bSet24			:= { ||oDlg:End() }
Local bSvSet15			:= { || NIL }
Local bSvSet24			:= { || NIL }
Local bChange			:= { || NIL }
Local bNIL				:= { || NIL }
Local cFil				:= SRA->RA_FILIAL
Local cMat				:= SRA->RA_MAT
Local cNome				:= SRA->RA_NOME
Local cPerg				:= "PNA350"
Local cPrefix			:= ( PrefixoCpo( "RF0" )  + "_" )
Local dPerIni			:= Ctod('')
Local dPerFim			:= Ctod('')
Local nField			:= 0.00
Local nX				:= 0.00
Local nLenX				:= 0.00
Local nCnt		  		:= 0.00
Local nOpcA				:= 0.00
Local nPosFlag			:= 0.00
Local lOfuscaNom		:= .F.
Local lOfuscaAdm		:= .F.
Local oFont
Local oLinhas
Local oGroup

Private oDlg
Private oGet

Private aArrayClone		:= {}
Private aElem			:= {}
Private aVirtual		:= {}
Private aVisual			:= {}
Private aHeader			:= Array( 0 )
Private aCols			:= {}
Private cFiliAnt		:= ""
Private Continua		:= .F.
Private nUsado			:= 0.00
Private nSvnAt			:= 1.00
Private nRec350			:= 0

Begin Sequence


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o cabecalho e Detalhe                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "RF0" )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Seta o indice (FILIAL + MATRICULA)                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    RF0->( dbSetOrder( 1 ))
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona no Funcionario                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RF0->( dbSeek( cFil + cMat , .F. ) )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta Query para a Selecao das Informacoes                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsInCallStack("MDTA685") .Or. ;
		IsInCallStack("MDTA110") .Or. ;
		IsInCallStack("MDTA410") //Se forem chamadas pelo MDT
		aQueryCond := Array( 07 )
	Else
		aQueryCond := Array( 05 )
	EndIf
	aQueryCond[01] := cPrefix + "FILIAL='"+cFil+"'"
	aQueryCond[02] := " AND "
	aQueryCond[03] := cPrefix + "MAT='"+cMat+"'"
	aQueryCond[04] := " AND "
	aQueryCond[05] := "D_E_L_E_T_=' ' "
	If IsInCallStack("MDTA685") .Or. ;
		IsInCallStack("MDTA110") .Or. ;
		IsInCallStack("MDTA410") //Se forem chamadas pelo MDT
		aQueryCond[06] := " AND "
		aQueryCond[07] := cPrefix + "NATEST ='"+TNY->TNY_NATEST+"'"
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o cabecalho e Detalhe                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aCols		:= GdMontaCols(@aHeader,@nUsado,@aVirtual,@aVisual,'RF0',aNotFields,@aRecno,'RF0',(cFil+cMat),NIL,NIL,NIL,NIL,NIL,NIL,NIL,NIL,aQueryCond,.F.,.F.,.T.)
    nRec350		:= Len( aRecno )
	
	// Verifica se existe algum dado no arquivo
	If !l350Auto
		If ( ( nCnt := nRec350 ) > 0 ) .and. nOpcx = 3  .And. ;//--Quando Inclusao e existir Registro
			!IsInCallStack("MDTA685") .And. !IsInCallStack("MDTA110") .And. ;
			!IsInCallStack("MDTA410")//Não for chamado pelo MDT
			Help(" ",1,"Pn230Exist")
			Break
		Elseif nCnt = 0 .And. nOpcx # 3  //--Quando Nao for Inclusao e nao existir Registro
			Help(" ",1,"Pn230NoLan")
			Break
		EndIF
	EndIf
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Campos Editaveis conforme aHeader				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	For nField := 1	To nUsado
		IF (;
				( aScan( aVirtual 		, aHeader[ nField , 02 ] ) == 0 ) .and. ;
		   		( aScan( aVisual  		, aHeader[ nField , 02 ] ) == 0 ) .and. ;
		   		( aScan( aNotFields		, aHeader[ nField , 02 ] ) == 0 ) .and. ;
		   		( aScan( aNotAltera		, aHeader[ nField , 02 ] ) == 0 )       ;
		  	)
			aAdd( aAltera , aHeader[ nField , 02 ] )
		EndIF
	Next nField

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa nOpcA											  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	nOpcA := 0.00

	If !( l350Auto )
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta as Dimensoes dos Objetos         					   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		aAdvSize		:= MsAdvSize()
		aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
		aAdd( aObjCoords , { 015 , 020 , .T. , .F. } )
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
		aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
		aGpGdCoords		:= { aObjSize[2,1],aObjSize[2,2],aObjSize[2,3],aObjSize[2,4]}
	   	aGdCoords		:= { aGpGdCoords[1]+20,aGpGdCoords[2],aGpGdCoords[3]-20,aGpGdCoords[4]}

		//Tratamento dados sensíveis
		If aOfusca[2]
			aFldOfusca 	:= FwProtectedDataUtil():UsrNoAccessFieldsInList( aFldRot) // CAMPOS SEM ACESSO
			IF aScan( aFldOfusca , { |x| x:CFIELD == "RA_NOME" } ) > 0 
				lOfuscaNom	:= FwProtectedDataUtil():IsFieldInList( "RA_NOME" )
			ENDIF
			IF aScan( aFldOfusca , { |x| x:CFIELD == "RA_ADMISSA" } ) > 0 
				lOfuscaAdm := FwProtectedDataUtil():IsFieldInList( "RA_ADMISSA" )
			ENDIF
		EndIf

		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Mostra Tela 										          ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		SetaPilha()
			DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
		    DEFINE MSDIALOG oDlg TITLE cCadastro From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL

			@ aObjSize[1,1]+15 , aObjSize[1,2] GROUP oGroup TO ( aObjSize[1,3] + 10 ),( ( aObjSize[1,4]/100*10 - 2 ) ) LABEL OemToAnsi(STR0010) OF oDlg PIXEL				// "Matricula:"
			oGroup:oFont:= oFont
			@ aObjSize[1,1]+15 , ( ( aObjSize[1,4]/100*10 ) ) GROUP oGroup TO ( aObjSize[1,3] + 10 ),( aObjSize[1,4]/100*80 - 2 ) LABEL OemToAnsi(STR0011) OF oDlg PIXEL	// "Nome:"
			oGroup:oFont:= oFont
			@ aObjSize[1,1]+15 , ( aObjSize[1,4]/100*80 ) GROUP oGroup TO ( aObjSize[1,3] +10 ),aObjSize[1,4]  LABEL OemToAnsi(STR0012) OF oDlg PIXEL						// "Admiss„o:"
			oGroup:oFont:= oFont

			@ aObjSize[1,1]+20, ( aObjSize[1,2] + 5 )				SAY StrZero(Val(SRA->RA_MAT),Len(SRA->RA_MAT))	SIZE 050,10 OF oDlg PIXEL FONT oFont
			@ aObjSize[1,1]+20, ( ( aObjSize[1,4]/100*10 ) + 5 )	SAY If(lOfuscaNom,Replicate('*',15),OemToAnsi(SRA->RA_NOME))	SIZE 146,10 OF oDlg PIXEL FONT oFont
			@ aObjSize[1,1]+20, ( ( aObjSize[1,4]/100*80 ) + 5 )	SAY If(lOfuscaAdm,Replicate('*',10),Dtoc(SRA->RA_ADMISSA))		SIZE 050,10 OF oDlg PIXEL FONT oFont

			@ aGpGdCoords[1]+13,aGpGdCoords[2]		SAY OemToAnsi(STR0013)	SIZE 120,10 OF oDlg PIXEL FONT oFont															// "Periodos de Pre-Abonos"

			@ aGpGdCoords[1]+13,(aGpGdCoords[4]-25.5) SAY oLinhas VAR StrZero(IF(Type("n")!="U",n,0),4)+"/"+StrZero(Len(aCols),4) SIZE 146,10 OF oDlg PIXEL FONT oFont


			aArrayClone := aClone(aCols)

			If '6.09'$(cVersao)
                oGet := MSGetDados():New(aGdCoords[1],aGdCoords[2],aGdCoords[3],aGdCoords[4],nOpcx														 ,"Pn350LinOK","Pn350TudOK","",If(nOpcx=2.Or.nOpcx=5,Nil,.T.),If(!Empty(aAltera),aAltera,Nil), , NIL, NIL, NIL		  , NIL			, NIL,	"fPon350Del()")
				oGet:oBrowse:bChange := { || oLinhas:Refresh() }
			Else
			    oGet := MsNewGetDados():New(aGdCoords[1],aGdCoords[2],aGdCoords[3],aGdCoords[4],IF(nOpcX==2.Or.nOpcX==5,0,GD_INSERT+GD_UPDATE+GD_DELETE	),"Pn350LinOK","Pn350TudOK","",If(!Empty(aAltera),aAltera,Nil) ,0 , 99999, NIL, NIL, "fPon350Del()"	, oDlg			, aClone(aHeader)	,aClone(aCols))
			Endif

		   	ACTIVATE MSDIALOG oDlg ON INIT (EnchoiceBar( oDlg , bSet15 , bSet24 , Nil , Nil ), oDlg:Refresh()) CENTERED
		    SetaPilha()
	Else
		nOpca := 1
		
		If !MsGetDAuto(aAutoItens,"Pn350LinOK",{|| Pn350TudOK()}, aAutoCab, nOpcx)
			nOpcA := 0
		EndIf
	Endif
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se nao For Exclusao                                           ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF nOpcX != 5
		IF nOpcA == 1 .and. ( nOpcX == 3 .or. nOpcX == 4 )

	        Begin Transaction

	            /*
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Grava as Marcacoes                                            ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
				If ( lPEaCols )
					aGrava	:= aClone(aCols)
				Else
	        		If ( !l350Auto )
						aGrava	:= aClone(oGet:aCols)
					Else
						aGrava	:= aClone(aCols)
					EndIf
				EndIf
        		Pn350Grava( aGrava,aRecno,aHeader,nOpcX,{"DTPREI","DTPREF","CODABO"})
		       	/*
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Processa Gatilhos                                             ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		        EvalTrigger()
			End Transaction
		EndIF
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Se for Exclusao                                               ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	ElseIF nOpcA == 1 .and. nOpcX == 5
	   	Pn350Dele(aRecno)
	EndIF

	MBrChgLoop(.F.)

End Sequence

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura o Estado das Teclas de Atalho conforme Entrada 	  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
RestKeys( aKeys )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura os Dados de Entrada								  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
RestArea( aAreaSRA )

If nOpcA == 1 .and. nOpcX == 3
	MbrChgLoop( .F. )
EndIf

Return( NIL )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pn350LinOk	³ Autor ³MauricioMR            ³ Data ³12/04/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Valida a Linha Digitada na GetDados                          ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn350LinOk                                     			 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³oGet-> Objeto da Getdados									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRet                                                 	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA350                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Pn350LinOk(oGet)

Local cHelp			:= ""
Local cPrefix		:= ( PrefixoCpo( "RF0"  )  + "_" )
Local dDtPreI		:= Ctod('')
Local dDtPreF		:= Ctod('')
Local dPerIni		:= Ctod('')
Local dPerFim		:= Ctod('')
Local lRet			:= .T.
Local nPosDtPreI	:= GdFieldPos(cPrefix+"DTPREI")
Local nPosDtPreF	:= GdFieldPos(cPrefix+"DTPREF")
Local nPosHorIni	:= GdFieldPos(cPrefix+"HORINI")
Local nPosHorFim	:= GdFieldPos(cPrefix+"HORFIM")
Local nPosHorTab	:= GdFieldPos(cPrefix+"HORTAB")
Local nPosFlag		:= GdFieldPos(cPrefix+"FLAG")
Local nPosAbona		:= GdFieldPos(cPrefix+"ABONA")
Local nPosDif		:= 0
Local nHorIni		:= 0.00
Local nHorFim		:= 0.00
Local nLenaCols		:= 0

//-- Obtem o Periodo de Apontamento em Aberto
GetPonMesDat( @dPerIni , @dPerFim )

nLenaCols:=Len(aCols)

IF !GdDeleted() .and. aCols[ n , nPosAbona ] <> "S" //Se abono já foi utilizado não precisa validar

	Begin Sequence
		/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Consiste Data+Horarios 										   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			dDtPreI	:= aCols[ n , nPosDtPreI ]
			nHorIni	:= aCols[ n , nPosHorIni ]
			dDtPreF	:= aCols[ n , nPosDtPreF ]
			nHorFim	:= aCols[ n , nPosHorFim ]
	        cConfTab:= aCols[ n , nPosHorTab ]

			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Nao sao Permitidas Horas Em Branco Se Nao Serao Herdadas da Tabela		   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			IF 	(!Empty(nHorIni) .OR. !Empty(nHorFim)) .And. ( cConfTab == 'S')
			    cHelp := STR0058	// "Nao Informe Horas se o Horario sera Conforme Tabela de Horario Padrao."
			  	Help( ' ' , 1 , 'PN230INCON' , , OemToAnsi( cHelp ) , 5 , 0 )
				lRet:=.F.
				Break
			Endif

			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Nao sao Permitidas Datas Em Branco							   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			IF 	Empty(dDtPreI) .OR. Empty(dDtPreF)
			    cHelp := STR0057	// "Nao sao Permitidas Datas Em Branco"
			  	Help( ' ' , 1 , 'PN230INCON' , , OemToAnsi( cHelp ) , 5 , 0 )
				lRet:=.F.
 				Break
			Endif

         	/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Nao Permite que novos Periodos sejam Anteriores ao Periodo em Aberto  	      ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
            If  dDtPreI < dPerIni   .AND. n > nRec350
             	cHelp := STR0054 + DTOC(dPerIni)	// "Nao sao Permitidos Periodos Anteriores ao Dia : "
			  	Help( ' ' , 1 , 'PN230INCON' , , OemToAnsi( cHelp ) , 5 , 0 )
				lRet:=.F.
				Break
            Endif

			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Verifica a Existencia de Horas Zeradas sem Assumir H.Padrao   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If  (nHorIni  == nHorFim) .And. Empty(nHorIni) .And. ( cConfTab <> 'S')

			    If MsgYesNo(OemToAnsi(STR0059),OemToAnsi(STR0040)) // "As Horas Nao Foram Informadas. Assumir Horario Conforme Tabela de Horario Padrao?" ## "Atencao"
			       aCols[ n , nPosHorTab ] := 'S'
			    Else
			    	lRet:=.F.
					Break
			    Endif
			Endif

			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Verifica a Existencia de Horas Identicas <> 0				   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If  (nHorIni  == nHorFim) .and. 	(dDtPreI ==	dDtPreF) .And. !Empty(nHorIni)

			    cHelp := STR0051	// "Horas em Duplicidade para a mesma Data"
			  	Help( ' ' , 1 , 'PN230INCON' , , OemToAnsi( cHelp ) , 5 , 0 )
				lRet:=.F.
				Break
			Endif

			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Verifica se a hora fim eh menor que a hora inicio quando a    ³
			³data inicial e final do pre abono for igual.				   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If  (dDtPreI ==	dDtPreF) .And. (nHorFim < nHorIni)
			    cHelp := STR0060	// "Hora Final Menor que a Hora Inicial para o Periodo."
			  	Help( ' ' , 1 , 'PN230INCON' , , OemToAnsi( cHelp ) , 5 , 0 )
				lRet:=.F.
				Break
			Endif

			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Verifica se Codigo do Abono eh Valido						   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If !Pn350VCod(n)
				lRet:=.F.
				Break
			Endif

			If !lRet
			   Break
			Endif

	End Sequence

EndIF

/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se Lancamento Consistente, Verifica se Houve Manutencao em    ³
	³Lancamentos Anteriores										   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
If lRet
   If n <= Len( aArrayClone )
   	  If !fCompArray( aCols[ n ] , aArrayClone[ n ], @nPosDif ) .AND. nPosDif <> nPosFlag
   	     aCols[n, nPosFlag] := 'M'
   	  Else
         aCols[n, nPosFlag] := aArrayClone[n, nPosFlag]
   	  Endif
   Endif
Endif

Return( lRet )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pn350TudOk	³ Autor ³MauricioMR            ³ Data ³12/04/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Valida Todos os Itens da GetDados                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn350TudOk()                                   			 	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³VOID                                                	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRet                                                 	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA350                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function Pn350TudOk(oGet)

Local cHelp			:= ""
Local cHorIni		:= ''
Local cHorFim		:= ''
Local cLimIni		:= ""
Local cLimFim		:= ""
Local cPrefix		:= ( PrefixoCpo( "RF0"  )  + "_" )
Local lRet			:= .T.
Local nPosDtPreI	:= GdFieldPos(cPrefix+"DTPREI")
Local nPosDtPreF	:= GdFieldPos(cPrefix+"DTPREF")
Local nPosHorIni	:= GdFieldPos(cPrefix+"HORINI")
Local nPosHorFim	:= GdFieldPos(cPrefix+"HORFIM")
Local nPosHorTab	:= GdFieldPos(cPrefix+"HORTAB")
Local nX			:= 0
Local nY			:= 0
Local nLenaCols		:= Len(aCols)

//-- Corre Cada um dos Horarios do Dia
For nX:=1 to nLenaCols
	//-- Se estiver deletado despreza-o
	If GdDeleted(nX)
		If l350Auto
			If !fPon350Del(nX)
				lRet := .F. 
				EXIT
			EndIf
		Else
			Loop
		EndIf
	Endif
	
	//-- Converte Data Hora  para Criar Limite
	cLimIni := DataHora2Str( aCols[ nX , nPosDtPreI ] , aCols[ nX , nPosHorIni] )

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se for Assumido o Horario Padrao, Forca a Hora Final como 23.59 para testar  ³
	³sobreposicao de horarios.													  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	nHorFim := If( ( aCols[ nX , nPosHorTab ]== 'S' )  , 23.59, aCols[ nX , nPosHorFim ] )

	cLimFim := DataHora2Str( aCols[ nX , nPosDtPreF ] , nHorFim )
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Verifica a Consistencia entre horarios de um Mesmo Periodo				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF 	(cLimFim < cLimIni)
   	 	cHelp := STR0060	// "Hora Final Menor que a Hora Inicial para o Periodo."
  		Help( ' ' , 1 , 'PN230INCON' , , OemToAnsi( cHelp ) , 5 , 0 )
		lRet:=.F.
		Return lRet
	Endif
	
    //-- Corre os Demais Horarios do Dia
	For nY:=1 to nLenaCols
        //-- Se for o mesmo horario que deu origem ao limite ou se estiver deletado despreza-o
		If nX==nY .or. GdDeleted(nY)
			Loop
		Endif
        //-- Converte a Data+Hora do Horario Lido
		cHorIni := DataHora2Str( aCols[ nY , nPosDtPreI ] , aCols[ nY , nPosHorIni] )
		
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Se for Assumido o Horario Padrao, Forca a Hora Final como 23.59 para testar  ³
		³sobreposicao de horarios.													  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		nHorFim := If( ( aCols[ nY , nPosHorTab ]== 'S' )  , 23.59, aCols[ nY , nPosHorFim ] )
		
		cHorFim := DataHora2Str( aCols[ nY , nPosDtPreF ] , nHorFim )
		
        //-- Verifica se o Horario Lido esta contido Total ou Parcial no Limite criado
		If (cHorIni < cLimFim .AND. cHorIni >= cLimIni) .Or. (cHorFim < cLimFim .AND. cHorFim > cLimIni)
			lRet:=.F.
        	cHelp:= STR0052 +STRZERO(nY,4)  // "Existe Sobreposicao de Horarios para o Periodo"
			Help( ' ' , 1 , 'PN230INCON' , , OemToAnsi( cHelp ) , 5 , 0 )
			Exit
        Endif
	Next nY
	
	If !lRet
		Exit
	Endif
	
Next nX

Return( lRet )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pn350Grava  ³ Autor ³Mauricio MR           ³ Data ³12/04/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Grava Informacoes no RF0                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn350Grava(aCols,aRecno,aHeader,nOpcX)				   		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³aCols   -> Array com as Informacoes a serem Gravadas 	     ³
³          ³aRecno  -> Registros Existentes no RF0               		 ³
³          ³aHeader -> Array com os Campos                      		 ³
³          ³nOpcX   -> Tipo de Operacao: 3 = Inclusao , 4 = Alteracao	 ³
³          ³aCampos -> Campos p/ verificacao de existencia de lancamento ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA350                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function Pn350Grava(aCols,aRecno,aHeader,nOpcX, aCampos)

Local aArea			:= GetArea()
Local cAlias		:= "RF0"
Local cPrefix		:= ( PrefixoCpo( cAlias ) + "_" )
Local cFil			:= SRA->RA_FILIAL
Local cMat			:= SRA->RA_MAT
Local cChave		:= ""
Local naPosCampo	:= Array(Len(aCampos))
Local nArray		:= 0.00
Local nForArray		:= Len( aCols )
Local nRecno		:= 0.00
Local nHeader		:= 0.00
Local nForX         := 0.00
Local nForHeader	:= Len( aHeader )
Local nPosDtPreI	:= GdFieldPos(cPrefix+"DTPREI")
Local nPosDtPreF	:= GdFieldPos(cPrefix+"DTPREF")
Local nPosHrIni		:= GdFieldPos(cPrefix+"HORINI")
Local nPosHrFim		:= GdFieldPos(cPrefix+"HORFIM")
Local lAppend		:= .F.
Local lGrava		:= .T.

//-- Verifica a Existencia de Lancamento Valido para Gravacao
//-- Pois como sempre teremos um lancamento vazio para cada manutencao, na confirmacao da gravacao
//-- sem manutencao, esses lancamentos deverao ser descartados.
If Len(aCols)==1
    //-- Inicializa todas as posicioes dos campos de consistencia
    aFill(naPosCampo,0.00)
    //-- Define o posicionamento de cada um dos campos de consistencia de integridade
    For nForX:=1 To Len(aCampos)
    	naPosCampo[nForX]	:= GdFieldPos(cPrefix+aCampos[nForX])
    	//-- Se houver inconsistencia de localizacao de campos no aheader nao grava registros
    	If Empty(naPosCampo[nForx] )
    	   lGrava:= .F.
    	   Exit
    	Endif
    Next nForX

    If lGrava
	    //-- Verifica a Integridade de todos os campos
	    //-- Altera flag de gravacao para .F. de modo que iremos detectar a ocorrencia de pelo
	    //-- menos uma hora nao nula. Se isso ocorrer, entao temos um horario valido e alteramos
	    //-- o flag de gravacao para permitir a gravacao do item.
	    lGrava:=.F.
	    For nForX:=1 To Len(aCampos)
		    //-- Se os Campos para integridade do lancamento estiverem vazios, nao grava lancamento
	    	If !Empty( aCols[  1, naPosCampo[nForx] ] )
	    	   lGrava:=.T.
	    	   Exit
	    	Endif
	    Next nForX
    Endif

Endif

If lGrava
	(cAlias)->( dbSetOrder( RetOrdem(cAlias) ) )

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Grava as Marcacoes                                            ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF nOpcX == 3  // Inclusao
		For nArray := 1 To nForArray
			IF !GdDeleted(nArray,,aCols) //Nao Grava Registros Deletados
			    cChave := cFil + cMat + Dtos(aCols[ nArray , nPosDtPreI ] ) +  Str( aCols[ nArray , nPosHrIni ] , 5 , 2 )
				lAppend := ( (cAlias)->( MsSeek( cChave , .F. ) ) )
				RecLock(cAlias,!lAppend)
				(cAlias)->(&(cPrefix+"FILIAL"))	:= cFil
				(cAlias)->(&(cPrefix+"MAT"))		:= cMat
				For nHeader := 1 To nForHeader
					IF (cAlias)->( FieldPos ( aHeader[ nHeader , 2 ] ) > 0 )
						(cAlias)->( FieldPut( FieldPos ( aHeader[ nHeader , 2 ] ) , aCols[ nArray , nHeader ] ) )
					EndIF
				Next nHeader
				( cAlias )->( MsUnLock() )
			EndIF
		Next nArray
	ElseIF nOpcX == 4 //Alteracao
	    //-- Nao houve inclusao de novos Elementos
		IF nRec350 == nForArray
			//-- Corre todos os Elementos
			For nArray := 1 To nForArray
				//-- Se Existir Registro correspondente ao Elemento (Neste Caso sempre vai existir)
				//-- Posiciona
				IF !( lAppend := Empty( aRecno[ nArray ] ) )
					(cAlias)->( dbGoto( aRecno[ nArray ] ) )
				EndIF
				//-- Para Elementos Nao deletados
				IF !GdDeleted(nArray,,aCols)
				    //-- Cria/Bloqueia Registro
					RecLock(cAlias,lAppend)
					//-- Salva Campos que Nao fizeram parte do aHeader
					(cAlias)->(&(cPrefix+"FILIAL"))	:= cFil
					(cAlias)->(&(cPrefix+"MAT"))		:= cMat
					//-- Corre todos os campos do aHeader
					For nHeader := 1 To nForHeader
					    //-- Se o campo foi encontrado (Nao virtual, por exemplo)
					    //-- Grava seu novo conteudo
						IF (cAlias)->( FieldPos ( aHeader[ nHeader , 2 ] ) > 0 )
							(cAlias)->( FieldPut( FieldPos ( aHeader[ nHeader , 2 ] ) , aCols[ nArray , nHeader ] ) )
						EndIF
					Next nHeader
					//-- Desbloqueia registro
					( cAlias )->( MsUnLock() )
				//-- Se Elemento Deletado e exisitir registro associado, deleta-o
				ElseIF !lAppend
					RecLock(cAlias,lAppend)
					(cAlias)->( dbDelete() )
					( cAlias )->( MsUnLock() )
				EndIF
			Next nArray
		//-- Se ocorreu inclusao de novos elementos
		ElseIF nRec350 < nForArray
		    //-- Corre todos os registros pre-existentes
			For nRecno := 1 To nRec350
				//-- Se existir registro associado posiciona
				IF !( lAppend := Empty( aRecno[ nRecno ] ) )
					(cAlias)->( dbGoto( aRecno[ nRecno ] ) )
				EndIF
				//-- Se elememento Nao deletado
				IF !GdDeleted( nRecno,,aCols )
				    //-- Bloqueia/Cria novo registro
					RecLock(cAlias,lAppend)
					//-- Atualiza campos que nao fizeram parte do aHeader
					(cAlias)->(&(cPrefix+"FILIAL"))	:= cFil
					(cAlias)->(&(cPrefix+"MAT"))		:= cMat
					//-- Corre todas as colunas do aHeader
					For nHeader := 1 To nForHeader
	                    //-- Se existir o campo (nao eh virtual, por exemplo)
						IF (cAlias)->( FieldPos ( aHeader[ nHeader , 2 ] ) > 0 )
						    //-- Grava novo conteudo
							(cAlias)->( FieldPut( FieldPos ( aHeader[ nHeader , 2 ] ) , aCols[ nRecno , nHeader ] ) )
						EndIF
					Next nHeader
				//-- Para Elementos Deletados
				ElseIF !lAppend
				    //-- Bloqueia Registro e Deleta-o
					RecLock(cAlias,lAppend)
					(cAlias)->( dbDelete() )
				EndIF
				( cAlias )->( MsUnLock() )
			Next nRecno

			//-- Corre os novos Elementos
	        nRecno:=If(nRecno == 0.00,1, nRecno)

	        For nArray := nRecno To nForArray
	            //-- Para Elementos Nao Deletados
				IF !GdDeleted(nArray,,aCols) //Nao Grava Registros Deletados
				 	cChave := cFil + cMat + Dtos(aCols[ nArray , nPosDtPreI ] ) + Str( aCols[ nArray , nPosHrIni ] , 5 , 2 )
					//-- Verifica a Existencia do Elemento
					lAppend := ( (cAlias)->( MsSeek( cChave , .F. ) ) )
					//-- Cria/Bloqueia elementos
					RecLock(cAlias,!lAppend)
					//-- Atualiza campos que nao fizeram parte do aHeader
					(cAlias)->(&(cPrefix+"FILIAL"))	:= cFil
					(cAlias)->(&(cPrefix+"MAT"))		:= cMat
				   	//-- Corre todas as colunas do aHeader
					For nHeader := 1 To nForHeader
					 //-- Se existir o campo (nao eh virtual, por exemplo)
						IF (cAlias)->( FieldPos ( aHeader[ nHeader , 2 ] ) > 0 )
							(cAlias)->( FieldPut( FieldPos ( aHeader[ nHeader , 2 ] ) , aCols[ nArray , nHeader ] ) )
						EndIF
					Next nHeader
					( cAlias )->( MsUnLock() )
				EndIF
			Next nArray
		//-- Se ocorreu Delecao de Elementos
		Else
			//-- Corre todos os registros pre-existentes
			For nRecno := 1 To nRec350
				//-- Se existir registro associado posiciona
				IF !( lAppend := Empty( aRecno[ nRecno] ) )
					(cAlias)->( dbGoto( aRecno[ nRecno] ) )
				EndIF
				//-- Utiliza Area Lida Antes da Manutencao para Gravar os Lancamentos Atuais
				If nRecno <= nForArray
					//-- Se elememento Nao deletado
					IF !GdDeleted(nRecno,,aCols)
					    //-- Bloqueia/Cria novo registro
						RecLock(cAlias,lAppend)
						//-- Atualiza campos que nao fizeram parte do aHeader
						(cAlias)->(&(cPrefix+"FILIAL"))	:= cFil
						(cAlias)->(&(cPrefix+"MAT"))		:= cMat
						//-- Corre todas as colunas do aHeader
						For nHeader := 1 To nForHeader
		                    //-- Se existir o campo (nao eh virtual, por exemplo)
							IF (cAlias)->( FieldPos ( aHeader[ nHeader , 2 ] ) > 0 )
							    //-- Grava novo conteudo
								(cAlias)->( FieldPut( FieldPos ( aHeader[ nHeader , 2 ] ) , aCols[ nRecno , nHeader ] ) )
							EndIF
						Next nHeader
					//-- Para Elementos Deletados
					ElseIF !lAppend
					    //-- Bloqueia Registro e Deleta-o
						RecLock(cAlias,lAppend)
						(cAlias)->( dbDelete() )
					EndIF
					( cAlias )->( MsUnLock() )
				Else
				    //-- Deleta Elementos anteriores a Manutencao
				    RecLock(cAlias,lAppend)
					(cAlias)->( dbDelete() )
					(cAlias )->( MsUnLock() )
				Endif
			Next nRecno
		EndIF
	EndIF
Endif

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Restaura os Dados de Entrada                                  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
RestArea( aArea )

Return( NIL )




/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pn350Dele   ³ Autor ³Mauricio MR           ³ Data ³12/04/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Deleta as Marcacoes do RFO                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn350Dele( aRecno )                                   		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³aRecno -> Array com os Registros a Serem Deletados		     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA350                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function Pn350Dele( aRecno )

Local cAlias 	:= "RF0"
Local lGoto		:= .F.
Local nX	 	:= 0.00

Begin Transaction
	For nX := 1 To nRec350
		IF ( lGoto := !Empty(   aRecno[ nX ] ) )
			(cAlias)->( dbGoto( aRecno[ nX ] ) )
			RecLock(cAlias,.F.,.T.)
			(cAlias)->( dbDelete() )
			( cAlias )->( MsUnLock() )
		EndIF
	Next nX
End Transaction

Return( NIL )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pn350ChoiBar³ Autor ³MauricioMR            ³ Data ³12/04/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Monta Button Bar                                             ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn350ChoiBar												 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³                                                   		     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                          ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA300                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function Pn350ChoiBar( oDlg , bOk , bCancel , oGet , nOpcX , aNotFields , cProg , lSetKey )

Local aKeys			:= GetKeys()
Local bSvSet15		:= { || NIL }
Local bSvSet24		:= { || NIL }


Local bConfirma		:= { || NIL }
Local bCancela		:= { || NIL }
Local lOk			:= .F.
Local lEnd			:= .F.

Local oBar
Local oBtOk
Local oBtCan
Local oBtRec
Local oBtCop
Local oBtCol
Local oBtCal
Local oBtAge
Local oBtSpo
Local oBtHlp

DEFAULT lSetKey := .F.

DEFINE BUTTONBAR oBar SIZE 25,25 3D TOP OF oDlg


bConfirma	:= { || ( lOk := Eval(bOk),ButtonOff(bSvSet15,bSvSet24,lOk,aKeys,lSetKey) ) }
bCancela	:= { || ( lEnd := Eval(bCancel),ButtonOff(bSvSet15,bSvSet24,lEnd,aKeys,lSetKey) ) }

DEFINE BUTTON oBtRec RESOURCE "S4WB005N"  OF oBar GROUP ACTION NaoDisp()	TOOLTIP OemtoAnsi( STR0031 )
oBtRec:cTitle:= OemToAnsi(STR0031)	// "Recortar"
DEFINE BUTTON oBtCop RESOURCE "S4WB006N"  OF oBar GROUP ACTION NaoDisp()	TOOLTIP OemtoAnsi( STR0032 )
oBtCop:cTitle:= OemToAnsi(STR0032)	// "Copiar"
DEFINE BUTTON oBtCol RESOURCE "S4WB007N"  OF oBar GROUP ACTION NaoDisp()	TOOLTIP OemtoAnsi( STR0033 )
oBtCol:cTitle:= OemToAnsi(STR0033)	// "Colar"
DEFINE BUTTON oBtCal RESOURCE "S4WB008N"  OF oBar GROUP ACTION Calculadora() 	TOOLTIP OemtoAnsi( STR0034 )
oBtCal:cTitle:= OemToAnsi(STR0134)	// "Calc"
DEFINE BUTTON oBtAge RESOURCE "S4WB009N"  OF oBar GROUP ACTION Agenda()    	TOOLTIP OemtoAnsi( STR0035 )
oBtAge:cTitle:= OemToAnsi(STR0135)	// "Agenda"
DEFINE BUTTON oBtSpo RESOURCE "S4WB010N"  OF oBar GROUP ACTION OurSpool()  	TOOLTIP OemtoAnsi( STR0036 )
oBtSpo:cTitle:= OemToAnsi(STR0136)	// "Gerencia"
DEFINE BUTTON oBtHlp RESOURCE "S4WB016N"  OF oBar GROUP ACTION HelProg()   	TOOLTIP OemtoAnsi( STR0037 )
oBtHlp:cTitle:= OemToAnsi(STR0137)	// "Help"
DEFINE BUTTON oBtOk  RESOURCE "OK" 		  OF oBar GROUP ACTION Eval( bConfirma )	TOOLTIP OemtoAnsi( STR0038 )
oBtOk:cTitle:= OemToAnsi(STR0138)	// "Ok"
bSvSet15 := SetKey(15,oBtOk:bAction)
DEFINE BUTTON oBtCan RESOURCE "CANCEL"	  OF oBar GROUP	ACTION Eval( bCancela )		TOOLTIP OemtoAnsi( STR0039 )
oBtCan:cTitle	:= OemToAnsi(STR0139)	// "Cancelar"
bSvSet24 		:= SetKey(24,oBtCan:bAction)

oDlg:bSet15 	:= oBtOk:bAction
oDlg:bSet24 	:= oBtCan:bAction
oBar:bRClicked 	:= {|| AllwaysTrue() }

oBtRec:Disable()
oBtCop:Disable()
obtCol:Disable()

IF ( ( nOpcX == 2 ) .or. ( nOpcX == 5 ) )
	oBtCal:Disable()
	oBtAge:Disable()
	oBtSpo:Disable()
	oBtHlp:Disable()

EndIF

Return( NIL )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ButtonOff	³ Autor ³Mauricio MR           ³ Data ³12/04/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Habilita/Desabilita Botoes Confirma e Sair da Rotina         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³ButtonOff(bSet15,bSet24,lOk,aKeys,lSetKey)					 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³bSet15 - Bloco de confirmacao da rotina                	     ³
³          ³bSet24 - Bloco de abandono da  rotina              		     ³
³          ³lOK    - Habilita Bloco de codigo correspondente   		     ³
³          ³aKeys  - Array de teclas ativas antes da  entrada da rotina  ³
³          ³lSetkey- Restaura as teclas originalmente programadas  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.T.                                                  	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA350                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Static Function ButtonOff(bSet15,bSet24,lOk,aKeys,lSetKey)

DEFAULT bSet15	:= { || NIL }
DEFAULT bSet24	:= { || NIL }
DEFAULT lOk		:= .T.
DEFAULT lSetKey	:= .F.

IF ( ValType( lOk ) != "L" )
	lOk := .T.
EndIF

IF lOk
	IF ( ValType( bSet15 ) == "B" )
		SetKey( 15 , bSet15 )
	EndIF
	IF ( ValType( bSet24 ) == "B" )
		SetKey( 24 , bSet24 )
	EndIF
	RestKeys( aKeys , lSetKey )
EndIF

Return( .T. )





/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn350VHor     ³ Autor ³ Mauricio MR           ³ Data ³ 12/04/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida o "Hora Inicial" e "Hora Final"                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA350                                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn350VHor()

Local lRet  	:= .T.
Local cVar  	:= ''
Local cPrefix	:= ( PrefixoCpo( "RF0"  ) + "_" )
Local nPosHrIn	:=GdFieldPos(cPrefix+"HORINI")
Local nPosHrFm	:=GdFieldPos(cPrefix+"HORFIM")

//Atualiza Campo Hora Inicial
If (cVar := ReadVar()) == 'M->RF0_HORINI'
    aCols[n, nPosHrIn]:= M->RF0_HORINI
Endif

//Atualiza Campo Hora Final
If (cVar := ReadVar()) == 'M->RF0_HORFIM'
    aCols[n, nPosHrFm]:= M->RF0_HORFIM
Endif

If aCols[n, nPosHrIn] > 24 .Or. aCols[n, nPosHrFm] > 24
	//-- Consiste horas > 24
	Help('',1,'PN210VHMIN')
	lRet := .F.
ElseIf aCols[n, nPosHrIn] - Int(aCols[n, nPosHrIn]) > 0.59 .Or. aCols[n, nPosHrFm] - Int(aCols[n, nPosHrFm]) > 0.59
	//-- Consiste minutos maior que .59
	Help('',1,'PN210VHMIN')
	lRet := .F.
Endif

Return lRet



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pn350VDtI ³ Autor ³ Mauricio MR           ³ Data ³ 12/04/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Critica a data da linha digitada                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Pn350VDtI()
Local lRet 		:= .T.

Local cPrefix	:= ( PrefixoCpo( "RF0"  ) + "_" )
Local cVar		:= ''
Local dData		:= Ctod('')
Local nPosData	:= GdFieldPos(cPrefix+"DTPREI")

//-- Verifica qual a variavel ativa
cVar:=ReadVar()

dData	:= aCols[ n , nPosData   ]


If EMPTY(dData)
   lRet:= .F.
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pn350VCOD ³ Autor ³ Mauricio MR           ³ Data ³ 20/04/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Critica codigo de Pre-abono                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Pn350VCod(nElem)
Local lRet 		:= .T.
Local cHelp		:= ""
Local cPrefix	:= ( PrefixoCpo( "RF0"  ) + "_" )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verfica se Abono e Valido                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCodAbo := If (nElem <> Nil, aCols[nElem, GdFieldPos(cPrefix+"CODABO") ], M->(&(cPrefix+"CODABO")) )

If !Empty(cCodAbo)
	If !DescAbono(cCodAbo,"L",cPrefix+"DESCABO") .OR. (SP6->P6_PREABO <> 'S')
	   lRet:= .F.
	Endif
Else
	cHelp := STR0056 	// "Codigo do Abono Informado Invalido."
  	Help( ' ' , 1 , 'PN230INCON' , , OemToAnsi( cHelp ) , 5 , 0 )
    lRet:= .F.
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pn350VDtF ³ Autor ³ Mauricio MR           ³ Data ³ 12/04/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Critica a data da linha digitada                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Pn350VDtF()
Local lRet 		:= .T.

Local cPrefix	:= ( PrefixoCpo( "RF0"  ) + "_" )
Local cVar		:= ''
Local dData		:= Ctod('')
Local nPosData	:= GdFieldPos(cPrefix+"DTPREF")

//-- Verifica qual a variavel ativa
cVar:=ReadVar()

If cVar ==  "M->RF0_DTREF"
	dData	:= M->RF0_DTREF
Else
	dData	:= aCols[ n , nPosData   ]
Endif

If EMPTY(dData)
  	lRet:= .F.
Endif

Return lRet



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pn350RDtI ³ Autor ³ Mauricio MR           ³ Data ³ 12/04/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Inicializador da Data                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Pn350RDtI()
Return(dDataBase)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pn350RDtF ³ Autor ³ Mauricio MR           ³ Data ³ 12/04/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Inicializador da Data                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Pn350RDtF()
Return(dDataBase)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pn350RUser³ Autor ³ Mauricio MR           ³ Data ³ 20/04/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Inicializador do Usuario                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Pn350RUser()
Return(UsrRetName(RetCodUsr()))


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³Pn350When     ³ Autor ³ Mauricio MR           ³ Data ³ 22/04/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Habilita ou Nao Entrada de Dados		                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Pn350When()
Local lRet			:= .T.
Local nPosAbona		:= GdFieldPos("RF0_ABONA")

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Nao Aconselha que Periodos ja Abonados sejam modificados/eliminados	      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
If  aCols[ n , nPosAbona ]	== 'S'
	MsgAlert(OemToAnsi(STR0055)) // "Periodos Abonados Nao Devem ser Modificados ou Eliminados."
	lRet:= .F.
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fPon350Del()    ³Autor ³Mauricio MR        ³ Data ³22/04/02  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Liberacao de Delecao de Lancamentos                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fPon350Del()												   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³										 					   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³NIL                                                  	       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observa‡„o³                                                      	   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Pn350			                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*
*/
Function fPon350Del(nLine)
	
	Local lRet			:= .T.
	Local nPosAbona		:= GdFieldPos("RF0_ABONA")
	Local nPosDtIni		:= GdFieldPos("RF0_DTPREI")
	Local nPosDtFim		:= GdFieldPos("RF0_DTPREF")
	Local nPosAbo		:= GdFieldPos("RF0_CODABO")
	Local dPerIni		:= cToD("")
	Local dPerFim		:= cToD("")
	
	Default nLine := 0
	
	nLine := If( nLine > 0, nLine, n)
	
	// Não Aconselha que Periodos ja Abonados sejam modificados/eliminados
	If aCols[ nLine, nPosAbona ] == 'S'
		
		//-- Obtem o Periodo de Apontamento em Aberto
		GetPonMesDat( @dPerIni, @dPerFim )
		If aCols[ nLine, nPosDtFim ] < dPerIni // Períodos anteriores
			Help( ,, "Help",, STR0141, 1, 0,,,,,, {STR0055}) // "Abono já foi utilizado" - "Periodos Abonados Nao Devem ser Modificados ou Eliminados."
			lRet:= .F.
		ElseIf aCols[ nLine, nPosDtIni ] < dPerIni .And. aCols[ nLine, nPosDtFim ] >= dPerIni
			DbSelectArea("SPK")
			DbSetOrder(1)
			SPK->(dbSeek(SRA->RA_FILIAL + SRA->RA_MAT + DToS(dPerIni), .T.))
			
			While SPK->(!EoF() .And. PK_FILIAL + PK_MAT == SRA->RA_FILIAL + SRA->RA_MAT) .And. SPK->PK_DATA <= aCols[ nLine, nPosDtFim ]
				If SPK->(PK_FILIAL + PK_MAT + PK_CODABO) == SRA->RA_FILIAL + SRA->RA_MAT + aCols[nLine, nPosAbo] 
					Help( ,, "Help",, STR0141, 1, 0,,,,,, {STR0142}) // "Para excluir este registro é necessário excluir os apontamentos do funcionário."
					lRet := .F.
					Exit
				EndIf
				SPK->(dbSkip())
			EndDo
			
			// "O pré-abono já foi utilizado em preríodos anteriores, deseja alterar a data final para o último dia do período anterior?"
			If lRet .And. (l350Auto .Or. MsgYesNo(STR0143, STR0141) )
				oGet:aCols[nLine, nPosDtFim] := dPerIni - 1
				oGet:Refresh()
			EndIf
			
			lRet := .F.
			
		ElseIf aCols[ nLine, nPosDtIni ] >= dPerIni .And. aCols[ nLine, nPosDtIni ] <= dPerFim
			DbSelectArea("SPK")
			DbSetOrder(1)
			SPK->(dbSeek(SRA->RA_FILIAL + SRA->RA_MAT + DToS(aCols[nLine, nPosDtIni]), .T. ))
			While SPK->(!EoF() .And. PK_FILIAL + PK_MAT == SRA->RA_FILIAL + SRA->RA_MAT) .And. SPK->PK_DATA <= aCols[ nLine, nPosDtFim ]
				If SPK->(PK_FILIAL + PK_MAT + PK_CODABO) == SRA->RA_FILIAL + SRA->RA_MAT + aCols[nLine, nPosAbo]
					Help( ,, "Help",, STR0141, 1, 0,,,,,, {STR0142}) // "Para excluir este registro é necessário excluir os apontamentos do funcionário."
					lRet := .F.
					Exit
				EndIf
				SPK->(dbSkip())
			EndDo
			
		EndIf
	Endif
	
Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fPon350AllDel   ³Autor ³Mauricio MR        ³ Data ³22/04/02  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Liberacao de Delecao de Lancamentos                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fPon350AllDel												   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³										 					   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³NIL                                                  	       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observa‡„o³                                                      	   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Pn350			                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*
*/
Function fPon350AllDel()
Local lRet			:= .T.
Local cMsg			:= ''
Local nPosAbona		:= GdFieldPos("RF0_ABONA")
Local nX	 		:= 0
Local nFornX 		:= Len( aCols )

For nX := 1 To nFornX
	//-- Se Existir um Lancamento Utilizado
	If aCols[ nX , nPosAbona ]	== 'S'
	   lRet:= .F.
	   Exit
	Endif
Next nX

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Nao Aconselha que Periodos ja Abonados sejam Eliminados            	      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
If  !lRet
    cMsg:= 	OemToAnsi(	STR0061	) 	//"Existem Periodos Abonados que Nao Devem ser Eliminados."
    MsgAlert(cMsg) // cMsg ## "Atencao"
Endif

Return lRet



/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MyPona350 ³ Autor ³ Mauricio MR	        ³ Data ³18.05.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de teste da Rotina Automatica do programa Pona350     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar testes na rotina de    ³±±
±±³          ³Cadastro de Pre-Abonos                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SigaPon                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function My350I()
Local aArea			:=	{}
Local aSRAArea		:=	{}
Local aSP6Area		:=	{}
Local aCabec    	:=  {}
Local aItens    	:=  {}
Local cFuncionario 	:=  ""

Local dPerIni		:= Ctod('')
Local dPerFim		:= Ctod('')

Private lMsHelpAuto := .T. 	// se .t. direciona as mensagens de help para o arq. de log
Private lMsErroAuto := .F. 	//necessario a criacao, pois sera //atualizado quando houver
							//alguma incosistencia nos parametros



//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Abertura do ambiente                                         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PREPARE ENVIRONMENT EMPRESA '01' FILIAL "01" TABLES "SRA", "SP6", "RF0" MODULO "PON"

aArea			:=	(GetArea())
aSRAArea		:=	SRA->(GetArea())
aSP6Area		:=	SP6->(GetArea())


//-- Obtem o Periodo de Apontamento em Aberto
GetPonMesDat( @dPerIni , @dPerFim )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Obtem 1 funcionario			                                 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SRA")
SRA->(DBGOTOP())
cFuncionario := SRA->RA_MAT

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Obtem 1 Motivo				                                 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SP6")
SP6->(DBGOTOP())
cMotivo 	:= SP6->P6_CODIGO


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Teste de Inclusao                                            |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ConOut(Repl("-",80))
	ConOut(PadC("Teste de Inclusao de Periodos de Pre-Abonos",80))
	ConOut("Inicio: "+Time())

	aCabec := {}
	aItens := {}
	aLinha := {}
	aadd(aCabec,{"RF0_MAT"		, cFuncionario	,})
	aadd(aLinha,{"RF0_DTPREI" 	, dPerIni		,})
	aadd(aLinha,{"RF0_HORINI" 	, 2.00			,})
	aadd(aLinha,{"RF0_DTPREF" 	, dPerFim		,})
	aadd(aLinha,{"RF0_HORFIM" 	, 4.00			,})
	aadd(aLinha,{"RF0_CODABO" 	, cMotivo		,})
	aadd(aLinha,{"RF0_HORTAB" 	, 'S'			,})
	aadd(aItens, aLinha)

	MSExecAuto({|x,y,z| PONA350(x,y,z)},aCabec,aItens,3)

	If !lMsErroAuto
		ConOut("Incluido com sucesso! "+cFuncionario)
	Else
		ConOut("Erro na inclusao!")
	EndIf
	ConOut("Fim  : "+Time())

RESET ENVIRONMENT

Return(.T.)

Function My350A()
Local aArea			:=	{}
Local aSRAArea		:=	{}
Local aSP6Area		:=	{}
Local aCabec    	:=  {}
Local aItens    	:=  {}
Local cFuncionario 	:=  ""

Local dPerIni		:= Ctod('')
Local dPerFim		:= Ctod('')

Private lMsHelpAuto := .T. 	// se .t. direciona as mensagens de help para o arq. de log
Private lMsErroAuto := .F. 	//necessario a criacao, pois sera //atualizado quando houver
							//alguma incosistencia nos parametros



//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Abertura do ambiente                                         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PREPARE ENVIRONMENT EMPRESA '01' FILIAL "01" TABLES "SRA", "SP6", "RF0" MODULO "PON"

aArea			:=	(GetArea())
aSRAArea		:=	SRA->(GetArea())
aSP6Area		:=	SP6->(GetArea())


//-- Obtem o Periodo de Apontamento em Aberto
GetPonMesDat( @dPerIni , @dPerFim )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Obtem 1 funcionario			                                 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SRA")
SRA->(DBGOTOP())
cFuncionario := SRA->RA_MAT

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Obtem 1 Motivo				                                 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SP6")
SP6->(DBGOTOP())
cMotivo 	:= SP6->P6_CODIGO




	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Teste de Alteracao                                           |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ConOut(Repl("-",80))
	ConOut("Inicio: "+Time())
	ConOut(PadC("Teste de Alteracao de Periodos de Pre-Abonos",80))

	aCabec := {}
	aItens := {}
	aLinha := {}
	aadd(aCabec,{"RF0_MAT"		, cFuncionario	,})
	aadd(aLinha,{"RF0_DTPREI" 	, dPerIni		,})
	aadd(aLinha,{"RF0_HORINI" 	, 9.00			,})
	aadd(aLinha,{"RF0_DTPREF" 	, dPerFim		,})
	aadd(aLinha,{"RF0_HORFIM" 	, 10.00			,})
	aadd(aLinha,{"RF0_CODABO" 	, cMotivo		,})
	aadd(aLinha,{"RF0_HORTAB" 	, 'S'			,})
	aadd(aItens, aLinha)

	MSExecAuto({|x,y,z| PONA350(x,y,z)},aCabec,aItens,4)


	If !lMsErroAuto
		ConOut("Alterado com sucesso! "+cFuncionario)
	Else
		ConOut("Erro na Alteracao!")
	EndIf
	ConOut("Fim  : "+Time())



RESET ENVIRONMENT

Return(.T.)

Function My350E()
Local aArea			:=	{}
Local aSRAArea		:=	{}
Local aSP6Area		:=	{}
Local aCabec    	:=  {}
Local aItens    	:=  {}
Local cFuncionario 	:=  ""

Local dPerIni		:= Ctod('')
Local dPerFim		:= Ctod('')

Private lMsHelpAuto := .T. 	// se .t. direciona as mensagens de help para o arq. de log
Private lMsErroAuto := .F. 	//necessario a criacao, pois sera //atualizado quando houver
							//alguma incosistencia nos parametros



//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Abertura do ambiente                                         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PREPARE ENVIRONMENT EMPRESA '01' FILIAL "01" TABLES "SRA", "SP6", "RF0" MODULO "PON"

aArea			:=	(GetArea())
aSRAArea		:=	SRA->(GetArea())
aSP6Area		:=	SP6->(GetArea())


//-- Obtem o Periodo de Apontamento em Aberto
GetPonMesDat( @dPerIni , @dPerFim )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Obtem 1 funcionario			                                 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SRA")
SRA->(DBGOTOP())
cFuncionario := SRA->RA_MAT

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Obtem 1 Motivo				                                 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SP6")
SP6->(DBGOTOP())
cMotivo 	:= SP6->P6_CODIGO

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Teste de Exclusao                                            |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ConOut(Repl("-",80))
	ConOut("Inicio: "+Time())
	ConOut(PadC("Teste de Exclusao de Periodos de Pre-Abonos",80))

	aCabec := {}
	aItens := {}
	aLinha := {}
	aadd(aCabec,{"RF0_MAT"		, cFuncionario	,})

	aadd(aLinha,{"RF0_DTPREI" 	, dPerIni		,})
	aadd(aLinha,{"RF0_HORINI" 	, 0.00			,})
	aadd(aLinha,{"RF0_DTPREF" 	, dPerFim		,})
	aadd(aLinha,{"RF0_HORFIM" 	, 0.00			,})
	aadd(aLinha,{"RF0_CODABO" 	, cMotivo		,})
	aadd(aLinha,{"RF0_HORTAB" 	, 'S'			,})
	aadd(aItens, aLinha)

	MSExecAuto({|x,y,z| PONA350(x,y,z)},aCabec,aItens,5)

	If !lMsErroAuto
		ConOut("Excluido com sucesso! "+cFuncionario)
	Else
		ConOut("Erro na Exclusao!")
	EndIf
	ConOut("Fim  : "+Time())

RESET ENVIRONMENT

Return(.T.)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ MenuDef		³Autor³  Luiz Gustavo     ³ Data ³30/11/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Isola opcoes de menu para que as opcoes da rotina possam    ³
³          ³ser lidas pelas bibliotecas Framework da Versao 9.12 .      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA340                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/


Static Function MenuDef()

	Local aRotina :=   {	{ STR0002,"PesqBrw"	 , 0 , 1, ,.F.},; 		//"Pesquisar"
							{ STR0003,"Pn350Atu" , 0 , 2},; 			//"Visualizar"
							{ STR0004,"Pn350Atu" , 0 , 3,,,.T.},;		//"Incluir"
							{ STR0005,"Pn350Atu" , 0 , 4},; 			//"Alterar"
							{ STR0006,"Pn350Atu" , 0 , 5},; 			//"Excluir"
							{ STR0007,"gpLegend" , 0 , 6 , , .F. } ;	//"Legenda"
						}

 Return aRotina


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ fVldPe		³Autor³  Luis Artuso	      ³ Data ³13/10/2015³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Execucao do P.E. PN350ACOLS                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA350                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
*/


Static Function fVldPe()

	aCols := ExecBlock("PN350ACOLS" , .F. , .F. , {aCols})

Return .T.

/*/{Protheus.doc}
@author: Matheus Bizutti
@since:  26/01/16
@return: lRetPE - Retorno para a gravação ou não dos dados.
/*/
Static Function fVldPEGrv()

Local lRetPE := .T.

	lRetPE := ExecBlock("PN350GRV" , .F. , .F. , {aCols})

Return ( lRetPE )
