#INCLUDE "PROTHEUS.CH"

/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁInRhLibFldExecЁAutor ЁMarinaldo de Jesus   Ё Data Ё14/05/2003Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁExecutar Funcoes Dentro de RHLIBFLD                          Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁInRhLibFldExec( cExecIn , aFormParam )						 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁuRet                                                 	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function InRhLibFldExec( cExecIn , aFormParam )
         
Local uRet

DEFAULT cExecIn		:= ""
DEFAULT aFormParam	:= {}

IF !Empty( cExecIn )
	cExecIn	:= BldcExecInFun( cExecIn , aFormParam )
	uRet	:= __ExecMacro( cExecIn )
EndIF

Return( uRet )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁFolderSetOption ЁAutorЁMarinaldo de Jesus Ё Data Ё27/11/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValida a Mudanca de Folder								    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁGenerico 	                                                Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function FolderSetOption(	nNewFolder		,;	//01 -> Folder Para o Qual se Vai
							nLastFolder		,;	//02 -> Folder de Onde se Vem
							aObjFolder		,;	//03 -> Objetos do Folder
							aGdObjects		,;	//04 -> Verifica se o Objeto eh uma GetDados
							nActFolder		,;	//05 -> Folder Ativo
							lVldFolder		 ;	//06 -> Verifica se Deve Efetuar a Validacao do Folder quando nNewFolder nLastFoder forem iguais
						 )

Local lSetOption    := .T.
Local lObjisGd		:= .F.
Local nSetOption	:= 0


Local aClassData
Local lIsObject
Local lIsBlock
Local nFolder
Local nFolders
Local nObj
Local nObjs
Local nPosClassName

DEFAULT lVldFolder	:= .T.
lVldFolder			:= IF( !( lVldFolder ) , ( nNewFolder <> nLastFolder ) , lVldFolder )

nFolders := Len( aObjFolder )
IF ( lVldFolder )
	For nFolder := nLastFolder To nLastFolder
		nObjs	:= Len( aObjFolder[ nFolder ] )
		For nObj := 1 To nObjs
			IF ( lIsObject := ( ValType( aObjFolder[ nFolder , nObj , 01 ] ) == "O" ) )
				IF ( lIsBlock := ( ValType( aObjFolder[ nFolder , nObj , 02 ] ) == "B" ) )
					IF !( lSetOption := Eval( aObjFolder[ nFolder , nObj , 02 ] ) )	//Valid
	        			Exit
	        		EndIF
				EndIF
			EndIF
		Next nObj
		IF !( lSetOption )
			nSetOption	:= nFolder
			Exit
		EndIF
	Next nFolder
EndIF

aGdObjects := {}
For nFolder := 1 To nFolders
   	aAdd( aGdObjects , {} )
	nObjs := Len( aObjFolder[ nFolder ] )
	For nObj := 1 To nObjs
		lObjisGd := .F.
		IF ( lIsObject := ( ValType( aObjFolder[ nFolder , nObj , 01 ] ) == "O" ) )
			aClassData	:= ClassDataArr( aObjFolder[ nFolder , nObj , 01 ] )
			IF ( ( nPosClassName := aScan( aClassData , { |eData| ( Upper( AllTrim( eData[1] ) ) == "CCLASSNAME" ) } ) ) > 0 )
				lObjisGd := ( aClassData[ nPosClassName , 2 ] $ "MSNEWGETDADOS/MSGETDADOS" )
			EndIF
			aObjFolder[ nFolder , nObj , 01 ]:Hide()
		EndIF
		aAdd( aGdObjects[ Len( aGdObjects ) ] , lObjisGd )
	Next nObj
Next nFolder

IF !( lSetOption )
	For nFolder := nSetOption To nSetOption
		nObjs := Len( aObjFolder[ nFolder ] )
		For nObj := 1 To nObjs
    		IF ( lIsObject := ( ValType( aObjFolder[ nFolder , nObj , 01 ] ) == "O" ) )
				aObjFolder[ nFolder , nObj , 01 ]:Show()
				IF ( lIsBlock := ( ValType( aObjFolder[ nFolder , nObj , 03 ] ) == "B" ) )
					Eval( aObjFolder[ nFolder , nObj , 03 ] )	//Init
				EndIF
			EndIF
		Next nObj
	Next nFolder
Else
	For nFolder := nNewFolder To nNewFolder
		nObjs := Len( aObjFolder[ nFolder ] )
		For nObj := 1 To nObjs
			IF ( lIsObject := ( ValType( aObjFolder[ nFolder , nObj , 01 ] ) == "O" ) )
				aObjFolder[ nFolder , nObj , 01 ]:Show()
				IF ( lIsBlock := ( ValType( aObjFolder[ nFolder , nObj , 03 ] ) == "B" ) )
					Eval( aObjFolder[ nFolder , nObj , 03 ] )	//Init
				EndIF
			EndIF
		Next nObj
	Next nFolder
	For nFolder := nLastFolder To nLastFolder
		nObjs := Len( aObjFolder[ nFolder ] )
		For nObj := 1 To nObjs
			IF ( Len( aObjFolder[ nFolder , nObj ] ) >= 4 )
				IF ( lIsBlock := ( ValType( aObjFolder[ nFolder , nObj , 04 ] ) == "B" ) )
					Eval( aObjFolder[ nFolder , nObj , 04 ] )	//Exit
				EndIF
			EndIF
		Next nObj
	Next nFolder
EndIF

IF ( nSetOption == 0 )
	IF ( lSetOption )
		nSetOption	:= nNewFolder
	Else
		nSetOption	:= nLastFolder
	EndIF
EndIF
nActFolder	:= nSetOption

Return( lSetOption )
