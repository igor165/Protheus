#INCLUDE "TOTVS.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "GPEA1240.CH"
#INCLUDE "PONCALEN.CH"
#INCLUDE "FWADAPTEREAI.CH"

Static cCpo			:= ""
Static cUltSeq		:= ""
Static lTSREP		:= SuperGetMv( "MV_TSREP" , NIL , .F. )
Static lExec		:= .T.
Static lFechado		:= .F.
Static cEFDAviso
Static lIntegDef 	:= FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI")
Static oGridTSA		:= Nil
Static oGridOld		:= Nil
//Integração com o TAF
Static lRHTAF		:= If(cPaisLoc == 'BRA' ,((SuperGetMv("MV_RHTAF",, .F.) == .T.) .AND. Val(SuperGetMv("MV_FASESOC",/*lHelp*/,' ')) >= 1 ), .F.)
Static lMiddleware  := If( cPaisLoc == 'BRA' .AND. Findfunction("fVerMW"), fVerMW(), .F. )
Static dDcgIni		:= SuperGetMV( "MV_DTCGINI", Nil, CTOD(" / / ") )
Static lGestPubl 	:= if(ExistFunc("fUsaGFP"),fUsaGFP() ,.f.)	//Verifica se utiliza o modulo de Gestao de Folha Publica - SIGAGFP
Static lTCFA040		:= IsInCallStack("TCFA040")
Static cGravaPer    := ""
Static nAfastEAI	:= SuperGetMV("MV_AFASEAI", , 0) // Quantidade mínima de dias para enviar o afastamento via EAI (PIMS)
Static lCpoInt		:= ChkFile("SR8") .And. SR8->(ColumnPos( "R8_INTTAF")) > 0
Static lTemPdSup	:= ChkFile("RCM") .And. RCM->( ColumnPos("RCM_PDSUP") ) > 0
Static cSeqCP00		:= ""
Static lMsgCP00		:= .F.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Gpea240  ³ Autor ³ Mauro Sergio               ³ Data ³ 23.04.96   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cadastramento de Ausencias                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador   ³ Data   ³ BOPS/FNC  ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Leandro Dr.   ³16/04/13³M12RH01    ³Unificacao das Folhas. Conversao para MVC.³±±
±±³              ³        ³RQ0122     ³                                          ³±±
±±³Mohanad Odeh  ³20/03/14³M_RH003    ³Integracao SIGAORG - Substituicao do Posto³±±
±±³              ³        ³315504     ³ no lancamento de uma ausencia que permite³±±
±±³              ³        ³           ³ substituicao                             ³±±
±±³Cecilia C.    ³03/04/14³M_RH003    ³Ajuste para fazer substituicao somente se ³±±
±±³              ³        ³315701     ³parametro MV_IORGGPE = 1.                 ³±±
±±³Jesus Peñaloza³19/06/14³TPWQQO     ³Se modifica para que en Mexico no se pueda³±±
±±³              ³        ³           ³borrar ausencias si tiene alguna          ³±±
±±³              ³        ³           ³incapacidad asociada.                     ³±±
±±³              ³        ³           ³De igual forma no permite la modificacion ³±±
±±³              ³        ³           ³del numero de incapacidad si tiene incap. ³±±
±±³              ³        ³           ³asociadas                                 ³±±
±±³              ³        ³           ³Tampoco permite modificar el resultado de ³±±
±±³              ³        ³           ³la incapacidad si tiene IPP's asociadas   ³±±
±±³              ³        ³           ³en ese caso solo se podria asignar un     ³±±
±±³              ³        ³           ³resultado de tipo 2 o 3                   ³±±
±±³Raquel Hager  ³24/07/14³TPZLMC     ³Inclusao de replicas versao 11  com itens ³±±
±±³              ³        ³           ³do eSocial.                               ³±±
±±³Alberto M.    ³04/11/14³TQWCFF     ³Alteracao na funcao Gp240Commit, para     ³±±
±±³              ³        ³           ³efetuar gravacao da data de vencimento de ³±±
±±³              ³        ³           ³estabilidade na SRA.                      ³±±
±±³Alberto M.    ³10/11/14³TQWCFF     ³Alteracao na funcao Gp240Commit, para     ³±±
±±³              ³        ³           ³atualizar RA_DTVTEST tambem na exclusao   ³±±
±±³              ³        ³           ³de ausencias.                             ³±±
±±³Flavio Corr   ³19/03/15³PCREQ-4163 ³Integração Mensagem Unica                 ³±±
±±³Henrique Vell.³22/04/15³TSBIBK     ³Réplica do chamado TRZUZ9. Corrigida a rot³±±
±±³              ³        ³           ³ina para que os campos relativos a ESocial³±±
±±³              ³        ³           ³possam ser utilizados corretamente.       ³±±
±±³Guilherme     ³30/04/15³TSJR00     ³Implementado em gp240TudOk a verificação  ³±±
±±³Benkendorf    ³        ³           ³do CID correspondente a um acidente,      ³±±
±±³              ³        ³           ³através do numero da CAT.                 ³±±
±±³Christiane V  ³02/07/15³TSMUY2     ³Adaptações para versão 2.0 do eSocial     ³±±
±±³Christiane V  ³29/07/15³PCDEF-52364³Inclusão da limpeza do campo R8_IDEOC     ³±±
±±³JR. Briseno   ³11/08/15³           ³Se recupera funcionalidad de la version 11³±±
±±³              ³        ³           ³en la funcion gp240DiasEmp para prellenar ³±±
±±³              ³        ³           ³los campos R8_DPAGAR,R8_SDPAGAR,R8_DATAINI³±±
±±³Mariana M     ³25/08/15³TSZNIT     ³Ajuste na função gp240LinOk para que nao  ³±±
±±³              ³        ³           ³permita informar afastamento para demitido³±±
±±³Raquel Hager  ³05/10/15³TTNFIA     ³Remocao de validacao de dt de corte.      ³±±
±±³Renan Borges  ³02/10/15³TTKL67     ³Ajuste para calcular numero de dias de au-³±±
±±³              ³        ³           ³sencia corretamente quando este campo for ³±±
±±³              ³        ³           ³zerado e após isso for preenchido o campo ³±±
±±³              ³        ³           ³"Data Final".                             ³±±
±±³gSantacruz    ³30/11/15³pcreq-7944 ³Se agrego la funcion fTpAfa para el gati--³±±
±±³              ³        ³           ³llo R8_TIPOAFA para Chile.Se agrego CHI en³±±
±±³              ³        ³           ³algunas bifurcacion que son de MEX.       ³±±
±±³EstherV.      ³09/12/15³PCDEF-86870³Realocacao do codigo de gravacao de log de³±±
±±³              ³        ³           ³integracao do TSA para apos o FWCommit.   ³±±
±±³Gabriel A.    ³15/12/15³TTT023     ³Ajuste na gp240DiasEmp p/ obter os dias de³±±
±±³              ³        ³           ³empresa do registro que esta sendo editado³±±
±±³M.Camargo     ³20/01/16³TUFZNV     ³Ajustes Localización Chile.               ³±±
±±³M.Camargo     ³01/03/16³TUQBZG     ³Ajustes Localización Colombia.            ³±±
±±³              ³        ³           ³Se modifica ViewDef  que muestre R8_PE Y  ³±±
±±³              ³        ³           ³R8_NUMPAG para Colombia mod 2             ³±±
±±³P.Pompeu      ³17/03/16³TUSA71     ³Correção do ExecAuto                      ³±±
±±³M.Camargo     ³30/03/16³PCDEF2015  ³Mod gp240DiasEmp ya que no actualizaba    ³±±
±±³              ³        ³_2016-3922 ³R8_SDODIAS Y R8DPAGAR.                    ³±±
±±³P.Pompeu      ³07/04/16³TUUEAS     ³Removida Validação de Períodos quando Model±±
±±³              ³        ³           ³é chamado pela Convergência(RHIMP01).     ³±±
±±³Victor A.     ³19/04/16³TUQNA1     ³Ajustes no calculo de dias da empresa     ³±±
±±³              ³        ³           ³quando for informado o campo sequencia.   ³±±
±±³P.Pompeu      ³26/04/16³TUTLLI     ³Correção p/ permitir instanciar o Modelo  ³±±
±±³              ³        ³           ³de dados por outros fontes(execAuto p/ ex)³±±
±±³M. Camargo    ³13/04/16³Tvaoab     |Se agrega Funcion gp240ValAus llamada en  ³±±
±±³              ³        ³           |la función gp240DDerecho para alertar al  ³±±
±±³              ³        ³           ³usuario cuando un ausentismo abarca 2     ³±±
±±³              ³        ³           ³meses.                                    ³±±
±±³P.Pompeu      ³02/05/16³TUZASZ     ³Remoção do Limite de 9 lanc/dia p/ TpAfast³±±
±±³M. Camargo    ³12/05/16³pcdef2015_ |Se agrega Funcion gp240DiasEmp el campo   ³±±
±±³              ³        ³2016-5065  |R8_CONTAFA es usado para Brasil, para MI  ³±±
±±³              ³        ³           ³Mod 2 se utiliza R8_CONTINU               ³±±
±±³              ³        ³           ³                                          ³±±
±±³Raquel Hager  ³15/06/16³TVAV88     ³Incluida validação do campo Calc.Prop. Adi³±±
±±³              ³        ³           ³cionais para permitir o calculo somente pa³±±
±±³              ³        ³           ³ausencias que seja diferente do tipo 4=Con³±±
±±³              ³        ³           ³trole de Dias de Direito.                 ³±±
±±³Raquel Hager  ³31/08/16³TUNDYT     ³Ajuste para viabilizar importação via Mile³±±
±±³              ³        ³           ³através da rotina de lançamentos.         ³±±
±±³Gabriel A.    ³16/90/16³TVYQN8     ³Ajuste para não gerar "error.log" ao      ³±±
±±³              ³        ³           ³preencher o campo duração antes do código ³±±
±±³              ³        ³           ³do afastamento.                           ³±±
±±³Cícero Alves  ³22/09/16³TW1223     ³Alterado o escopo das variáveis oGridTSA e³±±
±±³              ³        ³           ³oGridOld para viabilizar a importação pelo³±±
±±³              ³        ³           ³MILE quando MV_TSREP = .T.				 ³±±
±±³Raquel Hager  ³07/10/16³TWBMAZ     ³Ajuste para não configurar Calc.Prop.Adic.³±±
±±³              ³        ³           ³para afastamento de Maternidade.          ³±±
±±³Raquel H.     ³03/11/16³TWCXMD     ³Inclusão de método SetChAll e acerto no   ³±±
±±³		         ³        ³	          ³SetRelation de acordo com a Filial do func³±±
±±³Renan Borges	 ³26/12/16³MRH-3252   ³Ajuste para preencher campo status da     ³±±
±±³            	 ³        ³           ³ausência corretamente quando o saldo a    ³±±
±±³            	 ³        ³           ³pagar for zerado no fechamento.           ³±±
±±³Raquel Hager  ³27/12/16³246507     ³Realizado ajuste na função aContAfaVal p/ ³±±
±±³              ³        ³           ³permitir sequenciaento de Tipos de Ausên- ³±±
±±³              ³        ³           ³que possuem mesma regra de cálculo.       ³±±
±±³              ³        ³265024     ³Realizado ajuste na fun. gp240DiasDirValid³±±
±±³              ³        ³           ³para validar dias de direito do funcioná- ³±±
±±³              ³        ³           ³rio usando a Filial do funcionário.       ³±±
±±³Raquel Hager  ³17/02/17³MRH-7067   ³Implementada função fSrcdEmp para retornar³±±
±±³              ³        ³           ³dias pagos pela empresa através do cod. de³±±
±±³              ³        ³           ³ausência.  							     ³±±
±±³Paulo O.      ³29/03/17³MRH-8691   ³Removido order by com campos invalidos que³±±
±±³Inzonha       ³        ³           ³estavam causando error log                ³±±
±±³Eduardo V.    ³09/08/17³DRHESOCP-826³Validação de variável de parâmetro de    ³±±
±±³		         ³        ³           ³int. com o TAF				             ³±±
±±³Cecília C.    ³28/08/17³DRHPAG-5467³Ajuste para considerar a filial do funcio-³±±
±±³              ³        ³           ³nário no cadastramento do afastamento re- ³±±
±±³              ³        ³           ³troativo.                                 ³±±
±±³Eduardo V.    ³28/08/17³DRHESOCP-873³Retirada de redundancia de mensagem de   ³±±
±±³		         ³        ³            ³ret. do intafast                         ³±±
±±|Claudinei S.  |15/09/17|DRHESOCP-1149|Ajuste em gp240TudOk() para não gerar   |±±
±±|		         |        |             |error.log quando for para apresentar msg|±±
±±|		         |        |             |de inconsistências no cadastro.         |±±
±±|Marco A. Glez.|03/10/17|TSSERMI01-164|Se realiza localizacion de los campos   |±±
±±|		         |        |             |R8_TPEFD y INTGTAF, que son de uso exclu|±±
±±|		         |        |             |sivo para Brasil en gp240LinOk(). (MEX) |±±
±±³Willian U.    ³27/11/17³DRHPAG-8097  ³Alteração da função gp240DiasDirValid   ³±±
±±³		         ³        ³             ³para permitir a inserção de dias à mais ³±±
±±³		         ³        ³             ³de afastamento do que dias de direito   ³±±
±±³		         ³        ³             ³caso o funcionário for estagiário.      ³±±
±±|Eduardo V.    ³28/03/18³DRHESOCP-3873³Inclu.de nova validação do esocial2.4.02³±±
±±³Luis Enríquez ³10/07/18³DMINA-3613   ³Se excluye a Mexico en validacion de la ³±±
±±³		         ³        ³             ³funcion a240NumDias, que actualiza campo³±±
±±³		         ³        ³             ³R8_DPAGOS, para ausencias creadas con   ³±±
±±³		         ³        ³             ³fechas de periodos cerrados. (MEX)      ³±±
±±³Veronica Flore³02/05/19³DMINA-6587   ³Se agrega descripción del modelo en la  ³±±
±±³		         ³        ³             ³funcion ViewDef.  (COL)                 ³±±
±±³Oscar G.      ³22/05/19³DMINA-6693   ³Se localiza la actualizacion del campo  ³±±
±±³		         ³        ³             ³R8_SDPAGAR en fun. a240NumDias(). (MEX) ³±±
±±³Veronica Flore³09/12/19³DMINA-7908   ³Se agrega bifurcación en la función     ³±±
±±³		         ³        ³             ³gp240VerEdit.  (MEX)                    ³±±
±±³Andres S.     ³12/02/20³DMINA-8190   ³Se agrega campo A8_DATA a bifurcación   ³±±
±±³		         ³        ³  			|para Brasil en la función ViewDef.(MEX) ³±±
±±³Veronica Flore³14/10/20³DMINA-10072  ³Se agrega parametro MV_MSJAUS para      ³±±
±±³		         ³        ³             ³controlae visualización de mensaje      ³±±
±±³		         ³        ³             ³en la fecha de ausencia (MEX|PER|COL)   ³±±
±±³Veronica Flore³23/12/20³DMINA-10790  ³En la función  gp240LinOk() se agrega   ³±±
±±³		         ³        ³             ³validación de fechas para incapacidades ³±±
±±³		         ³        ³             ³y ausencias(MEX)                        ³±±
±±³Laura Medina  ³09/02/21³DMICNS-10314 ³En la función  GpeCalend() se agrega    ³±±
±±³		         ³        ³             ³validación para la rutina de Ausencias  ³±±
±±³		         ³        ³             ³(ARG).                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gpea240(nOpcAuto,xAutoCab,xAutoItens,nOpc)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de variaveis locais         					      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aIndexSRA		:= {}	   	    //Variavel Para Filtro
Local aRegs		 	:= {}
Local aArea			:= {}
Local cFiltraSRA	:= ""			//Variavel para filtro
Local cMsgAlert		:= ""			//Variavel para mensagem ao usuario
Local cFilAux       := ""
Local cMatAux		:= ""
Local bFiltraBrw 	:= {|| Nil}		//Variavel para Filtro
Local lSigaMdtPS := If( SuperGetMv("MV_MDTPS",.F.,"N") == "S", .T. , .F. )
Local cCliMdtPs	 := ""
Local nSizeSA1   := 0
Local nSizeLo1   := 0
Local nSizeTD    := 0
Local nPos		 := 0
Local lGp240Auto := .F.

Private aAutoCab	:= {}
Private aAutoItens	:= {}
Private aPerAtual	:= {}
Private cProcesso	:= ""
Private nColPro	 	:= 2
Private oModlBkp	:= Nil
Private aSR8Respal  := {}
Private lGP240VSUB 	:= ExistBlock("GP240VSUB")
Private cFilFun		:= xFilial("SRA")

cCadastro  := OemToAnsi(STR0009)  //"Cadastro de Ausencias"
lGp240Auto := ( xAutoCab != Nil )

cEFDAviso  		:= If(cPaisLoc == 'BRA' .And. Findfunction("fEFDAviso"), fEFDAviso(), "0")			//Se nao encontrar este parametro apenas emitira alertas

If !IsBlind() .And. ( lRHTAF .Or. lMiddleware )
	fAlertJob()
Endif

If cPaisLoc == "BRA" .And. !IsBlind()
	fMsgPdSup(lTemPdSup)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o Arquivo Esta Vazio                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !ChkVazio("SRA")
	Return
EndIf

If (Type( "lResM2" ) <> "U" .And. lResM2) //Tratamento para chamada da rotina atraves de tela de rescisão (Modelo 2)
	If FWChkFuncAccess( "GPEA240", 4, .T.)
		FWExecView(STR0009,'GPEA240', 4, , { || .T. } ) //"Cadastro de Ausencias"
	ElseIf FWChkFuncAccess( "GPEA240", 2, .T.)
		Aviso( STR0021, STR0061, {STR0062}) //"Anteção" ## "Permissão somente de visualização dos registros." ## "OK"
		FWExecView(STR0009,'GPEA240', 2, , { || .T. } ) //"Cadastro de Ausencias"
	Else
		Aviso( STR0021, STR0060, {STR0062}) //"Anteção" ## "O usuário não tem permissão de acesso a esta rotina." ## "OK"
	EndIf
EndIf

If IsInCallStack("TCFA040")
	_SetOwnerPrvt( "nOpcNewGd", GD_UPDATE )
Else
	_SetOwnerPrvt( "nOpcNewGd", If( nOpc == 2 .or. nOpc == 5 , 0 , GD_INSERT + GD_UPDATE + GD_DELETE))
EndIf

If (Type( "lResM2" ) == "U" .Or. !lResM2)
	SetMnemonicos(NIL,NIL,.T.)
	If nOpcAuto <> Nil
		nOpcao := nOpcAuto
	EndIf

	If lGp240Auto .or. nOpcAuto <> Nil
		If lGp240Auto
			aArea		:= GetArea()
			aAutoCab	:= aClone(xAutoCab)
			aAutoItens	:= aClone(xAutoItens)
			nOpcao 	:= If(nOpc<>Nil,nOpc,nOpcao)
			nOpcao		:= If(nOpcao == 3, 4, nOpcao)
			aRotina 	:= MenuDef()


			If (nPos := aScan(aAutoCab,{|x| UPPER(Alltrim(x[1]))=='RA_FILIAL'})) > 0
				cFilAux := aAutoCab[nPos,2]
			Else
				cFilAux := xFilial("SRA")
			EndIf
			If (nPos := aScan(aAutoCab,{|x| UPPER(Alltrim(x[1]))=='RA_MAT'})) > 0
				cMatAux := aAutoCab[nPos,2]
			EndIf

			DbSelectArea('SRA')
			DbSetOrder(1)

			If !dbSeek(cFilAux+cMatAux)
				AutoGrLog(STR0084 + " " + Alias() + " " + Dtoc(MsDate()) + ' ' + Time() ) // "Tabela "
				AutoGrLog("RA_FILIAL: " + cFilAux)
				AutoGrLog("RA_MAT: " + cMatAux)
				AutoGrLog(STR0085) // "Funcionário não encontrado com dados acima"
				AutoGrLog(Replicate("-",80))
			Else
				oModelAuto := ModelDef()
				If GP240Ini(oModelAuto,nOpcao)
					/*Quando se desejar alterar determinada linha é necessário passar uma posição a mais
					no item no seguinte formato : aAdd(aItem,{"LINPOS","R8_FILIAL+R8_MAT+R8_DATAINI",xFilial("SR8"),SRA->RA_MAT,dStart})*/
					FWMVCRotAuto(oModelAuto,"SRA",nOpcao,{{"GPEA240_SRA",aAutoCab},{"GPEA240_SR8",aAutoItens}})
				EndIf
				/*
					O propósito das linhas a seguir é limpar o objeto da memória para que não dê
					"Reference counter overflow ( over 32600 ) on CodeBlock assignment", erro que acontecia
					quando o ExecAuto era chamado mais de 3000x consecutivas.
					Mais informações: http://tdn.totvs.com/pages/viewpage.action?pageId=146179637
				*/
				oModelAuto:Deactivate()
				oModelAuto:Destroy()
				oModelAuto:= nil
				aSize(aAutoCab,0)
				aAutoCab:= nil
				aSize(aAutoItens,0)
				aAutoItens:= nil
			EndIf
			RestArea(aArea)
		Else
			FWExecView(STR0009,'GPEA240', nOpcao, , { || .T. } ) //"Cadastro de Ausencias"
		EndIf
	Else

		oBrowse := FWMBrowse():New()
		oBrowse:SetAlias('SRA')
		oBrowse:SetDescription(STR0009) //Cadastro de Afastamentos
		GpLegend(@oBrowse,.T.) //Cria legenda
		oBrowse:SetMenuDef( 'GPEA240' )
		oBrowse:SetChgAll(.F.)

		If lSigaMdtps

			dbSelectArea("SA1")
			DbSetOrder(1)

			nSizeSA1   := If((TAMSX3("A1_COD")[1]) < 1,6,(TAMSX3("A1_COD")[1]))
			nSizeLo1   := If((TAMSX3("A1_LOJA")[1]) < 1,2,(TAMSX3("A1_LOJA")[1]))
			nSizeTD    := nSizeSA1+nSizeLo1

			cCliMdtPs := SA1->A1_COD+SA1->A1_LOJA
			cFiltraRh := ChkRh("GPEA240","SRA","1")
			cFiltraRh += IF(!Empty(cFiltraRh),' .and. ','')
			cFiltraRh += 'SubStr(SRA->RA_CC,1,' +AllTrim(Str(nSizeTD))+ ') == "' + cCliMdtps + '"'

			oBrowse:SetFilterDefault(cFiltraRh)

		Else

			//------------------------------------------
			//Busca o filtro a ser utilizado no Browse
			//------------------------------------------
			cFiltraRh 	:= CHKRH("GPEA240","SRA","1")
			If ValType(cFiltraRh) == "L"
				cFiltraRh := If(cFiltraRh,".T.",".F.")
			EndIf

			//Filtro padrao do Browse conforme tabela SRW (Controle de Restricoes de Usuarios)
			oBrowse:SetFilterDefault(cFiltraRh)
		EndIf

		oBrowse:Activate()

	EndIf
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MenuDef   ºAutor  ³Leandro Drumond     º Data ³  17/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Menu Funcional                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MenuDef()
Local aRotina 		:=  {}

ADD OPTION aRotina TITLE STR0004 ACTION 'PesqBrw'          	OPERATION 1 ACCESS 0 //"Pesquisar"
ADD OPTION aRotina TITLE STR0005 ACTION 'VIEWDEF.GPEA240'	OPERATION 2 ACCESS 0 //"Visualizar"
ADD OPTION aRotina TITLE STR0082 ACTION 'VIEWDEF.GPEA240' 	OPERATION 3 ACCESS 0 //"Manutencao"
ADD OPTION aRotina TITLE STR0008 ACTION 'VIEWDEF.GPEA240' 	OPERATION 5 ACCESS 0 //"Excluir"

If cPaisLoc == "MEX"
	ADD OPTION aRotina TITLE STR0050 ACTION 'GPEA570' 	OPERATION 6 ACCESS 0 //"Solic. Ferias"
EndIf
If lGestPubl .AND. cModulo $ 'GFP*VDF'
	ADD OPTION aRotina TITLE STR0228 ACTION 'GPER580' 	OPERATION 7 ACCESS 0 //"RELATORIO DE AFASTAMENTOS"
EndIf

Return aRotina
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ModelDef  ºAutor  ³Leandro Drumond     º Data ³  17/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Definicao do modelo de dados do Cadastro de Ausencias       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ModelDef()
Local aRemovCmps := {}
Local aAux		 := {}
Local oStructSRA
Local oStructSR8
Local oModel

oModel:= MpFormModel():New("GPEA240", /*Pre-Validacao*/, { |oModel| gp240TudOk(oModel) }/*Pos-Validacao*/, { |oModel| Gp240Commit(oModel) }/*Commit*/, /*Cancel*/)

oStructSRA := FWFormStruct(1,"SRA",{|cCampo| AllTrim(cCampo)+"|" $ "RA_FILIAL|RA_MAT|RA_NOME|RA_ADMISSA|"})
oStructSR8 := FWFormStruct(1,"SR8")
oModel:AddFields("GPEA240_SRA", /*cOwner*/, oStructSRA , /*Pre-Validacao*/,/*Pos-Validacao*/,/*Carga*/)
oModel:GetModel("GPEA240_SRA"):SetOnlyView( .T. )
oModel:GetModel("GPEA240_SRA"):SetOnlyQuery( .T. )

oStructSR8:SetProperty( 'R8_MAT'	,MODEL_FIELD_OBRIGAT,.F.)

oModel:AddGrid("GPEA240_SR8", "GPEA240_SRA"/*cOwner*/, oStructSR8 , { |oGrid, nLine, cAction, cField| Gp240DelOk(oGrid, nLine, cAction, cField) }/*bLinePre*/, { |oGrid| Gp240LinOk(oGrid) }  /*bLinePost*/, /*bPre*/,  /*bPost*/,/*bLoad*/)
oModel:GetModel('GPEA240_SR8'):SetOptional(.T.)
oModel:GetModel('GPEA240_SR8'):SetUseOldGrid(.T.)

oStructSR8:SetProperty("R8_SEQ",MODEL_FIELD_INIT,FwBuildFeature( STRUCT_FEATURE_INIPAD, 'Gp240GetSeq()' ) )
//Dicionário fechado, quando abrir, deve ser alterado o valid no SX3. Quando o release atual estiver correto, retirar este valid.
If cPaisLoc == "BRA"
	oStructSR8:SetProperty("R8_TPEFD",MODEL_FIELD_VALID,FwBuildFeature( STRUCT_FEATURE_VALID,'ValidRCC("S048",M->R8_TPEFD,1,2)'))
EndIf

oStructSR8:SetProperty( "R8_DATAINI", MODEL_FIELD_WHEN, { |oGrid| !( Empty(oGrid:GetValue("R8_TIPOAFA")) ) } )
oStructSR8:SetProperty( "R8_DURACAO", MODEL_FIELD_WHEN, { |oGrid| !( Empty(oGrid:GetValue("R8_TIPOAFA")) ) } )
oStructSR8:SetProperty( "R8_DATAFIM", MODEL_FIELD_WHEN, { |oGrid| !( Empty(oGrid:GetValue("R8_TIPOAFA")) ) } )

aAux := FwStruTrigger('R8_TIPOAFA','R8_DIASEMP','RCM->RCM_DIASEM',.T.,'RCM',1,'xFilial("RCM")+M->R8_TIPOAFA')
oStructSR8:AddTrigger( aAux[1] , aAux[2] , aAux[3] , aAux[4] )

If cPaisLoc == "BRA"
	aAux := FwStruTrigger('R8_TIPOAFA','R8_TPEFD','RCM->RCM_TPEFD',.T.,'RCM',1,'xFilial("RCM")+M->R8_TIPOAFA')
	oStructSR8:AddTrigger( aAux[1] , aAux[2] , aAux[3] , aAux[4] )
EndIf

If cPaisLoc == "BRA" .And. lCpoInt
	aAux := FwStruTrigger('R8_TIPOAFA', 'R8_INTTAF', 'RCM->RCM_INTTAF', .T.,'RCM', 1, 'xFilial("RCM") + M->R8_TIPOAFA')
	oStructSR8:AddTrigger( aAux[1] , aAux[2] , aAux[3] , aAux[4] )
	aAux := FwStruTrigger('R8_DATAFIM', 'R8_INTTAF', 'RCM->RCM_INTTAF', .T.,'RCM', 1, 'xFilial("RCM") + M->R8_TIPOAFA')
	oStructSR8:AddTrigger( aAux[1] , aAux[2] , aAux[3] , aAux[4] )
	aAux := FwStruTrigger('R8_DURACAO', 'R8_INTTAF', 'RCM->RCM_INTTAF', .T.,'RCM', 1, 'xFilial("RCM") + M->R8_TIPOAFA')
	oStructSR8:AddTrigger( aAux[1] , aAux[2] , aAux[3] , aAux[4] )
EndIf

If cPaisLoc <> "COL"
	aAux := FwStruTrigger('R8_CONTAFA','R8_DIASEMP','RCM->RCM_DIASEM',.T.,'RCM',1,'xFilial("RCM")+M->R8_TIPOAFA','Empty(AllTrim(M->R8_CONTAFA))')
	oStructSR8:AddTrigger( aAux[1] , aAux[2] , aAux[3] , aAux[4] )

	aAux := FwStruTrigger('R8_CONTAFA','R8_DPAGAR','MIN(RCM->RCM_DIASEM,M->R8_DURACAO)',.T.,'RCM',1,'xFilial("RCM")+M->R8_TIPOAFA','Empty(AllTrim(M->R8_CONTAFA))')
	oStructSR8:AddTrigger( aAux[1] , aAux[2] , aAux[3] , aAux[4] )
EndIf

FWMemoVirtual( oStructSR8,{ { 'R8_CODMEMO', 'R8_MEMO', "RDY"} } )

oModel:GetModel("GPEA240_SR8"):SetUniqueLine( { "R8_DATAINI" , "R8_TIPOAFA" } )

oModel:SetRelation("GPEA240_SR8",{{"R8_FILIAL",'xFilial("SR8",SRA->RA_FILIAL)'},{"R8_MAT","RA_MAT"}},SR8->(IndexKey()))

//Funcao a ser chamada antes da ativacao do Modelo de Dados.
//Pode ser utilizada para inibir a inicializacao do model.
//Se o retorno for negativo, o Model nao sera exibido e a rotina sera abortada
oModel:SetVldActivate( { |oModel| GP240Ini(oModel,oModel:GetOperation()) } )
oModel:SetActivate( { |oModel| Gp240Load(oModel) } )

Return(oModel)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ViewDef   ºAutor  ³Leandro Drumond     º Data ³  17/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Definicao da tela do Cadastro de Ausencias    			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ViewDef()
Local oModel
Local oStructSRA
Local oStructSR8
Local oView
Local aRemovCmps 	:= {}
Local cCposEsoc		:= "R8_CID/R8_TPEFD/R8_OBSAFAS/R8_NMMED/R8_IDEOC/R8_CRMMED/R8_UFCRM/R8_CNPJCES/R8_TPCES/R8_CNPJSIN/R8_TPSIND/R8_TPEFDAN/R8_ORIGALT/R8_TPPROC/R8_NRPRCJU/R8_DTER/R8_DATALT/R8_TAFKI/R8_TAFKF/R8_INTTAF"
Local cOrdem		:= ""
Local nCont			:= 0
Local nPosCID		:= 0
Local cVerGPE		:= ""
Local bCposS1		:= Nil

oModel	:= FwLoadModel("GPEA240")

oView := FWFormView():New()

oView:SetModel(oModel)

oStructSRA := FWFormStruct(2,"SRA",{|cCampo| AllTrim(cCampo)+"|" $ "RA_MAT|RA_NOME|RA_ADMISSA|"})
oStructSRA:SetNoFolder()

oView:AddField( "GPEA240_SRA" , oStructSRA )

Iif( FindFunction("fVersEsoc"), fVersEsoc("S2230",.F.,,,,@cVerGPE), Nil)
Iif( cVerGPE < "9.0", bCposS1 := {|cCampo| !AllTrim(cCampo)+"|" $ "R8_DTINIF|R8_DTFMF|R8_CNPJE|R8_REMUN|"}, Nil)
oStructSR8 := FWFormStruct(2,"SR8",bCposS1)
oView:AddGrid(  "GPEA240_SR8" , oStructSR8 )

oStructSR8:RemoveField( "R8_MAT" )
oStructSR8:RemoveField( "R8_NUMID" )
oStructSR8:RemoveField( "R8_CODMEMO" )
oStructSR8:RemoveField( "R8_RECIBO" )

If cPaisLoc == "BRA"
	oStructSR8:RemoveField( "R8_INTGTAF" )
	oStructSR8:RemoveField( "R8_DATA" )
	//Reposicionamento dos campos do eSocial para facilitar visualização
	If lRHTAF .Or. lMiddleware
		nPosCID := aScan( oStructSR8:aFields, { |x| x[1] == "R8_CID" } )
		cOrdem	:= oStructSR8:GetProperty( "R8_CID", MVC_VIEW_ORDEM )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_CID", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_TPEFD", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_OBSAFAS", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_NMMED", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_IDEOC", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_CRMMED", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_UFCRM", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_CNPJCES", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_TPCES", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_CNPJSIN", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_TPSIND", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_TPEFDAN", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_ORIGALT", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_TPPROC", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_NRPRCJU", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_DTER", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_DATALT", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_TAFKI", MVC_VIEW_ORDEM, cOrdem )
		cOrdem	:= Soma1(cOrdem)
		oStructSR8:SetProperty( "R8_TAFKF", MVC_VIEW_ORDEM, cOrdem )
		If lCpoInt
			cOrdem	:= Soma1(cOrdem)
			oStructSR8:SetProperty( "R8_INTTAF", MVC_VIEW_ORDEM, cOrdem )
		EndIf
		For nCont := nPosCID+1 To Len(oStructSR8:aFields)
			If !(oStructSR8:aFields[nCont, 1] $ cCposEsoc)
				cOrdem	:= Soma1(cOrdem)
				oStructSR8:SetProperty( oStructSR8:aFields[nCont, 1], MVC_VIEW_ORDEM, cOrdem )
			EndIf
		Next nCont
	EndIf
EndIf
If !(cPaisLoc $ "MEX/CHI/COL/PAR")
    oStructSR8:RemoveField( "R8_PER" )
    oStructSR8:RemoveField( "R8_NUMPAGO" )
EndIf

oStructSR8:RemoveField( "R8_PROCES" )
If !(cPaisLoc $ "PER")
	oStructSR8:RemoveField( "R8_CONTINU" )
EndIf

oView:SetViewProperty("GPEA240_SRA","OnlyView") //Somente visualizacao. Nao permite edicao dos campos do cabecalho (SRA)

oView:createHorizontalBox("FORMFIELD",15)
oView:createHorizontalBox("GRID"     ,85)

oView:SetOwnerView( "GPEA240_SRA","FORMFIELD")
oView:SetOwnerView( "GPEA240_SR8","GRID")

oView:AddIncrementField("GPEA240_SR8","R8_SEQ")

oView:SetCloseOnOk({ || .T. })

oView:cDescription:= STR0009

//Opcao para baixar imagem do atestado medico quando o afastamento foi originado pelo App MeuRH
If FindFunction("FGETIMGMEDICAL")
	oView:AddUserButton(STR0292, "CLIPS", {|| fGetImgMedical( .F., oView ) }) //"Salvar anexo do atestado"
EndIf

oView:AddUserButton(STR0258, "CLIPS", {|| fLibRegCal( oView ) }) //"Ajustar Lançamento Calculado"


Return(oView)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GP240Ini  ºAutor  ³Leandro Drumond     º Data ³  17/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Ativacao do modelo                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GP240Ini(oModel,nOperation)
Local cRotAux		:= ""
Local cVerEnv		:= ""
Local cVerGPE		:= ""
Local lRet 			:= .T.

//Atribui a filial do funcionário no cFilAnt
cFilAnt := SRA->RA_FILIAL
lRHTAF		:= ((SuperGetMv("MV_RHTAF",, .F.) == .T.) .AND. Val(SuperGetMv("MV_FASESOC",/*lHelp*/,' ')) >= 1 )
lMiddleware	:= If( cPaisLoc == 'BRA' .AND. Findfunction("fVerMW"), fVerMW(), .F. )

//REALIZANDO O BACKUP DO MODEL ANTES DE SUA ALTERAÇÃO

If !(IsInCallStack("FWMILEIMPORT")) .And. nOperation == 3
	oModel:SetOperation( 4 )
EndIf

If nOperation == MODEL_OPERATION_DELETE
	nRet := Gp240Sr8Null()

	If nRet == 1
    	Help(,,'HELP',, STR0025,1,0 ) //"Não existe nenhum registro de dias de direito para o funcionário."
	   	lRet := .F.
	ElseIf nRet == 2
    	Help(,,'HELP',, STR0096,1,0 ) //"Exclusão não permitida devido existir lançamentos calculados e com dias pagos."
	   	lRet := .F.
	Else
		If cPaisLoc == "MEX" .and. AliasInDic("RIV")
			dbSelectArea("RIV")
			RIV->(dbSetOrder(1))
			While !(RIV->(EOF())) .and. RIV->RIV_FILIAL == xFilial("RIV") .and. RIV->RIV_MAT == SRA->RA_MAT
				If RIV->(dbSeek(xFilial("RIV")+SRA->RA_MAT))
					Help(,,'HELP',, STR0162,1,0 ) //"La incapacidad tiene IPP’s relacionadas, primero vaya a la opción de IPP y elimínelas"
					lRet := .F.
					exit
				EndIf
				RIV->(dbSkip())
			EndDo
		EndIf
	EndIf
Else
	cProcesso := SRA->RA_PROCES
	aPerAtual := {}
	cRotAux := If (SRA->RA_CATFUNC $ "P*A", fGetCalcRot("9"),fGetRotOrdinar())
	fGetPerAtual( @aPerAtual, xFilial("RCH", SRA->RA_FILIAL), SRA->RA_PROCES, cRotAux )
EndIf

If nOperation <> MODEL_OPERATION_VIEW .And. lRHTAF .And. FindFunction("fVersEsoc") .And. FindFunction("ESocMsgVer")
	fVersEsoc( "S2230", .F.,,, @cVerEnv, @cVerGPE)
	If !lMiddleware .And. cVerGPE <> cVerEnv .And. (cVerGPE >= "9.0" .Or. cVerEnv >= "9.0")
		//"Atenção! A versão do leiaute GPE é xxx e a do TAF é xxx, sendo assim, estão divergentes. O Evento xxx não será integrado com o TAF, e consequentemente, não será enviado ao RET.
		//Caso prossiga a informação será atualizada somente na base do GPE. Deseja continuar?"
		If ESocMsgVer(.F.,"S-2230", cVerGPE, cVerEnv)
			lRHTAF := .F.
		Else
			Help(,,'HELP',, STR0289,1,0) //"Verifique a versão do leiaute informado nos parâmetros MV_VLESOC/MV_TAFVLES e acesse novamente a rotina."
			lRet := .F.
		EndIf
	EndIf
EndIf

cCpo 		:= ""
lExec 		:= .T.

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp240LoadºAutor  ³Leandro Drumond   º Data ³  26/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rotina utilizada na carga de grids alternativos  			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gp240Load(oModel)


If lTSREP
	 Gp240TSA(oModel)
endIf

If lRHTAF .Or. lMiddleware
	Gp240TAF(oModel)
EndIf

Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp240Sr8NullºAutor  ³Leandro Drumond   º Data ³  26/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se existe registro na SR8 para funcionario atual	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gp240TSA(oModel)

oGridTSA 	:= oModel:GetModel("GPEA240_SR8")

Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp240LoadTAFºAutor  ³Eduardo Vicente   º Data ³  02/05/17   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Carga oGrid alternativo para o TAF		    			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gp240TAF(oModel)
oModlBkp	:= oModel:GetModel("GPEA240_SR8")

Return .T.
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp240Sr8NullºAutor  ³Leandro Drumond   º Data ³  26/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se existe registro na SR8 para funcionario atual	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gp240Sr8Null()
Local aArea := GetArea()
Local nRet	:= 1

DbSelectArea("SR8")

If DbSeek(xFilial("SRA")+SRA->RA_MAT)
	nRet := 0
	While SR8->(!Eof() .and. R8_FILIAL == xFilial("SRA") .and. R8_MAT == SRA->RA_MAT)
		If R8_STATUS == "C" .and. R8_DPAGOS > 0
			nRet := 2
			Exit
		EndIf
		DbSkip()
	EndDo
EndIf

RestArea(aArea)

Return nRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp240TudOk³ Autor ³ Leandro Drumond       ³ Data ³ 18.04/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gp240TudOk(oModel)
Local aQtdAfa		:= {}
Local aDados		:= {}
Local cPeriodo		:= ""
Local cTipoAfa		:= ""
Local cMensaje     	:= STR0163+CHR(13)+CHR(10) //Se ingresara una nueva IPP para la incapacidad
Local cSucur      	:= xFilial("RIV")

Local lRetorna    	:= .T.
Local lNuevas      	:= .F.
Local lIngMDTGPE:= SuperGetMv("MV_MDTGPE",.F.,"N") == "S" .And. FindFunction( "MDTGPEAfas" )

Local nLinha		:= 0
Local nPos		    := 0
Local nLenGrid		:= 0
Local nLinAtual		:= 0

Local oGrid			:= oModel:GetModel("GPEA240_SR8")
Local cVerba		:= ""
Local lGP240OK		:= ExistBlock("GP240OK")
Local lTemSRD	  	:= fTemSRD()//cliente que só utiliza ponto eletronico não deve fazer essa checagem, como forma de testar resolvemos ver se tem registro na SRD
Local aDadosTAF		:= {}
Local lRobo			:= IsBlind()
Local lVldBlqFol	:= SuperGetMv( "MV_VLDRG3" , NIL , .F. )

If FindFunction("TecConfAlo") .AND. SuperGetMV("MV_TECXRH", NIL, .F. ) .AND. !lRobo
TecConfAlo( oModel )
EndIf

If !lTemSRD
	return .T.
EndIf

cSeqCP00	:= ""
lMsgCP00	:= .F.

nLinAtual := oGrid:GetLine()
nLenGrid  := oGrid:Length()

SRV->(DbSetOrder(1))

//Validar registros verificando se existe sobreposicao para tipos de
// afastamentos que nao permitem sobreposicao.
aSR8Respal := Array(0)
For nLinha := 1 to nLenGrid
	oGrid:GoLine(nLinha)
	If !( oGrid:IsDeleted() )
		lRetorna	:= Iif(oGrid:IsUpdated() .OR. oGrid:IsInserted(),gp240LinOk(oGrid), .T. )

		If lRetorna .and. lGP240OK
			lRetorna := ExecBlock("GP240OK", .F., .F. )
		EndIf

		If lRetorna
			cPeriodo := oGrid:GetValue("R8_PER")
			cTipoAfa := oGrid:GetValue("R8_TIPOAFA")
			cVerba	 := oGrid:GetValue("R8_PD")

			If ( nPos := aScan(aQtdAfa,{|x|x[1] + x[2] + x[4] == cPeriodo + cTipoAfa + cVerba}) ) == 0
				aAdd(aQtdAfa,{cPeriodo, cTipoAfa , 1, cVerba})
			Else
				aQtdAfa[nPos,3] += 1
			EndIf
			If ( nPos := aScan(aQtdAfa,{|x|x[1] == cPeriodo .And. x[3] > 9} ) ) > 0
				if(SRV->(DbSeek(xFilial("SRV") + aQtdAfa[nPos,4])))
					if(SRV->RV_LCTODIA != "S") .And. (oGrid:IsInserted()) .And. (aQtdAfa[nPos,1] == cPeriodo)
						lRetorna := .F.
						Help( ,, 'HELP',, OemToAnsi(STR0079)+CRLF+OemToAnsi(STR0080)+aQtdAfa[nPos,2]+CRLF+OemToAnsi(STR0081)+aQtdAfa[nPos,1], 1, 0) //"Limite de 9 lançamentos do mesmo tipo para um mesmo periodo. Deverá cadastrar um novo tipo de ausência."
					endIf
				endIf
			EndIf
		EndIf
	EndIf

	If cPaisLoc == "MEX" .and. AliasInDic("RIV")
		dbSelectArea("RIV")
		RIV->(dbSetOrder(1))
		If !RIV->(dbSeek(cSucur+SRA->RA_MAT+oGrid:GetValue("R8_NCERINC")));
		.and. (oGrid:GetValue("R8_RESINC") == '2' .or. (oGrid:GetValue("R8_RESINC") == '3'))
			lNuevas := .T.
			cMensaje += oGrid:GetValue("R8_NCERINC")+CHR(13)+CHR(10)
			aAdd(aSR8Respal, {SRA->RA_MAT,oGrid:GetValue("R8_NCERINC"),oGrid:GetValue("R8_DATAFIM"),oGrid:GetValue("R8_TIPORSC"),oGrid:GetValue("R8_RESINC")} /*,aSR8Cols[nX,nSR8Usado]}*/)
		EndIf
	EndIf

	If !lRetorna
		Exit
	Else
		If Empty(oGrid:GetValue("R8_DATAFIM")) .and. Empty(oGrid:GetValue("R8_DURACAO"))
			oGrid:SetValue("R8_DURACAO",999)
		EndIf

		//----------------------------------------------------------------
		// Quando a avaliação da linha estiver Ok
		// E haver integração com o módulo de Medicina
		// Faz a verificação do código da CAT com a TNC - Acidentes. Para manter integridade do código CID.
		//-----------------------------------------------------------------
		If lIngMDTGPE
			MDTGPEAfas( oModel )
		EndIF
	EndIf


Next nLinha
cMensaje += STR0164 //no olvide indicar el porcentaje de IPP

oGrid:GoLine(nLinAtual)

If lNuevas
	lRetorna := lRetorna .and. (IIF(lRobo,.T.,MsgYesNo(cMensaje, STR0001)))
EndIf

If cPaisLoc == "BRA"
	If lRetorna .And. lMsgCP00 .And. !IsBlind()
		If !(lRetorna := MsgYesNo(STR0280 + CRLF + STR0273 + cSeqCP00 + CRLF + CRLF + STR0276, STR0021))//"Foi(ram) informada(s) ausência(s) superior(es) a 15 dias em tipo de ausência com verba (campo RCM_PD) com incidência de INSS para folha (campo RV_INSS) e incidência para o eSocial 11 (campo RV_INCCP) e o tipo de ausência não possui verba informada no campo Verba Sup. (RCM_PDSUP). Dessa forma, não será realizado dedução da contribuição patronal e do desconto de INSS do segurado, conforme Parecer SEI Nº 16120/2020/ME."##"Clique em Sim para confirmar o cadastro mesmo assim, ou Não para revisar"
			Help( ,, 'HELP',, OemToAnsi(STR0277 + cSeqCP00), 1, 0, Nil, Nil, Nil, Nil, Nil, {STR0281}) //"Foi selecionado a opção Não. Favor revisar o tipo de ausência da(s) sequência(s): "##"No cadastro do tipo de ausência, preencha uma verba no campo Verba Sup. (RCM_PDSUP) sem incidência para INSS"
		EndIf
	EndIf
EndIf

If lRobo
	If Findfunction("IntAfast") .And. (lRHTAF .Or. lMiddleware) .And. lRetorna .AND. (fVlAltEsoc(oGrid) .Or. oModel:nOperation == 5)
		lRetorna:= IntAfast(oModel, @aDados, @aDadosTAF)
		FWModelActive(oModel)
		If !lRetorna
			If Len(aDados) > 0
				Help(,, 'HELP',, aDados[1], 1, 0,,,,,, Iif(Len(aDadosTAF) > 0 .And. !lMiddleware, {aDadosTAF[1]}, {}))
			Endif
		EndIf
	EndIf
EndIf

If lRetorna .And. lVldBlqFol
	lRetorna := fCheckRG3(oGrid) //Valida período de blackout da folha
EndIf

Return (lRetorna)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Gp240DelOk³ Autor ³ Leandro Drumond       ³ Data ³ 24.04.13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida exclusao da linha                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gp240DelOk(oGrid, nLine, cAction, cField)
Local lRet 			:= .T.
Local oModel 		:= oGrid:GetModel()
Local nOperation 	:= oModel:GetOperation()

If cAction == 'DELETE' .And. nOperation == MODEL_OPERATION_UPDATE
	If IsBlind() .Or. MPUserHasAccess("GPEA240",4,Nil,Nil,Nil)
		If oGrid:GetValue("R8_STATUS") == "C" .and. oGrid:GetValue("R8_DPAGOS") > 0
			Help(,,'HELP',, STR0078,1,0 ) //"Lançamentos calculados e com dias pagos não podem ser excluídos."
	    	lRet := .F.
		ElseIf cPaisLoc == "MEX" .and. AliasInDic("RIV")
			dbSelectArea("RIV")
			RIV->(dbSetOrder(1))
			If RIV->(dbSeek(xFilial("RIV")+SRA->RA_MAT))
				Help( , ,'Help', ,STR0162,1,0) //"La incapacidad tiene IPP’s relacionadas, primero vaya a la opción de IPP y elimínelas"
				lRet := .F.
			Endif
		EndIf
	Else
		Help(,,'HELP',, STR0237,1,0 ) //"Usuário sem permissão para exclusão."
		lRet := .F.
	EndIf
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp240LinOk³ Autor ³ Leandro Drumond       ³ Data ³ 18.04.13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Critica linha digitada                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gp240LinOk(oGrid)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de variaveis locais         					     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cVerEnv		:= "2.4"
Local cVerGPE		:= ""
Local cHelp			:= ""
Local cLicEsp		:= ""
Local cAnoAfa		:= ""
Local cTipoAfa		:= ""
Local cCIDAfa  		:= ""
Local lRet			:= .T.
Local nTotDias		:= 0
Local nX			:= 0
Local nLenGrid		:= oGrid:Length()
Local nLinAtual		:= oGrid:GetLine()
Local oModel		:= FWModelActivate()
// Variaveis de apoio validacoes eSocial
Local lShowEFD		:= .T.
Local cDtSeq		:= ""
//Variável para verificar se ja foi integrado ao TAF
Local lIntegrado	:= .F.

Local cSindical		:= "24"
Local cCessao  		:= "14/40"
Local cTexto1		:= "01*02"
Local cTexto2		:= " 01 ou 02"
Local cComplHlp 	:= If(cEFDAviso == "0",OemToAnsi(STR0187),"") 		//"Mas não será(ão) impeditivo(s) para finalizar o cadastro deste registro, conforme configuração do parâmetro MV_EFDAVIS."
Local cTpEFTi		:= ""
Local cTpTi			:= GetSx3Cache("R8_TIPOAT", "X3_TITULO")
Local cTiCnCe		:= GetSx3Cache("R8_CNPJCES", "X3_TITULO")
Local cTiTpCe		:= GetSx3Cache("R8_TPCES", "X3_TITULO")
Local cTiCnSi		:= GetSx3Cache("R8_CNPJSIN", "X3_TITULO")
Local cTiTpSi		:= GetSx3Cache("R8_TPSIND", "X3_TITULO")
Local cPdSup		:= ""
Local cTpAusencia	:= ""
Local lEmpPag15		:= .F.
Local lNT15			:= .F.
Local cTpoIMSS      := ""
Local dFchDes		:= CtoD("")
Local lTudOk		:= IsInCallStack("gp240TudOk")

If cPaisLoc == "BRA"
	cTpEFTi := GetSx3Cache("R8_TPEFD", "X3_TITULO")
EndIf

If(Type('aPerAtual') == "U")
	Private aPerAtual := {}
EndIf

P_DEDAFAS	:= IIf(cPaisLoc == "BRA" .And. Type("P_DEDAFAS") <> "U", P_DEDAFAS, "") //Define quais verbas de afastamento serão validadas. 1 = Todos

If !oGrid:IsDeleted()
	If lGestPubl .And. cModulo $ 'GFP*VDF'
		If ( oGrid:IsDeleted() .Or. oGrid:IsUpdated() .Or. oGrid:IsInserted() ) .And. !IsInCallStack("ButtonOKAction")
			Help( ,,'HELP',, OemToAnsi(STR0253) , 1,,,,,,, {STR0254} ) //Não é possível inserir ou alterar mais de uma linha por vez.
			lRet := .F.
		EndIf
	EndIf

	If FindFunction("fVersEsoc")
		fVersEsoc( "S2230", .F., /*aRetGPE*/, /*aRetTAF*/, @cVerEnv , @cVerGPE, Nil, @lNT15  )
	Endif

	If Empty(cVerGPE)
		cVerGPE := cVerEnv
	EndIf

	Do Case
		Case ( cVerGPE == "2.4" ) ; ( cTexto1 := " 01*03 " ) ; ( cTexto2 := " 01 ou 03 " )
		Case ( cVerGPE >= "2.4.02" ) ; ( cTexto1 := " 01 " ) ; ( cTexto2 := " 01 " )
	End Case

    Begin Sequence
		if lRet .And. (oGrid:GetValue("R8_ORIGALT")=="3" .And. Empty(oGrid:GetValue("R8_NRPRCJU")) )
			cHelp := OemToAnsi( STR0222 )
			Help( ,, 'HELP',, cHelp, 1, 0)
			lRet := .F.
			Break
		endIf

		If lRet .And. Empty(oGrid:GetValue("R8_DATAINI")) .OR. ;
			( !Empty(oGrid:GetValue("R8_DATAFIM")) .And. oGrid:GetValue("R8_DATAINI") > oGrid:GetValue("R8_DATAFIM") )
			Help(" ",1,"A240DTINI")
			lRet := .F.
			Break
		EndIf

		// Afastamento Tipo D permitido apenas para Estagiarios
		If lRet .And. cPaisLoc == "BRA" .and. (oGrid:GetValue("R8_TIPOAFA") == "002" .And. !( SRA->RA_CATFUNC $ '*E*G*' ) )
	    	Help(,,'HELP',, STR0069,1,0 ) //"Este Tipo de Afastamento só é permitido para funcionários da Categoria E ou G"
			lRet := .F.
			Break
		EndIf
		// Validação para motivo de afastamento TPEFD
		/*
			CID - R8_CID
			Quantidade de dias de afastamento - R8_DURACAO
			Nome do médico - R8_NMMED
			Tipo de Órgão de Classe - R8_IDEOC
			Número do Órgão de Classe - R8_CRMMED
			UF do Órgão de Classe - R8_UFCRM
		*/
		If lRet .And. cPaisLoc == "BRA" .and. (lRHTAF .Or. lMiddleware) .And. (oGrid:GetValue("R8_TPEFD") == "35") .And. cVerGPE < "9.0"
			If !lNT15
				If 	Empty(oGrid:GetValue("R8_CID")) .Or.;
					Empty(oGrid:GetValue("R8_DURACAO")) .Or.;
					Empty(oGrid:GetValue("R8_NMMED"))  .Or.;
					Empty(oGrid:GetValue("R8_IDEOC")) .Or.;
					Empty(oGrid:GetValue("R8_CRMMED"))  .Or.;
					Empty(oGrid:GetValue("R8_UFCRM"))

			    	Help(,,'HELP',, STR0244,1,0 ) //"Para Motivo de Afastamento = 35, os campos R8_CID, R8_DURACAO, R8_IDEOC, R8_NMMED, R8_CRMMED e R8_UFCRM devem ser preenchidos"
					lRet := .F.
					Break
				EndIf
			Else
				If 	Empty(oGrid:GetValue("R8_DURACAO"))
					Help(,,'HELP',, STR0251,1,0 ) //"Para Motivo de Afastamento = 35, o campo R8_DURACAO deve ser preenchido"
					lRet := .F.
					Break
				EndIf
			Endif
		EndIf

	    //Se o motivo de afastamento for 21 - "Licença sem vencimento" o campo R8_OBSAFAS é obrigatório
	    If lRet .And. cPaisLoc == "BRA" .and. (lRHTAF .Or. lMiddleware) .And. (oGrid:GetValue("R8_TPEFD") == "21")
	    		If 	Empty(oGrid:GetValue("R8_OBSAFAS"))
		    		Help(,,'HELP',, STR0248,1,0 ) //Para o Motivo de Afastamento 21 o preenchimento do campo 'Inf. Compl.' (R8_OBSAFAS) é obrigatório.
	       		lRet := .F.
	       		Break
       		EndIf
	    EndIf
		If lRet .And. (!Empty(SRA->RA_DEMISSA) .and.;
			(oGrid:GetValue("R8_DATAINI") >= SRA->RA_DEMISSA .or.;
			 !Empty(oGrid:GetValue("R8_DATAFIM")) .and. oGrid:GetValue("R8_DATAFIM")>= SRA->RA_DEMISSA)) .and. cPaisLoc <> "MEX"
			Aviso(STR0099, STR0192, {STR0062})//"Atencao"##"Não é possível cadastrar afastamento para funcionário demitido"
			lRet := .F.
			Break
		EndIf

		If lRet .And. cPaisLoc == "MEX"
			dbSelectArea("RCM")
			RCM->(dbSetOrder(1)) // RCM_FILIAL+RCM_TIPO
			If RCM->(dbSeek(xFilial("RCM")+oGrid:GetValue("R8_TIPOAFA")))
				cTpoIMSS:= RCM->RCM_TPIMSS
				dFchDes := IIF (cTpoIMSS <> "2",SRA->RA_DEMISSA,SRA->RA_DTBIMSS)
			EndIf

		    If cTpoIMSS <> "2" .And. (!Empty(dFchDes) .and. (oGrid:GetValue("R8_DATAINI") > dFchDes .or.;
		      !Empty(oGrid:GetValue("R8_DATAFIM")) .and. oGrid:GetValue("R8_DATAFIM")> dFchDes))
		      	Help(,,'HELP',, STR0192,1,0 )  //"No se puede registrar licencia con fecha mayor que el despido del empleado"
				lRet := .F.
				Break
			ElseIf cTpoIMSS == "2" .And. (!Empty(dFchDes) .and. (oGrid:GetValue("R8_DATAINI") >= dFchDes .or.;
			  !Empty(oGrid:GetValue("R8_DATAFIM")) .and. oGrid:GetValue("R8_DATAFIM")>= dFchDes))
			  	Help(,,'HELP',, STR0271,1,0 ) //"No se puede registrar una incapacidad dentro de la Fecha de baja del IMSS"
				lRet := .F.
				Break
			EndIf
		EndIf

		If lRet .And. cVerGPE >= "9.0" .And. SR8->(ColumnPos("R8_CNPJE")) > 0
			If oGrid:GetValue("R8_TPEFD") == "22" //Mandato eleitoral
				If Empty(oGrid:GetValue("R8_CNPJE"))
					Help(,,'HELP',, STR0265, 1, 0 ) //"Para o Motivo de Afastamento 22, o preenchimento do campo R8_CNPJE é obrigatório"
					lRet := .F.
					Break
				EndIf
				If SRA->RA_CATEFD == "301" .And. Empty(oGrid:GetValue("R8_REMUN"))
					Help(,,'HELP',, STR0266, 1, 0 ) //"Para o Motivo de Afastamento 22 e categoria de trabalhador 301, o preenchimento do campo R8_REMUN é obrigatório."
					lRet := .F.
					Break
				EndIf
			ElseIf !(Empty(oGrid:GetValue("R8_CNPJE"))) .Or. !(Empty(oGrid:GetValue("R8_REMUN")))
				Help( , , 'HELP', , OemToAnsi(STR0178) + cTpEFTi + OemToAnsi(STR0268), 1, 0 )//"De acordo com R8_TPEFD, os campos R8_CNPJE e R8_REMUN não podem ser preenchidos."
				lRet := .F.
				Break
			EndIf
			If oGrid:GetValue("R8_TPEFD") == "15";//férias
			.And. SRA->RA_CATEFD $ fCatTrabEFD("TCV")+"304|310|312|410" .And. !(SRA->RA_VIEMRAI $ "30|31|35")
				If Empty(oGrid:GetValue("R8_DTINIF")) .And. oGrid:GetValue("R8_DATAINI") >= Ctod("19/07/2021")
					Help( , , 'HELP', , OemToAnsi(STR0267), 1, 0 )//"Para o Motivo de Afastamento 15, e de acordo com a categoria do trabalhador, o campo R8_DTINIF deve ser informado."
					lRet := .F.
					Break
				EndIf
			ElseIf !(Empty(oGrid:GetValue("R8_DTINIF"))) .Or. !(Empty(oGrid:GetValue("R8_DTFMF")))
				Help( , , 'HELP', , OemToAnsi(STR0178) + cTpEFTi + STR0287 + STR0185, 1, 0 )//"os campos R8_DTINIF e R8_DTFMF não devem ser preenchidos."
				lRet := .F.
				Break
			EndIf
		EndIf

		If cPaisLoc == "ARG"
			cLicEsp := gp240RetCont(;
						"RCM", 							; 						// cAlias
	   					1, 								; 						// nIndex
	   					"RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'",	;		// cKey
	   					"RCM_LICESP", 					; 						// Coluna retorno
	   					,.T.) // Filtro

			If !Empty(cLicEsp)
			    nx := fPosTab("S014", cLicEsp,"=", 4)
			    If nx > 0
			    	nDiasLic := fTabela("S014", nx, 6)
			       	nDiasAno := fTabela("S014", nx, 7)
				   	If nDiasLic > 0 .And. (oGrid:GetValue("R8_DATAFIM") - oGrid:GetValue("R8_DATAINI") + 1) > nDiasLic
				    	Help(" ",1,"A240ESP4")
				      	lRet	:=	.F.
				      	Break
				    ElseIf nDiasAno > 0 .And. !Empty(cLicEsp)
				    	cAnoAfa  := Year(oGrid:GetValue("R8_DATAINI"))
				    	cTipoAfa := oGrid:GetValue("R8_TIPOAFA")
				    	cCIDAfa  := oGrid:GetValue("R8_CID")
						For nX := 1 To nLenGrid
							oGrid:GoLine(nX)
							If !oGrid:IsDeleted()
								If !Year(oGrid:GetValue("R8_DATAFIM")) == cAnoAfa .and. (oGrid:GetValue("R8_TIPOAFA") == cTipoAfa .Or. (!Empty(oGrid:GetValue("R8_CID")) .And. LEFT(oGrid:GetValue("R8_CID"),3) == LEFT(cCIDAfa,3)))
									nTotDias	+=	(oGrid:GetValue("R8_DATAFIM") - oGrid:GetValue("R8_DATAINI") + 1)
								EndIf
							EndIf
						Next
						oGrid:GoLine(nLinAtual)
						If nTotDias > nDiasAno
					     	Help(" ",1,"A240ESP5")
					      	lRet	:=	.F.
					      	Break
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf

		If lRet .And. !(lRet := gp240SobrepVerif(oGrid))
			Break
		EndIf

		//O campo tipo de afastamento deve ter o preenchimento obrigatorio.
		If lRet .And. Empty(oGrid:GetValue("R8_TIPOAFA"))
			cHelp := OemToAnsi( STR0018 ) //"Tipo de Afastamento obrigatorio"
			Help( ,, 'HELP',, cHelp, 1, 0)
	  		lRet := .F.
	  		Break
		EndIf

		//Periodo e Numero de Pagamento
		If lRet .And. !(lRet := gp240ValidNumPag(oGrid:GetValue("R8_PER"), oGrid:GetValue("R8_NUMPAGO")))
			Break
		EndIf

		If lRet .And. Empty(oGrid:GetValue("R8_STATUS"))
			//Validar se o funcionario tem direito ao numero de dias informado.
			If !(lRet := gp240DiasDirValid())
				Break
			EndIf
		EndIf

		If ( cPaisLoc == "MEX" )
			If ( Empty(oGrid:GetValue("R8_DURACAO")) .and. ( oGrid:GetValue("R8_DIASREV") == 0 ) )
				Help( ,, 'HELP',, STR0054, 1, 0)
				lRet := .F.
				Break
			EndIf
		EndIf

		// eSocial
		If cPaisLoc == "BRA" .And. lRet .And. lTudOk .And. (!lCpoInt .Or. !oGrid:GetValue("R8_INTTAF") $ "2" )//eSocial
			If oGrid:GetValue("R8_DATA") >= StoD("20140101") .And. lShowEFD

				If oGrid:GetValue("R8_TPEFD") $ (cCessao)	// Validacao sobre Cessao de funcionario
					If Empty(oGrid:GetValue("R8_CNPJCES")) .Or. Empty(oGrid:GetValue("R8_TPCES"))
						lRet := .F.
						Help( , , 'HELP', , OemToAnsi(STR0168)+ cTpEFTi + OemToAnsi(STR0169) + cCessao + OemToAnsi(STR0175) + CRLF + cDtSeq, 1, 0 )
						//"Se o campo "###" for igual a"###" cCessao "###" os campos 'CNPJ Cession' e 'Tp Onus Cess' sao obrigatorios."
					ElseIf (!Empty(oGrid:GetValue("R8_CNPJCES")) .And. !EMPTY(SM0->M0_CGC)) .And. ( SM0->M0_CGC == oGrid:GetValue("R8_CNPJCES"))
						lRet := .F.
						Help( , , 'HELP', , "["+OemToAnsi(STR0174)+"] "+OemToAnsi(STR0172)+ CRLF + cDtSeq, 1, 0 )
						//"CNPJ Cessionario" ### "O CNPJ informado deve ser diferente do CNPJ da filial de cadastro do participante."
					ElseIf  oGrid:GetValue("R8_CNPJCES") == "00000000000000" .Or. !(CGC( oGrid:GetValue("R8_CNPJCES"),,.F. ))
						lRet := .F.
						Help( , , 'HELP', , "["+OemToAnsi(STR0174)+"] "+OemToAnsi(STR0173)+ CRLF + cDtSeq, 1, 0 )//"CNPJ Cessionario" ### "O CNPJ informado nao e valido!"
					EndIf
				ElseIf cEFDAviso <> "2"
					If !Empty(oGrid:GetValue("R8_TPEFD"))
						cDtSeq		:= CRLF + OemToAnsi(STR0166)+": "+ DtoC(oGrid:GetValue("R8_DATA")) + " - "+OemToAnsi(STR0167)+": " + oGrid:GetValue("R8_SEQ")	+ CRLF + CRLF  //"Dt.Alteracao: "### " - Seq.: "

						If cVerGPE < "9.0"
							If (oGrid:GetValue("R8_TPEFD") $ (cTexto1) .And. !lNT15 )
								If Empty(oGrid:GetValue("R8_NMMED")) .Or. Empty(oGrid:GetValue("R8_CRMMED")) .Or.;
									Empty(oGrid:GetValue("R8_UFCRM")) .Or. Empty(oGrid:GetValue("R8_CID")) .Or.;
									( If( cVerEnv >= "2.4.02", Empty(oGrid:GetValue("R8_IDEOC")), .T. ) )
									//Quando a data de inclusao for posterior ao parametro MV_DTCGINI a ausencia dos dados para o Tipo 1 sera impeditiva
									If cEFDAviso == "1" .Or. (!Empty(dDcgIni) .And. dDataBase >= dDcgIni)
										lShowEFD := .F.
										//STR0226 = "os campos 'Num. Dias', 'Cod.Int.Doen', 'Nome Emitente', 'Insc. Emitente' e 'Cod. UF' são obrigatórios."
										//STR0227 = "os campos 'Num. Dias', 'Cod.Int.Doen', 'Nome Emitente', 'Insc. Emitente', 'Cod. UF' e 'Tipo de Orgão de Classe' são obrigatórios."
										Help( , , 'HELP', , OemToAnsi(STR0168)+ cTpEFTi + OemToAnsi(STR0169) + cTexto2 + OemToAnsi( If(cVerEnv >= '2.4.02',STR0227,  STR0226)) + CRLF + cDtSeq, 1, 0 )// "Se o campo "###" for igual a"###" 01 " + " os campos ... obrigatorios."
									ElseIf cEFDAviso == "0"
										Help( , , 'HELP', , OemToAnsi(STR0168)+ cTpEFTi + OemToAnsi(STR0169) + cTexto2 + OemToAnsi( If(cVerEnv >= '2.4.02',STR0227,  STR0226)) + CRLF + cDtSeq + cComplHlp, 1, 0 )
									EndIf
								EndIf
							EndIf

							//Validação do preenchimento do grupo de campos sobre o emitente
							If !Empty(oGrid:GetValue('R8_NMMED')) .OR. !Empty(oGrid:GetValue('R8_IDEOC')) .OR. !Empty(oGrid:GetValue('R8_CRMMED'))
								If Empty(oGrid:GetValue('R8_NMMED')) .OR. Empty(oGrid:GetValue('R8_IDEOC')) .OR. Empty(oGrid:GetValue('R8_CRMMED'))
								If !lNT15 .Or. !(oGrid:GetValue("R8_TPEFD") $ "01|03|35")
										If cEFDAviso == "1" .Or. (!Empty(dDcgIni) .And. dDataBase >= dDcgIni)
										//Quando a data de inclusao for posterior ao parametro MV_DTCGINI a ausencia dos dados para o Tipo 3 sera impeditiva
											lShowEFD := .F.
											Help( , , 'HELP', , OemToAnsi(STR0239) + CRLF + cDtSeq, 1, 0 ) // STR0239 = "Os campos R8_NMMED, R8_IDEOC, R8_CRMMED são dependentes, se um for preenchido todos devem ser."
										ElseIf cEFDAviso == "0"
											Help( , , 'HELP', , OemToAnsi(STR0239) + CRLF + cDtSeq + cComplHlp, 1, 0 ) // STR0239 = "Os campos R8_NMMED, R8_IDEOC, R8_CRMMED são dependentes, se um for preenchido todos devem ser."
										Endif
									Endif
								Endif
							Endif
						EndIf

						// Validacao sobre Mandato Sindical
						If (oGrid:GetValue("R8_TPEFD") $ (cSindical))
							If Empty(oGrid:GetValue("R8_CNPJSIN"))
								If cEFDAviso == "1"
									lShowEFD := .F.
									Help( , , 'HELP', , OemToAnsi(STR0168) + cTpEFTi + OemToAnsi(STR0169) + cSindical + OemToAnsi(STR0171)+ CRLF + cDtSeq, 1, 0 ) //"Se o campo "###" for igual a"###" cSindical "###" os campos 'CNPJ Sindica' e 'Tp Onus Sind' sao obrigatorios."
								ElseIf cEFDAviso == "0"
						        	Help( , , 'HELP', , OemToAnsi(STR0168) + cTpEFTi + OemToAnsi(STR0169) + cSindical + OemToAnsi(STR0171)+ CRLF + cDtSeq + cComplHlp, 1, 0 )
						        EndIf
							ElseIf (!Empty(oGrid:GetValue("R8_CNPJSIN")) .And. !EMPTY(SM0->M0_CGC)) .And. ( SM0->M0_CGC == oGrid:GetValue("R8_CNPJSIN"))
								If cEFDAviso == "1"
									lShowEFD := .F.
									Help( , , 'HELP', , "["+OemToAnsi(STR0148)+"] "+OemToAnsi(STR0172)+ CRLF + cDtSeq, 1, 0 ) // "CNPJ Sindicato" ### "O CNPJ informado deve ser diferente do CNPJ da filial de cadastro do participante."
						   		ElseIf cEFDAviso == "0"
						        	Help( , , 'HELP', , "["+OemToAnsi(STR0148)+"] "+OemToAnsi(STR0172)+ CRLF + cDtSeq + cComplHlp, 1, 0 )
						        EndIf
							ElseIf (oGrid:GetValue("R8_CNPJSIN") == "00000000000000") .Or. !(CGC( oGrid:GetValue("R8_CNPJSIN"),,.F. ))
							   If cEFDAviso == "1"
									lShowEFD := .F.
									Help( , , 'HELP', , "["+OemToAnsi(STR0148)+"] "+OemToAnsi(STR0173)+ CRLF + cDtSeq, 1, 0 ) // "CNPJ Sindicato" ### "O CNPJ informado nao e valido!"
								ElseIf cEFDAviso == "0"
						        	Help( , , 'HELP', , "["+OemToAnsi(STR0148)+"] "+OemToAnsi(STR0173)+ CRLF + cDtSeq + cComplHlp, 1, 0 )
						        EndIf
							EndIf
						EndIf

						If !Empty(oGrid:GetValue("R8_TIPOAT")) .And. !(oGrid:GetValue("R8_TPEFD") $ (cTexto1))
							If cEFDAviso == "1"
								lShowEFD := .F.
								Help( , , 'HELP', , OemToAnsi(STR0178) + cTpEFTi + OemToAnsi(STR0179) + cTpTi + OemToAnsi(STR0180) + OemToAnsi(STR0181) + cTpEFTi + OemToAnsi(STR0182) + CRLF + cDtSeq, 1, 0 )//"De acordo com o conteudo do campo"###" o(s) campo(s) "###" nao deve ser preenchido! Apague o conteudo deste campo antes de salvar ou altere o campo "###" para um motivo valido."
							ElseIf cEFDAviso == "0"
					        	Help( , , 'HELP', , OemToAnsi(STR0178) + cTpEFTi + OemToAnsi(STR0179) + cTpTi + OemToAnsi(STR0180) + OemToAnsi(STR0181) + cTpEFTi + OemToAnsi(STR0182) + CRLF + cDtSeq + cComplHlp, 1, 0 )
					        EndIf
						EndIf

						If !(oGrid:GetValue("R8_TPEFD") $ (cCessao)) .And.;
							(!Empty(oGrid:GetValue("R8_CNPJCES")) .Or. !Empty(oGrid:GetValue("R8_TPCES")))
							If cEFDAviso == "1"
								lShowEFD := .F.
								Help( , , 'HELP', , OemToAnsi(STR0178) + cTpEFTi + OemToAnsi(STR0179) + cTiCnCe + OemToAnsi(STR0184) + cTiTpCe + OemToAnsi(STR0185) + OemToAnsi(STR0183) + cTpEFTi + OemToAnsi(STR0182) + CRLF + cDtSeq, 1, 0 )//"De acordo com o conteudo do campo"###" o(s) campo(s) "###" nao devem ser preenchidos! Apague o conteudo destes campos antes de salvar ou altere o campo "###" para um motivo valido."
					   		ElseIf cEFDAviso == "0"
					        	Help( , , 'HELP', , OemToAnsi(STR0178) + cTpEFTi + OemToAnsi(STR0179) + cTiCnCe + OemToAnsi(STR0184) + cTiTpCe + OemToAnsi(STR0185) + OemToAnsi(STR0183) + cTpEFTi + OemToAnsi(STR0182) + CRLF + cDtSeq + cComplHlp, 1, 0 )
					        EndIf
						EndIf

						If !(oGrid:GetValue("R8_TPEFD") $ (cSindical)) .And.;
							(!Empty(oGrid:GetValue("R8_CNPJSIN")) .Or. !Empty(oGrid:GetValue("R8_TPSIND")))
							If cEFDAviso == "1"
								lShowEFD := .F.
								Help( , , 'HELP', , OemToAnsi(STR0178) + cTpEFTi + OemToAnsi(STR0179) + cTiCnSi + OemToAnsi(STR0184) + cTiTpSi + OemToAnsi(STR0185) + OemToAnsi(STR0183) + cTpEFTi + OemToAnsi(STR0182) + CRLF + cDtSeq, 1, 0 )//"De acordo com o conteudo do campo"###" o(s) campo(s) "###" nao devem ser preenchidos! Apague o conteudo destes campos antes de salvar ou altere o campo "###" para um motivo valido."
					        ElseIf cEFDAviso == "0"
					        	Help( , , 'HELP', , OemToAnsi(STR0178) + cTpEFTi + OemToAnsi(STR0179) + cTiCnSi + OemToAnsi(STR0184) + cTiTpSi + OemToAnsi(STR0185) + OemToAnsi(STR0183) + cTpEFTi + OemToAnsi(STR0182) + CRLF + cDtSeq + cComplHlp, 1, 0 )
					        EndIf
						EndIf

						If aScan( oGrid:aHeader, { |x| x[2] == 'R8_DTER' } ) > 0
							If ( oGrid:GetValue('R8_TPEFDAN') == '03' .AND. oGrid:GetValue('R8_TPEFD') == '01'  .AND. Empty(oGrid:GetValue('R8_DTER')) )
								Help( , , 'HELP', , OEMToAnsi(STR0240) + CRLF + cDtSeq, 1, 0 ) // ##"Para retificações de motivo de afastamento 03 para 01 é obrigatório o preenchimento do campo Data
								lRet := .F.
							Endif
						EndIf

						//Validação dos campos obrigatórios para retificação
						lIntegrado := SR8->(ColumnPos( "R8_INTGTAF")) > 0 .And. !Empty(oGrid:GetValue("R8_INTGTAF"))
						If lIntegrado .AND. ( (oGrid:GetValue("R8_TPEFD") == "03" .AND. oGrid:GetValue("R8_TPEFDAN") == "01") .OR. (oGrid:GetValue("R8_TPEFD") == "01" .AND. oGrid:GetValue("R8_TPEFDAN") == "03") ) .AND. Empty(oGrid:GetValue('R8_ORIGALT'))
							If cEFDAviso == "1"
								lShowEFD := .F.
								Help( , , 'HELP', , OEMToAnsi(STR0236) + CRLF + cDtSeq, 1, 0 ) // ##"Para retificações de motivo de afastamento 01 para 03 ou vice-versa, é obrigatório o preenchimento do campo Origem da alteração"
							ElseIf cEFDAviso == "0"
								Help( , , 'HELP', , OEMToAnsi(STR0236) + CRLF + cDtSeq + cComplHlp, 1, 0 ) // ##"Para retificações de motivo de afastamento 01 para 03 ou vice-versa, é obrigatório o preenchimento do campo Origem da alteração"
							Endif
						Endif

						// Se tornar impeditivo o prosseguimento devido a presenca de inconsistencias
					   	If ( cEFDAviso == "1" .And. !lShowEFD ) .Or. !lShowEFD //Somente na validacao R8_TPEFD == 01 que podera ocorrer: cEFDAviso <> 1 .And. !lShowEFD
							lRet	:= .F.
					   	EndIf
					Else
						If !IsBlind() .And. ( !IsInCallStack("MDTA685") .Or. !IsInCallStack("MDTA410") )
							If cEFDAviso == "1"
								oModel:SetErrorMessage( "", , oModel:GetId(), "" , OemToAnsi(STR0021), OemToAnsi(STR0223) + CRLF + OemToAnsi(STR0224)  ) //"O 'Motivo Afast.' é um campo obrigatório."
								lRet := .F.

							ElseIf cEFDAviso == "0"
							 	Aviso( STR0021, OemToAnsi(STR0223) + cComplHlp + CRLF +;
							 	CRLF + OemToAnsi(STR0166)+": "+ DtoC(oGrid:GetValue("R8_DATA")) + " - "+OemToAnsi(STR0167)+": " + oGrid:GetValue("R8_SEQ")	+ CRLF + CRLF +;  //"Dt.Alteracao: "### " - Seq.: "
							 	OemToAnsi(STR0224), {STR0062}) //"O 'Motivo Afast.' é um campo obrigatório."
					   		EndIf
						EndIf
				   	EndIf
				EndIf
			EndIf
		EndIf

		If lRet .And. Empty(oGrid:GetValue("R8_DATAFIM"))
			If Empty(aPerAtual)
		 		fGetPerAtual( @aPerAtual, xFilial("RCH",SRA->RA_FILIAL), SRA->RA_PROCES, If (SRA->RA_CATFUNC $ "P*A", fGetCalcRot("9"),fGetRotOrdinar()) )
		 	EndIf

			If Len(aPerAtual) >0 .and. oGrid:GetValue("R8_DATAINI") < aPerAtual[1,6]
				If cPaisLoc # "ARG"
					nDiasPagos := ( ( aPerAtual[1,6]-1 ) - oGrid:GetValue("R8_DATAINI") ) + 1
					nDiaspagos := Min(nDiasPagos,oGrid:GetValue("R8_DIASEMP"))
				EndIf
				oGrid:SetValue("R8_DPAGOS", nDiaspagos)
				oGrid:SetValue("R8_SDPAGAR", oGrid:GetValue("R8_DIASEMP")-nDiaspagos)
				If cPaisLoc # "ARG"
					oGrid:SetValue("R8_STATUS", "T")
				EndIf
			EndIf
		EndIf

		If lRet .And. SR8->(ColumnPos( "R8_PROADIC")) > 0

			cTpAusencia := gp240RetCont(;
												"RCM", 												; 	// cAlias
												1, 														; 	// nIndex
												"RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'",	; 	// cKey
												"RCM_TIPOAF",;
												,.T.									) 	// Coluna retorno
			If oGrid:GetValue("R8_PROADIC") == '1' .And. (cTpAusencia == "4" .Or. RCM->RCM_CODSEF $ "Q1*Q2*Q3*Q4*Q5*Q6")  // Calcula Adicional Proporcional e Ausencia do tipo Controle de Dias de Direito
				Help( ,, OemToAnsi(STR0021),, OemToAnsi(STR0220), 1, 0 ) //"Atenção"#"O cálculo proporcional de adicionais não é permitido para esse tipo de ausência."
				lRet := .F.
				Break
			EndIf
		EndIf

		If lRet .And. cPaisLoc == "BRA" .And. lTudOk .And. dToS(oGrid:GetValue("R8_DATAINI")) >= "20201001" .And. (P_DEDAFAS == "1" .Or. oGrid:GetValue("R8_PD") $ P_DEDAFAS) .And. RetValSrv( oGrid:GetValue("R8_PD"), SRA->RA_FILIAL, "RV_INSS" ) == "S" .And. RetValSrv( oGrid:GetValue("R8_PD"), SRA->RA_FILIAL, "RV_INCCP" ) == "11" .And. lTemPdSup
			cPdSup := gp240RetCont(;
												"RCM", 												; 	// cAlias
												1, 														; 	// nIndex
												"RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'",	; 	// cKey
												"RCM_PDSUP",;
												,.T.									) 	// Coluna retorno

			lEmpPag15 := .F.
			a240AtuDias(oGrid:GetValue("R8_DATAINI"), oGrid:GetValue("R8_DATAFIM"), oGrid:GetValue("R8_CONTINU"), oGrid:GetValue("R8_CONTAFA"), oGrid:GetValue("R8_TIPOAFA"), oGrid:GetValue("R8_DURACAO"), oGrid:GetValue("R8_DIASEMP"), oGrid:GetValue("R8_DPAGAR"), oGrid, @lEmpPag15)
			If lEmpPag15 .And. Empty(cPdSup)
				cSeqCP00	+= oGrid:GetValue("R8_SEQ")+"/"
				lMsgCP00	:= .T.
			EndIf
		EndIf

	End Sequence
EndIf

// Para chile validar cambio en R8_DATAINI
	If cPaisLoc == "CHI" .and. lRet
		dbSelectArea("RCM")
		RCM->(dbSetOrder(3))
		If RCM->(dbSeek(xFilial("RCM")+oGrid:GetValue("R8_PD")))
			If !(RCM->RCM_TPIMSS $ "00|03|06") .and. !(RCM->RCM_TPIMSS $ SuperGetMV("MV_TAPREVI", Nil, "")) .and. RCM->RCM_TIPO == oGrid:GetValue("R8_TIPOAFA")
				dDtIni := oGrid:GetValue("R8_DATAINI")
				lRet := gp240ValAus(dDtIni,oGrid:GetValue("R8_DURACAO"))
			EndIf
		EndIf
	EndIF

If lRet .and. ExistBlock("GP240VAL")
	lRet := ExecBlock("GP240VAL", .F., .F., {oGrid})
	lRet := If(ValType(lRet) == "L", lRet , .T. )
EndIf

If lRet .AND. lGestPubl	.AND. cModulo $ 'GFP*VDF'
	If RCM->RCM_MDAFAS > oGrid:GetValue("R8_DURACAO")
		lRet := .F.
		cHelp := STR0232 // "Quantidade de dias de ausência menor que o minimo definido no tipo de ausência."
	ElseIf (fDesc("SQ3",SRA->RA_CARGO,"Q3_SUBSTIT",NIL,SRA->RA_FILIAL,1) == "1")
		If !Empty(oGrid:GetValue("R8_MATSUB")) .AND. RCM->RCM_DSUBST > oGrid:GetValue("R8_DURACAO")
			lRet := .F.
			cHelp := STR0231 // "Quantidade de dias de ausência menor que o minimo para exigir substituto."
		ElseIf Empty(oGrid:GetValue("R8_MATSUB")) .And. oGrid:GetValue("R8_DURACAO") > RCM->RCM_DSUBST .And. Iif(lGP240VSUB, !ExecBlock("GP240VSUB",.F.,.F.), .T.)
			lRet := .F.
			cHelp := STR0229 // "Cargo do Funcionário necessita de substituto."
		EndIf
	ElseIf !Empty(oGrid:GetValue("R8_MATSUB"))
		lRet := .F.
		cHelp := STR0230 // "Cargo do Funcionário não necessita de substituto."
	EndIf
	If !lRet
		Help(NIL, NIL, STR0021, NIL, cHelp, 1, 0, NIL, NIL, NIL, NIL, NIL, {""})
	EndIf
EndIf
If lRet
	lExec := .T.
	lFechado := .F.
EndIf

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp240SobrepVerif³ Autor ³ Leandro Drumond ³ Data ³ 18.04.13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gp240SobrepVerif(oGrid)

Local cHelp		  	:= ""
Local cPermSobrep 	:= ""
Local cTipoAfa		:= ""
Local dDtIni        := CtoD("")
Local dDtFim        := CtoD("")
Local lValid		:= .T.
Local nLinha	  	:= 1
Local nAcols	  	:= oGrid:Length()
Local nLinhaAtual	:= oGrid:GetLine()

//Nao podera existir lancamentos diferentes para a mesma data ou
//mesmo intervalo de afastamento quando o tipo de afastamento nao
//permitir sobreposicao.
dDtIni	:= oGrid:GetValue("R8_DATAINI")
dDtFim	:= oGrid:GetValue("R8_DATAFIM")
cTipoAfa:= oGrid:GetValue("R8_TIPOAFA")

For nLinha := 1 TO nAcols
	oGrid:GoLine(nLinha)
    If (nLinha <> nLinhaAtual) .and. !oGrid:IsDeleted()
		If (!Empty(oGrid:GetValue("R8_DATAFIM")) .and. (dDtIni >= oGrid:GetValue("R8_DATAINI")) .and. (dDtIni <= oGrid:GetValue("R8_DATAFIM"))) ;
	 	   .or. ;
	 	   (!Empty(oGrid:GetValue("R8_DATAFIM")) .and. (dDtFim >= oGrid:GetValue("R8_DATAINI")) .and. (dDtFim <= oGrid:GetValue("R8_DATAFIM"))) ;
	 	   .or. ;
	 	   (!Empty(oGrid:GetValue("R8_DATAFIM")) .and. (dDtIni <= oGrid:GetValue("R8_DATAINI")) .and. (dDtFim >= oGrid:GetValue("R8_DATAFIM"))) ;
	 	   .or. ;
	 	   (Empty(oGrid:GetValue("R8_DATAFIM")) .and. (dDtIni <= oGrid:GetValue("R8_DATAINI")) .and. (dDtFim >= oGrid:GetValue("R8_DATAINI")))

				//Verific se o tipo de afastamento permite sobreposicao
				cPermSobrep := gp240RetCont("RCM",	1, "RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'", "RCM_SOBREP" ,,.T.)
				If cPermSobrep == "2"
 					lValid := .F.
					cHelp := OemToAnsi( STR0017 ) //"Nao pode existir lancamento diferente para a mesma data ou mesmo intervalo de afastamento"
					Help( ,, 'HELP',, cHelp, 1, 0)
					Exit
   				EndIf
		EndIf

		If (Empty(dDtFim) .and. (dDtIni <= oGrid:GetValue("R8_DATAINI"))) ;
			.or.;
	   	   (Empty(oGrid:GetValue("R8_DATAFIM")) .and. (oGrid:GetValue("R8_DATAINI") <= dDtIni))
				lValid = .F.
				cHelp := OemToAnsi( STR0019 ) //"Nao pode existir afastamentos posteriores a um afastamento sem data de retorno"
				Help( ,, 'HELP',, cHelp, 1, 0)
				Exit
		EndIf

	EndIf

Next nLinha

oGrid:GoLine(nLinhaAtual)

Return( lValid )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp240ValidNumPag³ Autor ³ Leandro Drumond       ³ Data ³19.04.2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao do campo Numero de Pagamento                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ gp240ValidNumPag(cPer,cNumPag)                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cPer    	= Valor informado no campo periodo.                     ³±±
±±³          ³ cNumPag 	= Valor informado no campo numero de pagamento.         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA240 (gp240LinOk) e no Valid do campo do SX3                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function gp240ValidNumPag(cPer, cNumPag)
	Local nX			:= 0
	Local cSR8Proces	:= ""
	Local cPerAtual		:= ""
	Local cHelp     	:= ""
	Local lRet			:= .T.
	Local lFTransf		:= .F.
	Local aTransf		:= {}
	Local cChkNrPgto	:= SuperGetMV("MV_CATNPGT") // Armazena as categorias que nao deverao validar o numero de pagamento informado.
	Local cRotAux		:= If (SRA->RA_CATFUNC $ "P*A", fGetCalcRot("9"),fGetRotOrdinar())
	Local oModel		:= FWModelActivate()
	Local oGrid 		:= oModel:GetModel("GPEA240_SR8")
	Local lTemSRD	  	:= fTemSRD()//cliente que só utiliza ponto eletronico não deve fazer essa checagem, como forma de testar resolvemos ver se tem registro na SRD

	DEFAULT cPer := oGrid:GetValue("R8_PER")

	/*Quando vem da Convergência Logix, não validar o período,
	ele será gerado posteriormente pelo GpeConv(ConvPer)*/
	If IsInCallStack("RHIMP01") .Or. !lTemSRD
		Return (.T.)
	EndIf

	cSR8Proces := oGrid:GetValue("R8_PROCES")
	If !Empty(cGravaPer)
		fGravaPer(oGrid)
		cGravaPer := ""
	EndIf

	// Nao validar o numero de pagamento se a categoria do funcionario selecionado
	// nao estiver cadastrado no parametro MV_CATNPGT.
	If !( SRA->RA_CATFUNC $ cChkNrPgto )
		// Se registro ja utilizado em calculo (="C"), a validacao do periodo/num. pagto
		// deve ser para todos cadastrados na tabela RCH (abertos e fechados).
		// Se o registro ainda nao foi utilizado em calculo, a validacao deve ser apenas
		// dos periodos em aberto cadastrados na tabela RCH.

		DbSelectArea( "RCH" )

		If cNumPag == NIL
			DbSetOrder( 4 )
			lRet := DbSeek( xFilial( "RCH", SRA->RA_FILIAL ) + cSR8Proces + cRotAux + cPer, .F. )

			If Eof()
				lRet := DbSeek( xFilial( "RCH", SRA->RA_FILIAL ) + cSR8Proces + cRotAux + cPer, .F. )
			EndIf
		Else
			DbSetOrder( 1 )
			lRet := DbSeek( xFilial( "RCH", SRA->RA_FILIAL ) + cSR8Proces + cPer + cNumPag + cRotAux, .F. )

			If Eof()
				lRet := DbSeek( xFilial( "RCH", SRA->RA_FILIAL ) + cSR8Proces + cPer + cNumPag + Space( GetSx3Cache( "RCH_ROTEIR", "X3_TAMANHO" ) ), .F. )
			EndIf
		EndIf

		If !lRet

			If Empty(aPerAtual)
				fGetPerAtual( @aPerAtual, xFilial("RCH", SRA->RA_FILIAL), cSR8Proces, cRotAux )
			EndIf

			If fTransf( @aTransf, aPerAtual[1, 5] + aPerAtual[1, 4], , , , , , , , , , , SRA->RA_FILIAL, SRA->RA_MAT )
				For nX := 1 To LEN(aTransf)
					IF aTransf[1, 12] >= cPer
						IF (aTransf[1, 8] != SRA->RA_FILIAL) .OR. (aTransf[1, 14] != SRA->RA_PROCES)
							cSR8Proces 	:= aTransf[1, 14] 	// Processo Origem

							IF lRet := DbSeek( xFilial( "RCH", aTransf[1, 8] ) + cSR8Proces + cPer + cNumPag + cRotAux, .F. )
								EXIT
							EndIf
						EndIf
					EndIf
				Next nX
			EndIf
		EndIf

		If !lRet
			cHelp := OemToAnsi( STR0191 ) + "["+cSR8Proces+"/"+cPer+"]" // Uno o mas de los registros de ausencias no se encuentra en el Catálogo de Periodos para el Periodo y Número de Pago capturados
			Help( , , 'HELP', , cHelp, 1, 0)
		EndIf
	EndIf

Return (lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp240DiasDirValid³ Autor ³ Leandro Drumond       ³ Data ³19.04.2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verifica se o numero de dias de ausencia informado eh permitido,   ³±±
±±³          ³quando o tipo da ausencia eh um tipo de "programacao de periodo".  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ gp240DiasDirValid()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gpea240                                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Static Function gp240DiasDirValid()

Local cTpAusencia := ""
Local cHelp		  := ""
Local cPdAfa	  := ""
Local cTipoAfa	  := ""
Local lRet		  := .T.
Local lStatus     := .F.
Local nDiasDireito:= 0
Local nTotDiasPg  := 0
Local nCnt		  := 0
Local nDurTotal	  := 0
Local nLinha	  := 0
Local nLenGrid	  := 0
Local nLinAtual	  := 0
Local oModel	  := FWModelActivate()
Local oGrid 	  := oModel:GetModel("GPEA240_SR8")
Local lTemSRD	  := fTemSRD()//cliente que só utiliza ponto eletronico não deve fazer essa checagem, como forma de testar resolvemos ver se tem registro na SRD
Local cCIDAfa	  := ""
If !lTemSRD
	return lRet
EndIf

nLenGrid	  := oGrid:Length()
nLinAtual	  := oGrid:GetLine()
cPdAfa 		  := oGrid:GetValue("R8_PD")
cTipoAfa	  := oGrid:GetValue("R8_TIPOAFA")
cCIDAfa  	  := oGrid:GetValue("R8_CID")
cTpAusencia := gp240RetCont(;
				"RCM", 											; 	// cAlias
				1, 												; 	// nIndex
				"RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'",	; 	// cKey
				"RCM_TIPOAF",,.T.									) 	// Coluna retorno

If cTpAusencia == "4"
	If Empty(cPdAfa)
	     //Nao pode ser em branco
		cHelp := OemToAnsi( STR0023 ) //Verba deve ser informada quando a ausencia for do tipo Programacao de Periodo
		Help( ,, 'HELP',, cHelp, 1, 0)
		lRet := .F.
	Else
		If Empty(oGrid:GetValue("R8_DATAFIM"))
			//Nao pode ser branco
			cHelp := OemToAnsi( STR0024 ) //Dias da Ausencia maior que dias de direito
			Help( ,, 'HELP',, cHelp, 1, 0)
			lRet := .F.
		Else
			If !(cPaisLoc $ "PTG*DOM*COL*ARG*BRA")
				dbSelectArea("SRF")
				dbSetOrder(2)
				dbSeek( xFilial("SRF",SRA->RA_FILIAL) + SRA->RA_MAT + cPdAfa )
				nDiasDireito := 0
				nTotDiasPg	 := 0
			    While !Eof() .and. SRF->(RF_FILIAL + RF_MAT + RF_PD) == xFilial("SRF",SRA->RA_FILIAL) + SRA->RA_MAT + cPdAfa
			    	If(ValType(SRF->RF_STATUS)!='U', If(SRF->RF_STATUS == "1", lStatus := .F., lStatus := .T.), lStatus)

		    		If !lStatus
						If SRF->RF_DFERVAT > 0 .and. SRF->RF_DFERANT < SRF->RF_DFERVAT
							nDiasDireito += SRF->RF_DFERVAT - SRF->RF_DFERANT
						ElseIf (SRF->RF_DFERANT < (If (cPaisLoc == "BRA", SRF->RF_DFERAAT, SRF->RF_DIASANT + SRF->RF_DFERAAT)))
							nDiasDireito += If(cPaisLoc == "BRA", SRF->RF_DFERAAT - SRF->RF_DFERANT, SRF->RF_DIASANT + SRF->RF_DFERAAT - SRF->RF_DFERANT)
			    		EndIf
						nCnt ++
				    EndIf
				    dbSkip()
			    EndDo

			    If nCnt = 0
					cHelp := Iif(lGestPubl .AND. cModulo $ 'GFP*VDF', OemToAnsi( STR0133 ), OemToAnsi( STR0025 )) //Não existe nenhum registro de dias de direito para o servidor. , //Não existe nenhum registo de dias de direito para o empregado.
					Help( ,, 'HELP',, cHelp, 1, 0)
					lRet := .F.
			    Else
					For nLinha := 1 to nLenGrid
						oGrid:GoLine(nLinha)
						If !oGrid:IsDeleted()
							If (oGrid:GetValue("R8_TIPOAFA") == cTipoAfa .Or. (!Empty(oGrid:GetValue("R8_CID")) .And. LEFT(oGrid:GetValue("R8_CID"),3) == LEFT(cCIDAfa,3))) .and. oGrid:GetValue("R8_PD") == cPdAfa .and. oGrid:GetValue("R8_STATUS") <> "C"
								nDurTotal += oGrid:GetValue("R8_DURACAO")
							EndIf
						EndIf
					Next nLinha
					oGrid:GoLine(nLinAtual)
					If ( (nDiasDireito < oGrid:GetValue("R8_DURACAO") .or. (nDurTotal > nDiasDireito) ) .and.;
					     ( oGrid:GetValue("R8_DPAGOS") < oGrid:GetValue("R8_DPAGAR") ) )

						dbSelectArea("SRV")
						dbSetOrder(1)
						dbSeek( xFilial("SRV",SRA->RA_FILIAL) + cPdAfa )

						If ( !(SRV->RV_CODFOL == "0891" .and. SRA->RA_CATFUNC $ '*E*G*') )
							cHelp := OemToAnsi( STR0022 ) //Dias da Ausencia maior que dias de direito
							Help( ,, 'HELP',, cHelp, 1, 0)
							lRet := .F.
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
EndIf

Return ( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³RetornaConteudo³ Autor ³ Tatiane Matias        ³ Data ³08.07.2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Generico                         	                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ gp240RetCont(cAlias,nIndex,cKey,cRetorno,cFiltro)               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cAlias 	= Alias do arquivo                                     ³±±
±±³          ³ nIndex 	= Ordem			                                       ³±±
±±³          ³ cKey 	= Chaves				                               ³±±
±±³          ³ cRetorno = Campo do qual o conteudo sera retornado              ³±±
±±³          ³ cFiltro  = Condicao					                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA240                                                         ³±±
±±³          ³ GPEA090                                                         ³±±
±±³          ³ GPEA100                                                         ³±±
±±³          ³ GPEA120                                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function gp240RetCont(cAlias, nIndex, cKey, cRetorno, cFiltro,lExpr)

Local aArea		:= GetArea()
Local xConteudo := ""
Local cPrefix 	:= ""
Local cFrom 	:= ""
Local cWhere    := ""
Local cOrder    := ""
Local cQryTab 	:= ""
Local cAliTab 	:= ""
Local cIndex    := ""
Local cQuery	:= ""

Default lExpr   := .F.
Default cFiltro := ""

If cAlias == "RCH" .And. cFiltro == "Empty(RCH->RCH_DTFECH) .AND. (RCH->RCH_PROCES == cProcesso)" .And. nIndex == 1
	lExpr:= .T.
	If cPaisLoc == "BRA"
		cKey:= "RCH_FILIAL = '" + xFilial("RCH") + "' AND RCH_PROCES = '" + SRA->RA_PROCES + "'" + " AND RCH_PERSEL = '1'"
	Else
		cKey:= "RCH_FILIAL = '" + xFilial("RCH") + "' AND RCH_PROCES = '" + SRA->RA_PROCES + "' AND RCH_ROTEIR = '"+ fGetRotOrdinar()  +"'" + " AND RCH_PERSEL = '1'"
	EndIf
	cFiltro:= "RCH_DTFECH = ' '"
Endif

If lExpr

	cFrom	:= " FROM " + RetSqlName(cAlias) + " " + cAlias +" "

	cQuery	:= "SELECT " + cRetorno + " FROM " + RetSqlName(cAlias) + " WHERE " + cKey

	If !Empty(cFiltro)
		cFiltro	:= " AND " + cFiltro
	    cQuery 	+= cFiltro
	Endif

	cQuery  += " AND D_E_L_E_T_ = ' ' "
	cQryTab := ChangeQuery(cQuery)
	cAliTab := GetNextAlias()

	dbUseArea(.T., "TOPCONN", TcGenQry(,,cQryTab), cAliTab)

	If !(cAliTab)->(Eof())
		xConteudo := &(cAliTab + "->" + cRetorno)
	Else
		xConteudo := ""
	Endif
	(cAliTab)->(dbCloseArea())
Else
	DbSelectArea( cAlias )
	DbSetOrder( nIndex )

	If !Empty( cFiltro )
		( cAlias )->( DbSetFilter( { || &cFiltro },cFiltro ) )
	EndIf

	If DbSeek(cKey)
		xConteudo := &(cAlias + "->" + cRetorno)
	EndIf

	( cAlias )->( DBClearFilter() )

	If ( ValType("xConteudo") == "U" )
		xConteudo := ""
	EndIf
Endif

RestArea( aArea )

Return(xConteudo)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³RetornaConteudo³ Autor ³ M. Camargo            ³ Data ³07.01.2016³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Generico                         	                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ gp240RPERCHI(cAlias,nIndex,cKey,cRetorno,cFiltro)               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cAlias 	= Alias do arquivo                                     ³±±
±±³          ³ nIndex 	= Ordem			                                     ³±±
±±³          ³ cKey 	= Chaves				                                     ³±±
±±³          ³ cRetorno = Campo do qual o conteudo sera retornado              ³±±
±±³          ³ cFiltro  = Condicao					                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA240                                                         ³±±
±±³          ³ GPEA090                                                         ³±±
±±³          ³ GPEA100                                                         ³±±
±±³          ³ GPEA120                                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function gp240PERCHI(cAlias, nIndex, cKey, cRetorno, cFiltro)

Local aArea		:= GetArea()
Local xConteudo := ""

dbSelectArea( cAlias )
dbSetOrder(nIndex)
dbSeek(cKey)
cFiltro += " .AND. RCH->RCH_PERSEL=='1' .AND. RCH->RCH_ROTEIR== '"+ fGetRotOrdinar()  +"' "
While !Eof()
	If Empty(cFiltro)
		xConteudo := &(cAlias + "->" + cRetorno)
		Exit
	ElseIf (&(cFiltro) == .T.)
		xConteudo := &(cAlias + "->" + cRetorno)
		Exit
	EndIf
	dbSkip()
EndDo

If ( ValType("xConteudo") == "U" )
	xConteudo := ""
EndIf

RestArea( aArea )

Return(xConteudo)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³CalcNumDias	 ³ Autor ³ Tatiane Matias        ³ Data ³14.07.2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula o numero de dias do afastamento, dependendo do tipo de   ³±±
±±³          ³dia do tipo de afastamento. O tipo de dia pode ser:              ³±±
±±³          ³1-Dias uteis (nao considerando sabados, domingos e feriados)     ³±±
±±³          ³2-Dias corridos                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gatilho (Portugal)                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function gp240CalcNumDias()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de variaveis locais         					     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cTipoDia	  := ""
Local cCampo	  := ReadVar()
Local nDias
Local oModel	  := FWModelActivate()
Local oGrid 	  := oModel:GetModel("GPEA240_SR8")

If !Empty(oGrid:GetValue("R8_DATAINI")) .and. !Empty(oGrid:GetValue("R8_DATAFIM"))

   //Retorna o tipo de dia do afastamento
	cTipoDia := gp240RetCont(;
					"RCM", 							; 							// cAlias
   					1, 								; 							// nIndex
   					"RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'",	;			// cKey
   					"RCM_TIPODI", 					; 							// Coluna retorno
   					,.T.) // Filtro

   	If (cTipoDia == "2")
		// Dias corridos
  		If !Empty(oGrid:GetValue("R8_DATAFIM"))
   	 		nDias := oGrid:GetValue("R8_DATAFIM") - oGrid:GetValue("R8_DATAINI") + 1
		EndIf
	ElseIf lExec
		lExec 	:= .F.
   		// Dias uteis. Verifica no calendario do funcionario (Ponto)
		If IsBlind()
			If !Empty(oGrid:GetValue("R8_DATAFIM"))
				GpeCalend(,,,,,oGrid:GetValue("R8_DATAINI"),oGrid:GetValue("R8_DATAFIM"),@nDias,"D", cCampo,.F.,,,,oGrid:GetValue("R8_PER"),oGrid:GetValue("R8_NUMPAGO"))
			EndIf
		Else
			If !Empty(oGrid:GetValue("R8_DATAFIM"))
				MsAguarde( {|| GpeCalend(,,,,,oGrid:GetValue("R8_DATAINI"),oGrid:GetValue("R8_DATAFIM"),@nDias,"D", cCampo,,,,,oGrid:GetValue("R8_PER"),oGrid:GetValue("R8_NUMPAGO"))	}, OemToAnsi(STR0027))
			EndIf
		EndIf
	Else
		nDias := oGrid:GetValue("R8_DURACAO")
   	EndIf

ElseIf Empty(oGrid:GetValue("R8_DATAFIM"))
	nDias := 0
Else
   	nDias := oGrid:GetValue("R8_DURACAO")
EndIf

Return (nDias)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³CalcDtFim		 ³ Autor ³ Leandro Drumond       ³ Data ³19.04.2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula a Data final do afastamento, dependendo do tipo de dia   ³±±
±±³          ³do tipo de afastamento. O tipo de dia pode ser:                  ³±±
±±³          ³1-Dias uteis                                                     ³±±
±±³          ³2-Dias corridos                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEA240                                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function gp240CalcDtFim(nLinAtual,oGrid)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de variaveis locais         					     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cTipoDia	  := ""
Local cCampo	  := ReadVar()
Local dDataFim	  := CtoD("//")
Local nDiasEmp	  := 0
Local nDiasPagar  := 0
Local oModel	  := Nil

DEFAULT oGrid 		:= Nil

If oGrid == Nil
	oModel	:= FWModelActivate()
	oGrid	:= oModel:GetModel("GPEA240_SR8")
	lExec := .T.
EndIf

DEFAULT nLinAtual 	:= oGrid:GetLine()

If Empty(oGrid:GetValue("R8_DATAINI"))
	Return (dDataFim)
EndIf

If Empty(oGrid:GetValue("R8_DATA"))
	Return (dDataFim)
EndIf

If !IsBlind()
	If !Empty(oGrid:GetValue("R8_DATAINI")) .and. !Empty(oGrid:GetValue("R8_DURACAO"))
		//Retorna o tipo de dia do afastamento
		cTipoDia := gp240RetCont(;
						"RCM", 							; 							// cAlias
   						1, 								; 							// nIndex
   						"RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'",	;			// cKey
	   					"RCM_TIPODI", 					; 							// Coluna retorno
	   					,.T.)	// Filtro

		If (cTipoDia == "2")
			// Dias corridos
			If !oGrid:GetValue("R8_DURACAO") == 999
				dDataFim := Max( ( oGrid:GetValue("R8_DATAINI") + Abs(oGrid:GetValue("R8_DURACAO")) - 1 ), oGrid:GetValue("R8_DATAINI") )
			Else
				a240AtuDias(oGrid:GetValue("R8_DATAINI"),CtoD(''),Nil, Iif(cPaisLoc <> 'COL', oGrid:GetValue("R8_CONTAFA"), Nil),oGrid:GetValue("R8_TIPOAFA"),999,@nDiasEmp,@nDiasPagar,Nil,oGrid)

			    //--Se existir sequencia e a duracao
			    If cPaisLoc <> 'COL' .And. Empty(oGrid:GetValue("R8_CONTAFA")) .or. oGrid:GetValue("R8_DURACAO") <> 999
			    	oGrid:SetValue("R8_DIASEMP", nDiasEmp)
					oGrid:SetValue("R8_DPAGAR", nDiasPagar)
				EndIf

				If !Empty(oGrid:GetValue("R8_DATAFIM"))
					If !Empty(oGrid:GetValue("R8_DPAGOS"))
						oGrid:SetValue("R8_SDPAGAR",Max(0,nDiasPagar - oGrid:GetValue("R8_DPAGOS")))
					Else
						oGrid:SetValue("R8_SDPAGAR",nDiasPagar)
					EndIf
				EndIf
			EndIf
		ElseIf lExec
			lExec := .F.
	   		// Dias uteis. Verifica no calendario do funcionario (Ponto)
		  	MsAguarde( {|| GpeCalend(,,,,,oGrid:GetValue("R8_DATAINI"),@dDataFim, Int(oGrid:GetValue("R8_DURACAO")),"F",cCampo,,,,,oGrid:GetValue("R8_PER"),oGrid:GetValue("R8_NUMPAGO"))}, OemToAnsi(STR0027))
	    EndIf
   	ElseIf (cPaisLoc $ "MEX/CHI" .And. (oGrid:GetValue("R8_DURACAO")) == 0 .And. oGrid:GetValue("R8_STATUS") == "C" .and. cCampo == "M->R8_DURACAO")
	  	dDataFim := oGrid:GetValue("R8_DATAINI")
	Else
		dDataFim := CtoD("//")
	EndIf
Else
	If !Empty(oGrid:GetValue("R8_DATAINI")) .and. !Empty(oGrid:GetValue("R8_DURACAO"))
		//Retorna o tipo de dia do afastamento
		cTipoDia := gp240RetCont(;
					"RCM", 											; 						// cAlias
   					1, 												; 						// nIndex
   					"RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'",	; 						// cKey
   					"RCM_TIPODI", 									; 						// Coluna retorno
   					,.T.) 			// Filtro

    	If (cTipoDia == "2")
			// Dias corridos
			If !oGrid:GetValue("R8_DURACAO") == 999
				dDataFim := Max( ( oGrid:GetValue("R8_DATAINI") + Abs(oGrid:GetValue("R8_DURACAO")) - 1 ), oGrid:GetValue("R8_DATAINI") )
			Else
				a240AtuDias(oGrid:GetValue("R8_DATAINI"),CtoD(''),Nil,Nil,oGrid:GetValue("R8_TIPOAFA"),999,@nDiasEmp,@nDiasPagar,Nil,oGrid)

			    //--Se existir sequencia e a duracao
			    If cPaisLoc <> "COL" .And. Empty(oGrid:GetValue("R8_CONTAFA")) .or. oGrid:GetValue("R8_DURACAO") <> 999
			    	oGrid:SetValue("R8_DIASEMP", nDiasEmp)
					oGrid:SetValue("R8_DPAGAR", nDiasPagar)
				EndIf

				If !Empty(oGrid:GetValue("R8_DATAFIM"))
					If !Empty(oGrid:GetValue("R8_DPAGOS"))
						oGrid:SetValue("R8_SDPAGAR",Max(0,nDiasPagar - oGrid:GetValue("R8_DPAGOS")))
					Else
						oGrid:SetValue("R8_SDPAGAR",nDiasPagar)
					EndIf
				EndIf
			EndIf
		ElseIf lExec
			lExec := .F.
   			// Dias uteis. Verifica no calendario do funcionario (Ponto)
			If !Empty(oGrid:GetValue("R8_DATAINI")) .and. !Empty(oGrid:GetValue("R8_DURACAO"))
				GpeCalend(,,,,,oGrid:GetValue("R8_DATAINI"),@dDataFim, Abs(oGrid:GetValue("R8_DURACAO")),"F",cCampo,.F.,,,,oGrid:GetValue("R8_PER"),oGrid:GetValue("R8_NUMPAGO"))
			EndIf
	  		If cPaisLoc $ "MEX/CHI"
		  		If oGrid:GetValue("R8_DURACAO") > 0 .and. oGrid:GetValue("R8_DURACAO") < 1
					dDataFim := oGrid:GetValue("R8_DATAINI")
				EndIf
			EndIf
    	EndIf
   	ElseIf (cPaisLoc $ "MEX/CHI" .and. (oGrid:GetValue("R8_DURACAO")) == 0 .and. oGrid:GetValue("R8_STATUS") == "C" )//.and. cCampo == "M->R8_DURACAO")
  		dDataFim := oGrid:GetValue("R8_DATAINI")
	EndIf
EndIf

Return (dDataFim)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp240IncapVerif ³ Autor ³ Leandro Drumond       ³ Data ³19.04.2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Quando o tipo de ausencia for identificado como uma incapacitacao,³±±
±±³          ³permitira a manutencao nos campos de identificacao da Incapacidade³±±
±±³          ³Campos: Numero Registro da Incapacidade; Risco Provavel; Tipo de  ³±±
±±³          ³Risco; Resultado da Incapacidade; Tipo de Folha 1 e 2; Numero da  ³±±
±±³          ³folha 1 e 2.                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ gp240IncapVerif()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ When nos campos citados acima da tabela SR8 (SX3)                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function gp240IncapVerif()

Local cTipoAfa		:= ""
Local lEdit 		:= .T.
Local oModel		:= FWModelActivate()
Local oGrid 		:= oModel:GetModel("GPEA240_SR8")

cTipoAfa := gp240RetCont("RCM" 													,; 		// cAlias
						 1														,;		// nIndex
						 "RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'"			,;		// cKey
						 "RCM_TPIMSS"											,;		// Coluna retorno
						 ,.T.	)	// Filtro

lEdit := (cTipoAfa == "2")

Return (lEdit)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp240DiasEmp    ³ Autor ³ Leandro Drumond       ³ Data ³19.04.2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Calcula os dias pagos pela empresa, dias a pagar, saldo de dias  ³±±
±±³          ³ a pagar e dias nao aplicados.                                  	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ gp240DiasEmp(nLinAtual)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ gpea240 e gatilho                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function gp240DiasEmp(nLinAtual, oGrid)

Local cContinua		:= ""
Local cTipoAf		:= ""	//RCM_TIPOAF
Local cLicEsp       := ""
Local cAfast		:= ""
Local cSeqCont		:= ""
Local nPercEmp		:= 0
Local nDInteg		:= 0
Local cPdInteg		:= 0
Local nDuracao		:= 0
Local nEmpDias 		:= 0
Local nReg			:= 0
Local nLinha		:= 0
Local nDNAplic		:= 0
Local nAuxEmpDias	:= 0
Local nDiasLic      := 0
Local nx            := 0
Local nTamGrid		:= 0
Local nDiasReinc	:= 0
Local oModel		:= Nil
Local cReadVar 		:= ReadVar()

DEFAULT oGrid 		:= Nil

If oGrid == Nil
	oModel := FWModelActivate()
	oGrid  := oModel:GetModel("GPEA240_SR8")
EndIf

If(Type('aPerAtual') == "U")
	Private aPerAtual := {}
EndIf

DEFAULT nLinAtual 	:= oGrid:GetLine()

nTamGrid := oGrid:Length()

If !IsBlind()
	If !Empty(oGrid:GetValue("R8_TIPOAFA"))
		oGrid:LoadValue("R8_DESCTP",fDesc("RCM", oGrid:GetValue("R8_TIPOAFA"), "RCM_DESCRI"))
		oGrid:LoadValue("R8_PD",fDesc("RCM", oGrid:GetValue("R8_TIPOAFA"), "RCM_PD") )
	EndIf
EndIf

If Empty(oGrid:GetValue("R8_DATA"))
	Return nEmpDias
EndIf

nDuracao	:= oGrid:GetValue("R8_DURACAO")
cAfast		:= oGrid:GetValue("R8_TIPOAFA")
cContinua	:= IIF(cPaisloc <> "BRA", oGrid:GetValue("R8_CONTINU"), oGrid:GetValue("R8_CONTAFA")) // Voltado a alimentar a variavel cContinua com o conteudo do campo R8_CONTAFA conforme o chamado TUQNA1 e o campo R8_CONTAFA ?uma combobox
dDtIni		:= oGrid:GetValue("R8_DATAINI")
nEmpDias 	:= oGrid:GetValue("R8_DIASEMP")

If !Empty(cAfast) .and. !Empty(cContinua) .and. dDtIni != CtoD("//")
	//Calcula os dias pagos pela empresa
	cRCM1		:= "RCM_FILIAL =  '" + xFilial("RCM") + "' AND RCM_TIPO = '" + cAfast + "'"
	cTipoAf  	:= gp240RetCont("RCM", 1, cRCM1, "RCM_TIPOAF" ,,.T.)
	nEmpDias 	:= gp240RetCont("RCM", 1, cRCM1, "RCM_DIASEM" ,,.T.)
	nDiasReinc  := If(cPaisLoc == "BRA", gp240RetCont("RCM", 1, cRCM1, "RCM_REINCI",,.T.), 0) // JRB El campo RCM_REINCI solo aplica para BRA

	If cPaisLoc == "VEN"
		nPercEmp := gp240RetCont("RCM", 1, xFilial("RCM") + cAfast, "RCM_PERCEM")
		nDInteg  := gp240RetCont("RCM", 1, xFilial("RCM") + cAfast, "RCM_DINTEG")
		cPdInteg := gp240RetCont("RCM", 1, xFilial("RCM") + cAfast, "RCM_VRBINT")
	EndIf

	If (nEmpDias <> 999 .and. !cPaisLoc $ "COS|COL") //.or. (cPaisLoc == "BRA" .And. nEmpDias == 999 .And.!Empty(cContinua)  )

  		nAuxEmpDias := nEmpDias
  		cSeqCont	:= cContinua

		For	nReg := nTamGrid to 1 step -1
			If nReg == nLinAtual
				Loop
			EndIf
			oGrid:GoLine(nReg)
			If oGrid:GetValue("R8_DATAINI") <= dDtIni .and. ;
			   oGrid:GetValue("R8_SEQ") == cSeqCont .and. ;
			   !oGrid:IsDeleted()
			   		If dDtIni - nDiasReinc <= oGrid:GetValue("R8_DATAFIM")
						cSeqCont	:= oGrid:GetValue("R8_CONTAFA")
						nAuxEmpDias := max(0, nAuxEmpDias - oGrid:GetValue("R8_DURACAO"))
						If Empty(cSeqCont) .Or. nAuxEmpDias == 0
							Exit
						EndIf
					Else
						Exit
					EndIf
			EndIf
		Next nReg
		nEmpDias := If(nAuxEmpDias > nEmpDias, nEmpDias, nAuxEmpDias)
		oGrid:GoLine(nLinAtual)
	EndIf

	If oGrid:GetValue("R8_DURACAO") < 0
		If !cPaisLoc $ "COS"
			oGrid:SetValue("R8_DIASEMP" , nEmpDias)
		EndIf
	If !cPaisLoc # "BRA|CHI|PAR"
			oGrid:SetValue("R8_DNAPLIC", 0)
		EndIf
    	oGrid:SetValue("R8_DPAGAR", nDuracao)
	Else
		//Calcular dias nao aplicados
		dDtIni	:= oGrid:GetValue("R8_DATAINI")
		dDtFim	:= If(lExec, gp240CalcDtFim(nLinAtual,oGrid), oGrid:GetValue("R8_DATAFIM"))

		For nLinha := 1 to nTamGrid
	 	    If (nLinha <> nLinAtual)
	 	    	oGrid:GoLine(nLinha)
	 	    	If !oGrid:IsDeleted() .and. (dDtIni >= oGrid:GetValue("R8_DATAINI") .and. If( cPaisLoc == "MEX", (oGrid:GetValue("R8_DIASREV") # oGrid:GetValue("R8_DPAGOS")), .T.) )
					If (!Empty(oGrid:GetValue("R8_DATAFIM")) .and. (dDtIni >= oGrid:GetValue("R8_DATAINI")) .and. (dDtIni <= oGrid:GetValue("R8_DATAFIM")) .and. ( (dDtFim > oGrid:GetValue("R8_DATAFIM")) .OR. Empty(dDtFim)))
						nDNAplic := (oGrid:GetValue("R8_DATAFIM") - dDtIni + 1)
						Exit
					ElseIf (!Empty(oGrid:GetValue("R8_DATAFIM")) .and. (dDtFim >= oGrid:GetValue("R8_DATAINI")) .and. (dDtFim <= oGrid:GetValue("R8_DATAFIM")) .and. (dDtIni < oGrid:GetValue("R8_DATAINI"))) .OR. ;
					   	   (Empty(oGrid:GetValue("R8_DATAFIM")) .and. (dDtIni <= oGrid:GetValue("R8_DATAINI")) .and. (dDtFim >= oGrid:GetValue("R8_DATAINI")))
						nDNAplic := (dDtFim - oGrid:GetValue("R8_DATAINI") + 1)
						Exit
					ElseIf (!Empty(oGrid:GetValue("R8_DATAFIM")) .and. (dDtIni >= oGrid:GetValue("R8_DATAINI")) .and. (dDtFim <= oGrid:GetValue("R8_DATAFIM")))
						nDNAplic := oGrid:GetValue("R8_DURACAO")
						Exit
					ElseIf (!Empty(oGrid:GetValue("R8_DATAFIM")) .and. (dDtIni < oGrid:GetValue("R8_DATAINI")) .and. (dDtFim > oGrid:GetValue("R8_DATAFIM")))
						nDNAplic := oGrid:GetValue("R8_DURACAO")
						Exit
	   				EndIf
	   			EndIf
			EndIf
		Next nLinha

		oGrid:GoLine(nLinAtual)

		If cPaisLoc == "VEN"
			oGrid:SetValue("R8_PERCEMP" , nPercEmp )
			oGrid:SetValue("R8_DINTEG" , nDInteg )
			oGrid:SetValue("R8_VRBINT" , cPdInteg )
		EndIf

		If !cPaisLoc $ "COS"
			oGrid:SetValue("R8_DIASEMP" , nEmpDias )
		EndIf
		If !cPaisLoc # "BRA|CHI|PAR"
			oGrid:SetValue("R8_DNAPLIC" , nDNAplic )
		EndIf

		If nDuracao > 0 .or. If(cPaisLoc == "MEX",oGrid:GetValue("R8_STATUS") == "C",.F.)
			nDuracao := nDuracao - nDNAplic

	    	If cTipoAf # "3"	//# Diferente de Informativo

		    	If cPaisLoc $ "COS" //Costa Rica nao possui R8_DIASEMP
			    	oGrid:SetValue("R8_DPAGAR", nDuracao )
		    	Else
			    	oGrid:SetValue("R8_DPAGAR", If( Empty(nEmpDias), 0, Min(nEmpDias,nDuracao) ) )
			    	If cPaisLoc == "BRA"
						If Empty(aPerAtual)
							fGetPerAtual( @aPerAtual, xFilial("RCH",SRA->RA_FILIAL), SRA->RA_PROCES, If (SRA->RA_CATFUNC $ "P*A", fGetCalcRot("9"),fGetRotOrdinar()) )
						EndIf
				    	If oGrid:GetValue("R8_DATAINI") >= aPerAtual[1,6] //Se estiver incluindoafastamento retroativo, osaldo já foi calculado.
				    		oGrid:SetValue("R8_SDPAGAR", If( Empty(nEmpDias), 0, Min(nEmpDias,nDuracao) ) ) // JRB validar este cambio SQA
				    	EndIf
			    	Else
			    		oGrid:SetValue("R8_SDPAGAR", If( Empty(nEmpDias), 0, Min(nEmpDias,nDuracao) ) )
			    	EndIF

			    EndIf

	   			If cPaisLoc $ "ARG"
	   				cLicEsp := gp240RetCont(;
								"RCM", 							; 						// cAlias
			   					1, 								; 						// nIndex
			   					"RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'",	;		// cKey
			   					"RCM_LICESP", 					; 						// Coluna retorno
			   					,.T.) // Filtro

					If !Empty(cLicEsp)
					    nx := fPosTab("S014", cLicEsp,"=", 4)
					    If nx > 0
					       nDiasLic := fTabela("S014", nx, 6)
						   If nDiasLic > 0 .And. oGrid:GetValue("R8_DURACAO") <= nDiasLic
					 			oGrid:SetValue("R8_DPAGAR", oGrid:GetValue("R8_DURACAO"))
							ElseIf nDiasLic > 0 .and. oGrid:GetValue("R8_DURACAO") > nDiasLic
		   						oGrid:SetValue("R8_DURACAO", nDiasLic)
								oGrid:SetValue("R8_DPAGAR", nDiasLic)
							EndIf
						EndIf
					Else
						oGrid:SetValue("R8_DPAGAR", oGrid:GetValue("R8_DURACAO"))
					EndIf
				EndIf
   			EndIf
	   	Else
	    	oGrid:SetValue("R8_DPAGAR", nEmpDias)
	   	EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Quando o saldo for negativo e o status eh calculado fazer a ³
		//³reversao dos dias de ausentismo                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
   		If cPaisLoc == "MEX" .And. oGrid:GetValue("R8_STATUS")== "C"
   			If oGrid:GetValue("R8_SDPAGAR") < 0
				oGrid:SetValue("R8_DIASREV", ABS(oGrid:GetValue("R8_SDPAGAR")))
			EndIf
		EndIf
	EndIf
	a240NumDias(.F.)
EndIf

Return (nEmpDias)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp240Periodo   ³ Autor ³ Leandro Drumond       ³ Data ³19.04.2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Carrega a variavel cPeriodo, utilizada no filtro do numero de pgt³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ gp240Periodo()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SX3 - campo R8_PER                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function gp240Periodo()
Local oModel		:= FWModelActivate()
Local oGrid 		:= oModel:GetModel("GPEA240_SR8")

cPeriodo := oGrid:GetValue("R8_PER")

Return (.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp240DurValid  ³ Autor ³ Leandro Drumond       ³ Data ³19.04.2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida o campo dias de ausencia. Os dias de ausencia nao pode ser³±±
±±³          ³menor que os dias ja pagos.                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ gp240DurValid()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SX3 - campo R8_DURACAO                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function gp240DurValid()
Local lRet 			:= .T.
Local oModel		:= FWModelActivate()
Local oGrid 		:= oModel:GetModel("GPEA240_SR8")

If oGrid:GetValue("R8_DURACAO") > 0 .and. oGrid:GetValue("R8_DURACAO") < oGrid:GetValue("R8_DPAGOS") .And.;
	If(cPaisLoc == "MEX", oGrid:GetValue("R8_STATUS") <> "C", .T.)
	cHelp := OemToAnsi( STR0020 ) //"Os dias de ausencia nao pode ser menor que os dias ja pagos"
	Help( ,, 'HELP',, cHelp, 1, 0)
	lRet := .F.
ElseIF cPaisLoc == 'CHI'
	lRet := gp240DDerecho()
Else
	If !(IsInCallStack("A240NumDias"))
		lExec := .T.
	EndIf
EndIf

Return ( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gpeCalend        ³ Autor ³ Tatiane Matias        ³ Data ³09.10.2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula os dias uteis.                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ gpea240                                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function GpeCalend(	cFil		,; //[,	<@>cFil			] -> Opcional, Filial do Funcionario Para Montagem do Calendario
					cMat		,; //[,	<@>cMat			] -> Opcional, Matricula do Funcionario Para Montagem do Calendario
					cTno		,; //[,	<@>cTno			] -> Opcional, Turno do Funcionario Para Montagem do Calendario
					cSeq		,; //[,	<@>cSeq			] -> Opcional, Sequencia do Funcionario Para Montagem do Calendario
					cCc			,; //[,	<@>cCc			] -> Opcional, Centro de Custo do Funcionario Para Montagem do Calendario
					dDataIni	,; //[	<@>dDataIni		] -> Opcional, Data Inicial Para Montagem do Calendario
					dDataFim	,; //[,	<@>dDataFim		] -> Opcional, Data Final Para Montagem do Calendario
					nDiasUteis  ,; //[,	<@>nDiasUteis	] -> Opcional, Dias Uteis Para Montagem do Calendario
					cTipoRet	,; //[,	<@>cTipoRet  	] -> Tipo de Retorno - Numero de Dias Uteis ("D"), Data Final do Afastamento ("F"), numero de horas ("H") ou número de feriados ("V")
					cCampo		,; // Campo para comparacao na mensagem
					lMsg		,; // Se mostra mensagem ao usuario
					cAlias		,; // Alias da tabela SRA
					lIncAfast   ,; // Se considera afastamentos
					cTipoDia 	,; // Retorna Tipo Dia (S-Trabalhado; C-Compensado; D-Descanso Semanal Remunerado; N-Não trabalhado)
					cPeriodo	,;  // Periodo de calculo
					cNumPago	)	// Numero de pagametno

Local aArea			:= GetArea()
Local dStartDate	:= Ctod("//")
Local dDataAux		:= CtoD("//")
Local nStartDate	:= 0.00
Local nFinishDate	:= 0.00
Local aTabCalend	:= {}
Local aTurnos		:= {}
Local aTabPadrao	:= {}
Local nPosCalend	:= 0.00
Local nTamOrdem 	:= GetSx3Cache( "P8_ORDEM", "X3_TAMANHO" )
Local bAscanOrdem	:= { |x| x[ CALEND_POS_ORDEM ] == StrZero( nStartDate , nTamOrdem ) .and. x[ CALEND_POS_TIPO_MARC ] == "1E" }
Local lFeriado		:= .F.
Local lTrbFeriado	:= .F.
Local lAfast		:= .T.
Local lRetOK		:= .F.
Local nContDias		:= 0
Local nMaxDias		:= 0
Local nDiasAux		:= 0
Local cTipoOrig		:= ""
Local cAux			:= ""
Local cRoteiro		:= Space( GetSx3Cache( "RCH_ROTEIR", "X3_TAMANHO" ) )
Local cTnoAux		:= ""
Local cQuery		:= ""
Local cAliasQry		:= ""
Local lDiaLi := .T.
DEFAULT cAlias 			:= "SRA"
DEFAULT cFil			:= (cAlias)->RA_FILIAL
DEFAULT cMat			:= (cAlias)->RA_MAT
DEFAULT cTno			:= (cAlias)->RA_TNOTRAB
DEFAULT cSeq			:= (cAlias)->RA_SEQTURN
DEFAULT cCc				:= (cAlias)->RA_CC
DEFAULT dDataIni 		:= Ctod("01/"+StrZero(Month(dDataBase),02)+"/"+StrZero(Year(dDataBase),04),"DD/MM/YY")
DEFAULT dDataFim 		:= Ctod(StrZero(f_UltDia(dDataIni),02)+"/"+StrZero(Month(dDataBase),02)+"/"+StrZero(Year(dDataBase),04),"DD/MM/YY")
DEFAULT lMsg			:= .T.
DEFAULT nDiasUteis 		:= 0
DEFAULT lIncAfast		:= .T.
Default	cTipoDia		:= "S"
DEFAULT cPeriodo		:= ""
DEFAULT cNumPago		:= ""

//Objeto de Periodos - Utilizado no calendario
Private oPeriodo		:= RHPERIODO():New()

If cTipoRet == "F"
	If cPaisLoc == "ARG"
		dDataFim := dDataIni + (nDiasUteis - 1)
	Else
		dDataFim := dDataIni + (nDiasUteis * 7) // a qtde de dias é multiplicada por 7 para que a data final possa abranger todos os dias,
	EndIf
EndIf										// desconsiderando feriados e finais de semana do período selecionado.

If Valtype(dDataIni) == "C"
	dDataIni := CtoD(dDataIni)
EndIf

If Valtype(dDataFim) == "C"
	dDataFim := CtoD(dDataFim)
EndIf


If cPaisLoc == "DOM"
	//Conversão de datas no formato DD/MM/AAAA HH:MM:SS  para DD/MM/AAAA
	cAux := DtoC(DDATAINI)
	dDataIni := CtoD(cAux)
EndIf

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Periodo Para Carga das Informacoes em aInfoCalend    ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
dStartDate	:= dDataIni
nFinishDate	:= ( ( dDataFim - dDataIni ) + 1 )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Instancia o objeto caso nao exista para uso da funcao		   ³
|CriaCalend													   |
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
If Type("oPeriodo") == "U"
	SetMemVar("oPeriodo" , RHPERIODO():New() , .T. , .T. )
	oPeriodo:cProcesso := SRA->RA_PROCES
	oPeriodo:GetPer()
EndIf

If  cPaisLoc == "ARG" .And. cTipoRet == "D" .And. nDiasUteis == 0 .And. IsInCallStack("GPEA240")
	nDiasUteis := (dDataFim - dDataIni) + 1
EndIf

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Cria o Calendario de Marcacoes de Acordo com o Periodo Passado³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

If SRA->( CriaCalend(	dDataIni		,; //01 -> Data Inicial do Periodo
		 				dDataFim		,; //02 -> Data Final do Periodo
						cTno			,; //03 -> Turno Para a Montagem do Calendario
						cSeq			,; //04 -> Sequencia Inicial para a Montagem Calendario
						@aTabPadrao		,; //05 -> Array Tabela de Horario Padrao
						@aTabCalend		,; //06 -> Array com o Calendario de Marcacoes
						cFil			,; //07 -> Filial para a Montagem da Tabela de Horario
						cMat			,; //08 -> Matricula para a Montagem da Tabela de Horario
						cCc				,; //09 -> Centro de Custo para a Montagem da Tabela
						@aTurnos		,; //10 -> Array com as Trocas de Turno
						NIL				,; //11 -> Array com Todas as Excecoes do Periodo
						NIL	 			,; //12 -> Se executa Query para a Montagem da Tabela Padrao
						.F.				,; //13 -> Se executa a funcao se sincronismo do calendario
						.F.				,; //14 -> Se Forca a Criacao de Novo Calendario
						NIL  			,; //15 -> Array com marcacoes para tratamento de Turnos Opcionais
						.F.  			,; //16 -> .T. Determina a Criacao/Carga do Calendario Fisico
						NIL				,; //17 -> .T. Caso exista calendario fisico
						NIL				,; //18 -> Data inicial do calendario fisico
						NIL				,; //19 -> Data final do calendario fisico
						.F.				,; //20 -> .T. determina que o calendario sera gravado no caso de nao existir
						.F.		 	 	; //21 -> .T. determina que a rotina chamadora eh a Geracao de Calendarios (PONM400)
					);
		)

	For nStartDate := 1.00 To nFinishDate

		If cPaisLoc == "ARG" .And. cTipoRet == "D" .And. nStartDate == 1 .And. nDiasUteis != 0 .And. IsInCallStack("GPEA240")
			Exit
		EndIf
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³A Pesquisa da Data em aTabCalend devera ser Feita Baseada   na³
		³Ordem                  									   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		If ( nPosCalend := aScan( aTabCalend , bAscanOrdem ) ) == 0.00
			dStartDate++
		Else
			dStartDate := aTabCalend[ nPosCalend , CALEND_POS_DATA ]
		EndIf
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Retorna Conteudo de aTabCalend de Acordo com as Chaves Indices³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

		cTipoDia	:= GetInfoPosTab( CALEND_POS_TIPO_DIA 		, "1E" , dStartDate , aTabCalend )
		lFeriado	:= GetInfoPosTab( CALEND_POS_FERIADO		, "1E" , dStartDate , aTabCalend )
		lTrbFeriado	:= GetInfoPosTab( CALEND_POS_TRAB_FERIADO	, "1E" , dStartDate , aTabCalend )
		lAfast		:= GetInfoPosTab( CALEND_POS_AFAST			, "1E" , dStartDate , aTabCalend )
		cTipoOrig   := GetInfoPosTab( CALEND_POS_TIPO_ORIG_DIA  , "1E" , dStartDate , aTabCalend )
		nHoras      := GetInfoPosTab( CALEND_POS_HRS_TRABA   	, "1E" , dStartDate , aTabCalend, , , , , , , , , , , .T. )

		If ( (cTipoDia == "S") .and. (!lFeriado .or. (lFeriado .and. lTrbFeriado)) ) .or.;
		   ( lIncAfast .and. lAfast .and. cTipoOrig == "S" .and. ( !lFeriado .or. (lFeriado .and. lTrbFeriado) ) )
			If cTipoRet == "D" //Dias Uteis
				nDiasUteis ++
			ElseIf cTipoRet == "H"
				nDiasUteis+= nHoras
			ElseIf cTipoRet == "F" //Data Final
				nContDias++
				If nContDias == nDiasUteis
					dDataFim := dStartDate
					Exit
				EndIf
			EndIf
		ElseIf cTipoRet == "V" .And. lFeriado // Feriados
			nDiasUteis ++
		EndIf
	Next nStartDate
Else

	DbSelectArea("RCG")
	RCG->(DbSetOrder(RetOrder("RCG","RCG_FILIAL+RCG_PROCES+RCG_PER+RCG_SEMANA+RCG_ROTEIR+RCG_TNOTRA+DTOS(RCG_DIAMES)")))

	If !Empty(cPeriodo)
		cTnoAux := cTno
		If RCG->( dbSeek(xFilial("RCG") + cProcesso + cPeriodo + cNumPago + cRoteiro +  cTnoAux ) )
			lRetOK := .T.
		Else
			cTnoAux := "@@@"
			If RCG->( dbSeek(xFilial("RCG") + cProcesso + cPeriodo + cNumPago + cRoteiro +  cTnoAux ) )
				lRetOK := .T.
			EndIf
		EndIf

		If lRetOK

 			lRetOK := .F.

			cQuery := "SELECT RCG_DIAMES FROM " + RetSqlName("RCG")
			cQuery += " WHERE RCG_FILIAL = '" + xFilial("RCG") + "' AND"
			cQuery +=       " RCG_PROCES = '" + cProcesso + "' AND"
			cQuery +=       " RCG_PER >= '" + cPeriodo + "' AND"
			cQuery +=       " RCG_SEMANA >= '" + cNumPago + "' AND"
			cQuery +=       " RCG_TNOTRA = '" + cTnoAux + "' AND"
			cQuery +=       " RCG_DIAMES >= '" + DtoS(dDataIni) + "' AND"
			cQuery +=       " RCG_TIPDIA IN ('1','2') AND"
			cQuery +=		" D_E_L_E_T_ <> '*'"

			cQuery := ChangeQuery(cQuery)

			cAliasQry := "QRCG"

			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)

			nDiasAux	:= 0
			lRetOk		:= .F.

			While !(cAliasQry)->( Eof() )

				If cTipoRet == "D"
					If StoD((cAliasQry)->RCG_DIAMES) <= dDataFim
						nDiasAux++
						If StoD((cAliasQry)->RCG_DIAMES) == dDataFim
							lRetOk := .T.
							Exit
						EndIf
					Else
						lRetOk := .T.
						Exit
					EndIf
				Else
					nDiasAux++
					If nDiasAux == nDiasUteis
						dDataAux := StoD((cAliasQry)->RCG_DIAMES)
						lRetOk 	 := .T.
						Exit
					EndIf
				EndIf
				DbSkip()
			EndDo

			dbSelectArea(cAliasQry)
			dbCloseArea()
		EndIf
	EndIf

	If lRetOk
		If cTipoRet == "D"
			nDiasUteis := nDiasAux
		Else
			dDataFim   := dDataAux
		EndIf
	Else

		If lMsg
			If cCampo <> cCpo .or. Empty(cCpo)
				If cPaisLoc == "BRA"
					cHelp := OemToAnsi( STR0091 ) //"Turno nao encontrado. Serao considerados dias uteis de segunda-feira a sabado."
				Else
					cHelp := OemToAnsi( STR0026 ) //"Turno nao encontrado. Serao considerados dias uteis de segunda-feira a sexta-feira."
				EndIf
				if(!IsBlind())
					Help( ,, 'HELP',, cHelp, 1, 0)
				endIf
				cCpo := cCampo
			EndIf
		EndIf

		If cTipoRet == "D" //Dias Uteis
			// Dias uteis. Verifica na tabela de periodos
		   	LocGHabRea(dDataIni,; //Data Inicial
		  			   dDataFim		 ,; //Data Final
					   @nDiasUteis			 ,; //Retorna num. dias uteis
					   NIL					 ,; //Retorna num. dias totais
					   .F.					 ,; //Retorna a diferenca entre o num. dias totais e num. dias uteis
					   NIL					 ,; //Num. horas
					   !(cPaisLoc == "BRA")	 )  //Desconsiderar Sabado como dia util

		Else
			// Dias uteis. Nao considera sabado como dia util e
			// tambem jah verifica os feriados - funcao em GPEXLOC
			dDataFim := LOCFimFer(dDataIni   ,;  	//Data Inicial
								  nDiasUteis ,;	 	//Dias Totais
								  "1"		 ,; 	// Tipo - Calcula a data de finalizacao
								  Nil		 ,;
								  Nil		 ,;
								 !(cPaisLoc == "BRA")	 )  //Desconsiderar Sabado como dia util

		EndIf
	EndIf
EndIf

RestArea(aArea)

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³gp240VerEdit	  ³ Autor ³ Leandro Drumond       ³ Data ³19.04.2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verificar se o registro poderá ser editado. So permitira efetuar  ³±±
±±³          ³manutencao nos afastamentos que nao foram utilizados em calculo,  ³±±
±±³          ³ou seja, quando os campos Dias a Pagar e Saldo de Dias a Pagar    ³±±
±±³          ³estiverem com valores iguais.                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ gp240VerEdit()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ When de todos os campos da tabela SR8 SX3                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function gp240VerEdit()

Local lEdit 		:= .T.
Local cVar			:= ReadVar()
Local oModel		:= FWModelActivate()
Local oGrid 		:= oModel:GetModel("GPEA240_SR8")

If !oGrid:IsInserted()
	If (( !Empty(oGrid:GetValue("R8_DATAFIM")) .and. oGrid:GetValue("R8_STATUS") == "C" .And. !lFechado) .or.;
	   ( cVar == "M->R8_TIPOAFA".and. oGrid:GetValue("R8_STATUS") == "C" )).and. cPaisLoc == "BRA"
		lEdit := .F.
		If !lEdit .And. cPaisLoc == "BRA" .And. cVar == "M->R8_TIPOAFA" .And. oGrid:GetValue("R8_STATUS") == "C"
			If IsBlind() .Or. MsgYesNo(STR0275, STR0021)//"A alteração no tipo de ausência é para efetuar troca para um tipo com verba de incidência CP 15? Se sim, a alteração pode ser realizada; se não, não efetue a alteração"
				lEdit := .T.
				oGrid:LoadValue("R8_STATUS", " ")
			EndIf
		EndIf
	EndIf

	//bloqueia campos R8_DATAINI
	If cVar == "M->R8_DATAINI"
		If IsInCallStack("TCFA040") .or. oGrid:GetValue("R8_STATUS") == "C"
			lEdit := .F.
		EndIf
	EndIf

	If cPaisLoc <> "COL" .And. cVar == "M->R8_CONTAFA" .and. oGrid:GetValue("R8_STATUS") == "C"
		lEdit := .F.
	EndIf
EndIf
Return (lEdit)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GP240Reve ºAutor  ³Leandro Drumond     º Data ³  19/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se o campo pode ser editado  para Reversao         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gp240RevEdit()
Local cVar			:= ReadVar()
Local cTipoDia		:= ''
Local dDtAux		:= CtoD('')
Local lEdit 		:= .T.
Local oModel		:= FWModelActivate()
Local oGrid 		:= oModel:GetModel("GPEA240_SR8")

If oGrid:GetValue("R8_STATUS") == "R"
	lEdit := .F.
EndIf

If lEdit .and. oGrid:GetValue("R8_STATUS") == "C"
	lEdit := .F.
	If cVar == "M->R8_DATAFIM" .or. cVar == "M->R8_DURACAO"
		dDtAux := oGrid:GetValue("R8_DATAFIM")
		If Empty(dDtAux)
			lEdit := .T.
		Else
			If Type('aPerAtual') == "U" .or. Empty(aPerAtual)
		 		fGetPerAtual( @aPerAtual, xFilial("RCH",SRA->RA_FILIAL), SRA->RA_PROCES, If (SRA->RA_CATFUNC $ "P*A", fGetCalcRot("9"),fGetRotOrdinar()) )
		 	EndIf
			lEdit := .T.
			If aScan( aPerAtual, { |x| x[6] > dDtAux } ) > 0
				lEdit := .F.
			EndIf
		 EndIf
	EndIf
EndIf

If IsInCallStack("TCFA040")
	//bloqueia campos R8_DURACAO
	If cVar == "M->R8_DURACAO" .or. cVar == "M->R8_DATAFIM"
		lEdit := .F.
	EndIf
EndIf

If lEdit .and. cVar ==	"M->R8_DATAFIM" .and. !Empty(oGrid:GetValue("R8_TIPOAFA")) .and. !IsInCallStack('RunTrigger')//--nao valida se for execucao de gatilho
	cTipoDia := gp240RetCont(;
						"RCM", 							; 							// cAlias
   						1, 								; 							// nIndex
   						"RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'",	;			// cKey
	   					"RCM_TIPODI", 					; 							// Coluna retorno
	   					,.T.)	// Filtro
	If cTipoDia == "1"
		lEdit := .F.
	EndIf
EndIf

Return (lEdit)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GP240Mnt  ºAutor  ³Leandro Drumond     º Data ³  19/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se o campo pode ser editado de acordo              º±±
±±º          ³com a permissao do tipo de ausencia (RCM)                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Gp240Mnt()
Local cAtuAus     	:= ""
Local lEdit			:= .T.
Local oModel		:= FWModelActivate()
Local oGrid 		:= oModel:GetModel("GPEA240_SR8")

//Verifica se o tipo de ausencia escolhido pode ser manipulado
If RCM->( FieldPos( "RCM_MANTTO" ) ) > 0
	cAtuAus := gp240RetCont(;
  								"RCM", 							; 					// cAlias
   								1, 								; 					// nIndex
   								"RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'",	;	// cKey
   								"RCM_MANTTO", 					; 					// Coluna retorno
   							,.T.) 														// Filtro

	If cAtuAus == "2"
		Help( ,, 'HELP',, OemToAnsi(STR0066), 1, 0)
	   	lEdit := .F.
	EndIf
EndIf

Return (lEdit)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ResIncBox ºAutor  ³Silvia Taguti       º Data ³  18/03/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao para Retornar as Opcoes do Campo R8_RESINC          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ X3_CBOX para o campo R8_RESINC                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ResIncBox( lValid , lRetDesc , cOpcDesc )

Local cOpcBox

DEFAULT lValid		:= .F.
DEFAULT lRetDesc	:= .F.

If !( lValid )

	If !( lRetDesc )

		cOpcBox := ( "0=" + STR0029 + ";" )		//"Ninguna
		cOpcBox += ( "1=" + STR0030 + ";" )		//"Incapacidad Temporal"
		cOpcBox += ( "2=" + STR0031 + ";" )		//"Valuacion Inicial Provisional"
		cOpcBox += ( "3=" + STR0032 + ";" )		//"Valuacion Inicial Definitiva"
		cOpcBox += ( "4=" + STR0033 + ";" )		//"Defuncion"
		cOpcBox += ( "5=" + STR0034 + ";" )		//"Recaida"
		cOpcBox += ( "6=" + STR0035 + ";" )		//"Valuacion Posterior a la Fecha de Alta"
		cOpcBox += ( "7=" + STR0036 + ";" )		//"Revaluacion Provisional"
		cOpcBox += ( "8=" + STR0037 + ";" )		//"Recaida sin Alta Medica
		cOpcBox += ( "9=" + STR0038       )		//"Revaluacion Definitiva"

	Else

		Do Case
			Case ( cOpcDesc == "0" ) ; ( cOpcBox := STR0029 )	//"Ninguna
			Case ( cOpcDesc == "1" ) ; ( cOpcBox := STR0030 )	//"Incapacidad Temporal"
			Case ( cOpcDesc == "2" ) ; ( cOpcBox := STR0031 )	//"Valuacion Inicial Provisional"
			Case ( cOpcDesc == "3" ) ; ( cOpcBox := STR0032 )	//"Valuacion Inicial Definitiva"
			Case ( cOpcDesc == "4" ) ; ( cOpcBox := STR0033 )	//"Defuncion"
			Case ( cOpcDesc == "5" ) ; ( cOpcBox := STR0034 )	//"Numerico"
			Case ( cOpcDesc == "6" ) ; ( cOpcBox := STR0035 )	//"Recaida"
			Case ( cOpcDesc == "7" ) ; ( cOpcBox := STR0036 )	//"Valuacion Posterior a la Fecha de Alta"
			Case ( cOpcDesc == "8" ) ; ( cOpcBox := STR0037 )	//"Recaida sin Alta Medica
			Case ( cOpcDesc == "9" ) ; ( cOpcBox := STR0038 )	//"Revaluacion Definitiva"
		End Case

	EndIf

Else

	cOpcBox := "0123456789"

EndIf

Return( cOpcBox )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ContIncBoxºAutor  ³Silvia Taguti       º Data ³  03/18/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao para Retornar as Opcoes do Campo R8_CONTINC         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ X3_CBOX para o campo R8_CONTINC                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function ContIncBox( lValid , lRetDesc , cOpcDesc )

Local cOpcBox

DEFAULT lValid		:= .F.
DEFAULT lRetDesc	:= .F.

If !( lValid )

	If !( lRetDesc )

		cOpcBox := ( "1=" + STR0039 + ";" )		//"Unica"
		cOpcBox += ( "2=" + STR0040 + ";" )		//"Inicial"
		cOpcBox += ( "3=" + STR0041 + ";" )		//"Subsecuente"
		cOpcBox += ( "4=" + STR0042 + ";" )		//"Alta Medica o ST-2"
		cOpcBox += ( "5=" + STR0043 + ";" )		//"Valuacion"
		cOpcBox += ( "6=" + STR0044 + ";" )		//"Defuncion"
		cOpcBox += ( "7=" + STR0045 + ";" )		//"Prenatal"
		cOpcBox += ( "8=" + STR0046 + ";" )		//"Enlace"
		cOpcBox += ( "9=" + STR0047       )		//"PostNatal"
	Else
		Do Case
			Case ( cOpcDesc == "1" ) ; ( cOpcBox := STR0039 )	//"Unica"
			Case ( cOpcDesc == "2" ) ; ( cOpcBox := STR0040 )	//"Inicial"
			Case ( cOpcDesc == "3" ) ; ( cOpcBox := STR0041 )	//"Subsequente"
			Case ( cOpcDesc == "4" ) ; ( cOpcBox := STR0042 )	//"Alta Medica o ST-2"
			Case ( cOpcDesc == "5" ) ; ( cOpcBox := STR0043 )	//"Valuacion"
			Case ( cOpcDesc == "6" ) ; ( cOpcBox := STR0044 )	//"Defuncion"
			Case ( cOpcDesc == "7" ) ; ( cOpcBox := STR0045 )	//"Prenatal"
			Case ( cOpcDesc == "8" ) ; ( cOpcBox := STR0046 )	//"Enlace"
			Case ( cOpcDesc == "9" ) ; ( cOpcBox := STR0047 )	//"PostNatal"
		End Case
	EndIf
Else
	cOpcBox := "123456789"

EndIf

Return( cOpcBox )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ValidInc  ºAutor  ³Microsiga           º Data ³  03/11/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fValidInc(cTipo,cCampo)

Local cTipoAfa		:= ""
Local cTipoPd		:= ""
Local cTipoVerba  	:= ""
Local cConseq 		:= "0"
Local lValid  		:= .T.
Local oModel		:= FWModelActivate()
Local oGrid 		:= oModel:GetModel("GPEA240_SR8")

Default cCampo := "0"
Default cTipo := "1"

cTipoAfa := gp240RetCont("RCM" 														,; 	// cAlias
   						 1															,;	// nIndex
   						 "RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'"				,;	// cKey
   						 "RCM_TPIMSS"												,;	// Coluna retorno
   						 ,.T.	)	// Filtro

cTipoPd := gp240RetCont("RCM" 														,; 	// cAlias
						1															,;	// nIndex
   						"RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'"				,;	// cKey
   						"RCM_PD"													,;	// Coluna retorno
   						,.T.	)	// Filtro

If cTipoAfa == "2"
	cTipoVerba := PosSrv(cTipoPd,SR8->R8_FILIAL,"RV_CODFOL")
	If cTipo == "1"
		If  (cTipoVerba == "0439" .And. !(cCampo $ "0|1|2|3|4|5|6|7|8|9"))  .Or.;  	//Risco de Trabalho
			(cTipoVerba == "0583" .And. !(cCampo $ "0|1|4")) .Or.;		            	//Enfermedad General
			(cTipoVerba == "0438" .And. !(cCampo $ "0|1|4")) 		               		//Maternidad
			lValid = .F.
			cHelp := OemToAnsi( STR0048 ) //"Consequencia ou Sequela incompativel com o tipo de Incapacidade"
			Help( ,, 'HELP',, cHelp, 1, 0)
		EndIf
	Else
		cConseq := oGrid:GetValue("R8_RESINC")
		If cConseq == "1" .And. !(cCampo $ "0|1|2|3|4") .or.;
		   cConseq == "2" .And. cCampo <> "5" .Or. ;
		   cConseq == "3" .And. cCampo <> "5" .Or.;
		   cConseq == "4" .And. cCampo <> "6" .Or.;
		   cConseq == "5" .And. !(cCampo $ "1|2|3|4") .Or.;
		   cConseq == "6" .And. cCampo <> "5" .Or.;
		   cConseq == "7" .And. cCampo <> "5" .Or.;
		   cConseq == "8" .And. cCampo <> "5" .Or.;
		   cConseq == "9" .And. cCampo <> "5"
			lValid = .F.
			cHelp := OemToAnsi( STR0049 ) //"Controle de la Incapacidad Incompativel con o tipo ou Secuela"
			Help( ,, 'HELP',, cHelp, 1, 0)
		EndIf
	EndIf
EndIf


Return(lValid)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA260   ºAutor  ³Valdeci Lira        º Data ³  23/12/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Com base no campo RCM_TIPO informado, retorna o conteudo doº±±
±±º          ³do campo RCM_TIPOAF, que informa o tipo de ausencia         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function getTypeAbsence( cType )
Local aArea 		:= {}
Local cTypeAbsence 	:= ""

DEFAULT cType := ""

If Empty(cType)
	cTypeAbsence := ""
Else
	aArea := GetArea()

	dbSelectArea("RCM")
	RCM->(dbSetOrder( retOrder("RCM_FILIAL+RCM_TIPO") ))

	If ( RCM->(dbSeek( xFilial("RCM") + cType )) )
		If FieldPos("RCM_TIPOAF") > 0
			cTypeAbsence := RCM->RCM_TIPOAF
		EndIf
	EndIf

	RestArea( aArea )
EndIf

Return cTypeAbsence

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA240   ºAutor  ³Leandro Drumond     º Data ³  19/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Preenche o tipo de afastamento no aCols.                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MP10                                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function f240DescAfast()

Local oModel		:= FWModelActivate()
Local oGrid 		:= oModel:GetModel("GPEA240_SR8")

oGrid:SetValue("R8_DESCTP", fDesc("RCM", oGrid:GetValue("R8_TIPOAFA"), "RCM_DESCRI"))
oGrid:SetValue("R8_PD", fDesc("RCM", oGrid:GetValue("R8_TIPOAFA"), "RCM_PD"))

oGrid:GridDtRefresh()

Return( .T. )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³aContAfaValºAutor ³Leandro Drumond     º Data ³  22/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se existe a sequencia indicada no campo Cont.Seq. º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function aContAfaVal()
Local cContAfa	:= ""
Local cCIDAfa	:= ""
Local cTipoAfa	:= ""
Local nRet 		:= 0
Local nX		:= 0
Local nDiasEmp	:= 0
Local oModel	:= FWModelActivate()
Local oGrid 	:= oModel:GetModel("GPEA240_SR8")
Local nTamGrid	:= oGrid:Length()
Local nLinAtual := oGrid:GetLine()

If cPaisLoc <> 'COL'
	cContAfa := oGrid:GetValue("R8_CONTAFA")
	cCIDAfa  := oGrid:GetValue("R8_CID")
	cTipoAfa := oGrid:GetValue("R8_TIPOAFA")
	nDiasEmp := oGrid:GetValue("R8_DIASEMP")

	If cContAfa >= oGrid:GetValue("R8_SEQ")
		Help( ,, 'HELP',, OemToAnsi(STR0058), 1, 0)
		Return( .F.)
	EndIf

	For nX := 1 to nTamGrid
		If nX != nLinAtual
			oGrid:GoLine(nX)
			//Nao esta deletado e a sequencia e igual a que esta sendo digitada
			If !oGrid:IsDeleted()
				// Busca dias Empresas Linhas Anterior
				If (oGrid:GetValue("R8_SEQ") == cContAfa)
					nDEmptAnt	:= fSrcDEmp(oGrid:GetValue("R8_TIPOAFA"))
					If oGrid:GetValue("R8_TIPOAFA") == cTipoAfa .Or. ( !Empty(oGrid:GetValue("R8_CID")) .And. LEFT(oGrid:GetValue("R8_CID"),3) == LEFT(cCIDAfa,3) )
						nRet := 1
					Else
						If nDEmptAnt == nDiasEmp
							If !IsBlind() .AND. MsgYesNo(STR0076) //"O tipo de ausência da sequência informada é diferente da sequência atual. Deseja continuar?"
								nRet := 1
							Else
								nRet := 2
								Exit
							EndIf
						Else
							// Dias Empresa Sequencia Anteior é Diferente de Dias Empresas Sequencia Atual
							Help( ,, 'HELP',, OemToAnsi(STR0077), 1, 0)//"O tipo de ausência e regras de cálculo da sequência informada são diferentes da sequência atual. Altere o cadastro antes de continuar."
							nRet := 2
							Exit
						EndIf
					EndIf
				EndIf
				If cPaisLoc <> 'COL' .And. ( oGrid:GetValue("R8_CONTAFA") == cContAfa )
					nRet := 2
					Help( ,, 'HELP',, OemToAnsi(STR0083), 1, 0)//"Já existe uma continuação para esta sequencia."
					Exit
				EndIf
			EndIf
		EndIf
	Next nX

	oGrid:GoLine(nLinAtual)

	If nRet == 0
		Help( ,, 'HELP',, OemToAnsi(STR0019), 1, 0)
	EndIf
EndIf

Return( nRet == 1 )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³a240SldDiasºAutor  ³ Ademar Fernandes   º Data ³  10/06/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ - Calcula a duracao do afastamento, os dias a serem pagos   º±±
±±º         ³ pela empresa                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ Microsiga Protheus 10                                       º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a240SldDias()

Local nAnoDtIni		:= 0
Local cSeqAfa		:= ""
Local c1ContAfa		:= ""
Local c2ContAfa		:= ""
Local nDiasEmp		:= 0

Local n1DiasPagar	:= 0
Local n1DiasSaldo	:= 0

Local n2DiasPagar	:= 0
Local n2DiasSaldo	:= 0

Local nDifdPag		:= 0
Local nDifdSaldo	:= 0
Local cReadVar		:= ReadVar()
Local nX, nY
Local oModel		:= FWModelActivate()
Local oGrid 		:= oModel:GetModel("GPEA240_SR8")
Local nTamGrid		:= oGrid:Length()
Local nLinAtual 	:= oGrid:GetLine()


//# Salva os dados do Afastamento Atual
nAnoDtIni	:= Year( oGrid:GetValue("R8_DATAINI") )
cSeqAfa		:= oGrid:GetValue("R8_SEQ")
c1ContAfa	:= Iif( AllTrim(Substr(cReadVar,4)) == "R8_CONTAFA", &(ReadVar()), Iif(nPosSeqAnt>0, oGrid:GetValue("R8_CONTAFA"), ""))
nDiasEmp	:= oGrid:GetValue("R8_DIASEMP")

n2DiasPagar	:= oGrid:GetValue("R8_DPAGAR")
n2DiasSaldo	:= oGrid:GetValue("R8_SDPAGAR")

//# Busca informacoes dos 2 Afastamentos Anteriores
For nX := 1 to nTamGrid
	oGrid:GoLine(nX)
	If Year( oGrid:GetValue("R8_DATAINI") ) == nAnoDtIni .And.;
		oGrid:GetValue("R8_SEQ") == c1ContAfa

		n1DiasPagar	:= oGrid:GetValue("R8_DPAGAR")
		n1DiasSaldo	:= oGrid:GetValue("R8_SDPAGAR")
		c2ContAfa	:= oGrid:GetValue("R8_CONTAFA")
	EndIf
Next nX

If !Empty(c2ContAfa)
	For nY := 1 to nTamGrid
		oGrid:GoLine(nY)
		If Year( oGrid:GetValue("R8_DATAINI") ) == nAnoDtIni .And.;
			oGrid:GetValue("R8_SEQ") == c2ContAfa

			n1DiasPagar	+= oGrid:GetValue("R8_DPAGAR")
			n1DiasSaldo	+= oGrid:GetValue("R8_SDPAGAR")
		EndIf
	Next nY
EndIf

oGrid:GoLine(nLinAtual)

nDifdPag	:= Iif((n1DiasPagar+n2DiasPagar)>nDiasEmp, (nDiasEmp-n1DiasPagar),(n2DiasPagar))
nDifdSaldo	:= Iif((n1DiasSaldo+n2DiasSaldo)>nDiasEmp, (nDiasEmp-n1DiasSaldo),(n2DiasSaldo))

oGrid:LoadValue("R8_DPAGAR", nDifdPag)
oGrid:LoadValue("R8_SDPAGAR", nDifdSaldo)

oGrid:GridDtRefresh()

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³a240NumDiasºAutor  ³Microsiga           º Data ³  02/03/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ Calcula a duracao do afastamento,os dias a serem pagos pela º±±
±±º         ³empresa( afastamentos tipo O e P)                            º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ AP                                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a240NumDias(lMudaDur)

Local aPerAberto	:= {}
Local aPerFechado	:= {}
Local cReadVar		:= ReadVar()
Local cTipo			:= ""
Local cContin 		:= ""
Local cContAfa		:= ""
Local cPeriodo		:= ""
Local cNumPago		:= ""
Local dDtFim		:= CtoD("")
Local dDtIni		:= CToD("")
Local lRet			:= .T.
Local nDuracao		:= 0
Local nDiasEmp		:= 0
Local nDiasPagar	:= 0
Local nLenGrid		:= 0
Local nLinAtual 	:= 0
Local nX			:= 0
Local nPos			:= 0
Local nDiasPagos	:= 0
Local oModel		:= FWModelActivate()
Local oGrid 		:= oModel:GetModel("GPEA240_SR8")
Local lTemSRD	    := fTemSRD()//cliente que só utiliza ponto eletronico não deve fazer essa checagem, como forma de testar resolvemos ver se tem registro na SRD
Local lIntegTAF		:= .F.
Local lMsjAus		:= .T.
Local nMsjAus		:= SuperGetMV("MV_MSJAUS",.F.,1)

If cPaisLoc $ "MEX|PER|COL" .And. nMsjAus == 2
	lMsjAus := .F.
EndIf

DeFault lMudaDur := .T.

if(IsInCallStack("RHIMP01") .Or. ( Empty(oGrid:GetValue("R8_PER")) .And. !lTemSRD) )
	Return (.T.)
endIf

if(Type('aPerAtual') == "U")
	Private aPerAtual := {}
endIf

nLenGrid	:= oGrid:Length()
nLinAtual 	:= oGrid:GetLine()

dDtFim	:= If( AllTrim(SubStr(cReadVar,4))== "R8_DATAFIM",&(ReadVar()),oGrid:GetValue("R8_DATAFIM"))
cContin := If( AllTrim(SubStr(cReadVar,4))== "R8_CONTINU",&(ReadVar()),oGrid:GetValue("R8_CONTINU"))
cContAfa:= If( AllTrim(SubStr(cReadVar,4))== "R8_CONTAFA",&(ReadVar()),oGrid:GetValue("R8_CONTAFA"))
cTipo	:= If( AllTrim(SubStr(cReadVar,4))== "R8_TIPOAFA",&(ReadVar()),oGrid:GetValue("R8_TIPOAFA"))
nDuracao := If( AllTrim(SubStr(cReadVar,4))== "R8_DURACAO",&(ReadVar()),oGrid:GetValue("R8_DURACAO"))

If( AllTrim(SubStr(cReadVar,4))== "R8_DATAINI" )
	lFechado := .F.
	dDtIni	 := &(ReadVar())
	If dDtIni < SRA->RA_ADMISSA
		Help( ,, 'HELP',, OemToAnsi(STR0092), 1, 0) //"Data inicial não pode ser menor que data de admissão do funcionário."
		Return(.F.)
	EndIf
	//Verifica se a data de início do afastamento foi alterada e se o registro já foi integrado ao TAF,
	//se sim não será permitida a alteração.
	lIntegTAF := SR8->(ColumnPos( "R8_INTGTAF")) > 0 .And. !Empty(oGrid:GetValue("R8_INTGTAF"))
	If oGrid:IsFieldUpdated("R8_DATAINI") .And. lIntegTAF
		If !lMiddleware
			Help( ,, 'HELP',, OemToAnsi(STR0243), 1, 0) //"Não é possivel alterar a data de inicio do afastamento pois o registro já foi integrado com o TAF, caso a data esteja incorreta exclua o registro e o inclua novamente."
		Else
			Help( ,, 'HELP',, OemToAnsi(STR0255), 1, 0) //"Não é possivel alterar a data de inicio do afastamento pois o registro já foi integrado com o Middleware, caso a data esteja incorreta exclua o registro e o inclua novamente."
		EndIf
		Return(.F.)
	Endif
Else
	dDtIni   := oGrid:GetValue("R8_DATAINI")
	cPeriodo := oGrid:GetValue("R8_PER")
EndIf

If ( AllTrim(SubStr(cReadVar,4)) == "R8_DATAINI" )
	If !Empty(dDtIni)
		If Empty(aPerAtual)
	 		fGetPerAtual( @aPerAtual, xFilial("RCH",SRA->RA_FILIAL), SRA->RA_PROCES, If (SRA->RA_CATFUNC $ "P*A", fGetCalcRot("9"),fGetRotOrdinar()) )
	 	EndIf
		If aScan( aPerAtual, { |x| x[6] > dDtIni } ) > 0
			If (IsBlind()) .Or. (IIf(cPaisLoc # "ARG" .And. lMsjAus, IsInCallStack('MDTA686') .Or. MsgYesNo(STR0216), .T.)) // "A data informada pertence a um período fechado. Os afastamentos lançados em períodos fechados não serão refletidos nos cálculos já efetuados. Deseja prosseguir?"
				lRet := .T.
				lFechado := .T.
			Else
				lRet := .F.
				Help( ,, 'HELP',, OemToAnsi(STR0068) + "-->"+ DtoC(dDtIni) + "", 1, 0) //Data inicial deve ser maior que data final do último período fechado.
			EndIf
 		EndIf
		If lRet
			aPerFechado:= {}
			aPerAberto := {}
			fRetPerComp( Month2Str( dDtIni ), Year2Str( dDtIni ), xFilial("RCH", SRA->RA_FILIAL), SRA->RA_PROCES, If (SRA->RA_CATFUNC $ "P*A", fGetCalcRot("9"),fGetRotOrdinar()), @aPerAberto, @aPerFechado)

			nPos := aScan( aPerAberto, { |x| dDtIni >= x[5] .and. dDtIni <= x[6] } )
			If !lFechado .and. ( nPos == 0 .or. (!Empty(aPerAberto[nPos,10]) .and. dDtIni > aPerAberto[nPos,10] ) )
				lRet := .F.
		    	If nPos == 0
		    		Help( ,, 'HELP',, OemToAnsi(STR0087), 1, 0) //"Não existe periodo cadastrado para esta data ou o periodo não esta aberto."
		    	EndIf
		     ElseIf lFechado .And. nPos == 0
		    	nPos := aScan( aPerFechado, { |x| dDtIni >= x[5] .and. dDtIni <= x[6] } )
		    	If nPos == 0
					If !IsBlind() .And. MsgYesNo( OemToAnsi(STR0247) ) //Não existe período cadastrado para esta data. Deseja cadastrar esse período como fechado?
						If !( oGrid:GetValue("R8_SEQ") $ cGravaPer )
							cGravaPer += oGrid:GetValue("R8_SEQ") + "*"
						EndIf
					Else
						Help( ,, 'HELP',, OemToAnsi(STR0217), 1, 0) //"Não existe periodo cadastrado para esta data."
						lRet := .F.
					EndIf
		    	Else
		    		cPeriodo := aPerFechado[nPos,1]
		    		oGrid:LoadValue("R8_PER",cPeriodo)
		    		cNumPago := aPerFechado[nPos,2]
		    		oGrid:LoadValue("R8_NUMPAGO",cNumPago)
		    	EndIf
		    Else
		    	cPeriodo := aPerAberto[nPos,1]
		    	oGrid:LoadValue("R8_PER",cPeriodo)
		    	cNumPago := aPerAberto[nPos,2]
		    	oGrid:LoadValue("R8_NUMPAGO",cNumPago)
				IF oGrid:IsFieldUpdated("R8_DATAINI") .And. oGrid:GetValue("R8_STATUS") == "T"
					oGrid:SetValue("R8_SDPAGAR", 0 )
					oGrid:SetValue("R8_DPAGOS", 0 )
					oGrid:SetValue("R8_STATUS", "")
				Endif
			EndIf
		EndIf
		If lRet
			If !Empty(oGrid:GetValue("R8_DURACAO"))
				oGrid:SetValue("R8_DURACAO",0)
			EndIf
		EndIf
	EndIf
EndIf

If lRet .and. !( AllTrim(SubStr(cReadVar,4)) == "R8_DATAINI" )
	If ( AllTrim(SubStr(cReadVar,4)) == "R8_DATAFIM" ) .and. !Empty(dDtFim)
		If Empty(aPerAtual)
	 		fGetPerAtual( @aPerAtual, xFilial("RCH",SRA->RA_FILIAL), SRA->RA_PROCES, If (SRA->RA_CATFUNC $ "P*A", fGetCalcRot("9"),fGetRotOrdinar()) )
	 	EndIf
		If aScan( aPerAtual, { |x| x[6] > dDtFim } ) > 0 .AND. !lFechado
			If (IsBlind()) .Or. (IIf(cPaisLoc # "ARG" .And. lMsjAus, IsInCallStack('MDTA686') .Or. MsgYesNo(STR0216), .T.)) // "A data informada pertence a um período fechado. Os afastamentos lançados em períodos fechados não serão refletidos nos cálculos já efetuados. Deseja prosseguir?"
				lFechado := .T.
			Else
			    Help( ,, 'HELP',, OemToAnsi(STR0086), 1, 0) //Data final deve ser maior que data final do último período fechado.
				Return(.F.)
			EndIf
 		EndIf
 		If dDtFim < dDtIni
			Help( ,, 'HELP',, OemToAnsi(STR0089), 1, 0) //"Data final deve ser maior que data inicial."
			Return(.F.)
 		EndIf
	EndIf

	a240AtuDias(dDtIni,dDtFim,@cContin,@cContAfa,cTipo,@nDuracao,@nDiasEmp,@nDiasPagar,oGrid)

    If lMudaDur
    	oGrid:LoadValue("R8_DURACAO", nDuracao)
    EndIf
    oGrid:SetValue("R8_DIASEMP", nDiasEmp)
	oGrid:SetValue("R8_DPAGAR", nDiasPagar)
	oGrid:SetValue("R8_CONTINU", cContin)

	If oGrid:GetValue("R8_CONTAFA") <> cContAfa
		oGrid:SetValue("R8_CONTAFA", cContAfa)
	EndIf

	If lFechado .Or. ( !Empty(aPerAtual) .And. dDtIni < aPerAtual[1,6] .And. oGrid:GetValue("R8_STATUS") <> "C" )
		If cPaisLoc # "ARG"
			If !Empty(dDtFim) .and. dDtFim <= aPerAtual[1,6]-1
				nDiasPagos := nDiasPagar
			Else
				nDiasPagos := ( ( aPerAtual[1,6]-1 ) - dDtIni ) + 1
				nDiaspagos := Min(nDiasPagos,nDiasPagar)
			EndIf
		EndIf
		If cPaisLoc # "MEX" .AND. oGrid:GetValue("R8_STATUS") != "C"
			oGrid:SetValue("R8_DPAGOS", nDiaspagos)
			oGrid:SetValue("R8_SDPAGAR", nDiasPagar - nDiasPagos)
		EndIf
		If lFechado .And. cPaisLoc # "ARG"
			oGrid:SetValue("R8_STATUS", "T")
		EndIf
	EndIf

	If ( AllTrim(SubStr(cReadVar,4)) == "R8_DATAFIM" ) .and. !(oGrid:GetValue("R8_SDPAGAR") == 0)
		If !Empty(oGrid:GetValue("R8_DPAGOS"))
			oGrid:SetValue("R8_SDPAGAR",Max(0,nDiasPagar - oGrid:GetValue("R8_DPAGOS")))
		Else
			oGrid:SetValue("R8_SDPAGAR",nDiasPagar)
		EndIf
	EndIf

	If nLinAtual < nLenGrid
		cSeq := oGrid:GetValue("R8_SEQ")
		For nX := (nLinAtual+1) to nLenGrid
			oGrid:GoLine(nX)
			If !oGrid:IsDeleted()
				If oGrid:GetValue("R8_TIPOAFA") $ "003|004" .and. oGrid:GetValue("R8_CONTAFA") == cSeq //Tipo 003 e 004 sao afastamento por acidente de trabalho e doenca
					dDtFim	:= oGrid:GetValue("R8_DATAFIM")
					dDtIni	:= oGrid:GetValue("R8_DATAINI")
					cContin := oGrid:GetValue("R8_CONTINU")
					cContAfa:= oGrid:GetValue("R8_CONTAFA")
					cTipo	:= oGrid:GetValue("R8_TIPOAFA")

		    		nDuracao	:= 0
					nDiasEmp	:= 0
					nDiasPagar	:= 0

					a240AtuDias(dDtIni,dDtFim,@cContin,@cContAfa,cTipo,@nDuracao,@nDiasEmp,@nDiasPagar,oGrid)
					If lMudaDur
						oGrid:SetValue("R8_DURACAO", nDuracao)
					EndIf
					oGrid:SetValue("R8_DIASEMP", nDiasEmp)
					oGrid:SetValue("R8_DPAGAR", nDiasPagar)
					cSeq := oGrid:GetValue("R8_SEQ")
				EndIf
			EndIf
		Next nX
		oGrid:GoLine(nLinAtual)
	EndIf
EndIf

Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³a240AtuDiasºAutor  ³Leandro Drumond     º Data ³  23/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³                                                             º±±
±±º         ³                                                             º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ AP                                                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a240AtuDias(dDtIni, dDtFim, cContin, cContAfa, cTipo, nDuracao, nDiasEmp, nDiasPagar, oGrid, lEmpPag15)
Local nDiasPag	:= 0
Local nDiasTot	:= 0
Local nLinha	:= 0
Local nLinAtual := 0
Local nLenGrid	:= 0
Local nPosMater	:= 0
Local oModel	:= Nil
Local cContAtu	:= cContAfa

DEFAULT	oGrid 	  := Nil
DEFAULT	lEmpPag15 := .F.

If oGrid == Nil
	oModel := FWModelActivate()
	oGrid  := oModel:GetModel("GPEA240_SR8")
EndIf

nDiasEmp := gp240RetCont("RCM" 														,; 	// cAlias
   						 1															,;	// nIndex
   						 "RCM_FILIAL = '" + xFilial("RCM") + "' AND RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "'"				,;	// cKey
   						 "RCM_DIASEM"												,;	// Coluna retorno
   						 ,.T.	)	// Filtro
nDiasPag := nDiasEmp

If !Empty(dDtFim) .AND. !(cPaisLoc $ "MEX|BOL|ARG|COL|PAR|PER")
	nDuracao:= (dDtFim-dDtIni)+1
ElseIf !Empty(dDtFim) .AND. cPaisLoc $ "MEX|BOL|ARG|COL|PAR|PER"
	lExec := .T.
	nDuracao := gp240CalcNumDias()
EndIf

If nDiasEmp > 0
	nDiasTot += nDuracao
	If Empty(cContAfa)  // nao e continuacao de afastamento
		nDiasPagar 	:= If( nDuracao > nDiasEmp, nDiasEmp,nDuracao)

		If cPaisLoc == "PAR"
         	//No Paraguai, se o func. se afastar mais do que 3 dias, o IPS paga para o func.
			nDiasPagar 	:= If( nDuracao > nDiasEmp, 0,nDuracao)
		EndIf
	Else

		nLenGrid	:= oGrid:Length()
		nLinAtual 	:= oGrid:GetLine()

	For nLinha := nLenGrid to 1 step -1
			oGrid:GoLine(nLinha)
			If !oGrid:IsDeleted()
				If oGrid:GetValue("R8_SEQ") == cContAfa
					If dDtIni - oGrid:GetValue("R8_DATAFIM") > 60

		                //Verifica se o afastamento foi interrompido por licenca maternidade
						If cTipo $ "006|007|008"
							dDtMater := oGrid:GetValue("R8_DATAFIM")+1
							For nPosMater := 1 to nLenGrid
								oGrid:GoLine(nPosMater)
								If !oGrid:IsDeleted()
									If oGrid:GetValue("R8_DATAINI")  == dDtMater .and. oGrid:GetValue("R8_DATADIM") + 1 == dDtIni
										nDiasEmp := 0
									EndIf
								EndIf
							Next nPosMater
						EndIf
					Else
						cContAfa	:= oGrid:GetValue("R8_CONTAFA")
						nDiasEmp	:= max(0, nDiasEmp - oGrid:GetValue("R8_DURACAO"))
						nDiasTot 	+= oGrid:GetValue("R8_DURACAO")
					EndIf
					If Empty(cContAfa) .Or. nDiasEmp == 0
						Exit
					EndIf
				EndIf
			EndIf
		Next nLinha
		nDiasPagar 	:= If( nDuracao > nDiasEmp, nDiasEmp,nDuracao)
		cContAfa	:= cContAtu
		oGrid:GoLine(nLinAtual)
	EndIf
	If nDiasTot > nDiasPag
		lEmpPag15	:= .T.
	EndIf
Else
	If 	!(cPaisLoc == "BRA" .and. cTipo $ "006|007|008|010|011|012")
		cContin := "2"
		If !Empty(cContAfa)
			MsgAlert(OemToAnsi(STR0270)) //"Apenas ausências com dias pagos pela empresa devem ter a sequência preenchida."
		EndIf
		cContAfa:= Space(03)
	EndIf
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fOpenRadio ºAutor ³Leandro Drumond     º Data ³  22/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica filtro que deve serr feito na tela.                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fOpenRadio(nOpcRadio, cTitJan, cTitBox, cTitRad1, cTitRad2)
Local nOpcAux
Local oRadio
Local oDlg
Local oGroup
Local oFont
Local bSet15
Local bSet24

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaração de arrays para dimensionar tela		             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}
Local aGDCoord		:= {}

nOpcAux   := nOpcRadio
nOpcRadio := 0

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Monta as Dimensoes dos Objetos         					   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aAdvSize		:= MsAdvSize()
aAdvSize[5]		:= (aAdvSize[5]/100) * 30	//horizontal
aAdvSize[6]		:= (aAdvSize[6]/100) * 20	//Vertical
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
aGdCoord		:= { (aObjSize[1,1]+3), (aObjSize[1,2]+5), (((aObjSize[1,3])/100)*14.9), (((aObjSize[1,4])/100)*29.6) }	//1,3 Vertical /1,4 Horizontal

DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
DEFINE MSDIALOG oDlg FROM  aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] TITLE OemToAnsi(cTitJan) PIXEL

	@ aGdCoord[1],aGdCoord[2] GROUP oGroup TO aGdCoord[3],aGdCoord[4] LABEL OemToAnsi(cTitBox) OF oDlg PIXEL
	oGroup:oFont:=oFont

	@ aGdCoord[1]+10,aGdCoord[2]+5 RADIO oRadio VAR nOpcAux ITEMS 	OemToAnsi(cTitRad1), OemToAnsi(cTitRad2);
	          SIZE 115,010 OF oDlg PIXEL

	bSet15 := {|| nOpcRadio := nOpcAux, oDlg:End()}
	bSet24 := {|| nOpcRadio := 0,       oDlg:End()}

ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg, bSet15, bSet24, Nil, Nil) CENTERED

Return( nOpcRadio )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp240ValAfaºAutor ³Leandro Drumond     º Data ³  23/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valide do campo R8_TIPOAFA - BRASIL.          			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gp240ValAfa()
Local cVar 		:= &(ReadVar())
Local lRet 		:= .T.
Local nDiasEmp	:= 0
Local oModel    := FWModelActivate()
Local oGrid     := oModel:GetModel("GPEA240_SR8")

If cVar $ "011|012"
	Help( ,, 'HELP',, OemToAnsi(STR0075), 1, 0) //"O codigo de afastamento informado nao pode mais ser utilizadao."

	lRet := .F.
EndIf

lRet := VldGenero(oGrid, lRet)
//Se duracao possuir valor, significa que tipo de afastamento doi alterado e por isso zero a duracao e dias a pagar para que seja recalculado.
If !Empty(oGrid:GetValue("R8_DURACAO")) .And. (cPaisLoc != "BRA" .Or. Empty(oGrid:GetValue("R8_DPAGOS")))
	oGrid:SetValue("R8_DURACAO",0)
	oGrid:SetValue("R8_DPAGAR",0)
	// Limpar Campos eSocial
	oGrid:SetValue("R8_TIPOAT","")
	oGrid:SetValue("R8_NMMED","")
	oGrid:SetValue("R8_IDEOC","")
	oGrid:SetValue("R8_CRMMED","")
	oGrid:SetValue("R8_UFCRM","")
	oGrid:SetValue("R8_CNPJCES","")
	oGrid:SetValue("R8_TPCES","")
	oGrid:SetValue("R8_CNPJSIN","")
	oGrid:SetValue("R8_TPSIND","")
EndIf

lExec := .T.

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp240CommitºAutor ³Leandro Drumond     º Data ³  17/04/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Efetua validacoes antes da gravacao.          			    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gp240Commit(oModel)

Local aArea			:= GetArea()
Local aSR8ID		:= {}
Local aGridInsert   := {}
Local aGridDelet    := {}
Local aGridTab      := {}
Local cNumId		:= ""
Local cNumIdAux		:= ""
Local nOperation	:= oModel:GetOperation()
Local nLinha	 	:= 0
Local nLenGrid		:= 0
Local nLinAtual 	:= 0
Local nX            := 0
Local oGrid 	 	:= oModel:GetModel("GPEA240_SR8")
Local oGridSRA		:= oModel:GetModel("GPEA240_SRA")
Local dDataIni
Local dDataFim
Local dMaxInsert := Stod(" / / ")
Local dMaxTab    := Stod(" / / ")
Local dMaxDelete := Stod(" / / ")
Local dDtvTest   := Stod(" / / ")
Local dAux       := StoD(" / / ")
Local cMatOr
Local cFilOr
Local cPosto
Local cSucur := xFilial("RIV")
Local lRet	:= .T.
Local lOrgcfg 	:= SuperGetMv("MV_ORGCFG", NIL, "0" ) == "1" .And. SuperGetMv("MV_IORGGPE", NIL, "0" ) == "1"
Local aRep		:= {}
Local cRet		 := ""
Local mChave	 := ""
Local mChavePesq := ""
Local aASRASUB 	 := {}
Local cNomeSub 	 := ""
Local aParTela 	 := {}
Local cRelease   := GetRpoRelease()
Local lOpcMeuRH  := FindFunction("FGETIMGMEDICAL")
Local nDuracao	:= 0
Local aDadosTAF	:= {}
Local aDados	:= {}
Local lRobo		:= IsBlind()
Local aAltera	:= {}
Local nPosSR8   := 0
Local lAtuSR8	:= .F.

Private oObjREP		:= Nil

aAltera := oGrid:GetLinesChanged()

//-- Inicializa a integracao via WebServices TSA
If lTSREP
	oObjREP := PTSREPOBJ():New()
	SX5->(dbSetOrder(1))
EndIf

nLenGrid	:= oGrid:Length()
nLinAtual 	:= oGrid:GetLine()

If lGestPubl .AND. cModulo $ 'GFP*VDF'
	mChave		:= DTOS(oGrid:GetValue("R8_DATAINI"))+oGrid:GetValue("R8_TIPOAFA")
	mChavePesq 	:= if(!Empty(SR8->R8_DATAINI),dtos(SR8->R8_DATAINI)+oGrid:GetValue("R8_TIPOAFA"),mChave)
	aASRASUB := SRA->(GetArea())
	cNomeSub := Posicione("SRA",1,oGrid:GetValue("R8_FILSUB")+oGrid:GetValue("R8_MATSUB"),"RA_NOME")
	RestArea(aASRASUB)
	aParTela := {	'GPEA240',;
					SRA->RA_MAT,;
		            SRA->RA_CATFUNC,;
		            mChave,;
		            SRA->RA_FILIAL,;
		            SRA->RA_CIC,;
		            oGrid:GetValue("R8_DATAINI"),;
		            '6'  ,;
		            'SR8',;
		            "",;
					"",;
					oGrid:GetValue("R8_DATAINI"),;
					oGrid:GetValue("R8_DATAFIM"),;
					oGrid:GetValue("R8_DURACAO"),;
					0,;
					0,;
					oGrid:GetValue("R8_FILSUB"),;
					oGrid:GetValue("R8_MATSUB"),;
					cNomeSub ,;
					Posicione("RCM",1, FwxFilial("RCM") + oGrid:GetValue("R8_TIPOAFA") ,"RCM_DESCRI") ,;
					0,;
					"",;
					"",;
					"",;
					RCM->RCM_PUBLIC;
					}
EndIf
//Recalcula os campos dias empresa, dias a pagar e saldo a pagar de todos os registros.
If cPaisLoc <> "ARG"
	For nLinha := 1 to nLenGrid
		oGrid:GoLine(nLinha)
		If !oGrid:IsDeleted()
			Loop
		EndIf
		If oGrid:GetValue("R8_STATUS") <> "C"

			gp240DiasEmp(nLinha,oGrid)

			If cPaisLoc == "BRA"
				aPerTodos := {}
				fRetPerComp( Month2Str( oGrid:GetValue("R8_DATAINI") ), Year2Str( oGrid:GetValue("R8_DATAINI") ), Nil, Nil, Nil, , , @aPerTodos)
	            If Len( aPerTodos ) > 0
       				If aPerTodos[1,1] < oGrid:GetValue("R8_PER") .And. oGrid:GetValue("R8_DIASEMP") # 999
	     				oGrid:LoadValue("R8_DIASEMP", 0)
	     				oGrid:LoadValue("R8_DPAGAR", 0)
	     				oGrid:LoadValue("R8_SDPAGAR", 0)
				    EndIf
			    EndIf
			EndIf
		EndIf
	Next nLinha
EndIf

Begin Transaction

	//--Se nao for Exclusao
	If nOperation # MODEL_OPERATION_DELETE
			//--Processa Gatilhos
			EvalTrigger()
			//--Gravacao
			SRA->(dbSetOrder(1))
			SRA->( dbSeek (oGridSRA:GetValue("RA_FILIAL") + oGridSRA:GetValue("RA_MAT") ) )
			For nLinha := 1 to nLenGrid
				oGrid:GoLine(nLinha)

				// Gravacao do numero identificador.
				cNumId  := "SR8" + oGridSRA:GetValue("RA_MAT") + oGrid:GetValue("R8_PD") + DtoS(oGrid:GetValue("R8_DATAINI"))
				lAtuSR8	:= .F.

				//Quando a inclusao é feita pela rotina de aprovacao inclui informacao da requisicao no NumID
				//Ou quando é feita a manutenção de um registro que teve origem no Atestado do MeuRH
				If lOpcMeuRH
					If lTCFA040 .And. (nLinha == nLenGrid) .And. RH3->RH3_TIPO == "R"
						If RH3->(ColumnPos("RH3_BITMAP")) > 0 .And. !Empty(RH3->RH3_BITMAP)
							cNumId := cNumId + "_" + RH3->RH3_CODIGO
						EndIf
					Else
						cNumIdAux := AllTrim( oGrid:GetValue("R8_NUMID") )
						If !Empty(cNumIdAux) .And. "_" $ cNumIdAux
							cNumId += "_" + SubStr( cNumIdAux, Len(cNumIdAux)-4, 5 )
						EndIf
					EndIf
				EndIf

				If !(cPaisLoc == "BRA" .And. !oGrid:IsInserted() .And. !Empty(oGrid:GetValue("R8_DPAGOS")) .And. !Empty(oGrid:GetValue("R8_NUMID"))  .And. RetValSrv( oGrid:GetValue("R8_PD"), SRA->RA_FILIAL, "RV_INSS" ) == "S" .And. RetValSrv( oGrid:GetValue("R8_PD"), SRA->RA_FILIAL, "RV_INCCP" ) == "15") .And. oGrid:GetValue("R8_NUMID") <> cNumId
					oGrid:LoadValue("R8_NUMID", cNumId)
				EndIf

				//Array utilizado para atualizacao do calendario no ponto
				If oGrid:IsDeleted()
					aAdd( aSR8ID , { nLinha , oGridSRA:GetValue("RA_FILIAL")+cNumId , .T.} )

					If lTSREP
						If RCM->( dbSeek( xFilial("RCM") + oGrid:GetValue("R8_TIPOAFA") ) )
							If RCM->RCM_TIPOAF <> "4"   //Ferias

									/*/
									ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									³ Posiciona no cadastro de Funcionarios                        ³
									ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
									SRA->(dbSetOrder(1))
									SRA->( dbSeek (oGridSRA:GetValue("RA_FILIAL") + oGridSRA:GetValue("RA_MAT") ) )

									/*/
									ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									³ Executa o WebServices TSA - Situacao de Afastamento          ³
									ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
									oObjREP:WSAbsenceReason( 6 , , oGrid:GetValue("R8_DATAINI"))

							EndIf
						EndIf
					EndIf

				Else
					aAdd( aSR8ID , { nLinha , oGridSRA:GetValue("RA_FILIAL")+cNumId , .F.} )

				EndIf

				If oGrid:IsInserted()
					dDataIni	:= oGrid:GetValue("R8_DATAINI")
					dDataFim	:= oGrid:GetValue("R8_DATAFIM")
					cTipoAfa	:= oGrid:GetValue("R8_TIPOAFA")
					cFilOr		:= oGridSRA:GetValue("RA_FILIAL")
					cMatOr		:= oGridSRA:GetValue("RA_MAT")
					cPosto		:= SRA->RA_POSTO

					If lOrgcfg
						DbSelectArea("RCM")
						DbSetOrder(RetOrder("RCM", "RCM_FILIAL+RCM_TIPO"))
						If dbSeek(xFilial("RCM")+cTipoAfa)
							If RCM->RCM_SUBPOS == '2' .AND. !Empty(cPosto) .AND.;
								IIF(IsBlind(),.F.,MsgYesNo(STR0123)) // "Deseja cadastrar um substituto(a) para ocupar o posto deste funcionário?"
								If (SubstPosto(dDataIni, dDataFim, cMatOr, cFilOr, cPosto))
									Help(,,'HELP',, STR0132,1,0 )// "Substituto(a) cadastrado com sucesso!"
								EndIf
							EndIf
						EndIf
					EndIf

					If cRelease >= "12.1.023"
						//Repasse do valor do campo R8_DIASEMP para o campo TNC_QTAFAS
						DbSelectArea("TNC")
						DbSetOrder(13)
						If cPaisLoc == "BRA"
							If DbSeek( xFilial("TNC") + oGrid:GetValue("R8_CODCAT"))
								RecLock("TNC",.F.)
									TNC->TNC_QTAFAS := oGrid:GetValue("R8_DIASEMP")
								MsUnlock("TNC")
							Endif
						EndIf
					EndIf

				EndIf

				IF ( Ascan(aAltera, {|x|X == nLinha  } ) )  > 0
					If oGrid:GetValue("R8_DATA") <> dDataBase
						oGrid:SetValue("R8_DATA", dDataBase)
					Endif
				EndIf
			Next nLinha

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Preenchimento da Data de Vencimento de Estabilidade do funcionário. ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			RCM->(dbSetOrder(1)) //Fil + Tipo
			//Varre o Grid para verificar em qual estado está cada linha
			For nX:=1 to oGrid:Length()
				oGrid:GoLine(nX)
				If oGrid:IsInserted()//Linha Inserida.
					AADD(aGridInsert,nX)
				ElseIf oGRid:IsDeleted()//Linha Deletada.
					AADD(aGridDelet,nX)
				Else//Linha já estava na tabela.
					AADD(aGridTab,nX)
				EndIf
			Next nX

			//Verifica qual é a maior da data de vencimento de estabilidade das linhas inseridas.
			For nX:=1 to Len(aGridInsert)
				dAux := StoD(" / / ")
				oGrid:GoLine(aGridInsert[nX])
				nDuracao := 0
				GetDuracao(@nDuracao, oGrid, oGrid:GetLine())
				RCM->(dbSeek( xFilial("RCM") + oGrid:GetValue("R8_TIPOAFA")))
				If (RCM->RCM_DIAEST # 0) .And. !Empty(oGrid:GetValue("R8_DATAFIM")) .And. nDuracao > 15
					dAux := oGrid:GetValue("R8_DATAFIM") + RCM->RCM_DIAEST
				EndIf
				dMaxInsert := If(dAux >= dMaxInsert , dAux , dMaxInsert)
			Next nX

			//Verifica qual é a maior da data de vencimento de estabilidade das linhas deletadas.
			For nX:=1 to Len(aGridDelet)
				dAux := Stod(" / / ")
				oGrid:GoLine(aGridDelet[nX])
				nDuracao := 0
				GetDuracao(@nDuracao, oGrid, oGrid:GetLine())
				RCM->(dbSeek( xFilial("RCM") + oGrid:GetValue("R8_TIPOAFA")))
				If (RCM->RCM_DIAEST # 0) .And. !Empty(oGrid:GetValue("R8_DATAFIM")) .And. nDuracao > 15
					dAux := oGrid:GetValue("R8_DATAFIM") + RCM->RCM_DIAEST
				EndIf
				dMaxDelete := If(dAux >= dMaxDelete , dAux , dMaxDelete)
			Next nX

			//Verifica qual é a maior da data de vencimento de estabilidade das linhas da tabela.
			For nX:=1 to Len(aGridTab)
				dAux := Stod(" / / ")
				oGrid:GoLine(aGridTab[nX])
				nDuracao := 0
				GetDuracao(@nDuracao, oGrid, oGrid:GetLine())
				RCM->(dbSeek( xFilial("RCM") + oGrid:GetValue("R8_TIPOAFA")))
				If (RCM->RCM_DIAEST # 0) .And. !Empty(oGrid:GetValue("R8_DATAFIM")) .And. nDuracao > 15
					dAux := oGrid:GetValue("R8_DATAFIM") + RCM->RCM_DIAEST
				EndIf
				dMaxTab := If(dAux >= dMaxTab , dAux , dMaxTab)
			Next nX

			//Gravacao da RA_DTVTEST.
			SRA->(dbSetOrder(1))
			If SRA->( dbSeek (oGridSRA:GetValue("RA_FILIAL") + oGridSRA:GetValue("RA_MAT") ) )
				RecLock("SRA", .F.)

				dDtvTest := If(dMaxInsert > dMaxTab , dMaxInsert , dMaxTab)

				If Empty(dDtvTest)//Usuario esta deletando a unica ausencia que possuia.
					If !Empty(dMaxDelete) .And. SRA->RA_DTVTEST == dMaxDelete
						SRA->RA_DTVTEST := Stod(" / / ")
					EndIf
				Else
					If Empty(dMaxDelete)//Nao esta deletando nada
						SRA->RA_DTVTEST := If( SRA->RA_DTVTEST < dDtvTest , dDtvTest , SRA->RA_DTVTEST )
					ElseIf SRA->RA_DTVTEST == dMaxDelete//Deletou uma ausência, mas haviam outras cadastradas.
						SRA->RA_DTVTEST := dDtvTest
					EndIf
				EndIf

				SRA->(MsUnlock())
			EndIf
			oGrid:GoLine(nLinAtual)

			If ExistBlock("GP240GRV")
				ExecBlock("GP240GRV",.F.,.F.)
			EndIf

			If cPaisLoc == "MEX" .and. AliasInDic("RIV")
				//Comprobar longitud aSR8Respal
				If Type('aSR8Respal') <> 'U' .And. Len(aSR8Respal) > 0
					dbSelectArea("RIV")
					RIV->(dbSetOrder(1))
					For nX := 1 to Len(aSR8Respal)
						If !RIV->(dbSeek(cSucur+aSR8Respal[nX][1]+aSR8Respal[nX][2]))
							RecLock("RIV", .T.)
							RIV->RIV_FILIAL := xFilial("RIV")
							RIV->RIV_MAT := aSR8Respal[nX][1]
							RIV->RIV_NCERIN := aSR8Respal[nX][2]
							RIV->RIV_DATEVA := aSR8Respal[nX][3]
							RIV->RIV_PROCEN := 0
							RIV->RIV_TIPORS := aSR8Respal[nX][4]
							RIV->RIV_RESINC := aSR8Respal[nX][5]
							RIV->(MsUnlock())
						EndIf
					Next nX
				EndIf
			EndIf

			If lGestPubl .AND. cModulo $ 'GFP*VDF'
				gp240GrvRi8(oModel)
				If !oGrid:IsDeleted()
					If (QueryRI6(mChavePesq,SRA->RA_FILIAL,SRA->RA_MAT,"SR8") == "NP")
						ExcluiRI6()
					EndIf
					lRet := VDFA060(aParTela)
					//Publica se possuir Substituto
					If lRet .AND. !Empty(oGrid:GetValue("R8_FILSUB")) .AND. !Empty(oGrid:GetValue("R8_MATSUB"))//Verifica se tem Substituto
						SETFUNNAME("VDFA070")
						aParTela[1]  := "VDFA070"
						aParTela[4]  := mChave
						If (QueryRI6(mChavePesq,SRA->RA_FILIAL,SRA->RA_MAT,"SR8") == 'NP')
							ExcluiRI6()
						EndIf
						lRet := VDFA060(aParTela)
					EndIf
					TRBRI6->( dbCloseArea())
				Else
					lRet := DelAfasGFP(aParTela, mChavePesq )
				EndIf
				If !lRet
					oModel:SetErrorMessage("",,oModel:GetId(),"","GPEA240",STR0233) // "Ocorreu um erro ou cancelamento durante a geração do Ato\Portaria."
				EndIf
			EndIf
			If lIntegDef
				EmployeeSit(oModel,.T.)
			Endif

			If lTSREP
				/* Codigo reposicionado para apos o FWCommit para atualizar registro somente apos a gravacao.*/
				For nx := 1 to Len (aSR8ID)
					//atualiza o posicionamento no grid
					oGrid:GoLine(nx)
					oGridTSA:GoLine(nx)
					/*Integracao TSA*/
					If !oGrid:IsDeleted(nx) //verifica se a linha nao esta deletada
						If RCM->( dbSeek( xFilial("RCM") + oGrid:GetValue("R8_TIPOAFA") ) )
							If RCM->RCM_TIPOAF <> "4"     //Ferias

								/*Analise necessidade de excluir o registro anterior no aplicativo TSA*/
								If oGrid:IsUpdated() .and. oGrid:Length() >= nLinha
									oGridTSA:GoLine(nLinha)

									If oGrid:GetValue("R8_DATAINI") <> oGridTSA:GetValue("R8_DATAINI") .Or. ;
										oGrid:GetValue("R8_DATAFIM") <> oGridTSA:GetValue("R8_DATAFIM") .Or. ;
										oGrid:GetValue("R8_TIPOAFA") <> oGridTSA:GetValue("R8_TIPOAFA")

										/*Executa o WebServices TSA - Situacao de Afastamento*/
										oObjREP:WSAbsenceReason( 6, , oGridTSA:GetValue("R8_DATAINI") )
									EndIf
								EndIf

								/*Verifica se o periodo de afastamento esta presente ou futuro para envio ao TSA*/
								// Verifica se a data de Inicio for maior/igual que a data de hoje
								// Verifica se nao existe data final de afastamento
								// Verifica se a data final for maior/igual que a data de hoje
								// Foi utilizado o Date() ao inves do dDataBase para pegar a data do computador
								If !oGrid:IsInserted() .And. oGrid:IsUpdated()
									SR8->( dbSetOrder(5) )
									If SR8->( dbSeek(aSR8ID[nx][2]) ) .And. !Empty(SR8->R8_RHEXP)
										lAtuSR8	:= .T.
									EndIf
								EndIf
								If oGrid:GetValue("R8_DATAINI") >= Date() .Or. Empty(oGrid:GetValue("R8_DATAFIM")) .Or. (!Empty(oGrid:GetValue("R8_DATAFIM")) .And. oGrid:GetValue("R8_DATAFIM") >= Date()) .Or. lAtuSR8
									/*Executa o WebServices TSA - Situacao de Afastamento*/
									If oObjREP:WSAbsenceReason( 5, Nil, oGrid:GetValue("R8_DATAINI"), oGrid:GetValue("R8_DATAFIM"), cEmpAnt+oGridSRA:GetValue("RA_FILIAL")+oGridSRA:GetValue("RA_MAT"), .T. )
										aadd(aRep,aSR8ID[nx][2])
									EndIf
								EndIf
							EndIf
						EndIf
					EndIf
				Next nx
			EndIf
			If lIntegDef
				EmployeeSit(oModel,.F.)
			Endif

			If Type("lResM2") <> "U" .And. lResM2 //Tratamento para chamada da rotina atraves de tela de rescisão (Modelo 2)
				lM2Modif:= .T.
			EndIf

			//Ponto de Entrada executado apos a gravacao do registro
			If ExistBlock("GP240MAN")
				Execblock("GP240MAN",.F.,.F.,{nOperation})
			EndIf

	//--Se for Exclusao
	ElseIf nOperation == MODEL_OPERATION_DELETE

		If lTSREP
			For nLinha := 1 to nLenGrid
				oGrid:GoLine(nLinha)
				If RCM->( dbSeek( xFilial("RCM") + oGrid:GetValue("R8_TIPOAFA") ) )
					If RCM->RCM_TIPOAF <> "4"     //Ferias
						/*/
						ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						³ Executa o WebServices TSA - Situacao de Afastamento          ³
						ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
						oObjREP:WSAbsenceReason( 6, Nil, oGrid:GetValue("R8_DATAINI"), Nil, cEmpAnt+oGridSRA:GetValue("RA_FILIAL")+oGridSRA:GetValue("RA_MAT"))

					EndIf
				EndIf
			Next nLinha
			oGrid:GoLine(nLinAtual)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Preenchimento da Data de Vencimento de Estabilidade do funcionário. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		//Verifica qual e a maior data de vencimento de estabilidade da tabela SR8.
		For nX:=1 to oGrid:Length()
			dAux := StoD(" / / ")
			oGrid:GoLine(nX)
			RCM->(dbSeek( xFilial("RCM") + oGrid:GetValue("R8_TIPOAFA")))
			If (RCM->RCM_DIAEST # 0) .And. !Empty(oGrid:GetValue("R8_DATAFIM"))
				dAux := oGrid:GetValue("R8_DATAFIM") + RCM->RCM_DIAEST
			EndIf
			dMaxDelete := If(dAux >= dMaxDelete , dAux , dMaxDelete)
		Next nX

		//Atualiza a data de vencimento de estabilidade do funcionario.
		RecLock("SRA",.F.)
			SRA->RA_DTVTEST := If(SRA->RA_DTVTEST > dMaxDelete , SRA->RA_DTVTEST , Stod(" / / ") )
		SRA->(MsUnLock())

		oGrid:GoLine(nLinAtual)

		//Ponto de Entrada executado antes da exclusao do registro
		If ExistBlock("GP240EXC")
			Execblock("GP240EXC",.F.,.F.,{nOperation})
		EndIf

		If lRet .AND. lGestPubl .AND. cModulo $ 'GFP*VDF'
			gp240GrvRi8(oModel)
			lRet := DelAfasGFP(aParTela, mChavePesq )
			If !lRet
				oModel:SetErrorMessage("",,oModel:GetId(),"","GPEA240",STR0233) //"Ocorreu um erro ou cancelamento durante a geração do Ato\Portaria."
			EndIf
		EndIf

		If lIntegDef
			EmployeeSit(oModel,.F.)
		Endif

	EndIf

	If !lRobo
		If Findfunction("IntAfast") .And. (lRHTAF .Or. lMiddleware) .And. lRet .AND. (fVlAltEsoc(oGrid) .Or. oModel:nOperation == 5)
			lRet := IntAfast(oModel, @aDados, @aDadosTAF)
			FWModelActive(oModel)

			If !lRet
				If Len(aDados) > 0
					Help(,, 'HELP',, aDados[1], 1, 0,,,,,, Iif(Len(aDadosTAF) > 0 .And. !lMiddleware, {aDadosTAF[1]}, {}))
					oModel:SetErrorMessage("",,oModel:GetId(),"","GPEA240",STR0282)
					DisarmTransaction()
					Return .F.
				Endif
			EndIf
		EndIf

	EndIf
	//Commit deve ser realizado antes da chamada da função RetSituacao() pois a base
	//de dados deve ser atualizada antes de atualizar a situacao do funcionario.

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta Array com  os dados para envio de e-mail              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet
		lRet := FWFormCommit(oModel)
		if lRet .and. nOperation <> MODEL_OPERATION_DELETE
			for nx := 1 to len(aAltera)
				oGrid:GoLine(aAltera[nX])
				if !(oGrid:IsDeleted())
					dbSelectArea("SR8") //posicona no registro a ser atualizado
					SR8->(dbSetOrder(5))
                    nPosSR8 := aScan(oGrid:aHeader, {|x| x[2] == "R8_NUMID"})
					If nPosSR8 > 0 .AND. SR8->(dbSeek(XFILIAL("SR8")+ALLTRIM(OGRID:ACOLS[aAltera[nX]][nPosSR8])))
						fMontaMail("018")
					endif
				endif
			next nx
		endif
	Endif

	If lRet .And. lTSREP .And. Len(aRep) > 0
		dbSelectArea("SR8") //posicona no registro a ser atualizado
		SR8->(dbSetOrder(5))
		For nX := 1 to Len(aRep)
			/*Grava o Log do controle de exportacao WebServices TSA*/
			If SR8->(dbSeek(aRep[nx]))
				oObjRep:WSUpdRHExp( "SR8" )
			EndIf
		Next nX
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se teve algum registro excluido originado no Meu RH³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet .And. Findfunction("fDelReqById")
		fChkMhrInt(oModel, aAltera)
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza o Cadastro de Funcionario "SRA" - By Naldo          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (cPaisLoc $ "MEX/CHI" .and. SRA->RA_SITFOLH <> "D") .Or. !(cPaisLoc $ "MEX/CHI")
		RetSituacao( SRA->RA_FILIAL , SRA->RA_MAT , .T. )
	EndIf

End Transaction

RestArea(aArea)

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp240FiltroºAutor ³Leandro Drumond     º Data ³ 20/06/13    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Filtra dados que serao exibidos na getdados.     			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gp240Filtro()

If fOpenRadio(@nColPro,;
			 STR0009,;  		    	//"Cadastro de Ausencia"
             STR0070,;      			//"Selecione a opcao de visualizacao:"
		   	 STR0071,;      			//"Ausencias Ativas"
		   	 STR0073 ) == 0 			//"Todas as Ausencias"
	Return
EndIf

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Gp240GetSeqºAutor ³Leandro Drumond     º Data ³ 21/06/13    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica necessidade de utilizacao do inic_pad. da sequenciaº±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gp240GetSeq()
Local cRet := ''

If !Empty(cUltSeq)
	cRet := StrZero(Val(cUltSeq)+1,3)
	cUltSeq := ""
EndIf

Return cRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SubstPosto ºAutor ³Mohanad             º Data ³ 20/03/14    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³SUBSTITUICAO DE POSTO - AFASTAMENTO/FERIAS                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE,SIGAORG                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function SubstPosto(dDataIni, dDataFim, cMatOr, cFilOr, cPosto)
Local aAreaSRA	:= SRA->(GetArea())
Local oGet1
Local oGet2
Local oGet3
Local c3Lbx, oGroup1, oGroup2, oGroup, oFont
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjCoords		:= {}
Local aObjSize		:= {}
Local dDtIni			:= dDataIni
Local lGravou			:= .F.
Local lNovo				:= .T.
Local oNo				:= LoadBitmap( GetResources(), "LBNO" )
Local oOk				:= LoadBitmap( GetResources(), "LBOK" )
Private oDlgPosto
Private cMatr			:= CriaVar("RA_MAT")
Private cNome			:= SPACE(30)
Private cFilFun		:= xFilial("SRA")
Private o3Lbx
Private a3Lbx			:= {}
Private lCheck		:= .F.
Private nOpca			:= 0

//MONTA AS DIMENSOES DOS OBJETOS
aAdvSize		:= MsAdvSize(,.T.,400)
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
aAdd( aObjCoords , { 000 , 025 , .T. , .F. } )
aAdd( aObjCoords , { 000 , 085 , .T. , .F. } )
aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

bSet15	:= {|| GPEA240VLD(6), If(nOpca == 1, oDlgPosto:End(), NIL ) }
bSet24	:= {|| oDlgPosto:End()}

DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD

DEFINE MSDIALOG oDlgPosto FROM aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] TITLE OemToAnsi(STR0124) PIXEL
oDlgPosto:lEscClose := .F. // Nao permite sair ao se pressionar a tecla ESC.

@ aObjSize[1][1],aObjSize[1][2] GROUP oGroup1 TO aObjSize[1][3],aObjSize[1][4] LABEL STR0125 OF oDlgPosto PIXEL
oGroup1:oFont:= oFont
@ aObjSize[1][1]+11,aObjSize[1][2]+10    SAY STR0125 PIXEL  // "Data Inicio: "
@ aObjSize[1][1]+8, aObjSize[1][4]*0.15  MSGET oGet1 VAR dDtIni SIZE 40,10 OF oGroup1 PIXEL VALID NAOVAZIO(dDtIni)


@ aObjSize[2][1],aObjSize[2][2] GROUP oGroup2 TO aObjSize[2][3],aObjSize[2][4] LABEL STR0140 OF oDlgPosto PIXEL	// "Substitutos Cadastrados"
	oGroup2:oFont:= oFont

DbSelectArea("RCX")
DbSetOrder(RetOrder("RCX","RCX_FILIAL+RCX_POSTO+RCX_FILOCU+RCX_CODOCU"))
DbSeek(xFilial("RCX")+cPosto)
While RCX->(!Eof() .AND. RCX_FILIAL == xFilial("RCX") .AND. RCX_POSTO == cPosto)
	If SRA->RA_FILIAL + SRA->RA_MAT <> RCX->RCX_FILFUN + RCX_MATFUN
		aAdd(a3Lbx, {.F., RCX->RCX_FILFUN, RCX->RCX_MATFUN, fDesc("SRA",RCX->RCX_MATFUN,"RA_NOME",, RCX->RCX_FILFUN)})
	EndIf
	DbSkip()
EndDo
RCX->(DbCloseArea())

@ aObjSize[2,1]+8,aObjSize[2,2]+8 LISTBOX o3Lbx VAR c3Lbx FIELDS;
	 	HEADER 	"",;
	 			OemtoAnsi(STR0145),;		// "Filial"
				OemtoAnsi(STR0146),;		// "Matricula"
				OemtoAnsi(STR0147);		// "Funcionario"
		COLSIZES	GetTextWidth(0,"W"),;
					GetTextWidth(0,"BBBBBBBBBBBB"),;
					GetTextWidth(0,"BBBBBB"),;
					GetTextWidth(0,"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB") SIZE aObjSize[2,4]-16,aObjSize[2,3]-82 OF oGroup2 PIXEL;
	ON DBLCLICK (GPEA240VLD(4)) // DUPLO CLIQUE
	o3Lbx:SetArray(a3Lbx)
	o3Lbx:bLine := {|| LineLstBox(o3Lbx , .T. , {oOk, oNo})} // MONTA LINHA DO LISTBOX

@ aObjSize[3][1],aObjSize[3][2] GROUP oGroup TO aObjSize[3][3],aObjSize[3][4] LABEL STR0141 OF oDlgPosto PIXEL	//"Novo Substituto"
	oGroup:oFont:= oFont

//GRUPO 2
@ aObjSize[3][1]+18,aObjSize[3][2]+5	    	SAY STR0126 PIXEL // "Filial:"
@ aObjSize[3][1]+15,aObjSize[3][4]*0.08    	MSGET oGet2 VAR cFilFun SIZE 40,10 OF oGroup PIXEL PICTURE "@!" F3 "SM0" VALID GPEA240VLD(1) When (GPEA240VLD(5)) HASBUTTON
@ aObjSize[3][1]+18,aObjSize[3][4]*0.25   	SAY STR0127 PIXEL // "Mat. Func.:"
@ aObjSize[3][1]+15,aObjSize[3][4]*0.34   	MSGET oGet3 VAR cMatr SIZE 40,10 OF oGroup PIXEL PICTURE "@!" F3 "SRAFIL" VALID GPEA240VLD(2, cMatOr, cFilOr, cPosto, dDtIni) When (GPEA240VLD(5)) HASBUTTON
@ aObjSize[3][1]+18,aObjSize[3][4]*0.52   	SAY STR0128 PIXEL // "Nome Func.:"
@ aObjSize[3][1]+18,aObjSize[3][4]*0.63   	SAY cNome SIZE 150,10 OF oGroup PIXEL


ACTIVATE MSDIALOG oDlgPosto ON INIT enchoicebar(oDlgPosto,bSet15, bSet24) CENTERED

If nOpca == 1

	DbSelectArea("RCX")
	DbSetOrder(RetOrder("RCX","RCX_FILIAL+RCX_FILFUN+RCX_MATFUN+RCX_POSTO"))
	If DbSeek(xFilial("RCX")+cFilFun+cMatr+cPosto)
		RecLock("RCX",.F.)
		RCX->RCX_DTINI		:= dDtIni
		RCX->RCX_SUBST		:= "1" // "1-SIM"
		RCX->RCX_AFAST		:= "1" // "1-SIM"
		lNovo := .F.
	Else
		RecLock("RCX",.T.)
		RCX->RCX_FILIAL		:= xFilial("RCX")
		RCX->RCX_TIPOCU		:= "1" // "1-Funcionario"
		RCX->RCX_POSTO		:= cPosto
		RCX->RCX_DTINI		:= dDtIni
		RCX->RCX_FILFUN		:= cFilFun
		RCX->RCX_MATFUN		:= cMatr
		RCX->RCX_SUBST		:= "1" // "1-SIM"
		RCX->RCX_AFAST		:= "1" // "1-SIM"
		lNovo := .T.
	EndIf

	lGravou := .T.

	MsUnLock()
	RCX->(DbCloseArea())

	If lGravou .And. lNovo
		DbSelectArea("RBU")
		RBU->(RecLock("RBU", .T.))
		RBU->RBU_FILIAL	:= xFilial("RBU")
		RBU->RBU_CODMOV	:= &(GetSx3Cache("RBU_CODMOV", "X3_RELACAO")) //NUMERO SEQUENCIAL
		RBU->RBU_DTAMOV	:= dDataBase
		RBU->RBU_OPERAC	:= "3" // 3-OCUPACAO
		RBU->RBU_POSTO	:= cPosto
		RBU->RBU_DTINI	:= dDtIni
		RBU->RBU_FILFUN	:= cFilFun
		RBU->RBU_MATFUN	:= cMatr
		RBU->RBU_TIPOCU	:= "1"  //1-FUNCIONARIO
		RBU->RBU_SUBST	:= "1" // "1-SIM"
		RBU->(MsUnLock())
		RBU->(DbCloseArea())
	EndIf

EndIf

RestArea(aAreaSRA)
Return lGravou

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA240VLD ºAutor ³Mohanad             º Data ³ 20/03/14    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validacoes e condicao de edicao (WHEN)                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³SIGAGPE,SIGAORG                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
FUNCTION GPEA240VLD(nTipo, cMatOr, cFilOr, cPosto, dDtIni)
Local aArea		:= GetArea()
Local lRet			:= .T.
Local nx			:= 0

If nTipo == 1 // TIPO 1 == VALIDACAO DA FILIAL
	cMatr := Space(TAMSX3("RA_MAT")[1])
	cNome:= " "
	If !ExistCpo('SM0', cEmpAnt+cFilFun)
		lRet := .F.
	EndIf
ElseIf nTipo == 2 // TIPO 2 == VALIDACAO DA MATRICULA
	If !Empty(AllTrim(cMatr)) .AND. ((cMatr + cFilFun) <> (cMatOr + cFilOr))
		cNome := FDESC("SRA",cMatr,"RA_NOME",,cFilFun)

		If !(ExistCpo("SRA",cMatr) .And. Val(cMatr) > 0)
			lRet := .F.
		EndIf

		DbSelectArea("RCX")
		DbSetOrder(RetOrder("RCX","RCX_FILIAL+RCX_FILFUN+RCX_MATFUN+RCX_POSTO"))
		If DbSeek(xFilial("RCX")+cFilFun+cMatr+cPosto)
			if(!IsBlind())
				If !MsgYesNo(STR0131 + cPosto + chr(13) + chr(10) +  STR0142) // "Esse(a) funcionário(a) já é substituto(a) do posto: " ### "Deseja atualizar a data de início?"
					Return .F.
				EndIf
			endIf
		EndIf
		RCX->(DbCloseArea())

		DbSelectArea("SR8")
		DbSetOrder(RetOrder("R8_FILIAL+R8_MAT+DTOS(R8_DATAINI)+R8_TIPO"))
		DbSeek(cFilFun+cMatr)
		While SR8->(!Eof() .AND. R8_FILIAL == cFilFun .AND. R8_MAT == cMatr)
			If (SR8->R8_DATAINI <= dDtIni .And.  Empty(SR8->R8_DATAFIM)) .Or.;
			   (SR8->R8_DATAINI <= dDtIni .And.  SR8->R8_DATAFIM >= dDtIni)
				Alert(STR0137 + cPosto) // "Esse(a) funcionário(a) está ausente na data informada e não poderá substituir o posto "
				SR8->(DbCloseArea())
				Return .F.
			EndIf
			DbSkip()
		EndDo
		SR8->(DbCloseArea())
	Else
		If Empty(AllTrim(cMatr))
			Alert(STR0021 + chr(13) + chr(10) + STR0130) // "Atencao" ### "Preenchimento obrigatório"
			Return .F.
		EndIf
		If ((cMatr + cFilFun) == (cMatOr + cFilOr))
			Alert(STR0021 + chr(13) + chr(10) +  STR0129) // "Atenção" ### "Selecione outro(a) funcionário(a)"
			Return .F.
		EndIf
	EndIf

ElseIf nTipo == 3 // TIPO 3 == UTILIZADO COMO FILTRO DA CONSULTA PADRAO SRAFIL
	If lGestPubl .AND. cModulo $ 'GFP*VDF'
		cFilFun := fwfldget("R8_FILSUB")
	EndIf
	If !(cFilFun == SRA->RA_FILIAL)
		lRet := .F.
	EndIf
ElseIf nTipo == 4 .AND. !Empty(a3Lbx) // TIPO 4 == UTILIZADO PARA CONTROLAR SELECAO NO LISTBOX
	For nx := 1 To Len(a3Lbx)
		If nx <> o3Lbx:nAt
			a3Lbx[nx, 1] := .F.
		EndIf
	Next nx
	a3Lbx[o3Lbx:nAt, 1] := If(a3Lbx[o3Lbx:nAt, 1 ], .F., .T.)
	lCheck 	:= a3Lbx[o3Lbx:nAt, 1]
	cFilFun	:= a3Lbx[o3Lbx:nAt,2]
	cMatr		:= a3Lbx[o3Lbx:nAt,3]
	cNome		:= a3Lbx[o3Lbx:nAt,4]
	o3Lbx:Refresh()
ElseIf nTipo == 5 .AND. !Empty(a3Lbx) // TIPO 5 == UTILIZADO PARA DESABILITAR SELECAO DO LISTBOX
	lCheck := .F.
	For nx := 1 To Len(a3Lbx)
		a3Lbx[nx, 1] := lCheck
	Next nx
	o3Lbx:Refresh()
ElseIf nTipo == 6 // TIPO 6 == UTILIZADO PARA CONFIRMAR INCLUSAO/ALTERACAO
	If (!IsBlind()) .And. MsgYesNo(STR0143 + cMatr  +  STR0144 + cFilfun) // "Confirma o substituto de matrícula " ### " da Filial "
		nOpca := 1
	Else
		nOpca := 0
		Return .F.
	EndIf
EndIf

If nTipo <> 3
	oDlgPosto:Refresh()
EndIf

RestArea(aArea)
Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³GA240VldIn³ Autor ³ Jesus Peñaloza        ³ Data ³ 14.06.14 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³ Verifica si el numero de incapacidad de la linea en la que ³±±
±±³Descri‡…o ³ se esta posicionado tiene IPPs relacionadas, de ser asi    ³±±
±±³          ³ no permite la edicion del campo R8_NCERINC                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GA240VldIn()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SX3 R8_NCERINC X3_VALID                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function GP240VldIn()
Local lRet   := .T.
Local oModel     := FWModelActive()
Local oModelSR8  := oModel:GetModel('GPEA240_SR8')

If cPaisLoc == "MEX" .and. AliasInDic("RIV")
	If Altera
		dbSelectArea("RIV")
		RIV->(dbSetOrder(1))
		If RIV->(dbSeek(xFilial("RIV")+SRA->RA_MAT+oModelSR8:GetValue("R8_NCERINC")))
			MsgAlert(STR0162) //"La incapacidad tiene IPP’s relacionadas, primero vaya a la opción de IPP y elimínelas"
			lRet := .F.
		Endif
	EndIf
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³GA240VldResIn³ Autor ³ Jesus Peñaloza     ³ Data ³ 19.06.14 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³ Verifica si el numero de incapacidad de la linea en la que ³±±
±±³Descri‡…o ³ se esta posicionado tiene IPPs relacionadas, de ser asi    ³±±
±±³          ³ no permite la edicion del campo R8_RESINC                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GA240VldResIn()     		                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SX3 R8_RESINC X3_VALID                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function GP240VldResIn()
Local lRet := .T.
Local oModel     := FWModelActive()
Local oModelSR8  := oModel:GetModel('GPEA240_SR8')

If cPaisLoc == "MEX" .and. AliasInDic("RIV")
	If Altera
		dbSelectArea("RIV")
		RIV->(dbSetOrder(1))
		If RIV->(dbSeek(xFilial("RIV")+SRA->RA_MAT+oModelSR8:GetValue("R8_NCERINC"))) .AND. (M->R8_RESINC != '2' .AND. M->R8_RESINC != '3')
			lRet := .F.
			Help(,,'HELP',, STR0165,1,0 )
		Endif
	EndIf
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³fGP240Edit ºAutor  ³Emerson Campos      º Data ³  20/08/2013 º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³ When dos campos relativo ao eSocial					      º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³ GPEA240                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fGP240Edit()
local aArea		:= GetArea()
Local lRet 		:= .T.
Local oModel	:= FWModelActivate()
Local oGrid 	:= oModel:GetModel("GPEA240_SR8")
Local cMotivo	:= oGrid:GetValue("R8_TPEFD")
Local cSindical	:= "24"
Local cCessao   := "14|40"
Local cTemEmiten:= "01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|35"
Local cAtropela	:= "01|02|03|04"
Local cEFDcampo	:= UPPER(ALLTRIM(ReadVar()))

	If !IsBlind() .And. !IsInCallStack("GP240VALAFA")

		If EMPTY(cMotivo)
			lRet := .F.
		ElseIf  cMotivo $ cAtropela .And. cEFDcampo $ "M->R8_TIPOAT"
			lRet := .T.
		ElseIf cMotivo == cSindical .And. cEFDcampo $ "M->R8_CNPJSIN*M->R8_TPSIND"
			lRet := .T.
		ElseIf cMotivo $ cCessao .And. cEFDcampo $ "M->R8_CNPJCES*M->R8_TPCES"
			lRet := .T.
		ElseIf cMotivo $ cTemEmiten .And. cEFDcampo $ "M->R8_NMMED*M->R8_CRMMED*M->R8_UFCRM*M->R8_IDEOC"
			lRet := .T.
		Else
			lRet := .F.
		EndIf

		If cEFDcampo $ "M->R8_IDEOC"
			lRet := .T.
		Endif
	EndIf

RestArea(aArea)

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³INTEGDEF  ºAutor  ³                     º Data ³ 23/01/2012 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função para a interação com EAI                             º±±
±±º          ³envio e recebimento                                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function IntegDef( cXml, nType, cTypeMsg, cVersaoMsg )

Local aRet := {}

aRet:= GPEY240( cXml, nType, cTypeMsg, cVersaoMsg )

Return aRet

/*/{Protheus.doc} EmployeeSit
Função para realizar a integração da mensagem de status do funcionário.
@author  Alberto M.
@since   06/01/2015
@param oModel, Objeto, Modelo da rotina - Instância da classe MpFormModel
/*/
Static Function EmployeeSit(oModel, lOld)

	//Variáveis para guardar os valores antigos.
	Local dGuarDatIni
	Local dGuarDatFim
	Local nGuarDurac
	Local cGuarTipo
	Local cGuarCont
	Local nOperation	:= oModel:GetOperation()
	Local nLinha	 	:= 0
	Local nLenGrid		:= 0
	Local nX            := 0
	Local nDuracao		:= 0
	Local oGrid 	 	:= oModel:GetModel("GPEA240_SR8")

	Private lErroInt 	:= .F.
	Private lExcAfastPIMS := .F.

	DEFAULT lOld := .F.
	nLenGrid	:= oGrid:Length()

	If lOld
		oGridOld := {}

		For nLinha := 1 to nLenGrid
			oGrid:GoLine(nLinha)
			If oGrid:IsUpdated()
				SR8->(dbGoto(oGrid:GetDataId()))
				aadd(oGridOld, {oGrid:GetDataId(), SR8->R8_TIPOAFA, SR8->R8_DATAINI, SR8->R8_DATAFIM, SR8->R8_DURACAO, SR8->R8_CONTAFA})
			EndIf
		Next nLinha

	Else
		//Exclusão
		If nOperation == MODEL_OPERATION_DELETE
			For nLinha := 1 to nLenGrid
				oGrid:GoLine(nLinha)
				If oGrid:GetValue("R8_DURACAO") >= nAfastEAI
					SetRotInteg("GPEM040")
					FwIntegDef("GPEM040")
				EndIf
			Next nLinha
		//Inclusão ou alteração
		Else
			For nLinha := 1 to nLenGrid
				lErroInt := .F.
				oGrid:GoLine(nLinha)
				lExcAfastPIMS := .F.

				// Retorna a duração do afastamento quando tem sequências
				nDuracao := 0
				GetDuracao(@nDuracao, oGrid, nLinha)
				oGrid:GoLine(nLinha)

				If nAfastEAI > 0  .And. nDuracao <= nAfastEAI ;
					.And. Posicione("RCM", 1, xFilial("RCM", SRA->RA_FILIAL) + oGrid:GetValue("R8_TIPOAFA"), "RCM_TIPOAF") != "4"; // Se não for férias
					.And. Posicione("RCM", 1, xFilial("RCM", SRA->RA_FILIAL) + oGrid:GetValue("R8_TIPOAFA"), "RCM_TPEFD" ) != "37" // MP 936
					Loop
				EndIf

				If oGrid:IsDeleted() .And. !oGrid:IsInserted()

					lExcAfastPIMS := .T.
					SetRotInteg("GPEM040")
					FwIntegDef("GPEM040")

				ElseIf oGrid:IsInserted()
					SetRotInteg("GPEM040")
					FwIntegDef("GPEM040")
				ElseIf oGrid:IsUpdated()
					nX := Ascan(oGridOld, {|x| x[1] == oGrid:GetDataId()})
					If nX > 0 .AND. ;
					  (oGrid:GetValue("R8_DATAINI") <> oGridOld[nX][3] .OR. ;
					   oGrid:GetValue("R8_DATAFIM") <> oGridOld[nX][4] .OR. ;
					   oGrid:GetValue("R8_TIPOAFA") <> oGridOld[nX][2] .OR. ;
					   oGrid:GetValue("R8_DURACAO") <> oGridOld[nX][5] .OR. ;
					   (cPaisLoc <> 'COL' .And. oGrid:GetValue("R8_CONTAFA") <> oGridOld[nX][6]))

						If oGrid:GetValue("R8_DATAINI") <> oGridOld[nX][3] .Or. oGrid:GetValue("R8_CONTAFA") <> oGridOld[nX][6]
							//Caso ocorra alteração na data inicial, primeiro irá excluir
							//o registro do PIMS e incluir um novo em seguida com a data nova.
							//Guarda os valores novos da SR8(depois da alteração).

							dGuarDatIni := oGrid:GetValue("R8_DATAINI")
							dGuarDatFim := oGrid:GetValue("R8_DATAFIM")
							nGuarDurac  := oGrid:GetValue("R8_DURACAO")
							cGuarTipo   := oGrid:GetValue("R8_TIPOAFA")
							cGuarCont   := oGrid:GetValue("R8_CONTAFA")
							//Atualiza a variável para acionar a exclusão na mensagem.
							lExcAfastPIMS := .T.

							If Nx > 0
								oGrid:SetValue("R8_DATAINI", oGridOld[nX][3])
								oGrid:SetValue("R8_DATAFIM", oGridOld[nX][4])
								oGrid:SetValue("R8_DURACAO", oGridOld[nX][5])
								oGrid:SetValue("R8_TIPOAFA", oGridOld[nX][2])
								oGrid:SetValue("R8_CONTAFA", oGridOld[nX][6])

								//Realiza a integracao
								SetRotInteg("GPEM040")
								FwIntegDef("GPEM040")

								//Retorna a variável de exclusão para o seu estado normal.
								lExcAfastPIMS := .F.

								oGrid:SetValue("R8_DATAINI", dGuarDatIni)
								oGrid:SetValue("R8_DATAFIM", dGuarDatFim)
								oGrid:SetValue("R8_DURACAO", nGuarDurac)
								oGrid:SetValue("R8_TIPOAFA", cGuarTipo)
								oGrid:SetValue("R8_CONTAFA", cGuarCont)
							EndIf
						EndIf

						SetRotInteg("GPEM040")
						FwIntegDef("GPEM040")

						If lErroInt
							nX := Ascan(oGridOld, {|x| x[1] == oGrid:GetDataId()})
							If Nx > 0
								oGrid:SetValue("R8_DATAINI", oGridOld[nX][3])
								oGrid:SetValue("R8_DATAFIM", oGridOld[nX][4])
								oGrid:SetValue("R8_DURACAO", oGridOld[nX][5])
								oGrid:SetValue("R8_TIPOAFA", oGridOld[nX][2])

								//Realiza a integracao
								SetRotInteg("GPEM040")
								FwIntegDef("GPEM040")
							EndIf
						EndIf
					EndIf
				EndIf
			Next nLinha
		EndIf
	EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao  gp240DDerechoºAutor  ºJ. Peñaloza         º Data º  04/09/2014 º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    º Valida que la duracion de la ausencia no sea mayor a sus    º±±
±±º         º dias derecho, en caso que el tipo de ausencia sea de tipo   º±±
±±º         º programacion de periodos                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      º X3_VALID SR8->R8_DURACAO                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function gp240DDerecho()
Local lRet := .T.
Local nDias    := 0
Local aSR8Cols := {}
Local cConcepto:= ''
Local cTipoAfa := ''
Local dDtIni := CTOD(' / / ')
If Type("aCols") == "U"
	aSR8Cols 	  	:= oGet:aCols
Else
	aSR8Cols 	  	:= aClone(aCols)
Endif
cConcepto := aSR8Cols[n,GdFieldPos("R8_PD", aHeader)]
cTipoAfa  := aSR8Cols[n,GdFieldPos("R8_TIPOAFA", aHeader)]
If cPaisLoc == "CHI" //Cambiar por CHI
	dbSelectArea("RCM")
	RCM->(dbSetOrder(3))
	If RCM->(dbSeek(xFilial("RCM")+cConcepto))
		If RCM->RCM_TIPOAF == '4'
			nDias := CalcDiasDer(cConcepto)
			If M->R8_DURACAO > nDias
				Help(,,'HELP',, STR0188,1,0 )//Días de Ausencia Superior a los días derecho que tiene el empleado
				lRet := .F.
			EndIf
		EndIf
		If !(RCM->RCM_TPIMSS $ "00|03|06") .AND. !(RCM->RCM_TPIMSS $ SuperGetMV("MV_TAPREVI", Nil, "")) .and. RCM->RCM_TIPO == cTipoAfa
			dDtIni := aSR8Cols[n,GdFieldPos("R8_DATAINI", aHeader)]
			lRet := gp240ValAus(dDtIni,M->R8_DURACAO)
		EndIf

	EndIf
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍËÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ºCalcDiasDerºAutor  ºJ. Peñaloza         º Data º  04/09/2014 º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    º Calcula los dias derecho del empleado para el pais chile    º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      º gp240DDerecho()                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CalcDiasDer(cConcepto)

Local nDiasDer := 0
Local nDiasAnt := 0
Local nDiasPag := 0
Local nSaldo   := 0
Local nDias    := 0
Local aSR8Cols := {}
Local aArea    := GetArea()
Local cQuery := ''
Local cTempF   := CriaTrab(Nil, .F.)
Local nPosPagar := 0
Local nPosConc  := 0
Local nX := 0
If Type("aCols") == "U"
	aSR8Cols 	  	:= oGet:aCols
Else
	aSR8Cols 	  	:= aClone(aCols)
Endif
nPosPagar := GdFieldPos("R8_SDPAGAR", aHeader)
nPosConc  := GdFieldPos("R8_TIPOAFA", aHeader)
If cPaisLoc == "CHI"
	dbSelectArea("RCM")
	RCM->(dbSetOrder(3))
	If RCM->(dbSeek(xFilial("RCM")+cConcepto))
		If RCM->RCM_TIPOAF == '4'
			cQuery := "SELECT SUM(RF_DFERVAT) DIASDER, SUM(RF_DIASANT) DIASANT, SUM(RF_DFERANT) DIASP FROM "+RetSqlName("SRF")+" SRF "
			cQuery += "WHERE RF_FILIAL = '"+xFilial("SRF")+"' "
			cQuery += "AND RF_MAT = '"+SRA->RA_MAT+"' "
			cQuery += "AND RF_PD = '"+cConcepto+"' "
			cQuery += "AND RF_STATUS = '1' "
			cQuery += "AND D_E_L_E_T_ = '' "
			cQuery += "GROUP BY RF_MAT, RF_PD "
			cQuery := ChangeQuery(cQuery)
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cTempF,.T.,.T.)
			nDiasDer += (cTempF)->DIASDER
			nDiasAnt += (cTempF)->DIASANT
			nDiasPag += (cTempF)->DIASP
			(cTempF)->(dbCloseArea())
			For nX := 1 to len(aSR8Cols)
				If !aSR8Cols[nX,len(aSR8Cols[nX])] .and. aSR8Cols[nX,nPosConc] == cConcepto .and. nX != n
					nSaldo += aSR8Cols[nX,nPosPagar]
				EndIf
			Next nX
			nDias := (nDiasDer + nDiasAnt - nDiasPag) - nSaldo
		EndIf
	EndIf
EndIf
RestArea(aArea)
Return nDias
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fTpAfa    ºAutor  ³Alfredo Medrano B   º Data ³  07/07/15   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Función para utilizar en el gatillo R8_TIPOAFA              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SX7 R8_TIPOAFA                                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fTpAfa()
Local aArea		 := getArea()
Local cRet := ""
Local cTpCon := getMemvar("R8_TIPOAFA")
If !empty(SRA->RA_MAT)

	dbSelectArea('RCJ')
	RCJ->(dbSetOrder(1))
	If RCJ->(dbseek(xFilial('RCJ')+ SRA->RA_PROCES))

		dbSelectArea('RCM')
		RCM->(dbSetOrder(1))
		RCM->(dbseek(xFilial('RCM')+ cTpCon))


		If RCM->RCM_TPIMSS == '06' .and. RCJ->RCJ_MUTUAL == '00'
			cRet := '1'
		ElseIF RCM->RCM_TPIMSS == '06' .and. RCJ->RCJ_MUTUAL != '00'
			cRet := '2'
		ElseIF RCM->RCM_TPIMSS == '03' .and. fPosTab("S004", 'N',"=", 7) > 0 .and.  fPosTab("S004", SRA->RA_OBRASOC,"=", 4) > 0
			cRet := '3'
		ElseIF RCM->RCM_TPIMSS == '03' .and.  fPosTab("S004", 'S',"=", 7) > 0 .and. fPosTab("S004", SRA->RA_OBRASOC,"=", 4) > 0
			cRet := '4'
		Else
			cRet := '5'
		EndIF
	EndIf

EndIf
RestArea( aArea )
Return cRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³gp240ValAusºAutor ³M.Camargo           º Data ³  13/04/2016 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Función para campo R8_DURACAO, si la incapacidad abarca fe- º±±
±±º          ³cha posterior al 30 de cada mes, avisa al usuario que debe  º±±
±±º          ³generar dos registros y no permitir el registro.            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ R8_TIPOAFA                                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function gp240ValAus(dtFechaIni,nDuracao)

	Local cMes 	:= StrZero(month(dtFechaIni),2)
	Local cYear  := StrZero(year(dtFechaIni),4)
	Local lRet 	:= .T.
	Local dFinMes	:= STOD(cYear+cMes+"31")
	Local nI := 0
	Local dDTIni := dtFechaIni
	Local dUltDia := LastDay(dDTIni)

	For nI:= 1 to nDuracao

		If dDTIni == dUltDia
			dFinMes	:= STOD(StrZero(year(dDTIni),4)+StrZero(month(dDTIni),2)+StrZero(day(dUltDia),2))
			MsgAlert(STR0218 + DTOC(dFinMes)+ STR0219) // "El registro abarca días del siguiente mes, por lo que se debe realizar un registro por los días del mes en curso hasta " " y otro por los dias que abarca del mes siguiente para poder continuar."
			lRet := .F.
		EndIF
		dDtIni := dDtIni + 1
	Next

Return lRet

/*{Protheus.doc} fSrcDEmp

Função que busca o Dias Empresa cadastrado para o
Tipo de Ausência.

@author raquel.andrade
@since 17/02/2017
@version P12 14
*/
Function fSrcDEmp(cTpAfaRCM)
Local aArea		:= GetArea()
Local nDsEmp	:= 0

	dbSelectArea("RCM")
	dbSetOrder(1) // RCM_FILIAL+RCM_TIPO
	If RCM->(dbSeek(xFilial("RCM",SRA->RA_FILIAL)+cTpAfaRCM))
		nDsEmp	:= RCM->RCM_DIASEM
	EndIf

	RestArea(aArea)

Return( nDsEmp )

Static Function fTemSRD()
Local lTemSRD := .F.
dbSelectArea("SRD")
SRD->(dbGotop())
lTemSRD := !SRD->(Eof())
Return lTemSRD

//-------------------------------------------------------------------
/*/{Protheus.doc} fVlAltEsoc
Função responsável por verificar se a alteração envolve campos do eSocial
@author  Rafael Reis
@since   28/06/2018
@version 1
/*/
//-------------------------------------------------------------------
Function fVlAltEsoc(oGrid)
Local cVerGPE := ""
Local lReturn := .F.
	Iif( FindFunction("fVersEsoc"), fVersEsoc("S2230",.F.,,,,@cVerGPE), Nil)

	If (oGrid:IsDeleted()) .Or. ;
	(oGrid:isFieldUpdated('R8_DATAINI')	.OR. oGrid:isFieldUpdated('R8_DATAFIM')	.OR. oGrid:isFieldUpdated('R8_TPEFD')	.OR. oGrid:isFieldUpdated('R8_TIPOAT')	.OR.	;
	oGrid:isFieldUpdated('R8_ORIGALT')	.OR. oGrid:isFieldUpdated('R8_NRPRCJU')	.OR. (SR8->(ColumnPos( "R8_TPPROC")) > 0 .And. oGrid:isFieldUpdated('R8_TPPROC')) .OR.	;
	oGrid:isFieldUpdated('R8_CONTAFA')	.OR. oGrid:isFieldUpdated('R8_OBSAFAS')	.OR. oGrid:isFieldUpdated('R8_CNPJCES')	.OR. oGrid:isFieldUpdated('R8_TPCES')	.OR.	;
	oGrid:isFieldUpdated('R8_CNPJSIN')	.OR. oGrid:isFieldUpdated('R8_TPSIND') ) .Or. ;
	( cVerGPE < "9.0" .And. oGrid:isFieldUpdated('R8_CID') .OR. oGrid:isFieldUpdated('R8_DURACAO') .OR. oGrid:isFieldUpdated('R8_NMMED')	.Or. ;
							oGrid:isFieldUpdated('R8_CRMMED') .OR. oGrid:isFieldUpdated('R8_UFCRM') .OR. oGrid:isFieldUpdated('R8_IDEOC') )	.Or. ;
	(cVerGPE >= "9.0" .And. SR8->(ColumnPos("R8_DTINIF")) > 0 .And. (oGrid:isFieldUpdated('R8_DTINIF') .OR. oGrid:isFieldUpdated('R8_DTFMF') .OR. oGrid:isFieldUpdated('R8_CNPJE') .OR. oGrid:isFieldUpdated('R8_REMUN')) )
		lReturn := .T.
	Endif

Return lReturn

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fWhnRcpR8  ³ Autor ³ A.Shibao              ³ Data ³ 20/09/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Abre opcoes para o Resultado da Incapacidade                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fWhnRcpR8()	                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ When no campos R8_DTBLEG e R8_RESINC 						³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fWhnRcpR8(cTpAus)

Local lEdit 	:= .T.
Local cTpAfas 	:= ""
Local oModel	:= FWModelActivate()
Local oGrid 	:= oModel:GetModel("GPEA240_SR8")

DEFAULT cTpAus:=" "

cTpAfas := gp240RetCont("RCM" 													,; 	// cAlias
   						 1														,;	// nIndex
   						 xFilial("RCM") + oGrid:GetValue("R8_TIPOAFA") 			,;		// cKey
   						 "RCM_TPIMSS"											,;	// Coluna retorno
   						 "(RCM->RCM_TIPO = '" + oGrid:GetValue("R8_TIPOAFA") + "')"	)	// Filtro

lEdit := (cTpAfas $ cTpAus )

Return (lEdit)


//-------------------------------------------------------------------
/*/{Protheus.doc} fWhenDtEr
Função responsável por retornar se o campo R8_DTER estará habilitado
para edição
@author  Rafael Reis
@since   09/10/18
@version 1
/*/
//-------------------------------------------------------------------
Function fWhenDtEr()
Local lReturn := .F.
Local oModel	:= FWModelActivate()
Local oGrid 	:= oModel:GetModel("GPEA240_SR8")

If oGrid:GetValue('R8_TPEFDAN') == '03' .AND. oGrid:GetValue('R8_TPEFD') == '01' .OR. !Empty( oGrid:GetValue('R8_DTER') )
	lReturn := .T.
Endif

Return lReturn



//-------------------------------------------------------------------
/*/{Protheus.doc} fAlertJob
Função para exibição de alerta e link para o TDN com orientação sobre
envio de afastamentos
@author  Rafael Reis
@since   26/10/2018
@version 1
/*/
//-------------------------------------------------------------------
Static Function fAlertJob()
Local oButton1
Local oCheckBo1
Local lCheckBo1 := .F.
Local oGroup1
Local oPanel1
Local oSay1
Local oSay2
Local cSession	:= "AlertaAfastamento"
Local lChkMsg 	:= fwGetProfString(cSession,"MSG_JOBAFAS_" + cUserName,'',.T.) == ""
Local lNT15		:= .F.
Local lMVDtFimA := SuperGetMV("MV_DTFIMA", Nil, .F. )

Static oDlg

	If lChkMsg
		fVersEsoc( "S2230", .F., /*aRetGPE*/, /*aRetTAF*/, Nil, Nil, Nil, @lNT15  )
		DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0009) FROM 000, 000  TO 200, 500 COLORS 0, 16777215 PIXEL //#STR0009 = "Cadastro de Ausencias"

			@ 000, 000 MSPANEL oPanel1 SIZE 300, 150 OF oDlg COLORS 0, 16777215 RAISED
			@ 005, 012 GROUP oGroup1 TO 058, 237 PROMPT OemToAnsi(STR0021) OF oPanel1 COLOR 0, 16777215 PIXEL //#STR0021 = "Atenção"
			If lNT15 .And. lMVDtFimA
				If !lMiddleware
					@ 017, 017 SAY oSay1 PROMPT OemToAnsi(STR0252) SIZE 215, 035 OF oPanel1 COLORS 0, 16777215 PIXEL //#STR0252 = "Caso o afastamento seja informado com data início e data fim será enviado para o TAF com as duas datas, caso contrário a data final será enviada no momento que for informada. Afastamentos cadastrados antes da NT 15/2019 terão sua data final integradas com o TAF através do JOB, conforme orientações no link abaixo"
				Else
					@ 017, 017 SAY oSay1 PROMPT OemToAnsi(STR0256) SIZE 215, 035 OF oPanel1 COLORS 0, 16777215 PIXEL //#STR0256 = "Caso o afastamento seja informado com data início e data fim será enviado para o Middleware com as duas datas, caso contrário a data final será enviada no momento que for informada. Afastamentos cadastrados antes da NT 15/2019 terão sua data final integradas com o Middleware através do JOB, conforme orientações no link abaixo"
				EndIf
			Else
				If !lMiddleware
					@ 022, 017 SAY oSay1 PROMPT OemToAnsi(STR0241) SIZE 215, 025 OF oPanel1 COLORS 0, 16777215 PIXEL //#STR0241 = "A data final de afastamento é integrada com o TAF se for inferior a data base do sistema, caso contrário será integrada através de JOB, conforme orientações no link abaixo."
				Else
					@ 022, 017 SAY oSay1 PROMPT OemToAnsi(STR0257) SIZE 215, 025 OF oPanel1 COLORS 0, 16777215 PIXEL //#STR0257 = "A data final de afastamento é integrada com o Middleware se for inferior a data base do sistema, caso contrário será integrada através de JOB, conforme orientações no link abaixo."
				EndIf
			EndIf
			@ 046, 017 SAY oSay1 PROMPT OemToAnsi(STR0293) SIZE 215, 025 OF oPanel1 COLORS 0, 16777215 PIXEL //"*Para Cessão/Exercício em Outro Órgão, a data final sempre será levada pelo Job"

			@ 063, 012 SAY oSay2 PROMPT "http://tdn.totvs.com/x/dQdFFw" SIZE 095, 007 OF oPanel1 COLORS 0, 16777215 PIXEL
			@ 080, 012 CHECKBOX oCheckBo1 VAR lCheckBo1 PROMPT OEMToAnsi(STR0242) SIZE 067, 008 OF oPanel1 COLORS 0, 16777215 PIXEL //#STR0242 = "Não exibir novamente"
			@ 070, 200 BUTTON oButton1 PROMPT "OK" SIZE 037, 012 OF oPanel1 PIXEL

			oSay2:bLClicked := {|| ShellExecute("open","http://tdn.totvs.com/x/dQdFFw","","",1) }

			oButton1:bLClicked := {|| oDlg:End() }

		ACTIVATE MSDIALOG oDlg CENTERED

		If lCheckBo1
			fwWriteProfString(cSession,"MSG_JOBAFAS_" + cUserName, 'CHECKED', .T.)
		Endif

	Endif
Return

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³RstGpe240	  ³Autor ³Marco Nakazawa	   ³ Data ³01/02/2019³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Reinicializar as Static utilizadas no GPEA925				 ³
³          ³															 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                    	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico 													 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function RstGpe240()

lRHTAF		:= If(cPaisLoc == 'BRA' ,((SuperGetMv("MV_RHTAF",, .F.) == .T.) .AND. Val(SuperGetMv("MV_FASESOC",/*lHelp*/,' ')) >= 1 ), .F.)
lMiddleware	:= If( cPaisLoc == 'BRA' .AND. Findfunction("fVerMW"), fVerMW(), .F. )
dDcgIni		:= SuperGetMV( "MV_DTCGINI", Nil, CTOD(" / / ") )
lGestPubl 	:= if(ExistFunc("fUsaGFP"),fUsaGFP() ,.f.)	//Verifica se utiliza o modulo de Gestao de Folha Publica - SIGAGFP

Return( NIL )

Function VldGenero(oGrid, lRet)

dbSelectArea("RCM")
RCM->(dbSetOrder(1))

If RCM->(dbSeek(xFilial("RCM")+oGrid:GetValue("R8_TIPOAFA"))) .And. RCM->RCM_CODSEF $ "Q1*Q2*Q3*Q4*Q5*Q6" .And. SRA->RA_SEXO != 'F'
	AVISO( STR0021, STR0246, {STR0062}, 2 )	 //"Afastamento por licença maternidade para um funcionário do sexo Masculino, favor verifique se o afastamento está correto.
EndIf

Return( lRet )

/*/{Protheus.doc} fGravaPer
Cadastra períodos fechados se o lançamento for retroativo e não houver períodos
@author gabriel.almeida
@since 08/08/2019
@version 1.0
/*/
Static Function fGravaPer(oGrid)
	Local nLenGrid  := oGrid:Length()
	Local nLinha    := 0
	Local cAnoMes   := ""
	Local cAno      := ""
	Local cMes      := ""
	Local nUltDia   := 0
	Local nDiasCal  := 0
	Local dDataIMes := CToD("")
	Local dDataFMes := CToD("")
	Local nDiaTrab  := 0
	Local nDiaNoTr  := 0
	Local cRotPer   := ""

	For nLinha := 1 to nLenGrid
		oGrid:GoLine(nLinha)

		If !( oGrid:IsDeleted() ) .And. ( oGrid:IsUpdated() ) .And. oGrid:GetValue("R8_SEQ") $ cGravaPer
			cAnoMes   := AnoMes(oGrid:GetValue("R8_DATAINI"))
			cAno      := SubStr(cAnoMes,1,4)
			cMes      := SubStr(cAnoMes,5,2)
			nUltDia   := f_UltDia(oGrid:GetValue("R8_DATAINI"))
			nDiasCal  := IIf(GetMvRH("MV_DIASPER",,"1") == "1",nUltDia,30)
			dDataIMes := SToD( cAnoMes + "01" )
			dDataFMes := SToD( cAnoMes + Str(nUltDia,2) )
			nDiaTrab  := DateWorkDay(dDataIMes,dDataFMes)
			nDiaNoTr  := ( dDataFMes - dDataIMes + 1 ) - nDiaTrab
			cRotPer   := IIf( SRA->RA_CATFUNC $ "A*P",fGetCalcRot("9"),fGetCalcRot("1") )

			RCH->(DbSetOrder(4)) //RCH_FILIAL+RCH_PROCES+RCH_ROTEIR+RCH_PER+RCH_NUMPAG
			If RCH->( DbSeek( xFilial("RCH",SRA->RA_FILIAL) + SRA->RA_PROCES + cRotPer + cAnoMes ) )
				RecLock("RCH", .F. )
					RCH->RCH_DTFECH	:= dDataFMes
					RCH->RCH_STATUS	:= "5" //Fechado
				RCH->( MsUnLock() )

				If RFQ->( DbSeek( xFilial("RFQ",SRA->RA_FILIAL) + SRA->RA_PROCES + cAnoMes + RCH->RCH_NUMPAG ) )
					RecLock("RFQ", .F. )
						RFQ->RFQ_STATUS := "2" //Fechado
					RFQ->( MsUnLock() )
				EndIf
			Else
				RecLock("RCH", !(RCH->( DbSeek(xFilial("RCH",SRA->RA_FILIAL) + SRA->RA_PROCES + cAnoMes + "01" + cRotPer) )) )
					RCH->RCH_FILIAL	:= xFilial("RCH",SRA->RA_FILIAL)
					RCH->RCH_PER	:= cAnoMes
					RCH->RCH_NUMPAG	:= "01"
					RCH->RCH_PROCES	:= SRA->RA_PROCES
					RCH->RCH_ROTEIR	:= cRotPer
					RCH->RCH_MES   	:= cMes
					RCH->RCH_ANO   	:= cAno
					RCH->RCH_DTINI 	:= dDataIMes
					RCH->RCH_DTFIM 	:= dDataFMes
					RCH->RCH_DTPAGO	:= dDataFMes
					RCH->RCH_DTFECH	:= dDataFMes
					RCH->RCH_PERSEL	:= "2"
					RCH->RCH_STATUS	:= "5" //Fechado
					RCH->RCH_MODULO	:= "GPE"
					RCH->RCH_COMPL	:= "2"
				RCH->( MsUnLock() )

				RCF->( DbSetOrder(4) )
				RecLock( "RCF",!( RCF->( DbSeek(xFilial("RCF",SRA->RA_FILIAL) + cAnoMes + "01" + cAno + cMes + SRA->RA_PROCES + Space(3) + "@@@" + DToS(dDataIMes) + DtoS(dDataFMes) + "GPE") ) ) )
					RCF->RCF_FILIAL	:= xFilial("RCF",SRA->RA_FILIAL)
					RCF->RCF_MES   	:= cMes
					RCF->RCF_ANO   	:= cAno
					RCF->RCF_PER	:= cAnoMes
					RCF->RCF_PROCES	:= SRA->RA_PROCES
					RCF->RCF_TNOTRA	:= "@@@"
					RCF->RCF_SEMANA	:= "01"
					RCF->RCF_DTINI 	:= dDataIMes
					RCF->RCF_DTFIM 	:= dDataFMes
					RCF->RCF_DCALCM	:= nDiasCal
					RCF->RCF_DPERIO	:= nDiasCal
					RCF->RCF_HRSDIA	:= 8
					RCF->RCF_DIADSR	:= nDiaNoTr / 2
					RCF->RCF_DUTEIS	:= RCF->RCF_DPERIO - RCF->RCF_DIADSR
					RCF->RCF_HRSDSR	:= ( nDiaNoTr / 2 ) * 8
					RCF->RCF_DIATRA	:= nDiaTrab
					RCF->RCF_HRSTRA	:= nDiaTrab * 8
					RCF->RCF_DNTRAB	:= nDiaNoTr / 2
					RCF->RCF_DUTILT	:= nDiaTrab
					RCF->RCF_DREFEI	:= nDiaTrab
					RCF->RCF_DALIM	:= nDiaTrab
					RCF->RCF_MODULO	:= "GPE"
				RCF->( MsUnLock() )

				RFQ->( DbSetOrder(1) )
				RecLock("RFQ", !RFQ->( DbSeek( xFilial("RFQ",SRA->RA_FILIAL) + SRA->RA_PROCES + cAnoMes + "01" + DtoS(dDataIMes) + Dtos(dDataFMes) + "GPE" ) ) )
					RFQ->RFQ_FILIAL	:= xFilial("RFQ",SRA->RA_FILIAL)
					RFQ->RFQ_PROCES	:= SRA->RA_PROCES
					RFQ->RFQ_MES   	:= cMes
					RFQ->RFQ_ANO   	:= cAno
					RFQ->RFQ_PERIOD	:= cAnoMes
					RFQ->RFQ_NUMPAG	:= "01"
					RFQ->RFQ_DTINI 	:= dDataIMes
					RFQ->RFQ_DTFIM 	:= dDataFMes
					RFQ->RFQ_STATUS := "2" //Fechado
					RFQ->RFQ_MODULO	:= "GPE"
				RFQ->( MsUnLock() )
			EndIf
		EndIf
	Next nLinha

	cGravaPer := ""
Return

/*/{Protheus.doc} fLibRegCal
Permite alterar um registro do tipo CALCULADO para RETROATIVO
@author Wesley Alves Pereira
@since 18/11/2019
@version 1.0
/*/
Static Function fLibRegCal( oView ) //"Ajustar Lançamento Calculado"
Local oModel := FWModelActivate()
Local oGrid	 := oModel:GetModel("GPEA240_SR8")
Local nAtual := oGrid:GetLine()

If nAtual > 0
	If !oGrid:IsDeleted()
		If oGrid:GetValue("R8_STATUS") == 'C'
			If MsgYesNo(STR0216) // "A data informada pertence a um período fechado. Os afastamentos lançados em períodos fechados não serão refletidos nos cálculos já efetuados. Deseja prosseguir?"
				If ! oGrid:LoadValue("R8_STATUS","T")
					Help(,,'HELP',, STR0259,1,0 ) //"Não foi possível alterar o Status do Lançamento! Verifique a linha informada!"
				EndIf
			EndIf
		Else
			Help(,,'HELP',, STR0260,1,0 ) //"Não foi possível alterar o Status do Lançamento, pois ele não está como Calculado!"
		EndIf
	Else
		Help(,,'HELP',, STR0261,1,0 ) //"Não foi possível alterar o Status do Lançamento, pois a linha está como deletada!"
	EndIf
Else
	Help(,,'HELP',, STR0259,1,0 ) //"Não foi possível alterar o Status do Lançamento! Verifique a linha informada!"
EndIf

Return (.T.)

/*/{Protheus.doc} GetDuracao
Busca as sequências do afastamento para definir a duração total do afastamento
@type  Static Function
@author Cícero Alves
@since 09/12/2019
@param nDuracao, Numérico, Variável acumuladora da duração do afastamento, deve ser passada por referência
@param oModelSR8, Objeto, Grid da tabela SR8 na rotina de lançamento de ausências
@param nLinha, Numérico, Linha do modelo que a duração do afastamento será somada a nDuracao
/*/
Static Function GetDuracao(nDuracao, oModelSR8, nLinha)

	Local cSeq := ""

	oModelSR8:Goline(nLinha)
	nDuracao += oModelSR8:GetValue("R8_DURACAO")

	If cPaisLoc <> "COL"
		If !Empty((cSeq := oModelSR8:Getvalue("R8_CONTAFA")))

			If oModelSR8:SeekLine({{"R8_SEQ", cSeq}}, .F., .T.)
				GetDuracao(@nDuracao, oModelSR8, oModelSR8:GetLine())
			EndIf
		EndIf
	EndIf

	// Retorna para a linha passada caso tenha alterado no SeekLine
	oModelSR8:Goline(nLinha)

Return

/*/{Protheus.doc} BuscaIni
Define o início do afastamento, considerando o parâmetro MV_AFASEAI
@type  Function
@author Cícero Alves
@since 09/12/2019
@param oGridSr8, Objeto, Grid da tabela SR8 na rotina de lançamento de ausências
@param nLinha, Numérico, Linha atual do modelo
@param nDias, Numérico, Número de dias de afastamento considerando a quantidade de dias informada no parâmetro MV_AFASEAI, deve ser passada por referência
@return dInicio, Data, Data inicial do afastamento considerando a quantidade de dias informada no parâmetro MV_AFASEAI
/*/
Function BuscaIni(oGridSr8, nLinha, nDias)

	Local nDuracao	:= 0
	Local dInicio 	:= CToD("")

	If gp240RetCont("RCM", 1, xFilial("RCM") + oGridSr8:GetValue("R8_TIPOAFA"), "RCM_TIPOAF") == "4";	// Férias
	.Or. gp240RetCont("RCM", 1, xFilial("RCM") + oGridSr8:GetValue("R8_TIPOAFA"), "RCM_TPEFD") == "37"	// MP 936

		nDias := oGridSR8:GetValue("R8_DURACAO")
		Return oGridSR8:GetValue("R8_DATAINI")

	ElseIf Empty(oGridSR8:GetValue("R8_CONTAFA"))
		dInicio := oGridSR8:GetValue("R8_DATAINI") + nAfastEAI
	Else

		If oGridSR8:SeekLine({{"R8_SEQ", oGridSR8:GetValue("R8_CONTAFA")}}, .F., .T.) // Busca e posiciona
			GetDuracao(@nDuracao, oGridSR8, oGridSR8:GetLine())
		EndIf

		oGridSr8:GoLine(nLinha)
		dInicio := oGridSR8:GetValue("R8_DATAINI") + Max(nAfastEAI - nDuracao, 0)

	EndIf

	nDias := If(Empty(oGridSR8:GetValue("R8_DATAFIM")), 0, DateDiffDay(dInicio, oGridSR8:GetValue("R8_DATAFIM")) + 1)

Return dInicio

/*/{Protheus.doc} fDiasHbFer
Define quantidade de dias úteis do funcionário de acordo com o SIGAPON.
@type  Function
@author raquel.andrade
@since 16/01/2020
@param dDataIni, data inicial do período de Férias
@param dDataFim, data final do período de Férias
@param cPerCalc, período de cálculo
@param cNumPgCalc, numero de pagamento do período de cálculo
@return nDiasPer, dias úteis entre o período informado de acordo com o Ponto Eletrônico
/*/
Function fDiasHbFer(dDataIni, dDataFim, cPerCalc, cNumPgCalc)

Local aArea		:= GetArea()
Local nDiasPer	:= 0

If !Empty(dDataIni) .And. !Empty(dDataFim)
	GpeCalend(,,,,,dDataIni,dDataFim,@nDiasPer,"D", "",,,,,cPerCalc,cNumPgCalc)
EndIf

RestArea(aArea)

Return nDiasPer

/*/{Protheus.doc} fMsgPdSup
Mensagem de alerta sobre o campo RCM_PDSUP
@author Allyson Mesashi
@since 03/03/2021
/*/
Static Function fMsgPdSup( lTemCampo )

Local oButton1
Local oCheckBo1
Local lCheckBo1 	:= .F.
Local oGroup1
Local oPanel1
Local oSay1
Local oSay2
Local lChkMsg 		:= .F.
Local oDlg
Local oProfile 		:= FWProfile():New()

Default lTemCampo 	:= .F.

oProfile:SetUser( RetCodUsr() )
oProfile:SetProgram( "GPEA240" )

If !lTemCampo
	oProfile:SetTask( "MSG_JOBPDSUP1" )
Else
	oProfile:SetTask( "MSG_JOBPDSUP2" )
EndIf
oProfile:Load()

lChkMsg := (oProfile:GetStringProfile() == "")

If lChkMsg
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0009) FROM 000, 000  TO 200, 500 COLORS 0, 16777215 PIXEL //#STR0009 = "Cadastro de Ausencias"

		@ 000, 000 MSPANEL oPanel1 SIZE 300, 150 OF oDlg COLORS 0, 16777215 RAISED
		@ 005, 012 GROUP oGroup1 TO 055, 237 PROMPT OemToAnsi(STR0021) OF oPanel1 COLOR 0, 16777215 PIXEL //#STR0021 = "Atenção"
		If !lTemCampo
			@ 017, 017 SAY oSay1 PROMPT OemToAnsi(STR0278) SIZE 215, 035 OF oPanel1 COLORS 0, 16777215 PIXEL //#STR0278 = "Verificado que o sistema não possui a atualização para criação do campo RCM_PDSUP, que possibilita que o sistema automaticamente troque o código da verba na folha caso o afastamento seja superior a 15 dias. Verifique a documentação conforme orientações no link abaixo"
		Else
			@ 017, 017 SAY oSay1 PROMPT OemToAnsi(STR0279) SIZE 215, 035 OF oPanel1 COLORS 0, 16777215 PIXEL //#STR0279 = "Através da criação do campo RCM_PDSUP no cadastro de tipos de ausência, foi criado a possibilidade do sistema automaticamente trocar o código da verba na folha caso o afastamento seja superior a 15 dias. Verifique a documentação conforme orientações no link abaixo"
		EndIf
		@ 063, 012 SAY oSay2 PROMPT "https://tdn.totvs.com/x/aaXoIg" SIZE 095, 007 OF oPanel1 COLORS 0, 16777215 PIXEL
		@ 080, 012 CHECKBOX oCheckBo1 VAR lCheckBo1 PROMPT OEMToAnsi(STR0242) SIZE 067, 008 OF oPanel1 COLORS 0, 16777215 PIXEL //#STR0242 = "Não exibir novamente"
		@ 070, 200 BUTTON oButton1 PROMPT "OK" SIZE 037, 012 OF oPanel1 PIXEL

		oSay2:bLClicked := {|| ShellExecute("open", "https://tdn.totvs.com/x/aaXoIg", "", "", 1) }

		oButton1:bLClicked := {|| oDlg:End() }

	ACTIVATE MSDIALOG oDlg CENTERED

	If lCheckBo1
		oProfile:SetStringProfile("*")
		oProfile:Save()
	EndIf
EndIf

Return

/*/{Protheus.doc} fChkMhrInt
Realiza a exclusão da solicitacao quando o afastamento teve origem no Meu RH
@author Marcelo Silveira
@since 02/07/2021
/*/
Static Function fChkMhrInt(oModel, aRegs)

Local nX		:= 0
Local nAt		:= 0
Local nLine		:= 0
Local lAll		:= .F.
Local oGrid		:= oModel:GetModel("GPEA240_SR8")

DEFAULT aRegs	:= {}

If Empty(aRegs)
	aRegs := Array( oGrid:Length() )
	lAll  := .T.
EndIf

For nX := 1 to Len(aRegs)
	nLine := If( lAll, nX, aRegs[nX] )
	oGrid:GoLine( nLine )
	If (oGrid:IsDeleted()) .And. Len( AllTrim( oGrid:GetValue("R8_NUMID") ) ) > 20
		nAt := At("_", oGrid:GetValue("R8_NUMID") )
		fDelReqById( SRA->RA_FILIAL, SRA->RA_MAT, SubStr( AllTrim(oGrid:GetValue("R8_NUMID")), nAt+1) )
	EndIf
Next nX

Return()

/*/{Protheus.doc} fCheckRG3
Verifica se está ativo o bloqueio da folha para inclusões/alterações
@author martins.marcio
@since 05/08/2021
/*/
Function fCheckRG3(oGrid, cRG3_FIL, dDataRef, cTipoAfa)

Local aArea		:= GetArea()
Local lRet		:= .T.
Local cChvRG3	:= ""
Local cCodUser	:= RetCodUsr()
Local cRoteiro	:= "MDT"
Local nLinha 	:= 0
Local lValida	:= .T.
Local cNaoBloqu := SuperGetMv( "MV_BLOAFAS" , NIL , "" )
Local cPerAberto := fGetFolmes() //Competência aberta para o funcionário posicionado

DEFAULT oGrid	:= ""
DEFAULT cRG3_FIL := cFilAnt
DEFAULT dDataRef := dDataBase
DEFAULT cTipoAfa := ""

If !Empty(cNaoBloqu) // Verifica se o(s) afastamento(s) são exceção e não devem ser bloqueados (MV_BLOAFAS)
	If ValType(oGrid) == "O" 
		lValida	:= .F.
		For nLinha := 1 to oGrid:Length()
			oGrid:GoLine(nLinha)
			If !( oGrid:IsDeleted() ) .And. (oGrid:IsUpdated() .OR. oGrid:IsInserted())
				If !(oGrid:GetValue("R8_TIPOAFA") $ cNaoBloqu)
					lValida := .T.
					EXIT
				EndIf
			EndIf
		Next nLinha
	Else
		lValida	:= IIf(Empty(cTipoAfa), lValida, !(cTipoAfa $ cNaoBloqu))  // Valida pelo tipo de afastamento recebido como parâmetro
	EndIf
Endif

If lValida
	If MesAno(dDataRef) == cPerAberto
		cChvRG3	:= xFilial("RG3") + cEmpAnt + cRG3_FIL + SRA->RA_PROCES + cPerAberto
		DbSelectArea("RG3")
		RG3->(DbSetOrder(4)) //RG3_FILIAL+RG3_EMP+RG3_FIL+RG3_PROCES+RG3_PERIOD + RG3_SEMANA+RG3_ROTEIR+DTOS(RG3_DTINI)+RG3_TIPO
		If RG3->(dbSeek(cChvRG3))
			While RG3->( !Eof() .And. RG3_FILIAL+RG3_EMP+RG3_FIL+RG3_PROCES+RG3_PERIOD == cChvRG3  )
				If cRoteiro $ RG3->RG3_ROTEIR
					If dDataRef >= RG3->RG3_DTINI .And. dDataRef <= RG3->RG3_DTFIM .And. !( cCodUser $ RG3->RG3_USER1 + "/" + RG3->RG3_USER2 )
						lRet := .F.
						cHelp := OemToAnsi(STR0290) // "Não será possivel fazer a alteração pois o período de bloqueio da folha está vigente no período: "
						cHelp += Dtoc(RG3->RG3_DTINI) + " -> " + Dtoc(RG3->RG3_DTFIM) + "." // 99/99/9999 -> 99/99/9999"
						Help( ,, 'HELP',, cHelp, 1, 0, , , , , , {OemToAnsi(STR0291)}) //"Faça o desbloqueio em Períodos/ Outras Ações/ Bloq. de Períodos e tente novamente."
						Exit
					EndIf
				EndIf
				RG3->( dbSkip() )
			EndDo
		EndIf
	Else
		lRet := .F.
		// "Conforme a regra do bloqueio ativado pelo parâmetro MV_VLDRG3, o afastamento não será incluído porque a database está fora da competência aberta da folha (MMAAAA)"
		cHelp := OemToAnsi(STR0294) + " (" + cPerAberto + ")." 
		Help( ,, 'HELP',, cHelp, 1, 0, , , , , , {OemToAnsi(STR0295)}) //"Verifique a database do sistema."		
	EndIf
EndIf

RestArea(aArea)

Return lRet
