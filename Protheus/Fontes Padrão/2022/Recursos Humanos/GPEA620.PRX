#Include 'PROTHEUS.CH'
#Include 'GPEA1620.CH'                                                                                              

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao       ³ GPEA620 ³ Autor    ³ Ricardo                ³Data  ³ 18/06/01   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao    ³ Cadastro de Pesquisa Gerencial 								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso          ³ Generico   													  ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±  
±±³		      	ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL     		      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador  ³Data    ³ FNC      ³ Motivo da alteracao 				          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Raquel Hager ³12/04/13|M12RH01   |RQ002 - Unificacao da Folha de Pagametno.    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Function GPEA620() 
Private aRotina     := MenuDef()            // Ajuste para versao 9.12 - chamada da funcao MenuDef() que contem aRotina						                                                 
Private cCadastro	:= OemToAnsi( STR0006 )	// Cabecalho da rotina
Private aLstVrb		:= gpVetSrv()			// Array de verbas do cadastro atual
Private aIndexSru	:= {}					// Array de ordem de pesquisa do arquivo
Private aHeader		:= gpHeader()			// Array de cabecalho
Private bFiltraBrw  := {|| Nil}				// Variavel para Filtro
	
	// Verifica matriz de verdas.												
	If Len( aLstVrb ) == 0
		Aadd( aLstVrb, { Space( 3 ), Space( 30 ), "5" } )
	EndIf
	
	// Inicializa o filtro do arquivo de Pesquisa Gerencial.					
	dbSelectArea( 'SRU' )
	Set Filter To Empty( SRU->RU_SEQUE ) .And. !Empty( SRU->RU_CODIGO )
	
	// Endereca a funcao de Browse.											
	dbSelectArea( 'SRU' )
	mBrowse( 06, 01, 22, 75, 'SRU',,,,,, fCriaCor() )
	Set Filter To     

Return                                                                       

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ gpVetSrv ³ Autor ³ Ricardo           ³ Data  ³  17/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Monta um array do cadastro de verbas atual.				  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gpVetSrv()  
Local cAlias	:= Alias()	// Alias atual selecionada
Local aRetorno	:= {}		// Array de retorno
	
	// Monta array das verbas.
	dbSelectArea( 'SRV' )
	dbSetOrder( 1 )
	dbSeek( xFilial( 'SRV' ) )
	Do While !Eof() .And. SRV->RV_FILIAL == xFilial( 'SRV' )
		Aadd( aRetorno, { SRV->RV_COD, SRV->RV_DESC, SRV->RV_TIPOCOD } )
		dbSkip()
	Enddo          
	dbSelectArea( cAlias )

Return aRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³Str2Arr   ³ Autor ³ Ricardo            ³ Data ³  17/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Monta um array a partir de uma string delimitada.          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Str2Arr( 	cString,;	// String a ser processada
					cDelim,;	// Delimitador
					lAllTrim;	// Tira espacos em brancos
				 )
Local aRetorno := {}	// Array de retorno
Local nPos				// Posicao do caracter
	
	// Verifica parametros recebidos.											
	cDelim		:= If( cDelim == Nil, ' ', cDelim )
	lAllTrim 	:= If( lAllTrim == Nil, .T., lAllTrim )
	
	If lAllTrim
		cString := AllTrim( cString )
	EndIf
	
	// Monta array convertendo a string delimitada.
	Do While .T.
		If ( nPos := At( cDelim, cString ) ) != 0
	 		Aadd( aRetorno, Iif( lAllTrim, AllTrim( Substr( cString, 1, nPos - 1 ) ), Substr( cString, 1, nPos - 1 ) ) )
			cString = Substr( cString, nPos + Len( cDelim ) )
		Else
			If !Empty( cString )
				Aadd( aRetorno,  Iif( lAllTrim, AllTrim( cString ), cString ) )
			EndIf
			Exit
		EndIf	
	Enddo

Return ( aRetorno )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ VerbasSru ³ Autor ³ Ricardo            ³ Data ³  17/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Monta o array com as verbas lancadas no cadastro.           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620			                                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function VerbasSru( cCodPesq ; // Codigo da pesquisa
						 )
Local aArea		:= SRU->( GetArea() ) 	// Registro atual posicionado
Local cAlias	:= Alias()				// Alias atualmente em uso
Local cRetorno  := ''  					// Caracter de retorno da funcao
	                                     
	// Pega todas as sequencias da pesquisa selecionada.						
	dbSelectArea( 'SRU' )
	Set Filter To        
	Seek xFilial( 'SRU' ) + cCodPesq
	Do While !Eof() .And. SRU->RU_FILIAL + SRU->RU_CODIGO == xFilial( 'SRU' ) + cCodPesq
		cRetorno += Trim( SRU->RU_VERBAS )
		dbSkip()
	Enddo       
	Set Filter To Empty( SRU->RU_SEQUE ) .and. !Empty( SRU->RU_CODIGO )
	SRU->( RestArea( aArea ) )
	dbSelectArea( cAlias )

Return ( cRetorno )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ SrvXSru  ³ Autor ³Ricardo             ³ Data ³  17/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Monta o array do cadastro de verbas excluindo as verbas    º±±
±±º          ³ lancadas no cadastro de pesquisa.                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function SrvXSru( 	aSrv,; // Array do cadastro de verbas
							aSru ; // Array das verbas lancadas no cadastro de pesquisa
						 )
Local aRetorno	:= {}				// Array de retorno
Local nSrv		:= Len( aSrv )		// Tamanho da array do cadastro de verbas
Local nI							// Variavel de loop
	
	// Monta array de retorno para as verbas que nao estejam na matriz das verbas 
	// do cadastro de pesquisa.											
	For nI := 1 To nSrv
		If aScan( aSru, { | x | x[1] = aSrv[nI,1] } ) == 0
			Aadd( aRetorno, aSrv[nI] )
		Endif
	Next
	If Len( aRetorno ) == 0
		aRetorno := { { Space( 03 ), Space( 30 ), "5" } }
	EndIf
                                       
Return ( aRetorno )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ SrvDesc  ³ Autor ³Ricardo             ³ Data ³  17/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Coloca descricao das verbas no array.   					  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function SrvDesc( aSru ; // Array de verbas lancadas no cadastro de pesquisa
					   )
Local aRetorno	:= {}			// Array de retorno
Local nSru		:= Len( aSru )	// Tamanho da array de verbas lancadas no cadastro de pesquisa
Local nI		:= 0			// Variavel para For...Next
	
	// Monta array de retorno.	
	For nI := 1 To nSru
		SRV->( dbSeek( xFilial( 'SRV' ) + aSru[nI] ) )
		Aadd( aRetorno, { aSru[nI], SRV->RV_DESC, SRV->RV_TIPOCOD } )
	Next
	If Len( aRetorno ) == 0
		aRetorno := { { Space( 03 ), Space( 30 ), "5" } }
	EndIf
                                                   
Return aRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ gpMvtVerba ³Autor  ³ Ricardo          ³ Data ³  17/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Efetua movimentacao de verbas entre os listboxes.          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gpMvtVerba( 	nOrigem,;	// Indenticacao da movimentacao origem
			   					lUma,;		// Movimenta somente uma verba?
								nPosicao ;	// Posicao atual da verba
										)   
Local aOrigem 	:= If( nOrigem == 1, aCadastro, aPesquisa ) 	// Array origem da movimentacao
Local aDestino	:= If( nOrigem == 1, aPesquisa, aCadastro ) 	// Array destino da movimentacao
Local cVerba	:= aOrigem[nPosicao,1]							// Verba a ser movida
Local nTamOri	:= Len( aOrigem )								// Tamanho da array de origem
Local nI														// Variavel para loop
	
	
	// Retorna caso esteja tentando mover de uma ListBox vazia.				
	If Len( aOrigem ) == 1 .And. Empty( aOrigem[1,1] )
		Return .T.
	EndIf
	
	// Caso a ListBox destino esteja vazia, exclui o elemento vazio.
	If Len( aDestino ) == 1 .And. Empty( aDestino[1,1] )
		Adel( aDestino, 1 )
		ASize( aDestino, Len( aDestino ) - 1 )
	EndIf
	     
	// Inclui na ListBox destino e exclui da origem.	
	If lUma
		AAdd( aDestino, aOrigem[nPosicao] )
		ADel( aOrigem, nPosicao )
		ASize( aOrigem, nTamOri - 1 )
	Else
		For nI = 1 To nTamOri
			AAdd( aDestino, aOrigem[nI] )
		Next                                       
		aOrigem := { }
	EndIf
	
	// Caso a ListBox origem tenha ficado vazia, inclui um elemento.			
	If Len( aOrigem ) == 0
		Aadd( aOrigem, { Space( 3 ), Space( 30 ), "5" } )
	EndIf
	ASort( aOrigem , , , { |x,y| x[1] < y[1] } )
	ASort( aDestino, , , { |x,y| x[1] < y[1] } )
	
	// Posiciona o ListBox destino na verba movida a partir da orig.	
	If lUma
		nPosCod := Ascan( aDestino, { |x| x[1] == cVerba } )
		If nPosCod > 0
			If( nOrigem == 1, oPesquisa:nAt := nPosCod, oCadastro:nAt := nPosCod )
		EndIf
	EndIf
	
	// Retorna o conteudo original das ListBox.
	aCadastro	:= If( nOrigem == 1, aOrigem, aDestino )
	aPesquisa	:= If( nOrigem == 1, aDestino, aOrigem )
	
	// Ajusta valores dos objetos do listboxes.							
	oCadastro:AArray	:= aCadastro
	oCadastro:nAt		:= Iif( Len( aCadastro ) == 1, 1, Iif( oCadastro:nAt > Len( aCadastro ), Len( aCadastro ), oCadastro:nAt ) )
	oPesquisa:AArray	:= aPesquisa
	oPesquisa:nAt		:= Iif( Len( aPesquisa ) == 1, 1, Iif( oPesquisa:nAt > Len( aPesquisa ), Len( aPesquisa ), oPesquisa:nAt ) )
	
	// Executa refresh
	oCadastro:Refresh( .T. )
	oPesquisa:Refresh( .T. )  

Return ( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ gpHeader ³ Autor ³ Ricardo            ³ Data ³  17/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Monta o array de header do arquivo SRU.                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gpHeader()
Local cAlias   := Alias()									// Alias atualmente posicionado
Local aRetorno := {}										// Array de retorno
Local aExclui  := { 'RU_FILIAL', 'RU_VERBAS', 'RU_SEQUE' } 	// Array de exclusao de campos
	
	// Monta array dos campos do arquivo de pesquisa.	
	dbSelectArea( 'SX3' )
	dbSetOrder(1)
	dbSeek( 'SRU' )
	Do While !Eof() .And. ( x3_arquivo == 'SRU' )
		IF x3uso( x3_usado ) .AND. cNivel >= x3_nivel .And. ! AScan( aExclui,Trim( x3_campo ) ) > 0
	 		Aadd( aRetorno,{ Trim( X3Titulo() ), x3_campo,x3_picture,x3_tamanho,x3_decimal, x3_valid, x3_usado, x3_tipo, x3_arquivo } )
		Endif
		dbSkip()
	EndDo
	dbSelectArea( cAlias )

Return aRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ gpVrbPsq ³ Autor ³ Ricardo            ³ Data ³  17/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Monta o array das verbas selecionadas para pesquisa, ja    º±±
±±º          ³ no formato para gravacao no arquivo de cadastro.           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gpVrbPsq( aVerbas ; // Array de verbas selecionadas para pesquisa
				 )				 
Local cVerbas	:= ''	// String contendo todas as verbas selecionas separadas por virgula
Local aRetorno	:= {}	// Array de retorno
Local nI		:= 0	// Variavel para For...Next
	
	// Monta string com as verbas separadas por virgulas.
	For nI := 1 To Len( aVerbas )
		cVerbas += aVerbas[nI,1]+','
	Next                                
	
	// Monta array com a string das verbas no tamanho maximo de 160 caracteres.
	Do While .T.
		If Len( cVerbas ) > 160
			Aadd( aRetorno, Substr( cVerbas, 1, 160 ) )
			cVerbas := Substr( cVerbas, 161 )
		EndIf
		If Len( cVerbas ) <= 160
			AAdd( aRetorno, cVerbas )
			Exit
		EndIf
	Enddo
	
	// Retorna o array para gravacao.										
Return ( aRetorno )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ gpValid  ³ Autor ³Ricardo             ³ Data ³  17/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Faz a validacao do campo get do codigo da pesquisa.        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gpValid ( cCodPesq ; // Codigo da pesquisa
			     )
	// Verifica se o codigo ja esta cadastrado.
	If dbSeek( xFilial( 'SRU' ) + cCodPesq )
		Aviso( STR0015, STR0016, { STR0017 } ) // "Alerta"###"Codigo de pesquisa ja cadastrada."
		Return .f.
	EndIf 

Return ( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ Gp620Atu ³ Autor ³ Equipe RH          ³Data  ³  08/03/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Efetua a manutencao no cadastro de pesuisa.                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gp620Atu( 	cAlias,;	// Alias do arquivo
					nReg,;		// Registro atual
					nOpc ;		// Opcao do menu
				  )
Local GetList       := {} 	// Matriz do objeto get
Local oDialog			    // Objeto de dialogo
Local aVerbas			    // Array de verbas
Local nI
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}		                     
Local aAdv2Size		:= {}
Local aInfo2AdvSize	:= {}
Local aObj2Size		:= {}	
Local aObj2Coords 	:= {}		
Local aAdv3Size		:= {}
Local aInfo3AdvSize	:= {}
Local aObj3Size		:= {}	
Local aObj3Coords 	:= {}
Local oBProv := LoadBitmap( GetResources(), "BR_VERDE" )
Local oBDesc := LoadBitmap( GetResources(), "BR_VERMELHO" )
Local oBBase := LoadBitmap( GetResources(), "BR_CINZA" )

Private oArial		// Objeto de definicao de fonte ( Arial )
Private oCourier 	// Objeto de definicao de fonte ( Courier New )
Private oTimes		// Objeto de definicao de fonte ( Times New Roman )
Private oCadastro   // Objeto de definicao de cadastro
Private oPesquisa   // Obejto de definicao do list box do array das verbas de pesquisa
Private cCadastro   // Cabecalho do cadastro
Private cPesquisa	// Cabecalho da pesquisa
Private oNext		// Objeto de definicao do botao de movimentacao de verbas  
Private oPgNext		// Objeto de definicao do botao de movimentacao de verbas 
Private oPrev		// Objeto de definicao do botao de movimentacao de verbas
Private oPgPrev		// Objeto de definicao do botao de movimentacao de verbas
Private oAutom		// Objeto de definicao do botao de movimentacao de verbas
Private aCadastro	// Array do cadastro de verbas
Private aPesquisa	// Array das verbas lancadas no cadastro de pesquisa
Private cCodPsq		// Campo do codigo da pesquisa
Private cDesPsq		// Campo da descircao da pesquisa
Private cVerbas		// Campo das verbas da pesquisa
	
	
	// Monta as Dimensoes dos Objetos.
	aAdvSize		:= MsAdvSize( , .T.,  390)
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 3 , 3 }
	aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )
	aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
	
	aAdv2Size    := aClone(aObjSize[2])
	aInfo2AdvSize    := { aAdv2Size[2] , aAdv2Size[1] , aAdv2Size[4] , aAdv2Size[3] , 2 , 2 }
	aAdd( aObj2Coords , { 050 , 000 , .T. , .T. } )
	aAdd( aObj2Coords , { 020 , 000 , .F. , .T. } )
	aAdd( aObj2Coords , { 050 , 000 , .T. , .T. } )
	aObj2Size := MsObjSize( aInfo2AdvSize , aObj2Coords, .T., .T. )
	
	
	aAdv3Size    := aClone(aObjSize[3])
	aInfo3AdvSize    := { aAdv3Size[2] , aAdv3Size[1] , aAdv3Size[4] , aAdv3Size[3] , 2 , 2 }
	aAdd( aObj3Coords , { 050 , 000 , .T. , .T., .T. 	} )
	aAdd( aObj3Coords , { 020 , 000 , .F. , .T. 		} )
	aAdd( aObj3Coords , { 050 , 000 , .T. , .T., .T. 	} )
	aObj3Size := MsObjSize( aInfo3AdvSize , aObj3Coords, .T., .T. )
	
	// Inicializa variaveis conforme opcao escolhida.
	If nOpc == 2 
		cCodPsq		:= Space( aHeader[1,4] )
		cDesPsq		:= Space( aHeader[2,4] )
		aPesquisa	:= { { cCodPsq, cDesPsq, " " } }
		aCadastro	:= AClone( aLstVrb )
	Else
		cCodPsq		:= SRU->RU_CODIGO
		cDesPsq		:= SRU->RU_DESC
		aPesquisa 	:= SrvDesc( Str2Arr( VerbasSru( SRU->RU_CODIGO ), ',' ) )
		aCadastro 	:= SrvXSru( aLstVrb, aPesquisa )
	EndIf	
	                
	Do While .T.
		
		// Define quadro de dialogo.												
		DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
		DEFINE MSDIALOG oDialog FROM aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] Title cCadastro PIXEL
	
	
		// Exibe quadros de cabecalho do codigo e descricao da pesquisa.
		@ aObjSize[1,1], aObjSize[1,2] Group oGroup To aObjSize[1,3],aObjSize[1,4]*0.30 LABEL OemToAnsi( STR0019 ) Of oDialog Pixel 
		oGroup:oFont:= oFont
		@ aObjSize[1,1], aObjSize[1,4]*0.305 Group oGroup To aObjSize[1,3],aObjSize[1,4]LABEL OemToAnsi( STR0020 ) Of oDialog Pixel 
		oGroup:oFont:= oFont
		
		// Efetua gets dos campos.													
		If nOpc >= 3
			@ aObjSize[1,1]+7,aObjSize[1,2]*2.5  Say OemToAnsi( cCodPsq ) Size 020,07 Pixel Font oFont
			@ aObjSize[1,1]+7,aObjSize[1,4]*0.32 Say OemToAnsi( cDesPsq ) Size 180,07 Pixel Font oFont
		Else
			cCodPsq := fCodigo()
	  		@ aObjSize[1,1]+7,aObjSize[1,2]*2.5  MSGET loCodigo Var cCodPsq Size 020,07 Pixel Picture '@!' When ( nOpc = 2 ) Valid gpValid( cCodPsq )	Of oDialog //22,010 
	  		@ aObjSize[1,1]+7,aObjSize[1,4]*0.32 MSGET loDesc   Var cDesPsq Size 180,07 Pixel Picture '@!'                                     		Of oDialog //22,075 
		Endif
	
		// Exibe quadros de cabecalho dos listboxes.
		@ aObj2Size[1,1],aObj2Size[1,2] Group oGroup To aObj2Size[1,3],aObj2Size[1,4] Of oDialog Pixel
		@ aObj2Size[3,1],aObj2Size[3,2] Group oGroup To aObj2Size[3,3],aObj2Size[3,4]	 Of oDialog Pixel
		@ aObj2Size[1,1]+4,aObj2Size[1,2]*1.5 Say OemToAnsi( STR0007 ) Size 120,07 Pixel Font oFont // Verbas disponiveis para selecao // 40,040 
		@ aObj2Size[3,1]+4,aObj2Size[3,2]+3.25 Say OemToAnsi( STR0008 ) Size 120,07 Pixel Font oFont // Verbas selecionadas para calculo //40,220 
	
		// Exibe listbox do array do cadastro de verbas.							
		@ aObj3Size[1,1],aObj3Size[1,2] ListBox oCadastro ; 	
					Var cCadastro ;
					Fields	Header	Space(2),;  
											OemToAnsi( STR0009 ),;
											OemToAnsi( STR0010 );
								ColSizes GetTextWidth( 0, 'B' ), ;
											GetTextWidth( 0, 'BBB' ), ;
											GetTextWidth( 0, 'BBBBBBBBBBBBBBB' ) ;
					Size aObj3Size[1,3],aObj3Size[1,4] Of oDialog Pixel
		oCadastro:SetArray( aCadastro )
		oCadastro:LHSCROLL := .F.                                        
		oCadastro:bLine :=	{ || { If(aCadastro[oCadastro:nAt,3] == "1",oBProv,;
		 											If(aCadastro[oCadastro:nAt,3] == "2",oBDesc, oBBASE)),; 
		 									aCadastro[oCadastro:nAt,1],aCadastro[oCadastro:nAt,2] };
									}	
	
	    // Exibe listbox do array das verbas lancadas no cadastro de pesquisa.		
		@ aObj3Size[3,1],aObj3Size[3,2] ListBox oPesquisa ;	
					Var 		cPesquisa ;
					Fields	Header	Space(2),;
											OemToAnsi( STR0009 ),;
											OemToAnsi( STR0010 );
								ColSizes GetTextWidth(0,"B"),;
											GetTextWidth( 0, 'BBB' ), ;
											GetTextWidth( 0, 'BBBBBBBBBBBBBBB' ) ;
					Size aObj3Size[3,3],aObj3Size[3,4] Of oDialog Pixel
					
		oPesquisa:SetArray( aPesquisa )
		oPesquisa:LHSCROLL := .F.
		oPesquisa:bLine :=	{ || { If(aPesquisa[oPesquisa:nAt,3] == "1",oBProv,;
		 											If(aPesquisa[oPesquisa:nAt,3] == "2",oBDesc, oBBASE)),; 
		 									aPesquisa[oPesquisa:nAt,1],aPesquisa[oPesquisa:nAt,2] };
									}	
	
		// Exibe buttons de execucao.											 
		If nOpc < 4
			@ aObj3Size[2,3]+5 ,(aObj3Size[2,2]*2)+10 BtnBmp oNext    Resource 'NEXT'    Size 25,25 Design Action gpMvtVerba( 1, .T., oCadastro:nAt ) 	Of oDialog 
			@ aObj3Size[2,3]+35 ,(aObj3Size[2,2]*2)+10 BtnBmp oPgNext Resource 'PGNEXT'  Size 25,25 Design Action gpMvtVerba( 1, .F., oCadastro:nAt ) 	Of oDialog
			@ aObj3Size[2,3]+65 ,(aObj3Size[2,2]*2)+10 BtnBmp oPrev   Resource 'PREV'    Size 25,25 Design Action gpMvtVerba( 2, .T., oPesquisa:nAt ) 	Of oDialog
			@ aObj3Size[2,3]+95,(aObj3Size[2,2]*2)+10 BtnBmp oPgPrev  Resource 'PGPREV'  Size 25,25 Design Action gpMvtVerba( 2, .F., oPesquisa:nAt ) 	Of oDialog
			@ aObj3Size[2,3]+125,(aObj3Size[2,2]*2)+10 BtnBmp oAutom  Resource 'AUTOM'   Size 25,25 Design Action gpImport()                           Of oDialog
			oNext:CTOOLTIP   := STR0011 // "Move a verba selecionada para calculo."
			oPgNext:CTOOLTIP := STR0012 // "Move todas as verbas para calculo."
			oPrev:CTOOLTIP   := STR0013 // "Retira a verba selecionada do calculo."
			oPgPrev:CTOOLTIP := STR0014 // "Retira todas as verbas selecionada para calculo."
			oAutom:CTOOLTIP  := STR0018 // "Importa verbas em pesquisas cadastradas."
		EndIf   
		
		// Exibe Legenda															 
		@ aObjSize[4,1],aObjSize[4,2] GROUP oGroup TO aObjSize[4,3],aObjSize[4,4] LABEL OemToAnsi(STR0022) OF oDialog PIXEL 
		oGroup:oFont:= oFont
		@ aObjSize[4,1]+9,aObjSize[4,4]*0.03 BITMAP NAME "BR_VERDE" 	 		SIZE 8,8 of oDialog 	NO BORDER PIXEL 
		@ aObjSize[4,1]+9,(aObjSize[4,4]*0.05)+15 SAY OemToAnsi(STR0023)	 	SIZE 280,07			 	PIXEL Font oFont  // Verbas de Remuneracao
		@ aObjSize[4,1]+9,aObjSize[4,4]*0.40 BITMAP NAME "BR_VERMELHO" 		SIZE 8,8 of oDialog 	NO BORDER PIXEL 
		@ aObjSize[4,1]+9,(aObjSize[4,4]*0.40)+15 SAY OemToAnsi(STR0024)	 	SIZE 280,07			 	PIXEL Font oFont  // Verbas de Desconto
		@ aObjSize[4,1]+9,aObjSize[4,4]*0.70 BITMAP NAME "BR_CINZA"	 		SIZE 8,8 of oDialog 	NO BORDER PIXEL 
		@ aObjSize[4,1]+9,(aObjSize[4,4]*0.70)+15 SAY OemToAnsi(STR0025) 	 	SIZE 280,07			  	PIXEL Font oFont  // Verbas de Base
	     
		// Ativa a caixa de dialogo.												
		nOpca := 0
		Activate MsDialog oDialog On Init EnchoiceBar( oDialog, { || nOpca := 1, If(fVldCodDesc(cCodPsq,cDesPsq) ,oDialog:End() ,nOpca:=0 )  },;
		                                                        { || nOpca := 2,oDialog:End() } ) CENTERED
	    // Verifica se cancelou a operacao.									
		If nOpca == 2
			Exit
		ElseIf nOpca == 1
			// Verifica se e alteracao.												
			If nOpc == 3
				// Altera o resgistro principal.											
				laVerbas := gpVrbPsq( aPesquisa )
				dbSelectArea( 'SRU' )
				Set Filter To
				dbSeek( xFilial( 'SRU' ) + cCodPsq + '  ' )
				RecLock( 'SRU', .f. )
				Replace RU_DESC   With cDesPsq
				Replace RU_VERBAS With laVerbas[1]
	
				// Altera os registros em sequencia.										
				For nI := 2 To Len( laVerbas )
					RecLock( 'SRU', !dbSeek( xFilial( 'SRU' ) + cCodPsq + StrZero( nI -1, 2, 0 ) ) )
					Replace SRU->RU_FILIAL With xFilial( 'SRU' )
					Replace SRU->RU_CODIGO With cCodPsq
					Replace SRU->RU_SEQUE  With StrZero( nI -1, 2, 0 )
					Replace SRU->RU_VERBAS With laVerbas[nI]
					msUnLock()
				Next
	
				// Exclui resgistros nao utilizados.										
				nI := Len( laVerbas )
				Do While dbSeek( xFilial( 'SRU' ) + cCodPsq + StrZero( nI++, 2, 0 ) )
				    RecLock( 'SRU', .F., .T. )
			    	dbDelete()
		    		MsUnLock()
				Enddo			
				Set Filter To Empty( SRU->RU_SEQUE ) .and. !Empty( SRU->RU_CODIGO )
				Exit
			EndIf
			
			// Verifica se e inclusao.													
			If nOpc == 2
				// Inclui o resgistro principal.											
				laVerbas := gpVrbPsq( aPesquisa )
				RecLock( 'SRU', .t. )
				Replace SRU->RU_FILIAL With xFilial( 'SRU' )
				Replace SRU->RU_CODIGO With cCodPsq
				Replace SRU->RU_DESC   With cDesPsq
				Replace SRU->RU_VERBAS With laVerbas[1]
				msUnLock()
	
				// Inclui os registros em sequencia.										
				For nI := 2 To Len( laVerbas )
					RecLock( 'SRU', .t. )
					Replace SRU->RU_FILIAL With xFilial( 'SRU' )
					Replace SRU->RU_CODIGO With cCodPsq
					Replace SRU->RU_SEQUE  With StrZero( nI -1, 2, 0 )
					Replace SRU->RU_VERBAS With laVerbas[nI]
					msUnLock()
				Next
				
				// Reinicializa variaveis													
				cCodPsq	:= Space( aHeader[1,4] )
				cDesPsq	:= Space( aHeader[2,4] )
				aPesquisa	:= { { cCodPsq, cDesPsq, " " } }
				aCadastro	:= AClone( aLstVrb )
			EndIf
			
			// Verifica se e visualizacao.												
			If nOpc == 4
				Exit
			EndIf
	
			// Verifica se e exclusao.												
			If nOpc == 5
				Set Filter To
				dbSeek( xFilial( 'SRU' ) + cCodPsq )
				Do While !Eof() .And. SRU->RU_FILIAL = xFilial( 'SRU' )  .And. SRU->RU_CODIGO = cCodPsq
				    RecLock( 'SRU', .F., .T. )
			    	dbDelete()
		    		MsUnLock()
		    		dbSkip()
				Enddo
				Set Filter To Empty( SRU->RU_SEQUE ) .And. !Empty( SRU->RU_CODIGO )
				Exit
			EndIf		
		EndIf
	Enddo

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ GPEA620  ³ Autor ³ Ricardo            ³Data  ³  17/05/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Efetua a importacao de verbas de outra pesquisa.           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function gpImport()
Local aOrigem	:= aCadastro
Local aDestino	:= aPesquisa
Local aArea	:= SRU->( GetArea() )
Local aInclui, nInclui, nI, nPonteiro
	
	If ConPad1( 'gpImport', 679, '', 'SRU', 'SRU->RU_CODIGO' )
		If Len( aDestino ) = 1 .and. Empty( aDestino[1,1] )
			aDestino := {}
		EndIf
		nInclui := Len( aInclui := SrvDesc( Str2Arr( VerbasSru( SRU->RU_CODIGO ), ',' ) ) ) 
		For nI := 1 To nInclui 
			If Ascan( aDestino, { | x | x[1] = aInclui[nI,1] } ) = 0
				Aadd( aDestino, aInclui[nI] )
			EndIf
			If ( nPonteiro := Ascan( aOrigem, { | x | x[1] = aInclui[nI,1] } ) ) > 0
				Adel( aOrigem, nPonteiro )
				ASize( aOrigem, Len( aOrigem ) - 1 )
			EndIf
		Next
	
		// Caso a ListBox origem tenha ficado vazia, inclui um elemento.			
		If Len( aOrigem ) == 0
			Aadd( aOrigem, { Space( 3 ), Space( 30 ) } )
		EndIf
		ASort( aOrigem , , , { |x,y| x[1] < y[1] } )
		ASort( aDestino, , , { |x,y| x[1] < y[1] } )
	
		// Retorna o conteudo original das ListBox.								
		aCadastro 	:= aOrigem
		aPesquisa	:= aDestino
	
		// Ajusta valores dos objetos do listboxes.								
		oCadastro:AArray	:= aCadastro
		oCadastro:nAt		:= Iif( Len( aCadastro ) = 1, 1, Iif( oCadastro:nAt > Len( aCadastro ), Len( aCadastro ), oCadastro:nAt ) )
		oPesquisa:AArray	:= aPesquisa
		oPesquisa:nAt		:= Iif( Len( aPesquisa ) = 1, 1, Iif( oPesquisa:nAt > Len( aPesquisa ), Len( aPesquisa ), oPesquisa:nAt ) )
	
		// Efetua um refresh nos listboxes.										
		oCadastro:Refresh( .T. )
		oPesquisa:Refresh( .T. )
	EndIf
	                                
	SRU->( RestArea( aArea ) ) 

Return ( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ fCodigo  ³Autor  ³ Equipe RH          ³ Data ³  08/29/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Efetua pesquisa.                                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fCodigo( cCodPsq )  
Local aArea 	:= SRU->( GetArea() )
Local cRetorno 	:= Space(03)
	
	dbGoBottom()
	If SRU->RU_CODIGO != '999'
		cRetorno := StrZero( VAL( SRU->RU_CODIGO ) + 1, 3, 0 )
	EndIf
	SRU->( RestArea( aArea ) )  

Return ( cRetorno )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ fVLdCodDes ³Autor  ³Natie.            ³Data  ³  12/03/2004 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Valida Campo Codigo/Descricao da Tabela.                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function  fVldCodDesc( cCodSRU, cDescSRU ) 

	If Empty(cCodSRU) .Or. Empty(cDescSRU)
		MsgAlert( oemToAnsi(STR0021) ) 		// "Os Campos Codigo e Descricao sao de preenchimento obrigatorio." 
		Return(.F.)	
	EndIf

Return( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ Gp620Imp  ³ Autor ³ Ronan             ³Data  ³  05/01/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Chama relatorio da Pesquisa Gerencial.					  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Gp620Imp()  

    // Rotina de impressao de Pesquisa Salarial
	GPER620()

Return( Nil )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³ MenuDef  ³Autor  ³Luiz Gustavo        ³Data  ³  08/01/2007 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Isola opcoes de menu para que as opcoes da rotina possam   º±±
±±º          ³ ser lidas pelas bibliotecas Framework da Versao 9.12.      º±± 
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ aRotina                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA620                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/ 
Static Function MenuDef()	 
							
	Local aRotina :=  { 	{ STR0001, 'PesqBrw' , 0, 1 , ,.F. },;	// Pesquisar
							{ STR0002, 'Gp620Atu', 0, 3 },;			// Incluir   
							{ STR0003, 'Gp620Atu', 0, 4 },;			// Alterar
							{ STR0004, 'Gp620Atu', 0, 2 },;			// Visualizar
							{ STR0005, 'Gp620Atu', 0, 5 },; 		// Excluir
							{ STR0026, 'Gp620Imp', 0, 3 } } 		// Impressao

Return aRotina