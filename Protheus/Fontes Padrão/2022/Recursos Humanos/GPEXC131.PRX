#INCLUDE "GPEXCALC.CH" 
#INCLUDE "PROTHEUS.CH"

Static __lMemCalc

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³			ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.			  			³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data	³ FNC			 ³  Motivo da Alteracao 					³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Flavio Corre³25/02/15³PCREQ-2898      ³Inclusao fonte							³±±
±±³Allyson M.  ³04/03/15³TRIA28    	     ³Ajuste em fMedia13() p/ verificar se e'   ³±±
±±³            ³        ³          	     ³complemento de 13o.    					³±±
±±³Flavio Corre³22/06/15³TSRHGG          ³Ajuste na busca da SR para ferias,        ³±±     
±±³            ³         ³               ³RR_DATA = RH_DATAINI                      ³±±
±±³Marcos Perei³03/09/15³PCREQ-5342      ³Produtizacao projeto Gestão Pública na 12.³±±
±±³Allyson M.  ³10/09/15³TTBVPB    	     ³Ajuste em fMedia13() p/ verificar o valor ³±±
±±³            ³        ³          	     ³da 1a. parcela do 13o. na SRC				³±±
±±³Allyson M.  ³04/12/15³TTYDJW   	     ³Ajuste em fMedia13() p/ buscar as faltas  ³±±
±±³            ³        ³      	  	     ³independente se paga ou nao as medias	    ³±±
±±³Allyson M.  ³30/12/15³TUBJJK   	     ³-Ajuste em fMedia13() p/ somente gravar a ³±±
±±³            ³        ³      	  	     ³antecipacao do 13 na 2a. parcela do 13o   ³±±
±±³            ³        ³      	  	     ³-Ajuste em f132GMed() p/ deduzir o valor  ³±±
±±³            ³        ³      	  	     ³da media que ja foi paga quando for o     ³±±
±±³            ³        ³      	  	     ³calculo do complemento da 1a parcela do 13³±±
±±³Allyson M.  ³12/01/16³TUELE0   	     ³Ajuste em f132GMed() p/ verificar na 1a   ³±±
±±³            ³        ³      	  	     ³parcela se deve pagas as medias de 13o    ³±±
±±³Renan Borges³11/04/16³TURAHJ   	     ³Ajuste para ao executar o cálculo de resci³±±
±±³            ³        ³      	  	     ³são para um funcionário que teve faltas no³±±
±±³            ³        ³      	  	     ³ mês da rescisão, o sistema abata o avo do³±±
±±³            ³        ³      	  	     ³ mês no 13º salário corretamente, quando  ³±±
±±³            ³        ³      	  	     ³campo "Mes Atu." está com "Sim".          ³±±
±±³Allyson M.  ³18/10/16³TWGFHX   	     ³Ajuste em fMedia13() p/ buscar a antecipa-³±±
±±³            ³        ³      	  	     ³ção na 1ª parcela independente se paga ou ³±±
±±³            ³        ³      	  	     ³não as médias 							³±±
±±|Claudinei S.|30/11/16|MRH-1469  	     |Criada fAvos13Des() para gerar as verbas  |±±
±±|            |        |TUQEAR   	     |991 e 1385 na 2ª Parcela do 13º Salário   |±±
±±|            |        |      	  	     |verbas de início e fim da desoneração.    |±±
±±³Gabriel A.  ³23/01/17³                ³Ajuste na chamada das perguntas na função ³±±
±±³            ³        ³                ³fMedia13 para o cálculo com GRID.         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fDiasSm13 ³ Autor ³ Ricardo Duarte Costa  ³ Data ³13/12/06  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Calcula a quantidade dias de salario maternidade para o 13o³±±
±±³          ³ Salario dentro do ano informado.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fDiasSm13()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fDiasSm13(cAno,cFilPesq,cMatPesq,nDiasPrg,dDataRef)
Local nDiasSm		:= 0
Local dDtBaseIni	:= CtoD("01/01/"+cAno,"DDMMYY")
Local dDtBaseFim	:= CtoD("31/12/"+cAno,"DDMMYY")
Local dDtFimAf		:= CtoD("")
Local nDiaIni		:= CtoD("")
Local aArea			:= GetArea()
Local aAreaRCM      := RCK->(GetArea())
Local lMat			:= .F.
Local cCodSef		:= ""  //CODIGO DO AFASTAMENTO CORRESPONDENTE AO CAMPO RCM_CODSEF

DEFAULT cFilPesq	:= SRA->RA_FILIAL
DEFAULT cMatPesq	:= SRA->RA_MAT
DEFAULT nDiasPrg	:= 0
DEFAULT dDataRef	:= If( Type("cTipoRot") <> "U" .And. cTipoRot == "5", APERGUNTE[6,3], dDtBaseFim)

Static __cKeySm13   := ""
Static __nDiasSM

dDtBaseFim 			:= MIN(dDataRef,dDtBaseFim)

//Melhoria de performance pois a função é executada várias vezes para o mesmo funcionário
If __cKeySm13 == cFilPesq + cMatPesq + DtoS(dDtBaseFim)
	nDiasSm := __nDiasSM
Else

	DbSelectArea("SR8")

	If dbSeek(cFilPesq + cMatPesq)

		DbSelectArea("RCM")
		DbSetOrder(RetOrder("RCM", "RCM_FILIAL+RCM_TIPO"))

		While SR8->(!Eof() .And. cFilPesq + cMatPesq == R8_FILIAL + R8_MAT)
			//Deducao somente antes de 29/11/99 e apos 31/08/03
			lMat := .F.
			
			If RCM->( dbSeek(xFilial("RCM")+SR8->R8_TIPOAFA) )
				cCodSef := RCM->RCM_CODSEF
				If Substr(RCM->RCM_CODSEF, 1, 1) == 'Q'
					lMat := .T.
				EndIf
			EndIf

			If lMat .And. fPgMater(SR8->R8_DATAINI,cCodSef) == "S"
				dDtFimAf := If ( Empty(SR8->R8_DATAFIM) .OR. SR8->R8_DATAFIM > dDtBasefim, dDtBasefim, SR8->R8_DATAFIM)		
				For nDiaIni := SR8->R8_DATAINI to dDtFimAf
					If dDtBaseIni<= nDiaIni .And. nDiaIni<=dDtBaseFim
						//CALCULA PRORROGACAO DE AUX.MATERNIDADE PARA O BRASIL
						If cPaisLoc == "BRA" .and. cCodSef == "Q2"
							nDiasPrg++	
						Else 
							nDiasSM++
						EndIf	
					
					EndIf
				Next
			EndIf

			SR8->(DbSkip())

		Enddo

		RestArea(aAreaRCM)
		
	EndIf

	__cKeySm13 := cFilPesq + cMatPesq + DtoS(dDtBaseFim)
	__nDiasSM  := nDiasSm

	RestArea(aArea)
EndIf

Return(nDiasSm)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFunction³fMedia13     ºAutor  ³Tiago Malta  º Data ³ 20/09/2013        º±±
±±ÌÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.   ³Calculo de media para o 13o                                   º±±
±±º        ³                                                              º±±
±±ÌÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso     ³ Roteiro de Calculo - Generico                                º±±
±±ÈÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fMedia13()
Local aArea		:= GetArea()
Local aAreaSRC	:= SRC->( GetArea() )
Local aAreaSRD
Local cAnoMAux	:= ""
Local cRot132	:= ""
Local cAliasAux	:= ""
Local cAno		:= ""
Local cWhere	:= ""
Local lMedias	:= .T.
Local lCompl13  := (P_CCOMP13 = 'S' .And. cTipoRot == '6' .And. lCalcFol)
Local lContinua := .F.
Local lVbs13o	:= (Len(aCodFol) >= 1628)
Local lVbs13o2	:= (Len(aCodFol) >= 1639)
Local lVbs13o3	:= (Len(aCodFol) >= 1649)
Local lAntMed13	:= .F.
Local cRot131	:= fGetCalcRot('5')
Local nSalCpy	:= 0
Local nSalMCpy	:= 0
Local nSalHCpy	:= 0
Local nSalHoCpy	:= 0
Local nSalDCpy	:= 0
Local nSalDoCpy	:= 0
Local nPagRes	:= 0
Local nVal13Res := 0
Local nV13Inter := 0
Local nTot131	:= fBuscaAcm(acodfol[22,1],,STOD(LEFT(CPERIODO,4)+"0101"),STOD(LEFT(CPERIODO,4)+"1231"),"V")

DEFAULT __lMemCalc := cPaisLoc == "BRA" .And. FindFunction("fMemCalc") .And. fMemCalc() //Memória de Cálculo

Static lContrInt	:= If(SRC->(ColumnPos( 'RC_CONVOC' )) > 0,.T.,.F.)

	lRefMed		:= If( type("lRefMed")=="U",.T.,lRefMed)
	P_ADISMED 	:= If( Type("P_ADISMED") == "U", .T., P_ADISMED ) //Calcula adicionais sobre medias quando configuracao do sindicato e Salario + Verbas
	
	If cTipoRot == '5' .And. APERGUNTE[3,3] != 2
		lMedias	:= .F.
	EndIf
	 
	// Para o Dissidio
	// Se houveram verbas lancadas em Folha que incorporam Salario alterando valor do Salario Hora e afetando Medias pagas no 132	
	// realiza incorpocao para utilizar o novo Salario Hora e chegar no Valor Atual de Medias Horas e Valor do Periodo
	// Para lCompl13
	// Incorpora Salario Hora com verbas lancadas em Folha para considerar
	// no calculo de Médias Horas e Valor no 132

	// Faz copia de valores de Salario
	nSalCpy		:= Salario
	nSalMCpy	:= SalMes
	nSalHCpy 	:= SalHora
	nSalHoCpy 	:= SalHor
	nSalDCpy	:= SalDia
	nSalDoCpy	:= SalDor

	If lDissidio .Or. lCompl13 
		//REcalcula apenas se houver verbas lançadas na folha que incoporam o salário.
		If lDissidio .and. ( aScan(aPd, {|x| x[7] $ "I*G" .and. RetValSRV(x[1], SRA->RA_FILIAL, "RV_INCORP") == "S"}) ) > 0
			lContinua := .T.
		EndIf

		If lContinua .Or. lCompl13 
			If cPaisLoc != "BRA" .Or. !(SRA->RA_CATEFD $ "107/108")
				fSalInc(@Salario,@SalMes,@SalHora,@SalDia,.T.,,,,If(lRefMed .and. !Empty(dRefMed),dRefMed,dDataRef), Nil, Nil, Nil, Nil, Nil, Nil, Nil, Nil, @SalHor, @SalDor)
			EndIf

			If (lDissidio .And. Month(dDataRef) == 12) .And. ( cPaisLoc != "BRA" .Or. !(SRA->RA_CATEFD $ "107/108") )
				If SalMes <> nSalMCpy
					If GPEXMED("","",If(lRefMed .and. !Empty(dRefMed),dRefMed,dDataRef),"", If(lRefMed .and. !Empty(dRefMed), dRefMed, dDataRef), SalHora,Val_BInsal,aCodfol, If(lCompl13, .T., If(cTipoRot == "6",APERGUNTE[4,3] == 2,lMesAtu)), If(lCompl13 .Or. If(cTipoRot == "6",APERGUNTE[4,3] == 2,lMesAtu) .And. !lDissidio , .T., .F.))
						// Caso tenha havido incorporacao salarial, guardo valor atual das medias
						// para gravar como valor origem dentro do calculo do Dissidio
						dbSelectArea( cTBLXMED ) 
						// Medias Valor
						If (cTBLXMED)->(dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"999"+"97MD"))
							nOrigVal := (cTBLXMED)->RP_VALATU
						EndIf
						// Medias Horas
						If (cTBLXMED)->(dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"999"+"98MD"))
							nOrigHor := (cTBLXMED)->RP_VALATU
						EndIf
					EndIf
				EndIf
				// Restaura valores originais		
				Salario		:= nSalCpy		
				SalMes		:= nSalMCpy	 
				SalHora		:= nSalHCpy 
				SalHor		:= nSalHoCpy 
				SalDia		:= nSalDCpy	
				SalDor		:= nSalDoCpy	
			EndIf
		EndIf
	EndIf

	If ( cTipoRot == "6" .and. lContrInt .and. SRA->RA_TPCONTR <> '3'.and. fTemInterm() ) //Busca verbas de 13º pagas no ano como contrato intermitente
		cAliasAux	:= GetNextAlias()
		cAno := SubStr(cPeriodo,1,4)
		cWhere   := "SRD.RD_FILIAL = '"+SRA->RA_FILIAL+"' AND "+;
					"SRD.RD_MAT = '"+SRA->RA_MAT+"' AND "+;
					"SRD.RD_PD = '"+aCodFol[24,1]+"' AND "+;
					"SRD.RD_PERIODO >= '"+cAno+"01' AND "+;
					"SRD.RD_PERIODO <= '"+cAno+"12' AND "+;
					"SRD.RD_ROTEIR = '"+ fGetCalcRot("1") + "' "
		cWhere   := "%"+cWhere+"%"
		
		BeginSql alias cAliasAux
			SELECT RD_VALOR 
			FROM %table:SRD% SRD 
			WHERE %exp:cWhere% AND SRD.%notDel% 
		EndSql

		While !(cAliasAux)->(Eof())
			nV13Inter += (cAliasAux)->(RD_VALOR) 
			(cAliasAux)->(dbskip())
		Enddo
		(cAliasAux)->(dbCloseArea())
		NANT13SAL := nAntec13 := nV13Inter
	EndIf
  
	If GPEXMED("","",If(lRefMed .and. !Empty(dRefMed),dRefMed,dDataRef),"", If(lRefMed .and. !Empty(dRefMed), dRefMed, dDataRef), SalHora,Val_BInsal,aCodfol, If(lCompl13, .T., If(cTipoRot == "6",APERGUNTE[4,3] == 2,lMesAtu)), If(lCompl13 .Or. If(cTipoRot == "6",APERGUNTE[4,3] == 2,lMesAtu) .And. !lDissidio , .T., .F.))
	   
	   	dbSelectArea( cTBLXMED ) 
	   	If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"997"+"9597")
			NANT13SAL := (cTBLXMED)->RP_VALATU
			lAntMed13 := .T.
		EndIf
	   
		If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"997"+"9598")
			
			nAntec13 := IIF((cTBLXMED)->RP_VALATU >= nTot131 , (cTBLXMED)->RP_VALATU, nTot131)

			If nAntec13 > 0 .and. nAntec13 <> NANT13SAL //Verifica se houve lançamento de verba de provento sem ID no cálculo do 131 e abate da antecipação, pois não faz parte do cálculo
				SRD->(dbSetOrder(5)) //--RD_FILIAL+RD_MAT+RD_PROCES+RD_ROTEIR+RD_PERIODO+RD_SEMANA+RD_PD
				If SRD->(dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+SRA->RA_PROCES+cRot131+SubStr(cPeriodo,1,4)))
					While SRD->(!Eof() .and. RD_FILIAL + RD_MAT + RD_PROCES + RD_ROTEIR + SubStr(RD_PERIODO,1,4) == SRA->RA_FILIAL+SRA->RA_MAT+SRA->RA_PROCES+cRot131+SubStr(cPeriodo,1,4) )
						If SRD->RD_TIPO2 $ "I/G" .and. RetValSRV(SRD->RD_PD,SRA->RA_FILIAL,"RV_TIPOCOD") == "1" .and. Empty(RetValSRV(SRD->RD_PD,SRA->RA_FILIAL,"RV_CODFOL"))
							nAntec13 -= SRD->RD_VALOR
						EndIf
						SRD->(DbSkip())
					EndDo
				EndIf
			EndIf

			nAntec13 += nV13Inter

			//Memória de Cálculo
			If __lMemCalc
				fAddMemLog("Antecipacao 13 salario (nAntec13) :" + cValToChar(nAntec13),1,1)
			EndIf
			If cTipoRot == "6"  .And. !fTem132()
				FMatriz(aCodFol[183,1],nAntec13)   
			EndIf
		EndIf
		
		If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"998"+"9998")
			nAvosFal13 := (cTBLXMED)->RP_HORAS
		Endif

		If lMedias      
			dbSelectArea(cTBLXMED)
			If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"999"+"9999")
				nMedia := (cTBLXMED)->RP_VALATU
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("Media 13 (nMedia):" + cValToChar(nMedia),1,1)
				EndIf
			Endif
			// CALCULA PERIC. / INSALUB SOBRE VERBA DE MEDIAS QUE TEM INCIDENCIA
			nMedPer := nMedIns := 0.00 
			FMedPerIns(@nMedPer,@nMedIns,'3',SalHora,Val_BInsal,aCodFol,,,,P_ADISMED)
			//Memória de Cálculo
			If __lMemCalc
				fAddMemLog("Periculosidade sobre verbas (nMedPer+nMedIns):" + cValToChar(nMedPer+nMedIns),1,1)
			EndIf
			nMedia += (nMedPer+nMedIns) + fDsrHrsAtiv("3",aCodFol,"9999") // Calcula DSR / Horas Atividade sobre as verbas de media que incidem para esses calculos
			//Memória de Cálculo
			If __lMemCalc
				fAddMemLog("(nMedPer+nMedIns) + fDsrHrsAtiv('3',aCodFol,'9999') (nMedia):" + cValToChar(nMedia),1,1)
			EndIf
		ENDIF
	
		dbSelectArea("SRC")
		dbSetOrder(1)
		If ( NANT13SAL == 0 .or. lAntMed13 ) .and. dbSeek(SRA->RA_FILIAL+SRA->RA_MAT)
			If SubStr(SRC->RC_PERIODO,1,4) == SubStr(cPeriodo,1,4) //Apenas se a verba for do mesmo ano do cálculo
				While !Eof() .And. SRC->RC_FILIAL+SRC->RC_MAT == SRA->RA_FILIAL+SRA->RA_MAT
					If SRC->RC_PD $ ( aCodFol[022,1] + "/" + aCodFol[024,1] + "/" + aCodFol[163,1] + "/" + If( lVbs13o, aCodFol[1628,1] + "/" + aCodFol[1629,1] + "/" + aCodFol[1630,1] + "/" +;
								aCodFol[1631,1] + "/" + aCodFol[1632,1] + "/" + aCodFol[1633,1] + "/" + aCodFol[1634,1] + "/" + aCodFol[1635,1] + "/" +  aCodFol[1636,1] + "/" + aCodFol[1637,1] + "/", "") +;
								If( lVbs13o2, aCodFol[1639,1] + "/" + aCodFol[1640,1] + "/" + aCodFol[1641,1] + "/" + aCodFol[1642,1] + "/" + aCodFol[1643,1] + "/" + aCodFol[1644,1] + "/" +;
								aCodFol[1645,1] + "/" + aCodFol[1646,1] + "/" +  aCodFol[1647,1] + "/" + aCodFol[1648,1] + "/", "") +  If( lVbs13o3, aCodFol[1649,1] + "/" + aCodFol[1650,1] + "/" +;
								aCodFol[1651,1] + "/" + aCodFol[1652,1] + "/" + aCodFol[1653,1] + "/" + aCodFol[1654,1] + "/", "") );
								.Or. ( SRC->RC_ROTEIR == cRot131 .And. RetValSRV(SRC->RC_PD,SRA->RA_FILIAL,"RV_REF13") == "S" .And. RetValSRV(SRC->RC_PD,SRA->RA_FILIAL,"RV_TIPOCOD") == "1" )
						nAntec13 += SRC->RC_VALOR
						NANT13SAL +=  SRC->RC_VALOR
					EndIf
					dbSkip()
				End While
			EndIf
		EndIf
		
		//Se existiu reintegração no ano, abate o valor de 13º pago na rescisão
		If !Empty(SRA->RA_FECREI) .and. Year(SRA->RA_FECREI) == Year(dDataRef) 
			aAreaSRD	:= SRD->( GetArea() )
			dbSelectArea("SRD")
			dbSetOrder(1) //RD_FILIAL+RD_MAT+RD_DATARQ+RD_PD+RD_SEMANA+RD_SEQ+RD_CC
			cAnoMAux := StrZero(Year(SRA->RA_FECREI), 4) + "12"
			cRot132	 := fGetCalcRot('6')
			If DbSeek(SRA->RA_FILIAL+SRA->RA_MAT+StrZero(Year(SRA->RA_FECREI), 4))
				While !Eof() .and. SRD->RD_FILIAL+SRD->RD_MAT == SRA->RA_FILIAL+SRA->RA_MAT
					If SRD->RD_PERIODO > cAnoMAux
						Exit
					EndIf
					If SRD->RD_ROTEIR == cRot132
						SRD->(DbSkip())
						Loop
					EndIf
					If SRD->RD_PD == aCodFol[71,1] .and. !Empty(aCodFol[1856,1])//IR 13º
						nIr13Reint += SRD->RD_VALOR
					EndIf
					If SRD->RD_PD $ (aCodFol[114,1]+aCodFol[251,1]+aCodFol[1684,1]+aCodFol[1690,1]+aCodFol[1696,1]+aCodFol[1702,1]+aCodFol[1708,1]+aCodFol[1714,1]+aCodFol[1720,1]) //13º indenizado/Média de 13º/Adicionais sobre 13º indenizado
						nPagRes += SRD->RD_VALOR
					EndIf
					If cTipoRot == "5" .and. RetValSRV(SRD->RD_PD,SRA->RA_FILIAL,"RV_TIPOCOD") == "1" .and. RetValSRV(SRD->RD_PD,SRA->RA_FILIAL,"RV_REF13") == "S"
						nVal13Res += SRD->RD_VALOR
					EndIf
					SRD->(DbSkip())
				EndDo
			EndIf
			RestArea( aAreaSRD )
		EndIf 
		
		If cTipoRot == "6" .And. !fTem132()
			If !(!Empty(SRA->RA_FECREI) .and. Year(SRA->RA_FECREI) == Year(dDataRef))
				FMatriz(aCodFol[183,1], nAntec13, Nil, Nil, Nil, Nil, Nil, Nil, Nil, Nil, .T.)
			ElseIf !Empty(aCodFol[1856,1])
				FMatriz(aCodFol[1856,1], nPagRes, Nil, Nil, Nil, Nil, Nil, Nil, Nil, Nil, .T.)
			EndIf
		EndIf

		//Se estiver calculando primeira parcela e for reintegração, abate o que já foi pago na rescisão
		If cTipoRot == "5" .and. nVal13Res > 0 .and. !Empty(SRA->RA_FECREI) .and. Year(SRA->RA_FECREI) == Year(dDataRef)
			NANT13SAL += nVal13Res
			nAntec13  += nVal13Res
		EndIf

		// Restaura valores originais		
		Salario		:= nSalCpy		
		SalMes		:= nSalMCpy	 
		SalHora		:= nSalHCpy 
		SalDia		:= nSalDCpy		
	EndIf

RestArea( aAreaSRC )
RestArea(aArea)
	
Return 

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³F132GMed  ³ Autor ³ Mauro                 ³ Data ³ 14.08.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Geracao dos Medias para Calculo 2o. Parcela 13o. Sal       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ F132GMed()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Calculo da Folha (GPEM020) ou da 2¦ Parc 13§ Sal. (GPEM270)³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±/*/
Function f132GMed()

Local cVbAux	:= ""
Local cVbAuxMat	:= ""
Local nVlAuxMat	:= 0
Local nCount 	:= nVlDsrProf := nVlHrsAtiv := nMedVal := nMedVal2 := 0
Local nValAux 	:= 0
Local nAvoAux	:= 0
Local nAvosTot  := 0
Local nValAnt	:= 0
Local nAvAuxMat := 0
Local nVlAntMat	:= 0
Local nDMatern  := 0
Local lCompl13 	:= (cTipoRot == '5' .And. aPergunte[5,3] == 2)
Local lMedias	:= If( cTipoRot == "5", aPergunte[3,3] == 2, .T. )
Local nPos		:= 0
Local nVbMed	:= 0
Local aVbMed	:= {}
Local lVbs13o	:= (Len(aCodFol) >= 1628)
Local lVbs13o2	:= (Len(aCodFol) >= 1639 .And. !Empty(aCodFol[1639, 1]))
Local lVbs13o3	:= (Len(aCodFol) >= 1649 .And. !Empty(aCodFol[1649, 1]))
Local nMedValNeg:= 0

DEFAULT __lMemCalc := cPaisLoc == "BRA" .And. FindFunction("fMemCalc") .And. fMemCalc() // Memória de Cálculo

//Calcula adicionais sobre medias quando configuracao do sindicato e Salario + Verbas
P_ADISMED	:= If( Type("P_ADISMED") == "U", .T., P_ADISMED )
LVB13MAT	:= If( Type("LVB13MAT") == "U", .F., LVB13MAT )

If lDissidio .And. aScan( aPdOld, { |x| x[1] $ aCodFol[1435,1] + "/" +  aCodFol[1434,1] } ) == 0 
	LVB13MAT := .F.
Else
	LVB13MAT := .T.
EndIf

dbSelectArea(cTBLXMED)
If lMedias

	//Memória de Cálculo
	If __lMemCalc
		fAddMemLog("Percentual (nPercentua) :" + cValToChar(nPercentua),1,1)
		fAddMemLog("Avos  (nAvos) :" + cValToChar(nAvos),1,1)
	EndIf

	If !Empty(aCodFol[123,1]) .And. !Empty(aCodFol[124,1]) .And. (!lDissidio .Or. lDissidio .And. fBusMed132() )  
		If cMedDir == "N"
			// Total DSR somado as Horas Atividade
			If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"999"+"9999")
				nMedVal  += fDsrHrsAtiv("3",aCodFol,"9999")
				nMedVal2 += fDsrHrsAtiv("3",aCodFol,"9999",NIL,NIL,lDissidio)
			EndIf
			//Memória de Cálculo
			If __lMemCalc
				fAddMemLog("Total DSR somado as Horas Atividade (nMedVal) :" + cValToChar(nMedVal),1,1)
			EndIf			
			If __lMemCalc
				fAddMemLog("Total de medias em valor",1,1)
			EndIf			
			// Total de medias em valor
			If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"999"+"9799")
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("medias em valor (TRP->RP_VALATU) :" + cValToChar((cTBLXMED)->RP_VALATU),1,2)
				EndIf
				IF cTipoRot == "5"
					nAvosTot  := nAvos + nAvosMat
					If LVB13MAT
						//Tratativa para apurar os valores de maternidade de acordo com a legislação, da mesma forma que a dedução é apurada
						nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
						nVlAuxMat := ( ( ((cTBLXMED)->RP_VALATU + nMedVal) / 12) / 30) * nDMatern * nPercentua
						nAvAuxMat := nAvosMat * nPercentua
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nVlAuxMat --> ( ( (TRP->RP_VALATU + nMedVal) / 12) / 30) * nDMatern * nPercentua:" + cValToChar(nVlAuxMat),1,2)
							fAddMemLog("nAvAuxMat --> nAvosMat * nPercentua :" + cValToChar(nAvAuxMat),1,2)
						EndIf
						If lCompl13
							nVlAntMat 	:= fBuscaAcm( aCodFol[1436,1]+"/"+If(lVbs13o2, aCodFol[1639,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
							nVlAuxMat 	-= nVlAntMat
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("Valor Antecipado:" + cValToChar(nVlAntMat),1,2)
								fAddMemLog("nVlAuxMat --> nVlAuxMat - nVlAntMat :" + cValToChar(nVlAuxMat),1,2)
							EndIf							
						EndIf
					EndIf
					nValAux := ( ((cTBLXMED)->RP_VALATU + nMedVal) * nAvosTot / 12 ) * nPercentua - nVlAuxMat
					nAvoAux := nAvos * nPercentua
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAUX --> ( (TRP->RP_VALATU + nMedVal) * nAvos / 12 ) * nPercentua - nVlAuxMat :" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos * nPercentua :" + cValToChar(nAvoAux),1,2)
					EndIf
					//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
					If lCompl13
						nValAnt := fBuscaAcm( aCodFol[123,1]+"/"+If(lVbs13o, aCodFol[1628,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
						//Se for comissionado puro, não possui valor de média e possui antecipação, desconta antecipação das médias pois férias foi calculada na P11 e não havia verba de média
						If SRA->RA_CATFUNC == "C" .AND. SRA->RA_SALARIO == 0 .AND. nValAnt == 0 .AND. nAntec13 > 0
							nValAnt := nAntec13
						EndIf
						nValAux -= nValAnt
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("Valor Antecipado (nAntec13):" + cValToChar(nAntec13),1,2)
							fAddMemLog("nValAux --> nValAux - nAntec13 :" + cValToChar(nValAux),1,2)
						EndIf
					EndIf
				ELSE
					nAvosTot  := nAvos + nAvosMat
					If LVB13MAT
						//Tratativa para apurar os valores de maternidade de acordo com a legislação, da mesma forma que a dedução é apurada
						nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
						nVlAuxMat 	:= ( ( (cTBLXMED)->RP_VALATU + nMedVal) / 12 ) / 30 * nDMatern
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nValAuX --> ( ( TRP->RP_VALATU + nMedVal) / 12 ) / 30 * nDMatern :" + cValToChar(nValAux),1,2)
						EndIf
						If lDissidio
							nOrigVlMat := ((cTBLXMED)->RP_VALOR + nMedVal2) * nAvosMat / 12
						EndIf
						nAvAuxMat 	:= nAvosMat
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nAvAuxMat -->  nAvosMat :" + cValToChar(nAvAuxMat),1,2)
						EndIf
					EndIf
					nValAux := (((cTBLXMED)->RP_VALATU + nMedVal) * nAvosTot) / 12 - nVlAuxMat				
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->  nValAux := (TRP->RP_VALATU + nMedVal) * nAvosTot / 12 - nVlAuxMat :" + cValToChar(nValAux),1,2)
					EndIf
					If lDissidio 
						nOrigVal := ((cTBLXMED)->RP_VALOR + nMedVal2) * nAvos / 12
						If RetValSRV(aCodFol[123,1],SRA->RA_FILIAL,"RV_COMPL_") <> "S"
							nValAux := nOrigVal
						EndIf						
					EndIf
					If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
						If ( nDiasAfas  > 15 )
		                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
		                Else
		                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
		                EndIf
					ElseIf SRA->RA_CATEFD $ '107/108'
						nValAux := ( nValAux / 30 * Diastrab )
					EndIf
					nAvoAux := nAvos				
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nAvoAux --> nAvos :" + cValToChar(nAvoAux),1,2)
					EndIf			
				EndIf
				//Memória de Cálcu\lo
				If __lMemCalc
					If cTipoRot == "5" .And. lVbs13o
						fAddMemLog("VERBA "+aCodFol[1628,1]+" - TOTAL DE MEDIAS EM VALOR : " + cValToChar(nValAux),1,2)
					Else
						fAddMemLog("VERBA "+aCodFol[123,1]+" - TOTAL DE MEDIAS EM VALOR : " + cValToChar(nValAux),1,2)
					EndIf
				EndIf

				IF cTipoRot == "5" .And. lVbs13o
					FMatriz( aCodFol[1628,1],nValAux ,nAvoAux,,,, "S" )
				Else
					FMatriz( aCodFol[123,1],nValAux ,nAvoAux,,,, "S" )
				EndIf
				If nValAux < 0
					nMedValNeg := nValAux * -1 // Armazena valor negativo na média valor para ser subtraído da média em horas
				EndIf
				If LVB13MAT
					//Memória de Cálculo
					If __lMemCalc
						If cTipoRot == "5" .And. lVbs13o2
							fAddMemLog("VERBA "+aCodFol[1639,1]+" - TOTAL VALOR MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
						Else
							fAddMemLog("VERBA "+aCodFol[1436,1]+" - TOTAL VALOR MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
						EndIf
					EndIf
					If cTipoRot == "5" .And. lVbs13o2
						FMatriz( aCodFol[1639,1],nVlAuxMat ,nAvAuxMat,,,, "S" )
					Else
						FMatriz( aCodFol[1436,1],nVlAuxMat ,nAvAuxMat,,,, "S" )
					EndIf
				EndIf
				nCount := 1 //Controle para nao somar duas vezes o valor do DSR/Horas Atividade em caso de haver media em valor e em horas
			EndIf
			//Memória de Cálculo
			If __lMemCalc
				fAddMemLog("Total de medias em Horas",1,1)
			EndIf
			// Total de medias em horas
			If (cTBLXMED)->(dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"999"+"9899"))
				If nCount == 0					
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("medias em horas (TRP->RP_VALATU) :" + cValToChar((cTBLXMED)->RP_VALATU),1,2)
					EndIf
					IF cTipoRot == "5"
						nAvosTot := nAvos + nAvosMat 
						If LVB13MAT
							//Tratativa para apurar os valores de maternidade de acordo com a legislação, da mesma forma que a dedução é apurada
							nDMatern := fDiasSm13(SubStr(cPeriodo,1,4))
							nVlAuxMat := ( ( (cTBLXMED)->RP_VALATU / 12) / 30) * nDMatern * nPercentua
							nAvAuxMat 	:= nAvosMat * nPercentua
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nVlAuxMat -->( ( TRP->RP_VALATU / 12) / 30) * nDMatern * nPercentua :" + cValToChar(nVlAuxMat),1,2)
								fAddMemLog("nAvAuxMat --> nAvosMat * nPercentua :" + cValToChar(nAvAuxMat),1,2)
							EndIf
							If lCompl13
								nVlAuxMat -= fBuscaAcm( aCodFol[1437,1]+"/"+If(lVbs13o2, aCodFol[1640,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
							EndIf
						EndIf 
						nValAux := ( ((cTBLXMED)->RP_VALATU) * nAvosTot / 12) * nPercentua - nVlAuxMat
						nAvoAux := nAvos * nPercentua
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nValAUX -->( (TRP->RP_VALATU) * nAvosTot / 12) * nPercentua - nVlAuxMat :" + cValToChar(nValAux),1,2)
							fAddMemLog("nAvoAux --> nAvos * nPercentua :" + cValToChar(nAvoAux),1,2)
						EndIf
						//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
						If lCompl13
							nValAux -= fBuscaAcm( aCodFol[124,1]+"/"+If(lVbs13o, aCodFol[1629,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
						EndIf
					ELSE
						nAvosTot  := nAvos + nAvosMat
						If LVB13MAT
							//Tratativa para apurar os valores de maternidade de acordo com a legislação, da mesma forma que a dedução é apurada
							nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
							nVlAuxMat := ( ((cTBLXMED)->RP_VALATU / 12 ) / 30) * nDMatern
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nVlAuxMat --> ( (TRP->RP_VALATU / 12 ) / 30) * nDMatern :" + cValToChar(nVlAuxMat),1,2)
							EndIf	
							If lDissidio
								nOrigHrMat := ((cTBLXMED)->RP_VALOR) * nAvosMat / 12
							EndIf
							nAvAuxMat := nAvosMat
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nAvAuxMat --> nAvosMat :" + cValToChar(nAvAuxMat),1,2)
							EndIf	
						EndIf
						nValAux := (((cTBLXMED)->RP_VALATU) * nAvosTot) / 12 - nVlAuxMat
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nValAux -->  ((TRP->RP_VALATU) * nAvosTot) / 12 - nVlAuxMat :" + cValToChar(nValAux),1,2)
						EndIf
						If lDissidio .And. nOrigHor == 0
							nOrigHor := ((cTBLXMED)->RP_VALOR) * nAvos / 12
						EndIf
						nAvoAux := nAvos
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nAvoAux --> nAvos :" + cValToChar(nAvoAux),1,2)
						EndIf
						If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
							If ( nDiasAfas  > 15 )
			                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
			                Else
			                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
			                EndIf
			            ElseIf SRA->RA_CATEFD $ '107/108'
			                nValAux := ( nValAux / 30 * Diastrab )
		                EndIf			
					EndIf
					//Memória de Cálculo
					If __lMemCalc
						IF cTipoRot == "5" .And. lVbs13o
							fAddMemLog("VERBA "+aCodFol[1629,1]+" - TOTAL DE MEDIAS EM HORAS : " + cValToChar(nValAux),1,2)
						Else
							fAddMemLog("VERBA "+aCodFol[124,1]+" - TOTAL DE MEDIAS EM HORAS : " + cValToChar(nValAux),1,2)
						EndIf
					EndIf
					IF cTipoRot == "5" .And. lVbs13o
						FMatriz( aCodFol[1629,1],nValAux ,nAvoAux,,,, "S" )
					Else
						FMatriz( aCodFol[124,1],nValAux ,nAvoAux,,,, "S" )
					EndIf
					If LVB13MAT
						//Memória de Cálculo
						If __lMemCalc
							IF cTipoRot == "5" .And. lVbs13o2
								fAddMemLog("VERBA "+aCodFol[1640,1]+" - TOTAL HORAS MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
							Else
								fAddMemLog("VERBA "+aCodFol[1437,1]+" - TOTAL HORAS MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
							EndIf
						EndIf
						IF cTipoRot == "5" .And. lVbs13o2
							FMatriz( aCodFol[1640,1],nVlAuxMat ,nAvAuxMat,,,, "S" )
						Else
							FMatriz( aCodFol[1437,1],nVlAuxMat ,nAvAuxMat,,,, "S" )
						EndIf
					EndIf
					
					IF cTipoRot == "5"
						nAvosTot  := nAvos + nAvosMat
						If LVB13MAT
							nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
							nVlAuxMat := ( (nMedVal / 12 ) / 30) * nDMatern * nPercentua
							nAvAuxMat := nAvosMat * nPercentua
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nVlAuxMat --> ( (nMedVal / 12 ) / 30) * nDMatern * nPercentua :" + cValToChar(nVlAuxMat),1,2)
								fAddMemLog("nAvAuxMat --> nAvosMat * nPercentua :" + cValToChar(nAvAuxMat),1,2)
							EndIf
							If lCompl13
								nVlAuxMat -= fBuscaAcm( aCodFol[1436,1]+"/"+If(lVbs13o2, aCodFol[1639,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
							EndIf
						EndIf 
						nValAux := ((nMedVal * nAvosTot) / 12) * nPercentua - nVlAuxMat
						nAvoAux := nAvos * nPercentua
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nValAux --> ((nMedVal * nAvosTot) / 12) * nPercentua - nVlAuxMat:" + cValToChar(nValAux),1,2)
							fAddMemLog("nAvoAux --> nAvos * nPercentua :" + cValToChar(nAvoAux),1,2)
						EndIf
						//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
						If lCompl13
							nValAux -= fBuscaAcm( aCodFol[123,1]+"/"+If(lVbs13o, aCodFol[1628,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
						EndIf
					ELSE
						nAvosTot  := nAvos + nAvosMat
						If LVB13MAT
							nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
							nVlAuxMat := ( nMedVal / 12 ) / 30 * nDMatern
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nVlAuxMat --> ( nMedVal / 12 ) / 30 * nDMatern :" + cValToChar(nVlAuxMat),1,2)
							EndIf
							If lDissidio
								nOrigHrMat := (nMedVal2) * nAvosMat / 12
							EndIf
							nAvAuxMat := nAvosMat
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nAvAuxMat --> nAvosMat :" + cValToChar(nAvAuxMat),1,2)
							EndIf
						EndIf
						nValAux := ( (nMedVal * nAvosTot) / 12) - nVlAuxMat
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nValAux --> ( (nMedVal * nAvosTot) / 12) - nVlAuxMat :" + cValToChar(nValAux),1,2)
						EndIf
						If lDissidio .And. nOrigVal == 0
							nOrigVal := (nMedVal2 * nAvos) / 12
						EndIf
						nAvoAux := nAvos
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nAvoAux --> nAvos :" + cValToChar(nAvoAux),1,2)
						EndIf
						If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
							If ( nDiasAfas  > 15 )
			                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
			                Else
			                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
			                EndIf
		                ElseIf SRA->RA_CATEFD $ '107/108'
		                	nValAux := ( nValAux / 30 * Diastrab )
		                EndIf		
					EndIf
					//Memória de Cálculo
					If __lMemCalc
						IF cTipoRot == "5" .And. lVbs13o
							fAddMemLog("VERBA "+aCodFol[1628,1]+" - TOTAL DE MEDIAS EM VALOR : " + cValToChar(nValAux),1,2)
						Else
							fAddMemLog("VERBA "+aCodFol[123,1]+" - TOTAL DE MEDIAS EM VALOR : " + cValToChar(nValAux),1,2)
						EndIf
					EndIf
					IF cTipoRot == "5" .And. lVbs13o
						FMatriz( aCodFol[1628,1],nValAux ,nAvoAux,,,, "S" )
					Else
						FMatriz( aCodFol[123,1],nValAux ,nAvoAux,,,, "S" )
					EndIf
					If LVB13MAT
						//Memória de Cálculo
						If __lMemCalc
							IF cTipoRot == "5" .And. lVbs13o2
								fAddMemLog("VERBA "+aCodFol[1639,1]+" - TOTAL VALOR MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
							Else
								fAddMemLog("VERBA "+aCodFol[1436,1]+" - TOTAL VALOR MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
							EndIf
						EndIf
						IF cTipoRot == "5" .And. lVbs13o2
							FMatriz( aCodFol[1639,1],nVlAuxMat ,nAvAuxMat,,,, "S" )
						Else
							FMatriz( aCodFol[1436,1],nVlAuxMat ,nAvAuxMat,,,, "S" )
						EndIf
					EndIf
				Else			
					IF cTipoRot == "5"
						nAvosTot := nAvos + nAvosMat 
						If LVB13MAT
							//Tratativa para apurar os valores de maternidade de acordo com a legislação, da mesma forma que a dedução é apurada
							nDMatern 	:= fDiasSm13(SubStr(cPeriodo,1,4))
							nVlAuxMat 	:= ( ((cTBLXMED)->RP_VALATU / 12) / 30) * nDMatern * nPercentua
							nAvAuxMat 	:= nAvosMat * nPercentua
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nVlAuxMat --> ( (TRP->RP_VALATU / 12) / 30) * nDMatern * nPercentua :" + cValToChar(nVlAuxMat),1,2)
								fAddMemLog("nAvAuxMat --> nAvosMat * nPercentua :" + cValToChar(nAvAuxMat),1,2)
							EndIf
							If lCompl13
								nVlAuxMat -= fBuscaAcm( aCodFol[1437,1]+"/"+If(lVbs13o2, aCodFol[1640,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
							EndIf
						EndIf 
						nValAux := (((cTBLXMED)->RP_VALATU * nAvosTot) / 12) * nPercentua - nVlAuxMat - nMedValNeg
						nAvoAux := nAvos * nPercentua
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nValAux --> ((TRP->RP_VALATU * nAvosTot) / 12) * nPercentua - nVlAuxMat - nMedValNeg:" + cValToChar(nValAux),1,2)
							fAddMemLog("nAvoAux --> nAvos * nPercentua :" + cValToChar(nAvoAux),1,2)
						EndIf
						//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
						If lCompl13
							nValAux -= fBuscaAcm( aCodFol[124,1]+"/"+If(lVbs13o, aCodFol[1629,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
						EndIf
					ELSE
						nAvosTot  := nAvos + nAvosMat
						If LVB13MAT
							nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
							nVlAuxMat := (((cTBLXMED)->RP_VALATU / 12) / 30) * nDMatern
							//Memória de Cálculo						
							If __lMemCalc
								fAddMemLog("nVlAuxMat --> ((TRP->RP_VALATU / 12) / 30) * nDMatern :" + cValToChar(nVlAuxMat),1,2)
							EndIf
							If lDissidio
								nOrigHrMat := ((cTBLXMED)->RP_VALOR) * nAvosMat / 12
							EndIf
							nAvAuxMat := nAvosMat
							//Memória de Cálculo						
							If __lMemCalc
								fAddMemLog("nAvAuxMat --> nAvosMat :" + cValToChar(nAvAuxMat),1,2)
							EndIf
						EndIf
						nValAux := ( ((cTBLXMED)->RP_VALATU * nAvosTot) / 12) - nVlAuxMat - nMedValNeg
						//Memória de Cálculo						
						If __lMemCalc
							fAddMemLog("nValAux --> ( (TRP->RP_VALATU * nAvosTot) / 12) - nVlAuxMat - nMedValNeg :" + cValToChar(nValAux),1,2)
						EndIf
						If lDissidio .And. nOrigHor == 0
							nOrigHor := ((cTBLXMED)->RP_VALOR) * nAvos / 12
						EndIf
						nAvoAux := nAvos	
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nAvoAux --> nAvos :" + cValToChar(nAvoAux),1,2)
						EndIf
						If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
							If ( nDiasAfas  > 15 )
			                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
			                Else
			                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
			                EndIf
						ElseIf SRA->RA_CATEFD $ '107/108'
							nValAux := ( nValAux / 30 * Diastrab )
		                EndIf	
					EndIf
					//Memória de Cálculo
					If __lMemCalc
						IF cTipoRot == "5" .And. lVbs13o
							fAddMemLog("VERBA "+aCodFol[1629,1]+" - TOTAL DE MEDIAS EM HORAS : " + cValToChar(nValAux),1,2)
						Else
							fAddMemLog("VERBA "+aCodFol[124,1]+" - TOTAL DE MEDIAS EM HORAS : " + cValToChar(nValAux),1,2)
						EndIf
					EndIf
					IF cTipoRot == "5" .And. lVbs13o
						FMatriz( aCodFol[1629,1],nValAux,nAvoAux,,,, "S" )
					Else
						FMatriz( aCodFol[124,1],nValAux,nAvoAux,,,, "S" )
					EndIf
					If LVB13MAT
						//Memória de Cálculo
						If __lMemCalc
							IF cTipoRot == "5" .And. lVbs13o2
								fAddMemLog("VERBA "+aCodFol[1640,1]+" - TOTAL HORAS MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
							Else
								fAddMemLog("VERBA "+aCodFol[1437,1]+" - TOTAL HORAS MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
							EndIf
						EndIf
						IF cTipoRot == "5" .And. lVbs13o2
							FMatriz( aCodFol[1640,1],nVlAuxMat ,nAvAuxMat,,,, "S" )
						Else
							FMatriz( aCodFol[1437,1],nVlAuxMat ,nAvAuxMat,,,, "S" )
						EndIf
					EndIf
				EndIf
			EndIf
		Else
			// Total DSR somado as Horas Atividade
			If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"999"+"99MD")
				nMedVal  += fDsrHrsAtiv("3",aCodFol,"99MD")
				nMedVal2 += fDsrHrsAtiv("3",aCodFol,"99MD",NIL,NIL,lDissidio)
			EndIf
			//Memória de Cálculo
			If __lMemCalc
				fAddMemLog("Total DSR somado as Horas Atividade (nMedVal) :" + cValToChar(nMedVal),1,1)
			EndIf
			
			If __lMemCalc
				fAddMemLog("Total de medias em valor",1,1)
			EndIf
			// Total de medias em valor
			If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"999"+"97MD")
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("medias em valor (TRP->RP_VALATU) :" + cValToChar((cTBLXMED)->RP_VALATU),1,2)
				EndIf
				IF cTipoRot == "5"
					nAvosTot := nAvos + nAvosMat
					If LVB13MAT
						nDMatern := fDiasSm13(SubStr(cPeriodo,1,4))
						nVlAuxMat := ((((cTBLXMED)->RP_VALATU + nMedVal) / 12) / 30) * nDMatern * nPercentua
						nAvAuxMat := nAvosMat * nPercentua
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nVlAuxMat --> (((TRP->RP_VALATU + nMedVal) / 12) / 30) * nDMatern * nPercentua:" + cValToChar(nVlAuxMat),1,2)
							fAddMemLog("nAvAuxMat --> nAvosMat * nPercentua :" + cValToChar(nAvAuxMat),1,2)
						EndIf
						//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
						If lCompl13
							nVlAuxMat -= fBuscaAcm( aCodFol[1436,1]+"/"+If(lVbs13o2, aCodFol[1639,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("Valor Antecipado (nVlAuxMat):" + cValToChar(nVlAuxMat),1,2)
								fAddMemLog("nVlAuxMat --> nVlAuxMat - nValAntecip :" + cValToChar(nValAux),1,2)
							EndIf
						EndIf	
					EndIf
					nValAux := ((((cTBLXMED)->RP_VALATU + nMedVal) * nAvosTot) / nAvosTot) * nPercentua - nVlAuxMat
					nAvoAux := nAvos * nPercentua
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAUX --> (((TRP->RP_VALATU + nMedVal) * nAvosTot) / nAvosTot) * nPercentua - nVlAuxMat:" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos * nPercentua :" + cValToChar(nAvoAux),1,2)
					EndIf
					//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
					If lCompl13
						nValAux -= fBuscaAcm( aCodFol[123,1]+"/"+If(lVbs13o, aCodFol[1628,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("Valor Antecipado (nAntec13):" + cValToChar(nAntec13),1,2)
							fAddMemLog("nValAux --> nValAux - nAntec13 :" + cValToChar(nValAux),1,2)
						EndIf
					EndIf				
				ELSE
					nAvosTot  := nAvos + nAvosMat
					If LVB13MAT
						nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
						nVlAuxMat := ((((cTBLXMED)->RP_VALATU + nMedVal) / 12) / 30) * nDMatern
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nVlAuxMat --> (((TRP->RP_VALATU + nMedVal) / 12) / 30) * nDMatern :" + cValToChar(nVlAuxMat),1,2)
						EndIf
						If lDissidio
							nOrigVlMat := ((cTBLXMED)->RP_VALOR + nMedVal2) * nAvosMat / (nAvos+nAvosMat)
						EndIf
						nAvAuxMat := nAvosMat
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nAvAuxMat --> nAvosMat :" + cValToChar(nAvAuxMat),1,2)
						EndIf
					EndIf
					nValAux := (((cTBLXMED)->RP_VALATU + nMedVal) * nAvosTot) / nAvosTot - nVlAuxMat
					
					If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
						If ( nDiasAfas  > 15 )
		                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
		                Else
		                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
		                EndIf
					ElseIf SRA->RA_CATEFD $ '107/108'
						nValAux := ( nValAux / 30 * Diastrab )
					EndIf
					
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAUX -->  ((TRP->RP_VALATU + nMedVal) * nAvosTot) / nAvosTot - nVlAuxMat :" + cValToChar(nValAux),1,2)
					EndIf
					If lDissidio .And. nOrigVal  == 0
						nOrigVal := ((cTBLXMED)->RP_VALOR + nMedVal2) * nAvos / (nAvos+nAvosMat)
					EndIf
					nAvoAux := nAvos
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nAvoAux --> nAvos :" + cValToChar(nAvoAux),1,2)
					EndIf	
				EndIf
				//Memória de Cálculo
				If __lMemCalc
					IF cTipoRot == "5" .And. lVbs13o
						fAddMemLog("VERBA "+aCodFol[1628,1]+" - TOTAL DE MEDIAS EM VALOR : " + cValToChar(nValAux),1,2)
					Else
						fAddMemLog("VERBA "+aCodFol[123,1]+" - TOTAL DE MEDIAS EM VALOR : " + cValToChar(nValAux),1,2)
					EndIf
				EndIf
				If cTipoRot == "5" .And. lVbs13o
					FMatriz( aCodFol[1628,1],nValAux,nAvoAux,,,, "S" )
				Else
					FMatriz( aCodFol[123,1],nValAux,nAvoAux,,,, "S" )
				EndIf
				If LVB13MAT
					//Memória de Cálculo
					If __lMemCalc
						IF cTipoRot == "5" .And. lVbs13o2
							fAddMemLog("VERBA "+aCodFol[1639,1]+" - TOTAL VALOR MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
						Else
							fAddMemLog("VERBA "+aCodFol[1436,1]+" - TOTAL VALOR MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
						EndIf						
					EndIf
					IF cTipoRot == "5" .And. lVbs13o2
						FMatriz( aCodFol[1639,1],nVlAuxMat,nAvAuxMat,,,, "S" )
					Else
						FMatriz( aCodFol[1436,1],nVlAuxMat,nAvAuxMat,,,, "S" )
					EndIf
				EndIf
				nCount := 1 //Controle para nao somar duas vezes o valor do DSR/Horas Atividade em caso de haver media em valor e em horas
			EndIf
			
			//Memória de Cálculo
			If __lMemCalc
				fAddMemLog("Total de medias em Horas",1,1)
			EndIf
			// Total de medias em horas
			If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"999"+"98MD")
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("medias em horas (TRP->RP_VALATU) :" + cValToChar((cTBLXMED)->RP_VALATU),1,2)
				EndIf
				If nCount == 0
					IF cTipoRot == "5"
						nAvosTot := nAvos + nAvosMat 
						If LVB13MAT
							nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
							nVlAuxMat := (((cTBLXMED)->RP_VALATU / 12) / 30) * nDMatern * nPercentua
							nAvAuxMat := nAvosMat * nPercentua
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nVlAuxMat --> ((TRP->RP_VALATU / 12) / 30) * nDMatern * nPercentua :" + cValToChar(nVlAuxMat),1,2)
								fAddMemLog("nAvAuxMat --> nAvosMat * nPercentua :" + cValToChar(nAvAuxMat),1,2)
							EndIf
							//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
							If lCompl13
								nVlAuxMat -= fBuscaAcm( aCodFol[1437,1]+"/"+If(lVbs13o2, aCodFol[1640,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
							EndIf
						EndIf 
						nValAux := (((cTBLXMED)->RP_VALATU * nAvosTot) / nAvosTot) * nPercentua - nVlAuxMat
						nAvoAux := nAvos * nPercentua
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nValAUX -->((TRP->RP_VALATU * nAvosTot) / nAvosTot) * nPercentua - nVlAuxMat :" + cValToChar(nValAux),1,2)
							fAddMemLog("nAvoAux --> nAvos * nPercentua :" + cValToChar(nAvoAux),1,2)
						EndIf
						//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
						If lCompl13
							nValAux -= fBuscaAcm( aCodFol[124,1]+"/"+If(lVbs13o, aCodFol[1629,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
						EndIf
					ELSE
						nAvosTot := nAvos + nAvosMat 
						If LVB13MAT
							nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
							nVlAuxMat := (((cTBLXMED)->RP_VALATU / 12) / 30) * nDMatern
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nVlAuxMat --> ((TRP->RP_VALATU / 12) / 30) * nDMatern :" + cValToChar(nVlAuxMat),1,2)
							EndIf	
							If lDissidio
								nOrigHrMat := (cTBLXMED)->RP_VALOR * nAvosMat / (nAvos+nAvosMat)
							EndIf
							nAvAuxMat := nAvosMat
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nAvAuxMat --> nAvosMat :" + cValToChar(nAvAuxMat),1,2)
							EndIf
						EndIf
						nValAux := (((cTBLXMED)->RP_VALATU * nAvosTot) / nAvosTot) - nVlAuxMat
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nValAUX -->  ((TRP->RP_VALATU * nAvosTot) / nAvosTot) - nVlAuxMat :" + cValToChar(nValAux),1,2)
						EndIf
						If lDissidio
							nOrigHor := (cTBLXMED)->RP_VALOR * nAvos / (nAvos+nAvosMat)
						EndIf
						nAvoAux := nAvos
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nAvoAux --> nAvos :" + cValToChar(nAvoAux),1,2)
						EndIf
						
						If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
							If ( nDiasAfas  > 15 )
			                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
			                Else
			                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
			                EndIf
			            ElseIf SRA->RA_CATEFD $ '107/108'
			                nValAux := ( nValAux / 30 * Diastrab )
		                EndIf		
					EndIf
					//Memória de Cálculo
					If __lMemCalc
						IF cTipoRot == "5" .And. lVbs13o
							fAddMemLog("VERBA "+aCodFol[1629,1]+" - TOTAL DE MEDIAS EM HORAS : " + cValToChar(nValAux),1,2)
						Else
							fAddMemLog("VERBA "+aCodFol[124,1]+" - TOTAL DE MEDIAS EM HORAS : " + cValToChar(nValAux),1,2)
						EndIf
					EndIf
					IF cTipoRot == "5" .And. lVbs13o
						FMatriz( aCodFol[1629,1],nValAux,nAvoAux,,,, "S" )
					Else
						FMatriz( aCodFol[124,1],nValAux,nAvoAux,,,, "S" )
					EndIf					
					If LVB13MAT
						//Memória de Cálculo
						If __lMemCalc
							IF cTipoRot == "5" .And. lVbs13o2
								fAddMemLog("VERBA "+aCodFol[1640,1]+" - TOTAL HORAS MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
							Else
								fAddMemLog("VERBA "+aCodFol[1437,1]+" - TOTAL HORAS MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
							EndIf
						EndIf
						IF cTipoRot == "5" .And. lVbs13o2
							FMatriz( aCodFol[1640,1],nVlAuxMat,nAvAuxMat,,,, "S" )
						Else
							FMatriz( aCodFol[1437,1],nVlAuxMat,nAvAuxMat,,,, "S" )
						EndIf
					EndIf

					If cTipoRot == "5" 
						nAvosTot := nAvos + nAvosMat 
						If LVB13MAT
							nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
							nVlAuxMat := ((nMedVal / 12) / 30) * nDMatern * nPercentua
							nAvAuxMat := nAvosMat * nPercentua
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nVlAuxMat --> ((nMedVal / 12) / 30) * nDMatern * nPercentua :" + cValToChar(nVlAuxMat),1,2)
								fAddMemLog("nAvAuxMat --> nAvosMat * nPercentua :" + cValToChar(nAvAuxMat),1,2)
							EndIf
							//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
							If lCompl13
								nVlAuxMat -= fBuscaAcm( aCodFol[1436,1]+"/"+If(lVbs13o2, aCodFol[1639,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
							EndIf
						EndIf 
						nValAux := ((nMedVal * nAvosTot) / nAvosTot) * nPercentua - nVlAuxMat
						nAvoAux := nAvos * nPercentua
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nValAux -->  ((nMedVal * nAvosTot) / nAvosTot) * nPercentua - nVlAuxMat :" + cValToChar(nValAux),1,2)
							fAddMemLog("nAvoAux --> nAvos * nPercentua :" + cValToChar(nAvoAux),1,2)
						EndIf
						//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
						If lCompl13
							nValAux -= fBuscaAcm( aCodFol[123,1]+"/"+If(lVbs13o, aCodFol[1628,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
						EndIf
					Else
						nAvosTot := nAvos + nAvosMat 
						If LVB13MAT
							nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
							nVlAuxMat := ((nMedVal / 12) / 30) * nDMatern
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nVlAuxMat --> ((nMedVal / 12) / 30) * nDMatern :" + cValToChar(nVlAuxMat),1,2)
							EndIf	
							If lDissidio
								nOrigHrMat := nMedVal2 * nAvosMat / (nAvos+nAvosMat)
							EndIf
							nAvAuxMat := nAvosMat
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nAvAuxMat --> nAvosMat :" + cValToChar(nAvAuxMat),1,2)
							EndIf	
						EndIf
						nValAux := ((nMedVal * nAvosTot) / nAvosTot) - nVlAuxMat
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nValAux -->((nMedVal * nAvos) / (nAvos+nAvosMat)) - nVlAuxMat :" + cValToChar(nValAux),1,2)
						EndIf
						If lDissidio
							nOrigVal := nMedVal2 * nAvos / (nAvos+nAvosMat)
						EndIf
						nAvoAux := nAvos	
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nAvoAux --> nAvos :" + cValToChar(nAvoAux),1,2)
						EndIf
						If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
							If ( nDiasAfas  > 15 )
			                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
			                Else
			                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
			                EndIf
						ElseIf SRA->RA_CATEFD $ '107/108'
							nValAux := ( nValAux / 30 * Diastrab )
		                EndIf	
					EndIf	
					//Memória de Cálculo
					If __lMemCalc
						IF cTipoRot == "5" .And. lVbs13o
							fAddMemLog("VERBA "+aCodFol[1628,1]+" - TOTAL DE MEDIAS EM VALOR : " + cValToChar(nValAux),1,2)
						Else
							fAddMemLog("VERBA "+aCodFol[123,1]+" - TOTAL DE MEDIAS EM VALOR : " + cValToChar(nValAux),1,2)
						EndIf
					EndIf			
					IF cTipoRot == "5" .And. lVbs13o
						FMatriz( aCodFol[1628,1],nValAux,nAvoAux,,,, "S" )
					Else
						FMatriz( aCodFol[123,1],nValAux,nAvoAux,,,, "S" )
					EndIf
					If LVB13MAT
						//Memória de Cálculo
						If __lMemCalc
							IF cTipoRot == "5" .And. lVbs13o2
								fAddMemLog("VERBA "+aCodFol[1639,1]+" - TOTAL VALOR MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
							Else
								fAddMemLog("VERBA "+aCodFol[1436,1]+" - TOTAL VALOR MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
							EndIf
						EndIf	
						If cTipoRot == "5" .And. lVbs13o2
							FMatriz( aCodFol[1639,1],nVlAuxMat,nAvAuxMat,,,, "S" )
						Else
							FMatriz( aCodFol[1436,1],nVlAuxMat,nAvAuxMat,,,, "S" )
						EndIf
					EndIf
				Else
					IF cTipoRot == "5" 
						nAvosTot := nAvos + nAvosMat 
						If LVB13MAT
							nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
							nVlAuxMat := (((cTBLXMED)->RP_VALATU / 12) / 30) * nDMatern * nPercentua
							nAvAuxMat := nAvosMat * nPercentua
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nVlAuxMat --> ((TRP->RP_VALATU / 12) / 30) * nDMatern * nPercentua :" + cValToChar(nVlAuxMat),1,2)
								fAddMemLog("nAvAuxMat --> nAvosMat * nPercentua :" + cValToChar(nAvAuxMat),1,2)
							EndIf
							//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
							If lCompl13
								nVlAuxMat -= fBuscaAcm( aCodFol[1437,1]+"/"+If(lVbs13o, aCodFol[1640,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
							EndIf
						EndIf 
						nValAux := (((cTBLXMED)->RP_VALATU * nAvosTot) / nAvosTot) * nPercentua - nVlAuxMat
						nAvoAux := nAvos * nPercentua
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nValAux -->   ((TRP->RP_VALATU * nAvosTot) / nAvosTot) * nPercentua - nVlAuxMat :" + cValToChar(nValAux),1,2)
							fAddMemLog("nAvoAux --> nAvos * nPercentua :" + cValToChar(nAvoAux),1,2)
						EndIf
						//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
						If lCompl13
							nValAux -= fBuscaAcm( aCodFol[124,1]+"/"+If(lVbs13o, aCodFol[1629,1], ""), Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
						EndIf
					Else
						nAvosTot := nAvos + nAvosMat 
						If LVB13MAT
							nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
							nVlAuxMat := (((cTBLXMED)->RP_VALATU / 12) / 30) * nDMatern
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nVlAuxMat --> ((TRP->RP_VALATU / 12) / 30) * nDMatern  :" + cValToChar(nVlAuxMat),1,2)
							EndIf	
							If lDissidio
								nOrigHrMat := (cTBLXMED)->RP_VALOR * nAvosMat / (nAvos+nAvosMat)
							EndIf
							nAvAuxMat := nAvosMat
							//Memória de Cálculo
							If __lMemCalc
								fAddMemLog("nAvAuxMat --> nAvosMat  :" + cValToChar(nAvAuxMat),1,2)
							EndIf
						EndIf
						nValAux := (((cTBLXMED)->RP_VALATU * nAvosTot) / nAvosTot) - nVlAuxMat
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nValAux -->   ((TRP->RP_VALATU * nAvos) / nAvosTot) - nVlAuxMat :" + cValToChar(nValAux),1,2)
						EndIf
						If lDissidio
							nOrigHor := (cTBLXMED)->RP_VALOR * nAvos / (nAvos+nAvosMat)
						EndIf
						nAvoAux := nAvos	
						//Memória de Cálculo
						If __lMemCalc
							fAddMemLog("nAvoAux --> nAvos  :" + cValToChar(nAvoAux),1,2)
						EndIf
						
						If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
							If ( nDiasAfas  > 15 )
			                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
			                Else
			                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
			                EndIf
						ElseIf SRA->RA_CATEFD $ '107/108'
							nValAux := ( nValAux / 30 * Diastrab )
		                EndIf					
					EndIf
					//Memória de Cálculo
					If __lMemCalc
						IF cTipoRot == "5" .And. lVbs13o
							fAddMemLog("VERBA "+aCodFol[1629,1]+" - TOTAL DE MEDIAS EM HORAS : " + cValToChar(nValAux),1,2)
						Else
							fAddMemLog("VERBA "+aCodFol[124,1]+" - TOTAL DE MEDIAS EM HORAS : " + cValToChar(nValAux),1,2)
						EndIf
					EndIf
					IF cTipoRot == "5" .And. lVbs13o
						FMatriz( aCodFol[1629,1],nValAux,nAvoAux,,,, "S" )
					Else
						FMatriz( aCodFol[124,1],nValAux,nAvoAux,,,, "S" )
					EndIf
					If LVB13MAT
						//Memória de Cálculo
						If __lMemCalc
							IF cTipoRot == "5" .And. lVbs13o2
								fAddMemLog("VERBA "+aCodFol[1640,1]+" - TOTAL HORAS MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
							Else
								fAddMemLog("VERBA "+aCodFol[1437,1]+" - TOTAL HORAS MATERNIDADE : " + cValToChar(nVlAuxMat),1,2)
							EndIf
						EndIf
						IF cTipoRot == "5" .And. lVbs13o2
							FMatriz( aCodFol[1640,1],nVlAuxMat,nAvAuxMat,,,, "S" )
						Else
							FMatriz( aCodFol[1437,1],nVlAuxMat,nAvAuxMat,,,, "S" )
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf
	Else
		dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3")
		While ! Eof() .And. SRA->RA_FILIAL+SRA->RA_MAT = (cTBLXMED)->RP_FILIAL+(cTBLXMED)->RP_MAT
			If !(cTBLXMED)->RP_DATARQ $ "9999  " .OR. (cTBLXMED)->RP_PD = "999" .OR. (cTBLXMED)->RP_TIPO # "3"
				dbSkip()
				Loop
			EndIf
			//Memória de Cálculo
			If __lMemCalc
				fAddMemLog("medias (TRP->RP_VALATU) :" + cValToChar((cTBLXMED)->RP_VALATU),1,1)
			EndIf
			If cMedDir == "N"
				IF cTipoRot == "5" 
					nValAux := ((cTBLXMED)->RP_VALATU * nAvos / 12) * nPercentua
					nAvoAux := nAvos * nPercentua
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->   (TRP->RP_VALATU * nAvos / 12) * nPercentua :" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos * nPercentua :" + cValToChar(nAvoAux),1,2)
					EndIf
					//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
					If lCompl13
						nValAux -= fBuscaAcm( (cTBLXMED)->RP_PD, Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
					EndIf
				ELSE
					nValAux := (cTBLXMED)->RP_VALATU * nAvos / 12
					nAvoAux := nAvos
					If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
						If ( nDiasAfas  > 15 )
		                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
		                Else
		                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
		                EndIf
					ElseIf SRA->RA_CATEFD $ '107/108'
						nValAux := ( nValAux / 30 * Diastrab )
					EndIf
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->   TRP->RP_VALATU :" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos :" + cValToChar(nAvoAux),1,2)
					EndIf		
				ENDIF
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("VERBA "+(cTBLXMED)->RP_PD+" : " + cValToChar(nValAux),1,2)
				EndIf
				FMatriz( (cTBLXMED)->RP_PD,nValAux ,nAvoAux,,,, "S" )
			Else 
				IF cTipoRot == "5" 
					nValAux := (cTBLXMED)->RP_VALATU * nPercentua
					nAvoAux := nAvos * nPercentua
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->   TRP->RP_VALATU * nPercentua :" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos * nPercentua :" + cValToChar(nAvoAux),1,2)
					EndIf
					//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
					If lCompl13
						nValAux -= fBuscaAcm( (cTBLXMED)->RP_PD, Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
					EndIf
				ELSE
					nValAux := (cTBLXMED)->RP_VALATU
					nAvoAux := nAvos
					If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
						If ( nDiasAfas  > 15 )
		                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
		                Else
		                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
		                EndIf
					ElseIf SRA->RA_CATEFD $ '107/108'
						nValAux := ( nValAux / 30 * Diastrab )
					EndIf
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->   TRP->RP_VALATU :" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos :" + cValToChar(nAvoAux),1,2)
					EndIf		
				ENDIF    
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("VERBA "+(cTBLXMED)->RP_PD+" : " + cValToChar(nValAux),1,2)
				EndIf
				FMatriz( (cTBLXMED)->RP_PD,nValAux ,nAvoAux,,,, "S" )
			Endif
			If aScan( aVbMed, { |x| x == (cTBLXMED)->RP_PD } ) == 0
				aAdd( aVbMed, (cTBLXMED)->RP_PD )
			EndIf
			dbSkip()
		Enddo

		For nVbMed := 1 To Len(aVbMed)
			If ( nPos := aScan( aPdv, { |x| x[1] == aVbMed[nVbMed] } ) ) > 0
				aPdv[nPos][11] := "N"//Ref Fer
				aPdv[nPos][12] := "S"//Ref 13º
			EndIf
		Next nVbMed
		
		If (SRA->RA_CATFUNC $ "I*J") .And. dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"3"+"999"+"9999") // Calcula DSR / Horas Atividade sobre as verbas de media que incidem para esses calculos
			If cMedDir == "N"
				fDsrHrsAtiv("3",aCodFol,"9999",@nVlDsrProf,@nVlHrsAtiv)
				//Memória de Cálculo 
				If __lMemCalc
					fAddMemLog("DSR PRofessor -->   (nVlDsrProf ) :" + cValToChar(nVlDsrProf),1,2)
					fAddMemLog("Atividade PRofessor -->   (nVlHrsAtiv ) :" + cValToChar(nVlHrsAtiv),1,2)
				EndIf					
				IF cTipoRot == "5" 
					nValAux := (nVlDsrProf * nAvos / 12) * nPercentua
					nAvoAux := nAvos * nPercentua
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->   (nVlDsrProf * nAvos / 12) * nPercentua :" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos * nPercentua :" + cValToChar(nAvoAux),1,2)
					EndIf
					//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
					If lCompl13
						nValAux -= fBuscaAcm( aCodFol[33,1], Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
					EndIf
				ELSE
					nValAux := nVlDsrProf * nAvos / 12
					nAvoAux := nAvos
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->   nVlDsrProf * nAvos / 12 :" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos :" + cValToChar(nAvoAux),1,2)
					EndIf	
				ENDIF 
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("VERBA "+aCodFol[33,1]+" - DSR HORISTA : " + cValToChar(nValAux),1,2)
				EndIf
				FMatriz( aCodFol[33,1],nValAux,nAvoAux,,,, "S" )
				
				IF cTipoRot == "5" 
					nValAux := (nVlHrsAtiv * nAvos / 12) * nPercentua
					nAvoAux := nAvos * nPercentua
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->   (nVlHrsAtiv * nAvos / 12) * nPercentua:" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos * nPercentua :" + cValToChar(nAvoAux),1,2)
					EndIf
					//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
					If lCompl13
						nValAux -= fBuscaAcm( aCodFol[317,1], Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
					EndIf
				ELSE
					nValAux := nVlHrsAtiv * nAvos / 12
					nAvoAux := nAvos
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->  nVlHrsAtiv * nAvos / 12:" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos  :" + cValToChar(nAvoAux),1,2)
					EndIf		
				ENDIF 
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("VERBA "+aCodFol[317,1]+" - HORA ATIVIDADE : " + cValToChar(nValAux),1,2)
				EndIf		
				FMatriz( aCodFol[317,1],nValAux,nAvoAux,,,, "S" )
			Else
				fDsrHrsAtiv("3",aCodFol,,@nVlDsrProf,@nVlHrsAtiv)
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("DSR PRofessor -->   (nVlDsrProf ) :" + cValToChar(nVlDsrProf),1,2)
					fAddMemLog("Atividade PRofessor -->   (nVlHrsAtiv ) :" + cValToChar(nVlHrsAtiv),1,2)
				EndIf
				IF cTipoRot == "5" 
					nValAux := nVlDsrProf * nPercentua
					nAvoAux := nAvos * nPercentua
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->  nVlDsrProf * nPercentua:" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos* nPercentua  :" + cValToChar(nAvoAux),1,2)
					EndIf
					//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
					If lCompl13
						nValAux -= fBuscaAcm( aCodFol[33,1], Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
					EndIf
				ELSE
					nValAux := nVlDsrProf
					nAvoAux := nAvos
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->  nVlDsrProf :" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos  :" + cValToChar(nAvoAux),1,2)
					EndIf	
				ENDIF
				//Memória de Cálculo 
				If __lMemCalc
					fAddMemLog("VERBA "+aCodFol[33,1]+" - DSR HORISTA : " + cValToChar(nValAux),1,2)
				EndIf
				FMatriz( aCodFol[33,1],nValAux,nAvoAux,,,, "S" )
				
				IF cTipoRot == "5" 
					nValAux := nVlHrsAtiv * nPercentua
					nAvoAux := nAvos * nPercentua
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->  nVlHrsAtiv * nPercentua:" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos* nPercentua  :" + cValToChar(nAvoAux),1,2)
					EndIf
					//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
					If lCompl13
						nValAux -= fBuscaAcm( aCodFol[317,1], Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
					EndIf
				ELSE
					nValAux := nVlHrsAtiv
					nAvoAux := nAvos	
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nValAux -->  nVlHrsAtiv :" + cValToChar(nValAux),1,2)
						fAddMemLog("nAvoAux --> nAvos  :" + cValToChar(nAvoAux),1,2)
					EndIf	
				ENDIF 
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("VERBA "+aCodFol[317,1]+" - HORA ATIVIDADE : " + cValToChar(nValAux),1,2)
				EndIf
				FMatriz( aCodFol[317,1],nValAux,nAvoAux,,,, "S" )
			Endif
		EndIf
	EndIf
	
	// Calcula Peric./Insalub Sobre Verba de Medias que tem Incidencia
	nMedPer := nMedIns := 0.00
	FMedPerIns(@nMedPer,@nMedIns,'3',SalHora,Val_BInsal,aCodFol,,,,P_ADISMED)
	//Memória de Cálculo
	If __lMemCalc
		fAddMemLog("Periculosidade/ Insalubridade sobre medias (nMedPer+nMedIns) : " + cValToChar(nMedPer+nMedIns),1,1)
	EndIf
	
	If nMedPer > 0.00 .And. aCodfol[181,1] # Space(3)
		If !lVbs13o3 .Or. cTipoRot == "6" 
			cVbAux := aCodFol[181,1]
		Else
			cVbAux := aCodFol[1649,1]
		EndIf
		If cMedDir == "N"		
			IF cTipoRot == "5"
				nAvosTot := nAvos + nAvosMat  
				If LVB13MAT
					nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
					If !lVbs13o3
						cVbAuxMat := aCodFol[181,1]
						//Se não tiver a verba cadastrada, vai gerar na mesma verba do 13. Por isso, considera-se os avos normais + avos de maternidade.
						nVlAuxMat := ( (nMedPer * nAvosTot ) / 12) * nPercentua
					Else
						cVbAuxMat := aCodFol[1653,1]
						//Caso tenha a verba cadastrada, então considera-se apenas os avos de maternidade.
						nVlAuxMat := ( (nMedPer / 12) / 30) * nDMatern * nPercentua
					EndIf						
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nVlAuxMat -->  nVlAuxMat := ( (nMedPer / 12) / 30) * nDMatern * nPercentua :" + cValToChar(nVlAuxMat),1,2)
					EndIf
					//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
					If lCompl13
						nVlAuxMat -= fBuscaAcm( cVbAuxMat, Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
					EndIf	
				EndIf
				nValAux := ( (nMedPer * nAvos) / 12 ) * nPercentua - nVlAuxMat
				//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
				If lCompl13
					nValAux -= fBuscaAcm( cVbAux, Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
				EndIf
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("nValAux -->  nMedPer * nPercentua :" + cValToChar(nValAux),1,2)
				EndIf
			ELSE
				nAvosTot := nAvos + nAvosMat 
				If LVB13MAT
					nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
					If !lVbs13o3
						cVbAuxMat := aCodFol[181,1]
						//Se não tiver a verba cadastrada, vai gerar na mesma verba do 13. Por isso, considera-se os avos normais + avos de maternidade.
						nVlAuxMat := (nMedPer * nAvosTot ) / 12
					Else
						cVbAuxMat := aCodFol[1651,1]
						//Caso tenha a verba cadastrada, então considera-se apenas os avos de maternidade.
						nVlAuxMat := ((nMedPer / 12) / 30) * nDMatern
					EndIf						
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nVlAuxMat -->  nVlAuxMat := ((nMedPer / 12) / 30) * nDMatern :" + cValToChar(nVlAuxMat),1,2)
					EndIf
				EndIf
				
				nValAux := ((nMedPer * nAvos) / 12) - nVlAuxMat
				
				If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
					If ( nDiasAfas  > 15 )
	                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
	                Else
	                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
	                EndIf
				ElseIf SRA->RA_CATEFD $ '107/108'
					nValAux := ( nValAux / 30 * Diastrab )
                EndIf				
				
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("nValAux -->  ((nMedPer * nAvos) / 12) - nVlAuxMat :" + cValToChar(nValAux),1,2)
				EndIf		

			ENDIF
		Else
			If cTipoRot == "5"
				nAvosTot := nAvos + nAvosMat 
				If LVB13MAT
					nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
					If !lVbs13o3
						cVbAuxMat := aCodFol[181,1]
						nVlAuxMat := ( (nMedPer * nAvosTot ) / nAvosTot ) * nPercentua
					Else
						cVbAuxMat := aCodFol[1653,1]
						nVlAuxMat := ( (nMedPer / 12) / 30 ) * nDMatern * nPercentua
					EndIf						
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nVlAuxMat -->  nVlAuxMat := ( (nMedPer / 12) / 30 ) * nDMatern * nPercentua :" + cValToChar(nVlAuxMat),1,2)
					EndIf
					//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
					If lCompl13
						nVlAuxMat -= fBuscaAcm( cVbAuxMat, Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
					EndIf	
				EndIf
				nValAux := (( nMedPer * nAvos) / nAvos) * nPercentua - nVlAuxMat
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("nValAux -->  (( nMedPer * nAvos) / nAvos) * nPercentua - nVlAuxMat :" + cValToChar(nValAux),1,2)
				EndIf
				//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
				If lCompl13
					nValAux -= fBuscaAcm( cVbAux, Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
				EndIf
			Else
				nAvosTot := nAvos + nAvosMat 
				If LVB13MAT
					nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
					If !lVbs13o3
						cVbAuxMat := aCodFol[181,1]
						nVlAuxMat := (nMedPer * nAvosTot ) / nAvosTot
					Else
						cVbAuxMat := aCodFol[1651,1]
						nVlAuxMat := ((nMedPer / 12) / 30) * nDMatern
					EndIf	
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nVlAuxMat -->  ((nMedPer / 12) / 30) * nDMatern :" + cValToChar(nVlAuxMat),1,2)
					EndIf
				EndIf
				nValAux := ( (nMedPer * nAvos) / nAvos) - nVlAuxMat
				
				If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
					If ( nDiasAfas  > 15 )
	                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
	                Else
	                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
	                EndIf
				ElseIf SRA->RA_CATEFD $ '107/108'
					nValAux := ( nValAux / 30 * Diastrab )
                EndIf
                
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("nValAux -->  ( (nMedPer * nAvos) / nAvos) - nVlAuxMat :" + cValToChar(nValAux),1,2)
				EndIf		
			EndIf
		EndIf     
		//Memória de Cálculo
		If __lMemCalc
			fAddMemLog("VERBA "+cVbAux+" - PAGTO PERIC. SOBRE MEDIAS 13O. : " + cValToChar(nValAux),1,2)
		EndIf	
		FMatriz( cVbAux,nValAux ,,,,, If(cTipoRot == "6", "S", "P") )
		If LVB13MAT
			//Memória de Cálculo
			If __lMemCalc
				fAddMemLog("VERBA "+cVbAuxMat+" - PAGTO PERIC. SOBRE MEDIAS 13O. MAT: " + cValToChar(nVlAuxMat),1,2)
			EndIf	
			FMatriz( cVbAuxMat,nVlAuxMat ,,,,, If(cTipoRot == "6", "S", "P") )
		EndIf
	Endif
	If cMedDir == "N"
		If nMedIns > 0.00 .And. aCodfol[182,1] # Space(3)
			If !lVbs13o3 .Or. cTipoRot == "6" 
				cVbAux := aCodFol[182,1]
			Else
				cVbAux := aCodFol[1650,1]
			EndIf
			If cTipoRot == "5"
				nAvosTot := nAvos + nAvosMat 
				If LVB13MAT
					nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
					If !lVbs13o3
						cVbAuxMat := aCodFol[182,1]
						nVlAuxMat := ( (nMedIns * nAvosTot ) / 12) * nPercentua
					Else
						cVbAuxMat := aCodFol[1654,1]
						nVlAuxMat := ( (nMedIns / 12) / 30) * nDMatern * nPercentua
					EndIf	
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nVlAuxMat -->  ( (nMedIns / 12) / 30) * nDMatern * nPercentua :" + cValToChar(nVlAuxMat),1,2)
					EndIf
					//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
					If lCompl13
						nVlAuxMat -= fBuscaAcm( cVbAuxMat, Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
					EndIf	
				EndIf
				nValAux := ( (nMedIns * nAvos) / 12) * nPercentua - nVlAuxMat
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("nValAux -->  ( (nMedIns * nAvos) / 12) * nPercentua - nVlAuxMat :" + cValToChar(nValAux),1,2)
				EndIf
				//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
				If lCompl13
					nValAux -= fBuscaAcm( cVbAux, Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
				EndIf
			Else
				nAvosTot := nAvos + nAvosMat 
				If LVB13MAT
					nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
					If !lVbs13o3
						cVbAuxMat := aCodFol[182,1]
						nVlAuxMat := (nMedIns * (nAvosMat + nAvos) ) / 12
					Else
						cVbAuxMat := aCodFol[1652,1]
						nVlAuxMat := ((nMedIns / 12) / 30) * nDMatern
					EndIf					
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nVlAuxMat -->  nMedPer * nPercentua :" + cValToChar(nVlAuxMat),1,2)
					EndIf
				EndIf
				nValAux := (nMedIns * nAvos) / 12 - nDMatern
				
				If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
					If ( nDiasAfas  > 15 )
	                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
	                Else
	                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
	                EndIf
				ElseIf SRA->RA_CATEFD $ '107/108'
					nValAux := ( nValAux / 30 * Diastrab )
                EndIf
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("nValAux -->  nMedIns :" + cValToChar(nValAux),1,2)
				EndIf	
			EndIf
			//Memória de Cálculo
			If __lMemCalc
				fAddMemLog("VERBA "+cVbAux+" - PAGTO INSAL. SOBRE MEDIAS 13O. : " + cValToChar(nValAux),1,2)
			EndIf
			FMatriz( cVbAux,nValAux ,,,,, If(cTipoRot == "6", "S", "P") )
			If LVB13MAT
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("VERBA "+cVbAuxMat+" - PAGTO INSAL. SOBRE MEDIAS 13O. MAT: " + cValToChar(nVlAuxMat),1,2)
				EndIf	
				FMatriz( cVbAuxMat,nVlAuxMat ,,,,, If(cTipoRot == "6", "S", "P") )
			EndIf
		Endif
	Else
		If nMedIns > 0.00 .And. aCodfol[182,1] # Space(3)
			If !lVbs13o3 .Or. cTipoRot == "6" 
				cVbAux := aCodFol[182,1]
			Else
				cVbAux := aCodFol[1650,1]
			EndIf
			If cTipoRot == "5" 
				nAvosTot := nAvos + nAvosMat 
				If LVB13MAT
					nDMatern  := fDiasSm13(SubStr(cPeriodo,1,4))
					If !lVbs13o3
						cVbAuxMat := aCodFol[182,1]
						nVlAuxMat := ((nMedIns * (nAvosMat + nAvos)) / (nAvosMat+nAvos)) * nPercentua
					Else
						cVbAuxMat := aCodFol[1654,1]
						nVlAuxMat := ((nMedIns / 12) / 30) * nDMatern * nPercentua
					EndIf	
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nVlAuxMat -->  nVlAuxMat := ((nMedIns / 12) / 30) * nDMatern * nPercentua :" + cValToChar(nVlAuxMat),1,2)
					EndIf
					//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
					If lCompl13
						nVlAuxMat -= fBuscaAcm( cVbAuxMat, Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
					EndIf	
				EndIf
				nValAux := ((nMedIns * nAvos) / nAvos) * nPercentua - nVlAuxMat
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("nValAux -->  ((nMedIns * nAvos) / nAvos) * nPercentua - nVlAuxMat :" + cValToChar(nValAux),1,2)
				EndIf
				//Se for o complemento da 1a parcela, deduz o valor da media que ja foi pago
				If lCompl13
					nValAux -= fBuscaAcm( cVbAux, Nil, sToD( StrZero(Year(dDataRef), 4)+"0101" ), sToD( StrZero(Year(dDataRef), 4)+"1231" ), "V")
				EndIf
			Else
				nAvosTot := nAvos + nAvosMat 
				If LVB13MAT
					nDMatern := fDiasSm13(SubStr(cPeriodo,1,4))
					If !lVbs13o3
						cVbAuxMat := aCodFol[182,1]
						nVlAuxMat := ((nMedIns * (nAvosMat+nAvos)) / (nAvosMat+nAvos))
					Else
						cVbAuxMat := aCodFol[1652,1]
						nVlAuxMat := ((nMedIns / 12) / 30) * nDMatern
					EndIf						
					//Memória de Cálculo
					If __lMemCalc
						fAddMemLog("nVlAuxMat -->  nMedPer * nPercentua :" + cValToChar(nVlAuxMat),1,2)
					EndIf
				EndIf
				nValAux := nMedIns / nAvos - nVlAuxMat
				
				If SRA->RA_TPCONTR == "3" //Se for contrato intermitente, proporciona de acordo com os dias trabalhados
					If ( nDiasAfas  > 15 )
	                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NHORASTRAB + NHORASDSR ) ) ) * ( NHORASTRAB + NHORASDSR )
	                Else
	                    nValAux := ( nValAux / Max( aConvocacao[7] * Max(nDiasC,aConvocacao[5]) , ( NORMAL + DESCANSO ) ) ) * ( NORMAL + DESCANSO )
	                EndIf
				ElseIf SRA->RA_CATEFD $ '107/108'
					nValAux := ( nValAux / 30 * Diastrab )
                EndIf
                
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("nValAux -->  nMedIns :" + cValToChar(nValAux),1,2)
				EndIf	
			EndIf
			//Memória de Cálculo
			If __lMemCalc
				fAddMemLog("VERBA "+cVbAux+" - PAGTO INSAL. SOBRE MEDIAS 13O. : " + cValToChar(nValAux),1,2)
			EndIf
			FMatriz( cVbAux,nValAux ,,,,, If(cTipoRot == "6", "S", "P") )
			If LVB13MAT
				//Memória de Cálculo
				If __lMemCalc
					fAddMemLog("VERBA "+cVbAuxMat+" - PAGTO INSAL. SOBRE MEDIAS 13O. MAT: " + cValToChar(nVlAuxMat),1,2)
				EndIf	
				FMatriz( cVbAuxMat,nVlAuxMat ,,,,, If(cTipoRot == "6", "S", "P") )
			EndIf
		Endif
	EndIf
Endif

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fSubtPensa³ Autor ³ Emerson Rosa de Souza ³ Data ³ 14.03.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Subtrai os valores de pensao do 13§ salario				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fSubtPensao(n13Sal)                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/

Function fSubtPensao(n13Sal)
Local nCntP, nPosP

For nCntP := 1 To Len(aCodBenef)
	nPosP := Ascan(aPd, { |x| x[1] == aCodBenef[nCntP,1] })
	If nPosP > 0 .And. RetValSRV(aPd[nPosP,1],SRA->RA_FILIAL,"RV_TIPOCOD") $ "1*2"
		n13Sal -= aPd[nPosP,5]
	EndIf
Next nCntP

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Grava131 ³ Autor ³ Mauro                 ³ Data ³ 07.03.95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava as Verbas da Matriz Calculadas no 13§ Sal. 1¦ Parcela³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Grava131(X)                                                ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ X =  Matriz Multi contendo                                 ³±±
±±³          ³ Codigo da Verba , C.Custo, cSemana, Horas , Valor , Tipo1,;³±±
±±³          ³ Tipo2 , Parcela                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/

Function Grava131(aX) 
Local lItemClVl   := GetMvRH( "MV_ITMCLVL", .F., "2" ) $ "1*3"
			
	If lItemClVl
   		GravaSrc(SRA->RA_FILIAL,SRA->RA_MAT,aX[1],If(!Empty(aX[10]),aX[10],dDATA_PGTO),;
		aX[2],cSemana,aX[6],aX[7],aX[4],aX[5],aX[8],aX[9],,,,aX[13],aX[14],,aX[20],aX[21],aX[15],Nil,Nil,Nil,aX[23],aX[24])
	Else
		GravaSrc(SRA->RA_FILIAL,SRA->RA_MAT,aX[1],If(!Empty(aX[10]),aX[10],dDATA_PGTO),;
		aX[2],cSemana,aX[6],aX[7],aX[4],aX[5],aX[8],aX[9],,,,,,,aX[20],aX[21],aX[15],Nil,Nil,Nil,aX[23],aX[24])
	EndIf
			
Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GravaFol ³ Autor ³ Mauro                 ³ Data ³ 29.05.95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava as Verbas da Matriz Calculadas na 2¦ Parcela do 13§  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Grava132(X)                                                ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ X =  Matriz Multi contendo                                 ³±±
±±³          ³ Codigo da Verba , C.Custo, cSemana, Horas , Valor , Tipo1,;³±±
±±³          ³ Tipo2 , Parcela                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±/*/

Function Grava132(aX)
Local lItemClVl   := GetMvRH( "MV_ITMCLVL", .F., "2" ) $ "1*3"

	If lItemClVl
		GravaSrc(SRA->RA_FILIAL,SRA->RA_MAT,aX[1],If(!Empty(aX[10]),aX[10],dData_Pgto),aX[2],;
		cSemana,aX[6],aX[7],aX[4],aX[5],aX[8],aX[9],,aX[11],aX[12],aX[13],aX[14],If(Len(aX)>= 17,aX[17],''),aX[20],aX[21],aX[15],aX[18],Nil,Nil,aX[23],aX[24])
	Else
		GravaSrc(SRA->RA_FILIAL,SRA->RA_MAT,aX[1],If(!eMPTY(aX[10]),aX[10],dData_Pgto),aX[2],;
		cSemana,aX[6],aX[7],aX[4],aX[5],aX[8],aX[9], ,aX[11],aX[12],,,If(Len(aX)>= 17,aX[17],''),aX[20],aX[21],aX[15],aX[18],Nil,Nil,aX[23],aX[24])
	EndIf			
      
Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³fAvos13	³ Autor ³ Mauro				    ³ Data ³ 25/05/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retornar Numero de Avos de um Periodo Verificando se		  ³±±
±±³			 ³Periodo no mes for Superior a 15 Dias Trabalhados			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fAvos13(nAvosC,dDataLim)									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function fAvos13(nAvosC,dDatalim,nAvosFal,nFalMes,cTipo,dDtBase,dDtIniCalc,lSubFal)
Local   nAuxDia		:= 0
DEFAULT cTipo		:= ""
DEFAULT dDtBase		:= dDataAte
DEFAULT dDataLim	:= dDataAte
DEFAULT nFalMes		:= 0
DEFAULT nAvosFal	:= 0
DEFAULT lSubFal     := .F.

nAvosC		:= 0

//Se for cálculo de primeira parcela, o ano de admissão for menor que o ano de cálculo (data de referência)
//e a pergunta sobre a data de referência indicar que a data deve ser considerada apenas para admitidos no ano, altera referência para o último dia do ano.
If cTipoRot == "5" .and. Year(SRA->RA_ADMISSA) < Year(dDataLim) .and. Len(aPergunte) >= 9 .and. aPergunte[9,3] == 2
	dDataLim := CtoD("31/12/"+StrZero(Year(dDataLim),4))
EndIf

If Year(SRA->RA_ADMISSA) = Year(dDatalim) .OR. Year(SRA->RA_ADMISSA) == Year(dDtBase)
	dDtIni := SRA->RA_ADMISSA
ElseIf Year(SRA->RA_ADMISSA) < Year(dDatalim)
	dDtIni := Ctod("01/01/"+StrZero(Year(dDatalim),4), "DDMMYY")
Else
	dDtIni := Ctod("  /  /    ")
EndIf

If dDtIniCalc != Nil .AND. !Empty( dDtIniCalc )
	dDtIni := dDtIniCalc
EndIf

If ! Empty(dDtIni)
	If Year(dDataLim) > Year(dDtBase)
		nAvosC := 13 - Month(dDtIni) + Month(dDataLim)
	Else  //--If Year(dDataLim) = Year(dDtBase)
		If Year(SRA->RA_ADMISSA) < Year(dDatalim) .AND. !Empty(cTipo)
			nAvosC := (Month(dDataLim) - Month(dDtIni) ) + 1
			//--Quando For 1o. Parc. e Admitido em Janeiro
		ElseIf cTipo == "1"
			nAvosC := (Month(dDataLim) - Month(dDtIni) ) + 1
		Else
			nAvosC := (Month(dDataLim) - Month(dDtIni) ) + 1
			If MesAno(dDataLim) == MesAno(dDtIni) .AND. (dDataLim - dDtini)+1 < 15
				nAvosC --
			EndIf
		EndIf
	EndIf
	//Se o Mes/Ano da Data Limite for igual ao Mes/Ano da Admissao
	If MesAno( dDataLim ) == MesAno( dDtIni )
		If ( ( Day(dDatalim) - Day(dDtIni) ) ) + 1 < 15
			nAvosC --
		ElseIf ( ( Day(dDatalim) - Day(dDtIni) ) - nFalMes ) + 1 < 15
			nAvosC --
			nDescFal ++
		EndIf
	Else
		//Verifica se tem 15 dias trabalhados no mes
		If Day(dDatalim ) < 15
			nAvosC --
		ElseIf cTipoRot == "4" .and. nAvosFal == 0 .and. nDescFal == 0 .and. lSubFal .and. Day(dDatalim ) - nFalMes < 15
			nAvosC --
		EndIf

		If (F_ULTDIA(dDtIni)  - Day(dDtIni) ) + 1 < 15
			nAvosC --
		EndIf
		
		//-Tratamento para Gestao Publica
		If cTipoRot == "4" .And. SRA->RA_REGIME == '2' .And. ExistFunc("fUsaGFP") .and. fUsaGFP() // Modulo Gestao de Folha Publica 
			If Year(dDatalim)=Year(SRA->RA_ADMISSA)
				nAuxDia := (F_ULTDIA(SRA->RA_ADMISSA) - Day(SRA->RA_ADMISSA) ) + 1
				If nAuxDia >= 15
					nAvosC ++
				EndIf
			EndIf
		EndIf	
	EndIf
	nAvosC -= nAvosFal
	nAvosC := If (nAvosC < 0 , 0 , nAvosC)
	
	If nDescFal > 0 .and. (cTipoRot=="4" .And. ! lMesAtu )
		nAvosFal := nDescFal
	EndIf
EndIf

Return

/*/{Protheus.doc} fAvos13Des
Para os casos em que a empresa saiu ou entrou na desoneração durante o ano,
faz a verificaçao dos avos e faz a geração das verbas de início ou final da desoneração
Id's 991 ou 1385
@type function
 
@author Claudinei Ribeiro Soares
@since 23/11/2016
@version P12.01.07

@param  
@return nil
/*/
Function fAvos13Des()

Local cTpC		:= ""
Local cOneFol	:= ""
Local cRecFatEmp:= ""
Local cDesFol	:= GetMvRH("MV_DESFOL",.F.,"")

Local nVal019   := 0
Local nPos019	:= 0
Local nVal020	:= 0
Local nPos020	:= 0
Local nUltDOne	:= 0
Local nAvosOne	:= 0
Local nAvosF13O	:= 0
Local nAvosAfO	:= 0
Local nVal13One	:= 0
Local nAvosDes	:= 0
Local nAvosF13D	:= 0
Local nAvosAfD	:= 0
Local nVal13Des	:= 0

Local dDataDes	:= CTOD("//")
Local dDataOne	:= CTOD("//")

Local aAfastO	:= {}
Local aAfastD	:= {}

// Carrega o mnemonico P_FDESFOL (Última data da empresa na desoneração)
SetMnemonicos(xFilial("RCA"),NIL,.T.,"P_FDESFOL")
cOneFol := If(Type("P_FDESFOL") # "U", P_FDESFOL, "")

// Verifica o tipo de contrato
If SRA->RA_TPCONTR $ " *1*3"
	cTpC  := "1"
Else	
	cTpC  := "2"
EndIf

cRecFatEmp 	:= aInssEmp[27, Val(cTpc)]//Busca o Tipo de desoneração da tabela S037 - ENCARGOS EMPRESA, campo Recolhe S/Fatur.

If (!cRecFatEmp $ "S*M*C") .And. Substr( cOneFol, 1, 4 ) == cValToChar( Year( dDataRef ) ) .And. cOneFol <= AnoMes( dDataRef )
	dDataOne := cToD( "01/" + SubStr( cOneFol, 5, 2 ) + "/" + SubStr( cOneFol, 1, 4 ) )
	nUltDOne := F_ULTDIA(dDataOne)
	dDataOne := cToD( Str(nUltDOne,2) + "/" + SubStr( cOneFol, 5, 2 ) + "/" + SubStr( cOneFol, 1, 4 ) )					
	fAvos13(@nAvosOne,dDataOne,@nAvosF13O,0,,dDataRef)
	fRetAfas(dDtPesq1,dDataOne,If(cAbatAfas == "S","1*6*7*B*O*P*Q*R*X",cAbatAfas),@nAvosAfO,,@aAfastO)
	nAvosOne  := Max( nAvosOne - nAvosAfO, 0 ) //Abater Afastamentos	
	//Reinicializa variaveis
	nVal019   := 0
	nVal020	  := 0
	//Busca o valor da base de 13o.
	nPos019	  := aScan( aPd, { |x| x[1] = aCodFol[019,1] } )
	nPos020	  := aScan( aPd, { |x| x[1] = aCodFol[020,1] } )
	//Base Inss Ate Lim p/ 13o. Sal.
	If nPos019 > 0
		nVal019 := aPd[nPos019, 5]
	EndIf
	//Base Inss Aci Lim p/ 13o. Sal.
	If nPos020 > 0
		nVal020 := aPd[nPos020, 5]
	EndIf
	nVal13One := ( nVal019 + nVal020 ) / nAvos * nAvosOne
	fMatriz(aCodfol[1385,1],Round(nVal13One,2),Int(nAvosOne)+0.12, , ,"V","S")
ElseIf cRecFatEmp $ "S*M*C" .And. Substr( cDesFol, 1, 4 ) == cValToChar( Year( dDataRef ) ) .And. cDesFol <= AnoMes( dDataRef )
	dDataDes  := cToD( "01/" + SubStr( cDesFol, 5, 2 ) + "/" + SubStr( cDesFol, 1, 4 ) )	
	fAvos13(@nAvosDes,dDataDes,@nAvosF13D,0,,dDataRef)
	fRetAfas(dDtPesq1,dDataDes,If(cAbatAfas == "S","1*6*7*B*O*P*Q*R*X",cAbatAfas),@nAvosAfD,,@aAfastD)
	nAvosDes  := Max( nAvosDes - nAvosAfD, 0 ) //Abater Afastamentos	
	//Reinicializa variaveis
	nVal019   := 0
	nVal020	  := 0
	//Busca o valor da base de 13o.
	nPos019	  := aScan( aPd, { |x| x[1] = aCodFol[019,1] } )
	nPos020	  := aScan( aPd, { |x| x[1] = aCodFol[020,1] } )
	//Base Inss Ate Lim p/ 13o. Sal.
	If nPos019 > 0
		nVal019 := aPd[nPos019, 5]
	EndIf
	//Base Inss Aci Lim p/ 13o. Sal.
	If nPos020 > 0
		nVal020 := aPd[nPos020, 5]
	EndIf
	nVal13Des := ( nVal019 + nVal020 ) / nAvos * nAvosDes
	fMatriz(aCodfol[991,1],Round(nVal13Des,2),Int(nAvosDes)+0.12, , ,"V","S")
EndIf
Return Nil

/*{Protheus.doc} fBusMed132

Funcao de busca das verbas de medias do roteiro 132 na tabela SRD
 
@author Allyson Mesashi
@since 19/04/2017
@version P12 R7
@Return lTemMedia Retorna se existe a verba de media calculada
*/
Static Function fBusMed132()

Local aArea 		:= GetArea()
Local cAliasSRD	:= "RDDISS132"
Local lTemMedia	:= .F.

If !(cPaisLoc == "BRA" .And. SRA->RA_CATEFD $ "107/108")
	cWhere	 :=	"% SRD.RD_FILIAL = '" + SRA->RA_FILIAL + "' AND SRD.RD_DATARQ = '" + cPeriodo + "' AND " +;
				" SRD.RD_ROTEIR = '132' AND SRD.RD_PD IN ('" + aCodFol[123,1] + "','" + aCodFol[124,1] + "') %"

	BeginSql alias cAliasSRD
		SELECT *
		FROM %table:SRD% SRD 
		WHERE %exp:cWhere% AND 
			SRD.%notDel%
	EndSql

	If ( cAliasSRD )->( !Eof() )
		lTemMedia := .T.
	EndIf

	(cAliasSRD)->( dbCloseArea() )
Else
	lTemMedia := .T.
EndIf

RestArea( aArea )

Return lTemMedia

/*{Protheus.doc} fTem132

Funcção que verifica se ja foi pago 2 parcela para esse funcionario
 
@author Flavio Correa
@since 13/12/2017
@version P12 
*/
Function fTem132()
Local aArea 		:= GetArea()
Local aTransf		:= {}
Local aQryIn		:= {}
Local cAliasSRD		:= ""
Local cNameDB		:= Upper(TcGetDb())
Local cQuery        := ""
Local nX			:= 0
Local lTem132		:= .F.
Local lDiss         := Type("lDissidio") <> "U" .And. lDissidio
Local lCompl13 		:= (P_CCOMP13 = 'S' .And. cTipoRot == '6' .And. lCalcFol)

Static __oSt1
Static __cEmpAux
Static __cChave		:= "" //Tratamento para performance
Static __lResult

If !lDiss .and. !lCompl13
	If __cChave == SRA->RA_FILIAL + SRA->RA_MAT + cPeriodo
		lTem132 := __lResult

	Else

		cAliasSRD		:= GetNextAlias()

		If __oSt1 == Nil .or. ( __cEmpAux == Nil .or. __cEmpAux <> cEmpAnt )

			__cEmpAux := cEmpAnt
			
			__oSt1 := FWPreparedStatement():New()

			cQuery := "SELECT COUNT(*) AS CONTADOR FROM " + RetSqlName('SRD') + " WHERE "
			If ( cNameDB $ "DB2_ORACLE_INFORMIX_POSTGRES" )
				cQuery	 +=	" CONCAT(RD_FILIAL, RD_MAT) IN (?) AND "
			Else
				cQuery	 +=	" RD_FILIAL + RD_MAT IN (?) AND "
			EndIf
			cQuery += "RD_ROTEIR = '" + fGetCalcRot("6") + "' AND "
			cQuery += "RD_PERIODO >= ? AND "
			cQuery += "RD_PERIODO <= ? AND "
			cQuery += "D_E_L_E_T_ = ' ' "
			
			cQuery := ChangeQuery(cQuery)
			
			__oSt1:SetQuery(cQuery)

		EndIf

		If fTransf(@aTransf, .T.) //Busca todas as transferências do funcionário
			aAdd(aQryIn, SRA->RA_FILIAL + SRA->RA_MAT)
			For nX := 1 To Len(aTransf)
				If Year(aTransf[nX,7]) == Year(dDataDe) .and. aTransf[nX,2] <> aTransf[nX,5]//Se houve transferência de filial ou matrícula este ano, busca na origem
					aAdd(aQryIn, aTransf[nX,2])
				EndIf
			Next nX
		Else
			aAdd(aQryIn, SRA->RA_FILIAL + SRA->RA_MAT)
		EndIf

		__oSt1:SetIn(1,aQryIn)
		__oSt1:SetString(2,SubStr(cPeriodo,1,4)+"01")
		__oSt1:SetString(3,SubStr(cPeriodo,1,4)+"12")

		cQuery := __oSt1:getFixQuery()

		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSRD)

		If ( cAliasSRD )->( !Eof() )
			If ( cAliasSRD )->CONTADOR > 0
				lTem132 := .T.
			EndIf
		EndIf

		__cChave  := SRA->RA_FILIAL + SRA->RA_MAT + cPeriodo
		__lResult := lTem132

		(cAliasSRD)->( dbCloseArea() )

		RestArea( aArea )

	EndIf

EndIf

Return lTem132

/*/{Protheus.doc}fQuebAd131
Verifica se a primeira parcela foi paga com separação dos Id's dos adicionais
@author gabriel.almeida
@since 22/11/2018
@version P12
/*/
Function fQuebAd131(cFil,cMat,cPer)
	Local aArea     := GetArea()
	Local aTransf	:= {}
	Local cAliasSRD := GetNextAlias()
	Local cWhereSRC	:= ""
	Local cWhereSRD	:= ""
	Local cPerAux	:= ""
	Local cNameDB	:= Upper(TcGetDb())
	Local lAchouId  := .F.
	Local lAchou13	:= .F.
	Local lAchouFer := .F.
	Local cId13		:= aCodFol[0022,1]
	Local cIdsADI   := aCodFol[1288,1] + "/" + aCodFol[1289,1] + "/" + aCodFol[1290,1] + "/" + aCodFol[1291,1] + "/" + aCodFol[1292,1] + "/" +;
					   aCodFol[1293,1] + "/" + aCodFol[1294,1] + "/" + aCodFol[1295,1] + "/" + aCodFol[1628,1] + "/" + aCodFol[1629,1] + "/" +;
					   aCodFol[1630,1] + "/" + aCodFol[1631,1] + "/" + aCodFol[1632,1] + "/" + aCodFol[1633,1] + "/" + aCodFol[1634,1] + "/" +;
					   aCodFol[1635,1] + "/" + aCodFol[1636,1] + "/" + aCodFol[1637,1]
	Local nX		:= 0
	Local nTotADI   := NADTSERV + NPERIC + NINSALUB + NADCCONF + NADCTRF

	DEFAULT cFil := SRA->RA_FILIAL
	DEFAULT cMat := SRA->RA_MAT
	DEFAULT cPer := cPeriodo

	If nTotADI > 0 //Melhoria de performance
	
		If fTransf(@aTransf, .T.) //Busca todas as transferências do funcionário
			If ( cNameDB $ "DB2_ORACLE_INFORMIX_POSTGRES" )
				cWhereSRD	 :=	"% CONCAT(SRD.RD_FILIAL, SRD.RD_MAT) IN ('" + SRA->RA_FILIAL + SRA->RA_MAT + "'"
				cWhereSRC	 :=	"% CONCAT(SRC.RC_FILIAL, SRC.RC_MAT) IN ('" + SRA->RA_FILIAL + SRA->RA_MAT + "'"
			Else
				cWhereSRD	 :=	"% SRD.RD_FILIAL + SRD.RD_MAT IN ('" + SRA->RA_FILIAL + SRA->RA_MAT + "'"
				cWhereSRC	 :=	"% SRC.RC_FILIAL + SRC.RC_MAT IN ('" + SRA->RA_FILIAL + SRA->RA_MAT + "'"
			EndIf
			For nX := 1 To Len(aTransf)
				If Year(aTransf[nX,7]) == Year(dDataDe) .and. aTransf[nX,2] <> aTransf[nX,5]//Se houve transferência de filial ou matrícula este ano, busca na origem
					cWhereSRD	 +=	",'" + aTransf[nX,2] + "'"
					cWhereSRC	 +=	",'" + aTransf[nX,2] + "'"
				EndIf
			Next nX
			cWhereSRD	 +=	") %"
			cWhereSRC	 +=	") %"
		Else
			cWhereSRD	 :=	"% SRD.RD_FILIAL = '" + SRA->RA_FILIAL + "' AND SRD.RD_MAT = '" + SRA->RA_MAT + "' %"
			cWhereSRC	 :=	"% SRC.RC_FILIAL = '" + SRA->RA_FILIAL + "' AND SRC.RC_MAT = '" + SRA->RA_MAT + "' %"
		EndIf
		
		BeginSql Alias cAliasSRD
			SELECT RD_PD, RD_TIPO2, RD_ROTEIR, RD_PERIODO
			FROM %Table:SRD% SRD
			WHERE %exp:cWhereSRD% 
			AND ( SRD.RD_ROTEIR = %Exp:fGetCalcRot('5')% OR ( SRD.RD_ROTEIR = %Exp:fGetCalcRot('1')% AND SRD.RD_TIPO2 IN ('K','I') ) )
			AND SRD.RD_PERIODO >= %Exp:SubStr(cPer,1,4)+"01"% AND SRD.RD_PERIODO < %Exp:cPer%
			AND SRD.%NotDel%
			UNION ALL
			SELECT RC_PD RD_PD, RC_TIPO2 RD_TIPO2, RC_ROTEIR RD_ROTEIR, RC_PERIODO RD_PERIODO
			FROM %Table:SRC% SRC
			WHERE %exp:cWhereSRC%
			AND SRC.RC_ROTEIR = %Exp:fGetCalcRot('1')% AND SRC.RC_TIPO2 IN ('K','I')
			AND SRC.%NotDel%
			ORDER BY RD_ROTEIR
		EndSql

		If ( cAliasSRD )->( !Eof() )
			While ( cAliasSRD )->( !Eof() )
				If ( cAliasSRD )->(RD_PD) $ cIdsADI
					lAchouId := .T.
					lAchou13 := .T.
					Exit
				EndIf
				If ( cAliasSRD )->(RD_PD) == cId13 
					lAchou13 := .T.
					lAchouId := .F.
					cPerAux  := ( cAliasSRD )->( RD_PERIODO )
					If ( cAliasSRD )->( RD_TIPO2 ) == 'K' //Se houve pagamento de 13º nas férias, não separa adicionais, pois nas férias as verbas não são geradas
						lAchouFer := .T.
						Exit
					EndIf
				EndIf
				( cAliasSRD )->(DbSkip())
			EndDo
			If !lAchou13 //Se não houve pagamento de 13º separa os adicionais
				lAchouId := .T.
			EndIf
		Else
			//Se não existir cálculo de 13º no ano, irá dividir os ID's normalmente.
			lAchouId := .T.
		EndIf
		If lAchou13 .and. !lAchouId .and. !lAchouFer .and. fBusAdiHist(cPerAux)
			//Se o adicional foi incluído após o cálculo da primeira parcela, separa os adicionais
			lAchouId := .T.
		EndIf
		
		(cAliasSRD)->( DbCloseArea() )

		If !Empty(SRA->RA_FECREI) .and. Year(SRA->RA_FECREI) == Year(dDataRef) //Se foi reintegração, não separa os adicionais
			lAchouId := .F.
		EndIf
	
	EndIf	

	RestArea(aArea)
	
Return lAchouId

/*/{Protheus.doc} fBusAdiHist
//Verifica se adicionais começaram a ser pagos após o cálculo da primeira parcela de 13º salário
@author Leandro Drumond
@since 03/11/2021
/*/
Static Function fBusAdiHist(cPer131)
Local lRet 		:= .F.

SR9->(DbSetOrder(1))
If SR9->( dbSeek( SRA->RA_FILIAL + SRA->RA_MAT ))
	While SR9->( !EOF() .and. SRA->RA_FILIAL + SRA->RA_MAT  == R9_FILIAL + R9_MAT )
		If AllTrim(SR9->R9_CAMPO) $ "RA_ADCCONF*RA_ADCTRF*RA_PERICUL*RA_INSMAX"
			If AnoMes(SR9->R9_DATA) <= cPer131 .and. Val(SR9->R9_DESC) > 0
				lRet := .F. //Se já era pago adicionais, e não foi encotnrado os novos ID's, irá efetuar o cálculo sem separar as verbas
				Exit
			Else
				lRet := .T.
			EndIf
		EndIf	
		SR9->( dbSkip() )
	EndDo
EndIf

Return lRet

/*/{Protheus.doc} fTemInterm
//Verifica se houve pagamento de contrato intermitente para o funcionário no ano
@author Leandro Drumond
@since 17/09/2021
/*/
Static Function fTemInterm()
Local lRet		:= .F.

DbSelectArea("SV7")
DbSetOrder(1)
	
If DbSeek(SRA->RA_FILIAL + SRA->RA_MAT)
	While SV7->(!Eof() .and. V7_FILIAL + V7_MAT == SRA->RA_FILIAL + SRA->RA_MAT)
		If cValToChar(Year(SV7->V7_DTINI)) == SubStr(cPeriodo,1,4) .or. cValToChar(Year(SV7->V7_DTFIM)) == SubStr(cPeriodo,1,4)
			lRet := .T.
			Exit
		EndIf
		SV7->(DbSkip())
	EndDo
EndIf

Return lRet
