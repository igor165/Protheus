#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWADAPTEREAI.CH"
#INCLUDE "GPEY240.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³GPEY240º   Autor ³Flavio COrrea  		 º Data ³  02/07/2014 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Recebe range de datas e retorna Situação dos funcionarios   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSintaxe   ³Exp1 => Variavel com conteudo xml para envio/recebimento.   º±±
±±º          ³Exp2 => Tipo de transacao. (Envio/Recebimento)              º±±
±±º          ³Exp3 => Tipo de mensagem. (Business Type, WhoIs, etc)       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function GPEY240(cXML, nTypeTrans, cTypeMessage, cVersao)

Local	aMessages	:= {}
Local	cError		:= ""
Local	cWarning	:= ""
Local	cXmlRet		:= ""
Local	dDtIni		:= CToD("")
Local	dDtFim		:= CToD("")
Local	cMatIni		:= ""
Local	cMatFim		:= ""
Local	lReturn		:= .T.
Local   cFilXML		:= ""
Local	cMsgRet		:= ""

Default cVersao        := "1.000"

If nTypeTrans == TRANS_RECEIVE
	If cTypeMessage == EAI_MESSAGE_BUSINESS
		// Faz o parse do xml em um objeto
		oXml := XmlParser(cXml, "_", @cError, @cWarning)

		// Se não houve erros
		If oXml != Nil .And. Empty(cError) .And. Empty(cWarning)
							
			If Type("OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_STARTDATE:TEXT") == "U" .Or.;
				Empty(OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_STARTDATE:TEXT)
				lReturn	:= .F.
				cMsgRet := STR0001
				AAdd(aMessages, {cMsgRet, 1, "002"})
			Else
				dDtIni	:= SToD(StrTran(OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_STARTDATE:TEXT, "-"))
			EndIf
			
			If Type("OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_FINISHDATE:TEXT") == "U" .Or.;
				Empty(OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_FINISHDATE:TEXT)
				lReturn	:= .F.
				cMsgRet := STR0002
				AAdd(aMessages, {cMsgRet, 1, "003"})
			Else
				dDtFim	:= SToD(StrTran(OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_FINISHDATE:TEXT, "-"))
			EndIf                                     
			        
			If Type("OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_BranchId:TEXT") == "U" .Or.;
				Empty(OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_BranchId:TEXT)
				lReturn	:= .F.
				cMsgRet := STR0003
				AAdd(aMessages, {cMsgRet, 1, "005"})
			Else
				cFilXML	:= OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_BranchId:TEXT
			EndIf
			        

			If Type("OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_StartEmployeeCode:TEXT") != "U"
				cMatIni	:= OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_StartEmployeeCode:TEXT
			EndIf

			If Type("OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_FinishEmployeeCode:TEXT") != "U" 
				cMatFim	:= OXML:_TOTVSMESSAGE:_BUSINESSMESSAGE:_BUSINESSCONTENT:_RequestEmployeeSituations:_FinishEmployeeCode:TEXT
			EndIf

			If lReturn
				cXMLRet := Y240XML(dDtIni, dDtFim, cFilXML,cMatIni,cMatFim)
				If Empty(cXMLRet)
					cMsgRet := STR0004
					AAdd(aMessages, {cMsgRet, 1, "004"})
					cXMLRet := FWEAILOfMessages( aMessages )	
				EndIf
			Else
				cXMLRet := FWEAILOfMessages( aMessages )	
			EndIf
			
		EndIf
	ElseIf cTypeMessage == EAI_MESSAGE_WHOIS
		cXMLRet := cVersao
	EndIf
EndIf  

Return{lReturn, EncodeUTF8(cXMLRet)}
  
Static Function Y240TIPO(cTipo,nOrigem)
Local cAux := " "
Local aTipoXml := {"1","2","3","4","5","6","7","8","9","10"}
Local aTipo := {" ","A","TE","TS","F","D","7","8","9","D"}
Local nPos := 0
//nOrigem=1=XML,2=Protheus

If nOrigem == 1
	nPos := Ascan(aTipoXml,{|x| Alltrim(x)==Alltrim(cTipo)})
	If nPos > 0 
		cAux := aTipo[nPos]
	EndIf
Else
	If !(cTipo $ (" /F/D/A"))
		cTipo := "A"
	EndIf
	nPos := Ascan(aTipo,{|x| Alltrim(x)==alltrim(cTipo)})
	If nPos > 0 
		cAux := aTipoXml[nPos]
	EndIf
EndIf


Return cAux

Static Function Y240TIPO1(cTipo,cVerba)
Local cAux := "1"
Local aTipoXml := { "2", "3", "4", "4", "4", "4","6","8"}
Local aTipo :=    {"P1","O1","Q1","Q4","Q5","Q6","R","X2"}
Local nPos := 0

If cAux == "1" .And. cVerba == aCodFol[103,1] //Licença Remunerada
	cAux := "7"
Endif

nPos := Ascan(aTipo,{|x| Alltrim(x)==alltrim(cTipo)})
If nPos > 0 
	cAux := aTipoXml[nPos]
EndIf

Return cAux

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³Y240TIPO2º    Autor ³Christiane Vieira º Data ³  02/12/2014 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³De/Para do campo Situation Code                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSintaxe   ³cTipo => Código SEFIP - Protheus V12                        º±±
±±º          ³cVerb => Código Verba                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Y240TIPO2(cTipo, cVerba)
Local cAux := "A"
Local aTipoXml := {"P",  "O", "Q", "B", "6", "7","R","X"}
Local aTipo :=    {"P1","O1","Q1","Q4","Q5","Q6","R","X"}
Local nPos := 0

If cAux == "A" .And. cVerba == aCodFol[103,1] //Licença Remunerada
	cAux := "8"
Endif

nPos := Ascan(aTipo,{|x| Alltrim(x)==alltrim(cTipo)})
If nPos > 0 
	cAux := aTipoXml[nPos]
EndIf

Return cAux

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³Y240XMLº   Autor ³Flavio COrrea  		 º Data ³  02/07/2014 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Busca informações de historico situação para Mensagem Unica º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSintaxe   ³Exp1 => Variavel com conteudo xml para envio/recebimento.   º±±
±±º          ³Exp2 => Tipo de transacao. (Envio/Recebimento)              º±±
±±º          ³Exp3 => Tipo de mensagem. (Business Type, WhoIs, etc)       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Y240XML(dStart, dFinish,cFilXML,cMatIni,cMatFim)
Local aArea 		:= GetArea()
Local cXmlRet		:= ""
Local nI			:= 1
Local nJ			:= 1
Local aRet			:= {}
Local aAfast		:= {}
Local cAliasTmp		:= GetNextAlias()
Local cWhere		:= "% %"

Private aCodFol		:= {}

DEFAULT cMatIni 	:= ""
DEFAULT cMatFim 	:= ""

If !FP_CodFol( @aCodFol , xFilial("SRV"))
	aCodFol := {}
EndIf

If !Empty(cMatIni) .And. !Empty(cMatFim)
	cWhere := "% AND SRA.RA_MAT BETWEEN '"+cMatIni+"' AND '" +cMatFim +"' %"
EndIf

BeginSql alias cAliasTmp
SELECT DISTINCT RA_FILIAL,RA_MAT,RA_CC
 FROM %table:SRA% SRA
  LEFT JOIN %table:SR8% SR8 ON R8_FILIAL=RA_FILIAL AND RA_MAT = R8_MAT AND SR8.%notDel% and
	SR8.R8_DATAINI >= RA_ADMISSA AND 
	( ( SR8.R8_DATAINI >= %exp:DtoS(dStart)% AND SR8.R8_DATAINI <= %exp:DtoS(dFinish)% ) OR 
 	( SR8.R8_DATAFIM >= %exp:DtoS(dStart)% AND SR8.R8_DATAFIM <= %exp:DtoS(dFinish)% ) OR 
	( SR8.R8_DATAINI <= %exp:DtoS(dStart)% AND SR8.R8_DATAFIM >= %exp:DtoS(dFinish)% ) OR
 	( SR8.R8_DATAFIM = %exp:''%  AND SR8.R8_DATAINI <= %exp:DtoS(dFinish)%) )
 LEFT JOIN %table:SRG% SRG ON RG_FILIAL=RA_FILIAL AND RA_MAT = RG_MAT AND SRG.%notDel% AND SRG.RG_DATADEM BETWEEN %exp:DtoS(dStart)% AND %exp:DtoS(dFinish)%
 LEFT JOIN %table:SRE% SRE ON RE_FILIALD=RA_FILIAL AND RA_MAT = RE_MATD AND SRE.%notDel% AND SRE.RE_DATA BETWEEN %exp:DtoS(dStart)% AND %exp:DtoS(dFinish)%
 WHERE 
 RA_FILIAL = %exp:cFilXML%
 AND SRA.%notDel%
 %exp:cWhere% 
 and (R8_DATA <> %exp:''% or RG_DATADEM <> %exp:''% or RE_DATA <> %exp:''%)
 ORDER BY RA_FILIAL,RA_MAT
EndSql

(cAliasTmp)->(dbGotop())

While !(cAliasTmp)->(Eof())
	aAfast := {}
	aAfast := RetSituacao( (cAliasTmp)->RA_FILIAL , (cAliasTmp)->RA_MAT, dStart,dFinish)
	If Len(aAfast) > 0
		Aadd(aRet,{ (cAliasTmp)->RA_FILIAL, (cAliasTmp)->RA_MAT,aAfast,(cAliasTmp)->RA_CC})
	EndIf
	(cAliasTmp)->(dbSkip())
EndDo
(cAliasTmp)->(dbCloseArea())

If Len(aRet) > 0
	cXmlRet += "  <ReturnEmployeeSituations>"
	cXmlRet += "    <ListOfEmployeeSituations>"
	For nI := 1 To Len(aRet)
		cXmlRet += "      <Employee>"
		cXmlRet += "        <CompanyId>"+cEmpAnt+"</CompanyId>"
		cXmlRet += "        <BranchId>"+aRet[nI][01]+"</BranchId>"
		cXmlRet += "        <InternalId>" + cEmpAnt + '|' + aRet[nI][01] + '|' + aRet[nI][02] +"</InternalId>"
		cXmlRet += "        <EmployeeCode>"+aRet[nI][02]+"</EmployeeCode>"
		cXmlRet += "        <WorkCenterCode>"+aRet[nI][04]+"</WorkCenterCode>"
		cXmlRet += "        <SiteCode></SiteCode>"
		cXmlRet += "        <ListOfSituation>"
		For nJ := 1 To Len(aRet[nI][3])
			cXmlRet += "          <Situation>"
			cXmlRet += "            <CommencementDate>"+Transform( DToS( aRet[nI][03][nJ][01] ), "@R 9999-99-99")+"</CommencementDate>"
			cXmlRet += "            <SituationLastDay>"+Transform( DToS( aRet[nI][03][nJ][02] ), "@R 9999-99-99")+"</SituationLastDay>"
			cXmlRet += "            <INSSPaymentCommencement></INSSPaymentCommencement>"
			cXmlRet += "            <OriginSituation>2</OriginSituation>"
			cXmlRet += "            <SituationDay>"+alltochar(aRet[nI][03][nJ][11])+"</SituationDay>"
			cXmlRet += "            <SituationTime></SituationTime>"
			cXmlRet += "            <SituationScheduleEnd></SituationScheduleEnd>"
			cXmlRet += "            <CIDCode></CIDCode>"
			cXmlRet += "            <CommencementSchedule></CommencementSchedule>"
			cXmlRet += "            <SituationInformation>"
			IF aRet[nI][03][nJ][04] == "A" //Para afastamento, converter o SituationCode
				cXmlRet += "              <SituationCode>"+Y240TIPO2(aRet[nI][03][nJ][19],aRet[nI][03][nJ][12] )+"</SituationCode>"						
			Else				
				cXmlRet += "              <SituationCode>"+aRet[nI][03][nJ][04]+"</SituationCode>"
			Endif
			cXmlRet += "              <SituationMeaning>"+Y240TIPO(aRet[nI][03][nJ][04],2)+"</SituationMeaning>"
			IF aRet[nI][03][nJ][04] == "A" //Para afastamento, pegar o Código da SEFIP
				cXmlRet += "              <AbsenteeismType>"+Y240TIPO1(aRet[nI][03][nJ][19],aRet[nI][03][nJ][12])+"</AbsenteeismType>"
			Else
				cXmlRet += "              <AbsenteeismType>"+" "+"</AbsenteeismType>"
			Endif
			cXmlRet += "            </SituationInformation>"
			cXmlRet += "          </Situation>"
		Next nJ
		cXmlRet += "        </ListOfSituation>"
		cXmlRet += "      </Employee>"
	Next nI
	cXmlRet += "    </ListOfEmployeeSituations>"
	cXmlRet += "  </ReturnEmployeeSituations>"
EndIf

RestArea(aArea)
Return cXmlRet

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Funo    ³RetSituacao()      ³Autor³Marinaldo de Jesus³Data³14/11/2001³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descrio ³Atualiza o Cadastro de Funcionarios com a Atual Situacao  do³
³          ³Funcionario e o Codigo de Afastamento do FGTS				³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³RetSituacao( cFil , cMat , lAtualiza , dDataRef )			³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³cFil		-> Filial do Funcionario						³
³          ³cMat   		-> Matricula do Funcionario						³
³          ³lAtualiza	-> Se Atualiza o Cadastro de Funcionarios		³
³          ³dDataRef 	-> Data para Referencia							³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL 														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observao³                                                      		³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function RetSituacao( cFil , cMat ,dDtPesq1,dDtPesq2)

Local aArea				:= GetArea()
Local aAreaSRA			:= SRA->( GetArea() )
Local aBuscaAf			:= {}
Local aReturn			:= Array( 4 )
Local aIncRes			:= {}
Local bAscanTrf			:= { || NIL }
Local bAscanRTrf		:= { || NIL }
Local cMesAno			:= ""
Local cDemissa  		:= ""
Local cRescrais			:= ""
Local cAfasfgts			:= ""
Local cSvFilAnt			:= cFilAnt
Local dDataAux			:= Ctod("//")
Local lFindFunc 		:= .F.
Local nX				:= 0
Local nLenX				:= 0
Local nRegSRG			:= 0
Local aTransf			:= {}
DEFAULT cFil			:= SRA->RA_FILIAL
DEFAULT cMat			:= SRA->RA_MAT


/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Determina a Data para Verificacao                             ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cMesAno 	:= mesAno(dDtPesq2)
dDataAux	:= dDtPesq2

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Inicializa os Valores DEFAULT para o aReturn                  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aReturn[1]	:= Space( Len( SRA->RA_SITFOLH ) )
aReturn[2]	:= Space( Len( SRA->RA_AFASFGT ) )
aReturn[3]	:= Space( Len( SRA->RA_RESCRAI ) )
aReturn[4]	:= Ctod("//") 

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Atualiza cFilAnt Conforme Filial do Funcionario               ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cFilAnt		:= IF( !Empty( cFil ) , cFil , cFilAnt )

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Posiciona no Funcionario                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
IF !( lFindFunc := ( SRA->( RA_FILIAL + RA_MAT ) == cFil + cMat ) )
	lFindFunc := SRA->( dbSeek( cFil + cMat , .F. ) )
EndIF

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Retorna a Atual Situacao do Funcionario                       ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
IF ( lFindFunc )

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Afastamentos									 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	fBuscaAfast(dDtPesq1,dDtPesq2,@aBuscaAf)

	AEVAL( aBuscaAf , { |X| X[2] := If(Empty(X[2]),dDtPesq2,X[2]) } )	  //Se o registro nao possuir data fim, preenche com data fim do periodo para ordenar corretamente

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Ordena o Array pela data do Inicio do Ultimo Afastamento   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aSort( aBuscaAf , NIL , NIL , { |x,y| x[2] > y[2] } )
	IF !Empty( nLenX := Len( aBuscaAf ) )
		For nX := 1 To nLenX
			If (aBuscaAf[nx,1] <= dDtPesq2 .And. Empty( aBuscaAf[ nX , 2 ] )) .or. ;
				(aBuscaAf[nx,1] >= dDtPesq1 .And. aBuscaAf[ nx , 1 ] <= dDtPesq2) .or. ;
				(aBuscaAf[nX,1] >= dDtPesq1 .And. aBuscaAf[ nX , 2 ] <= dDtPesq2) .or. ;
				(aBuscaAf[nX,1] >= dDtPesq1 .And. aBuscaAf[nX,1] <= dDtPesq2 .And. aBuscaAf[ nX , 2 ] >= dDtPesq2) .or. ;
				(aBuscaAf[nX,1] <= dDtPesq1 .And. aBuscaAf[ nX , 2 ] >= dDtPesq1) 
				
				If AllTrim( aBuscaAf[ nX , 4 ] ) == "F" .And. If(cPaisLoc == "ARG",If(!Empty(aBuscaAf[nX,15]), .T. ,.F.),.T.)
					aReturn[1] := "F"
				ElseIf AllTrim( aBuscaAf[ nX , 4 ] ) == "A"
					aReturn[1] := "A"
				EndIf
				
				aReturn[2] := AllTrim( aBuscaAf[ nX , 19 ] )
				
				Exit
			ElseIf AllTrim( aBuscaAf[nX,4] ) $ "F/A" .And.  SRA->RA_SITFOLH $ "A/F"		// Se a situacao for de F ou A, retornar para Normal
				aReturn[1] := Space( GetSx3Cache( "RA_SITFOLH", "X3_TAMANHO" ) )
				aReturn[2] := Space( GetSx3Cache( "RA_AFASFGT", "X3_TAMANHO" ) )
				aReturn[3] := Space( GetSx3Cache( "RA_RESCRAI", "X3_TAMANHO" ) )
				aReturn[4] := SRA->RA_DEMISSA
			EndIF
		Next nX
	Else 
		If SRA->RA_SITFOLH == "T" 
			aReturn[1] := SRA->RA_SITFOLH
		ElseIf SRA->RA_SITFOLH == "D"	
			aReturn[1] := SRA->RA_SITFOLH
			aReturn[2] := SRA->RA_AFASFGT
			aReturn[3] := SRA->RA_RESCRAI
			aReturn[4] := SRA->RA_DEMISSA
		EndIf	
	EndIf
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Se Funcionario Demitido Procura Afastamento do FGTS no SRG ³
	³ e Codigo Rescisao para a RAIS								 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF SRG->( dbSeek( cFil + cMat ) )
		While SRG->( !Eof() .and. RG_FILIAL + RG_MAT == cFil + cMat )
			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Apenas Rescisoes Efetivadas								 ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If (MV_MODFOL != "2" .AND. !( SRG->RG_EFETIVA == "N" )) .OR. (MV_MODFOL == "2" .AND. ( SRG->RG_EFETIVA == "2" ))
				nRegSRG := SRG->( Recno() )
			EndIF
			SRG->( dbSkip() )
		End While
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Posiciona no Cabecalho da Rescisao						 ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		IF ( nRegSRG > 0.00 )
			SRG->( dbGoto( nRegSRG ) )
			cDemissa := MesAno( SRG->RG_DATADEM )
			If SRG->RG_DATADEM <= dDtPesq2
				fIncRes(SRA->RA_FILIAL,SRG->RG_TIPORES,@aIncRes,0.00,@cRescrais,@cAfasfgts,"")

				aReturn[1] := "D"
				aReturn[2] := cAfasfgts
				aReturn[3] := cRescrais
       			aReturn[4] := SRG->RG_DATADEM
        	EndIf
		      	
	      	Aadd(aBuscaAf,{	SRG->RG_DATADEM,;
							SRG->RG_DATADEM,;
							'D',;
							cRescrais ,; // Utilizado na Rais
							"" ,;
							"" ,;
							0  ,;
							"" ,;
							"" ,;
							"" ,;
							0  }) 
        EndIF
	EndIF

	Y240Tran(dDtPesq1,dDtPesq2,cMat,cFil,cEmpAnt,@aBuscaAf)
	
EndIF

aSort( aBuscaAf , NIL , NIL , { |x,y| x[3] < y[3] } )
/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura Dados de Entrada									 ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cFilAnt := cSvFilAnt
RestArea( aAreaSRA )
RestArea( aArea )

Return( aBuscaAf )

Static Function Y240Tran(dStart,dFinish,cMat,cFilMat,cEmpMat,aRet)
Local aArea 	:= GetArea()
Local cAliasTmp	:= GetNextAlias()

BeginSql alias cAliasTmp
SELECT * FROM %table:SRE% SRE
WHERE SRE.%notDel%
	AND RE_MATD=%exp:cMat%
	AND RE_FILIALD =%exp:cFilMat%
	AND RE_EMPD=%exp:cEmpMat%
	AND ( RE_DATA BETWEEN %exp:DtoS(dStart)% AND %exp:DtoS(dFinish)% )
ORDER BY RE_DATA
EndSql

(cAliasTmp)->(dbGotop())
While !(cAliasTmp)->(Eof())
		Aadd(aRet,{	Stod((cAliasTmp)->RE_DATA),;
					ctod("  /  /  "),;
					"TE",;
				 	"" ,;
				 	"" ,;
			 		"" ,;
					0  ,;
					"" ,;
					"" ,;
					"" ,;
					0  })

	(cAliasTmp)->(dbSkip())
EndDo
(cAliasTmp)->(dbCloseArea())
RestArea(aArea)
Return .T.
