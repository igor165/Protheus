#INCLUDE "PROTHEUS.CH"

/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁInRhLibArrExecЁAutor ЁMarinaldo de Jesus   Ё Data Ё14/05/2003Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁExecutar Funcoes Dentro de RHLIBARR                          Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁInRhLibArrExec( cExecIn , aFormParam )						 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁuRet                                                 	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function InRhLibArrExec( cExecIn , aFormParam )
         
Local uRet

DEFAULT cExecIn		:= ""
DEFAULT aFormParam	:= {}

IF !Empty( cExecIn )
	cExecIn	:= BldcExecInFun( cExecIn , aFormParam )
	uRet	:= __ExecMacro( cExecIn )
EndIF

Return( uRet )

/*/
зддддддддддбддддддддддддбддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁfCompArray	ЁAutor Ё Marinaldo de Jesus   Ё Data Ё04/06/2001Ё
цддддддддддеддддддддддддаддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁEfetua a Comparacao de Arrays                               Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁlCompare <=> False se Houver Diferca, True se Nao Houver	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                                    Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function fCompArray( aArray1 , aArray2 , nPosDif  )
Return( ArrayCompare( aArray1 , aArray2 , @nPosDif ) )

/*/
зддддддддддбддддддддддддбддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁArrayCompareЁAutor Ё Marinaldo de Jesus   Ё Data Ё04/08/2004Ё
цддддддддддеддддддддддддаддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁEfetua a Comparacao de Arrays                               Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁlCompare <=> False se Houver Diferca, True se Nao Houver	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico                                                    Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function ArrayCompare( aArray1 , aArray2 , nPosDif )

Local cType1		:= ValType( aArray1 )
Local cType2		:= ValType( aArray2 )

Local lCompare
Local nArray
Local nArray1Size
Local nArray2Size
Local nHalfToBeg
Local nHalfToEnd

Begin Sequence

	IF !( lCompare := ( cType1 == cType2 ) )
		Break
	EndIF

	IF ( cType1 == "O" )
		lCompare := Compare( aArray1 , aArray2 , @nPosDif )
		Break
	EndIF

	IF !( lCompare := ( cType1 == "A" ) )
		Break
	EndIF
			
	IF !( lCompare := ( ( nArray1Size := Len( aArray1 ) ) == ( nArray2Size := Len( aArray2 ) ) ) )
		nPosDif := ( Min( nArray1Size , nArray2Size ) + 1 )
		Break
	EndIF
			
	nHalfToBeg := ( IF( ( ( nArray1Size % 2 ) > 0 ) , ( ( nArray1Size + 1 ) ) , nArray1Size ) / 2 )
	nHalfToEnd := Min( nArray1Size , ( nHalfToBeg + 1 ) )
	For nArray := 1 To nArray1Size
		//Begin To Half
		IF ( nArray <= nHalfToBeg )
			IF !( lCompare := Compare( aArray1[ nArray ] , aArray2[ nArray ] ) )
				nPosDif := nArray
				Break
			EndIF
		Else
			Break
		EndIF
		//Half To Begin
		IF ( nHalfToBeg > nArray )
			IF !( lCompare := Compare( aArray1[ nHalfToBeg ] , aArray2[ nHalfToBeg ] ) )
				nPosDif := nHalfToBeg
				Break
			EndIF
			--nHalfToBeg
		EndIF
		//Half To End
		IF ( nHalfToEnd < nArray1Size )
			IF !( lCompare := Compare( aArray1[ nHalfToEnd ] , aArray2[ nHalfToEnd ] ) )
				nPosDif := nHalfToEnd
				Break
			EndIF
			++nHalfToEnd
		EndIF
		//End To Half
		IF ( nArray1Size >= nHalfToEnd )
			IF !( lCompare := Compare( aArray1[ nArray1Size ] , aArray2[ nArray1Size ] ) )
				nPosDif := nArray1Size
				Break
			EndIF
			--nArray1Size
		EndIF
	Next nArray

End Sequence
		
Return( lCompare )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁCompare	  Ё Autor Ё Marinaldo de Jesus    Ё Data Ё08/10/2002Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁCompara o Conteudo de 2 Variaveis							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁlCompare <=> False se Houver Diveferca, True se Nao Houver	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Compare( uCompare1 , uCompare2 , nPosDif )

Local cType1	:= ValType( uCompare1 )
Local cType2	:= ValType( uCompare2 )

Local lCompare

IF ( lCompare := ( cType1 == cType2 ) )
	IF ( cType1 == "A" )
		lCompare := ArrayCompare( uCompare1 , uCompare2 , @nPosDif )
	ElseIF ( cType1 == "O" )
		lCompare := ArrayCompare( ClassDataArr( uCompare1 ) , ClassDataArr( uCompare2 ) , @nPosDif )
	ElseIF ( cType1 == "B" )
		lCompare := ( GetCBSource( uCompare1 ) == GetCBSource( uCompare2 ) )
	Else
		lCompare := ( uCompare1 == uCompare2 )
	EndIF
EndIF

Return( lCompare )