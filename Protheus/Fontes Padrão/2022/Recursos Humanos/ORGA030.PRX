#INCLUDE "PROTHEUS.CH"
#INCLUDE "ORGA030.CH"
#INCLUDE "HEADERGD.CH"
#INCLUDE "ENUM.CH"                                    

Static cRBUPostoInit

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡„o    ³ORGA030   ³Autor³Emerson Grassi Rocha                        ³ Data ³13/09/2006³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡„o ³Movimento de Postos   									                     ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³Generico                                                                       ³
//ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//            ACTUALIZACIONES DESDE LA CONTRUCCION INICIAL                                  ³
//ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Programador ³Data      ³ REQUISITO ³                   Motivo da Alteracao                ³
//ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Cecilia H.C.³31/03/2014³315701     ³SIGAORG-Integrações P12                               ³
//³Cícero Alves³29/07/2016³TVOJLD     ³incluida função SraF3Ident e implementado PE ORG030GRV³
//³Renan Borges³07/11/2016³TVTWG9     ³Realizado a implementação da opção 4 da solicitação na³
//³            ³          ³           ³rotina de Movimentação de Postos, destinada a redução ³
//³            ³          ³           ³da quantidade de postos.                              ³
//³Gabriel A.  ³07/11/2016³MRH-6318   ³Ajuste para que ao cancelar a transferência de        ³
//³            ³          ³           ³ocupação de postos, não seja possível ocupar o posto  ³
//³            ³          ³           ³com alguém que já ocupa outro.                        ³
//³Oswaldo L   ³20-04-2017³DRHPONP157 ³impedir editar cargo\funcao caso haja movtos no posto ³
//³Isabel N    ³27/04/2017³DRHPONTP-95³Efetuado ajuste para bloquear o cancelamento caso o   ³
//³            ³          ³           ³posto esteja ocupado.                                 ³
//³Willian U.  ³09/06/2017³DRHPONTP-650³Réplica DRHPONTP-576: Ajustada query das funções     ³
//³            ³          ³            ³FRCLRSPPOSTO e ORG30PVLD para busca de postos ocupa  ³
//³            ³          ³            ³dos mas com vagas livres.                            ³
//³Willian U.  ³30/06/2017³DRHPONTP-766³Ajuste para que a validação ao ocupar o posto, ocorra³
//³            ³          ³            ³também por pessoa.                                   ³
//³WinstonCosta³04/01/2019³            ³Retirada Tratamento AS/400                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function ORGA030( cAlias , nReg , nOpc , aNewAdvSize , lMinSize )
	Local aSvKeys		   := GetKeys()
	Local aArea			:= GetArea()
	Local aAreaRCL		:= {}
	Local aAreaRBU		:= RBU->( GetArea() )
	Local aAreaSRA		:= SRA->( GetArea() )
	Local aAreaSRJ		:= SRJ->( GetArea() )
	Local aAreaSQ3		:= SQ3->( GetArea() )
	Local aIndexRCL		:= {}
	Local cFiltraRCL	   := ""
	Local cMsgAlert		:= ""
	
	DEFAULT nOpc		:= 2
	
	dbSelectArea( "RCL" )
	aAreaRCL		:= RCL->( GetArea() )
	
	Begin Sequence

		Private aRotina    := MenuDef()	
		Private bFiltraBrw	:= { || NIL }
		Private cCadastro   := OemToAnsi(STR0006)//"Registros de Postos"
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/
		cFiltraRh	:= ChkRh( "ORGA030" , "RCL" , "1" ) 
		bFiltraBrw 	:= { || FilBrowse( "RCL" , @aIndexRCL , @cFiltraRH ) }
	   	Eval( bFiltraBrw )
	

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Chama a Funcao de Montagem do Browse                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		MBrowse( 6 , 1 , 22 , 75 , "RCL"  , NIL , NIL , NIL , NIL , NIL , LegendDef())
	

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Deleta o filtro utilizando a funcao FilBrowse						   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		EndFilBrw( "RCL" , aIndexRCL ) 

	End Sequence

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Restaura os Dados de Entrada 										   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RestArea(aArea)
	RestKeys(aSvKeys)
	RestArea(aAreaRBU)
	RestArea(aAreaRCL)                                                    
	RestArea(aAreaSRA)
	RestArea(aAreaSRJ)
	RestArea(aAreaSQ3)

Return

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³ORGA030Mnt³ Autor ³Emerson Grassi Rocha   ³ Data ³15/09/2006³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³                                                            ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³ORGA030Mnt( cAlias , nReg , nOpc )					      ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³cAlias = Alias do arquivo                                   ³
//³          ³nReg   = Numero do registro                                 ³
//³          ³nOpc   = Numero da opcao selecionada                        ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³ Uso      ³ORGA030()	                                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function ORGA030Mnt( cAlias , nReg , nOpc, aCpos, aNewAdvSize, lMinSize  ) 
	Local aArea			:= GetArea()
	Local aSvKeys			:= GetKeys()
	Local aInfoAdvSize	:= {}
	Local aObjSize		:= {}
	Local aObjCoords		:= {}
	Local nInd := 0
	Local nTamRBU := 0
	Local nTamRCX := 0
	Local aRCLHeader		:= {}
	Local aRCLCols		:= {}
	Local aRCLFields		:= {}
	Local aRCLAltera		:= {}
	Local aRCLYesFields	:= {}
	Local aRCLRecnos		:= {}
	Local aRCLVirtual		:= {}
	
	Local aRBUGdAltera	:= {}
	Local aRBUGdNaoAlt	:= {}
	Local aRBUNotFields	:= {}
	Local aRBUVirtGd		:= {}
	Local aRBUVisuGd		:= {}
	Local aRBUMemoGd		:= {}
	Local aRBUHeader		:= {}
	Local aRBUCols		:= {}
	Local aRBUQuery		:= {}
	
	Local aRBUAltHeader	:= {}
	Local aRBUAltCols		:= {}
	
	Local aLogGer			:= {}
	Local aLog				:= {}
	Local aLogTitle		:= {}
	Local aLogGerTitle	:= {}
	Local bRBUKeySkip		:= { || .F. }
	Local bSet15			:= { || NIL }
	Local bSet24			:= { || NIL }
	Local bRCXGdDelOk		:= { || .T. }
	Local cFilRCL			:= ""
	Local cCodRCL			:= ""
	Local cRCLKeySeek		:= "xxx"
	Local lRBULock		:= .F.
	Local lSpcLock		:= .F.
	Local nOpcAlt			:= 0
	Local nRCLUsado		:= 0
	Local nRBUUsado		:= 0
	Local nLoop			:= 0
	Local nLoops			:= 0
	
	Local aRCXCols
	Local aRCXHeader
	Local nRCXUsado
	Local aRCXVirtual
	Local aRCXNoFields
	Local aRCXRecnos
	Local aRCXAltera		:= {}
	
	Local aHeaderRBU	   := {}
	Local aColsRBU		:= {}
	Local cChave			:= ''
	
	Local nOpcNewGd		:= 0
	Local nCnt				:= 0
	Local oDlg				:= NIL
	Local oRCLEnchoice	:= NIL
	Local oFont			:= NIL
	Local oGroup			:= NIL
	
	Local cFunName		:= Upper( AllTrim( FunName() ) )
	
	DEFAULT aNewAdvSize	:= MsAdvSize()
	DEFAULT lMinSize		:= .F.
	
	Private aChaves		:= {}
	Private aRDZRelations:= {}
	
	Private oRBUGetDados	:= NIL
	Private oRCXGetDados	:= NIL
	Private oRBUAtuGD		:= NIL
	
	Private nGetSX8Len	:= GetSX8Len()
	Private aRBUSvCols	:= {}
	Private aRCLSvCols	:= {}
	Private aRBURecnos	:= {}
	
	Private lIsORGA030	:= ( cFunName == "ORGA030" )
	Private lReduzSize	:= lMinSize
	Private aAdvSize		:= aClone( aNewAdvSize )
	Private nOpcx			:= 0
	
	Private aButtons		:= {}

	Private bOcupar
	Private bRemover
	Private bCongelar
	Private bCancelar
	Private bSolicita
	Private bCadSubs
	Private bOcuSubs
	Private lRCXEmpty
	Private lDesPosto 		:= .F.
	Private oProtheus 		:= Protheus():New()
	
	aRotina := MenuDef()	//Força atualização aRotina.
	
	Begin Sequence	    

	IF Type("cFilSQB")<> "U" .And. Type("cCodSQB")<> "U" .And. Type("oRclGetDados")<> "U"
	  	RCL->(DBSeek(cFilSQB + cCodSQB + oRclGetDados:aCols[nReg][1] ))
	Else
		RCL->(DBGoTo(nReg))
	EndIf
	
	    //Se o Posto estiver cancelado, muda opcao para "Visualizacao" mas permite a desocupacao caso haja funcionario alocado.
	    If nOpc != 2 .And. RCL->RCL_STATUS == "4"
			nOpc := 2
			//"Aviso"###"Este Posto está Cancelado, portanto seus dados serão apenas visualizados!"###
			Aviso(STR0024, STR0033 + STR0083 , {"Ok"})	
			lDesPosto := .T.
		EndIf

		//Adiciona na enchoicebar o botao 'desocupar' quando o posto esta cancelado
		If lDesPosto
			SetKey(VK_F6, bRemover)
			bRemover :=	{ ||	DesocuparPosto() ,;
								SetKey(VK_F6, bRemover);
					   	}
			AAdd(aButtons,	{;
								"AFASTAMENTO",;
				   				bRemover,;
				       	   		STR0063 + "... <F6>",;
				       	   		STR0063;
				           	};
				 )
		EndIf
				
		nOpcx		:= nOpc
		nOpcNewGd	:= IF( (  nOpc == 2 )  , 0 , GD_INSERT + GD_UPDATE )
		
	
		If nOpc != 2
			SetKey(VK_F5, bOcupar)
			
			bOcupar :=	{ ||	OcuparPosto(cAlias, nReg, nOpc),;
								SetKey(VK_F5, bOcupar);
						   	  }
				
			AAdd(aButtons,	{;
								"OCUPACAO",;
			   					bOcupar,;
			       	   			STR0050 + "... <F5>",;
			       	   			STR0050;
			           		};
			     )

			SetKey(VK_F6, bRemover)

			bRemover :=	{ ||	DesocuparPosto() ,;
								SetKey(VK_F6, bRemover);
						}
				
			AAdd(aButtons,	{;
								"AFASTAMENTO",;
				   				bRemover,;
				       	   		STR0063 + "... <F6>",;
				       	   		STR0063;
			           		};
			 	)
			
			SetKey(VK_F7, bCongelar)
			
			bCongelar :=	{ ||	CongelarPosto(cAlias, nReg, nOpc),;
									SetKey(VK_F7, bCongelar);
							}
				
			AAdd(aButtons,	{;
								"AZUL"			,;
			   					bCongelar		,;
			       	   			STR0051 + "... <F7>"	,;
			       	   			STR0051;
			           		};
			     )


			
			SetKey(VK_F8, bCancelar)
				
			bCancelar :=	{ ||	IF(	CancelarPosto(cAlias, nReg, nOpc),;
										(SetKey(VK_F8, bCancelar),; 
										oDlg:End()),;
										.T.);
							}
				
			AAdd(aButtons,	{;
								"UPDERROR",;
			   					bCancelar,;
			       	   			STR0052 + "... <F8>",;
			       	   			STR0052;
			           		};
			     )
			     
			SetKey(VK_F9, bSolicita)			     
			
			bSolicita := { || fIncrPosit( { cAlias, nOpc, nReg }, aRCLHeader, aRCLCols) }
			
			AAdd(aButtons,	{;
								"BMPINCLUIR",;
   								bSolicita,;
			       	   			STR0069 + "... <F9>",;
			       	   			STR0068;
           					};
			     )
		EndIf


 		aRCLCols		:= RCL->(GdMontaCols(	@aRCLHeader,;
												@nRCLUsado,;
												@aRCLVirtual,;
												NIL,;
												NIL,;			//5
												aRCLYesFields,;
												@aRCLRecnos,;
												NIL,;
												NIL,;
												NIL,;			//10
												NIL,;
												NIL,;
												NIL,;
												NIL,;
												NIL,;			//15
												NIL,;
												NIL,;
												NIL,;
												NIL,;
												NIL,;			//20
												NIL,;
												.F.,;
												NIL,;
												NIL,;
												NIL,;           //25
												NIL,;
												NIL,;               
												NIL,;
												NIL,;
												NIL,;			//30
												.T.))
		aRCLSvCols:= AClone(aRCLCols)
												
		cFilRCL			:= xFilial("RBU",RCL->RCL_FILIAL)
		cCodRCL			:= RCL->RCL_POSTO
		cRCLKeySeek		:= ( cFilRCL + 	cCodRCL )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Bloqueia Chaves Logicas de Postos                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF !( lRBULock := ORGA030Locks( nOpc , "RBU" ) )
			Break
		EndIF
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria as Variaveis de Memoria e Carrega os Dados Conforme o   ³
		//³ arquivo														 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nLoop := 1 To nRCLUsado
			aAdd(aRCLFields, aRCLHeader[nLoop, __AHEADER_FIELD__])
			
			SetMemVar(aRCLHeader[nLoop, __AHEADER_FIELD__], aRCLCols[01 ,nLoop], .T.)
		Next nLoop

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Define os Campos que nao serao carregados na GetDados.	     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aAdd( aRBUNotFields , "RBU_FILIAL"	)
		aAdd( aRBUNotFields , "RBU_DEPTO"	)
		aAdd( aRBUNotFields , "RBU_TABSAL"	)
		aAdd( aRBUNotFields , "RBU_NIVEL"	)
		aAdd( aRBUNotFields , "RBU_FAIXSA"	)                            
		aAdd( aRBUNotFields , "RBU_PROCES"	)    
		aAdd( aRBUNotFields , "RBU_DDEPTO"	)    
		aAdd( aRBUNotFields , "RBU_POSTO"	)
		aAdd( aRBUNotFields , "RBU_CARGO"	)
		aAdd( aRBUNotFields , "RBU_DCARGO"	)
		aAdd( aRBUNotFields , "RBU_FUNCAO"	)
		aAdd( aRBUNotFields , "RBU_DFUNC"	)
		aAdd( aRBUNotFields , "RBU_CC"		) 
		aAdd( aRBUNotFields , "RBU_DESCCC"	)
		aAdd( aRBUNotFields , "RBU_SALAR"	)
		aAdd( aRBUNotFields , "RBU_FGTS"	)
		aAdd( aRBUNotFields , "RBU_BENEF"	)
		aAdd( aRBUNotFields , "RBU_ENCARG"	)
		aAdd( aRBUNotFields , "RBU_LOCPAG"	)
		aAdd( aRBUNotFields , "RBU_TPCONT"	)
		aAdd( aRBUNotFields , "RBU_ORIGEM"	)
		aAdd( aRBUNotFields , "RBU_SUBST"	)
		aAdd( aRBUNotFields , "RBU_TIPOCU"	)
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta os Dados para a GetDados							     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		#IFDEF TOP
			aRBUQuery		:= Array( 05 )
			aRBUQuery[01]	:= "RBU_FILIAL='"+cFilRCL+"'"
			aRBUQuery[02]	:= " AND "
			aRBUQuery[03]	:= "RBU_POSTO='"+cCodRCL+"'"
			aRBUQuery[04]	:= " AND "
			aRBUQuery[05]	:= "D_E_L_E_T_=' ' "
		#ENDIF

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Quando For Inclusao Posiciona o RBU No Final do Arquivo	     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF ( nOpc == 3 .Or. nOpc == 4  ) //Atualizar / Movimentar
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Garante que na Inclusao o Ponteiro do RBU estara em Eof()    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PutFileInEof( "RBU" )
		EndIF
		
		bRBUKeySkip := NIL
	
		RBU->(dbSetOrder(1))
		aRBUCols	:= RBU->(GdMontaCols(	@aRBUHeader,;
											@nRBUUsado,;
											@aRBUVirtGd,;
											@aRBUVisuGd,;
											NIL,;
											aRBUNotFields,;
											@aRBURecnos,;
											"RBU",;
											cRCLKeySeek,;
											NIL,;
											bRBUKeySkip,;
											NIL,;
											NIL,;
											NIL,;
											NIL,;
											NIL,;
											NIL,;
											aRBUQuery,;
											.F.,;
											.F.,;
											.T.))
	
		aRBUSvCols	:= aClone( aRBUCols )           
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Inicializa o Ultimo Valor do RBU_POSTO  				   	     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF (;
				(;
					Empty( RBUPostoGet() );
					.or.;
					Empty( StrTran( RBUPostoGet() , "0" , "" ) );
				);
				.and.;
				!Empty( aRBURecnos );
			)	
			RBUPostoSet( RBUPostoInit() )
		Else
			RBUPostoSet( GdFieldGet( "RBU_POSTO" , 1 , .F. , aRBUHeader , aRBUCols ) )	
		EndIF
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Define os Campos que nao se alteraram somente visualizacao   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aAdd( aRBUGdNaoAlt , "RBU_POSTO"	) 
		aAdd( aRBUGdNaoAlt , "RBU_DTAMOV"	)   
		aAdd( aRBUGdNaoAlt , "RBU_CODMOV"	)   
		
		If nOpc == 3  .Or. ( lDesPosto .And. lIsORGA030 ) //Atualizar
			aAdd( aRBUGdNaoAlt , "RBU_DTFIM"	) 
			aAdd( aRBUGdNaoAlt , "RBU_FILOCU"	) 
			aAdd( aRBUGdNaoAlt , "RBU_CODOCU"	) 						
		EndIf
	    
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Carga los Campos Editables para a GetDados				   	 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nLoop := 1	To nRBUUsado
			SetMemVar( aRBUHeader[ nLoop , 02 ] , GetValType( aRBUHeader[ nLoop , 08 ] , aRBUHeader[ nLoop , 04 ] ) , .T. )
			
			IF (;
					( aScan( aRBUVirtGd		, aRBUHeader[ nLoop , 02 ] ) == 0 );
					.and.;
			   	 	( aScan( aRBUVisuGd		, aRBUHeader[ nLoop , 02 ] ) == 0 );
			   	 	.and.;
			   	 	( aScan( aRBUNotFields	, aRBUHeader[ nLoop , 02 ] ) == 0 );
			   	 	.and.	;
			   	 	( aScan( aRBUGdNaoAlt	, aRBUHeader[ nLoop , 02 ] ) == 0 );
			   	)
				aAdd( aRBUGdAltera , aRBUHeader[ nLoop , 02 ] )
			EndIF
		Next nLoop
	
		dbSelectArea("RCX")
		dbSetOrder(1)
		aRCXNoFields:= {"RCX_FILIAL", "RCX_POSTO", "RCX_CODMOV"}
		
		aRCXCols := RCX->(GdMontaCols(	@aRCXHeader,;
										@nRCXUsado,;
										@aRCXVirtual,;
										NIL,;
										NIL,;			//5
										aRCXNoFields,;
										@aRCXRecnos,;
										"RCX",;
										xFilial("RCX")+cCodRCL,;
										NIL,;			//10
										NIL,;			
										NIL,;			
										NIL,;			
										NIL,;			
										NIL,;			//15
										NIL,;			
										NIL,;			
										NIL,;			
										NIL,;			
										NIL,;			//20
										{ { "COLBMP" ,  "IIF( RCX->RCX_SUBST == '2', 'BPMSEDT3', 'BPMSEDT2')" } },;					//{ { "COLBMP" ,  "'BPMSEDT3'"} },;			
										NIL,;			
										NIL,;			
										NIL,;			
										.F.;			//25
										)	)
				
		nTamRBU := Len(aRBUCols)
	    nTamRCX := Len(aRCXCols)
	    nInd    := 0
	    
		If Len(aRBUCols) == 1//pois este browse sempre possui um registro ao menos
			nInd := aScan( aRBUHeader , { |x| x[2] == "RBU_DTINI" } )
			
			If nInd > 0
				If Empty(aRBUCols[1][nInd])
					nTamRBU := 0
				EndIf
			ENdIf
		EndIf
		
		For nLoop := 1 To nRCLUsado
			If nTamRBU > 0 .or. nTamRCX > 0
				If !aRCLHeader[nLoop, __AHEADER_FIELD__] $ "RCL_POSTO/RCL_STATUS/RCL_DEPTO/RCL_NPOSTO/RCL_OPOSTO/RCL_DTATU/RCL_FUNCAO/RCL_CARGO" 
					aAdd(aRCLAltera, aRCLHeader[nLoop, __AHEADER_FIELD__]) 
					
				EndIf
			Else
				If !aRCLHeader[nLoop, __AHEADER_FIELD__] $ "RCL_POSTO/RCL_STATUS/RCL_DEPTO/RCL_NPOSTO/RCL_OPOSTO/RCL_DTATU" 
					aAdd(aRCLAltera, aRCLHeader[nLoop, __AHEADER_FIELD__]) 
				EndIf
			EndIf
		Next nLoop
		
		//"BPMSREC"							
		//"BPMSRECE" delete
		//"BPMSRECI" incluir
		
		lRCXEmpty:= (Len(aRCXCols) == 0)
		
		For nLoop:= 1 to Len(aRCXHeader)
			cFieldName:= aRCXHeader[ nLoop , __AHEADER_FIELD__ ]
			
			If cFieldName $ "COLBMP/RCX_REC_WT/RCX_ALI_WT"
				Loop			
			EndIf

			AAdd(aRCXAltera, cFieldName)
			SetMemVar(cFieldName, CriaVar(cFieldName), .T.)
		Next				
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta as Dimensiones los Objetos         					   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF ( !( lIsORGA030 ) .and. ( lReduzSize ) )
			aAdvSize[3] -= 25
			aAdvSize[4] -= 50
			aAdvSize[5] -= 50
			aAdvSize[6] -= 50
			aAdvSize[7] += 50
		EndIf
		
		aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
		AAdd( aObjCoords, { 000, 060, .T., .F. } )
		AAdd( aObjCoords, { 000, 000, .T., .T. } )
		aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords)
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Define Bloque Para tecla de CONFIRMACION                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	 	bSet15	:= {|| Decide(oRBUGetDados, odlg, nOpc, @nOpcAlt)} //Confirmacion  
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Define  Bloque para tecla de ELIMINAR						   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		bSet24		:= { || ( nOpcAlt := 0 , RestKeys( aSvKeys ) , oDlg:End() ) }
	
		DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta o Dialogo Principal para a Manutencao das Marcacoes    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0006 ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta o Objeto Enchoice para o RCL                      	   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oRCLEnchoice:= MsmGet():New(	"RCL"		,;
										nReg		,;
										If(nOpc=3,3,2)	,;
										NIL			,;
										NIL			,;
										NIL			,;
										aRCLFields	,;
										aObjSize[1]	,;
										aRCLAltera	,;
										NIL			,;
										NIL			,;
										NIL			,;
										oDlg		,;
										NIL			,;
										.F.			,;
										Nil			,;
										.F.			 ;
									)
	
		Private fldPermissoes:= TFolder():New(	aObjSize[2,1],;
												aObjSize[2,2],;
												NIL,;
												NIL,;
												oDlg,;
												NIL,;
												NIL,;
												NIL,;
												.T.,;
												NIL,;
												aObjSize[2,4],;
												aObjSize[2,3]	)
		fldPermissoes:AddItem(STR0053) //Ocupantes
		fldPermissoes:AddItem(STR0020) //Historico
		fldPermissoes:SetOption(1)

		oRBUGetDados:= MsNewGetDados():New(5														,;
											5														,;
											((aObjSize[2,3]-aObjSize[2,1])/2)-10					,;
											aObjSize[2,4]-aObjSize[2,2]-5							,;
											GD_INSERT + GD_UPDATE + GD_DELETE 		   				,;
											Nil														,;
											NIL										 				,;			
											""										 				,;
											aRBUGdAltera							 				,;
											0														,;
											NIL                                      		    	,;											
											NIL  							    					,; 
											NIL														,;
										    'VldOpRBU()'     						   				,; 
											fldPermissoes:aDialogs[2]				  				,;
											aRBUHeader								  				,;
											aRBUCols								  			 	 ;
										 )

		//Monta aHeader completo ta tabela RBU para utilizacao na get de atualizacoes
		aHeaderRBU := RBU->( GdMontaHeader( Nil , Nil , NIL , NIL , NIL , .T. ) )
	
		cChave 	   := xFilial("RBU") + RCL->RCL_POSTO
	
		//Monta Acols completo com registros do posto selecionado para utilizacao na get de atualizacoes
		aColsRBU   := RBU->( GdMontaCols(@aHeaderRBU,NIL,NIL,NIL,NIL,NIL,NIL,"RBU",cChave) )
		
		oRBUGetDados:bChange := { || OrgRBUChange( aHeaderRBU , aColsRBU ) }
		
		aRBUAltHeader := {}
		
		//Monta aRBUAltHeader com 3 campos GHOST (CAMPO - VALOR ANTERIOR - VALOR FINAL)
		MntHeaderAlt(@aRBUAltHeader,aRBUHeader)
		
		//Monta array aRBUAltCols inicialmente vazio
		aRBUAltCols := {}
		aAdd( aRBUAltCols, {'','','',.F.} )
		

		@ ((aObjSize[2,3]-aObjSize[2,1])/2)-5, aObjSize[2,2] SAY OemToAnsi(STR0067) SIZE 060,10 OF fldPermissoes:aDialogs[2] PIXEL FONT oFont	 //"Alteracoes"

		oRBUAtuGD	:= MsNewGetDados():New(((aObjSize[2,3]-aObjSize[2,1])/2)+5				,;
											5													,;
											aObjSize[2,3]-aObjSize[2,1]-15						,;
											aObjSize[2,4]-aObjSize[2,2]-5						,;
											0										   			,;
											NIL										  			,;
											NIL										 			,;			
											""										 			,;
											Nil										 			,;
											0													,;
											NIL                                      		    ,;											
											NIL  							    				,; 
											NIL													,;
										    NIL        								   			,; 
											fldPermissoes:aDialogs[2]				  			,;
											aRBUAltHeader										,;
											aRBUAltCols											;
										 )
										 
		oRCXGetDados:= MsNewGetDados():New(	5											,;
											5											,;
											aObjSize[2,3]-aObjSize[2,1]-15				,;
											aObjSize[2,4]-aObjSize[2,2]-5				,;
											0,;//GD_DELETE								,;
											{|| .T. }									,;
											{|| .T. }									,;			
											""											,;
											aRCXAltera									,;
											0											,;
											NIL                                         ,;											
											NIL  							    		,; 
											NIL											,;
										    bRCXGdDelOk        									,; 
											fldPermissoes:aDialogs[1]					,;
											aRCXHeader									,;
											aRCXCols									 ;
										 )
		If lRCXEmpty
			oRCXGetDados:aCols[1, Len(oRCXGetDados:aCols[1])]:= .T.		
		EndIf
	
		//oRBUGetDados:bChange := { || aChaves:= GetRDZRelations("SRA", oRBUGetDados:aCols[oRBUGetDados:nAt, GDFieldPos("RBU_CODOCU", oRBUGetDados:aHeader)])}
	
		ACTIVATE MSDIALOG oDlg ON INIT	EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons )
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Restaura as Teclas de Atalho								     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		RestKeys( aSvKeys )
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Quando Confirmada a Opcao e Nao for Visualizacao Grava ou     ³
		//³exclui as Informacoes do RCL e RBU							 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF( nOpcAlt == 1 )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Apenas se nao For Visualizacao              				 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	 		IF ( ( nOpc != 2 .And. ( nOpc == 4 .or. ( nOpc == 3 .and. nReg <> 0 ) ) ) .Or. ( lDesPosto .And. lIsORGA030 ) )

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gravando/Incluido ou Excluindo Informacoes do SRY/RBU        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				MsAguarde(;
								{ ||;
										ORGA030Grava(;
														nOpc			,;
														nReg			,;
														aRBUHeader		,;
														oRBUGetDados:aCols,;  
														aRBUCols        ,; 
														aRBUVirtGd		,;
														aRBURecnos		,;
														aRCLHeader		;
													 );
								 },;
								 cCadastro;
							)
		   Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ RollBack da Numeracao Automatica            				 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				While ( GetSX8Len() > nGetSX8Len )
					RollBackSX8()
				End While		   
		   EndIF
		
		Else	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ RollBack da Numeracao Automatica            				 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			While ( GetSX8Len() > nGetSX8Len )
				RollBackSX8()
			End While
	
		EndIF
	
	End Sequence
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Libera Locks						                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF ( lRBULock )
		FreeLocks( "RBU" , NIL , .T. )
		FreeLocks( "RCL" , NIL , .T. )
	EndIF
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Restaura os Dados de Entrada								   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RestArea( aArea )

Return( nOpcAlt )


//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³ORGA030Grava ³Autor³Emerson Grassi Rocha  ³ Data ³15/09/2006³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Grava as Informacoes no RBU                                 ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³ORGA030()	                                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function ORGA030Grava(	nOpc,;
							 	nReg,;
							 	aRBUHeader,;
							 	aRBUCols,;
							 	aSvRBUCols,;
							 	aRBUVirtGd,;
							 	aRBURecnos,;
							 	aRCLHeader;
							 	)
	Local nGetSX8Len
 	Local nCount
 	Local nField
 	Local xValue
 	Local cRCLFieldName
 	Local cRBUFieldName
	Local oRCLTemp	:= ArrayList():New()
	Local oRCLSaved	:= ArrayList():New(aRCLSvCols[1])
	Local oRCLHeader:= ArrayList():New(aRCLHeader)
	Local aRow
	Local nPosRecNo	:= aScan(oRCXGetDados:aHeader, { |aTemp| IsHeadRec( aTemp[__AHEADER_FIELD__] ) } )
	Local nFieldPos
	Local cKeySeek 
	Local nOcuPosto
	Local nLenRBU := Len(aRBUCols)
	Local nX		:= 0
	Local nI := 0
	Local lNovo := .T.
	Local lIntRSP		:=  GetMv("MV_IORGRSP", NIL, "0") == "1" 
	Local cCODMOV	:= ''
		
	For nCount := 1 To Len(aRCLHeader)
		If aRCLHeader[nCount, __AHEADER_FIELD__] $ "RCL_POSTO/RCL_TPOSTO/RCL_NPOSTO/RCL_OPOSTO/RCL_STATUS/RCL_DTINI/RCL_DTFIM/RCL_DTATU/RCL_ALI_WT/RCL_REC_WT"
			oRCLTemp:Add( oRCLSaved:GetItem(nCount) )
		Else
			oRCLTemp:Add( GetMemVar(aRCLHeader[nCount, __AHEADER_FIELD__]) )
		EndIf
	Next nCount
	oRCLTemp:Add(.F.)

	Begin Transaction
		If RCL->(!EOF())
			nGetSX8Len:= GetSX8Len()
			
			RBU->(dbSetOrder(1))
		
			For nI := 1 To Len(oRBUGetDados:aCols)
				If oRBUGetDados:aCols[nI,GDFieldPos("RBU_OPERAC", oRBUGetDados:aHeader)] == '6' 
					If oRBUGetDados:aCols[nI,len(oRBUGetDados:aCols[nI])]
						If RBU->(dbseek(xFilial("RBU", xFilial("RCL"))+ RCL->RCL_POSTO+oRBUGetDados:aCols[nI,1]))
							lNovo := .F.
						
							RecLock("RBU", lNovo)
							RBU->(dbdelete())
							RBU->(MsUnlock())	
						Endif
					Else
						 
						If RBU->(dbseek(xFilial("RBU", xFilial("RCL"))+ RCL->RCL_POSTO+oRBUGetDados:aCols[nI,GDFieldPos("RBU_CODMOV", oRBUGetDados:aHeader)] ))
							lNovo := .F.
						Else
							lNovo := .T.
						EndIf
						RecLock("RBU", lNovo)	
							RBU->RBU_FILIAL	:= xFilial("RBU", xFilial("RCL"))
							RBU->RBU_POSTO	:= RCL->RCL_POSTO
							If lNovo
								RBU->RBU_CODMOV	:= &(GetSx3Cache("RBU_CODMOV", "X3_RELACAO" ) )//GetSx8Num("RBU","RBU_CODMOV")
								RBU->RBU_DTAMOV	:= dDataBase
							EndIf
							RBU->RBU_OPERAC	:= oRBUGetDados:aCols[nI,GDFieldPos("RBU_OPERAC", oRBUGetDados:aHeader)]
							RBU->RBU_RESPON	:= cUserName
							
							RBU->RBU_DTINI  := oRBUGetDados:aCols[nI,GDFieldPos("RBU_DTINI", oRBUGetDados:aHeader)] 
							RBU->RBU_FILFUN := oRBUGetDados:aCols[nI,GDFieldPos("RBU_FILFUN", oRBUGetDados:aHeader)]
							RBU->RBU_MATFUN := oRBUGetDados:aCols[nI,GDFieldPos("RBU_MATFUN", oRBUGetDados:aHeader)]
							
						RBU->(msunlock())
					EndIf
				EndIf
			Next nI
	
			If .NOT. oRCLTemp:Equals(oRCLSaved)	.And.  aRBUCols[nLenRBU,GDFieldPos("RBU_OPERAC", aRBUHeader)] <> '6'
	
				//------------------------ Gravando RCL ------------------------
				RecLock("RCL", .F.)	
		
				For nCount:= 1 To oRCLHeader:GetCount()		
					nField:= FieldPos(  oRCLHeader:GetItem(nCount)[__AHEADER_FIELD__]  )
		
					If AllTrim(oRCLHeader:GetItem(nCount)[__AHEADER_FIELD__]) == "RCL_NPOSTO"
						RCL->(FieldPut(nField, M->RCL_NPOSTO ) )
					Else		
						RCL->(FieldPut(nField, oRCLTemp:GetItem(nCount) ) )
					EndIf
				Next
	
				RCL->RCL_DTATU:= dDataBase
				
				MsUnLock()				
				//--------------------------------------------------------------
	
				UpdRD4Desc(cEmpAnt, RCL->RCL_FILIAL, RCL->RCL_POSTO, GetMemVar("RCL_DCARGO"), "2")
				
				cCODMOV := &(GetSx3Cache("RBU_CODMOV", "X3_RELACAO" ) )
				//--------------------- Gravando RBU (RCL) ---------------------
				If RBU->(dbseek(xFilial("RBU", xFilial("RCL"))+ RCL->RCL_POSTO + cCODMOV ))
					lNovo := .F.
				Else
					lNovo := .T.
				EndIf
				
				RecLock("RBU", lNovo)	
				
				RBU->RBU_FILIAL	:= xFilial("RBU", xFilial("RCL"))
				RBU->RBU_POSTO	:= RCL->RCL_POSTO
				RBU->RBU_CODMOV	:= cCODMOV //GetSx8Num("RBU","RBU_CODMOV")
				RBU->RBU_DTAMOV	:= dDataBase
				RBU->RBU_OPERAC	:= "2"		//2=Atualizacao
				RBU->RBU_RESPON	:= cUserName
				
				If !Empty(aRBUCols)
					RBU->RBU_DTINI  := aRBUCols[nLenRBU,GDFieldPos("RBU_DTINI", aRBUHeader)]
					RBU->RBU_DTFIM  := aRBUCols[nLenRBU,GDFieldPos("RBU_DTFIM", aRBUHeader)]
					RBU->RBU_FILOCU := aRBUCols[nLenRBU,GDFieldPos("RBU_FILOCU", aRBUHeader)]
					RBU->RBU_CODOCU := aRBUCols[nLenRBU,GDFieldPos("RBU_CODOCU", aRBUHeader)]
					RBU->RBU_FILFUN := aRBUCols[nLenRBU,GDFieldPos("RBU_FILFUN", aRBUHeader)]
					RBU->RBU_MATFUN := aRBUCols[nLenRBU,GDFieldPos("RBU_MATFUN", aRBUHeader)]
				EndIf
			
				For nCount:= 1 To oRCLHeader:GetCount()
					cRCLFieldName:= oRCLHeader:GetItem(nCount)[__AHEADER_FIELD__]
					
					If cRCLFieldName $ "RCL_POSTO/RCL_TPOSTO/RCL_NPOSTO/RCL_OPOSTO/RCL_STATUS/RCL_DTINI/RCL_DTFIM/RCL_DTATU/RCL_ALI_WT/RCL_REC_WT" .OR.;
					   oRCLHeader:GetItem(nCount)[__AHEADER_CONTEXT__] $ "Vv "
						Loop
					EndIF
					
					cRBUFieldName:= StrTran(cRCLFieldName, "RCL", "RBU")
					nField:= RBU->(FieldPos(cRBUFieldName))
				
					If nField == 0
						Loop
					EndIF
					
					xValue:= RCL->(FieldGet(FieldPos(cRCLFieldName)))
								
					RBU->(FieldPut(nField, xValue))
				Next
			
				MsUnLock()
	
				//--------------------------------------------------------------
				// Enviar WF para aprovacao da Alteracao quando houver integracao
				If lIntRSP
	
					// Verifica se houve alteracao entre as tabelas RCL e SQS e envia WF
					// Campos Centro de Custo (QS_CC) e/ou função (QS_FUNCAO) com o centro do custo (RCL_CC) e função (RCL_FUNCAO) 
	
					ORGA30QRY(RBU->RBU_OPERAC)
	
				Endif
			EndIf
			
			
			If !lRCXEmpty
				For nCount:= 1 To Len(oRCXGetDados:aCols)
					aRow:= oRCXGetDados:aCols[nCount]
											
					If aRow[1] == "BPMSEDT3I" .OR. aRow[1] == "BPMSEDT2I" .OR.;
					   (aRow[1] == "BPMSEDT3" .And. bOcuSubs) //aRow[nPosRecNo] == 0	 .OR. aRow[nPosRecNo] == NIL	 //Inclusao
						
						//se for apenas cadastramento do substituto
						If bCadSubs
						    RecLock("RCX", .T.)
     						 RCX->RCX_FILIAL	:= xFilial("RCX")
						    RCX->RCX_POSTO	:= RCL->RCL_POSTO
						    RCX->RCX_CODMOV	:= Space(10)
					 	    For nField:= 1 to Len(oRCXGetDados:aHeader)
							     If Upper(oRCXGetDados:aHeader[nField, __AHEADER_CONTEXT__]) != "V"
								     RCX->(FieldPut(FieldPos( oRCXGetDados:aHeader[nField, __AHEADER_FIELD__]), aRow[nField]))
							     EndIf					
						    Next
		                RCX->RCX_DTINI := Ctod("  /  /    ")				
     					    RCX->RCX_DTCADS := dDataBase 	
						 
						    aRow[nPosRecNo]:= RCX->(RecNo())

						Else
						    xValue:= &(GetSx3Cache("RBU_CODMOV", "X3_RELACAO" ) )//GetSx8Num("RBU","RBU_CODMOV")
						
						    //------------------------ Gravando RCX ------------------------
						    If bOcuSubs //faz a ocupacao do posto pelo usbstituto  
                          RCX->(DBSetOrder(4))		
                          RCX->(DBSeek(xFilial("RCX") + M->(RCX_FILFUN+RCX_MATFUN+RCL_POSTO) ))
				              While !RCX->(Eof())
				               If RCX->RCX_FILIAL == xFilial("RCX") .AND.;
					               RCX->RCX_FILFUN == M->RCX_FILFUN .AND.;
					               RCX->RCX_MATFUN == M->RCX_MATFUN .AND.;
					               RCX->RCX_POSTO == M->RCL_POSTO .AND.;				
					               RCX->RCX_SUBST == "1"
					                RecLock("RCX", .F.)
					                RCX->RCX_DTINI := M->RCX_DTINI
					                MsUnlock()
					                Exit
					             Endif   
									 RCX->(DBSkip())
								  EndDo					
						    Else
							    RecLock("RCX", .T.)
							                                
							    RCX->RCX_FILIAL	:= xFilial("RCX")
							    RCX->RCX_POSTO	:= RCL->RCL_POSTO
							    RCX->RCX_CODMOV	:= xValue
				
						 	    For nField:= 1 to Len(oRCXGetDados:aHeader)
								     If Upper(oRCXGetDados:aHeader[nField, __AHEADER_CONTEXT__]) != "V"
									     RCX->(FieldPut(FieldPos( oRCXGetDados:aHeader[nField, __AHEADER_FIELD__]), aRow[nField]))
								     EndIf					
							    Next
										
							    MsUnlock()
								
							    aRow[nPosRecNo]:= RCX->(RecNo())
				          EndIf		
						    //--------------------------------------------------------------
						
						    //--------------------- Gravando RBU (RCX) ---------------------			
							 RecLock("RBU", .T.)
			
							 RBU->RBU_FILIAL	:= xFilial("RBU", xFilial("RCL"))
							 RBU->RBU_POSTO	:= RCL->RCL_POSTO
							 RBU->RBU_CODMOV	:= xValue
							 RBU->RBU_DTAMOV	:= dDataBase
							 RBU->RBU_OPERAC	:= "3"		//3=Ocupacao
							 RBU->RBU_RESPON	:= cUserName
						 	
							 For nField:= 1 to Len(oRCXGetDados:aHeader)
						    	  If Upper(oRCXGetDados:aHeader[nField, __AHEADER_CONTEXT__]) != "V"
									  nFieldPos:= RBU->(FieldPos(StrTran(oRCXGetDados:aHeader[nField, __AHEADER_FIELD__], "RCX", "RBU")))
									
									  If nFieldPos > 0
										   RBU->(FieldPut(nFieldPos, aRow[nField]))
									  EndIf
								  EndIf					
							 Next
							 If bOcuSubs			
								  RBU->RBU_DTINI:= M->RCX_DTINI		
						    EndIf				
						    MsUnlock()
						EndIf    
						//--------------------------------------------------------------
	
						//------------------------ Gravando SRA ------------------------
						If RCX->RCX_SUBST == "2" .AND.;
						   SRA->(DBSeek(	RCX->(RCX_FILFUN+RCX_MATFUN)	))
							RecLock("SRA", .F.)
								SRA->RA_POSTO := RCX->RCX_POSTO
								SRA->RA_DEPTO := RCL->RCL_DEPTO
							MsUnlock()					
						EndIf
						//--------------------------------------------------------------
					ElseIf aRow[1] == "BPMSEDT3E" .OR. aRow[1] == "BPMSEDT2E" //(ATail(aRow) == .T.)		//Exclusao			
						nField := aScan(oRCXGetDados:aHeader, { |aTemp| aTemp[__AHEADER_FIELD__] == "RCX_DTFIM" } )
	
						RCX->(dbGoto(aRow[nPosRecNo]))
	
						//------------------------ Gravando SRA ------------------------
						If RCX->RCX_SUBST = "2" .AND.;
						   SRA->(DBSeek(	RCX->(RCX_FILFUN+RCX_MATFUN)	))					   
							RecLock("SRA", .F.)
								SRA->RA_POSTO := Space(GetSx3Cache( "RA_POSTO" , "X3_TAMANHO" ))
								SRA->RA_DEPTO := Space(GetSx3Cache( "RA_DEPTO" , "X3_TAMANHO" ))
							MsUnlock()					
						EndIf
						//--------------------------------------------------------------
	
						//------------------------ Gravando RBU ------------------------										
						If RBU->(DBSeek(xFilial("RBU") + RCX->(RCX_POSTO+RCX_CODMOV) ))
							RecLock("RBU", .F.)
							RBU->RBU_DTFIM:= aRow[nField]
							MsUnlock()
						EndIf
						//--------------------------------------------------------------
	
						//------------------------ Apagando RCX ------------------------															
						RecLock("RCX", .F.)
						RCX->(dbDelete())
						MsUnlock()
						//--------------------------------------------------------------					
					EndIf
				Next
				//--------------------------------------------------------------
			EndIf
			
			nOcuPosto:= GetOcupCount(RCL->RCL_POSTO)
			
			//------------------------ Gravando RCL ------------------------
			RecLock("RCL", .F.)	
			RCL->RCL_OPOSTO	:= nOcuPosto
			RCL->RCL_STATUS	:= IIf(M->RCL_STATUS $ "1/2", IIF(nOcuPosto == 0, "1", "2"), M->RCL_STATUS)
			RCL->RCL_DTINI	:= M->RCL_DTINI
			RCL->RCL_DTFIM	:= M->RCL_DTFIM          
			MsUnLock()	
		
			While ( GetSX8Len() > nGetSX8Len )
				ConfirmSX8()
			End While
		EndIf		
	End Transaction
	
	If ExistBlock( "ORG030GRV" )	
		ExecBlock( "ORG030GRV", .F., .F., {nOpc, RCL->RCL_POSTO, RCL->RCL_DEPTO})     
	EndIf

	CursorArrow()
	
Return
        

Static Function GetOcupCount(cPosto)
	Local nCount:= 0
	
	RCX->(DBSetOrder(1))
	RCX->(DBSeek(xFilial("RCX") + cPosto )   )
	                                  
	While !RCX->(EOF()) .AND.;
			RCX->RCX_POSTO == cPosto 
		If RCX->RCX_SUBST = "2"
			nCount++
		EndIf
		
		RCX->(DBSkip())
	End While
Return nCount

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡„o    ³ORGA030Locks    ³Autor³Emerson Grassi Rocha³ Data ³15/09/2006³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡„o ³Bloqueia Lancamentos de Marcacoes /Apont/Abonos		       ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide parametros formais>									   ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide parametros formais>									   ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Retorno   ³NIL		                                               	   ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Observa‡„o³                                                      	   ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³ORGA030                                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function ORGA030Locks( nOpc , cAlias , aRecnos )
	Local lLocks	:= .T.
	
	Begin Sequence
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Se nao For Visualizacao				 					     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF ( nOpc != 2 .Or. ( lDesPosto .And. lIsORGA030 ) )
			Break
		EndIF
	
		IF !( lLocks := WhileNoLock( cAlias , aRecnos , { xFilial( cAlias ) + RCL->RCL_POSTO } , 1 , 1 , .T. , NIL ) )
			Break
		EndIF
	
	End Sequence
Return( lLocks )

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³ Funcion decide usda al presionar el boton de confirmacion  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function Decide( oRBUGetDados, oDlg, nOpc, nOpcAlt )
Local lRet := .T.
Local dDataFim := M->RCL_DTFIM
Local dDataIni := M->RCL_DTINI

If (M->RCL_TPCONT != "1")
	If Empty(dDataFim) .Or.	(dDataFim < dDataIni)
		Help(" ",1,".ORG30DFM.")
		M->RCL_DTFIM := cToD("//")
		lRet := .F.
	ElseIf Empty(dDataIni) .Or.	 (M->RCL_TPCONT != "1" .And. (dDataIni > dDataFim))
   		Help(" ",1,".ORG30DIN.")
		lRet := .F.
	Else	 
		If oRBUGetDados:TudoOk()
	    	nOpcAlt := 1
		    oDlg:End()
		Else
	    	lRet = .F.
		Endif
	EndIf	    
ElseIf(M->RCL_TPCONT == "1")
	If Empty(dDataIni)
		Help(" ",1,".ORG30DIN.")
   		lRet := .F.
   	Else
   		If oRBUGetDados:TudoOk()
	    	nOpcAlt := 1
		    oDlg:End()
   		Else
      		lRet = .F.
   		Endif
   	EndIf	  
EndIf	
Return( lRet )

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³RBUPostoInit	  ³Autor³Emerson Grassi     ³ Data ³15/09/2006³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Funcao de Inicializacao da Numeracao Automatica do RBU_POSTO³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³X3_RELACAO do campo RBU_POSTO		                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RBUPostoInit()
	Local IsInGetDados := IsInGetDados( { "RBU_POSTO" } )

	Local cNewPosto
	Local cNumRBUPosto
	
	IF ( IsInGetDados )
		CursorWait()
		cNumRBUPosto	:= GdNumItem( "RBU_POSTO" , RBUPostoGet() )
		cNewPosto		:= cNumRBUPosto
	EndIF

	cNumRBUPosto := GetNewCodigo("RBU","RBU_POSTO","RBU_FILIAL+RBU_POSTO",NIL,.F.,.F.,xFilial("RBU"),"P",cNewPosto)
	RBUPostoSet( cNumRBUPosto )
	
	IF ( IsInGetDados )
		CursorArrow()
	EndIF	
Return cNumRBUPosto

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³RBUPostoSet  ³Autor³Emerson Grassi Rocha  ³ Data ³15/09/2006³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Setar a Variavel Static cRBUPostoInit						³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³Generico                                            	   	³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RBUPostoSet( cNewItem )
	IF Empty( cNewItem )
		cNewItem := Replicate( "0" , GetSx3Cache( "RBU_POSTO" , "X3_TAMANHO" ) )
	EndIF	

	cRBUPostoInit := cNewItem
Return( NIL )

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³RBUPostoGet  ³Autor³Emerson Grassi Rocha  ³ Data ³15/09/2006³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Obter o Conteudo da Variavel Static cRBUPostoInit			³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³Generico                                            	   	³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RBUPostoGet()
	IF Empty( cRBUPostoInit )
		RBUPostoSet( NIL )
	EndIF
Return( cRBUPostoInit )

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³RBUPostoClear³Autor³Emerson Grassi Rocha  ³ Data ³15/09/2006³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Limpar a Variavel Static cRBUPostoInit						³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³Generico                                            	   	³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RBUPostoClear()
	cRBUPostoInit := NIL
Return( NIL )

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³ RbuWhen 	   ³Autor³Rogerio Ribeiro       ³ Data ³20/08/2006³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³When de Campos Dtini, DtFim, Filial Ocupante, Cod.Ocupante	³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³Generico                                            	   	³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RbuWhen()
	Local cOperac 	:= GdFieldGet("RBU_OPERAC") 
	Local cCampo	:= ReadVar()
	
	If RBU->(DBSeek( xFilial("RBU") + RCL->RCL_POSTO + GdFieldGet("RBU_CODMOV") ) )
		Return .F.
	EndIf
     
	Do Case
		Case (cOperac == "4")
			nVagos += nQtde
			nTotal += nQtde
		Case (cOperac == "2")
			nOcupados += nQtde
			nTotal += nQtde
	EndCase 
					

	If 	( cOperac == "4" .And. ( "RBU_DTINI" $ cCampo .Or. "RBU_DTFIM" $ cCampo .Or. "RBU_FILOCU" $ cCampo .Or. "RBU_CODOCU" $ cCampo ) ) .Or.;	//Cancelamento
		( cOperac == "5" .And. ( "RBU_FILOCU" $ cCampo .Or. "RBU_CODOCU" $ cCampo ) )	//Congelamento 
	
		lRet := .F.
	EndIf	
Return .T.

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³LegendDef	   ³Autor³Rogerio Ribeiro       ³ Data ³05/07/2007³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³											    		    ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³										              		³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function LegendDef()
	Local aCores:= {{"RCL->RCL_STATUS  = '1'",'BR_VERDE'},;	// Livre
					 {"RCL->RCL_STATUS  = '2' .AND. RCL_NPOSTO = RCL_OPOSTO",'BR_AMARELO'},;	// Ocupado Total
					 {"RCL->RCL_STATUS  = '2' .AND. RCL_NPOSTO <> RCL_OPOSTO",'BR_LARANJA'},;	// Ocupado Parcial
					 {"RCL->RCL_STATUS  = '3'",'BR_AZUL'},;		// Congelado
					 {"RCL->RCL_STATUS  = '4'",'BR_VERMELHO'}}	// Cancelado

Return aCores

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³LegendPopUp  ³Autor³Rogerio Ribeiro       ³ Data ³05/07/2007³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³											    		    ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³										              		³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function LegendPopUp()
	BrwLegenda(cCadastro, STR0034,	{{'BR_VERDE',	OemToAnsi(STR0035)},;	// Livre
										{ 'BR_AMARELO',	OemToAnsi(STR0094)},;	// Ocupado Total
										{ 'BR_LARANJA',	OemToAnsi(STR0093)},;	// Ocupado Parcial										
										{ 'BR_AZUL',		OemToAnsi(STR0038)},;	// Congelado
										{ 'BR_VERMELHO',	OemToAnsi(STR0037)} } )	// Cancelado

Return .T.

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³		       ³Autor³Rogerio Ribeiro       ³ Data ³05/07/2007³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³											    		    ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³										              		³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*Function RD0Relation(cField, lLocate)
	Local aSvKeys		:= GetKeys()
	Local aArea 		:= GetArea()
	Local aAreaRD0		:= RD0->( GetArea() )
	Local aAreaSRA		:= SRA->( GetArea("SRA") )
	Local cSvcCadastro  := cCadastro
	
	Local aFields		:= {	{"RBU_FILFUN", "RA_FILIAL"	},;
								{"RBU_MATFUN", "RA_MAT"		}	}	
	Local cEntidade 	:= "SRA"
	Local nPosField		:= AScan(aFields, {|aField| aField[1] == cField} )	

	Local cRD0Cod		:= &(ReadVar())
	Local cReturn		:= ""

	RDZ->(dbSetOrder(2))		//RDZ_FILIAL+RDZ_CODRD0+RDZ_EMPENT+RDZ_FILENT+RDZ_ENTIDA
		
	Begin Sequence
		If Empty(cRD0Cod)
			Break		
		EndIf

		If lLocate
			aChaves:= GetRDZRelations("SRA", cRD0Cod)

			If Len(aChaves) == 0
				Break
			EndIf

			DBSelectArea(cEntidade)
			
			If Len(aChaves) == 1
				(cEntidade)->(DBSeek(aChaves[1]))
			Else
				If !ConPad1(,,,"SRARDZ",,,.F.)
					Break
				EndIf
			EndIF
		EndIF
		
		cReturn:= (cEntidade)->&(aFields[nPosField, 2])
	End Sequence
	
	cCadastro := cSvcCadastro
	RestArea( aAreaSRA )
	RestArea( aAreaRD0 )
	RestArea( aArea )	
	RestKeys( aSvKeys , .T. )
	
Return cReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³			   ³Autor³Rogerio Ribeiro       ³ Data ³05/07/2007³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³											    		    ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³										              		³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function SRARDZFilter()
	Local lChkMod:= IIF(Left(cModulo,1)=="Q",Empty(SRA->RA_SITFOLH),.T.)
	Local lChkAce:= fChkAcesso() 
                                      
Return lChkMod .AND. lChkAce

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³			   ³Autor³Rogerio Ribeiro       ³ Data ³05/07/2007³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³											    		    ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³										              		³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function GetRDZRelations(cEntidade, cChave)
	Local aReturn	:= {}
	Local nPos
	Local cEmp:= cEmpAnt
	Local cFil:= xFilial(cEntidade, cFilAnt)

	If (nPos:= Ascan(aRDZRelations, {|aRelation|	aRelation[1] == cEntidade .AND.;
													aRelation[2] == cChave .AND.;
													aRelation[3] == cEmp .AND.;
													aRelation[4] == cFil})) > 0
		Return aRDZRelations[nPos, 5]
	EndIf        
	
	RDZ->(DBSetOrder(2)) //RDZ_FILIAL+RDZ_CODRD0+RDZ_EMPENT+RDZ_FILENT+RDZ_ENTIDA
	RDZ->(DBSeek(xFilial("RDZ") + cChave + cEmp + cFil + cEntidade))
	
	While 	RDZ->RDZ_FILIAL == xFilial("RDZ") .AND.;
			RDZ->RDZ_CODRD0 == cChave .AND.;
			RDZ->RDZ_EMPENT == cEmp .AND.;
			RDZ->RDZ_FILENT == cFil .AND.;
			RDZ->RDZ_ENTIDA == cEntidade .AND.;
			!RDZ->(Eof())
			
		//AAdd(aReturn, AllTrim(RDZ->RDZ_CODENT))
		AAdd(aReturn, RTrim(RDZ->RDZ_CODENT))
		RDZ->(DBSkip())
	EndDo

	If !Empty(aReturn)
		AAdd(aRDZRelations, {cEntidade, cChave, cEmp, cFil, aReturn})
	EndIf		
Return aReturn
*/

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³RBUFilOcuVld ³Autor³Rogerio Ribeiro       ³ Data ³05/07/2007³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Valida oconteudo do campo FILIAL DO OCUPANTE.    		    ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³X3_VALID do campo RBU_FILOCU, RBU_FILFUN              		³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*Function ValidBranch(cAlias)
	Local cBranch := &(ReadVar())
	                   
	If Empty(xFilial(cAlias)) .AND. !Empty(cBranch)
		Aviso(OemToAnsi(STR0024), OemToAnsi(STR0040 + " " + cAlias + " " + STR0041),{"OK"})	// Atencao ## Nao e necessario informar a FILIAL, pois o arquivo de participantes esta em modo compartilhado.
		Return .F.
	ElseIf !Empty(xFilial(cAlias)) .AND. Empty(cBranch)
		Aviso(OemToAnsi(STR0024), OemToAnsi(STR0042 + " " + cAlias + " " + STR0043),{"OK"})	// Atencao ## É necessario informar a FILIAL, pois o arquivo de participantes esta em modo exclusivo.
		Return .F.
	Endif
	
	If !Empty(cBranch) .AND. !ExistCpo("SM0", cEmpAnt + cBranch)
		Return .F.
	Endif
Return .T.
*/

//ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
//±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
//±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
//±±ºPrograma  ³ORGA030   ºAutor  ³Rogerio Ribeiro     º Data ³  07/05/07   º±±
//±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
//±±ºDesc.     ³                                                            º±±
//±±º          ³                                                            º±±
//±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
//±±ºUso       ³ X3_VALID do campo RBU_MATFUN                               º±±
//±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
//±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
//ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
Function ValidRBUMat()
	Local lRet		:=.T.
	Local cMatric := &(ReadVar())	
	
	If !Empty(cMatric)
		/*If Len(aChaves) == 0
			If !Empty(GDFieldGet("RBU_CODOCU", oRBUGetDados:nAt, .F., oRBUGetDados:aHeader, oRBUGetDados:aCols))
				Aviso(OemToAnsi(STR0024), OemToAnsi(STR0044), {"OK"})	//"Aviso" "Nenhum relacionamento encontrado para o participante selecionado!"
			Else
				Aviso(OemToAnsi(STR0024), OemToAnsi(STR0045), {"OK"})	//"Aviso" "Nenhum participante selecionado!"
			EndIf

			lRet:=.F.
		Else
			If AScan(aChaves, {|cTemp| cTemp == RTrim(M->RBU_FILFUN + cMatric) } ) == 0
				Aviso(OemToAnsi(STR0024), OemToAnsi(STR0046),{"OK"})	//"Aviso" "Matricula informada nao esta relacionado ao participante selecionado!"
				lRet:=.F.
            Else*/
				SRA->(dbSetOrder(1))
				SRA->(dbSeek(aChaves[1]))
				
				If SRA->RA_SITFOLH=="D"
					Aviso(STR0024, STR0048, {"Ok"}, NIL, STR0047)	//"Aviso" "A movimentação não é permitida para funcionarios demitidos." "Situação do funcionário"
					lRet:=.F.
				EndIf
			/*EndIf
		EndIf */
	EndIf
Return lRet


//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³RCLDDeptoInit	 ³Autor³Rogerio Ribeiro	  ³ Data ³30/01/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Inicializadora Padrao do Campo RCL_DDEPTO					³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³X3_RELACAO do campo RCL_DDEPTO								³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RCLDDeptoIni()
	Local cReturn	:= ""
	Local nOrder	:= RetOrdem("SQB" , "QB_FILIAL+QB_DEPTO" , .F. )

	cReturn:= VisualInit(	"SQB"		,; 	//Tabela de pesquisa da informacao
							nOrder		,;	//Ordem da tabela de pesquisa
							"RCL_DEPTO",;	//Campo da informacao origem 
							"RCL_DDEPTO",;	//Campo recebimento da informação
							"QB_DESCRIC",; //Campo de retorno da tabela origem
							"RCL_FILIAL")	 //Campo de retorno da filial origem
							
	If Empty(cReturn) .And. !Empty(RCL->RCL_DEPTO)
		cReturn := fdesc("SQB", RCL->RCL_DEPTO , 'QB_DESCRIC' )
	EndIf

Return cReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³RCLDCCInit		 ³Autor³Rogerio Ribeiro	  ³ Data ³30/01/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Inicializadora Padrao do Campo RCL_DCC						³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³X3_RELACAO do campo RCL_DCC									³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RCLDescCCIni()
	Local cReturn	:= ""
	Local nOrder		:= RetOrdem( "CTT" , "CTT_FILIAL+CTT_CUSTO" , .F. )
	Local lGetDados
	
	If !INCLUI
		lGetDados := IsInGetDados( { "RCL_DESCCC" , "RCL_CC" } )
		
		IF ( lGetDados )
			cReturn	:= PosAlias( "CTT" , GetMemVar( "RCL_CC" ), xFilial( "RCL" ) , "CTT_DESC01" , nOrder , .F. )
		Else
			cReturn	:= PosAlias( "CTT" , RCL->RCL_CC , xFilial("RCL") , "CTT_DESC01" , nOrder , .F. )
		EndIF
	EndIf
Return cReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³RCLDFuncInit	 ³Autor³Rogerio Ribeiro	  ³ Data ³30/01/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Inicializadora Padrao do Campo RCL_DFUNC						³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³X3_RELACAO do campo RCL_DFUNC								³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RCLDFuncIni()
	Local cReturn	:= ""
	Local nOrder	:= RetOrdem( "SRJ" , "RJ_FILIAL+RJ_FUNCAO" , .F. )
	
	IF ( IsInGetDados( {"RCL_DFUNC", "RCL_FUNCAO"} ) )
		cReturn:= Posicione("SRJ",nOrder,xFilial("SRJ")+ GetMemVar("RCL_FUNCAO"), "RJ_DESC")
	Else
		IF TYPE("INCLUI") == "L" .and. !INCLUI
          cReturn:= Posicione("SRJ", nOrder, xFilial("SRJ")+RCL->RCL_FUNCAO, "RJ_DESC")
	    Else   
    	   cReturn := ""
	    EndIf
	EndIf
Return cReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³RCLDCargIni	   ³Autor³Rogerio Ribeiro	³ Data ³30/01/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Inicializadora Padrao do Campo RCL_DCARGO					  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³X3_RELACAO do campo RCL_DCARGO							  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RCLDCargIni()
	Local cReturn	:= ""
	Local nOrder	:= RetOrdem( "SQ3" , "Q3_FILIAL+Q3_CARGO" , .F. )

	cReturn:= VisualInit(	"SQ3"		,; 	//Tabela de pesquisa da informacao
							nOrder		,;	//Ordem da tabela de pesquisa
							"RCL_CARGO "	,;	//Campo da informacao origem 
							"RCL_DCARGO",;	//Campo recebimento da informação
							"Q3_DESCSUM")	//Campo de retorno da tabela origem
							
	If Empty(cReturn) .And. !Empty(RCL->RCL_CARGO)
		cReturn := fdesc("SQ3", RCL->RCL_CARGO , 'Q3_DESCSUM' )
	EndIf
	
Return cReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³RCLDCargIni	   ³Autor³Rogerio Ribeiro	³ Data ³30/01/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Inicializadora Padrao do Campo RCL_DCARGO					  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³X3_RELACAO do campo RCL_DCARGO							  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RCLDProcIni()
	Local nOrder
	Local cReturn	:= ""

	If !INCLUI
		nOrder	:= RetOrdem( "RCJ" , "RCJ_FILIAL+RCJ_CODIGO", .F. )
		cReturn	:= VisualInit(	"RCJ"			,; 	//Tabela de pesquisa da informacao
					   				nOrder			,;	//Ordem da tabela de pesquisa
									"RCL_PROCES"	,;	//Campo da informacao origem 
									"RCL_DPROC "	,;	//Campo recebimento da informação
									"RCJ_DESCRI" 	)	//Campo de retorno da tabela origem
	EndIf
Return cReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³RCLDCargIni	   ³Autor³Rogerio Ribeiro	³ Data ³30/01/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Inicializadora Padrao do Campo RCL_DCARGO					  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³X3_RELACAO do campo RCL_DCARGO							  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RCXNOcuIni()
	Local nOrder
	Local cReturn	:= ""

	If !INCLUI
		nOrder	:= RetOrdem( "RD0" , "RD0_FILIAL+RD0_CODIGO", .F. )
		cReturn	:= VisualInit(	"RD0"			,; 	//Tabela de pesquisa da informacao
				   				nOrder			,;	//Ordem da tabela de pesquisa
								"RCX_CODOCU"	,;	//Campo da informacao origem 
								"RCX_NOMOCU"	,;	//Campo recebimento da informação
								"RD0_NOME  " 	)	//Campo de retorno da tabela origem
	EndIf
Return cReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³RCLDCargIni	   ³Autor³Rogerio Ribeiro	³ Data ³30/01/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³Inicializadora Padrao do Campo RCL_DCARGO					  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³<Vide Parametros Formais>									  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³<Vide Parametros Formais>									  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³X3_RELACAO do campo RCL_DCARGO							  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RCXNFunIni()
	Local nOrder
	Local cReturn	:= ""

	If !INCLUI
		nOrder	:= RetOrdem( "SRA" , "RA_FILIAL+RA_MAT", .F. )
		cReturn	:= VisualInit(	"SRA"			,; 	//Tabela de pesquisa da informacao
				   				nOrder			,;	//Ordem da tabela de pesquisa
								"RCX_MATFUN"	,;	//Campo da informacao origem 
								"RCX_NOMFUN"	,;	//Campo recebimento da informação
								"RA_NOME   " 	,;	//Campo de retorno da tabela origem
								"RCX_FILFUN")
	EndIf
Return cReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function OcuparPosto(cAlias, nReg, nOpc,lInclude)
	
	Local nCount 
	Local oNewLine
	Local lSchedule := lInclude
	Default lInclude:= .F.
	
	If M->RCL_STATUS $ "1/2"
		If !lInclude
			lInclude:= ShowOcuppant(.T., STR0056)
		Endif
		If lInclude	
			If M->RCX_SUBST = "2"
				M->RCL_OPOSTO+= 1
			EndIf
			
			If M->RCL_STATUS $ "1/2"
				M->RCL_STATUS:= IIF(M->RCL_OPOSTO == 0, "1", "2")
			EndIf
		
			If !lSchedule
				oNewLine:= ArrayList():New()
				                                            
				oNewLine:Add( IIF( GetMemVar("RCX_SUBST") == "2", "BPMSEDT3I", "BPMSEDT2I") )
	
				For nCount := 2 To Len(oRCXGetDados:aHeader)				
					oNewLine:Add( GetMemVar( oRCXGetDados:aHeader[nCount, __AHEADER_FIELD__] ) )
				Next              
		
				oNewLine:Add( .F. )		
				        
				If lRCXEmpty
					oRCXGetDados:aCols[1]:= oNewLine:ToArray()	
					lRCXEmpty:= .F.
				Else
					AAdd(oRCXGetDados:aCols, oNewLine:ToArray())		
				EndIf
		             
				oRCXGetDados:oBrowse:Refresh(.T.)
			Else
				RecLock("RCL",.F.)
					RCL->RCL_OPOSTO := M->RCL_OPOSTO
					RCL->RCL_STATUS := M->RCL_STATUS
				MsUnlock()
			EndIf
		EndIf
	Else
		If !lInclude	
			IF M->RCL_STATUS = "3"
				Alert(STR0054)//"Não é possivel ocupar o posto porque ele está congelado. "
			ElseIf M->RCL_STATUS = "4"
				Alert(STR0055)//"Não é possivel ocupar o posto porque ele está cancelado."
			EndIf
		Else
			IF M->RCL_STATUS = "3"
				aadd(_aLog,STR0054)//"Não é possivel ocupar o posto porque ele está congelado. "
			ElseIf M->RCL_STATUS = "4"
				aadd(_aLog,STR0055)//"Não é possivel ocupar o posto porque ele está cancelado."
			EndIf
		Endif
	EndIf	
Return


//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function ShowOcuppant(lInclui, cTitFunc)
	Local oRCXFields:= ArrayList():New()
	Local oRCXAltera:= ArrayList():New()
	Local nCount
	Local lConfirmed:= .F.
	Local cFieldName
	Local nTmpReg
	Local bBtnOk	:= {|| IF( lConfirmed:= ValidOcuppant(lInclui), oDlgOcupante:End(), .T.  ) }
	Local bBtnCancel:= {|| oDlgOcupante:End()}
	Local aAdvSize		:= MsAdvSize( , .T., 390)
	Local aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
	Local aObjCoords	:= {	{0,  0, .T., .T.}	}								
	Local aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
	Local lTmpInclui:= INCLUI
	
	DEFAULT cTitFunc := STR0056
	
	INCLUI:= lInclui

	For nCount := 1 To Len(oRCXGetDados:aHeader)
		cFieldName:= oRCXGetDados:aHeader[nCount, __AHEADER_FIELD__]

		oRCXFields:Add(cFieldName)

		If cFieldName == "RCX_REC_WT"
			nTmpReg:= IIf(lInclui, 0, oRCXGetDados:aCols[oRCXGetDados:oBrowse:nAt, nCount]	)
			Loop
		ElseIf cFieldName == "RCX_ALI_WT" .OR. cFieldName == "COLBMP"
			Loop
		EndIf
		
		If lInclui
			SetMemVar(cFieldName, CriaVar(cFieldName))
		Else 
			SetMemVar(cFieldName, oRCXGetDados:aCols[oRCXGetDados:oBrowse:nAt, nCount])
		EndIf
	Next
	
	If lInclui
		oRCXAltera:= oRCXFields:Clone()
		oRCXAltera:Remove("RCX_DTFIM")

		If M->(RCL_OPOSTO >= RCL_NPOSTO)
			oRCXAltera:Remove("RCX_SUBST")
			SetMemVar("RCX_SUBST", "1")
		EndIf
		
		If oProtheus:Dictionary:Table:IsShared("SRA")
			oRCXAltera:Remove("RCX_FILFUN")
			SetMemVar("RCX_FILFUN", Space(FWGETTAMFILIAL))
		EndIf

		If oProtheus:Dictionary:Table:IsShared("RD0")
			oRCXAltera:Remove("RCX_FILOCU")
			SetMemVar("RCX_FILOCU", Space(FWGETTAMFILIAL))
		EndIf		
	Else
		oRCXAltera:Add("RCX_DTFIM")
		SetMemVar("RCX_DTFIM", dDataBase)
	EndIf
                             			
	DEFINE MSDIALOG oDlgOcupante TITLE cCadastro + " - " + OemToAnsi(cTitFunc) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL
		Private oRCXEnchoice:= MsmGet():New(	"RCX",;
												nTmpReg,;
												IIF(lInclui, OPCAO_INCLUIR, OPCAO_ALTERAR),;
												NIL,;
												NIL,;
												NIL,;
												oRCXFields:ToArray(),;
												aObjSize[1]	,;
												oRCXAltera:ToArray(),;
												NIL,;
												NIL,;
												NIL,;
												oDlgOcupante,;
												NIL,;
												.F.,;
												NIL,;
												.F.;
											)
	ACTIVATE MSDIALOG oDlgOcupante CENTERED ON INIT	EnchoiceBar( oDlgOcupante, bBtnOk, bBtnCancel )
	
	INCLUI:= lTmpInclui
Return lConfirmed

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function ValidOcuppant(lInclui)
	Local lValid
	Local nCount
	Local cFolmes := ""
	Local cSem	  := ""
	
	If lInclui
	
		lValid:= RCXMatVld() .AND. RCXOcuVld()
		
		If lValid
			SRA->(DBSeek(	M->(RCX_FILFUN+RCX_MATFUN)	))
			fGetLastPer( @cFolMes,@cSem , SRA->RA_PROCES, fGetCalcRot('1') )
		EndIf
		
		If lValid// .AND. M->RCX_SUBST == "2"	
			
			For nCount:= 1 To Len(oRCXGetDados:aCols)
				If M->RCX_TIPOCU == GdFieldGet("RCX_TIPOCU", nCount, NIL, oRCXGetDados:aHeader, oRCXGetDados:aCols) .AND.;
				   M->RCX_FILFUN == GdFieldGet("RCX_FILFUN", nCount, NIL, oRCXGetDados:aHeader, oRCXGetDados:aCols) .AND.;
				   M->RCX_MATFUN == GdFieldGet("RCX_MATFUN", nCount, NIL, oRCXGetDados:aHeader, oRCXGetDados:aCols) .AND.;
				   M->RCX_CODOCU == GdFieldGet("RCX_CODOCU", nCount, NIL, oRCXGetDados:aHeader, oRCXGetDados:aCols)
				   
					Alert(STR0057)//"O funcionario já é ocupante do posto."
					lValid:= .F.
				EndIf
			Next
		EndIf
		
		If lValid .AND. M->RCX_SUBST == "2"
			RCX->(DBSetOrder(4))
			RCX->(DBSeek(xFilial("RCX") + M->(RCX_FILFUN+RCX_MATFUN) ))
			
			While !RCX->(Eof()) .AND.;
					RCX->RCX_FILIAL == xFilial("RCX") .AND.;
					RCX->RCX_FILFUN == M->RCX_FILFUN .AND.;
					RCX->RCX_MATFUN == M->RCX_MATFUN .AND.;
					RCX->RCX_CODOCU == M->RCX_CODOCU
				//Declarar variaveis
				
				oCombo := NIL
				AAUXJUST:= {} 
				
				nInc		:= 0
				nCont		:= 0
				nOption	:= 0
				nChoice	:= 1
				
				cOrd		:= "1"
				
				aJusti	:= {}
				aAuxJust	:= {}
				
				oInc		:= Nil
				oDlg		:= Nil
				oFont		:= Nil
				oCombo	:= Nil
				oBtnOk	:= Nil
				oBtnCl	:= Nil
				
				aAdvSize		:= {}
				aInfoAdvSize	:= {}
				aObjCoords	:= {}
				aObjSize		:= {}
				aGdCoord		:= {}
				bSet15		:= {||}
				bSet24		:= {||}
				
				
				If RCX->RCX_SUBST == "2"
					AAdd( aAuxJust, "1- Transferir" )
					AAdd( aAuxJust, "2- Substituto" )
					AAdd( aAuxJust, "3- Cancelar" )
				
										/*
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Monta as Dimensoes dos Objetos         					   ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
					aAdvSize := MsAdvSize( , .T., 100)
					aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }					 
					aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
					aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
						
					aGdCoord := { (aObjSize[1,1]+20), (aObjSize[1,2]+5), (((aObjSize[1,3])/100)*70), (((aObjSize[1,4])/100)*80) } 
					
										   
					DEFINE MSDIALOG oDlg FROM aAdvSize[7],0 TO aAdvSize[6]*0.70,aAdvSize[5] PIXEL TITLE OemToAnsi("Funcionário já alocado") //"Registros de Postos"

						@ aGdCoord[1]-15,aGdCoord[2]+5 SAY OemToAnsi("O Funcionário escolhido já é ocupante do posto " + RCX->RCX_POSTO + ". Qual é a operação que deseja realizar?") SIZE 250,10 FONT oFont PIXEL OF oDlg	  //"Total de Postos"
						@ aGdCoord[1],aGdCoord[2]+95 COMBOBOX oCombo VAR cOrd ITEMS aAuxJust SIZE 120,36 PIXEL OF oDlg
					
						oDlg:lEscClose := .F.
						oCombo:bChange := {|| nChoice := oCombo:nAt }
					
						bSet15	:= {|| nOption := 1, oDlg:End()}
						bSet24	:= {|| oDlg:End(), lValid := .F.}
	
					ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg , bSet15 , bSet24) CENTERED
									
					If nOption == 1
						If SubStr(cOrd,1,1) == '3'
								lValid:= .F.
						Elseif SubStr(cOrd,1,1) == '2'
							M->RCX_SUBST := "1"
						Else
							If MesAno(dDatabase) == cFolmes
								fTransAloc(RCX->RCX_FILFUN,RCX->RCX_MATFUN,RCX->RCX_POSTO,RCL->RCL_POSTO,dDaTaBase)
							Else
								MsgAlert(STR0107)
								lValid	:= .F.
							Endif
						EndIf
						Exit
					Endif
				
				Endif
				
				RCX->(DBSkip()) 
				
			EndDo					
		EndIf
	Else
		lValid:= RCXDtFVld()
	EndIf
Return lValid


//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function CongelarPosto(cAlias, nReg, nOpc)
	Local lReturn
	Local nGetSX8Len
	Local aNewRow	:= {}
	Local nCount
	Local nPosRecNo
	Local lIntRSP		:= GetMv("MV_IORGRSP", NIL, "0") == "1"
	Local lRetBlock
	
	If M->RCL_STATUS == "3"
		lReturn:= MsgYesNo(STR0060, cCadastro + " - " + STR0061)		//"Confirma o descongelamento do posto?"
	Else
		lReturn:= MsgYesNo(STR0059, cCadastro + " - " + STR0061)		//"Confirma o congelamento do posto?"
	EndIf

	If lReturn
		If ExistBlock("ORG030MOV")
			lRetBlock := ExecBlock( "ORG030MOV", .F., .F., {1, RCL->RCL_FILIAL, RCL->RCL_POSTO, RCL->RCL_DEPTO, RCL->RCL_STATUS})
			IF ValType(lRetBlock) == 'L'
				lReturn := lRetBlock
			Endif
		EndIf
    EndIf 

	If lReturn
		Begin Transaction 
			nGetSX8Len	:= GetSX8Len()
			nPosRecNo	:= aScan(oRBUGetDados:aHeader, { |aTemp| IsHeadRec( aTemp[__AHEADER_FIELD__] ) } )	
		
			If M->RCL_STATUS == "3"
				//------------------------ Gravando RCL ------------------------
				RecLock("RCL", .F.)				
				RCL->RCL_STATUS := IIF(M->RCL_OPOSTO == 0, "1", "2")
				MsUnLock()				
				//--------------------------------------------------------------		
			
				RBU->(DBSetOrder(1))
				RBU->(DBSeek(xFilial("RBU")+RCL->RCL_POSTO))
				
				While !RBU->(Eof()) .AND.;
						RBU->RBU_POSTO == RCL->RCL_POSTO 
					IF RBU->RBU_OPERAC == "4" .AND.;
					   Empty(RBU->RBU_DTFIM)
						//------------------------ Gravando RBU ------------------------
						RecLock("RBU", .F.)
						RBU->RBU_DTFIM	:= dDataBase
						MsUnLock()
						//--------------------------------------------------------------
						
						nCount:= Ascan(oRBUGetDados:aCols, {|aRow| aRow[nPosRecNo] == RBU->(RecNo())} )
						If nCount > 0
							oRBUGetDados:aCols[nCount, aScan(oRBUGetDados:aHeader, { |aTemp| aTemp[__AHEADER_FIELD__] == "RBU_DTFIM"  } )] := RBU->RBU_DTFIM
						EndIf
						
						Exit
					EndIf
	                     
					RBU->(DBSkip())
				Enddo
			Else
				//------------------------ Gravando RCL ------------------------
				RecLock("RCL", .F.)				
				RCL->RCL_STATUS := "3"	//3=Congelado			
				MsUnLock()				
				//--------------------------------------------------------------
				
				//------------------------ Gravando RBU ------------------------
				RecLock("RBU", .T.)
				
				RBU->RBU_FILIAL	:= xFilial("RBU", xFilial("RCL"))
				RBU->RBU_POSTO	:= RCL->RCL_POSTO
				RBU->RBU_CODMOV	:= &(GetSx3Cache("RBU_CODMOV", "X3_RELACAO" ) )//GetSx8Num("RBU","RBU_CODMOV")		
				RBU->RBU_DTAMOV	:= dDataBase
				RBU->RBU_DTINI	:= dDataBase
				RBU->RBU_OPERAC	:= "4"		//4=Congelamento
				RBU->RBU_RESPON	:= cUserName
			
				MsUnLock()
				
				For nCount:= 1 To Len(oRBUGetDados:aHeader)
					If IsHeadRec(oRBUGetDados:aHeader[nCount, __AHEADER_FIELD__])
						AAdd(aNewRow, RBU->(RecNo()))
					ElseIf IsHeadAlias(oRBUGetDados:aHeader[nCount, __AHEADER_FIELD__])
						AAdd(aNewRow, "RBU")
					Else
						AAdd(aNewRow, RBU->(&(oRBUGetDados:aHeader[nCount, __AHEADER_FIELD__]) )	)
					EndIf					
				Next

				AAdd(aNewRow, .F.)
				AAdd(oRBUGetDados:aCols, aNewRow)

				// Enviar WF para aprovacao do Congelamento quando houver integracao
				If lIntRSP
	
					// Verifica se existe integracao entre as tabelas RCL e SQS e envia WF
					ORGA30QRY(RBU->RBU_OPERAC)
	
				Endif			

			EndIf
	
			M->RCL_STATUS := RCL->RCL_STATUS
			
			While ( GetSX8Len() > nGetSX8Len )
				ConfirmSX8()
			End While

			If ExistBlock("ORG030MOV")
				ExecBlock( "ORG030MOV", .F., .F., {2, RCL->RCL_FILIAL, RCL->RCL_POSTO, RCL->RCL_DEPTO, RCL->RCL_STATUS})
			Endif
		End Transaction 
	EndIf
	
	oRBUGetDados:oBrowse:Refresh(.T.)			
Return lReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function CancelarPosto(cAlias, nReg, nOpc)
	Local nGetSX8Len
	Local lReturn 		:= MsgYesNo(STR0031, cCadastro + " - " + STR0062)//"A Operação de cancelamento nao poderá ser desfeita. Confirma o cancelamento do posto?"
	Local lIntRSP		   := GetMv("MV_IORGRSP", NIL, "0") == "1" 
	Local lRetBlock

	If RCL->RCL_OPOSTO != 0
		MsgStop(STR0111, STR0039)
		lReturn := .F.
	EndIf
	
	If lReturn
		If ExistBlock("ORG030MOV")
			lRetBlock := ExecBlock( "ORG030MOV", .F., .F., {3, RCL->RCL_FILIAL, RCL->RCL_POSTO, RCL->RCL_DEPTO, RCL->RCL_STATUS})
			IF ValType(lRetBlock) == 'L'
				lReturn := lRetBlock
			Endif
		EndIf
    EndIf 


	If lReturn
		Begin Transaction
			nGetSX8Len:= GetSX8Len()
			
			//------------------------ Gravando RCL ------------------------
			RecLock("RCL", .F.)			
			RCL->RCL_STATUS := "4"		//4=Cancelado			
			MsUnLock()				
			//--------------------------------------------------------------
			
			//------------------------ Gravando RBU ------------------------
			RecLock("RBU", .T.)			
			RBU->RBU_FILIAL	:= xFilial("RBU", xFilial("RCL"))
			RBU->RBU_POSTO	:= RCL->RCL_POSTO
			RBU->RBU_CODMOV	:= &(GetSx3Cache("RBU_CODMOV", "X3_RELACAO" ) )//GetSx8Num("RBU","RBU_CODMOV")		
			RBU->RBU_DTAMOV	:= dDataBase
			RBU->RBU_OPERAC	:= "5"		//5=Cancelamento
			RBU->RBU_RESPON	:= cUserName		
			MsUnLock()
			
			While ( GetSX8Len() > nGetSX8Len )
				ConfirmSX8()
			End While

			// Enviar WF para aprovacao do Cancelamento quando houver integracao
			If lIntRSP

				// Verifica se existe integracao entre as tabelas RCL e SQS e envia WF
				ORGA30QRY(RBU->RBU_OPERAC)

			Endif			

			If ExistBlock("ORG030MOV")
				ExecBlock( "ORG030MOV", .F., .F., {4, RCL->RCL_FILIAL, RCL->RCL_POSTO, RCL->RCL_DEPTO, RCL->RCL_STATUS})
			Endif
		End Transaction
	EndIf

	
Return lReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function MenuDef()
	Local aRetorno := {	{ STR0001 , "PesqBrw"			, 0 , 1 } ,; 	//"Pesquisar"
						{ STR0002 , "ORGA030Mnt"		, 0 , 2 } ,; 	//"Visualizar"
						{ STR0004 , "ORGA030Mnt"		, 0 , 4 } ,; 	//"Atualizar"
						{ STR0034 , "LegendPopUp"		, 0 , 6 } }		//"Legenda"
						
Return aRetorno

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RCXMatVld()	
	Local cFil:= GetMemVar("RCX_FILFUN")
	Local cMat:= GetMemVar("RCX_MATFUN")
	Local lReturn:= .T.

	If Empty(cMat)
		If GetMemVar("RCX_TIPOCU") == "1"
			lReturn:= .F.
			HELP(" ",1,"NVAZIO")
		EndIf
	Else
		SRA->(DBSetOrder(1))
		lReturn:= SRA->(DBSeek(cFil + cMat))
	
		If !lReturn
			HELP(" ",1,"REGNOIS")
		Else
			RunTrigger(1, NIL, NIL, NIL, "RCX_MATFUN")			
		EndIf
	EndIf
Return lReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RCXOcuVld()
	Local cFil:= GetMemVar("RCX_FILOCU")
	Local cCod:= GetMemVar("RCX_CODOCU")
	Local lReturn:= .T.

	If Empty(cCod) 
		if X3Obrigat("RCX_CODOCU")
			lReturn:= .F.
			HELP(" ",1,"NVAZIO")
		else
			If GetMemVar("RCX_TIPOCU") == "2"
				lReturn:= .F.
				HELP(" ",1,"NVAZIO")
			EndIf
		Endif
	Else
		RD0->(DBSetOrder(1))	
		lReturn:= RD0->(DBSeek(cFil + cCod))
		       
		If !lReturn
			HELP(" ",1,"REGNOIS")
		Else
			RunTrigger(1, NIL, NIL, NIL, "RCX_CODOCU")
		EndIf
	EndIf
Return lReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function DesocuparPosto()
	Local lConfirmed:= .F.
	Local cRowIcon:= GdFieldGet("COLBMP",;
								oRCXGetDados:oBrowse:nAt,;
								NIL,;
								oRCXGetDados:aHeader,;
								oRCXGetDados:aCols)
	Local nPosSub	:= GDFieldPos("RCX_SUBST",oRCXGetDados:aHeader)
								
	Private aCols	:= oRCXGetDados:aCols
	Private aHeader	:= oRCXGetDados:aHeader
	Private n		:= oRCXGetDados:oBrowse:nAt
	
	// Verifica se o Status esta Livre para apresentar mensagem
	If RCL->RCL_STATUS  == '1'
		Aviso(OemToAnsi(STR0024), OemToAnsi(STR0084),{"OK"})	// "Aviso" ### "Posto está com Status Livre e nao poderá ser desocupado!"
		
		If !(nPosSub > 0 .And. aCols[n,nPosSub] == "1" .And. MsgNoYes(OemToAnsi(STR0098), OemToAnsi(STR0112))) // Atenção # Deseja desalocar o substituto do posto?
			Return
		EndIf
	Endif

	IF GdDeleted()
		Return
	EndIf
	
	If !(cRowIcon == "BPMSEDT3E" .OR. cRowIcon == "BPMSEDT2E")
		lConfirmed:= ShowOcuppant(.F., STR0063)
		
		If lConfirmed .AND. !Empty(GetMemVar("RCX_DTFIM"))
			GdFieldPut(	"RCX_DTFIM", GetMemVar("RCX_DTFIM"))
			GdFieldPut(	"COLBMP", IIF( GetMemVar("RCX_SUBST") == "2", "BPMSEDT3E", "BPMSEDT2E") )

			If M->RCX_SUBST == "2"
				M->RCL_OPOSTO-= 1
			EndIf			
		EndIf		
	Else
		If Empty( GdFieldGet("RCX_REC_WT") )
			cRowIcon:= IIF( GdFieldGet("RCX_SUBST") == "2", "BPMSEDT3I", "BPMSEDT2I")
		Else
			cRowIcon:= IIF( GdFieldGet("RCX_SUBST") == "2", "BPMSEDT3", "BPMSEDT2")
		Endif
		
		GdFieldPut(	"RCX_DTFIM", CToD("") )					
		GdFieldPut(	"COLBMP", cRowIcon )
	
		If M->RCX_SUBST == "2"
			M->RCL_OPOSTO += 1
		EndIf					
	EndIf	
		
	If M->RCL_STATUS $ "1/2"
		M->RCL_STATUS:= IIF(M->RCL_OPOSTO == 0, "1", "2")
	EndIf

	oRCXGetDados:aCols:= aCols
	oRCXGetDados:Refresh()		
Return

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RCXSubsVld()
Return .T.           

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RCXTOcVld()
Return .T.

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function RCXDtFVld(dTmpData)
	Local lReturn:= .T.
	Default dTmpData:= GetMemVar("RCX_DTFIM")
	
	If Empty(dTmpData)
		lReturn:= .F.
		HELP(" ", 1, "NVAZIO")
	EndIf
Return lReturn

//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡…o    ³				   ³Autor³Rogerio Ribeiro	³ Data ³11/03/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡…o ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Parametros³															  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³															  ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function UpdRD4Desc(cEmpIdent, cFilIdent, cCodIdent, cDescric, cTipo)
	RDK->(DBSetOrder(1))
	RD4->(DBSetOrder(5))	
	RD4->(DBSeek(xFilial("RD4") + cEmpIdent + cFilIdent + cCodIdent)   )
	                                  
	While !RD4->(EOF()) .AND.;
			RD4->RD4_EMPIDE == cEmpIdent .AND.;
			RD4->RD4_FILIDE == cFilIdent .AND.;
			RD4->RD4_CODIDE == cCodIdent
			
		RDK->(DBSeek( xFilial("RDK") + RD4->RD4_CODIGO ) )

		If RDK->RDK_HIERAR == cTipo
			RD4->(RecLock("RD4", .F.))
			RD4->RD4_DESC := cDescric
			RD4->(MsUnlock())
		EndIf
			
		RD4->(DBSkip())
	End While
Return


//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡„o    |OrgRBUChange  ³ Autor ³ Leandro Drumond   ³ Data ³24/06/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡„o ³Verifica linha selecionada, se operacao for ALTERACAO,  	  |
//|			 |remonta get oRBUAtuGD										  |
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³OrgRBUChange()			  								  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³ORGA030                                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function OrgRBUChange(aHeaderRBU, aColsRBU)   
	Local aArea   		:= GetArea()
	Local cRBUFieldName := ''
	Local cCodAux		:= ''
	Local cBoxOri		:= ''
	Local cBoxAtu		:= ''
	Local lRegOk		:= .F.
	Local nPos    		:= oRBUGetDados:oBrowse:nAt
	Local nPosOri		:= 0
	Local nPosAtu		:= 0
	Local nPosCodMov    := 0
	Local nCount  		:= 0
	
	oRBUAtuGD:aCols := {}
	
	If ( oRBUGetDados:aCols[nPos,GDFieldPos("RBU_OPERAC", oRBUGetDados:aHeader)] == '2' )	
	    //Guarda posicao do Codigo de movimento 
		nPosCodMov := GDFieldPos("RBU_CODMOV", aHeaderRBU)
		//Guarda codigo de movimento selecionado
		cCodAux    := oRBUGetDados:aCols[nPos,GDFieldPos("RBU_CODMOV", oRBUGetDados:aHeader)]
	
	    //Guarda posicao do array do codigo de movimento selecionado
		nPosAtu := nPosOri := aScan( aColsRBU , { |x| x[nPosCodMov] == cCodAux } )
		
		//Procura codigo de movimento anterior que seja de atualizacao ou inclusao
		While !lRegOk
			nPosOri--
			If nPosOri == 0
				nPosOri := 1
			Endif
			lRegOk := ( aColsRBU[nPosOri,GDFieldPos("RBU_OPERAC", aHeaderRBU)] $ "1/2" )
			If (nPosOri - 1 ) == 0
				Exit
			Endif
		End While
	
		For nCount:= 1 To Len(aHeaderRBU)
			cRBUFieldName:= aHeaderRBU[nCount,__AHEADER_FIELD__]
	
			If !(cRBUFieldName $ "RBU_FILIAL/RBU_CODMOV/RBU_DTAMOV/RBU_OPERAC/RBU_POSTO/RBU_DEPTO/RBU_DTFANT/RBU_ORIGEM/RBU_RESPON/RBU_ESTRUT/RBU_REC_WT")
	            
				//Compara registro de origem com atual, existindo divergencia, as inclui na get de atualizacoes 
				If aColsRBU[nPosOri,nCount] != aColsRBU[nPosAtu,nCount]
					//Se registro for COMBOBOX - Mostrara valor do combo
					If !Empty(aHeaderRBU[nCount,__AHEADER_CBOX__])
	
						cBoxOri := cBoxAtu := aHeaderRBU[nCount,__AHEADER_CBOX__]
						
						If !Empty(aColsRBU[nPosOri,nCount])
							If ( ( nPos := At( aColsRBU[nPosOri,nCount] , cBoxOri ) ) > 0 )
								cBoxOri := SubStr( cBoxOri , nPos+2 )
							EndIf
							IF ( ( nPos := At( ";" , cBoxOri ) ) > 0 )
								cBoxOri := SubStr( cBoxOri ,1,--nPos )
							EndIf
						Else
							cBoxOri := ''
						EndIf
	
						If !Empty(aColsRBU[nPosAtu,nCount])
							If ( ( nPos := At( aColsRBU[nPosAtu,nCount] , cBoxAtu ) ) > 0 )
								cBoxAtu := SubStr( cBoxAtu , nPos+2 )
							EndIf
							IF ( ( nPos := At( ";" , cBoxAtu ) ) > 0 )
								cBoxAtu := SubStr( cBoxAtu ,1,--nPos )
							EndIf
						Else
							cBoxAtu := ''
						EndIf
						
						//Adiciona Nome do Campo, Valor Anterior e Valor Atual (Formatados de acordo com a PICTURE original do campo)
						aAdd( oRBUAtuGD:aCols, { aHeaderRBU[nCount,__AHEADER_TITLE__] , cBoxOri , cBoxAtu , .F. } )			
						
					Else
						//Adiciona Nome do Campo, Valor Anterior e Valor Atual (Formatados de acordo com a PICTURE original do campo)
						aAdd( oRBUAtuGD:aCols, { aHeaderRBU[nCount,__AHEADER_TITLE__] , Transform(aColsRBU[nPosOri,nCount],aHeaderRBU[nCount,__AHEADER_PICTURE__]) , Transform(aColsRBU[nPosAtu,nCount],aHeaderRBU[nCount,__AHEADER_PICTURE__]) , .F. } )
					EndIf
				EndIf
			EndIf
		Next
	Else
		aAdd(oRBUAtuGD:aCols , {'','','',.F.})
	EndIf
	If oRBUGetDados:lnewline
		oRBUGetDados:aCols[nPos,GDFieldPos("RBU_OPERAC", oRBUGetDados:aHeader)] := "6"
		oRBUGetDados:Refresh() 
	EndIf
	
	oRBUAtuGD:Refresh() 
	
	RestArea(aArea)
Return .T.

  
//ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
//³Fun‡„o    |MntHeaderAlt  ³ Autor ³ Leandro Drumond   ³ Data ³25/06/2008³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
//³Descri‡„o ³Monta aHeader que sera utilizado na get oRBUAtuGD		  	  |
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Sintaxe   ³MntHeaderAlt(aRBUAltHeader,aRBUHeader)					  ³
//ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
//³Uso       ³ORGA030                                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function MntHeaderAlt(aRBUAltHeader,aRBUHeader)

	Local nPos := GDFieldPos("GHOSTCOL",aRBUHeader)
	Local nX   := 0
	
	For nX := 1 to 3
		aAdd(aRBUAltHeader , aClone(aRBUHeader[nPos]) )
		aRBUAltHeader[nX,__AHEADER_WIDTH__] := 20
	Next nX
	
	aRBUAltHeader[1,__AHEADER_TITLE__] := STR0066	//Campo
	aRBUAltHeader[2,__AHEADER_TITLE__] := STR0064	//Valor Anterior
	aRBUAltHeader[3,__AHEADER_TITLE__] := STR0065	//Valor Atual

Return

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³fIncrPosit³ Autor ³Igor Franzoi           ³ Data ³28/01/2009³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Mostra a tela de parametros para solicitacao do aumento de  ³
³		   ³postos														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fIncrPosit													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³ 															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³ ORGA030													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function fIncrPosit( aParam, aHeaderRCL, aColsRCL)

Local lConfirm	:= .T.

Local nInc		:= 0
Local nCont		:= 0
Local nOption	:= 0
Local nChoice	:= 1

Local cOrd		:= "1"

Local aJusti	:= {}
Local aAuxJust	:= {}

Local oInc		:= Nil
Local oDlg		:= Nil
Local oFont		:= Nil
Local oCombo	:= Nil
Local oBtnOk	:= Nil
Local oBtnCl	:= Nil

Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjCoords	:= {}
Local aObjSize		:= {}
Local aGdCoord		:= {}
Local bSet15		:= {||}
Local bSet24		:= {||}
Local aNewRow		:= {}
Local nCount		:= 0

//Monta array com a tabela do SX5
fComboRHSX5( "BX",, @aJusti )

aAdd( aAuxJust, OemToAnsi(STR0108) )//"Reduzir quantidade de Postos"
For nCont := 1 To Len( aJusti )
	aAdd( aAuxJust, aJusti[ nCont, 03 ] )
Next
ASORT(aAuxJust)

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Monta as Dimensoes dos Objetos         					   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aAdvSize := MsAdvSize( , .T., 100)
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }					 
aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
	
aGdCoord := { (aObjSize[1,1]+20), (aObjSize[1,2]+5), (((aObjSize[1,3])/100)*70), (((aObjSize[1,4])/100)*80) } 

DEFINE FONT oFont BOLD

DEFINE MSDIALOG oDlg FROM aAdvSize[7],0 TO aAdvSize[6]*0.80,aAdvSize[5] PIXEL TITLE OemToAnsi(STR0006) //"Registros de Postos"

	@ aGdCoord[1]-15,aGdCoord[2]+5 SAY OemToAnsi(STR0072) SIZE 100,10 FONT oFont PIXEL OF oDlg	  //"Total de Postos"
	@ aGdCoord[1]-7,aGdCoord[2]+5 MSGET oInc VAR nInc PICTURE "99999" SIZE 060,10 PIXEL OF oDlg

	@ aGdCoord[1]-15,aGdCoord[2]+95 SAY OemToAnsi(STR0075) SIZE 100,10 FONT oFont PIXEL OF oDlg	  //"Justificativa"
	@ aGdCoord[1]-7,aGdCoord[2]+95 COMBOBOX oCombo VAR cOrd ITEMS aAuxJust SIZE 120,36 PIXEL OF oDlg

	oDlg:lEscClose := .F.
	oCombo:bChange := {|| nChoice := oCombo:nAt }

	bSet15	:= {|| nOption := 1, oDlg:End()}
	bSet24	:= {|| oDlg:End()}

ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg , bSet15 , bSet24) CENTERED

If ( nInc > 0 .and. nOption == 1 )
	If ( RCL->RCL_TPOSTO == "1" )
		If !MsgYesNo( OemToAnsi(STR0082), OemToAnsi(STR0024) )
			lConfirm := .F.
		EndIf
	EndIf

	If ( lConfirm )
		If	nChoice == Len(aAuxJust)
			If RCL->RCL_STATUS $ "1|2" 
				If !(RCL->RCL_NPOSTO == 1) .AND. (nInc <= (RCL->RCL_NPOSTO - RCL->RCL_OPOSTO))
					RecLock("RCL",.F.)
					RCL->RCL_NPOSTO -= nInc 
					MsUnlock()
					M->RCL_NPOSTO := RCL->RCL_NPOSTO
					
					RecLock("RBU", .T.)			
					RBU->RBU_FILIAL	:= xFilial("RBU", xFilial("RCL"))
					RBU->RBU_POSTO	:= RCL->RCL_POSTO
					RBU->RBU_CODMOV	:= &(GetSx3Cache("RBU_CODMOV", "X3_RELACAO" ) )//GetSx8Num("RBU","RBU_CODMOV")		
					RBU->RBU_DTAMOV	:= dDataBase
					RBU->RBU_OPERAC	:= "7"		//7=Redução
					RBU->RBU_RESPON	:= cUserName		
					MsUnLock()
					ConfirmSX8()
					
					MsgInfo( OemToAnsi(STR0076), OemToAnsi(STR0024) ) //"Solicitação efetuada!"/"Aviso"
					
					For nCount:= 1 To Len(oRBUGetDados:aHeader)
						If IsHeadRec(oRBUGetDados:aHeader[nCount, __AHEADER_FIELD__])
							AAdd(aNewRow, RBU->(RecNo()))
						ElseIf IsHeadAlias(oRBUGetDados:aHeader[nCount, __AHEADER_FIELD__])
							AAdd(aNewRow, "RBU")
						Else
							AAdd(aNewRow, RBU->(&(oRBUGetDados:aHeader[nCount, __AHEADER_FIELD__]) )	)
						EndIf					
					Next
					AAdd(aNewRow, .F.)
					AAdd(oRBUGetDados:aCols, aNewRow)
					oRBUGetDados:oBrowse:Refresh(.T.)
					
				Else
					MsgInfo(OemToAnsi(STR0109), OemToAnsi(STR0024)) //"Quantidade Disponível Invalida! Para estes casos utilize o Cancelamento."/"Aviso"
				EndIf
			Else
				MsgInfo(OemToAnsi(STR0110), OemToAnsi(STR0024)) //"Status invalido para Redução! Para estes casos utilize o Cancelamento."/"Aviso"
			EndIf
		Else
			If MsgYesNo( OemToAnsi(STR0073) + Alltrim(Str(nInc)) + CRLF + OemToAnsi(STR0074), OemToAnsi(STR0024) ) //"Confirma o aumento dos postos?"/"Aviso"
				aAdd( aParam, nInc )
				aAdd( aParam, aJusti[ nChoice, 02 ] )
				If ( fSolPosition( aParam, aHeaderRCL, aColsRCL ) )
					MsgInfo( OemToAnsi(STR0076), OemToAnsi(STR0024) ) //"Solicitação efetuada!"/"Aviso"
				Else
					MsgInfo( OemToAnsi(STR0077), OemToAnsi(STR0024) ) //"Erro ao gravar solicitação!"/"Aviso"
				EndIf
			EndIf
		EndIf
	EndIf

ElseIf ( nInc == 0 .and. nOption == 1 .and. lConfirm )
	MsgInfo( OemToAnsi(STR0078), OemToAnsi(STR0024) ) //"Para efetuar uma solicitação de aumento de postos o valor deverá ser maior que zero!"/"Aviso"
EndIf

Return ( Nil )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³fSolPosition ³Autor³Igor Franzoi		  ³ Data ³27/01/2009³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Solicitar aumento de postos - Grava solicitacao na RBT		³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Orga030()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function fSolPosition( aParam, aHeaderRCL, aColsRCL )

Local lRet		:= .T.
Local lAprova	:= SuperGetMV("MV_APRPOST",NIL,"S") == "S" //Se utiliza rotina de aprovação de posto
Local lIntRSP	:= ( GetMv("MV_IORGRSP", NIL, "0") == "1" .And. GetRpoRelease() >= "R7" )

Local cAliasRCL	:= ""
Local cAliasRBT := "RBT"
Local cCodJusti := ""

Local nQuant	:= 0
Local nOpcRCL	:= 0
Local nRecnoRCL	:= 0

Local aArea		:= GetArea()

nQuant		:= aParam[ 04 ]
nOpcRCL		:= aParam[ 02 ]
cAliasRCL	:= aParam[ 01 ]
nRecnoRCL	:= aParam[ 03 ]
cCodJusti	:= aParam[ 05 ]

dbSelectArea(cAliasRBT)
dbSetOrder( RetOrder("RBT", "RBT_FILIAL+RBT_DEPTO+RBT_CODMOV" ) )

If ( nOpcRCL > 0 .and. nRecnoRCL > 0 )
	If ( FieldPos("RBT_TIPOR") > 0 .and. FieldPos("RBT_CODPOS") > 0 )
	
		Begin Transaction
		
			RecLock(cAliasRBT,.T.)

			(cAliasRBT)->(RBT_FILIAL)	:= RCL->RCL_FILIAL 
			(cAliasRBT)->(RBT_CODMOV)	:= GetSx8Num("RBT","RBT_CODMOV")
			(cAliasRBT)->(RBT_DTAMOV)	:= dDataBase
			(cAliasRBT)->(RBT_DEPTO)	:= RCL->RCL_DEPTO
			(cAliasRBT)->(RBT_CC)		:= RCL->RCL_CC
			(cAliasRBT)->(RBT_FUNCAO)	:= RCL->RCL_FUNCAO
			(cAliasRBT)->(RBT_CARGO)	:= RCL->RCL_CARGO
			(cAliasRBT)->(RBT_PROCES)	:= RCL->RCL_PROCES
			If cPaisLoc == "MEX"
				(cAliasRBT)->(RBT_LOCPAG)	:= RCL->RCL_LOCPAG
			EndIf
			(cAliasRBT)->(RBT_TABSAL)	:= RCL->RCL_TABSAL
			(cAliasRBT)->(RBT_NIVEL)	:= RCL->RCL_NIVEL
			(cAliasRBT)->(RBT_FAIXSA)	:= RCL->RCL_FAIXSA
			(cAliasRBT)->(RBT_REMUNE)	:= RCL->RCL_SALAR
			(cAliasRBT)->(RBT_ENCARG)	:= RCL->RCL_ENCARG
			(cAliasRBT)->(RBT_BENEF)	:= RCL->RCL_BENEF
			(cAliasRBT)->(RBT_TPOSTO)	:= "2"
			(cAliasRBT)->(RBT_TPCONT)	:= RCL->RCL_TPCONT
			(cAliasRBT)->(RBT_QTDMOV)	:= nQuant
			(cAliasRBT)->(RBT_RESPON)	:= SubStr(cUsuario,7,15)
			(cAliasRBT)->(RBT_STATUS)	:= "3"
			(cAliasRBT)->(RBT_JUSTIF)	:= cCodJusti
			(cAliasRBT)->(RBT_ESTRUT)	:= RCL->RCL_ESTRUT
			(cAliasRBT)->(RBT_TIPOR)	:= "2"
			(cAliasRBT)->(RBT_CODPOS)	:= RCL->RCL_POSTO
			
			(cAliasRBT)->(MsUnlock())
			
			ConfirmSX8()
					
		End Transaction
		
	Else
		lRet := .F.
	EndIf
Else
	lRet := .F.
EndIf

If lRet .and.!lAprova
	lRet := OrgXAprova( (cAliasRBT)->RBT_FILIAL, (cAliasRBT)->RBT_CODMOV, "1", nQuant, cCodJusti, lIntRSP, , (cAliasRBT)->RBT_DEPTO )
	M->RCL_NPOSTO := RCL->RCL_NPOSTO
	If lRet
		If ExistBlock( "ORG10CON" )	
			ExecBlock("ORG10CON",.F.,.F.)     
		EndIf
	EndIf
EndIf

RestArea(aArea)

Return ( lRet )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³fComboRHSX5 ³ Autor ³Igor Franzoi           ³ Data ³28/01/2009³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Monta o Combo de Selecao a Partir do SX5					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fComboRHSX5													  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³ 															  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³ ORGA030													  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function fComboRHSX5( cTable, cKey, aList )

Local aArea 	:= GetArea()
Local cAliasQry 

Local cAuxFil	:= ""
Local cAuxDes	:= ""

DEFAULT cKey 	:= ""
DEFAULT aList	:= {}
DEFAULT cTable	:= Space(2)

#IFDEF TOP

	cAuxFil		:= xFilial("SX5")
	cAliasQry	:= GetNextAlias()
	
	BeginSQL alias cAliasQry
		SELECT X5_TABELA, X5_CHAVE, X5_DESCRI, X5_DESCSPA, X5_DESCENG
		FROM %table:SX5% SX5
		WHERE SX5.X5_FILIAL = %exp:cAuxFil% AND
			      SX5.X5_TABELA = %exp:cTable%
	EndSQL
		
	while ( (cAliasQry)->(!Eof()) )	
		cAuxDes := X5DESCRI(,cAliasQry,, .F., .F.)
		
		aAdd( aList, { (cAliasQry)->(X5_TABELA), (cAliasQry)->(X5_CHAVE), cAuxDes } )		
		(cAliasQry)->(dbSkip())
	EndDo
	(cAliasQry)->(dbCloseArea())
#ELSE

	dbSelectArea("SX5")
	dbSetOrder(RetOrder("SX5","X5_FILIAL+X5_TABELA+X5_CHAVE"))
	
	If ( cTable != "" )
	
		cAuxFil := xFilial("SX5")
	
		SX5->(dbSeek(cAuxFil+cTable+cKey))
		
		While SX5->( !Eof() .and. (X5_FILIAL == cAuxFil) .and. (X5_TABELA == cTable) )
			cAuxDes := X5DESCRI()
			aAdd( aList, { X5_TABELA, X5_CHAVE, cAuxDes } )
			SX5->(dbSkip())
		EndDo
	
	EndIf

#ENDIF

RestArea(aArea)

Return ( Nil )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ORGA30QRY     ºAutor  ³IP-RH Inovacao  º Data ³  09/02/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se existe Postos (ORG) associados a Vagas (RSP)   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ ORGA030                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ORGA30QRY(nOperac)

Local cWhere		:= ""
Private cAliasQry		:= GetNextAlias()
Default nOperac := "2"	// Alteracao

cWhere	:= "% SQS.D_E_L_E_T_ = ' ' AND SQS.QS_FILPOST = '" + RBU->RBU_FILIAL+ "' AND SQS.QS_POSTO = '" + RBU->RBU_POSTO +  "'"
cWhere  += " AND (SQS.QS_NRVAGA-SQS.QS_VAGAFEC) > 0 "
	
If nOperac == "2"	// Atualizacao
	cWhere  += " AND (SQS.QS_CC <> '" + RBU->RBU_CC + "' OR SQS.QS_FUNCAO <> '" + RBU->RBU_FUNCAO + "' )"
Endif

cWhere  += "%"
BeginSql alias cAliasQry
   	SELECT SQS.R_E_C_N_O_ AS RECNO ,SQS.QS_CC,SQS.QS_FUNCAO
	FROM %table:SQS% SQS 
	WHERE %exp:cWhere%
	ORDER BY QS_VAGA DESC
EndSql

If (cAliasQry)->( !Eof() )

	SQS->( dbGoTo( (cAliasQry)->RECNO ) )
	If nOperac == "2"	// Atualizacao
		WFAltVagas(1)

		// Rotina automatica de Inclusao de Vaga
		ORGXRSPINT(3,"RCL")

    ElseIf nOperac == "4"	// Congelamento
		WFCanConVagas(2)
		RecLock("SQS" , .F.)
			SQS->QS_VAGAFEC := SQS->QS_NRVAGA
		MsUnLock()

    ElseIf nOperac == "5"	// Cancelamento
		WFCanConVagas(1)
		RecLock("SQS" , .F.)
			SQS->QS_VAGAFEC := SQS->QS_NRVAGA
		MsUnLock()
 
	Endif

Endif

dbCloseArea()
dbSelectArea("RBU")

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FRCLRSPPOSTO  ³ Autor ³  Equipe RH	           ³ Data ³ 02/03/2012 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Consulta padrao para o campo QS_POSTO - Integracao ORG X RSP 		   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Pre-Requis³E obrigatorio que o parametro MV_IORGRSP esteja com o conteudo 	   ³±±
±±³			 ³igual a 1=Integracao Ativada                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³Nenhum                                                          	   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ORGA030 					                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function FRCLRSPPOSTO()
Local aArea			:= GetArea()
Local oDlgSXB		:= Nil   
Local oListBox		:= Nil
Local aPostos   	 := {} 
Local lRet			:= .F.
Local oCmbOrdem		:= Nil
Local aOrdem		:= {STR0085,STR0086,STR0087,STR0088,STR0089} // "Posto","Cod.Departamento","Cod.Centro de Custo","Cod.Função","Cod.Cargo"
Local nOrdem		:= 1  
Local cPesq			:= Space(40)
Local bPesq			:= {||fRCLRSPPesq(@oCmbOrdem,@aPostos,@oListBox,cPesq)}
Local lMultGroup 	:= .F.
Local cQuery		:= ""
Local cGrupos		:= ""
Local bOk			:= ""   
Local cTitulo		:= ""

Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}

Local aAdv1Size		:= {}
Local aInfo1AdvSize	:= {}
Local aObj1Size		:= {}
Local aObj1Coords	:= {}

Local aAdv2Size		:= {}
Local aInfo2AdvSize	:= {}
Local aObj2Size		:= {}
Local aObj2Coords	:= {}

Local cAliasQry		:= GetNextAlias()
Local cWhere		:= ""

aAdvSize	:= MsAdvSize(.T.,.T.,380)
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }					 
aAdd( aObjCoords , { 000 , 030 , .T. , .F.  } )  			//1- Cabecalho
aAdd( aObjCoords , { 000 , 000 , .T. , .T. , .T.  } )		//2- ListBox
aObjSize	:= MsObjSize( aInfoAdvSize , aObjCoords )

//Divisao em 2 Linhas o cabecalho
aAdv1Size		:= aClone(aObjSize[1])
aInfo1AdvSize	:= { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 1 , 1 }
aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )			//LINHA1
aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )			//LINHA2
aObj1Size		:= MsObjSize( aInfo1AdvSize , aObj1Coords)//,,.T. )   

//Divisao em colunas LINHA1 em duas colunas
aAdv2Size		:= aClone(aObj1Size[1])
aInfo2AdvSize	:= { aAdv2Size[2] , aAdv2Size[1] , aAdv2Size[4] , aAdv2Size[3] , 1 , 1 }
aAdd( aObj2Coords , { 260, 000 , .F. , .T. } )				//1-Coluna1
aAdd( aObj2Coords , { 000 , 000 , .T. , .T. } )			//3-Coluna2
aObj2Size		:= MsObjSize( aInfo2AdvSize , aObj2Coords,,.T. )  

cWhere := "% RCL.D_E_L_E_T_ = ' ' AND RCL.RCL_STATUS IN ('1','2') AND RCL.RCL_NPOSTO > RCL.RCL_OPOSTO"
// Verifica se o compartilhamento entre as tabelas RCL e SQS são iguais para filtrar apenas a filial logada
If xFilial("RCL") == xFilial("SQS")
	cWhere += " AND RCL.RCL_FILIAL = '" + xFilial("RCL")+ "'"
Endif
cWhere += " %"

BeginSql alias cAliasQry
   	SELECT RCL.RCL_FILIAL,RCL.RCL_POSTO,RCL.RCL_DEPTO,RCL.RCL_FUNCAO,RCL.RCL_CARGO,RCL.RCL_NPOSTO,RCL.RCL_TPOSTO,RCL.RCL_CC
	FROM %table:RCL% RCL 
	WHERE %exp:cWhere% AND 
	( NOT EXISTS ( SELECT QS_FILIAL,QS_POSTO 
					FROM %Table:SQS% SQS 
					WHERE QS_FILPOST = RCL.RCL_FILIAL AND QS_POSTO = RCL.RCL_POSTO AND SQS.%NotDel% ) OR
		(	EXISTS ( SELECT QS_FILIAL,QS_POSTO 
					FROM %Table:SQS% SQS 
					WHERE QS_FILPOST = RCL.RCL_FILIAL AND QS_POSTO = RCL.RCL_POSTO AND SQS.%NotDel% ) AND
			( SELECT SUM(QS_NRVAGA)  
					FROM %Table:SQS% SQS 
					WHERE QS_FILPOST = RCL.RCL_FILIAL AND QS_POSTO = RCL.RCL_POSTO AND SQS.%NotDel% ) <= RCL.RCL_NPOSTO
		)			
	)
	ORDER BY RCL_FILIAL,RCL_POSTO
EndSql
                                       
bOk		:= {||	M->QS_FILPOST := aPostos[oListBox:nAt][1], M->QS_POSTO := aPostos[oListBox:nAt][2], oDlgSXB:End(),lRet := .T.  }
cTitulo := OemToAnsi(STR0090) // "Cadastro de Postos não integrados"
			
If (cAliasQry)->(!Eof()) 
	While (cAliasQry)->(!Eof()) 
		If AScan(aPostos,{|x| x[1] == (cAliasQry)->RCL_POSTO }) <= 0
			Aadd(aPostos,{	(cAliasQry)->RCL_FILIAL,;
			               	(cAliasQry)->RCL_POSTO,;
							 (cAliasQry)->RCL_DEPTO,;
							 FDesc('SQB', (cAliasQry)->RCL_DEPTO, 'QB_DESCRIC'),;
							 (cAliasQry)->RCL_CC,;
							 FDesc('CTT', (cAliasQry)->RCL_CC, 'CTT_DESC01'),;							 
							 (cAliasQry)->RCL_FUNCAO,;
							 FDesc('SRJ', (cAliasQry)->RCL_FUNCAO, 'RJ_DESC'),;
							 (cAliasQry)->RCL_CARGO,;
							 FDesc('SQ3', (cAliasQry)->RCL_CARGO, 'Q3_DESCSUM'),;
							 If((cAliasQry)->RCL_TPOSTO=="1","Individual","Genérico"),;
							(cAliasQry)->RCL_NPOSTO	  })
  		EndIf
		(cAliasQry)->(dbSkip())
	EndDo
Endif
	
If Len(aPostos) <= 0  
	MsgAlert(STR0091)  	// "Nao existem postos livres!"
	Return(.F.)   
EndIf

//Tela de consulta
oDlgSXB := TDialog():New(aAdvSize[7],0,aAdvSize[6],aAdvSize[5],cTitulo,,,,,,,,oMainWnd,.T.) 
	
@ aObj1Size[1,1], aObj1Size[1,2] MSCOMBOBOX oCmbOrdem VAR nOrdem  ITEMS aOrdem SIZE 250,010 OF oDlgSXB ON CHANGE fRCLRSPOrdem(@oCmbOrdem,@aPostos,@oListBox) PIXEL
@ aObj2Size[2,1], aObj2Size[2,2] BUTTON OemToAnsi(STR0092) SIZE 041, 011 OF oDlgSXB PIXEL Action Eval(bPesq)  			//"Buscar"
@ aObj1Size[2,1], aObj1Size[2,2] MSGET cPesq SIZE 250, 010 OF oDlgSXB PIXEL Valid (Eval(bPesq))
	
oListBox := TWBrowse():New(aObjSize[2,1], aObjSize[2,2] ,aObjSize[2,3], aObjSize[2,4],,;
			{TITSX3("RCL_FILIAL")[1],;
			TITSX3("RCL_POSTO")[1],;
			TITSX3("RCL_DEPTO")[1],;
			TITSX3("RCL_DDEPTO")[1],;
			TITSX3("RCL_CC")[1],;
			TITSX3("RCL_DESCCC")[1],;
			TITSX3("RCL_FUNCAO")[1],;
			TITSX3("RCL_DFUNC")[1],;
			TITSX3("RCL_CARGO")[1],;
			TITSX3("RCL_DCARGO")[1],;
			TITSX3("RCL_TPOSTO")[1],;
			TITSX3("RCL_NPOSTO")[1]},;
			,oDlgSXB,,,,,,,,,,,,.F.,,.T.,,.F.,,,) 
oListBox:bLDblClick := bOk
		
fRCLRSPOrdem(@oCmbOrdem,@aPostos,@oListBox)
		
oDlgSXB:bInit := {|| EnchoiceBar(oDlgSXB, bOK, {||oDlgSXB:End()},,)}
oDlgSXB:lCentered := .T.
oDlgSXB:Activate(,,,.T.)

If lRet .AND. (INCLUI .OR. ALTERA)
	VAR_IXB := M->QS_POSTO
	dbSelectArea("RCL")
	dbSetOrder( RetOrder("RCL","RCL_FILIAL+RCL_POSTO") )
 	RCL->(DBSeek(M->QS_FILPOST + M->QS_POSTO))
EndIf

RestArea(aArea)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fRCLRSPPesq	³ Autor ³  Equipe RH	           ³ Data ³ 02/03/2012 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Realiza a pesquisa na listagem de Postos                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±± 
±±³Parametro ³ExpO1 - Objeto do combo de ordenacao  							   ³±±
±±³			 ³ExpA2 - Array de aliquotas S010  									   ³±±
±±³			 ³ExpO3 - Objeto da listbox		  									   ³±±
±±³			 ³ExpC4 - Texto para pesquisa										   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ORGA030                                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Static Function fRCLRSPPesq(oCmbOrdem,aPostos,oListBox,cPesq)

Local nPos		:= 0 
Local nOrdem	:= oCmbOrdem:nAt
Local nSize		:= 0

cPesq := AllTrim(Upper(cPesq))
nSize := Len(cPesq)

If nOrdem == 1		//Por codigo
	nPos := aScan(aPostos,{|x| x[2] == cPesq })
ElseIf nOrdem == 2
	//Ordena pelo codigo departamento
	nPos := aScan(aPostos,{|x| x[3] == cPesq })
ElseIf nOrdem == 3
	//Ordena pelo codigo centro de custo
	nPos := aScan(aPostos,{|x| AllTrim(x[5]) == cPesq })
ElseIf nOrdem == 4
	//Ordena pelo codigo funcao
	nPos := aScan(aPostos,{|x| x[7] == cPesq })
ElseIf nOrdem == 5
	//Ordena pelo codigo cargo
	nPos := aScan(aPostos,{|x| x[9] == cPesq })
EndIf

If nPos > 0
	oListBox:nAt := nPos
	oListBox:Refresh()
EndIf

Return .T.


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fRCLRSPOrdem  ³ Autor ³  Equipe RH	           ³ Data ³ 02/03/2012 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Realiza a pesquisa na listagem de Atividades, Condicao ou Modalidade ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±± 
±±³Parametro ³ExpO1 - Objeto do combo de ordenacao 							       ³±±
±±³			 ³ExpA2 - Array de aliquotas S010			   						   ³±±
±±³			 ³ExpO3 - Objeto da listbox		  									   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ORGA030                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fRCLRSPOrdem(oCmbOrdem,aPostos,oListBox)

Local nOrdem := oCmbOrdem:nAt

If nOrdem == 1 
	//Ordena pelo codigo posto
	ASort(aPostos,,,{|x,y| x[1]+x[2] < y[1]+y[2] })
ElseIf nOrdem == 2
	//Ordena pelo codigo departamento
	ASort(aPostos,,,{|x,y| x[3]+x[1]+x[2] < y[3]+y[1]+y[2] })
ElseIf nOrdem == 3
	//Ordena pelo codigo centro de custo
	ASort(aPostos,,,{|x,y| x[5]+x[1]+x[2] < y[5]+y[1]+y[2] })
ElseIf nOrdem == 4
	//Ordena pelo codigo funcao
	ASort(aPostos,,,{|x,y| x[7]+x[1]+x[2] < y[7]+y[1]+y[2] })
ElseIf nOrdem == 5
	//Ordena pelo codigo cargo
	ASort(aPostos,,,{|x,y| x[9]+x[1]+x[2] < y[9]+y[1]+y[2] })		
EndIf

oListBox:SetArray(aPostos)
oListBox:bLine := {||{	aPostos[oListBox:nAt][1],;
						aPostos[oListBox:nAt][2],; 
						aPostos[oListBox:nAt][3],; 
						aPostos[oListBox:nAt][4],;
						aPostos[oListBox:nAt][5],;
						aPostos[oListBox:nAt][6],;
						aPostos[oListBox:nAt][7],;
						aPostos[oListBox:nAt][8],;
						aPostos[oListBox:nAt][9],;
						aPostos[oListBox:nAt][10],;
						aPostos[oListBox:nAt][11],;
						aPostos[oListBox:nAt][12]}} 
oListBox:GoTop()
oListBox:Refresh()

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ ORG30PVLD    ³ Autor ³  Equipe RH	           ³ Data ³ 06/03/2012 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Realiza a validacao do campo Posto com a tabela RCL-SIGAORG          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±± 
±±³Parametro ³Nenhum                                 				     		   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ORGA030                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function ORG30PVLD()                                                                                                                     
Local lRet 		:= .F.
Local lIntRSP	   := GetMv("MV_IORGRSP", NIL, "0") == "1"
Local cCodPosto	:= &(ReadVar())

Local cAliasQry	:= GetNextAlias()
Local cWhere 	:= ""

dbSelectArea("RCL")
If !lIntRSP
	If Vazio() .Or. ( NaoVazio() .And. ExistCpo('RCL',xFilial("RCL") + cCodPosto ,2) )
		lRet := .T.
	EndIf
Else
	If NaoVazio()
		cWhere := "% RCL.RCL_FILIAL = '" + M->QS_FILPOST + "' AND RCL.D_E_L_E_T_ = ' ' AND RCL.RCL_STATUS IN ('1','2') AND RCL.RCL_NPOSTO > RCL.RCL_OPOSTO AND RCL.RCL_POSTO = '" + cCodPosto + "'%"
		
		BeginSql alias cAliasQry
		   	SELECT RCL.RCL_FILIAL,RCL.RCL_POSTO,RCL.RCL_DEPTO,RCL.RCL_FUNCAO,RCL.RCL_CARGO,RCL.RCL_NPOSTO,RCL.RCL_TPOSTO,RCL.RCL_CC
			FROM %table:RCL% RCL 
			WHERE %exp:cWhere% AND 
			( NOT EXISTS ( SELECT QS_FILIAL,QS_POSTO 
							FROM %Table:SQS% SQS 
							WHERE QS_FILPOST = RCL.RCL_FILIAL AND QS_POSTO = RCL.RCL_POSTO AND SQS.%NotDel% ) OR
				(	EXISTS ( SELECT QS_FILIAL,QS_POSTO 
							FROM %Table:SQS% SQS 
							WHERE QS_FILPOST = RCL.RCL_FILIAL AND QS_POSTO = RCL.RCL_POSTO AND SQS.%NotDel% ) AND
					( SELECT SUM(QS_NRVAGA)  
							FROM %Table:SQS% SQS 
							WHERE QS_FILPOST = RCL.RCL_FILIAL AND QS_POSTO = RCL.RCL_POSTO AND SQS.%NotDel% ) <= RCL.RCL_NPOSTO
				)			
			)
			ORDER BY RCL_FILIAL,RCL_POSTO
		EndSql

		If (cAliasQry)->(!Eof()) 
			lRet := .T.		
		Endif
				
		dbCloseArea()

		If !lRet		
			Help( " ",1,"REGNOIS")
		Endif

	Endif
Endif

dbSelectArea("SQS")
Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fOrTpCon   ³ Autor ³ 					    ³ Data ³ 21/05/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao da data Final						              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA030                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fOrTpCon()

If (M->RCL_TPCONT) == "1" 
	fOrDtIni()
EndIf                                    

Return( .T. )

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fOrDtIni   ³ Autor ³ 					    ³ Data ³ 21/05/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao da data Inicial						              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA030                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fOrDtIni()

If M->RCL_TPCONT $ "1"
	M->RCL_DTFIM := cToD("//")
EndIf

Return( .T. )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³RCXSetFil    ³Autor³Cecilia Carvalho      ³ Data ³21/09/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Define filial utilizada na consulta padrao, de acordo com 	³
³          ³filial indicada em RCX_FILFUN.                              ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>					³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>					³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Consulta padrao SRAORG	                         	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function RCXSetFil()
	Local xReturn

   xReturn := GetMemVar( "RCX_FILFUN" )
Return xReturn

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³fTransAloc   ³Autor³Gustavo M.		      ³ Data ³08/12/2014³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡ao ³Realiza a transferencia de posto do funcionario alocado.  	³
³          ³filial indicada para o identificador.                     	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³								                         	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function fTransAloc(cFilAloc,cMatAloc,cPostoDe,cPostoAte,dDataBase,lSchedule)

Local aArea			:= GetArea() 
Local aAreaRbu		:= RBU->( GetArea() )
Local lOk			:= .T.
Local cCCAux    	:= ""
Local cDeptoAux		:= ""
Local cItemAux		:= ""
Local cClasseAux	:= ""
Local cStatus		:= ""

Local nQtdeOcupante	:= 0
Local nCountPos		:= 0 

Default cMatAloc := ""
Default cPostoDe := ""
Default cPostoAte:= ""
Default dDataBase:= cTod("//")
Default lSchedule:= .F.

Begin Transaction
    
    dbSelectArea('RCL')
	RCL->(dbsetOrder(2))
	RCL->(dbSeek(xFilial('RCL')+cPostoAte))
	 
	If RCL->RCL_STATUS == "3"  .OR.  RCL->RCL_STATUS ==  "4" 
		If lSchedule
	  		aadd(_aLog,OemToAnsi(STR0101)+ OemToAnsi(STR0106) + RCL->RCL_POSTO)
	 	Else
			MsgAlert( OemToAnsi(STR0101) + CRLF + ;		// "O Posto esta com  Status 'Congelado' ou 'Cancelado'."
		  			  OemToAnsi(STR0102) + CRLF , ;		// "Consulte al administrador do sistema."		
		  	   		  OemToAnsi(STR0098) ) 				// "Atencao"
		 Endif
		 	lOk := .F. 
	
	Else
	 	nQtdeOcupante:= 0
	 	/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Verifica qtde de ocupantes no Posto. Nao deve permitir ocupacao³
		³ultrapassando o limite de ocupantes                            ³	
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		nQtdeOcupante +=  RCL->RCL_OPOSTO 
	 	If ( nQtdeOcupante  + 1 ) > RCL->RCL_NPOSTO
	 		If !lSchedule 
				MsgAlert( OemToAnsi(STR0103) + CRLF  + ;			// "Excedeu a quantidade maxima de ocupantes permitida para o posto."
						  OemToAnsi(STR0102) + CRLF+CRLF , ;		// "Consulte al administrador do sistema."
		  			  	  OemToAnsi(STR0098) ) 						// "Atencao"
		    Else
		    	aadd(_aLog,OemToAnsi(STR0103)+ OemToAnsi(STR0106) + RCL->RCL_POSTO)
		    Endif
			lOk := .F.
		EndIf 
	EndIf 
	
	If lOk
		      
		If !lSchedule
			RecLock('RCX',.F.) 
				dbDelete()
			MsUnlock()
		Else
			dbSelectArea('RCX')
			dbSetOrder(4)
			If dbSeek(xFilial('RCX')+cFilAloc+cMatAloc)
			   While RCX->(!EOF()) .And. xFilial('RCX')+cFilAloc+cMatAloc == RCX_FILIAL+RCX_FILFUN+RCX_MATFUN
			   		If RCX->RCX_SUBST == '2'
			   			cPostoDe := RCX->RCX_POSTO
			   			RecLock('RCX',.F.)
						RCX->RCX_POSTO := cPostoAte
						RCX->RCX_DTINI := dDataBase
						MsUnlock()
			   		Endif
			   		RCX->(dbSkip())
			   EndDo
			Else
				RecLock("RCX",.T.)
				RCX->RCX_FILIAL	:= xFilial("RCX")
				RCX->RCX_POSTO	:= cPostoAte
				RCX->RCX_TIPOCU := "1"
				RCX->RCX_DTINI  := dDataBase
				RCX->RCX_FILFUN := cFilAloc
				RCX->RCX_MATFUN	:= cMatAloc
				RCX->RCX_SUBST	:= "2"
				RCX->RCX_CODMOV	:= &(GetSx3Cache("RBU_CODMOV", "X3_RELACAO" ) )
				MsUnlock()
				
			Endif
		Endif
		
		// Finaliza a alocacao anterior
		dbSelectArea('RBU')
		If !Empty(cPostoDe) .And. dbSeek(xFilial('RBU')+cPostoDe) .And. cPostoDe <> cPostoAte
			While RBU->RBU_FILIAL+RBU_POSTO == xFilial('RBU')+cPostoDe
				If RBU->RBU_OPERAC == '3' .And. RBU->RBU_FILFUN + RBU->RBU_MATFUN == cFilAloc + cMatAloc
				   RecLock("RBU",.F.)
				   RBU->RBU_DTFIM := dDataBase
				   MsUnlock()
				Endif
		        RBU->(dbSkip())
		  	EndDo
		
			dbSelectArea('RCL')
			dbSetOrder(2)
			If dbSeek(xFilial('RCL')+cPostoDe)
				nCountPos := IF(RCL_OPOSTO > 0, RCL_OPOSTO - 1, 0)
				If	nCountPos == 0
					cStatus := "1"
				Else
					cStatus := "2"				
				Endif
				RecLock('RCL',.F.)
					RCL->RCL_OPOSTO := nCountPos
				    RCL->RCL_STATUS	:= cStatus
				MsUnlock()
			Endif
			dbSeek(xFilial('RCL')+cPostoAte)
		Endif
		
		If	lSchedule
			//gravacao do historico
	
			lGrvRbu:= .T.
			
			dbSetOrder(1)
	
			RecLock("RBU", .T.)
			If lGrvRbu			
				RBU->RBU_FILIAL	:= xFilial("RBU", xFilial("RCL"))
				RBU->RBU_POSTO	:= cPostoAte
				RBU->RBU_CODMOV	:= &(GetSx3Cache("RBU_CODMOV", "X3_RELACAO" ) )
				RBU->RBU_DTAMOV	:= date()
				RBU->RBU_OPERAC	:= "3"		//2=Atualizacao
				RBU->RBU_RESPON	:= cUserName
				RBU->RBU_DTINI  := date()
				RBU->RBU_FILFUN := cFilAloc
				RBU->RBU_MATFUN := cMatAloc
				
				MsUnlock()
			
				dbSelectArea('RCL')
				RCL->(dbsetOrder(2))
				If RCL->(dbSeek(xFilial('RCL')+cPostoAte))
					M->RCL_STATUS := RCL->RCL_STATUS
					M->RCL_OPOSTO := RCL->RCL_OPOSTO
				EndIf
			
				dbSelectArea('RCX')
				dbSetOrder(4)
				If dbSeek(xFilial('RCX')+cFilAloc+cMatAloc)
					M->RCX_SUBST := RCX->RCX_SUBST
				Else
					M->RCX_SUBST := "2"
				EndIf
			
				OcuparPosto(,,,.T.)
			Endif    	
		Endif
		
	    If cPostoDe <> cPostoAte
			dbSelectArea("SRA")
			dbSeek(cFilAloc+cMatAloc)
			cCCAux			:= SRA->RA_CC
			cDeptoAux		:= SRA->RA_DEPTO
			cItemAux		:= SRA->RA_ITEM
			cClasseAux		:= SRA->RA_CLVL 
			
			RecLock("SRA",.F.)
			SRA->RA_POSTO 	:= RCL->RCL_POSTO
			
			dbSelectArea("SRE")
			Reclock("SRE",.T.)
			SRE->RE_DATA  	:= dDataBase
			SRE->RE_EMPD    := cEmpAnt
			SRE->RE_EMPP    := cEmpAnt
			SRE->RE_FILIALD := cFilAloc
			SRE->RE_FILIALP := cFilAloc
			SRE->RE_MATD	:= cMatAloc
			SRE->RE_MATP	:= cMatAloc
			SRE->RE_CCD     := cCCAux
			SRE->RE_CCP		:= cCCAux
			SRE->RE_DEPTOD	:= cDeptoAux
			SRE->RE_DEPTOP  := cDeptoAux
			SRE->RE_POSTOD	:= cPostoDe
			SRE->RE_POSTOP	:= cPostoAte
		    SRE->RE_ITEMD	:= cItemAux
		    SRE->RE_ITEMP	:= cItemAux
		    SRE->RE_CLVLD	:= cClasseAux
		    SRE->RE_CLVLP	:= cClasseAux
		    SRE->RE_TRFUNID := 0
		    MsUnlock()
		Endif
	Endif    

End Transaction

RestArea(aArea)
RestArea(aAreaRbu)
	 
Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³VldOpRBU   ³ Autor ³ 					    ³ Data ³ 28/11/14 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao alteração de linha					              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA030                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function VldOpRBU()

	Local nPos    		:= oRBUGetDados:oBrowse:nAt
	If ( oRBUGetDados:aCols[nPos,GDFieldPos("RBU_OPERAC", oRBUGetDados:aHeader)] <> '6' )	
		Alert(STR0100)//"Somente linhas com tipo de operação 6=Agendamento podem ser alteradas."                                                                                                                                                                                                                                                                                                                                                                                                                                            
		return .f.
	Else
		M->RBU_OPERAC := '6'
	EndIf

Return( .T. )

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ORGJOB   ³ Autor ³ 					    ³ Data ³ 28/11/14 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Job para movimentação de postos				              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA030                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function ORGJOB(aParam) 
Local _lJob
Local _cEmp
Local _cFil                  
Local _aArea 	:= "" 
Local cEmpAtual := ""
Local aEmps		:= {}
Local nI				:= 1
Private _aLog := {}

If Valtype(aParam) != "A"
	_lJob := .F.
	_cFil := FWCodFil()
	_cEmp := FWCodEmp() 
Else
	_lJob := aParam[1][1]
	_cEmp := aParam[1][2]
	_cFil := aParam[1][3]
EndIf

If _lJob
	// Seta Ambiente
	RpcSetType(3)
	RpcSetEnv(_cEmp, _cFil,, 'GPE' ) 	

EndIf

_aArea := GetArea()

aEmps :=  FWLoadSM0()


cEmpAtual := _cFil
For nI := 1 To Len(aEmps)
	_aLog := {}
		If cEmpAtual <> aEmps[nI][02]
				_cEmp			:= aEmps[nI][01]
				_cFil			:= aEmps[nI][02]
				
				RestArea(_aArea)
				RpcClearEnv()
				RpcSetType(3)
				RpcSetEnv(_cEmp, _cFil )
				_aArea := GetArea()
				cEmpAtual := _cFil
		EndIf	 
		aadd(_aLog,Replicate("*",50))
		aadd(_aLog,"PROCESSAMENTO ORGJOB INICIO - " + DTOC(DATE()) + " HORA : " + TIME())
		aadd(_aLog,Replicate("*",50))
		
		//Busca dados na RBU
		dbSelectArea("RBU")
		RBU->(dbSetOrder(1))
		RBU->(dbSeek(xFilial("RBU",FWCodFil())))
		While !RBU->(EOF()) .And. RBU->RBU_FILIAL == xFilial("RBU",FWCodFil())
			If RBU->RBU_OPERAC <> '6' .Or. !Empty(RBU->RBU_DTFIM)
				RBU->(dbSkip())
				Loop
			EndIf
		
			If RBU->RBU_DTINI <> date()
				RBU->(dbSkip())
				Loop
			EndIf
			
			If !Empty(RBU->RBU_DTFIM)
				RBU->(dbSkip())
				Loop
			EndIf
			aadd(_aLog,"CODMOV :" + RBU->RBU_CODMOV)
			////////////////////////////////////////////////////////
			//CHAMADA DA FUNCAO QUE MOVIMENTA POSTOS////////////////
			fTransAloc(RBU->RBU_FILFUN,RBU->RBU_MATFUN,"",RBU->RBU_POSTO,dDataBase,.T.)
			
			////////////////////////////////////////////////////////
			RecLock("RBU",.F.)
				RBU->RBU_DTFIM:= dDataBase		
			MsUnLock()
			
			RBU->(dbSkip())
		EndDo
		
		
		aadd(_aLog,Replicate("*",50))
		aadd(_aLog,"PROCESSAMENTO ORGJOB FIM - " + DTOC(DATE()) + " HORA : " + TIME())
		aadd(_aLog,Replicate("*",50))
		
		GeraLog("ORGJOB_"+FWCodFil(),_aLog)
Next nI	
RestArea(_aArea)

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³GeraLog   ³ Autor ³ 					    ³ Data ³ 28/11/14 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para gravar arq TXT				              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA030                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GeraLog(cNomeArq,aDados)
Local aArea := GetArea()
Local cArq 	:= ""                                     
Local nHdlA       
Local cServer:= "\_logs\"      
Local nI	 := 0


If !ExistDir(cServer) 
	if makeDir( cServer ) != 0
			Alert(STR0104)   
		return
	endIf                    
EndIf         
cNome := cNomeArq + "_"+dtos(date())+"_"+Replace(Time(),":","")+".log"
If !File (cServer + "\" +cNome)
	nHdlA  := fCreate( cServer + "\" +cNome)
Else
	If fErase(cServer + "\" +cNome) >= 0
		nHdlA  := fCreate( cServer + "\" +cNome)
	Else      
		Alert(STR0105)
		Return	
	EndIf
EndIf

For nI := 1 To Len(aDados)
	cArq := aDados[nI] + chr(13)+chr(10)
	fWrite(nHdlA,cArq,Len(cArq)) 
Next nI

fClose(nHdlA)                                   

RestArea(aArea)

Return


/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
±±³Fun‡…o    ³SraF3Ident   ³Autor³Allyson Mesashi       ³ Data ³24/11/2014³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
±±³Descri‡ao³Executa a consulta padrao                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_F3 do campo RCX_MATFUN					               	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function SraF3Ident()
 
Local aArea 	:= GetArea()
Local cFilMat   := ""
Local lGetDados	:= !IsInCallStack("ShowOcuppant")
Local lRet		:= .F.     
	
If lGetDados
	cFilMat   := GdFieldGet("RCX_FILFUN")
	SetMemVar("RCX_FILFUN", cFilMat)		
Else
	cFilMat   := GetMemVar("RCX_FILFUN")
Endif

If Empty(cFilMat)
  //	Aviso(oEmToAnsi(STR0098), oEmToAnsi(STR0099), {"OK"}) //Atenção##"Informe primeiro a filial"
	Return lRet
EndIF

dbSelectArea("SRA")
dbSetOrder(1)

lRet := Conpad1(NIL, NIL, NIL, "SRAORG", NIL, NIL, .F.)

RestArea( aArea )

Return lRet
