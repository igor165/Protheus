#INCLUDE "PROTHEUS.CH"
#INCLUDE "GPEM610.CH"
#INCLUDE "FWPrintSetup.ch"
#INCLUDE "RPTDEF.CH"

Static lGpe610Rem := ExistBlock("GPE610REM")
Static lGpmSalFam := ExistBlock("GPM610SalFam")
Static lGP610NMv  := ExistBlock("GP610NMV")
Static lGpm610M   := ExistBlock("GPM610M")
Static lGpSalMat  := ExistBlock("GP610SalMat")
Static lGpmTp20   := ExistBlock("GPM610TP20")
Static lGpmTOM    := ExistBlock("GPM610TOM")
Static lExistPE	  := ExistBlock("GP610AFAS")
Static lGpm610Q   := ExistBlock("GPM610Q")
Static lTemPdSup  := ChkFile("RCM") .And. RCM->( ColumnPos("RCM_PDSUP") ) > 0

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o  ³ GPEM610 ³ Autor ³ Mauro                          ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gera arquivo com os dados do FGTS e INSS - SEFIP                 ´±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³        ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ FNC/Chamado ³  Motivo da Alteracao                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³L.Trombini  ³14/01/14³------       ³Unificação dos fontes                    ³±±
±±³Christiane V³27/07/14³   TQCN99    ³Atualização da variável cTab e cAnoMes   ³±±
±±³Emerson Camp³15/08/14³   TQFYNC    ³Inserido validações para ausência de     ³±±
±±³            ³        ³             ³Mat Final e Período/Roteiro inexistente  ³±±
±±³Allyson M.  ³23/10/14³TQJZHW       ³Ajuste na verificacao da base de FGTS sem³±±
±±³            ³        ³             ³13o p/ considerar o Id 0293.             ³±±
±±³M. Silveira ³24/10/14³TQTJQ8       ³Ajuste na SEFIP para abater o valor do   ³±±
±±³            ³        ³             ³Aviso Previo Indenizado e a Media de     ³±±
±±³            ³        ³             ³Aviso Previo.                            ³±±
±±³M. Silveira ³12/01/14³TRGFO0       ³Ajuste para abater o valor do Aviso e a  ³±±
±±³            ³        ³             ³Media Indenizados somente quando houver  ³±±
±±³            ³        ³             ³incidencia.                              ³±±
±±³Allyson M.  ³20/02/15³TRPQ29       ³Ajuste p/ validacao de base de INSS p/   ³±±
±±³            ³        ³             ³nao enviar base negativa.                ³±±
±±³M. Silveira ³06/05/15³TT7637       ³Ajuste para fazer a carga das tabelas    ³±±
±±³            ³        ³             ³auxiliares para nao gerar erro em funcao ³±±
±±³            ³        ³             ³de alguma alteracao na tabela S038.      ³±±
±±³M. Silveira ³31/08/15³TTFQYM       ³Ajuste na FDiasAfast p/ nao gerar erro ao³±±
±±³            ³        ³             ³pesquisar afastamentos de funcionario que³±±
±±³            ³        ³             ³nao possui periodo ativo da data.        ³±±
±±³Christiane V³04/11/15³TTRRVO       ³Tratamento do par. MV_SOMAVIS p/abater ou³±±
±±³            ³        ³             ³nao Vlr e a Media do A.Previo Indenizado.³±±
±±³Allyson M.  ³22/12/15³TUAFN0       ³Ajuste p/ geracao de SEFIP de 13o.       ³±±
±±³Allyson M.  ³08/01/16³TUEH78		  ³Ajuste p/ geracao de SEFIP de Folha de  	³±±
±±³            ³        ³             ³Dezembro p/ nao gerar a base de INSS de  ³±±
±±³            ³        ³             ³13o. se nao houver diferenca de 13o.     ³±±
±±³Claudinei S.³03/02/16³TUKZWN  	  ³Incluida geracao do arquivo TXT para     ³±±
±±³            ³        ³             ³Atualizacao da FAP no programa da SEFIP, ³±±
±±³            ³        ³             ³incluido novo pergunte Gera Atu.FAP?.    ³±±
±±³            ³        ³             ³DBF_TIPO32 o registro de movimentacao do ³±±
±±³            ³        ³             ³trabalhador U3 - Aposentadoria por inva- ³±±
±±³            ³        ³             ³lidez nao estava sendo gerado no arquivo.³±±
±±³Flavio C.   ³17/02/16³TUNL66   	  ³Inclusão de registro 32 para transferidos³±±
±±³            ³        ³             ³sem movimento de cnpj's diferentes       ³±±
±±³Gustavo M.  ³28/03/16³TUUZY3    	  ³Ajuste na geração para funcionario demiti³±±
±±³            ³        ³             ³dos, e para funcionarios transferidos.   ³±±
±±³Renan Borges³10/06/16³TVGSVS    	  ³Ajuste na geração da SEFIP por tomador pa³±±
±±³            ³        ³             ³ra gerar os registro do tipo 21 correta- ³±±
±±³            ³        ³             ³mente.                                   ³±±
±±³Claudinei S.³08/07/16³TUKZWN/TVP136³Ajuste para gravar corretamente o CEI no ³±±
±±³            ³        ³             ³TXT da atualização da FAP,tratamento para³±±
±±³            ³        ³	    	  ³verificar a existencia do novo pergunte  ³±±
±±³            ³        ³             ³Merge para a 12.1.12.	   			    ³±±
±±³Cícero Alves³03/08/16³TVSJV4		  ³Alterado escopo da variável nB13Ant		³±±
±±³Allyson M.  ³26/08/16³TVRUMR		  ³Ajuste na mensagem de validação das tabe-³±±
±±³            ³        ³             ³las S037 e S038  						³±±
±±³Renan Borges³29/08/16³TVYIG1       ³Ajuste para gerar SEFIP 650 corretamente ³±±
±±³            ³        ³             ³quando parametro "Somente Dissidio?" esti³±±
±±³            ³        ³             ³ver com "Sim", levando somente os funcio-³±±
±±³            ³        ³             ³nários que possuem dissidio.             ³±±
±±³Raquel Hager³12/09/16³TVZEOE    	  ³Ajuste nos parametros da função fTesta   ³±±
±±³            ³        ³             ³no caso de Estagiário. Ajustes para execu³±±
±±³            ³        ³             ³ção do robô de automação.                ³±±
±±³Raquel Hager³14/09/16³TVZEOE    	  ³Ajuste nos parametros da função fTesta   ³±±
±±³            ³        ³             ³no caso de Estagiário.                   ³±±
±±³Raquel Hager³16/09/16³TVXDZX       ³Realizado ajuste para geração de cód. N1 ³±±
±±³            ³        ³             ³em situações de transferência de Filiais.³±±
±±³            ³        ³             ³para processar Sefip com mat. de origem e³±±
±±³            ³        ³             ³a atual - variável de controle lCalSRC.  ³±±
±±³Cícero Alves³17/10/16³TVZYNX       ³Ajuste na função DBF_TIPO32 para buscar o³±±
±±³            ³        ³             ³Indicativo Recolhimento FGTS correto 	³±±
±±³Allyson M   ³07/12/16³MRH-2934     ³Ajuste p/ trazer os dados da 2ª parcela  ³±±
±±³            ³        ³             ³em meses anteriores a dezembro 			³±±
±±³Gabriel A.  ³05/01/17³MRH-4305     ³Ajuste para não duplicar o FGTS de 13º   ³±±
±±³            ³        ³             ³quando houver transferência no mês.      ³±±
±±³Raquel Hager³20/01/17³MRH-5271     ³Ajuste para geração de registro N3 de    ³±±
±±³            ³        ³             ³Transferência para funcionário afastado  ³±±
±±³            ³        ³             ³em ambiente sem Gestão Corporativa.      ³±±
±±³Allyson M   ³24/01/17³MRH-4639     ³Ajuste p/ só executar função fGpsVal() se³±±
±±³            ³        ³             ³a filial for diferente					³±±
±±³Flavio C.   ³24/01/17³MRH-2939     ³Ajuste p/ não duplicar registro 14 qdo   ³±±
±±³            ³        ³             ³tem transferencia                        ³±±
±±³Allyson M   ³03/02/17³MRH-6043     ³Ajuste p/ deduzir o valor gerado no ID   ³±±
±±³            ³        ³             ³1412 - Devolução de INSS					³±±
±±³Gabriel A.  ³24/02/17³MRH-6786     ³Ajuste para que dois usuários possam     ³±±
±±³            ³        ³             ³gerar SEFIP simultaneamente.             ³±±
±±³Eduardo K.  ³24/03/17³MPRIMESP-9337³Ajuste na função de processamento dos    ³±±
±±³            ³        ³             ³funcionários a serem enviados para a     ³±±
±±³            ³        ³             ³Sefip, para validar se o usuário logado  ³±±
±±³            ³        ³             ³possui acesso a filial. 			        ³±±
±±³Jônatas A.  ³07/02/17³DRHPAG-556   ³Ajuste para não gerar error.log qdo ha   ³±±
±±³            ³        ³             ³funcionarios transferidos entre filiais e³±±
±±³            ³        ³             ³para não entrar em loop na fTesta().     ³±±
±±³            ³        ³             ³Alterado nome do arq temporario SFP para ³±±
±±³            ³        ³             ³SFP + Grupo. Estava trazendo codigo da   ³±±
±±³            ³        ³             ³emp   em branco e o codigo do usuario no ³±±
±±³            ³        ³             ³nome do arquivo ocasionava a nao transf. ³±±
±±³            ³        ³             ³do temporario para o SEFIP.RE.           ³±±
±±³Paulo O.    ³26/04/17³DRHPAG-255   ³Ajuste para a gravacao do numero da CTPS ³±±
±±³Inzonha     ³        ³             ³considerando 8 digitos                   ³±±
±±³Cecília C.  ³29/06/17³DRHPAG-3522  ³Ajuste na rotina para não levar valores  ³±±
±±³            ³        ³             ³de décimo tercerio calculado antes de de-³±±
±±³            ³        ³             ³zembro.                                  ³±±
±±³Paulo  O.   ³03/08/17³DRHPAG-3118  ³Ajuste na query para correção de erro do ³±±
±±³Inzonha     ³        ³             ³comando substring nos bancos postgres e  ³±±
±±³            ³        ³             ³informix.                                ³±±
±±³M. Silveira ³15/09/17³DRHPAG-6137  ³Ajuste p/ avaliar as verbas do movimento ³±±
±±³            ³        ³             ³da forma correta quando ha transferencia.³±±
±±³Oswaldo L   ³18/09/17³DRHPAG-5698  ³Ajuste projeto Ctree                     ³±±
±±³Eduardo K.  ³25/10/17³MPRIMESP     ³Ajuste para calcular corretamente o valor³±±
±±³            ³        ³-11939       ³da remuneração sem 13º, não estava       ³±±
±±³            ³        ³             ³considerando o valor do ID0986 Diferença ³±±
±±³            ³        ³             ³de Dissidio RRA. 						³±±
±±³Oswaldo L   ³16/11/17³DRHPAG-6216  ³Ajuste no PE GPE610REM                   ³±±
±±³Oswaldo L   ³17/11/17³DRHPAG-7066  ³Ajuste referente ao PE GP610SalMat       ³±±
±±³Oswaldo L   ³21/11/17³DSAUPC-1038  ³Subir fonte do Lucas Nonanto - PLS       ³±±
±±³Jaqueline L ³07/03/17³DRHPAG-13957 ³Conversão na função fCodMov			    ³±±
±±³Silvia T.   ³23/07/18³DRHGFP-990   ³Compatibilização com Folha Publica       ³±±
±±³Silvia T.   ³24/09/18³DRHGFP-1699  ³Tratamento para Folha Mista              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPEM610()

Local oDlg
Local nOpca			:= 	0
Local aSays			:=	{ }
Local aArea			:= GetArea()
Local aButtons		:= 	{ } //<== arrays locais de preferencia
Local aFilterExp	:=  {} //Expressao de filtro
Local lPlsAtiv		:= GetNewPar("MV_PLSATIV",.F.)
Local lArqOK		:= .F.
Local oAltera
Local cAltera
Local nOpcao		:= 0
Local cPergunte		:= ""
Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), { .T., .F. }) //[1]Acesso; [2]Ofusca; [3]Mensagem
Local aFldRel		:= {"R2_NOME","RA_NOME","RA_NOMECMP","RA_NUMCP","RA_SERCP","RA_CIC","RA_PIS","RA_NUMENDE","RA_ENDEREC","RA_COMPLEM","RA_BAIRRO","RA_CEP","RA_MUNICIP","RA_ESTADO"}
Local lBlqAcesso	:= aOfusca[2] .And. !Empty( FwProtectedDataUtil():UsrNoAccessFieldsInList( aFldRel ) )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaração de arrays para dimensionar tela		         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}

Private nTamFil := FWSizeFilial()

Private mv_par31 := ""
Private mv_par32 := ""
Private mv_par33 := ""
Private mv_par34 := ""
Private mv_par35 := ""
Private mv_par36 := ""
Private mv_par37 := ""
Private mv_par38 := ""
Private mv_par39 := ""
Private mv_par40 := ""
Private mv_par41 := ""
Private mv_par42 := ""
Private mv_par43 := ""
Private mv_par44 := ""
Private mv_par45 := ""
Private mv_par46 := ""
Private mv_par47 := ""
Private mv_par48 := ""
Private mv_par49 := ""
Private mv_par50 := ""
Private mv_par51 := ""
Private mv_par52 := ""

Private cArqNome

Private cInscComp
Private cNomeComp
Private cRecol
Private nTipo

Private aRetFiltro
Private cSraFilter
Private cSrcFilter
Private cSI3Filter

Private cPrefix
Private lCtbInUse
Private cAliasCC
Private lUsaPls		:= .F.
Private lAbortPrint := .F.
Private lGPM610V	:= ExistBlock("GPM610V")
Private oTmpTMP
Private oTmpRJH
Private lDicInter		:= FindFunction("fChkInterm") .And. fChkInterm()

//Verifica se utiliza o modulo de Gestao de Folha Publica - SIGAGFP
Private lGestPubl 	:= IIf(ExistFunc("fUsaGFP"),fUsaGFP(),.F.)
Private aRot7		:= fGetRotTipo('7')
Private cRot7In		:= ""

Default lGpe610Rem := ExistBlock( "GPE610REM" )

If lBlqAcesso	//Tratamento de acesso a dados pessoais
	Help(" ",1,aOfusca[3,1],,aOfusca[3,2],1,0)	//"Dados Protegidos- Acesso Restrito: Este usuário não possui permissão de acesso aos dados dessa rotina. Saiba mais em {link documentação centralizadora}"
	Return
EndIf

#DEFINE ALIGN_H_LEFT 0
#DEFINE ALIGN_H_RIGHT 1
#DEFINE ALIGN_H_CENTER 2
#DEFINE oFontM TFont():New( "Verdana", 10, 10, , .F., , , , .T., .F. )		//Normal
#DEFINE oFontP TFont():New( "Verdana", 10, 10, , .T., , , , .T., .F. )		//Negrito

If lPlsAtiv

	Private aItem := {"Nao","Sim"}

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aAdvSize	:= MsAdvSize()
	aAdvSize[5]	:= (aAdvSize[5]/100) * 60	//horizontal
	aAdvSize[6]	:=  (aAdvSize[6]/100) * 40	//Vertical
	aInfoAdvSize:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aObjSize	:= MsObjSize( aInfoAdvSize , aObjCoords )
	aGdCoord	:= { (aObjSize[1,1]+3), (aObjSize[1,2]+5), (((aObjSize[1,3])/100)*27), (((aObjSize[1,4])/100)*58) }	//1,3 Vertical /1,4 Horizontal

	DEFINE MSDIALOG oDlg FROM  aAdvSize[7], 0 TO aAdvSize[6], aAdvSize[5] TITLE OemToAnsi(STR0093) PIXEL  //"Plano de Saude"
	nOpca := 2
	@ aGdCoord[1], aGdCoord[2] TO aGdCoord[3], aGdCoord[4] LABEL "" OF oDlg PIXEL
	@ aGdCoord[1]+21, aGdCoord[2]+5 SAY STR0094  SIZE 055,07 OF oDlg PIXEL //"Gerar SEFIP para PLS"
	@ aGdCoord[1]+19, aGdCoord[2]+70 COMBOBOX oAltera VAR cAltera ITEMS aItem  SIZE 040,10 OF oDlg PIXEL //"Altera CPF/CNPJ?"
	DEFINE SBUTTON FROM aGdCoord[3]+5, aGdCoord[4]-25 TYPE 1 ENABLE OF oDlg ACTION( nOpcao :=1 ,oDlg:End() )
	ACTIVATE MSDIALOG oDlg CENTERED

	lUsaPls := If(cAltera=="Nao",.F.,.T.)

EndIf

Private cCadastro := OemtoAnsi(STR0001)		//"Gera‡„o do arquivo de FGTS e INSS"

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Carregar as tabelas auxiliares                               ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
GpIniTab()

dbSelectArea("SX1")
dbSetOrder(1)

If SX1->(dbSeek("GPEM610A"))
	cPergunte := "GPEM610A"
Else
	cPergunte := "GPM610F4"
Endif

RestArea(aArea)

//-- Carrega a última configuração dos parâmetros
Pergunte(cPergunte, .F. )

lCtbInUse		:= .T. //CtbInUse()
cAliasCC		:= "CTT"
cPrefix			:= ( PrefixoCpo( cAliasCC ) + "_" )
/* Retorne os Filtros que contenham os Alias Abaixo */
aAdd( aFilterExp , { "FILTRO_ALS" , "SRA"     	, .T. , ".or." } )
aAdd( aFilterExp , { "FILTRO_ALS" , "CTT"     	, .T. , ".or." } )
aAdd( aFilterExp , { "FILTRO_ALS" , "SRC"     	, NIL , NIL    } )
/* Que Estejam Definidos para a Função */
aAdd( aFilterExp , { "FILTRO_PRG" , FunName() 	, NIL , NIL    } )

AADD(aSays,OemToAnsi(STR0002) ) //"Este programa gera arquivo de FGTS e INSS"

AADD(aButtons, { 17,.T.,{|| aRetFiltro := FilterBuildExpr( aFilterExp ) } } )
AADD(aButtons, { 5,.T.,{|| Pergunte(cPergunte,.T. ) } } )
AADD(aButtons, { 1,.T.,{|o| nOpca := 1,IF(gpm610OK(),FechaBatch(),nOpca:=0) }} )
AADD(aButtons, { 2,.T.,{|o| FechaBatch() }} )

If ! IsBlind()
	FormBatch( cCadastro, aSays, aButtons )
	If nOpca == 1
		ProcGpe({|lEnd| GPM610Processa(@lArqOK)},,,.T.)	// Chamada do Processamento
		If lArqOk .and. MsgYesNo(STR0106,STR0107)//"Deseja efetuar comparativo entre o valor gerado no arquivo SEFIP.re X calculado na folha ?"##"Comparativo SEFIP.re X Cálculo da Folha"
			fCompSefip()
		EndIf

	EndIf
Else
	GPM610Processa()
EndIf

If Select("RJHX") > 0
	RJHX->(dbCloseArea())
EndIf

If oTmpRJH <> Nil
	oTmpRJH:Delete()
	oTmpRJH := Nil
EndIf

Return Nil

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GPM610Processa³ Autor ³ Cristina Ogura   ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao de processamento                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GPM610Processa()                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GPM610Processa(lArqOK)

Local cInicio
Local cFim
Local lRat			:= .F.

Local aArea			:= GetArea()
Local cAnoMesRef	:= ""
Local nCont			:= 1
Local cJnSRACC		:= ""
Local cSi3FilSql	:= ""
Local nRot7			:= 0

Local aPd00			:= {}
Local aPdMat		:= {}
Local cAux			:= ""
Local cVerba		:= ""
Local nX			:= 0

DEFAULT lArqOK		:= .F.

Private cAliasTRB   := "TRAB"
Private cAlias13	:= "TR13"

Private aStru13		:= {}
Private cIndCond	:= ""

Private cTerceiros	:= Space(04)  //--Carregada na funcao fInssEmp()
Private cFile
Private cQryRot13	:= ""
Private nSalMatV	:= 0
Private nOrdem		:= 1
Private nHandle
Private nDeduc		:=	0
Private DiasDsr 	:=	0
Private nTotDias	:=	0
Private dAuxPar01
PRIVATE aPerAberto	:= {}
PRIVATE aPerFechado	:= {}
Private nDiasAc 	:= 0
Private nDiasAd		:= 0
Private nDiasMat	:= 0
Private cCGC		:= Space(15)
Private cPeriodo 	:= ""
Private cRurFPAS	:= ""
Private cRurTerc	:= ""
Private lFpasCc		:= .F.
Private nRegsFPA	:= 0
Private nRurPRat	:= ""

Private lPessoalAdm := .F.

Private cSalFamDed  := ""
Private cSalMatDed  := ""
Private cPDDedSFam  := GetNewPar("MV_SALFDED","") //-->Verbas a deduzir para o Salario Familia
Private cPDDedSMat  := GetNewPar("MV_SALMDED","") //-->Verbas a deduzir para o Salario Maternidade
Private cVerbasCP00 := ""

Private cIndCNAE	:= "P"
Private lSomavis	:= GetMvRH("MV_SOMAVIS",,.F.)

// Var para Informar se a Resc. Complementar do Funcionario eh de Dissidio
Private lComplDiss	:= .F.

Private lVerAfa00	:= .F.
Private lVerAfa15	:= .F.
Private lVerMat		:= .F.
Private lVerTud		:= .F.

//--Paramentros Selecionados para geracao da SEFIP Versao 4.0
dAuxPar01	:= mv_par01				// Data de Referencia2
cDataRef	:= Dtoc(mv_par01)		//	Data de Referencia
dDtFgts	  	:= mv_par02				//	Data recolhimento FGTS
dDtInss		:= mv_par03				//	Data Recolhimento INSS
cFile 		:= mv_par04 			//  Arquivo Destino
cFilDe		:= mv_par05				//	Filial De
cFilAte		:= mv_par06				// 	Filial Ate
cCcDe		:= mv_par07				//	Centro de Custo De
cCcAte		:= mv_par08				//	Centro de Custo Ate
cMatDe		:= mv_par09				//	Matricula De
cMatAte		:= mv_par10				//  Matricula Ate
nFilCc		:= mv_par11				//	Gerar por 1=filial 2=Centro de Custo
nComTomador	:= mv_par12				//	Gerar C.C. 1=c/Tomador 2=s/Tomador 3=Ambos
nRateio		:= mv_par13				//	Gera r C.C.Rateado 1=Sim 2=Nao
nTipo		:= mv_par14				// 	Sefip 1=Folha/Ferias 2=13o.Salario
nTpTomador	:= mv_par15				// 	1=CEI; 2=CNPJ; 3= Ambos
nBase		:= mv_par16				//	Base 1-Fgts 2= Inss
nAgrupa		:= mv_par17				//	Agrupar Empresas 1=Sim 2=Nao
nCentra		:= mv_par18				//	Centralizar filials 1=sim 2=nao
cFilResp	:= mv_par19				//	Empresa/Filial Responsavel e Centralizadora
nCodRemag	:= mv_par20				//	Codigo Remag
cRecol		:= mv_par21            //	Codigo Recolhimento Sefip
cCodGPS		:= mv_par22				//	Codigo de recolhimento GPS Filial=CGC
//	Tipo de Contrato 1=indeterminado ; 2=Determinado ou 3 = Intermitente

// Validando o MV_PAR23
If Empty(mv_par23)
	Help( "" , 1 , OemToAnsi(STR0063) , NIL , OemToAnsi(STR0238) , 1 , 0 ) //"Tipo de Contrato não preenchido, informe pelo menos um."
	Return
EndIf

cTpContr	:= ""
If lDicInter
	cTpc := mv_par23
	cTpc := StrTran( cTpc, "1", " 1" )
Else

	//	Tipo de Contrato 1=indeterminado ; 2=Determinado ou 3 = Ambos
	If mv_par23 == 1
		cTpC	 := " *1"
		cTpContr := "1"
	ElseIf mv_par23 == 2
		cTpC	 := "2"
		cTpContr := "2"
	ElseIf mv_par23 == 3
		cTpC	 := " *12"
		cTpContr := "3"
	EndIf
EndIf

SetMnemonicos( , , .T. )

nRecInss	:= mv_par24				//	Recolh. Inss  1=No Prazo 2=Em Atraso  3=Nao Gera GPS

If mv_par25 == 4
	nRecFgts	:= 5				//	Recolh. Fgts  1=No Prazo 2=Em Atraso 3 -Em Atraso(Acao Fiscal)
ElseIf mv_par25 == 5				//				  4=Individualizacao 5-Individualizacao(Acao Fiscal)
	nRecFgts	:= 6
Else
	nRecFgts	:= mv_par25
EndIf

nIndInss	:= mv_par26				//  Indice Correcao INSS
cSimples	:= mv_par27				//	Optante pelo Simples 1=Nao optante  2=Optante
nOrigRec	:= mv_par28				//	Origem Receita 1=Arrec.Evento 2=Arrec.Patrocionio 3=Arrec.Evento/Patrocinio
nPercFilan	:= mv_par29				//	% de Isencao Filantropia
cNomeCont	:= mv_par30				//	Nome do Contato na Empresa
nFoneCont	:= mv_par31				//	Telefone do Contato na Empresa
cInternet	:= mv_par32				//	Endereco Internet para contato
nTpForFol	:= mv_par33				//	Tipo Inscricao Fornecedor folha de Pagamento
nInscFol	:= mv_par34				//	No. Inscricao Fornecedor folha de Pagamento
cCodGps20	:= mv_par35				//	Codigo de recolimento por C.Custo=Cei
nRescMes	:= mv_par36				//  Gerar Demitidos do mes //	1 - A Pedido; 2-Por Dispensa; 3-Ambos; 4-Nao gerar
nRescComp	:= mv_par37				//  Gerar Demitidos das Rescisoes complementares //	1 - A Pedido; 2-Por Dispensa; 3-Ambos; 4-Nao gerar
lOnlyComp	:= if(mv_par38==1,.T.,.F.)	//  Gerar Somente Demitidos das Rescisoes complementares
dDtInfINI   := mv_par39				//	Outras Informacoes - Periodo Inicio
dDtInfFIM	:= mv_par40				//	Outras Informacoes - Periodo Fim
nVersao     := mv_par41 			//  Versao 4.0/5.0/6.0
nDemitido   := mv_par42 			//  Somente demitidos(Sim/Nao)
nDissidio   := mv_par43 			//  Somente dissidio(Sim/Nao)
cModFgts	:= mv_par44				//  modalidade da declaracao
nProcesso	:= mv_par45				//  No. do processo em caso de reclamatoria trabalhista/dissidio
nProcAno	:= mv_par46				//  Ano do process em caso de reclamatoria trabalhista/dissidio
nVara		:= mv_par47				//  No. da vara/JCJ no caso de reclamatoria trabalhista/dissidio
cEmprAgrup	:= If(nAgrupa == 1, mv_par48, "  ")// Codigo da empresa responsavel pelo agrupamento
If mv_par49 == 1
	cIndCNAE	:=  "S"				// Indicativo de alteracao do CNAE
ElseIf mv_par49 == 2
	cIndCNAE	:=  "N"
ElseIf mv_par49 == 3
	cIndCNAE	:=  "A"
ElseIf mv_par49 == 4
	cIndCNAE	:=  "P"
EndIf

// Carrega os Filtros
cSraFilter := GpFltAlsGet( aRetFiltro , "SRA" )
cSrcFilter := GpFltAlsGet( aRetFiltro , "SRC" )
cSI3Filter := GpFltAlsGet( aRetFiltro , cAliasCC )

DbSelectArea("RCM")
DbSetOrder(1)
DbSelectArea("SRR")
DbSetOrder(1)
DbSelectArea("SR9")
DbSetOrder(1)
DbSelectArea("SRJ")
DbSetOrder(1)

nVlCooper   := 0                   // valor pago a cooperativas de trabalho
cAnoMesGps  := MesAno(dAuxPar01)  // Ano/Mes para busca do parametro 15-GPS
dDataAte    := dAuxPar01
//-- Verbas a Deduzir para o Salario Familia
If !Empty( cPDDedSFam )
	If Len( AllTrim( cPDDedSFam ) ) > 3
		For nCont := 1 To Len( AllTrim( cPDDedSFam ) ) Step 3
			cSalFamDed += Subs( cPDDedSFam, nCont, 3 ) + "*"
		Next nCont
	Else
		cSalFamDed := AllTrim( cPDDedSFam )
	EndIf
EndIf

//-- Verbas a Deduzir para o Salario Maternidade
If !Empty( cPDDedSMat )
	If Len( AllTrim( cPDDedSMat ) ) > 3
		For nCont := 1 To Len( AllTrim( cPDDedSMat ) ) Step 3
			cSalMatDed += Subs( cPDDedSMat, nCont, 3 ) + "*"
		Next nCont
	Else
		cSalMatDed := AllTrim( cPDDedSMat )
	EndIf
EndIf

If nTipo == 1 //Folha + Autonomo
	cRoteiro	:= "'" + fGetCalcRot("1") + "','"

	For nRot7 := 1 To Len(aRot7)
		cRot7In += aRot7[nRot7] + "','"
	Next nRot7
	cRoteiro += cRot7In + fGetCalcRot("9") + "'"
Else //13º
	cRoteiro 	:= "'" + fGetCalcRot("6") + "'"
EndIf

cPeriodo 	:= MesAno(dAuxPar01)

nValRec		:= 0    				//	Valor da Receita Arrec. Evento ou Patrocinio
nValProPf	:= 0     				//	Valor Producao Rural P.Fisica
nValProPj	:= 0 					//	Valor producao Rural P.Juridica
nVlCooper   := 0                    // valor pago a cooperativas de trabalho
cAnoMesGps  := MesAno(dAuxPar01)    // Ano/Mes para busca do parametro 15-GPS

// Se Movto de 13o. Mes ref. = 13
If nTipo == 2
	cDataRef   := SubStr(DtoC(mv_par01),1,2)+"/13/"+Right(DtoC(mv_par01),2)
	cAnoMesGps := Left(cAnoMesGps,4) + "13"
EndIf

//-- O nome do arquivo deve ser SEFIP.RE
If !"SEFIP.RE" $ UPPER(cFile)
	Help(" ",1,"GPMSFGTSRE")
	RestArea( aArea )
	Return Nil
EndIf

// Verifica se a Matricula até não foi preenchida  - cMatAte
If Empty(cMatAte)
	Aviso(STR0063,STR0100,{"OK"}, ,STR0101) //"Atenção"##"Necessário informar a Matricula Até."##"Parâmetro 'Matricula Até' não informado!"
	RestArea( aArea )
	Return Nil
EndIf

// Verifica se a filial responsavel existe - cFilResp
If !FVerSM0()
	Aviso(STR0063,STR0087,{"OK"}, ,STR0088) //"Atenção"##"Informe uma empresa/filial existente."##"Empresa/Filial não cadastrada"
	RestArea( aArea )
	Return Nil
EndIf

//--Quando For Por Centro de custo verificar Cod.Recol.
If nFilCc = 2
	If ((nComTomador = 1 .Or. nComTomador = 3) .And. cRecol$ '115/145/307/327/345/418/604/640/650/660') .Or. ;    //Tem que ser 155
		(nComTomador = 2 .And. ! cRecol$ '115')

		Aviso(STR0078,STR0079,{"OK"})// Codigo de Recolhimento Invalido##"Codigo de Recolhimento invalido para o tipo de Centro de Custo"
		RestArea( aArea )
		Return Nil
	EndIf
EndIf

// Tipo 13o. Salario
If nTipo == 2   // Tipo 1-Folha/Ferias	   2-13o.Salario
	If nRecInss == 3
		Help("",1,"GPMIND")		// Indicativo de Recolh de INSS deve ser 1 ou 2 para opcao de 13o. salario
		RestArea( aArea )
		Return Nil
	EndIf
	If cRecol$ "130"
		Aviso(STR0078,STR0092,{"OK"})// Codigo de Recolhimento Invalido##"O codigo de recolhimento 130 não permite SEFIP de competencia 13"
		Return Nil
	EndIf
EndIf

//Nao permite geracao de rateio de CC de 13
If (nFilCc == 2 .And. nTipo == 2 .And. nRateio == 1)
	Help("", 1, "GPM610RAT13CC")		// Indicativo de Recolh de INSS deve ser 1 ou 2 para opcao de 13o. salario
	Return Nil
EndIf


If Select("RJHX") > 0
	RJHX->(dbCloseArea())
EndIf

If !Gp610Cria()
	Aviso( STR0063,STR0085, { "Ok" },,STR0084 ) //"Nao foi possivel abrir o arquivo temporario RJH. Verifique se este processo já está sendo executado em outra estação."###"Erro ao abrir o arquivo"
	RestArea( aArea )
	Return
EndIf

lArqOK		:= .T.

cAnoMesRef 	:= MesAno(dAuxPar01)

//Verificação de verbas a reduzir da contribuição patronal - SEFIP 8.4
If cAnoMesRef >= "201509"
	P_ENCEMP	:= Iif(Type("P_ENCEMP")=="U", "", P_ENCEMP) //Define quais encargos terão as verbas de maternidade deduzidas. 1 = Todos
	P_DEDMAT	:= Iif(!Empty(P_ENCEMP) .And. Type("P_DEDMAT") <> "U", P_DEDMAT, "") //Define quais verbas de maternidade serão deduzidas. 1 = Todos
	P_ENCEMPAF	:= Iif(Type("P_ENCEMPAF") == "U", "", P_ENCEMPAF) //Define quais encargos terão as verbas de incidência CP 15 deduzidas. 1 = Todos

	If !Empty(P_DEDMAT)
		cAux := ""
		If Len(P_DEDMAT) > 1 .And. !("*" $ P_DEDMAT)
			For nX := 1 To Len(P_DEDMAT) Step 3
				cVerba := SubStr(P_DEDMAT, nX, 3)
				If RetValSrv( cVerba, SRA->RA_FILIAL, "RV_INSS" ) == "S"
					cAux += cVerba + "*"
				EndIf
			Next nX
			P_DEDMAT := cAux
		ElseIf P_DEDMAT == "1"
			aPdMat := fCarPdMat( .T. )
			For nX := 1 To Len(aPdMat)
				cAux += aPdMat[nX] + "*"
			Next nX
			P_DEDMAT := cAux
		EndIf 
	EndIf

	aPd00 	:= fCarPd00()
	cAux	:= ""
	For nX := 1 To Len(aPd00)
		cAux += aPd00[nX] + "*"
	Next nX
	
	cVerbasCP00 := cAux
	lVerAfa00	:= lTemPdSup
	lVerAfa15	:= !Empty(P_ENCEMPAF)
	lVerMat		:= !Empty(P_DEDMAT)
	lVerTud		:= .T.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta tabela de trabalho³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nFilCc == 2 .And. nRateio == 2    //Gerar por CC sem Rateio a ordem deve ser o cc do SRA
	nOrdem := 3
	cInicio 	:= "(cAliasTRB)->RA_FILIAL+(cAliasTRB)->RA_CC"
	cFim		:= cFilAte +cCcAte
ElseIf  nFilCc == 2 .and. nRateio == 1 //Gerar por CC / Gerar Rateado a ordem deve ser o SRC e nao SRA³
	nOrdem := 2
	lRat := .T.
	cInicio	:= "(cAliasTRB)->RC_FILIAL+(cAliasTRB)->RC_CC"
	cFim	:= cFilAte +cCcAte
Else
	nOrdem := 3
	cInicio 	:= "(cAliasTRB)->RA_FILIAL"
	cFim		:= cFilAte
EndIf

If nFilCc = 1 .or. cRecol == "155" //Se o código de recolhimento for 155 verifica se o FPAS do tomador é diferente do FPAS da empresa
	cJnSRACC	:= FWJoinFilial( "SRA", cAliasCC )

	cWhere	:= "WHERE SRA.RA_FILIAL >= '" + cFilDe + "' AND SRA.RA_FILIAL <= '" + cFilAte + "' "
	cWhere	+= "AND SRA.RA_CC >= '" + cCcDe + "' AND SRA.RA_CC <= '" + cCcAte + "' "
	cWhere	+= "AND SRA.RA_MAT >= '" + cMatDe + "' AND SRA.RA_MAT <= '" + cMatAte + "' "
	cWhere	+= "AND " + cPrefix + "FPAS <> ' ' AND " + cPrefix + "CODTER <> ' ' "

	If !Empty( cSi3Filter )
		cSi3FilSql := cSi3Filter
		cSi3FilSql := StrTran( GPEParSQL( cSi3FilSql ), cAliasCc + "->", "" )
		cWhere	+= "AND " + cSi3FilSql + " "
	EndIf

	cWhere	+= "AND " + cAliasCC + ".D_E_L_E_T_ = ' ' "
	cWhere	+= "AND SRA.D_E_L_E_T_ = ' ' "

	cQrySRA := "SELECT DISTINCT RA_FILIAL, " + cPrefix + "FPAS, " + cPrefix + "CODTER, "+ cPrefix + "PERRAT "
	cQrySRA += "FROM " + RetSqlName(cAliasCc) + " " + cAliasCc + " "
	cQrySRA += "INNER JOIN " + RetSqlName("SRA") + " SRA ON " + cJnSRACC + " AND SRA.RA_CC = " + cAliasCC + "." + cPrefix + "CUSTO "
	cQrySRA += cWhere

	cQrySRA	:= ChangeQuery(cQrySRA)
	cAliasTmp := GetNextAlias()
	dbUseArea(.T., "TOPCONN", TcGenQry(,,cQrySRA), cAliasTmp)

	While (cAliasTmp)->( !Eof() )
		cRurFPAS	:= &( cPrefix + "FPAS" )
		cRurTerc	:= &( cPrefix + "CODTER" )
		nRurPRat	:= &( cPrefix + "PERRAT" )
		nRegsFPA++
		(cAliasTmp)->( dbSkip() )
	EndDo

	( cAliasTmp )->( dbCloseArea() )

	If nRegsFPA == 1 // Gera apenas quando encontra apenas uma combinação de FPAS, Terc. e RAT, pois é um arquivo por FPAS
		If MsgNoYes( "Deseja gerar o FPAS, Terceiros e RAT do Centro de Custo no registro tipo 10 - Informações da Empresa?", "FPAS informado no cadastro do Centro de Custo" )//"Deseja gerar o código FPAS do Centro de Custo no registro tipo 10 - Informações da Empresa?"##"FPAS informado no cadastro do Centro de Custo"
			lFpasCc := .T.
		EndIf
	EndIf
EndIf

MontaArqTrab(cMatDe,cMatAte,nOrdem,@cAliasTRB,cPeriodo)

//--Funcao de Processamento Selecionado pelos Parametros
FMatricula(cInicio,cFim,lRat,@lArqOK)

dbSelectArea(cAliasTRB)
dbCloseArea()
If Select(cAlias13) > 0
	(cAlias13)->(dbCloseArea())
EndIf

If Select("TMP") > 0
	TMP->(dbCloseArea())
EndIf

If oTmpTMP <> Nil
	oTmpTMP:Delete()
	oTmpTMP := Nil
EndIf

RestArea( aArea )

Return Nil

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FMatricula    ³ Autor ³ Cristina Ogura   ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao de processamento por filial                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function FMatricula(cInicio,cFim,lRat,lArqOK)

Local cFAP			:= ""
Local cInscFAP		:= ""
Local aInfoFAP		:= {}
Local cFilAnterior	:= 	""
Local cAuxCGC		:=	""
Local cCNPJFAP		:= ""
Local cDedSalMat	:= ""
Local aInfo   		:= 	{}
Local cInfo       	:=	""
Local cTipo			:=	""
Local cFilAux		:= "###########"
Local nFgts			:=	0
Local nSalFam		:=	0
Local n20SalFam		:=	0
Local n20SalFamAnt	:=	0
Local nValor247		:=  0
Local nFgtsRes		:=	0
Local nB13InRc		:=	0
Local nSc13Sal		:=	0 	// Acumulador de Base 13o. para valor devido a previdencia
Local nSalMat		:=	0
Local nSalMat1		:=	0	// Salario Maternidade Antes de 01/12/1999
Local l1Vez			:= 	.T.
Local l1VezFAP		:=	.T.
Local lJaGerou		:= 	.F.
Local lFilialOK		:= .F.
Local cAuxFil		:=	""
Local aAuxInfo		:=	{}
Local cAuxInfo		:= ""
Local cRotAux		:= ""
Local lMatTrf		:= .T.
Local nAuxSal		:=	0
Local nAuxFgts		:=	0
Local cInsc			:=	""
Local cCusto		:=	""
Local cCustoAux		:= 	"!!"
Local nInss			:=	0
Local cAuxCompet	:=	""
Local n13Inss		:=	0
Local lGera32		:= 	.F.
Local lGera30		:= 	.F.
Local aAfast 		:= 	{}
Local cCompet		:=	""
Local cRotFol13 	:= " "
Local cRot132 		:= fGetCalcRot("6")
Local cRotAut 		:= fGetCalcRot("9")
Local cRotFol 		:= fGetCalcRot("1")
Local nTotAci		:= 	0
Local nT13Inss    	:= 	0
Local nTB13Inss   	:= 	0
Local nPercAcTrab 	:=	0
Local nAliqRAT		:= 0
Local nAcidTrab		:= 0
Local aLog			:= {}
Local aTitle		:= {}
Local aTotRegs		:= array(15)
Local nInssOutr		:= 0
Local nX
Local n
Local cCateg		:= space(02)
Local lSI3 			:= .T.
Local nAvos13Mat    := 0
Local aRegsTip14	:= {}
Local nRot7			:= 0
Local nRotFol	    := 0
Local nRot113		:= 0
Local nRot213		:= 0
Local n13Anteci		:= 0
Local n13resci		:= 0

//variaveis para dissidio

Local aFunc			:= {}
Local aTransf		:= {}
Local nLinha		:= 0
Local nI			:= 0
Local lConsidera	:= .T.


Local cFilUsada 	:= ""
Local aInfoNova 	:= {}
Local nPos 			:= 0
Local nAvoDifDis	:= 0
Local nAvoDis114	:= 0
Local lTemDissid	:= .F.
Local lCalSRC		:= .F.
Local lFirstTime	:= .T.
Local aAreaAtu		:= {}
Local nContSrg		:=	0
Local lSkipSRE 		:= .F.
Local nDif			:= 0
Local lTem1887 		:= .F.

Private cAcessaSRA  := &( " { || " + ChkRH( "GPEM610" , "SRA" , "2" ) + " } " )
Private cSitFunc	:= ""
Private nBinss		:=	0
Private nB13Inss	:=	0
Private nVlrAvi13	:=  0
Private nBFgts		:= 	0
Private nFgtsR13	:=	0
Private nB13Fgts	:=	0
Private nDesINSS	:=	0
Private aInssEmp 	:= 	Array(25,2)
Private aInssEAux	:= {}
Private aGpsVal 	:= 	{}
Private aCodFol 	:= 	{}
Private cFgtsMAnt	:= 	"   "  // Codigo de fgts Mes anterior
Private DiasTrab	:=	30
Private cDiasAfas	:=	""
Private aMovimento  :=	{}
Private cFPAS		:=	""
Private cPeriodo 	:= MesAno(dAuxPar01)
Private aTotal		:= array(10)
//--Dados Filial Responsalvel Centralizadora CGC e Tipo
Private aInforesp 	:= {}
Private nInssPF		:= 0
Private nInssPJ		:= 0
Private nValComps	:= 0
Private cPerIniCmp	:= ""
Private cPerFimCmp	:= ""
Private lGps		:= .T.
Private lGRRF
Private aTipo32		:= {}
Private nBInssPro	:=	0
Private nVl13Sal	:= 0
Private nDiasSM		:= 0
Private lSaque		:= .F.
Private nDiasAfas	:=	0
Private cFilS035	:= 	""
Private n2Binss		:=	0
Private n2B13Inss	:=	0
Private n2BFgts		:= 	0
Private n2B13Fgts	:=	0
Private nVlrCP00	:=	0
Private nVlrCP15	:=	0
Private nVlrMater	:=	0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Variaveis utilizadas no ponto de entrada GPM610TP20³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cFPAS_Tom	:= ""
Private	cTerc_Tom	:= ""
Private	cSimp_Tom	:= ""
Private	nRAT_TOM	:= 0
Private	cCnae_Tom	:= ""
Private	cNome_Tom	:= ""
Private	cEnder_Tom	:= ""
Private	cBairro_Tom	:= ""
Private	cCep_Tom	:= ""
Private	cMunic_Tom	:= ""
Private	cEstado_Tom	:= ""
Private cTipo_Tom   := ""
Private cInsc_Tom   := space(14)
Private aGerou30	:= {}
Private aDetAfas    := {}

Private nB13Ant		:=	0

Private aRotFol		:= fGetRotTipo("1")
Private aRot113		:= fGetRotTipo("5")
Private aRot213		:= fGetRotTipo("6")
Private cRotFol1	:= ""
Private cRot113 	:= ""
Private cRot213 	:= ""

For nRotFol := 1 To Len(aRotFol)
	If nRotFol > 1
		cRotFol1 += ","
	EndIf
	cRotFol1 += "'" + aRotFol[nRotFol] + "'"
	cRotFol13 += aRotFol[nRotFol]+ "/"
Next nRotFol

For nRot113 := 1 To Len(aRot113)
	cRot113  += aRot113[nRot113]
	cRotFol13 += aRot113[nRot113]+ "/"
Next nRot113

For nRot213 := 1 To Len(aRot213)
	If nRot213 > 1
		cRot213 += ","
	EndIf
	cRot213  += "'" + aRot213[nRot213] + "'"
Next nRot213

For nRot7 := 1 To Len(aRot7)
	cRotFol13 	+=  aRot7[nRot7] + "/"
Next nRot7

afill(aTotal,0)

If !fInfo(@aInfoResp,SubStr(cFilResp,3,FwGetTamFilial),SubStr(cFilResp,1,2))
	Return .T.
EndIf
// Tipo de inscricao da Empresa Responsalvel / CGC
If aInfoResp[15] == 1 .Or. ( Len(aInfoResp) >= 27 .And. !Empty( aInfoResp[27] ) )	// CEI
	cInfoResp	:= "2"
	cInscResp	:= If( Len(aInfoResp) >= 27 .And. !Empty( aInfoResp[27] ), aInfoResp[27], aInfoResp[08] )
ElseIf aInfoResp[15] == 3		// CPF
	cInfoResp	:= "3"
	cInscResp	:= aInfoResp[08]
Else
	cInforesp	:= "1"		// CGC/INCRA
	cInscResp	:= aInfoResp[08]
EndIf

aFill(aTotRegs,0)

//Exibição da parametrização e explicação das regras de geração da SEFIP
If cPaisLoc == "BRA"

	Aadd(aTitle,STR0108)//"Parametrização para geração da SEFIP"
	Aadd(aLog,{})
	aTotRegs[1] := len(aLog)
	Aadd(aLog[aTotRegs[1]], Padr(STR0109 + " - " + dToC(mv_par01),65) + " | " + STR0110 + " - " + dToC(mv_par02)) //"Data de Referência ?"|"Dt. Depósito FGTS ?"
	Aadd(aLog[aTotRegs[1]], Padr(STR0111 + " - " + dToC(mv_par03),65) + " | " + STR0112 + " - " + mv_par04)//"Dt. Depósito INSS ?"|"Arquivo Destino ?"
	Aadd(aLog[aTotRegs[1]], Padr(STR0113 + " - " + mv_par05 + " - " + mv_par06,65) + " | " + STR0114 + " - " + mv_par07 + " - " + mv_par08)//"Filial De/Até ?"|//"Centro Custo De/Até ?"
	Aadd(aLog[aTotRegs[1]], Padr(STR0115 + " - " + mv_par09 + " - " + mv_par10,65) + " | " + STR0116 + " - " + If( mv_par11 == 1, STR0117, STR0118 ))//"Matricula De/Até ?"|"Gerar Sefip por ?"##"Filial"##"Centro Custo"
	Aadd(aLog[aTotRegs[1]], Padr(STR0119 + " - " + If( mv_par12 == 1, STR0120, If( mv_par12 == 2, STR0121, STR0122 )),65) + " | " + STR0123 + " - " + If( mv_par13 == 1, STR0124, STR0125 ))//"Gerar C.Custo ?"##"Com Tomador"##"Sem Tomador"##"Ambos"|"Gerar C.C. Rateado ?"##"Sim"##"Nao"
	Aadd(aLog[aTotRegs[1]], Padr(STR0126 + " - " + If( mv_par14 == 1, STR0127, STR0128 ),65) + " | " + STR0129 + " - " + If( mv_par12 == 1, "CNPJ", If( mv_par12 == 2, "CEI", STR0122 )))//"Gerar Tipo ?"##"Folha"##"13o.Salario"|"Tipo de Tomador ?"##"Ambos"
	Aadd(aLog[aTotRegs[1]], Padr(STR0130 + " - " + If( mv_par16 == 1, STR0131, STR0132 ),65) + " | " + STR0133 + " - " + If( mv_par17 == 1, STR0124, STR0125 ))//"Gerar Sobre Base ?"##"Base FGTS"##"Base INSS"|"Agrupar Empresas ?"##"Sim"##"Nao"
	Aadd(aLog[aTotRegs[1]], Padr(STR0134 + " - " + If( mv_par18 == 1, STR0124, STR0125 ),65) + " | " + STR0135 + " - " + mv_par19)//"Centralizar Filiais ?"##"Sim"##"Nao"|"Filial Responsável ?"
	Aadd(aLog[aTotRegs[1]], Padr(STR0136 + " - " + cValToChar(mv_par20),65) + " | " + STR0137 + " - " + mv_par21)//"Código da Empresa Na Caixa ?"|"Cód. Recol. SEFIP ?"
	Aadd(aLog[aTotRegs[1]], Padr(STR0138 + " - " + mv_par22,65) + " | " + STR0139 + " - " + cTpc)//"Cód.Pgto.Gps.Filial ?"|"Tipo de Contrato ?"##"Indeterminado"##"Determinado"##"Ambos"
	Aadd(aLog[aTotRegs[1]], Padr(STR0142 + " - " + If( mv_par24 == 1, STR0143, If( mv_par24 == 2, STR0144, STR0145 )),65) + " | " + STR0146 + " - " + If( mv_par25 == 1, STR0143, If( mv_par25 == 2, STR0144, If( mv_par25 == 3, STR0147, If( mv_par25 == 4, STR0148, STR0149) ) )))//"Recol INSS ?"##"No Prazo"##"Em Atraso"##"Nao Gera GRPS"|"Recol FGTS ?"##"No Prazo"##"Em Atraso"##"Atraso-Acao Fis"##"Individualizac."##"Ind.Acao Fiscal"
	Aadd(aLog[aTotRegs[1]], Padr(STR0150 + " - " + Str(mv_par26, 8, 2),65) + " | " + STR0151 + " - " + mv_par27)//"Índice Corr. Inss ?"|"Imposto Simples ?"
	Aadd(aLog[aTotRegs[1]], Padr(STR0152 + " - " + If( mv_par28 == 1, STR0153, If( mv_par28 == 2, STR0154, STR0155 )),65) + " | " + STR0156 + " - " + Str(mv_par29, 6, 2))//"Origem Receita ?"##"E-Arrec.Eventos"##"P-Rec.Patroc."##"A-A.Ev./Rec.Pat"|"% Isen.Filantropia ?"
	Aadd(aLog[aTotRegs[1]], Padr(STR0157 + " - " + mv_par30,65) + " | " + STR0158 + " - " + cValToChar(mv_par31))//"Nome para Contato ?"|"DDD/Fone de Contato ?"
	Aadd(aLog[aTotRegs[1]], Padr(STR0159 + " - " + mv_par32,65) + " | " + STR0160 + " - " + If( mv_par33 == 1, "1-CNPJ", "2-CEI" ))//"Endereço Internet ?"|"Insc.Forn. Folha ?"
	Aadd(aLog[aTotRegs[1]], Padr(STR0161 + " - " + cValToChar(mv_par34),65) + " | " + STR0162 + " - " + mv_par35)//"No.Insc.Forn.Folha ?"|"Cod.Pgto.Gps.CCusto ?"
	Aadd(aLog[aTotRegs[1]], Padr(STR0163 + " - " + If( mv_par36 == 1, STR0164, If( mv_par36 == 2, STR0165, STR0122 )),65) + " | " + STR0166 + " - " + If( mv_par37 == 1, STR0164, If( mv_par37 == 2, STR0165, If(mv_par37 == 3, STR0122, STR0237) )))//"Gerar Demitidos Mês ?"##"A Pedido"##"Por Dispensa"##"Ambos"|"Gerar Resc.Compl. ?"##"A Pedido"##"Por Dispensa"##"Ambos"##"Não Gerar"
	Aadd(aLog[aTotRegs[1]], Padr(STR0167 + " - " + If( mv_par38 == 1, STR0124, STR0125 ),65) + " | " + STR0168 + " - " + dToC(mv_par39)+ " - " + dToC(mv_par40))//"Somente Resc.Compl. ?"##"Sim"##"Nao"|"Outras Inform. Ini/Fim ?"
	Aadd(aLog[aTotRegs[1]], Padr(STR0169 + " - " + If( mv_par41 == 1, "4.0", If( mv_par41 == 2, "5.0", STR0170 )),65) + " | " + STR0171 + " - " + If( mv_par42 == 1, STR0124, STR0125 ))//"Versão ?"##"Atual"|"Somente Demitidos ?"##"Sim"##"Nao"
	Aadd(aLog[aTotRegs[1]], Padr(STR0172 + " - " + If( mv_par43 == 1, STR0124, STR0125 ),65) + " | " + STR0173 + " - " + If( mv_par44 == 1, STR0174, If( mv_par44 == 2, STR0175, STR0176 )))//"Somente Dissídio ?"##"Sim"##"Nao"|"Tipo de modalidade ?"##"Recolhimento"##"Declaracao"##"Confirmacao"
	Aadd(aLog[aTotRegs[1]], Padr(STR0177 + " - " + cValToChar(mv_par45),65) + " | " + STR0178 + " - " + cValToChar(mv_par46))//"No. do Processo ?"|"Ano do Processo ?"
	Aadd(aLog[aTotRegs[1]], Padr(STR0179 + " - " + cValToChar(mv_par47),65) + " | " + STR0180 + " - " + mv_par48)//"Vara/JCJ ?""Empr.Resp.Agrupam. ?"
	Aadd(aLog[aTotRegs[1]], STR0181 + " - " + If( mv_par49 == 1, STR0182, If( mv_par49 == 2, STR0183, If( mv_par49 == 3, STR0184, STR0185 ) )))//"Recol INSS ?"##"Altera o CNAE"##"Nao alt. CNAE"##"Alt. CNAE Prep."##"Nao Alt. Prep."

	Aadd(aTitle,STR0186)//"Parametrizações"
	Aadd(aLog,{})
	aTotRegs[2] := len(aLog)
	Aadd(aLog[aTotRegs[2]], STR0187 + cValToChar(lSomavis))//"Parâmetro MV_SOMAVIS: "

	Aadd(aTitle,STR0188)//"Regras para a conferência da SEFIP"
	Aadd(aLog,{})
	aTotRegs[3] := len(aLog)
	Aadd(aLog[aTotRegs[3]], STR0191)//'* Coluna "Remun. sem 13o" (FGTS): '
	Aadd(aLog[aTotRegs[3]], STR0192)//"  * Somar as verbas dos ID's 0017, 0293 e 1887."
	Aadd(aLog[aTotRegs[3]], STR0193)//"  * Em caso de Dissídio, considerar o valor da verba do ID 0337."
	Aadd(aLog[aTotRegs[3]], STR0194)//'* Coluna "Remun. sobre 13o" (FGTS): '
	Aadd(aLog[aTotRegs[3]], STR0195)//"  * Somar as verbas dos ID's 0108, 0294, 1848, 1849 e subtrair a verba do ID 1415."
	Aadd(aLog[aTotRegs[3]], STR0196)//"  * Em caso de Dissídio, considerar o valor da verba do ID 0398."
	Aadd(aLog[aTotRegs[3]], STR0197)//'* Coluna "Base INSS Fol" (INSS): '
	Aadd(aLog[aTotRegs[3]], STR0198)//"  * Somar as verbas dos ID's 0013 e 0014 e subtrair as verbas dos ID's 0111 e 0250, caso o parâmetro MV_SOMAVIS esteja configurado"
	Aadd(aLog[aTotRegs[3]], STR0199)//"  * com .F. e as verbas possuam incidência para INSS."
	Aadd(aLog[aTotRegs[3]], STR0200)//"  * Em caso de Autônomo/Pró-labore, somar as verbas do ID's 0221, 0225, 0350 e 0351."
	Aadd(aLog[aTotRegs[3]], STR0201)//"  * Em caso de Dissídio, considerar o valor da verba do ID 0338."
	Aadd(aLog[aTotRegs[3]], STR0241)//"  * Para funcionária com afastamento temporário por motivo de licença-maternidade (movimentações Q1, Q2, Q3, Q4, Q5, Q6 e Q7),  "
	Aadd(aLog[aTotRegs[3]], STR0242)//"  * considerar do valor dos ID's 0013 e 0014 ou 0338 para Dissídio, somente o valor sobre a remuneração relativa aos dias trabalhados."		
	Aadd(aLog[aTotRegs[3]], STR0202)//'* Coluna "Base INSS 13o" (INSS): '
	Aadd(aLog[aTotRegs[3]], STR0203)//
	Aadd(aLog[aTotRegs[3]], STR0204)//"  * Em caso de Dissídio, considerar o valor da verba do ID 0399."
	Aadd(aLog[aTotRegs[3]], STR0205)//'* Coluna "Desc. INSS" (INSS): '
	Aadd(aLog[aTotRegs[3]], STR0206)//"  * Somar as verbas dos ID's 0064, 0065 e 0070 e subtrair a verba do ID 1412."
	Aadd(aLog[aTotRegs[3]], STR0207)//"  * Em caso de Dissídio, considerar o valor da verba do ID 0340."
	Aadd(aLog[aTotRegs[3]], "")
	Aadd(aLog[aTotRegs[3]], "")
	Aadd(aLog[aTotRegs[3]], STR0208)//"* A base declarada à SEFIP varia conforme as situações abaixo: "
	Aadd(aLog[aTotRegs[3]], STR0209)//"  * Situação normal: "
	Aadd(aLog[aTotRegs[3]], STR0210)//"    * Base de FGTS ou de INSS, conforme parametrização de geração."
	Aadd(aLog[aTotRegs[3]], STR0211)//"  * Afastado: "
	Aadd(aLog[aTotRegs[3]], STR0212)//"    * Base de FGTS, independente da parametrização de geração pela base de FGTS ou INSS."
	Aadd(aLog[aTotRegs[3]], STR0213)//"  * Demitido: "
	Aadd(aLog[aTotRegs[3]], STR0214)//'    * Rescisão com código de saque de FGTS entre "01,02,03,04,05,06,07,10,23,26,27,80,81,86,87,88,91,92,93,94,95,96"'
	Aadd(aLog[aTotRegs[3]], STR0215)//"      e recolhimento do FGTS na GRRF, será enviada a base do INSS."
	Aadd(aLog[aTotRegs[3]], STR0216)//"    * Para as outras rescisões, será enviada a base conforme parametrização de geração."
	Aadd(aLog[aTotRegs[3]], STR0217)//"  * Autônomo/Pró-labore sem FGTS: "
	Aadd(aLog[aTotRegs[3]], STR0218)//"    * Base de INSS, independente da parametrização de geração pela base de FGTS ou INSS."
	Aadd(aLog[aTotRegs[3]], "")
	Aadd(aLog[aTotRegs[3]], "")
	Aadd(aLog[aTotRegs[3]], STR0219)//'Obs.: A base declarada à SEFIP (FGTS ou INSS) estará destacada com um "*" (asterisco) ao lado do valor da base.'

EndIf

//-- Traz a tabela de Codigo de Movimentacao
fMoviment(@aMovimento)

If cRecol == "650" .and. nDissidio == 1 .and. MesAno(dAuxPar01) >= "200508" .and. MesAno(dAuxPar01)<= "200703"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe calculo para a Data de Referencia informada.		³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "RHH" )
	dbSetOrder( 1 )				// RHH_FILIAL+RHH_MAT+RHH_MESANO+RHH_DATA+RHH_VB+RHH_CC+RHH_ITEM+RHH_CLVL
	If ! dbSeek( cFilDe + cMatDe + MesAno( dAuxPar01 ) )
		If Aviso( STR0063, STR0096, { "OK" } )	// "Atencao" ## "O Dissídio não foi calculado."
			Return
		EndIf
	EndIf
EndIf

If ! IsBlind()
	GPProcRegua( (cAliasTRB)->(RecCount()))
EndIf

While (cAliasTRB)->(!Eof()) .And. &cInicio <= cFim

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Aborta o Processamento                             	 	     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lAbortPrint
		Exit
	EndIf

	lTemDissid := .F.
	lCalSRC	:= .F.

	/*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
    ³Consiste Filiais e Acessos                                             ³
    ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
    If cFilAux <> (cAliasTRB)->RA_FILIAL
    	cFilAux := (cAliasTRB)->RA_FILIAL
    	lFilialOK := .F.
	    If !( (cAliasTRB)->RA_FILIAL $ fValidFil() .and. Eval( cAcessaSRA ) )
	    	dbSelectArea(cAliasTRB)
	    	(cAliasTRB)->(dbskip())
	    	Loop
	    EndIf
	    lFilialOK := .T.
	EndIf

	If !lFilialOk
		dbSelectArea(cAliasTRB)
	    (cAliasTRB)->(dbskip())
	    Loop
	EndIf

	// Ratear por CC
	If lRat
		cCusto := (cAliasTRB)->RC_CC
		dbSelectArea("SRA")
		dbSetOrder(1)
		If !dbSeek((cAliasTRB)->RC_FILIAL+(cAliasTRB)->RC_MAT)

			If aTotRegs[4]== 0
				cLog := STR0014 //"Consta na movimentacao mensal mas nao consta no cadastro de Funcionarios"
				Aadd(aTitle,cLog)
				Aadd(aLog,{})
				aTotRegs[4] := len(aLog)
			EndIf
			Aadd(aLog[aTotRegs[4]],STR0015+(cAliasTRB)->RC_FILIAL+"-"+(cAliasTRB)->RC_MAT)  //"Nao enviado(s) - Matricula: "
			(cAliasTRB)->(dbskip())
			Loop
		EndIf
	Else
		cCusto := (cAliasTRB)->RA_CC
		dbSelectArea("SRA")
		dbSetOrder(1)
		dbSeek((cAliasTRB)->RA_FILIAL+(cAliasTRB)->RA_MAT)
	EndIf

	//--Verifica a situacao no mes de processamento
	cSitFunc := SRA->RA_SITFOLH

	If SRA->RA_SITFOLH == "D" .And. MesAno(SRA->RA_DEMISSA) > MesAno(dAuxPar01)
		cSitFunc := " "
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se a geracao for de meses ja fechados, e o funcionario estiver demitido ou  ³
	//³transferido de filial, usar o centro de custo do cadastro de funcionario.   ³
	//³( No caso do funcionario estar transferido,ele nao tera lancamentos no SRC )³
	//³----------------------------------------------------------------------------³
	//³Se nao estiver demitido, usar o centro de custo do primeiro lancamento do   ³
	//³mes, pois como nao foi escolhida a opcao "rateado" entende-se que todos os  ³
	//³lancamentos foram feitos no mesmo centro de custo.                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	If !lRat .and. cSitFunc # "D"
	   cCusto	:= (cAliasTRB)->RC_CC
	EndIf

	If ! IsBlind()
		GPIncProc((cAliasTRB)->RA_FILIAL+" - "+(cAliasTRB)->RA_MAT+" - "+SRA->RA_NOME )
	EndIf

	If nDemitido == 1 .and. cSitFunc #"D" //Somente demitidos
		FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
		Loop
	EndIf

	// Recolhimento de dissidio coletivo ou de reclamatoria trabalhista
	If cRecol == "650" .and. (nDissidio == 2)
		If cSitFunc # "D"
			If aTotRegs[5]== 0
				cLog := STR0016 //"Demitidos nao constam na SEFIP para o Codigo de Recolhimento 650"
				Aadd(aTitle,cLog)
				Aadd(aLog,{})
				aTotRegs[5] := len(aLog)
			EndIf
			Aadd(aLog[aTotRegs[5]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+" - "+SRA->RA_NOME)
			FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
			Loop
		EndIf
	EndIf
	//--Verifica se tem codigo de Saque de FGTS
	If !Empty(SRA->RA_DEMISSA)
		lSaque	:= VerCodSaq(SRA->RA_FILIAL,SRA->RA_MAT,SRA->RA_DEMISSA,@lGRRF)
	EndIf

	//Somente Rescisao Complementar
	If lOnlyComp
		If (cSitFunc <> "D") .or. (MesAno(SRA->RA_DEMISSA) >= MesAno(dAuxPar01) )
			If (cSitFunc == "D")
				If aTotRegs[6]== 0
					cLog := STR0017 //"Somente com Rescisao Complementar - Mes/Ano de demissao maior/igual a data de referencia"
					Aadd(aTitle,cLog)
					Aadd(aLog,{})
					aTotRegs[6] := len(aLog)
				EndIf
				Aadd(aLog[aTotRegs[6]],STR0018+ SRA->RA_FILIAL+"-"+SRA->RA_MAT+" - "+SRA->RA_NOME)  //"Nao Enviado(s) - "
			EndIf
			FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
			Loop
		EndIf
	Else
		If (cSitFunc = "D" .And. MesAno(SRA->RA_DEMISSA) < MesAno(dAuxPar01) .And. nRescComp = 4) .or. ;
			(cSitFunc = "D" .And. MesAno(SRA->RA_DEMISSA) = MesAno(dAuxPar01) .And. nRescMes = 4 ) .or. ;
			(cSitFunc = "D" .And. MesAno(SRA->RA_DEMISSA) = MesAno(dAuxPar01) .And. (nRescMes = 1 .and. lSaque )) .or. ;//	a Pedido com codigo de Saque de FGTS
			(cSitFunc = "D" .And. MesAno(SRA->RA_DEMISSA) = MesAno(dAuxPar01) .And. (nRescMes = 2 .and. !lSaque ))      // Por Dispensa e sem codigo de Saque de FGTS

			FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
			Loop
		EndIf
	EndIf

	If (cSitFunc == "D") .And. (MesAno(SRA->RA_DEMISSA) < MesAno(dAuxPar01)) .And. (nRescComp # 4)
		If (nRescComp = 1 .and. lSaque ) .or. ;	// a Pedido com codigo de Saque de FGTS
			(nRescComp = 2 .and. !lSaque )       	// Por Dispensa e sem codigo de Saque de FGTS
			FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
			Loop
		EndIf
	EndIf
	// Nao Gerar para Funcionarios com situacao T=Transferido
	If cSitFunc $ "T"
		If aTotRegs[7]== 0
			cLog := STR0019 //"Nao Enviado(s) - Transferido(s): "
			Aadd(aTitle,cLog)
			Aadd(aLog,{})
			aTotRegs[7] := len(aLog)
		EndIf
		Aadd(aLog[aTotRegs[7]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+" - "+SRA->RA_NOME)
		FTesta(lRat, If(nDissidio == 1, (cAliasTRB)->RA_FILIAL, (cAliasTRB)->RC_FILIAL), cCusto, If(nDissidio == 1, (cAliasTRB)->RA_MAT, (cAliasTRB)->RC_MAT))
		Loop
	EndIf

	// Nao gerar conforme o parametro Funcionario De/Ate
	If (cAliasTRB)->RA_MAT < cMatDe .Or. (cAliasTRB)->RA_MAT > cMatAte
		FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
		Loop
	EndIf

	If !Empty( cSraFilter )
		If !( &( cSraFilter ) )
			FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
			Loop
		EndIf
	EndIf
	//-- Nao Gerar Para as Categoria Estagiario
	If SRA->RA_CATFUNC $ "E*G"
		If aTotRegs[8]== 0
			cLog := STR0020 //"Nao Enviado(s) - Estagiario: "
			Aadd(aTitle,cLog)
			Aadd(aLog,{})
			aTotRegs[8] := len(aLog)
		EndIf
		Aadd(aLog[aTotRegs[8]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+" - "+SRA->RA_NOME)
		FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
		Loop
	EndIf

	//-- Pis em branco
	If Empty(SRA->RA_PIS)
		If aTotRegs[9]== 0
			cLog := STR0018+STR0009        //"Nao Enviado(s) - "### "PIS INVALIDO"
			Aadd(aTitle,cLog)
			Aadd(aLog,{})
			aTotRegs[9] := len(aLog)
		EndIf
		Aadd(aLog[aTotRegs[9]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+" - "+SRA->RA_NOME)
		FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
		Loop
	EndIf

	//-- Admitido apos a data de referencia
	If SRA->RA_ADMISSA > dAuxpar01 .OR. SRA->RA_OPCAO > dAuxpar01
		If aTotRegs[10]== 0
			cLog := STR0022 //"Nao Enviado(s) - Admitido apos a data de referencia"
			Aadd(aTitle,cLog)
			Aadd(aLog,{})
			aTotRegs[10] := len(aLog)
		EndIf
		Aadd(aLog[aTotRegs[10]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+" - "+SRA->RA_NOME)
		FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
		Loop
	EndIf

	//-- Regime de Previdencia Diferenciado - Gestao Publica
    If lGestPubl .AND. SRA->RA_REGIME == "2"
       If !Empty(SRA->RA_TPPREVI) .And. SRA->RA_TPPREVI != "1"
            If aTotRegs[11]== 0
               cLog := STR0018+STR0097  //"Nao Enviado(s) - "### "Regime de previdencia diferenciado"
               Aadd(aTitle,cLog)
               Aadd(aLog,{})
               aTotRegs[11] := len(aLog)
            EndIf
            Aadd(aLog[aTotRegs[11]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+" - "+SRA->RA_NOME)
            FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,(cAliasTRB)->RA_MAT)
            Loop
       EndIf
    EndIf

	If cCusto < cCcDe .Or. cCusto > cCcAte
		FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
		Loop
	EndIf

	//-- Tipo de Contrato
	If !(SRA->RA_TPCONTR $ cTpC)
		FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
		Loop
	EndIf

	//--Centro de custo
	If (nFilCc == 2) .And. !FTomador((cAliasTRB)->RA_FILIAL,cCusto,nComTomador,nTpTomador)
		FTesta(lRat,If (nDissidio == 1,(cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_FILIAL),cCusto,If (nDissidio == 1,(cAliasTRB)->RA_MAT,(cAliasTRB)->RC_MAT))
		Loop
	EndIf
	//--Busca a categoria do Funcionario
	cCateg	:=	FCateg(nFgts)

	If cRecol $ "130" .and. cCateg # "02"
		dbSelectArea(cAliasTRB)
		dbSkip()
		Loop
	EndIf

	nDiasAc 	:= 0
	nDiasAd 	:= 0
	nDiasMat	:= 0
	DiasTrab	:= 30
	aAfast  	:= {}
	If l1Vez
		l1Vez		:= .F.
		cFilAnterior:= (cAliasTRB)->RA_FILIAL
		cCustoAux	:= cCusto

		//-- Carrega o aInfo com os dados do SIGAMAT.EMP
		If !fInfo(@aInfo,(cAliasTRB)->RA_FILIAL)
			Exit
		EndIf

		// Carrega o aCodFol
		If !FP_CODFOL(@aCodFol,(cAliasTRB)->RA_FILIAL)
			Exit
		EndIf

		lTem1887 := Len(aCodFol) >= 1887

		// Carrega Percentuais de INSS Empresa
		If !fInssEmp((cAliasTRB)->RA_FILIAL,@aInssEmp,.T.,MesAno(dAuxPar01))
			Help( ,, OemToAnsi(STR0063),, OemToAnsi(STR0105), 1, 0 ) //"Atenção" ## "Verifique o cadastro das tabelas de Encargos Empresa (S037) e Outras Entidades (S038)"
			Return .F.
		EndIf

		If lFirstTime
			lFirstTime := .F.
			Aadd(aLog[aTotRegs[2]], STR0220)//"Tabelas S037 e S038: "
		EndIf

		Aadd(aLog[aTotRegs[2]], "")
		Aadd(aLog[aTotRegs[2]], STR0221 + (cAliasTRB)->RA_FILIAL)//" * Filial: "
		Aadd(aLog[aTotRegs[2]], STR0222)//"  Contrato indeterminado: "
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% Empresa" + " - ",15) + Str(aInssEmp[01, 1]*100, 8, 4) + " | " + Padr("% Acid.Trab." + " - ",15) + Str(aInssEmp[03, 1]*100, 8, 4) + " | " + Padr("% Rat" + " - ",15) + Str(aInssEmp[29, 1]*100, 8, 4) + " | " + Padr("% FGTS" + " - ",15) + Str(aInssEmp[04, 1]*100, 8, 4) + " | " + Padr("% Terceiros" + " - ",15) + Str(aInssEmp[02, 1]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% Sal.Educa." + " - ",15) + Str(aInssEmp[09, 1]*100, 8, 4) + " | " + Padr("% INCRA" + " - ",15) + Str(aInssEmp[10, 1]*100, 8, 4) + " | " + Padr("% SENAI" + " - ",15) + Str(aInssEmp[11, 1]*100, 8, 4) + " | " + Padr("% SESI" + " - ",15) + Str(aInssEmp[12, 1]*100, 8, 4) + " | " + Padr("% SENAC" + " - ",15) + Str(aInssEmp[13, 1]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% SESC" + " - ",15) + Str(aInssEmp[14, 1]*100, 8, 4) + " | " + Padr("% SEBRAE" + " - ",15) + Str(aInssEmp[15, 1]*100, 8, 4) + " | " + Padr("% DPC" + " - ",15) + Str(aInssEmp[16, 1]*100, 8, 4) + " | " + Padr("% F. AER." + " - ",15) + Str(aInssEmp[17, 1]*100, 8, 4) + " | " + Padr("% SENAR" + " - ",15) + Str(aInssEmp[18, 1]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% SECONC" + " - ",15) + Str(aInssEmp[19, 1]*100, 8, 4) + " | " + Padr("% SEST" + " - ",15) + Str(aInssEmp[22, 1]*100, 8, 4) + " | " + Padr("% SENAT" + " - ",15) + Str(aInssEmp[23, 1]*100, 8, 4) + " | " + Padr("% SESCOOP" + " - ",15) + Str(aInssEmp[26, 1]*100, 8, 4) + " | " + Padr("% Adic.SENAI" + " - ",15) + Str(aInssEmp[30, 1]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], STR0223)//"  Contrato determinado: "
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% Empresa" + " - ",15) + Str(aInssEmp[01, 2]*100, 8, 4) + " | " + Padr("% Acid.Trab." + " - ",15) + Str(aInssEmp[03, 2]*100, 8, 4) + " | " + Padr("% Rat" + " - ",15) + Str(aInssEmp[29, 2]*100, 8, 4) + " | " + Padr("% FGTS" + " - ",15) + Str(aInssEmp[04, 2]*100, 8, 4) + " | " + Padr("% Terceiros" + " - ",15) + Str(aInssEmp[02, 2]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% Sal.Educa." + " - ",15) + Str(aInssEmp[09, 2]*100, 8, 4) + " | " + Padr("% INCRA" + " - ",15) + Str(aInssEmp[10, 2]*100, 8, 4) + " | " + Padr("% SENAI" + " - ",15) + Str(aInssEmp[11, 2]*100, 8, 4) + " | " + Padr("% SESI" + " - ",15) + Str(aInssEmp[12, 2]*100, 8, 4) + " | " + Padr("% SENAC" + " - ",15) + Str(aInssEmp[13, 2]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% SESC" + " - ",15) + Str(aInssEmp[14, 2]*100, 8, 4) + " | " + Padr("% SEBRAE" + " - ",15) + Str(aInssEmp[15, 2]*100, 8, 4) + " | " + Padr("% DPC" + " - ",15) + Str(aInssEmp[16, 2]*100, 8, 4) + " | " + Padr("% F. AER." + " - ",15) + Str(aInssEmp[17, 2]*100, 8, 4) + " | " + Padr("% SENAR" + " - ",15) + Str(aInssEmp[18, 2]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% SECONC" + " - ",15) + Str(aInssEmp[19, 2]*100, 8, 4) + " | " + Padr("% SEST" + " - ",15) + Str(aInssEmp[22, 2]*100, 8, 4) + " | " + Padr("% SENAT" + " - ",15) + Str(aInssEmp[23, 2]*100, 8, 4) + " | " + Padr("% SESCOOP" + " - ",15) + Str(aInssEmp[26, 2]*100, 8, 4) + " | " + Padr("% Adic.SENAI" + " - ",15) + Str(aInssEmp[30, 2]*100, 8, 4))

		If aInfo[15] == 1 .Or. ( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ) )	// CEI
			cInfo := "2"
		Else
			cInfo := "1"			// CGC/CNPJ
		EndIf

		cAuxCGC := If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )
		cCNPJFAP := cAuxCGC

		//Carrega verbas de adicionais de maternidade
		cDedSalMat	:= aCodFol[1338,1] + aCodFol[1339,1] + aCodFol[1340,1] + aCodFol[1341,1] + aCodFol[1342,1] + aCodFol[1351,1] + aCodFol[1352,1] + aCodFol[1353,1] + aCodFol[1354,1] + aCodFol[1355,1]

		cFgtsMAnt := aCodFol[117,1]
	EndIf
    aDetAfas := {}
	//-- Funcao que retorna Dias trabalhados e Afastados no Mes
	If nTipo == 1
		If SRA->RA_CATFUNC $ "A*P"
			cRot := cRotAut
		Else
			cRot := cRotFol
		EndIf
		//Alteração Temporaria para Folha Mista
		If lGestPubl .And. SRA->RA_REGIME == "2"
			cRot := "FPB"
		Endif
	Else
		cRot := cRot132

		//Alteração Temporaria para Folha Mista
		If lGestPubl .And. SRA->RA_REGIME == "2"
			cRot := "213"
		Endif
	EndIf

	FDiasAfast(@nDiasAfas,@DiasTrab,dAuxPar01,.F.,,,aDetAfas,.T.,.F. )

	If cFilAnterior # (cAliasTRB)->RA_FILIAL
		// Guarda informacoes da filial anterior
		cAuxFil		:= cFilAnterior

		//--Quando filial for Cei e Centraliza filiais deve gerar filial responsalvel
		If nCentra == 1 .And. cInfo == "2"
			aAuxInfo 	:= aClone(aInfoResp)
			cAuxInfo	:= cInfoResp
		Else
			aAuxInfo	:= aClone(aInfo)
			cAuxInfo	:= cInfo
		EndIf
		nAuxSal		:= nSalFam
		nAuxFgts	:= nFgts

		//Quando for competencia 12 calcular o Valor Devido a Previdencia do 13o.
		nValDPrev 	:= 0
		If Month(dAuxPar01) == 12
			fCValDev(nTB13Inss,aInssEmp,nTotAci,nT13Inss,0.00,@nValDPrev)
		EndIf

		// Carrega o aInfo com os dados do SIGAMAT.EMP
		If !fInfo(@aInfo,(cAliasTRB)->RA_FILIAL)
			Exit
		EndIf

		// Carrega Percentuais de INSS Empresa
		If !fInssEmp((cAliasTRB)->RA_FILIAL,@aInssEmp,.F.,MesAno(dAuxPar01))
			Help( ,, OemToAnsi(STR0063),, OemToAnsi(STR0105), 1, 0 ) //"Atenção" ## "Verifique o cadastro das tabelas de Encargos Empresa (S037) e Outras Entidades (S038)"
			Return .F.
		EndIf

		Aadd(aLog[aTotRegs[2]], "")
		Aadd(aLog[aTotRegs[2]], STR0221 + (cAliasTRB)->RA_FILIAL)//" * Filial: "
		Aadd(aLog[aTotRegs[2]], STR0222)//"  Contrato indeterminado: "
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% Empresa" + " - ",15) + Str(aInssEmp[01, 1]*100, 8, 4) + " | " + Padr("% Acid.Trab." + " - ",15) + Str(aInssEmp[03, 1]*100, 8, 4) + " | " + Padr("% Rat" + " - ",15) + Str(aInssEmp[29, 1]*100, 8, 4) + " | " + Padr("% FGTS" + " - ",15) + Str(aInssEmp[04, 1]*100, 8, 4) + " | " + Padr("% Terceiros" + " - ",15) + Str(aInssEmp[02, 1]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% Sal.Educa." + " - ",15) + Str(aInssEmp[09, 1]*100, 8, 4) + " | " + Padr("% INCRA" + " - ",15) + Str(aInssEmp[10, 1]*100, 8, 4) + " | " + Padr("% SENAI" + " - ",15) + Str(aInssEmp[11, 1]*100, 8, 4) + " | " + Padr("% SESI" + " - ",15) + Str(aInssEmp[12, 1]*100, 8, 4) + " | " + Padr("% SENAC" + " - ",15) + Str(aInssEmp[13, 1]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% SESC" + " - ",15) + Str(aInssEmp[14, 1]*100, 8, 4) + " | " + Padr("% SEBRAE" + " - ",15) + Str(aInssEmp[15, 1]*100, 8, 4) + " | " + Padr("% DPC" + " - ",15) + Str(aInssEmp[16, 1]*100, 8, 4) + " | " + Padr("% F. AER." + " - ",15) + Str(aInssEmp[17, 1]*100, 8, 4) + " | " + Padr("% SENAR" + " - ",15) + Str(aInssEmp[18, 1]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% SECONC" + " - ",15) + Str(aInssEmp[19, 1]*100, 8, 4) + " | " + Padr("% SEST" + " - ",15) + Str(aInssEmp[22, 1]*100, 8, 4) + " | " + Padr("% SENAT" + " - ",15) + Str(aInssEmp[23, 1]*100, 8, 4) + " | " + Padr("% SESCOOP" + " - ",15) + Str(aInssEmp[26, 1]*100, 8, 4) + " | " + Padr("% Adic.SENAI" + " - ",15) + Str(aInssEmp[30, 1]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]],STR0223 )//"  Contrato determinado: "
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% Empresa" + " - ",15) + Str(aInssEmp[01, 2]*100, 8, 4) + " | " + Padr("% Acid.Trab." + " - ",15) + Str(aInssEmp[03, 2]*100, 8, 4) + " | " + Padr("% Rat" + " - ",15) + Str(aInssEmp[29, 2]*100, 8, 4) + " | " + Padr("% FGTS" + " - ",15) + Str(aInssEmp[04, 2]*100, 8, 4) + " | " + Padr("% Terceiros" + " - ",15) + Str(aInssEmp[02, 2]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% Sal.Educa." + " - ",15) + Str(aInssEmp[09, 2]*100, 8, 4) + " | " + Padr("% INCRA" + " - ",15) + Str(aInssEmp[10, 2]*100, 8, 4) + " | " + Padr("% SENAI" + " - ",15) + Str(aInssEmp[11, 2]*100, 8, 4) + " | " + Padr("% SESI" + " - ",15) + Str(aInssEmp[12, 2]*100, 8, 4) + " | " + Padr("% SENAC" + " - ",15) + Str(aInssEmp[13, 2]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% SESC" + " - ",15) + Str(aInssEmp[14, 2]*100, 8, 4) + " | " + Padr("% SEBRAE" + " - ",15) + Str(aInssEmp[15, 2]*100, 8, 4) + " | " + Padr("% DPC" + " - ",15) + Str(aInssEmp[16, 2]*100, 8, 4) + " | " + Padr("% F. AER." + " - ",15) + Str(aInssEmp[17, 2]*100, 8, 4) + " | " + Padr("% SENAR" + " - ",15) + Str(aInssEmp[18, 2]*100, 8, 4))
		Aadd(aLog[aTotRegs[2]], "    " + Padr("% SECONC" + " - ",15) + Str(aInssEmp[19, 2]*100, 8, 4) + " | " + Padr("% SEST" + " - ",15) + Str(aInssEmp[22, 2]*100, 8, 4) + " | " + Padr("% SENAT" + " - ",15) + Str(aInssEmp[23, 2]*100, 8, 4) + " | " + Padr("% SESCOOP" + " - ",15) + Str(aInssEmp[26, 2]*100, 8, 4) + " | " + Padr("% Adic.SENAI" + " - ",15) + Str(aInssEmp[30, 2]*100, 8, 4))

		If aInfo[15] == 1 .Or. ( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ) )
			cInfo := "2"
		Else
			cInfo := "1"
		EndIf

		If cAuxCgc # If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )  //Quebra Filial
			//-- Verificando o Tamanho do FPAS
			If SubStr(aInfo[17],1,1) == "0"
				cFPAS	:= SubStr(aInfo[17],2,3)
			Else
				cFPAS	:= SubStr(aInfo[17],1,3)
			EndIf

			//--Geracao do registro de tomador de servico a cada mudanca de cgc
			fGera20(cCusto,@cCustoAux,aAuxInfo,@cInsc,@cTipo,@n20SalFamAnt,@nT13Inss,@nTB13Inss,@nTotAci,@cAuxFil,SRA->RA_FILIAL,aCodFol,lRat,@n20SalFam)

			If lGera30
				If Ascan(aGerou30,{|x|x[1]==cFilAnterior})== 0

					cFilUsada := cFilAnterior
					aInfoNova := {}
					nPos := Ascan(aGerou30,{|x|x[2]== aAuxInfo[08]})

				    If nPos > 0
						If cFilAnterior # aGerou30[nPos,1]
							cFilUsada := aGerou30[nPos,1]
							If !fInfo(@aInfoNova,cFilUsada)
					   			Exit
						   	EndIf
						Else
						   	aInfoNova := aclone(aAuxInfo)
						EndIf
				    Else
					    aInfoNova := aclone(aAuxInfo)
			    	EndIf
					DBF_TIPO10(cFilUsada,aInfoNova,cInfo,nSalFam,nT13Inss,nSalMat1,nValDPrev)
				Else
					DBF_TIPO10(cFilAnterior,aAuxInfo,cAuxInfo,nSalFam,nT13Inss,nSalMat1,nValDPrev)
				EndIf
				nSalMat1 := 0
				lJaGerou := .T.
				aGerou30 := {}

				//Carrega valores da GPS
				fGPSVal(cFilAnterior,cAnoMesGps,@aGPSVal,SRA->RA_TPCONTR)

				nVlCooper := nValRec := nValProPf := nValProPj := nValComps := 0
				cPerIniCmp:= cPerFimCmp := ""

				For nx := 1 to len(aGpsVal)
					lGPS := If(!empty(aGpsVal[nX,1]),(alltrim(aGpsVal[nX,1])>= alltrim(cCcDe) .Or. alltrim(aGpsVal[nX,1]) <= alltrim(cCcAte)),.T.)
					If lGPS
						lSI3 := .T.
						If !Empty( cSi3Filter )
				 			(cAliasCC)->(dbSeek(cFilAnterior+alltrim(aGpsVal[nX,1])))
							lSI3 := &( cSi3Filter )
						EndIf

						If lSI3
							If aGpsVal[nX,02] == aCodFol[313,1]
								nVlCooper += aGpsVal[nx,03] // Base da Cooperativa
							ElseIf aGpsVal[nX,02] == aCodFol[198,1]
								nValRec	  += aGpsVal[nX,03] // Base da Receita
							ElseIf aGpsVal[nX,02] == aCodFol[315,1]
								nValProPf += aGpsVal[nX,03] // Valor Producao Rural P.Fisica
							ElseIf aGpsVal[nX,02] == aCodFol[316,1]
								nValProPj += aGpsVal[nX,03] // Valor Producao Rural P.Juridica
							ElseIf aGpsVal[nX,02] == aCodFol[584,1]
								nValComps += aGpsVal[nX,05] // Valor da Compensacao da GPS
								cPerIniCmp:= aGpsVal[nX,08]	// Ano/mes do periodo inicial de Compensacao
								cPerFimCmp:= aGpsVal[nX,09]	// Ano/mes do periodo final de Compensacao
							EndIf
						EndIf
					EndIf
				Next nX
				If (nDeduc # 0) .Or. (nValRec # 0) .Or. (nValProPf # 0) .Or. (nValproPj # 0) .or. (nVlCooper#0);
					.Or. (nValComps#0) .or. cRecol$ '650#660'
					DBF_TIPO12 (aAuxInfo,cAuxInfo)
				EndIf
				lGera30 := .F.
			Else
				//-- P.E. para controle das filiais que tiveram registro 10 gerado em funcao da ausencia de
				//-- registro tipo 30 (movimentos do funcionario) ou tipo 32 (movimentacao de funcionarios)
				If lGP610NMv
					ExecBlock("GP610NMV", .F., .F.,{cFilAnterior,aClone(aAuxInfo)} )
				EndIf
			EndIf
			// Zerar Variaveis para o Proximo Tipo 10
			nSalFam		:= 0
			nDeduc 		:= 0
			nFgts		:= 0
			nT13Inss	:= 0
			nTB13Inss	:= 0
			nTotAci		:= 0
			cAuxCgc 	:=If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )

		EndIf

		// Carrega o aCodFol
		If !FP_CODFOL(@aCodFol,(cAliasTRB)->RA_FILIAL)
			Exit
		EndIf

		cFilAnterior:= (cAliasTRB)->RA_FILIAL

	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa Acumuladores de 13§ e Juros						 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nFgts		:= 0
	nB13Fgts 	:= 0
	nVlrAvi13	:= 0
	nB13Ant		:= 0
	nJam 		:= 0
	nB13Inss	:= 0
	nSc13Sal	:= 0
	nB13InRc	:= 0
	nBInss		:= 0
	nBInssPro	:=0
	nValor247	:= 0
	nBFgts		:= 0
	nFgtsRes 	:= 0
	nSalMat  	:= 0
	nFgtsR13	:= 0
	nInss		:= 0
	n13Inss		:= 0
	nInssOutr	:= 0
	nBinssPF	:= 0
	nBinssPJ	:= 0
	nInssPF		:= 0
	nInssPJ		:= 0
	nVl13Sal	:= 0
	nDiasSM		:= 0
	nAvos13Mat	:= 0

	n2B13Fgts 	:= 0
	n2B13Inss	:= 0
	n2BFgts		:= 0
	n2BInss		:= 0

	lGera32  	:= .F.
	nComissao	:= 0
	nAvoDifDis	:= 0
	nAvoDis114	:= 0
	nDesINSS	:= 0
	n13Anteci	:= 0
	n13resci	:= 0
	nVlrCP00	:= 0
	nVlrCP15	:= 0
	nVlrMater	:= 0
	// aCodFol[13]	= Base INSS Folha ate o limite s/13
	// aCodFol[14]	= Base INSS Folha acima do limite s/13
	// aCodFol[17]	= Base FGTS
	// aCodFol[18] 	= FGTS Deposito
	// aCodFol[19]	= Base INSS 13o ate o limite
	// aCodFol[20]	= Base INSS 13o acima do limite
	// aCodFol[34]	= Salario Familia
	// aCodFol[40]	= Salario Maternidade
	// aCodFol[64]	= INSS Folha
	// aCodFol[65]	= INSS Ferias
	// aCodFol[70]	= INSS 13o
	// aCodFol[108] = Base FGTS 13o Salario
	// aCodFol[119]	= FGTS Pago na Rescisao
	// aCodFol[120] = FGTS artigo 22 pagamento rescisao
	// aCodFol[214]	= FGTS 13o. na Rescisao
	// aCodFol[221] = Sal.Contr.Aut./Pro-Lab. 15%
	// aCodFol[225] = Sal.Contr.Aut./Pro-Lab. 20%
	// aCodFol[288] = Salario de Contribuicao Inss Outras Empresas
	// aCodFol[289] = Desconto do Inss Outras Empresas
	// aCodFol[350]	= Base INSS autonomo P.Fisica
	// aCodFol[351] = Valor INSS autonomo P.Fisica
	// aCodFol[353] = Base INSS autonomo P.Juridica
	// aCodFol[354] = Valor INSS autonomo P.Juridica

	If nTipo == 1
		cRotAux := cRotFol13
		lMatTrf := (cAliasTRB)->RC_ROTEIR <> 'TRF'
		//ÚÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ FOLHA     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÙ
		If cRecol == "650" .and. nDissidio == 1 .and. MesAno(dAuxPar01) >= "200508" .and. MesAno(dAuxPar01)<= "200703"
			dbSelectArea( 'RHH' )
			afunc := {}
			RHH->( dbSeek( SRA->RA_FILIAL + SRA->RA_MAT ) )
			While RHH->( ! Eof() ) .And. (!lRat .And. RHH->( RHH_FILIAL+RHH_MAT ) == SRA->( RA_FILIAL+RA_MAT )) .Or.;
										  ( lRat .And. RHH->( RHH_FILIAL+RHH_CC+RHH_MAT ) == SRA->( RA_FILIAL + cCusto + RA_MAT ))

				If RHH->RHH_COMPL_ == "S" .and. RHH->RHH_VB # "000" .and. ;
					SubStr( RHH->RHH_DATA, 3, 4 ) + SubStr( RHH->RHH_DATA, 1, 2 ) == MesAno( dAuxpar01 ) .and.;
					(	RHH->RHH_VERBA == aCodFol[337,1] .OR. ;
						RHH->RHH_VERBA == aCodFol[338,1] .OR. ;
						RHH->RHH_VERBA == aCodFol[339,1] .OR. ;
						RHH->RHH_VERBA == aCodFol[340,1] .OR. ;
						RHH->RHH_VERBA == aCodFol[398,1] .OR. ;
						RHH->RHH_VERBA == aCodFol[399,1] )

				   	lConsidera := If( RHH->( FieldPos( "RHH_INTEGR" ) ) # 0, RHH->RHH_INTEGR == "S", .T. )
				   	If lConsidera
						nLinha := Ascan( aFunc, { | X | X[1]+X[2]+X[3]+X[4] = SRA->RA_FILIAL+SRA->RA_MAT+RHH_VERBA+RHH_CC } )

					 	If nLinha  > 0
					 		aFunc[nLinha,5] += RHH_VALOR
					 	Else
			 				Aadd( aFunc, { SRA->RA_FILIAL, SRA->RA_MAT, RHH->RHH_VERBA, RHH->RHH_CC, RHH->RHH_VALOR } )
						EndIf

						// Atualiza a Var para Informar que a Resc. Complementar do Funcionario eh de Dissidio
						lComplDiss	:= .T.

					EndIf
				EndIf
				RHH->( dbSkip() )
			EndDo

           	For nI := 1 to len(aFunc)

				If aFunc[nI,3] == aCodFol[337,1] //Bs FGTS Dissidio
					nBFgts += Round(aFunc[nI,5],2)
				EndIf
				If aFunc[nI,3] == aCodFol[338,1] //aCodFol[341,1]   //Bs INSS Dissidio
					nBInss += Round(aFunc[nI,5],2)
				EndIf
				If aFunc[nI,3] == aCodFol[339,1]  //Vl FGTS
					nFgts += Round(aFunc[nI,5],2)
				EndIf
				If aFunc[nI,3] == aCodFol[340,1]  //Vl INSS
					nInss  += Round(aFunc[nI,5],2)
				EndIf
				If aFunc[nI,3] == aCodFol[399,1] //aCodFol[402,1]  // Bs Inss Dif. Dissidio 13o.(Provento)
					nB13Inss += Round(aFunc[nI,5],2)
					nB13InRc += Round(aFunc[nI,5],2)
				EndIf
				If aFunc[nI,3] == aCodFol[398,1]       //Bs FGTS 13o. dif. Dissidio
					nB13Fgts += Round(aFunc[nI,5],2)
				EndIf
				If aFunc[nI,3] == aCodFol[401,1]       //Vl Inss 13o. dif. Dissidio
					n13Inss += Round(aFunc[nI,5],2)
				EndIf
            Next
			(cAliasTRB)->(dbskip())
		Else
			If lRat
				SRC->( dbSetOrder(2) )
				SRC->( dbSeek((cAliasTRB)->RC_FILIAL+(cAliasTRB)->RC_CC+(cAliasTRB)->RC_MAT+(cAliasTRB)->RC_PD))
			Else
				SRA->( dbSetOrder(1) )
				If (cAliasTRB)->ORIGEM = "SRE"
					SRA->( dbSeek((cAliasTRB)->RA_FILIAL+(cAliasTRB)->RA_MAT))
				Else
					SRA->( dbSeek((cAliasTRB)->RC_FILIAL+(cAliasTRB)->RC_MAT))
				EndIf
			EndIf

			dbSelectArea(cAliasTRB)

			If !lRat .and. cSitFunc # "D"
				aTransf := {}
				fTransfCc( @aTransf , , .F. , .T. )
				If Empty(aTransf)
					cCusto := (cAliasTRB)->RA_CC
				Else
					Aeval( aTransf, {|X| If(AnoMes(X[7]) <= cPeriodo , cCusto := x[6], cCusto := x[3] ) }) 
				EndIf 
			EndIf
			lSkipSRE := .F.
			While !Eof() .And. (!lRat .And. (cAliasTRB)->RC_FILIAL+(cAliasTRB)->RC_MAT == SRA->RA_FILIAL+SRA->RA_MAT) .Or.;
				(lRat .And. (cAliasTRB)->RC_FILIAL+(cAliasTRB)->RC_CC+(cAliasTRB)->RC_MAT == SRA->RA_FILIAL+cCusto+SRA->RA_MAT)

				If (cAliasTRB)->ORIGEM == "SRE"
					(cAliasTRB)->( dbSkip() )
					lSkipSRE	:= .T.
					Loop
				EndIf

				lCalSRC	:= .T.

				If !Empty( cSrcFilter )
					If !( &( cSrcFilter ) )
						dbSelectArea((cAliasTRB))
						dbSkip()
						Loop
					EndIf
				EndIf

				//-- Nao Considerar C.Custo com CEI Para Rateado sem Cei
				If nFilCc == 2 .And. nComTomador == 2 .And. nRateio == 1
					If !FTomador((cAliasTRB)->RA_FILIAL,(cAliasTRB)->RC_CC,nComTomador,nTpTomador)
						dbSelectArea(cAliasTRB)
						dbSkip()
						Loop
					EndIf
				EndIf

				// ( testar se os lancamento nao sao da competencia 13 )
				If nDissidio == 1     // Dissidio Retroativo

					If (cAliasTRB)->RC_PD == aCodFol[986,1]        //Dif. Diss. RRA 986
						nBFgts += Round((cAliasTRB)->RC_VALOR,2)
						nBInss += Round((cAliasTRB)->RC_VALOR,2)
						lTemDissid := .T.
					Endif

					If (cAliasTRB)->RC_PD == aCodFol[337,1] //Bs FGTS Dissidio
						nBFgts += Round((cAliasTRB)->RC_VALOR,2)
						lTemDissid := .T.
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[338,1] //aCodFol[341,1]   //Bs INSS Dissidio
						nBInss += Round((cAliasTRB)->RC_VALOR,2)
						lTemDissid := .T.
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[339,1]  //Vl FGTS
						nFgts += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[340,1]         //Vl INSS
						nInss  += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[399,1]			//aCodFol[402,1]	// Bs Inss 13o. Dif. Dissidio (Provento)

						// Somente informar base dissidio 13o qdo Codigo Recolhimento nao for 115
						IF cRecol # "115"
							nB13Inss += Round((cAliasTRB)->RC_VALOR,2)
						EndIf

						nB13InRc += Round((cAliasTRB)->RC_VALOR,2)
						lTemDissid := .T.
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[398,1]       //Bs FGTS 13o. dif. Dissidio
						nB13Fgts += Round((cAliasTRB)->RC_VALOR,2)
						lTemDissid := .T.
					EndIf
					If (cAliasTRB)->RC_PD == aCodFol[401,1]         // Vl Inss 13o. Dif. Dissidio
						n13Inss += Round((cAliasTRB)->RC_VALOR,2)
						lTemDissid := .T.
					EndIf

					// Para Codigo Recolhimento 650 e Rescisao complementar no mesmo Mes devera ser
					// calculada a base da diferenca FGTS conforme os avos das verbas de ID 114 e 115
					IF cRecol == "650" 
						If SRC->RC_PD $ aCodFol[114,1] + "/" + aCodFol[115,1]
							IF SRC->RC_PD == aCodFol[114,1]
								nAvoDis114 += Int(SRC->RC_HORAS)
							EndIf
							nAvoDifDis += Int(SRC->RC_HORAS)
						EndIf
						If ((cAliasTRB)->RC_PD == aCodFol[115, 1] .Or. (cAliasTRB)->RC_PD == aCodFol[253, 1]) .And. RetValSrv((cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_FGTS") == "S"//13o Sobre Aviso Previo##Media 13o. Salario Sobre Aviso Indenizado Rescisao
							nB13Fgts -= Round((cAliasTRB)->RC_VALOR, 2)
						EndIf
						If !lSomavis .And. (cAliasTRB)->RC_PD $ (aCodFol[1685, 1]+"/"+aCodFol[1691, 1]+"/"+aCodFol[1697, 1]+"/"+aCodFol[1703, 1]+"/"+aCodFol[1709, 1]+"/"+aCodFol[1715, 1]+aCodFol[1721, 1] )//Adicionais sobre 13º sobre aviso prévio
							If RetValSrv((cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_FGTS") == "S"
								nB13Fgts -= Round((cAliasTRB)->RC_VALOR, 2)
							EndIf
							If RetValSrv((cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_INSS") == "S"
								nB13Inss -= Round((cAliasTRB)->RC_VALOR, 2)
							EndIf
						EndIf
					EndIf

				Else
					If (cAliasTRB)->RC_PD == aCodFol[13,1] .Or. (cAliasTRB)->RC_PD == aCodFol[14,1]
						nBInss += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[221,1] .Or. (cAliasTRB)->RC_PD == aCodFol[225,1]
						nBInssPro += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[17,1] .or.  (cAliasTRB)->RC_PD == aCodFol[293,1] .or. ( lTem1887 .and. (cAliasTRB)->RC_PD == aCodFol[1887,1] )//Base FGTS ## Base Fgts rescisao por dispensa
						nBFgts += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[18,1]
						nFgts += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[64,1]  .Or. ;
						(cAliasTRB)->RC_PD == aCodFol[65,1] .Or. ;
						(cAliasTRB)->RC_PD == aCodFol[70,1] // here( testar id. 70 se nao e competencia 13)
						nInss  += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If Len(aCodFol) >= 1412 .And. (cAliasTRB)->RC_PD == aCodFol[1412,1]
						nInss  -= Round((cAliasTRB)->RC_VALOR,2)
					EndIf

	                If 	( Month(dAuxPar01) == 12 .Or. cSitFunc == "D" .Or.;
							(SRA->RA_CATEG == "07" .And. SRA->RA_CATEFD $ "107#108") .Or.;
							SRA->RA_CATFUNC == "T" .Or. SRA->RA_TPCONTR == "3" ) .And.;
						(cAliasTRB)->RC_ROTEIR $ cRotAux .And.;
						((cAliasTRB)->RC_PD == aCodFol[19,1] .Or.;  	//Base Inss Ate Lim p/ 13o. Sal.
							(cAliasTRB)->RC_PD == aCodFol[20,1])		//Base Inss Aci Lim p/ 13o. Sal.

						nB13Inss += Round((cAliasTRB)->RC_VALOR,2)
						nB13InRc += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[214,1]    //valor do FGTS na rescisao
						nFgtsR13 += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD $ aCodFol[34,1]+"*"+cSalFamDed
						nSalFam 	+= Round((cAliasTRB)->RC_VALOR,2)
						n20SalFam 	+= Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_ROTEIR $ cRotAux .And.;
						((cAliasTRB)->RC_PD == aCodFol[108,1] .Or. ;//Base FGTS 13§ Salario
						(cAliasTRB)->RC_PD == aCodFol[294,1] .Or. ;//Base Fgts 13 rescisao por dispensa
						(cAliasTRB)->RC_PD == aCodFol[1848,1] .Or.;//Base Fgts 13 - Afast Militar
						(cAliasTRB)->RC_PD == aCodFol[1849,1])     //Base Fgts 13 Resc. - Afast Militar 
						nB13Fgts += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_ROTEIR $ cRotAux .And. Len(aCodFol) >= 1415 .And. (cAliasTRB)->RC_PD == aCodFol[1415,1] //13 antecipado na rescisão mesmo mes
						nB13Fgts  -= Round((cAliasTRB)->RC_VALOR, 2)
						n2B13Fgts -= Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[1677,1]
						nB13Fgts  -= Round((cAliasTRB)->RC_VALOR, 2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[0116, 1] //13 antecipado
						n13Anteci += Round((cAliasTRB)->RC_VALOR, 2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[0114, 1] .Or. (cAliasTRB)->RC_PD == aCodFol[0115, 1] //13 indenizado ou 13 sobre aviso
						n13resci += Round((cAliasTRB)->RC_VALOR, 2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[119,1] .Or. ;
						(cAliasTRB)->RC_PD == aCodFol[120,1] .or. ;
						(cAliasTRB)->RC_PD == aCodFol[214,1]
						nFgtsRes += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[22,1]
						nB13Ant += Round((cAliasTRB)->RC_VALOR,2)
					EndIf


					If (cAliasTRB)->RC_PD $ aCodFol[040,1]+"*"+aCodFol[407,1]+"*"+cSalMatDed .or.;
						( (cAliasTRB)->RC_PD $ cDedSalMat .and. RetValSrv( (cAliasTRB)->RC_PD,(cAliasTRB)->RC_FILIAL,"RV_DEDINSS") == "S" )// 040 - Aux. Maternidade ##407 - Pagto Medias Auxilio Maternidade
						nSalMat += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[289,1] .or. ;  //Desconto do Inss Outras Empresas
						(cAliasTRB)->RC_PD == aCodFol[288,1]   		 //Salario de Contribuicao Inss Outras Empresas
						nInssOutr  += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[350,1]  //Bs Inss Autonomo P.Fisica
						nBinssPF  += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[351,1]  //Vl Inss Autonomo P.Fisica
						nInssPF  += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[353,1]  //Bs. Inss Autonomo P. Juridica
						nBinssPJ  += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[354,1]  //Vl Inss Autonomo P.Juridica
						nInssPJ  += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[247,1]  // Desconto 2.Parcela 13.Salario
						nValor247  += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If cSitFunc == "D" .AND. MesAno(SRA->RA_DEMISSA) < MesAno(dAuxPar01) .And. ;
	            		( (cAliasTRB)->RC_PD == aCodFol[121,1] .or. (cAliasTRB)->RC_PD ==aCodFol[122,1] .or.; //Comissoes
							(cAliasTRB)->RC_PD == aCodFol[165,1] .or. (cAliasTRB)->RC_PD == aCodFol[166,1] )
						nComissao	+= Round((cAliasTRB)->RC_VALOR,2)
					EndIf

					If (cAliasTRB)->RC_PD == aCodFol[064,1]         // INSS
						nDesINSS += Round((cAliasTRB)->RC_VALOR,2)
					EndIf

				EndIf

				If (cAliasTRB)->RC_PD $ aCodFol[111,1] + "/" + aCodFol[250,1] + "/" + aCodFol[252,1] + "/" + aCodFol[230,1] + "/" + aCodFol[231,1]  //Aviso Previo Indenizado //Media Aviso Previo Rescisao//Media ferias sobre aviso//Férias sobre aviso//1/3 Férias sobre aviso
				    If !lSomavis .And. RetValSrv( (cAliasTRB)->RC_PD,(cAliasTRB)->RC_FILIAL,"RV_INSS") == "S" //Somente se houver incidencia e MV_SOMAVIS = .F.
						nBInss -= Round((cAliasTRB)->RC_VALOR,2)
					EndIf
				EndIf

				If lVerMat .And. (cAliasTRB)->RC_PD $ P_DEDMAT
					nVlrMater += Round((cAliasTRB)->RC_VALOR,2)
				EndIf

				If lVerAfa00 .And. (cAliasTRB)->RC_PD $ cVerbasCP00
					nVlrCP00 += Round((cAliasTRB)->RC_VALOR,2)
				EndIf

 				If !(nDissidio == 1 .and. cRecol == '650') .and. lVerAfa15 .And. RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_INSS") == "S" .And. RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_INCCP") == "15"
					nVlrCP15 += Round((cAliasTRB)->RC_VALOR,2)
				EndIf

				// Atualiza a Var SE os Id's forem de Dissidio
				If(cAliasTRB)->RC_PD $ aCodFol[337,1] + "/" + aCodFol[338,1] + "/" + aCodFol[339,1] + "/" + ;
								aCodFol[340,1] + "/" + aCodFol[399,1] + "/" + aCodFol[398,1]
					lComplDiss	:= .T.
				EndIf

				If RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_INSS") == "S"
					If RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_REF13") == "S"
						If RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_TIPOCOD") == "1"
							n2B13Inss += Round((cAliasTRB)->RC_VALOR,2)
						Else
							n2B13Inss -= Round((cAliasTRB)->RC_VALOR,2)
						EndIf
					Else
						If RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_TIPOCOD") == "1"
							n2BInss += Round((cAliasTRB)->RC_VALOR,2)
						Else
							If !(!lSomavis .And. (cAliasTRB)->RC_PD $ aCodFol[111,1] + "/" + aCodFol[250,1]) .Or. (!lSomavis .And. (cAliasTRB)->RC_PD $ aCodFol[111,1] + "/" + aCodFol[250,1])
								n2BInss -= Round((cAliasTRB)->RC_VALOR,2)
							EndIf
						EndIf
					EndIf
				EndIf
				If RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_FGTS") == "S"
					If RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_REF13") == "S"
						If RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_TIPOCOD") == "1"
							n2B13Fgts += Round((cAliasTRB)->RC_VALOR,2)
						Else
							n2B13Fgts -= Round((cAliasTRB)->RC_VALOR,2)
						EndIf
					Else
						If RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_TIPOCOD") == "1"
							n2BFgts += Round((cAliasTRB)->RC_VALOR,2)
						Else
							n2BFgts -= Round((cAliasTRB)->RC_VALOR,2)
						EndIf
					EndIf
				EndIf

				If !lSomavis .And. (cAliasTRB)->RC_PD $ (aCodFol[1685, 1]+"/"+aCodFol[1691, 1]+"/"+aCodFol[1697, 1]+"/"+aCodFol[1703, 1]+"/"+aCodFol[1709, 1]+"/"+aCodFol[1715, 1]+aCodFol[1721, 1] )//Adicionais sobre 13º sobre aviso prévio
					If RetValSrv((cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_FGTS") == "S"
						n2B13Fgts -= Round((cAliasTRB)->RC_VALOR, 2)
					EndIf
					If RetValSrv((cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_INSS") == "S"
						n2B13Inss -= Round((cAliasTRB)->RC_VALOR, 2)
					EndIf
				EndIf

				dbSelectArea(cAliasTRB)
				dbSkip()
				If (cAliasTRB)->ORIGEM == "SRE"
					lSkipSRE	:= .T.
				EndIf
			EndDo

			If nB13Fgts > 0 .And. nVlrAvi13 > 0
				nB13Fgts -= nVlrAvi13
			EndIf

			If nDissidio == 1 .AND. !lTemDissid
				dbSelectArea(cAliasTRB)
				dbSkip()
				Loop
			EndIf

			//Verifica se a existe rescisao complementar de fato, para tratar situacao
			//especifica que o funcionario foi demitido no mes de calculado do dissidio.
			If lComplDiss
				aAreaAtu := getArea()
				dbSelectArea("SRG")
				If SRG->( dbSeek( SRA->RA_FILIAL+SRA->RA_MAT ) )
					nContSrg := 0
					While SRG->( !Eof() .And. ( SRA->RA_FILIAL+SRA->RA_MAT ) == ( RG_FILIAL + RG_MAT ) )
					 	If SRG->RG_EFETIVA == "N"
							SRG->( dbSkip())
							Loop
					 	EndIf
						nContSrg++
						SRG->( dbSkip() )
					Enddo
				EndIf
				RestArea( aAreaAtu )
			EndIf

			// Para SEFIP de Dissidio Retroativo, Codigo Recolhimento 650 e Rescisao complementar no mesmo
			// Mes deve ser RECALCULADA a base da diferenca FGTS conforme os avos das verbas de ID 114 e 115
			IF !lSomavis .and. nDissidio == 1 .and. cRecol == "650" .and. ( nAvoDis114 + nAvoDifDis ) > 0 .and. (nB13Fgts > 0 .or. nB13INSS > 0) .And. nContSrg > 1
				If nB13Fgts > 0
					nB13Fgts := ( nB13Fgts / nAvoDifDis ) * nAvoDis114
				EndIf
				If nB13InRc > 0
					nB13InRc := nB13InRc - ( nB13InRc / nAvoDifDis ) * nAvoDis114
				EndIf
			EndIf


		EndIf


		// Quando base de inss estiver zerada, nBInss, (id calculo 013 e 014), utilizar valor
		// da base do pro-labore, nBInssProm (id calculo 221 ou 225).
		// So terao valor nesta base os pro-labores e autonomos

		If  nBInss == 0
			nBInss += nBInssPro
		EndIf

		If nDissidio # 1 .And. (lMatTrf .Or. lCalSRC)
			FVer13(aCodFol, @nB13Inss, @nB13Fgts, @n13Inss, @nSc13Sal, cCusto, nOrdem, lGRRF, nValor247)
		EndIf

	Else

		cRotAux := cRot132

		//ÚÄÄÄÄÄÄÄÄÄÄÄ¿
		//³13o SALARIO³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÙ
		If cRecol == "650" .and. nDissidio == 1  .and. MesAno(dAuxPar01) >= "200508" .and. MesAno(dAuxPar01)<= "200703"
			dbSelectArea( 'RHH' )
         	afunc := {}
			RHH->( dbSeek( SRA->RA_FILIAL+SRA->RA_MAT ) )
			While RHH->( ! Eof() ) .And. (!lRat .And. RHH->( RHH_FILIAL+RHH_MAT ) == SRA->( RA_FILIAL+RA_MAT )) .Or.;
										  ( lRat .And. RHH->( RHH_FILIAL+RHH_CC+RHH_MAT ) == SRA->( RA_FILIAL + cCusto + RA_MAT ))

				If RHH->RHH_COMPL_ == "S" .and. RHH->RHH_VB # "000" .and. ;
					SubStr( RHH->RHH_DATA, 3, 4 ) + SubStr( RHH->RHH_DATA, 1, 2 ) == MesAno( dAuxpar01 ) .and.;
					(	RHH->RHH_VERBA == aCodFol[398,1] .OR. ;
						RHH->RHH_VERBA == aCodFol[399,1] .OR. ;
						RHH->RHH_VERBA == aCodFol[401,1] )

				   	lConsidera := If( RHH->( FieldPos( "RHH_INTEGR" ) ) # 0, RHH->RHH_INTEGR == "S", .T. )
				   	If lConsidera
						nLinha := Ascan( aFunc, { | X | X[1]+X[2]+X[3]+X[4] = SRA->RA_FILIAL+SRA->RA_MAT+RHH_VERBA+RHH_CC } )

					 	If nLinha  > 0
					 		aFunc[nLinha,5] += RHH_VALOR
					 	Else
			 				Aadd( aFunc, { SRA->RA_FILIAL, SRA->RA_MAT, RHH->RHH_VERBA, RHH->RHH_CC, RHH->RHH_VALOR } )
						EndIf
					EndIf
				EndIf
				RHH->( dbSkip() )
			EndDo

           	For nI := 1 to len(aFunc)

				If aFunc[nI,3] == aCodFol[398,1] //Bs FGTS Dissidio 13o
					nB13Fgts += Round(aFunc[nI,5],2)
				EndIf
				If aFunc[nI,3] == aCodFol[399,1] //aCodFol[341,1]   //Bs INSS Dissidio 13o
					nB13Inss += Round(aFunc[nI,5],2)
				EndIf
				If aFunc[nI,3] == aCodFol[401,1]   //Vl INSS 13
					n13Inss  += Round(aFunc[nI,5],2)
				EndIf
            Next
	        (cAliasTRB)->(dbskip())
        Else
			dbSelectArea(cAliasTRB)
			While !Eof() .And. (!lRat .And. (cAliasTRB)->RC_FILIAL+(cAliasTRB)->RC_MAT == SRA->RA_FILIAL+SRA->RA_MAT) .Or.;
				(lRat .And. (cAliasTRB)->RC_FILIAL+(cAliasTRB)->RC_CC+(cAliasTRB)->RC_MAT == SRA->RA_FILIAL+cCusto+SRA->RA_MAT)

				//--Somar Base de Inss e Inss quando for competencia 12 ou opcao de 13o.Salario
				If 	( Month(dAuxPar01) == 12 .Or. cSitFunc == "D" .Or.;
							(SRA->RA_CATEG == "07" .And. SRA->RA_CATEFD $ "107#108") .Or.;
							SRA->RA_CATFUNC == "T" .Or. SRA->RA_TPCONTR == "3" ) .And.;
					(cAliasTRB)->RC_ROTEIR == cRotAux .And.;
					((cAliasTRB)->RC_PD == aCodFol[19,1] .Or. (cAliasTRB)->RC_PD == aCodFol[20,1])

					nB13Inss += Round((cAliasTRB)->RC_VALOR,2)
					nSc13sal += Round((cAliasTRB)->RC_VALOR,2)
				EndIf

				If  (cAliasTRB)->RC_ROTEIR == cRotAux .And. (cAliasTRB)->RC_PD == aCodFol[70,1]    // Tipo 1-Folha/Ferias	   2-13o.Salario
					n13Inss += Round((cAliasTRB)->RC_VALOR,2)
				EndIf

				If (cAliasTRB)->RC_ROTEIR == cRotAux .And. lVerMat .And. (cAliasTRB)->RC_PD $ P_DEDMAT
					nVlrMater += Round((cAliasTRB)->RC_VALOR,2)
				EndIf

				If RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_INSS") == "S"
					If RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_REF13") == "S"
						If RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_TIPOCOD") == "1"
							n2B13Inss += Round((cAliasTRB)->RC_VALOR,2)
						Else
							n2B13Inss -= Round((cAliasTRB)->RC_VALOR,2)
						EndIf
					Else
						If RetValSrv( (cAliasTRB)->RC_PD, (cAliasTRB)->RC_FILIAL, "RV_TIPOCOD") == "1"
							n2BInss += Round((cAliasTRB)->RC_VALOR,2)
						Else
							If !(!lSomavis .And. (cAliasTRB)->RC_PD $ aCodFol[111,1] + "/" + aCodFol[250,1]) .Or. (!lSomavis .And. (cAliasTRB)->RC_PD $ aCodFol[111,1] + "/" + aCodFol[250,1])
								n2BInss -= Round((cAliasTRB)->RC_VALOR,2)
							EndIf
						EndIf
					EndIf
				EndIf

				(cAliasTRB)->( dbskip() )

			EndDo
		EndIf
	EndIf

	//--Verifica  se Demitidos em meses anteriores tem valor
	//--se nao tiver despreza o funcionario
	If ( nFgtsRes + nFgtsR13 + nBFgts + nB13Fgts ==0 ) .And. cSitFunc == "D" .AND. ;
		MesAno(SRA->RA_DEMISSA) < MesAno(dAuxpar01)
		n20SalFam 	:=	0
		If SRA->RA_FILIAL+SRA->RA_MAT == If(nDissidio == 1, (cAliasTRB)->RA_FILIAL, (cAliasTRB)->RC_FILIAL) + If(nDissidio == 1, (cAliasTRB)->RA_MAT, (cAliasTRB)->RC_MAT)
			FTesta(lRat, If(nDissidio == 1, (cAliasTRB)->RA_FILIAL, (cAliasTRB)->RC_FILIAL), cCusto, If(nDissidio == 1, (cAliasTRB)->RA_MAT, (cAliasTRB)->RC_MAT))
		EndIf
		Loop
	EndIf

	//Verificacao de Afastamento ou Demissao
	If SubStr(cDataRef,4,2) # "13"

		//-- Se Gerou Tipo 30 Gera Tipo 32 e nao for 13o.
		If nTipo == 1   // Tipo 1-Folha/Ferias	   2-13o.Salario
			//--Monta Array com os Afastam. e Demitidos para Gerar Tipo-32
			cAuxCompet	:= Right(Str(Year(dAuxpar01)),4) + SubStr(cDataRef,4,2)

			cCateg	:=	FCateg(nFgts)

			aAfast 		:= {}
			FMontaSR8(cAuxCompet,@aAfast,@cSitFunc,dAuxPar01,cCateg)

			// Inclui codigo de afastamento "V3" para remuneração de comissao apos extincao de contrato de trabalho
			If nComissao > 0
				Aadd(aAfast,{SRA->RA_DEMISSA,"V3","A",0,.F.})
			EndIf

			//Somar Valor Salario Maternidade Iniciado Antes de 01/12/99 para
			//ser informado no registro 10
			For n:=1 to Len(aAfast)
				If SubStr(aAfast[n,2],1,1) == "Q"
					If !(SubStr(aAfast[n,2],1,2) $ "Q1#Q3" .and. cCateg $ "03#05#11")
						nSalMat1 += nSalMat
						Exit
					EndIf
				EndIf
			Next n

		EndIf
	EndIf

	lGera30Zerado := .F.
	nBInss 		:= Max(nBInss, 0)
	nBFgts 		:= Max(nBFgts, 0)
	nB13Inss 	:= Max(nB13Inss, 0)
	nB13Fgts 	:= Max(nB13Fgts, 0)
	nBinssPF 	:= Max(nBinssPF, 0)
	nBinssPJ 	:= Max(nBinssPJ, 0)
	//--Verifica se funcionario tem Valores para a Sefip se nao tiver
	//--Despreza funcionario
	If nBInss+nBFgts+nB13Inss+nB13Fgts+nBinssPF+nBinssPJ = 0 .And. cSitFunc # 'D' .and. SRA->RA_CATFUNC # "A" .And.;
		(cSitFunc == 'A' .Or. (cAliasTRB)->ORIGEM <> "SRE")
		lGera30Zerado :=  Ascan(aAfast, {|x|MesAno( x[1] ) == MesAno(dAuxPar01) })#0 .OR.;
							Ascan(aAfast, {|x|SubStr( x[2],1,1) =="Z" })	# 0

		If !lGera30Zerado
			If aTotRegs[11]== 0
				cLog := STR0023 //"Nao Enviado(s) - Funcionario(s) sem valores para SEFIP"
				Aadd(aTitle,cLog)
				Aadd(aLog,{})
				aTotRegs[11] := len(aLog)
			EndIf
			Aadd(aLog[aTotRegs[11]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+" - "+SRA->RA_NOME)
			n20SalFam 	:=	0
			If SRA->RA_FILIAL+SRA->RA_MAT == If(nDissidio == 1, (cAliasTRB)->RA_FILIAL, (cAliasTRB)->RC_FILIAL) + If(nDissidio == 1, (cAliasTRB)->RA_MAT, (cAliasTRB)->RC_MAT)
				FTesta(lRat, If(nDissidio == 1, (cAliasTRB)->RA_FILIAL, (cAliasTRB)->RC_FILIAL), cCusto, If(nDissidio == 1, (cAliasTRB)->RA_MAT, (cAliasTRB)->RC_MAT))
			EndIf
			Loop
		EndIf
	ElseIf nFilCc == 2 .and. nRateio == 1 .and. aTotRegs[11] > 0//Se geração é por centro de custos rateado, verifica se funcionário foi incluído como sem valor em outro centro de custo e retira o registro do log
		If ( nPos := Ascan(aLog[aTotRegs[11]],{|X| SRA->RA_FILIAL+"-"+SRA->RA_MAT $ X})) > 0
			aDel(aLog[aTotRegs[11]],nPos)
			aSize(aLog[aTotRegs[11]],Len(aLog[aTotRegs[11]])-1)
		EndIf
	EndIf

	// Acumuladores para registro tipo 10 e 20
	nT13Inss  += n13inss
	nTB13inss += If(lSomaVis,nB13Inss,(nB13Inss - nB13InRc))

	// Calcular Valor Ac.trabalho Empresa B.Inss 13o.
	// somente na comperencia 12
	If StrZero(Year(dAuxPar01),4)+"12" == Mesano(dAuxPar01)
		nPercAcTrab := If (SRA->RA_TPCONTR$ " *1*3", aInssEmp[3,1] , aInssEmp[3,2])
		fBuscaAci(@nPercAcTrab)
		nTotAci += nSc13Sal * nPercAcTrab
	EndIf

	//-- Quando teve afastamento por Licenca Maternidade
	If SRA->RA_SEXO == "F" .and. ( SubStr(cDataRef,4,2) == "13" .or. cSitFunc $ "D")
		// Calculo de deducao 13 salario
		F13Sal(@nDeduc,nSalMat,aCodFol)
	EndIf


	//-- Alteracao nos dados cadastrais Nao Gerar para 13o.
	If nTipo == 1    // Tipo 1-Folha/Ferias	   2-13o.Salario
		If SRA->RA_ALTCP == "S" //Carteira de trabalho
			DBF_TIPO13(aInfo,cInfo,nFgts,"RA_NUMCP  ")
		ElseIf SRA->RA_ALTNOME == "S"	//Nome
			If SRA->(FieldPos("RA_NOMECMP")) # 0
				DBF_TIPO13(aInfo,cInfo,nFgts,If(!empty(SRA->RA_NOMECMP),"RA_NOMECMP","RA_NOME   "))
			Else
				DBF_TIPO13(aInfo,cInfo,nFgts,"RA_NOME   ")
			EndIf
		ElseIf SRA->RA_ALTPIS == "S" //PIS
			DBF_TIPO13(aInfo,cInfo,nFgts,"RA_PIS    ")
		ElseIf SRA->RA_ALTADM == "S"  //Data de Admissao
			DBF_TIPO13(aInfo,cInfo,nFgts,"RA_ADMISSA")
		EndIf
		If SRA->(FieldPos("RA_ALTCBO")) # 0
			If SRA->RA_ALTCBO =="S"
				DBF_TIPO13(aInfo,cInfo,nFgts,"RA_CBO    ")
			EndIf
		EndIf
		If SRA->(FieldPos("RA_ALTNASC")) # 0
			If SRA->RA_ALTNASC =="S"
				DBF_TIPO13(aInfo,cInfo,nFgts,"RA_NASC")
			EndIf
		EndIf
		// Inclusao/Alteracao Endereco do trabalhador (so pode haver uma por trabalhador)
		// Qdo for funcion rio novo deve gerar automaticamente o TIPO14
		cCompet	:= Right(Str(Year(dAuxpar01)),4) + SubStr(cDataRef,4,2)
		If (cAliasTRB)->RC_ROTEIR <> 'TRF'  .And. (SRA->RA_ALTEND == "S"  .Or. MesAno(SRA->RA_ADMISSA) == cCompet .and. SubStr(cDataRef,4,2)# "13")
			//-- Quando estiver gerando a sefip rateada verificamos se o registro do tipo 14 ja foi gerado
			//-- alguma vez para nao haver mais que um registro do tipo 14 por funcionario.
			If lRat
				If Ascan(aRegsTip14,{|X| X[1] == SRA->RA_PIS}) == 0
					DBF_TIPO14(aInfo,cInfo,nFgts)
					Aadd(aRegsTip14,{SRA->RA_PIS})
				EndIf
			Else
				DBF_TIPO14(aInfo,cInfo,nFgts)
			EndIf
		EndIf
	EndIf

	//--Verifica se deve Gerar Registro 20 - Tomador de Servico na quebra de C.Custo
	fGera20(cCusto,@cCustoAux,aInfo,@cInsc,@cTipo,@n20SalFamAnt,@nT13Inss,@nTB13Inss,@nTotAci,@cAuxFil,cFilAnterior,aCodFol,lRat,@n20SalFam)

	//Verificacao de Afastamento ou Demissao
	// Registro do Trabalhador
	If nTipo == 1  // Tipo 1-Folha/Ferias	   2-13o.Salario
		lGera32 := DBF_TIPO30(aInfo, cInfo, nFgts, cTipo, cInsc, nB13Inss, nBInss, nB13Fgts, nInss, nB13InRc, aAfast, @aLog, @aTitle, @aTotRegs, nInssOutr, cCusto, nBinssPF, nBinssPJ, n13Inss, nValor247, nDesINSS, lRat, nVlrCP00, nVlrCP15, nVlrMater)
	Else
		If nB13Inss # 0
			lGera32 := DBF_TIPO30(aInfo, cInfo, nFgts, cTipo, cInsc, nB13Inss, nBinss, nB13Fgts, nInss, nB13InRc, aAfast, @aLog, @aTitle, @aTotRegs, nInssOutr, cCusto, nBinssPF, nBinssPJ, n13Inss, nValor247, nDesINSS, lRat, nVlrCP00, nVlrCP15, nVlrMater)
		EndIf
	EndIf
	//--Se Gerou 1 registro 30 muda variavel para poder gerar o resgistro 10
	If !lGera30 .And. lGera32
		lGera30 := .T.
	EndIf

	// Funcionário com contrato por tempo determinado ona admissão ou com verba de 13º
	If SRA->RA_TPCONTR == "2" .and. cCateg == "04" 
		If EnviaAdmis() .Or. AnoMes(SRA->RA_DEMISSA) == AnoMes(dAuxpar01)
			Aadd(aAfast, {SRA->RA_ADMISSA, "R1", "", , .F.})
		//Quando funcionáior por tempo determinado possuir pagamento de 13º e não for demissão, enviar registro R1
		ElseIf nTipo == 1 .and. nB13Fgts > 0 .and. ( Empty((SRA->RA_DEMISSA)) .or. MesAno(SRA->RA_DEMISSA) > MesAno(dAuxpar01) )
			Aadd(aAfast, {dAuxpar01, "R1", "", , .F.})
		EndIf
	EndIf

	//Sempre deve enviar o código de movimentação X1 para trabalhor com contrato verde amarelo
	If SRA->RA_CATEG == "07" .And. SRA->RA_CATEFD $ "107#108" .And. DtoS(SRA->RA_ADMISSA) >= "20200102" .And. DtoS(SRA->RA_ADMISSA) <= "20200817"
		Aadd(aAfast, {SRA->RA_ADMISSA, "X1", "", , .F.})
	EndIf

	//-- Se nao for 13o.
	//-- Passa a Gerar Registro 32 sem ter o reg. 30  em 26/09/00
	If  nTipo == 1   // Tipo 1-Folha/Ferias	   2-13o.Salario
		DBF_TIPO32(aInfo, cInfo, nFgts, cTipo, cInsc, nFgtsRes, aAfast, @aLog, @aTitle, @aTotRegs, lGera32,lSaque,lGRRF)
	EndIf

	dbSelectArea(cAliasTRB)

	If !empty(mv_par50) .and. mv_par50 == 1
		If Empty(cInsc)
			If cInfo == "1"
				cInscFAP := aInfo[8]
			ElseIf cInfo == "2"
				cInscFAP := aInfo[27]
			Endif
		Else
			cInscFAP := cInsc
		Endif

		If cCNPJFAP <> cInscFAP .Or. l1VezFAP
			aInssEAux := aClone(aInssEmp)
			If !fInssEmp(SRA->RA_FILIAL,@aInssEmp,.T.,AnoMes(dAuxPar01))
				Help( ,, OemToAnsi(STR0063),, OemToAnsi(STR0105), 1, 0 ) //"Atenção" ## "Verifique o cadastro das tabelas de Encargos Empresa (S037) e Outras Entidades (S038)"
				Return .F.
			EndIf
			nAliqRat := If (SRA->RA_TPCONTR$ " *1*3", aInssEmp[29,1]*100 , aInssEmp[29,2]*100)
			nAcidTrab := If (SRA->RA_TPCONTR$ " *1*3", aInssEmp[3,1]*100, aInssEmp[3,2]*100)
			cFap := AllTrim(STR(NoRound(nAcidTrab / nAliqRat,2)))
			If Len(cFap) == 0
				cFap := "0,00"
			ElseIf Len(cFap) == 1
				cFap += ",00"
			ElseIf Len(cFap) == 3
				cFap += "0"
			Endif
			nPosFAP:= AT(".", cFap)
			If nPosFAP > 0
				cFap:= Stuff(cFap,nPosFAP,1,",")
			Endif
			l1VezFAP := .F.
			cCNPJFAP := cInscFAP
			aAdd( aInfoFAP, {cInfo,STRZERO(VAL(cInscFAP),14,0),cFap} )
			aInssEmp := aClone(aInssEAux)
		Endif
	Endif

	If(cAliasTRB)->ORIGEM == "SRE" .And. !lSkipSRE
		(cAliasTRB)->(dbSkip())
	EndIf

EndDo

//-- Limpa o array de ocorrencias do tipo 14.
aRegsTip14	:= {}

If !l1Vez
	If lRat
		cCusto := (cAliasTRB)->RC_CC
	Else
		cCusto := (cAliasTRB)->RA_CC
	EndIf

	If Len(aInfo) > 0 .And. aInfo[15] # Nil
		//--Verifica se deve Gerar Registro 20 - Tomador de Servico
		fGera20(cCusto,@cCustoAux,aInfo,@cInsc,@cTipo,@n20SalFamAnt,@nT13Inss,@nTB13Inss,@nTotAci,@cAuxFil,SRA->RA_FILIAL,aCodFol,lRat,@n20SalFam)
		// Gerar o tipo 10 para a ultima empresa
		If aInfo[15] == 1 .Or. ( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ) )		// CEI
			cInfo := "2"
		Else
			cInfo := "1"		// CGC
		EndIf

		//-- Verificando o Tamanho do FPAS
		If lFpasCc
			cFPAS	:= cRurFPAS
		Else
			If empty( cFPAS_Tom )
				If SubStr(aInfo[17],1,1) == "0"
					cFPAS	:= SubStr(aInfo[17],2,3)
				Else
					cFPAS	:= SubStr(aInfo[17],1,3)
				EndIf
			EndIf
		EndIf

		//Quando for competencia 12 calcular o Valor Devido a Previdencia do 13o.
		nValDPrev 	:= 0
		If Month(dAuxPar01) = 12
			fCValDev(nTB13Inss,aInssEmp,nTotAci,nT13Inss,0.00,@nValDPrev)
		EndIf

		//-- SO GERA O 10 SE GEROU 0 30 PAR ALGUN FUNCIONARIO
		If lGera30
			//--Quando Filial For Cei e Centraliza deve gerar Filial Responsavel
			If nCentra == 1 .And. cInfo == "2"
				aInfo := aInforesp
				cInfo := cInforesp
			EndIf
			If Ascan(aGerou30,{|x|x[1]==cFilAnterior})== 0

				cFilUsada := cFilAnterior
				aInfoNova := {}
				nPos := Ascan(aGerou30,{|x|x[2]== If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )})

			    If nPos > 0
					If cFilAnterior # aGerou30[nPos,1]
						cFilUsada := aGerou30[nPos,1]
						If !fInfo(@aInfoNova,cFilUsada)
					   		//	Exit
					   	EndIf
					Else
					    aInfoNova := aclone(aInfo)
					EndIf
			    Else
				    aInfoNova := aclone(aInfo)
			    EndIf

				DBF_TIPO10(cFilUsada,aInfoNova,cInfo,nSalFam,nT13Inss,nSalMat1,nValDPrev)
			Else
				If Len(aGerou30) > 1
					aeval(aGerou30,{|x| if(x[2] <> aInfo[8],nDif++,) })
				EndIf
				If nDif > 0 .Or. Len(aGerou30) == 1 .or. aInforesp[8] <> aInfo[8]
					DBF_TIPO10(cFilAnterior,aInfo,cInfo,nSalFam,nT13Inss,nSalMat1,nValDPrev)
				Else
					DBF_TIPO10(cFilAnterior,aInforesp,cInfo,nSalFam,nT13Inss,nSalMat1,nValDPrev)
				EndIf
			EndIf
			nSalMat1 := 0
		Else

			//-- P.E. para controle das filiais que tiveram registro 10 gerado em funcao da ausencia de
			//-- registro tipo 30 (movimentos do funcionario) ou tipo 32 (movimentacao de funcionarios)
			If lGP610NMv
				ExecBlock("GP610NMV", .F., .F.,{cFilAnterior,aClone(aInfo)} )
			EndIf
		EndIf
	Else
		If aTotRegs[12]== 0
			cLog :=STR0012 //"Filial Invalida"
			Aadd(aTitle,cLog)
			Aadd(aLog,{})
			aTotRegs[12] := len(aLog)
		EndIf
		Aadd(aLog[aTotRegs[12]],STR0013+cFilAnterior)// "Filial nao existe no Arquivo de Empresas :"
	EndIf

	// Zerar Acumuladores
	nSalMat1 	:= 0
	nSalFam     := 0
	nT13Inss    := 0
	nTB13Inss   := 0
	nTotAci		:= 0
	nVlrAvi13	:= 0

	//Carrega valores da GPS
	fGPSVal(cFilAnterior,cAnoMesGps,@aGPSVal,SRA->RA_TPCONTR)
	nVlCooper := nValRec := nValProPf := nValProPj := nValComps := 0
	cPerIniCmp:= cPerFimCmp := ""

	For nx := 1 to len(aGpsVal)
		lGps := If(!empty(aGpsVal[nX,1]),(alltrim(aGpsVal[nX,1])>= alltrim(cCcDe) .and. alltrim(aGpsVal[nX,1]) <= alltrim(cCcAte)),.T.)
		If lGPS
			lSI3 := .T.
			If !Empty( cSi3Filter )
	 			(cAliasCC)->(dbSeek(cFilAnterior+alltrim(aGpsVal[nX,1])))
				lSI3 := &( cSi3Filter )
			EndIf

			If lSI3
				If aGpsVal[nX,02] == aCodFol[313,1]
					nVlCooper += aGpsVal[nx,03] // Base da Cooperativa
				ElseIf aGpsVal[nX,02] == aCodFol[198,1]
					nValRec	  += aGpsVal[nX,03] // Base da Receita
				ElseIf aGpsVal[nX,02] == aCodFol[315,1]
					nValProPf += aGpsVal[nX,03] // Valor Producao Rural P.Fisica
				ElseIf aGpsVal[nX,02] == aCodFol[316,1]
					nValProPj += aGpsVal[nX,03] // Valor Producao Rural P.Juridica
				ElseIf aGpsVal[nX,02] == aCodFol[584,1]
					nValComps += aGpsVal[nX,05] // Valor da Compensacao da GPS
					cPerIniCmp:= aGpsVal[nX,08]	// Ano/mes do periodo inicial de Compensacao
					cPerFimCmp:= aGpsVal[nX,09]	// Ano/mes do periodo final de Compensacao
				EndIf
			EndIf
		EndIf
	Next nX
	If (nDeduc # 0) .Or. (nValRec # 0) .Or. (nValProPf # 0) .Or. (nValproPj # 0) .or. (nVlCooper#0);
		.Or. (nValComps#0) .or. cRecol$ '650#660'
		//-- SO GERA O 10 SE GEROU 0 30 PARA ALGUM FUNCIONARIO
		If lGera30
			DBF_TIPO12(aInfo,cInfo)
		EndIf
	EndIf
Else
	Help("",1,"NOFUNC")
EndIf

If ! lAbortPrint
	lArqOK := FGeraArq(aInfoFAP)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Chama rotina de Log de Ocorrencias. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If aTotRegs[13]<> 0
	Aadd(aLog[aTotRegs[13]],"")
	Aadd(aLog[aTotRegs[13]],space(31)+"T O T A L  =>" +SPACE(15)+Transform(aTotal[01],"@E 99,999,999.99")+space(06)+Transform(aTotal[02],"@E 99,999,999.99")+;
	space(06)+Transform(aTotal[03],"@E 99,999,999.99")+space(06)+Transform(aTotal[04],"@E 99,999,999.99"))
EndIf
If aTotRegs[14]<> 0
	Aadd(aLog[aTotRegs[14]],"")
	Aadd(aLog[aTotRegs[14]],space(31)+"T O T A L  =>" +SPACE(15)+Transform(aTotal[06],"@E 99,999,999.99")+space(06)+Transform(aTotal[07],"@E 99,999,999.99")+;
	space(06)+Transform(aTotal[08],"@E 99,999,999.99")+space(06)+Transform(aTotal[09],"@E 99,999,999.99"))
EndIf

//Nome do log será SE + Grupo de Empresa + Competência + Horário de Impressão (Foi incluído o horário devido a possibilidade do mesmo usuário gerar mais que uma SEFIP simultaneamente.
fMakeLog(aLog,aTitle,,,"SE"+FWGrpCompany()+SubStr(dTos(MV_PAR01),1,6)+SubStr(Time(),1,2)+"_"+SubStr(Time(),4,2)+"_"+SubStr(Time(),7,2),STR0024,"M","P",,.F.) //"Log de ocorrencias - SEFIP"

If cRecol == "650" .and. nDissidio == 1 .and. MesAno(dAuxPar01) >= "200508" .and. MesAno(dAuxPar01)<= "200703"
	dbSelectArea( 'RHH' )
	dbCloseArea()
EndIf
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FGeraArq     ³ Autor ³ Cristina Ogura   ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao que gera arquivo                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FGeraArq()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function FGeraArq(aInfoFAP)
Local aGetArea	:= GetArea()
Local aFile		:= {}
Local nPosFile	:= 0
Local nY		:= 0
Local nX		:= 0
Local cFile2	:= ""
Local cFuncCpy	:= ""
Local cLin		:= ""
Local cEOL      := CHR(13) + CHR(10)
Local lHtml		:= (GetRemoteType() == 5)//SmartClient HTML
Local lLinux	:= IsSrvUnix()

cFuncCpy	:= "CpyS2TW"

Default aInfoFAP:= {}

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Consiste Filiais e Acessos                                             ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
IF ( SRA->RA_FILIAL $ fValidFil() )
	// Gera arquivo
	cFile	:=	Alltrim(cFile)
	If lHtml
		aFile := StrTokArr( cFile, If( lLinux, "/", "\" ) )
		cFile := If( lLinux, "/", "\" ) + aFile[Len(aFile)]
	EndIf
	nHandle := 	MSFCREATE(cFile)
	If FERROR() # 0 .Or. nHandle < 0
		Help("",1,"GPM600HAND")
		FClose(nHandle)
		Return .F.
	EndIf

	// Grava no arquivo RJH     o Header
	BIN_TIPO00()

	// Arquivo com todos os tipo da SEFIP
	dbSelectArea("RJHX")
	dbGoTop()

	While !Eof()

		// Gravar o Header do arquivo
		If RJHX->RJH_TIPO == "00"
			FWrite(nHandle,RJHX->RJH_TEXTO+RJHX->RJH_TEXTO2)
		EndIf

		// Verifico a empresa que estou
		If RJHX->RJH_TIPO == "10"
			FWrite(nHandle,RJHX->RJH_TEXTO+RJHX->RJH_TEXTO2)
			FVerTipo(RJHX->RJH_TINSC,RJHX->RJH_INSC,RJHX->RJH_TTOMA,RJHX->RJH_TOMAD)
		EndIf

		dbSelectArea("RJHX")
		dbSkip()
	EndDo

	// Registro Trailler
	BIN_TIPO90()

	FClose(nHandle)
	nHandle := 0

	If !empty(mv_par50) .and. mv_par50 == 1
		nPosFile:= RAT("\", cFile)
		cFile2 := Substr(cFile,1,nPosFile)
		cFile2 += "AtualizaFAP.txt"
		nHandle := 	MSFCREATE(cFile2)
		If FERROR() # 0 .Or. nHandle < 0
			Help("",1,"GPM600HAND")
			FClose(nHandle)
			Return .F.
		EndIf

		For nY := 1 To Len(aInfoFAP)
			cLin := ""
			For nX := 1 To 3
				cLin += aInfoFAP[nY,nX]
			Next nX
			cLin += cEOL
			FWrite(nHandle,cLin)
		Next nY

		FClose(nHandle)
		nHandle := 0
		cLin := ""
	Endif
Else

	Break

EndIf

If lHtml
	If FindFunction("CpyS2TW")
		&cFuncCpy.(cFile, .T.)
	Else
		CpyS2T(cFile, cFile)
	EndIf
	fErase(cFile)
EndIf

RestArea(aGetArea)

dbSelectArea("SRA")
dbSetOrder(1)

dbSelectArea((cAliasTRB))

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Transforma³ Autor ³ Cristina Ogura       ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Transforma as datas no formato DDMMAAAA                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Transforma(ExpD1)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpD1 = Data a ser convertido                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Transforma(dData)
Return(StrZero(Day(dData),2) + StrZero(Month(dData),2) + Right(Str(Year(dData)),4))

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GravaRJH ³ Autor ³ Cristina Ogura        ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava os dados no arquivo temporario                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GravaRJH(ExpC1)                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Dados da string                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM610()                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GravaRJH(cCampo, cTipo, lAutonomo, lChangeCC, nBFGTS, nBFGTS13, nBINSS, nBINSS13, nDINSS, cFlagBase, aAfast)

Local cSeek		:=	""
Local lFound
Local n20Valor	:=	0
Local n20VlFat	:=	0
Local n20VlRet	:=	0
Local c00Campo	:=	""
Local c10Campo	:=	""
Local cCampo1 	:=	""
Local n21Valor	:=	0

Local n30VlS13 	:= 0
Local n30VlC13 	:= 0
Local n30VlDesc	:= 0
Local n30VlCont	:= 0
Local n30Bs13Mov:= 0
Local n30Bs13Gps:= 0
Local aOldAlias := GetArea()
// cTipo: 		00-Informacoes do responsavel
//        		10-Informacoes da Empresa
//				12-Informacoes adicional da Empresa
//              13-Alteracao cadastral do trabalhador
//				14-Alteracao do endereco do trabalhador
//				20-Informacoes do Tomador de servico
//				21-Informacoes adicional do Tomador de servico
//				30-Registro do Trabalhador
//				32-Registro de movimentacao do trabalhador

Default lAutonomo 	:= .F.
Default lChangeCC 	:= .F.
Default aAfast 		:= {}

dbSelectArea("RJHX")

If cTipo $ "00"				// Tipo Insc+Insc+Tipo
	cSeek := cEmprAgrup + space(01)+space(14)+cTipo
ElseIf cTipo $ "10*12"		// RJH_TINSC+RJH_INSC+RJH_TIPO
	cSeek := cEmprAgrup + SubStr(cCampo,3,15)+cTipo
ElseIf cTipo $ "20*21"		// RJH_TINSC+RJH_INSC+RJH_TIPO+RJH_TTOMA+RJH_TOMAD
	cSeek := cEmprAgrup + SubStr(cCampo,3,15)+cTipo+SubStr(cCampo,18,15)
ElseIf cTipo $ "30"		   // (RJH_TINSC+RJH_INSC)+RJH_TIPO+(RJH_TTOMA+RJH_TOMAD)+RJH_PIS+RJH_DT+RJH_CAT
	If !lAutonomo //Se for autonomo, sempre gerar registro, nao aglutinar, nao verificar chave
		cSeek := cEmprAgrup + SubStr(cCampo,3,15)+cTipo+SubStr(cCampo,18,15)+SubStr(cCampo,33,11)+SubStr(cCampo,48,4)+SubStr(cCampo,46,2)+SubStr(cCampo,44,2)+SubStr(cCampo,52,2)
	EndIf
EndIf

If Empty(cSeek)
	lFound := .T.
Else
	If dbSeek(cSeek)
		lFound 	:= .F.
		// Sempre grava os dados da 1a empresa gerada
		If cTipo == "00"
			c00Campo:= RJHX->RJH_TEXTO+RJHX->RJH_TEXTO2
		ElseIf cTipo $ "10*12"
			c10Campo:= RJHX->RJH_TEXTO+RJHX->RJH_TEXTO2
		EndIf
	Else
		lFound := .T.
	EndIf
EndIf

RecLock("RJHX",lFound)

If lFound
	RJHX->RJH_EMPAGR := cEmprAgrup
	If cTipo == "00"
		RJHX->RJH_TINSC 	:= Space(01)
		RJHX->RJH_INSC	:= Space(14)
	Else
		RJHX->RJH_TINSC 	:= SubStr(cCampo,3,1)
		RJHX->RJH_INSC	:= SubStr(cCampo,4,14)
	EndIf
	RJHX->RJH_TIPO	:= cTipo
EndIf

If cTipo $ "13*14"
	RJHX->RJH_PIS	:= SubStr(cCampo,52,11)
	RJHX->RJH_DT		:= SubStr(cCampo,69,4)+SubStr(cCampo,67,2)+SubStr(cCampo,65,2)
	RJHX->RJH_CAT	:= SubStr(cCampo,73,2)
ElseIf cTipo $ "20*21"
	RJHX->RJH_TTOMA 	:= SubStr(cCampo,18,1)
	RJHX->RJH_TOMAD 	:= SubStr(cCampo,19,14)
	// Devo somar o salario familia,Valor Retido e Valor Faturado de todos os C.C. no Tipo 20
	If !lFound .And. cTipo == '20'
		cCampo1  := cCampo
		//-- Não gera acumulado de registro ja informado
		IF !Empty(cCampo)  .and. cCampo <> RJHX->RJH_TEXTO+RJHX->RJH_TEXTO2
			n20Valor := Val(SubStr(RJHX->RJH_TEXTO,198,15))+Val(SubStr(cCampo,198,15)) //Salario familia
			n20VlEmp := Val(SubStr(RJHX->RJH_TEXTO,213,15))+Val(SubStr(cCampo,213,15))
			n20VlDev := Val(SubStr(RJHX->RJH_TEXTO,229,14))+Val(SubStr(cCampo,229,14))
			n20VlRet := Val(SubStr(RJHX->RJH_TEXTO,243,12)+(SubStr(RJHX->RJH_TEXTO2,1,3)))+Val(SubStr(cCampo,243,15))
			n20VlFat := Val(SubStr(RJHX->RJH_TEXTO2,4,15))+Val(SubStr(cCampo,258,15))

			cCampo   := SubStr(cCampo1,1,197)
			cCampo   += StrZero(n20Valor,15)+ StrZero(n20VlEmp,15)
			cCampo   += SubStr(cCampo1,228,1)

			If lChangeCC
				cCampo	 += StrZero(n20VlDev,14)+StrZero(n20VlRet,15)+StrZero(n20VlFat,15)
			Else
				cCampo	 += StrZero(n20VlDev,14)+SubStr(RJHX->RJH_TEXTO,243,12)+SubStr(RJHX->RJH_TEXTO2,1,18)
			Endif

			cCampo   += SubStr(cCampo1,273,88)+CHR(13)+CHR(10)
			RJHX->RJH_TEXTO		:= substr(cCampo,1,254)
			RJHX->RJH_TEXTO2	:= substr(cCampo,255,362)
		Else

			n20Valor := Val(SubStr(RJHX->RJH_TEXTO,198,15))+Val(SubStr(cCampo,198,15)) //Salario Familia sempre deve ser somado.
			n20VlEmp := Val(SubStr(RJHX->RJH_TEXTO,213,15))+Val(SubStr(cCampo,213,15))
			n20VlDev := 0
			n20VlRet := Val(SubStr(RJHX->RJH_TEXTO,243,12))+Val(SubStr(RJHX->RJH_TEXTO2,1,3))+Val(SubStr(cCampo,243,15))
			n20VlFat := Val(SubStr(RJHX->RJH_TEXTO2,4,15))+Val(SubStr(cCampo,258,15))
			cCampo   := SubStr(RJHX->RJH_TEXTO,1,197)
			cCampo   += StrZero(n20Valor,15)+ StrZero(n20VlEmp,15)
			cCampo   += SubStr(cCampo1,228,1)

			If lChangeCC
				cCampo	 += StrZero(n20VlDev,14)+StrZero(n20VlRet,15)+StrZero(n20VlFat,15)
			Else
				cCampo	 += StrZero(n20VlDev,14)+SubStr(RJHX->RJH_TEXTO,243,12)+SubStr(RJHX->RJH_TEXTO2,1,18)
			Endif

			cCampo   += SubStr(cCampo1,273,88)+CHR(13)+CHR(10)
			RJHX->RJH_TEXTO		:= substr(cCampo,1,254)
			RJHX->RJH_TEXTO2	:= substr(cCampo,255,362)
		EndIf
	ElseIf !lFound .And. cTipo == "21"
		n21Valor 		:= Val( SubStr(RJHX->RJH_TEXTO, 54, 15) ) / 100
		n21Valor 		+= nValComps
		RJHX->RJH_TEXTO	:= SubStr(RJHX->RJH_TEXTO, 1, 53) + StrZero( n21Valor * 100, 15 ) + SubStr(RJHX->RJH_TEXTO, 69, 186) + SubStr(RJHX->RJH_TEXTO2, 1, 108)
	EndIf
ElseIf cTipo $ "30*32"
	RJHX->RJH_TTOMA	:= SubStr(cCampo,18,1)
	RJHX->RJH_TOMAD	:= SubStr(cCampo,19,14)
	RJHX->RJH_PIS	:= SubStr(cCampo,33,11)
	RJHX->RJH_DT	:= SubStr(cCampo,48,4)+SubStr(cCampo,46,2)+SubStr(cCampo,44,2)
	RJHX->RJH_CAT	:= SubStr(cCampo,52,2)
	RJHX->RJH_EMP	:= FWGrpCompany("SRA")
	RJHX->RJH_FILFUN:= SRA->RA_FILIAL
	RJHX->RJH_MAT	:= SRA->RA_MAT

	If cTipo == "30"
		If aScan(aAfast, {|x| x[2] == "O1"}) > 0 .And. n2BFgts < nBFGTS
			n2BFgts := nBFGTS
		EndIf
		RJHX->RJH_BFGTS 	+= nBFGTS
		RJHX->RJH_BFG13 	+= nBFGTS13
		RJHX->RJH_BINSS 	+= nBINSS
		RJHX->RJH_BIN13 	+= nBINSS13
		RJHX->RJH_DINSS 	+= nDINSS
		RJHX->RJH_NBASE 	:= cFlagBase
		RJHX->RJH_2BFGTS 	+= n2BFgts
		RJHX->RJH_2BFG13 	+= n2B13Fgts
		RJHX->RJH_2BINSS 	+= n2BInss
		RJHX->RJH_2BIN13	+= n2B13Inss
	EndIf

	If !lFound .and. cTipo =="30"
		cCampo1  := cCampo

		n30VlS13 	:= Val(SubStr(RJHX->RJH_TEXTO,168,15))+Val(SubStr(cCampo,168,15))
		n30VlC13 	:= Val(SubStr(RJHX->RJH_TEXTO,183,15))+Val(SubStr(cCampo,183,15))
		n30VlDesc	:= Val(SubStr(RJHX->RJH_TEXTO,202,15))+Val(SubStr(cCampo,202,15))
		n30VlCont	:= Val(SubStr(RJHX->RJH_TEXTO,217,15))+Val(SubStr(cCampo,217,15))
		n30Bs13Mov 	:= Val(SubStr(RJHX->RJH_TEXTO,232,15))+Val(SubStr(cCampo,232,15))
		n30Bs13Gps 	:= Val(SubStr(RJHX->RJH_TEXTO,247,8))+Val(SubStr(RJHX->RJH_TEXTO2,1,7))+Val(SubStr(cCampo,247,15))

		cCampo   	:= SubStr(cCampo1,1,167)
		cCampo   	+= StrZero(n30VlS13,15)+ StrZero(n30VlC13,15)
		cCampo		+= SubStr(cCampo1,198,4)
		cCampo   	+= StrZero(n30VlDesc,15)+ StrZero(n30VlCont,15)
		cCampo   	+= StrZero(n30Bs13Mov,15)+ StrZero(n30Bs13Gps,15)
		cCampo   	+= SubStr(cCampo1,262,99)+CHR(13)+CHR(10)

		RJHX->RJH_TEXTO		:= substr(cCampo,1,254)
		RJHX->RJH_TEXTO2	:= substr(cCampo,255,362)

	EndIf
EndIf

If !lFound
	If cTipo == "00"
			RJHX->RJH_TEXTO		:= substr(c00Campo,1,254)
			RJHX->RJH_TEXTO2	:= substr(c00Campo,255,362)
	ElseIf cTipo $ "10*12"
			RJHX->RJH_TEXTO		:= substr(c10Campo,1,254)
			RJHX->RJH_TEXTO2	:= substr(c10Campo,255,362)
	EndIf
Else
		RJHX->RJH_TEXTO			:= substr(cCampo,1,254)
		RJHX->RJH_TEXTO2		:= substr(cCampo,255,362)
EndIf
MsUnlock()

RestArea(aOldAlias)

Return Nil

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ BIN_TIPO00³ Autor ³ Cristina Ogura       ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Registro das informacoes do responsavel                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ BIN_TIPO00()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function BIN_TIPO00()

Local c00Grava
Local aInfo		:=	{}
Local cCodigo	:=  ""
Local cInfo		:=	""
Local cIndFGTS	:=	Space(01)
Local cIndINSS	:=	Space(01)
Local cINSS		:=	""
Local cFGTS		:=	""
Local cCompet	:=	""
Local cIndice	:=	""
Local cComp

If nIndInss == 0.00
	cIndice := Space(7)
Else
	cIndice := Str(nIndInss * 100,7)
EndIf

// Tipo de Inscricao
If !fInfo(@aInfo,SubStr(cFilResp,3,FwGetTamFilial),SubStr(cFilResp,1,2))
	Return .T.
EndIf

// Tipo de inscricao da Empresa
If aInfo[15] == 1 .Or. ( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ) )// CEI
	cInfo:= "2"
	cCodigo := If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )
ElseIf aInfo[15] == 3		// CPF
	cInfo:= "3"
	cCodigo := aInfo[8]
Else
	cInfo:= "1"				// CGC/INCRA
	cCodigo := aInfo[8]
EndIf

// Indicador Recolhimento INSS
cCompet:= Right(Str(Year(dAuxpar01)),4)+SubStr(DtoC(dAuxpar01),3,3)
If cCompet < "1998/10"
	cIndINSS := "3"
ElseIf cCompet > "1998/10" .And. cRecol $ "145/307/317/327/337/345/640/660"
	cIndINSS := "3"
Else
	cIndINSS := Str(nRecInss,1)
EndIf

// Data de Recolhimento do INSS
If cIndINSS # "2"
	cINSS	:=	Space(08)
Else
	cINSS	:=	Transforma(dDtInss)
EndIf

// Indicador Recolhimento FGTS
If SubStr(cDataRef,4,2) # "13"
	If (cRecol$ "145/345/640") .or. (cRecol$ "145/307/317/327/337/345/640"  .and. (nVersao == 3))
		cIndFGTS	:= "2"
	ElseIf cRecol $ "211"
		cIndFGTS	:= " "
	Else
		cIndFGTS	:= Str(nRecFgts,1)
	EndIf
EndIf

If cCompet < "1998/10"
	cIndFGTS	:= "2"
EndIf
// Data Recolhimento do FGTS
If Empty(cIndFGTS) .or. cIndFGTS =="1" .or. SubStr(cDataRef,4,2) =="13"
	cFGTS := Space(08)
Else
	cFGTS := Transforma(dDtFgts)
EndIf

If cIndINSS # "2"
	cIndice:=Space(07)
EndIf

//-- Montar Ano/Mes de Competencia se 13o. SAL.
If nTipo = 2   // Tipo 1-Folha/Ferias	   2-13o.Salario
	cComp := Right(Str(Year(dAuxpar01)),4)+"13"
Else
	cComp := Right(Str(Year(dAuxpar01)),4)+SubStr(DtoC(dAuxpar01),4,2)
EndIf

//--Modalidade do arquivo
If cModFgts == 1
	cModFgts := " "
ElseIf cModFgts == 2
	cModFgts := "1"
ElseIf cModFgts == 3
	cModFgts := "9"
EndIf

cInscComp := cCodigo
cNomeComp := Iif(Empty(aInfo[29]), aInfo[03], aInfo[29]) 

//																		De 	Ate Tam	Descricao
c00Grava	:= "00"													// 001	002	002		Sempre "00"
c00Grava	+= Space(51)											// 003	053	049		Preencher com espacos
c00Grava    += "1"													// 054  054 001       "1"-GFIP
c00Grava	+= FSubst(Left(cInfo+Space(01),01))					// 055	055	001		1- CGC/CNPJ 2-CEI 3-CPF
c00Grava	+= space(14-len(alltrim(cCodigo)))+alltrim(cCodigo)		// 056	069	014		Inscricao
c00Grava	+= FSubst(Left(cNomeComp+Space(30),30))				// 070	099	030		Nome empresa
c00Grava	+= FSubst(Left(cNomeCont+Space(20),20))				// 100	119	020		Nome pessoa contato
c00Grava	+= FSubst(Left(aInfo[04]+Space(50),50))				// 120	169	050		Logradouro, rua, apartamento
c00Grava	+= FSubst(Left(aInfo[13]+Space(20),20))				// 170	189	020		Bairro
c00Grava	+= FSubst(Left(aInfo[07]+Space(08),08))				// 190	197	008		CEP
c00Grava	+= FSubst(Left(aInfo[05]+Space(20),20))				// 198	217	020		Cidade
c00Grava	+= FSubst(Left(aInfo[06]+Space(02),02))				// 218	219	002		UF
c00Grava	+= FSubst(StrZero(nFoneCont,12))						// 220	231	012		Telefone
c00Grava	+= Left(cInternet+Space(60),60)						// 232	291	060		Endereco na Internet
c00Grava	+= cComp												// 292	297	006		Mes/Ano competencia AAAAMM
c00Grava	+= Left(cRecol+Space(03),03)							// 298	300	003		Codigo recolhimento
c00Grava	+= Left(cIndFGTS+Space(01),01)							// 301	301	001		Indica Recolh FGTS 1-no Prazo  2-atraso ou brancos
c00Grava    += cModFgts												// 302	302 001		"1"-Recolhimento FGTS
c00Grava	+= Left(cFGTS+Space(08),08)							// 303	310	008		Data do recolhimento do FGTS
c00Grava	+= Left(cIndINSS+Space(01),01)							// 311	311	001		Indica Recolh INSS 1-no prazo 2-atraso 3-nao gera
c00Grava	+= Left(cINSS+Space(08),08)							// 312	319	008		Data Recolhimento do INSS em Atraso
c00Grava	+= cIndice												// 320	326	007		Indice do Recolh. em atraso
c00Grava 	+= Left(Str(nTpForFol,1),1)							// 327	327	001		1- CGC/CNPJ 2-CEI 3-CPF Fornecedor Folha
c00Grava	+= StrZero(nInscFol,14)									// 328	341	014		Inscricao Fornecedor Folha
c00Grava	+= Space(18)											// 342	359	018		Brancos
c00Grava	+= "*"													// 360	360	001		"*"	Fim de linha
c00Grava 	+= CHR(13) + CHR(10)									//					Fim de linha

GravaRJH(c00Grava,"00")

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ DBF_TIPO10³ Autor ³ Cristina Ogura       ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Registro das informacoes da empresa                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ DBF_TIPO10()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function DBF_TIPO10(cAuxFil,aInfo,cInfo,nSalFam,n13Inss,nSalMat1,nValDPrev)

Local c10Grava		:= ""
Local nAliqSat		:=	0
Local cCentra		:=	""
Local cAliqSat		:=	"00"
Local cAltCNAE		:= 	cIndCNAE
Local cImpSimples	:=	Space(01)
Local cCompet		:=	Right(Str(Year(dAuxpar01)),4) + SubStr(cDataRef,3,3)
Local cCodRemag 	:=	Space(13)
Local cMudou		:=	aInfo[23]
Local aFoneSM0		:=  FisGetTel( aInfo[10] ) //-- Obtem o telefone do SIGAMAT (DDI, DDD e Telefone)
Local cTel			:=	"00"+FSubst(Alltrim(Str(aFoneSM0[02])) + RIGHT(Alltrim(STR(aFoneSM0[03])) , 8) )		// DDD + Telefone
Local cPercfilan    := ""
Local cCodGps10     := ""
Local cCodigo		:= If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )
Local cRazao 		:= Iif(Empty(aInfo[29]), aInfo[03], aInfo[29])

Private nSal_Mat    := 0
// Codigo da Remag
If nCodRemag = 0
	cCodRemag := Space(14)
	cTab	  := "S037"
	cAnoMes	  := MesAno(dAuxpar01)

	//--TABELA S037 - ENCARGOS EMPRESAS
	IF SRA->RA_TPCONTR $ "1,3"
	   CTIPCON := '1'
	Else
	   CTIPCON := '2'
	EndIf
	nPosTab := fPosTab( cTab,cAnoMes,"==",2,CTIPCON,"==",4) //Tipo de contrato 1

	If nPosTab == 0
  		nPosTab := fPosTab(cTab, Space(6), "==",2,CTIPCON,"==",4)
	EndIf

	If nPosTab > 0
 		cCodRemag  	:= 	fTabela(cTab,nPosTab,13)    	//Codigo FGTS
    EndIf
Else
	cCodRemag := StrZero(nCodRemag,14)
EndIf

// Codigo da empresa dever ser espacos
If Empty(cCodRemag) .Or. Val(cCodRemag) = 0
	cCodRemag := Space(14)
EndIf

// Carrega Percentuais de INSS Empresa
If !fInssEmp(cAuxFil,@aInssEmp,.F.,MesAno(dAuxPar01))
	Help( ,, OemToAnsi(STR0063),, OemToAnsi(STR0105), 1, 0 ) //"Atenção" ## "Verifique o cadastro das tabelas de Encargos Empresa (S037) e Outras Entidades (S038)"
	Return .F.
EndIf

If Empty(SRA->RA_TPCONTR) .Or. SRA->RA_TPCONTR == "1" .or. SRA->RA_TPCONTR == "3"
	cTerceiros := aInssEmp[25,1]
ElseIf SRA->RA_TPCONTR == "2"
	cTerceiros := aInssEmp[25,2]
EndIf

If lFpasCC
	cTerceiros := cRurTerc
	nAliqSat := nRurPRat
EndIf


// Centraliza ou nao as filiais
If nCentra == 1					// Centralizar Filial 1-Sim  2-Nao
	If FWGrpCompany("SM0")+AllTrim(cAuxFil) == AllTrim(cFilResp)
		cCentra:= "1"
		If cAltCNAE $ "A*P"
			cAltCNAE := "N"
		EndIf
	Else
		cCentra:= "2"
	EndIf
Else
	cCentra := "0"
EndIf

If cRecol $ "130/135/150/155/211/317/337/608"
	cCentra := "0"
EndIf

//ponto de entrada para alterar o valor do Salario Familia
If lGpmSalFam
	Execblock("GPM610SalFam",.F.,.F.,{cAuxFil})
	nSalFam 		:= 	If( nSal_Fam > 0, nSal_Fam, nSalFam)
EndIf
//-- Modificar o CNAE
If SubStr(cDataRef,4,2) == "13"
	cMudou	 := "N"
	cAltCNAE := "N"
	nSalFam  := 0
EndIf

If cFPAS $ "868" .and. nVersao #1
	cCodGps10 := "1600"
ElseIf nVersao # 1 .and.!(cRecol $ "115/150/211/650") .or. cRecol $ "145/307/327/345/640/660"
	cCodGps10 := space(04)
Else
	cCodGps10 := cCodGps
EndIf

cCodGps10 := If( cCompet < "1998/10",space(04),cCodGps10)

// Aliquota de RAT - Acidente de trabalho
// aINSSEmp depende do RA_TPCONTR
If SRA->RA_TPCONTR == "2"
	nAliqSat	:= aInssEmp[29][2] * 100
Else
	nAliqSat	:= aInssEmp[29][1] * 100
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Utiliza as variáveis alteradas no ponto de entrada GPM610TP20 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//verificar carga das tabelas
If !Empty( cCnae_Tom )
	cCNAE	:=	cCnae_Tom
Else
	cCNAE	:=	aInfo[16]
EndIf
nAliqSat	:= 	If(!empty( nRAT_TOM ),nRAT_TOM,nAliqSat)
cTerceiros 	:=	If(!empty(cTerc_Tom),cTerc_Tom,cTerceiros)

If Int(nAliqSat) == 1
	cAliqSat := "10"
ElseIf Int(nAliqSat) == 2
	cAliqSat := "20"
ElseIf Int(nAliqSat) == 3
	cAliqSat := "30"
ElseIf Int(nAliqSat) == 0
	cAliqSat := "00"
Else
	cAliqSat := cAliqSat
EndIf

If nVersao # 1
	If ((cFPAS $ "604/647/868" .and. nVersao == 2)  .or. ;//Optante simples
		(cFPAS $ "604/647/825/833/868"  .and. nVersao == 3)) ;
		.Or. cSimples == "2"
		nAliqSat	:=0
	EndIf

	If cCompet < "1998/10" .or. (cRecol$ "145/307/317/327/337/345/640/660")
		cAliqSat	:="  "
	EndIf
Else
	If cFPAS $ "604/647" .Or. cSimples == "2"   //Optante simples
		nAliqSat	:=	0
	ElseIf cCompet < "1998/10" .or. (cRecol == "150" .and. cFPAS $"604" .AND. cCompet > "2001/10")
		cAliqSat	:=	"  "
	EndIf
EndIf


// Optante do SIMPLES ou Nao
If nVersao == 1 .and. cRecol $ "130/608/903/909/910" .And. cFPAS $ "523/582/639/655"
	cImpSimples := "1"
ElseIf cRecol $ If(nVersao #1,"640","145/345/640/660") .or. (cCompet < "1996/12")
	cImpSimples := " "
Else
	cImpSimples := StrZero(val(cSimples),1)
EndIf

// valor retido de Inss 13o. e Valor Devido a Previdencia e indice
cIndInss := "0"
If (nTipo # 2) .and. (Month(dAuxPar01) == 12) .And. If(nVersao#3,! cRecol$ "145/345/640/660",! cRecol$"145/150/155/307/327/345/608/640/650/660/" )
	n13Inss		:= n13Inss	* 100
	If nValDPrev < 0.00
		cIndInss 	:= "1"
		nValDPrev 	:= nValDPrev * (-1)
	EndIf
	nValDPrev := nValDPrev * 100
Else
	n13Inss		:= 0
	nValDPrev	:= 0
EndIf

// Salario Familia
If (cRecol $ "130/145/150/155/211/307/327/345/608/640/650/660")  .or. cFPAS $ "868"	 .or. (cCompet < "1998/10")
	nSalFam	:= 0
Else
	nSalFam := nSalFam * 100
EndIf

//ponto de entrada para alterar o valor do Salario MATERNIDADE
If lGpSalMat
	Execblock("GP610SalMat",.F.,.F.,{cAuxFil})
	nSalMat1 := 	If( nSal_Mat > 0, nSal_Mat, nSalMat1)
EndIf

If cRecol$ '130/135/145/211/307/317/327/337/345/640/650/660' .Or. nTipo == 2
	nSalMat1 := 0
Else
	nSalMat1 := nSalMat1 * 100
EndIf

If nVersao == 3 .and. cRecol $ '130/135/145/211/307/317/327/337/345/640/650/660/'
	nSalMat1 := 0
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Se nao tiver recolhimento de pessoal administrativo e o codigo³
//³de recolhimento for 150, nao informar o valor de deducao do   ³
//³salario maternidade.                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lPessoalAdm .and. cRecol == '150'
	nSalMat1 := 0
EndIf

If (cCompet < "1998/10") .OR. (cCompet >= "2000/06" .and. cCompet <= "2003/08")
	nSalMat1 := 0
EndIf

If cCompet < "1994/04"
	cPercFilan := Space(5)
EndIf

If nPercfilan > 0.00 .and. cFPAS $ "639"
	cPercFilan := StrZero(nPercFilan * 100,5)
Else
	cPercFilan := Space(5)
EndIf

// Optou pelo SIMPLES
If cImpSimples $ If(nVersao#1,"236","2*3*6") .Or. cRecol$ '145/307/317/327/337/345/640/660'.or. cCompet < "1998/10";
	.or. (cCompet < "1999/04" .and. cFPAS $"639")
	cTerceiros := Space(04)
EndIf

If nVersao # 1
	If (cFPAS $ "582" .and. cCompet >= "1998/10") .or.(cFPAS$'868') .or. (cImpSimples $ "1*5" .and. cFPAS $ "639" .and. cCompet >= "1999/04")
		cTerceiros := replicate("0",04)
	EndIf
EndIf

If Empty(cMudou)
	cMudou := "N"
EndIf

n13Inss		:= 0
cIndInss	:= "0"
nValDPrev	:= 0

//														De		Ate	Tam			Descricao
c10Grava := "10"										//  001	002	002			Sempre 10
c10Grava += Left(cInfo+Space(01),01)					//  003	003	001			1-CGC/CNPJ	2-CEI
c10Grava += space(14-len(alltrim(cCodigo)))+alltrim(cCodigo)//	004	017	014			Inscricao
c10Grava += Replicate("0",36)							//	018	053	036			Zeros
c10Grava +=	FSubst(Left(cRazao+Space(40),40))			//	054	093	040			Nome empresa
c10Grava += FSubst(Left(aInfo[04]+Space(50),50))		//	094	143	050			Endereco
c10Grava += FSubst(Left(aInfo[13]+Space(20),20))		//	144	163	020			Bairro
c10Grava += Left(aInfo[07]+Space(08),08)				//	164	171	008			CEP
c10Grava += FSubst(Left(aInfo[05]+Space(20),20))		//	172	191	020			Cidade
c10Grava += Left(aInfo[06]+Space(02),02)				//	192	193	002			UF
c10Grava += Right(Space(12)+cTel,12)					//	194	205	012			Telefone
c10Grava += Left(cMudou+Space(01),01)					//	206	206	001			"S" se mudou de endereco
c10Grava +=	Left(cCNAE+Repl("0",7),7)					//	207	213	005			Nr CNAE
c10Grava +=	Left(cAltCNAE+Space(01),01)					//	214	214	001			"S" se alterou o CNAE
c10Grava +=	Left(cAliqSat+Space(02),02)					//	215	216	002			Aliquota de SAT (Acidente Trabalho)
c10Grava +=	Left(cCentra+Space(01),01)					//	217	217	001			0-nao centraliza 1-centralizadora 2-centralizada
c10Grava +=	Left(cImpSimples+Space(01),01)				//	218	218	001			Simples 1-optante 2-optante
c10Grava +=	Left(cFPAS+Space(03),03)					//	219	221	003			FPAS
c10Grava += cTerceiros									//	222	225	004			Cod Terceiros( Outras Entidades )
c10Grava += Left(cCodGps10+space(4),4)			   		//	226 229 004         Codigo de pagamento GPS
c10Grava += cPercFilan									//	230 234	005			Percentual isencao Filantropia
c10Grava +=	StrZero(nSalFam,15)							//	235	249	015			Valor Pago de Salario Familia
c10Grava +=	StrZero(nSalMat1,15)						//	250	264	015			Ded.Sal.Maternidade na GPS
c10Grava +=	StrZero(n13Inss,15)							//	265	279	015			Contrib. Desc. Empregado Comp.13
c10Grava += cIndInss									//	280	280	001			Indica se Valor devido a Prev. é 0=Positivo e 1=Negativo
c10Grava +=	StrZero(nValDPrev,14)						//	281	294	014			Valor Devido a Previdencia
c10Grava += Space(3)									//	295	297	003			Banco para debito em conta corrente
c10grava += Space(4)									//	298	301	004			Agencia para debito em conta corrente
c10grava += Space(9)									//	302	310	009			Conta corrente para debito
c10Grava += Replicate("0",45)							//	311 355 045			Zeros
c10Grava += Space(4)									//	356	359 004			Brancos
c10Grava +=	"*"											//	360	360	001			"*"
c10Grava += CHR(13)+CHR(10)								//	Fim de linha

GravaRJH(c10Grava,"10")

nSal_Fam := 0

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ DBF_TIPO12³ Autor ³ Cristina Ogura       ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Registro das informacoes adicionais do recolhimento empresa³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ DBF_TIPO12(ExpA1,ExpC1)                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function DBF_TIPO12(aInfo,cInfo)

Local c12Grava
Local cOrigem	:=	" "
Local nEvento	:=	0
Local cDtInI	:= 	SubStr(dtos(dDtInfINI),1,6)
Local cDtFim	:= 	SubStr(dtos(dDtInfFIM),1,6)
Local cCompet	:= 	Right(Str(Year(dAuxpar01)),4)+SubStr(DtoC(dAuxpar01),3,3)
Local cCodigo	:= If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )

If cRecol $"650/660/" .and. nVersao # 1
	cDtInI	:= SubStr(dtos(dDtInfINI),1,6)
	cDtFim	:= SubStr(dtos(dDtInfFIM),1,6)
Else
	cDtInI	:= ""
	cDtFim	:= ""
EndIf
// Deducao 13o. Salario Maternidade
If (nVersao == 3 .and. cRecol$ "130/135/145/211/307/317/327/337/345/640/650/660") .or. cFPAS$ "868"
	nDeduc	:=	0
EndIf

If nVersao == 3
	If cCompet< "1998/10" .or. (cCompet >= "2001/01" .and. cCompet<="2003/08")
		nDeduc	:=	0
	EndIf
EndIf

nDeduc := nDeduc * 100

// Verificar Receita de  Desportivo/ Patrocinio
If SubStr(cDataRef,4,2) # "13"
	If cRecol $ "130/135/145/211/307/317/327/337/345/608/640/650/660"
		nValRec := 0
	EndIf
Else
	nValRec :=0
EndIf

nEvento	:= If( (cCompet< "1998/10").or. (cRecol $"130/135/145/211/307/317/327/337/345/608/640/650/660"),0,nEvento)
nEvento	:= nValRec * 100


// Achar a origem da receita Bruta
If SubStr(cDataRef,4,2) # "13" .And. nEvento # 0
	If nOrigRec == 1
		cOrigem := "E"
	ElseIf nOrigRec == 2
		cOrigem := "P"
	ElseIf nOrigRec == 3
		cOrigem := "A"
	EndIf
EndIf
cOrigem := If( (cCompet< "1998/10") .or.(cRecol $"145/307/317/327/337/345/640/660"),space(01),cOrigem)

If (SubStr(cDataRef,4,2) == "13") .or. (nVersao ==3 .and. cFPAS $ "604" .and. cRecol $"150" .and. cCompet >"2001/10");
	.or. (nVersao == 3 .and. cRecol $"130/135/145/211/307/317/327/337/345/608/640/650/660")
	nVlCooper := 0
Else
	nVlCooper := nVlCooper*100
EndIf

If (nVersao == 3 .and. cCompet > "2001/10" .and. cFPAS $"604" .and. cRecol $ "150") .or. ;
   (cRecol $ "130/135/145/211/307/317/327/337/345/608/640/650/660") .or. SubStr(cDataRef,4,2) == "13";
   .or. (cCompet < "1998/10")
	nValProPf 	:= 0
	nValProPj	:= 0
EndIf

If (nVersao == 3) .and. (cCompet < "1998/10" .or. cRecol $ "130/135/145/150/155/211/307/327/345/608/640/660" .or. SubStr(cDataRef,4,2) == "13" )
	nValComps := 0 			// Valor da Compensacao da GPS
	cPerIniCmp:= space(06)	// Ano/mes do periodo inicial de Compensacao
	cPerFimCmp:= space(06)	// Ano/mes do periodo final de Compensacao
EndIf
If !lPessoalAdm .and. cRecol $ '150#155#608'
	nDeduc := 0
EndIf
//														De	Ate	Tam	Descricao
c12Grava := "12"									//	001	002	002	Sempre 12
c12Grava +=	Left(cInfo+Space(01),01)				//	003	003	001	1-CGC/CNPJ	2-CEI
c12Grava +=	space(14-len(alltrim(cCodigo)))+alltrim(cCodigo)//	004	017	014	Inscricao da empresa
c12Grava +=	Replicate("0",36)						//	018	053	036	zeros
c12Grava +=	StrZero(nDeduc,15)						//	054	068	015	Deducao 13o Sal Licenca Maternidade
c12Grava +=	StrZero(nEvento,15)						//	069	083	015	Receita Evento Desportivo/Patrocinio
c12Grava +=	Left(cOrigem+Space(01),1)				//	084	084	001	Indicativo Origem Receita (E-P-A)
c12Grava +=	StrZero(nValProPf*100,15)				//	085	099	015	Comercial Producao Rural - Pessoa Fisica
c12Grava +=	StrZero(nValProPj*100,15)				//	100	114	015	Comercial Producao Rural - Pessao Juridica
c12Grava += If(nProcesso==0,space(11),Str(nProcesso,11)) //	115	125	011	Outras Informacoes Processo
c12Grava += If(nProcAno==0,space(04),Str(nProcAno,4))	//	126	129	004	Ano do Processo
c12Grava +=	If(nVara==0,space(05),Str(nVara,5))	//	130	134	005	Outras Informacoes - Vara
c12Grava +=	If(!empty(cDtINI),cDtINI,space(06))	//	135	140	006	Outras Informacoes - Periodo inicio
c12Grava +=	If(!empty(cDtFIM),cDtFIM,space(06))	//	141	146	006	Outras Informacoes - Periodo Fim
c12Grava +=	strzero(nValComps*100,15)				//	147	161	015	Compensacao - Valor
c12Grava +=	Left(cPerIniCmp+space(06),06)			//	162	167	006	Compensacao - Periodo Inicio
c12Grava +=	Left(cPerFimCmp+space(06),06)			//	168	173	006	Compensacao	- Periodo Fim
c12Grava +=	Replicate("0",15)						//	174	188	015	Recol. Competencia Anterior - Inss Sobre Folha
c12Grava +=	Replicate("0",15)						//	189	203	015	Recol. Competencia Anterior - Outras Entidades Sobre Folha
c12Grava +=	Replicate("0",15)						//	204	218	015	Recol. Competencia Anterior - Producao Rural Valor do Inss
c12Grava +=	Replicate("0",15)						//	219	233	015	Recol. Competencia Anterior - Producao Rural Outras Entidades
c12Grava +=	Replicate("0",15)						//	234	248	015	Recol. Competencia Anterior - Receita de Eventos
c12Grava +=	Replicate("0",15)						//	249	263	015	Parcela do FGTS Somatorio das Remuneracoes
c12Grava +=	Replicate("0",15)						//	264	278	030	Parcelamento do FGTS categoria 04 e 07
c12Grava +=	Replicate("0",15)						//	279	293	030	Parcelamento do FGTS valor recolhido
c12Grava +=	StrZero(nVlCooper,15)					//	294	308	015	Valores Pagos a Cooperativas de Trabalho
c12Grava +=	Replicate("0",45)						//	309	353	045	Implementacao Futura
c12Grava +=	Space(6)								//	354	359	006	Brancos
c12Grava +=	"*"										//	360	360	001		"*"
c12Grava += CHR(13)+CHR(10)							//	Fim de linha

GravaRJH(c12Grava,"12")

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ DBF_TIPO13³ Autor ³ Cristina Ogura       ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Registro das alteracoes cadastral trabalhador              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ DBF_TIPO13(ExpA1,ExpC1,ExpN1)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function DBF_TIPO13(aInfo,cInfo,nFgts,cCampo)

Local c13Grava
Local cCodigo
Local cNovo
Local cCateg	:=	Space(02)
Local cMatr		:=	""
Local cCodRemag	:= Space(13)
Local aSR9		:=	{}
Local aAux		:=	{}
Local cNumCP	:=	""
Local cSerCP	:=	""
Local cNome		:=	""
Local cPis		:=	""
Local cAdmissa	:=	""
Local cTab		:= ""
Local cAnoMes	:= ""
Local cTipCon	:= ""
Local nPosTab	:= 0
Local cCod		:= If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )

//--Busca a categoria do Funcionario
cCateg	:=	FCateg(nFgts)

//--Nao gerar as categorias Abaixo
If cCateg$ (If(nVersao==1,"11/12/13/14/15/16/17",If(nVersao==2,"11/12/13/14/15/16/17/18/19/20/21","11/12/13/14/15/16/17/18/19/20/21/22/23/24/25/26")))
	Return
EndIf
//--Nao pode ser informado na competencia 13
If SubStr(cDataRef,4,2)== "13"
	Return
EndIf
// Codigo da Remag
If nCodRemag == 0
	cCodRemag := Space(14)
	cTab	  := "S037"
	cAnoMes	  := MesAno(dAuxpar01)

	//--TABELA S037 - ENCARGOS EMPRESAS
	If SRA->RA_TPCONTR $ "1,3"
	   cTipCon := '1'
	Else
	   cTipCon := '2'
	EndIf
	nPosTab := fPosTab( cTab,cAnoMes,"==",2,cTipCon,"==",4) //Tipo de contrato 1

	If nPosTab == 0
  		nPosTab := fPosTab(cTab, Space(6), "==",2,cTipCon,"==",4)
	EndIf

	If nPosTab > 0
 		cCodRemag  	:= 	StrZero(Val(fTabela(cTab,nPosTab,13)), 14) 	//Codigo FGTS
    EndIf
Else
	cCodRemag := StrZero(nCodRemag,14)
EndIf

If Empty(cCodRemag) .Or. Val(cCodRemag) = 0
	cCodRemag := Space (14)
EndIf

// Carteira Profissional - 403
If AllTrim(cCampo) == "RA_NUMCP" .and. SRA->RA_ALTCP == "S"
	cCodigo:= "403"
	If Empty(SRA->RA_NUMCP) .and. !Empty(SRA->RA_CIC) //CTPS Digital - Utilizar CPF
		cNovo  := StrZero(Val(SRA->RA_CIC),12)
	Else
		cNovo  := StrZero(Val(f610TrocaLetra(SRA->RA_NUMCP)), 07) + StrZero(Val(f610TrocaLetra(SRA->RA_SERCP)), 05)
	EndIf
	// Nome empregado - 404
ElseIf (alltrim(cCampo) == "RA_NOMECMP" .or. alltrim(cCampo) =="RA_NOME") .and. SRA->RA_ALTNOME == "S"
	cCodigo := "404"
	If SRA->(FieldPos("RA_NOMECMP")) # 0
		cNovo := If(!empty(SRA->RA_NOMECMP),SRA->RA_NOMECMP,SRA->RA_NOME)
	Else
		cNovo	:= SRA->RA_NOME
	EndIf
	// PIS/PASEP - 405
ElseIf alltrim(cCampo) == "RA_PIS" .and. SRA->RA_ALTPIS == "S"
	cCodigo := "405"
	cNovo	  := SRA->RA_PIS
	// Data Admissao - 408
ElseIf alltrim(cCampo)=="RA_ADMISSA" .and. SRA->RA_ALTADM == "S"
	cCodigo := "408"
	cNovo	:= Transforma(SRA->RA_ADMISSA)
//CBO
ElseIf alltrim(cCampo) =="RA_CBO" .AND. SRA->(FieldPos("RA_ALTCBO "))# 0 .and. SRA->RA_ALTCBO == "S"
	cCodigo := "427"
	cNovo	:= fCodCBO(SRA->RA_FILIAL,SRA->RA_CODFUNC,dAuxPar01,If(nVersao#3,.F.,.T.))
	cNovo	:= "0"+SubStr(cNovo,1,4)
//Data de Nascimento
ElseIf alltrim(cCampo) == "RA_NASC" .AND. SRA->(FieldPos("RA_ALTNASC"))# 0 .and. SRA->RA_ALTNASC == "S"
	cCodigo := "428"
	cNovo	:= Transforma(SRA->RA_NASC)
EndIf

// Matricula do trabalhador
If cCateg $ "06" .and. nVersao == 3
	cMatr := Space(11)
Else
	cMatr := StrZero(Val(SRA->RA_MAT), 11)
EndIf

// Numero do CTPS
If !cCateg $ "01/03/04/06/07"
	cNumCP:= Space(07)
	cSerCP:= Space(05)
Else
	If Empty(SRA->RA_NUMCP) .and. !Empty(SRA->RA_CIC) //CTPS Digital - Utilizar CPF
		cNumCP  := Left(SRA->RA_CIC,7)
		cSerCP  := StrZero(Val(Right(SRA->RA_CIC,4)),5)
	Else
		cNumCP:= Strzero(val(f610TrocaLetra(SRA->RA_NUMCP)), 7)
		cSerCP:= SRA->RA_SERCP
	EndIf
EndIf

// Definir o campo que foi alterado
dbSelectArea("SR9")
dbSetOrder(1)
If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+cCampo)
	While !Eof() .And. SRA->RA_FILIAL+SRA->RA_MAT+cCampo ==;
		SR9->R9_FILIAL+SR9->R9_MAT+SR9->R9_CAMPO

		Aadd(aSR9,SR9->R9_DESC)
		dbSkip()
	EndDo
EndIf

If Alltrim(cCampo) == "RA_NUMCP"
	dbSelectArea("SR9")
	dbSetOrder(1)
	If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"RA_SERCP  ")
		While !Eof() .And. SRA->RA_FILIAL+SRA->RA_MAT+"RA_SERCP  " ==;
			SR9->R9_FILIAL+SR9->R9_MAT+SR9->R9_CAMPO
			Aadd(aAux,SR9->R9_DESC)
			dbSkip()
		EndDo
	EndIf

	If Len(aSR9) == 0 .Or. Len(aAux) == 0
		If Len(aSR9) == 0
			If Len(aAux) > 1
				cNumCP := Strzero(val(f610TrocaLetra(SRA->RA_NUMCP)), 7)
				cSerCP := AllTrim(aAux[Len(aAux)-1])
				cNovo  := Left(StrZero(Val(f610TrocaLetra(SRA->RA_NUMCP)),07),07) + Left(StrZero(Val(AllTrim(aAux[Len(aAux)])),05),05)
			EndIf
		ElseIf Len(aAux) == 0
			If Len(aSR9) > 1
				cNumCP:= StrTran(aSR9[Len(aSR9)-1], ".", "")
				cSerCP:= SRA->RA_SERCP
				cNovo := StrZero(Val(StrTran(AllTrim(aSR9[Len(aSR9)]), ".", "")), 07) + StrZero(Val(f610TrocaLetra(AllTrim( SRA->RA_SERCP))), 05)
			EndIf
		EndIf
	Else
		If Len(aSR9) > 1
			cNumCP:= StrTran(AllTrim(aSR9[Len(aSR9)-1]), ".", "")
			cSerCP:= AllTrim(aAux[Len(aAux)-1])
			cNovo := StrZero(Val(StrTran(AllTrim(aSR9[Len(aSR9)]), ".", "")),07) + StrZero(Val(f610TrocaLetra(AllTrim(aAux[Len(aAux)]))),05)
		EndIf
	EndIf
	If Empty(SRA->RA_NUMCP) .and. !Empty(SRA->RA_CIC) //CTPS Digital - Utilizar CPF
		cNovo  := StrZero(Val(SRA->RA_CIC),12)
	EndIf
Else
	If Empty(SRA->RA_NUMCP) .and. !Empty(SRA->RA_CIC) //CTPS Digital - Utilizar CPF
		cNumCP  := Left(SRA->RA_CIC,7)
		cSerCP  := StrZero(Val(Right(SRA->RA_CIC,4)),5)
	Else
		cNumCP:= Strzero(val(f610TrocaLetra(SRA->RA_NUMCP)), 7)
		cSerCP:= SRA->RA_SERCP
	EndIf
EndIf

If (Alltrim(cCampo) =="RA_NOME" .OR. Alltrim(cCampo) =="RA_NOMECMP")
	If (Len(aSR9) > 1)
		cNome := aSR9[Len(aSR9)-1]
		cNovo := aSR9[Len(aSR9)]
	Else
		cNome := SRA->RA_NOME
	EndIf
Else
	If SRA->(FieldPos("RA_NOMECMP")) # 0
		cNome := If(!Empty(SRA->RA_NOMECMP),SRA->RA_NOMECMP,SRA->RA_NOME)
	Else
		cNome := SRA->RA_NOME
	EndIf
EndIf

If Alltrim(cCampo) == "RA_PIS"
	If Len(aSR9) > 1
		cPis := aSR9[Len(aSR9)-1]
		cNovo:= aSR9[Len(aSR9)]
	EndIf
	If Empty(cPis)
		Return Nil
	EndIf
Else
	cPis := SRA->RA_PIS
EndIf

If Alltrim(cCampo) == "RA_ADMISSA"
	If Len(aSR9) > 1
		cAdmissa:= CtoD(aSR9[Len(aSR9)-1],"DDMMYY")
		cNovo	:= Transforma(CtoD(aSR9[Len(aSR9)],"DDMMYY"))
	EndIf
	If Empty(cAdmissa)
		cAdmissa:= SRA->RA_ADMISSA
	EndIf
Else
	cAdmissa:= SRA->RA_ADMISSA
EndIf

cNumCP := Val(f610TrocaLetra(cNumCP))
cSerCP := Val(f610TrocaLetra(cSerCP))

If cNumCP == 0
	cNumCP := Space(07)
	cSerCP := Space(05)
Else
	cNumCP := Strzero(cNumCp, 7)
	cSerCP := Left(StrZero(cSerCP,05),05)
EndIf

// Nao tira as "/" quando for data
If Alltrim(cCampo) # "RA_ADMISSA"  .and.  Alltrim(cCampo) # "RA_NASC"
	cNovo := FSubst(cNovo)
EndIf

//															De		Ate	Tam	Descricao
c13Grava := "13"		 								//	001		002	002		Sempre "13"
//--Quando Filial For Cei e Centraliza Filail gera Filial Responsavel
If nCentra = 1 .And. cInfo = '2'
	c13Grava += Left(cInfoResp+Space(01),01)			//	003	    003	001		1-CGC/CNPJ	2-CEI
	c13Grava += space(14-len(alltrim(cInscResp)))+alltrim(cInscResp)//	004	    017	014		Inscricao da empresa
Else
	c13Grava += Left(cInfo+Space(01),01)				//	003		003	001		1-CGC/CNPJ	2-CEI
	c13Grava += space(14-len(alltrim(cCod)))+alltrim(cCod)//	004		017	014		Inscricao da empresa
EndIf
c13Grava += Replicate("0",36)							//	018		053	036		Zeros
c13Grava += Left(cPis+Space(11),11)					//	054		064	011		PIS/PASEP/CI
c13Grava += Transforma(cAdmissa)						//	065		072	008		Data da admissao
c13Grava += Left(cCateg+Space(02),02)					//	073		074	002		Categoria do trabalhador
c13Grava += FSubst(Left(cMatr,11))						//	075		085	011		Matricula do trabalhador
c13Grava += cNumCP                      				//	086		092	007		Numero do CTPS
c13Grava += cSerCP                      				//	093		097	005		Serie do CTPS
c13Grava += FSubst(Left(cNome+Space(70),70))			//	098		167	070		Nome
c13Grava += Left(cCodRemag+Space(14),14)				//	168		181	014		Cod. Empresa na CAIXA
If Empty(cCodRemag)
	c13Grava += Space(11)								//	182		192	011		Cod. Empregado CAIXA
Else
	c13Grava += StrZero(Val(SRA->RA_CTDPFGT),11)		//	182		192	011		Cod. Empregado CAIXA
EndIf
c13Grava += Left(cCodigo+Space(03),03)					//	193		195	003		Cod. Alteracao Cadastral
c13Grava += Left(cNovo+Space(70),70)					//	196		265	070		Novo conteudo do campo
c13Grava += Space(94)									//	266		359	094		Brancos
c13Grava += "*"											//	360		360	001		"*"
c13Grava += CHR(13)+CHR(10)								//	Fim de linha

GravaRJH(c13Grava,"13")

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ DBF_TIPO14³ Autor ³ Cristina Ogura       ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Registro das inclusao/alteracao endereco do trabalhador    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ DBF_TIPO14(ExpA1,ExpC1,ExpN1)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function DBF_TIPO14(aInfo,cInfo,nFgts)

Local c14Grava	:= ""
Local cNumCP	:= ""
Local cSerCP	:= ""
Local cAdmissa 	:= ""
Local cCateg	:=	Space(02)
Local cEnderec	:= ""
Local cEnde		:= ""
Local cCodigo	:= If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )

cCateg	:=	FCateg(nFgts)

//-- So deve gerar para essas categorias conforme manual lay-out folha
If (nVersao == 1 .and. ! cCateg $ "01/02/03/04/05/06/07/11/12") .or.;
	(nVersao == 2 .and. ! cCateg $ "01/02/03/04/05/06/07/11/12/19/20/21") .or.;
	(nVersao == 3 .and. ! cCateg $ "01/02/03/04/05/06/07")
	Return
EndIf
//-- Codigos que nao podem gerar registro 14 se houver somente informacoes de endereco no arquivo
//If cRecol$ "130/135/150/155/317/337/608/"
//	Return
//EndIf

If cCateg $ "01/03/04/06/07"
	If Empty(SRA->RA_NUMCP) .and. !Empty(SRA->RA_CIC) //CTPS Digital - Utilizar CPF
		cNumCP  := Left(SRA->RA_CIC,7)
		cSerCP  := StrZero(Val(Right(SRA->RA_CIC,4)),5)
	Else
		cNumCP:= Strzero(val(f610TrocaLetra(SRA->RA_NUMCP)), 7)
		cSerCP:= SRA->RA_SERCP
	EndIf
Else
	cNumCP := Space(07)
	cSerCP := Space(05)
EndIf

cNumCP := Val(cNumCP)
cSerCP := Val(f610TrocaLetra(cSerCP))

If cNumCP == 0
	cNumCP := Space(07)
	cSerCP := Space(05)
Else
	cNumCP := Left(StrZero(cNumCP,07),07)
	cSerCP := Left(StrZero(cSerCP,05),05)
EndIf

//-- Data de admissao
If (nVersao == 1 .and. cCateg $ "01/03/04/05/06/07/11/12") .or. ;
	(nVersao == 2 .and. cCateg $ "01/03/04/05/06/07/11/12/19/20/21").or. ;
	(nVersao == 3 .and. cCateg $ "01/03/04/05/06/07")
	cAdmissa := Transforma(SRA->RA_ADMISSA)
Else
	cAdmissa := Space(08)
EndIf

//																	De		Ate	Tam		Descricao
c14Grava := "14"												//	001		002	002		Sempre "14"
//--Quando Filial For Cei e Centraliza Filail gera Filial Responsavel
If nCentra = 1 .And. cInfo = '2'
	c14Grava += Left(cInfoResp+Space(01),01)					//	003	   	003	001		1-CGC/CNPJ	2-CEI
	c14Grava += space(14-len(alltrim(cInscResp)))+alltrim(cInscResp)//	004		017	014		Inscricao da empresa
Else
	c14Grava += Left(cInfo+Space(01),01)						//	003		003	001		1-CGC/CNPJ	2-CEI
	c14Grava += space(14-len(alltrim(cCodigo)))+alltrim(cCodigo)//	004		017	014		Inscricao da empresa
EndIf
c14Grava += Replicate("0",36)									//	018		053	036		Zeros
c14Grava += AllTrim(SRA->RA_PIS)								//	054		064	011		PIS/PASEP/CI
c14Grava += cAdmissa											//	065		072	008		Data da admissao
c14Grava += Left(cCateg+Space(02),02)							//	073		074	002		Categoria do trabalhador

If SRA->(FieldPos("RA_NOMECMP")) # 0
	c14Grava += FSubst(Left(If(!empty(SRA->RA_NOMECMP),SRA->RA_NOMECMP,SRA->RA_NOME)+Space(70),70))
Else
	c14Grava += FSubst(Left(SRA->RA_NOME+Space(70),70))			//	075		144	070		Nome do trabalhador
EndIf
If SRA->(FieldPos("RA_NUMENDE")) # 0
	cEnde := FSubst(Left(If(!empty(SRA->RA_NUMENDE),SRA->RA_NUMENDE,"")+Space(50),50))
EndIf
c14Grava += cNumCP                     							//	145		151	007		Numero CTPS
c14Grava += cSerCP                     							//	152		156	005		Serie CTPS
cEnderec := alltrim(SRA->RA_ENDEREC)+" "+ alltrim(cEnde)+" "+Alltrim(SRA->RA_COMPLEM)
c14Grava += FSubst(Left(cEnderec+Space(50),50))				//	157		206	050		Endereco
c14Grava += FSubst(Left(SRA->RA_BAIRRO+Space(20),20))			//	207		226	020		Bairro
c14Grava += FSubst(Left(SRA->RA_CEP+Space(08),08))				//	227		234	008		CEP
c14Grava += FSubst(Left(SRA->RA_MUNICIP+Space(20),20))			//	235		254	020		Cidade
c14Grava += Left(SRA->RA_ESTADO+Space(02),02)					//	255		256	002		UF
c14Grava += Space(103)											//	257		359	103		Brancos
c14Grava += "*"													//	360		360	001		"*"
c14Grava += CHR(13)+CHR(10)										//  Fim de linha

GravaRJH(c14Grava,"14")

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ DBF_TIPO20³ Autor ³ Cristina Ogura       ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Registro de tomador de servico                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ DBF_TIPO20(ExpA1,ExpC1,ExpC2,ExpC3)                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function DBF_TIPO20(aInfo,cInfo,cTipo,cInsc,lFlag,n20SalFam,nT13Inss,nValDPrev,cCustoAux,cAuxFil,lChangeCC)

Local c20Grava
Local cNome		:=	""
Local cEnder	:=	""
Local cBairro	:=	""
Local cCep		:=	""
Local cMunic	:=	""
Local cEstado	:=	""
Local cGpsCd  	:= cCodGps20
Local nValFat1	:= 0
Local nValRet1 	:= 0
Local cCompet	:= 	Right(Str(Year(dAuxpar01)),4)+SubStr(DtoC(dAuxpar01),3,3)
Local cCodigo	:= If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )

Private cCusto	:= cCustoAux
Private cFil	:= cAuxFil
Private nSal_Fam := 0
If lFlag .And. aInfo[15] # 1			// SI3
	//--So buscar no SI3 quando houver CEI cadastrado
	If TYPE(cAliasCC+"->"+cPrefix+"CEI") # "U" .AND. !EMPTY(&(cAliasCC+"->"+cPrefix+"CEI")) .and. ;
		( (TYPE(cAliasCC+"->"+cPrefix+"RECFAT") #"U" .and. &(cAliasCC+"->"+cPrefix+"RECFAT") <> "S") .or. ;
		(TYPE(cAliasCC+"->"+cPrefix+"RECFAT") == "U") )

		cNome 	:= 	If(TYPE(cAliasCC+"->"+cPrefix+"NOME") 	# "U"	,&(cAliasCC+"->"+cPrefix+"NOME")	,CriaVar("RA_NOME"))
		//IF lCTBInUse
			cEnder	:= 	If(TYPE("CTT->CTT_ENDER") 	# "U"	,CTT->CTT_ENDER,If(TYPE("CTT->CTT_ENDER") # "U",CTT->CTT_ENDER,CriaVar("RA_ENDEREC")))
			cMunic	:=	If(TYPE("CTT->CTT_MUNIC") 	# "U"	,CTT->CTT_MUNIC,CriaVar("RA_MUNICIP"))
		//Else
		//	cEnder	:= 	If(TYPE("SI3->I3_ENDEREC") 	# "U"	,SI3->I3_ENDEREC,If(TYPE("SI3->I3_ENDEREC") # "U",SI3->I3_ENDEREC,CriaVar("RA_ENDEREC")))
		//	cMunic	:=	If(TYPE("SI3->I3_MUNICIP") 	# "U"	,SI3->I3_MUNICIP,CriaVar("RA_MUNICIP"))
		//EndIf

		cBairro	:=	If(TYPE(cAliasCC+"->"+cPrefix+"BAIRRO") 	# "U"	,&(cAliasCC+"->"+cPrefix+"BAIRRO")	,CriaVar("RA_BAIRRO"))
		cCep	:=	If(TYPE(cAliasCC+"->"+cPrefix+"CEP") 		# "U"	,&(cAliasCC+"->"+cPrefix+"CEP")	,CriaVar("RA_CEP"))

		cEstado	:=	If(TYPE(cAliasCC+"->"+cPrefix+"ESTADO") 	# "U"	,&(cAliasCC+"->"+cPrefix+"ESTADO")	,CriaVar("RA_ESTADO"))
		cGpsCd	:=	If(TYPE(cAliasCC+"->"+cPrefix+"CODGPS") 	# "U" .and. !empty(&(cAliasCC+"->"+cPrefix+"CODGPS")) ,&(cAliasCC+"->"+cPrefix+"CODGPS"), cGpsCd )

		If nValRet == 0
			nValRet	:= If(TYPE(cAliasCC+"->"+cPrefix+"RETIDO") # "U",&(cAliasCC+"->"+cPrefix+"RETIDO"),0)
		EndIf
		If nValFat == 0
			nValFat := If(TYPE(cAliasCC+"->"+cPrefix+"VALFAT") # "U",&(cAliasCC+"->"+cPrefix+"VALFAT"),0)
		EndIf
	Else
		cNome	:= Iif(Empty(aInfo[29]), aInfo[03], aInfo[29])
		cEnder	:= aInfo[04]
		cBairro	:= aInfo[13]
		cCep	:= aInfo[07]
		cMunic	:= aInfo[05]
		cEstado	:= aInfo[06]
		cGpsCd  := cCodGps
	EndIf
Else
	cNome	:= Iif(Empty(aInfo[29]), aInfo[03], aInfo[29])
	cEnder	:= aInfo[04]
	cBairro	:= aInfo[13]
	cCep	:= aInfo[07]
	cMunic	:= aInfo[05]
	cEstado	:= aInfo[06]
EndIf

If lGpmTp20
	Execblock("GPM610TP20",.F.,.F.)
	cFPAS 		:= 	If(!empty(cFPAS_Tom),cFPAS_TOM,cFPAS)
	cSimples	:= 	If(!empty(cSimp_Tom),cSimp_Tom,cSimples)
	cNome 		:= 	If(!empty(cNome_Tom),cNome_Tom,cNome)
	cEnder		:= 	If(!empty(cEnder_Tom),cEnder_Tom,cEnder)
	cBairro		:=	If(!empty(cBairro_Tom),cBairro_Tom,cBairro)
	cCep		:=	If(!empty(cCep_Tom),cCep_Tom,cCep)
	cMunic		:=	If(!empty(cMunic_Tom),cMunic_Tom,cMunic)
	cEstado		:=	If(!empty(cEstado_Tom),cEstado_Tom,cEstado)
EndIf
//--Quando for outros codigos deve ser preenchido com Brancos
If !(cRecol$ "130/135/155/608") .or. (cRecol$ "211/317/337") .or. (cCompet < "1998/10")
	cGpsCd  := Space(4)
EndIf

If lGpmSalFam
	Execblock("GPM610SalFam",.F.,.F.,{cAuxFil})
	n20SalFam := 	If( nSal_Fam > 0, nSal_Fam, n20SalFam)
EndIf

// Salario Familia nao deve sair para competencia 13
// So deve sair para 150, 155, 317,337,608, 907, 908 e 910
If (SubStr(cDataRef,4,2) == "13") .Or. ;
	(!cRecol $ "150/155/608") .or. cFPAS  $"868";
	.or. (cCompet < "1998/10")
	n20SalFam  := 0
EndIf
n20SalFam := n20SalFam * 100

//--Valor do Inss 13o. e Valor devido a Previdencia
cIndInss := "0"
If (nTipo # 2) .and. Month(dAuxPar01) = 12 .And. cRecol$ (If(nVersao # 3,"150/155/608/907/908","150/155/608"))

	nT13Inss	:= If(nT13Inss # Nil, nT13Inss * 100,0)
	If nValDPrev < 0.00
		nValDPrev := nValDPrev * (-1)
		cIndInss  := "1"
	EndIf
	nValdPrev	:= nValDPrev * 100
Else
	nT13Inss	:= 0
	nValDPrev	:= 0
EndIf
If ! cRecol$ "211" .or. (cCompet < "2000/03")  //--Valor da fatura só pode ser para codigo 211
	nValfat := 0.00
EndIf
nValFat1 := nValFat*100

If ! cRecol$ "150/155" .or. (cCompet < "1999/02") .OR.;
	(nVersao == 3 .and. cFPAS$"604" .and.cRecol $ "150" .and. cCompet >"2001/10")
	nValRet := 0.00
EndIf
nValRet1 := nValRet*100

//														De	Ate	Tam		Descricao
c20Grava := "20"									//	001	002	002		Sempre "20"
//--Quando Filial For Cei e Centraliza Gerar Filial Responsalvel
If nCentra = 1 .And. cInfo = "2"
	c20Grava += Left(cInfoResp+Space(01),01)		//	003	003	001		1-CGC/CNPJ	2-CEI
	c20Grava += space(14-len(alltrim(cInscResp)))+alltrim(cInscResp) //	004	017	014		Inscricao da empresa
Else
	c20Grava += Left(cInfo+Space(01),01)			//	003	003	001		1-CGC/CNPJ	2-CEI
	c20Grava += space(14-len(alltrim(cCodigo)))+alltrim(cCodigo)//	004	017	014		Inscricao da empresa
EndIf
c20Grava += Left(cTipo+Space(01),01)				//	018	018	001		Tipo de inscricao tomador
c20Grava += space(14-len(alltrim(cInsc)))+alltrim(cInsc)	//	019	032	014		Inscricao do tomador
c20Grava += Replicate("0",21)						//	033	053	021		Zeros
c20Grava += FSubst(Left(cNome+Space(40),40))		//	054	093	040		Nome
c20Grava += FSubst(Left(cEnder+Space(50),50))		//	094	143	050		Endereco
c20Grava += FSubst(Left(cBairro+Space(20),20))		//	144	163	020		Bairro
c20Grava += FSubst(Left(cCEP+Space(08),08))		//	164	171	008		CEP
c20Grava += FSubst(Left(cMunic+Space(20),20))		//	172	191	020		Cidade
c20Grava += Left(cEstado+Space(02),02)				//	192	193	002		UF
c20Grava += space(4-len(alltrim(cGpsCd)))+alltrim(cGpsCd)//	194	197	004		Codigo de Pagamento Gps
c20Grava += StrZero(n20SalFam,15)					//	198	212	015		Salario Familia
c20Grava += StrZero(0,15)							//	213 227	015		Contr.Desc.Empregado Comp. 13
c20Grava += "0" 									//	228	228	001		Indicador de valor negativo ou positivo Vl.Dev.Prev.
c20Grava += StrZero(0,14)							//  229	242	014		Valor Devido a Previdencia Social Comp. 13
c20grava += StrZero(nValRet1,15)					//  243	257	015		Valor retencao lei 9711/98
c20grava += Strzero(nValFat1,15)					//	258	272	015		Valor das faturas Emitidas Tomador
c20grava += Repl("0",45)							//  273	317	045		implementacoes Futuras
c20Grava += Space(42)								//	318	359	042	 	Brancos
c20Grava += "*"										//	360	360	001		"*"
c20Grava += CHR(13)+CHR(10)							//	Fim de linha

GravaRJH(c20Grava,"20",,lChangeCC)

nSal_Fam := 0
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ DBF_TIPO21³ Autor ³ Cristina Ogura       ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Registro informacoes adicionais do tomador de servico      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ DBF_TIPO21(ExpA1,ExpC1,ExpC2,ExpC3)                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function DBF_TIPO21(aInfo,cInfo,cTipo,cInsc)
Local c21Grava
Local cCompet	:= Right(Str(Year(dAuxpar01)),4) +"/"+ SubStr(cDataRef,4,2)
Local cCodigo  	:= If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )

If SubStr(cDataRef,4,2) == "13" .or. cRecol $ "317/337" .or. cCompet< "1998/10" ;
	.or. cRecol $ "145/307/317/327/337/345/640/660"
	nValComps 	:= 0
	cPerIniCmp	:= ""
	cPerFimCmp	:= ""
EndIf

//															De		Ate	Tam		Descricao
c21Grava :=	"21"										//	001		002	002		Sempre "21"
c21Grava +=	Left(cInfo+Space(01),01)					//	003		003	001		1-CGC/CNPJ	2-CEI
c21Grava +=	space(14-len(alltrim(cCodigo)))+alltrim(cCodigo)//	004		017	014		Inscricao da empresa
c21Grava +=	Left(cTipo+Space(01),01)					//	018		018	001		Tipo de inscricao tomador
c21Grava +=space(14-len(alltrim(cInsc)))+alltrim(cInsc)//	019		032	014		Inscricao do tomador
c21Grava +=	Replicate("0",21)							//	033		053	021		Zeros
c21Grava +=	strzero(nValComps*100,15)					//	054		068	015		Compensacao - Valor
c21Grava +=	Left(cPerIniCmp+space(06),06)				//	069		074	006		Compensacao - Periodo Inicio
c21Grava +=	Left(cPerFimCmp+space(06),06)				//	075		080	006		Compensacao - Periodo Fim
c21Grava +=	Replicate("0",15)							//	081		095	015		Recol. Competencia Anterior - Segurados
c21Grava +=	Replicate("0",15)							//	096		110	015		Recol. Competencia Anterior - Empresa
c21Grava +=	Replicate("0",15)							//	111		125	015		Parcelamento do FGTS
c21Grava +=	Replicate("0",15)							//	126		140	015		Parcelamento do FGTS somatorio
c21Grava +=	Replicate("0",15)							//	141		155	015		Parcelamento do FGTS Valor Recolhido
c21Grava +=	Space(204)									//	156		359	204		Brancos
c21Grava +=	"*"											//	360		360	001		"*"
c21Grava +=	CHR(13)+CHR(10)							//						Fim de linha

GravaRJH(c21Grava,"21")

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ DBF_TIPO30³ Autor ³ Cristina Ogura       ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Registro do trabalhador                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ DBF_TIPO30(ExpA1,ExpC1,ExpN1)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function DBF_TIPO30(aInfo, cInfo, nFgts, cTipo, cInsc, nB13Inss, nBinss, nB13Fgts, nInss, nB13InRc, aAfast, aLog, aTitle, aTotRegs, nInssOutr, cCusto, nBinssPF, nBinssPJ, n13Inss, nValor247, nDesINSS, lRat, nVlrCP00, nVlrCP15, nVlrMater)

Local c30Grava
Local cCateg	:= 	Space(02)
Local cMatr		:=	""
Local cNumCP	:=	""
Local cSerCP	:=	""
Local cOcorr	:=	""
Local nBase13	:=	0
Local nSalario	:=	0
Local nSalHora	:=	0
Local nSalDia	:=	0
Local nSalMes	:=	0
Local nVinculos	:=	0
Local cAdmissa	:=	""
Local cOpcao  	:=	""
Local cNasc   	:=	""
Local lGera32 	:= 	.F.
Local cClasse 	:= 	Space(02)
Local cCbo	  	:= 	fCodCBO(SRA->RA_FILIAL,SRA->RA_CODFUNC,dAuxPar01,If(nVersao#3,.F.,.T.))
Local nBaseAfas	:= 	0
Local nB13Iaux	:= 	0
Local nBInssAux	:= 	nBInss
Local cAuxFil	:= 	SRA->RA_FILIAL
Local aArea
Local lAutonomo := .F.
Local nPosA
Local n 		:= 0
Local nI        := 0
Local nX        := 0
Local cCompet	:= 	Right(Str(Year(dAuxpar01)),4)+SubStr(DtoC(dAuxpar01),3,3)
Local nRemRet	:= 0
Local cCodigo	:= If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )
Local lAfaInf15	:= (lVerTud .And. aScan(aAfast, { |x| x[2] $ "O3/P3" }) > 0)

Local nBFGTSAux	:= nBFGTS
Local nBFG13Aux	:= nB13Fgts
Local nBAINSAux	:= nBinss
Local nBIN13Aux	:= nB13Inss
Local nDINSSAux	:= nInss
Local cFlagBase	:= '2'
Local lGerBPrev := .F.

Local lBase1 := .F. //Remun. S/ 13o.
Local lBase2 := .F. //Remun. Sobre 13o.
Local lBase3 := .F. //Base INSS FOL
Local lBase4 := .F. //Base INSS 13o.

cCateg	:= FCateg(nFgts)

If cRecol $ "130" .and. cCateg # "02"
	Return
EndIf
If nTipo == 2
	nB13Inss 	:= Max(nB13Inss-nVlrMater, 0)
	nBIN13Aux	:= nB13Inss
EndIf
//-- Matricula
If cCateg $ If(nVersao==1,"13/14/15/16/17",If(nVersao==2,"06/13/14/15/16/17/18","06/13/14/15/16/17/18/22/23/24/25"))
	cMatr:= Space(11)
Else
	cMatr:= StrZero(Val(SRA->RA_MAT),11)
EndIf

//-- Numero e Serie da Carteira
If Empty(SRA->RA_NUMCP) .and. !Empty(SRA->RA_CIC) //CTPS Digital - Utilizar CPF
	cNumCP  := Left(SRA->RA_CIC,7)
	cSerCP  := StrZero(Val(Right(SRA->RA_CIC,4)),5)
Else
	cNumCP:= Strzero(val(f610TrocaLetra(SRA->RA_NUMCP)), 7)
	cSerCP:= SRA->RA_SERCP
EndIf

If cCateg $ "01/03/04/06/07/26"
	cNumCP := StrZero(Val(cNumCP),07)
	cSerCp := StrZero(Val(f610TrocaLetra(cSerCP)),05)
Else
	cNumCP := Space(07)
	cSerCP := Space(05)
EndIf

//-- Data de admissao
If cCateg $ If(nVersao#1,"01/03/04/05/06/07/11/12/19/20/21/26","01/03/04/05/06/07/11/12")
	cAdmissa := Transforma(SRA->RA_ADMISSA)
Else
	cAdmissa := Space(08)
EndIf

//-- Data de opcao
If cCateg $ "01/03/04/05/06/07"
	cOpcao := Transforma(SRA->RA_OPCAO)
Else
	cOpcao := Space(8)
EndIf

//-- Data de Nascimento
If cCateg $ if(nVersao#1,"01/02/03/04/05/06/07/12/19/20/21/26","01/02/03/04/05/06/07/12")
	cNasc := Transforma(SRA->RA_NASC)
Else
	cNasc := Space(8)
EndIf

If nBInss < 0
	nBInss		:= 0
	nBInssAux	:= 0
EndIf

//-- Quando afastado considera como remuneracao a base FGTS e Nao Base Inss
If cSitFunc == "A"  .and. !cCateg$ '11' .and. SRA->RA_REGIME # "2" //.And. nBase == 2
	nBInss		:= nBFgts
	cFlagBase	:= '2'
	lBase4 		:= .T.
EndIf

//-- Estatutario Nao Demitido com valor de antecipacao de 13o.
If cSitFunc # "D" .And. cCateg $ '19/20/21' .And. nB13Ant > 0
	nB13FGTS	:= nB13Ant
	// Seleciona base FGTS quando nao for Autonomo, Pro-Labore sem FGTS ou Servidor Publico
ElseIf !cCateg $ '11/12/13/14/15/16/17/18/19/20/21/22/23/24/25'
	If cSitFunc == "D" 
		If lSaque 	//Demissao sem justa causa
			If lGRRF
				nBInss		:= nBInss
			Else
				nBInss		:= nBFgts
				cFlagBase	:= '1'
			EndIf
			lBase3 		:= .T.
			lBase4 		:= .T.

		Else  		//Pedido demissao e outros
			
			cFlagBase	:= '1'	
			If nBase == 1 	//Base FGTS
				nBInss		:= nBFgts
				lBase1 		:= .T.
				lBase2 		:= .T.
			Else 			//Base INSS
				lBase3 		:= .T.
				lBase4 		:= .T.
			EndIf
		EndIf

	Else //Situação Normal
		nBInss		:= nBFgts
		cFlagBase	:= '1'	
		If nBase == 1 //FGTS
			lBase1 	:= .T.
		EndIf
		lBase3 		:= .T.
	EndIf
EndIf

//-- Diretor nao Empregado sem FGTS deve ser levado o salario
If cCateg == "11" .And. nBInss == 0 .and. (cSitFunc # "D")
	FSalario(@nSalario,@nSalHora,@nSalDia,@nSalMes,"A")
	nBInss := nSalario
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Diretora nao Empregada com ou sem FGTS, de licenca maternidade,se não houver qualquer ³
//³remuneração por parte da empresa durante o período de afastamento nao deve ser levada ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cCateg $ "05#11"
	If Ascan(aAfast, {|x|x[2]=="Z1"})	== 0
		For n:=1 to Len(aAfast)
			If SubStr(aAfast[n,2],1,1) == "Q" .and. MesAno(aAfast[n,1]) < MesAno(dAuxPar01)
				nBInss		:= nBFgts
				cFlagBase	:= '1'
			EndIf
		Next n
	Else
		nBInss := nBInssPro
	EndIf
EndIf

//--Verifica Ocorrencia do Funcionario
//-- Ocorrencia
cOcorr := Space(02)

If TYPE("SRA->RA_OCORREN") # "U"
	cOcorr := SRA->RA_OCORREN

	If SR9->(dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+"RA_OCORREN"))

    	While SR9->R9_FILIAL+SR9->R9_MAT+SR9->R9_CAMPO == SRA->RA_FILIAL+SRA->RA_MAT+"RA_OCORREN"

				If SR9->R9_DATA <= dAuxpar01
					cOcorr := Alltrim(SR9->R9_DESC)
				Else
					Exit
				EndIf

    		SR9->(dbSkip())
    	EndDo
    EndIf
EndIf

If Empty(cOcorr) .and. Type(cAliasCC+"->"+cPrefix+(IF(lCTBInUse,"OCORRE","OCORREN"))) # "U"

	If cFilial == space(FWGETTAMFILIAL) .Or. (cAuxFil == space(FWGETTAMFILIAL)  .And. cFilial # space(FWGETTAMFILIAL)) .or. empty(cAuxFil)
		cAuxFil := cFilial
	EndIf

	//-- Sincroniza SI3 x CTT
	aArea := GetArea()
	//IF cAliasCC == "SI3"
	   	CTT->(dbSetOrder(1))
		CTT->(dbSeek( cAuxFil + cCusto ))
	//Else
 	//	SI3->(dbSetOrder(1))
	//	SI3->(dbSeek( cAuxFil + cCusto ))
	//EndIf

	dbSelectArea(cAliasCC)
	(cAliasCC)->(dbSetOrder(1))

	If dbSeek( cAuxFil + cCusto )
		cOcorr := &(cAliasCC+"->"+cPrefix+"OCORRE")
	EndIf
	RestArea(aArea)
EndIf
//--Quando houver multiplos vinculos passa a verificar a ocorrencia
//--e altera para ocorrencia de multiplos vinculos se estiver com ocorrencia normal.
If nInssOutr > 0
	If P_LINSSOUT //Se deve alterar a ocorrência de acordo com a existência de lançamento de INSS outras empresas
		If Empty(cOcorr)  .Or. cOcorr == "01"
			cOcorr := "05"
		ElseIf cOcorr == "02"
			cOcorr := "06"
		ElseIf cOcorr == "03"
			cOcorr := "07"
		ElseIf cOcorr == "04"
			cOcorr := "08"
		EndIf
	Else
		If !(cOcorr $ "05/06/07/08")
			nInssOutr := 0
		EndIf
	EndIf
EndIf

If (nVlrCP00 > 0 .Or. nVlrCP15 > 0 .Or. nVlrMater > 0 .Or. lAfaInf15) .And. !(cOcorr $ "05/06/07/08")
	If Empty(cOcorr) .Or. cOcorr == "01"
		cOcorr := "05"
	ElseIf cOcorr == "02"
		cOcorr := "06"
	ElseIf cOcorr == "03"
		cOcorr := "07"
	ElseIf cOcorr == "04"
		cOcorr := "08"
	EndIf
EndIf

//-- Indica outros vinculos para o funcionario ou o valor descontado no caso de dissidio/recolhimento de trabalhador avulso
If  nInssOutr > 0 .or. (cOcorr $"05#06#07#08") .or. cRecol $ "650/130"
	nVinculos:= If(nTipo == 1, ((nInss+If(cRecol $ "130*650", n13Inss, 0)) * 100),(n13Inss * 100))
	//-- Quando Nao tem outros vinculos mas esta se afastando ou retornando de
	//-- Maternidade a partir de 01/12/1999 deve ser informado neste o Inss no campo
ElseIf Len(aAfast) > 0
	For n:=1 to Len(aAfast)
		If MesAno(aAfast[n,1]) == MesAno(dAuxPar01) .And. aAfast[n,2]$ "Q1#Z1"
			If aAfast[n,1] >= CTOD("01/12/99","DDMMYY") .and. If( aAfast[n,2]$"Q1",aAfast[n,1] <= CTOD("31/08/03","DDMMYY"),.T.)
				If aAfast[n,2] == "Z1"
					For nX := n to 1 step -1
						If aAfast[nX,2]$"Q1"
							If aAfast[nX,1] > CTOD("31/08/03","DDMMYY")
								nVinculos := 0
							Else
								nVinculos := If(nTipo == 1 ,(nInss * 100),(n13Inss * 100))
							EndIf
							Exit
						EndIf
					Next
				Else
					nVinculos := If(nTipo == 1 ,(nInss * 100),(n13Inss * 100))
				EndIf
				Exit
			EndIf
		EndIf
	Next n
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Funcionario transferido ou Demitido se valor Zero gerar com 0.01³
//³para poder gerar o registro da movimentação( tipo 32).          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cSitFunc == "D" .and. !(cCateg $ "11#13#14")
	If MesAno(SRA->RA_DEMISSA) == MesAno(dAuxpar01) .And.	nBInss == 0.00
		If cCusto # SRA->RA_CC .and. lRat
			nBInss := 0.00
		Else
			nBInss := 0.01
		EndIf
	EndIf
EndIf

//-- BaseInssAux dos Funcionarios Afastados O1,O2,R,Z2,Z3,Z4
//--Verifica no Array aAfast se Funcionario esteve esses tipos no mes
If Len(aAfast) > 0
	nPosA := Ascan(aAfast,{ |x|x[2] $ "O1/O2/Z2/Z3/Z4" .Or. Alltrim(x[2]) =="R" })
	If nPosA > 0 .And. cCateg$ If(nVersao#1,"01/04/06/07/12/19/20/21","01/04/06/07")
		nBaseAfas := nBInssAux
	Else
		nBaseAfaS := 0.00
	EndIf
	If nPosA > 0 .And. ( nVersao == 3 .and. cRecol $ "145/307/317/327/337/345/640/660") .or. (cCompet < "1998/10")
		nBaseAfaS := 0.00
	EndIf
EndIf

//--Quando Competencia 12 a Base Inss 13o deve sair na posicao 247 a 261
//--quando houver diferencao de 13o no mes 12, caso contrario saira zerado
//--e na  232 a 246 deve sair a Diferenca de 13o. quando houver.
//-- na variavel nB13Inss esta a Base Inss 13o Total e na nB13InRc esta
//--a Diferenca paga no mes 12
If cRecol == "904" .and. nVersao==2
	nB13IAux	:= 0.00
	nB13Inss	:= 0.00
ElseIf nTipo == 1 .And. Month(dAuxPar01) == 12
	//--Se TIVER Diferenca DE 13o. Mes 12
	If nB13InRc > 0
		nB13IAux := nB13Inss - nB13Inrc
		nB13Inss := nB13InRc
		If cSitFunc # "D" .and. nB13IAux == 0
			nB13IAux := 0.01
		EndIf
	//--Se Nao For Demitido na Comp.12 nao aceita Base Inss 13o.
	ElseIf cSitFunc # "D" .and. ! cCateg $ "02"
		nB13Inss	:= 0.00
	EndIf
Else
	nB13IAux	:= 0
EndIf

//RESCISAO SOMENTE NO MES DE COMPETENCIA
If cSitFunc == "D" .And. (nB13Inss == 0 )
	If (!AllTrim(SRA->RA_AFASFGT)$"H/N1/N2") .and. (AllTrim(SRA->RA_AFASFGT)$"I1*J*K*I2*I3*I4*L*S2*S3" .And. MesAno(SRA->RA_DEMISSA) == MesAno(dAuxPar01))
		nB13Inss := 0.01
	EndIf

	If (year(SRA->RA_ADMISSA) == YEAR(SRA->RA_DEMISSA) .and. ( SRA->RA_DEMISSA-SRA->RA_ADMISSA )+1< 15 )  .or. ;
		(SRA->RA_DEMISSA - ctod("01/01/"+SubStr(mesano(dAuxPar01),1,4))+1< 15)
		nB13Inss := 0.00
	EndIf

	//Quando rescisao complementar, nao enviar valor de base 13o INSS
ElseIf cSitFunc == "D" .And. (nB13Inss > 0 ) .And. !Empty(SRA->RA_DEMISSA) .And. MesAno(SRA->RA_DEMISSA) < MesAno(dAuxPar01) .and. !(cRecol$"650")
	nB13Inss := 0.00
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Rescisão em dezembro, após recolhimeno da GPS da competência 13                             ³
	//³não havendo 13o salario a informar no campo Base de calculo 13o salario Prev. Social,       ³
	//³por ja ter sido considerada a base de calculo na competência 13, deve-se informar R$ 0,01 no³
	//³referido campo da competência 12.( Somente coloca 0,01 se não houver complemento de 13o     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ElseIf cSitFunc == "D" .and. (nB13Inss > 0 ) .And. MesAno(SRA->RA_DEMISSA) == MesAno(dAuxPar01) .and. ;
		nValor247 > 0 .and. nTipo == 1 .and. nB13InRc == 0
		nB13Inss := 0.01
EndIf
//Nao enviar base INSS 13o quando a rescisao for por justa causa
If cSitFunc == "D" .And. SRA->RA_AFASFGT$ 'H'
	nB13Inss := 0.00
EndIf

//Na rescisao complementar, nao enviar Base de INSS se ja houve recolhimento do teto de desconto de INSS na rescisao original
If cRecol != "650" .And. cSitFunc == "D" .And. nBinss > 0 .And. nDesINSS == 0 .And. MesAno(SRA->RA_DEMISSA) < MesAno(dAuxPar01)
	nBinss := 0.01
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Quando funcionario trabalhar menos que 15 dias no ano, nao³
//³enviar Base de calculo 13o. Salario Previdencia Social.   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !empty(SRA->RA_DEMISSA) .AND. !lSomaVis
	If ( YEAR(SRA->RA_ADMISSA) == YEAR(dAuxPar01) .and.((SRA->RA_DEMISSA-SRA->RA_ADMISSA)+1)<15 ) .or. ;
		(YEAR(SRA->RA_ADMISSA) < YEAR(dAuxPar01) .and. year(SRA->RA_DEMISSA)==year(dAuxPar01)) .and.;
		((SRA->RA_DEMISSA-ctod("01/01/"+strzero(year(SRA->RA_DEMISSA)))+1)<15)
		nB13Inss := 0.00
	EndIf
EndIf

If nVersao == 3 .and. ! cCateg $"01/02/04/06/07/12/19/20/21/26" .or. (cCompet < "1998/10" ) ;
	.or. cRecol $ "145/211/307/317/327/337/345/640/660"
	nB13Inss := 0
EndIf

If nVersao == 3 .and. cCateg $"05/11/13/14/15/16/17/18/22/23/24/25"
	nB13FGTS := 0
EndIf
If cRecol $ "130"
	nB13Inss := If(empty(nB13Inss),nB13FGTS,nB13Inss)
EndIf
nB13IAux := If(cCompet < "1998/10" ,0,nB13IAux)
If lGpe610Rem .and.  cSitFunc == "D"
	nRemRet := ExecBlock("GPE610REM",.F.,.F.)
   	IF ValType( nRemRet ) == "N"
		nBinss := If(nRemRet > 0, nRemRet, 0)
    EndIf
EndIf

//Condição para preencher campo "Base de Calculo da Previdencia Social"
lGerBPrev := .F.
If Len(aAfast) > 0 .And. Ascan(aAfast,{ |x|x[2] $ "O1/O2/O3/P3/Z2/Z3/Z4/Q1/Q3/Q4/Q5/Q6/Q7" .Or. Alltrim(x[2]) =="R" }) > 0
	lGerBPrev := .T.
EndIf	

//-- Multiplica por 100 para trasformar em string
If  !( nVersao == 3 .and. cRecol $ "145/307/317/327/337/345/640/660") .And. lGerBPrev
	If nVlrCP15 > 0 .Or. nVlrMater > 0 .Or. lAfaInf15 .Or. nVlrCP00 > 0
		nBaseAfas 	:= Max(nBInssAux-nVlrCP15-nVlrMater, 0)
	EndIf
EndIf

// Para licença maternidade, imprime valor que será gerado no campo Base de Cálculo da Previdência Social
If nVlrMater > 0
	nBAINSAux := nBaseAfas
EndIf

nBinss		:= nBInss * 100
nB13Inss	:= nB13Inss * 100
nB13FGTS	:= nB13FGTS * 100
nBaseAfas	:= nBaseAfas * 100
nB13IAux	:= nB13IAux	 * 100

If nTipo == 1    // Tipo 1-Folha/Ferias	   2-13o.Salario
	nBase13	:= nB13Inss
Else
	nBase13 := nB13Fgts
	nBInss  := 0
	nB13Fgts:= 0
//	If !cCateg$ "01*04*12"
//		cCateg := "01"
//	EndIf
EndIf

If (SubStr(cDataRef,4,2) # "13" .And. cSitFunc # "D") .Or. ;
	(cSitFunc == "D" .And. MesAno(SRA->RA_DEMISSA) > MesAno(dAuxPar01))
	nBase13 := 0
EndIf

// Classe de contribuicao para autonomo
If cCateg $ "14/16" .and. (cCompet >= "1998/10")
	cClasse := SRA->RA_CLASSEC
EndIf

//Verifica se e autonomo
lAutonomo   := If( (nBinssPF >0 .or. nBinssPJ >0),.T., .F.)
nBInss		:= If( lAutonomo, 0, nBInss)
nVinculos	:= If( lAutonomo, 0, nVinculos)
nBAINSAux	:= If( lAutonomo, 0, nBAINSAux)

For nI := 1 to 2
	If lAutonomo
		//Utiliza base de Inss especifica quando for Autonomo
		// (nI = 1) presta servico para pessoa Fisica/ (nI = 2) Presta servico para Pessoa Juridica
		If nBinssPF > 0 .and. nI == 1
			nBInss += nBinssPF *100
			nBAINSAux += nBinssPF
			cCateg := "24"
		ElseIf nBinssPJ > 0 .and. nI == 2
			nBInss += nBinssPJ *100
			nBAINSAux += nBinssPJ
			cCateg := If (SRA->RA_CATEG == "24", SRA->RA_CATEG, "17")
		EndIf
		// Quando autonomo lancar Vl Desc. Segurado quando possuir multiplos vinculos
		If (nInssOutr > 0) .or. (cOcorr $"05#06#07#08")
			If nI == 1
				nVinculos += nInssPF * 100 // Pessoa Física
			Else
				nVinculos += nInssPJ * 100 // Pessoa Jurídica.
			EndIf
		EndIf
	Else
		//Se nao for autonomo nao precisa passar 2 vezes no For/Next
		If nI == 1
			Loop
		EndIf
	EndIf
Next nI

	nVinculos := If((cCompet < "1998/10" ).or. (cRecol $ "145/307/317/327/337/345/640/660"),0,nVinculos)

	If (nBInss+nB13Fgts # 0.and. !lGera30Zerado) .Or. ;
		(nBInss+nB13Fgts <= 1 .and. lGera30Zerado) .or. ;
		(nTipo = 2 .And. nB13Inss > 0)   // nTipo 1-Folha/Ferias	 2-13o.Salario
		//															De  Ate	Tam		Descricao
		c30Grava := "30"	 									//	001	002	002		Sempre "30"
		//--Quando Filial For Cei e Centraliza Filial gera Filial Responsavel
		If nCentra = 1 .And. cInfo = '2'
			c30Grava += Left(cInfoResp+Space(01),01)			//	003	003	001		1-CGC/CNPJ	2-CEI
			c30Grava += space(14-len(alltrim(cInscResp)))+alltrim(cInscResp)//	004	017	014		Inscricao da empresa
		Else
			c30Grava += Left(cInfo+Space(01),01)				//	003	003	001		1-CGC/CNPJ	2-CEI
			c30Grava += space(14-len(alltrim(cCodigo)))+alltrim(cCodigo)//	004	017	014		Inscricao da empresa
		EndIf
		IF cRecol # '115'
			c30Grava += Left(cTipo+Space(01),01)				//	018	018	001		Tipo de inscricao tomador
			c30Grava += space(14-len(alltrim(cInsc)))+alltrim(cInsc)	//	019	032	014		Inscricao do tomador
		Else
			c30Grava += Space(1)								//	018	018	001		Tipo de inscricao tomador
			c30Grava += Space(14)								//	019	032	014		Inscricao do tomador
		EndIf
		c30Grava += AllTrim(SRA->RA_PIS)						//	033	043	011		PIS/PASEP/CI
		c30Grava +=	cAdmissa                    				//	044	051	008		Data Admissao
		c30Grava +=	Left(cCateg+Space(02),02)					//	052	053	002		Categoria trabalhador
		If SRA->(FieldPos("RA_NOMECMP")) # 0
			c30Grava += FSubst(Left(If(!empty(SRA->RA_NOMECMP),SRA->RA_NOMECMP,SRA->RA_NOME)+Space(70),70))
		Else
			c30Grava += FSubst(Left(SRA->RA_NOME+Space(70),70))	//	054	123	070		Nome do trabalhador
		EndIf
		c30Grava += FSubst(Left(cMatr,11))						//	124	134	011		Matricula do empregado
		c30Grava +=	Left(cNumCP,07)								//	135	141	007		Numero do CTPS
		c30Grava +=	Left(cSerCP,05)								//	142	146	005		Serie CTPS
		c30Grava += cOpcao										//	147	154	008		Data da opcao de FGTS
		c30Grava +=	cNasc										//	155	162	008		Data Nascimento
		If nVersao # 3
			c30Grava += Left(SRA->RA_CBO+Space(5),05)			//	163	167	005		CBO do Cargo
		Else
			c30Grava += "0"+SubStr(cCbo,1,4)					//	163	167	005		CBO do Cargo
		EndIf
		c30Grava += StrZero(nBInss,15)							//	168	182	015		Remuneracao sem 13o.
		c30Grava += StrZero(nB13Fgts,15)						//	183	197	015		Remuneracao sobre 13o.
		c30Grava +=	Left(cClasse+Space(02),02)  				//	198	199	002		Classe de contribuicao
		c30Grava += Left(cOcorr+Space(02),02)					//	200	201	002		Ocorrencia
		c30Grava += StrZero(nVinculos,15)						//	202	216	015		Valor Retido do Segurado mais de um vinculo
		c30Grava += StrZero(nBaseAfas,15)						//	217	231	015		Remuneracao Base Calculo Contr.Prev.
		c30Grava += StrZero(nB13Inss,15)						//	232	246	015		Base calculo 13o. Salario Previdencia Social (Comp.13 ou rescisao)
		c30Grava += StrZero(nB13IAux,15)						//	247	261	015		Sal.Contr. Prev. Compl. 13o. (Total)

		/*If ( nTipo == 1 ) .And. ( Month(dAuxPar01) == 12 )
			nB13Prev := If(nB13Inss>0 .and. nB13IAux=0,1,nB13IAux)
		Else
			nB13Prev := nB13IAux
		EndIf
		c30Grava += StrZero(nB13Prev,15)						//	247	261	015		Sal.Contr. Prev. Compl. 13o. (Total) */
		c30Grava += Space(98)									//	262	359	098		Brancos
		c30Grava += "*"											//	360	360	001		"*"
		c30Grava += CHR(13)+CHR(10)								//	Fim de linha

		GravaRJH(c30Grava, "30", lAutonomo, Nil, nBFGTSAux, nBFG13Aux, nBAINSAux, nBIN13Aux, nDINSSAux, cFlagBase, aClone(aAfast))

		lGera32 := .T.

		If cSitFunc # "D"  .OR. ;
			(SRA->RA_AFASFGT $ "H#J#K#M#N1#N2#S2#S3#U1" .and. MesAno(dAuxpar01) < MesAno(SRA->RA_DEMISSA) )
			If aTotRegs[13]== 0
				cLog := STR0233 + CHR(13) + CHR(10)   //"Funcionario(s) Enviado(s):  Matric.  Nome        PIS         Remun. sem 13o     Remun. sobre 13o     Base INSS Fol     Base INSS 13o"
				Aadd(aTitle,cLog)
				Aadd(aLog,{})
				aTotRegs[13] := len(aLog)
			EndIf
			Aadd(aLog[aTotRegs[13]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+Space(10-nTamFil)+SubStr(SRA->RA_NOME,1,28)+SRA->RA_PIS+"  "+Transform((nBFGTSAux),"@E 99,999,999.99")+If(lBase1, "*"+space(05), space(06));
			+Transform(nBFG13Aux,"@E 99,999,999.99")+If(lBase2, "*"+space(05), space(06))+Transform(nBAINSAux,"@E 99,999,999.99")+If(lBase3, "*"+space(05), space(06))+Transform(nBIN13Aux,"@E 99,999,999.99")+If(lBase4, "*"+space(05), space(06)))

			aTotal[01] += nBFGTSAux
			aTotal[02] += nBFG13Aux
			aTotal[03] += nBAINSAux
			aTotal[04] += nBIN13Aux
			aTotal[05] += nDINSSAux
		Else
			If aTotRegs[14]== 0
				cLog := STR0234 + CHR(13) + CHR(10)  //"Enviado(s) Demitido(s):     Matric.  Nome        PIS         Remun. sem 13o     Remun. sobre 13o     Base INSS Fol     Base INSS 13o"
				Aadd(aTitle,cLog)
				Aadd(aLog,{})
				aTotRegs[14] := len(aLog)
			EndIf
			Aadd(aLog[aTotRegs[14]],SRA->RA_FILIAL+"-"+SRA->RA_MAT+Space(10-nTamFil)+SubStr(SRA->RA_NOME,1,28)+SRA->RA_PIS+"  "+Transform(nBFGTSAux,"@E 99,999,999.99")+If(lBase1, "*"+space(05), space(06));
			+Transform(nBFG13Aux,"@E 99,999,999.99")+If(lBase2, "*"+space(05), space(06))+Transform(nBAINSAux,"@E 99,999,999.99")+If(lBase3, "*"+space(05), space(06))+Transform(nBIN13Aux,"@E 99,999,999.99")+If(lBase4, "*"+space(05), space(06)))
			
			aTotal[06] += nBFGTSAux
			aTotal[07] += nBFG13Aux
			aTotal[08] += nBAINSAux
			aTotal[09] += nBIN13Aux
			aTotal[10] += nDINSSAux
		EndIf

	    If Ascan( aGerou30,{|x|x[1]+x[2]==SRA->RA_FILIAL+If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )}) == 0
		    Aadd(aGerou30,{SRA->RA_FILIAL,If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )})
		EndIf
	EndIf


Return lGera32

/*/{Protheus.doc} DBF_TIPO32
Registro movimentacao trabalhador
@author Cristina Ogura
@since 17/09/1998
@param aInfo, array, descricao
@param cInfo, characters, descricao
@param nFgts, numeric, descricao
@param cTipo, characters, descricao
@param cInsc, characters, descricao
@param nFgtsRes, numeric, descricao
@param aAfast, array, descricao
@param aLog, array, descricao
@param aTitle, array, descricao
@param aTotRegs, array, descricao
@param lGera32, logical, descricao
/*/
Static Function DBF_TIPO32(aInfo, cInfo, nFgts, cTipo, cInsc, nFgtsRes, aAfast, aLog, aTitle, aTotRegs, lGera32,lSaque,lGRRF)

	Local c32Grava
	Local cIndica		:= ""
	Local cCompet		:= Right(Str(Year(dAuxpar01)),4) + SubStr(cDataRef,4,2)
	Local cDiasAfas		:= ""
	Local nVezes		:= Len(aAfast)
	Local nDescInss		:= 0
	Local nDiasMes		:= nDiasAfas - nDiasMat - nDiasAc - nDiasAd
	Local cAdmissa		:= ""
	Local cCateg		:= Space(02)
	Local cDescMov		:= ""
	Local nPosMov		:= 0
	Local nMesAux
	Local nAnoAux
	Local n
	Local nPosV3		:= 0
	Local cCodigo		:= If( Len(aInfo) >= 27 .And. ! Empty( aInfo[27] ), aInfo[27], aInfo[8] )

	DEFAULT lSaque 	:= .F.
	DEFAULT lGRRF  	:= .F.

	//Encontra a categoria
	cCateg := FCateg(nFgts)
	// Nao pode ser informado para os codigos de recolhimento abaixo.
	If cRecol $ "145/307/317/327/337/345"
		Return
	EndIf

	//--So deve gerar para essas categorias conforme manual lay-out folha
	If ! cCateg $ If(nVersao != 1, "01/02/03/04/05/06/07/11/12/19/20/21/26", "01/02/03/04/05/06/07/11/12")
		Return
	EndIf

	nPosV3 := Ascan( aAfast, {|x| x[2] == "V3" })

	For n := 1 To nVezes

		If nPosV3 > 0 .And. ! Alltrim(aAfast[n, 2]) $ "V3"
			Loop
		EndIf

		cIndica	:= ""

		//Quando for rescisao
		//-- Gerar registro 32 apenas quando data de movimentacao definitiva estiver no mes da competencia,
		//-- no mes anterior ou no mes posterior.
		If month(aAfast[n, 1]) + 1 == 13
			nMesAux := 1
			nAnoAux := Year(aAfast[n, 1]) + 1
		Else
			nMesAux := Month(aAfast[n, 1]) + 1
			nAnoAux := Year(aAfast[n, 1])
		EndIf

		If ! Alltrim(aAfast[n, 2]) $ "O1#O2#03#P1#P2#P3#Q1#Q2#Q3#Q4#Q5#Q6#R#R1#U3#V3#W#X#Y#U1#X1"
			If MesAno(dAuxpar01) > MesAno(ctod("01/" + StrZero(nMesAux, 2) + "/" + StrZero(nAnoAux, 4)))
				Loop
			EndIf
		EndIf

		//Para os tipos de movimentacoes abaixo, o movimeno deve estar compreendida no mes
		//imediatamente anterior ou no mês da competencia
		If Alltrim(aAfast[n, 2]) $ "H#J#K#M#N1#N2#S2#S3#U1"
			If MesAno(dAuxpar01) < MesAno(Ctod("01/" + StrZero(nMesAux - 1, 2) + "/" + StrZero(nAnoAux, 4)))
				Loop
			EndIf
		EndIf

		// Indica para Afast O ou P, que func se afastou por menos de 15 dias.
		If ! aAfast[n, 5]
			nDescInss := 0
		Else
			//-- Calcula os dias de afastamento qdo tenho 2 afast no mesmo mes
			If aAfast[n, 4] != 0
				nDescInss := aAfast[n, 4]
				nDiasMes -= aAfast[n, 4]
			Else
				nDescInss := nDiasMes
			EndIf
		EndIf

		//-- Indicativo Recolhimento FGTS
		If SubStr(aAfast[n, 2], 1, 1) $ "I/L"
			cIndica := "N"
			If nFgtsRes ==0 .And. ! (aAfast[n, 6])
				cIndica := "N"
			ElseIf (nFgtsRes # 0 .And. cCateg $ "01/03/04/05/06/07") .Or. ( nFgtsRes == 0 .And. (aAfast[n, 6]))
				cIndica := "S"
			EndIf
		EndIf

		If SubStr(cDataRef, 4, 2) == "13"
			cIndica := Space(01)
			nDescInss := 0
		EndIf

		If nDescInss >= 30
			nDescInss := f_ultDia(dAuxPar01)
		EndIf

		// Retorno de Afastamento dias a desconsiderar igual a zero
		If aAfast[n, 3] $ "R*D" .Or. Subs(aAfast[n, 2], 1, 1) $ "I*Q*Z" .Or. SubStr(cDataRef, 4, 2) == "13"
			nDescInss := 0
		EndIf

		If nDescInss == 0
			If SubStr(aAfast[n, 2], 1, 1) $ "P*O"
				cDiasAfas:= "00"
			Else
				cDiasAfas:= Space(02)
			EndIf
		Else
			cDiasAfas:= StrZero(nDescInss, 2)
		EndIf

		//-- Data de admissao
		If cCateg $ If(nVersao != 1, "01/03/04/05/06/07/11/12/19/20/21/26", "01/03/04/05/06/07/11/12")
			cAdmissa := Transforma(SRA->RA_ADMISSA)
		Else
			cAdmissa := Space(08)
		EndIf

		// Para qualquer tipo de afastamento deve ser considerado a data de
		// afastamento o dia imediatamente anterior ao efetivo afastamento.
		// Manual pag. 43 versao 3.0
		If (SubStr(aAfast[n, 2], 1, 1) != "Z" .And.(cSitFunc != "D" .or. (cSitFunc == "D" .And. SubStr(aAfast[n, 3], 1, 1) == "A") ) .And.;
			SubStr(aAfast[n, 2], 1, 2) != "N3" .And. (! Empty(aAfast[n, 2]) .And. aAfast[n, 2] != "R1" ) ) .AND. aAfast[n, 2] <> "X1"
			aAfast[n, 1] := aAfast[n, 1] - 1
			aAfast[n, 1] := If(cIndica == "C", "", aAfast[n, 1])
		EndIf
		cIndica := If(cCompet < "1998/02", Space(01), cIndica)

		//											   				De		Ate	Tam	Descricao
		c32Grava := "32"											//	001		002		002		Sempre "32"
		//--Quando Filial For Cei e Centraliza Filail gera Filial Responsavel
		If nCentra = 1 .And. cInfo = "2"
			c32Grava += Left(cInfoResp + Space(01), 01)				//	003		003		001		1-CGC/CNPJ	2-CEI
			c32Grava += PadL(AllTrim(cInscResp), 14)				//	004		017		014		Inscricao da empresa
		Else
			c32Grava += Left(cInfo + Space(01), 01)					//	003		003		001		1-CGC/CNPJ	2-CEI
			c32Grava += PadL(AllTrim(cCodigo), 14)					//	004		017		014		Inscricao da empresa
		EndIf
		IF cRecol != '115'
			c32Grava += Left(cTipo + Space(01), 01)					//	018		018		001		Tipo de inscricao tomador
			c32Grava += PadL(AllTrim(cInsc), 14)					//	019		032		014		Inscricao do tomador
		Else
			c32Grava += Space(1)									//	018		018		001		Tipo de inscricao tomador
			c32Grava += Space(14)									//	019		032		014		Inscricao do tomador
		EndIf
		c32Grava += AllTrim(SRA->RA_PIS)							//	033		043		011		PIS/PASEP/CI
		c32Grava += cAdmissa										//	044		051		008		Data Admissao
		c32Grava += cCateg											//	052		053		002		Categoria do Trabalhador
		If SRA->(FieldPos("RA_NOMECMP")) != 0
			c32Grava += FSubst(Left(If(! Empty(SRA->RA_NOMECMP), SRA->RA_NOMECMP, SRA->RA_NOME) + Space(70), 70))
		Else
			c32Grava += FSubst(Left(SRA->RA_NOME + Space(70), 70))	//	054		123		070		Nome do trabalhador
		EndIf
		c32Grava += Left(aAfast[n, 2] + Space(02), 02)				//	124		125		002		Codigo Movimentacao
		c32Grava += Transforma(aAfast[n, 1])						//  126		133		008		Data Movimentacao
		c32Grava += Left(cIndica + Space(01), 01)					//	134		134		001		Indicativo Recolhimento FGTS
		c32Grava += Space(225)										//	135		359		225		Brancos
		c32Grava += "*"												//	360		360		001		"*"
		c32Grava += CHR(13) + CHR(10)								//  Fim de linha

		If lGera32
			If aTotRegs[15] == 0
				cLog := STR0026 + CHR(13) + CHR(10) //"Funcionario(s) Enviado(s) Afastado(s):  Matric.  Nome                           Dt.Movimentacao   Cod.   Obs."
				Aadd(aTitle, cLog)
				Aadd(aLog, {})
				aTotRegs[15] := len(aLog)
			EndIf

			nPosMov := aScan(aMovimento, {|x| x[1] == AllTrim(aAfast[n, 2])})
			cDescMov := If(nPosMov != 0, aMovimento[nPosMov,2], "")

			Aadd(aLog[aTotRegs[15]], Space(30) + SRA->RA_FILIAL + "-" + SRA->RA_MAT + " - " + SubStr(SRA->RA_NOME, 1, 30) + Space(2) + DtoC(aAfast[n, 1]) + Space(04) + ;
			aAfast[n, 2] + Space(02) + "- " + cDescMov)
		EndIf

		// Verifica se o registro já existe no arquivo temporário, para não gerar duplicidade.
		If Ascan(aTipo32, SubStr(c32Grava, 1, 53) + SubStr(c32Grava, 124, 2) + SubStr(c32Grava, 126, 8)) == 0
			Aadd( aTipo32, SubStr(c32Grava, 1, 53) + SubStr(c32Grava, 124, 2) + SubStr(c32Grava, 126, 8))
			GravaRJH(c32Grava, "32")
		EndIf

	Next n

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ DBF_TIPO90³ Autor ³ Cristina Ogura       ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Registro Trailler						                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ DBF_TIPO90(ExpA1,ExpC1,ExpN1)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function BIN_TIPO90
Local c90Grava

//															De		Ate	Tam	Descricao
c90Grava := "90"										//	1		2		2		Sempre "90"
c90Grava += Replicate("9",51)							//	3		53		51		Preenchido "9"
c90Grava += Space(306)		  							//	54		359		306		Brancos
c90Grava += "*"											//	360		360		1		"*"
c90Grava += CHR(13) + CHR(10)							// 	Fim de linha

FWrite(nHandle,c90Grava)

Return Nil

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FCateg   ³ Autor ³ Cristina Ogura        ³ Data ³ 13/10/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao que define a categoria do empregados                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FCateg(ExpN1)                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Valor do Fgts                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610  e  GPER540                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function FCateg(nFgts)
Local cCateg := Space(02)

If TYPE("SRA->RA_CATEG") # "U" .AND. !Empty(SRA->RA_CATEG)
	cCateg := SRA->RA_CATEG
Else
	// Contrato de trabalho
	If SRA->RA_TPCONTR == "2" .Or. SRA->RA_TPCONTR == "3"
		cCateg:= "04"
	EndIf

	// Diretor nao empregado
	If SRA->RA_VIEMRAI == "80"
		If nFgts == 0			// sem FGTS
			cCateg:= "11"
		Else
			cCateg:= "05"		// com FGTS
		EndIf
	EndIf

	//-- Quando For Autonomo
	If SRA->RA_CATFUNC == "A"
		cCateg := "13"
	EndIf

	If Empty(cCateg)
		cCateg:="01"
	EndIf
EndIf

Return cCateg


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFunction  ³GPM610Ok  ºAutor  ³Microsiga           º Data ³  01/30/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GPM610Ok()
Return (MsgYesNo(OemToAnsi("Confirma configura‡„o dos parƒmetros?"),OemToAnsi("Aten‡„o")))

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ FGETSEFIP³ Autor ³ J. Ricardo 			³ Data ³ 08/02/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Permite que o usuario decida onde sera criado o arquivo    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function FGETSEFIP()
Local mvRet := ""
Local l1Vez := .T.

mvRet := Alltrim(ReadVar())

oWnd := GetWndDefault()

While .T.

	If l1Vez
		cFile := mv_par04
		l1Vez := .F.
	Else
		cFile := ""
	EndIf

	If Empty(cFile)
		cFile := cGetFile("FGTS | SEFIP.RE", OemToAnsi("Selecione Diretorio"))
	EndIf

	If Empty(cFile)
		Return .F.
	EndIf

	If "."$cFile
		cFile := SubStr(cFile,1,rat(".", cfile)-1)
	EndIf

	cFile += ".RE"
	If ! "SEFIP.RE" $ UPPER(cFile)
		Help(" ",1,"GPMSFGTSRE")
		Loop
	EndIf
	&mvRet := cFile
	Exit
EndDo

If oWnd != Nil
	GetdRefresh()
EndIf

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Ver21         ³ Autor ³ Cristina Ogura   ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica o tipo 21                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Ver21                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Ver21(cTINSC,cINSC,cTTOMA,cTOMAD)
Local nSavReg	:= 0

dbSelectArea("RJHX")
nSavReg	:= RecNo()

If dbSeek(cEmprAgrup+cTINSC+cINSC+"21"+cTTOMA+cTOMAD)
	FWrite(nHandle,RJHX->RJH_TEXTO+RJHX->RJH_TEXTO2)
EndIf

dbSelectArea("RJHX")
dbGoto(nSavReg)

Return .T.


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Ver32         ³ Autor ³ Cristina Ogura   ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica o tipo 32                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Ver32                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Ver32(cTINSC,cINSC,cTTOMA,cTOMAD,cPIS,cEmp,cFilFun,cMatFun)
Local nSavReg := 0

dbSelectArea("RJHX")
nSavReg	:= RecNo()

If dbSeek(cEmprAgrup+cTINSC+cINSC+"32"+cTTOMA+cTOMAD+cPIS)
	While !Eof() .And. cEmprAgrup+cTINSC+cINSC+"32"+cTTOMA+cTOMAD+cPIS ==;
		RJH_EMPAGR+RJH_TINSC+RJH_INSC+RJH_TIPO+RJH_TTOMA+RJH_TOMAD+RJH_PIS

		If cEmp == RJHX->RJH_EMP .AND. cFilFun == RJHX->RJH_FILFUN .AND. cMatFun == RJHX->RJH_MAT
			FWrite(nHandle,RJHX->RJH_TEXTO+RJHX->RJH_TEXTO2)
		EndIf
		dbSkip()
	EndDo
EndIf

dbSelectArea("RJHX")
dbGoto(nSavReg)

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ F13Sal        ³ Autor ³ Cristina Ogura   ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica a deducao e o salario maternidade                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ F13Sal                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function F13Sal(nDeduc,nSalMat,aCodFol)
Local aGetArea	:= GetArea()
Local nDiasSM	:=	0
Local aStru		:= {}
Local cQuery	:= ""
Local cTmp		:= GetNextAlias()
Local nX 		:= 1

If Empty(cRotFol1)
	cRotFol1 := "'" + fGetCalcRot("1") + "'"
Endif

If Empty(cRot213)
	cRot213 := "'" + fGetCalcRot("6") + "'"
Endif

DEFAULT nDeduc 	:= 0

// Calcular o valor de deducao 13o licenca maternidade
If GetMvRH("MV_SALMGRP") = "N"   // Deducao de Sal.Matern. no 13o.Salario
	// Demitidos ou 13o. salario
	If cSitFunc == "D" .Or. nTipo == 2  // Tipo 1-Folha/Ferias	   2-13o.Salario

		nDiasSM	:=fDiasSm13(Left(Dtos(dAuxpar01),4))
		If nDiasSM > 0
			If lGPM610V //Ponto de entrada
				nSalMatV := Execblock("GPM610V",.F.,.F.)
				If nSalMatV > 0
					nDeduc += nSalMatV
				EndIf
			Else
				aStru := SRC->(dbStruct())

				cQuery := "SELECT RC_VALOR  "
				cQuery += " FROM "+ RetSqlName("SRC")+ " RC "
				cQuery += " WHERE RC_FILIAL = '"+ SRA->RA_FILIAL  + "'"
				cQuery += " AND RC_MAT = '"+ SRA->RA_MAT  + "'"
				cQuery += " AND RC_PERIODO	= '" + cPeriodo + "'"
				If nTipo == 1 //Folha + Autonomo
					cQuery += " AND RC_ROTEIR IN (" + cRotFol1 + ",'" + cRot7In + fGetCalcRot("9") + "'" + ")"
				Else //13º
					cQuery += " AND RC_ROTEIR IN (" + cRotFol1 + ",'" + cRot7In + fGetCalcRot("9") + "',"  + cRot213 + ")"
				EndIf
				cQuery += " AND RC.D_E_L_E_T_ = ' ' "
				cQuery += " AND RC.RC_PD = '"+aCodFol[670,1]+"'"

				cQuery += " UNION ALL "

				cQuery += " SELECT RD_VALOR"
				cQuery += " FROM "+RetSqlName("SRD")+" RD "
				cQuery += " WHERE RD_FILIAL = '"+ SRA->RA_FILIAL +"'"
				cQuery += " AND RD_MAT = '" +SRA->RA_MAT+"'"
				cQuery += " AND RD_PERIODO	= '" + cPeriodo + "'"
				cQuery += " AND RD.D_E_L_E_T_ = ' ' "
				cQuery += " AND RD.RD_PD = '"+aCodFol[670,1]+"'"
				If nTipo == 1 //Folha + Autonomo
					cQuery += " AND RD_ROTEIR IN (" + cRotFol1 + ",'" + cRot7In + fGetCalcRot("9") + "'" + ")"
				Else //13º
					cQuery += " AND RD_ROTEIR IN (" + cRotFol1 + ",'" + cRot7In + fGetCalcRot("9") + "',"  + cRot213 + ")"
				EndIf
				cQuery 		:= ChangeQuery(cQuery)

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cTmp,.T.,.T.)

				For nX := 1 To Len(aStru)
					If ( aStru[nX][2] <> "C" )
						TcSetField(cTmp,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
					EndIf
				Next nX
				nTemp := 0
				While !(cTmp)->(Eof())
					nTemp += (cTmp)->RC_VALOR
					(cTmp)->(dbSkip())
				EndDo
				(cTmp)->(dbCloseArea())

				nDeduc+= nTemp
			EndIf
		EndIf
	EndIf
ElseIf (cSitFunc == "D" .Or. nTipo == 2) .And. fDiasSm13(Left(Dtos(dAuxpar01),4)) > 0
	aStru := SRC->(dbStruct())

	cQuery := "SELECT RC_VALOR  "
	cQuery += " FROM "+ RetSqlName("SRC")+ " RC "
	cQuery += " WHERE RC_FILIAL = '"+ SRA->RA_FILIAL  + "'"
	cQuery += " AND RC_MAT = '"+ SRA->RA_MAT  + "'"
	cQuery += " AND RC_PERIODO	= '" + cPeriodo + "'"
	If nTipo == 1 //Folha + Autonomo
		cQuery += " AND RC_ROTEIR IN (" + cRotFol1 + ",'" + fGetCalcRot("7") + "','" + fGetCalcRot("9") + "'" + ")"
	Else //13º
		cQuery += " AND RC_ROTEIR IN (" + cRotFol1 + ",'" + fGetCalcRot("7") + "','" + fGetCalcRot("9") + "',"  + cRot213 + ")"
	EndIf
	cQuery += " AND RC.D_E_L_E_T_ = ' ' "
	cQuery += " AND RC.RC_PD = '"+aCodFol[670,1]+"'"

	cQuery := ChangeQuery(cQuery)

	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cTmp,.T.,.T.)

	For nX := 1 To Len(aStru)
		If ( aStru[nX][2] <> "C" )
			TcSetField(cTmp,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
		EndIf
	Next nX

	nTemp := 0

	While !(cTmp)->(Eof())
		nTemp += (cTmp)->RC_VALOR
		(cTmp)->(dbSkip())
	EndDo
	(cTmp)->(dbCloseArea())

	nDeduc += nTemp
	nDeduc += fBuscaAcm(aCodfol[670,1],,SToD(SubStr(cPeriodo,1,4)+"0101"),SToD(SubStr(cPeriodo,1,4)+"1231"),"V")
EndIf

RestArea(aGetArea)

Return Nil

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FSubst        ³ Autor ³ Cristina Ogura   ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao que substitui os caracteres especiais por espacos   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FSubst()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function FSubst(cTexto)

Local aAcentos:={}
Local aAcSubst:={}
Local cImpCar := Space(01)
Local cImpLin :=""
Local cAux 	  :=""
Local cAux1	  :=""
Local nTamTxt := Len(cTexto)
Local j
Local nPos

// Para alteracao/inclusao de caracteres, utilizar a fonte TERMINAL no IDE com o tamanho
// maximo possivel para visualizacao dos mesmos.
// Utilizar como referencia a tabela ASCII anexa a evidencia de teste (FNC 807/2009).

aAcentos :=	{;
			Chr(199),Chr(231),Chr(196),Chr(197),Chr(224),Chr(229),Chr(225),Chr(228),Chr(170),;
			Chr(201),Chr(234),Chr(233),Chr(237),Chr(244),Chr(246),Chr(242),Chr(243),Chr(186),;
			Chr(250),Chr(097),Chr(098),Chr(099),Chr(100),Chr(101),Chr(102),Chr(103),Chr(104),;
			Chr(105),Chr(106),Chr(107),Chr(108),Chr(109),Chr(110),Chr(111),Chr(112),Chr(113),;
			Chr(114),Chr(115),Chr(116),Chr(117),Chr(118),Chr(120),Chr(122),Chr(119),Chr(121),;
			Chr(065),Chr(066),Chr(067),Chr(068),Chr(069),Chr(070),Chr(071),Chr(072),Chr(073),;
			Chr(074),Chr(075),Chr(076),Chr(077),Chr(078),Chr(079),Chr(080),Chr(081),Chr(082),;
			Chr(083),Chr(084),Chr(085),Chr(086),Chr(088),Chr(090),Chr(087),Chr(089),Chr(048),;
			Chr(049),Chr(050),Chr(051),Chr(052),Chr(053),Chr(054),Chr(055),Chr(056),Chr(057),;
			Chr(038),Chr(195),Chr(212),Chr(211),Chr(205),Chr(193),Chr(192),Chr(218),Chr(220),;
			Chr(213),Chr(245),Chr(227),Chr(252);
			}

aAcSubst :=	{;
			"C","c","A","A","a","a","a","a","a",;
			"E","e","e","i","o","o","o","o","o",;
			"u","a","b","c","d","e","f","g","h",;
			"i","j","k","l","m","n","o","p","q",;
			"r","s","t","u","v","x","z","w","y",;
			"A","B","C","D","E","F","G","H","I",;
			"J","K","L","M","N","O","P","Q","R",;
			"S","T","U","V","X","Z","W","Y","0",;
			"1","2","3","4","5","6","7","8","9",;
			"E","A","O","O","I","A","A","U","U",;
			"O","o","a","u";
			}

For j:=1 TO Len(AllTrim(cTexto))
	cImpCar	:=SubStr(cTexto,j,1)
	//-- Nao pode sair com 2 espacos em branco.
	cAux	:=Space(01)
	nPos 	:= 0
	nPos 	:= Ascan(aAcentos,cImpCar)
	If nPos > 0
		cAux := aAcSubst[nPos]
	ElseIf (cAux1 == Space(1) .And. cAux == space(1)) .Or. Len(cAux1) == 0
		cAux :=	""
	EndIf
	cAux1 	:= 	cAux
	cImpCar	:=	cAux
	cImpLin	:=	cImpLin+cImpCar

Next j

//--Volta o texto no tamanho original
cImpLin := Left(cImpLin+Space(nTamTxt),nTamTxt)

Return cImpLin

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FTomador      ³ Autor ³ Andreia Santos   ³ Data ³ 28/12/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao que verifica o tomador                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FTomador                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function FTomador(cAuxFil,cCentro,nComTomador,nTpTomador)

Local aArea	:= 	GetArea()
Local lRet	:= 	.F.

dbSelectArea( cAliasCC )
(cAliasCC)->(dbSetOrder(1))

If cFilial == space(FWGETTAMFILIAL) .Or.  (cAuxFil == space(FWGETTAMFILIAL)  .And. cFilial # space(FWGETTAMFILIAL)) .or. empty(cAuxFil)
	cAuxFil := cFilial
EndIf

cAuxFil := xFilial(cAliasCC, cAuxFil )

//-- Sincroniza SI3 x CTT
//IF cAliasCC == "SI3"
   	CTT->(dbSetOrder(1))
	CTT->(dbSeek( cAuxFil + cCentro ))
//Else
//	SI3->(dbSetOrder(1))
//	SI3->(dbSeek( cAuxFil + cCentro ))
//EndIf

If (cAliasCC)->( dbSeek(cAuxFil+cCentro) )
	If TYPE(cAliasCC+"->"+cPrefix+"CEI") # "U" .and. TYPE(cAliasCC+"->"+cPrefix+"TIPO") # "U"
		//-- Com Tomador
		If nComTomador == 1
			//--  Com CNPJ         /  Ambos
			If (nTpTomador == 1 .or. nTpTomador == 3)
				lRet :=	(!empty(&(cAliasCC+"->"+cPrefix+"CEI")) .and. ( If(nTpTomador == 1,&(cAliasCC+"->"+cPrefix+"TIPO") $"1",&(cAliasCC+"->"+cPrefix+"TIPO") $"12")) .and. ( (TYPE(cAliasCC+"->"+cPrefix+"RECFAT") #"U" .and. &(cAliasCC+"->"+cPrefix+"RECFAT") <> "S") .or. (TYPE(cAliasCC+"->"+cPrefix+"RECFAT") == "U") ) )
			//--     Com CEI	      /   Ambos
			ElseIf (nTpTomador == 2 .or. nTpTomador == 3)
				lRet :=	(!empty(&(cAliasCC+"->"+cPrefix+"CEI")) .and.( If(nTpTomador == 2,&(cAliasCC+"->"+cPrefix+"TIPO") $"2",&(cAliasCC+"->"+cPrefix+"TIPO") $"12") ) .and. ( (TYPE(cAliasCC+"->"+cPrefix+"RECFAT") #"U" .and. &(cAliasCC+"->"+cPrefix+"RECFAT") <> "S") .or. (TYPE(cAliasCC+"->"+cPrefix+"RECFAT") == "U") ) )
			EndIf
		//-- Sem Tomador
		ElseIf nComTomador == 2
 			lRet :=	(empty(&(cAliasCC+"->"+cPrefix+"CEI")) .or. empty(&(cAliasCC+"->"+cPrefix+"TIPO")) .or. (TYPE(cAliasCC+"->"+cPrefix+"RECFAT") #"U" .and. &(cAliasCC+"->"+cPrefix+"RECFAT") == "S") )
		//-- Ambos
		ElseIf nComTomador == 3
				//-- Com CNPJ
			If nTpTomador == 1
   				lRet :=	( empty(&(cAliasCC+"->"+cPrefix+"TIPO")) ) .Or.	(&(cAliasCC+"->"+cPrefix+"TIPO") $"1" ) .Or. (TYPE(cAliasCC+"->"+cPrefix+"RECFAT") #"U" .and. &(cAliasCC+"->"+cPrefix+"RECFAT") == "S")
				//-- Com CEI
			ElseIf nTpTomador == 2
				lRet :=	( empty(&(cAliasCC+"->"+cPrefix+"TIPO")) ) .Or.	(&(cAliasCC+"->"+cPrefix+"TIPO") $"2" ) .Or. (TYPE(cAliasCC+"->"+cPrefix+"RECFAT") #"U" .and. &(cAliasCC+"->"+cPrefix+"RECFAT") == "S")
			Else
				//--Ambos
				lRet := .T.
			EndIf
		EndIf
	EndIf

	If lRet
 		If !Empty( cSi3Filter )
			lRet := &( cSi3Filter )
		EndIf
	EndIf
EndIf

RestArea(aArea)

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao	 ³fCentro   ºAutor  ³Microsiga           º Data ³  03/17/00   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se tem tomador para gerar tipo 20                 º±±
±±º          ³ Obtem os dados do Tomador                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function FCentro(cInsc,cTipo,aInfo,cCusto,cAuxFil)

Local lTomador	:= .F.

cAuxFil 		:= If(cAuxFil==Nil .or. cAuxFil == space(FWGETTAMFILIAL), SRA->RA_FILIAL, cAuxFil )

cTipo_Tom	:=""            //Variavel Utilizada Ponto de Entrada
cInsc_Tom	:= Space(14)    //Variavel Utilizada Ponto de Entrada

If nFilCc # 1  		//-Por Centro de Custo
	//--Procura Centro de custo e verifica se tem Cei ou Nao
	lTomador := FTomador(cAuxFil,cCusto,nComTomador,nTpTomador)
	//--Verifica se Tem Cei no Centro de Custo se nao houver vai com a inscricao da empresa
	If lTomador
		If TYPE(cAliasCC+"->"+cPrefix+"TIPO") # "U" .And. TYPE(cAliasCC+"->"+cPrefix+"CEI") # "U"
			If ! (Empty(&(cAliasCC+"->"+cPrefix+"TIPO")) .And. Empty(&(cAliasCC+"->"+cPrefix+"CEI"))) .and. ( !(&(cAliasCC+"->"+cPrefix+"TIPO") == '2') .or. (TYPE(cAliasCC+"->"+cPrefix+"RECFAT") #"U" .and. &(cAliasCC+"->"+cPrefix+"RECFAT") <> "S") .or. (TYPE((cAliasCC+"->"+cPrefix+"RECFAT")) == "U") )
				cTipo 	:= &(cAliasCC+"->"+cPrefix+"TIPO")
				cInsc 	:= &(cAliasCC+"->"+cPrefix+"CEI")
	        Else
        		cTipo := If (aInfo[15] == 1 .Or. ( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ) ),"2","1")
				cInsc := If( Len(aInfo) >= 27 .And. ( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ) ), aInfo[27], aInfo[8] )
            EndIf
		EndIf
	Else	//--inscricao da Empresa
		cTipo := If (aInfo[15] == 1 .Or. ( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ) ),"2","1")
		cInsc := If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )
	EndIf
//-- Quando for por Filial e a inscricao da Empresa for CEI
ElseIf aInfo[15] == 1 .Or. ( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ) )
	cTipo := "2"
	cInsc := If( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ), aInfo[27], aInfo[8] )
Else
	cTipo := "1"
	cInsc := aInfo[08]
EndIf

    /*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Ponto de Entrada GPM610TOM, criado para buscar o 			   ³
	³ Tipo e Inscricao do Tomador. Este ponto de entrada ira       ³
	³ substituir a funcao fCentro, que busca estas informacoes na  ³
	³ tabela SI3. 												   ³
	³ 			 												   ³
	³ Sera enviado um array com 03 elementos via variavel ParamIXB.³
	³  Elemento 1: aInfo, contem os dados do SIGAMAT.EMP           ³
	³  Elemento 2: cCustoAux, centro custo funcionario             ³
	³  Elemento 3: cAuxFil, filial anterior                        ³
	³ 			 												   ³
	³ Retorno:						   	  						   ³
	³  cTipo_Tom = Tipo Inscricao do Tomador (1-CNPJ, 2-CEI)  	   ³
	³  cInsc_Tom  = Numero da Inscricao do Tomador				   ³
	³ 			 												   ³
	³ Obs.: Se estas variaveis vierem em branco, a funcao fCentro  ³
	³ 		sera executada.										   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ   */

   		If lGpmTOM
			Execblock("GPM610TOM" ,.F.,.F.,{aInfo,cCusto,cAuxFil})
			cTipo 	:= 	cTipo_Tom
			cInsc	:= 	cInsc_Tom
		EndIf

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³FTesta    ³ Autor ³ Cristina Ogura   	    ³ Data ³ 02/03/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Posiciona no proximo funcionario		        			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³FRecol()    											 	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function FTesta(lRat,cFil,cCC,cMat)

dbSelectArea(cAliasTRB)
If lRat .and. nDissidio <> 1
	While !Eof() .And. (cAliasTRB)->RC_FILIAL+(cAliasTRB)->RC_CC+(cAliasTRB)->RC_MAT ==;
		cFil+cCC+cMat
		dbSkip()
	EndDo
Else
	If nDissidio == 1
		While !Eof() .And. (cAliasTRB)->RA_FILIAL+(cAliasTRB)->RA_MAT ==;
			cFil+cMat
			dbSkip()
		EndDo
	Else
		While !Eof() .And. (cAliasTRB)->RC_FILIAL+(cAliasTRB)->RC_MAT ==;
			cFil+cMat
			dbSkip()
		EndDo
	EndIf
EndIf

Return Nil

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FMontaSR8     ³ Autor ³ Mauro            ³ Data ³ 25/03/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica no SR8 existe o funcionario                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FMontaSr8(AnoMes,aAfast)                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fMontaSr8(cCompet,aAfast,cSitFunc,dAuxPar01,cCateg)
Local lRet		:= .F.
Local dDtUltAc 	:= CtoD("")
Local dDtUltAd 	:= CtoD("")
Local dDataQ2	:= Ctod("")
Local nDiasSR8 	:= 0
Local lAtu		:= .T.
Local aGetArea	:= GetArea()
Local cAMesProx := 	MesAno(dAuxPar01+((f_UltDia(dAuxPar01)-Day(dAuxPar01))+1))
Local cCodR		:= ""
Local aAfas_OP	:= {}
Local aAfasSeq	:= {}
Local lContAfas := .F.
Local nDiasTot  := 0
Local cContAfa	:= ""
Local nPosAfas	:= 0
Local nPosSeq	:= 0
Local cTipo1	:= ""
Local lGp610Afas:= .T.
Local cFgtsMAnt := aCodFol[117,1] // Codigo de fgts Mes anterior
Local aTransf	:= {}
Local nX		:= 0
Local aEMp		:={}
Local cInsc		:= ""
Local cInsc1	:= ""
Local aPerAtual := {}
Local cTpFol    := fGetRotOrdinar()
Local cTpRes	:= fGetCalcRot("4")
Local cTipBkp	:= ""
Local aMatQ1	:= {}
Local lAjustDat := .F.
Local lTemQ2	:= .F.
Local lTemCP0015:= .F.

DEFAULT cCateg	:= SRA->RA_CATEG

cSitFunc := If (cSitFunc == Nil , SRA->RA_SITFOLH,cSitFunc)
cTab	 := "S043"
cAnoMes	 := MesAno(dAuxpar01)

// Array aAfast
// 1 - Data da movimentacao
// 2 - Tipo de Ocorrencia para a SEFIP
// 3 - "A"=Afastamento "R"=Retorno
// 4 - Dias do afastamento
// 5 - Flag se F=colocar zeros nos dias do Tipo 32
If !(cCateg == "04" .And. cRecol == "650")
	dbSelectArea("SR8")
	dbSetOrder(1)
	If dbSeek(SRA->RA_FILIAL+SRA->RA_MAT)
		While !Eof() .And. SR8->R8_FILIAL+SR8->R8_MAT==SRA->RA_FILIAL+SRA->RA_MAT

			//-- Executa o ponto de entrada
			If lExistPE
				lGp610Afas:= ExecBlock('GP610AFAS',.F.,.F.)
			EndIf

			If RCM->( dbSeek(xFilial("RCM") + SR8->R8_TIPOAFA) )
				IF !Empty(RCM->RCM_CODSEF) .And. lGp610Afas
					lAjustDat	:= .F.
					lAtu		:= .T.
					lTemCP0015	:= .F.
					cTipo1 		:= RCM->RCM_CODSEF

					If (SR8->(FieldPos("R8_SEQ")) # 0).and. (SR8->(FieldPos("R8_CONTAFA")) # 0) .and. (SubStr(RCM->RCM_CODSEF,1,1) $"OP")
						Aadd(aAfas_OP,{SR8->R8_SEQ,RCM->RCM_CODSEF,SR8->R8_DATAINI,SR8->R8_DATAFIM,SR8->R8_CONTAFA,SR8->R8_DURACAO })
					EndIf

					If cCompet == MesAno(SR8->R8_DATAINI) .Or.;
						(MesAno(SR8->R8_DATAINI) <= cCompet .And.  Empty(SR8->R8_DATAFIM)) .Or.;
							(MesAno(SR8->R8_DATAINI) <= cCompet .And.  MesAno(SR8->R8_DATAFIM) >= cCompet)

						// Desconsiderar para Tipo O e P quando os dias forem <= 15

						If (SR8->(FieldPos("R8_SEQ")) == 0).and. (SR8->(FieldPos("R8_CONTAFA"))== 0)
							If SubStr(RCM->RCM_CODSEF,1,1) $ "P*O" .And.;
								!Empty(SR8->R8_DATAFIM) .And.;
								(Day(SR8->R8_DATAFIM) - Day(SR8->R8_DATAINI) <= 15)
								lAtu := .F.
							EndIf
						EndIf

						//--Grava Saida
						lContAfas := .F.
						
						If Empty(SR8->R8_SEQ)
							nDiasTot  := 0
						EndIf
						
						If (SR8->(FieldPos("R8_SEQ")) # 0).and. (SR8->(FieldPos("R8_CONTAFA")) # 0) .and. (SubStr(RCM->RCM_CODSEF,1,1) $"OP")
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Verifica se o afastamento e continuacao de outro afastamento.        ³
							//³Se for, verifica se o inicio deste e inferior a 60 dias do termino do ³
							//³anterior.                                                             ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If !Empty(SR8->R8_CONTAFA)
								cContAfa	:= SR8->R8_CONTAFA

								nPosAfas 	:= Ascan( aAfas_OP,{|x|x[1] == cContAfa})
								nPosSeq 	:= aScan( aAfasSeq, {|x| x[1] == cContAfa } )
								If nPosAfas > 0
									If aAfas_OP[nPosAfas,1] # SR8->R8_SEQ
										If aAfas_OP[nPosAfas,2] == RCM->RCM_CODSEF
											If ( SR8->R8_DATAINI - aAfas_OP[nPosAfas,4] ) <= 60
												lContAfas := .T.
												If nPosSeq == 0
													nDiasTot += aAfas_OP[nPosAfas,6]
												EndIf
											EndIf										
										EndIf
									EndIf
								EndIf
							EndIf
						Else
							If SubStr(RCM->RCM_CODSEF,1,1) $ "P" .And. (SR8->R8_DATAINI - dDtUltAd)+1 <= 60
								lContAfas := .T.
							ElseIf SubStr(RCM->RCM_CODSEF,1,1) $ "O" .And. (SR8->R8_DATAINI - dDtUltAc)+1 <= 60
								lContAfas := .T.
							EndIf
						EndIf

						If lContAfas
							nDiasTot += If(!Empty(SR8->R8_DATAFIM), (SR8->R8_DATAFIM - SR8->R8_DATAINI)+1, (dAuxPar01 - SR8->R8_DATAINI)+1)
						Else
							nDiasTot := If(!Empty(SR8->R8_DATAFIM), (SR8->R8_DATAFIM - SR8->R8_DATAINI)+1, (dAuxPar01 - SR8->R8_DATAINI)+1)
							aAdd( aAfasSeq, { SR8->R8_SEQ } )
						EndIf

						If SubStr(RCM->RCM_CODSEF,1,1) $  "O" .And. lContAfas
							cTipo1 := "O2"
						ElseIf SubStr(RCM->RCM_CODSEF,1,1) $ "O" .And.(!empty(SR8->R8_DATAFIM) .and.(SR8->R8_DATAFIM - SR8->R8_DATAINI)+1 <= 15 )
							cTipo1 := "O3"
						ElseIf SubStr(RCM->RCM_CODSEF,1,1) $ "O"
							cTipo1 := "O1"
						EndIf

						If SubStr(RCM->RCM_CODSEF,1,1) $  "P" .And. lContAfas .and. nDiasTot <= 15
							cTipo1 := "P2"
						ElseIf SubStr(RCM->RCM_CODSEF,1,1) $  "P" .And. !lContAfas .and. ( (!Empty(SR8->R8_DATAFIM) .and. (SR8->R8_DATAFIM - SR8->R8_DATAINI)+1 <= 15 ) .or. ( Empty(SR8->R8_DATAFIM) .and. AnoMes(SR8->R8_DATAINI) == AnoMes(dAuxPar01)) )
							cTipo1 := "P3"
						ElseIf SubStr(RCM->RCM_CODSEF,1,1) $  "P"
							cTipo1 := "P1"
						EndIf

						// Maternidade
						If SubStr(RCM->RCM_CODSEF,1,1) $ "Q"
							cTipo1  := "Q1"

							//Prorrogação de maternidade
							If (Alltrim(RCM->RCM_CODSEF) == "Q2")
								cTipo1  := RCM->RCM_CODSEF
								lTemQ2  := .T.
								dDataQ2 := SR8->R8_DATAINI
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Afastamento <= 14 dias (Aborto nao criminoso)    ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If ( !Empty(SR8->R8_DATAFIM) .and.(SR8->R8_DATAFIM - SR8->R8_DATAINI)+1 <= 14 )
								cTipo1 := "Q3"
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Execblock para ajustar o codigo de afastamento   ³
							//³para auxilio maternidade.                        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lGpm610Q
								cTipo1 := Execblock("GPM610Q",.F.,.F.)
								cTipo1 := If( empty(cTipo1), "Q1",cTipo1 )
							EndIf
						EndIf

						// Maternidade por adocao
						If Alltrim(RCM->RCM_CODSEF) $ "Q4/Q5/Q6"
							cTipo1 := RCM->RCM_CODSEF
						EndIf

						// Aposentadoria
						If SubStr(RCM->RCM_CODSEF,1,1) $ "U"
							If SRA->RA_RESCRAI == "71"
								cTipo1 := "Y"		// Com vinculo empregaticio
							Else
								cTipo1 := RCM->RCM_CODSEF//"U1"
							EndIf
						EndIf

						If SubStr(RCM->RCM_CODSEF,1,1) $ "V"
							cTipo1 := "Y"		// Com vinculo empregaticio
						EndIf

						// Calcula os dias quando existir retorno de afastamento
						nDiasSR8 :=0
						If MesAno(SR8->R8_DATAFIM) == cCompet
							If Month(SR8->R8_DATAINI) == Month(SR8->R8_DATAFIM)
								// Desconsidera os 15 dias
								If SubStr(RCM->RCM_CODSEF,1,1) $ "P*O"
									nDiasSR8 := SR8->R8_DATAFIM - (SR8->R8_DATAINI + 14)
								Else
									nDiasSR8 := SR8->R8_DATAFIM - SR8->R8_DATAINI
								EndIf
							Else
								nDiasSR8 := Day(SR8->R8_DATAFIM)
							EndIf
							If nDiasSR8 < 0
								nDiasSR8 := 0
							EndIf
						EndIf

						// Se for Continuacao do Afastamento Maternidade deve utilizar Codigo
						// Y (Outro Tipo de Afastamento) Por considerar Empresa Cidadah
						If (SubStr(RCM->RCM_CODSEF,1,1) $ "Q") .and. (SR8->(FieldPos("R8_SEQ")) # 0) .and. ;
						(SR8->(FieldPos("R8_CONTAFA")) # 0) .and. (SR8->R8_CONTINU=="1") .and. !Empty(SR8->R8_CONTAFA)
							cTipo1 := "Y"
						EndIf

						If ( SubStr(cTipo1,2,1) != "3" .And. SR8->R8_DURACAO > SR8->R8_DIASEMP .And.;
							((lVerAfa00 .And. RCM->RCM_PDSUP $ cVerbasCP00) .Or.;
							(lVerAfa15 .And. RetValSrv( RCM->RCM_PD, SR8->R8_FILIAL, "RV_INSS" ) == "S" .And. RetValSrv( RCM->RCM_PD, SR8->R8_FILIAL, "RV_INCCP" ) == "15")) )
							cTipBkp 	:= cTipo1
							If AnoMes(SR8->R8_DATAINI+SR8->R8_DIASEMP-1) == cCompet .And. (SubStr(cTipo1,1,1) == "P" .Or. SubStr(cTipo1,2,1) != "2")
								If SubStr(cTipo1,1,1) != "P" .Or. aScan(aAfast, { |x| x[2] == "P3"}) == 0
									cTipo1 		:= SubStr(RCM->RCM_CODSEF,1,1)+"3"
								EndIf
							ElseIf SubStr(cTipo1,2,1) == "1" .And. AnoMes(SR8->R8_DATAINI+SR8->R8_DIASEMP-1) < cCompet
								lAjustDat	:= .T.
							ElseIf  SubStr(RCM->RCM_CODSEF,1,1) == "P" .and. (SR8->R8_DATAFIM - SR8->R8_DATAINI)+1 > 15 .and. (LastDate(SR8->R8_DATAINI) - SR8->R8_DATAINI)+1 < 15
								cTipo1 		:= "P3"
							EndIf
							nDiasSR8 	:= 0
							If AnoMes(SR8->R8_DATAINI+SR8->R8_DIASEMP-1) == cCompet
								lTemCP0015	:= .T.
							EndIf
						EndIf

						Aadd(aAfast, {SR8->R8_DATAINI+Iif( lAjustDat, SR8->R8_DIASEMP, 0 ), cTipo1, "A", nDiasSR8, lAtu, .F.})

						If lTemCP0015 .And. aScan(aAfast, { |x| x[1] == SR8->R8_DATAINI+SR8->R8_DIASEMP-1 }) == 0 .And. aScan(aAfast, { |x| x[1] == SR8->R8_DATAINI+SR8->R8_DIASEMP }) == 0
							cTipo1 		:= cTipBkp
							Aadd(aAfast, {SR8->R8_DATAINI+SR8->R8_DIASEMP-1, Iif(SubStr(RCM->RCM_CODSEF,1,1) == "O", Iif( Len(aAfast) > 0 .And. aAfast[Len(aAfast), 2] == "O2", "Z3", "Z6"), "Z5"), "A", 0, lAtu,.F.})
							Aadd(aAfast, {SR8->R8_DATAINI+SR8->R8_DIASEMP, cTipo1, "A", 0, lAtu,.F.})
						EndIf

						// Gerar registro qdo for prorrogacao da maternidade.
						// Alterado para tratar Data Final do Afastamento ACIMA da data de competencia
						If SubStr(RCM->RCM_CODSEF,1,1) $ "Q" .And. MesAno(SR8->R8_DATAFIM) >= cCompet
							If SR8->R8_DATAFIM - SR8->R8_DATAINI > 120 .And. cCompet >= anomes(SR8->R8_DATAINI +120)
								Aadd(aAfast,{SR8->R8_DATAINI+121,"Q2","A",0,lAtu,.F.})
							EndIf
						EndIf

						If MesAno(SR8->R8_DATAFIM) == cCompet
							If SubStr(RCM->RCM_CODSEF,1,1) $ "R"
								cTipo1 := "Z4"
							ElseIf SubStr(RCM->RCM_CODSEF,1,1) $ "O"
								cTipo1 	:= If (cTipo1 = "O2","Z3",If(cTipo1=="O3","Z6","Z2"))
								dDtultAc := SR8->R8_DATAFIM
							ElseIf SubStr(RCM->RCM_CODSEF,1,1) $ "1*P*Z*U*V*W*X*Y"
								cTipo1 := "Z5"
								If SubStr(RCM->RCM_CODSEF,1,1) $ "P"
									dDtUltAd := SR8->R8_DATAFIM
								EndIf
							ElseIf SubStr(RCM->RCM_CODSEF,1,1) $ "Q*B*6*7"
								// Se for Continuacao do Afastamento Maternidade deve utilizar
								// Encerramanto do Codigo Y (Outro Tipo de Afastamento)
								IF (SubStr(RCM->RCM_CODSEF,1,1) $ "Q") .and. (SR8->(FieldPos("R8_SEQ")) # 0) .and. ;
								(SR8->(FieldPos("R8_CONTAFA")) # 0) .and. (SR8->R8_CONTINU=="1") .and. ;
								! Empty(SR8->R8_CONTAFA)
									cTipo1 := "Z5"
								Else
									cTipo1 := "Z1"
								EndIf
							EndIf
							Aadd(aAfast,{SR8->R8_DATAFIM,cTipo1,"R",0,lAtu,.F.})
						EndIf
					ElseIf SubStr(RCM->RCM_CODSEF,1,1) $ "O"
						dDtultAc := SR8->R8_DATAFIM
					ElseIf SubStr(RCM->RCM_CODSEF,1,1) $ "P"
						dDtUltAd := SR8->R8_DATAFIM
					ElseIf SubStr(RCM->RCM_CODSEF,1,2) $ "Q1"
						Aadd(aMatQ1,{{SR8->R8_DATAINI,cTipo1,"A",0,lAtu,.F.},SR8->R8_DATAFIM})
					EndIf
				EndIf
			EndIf
			dbSelectArea("SR8")
			dbSkip()
		EndDo
	EndIf
EndIf
//sempre que envia um Q2 precisa enviar o Q1
If Len(aMatQ1) > 0 .And. lTemQ2
	If AnoMes(aMatQ1[Len(aMatQ1),2]) == AnoMes(dDataQ2) .or. AnoMes(MonthSum(aMatQ1[Len(aMatQ1),2],1)) == AnoMes(dDataQ2) //Deve enviar apenas a Q1 relacionada a Q2 atual, no caso, o último afastamento por maternidade
		aadd(aAfast,aMatQ1[Len(aMatQ1),1])
	EndIf
EndIf

If cSitFunc == 'D'
	cTipo1 := fCodMov( SRA->RA_AFASFGT, SRA->RA_DEMISSA, cCompet )
	If cTipo1 $ "N1*N2" //checo se demissao por transferencia, se for mesma inscricao(CGC) não precisa enviar movimentação, registro 32
		fTransf( aTransf , cCompet,,,,,,.T.)
		If Len(aTRansf) > 0
			For nX := 1 to len(aTransf)
				cInsc := ""
				cInsc1 := ""
				If aTransf[nx,04]+aTransf[nx,10] <> aTransf[nx,01]+aTransf[nx,08]
					aEmp :=  FWArrFilAtu(aTransf[nx,04],aTransf[nx,10])//para
					cInsc := aEmp[18]
					aEmp :=  FWArrFilAtu(aTransf[nx,01],aTransf[nx,08]) //de
					cInsc1 := aEmp[18]
				EndIf
				If  cInsc <> cInsc1 .And. (aTransf[nx,01]+aTransf[nx,8] == cEmpAnt+SRA->RA_FILIAL) .and. (aTransf[nx,01]+aTransf[nx,08]#aTransf[nx,04]+aTransf[nx,10])
					Aadd(aAfast,{iif(SRA->RA_ADMISSA == SRA->RA_DEMISSA,SRA->RA_DEMISSA,SRA->RA_DEMISSA-1),cTipo1,"D",0,lAtu,.F.})
				EndIf
			Next
		Else
			Aadd(aAfast,{SRA->RA_DEMISSA,cTipo1,"D",0,lAtu,.F.})
		EndIf
	Else
		Aadd(aAfast,{SRA->RA_DEMISSA,cTipo1,"D",0,lAtu,.F.})
	EndIf
	aTransf := {}
Else
	If SRG->(dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+cAMesProx)) .And. SRG->RG_EFETIVA == "S"
		If SRR->(dbseek(SRA->RA_FILIAL+SRA->RA_MAT+"R"+DTOS(SRG->RG_DTGERAR)+cFgtsMAnt))
			cTpRes		:= SRG->RG_TIPORES
			nPosTab 	:= fPosTab(cTab,cAnoMes,"==",2,cTpRes,"==",4) // Tipo de Rescisao
			If nPosTab == 0   // Tenta sem data de referencia
			   nPosTab 	:= fPosTab(cTab,cTpRes,"==",4,,,) // Tipo de Rescisao
			EndIf

			If nPosTab > 0
				cCodR		:=	fTabela(cTab,nPosTab,18) // Cod. Afastamento FGTS
			EndIf

			cTipo1 := fCodMov( cCodR,SRG->RG_DATADEM,cCompet )

			Aadd(aAfast,{SRG->RG_DATADEM,cTipo1,"D",0,lAtu,.T.})
			cSitFunc :=	"D"
			If  fGetPerAtual(@aPerAtual,SRA->RA_FILIAL,SRA->RA_PROCES,cTpFol, .T. )
				If aPerAtual[1,1] == cPeriodo
					aPerAtual := {}
					If fGetPerAtual(@aPerAtual,SRA->RA_FILIAL,SRA->RA_PROCES,cTpRes, .T. )
						If aPerAtual[1,1] > cPeriodo
							cSitFunc :=	" "
							aAfast := {}
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
EndIf

fTransf( aTransf , cCompet)

If Len(aTRansf) > 0
	For nX := 1 to len(aTransf)
		cInsc := ""
		cInsc1 := ""
		If aTransf[nx,04]+aTransf[nx,10] <> aTransf[nx,01]+aTransf[nx,08]
			aEmp :=  FWArrFilAtu(aTransf[nx,04],aTransf[nx,10])//para
			cInsc := aEmp[18]
			aEmp :=  FWArrFilAtu(aTransf[nx,01],aTransf[nx,08]) //de
			cInsc1 := aEmp[18]
		EndIf
		If  cInsc <> cInsc1 .And. (aTransf[nx,04]+aTransf[nx,10] == cEmpAnt+SRA->RA_FILIAL) .and. (aTransf[nx,01]+aTransf[nx,08]#aTransf[nx,04]+aTransf[nx,10]);
		  .And. cCateg <> "11"
			Aadd(aAfast,{aTransf[nx,7],"N3","A",0,lAtu,.T.})
		EndIf
	Next
EndIf

RestArea(aGetArea)

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³   ºAutor  ³Andreia dos Santos  º Data ³  26096/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna o codigo de afastamento.                           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fCodMov( cCodMov,dDemissa,cCompet )

Local cTipo1 := If( !empty(SRA->RA_AFASFGT),SRA->RA_AFASFGT,cCodMov)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³A versao 3 esta sendo atribuida nessa variavel para uso externo a SEFIP. ³
//³Se for adicionado novo item ao parametro 41 desta rotina, esta variavel  ³
//³deve ser atualizada.														³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local nVer1	 := If(Type("nVersao") = "U",3,nVersao)
nVer1 := cValToChar(nVer1)
cCodMov := Alltrim(cCodMov)
dAuxPar01 := If(Type("dAuxPar01") = "U",mv_par01,dAuxPar01)

// Aposentadoria
If Mesano(dDemissa) <= cCompet
	If SubStr(cCodMov,1,1) $ "U"
		If SRA->RA_RESCRAI == "71"
			cTipo1 := "Y"		// Com vinculo empregaticio
		Else
			cTipo1 := RCM->RCM_CODSEF//"U1"
		EndIf
	EndIf

	//aposentadoria com continuidade de vinculo empregaticio
	If subStr(cCodMov,1,1) $ "V"
   		cTipo1	:= "Y"
	EndIf
EndIf

If nVer1 # "1"
	If cCodMov == "I"
		cTipo1 := "I1"

		// Somente devera ser informada a Movimentacao V3 caso seja Rescisao Complementar de
		// Dissidio de acordo com o item 20.4 da CIRCULAR da CAIXA Numero 548 de 20/04/2011.
		If ! Empty( SRA->RA_DEMISSA ) .and. MesAno( SRA->RA_DEMISSA ) < MesAno( dAuxPar01 ) .and. lComplDiss
			cTipo1 := "V3"
		EndIf

	ElseIf cCodMov == "2"
		cTipo1 := "I2"
	ElseIf cCodMov == "3"
		cTipo1 := "I3"
	ElseIf cCodMov == "4"
		cTipo1 := "I4"
	ElseIf cCodMov =="N"
		cTipo1	:= "N2"
	ElseIf cCodMov =="5"
		cTipo1	:= "N1"
	EndIf

	If nVer1 == "3"
		If cCodMov =="S"
			cTipo1	:= "S2"
		ElseIf cCodMov =="9"
			cTipo1	:= "S3"
		EndIf
	EndIf
EndIf

Return( cTipo1 )
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Gp610Cria ³ Autor ³ Cristina Ogura   	  ³ Data ³ 02/03/98   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³// Verifica o arquivo e cria se necessario				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³FRecol()    												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Gp610Cria(cArqNome)

Local aStruRJH 	:={}
Local nTamMat	:= TamSX3("RA_MAT")[1]
Local nTamGrupo	:= Len(FWGrpCompany("SM0"))

aStruRJH :=	{;
	{"RJH_EMPAGR","C",002		,0 },;
	{"RJH_TIPO" , "C",002		,0 },;
	{"RJH_TINSC", "C",001		,0 },;
	{"RJH_INSC",  "C",014		,0 },;
	{"RJH_TTOMA", "C",001		,0 },;
	{"RJH_TOMAD", "C",014		,0 },;
	{"RJH_PIS",   "C",011		,0 },;
	{"RJH_DT",    "C",008 		,0 },;
	{"RJH_CAT",   "C",002 		,0 },;
	{"RJH_TEXTO", "C",254 		,0 },;
	{"RJH_TEXTO2","C",108 		,0 },;
	{"RJH_EMP",	  "C",nTamGrupo	,0 },;
	{"RJH_FILFUN","C",12		,0 },;
	{"RJH_MAT",	  "C",nTamMat	,0 },;
	{"RJH_NBASE", "C",001		,0 },;
	{"RJH_BFGTS", "N",016		,2 },;
	{"RJH_2BFGTS","N",016		,2 },;
	{"RJH_BFG13", "N",016		,2 },;
	{"RJH_2BFG13","N",016		,2 },;
	{"RJH_BINSS", "N",016		,2 },;
	{"RJH_2BINSS","N",016		,2 },;
	{"RJH_BIN13", "N",016		,2 },;
	{"RJH_2BIN13","N",016		,2 },;
	{"RJH_DINSS", "N",016		,2 },;
	{"RJH_FLAG",  "C",001		,0 }}

// Agrupa por empresa : 1-Sim 	2-Nao
If nAgrupa <> 1

	If oTmpRJH <> Nil
		oTmpRJH:Delete()
		oTmpRJH := Nil
	EndIf
	oTmpRJH := FWTemporaryTable():New("RJHX",aStruRJH)
	oTmpRJH:AddIndex( "RJHAUX1", {"RJH_EMPAGR","RJH_TINSC","RJH_INSC","RJH_TIPO","RJH_TTOMA","RJH_TOMAD","RJH_PIS","RJH_DT","RJH_CAT"} )
	oTmpRJH:Create()

Else
	If Empty(cEmprAgrup)
		Aviso( STR0063,STR0086, { "Ok" },,"" ) //Atencao ##"Informe qual a empresa que agrupara as informacoes."
		Return .F.
	EndIf

	dbSelectArea('RJH')
	dbChangeAlias('RJH','RJHX')

	RJHX->(dbGoTop())
	If cEmpAnt == cEmprAgrup .AND. RJHX->(dbSeek(cEmprAgrup))
		cQuery := "DELETE FROM " + if(Empty(RetSqlName('RJH')), cArqNome,RetSqlName('RJH'))  + " WHERE RJH_EMPAGR = '" + cEmprAgrup + "'"
		TCSQLEXEC(cQuery)
	EndIf
EndIf

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEM610   ºAutor  ³Microsiga           º Data ³  03/16/00   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica a filial responsavel se existe                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function FVerSM0()

Local cAlias	:= 	Alias()
Local nOrdem	:=	IndexOrd()
Local nReg		:=	RecNo()
Local nRegSM0	:= 	0
Local lRet	 	:= .F.

dbSelectArea("SM0")
nRegSM0 := RecNo()

If dbSeek(cFilResp)
	lRet := .T.
	cCGC := SM0->M0_CGC
EndIf

dbGoto(nRegSM0)

dbSelectArea(cAlias)
dbSetOrder(nOrdem)
dbGoto(nReg)

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEM610   ºAutor  ³Microsiga           º Data ³  03/18/00   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³// Gravo o tipo no arquivo conforme a empresa               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function FVerTipo(cTINSC,cINSC,cTTOMA,cTOMAD)

Local nRegAnterior 	:= 	RecNo()
Local aTipo			:= 	{"12","13","14"}
Local cTipoTom		:=	""
Local cTomador		:=	""
Local lTomador 		:= .T.
Local lGerou   		:= .F.
Local lGera20 		:= .F.
Local nX
Local nOldReg		:= Recno()

dbSelectArea("RJHX")

// Verifica os tipos 12,13 e 14 da SEFIP
For nx:=1 To Len(aTipo)
	If dbSeek(cEmprAgrup+cTINSC+cINSC+aTipo[nx])
		While !Eof() .And. cEmprAgrup+cTINSC+cINSC+aTipo[nx]==RJHX->RJH_EMPAGR+RJHX->RJH_TINSC+RJHX->RJH_INSC+RJHX->RJH_TIPO
			FWrite(nHandle,RJHX->RJH_TEXTO+RJHX->RJH_TEXTO2)
			dbSkip()
		EndDo
	EndIf
Next nx

// Verifica os tipos 20, 21, 30 e 32 da SEFIP
// Tipo 20
If dbSeek(cEmprAgrup+cTINSC+cINSC+"20")
	While !Eof() .And.  cTINSC+cINSC+"20" ==;
		RJHX->RJH_TINSC+RJHX->RJH_INSC+RJHX->RJH_TIPO

		cTipoTom:= RJHX->RJH_TTOMA
		cTomador:= RJHX->RJH_TOMAD
		lTomador:= .T.
		lGerou  := .T.
		While !Eof() .And. cTINSC+cINSC+"20"+cTipoTom+cTomador ==;
			RJHX->RJH_TINSC+RJHX->RJH_INSC+RJHX->RJH_TIPO+RJHX->RJH_TTOMA+RJHX->RJH_TOMAD

			nOldReg	:= RJHX->( Recno() )
			//So grava registro 20 se encontrar um reg. 21 ou 30 correspondente.
			lGera20 := (dbSeek(cEmprAgrup+cTINSC+cINSC+"30"+cTipoTom+cTomador) .OR. ;
			dbSeek(cEmprAgrup+cTINSC+cINSC+"21"+cTipoTom+cTomador) )

			dbGoto(nOldReg)

			If lGera20
				FWrite(nHandle,RJHX->RJH_TEXTO+RJHX->RJH_TEXTO2)

				If lTomador
					Ver21(cTINSC,cINSC,cTipoTom,cTomador)
					lTomador := .F.
				EndIf

				Ver30(cTINSC,cINSC,cTipoTom,cTomador)

			EndIf
			dbSelectArea("RJHX")
			dbSkip()
		EndDo
	EndDo
EndIf

// Tipo 30
If !lGerou
	Ver30(cTINSC,cINSC,Space(01),Space(14))
EndIf

dbGoto(nRegAnterior)

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Ver30         ³ Autor ³ Cristina Ogura   ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Imprime o tipo 30 e 32                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Ver30()                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Ver30(cTINSC,cINSC,cTipoTom,cTomador)

Local nAuxReg
Local aGetArea	:= GetArea()

dbSelectArea("RJHX")
nAuxReg:= RecNo()

If dbSeek(cEmprAgrup+cTINSC+cINSC+"30"+cTipoTom+cTomador)

	While !Eof() .And. cTINSC+cINSC+"30"+cTipoTom+cTomador ==;
		RJHX->RJH_TINSC+RJHX->RJH_INSC+RJHX->RJH_TIPO+RJHX->RJH_TTOMA+RJHX->RJH_TOMAD

		FWrite(nHandle,RJHX->RJH_TEXTO+RJHX->RJH_TEXTO2)

		If Reclock("RJHX", .F.)
			RJHX->RJH_FLAG := '1'
			MsUnlock("RJHX")
		EndIf

		Ver32(RJHX->RJH_TINSC,RJHX->RJH_INSC,RJHX->RJH_TTOMA,RJHX->RJH_TOMAD,RJHX->RJH_PIS,RJHX->RJH_EMP,RJHX->RJH_FILFUN,RJHX->RJH_MAT)

		dbSkip()
	EndDo
ElseIf Eof()
	//--Quando nao encontrar registro 30 verifica se existe 32 e gera.
	Ver32(RJHX->RJH_TINSC,RJHX->RJH_INSC,RJHX->RJH_TTOMA,RJHX->RJH_TOMAD,RJHX->RJH_PIS,RJHX->RJH_EMP,RJHX->RJH_FILFUN,RJHX->RJH_MAT)
EndIf

dbSelectArea("RJHX")
dbGoto(nAuxReg)

RestArea(aGetArea)
Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fCValDev  ºAutor  ³Microsiga           º Data ³  03/18/00   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Calculo do Inss da Empresa para achar valor devipo a       º±±
±±º          ³ a Previdencia                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ nBaseCal=Base de Calculo do Inss Empresa e Terceiros       º±±
±±º          ³ aInssEmp=Array contendo os Percentuais Inss Empresa        º±±
±±º          ³ nTotAci =Valor Calc. Ac.de Trabalho dos Funcionarios       º±±
±±º          ³ nInssRet=Valor de Inss Descontado dos Funcionarios         º±±
±±º          ³ nValDPrev=retorna o valor Inss Devido a Previdencia        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fCValDev(nBaseCal,aInssEmp,nTotAci,nInssRet,nDeducao,nValDPrev,nPercFpas)

nValDPrev 	:= 0.00
nPercFPas	:= If (nPercFpas == Nil, 0, nPercFPas)

nTotAci := If (nTotAci = NIL,0.00,nTotAci)
If nBaseCal > 0
	nValDPrev += ROUND(nBaseCal * aInssemp[1,1],2) // Inss Emp.
	nValDPrev += ROUND(nBaseCal * If (nPercFPAS > 0, nPercFPAS , aInssemp[2,1]),2)   // Terceiros
	nValDPrev += nTotAci   // Somar Valor de Ac.Trabalho do Funcionario
EndIf
nValDPrev += nInssRet  // Retencao do Funcionario
nValDPrev -= nDeducao

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEM610   ºAutor  ³Microsiga           º Data ³  08/05/00   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se deve gerar reg. de Tomador Tipo 20             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fGera20(cCusto,cCustoAux,aInfo,cInsc,cTipo,n20SalFamAnt,nT13Inss,nTB13Inss,nTotAci,cAuxFil,cFilAtual,aCodFol,lRat,n20SalFam)

Local aSvInfo  := aClone( aInfo )
Local cInfo
Local nX

Private nValFat := 0
Private nValRet := 0

If aInfo[15] == 1 .Or. ( Len(aInfo) >= 27 .And. !Empty( aInfo[27] ) )	// CEI
	cInfo := "2"
Else
	cInfo := "1"			// CGC/CNPJ
EndIf

//-- Verificando o Tamanho do FPAS
If Empty( cFPAS_Tom )
	If SubStr(aInfo[17],1,1) == "0"
		cFPAS	:= SubStr(aInfo[17],2,3)
	Else
		cFPAS	:= SubStr(aInfo[17],1,3)
	EndIf
EndIf
// -- Nao deve gerar tomador para os codigos de recolhimento abaixo
If cRecol $ "115#145#307#327#345#640#650#660"
	Return
EndIf

// Gerar por C.C   Registro 20 Tomador de Servico
If nFilCc # 1 .Or. (nFilCc == 1 .And. cInfo = "2" .And. cRecol # '115')

	//--Verifica Quebra de C.Custo
	If nComTomador # 2 .And. ( ( cAuxFil # cFilAtual .Or. cCusto # cCustoAux) .or. lGpmTp20)
		//--Assume a Filial do funcionario corrente se nao foi informada
		cAuxFil 	:= If(cAuxFil==Nil .or. Empty(cAuxFil), SRA->RA_FILIAL, cAuxFil )
		cFilAtual 	:= If(cFilAtual==Nil .or. Empty(cFilAtual), SRA->RA_FILIAL, cFilAtual )

		n20SalFamAnt:= n20SalFam

		//--Carga do cTipo e cInsc para o Reg. 20
		cTipo		:=""
		cInsc		:= Space(14)
		//-- Carrega o aInfo com os dados do SIGAMAT.EMP
		If cFilAtual != Nil .And. !Empty( cFilAtual ) .And. cAuxFil != cFilAtual
			fInfo(@aInfo,cFilAtual)
		EndIf

		FCentro(@cInsc,@cTipo,aInfo,cCusto,cFilAtual)


		//Quando for competencia 12 calcular o Valor Devido a Previdencia do 13o.
		nValDPrev 	:= 0

		If Month(dAuxPar01) = 12
			fCValDev(nTB13Inss,aInssEmp,nTotAci,nT13Inss,0.00,@nValDPrev,CTT->CTT_PERFPA)
		EndIf

		//Carrega valores da GPS
		If cFilS035 != cAuxFil
			cFilS035 := cAuxFil
			fGPSVal(cAuxFil,cAnoMesGps,@aGPSVal,SRA->RA_TPCONTR)
		EndIf

		nValFat := nValRet := nValComps := 0

		For nx := 1 to len(aGpsVal)
			If alltrim(aGpsVal[nX,1]) == alltrim(cCusto)
				If aGpsVal[nX,02] == aCodFol[314,1]
					nValFat	  += aGpsVal[nX,03] // Valor da Fatura
					nValRet	  += aGpsVal[nX,05] // Valor Retido
				EndIf
				If aGpsVal[nX,02] == aCodFol[584,1]
					nValComps += aGpsVal[nX,05] // Valor da Compensacao da GPS
					cPerIniCmp:= aGpsVal[nX,08]	// Ano/mes do periodo inicial de Compensacao
					cPerFimCmp:= aGpsVal[nX,09]	// Ano/mes do periodo final de Compensacao
				EndIf
			EndIf
		Next nX

		//--Gera registro Tipo 20 todo C.Custo para Somar Valor Retido,Valor Faturado e sal.Familia
		DBF_TIPO20(aInfo,cInfo,cTipo,cInsc,.T.,n20SalFamAnt,nT13Inss,nValDPrev,cCusto,cFilAtual,.T.)

		If (nValComps#0) .and. cRecol$ '130/135/150/155/211/608'
			DBF_TIPO21(aInfo,cInfo,cTipo,cInsc)
		EndIf


		cCustoAux 	:= cCusto
		cAuxFil		:= cFilAtual
		n20SalFamAnt:= n20SalFam
		nT13Inss	:= 0
		nTB13Inss	:= 0
		nTotAci		:= 0

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se o CNPJ do tomador e igual ao CNPJ da empresa        ³
		//³Se for, significa que tem movimentacao de pessoal adminstrativo.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lPessoalAdm := If( cInscResp == cInsc, .T.,lPessoalAdm )
	Else
		If n20SalFam > 0

			n20SalFamAnt:= n20SalFam
			nValDPrev 	:= 0

			//--Assume a Filial do funcionario corrente se nao foi informada
    		cAuxFil		:= If(cAuxFil==Nil .or.  Empty(cAuxFil), SRA->RA_FILIAL, cAuxFil )

			DBF_TIPO20(aInfo,cInfo,cTipo,cInsc,.T.,n20SalFamAnt,nT13Inss,nValDPrev,cCustoAux,cAuxFil,.F.)
			cCustoAux 	:= cCusto
			cAuxFil		:= cFilAtual

		EndIf
	EndIf
	n20SalFam 	:= 0

	//--Carga do cTipo e cInsc para o Funcionario
	cTipo		:=""
	cInsc		:= Space(14)
	FCentro(@cInsc,@cTipo,aInfo,cCusto,SRA->RA_FILIAL)
EndIf
aInfo := aClone( aSvInfo )

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³fMoviment ºAutor  ³Andreia dos Santos  º Data ³  21/06/02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Monta array com todos os codigos de movimentacao para      º±±
±±º          ³ descricao no relatorio de Log de ocorrencias               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fMoviment(aMovimento)

aMovimento := {}

aadd(aMovimento,{"H" ,STR0027,STR0028}) 	//"Rescisao"###"com justa causa, por iniciativa do empregador"
aadd(aMovimento,{"I1",STR0027,STR0029}) 	//"Rescisao"###"sem justa causa, por iniciativa do empregador"
aadd(aMovimento,{"I2",STR0027,STR0030}) 	//"Rescisao"###"por culpa reciproca ou forca maior"
aadd(aMovimento,{"I3",STR0027,STR0031}) 	//"Rescisao"###"por finalizacao do contrato a termo"
aadd(aMovimento,{"I4",STR0027,STR0032}) 	//"Rescisao"###"sem justa causa do contrato de trabalho do empreg. domestico, iniciativa do empregador"
aadd(aMovimento,{"J" ,STR0027,STR0033}) 	//"Rescisao"###"por iniciativa do empregado"
aadd(aMovimento,{"K" ,STR0027,STR0034}) 	//"Rescisao"###"a pedido do empregado ou empregador, com justa causa, empreg. nao optante com menos de um ano de servico"
aadd(aMovimento,{"L" ,STR0027,STR0035}) 	//"outros motivos de rescisao do contrato de trabaho"
aadd(aMovimento,{"M" ,STR0036,""})      	//"Mudanca de Regime Estatutario"
aadd(aMovimento,{"N1",STR0037,STR0038}) 	//"Transferencia"###"para outro estabelecimento da mesma empresa"
aadd(aMovimento,{"N2",STR0037,STR0039}) 	//"Transferencia"###"para outra empresa sem rescisao de contrato"
aadd(aMovimento,{"N3",STR0037,STR0090}) 	//"Transferencia"###"de outra empresa sem rescisao de contrato"
aadd(aMovimento,{"O1",STR0040,STR0041}) 	//"Afastamento"###"temporario por motivo de acidente do trabalho, periodo superior a 15 dias"
aadd(aMovimento,{"O2",STR0042,STR0043}) 	//"Novo Afastamento"###"temporario em decorrencia do mesmo acidente do trabalho"
aadd(aMovimento,{"O3",STR0040,STR0077}) 	//"Afastamento"###"temporario por motivo de acidente do trabalho, por periodo igual ou inferior a 15 dias"
aadd(aMovimento,{"I3",STR0027,STR0031}) 	//"Rescisao"###"por finalizacao do contrato a termo"
aadd(aMovimento,{"P1",STR0040,STR0044}) 	//"Afastamento"###"temporario por motivo de doenca, superior a 15 dias"
aadd(aMovimento,{"P2",STR0042,STR0045}) 	//"Novo Afastamento"###"temporario, mesma doenca, 60 dias contados da cessacao afastamento anterior"
aadd(aMovimento,{"P3",STR0040,STR0080}) 	//"Afastamento"###"temporario por motivo de doenca, ate a 15 dias
aadd(aMovimento,{"Q1",STR0046,""}) 			//"Licenca Maternidade"
aadd(aMovimento,{"Q2",STR0047,""}) 	   		//"Prorrogacao Licenca Maternidade"
aadd(aMovimento,{"Q3",STR0048,STR0062}) 	//"Aborto"
aadd(aMovimento,{"Q4",STR0046,STR0081})		//"Licenca Maternidade"###"Adocao de crianca de ate 1 ano de idade."
aadd(aMovimento,{"Q5",STR0046,STR0082})		//"Licenca Maternidade"###"Adocao de crianca de 1 a 4 anos de idade."
aadd(aMovimento,{"Q6",STR0046,STR0083})		//"Licenca Maternidade"###"Adocao de crianca de 4 a 8 anos de idade."
aadd(aMovimento,{"R" ,STR0049,""}) 			//"Servico Militar"
aadd(aMovimento,{"R1",STR0240,""}) 			//"Prazo Determinado"
aadd(aMovimento,{"S2",STR0050,""})		 	//"Falecimento"
aadd(aMovimento,{"S3",STR0089,""})		 	//"Falecimento motivado por acidente do trabalho"
aadd(aMovimento,{"U1",STR0051,STR0052}) 	//"Aposentadoria"###"por tempo de servico/idade sem continuidade de vinculo empregaticio"
aadd(aMovimento,{"U2",STR0051,STR0053}) 	//"Aposentadoria"###"por tempo de servico/idade com continuidade de vinculo empregaticio"
aadd(aMovimento,{"U3",STR0051,STR0054}) 	//"Aposentadoria"###"por invalidez"
aadd(aMovimento,{"V3",STR0091,""}) 	   		//"Comissão"
aadd(aMovimento,{"W" ,STR0055,""}) 	   		//"Mandato Sindical"
aadd(aMovimento,{"X" ,STR0056,""}) 	  		//"Licenca sem vencimento"
aadd(aMovimento,{"Y" ,SubStr(STR0057,1,30),""}) 	//Afastamento"###"outros motivos de afastamento temporario"
aadd(aMovimento,{"Z1",STR0058,STR0046}) 	//"Retorno"###"Licenca Maternidade"
aadd(aMovimento,{"Z2",STR0058,STR0059}) 	//"Retorno"###"Acidente Trabalho"
aadd(aMovimento,{"Z3",STR0058,STR0060}) 	//"Retorno"###"novo afastamento temporario em decorrencia do mesmo acidente trabalho"
aadd(aMovimento,{"Z4",STR0058,STR0049}) 	//"Retorno"###"servico militar"
aadd(aMovimento,{"Z5",STR0058,STR0061}) 	//"Retorno"###"outros retornos de afastamento temporario e/ou licenca"
aadd(aMovimento,{"Z6",STR0058,""}) 			//"Retorno"###"retornos de afastamento temporario"
aadd(aMovimento,{"X1",STR0239,""}) 	  		//"Trabalhador com Contrato Verde e Amarelo"

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEM610   ºAutor  ³Microsiga           º Data ³  02/07/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function VerCodSaq(cFilAux, cMatAux, dDemissao, lGRRF, lMesAnt)

Local cCodSaqIOB:= ""
Local cCodSaq 	:= "**"
Local cGRRF 	:= "*"
Local cTpAvis	:= ""
Local lRet 		:= .F.
Local nPosTab	:= 0

Default lMesAnt := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Codigos de Saque Validos Segundo o Calendario de    Obrigacoes³
//³e Tabelas Praticas do IOB de Out/99 Paginas 62 a 68.          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCodSaqIOB := "01_02_03_04_05_06_07_10_23_26_27_80_81_86_87_88_91_92_93_94_95_96"

cTab		:= "S043"
cContrato 	:= SRA->RA_TPCONTR
cAnoMes		:= MesAno( IIf( Type("dAuxpar01") == "U" , dDemissao , dAuxpar01 ) )

If SRG->(dbSeek(cFilAux+cMatAux+MesAno(dDemissao)))
	nPosTab 	:= fPosTab(cTab,cAnoMes,"==",2,SRG->RG_TIPORES,"==",4) // Tipo de Rescisao
	If nPosTab == 0   // Tenta sem data de referencia
	   nPosTab 	:= fPosTab(cTab,SRG->RG_TIPORES,"==",4,,,) // Tipo de Rescisao
	EndIf
EndIf

If nPosTab > 0
	cTpAvis		:=	fTabela(cTab,nPosTab, 07) // Aviso Previo             
	cCodSaq		:=	fTabela(cTab,nPosTab, 19) // Codigo A.M.
	cGRRF		:=	fTabela(cTab,nPosTab, 11) // FGTS MES RESCISAO
	lMesAnt		:= 	fTabela(cTab,nPosTab, 10) == "S" // FGTS Mes anterior
EndIf

// Retorno Codigo Saque
IF (StrZero(Val(cCodSaq),2) $ cCodSaqIOB)
	lRet	:= .T.
EndIf

// Retorno calculo GRRF
IF cGRRF == 'S' .And. !(cTpAvis $ "T/B")
	lGRRF	:= .T.
Else
	lGRRF	:= .F.
EndIf

Return( lRet )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³fSimples  ºAutor  ³Microsiga           º Data ³  04/23/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                 	      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fSimples()

Local cTitulo	:=	""
Local MvParDef	:=	""
Local l1Elem 	:= .T.
Local MvPar		:= ""
Local oWnd
Local cTipoAu

Private aResul	:={}

cTipoAu :=	MV_PAR27

oWnd := GetWndDefault()
MvPar	:=	&(Alltrim(ReadVar()))		 // Carrega Nome da Variavel do Get em Questao
mvRet	:=	Alltrim(ReadVar())			 // Iguala Nome da Variavel ao Nome variavel de Retorno

cTitulo := STR0068 //"Imposto Simples"
aResul  := {STR0069,STR0070,STR0071,STR0072,STR0073,STR0074} //"Nao Optante"###"Optante"###"Optante-Faturam. >1.200"###"Nao Optante-PR"###"Nao Optante-Emp.Liminar"###"Optante-Emp.Liminar"

MvParDef	:=	"123456"

f_Opcoes(@MvPar,cTitulo,aResul,MvParDef,12,49,l1Elem,,1)		// Chama funcao f_Opcoes
&MvRet := If("*" $ mvpar,space(1),mvpar) 					   	// Devolve Resultado

Return



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³GPEM610   ºAutor  ³Microsiga           º Data ³  07/18/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function f610TrocaLetra(cCampo)
Local nI 		:= 0
Local cRetorno 	:= ""

For nI := 1 to Len( cCampo )
  If !(SubStr( cCampo,nI,1) $ "0#1#2#3#4#5#6#7#8#9# ")
		cRetorno += "0"
	Else
		cRetorno += SubStr( cCampo,nI,1)
	EndIf
Next nI

Return( cRetorno )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³BuscaCompet    ºAutor  ³Andreia Santos º Data ³  26/12/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna os Periodos e Numeros de Pagamento Abertos e       º±±
±±º          ³ Fechados, a partir da competencia passada.                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ cProcSel    - Processo                                     º±±
±±º          ³ cRotSel     - Roteiro                                      º±±
±±º          ³ cPeriodoDe  - Periodo Inicial                              º±±
±±º          ³ cNumPagDe   - Numero de Pagamento Inicial. Se "99" retorna º±±
±±º          ³               todos os numeros de pagamento.               º±±
±±º          ³ cPeriodoAte - Periodo Final                                º±±
±±º          ³ cNumPagAte  - Numero de Pagamento Final. Se "99" retorna   º±±
±±º          ³               todos os numeros de pagamento.               º±±
±±º          ³ aPerAberto  - Array que sera carregado com os per. abertos º±±
±±º          ³         Retorna apenas o periodo caso o numero de pagamentoº±±
±±º          ³         nao for passado.  - (aPerAberto[n][1]) 	    	  º±±
±±º          ³         Retorna o periodo e o numero de pagamento caso o   º±±
±±º          ³		   cNumPagDe/Ate for passado.  -                      º±±
±±º          ³		      (aPerAberto[n][1] e aPerAberto[n][2])           º±±
±±º          ³ aPerFechado - Array que sera carregado com os per. fechadosº±±
±±º          ³         Retorna apenas o periodo caso o numero de pagamentoº±±
±±º          ³         nao for passado.  - (aPerFechado[n][1]) 	    	  º±±
±±º          ³         Retorna o periodo e o numero de pagamento caso o   º±±
±±º          ³		   cNumPagDe/Ate for passado.  -                      º±±
±±º          ³		      (aPerFechado[n][1] e aPerFechado[n][2])         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPER040                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function BuscaCompet(	cAnoMes 	,;
						aPerAberto	,;
						aPerFechado	 )

Local aArea			:= GetArea()
Local cMes			:= SubStr(cAnoMes,5,2)
Local cAno			:= SubStr(cAnoMes,1,4)
Local cAliasRCH 	:= ""
Local cKey			:= ""
Local cPer			:= ""
Local bSkip			:= {}
Local aQueryCond    := {}
Local aRCHCols		:= {}
Local aRCHHeader	:= {}
Local aRCHVirtual	:= {}
Local aRCHVisual	:= {}
Local aRCHRecnos	:= {}
Local nRCHUsado		:= 0
Local nPosDtFech	:= 0
Local nPosPeriodo	:= 0
Local nPosNumPag	:= 0
Local nPosMes		:= 0
Local nPosAno		:= 0
Local nPosDtIni		:= 0
Local nPosDtFim		:= 0
Local nReg			:= 0
Local nNumPagto		:= 0
Local nPos1

cAliasRCH := "RCH"
dbSelectArea(cAliasRCH)
dbSetOrder(7)

aQueryCond		:= Array( 07)

aQueryCond[01]	:= " RCH_FILIAL = '" + xFilial("RCH") + "'"
aQueryCond[02]	:= "  AND "
aQueryCond[03]	:= " RCH_ANO = '" + cAno + "'"
aQueryCond[04]	:= "  AND "
aQueryCond[05]	:= " RCH_MES = '" + cMes + "'"
aQueryCond[06]	:= " AND "
aQueryCond[07]	:= " D_E_L_E_T_ = ' ' "

cKey 	:= xFilial("RCH") + cAno + cMes

bSkip	:= { ||	( ;
					RCH_ANO + RCH_MES  # cAno+cMes ;
				);
			}


aRCHCols := GdMontaCols(@aRCHHeader		,;	//01 -> Array com os Campos do Cabecalho da GetDados
						@nRCHUsado		,;	//02 -> Numero de Campos em Uso
						@aRCHVirtual	,;	//03 -> [@]Array com os Campos Virtuais
						@aRCHVisual		,;	//04 -> [@]Array com os Campos Visuais
						"RCH"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
						NIL				,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
						@aRCHRecnos		,;	//07 -> [@]Array unidimensional contendo os Recnos
						"RCH"		   	,;	//08 -> Alias do Arquivo Pai
						cKey			,;	//09 -> Chave para o Posicionamento no Alias Filho
						NIL				,;	//10 -> Bloco para condicao de Loop While
						bSkip			,;	//11 -> Bloco para Skip no Loop While
						NIL				,;	//12 -> Se Havera o Elemento de Delecao no aCols
						NIL				,;	//13 -> Se cria variaveis Publicas
						NIL				,;	//14 -> Se Sera considerado o Inicializador Padrao
						NIL				,;	//15 -> Lado para o inicializador padrao
						NIL				,;	//16 -> Opcional, Carregar Todos os Campos
						NIL			 	,;	//17 -> Opcional, Nao Carregar os Campos Virtuais
						aQueryCond		,;	//18 -> Opcional, Utilizacao de Query para Selecao de Dados
						.F.				,;	//19 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
						.T.				,;	//20 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
						NIL				,;	//21 -> Carregar Coluna Fantasma e/ou BitMap ( Logico ou Array )
						NIL			 	,;	//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
						NIL				,;	//23 -> Verifica se Deve Checar se o campo eh usado
						NIL			 	,;	//24 -> Verifica se Deve Checar o nivel do usuario
						.F.				 )	//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols

aPerAberto 	:= {}
aPerFechado	:= {}
nPosDtFech	:= GdFieldPos("RCH_DTFECH"	, aRCHHeader)
nPosPeriodo	:= GdFieldPos("RCH_PER"		, aRCHHeader)
nPosNumPag	:= GdFieldPos("RCH_NUMPAG"	, aRCHHeader)
nPosMes		:= GdFieldPos("RCH_MES"		, aRCHHeader)
nPosAno		:= GdFieldPos("RCH_ANO"		, aRCHHeader)
nPosDtIni	:= GdFieldPos("RCH_DTINI"	, aRCHHeader)
nPosDtFim	:= GdFieldPos("RCH_DTFIM"	, aRCHHeader)

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Se o Numero de Pagamento nao foi Passado                     ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
cNumPagDe 	:= 0
cNumPagAte 	:= 0
lNrPagto := .F.

For nReg := 1 to Len(aRCHCols)
	cPer		:= aRCHCols[nReg, nPosPeriodo]
	nNumPagto	:= If(Empty(Alltrim(aRCHCols[nReg, nPosNumPag])), 0, Val(aRCHCols[nReg, nPosNumPag]))

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Selecionar todos os numeros de pagamento do intervalo de ³
	³ periodo selecionado.    							       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If Empty(aRCHCols[nReg, nPosDtFech])
		If ( nPos1 := aScan(aPerAberto, {|x|	x[1] == cPer}) ) == 0
			aAdd(aPerAberto	, {cPer, ,aRCHCols[nReg, nPosMes],aRCHCols[nReg, nPosAno],aRCHCols[nReg, nPosDtini],aRCHCols[nReg, nPosDtFim]})
		Else
			aPerAberto[nPos1,6] := aRCHCols[nPos1,nPosDtFim]
		EndIf
	Else
		If ( nPos1 := aScan(aPerFechado, {|x|	x[1] == cPer}) ) == 0
			aAdd(aPerFechado, {cPer , ,aRCHCols[nReg, nPosMes],aRCHCols[nReg, nPosAno], aRCHCols[nReg, nPosDtini],aRCHCols[nReg, nPosDtFim]})
		Else
			APerFechado[nPos1,6] := aRCHCols[nPos1, nPosDtFim]
		EndIf
	EndIf

Next nReg

RestArea( aArea )

Return ( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEM610   ºAutor  ³Microsiga           º Data ³  12/26/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MontaArqTrab(cMatDe,cMatAte,nOrdem,cAliasTRB,cPeriodo)
Local cQuery 		:= ""
Local nX			:= 1
Local cNameDB		:= Upper(TcGetDb())
Local cSubStr 		:= If( "MSSQL" $ cNameDB, "SUBSTRING", "SUBSTR" )
Local nTotLoop 		:= 0
Local nLoop    		:= 0
Local aFields  		:= {}
Local lPlsAtiv		:= GetNewPar("MV_PLSATIV",.F.)
Local lChkBanco     := ((AllTrim(Upper(TcGetDb())) == 'INFORMIX') .OR. (AllTrim(Upper(TcGetDb())) == 'POSTGRES') .OR. (AllTrim(Upper(TcGetDb())) == 'ORACLE'))
Local cPer132		:= SubStr(cPeriodo,1,4) + "01"

cAliasTRB := "QTRAB"
cAlias13  := "QTR13"

If Select(cAlias13) > 0
	(cAlias13)->(dbCloseArea())
EndIf

If Select(cAliasTRB) > 0
	(cAliasTRB)->(dbCloseArea())
EndIf

If cRecol == "650" .and. nDissidio == 1 .and. MesAno(dAuxPar01) >= "200508" .and. MesAno(dAuxPar01)<= "200703"

	aStru := SRA->(dbStruct())

	If lChkBanco
		cQuery := "SELECT 'SRA' ORIGEM, CAST(RA_FILIAL AS CHAR("+alltrim(Str(FWSizeFilial()))+")) RA_FILIAL, RA_MAT, RA_CC "
	Else
		cQuery := "SELECT 'SRA' ORIGEM, RA_FILIAL, RA_MAT, RA_CC "
	EndIf

	cQuery += " FROM "+ RetSqlName("SRA")+ " RA "
	cQuery += " WHERE RA_FILIAL>= '"+ cFilDe + "'"
	cQuery += " AND RA_FILIAL<= '"+ cFilAte + "'"
	cQuery += " AND RA_MAT>= '"+ cMatDe + "'"
	cQuery += " AND RA_MAT <= '"+ cMatAte +"'"
	cQuery += " AND RA.D_E_L_E_T_ = ' ' "
	If nOrdem == 1
		cQuery	+= "ORDER BY "+SqlOrder("RA_FILIAL+RA_MAT")
	Else
   		cQuery	+= "ORDER BY "+SqlOrder("RA_FILIAL+RA_CC+RA_MAT")
	EndIf

	cQuery 		:= ChangeQuery(cQuery)

	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTRB,.T.,.T.)

	For nX := 1 To Len(aStru)
		If ( aStru[nX][2] <> "C" )
			TcSetField(cAliasTRB,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
		EndIf
	Next nX

Else
	aStru := SRC->(dbStruct())

	If ( nTipo == 1 ) .And. ( Month(dAuxPar01) == 12 )
		cQryRot13 := fCarRot13( .T. )
	Else
		cQryRot13 := "'VEX'"
	EndIf

	If lChkBanco
		cQuery := "SELECT CAST('SRC' AS CHAR(3)) ORIGEM,CAST(RC_FILIAL AS CHAR("+alltrim(Str(FWSizeFilial()))+")) RC_FILIAL,RC_MAT RC_MAT,RC_VALOR RC_VALOR,CAST(RC_PD AS CHAR(3)) RC_PD, RC_CC RC_CC,RC_DATA RC_DATA,RC_HORAS RC_HORAS, CAST(RC_ROTEIR AS CHAR(3)) RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
	Else
		cQuery := "SELECT 'SRC' ORIGEM,RC_FILIAL RC_FILIAL,RC_MAT RC_MAT,RC_VALOR RC_VALOR,RC_PD RC_PD, RC_CC RC_CC,RC_DATA RC_DATA,RC_HORAS RC_HORAS, RC_ROTEIR RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
	EndIf

	cQuery += " FROM "+ RetSqlName("SRC")+ " RC , "+RetSqlName("SRA")+ " RA "
	cQuery += " WHERE RC_FILIAL>= '"+ cFilDe + "'"
	cQuery += " AND RC_FILIAL<= '"+ cFilAte + "'"
	cQuery += " AND RC_MAT>= '"+ cMatDe + "'"
	cQuery += " AND RC_MAT <= '"+ cMatAte +"'"
	cQuery += " AND RC_ROTEIR NOT IN (" + cQryRot13 + ")"
	cQuery += " AND "
	cQuery +=  "RC_PERIODO	= '" + cPeriodo + "'"
	cQuery += " AND RC.D_E_L_E_T_ = ' ' "
	cQuery += " AND RA_FILIAL = RC_FILIAL"
	cQuery += " AND RA_MAT = RC_MAT "
	If lUsaPls
		cQuery += " AND RC_LOTPLS = 'PLSA825' "
	ElseIf lPlsAtiv
		cQuery += " AND RC_LOTPLS <> 'PLSA825' "
	EndIf
	cQuery += " AND RA.D_E_L_E_T_ = ' '"

	cQuery += " UNION ALL "

	If lChkBanco
		cQuery += " SELECT CAST('SRD' AS CHAR(3)) ORIGEM,CAST(RD_FILIAL AS CHAR("+alltrim(Str(FWSizeFilial()))+")) RC_FILIAL,RD_MAT RC_MAT,RD_VALOR RC_VALOR,CAST(RD_PD AS CHAR(3)) RC_PD, RD_CC RC_CC,RD_DATPGT RC_DATA, RD_HORAS RC_HORAS, CAST(RD_ROTEIR AS CHAR(3)) RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
	Else
		cQuery += " SELECT 'SRD' ORIGEM,RD_FILIAL RC_FILIAL,RD_MAT RC_MAT,RD_VALOR RC_VALOR,RD_PD RC_PD, RD_CC RC_CC,RD_DATPGT RC_DATA, RD_HORAS RC_HORAS, RD_ROTEIR RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
	EndIf

	cQuery += " FROM "+RetSqlName("SRD")+" RD, "+RetSqlName("SRA")+ " RA "
	cQuery += " WHERE RD_FILIAL>= '"+ cFilDe +"'"
	cQuery += " AND RD_FILIAL<= '"+ cFilAte +"'"
	cQuery += " AND RD_MAT>= '" +cMatDe+"'"
	cQuery += " AND RD_MAT <= '"+ cMatAte + "'"
	cQuery += " AND RD_ROTEIR NOT IN (" + cQryRot13 + ")"
	cQuery += " AND RD_PERIODO	= '" + cPeriodo + "'"
	cQuery += " AND ( RD_EMPRESA = ' ' OR RD_EMPRESA = '" + cEmpAnt + "')"
	cQuery += " AND RD.D_E_L_E_T_ = ' ' "
	cQuery += " AND RA_FILIAL = RD_FILIAL "
	cQuery += " AND RA_MAT = RD_MAT"
	If lUsaPls
		cQuery += " AND RD_LOTPLS = 'PLSA825' "
	ElseIf lPlsAtiv
		cQuery += " AND RD_LOTPLS <> 'PLSA825' "
	EndIf
	cQuery += " AND RA.D_E_L_E_T_ = ' ' "

	//inclui transferidos
	cQuery += " UNION ALL "

	If lChkBanco
		cQuery += "SELECT CAST('SRE' AS CHAR(3)) ORIGEM," + 'CAST(' + cSubStr + "(RE_FILIALP,1,"+alltrim(Str(FWSizeFilial()))+") AS CHAR(" + Str(FWSizeFilial()) + ")) RC_FILIAL,RE_MATP RC_MAT,0 RC_VALOR,CAST('   ' AS CHAR(3)) RC_PD, RE_CCP RC_CC,RE_DATA RC_DATA,0 RC_HORAS, CAST('TRF' AS CHAR(3)) RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
	Else
		cQuery += "SELECT 'SRE' ORIGEM," + cSubStr + "(RE_FILIALP,1,"+alltrim(Str(FWSizeFilial()))+") RC_FILIAL,RE_MATP RC_MAT,0 RC_VALOR,'   ' RC_PD, RE_CCP RC_CC,RE_DATA RC_DATA,0 RC_HORAS, 'TRF' RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
	EndIf

	cQuery += " FROM "+ RetSqlName("SRE")+ " RE , "+RetSqlName("SRA")+ " RA "
	cQuery += " WHERE RE_FILIALD>= '"+ cFilDe + "'"
	cQuery += " AND RE_FILIALD<= '"+ cFilAte + "'"
	cQuery += " AND RE_EMPD = '" + cEmpAnt + "'"
	cQuery += " AND RE_MATD>= '"+ cMatDe + "'"
	cQuery += " AND RE_MATD <= '"+ cMatAte +"'"
	cQuery += " AND RE.D_E_L_E_T_ = ' ' "

	If lChkBanco
		cQuery += " AND CAST("+ cSubStr + "(RE_DATA,1,6) AS CHAR(6))= '" + cPeriodo + "'"
		cQuery += " AND RA_FILIAL = CAST(" + cSubStr + "(RE_FILIALD,1,"+ alltrim(Str(FWSizeFilial()))+") AS CHAR(" + Str(FWSizeFilial()) + "))"
	Else
		cQuery += " AND "+ cSubStr + "(RE_DATA,1,6) = '" + cPeriodo + "'"
		cQuery += " AND RA_FILIAL = " + cSubStr + "(RE_FILIALD,1,"+alltrim(Str(FWSizeFilial()))+")"
	EndIf

	cQuery += " AND RA_MAT = RE_MATD "
	cQuery += " AND RE_DATA = (SELECT MAX(TKA.RE_DATA) FROM "+ RetSqlName("SRE")+ " TKA "
	cQuery += " WHERE TKA.RE_FILIALD= RE.RE_FILIALD AND TKA.RE_MATD = RE.RE_MATD "

	If lChkBanco
		cQuery += " AND CAST("+ cSubStr + "(TKA.RE_DATA,1,6) AS CHAR(6)) = '" + cPeriodo + "'"
	Else
		cQuery += " AND "+ cSubStr + "(TKA.RE_DATA,1,6) = '" + cPeriodo + "'"
	EndIf

	cQuery += " AND TKA.D_E_L_E_T_ = ' ')"
	cQuery += " AND RA.D_E_L_E_T_ = ' '"

	/*busca dados de funcionarios transferidos sem registro na SRE - E-social transferencia externa*/
	cQuery += " UNION ALL "

	If lChkBanco
		cQuery += "SELECT CAST('SRA' AS CHAR(3)) ORIGEM, CAST(RA_FILIAL AS CHAR("+AllTrim(STR(FWSizeFilial()))+")) RC_FILIAL, RA_MAT RC_MAT, 0 RC_VALOR, CAST('   ' AS CHAR(3)) RC_PD, RA_CC RC_CC, RA_DEMISSA RC_DATA, 0 RC_HORAS, CAST('EXT' AS CHAR(3)) RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
	Else
		cQuery += " SELECT 'SRA' ORIGEM, RA_FILIAL RC_FILIAL, RA_MAT RC_MAT, 0 RC_VALOR, '   ' RC_PD, RA_CC RC_CC,RA_DEMISSA RC_DATA,0 RC_HORAS, 'EXT' RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
	EndIf
	cQuery += " FROM " + RetSqlName("SRA") + " RA"
	cQuery += " WHERE RA.RA_FILIAL >= '" + cFilDe + "'"
	cQuery += " AND RA.RA_FILIAL <= '"+ cFilAte + "'"
	cQuery += " AND RA.RA_MAT >= '"+ cMatDe + "'"
	cQuery += " AND RA.RA_MAT <= '"+ cMatAte +"'"
	cQuery += " AND RA.RA_DEMISSA BETWEEN '"+cPeriodo+"01"+"' AND '"+ dtos(lastday(stod(cPeriodo+"01"))) +"'"
	cQuery += " AND RA.D_E_L_E_T_ = ' '"
	cQuery += " AND RA.RA_RESCRAI IN ('30','31')"
	cQuery += " AND RA.RA_SITFOLH='D'"
	If lChkBanco
		cQuery += " AND NOT EXISTS(SELECT RE_FILIAL FROM " + RetSqlName("SRE") + " WHERE RA_FILIAL = CAST(" + cSubStr + "(RE_FILIALD,1,"+ alltrim(Str(FWSizeFilial()))+") AS CHAR(" + Str(FWSizeFilial()) + ")) AND RE_MATD=RA.RA_MAT and RE_DATA BETWEEN '"+cPeriodo+"01"+"' AND '"+ dtos(lastday(stod(cPeriodo+"01"))) +"' AND D_E_L_E_T_='')"
	Else
		cQuery += " AND NOT EXISTS(SELECT RE_FILIAL FROM " + RetSqlName("SRE") + " WHERE RA_FILIAL = " + cSubStr + "(RE_FILIALD,1,"+alltrim(Str(FWSizeFilial()))+") AND RE_MATD=RA.RA_MAT and RE_DATA BETWEEN '"+cPeriodo+"01"+"' AND '"+ dtos(lastday(stod(cPeriodo+"01"))) +"' AND D_E_L_E_T_='')"
	EndIf
	cQuery += " AND NOT EXISTS(SELECT RD_FILIAL FROM " + RetSqlName("SRD") + " WHERE RD_FILIAL= RA.RA_FILIAL AND RD_MAT=RA.RA_MAT and RD_PERIODO = '"+cPeriodo+"'  AND ( RD_EMPRESA = ' ' OR RD_EMPRESA = '" + cEmpAnt + "') AND RD_ROTEIR NOT IN (" + cQryRot13 + ") AND D_E_L_E_T_='')"
	cQuery += " AND NOT EXISTS(SELECT RC_FILIAL FROM " + RetSqlName("SRC") + " WHERE RC_FILIAL= RA.RA_FILIAL AND RC_MAT=RA.RA_MAT and RC_PERIODO = '"+cPeriodo+"'  AND RC_ROTEIR NOT IN (" + cQryRot13 + ") AND D_E_L_E_T_='') "

	//Incluir os registros de 13º na query com valor zerado, apenas para que o arquivo seja montado caso não exista qualquer outro registro na SRC e SRD.
	If ( nTipo == 1 ) .And. ( Month(dAuxPar01) == 12 )

		cQuery += " UNION ALL "

		If lChkBanco
			cQuery += "SELECT CAST('SRC' AS CHAR(3)) ORIGEM,CAST(RC_FILIAL AS CHAR("+alltrim(Str(FWSizeFilial()))+")) RC_FILIAL,RC_MAT RC_MAT,0 RC_VALOR,CAST(RC_PD AS CHAR(3)) RC_PD, RC_CC RC_CC,RC_DATA RC_DATA,0 RC_HORAS, CAST(RC_ROTEIR AS CHAR(3)) RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
		Else
			cQuery += "SELECT 'SRC' ORIGEM,RC_FILIAL RC_FILIAL,RC_MAT RC_MAT,0 RC_VALOR,RC_PD RC_PD, RC_CC RC_CC,RC_DATA RC_DATA,0 RC_HORAS, RC_ROTEIR RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
		EndIf

		cQuery += " FROM "+ RetSqlName("SRC")+ " RC , "+RetSqlName("SRA")+ " RA "
		cQuery += " WHERE RC_FILIAL>= '"+ cFilDe + "'"
		cQuery += " AND RC_FILIAL<= '"+ cFilAte + "'"
		cQuery += " AND RC_MAT>= '"+ cMatDe + "'"
		cQuery += " AND RC_MAT <= '"+ cMatAte +"'"
		cQuery += " AND RC_ROTEIR IN (" + cQryRot13 + ")"
		cQuery += " AND "
		cQuery +=  "RC_PERIODO = '" + cPeriodo + "'"
		If lUsaPls
			cQuery += " AND RC_LOTPLS = 'PLSA825' "
		ElseIf lPlsAtiv
			cQuery += " AND RC_LOTPLS <> 'PLSA825' "
		EndIf
		cQuery += " AND RC.D_E_L_E_T_ = ' ' "
		cQuery += " AND RA_FILIAL = RC_FILIAL"
		cQuery += " AND RA_MAT = RC_MAT "
		cQuery += " AND RA.D_E_L_E_T_ = ' '"

		cQuery += " UNION ALL "

		If lChkBanco
			cQuery += " SELECT CAST('SRD' AS CHAR(3)) ORIGEM, CAST(RD_FILIAL AS CHAR("+alltrim(Str(FWSizeFilial()))+")) RD_FILIAL,RD_MAT,0 ,CAST(RD_PD AS CHAR(3)) RC_PD, RD_CC ,RD_DATPGT, 0, CAST(RD_ROTEIR AS CHAR(3)) RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
		Else
			cQuery += " SELECT 'SRD' ORIGEM, RD_FILIAL,RD_MAT,0 ,RD_PD, RD_CC ,RD_DATPGT, 0, RD_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
		EndIf

		cQuery += " FROM "+RetSqlName("SRD")+" RD, "+RetSqlName("SRA")+ " RA "
		cQuery += " WHERE RD_FILIAL>= '"+ cFilDe +"'"
		cQuery += " AND RD_FILIAL<= '"+ cFilAte +"'"
		cQuery += " AND RD_MAT>= '" +cMatDe+"'"
		cQuery += " AND RD_MAT <= '"+ cMatAte + "'"
		cQuery += " AND RD_ROTEIR IN (" + cQryRot13 + ")"
		cQuery += " AND RD_PERIODO	>= '" + cPer132 + "'" //Deve procurar pelo roteiro 132 no ano inteiro
		If lUsaPls
			cQuery += " AND RD_LOTPLS = 'PLSA825' "
		ElseIf lPlsAtiv
			cQuery += " AND RD_LOTPLS <> 'PLSA825' "
		EndIf
		cQuery += " AND ( RD_EMPRESA = ' ' OR RD_EMPRESA = '" + cEmpAnt + "')"
		cQuery += " AND RD.D_E_L_E_T_ = ' ' "
		cQuery += " AND RA_FILIAL = RD_FILIAL "
		cQuery += " AND RA_MAT = RD_MAT"
		cQuery += " AND RA.D_E_L_E_T_ = ' ' "

	EndIf

	If nOrdem == 1
		cQuery	+= "ORDER BY "+SqlOrder("RA_FILIAL+RA_MAT+RC_PD")
	ElseIf nOrdem == 2
		cQuery	+= "ORDER BY "+SqlOrder("RC_FILIAL+RC_CC+RC_MAT+RC_PD")
	ElseIf nOrdem == 3
		cQuery	+= "ORDER BY "+SqlOrder("RA_FILIAL+RA_CC+RA_MAT+RC_PD")
	EndIf

	cQuery 		:= ChangeQuery(cQuery)

	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTRB,.T.,.T.)

	For nX := 1 To Len(aStru)
		If ( aStru[nX][2] <> "C" )
			TcSetField(cAliasTRB,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
		EndIf
	Next nX

	//ÚÄÄÄÄÄÄÄÄÄÄÄ¿
	//³13o SALARIO³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( nTipo == 1 )

		cQryRot13 := fCarRot13()

		If lChkBanco
			cQuery := "SELECT CAST('SRC' AS CHAR(3)) ORIGEM, CAST(RC_FILIAL AS CHAR("+alltrim(Str(FWSizeFilial()))+")) RC_FILIAL, RC_MAT RC_MAT, RC_VALOR RC_VALOR, RC_PD RC_PD, RC_CC RC_CC, RC_DATA RC_DATA, RC_HORAS RC_HORAS, CAST(RC_ROTEIR AS CHAR(3)) RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
		Else
			cQuery := "SELECT 'SRC' ORIGEM,RC_FILIAL RC_FILIAL,RC_MAT RC_MAT,RC_VALOR RC_VALOR,RC_PD RC_PD, RC_CC RC_CC,RC_DATA RC_DATA,RC_HORAS RC_HORAS, RC_ROTEIR RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
		EndIf

		cQuery += " FROM "+ RetSqlName("SRC")+ " RC , "+RetSqlName("SRA")+ " RA "
		cQuery += " WHERE RC_FILIAL>= '"+ cFilDe + "'"
		cQuery += " AND RC_FILIAL<= '"+ cFilAte + "'"
		cQuery += " AND RC_MAT>= '"+ cMatDe + "'"
		cQuery += " AND RC_MAT <= '"+ cMatAte +"'"
		cQuery += " AND RC_ROTEIR IN (" + cQryRot13 + ")"
		cQuery += " AND "
		cQuery += " RC_PERIODO = '" + cPeriodo + "'"
		If lUsaPls
			cQuery += " AND RC_LOTPLS = 'PLSA825' "
		ElseIf lPlsAtiv
			cQuery += " AND RC_LOTPLS <> 'PLSA825' "
		EndIf
		cQuery += " AND RC.D_E_L_E_T_ = ' ' "
		cQuery += " AND RA_FILIAL = RC_FILIAL"
		cQuery += " AND RA_MAT = RC_MAT "
		cQuery += " AND RA.D_E_L_E_T_ = ' '"

		cQuery += " UNION ALL "

		If lChkBanco
			cQuery += " SELECT CAST('SRD' AS CHAR(3)) ORIGEM, CAST(RD_FILIAL AS CHAR("+alltrim(Str(FWSizeFilial()))+")) RC_FILIAL, RD_MAT RC_MAT ,RD_VALOR RC_VALOR ,RD_PD RC_PD, RD_CC RC_CC ,RD_DATPGT RC_DATA, RD_HORAS RC_HORAS, CAST(RD_ROTEIR AS CHAR(3)) RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
		Else
			cQuery += " SELECT 'SRD' ORIGEM,RD_FILIAL RC_FILIAL ,RD_MAT RC_MAT, RD_VALOR RC_VALOR, RD_PD RC_PD, RD_CC RC_CC, RD_DATPGT RC_DATA, RD_HORAS RC_HORAS, RD_ROTEIR RC_ROTEIR, RA_FILIAL, RA_MAT, RA_CC "
		EndIf

		cQuery += " FROM "+RetSqlName("SRD")+" RD, "+RetSqlName("SRA")+ " RA "
		cQuery += " WHERE RD_FILIAL>= '"+ cFilDe +"'"
		cQuery += " AND RD_FILIAL<= '"+ cFilAte +"'"
		cQuery += " AND RD_MAT>= '" +cMatDe+"'"
		cQuery += " AND RD_MAT <= '"+ cMatAte + "'"
		cQuery += " AND RD_ROTEIR IN (" + cQryRot13 + ")"
		cQuery += " AND RD_PERIODO >= '" + cPer132 + "'"
		If lUsaPls
			cQuery += " AND RD_LOTPLS = 'PLSA825' "
		ElseIf lPlsAtiv
			cQuery += " AND RD_LOTPLS <> 'PLSA825' "
		EndIf
		cQuery += " AND ( RD_EMPRESA = ' ' OR RD_EMPRESA = '" + cEmpAnt + "')"
		cQuery += " AND RD.D_E_L_E_T_ = ' ' "
		cQuery += " AND RA_FILIAL = RD_FILIAL "
		cQuery += " AND RA_MAT = RD_MAT"
		cQuery += " AND RA.D_E_L_E_T_ = ' ' "
		If nOrdem == 1
			cQuery	+= "ORDER BY "+SqlOrder("RA_FILIAL+RA_MAT+RC_PD")
		ElseIf nOrdem == 2
			cQuery	+= "ORDER BY "+SqlOrder("RC_FILIAL+RC_CC+RC_MAT+RC_PD")
		ElseIf nOrdem == 3
			cQuery	+= "ORDER BY "+SqlOrder("RA_FILIAL+RA_CC+RA_MAT+RC_PD")
		EndIf

		cQuery 		:= ChangeQuery(cQuery)

		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias13,.T.,.T.)

		For nX := 1 To Len(aStru)
			If ( aStru[nX][2] <> "C" )
				TcSetField(cAlias13,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
			EndIf
		Next nX

		//CRIA TABELA TEMPORARIA COM DADOS DO 13.SALARIO

		aStru13	:= (cAlias13)->(dbStruct())

		nTotLoop	:= Len(aStru13)

		For nLoop:=1 To nTotLoop
			AADD(aFields,{	aStru13[nLoop,1]   ,;
		       		        aStru13[nLoop,2]  	,;
					        aStru13[nLoop,3]  	,;
					        aStru13[nLoop,4]    }    )
		Next


		If Select("TMP") > 0
			TMP->(dbCloseArea())
		EndIf

		If oTmpTMP <> Nil
			oTmpTMP:Delete()
			oTmpTMP := Nil
		EndIf

		oTmpTMP := FWTemporaryTable():New("TMP",aFields)

		If nOrdem = 1
			cIndCond := "TMP->RA_FILIAL+TMP->RA_MAT"
			oTmpTMP:AddIndex( "INDCAG1", {"RA_FILIAL","RA_MAT"} )
		ElseIf nOrdem = 2
			cIndCond := "TMP->RC_FILIAL+TMP->RC_CC+TMP->RC_MAT"
			oTmpTMP:AddIndex( "INDCAG1", {"RC_FILIAL","RC_CC","RC_MAT"} )
		Else
			cIndCond := "TMP->RA_FILIAL+TMP->RA_CC+TMP->RA_MAT"
			oTmpTMP:AddIndex( "INDCAG1", {"RA_FILIAL","RA_CC","RA_MAT"} )
		EndIf

		oTmpTMP:Create()

		(cAlias13)->(DbGoTop())


		While (cAlias13)->(!Eof())
			Reclock("TMP",.T.)
			For nX := 1 to Len(aStru13)
				&("TMP->"+aStru13[nX][1]) := &("(cAlias13)->"+aStru13[nX][1])
			Next nX
			TMP->( MsUnlock() )
			(cAlias13)->(DbSkip())
		EndDo

	EndIf
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³f610Roteiro ºAutor  ³Kelly Soares      º Data ³  22/12/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³fOpcoes para selecionar roteiro(s) de calculo.              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function f610Roteiro(l1Elem, lTipoRet, aElem)

Local cTitulo	:= "Roteiro de Calculo"
Local nFor		:= 0
Local nElem		:= 0
Local MvPar
Local MvParDef	:= ""
Local MvRetor	:= ""
Local cTipoRot	:= If(MV_PAR14=1,"1*7*9","5*6*7*9")

Private aRot	:= {}
l1Elem := If (l1Elem = Nil , .F. , .T.)

DEFAULT lTipoRet 	:= .T.
DEFAULT aElem		:= {}

cAlias := Alias() 					// Salva Alias Anterior

IF lTipoRet
	MvPar:=&(Alltrim(ReadVar()))
	mvRet:=Alltrim(ReadVar())
EndIf

dbSelectArea("SRY")
If dbSeek(cFilial)
	CursorWait()
	While !Eof() .And. SRY->RY_FILIAL == cFilial
		If SRY->RY_TIPO $ cTipoRot
			Aadd(aRot, SRY->RY_CALCULO + " - " + Alltrim(SRY->RY_DESC))
			MvParDef += SRY->RY_CALCULO
		EndIf
		dbSkip()
	EndDo
	If Len(aElem) > 0
		For nElem := 1 to Len(aElem)
			Aadd(aRot, aElem[nElem])
			MvParDef += SubStr(aElem[nElem], 1, 3)
		Next nElem
	EndIf
	CursorArrow()
EndIf

IF lTipoRet
	IF f_Opcoes(@MvPar,cTitulo,aRot,MvParDef,,,l1Elem, GetSx3Cache("RY_CALCULO","X3_TAMANHO"))  // Chama funcao f_Opcoes
		CursorWait()
		For nFor := 1 To Len( mVpar ) Step 3
			IF ( SubStr( mVpar , nFor , 3 ) # "***" )
				mvRetor += SubStr( mVpar , nFor , 3 )
			EndIf
		Next nFor
		&MvRet := Alltrim(Mvretor)
		CursorArrow()
	EndIf
EndIf

dbSelectArea(cAlias)

Return( IF( lTipoRet , .T. , MvParDef ) )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fCarRot13   ºAutor  ³Kelly Soares      º Data ³  22/12/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Carrega roteiros de 13o.                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fCarRot13( lFolha )

Local aArea  := GetArea()
Local cRot13 := ""
Local cQuery := ""
Local cAlias := ""

Default lFolha	:= .F.

cAlias := GetNextAlias()
cQuery := "SELECT SRY.RY_CALCULO FROM " + RetSqlName("SRY") + " SRY "
cQuery += "WHERE SRY.RY_TIPO = '6'"
If lFolha
	cQuery += " OR SRY.RY_TIPO = 'K'"
EndIf
cQuery := ChangeQuery(cQuery)
dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.T.,.T.)

While (cAlias)->(!Eof())
	If !Empty(cRot13)
		cRot13 += " , "
	EndIf
	cRot13 += "'" + (cAlias)->RY_CALCULO + "'"
	(cAlias)->( DbSkip() )
EndDo

RestArea(aArea)

Return ( cRot13 )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fCarAfMat   ºAutor  ³Kelly Soares      º Data ³  31/01/07   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Carrega afastamentos por maternidade                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fCarAfMat(dIni,dFim)

Local aArea   := GetArea()
Local nDiaIni := 0

dbSelectArea( "SR8" )
If dbSeek(SRA->RA_FILIAL + SRA->RA_MAT)
	While !Eof() .And. SRA->RA_FILIAL+SRA->RA_MAT == SR8->R8_FILIAL+SR8->R8_MAT
		If RCM->( dbSeek(xFilial("RCM") + SR8->R8_TIPOAFA) )
			If "Q" $ RCM->RCM_CODSEF
				For nDiaIni := SR8->R8_DATAINI to SR8->R8_DATAFIM
					If dIni <= nDiaIni .And. nDiaIni <= dFim
						nDiasSM++
					EndIf
				Next nDiaIni
			EndIf
		EndIf
		dbSkip()
	EndDo
EndIf

RestArea(aArea)

Return ( Nil )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FVer13        ³ Autor ³ Kelly Soares     ³ Data ³ 02/02/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica valores referentes ao(s) roteiro(s) de 13.salario ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FVer13(aCodFol,nB13Inss,nB13Fgts,n13Inss, 				  ³±±
±±³          ³        nSc13Sal,cCusto,nOrdem)  					  		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function FVer13(aCodFol, nB13Inss, nB13Fgts, n13Inss, nSc13Sal, cCusto, nOrdem, lGRRF, nValor247)

Local cChave	:= ""
Local aGetArea	:= GetArea()

If nOrdem = 1
	cChave	 := SRA->RA_FILIAL+SRA->RA_MAT
ElseIf nOrdem = 2
	cChave 	 := SRA->RA_FILIAL+cCusto+SRA->RA_MAT
Else
	cChave	 := SRA->RA_FILIAL+SRA->RA_CC+SRA->RA_MAT
EndIf

If SRA->RA_SITFOLH == "D" .And. AnoMes(SRA->RA_DEMISSA) == AnoMes(dAuxPar01) .And. nValor247 > 0
	n2B13Fgts := 0
	n2B13Inss := 0
EndIf

If TMP->(DbSeek(cChave))

	While TMP->(!Eof()) .And. &cIndCond == cChave

		//--Somar Base de Inss e Inss quando for competencia 12 ou opcao de 13o.Salario
		If nTipo == 2 .Or. ( month(dAuxPar01) ==12 .and. Year(TMP->RC_DATA) == Year(dAuxPar01)) .or. cRecol $ "130"

			If TMP->RC_PD == aCodFol[19,1] .Or. TMP->RC_PD == aCodFol[20,1]
				 nB13Inss += Round(TMP->RC_VALOR,2)
				 nSc13sal += Round(TMP->RC_VALOR,2)
			EndIf
			If TMP->RC_PD == aCodFol[70,1]
				n13Inss += Round(TMP->RC_VALOR,2)
			EndIf

       EndIf

		If nTipo==1 .And.( MesAno(TMP->RC_DATA) = MesAno(dAuxPar01) .or. cRecol $ "130")  // Tipo 1-Folha/Ferias	   2-13o.Salario

			//--Somar Base de Fgts 13o. se for pago na Data de referencia
			//--Se funcionario for demitido e nao recolher GRRF
			If((!lGRRF .and. cSitFunc == 'D') .or. cSitFunc # 'D') .AND. TMP->RC_PD $ aCodFol[108,1]+"/"+aCodFol[1848,1]
				nB13Fgts += Round(TMP->RC_VALOR,2)
    		EndIf

       EndIf

		If RetValSrv( TMP->RC_PD, TMP->RC_FILIAL, "RV_INSS") == "S"
			If RetValSrv( TMP->RC_PD, TMP->RC_FILIAL, "RV_REF13") == "S"
				If RetValSrv( TMP->RC_PD, TMP->RC_FILIAL, "RV_TIPOCOD") == "1"
					n2B13Inss += Round(TMP->RC_VALOR,2)
				Else
					n2B13Inss -= Round(TMP->RC_VALOR,2)
				EndIf
			EndIf
		EndIf
		If RetValSrv( TMP->RC_PD, TMP->RC_FILIAL, "RV_FGTS") == "S"
			If RetValSrv( TMP->RC_PD, TMP->RC_FILIAL, "RV_REF13") == "S"
				If RetValSrv( TMP->RC_PD, TMP->RC_FILIAL, "RV_TIPOCOD") == "1"
					n2B13Fgts += Round(TMP->RC_VALOR,2)
				Else
					n2B13Fgts -= Round(TMP->RC_VALOR,2)
				EndIf
			EndIf
		EndIf

	   TMP->(DbSkip())

	EndDo

EndIf

RestArea( aGetArea )

Return Nil

Static Function fCompSefip()

Local nFlags   	:= PD_ISTOTVSPRINTER + PD_DISABLEORIENTATION
Local cCompPDF	:= ""
Local cSession	:= GetPrinterSession()
Local cDestino	:= fwGetProfString(cSession,"DEFAULT","c:\",.T.)
Local lTemDif	:= .F.
Local nContEmp	:= 0
Local nContFun	:= 0
Local nDifLin	:= 0

Private aTpAux	:= {}
Private cComp	:= ""
Private oPrinter:= Nil
Private oSetup  := Nil
Private nPagCont:= 0

If nTipo == 2 // Tipo 1-Folha/Ferias	   2-13o.Salario
	cComp := Right(Str(Year(mv_par01)),4)+"13"
Else
	cComp := Right(Str(Year(mv_par01)),4)+SubStr(DtoC(mv_par01),4,2)
EndIf

cCompPDF	:= SubStr(cComp, 5, 2) + SubStr(cComp, 1, 4)
cComp		:= SubStr(cComp, 5, 2) + "/" + SubStr(cComp, 1, 4)

dbSelectArea("RJHX")
dbGoTop()

While RJHX->( !EoF() )
	If RJHX->RJH_TIPO == "10"
		aAdd( aTpAux, {RJHX->RJH_INSC, AllTrim(SubStr(RJHX->RJH_TEXTO, 54, 40)), {}})
	EndIf
	If RJHX->RJH_TIPO == "20"
		aAdd( aTpAux, {RJHX->RJH_TOMAD, AllTrim(SubStr(RJHX->RJH_TEXTO, 54, 40)), {}})
	EndIf
	If RJHX->RJH_TIPO == "30" .And. (RJHX->RJH_FLAG == '0' .Or. RJHX->RJH_BFGTS != RJHX->RJH_2BFGTS .Or. RJHX->RJH_BFG13 != RJHX->RJH_2BFG13 .Or. RJHX->RJH_BINSS != RJHX->RJH_2BINSS .Or. RJHX->RJH_BIN13 != RJHX->RJH_2BIN13)
		nPosAux := aScan( aTpAux, { |x| x[1] == If(!Empty(RJHX->RJH_TOMAD), RJHX->RJH_TOMAD, RJHX->RJH_INSC) } )
		If nPosAux > 0
			aAdd( aTpAux[nPosAux,3], { RJHX->RJH_PIS, AllTrim(SubStr(RJHX->RJH_TEXTO, 54, 70)), RJHX->RJH_BFGTS, RJHX->RJH_2BFGTS, RJHX->RJH_BFG13, RJHX->RJH_2BFG13, RJHX->RJH_BINSS, RJHX->RJH_2BINSS, RJHX->RJH_BIN13, RJHX->RJH_2BIN13 } )
		EndIf
	EndIf
	RJHX->( dbSkip() )
EndDo

If Empty(aTpAux) .Or. aScan( aTpAux, { |x| !Empty(x[3]) } ) == 0
	MsgInfo(STR0235)//"Não foram encontradas divergências."
Else
	oSetup := FWPrintSetup():New(nFlags, "COMPSEFIP")
	oSetup:SetPropert(PD_PRINTTYPE   , 6)
	oSetup:SetPropert(PD_ORIENTATION , 2)
	oSetup:SetPropert(PD_DESTINATION , 2)
	oSetup:SetPropert(PD_MARGIN      , {10,10,10,10})
	oSetup:SetPropert(PD_PREVIEW,.T.)
	oSetup:aOptions[PD_VALUETYPE] := cDestino

	oPrinter := FWMSPrinter():New( 'SEFIPXFOLHA_'+cCompPDF, IMP_PDF , .F., , .T., , oSetup )
	oPrinter:SetPortrait()

	oPrinter:lServer := oSetup:GetProperty( PD_DESTINATION ) == AMB_SERVER
	//oPrinter:SetResolution( 75 )

	oPrinter:SetPaperSize(DMPAPER_A4)
	oPrinter:SetMargin(oSetup:GetProperty( PD_MARGIN )[1],oSetup:GetProperty( PD_MARGIN )[2],oSetup:GetProperty( PD_MARGIN )[3],oSetup:GetProperty( PD_MARGIN )[4])
	aMargRel := {oSetup:GetProperty( PD_MARGIN )[1],oSetup:GetProperty( PD_MARGIN )[2],oSetup:GetProperty( PD_MARGIN )[3],oSetup:GetProperty( PD_MARGIN )[4]}

	oPrinter:nDevice := IMP_PDF
	//fwWriteProfString(cSession,"DEFAULT", oSetup:aOptions[PD_VALUETYPE], .T.)
	oPrinter:cPathPDF := oSetup:aOptions[PD_VALUETYPE]

	nSizePage	:= oPrinter:nPageWidth / oPrinter:nFactorHor //Largura da página em cm dividido pelo fator horizontal, retorna tamanho da página em pixels
	nLin		:= aMargRel[2] + 10
	nCol		:= aMargRel[1] + 10
	nColTot		:= nSizePage-(aMargRel[1]+aMargRel[3])
	nLinTot		:= (oPrinter:nPageHeight / oPrinter:nFactorVert) - (aMargRel[2]+aMargRel[4])

	fNewPage()
	For nContEmp := 1 To Len(aTpAux)
		If !Empty(aTpAux[nContEmp, 3])
			If nLin+100 > nLinTot
				fNewPage()
			EndIf
			fCabecEmp(aTpAux[nContEmp, 1], aTpAux[nContEmp, 2])

			aSort( aTpAux[nContEmp, 3], , , { |x,y| x[1] < y[1] } )
		EndIf
		For nContFun := 1 To Len(aTpAux[nContEmp, 3])
			If nLin+100 > nLinTot
				fNewPage()
				fCabecEmp(aTpAux[nContEmp, 1], aTpAux[nContEmp, 2])
			EndIf

			nLin += 20
			oPrinter:Line( nLin, nCol+25	, nLin, nColTot-25	, 0 , ) 	// Linha Pos Data

			nLin += 2
			oPrinter:SayAlign(nLin,nCol+35,"PIS: " + cValToChar(aTpAux[nContEmp, 3, nContFun, 01]),oFontP,500,100,,ALIGN_H_LEFT)
			oPrinter:SayAlign(nLin,nCol+5,Upper(aTpAux[nContEmp, 3, nContFun, 02]),oFontP,500,100,,ALIGN_H_CENTER)

			nLin += 15
			oPrinter:Line( nLin, nCol+25	, nLin, nColTot-25	, 0 , ) 	// Linha Pos Data

			nLin += 10
			lTemDif := (aTpAux[nContEmp, 3, nContFun, 03] != aTpAux[nContEmp, 3, nContFun, 04])
			nDifLin := If( lTemDif, 0.5, 0 )
			oPrinter:SayAlign(nLin-10,nCol+35,"SEFIP",oFontM,500,100,,ALIGN_H_CENTER)
			oPrinter:SayAlign(nLin-10,nCol+35,"FOLHA",oFontM,389,100,,ALIGN_H_RIGHT)
			oPrinter:SayAlign(nLin,nCol+35,"Remuneração sem 13o: ",oFontM,500,100,,ALIGN_H_LEFT)
			oPrinter:SayAlign(nLin-nDifLin,nCol+35,Transform(aTpAux[nContEmp, 3, nContFun, 03],"@E 999,999.99"),If( lTemDif, oFontP, oFontM),500,100,,ALIGN_H_CENTER)
			oPrinter:SayAlign(nLin-nDifLin,nCol+35,Transform(aTpAux[nContEmp, 3, nContFun, 04],"@E 999,999.99"),If( lTemDif, oFontP, oFontM),400,100,,ALIGN_H_RIGHT)

			nLin += 10
			lTemDif := (aTpAux[nContEmp, 3, nContFun, 05] != aTpAux[nContEmp, 3, nContFun, 06])
			nDifLin := If( lTemDif, 0.5, 0 )
			oPrinter:SayAlign(nLin,nCol+35,"Remuneração sobre 13o: ",oFontM,500,100,,ALIGN_H_LEFT)
			oPrinter:SayAlign(nLin-nDifLin,nCol+35,Transform(aTpAux[nContEmp, 3, nContFun, 05],"@E 999,999.99"),If( lTemDif, oFontP, oFontM),500,100,,ALIGN_H_CENTER)
			oPrinter:SayAlign(nLin-nDifLin,nCol+35,Transform(aTpAux[nContEmp, 3, nContFun, 06],"@E 999,999.99"),If( lTemDif, oFontP, oFontM),400,100,,ALIGN_H_RIGHT)

			nLin += 10
			lTemDif := (aTpAux[nContEmp, 3, nContFun, 07] != aTpAux[nContEmp, 3, nContFun, 08])
			nDifLin := If( lTemDif, 0.5, 0 )
			oPrinter:SayAlign(nLin,nCol+35,"Base INSS Folha: ",oFontM,500,100,,ALIGN_H_LEFT)
			oPrinter:SayAlign(nLin-nDifLin,nCol+35,Transform(aTpAux[nContEmp, 3, nContFun, 07],"@E 999,999.99"),If( lTemDif, oFontP, oFontM),500,100,,ALIGN_H_CENTER)
			oPrinter:SayAlign(nLin-nDifLin,nCol+35,Transform(aTpAux[nContEmp, 3, nContFun, 08],"@E 999,999.99"),If( lTemDif, oFontP, oFontM),400,100,,ALIGN_H_RIGHT)

			nLin += 10
			lTemDif := (aTpAux[nContEmp, 3, nContFun, 09] != aTpAux[nContEmp, 3, nContFun, 10])
			nDifLin := If( lTemDif, 0.5, 0 )
			oPrinter:SayAlign(nLin,nCol+35,"Base INSS 13o: ",oFontM,500,100,,ALIGN_H_LEFT)
			oPrinter:SayAlign(nLin-nDifLin,nCol+35,Transform(aTpAux[nContEmp, 3, nContFun, 09],"@E 999,999.99"),If( lTemDif, oFontP, oFontM),500,100,,ALIGN_H_CENTER)
			oPrinter:SayAlign(nLin-nDifLin,nCol+35,Transform(aTpAux[nContEmp, 3, nContFun, 10],"@E 999,999.99"),If( lTemDif, oFontP, oFontM),400,100,,ALIGN_H_RIGHT)

			nLin += 20
			oPrinter:Line( nLin, nCol+25	, nLin, nColTot-25	, 0 , ) 	// Linha Pos Data
		Next nContFun
	Next nContEmp
	oPrinter:EndPage()
	oPrinter:Preview()
EndIf


Return

Static Function fNewPage()

nLin := aMargRel[2] + 10
nPagCont++

oPrinter:StartPage()

oPrinter:Box( nLin, nCol , nLin+43, nColTot, )			// Caixa da linha total
oPrinter:SayAlign(nLin+5,nCol+5,STR0224 + cNomeComp,oFontM,500,100,,ALIGN_H_LEFT)//"Empresa: "
oPrinter:SayAlign(nLin+5,nCol+5,STR0225,oFontM,500,100,,ALIGN_H_CENTER)//"Comparativo SEFIP X Folha"
oPrinter:SayAlign(nLin+5,nCol+5,STR0226 + cValToChar(nPagCont),oFontM,540,100,,ALIGN_H_RIGHT)//"Página: "

nLin += 10
oPrinter:SayAlign(nLin+5,nCol+5,STR0227 + cInscComp,oFontM,500,100,,ALIGN_H_LEFT)//"Inscrição: "

nLin += 10
oPrinter:SayAlign(nLin+5,nCol+5,STR0228 + cComp,oFontM,500,100,,ALIGN_H_LEFT)//"Competência: "
oPrinter:SayAlign(nLin+5,nCol+5,STR0229 + cRecol,oFontM,500,100,,ALIGN_H_CENTER)//"Cód. Recolhimento: "
oPrinter:SayAlign(nLin+5,nCol+5,STR0230 + If(nTipo == 1, STR0231, STR0232),oFontM,If(nTipo == 1, 565, 540),100,,ALIGN_H_RIGHT)//"Tipo: "##"Folha      "##"13º Salário"

nLin += 20

Return

/*
*
*
*/
Static Function fCabecEmp( cInscEmp, cNomeEmp)

nLin += 20
oPrinter:Line( nLin, nCol+5	, nLin, nColTot-5	, 0 , ) 	// Linha Pos Data

nLin += 2
oPrinter:SayAlign(nLin,nCol+10,STR0227 + cInscEmp,oFontP,500,100,,ALIGN_H_LEFT)//"Inscrição: "
oPrinter:SayAlign(nLin,nCol+5,cNomeEmp,oFontP,500,100,,ALIGN_H_CENTER)

nLin += 15
oPrinter:Line( nLin, nCol+5	, nLin, nColTot-5	, 0 , ) 	// Linha Pos Data

Return

/*/{Protheus.doc} EnviaAdmis
Verifica se deve gerar o registro tipo 32 na admissão do funcionário
@author cicero.pereira
@since 04/04/2018
@return lEnvia, .T. gera o registro
/*/
Static Function EnviaAdmis()

	lEnvia := .F.

	If MesAno(SRA->RA_ADMISSA) == cAnoMes .And. SRA->RA_ADMISSA >= cToD("11/11/2017")
		lEnvia:= .T.
	EndIf

Return lEnvia


/*/{Protheus.doc} fCarPd00
Carrega as verbas de afastamento com incidência 00 cadastradas na RCM
@author Allyson Mesashi
@since 04/03/2021
@version P12.1.27
/*/
Function fCarPd00()

Local aRet		:= {}
Local cTmpAlias := ""
Local cFilRCM  	:= "%'" + xFilial("RCM") + "'%"

If lTemPdSup
	cTmpAlias := GetNextAlias()
	BeginSql alias cTmpAlias
		SELECT RCM.RCM_PDSUP
		FROM %table:RCM% RCM 
		WHERE RCM.RCM_FILIAL = %exp:cFilRCM%
			AND RCM.RCM_PDSUP <> '   '
			AND RCM.D_E_L_E_T_= ' ' 
	EndSql

	While !(cTmpAlias)->( Eof() )
		aAdd(aRet, (cTmpAlias)->RCM_PDSUP)	
		(cTmpAlias)->( dbSkip() )
	EndDo

	(cTmpAlias)->( dbCloseArea() )
EndIf

Return aRet
