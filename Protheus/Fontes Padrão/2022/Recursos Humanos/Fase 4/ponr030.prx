#include 'PONR030.CH'
#Include 'FiveWin.ch'
#Include 'Poncalen.ch' 
#include 'Protheus.CH'
#INCLUDE "report.ch"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ PONR030  ³ Autor ³ J.Ricardo             ³ Data ³ 07.04.96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Relat¢rio de Presentes / Ausentes                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PONR030(void)                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±³Mauricio MR ³16/10/01³------³ Correcao quebra de Turno/Seq da Tabela	  ³±±
±±³Mauricio MR ³21/10/01³010600³ Implementacao de identificacao de presen-³±±
±±³            ³        ³      ³ ca e ausencia por jornadas.    	  	  ³±±  
±±³Mauricio MR ³13/11/01³------³ Correcao Impressao Ano com 4 digitos.    ³±±
±±³Marinaldo   ³19/11/01³Melhor³A funcao GetMarcacoes passara a utilizar a³±±
±±³            ³--------³------³Funcao fDiasFolga() para Verificar as  Fol³±±
±±³            ³--------³------³gas Automaticas.						  ³±±  
±±³Mauricio MR ³27/11/01³Melhor³ Impressao de Cabecalho UNICO para todos  ³±±
±±³            ³        ³------³ os funcionarios quando for solicitada a  ³±±
±±³            ³        ³------³ verificacao de somente 1(um) Dia.        ³±±
±±³Mauricio MR ³28/11/01³Melhor³ Melhoria na Performance com Limitacao da ³±±
±±³            ³        ³------³ Classificacao de Jornadas e Selecao das  ³±±
±±³            ³        ³------³ marcacoes.                               ³±±
±±³Mauricio MR ³11/12/01³Melhor³ Impressao do Cracha do Funcionario.      ³±±
±±³Mauricio MR ³14/01/02³Melhor³ Alteracao do Pergunte para uma melhor Com³±± 
±±³            ³        ³------³ preensao da verificacao das jornadas.    ³±±
±±³=======================================================================³±± 
±±³                         *** Versao 7.10 ***                           ³±± 
±±³=======================================================================³±± 
±±³Mauricio MR ³21/02/02³Melhor³A)Retirada de Perguntas pois foram trans- ³±± 
±±³            ³        ³      ³feridas para o SX1.                       ³±± 
±±³Mauricio MR ³07/03/02³Melhor³ Acrescido novas Perguntas/Parametros -SX1³±± 
±±³            ³        ³      ³ p/Verif. Inicio de jornada e para forne -³±± 
±±³            ³        ³------³ cer a Hora de checagem das Jornadas.     ³±±
±±³Mauricio MR ³15/01/04³Acerto³ Verificacao de Afastamento tipo ferias   ³±± 
±±³            ³        ³      ³ para Ausentes em virtude de mudanca na   ³±± 
±±³            ³        ³      ³ montagem do calendario (PonxFun) onde os ³±± 
±±³            ³        ³      ³ dias para o periodo do afastamento passa ³±± 
±±³            ³        ³      ³ ram a ser considerados como nao trabalha ³±± 
±±³            ³        ³      ³ dos.									  ³±±
±±³Luiz Gustavo³05/02/07³      ³Retiradas funcoes de ajuste de dicionario.³±± 
±±³=======================================================================³±± 
±±³                         *** Versao 9.12 ***                           ³±± 
±±³=======================================================================³±± 
±±³Leandro Dr  ³24/03/08³Melhor³Inclusão de chave processo/periodo/roteiro³±± 
±±³            |        |      |NumPagto. Impressao por data ou periodo   ³±± 
±±³Francisco Jr³12/01/10³000430³Compatibilizado para Gestao Corporativa.  ³±± 
±±³            |        |  2010|                                          ³±± 
±±³Aldo Marini ³08/04/11³004537³Conversao para TReport                    ³±± 
±±³            ³        ³  2011³                                          ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function PONR030()
Local	oReport   
Local	aArea 		:= GetArea()
Private	cString		:= "SRA"				// alias do arquivo principal 
Private cPerg		:= "PN030RA"
Private aOrd    	:= { STR0004 , STR0005 , STR0006 , STR0007 , STR0024 , STR0042} // 'Matricula'###'Centro de Custo'###'Nome'###'Turno'###'C.Custo+Nome'###'Departamento'
Private cTitulo		:= OemToAnsi(STR0011)			//'Relatorio de Presentes ou Ausentes'
Private cAliasQry	:= ""
Private nColPro		:= 0
Private cProcesso 	:= Nil
Private cPeriodo  	:= Nil
Private cRoteiro  	:= Nil
Private cNumPagto 	:= Nil

If __cRDD == "TOPCONN" .And. ;	// Verifica se esta utilizando ambiente TOP
	GetRpoRelease("R5").And. ;	// Verifica se esta no Release 11.5
	TRepInUse()					// Verifica se Imprime em formato personalizavel

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se deve imprimir por resultados ou apontamentos     ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If fOpcRadio(@nColPro, STR0001,;      //"Espelho de Ponto"
						   STR0035,;      //"Selecione a opcao de impressao:"
				   		   STR0036,;      //"Por Periodo"
				   		   STR0037 ) == 0 //"Por Datas"
		Return
	EndIf
		
	cPerg := IF(nColPro == 1,"PN030RA","PN030RB")	

	pergunte(cPerg,.F.) 

    oReport := ReportDef()
    oReport:PrintDialog()
Else
 	PONR030R3()
EndIF    

RestArea( aArea )

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³ ReportDef  ³ Autor ³ Totvs IP RH           ³ Data ³29/03/2011³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Relatorio de Presentes/ Ausentes                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PONR030                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR030 - Generico - Release 4                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ReportDef()
Local oReport 
Local oSection1 
Local oSection2 
Local bBlkFil := { || If ( cCodFilial != (cAliasQry)->RA_FILIAL, Eval( { || fInfo(@aInfo,(cAliasQry)->RA_FILIAL), aInfo[3] } ), aInfo[1] ) }

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao dos componentes de impressao                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DEFINE REPORT oReport NAME "PONR030" TITLE cTitulo PARAMETER cPerg ACTION {|oReport| PN030Imp(oReport)} DESCRIPTION OemtoAnsi(STR0056) TOTAL IN COLUMN // "Este programa emite Relacao dos Funcionarios Presentes ou Ausentes."

	oSection1 := TRSection():New( oReport, OemToAnsi(STR0057), {"SRA","CTT","SR6"}, aOrd,,,,,.F.,.F.) // "Funcionarios"

		TRCell():New(oSection1,"RA_FILIAL","SRA",,/*Picture*/,8,/*lPixel*/,{|| 	If(!Empty((cAliasQry)->RA_FILIAL),;
																								cCodFilial:= (cAliasQry)->RA_FILIAL,;
																								NIL),;
																								cCodFilial}	)
		TRCell():New(oSection1,"FILIAL","",OemToAnsi(STR0058),/*Picture*/,15,/*lPixel*/,{|| Eval( bBlkFil ) },,.T.)	// "Desc.Filial"

		TRCell():New(oSection1,"RA_MAT"		,"SRA",,,6)
		TRCell():New(oSection1,"RA_NOME"	,"SRA",,,25,,,,.T.)
		TRCell():New(oSection1,"RA_CC"		,"SRA",OemToAnsi(STR0079),,9)	// "C.Custo"
		TRCell():New(oSection1,"CTT_DESC01"	,"CTT",,,20,,,,.T.)
		TRCell():New(oSection1,"RA_TNOTRAB"	,"SRA",OemToAnsi(STR0077),,3)	// "Tno"
		TRCell():New(oSection1,"R6_DESC"	,"SR6",,,15,,,,.T.)
		TRCell():New(oSection1,"RA_DEPTO"	,"SRA",OemToAnsi(STR0078),,9)	// Depto
		TRCell():New(oSection1,"QB_DESCRIC"	,"SQB",,,20,,,,.T.)

	oSection2 := TRSection():New( oSection1, OemToAnsi(STR0059) )	 //"Marcações"

		TRCell():New( oSection2, "DATA"		, "" ,OemToAnsi(STR0060)      ,,10)	// "Data"

		TRCell():New( oSection2, "HP1"		, "" ,OemToAnsi(STR0061),,11,,,,,,,,.F.)	// "1a.E. 1a.S."
		TRCell():New( oSection2, "HP2"		, "" ,OemToAnsi(STR0062),,11,,,,,,,,.F.)	// "2a.E. 2a.S."
		TRCell():New( oSection2, "HP3"		, "" ,OemToAnsi(STR0063),,11,,,,,,,,.F.)	// "3a.E. 3a.S."
		TRCell():New( oSection2, "HP4"		, "" ,OemToAnsi(STR0064),,11,,,,,,,,.F.)	// "4a.E. 4a.S."

		TRCell():New( oSection2, "HR1"		, "" ,OemToAnsi(STR0065),,11,,,,,,,,.F.)	// "1a.E. 1a.S."
		TRCell():New( oSection2, "HR2"		, "" ,OemToAnsi(STR0066),,11,,,,,,,,.F.)	// "2a.E. 2a.S."
		TRCell():New( oSection2, "HR3"		, "" ,OemToAnsi(STR0067),,11,,,,,,,,.F.)	// "3a.E. 3a.S."
		TRCell():New( oSection2, "HR4"		, "" ,OemToAnsi(STR0068),,11,,,,,,,,.F.)	// "4a.E. 4a.S."
		TRCell():New( oSection2, "HR5"		, "" ,OemToAnsi(STR0069),,11,,,,,,,,.F.)	// "5a.E. 5a.S."

		TRCell():New( oSection2, "CRACHA"	, "" ,OemToAnsi(STR0070),,6)	// "Cracha"

		TRCell():New( oSection2, "PROCESSO"	, "" ,OemToAnsi(STR0073),,5)	// "Processo"
		TRCell():New( oSection2, "PERIODO"	, "" ,OemToAnsi(STR0074),,6)	// "Periodo"	
		TRCell():New( oSection2, "ROTEIRO"	, "" ,OemToAnsi(STR0075),,3)	// "Rot"
		TRCell():New( oSection2, "NUMPAGTO"	, "" ,OemToAnsi(STR0076),,2)	// "NP"

Return(oReport)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³ PN030Imp   ³ Autor ³ Totvs IP RH           ³ Data ³29/03/2011³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Impressao do relatorio em TReport                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PN030Imp(oReport)                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oReport                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR030 - Generico - Release 4                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function PN030Imp(oReport)

Local oSection  := oReport:Section(1)
Local oSection1 := oReport:Section(1):Section(1)
Local cFiltro 	:= "" 
Local cSitQuery	:= ""    
Local cCatQuery	:= ""  
Local cQryWhere	:= ""
Local nReg		:= 0

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis de Acesso do Usuario                               ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Local cAcessaSRA	:= &( " { || " + ChkRH( "PONR030" , "SRA" , "2" ) + " } " )
Local aPerAberto    := {}
Local aPerFechado   := {}
Local aVerbasFunc   := {}
Local aVerbas       := {}
Local x				:= 0

Local cArqMov	:= cAliasMov := cAliasRI := cArqMovRI := ""
Local nInss 	:= nSalAte   := nSalAci  := 0
Local cTitCC	:= "" 
Local cTitFil	:= ""
Local aOrdBag	:= {}
Local aOrdBagRI	:= {}
Local aTInss	:= {}   
Local aSortTinss:= {}
Local aCodFol	:= {}
Local nRcValor	:= 0
Local xQuebra
Local cOrdem 	:= ""
Local cFilSRACTT:= ""
Local cFilSRASR6:= ""
Local cFilSRASQB:= ""
Local nPre 		:= 0
Local nHr 		:= 0

Local aPrevisto  	:= {}
Local aRealizado   	:= {}
Local aFun          := {}
Local nCal       	:= 1
Local nX            := 0
Local cPrevisto  	:= ''
Local cRealizado 	:= '' 
Local cDet       	:= ''
Local dDtAfas    	:= CtoD('  /  /  ')
Local dDtRet     	:= CtoD('  /  /  ')
Local nLenCalend	:= 0
Local nLenMarc 	    := 0
Local nLenPrev		:= 0 
Local nLenaJornada  := 0
Local nOcorr		:= 0 
Local aOcorr		:=	{}
Local aJornada		:=	{}
Local nPosjrn		:=	0
Local nPosocor		:=	0
Local cOcorr		:=	''
Local nNumMarc		:=	0
Local cTipoDia      :=  ''
Local nQtdeHoras    :=  0
Local dData			:= Ctod('')
Local aHorarios     := {}
Local lOcorr		:= .F.
Local lAfastado		:= .F.
Local lMod			:= .F.
Local lPar			:= .F.
Local cFunRegra		:= ""
Local lPrintHeader 	:= .F.
Local aErro	  		:= {}

Private nOrdem		:= oSection:GetOrder()
Private aInfo		:= {}
Private cCodFilial	:= "##"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Private(Programa)                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cFor       := ''
Private cIndCond   := ''
Private dPerIni    := CtoD('  /  /  ')
Private dPerFim    := CtoD('  /  /  ')
Private aTurnos    := {}
Private aTabPadrao := {}
Private nPagAtu    := 1
Private lUmDia	   := .F.      

Private	cTnoAnt 	:= Replicate("ú", GetSx3Cache("RA_TNOTRAB", "X3_TAMANHO"))
Private	cCcAnt  	:= Replicate("!", GetSx3Cache("RA_CC", "X3_TAMANHO"))
Private aProvis		:= {}

Private aTabCalend	:= {} 
Private aMarcacoes	:= {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis de para geração do Log de ocorrências		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cTitle     := ""
Private aLogErr030 := {}
Private aErroTot   := {}

Private	cDeptoR   := ""
Private	cFilialR  := ""
Private	cCcR      := ""
Private	cTurR     := ""
Private	cMatR     := ""
Private	cNomR     := ""
Private	cSit      := ""
Private	cCat      := ""
Private	lAusente  := ""
Private	lCCTur    := ""
Private	lNaoVerifJrn := .F.
Private	cJornadas := ""
Private	lTodasJrn := .F.
Private	lCracha   := .F.
Private	lCkIniJorn:= .F.
Private	nHora	  := 0
Private	nAfast	  := 0

Private lPeriodo  := .F.

Private aChave		:= {}
Private nSerHoraCk
Private oPeriodo    := RHPERIODO():New()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando variaveis mv_par?? para Variaveis do Sistema.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nColPro == 1 ) // Perguntas PN030RA
	lPeriodo := .T.

	// Perguntas PN030RA
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis utilizadas para parametros                         ³
	//³ MV_PAR01        //  Processo                                 ³
	//³ MV_PAR02        //  Periodo                                  ³
	//³ MV_PAR03        //  Roteiro                                  ³
	//³ MV_PAR04        //  Numero de Pagamento                      ³
	//³ MV_PAR05        //  Departamento                             ³
	//³ MV_PAR06        //  Filial                                   ³
	//³ MV_PAR07        //  Centro de Custo                          ³
	//³ MV_PAR08        //  Turno                                    ³
	//³ MV_PAR09        //  Matricula                                ³
	//³ MV_PAR10        //  Nome                                     ³
	//³ MV_PAR11        //  Situacao                                 ³
	//³ MV_PAR12        //  Categoria                            	 ³
	//³ MV_PAR13        //  Presentes ou Ausentes                	 ³
	//³ MV_PAR14        //  Listar CC em outra pagina                ³
	//³ MV_PAR15        //  Verificar as Jornadas do Dia      		 ³
	//³ MV_PAR16        //  Quais as Jornadas 			     		 ³
	//³ MV_PAR17        //  Presenca/Ausencia (Em Todas ou Pelo - 1) ³
	//³ MV_PAR18        //  Listar Crachas Provisorios               ³
	//³ MV_PAR19        //  Verificar Inicio de Jornadas             ³
	//³ MV_PAR20        //  Hora limite para checar Inicio Jornadas  ³
	//³ MV_PAR21        //  Lista Funcionairo em Férias				 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cProcesso := mv_par01			//Processo
	cPeriodo  := mv_par02			//Periodo
	cRoteiro  := mv_par03			//Roteiro
	cNumPagto := mv_par04			//Numero de Pagamento
	cDeptoR   := mv_par05			//Depto De
	cFilialR  := mv_par06
	cCcR      := mv_par07
	cTurR     := mv_par08
	cMatR     := mv_par09
	cNomR     := mv_par10
	cSit      := mv_par11
	cCat      := mv_par12
	lAusente  := If(mv_par13 == 1,.T.,.F.)
	lCCTur    := If(mv_par14 == 1,.T.,.F.)
	lNaoVerifJrn := If(mv_par15==2,.T.,.F.) // .T. - Nao Verifica Jornadas
	cJornadas := mv_par16  //-- Jornadas Escolhidas para verificacao
	lTodasJrn := If(mv_par17 ==1 .AND. Len(Alltrim(StrTran(mv_par16,"*","")))>3,.T.,.F.) // .T. Considerar Ocorrencia de Ausencia/Presenca em Todas as Jornadas(Valido apenas para escolha de 2 ou mais jornadas a serem verificadas)
	lCracha   := If(mv_par18 == 1,.T.,.F.) //.T. Imprime Cracha
	lCkIniJorn:= If(mv_par19 == 1,.T.,.F.) //.T. Checa inicio de jornada
	nHora	  := mv_par20
	nAfast	  := mv_par21   //1 - Ferias, 2 - Afastamento, 3 - Ambos
Else	// Perguntas PN030RB

	// Perguntas PN030RB
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis utilizadas para parametros                         ³
	//³ MV_PAR01        //  Processo                                 ³
	//³ MV_PAR02        //  Data Inicio                              ³
	//³ MV_PAR03        //  Data Final                               ³
	//³ MV_PAR04        //  Departamento                             ³
	//³ MV_PAR05        //  Filial                                   ³
	//³ MV_PAR06        //  Centro de Custo                          ³
	//³ MV_PAR07        //  Turno                                    ³
	//³ MV_PAR08        //  Matricula                                ³
	//³ MV_PAR09        //  Nome                                     ³
	//³ MV_PAR10        //  Situacao                                 ³
	//³ MV_PAR11        //  Categoria                            	 ³
	//³ MV_PAR12        //  Presentes ou Ausentes                	 ³
	//³ MV_PAR13        //  Listar CC em outra pagina                ³
	//³ MV_PAR14        //  Verificar as Jornadas do Dia      		 ³
	//³ MV_PAR15        //  Quais as Jornadas 			     		 ³
	//³ MV_PAR16        //  Presenca/Ausencia (Em Todas ou Pelo - 1) ³
	//³ MV_PAR17        //  Listar Crachas Provisorios               ³
	//³ MV_PAR18        //  Verificar Inicio de Jornadas             ³
	//³ MV_PAR19        //  Hora limite para checar Inicio Jornadas  ³
	//³ MV_PAR20        //  Lista Funcionairo em Férias				 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lPeriodo := .F.
	cProcesso := mv_par01			//Processo
	dPerIni   := mv_par02
	dPerFim   := mv_par03
	cDeptoR   := mv_par04			//Depto De
	cFilialR  := mv_par05
	cCcAR     := mv_par06
	cTurR     := mv_par07
	cMatR     := mv_par08
	cNomR     := mv_par09
	cSit      := mv_par10
	cCat      := mv_par11
	lAusente  := If(mv_par12 == 1,.T.,.F.)
	lCCTur    := If(mv_par13 == 1,.T.,.F.)
	lNaoVerifJrn := If(mv_par14==2,.T.,.F.) // .T. - Nao Verifica Jornadas
	cJornadas := mv_par15  //-- Jornadas Escolhidas para verificacao
	lTodasJrn := If(mv_par16 ==1 .AND. Len(Alltrim(StrTran(mv_par15,"*","")))>3,.T.,.F.) // .T. Considerar Ocorrencia de Ausencia/Presenca em Todas as Jornadas(Valido apenas para escolha de 2 ou mais jornadas a serem verificadas)
	lCracha   := If(mv_par17 == 1,.T.,.F.) //.T. Imprime Cracha
	lCkIniJorn:= If(mv_par18 == 1,.T.,.F.) //.T. Checa inicio de jornada
	nHora     := mv_par19
	nAfast	  := mv_par20   //1 - Ferias, 2 - Afastamento, 3 - Ambos
EndIf

If lPeriodo
	oPeriodo:cProcesso := cProcesso
	oPeriodo:cPeriodo  := cPeriodo
	oPeriodo:cRoteiro  := cRoteiro
	oPeriodo:cNumPagto := cNumPagto
	
	oPeriodo:GetPer()
	
	If !(oPeriodo:lFound )
		MsgInfo( OemToAnsi( oPeriodo:cMsgNotFoundPer ) )    //"Período de Apontamento não encontrado."
		Return
	EndIf
	
	dPerIni := oPeriodo:dDataIni
	dPerFim := oPeriodo:dDataFim
Else
	oPeriodo:dDataIni := dPerIni
	oPeriodo:dDataFim := dPerFim	
EndIf

lUmdia	  := If(dPerIni==dPerFim,.T.,.F.) //.T. verifica 1 (um) Dia Apenas

nSerHoraCk:= fDHtoNS(dPerFim,nHora)  // Hora inicio de Jornadas

SRA->(dbSetOrder(1))

cTitulo := OemToAnsi(STR0014 + " " + If(lAusente,STR0015 ,STR0016 )) // 'Relatorio de '###'Ausentes'###'Presentes'

//-- Altera o titulo do relatorio
oReport:SetTitle(cTitulo)

cAliasQry := GetNextAlias()

//-- Modifica variaveis para a Query
For nReg:=1 to Len(cSit)
	cSitQuery += "'"+Subs(cSit,nReg,1)+"'"
	If ( nReg+1 ) <= Len(cSit)
		cSitQuery += "," 
	Endif
Next nReg        

cCatQuery := ""
For nReg:=1 to Len(cCat)
	cCatQuery += "'"+Subs(cCat,nReg,1)+"'"
	If ( nReg+1 ) <= Len(cCat)
		cCatQuery += "," 
	Endif
Next nReg        

//Transforma parametros do tipo Range em expressao ADVPL para ser utilizada no filtro
MakeSqlExpr(cPerg)
	
BEGIN REPORT QUERY oSection

cFilSRACTT	:= "%" + FWJoinFilial("SRA", "CTT") + "%"
cFilSRASR6	:= "%" + FWJoinFilial("SRA", "SR6") + "%"	
cFilSRASQB	:= "%" + FWJoinFilial("SRA", "SQB") + "%"	

// Monta o Where da query 
cQryWhere := "% SRA.RA_SITFOLH IN ("+ Upper(cSitQuery) + ") AND "
cQryWhere += "SRA.RA_CATFUNC IN ("+ Upper(cCatQuery) + ") AND "	
cQryWhere += "SRA.D_E_L_E_T_ = ' ' "
If !Empty(cProcesso)
	cQryWhere += " AND SRA.RA_PROCES = '" + cProcesso + "' "	
Endif
cQryWhere += " %"

If nOrdem == 1
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_MAT%"
ElseIf nOrdem == 2
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_CC,SRA.RA_MAT%"
ElseIf nOrdem == 3
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_NOME%"
ElseIf nOrdem == 4
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_TNOTRAB%"
ElseIf nOrdem == 5
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_CC,SRA.RA_NOME%"
ElseIf nOrdem == 6
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_DEPTO,SRA.RA_MAT%"
Endif

BeginSql alias cAliasQry
	SELECT SRA.RA_FILIAL, SRA.RA_CC, SRA.RA_MAT, SRA.RA_NOME, SRA.RA_TNOTRAB, SRA.RA_SEQTURN, SRA.RA_DEMISSA,SRA.RA_ADMISSA,
		SRA.RA_REGRA,SRA.RA_SITFOLH,SRA.RA_DEPTO,SRA.RA_PROCES,SRA.RA_CRACHA,
		CTT.CTT_FILIAL, CTT.CTT_CUSTO, CTT.CTT_DESC01,
		SR6.R6_TURNO, SR6.R6_DESC,
		SQB.QB_DEPTO, SQB.QB_DESCRIC
	FROM %table:SRA% SRA
	INNER JOIN %table:CTT% CTT ON RA_CC = CTT_CUSTO AND CTT.%NotDel% AND %exp:cFilSRACTT%
	INNER JOIN %table:SR6% SR6 ON RA_TNOTRAB = R6_TURNO AND SR6.%NotDel% AND %exp:cFilSRASR6%
	INNER JOIN %table:SQB% SQB ON RA_DEPTO = QB_DEPTO AND SQB.%NotDel% AND %exp:cFilSRASQB%
	WHERE %exp:cQryWhere%
	ORDER BY %exp:cOrdem%
EndSql

If ( nColPro == 1 ) // Perguntas PN030RA
	END REPORT QUERY oSection PARAM mv_par05,mv_par06,mv_par07,mv_par08,mv_par09,mv_par10
Else
	END REPORT QUERY oSection PARAM mv_par04,mv_par05,mv_par06,mv_par07,mv_par08,mv_par09
Endif

//-- Define o total da regua da tela de processamento do relatorio
oReport:SetMeter( 100 )  
                                                 
// Imprime o cabecalho da section1 quando for apenas um dia de intervalo
If lUmdia
	oReport:onPageBreak({|| oReport:ThinLine(), ;
							oReport:PrintText(Space(10)+PADC(STR0071,50) + PADC(STR0072,70)),;
							oReport:ThinLine(),;
							oReport:SkipLine(),;
							oSection1:PrintHeader() ,;
							oReport:SkipLine()   }) 		// "Horario Programado" ### "Horario Realizado" 
Endif


//-- Desabilita campos de Processo, Periodo, Roteiro, Num.Pagamento quando o tipo do relatorio for Ausentes
If lAusente
	oSection1:Cell("PROCESSO"):Disable()
	oSection1:Cell("PERIODO"):Disable()	
	oSection1:Cell("ROTEIRO"):Disable()
	oSection1:Cell("NUMPAGTO"):Disable()
Endif

If !lCracha
	oSection1:Cell("CRACHA"):Disable()
Endif

//-- Inicializa impressao   
oSection:Init()                              

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a variavel aInfo com a filial Logada              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fInfo(@aInfo,(cAliasQry)->RA_FILIAL)

cFilAnte	:= (cAliasQry)->RA_FILIAL
cCcAnt		:= (cAliasQry)->RA_CC
cTnoAnt		:= (cAliasQry)->RA_TNOTRAB

While !(cAliasQry)->( EOF() ) 

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta Regua de Processamento                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oReport:IncMeter( 1 )   

	//-- Verifica se o usuário cancelou a impressão do relatorio
	If oReport:Cancel()
		Exit
	EndIf               

	//-- Processa quebra de Filial.
	If (cAliasQry)->RA_FILIAL != cFilAnte 
	    //--Somente "Zera" as variaveis se jah foi impresso algo para nao pula 
	    //--de pagina na primeira vez

		cFilAnte := (cAliasQry)->RA_FILIAL
		
	    If !Empty(cTnoAnt)
	   		cTnoAnt := (cAliasQry)->RA_TNOTRAB
			cCcAnt  := (cAliasQry)->RA_CC
			If lCCTur .And. (nOrdem == 2 .Or. nOrdem == 4 .Or. nOrdem == 5)
				oReport:EndPage()
				lPrintHeader := .F.
			Endif
		Endif
		
		If !fInfo(@aInfo,(cAliasQry)->RA_FILIAL)
			Exit
		Endif	
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega Crachas Provisorios                   			  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		If lCracha
			//-- Se For Exclusivo, carrega crachas provisorios para a Filial Lida 
			If !( xFilial("SPE") == space(FWGETTAMFILIAL) )
			    aProvis:={}
			    LoadCracha(@aProvis,(cAliasQry)->RA_FILIAL)
			Else
	            //-- Se compartilhado, carrega Todos os Registros se estiver vazio
			    If Len(aProvis)==0
			       LoadCracha(@aProvis)
			    Endif
			Endif
		Endif

	Endif


	If lCCTur 
		If (nOrdem == 2 .Or. nOrdem == 5) .And. cFilAnte + cCcAnt <> (cAliasQry)->RA_FILIAL +(cAliasQry)->RA_CC
			cFilAnte	:= (cAliasQry)->RA_FILIAL
			cCcAnt		:= (cAliasQry)->RA_CC
			oReport:EndPage()
			lPrintHeader := .F.
		Elseif nOrdem == 4 .And. cFilAnte + cTnoAnt <> (cAliasQry)->RA_FILIAL +(cAliasQry)->RA_TNOTRAB
			cFilAnte	:= (cAliasQry)->RA_FILIAL
			cTnoAnt		:= (cAliasQry)->RA_TNOTRAB
			oReport:EndPage()
			lPrintHeader := .F.
		Endif
	Endif

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Consiste Filiais e Acessos                                             ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF !( (cAliasQry)->RA_FILIAL $ fValidFil() ) .or. !Eval( cAcessaSRA )
		(cAliasQry)->(DbSkip())
	   	Loop
	EndIF

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Posiciona o registro da query na tabela de Funcionarios                ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If !SRA->(dbSeek( (cAliasQry)->RA_FILIAL + (cAliasQry)->RA_MAT ))
		(cAliasQry)->(DbSkip())
	   	Loop
	Endif
	

	If cTnoAnt != (cAliasQry)->RA_TNOTRAB
		If !Empty(cTnoAnt)
			cTnoAnt := (cAliasQry)->RA_TNOTRAB
			If lCCTur .And. nOrdem == 4
				oReport:EndPage()
				lPrintHeader := .F.
			Endif
		Endif
		cSeqAnt := (cAliasQry)->RA_SEQTURN
	Endif

	//-- Reinicializa Variaveis do Funcionario
	aTabCalend	:= {} 
	aTurnos		:= {}
	aMarcacoes	:= {}

	aHP 		:= {}
	aHR 		:= {}

	aFun		:= {}
	
	//-- Carrega as Marcacoes do Periodo
	IF !GetMarcacoes( @aMarcacoes		,;	//Marcacoes dos Funcionarios
					  @aTabCalend		,;	//Calendario de Marcacoes
					  @aTabPadrao		,;	//Tabela Padrao
					  @aTurnos			,;	//Turnos de Trabalho
					  dPerIni 			,;	//Periodo Inicial
					  dPerFim			,;	//Periodo Final
					  (cAliasQry)->RA_FILIAL	,;	//Filial
					  (cAliasQry)->RA_MAT		,;	//Matricula
					  (cAliasQry)->RA_TNOTRAB	,;	//Turno
					  (cAliasQry)->RA_SEQTURN	,;	//Sequencia de Turno
					  (cAliasQry)->RA_CC		,;	//Centro de Custo
					  "SP8"				,;	//Alias para Carga das Marcacoes
					  .F.    			,;	//Se carrega Recno em aMarcacoes
					  .T.      			,;	//Se considera Apenas Ordenadas
				      .T. 				,;	//Se Verifica as Folgas Automaticas
				  	  .F.    			,;	//Se Grava Evento de Folga Automatica Periodo Anterior
  				  	  NIL				,;
					  NIL				,;
					  NIL				,;
					  .F.				,;
					  NIL				,;
					  .T.				,;  //Se considera data de apontamento
					  .T.				;	//Se considera data inicial				  	  
					)
		If ( Type("aLogErr030") == "A" )
			AADD( aErro, { (cAliasQry)->RA_MAT + " - " + (cAliasQry)->RA_NOME } )
			Aadd( aErro[Len(aErro)], aLogErr030 )
	    	aErroTot := aClone( Aadd( aErroTot, aErro) )
			If (aScan( aLogErr030, { |x| x $ "01_02_03" } ) != 0)
				Exit
			EndIf
			aLogErr030 := {}
		EndIf
		(cAliasQry)->(DbSkip())
		Loop
    EndIF

	//-- Monta Array com Marcacoes Previstas.
	nCal 		:= aScan( aTabCalend, { |x| x[4] == '1E' .and. x[1] >= Max( dPerIni , fDtaAdmis() ) } )
	nCal 		:= If(nCal>0,nCal,1)
	aPrevisto 	:= {}	
	aJornada	:= {}    
	nLenCalend	:= Len(aTabCalend)
	
	//-- Corre Todas as Previsoes de Horarios
	While nCal <= nLenCalend	
		//-- Desconsidera Datas Fora do Periodo
		If (aTabCalend[nCal,1] < dPerIni .Or. aTabCalend[nCal,1] > dPerFim).OR.;
		   aTabCalend[nCal,4]<>"1E"
		   nCal ++
		   Loop
		EndIf
		
		cOrdem     := aTabCalend[nCal,2] //-- Ordem
		dData	   := aTabCalend[nCal,1] //-- Data da Tabela Hor. Padrao	
		cTipoDia   := aTabCalend[nCal,6] //-- Tipo do Dia
		nQtdeHoras := aTabCalend[nCal,7] //-- Qtde de Horas trab. no Dia
		lAfastado  := aTabCalend[nCal,24] //-- Afastamento
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Para dias de Afastamento verifica se deve considerar ou nao  ³
		//³ o dia conforme o tipo de afastamento.						 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lAfastado   
		    //-- Se o tipo de afastamento não for ferias e não se deve considerar afastamentos diferentes de férias ou ambos 
		    //-- ou 
		    //-- Se o tipo de afastamento é ferias e não se deve considerar afastamentos de ferias ou ambos
		    //-- o dia não eh valido, caso contrario considera o dia.
			If ( 	(nAfast == 4 ) .or.  ;
					( aTabCalend[nCal,CALEND_POS_TIP_AFAST] <> "F"  .AND. (nAfast <> 2 .AND. nAfast <> 3)  ) .or.  ;
			   		( aTabCalend[nCal,CALEND_POS_TIP_AFAST] == "F"  .AND. (nAfast <> 1 .AND. nAfast <> 3)  )       ;
			   	)
			   	  nCal ++
			   Loop
			EndIf
		Endif
	    //-- Se Verifica Jornada e deve checar Inicio Jornada e a
	    //-- Hora inicial da Tabela for superior/igual a hora de checagem
		If !lNaoVerifJrn .AND. lCkIniJorn .AND. nSerHoraCk < fDhtoNs(dData,aTabCalend[nCal,3]) 
		   nCal ++
		   Loop
		Endif 
	    cPrevisto  :=''  
	    aHorarios  :={}
	    
		//-- Corre as Previsoes de mesma Ordem
		While cOrdem == aTabCalend[nCal,2]
			//-- Cria String com os Horarios Previstos
			cPrevisto+= StrZero(aTabCalend[nCal,3],5,2) + Space(1)
		    //-- Somente Para Entradas Considera Inicio de Jornadas
		    If Substr(aTabCalend[nCal,4],2,1)='E'
		   	   aAdd(aHorarios,	;
		   	                 Jornadas(aTabCalend[nCal,4],;	//1e/2e/3e/4e 
		   	                 aTabCalend[nCal,1],;    		//Data de Referencia Lim Inferior
		          			 aTabCalend[nCal,3],;	 		//Limite Inferior da Jornada em Serial
		          			 aTabCalend[nCal+1,1],;    		//Data de Referencia Lim Sup
		          			 aTabCalend[nCal+1,3]))			//Limite Superior da Jornada em Serial
		    				
		    Endif      			 
			nCal ++                  
			If	nCal > nLenCalend
			    Exit
			Endif    
		EndDo

		//-- Cria Elemento com Data/Horario/Ordem/Tipo do Dia/Afastado
		aAdd( aPrevisto, {dData, cPrevisto, cOrdem, cTipoDia, lAfastado})
		//-- Cria Elemento com os Horarios das Jornadas como SubArray
		aAdd( aJornada, {cOrdem, Aclone(aHorarios), nQtdeHoras})
	EndDo

	//-- Monta Array com Marcacoes Realizadas.
	nPosJrn		:=0
	aRealizado 	:= {}
	nNumMarc   	:=0
	nLenMarc	:=Len(aMarcacoes)
	nLenaJornada:=Len(aJornada)
	
	//-- Se Existirem Marcacoes
	If !EMPTY(nLenMarc)
		//Corre Todas as Ordens (Cada Elemento em aJornada contem todas as Jornadas de mesma ordem)  
		For nX:=1 To nLenaJornada
			cOrdem := aJornada[nX,1]
					
			//-- Obtem a 1a das Marcacoes Segunda a Ordem Lida
			nPosJrn:= Ascan(aMarcacoes,{|x| x[3]==cOrdem})
			//-- Se Nao Existir Marcacao para a Ordem despreza 
			If Empty(nPosJrn)
			   Loop
			Endif
			//-- Corre as Marcacoes da ordem
		    nNumMarc	:=0
		    cRealizado	:=''
			nMarc		:=nPosJrn
			While cOrdem == aMarcacoes[nMarc,3]
				If (nMarc > 0 .and. nMarc <= nLenMarc)
					If nMarc < nLenMarc
						If SubStr( aMarcacoes[nMarc,AMARC_TIPOMARC],1,1 )  == SubStr( aMarcacoes[nMarc+1,AMARC_TIPOMARC],1,1 ) .and. ;
							aMarcacoes[nMarc,AMARC_ORDEM] == aMarcacoes[nMarc+1,AMARC_ORDEM]
							lMod := .T.
							lPar := .T.
						Else
							If nMarc > 1
								If SubStr( aMarcacoes[nMarc-1,AMARC_TIPOMARC],1,1 )  == SubStr( aMarcacoes[nMarc,AMARC_TIPOMARC],1,1 ) .and. ;
									aMarcacoes[nMarc-1,AMARC_ORDEM] == aMarcacoes[nMarc,AMARC_ORDEM]
									lMod := .T.
									lPar := .T.
								Else
									If( aMarcacoes[nMarc-1,AMARC_ORDEM] == aMarcacoes[nMarc,AMARC_ORDEM], lMod := .F., lMod := .T. )
									lPar := .F.
								EndIf
							Else
								lMod := .T.
								lPar := .T.
							EndIf
						EndIf
					Else
						If (nMarc == 1 .and. nLenMarc == 1)
							lMod := .F.
							lPar := .F.
						Else
							If SubStr( aMarcacoes[nMarc-1,AMARC_TIPOMARC],1,1 )  != SubStr( aMarcacoes[nMarc,AMARC_TIPOMARC],1,1 ) .and. ;
								aMarcacoes[nMarc-1,AMARC_ORDEM] != aMarcacoes[nMarc,AMARC_ORDEM]
								lMod := .F.
							Else
								lMod := .F.
							EndIf
						EndIf
					EndIf
				EndIf
				nNumMarc++
				cRealizado += StrZero(aMarcacoes[nMarc,2],5,2) + Space(1)
			    //-- Verifica Ausencia/Presenca nas Jornadas conforme Marcacao
			    Classifica(aMarcacoes[nMarc,1], aMarcacoes[nMarc,2],@aJornada,nX,nNumMarc,lMod,nMarc,lPar)
	 			nMarc++
	 			//-- Se o contador ultrapassar o total de Marcacoes abandona loop
	 			If nMarc>nLenMarc
	 			   Exit
	 			Endif   
			EndDo
			cProc := aMarcacoes[ nPosJrn , AMARC_PROCESSO ]
			cPer  := aMarcacoes[ nPosJrn , AMARC_PERIODO  ]
			cRot  := aMarcacoes[ nPosJrn , AMARC_ROTEIRO  ]
			cNPag := aMarcacoes[ nPosJrn , AMARC_NUM_PAGTO]			
			//-- Cria Elemento que conterah as marcacoes realizadas
			aAdd(aRealizado, {aMarcacoes[nPosJrn,1], cRealizado, cOrdem,cProc,cPer,cRot,cNPag})
		Next nX
	Endif 
	
	//-- Para Jornadas Sem Classificacao Considera que Houve Ausencia do Funcionario
	//-- Y[4]:= A1E OU A2E OU A3E ....
	AEVAL(aJornada,{|x| Aeval(x[2],{|y|if(Empty(y[4]),y[4]:='A'+Y[3],Nil)})})
	nPosJrn	:=0
	//-- Monta array com as Marcacoes a serem impressas.
	aFun 		:= {}         
	nLenPrev	:=Len(aPrevisto)
	cRealizado	:=''
	For nPre := 1 to nLenPrev		
		cPrevisto  := ''
		cRealizado := '' 
		cDet       := ''
		cTipAfas   := ''
		dDtAfas    := CtoD('  /  /  ')
		dDtRet     := CtoD('  /  /  ')		
		
		cPrevisto := StrTran(aPrevisto[nPre,2],'.',':')
		cPrevisto += Space(24-Len(cPrevisto))
		If ( nPos := aScan( aRealizado, { |x| x[3] == aPrevisto[nPre,3] } ) ) > 0
			cRealizado := StrTran(aRealizado[nPos,2],'.',':')
		EndIf
		aAdd(aFun, {PADR(DtoC(aPrevisto[nPre,1]),10),Space(11),Space(11),Space(11),Space(11),Space(11),Space(11),Space(11),Space(11),Space(11),Space(10),Space(5),Space(3),Space(6),Space(2) })

		aHP := DetHorario(cPrevisto,4,.T.)
		If Len(aHP) < 4
			For nHr := Max(Len(aHP),1)+1 to 4
				aAdd(aHP,Space(11))
			Next
		Endif
		For nHr := 1 to Len(aHP)
			aFun[Len(aFun),nHr+1] := aHP [ nHr ]	// Horarios Programados
		Next
				
		//-- Procura pelas Jornadas da Ordem
		nPosJrn:=Ascan(aJornada,{|x|x[1]==aPrevisto[nPre,3]})
	
	  	//-- Verifica se houve Ausencia em alguma das Jornadas da Ordem
		nPosOcor:=Ascan(aJornada[nPosJrn,2],{|x|Substr(x[4],1,1)=='A'}) 
		
		If !lAusente //-- Presentes 
			
			//-- Se nao Houve Marcacoes ou (se Ocorreu Alguma Ausencia e o usuario
			//-- deseja presenca no dia todo)
		    //-- Desconsidera Marcacoes do dia para Relacao de Presentes
			If Len(cRealizado) <= 0 
				aDel(aFun,Len(aFun))
				aFun := aSize(aFun,Len(aFun)-1)
				Loop
			EndIf  

			aFun[Len(aFun),12] := aRealizado[nPos,4]	// Processo
			aFun[Len(aFun),13] := aRealizado[nPos,5]	// Periodo
			aFun[Len(aFun),14] := aRealizado[nPos,6]	// Roteiro
			aFun[Len(aFun),15] := aRealizado[nPos,7]	// Numero de Paginas

 			//-- Se Nao Verifica Jornadas
		    If lNaoVerifJrn 		        
		        //-- Alimenta String com as Marcacoes Ocorridas
		        cOcorr:=cRealizado
		    Else    
			    //-- Carrega Presencas nas Jornadas do Dia Lido
				aOcorr:={}
   				Aeval(aJornada[nPosJrn,2], {|x|iF(Substr(x[4],1,1)=='P' .AND. !Empty(Substr(x[4],2,1)),aAdd(aOcorr,Substr(x[4],2,2)),Nil)})
			    //-- Para Dias sem horario a Tabela Padrao Gera uma Jornada com horarios Zerados
		        //-- a Funcao Classifica acusa presenca para funcionarios com marcacoes nesse dia
		        //-- colocando no 4o. Elemento a letra 'P' sem a definicao da entrada (1E/2E...)
		        //-- Deste modo adotamos que, para dias sem horario mas com marcacao, o funcionario
		        //-- este presente em todas as jornadas. 

		        //-- Se Nao houver a identificacao da jornada 
		        If Empty(Len(aOcorr))
		            //-- Se Nao ocorreram ausencias
		            //-- funcionario fez horario em dia NAO TRABALHADO
		            If Empty(nPosOcor)
		        	   cOcorr:=cRealizado
		        	Else
		        	   //-- Funcionario Nao Veio nas Jornadas Solicitadas, embora
		        	   //-- Possa ter realizado marcacoes em outro horario(Fora da Tabela)
						aDel(aFun,Len(aFun))
						aFun := aSize(aFun,Len(aFun)-1)
		        	   Loop
		        	Endif   
			    Else
			    	cOcorr:=''
				    //-- Se Deve Verificar Presenca em Todas as Jornadas
				    //-- Verifica se houve Presenca Parcial
				    If lTodasJrn
				     	//-- Se o Func. teve Presenca Parcial (Total de Presenca <> Total de Jornadas)
				     	//-- e Escolheu mais que uma Jornada
		       			If Len(aOcorr)#Len(aJornada[nPosJrn,2]) 
							aDel(aFun,Len(aFun))
							aFun := aSize(aFun,Len(aFun)-1)
			   	   			Loop
			   			Endif
   		   			    cOcorr:= cRealizado
				    Else
					    //-- Imprime Jornadas com Presenca 
					   	For nOcorr:=1 To Len(aOcorr)
							//--Verifica se a Ocorrencia existiu em uma das Jornadas Selecionadas
							If aOcorr[nOcorr]$cjornadas
							   cOcorr:= cRealizado
					   		   Exit
					   		Endif	
					    Next nOcorr              
					Endif
					    
				    //-- Para as Jornadas selecionadas o func nao esteve presente
				    //-- embora tenha marcacao para outras jornadas do dia.
				    If Empty(cOcorr)
						aDel(aFun,Len(aFun))
						aFun := aSize(aFun,Len(aFun)-1)
				       Loop
				    Endif   
          		Endif
			Endif

			//-- Imprime Jornadas com Presenca 
			aHR := DetHorario(cOcorr,5,.T.)
			If Len(aHR) < 5
				For nHr := Max(Len(aHr),1)+1 to 5
					aAdd(aHR,Space(11))
				Next
			Endif
			For nHr := 1 to Len(aHR)
				aFun[Len(aFun),nHr+5] := aHR [ nHr ]	// Horarios Realizados
			Next
			
		Else //-- Ausentes
			 //-- Se Nao Houve Ausencias
			 //-- Ou Tipo de Dia Diferente de Trabalhado/Feriado ou
			 //-- situacao de Transferido/ferias e demissao
			 If	Empty(nPosOcor) .OR. ;
			    (aPrevisto[nPre,4] # 'S' .AND. !aPrevisto[nPre,5])  .Or. ;
				fFeriado((cAliasQry)->RA_FILIAL,aPrevisto[nPre,1]) .Or. ;
				(cAliasQry)->RA_SitFolh $ 'DúT' .And. aPrevisto[nPre,1] > (cAliasQry)->RA_Demissa
				aDel(aFun,Len(aFun))
				aFun := aSize(aFun,Len(aFun)-1)
				Loop
			EndIf
			
			//-- Carrega as Ocorrencias de Ausencias nas Jornadas do Dia Lido
			aOcorr:={}
		    Aeval(aJornada[nPosJrn,2],{|x|iF(Substr(x[4],1,1)=='A',aAdd(aOcorr,Substr(x[4],2,2)),Nil)})		   		    

		    //-- Se Nao Verifica Jornadas
		    if lNaoVerifJrn     
		       //-- Se ocorreu marcacoes desconsidera o dia
		       If Len(cRealizado) > 0 
					aDel(aFun,Len(aFun))
					aFun := aSize(aFun,Len(aFun)-1)
					Loop
			   EndIf  
			   If fAfasta( (cAliasQry)->RA_FILIAL,(cAliasQry)->RA_Mat,aPrevisto[nPre,1],@dDtafas,@dDtRet,@cTipAfas) .Or. ;
					(cAliasQry)->RA_SitFolh $ 'DúT' .And. aPrevisto[nPre,1] > (cAliasQry)->RA_DEMISSA
					//-- Imprime Jornadas com Presenca 
					aFun[Len(aFun),6] := PADC(If(cTipAfas=='F',STR0018,STR0019 ),50)						 // '           ** Ferias **            '###'          ** Afastado **           '

					For nHr := 1 to 4
						aFun[Len(aFun),nHr+6] := Space(11)
					Next
						
               Else   
               
					aHR := DetAusencia(aOcorr,Len(aJornada[nPosJrn,2]),.T.)
					If Len(aHR) < 5
						For nHr := Max(Len(aHR),1)+1 to 5
							aAdd(aHP,Space(11))
						Next
					Endif
					For nHr := 1 to Len(aHR)
						aFun[Len(aFun),nHr+5] := aHR [ nHr ]	// Horarios Realizados
					Next
			
               Endif 
			
			Else
			//-- Se optou por Verificar Jornadas
			    //-- Verifica Afastamentos
			    If fAfasta( (cAliasQry)->RA_FILIAL,(cAliasQry)->RA_Mat,aPrevisto[nPre,1],@dDtafas,@dDtRet,@cTipAfas) .Or. ;
					(cAliasQry)->RA_SitFolh $ 'DúT' .And. aPrevisto[nPre,1] > (cAliasQry)->RA_DEMISSA

					aFun[Len(aFun),6] := PADC(If(cTipAfas=='F',STR0018,STR0019 ),50)						 // '           ** Ferias **            '###'          ** Afastado **           '

					For nHr := 1 to 4
						aFun[Len(aFun),nHr+6] := Space(11)
					Next

				Else
			       lOcorr:=.F.
				    //-- Se Deve Verificar Ausencia em Todas as Jornadas
				    //-- Verifica se houve Ausencia Parcial
				    If lTodasJrn
				     	//-- Se o Func. teve Ausencia Parcial (Total de ausencia <> Total de Jornadas)
		       			If Len(aOcorr)#Len(aJornada[nPosJrn,2]) 
							aDel(aFun,Len(aFun))
							aFun := aSize(aFun,Len(aFun)-1)
			   	   			Loop
			   			Endif 
		   				lOcorr:= .T.
			   		Else	
					    //-- Imprime Jornadas com Presenca 
					   	For nOcorr:=1 To Len(aOcorr)
							//--Verifica se a Ocorrencia existiu em uma das Jornadas Selecionadas
							If aOcorr[nOcorr]$cjornadas
							   lOcorr:= .T.
					   		   Exit
					   		Endif	
					    Next nOcorr  
					Endif                
			        //-- Para as Jornadas selecionadas o func nao esteve presente
			        //-- embora tenha marcacao para outras jornadas do dia.
			    	If !lOcorr
						aDel(aFun,Len(aFun))
						aFun := aSize(aFun,Len(aFun)-1)
			       		Loop
			    	Endif  

					aHR := DetAusencia(aOcorr,Len(aJornada[nPosJrn,2]),.T.)
					If Len(aHR) < 5
						For nHr := Max(Len(aHR),1)+1 to 5
							aAdd(aHR,Space(11))
						Next
					Endif
					For nHr := 1 to Len(aHR)
						aFun[Len(aFun),nHr+5] := aHR [ nHr ]
					Next

		        Endif
			Endif   	   
		EndIf           

		aFun[Len(aFun),11] := If(lCracha,GetCracha(aPrevisto[nPre,1],aProvis)," ")	// Horarios Programados
		aOcorr := {}

	Next nPre

	// Verifica se não carregou as marcações e salta para o proximo funcionario
	If Len(aFun) == 0
		(cAliasQry)->(DbSkip())
		Loop
	Endif

	If lPrintHeader
		oSection:PrintHeader() 
	Endif		
	oSection:PrintLine()

	lPrintHeader := .T.
	oReport:SkipLine()
	If !lUmDia
		oReport:ThinLine()
		oReport:PrintText(Space(10)+PADC(STR0071,50) + PADC(STR0072,70))	// "Horario Programado" ### "Horario Realizado" 
		oReport:ThinLine()
	Endif
	oSection1:Init(.F.) 

	If !lUmDia
		oSection1:PrintHeader() 
	Endif
	
	For nPre := 1 to Len( aFun )
		//-- Altera valores da Section
		oSection1:Cell( "DATA"):SetValue(aFun[nPre,1])

		oSection1:Cell( "HP1"):SetValue(aFun[nPre,2])
		oSection1:Cell( "HP2"):SetValue(aFun[nPre,3])
		oSection1:Cell( "HP3"):SetValue(aFun[nPre,4])
		oSection1:Cell( "HP4"):SetValue(aFun[nPre,5])

		oSection1:Cell( "HR1"):SetValue(aFun[nPre,6])
		oSection1:Cell( "HR2"):SetValue(aFun[nPre,7])
		oSection1:Cell( "HR3"):SetValue(aFun[nPre,8])
		oSection1:Cell( "HR4"):SetValue(aFun[nPre,9])
		oSection1:Cell( "HR5"):SetValue(aFun[nPre,10])

		If lCracha
			oSection1:Cell( "CRACHA"):SetValue(aFun[nPre,11])
		Endif
		
		If !lAusente
			oSection1:Cell( "PROCESSO"):SetValue(aFun[nPre,12])
			oSection1:Cell( "PERIODO"):SetValue(aFun[nPre,13])
			oSection1:Cell( "ROTEIRO"):SetValue(aFun[nPre,14])
			oSection1:Cell( "NUMPAGTO"):SetValue(aFun[nPre,15])
		Endif								

	   	oSection1:PrintLine()
	Next

	oSection1:Finish()
	oReport:ThinLine()
	oReport:SkipLine()		

	(cAliasQry)->(DbSkip())
	
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Termino do Relatorio                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza impressao inicializada pelo metodo Init             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSection:Finish()

If cFunRegra <> ""  
	MsgAlert(STR0053+STR0054+alltrim(cFunRegra))
	//"Atencao" ### "Os seguintes funcionarios estao sem regras de apontamento cadastradas:" ##Matricula dos Funcionarios## ### "OK" ###
EndIf

If Select(cAliasQry) > 0
	(cAliasQry)->(dbCloseArea())
Endif

Return


//======>>>>>>>>>> DAQUI PARA BAIXO, TRATA-SE DO RELEASE 3
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ PONR030  ³ Autor ³ J.Ricardo             ³ Data ³ 07.04.96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Relat¢rio de Presentes / Ausentes                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PONR030(void)                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³            ³        ³      ³                                          ³±±
±±³Mauricio MR ³16/10/01³------³ Correcao quebra de Turno/Seq da Tabela	  ³±±
±±³Mauricio MR ³21/10/01³010600³ Implementacao de identificacao de presen-³±±
±±³            ³        ³      ³ ca e ausencia por jornadas.    	  	  ³±±  
±±³Mauricio MR ³13/11/01³------³ Correcao Impressao Ano com 4 digitos.    ³±±
±±³Marinaldo   ³19/11/01³Melhor³A funcao GetMarcacoes passara a utilizar a³±±
±±³            ³--------³------³Funcao fDiasFolga() para Verificar as  Fol³±±
±±³            ³--------³------³gas Automaticas.						  ³±±  
±±³Mauricio MR ³27/11/01³Melhor³ Impressao de Cabecalho UNICO para todos  ³±±
±±³            ³        ³------³ os funcionarios quando for solicitada a  ³±±
±±³            ³        ³------³ verificacao de somente 1(um) Dia.        ³±±
±±³Mauricio MR ³28/11/01³Melhor³ Melhoria na Performance com Limitacao da ³±±
±±³            ³        ³------³ Classificacao de Jornadas e Selecao das  ³±±
±±³            ³        ³------³ marcacoes.                               ³±±
±±³Mauricio MR ³11/12/01³Melhor³ Impressao do Cracha do Funcionario.      ³±±
±±³Mauricio MR ³14/01/02³Melhor³ Alteracao do Pergunte para uma melhor Com³±± 
±±³            ³        ³------³ preensao da verificacao das jornadas.    ³±±
±±³=======================================================================³±± 
±±³                         *** Versao 7.10 ***                           ³±± 
±±³=======================================================================³±± 
±±³Mauricio MR ³21/02/02³Melhor³A)Retirada de Perguntas pois foram trans- ³±± 
±±³            ³        ³      ³feridas para o SX1.                       ³±± 
±±³Mauricio MR ³07/03/02³Melhor³ Acrescido novas Perguntas/Parametros -SX1³±± 
±±³            ³        ³      ³ p/Verif. Inicio de jornada e para forne -³±± 
±±³            ³        ³------³ cer a Hora de checagem das Jornadas.     ³±±
±±³Mauricio MR ³15/01/04³Acerto³ Verificacao de Afastamento tipo ferias   ³±± 
±±³            ³        ³      ³ para Ausentes em virtude de mudanca na   ³±± 
±±³            ³        ³      ³ montagem do calendario (PonxFun) onde os ³±± 
±±³            ³        ³      ³ dias para o periodo do afastamento passa ³±± 
±±³            ³        ³      ³ ram a ser considerados como nao trabalha ³±± 
±±³            ³        ³      ³ dos.									  ³±±
±±³Luiz Gustavo³05/02/07³      ³Retiradas funcoes de ajuste de dicionario.³±± 
±±³=======================================================================³±± 
±±³                         *** Versao 9.12 ***                           ³±± 
±±³=======================================================================³±± 
±±³Leandro Dr  ³24/03/08³Melhor³Inclusão de chave processo/periodo/roteiro³±± 
±±³            |        |      |NumPagto. Impressao por data ou periodo   ³±± 
±±³Francisco Jr³12/01/10³000430³Compatibilizado para Gestao Corporativa.  ³±± 
±±³            |        |  2010|                                          ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function PONR030R3()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Locais (Basicas)                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cDesc1  := STR0001  // 'Relatorio de Presentes ou Ausentes'
Local cDesc2  := STR0002  // 'Ser  impresso de acordo com os parametros solicitados pelo'
Local cDesc3  := STR0003  // 'usuario.'
Local cString := 'SRA' //-- Alias do arquivo principal (Base)
Local aOrd    := { STR0004 , STR0005 , STR0006 , STR0007 , STR0024 , STR0042} // 'Matricula'###'Centro de Custo'###'Nome'###'Turno'###'C.Custo+Nome'###'Departamento'
Local wnRel   := ''

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Private(Basicas)                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aReturn    := { STR0008 , 1, STR0009 , 2, 2, 1, '',1 } // 'Zebrado'###'Administra‡„o'
Private nomeprog   := 'PONR030'
Private aLinha     := {}
Private nLastKey   := 0
Private cPerg      := ''
Private aTabCalend := {}
Private aMarcacoes := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis Utilizadas na funcao IMPR                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private Titulo   := OemToAnsi(STR0011 ) // 'Relatorio de Presentes / Ausentes'
Private cCabec   := Titulo
Private AT_PRG   := 'PONR030'
Private wCabec0  := 0
Private ContFl   := 1
Private Li       := 0
Private nTamanho := 'M'

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Private(Programa)                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cFor       := ''
Private cIndCond   := ''
Private nOrdem     := 0
Private dPerIni    := CtoD("//")
Private dPerFim    := CtoD("//")
Private aInfo      := {}
Private aTurnos    := {}
Private aTabPadrao := {}
Private nPagAtu    := 1
Private lUmDia	   := .F.      
Private nAjusteFol := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis de para geração do Log de ocorrências		 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cTitle     := ""
Private aLogErr030 := {}
Private aErroTot   := {}

Private cProcesso := Nil
Private cPeriodo  := Nil
Private cRoteiro  := Nil
Private cNumPagto := Nil
Private cDeptoDe
Private cDeptoAte
Private lPeriodo  := .F.
Private nColPro

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica se deve imprimir por resultados ou apontamentos     ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
If fOpcRadio(@nColPro, STR0001,;      //"Espelho de Ponto"
					   STR0035,;      //"Selecione a opcao de impressao:"
			   		   STR0036,;      //"Por Periodo"
			   		   STR0037 ) == 0 //"Por Datas"
	Return
EndIf
	
cPerg := IF(nColPro == 1,"PNR030A","PNR030B")	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte(cPerg,.F.)
If ( nColPro == 1 ) 
	cProcesso := mv_par01			//Processo
	cPeriodo  := mv_par02			//Periodo
	cRoteiro  := mv_par03			//Roteiro
	cNumPagto := mv_par04			//Numero de Pagamento
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnRel := 'PONR030' //-- Nome Default do relatorio em Disco
wnRel := SetPrint(cString, wnRel, cPerg, @Titulo, cDesc1, cDesc2, cDesc3, .F., aOrd,,nTamanho)

nOrdem    := aReturn[8]	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando variaveis mv_par?? para Variaveis do Sistema.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nColPro == 1 ) 
	lPeriodo := .T.

	cProcesso := mv_par01			//Processo
	cPeriodo  := mv_par02			//Periodo
	cRoteiro  := mv_par03			//Roteiro
	cNumPagto := mv_par04			//Numero de Pagamento
	cDeptoDe  := mv_par05			//Depto De
	cDeptoAte := mv_par06			//Depto Ate	
	FilialDe  := mv_par07
	FilialAte := mv_par08
	CcDe      := mv_par09
	CcAte     := mv_par10
	TurDe     := mv_par11
	TurAte    := mv_par12
	MatDe     := mv_par13
	MatAte    := mv_par14
	NomDe     := mv_par15
	NomAte    := mv_par16
	cSit      := mv_par17
	cCat      := mv_par18
	lAusente  := If(mv_par19 == 1,.T.,.F.)
	lCCTur    := If(mv_par20 == 1,.T.,.F.)
	lNaoVerifJrn := If(mv_par21==2,.T.,.F.) // .T. - Nao Verifica Jornadas
	cJornadas := mv_par22  //-- Jornadas Escolhidas para verificacao
	lTodasJrn := If(mv_par23 ==1 .AND. Len(Alltrim(StrTran(mv_par22,"*","")))>3,.T.,.F.) // .T. Considerar Ocorrencia de Ausencia/Presenca em Todas as Jornadas(Valido apenas para escolha de 2 ou mais jornadas a serem verificadas)
	lCracha   := If(mv_par24 == 1,.T.,.F.) //.T. Imprime Cracha
	lCkIniJorn:= If(mv_par25 == 1,.T.,.F.) //.T. Checa inicio de jornada
	nHora	  := mv_par26
	nAfast	  := mv_par27   //1 - Ferias, 2 - Afastamento, 3 - Ambos
Else
	lPeriodo := .F.
	cProcesso := mv_par01			//Processo
	dPerIni   := mv_par02
	dPerFim   := mv_par03
	cDeptoDe  := mv_par04			//Depto De
	cDeptoAte := mv_par05			//Depto Ate		
	FilialDe  := mv_par06
	FilialAte := mv_par07
	CcDe      := mv_par08
	CcAte     := mv_par09
	TurDe     := mv_par10
	TurAte    := mv_par11
	MatDe     := mv_par12
	MatAte    := mv_par13
	NomDe     := mv_par14
	NomAte    := mv_par15
	cSit      := mv_par16
	cCat      := mv_par17
	lAusente  := If(mv_par18 == 1,.T.,.F.)
	lCCTur    := If(mv_par19 == 1,.T.,.F.)
	lNaoVerifJrn := If(mv_par20==2,.T.,.F.) // .T. - Nao Verifica Jornadas
	cJornadas := mv_par21  //-- Jornadas Escolhidas para verificacao
	lTodasJrn := If(mv_par22 ==1 .AND. Len(Alltrim(StrTran(mv_par21,"*","")))>3,.T.,.F.) // .T. Considerar Ocorrencia de Ausencia/Presenca em Todas as Jornadas(Valido apenas para escolha de 2 ou mais jornadas a serem verificadas)
	lCracha   := If(mv_par23 == 1,.T.,.F.) //.T. Imprime Cracha
	lCkIniJorn:= If(mv_par24 == 1,.T.,.F.) //.T. Checa inicio de jornada
	nHora     := mv_par25
	nAfast	  := mv_par26   //1 - Ferias, 2 - Afastamento, 3 - Ambos
EndIf

If	nLastKey == 27
	Return Nil
Endif
	
SetDefault(aReturn,cString)
	
If nLastKey == 27
	Return Nil
Endif
	
Titulo := OemToAnsi(STR0014 +If(lAusente,STR0015 ,STR0016 )) // 'Relatorio de '###'Ausentes'###'Presentes'
RptStatus({|lEnd| POR030Imp(@lEnd,wnRel,cString)},Titulo)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Geração do Log de Erros para apresentação ao usuário			 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LogErro( aErroTot )
Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ POR030Imp³ Autor ³ J.Ricardo             ³ Data ³ 07.04.96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Relatorio de Presentes e Ausentes                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ POR030Imp(lEnd,wnRel,cString)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ lEnd        - A‡Æo do Codelock                             ³±±
±±³          ³ wnRel       - T¡tulo do relat¢rio                          ³±±
±±³Parametros³ cString     - Mensagem                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function POR030Imp(lEnd,WnRel,cString)

//-- Defini‡„o de Variaveis Locais
Local cSeqAnt       := '  '
Local aPrevisto  	:= {}
Local aRealizado   	:= {}
Local aFun          := {}
Local nCal       	:= 1
Local nX            := 0
Local nY			:= 0
Local cPrevisto  	:= ''
Local cRealizado 	:= '' 
Local cDet       	:= ''
Local cOrdem        := ''
Local dDtAfas    	:= CtoD('  /  /  ')
Local dDtRet     	:= CtoD('  /  /  ')
Local cAcessaSRA := &("{ || " + ChkRH("PONR030","SRA","2") + "}")
Local nLenCalend	:= 0
Local nLenMarc 	    := 0
Local nLenPrev		:= 0 
Local nLenaJornada  := 0
Local nOcorr		:= 0 
Local nPre			:= 0
Local aOcorr		:=	{}
Local aJornada		:=	{}
Local nPosjrn		:=	0
Local nPosocor		:=	0
Local cOcorr		:=	''
Local cProc			:=  ''
Local cPer			:=  ''
Local cRot			:=  ''
Local cNPag			:=  ''
Local nNumMarc		:=	0
Local cTipoDia      :=  ''
Local nQtdeHoras    :=  0
Local dData			:= Ctod('')
Local aHorarios     := {}
Local lOcorr		:= .F.
Local lAfastado		:= .F.
Local lMod			:= .F.
Local lPar			:= .F.
Local aErro	  		:= {}

Private cCcAnt      := Space(9)
Private cTnoAnt     := Space(3)
Private cFilAnte    := Space(FWGETTAMFILIAL)
Private lRoda		:= .F. 
Private aProvis		:= {}
Private aChave		:= {}
Private nSerHoraCk
Private oPeriodo    := RHPERIODO():New()

If lPeriodo
	oPeriodo:cProcesso := cProcesso
	oPeriodo:cPeriodo  := cPeriodo
	oPeriodo:cRoteiro  := cRoteiro
	oPeriodo:cNumPagto := cNumPagto
	
	oPeriodo:GetPer()
	
	If !(oPeriodo:lFound )
		MsgInfo( OemToAnsi( oPeriodo:cMsgNotFoundPer ) )    //"Período de Apontamento não encontrado."
		Return
	EndIf
	
	dPerIni := oPeriodo:dDataIni
	dPerFim := oPeriodo:dDataFim
Else
	oPeriodo:dDataIni := dPerIni
	oPeriodo:dDataFim := dPerFim	
EndIf

lUmdia	  := If(dPerIni==dPerFim,.T.,.F.) //.T. verifica 1 (um) Dia Apenas

If lUmDia
   wCabec0:=2
   wCabec1		:=STR0012+If(lCracha,' '+STR0030,'') //  '          |              Horario Programado               |   |             Horario Realizado                             | Cracha'
   wCabec2:=STR0013    
   nAjusteFol:=3
Endif

nSerHoraCk:= fDHtoNS(dPerFim,nHora)  // Hora inicio de Jornadas

dbSelectArea( 'SRA' )
dbGoTop()
DbSetOrder(nOrdem)

If nOrdem == 1
	dbSeek(FilialDe + MatDe,.T.)
	cInicio  := 'SRA->RA_FILIAL + SRA->RA_MAT'
	cFim     := FilialAte + MatAte
ElseIf nOrdem == 2
	dbSeek(FilialDe + CcDe + MatDe,.T.)
	cInicio  := 'SRA->RA_FILIAL + SRA->RA_CC + SRA->RA_MAT'
	cFim     := FilialAte + CcAte + MatAte
ElseIf nOrdem == 3
	dbSeek(FilialDe + NomDe + MatDe,.T.)
	cInicio  := 'SRA->RA_FILIAL + SRA->RA_NOME + SRA->RA_MAT'
	cFim     := FilialAte + NomAte + MatAte
ElseIf nOrdem == 4
	dbSeek(FilialDe + TurDe,.T.)
	cInicio  := 'SRA->RA_FILIAL + SRA->RA_TNOTRAB'
	cFim     := FilialAte + TurAte
ElseIf nOrdem == 5
	dbSetOrder(8)
	dbSeek(FilialDe + CcDe + NomDe,.T.)
	cInicio  := 'SRA->RA_FILIAL + SRA->RA_CC + SRA->RA_NOME'
	cFim     := FilialAte + CcAte + NomAte
ElseIf nOrdem == 6
	dbSetOrder(22)
	dbSeek(FilialDe + cDeptoDe + MatDe,.T.)
	cInicio  := 'SRA->RA_FILIAL + SRA->RA_DEPTO + SRA->RA_MAT'
	cFim     := FilialAte + cDeptoAte + MatAte	
Endif

SetRegua(SRA->(RecCount()))

//-- Looping principal dos funcionarios.
While !SRA->(Eof()) .And. &(cInicio) <= cFim

	//-- Movimenta Regua.
	IncRegua()

	//-- Cancela Impressao caso se pressione Ctrl + A
	If lEnd
		Impr(cCancela,'C')
		Exit
	EndIF

	//-- Processa quebra de Filial.
	If SRA->RA_FILIAL # cFilAnte 
	    //--Somente "Zera" as variaveis se jah foi impresso algo para nao pula 
	    //--de pagina na primeira vez
	    If !Empty(cTnoAnt)
	   		cTnoAnt := 'úúú'
			cSeqAnt := 'úú'
			cCcAnt  := '!!!!!!!!!'
		Endif
		
		If !fInfo(@aInfo,SRA->RA_FILIAL)
			Exit
		Endif	
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega Crachas Provisorios                   			  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		If lCracha
			//-- Se For Exclusivo, carrega crachas provisorios para a Filial Lida 
			If !Empty(xFilial("SPE"))
			    aProvis:={}
			    LoadCracha(@aProvis,SRA->RA_FILIAL)
			Else
	            //-- Se compartilhado, carrega Todos os Registros se estiver vazio
			    If Len(aProvis)==0
			       LoadCracha(@aProvis)
			    Endif
			Endif
		Endif

	Endif

	If cTnoAnt + cSeqAnt # SRA->RA_TNOTRAB + SRA->RA_SEQTURN
		If !Empty(cTnoAnt)
			cTnoAnt := 'úúú'
		Endif
		cSeqAnt := SRA->RA_SEQTURN
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Consiste controle de acessos e filiais validas               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SRA->(  !(RA_FILIAL $ fValidFil()) .Or. !Eval(cAcessaSRA) )
		fCabTotal()
		Loop
	EndIf

	//-- Consiste Parametrizacao do Intervalo de Impressao.
	IF SRA->(;
				(  RA_TNOTRAB	< Turde ) .or. ( 	RA_TNOTRAB	> TurAte ) .or. ;
				(  RA_NOME 		< NomDe ) .or. ( 	RA_NOME 	> NomAte ) .or. ;
				(  RA_MAT 		< MatDe ) .or. ( 	RA_MAT 		> MatAte ) .or. ;
				(  RA_CC 		< CCDe  ) .or. ( 	RA_CC 		> CCAte	 ) .or. ;
				(  RA_DEPTO		< cDeptoDe) .or. ( 	RA_DEPTO	> cDeptoAte	 );
			)
		fCabTotal()
		Loop
	EndIF

	If !Empty(cProcesso)
		If SRA->RA_PROCES <> cProcesso
			SRA->( dbSkip() )
			Loop
		EndIf
	EndIf

	//-- Consiste Situacao e Categoria a Imprimir.
	If !(SRA->RA_SITFOLH $ cSit) .Or. !(SRA->RA_CATFUNC $ cCat)
		fCabTotal()
		Loop
	Endif

	//-- Reinicializa Variaveis do Funcionario
	aTabCalend := {} ; aTurnos   := {} ; aMarcacoes := {}

	//-- Carrega as Marcacoes do Periodo
	IF !GetMarcacoes( @aMarcacoes		,;	//Marcacoes dos Funcionarios
					  @aTabCalend		,;	//Calendario de Marcacoes
					  @aTabPadrao		,;	//Tabela Padrao
					  @aTurnos			,;	//Turnos de Trabalho
					  dPerIni 			,;	//Periodo Inicial
					  dPerFim			,;	//Periodo Final
					  SRA->RA_FILIAL	,;	//Filial
					  SRA->RA_MAT		,;	//Matricula
					  SRA->RA_TNOTRAB	,;	//Turno
					  SRA->RA_SEQTURN	,;	//Sequencia de Turno
					  SRA->RA_CC		,;	//Centro de Custo
					  "SP8"				,;	//Alias para Carga das Marcacoes
					  .F.    			,;	//Se carrega Recno em aMarcacoes
					  .T.      			,;	//Se considera Apenas Ordenadas
				      .T. 				,;	//Se Verifica as Folgas Automaticas
				  	  .F.    			,;	//Se Grava Evento de Folga Automatica Periodo Anterior
  				  	  NIL				,;
					  NIL				,;
					  NIL				,;
					  .F.				,;
					  NIL				,;
					  .T.				,;  //Se considera data de apontamento
					  .T.				;	//Se considera data inicial				  	  
					)
		If ( Type("aLogErr030") == "A" )
			AADD( aErro, { SRA->RA_MAT + " - " + SRA->RA_NOME } )
			Aadd( aErro[Len(aErro)], aLogErr030 )
	    	aErroTot := aClone( Aadd( aErroTot, aErro) )
			If (aScan( aLogErr030, { |x| x $ "01_02_03" } ) != 0)
				Exit
			EndIf
			aLogErr030 := {}
		EndIf
		dbSkip()
		Loop
    EndIF

	//-- Monta Array com Marcacoes Previstas.
	nCal 		:= aScan( aTabCalend, { |x| x[4] == '1E' .and. x[1] >= Max( dPerIni , fDtaAdmis() ) } )
	nCal 		:= If(nCal>0,nCal,1)
	aPrevisto 	:= {}	
	aJornada	:= {}    
	nLenCalend	:= Len(aTabCalend)
	
	//-- Corre Todas as Previsoes de Horarios
	While nCal <= nLenCalend	
		//-- Desconsidera Datas Fora do Periodo
		If (aTabCalend[nCal,1] < dPerIni .Or. aTabCalend[nCal,1] > dPerFim).OR.;
		   aTabCalend[nCal,4]<>"1E"
		   nCal ++
		   Loop
		EndIf
		
		cOrdem     := aTabCalend[nCal,2] //-- Ordem
		dData	   := aTabCalend[nCal,1] //-- Data da Tabela Hor. Padrao	
		cTipoDia   := aTabCalend[nCal,6] //-- Tipo do Dia
		nQtdeHoras := aTabCalend[nCal,7] //-- Qtde de Horas trab. no Dia
		lAfastado  := aTabCalend[nCal,24] //-- Afastamento
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Para dias de Afastamento verifica se deve considerar ou nao  ³
		//³ o dia conforme o tipo de afastamento.						 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lAfastado   
		    //-- Se o tipo de afastamento não for ferias e não se deve considerar afastamentos diferentes de férias ou ambos 
		    //-- ou 
		    //-- Se o tipo de afastamento é ferias e não se deve considerar afastamentos de ferias ou ambos
		    //-- o dia não eh valido, caso contrario considera o dia.
			If ( 	(nAfast == 4 ) .or.  ;
					( aTabCalend[nCal,CALEND_POS_TIP_AFAST] <> "F"  .AND. (nAfast <> 2 .AND. nAfast <> 3)  ) .or.  ;
			   		( aTabCalend[nCal,CALEND_POS_TIP_AFAST] == "F"  .AND. (nAfast <> 1 .AND. nAfast <> 3)  )       ;
			   	)
			   	  nCal ++
			   Loop
			EndIf
		Endif
	    //-- Se Verifica Jornada e deve checar Inicio Jornada e a
	    //-- Hora inicial da Tabela for superior/igual a hora de checagem
		If !lNaoVerifJrn .AND. lCkIniJorn .AND. nSerHoraCk < fDhtoNs(dData,aTabCalend[nCal,3]) 
		   nCal ++
		   Loop
		Endif 
	    cPrevisto  :=''  
	    aHorarios  :={}
	    
		//-- Corre as Previsoes de mesma Ordem
		While cOrdem == aTabCalend[nCal,2]
			//-- Cria String com os Horarios Previstos
			cPrevisto+= StrZero(aTabCalend[nCal,3],5,2) + Space(1)
		    //-- Somente Para Entradas Considera Inicio de Jornadas
		    If Substr(aTabCalend[nCal,4],2,1)='E'
		   	   aAdd(aHorarios,	;
		   	                 Jornadas(aTabCalend[nCal,4],;	//1e/2e/3e/4e 
		   	                 aTabCalend[nCal,1],;    		//Data de Referencia Lim Inferior
		          			 aTabCalend[nCal,3],;	 		//Limite Inferior da Jornada em Serial
		          			 aTabCalend[nCal+1,1],;    		//Data de Referencia Lim Sup
		          			 aTabCalend[nCal+1,3]))			//Limite Superior da Jornada em Serial
		    				
		    Endif      			 
			nCal ++                  
			If	nCal > nLenCalend
			    Exit
			Endif    
		EndDo
		
		//-- Cria Elemento com Data/Horario/Ordem/Tipo do Dia/Afastado
		aAdd( aPrevisto, {dData, cPrevisto, cOrdem, cTipoDia, lAfastado})
		//-- Cria Elemento com os Horarios das Jornadas como SubArray
		aAdd( aJornada,  {cOrdem,Aclone(aHorarios),nQtdeHoras})
	EndDo

	//-- Monta Array com Marcacoes Realizadas.
	nPosJrn		:=0
	aRealizado 	:= {}
	nNumMarc   	:=0
	nLenMarc	:=Len(aMarcacoes)
	nLenaJornada:=Len(aJornada)
	
	//-- Se Existirem Marcacoes
	If !EMPTY(nLenMarc)
		//Corre Todas as Ordens (Cada Elemento em aJornada contem todas as Jornadas de mesma ordem)  
		For nX:=1 To nLenaJornada
			cOrdem := aJornada[nX,1]
					
			//-- Obtem a 1a das Marcacoes Segunda a Ordem Lida
			nPosJrn:= Ascan(aMarcacoes,{|x| x[3]==cOrdem})
			//-- Se Nao Existir Marcacao para a Ordem despreza 
			If Empty(nPosJrn)
			   Loop
			Endif
			//-- Corre as Marcacoes da ordem
		    nNumMarc	:=0
		    cRealizado	:=''
			nMarc		:=nPosJrn
			While cOrdem == aMarcacoes[nMarc,3]
				If (nMarc > 0 .and. nMarc <= nLenMarc)
					If nMarc < nLenMarc
						If SubStr( aMarcacoes[nMarc,AMARC_TIPOMARC],1,1 )  == SubStr( aMarcacoes[nMarc+1,AMARC_TIPOMARC],1,1 ) .and. ;
							aMarcacoes[nMarc,AMARC_ORDEM] == aMarcacoes[nMarc+1,AMARC_ORDEM]
							lMod := .T.
							lPar := .T.
						Else
							If nMarc > 1
								If SubStr( aMarcacoes[nMarc-1,AMARC_TIPOMARC],1,1 )  == SubStr( aMarcacoes[nMarc,AMARC_TIPOMARC],1,1 ) .and. ;
									aMarcacoes[nMarc-1,AMARC_ORDEM] == aMarcacoes[nMarc,AMARC_ORDEM]
									lMod := .T.
									lPar := .T.
								Else
									If( aMarcacoes[nMarc-1,AMARC_ORDEM] == aMarcacoes[nMarc,AMARC_ORDEM], lMod := .F., lMod := .T. )
									lPar := .F.
								EndIf
							Else
								lMod := .T.
								lPar := .T.
							EndIf
						EndIf
					Else
						If (nMarc == 1 .and. nLenMarc == 1)
							lMod := .F.
							lPar := .F.
						Else
							If SubStr( aMarcacoes[nMarc-1,AMARC_TIPOMARC],1,1 )  != SubStr( aMarcacoes[nMarc,AMARC_TIPOMARC],1,1 ) .and. ;
								aMarcacoes[nMarc-1,AMARC_ORDEM] != aMarcacoes[nMarc,AMARC_ORDEM]
								lMod := .F.
							Else
								lMod := .F.
							EndIf
						EndIf
					EndIf
				EndIf
				nNumMarc++
				cRealizado += StrZero(aMarcacoes[nMarc,2],5,2) + Space(1)
			    //-- Verifica Ausencia/Presenca nas Jornadas conforme Marcacao
			    Classifica(aMarcacoes[nMarc,1], aMarcacoes[nMarc,2],@aJornada,nX,nNumMarc,lMod,nMarc,lPar)
	 			nMarc++
	 			//-- Se o contador ultrapassar o total de Marcacoes abandona loop
	 			If nMarc>nLenMarc
	 			   Exit
	 			Endif   
			EndDo
			cProc := aMarcacoes[ nPosJrn , AMARC_PROCESSO ]
			cPer  := aMarcacoes[ nPosJrn , AMARC_PERIODO  ]
			cRot  := aMarcacoes[ nPosJrn , AMARC_ROTEIRO  ]
			cNPag := aMarcacoes[ nPosJrn , AMARC_NUM_PAGTO]			
			//-- Cria Elemento que conterah as marcacoes realizadas
			aAdd(aRealizado, {aMarcacoes[nPosJrn,1], cRealizado, cOrdem,cProc,cPer,cRot,cNPag})
		Next nX
	Endif 
	
	//-- Para Jornadas Sem Classificacao Considera que Houve Ausencia do Funcionario
	//-- Y[4]:= A1E OU A2E OU A3E ....
	AEVAL(aJornada,{|x| Aeval(x[2],{|y|if(Empty(y[4]),y[4]:='A'+Y[3],Nil)})})
	nPosJrn	:=0
	//-- Monta array com as Marcacoes a serem impressas.
	aFun 		:= {}         
	nLenPrev	:=Len(aPrevisto)
	cRealizado	:=''
	For nPre := 1 to nLenPrev		
		cPrevisto  := ''
		cRealizado := '' 
		cDet       := ''
		cTipAfas   := ''
		dDtAfas    := CtoD('  /  /  ')
		dDtRet     := CtoD('  /  /  ')		
		
		cPrevisto := StrTran(aPrevisto[nPre,2],'.',':')
		cPrevisto += Space(24-Len(cPrevisto))
		If ( nPos := aScan( aRealizado, { |x| x[3] == aPrevisto[nPre,3] } ) ) > 0
			cRealizado := StrTran(aRealizado[nPos,2],'.',':')
		EndIf
		cDet := Padr(PADR(DtoC(aPrevisto[nPre,1]),10) + DetHorario(cPrevisto,4),59)
		
		//-- Procura pelas Jornadas da Ordem
		nPosJrn:=Ascan(aJornada,{|x|x[1]==aPrevisto[nPre,3]})
		
	  	//-- Verifica se houve Ausencia em alguma das Jornadas da Ordem
		nPosOcor:=Ascan(aJornada[nPosJrn,2],{|x|Substr(x[4],1,1)=='A'}) 
		
		If !lAusente //-- Presentes 

			//-- Se nao Houve Marcacoes ou (se Ocorreu Alguma Ausencia e o usuario
			//-- deseja presenca no dia todo)
		    //-- Desconsidera Marcacoes do dia para Relacao de Presentes
			If Len(cRealizado) <= 0 
				Loop
			EndIf

			aAdd( aChave , { aRealizado[nPos,4] , aRealizado[nPos,5] , aRealizado[nPos,6] , aRealizado[nPos,7] } )

			//-- Se Nao Verifica Jornadas
		    If lNaoVerifJrn 		        
		        //-- Alimenta String com as Marcacoes Ocorridas
		        cOcorr:=cRealizado
		    Else    
			    //-- Carrega Presencas nas Jornadas do Dia Lido
				aOcorr:={}
   				Aeval(aJornada[nPosJrn,2],{|x|iF(Substr(x[4],1,1)=='P' .AND. !Empty(Substr(x[4],2,1)),aAdd(aOcorr,Substr(x[4],2,2)),Nil)})				
			    //-- Para Dias sem horario a Tabela Padrao Gera uma Jornada com horarios Zerados
		        //-- a Funcao Classifica acusa presenca para funcionarios com marcacoes nesse dia
		        //-- colocando no 4o. Elemento a letra 'P' sem a definicao da entrada (1E/2E...)
		        //-- Deste modo adotamos que, para dias sem horario mas com marcacao, o funcionario
		        //-- este presente em todas as jornadas. 

		        //-- Se Nao houver a identificacao da jornada 
		        If Empty(Len(aOcorr))
		            //-- Se Nao ocorreram ausencias
		            //-- funcionario fez horario em dia NAO TRABALHADO
		            If Empty(nPosOcor)
		        	   cOcorr:=cRealizado
		        	Else
		        	   //-- Funcionario Nao Veio nas Jornadas Solicitadas, embora
		        	   //-- Possa ter realizado marcacoes em outro horario(Fora da Tabela)
		        	   Loop
		        	Endif   
			    Else
			    	cOcorr:=''
				    //-- Se Deve Verificar Presenca em Todas as Jornadas
				    //-- Verifica se houve Presenca Parcial
				    If lTodasJrn
				     	//-- Se o Func. teve Presenca Parcial (Total de Presenca <> Total de Jornadas)
				     	//-- e Escolheu mais que uma Jornada
		       			If Len(aOcorr)#Len(aJornada[nPosJrn,2]) 
			   	   			Loop
			   			Endif
   		   			    cOcorr:= cRealizado
				    Else
					    //-- Imprime Jornadas com Presenca 
					   	For nOcorr:=1 To Len(aOcorr)
							//--Verifica se a Ocorrencia existiu em uma das Jornadas Selecionadas
							If aOcorr[nOcorr]$cjornadas
							   cOcorr:= cRealizado
					   		   Exit
					   		Endif	
					    Next nOcorr              
					Endif
				    //-- Para as Jornadas selecionadas o func nao esteve presente
				    //-- embora tenha marcacao para outras jornadas do dia.
				    If Empty(cOcorr)
				       Loop
				    Endif   
          		Endif
			Endif
			//-- Imprime Jornadas com Presenca 
			cDet += Space(1) + DetHorario(cOcorr,5)
			
		Else //-- Ausentes
			 //-- Se Nao Houve Ausencias
			 //-- Ou Tipo de Dia Diferente de Trabalhado/Feriado ou
			 //-- situacao de Transferido/ferias e demissao
			 If	Empty(nPosOcor) .OR. ;
			    (aPrevisto[nPre,4] # 'S' .AND. !aPrevisto[nPre,5])  .Or. ;
				fFeriado(SRA->RA_FILIAL,aPrevisto[nPre,1]) .Or. ;
				SRA->RA_SITFOLH $ 'DúT' .And. aPrevisto[nPre,1] > SRA->RA_DEMISSA
				Loop
			 EndIf
	
			//-- Carrega as Ocorrencias de Ausencias nas Jornadas do Dia Lido
			aOcorr:={}
		    Aeval(aJornada[nPosJrn,2],{|x|iF(Substr(x[4],1,1)=='A',aAdd(aOcorr,Substr(x[4],2,2)),Nil)})		   		    

		    //-- Se Nao Verifica Jornadas
		    If lNaoVerifJrn     
		       //-- Se ocorreu marcacoes desconsidera o dia
		       If Len(cRealizado) > 0 
					Loop
			   EndIf

			   If fAfasta( SRA->RA_FILIAL,SRA->RA_MAT,aPrevisto[nPre,1],@dDtafas,@dDtRet,@cTipAfas) .Or. ;
					SRA->RA_SITFOLH $ 'DúT' .And. aPrevisto[nPre,1] > SRA->RA_DEMISSA
					cDet += Space(1) + '|'+PADC(If(cTipAfas=='F',STR0018 ,STR0019 ),59)+'|'
					 // '           ** Ferias **            '###'          ** Afastado **           '
               Else   
  					cDet+=Space(1)+DetAusencia(aOcorr,Len(aJornada[nPosJrn,2]))
               Endif 
			Else
			//-- Se optou por Verificar Jornadas
			    //-- Verifica Afastamentos
			    If fAfasta( SRA->RA_FILIAL,SRA->RA_MAT,aPrevisto[nPre,1],@dDtafas,@dDtRet,@cTipAfas) .Or. ;
					SRA->RA_SITFOLH $ 'DúT' .And. aPrevisto[nPre,1] > SRA->RA_DEMISSA
					cDet += Space(1) + '|'+PADC(If(cTipAfas=='F',STR0018 ,STR0019 ),59)+'|' // '           ** Ferias **            '###'          ** Afastado **           '
				Else
			       lOcorr:=.F.
				    //-- Se Deve Verificar Ausencia em Todas as Jornadas
				    //-- Verifica se houve Ausencia Parcial
				    If lTodasJrn
				     	//-- Se o Func. teve Ausencia Parcial (Total de ausencia <> Total de Jornadas)
		       			If Len(aOcorr)#Len(aJornada[nPosJrn,2]) 
			   	   			Loop
			   			Endif 
		   				lOcorr:= .T.
			   		Else	
					    //-- Imprime Jornadas com Presenca 
					   	For nOcorr:=1 To Len(aOcorr)
							//--Verifica se a Ocorrencia existiu em uma das Jornadas Selecionadas
							If aOcorr[nOcorr]$cjornadas
							   lOcorr:= .T.
					   		   Exit
					   		Endif	
					    Next nOcorr  
					Endif                
			        //-- Para as Jornadas selecionadas o func nao esteve presente
			        //-- embora tenha marcacao para outras jornadas do dia.
			    	If !lOcorr
			       		Loop
			    	Endif
			    	
			    	cDet+=Space(1)+DetAusencia(aOcorr,Len(aJornada[nPosJrn,2]))
		        Endif
			Endif   	   
		EndIf           
		
    	cDet += If(lCracha,GetCracha(aPrevisto[nPre,1],aProvis),"")
    	
		aAdd(aFun, { cDet , aChave })
		aChave := {}		
		aOcorr := {}
	Next nPre

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Imprime Funcionarios                                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	fImpFun(@aFun)
	fCabTotal()

EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Imprime Rodape de Pagina na Ultima Pagina do Relatorio       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF lRoda
	IF Li < 58
		Li := 58
	EndIF
	Impr("","F")	
EndIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Termino do relatorio                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea('SRA')
dbSetOrder(1)
Set Device To Screen
If aReturn[5] == 1
	Set Printer To
	Commit
	ourspool(wnrel)
Endif

MS_FLUSH()

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fCabTotal   ³ Autor ³ Equipe Advanced RH  ³ Data ³ 19/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fCabTotal()

dbSelectArea( "SRA" )
dbSkip()

nPagAtu := ContFl

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fImpFun     ³ Autor ³ Equipe Advanced RH  ³ Data ³ 19/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Imprime um Funcionario e Executa Quebras                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fImpFun(aFun)

IF	Len(aFun) == 0
	Return( NIL )
EndIF

If cCcAnt # SRA->RA_CC .And. SRA->( !Eof() ) .And. (nOrdem == 2 .Or. nOrdem == 5) .and.	;
	cFilAnte == SRA->RA_FILIAL // Quebra p/ C.Custo
	fImprime({},2)
Elseif cTnoAnt # SRA->RA_TNOTRAB .And. SRA->( !Eof() ) .And. nOrdem == 4 .and. ;
	cFilAnte == SRA->RA_FILIAL // Quebra p/ Turno
	fImprime({},4)
ElseIf cFilAnte # SRA->RA_FILIAL .And. SRA->( !Eof() ) // Quebra p/ Filial
	fImprime({},3)
Endif

cFilAnte:= SRA->RA_FILIAL
cCcAnt  := SRA->RA_CC
cTnoAnt := SRA->RA_TNOTRAB

fImprime(aFun,1)
aFun := {}

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fImprime    ³ Autor ³ Equipe Advanced RH  ³ Data ³ 19/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fImprime(aFun,nTipo)
// nTipo: 1- Funcionario
//        2- Centro de Custo
//        3- Filial
//        4- Turno

Local Det    := ""
Local nPre   := 0
Local nLenFun:= 0
Local cChave := ''

If nTipo == 2	// Salta pagina a cada Centro de Custo
	If lCCTur .And. !Empty(cCcAnt)
		fPNR030Linha(2,,"P")
	Else
		fPNR030Linha(2)
	Endif
ElseIf nTipo == 3	// Salta pagina a cada Filial
	If nOrdem == 2	.Or. nOrdem == 4 .Or. nOrdem == 5 // - Centro de Custo ou Turno de Trab
		fPNR030Linha(nOrdem,,"P")
	Else
		fPNR030Linha(3,,"P")
	Endif
ElseIf nTipo == 4	// Salta pagina a cada Filial
	If lCCTur .And. !Empty(cTnoAnt) //Salta Pagina a Cada Turno
		fPNR030Linha(4,,"P")	// Imprime cabecalho do Turno
	Else
		fPNR030Linha(4)			// Imprime cabecalho do Turno
	Endif
Endif

If nTipo == 1
	Det := STR0026 + SRA->RA_MAT + ' ' + STR0027 + Padr(SRA->RA_NOME,30) + Space(1) // "MATR: "###"NOME: "
	Det += STR0028 + SRA->RA_CC + Space(2) + STR0029 + SRA->RA_TNOTRAB + ' '+fDescTno(SRA->RA_FILIAL,SRA->RA_TNOTRAB) // "C.CUSTO: "###"TURNO ATUAL: "
	Det := Left(Det,132)
	fPNR030Linha(1,Det)
	Det := STR0043 + SRA->RA_DEPTO + '-' + fDesc("SQB",SRA->RA_DEPTO,"QB_DESCRIC",40,SRA->RA_FILIAL) //"DEPTO: " 
	Det := Left(Det,132)
	fPNR030Linha(1,Det)	
	fPNR030Linha(1,Replicate("-",132)) 
	//-- Se o periodo Apresenta Varios dias, exibe-se o cabecalho da linha
	//-- para cada funcionario lido
	If !lUmDia
		//-- Imprime o Cabec da Linha Detalhe
	    Det:= STR0012+If(lCracha,' '+STR0030,'') //  '          |              Horario Programado               |   |             Horario Realizado                             | Cracha'
		Det := Left(Det,132)
		fPNR030Linha(1,Det)
	    //-- Linha 2 do Cabec Linha Detalhe
	    Det:= STR0013   // 'Data      |1a.E. 1a.S.|2a.E. 2a.S.|3a.E. 3a.S.|4a.E. 4a.S.|   |1a.E. 1a.S.|2a.E. 2a.S.|3a.E. 3a.S.|4a.E. 4a.S.|5a.E. 5a.S.|'
		Det := Left(Det,132)	
		fPNR030Linha(1,Det)   
		//-- Separador 
		fPNR030Linha(1,Replicate("-",132))
	Endif
	//-- Imprime as Linhas Detalhes  
	nLenFun:=Len(aFun)
	
	For nPre := 1 to nLenFun
		If Li >= (52+nAjusteFol)
			If nOrdem == 2	.Or. nOrdem == 4 .Or. nOrdem == 5 // - Centro de Custo ou Turno de Trab
				fPNR030Linha(nOrdem,,"P")
			Else
				fPNR030Linha(3,,"P")
			Endif
			//-- Imprime a Identificacao do Funcionario
			Det := STR0026 + SRA->RA_MAT + ' ' + STR0027 + SRA->RA_NOME+" "+STR0028+SRA->RA_CC+"  " //"C.CUSTO: "
			Det += STR0029 + SRA->RA_TNOTRAB + ' '+fDescTno(SRA->RA_FILIAL,SRA->RA_TNOTRAB)			//"TURNO ATUAL: "
			Det := Left(Det,132)
			fPNR030Linha(1,Det)
			Det := STR0043 + SRA->RA_DEPTO + '-' + fDesc("SQB",SRA->RA_DEPTO,"QB_DESCRIC",40,SRA->RA_FILIAL) //"DEPTO: " 
			Det := Left(Det,132)
			fPNR030Linha(1,Det)
			fPNR030Linha(1,Replicate("-",132))
			//-- Se o periodo Apresenta Varios dias, exibe-se o cabecalho da linha
			//-- para cada funcionario lido
			If !lUmDia
				//-- Imprime o Cabec da Linha Detalhe
			    Det:= STR0012+If(lCracha,' '+STR0030,'') //  '          |              Horario Programado               |   |             Horario Realizado                             | Cracha'  // '                         Horario Programado                                 Horario Realizado'
				Det := Left(Det,132)
				fPNR030Linha(1,Det)
			    //-- Linha 2 do Cabec Linha Detalhe
			    Det:= STR0013     // 'Data      |1a.E. 1a.S.|2a.E. 2a.S.|3a.E. 3a.S.|4a.E. 4a.S.|   |1a.E. 1a.S.|2a.E. 2a.S.|3a.E. 3a.S.|4a.E. 4a.S.|5a.E. 5a.S.|'
				Det := Left(Det,132)	
				fPNR030Linha(1,Det)   
				//-- Separador 
				fPNR030Linha(1,Replicate("-",132))
			Endif
		Endif
		If !lAusente .and. !( cChave == aFun[nPre,02,01,01] + aFun[nPre,02,01,02] + aFun[nPre,02,01,03] + aFun[nPre,02,01,04] )
			//Se mudou a chave, imprime quebra com Processo/Periodo/Roteiro/Num. Pagto
			Det := STR0038 + aFun[nPre,02,01,01] + ' - ' + STR0039 + aFun[nPre,02,01,02] + ' - ' + STR0040 + aFun[nPre,02,01,03] + ' - ' + STR0041 + aFun[nPre,02,01,04]
			cChave := aFun[nPre,02,01,01] + aFun[nPre,02,01,02] + aFun[nPre,02,01,03] + aFun[nPre,02,01,04]
			fPNR030Linha(1,Det)
		EndIf
		//-- Imprime a Linha Detalhe
		fPNR030Linha(1,Left(aFun[nPre,01],132))
	Next nPre
	fPNR030Linha(1,'')                    
	//-- Separador de Funcionario
	fPNR030Linha(1,Replicate("-",132))
	EndIF	

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fPNR030Linha³ Autor ³ Equipe Advanced RH  ³ Data ³ 19/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Imprime Cabecalhos                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fPNR030Linha(nTipo,Det,cPara)	// Imprime cabecalhos

Local cDet:=""

nTipo := If(nTipo==NIL,0,nTipo)
cPara := If(cPara==Nil,"C",cPara)

If Li >= (52+nAjusteFol) .Or. cPara == "P"
	Impr("","P")
Endif

If nTipo == 1
	Impr(Det,"C")
	lRoda := .T.
ElseIf nTipo > 0
	If nTipo == 2 .Or. nTipo == 5 .Or. nPagAtu <> ContFl
		cDet:= STR0021+SRA->RA_FILIAL+" - "+STR0022+SRA->RA_CC+" - "+DescCc(SRA->RA_CC,SRA->RA_FILIAL)		//"Filial: "###"    C.C: "
	Elseif nTipo == 3 .Or. nPagAtu <> ContFl
		cDet:= STR0021+SRA->RA_FILIAL+" - "+aInfo[1]		//"Filial: "
	Elseif nTipo == 4 .Or. nPagAtu <> ContFl
		cDet:= STR0021+SRA->RA_FILIAL+" - "+STR0023+SRA->RA_TNOTRAB+" - "+FDescTno(SRA->RA_FILIAL,SRA->RA_TNOTRAB)		//"Filial: "###" Turno: "
	Endif
	Impr(cDet,cPara)
	Impr(Replicate("-",132),"C")
	lRoda := .T.
Endif

nPagAtu := ContFl

Return( NIL )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³DetHorario  ³ Autor ³ Mauricio MR           ³ Data ³26/10/01³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Imprime Linha Detalhe de Marcacoes                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ DetHorario(cHorario,nTam)                                  ³±±
±±³          ³ cHorario -> Texto com as marcacoes 08:00 12:00 13:00 17:00 ³±±
±±³          ³ nTam     -> Numero de jornadas (Pares de horarios)         ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ cTexto   -> Jornadas Delimitadas por '|'                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Ponr030                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Static Function DetHorario(cHorario,nTam,lTReport)
Local cTexto	:='|'
Local nPos		:= 1 
Local cHora		:= ''
Local nHorario	:=	0
Local aHorarios := {}
Default lTReport := .F.
cHorario:=ALLTRIM(cHorario)

If lTReport

	//-- Corre Todas as Jornadas (Max de 5 conforme cabecalho) 
	For nHorario:=1 To nTam
		cHora:=Substr(cHorario,npos,11)
	    If !Empty(cHora)
	    	aAdd(aHorarios,PADR(cHora,11))
		Endif	             
		npos+=12
	Next nHorario    

	Return aHorarios
Else
	
	//-- Corre Todas as Jornadas (Max de 5 conforme cabecalho) 
	For nHorario:=1 To nTam
		cHora:=Substr(cHorario,npos,11)
	    If !Empty(cHora)
	    	cTexto+=PADR(cHora,11)
	    Else
	    	cTexto+=Space(11)
		Endif	             
		cTexto+='|'
		npos+=12
	Next nHorario    

	Return cTexto  
Endif


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³DetAusencia ³ Autor ³ Mauricio MR           ³ Data ³26/10/01³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Imprime Linha Detalhe de Marcacoes                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ DetAusencia(aOcorr,nNumJrn)                                ³±±
±±³          ³ aOcorr    -> Array com as Ocorrencias: A1e / A2e ...       ³±±
±±³          ³ nNumJrn   -> Qtde de Jornadas Previstas                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ cTexto   -> 1a Letra de cada Ocorrencia Centralizada e     ³±±
±±³          ³             Delimitada por '|'                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Ponr030                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/


Static Function DetAusencia(aOcorr,nNumJrn,lTReport)
Local nJornada 	:= 0
Local cTexto	:='|'
Local nPos		:= 0 
Local aHorarios	:= {}

Default lTReport := .F.

If lTReport

	//-- Corre Todas as Jornadas (Max de 5 conforme cabecalho) 
	For nJornada:=1 To 5

		cTexto	:= ""
		 //-- Se Nao Verifica Jornadas
		if lNaoVerifJrn
			cTexto+=If(nJornada<=nNumJrn,Space(5) +'A'+Space(5),Space(11)) 	
		Else
			//Verifica se Ocorrencia estah entre as Jornadas Solicitadas
			npos:=Ascan(aOcorr,{|x| Val(substr(x,1,1))==nJornada})
			If !Empty(nPos) .AND. nJornada<=nNumJrn  
				cTexto+=Space(5) +'A'+Space(5) 
			Else
				cTexto+=Space(11)
			Endif	             
		Endif
		aAdd(aHorarios,cTexto)
	Next nJornada    
	
	Return aHorarios
Else
	//-- Corre Todas as Jornadas (Max de 5 conforme cabecalho) 
	For nJornada:=1 To 5
		 //-- Se Nao Verifica Jornadas
		if lNaoVerifJrn     
			cTexto+=If(nJornada<=nNumJrn,Space(5) +'A'+Space(5),Space(11)) 	
		Else
			//Verifica se Ocorrencia estah entre as Jornadas Solicitadas
			npos:=Ascan(aOcorr,{|x| Val(substr(x,1,1))==nJornada})
			If !Empty(nPos) .AND. nJornada<=nNumJrn  
				cTexto+=Space(5) +'A'+Space(5) 
			Else
				cTexto+=Space(11)
			Endif	             
		Endif
		cTexto+='|'
	Next nJornada    
	
	Return cTexto             
Endif


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fValidJorn  ³ Autor ³Equipe Advanced RH     ³ Data ³22/10/01³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Validar a multipla escolha do tipo de marcacao 1E/2E/3E/4E  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fValidJorn( l1Elem , cTipo )                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observa‡„o³ Retorna Marcacoes de Entrada para Escolha de Jornada       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Ponr030                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fValidJorn( l1Elem , cTipo )

Local aMarc		:= {}
Local cMarc		:= ""
Local cTitulo	:= STR0034 // Selecione as Jornadas com Inicio na: 
Local MvParDef	:= ""
Local MvPar		:= &( Alltrim( ReadVar() ) )
Local nX		:= 0.00
Local nCampos	:= SPJ->( fCount() )
Local lRet	    := .T.

l1Elem			:= IF( l1Elem == NIL .and. ValType( l1Elem ) != "L" , .F. , .T. )
MvRet			:= Alltrim( ReadVar() )

IF cTipo != 'I'       

	For nX := 1 To nCampos
		cCampo := SPJ->( FieldName( nX ) )
		IF Subs(cCampo,1,8) == "PJ_ENTRA" 
			cMarc := Subs( cCampo , 9 , 1) + Subs( cCampo , 4 , 1 )
			MvParDef += ( cMarc + "-" )
			aAdd( aMarc , cMarc += ( "-" + GetDescMarc( cMarc  ) ) )
		EndIF
	Next nX
Else
	aAdd( aMarc , "I1-" + GetDescMarc( "I1" ) )
	aAdd( aMarc , "I2-" + GetDescMarc( "I2" ) )
	aAdd( aMarc , "I3-" + GetDescMarc( "I3" ) )
	MvParDef := "I1-I2-I3-"
EndIF

IF MvPar != NIL
	f_Opcoes(@MvPar,cTitulo,aMarc,MvParDef,12,49,l1Elem,3)
EndIF	

lRet:=.T.
&(MvRet) := MvPar

If Empty(&(MvRet))
   lRet:=.F.
Endif

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Classifica³ Autor ³ Mauricio MR           ³ Data ³ 26/10/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Classifica ARRAY aJornadas de Acordo com Existencia de     ³±±
±±³          ³ Marcacoes nas respectivas Jornadas.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ classifica(dMarc,hMarc,aJornada,nPos,nMarc)                ³±±
±±³          ³ dMarc     -> Data da Marcacao                              ³±±
±±³          ³ hMarc     -> Hora da Marcacao                              ³±±
±±³          ³ aJornada  -> Array com a Estrutura:                        ³±±
±±³          ³              [1] Ordem do Dia                              ³±±
±±³          ³              [2] [1] Hora Inicial Jornada em No.Serial     ³±±
±±³          ³              [2] [2] Hora Final                            ³±±
±±³          ³              [2] [3] Tipo de Entrada: 1e/2e/3e...          ³±±
±±³          ³              [2] [4] Ausencia/Presenca: A/P ou A1e/P1e...  ³±±
±±³          ³              [3] Total de Horas da Jornada                 ³±±
±±³          ³ nPos      -> Posicao da Jornada Lida                       ³±±
±±³          ³ nMarc     -> Numero da Marcacao da Ordem                   ³±±
±±³          ³ Retorna   -> aJornada[2][4] com A-Ausencia/P-Presenca      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponr030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function classifica(dMarc,hMarc,aJornada,nPos,nMarc,lMod,nNumMarc,lPar)
Local nSerMarc	:=0
Local nW     	:=0
Local nFim 		:=0
Local nCont		:= 0
Local cLoc		:= ""
Default lMod  := .F.

//-- Obtem o numero de horas/minutos da Marcacao
nSerMarc := 0
nSerMarc := NoRound(fDHtoNS(dMarc,hMarc))
//-- Corre todas as Jornadas do Dia
nW 	:= 0     
nFim:=Len(aJornada[nPos,2])
If !lMod
	If !Empty(aMarcacoes[nNumMarc,AMARC_TIPOMARC])
		For nW := 1 To nFim
			//-- Se o Total de Horas da Tabela Padrao for Nulo ou ,seja, nao foram definidos
			//-- horarios e o func. teve marcacoes consideramos como todas as jornadas trabalhadas
			//-- para considera-lo presente no dia.
			//-- Idem Se Nao Verificamos Jornadas e se o funcionario teve marcacoes
			//-- embora elas nao estejam compreendidas pelos horarios da tab.padrao
		
			If Empty(aJornada[nPos,3]) .OR. lNaoVerifJrn
				 aJornada[nPos,2,nW,4]:='P'  //Presente na Jornada
		    Endif
			
			nIniJrn  := aJornada[nPos,2,nW,1] //Limite Inferior da Jornada
			nFimJrn  := aJornada[nPos,2,nW,2] //Limite Superior da Jornada
			
			//-- Se a Marcacao For Inferior ao Limite Superior da Jornada 
			//-- OU
			//-- A Marcacao eh igual ao limite Superior da Jornada (saida) e 
			//-----Nao eh a 1a.Marcacao do Dia(ou seja o func. nao chegou na saida da jornada),
			//-- Entao o funcionario esteve presente na jornada
		    If  nSerMarc < nFimJrn   .OR.;
		        (nSerMarc = nFimJrn .AND. nMarc>1)        
				//-- Funcionario Presente na Jornada 
				If nNumMarc > 1
					If Empty(aJornada[nPos,2,nW,4]) .and. ;
						((aMarcacoes[nNumMarc,AMARC_ORDEM] == aMarcacoes[nNumMarc-1,AMARC_ORDEM]) .or. ;
							Empty(aMarcacoes[nNumMarc,AMARC_TIPOMARC]) .or. SubStr(aMarcacoes[nNumMarc,AMARC_TIPOMARC],2,1) == "E")
					   aJornada[nPos,2,nW,4]:='P'+aJornada[nPos,2,nW,3]  //Presente na Jornada
			        Endif		        
		        	Exit
		        Else
		        	aJornada[nPos,2,nW,4]:='P'+aJornada[nPos,2,nW,3]  //Presente na Jornada
		        	Exit		        	
		        EndIf
		    Else
		        //--Se a Marcacao for Maior que o Limite Superior da Jornada
		        //--E se nao houve outra marcacao inferior 
		        //--Funcionario Ausente na Jornada 
		        If Empty(aJornada[nPos,2,nW,4]) .and. (aMarcacoes[nNumMarc,AMARC_ORDEM] != aMarcacoes[nNumMarc-1,AMARC_ORDEM])
				   aJornada[nPos,2,nW,4]:='A'+aJornada[nPos,2,nW,3]  //Ausente na Jornada
				ElseIf (aMarcacoes[nNumMarc,AMARC_ORDEM] == aMarcacoes[nNumMarc-1,AMARC_ORDEM]) .and.;
						( SubStr(aMarcacoes[nNumMarc,AMARC_TIPOMARC],2,1) == "S" .and. SubStr(aMarcacoes[nNumMarc-1,AMARC_TIPOMARC],2,1) == "E")
						If ( aMarcacoes[nNumMarc-1,AMARC_TIPOMARC] == "1E") .and. Empty(aJornada[nPos,2,nW,4])
							aJornada[nPos,2,nW,4]:='P'+aJornada[nPos,2,nW,3] //Presente na Jornada
						ElseIf ( aMarcacoes[nNumMarc-1,AMARC_TIPOMARC] == "2E") .and. (Len(aJornada[nPos,2]) > nW)
							If Empty(aJornada[nPos,2,nW+1,4])
								aJornada[nPos,2,nW+1,4]:='P'+aJornada[nPos,2,nW+1,3] //Presente na Jornada	
							EndIf
						ElseIf ( aMarcacoes[nNumMarc-1,AMARC_TIPOMARC] == "3E") .and. (Len(aJornada[nPos,2]) > nW + 1) .and. Empty(aJornada[nPos,2,nW,4])
							If Empty(aJornada[nPos,2,nW+2,4])
								aJornada[nPos,2,nW+2,4]:='P'+aJornada[nPos,2,nW+2,3] //Presente na Jornada	
							EndIf
						EndIf
		        Endif
		   Endif                          
		                
		Next nW
	ElseIf Empty(aMarcacoes[nNumMarc,AMARC_TIPOMARC]) .and. !Empty(aMarcacoes[nNumMarc,AMARC_HORA]) .and. !lPar
		For nW := 1 To nFim
			nIniJrn  := aJornada[nPos,2,nW,1] //Limite Inferior da Jornada
			nFimJrn  := aJornada[nPos,2,nW,2] //Limite Superior da Jornada
			
		    If  nSerMarc < nFimJrn   .OR.;
		        (nSerMarc = nFimJrn .AND. nMarc>1)        
				//-- Funcionario Presente na Jornada 
				If Empty(aJornada[nPos,2,nW,4])
				   aJornada[nPos,2,nW,4]:='P'+aJornada[nPos,2,nW,3]  //Presente na Jornada
		        Endif
		        Exit
		    EndIf
		Next
	EndIf
Else
	If nNumMarc == 1
    	For nW := 1 To nFim
			nIniJrn  := aJornada[nPos,2,nW,1] //Limite Inferior da Jornada
			nFimJrn  := aJornada[nPos,2,nW,2] //Limite Superior da Jornada
			
		    If  nSerMarc < nFimJrn   .OR.;
		        (nSerMarc = nFimJrn .AND. nMarc>1)        
				//-- Funcionario Presente na Jornada 
				If Empty(aJornada[nPos,2,nW,4])
				   aJornada[nPos,2,nW,4]:='P'+aJornada[nPos,2,nW,3]  //Presente na Jornada
		        Endif
		        Exit
		    EndIf
		Next
	ElseIf  SubStr( aMarcacoes[nNumMarc,AMARC_TIPOMARC],2,1) $ "ES" .and. ;
		!Empty(aMarcacoes[nNumMarc,AMARC_TIPOMARC])
			aEval( aJornada[nPos,2], { |x| If(x[3] == aMarcacoes[nNumMarc,AMARC_TIPOMARC], x[4]:='P'+x[3], Nil ) } )
	ElseIf Empty(aMarcacoes[nNumMarc,AMARC_TIPOMARC]) .and. !Empty(aMarcacoes[nNumMarc,AMARC_HORA]) .and. !lPar
    	For nW := 1 To nFim
			nIniJrn  := aJornada[nPos,2,nW,1] //Limite Inferior da Jornada
			nFimJrn  := aJornada[nPos,2,nW,2] //Limite Superior da Jornada
			
		    If  nSerMarc < nFimJrn   .OR.;
		        (nSerMarc = nFimJrn .AND. nMarc>1)        
				//-- Funcionario Presente na Jornada 
				If Empty(aJornada[nPos,2,nW,4])
				   aJornada[nPos,2,nW,4]:='P'+aJornada[nPos,2,nW,3]  //Presente na Jornada
		        Endif
		        Exit
		    EndIf
		Next
	ElseIf Empty(aMarcacoes[nNumMarc,AMARC_TIPOMARC]) .and. !Empty(aMarcacoes[nNumMarc,AMARC_HORA]) .and. (nNumMarc > 1)
    	For nW := 1 To nFim
			nIniJrn  := aJornada[nPos,2,nW,1] //Limite Inferior da Jornada
			nFimJrn  := aJornada[nPos,2,nW,2] //Limite Superior da Jornada
			
		    If  nSerMarc < nFimJrn   .OR.;
		        (nSerMarc = nFimJrn .AND. nMarc>1)        
				//-- Funcionario Presente na Jornada 
				If Empty(aJornada[nPos,2,nW,4])
				   aJornada[nPos,2,nW,4]:='P'+aJornada[nPos,2,nW,3]  //Presente na Jornada
		        Endif
		        Exit
		    EndIf
		Next
	EndIf
EndIf
Return Nil


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Jornadas  ³ Autor ³ Mauricio MR           ³ Data ³ 26/10/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria ARRAY aJornadas a partir das Marcacoes de Entrada     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Jornadas(cTipo, dDataInf, LimInf,dDataSup,LimSuper)        ³±±
±±³          ³ cTipo     -> Tipo da Entrada : 1e/2e/3e...                 ³±±
±±³          ³ dDataInf  -> Data da Jornada Lim Inf                       ³±±
±±³          ³ LimInf    -> Hora Inicial da Jornada                       ³±±
±±³          ³ dDataSup  -> Data da Jornada Lim Sup                       ³±±
±±³          ³ LimSuper  -> Hora Final da Jornada                         ³±±
±±³          ³ Retorna   -> aRet Array aJornada                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponr030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Jornadas(cTipo,dDataInf,LimInf,dDataSup,LimSuper)
Local aRet:={}

If Substr(cTipo,2,1)='E'
	
	aret:={NoRound(fDhToNs(dDataInf,LimInf))	,;	//Limite Inferior da Jornada em Serial
		   NoRound(fDhToNs(dDataSup,LimSuper))	,;	//Limite Superior da Jornada em Serial
		   cTipo		   						,;	//Jornada com Inicio na 1e/2e/...
		   {}}                	 					//Reservado para Conter Ocorrencias
Endif

Return aRet
   
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetCracha ³ Autor ³ Mauricio MR           ³ Data ³ 11/12/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Obtem o Cracha do funcionario em determinada data          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GetCracha(dData)                                           ³±±
±±³          ³ Retorna   -> cCracha do Dia                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponr030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GetCracha(dData,aProvis,cCracha,cMat)

DEFAULT cCracha	:=SRA->RA_CRACHA 
DEFAULT cMat	:=SRA->RA_MAT

nPos:=Ascan(aProvis,{|x| x[1]<=dData .AND. x[2]>=dData .And. x[4]==cMat})

If nPos>0
   cCracha:=aProvis[nPos,3]
Endif

Return cCracha

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³LoadCracha³ Autor ³ Mauricio MR           ³ Data ³ 11/12/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Carrega Crachas da Filial(Exclusivo) ou Todos(Compartilhado³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ LoadCracha(@aCracha,cFil)                                  ³±±
±±³          ³ Retorna   -> aCracha                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Ponr030                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function LoadCracha(aCracha,cFil)

Local aArea:=GetArea()
Local aAreaSPE:=SPE->(GetArea())
Local cRefDE:=Dtos(dPerIni),cRefATE:=Dtos(dPerFim),cdIni,cdFim
DEFAULT cFil := fFilFunc("SPE") 

SPE->(dbsetorder(1))
SPE->(Dbseek(cFil))

//-- Carrega crachas da filial (se Exclusivo) ou Todos (caso contrario)
While !SPE->(Eof()) .AND. SPE->PE_FILIAL == cFil                          
    cdIni:=Dtos(SPE->PE_DATAINI)
    cdFim:=Dtos(SPE->PE_DATAFIM)
    //-- Somente Considera Intervalos que compreende o Periodo Solicitado
    If (cRefDE  >= cdIni   .AND. cRefDE  <= cdFim   ) .OR.;
       (cRefATE >= cdIni   .AND. cRefATE <= cdFim   ) .OR. ;
       (cdIni   >= cRefDE  .AND. cdIni   <= cRefATE )  .OR.;
       (cdFim   >= cRefDE  .AND. cdFim   <= cRefATE )         
       aAdd(aCracha,{SPE->PE_DATAINI,SPE->PE_DATAFIM,SPE->PE_MATPROV,SPE->PE_MAT})
	Endif
	SPE->(dbSkip())
Enddo

RestArea(aAreaSPE)
RestArea(aArea)

Return aCracha
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³LogErro  ³ Autor ³ Igor Franzoi		    ³ Data ³ 26/09/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Impressão de log de erros gerado durante a impressão do Rel ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ LogErro													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Ponr030   												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function LogErro(aErros)

Local nCont  := 0
Local nAux	 := 1
Local aImp	 := {}

aTitle := { STR0044 } 	//"Ocorrências Durante a Impressão"

/*Guarda no array para impressão só os funcionários que tiveram erros 
  durante a geração do relatório*/

For nCont := 1 To Len(aErros)
	If !Empty(aErros[nCont,2])
		Aadd( aImp, aErros[nCont,1] ) //Adiciona no array os funcionários a serem gerados no log e os erros
		For nAux := 1 To Len(aErros[nCont,2])
			Do Case
				Case aErros[nCont,2,nAux] == "01"
					aErros[nCont,2,nAux] = STR0045 //"Problema no modo de acesso do cadastro de períodos (SPO)."
				Case aErros[nCont,2,nAux] == "02"
					aErros[nCont,2,nAux] = STR0046 //"Período incorreto!"
				Case aErros[nCont,2,nAux] == "03"
					aErros[nCont,2,nAux] = STR0047 //"Número de ordens superior ao permitido."
				Case aErros[nCont,2,nAux] == "04"
					aErros[nCont,2,nAux] = STR0048 //"Problema ao Carregar Turno da Tabela Padrão!"
				Case aErros[nCont,2,nAux] == "05"
					aErros[nCont,2,nAux] = STR0049 //"Turno de Trabalho Inválido!"
				Case aErros[nCont,2,nAux] == "06"
					aErros[nCont,2,nAux] = STR0050 //"Regra de Apontamento Inválida!"
			EndCase
			aErros[nCont,2,nAux] := Space(30) + STR0051 + aErros[nCont,2,nAux]
			Aadd( aImp, aErros[nCont,2,nAux] )
		Next
	EndIf
Next

If ( !Empty(aImp), fMakeLog( { aImp } , aTitle , , .T., , , STR0052, "M", "P", .F. ) ,  )

Return Nil
/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr030Proc	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR01 para variavel private		³
|		   |cProcesso    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr030Proc(cTip)

Local lRet := .T.

cProcesso := &( ReadVar() )

If ( cTip == 'A' )
	lRet := PonX1Valid(cProcesso)
Else
	If !Empty(cProcesso)
		lRet := PonX1Valid(cProcesso)
	EndIf
EndIf

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr030Per	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR02 para variavel private		³
|		   |cPeriodo    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr030Per()

Local cChave := cProcesso
Local lRet := .T.

If !Empty(cRoteiro)
	cChave += cRoteiro
Else
	cChave += "PON"
EndIf

cPeriodo := &( ReadVar() )

cChave += cPeriodo

lRet := PonX1Valid(cChave)

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr030Rot	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR03 para variavel private		³
|		   |cRoteiro    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr030Rot()

Local lRet := .T.

cRoteiro := &( ReadVar() )

lRet := PonX1Valid(cProcesso+cRoteiro)

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr030NPag	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR04 para variavel private		³
|		   |cNumPag	    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr030NPag()

Local lRet := .T.

cNumPagto := &( ReadVar() )

lRet := PonX1Valid(cProcesso+cRoteiro+cPeriodo+cNumPagto)

Return( lRet )