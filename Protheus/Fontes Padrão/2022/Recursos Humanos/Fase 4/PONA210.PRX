#INCLUDE 'PONA210.CH'
#INCLUDE "PROTHEUS.CH"
#INCLUDE "PONCALEN.CH"
    
#DEFINE Confirma 1                  
#DEFINE Redigita 2
#DEFINE Abandona 3

Static lPnaGrv := ExistBlock( "PNA210GRV" )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PONA210  ³ Autor ³ Alexsandro Pereira    ³ Data ³ 08.03.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Manutencao dos abonos                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Marinaldo   ³24/10/01³Melhor³Melhoria na Tela de Visualizacao dos   abo³±± 
±±³            ³--------³------³nos (GetDados) e Inicio da Preparacao para³±± 
±±³            ³--------³------³que o Programa possa ser Incluso no   Menu³±± 
±±³            ³--------³------³do SIGAPON								  ³±± 
±±³Marinaldo   ³25/10/01³Melhor³Incluida Funcao AcertaSX3 para acerto   no³±± 
±±³            ³--------³------³Dicionario de Dados (Devera ser   Excluida³±± 
±±³            ³--------³------³para a Proxima Versao) e Permitir que    a³±± 
±±³            ³--------³------³Rotina de Abono Possa ser Incluida no Menu³±± 
±±³            ³--------³------³do SIGAPON.								  ³±± 
±±³Mauricio MR ³30/10/01³------³Eliminacao de linha nova na Alteracao.    ³±± 
±±³Mauricio MR ³30/10/01³Melhor³Fornecimento de Horario para o primeiro   ³±± 
±±³            ³        ³------³abono digitado. Compatibilizacao da grava-³±± 
±±³            ³        ³------³cao de Horas/Codigo de Abono com manuten- ³±± 
±±³            ³        ³------³cao direta de abonos via menu.            ³±± 
±±³Marinaldo   ³31/10/01³Melhor³Este Programa nao podera mais ser  chamado³±± 
±±³            ³        ³------³a partir do Menu. As Chamadas sempre  deve³±± 
±±³            ³        ³------³rao vir do PONA130(Manutencao de Apontamen³±± 
±±³            ³        ³------³tos) e terao tratamento diferenciado    de³±± 
±±³            ³        ³------³acordo com o Botao Selecionado.           ³±± 
±±³Mauricio MR ³06/12/01³Melhor³Implementacao do TP_MARCA. Toda Gravacao/ ³±± 
±±³            ³        ³------³Leitura dos abonos estara baseada no CC do³±± 
±±³            ³        ³------³arquivo de apontamento(Se ja existir) ou  ³±± 
±±³            ³        ³------³do array de apontamento(caso contrario.   ³±± 
±±³            ³        ³------³Eliminacao do Tratamento de Chamadas Dire ³±± 
±±³            ³        ³------³tas do Menu nas Rotinas de Gravacao e Dele³±± 
±±³            ³        ³------³cao.                                      ³±± 
±±³            ³        ³------³Identificacao do Tp de Marcacao junto ao  ³±±    
±±³            ³        ³------³evento na tela de manut. abonos.          ³±± 
±±³Marinaldo   ³11/12/01³Acerto³Nao Recriar o Calendario de Marcacoes    e³±± 
±±³            ³        ³------³Nem Redefinir o Periodo de Apontamento   e³±± 
±±³            ³        ³------³Restaurar o n no Retorno da Funcao        ³±± 
±±³=======================================================================³±± 
±±³                         *** Versao 7.10 ***                           ³±± 
±±³=======================================================================³±± 
±±³Mauricio MR ³21/02/02³Melhor³A)Retirada da Funcao AcertaSX3 em virtude ³±± 
±±³            ³        ³------³do transporte das alteracoes que ela reali³±±   
±±³            ³        ³------³zava para o SX3.                          ³±±   
±±³Mauricio MR ³19/06/02³Melhor³A)Alterada a funcao pn210Grava para tratar³±± 
±±³            ³        ³------³gravacao "em memoria" dos abonos(Pona280) ³±±    
±±³Mauricio MR ³24/06/02³Melhor³A)Criadas as funcoes:                     ³±± 
±±³            ³        ³------³Pn210Horas --> Calcula a Hora Final Abono ³±±   
±±³            ³        ³------³Pn210Evento, PnTpMarca, Pn210CC,Pn210Data ³±±   
±±³            ³        ³------³--> sao funcoes inicializadoras padroes   ³±±   
±±³            ³        ³------³    dos respectivos campos.               ³±±   
±±³Mauricio MR ³24/06/02³Melhor³A)Alterada a funcao PnTotAbo, retiradas   ³±± 
±±³            ³        ³------³instrucoes desnecessarias.                ³±±    
±±³Mauricio MR ³05/09/02³Melhor³A)Criada a Funcao Pn210VCodAb para tratar ³±± 
±±³            ³        ³------³especificamente da Validacao do Cod.Abono ³±± 
±±³Mauricio MR ³15/10/02³Acerto³A)Substituicao da Funcao SomaHoras por    ³±± 
±±³            ³        ³------³RetFimTab para calculo de hora final a    ³±±      
±±³            ³        ³------³partir da soma de hora ini e abonadas.    ³±± 
±±³MauricioMR  ³25/08/03³------³ Substituicao de Header por Protheus.ch   ³±±     
±±|Marinaldo   ³21/04/04³Melhor³Tratamento nos Lock dos Registros e Delete|±± 
±±³Mauricio MR ³21/06/04³ Bops ³Permite Campos de Usuario em 'Branco'.    ³±± 
±±³            ³        ³ 72032³                                          ³±±     
±±³Pedro Eloy  ³17/01/07³109644³Ajuste na rotina para tratar o WalkThru   ³±±     
±±³Pedro Eloy  ³20/03/07³109644³Tratado o nUsado na rotina de abono.      ³±±
±±³			   ³--------³------³ 11.5                      				  ³±±
±±³Emerson Camp³29/12/10³29591/³Ajuste para nova interface 11. Com a      ³±±
±±³			   ³        ³  2010³aplicação do parametro MV_ECMFTPP que     ³±±
±±³            ³        ³      ³afirma ser a versão 11.5 do Protheus      ³±±
±±³Glaucia M.  ³06/07/11³015527³Readequacao das telas para diversas		  ³±±
±±³			   ³        ³SDTCVW³resolucoes.								  ³±±
±±³Leandro Dr. ³20/12/11³TEFHFA³Restaurado ordem na busca do SX3 evitando ³±±
±±³            ³        ³      ³ocorrencia de eror.log.                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Function PONA210(cChamada,_nOpcx,nReg   ,dData,nHoras,cEvento,aHeaderSPC,aColsSPC,nLinSPC,cCCSPC,cTpMarca,cPrefix,cAliasApont,cDeptoSPC,cPostoSPC,cCodFuncSPC,cProces,cRoteiro,cPeriodo,cNrPag)

LOCAL cFiltraSRA			//Variavel para filtro
LOCAL aIndexSRA	:= {}		//Variavel Para Filtro
Local aArea:=GetArea()

Private bFiltraBrw	:= {|| Nil}		//Variavel para Filtro
Private lChamadaNIL := .F.

Private nHrsEve 	:= nHoras
Private cCodEve		:= cEvento  			//-- Utilizado para reter o Codigo do Evento a ser utilizado nas funcoes que não se pode passa-lo.

//-- Variaveis utilizadas como inicializadoras
Private cCCInit   	:= cCCSPC
Private cTpMarcaInit:= cTpMarca 
Private cDeptoInit	:= cDeptoSPC
Private cPostoInit	:= cPostoSPC
Private cCodFuncInit:= cCodFuncSPC
Private cProcesInit := cProces
Private cRoteiroInit:= cRoteiro
Private cPeriodoInit:= cPeriodo
Private cNumPagInit := cNrPag


IF ( lChamadaNIL := ( cChamada == NIL ) )
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³So executa se o Modo de Acesso do SPC e SRA foram iguais e se este  ulti³
	³mo nao estiver vazio e se o Periodo de Apontamento e' Valido.           ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	Pn210Atu('SPK',SRA->(Recno()),2) //Apenas Visualizacao
Else
	nOpcx := _nOpcx
	SRA->(dbGoTo(nReg))
	Pn210Atu('SPK' ,nReg,nOpcx,cChamada,dData,nHoras,cEvento,aHeaderSPC,@aColsSPC,nLinSPC,cCCSPC,cTpMarca,cPrefix,cAliasApont,cDeptoSPC,cPostoSPC,cCodFuncSPC,cProces,cRoteiro,cPeriodo,cNrPag)
	n := nLinSPC //Restaura a Posicao Original do n da GetDados da Tela de Manutencao de Apontamentos
EndIF
nUsado := Len(aHeader)
RestArea(aArea)

Return( NIL )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³PN210Atu  ³ Autor ³ Alexsandro Pereira    ³ Data ³ 08.03.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de (Vis.,Inc.,Alt. e Del. de  dependentes         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Numero da opcao selecionada                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Pona210                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function pn210Atu(cAlias,nReg,nOpcx,cChamada,dData,nHoras,cEvento,aHeaderSPC,aColsSPC,nLinSPC,cCCSPC,cTpMarca,cPrefix,cAliasApont,cDeptoSPC,cPostoSPC,cCodFuncSPC,cProces,cRoteiro,cPeriodo,cNrPag)

Local aKeys				:= GetKeys()
Local cFil		   		:= SRA->RA_FILIAL	
Local cMat         		:= SRA->RA_MAT
Local cNome        		:= SRA->RA_NOME
Local aAreaAtual   		:= GetArea()
Local a210Field    		:= {}          

Local oDlgA210, oGeta210 , oFont , oGroup

Local bSeekWhile	:= {|| SPK->PK_FILIAL + SPK->PK_MAT }
Local nSPKOrd		:= RetOrdem( "SPK" , "PK_FILIAL+PK_MAT+DTOS(PK_DATA)+PK_CODABO+STR(PK_HORINI,5,2)+ PK_TPMARCA+PK_CC+PK_DEPTO+PK_POSTO+PK_CODFUNC" )
									  
Local cCod			:= SRA->RA_MAT 
Local bSet15
Local bSet24
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaração de arrays para dimensionar tela		         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}

Local aAdv1Size		:= {}
Local aInfo1AdvSize	:= {}
Local aObj1Size		:= {}
Local aObj1Coords	:= {}

IF !lChamadaNIL
	a210Field := {"PK_FILIAL","PK_MAT","PK_CC","PK_CODEVE","PK_TPMARCA","PK_DEPTO","PK_POSTO","PK_CODFUNC","PK_PROCES","PK_PERIODO","PK_ROTEIR","PK_NUMPAG"}  
Else
	a210Field := {"PK_FILIAL","PK_MAT"}
EndIF	

Private a210BrancoField := {"PK_HORINI","PK_HORFIM","PK_FLAG"}
Private aAC        		:= {STR0007 ,STR0008 }	// "Abandona"###"Confirma"
Private aColsRec		:= {}					//--Array que contem o Recno() dos registros da aCols
Private aColsAnt   		:= {}
Private aVirtual   		:= {}  
Private aCols			:= {}
Private nCnt         	:= 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega Array de Campos Alteraveis                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cAlias := "SPK"

While .T.

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe algum dado no arquivo                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	dbSelectArea( cAlias )
	dbSetOrder(1)
	dbSeek( cFil + cMat )
	nCnt := 0
	While SPK->( !Eof() .and. PK_FILIAL + PK_MAT == cFil + cMat )
		IF !lChamadaNIL
			IF SPK->( (PK_DATA < dData .or. PK_DATA > dData) .or. (PK_CODEVE # cEvento) .or. (PK_TPMARCA # cTpMarca) .or.;
					  (PK_CC # cCCSPC) .or. (PK_DEPTO # cDeptoSPC) .or. (PK_POSTO # cPostoSPC) .or. (PK_CODFUNC # cCodFuncSPC))
				SPK->( dbSkip() )
				Loop
			EndIF
		Else
			IF SPK->( PK_DATA < dPerIni .or. PK_DATA > dPerFim )
				SPK->( dbSkip() )
				Loop
			EndIF
		EndIF	
		nCnt++
		dbSkip()
	EndDo
   
	IF lChamadaNIL .and. nCnt = 0
		MsgInfo(OemToAnsi(STR0012),OemToAnsi(STR0013))
		Exit
	Endif    
	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta a entrada de dados do arquivo                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Private aGETS[0],aHeader[0],aAlter[0],Continua:=.F.

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona ponteiro do arquivo cabeca e inicializa variaveis  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nOpcA := 0

	//-- Quando for Inclusao criar com 1 elemento
	nCnt := If (nOpcx == 3,1,If(nCnt==0,1,nCnt))

    Private nPosData	:= 0
	Private nPosCodA	:= 0
	Private nPosMotA	:= 0
	Private nPosHrIn	:= 0
	Private nPosHrFm	:= 0
	Private nPosHrAb	:= 0
	Private nPosFlag	:= 0
	Private nPosCODEVE	:= 0
   	Private nPosDepto	:= 0  
   	Private nPosPosto	:= 0  
   	Private nPosCodFunc	:= 0  
   	Private nPosProces	:= 0     	
   	Private nPosRoteir	:= 0     	   	
   	Private nPosPeriodo	:= 0     	   	   	
   	Private nPosNumPag	:= 0     	   	   	
   	   	
	
	Private bSort		:= { |x,y|	DtoS(x[nPosData])			+ ;
									StrZero(x[nPosHrFm],5,2)	+ ;
									StrZero(x[nPosHrAb],5,2)	+ ;
								 	StrZero(x[nPosHrIn],5,2)	< ;
									DtoS(y[nPosData])			+ ;
									StrZero(y[nPosHrFm],5,2)	+ ;
									StrZero(y[nPosHrAb],5,2)	+ ;
									StrZero(y[nPosHrIn],5,2)	  ;
							 }

	bMontCols	:= { || aCols:= pn210Acols(a210Field,nOpcx,dData,nHoras,cEvento,cChamada,aHeaderSPC,aColsSPC,nLinSPC,cCCSPC,cTpMarca,cPrefix,cAliasApont,nCnt,cDeptoSPC,cPostoSPC,cCodFuncSPC,cProces,cRoteiro,cPeriodo,cNrPag) }	//funcao para gerar aCols

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gerar o array aCols com os Eventos                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	FillGetDados(nOpcX							,; //1-nOpcX - número correspondente à operação a ser executada, exemplo: 3 - inclusão, 4 alteração e etc;
				 cAlias							,; //2-cAlias - area a ser utilizada;
				 nSPKOrd						,; //3-nOrder - ordem correspondente a chave de indice para preencher o  acols;
				 xFilial(cAlias)+cCod			,; //4-cSeekKey - chave utilizada no posicionamento da area para preencher o acols;
				 NIL							,; //5-bSeekWhile - bloco contendo a expressão a ser comparada com cSeekKey na condição  do While.
				 NIL							,; //6-uSeekFor - pode ser utilizados de duas maneiras:1- bloco-de-código, condição a ser utilizado para executar o Loop no While;2º - array bi-dimensional contendo N.. condições, em que o 1º elemento é o bloco condicional, o 2º é bloco a ser executado se verdadeiro e o 3º é bloco a ser executado se falso, exemplo {{bCondicao1, bTrue1, bFalse1}, {bCondicao2, bTrue2, bFalse2}.. bCondicaoN, bTrueN, bFalseN};
				 a210Field	   	    		    ,; //7-aNoFields - array contendo os campos que não estarão no aHeader;
				 NIL							,; //8-aYesFields - array contendo somente os campos que estarão no aHeader;
				 NIL							,; //9-lOnlyYes - se verdadeiro, exibe apenas os campos de usuário;
				 NIL							,; //10-cQuery - query a ser executada para preencher o acols(Obs. Nao pode haver MEMO);
				 bMontCols						,; //11-bMontCols - bloco contendo função especifica para preencher o aCols; Exmplo:{|| MontaAcols(cAlias)}
				 NIL							,;  
				 NIL 							,;  
				 NIL							,; 
				 NIL							,; 
				 NIL 							)	
				


	aColsAnt := aClone(aCols)
	nOpca := 0
    
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

	aAdvSize		:= MsAdvSize(,.T.,380)
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }					 
	aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )		//1-Cabecalho1
	aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )		//2-Cabecalho2
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )		//3-MsGetDados
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords ) 


	//Divisao em colunas Linha 1-Cabecalho Dados Funcionario
	aAdv1Size		:= aClone(aObjSize[1])
	aInfo1AdvSize	:= { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 1 , 1 }
	aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )	//1-Matricula
	aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )	//2-Nome
	aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )	//3-Admissao
	aObj1Size		:= MsObjSize( aInfo1AdvSize , aObj1Coords,,.T. )        

	
	DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
	DEFINE MSDIALOG oDlga210 TITLE OemToAnsi(STR0009) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL				    // "Manuten‡„o dos Abonos"
	
	@ aObj1Size[1,1],aObj1Size[1,2] GROUP oGroup TO aObj1Size[1,3],aObj1Size[1,4] LABEL OemToAnsi(STR0010) OF oDlga210 PIXEL									// "Matricula:"
	oGroup:oFont:= oFont
	@ aObj1Size[2,1],aObj1Size[2,2] GROUP oGroup TO aObj1Size[2,3], aObj1Size[2,4] LABEL OemToAnsi(STR0011) OF oDlga210 PIXEL									// "Nome:"
	oGroup:oFont:= oFont
	@ aObj1Size[3,1],aObj1Size[3,2] GROUP oGroup TO aObj1Size[3,3], aObj1Size[3,4] LABEL OemToAnsi(STR0016) OF oDlga210 PIXEL									// "Admiss„o:"
	oGroup:oFont:= oFont
	
	@ aObj1Size[1,1]+8,aObj1Size[1,2]+5 SAY StrZero(Val(SRA->RA_MAT),TamSx3("RA_MAT    ")[1]) 	SIZE 050,10 OF oDlga210 PIXEL FONT oFont
	@ aObj1Size[2,1]+8,aObj1Size[2,2]+5 SAY OemToAnsi(SRA->RA_NOME) 							SIZE 146,10 OF oDlga210 PIXEL FONT oFont
	@ aObj1Size[3,1]+8,aObj1Size[3,2]+5 SAY Dtoc(fDtaAdmis())									SIZE 050,10 OF oDlga210 PIXEL FONT oFont
	
	IF !lChamadaNIL
		@ aObjSize[2,1],aObjSize[2,2] GROUP oGroup TO aObjSize[2,3], aObjSize[2,4] LABEL OemToAnsi(STR0017) OF oDlga210 PIXEL									// "Evento:"
		oGroup:oFont:= oFont
		@ aObjSize[2,1]+8,aObj1Size[1,2]+5  SAY OemToAnsi(cEvento) + ' - ' + OemToAnsi(DescPDPon(cEvento,SRA->RA_FILIAL,20))+'' + OemToAnsi(cTpMarca) SIZE 146,10 OF oDlga210 PIXEL FONT oFont
		oGeta210 := MSGetDados():New(aObjSize[3,1],aObjSize[3,2],aObjSize[3,3],aObjSize[3,4],nOpcx,"aPont210Ok" ,"pn210TudOk" ,"",If(nOpcx=2.Or.nOpcx=5,Nil,.T.),aAlter,1)
		oGeta210:oBrowse:bChange := { || Pn210Pad(dData,aHeaderSPC,aColsSPC,nLinSPC),oGeta210:oBrowse:Refresh() } 
	Else
		oGeta210 := MSGetDados():New(aObjSize[2,1],aObjSize[2,2],aObjSize[3,3],aObjSize[3,4],nOpcx,"AllWaysTrue","AllWaysTrue" ,"",,,1)

	EndIF	
    
    bSet15 := {|| nOpca:=If(nOpcx=5,2,1),If(oGeta210:TudoOk(),(RestKeys(aKeys,.T.),oDlga210:End()),nOpca:=0)}
    bSet24 := {|| RestKeys(aKeys,.T.), oDlga210:End()}
    
	ACTIVATE MSDIALOG oDlga210 ON INIT EnchoiceBar(oDlga210,bSet15,bSet24,Nil,Nil) CENTERED

   //--Se nao for Exclusao
	IF nOpcA == Redigita
		LOOP
	ElseIF nOpcA == Confirma .And. nOpcx # 2
		Begin Transaction
			//--Gravacao
			pn210Grava(cAlias,nOpcx,aColsRec,aHeaderSPC,@aColsSPC,nLinSPC,cChamada,cEvento,cCCSPC,cTpMarca,cPrefix,cAliasApont,,cDeptoSPC,cPostoSPC,cCodFuncSPC,cProces,cRoteiro,cPeriodo,cNrPag)
			//--Processa Gatilhos
			EvalTrigger()
		End Transaction
   EndIF
	Exit
EndDo
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade da janela                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAreaAtual)
RestKeys(aKeys,.T.)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³PN210aCols³ Autor ³ Alexsandro Pereira    ³ Data ³ 09/03/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Criar os Arrays Aheader e aCols dos abonos                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONA210                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function pn210aCols(a210Field,nOpcx,dDataIni,nHoras,cEvento,cChamada,aHeaderSPC,aColsSPC,nLinSPC,cCCSPC,cTpMarca,cPrefix,cAliasApont,nCnt,cDeptoSPC,cPostoSPC,cCodFuncSPC,cProces,cRoteiro,cPeriodo,cNrPag)

Local cAlias    := "SPK"
Local dData     := Ctod('  /  /  ')
Local lSemAbono := .T.  
Local lIniPad	:= If (nOpcx == 3 .or. nOpcx == 4 .or. nOpcx == 5 , .T. , .F. )
Local nPosaCols := 0
Local naCols    := 0
Local nPosTab	:= 0
Local nPosOrdem	:= 0
Local cOrdem	:= ''  
Local aRetHrNot	:= {} 
Local lNoturno	:= .F.
Local nIniHnot 	:= 0
Local nFimHnot 	:= 0
Local nMinHnot 	:= 0
Local nUsado	:= Len(aHeader)
Local aCOLS[nCnt][nUsado+1]
naCols    		:= Len(aCols)

nPosData	:= GdFieldPos( "PK_DATA"   	)
nPosCodA	:= GdFieldPos( "PK_CODABO" 	)
nPosMotA	:= GdFieldPos( "PK_MOTABO" 	) 
nPosHrIn	:= GdFieldPos( "PK_HORINI" 	)
nPosHrFm	:= GdFieldPos( "PK_HORFIM" 	)
nPosHrAb	:= GdFieldPos( "PK_HRSABO" 	)
nPosFlag	:= GdFieldPos( "PK_FLAG" 	)
nPosCODEVE	:= GdFieldPos( "PK_CODEVE" 	)
nPosDepto	:= GdFieldPos( "PK_DEPTO" 	)
nPosPosto	:= GdFieldPos( "PK_POSTO" 	)
nPosCodFunc	:= GdFieldPos( "PK_CODFUNC" )
nPosProces	:= GdFieldPos( "PK_PROCES" 	)
nPosRoteir	:= GdFieldPos( "PK_ROTEIR" 	)
nPosPeriodo	:= GdFieldPos( "PK_PERIODO" )
nPosNumPag	:= GdFieldPos( "PK_NUMPAG" 	)

nCnt := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Trata a EXISTENCIA DE ABONOS ³
//³Realiza a Carga de Dados     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

dbSelectArea(cAlias)
If dbseek(SRA->( RA_FILIAL + RA_MAT) )
	While (cAlias)->( !Eof() .and. PK_FILIAL + PK_MAT == SRA->( RA_FILIAL + RA_MAT ) )
		IF !lChamadaNIL
			IF (cAlias)->( PK_DATA < dDataIni .or. PK_DATA > dDataIni .or. PK_CODEVE # cEvento ;
			               .or. PK_TPMARCA # cTpMarca .or. PK_CC # cCCSPC ;
						   .or. PK_DEPTO # cDeptoSPC .or. PK_POSTO# cPostoSPC .or. PK_CODFUNC # cCodFuncSPC;			               
			               )
				(cAlias)->( dbSkip() )
				Loop
			EndIF
		Else
			IF SPK->( PK_DATA < dPerIni .or. PK_DATA > dPerFim )
				SPK->( dbSkip() )
				Loop
			EndIF 
		EndIF
		nCnt++
		nUsado:=0
		dbSelectArea( "SX3" )
		dbSetOrder(1)
		dbSeek( cAlias )
		While SX3->( !Eof() .and. X3_ARQUIVO == cAlias )
			IF SX3->( x3uso(x3_usado) .and. cNivel >= x3_nivel .and. aScan(a210Field,AllTrim(x3_campo)) = 0 )
			
				
				IF X3_Context == "V"
					nUsado++
					aCols[nCnt,nUsado] := CriaVar(Trim(x3_campo))
					Aadd( aVirtual , Trim(x3_campo) )				
				   	  
					If AllTrim(X3_CAMPO) == 'PK_MOTABO'
						If SP6->(dbSeek(fFilFunc('SP6')+SPK->PK_CODABO))
							M->PK_MOTABO := SP6->P6_DESC
							Else
							M->PK_MOTABO := STR0015 //'*** NAO CADASTRADO ***'
						Endif
						aCols[nCnt,nUsado]  := M->PK_MOTABO
				
					ElseIf AllTrim(X3_CAMPO) == 'PK_HRSABO'
						
						/*/
						ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						³ Obtem a Hora Noturna de Acordo com o Turno                  ³
						ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/ 
						aRetHrNot:= RetHrNot(aCols[nCnt,nPosData])
						nIniHnot := aRetHrNot[1]	// Inicio da Hora Noturna
						nFimHnot := aRetHrNot[2]	// Final da Hora Noturna
						nMinHnot := aRetHrNot[3]	// Minutos da Hora Noturna
						lNoturno := fHorNot(aRetHrNot)						                                                  
						
					   	dData 			  := If(aCols[nCnt,nPosHrFm] < aCols[nCnt,nPosHrIn],dData + 1, aCols[nCnt,nPosData])
					   	aCols[nCnt,nUsado]	:= Round(fCalHoras(dData, aCols[nCnt,nPosHrFm], aCols[nCnt,nPosData],aCols[nCnt,nPosHrIn], Nil, Nil, lNoturno, aCols[nCnt,nPosData],Nil,	nIniHnot, 	nFimHnot, nMinHnot), 2) 
					Endif 
					
				Else
					nUsado++
					aCOLS[nCnt][nUsado] := &(cAlias+"->"+X3_CAMPO)
				Endif
				If !(AllTrim(Upper(SX3->X3_CAMPO))$"PK_DATA") .or. lChamadaNIL
					aAdd(aAlter,SX3->X3_CAMPO)
				Endif
			Endif
			dbSkip()
		EndDo
        nUsado := Len(aHeader)        
        If nOpcx # 2 .And. nOpcx # 5
			aCOLS[nCnt][nUsado+1] := .F.
		Endif
    	// Gravação do alias e Recno para o WalkTrhu
		aCOLS[nCnt][nUsado-1] := cAlias
		aCOLS[nCnt][nUsado]   := (cAlias)->(Recno())
     
        //Matriz criada para Controlar quais e quantos elementos estao de fato gravados e
        //confrontar com as informacoes na memoria (aCols)
		dbSelectArea( cAlias )
		aAdd(aColsRec,{})
		aAdd(aColsRec[Len(aColsRec)], aCols[nCnt,1])
		aAdd(aColsRec[Len(aColsRec)], aCols[nCnt,4])
		aAdd(aColsRec[Len(aColsRec)], Recno())

	    dbSelectArea("SPK")
        dbSkip()
    EndDo
    If !Empty(nCnt)
       lSemAbono:=.F.
	Endif    

Endif 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Preenche LINHA EM BRANCO para Ausencia de Abonos    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        
If (!lChamadaNIL .And. lSemAbono ) 

    //Inicializa a Linha com valores a partir do SX3 (Dicionario de Dados)
    //-- Somente Se NAO Existir Abonos
    
	dbSelectArea("Sx3")
	dbSetOrder(1)
	dbseek(cAlias)
	nUsado:=0

	While !EOF() .And. (x3_arquivo == cAlias)
		IF x3uso(x3_usado) .AND. cNivel >= x3_nivel .and. ASCAN(a210Field,Trim(x3_campo)) = 0
			nUsado++
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Monta Array do 1§ Elemento Vazio. Se Inclusao                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aCOLS[naCols][nUsado]	:= (cAliasApont)->(CriaVar(SX3->x3_campo,lIniPad))	
					
			If x3_context == "V"		
				Aadd( aVirtual , Trim(x3_campo) )
			Endif
			// tratando os campo alteravel na getdados
			If !(AllTrim(Upper(SX3->X3_CAMPO))$"PK_DATA") .or. lChamadaNIL
				aAdd(aAlter,SX3->X3_CAMPO)
			Endif
			
		Endif
		dbSkip()
	EndDo
	nUsado	:= Len(aHeader)
	// gravacao do elemento no array para o uso do WalkThru
	aCols[naCols][nUsado-1]	:=  cAlias
	aCols[naCols][nUsado]	:=  0
	aCOLS[naCols][nUsado+1]	:= .f.
                                                                 
	//Preenche Campos (Data /Evento   identicos ao Apontamento) 
	//				   Flag sugere-se tipo Informado "I"
	//				   Abono sugere-se o Abono "rapido" se existir no Apontamento
	
	//Obrigatoriamente Garante que Data do Abono seja igual a Data do Apontamento
	If nPosDATA > 0
		aCols[naCols, nPosData] := dDataIni
	EndIf
 	    
    // Preenche Flag de Tipo de Abono (Informado/Gerado) com informado "I"
	If nPosFLAG > 0
		aCols[naCols, nPosFlag] := "I"
	EndIf 

    
	//Preenche Codigo do Abono Somente Qdo nao houver Abonos Anteriores 
	
 	 // Preenche Motivo de Abono a Partir do SPC    
	If (nPos  := GdFieldPos( cPrefix+'ABONO', aHeaderSPC ) ) > 0
		//Cod.Abono em SPK:=Cod.Abono em SPC
		aCols[naCols,nPosCodA] := aColsSPC[nLinSPC,nPos]
  
	    //-- Se o usuario digitou abono "rapido"
	    If !Empty(aCols[naCols,nPosCodA])
	    	//-- Preenche campo virtual "Descricao do motivo de abono"
	    	If SP6->(dbSeek(fFilFunc('SP6')+aCols[naCols,nPosCodA]))
		       aCols[naCols,nPosMotA] := SP6->P6_DESC
		    Else 
		    	aCols[naCols,nPosMotA] := STR0015 //'*** NAO CADASTRADO ***'
		    Endif
		Else 
		   //Sem abono "rapido" digitado
		   aCols[naCols,nPosMotA] := STR0015 //'*** NAO CADASTRADO ***'
		Endif  
	
	Endif                                                  
    
	
	//Calcula Saldo de Horas a Abonar    
	If  !Empty(nPosHrAb)
		dData 			  := If(aCols[naCols,nPosHrFm] < aCols[naCols,nPosHrIn],dData + 1, aCols[naCols,nPosData]) 
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Obtem a Hora Noturna de Acordo com o Turno                  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/ 
		aRetHrNot:= RetHrNot(dData)
		nIniHnot := aRetHrNot[1]	// Inicio da Hora Noturna
		nFimHnot := aRetHrNot[2]	// Final da Hora Noturna
		nMinHnot := aRetHrNot[3]	// Minutos da Hora Noturna     
		lNoturno := fHorNot(aRetHrNot)			
		aCols[naCols, nPosHrAb] := Max(0,Subhoras(nHrsEve,PnTotAbo(aCols,aHeader,Len(aCols[1]))))
		//Se Existir +1 abono Calcula Horas Inicial e Final para o Abono a ser Informado
		If naCols>1  .AND. !Empty(	aCols[naCols, nPosHrAb])
			//Sugere Hora Inicial do Abono
			If !Empty(nPosHrIn)
			    //Calcula Hora Inicial para o Abono  (Hora_Fim_Abono_Anterior)
				aCols[naCols, nPosHrIn] :=	aCols[naCols-1, nPosHrFm] 
			Endif
			//Calcula e Sugere Hora Final do Abono (Hora Inicial + Saldo de Horas a Abonar)
			If !Empty(nPosHrFm)
			    aCols[naCols, nPosHrFm] := RetFimTab(aCols[naCols,nPosData]  , aCols[naCols,nPosHrIn] , aCols[naCols,nPosHrAB] , NIL, lNoturno, aCols[naCols,nPosData], 	nIniHnot, nFimHnot,  nMinHnot  )[2]
			Endif
		Elseif naCols==1.AND. !Empty(	aCols[naCols, nPosHrAb])
				//-- Sugere Horas a Abonar e Horarios Quando Nao Existirem Abonos
				//-- Cadastrados e horas a Abonar DIGITADAS.
				
				//Obtem a Posicao do Primeiro Elemento com Data Igual do Apontamento e
			    //a primeira entrada de acordo com a ordem.
			    //OBSERVACAO: Para Horarios Noturnos ele pode nao corresponder a primeira Entrada (Entrou as 22 do dia anterior)
			    //O que nos forca a obter a Ordem do elemento e assim posicionar na 1a Entrada
			    //de acordo com a Data.
				nPosTab := Ascan(aTabCalend, { |x| x[1] == dDataIni }) 
				cOrdem  := aTabCalend[nPosTab,2]
				nPosOrdem:= Ascan(aTabCalend, { |x| x[2] == cOrdem })
		
				If  nPosHrIn  > 0
					If nPosOrdem > 0    
					 aCols[naCols, nPosHrIn] := If(nHoras > 0, aTabCalend[nPosOrdem,3],0)
					Endif
				EndIf
			
				If nPosHrAb > 0
					aCols[naCols, nPosHrAb] := nHoras
				EndIf
			
				If  nPosHrFm > 0
					If nPosOrdem > 0
	 					aCols[naCols, nPosHrFm] := RetFimTab(aCols[naCols,nPosData]  , aCols[naCols,nPosHrIn] , aCols[naCols,nPosHrAB] , NIL, lNoturno, aCols[naCols,nPosData], 	nIniHnot, nFimHnot,  nMinHnot  )[2]
					Endif
				EndIf
		EndIf
	EndIf
EndIF

//-- Ordena os lancamentos de abono por Horarios
aSort(aCols,,, bSort )

// -- Coloca os abonos em branco nas ultimas linhas do browse
Pn210Ordem(@aCols)
Return(aCols)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³PN210Grava³ Autor ³ Mauricio MR           ³ Data ³ 19.06.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava/Atualiza Abonos                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONA210/280                                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/          
Function pn210Grava(cAlias,nOpcx,aColsRec,aHeaderSPC,aColsSPC,nLinSPC,cChamada,cEvento,cCCSPC,cTpMarca,cPrefix,cAliasApont,lArquivo,cDeptoSPC,cPostoSPC,cCodFuncSPC,cProces,cRoteiro,cPeriodo,cNrPag)

Local aAreaSPC	  := (cAliasApont)->( GetArea() )
Local cFilMat	  := SRA->( RA_FILIAL + RA_MAT )	
Local cCodAbo	  := CriaVar('PK_CODABO',.T.)
Local cMsgErr	  := ""
Local ny          := 0  
Local nZ          := 0
Local nMaxArray   := Len(aHeader)
Local nHoras      := 0  
Local nZeraHorasAB:= 0
Local dDatant     := Ctod("//")
Local nPosSPCQTab := GdFieldPos( cPrefix+'QTABONO' 	, aHeaderSPC ) 
Local nPosAbono   := GdFieldPos( cPrefix+'ABONO'   	, aHeaderSPC ) 
Local nPos		  := 0
Local lPrimVez    := .T.    
Local naCols      :=Len(aCols) 
Local naColsRec   :=Len(aColsRec)
Local aColsAux	  :={} 
Local aRetHrNot	  :={}	
Local lNoturno	  := .F.	
Local nUsado	  := Len(aHeader)

DEFAULT cEvento := Space(TamSx3("PK_CODEVE")[1])
DEFAULT lArquivo:= .T.                                 
DEFAULT lPnaGrv	:= ExistBlock( "PNA210GRV" )


//-- Abre inicio da transacao de gravacao e eliminacao de itens
Begin Transaction

    dbSelectArea(cAlias)
	For nZ:=1 TO naCols 
	    If Empty(aCols[ nZ , nPosCodA ])
	      Loop
	    Endif
		//-- Elimina os itens do aCols marcados para exclusao e atualiza o SPC
		//-- zerando as horas abonadas dos itens eliminados e eliminado o codigo de abono
		If nZ <= naColsRec    
			If ( lArquivo )
				dbGoto(aColsRec[nZ,3])
				IF !RecLock(cAlias,.F.,.T.)
					Loop
				EndIF
			Endif
			 
			//--Verifica se esta deletado     
			If aCols[nZ,nUsado+1]
				//-- Subtrai a quantidade abonada em SPC->PC_QTABONO
				aColsSPC[nLinSPC,nPosSPCQTab] := Max(0,SubHoras(aColsSPC[nLinSPC,nPosSPCQTAB],aCols[nZ,nPosHrAb]))
				//-- Apaga o codigo de abono na tela de apontamentos somente
				//-- quando nao houver horas abonadas, evitando que em abonos parciais
				//-- o codigo de abono seja eliminado.
				nZeraHorasAB:=aColsSPC[nLinSPC,nPosSPCQTab]
				If 	nZeraHorasAB <= 0
					aColsSPC[nLinSPC,nPosAbono] :=  SPACE( LEN(cCodAbo) )
				Endif
			    
				//--Se a  Quantidade de Horas Abonadas na Manutencao de Abonos for Zero
				//-- Apaga o Codigo do Primeiro Abono(SPK) e a Zera Qtde Horas Abonadas no Evento (SPC)
				IF  Empty(nZeraHorasAB)  
				    If lArquivo
						IF (cAliasApont)->( dbSeek(cFilMat+cEvento+Dtos(aCols[nZ,nPosData])+cTpMarca+cCCSPC+cDeptoSPC+cPostoSPC+cCodFuncSPC,.F.) )					    
							IF RecLock(cAliasApont,.F.,.T.)
				      			//-- Atualiza Codigo e Qtde de Horas
								(cAliasApont)->(&(cPrefix+"ABONO"))	:= SPACE( LEN(cCodAbo) )
								(cAliasApont)->(&(cPrefix+"QTABONO")) := nZeraHorasAB
								(cAliasApont)->( MsUnLock() )
							EndIF
							(cAliasApont)->( dbSkip() )
						EndIF
						RestArea( aAreaSPC )
					Else     
					    //-- Atualiza Memoria 
				    	//-- Atualiza Codigo e Qtde de Horas
						If nPosAbono > 0
							aColsSPC[nLinSPC,nPosAbono] :=  SPACE( LEN(cCodAbo) )
						Endif 
						
						If nPosSPCQTab > 0
							aColsSPC[nLinSPC,nPosSPCQTab] := nZeraHorasAB
						Endif
					Endif
				Endif   
				
				If lArquivo
					IF !( cAlias )->( FkDelete( @cMsgErr ) )
						( cAlias )->( RollBackDelTran( cMsgErr ) )
					EndIF
					(cAlias)->( MsUnLock() )
				Endif
				Loop
			Endif
		Else
			//-- Grava os registros nao excluidos do aCols
			If !aCols[nZ,nUsado+1]
			    If lArquivo
					IF !RecLock(cAlias,.T.,.T.)
						Loop
					EndIF
					SPK->PK_FILIAL := SRA->RA_FILIAL
					SPK->PK_MAT    := SRA->RA_MAT 
				Endif
			Else
				Loop
			Endif
		Endif
		
		
		//Guarda o Primeiro Abono Valido (Nao deletado).
		If lPrimVez
			cCodAbo := aCols[ nZ , nPosCodA ]
  	        dDatant := aCols[ nZ , nPosData] 
            lPrimVez:=.F.	
		Endif            
		
		If lArquivo
			//Corre Todos os elementos(Campos) para gravar o registro
			For ny := 1 To nMaxArray
				cCampo    := Trim(aHeader[ny][2])
				//Grava Campos Nao Virtuais
				If (nPos := Ascan(aVirtual,cCampo)) == 0
					xConteudo := aCols[nZ,ny]
					SPK->&cCampo := xConteudo
				Endif 
			Next ny
		Endif
		
		//-- Regrava a quantidade de horas somando-as por data 
		//-- para atualizacao do campo PC_QTABONO.
		nHoras := SomaHoras(nHoras, aCols[nZ,nPosHrAB])
		
		//Regrava FLAG do Abono como "I" de Informado, Evento e Centro de Custos
	    If  lArquivo
	   		SPK->PK_FLAG	:= Pn210FLAG(SPK->PK_FLAG,aCols,aColsAnt,nZ)
	   		SPK->PK_CODEVE	:= cEvento
   			SPK->PK_CC		:= cCCSPC   
			SPK->PK_DEPTO	:= cDeptoSPC   			
			SPK->PK_POSTO	:= cPostoSPC   						
			SPK->PK_CODFUNC	:= cCodFuncSPC   
			SPK->PK_PROCES	:= cProces
			SPK->PK_ROTEIR	:= cRoteiro
			SPK->PK_PERIODO	:= cPeriodo   
			SPK->PK_NUMPAG	:= cNrPag   												
			         
			           
   			SPK->PK_TPMARCA	:= cTpMarca 
			SPK->( MsUnlock() )
	    Else
	    	aCols[nZ,nPosFlag]		:= Pn210FLAG(aCols[nZ,nPosFlag],aCols,aColsAnt,nZ)
	   		aCols[nZ,nPosCODEVE]	:= cEvento
   			aCols[nZ,nPosCC]		:= cCCSPC     
   			aCols[nZ,nPosTPMARCA]	:= cTpMarca 
			aCols[nZ,nPosDepto]		:= cDeptoSPC 
			aCols[nZ,nPosPosto]		:= cPostoSPC 
   			aCols[nZ,nPosCodfunc]	:= cCodFuncSPC   			            
			aCols[nZ,nPosProces]	:= cProces 
			aCols[nZ,nPosRoteir]	:= cRoteiro    			
			aCols[nZ,nPosPeriodo]	:= cPeriodo 
			aCols[nZ,nPosNumPag]	:= cNrPag
			 
            //-- Adiciona Abono em Matriz Auxiliar
	      //  aAdd(aColsAux,aCols[nz])
	    Endif 
	    
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Ponto de Entrada para insercao em nova tabela Ex: Log		   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( lPnaGrv )
			ExecBlock("PNA210GRV",.F.,.F.,{ lArquivo } )
		EndIF
	Next nZ
    
    //Atualiza Celulas Cod.Abono , Qtde de Horas Abonadas do Browse Principal
    
	If nPosSPCQTab > 0
		aColsSPC[nLinSPC,nPosSPCQTab] := fArrdAB(nHoras, nHrsEve)
	Endif
	If nPosAbono > 0
		aColsSPC[nLinSPC,nPosAbono] := cCodAbo
	Endif 
   
    //Atualiza Cod.Abono e Horas Abonadas
    If lArquivo
		If (cAliasApont)->(dbSeek(cFilMat+cEvento+Dtos(dDatAnt)+cTpMarca+cCCSPC+cCodFuncSPC))     	
    		aRetHrNot:= RetHrNot(dDatAnt)
			nIniHnot := aRetHrNot[1]	// Inicio da Hora Noturna
			nFimHnot := aRetHrNot[2]	// Final da Hora Noturna
			nMinHnot := aRetHrNot[3]	// Minutos da Hora Noturna     
			lNoturno := fHorNot(aRetHrNot)			
			nHoras := fArrdAB(nHoras, nHrsEve)
			IF RecLock(cAliasApont,.F.,.T.)
				//-- Atualiza Codigo e Qtde de Horas
				(cAliasApont)->(&(cPrefix+'ABONO'))		:= cCodAbo
				(cAliasApont)->(&(cPrefix+'QTABONO'))	:= nHoras
				(cAliasApont)->(MsUnLock())  
			EndIF
			(cAliasApont)->( dbSkip() )
		Endif                  
	Else                        
	    //aAcols:=If(!Empty(aColsAux),Aclone(aColsAux),	P280AboCols(aHeader,@aCols  	,		,aFields , 				,nOpcX,.T.))
	    n:=1
	Endif
	
End Transaction


//-- Restaura a posicao do aCols na tela de apontamentos
If lArquivo
	n := nLinSPC
Endif
	
Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³aPont210Ok³ Autor ³ J. Ricardo            ³ Data ³ 06.08.94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Critica linha digitada                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Apont210Ok(o)  
Local aRetHrNot	:= {}
Local lNoturno	:= .F.
Local lRet      := .T.
Local nHorasAbo := 0
Local naCols1 	:= Len(aCols[1])
Local nIniHnot  := 0
Local nFimHnot  := 0
Local nMinHnot	:= 0
Local nHoras	:= 0	
Local dData 	:= aCols[n,nPosData]
Begin Sequence
	//-- Consiste total de horas abonadas (informadas) e o recalculo sobre as horas final e inicial
	If !aCols[n,naCols1]
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Obtem a Hora Noturna de Acordo com o Turno                  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	    
		aRetHrNot:= RetHrNot(dData)
		nIniHnot := aRetHrNot[1]	// Inicio da Hora Noturna
		nFimHnot := aRetHrNot[2]	// Final da Hora Noturna
		nMinHnot := aRetHrNot[3]	// Minutos da Hora Noturna
		
		dData 		:= If(aCols[n,nPosHrFm] < aCols[n,nPosHrIn],dData + 1, dData)
		lNoturno 	:= fHorNot(aRetHrNot)			
	   	nHoras		:= fCalHoras(dData,aCols[n,nPosHrFm], aCols[n,nPosData],aCols[n,nPosHrIn], Nil, Nil, lNoturno, aCols[n,nPosData],Nil,	nIniHnot, 	nFimHnot, nMinHnot)
		//nHorasAbo   := fArrdAB(nHoras, nHrsEve, lNoturno)
		nHorasAbo   := nHoras	
	    If aCols[n,nPosHrAb] <>Round(nHorasAbo,2) .AND. !Empty(nHorasAbo)
	       lRet := .F.                      
	       Help('',1,'PNA210HMAIS')
	   	Endif	
	
		If Empty(aCols[n,nPosCodA])  
		   	Help( ' ' , 1 , 'NVAZIO' , , OemToAnsi( aHeader[nPosCodA][1] ) , 5 , 0 )
		   	lRet := .F.
		   	Break
		Endif   
	Endif
	                 
End
	
Return( lRet )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³pn210TudOk³ Autor ³ Alexsandro Pereira    ³ Data ³ 10/04/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function pn210TudOk(o)
Local nX        := 0
Local nY        := 0
Local lRet      := .T.
Local aColsCopy := aClone(aCols)
Local nHrsAbo   := 0 
Local naColsCopy:= 0
Local nUsado	:= Len(aHeader)
naColsCopy		:=	Len(aColsCopy)

//-- Ordena os lancamentos de abono para consistencia
aSort(aColsCopy,,, bSort )

//-- Consiste existencia de abonos em uma mesma faixa horaria
For nX := 1 To naColsCopy

	// Qdo a linha estiver marcada para delecao nao a valida
	If aColsCopy[nX,nUsado+1]
		Loop
	Endif
    
    If Empty(aColsCopy[nX,nPosCodA])  
    	Help( ' ' , 1 , 'NVAZIO' , , OemToAnsi( aHeader[nPosCodA][1] ) , 5 , 0 )
    	lRet := .F.
    	Exit
    Endif
    
	nY := If(nX==1 .Or. aColsCopy[nX-1,nUsado+1],nX,nX-1)

	nSerHrAntI := fDhToNs(aColsCopy[nY, nPosData], aColsCopy[nY,nPosHrIn])
	nSerHrAntF := fDhToNs(If(aColsCopy[nY,nPosHrIn] > aColsCopy[nY,nPosHrFm],aColsCopy[nY, nPosData]+1,aColsCopy[nY,nPosData]),aColsCopy[nY,nPosHrFm])

	nSerHrAtuI := fDhToNs(aColsCopy[nX, nPosData], aColsCopy[nX,nPosHrIn])
	nSerHrAtuF := fDhToNs(If(aColsCopy[nX,nPosHrIn] > aColsCopy[nX,nPosHrFm],aColsCopy[nX, nPosData]+1,aColsCopy[nX,nPosData]),aColsCopy[nX,nPosHrFm])

	//-- Soma as horas abonadas para consistencia
 	nHrsAbo := __TimeSum(nHrsAbo,aColsCopy[nX,nPosHrAB])

	//-- Implementar consistencia de horarios abonados em relacao a 
	//-- tabela de horario.
	If nSerHrAtuI >= nSerHrAntI .And. nSerHrAtuI < nSerHrAntF .And. nX # nY
		Help('',1,'PNA210FHOR')
		lRet := .F.

	ElseIf nSerHrAtuF > nSerHrAntI .And. nSerHrAtuF <= nSerHrAntF .And. nX # nY
		Help('',1,'PNA210FHOR')
		lRet := .F.
	Endif


Next nX

//-- Se a soma das horas abonadas para o evento atual for superior ao numero de horas do
//-- evento, nao valida os dados.
If !lChamadaNIL .and. ( nHrsAbo > nHrsEve )
	lRet := .F.
	Help('',1,'PNA210HMAIS')
Endif

Return( lRet )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pn210Valid³ Autor ³ Mauro                 ³ Data ³ 06.08.94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Critica a data da linha digitada                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function Pn210ValDt()

Local dData	:= &(ReadVar())
Local lRet := .T.

IF n <= Len(aColsAnt) .and. !lChamadaNIL
	IF aCols[n,nPosData] # M->PK_DATA .And. !Empty(aCols[n,nPosData])
	   lRet := .F.
	EndIF
ElseIF lChamadaNIL
	IF dData < dPerIni .or. dData > dPerFim
	   lRet := .F.
	EndIF
EndIF

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn210Horas³ Autor ³ Mauricio MR           ³ Data ³ 07/07/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Calcula Hora Final Baseada em HoraIni+Abondas              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA210                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn210Horas()
Local lNoturno	:= .F.
Local nRet  := 0
Local aRetHrNot	:= {} 
Local nIniHnot 	:= 0
Local nFimHnot 	:= 0
Local nMinHnot 	:= 0    

If Type("M->PK_HrsAbo") <> "U"
   If !Empty(M->PK_HrsAbo)
		If !Empty(nPosHrAb) .AND. !Empty(nPosHrIn)
	  	   //Calcula e Sugere Hora Final do Abono (Hora Inicial + Saldo de Horas a Abonar)
		   If !Empty(nPosHrFm)
		   	   	/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Obtem a Hora Noturna de Acordo com o Turno                  ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/ 
				aRetHrNot:= RetHrNot(dData)
				nIniHnot := aRetHrNot[1]	// Inicio da Hora Noturna
				nFimHnot := aRetHrNot[2]	// Final da Hora Noturna
				nMinHnot := aRetHrNot[3]	// Minutos da Hora Noturna
				lNoturno := fHorNot(aRetHrNot)						
       		    aCols[n, nPosHrFm] := RetFimTab(aCols[n,nPosData]  , aCols[n,nPosHrIn] , M->PK_HrsAbo , NIL, lNoturno, aCols[n,nPosData], 	nIniHnot, nFimHnot,  nMinHnot  )[2]
		        		   
		   	    nRet:=aCols[n, nPosHrFm]
		   Endif
		EndIf
   Endif
EndIf
Return nRet             

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pn210Evento ³ Autor ³ Mauricio MR           ³ Data ³ 24/06/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna Evento do Apontamento para ser utilizado na iniciali-³±±
±±³          ³ zacao (X3_RELACAO) de novas linhas em GetDados dos Abonos.   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Sintaxe  ³ Pn210Evento()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/


Function Pn210Evento()

If Type("CEVENTO") == "U"
	cEvento :=Space(TamSx3("PK_CODEVE")[1])
Endif
Return cEvento



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pn210TpMarca³ Autor ³ Mauricio MR           ³ Data ³ 24/06/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna Tipo de Marcacao do Apontamento para ser utilizado   ³±±
±±³          ³ na inicializacao (X3_RELACAO) de novas linhas em GetDados de ³±± 
±±³          ³ abonos.                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Sintaxe  ³ Pn210TpMarca()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn210TpMarca()
Local cRet := Space(TamSx3("PK_TPMARCA")[1])

If Type("CTPMARCA") <> "U"
	cRet := cTpMarca
else
	If Type("CTPMARCAINIT") <> "U"
		cRet	:= cTpMarcaInit
    Endif
Endif	

Return cRet  



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pn210CC     ³ Autor ³ Mauricio MR           ³ Data ³ 24/06/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna C.C. do Apontamento para ser utilizado na inicializa-³±±
±±³          ³ cao (X3_RELACAO) de novas linhas em GetDados de Abonos.      ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Sintaxe  ³ Pn210CC()                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn210CC() 
Local cRet := cRet :=SRA->RA_CC

If Type("CCCSPC") <> "U"
	cRet := cCCSPC
else
	If Type("CCCINIT") <> "U"
		cRet	:= cCCInit
    Endif
Endif	

Return cRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Pn210Data   ³ Autor ³ Mauricio MR           ³ Data ³ 02/08/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna Data do Apontamento para ser utilizado na inicializa-³±±
±±³          ³ cao (X3_RELACAO) de novas linhas em GetDados de Abonos.      ³±± 
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Sintaxe  ³ Pn210Data()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn210DATA()
If Type("DDATASPC") == "U"
   dDataSPC :=Ctod('')
Endif
Return dDataSPC


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PKPostoInit  ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PK_POSTO					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PKPostoInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA280                                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³cPosto													  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PKPostoInit() 
Local cRet:= SRA->RA_POSTO 

If Type("CPOSTOSPC") <> "U" 
	cRet    := cPostoSPC
ElseIf Type("CPOSTOINIT") <> "U" 
	cRet	:= cPostoInit	
Endif

Return( cRet )



/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PKDeptoInit  ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PK_DEPTO					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PKDeptoInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA280                                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |cDepto													  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PKDeptoInit()
Local cRet:= SRA->RA_DEPTO

If Type("CDEPTOSPC") <> "U"
   cRet	:= cDeptoSPC       
ElseIf Type("CDEPTOINIT") <> "U"
	cRet	:=  cDeptoInit
   
Endif      

Return(cRet)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PKProcesInit ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PK_PROCES					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PKProcesInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA280                                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |cProcess												  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PKProcesInit()
Local cRet	:= SRA->RA_PROCES

If Type("CPROCESSO") <> "U"
   cRet:= cProcesso
ElseIf Type("CPROCESINIT") <> "U"
	cRet	:= cProcesInit    
Endif
Return( cRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PKFuncInit   ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PK_CODFUNC				  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   |PKFuncInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA280                                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |cFunc												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PKFuncInit()
Local cRet:= SRA->RA_CODFUNC

If Type("CCODFUNCSPC") <> "U"
   cRet	:= cCodFuncSPC
ElseIf Type("CCODFUNCINIT") <> "U"  
	cRet:= cCodFuncInit 
Endif

Return( cRet )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PKRoteirInit ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PK_ROTEIR					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PKRoteirInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA280                                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |cRoteiro											  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PKRoteirInit()
Local cRet	:= 'PON'

If Type("CROTEIRO") <> "U"
   cRet:= cRoteiro
ElseIf Type("CROTEIROINIT") <> "U"
   cRet:= cRoteiroInit 
Endif

Return( cRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PKPeriodoInit³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PK_PERIODO				  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PKPeriodoInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA280                                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |cPer												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PKPeriodoInit()
Local cRet	:=  Space(TamSx3("PK_PERIODO")[1])

If Type("CPERIODO") <> "U"
   cRet:= cPeriodo
ElseIf Type("CPERIODOINIT") <> "U"
   cRet:= cPeriodoInit
Endif

Return( cRet ) 

              
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PKNumPagInit ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PK_NUMPAG					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PKNumPagInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA280                                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |cNumPag												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PKNumPagInit() 
Local cRet	:=  Space(TamSx3("PK_NUMPAG")[1])

If Type("CNUMPAG") <> "U"
   cRet:= cNumPag
ElseIf Type("CNUMPAGINIT") <> "U"
   cRet:= cNumPagInit   
Endif 

Return( cRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn210ValAb³ Autor ³ Fernando joly Siquini ³ Data ³ 22/12/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida o campo "Abono" e altera campos no aCols            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA210                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn210ValAb()

Local lRet  := .T.

If Empty(M->PK_CODABO)
	If nPosMotA > 0
		aCols[n, nPosMotA] := Space(Len(aCols[n, nPosMotA]))
	EndIf
	If nPosHrAB > 0
		aCols[n, nPosHrAB] := 0
	EndIf	
Else
	lRet := .F.
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn210ValHr³ Autor ³ Alexsandro Pereira    ³ Data ³ 09/03/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida o "Hora Inicial" e "Hora Final"                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA210                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn210ValHr

Local lRet  := .T.
Local cVar  := ''
Local dData := Ctod('  /  /  ')
Local lNoturno	:= .T.
Local nHoras	:= 0.00   
Local nHorIni	:= aCols[n, nPosHrIn]  //--	Preserva valor original para comparacao posterior
Local aHorFim	:= {}					 //--	Preserva valor original para comparacao posterior    
Local nAbonar	:= 0.00

Local aRetHrNot	:= {} 
Local nIniHnot 	:= 0
Local nFimHnot 	:= 0
Local nMinHnot 	:= 0      

//Atualiza Campo Horas de Abono
If (cVar := ReadVar()) == 'M->PK_HRSABO'
    aCols[n, nPosHrAb]:= M->PK_HRSABO
Endif  

//Atualiza Campo Hora Inicial
If (cVar := ReadVar()) == 'M->PK_HORINI'
	nHorIni   			:= aCols[n, nPosHrIn]
    aCols[n, nPosHrIn]	:= M->PK_HORINI
Endif                                               

//Atualiza Campo Hora Final
If (cVar := ReadVar()) == 'M->PK_HORFIM'
    aCols[n, nPosHrFm]:= M->PK_HORFIM
Endif

If aCols[n, nPosHrIn] > 24 .Or. aCols[n, nPosHrFm] > 24
	//-- Consiste horas > 24
	Help('',1,'PN210VHMIN')
	lRet := .F.
ElseIf aCols[n, nPosHrIn] - Int(aCols[n, nPosHrIn]) > 0.59 .Or. aCols[n, nPosHrFm] - Int(aCols[n, nPosHrFm]) > 0.59;
    .Or. aCols[n, nPosHrAb] - Int(aCols[n, nPosHrAb]) > 0.59
	//-- Consiste minutos maior que .59
	Help('',1,'PN210VHMIN')
	lRet := .F.
Endif

//-- Se nao houver inconsistencias
If lRet

	//-- Atualiza o campo com as horas abonadas
	//-- verificando se o horario abonado passa de um dia para outro
	dData := aCols[n,nPosData]
	dData := If(aCols[n,nPosHrFm] < aCols[n,nPosHrIn],dData + 1, dData)
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Obtem a Hora Noturna de Acordo com o Turno                  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/ 
	aRetHrNot:= RetHrNot(dData)
	nIniHnot := aRetHrNot[1]	// Inicio da Hora Noturna
	nFimHnot := aRetHrNot[2]	// Final da Hora Noturna
	nMinHnot := aRetHrNot[3]	// Minutos da Hora Noturna
	lNoturno := fHorNot(aRetHrNot)						
	If (cVar := ReadVar()) == 'M->PK_HRSABO'
		//-- Somente sugere horario Final baseado nas horas abonadas + horario inicial
		//-- (Pode ser abono rapido ou gerado, o que, entao, nao teremos o intervalo de horas
		//-- que gerou as horas abonadas)   
		
		//-- Se Foram Informadas as Horas Abonadas calcula horario final
		If !Empty(cVar) 
		   aCols[n,nPosHrFm] := RetFimTab(aCols[n,nPosData]  , aCols[n,nPosHrIn] , aCols[n,nPosHrAB] , NIL, lNoturno, aCols[n,nPosData], 	nIniHnot, nFimHnot,  nMinHnot  )[2]
		Else    
		   //-- Se Nao foram informadas as horas abonadas calcula-as
		   nHoras 				:= Round(fCalHoras(dData, aCols[n,nPosHrFm], aCols[n,nPosData], aCols[n,nPosHrIn], Nil, Nil, lNoturno, aCols[n,nPosData],Nil,	nIniHnot, 	nFimHnot, nMinHnot), 2) 
		   aCols[n,nPosHrAB] 	:= fArrdAB(nHoras, nHrsEve)
		Endif
	ElseIf (cVar := ReadVar()) == 'M->PK_HORINI'
		//-- Somente sugere horas abonadas se ambas as horas nao forem zeradas
		//-- (Pode ser abono rapido ou gerado, o que, entao, nao teremos o intervalo de horas
		//-- que gerou as horas abonadas) 
		If !Empty(cVar) .OR.  !Empty(aCols[n,nPosHrFm])
	
  	       //	nHorIni := RetIniTab(dData , aCols[n,nPosHrFm] , 	Max(0,Subhoras(nHrsEve,PnTotAbo(aCols,aHeader,Len(aCols[1]), n ))) , NIL, lNoturno, dData, 	nIniHnot, nFimHnot,  nMinHnot  )[2]
		    nAbonar	:= 	Max(0,Subhoras(nHrsEve,PnTotAbo(aCols,aHeader,Len(aCols[1]), n )))    	
		    aHorFim :=  RetFimTab(aCols[n,nPosData] , aCols[n,nPosHrIn] , nAbonar , NIL, lNoturno, aCols[n,nPosData], 	nIniHnot, nFimHnot,  nMinHnot  )
		    
		    nHoras 				:=Round(fCalHoras(dData,  aCols[n,nPosHrFm], aCols[n,nPosData], aCols[n,nPosHrIn], Nil, Nil, lNoturno, aCols[n,nPosData],Nil,	nIniHnot, 	nFimHnot, nMinHnot), 2) 
			aCols[n,nPosHrAB] 	:= fArrdAB(nHoras, nAbonar)   
			aCols[n,nPosHrFm]	:= If(  DataHora2Str(dData, aCols[n,nPosHrFm]) > DataHora2Str(aHorFim[1], aHorFim[2] ) .and.  nHoras > nAbonar,  aHorFim[2],  aCols[n,nPosHrFm] ) 
	
			
		Endif
	ElseIf (cVar := ReadVar()) == 'M->PK_HORFIM'  
		//-- Somente sugere horas abonadas se ambas as horas nao forem zeradas
		//-- (Pode ser abono rapido ou gerado, o que, entao, nao teremos o intervalo de horas
		//-- que gerou as horas abonadas) 
		If !Empty(cVar) .OR.  !Empty(aCols[n,nPosHrIn])
		    nAbonar	:= 	Max(0,Subhoras(nHrsEve,PnTotAbo(aCols,aHeader,Len(aCols[1]), n )))    	
		     
	    	aHorFim := RetFimTab(aCols[n,nPosData] , aCols[n,nPosHrIn] , nAbonar , NIL, lNoturno, aCols[n,nPosData], 	nIniHnot, nFimHnot,  nMinHnot  )
		    
		    nHoras 				:=Round(fCalHoras(dData, M->PK_HORFIM, aCols[n,nPosData], aCols[n,nPosHrIn], Nil, Nil, lNoturno, aCols[n,nPosData],Nil,	nIniHnot, 	nFimHnot, nMinHnot), 2) 
			M->PK_HORFIM		:= If(  DataHora2Str(dData, M->PK_HORFIM) > DataHora2Str(aHorFim[1], aHorFim[2] ) .and.  nHoras > nAbonar,  aHorFim[2], M->PK_HORFIM ) 
			
			aCols[n,nPosHrAB] 	:= fArrdAB(nHoras, nAbonar)   
			aCols[n,nPosHrFm]	:= M->PK_HORFIM
		Endif
	Endif
Endif
Return lRet 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn210VCodAb  ³ Autor ³ Mauricio MR           ³ Data ³ 05/09/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida o Cod. do Abono                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA210                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn210VCodAB()

Local lRet  := .T.
Local cHelp		:= ''

M->PK_CODABO := If(Type('M->PK_CODABO')=='U',aCols[n,nPosCodA],M->PK_CODABO)

//-- Nao permite campo vazio
If Empty(M->PK_CODABO) .And. !aCols[n,Len(aCols[n])]
	If 	! ASCAN(a210BrancoField,ALLTRIM(aHeader[nPosCodA][2])) > 0
	    	cHelp:=aHeader[nPosCodA][1]
	        Help( ' ' , 1 , 'NVAZIO' , , OemToAnsi( cHelp ) , 5 , 0 )
			Return .F.
	Endif		
Endif

//-- Atualiza campo virtual "Descricao do motivo de abono"
If Type(M->PK_CODABO) # Nil .And. SP6->(dbSeek(fFilFunc('SP6')+M->PK_CODABO))
	aCols[n,nPosMotA] := SP6->P6_DESC
Else
	aCols[n,nPosMotA] := STR0015 //'*** NAO CADASTRADO ***'
	lRet := .F.
Endif

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn210Pad  ³ Autor ³ Maurico MR            ³ Data ³ 25/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Preenche Campos Padraos                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA210                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn210Pad(dDataEvento,aHeaderSPC,aColsSPC,nLinSPC)

Local lRet 		:= .T.
Local naCols 	:=Len(aCols)
Local naCols1 	:=Len(aCols[1])
//Preenche Campos Obrigatorios      

// Data Abono
aCols[naCols,nPosData]:=dDataEvento 

// Flag de Geracao de Abono ("I"  - Informado)
aCols[naCols,nPosFlag]:="I"   
         

// Coluna de Deletados
aCols[naCols,naCols1]:=if(Empty(aCols[naCols,naCols1]),;
                                            .F.,;
                                            aCols[naCols,naCols1])


Return lRet



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³PnTotAbo  ³ Autor ³ Maurico MR            ³ Data ³ 05/07/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Calcula Horas Abonadas apartir de aAcols                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA210                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function PnTotAbo(xCols,xHeader,nDeletado, nElem)

Local nX        := 0
Local nHrsAbo   := 0
Local nxCols	:=Len(xCols)
Local bSkip		:= {|X| If( nElem <> NIL, If(nElem == nX, .T., .F. ), .F.) } 
//-- Calcula Horas Abonadas
For nX := 1 To nxCols

	// Qdo a linha estiver marcada para delecao nao a valida
	If xCols[nX,nDeletado]  .OR. Eval(bSKIP)
		Loop
	Endif
    
   	//-- Soma as horas abonadas para consistencia e informacao
	nHrsAbo := __TimeSum( xCols[nX,nPosHrAB] , nHrsAbo )

Next nX

Return nHrsAbo      

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn210Flag ³ Autor ³ Maurico MR            ³ Data ³ 27/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Devolve FLAG como "I" se houve alteracao no abono          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA210                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³cRet <=> "I para Informado (alteracao) ou "G" para gerado   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn210Flag(cCampo,aColsAtual,aColsCopia,nElem)

Local cRet := "I"         
//Como colocamos alguns Campos Pre-preenchidos, pode ocorrer que a informacao no Array 
//aCols nao esteja grava fisicamente. Temos que verificar se o campo contem a informacao. 
//Se nao havia registro de abono, campo Flag setado para informado  
If  Empty(cCampo)
    cRet:="I"
Else    
	//Se nao foram adicionados novos registros compara conteudo atual com anterior 
	If  nElem  <=LEN(aColsCopia)    
	                     
        //fCompArray retorna .T. se nao houve alteracao nas informacoes do registro
        //Para informacao alterada seta flag para informado "I"
        //Para informacao NAO alterada permanece FLAG
        cRet:=If(fCompArray(aColsAtual[nElem],aColsCopia[nElem]),cCampo,"I" )
    Else
        //Se foram adicionados outros abonos, campo Flag setado para informado "I" 
        cRet:="I"
    Endif
Endif                           

Return cRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn210Ordem³ Autor ³ Maurico MR            ³ Data ³ 1007/01  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Coloca os Abonos em branco nas ultimas linhas do browse    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA210                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³aCols 													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn210Ordem(aCols)

Local nX		:=	0
Local nY		:=	0
Local nW		:=	0
Local aSavCols	:=	{}
Local aColsCopy :=	{}

Local naCols	:= Len(aCols)							 
//-- Coloca abonos em branco nas ultimas linhas 
If naCols > 1                  

   //Identifica e Armazena Linhas com Abono em Branco para posterior uso
	For nX:=1 To naCols  
		If Empty(aCols[nX,nPosCodA]) 
	       AADD(aSavCols,Aclone(aCols[nX])) 
	    Else
           AADD(aColsCopy,Aclone(aCols[nX])) 	       
	    Endif
	Next nX   

	//Ordena Matriz com abonos em branco deixando as linhas DELETADAS em primeiro Lugar
	aSort(aSavCols,,, { |x,y|	x[Len(x)]	> y[Len(y)] } ) 
   
	//Ordena Abonos Preenchidos por Data/Hora    
	aSort(aColsCopy,,, bSort )             
	
	   
	//Joga Como ultimas linhas os Abonos em Branco salvos anteriormente  
	aCols:=Aclone(aColsCopy)
	nW:=Len(aSavCols)
	For nX:=1 To nW 
	    AADD(aCols,Aclone(aSavCols[nX])) 	                 
    Next nX
    
Endif

Return aCols
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³RetHrNot  ³ Autor ³ Maurico MR            ³ Data ³ 07/10/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna Horario e Minutos Noturnos conforme o Turno Atual  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA210                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³{nIniHnot, nFimHnot, nMinHnot}							  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/ 
Function RetHrNot(dData) 
Local aSr6Info	:= {}
Local nIniHnot  := 0
Local nFimHnot  := 0
Local nMinHnot	:= 0
Local cTno		:=''

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Obtem o Turno para o Novo Calendario       			  	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	cTno	:= GetInfoPosTab(	CALEND_POS_TURNO	,;	//01 -> Posicao em aTabCalend para Obtencao da Informacao
								"1E"				,;	//02 -> Flag da Marcacao "1E,1S,..."
								dData		   		,;	//03 -> Data em aTabCalend
								aTabCalend			 ;	//04 -> Calendario de Marcacoes
				   		 	)/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Obtem as Informacoes em Cache do Turno de Trabalho          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aSr6Info := {;
					"R6_INIHNOT"	,;	//01
					"R6_FIMHNOT"	,;	//02
					"R6_MINHNOT"	,;	//03
					"R6_HNOTFAL"	,;	//04  
					"R6_HNOTATR"	,;	//05										
					"R6_HNOTSAI"	;	//06					
				}
	aSr6Info := PosSR6( cTno , xFilial("SPJ") , aSr6Info , 01 , .F. )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Obtem a Hora Noturna de Acordo com o Turno                  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nIniHnot := aSr6Info[1]	// Inicio da Hora Noturna
	nFimHnot := aSr6Info[2]	// Final da Hora Noturna
	nMinHnot := aSr6Info[3]	// Minutos da Hora Noturna
	nHnotFal := aSr6Info[4]	// Indica a consideracao da hora noturna no calculo de falta/1/2 falta e intervalo quando pago
	nHnotAtr := aSr6Info[5]	// Indica a consideracao da hora noturna no calculo de atraso
	nHnotSai := aSr6Info[6]	// Indica a consideracao da hora noturna no calculo de saida antecipada/expediente

Return ( { nIniHnot, nFimHnot, nMinHnot, nHnotFal, nHnotAtr, nHnotSai } )		


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fGetCodNot³ Autor ³ Maurico MR            ³ Data ³ 01/03/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna String com todos os Eventos de Horario Noturno	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA210                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³cStrCodigo -> String com os Eventos Noturnos do Ponto.	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/ 
Static Function fGetCodNot()
Local aCodigos:= 	{ 	{"007N" ,"F" 	},; 	// 1/2 Falta
					 	{"008A"	,"F"	},;		// 1/2 Falta	
					  	{"009N"	,"F"	},;  	// Falta
					  	{"010A"	,"F"	},;		// Falta
					 	{"011N"	,"A"	},;		// Atraso
					 	{"012A"	,"A"	},;		// Atraso
					 	{"013N"	,"S"	},;		// Saida Antecipada
					 	{"014A"	,"S"	},;		// Saida Antecipada
					 	{"019N"	,"S"	},;		// Saida no Expediente	
					 	{"020A"	,"S"	},;  	// Saida no Expediente 
					 	{"032A"	,"F"	},;  	// Falta Intervalo Pago
					 	{"035N"	,"F"	};		// Falta Intervalo Pago	
					}
Local cCodigo	:= ""					
Local cStrCodigo:= ""	
Local nLoop		:= 0
	
For nLoop:= 1 to Len(aCodigos)
	If !Empty( ( cCodigo	:= PosSP9(aCodigos[nLoop,1],SRA->RA_FILIAL,"P9_CODIGO",2) ) ) 	
		cStrCodigo+=cCodigo+aCodigos[nLoop,2]+"."
	Endif	
Next nLoop	

Return (cStrCodigo)  


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fHorNot   ³ Autor ³ Maurico MR            ³ Data ³ 02/03/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna Se Deve ser Aplicado o Horario Noturno na recompo- ³±±
±±³          ³ sicao das horas.                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA210 / Pona280                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³lNoturno   -> .T. Deve ser aplicado horario noturno         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/ 
Function fHorNot( aSR6HorNot)
Local nPos 			:= 0
Local lNoturno		:= .F.
Local cStrCodigo	:= fGetCodNot() // Carrega os codigos de apontamento com uso da hora noturna

If Type("CEVENTO") <> "U" // Para o Pona280 a variavel cEvento eh private dele e contem codigo do evento apontado
   cCodigo	:= cEvento
ElseIf Type("CCODEVE") <> "U" // Para o Pona210/130 a variavel cCodEVE eh private dele e contem codigo do evento apontado
	cCodigo	:= cCodEVE
Endif                 


nPos:= At( cCodigo, cStrCodigo)

If nPos > 0
	//-- Obtem o tipo de Horario Noturno a ser Considerado  
	cTipEve := Substr( cStrCodigo, nPos + 3, 1) 
	If cTipEve == "F"
	   lNoturno := ( aSR6HorNot[4] == "S")
	ElseIf cTipEve == "A"
	   lNoturno := ( aSR6HorNot[5] == "S")	
	ElseIf cTipEve == "S"
	   lNoturno := ( aSR6HorNot[6] == "S")	
	Endif                                    
Endif	
Return (lNoturno)



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fArrdAB   ³ Autor ³ Maurico MR            ³ Data ³ 03/03/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna as horas Abonadas "arredondadas" devido ao uso da  ³±±
±±³          ³ hora noturna quando for o caso.                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA210                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³lNoturno   -> .T. Deve ser aplicado horario noturno         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/ 
Static function fArrdAB(nHoras, nHrsEve)

nHoras:= If( nHoras > nHrsEve , nHrsEve, nHoras )

Return (nHoras)