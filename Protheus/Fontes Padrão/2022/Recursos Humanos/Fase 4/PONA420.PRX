#INCLUDE "PONA420.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "HEADERGD.CH"
   
Static lPna08001Block



/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддбдддддддбддддддбдддддддддддддддддддддддддддддддбддддбдддддддддд©╠╠
╠╠ЁFun┤┘o  ЁPONA420ЁAutor ЁIgor Franzoi		  (Versao III)ЁDataЁ05/10/2007Ё╠╠
╠╠цддддддддадбдддддаддддддадддддддддддддддддддддддддддддддаддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁCadastro de tabela de hor═rio padr└o.                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁPONA420()                                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁGenerico                                                    Ё╠╠
╠╠цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё         ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL.             Ё╠╠
╠╠цддддддддддддбддддддддбддддддбдддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁProgramador Ё Data   Ё BOPS Ё  Motivo da Alteracao                     Ё╠╠
╠╠цддддддддддддеддддддддеддддддедддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁMauricio MR Ё12/04/08Ё	   ЁAtualizadas as descricoes de horario e ti-Ё╠╠
╠╠Ё            Ё        Ё	   Ёpo de dia ao escolher outros registros    Ё╠╠    
╠╠ЁValdeci LiraЁ08/10/09Ё25191/|Retirado o Lock ao montar a GetDados para Ё╠╠
╠╠Ё            Ё        Ё2009  Ёa tabela RF3. Gerava problema ao abrir 2  Ё╠╠    
╠╠Ё            Ё        Ё	   Ёclients do protheus ao mesmo tempo.   	  Ё╠╠
╠╠ЁEmerson CampЁ04/07/11Ё15658/ЁAjuste para nova interface 11. Com a      Ё╠╠
╠╠Ё			   Ё        Ё  2010ЁaplicaГЦo do parametro MV_ECMFTPP que     Ё╠╠
╠╠Ё            Ё        Ё      Ёafirma ser a versЦo 11.5 do Protheus      Ё╠╠    
╠╠юддддддддддддаддддддддаддддддадддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ/*/
Function PONA420()

Local aArea			:= GetArea()
Local aAreaSR6		:= SR6->( GetArea() )
Local aAreaRF2		:= RF2->( GetArea() )
Local aIndexSR6		:= {}		
Local cFiltraSR6	:= ""

DEFAULT lPna08001Block	:= ExistBlock( "PNA08001"	)

Begin Sequence

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё So Executa se os Modos de Acesso dos Arquivos Relacionados esЁ
	Ё tiverm OK.												   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( ValidArqPon() )
		Break	
	EndIF
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Verifica se Existem Turnos de Trabalho Cadastrados           Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !ChkVazio( "SR6" )
		Break
	EndIF
	
	Private bFiltraBrw	:= { || NIL }
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define Array contendo os tipos de Horas Extras               Ё
	Ё ----------- Elementos contidos por dimensao ------------     Ё
	Ё 1. Nome do Dia da Semana                                     Ё
	Ё 2. Tipo do Dia S=Trabal.,N=Nao Trab.,C=Compes.,D=D.S.R.      Ё
	Ё 3. Tipo de H.Extra 1-2-3 horas normais                       Ё
	Ё 4. Tipo de H.Extra 5-6-7 horas noturnas                      Ё
	Ё 5. Indice do Dia de Acordo com Dow()                         Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	Private aDias :=	{  							   ;	
							{STR0052 ,"S","1","5","2"},;	// "Segunda"
							{STR0053 ,"S","1","5","3"},;	// "Terca"
							{STR0054 ,"S","1","5","4"},;	// "Quarta"
							{STR0055 ,"S","1","5","5"},;	// "Quinta"
							{STR0056 ,"S","1","5","6"},;	// "Sexta"
							{STR0057 ,"C","3","7","7"},;	// "Sabado"
							{STR0058 ,"D","2","6","1"} ;	// "Domingo"
						}	
	
	Private nLenaDias := Len( aDias )
	
	Private cSemana		:= Space( GetSx3Cache( "RF2_SEMANA" , "X3_TAMANHO" ) )
	Private cCodHor		:= Space( GetSx3Cache( "RF4_HOR"   , "X3_TAMANHO" ) )
	Private cCodDia		:= Space( GetSx3Cache( "RF5_TIPO" , "X3_TAMANHO" ) )
	Private cLstSemana	:= cSemana
	Private cCalc := "RF3"
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define Array contendo as Rotinas a executar do programa      Ё
	Ё ----------- Elementos contidos por dimensao ------------     Ё
	Ё 1. Nome a aparecer no cabecalho                              Ё
	Ё 2. Nome da Rotina associada                                  Ё
	Ё 3. Usado pela rotina                                         Ё
	Ё 4. Tipo de Transa┤└o a ser efetuada                          Ё
	Ё    1 - Pesquisa e Posiciona em um Banco de Dados             Ё
	Ё    2 - Simplesmente Mostra os Campos                         Ё
	Ё    3 - Inclui registros no Bancos de Dados                   Ё
	Ё    4 - Altera o registro corrente                            Ё
	Ё    5 - Remove o registro corrente do Banco de Dados          Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	Private aRotina := MenuDef()
	
	Private cCadastro := OemToAnsi(STR0020 )	// "Tabela de Horario Padrao"
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Inicializa o filtro utilizando a funcao FilBrowse                      Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	cFiltraRh	:= ChkRh("PONA420","SR6","1")
	bFiltraBrw 	:= { || FilBrowse( "SR6" , @aIndexSR6 , @cFiltraRH ) }
	Eval( bFiltraBrw )
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁMonta Browse Baseado no SR6 (Turnos de Trabalho) para a configuracao dasЁ
	ЁTabelas de Horario Padrao												 Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	dbSelectArea ( "SR6" )
	SR6->( dbGoTop() )
	mBrowse( 06 , 01 , 22 , 75 , "SR6" )
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Deleta o filtro utilizando a funcao FilBrowse                     	 Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	EndFilBrw( "SR6" , @aIndexSr6 )

End Sequence
	
RestArea( aAreaRF2 )
RestArea( aAreaSR6 )
RestArea( aArea )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Elimina variavel Static                    	                         Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
lPna08001Block := NIL
Return( NIL )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁPONA420IncЁ Autor Ё Igor Franzoi		  Ё Data Ё05/10/2007Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInclus└o de tabelas de hor═rio padr└o                       Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁPONA420Inc()                                                Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420()                                                   Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function PONA420Inc( cAlias , nReg , nOpcx )

Local aColsRec	:= {}
Local aRF2Keys	:= {}
Local nOpcA		:= 0

cSemana  := Space( GetSx3Cache( "RF2_SEMANA" , "X3_TAMANHO" ) )
cCodHor	 := Space( GetSx3Cache( "RF4_HOR"   , "X3_TAMANHO" ) )
cCodDia	 := Space( GetSx3Cache( "RF5_TIPO" , "X3_TAMANHO" ) )

IF ( ChkVazio( "SR6" ) )
    nOpcA := PONA420Win( .F. , STR0026 , nOpcx , NIL , @aColsRec , NIL , @aRF2Keys )	// "  -  Inclus└o"
	FreeLocks( "RF2" , aColsRec, NIL , .T. , NIL )
EndIF

Return( nOpcA ) 

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁPONA420AltЁ Autor Ё Igor Franzoi		  Ё Data Ё05/10/2007Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁAltera┤└o de tabelas de hor═rio padr└o                      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁPONA420Alt()                                                Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420()                                                   Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function PONA420Alt( cAlias , nReg , nOpcx )

Local aColsRec	:= {}
Local aRF2Keys	:= {}
Local nOpcA		:= 0

cSemana	:= Space( GetSx3Cache( "RF2_SEMANA" , "X3_TAMANHO" ) )
cCodHor	:= Space( GetSx3Cache( "RF4_HOR"   , "X3_TAMANHO" ) )
cCodDia	:= Space( GetSx3Cache( "RF5_TIPO" , "X3_TAMANHO" ) )

nOpcA := PONA420Win( .T. , STR0028 , nOpcx , NIL , @aColsRec , NIL , @aRF2Keys )	// "  -  Altera┤└o"
FreeLocks( "RF2" , aColsRec , .T. , aRF2Keys )

Return( nOpcA )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁPONA420VisЁ Autor Ё Igor Franzoi		  Ё Data Ё05/10/2007Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁVisualiza┤└o de tabelas de hor═rio padr└o                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁPONA420Vis()	                                          	Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420()                                                   Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function PONA420Vis( cAlias , nReg , nOpcx )

Local aColsRec	:= {}
Local aRF2Keys	:= {}
Local lSeq		:= .F.
Local nOpcA		:= 0

cSemana	:= Space( GetSx3Cache( "RF2_SEMANA" , "X3_TAMANHO" ) )
cCodHor	:= Space( GetSx3Cache( "RF4_HOR"   , "X3_TAMANHO" ) )
cCodDia	:= Space( GetSx3Cache( "RF5_TIPO" , "X3_TAMANHO" ) )
	
nOpcA := PONA420Win( .T. , STR0029 , nOpcx , lSeq , @aColsRec , NIL , @aRF2Keys )	// "  -  Visualiza┤└o"
FreeLocks( "RF2" , aColsRec , .T. , aRF2Keys )

Return( nOpcA )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁPONA420ExcЁ Autor Ё Igor Franzoi	      Ё Data Ё05/10/2007Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁExclus└o de tabelas de hor═rio padr└o                       Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁPONA420Exc()                                                Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420()													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function PONA420Exc( cAlias , nReg , nOpcx )

Local aRecnos	:= {}
Local aSeqDel	:= {}
Local aSeqAux	:= {}
Local aSeqAux1	:= {}
Local aLog		:= {}
Local aLogTitle	:= {}
Local aRF2Keys	:= {}
Local bCondDele	:= { || .F. }
Local cChave	:= ""
Local cMsg		:= ""
Local cSeq		:= ""
Local cUseAlias	:= ""
Local lChkDel	:= .T.
Local lDelOk	:= .T.
Local lDelAll	:= .F.
Local lGeraLog	:= .F.
Local nOpcA		:= 0
Local nSeq		:= 0
Local nSeqs		:= 0

cSemana	:= Space( GetSx3Cache( "RF2_SEMANA" , "X3_TAMANHO" ) )
cCodHor	:= Space( GetSx3Cache( "RF4_HOR"   , "X3_TAMANHO" ) )
cCodDia	:= Space( GetSx3Cache( "RF5_TIPO" , "X3_TAMANHO" ) )
	
nOpcA	:= PONA420Win( .T. , STR0032 , nOpcx , NIL , @aRecnos , @aSeqDel , @aRF2Keys ) // "  -  Dele┤└o"

IF ( nOpcA == 1 )
	IF ( lChkDel := MsgYesNo(	OemToAnsi(	STR0065 + ;	//""O Sistema Agora Ira efetuar a Verificacao para ver se a(s) Sequencia(s) selecionada(s)"
											CRLF	+ ;	
											STR0066	+ ;	//"para Exclusao esta(o) sendo utilizada(s)."
											CRLF	+ ;
											CRLF	+ ;	
											STR0081 + ; //"A verifica┤└o pode ser demorada !!"
											CRLF	+ ;
											CRLF	+ ;
											STR0067   ;	//"Confirma a exclus└o da(s) Sequencia(s)?"
					   					 ),;
			 					OemToAnsi( STR0068 ) ;	//"Aten┤└o"
							);
		)

		//"Deseja gerar Log?"###//"Aten┤└o"
		lGeraLog := MsgNoYes( OemToAnsi( STR0073 ), OemToAnsi( STR0068 )  ) 

		//"Excluir todas as sequencias da Tabela?"###"Exclus└o de Sequencias"
		lDelAll := MsgNoYes( OemToAnsi( STR0077 ) , OemToAnsi( STR0078 ) )
	
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Verifica se vai Excluir Todas as Sequencias				  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF !( lDelAll )
			aAdd( aSeqAux , cSemana )
		Else
			aSeqAux := aClone( aSeqDel )
		EndIF
		
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Consistindo a Exclusao                       				  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		nSeqs := Len( aSeqAux )
		For nSeq := 1 To nSeqs
			cSeq := aSeqAux[ nSeq ]
			//"Consistindo a Sequencia: "
			MsAguarde( { || lChkDel := SR6->( PONA420DelChk( R6_FILIAL , R6_TURNO , cSeq , lGeraLog , @aLog , @aLogTitle , @cUseAlias ) ) } , NIL , STR0082 + cSeq + "..." )
			IF ( lChkDel )
				aAdd( aSeqAux1 , cSeq )
			Else
				lDelOk := .F.
			EndIF
		Next nSeq

		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Exclusao da(s) Sequencia(s)                  				  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lDelOk )
			nSeqs := Len( aSeqDel )
			/*/
			зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Verifica se a Sequencia a ser Excluida nao eh a Ultima	  Ё
			юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF !( lDelAll )
				IF ( nSeqs > 1.00 )
					nSeq := aScan( aSeqDel , { |x| x == cSemana } )
					lDelOk := ( nSeq >= nSeqs )
				EndIF
			EndIF	
			/*/
			зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Se estiver tudo OK, Efetiva a Exclusao da(s) Sequencia(s)	  Ё
			юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF ( lDelOk )
				Begin Transaction
					nSeqs := Len( aSeqAux1 )
					For nSeq := 1 To nSeqs
						cSeq 		:= aSeqAux1[ nSeq ]
						cChave 		:= ( SR6->( R6_FILIAL + R6_TURNO ) + cSeq )
						bCondDele	:= { || RF2_FILIAL + RF2_TURNO + RF2_SEMANA == cChave }
						//"Excluido a Sequencia: "
						MsAguarde( { || PonDelRecnos( "RF2" , aRecnos , bCondDele ) } , NIL , STR0083 + cSeq + "..." )
					Next nSeq
				End Transaction
			Else
				IF ( lGeraLog )
					//"A Sequencia ( Filial/Turno/Seq )###"Nao Pode ser Excluida."
					aAdd( aLog , STR0069 + R6_FILIAL + "/" + R6_TURNO + "/" + cSemana + " " + STR0079 ) 
					//"A Exclusao de Sequencia(s) deve ser feita da Ultima para a Primeira.
					aAdd( aLog , STR0080 ) 
				Else
					cMsg := ( STR0069 + R6_FILIAL + "/" + R6_TURNO + "/" + cSemana + " " )	//"A Sequencia ( Filial/Turno/Seq )
					cMsg += STR0079 														//"Nao Pode ser Excluida."
					cMsg += CRLF
					cMsg += STR0080															//"A Exclusao de Sequencia(s) deve ser feita da Ultima para a Primeira.
				EndIF	
			EndIF	
		EndIF		

		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Verifica se Deve Gerar o Log								  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( ( lGeraLog ) .and. !( lDelOk ) )
			/*/
			зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Gera e Mostra o Log 										  Ё
			юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				10        20       30        40        50        60        70        80        90       100       110...
			1234567890123456789023456789012345678901234567890123456789012345678901234567890123456789012345678901234567890...
			Arquivo Registro   Conteudo
			XXX     9999999999 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX*/
			aAdd( aLogTitle , STR0072 )	//"Arquivo Registro   Chave/Conteudo"
			MsAguarde( { || fMakeLog( { aLog } , aLogTitle , NIL , NIL , FunName() , STR0071 ) } , STR0071 ) //"Log de Ocorrencias na Exclusao de Sequencias"
		ElseIF !( lDelOk )
			IF Empty( cMsg )
				cMsg := ( STR0074 + cUseAlias )	//"A Sequencia a ser excluida est═ presente no"###"arquivo "
				cMsg += CRLF
				cMsg += STR0075					// "At┌ que as refer┬ncias a esta Sequencia sejam eliminadas,"
				cMsg += CRLF
				cMsg += STR0076					//"a mesma n└o pode ser excluida."
			EndIF
			MsgInfo( OemToAnsi( cMsg ) )
		EndIF
	EndIF
EndIF

FreeLocks( "RF2" , aRecnos , .T. , aRF2Keys )
		
Return( nOpcA )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁPONA420DelChk	ЁAutorЁIgor Franzoi		  Ё Data Ё05/10/2007Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁVerificar se uma Sequencia pode Ser Deletada                Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё< Vide Parametros Formais >									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420                                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Retorno  ЁNIL															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function PONA420DelChk( cFil , cTno , cSeq , lGeraLog , aLog , aLogTitle , cUseAlias )
                
Local aArea		:= GetArea()
Local aAreas	:= Array( 02 )
Local cFilAux	:= ""
Local cConteudo	:= ""
Local cChave	:= ""
Local lDelOk	:= .T.
Local nArea		:= 0
Local nAreas	:= 0

aAreas[1] := SRA->( GetArea() )
aAreas[2] := SPF->( GetArea() )

Begin Sequence

	SRA->( dbSetOrder( RetOrdem( "SRA" , "RA_FILIAL+RA_TNOTRAB+RA_SEQTURN" ) ) )
	cFilAux	:= IF( Empty( cFil ) , xFilial("SRA") , cFil )

	cChave := ( cFilAux + cTno + cSeq )
	IF !( lDelOk := !( SRA->( dbSeek( cChave , .F. ) ) ) )
		IF !( lGeraLog )
			cUseAlias := "SRA"
			Break
		EndIF
		aAdd( aLog , STR0069 + cFil + "/" + cTno + "/" + cSeq + STR0070 ) //"A Sequencia ( Filial/Turno/Seq ) "###" nao pode ser Excluida pois esta sendo utilizada nos arquivos abaixo"
		aAdd( aLog , "" )
		aAdd( aLog , "" )
		While SRA->( !Eof() .and. RA_FILIAL + RA_TNOTRAB + RA_SEQTURN == cChave )
			cConteudo := SRA->( RA_FILIAL + "/" + RA_TNOTRAB + "/" + RA_SEQTURN + "/" + RA_MAT )
			aAdd( aLog , "SRA" + Space( 05 ) + SRA->( StrZero( Recno() , 10 )  + Space( 01 ) + AllTrim( &( IndexKey() ) ) + "/" + cConteudo ) )
			SRA->( dbSkip() )
		End While	
	EndIF
    
    cFilAux := IF( Empty( cFil ) , xFilial("SPF") , cFil )
	SPF->( dbSeek( cFilAux , .F. ) )
	While SPF->( !Eof() .and. PF_FILIAL == cFilAux )
		IF ( SPF->( PF_TURNODE + PF_SEQUEDE ) == ( cTno + cSeq ) ) .or. ;
		   ( SPF->( PF_TURNOPA + PF_SEQUEPA ) == ( cTno + cSeq ) )
			IF !( lGeraLog )
				lDelOk := .F. 
				cUseAlias := "SPF"
				Break
			EndIF
            IF Empty( aLog )
				lDelOk := .F.
				aAdd( aLog , STR0069 + cFil + "/" + cTno + "/" + cSeq + STR0070 ) //"A Sequencia ( Filial/Turno/Seq ) "###" nao pode ser Excluida pois esta sendo utilizada nos arquivos abaixo"
				aAdd( aLog , "" )
				aAdd( aLog , "" )
			EndIF	
			cConteudo := SPF->( PF_FILIAL + "/" + PF_MAT + "/" + PF_TURNODE + "/" + PF_SEQUEDE + "/" + PF_TURNOPA + "/" + PF_SEQUEPA )
			aAdd( aLog , "SPF" + Space( 05 ) + SPF->( StrZero( Recno() , 10 )  + Space( 01 ) + AllTrim( &( IndexKey() ) ) + "/" + cConteudo ) )
		EndIF
		SPF->( dbSkip() )
	End While

End Sequence

nAreas := Len( aAreas )
For nArea := 1 To nAreas
	RestArea( aAreas[ nArea ] )
Next nAreas
RestArea( aArea )

Return( lDelOk )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁPONA420WinЁ Autor ЁIgor Franzoi			  Ё 	 Ё10/07/2007Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCarregar as Tabelas de Horario Padrao para Manutencao ou  ViЁ
Ё          Ёsualizacao													Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420                                                     Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function PONA420Win(	lLe			,;
							cTitulo		,;
							nOpcx		,;
							lSeq		,;
							aRecRF2		,;
							aSeq		,;
							aRF2Keys	 ;
						   )

Local aSvKeys		:= GetKeys()
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}
Local aGDCoord		:= {}
Local aNotFields	:= {}
Local aNotAltera	:= {}
Local aQueryCond	:= {}
Local aVirtual		:= {}
Local aVisual		:= {}
Local aButtonsEnch	:= {}                                            
Local bSet15		:= { || nOpcA := 1 , IF( Prossegue(nOpcX,cSemana,lLe,@n,.T.,@aCols,aHeader,@aColsAll,aHeaderAll,nCountSeq, @nVezChk ) ,;
                                              If( oGet:TudoOk(), ( RestKeys( aSvKeys , .T. ) , oDlg:End() ), nOpcA:= 0 ;
                                                ),;
                                              nOpcA := 0 ;
                                             ),;
										If ( !Pona420Tok(oGet), nOpcA := 0, nOpcA );
                       }

Local bSet24		:= { || RestKeys( aSvKeys , .T. ) , oDlg:End() , nOpcA := 0 }
Local bReplicate	:= { || NIL }
Local bCalendario	:= { || NIL }
Local bHorario		:= { || NIL }
Local bTipoDia		:= { || NIL }
Local bValid		:= { || NIL }
Local bGetRF2		:= { || NIL }
Local bGetHor		:= { || NIL }
Local bGetTpd		:= { || NIL }
Local cKey			:= ""
Local cKeyLock		:= ""
Local cAlias  		:= "RF2"
Local lContinua		:= .F.
Local lExecLock		:= ( ( nOpcx == 3 ) .or. ( nOpcx == 4 ) .or. ( nOpcx == 5 ) )
Local lLocks		:= .T.
Local nOpcA			:= 0
Local nCountSeq		:= 0
Local nField		:= 0
Local nVezChk		:= 0
Local oDlg			:= NIL
Local oGet			:= NIL
Local oFont			:= NIL
Local oGroupTrn		:= NIL	
Local oGroupHr		:= NIL
Local oFontBig		:= NIL
Local oComboBox		:= NIL
Local oMsGetSem		:= NIL
Local oMsGetTpd		:= NIL
Local oMsGetHor		:= NIL

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Definicao de variaveis dos paineis						   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local oPanelTrn		//Painel p/ o turno e sequencia
Local oPanelDet		//Painel p/ os detalhes (Horario/Descr. do Hor./Tipo Dia/Descr. Tipo Dia)
Local oPanelGet		//Painel p/ os detalhes da getdados  
Local oPanelTit     //Painel para descricao dos tiltulos de turno/horario e tipo de dia
Local oTitTrn
Local oTitSeq

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis para montagem dos aHeaders de cada tabela		   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aHeaderRF3 := {}
Local aHeaderRF4 := {}
Local aHeaderRF5 := {}
Local aHeaderRF2 := {}

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis para montagem dos aCols	de cada tabela		       Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aColsRF3	 := {}
Local aColsRF4	 := {}
Local aColsRF5	 := {}
Local aColsRF2	 := {}

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis para controle dos Recnos de cada uma das tabelas   Ё
Ё montadas para a getdados									   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aRecRF3	:= {}
Local aRecRF4	:= {}
Local aRecRF5	:= {}

Local cAliasRF2 := "RF2"
Local nUsRF2	:= {}
Local aVirRF2	:= {}
Local aVisRF2	:= {}
Local cKeyRF2	:= ""
Local aQueryRF2	:= {}

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Monta a entrada de dados do arquivo                          Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Private aHeader		:= {}
Private aNAltera	:= {}
Private aHeaderAll	:= {}
Private aCols		:= {}
Private aColsAll	:= {}
Private aAntColsAll	:= {}
Private cFilSR6		:= SR6->R6_FILIAL
Private cTnoSR6		:= SR6->R6_TURNO
Private nUsado  	:= 0
Private nUsadoAll	:= 0
                	
DEFAULT lLe			:= .F.
DEFAULT lSeq		:= .T.
DEFAULT aRecRF2		:= {}
DEFAULT aSeq		:= {}

DEFAULT lSeq	 := .T.
DEFAULT nCountSeq:= 0
DEFAULT lExecLock := ( ( nOpc == 3 ) .or. ( nOpc == 4 ) .or. ( nOpc == 5 ) )

Begin Sequence

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Monta Query para a Selecao das Informacoes RF2			   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
#IFDEF TOP

	aQueryRF2		:= Array( 05 )
	aQueryRF2[01]	:= "RF2_FILIAL = '"+cFilSR6+"'"
	aQueryRF2[02]	:= " AND "
	aQueryRF2[03]	:= "RF2_TURNO = '"+cTnoSR6+"'"
	aQueryRF2[04]	:= " AND "
	aQueryRF2[05]	:= "D_E_L_E_T_=' ' "
	
#ELSE

	cKeyRF2	:= cFilSR6 + cTnoSR6

#ENDIF

aHeaderRF2 := GdMontaHeader(@nUsRF2,@aVirRF2,@aVisRF2,cAliasRF2,NIL,.T.,.F.,.T.)

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Carrega as sequencias para este turno						   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( lExecLock )
	aRF2Keys := {}
	cKeyLock := StrTran( cKeyRF2 , " " , "_" )
	aAdd( aRF2Keys , cKeyLock )
	IF !( lLocks := WhileNoLock( "RF2" , NIL , aRF2Keys , 1 , 1 , .T. , 1 , 5 ) )
		Break
	EndIF
EndIF	
	
	bGetRF2		:= { |lLock,lExclu|	IF( lExecLock , ( lLock := .T. , lExclu	:= .T. ) , NIL ),;
											aColsRF2 := GdMontaCols(	aHeaderRF2	,;	//01 -> Array com os Campos do Cabecalho da GetDados
																		nUsRF2		,;	//02 -> Numero de Campos em Uso
																		@aVirRF2	,;	//03 -> [@]Array com os Campos Virtuais
																		@aVisRF2	,;	//04 -> [@]Array com os Campos Visuais
																		cAliasRF2	,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																		NIL			,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																		@aRecRF2	,;	//07 -> [@]Array unidimensional contendo os Recnos
																		cAliasRF2	,;	//08 -> Alias do Arquivo Pai
																		cKeyRF2		,;	//09 -> Chave para o Posicionamento no Alias Filho
																		NIL			,;	//10 -> Bloco para condicao de Loop While
																		NIL			,;	//11 -> Bloco para Skip no Loop While
																		NIL			,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																		NIL			,;	//13 -> Se cria variaveis Publicas
																		NIL			,;	//14 -> Se Sera considerado o Inicializador Padrao
																		NIL			,;	//15 -> Lado para o inicializador padrao
																		NIL			,;	//16 -> Opcional, Carregar Todos os Campos
																		NIL			,;	//17 -> Opcional, Nao Carregar os Campos Virtuais
																		aQueryRF2	,;	//18 -> Opcional, Utilizacao de Query para Selecao de Dados
																		.F.			,;	//19 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																		.F.			,;	//20 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																		.F.			,;	//21 -> Carregar Coluna Fantasma
																		NIL			,;	//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																		NIL			,;	//23 -> Verifica se Deve verificar se o campo eh usado
																		NIL			,;	//24 -> Verifica se Deve verificar o nivel do usuario
																		NIL			,;	//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																		@aRF2Keys	,;	//26 -> [@]Array que contera as chaves conforme recnos
																		@lLock		,;	//27 -> [@]Se devera efetuar o Lock dos Registros
																		@lExclu		 ;	//28 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																	),;
													IF( lExecLock , ( lLock .and. lExclu ) , .T. );
		  			}

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁLock do Registro do RF2									   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF !( lLocks := WhileNoLock( "RF2" , NIL , NIL , 1 , 1 , .T. , 1 , 5, bGetRF2) )
	Break
EndIF

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Quando nao Existirem Registros, Soh permitir a Inclusao      Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( ( nOpcX <> 3 ) .and. ( Len( aRecRF2 ) == 0 ) )
	Help(" ",1,"P080SP7NEX")
	Break
EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta as Dimensoes dos Objetos         					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdvSize		:= MsAdvSize()
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 3 }
	aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )
	aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )
	aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
		
	RecGet( cFilSR6,;
			cTnoSR6,;
			nOpcX,;
			"",;
			"",;
			@aRecRF3,;
			@aRecRF4,; 
			@aRecRF5,; 
			@aRecRF2,; 
			@aColsRF3,; 
			@aColsRF4,; 
			@aColsRF5,; 
			@aColsRF2,; 
			@aHeaderRF3,; 
			@aHeaderRF4,; 
			@aHeaderRF5,; 
			@aHeaderRF2,;
			lSeq,;
			@nCountSeq,;
			@aSeq )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Verifica se Devera Continuar o Processo					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lContinua := ( ( lSeq ) .or. ( !( lSeq ) .and. ( nCountSeq > 0 ) ) ) )
		Break
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Inclui na enchoice bar o botao de consulta do calendario	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bCalendario	:= {|| (;						 	
							PONA420Calend( ( ( Inclui ) .or. ( Altera ) ) )	,;
							oDlg:bSet15 := bSet15							,;
							oDlg:bSet24 := bSet24							,;
							SetKey( 15 , oDlg:bSet15 )						,;
							SetKey( 24 , oDlg:bSet24 )						,;
							SetKey( VK_F5 , bCalendario )					 ;
						); 
					}
	
	aAdd(; 
			aButtonsEnch ,;
							{;
								"S4SB014N"				,;
   		       					bCalendario				,;
   	    	   					OemToAnsi( STR0090 ) 	,;//"Consultar o Calend═rio <F5>..."
   	    	   					OemToAnsi( STR0390 ) 	;//"Consultar"
   	        				};
   	     )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Inclui na enchoice bar os botoes de cadastro do Horario e    Ё
	Ё e Tipo de Dia												   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
   	bHorario := {|| PONA400( "RF8" ) }

	aAdd( aButtonsEnch, { "CLOCK01", bHorario, OemToAnsi(STR0392), OemToAnsi(STR0392) } )

	bTipoDia := {|| PONA410( "RF9" ) }
	
	aAdd( aButtonsEnch, { "TAB1", bTipoDia, OemToAnsi(STR0394), OemToAnsi(STR0394) } )
		
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Disponibiliza "DIALOG BOX" para Manutencao ou Visualizacao daЁ
	Ё Tabela													   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/				                  	 
	DEFINE FONT oFont		NAME "Arial" SIZE 0,-11 BOLD
	DEFINE FONT oFontBig	NAME "Arial" SIZE 07,25 BOLD
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0040) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL									   			// 'Tabela de Horario Padrao
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Mostra informacoes sobre o turno							  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	@ aObjSize[1,1] , aObjSize[1,2]		GROUP oGroupTrn TO aObjSize[1,3],aObjSize[1,4]*0.82 LABEL OemToAnsi(STR0042) OF oDlg PIXEL		// 'Turno:'
	oGroupTrn:oFont:=oFont
	@ aObjSize[1,1] , aObjSize[1,4]*0.825	GROUP oGroupTrn TO aObjSize[1,3],aObjSize[1,4] LABEL OemToAnsi(IF(lSeq,STR0043,STR0004)) OF oDlg PIXEL		// "Sequ┬ncia:"###//"No.Sequ┬ncias"
	oGroupTrn:oFont:=oFont

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Mostra a Descricao do Turno na Caixa de Dialogo			  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	@ aObjSize[1,1]+7 , aObjSize[1,2]*2.5 SAY OemToAnsi( LEFT(SR6->( R6_TURNO+" - "+AllTrim(R6_DESC)),50) ) SIZE	500,10 OF oDlg PIXEL FONT oFontBig	//"Periodo: "
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Mostra a Sequencia de Turno na Caixa de Dialogo			  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lSeq )
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta o Bloco para Validacao                   			  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bValid := { |lValid| If (nOpcX != 3, ChgBySeq( @cCodHor, @cCodDia, aHeaderRF2, aColsRF2 ), ),;
  												    RecGet( cFilSR6, cTnoSR6, nOpcx, @cCodHor, @cCodDia,;
													@aRecRF3, @aRecRF4, @aRecRF5, @aRecRF2,;
													@aColsRF3, @aColsRF4, @aColsRF5, @aColsRF2,;
													@aHeaderRF3, @aHeaderRF4, @aHeaderRF5, @aHeaderRF2,;
													lSeq, nCountSeq, aSeq ),;
							 lValid := PONA420RF2Chk(nOpcX,cSemana,lLe,@n,.T.,@aCols,aHeader,@aColsAll,aHeaderAll,nCountSeq,( ++nVezChk > 1 ) ) ,;
							 oGet:ForceRefresh() , oGet:oBrowse:SetFocus() }
							 							 
		IF ( Inclui )
			cSemana := StrZero( ++nCountSeq , GetSx3Cache( "RF2_SEMANA" , "X3_TAMANHO" ) )
			@ aObjSize[1,1]+7 , aObjSize[1,4]*0.84 MSGET oMsGetSem VAR cSemana SIZE 30,9 WHEN .F. OF oDlg PIXEL FONT oFont		
			oMsGetSem:bValid := { || ( cSemana := StrZero( Val( cSemana ) , GetSx3Cache( "RF2_SEMANA" , "X3_TAMANHO" ) ) ) ,;
								  ValidMaxSeq( nCountSeq ) .and. ChkSeqAnt( @cSemana ) .and. Eval( bValid );
							  }
		Else
			@ aObjSize[1,1]+7 , aObjSize[1,4]*0.84 COMBOBOX oComboBox VAR cSemana ITEMS aSeq SIZE 30,9 OF oDlg PIXEL FONT oFont WHEN ( cLstSemana := cSemana , .T. )
			oComboBox:bChange:= bValid
		EndIF
	Else
	 	@ aObjSize[1,1]+7 , aObjSize[1,4]*0.84 SAY StrZero( nCountSeq , GetSx3Cache( "RF2_SEMANA" , "X3_TAMANHO" ) ) SIZE 30,10 OF oDlg PIXEL FONT oFontBig
	 	
		bValid := { |lValid| If (nOpcX != 3, ChgBySeq( @cCodHor, @cCodDia, aHeaderRF2, aColsRF2 ), ),;
  											RecGet( cFilSR6, cTnoSR6, nOpcx, @cCodHor, @cCodDia,;
													@aRecRF3, @aRecRF4, @aRecRF5, @aRecRF2,;
													@aColsRF3, @aColsRF4, @aColsRF5, @aColsRF2,;
													@aHeaderRF3, @aHeaderRF4, @aHeaderRF5, @aHeaderRF2,;
													lSeq, nCountSeq, aSeq ),;
								lValid := PONA420RF2Chk(nOpcX,cSemana,lLe,@n,.T.,@aCols,aHeader,@aColsAll,aHeaderAll,nCountSeq,( ++nVezChk > 1 ) ) ,;
	 							oGet:ForceRefresh() , oGet:oBrowse:SetFocus() }	 	
	EndIF
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Mostra informacoes sobre do Horario/Tipo Dia				  Ё
	Ё Monta os quadros dos grupos de informacoes separados		  Ё	
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	@ aObjSize[2,1] , aObjSize[2,2]	   	GROUP oGroupHr TO aObjSize[2,3],aObjSize[2,4]*0.15 	LABEL OemToAnsi(STR0392) OF oDlg PIXEL		// 'HorАrio'
	oGroupHr:oFont:=oFont
	@ aObjSize[2,1] , aObjSize[2,4]*0.155	GROUP oGroupHr TO aObjSize[2,3],aObjSize[2,4]	 		LABEL OemToAnsi(STR0393) OF oDlg PIXEL		// 'DescriГЦo do HorАrio'
	oGroupHr:oFont:=oFont
	@ aObjSize[3,1] , aObjSize[3,2] 		GROUP oGroupHr TO aObjSize[3,3],aObjSize[3,4]*0.15 	LABEL OemToAnsi(STR0394) OF oDlg PIXEL		// 'Tipos de Dias'
	oGroupHr:oFont:=oFont
	@ aObjSize[3,1] , aObjSize[3,4]*0.155	GROUP oGroupHr TO aObjSize[3,3],aObjSize[3,4] 			LABEL OemToAnsi(STR0395) OF oDlg PIXEL		// 'DescriГЦo do Tipo de Dia'
	oGroupHr:oFont:=oFont
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta validacao para o Horario   							  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bGetHor := {||   RecGet( cFilSR6, cTnoSR6, nOpcx, @cCodHor, @cCodDia,;
								   @aRecRF3, @aRecRF4, @aRecRF5, @aRecRF2,;
								   @aColsRF3, @aColsRF4, @aColsRF5, @aColsRF2,;
								   @aHeaderRF3, @aHeaderRF4, @aHeaderRF5, @aHeaderRF2,;
								   lSeq, nCountSeq, aSeq ),;
						           oGet:ForceRefresh(),;
						           .T.;
			  }  
 
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta validacao para o Tipo de Dia						  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
   	bGetTpd := { ||    RecGet( cFilSR6, cTnoSR6, nOpcx, @cCodHor, @cCodDia,;
					   		   @aRecRF3, @aRecRF4, @aRecRF5, @aRecRF2,;
 							   @aColsRF3, @aColsRF4, @aColsRF5, @aColsRF2,;
					   		   @aHeaderRF3, @aHeaderRF4, @aHeaderRF5, @aHeaderRF2,;
							   lSeq, nCountSeq, aSeq ),; 
							    oGet:ForceRefresh(),;
							    .T.;
			   } 
	If (nOpcX == 3) .or. (nOpcX == 4)
	
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Mostra o Codigo de Codigo de Horario/Tipo de Dia			  Ё
		Ё podendo ser alterado o conteudo							  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/	
		@ aObjSize[2,1]+7 , aObjSize[2,2]*2.5 	MSGET cCodHor Picture '@!' F3 "RF8" Valid(Eval( bGetHor )  .and. ChgCod("RF8") ) SIZE 25,9 OF oDlg PIXEL FONT oFont HASBUTTON
		@ aObjSize[3,1]+7 , aObjSize[3,2]*2.5 	MSGET cCodDia Picture '@!' F3 "RF9" Valid(Eval( bGetTpd )  .and. ChgCod("RF9") ) SIZE 25,9 OF oDlg PIXEL FONT oFont HASBUTTON
		
	Else
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Mostra o Codigo de Codigo de Horario/Tipo de Dia			  Ё
		Ё nao podendo ser alterado o conteudo					      Ё		
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/	
		@ aObjSize[2,1]+7 , aObjSize[2,2]*2.5 	SAY cCodHor SIZE 25,10 OF oDlg PIXEL FONT oFontBig
		@ aObjSize[3,1]+7 , aObjSize[3,2]*2.5 	SAY cCodDia SIZE 25,10 OF oDlg PIXEL FONT oFontBig
	
	EndIf
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Mostra o Descricao Horario/Tipo de Dia					  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	ChgCod("RF8") 
	ChgCod("RF9") 
	@ aObjSize[2,1]+7 , aObjSize[2,4]*0.17 SAY If( !Empty(cCodHor), OemToAnsi( LEFT(RF8->( RF8_DESC ),70) ), Space(50) ) SIZE 300,10 OF oDlg PIXEL FONT oFontBig
	@ aObjSize[3,1]+7 , aObjSize[3,4]*0.17 SAY If( !Empty(cCodDia), OemToAnsi( LEFT(RF9->( RF9_DESC ),70) ), Space(50) ) SIZE 300,10 OF oDlg PIXEL FONT oFontBig
	
	If ( nOpcX == 2)
		nLenaDias := Len(aCols)
	EndIf
	
	//Constroi a getdados dentro do ultimo painel
   	oGet := MsGetDados():New(aObjSize[4,1],aObjSize[4,2],aObjSize[4,3],aObjSize[4,4],2,"PONA420Lok","PONA420Tok","",,,,,nLenaDias,,,,,oDlg)
	
	ACTIVATE MSDIALOG oDlg ON INIT (;
										IF( ValType( oComboBox ) == "O",;
												Eval( oComboBox:bChange ),;
												NIL;
										   ),;		
										SetKey( VK_F4 , bReplicate  )		,;
										SetKey( VK_F5 , bCalendario )		,;
										EnchoiceBar(	oDlg				,;
														bSet15				,;
        	 		                  					bSet24				,;
													   	NIL					,;
            											aButtonsEnch	 	;
         				                  		   	),;
									  ;
   				                  	 )
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Restaura as Teclas de Atalho                     	  		  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	RestKeys( aSvKeys , .T. )
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Grava as Informacoes no RF2                      	  		  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( ( nOpcx == 3 .or. nOpcx == 4 ) .and. ( nOpcA == 1 ) )

		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁCaso Horario ou Tipo de Dia em Branco nao grava			  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	
			/*/
			зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			ЁTransfere os Dados do aCols para o aColsAll                  Ё
			юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			PONA420AllTrf( aCols , aHeader , @aColsAll , aHeaderAll , cSemana )

			/*/
			зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Apenas se Houveram Modificacoes                  	  		  Ё
			юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF !( fCompArray( aAntColsAll , aColsAll ) )
				PONA420Grava( cFilSR6,;
							  cTnoSR6,;
							  cCodHor,;
							  cCodDia,;
							  cSemana,;
							  nOpcX,;
							  @aRecRF3,;
							  @aRecRF4,;
							  @aRecRF5,;
							  @aRecRF2,;
							  @aColsRF3,;
							  @aColsRF4,;
							  @aColsRF5,;
							  @aColsRF2,;
							  @aHeaderRF3,;
							  @aHeaderRF4,;
							  @aHeaderRF5,;
							  @aHeaderRF2 )
			EndIF

	EndIF

End Sequence

cKeyLock := ( cFilSR6 + cTnoSR6 + cSemana )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCarrega Chave para Liberacao do Lock						   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( lExecLock )
	aAdd( aRF2Keys , cKeyLock )
EndIF

Return( nOpcA )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁChkSeqAnt	 ЁAutorЁMarinaldo de Jesus	  Ё Data Ё01/12/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁGarantir que as Sequencias na Tabela sejam cadastradas em orЁ
Ё          Ёdem															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420()                                                   Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ChkSeqAnt( cSeqAtu , lMaxSeq )

Local lSeqOk	:= .T.

Local bSeqOk
Local cSeqAnt
Local nSeq
Local nTamSeq

DEFAULT lMaxSeq := .F.

Begin Sequence

	nSeq	:= Val( cSeqAtu )

	IF ( nSeq == 1 )
		Break
	EndIF

	cSeqAnt	:= cSeqAtu
	nTamSeq	:= GetSx3Cache( "RF2_SEMANA" , "X3_TAMANHO" )

	IF ( nSeq < 1 )
		nSeq := 1
		cSeqAtu := StrZero( nSeq , nTamSeq )
		Break
	EndIF

	cSeqAnt := StrZero( --nSeq , nTamSeq )
	bSeqOk	:= { || RF2->( dbSeek( xFilial( "RF2" ) + SR6->R6_TURNO + cSeqAnt , .F. ) ) }
	IF ( lSeqOk := Eval( bSeqOk ) )
		Break
	Else
		cSeqAtu := cSeqAnt
		While !( lSeqOk := ChkSeqAnt( @cSeqAtu , @lMaxSeq ) )
			IF ( lMaxSeq )
				Break
			EndIF
			cSeqAnt := StrZero( --nSeq , nTamSeq )
			cSeqAtu := cSeqAnt
		End While
	EndIF
	
	IF Empty( StrTran( cSeqAtu , "*" , "" ) )
		cSeqAtu := Str( RetMaxSeq() + 1 )
	EndIF
	nSeq := Val( cSeqAtu )
	
	IF ( lMaxSeq := !( lSeqOk := ValidMaxSeq( nSeq ) ) )
		cSeqAtu	:= StrZero( --nSeq , nTamSeq )
		Break
	EndIF

End Sequence

Return( lSeqOk )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁRetMaxSeq	 ЁAutorЁMarinaldo de Jesus	  Ё Data Ё02/12/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁRetorna o Numero Maximo de Sequencias Permitidas para a TabeЁ
Ё          Ёla de Horario Padrao										Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420()                                                   Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function RetMaxSeq()

Local nTamSeq	:= GetSx3Cache( "RF2_SEMANA" , "X3_TAMANHO" )
Local nMaxSeq	:= Val( Replica( "9" , nTamSeq ) )

Return( nMaxSeq )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁValidMaxSeq	 ЁAutorЁMarinaldo de Jesus	  Ё Data Ё02/12/2003Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidar o Numero Maximo de Sequencias Permitidas para a TabeЁ
Ё          Ёla de Horario Padrao										Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420()                                                   Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ValidMaxSeq( nSeqAtu )

Local cMsg
Local lNoMaxSeq

IF !( lNoMaxSeq := ( nSeqAtu <= RetMaxSeq() ) )
	cMsg := STR0097 //"Excedeu o Nёmero de Seqncias.
	cMsg += CRLF + CRLF
	cMsg += STR0098	//"Seqncia Atual:
	cMsg += AllTrim( Str( nSeqAtu ) )
	cMsg += CRLF + CRLF
	cMsg += STR0099 //M═ximo permitido: 
	cMsg += AllTrim( Str( RetMaxSeq() ) )
	MsgInfo( OemToAnsi( cMsg ) , OemToAnsi( STR0068 ) )	//"Aten┤└o"
EndIF

Return( lNoMaxSeq )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁPONA420GravaЁ	  Ё Igor Franzoi		  Ё		 Ё25/10/2007Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁGravar Informacoes no RF2                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420()                                                   Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function PONA420Grava( cFilSR6,;
							  cTnoSR6,;
							  cCodHor,;
							  cCodDia,;
							  cSemana,;
							  nOpcX,;
							  aRecRF3,;
							  aRecRF4,;
							  aRecRF5,;
							  aRecRF2,; 
							  aColsRF3,;
							  aColsRF4,;
							  aColsRF5,;
							  aColsRF2,;
							  aHeaderRF3,;
							  aHeaderRF4,;
							  aHeaderRF5,;
							  aHeaderRF2 )

Local aColsAux		:= {}
Local aCposPos		:= {}
Local aCposRF2		:= {}
Local lAddNew		:= .F.
Local nCol			:= 0
Local nCols			:= Len( aColsAll	)
Local nField		:= 0
Local nFieldsRF2	:= Len( aHeaderRF2 )
Local nRec			:= 0
Local nRecRF2		:= Len( aRecRF2 )
Local nPosField		:= 0
Local nPosDeleted	:= GdFieldPos( "GDDELETED" , aHeaderAll )
Local nPosSemana	:= GdFieldPos( "RF2_SEMANA" , aHeaderAll )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Informacoes obrigatorias do RF2							  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aAdd( aCposRF2, { "RF2_FILIAL", SR6->R6_FILIAL 	} )
aAdd( aCposRF2, { "RF2_TURNO" , SR6->R6_TURNO 	} )
aAdd( aCposRF2, { "RF2_SEMANA", AllTrim(cSemana) } )
aAdd( aCposRF2, { "RF2_HOR"   , AllTrim(cCodHor)	} )
aAdd( aCposRF2, { "RF2_TIPOD" , AllTrim(cCodDia)	} )


For nField := 1 To nFieldsRF2 
	nPosField := RF2->( FieldPos( aHeaderRF2[ nField , 02 ] ) )

	Begin Sequence
		For nCols := 1 To Len(aCposRF2)
			If ( aHeaderRF2[ nField, 02 ] == aCposRF2[ nCols, 01 ] )
				aAdd( aCposRF2[nCols], nPosField )
				Exit
			Else
				If !( aScan( aCposRF2, { |x| x[1] == aHeaderRF2[ nField,02 ] } ) > 0 )
					aAdd( aCposPos, { aHeaderRF2[ nField, 02 ], "", nPosField } )
					Exit
				EndIf
			EndIf
		Next
	End Sequence
	
Next nField

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Verifica se Deve Adicionar novos Registros       	  		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
If ( lAddNew := (nRecRF2 == 0) )
	nRecRF2 := Len( aColsRF2 )
EndIf

Begin Transaction
	nFields := Len( aCposPos ) + Len( aCposRF2 )
	IF ( nRecRF2 > 0 )
		IF !( lAddNew )
			/*/
			зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Localiza qual o Recno(Registro) deve ser alterado no RF2    Ё
			юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			For nField := 1 To Len(aColsRF2)
				If ( aColsRF2[ nField, GdFieldPos( "RF2_TURNO", aHeaderRF2 ) ] == SR6->R6_TURNO ) .and. ;
					( aColsRF2[ nField, GdFieldPos( "RF2_SEMANA", aHeaderRF2 ) ] == cSemana )
					nRec := aRecRF2[nField]
				EndIf			
			Next
			RF2->( dbGoTo(nRec) )
		EndIF
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Efetua a gravacao dos registros							  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		If( lAddNew, nRec := nRecRF2, nRecRF2 )
		IF RF2->( RecLock( "RF2" , lAddNew ) )
			For nField := 1 To nFields
				For nCols := 1 To Len(aCposRF2)
					If aHeaderRF2[ nField, 02 ] == aCposRF2[ nCols, 01 ]
						RF2->&(aCposRF2[ nCols, 01 ]) := aCposRF2[ nCols, 02 ]
						Exit		
					EndIf						
				Next
			Next nField
			RF2->( MsUnlock() )
			RF2->( FkCommit() )
		EndIf
	EndIF
	RF2->( EvalTrigger() )
End Transaction

Return( NIL )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁPONA420Lok  ЁAutorЁMarinaldo de Jesus     Ё Data Ё07/05/2003Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCritica linha digitada                                      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420()													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function PONA420Lok( oBbj )
         
Local cMsgInfo		:= ""
Local lRet			:= .T.
Local nCtMarc		:= 0      
Local nX			:= 0
Local nHeader		:= Len( aHeader )
Local nPosTpDia		:= GdFieldPos( 'RF2_TPDIA'   )
Local nPosHr1		:= GdFieldPos( 'RF3_HRTRAB' )
Local nPosHr2		:= GdFieldPos( 'RF3_HRTRA2' ) 
Local nPosHr3		:= GdFieldPos( 'RF3_HRTRA3' )
Local nPosHr4		:= GdFieldPos( 'RF3_HRTRA4' )
Local nPosTot		:= GdFieldPos( 'RF3_HRSTOT' ) 
Local nPosHi1		:= GdFieldPos( 'RF3_HRINT1' ) 
Local nPosHi2   	:= GdFieldPos( 'RF3_HRINT2' ) 
Local nPosHi3		:= GdFieldPos( 'RF3_HRINT3' )
Local nPosMen		:= GdFieldPos( 'RF3_HRMENO' ) 
Local nPosMai		:= GdFieldPos( 'RF3_HRMAIS' )

Begin Sequence

	//-- Nao permite campos em branco
	For nX := 1 To nHeader
		IF Subs(aHeader[nX,2],1,8) $ 'RF3_ENTRA1*RF3_ENTRA2*RF3_ENTRA3*RF3_ENTRA4*RF3_SAIDA1*RF3_SAIDA2*RF3_SAIDA3*RF3_SAIDA4'
			IF aCols[n,nX] > 0 .or. (aCols[n,nX] == 0 .and. Subs(aHeader[Min(nHeader,nX+1),2],1,8)$"RF2_ENTRA,RF2_SAIDA" .and. aCols[n,nX+1] > 0) .or. aCols[n,nX] == 0 .and. nCtMarc%2 # 0
				nCtMarc++
			EndIF
		EndIF
	Next nX
	
	IF nCtMarc > 0 .and. nCtMarc % 2 > 0 .and. aCols[n, nPosTpDia] == 'S'
		// Nao sao permitidas marcacoes impares.
		Help(' ',1,'PNA080MPAR')
		lRet := .F.
		Break
	EndIF
	
	IF Empty( aCols[ n , nPosMen ] ) .or. Empty( aCols[ n , nPosMai ] )
		// Horas Inferior ou Horas Superior Nao podem ser zero
		IF Empty( aCols[ n , nPosMen ] )
			Help(' ',1,'HORMAMEZER',,STR0060 + aHeader[ nPosMen , 01 ] + " - " + aHeader[ nPosMen , 02 ]  , 5 , 0 ) //"Campo: "	
		Else
			Help(' ',1,'HORMAMEZER',,STR0060 + aHeader[ nPosMai , 01 ] + " - " + aHeader[ nPosMai , 02 ] , 5 , 0 ) //"Campo: "
		EndIF
		lRet := .F. 
		Break
	EndIF
	
	//Grava Horas Trabalhadas 1a. Jornada
	IF !Empty( nPosHr1 )
		aCols[ n , nPosHr1 ] := fHrsTrabGat( "H" ,"RF3",, "1" )
	EndIF
	
	//Grava Horas Trabalhadas 2a. Jornada
	IF !Empty( nPosHr2 )
		aCols[ n , nPosHr2 ] := fHrsTrabGat( "H" ,"RF3",, "2" )
	EndIF
	
	//Grava Horas Trabalhadas 3a. Jornada
	IF !Empty( nPosHr3 )
		aCols[ n , nPosHr3 ] := fHrsTrabGat( "H" ,"RF3",, "3" )
	EndIF
	
	//Grava Horas Trabalhadas 4a. Jornada
	IF !Empty( nPosHr4 )
		aCols[ n , nPosHr4 ] := fHrsTrabGat( "H" ,"RF3",, "4" )
	EndIF
	
	//Grava Horas 1o. Intervalo
	IF !Empty( nPosHi1 )
		aCols[ n , nPosHi1 ] := fHrsTrabGat( "I","RF3",,"1" )
	EndIF
	
	//Grava Horas 2o. Intervalo
	IF !Empty( nPosHi2 )
		aCols[ n , nPosHi2 ] := fHrsTrabGat( "I","RF3",,"2" )
	EndIF
	
	//Grava Horas 3o. Intervalo
	IF !Empty( nPosHi3 )
		aCols[ n , nPosHi3 ] := fHrsTrabGat( "I","RF3",,"3" )
	EndIF
	
	//Grava Total de Horas ( Trabalhadas + Intervalo )
	IF !Empty( nPosTot )
		aCols[ n , nPosTot ] := 0
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHi1 ] )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHi2 ] )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHi3 ] )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHr1 ] )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHr2 ] )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHr3 ] )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHr4 ] )
	EndIF
	
	//Verifica se Existe Saida de Intervalo sem Entrada correspondente
	IF ( ( ( aCols[ n , nPosHi1 ] <> 0 ) .or. ( GdFieldGet( 'RF3_INTER1' ) == "S" ) ) .and. ( aCols[ n , nPosHr2 ] == 0 ) )
		lRet		:= .F.
		cMsgInfo	:= STR0092  //"Tabela n└o pode terminar com uma saida de intervalo"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0093	//"O intervalo: "
		cMsgInfo	+= " 1 "
		cMsgInfo	+= STR0094  //"Nao possui a entrada correspondente"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0095  //"Altere o conteudo do campo: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'RF3_INTER1' ) , 01 ]
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo    += STR0096	//"ou informe Hor═rio nos campos: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'RF3_ENTRA2' ) , 01 ]
		cMsginfo	+= " / " 
		cMsgInfo	+= aHeader[ GdFieldPos( 'RF3_SAIDA2' ) , 01 ]
		Break		
	EndIF

	//Verifica se Existe Saida de Intervalo sem Entrada correspondente
	IF ( ( ( aCols[ n , nPosHi2 ] <> 0 ) .or. ( GdFieldGet( 'RF3_INTER2' ) == "S" ) ) .and. ( aCols[ n , nPosHr3 ] == 0 ) )
		lRet		:= .F.
		cMsgInfo	:= STR0092  //"Tabela n└o pode terminar com uma saida de intervalo"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0093	//"O intervalo: "
		cMsgInfo	+= " 2 "
		cMsgInfo	+= STR0094  //"Nao possui a entrada correspondente"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0095  //"Altere o conteudo do campo: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'RF3_INTER2' ) , 01 ]
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo    += STR0096	//"ou informe Hor═rio nos campos: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'RF3_ENTRA3' ) , 01 ]
		cMsginfo	+= " / " 
		cMsgInfo	+= aHeader[ GdFieldPos( 'RF3_SAIDA3' ) , 01 ]
		Break		
	EndIF

	//Verifica se Existe Saida de Intervalo sem Entrada correspondente
	IF ( ( ( aCols[ n , nPosHi3 ] <> 0 ) .or. ( GdFieldGet( 'RF3_INTER3' ) == "S" ) ) .and. ( aCols[ n , nPosHr4 ] == 0 ) )
		lRet		:= .F.
		cMsgInfo	:= STR0092  //"Tabela n└o pode terminar com uma saida de intervalo"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0093	//"O intervalo: "
		cMsgInfo	+= " 3 "
		cMsgInfo	+= STR0094  //"Nao possui a entrada correspondente"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0095  //"Altere o conteudo do campo: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'RF3_INTER3' ) , 01 ]
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo    += STR0096	//"ou informe Hor═rio nos campos: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'RF3_ENTRA4' ) , 01 ]
		cMsginfo	+= " / " 
		cMsgInfo	+= aHeader[ GdFieldPos( 'RF3_SAIDA4' ) , 01 ]
		Break		
	EndIF

End Sequence

IF ( !( lRet) .and. !Empty( cMsgInfo ) )
	//"Existe inconsist┬ncias na Tabela de Hor═rio"
	MsgInfo( OemToAnsi( cMsgInfo ) , OemToAnsi( STR0091 ) )
EndIF
	
Return( lRet )

/*/
зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁPONA420Tok Ё Autor ЁIgor Franzoi		  Ё Data Ё05/10/2007Ё
цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidacao das Linhas Digitadas na GetDados					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420()													Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function PONA420Tok( oObj )

Local lRet		:= .T.
Local nI		:= 0
Local nItera	:= Len( aCols )
Local nSvn		:= n

If Empty(cCodHor) .or. Empty(cCodDia)
	lRet := .F.
	MsgInfo( STR0398 )
Else

	For nI := 1 To nItera
		n := nI
		IF !( lRet := PONA420Lok( oObj ) )
			Exit
		EndIF
	Next nI
	
	n := nSvn
EndIf

Return( lRet )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁPONA420RF2ChkЁAutorЁIgor Franzoi		  Ё Data Ё25/10/2007Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁValidar a Semana Digitada e Transferir os Dados para o ArrayЁ
Ё          ЁMaster ( aColsAll )										    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420                                                     Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function PONA420RF2Chk(	nOpcX 		,;
								cSemana 	,;
								lLe			,;
								nLinCols	,;
								lValid		,;
								aCols		,;
								aHeader		,;
								aColsAll	,;
								aHeaderAll	,;
								nCountSeq	,;
								lTransfToAll ;
							  )		

Local lRet			:= .T.
Local nSvN			:= nLinCols
Local nPos			:= 0
Local nPos1			:= 0
Local nSemana		:= GdFieldPos( "RF2_SEMANA" , aHeaderAll )

DEFAULT lValid			:= .F.
DEFAULT lTransfToAll	:= .F.

Begin Sequence

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSe a Sequencia estiver Vazia                                 Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !( lRet := !Empty(cSemana) )
		Help(" ",1,"CSEMANA")
		Break
	EndIF
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁProcura a Sequencia no aColsAll	                          Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	nPos := aScan( aColsAll , { |x| x[nSemana] == cSemana 	} )
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁRetorna o Help correspondente  	                          Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	If nOpcX != 3
		IF ( ( lRet ) .and. ( nPos > 0 ) .and. !( lLe ) )
		   Help(" ",1,"P080SP7EXI")
		   lRet := .F.
		   Break
		ElseIF ( ( lRet ) .and. ( nPos == 0 ) .and. ( lLe ) )
		   Help(" ",1,"P080SP7NEX")
		   lRet := .F.
		   Break
		EndIF
	EndIf
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁTranferindo Dados e Remontando o aCols		                  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( ( lRet ) .and. ( lLe ) .and. ( lValid ) )
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁMonta Novo aCols Conforme a Sequencia						  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		PONA420BldCols(	nOpcX 		,;	//01 ->	//Opcao do aRotina
						@aCols 		,;	//02 ->	//Array com os Detalhes para Alteracao
						aHeader		,;	//03 ->	//Cabecalho do aCols para Alteracao
						aColsAll	,;	//04 ->	//Array com Todos os Detalhes para o Turno
						aHeaderAll	,;	//05 ->	//Cabecalhjo do aColsAll
						NIL			,;	//06 ->	//Se carregara ou nao a Sequencia
						NIL			,;	//07 ->	//Se eh apenas para Contar as Sequencias
						nCountSeq	 ;	//08 ->	//Numero de Sequencias
				  	  )
	EndIF

End Sequence
	
/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁReposiona aCols											  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
nLinCols := IF( lValid , 1 , nSvN )

Return( lRet )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁPONA420BldCols	ЁAutorЁMarinaldo de Jesus Ё Data Ё22/01/2002Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁMontar a Estrutura do aCols para aGetDados para   ManutencaoЁ
Ё          Ёda Tabela de Horario Padrao									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420                                  					Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Retorno  ЁNIL															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function PONA420BldCols(	nOpcX 		,;	//01 ->	//Opcao do aRotina
								aCols 		,;	//02 ->	//Array com os Detalhes para Alteracao
								aHeader		,;	//03 ->	//Cabecalho do aCols para Alteracao
								aColsAll	,;	//04 ->	//Array com Todos os Detalhes para o Turno
								aHeaderAll	,;	//05 ->	//Cabecalhjo do aColsAll
								lSeq		,;	//06 ->	//Se carregara ou nao a Sequencia
								lCountSeq	,;	//07 ->	//Se eh apenas para Contar as Sequencias
								nCountSeq	,;	//08 ->	//Numero de Sequencias
				 	   	   	    aHeaderRF2	,;  //09 -> //Cabecalho para contar as sequencias
				   	   	   		aColsRF2  	;   //10 -> //aCols com as sequencias no RF2
						   	  )

Local aSeq			:= {}
Local cSeq			:= cSemana
Local cSeqAnt		:= "__cSeqAnt__"
Local cSeqAtu		:= "__cSeqAtu__"
Local nCountLin		:= 0
Local nSemana		:= GdFieldPos( "RF2_SEMANA" , aHeaderAll )
Local nPosSeq		:= 0
Local nDia			:= 0 
Local nField		:= 0
Local nMaxTab		:= 0
Local nMaxAll		:= 0
Local nPosDeleted	:= 0
Local nX			:= 0

DEFAULT aCols		:= {}
DEFAULT lSeq 		:= .T.
DEFAULT lCountSeq	:= .F.
DEFAULT nCountSeq	:= 0

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Verifica se Deve contar as Sequencias Existentes			   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( lCountSeq )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Carrega o Numero de Sequencias Existentes					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/   
	nCountSeq := 0
	For nX := 1 To Len( aColsRF2 )
		IF !Empty( ( cSeqAtu := GdFieldGet( "RF2_SEMANA" , nX , NIL , aHeaderRF2 , aColsRF2 ) ) )
			IF !( cSeqAnt == cSeqAtu )
				++nCountSeq
				aAdd( aSeq , cSeqAtu )
				cSeqAnt := cSeqAtu
			EndIF
		EndIF	
	Next nX
EndIF

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCarrega os Dados do Calendario conforme Sequencia			  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( ( ( nOpcX <> 3 ) .and. !( lCountSeq ) ) .or. ( nOpcX == 2 ) )
	IF ( nCountSeq > 0 )

		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Carrega o Numero de Elemementos no aCols  				   Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		nMaxAll	:= Len( aColsAll )
		IF ( nMaxAll < nMaxTab )
			IF ( nOpcx <> 5 )
				MsgInfo( OemToAnsi( STR0391 ) ) //"Existem InconsistЙncias na Tabela de HorАrio. Exclua as SequЙncias e Reinclua-as."
			EndIF
		EndIF
		nMaxTab	:= Len( aCols )
		For nX := 1 To nMaxTab
			IF ( lSeq )
				IF ( ( nPosSeq := aScan( aColsAll , { |x| x[nSemana] == cSeq } , ++nPosSeq ) ) == 0 )
					IF ( ( nPosSeq := aScan( aColsAll , { |x| x[nSemana] == cSeq } ) ) == 0 )
						Loop
					EndIF
				EndIF
			Else
				IF ( nX <= nMaxAll )
					nPosSeq := nX
				Else
					nPosSeq := nMaxAll
				EndIF
			EndIF
			cSeqAtu := GdFieldGet( "RF2_SEMANA" , nPosSeq , NIL , aHeaderAll , aColsAll )
			IF ( ( lSeq .and. ( cSeq == cSeqAtu ) ) .or. !( lSeq ) )
				For nField := 1 To nUsado
					GdFieldPut(;
									aHeader[ nField , 02 ] ,;
									GdFieldGet( aHeader[ nField , 02 ] , nPosSeq , NIL , aHeaderAll , aColsAll ),;
									nX,;
									aHeader,;
									@aCols;
								   )		
				Next nField
			EndIF
		Next nX
	Else
		Help(" ",1,"P080SP7NEX")
	EndIF
Else
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁNeste Caso o Calendario eh Vazio                             Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	nMaxTab := Len( aCols )
EndIF

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁConsistindo o aCols                                          Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( ( nOpcX == 3 ) .or. ( lCountSeq ) .or. ( nCountSeq > 0 ) )
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁPreenche os Valores "DEFAULT" para os Campos                 Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	If nOpcX == 3
		nPosDeleted := GdFieldPos( "GDDELETED" , aHeader )
		For nDia := 1 To nMaxTab
			For nX := 1 To Len( aHeader )
				IF ( aHeader[ nX , 02 ] == "GHOSTCOL" )
					Loop
				EndIF
				IF Empty( aCols[ nDia , nX ] )
					If aHeader[ nX , 10 ] == "V"
						aCols[ nDia , nX ] := CriaVar( aHeader[ nX , 02 ], NIL, NIL, .T. )
					Else
						aCols[ nDia , nX ] := CriaVar( aHeader[ nX , 02 ] )
					EndIf
				EndIF
			Next nX
			GdFieldPut( "GDDELETED" , .F. , nDia , aHeader , @aCols )
		Next nDia	
	EndIf
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁQuando nao estiver verificando a quantidade de sequencias   eЁ
	Ёnao for inclusao Remonta o aCols							  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( ( !( lCountSeq ) .and. ( nOpcX <> 3 ) ) .or. ( nOpcX == 2 ) )
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁCarrega a Descricao do Tipo do Dia							  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		nDia := 0
		For nX := 1 To nMaxTab
			IF ( ++nDia > 7 )
				nDia := 1
			EndIF
			GdFieldPut( "RF2_DIA" , aDias[ nDia , 01 ] , nX , aHeader , @aCols )
		Next nX
	Else
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁCarrega a Descricao do Tipo do Dia							  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		nDia := 0
		For nX := 1 To nMaxTab
			IF ( ++nDia > 7 )
				nDia := 1
			EndIF
			GdFieldPut( "RF2_DIA"	, aDias[ nDia , 01 ] , nX , aHeader , @aCols )
			GdFieldPut( "RF5_TIPO"	, aDias[ nDia , 02 ] , nX , aHeader , @aCols )			
			GdFieldPut( "RF3_TPEXT"	, aDias[ nDia , 03 ] , nX , aHeader , @aCols )
			GdFieldPut( "RF3_TPEXTN"	, aDias[ nDia , 04 ] , nX , aHeader , @aCols )
		Next nX
	EndIF
EndIF

Return( aSeq )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁPONA420RmkCols	ЁAutorЁMarinaldo de Jesus Ё Data Ё22/01/2002Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁRemonta o aCols Para Considerar a Segunda o 1o. Dia da  SemaЁ
Ё          Ёna															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁPONA420RmkCols( aCols , nMaxTab )							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420                                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Retorno  ЁNIL															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function PONA420RmkCols( aCols , nMaxTab )

Local aSvDom	:= {}
Local nX		:= 0

DEFAULT nMaxTab	:= Len( aCols )

For nX := 1 To nMaxTab Step 7
	aAdd( aSvDom , aClone( aCols[ nX ] ) )
Next nX
For nX := 1 To nMaxTab
	IF ( ( nX % 7 ) != 0 )
		aCols[ nX ] := aClone( aCols[ nX + 1 ] )
	Else
		aCols[ nX ] := aClone( aSvDom[ ( nX / 7 ) ] )
	EndIF
Next nX

Return( NIL )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁPONA420AllTrf	ЁAutorЁMarinaldo de Jesus Ё Data Ё06/05/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁTransfere Informacoes do aCols para o aColsAll              Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>     								Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420                                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Retorno  ЁNIL															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function PONA420AllTrf( aCols , aHeader , aColsAll , aHeaderAll , cSemana )

Local nCol			:= 0
Local nAux			:= 0

IF !Empty( cSemana )

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁTransfere os Dados Entre aCols        					  	  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/				   
	For nCol := 1 To Len(aCols)
		For nAux := 1 To Len(aCols[nCol])
			aColsAll[ nCol, nAux ] := aCols[ nCol, nAux ]
		Next
	Next
	
EndIF
	
Return( NIL )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁPONA420Calend	ЁAutorЁMarinaldo de Jesus Ё Data Ё26/05/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁDisponibilizar Calendario para consulta                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>     								Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420                                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Retorno  ЁNIL															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function PONA420Calend( lBuildTemp )

Local aKeys				:= GetKeys()
Local aArea				:= GetArea()
Local aAreaRF2			:= {}
Local aAdvSize			:= {}
Local aInfoAdvSize		:= {}
Local aObjSize			:= {}
Local aObjCoords		:= {}
Local aGDCoord			:= {}
Local aButtons			:= {}
Local aStrRf2			:= {}
Local aCposRf2			:= {}
Local bSet15			:= { || NIL }
Local bSet24			:= { || NIL }
Local bCriaCalend		:= { || NIL }
Local bShowCalend		:= { || NIL }
Local bPrev				:= { || GetPerPrev( @dDataIni , @dDataFim , oDataIni , oDataFim )	, SetKey( VK_F4 , bPrev 	) }
Local bAtu				:= { || GetPerAtu( @dDataIni , @dDataFim , oDataIni , oDataFim )	, SetKey( VK_F5 , bAtu		) }
Local bNext				:= { || GetPerNext( @dDataIni , @dDataFim , oDataIni , oDataFim )	, SetKey( VK_F6 , bNext 	) }
Local bPerSPO			:= { || GetPerSPO( @dDataIni , @dDataFim , oDataIni , oDataFim )	, SetKey( VK_F7 , bPerSPO	) }
Local bDialogInit		:= { || NIL }
Local cDataFile			:= ""
Local cBagName			:= ""
Local cExt				:= ""
Local cRdd				:= __LocalDriver
Local cIndexKey			:= ""
Local cSequencia		:= IF( Empty( cSemana ) , StrZero( 01 , GetSx3Cache( "RF2_SEMANA" , "X3_TAMANHO" ) ) , cSemana )
Local dDataIni			:= Ctod("//")
Local dDataFim      	:= Ctod("//")
Local lBuildData		:= .F.
Local lShowCalend		:= .F.
Local lCriaCalend		:= .F.
Local lMaxP8PGOrdVld	:= .T.
Local nMaxOrd			:= 0
Local oDlg				:= NIL
Local oFont				:= NIL
Local oFontBig			:= NIL
Local oGroup			:= NIL
Local oDataIni			:= NIL
Local oDataFim			:= NIL

Static __aStruRF2__

Private aTabCalend	:= {}

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Obtem Periodo conforme Parametro ( Sugerido )				   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
GetPonMesDat( @dDataIni , @dDataFim )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Monta as Dimensoes dos Objetos         					   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aAdvSize		:= MsAdvSize( , .T., 390)
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
aAdd( aObjCoords , { 000 , 010 , .T. , .F. } )
aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )
aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁDefine o Botao para o Periodo Anterior  					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aAdd(;
		aButtons	,;
						{;
							"PREV"				,;	
   							bPrev				,;
       	   					OemToAnsi( STR0100 ),;	//"Anterior <F4>..."
       	   					OemToAnsi( STR0300 ) ;	//"Anterior"
           				};
        )					 	

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁDefine o Botao para o Periodo Atual     					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aAdd(; 
		aButtons	,;
						{;
							"OBJETIVO"				,;
   							bAtu				,;
       	   					OemToAnsi( STR0101 ),;	//"Atual <F5>..."
       	   					OemToAnsi( STR0301 ) ;	//"Atual"
           				};
        )					 	

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁDefine o Botao para o Proximo Periodo						  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aAdd(; 
		aButtons	,;
						{;
							"NEXT"				,;
   							bNext				,;
       	   					OemToAnsi( STR0102 ),;	//"Pr╒ximo <F6>..."
       	   					OemToAnsi( STR0302 ) ;	//"Pr╒ximo"       	   					
           				};
        )					 	

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁDefine o Botao para os Periodos do SPO						  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
aAdd(; 
		aButtons	,;
						{;
							"BMPSXB"			,;
   							bPerSPO				,;
       	   					OemToAnsi( STR0103 ),;	//"Per║odo do SP0 <F7>..."
       	   					OemToAnsi( STR0303) ;	//"Per║odo"
           				};
        )					 	

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Define o Bloco para a Teclas <CTRL-O>   ( Button OK da EnchoiЁ
Ё ceBar )													   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
bSet15 := { || 			IF(;
							Eval( oDataIni:bValid ) .and.;
							Eval( oDataFim:bValid ) .and.;
							( lMaxP8PGOrdVld := MaxP8PGOrdVld( dDataIni , dDataFim , .T. , @nMaxOrd ) ),;
							(;
								lShowCalend := .T. 		,;
							(;
								RestKeys( aKeys , .T. ) ,;
								oDlg:End()			     ;
							),;
							),;
							(;
								IF( !( lMaxP8PGOrdVld ) , dDataFim := ( dDataIni + ( nMaxOrd  - 1 ) ) , NIL ) ,;
								.F.;
							);	
						   );
			}

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Define o  Bloco  para a Teclas <CTRL-X> ( Button Cancel da EnЁ
Ё choiceBar )												   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
bSet24 := { || RestKeys( aKeys , .T. ) , oDlg:End() }

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁDefine o Bloco para o Init do Dialog 						  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
bDialogInit := { ||;
						SetKey( VK_F4 , bPrev	),;
						SetKey( VK_F5 , bAtu 	),; 
						SetKey( VK_F6 , bNext	),;
						SetKey( VK_F7 , bPerSPO	),;
						EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons );
				}

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁMonta Dialogo para a selecao do Periodo 					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
DEFINE FONT oFont		NAME "Arial" SIZE 0,-11 BOLD
DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0084) From aAdvSize[7],0 TO aAdvSize[6]*0.4,aAdvSize[5] OF oMainWnd PIXEL			//"Selecione o Periodo Para a Montagem do Calend═rio"

	@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup TO aObjSize[3,1],aObjSize[3,4] LABEL OemToAnsi(STR0085) OF oDlg PIXEL	//"Periodo:"
	oGroup:oFont:= oFont

	@ aObjSize[2,1]+5, aObjSize[2,2]*2.5		SAY OemToAnsi(STR0086)		SIZE 100,10 OF oDlg PIXEL FONT oFont	//"Inicial:"
	@ aObjSize[2,1]+3, (aObjSize[2,2]*2.5)+25	MSGET oDataIni VAR dDataIni	SIZE 100,10 OF oDlg PIXEL FONT oFont VALID !Empty( dDataIni ) HASBUTTON

	@ aObjSize[2,1]+5, aObjSize[2,4]*0.5		SAY OemToAnsi(STR0087)		SIZE 100,10 OF oDlg PIXEL FONT oFont	//"Final:"
	@ aObjSize[2,1]+3, (aObjSize[2,4]*0.5)+25	MSGET oDataFim VAR dDataFim	SIZE 100,10 OF oDlg PIXEL FONT oFont VALID ( !Empty( dDataFim ) .and. ( dDataIni <= dDataFim ) ) HASBUTTON
			                   
ACTIVATE MSDIALOG oDlg CENTERED ON INIT Eval( bDialogInit )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura as Teclas de Atalho                     	  		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RestKeys( aKeys , .T. )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁSo Mostra Calendario se nao Cancelou o Dialogo do Periodo    Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
IF ( lShowCalend )

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁVerifica se Deve Criar o arquivo Temporario               	  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lBuildTemp )
		//Gera informacoes para do RF2 para o arquivo temporario
		Pn420SelTmp( @aStrRf2, @aCposRf2, @cSequencia )
		DEFAULT __aStruRF2__ := RF2->( dbStruct() )
	    aAreaRF2	:= RF2->( GetArea() )
		cExt 		:= GetDbExtension()
		cDataFile	:= ( CriaTrab( NIL , .F. ) + cExt )
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁSe foi Possivel criar o Arquivo Temporario					  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( lBuildData := MsCreate( cDataFile , __aStruRF2__ , cRdd ) )
			cBagName	:= ( FileNoExt( cDataFile )+IndexExt() )
			cIndexKey	:= RF2->( IndexKey() )
			RF2->( dbCloseArea() )
			/*/
			зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			ЁSe foi Possivel Abrir o Arquivo Temporario					  Ё
			юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF ( lBuildData := MsOpenDbf( .T. , cRdd , cDataFile , "RF2" , .T. , .F. ) )
				/*/
				зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				ЁSe o Arquivo Estiver Selecionado							  Ё
				юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
				IF ( lBuildData := ( Select( "RF2" ) > 0 ) )

					If !(Altera)
						If ( !Empty(cCodHor) .and. !Empty(cCodDia) )
							RF2->( RecLock( "RF2", .T. ) )
								RF2->RF2_FILIAL := cFilSR6
								RF2->RF2_TURNO  := cTnoSR6
								RF2->RF2_SEMANA := cSemana
								RF2->RF2_HOR	:= cCodHor
								RF2->RF2_TIPOD	:= cCodDia
							RF2->( MsUnlock() )
						EndIf
					Else
						cSequencia := ""
					EndIf

					PONA420TmpGrv( @aStrRf2, @aCposRf2 )					
					
					RF2->( IndRegua( "RF2" , cBagName , cIndexKey , NIL , NIL , NIL , .T. ) )
					RF2->( dbClearIndex() )
					RF2->( dbSetIndex( cBagName ) )

				EndIF
		   	EndIF
		EndIF
	Else
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁNa Visualizacao Obtem sequencia conforme a Linha da GetDados Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		cSequencia := GdFieldGet( "RF2_SEMANA" )
	EndIF
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁCria o Calendario do Periodo        						  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bCriaCalend	:= { || lCriaCalend := CriaCalend(	dDataIni 	,;	//01 -> Data Inicial do Periodo
													dDataFim 	,;	//02 -> Data Final do Periodo
													cTnoSR6	 	,;	//03 -> Turno Para a Montagem do Calendario
													cSequencia	,;	//04 -> Sequencia Inicial para a Montagem Calendario
													NIL			,;	//05 -> Array Tabela de Horario Padrao
													@aTabCalend ,;	//06 -> Array com o Calendario de Marcacoes
													cFilSR6		,;	//07 -> Filial para a Montagem da Tabela de Horario
													NIL			,;	//08 -> Matricula para a Montagem da Tabela de Horario
													NIL			,;	//09 -> Centro de Custo para a Montagem da Tabela
													NIL			,;	//10 -> Array com as Trocas de Turno
													NIL			,;	//11 -> Array com Todas as Excecoes do Periodo
													.F. 		 ;	//12 -> Se executa Query para a Montagem da Tabela Padrao
												  );
					}
					
	MsAguarde( bCriaCalend , OemToAnsi( STR0088 ) ) //"Criando o Calend═rio..."
	IF ( lCriaCalend  )
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁMostra o Calendario conforme periodo						  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		bShowCalend	:= { || F_ALT_H(NIL,NIL,NIL,NIL,NIL,NIL,NIL,.F.) }
		MsAguarde( bShowCalend , OemToAnsi( STR0089 ) ) //"Montando o Calend═rio..."
	EndIF	
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁApaga os Arquivos Temporarios       						  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( lBuildData )
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁFecha e Exclui o RF2 Temporario     						  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		RF2->( dbCloseArea() )
		fErase( cDataFile )
		fErase( cBagName )
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁAbre o RF2 padrao                   						  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		ChkFile("RF2")
		/*/
		зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁRestaura o Estado do RF2            						  Ё
		юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF !Empty( aAreaRF2 )
			RestArea( aAreaRF2 )
		EndIF
	EndIF

EndIF

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRestaura Dados de Entrada           						  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RestKeys( aKeys , .T. )
RestArea( aArea )

Return( NIL )
/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁPn420SelTmp	Ё Autor Ё Igor Franzoi			Ё Data Ё18.03.2008Ё╠╠
╠╠цддддддддддеддддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Gravar Informacoes no RF2									  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Pn420SelTmp() 												  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ 																  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё 			 												  	  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function Pn420SelTmp( aStrRf2, aCpos, cSequencia )

Local aArea := GetArea()

Local nCont	  := 0
Local nCpos	  := 0
Local cWhere  := ""
Local cQryRf2 := ""
Local cCposRf2:= "" 

#IFNDEF TOP
	cKeyRf2 := cFilSr6+cTnoSr6
	nOrdRf2 := RF2->(RetOrdem("RF2","RF2_FILIAL+RF2_TURNO+RF2_SEMANA"))
	cFilter := "RF2_FILIAL"+"RF2_TURNO"
#ENDIF

aStrRf2 := RF2->(dbStruct())
cCposRf2 := "%"
For nCont := 1 To Len(aStrRf2)
	If	( nCont == 1 )
		cCposRf2 += "RF2."+aStrRf2[nCont,01]
	Else
		cCposRf2 += " , RF2."+aStrRf2[nCont,01]
	EndIf	
Next
cCposRf2 += "%"
    
#IFDEF TOP

	cQryRf2 := GetNextAlias()
	
	cWhere := "%"
	cWhere += " RF2.RF2_FILIAL = '"+cFilSr6+"'"
	cWhere += " AND RF2.RF2_TURNO = '"+cTnoSr6+"'"
	cWhere += "%"
	
	BeginSql Alias cQryRf2
		SELECT 
			%Exp:cCposRf2%
		FROM 
			%Table:RF2% RF2
		WHERE 
			%Exp:cWhere% AND
			RF2.%NotDel%
		ORDER BY 
			%Order:RF2%
	EndSql
	
#ELSE
    
	cKeyRf2 := cFilSr6+cTnoSr6
	nOrdRf2 := RF2->(RetOrdem("RF2","RF2_FILIAL+RF2_TURNO+RF2_SEMANA"))
	cFilter := "RF2_FILIAL"+"RF2_TURNO"
	
	cQryRf2 := "RF2"
	
	(cQryRf2)->(dbSetOrder(nOrdRf2))
	(cQryRf2)->(dbSeek(cKeyRf2))
	
#ENDIF

While (cQryRf2)->( !Eof() )
	
	#IFNDEF TOP
		If ( (cQryRf2)->( cKeyRf2 == Eval(cFilter) ) )
			Loop
		EndIf
	#ENDIF
	
	nCpos++
	aAdd( aCpos, {} )
		
	For nCont := 1 To Len(aStrRf2)
		aAdd( aCpos[nCpos],  (cQryRf2)->(&(aStrRf2[nCont,01])) )		
		If ( (nCpos == 1) .and. (aStrRf2[nCont,01] == "RF2_SEMANA") )
			cSequencia := (cQryRf2)->(&(aStrRf2[nCont,01]))
		EndIf
	Next
	
	(cQryRf2)->(dbSkip())
		
EndDo

RestArea(aArea)

Return ( Nil )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁPONA420TmpGrv	Ё Autor Ё Igor Franzoi			Ё Data Ё23.10.2007Ё╠╠
╠╠цддддддддддеддддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Gravar Informacoes no RF2 - Temporario						  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё PONA420TmpGrv() 												  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ 																  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё 			 												  	  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function PONA420TmpGrv( aStrRf2, aCposRf2 )

Local nCont := 0
Local nCpos := 0

For nCont := 1 To Len(aCposRf2)
	IF RF2->( RecLock( "RF2" , .T. ) )
		For nCpos := 1 To Len(aStrRf2)
			RF2->(&(aStrRf2[nCpos,01])) := aCposRf2[nCont,nCpos]
		Next
		RF2->( MsUnlock() )
	EndIF
Next

Return( NIL )

/*/
зддддддддддбдддддддддддддбдддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤ao    ЁProssegue    ЁAutorЁMauricio MR     	  Ё Data Ё02/06/2005Ё
цддддддддддедддддддддддддадддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o Ё Chama Ponto de Entrada                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPONA420()                                                   Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/

Static Function Prossegue(nOpcX,cSemana,lLe,n,lValida,aCols,aHeader,aColsAll,aHeaderAll,nCountSeq,nVezChk )
Local lRet		:= .T.
Local aRetBlock

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Ponto de Entrada para Antes de Confirmar as Informacoes  da  Ё
Ё Tabela de Horario Padrao.                                    Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/

IF ( lPna08001Block ) 
   
		/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁValida e Transfere os Dados do aCols para o aColsAll         Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
 
 	IF ( ValType( aRetBlock := ExecBlock("PNA08001",.F.,.F.,{aClone(aColsAll), aClone(aHeaderAll), cSemana, nOpcx}) ) == "A" )
		aColsAll	:= If( ValType(aRetBlock[1]) == "A", aClone(aRetBlock[1]) , aColsAll	)
		lRet		:= If( ValType(aRetBlock[2]) == "L", aRetBlock[2] 			, lRet		)
	EndIF 

EndIF

Return ( lRet )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁRecGet	Ё Autor Ё Igor Franzoi			Ё Data Ё03/10/2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Remonta a get dados 										  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё 															  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ 															  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё 			 												  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function RecGet( cFilPes,;
						cTrnPes,;
						nOpc,;
						cCodHor,;
						cCodTpd,;
						aRecRF3,;
						aRecRF4,;
						aRecRF5,;
						aRecRF2,;
						aColsRF3,;
						aColsRF4,;
						aColsRF5,;
						aColsRF2,;
						aHeaderRF3,;
						aHeaderRF4,;
						aHeaderRF5,;
						aHeaderRF2,;
						lSeq,;
						nCountSeq,;
						aSeq )

Local lRet		 := .T.	 
Local nCont 	 := 0
Local nPosHor    := GdFieldPos( "RF2_HOR", aHeaderRF2 )
local nPosDia	 := GdFieldPos( "RF2_TIPOD", aHeaderRF2 )
Local aColsAux	 := {}
Local aNotFields := {}

For nCont := 1 To Len(aColsRF2)
	
	If ( nOpc == 2 )
		cCodHor := aColsRF2[ nCont, nPosHor ]
		cCodTpd := aColsRF2[ nCont, nPosDia ]
	Else
		aNotFields := { "RF2_SEMANA" }
	EndIf	

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta todos os aCols e aHeaders necessarios RF3/RF4/RF5	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	MntCols( cFilSR6,;
			 cTnoSR6,;
			 nOpc,;
			 If( !Empty(cCodHor), cCodHor, Space(03) ),;
			 If( !Empty(cCodTpd), cCodTpd, Space(03) ),;
			 @aRecRF3,;
			 @aRecRF4,;
			 @aRecRF5,;
			 @aRecRF2,;
			 @aColsRF3,;
			 @aColsRF4,;
			 @aColsRF5,;
			 @aColsRF2,;
			 @aHeaderRF3,;
			 @aHeaderRF4,;
			 @aHeaderRF5,;
			 @aHeaderRF2 )
			 
		 
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta o Cabecalho do ArrayMain (aHeaderAll)				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aHeaderAll := MntHdMain( aHeaderRF3,;
							 aHeaderRF4,;
							 aHeaderRF5,;
							 aHeaderRF2,;
							 aColsRF3,;
							 aColsRF4,;
							 aColsRF5,;
							 aColsRF2,;
							 @aColsAll,;
 							 nOpc,;
 							 nCont )
	aHeader := aClone( aHeaderAll )
 	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Consiste Informacoes Quando inclusao       				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( nOpc == 3 )	//Inclusao
		/*/
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		ЁQuando nao Existirem Informacoes Para o Turno o Unico ElementoЁ
		Ёdo aColsAll, Carregado pela GdMontaCols(), devera Ser DeletadoЁ
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
		IF ( Len( aRecRF2 ) == 0 )
			IF !Empty( aColsRF2 )
				GdFieldPut( "GDDELETED" , .T. , 01 , aHeaderAll , @aColsAll )
			EndIF
		Else
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Na inclusao aColsRec devera Permanecer Vazio				   Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			aRecRF2 := {}
		EndIF 
	EndIF	

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Salva conteudo de aColsAll para Comparacao antes da Gravacao Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAntColsAll	:= aClone( aColsAll )
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Verifica as Sequencias do Turno Corrente e carrega Tabela  VaЁ
	Ё zia														   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aCols := aClone( aColsAll )

	aSeq := PONA420BldCols(nOpc	 	 ,;	//01 ->	//Opcao do aRotina
						   @aCols	 ,;	//02 ->	//Array com os Detalhes para Alteracao
						   aHeader	 ,;	//03 ->	//Cabecalho do aCols para Alteracao
						   aColsAll	 ,;	//04 ->	//Array com Todos os Detalhes para o Turno
						   aHeaderAll,;	//05 ->	//Cabecalhjo do aColsAll
						   lSeq		 ,;	//06 ->	//Se carregara ou nao a Sequencia
						   .T.       ,;	//07 ->	//Se eh apenas para Contar as Sequencias
				   	   	   @nCountSeq,;	//08 ->	//Numero de Sequencias
				   	   	   aHeaderRF2,; //09 -> //Cabecalho para contar as sequencias
				   	   	   aColsRF2  ,; //10 -> //aCols com as sequencias no RF2
				)
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta o Cabecalho Real (aHeader ) e aCols 				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	RmtHdCols( @aHeaderAll, @aColsAll, aNotFields )
	
	If ( nOpc == 2 )
		If ( nCont != Len(aColsRF2) )
			fColVis( @aColsAux, @aColsAll )
			aColsAll   := {}
			aHeaderAll := {}
		Else
			fColVis( @aColsAux, @aColsAll )
		EndIf
	Else
		nCont := Len(aColsRF2)
	EndIf

Next

If ( nOpc == 2 )
	aColsAll := aClone(aColsAux)
	aCols 	 := aClone(aColsAll)
	aHeader  := aClone(aHeaderAll)
EndIf
		

Return ( lRet )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁMntCols	Ё Autor Ё Igor Franzoi			Ё Data Ё03/10/2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Monta todos os aCols										  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁMntCols( cFilPes,;									      Ё╠╠
╠╠Ё		     Ё		   cTrnPes,;									      Ё╠╠
╠╠Ё		     Ё		   nOpc,;									      	  Ё╠╠
╠╠Ё		     Ё		   cCodHro,;									      Ё╠╠
╠╠Ё		     Ё		   cCodTpd,;									      Ё╠╠
╠╠Ё		     Ё		   aRecRF3,;									      Ё╠╠
╠╠Ё		     Ё		   aRecRF4,;									      Ё╠╠
╠╠Ё		     Ё		   aRecRF5,;									      Ё╠╠
╠╠Ё		     Ё		   aRecRF2,;									      Ё╠╠
╠╠Ё		     Ё		   aColsRF3,;									      Ё╠╠
╠╠Ё		     Ё		   aColsRF4,;									      Ё╠╠
╠╠Ё		     Ё		   aColsRF5,;									      Ё╠╠
╠╠Ё		     Ё		   aColsRF2,;									      Ё╠╠
╠╠Ё		     Ё		   aHeaderRF3,;									      Ё╠╠
╠╠Ё		     Ё		   aHeaderRF4,;									      Ё╠╠
╠╠Ё		     Ё		   aHeaderRF5,;									      Ё╠╠
╠╠Ё		     Ё		   aHeaderRF2 )									      Ё╠╠
╠╠Ё 		 Ё 			 												  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ 															  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 ЁRecGet	 												  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function MntCols( cFilPes,;
						 cTrnPes,;
						 nOpc,;
						 cCodHro,;
						 cCodTpd,;
						 aRecRF3,;
						 aRecRF4,;
						 aRecRF5,;
						 aRecRF2,;
						 aColsRF3,;
						 aColsRF4,;
						 aColsRF5,;
						 aColsRF2,;
						 aHeaderRF3,;
						 aHeaderRF4,;
						 aHeaderRF5,;
						 aHeaderRF2 )

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Alias para montagem dos aCols								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Local cAliasRF3 := "RF3"
Local cAliasRF4	:= "RF4"
Local cAliasRF5 := "RF5"

Local nUsRF3	:= {}
Local nUsRF4	:= {}
Local nUsRF5	:= {}

Local aVirRF3	:= {}
Local aVirRF4	:= {}
Local aVirRF5	:= {}

Local aVisRF3	:= {}
Local aVisRF4	:= {}
Local aVisRF5	:= {}

Local cKeyRF3	:= ""
Local cKeyRF4	:= ""
Local cKeyRF5	:= ""

Local aQueryRF3 := {}
Local aQueryRF4 := {}
Local aQueryRF5 := {}

Local aRF3Keys := {}
Local aRF4Keys := {}
Local aRF5Keys := {}

#IFDEF TOP
	Local nAux	  := 0
#ENDIF
	
Local bCond	  := ""

Local lExecLock

DEFAULT cCodHro := Space(03) //Codigo de horario
DEFAULT cCodTpd := Space(03) //Codigo do tipo de dia
DEFAULT lExecLock := ( ( nOpc == 3 ) .or. ( nOpc == 4 ) .or. ( nOpc == 5 ) )

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Pesquisa os registros no RF2 para encontrar as chaves		   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
If Empty(cCodHro) .and. Empty(cCodTpd) .and. (nOpc != 3)
	If !Empty(cSemana)
		PesTrn( cFilPes, cTrnPes, cSemana, @cCodTpd, @cCodHro )
	Else
		cSemana := aColsRF2[ 1, GdFieldPos( "RF2_SEMANA", aHeaderRF2 ) ]
		PesTrn( cFilPes, cTrnPes, cSemana, @cCodTpd, @cCodHro )
	EndIf
EndIf

If Empty(cCodHro) .and. Empty(cCodTpd) .and. (nOpc != 3)
	Help(" ",1,"P080SP7NEX")
	Break
EndIf

If ( Empty(cCodHor), cCodHor := cCodHro, cCodHor )
If ( Empty(cCodDia), cCodDia := cCodTpd, cCodDia )

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Monta Query para a Selecao das Informacoes RF4/RF5       	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
#IFDEF TOP

	aQueryRF4		:= Array( 05 )
	aQueryRF4[01]	:= "RF4_FILIAL = '"+cFilPes+"'"
	aQueryRF4[02]	:= " AND "
	aQueryRF4[03]	:= "RF4_HOR = '"+cCodHro+"'"
	aQueryRF4[04]	:= " AND "
	aQueryRF4[05]	:= "D_E_L_E_T_=' ' "
	
	aQueryRF5		:= Array( 05 )
	aQueryRF5[01]	:= "RF5_FILIAL = '"+cFilPes+"'"
	aQueryRF5[02]	:= " AND "
	aQueryRF5[03]	:= "RF5_TIPO = '"+cCodTpd+"'"
	aQueryRF5[04]	:= " AND "
	aQueryRF5[05]	:= "D_E_L_E_T_=' ' "
		
#ELSE

	cKeyRF4 := AllTrim(cFilPes)+AllTrim(cCodHro)
	cKeyRF5 := AllTrim(cFilPes)+AllTrim(cCodTpd)
	cKeyRF2 := AllTrim(cFilPes)+AllTrim(cTrnPes)
	
#ENDIF


/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Monta aCols conforme RF5 (Tabela de Tipos de Dia)			   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
aColsRF5 := GdMontaCols(	aHeaderRF5	,;	//01 -> Array com os Campos do Cabecalho da GetDados
							nUsRF5		,;	//02 -> Numero de Campos em Uso
							@aVirRF5	,;	//03 -> [@]Array com os Campos Virtuais
							@aVisRF5	,;	//04 -> [@]Array com os Campos Visuais
							cAliasRF5	,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
							NIL			,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
							@aRecRF5	,;	//07 -> [@]Array unidimensional contendo os Recnos
							cAliasRF5	,;	//08 -> Alias do Arquivo Pai
							cKeyRF5		,;	//09 -> Chave para o Posicionamento no Alias Filho
							NIL			,;	//10 -> Bloco para condicao de Loop While
							NIL			,;	//11 -> Bloco para Skip no Loop While
							NIL			,;	//12 -> Se Havera o Elemento de Delecao no aCols 
							NIL			,;	//13 -> Se cria variaveis Publicas
							NIL			,;	//14 -> Se Sera considerado o Inicializador Padrao
							NIL			,;	//15 -> Lado para o inicializador padrao
							NIL			,;	//16 -> Opcional, Carregar Todos os Campos
							NIL			,;	//17 -> Opcional, Nao Carregar os Campos Virtuais
							aQueryRF5	,;	//18 -> Opcional, Utilizacao de Query para Selecao de Dados
							.F.			,;	//19 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
							.F.			,;	//20 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
							.F.			,;	//21 -> Carregar Coluna Fantasma
							NIL			,;	//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
							NIL			,;	//23 -> Verifica se Deve verificar se o campo eh usado
							NIL			,;	//24 -> Verifica se Deve verificar o nivel do usuario
							NIL			,;	//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols
							@aRF5Keys	,;	//26 -> [@]Array que contera as chaves conforme recnos
							.F.			,;	//27 -> [@]Se devera efetuar o Lock dos Registros
							.F.			; 	//28 -> [@]Se devera obter a Exclusividade nas chaves dos registros
		)
		
/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Monta aCols conforme RF4 (Tabela de Horarios)				   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
aColsRF4 := GdMontaCols(	aHeaderRF4	,;	//01 -> Array com os Campos do Cabecalho da GetDados
							nUsRF4		,;	//02 -> Numero de Campos em Uso
							@aVirRF4	,;	//03 -> [@]Array com os Campos Virtuais
							@aVisRF4	,;	//04 -> [@]Array com os Campos Visuais
							cAliasRF4	,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
							NIL			,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
							@aRecRF4	,;	//07 -> [@]Array unidimensional contendo os Recnos
							cAliasRF4	,;	//08 -> Alias do Arquivo Pai
							cKeyRF4		,;	//09 -> Chave para o Posicionamento no Alias Filho
							NIL			,;	//10 -> Bloco para condicao de Loop While
							NIL			,;	//11 -> Bloco para Skip no Loop While
							NIL			,;	//12 -> Se Havera o Elemento de Delecao no aCols 
							NIL			,;	//13 -> Se cria variaveis Publicas
							NIL			,;	//14 -> Se Sera considerado o Inicializador Padrao
							NIL			,;	//15 -> Lado para o inicializador padrao
							NIL			,;	//16 -> Opcional, Carregar Todos os Campos
							NIL			,;	//17 -> Opcional, Nao Carregar os Campos Virtuais
							aQueryRF4	,;	//18 -> Opcional, Utilizacao de Query para Selecao de Dados
							.F.			,;	//19 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
							.F.			,;	//20 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
							.F.			,;	//21 -> Carregar Coluna Fantasma
							NIL			,;	//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
							NIL			,;	//23 -> Verifica se Deve verificar se o campo eh usado
							NIL			,;	//24 -> Verifica se Deve verificar o nivel do usuario
							NIL			,;	//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols
							@aRF4Keys	,;	//26 -> [@]Array que contera as chaves conforme recnos
							.F.			,;	//27 -> [@]Se devera efetuar o Lock dos Registros
							.F.			 ;	//28 -> [@]Se devera obter a Exclusividade nas chaves dos registros
		)
  		
If ( Len(aColsRF4) < 7 ) .and. nOpc != 3
	Help(" ",1,"P080SP7NEX")
	Break
EndIf

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Monta Query para a Selecao das Informacoes RF3	       	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
#IFDEF TOP

	aQueryRF3		:= {}
	aAdd( aQueryRF3	, "RF3_FILIAL = '"+cFilPes+"'" )
	aAdd( aQueryRF3 , " AND " )
	aAdd( aQueryRF3 , " ( " )
	
	For nAux := 1 To Len(aColsRF4)
		aAdd( aQueryRF3, If( nAux > 1, "OR ", "" ) + "RF3_JORN = '" + aColsRF4[ nAux, GdFieldPos( "RF4_JORN", aHeaderRF4 ) ] + "' " ) 
	Next
	
	aAdd( aQueryRF3 , " ) " )
	aAdd( aQueryRF3, " AND " )
	aAdd( aQueryRF3, " D_E_L_E_T_=' ' " )
	
#ELSE

	bCond := "RF3_JORN >= " + aColsRF4[ 1, GdFieldPos( "RF4_JORN", aHeaderRF4 ) ]
	bCond += " .and. "
	bCond += "RF3_JORN <= " + aColsRF4[ Len(aColsRF4), GdFieldPos( "RF4_JORN", aHeaderRF4 ) ]
	aAdd( aQueryRF3, { RF3_JORN } )
	cKeyRF3 := cFilPes+aColsRF4[ 1, GdFieldPos( "RF4_JORN", aHeaderRF4 ) ]
	
#ENDIF

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Monta aCols conforme RF3 (Tabela de Horarios)				   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
aColsRF3 := GdMontaCols(	aHeaderRF3	,;	//01 -> Array com os Campos do Cabecalho da GetDados
							nUsRF3		,;	//02 -> Numero de Campos em Uso
							@aVirRF3	,;	//03 -> [@]Array com os Campos Virtuais
							@aVisRF3	,;	//04 -> [@]Array com os Campos Visuais
							cAliasRF3	,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
							NIL			,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
							@aRecRF3	,;	//07 -> [@]Array unidimensional contendo os Recnos
							cAliasRF3	,;	//08 -> Alias do Arquivo Pai
							cKeyRF3		,;	//09 -> Chave para o Posicionamento no Alias Filho
							bCond		,;	//10 -> Bloco para condicao de Loop While
							NIL			,;	//11 -> Bloco para Skip no Loop While
							NIL			,;	//12 -> Se Havera o Elemento de Delecao no aCols 
							NIL			,;	//13 -> Se cria variaveis Publicas
							NIL			,;	//14 -> Se Sera considerado o Inicializador Padrao
							NIL			,;	//15 -> Lado para o inicializador padrao
							NIL			,;	//16 -> Opcional, Carregar Todos os Campos
							NIL			,;	//17 -> Opcional, Nao Carregar os Campos Virtuais
							aQueryRF3	,;	//18 -> Opcional, Utilizacao de Query para Selecao de Dados
							.F.			,;	//19 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
							.F.			,;	//20 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
							.F.			,;	//21 -> Carregar Coluna Fantasma
							NIL			,;	//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
							NIL			,;	//23 -> Verifica se Deve verificar se o campo eh usado
							NIL			,;	//24 -> Verifica se Deve verificar o nivel do usuario
							NIL			,;	//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols
							@aRF3Keys	,;	//26 -> [@]Array que contera as chaves conforme recnos
							.F.			,;	//27 -> [@]Se devera efetuar o Lock dos Registros
							.T.			 ;	//28 -> [@]Se devera obter a Exclusividade nas chaves dos registros
		)
 	
Return ( Nil )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁMntHdMain	Ё Autor Ё Igor Franzoi			Ё Data Ё03/10/2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Monta o aHeaderAll										  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё MntHdMain( aHeaderRF3,;									  Ё╠╠
╠╠Ё			 Ё			  aHeaderRF4,;									  Ё╠╠
╠╠Ё			 Ё			  aHeaderRF5,;									  Ё╠╠
╠╠Ё			 Ё			  aHeaderRF2,;									  Ё╠╠
╠╠Ё			 Ё			  aColRF3	,;									  Ё╠╠
╠╠Ё			 Ё			  aColRF4	,;									  Ё╠╠
╠╠Ё			 Ё			  aColRF5	,;									  Ё╠╠
╠╠Ё			 Ё			  aColRF2	,;									  Ё╠╠
╠╠Ё			 Ё			  aColsMain	,;									  Ё╠╠
╠╠Ё			 Ё			  nOpc )										  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ aHeaderRF3 = Cabecalho da tabela RF3						  Ё╠╠
╠╠Ё 		 Ё aHeaderRF4 = Cabecalho da tabela RF4						  Ё╠╠
╠╠Ё 		 Ё aHeaderRF5 = Cabecalho da tabela RF5						  Ё╠╠
╠╠Ё 		 Ё aHeaderRF2 = Cabecalho da tabela RF2						  Ё╠╠
╠╠Ё 		 Ё aColRF3    = Informacos do RF3  							  Ё╠╠
╠╠Ё 		 Ё aColRF4    = Informacos do RF4  							  Ё╠╠
╠╠Ё 		 Ё aColRF5    = Informacos do RF5  							  Ё╠╠
╠╠Ё 		 Ё aColRF2    = Informacos do RF2  							  Ё╠╠
╠╠Ё 		 Ё aColRF2    = Informacos do RF2  							  Ё╠╠
╠╠Ё 		 Ё aColsMain  = Referencia para montagem do aCols da getdados Ё╠╠
╠╠Ё 		 Ё nOpc		  = Opcao selecionada na mbrowse				  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё RecGet	 												  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function MntHdMain( aHeaderRF3,;
						   aHeaderRF4,;
						   aHeaderRF5,;
						   aHeaderRF2,;
						   aColRF3,;
						   aColRF4,;
						   aColRF5,;
						   aColRF2,;
						   aColsMain,;
						   nOpc,;
						   nCont )

Local nX	 := 0
Local nCol	 := 0
Local nAux	 := 0

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Retorna o aHeader com o cabecalho da getdados				   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Local aHeaderMain := {}
Local aColsAux	  := {}

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁCarrega 7 elementos vazios no aColsAux para alocar os elemen-Ё
	|mentos de todos os aCols(RF2/RF3/RF4/RF5) para a aCols da get|
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/	
	For nAux := 1 To 7
		aAdd( aColsAux, {} )
	Next

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁInsere os elementos do RF2 no a HeaderMain e aColsMain		  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	MntColRF2( aHeaderRF2, aColRF2, @aHeaderMain, @aColsAux, nCont )
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁInsere os elementos do RF5 no a HeaderMain e aColsMain		  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	MntColRF5( aHeaderRF5, aColRF5, @aHeaderMain, @aColsAux )

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁInsere os elementos do RF4 no a HeaderMain e aColsMain		  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	MntColRF4( aHeaderRF4, aColRF4, @aHeaderMain, @aColsAux )

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁInsere os elementos do RF3 no a HeaderMain e aColsAux		  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	MntColRF3( aHeaderRF3, aColRF3, @aHeaderMain, @aColsAux )

	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁInsere o elemento Delete nas linhas utilizadas na getdados	  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/	
	For nCol := 1 To 7
		aAdd( aColsAux[nCol], .T. )
	Next
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁRemonta o aColsAux com o primeiro dia da semana sendo a 	  Ё
	ЁSegunda-Feira												  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	PONA420RmkCols( @aColsAux )
	
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁCarrega a Descricao do Tipo do Dia							  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	nDia := 0
	For nX := 1 To Len(aColsAux)
		IF ( ++nDia > 7 )
			nDia := 1
		EndIF
		GdFieldPut( "RF2_DIA" , aDias[ nDia , 01 ] , nX , aHeaderMain , @aColsAux )
	Next nX	
	
 	aColsMain := aClone( aColsAux )
	
Return ( aHeaderMain )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁMntColRF2	Ё Autor Ё Igor Franzoi			Ё Data Ё03/10/2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Monta o aCols e aHeader com os dados do RF2				  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё  MntColRF2( aHeaderRF2,;									  Ё╠╠
╠╠Ё			 Ё			   aColRF2,;						    		  Ё╠╠
╠╠Ё			 Ё			   aHeaderMain,;								  Ё╠╠
╠╠Ё			 Ё			   aColsMain )									  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ aHeaderRF2  = Cabecalho da tabela RF2					  Ё╠╠
╠╠Ё 		 Ё aColRF2     = Informacos do RF2  						  Ё╠╠
╠╠Ё 		 Ё aHeaderMain = Cabecalho principal						  Ё╠╠
╠╠Ё 		 Ё aColsMain   = Informacos do principal					  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё RecGet	 												  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function MntColRF2( aHeaderRF2, aColRF2, aHeaderMain, aColsMain, nCont )

Local nField 	:= 0
Local nCol	 	:= 0
Local aNot	    := {}

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Campos que nao Conterao na GetDados RF3  					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/	
	aAdd( aNot , "RF2_FILIAL"  )
	aAdd( aNot , "RF2_HOR"	  )
	aAdd( aNot , "RF2_TURNO"   )
	aAdd( aNot , "RF2_TIPOD"   )
	aAdd( aNot , "RF2_ALI_WT"  )
	aAdd( aNot , "RF2_REC_WT"  )

For nField := 1 To Len(aHeaderRF2)
	IF ( aScan( aNot , aHeaderRF2[ nField , 02 ] ) == 0 )
		aAdd( aHeaderMain , aClone( aHeaderRF2[ nField ] ) )
		If aHeaderRF2[ nField, 02 ] == "RF2_SEMANA"
			For nCol := 1 To 7
				aAdd( aColsMain[nCol], {} )
				If !Empty(cSemana)				
					aColsMain[ nCol , Len(aHeaderMain) ] := cSemana
				Else
					aColsMain[ nCol , Len(aHeaderMain) ] := aColRF2[ nCont, GdFieldPos( aHeaderRF2[ nField , 02 ], aHeaderRF2 ) ]
				EndIf
			Next
		Else
			For nCol := 1 To 7
				aAdd( aColsMain[nCol], {} )
				aColsMain[ nCol , Len(aHeaderMain) ] := aColRF2[ If(nCol !=1, Len(aColRF2), nCol), GdFieldPos( aHeaderRF2[ nField , 02 ], aHeaderRF2 ) ]
			Next
		EndIf
	EndIF
Next nField

Return ( Nil )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁMntColRF5	Ё Autor Ё Igor Franzoi			Ё Data Ё03/10/2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Monta o aCols e aHeader com os dados do RF5				  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё  MntColRF5( aHeaderRF5,;									  Ё╠╠
╠╠Ё			 Ё			   aColRF5,;						    		  Ё╠╠
╠╠Ё			 Ё			   aHeaderMain,;								  Ё╠╠
╠╠Ё			 Ё			   aColsMain )									  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ aHeaderRF5  = Cabecalho da tabela RF5					  Ё╠╠
╠╠Ё 		 Ё aColRF5     = Informacos do RF5  						  Ё╠╠
╠╠Ё 		 Ё aHeaderMain = Cabecalho principal						  Ё╠╠
╠╠Ё 		 Ё aColsMain   = Informacos do principal					  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё RecGet	 												  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function MntColRF5( aHeaderRF5, aColRF5, aHeaderMain, aColsMain )

Local nField := 0
Local nAux	 := 0
Local nCol	 := 0
Local aNot	 := {}

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Organiza os elementos do RF5 pelo dia da semana iniciando no Ё
	Ё domingo para insercao no aHeaderMain/aColsMain			   |
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aColRF5 := aSort( aColRF5, , , { |x,y| x[GdFieldPos( "RF5_DIA", aHeaderRF5 )] < y[GdFieldPos( "RF5_DIA", aHeaderRF5 )] } )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Campos que nao Conterao na GetDados RF5  					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdd( aNot , "RF5_FILIAL"  )
	aAdd( aNot , "RF5_TIPO"	   )
	aAdd( aNot , "RF5_DIA"	   )
	aAdd( aNot , "RF5_FLAG"	   )
	aAdd( aNot , "RF5_ALI_WT"  )
	aAdd( aNot , "RF5_REC_WT"  )
	
For nField := 1 To Len(aHeaderRF5)
	IF ( aScan( aNot , aHeaderRF5[ nField , 02 ] ) == 0 )
		aAdd( aHeaderMain , aClone( aHeaderRF5[ nField ] ) )
		For nCol := 1 To 7
			aAdd( aColsMain[nCol], {} )
			aColsMain[ nCol , Len(aHeaderMain) ] := aColRF5[ If(Len(aColRF5) !=1, nCol, Len(aColRF5)), GdFieldPos( aHeaderRF5[ nField , 02 ], aHeaderRF5 ) ]
		Next
	EndIF
Next nField	

//-- Adiciona o elemento ( Codigo da Jornada )
aAdd( aHeaderMain , {;
					STR0396,;	// 'JORNADA'
					"RF3_JORN",;
					"",;
					3,;
					0,;
					".F.",;
					CHR(251),;
					"C",;
					"RF3",;
					"V",,,,,,;					
				};
)

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Insere elemento vazio no Array(aCols) principal para a 	   Ё
	| jornada. Cria um elemento nulo.							   |
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	For nCol := 1 To 7
		aAdd( aColsMain[nCol], {} )	
	Next

Return ( Nil )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁMntColRF4	Ё Autor Ё Igor Franzoi			Ё Data Ё03/10/2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Monta o aCols e aHeader com os dados do RF4				  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё  MntColRF4( aHeaderRF4,;									  Ё╠╠
╠╠Ё			 Ё			   aColRF4,;						    		  Ё╠╠
╠╠Ё			 Ё			   aHeaderMain,;								  Ё╠╠
╠╠Ё			 Ё			   aColsMain )									  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ aHeaderRF4  = Cabecalho da tabela RF4					  Ё╠╠
╠╠Ё 		 Ё aColRF4     = Informacos do RF4  						  Ё╠╠
╠╠Ё 		 Ё aHeaderMain = Cabecalho principal						  Ё╠╠
╠╠Ё 		 Ё aColsMain   = Informacos do principal					  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё RecGet	 												  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function	MntColRF4( aHeaderRF4, aColRF4, aHeaderMain, aColsAux )

Local nField := 0
Local nAux 	 := 0
Local aNot	 := {}

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Organiza os elementos do RF4 pelo dia da semana iniciando no Ё
	Ё domingo para insercao no aHeaderMain/aColsMain			   |
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aColRF4 := aSort( aColRF4, , , { |x,y| x[GdFieldPos( "RF4_DIA", aHeaderRF4 )] < y[GdFieldPos( "RF4_DIA", aHeaderRF4 )] } )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Campos que nao Conterao na GetDados RF4  					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdd( aNot , "RF4_FILIAL"  )
	aAdd( aNot , "RF4_HOR"	   )
	aAdd( aNot , "RF4_DIA"	   )
	aAdd( aNot , "RF4_FLAG"    )
	aAdd( aNot , "RF4_ALI_WT"  )
	aAdd( aNot , "RF4_REC_WT"  )

For nField := 1 To Len(aHeaderRF4)
	If ( aScan( aNot , aHeaderRF4[ nField , 02 ] ) == 0 )
		For nAux := 1 To Len(aColRF4)
			If aHeaderRF4[ nField, 02 ] == "RF4_JORN"
				aColsAux[ nAux , GdFieldPos( "RF3_JORN", aHeaderMain ) ] := aColRF4[ nAux, GdFieldPos( aHeaderRF4[ nField , 02 ], aHeaderRF4 ) ]
			Else
				If( Empty(GdFieldPos( aHeaderRF4[ nField, 02 ], aHeaderMain )), aAdd( aHeaderMain , aClone( aHeaderRF4[ nField ] ) ), "" )
				aAdd( aColsAux, {} )
				aColsAux[ nAux , GdFieldPos( aHeaderRF4[ nField, 02 ], aHeaderMain ) ] := aColRF4[ nAux, GdFieldPos( aHeaderRF4[ nField , 02 ], aHeaderRF4 ) ] 
			EndIf
		Next
	EndIf
Next

Return ( Nil )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁMntColRF3	Ё Autor Ё Igor Franzoi			Ё Data Ё03/10/2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Monta o aCols e aHeader com os dados do RF3				  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё  MntColRF3( aHeaderRF3,;									  Ё╠╠
╠╠Ё			 Ё			   aColRF3,;						    		  Ё╠╠
╠╠Ё			 Ё			   aHeaderMain,;								  Ё╠╠
╠╠Ё			 Ё			   aColsMain )									  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ aHeaderRF3  = Cabecalho da tabela RF3					  Ё╠╠
╠╠Ё 		 Ё aColRF3     = Informacos do RF3  						  Ё╠╠
╠╠Ё 		 Ё aHeaderMain = Cabecalho principal						  Ё╠╠
╠╠Ё 		 Ё aColsMain   = Informacos do principal					  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё RecGet	 												  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function MntColRF3( aHeaderRF3, aColRF3, aHeaderMain, aColsAux )

Local nCol	 := 0
Local nAux   := 0
Local nField := 0

Local aNot 	 := {}

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Campos que nao Conterao na GetDados RF3  					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdd( aNot , "RF3_FILIAL"  )
	aAdd( aNot , "RF3_JORN"    )
	aAdd( aNot , "RF3_DESC"    )
	aAdd( aNot , "RF3_FLAG"    )
	aAdd( aNot , "RF3_ALI_WT"  )
	aAdd( aNot , "RF3_REC_WT"  )

For nField := 1 To Len(aHeaderRF3)
	IF ( aScan( aNot , aHeaderRF3[ nField , 02 ] ) == 0 )
		aAdd( aHeaderMain , aClone( aHeaderRF3[ nField ] ) )
		For nCol := 1 To 7
			cPesJor := If ( ValType(aColsAux[ nCol, GdFieldPos( "RF3_JORN", aHeaderMain ) ]) == "A", aColRF3[ Len(aColRF3), GdFieldPos( "RF3_JORN", aHeaderRF3 ) ], aColsAux[ nCol, GdFieldPos( "RF3_JORN", aHeaderMain ) ] )
			For nAux := 1 To Len(aColRF3)
				If cPesJor == aColRF3[ nAux, GdFieldPos( "RF3_JORN", aHeaderRF3 ) ]
					aAdd( aColsAux[nCol], {} )
					aColsAux[ nCol , GdFieldPos( aHeaderRF3[ nField, 02 ], aHeaderMain ) ] := aColRF3[ nAux, GdFieldPos( aHeaderRF3[ nField , 02 ], aHeaderRF3 ) ]
				EndIf
			Next
		Next
	EndIF
Next nField

Return ( Nil )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁPesTrn	Ё Autor Ё Igor Franzoi			Ё Data Ё05/10/2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Pesquisa no RF2 o turno selecionado						  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё PesTrn( cFil, cTrn, cSem, cTipD, cHor )					  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ cFil  = Filial											  Ё╠╠
╠╠Ё			 Ё cTrn  = Turno a ser pesquisado							  Ё╠╠
╠╠Ё			 Ё cSem  = Sequencia 										  Ё╠╠
╠╠Ё			 Ё cTipD = Codigo do Tipo de Dia							  Ё╠╠
╠╠Ё			 Ё cHor  = Codigo do Horario								  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё MntCols	 												  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function PesTrn( cFil, cTrn, cSem, cTipD, cHor )

Local nCont := 0
Local aArea := GetArea()
Local cKey	:= cFil + cTrn + cSem

Local aCampos 	   := {"RF2_TIPOD","RF2_HOR"}
Local cQueryRF2    := ""
Local cCampos 	   := ""
Local cAliasQryRF2 := "QRYRF2_"

Local cAlias := "RF2"

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Monta Query para a Selecao das Informacoes 				   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
#IFDEF TOP

	For nCont := 1 To Len(aCampos)
		cCampos += 	cAlias+"."+aCampos[nCont] +If(Len(aCampos)==nCont, "",", ")
	Next nCont
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Conforme o filial/turno/semana selecionados carrega os tipos Ё
	Ё de dia e codigo de horario direto do RF2					   Ё	
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/

	cQueryRF2 := " SELECT "
	cQueryRF2 += cCampos
	cQueryRF2 += " FROM "
	cQueryRF2 += InitSqlName(cAlias) + " RF2 "
	cQueryRF2 += " WHERE "
	cQueryRF2 += "RF2.RF2_FILIAL = '" +cFil+ "' "
	cQueryRF2 += " AND RF2.RF2_TURNO = '"+cTrn+"' "
	cQueryRF2 += " AND RF2.RF2_SEMANA = '"+cSem+"' "
	cQueryRF2 := ChangeQuery( cQueryRF2 )
			
	MsOpenDbf(.T.,"TOPCONN",TcGenQry(NIL,NIL,cQueryRF2),cAliasQryRF2,.T.,.F.,.F.,.F.)
	
	If ( ( cAliasQryRF2 )->( !Eof() ) )
		cTipD := ( cAliasQryRF2 )->&(aCampos[1])
		cHor  := ( cAliasQryRF2 )->&(aCampos[2])
	EndIf
	
	( cAliasQryRF2 )->( dbCloseArea() )

#ELSE
	
	Local nOrdRf2 := RetOrdem( "RF2", "RF2_FILIAL+RF2_TURNO+RF2_SEMANA" )

	(cAlias)->(dbSetOrder(nOrdRf2))
	(cAlias)->( dbSeek( cKey, .F. ) )
	
	cTpD := (cAlias)->&( aCampos[1] )
	cHor := (cAlias)->&( aCampos[2] )
	
#ENDIF

RestArea( aArea )

Return ( Nil )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁChgCod	Ё Autor Ё Igor Franzoi			Ё Data Ё23/10/2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Troca os codigos de Horario ou Tipo de Dia 				  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё ChgCod( cAlias )											  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ cAlias = Alias da Tabela		 							  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё PONA420Win												  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function ChgCod( cAlias )

Local lRet := .F.

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁRecarrega a variavel codigo de horario ou codigo de tipo de  Ё
Ёdia conforme ocorre a selecao								  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Do Case
	Case cAlias == "RF8"
		If( Empty(cCodHor), cCodHor := Space(03), cCodHor )
		If (cAlias)->(dbSeek(cFilSR6+cCodHor))
			lRet := .T.
			cCodHor := (cAlias)->(RF8_HOR)
		Else
			cCodHor := Space(03)
			PutFileInEof( cAlias )
		EndIf
	Case cAlias == "RF9"
		If( Empty(cCodDia), cCodDia := Space(03), cCodDia )
		If (cAlias)->(dbSeek(cFilSR6+cCodDia))
			lRet := .T.
			cCodDia := (cAlias)->(RF9_TIPO)
		Else
			cCodDia := Space(03)
			PutFileInEof( cAlias )
		EndIf
EndCase

Return ( lRet )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁChgBySeq	Ё Autor Ё Igor Franzoi			Ё Data Ё23.10.2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Troca as chaves de horario e tipo de dia conforme a troca  Ё╠╠
╠╠Ё			 Ё de sequencias ocorrem (COMBOBOX Seq.)					  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё ChgBySeq( cCodH, cCodD, aHeaderRF2, aColsRF2 )			  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ cCodH 	  = Codigo de Horario							  Ё╠╠
╠╠Ё 		 Ё cCodD 	  = Codigo do Tipo de Dia						  Ё╠╠
╠╠Ё 		 Ё aHeaderRF2 = aHeader da Tabela RF2						  Ё╠╠
╠╠Ё 		 Ё aColsRF2   =	aCols da Tabela RF2							  Ё╠╠
╠╠Ё 		 Ё 															  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё PONA420Win												  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function ChgBySeq( cCodH, cCodD, aHeaderRF2, aColsRF2 )

Local nCont
Local nPosSem := GdFieldPos( "RF2_SEMANA", aHeaderRF2 )
Local nPosDia := GdFieldPos( "RF2_TIPOD" , aHeaderRF2 )
Local nPosHor := GdFieldPos( "RF2_HOR"   , aHeaderRF2 )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁCarrega o codigo de horario e o tipo de dia conforme a Seq.  Ё
Ёselecionada												  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/	
For nCont := 1 To Len(aColsRF2)
	If aColsRF2[ nCont, nPosSem ] == cSemana
		cCodH := aColsRF2[ nCont, nPosHor ]
		cCodD := aColsRF2[ nCont, nPosDia ]
	EndIf	
Next

Return ( Nil )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁRmtHdCols Ё Autor Ё Igor Franzoi			Ё Data Ё25.10.2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Reconstroi aHeader e aCols que И mostrado na getdados      Ё╠╠
╠╠Ё			 Ё sem o campo RF2_SEMANA									  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё 															  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ 								 						      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё Generico 												  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function RmtHdCols( aHeaderAll, aColsAll, aNotFields )

Local nField := 0
Local nCont  := 0

	aHeader := {}
	For nField := 1 To Len(aHeaderAll)
		IF ( aScan( aNotFields , aHeaderAll[ nField , 02 ] ) == 0 )
			aAdd( aHeader , aClone( aHeaderAll[ nField ] ) )
		EndIF
	Next nField

	aCols := {}	                                        
	For nCont := 1 To 7
		aAdd( aCols, {} )
		For nField := 1 To Len(aHeaderAll)
			If aHeaderAll[ nField, 02 ] != "RF2_SEMANA"				
				aAdd( aCols[nCont], aColsAll[nCont,nField] )
			EndIf
		Next
	Next
	
	For nField := 1 To Len(aHeader)
		aHeader[ nField, __AHEADER_CONTEXT__ ] := "V"
		aAdd( aNAltera, aHeader[ nField, __AHEADER_FIELD__ ] )
	Next

Return ( Nil )

/*
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    Ё fColVis		ЁAutorЁ Igor Franzoi	  Ё Data Ё11/04/2008Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁMonta o aCols para visualizacao								Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё< Vide Parametros Formais >									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁPONA420                                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Retorno  Ё															Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Static Function fColVis( aColsTot, aColsNew )

Local nCont := 0

For nCont := 1 To Len(aColsNew)
	aAdd( aColsTot, aClone(aColsNew[nCont]) )		
Next

Return ( NIL )

/*
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    Ё MenuDef		ЁAutorЁ  				  Ё Data Ё			Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁIsola opcoes de menu para que as opcoes da rotina possam    Ё
Ё          Ёser lidas pelas bibliotecas Framework da Versao 9.12 .      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё< Vide Parametros Formais >									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁPONA420                                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Retorno  ЁaRotina														Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Static Function MenuDef()

Local aRotina :=       { { STR0011 ,"PesqBrw"  			 , 0 , 1,,.F.},;  // "Pesquisar"
	                     { STR0012 ,"PONA420Vis"		 , 0 , 2},;  // "Visualizar"
	                     { STR0014 ,"PONA420Inc"		 , 0 , 3},;  // "Incluir"
	                     { STR0016 ,"PONA420Alt"		 , 0 , 4},;  // "Alterar"
	                     { STR0018 ,"PONA420Exc"		 , 0 , 5},;  // "Excluir"
						 { STR0059 ,"PutHrsTab(cCalc)" 	 , 0 , 6}}   // "Calcular Horas"
Return aRotina