#INCLUDE "PONA1040.CH"
#INCLUDE "PROTHEUS.CH" 
#INCLUDE "PONCALEN.CH"



Static lPonaPo3Block
Static __lChkTnoOpc	
Static lPnaCel := ExistBlock( "PNA040CEL" )
Static lPnaGrv := ExistBlock( "PNA040GRV" )
Static lPnaAcl := ExistBlock( "PNA040ACL" )
      

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ PONA040  ³ Autor ³ Equipe Advanced RH    ³ Data ³22/03/1996³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Manuten‡„o no Arquivo de Marca‡”es                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAPON                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Marinaldo   ³29/01/02³Melhor³Ao consultar o Calendario fazer com que  o³±±
±±³            ³        ³      ³foco seja dado na Data/Ordem  Corresponden³±±
±±³            ³        ³      ³te a Consulta							  ³±±
±±³Marinaldo   ³29/01/02³Melhor³Utilizacao de SetaPilha() antes e   depois³±±
±±³            ³        ³      ³de Montar o Dialog Box para   padronizacao³±±
±±³            ³        ³      ³de Codigo								  ³±±
±±³Marinaldo   ³30/01/02³Melhor³Inclusao de Freeze na Visualizacao do   Ca³±±
±±³            ³        ³      ³lendario 								  ³±±
±±³Marinaldo   ³30/01/02³Acerto³Verificacao do Retorno de Todas as  Teclas³±±
±±³            ³        ³      ³de Atalho quando vai de um Dialogo para ou³±±
±±³            ³        ³      ³tro salvando e restaurando os estados   de³±±
±±³            ³        ³      ³SetKey()								  ³±±
±±³Marinaldo   ³30/01/02³Melhor³Redefinicao dos Parametros de fMostraApo()³±±
±±³Marinaldo   ³31/01/02³Acerto³Alterada fMoveCols() de forma a nao  gerar³±±
±±³            ³        ³      ³erro quando o MV_COLMARC for maior que 4  ³±±
±±³Marinaldo   ³31/01/02³Melhor³Nao Validar as Linhas da GetDados   quando³±±
±±³            ³        ³      ³Exclusao de Todas as Marcacoes			  ³±±
±±³Marinaldo   ³04/02/02³Melhor³Utilizacao de PutMarcAuto() para a Geracao³±±
±±³            ³        ³      ³de Marcacoes Automaticas  compatibilizando³±±
±±³            ³        ³      ³o Programa com a Rotina de Leitura e  Apon³±±
±±³            ³        ³      ³tamento de Marcacoes					  ³±±
±±³Marinaldo   ³05/02/02³Melhor³Inclusao do Parametro MV_MCAUTMM que servi³±±
±±³            ³        ³      ³ra para Definir se nas Manutencoes de  Mar³±±
±±³            ³        ³      ³cacoes ou Manutencao de Marcacoes por  Cen³±±
±±³            ³        ³      ³tro de Custo deverao ser geradas Marcacoes³±±
±±³            ³        ³      ³Automaticas								  ³±±
±±³Marinaldo   ³19/02/02³Melhor³Utilizacao de MsgRun() para Avisar ao usua³±±
±±³            ³        ³      ³rio que o sistema esta carregando os  apon³±±
±±³            ³        ³      ³tamentos para evitar a sencacao de inativi³±±
±±³            ³        ³      ³vidade do sistema						  ³±±
±±³Marinaldo   ³20/02/02³Melhor³Inclusao do arquivo de Cabecalho "PONCALEN³±±
±±³            ³        ³      ³.CH" que sera utilizado para definir a  es³±±
±±³            ³        ³      ³trutura do calendario de marcacoes		  ³±±
±±³Marinaldo   ³25/02/02³Melhor³Retirada das variaveis cExtNot e  cAponFer³±±
±±³            ³--------³------³que passarao a serem inicializadas no Ponx³±±
±±³            ³--------³------³Apo() como Statics						  ³±±
±±³Marinaldo   ³07/03/02³Melhor³Incluir a Data da Efetiva Marcacao no   Ar³±±
±±³            ³--------³------³ray aCols1 para que a Data da Marcacao  se³±±
±±³            ³--------³------³ja a Data efetiva da Marcacao e nao a Data³±±
±±³            ³--------³------³calculada pelo sistema					  ³±±
±±³Marinaldo   ³07/03/02³Melhor³Definicao de Teclas de Atalho para   todos³±±
±±³            ³--------³------³os Botoes utilizados para o Apontamento	  ³±±
±±³Marinaldo   ³07/03/02³Melhor³Inclusao das Funcoes GetKeys() e RestKeys(³±±
±±³            ³--------³------³) que irao salvar e restaurar os   estados³±±
±±³            ³--------³------³das teclas de atalho					  ³±±
±±³Marinaldo   ³28/03/02³Acerto³Nao permitir que os minutos aleatorios  se³±±
±±³            ³        ³      ³jam definidos como Negativos     		  ³±±
±±³Marinaldo   ³03/04/02³Melhor³Limitar a Data de Geracao de Marcacoes  Au³±±
±±³            ³        ³      ³tomaticas, para funcionarios demitidos,  a³±±
±±³            ³        ³      ³data Base do Sistema quando esta for menor³±±
±±³            ³        ³      ³que a Data de Demissao 					  ³±±
±±³Marinaldo   ³04/04/02³Melhor³Inclusao de Opcao para apenas   Visualizar³±±
±±³            ³        ³      ³as Marcacoes							  ³±±
±±³Marinaldo   ³10/04/02³Melhor³Possibilitar a visualizacao dos  Apontamen³±±
±±³            ³        ³      ³tos tambem na Opcao de Visualizacao de Acu³±±
±±³            ³        ³      ³mulados									  ³±±
±±³Marinaldo   ³11/04/02³Melhor³Substituicao da Variavel cFilMat pelas  va³±±
±±³            ³        ³      ³riaveis cFil e cMat.					  ³±±
±±³            ³        ³      ³Passagem das Novas variaveis cFil e   cMat³±±
±±³            ³        ³      ³para Aponta() e GravaSPC()				  ³±±
±±³Marinaldo   ³03/05/02³Melhor³Verificar a Existencia dos Pontos de Entra³±±
±±³            ³        ³      ³da no Inicio do Programa.                 ³±±
±±³Marinaldo   ³06/05/02³Acerto³Qdo. MV_MCAUTMM estava com "S" ocorria  ge³±±
±±³            ³        ³      ³racao de Marcacoes para Dia em que   havia³±±
±±³            ³        ³      ³sido Apontado Falta sistema Apos o  Aponta³±±
±±³            ³        ³      ³mento mantinha as Faltas idevidamente	  ³±±
±±³Marinaldo   ³06/05/02³Acerto³Quando Data de Admissao for Maior que peri³±±
±±³            ³        ³      ³odo de Apontamento ao Consultar o  Calenda³±±
±±³            ³        ³      ³rio do Funcionario e este nao tiver  dados³±±
±±³            ³        ³      ³a serem mostrados emitir Help ao Usuario  ³±±
±±³Marinaldo   ³17/07/02³Melhor³Inclusao de Novo Botao para Editar as info³±±
±±³            ³        ³      ³rmacoes da Celula de Horas e Melhoria   na³±±
±±³            ³        ³      ³validacao das Horas para gravar a Data  da³±±
±±³            ³        ³      ³marcacao informada ou alterada            ³±± 
±±³Mauricio MR ³09/08/02³Melhor³Inclusao da funcao inicializadora de Data ³±±
±±³            ³        ³      ³da marcacao Pn040Data().                  ³±±
±±³Marinaldo   ³12/08/02³Melhor³Quando acumulado permitir a selecao do  pe³±±
±±³            ³        ³      ³riodo para Consulta/Alteracao/Exclusao  in³±±
±±³            ³        ³      ³dependente da Data Base					  ³±±
±±³Mauricio MR ³08/09/02³Acerto³Retirado o Prefixo "_"  da funcao:        ³±±
±±³            ³        ³      ³Pn040Data().                              ³±±
±±³MauricioMR  ³07/11/02|Melhor³Alteracao da Funcao F_ALT_H para receber  ³±±
±±³            ³        ³      ³o posicionamento do cursor numa data do   ³±±
±±³            ³        ³      ³calendario especifica (uso no Pona300).   ³±± 
±±³MauricioMR  ³13/11/02|Acerto³Alteracao da montagem do acols para somen-³±±
±±³            ³        ³      ³te carregar datas conforme as ordens do   ³±±
±±³            ³        ³      ³calendario. Quando havia varias jornadas  ³±±
±±³            ³        ³      ³continuas, nao estava criando linhas com  ³±±
±±³            ³        ³      ³todas as colunas, pois a verificacao da   ³±±
±±³            ³        ³      ³existencia de uma ordem, no calendario,era³±±
±±³            ³        ³      ³realizada posteriormente a montagem parci-³±±
±±³            ³        ³      ³al da linha.                              ³±±
±±³MauricioMR  ³28/01/03|062112³Geracao da Data da Marcacao,quando aleato-³±±
±±³            ³        ³      ³ria,verificando se a mesma  corresponde   ³±±
±±³            ³        ³      ³a uma marcacao realizada no dia seguinte. ³±±
±±³Marinaldo   ³30/04/03|064084³Utilizar a Picture do SX3 para mostrar  os³±±
±±³            ³        ³      ³resultados do Apontamento e Utilizar     a³±±
±±³            ³        ³      ³MsNewGetDados() para possibilitar que   os³±±
±±³            ³        ³      ³valores sejam alinhados aa Direita na tota³±±
±±³            ³        ³      ³lizacao das Horas Apontadas               ³±±
±±³Marinaldo   ³27/05/03³Melhor³Passagem de novo parametro para a   funcao³±±
±±³            ³        ³      ³F_ALT_H. Esse novo parametro ira  identifi³±±
±±³            ³        ³      ³car se o calendario utilizado nas   consul³±±
±±³            ³        ³      ³tas sera montado por funcionario  ou   nao³±±
±±³            ³        ³      ³( generico para um determinado turno )    ³±±
±±³Mauricio MR ³29/10/03³Acerto³Verifica a inclusao e delecao de marcacoes³±±
±±³            ³        ³      ³quando o ultimo dia do periodo estiver    ³±±
±±³            ³        ³      ³preenchido c/ todas as marcacoes possiveis³±± 
±±³Luiz Gustavo³21/11/06³Melhor³Inclusao da funcao MenuDef() para versao  ³±±
±±³			   ³--------³------³ 9.12                      				  ³±±
±±³Pedro Eloy  ³19/01/07³109624³Ajuste na rotina para receber o WalkThru  ³±±
±±³Mauricio MR ³30/03/07³Melhor³Ajuste na implementacao do Menu Funcional.³±±
±±³Leandro DR  ³24/10/07³Melhor³Inclusao dos campos processo, posto, perio|±±
±±³            ³        ³      ³do, num. pagto e roteiro. Separacao do pro³±±
±±³            ³        |      ³cessamento da montagem de tela, processo  ³±±
±±³            ³        |      ³agrupado na funcao pon040montagetdados()  ³±±
±±³Leandro DR  ³15/02/08³Melhor³Alteracao para que ordenacao seja feita   |±±
±±³            ³        ³      ³pelo campo DATAAPO e nao ORDEM.			  ³±±
±±³Erika K.    ³02/06/08³------³Alteracao do CH para compatibilizar dicio |±±
±±³            ³        ³      ³narios R 1.2 e Mexico.          		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³FNC/CH³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Alceu P.    ³10/06/10³12228/³Ajuste para abrir a tela mesmo que nao    ³±±
±±³			   ³		³  2010³tenha registros                           ³±±
±±³			   ³--------³------³11.5                      	              ³±±
±±³Emerson Camp³29/12/10³29591/³Ajuste para nova interface 11.            ³±±
±±³			   ³--------³  2010³Com a aplicação do parametro              ³±±
±±³            ³--------³      ³MV_ECMFTPP que afirma ser a               ³±±
±±³            ³--------³      ³versão 11.5 do Protheus                   ³±±
±±³Glaucia C.  ³16/06/11³14420/³Readequacao das telas para                ³±± 
±±³Messina     ³        ³  2011³diversas resolucoes. SDRCGE               ³±±   
±±³Christiane V³27/06/11³15388/³Alteração p/ Static das funções           ³±± 
±±³            ³        ³  2011³P8DataApoInit e PGDataApoInit()           ³±± 
±±³Leandro Dr. ³18/11/11³TDYLS6³Funcoes P8DataApoInit e                   ³±± 
±±³            ³        ³      ³PGDataApoInit movidas para o              ³±± 
±±³            ³        ³      ³PONA230 para compatibilizar com           ³±± 
±±³            ³        ³      ³fase normal e evitar erros de             ³±± 
±±³            ³        ³      ³compilacao. Inicializador padrao          ³±± 
±±³            ³        ³      ³NAO PODE SER STATIC.                      ³±± 
±±³Leandro Dr. ³07/12/11³TEDOPF³Criacao de ponto de entrada               |±±
±±³            ³        ³      ³PNA040ACL     				              |±±
±±³M. Silveira ³08/04/13³TGWWNE³Ajuste na PreparaCla() para gravar quando |±±
±±³			   ³		³      ³for efetuado o reprocessamento.           ³±± 
±±³A.Shibao    ³23/12/13³THWPKA³Funcao fValHrs100 para validar existencias³±±
±±³			   ³		³      ³dos eventos(SP9) e parametros MV_POHEFIN  ³±±
±±³            ³        ³      ³MV_POHE50 , MV_POHE100, MV_POHEFNO no calc³±±
±±³            ³        ³      ³das Hrs Extras no Sabado apos as 13 - Arg ³±±
±±³Renan Borges³04/06/15³TSLDLG³Ajuste para não grava registros duplicados³±±
±±³			   ³		³      ³ ao realizar na inclusão de registros na  ³±±
±±³            ³        ³      ³rotina de Lançamentos Integrados          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/

Function PONA040()

PRIVATE aRotina := MenuDef()
NewPONA040( "PONA040" )

Return (Nil)                  

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ NewPona040()	³Autor³                   ³ Data ³30/03/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³ Programa principal separado para tratamento da funcao      ³
³          ³ MenuDef().                                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA040, PONA180                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

Function NewPONA040( cChamada )

Local aArea			:= GetArea()
Local aAreaAux		:= {}
Local aIndexSRA		:= {}
Local cFiltraSRA	:= ""

Private aDatas		:= {}
Private bFiltraBrw	:= {|| NIL }
Private cCadastro   := OemToAnsi( STR0005 ) // 'Manuten‡„o das Marca‡”es'
Private cProg		:= IF( cChamada == NIL , FunName() , cChamada )
Private cCond		:= ''
Private dPerIni     := Ctod("//")
Private dPerFim     := Ctod("//")
Private dDataIni	:= CtoD("//")
Private dDataFim	:= CtoD("//")
Private lPona180	:= fContemStr( cProg , "PONA180" , .T. )
Private lPeriodo    := .T.
Private nColPro     := 0
Private oPeriodo	:= RHPERIODO():New()

IF !( lPona180 )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa Variaveis Private para o Apontamento             ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	Private cApoCla := SuperGetMV( "MV_APOCLA" , NIL , "S" , cFilAnt )
	aAreaAux := SP8->( GetArea() )
	cCond := '1' //Pesquisa de Periodos Abertos na GPRCHFiltro
Else
	aAreaAux := SPG->( GetArea() )
	cCond := '2' //Pesquisa de Periodos Fechados na GPRCHFiltro
Endif

DEFAULT lPonapo3Block 	:= ExistBlock( "PONAPO3" )
DEFAULT __lChkTnoOpc	:= IF( ( ( SR6->(FIELDPOS( "R6_TNOOPC" )) != 0 ) .and. ( SuperGetMv("MV_TNOOPC",NIL,"N") == "S" ) ) ,.T. , .F. )   // ATENCAO ALTERAR ESSA LINHA ANTES de SUBIR

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Valida criacao dos parametros e eventos para Argentina RHUPDMOD - 35³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
If cPaisLoc == "ARG" .And. FindFunction( "fValHrs100" ) .And. !fValHrs100()
	Return( NIL )
EndIf



Begin Sequence
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³So Executa se o Modo de Acesso dos Arquivos do Ponto estiverem OK e o Ca³
	³dastro de Funcionario Nao Estiver Vazio								 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( ValidArqPon() .and. ChkVazio("SRA") )
		Break
	EndIF

	Private aAlter      := {}
	Private aTabPadrao  := {}
	Private nColMarc    := SuperGetmv( "MV_COLMARC" , NIL , 2 , cFilAnt )
	Private nMV_COLMARC := 0
		
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica Numero de Elementos para as Colunas da GetDados    ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nColMarc == NIL )
		Break
	EndIF
	nColMarc    *= 2
	nMV_COLMARC := nColMarc
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	cFiltraRh	:= ChkRh( cProg , "SRA" , "1" )
	bFiltraBrw 	:= { || FilBrowse( "SRA" , @aIndexSRA , @cFiltraRH ) }
	Eval( bFiltraBrw )
		
	If lPona180
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Verifica se deve imprimir por Periodo ou Por Datas           ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		If fSetPerData(@nColPro, STR0005,;      //"Manutençäo das Marcaçöes"
							     NIL	,;
					   		     NIL    ,;
					   		     NIL 	 ;
					  ) == 0 
			Return
		EndIf
		If !( nColPro == 1 )
			lPeriodo := .F.
			aDatas := {oPeriodo:dDataIni,oPeriodo:dDataFim}
		EndIf
	EndIf
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega o Browse do Cadastro de Funcionarios                           ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	dbSelectArea( "SRA" )
	mBrowse( 006 , 001 , 022 , 075 , "SRA" , NIL , NIL , NIL , NIL , NIL , fCriaCor() )
	
    /*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Deleta o filtro utilizando a funcao FilBrowse                     	 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	EndFilBrw( "SRA" , aIndexSra )

    /*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura Dados de Entrada												 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RestArea( aAreaAux )  // Restaura a area SP8/SPG

End Sequence
	
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura Dados de Entrada												 ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestArea( aArea )

Return( NIL )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn040Atu  ³ Autor ³ Equipe Advanced RH    ³ Data ³14/10/1997³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa de Atualiza‡„o das Marca‡”es                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Pn040Alt(ExpC1,ExpN1,ExpN2)                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Numero da opcao selecionada                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ pona040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn040Atu(cAlias,nReg,nOpcX)
Local aColsRec				:= {}
Local aAPOCols				:= {}
Local aKeys					:= GetKeys()
Local aAdvSize				:= {}
Local aInfoAdvSize			:= {}
Local aObjSize				:= {}
Local aObjCoords			:= {}

Local aAdv1Size				:= {}
Local aInfo1AdvSize			:= {}
Local aObj1Size				:= {}
Local aObj1Coords			:= {} 

Local aAdv2Size				:= {}
Local aInfo2AdvSize			:= {}
Local aObj2Size				:= {}
Local aObj2Coords			:= {}  

Local aAdv4ize				:= {}
Local aInfo4AdvSize			:= {}
Local aObj4Size				:= {}
Local aObj4Coords			:= {}

Local aPesqIdx 				:= {}
Local aPesqOrd				:= {}
Local aButtons				:= {}
Local lSeeAll				:= .T.
Local bNIL					:= { || NIL }
Local bSet15				:= { || NIL }
Local bSet24				:= { || NIL }
Local bSvSet15				:= { || NIL }
Local bSvSet24				:= { || NIL }
Local bGravar				:= {}
Local cPesqOrd
Local cFil					:= SRA->RA_FILIAL
Local cPesqCampo			:= space(40)
Local cMat    				:= SRA->RA_MAT
Local cNome    				:= SRA->RA_NOME
Local lApHeDtm	 			:= ( SuperGetMv( "MV_APHEDTM" , NIL , "N" , cFilAnt ) == "S" )
Local lMvMcAutMm			:= ( SuperGetMv( "MV_MCAUTMM" , NIL , "N" , cFilAnt ) == "S" )
Local lGetMarcAuto			:= ( SuperGetMv( "MV_GETMAUT" , NIL , "S" , cFilAnt ) == "S" )
Local lValPer			    := .T.
Local lAxPesqui 			:= .F. 
Local oDlg					:= NIL
Local oFont					:= NIL
Local oGroup				:= NIL
Local oNrPagto  
Local oRoteiro 
Local oPer
Local oDatas
Local oPesqCbx
Local oPesqGet
Local oDtIni
Local oDtFim
Local _lGrava				:= .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Blocos de Codigo                                            ³
//³================                                            ³
//³Serao utilizados na acao do botoes de movimentacao, "Avanca"³
//³"Retrocede", "Avanca Todos" e "Retrocede Todos".            ³
//³O Bloco "bFica" sera utilizado quando forem alterados os    ³
//³campos data de referencia, semana e tipo de lancamento.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Local bRetrocOne := {|| Pn040VerGrava(cAlias, @aColsRec, nOpcX), nRegAnt:=SRA->(Recno()), SRA->(dbskip(-1)),   Pn040MontaGd(cAlias, nOpcX, @aColsRec, @aAPOCols,.T.), oGet:oBrowse:Refresh(),oDLG:Refresh()}
Local bRetrocAll := {|| Pn040VerGrava(cAlias, @aColsRec, nOpcX), nRegAnt:=SRA->(Recno()), SRA->(dbGoTop()),    Pn040MontaGd(cAlias, nOpcX, @aColsRec, @aAPOCols,.T.), oGet:oBrowse:Refresh(),oDLG:Refresh()}
Local bAvancaOne := {|| Pn040VerGrava(cAlias, @aColsRec, nOpcX), nRegAnt:=SRA->(Recno()), SRA->(dbskip()),     If( SRA->(! EOF()),aCols:= {},.T.), Pn040MontaGd(cAlias, nOpcX, @aColsRec, @aAPOCols,.T.), oGet:oBrowse:Refresh(),oDLG:Refresh()}
Local bAvancaAll := {|| Pn040VerGrava(cAlias, @aColsRec, nOpcX), nRegAnt:=SRA->(Recno()), SRA->(dbGoBottom()), Pn040MontaGd(cAlias, nOpcX, @aColsRec, @aAPOCols,.T.), oGet:oBrowse:Refresh(),oDLG:Refresh()}
Local bFica      := {|| 																				Pn040MontaGd(cAlias, nOpcX, @aColsRec, @aAPOCols,.T.),If(lDaRefresh,(oGet:oBrowse:Refresh(),oDLG:Refresh()),.t.)}
                                                                                                                               
Local bAguarde   := {|| Eval( bChangePer ) }
Local bChangePer := {|| If(		(lDaRefresh := PonChangePer()),;
								MsAguarde( { || Pn040VerGrava(cAlias, @aColsRec, nOpcX, .F.),nRegAnt:=SRA->(Recno()),;
								   		        Pn040MontaGd(cAlias, nOpcX, @aColsRec, @aAPOCols,.F.) } ), ;
								.T. ;
							);
					}

Private aHeader    			:= {}
Private aCampos    			:= {}
Private aOrdena    			:= {}
Private aResult	   			:= {}	
Private aCols       		:= {}
Private aCols1      		:= {}
Private aOldCols1   		:= {}
Private aLastCols1			:= {}
Private aLastApo			:= {}
Private aTabCalend  		:= {}
Private aRecsMarcAutDele	:= {}
Private cPerAponta			:= ""
Private cAntProcesso		:= Nil
Private cAntPeriodo         := Nil
Private cAntNumPagto        := Nil
Private cAntRoteiro         := Nil
Private cProcesso			:= SRA->RA_PROCES
Private cPeriodo            := ""
Private cNumPagto			:= ""
Private cRot				:= ""
Private cDatas
Private lContinua			:= .F.
Private lGeraAuto			:= .F.
Private lP8PGIniCa			:= .T.         
Private lAPOLock			:= .F.
Private lDaRefresh 			:= .F.	
Private nUsado     			:= 0
Private nRegAnt				:= 0
Private nLenIni    			:= 0
Private nOpcA				:= 0
Private oGet  

DEFAULT lPnaGrv	:= ExistBlock( "PNA040GRV" )
DEFAULT lPnaAcl	:= ExistBlock( "PNA040ACL" )

/*/	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/

	aAdvSize		:= MsAdvSize()
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
	aAdd( aObjCoords , { 000 , 025 , .T. , .F. } ) //1-Linha -Dados Funcionario
	aAdd( aObjCoords , { 000 , 030 , .T. , .F. } )	//2-Periodo 
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )	//3-Marcacao
	aAdd( aObjCoords , { 000 , 027 , .T. , .F. } )	//4-Rodape
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
	
	//Divisao da 1. linha em 5 colunas
	aAdv1Size		:= aClone(aObjSize[1])
	aInfo1AdvSize	:= { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 1.25 , 1.25 }
	aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } ) 	//1-Mat
	aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )	//2-Nome
	aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )	//3-Adm
	aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )	//4-Proc
	aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )	//5- Posto 
	aObj1Size		:= MsObjSize( aInfo1AdvSize , aObj1Coords,,.T. )
	
	//Divisao da 2. linha em 4 colunas
	aAdv2Size		:= aClone(aObjSize[2])
	aInfo2AdvSize	:= { aAdv2Size[2] , aAdv2Size[1] , aAdv2Size[4] , aAdv2Size[3] , 1.25 , 1.25 }
	aAdd( aObj2Coords , { 000 , 000 , .T. , .T. } ) 	//1-Per
	aAdd( aObj2Coords , { 000 , 000 , .T. , .T. } )	//2-Pagto
	aAdd( aObj2Coords , { 000 , 000 , .T. , .T. } )	//3-Procedim
	aAdd( aObj2Coords , { 000 , 000 , .T. , .T. } )	//4-Periodos
	aObj2Size		:= MsObjSize( aInfo2AdvSize , aObj2Coords,,.T. )
		
	//Divisao da 4. linha em 6 colunas
	aAdv4Size		:= aClone(aObjSize[4])
	aInfo4AdvSize	:= { aAdv4Size[2] , aAdv4Size[1] , aAdv4Size[4] , aAdv4Size[3] , 10 , 10}
	aAdd( aObj4Coords , { 000 , 000 , .T. , .T. } )
	aAdd( aObj4Coords , { 090 , 000 , .F. , .T. } )
	aAdd( aObj4Coords , { 090 , 000 , .F. , .T. } )
	aAdd( aObj4Coords , { 090 , 000 , .F. , .T. } )
	aAdd( aObj4Coords , { 025 , 000 , .F. , .T. } )
	aAdd( aObj4Coords , { 000 , 000 , .T. , .T. } )	
	aObj4Size		:= MsObjSize( aInfo4AdvSize , aObj4Coords,,.T. )	
	

	If (nOpcx = 3) .OR. (nOpcx = 4)
		bGravar	:= { || (;
			 				MsAguarde( { || If(pn040TudOk(), Pn040Grava(cAlias,nOpcX,aCampos,cFil,cMat,aColsRec), .T.) }, OemToAnsi(STR0103)),;
			 				NIL;
						); 
					}
		aAdd(;
				aButtons	,;
			{;
				"SALVAR" 			,;
   				bGravar				,;
       	   		OemToAnsi( STR0028 ),;	//"Gravar"
       	   		OemToAnsi( STR0028 ) ;	//"Gravar"
	        };
    	 )
	EndIf

Begin Sequence

	//Caso nao exista periodo valido, fecha o programa.
	If !pon040MontaGetDados(@cAlias, nOpcX, SRA->RA_FILIAL, @cMat, @aColsRec, @aAPOCols, @oGet, .T.)
		Return(.F.)
	Else
		cAntProcesso	:= cProcesso
		cAntPeriodo		:= cPeriodo
		cAntNumPagto	:= cNumPagto
		cAntRoteiro     := cRot	
	EndIf
	
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Mostra a Tela de Manutencao de Marcacoes             ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
	DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0005 ) FROM aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL				// 'Manuten‡„o das Marca‡”es'
		
		@ aObj1Size[1,1],aObj1Size[1,2]	GROUP oGroup TO aObj1Size[1,3],aObj1Size[1,4] LABEL OemToAnsi(STR0039) OF oDlg PIXEL	// "Matricula:"
		oGroup:oFont:= oFont
		@ aObj1Size[2,1],aObj1Size[2,2]	GROUP oGroup TO aObj1Size[2,3],aObj1Size[2,4] LABEL OemToAnsi(STR0040) OF oDlg PIXEL	// "Nome:"
		oGroup:oFont:= oFont
		@ aObj1Size[3,1],aObj1Size[3,2]	GROUP oGroup TO aObj1Size[3,3],aObj1Size[3,4] LABEL OemToAnsi(STR0106) OF oDlg PIXEL	// "Admiss„o:"
		oGroup:oFont:= oFont
		@ aObj1Size[4,1],aObj1Size[4,2]	GROUP oGroup TO aObj1Size[4,3],aObj1Size[4,4] LABEL OemToAnsi(STR0126) OF oDlg PIXEL 	// "Processo:"
		oGroup:oFont:= oFont
		@ aObj1Size[5,1],aObj1Size[5,2]	GROUP oGroup TO aObj1Size[5,3],aObj1Size[5,4] LABEL OemToAnsi(STR0127) OF oDlg PIXEL 	// "Posto:"
		oGroup:oFont:= oFont
			
		@ aObj1Size[1,1]+10,aObj1Size[1,2]+5	SAY StrZero(Val(SRA->RA_MAT),Len(SRA->RA_MAT))	SIZE 050,10 OF oDlg PIXEL FONT oFont
		@ aObj1Size[2,1]+10,aObj1Size[2,2]+5	SAY OemToAnsi(SRA->RA_NOME) 					SIZE 146,10 OF oDlg PIXEL FONT oFont
		@ aObj1Size[3,1]+10,aObj1Size[3,2]+5	SAY DtoC(fDtaAdmis())							SIZE 050,10 OF oDlg PIXEL FONT oFont
		@ aObj1Size[4,1]+10,aObj1Size[4,2]+5	SAY OemToAnsi(SRA->RA_PROCES) 					SIZE 050,10 OF oDlg PIXEL FONT oFont
		@ aObj1Size[5,1]+10,aObj1Size[5,2]+5	SAY OemToAnsi(SRA->RA_POSTO)					SIZE 050,10 OF oDlg PIXEL FONT oFont
        

	 /*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
       ³ Codigo do Periodo, Numero de Pagamento, Roteiro, Data Inicio e Data Fim do periodo ³
	   ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	   	If lPeriodo
			@ aObj2Size[1,1],aObj2Size[1,2]	GROUP oGroup TO aObj2Size[1,3],aObj2Size[1,4]	LABEL OemToAnsi(STR0093) OF oDlg PIXEL	// Cod. Periodo:
			oGroup:oFont:= oFont
			@ aObj2Size[2,1],aObj2Size[2,2]	GROUP oGroup TO aObj2Size[2,3],aObj2Size[2,4]	LABEL OemToAnsi(STR0128) OF oDlg PIXEL	// Numero de Pagamento:
			oGroup:oFont:= oFont
			@aObj2Size[3,1],aObj2Size[3,2]		GROUP oGroup TO aObj2Size[3,3],aObj2Size[3,4]	LABEL OemToAnsi(STR0129) OF oDlg PIXEL // Roteiro:
			oGroup:oFont:= oFont
			@ aObj2Size[4,1],aObj2Size[4,2]	GROUP oGroup TO aObj2Size[4,3],aObj2Size[4,4]	LABEL OemToAnsi(STR0222) OF oDlg PIXEL	// Periodo:
			oGroup:oFont:= oFont
			
			@ aObj2Size[1,1]+10, aObj2Size[1,2]+5 ;
				MSGET 	oPer Var cPeriodo ;
				PICTURE GetSx3Cache( "RCH_PER" , "X3_PICTURE" ) F3 "RCH" ;
		  		WHEN lPona180 ;	  //Se for acumulado, permite alteracao
		  	 	VALID  	ExistCpo( "RCH", cProcesso + cPeriodo, 2) .AND. ;
		  		Eval(bAguarde);
		    	SIZE 	050,10 OF oDlg PIXEL HASBUTTON
		    	
			@ aObj2Size[2,1]+10, aObj2Size[2,2]+5 ;
				MSGET 	oNrPagto Var cNumPagto ;
				PICTURE GetSx3Cache( "RCH_NUMPAG" , "X3_PICTURE" ) F3 "RCH01" ;
		  		WHEN lPona180 ;	//Se for acumulado, permite alteracao
		  	 	VALID  	ExistCpo( "RCH", cProcesso + cPeriodo + cNumPagto, 3) .AND.;
		  		Eval(bAguarde);
		      	SIZE 	050,10 OF oDlg PIXEL HASBUTTON
		      	
			@ aObj2Size[3,1]+12,aObj2Size[3,2]+5 SAY oRoteiro 	Var cRot 	SIZE 060,10 	OF oDlg PIXEL FONT oFont
			@ aObj2Size[4,1]+12,aObj2Size[4,2]+5 SAY oDatas   	Var cDatas 	SIZE 060,10 	OF oDlg PIXEL FONT oFont	    		      	
			
		Else
			@ aObj2Size[1,1],aObj2Size[1,2]	GROUP oGroup TO aObj2Size[2,3],aObj2Size[2,4]	LABEL OemToAnsi(STR0306) OF oDlg PIXEL	// Data Inicial
			oGroup:oFont:= oFont
			@ aObj2Size[3,1],aObj2Size[3,2]	GROUP oGroup TO aObj2Size[4,3],aObj2Size[4,4]	LABEL OemToAnsi(STR0307) OF oDlg PIXEL	// Data Final
			oGroup:oFont:= oFont

			@ aObj2Size[1,1]+10,aObj2Size[1,2]+5 ;
				MSGET 	oDtIni Var dDataIni ;
				VALID ( !Empty( dDataIni ) .AND. ( dDataIni <= dDataFim ) ) .AND.;
		  		Eval(bAguarde);
		    	SIZE 	050,10 OF oDlg PIXEL HASBUTTON
		    	
			@ aObj2Size[3,1]+10,aObj2Size[3,2]+5;
				MSGET 	oDtFim Var dDataFim ;
				VALID ( !Empty( dDataFim ) .and. ( dDataIni <= dDataFim ) ) .AND.;
		  		Eval(bAguarde);
		      	SIZE 	050,10 OF oDlg PIXEL HASBUTTON
		EndIf
		
		//Possibilita a reordenação do aCols antes da exibição na tela.
		If lPnaAcl
			aCols := aClone(ExecBlock("PNA040ACL",.F.,.F.,{aCols,aCampos,SRA->RA_FILIAL,SRA->RA_MAT}))
		EndIf		
		
		oGet := MsGetDados():New(aObjSize[3,1],aObjSize[3,2],aObjSize[3,3],aObjSize[3,4],nOpcX,"Pn040LinOk","Pn040TudOk","",NIL,aAlter,1,NIL,(dPerFim-dPerIni))


	/*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	  ³ Define grupo do rodape          ³
	  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		@ aObjSize[4,1],aObjSize[4,2]	GROUP oGroup TO aObjSize[4,3],aObjSize[4,4] LABEL OemToAnsi(STR0131) OF oDlg PIXEL	 //"Pesquisar Funcionarios"
		oGroup:oFont:= oFont 

	/*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	  ³ Lista Botoes de posicionamento do funcionario ³
	  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		@ aObj4Size[2,1] , aObj4Size[2,2]		BUTTON oBtnPgPrev 	PROMPT OemToAnsi("<<")	 SIZE 021.5,009 DESIGN ACTION Eval(bRetrocAll) OF oDlg PIXEL
		@ aObj4Size[2,1] , aObj4Size[2,2]+20.5	BUTTON oBtnPrev		PROMPT OemToAnsi("<")	 SIZE 021.5,009 DESIGN ACTION Eval(bRetrocOne) OF oDlg PIXEL
		@ aObj4Size[2,1] , aObj4Size[2,2]+42	BUTTON oBntNext 	PROMPT OemToAnsi(">")	 SIZE 021.5,009 DESIGN ACTION Eval(bAvancaOne) OF oDlg PIXEL
		@ aObj4Size[2,1] , aObj4Size[2,2]+63.5	BUTTON oBtnPgNext 	PROMPT OemToAnsi(">>")	 SIZE 021.5,009 DESIGN ACTION Eval(bAvancaALL) OF oDlg PIXEL

    	AxPesqOrd("SRA",@aPesqIdx,,lSeeAll,@aPesqOrd)
    	cPesqOrd := aPesqOrd[1]

		@ aObj4Size[3,1], aObj4Size[3,2] 	COMBOBOX oPesqCbx 	VAR cPesqOrd ITEMS aPesqOrd SIZE 100,36 PIXEL OF oDlg ON CHANGE If(lAxPesqui,(DbSelectArea(cAlias),DbSetOrder(aPesqIdx[oPesqCbx:nAt][1]), MbrSetAllCols(cAlias,aIdxCol,,__oObjBrow),__oObjBrow:Refresh()),)
 		@ aObj4Size[4,1], aObj4Size[4,2] 	MSGET    oPesqGet 	VAR cPesqCampo 				SIZE 100,09 	PIXEL OF oDlg 
    	@ aObj4Size[5,1], aObj4Size[5,2] 	BUTTON   "Ok" 									SIZE 021.5,009 	PIXEL OF oDlg ACTION (Pn040VerGrava(cAlias, @aColsRec, nOpcX),nRegAnt:=SRA->(Recno()),AxPesqSeek("SRA",.F.,cPesqCampo,,aPesqIdx,oPesqCbx:nAt,lSeeAll,),Gp640Movimenta(bFica))

		IF nOpcX == 2 .OR. nOpcX == 3
			bSet15 := {|| nOpcA := IF( nOpcX == 3 , nOpcX , 1 ) , IF( oGet:TudoOk() , ( nOpcA := 1 , oDlg:End() ) , ( nOpcA := 0 , .F. ) ) }
		Else
		  	bSet15 := {|| oDlg:End()}
		EndIf
		bSet24 := {|| nOpcA := 3 , IF( oGet:TudoOk() , oDlg:End() , ( nOpcA := 0 , .F. ) ) }
		
		oDlg:bSet15 := bSet15
		bSvSet15 := SetKey( 15 , oDlg:bSet15 )
		oDlg:bSet24 := bSet24
		bSvSet24 := SetKey( 24 , oDlg:bSet24 )
    
	aButtons := PonChoiBar(oGet,nOpcX,IF(nOpcX==2,"1",IF(nOpcX==3,"3","4")),.F.,lPona180)
	ACTIVATE MSDIALOG oDlg ON INIT  EnchoiceBar(oDlg, bSet15, bSet24, , aButtons);
  			  				  VALID ( IF(nOpcA==0,IF(pn040TudOk(oGet),.T.,.F.),.T.) )	 CENTERED	
		
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura o Estado das Teclas de Atalho conforme Entrada 	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	SetKey( 15	    , IF( Empty( bSvSet15 ) , bNIL , bSvSet15 ) )
	SetKey( 24	    , IF( Empty( bSvSet24 ) , bNIL , bSvSet24 ) )
	RestKeys( aKeys , .T. )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Ponto de Entrada para permitir ou não a gravacao			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lPnaGrv )
		IF ( ValType( lRet := ExecBlock( "PNA040GRV",.F.,.F., { cAlias, (PrefixoCpo( IF( lPona180 , "SPG" , "SP8" ) ) + "_" ), nOpcX } ) ) == "L" )
			_lGrava    := lRet
			lRet	   := NIL
		EndIF
	EndIF
	
	If _lGrava
		If ( nOpcA == 1 )
			Pn040Grava(cAlias,nOpcX,aCampos)
			//-- Processa Gatilhos
			EvalTrigger()
		Endif
	Endif		

End Sequence

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Libera Registros Locados		                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
FreeLocks( cAlias , NIL , .T. )
FreeLocks( IF( lPona180 , "SPH" , "SPC" ) , NIL , .T. )
FreeLocks( "SPK" , NIL , .T. )
FreeLocks( IF( lPona180 , "SPG" , "SP8" ) , If(!Empty(aColsRec),aColsRec,NIL) , .T. )

dbSelectArea("SRA")

Return( NIL )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³pn040LinOk³ Autor ³ J. Ricardo            ³ Data ³20/02/1995³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Critica linha digitada                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn040LinOk(o)

Local lRet := .T.

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn040TudOk³ Autor ³ Equipe Advanced RH    ³ Data ³20/02/1995³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn040TudOk(o)

Local bNIL			:= { || NIL }
Local bSvSet15		:= SetKey( 15 )
Local bSvSet24		:= SetKey( 24 )
Local cOpcA			:= ""
Local lRet			:= .T.
Local lMsgMcImpar	:= ( SuperGetMv( "MV_MSGMIMP" , NIL , "N" , cFilAnt ) == "S" )
Local nX			:= 0
Local nForX			:= 0
Local nY			:= 0
Local nVezes		:= 0
Local nVazios		:= 0
Local nValidos		:= 0

//-- Variaveis ja inicializadas.
cOpcA     := StrZero(nOpcA,1)
lContinua := .F.

//-- Confirma / Redigita
IF !( cOpcA $ "0ú3" )
	Begin Sequence
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Se desejar Mostrar Aviso de Marcacoes Impares                 ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( lMsgMcImpar )
			//-- Nao Permite Datas com Marcacoes impares.
			nForX := Len(aCols1)
			For nX := 1 To nForX
				nVazios  := 0
				nValidos := 0
				aEval(aCols1[nX],{ |x| IF(Empty(x[1]),nVazios++,nValidos++)},3,nColMarc)
				IF nValidos%2 > 0
					IF !( lRet := !MsgNoYes( OemToAnsi(STR0042)  + " " + OemToAnsi( STR0004 ) , OemToAnsi(STR0041) ) )	//'Existe um ou mais dias com numero de marcacoes Impar'###'Redigita?'###"Aten‡„o"
						o:Refresh()
						o:nAt       := nX
						o:nColPos   := 1
						o:nRowPos   := IF(nX<=12,nX,If(nX>=(Len(aCols1)-11),12-(Len(aCols1)-nX),6))
						n           := nX
					EndIF
					Break
				EndIF
			Next nX
		EndIF
	End Sequence
Else //-- Abandona
	//-- Caso tenham ocorrido altera‡”es, adverte sobre o Abandono sem Grava‡„o (Windows)
	IF !fCompArray( aCols1 , aOldCols1 )
		lRet := !MsgNoYes( OemToAnsi(STR0037)  + " " + OemToAnsi( STR0004 ) , OemToAnsi(STR0036) )	//'Vo‡ˆ est  prestes a perder as altera‡”es realizadas.'###'Redigita?'###"Aten‡„o"
	EndIF
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura o Estado das Teclas de Atalho conforme Entrada 	  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
SetKey( 15	, IF( Empty( bSvSet15 ) , bNIL , bSvSet15 ) )
SetKey( 24	, IF( Empty( bSvSet24 ) , bNIL , bSvSet24 ) )

Return( lRet )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn040Grava³ Autor ³ Equipe Advanced RH    ³ Data ³24/04/1996³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Efetua a Grava‡„o ou a Exclus„o dos Aponamentos e Marca‡”es³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ pona040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Pn040Grava(cAlias,nOpcX,aCampos,cFil,cMat,aColsRec)

Local aAPOCols		:= aCols
Local cTurno    	:= ""
Local cOrdem		:= ""
Local cCusto		:= SRA->RA_CC
Local cCodFun		:= SRA->RA_CODFUNC
Local cDepto        := SRA->RA_DEPTO
Local cPosto		:= SRA->RA_POSTO
Local cProces		:= SRA->RA_PROCES
Local cPer			:= oPeriodo:cPeriodo
Local cRot			:= oPeriodo:cRoteiro
Local cNrPag		:= oPeriodo:cNumPagto
Local cPrefix		:= ""
Local cFilFunc		:= ""
Local cMatFunc		:= SRA->RA_MAT
Local cFilSPC		:= ""
Local cFilSPCMat	:= ""
Local cMsgErr		:= ""
Local dDataAtu  	:= CtoD("//")
Local dDataApo		:= CtoD("//")
Local lGrava		:= ( Len( aLastApo ) == 0 )
Local lReaponta		:= .F.
Local lGoto			:= .T.
Local lModMarc		:= .F.
Local lSPCDelInfo	:= .F.
Local nX        	:= 0
Local nForX			:= 0
Local nY        	:= 0
Local nZ        	:= 0
Local nPos			:= 0
Local nSerAtu   	:= 0
Local nSerAnt   	:= 0
Local nColMarc2		:= ( nColMarc + 2 )
Local nColMarc3		:= ( nColMarc + 3 )

cAlias				:= IF( lPona180 , "SPG" , "SP8" )
cPrefix				:= ( PrefixoCpo( cAlias ) + "_" )
cFilFunc			:= fFilFunc(cAlias)
cFilSPC				:= fFilFunc("SPC")
cFilSPCMat			:= ( cFilSPC + cMatFunc )

IF ( cAlias == "SP8" ) //Apenas Quando nao For Acumulado

	//-- Atualiza‡„o dos Apontamentos no SPC
	If ( nOpcX == 2 )
		IF ( cApoCla == "S" )
	        
	        If ( lReaponta := (!fCompArray(aCols1,aLastCols1).or.Empty(aResult).or.lGeraAuto) )	 	//Reprocessa o Apontamento
			 	 aOrdena 	:= {}
                 aResult	:= {}
            Endif
                
			PreparaCla(	@aOrdena		,;	//Array com as Marcacoes
						@aResult		,;	//Array com os Resultados
						nColMarc		,;  //Numero de Colunas de Marcacoes
						lGrava			,;  //Grava o Apontamento
						lReaponta 	 	;	//Reprocessa o Apontamento
					  )
					  
			IF !( lGrava ) //Carregar Apenas os Valores Alterados no Apontamento
				IF ( lReaponta )
					GetNewResult( @aResult , aLastApo , aCols1 , aLastCols1 )
				EndIF
				//Neste Caso a PreparaCla Apenas Ira Gravar o Apontamento
				PreparaCla(	@aOrdena											,;	//Array com as Marcacoes
							@aResult											,;	//Array com os Resultados
							nColMarc											,;  //Numero de Colunas de Marcacoes
							.T.													,;  //Grava o Apontamento
							.F.													 ;	//Reprocessa o Apontamento
						  )
	
			EndIF
		EndIF
	//-- Exclus„o dos Apontamentos no SPC
	ElseIf ( nOpcX == 3 )
		//""Excluir, alˆm dos apontamentos calculados pelo sistema, os apontamentos informados pelo usu rio?"
		IF ( SPC->( dbSeek( cFilSPCMat , .F. ) ) )
			lSPCDelInfo := MsgNoYes( OemToAnsi( STR0120 ) , cCadastro ) 
			CursorWait()
				Begin Transaction
					SP8DelSPC( dPerIni , dPerFim , cFilSPC , cMatFunc , lSPCDelInfo )
				End Transaction
			CursorArrow()
		EndIF	                          
	EndIf
	
	DbSelectArea(cAlias)
	
EndIF           

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Deleta os Registros de Marcacoes Automaticas que foram  recar³
³ regadas													   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
PonDelRecnos( cAlias , aRecsMarcAutDele )
	
Begin Transaction
	nForX := Len(aCols1)
	For nX := 1 to nForX

		//-- Data da 1a Marca‡„o da Ordem
		dDataAtu := aCols1[nX, 2]

		For nY := 3 To nColMarc2

			//-- Quando o campo Iniciou e Finalizou em Branco, ‚ ignorado
			If Empty(aCols1[nX, nY, 1]) .and. Empty(aOldCols1[nX, nY, 1])
				Loop
			EndIf

			//-- Transforma a Hora Atual e a Anterior em N£mero de S‚rie
			nSerAtu  := If( Empty(aCols1[nX, nY, 1]), 0, fDHtoNS(,Val(aCols1[nX, nY, 1])) )
			nSerAnt  := If( Empty(aCols1[nX, nY, 1]), 0, fDHtoNS(,Val(aCols1[nX, If(nY>3,(nY-1),nY), 1])) )
			dDataAtu += If(nSerAtu<nSerAnt,1,0)

/*			IF ( nPos := aScan( aTabCalend , { |x| x[CALEND_POS_ORDEM] == aCols1[nX, nColMarc3] } ) ) > 0
				cTurno := aTabCalend[ nPos , CALEND_POS_TURNO ]
				cOrdem := aTabCalend[ nPos , CALEND_POS_ORDEM ]
			EndIF
*/
			IF ( nPos := aScan( aTabCalend , { |x| x[CALEND_POS_DATA_APO] == aCols1[nX, nY,  19] } ) ) > 0
				cTurno   := aTabCalend[ nPos , CALEND_POS_TURNO ]
				cOrdem   := aTabCalend[ nPos , CALEND_POS_ORDEM ]
				dDataApo := aTabCalend[ nPos , CALEND_POS_DATA_APO ]
			EndIF
			//-- Atualiza‡„o das Marca‡”es no SP8 ou SPG
			If ( nOpcX == 2 )
				
				IF ( ( cAlias == "SP8" ) .and. ( cApoCla == "S" ) ) //So Carrega Flag de Apontamento quando apontamento estiver setado
					IF ( nPos := aScan( aOrdena , { |x| x[AMARC_DATA]	 == dDataAtu					.and.; //Data
														x[AMARC_HORA]	 == Val(aCols1[nX, nY, 1])	.and.; 	   //Hora
														x[AMARC_DATAAPO] == dDataApo						 ; //Data Apontamento
												  };
										);
				 		) > 0
						aCols1[ nX , nY , 06] := aOrdena[ nPos , AMARC_APONTA	]
						aCols1[ nX , nY , 10] := aOrdena[ nPos , AMARC_TIPOMARC	]
					EndIF
				EndIF
				
				If ( lModMarc := ( aCols1[nX, 02] # aOldCols1[nX, 02] ) ) .or. ;
				   ( lModMarc := ( aCols1[nX, nY, 01] # aOldCols1[nX, nY, 01] ) ) .or. ;
				   ( aCols1[nX, nY, 06] # aOldCols1[nX, nY, 06] ) .or. ;
				   ( aCols1[nX, nY, 11] # aOldCols1[nX, nY, 11] )

					//-- Inclui Marca‡”es ( Alt+Ins )
					If ( ( aOldCols1[nX, nY, 2] == 0 ) .and. !Empty(aCols1[nX, nY, 1]) )
						IF RecLock(cAlias,.T.)
							(cAlias)->(&(cPrefix+"FILIAL"))		:= cFilFunc
							(cAlias)->(&(cPrefix+"MAT"))		:= cMatFunc
							(cAlias)->(&(cPrefix+"TURNO"))		:= cTurno
							(cAlias)->(&(cPrefix+"DATA"))		:= IF( Empty( aCols1[ nX , nY , 08 ] ) , dDataAtu , aCols1[ nX , nY , 08 ] )
							(cAlias)->(&(cPrefix+"ORDEM"))		:= aCols1[ nX , nColMarc3 ]
							(cAlias)->(&(cPrefix+"FLAG"))		:= IF(Empty(aCols1[ nX , nY , 07 ]),"I",IF(lModMarc,"M",aCols1[ nX , nY , 07 ]))
							(cAlias)->(&(cPrefix+"HORA"))		:= Val(aCols1[ nX , nY , 01 ] )
							(cAlias)->(&(cPrefix+"GIRO"))		:= aCols1[ nX , nY , 03 ]
							(cAlias)->(&(cPrefix+"FUNCAO"))		:= aCols1[ nX , nY , 04 ]
							(cAlias)->(&(cPrefix+"CC"))			:= IF( Empty( aCols1[ nX , nY , 05] ) , cCusto , aCols1[ nX , nY , 05 ] )
							(cAlias)->(&(cPrefix+"APONTA"))		:= aCols1[ nX , nY , 06 ]
							(cAlias)->(&(cPrefix+"RELOGIO"))	:= aCols1[ nX , nY , 09 ]
							(cAlias)->(&(cPrefix+"TPMARCA"))	:= aCols1[ nX , nY , 10 ]
							(cAlias)->(&(cPrefix+"PAPONTA"))	:= aCols1[ nX , nY , 11 ]
							(cAlias)->(&(cPrefix+'DEPTO'))		:= IF( Empty( aCols1[ nX , nY , 12] ) , cDepto  , aCols1[ nX , nY , 12 ] )
							(cAlias)->(&(cPrefix+'POSTO'))		:= IF( Empty( aCols1[ nX , nY , 13] ) , cPosto  , aCols1[ nX , nY , 13 ] )
							(cAlias)->(&(cPrefix+'PROCES'))		:= IF( Empty( aCols1[ nX , nY , 14] ) , cProces , aCols1[ nX , nY , 14 ] )
							(cAlias)->(&(cPrefix+'PERIODO'))	:= IF( Empty( aCols1[ nX , nY , 15] ) , cPer    , aCols1[ nX , nY , 15 ] )
							(cAlias)->(&(cPrefix+'ROTEIR'))		:= IF( Empty( aCols1[ nX , nY , 16] ) , cRot    , aCols1[ nX , nY , 16 ] )
							(cAlias)->(&(cPrefix+'NUMPAG'))		:= IF( Empty( aCols1[ nX , nY , 17] ) , cNrPag  , aCols1[ nX , nY , 17 ] )
							(cAlias)->(&(cPrefix+'CODFUNC'))	:= IF( Empty( aCols1[ nX , nY , 18] ) , cCodFun , aCols1[ nX , nY , 18 ] )
							(cAlias)->(&(cPrefix+'DATAAPO'))	:= IF( Empty( aCols1[ nX , nY , 19] ) , dDataApo, aCols1[ nX , nY , 19 ] )
							( cAlias )->( MsUnLock() )
						EndIF
						//-- Exclui Marca‡”es ( Alt+Del )
					ElseIf Empty(aCols1[nX, nY, 1])
						IF ( lGoto := !Empty( aOldCols1[nX, nY, 2] ) )
							( cAlias )->(dbGoto(aOldCols1[nX, nY, 2]))
							IF RecLock(cAlias,.F.)
								IF !( cAlias )->( FkDelete( @cMsgErr ) )
									RollBackDelTran( cMsgErr )
								EndIF
								( cAlias )->( MsUnLock() )
							EndIF
						EndIF	
					//-- Altera Marca‡”es ( Alt+G ou Marca‡”es Alteradas )
					Else
						IF ( lGoto := !Empty( aOldCols1[nX, nY, 2] ) )
							(cAlias)->(dbGoto(aCols1[nX, nY, 2]))
							IF RecLock(cAlias,.F.)
								IF !Empty(aCols1[nX, nY, 1])
									(cAlias)->(&(cPrefix+"FILIAL"))		:= cFilFunc
									(cAlias)->(&(cPrefix+"MAT"))		:= cMat
									(cAlias)->(&(cPrefix+"TURNO"))		:= cTurno
									(cAlias)->(&(cPrefix+"GIRO"))		:= aCols1[ nX , nY , 03 ]
									(cAlias)->(&(cPrefix+"FUNCAO"))		:= aCols1[ nX , nY , 04 ]
									(cAlias)->(&(cPrefix+"CC"))			:= IF( Empty( aCols1[ nX , nY , 05 ] ) , cCusto , aCols1[ nX , nY , 05 ] )
									(cAlias)->(&(cPrefix+"DATA"))		:= IF( Empty( aCols1[ nX , nY , 08 ] ) , dDataAtu , aCols1[ nX , nY , 08 ] )
									(cAlias)->(&(cPrefix+"ORDEM"))		:= aCols1[ nX , nColMarc3 ]
									(cAlias)->(&(cPrefix+"FLAG"))		:= IF(Empty(aCols1[ nX , nY , 07 ]),"M",IF(lModMarc,"M",aCols1[ nX , nY , 07 ]))
									(cAlias)->(&(cPrefix+"HORA"))		:= Val(aCols1[ nX , nY , 01 ])
									(cAlias)->(&(cPrefix+"APONTA"))		:= aCols1[ nX , nY , 06 ]
									(cAlias)->(&(cPrefix+"RELOGIO"))	:= aCols1[ nX , nY , 09 ]
									(cAlias)->(&(cPrefix+"TPMARCA"))	:= aCols1[ nX , nY , 10 ]
									(cAlias)->(&(cPrefix+"PAPONTA"))	:= aCols1[ nX , nY , 11 ]
									(cAlias)->(&(cPrefix+'DEPTO'))		:= IF( Empty( aCols1[ nX , nY , 12] ) , cDepto  , aCols1[ nX , nY , 12 ] )
									(cAlias)->(&(cPrefix+'POSTO'))		:= IF( Empty( aCols1[ nX , nY , 13] ) , cPosto  , aCols1[ nX , nY , 13 ] )
									(cAlias)->(&(cPrefix+'PROCES'))		:= IF( Empty( aCols1[ nX , nY , 14] ) , cProces , aCols1[ nX , nY , 14 ] )
									(cAlias)->(&(cPrefix+'PERIODO'))	:= IF( Empty( aCols1[ nX , nY , 15] ) , cPer    , aCols1[ nX , nY , 15 ] )
									(cAlias)->(&(cPrefix+'ROTEIR'))		:= IF( Empty( aCols1[ nX , nY , 16] ) , cRot    , aCols1[ nX , nY , 16 ] )
									(cAlias)->(&(cPrefix+'NUMPAG'))		:= IF( Empty( aCols1[ nX , nY , 17] ) , cNrPag  , aCols1[ nX , nY , 17 ] )
									(cAlias)->(&(cPrefix+'CODFUNC'))	:= IF( Empty( aCols1[ nX , nY , 18] ) , cCodFun , aCols1[ nX , nY , 18 ] )
									(cAlias)->(&(cPrefix+'DATAAPO'))	:= IF( Empty( aCols1[ nX , nY , 19] ) , dDataApo, aCols1[ nX , nY , 19 ] )
								Else
									IF !( cAlias )->( FkDelete( @cMsgErr ) )
										RollBackDelTran( cMsgErr )
									EndIF
								EndIF
								( cAlias )->( MsUnLock() )
							EndIF	
						ElseIF !Empty(aCols1[nX, nY, 1])
							IF RecLock(cAlias,.T.)
								(cAlias)->(&(cPrefix+"FILIAL"))		:= cFilFunc
								(cAlias)->(&(cPrefix+"MAT"))		:= cMatFunc
								(cAlias)->(&(cPrefix+"TURNO"))		:= cTurno
								(cAlias)->(&(cPrefix+"GIRO"))		:= aCols1[ nX , nY , 03 ]
								(cAlias)->(&(cPrefix+"FUNCAO"))		:= aCols1[ nX , nY , 04 ]
								(cAlias)->(&(cPrefix+"CC"))			:= IF( Empty( aCols1[ nX , nY , 05 ] ) , cCusto , aCols1[ nX , nY , 05 ] )
								(cAlias)->(&(cPrefix+"DATA"))		:= IF( Empty( aCols1[ nX , nY , 08 ] ) , dDataAtu , aCols1[ nX , nY , 08 ] )
								(cAlias)->(&(cPrefix+"ORDEM"))		:= aCols1[ nX , nColMarc3 ]
								(cAlias)->(&(cPrefix+"FLAG"))		:= IF(Empty(aCols1[ nX , nY , 07 ]),"M",IF(lModMarc,"M",aCols1[ nX , nY , 07 ]))
								(cAlias)->(&(cPrefix+"HORA"))		:= Val(aCols1[ nX , nY , 01 ])
								(cAlias)->(&(cPrefix+"APONTA"))		:= aCols1[ nX , nY , 06 ]
								(cAlias)->(&(cPrefix+"RELOGIO"))	:= aCols1[ nX , nY , 09 ]
								(cAlias)->(&(cPrefix+"TPMARCA"))	:= aCols1[ nX , nY , 10 ]
								(cAlias)->(&(cPrefix+"PAPONTA"))	:= aCols1[ nX , nY , 11 ]
								(cAlias)->(&(cPrefix+'DEPTO'))		:= IF( Empty( aCols1[ nX , nY , 12] ) , cDepto  , aCols1[ nX , nY , 12 ] )
								(cAlias)->(&(cPrefix+'POSTO'))		:= IF( Empty( aCols1[ nX , nY , 13] ) , cPosto  , aCols1[ nX , nY , 13 ] )
								(cAlias)->(&(cPrefix+'PROCES'))		:= IF( Empty( aCols1[ nX , nY , 14] ) , cProces , aCols1[ nX , nY , 14 ] )
								(cAlias)->(&(cPrefix+'PERIODO'))	:= IF( Empty( aCols1[ nX , nY , 15] ) , cPer    , aCols1[ nX , nY , 15 ] )
								(cAlias)->(&(cPrefix+'ROTEIR'))		:= IF( Empty( aCols1[ nX , nY , 16] ) , cRot    , aCols1[ nX , nY , 16 ] )
								(cAlias)->(&(cPrefix+'NUMPAG'))		:= IF( Empty( aCols1[ nX , nY , 17] ) , cNrPag  , aCols1[ nX , nY , 17 ] )								
								(cAlias)->(&(cPrefix+'CODFUNC'))	:= IF( Empty( aCols1[ nX , nY , 18] ) , cCodFun , aCols1[ nX , nY , 18 ] )
								(cAlias)->(&(cPrefix+'DATAAPO'))	:= IF( Empty( aCols1[ nX , nY , 19] ) , dDataApo, aCols1[ nX , nY , 19 ] )
								( cAlias )->( MsUnLock() )
							EndIF
						EndIF
					EndIf
				EndIf
			//-- Exclus„o das Marca‡”es no SP8 ou SPG
			ElseIf ( nOpcX == 3 )
				IF ( lGoto := !Empty( aOldCols1[nX, nY, 2] ) )
					(cAlias)->(dbGoto(aCols1[nX, nY, 2]))
					IF RecLock(cAlias,.F.)
						IF !( cAlias )->( FkDelete( @cMsgErr ) )
							RollBackDelTran( cMsgErr )
						EndIF
						( cAlias )->( MsUnLock() )
					EndIF	
				EndIF	
			EndIf
		Next nY
	Next nX    
	
End Transaction         

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Libera Registros Locados		                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
FreeLocks( cAlias , NIL , .T. )
FreeLocks( IF( lPona180 , "SPH" , "SPC" ) , NIL , .T. )
FreeLocks( "SPK" , NIL , .T. )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Reinicializa variavel de controle dos registros que ja foram desbloqueados   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aColsRec := {}

Return( NIL )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fMoveCols ³ Autor ³ Equipe Advanced RH    ³ Data ³24/04/1996³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Move colunas no array aCols                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Pona040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fMoveCols(oGet,nOpcAo,nMinMax)

Local aColsAux		:= {}
Local aColsAux1		:= {}
Local aTpMarc    	:= {}
Local aSvoGet		:= {}  
Local cHelp			:= ""
Local cOrdem    	:= ""
Local cConteudo		:= ""
Local cAlias		:= IF( lPona180 , "SPG" , "SP8" )
Local cPrefix		:= ( PrefixoCpo( cAlias ) + "_" )
Local dNewData		:= Ctod("//")
Local dDataApo		:= Ctod("//")
Local lPasso     	:= .T.
Local lInterv	 	:= .F.
Local nNewMarc		:= 0
Local nX        	:= 0
Local nY        	:= 0
Local nPos      	:= 0
Local nTamLin   	:= 0
Local nLinDe    	:= 0
Local nColPara  	:= 0
Local nLinPara  	:= 0
Local nGuardaCol	:= 0
Local nGuardaLin	:= 0
Local nInterv	 	:= 0
Local nHrTrab	 	:= 0
Local nColDe     	:= oGet:oBrowse:nColPos
Local nAleato	 	:= 0

DEFAULT nMinMax := 0

TabMarc( "SPJ" , @aTpMarc )

nLinDe     := n
nGuardaLin := n
nGuardaCol := nColDe
cConteudo  := aCols[nLinDe,nColDe]

If ( nColDe == 1 ) .or.  ( nColDe == 2 ) .or. ;
   ( nOpcAo == 1 ) .and. ( nLinDe == Len(aCols) ) .and. ( nColDe == Len(aCols[nLinDe]) ) .or. ;
   (( nOpcAo == 1 ) .and. Empty(cConteudo) ) 
	Help(" ",1,"P040NPODE")
	Return (.F.)
Endif

//-- Inclus„o
//-- Nao Permite incluir coluna se nao houve coluna em branco entre a posicao atual e a
//-- ultima posicao do periodo de apontamento
If  ( nOpcAo == 1 ) 
    nY:=nColDe
	For nX := nLinDe To Len(aCols)
		For nY  := nY To Len(aCols[nX])
			//-- A marca‡„o em quest„o ‚ a £ltima da Tabela
			If ((nX == Len(aCols))  .and.  (nY == Len(aCols[nX])))
				//-- Deleta a £ltima marca‡„o da £ltima coluna
				If  !EMPTY(aCols[nX,nY])
					cHelp := Space(01) + OEMTOANSI(STR0123) + CRLF //"Todas as Colunas Dispon¡veis est„o"
					cHelp += Space(01) + OEMTOANSI(STR0124) + CRLF //"preenchidas. Para Incluir uma Nova"
					cHelp += Space(01) + OEMTOANSI(STR0125) + CRLF //"Nova Marca‡„o Elimine Uma Antiga..."
					cHelp += Space(50) + CRLF
					cHelp += Space(50) + CRLF
					cHelp += Space(50) + CRLF
					Help(" ",1,"PN040NCOL",,cHelp, 1 , 0 )
					Return (.F.)
				EndIf
				nY := ( Len(aCols[nX]) + 1 )
				nX := ( Len(aCols) + 1 )
			Else
				If  EMPTY(aCols[nX,nY])  
					nY := ( Len(aCols[nX]) + 1 )
				    nX := ( Len(aCols) + 1 )
				Endif
			Endif	
		Next nY
		nY:=3
	Next nX
Endif
//-- Redefine Vari veis locais
aColsAux  := aClone(aCols)
aCols1Aux := aClone(aCols1)
nTamLin   := Len(aCols[n])
nColPara  := nColDe
nLinPara  := nLinDe

//aTpMarc Devera Ter o Tamanho das Colunas de Horas
For nX := 1 To nTamLin
	aAdd( aTpMarc , "" )
Next nX

//-- Apaga o Conte£do atual
If ( nOpcAo == 1 )
	aColsAux[nLinDe,nColDe] := Space(5)
	aCols1[nLinDe,nColDe,01] := Space(5)
	aCols1[nLinDe,nColDe,02] := 0
	aCols1[nLinDe,nColDe,03] := Space( Len( (cAlias)->( cPrefix+"GIRO" ) ) )
	aCols1[nLinDe,nColDe,04] := Space( Len( (cAlias)->( cPrefix+"FUNCAO" ) ) )
	aCols1[nLinDe,nColDe,05] := Space( Len( (cAlias)->( cPrefix+"CC" ) ) )
	aCols1[nLinDe,nColDe,06] := Space( Len( (cAlias)->( cPrefix+"APONTA") ) )
	aCols1[nLinDe,nColDe,07] := Space( Len( (cAlias)->( cPrefix+"FLAG" ) ) )
	aCols1[nLinDe,nColDe,09] := Space( Len( (cAlias)->( cPrefix+"RELOGIO" ) ) )
	aCols1[nLinDe,nColDe,10] := Space( Len( (cAlias)->( cPrefix+"TPMARCA" ) ) )
	aCols1[nLinDe,nColDe,11] := Space( Len( (cAlias)->( cPrefix+"PAPONTA" ) ) )
	aCols1[nLinDe,nColDe,12] := Space( Len( (cAlias)->( cPrefix+"DEPTO" ) ) )
	aCols1[nLinDe,nColDe,13] := Space( Len( (cAlias)->( cPrefix+"POSTO" ) ) )
	aCols1[nLinDe,nColDe,14] := Space( Len( (cAlias)->( cPrefix+"PROCES" ) ) )
	aCols1[nLinDe,nColDe,15] := Space( Len( (cAlias)->( cPrefix+"PERIODO" ) ) )
	aCols1[nLinDe,nColDe,16] := Space( Len( (cAlias)->( cPrefix+"ROTEIR" ) ) )
	aCols1[nLinDe,nColDe,17] := Space( Len( (cAlias)->( cPrefix+"NUMPAG" ) ) )
	aCols1[nLinDe,nColDe,18] := Space( Len( (cAlias)->( cPrefix+"CODFUNC" ) ) )
	aCols1[nLinDe,nColDe,20] := ""
	aCols1[nLinDe,nColDe,21] := 0
	aOldCols1[nLinDe,nColDe] := aClone(aCols1[nLinDe,nColDe])
Endif

//-- Inclus„o ou Exclus„o de Marca‡„o
If ( ( nOpcAo == 1 ) .or. ( nOpcAo == 2 ) )
	For nX := nLinDe To If(nOpcAo==1,Len(aCols),Len(aColsAux))
		For nY  := nColDe To nTamLin
			nColPara ++
			If nColPara > nTamLin 
				If ( nOpcAo == 2 ) .AND. (  nLinPara == Len(aColsAux) )
				    nX		:= Len(aColsAux)
				    nY		:= Len(aColsAux[nX])
                Else    
	               	nLinPara ++
                Endif      
				nColPara := 3
			Endif
			//-- A marca‡„o em quest„o ‚ a £ltima da Tabela
			If ( ( nX == Len(aColsAux) ) .and. ( nY == Len(aColsAux[nX]) ) )
				//-- Deleta a £ltima marca‡„o da £ltima coluna
				If ( nOpcAo == 2 )
					aColsAux[nX,nY]		:= Space(5)
					aCols1[nX,nY,01]	:= Space(5)
					aCols1[nX,nY,05]	:= Space(1)
					aCols1[nX,nY,06]	:= "N"
					aCols1[nX,nY,07]	:= Space(1)
					aCols1[nX,nY,08]	:= Ctod("//")
					aCols1[nX,nY,09]	:= Space(2)
					aCols1[nX,nY,10]	:= Space(2)
					aCols1[nX,nY,11]	:= cPerAponta
				EndIf
			//-- Quando a pr¢xima coluna estiver em branco
			ElseIf Empty(aColsAux[nLinPara,nColPara])
				//-- Inclus„o de Colunas
				If ( nOpcAo == 1 )
					//-- Insere uma Coluna com o Conte£do da Coluna Anterior
					aColsAux[nLinPara, nColPara] := aCols[nX, nY]
					aCols1[nLinPara,nColPara,01] := aCols1Aux[nX, nY, 1]
					aCols1[nLinPara,nColPara,02] := aCols1Aux[nX, nY, 2]
					aCols1[nLinPara,nColPara,05] := aCols1Aux[nX, nY, 05]
					aCols1[nLinPara,nColPara,06] := "N"
					aCols1[nLinPara,nColPara,07] := aCols1Aux[nX, nY, 07]
					aCols1[nLinPara,nColPara,08] := aCols1Aux[nX, nY, 08]
					aCols1[nLinPara,nColPara,09] := aCols1Aux[nX, nY, 09]
					aCols1[nLinPara,nColPara,10] := aCols1Aux[nX, nY, 10]
					aCols1[nLinPara,nColPara,11] := aCols1Aux[nX, nY, 11]
					aCols1[nLinPara,nColPara,12] := aCols1Aux[nX, nY, 12]
					aCols1[nLinPara,nColPara,13] := aCols1Aux[nX, nY, 13]
					aCols1[nLinPara,nColPara,14] := aCols1Aux[nX, nY, 14]
					aCols1[nLinPara,nColPara,15] := aCols1Aux[nX, nY, 15]
					aCols1[nLinPara,nColPara,16] := aCols1Aux[nX, nY, 16]
					aCols1[nLinPara,nColPara,17] := aCols1Aux[nX, nY, 17]
					aCols1[nLinPara,nColPara,18] := aCols1Aux[nX, nY, 18]
					aCols1[nLinPara,nColPara,19] := aCols1Aux[nX, nY, 19]
					aCols1[nLinPara,nColPara,20] := aCols1Aux[nX, nY, 20]
					aCols1[nLinPara,nColPara,21] := aCols1Aux[nX, nY, 21]
					aOldCols1[nLinPara,nColPara] := aClone(aCols1[nLinPara,nColPara])
				//-- Exclus„o de Colunas
				ElseIf ( nOpcAo == 2 )
					If ( nColPara > 3 )
						//-- Deleta o Conte£do Atual
						aColsAux[nLinPara,nColPara-1]	:= Space(5)
						aCols1[nLinpara,nColPara-1,01]	:= Space(5)
						aCols1[nLinpara,nColPara-1,05]	:= Space(1)
						aCols1[nLinpara,nColPara-1,06]	:= "N"
						aCols1[nLinpara,nColPara-1,07]	:= Space(1)
						aCols1[nLinpara,nColPara-1,08]	:= Ctod("//")
						aCols1[nLinpara,nColPara-1,09]	:= Space(2)
						aCols1[nLinpara,nColPara-1,10]	:= Space(2)
						aCols1[nLinpara,nColPara-1,11]	:= cPerAponta
					ElseIf ( nLinPara > 1 )
						//-- Deleta o Conte£do da éltima Coluna da linha anterior
						aColsAux[nLinPara-1, Len(aColsAux[nLinPara-1])]	:= Space(5)
						aCols1[nLinPara-1,Len(aColsAux[nLinPara-1]),01]	:= Space(5)
						aCols1[nLinPara-1,Len(aColsAux[nLinPara-1]),05]	:= Space(1)
						aCols1[nLinPara-1,Len(aColsAux[nLinPara-1]),06]	:= "N"
						aCols1[nLinPara-1,Len(aColsAux[nLinPara-1]),07]	:= Space(1)
						aCols1[nLinPara-1,Len(aColsAux[nLinPara-1]),08]	:= Ctod("//")
						aCols1[nLinPara-1,Len(aColsAux[nLinPara-1]),09]	:= Space(2)
						aCols1[nLinPara-1,Len(aColsAux[nLinPara-1]),10]	:= Space(2)
						aCols1[nLinPara-1,Len(aColsAux[nLinPara-1]),11]	:= cPerAponta
					Endif
				Endif
				nY := ( nTamLin + 1 )
				nX := ( Len(aCols) + 1 )
			//-- Quando a pr¢xima coluna estiver preenchida
			Else
				//-- Inclus„o de Colunas
				If ( nOpcAo == 1 )
					//-- Insere uma Coluna com o Conte£do da Coluna Anterior
					aColsAux[nLinPara,nColPara]		:= aCols[nX,nY]
					aCols1[nLinPara,nColPara,01]	:= aCols1Aux[nX,nY,01]
					aCols1[nLinPara,nColPara,02] 	:= aCols1Aux[nX,nY,02]
					aCols1[nLinPara,nColPara,05]	:= aCols1Aux[nX,nY,05]
					aCols1[nLinPara,nColPara,06]	:= "N"
					aCols1[nLinPara,nColPara,07]	:= aCols1Aux[nX,nY,07]
					aCols1[nLinPara,nColPara,08]	:= aCols1Aux[nX,nY,08]
					aCols1[nLinPara,nColPara,09]	:= aCols1Aux[nX,nY,09]
					aCols1[nLinPara,nColPara,10]	:= aCols1Aux[nX,nY,10]
					aCols1[nLinPara,nColPara,11]	:= aCols1Aux[nX,nY,11]
					aCols1[nLinPara,nColPara,12]	:= aCols1Aux[nX,nY,12]
					aCols1[nLinPara,nColPara,13]	:= aCols1Aux[nX,nY,13]
					aCols1[nLinPara,nColPara,14]	:= aCols1Aux[nX,nY,14]
					aCols1[nLinPara,nColPara,15]	:= aCols1Aux[nX,nY,15]
					aCols1[nLinPara,nColPara,16]	:= aCols1Aux[nX,nY,16]
					aCols1[nLinPara,nColPara,17]	:= aCols1Aux[nX,nY,17]
					aCols1[nLinPara,nColPara,18]	:= aCols1Aux[nX,nY,18]
					aCols1[nLinPara,nColPara,19]	:= aCols1Aux[nX,nY,19]
					aCols1[nLinPara,nColPara,20]	:= aCols1Aux[nX,nY,20]
					aCols1[nLinPara,nColPara,21]	:= aCols1Aux[nX,nY,21]
				//-- Exclus„o de Colunas
				ElseIf ( nOpcAo == 2 )
					//-- Deleta o Conte£do da Coluna atual, e o preenche com o Conte£do da coluna seguinte
					aColsAux[nX,nY]		:= aCols[nLinPara,nColPara]
					aCols1[nX,nY,01]	:= aCols1[nLinPara,nColPara,01]
					aCols1[nX,nY,02] 	:= aCols1[nLinPara,nColPara,02]					
					aCols1[nX,nY,05]	:= aCols1[nLinPara,nColPara,05]
					aCols1[nX,nY,06]	:= "N"
					aCols1[nX,nY,07]	:= aCols1[nLinPara,nColPara,07]
					aCols1[nX,nY,08]	:= aCols1[nLinPara,nColPara,08]
					aCols1[nX,nY,09]	:= aCols1[nLinPara,nColPara,09]
					aCols1[nX,nY,10]	:= aCols1[nLinPara,nColPara,10]
					aCols1[nX,nY,11]	:= aCols1[nLinPara,nColPara,11]
					aCols1[nX,nY,12]	:= aCols1[nLinPara,nColPara,12]
					aCols1[nX,nY,13]	:= aCols1[nLinPara,nColPara,13]
					aCols1[nX,nY,14]	:= aCols1[nLinPara,nColPara,14]
					aCols1[nX,nY,15]	:= aCols1[nLinPara,nColPara,15]
					aCols1[nX,nY,16]	:= aCols1[nLinPara,nColPara,16]
					aCols1[nX,nY,17]	:= aCols1[nLinPara,nColPara,17]
					aCols1[nX,nY,18]	:= aCols1[nLinPara,nColPara,18]
					aCols1[nX,nY,19]	:= aCols1[nLinPara,nColPara,19]
					aCols1[nX,nY,20]	:= aCols1[nLinPara,nColPara,20]
					aCols1[nX,nY,21]	:= aCols1[nLinPara,nColPara,21]					
				Endif
			Endif
		Next nY
		nColDe := 3
	Next nX
	//--Desflega as Marcacoes Apontadas
	For nX := nLinDe To nLinPara
		For nY := 3 To nTamLin
			aCols1[ nX , nY , 06 ] := "N"
		Next nY
	Next nX
	aCols := aClone(aColsAux)
//-- Geracao de Marcacao.
ElseIf ( nOpcAo == 3 )
	//-- Carrega a Marca‡„o do Calend rio
	If ( nPos := aScan(aTabCalend, { |x| x[CALEND_POS_DATA] == aCols1[nGuardaLin,1] .and. x[CALEND_POS_TIPO_MARC] == "1E"  } ) ) > 0
		cOrdem   := aTabCalend[nPos,CALEND_POS_ORDEM]
		dDataApo := aTabCalend[nPos,CALEND_POS_DATA_APO]
		If ( nPos := aScan(aTabCalend, { |x| x[CALEND_POS_DATA_APO] == dDataApo .and. x[CALEND_POS_TIPO_MARC] == aTpMarc[nGuardaCol-2] } ) ) > 0
			IF aTabCalend[ nPos , CALEND_POS_DATA ] >= fDtaAdmis()
				dNewData := aCols1[nGuardaLin,1] //Data de Referencia da Marcacao
				IF ( nMinMax == 0 ) //Marcacoes Normais
					aCols[nGuardaLin,nGuardaCol]    	:= StrZero(aTabCalend[ nPos , CALEND_POS_HORA ] , 5 , 2 )
					aCols1[nGuardaLin,nGuardaCol,01]	:= StrZero(aTabCalend[ nPos , CALEND_POS_HORA ] , 5 , 2 )
					aCols1[nGuardaLin,2]				:= dNewData
					aCols1[nGuardaLin,nGuardaCol,05]	:= IF(Empty(aTabCalend[nPos,CALEND_POS_CC]),SRA->RA_CC,aTabCalend[nPos,CALEND_POS_CC])
					aCols1[nGuardaLin,nGuardaCol,06]	:= "N"
					aCols1[nGuardaLin,nGuardaCol,07]	:= IF(Empty(aOldCols1[nGuardaLin,nGuardaCol,7]),"I","M")
					aCols1[nGuardaLin,nGuardaCol,08]	:= aTabCalend[ nPos , CALEND_POS_DATA ]
					aCols1[nGuardaLin,nGuardaCol,09]	:= IF(Empty(aOldCols1[nGuardaLin,nGuardaCol,9]),Space(2),aOldCols1[nGuardaLin,nGuardaCol,9])
					aCols1[nGuardaLin,nGuardaCol,10]	:= aTabCalend[ nPos , CALEND_POS_TIPO_MARC ]
					aCols1[nGuardaLin,nGuardaCol,11]	:= cPerAponta
					IF aTabCalend[nPos,CALEND_POS_TIPO_MARC] == "1E"
						aCols[nGuardaLin,2]			:= dNewData
					EndIF	
				Else //Marcacoes Aleatorias
					//Verifica as Horas de Intervalo da Tabela
					IF ( aTabCalend[ nPos , CALEND_POS_HRS_INTER ] > 0 .or. Subst(aTabCalend[ nPos , CALEND_POS_TIPO_MARC ],-1) == "E" )
						IF ( lInterv := ( aTabCalend[ nPos , CALEND_POS_HRS_INTER ] > 0 ) )
						    nInterv := Min( ( __Hrs2Min( aTabCalend[ nPos , CALEND_POS_HRS_INTER ] ) / 2 ) , nMinMax )
						ElseIF ( lInterv := ( aTabCalend[ Max( 1 , nPos - 1 ) , CALEND_POS_HRS_INTER ] > 0 ) )
							nInterv := Min( ( __Hrs2Min( aTabCalend[ Max( 1 , nPos - 1  ) , CALEND_POS_HRS_INTER ] ) / 2 ) , nMinMax )
						EndIF
					EndIF
					//Verifica as Horas Trabalhadas da Tabela
					IF ( aTabCalend[ nPos , CALEND_POS_HRS_TRABA ] > 0 .or. Subst(aTabCalend[ nPos , CALEND_POS_TIPO_MARC ],-1) == "S" )
						IF ( aTabCalend[ nPos , CALEND_POS_HRS_TRABA ] > 0 )
						    nHrTrab := Min( ( __Hrs2Min( aTabCalend[ nPos , CALEND_POS_HRS_TRABA ] ) / 2 ) , nMinMax )
						ElseIF ( aTabCalend[ Max( 1 , nPos - 1 ) , CALEND_POS_HRS_TRABA ] > 0 )
							nHrTrab := Min( ( __Hrs2Min( aTabCalend[ nPos - 1 , CALEND_POS_HRS_TRABA ] ) / 2 ) , nMinMax )
						EndIF
					EndIF	
					dNewData							:= aTabCalend[ nPos , CALEND_POS_DATA ]
					IF lInterv
						nNewMarc := DataHora2Ale(@dNewData,aTabCalend[ nPos , CALEND_POS_HORA ],nInterv,@nAleato,Subst(aTabCalend[nPos,CALEND_POS_TIPO_MARC],-1))
					Else
						nNewMarc := DataHora2Ale(@dNewData,aTabCalend[ nPos , CALEND_POS_HORA ],nHrTrab,@nAleato,Subst(aTabCalend[nPos,CALEND_POS_TIPO_MARC],-1))
					EndIF
					aCols[nGuardaLin,nGuardaCol]    	:= StrZero(nNewMarc,5,2)
					aCols1[nGuardaLin,nGuardaCol,01]	:= StrZero(nNewMarc,5,2) 
					aCols1[nGuardaLin,nGuardaCol,05]	:= IF(Empty(aTabCalend[nPos,CALEND_POS_CC]),SRA->RA_CC,aTabCalend[nPos,CALEND_POS_CC])
					aCols1[nGuardaLin,nGuardaCol,06]	:= "N"
					aCols1[nGuardaLin,nGuardaCol,07]	:= IF(Empty(aOldCols1[nGuardaLin,nGuardaCol,7]),"I","M")
					aCols1[nGuardaLin,nGuardaCol,08]	:= dNewData
					aCols1[nGuardaLin,nGuardaCol,09]	:= IF(Empty(aOldCols1[nGuardaLin,nGuardaCol,9]),Space(2),aOldCols1[nGuardaLin,nGuardaCol,9])
					aCols1[nGuardaLin,nGuardaCol,10]	:= aTabCalend[ nPos , CALEND_POS_TIPO_MARC ]
					aCols1[nGuardaLin,nGuardaCol,11]	:= cPerAponta
					IF aTabCalend[nPos,CALEND_POS_TIPO_MARC] == "1E"
						aCols[nGuardaLin	,2]		:= dNewData 
						aCols1[nGuardaLin	,2]		:= dNewData
					EndIF	
				EndIF	
			EndIF	
		EndIf
	EndIf
	If Empty(aCols[nGuardaLin,nGuardaCol])
		Help(" ",1,"P040SSP1")
	Endif
	dbSelectArea(cAlias)
Endif

aSvoGet := SaveoGet( "ALL" , oGet )
oGet:oBrowse:lDisablePaint := .T.
oGet:ForceRefresh()
oGet:oBrowse:lDisablePaint := .F.
RestartoGet( aSvoGet , "ALL", @oGet )

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FCompZeros³ Autor ³ J. Ricardo            ³ Data ³24/04/1996³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Coloca os dados do aCols no padrao 08:00 (horas)           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Pona040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function FCompZeros(cCampo)

Local cSetVar

If Empty(&(cCampo)) .or. &(cCampo) == "  .  "
	cSetVar := Space(5)
Else
	cSetVar := StrZero(Val(&(cCampo)),5,2)
Endif
SetMemVar( cCampo , cSetVar )

Return( .T. )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ F_Alt_T  ³ Autor ³Marinaldo de Jesus     ³ Data ³08/03/2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Mostra os Totais de Ocorrencias.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function F_ALT_T( oGet , nOpc , lForceApont )

DEFAULT lForceApont := .F.

IF ( nOpc == 2 ) //-- Caso seja Alteracao 
	//-- Prepara o Array aOrdena para gravacao e Classifica o aCols
	IF lForceApont .or. ( !fCompArray( aCols1 , aLastCols1 ) .or. Empty( aResult ) .or. lGeraAuto )
		aOrdena := {}
		aResult := {}
		IF( lForceApont , aLastApo := {} , NIL )
		lGeraAuto := .F.
		PreparaCla(@aOrdena,@aResult,nColMarc,.F.,NIL,NIL,NIL,NIL,lForceApont)
		IF ( Len( aLastApo ) > 0 )
			GetNewResult( @aResult , aLastApo , aCols1 , aLastCols1 )
		EndIF
		aLastCols1 := aClone( aCols1 )
	EndIF
ElseIF ( nOpc == 4 ) //Apenas Visualizacao
	IF !Empty( aLastApo )
		aResult := aClone( aLastApo )
	Else
		aResult := GetLastApo( dPerIni , dPerFim , IF( lPona180 , "SPH" , "SPC" ) )
	EndIF	
EndIF

IF ( Len( aResult ) > 0 )
	//--Mostrar os Totais Apontados.
	fMostraApo(nOpc,aResult,oGet)
Else
	MsgAlert( OemToAnsi( STR0107 ) , STR0108 )	//"Nao Existem Apontamentos para o Funcionario"###"Aviso"
EndIF

IF ( nOpc == 4 ) //Apenas Visualizacao
	aResult := {}
EndIF

Return( NIL )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³F_ALT_H   ³ Autor ³Marinaldo de Jesus     ³ Data ³12/11/2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Consulta a tabela de horario padrao                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Pona040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function F_ALT_H(oGet,aArray,nPosDele,aHeaderLoc,lAcumulado,lSetKey,nPosCalend,lCalendFunc)

Local aMarcacoes	:= {}
Local aListBox	 	:= {}
Local aCloneCalend	:= {}
Local aKeys			:= GetKeys()
Local bChange		:= { || .T. }
Local bSet15		:= { || oDlg:End() }
Local bSet24		:= { || oDlg:End() }
Local bNIL			:= { || NIL }
Local bSvSet15		:= { || NIL }
Local bSvSet24		:= { || NIL }
Local cDsrAutPa		:= PosSP9("036N",SRA->RA_FILIAL,"P9_CODIGO",2)
Local cAfasta   	:= ""
Local cPrefix		:= ( PrefixoCpo( "SP8" ) + "_" )
Local cP8Turno		:= Space( GetSx3Cache( "P8_TURNO" , "X3_TAMANHO" ) )
Local nX			:= 0
Local nLenX			:= 0
Local nY			:= 0
Local nLenY			:= 0
Local nLenMarc		:= 0
Local nLenTab		:= 0
Local nTamP8Ordem	:= ( GetSx3Cache( "P8_ORDEM" , "X3_TAMANHO" ) ) 

Local oDlg
Local oLbox
Local oFont
Local oGroup
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaração de arrays para dimensionar tela		         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}

Local aAdv1Size		:= {}
Local aInfo1AdvSize	:= {}
Local aObj1Size		:= {}
Local aObj1Coords	:= {}

DEFAULT lAcumulado	:= .F.
DEFAULT lSetKey		:= .F.
DEFAULT nPosCalend	:= 0 
DEFAULT lCalendFunc	:= .T.

Begin Sequence

	IF ( lCalendFunc )

		IF aArray == NIL //Pona040
			nLenX := Len(aCols)
			For nX := 1 To nLenX
				//-- Implementa o array aMarcacoes p/ utilizacao em fDiasFolga().
				nLenY := Len(aCols[nX])
				For nY := 3 To nLenY
					If ValType(aCols[nX,nY]) == "C" .and. !Empty(aCols[nX,nY])
						aAdd( aMarcacoes , Array( ELEMENTOS_AMARC ) )
						nLenMarc := Len( aMarcacoes )
						aMarcacoes[ nLenMarc , AMARC_DATA		] := aCols[nX,2]										//01 - Data
						aMarcacoes[ nLenMarc , AMARC_HORA		] := aCols[nX,nY]										//02 - Hora
						aMarcacoes[ nLenMarc , AMARC_ORDEM		] := StrZero( nX , nTamP8Ordem )						//03 - Ordem
						aMarcacoes[ nLenMarc , AMARC_FLAG		] := aCols1[nX,nY,07]									//04 - Flag
						aMarcacoes[ nLenMarc , AMARC_RECNO		] := 0													//05 - Recno
						aMarcacoes[ nLenMarc , AMARC_TURNO		] := cP8Turno  											//06 - Turno
						aMarcacoes[ nLenMarc , AMARC_FUNCAO		] := aCols1[nX,nY,03]									//07 - Funcao
						aMarcacoes[ nLenMarc , AMARC_GIRO		] := aCols1[nX,nY,04]									//08 - Giro
						aMarcacoes[ nLenMarc , AMARC_CC			] := aCols1[nX,nY,05]									//09 - Centro de Custo
						aMarcacoes[ nLenMarc , AMARC_APONTA		] := aCols1[nX,nY,06]									//10 - Flag de Apontamento
						aMarcacoes[ nLenMarc , AMARC_RELOGIO	] := aCols1[nX,nY,09]									//11 - Relogio
						aMarcacoes[ nLenMarc , AMARC_TIPOMARC	] := aCols1[nX,nY,10]									//12 - Tipo de Marcacao
						aMarcacoes[ nLenMarc , AMARC_L_ORIGEM	] := ( aMarcacoes[ nLenMarc , AMARC_FLAG ] $ "M,I" )	//13 - Logico
						aMarcacoes[ nLenMarc , AMARC_DTHR2STR	] := DataHora2Str( aCols[nX,2] , aCols[nX,nY] )			//14 - String de Data/Hora 	
						aMarcacoes[ nLenMarc , AMARC_PERAPONTA	] := aCols1[nX,nY,11]                             		//15 - Periodo de Apontamento
			   			aMarcacoes[ nLenMarc , AMARC_DEPTO  	] := aCols1[nX,nY,12]                  					//20 - Depto
			   			aMarcacoes[ nLenMarc , AMARC_POSTO  	] := aCols1[nX,nY,13]                  					//21 - Posto
			  			aMarcacoes[ nLenMarc , AMARC_PROCESSO  	] := aCols1[nX,nY,14]                  					//16 - Processo
			  			aMarcacoes[ nLenMarc , AMARC_ROTEIRO  	] := aCols1[nX,nY,16]                             		//17 - Roteiro
			  			aMarcacoes[ nLenMarc , AMARC_PERIODO  	] := aCols1[nX,nY,15]                           	    //18 - Periodo
			  			aMarcacoes[ nLenMarc , AMARC_NUM_PAGTO 	] := aCols1[nX,nY,17]                             		//19 - Num. Pagto
			  			aMarcacoes[ nLenMarc , AMARC_CODFUNC  	] := aCols1[nX,nY,18]                  					//22 - Cod. Func.
			  			aMarcacoes[ nLenMarc , AMARC_DATAAPO  	] := aCols1[nX,nY,19]                  					//23 - Data de Apontamento
					Endif
				Next nY
			Next nX
		Else //Pona230
			cPrefix := IF( lAcumulado , ( PrefixoCpo( "SPG" ) + "_" ) , cPrefix )
			nLenX := Len( aArray )
			For nX := 1 To nLenX
				IF IF(ValType(aArray[ nX , nPosDele ]) == "L", !aArray[ nX , nPosDele ] , .T. )
					aAdd( aMarcacoes , Array( ELEMENTOS_AMARC ) )
					nLenMarc := Len( aMarcacoes )
					aMarcacoes[ nLenMarc , AMARC_DATA		] := aArray[ nX , GdFieldPos(cPrefix+"DATA"		,aHeaderLoc )]							//01 - Data da Marcacao
					aMarcacoes[ nLenMarc , AMARC_HORA		] := aArray[ nX , GdFieldPos(cPrefix+"HORA"		,aHeaderLoc )]							//02 - Hora da Marcacao
					aMarcacoes[ nLenMarc , AMARC_ORDEM		] := aArray[ nX , GdFieldPos(cPrefix+"ORDEM"	,aHeaderLoc )]							//03 - Ordem da Marcacao
					aMarcacoes[ nLenMarc , AMARC_FLAG		] := aArray[ nX , GdFieldPos(cPrefix+"FLAG"		,aHeaderLoc )]							//04 - Flag da Marcacao
					aMarcacoes[ nLenMarc , AMARC_RECNO		] := 0																					//05 - Recno no SP8 ou SPG
					aMarcacoes[ nLenMarc , AMARC_TURNO		] := aArray[ nX , GdFieldPos(cPrefix+"TURNO"	,aHeaderLoc )]							//06 - Turno de Trabalho
					aMarcacoes[ nLenMarc , AMARC_FUNCAO		] := aArray[ nX , GdFieldPos(cPrefix+"FUNCAO"	,aHeaderLoc )]							//07 - Funcao	
					aMarcacoes[ nLenMarc , AMARC_GIRO		] := aArray[ nX , GdFieldPos(cPrefix+"GIRO"		,aHeaderLoc )]							//08 - Giro
					aMarcacoes[ nLenMarc , AMARC_CC			] := aArray[ nX , GdFieldPos(cPrefix+"CC"		,aHeaderLoc )]							//09 - Centro de Custo
					aMarcacoes[ nLenMarc , AMARC_APONTA		] := aArray[ nX , GdFieldPos(cPrefix+"APONTA"	,aHeaderLoc )]							//10 - Flag de Apontamento
					aMarcacoes[ nLenMarc , AMARC_RELOGIO	] := aArray[ nX , GdFieldPos(cPrefix+"RELOGIO"	,aHeaderLoc )]							//11 - Relogio
			    	aMarcacoes[ nLenMarc , AMARC_TIPOMARC	] := aArray[ nX , GdFieldPos(cPrefix+"TPMARCA"	,aHeaderLoc )]							//12 - Tipo da Marcacao
			    	aMarcacoes[ nLenMarc , AMARC_L_ORIGEM	] := ( aMarcacoes[ nLenMarc , AMARC_FLAG ] $ "M,I" )									//13 - Logico
			    	aMarcacoes[ nLenMarc , AMARC_DTHR2STR	] := DataHora2Str(aMarcacoes[nLenMarc,AMARC_DATA] ,aMarcacoes[ nLenMarc , AMARC_HORA])	//14 - String de Data/Hora 	
					aMarcacoes[ nLenMarc , AMARC_PERAPONTA	] := aArray[ nX , GdFieldPos(cPrefix+"PAPONTA"	,aHeaderLoc )]                          //15 - Periodo de Apontamento
			   		aMarcacoes[ nLenMarc , AMARC_DEPTO  	] := aArray[ nX , GdFieldPos(cPrefix+"DEPTO"	,aHeaderLoc )]                  		//16 - Depto
			  		aMarcacoes[ nLenMarc , AMARC_POSTO  	] := aArray[ nX , GdFieldPos(cPrefix+"POSTO"	,aHeaderLoc )]                  		//17 - Posto
			  		aMarcacoes[ nLenMarc , AMARC_PROCESSO  	] := aArray[ nX , GdFieldPos(cPrefix+"PROCES"	,aHeaderLoc )]                  		//18 - Processo
			   		aMarcacoes[ nLenMarc , AMARC_ROTEIRO  	] := aArray[ nX , GdFieldPos(cPrefix+"ROTEIR"	,aHeaderLoc )]                          //19 - Roteiro
			  		aMarcacoes[ nLenMarc , AMARC_PERIODO  	] := aArray[ nX , GdFieldPos(cPrefix+"PERIODO"	,aHeaderLoc )]                          //20 - Periodo
			  		aMarcacoes[ nLenMarc , AMARC_NUM_PAGTO 	] := aArray[ nX , GdFieldPos(cPrefix+"NUMPAG"	,aHeaderLoc )]                          //21 - Num. Pagto
			  		aMarcacoes[ nLenMarc , AMARC_CODFUNC  	] := aArray[ nX , GdFieldPos(cPrefix+"CODFUNC"  ,aHeaderLoc )]                  		//22 - Cod. Func.
			  		aMarcacoes[ nLenMarc , AMARC_DATAAPO  	] := aArray[ nX , GdFieldPos(cPrefix+"DATAAPO"  ,aHeaderLoc )]                  		//23 - Data APontamento.
			    EndIF
			Next nX
		EndIF
			
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Remonta Calendario para funcionarios com Turnos Opcionais   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		RecriaCalend( @aTabCalend, @aTabPadrao,,aMarcacoes )
		
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Salva o Calendario que podera ter o Conteudo Modificado  por³
		³ fDiasFolga()												  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		aCloneCalend := aClone( aTabCalend )
		
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Gera as folgas automaticas								  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		fDiasFolga(aClone(aMarcacoes),@aTabCalend,dPerIni,dPerFim,cDsrAutPa,lAcumulado,.F.)
	
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta o aListBox de Acordo com o Calendario de Marcacoes    ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !GetCalendListBox( @aListBox , aTabCalend , NIL , lCalendFunc )
		Break
	EndIF
	
	IF !Empty( aListBox )        
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta as Dimensoes dos Objetos         					   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		
		aAdvSize		:= MsAdvSize(,.T.,370)
		aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }					 
		aAdd( aObjCoords , { 000 , 025 , .T. , .F. } )				//1-Cabecalho
		aAdd( aObjCoords , { 000 , 003 , .T. , .F. } )				//1-Calendario
		aAdd( aObjCoords , { 000 , 000 , .T. , .T. , .T. } )		//3-ListBox 
		aObjSize	:= MsObjSize( aInfoAdvSize , aObjCoords )

		//1. Linha - Divisao em colunas cabecalho
		aAdv1Size		:= aClone(aObjSize[1])
		aInfo1AdvSize	:= { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 1 , 1 }					 
		aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )
		aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )
		aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )
		aObj1Size	:= MsObjSize( aInfo1AdvSize , aObj1Coords,,.T. )

		
		DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
		DEFINE MSDIALOG oDlg  FROM aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] PIXEL TITLE OemToAnsi( STR0052 ) 								// 'Consulta de Hor rios'

			IF ( lCalendFunc )
	
				@ aObj1Size[1,1] , aObj1Size[1,2] GROUP oGroup TO aObj1Size[1,3],aObj1Size[1,4] LABEL OemToAnsi(STR0039) OF oDlg PIXEL	// "Matricula:"
				oGroup:oFont:= oFont
				@ aObj1Size[2,1] , aObj1Size[2,2] GROUP oGroup TO aObj1Size[2,3],aObj1Size[2,4] LABEL OemToAnsi(STR0040) OF oDlg PIXEL	// "Nome:"
				oGroup:oFont:= oFont
				@ aObj1Size[3,1] , aObj1Size[3,2] GROUP oGroup TO aObj1Size[3,3],aObj1Size[3,4] LABEL OemToAnsi(STR0106) OF oDlg PIXEL	// "Admiss„o:"
				oGroup:oFont:= oFont
			
				@ aObj1Size[1,1]+10 , aObj1Size[1,2]+5 SAY StrZero(Val(SRA->RA_MAT),Len(SRA->RA_MAT))		SIZE 050,10 OF oDlg PIXEL FONT oFont
				@ aObj1Size[2,1]+10 , aObj1Size[2,2]+5 SAY OemToAnsi(SRA->RA_NOME) 						SIZE 146,10 OF oDlg PIXEL FONT oFont
				@ aObj1Size[3,1]+10 , aObj1Size[3,2]+5 SAY Dtoc(fDtaAdmis())					   			SIZE 050,10 OF oDlg PIXEL FONT oFont
			
			EndIF
			
			@ aObjSize[2,1] , aObjSize[2,2]	SAY OemToAnsi( STR0029 ) SIZE 146,10 OF oDlg PIXEL FONT oFont								// "Calend rio"
			ListBoxCalend( aObjSize[3] , @oDlg , aListBox , @oLBox , bChange  )

			IF ( lCalendFunc )
			
				IF ( aArray == NIL ) .and. Empty( nPosCalend )	//Pona040
					nPosCalend := aScan( aListBox , { |x| x[ CalendRetCpo( cPrefix+"ORDEM" , .T. , oLBox ) ] == aCols1[ n , Len( aCols1[n] ) ] } )
				Else					//Pona230
				    IF Empty(nPosCalend) 						//Pona230
						nPosCalend := aScan( aListBox , { |x| x[ CalendRetCpo( cPrefix+"ORDEM" , .T. , oLBox ) ] == aCols[ n , GdFieldPos( cPrefix+"ORDEM",aHeaderLoc ) ] } )
				    EndIF
				EndIF
				
				IF ( nPosCalend > 0 )
					oLBox:nAt := nPosCalend
				EndIF
			
			EndIF    
				
		aButtons := PonChoiBar(,,"0",.T.,lAcumulado)
		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,bSet15,bSet24,Nil,aButtons) CENTERED
		
	EndIF

End Sequence


	
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura o Calendario que foi Modificado em fDiasFolga()	  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lCalendFunc )
	aTabCalend := aClone( aCloneCalend )
EndIF	
	                   
RestKeys(aKeys)

Return( .T. )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fMostraApo³ Autor ³Equipe Advanced RH     ³ Data ³24/04/1996³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Mostra o arquivo de resultados do apontamento              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Pona040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fMostraApo(nOpc,aResult,oGet,lSetKey,lAcumulado)

Local aKeys		:= GetKeys()
Local aSvoGet	:= SaveoGet( "ALL" , oGet )
Local bNIL		:= { || NIL }
Local bSet15	:= { || NIL }
Local bSet24	:= { || NIL }
Local bResult	:= { || NIL }
Local baSort	:= { || NIL }
Local cAlias    := "SPC"
Local nPos      :=  0
Local oGetNew
Local oDlg
Local oFont
Local oGroup
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaração de arrays para dimensionar tela		         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}

Local aAdv1Size		:= {}
Local aInfo1AdvSize	:= {}
Local aObj1Size		:= {}
Local aObj1Coords	:= {}

DEFAULT lSetKey := .F.

Private aCols   := {}
Private aHeader := {}
Private n		:= 1

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Montar Consulta dos Apontamentos							  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aHeader := Array( 14 , 09 )

aHeader[ 01 , 01 ] := STR0018	// 'Data Ref.'
aHeader[ 01 , 02 ] := "PC_DATAPO"
aHeader[ 01 , 03 ] := Space(1)
aHeader[ 01 , 04 ] := 14
aHeader[ 01 , 05 ] := 0
aHeader[ 01 , 06 ] := NIL
aHeader[ 01 , 07 ] := CHR(251)
aHeader[ 01 , 08 ] := "C"
aHeader[ 01 , 09 ] := cAlias

aHeader[ 02 , 01 ] := STR0055	// 'Cod.'
aHeader[ 02 , 02 ] := "PC_PD"
aHeader[ 02 , 03 ] := Alltrim(X3Picture("PC_PD"))
aHeader[ 02 , 04 ] := GetSx3Cache( "PC_PD" , "X3_TAMANHO" )
aHeader[ 02 , 05 ] := 0
aHeader[ 02 , 06 ] := ""
aHeader[ 02 , 07 ] := CHR(251)
aHeader[ 02 , 08 ] := "C"
aHeader[ 02 , 09 ] := cAlias

aHeader[ 03 , 01 ] := STR0056	// 'Descricao'
aHeader[ 03 , 02 ] := "PC_DESC"
aHeader[ 03 , 03 ] := Alltrim(X3Picture("PC_DESC"))
aHeader[ 03 , 04 ] := GetSx3Cache( "PC_DESC" , "X3_TAMANHO" )
aHeader[ 03 , 05 ] := 0
aHeader[ 03 , 06 ] := Space(1)
aHeader[ 03 , 07 ] := CHR(251)
aHeader[ 03 , 08 ] := "C"
aHeader[ 03 , 09 ] := cAlias

aHeader[ 04 , 01 ] := STR0057	// 'Calculado'
aHeader[ 04 , 02 ] := "PC_QUANTC"	
aHeader[ 04 , 03 ] := Alltrim(X3Picture("PC_QUANTC"))
aHeader[ 04 , 04 ] := GetSx3Cache( "PC_QUANTC" , "X3_TAMANHO" )
aHeader[ 04 , 05 ] := GetSx3Cache( "PC_QUANTC" , "X3_DECIMAL" )
aHeader[ 04 , 06 ] := ""
aHeader[ 04 , 07 ] := CHR(251)
aHeader[ 04 , 08 ] := "N"
aHeader[ 04 , 09 ] := cAlias

aHeader[ 05 , 01 ] := STR0101	// 'Centro de Custo'
aHeader[ 05 , 02 ] := "PC_CC"
aHeader[ 05 , 03 ] := Alltrim(X3Picture("PC_CC"))
aHeader[ 05 , 04 ] := GetSx3Cache( "PC_CC" , "X3_TAMANHO" )
aHeader[ 05 , 05 ] := 0
aHeader[ 05 , 06 ] := ""
aHeader[ 05 , 07 ] := CHR(251)
aHeader[ 05 , 08 ] := "C"
aHeader[ 05 , 09 ] := cAlias

aHeader[ 06 , 01 ] := STR0132	// 'Cod. Func.'
aHeader[ 06 , 02 ] := "PC_CODFUNC"
aHeader[ 06 , 03 ] := Alltrim(X3Picture("PC_CODFUNC"))
aHeader[ 06 , 04 ] := GetSx3Cache( "PC_CODFUNC" , "X3_TAMANHO" )
aHeader[ 06 , 05 ] := 0
aHeader[ 06 , 06 ] := ""
aHeader[ 06 , 07 ] := CHR(251)
aHeader[ 06 , 08 ] := "C"
aHeader[ 06 , 09 ] := cAlias

aHeader[ 07 , 01 ] := STR0084	// 'Depto'
aHeader[ 07 , 02 ] := "PC_DEPTO"
aHeader[ 07 , 03 ] := Alltrim(X3Picture("PC_DEPTO"))
aHeader[ 07 , 04 ] := GetSx3Cache( "PC_DEPTO" , "X3_TAMANHO" )
aHeader[ 07 , 05 ] := 0
aHeader[ 07 , 06 ] := ""
aHeader[ 07 , 07 ] := CHR(251)
aHeader[ 07 , 08 ] := "C"
aHeader[ 07 , 09 ] := cAlias

aHeader[ 08 , 01 ] := STR0127	// 'Posto'
aHeader[ 08 , 02 ] := "PC_POSTO"
aHeader[ 08 , 03 ] := Alltrim(X3Picture("PC_POSTO"))
aHeader[ 08 , 04 ] := GetSx3Cache( "PC_POSTO" , "X3_TAMANHO" )
aHeader[ 08 , 05 ] := 0
aHeader[ 08 , 06 ] := ""
aHeader[ 08 , 07 ] := CHR(251)
aHeader[ 08 , 08 ] := "C"
aHeader[ 08 , 09 ] := cAlias

aHeader[ 09 , 01 ] := STR0126	// 'Processo'
aHeader[ 09 , 02 ] := "PC_PROCES"
aHeader[ 09 , 03 ] := Alltrim(X3Picture("PC_PROCES"))
aHeader[ 09 , 04 ] := GetSx3Cache( "PC_PROCES" , "X3_TAMANHO" )
aHeader[ 09 , 05 ] := 0
aHeader[ 09 , 06 ] := ""
aHeader[ 09 , 07 ] := CHR(251)
aHeader[ 09 , 08 ] := "C"
aHeader[ 09 , 09 ] := cAlias

aHeader[ 10 , 01 ] := STR0222	// 'Periodo'
aHeader[ 10 , 02 ] := "PC_PERIODO"
aHeader[ 10 , 03 ] := Alltrim(X3Picture("PC_PERIODO"))
aHeader[ 10 , 04 ] := GetSx3Cache( "PC_PERIODO" , "X3_TAMANHO" )
aHeader[ 10 , 05 ] := 0
aHeader[ 10 , 06 ] := ""
aHeader[ 10 , 07 ] := CHR(251)
aHeader[ 10 , 08 ] := "C"
aHeader[ 10 , 09 ] := cAlias

aHeader[ 11 , 01 ] := STR0129	// 'Roteiro'
aHeader[ 11 , 02 ] := "PC_ROTEIR"
aHeader[ 11 , 03 ] := Alltrim(X3Picture("PC_ROTEIR"))
aHeader[ 11 , 04 ] := GetSx3Cache( "PC_ROTEIR" , "X3_TAMANHO" )
aHeader[ 11 , 05 ] := 0
aHeader[ 11 , 06 ] := ""
aHeader[ 11 , 07 ] := CHR(251)
aHeader[ 11 , 08 ] := "C"
aHeader[ 11 , 09 ] := cAlias

aHeader[ 12 , 01 ] := STR0128	// 'Nr. Pagto'
aHeader[ 12 , 02 ] := "PC_NUMPAG"
aHeader[ 12 , 03 ] := Alltrim(X3Picture("PC_NUMPAG"))
aHeader[ 12 , 04 ] := GetSx3Cache( "PC_NUMPAG" , "X3_TAMANHO" )
aHeader[ 12 , 05 ] := 0
aHeader[ 12 , 06 ] := ""
aHeader[ 12 , 07 ] := CHR(251)
aHeader[ 12 , 08 ] := "C"
aHeader[ 12 , 09 ] := cAlias

aHeader[ 13 , 01 ] := STR0102	// 'Tipo de Marcacao'
aHeader[ 13 , 02 ] := "PC_TPMARCA"
aHeader[ 13 , 03 ] := Alltrim(X3Picture("PC_TPMARCA"))
aHeader[ 13 , 04 ] := GetSx3Cache( "PC_TPMARCA" , "X3_TAMANHO" )
aHeader[ 13 , 05 ] := 0
aHeader[ 13 , 06 ] := ""
aHeader[ 13 , 07 ] := CHR(251)
aHeader[ 13 , 08 ] := "C"
aHeader[ 13 , 09 ] := cAlias    

aHeader[ 14 , 01 ] := ""	// Coluna em Branco
aHeader[ 14 , 02 ] := "UTIMA_COL"
aHeader[ 14 , 03 ] := Space(1)
aHeader[ 14 , 04 ] := 01
aHeader[ 14 , 05 ] := 0
aHeader[ 14 , 06 ] := ""
aHeader[ 14 , 07 ] := CHR(251)
aHeader[ 14 , 08 ] := "C"
aHeader[ 14 , 09 ] := cAlias

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Carrega aCols de acordo com aResult						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
bResult := { ||	aEval(aResult, { |x| IF( !Empty(x[1]),;
									  			aAdd( aCols , {											 ; 
																Dtoc(x[ARESULT_DATA]) + " - " + DiaSemana(x[ARESULT_DATA],3)	,;//01 DATA REF
																x[ARESULT_EVENTO]												,;//02 CODIGO
																DescPdPon(x[ARESULT_EVENTO])									,;//03 DESCRICAO
																x[ARESULT_HORAS]					   							,;//04 CALCULADO
																x[ARESULT_CC]													,;//05 CENTRO DE CUSTO
																x[ARESULT_FUNCAO]												,;//06 FUNCAO
																x[ARESULT_DEPTO]								   				,;//07 DEPTO
																x[ARESULT_POSTO]								   				,;//08 POSTO
																x[ARESULT_PROCESSO]												,;//09 PROCESSO
																x[ARESULT_PERIODO]												,;//10 PERIODO 
																x[ARESULT_ROTEIRO]												,;//11 ROTEIRO
																x[ARESULT_NUM_PAGTO]											,;//12 NUMERO DE PAGTO
																x[ARESULT_TPMARCA]												,;//13 TIPO MARCACAO																
																""										 						 ;//14 BRANCO
													  		   };
											 		 ),;
										 		 NIL;
										);
				 				};
	  				  );
	  	   }			  

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Ordena aCols												  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
baSort := { || aSort(@aCols,,,{|x,y|	DtoS(CtoD(Left(x[1],Len(DTOC(MsDate()))),"ddmmyy"))+x[2]+x[6] < ;
					  					DtoS(CtoD(Left(y[1],Len(DTOC(MsDate()))),"ddmmyy"))+y[2]+y[6]	;
							  };
					);
		  }			

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ MsgRun para Display de Tela								  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
MsAguarde( { || Eval( bResult ) , Eval( bAsort ) } , OemToAnsi(STR0098) , OemToAnsi(STR0008) )//"Carregando Apontamento"###'Aguarde...'

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Monta as Dimensoes dos Objetos         					   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
aAdvSize		:= MsAdvSize(,.T.,370)
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }					 
aAdd( aObjCoords , { 000 , 025 , .T. , .F. } )		//1-Cabecalho
aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )		//2-MsGetDados 
aObjSize	:= MsObjSize( aInfoAdvSize , aObjCoords )

//1. Linha - Divisao em colunas cabecalho
aAdv1Size		:= aClone(aObjSize[1])
aInfo1AdvSize	:= { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 1 , 1 }					 
aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )
aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )
aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )
aObj1Size	:= MsObjSize( aInfo1AdvSize , aObj1Coords,,.T. )

DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0061 ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL					// "Visualiza‡„o dos Apontamentos"

	@ aObj1Size[1,1],aObj1Size[1,2] GROUP oGroup TO aObj1Size[1,3],aObj1Size[1,4] LABEL OemToAnsi(STR0039) OF oDlg PIXEL			// "Matricula:"
	oGroup:oFont:= oFont
	@ aObj1Size[2,1],aObj1Size[2,2] GROUP oGroup TO aObj1Size[2,3],aObj1Size[2,4] LABEL OemToAnsi(STR0040) OF oDlg PIXEL			// "Nome:"
	oGroup:oFont:= oFont
	@ aObj1Size[3,1],aObj1Size[3,2] GROUP oGroup TO aObj1Size[3,3],aObj1Size[3,4] LABEL OemToAnsi(STR0106) OF oDlg PIXEL			// "Admiss„o:"
	oGroup:oFont:= oFont
	
	@ aObj1Size[1,1]+10,aObj1Size[1,2]+5 SAY StrZero(Val(SRA->RA_MAT),Len(SRA->RA_MAT))	SIZE 050,10 OF oDlg PIXEL FONT oFont
	@ aObj1Size[2,1]+10,aObj1Size[2,2]+5 SAY OemToAnsi(SRA->RA_NOME) 						SIZE 146,10 OF oDlg PIXEL FONT oFont
	@ aObj1Size[3,1]+10,aObj1Size[3,2]+5 SAY Dtoc(fDtaAdmis())		  						SIZE 050,10 OF oDlg PIXEL FONT oFont
	
	oGetNew := MsGetDados():New(aObjSize[2,1],aObjSize[2,2],aObjSize[2,3],aObjSize[2,4],002,NIL,NIL,"",NIL,{},1,NIL,(Len(aCols)))
	
	bSet15 := {|| oDlg:End() }
	bSet24 := {|| oDlg:End() }
	
aButtons := PonChoiBar(oGetNew,nOpc,"2",,lAcumulado)	
ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,bSet15,bSet24,Nil,aButtons) VALID ( .T. ) CENTERED


/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura informacoes aCols, aHeader e n da GetDados Anterior³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestartoGet( aSvoGet , "ALL", @oGet )
RestKeys(aKeys)

Return( .T. )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FMostraTot³ Autor ³Marinaldo de Jesus     ³ Data ³08/03/2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Mostra somente as totalizacoes do arquivo de resultados    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Pona040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function FMostraTot( lAcumulado )

Local aNewCols 		:= {}
Local aNewHeader	:= {}
Local aTotais 		:= {}
Local aKeys			:= GetKeys()
Local cAlias		:= "SPC"
Local bNIL			:= { || NIL }
Local bSet15		:= { || NIL }
Local bSet24		:= { || NIL }
Local nX      		:= 0
Local nPos    		:= 0
Local nItem 		:= 1
Local oDlg
Local oFont
Local oLbox
Local oGroup
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaração de arrays para dimensionar tela		         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}

Local aAdv1Size		:= {}
Local aInfo1AdvSize	:= {}
Local aObj1Size		:= {}
Local aObj1Coords	:= {}


Private oGetDados

For nX := 1 To Len( aCols )
	IF ( nPos := Ascan(aTotais,{|x| x[1] = aCols[nX,2] .and. x[3] == aCols[nX,5] }) ) > 0
		aTotais[nPos,2] := __TimeSum(aTotais[nPos,2],aCols[nX,4])
	Else
		aAdd(aTotais,{aCols[nX,2],aCols[nX,4],aCols[nX,5],aCols[nX,7],aCols[nX,8],aCols[nX,9],aCols[nX,10],aCols[nX,11],aCols[nX,12],aCols[nX,6] })
	EndIF
Next nX

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Retorna se nao Tiver Totais a Mostrar						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF Len( aTotais ) == 0
	Return( NIL )
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Montar Consulta dos Apontamentos							  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aNewHeader := Array( 12 , 09 )

aNewHeader[ 01 , 01 ] := STR0055	// 'Cod.'
aNewHeader[ 01 , 02 ] := "PC_PD"
aNewHeader[ 01 , 03 ] := Alltrim(X3Picture("PC_PD"))
aNewHeader[ 01 , 04 ] := GetSx3Cache( "PC_PD" , "X3_TAMANHO" )
aNewHeader[ 01 , 05 ] := 0
aNewHeader[ 01 , 06 ] := ""
aNewHeader[ 01 , 07 ] := CHR(251)
aNewHeader[ 01 , 08 ] := "C"
aNewHeader[ 01 , 09 ] := cAlias

aNewHeader[ 02 , 01 ] := STR0056	// 'Descricao'
aNewHeader[ 02 , 02 ] := "PC_DESC"
aNewHeader[ 02 , 03 ] := Alltrim(X3Picture("PC_DESC"))
aNewHeader[ 02 , 04 ] := GetSx3Cache( "PC_DESC" , "X3_TAMANHO" )
aNewHeader[ 02 , 05 ] := 0
aNewHeader[ 02 , 06 ] := Space(1)
aNewHeader[ 02 , 07 ] := CHR(251)
aNewHeader[ 02 , 08 ] := "C"
aNewHeader[ 02 , 09 ] := cAlias

aNewHeader[ 03 , 01 ] := STR0057	// 'Calculado'
aNewHeader[ 03 , 02 ] := "PC_QUANTC"	
aNewHeader[ 03 , 03 ] := Alltrim(X3Picture("PC_QUANTC"))
aNewHeader[ 03 , 04 ] := GetSx3Cache( "PC_QUANTC" , "X3_TAMANHO" )
aNewHeader[ 03 , 05 ] := GetSx3Cache( "PC_QUANTC" , "X3_DECIMAL" )
aNewHeader[ 03 , 06 ] := ""
aNewHeader[ 03 , 07 ] := CHR(251)
aNewHeader[ 03 , 08 ] := "N"
aNewHeader[ 03 , 09 ] := cAlias

aNewHeader[ 04 , 01 ] := STR0101	// 'Centro de Custo'
aNewHeader[ 04 , 02 ] := "PC_CC"
aNewHeader[ 04 , 03 ] := Alltrim(X3Picture("PC_CC"))
aNewHeader[ 04 , 04 ] := GetSx3Cache( "PC_CC" , "X3_TAMANHO" )
aNewHeader[ 04 , 05 ] := 0
aNewHeader[ 04 , 06 ] := ""
aNewHeader[ 04 , 07 ] := CHR(251)
aNewHeader[ 04 , 08 ] := "C"
aNewHeader[ 04 , 09 ] := cAlias

aNewHeader[ 05 , 01 ] := STR0132 // 'Cod. Funcao'
aNewHeader[ 05 , 02 ] := "PC_CODFUNC"
aNewHeader[ 05 , 03 ] := Alltrim(X3Picture("PC_CODFUNC"))
aNewHeader[ 05 , 04 ] := GetSx3Cache( "PC_CODFUNC" , "X3_TAMANHO" )
aNewHeader[ 05 , 05 ] := 0
aNewHeader[ 05 , 06 ] := ""
aNewHeader[ 05 , 07 ] := CHR(251)
aNewHeader[ 05 , 08 ] := "C"
aNewHeader[ 05 , 09 ] := cAlias

aNewHeader[ 06 , 01 ] := STR0084	// 'Depto'
aNewHeader[ 06 , 02 ] := "PC_DEPTO"
aNewHeader[ 06 , 03 ] := Alltrim(X3Picture("PC_DEPTO"))
aNewHeader[ 06 , 04 ] := GetSx3Cache( "PC_DEPTO" , "X3_TAMANHO" )
aNewHeader[ 06 , 05 ] := 0
aNewHeader[ 06 , 06 ] := ""
aNewHeader[ 06 , 07 ] := CHR(251)
aNewHeader[ 06 , 08 ] := "C"
aNewHeader[ 06 , 09 ] := cAlias

aNewHeader[ 07 , 01 ] := STR0127	// 'Posto'
aNewHeader[ 07 , 02 ] := "PC_POSTO"
aNewHeader[ 07 , 03 ] := Alltrim(X3Picture("PC_POSTO"))
aNewHeader[ 07 , 04 ] := GetSx3Cache( "PC_POSTO" , "X3_TAMANHO" )
aNewHeader[ 07 , 05 ] := 0
aNewHeader[ 07 , 06 ] := ""
aNewHeader[ 07 , 07 ] := CHR(251)
aNewHeader[ 07 , 08 ] := "C"
aNewHeader[ 07 , 09 ] := cAlias

aNewHeader[ 08 , 01 ] := STR0126	// 'Processo'
aNewHeader[ 08 , 02 ] := "PC_PROCES"
aNewHeader[ 08 , 03 ] := Alltrim(X3Picture("PC_PROCES"))
aNewHeader[ 08 , 04 ] := GetSx3Cache( "PC_PROCES" , "X3_TAMANHO" )
aNewHeader[ 08 , 05 ] := 0
aNewHeader[ 08 , 06 ] := ""
aNewHeader[ 08 , 07 ] := CHR(251)
aNewHeader[ 08 , 08 ] := "C"
aNewHeader[ 08 , 09 ] := cAlias

aNewHeader[ 09 , 01 ] := STR0222	// 'Periodo'
aNewHeader[ 09 , 02 ] := "PC_PERIODO"
aNewHeader[ 09 , 03 ] := Alltrim(X3Picture("PC_PERIODO"))
aNewHeader[ 09 , 04 ] := GetSx3Cache( "PC_PERIODO" , "X3_TAMANHO" )
aNewHeader[ 09 , 05 ] := 0
aNewHeader[ 09 , 06 ] := ""
aNewHeader[ 09 , 07 ] := CHR(251)
aNewHeader[ 09 , 08 ] := "C"
aNewHeader[ 09 , 09 ] := cAlias

aNewHeader[ 10 , 01 ] := STR0129	// 'Roteiro'
aNewHeader[ 10 , 02 ] := "PC_ROTEIR"
aNewHeader[ 10 , 03 ] := Alltrim(X3Picture("PC_ROTEIR"))
aNewHeader[ 10 , 04 ] := GetSx3Cache( "PC_ROTEIR" , "X3_TAMANHO" )
aNewHeader[ 10 , 05 ] := 0
aNewHeader[ 10 , 06 ] := ""
aNewHeader[ 10 , 07 ] := CHR(251)
aNewHeader[ 10 , 08 ] := "C"
aNewHeader[ 10 , 09 ] := cAlias

aNewHeader[ 11 , 01 ] := STR0128	// 'Nr. Pagto'
aNewHeader[ 11 , 02 ] := "PC_NUMPAG"
aNewHeader[ 11 , 03 ] := Alltrim(X3Picture("PC_NUMPAG"))
aNewHeader[ 11 , 04 ] := GetSx3Cache( "PC_NUMPAG" , "X3_TAMANHO" )
aNewHeader[ 11 , 05 ] := 0
aNewHeader[ 11 , 06 ] := ""
aNewHeader[ 11 , 07 ] := CHR(251)
aNewHeader[ 11 , 08 ] := "C"
aNewHeader[ 11 , 09 ] := cAlias

aNewHeader[ 12 , 01 ] := ""	// Coluna em Branco
aNewHeader[ 12 , 02 ] := "UTIMA_COL"
aNewHeader[ 12 , 03 ] := Space(1)
aNewHeader[ 12 , 04 ] := 01
aNewHeader[ 12 , 05 ] := 0
aNewHeader[ 12 , 06 ] := ""
aNewHeader[ 12 , 07 ] := CHR(251)
aNewHeader[ 12 , 08 ] := "C"
aNewHeader[ 12 , 09 ] := cAlias

aNewCols := Array( Len( aTotais ) , 13 )

For nX := 1 To Len(aTotais)
	aNewCols[ nX , 01 ] := aTotais[nX,1]				//Codigo do Evento
	aNewCols[ nX , 02 ] := DescPdPon(aTotais[nX,1])		//Descricao do Evento
	aNewCols[ nX , 03 ] := aTotais[nX,2]				//Horas Apontadas
	aNewCols[ nX , 04 ] := aTotais[nX,3]				//Centro de Custo
	aNewCols[ nX , 05 ] := aTotais[nX,10]               //Cod. Func.
	aNewCols[ nX , 06 ] := aTotais[nX,4]				//Depto
	aNewCols[ nX , 07 ] := aTotais[nX,5]				//Posto
	aNewCols[ nX , 08 ] := aTotais[nX,6]				//Processo
	aNewCols[ nX , 09 ] := aTotais[nX,7]				//Periodo
	aNewCols[ nX , 10 ] := aTotais[nX,8]				//Roteiro
	aNewCols[ nX , 11 ] := aTotais[nX,9]				//Num. Pagto
	aNewCols[ nX , 12 ] := ""							//Coluna em Branco
	aNewCols[ nX , 13 ] := .F.
Next nX

aSort( aNewCols , , , { |x,y| ( x[1] + x[4] ) < ( y[1] + y[4] ) } )
/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Monta as Dimensoes dos Objetos         					   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

aAdvSize		:= MsAdvSize(,.T.,370)
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }					 
aAdd( aObjCoords , { 000 , 025 , .T. , .F. } )		//1-Cabecalho
aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )		//2-MsGetDados 
aObjSize	:= MsObjSize( aInfoAdvSize , aObjCoords )

//1. Linha - Divisao em colunas cabecalho
aAdv1Size		:= aClone(aObjSize[1])
aInfo1AdvSize	:= { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 1 , 1 }					 
aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )
aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )
aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )
aObj1Size	:= MsObjSize( aInfo1AdvSize , aObj1Coords,,.T. )


DEFINE FONT oFont NAME "Arial" SIZE 0,-11 BOLD
DEFINE MSDIALOG oDlg  FROM aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] PIXEL TITLE OemToAnsi(STR0096 )								// ' Totaliza‡„o do Per¡odo '

	@ aObj1Size[1,1] , aObj1Size[1,2] GROUP oGroup TO aObj1Size[1,3] , aObj1Size[1,4] LABEL OemToAnsi(STR0039) OF oDlg PIXEL									// "Matricula:"
	oGroup:oFont:= oFont
	@ aObj1Size[2,1] , aObj1Size[2,2] GROUP oGroup TO aObj1Size[2,3] , aObj1Size[2,4] LABEL OemToAnsi(STR0040) OF oDlg PIXEL									// "Nome:"
	oGroup:oFont:= oFont
	@ aObj1Size[3,1] , aObj1Size[3,2] GROUP oGroup TO aObj1Size[3,3] , aObj1Size[3,4] LABEL OemToAnsi(STR0106) OF oDlg PIXEL									// "Admiss„o:"
	oGroup:oFont:= oFont
	
	@ aObj1Size[1,1]+10 , aObj1Size[1,2]+5 SAY StrZero(Val(SRA->RA_MAT),Len(SRA->RA_MAT))		SIZE 050,10 OF oDlg PIXEL FONT oFont
	@ aObj1Size[2,1]+10 , aObj1Size[2,2]+5 SAY OemToAnsi(SRA->RA_NOME) 						SIZE 146,10 OF oDlg PIXEL FONT oFont
	@ aObj1Size[3,1]+10 , aObj1Size[3,2]+5 SAY Dtoc(fDtaAdmis())					 			SIZE 050,10 OF oDlg PIXEL FONT oFont
	
	oGetDados := MsNewGetDados():New(aObjSize[2,1],aObjSize[2,2],aObjSize[2,3],aObjSize[2,4],0,"AllWaysTrue()","AllWaysTrue()","",{},0,99999,NIL,NIL,NIL,oDlg,aNewHeader,aNewCols)
	
	bSet15 := { || oDlg:End() }
	bSet24 := { || oDlg:End() }
	aButtons := PonChoiBar(,,"0",,lAcumulado)	
ACTIVATE MSDIALOG oDlg ON INIT  EnchoiceBar(oDlg,bSet15,bSet24,Nil,aButtons) CENTERED

RestKeys(aKeys)

Return( NIL )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³PreparaCla³ Autor ³Equipe Advanced RH     ³ Data ³24/04/1996³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Prepara o Array aOrdena Para o Apontamento das Marcacoes   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Pona040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function PreparaCla(	aMarcacoes	,;	//01 - Array com as Marcacoes
						aResult		,;	//02 - Array com os Resultados
						nColMarc	,;  //03 - Numero de Colunas de Marcacoes
						lGrava		,;  //04 - Grava o Apontamento
						lReprocessa	,;	//05 - Reprocessa o Apontamento
						aArray	   	,;	//06 - Array com a Estrutura do aCols
						aHeaderLoc	,;	//07 - Array com a Estrutura do aHeader
						nPosDele    ,;	//08 - Posicao do Registro Deletado em aCols
						lForceApont  ;	//09 - Se Forca o Reapontamento das Marcacoes
					  )

Local aCodigos		:= {}
Local aAbonosPer	:= {}
Local aLogFile   	:= {} //-- mensagens de inconsistencia no apontamento
Local aCloneCalend	:= {}
Local cOrdem     	:= ""
Local cTurno	 	:= ""
Local cFil	    	:= SRA->RA_FILIAL
Local cMat			:= SRA->RA_MAT
Local cMensagem		:= ""
Local cEvesNoDele	:= ""
Local cDsrAutPa		:= PosSP9("036N",SRA->RA_FILIAL,"P9_CODIGO",2)
Local cCusto		:= SRA->RA_CC
Local cCodFun		:= SRA->RA_CODFUNC
Local cDepto        := SRA->RA_DEPTO
Local cPosto		:= SRA->RA_POSTO
Local cProces		:= SRA->RA_PROCES
Local cPer			:= oPeriodo:cPeriodo
Local cRot			:= oPeriodo:cRoteiro
Local cNrPag		:= oPeriodo:cNumPagto
Local dPerFimApo 	:= Min( dPerFim , dDataBase )
Local lRet		 	:= .T.
Local nXFor      	:= 0
Local nLenXFor	 	:= 0
Local nYFor      	:= 0
Local nLenYFor	 	:= 0
Local nX			:= 0
Local nRecno  		:= 0
Local nPos		 	:= 0
Local nPosData		:= 0
Local nPosHora		:= 0
Local nPosOrdem		:= 0
Local nPosFlag		:= 0
Local nPosTurno		:= 0
Local nPosFuncao	:= 0
Local nPosGiro		:= 0
Local nPosCc		:= 0
Local nPosFun	  	:= 0
Local nPosDepto	  	:= 0
Local nPosPosto	  	:= 0
Local nPosProces  	:= 0
Local nPosPer	  	:= 0
Local nPosRot	  	:= 0
Local nPosNrPag	  	:= 0
Local nPosAponta	:= 0
Local nPosRelog		:= 0
Local nPosTpMar		:= 0
Local nPosPerApo	:= 0	
Local nLenMarc		:= 0
Local nPosDataApo	:= 0

DEFAULT lReprocessa := .T.
DEFAULT aResult		:= {}
DEFAULT lForceApont	:= .F.

IF !fCargaId(@aCodigos,SRA->RA_FILIAL)
	Return( NIL )
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Carrega a aAbonosPer para a GravaSPC						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
fAbonosPer( @aAbonosPer , dPerIni , dPerFim , cFil , cMat )	

IF ( lReprocessa )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Reinicializa Variaveis Staticas no Apontamento              ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF( lForceApont , PonDestroyStatic() , NIL )
		
	//-- Funcao de Apontamento
	aResult := {}

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Prepara o Array com as Marcacoes para o Apontamento         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( aArray == NIL ) .and. ( aHeaderLoc == NIL ) .and. ( nPosDele == NIL ) )
	
		//-- Looping para cada dia.
		nLenXFor := Len(aCols1)
		For nXFor := 1 to nLenXFor
			
			cOrdem 	 := aCols1[nXFor,nColMarc+3] //-- Ordem da Ocorrˆncia
			dDataApo := aCols1[nXFor,3,19]		 //-- Data de Apontamento
		
			IF ( nPos := aScan( aTabCalend , { |x| x[CALEND_POS_DATA_APO] == dDataApo } ) ) > 0
				cTurno := aTabCalend[ nPos , CALEND_POS_TURNO ]
			EndIF
		  	
			//-- Looping para cada marca‡„o.
		 	nLenYFor := (nColMarc+2)
		 	For nYFor := 3 To nLenYFor
		
				//-- N„o Carrega Marcacoes Vazias
				IF Empty(aCols1[nXFor,nYFor,1])
					Loop
				EndIF
				
				nRecno := aCols1[nXFor,nYFor,1]

				//-- Verifica se Teve Alguma Alteracao e Altera Flag de Apontamento
				IF (;
						( lForceApont ) .or.;
				   		( aCols1[nXFor,nYFor,1] != aOldCols1[nXFor,nYFor,1] ) .or.;
				   		( aCols1[nXFor,nYFor,3] != aOldCols1[nXFor,nYFor,3] ) .or.;
				   		( aCols1[nXFor,nYFor,4] != aOldCols1[nXFor,nYFor,4] ) .or.;
				   		( aCols1[nXFor,nYFor,5] != aOldCols1[nXFor,nYFor,5] ) .or.;
				   		( aCols1[nXFor,nYFor,8] != aOldCols1[nXFor,nYFor,8] ) .or.;
				   		( aCols1[nXFor,nYFor,9] != aOldCols1[nXFor,nYFor,9] ) .or.;
				   		( aCols1[nXFor,nYFor,10] != aOldCols1[nXFor,nYFor,10] ) .or.;
				   		( aCols1[nXFor,nYFor,11] != aOldCols1[nXFor,nYFor,11] ) .or.;
				   		( aCols1[nXFor,nYFor,12] != aOldCols1[nXFor,nYFor,12] ) .or.;
				   		( aCols1[nXFor,nYFor,13] != aOldCols1[nXFor,nYFor,13] ) .or.;
				   		( aCols1[nXFor,nYFor,14] != aOldCols1[nXFor,nYFor,14] ) .or.;
				   		( aCols1[nXFor,nYFor,15] != aOldCols1[nXFor,nYFor,15] ) .or.;
				   		( aCols1[nXFor,nYFor,16] != aOldCols1[nXFor,nYFor,16] ) .or.;
				   		( aCols1[nXFor,nYFor,17] != aOldCols1[nXFor,nYFor,17] ) .or.;
				   		( aCols1[nXFor,nYFor,18] != aOldCols1[nXFor,nYFor,18] ) .or.;
				   		( aCols1[nXFor,nYFor,19] != aOldCols1[nXFor,nYFor,19] ) ;				   						   						   						   						   						   						   						   						   						   		
				   	)	
	                aCols1[nXFor,nYFor,6] := "N" //Altera o Flag de Apontamento
				EndIF
		
				//-- Carrega o Array aMarcacoes com as Marcacoes a Serem Apontadas
				aAdd( aMarcacoes , Array( ELEMENTOS_AMARC ) )
				nLenMarc := Len( aMarcacoes )
				aMarcacoes[ nLenMarc , AMARC_DATA		] := aCols1[nXFor,nYFor,08]								//01 - Data da Marcacao
				aMarcacoes[ nLenMarc , AMARC_HORA		] := Val(aCols1[nXFor,nYFor,01])						//02 - Hora da Marcacao
				aMarcacoes[ nLenMarc , AMARC_ORDEM		] := cOrdem												//03 - Ordem da Marcacao
				aMarcacoes[ nLenMarc , AMARC_FLAG		] := aCols1[nXFor,nYFor,07]								//04 - Flag da Marcacao
				aMarcacoes[ nLenMarc , AMARC_RECNO		] := nRecno												//05 - Recno no SP8 ou SPG
				aMarcacoes[ nLenMarc , AMARC_TURNO		] := cTurno												//06 - Turno de Trabalho
				aMarcacoes[ nLenMarc , AMARC_FUNCAO		] := aCols1[nXFor,nYFor,03]								//07 - Funcao	
				aMarcacoes[ nLenMarc , AMARC_GIRO		] := aCols1[nXFor,nYFor,04]								//08 - Giro
				aMarcacoes[ nLenMarc , AMARC_CC			] := IF( Empty( aCols1[nXFor,nYFor,05] ) , cCusto , aCols1[nXFor,nYFor,05] )		//09 - Centro de Custo
				aMarcacoes[ nLenMarc , AMARC_APONTA		] := aCols1[nXFor,nYFor,06]								//10 - Flag de Apontamento
				aMarcacoes[ nLenMarc , AMARC_RELOGIO	] := aCols1[nXFor,nYFor,09]								//11 - Relogio
				aMarcacoes[ nLenMarc , AMARC_TIPOMARC	] := aCols1[nXFor,nYFor,10]								//12 - Tipo de Marcacao
				aMarcacoes[ nLenMarc , AMARC_L_ORIGEM	] := ( aMarcacoes[ nLenMarc , AMARC_FLAG ] $ "M,I" )	//13 - Logico
				aMarcacoes[ nLenMarc , AMARC_DTHR2STR	] := DataHora2Str(;
																			aMarcacoes[ nLenMarc , AMARC_DATA],;
																			aMarcacoes[ nLenMarc , AMARC_HORA];
														   			      )										//14 - String de Data/Hora 	
				aMarcacoes[ nLenMarc , AMARC_PERAPONTA	] := aCols1[nXFor,nYFor,11]                             //15 - Periodo de Apontamento
				aMarcacoes[ nLenMarc , AMARC_DEPTO  	] := IF( Empty( aCols1[nXFor,nYFor,12] ) , cDepto  , aCols1[nXFor,nYFor,12] ) 		//16 - Depto
				aMarcacoes[ nLenMarc , AMARC_POSTO  	] := IF( Empty( aCols1[nXFor,nYFor,13] ) , cPosto  , aCols1[nXFor,nYFor,13] )       //17 - Posto
				aMarcacoes[ nLenMarc , AMARC_PROCESSO  	] := IF( Empty( aCols1[nXFor,nYFor,14] ) , cProces , aCols1[nXFor,nYFor,14] )       //18 - Processo
				aMarcacoes[ nLenMarc , AMARC_PERIODO  	] := IF( Empty( aCols1[nXFor,nYFor,15] ) , cPer    , aCols1[nXFor,nYFor,15] )       //19 - Periodo
				aMarcacoes[ nLenMarc , AMARC_ROTEIRO  	] := IF( Empty( aCols1[nXFor,nYFor,16] ) , cRot    , aCols1[nXFor,nYFor,16] )       //20 - Roteiro
				aMarcacoes[ nLenMarc , AMARC_NUM_PAGTO 	] := IF( Empty( aCols1[nXFor,nYFor,17] ) , cNrPag  , aCols1[nXFor,nYFor,17] )       //21 - Num. Pagto
				aMarcacoes[ nLenMarc , AMARC_CODFUNC  	] := IF( Empty( aCols1[nXFor,nYFor,18] ) , cCodFun , aCols1[nXFor,nYFor,18] )       //22 - Cod. Func.
				aMarcacoes[ nLenMarc , AMARC_DATAAPO  	] := IF( Empty( aCols1[nXFor,nYFor,19] ) , dDataApo, aCols1[nXFor,nYFor,19] )       //23 - Data Apontamento.
			Next nYFor
		Next nXFor
	ElseIF ( ( aArray != NIL ) .and. ( aHeaderLoc != NIL ) .and. ( nPosDele != NIL ) )

		IF ( nXFor := Len( aArray ) ) > 0
		
			nPosData		:= GdFieldPos( "P8_DATA"	, aHeaderLoc )
			nPosHora		:= GdFieldPos( "P8_HORA"	, aHeaderLoc )
			nPosOrdem		:= GdFieldPos( "P8_ORDEM"	, aHeaderLoc )
			nPosFlag		:= GdFieldPos( "P8_FLAG"	, aHeaderLoc )
			nPosTurno		:= GdFieldPos( "P8_TURNO"	, aHeaderLoc )
			nPosFuncao		:= GdFieldPos( "P8_FUNCAO"	, aHeaderLoc )
			nPosGiro		:= GdFieldPos( "P8_GIRO"	, aHeaderLoc )
			nPosCc			:= GdFieldPos( "P8_CC"		, aHeaderLoc )
			nPosFun	  		:= GDFieldPos( "P8_CODFUNC" , aHeaderLoc )
			nPosDepto	  	:= GDFieldPos( "P8_DEPTO"	, aHeaderLoc )
			nPosPosto	  	:= GDFieldPos( "P8_POSTO"	, aHeaderLoc )
			nPosProces  	:= GDFieldPos( "P8_PROCES"	, aHeaderLoc )
			nPosPer	  		:= GDFieldPos( "P8_PERIODO"	, aHeaderLoc )
			nPosRot	  		:= GDFieldPos( "P8_ROTEIR"	, aHeaderLoc )
			nPosNrPag	  	:= GDFieldPos( "P8_NUMPAG"	, aHeaderLoc )
			nPosAponta		:= GdFieldPos( "P8_APONTA"	, aHeaderLoc )
			nPosRelog		:= GdFieldPos( "P8_RELOGIO"	, aHeaderLoc )
			nPosTpMar		:= GdFieldPos( "P8_TPMARCA"	, aHeaderLoc )
			nPosPerApo		:= GdFieldPos( "P8_PAPONTA" , aHeaderLoc )
			nPosDataApo		:= GdFieldPos( "P8_DATAAPO" , aHeaderLoc )
			
			For nX := 1 To nXFor
				IF !aArray[ nX , nPosDele ]
					aAdd( aMarcacoes , Array( ELEMENTOS_AMARC ) )
					nLenMarc := Len( aMarcacoes )
					aMarcacoes[ nLenMarc , AMARC_DATA		] := aArray[ nX , nPosData   ]							//01 - Data da Marcacao
					aMarcacoes[ nLenMarc , AMARC_HORA		] := aArray[ nX , nPosHora   ]							//02 - Hora da Marcacao
					aMarcacoes[ nLenMarc , AMARC_ORDEM		] := aArray[ nX , nPosOrdem  ]							//03 - Ordem da Marcacao
					aMarcacoes[ nLenMarc , AMARC_FLAG		] := aArray[ nX , nPosFlag   ]							//04 - Flag da Marcacao
					aMarcacoes[ nLenMarc , AMARC_RECNO		] := 0												//05 - Recno no SP8 ou SPG
					aMarcacoes[ nLenMarc , AMARC_TURNO		] := aArray[ nX , nPosTurno  ]							//06 - Turno de Trabalho
					aMarcacoes[ nLenMarc , AMARC_FUNCAO		] := aArray[ nX , nPosFuncao ]							//07 - Funcao	
					aMarcacoes[ nLenMarc , AMARC_GIRO		] := aArray[ nX , nPosGiro   ]							//08 - Giro
					aMarcacoes[ nLenMarc , AMARC_CC			] := aArray[ nX , nPosCc     ]							//09 - Centro de Custo
					aMarcacoes[ nLenMarc , AMARC_APONTA		] := IF( lForceApont,"N",aArray[ nX , nPosAponta])		//10 - Flag de Apontamento
					aMarcacoes[ nLenMarc , AMARC_RELOGIO	] := aArray[ nX , nPosRelog  ]							//11 - Relogio
			    	aMarcacoes[ nLenMarc , AMARC_TIPOMARC	] := aArray[ nX , nPosTpMar	 ]							//12 - Tipo de Marcacao
			    	aMarcacoes[ nLenMarc , AMARC_L_ORIGEM	] := ( aMarcacoes[ nLenMarc , AMARC_FLAG ] $ "M,I" )	//13 - Logico
					aMarcacoes[ nLenMarc , AMARC_DTHR2STR	] := DataHora2Str(;
																				aMarcacoes[ nLenMarc , AMARC_DATA],;
																				aMarcacoes[ nLenMarc , AMARC_HORA];
																		)											//14 - String de Data/Hora 	
					aMarcacoes[ nLenMarc , AMARC_PERAPONTA	] := aArray[ nX , nPosPerApo ]                          //15 - Periodo de Apontamento
					aMarcacoes[ nLenMarc , AMARC_DEPTO  	] := aArray[ nX , nPosDepto  ]                  		//16 - Depto
					aMarcacoes[ nLenMarc , AMARC_POSTO  	] := aArray[ nX , nPosPosto  ]                  		//17 - Posto
					aMarcacoes[ nLenMarc , AMARC_PROCESSO  	] := aArray[ nX , nPosProces ]                  		//18 - Processo
					aMarcacoes[ nLenMarc , AMARC_ROTEIRO  	] := aArray[ nX , nPosRot    ]                          //19 - Roteiro
					aMarcacoes[ nLenMarc , AMARC_PERIODO  	] := aArray[ nX , nPosPer	 ]                          //20 - Periodo
					aMarcacoes[ nLenMarc , AMARC_NUM_PAGTO 	] := aArray[ nX , nPosNrPag  ]                          //21 - Num. Pagto
					aMarcacoes[ nLenMarc , AMARC_CODFUNC  	] := aArray[ nX , nPosFun    ]                  		//22 - Cod. Func.
					aMarcacoes[ nLenMarc , AMARC_DATAAPO  	] := aArray[ nX , nPosDataApo]                  		//23 - Data Apontamento.
		    	EndIF
		    Next nX

		EndIF

	EndIF
		
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Remonta Calendario para funcionarios com Turnos Opcionais   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RecriaCalend( @aTabCalend, @aTabPadrao,,aMarcacoes )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Salva o Calendario que podera ter o Conteudo Modificado  por³
	³ fDiasFolga()												  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aCloneCalend := aClone( aTabCalend )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Gera as folgas automaticas								  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	fDiasFolga(aClone(aMarcacoes),@aTabCalend,dPerIni,dPerFim,cDsrAutPa)
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Aponta Marcacoes do Funcionario                      	     ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	cMensagem := IF( lForceApont,OemToAnsi(STR0110),OemToAnsi(STR0097))	//" Reapontando as Marca‡”es..."###Apontando Marcacoes "
	cTitulo	  := OemToAnsi(STR0098)										//"Aguarde..."
	MsAguarde({|| lRet := Aponta(	dPerIni		,;
									dPerFimApo	,;
									@aMarcacoes	,;
									aTabCalend	,;
									cFil		,;
									cMat		,;
									aCodigos	,;
									@aResult	,;
									lGrava		,;
									.T.			,;
									@aLogFile	,;
									@aAbonosPer	 ;
								  );
			},;
			cTitulo,;
			cMensagem;
			) 
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura o Calendario que foi Modificado em fDiasFolga()	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aTabCalend := aClone( aCloneCalend )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se o Retorno do Apontamento foi OK             	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lRet )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Reinicializa Variaveis Staticas no Apontamento              ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		PonDestroyStatic()
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Gera e Mostra o Log 										  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF !Empty( aLogFile )
			fMakeLog( { aLogFile } , { STR0113 } , NIL , .T. , FunName() ) //'Log de Ocorrencias:'
		EndIF
	EndIF	
ElseIF ( lGrava )
	//Obtem os Eventos que nao podem ser Deletados do Resultado
	cEvesNoDele := ObtemEveNoDele( aCodigos )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Apenas Grava o Apontamento no SPC                    	     ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	MsAguarde( { || GravaSPC( aResult, cFil , cMat , cEvesNoDele , dPerIni , dPerFim , aAbonosPer ) },;
				OemToAnsi(STR0098),;
				OemToAnsi(STR0103);
			 )
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Executa o Ponto de Entrada Que Deixou de Ser Executado     no³
³ Apontamento												   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lGrava .and. lPonaPo3Block )
	ExecBlock( "PONAPO3" , .F. , .F. , { aClone( aMarcacoes ) , aClone( aTabCalend ) } , .F. )
EndIF
	
Return( lRet )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³PonChoiBar³ Autor ³Equipe Advanded RH     ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Poe a enchoicebar na tela                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function PonChoiBar(oGet,nOpc,cBarra,lLegenda,lAcumulado)

/*/BEGINDOC
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³cBarra: 0 -> Botoes DEFAULT - OK + Calendario			³
³        1 -> Todos os Botoes							³
³        2 -> Botoes DEFAULT - OK + Totalizacao			³
³        3 -> Botoes DEFAULT							³
³        4 -> Botoes DEFAULT - OK + Consulta Apontamento³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ENDDOC*/

Local aKeys			:= GetKeys()
Local aSvoGet		:= {}
Local bSvSet15		:= { || NIL }
Local bSvSet24		:= { || NIL }
Local bColDel		:= { || NIL }
Local bColInc		:= { || NIL }
Local bGerMarOne	:= { || NIL }
Local bGerAleOne	:= { || NIL }
Local bAponMarc		:= { || NIL }
Local bReaponMarc	:= { || NIL }
Local bCalend		:= { || NIL }
Local bShowTot		:= { || NIL }
Local bLegend		:= { || NIL }
Local bEditCel		:= { || NIL }
Local bConfirma		:= { || NIL }
Local bCancela		:= { || NIL }
Local lOk			:= .F.
Local lEnd			:= .F.
Local nMinMax		:= Abs( SuperGetMv( "MV_MCALEAT" , NIL , 0 , cFilAnt ) )
Local aButtons		:= {}

DEFAULT lLegenda	:= .F.
DEFAULT lAcumulado	:= .F.

bColDel		:= { || fMoveCols( oGet , 2 ) }
bColInc		:= { || fMoveCols( oGet , 1 ) }
bGerMarOne	:= { || fMoveCols( oGet , 3 ) }

bEditCel	:= { || aSvOGet := SaveoGet("ALL",oGet),;
					IF(	Pna040EditCel(oGet,@aSvoGet,nOpc),;
						(;
							RestartoGet(aSvoGet,"ALL",@oGet),;
							oGet:ForceRefresh(),;
							RestartoGet(aSvoGet,"ALL",@oGet);
						),;
						NIL;
					   );
				 }
IF nMinMax > 0 .and. cBarra == "1"
	bGerAleOne	:= { || fMoveCols(oGet,3,nMinMax) }
EndIF	
IF ( !lAcumulado .or. lAcumulado .and. ( cBarra == "4" ) )
	bAponMarc	:= { || f_Alt_T(oGet,nOpc) }
	IF !( cBarra == "4" )
		bReaponMarc	:= { || f_Alt_T(oGet,nOpc,.T.) }
	EndIF	
EndIF	
bCalend		:= { || f_Alt_H(oGet,,,,lAcumulado) }
bShowTot	:= { || fMostraTot( lAcumulado ) }
bLegend		:= { || GetLegendCalend() }

IF ( ( cBarra == "1" ) .or. ( cBarra == "4" ) )
	IF ( cBarra != "4" )
		aAdd(aButtons, {"SDUZAP", 	{|| Eval( bColDel )},	OemToAnsi( STR0078 )})// 'Deleta Coluna'		
		SetKey( VK_F4 , bColDel )		
		aAdd(aButtons, {"SDUFIELDS",{|| Eval( bColInc )},	OemToAnsi( STR0080 )})// 'Inclui Coluna'
		SetKey( VK_F5 , bColInc )
		aAdd(aButtons, {"CLOCK01",	{|| Eval( bGerMarOne )},OemToAnsi( STR0082 )})// 'Gera Valor na Coluna'
		SetKey( VK_F6 , bGerMarOne )
		IF !(( nMinMax == 0 ) .and. ( cBarra == "1" ))
			aAdd(aButtons, {"FILTRO",	{|| Eval( bGerAleOne )},OemToAnsi( STR0105 )})// 'Gera Marca‡„o Aleat¢ria...' 
	   		SetKey( VK_F7 , bGerAleOne )
	  	EndIf
	EndIF
	
	IF cBarra == "4" .OR. !(lAcumulado .AND. cBarra != "4")
		aAdd(aButtons, {"COLTOT",	{|| Eval( bAponMarc )},OemToAnsi( STR0003 )})// 'Totaliza'			
		SetKey( VK_F8 , bAponMarc )
	EndIF	
		
	IF ( cBarra != "4" .AND. !lAcumulado)
		aAdd(aButtons, {"RECALC", {|| Eval( bReaponMarc )},OemToAnsi( STR0109 )})// "For‡a o Reapontamento das Marca‡”es..."
		SetKey( VK_F9 , bReaponMarc )
	EndIF 
	
	aAdd(aButtons, {"S4SB014N", {|| Eval( bCalend )},OemToAnsi( STR0085 )})// 'Consulta de Horarios'
	SetKey( VK_F10 , bCalend )
			
	IF ( cBarra != "4" )
		aAdd(aButtons, {"ALTERA", {|| Eval( bEditCel )},OemToAnsi( STR0111 )})// 'Editar Celula...<F11>'
		SetKey( VK_F11 , bEditCel )
	EndIF

ElseIF ( cBarra == "2" )
	aAdd(aButtons, {"COLTOT", {||	Eval( bShowTot )},OemToAnsi( STR0086 )})// 'Totaliza o Periodo'
	SetKey( VK_F8 , bShowTot )
EndIF

IF lLegenda
	aAdd(aButtons, {"BMPVISUAL", {|| Eval( bLegend )},OemToAnsi( STR0010 )})// "Legenda do Calend rio..."
	SetKey( VK_F4 , bLegend )
EndIF

Return( aButtons )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn040VHrs ³ Autor ³ Equipe Advanced RH    ³ Data ³03/06/1997³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Consiste Digita‡„o de Horas (DOS) e altera aCols1 (WINDOWS)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Pn040VHrs(ExpN1,ExpO1,ExpN2,ExpN3,ExpA1,ExpA2,ExpA3,ExpA4) ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cHora 		= Hora digitada.                              ³±±
±±³          ³ oGet	 		= Objeto oGet.                                ³±±
±±³          ³ n	 		= Linha do array aCols.                       ³±±
±±³          ³ nColMarc 	= N£mero de Colunas com Hor rios.             ³±±
±±³          ³ aCols		= Array com as marca‡oes 					  ³±±
±±³          ³ aCols1		= Array com as Marca‡oes (C¢pia)			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fPn040VHrs( cHora , oGet , n , nColMarc , aCols , aCols1 )

Local cCusto	:= SRA->RA_CC
Local cCodFun	:= SRA->RA_CODFUNC
Local cDepto    := SRA->RA_DEPTO
Local cPosto	:= SRA->RA_POSTO
Local cProces	:= SRA->RA_PROCES
Local cPer		:= oPeriodo:cPeriodo
Local cRot		:= oPeriodo:cRoteiro
Local cNrPag	:= oPeriodo:cNumPagto
Local cLastHrs	:= aCols1[ n , oGet:ColPos , 1 ]
Local lRet		:= .T.
Local nHora		:= Val( cHora )
Local nColAnt	:= oGet:ColPos
Local nTamCol	:= Len( aCols[ n ] )
Local nTamCol1	:= Len( aCols1[ n ] )
Local nX		:= 0

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ So Valida Quando Houver Diferenca Nas Horas                  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( cLastHrs == cHora )
		Break
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Valida a Hora Digitada                                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lRet := VldHora(nHora) )
		//"A hora digitada ‚ inv lida."###'Aviso'
		MsgInfo( OemToAnsi( STR0121 ) , OemToAnsi( STR0108 ) )
		Break
	EndIF
			
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Efetua a Altera‡„o da Horas em aCols1.                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aCols1[n,oGet:ColPos,1] := IF( Empty( cHora ) , Space( 5 ) , StrZero( nHora , 5 , 2 ) ) //-- Hora
	
	IF Empty( cHora )
		aCols1[ n , oGet:ColPos , 8 ] :=   Ctod("")
	Else	
	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega a Data Para Hora Informada                           ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( oGet:ColPos == 3 ) .and. ( ( nColAnt + 1 ) <= nTamCol )
			IF !Empty( aCols1[ n , nColAnt + 1 , 1 ] ) .and. nHora > Val( aCols1[ n , nColAnt + 1 , 1 ] )
				aCols1[ n , oGet:ColPos , 8 ] := IF( Empty( aCols1[ n , nColAnt + 1 , 8 ] ) , aCols1[ n , 2 ] - 1 , aCols1[ n , nColAnt + 1 , 8 ] - 1 ) //-- Data
		    Else
				While ( ++nColAnt <= nTamCol )
					IF !Empty( aCols1[ n , nColAnt , 1 ] ) .and. nHora > Val( aCols1[ n , nColAnt , 1 ] )
						aCols1[ n , oGet:ColPos , 8 ] := IF( Empty( aCols1[ n , nColAnt , 8 ] ) , aCols1[ n , 2 ] - 1 , aCols1[ n , nColAnt , 8 ] - 1 ) //-- Data
						Exit
					EndIF
				End While	
		 		IF Empty( aCols1[ n , oGet:ColPos , 8 ] )
		 			aCols1[ n , oGet:ColPos , 8 ] := aCols1[ n , 2 ]
		 		EndIF	
		    EndIF
		    aCols[ n , 2 ] := aCols1[ n , oGet:ColPos , 8 ]
		ElseIF ( oGet:ColPos > 3 ) .and. ( ( nColAnt - 1 ) >= 3 )
			IF !Empty( aCols1[ n , nColAnt - 1 , 1 ] ) .and. nHora < Val( aCols1[ n , nColAnt - 1 , 1 ] )
				aCols1[ n , oGet:ColPos , 8 ] := IF( Empty( aCols1[ n , nColAnt - 1 , 8 ] ) , aCols1[ n , 2 ] + 1 , aCols1[ n , nColAnt - 1 , 8 ] + 1 ) //-- Data
		    Else
				While ( --nColAnt >= 3 )
					IF !Empty( aCols1[ n , nColAnt , 1 ] ) .and. nHora < Val( aCols1[ n , nColAnt , 1 ] )
						aCols1[ n , oGet:ColPos , 8 ] := IF( Empty( aCols1[ n , nColAnt , 8 ] ) , aCols1[ n , 2 ] + 1 , aCols1[ n , nColAnt , 8 ] + 1 ) //-- Data
						Exit
					EndIF	
				End While	
		 		IF Empty( aCols1[ n , oGet:ColPos , 8 ] )
		 			aCols1[ n , oGet:ColPos , 8 ] := aCols1[ n , 2 ]
		 		EndIF
		    EndIF
		EndIF
	Endif
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se a Marcacao esta Sem Centro de Custo e Carrega   o³
	³ Centro de Custo do Cadastro e Altera o Flag de Apontamento de³
	³ Todas as Marcacoes do Dia.                                   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nX := 1 To nTamCol1
		IF ValType( aCols1[ n , nX ] ) == "A"
			IF Empty( aCols1[ n , nX , 5 ]  )
				aCols1[ n , nX , 5 ] := cCusto	//Carrega o Centro de Custo
			EndIF
			IF Empty( aCols1[ n , nX , 12 ] )
				aCols1[ n , nX , 12 ] := cDepto
			EndIf
			IF Empty( aCols1[ n , nX , 13 ] )
				aCols1[ n , nX , 13 ] := cPosto
			EndIf
			IF Empty( aCols1[ n , nX , 14 ] )
				aCols1[ n , nX , 14 ] := cProces
			EndIf
			IF Empty( aCols1[ n , nX , 15 ] )
				aCols1[ n , nX , 15 ] := cPer
			EndIf
			IF Empty( aCols1[ n , nX , 16 ] )
				aCols1[ n , nX , 16 ] := cRot
			EndIf
			IF Empty( aCols1[ n , nX , 17 ] )
				aCols1[ n , nX , 17 ] := cNrPag
			EndIf
			IF Empty( aCols1[ n , nX , 18 ] )
				aCols1[ n , nX , 18 ] := cCodFun
			EndIf
			aCols1[ n , nX , 6 ] := "N"			//Altera o Flag de Apontamento
		EndIF
	Next nX

End Sequence
		
Return( lRet )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn040VDts ³ Autor ³ Equipe Advanced RH    ³ Data ³03/06/1997³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Nil (DOS) e altera aCols1 (WINDOWS)                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fPn040VDts( dData , oGet , n , nColMarc , aCols , aCols1 ) ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cHora 		= Hora digitada.                              ³±±
±±³          ³ oGet	 		= Objeto oGet.                                ³±±
±±³          ³ n	 		= Linha do array aCols.                       ³±±
±±³          ³ nColMarc 	= N£mero de Colunas com Hor rios.             ³±±
±±³          ³ aCols		= Array com as marca‡oes 					  ³±±
±±³          ³ aCols1		= Array com as Marca‡oes (C¢pia)			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PonA040                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fPn040VDts( dData , oGet , n , nColMarc , aCols , aCols1 )

Local cCusto	:= SRA->RA_CC
Local cCodFun	:= SRA->RA_CODFUNC
Local cDepto    := SRA->RA_DEPTO
Local cPosto	:= SRA->RA_POSTO
Local cProces	:= SRA->RA_PROCES
Local cPer		:= oPeriodo:cPeriodo
Local cRot		:= oPeriodo:cRoteiro
Local cNrPag	:= oPeriodo:cNumPagto
Local dLastData := aCols1[ n , 2 ]
Local lRet		:= .T.
Local nColAnt	:= oGet:ColPos
Local nTamCol1	:= Len( aCols1[ n ] )
Local nX		:= 0

Begin Sequence

	//-- N„o permite alterar datas j  existentes
	IF ( n <= nLenIni .and. ( nColAnt == 1 ) )
		lRet := .F.
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ So Passa Pela Validacao Quando Nova Data For Diferente       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( dLastData != dData )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Nao Permite Data em Branco                                   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF Empty(dData)
			Help(" ",1,"P040DTNIL")
			lRet := .F.
			Break
		EndIF
	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Efetua a Altera‡„o da Data em aCols1.                        ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		aCols1[ n , 2 ]		:= dData	//-- Data Real
		aCols1[ n , 3 , 8 ] := dData	//-- Altera a Data da 1a. Entrada

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Verifica se a Marcacao esta Sem Centro de Custo e Carrega   o³
		³ Centro de Custo do Cadastro e Acerta a Data e Altera o   Flag³
		³ de Apontamento de Todas as Marcacoes do Dia.                 ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		For nX := 3 To nTamCol1
			IF ValType( aCols1[ n , nX ] ) == "A"
				IF Empty( aCols1[ n , nX , 5 ]  )
					aCols1[ n , nX , 5 ] := cCusto	//Carrega o Centro de Custo
				EndIF	                       
				IF Empty( aCols1[ n , nX , 12 ] )
					aCols1[ n , nX , 12 ] := cDepto
				EndIf
				IF Empty( aCols1[ n , nX , 13 ] )
					aCols1[ n , nX , 13 ] := cPosto
				EndIf
				IF Empty( aCols1[ n , nX , 14 ] )
					aCols1[ n , nX , 14 ] := cProces
				EndIf
				IF Empty( aCols1[ n , nX , 15 ] )
					aCols1[ n , nX , 15 ] := cPer
				EndIf
				IF Empty( aCols1[ n , nX , 16 ] )
					aCols1[ n , nX , 16 ] := cRot
				EndIf
				IF Empty( aCols1[ n , nX , 17 ] )
					aCols1[ n , nX , 17 ] := cNrPag
				EndIf
				IF Empty( aCols1[ n , nX , 18 ] )
					aCols1[ n , nX , 18 ] := cCodFun
				EndIf
				aCols1[ n , nX , 6 ] := "N"			//Altera o Flag de Apontamento
			EndIF
		Next nX

	EndIF
	
End Sequence

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³GetNewResult³ Autor ³Marinaldo de Jesus    ³ Data ³30/07/2001³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Remontar aResult                                             ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³GetNewResult( aResult , aLastApo , aArrayAtu , aArrayAnt )	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³aResult		-> Array contendo apenas os Resultados Apontados ³
³          ³aLastApo	-> Array com os Valores Apontados Anteriormente	 ³
³          ³aArrayAtu	-> Array com os Valores de aCols (Atual)         ³
³          ³aArrayAnt   -> Array com os Valores do Primeiro aCols      	 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³aResult                                              	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA040                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function GetNewResult( aResult , aLastApo , aArrayAtu , aArrayAnt )

Local bAsc	:= { || NIL }
Local bSrt	:= { | x , y | Dtos( x[1] ) + x[2] < Dtos( y[1] ) + y[2] }
Local nX	:= 0
Local nY	:= 0
Local nLenX	:= 0
Local nLenY	:= 0
Local nPos	:= 0

nLenX := Min( Len( aArrayAtu ) , Len( aArrayAnt ) )

bAsc :=	{ |x|	x[01] == aLastApo[nY,01]	.and.;	//Data da Geracao
				x[02] == aLastApo[nY,02]	.and.;	//Codigo do Evento
				x[04] == aLastApo[nY,04]	.and.;	//Centro de Custo
				x[05] == aLastApo[nY,05]	.and.;	//Tipo de Marcacao
				x[10] == aLastApo[nY,10]	.and.;  //Cod. Funcao
				x[11] == aLastApo[nY,11]	.and.;	//Depto
				x[12] == aLastApo[nY,12]		 ;	//Posto				
		 }

For nX := 1 To nLenX
	IF fCompArray( aArrayAtu[ nX ] , aArrayAnt[ nX ] )
		IF ( nPos := aScan( aLastApo , { |x| x[01] == aArrayAtu[ nX , 01 ] } ) ) > 0
			nLenY	:= Len( aLastApo )
			For nY := nPos To nLenY
				IF aLastApo[ nY , 01 ] == aArrayAtu[ nX , 01 ] .and. aScan( aResult , bAsc ) == 0
					aAdd( aResult , aClone( aLastApo[ nY ] ) )
				Else
					Exit
				EndIF
			Next nY	
		EndIF
	EndIF
Next nX	

aSort( @aResult , NIL , NIL , bSrt )

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pna040EditCel³Autor ³Marinaldo de Jesus    ³ Data ³17/07/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Editar Campos Nao Visualizaveis na GetDados          		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pna040EditCel( nPosCel )									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³															 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³                                                       	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA040                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pna040EditCel( oGet , aSvoGet, nOpcX )

Local aArea			:= GetArea()
Local aAreaCols		:= {}
Local aKeys			:= GetKeys()
Local aAlterGd		:= {}
Local aVirtGd		:= {}
Local aVisual		:= {}
Local aNotFields	:= {}
Local aSvCols		:= {}
Local bSvSet15		:= { || NIL }
Local bSvSet24		:= { || NIL }
Local cAlias		:= IF( lPona180 , "SPG" , "SP8" )
Local cPrefixo		:= ( PrefixoCpo( cAlias ) + "_" )
Local cSeekKey		:= ""
Local nOpc			:= 0
Local nSvn			:= aSvoGet[3]
Local nSvColPos		:= oGet:oBrowse:nColPos
Local nAlt			:= 0
Local nAlts			:= 0
Local lEdit			:= .F.
Local oDlgNew
Local oGetNew
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaração de arrays para dimensionar tela		         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}

DEFAULT lPnaCel	:= ExistBlock( "PNA040CEL" )

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ So Executa nas Colunas de Horas							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nSvColPos <= 2 )
		Help(" ",1,"P040NPODE")
		Break
	EndIF	
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Variaveis da GetDados								   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	Private aHeader	:= {}
	Private aCols	:= {}
	Private m		:= 1

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Salva Area do Alias de aCols								   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAreaCols := ( cAlias )->( GetArea() )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Posiciona na Ultima Linha Para Montar o aCols Vazio          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	( cAlias )->( dbGoBottom() )
	( cAlias )->( dbSkip() )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Campos que nao serao Mostrados							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aNotFields , cPrefixo+"FILIAL" )
	aAdd( aNotFields , cPrefixo+"MAT"	 )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Utiliza funcao fillgetdados apenas para montar aheader com   |
	| campos do walk true, acols sera montado manualmente.		   ³
	| Condicao cseekkey nunca sera verdadeira para atender este    |
	| este proposito											   |
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/		

	cSeekKey := xFilial(cAlias)+SP8->P8_MAT +'99/99/99'
	
	FillGetDados(nOpcx					 ,; //1-nOpcx - número correspondente à operação a ser executada, exemplo: 3 - inclusão, 4 alteração e etc;
				 cAlias				 	 ,; //2-cAlias - area a ser utilizada;
				 NIL    				 ,; //3-nOrder - ordem correspondente a chave de indice para preencher o  acols;
				 cSeekKey                ,; //4-cSeekKey - chave utilizada no posicionamento da area para preencher o acols;
				 Nil	 	    		 ,; //5-bSeekWhile - bloco contendo a expressão a ser comparada com cSeekKey na condição  do While.
				 NIL    		 		 ,; //6-uSeekFor - pode ser utilizados de duas maneiras:1- bloco-de-código, condição a ser utilizado para executar o Loop no While;2º - array bi-dimensional contendo N.. condições, em que o 1º elemento é o bloco condicional, o 2º é bloco a ser executado se verdadeiro e o 3º é bloco a ser executado se falso, exemplo {{bCondicao1, bTrue1, bFalse1}, {bCondicao2, bTrue2, bFalse2}.. bCondicaoN, bTrueN, bFalseN};
				 aNotFields		   	     ,; //7-aNoFields - array contendo os campos que não estarão no aHeader;
				 NIL					 ,; //8-aYesFields - array contendo somente os campos que estarão no aHeader;
				 NIL					 ,; //9-lOnlyYes - se verdadeiro, exibe apenas os campos de usuário;
				 NIL					 ,; //10-cQuery - query a ser executada para preencher o acols(Obs. Nao pode haver MEMO);
				 NIL			      	 ,; //11-bMontCols - bloco contendo função especifica para preencher o aCols; Exmplo:{|| MontaAcols(cAlias)}
				 If(nOpcx=3,.t.,.f.)   	 ,; // NIL	12-lEmpty
				 @aHeader  	      	     ,; //13-aHeaderAux
				 NIL			      	 ,; //14-aColsAux
				 NIL			     	 ;  //15-bAfterCols
				)
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define os Campos Alteravais 								   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( aScan( aVisual , { |x| x == ( cPrefixo + "ORDEM" ) } ) == 0 )
		aAdd( aVisual , ( cPrefixo + "ORDEM"	) )
	EndIF
	IF ( aScan( aVisual , { |x| x == ( cPrefixo + "PAPONTA" ) } ) == 0 )
		aAdd( aVisual , ( cPrefixo + "PAPONTA"	) )
    EndIF

	nAlts := Len( aHeader )
	For nAlt := 1 To nAlts
		IF (;
				( aScan( aVisual  , { |x| x == aHeader[ nAlt , 02 ] } ) == 0 ) .and. ;
				( aScan( aVirtGd  , { |x| x == aHeader[ nAlt , 02 ] } ) == 0 )		;
			)	
			aAdd( aAlterGd , aHeader[ nAlt , 02 ] )
		EndIF	
	Next nAlt
		
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura Area do Alias de aCols							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RestArea( aAreaCols )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Valores da Celula a Ser Editada				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	GdFieldPut( cPrefixo+"HORA"		, Val( aCols1[ nSvn , nSvColPos , 01 ] ) , m )
	GdFieldPut( cPrefixo+"GIRO"		, aCols1[ nSvn , nSvColPos , 03 ] , m )
	GdFieldPut( cPrefixo+"FUNCAO"	, aCols1[ nSvn , nSvColPos , 04 ] , m )
	GdFieldPut( cPrefixo+"CC"		, aCols1[ nSvn , nSvColPos , 05 ] , m )
	GdFieldPut( cPrefixo+"APONTA"	, aCols1[ nSvn , nSvColPos , 06 ] , m )
	GdFieldPut( cPrefixo+"FLAG"		, aCols1[ nSvn , nSvColPos , 07 ] , m )
	GdFieldPut( cPrefixo+"ORDEM"	, aCols1[ nSvn , Len( aCols1[ nSvn ] ) ] , m )
	IF ( nSvColPos == 3 .or. Empty( aCols1[ nSvn , nSvColPos , 08 ] ) )
		GdFieldPut( cPrefixo+"DATA" , aCols1[ nSvn , 02 ] , m )
	Else
		GdFieldPut( cPrefixo+"DATA"	, aCols1[ nSvn , nSvColPos , 08 ] , m )
	EndIF
	GdFieldPut( cPrefixo+"RELOGIO"	, aCols1[ nSvn , nSvColPos , 09 ] , m )
	GdFieldPut( cPrefixo+"TPMARCA"	, aCols1[ nSvn , nSvColPos , 10 ] , m )
	GdFieldPut( cPrefixo+"PAPONTA"	, aCols1[ nSvn , nSvColPos , 11 ] , m )
	GdFieldPut(	cPrefixo+"DEPTO"	, aCols1[ nSvn , nSvColPos , 12 ] , m )
	GdFieldPut(	cPrefixo+"POSTO"	, aCols1[ nSvn , nSvColPos , 13 ] , m )
	GdFieldPut(	cPrefixo+"PROCES"	, aCols1[ nSvn , nSvColPos , 14 ] , m )
	GdFieldPut(	cPrefixo+"PERIODO"	, aCols1[ nSvn , nSvColPos , 15 ] , m )
	GdFieldPut(	cPrefixo+"ROTEIR"	, aCols1[ nSvn , nSvColPos , 16 ] , m )
	GdFieldPut(	cPrefixo+"NUMPAG"	, aCols1[ nSvn , nSvColPos , 17 ] , m )
	GdFieldPut(	cPrefixo+"CODFUNC"	, aCols1[ nSvn , nSvColPos , 18 ] , m )
	GdFieldPut(	cPrefixo+"DATAAPO"	, aCols1[ nSvn , nSvColPos , 19 ] , m )
	GdFieldPut(	cPrefixo+"ALI_WT"	, aCols1[ nSvn , nSvColPos , 20 ] , m )
	GdFieldPut(	cPrefixo+"REC_WT"	, aCols1[ nSvn , nSvColPos , 21 ] , m )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Ponto de Entrada para inclusao de novas colunas			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lPnaCel )
		ExecBlock("PNA040CEL",.F.,.F.,{cPrefixo})
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Salva o Estado Atual de aCols para Comparacao em fCompArray()³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aSvCols := aClone( aCols )
    
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aAdvSize		:= MsAdvSize(,.T.,370)
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }					 
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aObjSize	:= MsObjSize( aInfoAdvSize , aObjCoords )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta o Dialogo para Edicao                			   	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
   	DEFINE MSDIALOG oDlgNew TITLE OemToAnsi( STR0005 + " - " + STR0111 ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL	// 'Manuten‡„o das Marca‡”es'###'Editar Celula...<F11>'
		oGetNew := MsGetDados():New(aObjSize[1,1],aObjSize[1,2],aObjSize[1,3],aObjSize[1,4],2,"LinOkEditCel","TudOkEditCel","",.F.,aAlterGd,1,NIL,1)
		oDlgNew:bSet15 := { || IF( oGetNew:TudoOk() , ( nOpc := 1 , oDlgNew:End() ) , nOpc := 0 ) }
		bSvSet15 := SetKey( 15 , oDlgNew:bSet15 )
		oDlgNew:bSet24 := { || nOpc := 0 , oDlgNew:End() }
		bSvSet24 := SetKey( 24 , oDlgNew:bSet24 )
	ACTIVATE MSDIALOG oDlgNew ON INIT EnchoiceBar( oDlgNew , oDlgNew:bSet15 , oDlgNew:bSet24 ) CENTERED
    
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura <Ctrl-O> e <Ctrl-X>               			   	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	SetKey( 15 , bSvSet15 )
	SetKey( 24 , bSvSet24 )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Se houve alteracao Carrega os novos valores			   	   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lEdit := ( nOpc == 1 .and. !fCompArray( aCols , aSvCols ) ) )
		aSvoGet[ 2 , nSvn , nSvColPos ]	:= StrZero( GdFieldGet(	cPrefixo+"HORA" ) , 5 , 2 )
		aCols1[ nSvn , nSvColPos , 01 ] := aSvoGet[ 2 , nSvn , nSvColPos ]
		aCols1[ nSvn , nSvColPos , 03 ] := GdFieldGet(	cPrefixo+"GIRO"    	)
		aCols1[ nSvn , nSvColPos , 04 ] := GdFieldGet(	cPrefixo+"FUNCAO"	)
		aCols1[ nSvn , nSvColPos , 05 ] := GdFieldGet(	cPrefixo+"CC"		)
		aCols1[ nSvn , nSvColPos , 06 ] := GdFieldGet(	cPrefixo+"APONTA"	)
		aCols1[ nSvn , nSvColPos , 07 ] := GdFieldGet(	cPrefixo+"FLAG"		)
		aCols1[ nSvn , nSvColPos , 08 ] := GdFieldGet(	cPrefixo+"DATA"		)
		aCols1[ nSvn , nSvColPos , 09 ] := GdFieldGet(	cPrefixo+"RELOGIO"	)
		aCols1[ nSvn , nSvColPos , 10 ] := GdFieldGet(	cPrefixo+"TPMARCA"	)
		aCols1[ nSvn , nSvColPos , 11 ] := GdFieldGet(	cPrefixo+"PAPONTA"	)
		aCols1[ nSvn , nSvColPos , 12 ] := GdFieldGet(	cPrefixo+"DEPTO"	)
		aCols1[ nSvn , nSvColPos , 13 ] := GdFieldGet(	cPrefixo+"POSTO"	)
		aCols1[ nSvn , nSvColPos , 14 ] := GdFieldGet(	cPrefixo+"PROCES"	)
		aCols1[ nSvn , nSvColPos , 15 ] := GdFieldGet(	cPrefixo+"PERIODO"	)
		aCols1[ nSvn , nSvColPos , 16 ] := GdFieldGet(	cPrefixo+"ROTEIR"	)
		aCols1[ nSvn , nSvColPos , 17 ] := GdFieldGet(	cPrefixo+"NUMPAG"	)
		aCols1[ nSvn , nSvColPos , 18 ] := GdFieldGet(	cPrefixo+"CODFUNC"	)
		aCols1[ nSvn , nSvColPos , 19 ] := GdFieldGet(	cPrefixo+"DATAAPO"	)		
		IF ( nSvColPos == 3 )
			lEdit := .T.
			aCols1[ nSvn , 02 ] := GdFieldGet( cPrefixo+"DATA"	)
			aSvoGet[ 02 , nSvn , 02 ] := aCols1[ nSvn , 02 ]
		EndIF
	EndIF
	
End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura Teclas de Atalho e Ponteiros de Entrada			   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aKeys )
RestArea( aArea )
	
Return( lEdit )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³LinOkEditCel ³Autor ³Marinaldo de Jesus    ³ Data ³17/07/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Valida Linha em Pn040EditCel                         		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³LinOkEditCel()								 				 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³															 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³                                                       	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA040                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function LinOkEditCel( oBrowse )

Local cAlias	:= IF( lPona180 , "SPG" , "SP8" )
Local cPrefixo	:= ( PrefixoCpo( cAlias ) + "_" )
Local cHelp		:= ""
Local lOK		:= .T.

Begin Sequence
	IF !( lOK := !Empty( GdFieldGet( cPrefixo + "DATA" ) ) )
		Help(" ",1,"P040DTNIL")
		Break
	EndIF
	IF !( lOK := !Empty( GdFieldGet( cPrefixo + "CC" ) ) )
		cHelp := STR0112	//'Centro de Custo N„o Foi Preenchido'
		Help( ' ' , 1 , 'PN230INCON' , , OemToAnsi( cHelp ) , 5 , 0 )
		Break
	EndIF
End Sequence

Return( lOK )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³TudOkEditCel ³Autor ³Marinaldo de Jesus    ³ Data ³17/07/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Valida Linha em Pn040EditCel                         		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³TudOkEditCel()								 				 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³															 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³                                                       	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA040                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function TudOkEditCel( oBrowse )
Return( LinOkEditCel( oBrowse ) )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Pn040Data ³ Autor ³ Mauricio MR           ³ Data ³09/08/2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao Inicializadora da Data                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Pona040/Pona280                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Pn040Data()

Local dRet 	:= Ctod('')

//-- Verifica se Existe uma lista como Calendario (Ver. Prog Pona280)
IF ( Type("lPona280") <> "U" )
   //-- Obtem a Data Corrente do Calendario
   dRet := CalendRetCpo( cPrefix+"DATA",,,cPrefix  )
EndIF

Return( dRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³SelePerApo   ³Autor ³Marinaldo de Jesus    ³ Data ³12/08/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Retorna Selecao para o Periodo de Apontamento        		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³SelePerApo(cAlias,nReg,nOpcX)								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³															 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³                                                       	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA040                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function SelePerApo( cAlias , nReg , nOpcX )

PerApoConPad()

Return( nOpcX )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³P8PapontaWhen³Autor ³Marinaldo de Jesus    ³ Data ³25/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³When para o Campo P8_PAPONTA                         		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8PapontaWhyen()             								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³void														 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.F.                                                    	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_WHEN do campo P8_PAPONTA                                  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function P8PapontaWhen()

Local cPerAponta	:= ""
Local dPerIni		:= Ctod("//")
Local dPerFim		:= Ctod("//")
Local lWhen			:= .T.
Local lAlterou		:= .F.

If Type("oGetDados") = "O"
   oGetDados:lNewLine:= .F.
ElseIf Type("oGet") = "O"
   oGet:lNewLine:= .F.
ElseIf Type("o1Get") = "O"
   o1Get:lNewLine:= .F.
Endif   


IF ( Upper( AllTrim( ReadVar() ) ) == "M->P8_PAPONTA" )
	dPerIni	:= Stod( SubStr( GetMemVar("P8_PAPONTA") , 1 , 8 ) )
	dPerFim	:= Stod( SubStr( GetMemVar("P8_PAPONTA") , 9 , 8 ) )
	cPerAponta := P8PGModPaponta( @dPerIni , dPerFim )
	IF ( ( Type( "aHeader" ) == "A" ) .and. ( Type( "aCols" ) == "A" ) )
		IF ( GdFieldPos( "P8_PAPONTA" ) > 0 )
			GdFieldPut( "P8_PAPONTA" , cPerAponta )
		EndIF
		IF ( lAlterou := !( GdFieldGet("P8_PAPONTA") == &( ReadVar() ) ) )
			IF ( GdFieldPos("P8_APONTA") > 0 )
				GdFieldPut( "P8_APONTA" , "N" )
			EndIF
			IF ( GdFieldPos("P8_ORDEM") > 0 )
				GdFieldPut( "P8_ORDEM" , Space( GetSx3Cache( "P8_ORDEM" , "X3_TAMANHO" ) ) )
			EndIF
		EndIF
	EndIF
	SetMemVar( "P8_PAPONTA" , cPerAponta )
	lWhen := .F.
EndIF

Return( lWhen )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³PGPapontaWhen³Autor ³Marinaldo de Jesus    ³ Data ³25/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³When para o Campo PG_PAPONTA                         		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGPapontaWhyen()             								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³void														 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.F.                                                    	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_WHEN do campo PG_PAPONTA                                  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function PGPapontaWhen()

Local cPerAponta	:= ""
Local dPerIni		:= Ctod("//")
Local dPerFim		:= Ctod("//")
Local lWhen			:= .T.

IF ( Upper( AllTrim( ReadVar() ) ) == "M->PG_PAPONTA" )
	dPerIni	:= Stod( SubStr( GetMemVar( "PG_PAPONTA" ) , 1 , 8 ) )
	dPerFim	:= Stod( SubStr( GetMemVar( "PG_PAPONTA" ) , 9 , 8 ) )
	cPerAponta := P8PGModPaponta( @dPerIni , dPerFim )
	IF ( ( Type( "aHeader" ) == "A" ) .and. ( Type( "aCols" ) == "A" ) )
		IF ( GdFieldPos( "PG_PAPONTA" ) > 0 )
			GdFieldPut( "PG_PAPONTA" , cPerAponta )
		EndIF
	EndIF
	SetMemVar( "PG_PAPONTA" , cPerAponta )
	lWhen := .F.
EndIF

Return( lWhen )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³P8PGModPaponta	³Autor³Marinaldo de Jesus ³ Data ³25/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Disponibilizar Dialogo para Alteracao do Periodo 			³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>     								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³P8PapontaWhen() e PGPapontaWhen()                           ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function P8PGModPaponta( dPerIni , dPerFim )

Local aSvKeys			:= GetKeys()
Local aArea				:= GetArea()
Local aAdvSize			:= {}
Local aInfoAdvSize		:= {}
Local aObjCoords		:= {}
Local aObjSize			:= {}
Local aButtons			:= {}
Local bSet15			:= { || NIL }
Local bSet24			:= { || NIL }
Local bPrev				:= { || GetPerPrev( @dPerIni , @dPerFim , oPerIni , oPerFim )	, SetKey( VK_F4 , bPrev 	) }
Local bAtu				:= { || GetPerAtu( @dPerIni , @dPerFim , oPerIni , oPerFim )	, SetKey( VK_F5 , bAtu		) }
Local bNext				:= { || GetPerNext( @dPerIni , @dPerFim , oPerIni , oPerFim )	, SetKey( VK_F6 , bNext 	) }
Local bPerSPO			:= { || GetPerSPO( @dPerIni , @dPerFim , oPerIni , oPerFim )	, SetKey( VK_F7 , bPerSPO	) }
Local bDialogInit		:= { || NIL }
Local cPerAponta		:= ( Dtos( dPerIni ) + Dtos( dPerFim ) )
Local lbSet15			:= .F.
Local oDlg				:= NIL
Local oFont				:= NIL
Local oFontBig			:= NIL
Local oGroup			:= NIL
Local oPerIni			:= NIL
Local oPerFim			:= NIL

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Inicializa o Periodo de Apontamento conforme Data Base	   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( Empty( dPerIni ) .or. Empty( dPerFim ) )
	PerAponta(	@dPerIni 		,;	//Data Inicial passada como referencia
				@dPerFim 		,;	//Data Final   passada como referencia
				NIL				,;	//Data Base
				.T.				,;	//Mostrar o Help
				xFilial("SRA")	,;	//Filial para GetMv
				.F.				 ;	//Se eh para gerar um novo periodo
			  )
EndIF			  

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Monta as Dimensoes dos Objetos         					   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/

aAdvSize	:= MsAdvSize( ,.T.,370)

aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
aAdd( aObjCoords , { 000 , 45 , .T. , .F. } )
aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )   

//Divisao Em 5 colunas verticais o espaco disponivel na tela
aObj1Coords := {}
aAdv1Size    := aClone(aObjSize[1])

aInfo1AdvSize    := { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 5 , 20 }
aAdd( aObj1Coords , { 040 , 000 , .F. , .T. } )	
aAdd( aObj1Coords , { 020 , 000 , .F. , .T. } )	
aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )	
aAdd( aObj1Coords , { 001 , 000 , .F. , .T. } )	
aAdd( aObj1Coords , { 020 , 000 , .F. , .T. } )	
aAdd( aObj1Coords , { 000 , 000 , .T. , .T. } )	
aObj1Size := MsObjSize( aInfo1AdvSize , aObj1Coords,,.T.)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Botao para o Periodo Anterior  					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd(; 
		aButtons	,;
						{;
							"PREV"				,;	
   							bPrev				,;
       	   					OemToAnsi( STR0117 ),;	//"Anterior <F4>..."
							OemToAnsi( STR0217 ) ;	//"Anterior"
           				};
        )					 	

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Botao para o Periodo Atual     					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd(; 
		aButtons	,;
						{;
							"E4"				,;
   							bAtu				,;
       	   					OemToAnsi( STR0118 ),;	//"Atual <F5>..."
       	   					OemToAnsi( STR0218 ) ;	//"Atual"
           				};
        )					 	

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Botao para o Proximo Periodo						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd(; 
		aButtons	,;
						{;
							"NEXT"				,;
   							bNext				,;
       	   					OemToAnsi( STR0119 ),;	//"Pr¢ximo <F6>..."  
							OemToAnsi( STR0219 ) ;	//"Pr¢ximo"         	   					
           				};
        )					 	

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Botao para o Proximo Periodo						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd(; 
		aButtons	,;
						{;
							"BMPSXB"			,;
   							bPerSPO				,;
       	   					OemToAnsi( STR0122 ),;	//"Per¡odo do SP0 <F7>..."
       	   					OemToAnsi( STR0222 ) ;	//"Per¡odo"
           				};
        )					 	

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Define o Bloco para a Teclas <CTRL-O>   ( Button OK da Enchoi³
³ ceBar )													   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
bSet15 := { ||	IF(;
						Eval( oPerIni:bValid ) .and.	 			 ;
						Eval( oPerFim:bValid )	.and.				 ;
						MaxP8PGOrdVld( dPerIni , dPerFim , .T. )	,;
						(;
							lbSet15 := .T. ,;
							RestKeys( aSvKeys , .T. ),;
							oDlg:End();
						),;
						.F.;
				   );
		}

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Define o  Bloco  para a Teclas <CTRL-X> ( Button Cancel da En³
³ choiceBar )												   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
bSet24 := { || RestKeys( aSvKeys , .T. ) , oDlg:End() }

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Bloco para o Init do Dialog 						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
bDialogInit := { ||;
						SetKey( VK_F4 , bPrev	),;
						SetKey( VK_F5 , bAtu 	),; 
						SetKey( VK_F6 , bNext	),;
						SetKey( VK_F7 , bPerSPO	),;
						EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons );
				}

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Monta Dialogo para a selecao do Periodo 					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
DEFINE FONT oFont		NAME "Arial" SIZE 0,-11 BOLD
DEFINE MSDIALOG oDlg TITLE OemToAnsi(cCadastro) From aAdvSize[7],0 TO aAdvSize[6]/2.3,aAdvSize[5] OF oMainWnd PIXEL

	@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup TO aObjSize[1,3],aObjSize[1,4] LABEL OemToAnsi(STR0114) OF oDlg PIXEL	//'Per¡odo de Apontamento:'
	oGroup:oFont:= oFont

	@ aObj1Size[2,1] ,  aObj1Size[2,2]	SAY OemToAnsi(STR0115)		SIZE 100,10 OF oDlg PIXEL FONT oFont	//"Inicial:"
	@ aObj1Size[3,1] ,  aObj1Size[3,2]	MSGET oPerIni VAR dPerIni	SIZE 100,10 OF oDlg PIXEL FONT oFont VALID !Empty( dPerIni ) HASBUTTON

	@ aObj1Size[5,1]  , aObj1Size[5,2]	SAY OemToAnsi(STR0116)		SIZE 100,10 OF oDlg PIXEL FONT oFont	//"Final:"
	@ aObj1Size[6,1]  , aObj1Size[6,2]	MSGET oPerFim VAR dPerFim	SIZE 100,10 OF oDlg PIXEL FONT oFont VALID ( !Empty( dPerFim ) .and. ( dPerIni <= dPerFim ) ) HASBUTTON

ACTIVATE MSDIALOG oDlg CENTERED ON INIT Eval( bDialogInit )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura as Teclas de Atalho                     	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aSvKeys , .T. )

IF ( lbSet15 )
	cPerAponta := ( Dtos( dPerIni ) + Dtos( dPerFim ) )
EndIF

Return( cPerAponta )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³P8PapontaInit³Autor ³Marinaldo de Jesus    ³ Data ³25/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao para o Campo P8_PAPONTA         		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8PapontaInit()             								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³void														 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.F.                                                    	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_RELACAO do campo P8_PAPONTA                               ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function P8PapontaInit()

Local cPerAponta	:= Space( GetSx3Cache( "P8_PAPONTA" , "X3_TAMANHO" ) )

IF ( ( Type( "dPerIni" ) == "D" ) .and. ( Type( "dPerFim" ) == "D" ) )
	cPerAponta := ( Dtos( dPerIni ) + Dtos( dPerFim ) )
EndIF

Return( cPerAponta )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³pon040MontaGetDados³ Autor ³ Leandro Drumond       ³ Data ³23/10/2007							   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Montar a GetDados de acordo com o periodo informado             						           ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ³
³Sintaxe   ³pon040MontaGetDados(cAlias, nOpcX, cFil, aColsRec, aAPOCols )								       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³cAlias                                                                               		       ³
³          ³nOpcX  																							   ³
³          ³cFil - Filial.																					   ³
³          ³aColsRec - array que contem o Recno() dos registros da aCols.									   ³
³          ³aAPOCols 																					       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Logico                                                          								   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA040                                                            							       ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function pon040MontaGetDados(cAlias, nOpcX, cFil, cMat, aColsRec, aAPOCols, oGet, lPriVez)

Local aPerAtual		:= {}
Local aMarcacoes	:= {}   
Local aCloneMarc	:= {}
Local cOrdem    	:= ""
Local cPrefix		:= ""
Local cSpaceGiro	:= ""
Local cSpaceFunc	:= ""
Local cSpaceCust	:= ""
Local cSpaceCodFunc	:= ""
Local cSpaceDepto	:= ""
Local cSpacePosto	:= ""
Local cSpaceProces	:= ""
Local cSpacePer		:= ""
Local cSpaceRot		:= ""
Local cSpaceNrPag	:= ""
Local cSpaceApon	:= ""
Local cSpaceFlag	:= ""
Local cSpaceRelo	:= ""
Local cSpaceTpMc	:= ""
Local cSpacePerAp	:= ""
Local cNome    		:= SRA->RA_NOME
Local dDataOk   	:= Ctod("//")
Local dDataMarc		:= Ctod("//")
Local dPerIGeA		:= Ctod("//")
Local dPerFGeA		:= Ctod("//")
Local dPerIniPar	:= Ctod("//")
Local dPerFimPar	:= Ctod("//")
Local dDataApo		:= Ctod("//")
Local lApHeDtm		:= ( SuperGetMv( "MV_APHEDTM" , NIL , "N" , cFilAnt ) == "S" )
Local lMvMcAutMm	:= ( SuperGetMv( "MV_MCAUTMM" , NIL , "N" , cFilAnt ) == "S" )
Local lGetMarcAuto	:= ( SuperGetMv( "MV_GETMAUT" , NIL , "S" , cFilAnt ) == "S" )
Local lRet			:= .T.
Local nX		 	:= 0    
Local nY			:= 0
Local nForX			:= 0
Local nCol      	:= 0
Local nFor      	:= 0
Local nFor1     	:= 0
Local nSub      	:= 0
Local nPos			:= 0   

Private oCalendError

DEFAULT lPriVez 	:= .F.

//Inicializacao de variaveis publicas
aTabCalend		 := {}
aTabPadrao		 := {}
aRecsMarcAutDele := {}
aResult   		 := {}
aColsRec 		 := {}

Begin Sequence
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Obtem Periodo de Apontamento conforme o Processo do  ³
	³ funcionario										   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/ 
	cProcesso			:= SRA->RA_PROCES
	oPeriodo:cProcesso 	:= cProcesso
	oPeriodo:cRoteiro	:= "PON"
	
    If !(fGetPeriodo( oPeriodo , lPriVez))
    	lRet := .F.
    	Break
    EndIf
    
  	cRot	 		:= "PON"
	cPeriodo  		:= oPeriodo:cPeriodo
	cNumPagto 		:= oPeriodo:cNumPagto
	If lPeriodo
		dPerIni    	:= oPeriodo:dDataIni
		dPerFim    	:= oPeriodo:dDataFim
		cDatas		:= ( DTOC(dPerIni) + " - "  + DTOC(dPerFim))
	Else
		dPerIni           := aDatas[1]
		dPerFim			  := aDatas[2]
		dDataIni		  := dPerIni
		dDataFim		  := dPerFim
		dAntIni 		  := oPeriodo:dDataIni
		dAntFim			  := oPeriodo:dDataFim
		oPeriodo:dDataIni := dPerIni
		oPeriodo:dDataFim := dPerFim
	EndIf

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carregar o Conteudo do Periodo de Apontamento que sera Gravado no  Campo³
	³??_PAPONTA																 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	cPerAponta := ( Dtos( dPerIni ) + Dtos( dPerFim ) )
		

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Inicializa Variaveis													 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	cAlias		  := IF( lPona180 , "SPG" , "SP8" )
	cPrefix		  := ( PrefixoCpo( cAlias ) + "_" )
	cSpaceGiro	  := Space( Len( (cAlias)->( cPrefix+"GIRO" ) ) )
	cSpaceFunc 	  := Space( Len( (cAlias)->( cPrefix+"FUNCAO" ) ) )
	cSpaceCust	  := Space( Len( (cAlias)->( cPrefix+"CC" ) ) )
	cSpaceApon	  := Space( Len( (cAlias)->( cPrefix+"APONTA") ) )
	cSpaceFlag	  := Space( Len( (cAlias)->( cPrefix+"FLAG" ) ) )
	cSpaceRelo	  := Space( Len( (cAlias)->( cPrefix+"RELOGIO" ) ) )
	cSpaceTpMc	  := Space( Len( (cAlias)->( cPrefix+"TPMARCA" ) ) )
	cSpacePerAp	  := Space( Len( (cAlias)->( cPrefix+"PAPONTA" ) ) )
	cSpaceCodFunc := Space( Len( (cAlias)->( cPrefix+"CODFUNC" ) ) )
	cSpaceDepto	  := Space( Len( (cAlias)->( cPrefix+"DEPTO" ) ) )
	cSpacePosto	  := Space( Len( (cAlias)->( cPrefix+"POSTO" ) ) )
	cSpaceProces  := Space( Len( (cAlias)->( cPrefix+"PROCES" ) ) )
	cSpacePer	  := Space( Len( (cAlias)->( cPrefix+"PERIODO" ) ) )
	cSpaceRot	  := Space( Len( (cAlias)->( cPrefix+"ROTEIR" ) ) )
	cSpaceNrPag	  := Space( Len( (cAlias)->( cPrefix+"NUMPAG" ) ) )

	dPerIGeA	:= dPerIni
	dPerFGeA	:= Min( dPerFim , dDataBase )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se Deve Carregar as Marcacoes Automaticas.         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lGetMarcAuto )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Apenas Quando nao For Exclusao/Visualizacao, Nao Provir   de³
		³ Acumulados e se o parametro MV_MCAUTMM estiver com "S"	  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( ( nOpcX == 3 ) .or. ( nOpcX == 4 ) .or. lPona180 .or. !( lMvMcAutMm ) ) 
			lGetMarcAuto := .T.
		EndIF
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Bloqueia Chaves Logicas de Marcacoes do Funcionario           ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !(;
			Pona040Locks( nOpcX , cAlias, {} );
			.and.;
	   		Pona040Locks( nOpcX , IF( lPona180 , "SPH" , "SPC" ) , {} );
	   		.and.;
	   		Pona040Locks( nOpcX , "SPK" , {} );
	   	)	
    	lRet := .F.
    	Break
    EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Cria objeto para controle de erros					           ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	oCalendError:= PONERROR():New() 
	oCalendError:InitLogErrors(LoadCalError()) //Carrega tabela de erros
	
	IF !GetMarcacoes(	@aMarcacoes			,;	//01 -> Marcacoes dos Funcionarios
						@aTabCalend			,;	//02 -> Calendario de Marcacoes
						@aTabPadrao			,;	//03 -> Tabela Padrao
						NIL     			,;	//04 -> Turnos de Trabalho
						@dPerIni 			,;	//05 -> Periodo Inicial
						dPerFim				,;	//06 -> Periodo Final
						SRA->RA_FILIAL		,;	//07 -> Filial
						SRA->RA_MAT			,;	//08 -> Matricula
						SRA->RA_TNOTRAB		,;	//09 -> Turno
						SRA->RA_SEQTURN		,;	//10 -> Sequencia de Turno
						SRA->RA_CC			,;	//11 -> Centro de Custo
						cAlias				,;	//12 -> Alias para Carga das Marcacoes
						.T.					,;	//13 -> Se carrega Recno em aMarcacoes
						.T.		 			,;	//14 -> Se considera Apenas Ordenadas
						NIL					,;  //15 -> Verifica as Folgas Automaticas
						NIL  				,;  //16 -> Se Grava Evento de Folga Mes Anterior
						lGetMarcAuto		,;	//17 -> Se Carrega as Marcacoes Automaticas
						@aRecsMarcAutDele	,;	//18 -> Registros de Marcacoes Automaticas que deverao ser Deletados
						NIL					,;  //19 -> Bloco para avaliar as Marcacoes Automaticas que deverao ser Desprezadas
						lPona180			,;  //20 -> Se Considera o Periodo de Apontamento das Marcacoes - Se for acumulado, ira considerar, do contrario nao
						NIL					,;	//21 -> Se Efetua o Sincronismo dos Horarios na Criacao do Calendario
						NIL					,;	//22 -> Se Considera a data de apontamento 
						NIL					;	//23 -> Se Deve verificar se a data de apontamento da marcacao eh maior ou igual a data inicial do periodo (somente se Considera a data de apontamento) 						
					  )
		lRet := .F.
		oCalendError:ShowErrors()
		Break
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se nao For Visualizacao             	 					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nOpcX <> 4 )
		aEval( aMarcacoes , { |x| aAdd( aColsRec , x[AMARC_RECNO] ) } )
	EndIF	
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Bloqueia Chaves Logicas e Registros  do Funcionario			 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( Pona040Locks( nOpcX , cAlias, aColsRec ) )
       lRet := .F.
       Break
    EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Apenas Quando nao For Exclusao/Visualizacao ou Nao Provir de³
	³ Acumulados												  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( !( ( nOpcX == 3 ) .or. ( nOpcX == 4 ) ) .and. !( lPona180 ) .and. ( lMvMcAutMm ) )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Define o Periodo para a Geracao das Marcacoes Automaticas   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( fDtaAdmis() > dPerIni .and. fDtaAdmis() <= dPerFim )
			dPerIGeA := fDtaAdmis()
		EndIF
		IF SRA->( RA_DEMISSA < dPerFim .and. !Empty( RA_DEMISSA ) )
			dPerFGeA := SRA->RA_DEMISSA
		EndIF
		dPerIGeA	:= Max( dPerIGeA , dPerIni )
		dPerFGeA	:= Min( dPerFGeA , Min( dDataBase , dPerFim ) )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Salva Conteudo de aMarcacoes para Verificar Havera  Reaponta³
		³ Mento														  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		aCloneMarc	:= aClone( aMarcacoes )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Gera marca‡oes Autom ticas.                                 ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		PutMarcAuto( aTabCalend , @aMarcacoes , dPerIGeA , dPerFGeA , SRA->RA_FILIAL )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Compara aMarcacoes com aCloneMarc para ver se Havera Reaponta³
		³ tamento													  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	    lGeraAuto := !fCompArray( aMarcacoes , aCloneMarc )
	EndIF
		
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Cria array com as marca‡”es do Periodo para o funcion rio.  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aCampos := {}
	nFornX := Len( aMarcacoes )
	For nX := 1 To nFornX
	
		IF ( nPos := aScan( aTabCalend , { |x| x[CALEND_POS_DATA_APO] == aMarcacoes[ nX , AMARC_DATAAPO ]  } ) ) > 0
			dDataOk := aTabCalend[ nPos , CALEND_POS_DATA ]
		Else
			Loop
		EndIF	
	
		aAdd(aCampos, Array( ELEMENTOS_AMARC ) ) //-- ** Array aCampos **
	 	nLenCampos := Len( aCampos )
	 	aCampos[nLenCampos,01] := aMarcacoes[ nX , AMARC_ORDEM		] 														//-- 01 Ordem da Marca‡„o
		aCampos[nLenCampos,02] := dDataOk																					//-- 02 Data de Referencia
		aCampos[nLenCampos,03] := aMarcacoes[ nX , AMARC_DATA		]														//-- 03 Data Real
		aCampos[nLenCampos,04] := aMarcacoes[ nX , AMARC_HORA		]														//-- 04 Hora da Ocorrˆncia
		aCampos[nLenCampos,05] := IF( !Empty( aMarcacoes[ nX , AMARC_RECNO ] ) , aMarcacoes[ nX , AMARC_RECNO ] , 0 )		//-- 05 Recno em SP8 ou SPG
		aCampos[nLenCampos,06] := aMarcacoes[ nX , AMARC_RELOGIO	]														//-- 06 Rel¢gio
		aCampos[nLenCampos,07] := aMarcacoes[ nX , AMARC_FLAG		]														//-- 07 Flag de Marcacao
		aCampos[nLenCampos,08] := aMarcacoes[ nX , AMARC_GIRO		] 														//-- 08 Giro
		aCampos[nLenCampos,09] := aMarcacoes[ nX , AMARC_FUNCAO		]														//-- 09 Fun‡„o
		aCampos[nLenCampos,10] := aMarcacoes[ nX , AMARC_CC			] 														//-- 10 Centro de Custo
		aCampos[nLenCampos,11] := aMarcacoes[ nX , AMARC_APONTA		]														//-- 11 Flag de Apontamento
		aCampos[nLenCampos,12] := aMarcacoes[ nX , AMARC_TIPOMARC	]														//-- 12 Tipo da Marcacao
		aCampos[nLenCampos,13] := aMarcacoes[ nX , AMARC_L_ORIGEM	]														//-- 13 Define Se a Marcacao Pode ou Nao ser (Re)Ordenada
		aCampos[nLenCampos,14] := aMarcacoes[ nX , AMARC_DTHR2STR	]														//-- 14 String de Data/Hora para aSort
		aCampos[nLenCampos,15] := aMarcacoes[ nX , AMARC_PERAPONTA	]														//-- 15 String de Data com o Periodo de Apontamento
		aCampos[nLenCampos,18] := aMarcacoes[ nX , AMARC_PROCESSO  	]                                    					//18 - Processo
		aCampos[nLenCampos,19] := aMarcacoes[ nX , AMARC_ROTEIRO  	]                                    					//19 - Roteiro
		aCampos[nLenCampos,20] := aMarcacoes[ nX , AMARC_PERIODO  	]                                    					//20 - Periodo
		aCampos[nLenCampos,21] := aMarcacoes[ nX , AMARC_NUM_PAGTO 	]                                    					//21 - Num. Pagto
		aCampos[nLenCampos,22] := aMarcacoes[ nX , AMARC_DEPTO  	]                                   					//22 - Depto
		aCampos[nLenCampos,23] := aMarcacoes[ nX , AMARC_POSTO  	]                                   					//23 - Posto
		aCampos[nLenCampos,24] := aMarcacoes[ nX , AMARC_CODFUNC  	]                                   					//24 - Cod. Func.
		aCampos[nLenCampos,25] := aMarcacoes[ nX , AMARC_DATAAPO	]
	Next nX
	
	//-- Verifica qual ‚ o dia com mais marca‡”es
	nColMarc := nMV_COLMARC
	nUsado := nColMarc
	If ( nForX := Len(aCampos) ) > 0
		nCol   := 0
		cOrdem := aCampos[1,1]
		dDataApo := aCampos[1,25]
		For nX := 1 To nForX
			If aCampos[nX,25] # dDataApo
				If nCol > nUsado
					nUsado := nCol
				EndIf
				nCol := 0
				cOrdem := aCampos[nX,1]
				dDataApo := aCampos[nX,25]
			EndIf
			nCol ++
		Next nX
		If nCol > nUsado
			nUsado := nCol
		EndIf
	EndIf
	
	//-- Redimencionar o n£mero de Colunas, caso existam muitas marca‡”es.
	If nUsado > nColMarc
		If nUsado%2 == 0
			nColMarc := nUsado
		Else
			nColMarc := nUsado + 1
		Endif
		Help(" ",1,"PN040NCOL",,Str(nColMarc/2,2),3,28)
	Endif
	
	//-- Monta o Array aHeader ( Cabe‡alho )
	aAdd(aHeader,{ STR0018 , cPrefix + "DATAAPO", Space(1),  12, 0, , CHR(251), "C", cAlias } ) // 'Data Ref.'
	aAdd(aHeader,{ STR0019 , "M_DTREAL", Space(1),   8, 0, "fPn040VDts(GetMemVar('M_DtReal'), o, n, nColMarc, @aCols, @aCols1)", CHR(251), "D", cAlias } ) // 'Data 1a E'
	aAlter := {}
	nSub := 0
	For nFor := 1 To  nColMarc
		If nFor%2 == 0
			nSub ++
			aAdd(aHeader,{;
							Str(nFor-nSub,IWLenNum(nFor))+STR0020 ,;
							"SAI"+StrZero(nFor-nSub,2),;// 'a S'
							"99.99",;
							5,;
							2,;
							"FCompZeros('SAI"+StrZero(nFor-nSub,2)+"').and.fPn040VHrs(GetMemVar('SAI"+StrZero(nFor-nSub,2)+"'),o,n,nColMarc,@aCols,@aCols1)",;
							CHR(251),;
							"C",;
							cAlias;
						};
				)
			If ( nOpcX # 3 .and. nOpcX # 4 )
				aAdd(aAlter, "SAI"+StrZero(nFor-nSub,2))
			EndIf
		Else
			aAdd(aHeader,{;
							Str(nFor-nSub,IWLenNum(nFor))+STR0024,;
							"ENT"+StrZero(nFor-nSub,2),;// 'a E'
							"99.99",;
							5,;
							2,;
							"FCompZeros('ENT"+StrZero(nFor-nSub,2)+"').and.fPn040VHrs(GetMemVar('ENT"+StrZero(nFor-nSub,2)+"'),o,n,nColMarc,@aCols,@aCols1)",;
							CHR(251),;
							"C",;
							cAlias;
						  };
				 )
			If ( nOpcX # 3 .and. nOpcX # 4 )
				aAdd(aAlter, "ENT"+StrZero(nFor-nSub,2))
			EndIf
		Endif
	Next nFor
	
	//-- Monta os Arrays aCols e aCols1 ( Conte£do )
	aCols  := {}
	aCols1 := {}
	nForX := ( dPerFim-dPerIni )
	For nX := 0 to nForX
		dDataRefe := (dPerIni + nX )
		dDataReal := (dPerIni + nX )
	    
	    //-- Define a Ordem da Data Atual
		cOrdem   := ""
		dDataApo := CtoD("//")
		If ( nPos := aScan(aTabCalend, {|x| x[CALEND_POS_DATA] == dDataRefe .and. x[CALEND_POS_TIPO_MARC] == "1E" } ) ) > 0
			cOrdem   := aTabCalend[ nPos , CALEND_POS_ORDEM ]
			dDataApo := aTabCalend[ nPos , CALEND_POS_DATA_APO ]
		Else
			Loop
		EndIf
		
		aAdd(aCols , {})
		aAdd(aCols1, {})
		aAdd(aCols[Len(aCols)]  , DtoC(dDataRefe) + " - " + DiaSemana( dDataRefe , 3 ) )	
		aAdd(aCols1[Len(aCols1)], dDataRefe)
	
		//-- Define a 1a Marca‡„o pertencente a Ordem corrente
		If ( nPos := aScan(aCampos, {|x| x[25] == dDataApo } ) ) > 0
			dDataReal := aCampos[nPos, 3]
		EndIf
	
		aAdd(aCols[Len(aCols)]  , dDataReal)
		aAdd(aCols1[Len(aCols1)], dDataReal)
	
		For nY := 1 to nColMarc
			If nPos > 0 .and. nPos <= Len(aCampos) .and. aCampos[nPos,25] == dDataApo
				aAdd(aCols[Len(aCols)]    , StrZero(aCampos[nPos, 4],5,2) )
				aAdd(aCols1[Len(aCols1)]	,	{	StrZero(aCampos[nPos, 4],5,2)								,;	//01 - Hora da Marcacao
													aCampos[nPos,05]											,;	//02 - Recno() no SP8 ou SPG
													aCampos[nPos,08]											,;	//03 - Giro
													aCampos[nPos,09]											,;	//04 - Funcao
													aCampos[nPos,10]											,;	//05 - Centro de Custo
													aCampos[nPos,11]											,;	//06 - Flag de Apontamento
													aCampos[nPos,07]											,;	//07 - Flag de Marcacao
													aCampos[nPos,03]											,;	//08 - Data da Marcacao
													aCampos[nPos,06]											,;	//09 - Relogio
													aCampos[nPos,12]											,;	//10 - Tipo da Marcacao
													IF(Empty(aCampos[nPos,15]),cSpacePerAp,aCampos[nPos,15])	,;	//11 - Periodo de Apontamento													
													aCampos[nPos,22]											,;	//12 - Depto
													aCampos[nPos,23]											,;	//13 - Posto
													aCampos[nPos,18]											,;	//14 - Processo
													aCampos[nPos,20]											,;	//15 - Periodo
													aCampos[nPos,19]											,;	//16 - Roteiro
													aCampos[nPos,21]											,;	//17 - Num Pagto
													aCampos[nPos,24]											,;	//18 - Cod. FUnc
													aCampos[nPos,25]											,;	//19 - Data de Apontamento
													cAlias														,;  //20 - Alias para o WT
													aCampos[nPos,05]											;   //21 - Recno do WT
												 };
					 )
			Else
				aAdd(aCols[Len(aCols)]	,	Space(5) )
				aAdd(aCols1[Len(aCols1)],	{	Space(5)	,;	//01 - Hora da Marcacao
												0			,;	//02 - Recno()
												cSpaceGiro	,;	//03 - Giro
												cSpaceFunc	,;	//04 - Funcao
												cSpaceCust	,;	//05 - Centro de Custo
												cSpaceApon	,;	//06 - Flag de Apontamento
												cSpaceFlag	,;	//07 - Flag de Marcacao
												dDataMarc	,;	//08 - Data da Marcacao
												cSpaceRelo	,;	//09 - Relogio
												cSpaceTpMc  ,;	//10 - Tipo da Marcacao
												cPerAponta	,;	//11 - Periodo de Apontamento
												cSpaceDepto ,;
												cSpacePosto ,;
												cSpaceProce ,;
												cSpacePer	,;
												cSpaceRot	,;
												cSpaceNrPag ,;
												cSpaceCodFunc,;
												dDataApo	,;	//19 - Data de Apontamento
												""			,;  //20 - Alias WT
												0			;   //21 - Recno WT
											 };
					)
			EndIf
			nPos ++
		Next nY
		aAdd(aCols1[Len(aCols1)], cOrdem)
	
	Next nX
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Alimenta as Variaveis que serao Utilizadas no Apontamento   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aOldCols1	:= aClone( aCols1 )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se Houve Geracao de Marcacoes Automaticas e  Altera³
	³ Flag para Forcar o Reapontamento e a Remontagem do Resultado³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lGeraAuto )
		aEval( @aCols1 , { |x| aEval( x , { |x| IF( ValType(x)=="A" , IF( x[7] == "A" .and. x[6] != "S" , x[7] := "M" , NIL ) , NIL ) } ) } )
	EndIF
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega o Periodo de Apontamento							  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aEval( @aCols1 , { |x| aEval( x , { |x| IF( ValType(x)=="A" , IF( Empty( x[11] ) ,  x[11] := cPerAponta , NIL ) , NIL ) } ) } )
	aLastCols1	:= aClone( aCols1 )
	nLenIni		:= Len(aCols1)
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Apontamentos Anteriores						  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( lApHeDtm ) .and. ( nOpcX == 2 ) )
		aLastApo := {}
	Else
		aLastApo := GetLastApo( dPerIni , dPerFim , IF( lPona180 , "SPH" , "SPC" ) )
	EndIF
	
	// atualiza a getdados
	If !(oGet == nil)  
		oGet:Refresh()
	EndIf	          

	If !Empty(RCH->RCH_ROTEIR)
		cRot := RCH->RCH_ROTEIR
	EndIf

End Sequence

Return (lRet)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³PGPapontaInit³Autor ³Marinaldo de Jesus    ³ Data ³25/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao para o Campo PG_PAPONTA         		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGPapontaInit()             								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³void														 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³.F.                                                    	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_RELACAO do campo PG_PAPONTA                               ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function PGPapontaInit()

Local cPerAponta	:= Space( GetSx3Cache( "PG_PAPONTA" , "X3_TAMANHO" ) )

IF ( ( Type( "dPerIni" ) == "D" ) .and. ( Type( "dPerFim" ) == "D" ) )
	cPerAponta := ( Dtos( dPerIni ) + Dtos( dPerFim ) )
EndIF

Return( cPerAponta )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³P8DataVld()  ³Autor ³Marinaldo de Jesus    ³ Data ³28/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validar a Digitacao do Campo P8_DATA                 		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8DataVld()                 								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³void														 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRet                                                   	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_VALID do campo P8_DATA                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function P8DataVld()

Local lP8DataVld	:= .T.
Local lGetDados		:= .F.
Local lAlterou		:= .F.

Begin Sequence

	IF !( lP8DataVld := NaoVazio() )
		Break
	EndIF

	lGetDados := (;
					( Type( "aHeader" ) == "A" ) .and. ;
					( Type( "aCols"	  ) == "A" ) .and. ;
					( GdFieldPos("P8_DATA") > 0 ) ;
				  )	
				  
	IF ( lGetDados )
		IF ( lAlterou := !( GdFieldGet("P8_DATA") == &( ReadVar() ) ) )
			IF ( GdFieldPos("P8_APONTA") > 0 )
				GdFieldPut( "P8_APONTA" , "N" )
			EndIF
		EndIF	
	EndIF

End Sequence

Return( lP8DataVld )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³P8OrdemVld   ³Autor ³Marinaldo de Jesus    ³ Data ³28/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validar a Digitacao do Campo P8_ORDEM                		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8Ordemld()                 								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³void														 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRet                                                   	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_VALID do campo P8_ORDEM                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function P8OrdemVld()

Local lP8OrdemVld	:= .T.
Local lGetDados		:= .F.
Local lAlterou		:= .F.

Begin Sequence

	lGetDados := (;
					( Type( "aHeader" ) == "A" ) .and. ;
					( Type( "aCols"	  ) == "A" ) .and. ;
					( GdFieldPos("P8_ORDEM") > 0 ) ;
				  )	
				  
	IF ( lGetDados )
		IF ( lAlterou := !( GdFieldGet("P8_ORDEM") == &( ReadVar() ) ) )
			IF ( GdFieldPos("P8_APONTA") > 0 )
				GdFieldPut( "P8_APONTA" , "N" )
			EndIF
		EndIF	
	EndIF

End Sequence

Return( lP8OrdemVld )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³P8HoraVld()  ³Autor ³Marinaldo de Jesus    ³ Data ³28/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validar a Digitacao do Campo P8_HORA                 		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8HoraVld()                 								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³void														 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRet                                                   	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_VALID do campo P8_HORA                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function P8HoraVld()

Local lP8HoraVld	:= .T.
Local lGetDados		:= .F.
Local lAlterou		:= .F.

Begin Sequence

	IF !( lP8HoraVld := VldHora( GetMemVar( "P8_HORA" ) ) )
		//"A hora digitada ‚ inv lida."###'Aviso'
		MsgInfo( OemToAnsi( STR0121 ) , OemToAnsi( STR0108 ) )
		Break
	EndIF

	lGetDados := (;
					( Type( "aHeader" ) == "A" ) .and. ;
					( Type( "aCols"	  ) == "A" ) .and. ;
					( GdFieldPos("P8_HORA") > 0 ) ;
				  )	
				  
	IF ( lGetDados )
		IF ( lAlterou := !( GdFieldGet("P8_HORA") == &( ReadVar() ) ) )
			IF ( GdFieldPos("P8_APONTA") > 0 )
				GdFieldPut( "P8_APONTA" , "N" )
			EndIF
		EndIF	
	EndIF

End Sequence

Return( lP8HoraVld )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³P8PapontaVld ³Autor ³Marinaldo de Jesus    ³ Data ³28/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validar a Digitacao do Campo P8_PAPONTA              		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8PapontaVld                 								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³void														 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRet                                                   	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_VALID do campo P8_PAPONTA                                 ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function P8PapontaVld()

Local lP8PapontaVld	:= .T.
Local lGetDados		:= .F.
Local lAlterou		:= .F.

Begin Sequence

	IF !( lP8PapontaVld := NaoVazio() )
		Break
	EndIF

	lGetDados := (;
					( Type( "aHeader" ) == "A" ) .and. ;
					( Type( "aCols"	  ) == "A" ) .and. ;
					( GdFieldPos("P8_PAPONTA") > 0 ) ;
				  )	
				  
	IF ( lGetDados )
		IF ( lAlterou := !( GdFieldGet("P8_PAPONTA") == &( ReadVar() ) ) )
			IF ( GdFieldPos("P8_APONTA") > 0 )
				GdFieldPut( "P8_APONTA" , "N" )
			EndIF
		EndIF	
	EndIF

End Sequence

Return( lP8PapontaVld )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³P8ApontaVld  ³Autor ³Marinaldo de Jesus    ³ Data ³28/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validar a Digitacao do Campo P8_APONTA              		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8ApontaVld                 								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³void														 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRet                                                   	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_VALID do campo P8_APONTA                                  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function P8ApontaVld()

Local dHora			:= Ctod("//")
Local lP8ApontaVld	:= .T.
Local lGetDados		:= .F.
Local lAlterou		:= .F.
Local nHora			:= 0
Local nPosData		:= 0
Local nPosHora		:= 0
Local nPosAponta	:= 0
Local nPosGdSp8Rel	:= 0

Begin Sequence

	IF !( lP8ApontaVld := ( Vazio() .or. Pertence("SN") ) )
		Break
	EndIF

	lGetDados := (;
					( Type( "aHeader" ) == "A" ) .and. ;
					( Type( "aCols"	  ) == "A" ) .and. ;
					( ( nPosAponta	:= GdFieldPos("P8_APONTA")	) > 0 )	.and.	;
					( ( nPosData	:= GdFieldPos("P8_DATA") 	) > 0 )	.and.	;
					( ( nPosHora	:= GdFieldPos("P8_HORA") 	) > 0 )			;
				  )	
				  
	IF ( lGetDados )
		IF ( lAlterou := !( GdFieldGet("P8_APONTA") == &( ReadVar() ) ) )
			IF ( ( Type( "aGdSp8ColR" ) == "A" ) .and. ( Type( "aGdSp8HedR" ) == "A" ) )
				dData 		:= GdFieldGet("P8_DATA")
				nHora 		:= GdFieldGet("P8_HORA")
				IF ( ( nPosAponta  := GdFieldPos( "P8_APONTA" , aGdSp8HedR ) ) > 0 )
					IF ( ( nPosGdSp8Del := aScan( aGdSp8ColR , { |x| ( x[ nPosData ] == dData ) .and. ( x[ nPosHora ] == nHora ) } ) ) > 0 )
						aGdSp8ColR[ nPosGdSp8Del , nPosAponta ] := &( ReadVar() )
					EndIF
				EndIF	
			EndIF
		EndIF	
	EndIF

End Sequence

Return( lP8ApontaVld )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³SP8DelSPC	 ³Autor ³Marinaldo de Jesus    ³ Data ³28/08/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Deleta os Apontamentos do SPC baseados no SP8        		 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>   								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>   								 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                                                    	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generica                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function SP8DelSPC( dPerIni , dPerFim , cFil , cMat , lDelInfUsu )

Local cFilMat			:= ""
Local cFilSPC			:= ""
Local cMsgErr			:= ""

DEFAULT cFil 			:= SRA->RA_FILIAL
DEFAULT cMat 			:= SRA->RA_MAT
DEFAULT lDelInfUsu		:= .F.

cFilSPC	:= xFilial( "SPC" , cFil )
cFilMat := ( cFilSPC + cMat )
SPC->( dbSetOrder( RetOrdem( "SPC" , "PC_FILIAL+PC_MAT+DTOS(PC_DATA)" ) ) )
IF SPC->( dbSeek( cFilMat , .F. ) )
	While SPC->( !Eof() .and. PC_FILIAL + PC_MAT == cFilMat )
		IF SPC->( PC_DATA >= dPerIni .and. PC_DATA <= dPerFim )
			IF SPC->( RecLock( "SPC" , .F. ) )
				IF Empty( SPC->PC_PDI )
					IF !SPC->( FkDelete( @cMsgErr ) )
						RollBackDelTran( cMsgErr )
					EndIF
				Else
					IF !( lDelInfUsu )
						SPC->PC_PD		:= SPC->PC_PDI
						SPC->PC_QUANTC	:= 0
						SPC->PC_FLAG	:= "I"
					Else
						IF !SPC->( FkDelete( @cMsgErr ) )
							RollBackDelTran( cMsgErr )
						EndIF
					EndIF
				EndIF
				SPC->( MsUnLock() )
			EndIF	
		EndIF
		SPC->( dbSkip() )
	End While
EndIF

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona040Locks    ³Autor³Mauricio MR         ³ Data ³14/04/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Bloqueia Lancamentos de Marcacoes					         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL		                                               	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA140                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona040Locks( nOpc , cAlias , aRecnos )

Local lLocks	:= .T.
Local aRecAux	:= {}

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se nao For Visualizacao             	 					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nOpc == 4 ) 
		Break
	EndIF

	aEval( aRecnos , { |x| IF( !Empty( x ) , aAdd( aRecAux , x ) , NIL ) } )

	IF !( lLocks := WhileNoLock( cAlias , aRecAux , { SRA->RA_FILIAL + SRA->RA_MAT } , 1 , 1 , .T. , NIL ) )
		Break
	EndIF

End Sequence

Return( lLocks )


/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³RecriaCalend    ³Autor³Mauricio MR         ³ Data ³14/08/2005³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Recria o Calendario em funcao de Turnos Opcionais	         ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide parametros formais>									 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL		                                               	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Observa‡„o³                                                      	     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA040                                                      ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function RecriaCalend( aTabCalend, aTabPadrao, aTurnos, aMarcacoes )
Local lRet := .T.          

DEFAULT aTurnos := {}

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Carrega as Marcacoes do Funcionario para Ajustar os Turnos  ³
³ em funcao da existencia de turnos opcionais				  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
If 	__lChkTnoOpc
	lRet := CriaCalend(	dPerIni 		,;	//01 -> Data Inicial do Periodo
		   			   	dPerFim			,;	//02 -> Data Final do Periodo
				   		SRA->RA_TNOTRAB	,;	//03 -> Turno Para a Montagem do Calendario
				   		SRA->RA_SEQTURN	,;	//04 -> Sequencia Inicial para a Montagem Calendario
				   		@aTabPadrao		,;	//05 -> Array Tabela de Horario Padrao
				   		@aTabCalend		,;	//06 -> Array com o Calendario de Marcacoes
				   		SRA->RA_FILIAL  ,;	//07 -> Filial para a Montagem da Tabela de Horario
				   		SRA->RA_MAT		,;	//08 -> Matricula para a Montagem da Tabela de Horario
				   		SRA->RA_CC 		,;	//09 -> Centro de Custo para a Montagem da Tabela
				   		@aTurnos		,;	//10 -> Array com as Trocas de Turno
						NIL				,;	//11 -> Array com Todas as Excecoes do Periodo
						NIL				,;	//12 -> Se executa Query para a Montagem da Tabela Padrao
						.T.				,;	//13 -> Se executa a funcao se sincronismo do calendario
						NIL			 	,;	//14 -> Se Forca a Criacao de Novo Calendario
						aMarcacoes		;   //15 -> Array de marcacoes para Tratamento de Turnos Opcionais
		 	 		  )
Endif
Return ( lRet )	               


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao  Pn040VerGrava  ºAutor  ³Leandro Drumond     º Data ³  25/10/07   º±±
±±ÌÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.   ³ Caso exista alteracao nas marcacoes ou apontamentos, pergunta  º±±
±±º		   |se deseja gravar alteracoes.									º±±
±±ÌÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso     ³ PONA040                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Static Function Pn040VerGrava(cAlias,aColsRec,nOpcX,lApaga)
Local aArea 	:= GetArea()

DEFAULT lApaga := .T.

If !fCompArray(aCols1,aLastCols1) .or. (!Empty( aResult ) .and. !fCompArray(aResult,aLastApo))
	If !MsgYesNo( OemToAnsi( STR0130 ) )   //"Abandona Alteracoes Realizadas?"
		Pn040Grava(cAlias,nOpcX,aCampos,SRA->RA_FILIAL,SRA->RA_MAT,aColsRec)
	EndIF
EndIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Libera Registros Locados		                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
FreeLocks( IF( lPona180 , "SPH" , "SPC" ) , NIL , .T. )
FreeLocks( "SPK" , NIL , .T. )
FreeLocks( IF( lPona180 , "SPG" , "SP8" ) , If(!Empty(aColsRec),aColsRec,NIL) , .T. )
FreeLocks( IF( lPona180 , "SPG" , "SP8" ) , NIL , .T. )	

If lApaga
	cPeriodo  := ""
	cNumPagto := ""
	oPeriodo:cPeriodo := cPeriodo
	oPeriodo:cNumPagto := cNumPagto
EndIf

RestArea(aArea)

Return ( NIL )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PonChangePer	³Autor³Equipe Advanced RH ³ Data ³16/11/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Controla a alteracao da chave de busca de Periodos 		    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA040                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function PonChangePer()

Local lDaRefresh := .F.

DEFAULT cRot := "PON"

If ( ( cProcesso + cPeriodo + cNumPagto + cRot ) <> ( cAntProcesso + cAntPeriodo + cAntNumPagto + cAntRoteiro ) )
	
	If cPeriodo <> cAntPeriodo .and. cNumPagto == cAntNumPagto
		cAntNumPagto := cNumPagto
		cNumPagto    := ""
	EndIf
    
	oPeriodo:cPeriodo  := cPeriodo
	oPeriodo:cProcesso := cProcesso
	oPeriodo:cNumPagto := cNumPagto
	oPeriodo:cRoteiro  := cRot
   	lDaRefresh	 := .T.
Else 
	If !lPeriodo
		If ( ( dDataIni <> dPerIni ) .or. ( dDataFim <> dPerFim ) )
			oPeriodo:cPeriodo  := cPeriodo
			oPeriodo:cProcesso := cProcesso
			oPeriodo:cNumPagto := cNumPagto
			oPeriodo:cRoteiro := cRot
		   	lDaRefresh	 := .T.
		   	dPerIni := dDataIni
		   	dPerFim := dDataFim
		   	aDatas := { dPerIni , dPerFim }
		 EndIf
	EndIf
Endif

Return (lDaRefresh)  

/*/   
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³fGetPeriodo   ³ Autor ³ Equipe Advanced RH³ Data ³26/11/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Obtem o periodo de apontamento							    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Exemplo   ³oPeriodo:=RHPERIODO:New()       //Criacao do Obj            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fGetPeriodo( oPeriodo )										³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function fGetPeriodo( oPeriodo, lPriVez)

Local aArea 		:= GetArea()
Local lRet 			:= .T.

DEFAULT lPriVez := .F.

Begin Sequence      
    /*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Obtem Informacoes do Periodo Solicitado					  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	//Se não for acumulado, irá sempre verificar períodos vazios
	If !lPona180
      //Traz o periodo selecionado
		oPeriodo:PerSel()   
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Mostra Advertencia de Periodo Fechado p/ Manutencao de Perio ³
		³dos Abertos.												  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/	
		//Se lpona180 for .f., somente podera ser visualizado periodos que estejam abertos (rch_dtfecha vazio) 		
		If oPeriodo:lFechado 
			MsgInfo( OemToAnsi( oPeriodo:cMsgClosedPer ) )    //"Período de Apontamento Fechado. Selecione ou informe um Período Aberto."
			lRet		:= .F.
			Break
		EndIf	 
	Else
		If lPriVez
			oPeriodo:PerUltFech()
		Else		
			oPeriodo:GetPer("!EMPTY(RCH_DTFECH)")
		EndIf

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Mostra Advertencia de Periodo Aberto para Manutencao de Perio³
		³dos Fechados.												  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/	
	 	If oPeriodo:lAberto
			MsgInfo( OemToAnsi( oPeriodo:cMsgOpenedPer ) )    //"Período de Apontamento Aberto. Selecione ou informe um Período Fechado."
	 		lRet		:= .F.
	 		Break
	 	EndIf
	EndIf

    /*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Mostra Advertencia para Periodo Nao Encontrado				  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	If !oPeriodo:lFound
 		lRet		:= .F. 
		MsgInfo( OemToAnsi( oPeriodo:cMsgNotFoundPer ) )	//"Período de Apontamento Não Encontrado."
 		Break
	Endif	
	
End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Recupera Valores do Periodo antes da Troca de Periodo 		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/	
If !lRet
	oPeriodo:RollBack()
Endif

RestArea( aArea )

Return( lRet )

/*/   
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    |Pn040MontaGd  ³ Autor ³ Leandro Drumond   ³ Data ³14/12/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³monta a get e caso exista problema, monta novamente com 	|
|		   |com dados anteriores										|
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pn040MontaGd(cAlias, nOpcX, aColsRec, aAPOCols)				³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA040                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pn040MontaGd(cAlias, nOpcX, aColsRec, aAPOCols,lPriVez)
                                                                                                                               
If !pon040MontaGetDados(cAlias, nOpcX, SRA->RA_FILIAL, SRA->RA_MAT, @aColsRec, @aAPOCols, @oGet, lPriVez)
	SRA->(DbGoto(nRegAnt)) 
	cPeriodo  := ""
	cNumPagto := ""
	pon040MontaGetDados(cAlias, nOpcX, SRA->RA_FILIAL, SRA->RA_MAT, @aColsRec, @aAPOCols, @oGet, .T.)
Else
	cAntProcesso	:= cProcesso
	cAntPeriodo		:= cPeriodo
	cAntNumPagto	:= cNumPagto
	cAntRoteiro     := cRot
EndIf

Return(NIL)

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8PostoInit  ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo P8_POSTO					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8PostoInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³cPosto													  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8PostoInit()

Local dDataApo := P8DataApoInit()
Local cPosto   := PGP8BuscaInit( CALEND_POS_POSTO , "P8_POSTO" , dDataApo , "P8_" )

Return( cPosto )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8DeptoInit  ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo P8_DEPTO					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8DeptoInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³cDepto													  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8DeptoInit()

Local dDataApo := P8DataApoInit()
Local cDepto   := PGP8BuscaInit( CALEND_POS_DEPTO , "P8_DEPTO" , dDataApo , "P8_")

Return( cDepto )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8ProcesInit ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo P8_PROCES					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8ProcesInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³cProcess												  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8ProcesInit()

Local dDataApo  := P8DataApoInit()
Local cProcesso := PGP8BuscaInit( CALEND_POS_PROCESSO , "P8_PROCES" , dDataApo , "P8_" )

Return( cProcesso )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8FuncInit	  ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo P8_CODFUNC				  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8FuncInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³cFunc													  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8FuncInit()

Local dDataApo := P8DataApoInit()
Local cFunc    := PGP8BuscaInit( CALEND_POS_CODFUNC , "P8_CODFUNC" , dDataApo , "P8_" )

Return( cFunc )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8RoteirInit ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo P8_ROTEIR 				  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8RoteirInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³cRoteiro												  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8RoteirInit()

Local dDataApo := P8DataApoInit()
Local cRoteiro := PGP8BuscaInit( CALEND_POS_ROTEIRO , "P8_ROTEIR" , dDataApo , "P8_" )

Return( cRoteiro )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8PeriodoInit³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo P8_PERIODO				  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8PeriodoInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |cPer												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8PeriodoInit()

Local dDataApo := P8DataApoInit()
Local cPeriodo := PGP8BuscaInit( CALEND_POS_PERIODO , "P8_PERIODO" , dDataApo , "P8_" )

Return( cPeriodo )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8NumPagInit ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo P8_NUMPAG					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8NumPagInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |cNumPag												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8NumPagInit()

Local dDataApo := P8DataApoInit()
Local cNumPag  := PGP8BuscaInit( CALEND_POS_NUM_PAGTO , "P8_NUMPAG" , dDataApo , "P8_" )

Return( cNumPag )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGPostoInit  ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PG_POSTO					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGPostoInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³cPosto													  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGPostoInit()

Local dDataApo := PGDataApoInit()
Local cPosto   := PGP8BuscaInit( CALEND_POS_POSTO , "PG_POSTO" , dDataApo , "PG_" )

Return( cPosto )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGDeptoInit  ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PG_DEPTO					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGDeptoInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³cDepto													  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGDeptoInit()

Local dDataApo := PGDataApoInit()
Local cDepto   := PGP8BuscaInit( CALEND_POS_DEPTO , "PG_DEPTO" , dDataApo , "PG_" )

Return( cDepto )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGProcesInit ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PG_PROCES					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGProcesInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³cProcess												  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGProcesInit()

Local dDataApo  := PGDataApoInit()
Local cProcesso := PGP8BuscaInit( CALEND_POS_PROCESSO , "PG_PROCES" , dDataApo , "PG_" )

Return( cProcesso )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGFuncInit   ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PG_CODFUNC				  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGFuncInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³cFunc													  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGFuncInit()

Local dDataApo := PGDataApoInit()
Local cFunc    := PGP8BuscaInit( CALEND_POS_CODFUNC , "PG_CODFUNC" , dDataApo , "PG_" )

Return( cFunc )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGRoteirInit ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PG_ROTEIR					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGRoteirInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³cRoteiro												  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGRoteirInit()

Local dDataApo := PGDataApoInit()
Local cRoteiro := PGP8BuscaInit( CALEND_POS_ROTEIRO , "PG_ROTEIR" , dDataApo , "PG_" )

Return( cRoteiro )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGPeriodoInit³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PG_PERIODO				  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGPeriodoInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |cPer												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGPeriodoInit()

Local dDataApo := PGDataApoInit()
Local cPeriodo := PGP8BuscaInit( CALEND_POS_PERIODO , "PG_PERIODO" , dDataApo , "PG_" )

Return( cPeriodo )

/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGNumPagInit ³Autor³Equipe Advanced RH ³ Data ³31/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campo PG_NUMPAG					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGNumPagInit()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |cNumPag												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGNumPagInit()

Local dDataApo := PGDataApoInit()
Local cNumPag  := PGP8BuscaInit( CALEND_POS_NUM_PAGTO , "PG_NUMPAG" , dDataApo , "PG_" )

Return( cNumPag )


//Funcoes de validacao
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8ProcesVld  ³Autor³Leandro Drumond    ³ Data ³20/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo P8_PROCES							  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8ProcesVld()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |Logico												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8ProcesVld()

Local lRet := EXISTCPO("RCJ")

Return( lRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8RoteirVld  ³Autor³Leandro Drumond    ³ Data ³20/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo P8_ROTEIR							  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8RoteirVld()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |Logico												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8RoteirVld()

Local lRet := EXISTCPO("SRY")

Return( lRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8PeriodoVld ³Autor³Leandro Drumond    ³ Data ³20/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo P8_PERIODO 							  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8PeriodoVld()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |Logico												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8PeriodoVld()

Local lRet := EXISTCPO("RCH")

Return( lRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8DeptoVld   ³Autor³Leandro Drumond    ³ Data ³20/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo P8_DEPTO								  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8DeptoVld()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |Logico												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8DeptoVld()

Local lRet := EXISTCPO("SQB")

Return( lRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8PostoVld   ³Autor³Leandro Drumond    ³ Data ³20/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo P8_POSTO								  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8PostoVld()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |Logico												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8PostoVld()

Local lRet := EXISTCPO("RCL")

Return( lRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ P8FuncVld    ³Autor³Leandro Drumond    ³ Data ³20/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo P8_CODFUNC							  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³P8FuncVld()			   									  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |Logico												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function P8FuncVld()

Local lRet := EXISTCPO("SRJ")

Return( lRet )



/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGProcesVld  ³Autor³Leandro Drumond    ³ Data ³20/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo PG_PROCES							  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGProcesVld()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |Logico												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGProcesVld()

Local lRet := EXISTCPO("RCJ")

Return( lRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGRoteirVld  ³Autor³Leandro Drumond    ³ Data ³20/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo PG_ROTEIR							  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGRoteirVld()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |Logico												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGRoteirVld()

Local lRet := EXISTCPO("SRY")

Return( lRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGPeriodoVld ³Autor³Leandro Drumond    ³ Data ³20/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo PG_PERIODO 							  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGPeriodoVld()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |Logico												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGPeriodoVld()

Local lRet := EXISTCPO("RCH")

Return( lRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGDeptoVld   ³Autor³Leandro Drumond    ³ Data ³20/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo PG_DEPTO								  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGDeptoVld()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |Logico												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGDeptoVld()

Local lRet := EXISTCPO("SQB")

Return( lRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGPostoVld   ³Autor³Leandro Drumond    ³ Data ³20/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo PG_POSTO								  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGPostoVld()											  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |Logico												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGPostoVld()

Local lRet := EXISTCPO("RCL")

Return( lRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGFuncVld    ³Autor³Leandro Drumond    ³ Data ³20/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo PG_CODFUNC							  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGFuncVld()			 									  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  |Logico												  	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >								  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGFuncVld()

Local lRet := EXISTCPO("SRJ")

Return( lRet )


/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ PGP8BuscaInit³Autor³Leandro Drumond    ³ Data ³19/02/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador padrao do campos PG e P8					  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PGP8BuscaInit(cCampoCalend,cCampo,dDataApo,n,cPrefix )	  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³Generico                                                  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Function PGP8BuscaInit( cCampoCalend , cCampo , dDataApo , cPrefix )

Local uRet
Local nPos := 0

IF ( ( Type("n") <> "U" ) .and. ( Type("aTabcalend") <> "U" ) )
	nPos := aScan(aTabCalend, {|x| x[CALEND_POS_DATA_APO] == dDataApo .and. x[CALEND_POS_TIPO_MARC] == "1E" } )
	uRet := aTabCalend[ nPos , cCampoCalend ]
Else
	uRet := CalendRetCpo( cCampo,,,cPrefix  )
EndIF

Return( uRet )
/*
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ MenuDef		³Autor³  Luiz Almeida     ³ Data ³21/11/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Isola opcoes de menu para que as opcoes da rotina possam    ³
³          ³ser lidas pelas blibliotecas Framework da Versao 9.12 .     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Uso      ³PONA040                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³aRotina														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Static Function MenuDef()
/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Array contendo as Rotinas a executar do programa      ³
	³ ----------- POSentos contidos por dimensao ------------     ³
	³ 1. Nome a aparecer no cabecalho                              ³
	³ 2. Nome da Rotina associada                                  ³
	³ 3. Usado pela rotina                                         ³
	³ 4. Tipo de Transa‡„o a ser efetuada                          ³
	³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
	³    2 - Simplesmente Mostra os Campos                         ³
	³    3 - Inclui registros no Bancos de Dados                   ³
	³    4 - Altera o registro corrente                            ³
	³    5 - Remove o registro corrente do Banco de Dados          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/

	aRotina := {	{ STR0006 , "PesqBrw"   	, 0 , 1 , ,.F.} ,;		//'Pesquisar'
					{ STR0007 , "Pn040Atu"  	, 0 , 4 } ,;			//'Atualizar'    2
					{ STR0009 , "Pn040Atu"  	, 0 , 5 } ,;			//'Excluir'      3
					{ STR0001 , "Pn040Atu"  	, 0 , 2 } ,;			//'Visualizar'   4
					{ STR0099 , "GpLegend"  	, 0 , 2 , ,.F.}  ;		//'Legenda'
				}

Return aRotina

/*/{Protheus.doc}BloqPer()
- Verifica se o usuário ( Quando remote ) possui acesso aos lançamentos do Ponto Eletrônico
- na DataBase vigente, ou se o usuário logado no portal GCH, possui acesso na DataBase vigente.
@author: Matheus Bizutti
@since:  19/01/2017
@param:  lPortal - Indica se está sendo chamado para uso através do Portal GCH.
/*/
Function BloqPer(lPortal)
	
	Local cSemanaRG3 := ""
	Local lRet		 := .F.
	
	Default lPortal	 := .F.
	
	// - Retorna o dia a partir da DataBase.
	cSemanaRG3 := Dtos(dDataBase)
	cSemanaRG3 := Substr(cSemanaRG3,7,2)
	
	// - Valida se o usuário tem acesso ao lançamento de marcações
	// - No período informado.
	If !( fVldAccess(cFilAnt, dDataBase, cSemanaRG3, .T., "PON", "1" , "G", lPortal) )
		lRet := .T.
	EndIf
	
Return (lRet)
