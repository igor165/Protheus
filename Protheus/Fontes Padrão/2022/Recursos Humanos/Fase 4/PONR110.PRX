#INCLUDE 'PONR110.CH'
#INCLUDE 'FiveWin.CH'
#INCLUDE "PONCALEN.CH" 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ             				
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PONR110  ³ Autor ³ R.H. - Priscila       ³ Data ³ 02.08.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Relatorio para Autorizacoes                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PONR110(void)                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Mauricio MR ³04/12/02³------³Retirada a restricao de existencia de cra-³±± 
±±³            ³--------³------³cha para a emissao do relatorio.	      ³±± 
±±³=======================================================================³±± 
±±³                         *** Versao 9.12 ***                           ³±± 
±±³=======================================================================³±±  
±±³Leandro Dr  ³02/04/08³Melhor³Inclusão de chave processo/periodo/roteiro³±± 
±±³            |        |      |NumPagto. Impressao por data ou periodo   ³±± 
±±³Francisco Jr³17/11/09³026122³Compatibilizacao Projeto Corporativo.     ³±± 
±±³R.Berti 	   ³17/10/11³TDVGF1³Correcao na montagem da var. cSitFol onde ³±± 
±±³        	   ³        ³      ³nao imprimia empregados com Situacao = F  ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function PONR110()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Locais (Basicas)                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cDesc1    := STR0001  // "Relatorio para Autorizacoes"
Local cDesc2    := STR0002  // "Ser  impresso de acordo com os parametros solicitados pelo"
Local cDesc3    := STR0003  // "usuario."
Local cString   :="SRA"        // alias do arquivo principal (Base)
Local aOrd := {STR0004 ,STR0005 ,STR0006 ,STR0007 ,STR0020 , STR0034} // "Matricula"###"Centro de Custo"###"Nome"###"Turno"###"C.Custo+Nome"###"Departamento"
Local wnRel

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis PRIVATE(Basicas)                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aReturn := { STR0008 , 1,STR0009 , 1, 2, 1, "",1 } // "Zebrado"###"Administracao"
PRIVATE nomeprog:="PONR110"
PRIVATE aLinha  := { },nLastKey := 0
PRIVATE cPerg   := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis Utilizadas na funcao IMPR                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE Titulo  :=OemToAnsi(STR0001 ) // "Relatorio para Autorizacoes
PRIVATE AT_PRG  := "PONR110"
PRIVATE wCabec0 := 2
PRIVATE wCabec1 :=" "
PRIVATE wCabec2 :=" "
PRIVATE CONTFL  :=1
PRIVATE Li      := 0
PRIVATE nTamanho:="N"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis PRIVATE(Programa)                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE nOrdem
PRIVATE aInfo   :={}
PRIVATE lPrevisao:= .F.

Private cProcesso := Nil
Private cPeriodo  := Nil
Private cRoteiro  := Nil
Private cNumPagto := Nil
Private cDeptoDe
Private cDeptoAte
Private dPerIni   := CtoD("//")
Private dPerFim   := CtoD("//")
Private lPeriodo  := .F.
Private nColPro
Private oPeriodo  := RHPERIODO():New()

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica se deve imprimir por periodo ou datas			   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
If fOpcRadio(@nColPro, STR0001,;      //"Relatorio para Autorizacoes"
					   STR0027,;      //"Selecione a opcao de impressao:"
			   		   STR0028,;      //"Por Periodo"
			   		   STR0029 ) == 0 //"Por Datas"
	Return
EndIf
	
cPerg := IF(nColPro == 1,"PNR110A","PNR110B")

Pergunte(cPerg,.F.)

If ( nColPro == 1 ) 
	cProcesso := mv_par01			//Processo
	cPeriodo  := mv_par02			//Periodo
	cRoteiro  := mv_par03			//Roteiro
	cNumPagto := mv_par04			//Numero de Pagamento
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnrel:="PONR110"            //Nome Default do relatorio em Disco
wnrel:=SetPrint(cString,wnrel,cPerg,@Titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd,,nTamanho)

If	nLastKey = 27
	Return Nil
Endif

SetDefault(aReturn,cString)
	
If nLastKey = 27
	Return Nil
Endif
cCabec  := STR0001  // "Relatorio para Autorizacoes"
	
RptStatus({|lEnd| PO110Imp(@lEnd,wnRel,cString)},Titulo)
		
Return Nil
		
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PO110Imp ³ Autor ³ R.H. - Priscila       ³ Data ³ 02.07.02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Relatorio para Autorizacoes                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ PO110Imp(lEnd,wnRel,cString)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ lEnd        - A‡Æo do Codelock                             ³±±
±±³          ³ wnRel       - T¡tulo do relat¢rio                          ³±±
±±³Parametros³ cString     - Mensagem                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function PO110Imp(lEnd,WnRel,cString)

Local aCodigos  	:= {}
Local aJustifica   	:= {}	//-- retorna Justificativa de abono
Local xQuant       	:= 0
Local nPos         	:= 0
Local cPD          	:= Space(03)
Local cAcessaSRA 	:= &("{ || " + ChkRH("PONR110","SRA","2") + "}")
Local cAcessaSPC 	:= &("{ || " + ChkRH("PONR110","SPC","2") + "}")
Local nTab	     	:=0
Local nPosTab	 	:=0
Local nLenCalend 	:=0
Local aPrevFun   	:={}
Local dDataApo	 	:=CtoD('//') 
Local nLimite    	:= 0
Local nFor			:= 0
Local nX		 	:= 0
Local cCol1      	:= ''
Local cCol2      	:= ''
Local cFilCompara	:= Space(FwGetTamFilial)
Local X				:= 0

Private cDet	 	:= ''
Private cDet1  	 	:= ''
Private cDet2	 	:= ''
Private cDet3	 	:= ''
Private cChave		:= ''
Private nVez	 	:= 0
Private cItem    	:= ''
Private lImpLinhas	:= ''
Private aDet       	:= {}
Private lCabec     	:= .F.
Private lCabecCC   	:= .F.
Private lCabecTT   	:= .F.
Private aMarcFun   	:= {}
Private aTabPadrao 	:= {}
Private aTabCalend 	:= {}
Private nPosMarc   	:= 0
Private nLenMarc   	:= 0
Private cCabec  	:= 	STR0001  // "Relatorio para Autorizacoes"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando variaveis mv_par?? para Variaveis do Sistema.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nOrdem   := aReturn[8]

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando variaveis mv_par?? para Variaveis do Sistema.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nColPro == 1 ) 
	lPeriodo  := .T.
	cProcesso := mv_par01			//Processo
	cPeriodo  := mv_par02			//Periodo
	cRoteiro  := mv_par03			//Roteiro
	cNumPagto := mv_par04			//Numero de Pagamento
	cDeptoDe  := mv_par05			//Depto De
	cDeptoAte := mv_par06			//Depto Ate	
	FilialDe  := mv_par07
	FilialAte := mv_par08
	CcDe      := mv_par09
	CcAte     := mv_par10
	TurDe     := mv_par11
	TurAte    := mv_par12
	MatDe     := mv_par13
	MatAte    := mv_par14
	NomDe     := mv_par15
	NomAte    := mv_par16
	cSit      := mv_par17
	cCat      := mv_par18
	lCC       := If(mv_par19 == 1,.T.,.F.)
	lImpAbon  := If(Mv_Par20 == 1,.T.,.F.)      // Imprimir Abonados
	lTodEvent := If(mv_par21 == 1,.T.,.F.) 		//Seleciona "S" ou "N" todos os Eventos do Ponto //
	cEventos  := mv_par22						//Seleciona os Codigos dos Eventos //
	cCont1	  := mv_par23						//Continuacao dos Codigos dos Eventos //
	cCont2	  := mv_par24 						//Continuacao dos Codigos dos Eventos //
	nSinAna   := mv_par25 						//Relatorio Sintetico ou Analitico//
	lImpFol	  := If(mv_par26 == 1,.T.,.F.)
	lImpMot   := IF(mv_par27 == 1,.T.,.F.)
	lImpMar	  := If(mv_par28 == 1,.T.,.F.)
	RegDe     := mv_par29
	RegAte    := mv_par30
	lPrevisao := IF(mv_par31 == 1,.T.,.F.) 		 //.T. - Lista Horario Previsto
Else
	lPeriodo  := .F.
	cProcesso := mv_par01			//Processo
	dPerIni   := mv_par02
	dPerFim   := mv_par03
	cDeptoDe  := mv_par04			//Depto De
	cDeptoAte := mv_par05			//Depto Ate
	FilialDe  := mv_par06
	FilialAte := mv_par07
	CcDe      := mv_par08
	CcAte     := mv_par09
	TurDe     := mv_par10
	TurAte    := mv_par11
	MatDe     := mv_par12
	MatAte    := mv_par13
	NomDe     := mv_par14
	NomAte    := mv_par15
	cSit      := mv_par16
	cCat      := mv_par17
	lCC       := If(mv_par18 == 1,.T.,.F.)
	lImpAbon  := If(Mv_Par19 == 1,.T.,.F.)      // Imprimir Abonados
	lTodEvent := If(mv_par20 == 1,.T.,.F.) 		//Seleciona "S" ou "N" todos os Eventos do Ponto //
	cEventos  := mv_par21						//Seleciona os Codigos dos Eventos //
	cCont1	  := mv_par22						//Continuacao dos Codigos dos Eventos //
	cCont2	  := mv_par23 						//Continuacao dos Codigos dos Eventos //
	nSinAna   := mv_par24 						//Relatorio Sintetico ou Analitico//
	lImpFol	  := If(mv_par25 == 1,.T.,.F.)
	lImpMot   := IF(mv_par26 == 1,.T.,.F.)
	lImpMar	  := If(mv_par27 == 1,.T.,.F.)
	RegDe     := mv_par28
	RegAte    := mv_par29
	lPrevisao := IF(mv_par30 == 1,.T.,.F.) 		 //.T. - Lista Horario Previsto
EndIf

If lPeriodo
	oPeriodo:cProcesso := cProcesso
	oPeriodo:cPeriodo  := cPeriodo
	oPeriodo:cRoteiro  := cRoteiro
	oPeriodo:cNumPagto := cNumPagto

	oPeriodo:GetPer()
	
	If !(oPeriodo:lFound )
		MsgInfo( OemToAnsi( oPeriodo:cMsgNotFoundPer ) )    //"Período de Apontamento não encontrado."
		Return
	EndIf
	
	dPerIni := oPeriodo:dDataIni
	dPerFim := oPeriodo:dDataFim
Else
	oPeriodo:dDataIni := dPerIni
	oPeriodo:dDataFim := dPerFim	
EndIf

If dPerIni > dPerFim  	 				//Data Inicial /Data Final
	Help(" ",1,"PNR110DATA")
	Return Nil
Endif

//-- Para Relatorio Sintetico nao imprime Previsao e/ou Marcacao
If nSinAna==1
	lPrevisao:=.F.
	lImpMar	:=.F.
Endif

cCodigos :=""
For X = 1 To 30 Step 3
	cCodigos	+= SubStr(cEventos,X,3)
	cCodigos	+= "*"
	cCodigos	+= SubStr(cCont1,X,3)
	cCodigos	+= "*"
	cCodigos	+= SubStr(cCont2,X,3)
	cCodigos	+= "*"
Next
		
#IFDEF TOP
	fImpTOP110( lEnd, WnRel, cString, nOrdem )
	Return (NIL)	
#ENDIF
		
dbSelectArea( "SRA" )
dbGoTop()
DbSetOrder(nOrdem)

If nOrdem == 1
	dbSeek(FilialDe + MatDe,.T.)
	cInicio  := "SRA->RA_FILIAL + SRA->RA_MAT"
	cFim     := FilialAte + MatAte
ElseIf nOrdem == 2
	dbSeek(FilialDe + CcDe + MatDe,.T.)
	cInicio  := "SRA->RA_FILIAL + SRA->RA_CC + SRA->RA_MAT"
	cFim     := FilialAte + CcAte + MatAte
	lCabecCC := IF(!lImpFol,.T.,.F.)
ElseIf nOrdem == 3
	dbSeek(FilialDe + NomDe + MatDe,.T.)
	cInicio  := "SRA->RA_FILIAL + SRA->RA_NOME + SRA->RA_MAT"
	cFim     := FilialAte + NomAte + MatAte
ElseIf nOrdem == 4
	dbSeek(FilialDe + TurDe,.T.)
	cInicio  := "SRA->RA_FILIAL + SRA->RA_TNOTRAB"
	cFim     := FilialAte + TurAte
	lCabecTT := IF(!lImpFol,.T.,.F.)
ElseIf nOrdem == 5
	dbSetOrder(8)
	dbSeek(FilialDe + CcDe + NomDe,.T.)
	cInicio  := 'SRA->RA_FILIAL + SRA->RA_CC + SRA->RA_NOME'
	cFim     := FilialAte + CcAte + NomAte
ElseIf nOrdem == 6
	dbSetOrder(22)
	dbSeek(FilialDe + cDeptoDe + MatDe,.T.)
	cInicio  := 'SRA->RA_FILIAL + SRA->RA_DEPTO + SRA->RA_MAT'
	cFim     := FilialAte + cDeptoAte + MatAte	
Endif

//--Numero de registros a serem processados na Regua
SetRegua(SRA->(RecCount()))

cTnoAnt      := 'úúú'
cSeqAnt      := 'úú'
aTabCalend   := {}
cTurnoant    := "@@@"
cFilAnterior := Replicate("@", FwGetTamFilial)
cCcAnt       := Replicate('@',Len(SRA->RA_CC))

dbSelectArea( "SRA" )
While !EOF() .And. &cInicio <= cFim

	//--Movimenta regua de processamento
	IncRegua()
	
	//--Botao cancela da impressao
	If lEnd
		IMPR(cCancela,"C")
		Exit
	EndIF
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Consiste controle de acessos e filiais validas               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !(SRA->RA_FILIAL $ fValidFil()) .Or. !Eval(cAcessaSRA)
		SRA->(dbSkip())
		Loop
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Consiste Parametrizacao do Intervalo de Impressao            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SRA->(;
				(  RA_TNOTRAB	< Turde ) .or. ( 	RA_TNOTRAB	> TurAte ) .or. ;
				(  RA_NOME 		< NomDe ) .or. ( 	RA_NOME 	> NomAte ) .or. ;
				(  RA_MAT 		< MatDe ) .or. ( 	RA_MAT 		> MatAte ) .or. ;
				(  RA_CC 		< CCDe  ) .or. ( 	RA_CC 		> CCAte	 ) .or. ;
				(  RA_REGRA		< RegDe ) .or. ( 	RA_REGRA	> RegAte ) .or. ;				
				(  RA_DEPTO		< cDeptoDe) .or. ( 	RA_DEPTO	> cDeptoAte	 );
			)
		SRA->(dbSkip())
		Loop
	EndIF	

	If !Empty(cProcesso)
		If SRA->RA_PROCES <> cProcesso
			SRA->( dbSkip() )
			Loop
		EndIf
	EndIf
	
	If  (SRA->RA_DEMISSA < dPerIni .AND. ! Empty(SRA->RA_DEMISSA))
		SRA->(DbSkip())
		Loop
	Endif
	
	If !(SRA->RA_SITFOLH $ cSit) .Or. !(SRA->RA_CATFUNC $ cCat)
		DbSkip()
		Loop           // Testa Categoria e Situacao
	Endif
	
	If SRA->RA_FILIAL # cFilAnterior // quebra filial
		lCabec := .T.
		cFilAnterior := SRA->RA_Filial
		cTurnoAnt := "@@@"
		cCcAnt       := Replicate('@',Len(SRA->RA_CC))

		//--Carrega array com os eventos do Ponto a cada troca de Filial
		dbSelectArea("SP9")
		If (xFilial("SP9") == Space(FwGetTamFilial) .And. Empty(aCodigos)) .Or. ;
		   (xFilial("SP9") # Space(FwGetTamFilial) .And. cFilAnterior # cFilCompara	)

			If !DbSeek(cFilAnterior)
				If !DbSeek(Replicate(" ",FwGetTamFilial))
					Exit
				Endif
			Endif
			
			cFilCompara := SP9->P9_FILIAL
			aCodigos := {}
			While ! Eof() .AND. SP9->P9_FILIAL = cFilCompara
		
				If lTodEvent .Or. (SP9->P9_CODIGO $ cCodigos)
					Aadd(aCodigos,{Left(SP9->P9_CODIGO,3),P9_DESC})
				Endif
				DbSkip()
			EndDo
		Endif	   
	Endif

	//--Verifica Quebra de Turno na Impressão Ordem por Turno
	If nOrdem == 4 .And. cTurnoAnt # SRA->RA_TNOTRAB
		If !lImpFol
			lCabecTT := .T.
		Endif
		cCcAnt    := Replicate('@',Len(SRA->RA_CC))
		cTurnoAnt := SRA->RA_TNOTRAB
	Endif

	//--Verifica Quebra de C.Custo na Impressão Ordem por C.Custo
	If (nOrdem == 2 .Or. nOrdem == 5) .AND. SRA->RA_CC # cCcAnt
		If lCc
			lCabec := .T.
		Endif
		lCabecCC := .T.
	Endif

	cCcAnt := SRA->RA_CC
	cTurnoAnt := SRA->RA_TNOTRAB
	dDtMarc:=CtoD("  /  /  ")
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria Calendario de Marca‡oes do Periodo                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cTnoAnt + cSeqAnt # SRA->RA_TNOTRAB + SRA->RA_SEQTURN
		cTnoAnt    := SRA->RA_TNOTRAB
		cSeqAnt    := SRA->RA_SEQTURN
	Endif
	
	//-- Cria Calendario com o periodo completo com Trocas de Turno
	aTabCalend := {} ; aTurnos   := {} ; aMarcacoes := {}
	
	//-- Carrega as Marcacoes do Periodo
	IF !GetMarcacoes( 	@aMarcacoes 	,;	//Marcacoes dos Funcionarios
					  	@aTabCalend		,;	//Calendario de Marcacoes
					  	@aTabPadrao		,;	//Tabela Padrao
					  	@aTurnos		,; 	//Turnos de Trabalho
						dPerIni 		,; 	//Periodo Inicial
						dPerFim			,;	//Periodo Final
						SRA->RA_FILIAL	,;	//Filial
						SRA->RA_MAT		,; 	//Matricula
						SRA->RA_TNOTRAB	,; 	//Turno
						SRA->RA_SEQTURN	,; 	//Sequencia de Turno
						SRA->RA_CC		,;	//Centro de Custo
						"SP8"			,; 	//Alias para Carga das Marcacoes
						.F.    			,;	//13 -> Se carrega Recno em aMarcacoes
						.T.    			,;	//14 -> Se considera Apenas Ordenadas
						.T.    			,;	//15 -> Se Verifica as Folgas Automaticas
						.F.    			,;	//16 -> Se Grava Evento de Folga Automatica Periodo Anterior
						NIL				,;	//17 -> Se Carrega as Marcacoes Automaticas
						NIL				,;	//18 -> Registros de Marcacoes Automaticas que deverao ser Desprezadas
						NIL				,;	//19 -> Bloco para avaliar as Marcacoes Automaticas que deverao ser Desprezadas
						.F.				,;	//20 -> Se Considera o Periodo de Apontamento das Marcacoes
						.F.				,;	//21 -> Se Efetua o Sincronismo dos Horarios na Criacao do Calendario
						.T.				,;  //22 -> Se considera data de apontamento
						.T.				;	//23 -> Se considera data inicial	
		)
		Set Device to Screen
		Help(' ',1,'PONSCALEND')
		Set Device to Printer
		cTnoAnt := 'úúú'
		cSeqAnt := 'úú'
		SRA->(dbSkip())
		Loop
	EndIF
	
	//-- Obtem Qtde de Marcacoes
	nLenMarc:=Len(aMarcacoes)
	
	aDet := {}
	
	// 1 - Data
	// 2 - Codigo do Evento
	// 3 - Descricao do Evento
	// 4 - Numero de Horas
	// 5 - Descricao do Abono
	// 6 - Quantidade de horas Abonadas
	// 7 - Marcacoes
	
	dbSelectArea( "SPC" )
	dbSetOrder(2)
	
	If DbSeek(SRA->RA_FILIAL + SRA->RA_MAT )
		While !Eof() .And. SPC->PC_FILIAL+SPC->PC_MAT == SRA->RA_FILIAL+SRA->RA_MAT

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Consiste controle de acessos e filiais validas               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Eval(cAcessaSPC)
				SPC->(dbSkip())
				Loop
			EndIf
			
			//-- Verifica o Periodo Solicitado
			If Empty(SPC->PC_DATA) .OR. SPC->PC_DATA < dPerIni .OR. SPC->PC_DATA > dPerFim
				DbSkip()
				Loop
			Endif
			
			//-- Verifica se Deve Imprimir os Abonados
			If !lImpAbon .And. SPC->PC_QTABONO > 0
				dbSkip()
				Loop
			Endif
			
			//-- Utiliza o codigo informado qdo houver
			cPD := If(Empty(SPC->PC_PDI),SPC->PC_PD,SPC->PC_PDI)
			cCodTot:=cPD
			//-- Verifica se e um codigo contido na relacao de codigos
			//-- definidas segundo avariavel cCodigos
			nPos := Ascan(aCodigos,{ |x| x[1] = cPD })
			//-- Se o Codigo do Evento apontado  eh Valido
			If nPos > 0
				//-- Obtem a quantidade do evento apontando
				xQuant := If(SPC->PC_QUANTI>0,SPC->PC_QUANTI,SPC->PC_QUANTC)
				//-- Posiciona na TabCalend para a Data Lida
				nTab := Ascan(aTabCalend, {|x| x[CALEND_POS_DATA] == SPC->PC_DATA .And. x[CALEND_POS_TIPO_MARC] == '1E' })
				//-- Se existir calendario para o apontamento
				//-- Obs.: Se um apontamento for digitado pode ocorrer de nao ter
				//--       uma data correspondente na TabCalend ???
				If nTab>0
					//-- Obtem a Data de Apontamento para a Data Lida
					dDataApo  := aTabCalend[nTab,CALEND_POS_DATA_APO] //--Data de apontamento
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Obtem as Previsoes Cadastradas p/a Ordem Lida  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					aPrevFun:={}
					If lPrevisao
						nLenCalend:=Len(aTabCalend)
						nPosTab:=nTab
						//-- Corre as Previsoes de mesma Data de Apontamento
						While dDataApo == aTabCalend[nPosTab,CALEND_POS_DATA_APO]
							Aadd(aPrevFun,StrTran(StrZero(aTabCalend[nPosTab,CALEND_POS_HORA],5,2),'.',':'))
							//-- Obtem novo Horario
							nPosTab ++
							If	nPosTab > nLenCalend
								Exit
							Endif
						EndDo
					Endif
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Obtem as Marcacoes Realizadas para a Ordem Lida³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					aMarcFun:={}
					If lImpMar
						//-- A aMarcacoes ‚ setado para a 1a Marca‡„o do dia em quest„o.
						//-- de acordo com a data de apontamento da tabela
						nPosMarc:=Ascan(aMarcacoes,{|x| x[AMARC_DATAAPO]==dDataApo})
						//-- Se Existir Marcacao para o Dia
						If !Empty(nPosMarc)
							//--  Corre Todas as marcacoes enquanto a mesma data de apontamento
							While dDataApo == aMarcacoes[nPosMarc,AMARC_DATAAPO]
								//-- Monta o array com as Marcacoes do funcionario para a data de apontamento.
								Aadd(aMarcFun,StrTran(StrZero(aMarcacoes[nPosMarc,2],5,2),'.',':'))
								nPosMarc++
								//-- Se o contador ultrapassar o total de Marcacoes abandona loop
								If nPosMarc>nLenMarc
									Exit
								Endif
							EndDo
						Endif
					Endif
				Endif
				
				aJustifica := {}
				
				If lImpMot
					//-- Verifica se existe abonos e posiciona registro de abono
					fAbonos(SPC->PC_DATA, aCodigos[nPos,1],,@aJustifica,SPC->PC_TPMARCA,SPC->PC_CC,,SPC->PC_CODFUNC,SPC->PC_DEPTO,SPC->PC_POSTO,SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG)
				Endif
				
				If nSinAna == 1	// Sintetica
					//-- Sintetiza por Evento
					If (nPosDet:=Ascan(aDet,{ |x| x[2] = cPD })) > 0
						aDet[nPosDet,4]:=SomaHoras(aDet[nPosDet,4],xQuant)
	                    //-- Acumula Abonado somente se Nao for imprimir os motivos do mesmo
						aDet[nPosDet,6]		:=If(Empty(aDet[nPosDet,6]),SomaHoras(aDet[nPosDet,6],SPC->PC_QTABONO),aDet[nPosDet,6])
						aDet[nPosDet,12]	:='A' //Ordem para Obrigar que esse seja o primeiro elemento
						//apos o Sort do aDet
					Endif

					//-- Acrescenta os motivos de abono para o evento
					If Len(aJustifica) > 0 .And. lImpMot
						For nX := 1 To Len(aJustifica)
							//-- Totaliza cada motivo para o mesmo evento
							If (nPosDet:=Ascan(aDet,{ |x| x[2] = cPD .AND. x[11]==aJustifica[nX,1]})) > 0
								//-- Totaliza Abonos para mesmo motivo
								aDet[nPosDet,6]:=SomaHoras(aDet[nPosDet,6],aJustifica[nX,2])
							Else
								aAdd(aDet,{ SPC->PC_DATA, aCodigos[nPos,1], aCodigos[nPos,2] ,xQuant,;
								PADR(DescAbono(aJustifica[nX,1],'C'),25),;
								aJustifica[nX,2],aMarcFun,aPrevFun,SPC->PC_TPMARCA,SPC->PC_CC,	aJustifica[nX,1],'Z',;
								SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG})
							Endif
						Next nX
					Else
						If nPosDet==0
							aAdd(aDet,{ SPC->PC_DATA, aCodigos[nPos,1], aCodigos[nPos,2] ,	xQuant,;
							SPACE(25),0,aMarcFun,aPrevFun,SPC->PC_TPMARCA,SPC->PC_CC,SPACE(3),'Z',;
							SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG})
						Endif
					Endif
				Else
					If Len(aJustifica) > 0 .And. lImpMot
						For nX := 1 To Len(aJustifica)
							aAdd(aDet,{ SPC->PC_DATA, aCodigos[nPos,1], aCodigos[nPos,2] , xQuant,;
							PADR(DescAbono(aJustifica[nX,1],'C'),25),aJustifica[nX,2],aMarcFun,aPrevFun,SPC->PC_TPMARCA,SPC->PC_CC,SPACE(3),'A',;
							SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG })
						Next nX
					Else
						aAdd(aDet,{ SPC->PC_DATA, aCodigos[nPos,1], aCodigos[nPos,2] ,	xQuant,;
						SPACE(25),0,aMarcFun,aPrevFun,SPC->PC_TPMARCA,SPC->PC_CC,SPACE(3),'A',;
						SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG })
					Endif
				Endif
			Endif   
			dbSelectArea("SPC")	
			DbSkip()
		EndDo
		
		If Len(aDet) > 0
			//-- O Sort para Analitico e por Data e ordem
			If nSinAna==2
				aSort(aDet,,,{|x,y| Dtos(x[1])+x[12] < Dtos(y[1])+y[12]}) //Data+ordem de leitura
			Else
				//-- O Sort no Sintetico e por Processo/Periodo/Roteiro/Num pAgto/Evento/Ordem
				aSort(aDet,,,{|x,y|x[13]+x[14]+x[15]+x[16]+x[2]+x[12] < y[13]+y[14]+y[15]+y[16]+y[2]+y[12]}) //Data+ordem de leitura
			Endif
			
			dDtMarc:=CtoD("  /  /  ")
			//-- Corre Cada Apontamento
			For nFor := 1 To Len(aDet)
				cDet :=""
				
				//Verifica a Quebra de Data
				If  dDtMarc<>aDet[nFor,1]
					//-- Monta Inicio das linhas
					//-- se previsoes e/ou marcacoes forem impressas  a Cada Data
					dDtMarc:=aDet[nFor,1]
					nVez:=0    
				    aData  :="!!"
					nData  :=aData
					If lImpMar .OR. lPrevisao
						cDet1:=""	// Impressao da Continuacao das Marcacoes/Previsoes
						cDet2:=""	// Impressao da Continuacao das Marcacoes/Previsoes
						cDet3:=""	// Impressao da Continuacao das Marcacoes/Previsoes
						nVez :=0    // Contador auxiliar para apontar as cDet's
						aMarc  :=aDet[nFor,7]
						aPrev  :=aDet[nFor,8]
						aData  :=SubStr(Dtos(aDet[nFor,1]),7,2)+"/"+SubStr(Dtos(aDet[nFor,1]),5,2)+" "
						nPrev  :=Len(aPrev)
						nMarc  :=Len(aMarc)
					    nLimite:=Max(nPrev,nMarc)
						cCol1  := ''
						cCol2  := ''
                        cCol0  := ''
				        If nLimite == 0  
							cCol0:=aData
					    	cDet+=Padr(cCol0,5)+"| " 
					    	cCol0  := ''
					    EndIf	
						For nX:=1 to nLimite
							//-- Imprime Marcacao, mas nao imprime Previsao//	
							If !lPrevisao .AND. lImpMar             
								cCol0 :=If(nData==aData,,aData)+" " 
								If nX > 8
								    If nX == 0 .Or. nX == 1
										cDet1+=Padr(cCol0,5)+"| "
									Endif
									cDet1+=aMarc[nX]+" "
								Else
									If nX ==1
										cDet+=Padr(cCol0,5)+"| "
									Endif
									cDet+=aMarc[nX]+" "
								Endif
								//-- Imprime Previsao, mas nao imprime Marcacao//
							ElseIf lPrevisao .AND. !lImpMar
								cCol0 :=If(nData==aData,,aData)+" " 
								If nX > 8
									If nX ==1
										cDet+=Padr(cCol0,5)+"| "
									Endif
									cDet1+=aPrev[nX]+" "
								Else
									If nX ==1
										cDet+=Padr(cCol0,5)+"| "
									Endif
									cDet+=aPrev[nX]+" "
								Endif
								//-- Imprime Previsao e Marcacao//
							Else
								//-- Monta Cada Coluna ao Total de 4 marcacoes cada uma//
								cCol0 :=If(nData==aData,,aData)+" " 
								cCol1 +=If(nX<=nPrev,aPrev[nX],SPACE(5)) +" "
								cCol2 +=If(nX<=nMarc,aMarc[nX],SPACE(5)) +" "
								Do Case
									//-- A Cada Multiplo de 4 ou se Ultima Marcacao e Linha
									//-- Vazia Preenche-a
									
									Case nX =4 .OR. (nX == nLimite .AND. Empty(cDet))
										cDet:=Padr(cCol0,5)+"| "+Padr(cCol1,24)+"| "+Padr(cCol2,24)
										cCol1:=cCol2:=''
									Case nX =8 .OR. (nX == nLimite .AND. Empty(cDet1))
										cDet1:=Padr(cCol0,5)+"| "+Padr(cCol1,24)+"| "+Padr(cCol2,24)
										cCol1:=cCol2:=''
									Case nX =12 .OR. (nX == nLimite .AND. Empty(cDet2))
										cDet2:=Padr(cCol0,5)+"| "+Padr(cCol1,24)+"| "+Padr(cCol2,24)
										cCol1:=cCol2:=''
									Case nX =16 .OR. (nX == nLimite .AND. Empty(cDet3))
										cDet3:=Padr(cCol0,5)+"| "+Padr(cCol1,24)+"| "+Padr(cCol2,24)
										cCol1:=cCol2:=''
								EndCase
							Endif
						Next
						cDet :=Padr(cDet,56)
						cDet1:=Padr(cDet1,56)
						cDet2:=Padr(cDet2,56)
						cDet3:=Padr(cDet3,56)
					Else
						//--Reinicializa Variaveis se nao for imprimir previsoes/marcacoes
						cDet1:=""	// Impressao da Continuacao das Marcacoes/Previsoes
						cDet2:=""	// Impressao da Continuacao das Marcacoes/Previsoes
						cDet3:=""	// Impressao da Continuacao das Marcacoes/Previsoes
					Endif
				Endif
				
				//-- Se nao for a 1a. vez, altera o inicio das linhas referentes as marcacoes/previsoes
				//-- Acrescenta as Marcacoes/Previsoes
				If nVez>0
					
					If nVez<4 //- Imprime as Demais cDet
						cItem		:=Alltrim(STR(nVez,0))
						cDet		:=Padr(cDet&cItem,90)
						cDet&cItem	:=''
					Endif
				Else
					nVez++
				Endif
				
				//-- Acrescenta Data/CodEvento/DescEvento/Hora
				If nvez>3 //Apos imprimir Todas as possiveis marcacoes/previsoes
					cDet := If(nSinAna == 1,Space(90),Space(51)+'|'+Space(39))
				Else
					xQuant := StrZero(aDet[nFor,4],6,2)
					xQuant := STRTRAN(xQuant,".",":")
					
					cDet :=Padr(cDet,56)
					//-- Se o Tipo de Apontamento for mesmo que o anterior nao imprime
					//-- Data/CodEvento/DescEvento/Hora
					If nFor > 1 .And.;
						((nSinAna == 2 	.AND. aDet[nFor-1,1] == aDet[nFor,1] ;  	//Data
						.AND. aDet[nFor-1,2] == aDet[nFor,2];  	//Evento
						.AND. aDet[nFor-1,9] == aDet[nFor,9];  	//Tp.Marcacao
						.AND. aDet[nFor-1,10] == aDet[nFor,10]);  //C.C.
						.OR.  ;
						(nSinAna == 1 	.AND. aDet[nFor-1,2] == aDet[nFor,2]))  //Evento
						cDet+=If(nSinAna == 1,'','|')+Space(39)
					Else
						cDet += Space(1) + "  " + aDet[nFor,2] + " " + aDet[nFor,3] + " "+ xquant + " "
					Endif
				Endif
				
				//-- Acrescenta Motivo ou Traco para Justificativa
				If lImpMot
					If !Empty(aDet[nFor,5]) //-- Evento Com Abonos a Imprimir na Data Lida
						//-- Motivo do Abono
						cDet +=aDet[nFor,5] + Space(2)
						If aDet[nFor,6] > 0
							cDet+= " "+ STRTRAN(StrZero(aDet[nFor,6],6,2),".",":")
						Endif
					Else
						cDet+= Repl("_",24) + Space(2) + Repl("_",15)
					Endif
				Else
					cDet+= Repl("_",24) + Space(2) + Repl("_",15)
				Endif
				
				If Li <> 58 .And. nFor > 1
					Impr(" ","C")
				Endif
				
				//--Imprime Nome Somente na 1a. Linha Detalhe
				F110ImprL(cDet,if(nFor > 1 .And. aDet[nFor-1,1] == aDet[nFor,1],.F.,.T.), nFor)
				
				//--Forca a Impressao das Marcacoes/Previsoes se Nao houver abonos e for o ultimo apontamento
				//--ou se o proximo apontamento for de outra Data
				If nFor+1<len(aDet)
					lImpLinhas:=If(Empty(aDet[nFor,5]) .AND. aDet[nFor+1,1]<>dDtMarc,.T.,.F.)
				Else
					lImpLinhas:=If(Empty(aDet[nFor,5]),.T.,.F.)
				Endif
				
				//--Imprime as Marcacoes/Previsoes se Nao Deseja imprimir o motivo do abono
				//-- ou forca a impressao das linhas
				If !lImpMot  .OR. lImpLinhas
					If !Empty(cDet1)
						F110ImprL(cDet1,.F.,nFor)
						cDet1:=''
					Endif
					If !Empty(cDet2)
						F110ImprL(cDet2,.F., nFor)
						cDet2:=''
					Endif
					If !Empty(cDet3)
						F110ImprL(cDet3,.F., nFor)
						cDet3:=''
					Endif
				Endif
				
			Next nFor
			
			If Li <> 58
				Impr(Repl("-",132),"C")
			Endif
			
			If lImpFol
				Impr("","P")
				lCabec:=.T.
			Endif
		Endif
	Endif
	
	cChave := ''
	
	dbSelectArea("SRA")
	dbSkip()
Enddo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Termino do relatorio                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SP8" )
dbSetOrder(1)

dbSelectArea("SRA")
dbSetOrder(1)

Set Device To Screen
If aReturn[5] = 1
	Set Printer To
	Commit
	ourspool(wnrel)
Endif

MS_FLUSH()

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Imp_Cabec ³ Autor ³ J.Ricardo             ³ Data ³ 09/04/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Imprime o cabecalho do Relatorio                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ POR030IMP                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Static Function Imp_Cabec

//====================================================================================================
//Chapa Matr.  Funcionario                    Data   Cod Descricao            Horas Justificativa                 Visto"
//====================================================================================================
//Filial: 01-123456789012345  Turno: 001-12345678901234567890    C.C: 123456789-1234567890123456789012
//====================================================================================================
//12345 123456 123456789012345678901234567890
//99:99 99:99 99:99 99:99 99:99 99:99 99:99   99/99  999 1234567890123456789 999.99 12345678901234567890123456789 12345678901234567890

If  nSinAna == 2 
	wCabec1 := STR0017 + SRA->RA_FILIAL + "-" + Left(SM0->M0_Nome+Space(15),15) //"Filial: "
	//-- Altera Relatorio se Previsao e/ou Marcacao forem ou nao impressas
	
	Li   := 0
	If lImpFol
		wCabec1+= STR0018+SRA->RA_TNOTRAB // " Turno: "
		wCabec1+= STR0019+ SUBSTR(SRA->RA_CC+SPACE(20),1,20) + "-" +; // "    C.C: "
	    Left(DescCc(SRA->RA_CC,SRA->RA_FILIAL,30)+Space(30),30)
	Endif
ElseIf nSinAna == 1 

	wCabec1 := STR0017 + SRA->RA_FILIAL + "-" + Left(SM0->M0_Nome+Space(15),15) //"Filial: "
	wCabec2 := STR0012 + " " +STR0013+ "  " +STR0014+ SPACE(35)+STR0011
	//-- Altera Relatorio se Previsao e/ou Marcacao forem ou nao impressas
	
	Li   := 0
	If lImpFol
		wCabec1+= STR0018+SRA->RA_TNOTRAB // " Turno: "
		wCabec1+= STR0019+ SUBSTR(SRA->RA_CC+SPACE(20),1,20) + "-" +; // "    C.C: "
	    Left(DescCc(SRA->RA_CC,SRA->RA_FILIAL,30)+Space(30),30)
	Endif
Endif

wCabec1+= Space(01)+STR0035+SRA->RA_DEPTO   //"Depto: "

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³f110ImprL ³ Autor ³ Aldo Marini Junior    ³ Data ³ 30/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Imprime detalhe verificando a necessidade de pulo de pagina³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³f110ImprL(cString)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR010                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function f110ImprL(cString,lImpNome, nFor)

Local cNome:=SRA->RA_CHAPA + " " + SRA->RA_MAT + " " + Left(SRA->RA_NOME,30) + " " + STR0035 + SRA->RA_DEPTO
Local lCab:=.F.
Local lNome:=.F.
Local cDet1:=" "
Local cDetProc := ""

//-- Altera o SubCabec se analitico com impressao de previsao ou de marcacoes
If 	  nSinAna == 2  .AND. (lPrevisao .OR. lImpMar)
	  cNome:=STR0021+SRA->RA_CHAPA + " " + STR0022+SRA->RA_MAT + " " + STR0023+Left(SRA->RA_NOME,30) + " " + STR0035 + SRA->RA_DEPTO
Endif
//-- Deve imprimir o nome ?
lImpNome := If(lImpNome == Nil, .T., lImpNome)

// Caso seja primeira linha do Detalhe , imprime o Nome do Func.
If nFor == 1 .Or. Li == 58 .Or. Li == 8
	If Li == 58
		lCabec:=.T.
		
		If !lImpFol
			If nOrdem == 2 .Or. nOrdem == 5
				lCabecCC:=.T.
			Endif
			If nOrdem = 4
				lCabecTT := .T.
			Endif
		Endif
	Endif
	
	If (lImpMar .OR. lPrevisao) .And. nSinAna == 2
		lCab:=.T.
	Else
		cString := SubStr(cString,50,Len(cString)-49)
		lNome:=.T.
		cString := Space(49)+cString
	Endif
Endif

If lCabec
	Imp_Cabec()
	lCabec := .F.
Endif

If lCabecCC
	cDet1 := STR0015 + SUBSTR(SRA->RA_CC+SPACE(20),1,20) + "-" +; // "C.C: "
		Left(DescCc(SRA->RA_CC,SRA->RA_FILIAL,30)+Space(30),30)
	IMPR(cDet1,"C")
	If Li <> 58
		IMPR(REPLICATE("-",132),"C")
	Endif
	lCabecCC := .F.
Endif

If lCabecTT
	cDet1 := STR0018+SRA->RA_TNOTRAB +"-"+ fDescTno(SRA->RA_FILIAL,SRA->RA_TNOTRAB) // " Turno: "
	IMPR(cDet1,"C")
	If Li <> 58
		IMPR(REPLICATE("-",132),"C")
	Endif
	lCabecTT := .F.
Endif

If Li < 58
	If lCab .And. lImpNome
		If Li >= 54
			Imp_Cabec()
		EndIf
		IMPR(cNome,"C")
		lCab:=.F.
		IMPR(Repl("-",132),"")
		//-- Altera Relatorio se Previsao e/ou Marcacao forem ou nao impressas
		cDet :=If(lPrevisao  .AND.  lImpMar ,PADR(STR0026+SPACE(3)+STR0024+SPACE(17)+STR0025,59)+STR0011,;
		       If(lPrevisao  .AND. !lImpMar ,PADR(STR0026+SPACE(3)+STR0024,59)+STR0011,;
		       If(!lPrevisao .AND.  lImpMar ,PADR(STR0026+SPACE(3)+STR0025,59)+STR0011,;
		           Padr(STR0012+SPACE(1)+STR0013+SPACE(2)+STR0014,51)+STR0011)))
		IMPR(cDet,"C")
		IMPR(Repl("-",132),"")
	EndIf
EndIf

If Li == 58
	Imp_Cabec()
	If (nOrdem == 2 .Or. nOrdem == 5).And. !lImpFol
		cDet1 := STR0015 + SUBSTR(SRA->RA_CC+SPACE(20),1,20) + "-" +; // "C.C: "
		Left(DescCc(SRA->RA_CC,SRA->RA_FILIAL,30)+Space(30),30)
		IMPR(cDet1,"C")
		IMPR(REPLICATE("-",132),"C")
	Endif
              	
	If nOrdem == 4 .And. !lImpFol
		cDet1 := STR0018+SRA->RA_TNOTRAB +"-"+ fDescTno(SRA->RA_FILIAL,SRA->RA_TNOTRAB) // " Turno: "
		IMPR(cDet1,"C")
		If Li <> 58
			IMPR(REPLICATE("-",132),"C")
		Endif
	Endif
	
	If (lImpMar .OR. lPrevisao) .And. nSinAna == 2
		IMPR(cNome,"C")
	Else
		cString := SubStr(cString,50,Len(cString)-49)
		lNome:=.T.
		cString := Space(49)+cString		
	Endif
Endif

If lNome
	IMPR(cNome,"C")
	lNome:=.F.
EndIf

If aDet[nFor,13]+aDet[nFor,14]+aDet[nFor,15]+aDet[nFor,16] <> cChave
	cDetProc := STR0030 + aDet[nFor,13] + ' - ' + STR0031 + aDet[nFor,14] + ' - ' + STR0032 + aDet[nFor,15] + ' - ' + STR0033 + aDet[nFor,16]
	IMPR(cDetProc,"C")
	cChave := aDet[nFor,13] + aDet[nFor,14] + aDet[nFor,15] + aDet[nFor,16]
EndIf

IMPR(cString,"C")

Return

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³fImpTOP110	 	³Autor³  Igor Franzoi	  ³ Data ³09/05/2011³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Imprimir R110 em TOP										³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³PO110Imp													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function fImpTOP110( lEnd, WnRel, cString, nOrdem )

Local cCodPD	:= ""
Local cSitFol	:= ""
Local cCatFun	:= ""

Local cQrySRA	:= ""
Local cQryCpos	:= ""
Local cWhereSRA	:= ""
Local cWhereSPC := ""
Local cWhere    := ""
Local cOrdem	:= ""

Local nCont		:= 0
Local nX		:= 0
Local nFor		:= 0

Local aCodigos  	:= {}
Local aJustifica   	:= {}	//-- retorna Justificativa de abono
Local xQuant       	:= 0
Local nPos         	:= 0
Local cPD          	:= Space(03)
Local nTab	     	:=0
Local nPosTab	 	:=0
Local nLenCalend 	:=0
Local aPrevFun   	:={}
Local dDataApo	 	:=CtoD('//') 
Local nLimite    	:= 0
Local cCol1      	:= ''
Local cCol2      	:= ''
Local cFilCompara	:= Space(FwGetTamFilial)

Private cFilSRAAnt	:= ""
Private cMatSRAAnt	:= ""
Private cTnoAnt     := ""
Private cSeqAnt     := ""
Private aTabCalend  := {}
Private cTurnoant   := ""
Private cFilAnterior:= ""

DEFAULT nOrdem := 1

If ( !Empty(cEventos) .and. !Empty(cCont1) .and. !Empty(cCont2) )
	For nCont := 1 To 30 Step 3
		If ( (nCont+3) >= 30 )
			cCodPD	+= "'"+SubStr(cEventos,nCont,3)+"',"
			cCodPD	+= "'"+SubStr(cCont1,nCont,3)+"',"
			cCodPD	+= "'"+SubStr(cCont2,nCont,3)+"'"	
		Else
			cCodPD	+= "'"+SubStr(cEventos,nCont,3)+"',"
			cCodPD	+= "'"+SubStr(cCont1,nCont,3)+"',"
			cCodPD	+= "'"+SubStr(cCont2,nCont,3)+"',"
		EndIf
	Next
EndIf

If !Empty(cSit)
	For nCont := 1 To Len(cSit)
		If ( (nCont) == Len(cSit) )
			cSitFol	+= "'"+SubStr(cSit,nCont,1)+"'"	
		Else
			cSitFol	+= "'"+SubStr(cSit,nCont,1)+"',"
		EndIf
	Next
EndIf

If !Empty(cCat)
	For nCont := 1 To Len(cCat)
		If ( (nCont+1) >= Len(cCat) )
			cCatFun	+= "'"+SubStr(cCat,nCont,1)+"'"	
		Else
			cCatFun	+= "'"+SubStr(cCat,nCont,1)+"',"
		EndIf
	Next
EndIf

If nOrdem == 1
	cOrdem  := "% SRA.RA_FILIAL, SRA.RA_MAT %"
ElseIf nOrdem == 2
	cOrdem  := "% SRA.RA_FILIAL, SRA.RA_CC, SRA.RA_MAT %"
	lCabecCC := IF(!lImpFol,.T.,.F.)
ElseIf nOrdem == 3
	cOrdem  := "% SRA.RA_FILIAL, SRA.RA_NOME, SRA.RA_MAT %"
ElseIf nOrdem == 4
	cOrdem  := "% SRA.RA_FILIAL, SRA.RA_TNOTRAB %"
	lCabecTT := IF(!lImpFol,.T.,.F.)
ElseIf nOrdem == 5
	cOrdem  := "% SRA.RA_FILIAL, SRA.RA_CC, SRA.RA_NOME %"
ElseIf nOrdem == 6
	cOrdem  := "% SRA.RA_FILIAL, SRA.RA_DEPTO, SRA.RA_MAT %"
EndIf

cQryCpos := "% SRA.RA_FILIAL, SRA.RA_PROCES, SRA.RA_MAT, SRA.RA_NOME, SRA.RA_TNOTRAB, SRA.RA_CC, SRA.RA_REGRA, SRA.RA_SEQTURN, "
cQryCpos += " SRA.RA_DEPTO, SRA.RA_DEMISSA, SRA.RA_SITFOLH, SRA.RA_CATFUNC, SRA.RA_CHAPA, SRA.R_E_C_N_O_ SRARECNO, "
cQryCpos += " SPC.PC_FILIAL, SPC.PC_MAT, SPC.PC_DATA, SPC.PC_QTABONO, SPC.PC_PDI, SPC.PC_PD, SPC.PC_QUANTI, SPC.PC_QUANTI, SPC.PC_QUANTC, SPC.PC_TPMARCA, "
cQryCpos += " SPC.PC_CC, SPC.PC_CODFUNC, SPC.PC_DEPTO, SPC.PC_POSTO, SPC.PC_PROCES, SPC.PC_PERIODO, SPC.PC_ROTEIR, SPC.PC_NUMPAG, SPC.R_E_C_N_O_ SPCRECNO %"

cWhereSRA := "	SRA.RA_PROCES = '" 		+cProcesso+		 "' AND "
cWhereSRA += "	SRA.RA_FILIAL	>= '" 	+FilialDe+ 		"' AND SRA.RA_FILIAL 	<= '" +FilialAte+ 	"' AND "
cWhereSRA += "	SRA.RA_MAT		>= '" 	+MatDe+ 		"' AND SRA.RA_MAT		<= '" +MatAte+ 		"' AND "
cWhereSRA += "	SRA.RA_TNOTRAB	>= '" 	+TurDe+ 		"' AND SRA.RA_TNOTRAB	<= '" +TurAte+ 		"' AND "
cWhereSRA += "	SRA.RA_NOME		>= '" 	+NomDe+ 		"' AND SRA.RA_NOME		<= '" +NomAte+ 		"' AND "
cWhereSRA += "	SRA.RA_CC		>= '" 	+CcDe+ 			"' AND SRA.RA_CC		<= '" +CcAte+ 		"' AND "
cWhereSRA += "	SRA.RA_REGRA	>= '" 	+RegDe+ 		"' AND SRA.RA_REGRA		<= '" +RegAte+ 		"' AND "
cWhereSRA += "	SRA.RA_DEPTO	>= '" 	+cDeptoDe+		"' AND SRA.RA_DEPTO		<= '" +cDeptoAte+ 	"' AND "
cWhereSRA += "	SRA.RA_SITFOLH IN ("	+cSitFol+		") AND "
cWhereSRA += "	SRA.RA_CATFUNC IN ("	+cCatFun+		") AND "
cWhereSRA += " ( SRA.RA_DEMISSA >= '"	+Dtos(dPerIni)+	"' OR SRA.RA_DEMISSA = '' )"

If ( nColPro == 1 )
	cWhereSPC := " AND SPC.PC_PERIODO = '" 	+cPeriodo+ 	"' AND "
	cWhereSPC += " SPC.PC_ROTEIR = '" 		+cRoteiro+ 	"' "
	cWhereSPC += " AND SPC.PC_NUMPAG = '" 	+cNumPagto+ "' "
Else
	cWhereSPC := " AND SPC.PC_DATA >= '" 	+Dtos(dPerIni)+ 	"' AND SPC.PC_DATA <= '" +Dtos(dPerFim)+ "' "	
EndIf

If !Empty( cCodPD )
	cWhereSPC += " AND SPC.PC_PD IN ("+cCodPD+") "
EndIf 

cWhere := "% " + cWhereSRA + cWhereSPC + " %"

cQrySRA := GetNextAlias()

BeginSql alias cQrySRA
	SELECT 
		%exp:cQryCpos%
	FROM  %table:SRA% SRA
	INNER JOIN %table:SPC% SPC 
		ON SPC.PC_FILIAL = SRA.RA_FILIAL AND SPC.PC_MAT = SRA.RA_MAT
	WHERE
		%exp:cWhere% AND
		SRA.%NotDel% AND
		SPC.%NotDel%		
	ORDER BY %exp:cOrdem%
EndSql

cTnoAnt      := 'úúú'
cSeqAnt      := 'úú'
aTabCalend   := {}
cTurnoant    := "@@@"
cFilAnterior := "@@"

While (cQrySRA)->(!Eof())

	//--Botao cancela da impressao
	If lEnd
		IMPR(cCancela,"C")
		Exit
	EndIF
	
	//-- Verifica se Deve Imprimir os Abonados
	If !lImpAbon .And. (cQrySRA)->PC_QTABONO > 0
		(cQrySRA)->(dbSkip())
		Loop
	Endif	
		
	If !((cQrySRA)->RA_FILIAL == cFilAnterior) // quebra filial
		lCabec			:= .T.
		cFilAnterior	:= (cQrySRA)->RA_Filial
		cTurnoAnt  		:= "@@@"
		cCcAnt			:= Replicate('@',Len((cQrySRA)->RA_CC))
		fLoadSP9( @aCodigos, cFilAnterior, cFilCompara )
	EndIf

	//--Verifica Quebra de Turno na Impressão Ordem por Turno
	If ( nOrdem == 4 .and. !(cTurnoAnt == (cQrySRA)->RA_TNOTRAB) )
		If !lImpFol
			lCabecTT := .T.
		Endif
		cCcAnt    := Replicate('@',Len((cQrySRA)->RA_CC))
		cTurnoAnt := (cQrySRA)->RA_TNOTRAB
	Endif

	//--Verifica Quebra de C.Custo na Impressão Ordem por C.Custo
	If ( (nOrdem == 2 .Or. nOrdem == 5) .and. !((cQrySRA)->RA_CC == cCcAnt) )
		If lCc
			lCabec := .T.
		Endif
		lCabecCC := .T.
	Endif

	cCcAnt 		:= (cQrySRA)->RA_CC
	cTurnoAnt	:= (cQrySRA)->RA_TNOTRAB
	dDtMarc		:=CtoD("  /  /  ")
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria Calendario de Marca‡oes do Periodo                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !( (cTnoAnt + cSeqAnt) == ((cQrySRA)->RA_TNOTRAB + (cQrySRA)->RA_SEQTURN) )
		cTnoAnt    := (cQrySRA)->RA_TNOTRAB
		cSeqAnt    := (cQrySRA)->RA_SEQTURN
	Endif
	
	If ( !( cFilSRAAnt+cMatSRAAnt == (cQrySRA)->RA_FILIAL+(cQrySRA)->RA_MAT ) )
	
		//-- Cria Calendario com o periodo completo com Trocas de Turno
		aTabCalend := {} ; aTurnos   := {} ; aMarcacoes := {}	; aDet := {}

		If Empty( Alias() )
			dbSelectArea("SRA")
		EndIf
		SRA->(dbGoTo((cQrySRA)->SRARECNO))
	
		//-- Carrega as Marcacoes do Periodo
		If !GetMarcacoes( 	@aMarcacoes 	,;	//Marcacoes dos Funcionarios
						  	@aTabCalend		,;	//Calendario de Marcacoes
						  	@aTabPadrao		,;	//Tabela Padrao
						  	@aTurnos		,; 	//Turnos de Trabalho
							dPerIni 		,; 	//Periodo Inicial
							dPerFim			,;	//Periodo Final
							SRA->RA_FILIAL	,;	//Filial
							SRA->RA_MAT		,; 	//Matricula
							SRA->RA_TNOTRAB	,; 	//Turno
							SRA->RA_SEQTURN	,; 	//Sequencia de Turno
							SRA->RA_CC		,;	//Centro de Custo
							"SP8"			,; 	//Alias para Carga das Marcacoes
							.F.    			,;	//13 -> Se carrega Recno em aMarcacoes
							.T.    			,;	//14 -> Se considera Apenas Ordenadas
							.T.    			,;	//15 -> Se Verifica as Folgas Automaticas
							.F.    			,;	//16 -> Se Grava Evento de Folga Automatica Periodo Anterior
							NIL				,;	//17 -> Se Carrega as Marcacoes Automaticas
							NIL				,;	//18 -> Registros de Marcacoes Automaticas que deverao ser Desprezadas
							NIL				,;	//19 -> Bloco para avaliar as Marcacoes Automaticas que deverao ser Desprezadas
							.F.				,;	//20 -> Se Considera o Periodo de Apontamento das Marcacoes
							.F.				,;	//21 -> Se Efetua o Sincronismo dos Horarios na Criacao do Calendario
							.T.				,;  //22 -> Se considera data de apontamento
							.T.				;	//23 -> Se considera data inicial	
			)
			Set Device to Screen
			Help(' ',1,'PONSCALEND')
			Set Device to Printer
			cFilSRAAnt := (cQrySRA)->RA_FILIAL
			cMatSRAAnt := (cQrySRA)->RA_MAT			
			cTnoAnt := 'úúú'
			cSeqAnt := 'úú'
			(cQrySRA)->(dbSkip())
			Loop
		EndIf
		
	EndIf
		
	//-- Obtem Qtde de Marcacoes
	nLenMarc:=Len(aMarcacoes)
	
	// 1 - Data
	// 2 - Codigo do Evento
	// 3 - Descricao do Evento
	// 4 - Numero de Horas
	// 5 - Descricao do Abono
	// 6 - Quantidade de horas Abonadas
	// 7 - Marcacoes
	
	//-- Utiliza o codigo informado qdo houver
	If Empty((cQrySRA)->PC_PDI)
		cPD := (cQrySRA)->PC_PD			
	Else
		cPD := (cQrySRA)->PC_PDI
	EndIf

	cCodTot:=cPD
	
	//-- Verifica se e um codigo contido na relacao de codigos
	//-- definidas segundo avariavel cCodigos
	nPos := Ascan(aCodigos,{ |x| x[1] = cPD })
	//-- Se o Codigo do Evento apontado  eh Valido
	If nPos > 0
		//-- Obtem a quantidade do evento apontando
		xQuant := If((cQrySRA)->PC_QUANTI>0,(cQrySRA)->PC_QUANTI,(cQrySRA)->PC_QUANTC)
		//-- Posiciona na TabCalend para a Data Lida
		nTab := Ascan(aTabCalend, {|x| x[CALEND_POS_DATA] == STOD((cQrySRA)->PC_DATA) .And. x[CALEND_POS_TIPO_MARC] == '1E' })
		//-- Se existir calendario para o apontamento
		//-- Obs.: Se um apontamento for digitado pode ocorrer de nao ter
		//--       uma data correspondente na TabCalend ???
		If nTab>0
			//-- Obtem a Data de Apontamento para a Data Lida
			dDataApo  := aTabCalend[nTab,CALEND_POS_DATA_APO] //--Data de apontamento
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Obtem as Previsoes Cadastradas p/a Ordem Lida  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aPrevFun:={}
			If lPrevisao
				nLenCalend:=Len(aTabCalend)
				nPosTab:=nTab
				//-- Corre as Previsoes de mesma Data de Apontamento
				While dDataApo == aTabCalend[nPosTab,CALEND_POS_DATA_APO]
					Aadd(aPrevFun,StrTran(StrZero(aTabCalend[nPosTab,CALEND_POS_HORA],5,2),'.',':'))
					//-- Obtem novo Horario
					nPosTab ++
					If	nPosTab > nLenCalend
						Exit
					Endif
				EndDo
			Endif
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Obtem as Marcacoes Realizadas para a Ordem Lida³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aMarcFun:={}
			If lImpMar
				//-- A aMarcacoes ‚ setado para a 1a Marca‡„o do dia em quest„o.
				//-- de acordo com a data de apontamento da tabela
				nPosMarc:=Ascan(aMarcacoes,{|x| x[AMARC_DATAAPO]==dDataApo})
				//-- Se Existir Marcacao para o Dia
				If !Empty(nPosMarc)
					//--  Corre Todas as marcacoes enquanto a mesma data de apontamento
					While dDataApo == aMarcacoes[nPosMarc,AMARC_DATAAPO]
						//-- Monta o array com as Marcacoes do funcionario para a data de apontamento.
						Aadd(aMarcFun,StrTran(StrZero(aMarcacoes[nPosMarc,2],5,2),'.',':'))
						nPosMarc++
						//-- Se o contador ultrapassar o total de Marcacoes abandona loop
						If nPosMarc>nLenMarc
							Exit
						EndIf
					EndDo
				Endif
			EndIf
		EndIf
		
		aJustifica := {}
		
		If lImpMot
			//-- Verifica se existe abonos e posiciona registro de abono
			fAbonos( STOD((cQrySRA)->PC_DATA)	,;
					  aCodigos[nPos,1]		,;
					  NIL					,;
					  @aJustifica			,;
					  (cQrySRA)->PC_TPMARCA	,;
					  (cQrySRA)->PC_CC		,;
					  NIL					,;
					  (cQrySRA)->PC_CODFUNC	,;
					  (cQrySRA)->PC_DEPTO	,;
					  (cQrySRA)->PC_POSTO	,;
					  (cQrySRA)->PC_PROCES	,;
					  (cQrySRA)->PC_PERIODO	,;
					  (cQrySRA)->PC_ROTEIR	,;
					  (cQrySRA)->PC_NUMPAG )
		Endif
		
		If (nSinAna == 1)	// Sintetica
			//-- Sintetiza por Evento
			If (nPosDet:=Ascan(aDet,{ |x| x[2] = cPD })) > 0
				aDet[nPosDet,4]:=SomaHoras(aDet[nPosDet,4],xQuant)
                    //-- Acumula Abonado somente se Nao for imprimir os motivos do mesmo
				aDet[nPosDet,6]		:=If(Empty(aDet[nPosDet,6]),SomaHoras(aDet[nPosDet,6],(cQrySRA)->PC_QTABONO),aDet[nPosDet,6])
				aDet[nPosDet,12]	:='A' //Ordem para Obrigar que esse seja o primeiro elemento
				//apos o Sort do aDet
			Endif

			//-- Acrescenta os motivos de abono para o evento
			If Len(aJustifica) > 0 .And. lImpMot
				For nX := 1 To Len(aJustifica)
					//-- Totaliza cada motivo para o mesmo evento
					If (nPosDet:=Ascan(aDet,{ |x| x[2] = cPD .AND. x[11]==aJustifica[nX,1]})) > 0
						//-- Totaliza Abonos para mesmo motivo
						aDet[nPosDet,6]:=SomaHoras(aDet[nPosDet,6],aJustifica[nX,2])
					Else
						aAdd( aDet,{ STOD((cQrySRA)->PC_DATA), aCodigos[nPos,1], aCodigos[nPos,2] ,xQuant,;
						PADR(DescAbono(aJustifica[nX,1],'C'),25),;
						aJustifica[nX,2],aMarcFun,aPrevFun,(cQrySRA)->PC_TPMARCA,(cQrySRA)->PC_CC,	aJustifica[nX,1],'Z',;
						(cQrySRA)->PC_PROCES,(cQrySRA)->PC_PERIODO,(cQrySRA)->PC_ROTEIR,(cQrySRA)->PC_NUMPAG})
					EndIf
				Next nX
			Else
				If nPosDet==0
					aAdd(aDet,{ STOD((cQrySRA)->PC_DATA), aCodigos[nPos,1], aCodigos[nPos,2] ,	xQuant,;
					SPACE(25),0,aMarcFun,aPrevFun,(cQrySRA)->PC_TPMARCA,(cQrySRA)->PC_CC,SPACE(3),'Z',;
					(cQrySRA)->PC_PROCES,(cQrySRA)->PC_PERIODO,(cQrySRA)->PC_ROTEIR,(cQrySRA)->PC_NUMPAG})
				EndIf
			EndIf
		Else
			If Len(aJustifica) > 0 .And. lImpMot
				For nX := 1 To Len(aJustifica)
					aAdd(aDet,{ STOD((cQrySRA)->PC_DATA), aCodigos[nPos,1], aCodigos[nPos,2] , xQuant,;
					PADR(DescAbono(aJustifica[nX,1],'C'),25),aJustifica[nX,2],aMarcFun,aPrevFun,(cQrySRA)->PC_TPMARCA,(cQrySRA)->PC_CC,SPACE(3),'A',;
					(cQrySRA)->PC_PROCES,(cQrySRA)->PC_PERIODO,(cQrySRA)->PC_ROTEIR,(cQrySRA)->PC_NUMPAG })
				Next nX
			Else
				aAdd(aDet,{ STOD((cQrySRA)->PC_DATA), aCodigos[nPos,1], aCodigos[nPos,2] ,	xQuant,;
				SPACE(25),0,aMarcFun,aPrevFun,(cQrySRA)->PC_TPMARCA,(cQrySRA)->PC_CC,SPACE(3),'A',;
				(cQrySRA)->PC_PROCES,(cQrySRA)->PC_PERIODO,(cQrySRA)->PC_ROTEIR,(cQrySRA)->PC_NUMPAG })
			EndIf
		Endif
	EndIf   
	
	cFilSRAAnt := (cQrySRA)->RA_FILIAL
	cMatSRAAnt := (cQrySRA)->RA_MAT
	
	(cQrySRA)->(dbSkip())
	
	If ( (cQrySRA)->(Eof()) .or. !( cFilSRAAnt+cMatSRAAnt == (cQrySRA)->RA_FILIAL+(cQrySRA)->RA_MAT ) )
		fListVideo( aDet, aCodigos, aJustifica )
	EndIf
	
Enddo

(cQrySRA)->(dbCloseArea())	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Termino do relatorio                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SP8" )
dbSetOrder(1)

dbSelectArea("SRA")
dbSetOrder(1)

Set Device To Screen
If aReturn[5] = 1
	Set Printer To
	Commit
	ourspool(wnrel)
Endif

MS_FLUSH()

Return (NIL)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³fLoadSP9	 	³Autor³  Igor Franzoi	  ³ Data ³09/05/2011³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Carrega o SP9												³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³fImpTOP110													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function fLoadSP9( aCod, cFilAnt, cFilComp )

Local cOrdem	:= ""

Local cQrySP9 := ""
Local cQryCpos:= ""

Local cWhereSP9 := ""

If (xFilial("SP9") == Space(FwGetTamFilial) .And. Empty(aCod)) .Or. ;
   (xFilial("SP9") # Space(FwGetTamFilial) .And. cFilAnt # cFilComp )
   
	cQryCpos	:= "% SP9.P9_FILIAL, SP9.P9_CODIGO, SP9.P9_DESC %"	
	If FWModeAccess("SP9") == "E"
		cWhereSP9	:= "% SP9.P9_FILIAL = '"+cFilAnt+"'  %"	
	Else
		cWhereSP9	:= "% SP9.P9_FILIAL = '"+xFilial("SP9")+"'  %"	
	EndIf
	cOrdem		:= "% P9_FILIAL, P9_CODIGO %"
   
	cQrySP9		:= GetNextAlias()
	
	BeginSql alias cQrySP9
		SELECT 
			%exp:cQryCpos%
		FROM  %table:SP9% SP9
		WHERE
			%exp:cWhereSP9%
		ORDER BY %exp:cOrdem%
	EndSql   

	aCod := {}
	
	While (cQrySP9)->(!Eof())

		If lTodEvent .Or. ((cQrySP9)->P9_CODIGO $ cCodigos)
			Aadd( aCod, { Left((cQrySP9)->P9_CODIGO,3), (cQrySP9)->P9_DESC } )
		EndIf
		
		(cQrySP9)->(dbSkip())
		
	EndDo
	
	(cQrySP9)->(dbCloseArea())
	
EndIf

Return (NIL)


/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³fListVideo	 	³Autor³  Igor Franzoi	  ³ Data ³09/05/2011³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Imprime o aDet - fListVideo									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³fImpTOP110													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function fListVideo( aDet, aCodigos, aJustifica )

Local nX			:= 0
Local nFor			:= 0
Local cPD          	:= Space(03)
Local nTab	     	:=0
Local dDataApo	 	:=CtoD('//') 
Local nLimite    	:= 0
Local cCol1      	:= ''
Local cCol2      	:= ''

If Len(aDet) > 0
	//-- O Sort para Analitico e por Data e ordem
	If nSinAna==2
		aSort(aDet,,,{|x,y| Dtos(x[1])+x[12] < Dtos(y[1])+y[12]}) //Data+ordem de leitura
	Else
		//-- O Sort no Sintetico e por Processo/Periodo/Roteiro/Num pAgto/Evento/Ordem
		aSort(aDet,,,{|x,y|x[13]+x[14]+x[15]+x[16]+x[2]+x[12] < y[13]+y[14]+y[15]+y[16]+y[2]+y[12]}) //Data+ordem de leitura
	Endif
	
	dDtMarc:=CtoD("  /  /  ")
	//-- Corre Cada Apontamento
	For nFor := 1 To Len(aDet)
		cDet :=""
		
		//Verifica a Quebra de Data
		If  dDtMarc<>aDet[nFor,1]
			//-- Monta Inicio das linhas
			//-- se previsoes e/ou marcacoes forem impressas  a Cada Data
			dDtMarc:=aDet[nFor,1]
			nVez:=0    
		    aData  :="!!"
			nData  :=aData
			If lImpMar .OR. lPrevisao
				cDet1:=""	// Impressao da Continuacao das Marcacoes/Previsoes
				cDet2:=""	// Impressao da Continuacao das Marcacoes/Previsoes
				cDet3:=""	// Impressao da Continuacao das Marcacoes/Previsoes
				nVez :=0    // Contador auxiliar para apontar as cDet's
				aMarc  :=aDet[nFor,7]
				aPrev  :=aDet[nFor,8]
				aData  :=SubStr(Dtos(aDet[nFor,1]),7,2)+"/"+SubStr(Dtos(aDet[nFor,1]),5,2)+" "
				nPrev  :=Len(aPrev)
				nMarc  :=Len(aMarc)
			    nLimite:=Max(nPrev,nMarc)
				cCol1  := ''
				cCol2  := ''
                    cCol0  := ''
		        If nLimite == 0  
					cCol0:=aData
			    	cDet+=Padr(cCol0,5)+"| " 
			    	cCol0  := ''
			    EndIf	
				For nX:=1 to nLimite
					//-- Imprime Marcacao, mas nao imprime Previsao//	
					If !lPrevisao .AND. lImpMar             
						cCol0 :=If(nData==aData,,aData)+" " 
						If nX > 8
						    If nX == 0 .Or. nX == 1
								cDet1+=Padr(cCol0,5)+"| "
							Endif
							cDet1+=aMarc[nX]+" "
						Else
							If nX ==1
								cDet+=Padr(cCol0,5)+"| "
							Endif
							cDet+=aMarc[nX]+" "
						Endif
						//-- Imprime Previsao, mas nao imprime Marcacao//
					ElseIf lPrevisao .AND. !lImpMar
						cCol0 :=If(nData==aData,,aData)+" " 
						If nX > 8
							If nX ==1
								cDet+=Padr(cCol0,5)+"| "
							Endif
							cDet1+=aPrev[nX]+" "
						Else
							If nX ==1
								cDet+=Padr(cCol0,5)+"| "
							Endif
							cDet+=aPrev[nX]+" "
						Endif
						//-- Imprime Previsao e Marcacao//
					Else
						//-- Monta Cada Coluna ao Total de 4 marcacoes cada uma//
						cCol0 :=If(nData==aData,,aData)+" " 
						cCol1 +=If(nX<=nPrev,aPrev[nX],SPACE(5)) +" "
						cCol2 +=If(nX<=nMarc,aMarc[nX],SPACE(5)) +" "
						Do Case
							//-- A Cada Multiplo de 4 ou se Ultima Marcacao e Linha
							//-- Vazia Preenche-a
							
							Case nX =4 .OR. (nX == nLimite .AND. Empty(cDet))
								cDet:=Padr(cCol0,5)+"| "+Padr(cCol1,24)+"| "+Padr(cCol2,24)
								cCol1:=cCol2:=''
							Case nX =8 .OR. (nX == nLimite .AND. Empty(cDet1))
								cDet1:=Padr(cCol0,5)+"| "+Padr(cCol1,24)+"| "+Padr(cCol2,24)
								cCol1:=cCol2:=''
							Case nX =12 .OR. (nX == nLimite .AND. Empty(cDet2))
								cDet2:=Padr(cCol0,5)+"| "+Padr(cCol1,24)+"| "+Padr(cCol2,24)
								cCol1:=cCol2:=''
							Case nX =16 .OR. (nX == nLimite .AND. Empty(cDet3))
								cDet3:=Padr(cCol0,5)+"| "+Padr(cCol1,24)+"| "+Padr(cCol2,24)
								cCol1:=cCol2:=''
						EndCase
					Endif
				Next
				cDet :=Padr(cDet,56)
				cDet1:=Padr(cDet1,56)
				cDet2:=Padr(cDet2,56)
				cDet3:=Padr(cDet3,56)
			Else
				//--Reinicializa Variaveis se nao for imprimir previsoes/marcacoes
				cDet1:=""	// Impressao da Continuacao das Marcacoes/Previsoes
				cDet2:=""	// Impressao da Continuacao das Marcacoes/Previsoes
				cDet3:=""	// Impressao da Continuacao das Marcacoes/Previsoes
			Endif
		Endif
		
		//-- Se nao for a 1a. vez, altera o inicio das linhas referentes as marcacoes/previsoes
		//-- Acrescenta as Marcacoes/Previsoes
		If nVez>0
			
			If nVez<4 //- Imprime as Demais cDet
				cItem		:=Alltrim(STR(nVez,0))
				cDet		:=Padr(cDet&cItem,90)
				cDet&cItem	:=''
			Endif
		Else
			nVez++
		Endif
		
		//-- Acrescenta Data/CodEvento/DescEvento/Hora
		If nvez>3 //Apos imprimir Todas as possiveis marcacoes/previsoes
			cDet := If(nSinAna == 1,Space(90),Space(51)+'|'+Space(39))
		Else
			xQuant := StrZero(aDet[nFor,4],6,2)
			xQuant := STRTRAN(xQuant,".",":")
			
			cDet :=Padr(cDet,56)
			//-- Se o Tipo de Apontamento for mesmo que o anterior nao imprime
			//-- Data/CodEvento/DescEvento/Hora
			If nFor > 1 .And.;
				((nSinAna == 2 	.AND. aDet[nFor-1,1] == aDet[nFor,1] ;  	//Data
				.AND. aDet[nFor-1,2] == aDet[nFor,2];  	//Evento
				.AND. aDet[nFor-1,9] == aDet[nFor,9];  	//Tp.Marcacao
				.AND. aDet[nFor-1,10] == aDet[nFor,10]);  //C.C.
				.OR.  ;
				(nSinAna == 1 	.AND. aDet[nFor-1,2] == aDet[nFor,2]))  //Evento
				cDet+=If(nSinAna == 1,'','|')+Space(39)
			Else
				cDet += Space(1) + "  " + aDet[nFor,2] + " " + aDet[nFor,3] + " "+ xquant + " "
			Endif
		Endif
		
		//-- Acrescenta Motivo ou Traco para Justificativa
		If lImpMot
			If !Empty(aDet[nFor,5]) //-- Evento Com Abonos a Imprimir na Data Lida
				//-- Motivo do Abono
				cDet +=aDet[nFor,5] + Space(2)
				If aDet[nFor,6] > 0
					cDet+= " "+ STRTRAN(StrZero(aDet[nFor,6],6,2),".",":")
				Endif
			Else
				cDet+= Repl("_",24) + Space(2) + Repl("_",15)
			Endif
		Else
			cDet+= Repl("_",24) + Space(2) + Repl("_",15)
		Endif
		
		If Li <> 58 .And. nFor > 1
			Impr(" ","C")
		Endif
		
		//--Imprime Nome Somente na 1a. Linha Detalhe
		F110ImprL(cDet,if(nFor > 1 .And. aDet[nFor-1,1] == aDet[nFor,1],.F.,.T.), nFor)
		
		//--Forca a Impressao das Marcacoes/Previsoes se Nao houver abonos e for o ultimo apontamento
		//--ou se o proximo apontamento for de outra Data
		If nFor+1<len(aDet)
			lImpLinhas:=If(Empty(aDet[nFor,5]) .AND. aDet[nFor+1,1]<>dDtMarc,.T.,.F.)
		Else
			lImpLinhas:=If(Empty(aDet[nFor,5]),.T.,.F.)
		Endif
		
		//--Imprime as Marcacoes/Previsoes se Nao Deseja imprimir o motivo do abono
		//-- ou forca a impressao das linhas
		If !lImpMot  .OR. lImpLinhas
			If !Empty(cDet1)
				F110ImprL(cDet1,.F.,nFor)
				cDet1:=''
			Endif
			If !Empty(cDet2)
				F110ImprL(cDet2,.F., nFor)
				cDet2:=''
			Endif
			If !Empty(cDet3)
				F110ImprL(cDet3,.F., nFor)
				cDet3:=''
			Endif
		Endif
		
	Next nFor
	
	If Li <> 58
		Impr(Repl("-",132),"C")
	Endif
	
	If lImpFol
		Impr("","P")
		lCabec:=.T.
	Endif
Endif

cChave := ''
lCabec := .F.

Return (Nil)

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr110Proc	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR01 para variavel private		³
|		   |cProcesso    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr110Proc(cTip)

Local lRet := .T.

cProcesso := &( ReadVar() )

If ( cTip == 'A' )
	lRet := PonX1Valid(cProcesso)
Else
	If !Empty(cProcesso)
		lRet := PonX1Valid(cProcesso)
	EndIf
EndIf

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr110Proc	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR02 para variavel private		³
|		   |cPeriodo    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr110Per()

Local cChave := cProcesso
Local lRet := .T.

If !Empty(cRoteiro)
	cChave += cRoteiro
Else
	cChave += "PON"
EndIf

cPeriodo := &( ReadVar() )

cChave += cPeriodo

lRet := PonX1Valid(cChave)

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr110Rot	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR03 para variavel private		³
|		   |cRoteiro    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr110Rot()

Local lRet := .T.

cRoteiro := &( ReadVar() )

lRet := PonX1Valid(cProcesso+cRoteiro)

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr110NPag	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR04 para variavel private		³
|		   |cNumPag	    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr110NPag()

Local lRet := .T.

cNumPagto := &( ReadVar() )

lRet := PonX1Valid(cProcesso+cRoteiro+cPeriodo+cNumPagto)

Return( lRet )