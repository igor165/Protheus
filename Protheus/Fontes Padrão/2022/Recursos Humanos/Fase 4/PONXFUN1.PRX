#INCLUDE "PONXFUN1.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "PONCALEN.CH"
    
/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁPonxFun   Ё Autor Ё *EQUIPE RH ADVANCED*  Ё Data Ё02/02/1996Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Biblioteca de Fun┤■es Utilizadas no M╒dulo SigaPon         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void                                                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё Gen┌rico                                                   Ё╠╠
╠╠цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё                     ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL. Ё╠╠
╠╠цддддддддддддбддддддддбддддддбдддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁProgramador Ё Data   Ё BOPS Ё  Motivo da Alteracao                     Ё╠╠
╠╠цддддддддддддеддддддддеддддддедддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠юддддддддддддаддддддддаддддддадддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
/*
зддддддддддбддддддддддддбддддддбддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁGetAcessos  ЁAutor Ё Mauricio MR          Ё Data Ё18/12/2003Ё
цддддддддддеддддддддддддаддддддаддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁRetornar Array aAcessos com os Acessos do Periodo           Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё< Ver Parametros > 											Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁPonto Eletronico                                            Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNil		                        							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ < Vide Parametros Formais >								Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Function GetAcessos(	aAcessos			,;	//01 -> Acessos
						dPerIni 			,;	//02 -> Periodo Inicial
						nHorIni				,;  //03 -> Hora Inicial
						dPerFim				,;	//04 -> Periodo Final
						nHorFim				,;  //05 -> Hora Final
						cFil				,;	//06 -> Filial
						cCracha				,;  //07 -> Cracha
						cAlias				;	//08 -> Alias para Carga das Marcacoes
					  )

/*
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis de Inicializacao Obrigatoria					  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Local cSvAlias			:= Alias()

/*
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
Local cSetOrdem
Local cFilCracha
Local cAliasQuery
Local cPrefixo   
Local nLenAcess
Local nSerIni
Local nSerFim 
Local nSerAcess  
Local nSetOrder
Local nSvIndexOrd

#IFDEF TOP

	/*
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Variaveis de Inicializacao Obrigatoria					  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	Local aGetAcessFields	:= {}

	/*
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Variaveis que serao inicializadas no Corpo da Funcao		  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	Local cQryAcessFields
	Local cIniData
	Local cFimData
	Local cQuery
	Local lQueryOpened
	Local nGetAcessFields
	Local nX

	Static aGetSPZFields
	Static cQrySPZFields
	Static nGetSPZFields


#ENDIF

DEFAULT cFil				:= SPY->PY_FILIAL 
DEFAULT cCracha				:= SPY->PY_CRACHA
DEFAULT dPerIni				:= Ctod("//")
DEFAULT dPerFim				:= Ctod("//")
DEFAULT cAlias				:= "SPZ"

If !Empty(dPerIni)
   nHorFim:=If(Empty(dPerFim),VAL(StrTran(Substr(time(),1,5),":",".")), nHorFim)
   dPerFim:=If(Empty(dPerFim), dDataBase, dPerFim) 
Endif
					
Begin Sequence


	cAlias			:= Upper( AllTrim( cAlias ) )
	cAliasQuery 	:= cAlias
	cPrefixo		:= ( PrefixoCpo( cAliasQuery ) + "_" )
	aAcessos	  	:= {}
	
	/*
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Seleciona o Arquivo de Marca┤■es e Seta a Ordem correspondenЁ
	Ё te:														  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	nSvIndexOrd := ( cAlias )->( IndexOrd() )
	cSetOrdem	:= ""
	
	/*
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁData  <=> _FILIAL+_MAT+_DTOS(_DATA)+STR(_HORA,5,2)    	  	  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	cSetOrdem += cPrefixo+"FILIAL+"
	cSetOrdem += cPrefixo+"VISITA+"
	cSetOrdem += cPrefixo+"CRACHA+"
	cSetOrdem += cPrefixo+"NUMERO+"
	cSetOrdem += "DTOS("+cPrefixo+"DATA)+"
	cSetOrdem += "STR("+cPrefixo+"HORA,5,2)" 

	nSetOrder	:= RetOrdem( cAlias , cSetOrdem )
	IF !( nSvIndexOrd == nSetOrder )
		( cAlias )->( dbSetOrder( nSetOrder ) )
	EndIF

	/*
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Cria array com os Acessos  do Periodo.					  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	#IFDEF TOP

		/*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Monta Query para Carga das Marcacoes                         Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
		IF ( aGetSPZFields == NIL )
			aGetSPZFields	:= (cAlias)->( dbStruct() )
			nGetSPZFields	:= Len( aGetSPZFields )
			cQrySPZFields	:= ""
			For nX := 1 To nGetSPZFields
        		cQrySPZFields += aGetSPZFields[ nX , 01 ] + ", "
			Next nX
		EndIF
		aGetAcessFields	:= aClone( aGetSPZFields )
		cQryAcessFields	:= cQrySPZFields
		nGetAcessFields	:= nGetSPZFields

		cIniData	:= Dtos( dPerIni )
		cFimData	:= Dtos( dPerFim )
		cAliasQuery := ( "__Q" + cAliasQuery + "QRY" )
		cQuery := "SELECT "
		cQuery += cQryAcessFields
		cQuery += "R_E_C_N_O_ RECNO "
		cQuery += " FROM "
		cQuery += InitSqlName(cAlias)
		cQuery += " WHERE "
		cQuery += cPrefixo + "FILIAL='"+cFil+"'"
		cQuery += " AND "
		cQuery += cPrefixo + "CRACHA='"+cCracha+"'"
		cQuery += " AND "        
		cQuery += cPrefixo + "DATA>='"+cIniData+"'"
		cQuery += " AND "
		cQuery += cPrefixo + "DATA<='"+cFimData+"'"
		cQuery += " AND "
		cQuery += "D_E_L_E_T_=' ' "
		cQuery += "ORDER BY " + SqlOrder( (cAlias)->( IndexKey() ) )
		cQuery := ChangeQuery(cQuery)
		IF ( lQueryOpened := MsOpenDbf(.T.,"TOPCONN",TcGenQry(NIL,NIL,cQuery),cAliasQuery,.F.,.T.) )
			For nX := 1 To nGetAcessFields
				IF ( aGetAcessFields[ nX , 02 ] <> "C" )
					TcSetField(cAliasQuery,aGetAcessFields[nX,01],aGetAcessFields[nX,02],aGetAcessFields[nX,03],aGetAcessFields[nX,04])
				EndIF
			Next nX
		Else
			cAliasQuery := cAlias
		EndIF	
		
	#ENDIF

	cFilCracha := ( cFil + SPACE( LEN( (cAliasQuery)->&( cPrefixo+"VISITA" ) ) ) + cCracha )
	
	#IFNDEF TOP
		IF ( cAliasQuery )->( dbSeek( cFilCracha , .F. ) )
	#ELSE
		IF !( lQueryOpened )
			( cAliasQuery )->( dbseek( cFilCracha ) )
		EndIF
	#ENDIF   
	        nSerIni:= __fDHtoNS(dPerIni, nHorIni)
	        nSerFim:= __fDHtoNS(dPerFim, nHorFim)
	        
			While ( cAliasQuery )->( !Eof() .and. &( cPrefixo+"FILIAL" ) + &( cPrefixo+"VISITA" ) + &( cPrefixo+"CRACHA" ) == cFilCracha )
				
					
				( cAliasQuery )->(	nSerAcess := __fDHtoNS( &( cPrefixo+"DATA" ),&( cPrefixo+"HORA" ) ))
								
				/*
				здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				Ё Obtem todas as Marcacoes Posteriores a Data de Entrada para oЁ
				Ё Cracha corrente se Nao foi dada a Baixa da Visita			   Ё
				юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
				If Empty(nSerFim) 
					If !(nSerAcess >=nSerIni)		
						( cAliasQuery )->( dbSkip() )
						Loop
					Endif	
				Else                                                              
					/*
					здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					Ё Obtem todas as Marcacoes do Cracha Para o Periodo de Duracao Ё
					Ё da Visita													   Ё
					юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
					If (nSerAcess < nSerIni .OR. nSerAcess > nSerfim)		
						( cAliasQuery )->( dbSkip() )
						Loop
					EndIF
				EndIF
			
				/*
				здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				Ё Carrega as Marcacoes 					                       Ё
				юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
				aAdd( aAcessos , Array( 8)  )
				nLenAcess := Len( aAcessos )
				( cAliasQuery )->( aAcessos[ nLenAcess , 1   ] := &(cPrefixo+"DATA"	)	)			//01 - Data
				( cAliasQuery )->( aAcessos[ nLenAcess , 2   ] := &(cPrefixo+"HORA"	)	)			//02 - Hora
				( cAliasQuery )->( aAcessos[ nLenAcess , 3	  ] := &(cPrefixo+"RELOGIO")	)			//03 - Relogio 
				( cAliasQuery )->( aAcessos[ nLenAcess , 4	  ] := &(cPrefixo+"TPMARCA")	)			//04 - Tipo da Marcacao
				( cAliasQuery )->( aAcessos[ nLenAcess , 5   ] := &(cPrefixo+"FLAG"	)	)			//05 - Flag
				( cAliasQuery )->( aAcessos[ nLenAcess , 6	  ] := &(cPrefixo+"FUNCAO"	)	)			//06 - Funcao 
				( cAliasQuery )->( aAcessos[ nLenAcess , 7	  ] := &(cPrefixo+"GIRO"	) 	)			//07 - Giro
				#IFNDEF TOP
					( cAliasQuery )->(aAcessos[ nLenAcess , 8 ] := Recno()  		)					//08 - Recno 
				#ELSE
					IF !( lQueryOpened )
						( cAliasQuery )->(aAcessos[ nLenAcess , 8 ] := Recno() 	)					//08 - Recno 
					Else                                                                                	
						( cAliasQuery )->(aAcessos[ nLenAcess , 8] := RECNO		)					//08 - Recno 
					EndIF
				#ENDIF
			

				( cAliasQuery )->( dbSkip() )
			End While
	#IFNDEF TOP
		EndIF
    #ELSE

		/*
		здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		Ё Fecha a Query e Seta a Area do Arquivo Original              Ё
		юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
    	IF ( ( lQueryOpened ) .and. ( Select( cAliasQuery ) > 0.00 ) )
    		( cAliasQuery )->( dbCloseArea() )
    		dbSelectArea( cAlias )
    	EndIF	

    #ENDIF

	/*
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Restaura a Ordem de Entrada                                  Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	( cAlias )->( dbSetOrder( nSvIndexOrd ) )
	
End Sequence

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura a Area de Entrada                                   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
IF !Empty( cSvAlias ) 
	dbSelectArea( cSvAlias )
EndIF
	
Return (Nil)


/*
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o    ЁfSitVisitaЁ Autor ЁMauricio MR		      Ё Data Ё 22/12/03 Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁSelecionar a Situacao do Visitante	    				    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё fSitVisita() 											    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso	   Ё Generico 												    Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
*/
Function fSitVisita(l1Elem,lTipoRet)

Local cTitulo:=""
Local MvPar
Local MvParDef:=""

Private aSit:={}
l1Elem := If (l1Elem = Nil , .F. , .T.)

DEFAULT lTipoRet := .T.

cAlias := Alias() 					 	  // Salva Alias Anterior

IF lTipoRet
	MvPar:=&(Alltrim(ReadVar()))		 // Carrega Nome da Variavel do Get em Questao
	mvRet:=Alltrim(ReadVar())			 // Iguala Nome da Variavel ao Nome variavel de Retorno
EndIF

dbSelectArea("SX5")
If dbSeek(cFilial+"00RO")
   cTitulo := Alltrim(Left(X5Descri(),20))
Endif
If dbSeek(cFilial+"RO")
	CursorWait()
		While !Eof() .And. SX5->X5_Tabela == "RO"
			Aadd(aSit,Left(SX5->X5_Chave,1) + " - " + Alltrim(X5Descri()))
			MvParDef+=Left(SX5->X5_Chave,1)
			dbSkip()
		Enddo
	CursorArrow()
Endif
IF lTipoRet
	IF f_Opcoes(@MvPar,cTitulo,aSit,MvParDef,12,49,l1Elem)  // Chama funcao f_Opcoes
		&MvRet := mvpar                                      // Devolve Resultado
	EndIF	
EndIF

dbSelectArea(cAlias) 								 // Retorna Alias

Return( IF( lTipoRet , .T. , MvParDef ) )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁfGetFoto  Ё Autor Ё Mauricio MR           Ё Data Ё 20/12/03 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Obtem o Caminho da Foto a ser Impressa					  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁfGetFoto(cPath, cBmpPict, nLin, nCol, cPathPict,aFotos)     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ cPath 	- Caminho do \RootPath							  Ё╠╠
╠╠Ё          Ё cBmpPict - Nome do BMP a ser Recuperado					  Ё╠╠
╠╠Ё          Ё aFotos   - Array com as Fotos Extraidas					  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё cPathPict - Caracter representado a Localizacao da Foto    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё ETQINDIV                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Function fGetFoto(cPath, cBmpPict,aFotos)

Local cPathPict	:= ""
Local cIMGSource
Local nHandle
           

DEFAULT cPath   	:= Upper(GetTempPath()+cFileJpg)  //cPath	:= GetSrvProfString("Startpath","")
DEFAULT aFotos	:= {}

cBmpPict		:= ALLTRIM(cBmpPict)

/*
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Carrega a Foto               								   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
cPathPict 	:= ( cPath + cBmpPict+".JPG" )   

cIMGSource	:= LoadReposit( cBmpPict )
nHandle		:= fCreate(cPathPict)
fWrite(nHandle,cImgSource)
fClose(nHandle)

If !(nHandle < 0 )
	aAdd(aFotos,cPathPict)
Endif
         
Return (cPathPict) 
                                           

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁfIniPrtGraf   Ё Autor Ё RH - Mauricio MR      Ё Data Ё 24/01/04 Ё╠╠
╠╠цддддддддддеддддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Funcao generica iniciliazar impressao Grafica                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ                                                                Ё╠╠
╠╠Ё        01Ё ExpO1 = Objeto grafico                                         Ё╠╠
╠╠Ё        02Ё ExpO2 = Titulo do Relatorio                                    Ё╠╠
╠╠Ё        03Ё ExpO3 = .T. -> Paisagem ; .F. - Retrato                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                       Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function  fIniPrtGraf(cTitulo, nColPg, nLinPg, bProcesso, lPreview, lJumpPage )

DEFAULT nLinPg		:= 3100
DEFAULT	nColPg		:= 800    
DEFAULT lPreview	:= .F.
DEFAULT lJumpPage	:= .F.


Private  oCouNew07 :=TFont():New("Courier New",07,07,,.F.,,,,.T.,.F.)     //-- Modo Normal 
Private  oCouNew07N:=TFont():New("Courier New",07,07,,.T.,,,,.T.,.F.) 	//-- Modo Negrito(5o parametro New() )  
Private  oCouNew08 :=TFont():New("Courier New",08,08,,.F.,,,,.T.,.F.)
Private  oCouNew08N:=TFont():New("Courier New",08,08,,.T.,,,,.T.,.F.) 
Private  oCouNew10 :=TFont():New("Courier New",10,10,,.F.,,,,.T.,.F.) 
Private  oCouNew10N:=TFont():New("Courier New",10,10,,.T.,,,,.T.,.F.) 
Private  oCouNew12 :=TFont():New("Courier New",12,12,,.F.,,,,.T.,.F.)             
Private  oCouNew12N:=TFont():New("Courier New",12,12,,.T.,,,,.T.,.F.) 
Private  oCouNew15 :=TFont():New("Courier New",15,15,,.F.,,,,.T.,.F.) 
Private  oCouNew15N:=TFont():New("Courier New",15,15,,.T.,,,,.T.,.F.) 
Private  oCouNew21 :=TFont():New("Courier New",21,21,,.F.,,,,.T.,.T.) 
Private  oCouNew21N:=TFont():New("Courier New",21,21,,.T.,,,,.T.,.T.) 
Private  oArial08  :=TFont():New("Arial"      ,08,08,,.F.,,,,.T.,.F.) 
Private  oArial08N :=TFont():New("Arial"      ,08,08,,.T.,,,,.T.,.F.) 
Private  oArial12  :=TFont():New("Arial"      ,12,12,,.F.,,,,.T.,.F.) 
Private  oArial12N :=TFont():New("Arial"      ,12,12,,.T.,,,,.T.,.F.) 		
Private  oArial16  :=TFont():New("Arial"      ,16,16,,.F.,,,,.T.,.F.) 
Private  oArial16N :=TFont():New("Arial"      ,16,16,,.T.,,,,.T.,.F.)

_SetOwnerPrvt("oPrint", )

//-- Objeto para Impressao grafica
oPrint 	:= TMSPrinter():New(cTitulo)

oPrint  :SetPortrait()		//Modo retrato
nLinMax	:= nLinPg
nColMax	:= nColPg

If lJumpPage
	oPrint  :StartPage() 			//Inicia uma nova pagina
Endif

If bProcesso !=NIL 
	eval( bProcesso )
Endif 

oPrint:EndPage() 	   			// Finaliza a pagina

If lPreview
   oPrint:Preview()  			// Visualiza antes de imprimir
Endif


Return 
              
/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁfAdCpoSra     Ё Autor Ё RH - Igor Franzoi     Ё Data Ё 10/05/07 Ё╠╠
╠╠цддддддддддеддддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Funcao para verificacao de outros campos existentes no SRA     Ё╠╠
╠╠Ё			 Ё para insercao na query nos fontes do ponto                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ                                                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Ponto                                                          Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function fAdCpoSra(aCposSra)

If !Empty( SRA->( FieldPos("RA_PROCES") ) )
	aAdd( aCposSRA , "RA_PROCES" )
EndIf
If !Empty( SRA->( FieldPos("RA_CODFUNC") ) )
	aAdd( aCposSRA , "RA_CODFUNC" )
EndIf
If !Empty( SRA->( FieldPos("RA_DEPTO") ) )
	aAdd( aCposSRA , "RA_DEPTO" )
EndIf
If !Empty( SRA->( FieldPos("RA_POSTO") ) )
	aAdd( aCposSRA , "RA_POSTO" )
EndIf
Return 
