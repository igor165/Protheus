#INCLUDE 'PONR080.CH'
#INCLUDE 'FIVEWIN.CH'
#INCLUDE 'PONCALEN.CH'
#INCLUDE "REPORT.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PONR080  ³ Autor ³ R.H. - J. Ricardo     ³ Data ³ 07.11.96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Relatorio de Apuracoes Percentuais                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PONR080(void)                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Marinaldo   ³25/08/01³------³Imprimir Rodape a Cada Fim de Relatorio, A³±±
±±³            ³--------³------³certo na Quebra por Centro de Custo, Subst³±±
±±³            ³--------³------³ituicao a Toda Referencia por SomaHora() e³±±
±±³            ³--------³------³SubHoras() por __TimeSum() e __TimeSub() e³±±
±±³            ³--------³------³de fDhToNs() e fNsToDh() por __fDhToNs() e³±±
±±³            ³--------³------³__fNsToDh() e Substituicao da Funcao fFeri³±±
±±³            ³--------³------³ado Pela Posicao em aTabCalend   Correspon³±±
±±³            ³--------³------³dente a Feriado e Retirada da Chamada    a³±±
±±³            ³--------³------³fTabPadrao() que Carregava todas as   Tabe³±±
±±³            ³--------³------³las de Horario Padrao que agora passarao a³±±
±±³            ³--------³------³ser Carregadas Dinamicamente pela CiaCalen³±±
±±³            ³--------³------³d() que passou a ter apenas uma Chamada no³±±
±±³            ³--------³------³programa. Passagem de nTamanho para a SetP³±±
±±³            ³--------³------³rint.									  ³±±
±±³Marinaldo   ³07/11/01³Melhor³Utilizacao da funcao GetMarcacoes()   para³±±
±±³            ³--------³------³retornar as Marcacoes e Criar o Calendario³±±
±±³            ³--------³------³de Cada Funcionario.					  ³±±
±±³            ³--------³------³Utilizacao de fAbonos() para Retornar   os³±±
±±³            ³--------³------³Abonos do Funcionario na Data			  ³±±
±±³            ³--------³------³Utilizacao de DiaSemana() para Retornar  a³±±
±±³            ³--------³------³Descricao do Dia da Semana.				  ³±±
±±³            ³--------³------³Retirada a Chamada a dbGotop() para   posi³±±
±±³            ³--------³------³cionamento de Acordo com as Perguntas De e³±±
±±³            ³--------³------³Execucao ate a Pergunta Ate.			  ³±±
±±³Marinaldo   ³19/11/01³Melhor³A funcao GetMarcacoes passara a utilizar a³±±
±±³            ³--------³------³Funcao fDiasFolga() para Verificar as  Fol³±±
±±³            ³--------³------³gas Automaticas.						  ³±±
±±³Mauricio MR ³23/11/01³------³ Nao Considerar Ausencia de Marcacoes para³±±
±±³            ³--------³------³ dias de DSR com horario na Tabela Padrao.³±±
±±³Mauricio MR ³18/12/01³------³ Nao Considerar Ausencia de Marcacoes para³±±
±±³            ³--------³------³ dias Compensados e Nao trabalhados com   ³±± 
±±³            ³--------³------³ horarios na Tabela Padrao.               ³±± 
±±³Mauricio MR ³08/05/02³015559³ Forca a impressao de Marcacoes Impares   ³±±
±±³            ³--------³------³ quando existe apenas 1 (uma). Embora para³±± 
±±³            ³--------³------³ os calculos de totais seja tratada como  ³±±
±±³            ³--------³------³ ausencia de marcacoes.                   ³±±
±±³ Priscila R.³10/06/02³------³Ajuste no relatorio para que seja impresso³±± 
±±³            ³--------³------³corretamente o C.C no tamanho 20.         ³±± 
±±³Mauricio MR ³08/05/03³Acerto³ Ajuste para nao deslocar colunas de apura³±±
±±³            ³--------³------³ cao quando houver Ferias/Transferencia.  ³±±
±±³=======================================================================³±± 
±±³                         *** Versao 9.12 ***                           ³±± 
±±³=======================================================================³±± 
±±³Leandro Dr  ³01/04/08³Melhor³Inclusão de chave processo/periodo/roteiro³±± 
±±³            |        |      |NumPagto. Impressao por data ou periodo   ³±± 
±±³Leandro Dr. ³31/07/08³151152³Ajuste na chamada da funcao SETPRINT,     ³±±
±±³            ³--------³------³oitavo parametro deve ser .F. para que    ³±± 
±±³            ³--------³------³nao apareca a pasta dicionarios.          ³±±
±±³Leandro Dr. ³20/01/09³000982³Ajuste na verificacao de excecoes nos     ³±±
±±³            ³--------³------³feriados.                                 ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programador  ³ Data     ³ FNC            ³  Motivo da Alteracao                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ³±±
±±³Aldo Marini  ³28/04/2011³00000007914/2011³Conversao para TReport                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function PONR080()
Local	oReport   
Local	aArea 		:= GetArea()
Private nColPro		:= 1
Private cPerg		:= "PN080R"
Private cProcesso 	:= Nil
Private cPeriodo 	:= Nil
Private cRoteiro  	:= Nil
Private cNumPagto 	:= Nil

If __cRDD == "TOPCONN" .And. ;	// Verifica se esta utilizando ambiente TOP
	GetRpoRelease("R5").And. ;	// Verifica se esta no Release 11.5
	TRepInUse()					// Verifica se Imprime em formato personalizavel

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se deve imprimir por periodo ou datas			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If fOpcRadio(@nColPro, STR0001,;      //"Apuração das Marcações"
						   STR0034,;      //"Selecione a opcao de impressao:"
				   		   STR0035,;      //"Por Periodo"
				   		   STR0036 ) == 0 //"Por Datas"
		Return
	EndIf
		
	cPerg := IF(nColPro == 1,"PN080RA","PN080RB")

	pergunte(cPerg,.F.) 

    oReport := ReportDef()
    oReport:PrintDialog()
Else
 	PONR080R3()
EndIF    

RestArea( aArea )

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³ ReportDef  ³ Autor ³ Totvs IP RH           ³ Data ³26/04/2011³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Apuracao das Marcacoes                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PONR080                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR080 - Generico - Release 4                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ReportDef()
Local oReport 
Local oSection1 
Local oSection2 
Local oSection3 
Local bBlkFil 	:= { || If ( cCodFilial != (cAliasQry)->RA_FILIAL, Eval( { || fInfo(@aInfo,(cAliasQry)->RA_FILIAL), aInfo[3] } ), aInfo[1] ) }
Local aOrd     	:= { STR0004 , STR0005 , STR0006 , STR0007 , STR0033 , STR0041 } // 'Matricula'###'Centro de Custo'###'Nome'###'Turno'###'C.Custo+Nome'###'Departamento'
Private cTitulo	:= OemToAnsi(STR0001)			//'Apuracao das Marcacoes'

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao dos componentes de impressao                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DEFINE REPORT oReport NAME "PONR080" TITLE cTitulo PARAMETER cPerg ACTION {|oReport| PN080Imp(oReport)} DESCRIPTION OemtoAnsi(STR0043) TOTAL IN COLUMN LANDSCAPE // "Este programa emite Relacao Apuracao das Marcacoes"

	oSection1 := TRSection():New( oReport, OemToAnsi(STR0045), {"SRA","CTT","SR6"}, aOrd,,,,,.F.,.F.) // "Funcionarios"


		TRCell():New(oSection1,"RA_FILIAL","SRA",,/*Picture*/,8,/*lPixel*/,{|| 	If(!Empty((cAliasQry)->RA_FILIAL),;
																								cCodFilial:= (cAliasQry)->RA_FILIAL,;
																								NIL),;
																								cCodFilial}	)
		TRCell():New(oSection1,"FILIAL","",OemToAnsi(STR0046),/*Picture*/,20,/*lPixel*/,{|| Eval( bBlkFil ) })	// "Desc.Filial"

		TRCell():New(oSection1,"RA_MAT"		,"SRA",,,6)
		TRCell():New(oSection1,"RA_NOME"	,"SRA")
		TRCell():New(oSection1,"RA_CC"		,"SRA",,,9)
		TRCell():New(oSection1,"CTT_DESC01"	,"CTT",OemToAnsi(STR0044),,35,,,,.T.) 		// "Descricao"
		TRCell():New(oSection1,"RA_TNOTRAB"	,"SRA",OemToAnsi(STR0047),,3)				// "Tno"
		TRCell():New(oSection1,"R6_DESC"	,"SR6",,,30,,,,.T.)								
		TRCell():New(oSection1,"RA_DEPTO"	,"SRA",OemToAnsi(STR0065),,9)				// Depto
		
		TRCell():New( oSection1, "TOTHORAS"			, "" ,OemToAnsi(STR0048),"@e 999.99",5,,,"RIGHT",,"RIGHT")	//	"Tot.Hr"
		TRCell():New( oSection1, "INTERVALO"		, "" ,OemToAnsi(STR0049),"@e 999.99",5,,,"RIGHT",,"RIGHT")	//	"Interv" 
		TRCell():New( oSection1, "HORASTRAB"		, "" ,OemToAnsi(STR0050),"@e 999.99",5,,,"RIGHT",,"RIGHT")	//	"H.Trab" 
		TRCell():New( oSection1, "HORASABONADAS"	, "" ,OemToAnsi(STR0051),"@e 999.99",5,,,"RIGHT",,"RIGHT")	//	"H.Abon"
		TRCell():New( oSection1, "HORASDIFERENCA"	, "" ,OemToAnsi(STR0052),"@e 9999.99",7,,,"RIGHT",,"RIGHT")	//	"Hr.Dif."
		TRCell():New( oSection1, "PERCDIFERENCA"	, "" ,OemToAnsi(STR0053),"@e 9999.99",7,,,"RIGHT",,"RIGHT")	//	"% Dif."

	oSection2 := TRSection():New( oSection1, OemToAnsi(STR0057) )	 //"Marcações"

		TRCell():New( oSection2, "DATA"		, "" ,OemToAnsi(STR0054)      ,,10)	// "Data"

		TRCell():New( oSection2, "PREVISTA"			, "" ,OemToAnsi(STR0055),,48)	// "Ent.1 Sai.1 Ent.2 Sai.2 Ent.3 Sai.3 Ent.4 Sai.4"
		TRCell():New( oSection2, "REALIZADA"		, "" ,OemToAnsi(STR0056),,72)	// "Ent.1 Sai.1 Ent.2 Sai.2 Ent.3 Sai.3 Ent.4 Sai.4 Ent.5 Sai.5 Ent.6 Sai.6"

		TRCell():New( oSection2, "TOTHORAS"			, "" ,OemToAnsi(STR0048),"@e 999.99",5)	//	"Tot.Hr"
		TRCell():New( oSection2, "INTERVALO"		, "" ,OemToAnsi(STR0049),"@e 999.99",5)	//	"Interv" 
		TRCell():New( oSection2, "HORASTRAB"		, "" ,OemToAnsi(STR0050),"@e 999.99",5)	//	"H.Trab" 
		TRCell():New( oSection2, "HORASABONADAS"	, "" ,OemToAnsi(STR0051),"@e 999.99",5)	//	"H.Abon"
		TRCell():New( oSection2, "HORASDIFERENCA"	, "" ,OemToAnsi(STR0052),"@e 9999.99",7)	//	"Hr.Dif."
		TRCell():New( oSection2, "PERCDIFERENCA"	, "" ,OemToAnsi(STR0053),"@e 9999.99",7)	//	"% Dif."

		TRCell():New( oSection2, "PROCESSO"		, "" ,OemToAnsi(STR0066),,5,,,"LEFT",,"LEFT")	// "Processo"
		TRCell():New( oSection2, "PERIODO"		, "" ,OemToAnsi(STR0067),,6,,,"LEFT",,"LEFT")	// "Periodo"	
		TRCell():New( oSection2, "ROTEIRO"		, "" ,OemToAnsi(STR0068),,3,,,"LEFT",,"LEFT")	// "Rot"
		TRCell():New( oSection2, "NUMPAGTO"		, "" ,OemToAnsi(STR0069),,2,,,"LEFT",,"LEFT")	// "NP"

	oSection3 := TRSection():New( oReport, OemToAnsi(STR0061) )	 //"Totalizadores"

		TRCell():New( oSection3, "DESCRICAO"		, "" ,OemToAnsi(STR0061),,70)	//	"Totalizadores"
		TRCell():New( oSection3, "TOTHORAS"			, "" ,OemToAnsi(STR0048),"@e 999999999.99",12,,,"RIGHT",,"RIGHT")	//	"Tot.Hr" 
		TRCell():New( oSection3, "INTERVALO"		, "" ,OemToAnsi(STR0049),"@e 999999999.99",12,,,"RIGHT",,"RIGHT")	//	"Interv" 
		TRCell():New( oSection3, "HORASTRAB"		, "" ,OemToAnsi(STR0050),"@e 999999999.99",12,,,"RIGHT",,"RIGHT")	//	"H.Trab" 
		TRCell():New( oSection3, "HORASABONADAS"	, "" ,OemToAnsi(STR0051),"@e 999999999.99",12,,,"RIGHT",,"RIGHT")	//	"H.Abon"
		TRCell():New( oSection3, "HORASDIFERENCA"	, "" ,OemToAnsi(STR0052),"@e 999999999.99",12,,,"RIGHT",,"RIGHT")	//	"Hr.Dif."
		TRCell():New( oSection3, "PERCDIFERENCA"	, "" ,OemToAnsi(STR0053),"@e 999999999.99",12,,,"RIGHT",,"RIGHT")	//	"% Dif."
                                           
Return(oReport)                          


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³ PN080Imp   ³ Autor ³ Totvs IP RH           ³ Data ³26/04/2011³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Impressao do relatorio em TReport                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PN080Imp(oReport)                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oReport                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR080 - Generico - Release 4                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function PN080Imp(oReport)

Local oSection  := oReport:Section(1)
Local oSection1 := oReport:Section(1):Section(1)
Local oSection2 := oReport:Section(2)
Local cFiltro 	:= "" 
Local cSitQuery	:= ""    
Local cCatQuery	:= ""  
Local nReg		:= 0
Local cOrdem 	:= ""
Local cFilSRACTT:= ""
Local cFilSRASR6:= ""
Local cFilSRASQB:= ""

Local aPrevisto  	:= {}
Local aRealizado   	:= {}
Local aFun          := {}
Local cPrevisto  	:= ''
Local cRealizado 	:= '' 
Local cDet       	:= ''
Local dDtAfas    	:= CtoD('  /  /  ')
Local dDtRet     	:= CtoD('  /  /  ')

Local nLenMarc 	    := 0
Local cTipoDia      :=  ''

Local aAbonos    := {}
Local aMarcacoes := {}
Local aTabCalend := {}
Local aTabPadrao := {}
Local cDescrAfa  := ""
Local cAcessaSRA := &("{ || " + ChkRh("PONR080","SRA","2") + "}")
Local dRef       := Ctod("//")
Local lAfasta    := .F.
Local lNaoLista  := .F.
Local nFor       := 0
Local nFor1		 := 0
Local nFor2		 := 0
Local nPos       := 0
Local nPosCalend := 0	
Local nAbono     := 0
Local nDifHor    := 0
Local nIntReal   := 0
Local nIntProg   := 0
Local nMarcacoes := 0
Local nEfeTotHor := 0
Local nEfeTotInt := 0
Local nEfeTotTra := 0
Local nPerDifHor := 0
Local nPreTotTra := 0
Local nX		 := 0
Local lImpar	 := .F.

//-- Acumuladores
Private aEfeTotHor := { 0,0,0,0 }
Private aEfeTotInt := { 0,0,0,0 }
Private aEfeTotTra := { 0,0,0,0 }
Private aDifHor    := { 0,0,0,0 }
Private aPerDifHor := { 0,0,0,0 }
Private aPreTotTra := { 0,0,0,0 }
Private aAboTot    := { 0,0,0,0 }

Private cInicio	 := ""
Private cFim	 := ""		

Private nOrdem		:= oSection:GetOrder()
Private aInfo		:= {}
Private cCodFilial	:= "##"

Private cSituacao	:= ""
Private cCategoria	:= ""
Private cAliasQry := GetNextAlias()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Private(Programa)                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cFor       := ''
Private cIndCond   := ''
Private dPerIni    := CtoD('  /  /  ')
Private dPerFim    := CtoD('  /  /  ')
Private aTurnos    := {}
Private nPagAtu    := 1
Private lPeriodo  	:= .F.
Private oPeriodo  	:= RHPERIODO():New()

Private	cFilAnte	:= Replicate("ú", GetSx3Cache("RA_FILIAL", "X3_TAMANHO"))
Private	cTnoAnte	:= Replicate("ú", GetSx3Cache("RA_TNOTRAB", "X3_TAMANHO"))
Private	cCcAnte 	:= Replicate("!", GetSx3Cache("RA_CC", "X3_TAMANHO"))
Private	cTnoDesc 	:= Replicate("!", GetSx3Cache("R6_DESC", "X3_TAMANHO"))
Private	cCcDesc 	:= Replicate("!", GetSx3Cache("CTT_DESC01", "X3_TAMANHO"))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando variaveis mv_par?? para Variaveis do Sistema.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nColPro == 1 ) 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis utilizadas para parametros                         ³
	//³ MV_PAR01        //  Processo                                 ³
	//³ MV_PAR02        //  Periodo                                  ³
	//³ MV_PAR03        //  Roteiro                                  ³
	//³ MV_PAR04        //  Numero de Pagamento                      ³
	//³ MV_PAR05        //  Departamento                             ³				
	//³ MV_PAR06        //  Filial                                   ³
	//³ MV_PAR07        //  Centro de Custo                          ³
	//³ MV_PAR08        //  Turno                                    ³
	//³ MV_PAR09        //  Matricula                                ³
	//³ MV_PAR10        //  Nome                                     ³
	//³ MV_PAR11        //  Situacao                                 ³
	//³ MV_PAR12        //  Categoria                                ³
	//³ MV_PAR13        //  Sintetico/Analitico                  	 ³
	//³ MV_PAR14        //  Intervalo Previsto ou Realizado          ³
	//³ MV_PAR15        //  Considerar Feriado                		 ³
	//³ MV_PAR16        //  C.C. em outra pagina		     		 ³
	//³ MV_PAR17        //  Func. em outra pagina                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lPeriodo  := .T.
	cProcesso  := mv_par01			//  Processo
	cPeriodo   := mv_par02			//  Periodo
	cRoteiro   := mv_par03			//  Roteiro
	cNumPagto  := mv_par04			//  Numero de Pagamento
	cSituacao  := mv_par11			//  Situacao
	cCategoria := mv_par12			//  Categoria
	lSint      := (mv_par13==1)		//  Sintetico ou Analitico
	lIntMenPre := (mv_par14==1)		//  Intervalo Previsto ou Realizado
	lFeriado   := (mv_par15==1)		//  Considerar Feriado	
	lCC        := (mv_par16==1)		//  C.C. outra pagina
	lFunc      := (mv_par17==1)		//  Func.outra pagina
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis utilizadas para parametros                         ³
	//³ MV_PAR01        //  Processo                                 ³
	//³ MV_PAR02        //  Data Inicial                             ³
	//³ MV_PAR03        //  Data Final                               ³
	//³ MV_PAR04        //  Departamento                             ³				
	//³ MV_PAR05        //  Filial  De                               ³
	//³ MV_PAR06        //  Centro de Custo De                       ³
	//³ MV_PAR07        //  Turno De                                 ³
	//³ MV_PAR08        //  Matricula De                             ³
	//³ MV_PAR09        //  Nome De                                  ³
	//³ MV_PAR10        //  Situacao                                 ³
	//³ MV_PAR11        //  Categoria                                ³
	//³ MV_PAR12        //  Sintetico/Analitico                  	 ³
	//³ MV_PAR13        //  Intervalo Previsto ou Realizado          ³
	//³ MV_PAR14        //  Considerar Feriado                		 ³
	//³ MV_PAR15        //  C.C. em outra pagina		     		 ³
	//³ MV_PAR16        //  Func. em outra pagina                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lPeriodo   := .F.
	cProcesso  := mv_par01			//  Processo
	dPerIni    := mv_par02          //  Data Inicial
	dPerFim    := mv_par03          //  Data Final
	cSituacao  := mv_par10			//  Situacao
	cCategoria := mv_par11			//  Categoria
	lSint      := (mv_par12==1)		//  Sintetico ou Analitico
	lIntMenPre := (mv_par13==1)		//  Intervalo Previsto ou Realizado
	lFeriado   := (mv_par14==1)		//  Considerar Feriado	
	lCC        := (mv_par15==1)		//  C.C. outra pagina
	lFunc      := (mv_par16==1)		//  Func.outra pagina
EndIf

If lPeriodo
	oPeriodo:cProcesso := cProcesso
	oPeriodo:cPeriodo  := cPeriodo
	oPeriodo:cRoteiro  := cRoteiro
	oPeriodo:cNumPagto := cNumPagto

	oPeriodo:GetPer()
	
	If !(oPeriodo:lFound )
		MsgInfo( OemToAnsi( oPeriodo:cMsgNotFoundPer ) )    //"Período de Apontamento não encontrado."
		Return
	EndIf
	
	dPerIni := oPeriodo:dDataIni
	dPerFim := oPeriodo:dDataFim
Else
	oPeriodo:dDataIni := dPerIni
	oPeriodo:dDataFim := dPerFim	
EndIf	

If dPerIni > dPerFim
   Help(" ",1,"PNR050DATA")
   Return Nil
Endif

SRA->(dbSetOrder(1))

cTitulo := OemToAnsi(STR0001) + " " + OemToAnsi(STR0032) + DTOC(dPerIni) + " - " + DTOC(dPerFim) // "Apuracao das Marcacoes" ### 'Periodo: '

//-- Altera o titulo do relatorio
oReport:SetTitle(cTitulo)

//-- Modifica variaveis para a Query
For nReg:=1 to Len(cSituacao)
	cSitQuery += "'"+Subs(cSituacao,nReg,1)+"'"
	If ( nReg+1 ) <= Len(cSituacao)
		cSitQuery += "," 
	Endif
Next nReg        
cSitQuery := "%" + cSitQuery + "%"

cCatQuery := ""
For nReg:=1 to Len(cCategoria)
	cCatQuery += "'"+Subs(cCategoria,nReg,1)+"'"
	If ( nReg+1 ) <= Len(cCategoria)
		cCatQuery += "," 
	Endif
Next nReg        
cCatQuery := "%" + cCatQuery + "%"

//Transforma parametros do tipo Range em expressao ADVPL para ser utilizada no filtro
MakeSqlExpr(cPerg)
	
BEGIN REPORT QUERY oSection

cFilSRACTT	:= "%" + FWJoinFilial("SRA", "CTT") + "%"
cFilSRASR6	:= "%" + FWJoinFilial("SRA", "SR6") + "%"	
cFilSRASQB	:= "%" + FWJoinFilial("SRA", "SQB") + "%"	 

If nOrdem == 1
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_MAT%"
ElseIf nOrdem == 2
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_CC,SRA.RA_MAT%"
ElseIf nOrdem == 3
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_NOME,SRA.RA_MAT%"
ElseIf nOrdem == 4
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_TNOTRAB%"
ElseIf nOrdem == 5
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_CC,SRA.RA_NOME%"
ElseIf nOrdem == 6
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_DEPTO,SRA.RA_MAT%"
Endif
	
BeginSql alias cAliasQry
	SELECT SRA.RA_FILIAL, SRA.RA_CC, SRA.RA_MAT, SRA.RA_NOME, SRA.RA_TNOTRAB, SRA.RA_SEQTURN, SRA.RA_DEMISSA,SRA.RA_ADMISSA,
		SRA.RA_SITFOLH,SRA.RA_RESCRAI,SRA.RA_DEPTO,SRA.RA_PROCES,
		CTT.CTT_FILIAL, CTT.CTT_CUSTO, CTT.CTT_DESC01,
		SR6.R6_TURNO, SR6.R6_DESC
	FROM %table:SRA% SRA
	INNER JOIN %table:CTT% CTT ON RA_CC = CTT_CUSTO AND CTT.%NotDel% AND %exp:cFilSRACTT%
	INNER JOIN %table:SR6% SR6 ON RA_TNOTRAB = R6_TURNO AND SR6.%NotDel% AND %exp:cFilSRASR6%
	INNER JOIN %table:SQB% SQB ON RA_DEPTO = QB_DEPTO AND SQB.%NotDel% AND %exp:cFilSRASQB%
	WHERE SRA.RA_SITFOLH	IN	(%exp:Upper(cSitQuery)%) 	AND
		  SRA.RA_CATFUNC	IN	(%exp:Upper(cCatQuery)%)	AND
 	      SRA.%notDel%   
	ORDER BY %exp:cOrdem%
EndSql

/*
Prepara relatorio para executar a query gerada pelo Embedded SQL passando como 
parametro a pergunta ou vetor com perguntas do tipo Range que foram alterados 
pela funcao MakeSqlExpr para serem adicionados a query
*/
If ( nColPro == 1 ) 
	END REPORT QUERY oSection PARAM mv_par05,mv_par06,mv_par07,mv_par08,mv_par09,mv_par10
Else
	END REPORT QUERY oSection PARAM mv_par04,mv_par05,mv_par06,mv_par07,mv_par08,mv_par09
Endif

DEFINE BREAK oBreakFil OF oSection WHEN {|| (cAliasQry)->RA_FILIAL }  TITLE OemToansi(STR0001) 
oBreakFil:SetPageBreak(.T.)
oBreakFil:SetHeaderBreak(.T.) 

DEFINE BREAK oBreakFun OF oSection WHEN {|| (cAliasQry)->RA_MAT }  TITLE OemToansi(STR0001) 
oBreakFun:SetHeaderBreak(.T.) 
If lFunc  
	oBreakFun:SetPageBreak(.T.) 
Endif
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Quebra de pagina C.Custo                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (nOrdem = 2 .or. nOrdem = 5) 
	DEFINE BREAK oBreakCc OF oSection WHEN {|| (cAliasQry)->RA_CC } TITLE OemToansi(STR0001) 
	If lCC 
		oBreakCc:SetPageBreak(.T.) 
		oBreakCc:SetHeaderBreak(.T.) 
	Endif 
ElseIf (nOrdem = 4) 
	DEFINE BREAK oBreakCc OF oSection WHEN {|| (cAliasQry)->RA_TNOTRAB } TITLE OemToansi(STR0001) 
	If lCC 
		oBreakCc:SetPageBreak(.T.) 
		oBreakCc:SetHeaderBreak(.T.) 
	Endif 
Endif 

If !lSint
	oSection:SetHeaderSection(.T.)
	oSection:SetHeaderBreak(.T.) 
Else
	oSection:SetHeaderSection(.F.)
	oSection:SetHeaderBreak(.F.) 
Endif

oSection1:SetHeaderSection(.F.)
oSection1:SetHeaderBreak(.F.) 

oSection:lHeaderPage:=.F. 
oSection1:lHeaderPage:=.F. 

// Na quebra de pagina executa: Impressao da Linha do funcionario,pula linha,impressão do cabecalho das marcacoes, pula linha
oReport:OnPageBreak( {|| oReport:lOnPageBreak:= .F.,;
							If(lSint,(oSection:SetHeaderSection(.T.),oSection:PrintHeader(),oSection:SetHeaderSection(.F.)),),;
							If((oSection1:lPrinting ),;
								(	oSection:PrintLine(),	;
									oReport:SkipLine(),;
									oReport:PrintText( Space(12) + PADC(OemToAnsi(STR0058),52) + PADC(OemToAnsi(STR0059),80) + PADC(OemToAnsi(STR0060),60) ) ,;
									oReport:SkipLine(),;
									oSection1:SetHeaderSection(.T.),;
									oSection1:PrintHeader(),;
									oSection1:SetHeaderSection(.F.),;
									oReport:SkipLine();
								);
							,);
					 },.F. )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a variavel aInfo com a filial Logada              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fInfo(@aInfo,(cAliasQry)->RA_FILIAL)

cFilAnte	:= (cAliasQry)->RA_FILIAL
cCcAnte		:= (cAliasQry)->RA_CC
cTnoAnte	:= (cAliasQry)->RA_TNOTRAB
cTnoDesc 	:= (cAliasQry)->R6_DESC 
cCcDesc 	:= (cAliasQry)->CTT_DESC01 

If !lSint
	oSection:Cell("TOTHORAS"):Disable()	
	oSection:Cell("INTERVALO"):Disable()	
	oSection:Cell("HORASTRAB"):Disable()		
	oSection:Cell("HORASABONADAS"):Disable()	
	oSection:Cell("HORASDIFERENCA"):Disable()	
	oSection:Cell("PERCDIFERENCA"):Disable()			
Endif

//-- Define que o formato da impressao sera em paisagem
oReport:SetLandscape()

//-- Define o total da regua da tela de processamento do relatorio
oReport:SetMeter( 100 )  

//-- Incializa impressao   
oSection:Init()                              

While !(cAliasQry)->( EOF() ) 

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta Regua de Processamento                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oReport:IncMeter( 1 )   

	//-- Verifica se o usuário cancelou a impressão do relatorio
	If oReport:Cancel()
		Exit
	EndIf               

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Consiste Filiais e Acessos                                             ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF !( (cAliasQry)->RA_FILIAL $ fValidFil() ) .or. !Eval( cAcessaSRA )
		(cAliasQry)->(DbSkip())
	   	Loop
	EndIF

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Posiciona o registro da query na tabela de Funcionarios                ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If !SRA->(dbSeek( (cAliasQry)->RA_FILIAL + (cAliasQry)->RA_MAT ))
		(cAliasQry)->(DbSkip())
	   	Loop
	Endif

	//-- Reinicializa Variaveis do Funcionario
	aTabCalend	:= {} 
	aTurnos		:= {}
	aMarcacoes	:= {}

	aFun		:= {}
	
    /*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega Arrays com as Marca‡”es do Periodo (aMarcacoes), com³
	³o Calendario de Marca‡”es do Periodo (aTabCalend) e com    as³	
	³Trocas de Turno do Funcionario (aTurnos)					  ³	
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF !SRA->( GetMarcacoes(	@aMarcacoes		,;	//Marcacoes dos Funcionarios
			   					@aTabCalend		,;	//Calendario de Marcacoes
								@aTabPadrao		,;	//Tabela Padrao
								@aTurnos		,;	//Turnos de Trabalho
								dPerIni 		,;	//Periodo Inicial
								dPerFim			,;	//Periodo Final
								(cAliasQry)->RA_FILIAL		,;	//Filial
								(cAliasQry)->RA_MAT	  		,;	//Matricula
								(cAliasQry)->RA_TNOTRAB		,;	//Turno
								(cAliasQry)->RA_SEQTURN		,;	//Sequencia de Turno
								(cAliasQry)->RA_CC		,;	//Centro de Custo
								"SP8"			,;	//Alias para Carga das Marcacoes
							    .F.    			,;	//13 -> Se carrega Recno em aMarcacoes
							    .T.    			,;	//14 -> Se considera Apenas Ordenadas
							    .T.    			,;	//15 -> Se Verifica as Folgas Automaticas
							    .F.    			,;	//16 -> Se Grava Evento de Folga Automatica Periodo Anterior
							    NIL				,;	//17 -> Se Carrega as Marcacoes Automaticas
							    NIL				,;	//18 -> Registros de Marcacoes Automaticas que deverao ser Desprezadas
							    NIL				,;	//19 -> Bloco para avaliar as Marcacoes Automaticas que deverao ser Desprezadas
							    .F.				,;	//20 -> Se Considera o Periodo de Apontamento das Marcacoes
							    .F.				,;	//21 -> Se Efetua o Sincronismo dos Horarios na Criacao do Calendario
							    .T.				,;  //Se considera data de apontamento
							    .T.				;	//Se considera data inicial	
					 		);
			  )	 		
		(cAliasQry)->(DbSkip())
		Loop
	EndIF					 

	//-- Processa quebra de Filial.
	If (cAliasQry)->RA_FILIAL != cFilAnte 
	    //--Somente "Zera" as variaveis se jah foi impresso algo para nao pula 
	    //--de pagina na primeira vez

		// Imprime os totais por Centro de Custo ou Turno de Trabalho
		If nOrdem == 2 .Or. nOrdem == 4 .Or. nOrdem == 5
			F080RCabTot(oReport,oSection2,nOrdem)
			cTnoAnte := (cAliasQry)->RA_TNOTRAB 
			cTnoDesc := (cAliasQry)->R6_DESC 
			cCcAnte := (cAliasQry)->RA_CC 
			cCcDesc := (cAliasQry)->CTT_DESC01 
		Endif

		// Imprime os totais da filial
		F080RCabTot(oReport,oSection2,9)		
		
		cFilAnte := (cAliasQry)->RA_FILIAL

		If !fInfo(@aInfo,(cAliasQry)->RA_FILIAL)
			Exit
		Endif	

	Endif

	//-- Processa quebra de Filial.
	If 	(nOrdem == 4 .And. (cAliasQry)->RA_TNOTRAB != cTnoAnte) .Or. 	(( nOrdem == 2 .Or. nOrdem == 5) .And. (cAliasQry)->RA_CC != cCcAnte	)
		F080RCabTot(oReport,oSection2,nOrdem)
		cTnoAnte := (cAliasQry)->RA_TNOTRAB 
		cTnoDesc := (cAliasQry)->R6_DESC 
		cCcAnte := (cAliasQry)->RA_CC 
		cCcDesc := (cAliasQry)->CTT_DESC01 
	Endif

    /*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica o Numero de Elementos de aMarcacoes  			  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	nLenMarc := Len( aMarcacoes )

	//-- Verifica se deveria existir marcacoes no dia (dRef)
	dRef := Ctod("//")
	aFun := {}
	aEfeTotHor[1] := 0
	aEfeTotInt[1] := 0
	aEfeTotTra[1] := 0
	aPreTotTra[1] := 0
	aDifHor[1]    := 0
	aAboTot[1]    := 0
	
    /*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Percorre Todas as Ordens do Calendario					  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	For nFor1 := 0 To ( Val(aTabCalend[Len(aTabCalend),2]) - 1 )
	
		aAbonos  := {}
		dDataApo := dPerIni + nFor1

		If (nPosCalend := aScan( aTabCalend, { |x| x[CALEND_POS_DATA_APO] == dDataApo .And. x[4] == '1E'  } ) ) > 0

			dRef := aTabCalend[nPosCalend,1] //-- Encontra a Data de referencia

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica os Abonos na Data									³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IF ( nPos := Ascan( aAbonos, { |x| x[1] == dRef } ) ) > 0
				aAbonos[nPos,2] := __TimeSum(aAbonos[nPos,2],fAbonos(dRef))
			Else
				aAdd(aAbonos,{dRef,fAbonos(dRef)})
			EndIF

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ N„o deve gerar marca‡”es em feriados que nao sejam excecoes.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !lFeriado
				If aTabCalend[nPosCalend,19]
					Loop
				Endif
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ N„o Considera Data Fora do Periodo                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If dRef < dPerIni .Or. dRef > dPerFim
				Loop
			EndIf	
		Else
			Loop
		EndIf
		
		//-- Reinicializa Variaveis
		cPrevisto  := ''
		aPrevisto  := {}
		nMarcacoes := 0
		nEfeTotHor := 0
		nEfeTotInt := 0
		nEfeTotTra := 0
		nPreTotTra := 0
		nAbono     := 0
		nDifHor    := 0
		nPerDifHor := 0

		//-- Dia Normal
		//-- Encontra a 1a marca‡„o da Data de referencia
		If (nPosCalend := Ascan( aTabCalend, { |x| x[CALEND_POS_DATA_APO] == dDataApo .And. x[4] == '1E'  } ) ) > 0
			//-- Guarda o Tipo do dia Segundo a Tabela Padrao Posicionada logo acima
	    	cTipoDia	:= aTabCalend[nPosCalend,6]  
			
			For nFor2 := nPosCalend To Len(aTabCalend)
				//-- N„o Permite a apura‡„o de mais de 8 marca‡”es !!!
				If aTabCalend[nFor2,CALEND_POS_DATA_APO] # dDataApo .Or. nMarcacoes > 8
					Exit
				Endif
				nMarcacoes ++
				If !lFeriado .Or. (lFeriado .And. !aTabCalend[nPosCalend,19])
					Aadd(aPrevisto,{aTabCalend[nFor2,3],aTabCalend[nFor2,1]})
					If nMarcacoes <= 8
						cPrevisto += StrZero(aTabCalend[nFor2,3],5,2) + " "
					Endif
				Else
					Aadd(aPrevisto,{0,00,aTabCalend[nFor2,1]})
					cPrevisto += If( nMarcacoes <= 8,StrZero(0,5,2) + " ",)
				Endif
			Next nFor2	
		Else
			Loop
		EndIf

		//-- Busca as marcacoes
		cEfetivo   := ''
		aEfetivo   := {}
		nMarcacoes := 0
		lNaoLista  := .F.
		lImpar	   := .F.
		
		IF ( nPos := aScan( aMarcacoes , { |x| x[AMARC_DATAAPO] == dDataApo } ) ) > 0.00
			For nX := nPos To nLenMarc
				IF aMarcacoes[ nX , AMARC_DATAAPO ] != dDataApo
					Exit
				EndIF
				IF aScan( aEfetivo, { |x| x[1] == aMarcacoes[nX,2] .and. x[2] == aMarcacoes[nX,1] } ) == 0
					nMarcacoes++
					Aadd(aEfetivo,{aMarcacoes[nX,2], aMarcacoes[nX,1]})
					IF nMarcacoes <= 12 		// Marcacoes realizadas ficam limitadas a doze
						cEfetivo += StrZero(aMarcacoes[nX,2],5,2) + Space(1)
					EndIF
				EndIF
			Next nX	
			//-- Verifica se Marcacoes Impares
			If nMarcacoes%2 # 0
				cEfetivo += STR0022  // '     ** MARC.IMPAR **'
			   lImpar:=.T.
			Endif

			cProc := aMarcacoes[ nPos , AMARC_PROCESSO ]
			cPer  := aMarcacoes[ nPos , AMARC_PERIODO  ]
			cRot  := aMarcacoes[ nPos , AMARC_ROTEIRO  ]
			cNPag := aMarcacoes[ nPos , AMARC_NUM_PAGTO]

		Else
			If !lFeriado .or. (lFeriado .and. !aTabCalend[nPosCalend,19])
				lNaoLista := .T.
			Endif
			For nFor := 1 To Len(aPrevisto)
				If aPrevisto[nFor,1] # 0.00
					lNaoLista := .F.
				Endif
			Next nFor
		Endif

		If !lFeriado
			//-- N„o lista quando houver Feriados sem Excecoes.
			If aTabCalend[nFor1+1,19] .And. aTabCalend[nFor1+1,10] # "E"
				lNaoLista := .T.
			EndIf
		Endif

		If lNaoLista
			Loop
		Endif

		cTipAfas := Space(1)
		lAfasta  := .F.
		cMotivo  := ''
		dDtaFas  := CtoD('  /  /  ')
		dDtRet   := CtoD('  /  /  ')

		If Len(aEfetivo) == 0  
			//-- Para Dia na Tabela como sendo DSR ou Compensado ou Nao trabalhado(mesmo com horarios)
			//-- Desconsidera se Nao Ocorreram Marcacoes.
			If cTipoDia $ 'D.C.N'
			   Loop
			Endif  
			
			//-- Afastamentos
			If fAfasta( (cAliasQry)->RA_FILIAL,(cAliasQry)->RA_Mat,dRef,@dDtafas,@dDtRet,@cTipAfas) .Or. ;
				(cAliasQry)->RA_SitFolh $ 'DúT' .And. dRef > (cAliasQry)->RA_DEMISSA
				lAfasta := .T.
				cDescrAfa := fDescAfast(If(!Empty(cTipAfas),cTipAfas,fDemissao((cAliasQry)->RA_SITFOLH, (cAliasQry)->RA_RESCRAI) ))
				cMotivo := PADC('** '  + AllTrim(cDescrAfa) + ' **',71) +' | '
			EndIf
			//-- Per¡odo anterior a Admiss„o
			If dRef < fDtaAdmis()
				lAfasta := .T.
				cMotivo := STR0024      // '                     ** DATA ANTERIOR A ADMISSAO **                      | '
			EndIf
            //-- Funcionario sem Marcacao
			IF Empty(cMotivo)
				cMotivo := STR0025      // '                         ** SEM MARCACOES **                            | '
			EndIF
		Else
		    //-- Elimina o Ultimo Elemento das marcacoes impares
			If lImpar
				aDel(aEfetivo,Len(aEfetivo))
				aSize(aEfetivo,Len(aEfetivo)-1)
			Endif
		Endif
        
		cEfetivo := StrTran(cEfetivo,'.',':')
		cEfetivo := Left(cEfetivo+Space(71),71)

		cPrevisto := StrTran(cPrevisto,'.',':')
		cPrevisto := Left(cPrevisto+Space(47),47)

		If lSint
			cDet := Space(84) + '| '
		Else
			cDet := StrZero(Day(dRef),2) + '/' + StrZero(Month(dRef),2) + Space(1) + DiaSemana(dRef,3)+ ' | '
			cDet += cPrevisto + ' | '
			If Len(cMotivo) > 0
				cDet += cMotivo
			Else
				cDet += cEfetivo + ' | '
			Endif
		Endif

		//-- Apura Total de Horas
		nPreTotHor := If(Len(aPrevisto)>0,__fNStoDH(__fDHtoNS(aPrevisto[Len(aPrevisto),2],aPrevisto[Len(aPrevisto),1])-__fDHtoNS(aPrevisto[1,2],aPrevisto[1,1]),'H'), 0)
		nEfeTotHor := If(Len(aEfetivo )>0,__fNStoDH(__fDHtoNS(aEfetivo [Len(aEfetivo ),2],aEfetivo [Len(aEfetivo ),1])-__fDHtoNS(aEfetivo [1,2],aEfetivo [1,1]),'H'), 0)

		//-- Apura Total dos Intervalos Efetivos
		nPreTotInt := 0
		For nFor := 2 To Len(aPrevisto) Step 2
			If Len(aPrevisto) >= nFor + 1
				nPreTotInt := __TimeSum(nPreTotInt,__fNStoDH(__fDHtoNS(aPrevisto[nFor+1,2],aPrevisto[nFor+1,1])-__fDHtoNS(aPrevisto[nFor,2],aPrevisto[nFor,1]),'H') )
			Endif
		Next nFor

		//-- N„o Considera Horas a Menos em Afastamentos
		If !lAfasta
			For nFor := 2 To Len(aEfetivo) Step 2
				If Len(aEfetivo) >= nFor + 1
					nEfeTotInt := __TimeSum(nEfeTotInt, __fNStoDH(__fDHtoNS(aEfetivo[nFor+1,2],aEfetivo[nFor+1,1])-__fDHtoNS(aEfetivo[nFor,2],aEfetivo[nFor,1]),'H') )
				Endif
			Next nFor

			//-- Busca os abonos do dia 
			nAbono := 0
			If ( nPos := Ascan(aAbonos,{|x| x[1] == dRef }) ) > 0
				nAbono := aAbonos[nPos,2]
			Endif

			If nPreTotInt > nEfeTotInt .And. nEfeTotInt > 0.00
				If !lIntMenPre //-- Considerar intervalos menores que o programado
					nEfeTotInt := nPreTotInt
				EndIf					
			Endif

			//-- Total de Horas Trabalhadas
			nEfeTotTra := __TimeSub(nEfeTotHor,nEfeTotInt)
			nPreTotTra := __TimeSub(nPreTotHor,nPreTotInt)

			nDifHor := __TimeSum(nEfeTotTra,nAbono)
			nDifHor := __TimeSub(nDifHor,nPreTotTra)

			If nPreTotTra > 0
				nPerDifHor := ((((Int(ABS(nDifHor))*60)  +  ((ABS(nDifHor)-Int(ABS(nDifHor))))*100))*100) / ;
					((Int(nPreTotTra)*60)+((nPreTotTra-Int(nPreTotTra))))

			Else
				If nEfeTotTra > 0
					nPerDifHor := 100
				Endif
			Endif

			If nDifHor < 0.00
				nPerDifHor *= -1
			Endif
		EndIf

		If !lSint
			cDet += Transform(nEfeTotHor, '@E 999.99' ) + " "
			cDet += Transform(nEfeTotInt, '@E 999.99' ) + " "
			cDet += Transform(nEfeTotTra, '@E 999.99' ) + " "
			cDet += Transform(nAbono    , '@E 999.99' ) + " "
			cDet += Transform(nDifHor   , '@E 9999.99') + " "
			cDet += Transform(nPerDifHor, '@E 9999.99') + " "
		Endif

		For nFor := 1 To 4
			aEfeTotHor[nFor] := __TimeSum(nEfeTotHor,aEfeTotHor[nFor])
			aEfeTotInt[nFor] := __TimeSum(nEfeTotInt,aEfeTotInt[nFor])
			aEfeTotTra[nFor] := __TimeSum(nEfeTotTra,aEfeTotTra[nFor])
			aPreTotTra[nFor] := __TimeSum(nPreTotTra,aPreTotTra[nFor])
			aDifHor[nFor]    := __TimeSum(nDifHor   ,aDifHor[nFor]   )
			aAboTot[nFor]    := __TimeSum(nAbono    ,aAboTot[nFor]   )
		Next

		If !lSint
			cDet += cProc + cPer + cRot + cNPag
			aAdd(aFun,cDet)
		Endif
		
	Next nFor1

	// Verifica se não carregou as marcações e salta para o proximo funcionario
	If Len(aFun) == 0 .And. !lSint
		(cAliasQry)->(DbSkip())
		Loop
	Endif

	// Caso o relatorio seja sintetico imprimir apenas os totais do funcionario
	If lSint
		oSection:Cell( "TOTHORAS" ):SetValue(aEfeTotHor[1])
		oSection:Cell( "INTERVALO" ):SetValue(aEfeTotInt[1])		
		oSection:Cell( "HORASTRAB" ):SetValue(aEfeTotTra[1])
		oSection:Cell( "HORASABONADAS" ):SetValue(aAboTot[1])
		oSection:Cell( "HORASDIFERENCA" ):SetValue(aDifHor[1])

		nPerDifHor := ((((Int(ABS(aDifHor[1]))*60)  +  ((ABS(aDifHor[1])-Int(ABS(aDifHor[1]))))*100))*100) / ;
		((Int(aPreTotTra[1])*60)+((aPreTotTra[1]-Int(aPreTotTra[1]))))
		If aDifHor[1] < 0.00
			nPerDifHor *= -1
		Endif

		oSection:Cell( "PERCDIFERENCA" ):SetValue(nPerDifHor)

	Endif
	
	oSection:PrintLine()

	// Caso seja analitico imprimi as marcacoes previstas e realizadas
	If !lSint

		oSection1:Init(.F.) 
		oReport:SkipLine()
		oReport:PrintText( Space(12) + PADC(OemToAnsi(STR0058),52) + PADC(OemToAnsi(STR0059),80) + PADC(OemToAnsi(STR0060),60) ) 
		oReport:SkipLine()

		oSection1:SetHeaderSection(.T.)
		oSection1:PrintHeader() 
		oSection1:SetHeaderSection(.F.)

		For nFor := 1 to Len( aFun )
	
			// Colunas do aFun
			// DATA 		-  1 a   9 - 99/99 xxx
			// PREVISTA 	- 13 a  59 - 99:99 99:99 99:99 99:99 99:99 99:99 99:99 99:99
			// REALIZADA	- 63 a 133 - 99:99 99:99 99:99 99:99 99:99 99:99 99:99 99:99 99:99 99:99 99:99 99:99
			// TOTHORAS 	- 137 a 142 - 999.99       
	        // INTERVALO	- 144 a 149 - 999.99       
	        // HORASTRAB	- 151 a 156 - 999.99       
	        // HORASABONADAS- 158 a 163 - 999.99       
			// HORASDIFERENCA-165 a 171 - 9999.99
			// PERCDIFERENCA- 173 a 179 - 9999.99
			// PROCESSO     - 181 a 185 - XXXXX
			// PERIODO        186 A 191 - XXXXXX
			// ROTEIRO        192 A 194 - XXX
			// NUM.PAGAMENTO- 195 A 196 - XX
			//         1         2         3         4         5         6         7         8         9         0         1         2         3         4         5         6         7                        
			//123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
			//01/02 Ter   08:00 12:00                                                                  ** TRANSFERIDO **                                0.00   0.00   0.00   0.00    0.00    0.00 |
			//99/99 xxx   08:00 12:00 99:99 99:99 99:99 99:99 99:99 99:99   99:99 99:99 99:99 99:99 99:99 99:99 99:99 99:99 99:99 99:99 99:99 99:99   999.99 999.99 999.99 999.99 9999.99 9999.99 |
	
			oSection1:Cell( "DATA" ):SetValue(SubStr(aFun[nFor],1,9))
			oSection1:Cell( "PREVISTA" ):SetValue(SubStr(aFun[nFor],13,48))
			oSection1:Cell( "REALIZADA" ):SetValue(SubStr(aFun[nFor],63,72))
			oSection1:Cell( "TOTHORAS" ):SetValue(Val(SubStr(aFun[nFor],137,5)))
			oSection1:Cell( "INTERVALO" ):SetValue(Val(SubStr(aFun[nFor],144,5)))		
			oSection1:Cell( "HORASTRAB" ):SetValue(Val(SubStr(aFun[nFor],151,5)))
			oSection1:Cell( "HORASABONADAS" ):SetValue(Val(SubStr(aFun[nFor],158,5)))
			oSection1:Cell( "HORASDIFERENCA" ):SetValue(Val(SubStr(aFun[nFor],165,7)))
			oSection1:Cell( "PERCDIFERENCA" ):SetValue(Val(SubStr(aFun[nFor],173,7)))

			oSection1:Cell( "PROCESSO" ):SetValue(SubStr(aFun[nFor],181,5))
			oSection1:Cell( "PERIODO" ):SetValue(SubStr(aFun[nFor],186,6))
			oSection1:Cell( "ROTEIRO" ):SetValue(SubStr(aFun[nFor],192,3))
			oSection1:Cell( "NUMPAGTO" ):SetValue(SubStr(aFun[nFor],195,2))						
	
			//-- Imprime os conteudos da Section
		   	oSection1:PrintLine()
		Next
		//-- Imprime Total por Funcionario
		oReport:ThinLine()
		oSection1:Cell( "DATA" ):SetValue(Space(1))
		oSection1:Cell( "PREVISTA" ):SetValue(OemToAnsi(STR0029))
		oSection1:Cell( "REALIZADA" ):SetValue(Space(1))
		oSection1:Cell( "TOTHORAS" ):SetValue(aEfeTotHor[1])
		oSection1:Cell( "INTERVALO" ):SetValue(aEfeTotInt[1])		
		oSection1:Cell( "HORASTRAB" ):SetValue(aEfeTotTra[1])
		oSection1:Cell( "HORASABONADAS" ):SetValue(aAboTot[1])
		oSection1:Cell( "HORASDIFERENCA" ):SetValue(aDifHor[1])

		nPerDifHor := ((((Int(ABS(aDifHor[1]))*60)  +  ((ABS(aDifHor[1])-Int(ABS(aDifHor[1]))))*100))*100) / ;
		((Int(aPreTotTra[1])*60)+((aPreTotTra[1]-Int(aPreTotTra[1]))))
		If aDifHor[1] < 0.00
			nPerDifHor *= -1
		Endif

		oSection1:Cell( "PERCDIFERENCA" ):SetValue(nPerDifHor)

		oSection1:Cell( "PROCESSO" ):SetValue(Space(1))
		oSection1:Cell( "PERIODO" ):SetValue(Space(1))
		oSection1:Cell( "ROTEIRO" ):SetValue(Space(1))
		oSection1:Cell( "NUMPAGTO" ):SetValue(Space(1))						
	
		//-- Imprime os conteudos da Section
	   	oSection1:PrintLine()
		oReport:SkipLine()
		oSection1:Finish()
	Endif	

	oReport:ThinLine()

	(cAliasQry)->(DbSkip())
	
EndDo

// Imprime os totais por Centro de Custo ou Turno de Trabalho
If (lSint .Or. aEfeTotHor[2]<> 0 .Or. aEfeTotInt[2]<> 0 .Or. aEfeTotTra[2] <> 0 .Or. aPreTotTra[2] <> 0 .Or. aDifHor[2] <> 0 .Or. aAboTot[2] <> 0) .And. (nOrdem == 2 .Or. nOrdem == 4 .Or. nOrdem == 5)
	F080RCabTot(oReport,oSection2,nOrdem)
Endif

// Imprime os totais por Filial
If lSint .Or. aEfeTotHor[3]<> 0 .Or. aEfeTotInt[3]<> 0 .Or. aEfeTotTra[3] <> 0 .Or. aPreTotTra[3] <> 0 .Or. aDifHor[3] <> 0 .Or. aAboTot[3] <> 0
	F080RCabTot(oReport,oSection2,9)
Endif

// Imprime os totais por Empresa
F080RCabTot(oReport,oSection2,99)		

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Termino do Relatorio                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza impressao inicializada pelo metodo Init             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSection:Finish()

If Select(cAliasQry) > 0
	(cAliasQry)->(dbCloseArea())
Endif

#IFnDEF TOP 
	dbSelectArea( "SRA" )
	Set Filter to
	dbSetOrder(1)
#Endif	

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³F080RCabTot ³Autor³ Totvs IP-RH 		    ³ Data ³ 27.04.11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Impressao de totalizadores para TReport                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ F080RCabTot (oReport,oSection ,nOrdem)                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oReport     - objeto principal                             ³±±
±±³          ³ oSection    - objeto da secao                              ³±±
±±³          ³ nOrdem      - Numero da Ordem de impressao                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/			
Static Function F080RCabTot(oReport,oSectionTotal,nOrdem)
Local cDescTot		:= ""
Local nTipo			:= 0
Local nPerDifHor	:= 0

//-- Configuracao dos tipos
// 2-Total Centro de Custo ou Turno de Trabalho
// 3-Total Filial
// 4-Total Empresa

If (nOrdem <> 2 .And. nOrdem <> 4 .And. nOrdem <> 5 )
	oReport:EndPage()	// Salta uma pagina para a impressão dos totais
Endif

//-- Preenche 1.o Elemento do array Total dos Tipos com "Total: "
If nOrdem == 2 
	cDescTot := STR0020	+ " " + cCcAnte + "-" + cCcDesc // "Total do Centro de Custo"
	nTipo := 2
Elseif nOrdem == 4
	cDescTot := STR0062	+ " " + cTnoAnte + "-" + cTnoDesc// "Total Turno de Trabalho" 
	nTipo := 2
Elseif nOrdem == 5
	cDescTot := STR0020	+ " " + cCcAnte + "-" + cCcDesc // "Total do Centro de Custo"
	nTipo := 2
ElseIf nOrdem == 9
	cDescTot := STR0063 + " " + cFilAnte + "-" + aInfo[1]	// "Total Filial" 
	nTipo := 3
Elseif nOrdem == 99
	cDescTot := STR0064	// "Total Empresa" 
	nTipo := 4
Endif

oSectionTotal:SetHeaderSection(.T.)
oSectionTotal:Init(.F.)
oSectionTotal:PrintHeader() 
oSectionTotal:SetHeaderSection(.F.)

oSectionTotal:Cell( "DESCRICAO" ):SetValue(Padr(cDescTot,70))
oSectionTotal:Cell( "TOTHORAS" ):SetValue(aEfeTotHor[nTipo])
oSectionTotal:Cell( "INTERVALO" ):SetValue(aEfeTotInt[nTipo])		
oSectionTotal:Cell( "HORASTRAB" ):SetValue(aEfeTotTra[nTipo])
oSectionTotal:Cell( "HORASABONADAS" ):SetValue(aAboTot[nTipo])
oSectionTotal:Cell( "HORASDIFERENCA" ):SetValue(aDifHor[nTipo])

nPerDifHor := ((((Int(ABS(aDifHor[nTipo]))*60)  +  ((ABS(aDifHor[nTipo])-Int(ABS(aDifHor[nTipo]))))*100))*100) / ;
((Int(aPreTotTra[nTipo])*60)+((aPreTotTra[nTipo]-Int(aPreTotTra[nTipo]))))
If aDifHor[nTipo] < 0.00
	nPerDifHor *= -1
Endif
oSectionTotal:Cell( "PERCDIFERENCA" ):SetValue(nPerDifHor)

oReport:SkipLine()

oSectionTotal:PrintLine()
oSectionTotal:Finish()

oReport:SkipLine()
oReport:ThinLine()

aEfeTotHor[nTipo] := 0
aEfeTotInt[nTipo] := 0
aEfeTotTra[nTipo] := 0
aPreTotTra[nTipo] := 0
aDifHor[nTipo]    := 0
aAboTot[nTipo]    := 0
// Verifica se o total eh por filial e zera tambem o total por Centro de Custo ou Turno de Trabalho

If nTipo == 3	// Filial
	aEfeTotHor[2] := 0
	aEfeTotInt[2] := 0
	aEfeTotTra[2] := 0
	aPreTotTra[2] := 0
	aDifHor[2]    := 0
	aAboTot[2]    := 0
Endif

Return


//======>>>>>>>>>> DAQUI PARA BAIXO, TRATA-SE DO RELEASE 3
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PONR080  ³ Autor ³ R.H. - J. Ricardo     ³ Data ³ 07.11.96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Relatorio de Apuracoes Percentuais                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PONR080(void)                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Marinaldo   ³25/08/01³------³Imprimir Rodape a Cada Fim de Relatorio, A³±±
±±³            ³--------³------³certo na Quebra por Centro de Custo, Subst³±±
±±³            ³--------³------³ituicao a Toda Referencia por SomaHora() e³±±
±±³            ³--------³------³SubHoras() por __TimeSum() e __TimeSub() e³±±
±±³            ³--------³------³de fDhToNs() e fNsToDh() por __fDhToNs() e³±±
±±³            ³--------³------³__fNsToDh() e Substituicao da Funcao fFeri³±±
±±³            ³--------³------³ado Pela Posicao em aTabCalend   Correspon³±±
±±³            ³--------³------³dente a Feriado e Retirada da Chamada    a³±±
±±³            ³--------³------³fTabPadrao() que Carregava todas as   Tabe³±±
±±³            ³--------³------³las de Horario Padrao que agora passarao a³±±
±±³            ³--------³------³ser Carregadas Dinamicamente pela CiaCalen³±±
±±³            ³--------³------³d() que passou a ter apenas uma Chamada no³±±
±±³            ³--------³------³programa. Passagem de nTamanho para a SetP³±±
±±³            ³--------³------³rint.									  ³±±
±±³Marinaldo   ³07/11/01³Melhor³Utilizacao da funcao GetMarcacoes()   para³±±
±±³            ³--------³------³retornar as Marcacoes e Criar o Calendario³±±
±±³            ³--------³------³de Cada Funcionario.					  ³±±
±±³            ³--------³------³Utilizacao de fAbonos() para Retornar   os³±±
±±³            ³--------³------³Abonos do Funcionario na Data			  ³±±
±±³            ³--------³------³Utilizacao de DiaSemana() para Retornar  a³±±
±±³            ³--------³------³Descricao do Dia da Semana.				  ³±±
±±³            ³--------³------³Retirada a Chamada a dbGotop() para   posi³±±
±±³            ³--------³------³cionamento de Acordo com as Perguntas De e³±±
±±³            ³--------³------³Execucao ate a Pergunta Ate.			  ³±±
±±³Marinaldo   ³19/11/01³Melhor³A funcao GetMarcacoes passara a utilizar a³±±
±±³            ³--------³------³Funcao fDiasFolga() para Verificar as  Fol³±±
±±³            ³--------³------³gas Automaticas.						  ³±±
±±³Mauricio MR ³23/11/01³------³ Nao Considerar Ausencia de Marcacoes para³±±
±±³            ³--------³------³ dias de DSR com horario na Tabela Padrao.³±±
±±³Mauricio MR ³18/12/01³------³ Nao Considerar Ausencia de Marcacoes para³±±
±±³            ³--------³------³ dias Compensados e Nao trabalhados com   ³±± 
±±³            ³--------³------³ horarios na Tabela Padrao.               ³±± 
±±³Mauricio MR ³08/05/02³015559³ Forca a impressao de Marcacoes Impares   ³±±
±±³            ³--------³------³ quando existe apenas 1 (uma). Embora para³±± 
±±³            ³--------³------³ os calculos de totais seja tratada como  ³±±
±±³            ³--------³------³ ausencia de marcacoes.                   ³±±
±±³ Priscila R.³10/06/02³------³Ajuste no relatorio para que seja impresso³±± 
±±³            ³--------³------³corretamente o C.C no tamanho 20.         ³±± 
±±³Mauricio MR ³08/05/03³Acerto³ Ajuste para nao deslocar colunas de apura³±±
±±³            ³--------³------³ cao quando houver Ferias/Transferencia.  ³±±
±±³=======================================================================³±± 
±±³                         *** Versao 9.12 ***                           ³±± 
±±³=======================================================================³±± 
±±³Leandro Dr  ³01/04/08³Melhor³Inclusão de chave processo/periodo/roteiro³±± 
±±³            |        |      |NumPagto. Impressao por data ou periodo   ³±± 
±±³Leandro Dr. ³31/07/08³151152³Ajuste na chamada da funcao SETPRINT,     ³±±
±±³            ³--------³------³oitavo parametro deve ser .F. para que    ³±± 
±±³            ³--------³------³nao apareca a pasta dicionarios.          ³±±
±±³Leandro Dr. ³20/01/09³000982³Ajuste na verificacao de excecoes nos     ³±±
±±³            ³--------³------³feriados.                                 ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Function PONR080R3()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Locais (B sicas)                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aAreaSRA := SRA->( GetArea() )
Local cDesc1   := STR0001  // 'Apuracao das Marcacoes'
Local cDesc2   := STR0002  // 'Ser  impresso de acordo com os parametros solicitados pelo'
Local cDesc3   := STR0003  // 'usuario.'
Local cString  := 'SRA' //-- Alias do arquivo principal (Base)
Local aOrd     := { STR0004 , STR0005 , STR0006 , STR0007 , STR0033 , STR0041 } // 'Matricula'###'Centro de Custo'###'Nome'###'Turno'###'C.Custo+Nome'###'Departamento'
Local wnRel

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Private B sicas                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aReturn    := { STR0008 , 1, STR0009 , 2, 2, 1, '',1 } // 'Zebrado'###'Administra‡„o'
Private NomeProg   := 'PONR080'
Private aLinha     := {}
Private nLastKey   := 0
Private cPerg      := 'PNR080'
Private lIntMenPre := .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Private da fun‡„o IMPR                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private Titulo   := OemToAnsi(STR0001 ) // 'Apuracao das Marcacoes'
Private cCabec   := ''
Private AT_PRG   := 'PONR080'
Private wCabec0  := 2
Private wCabec1  := STR0011  // 'Data      |                Horas Programadas                |                            Horas Realizadas                             |              Apuracao das Horas             |'
Private wCabec2  := STR0012  // '          | Ent.1 Sai.1 Ent.2 Sai.2 Ent.3 Sai.3 Ent.4 Sai.4 | Ent.1 Sai.1 Ent.2 Sai.2 Ent.3 Sai.3 Ent.4 Sai.4 Ent.5 Sai.5 Ent.6 Sai.6 | Tot.Hr Interv H.Trab H.Abon Hr.Dif.  % Dif. |'
Private nTamanho := 'G'
Private Contfl   := 1
Private Li       := 0 
Private nPagAtu  := 1
Private lImpTCC  := .F.
Private lRoda	 := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Private do Programa                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private nOrdem := 0
Private aInfo  := {}
Private cFilAnteri   := Space(FWGETTAMFILIAL)
Private cCcAnt       := Space(9)
Private cTurnoAnt    := Space(3)

Private cProcesso := Nil
Private cPeriodo  := Nil
Private cRoteiro  := Nil
Private cNumPagto := Nil
Private cDeptoDe
Private cDeptoAte
Private dPerIni   := CtoD("//")
Private dPerFim   := CtoD("//")
Private lPeriodo  := .F.
Private nColPro
Private oPeriodo  := RHPERIODO():New()

/*

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica se deve imprimir por periodo ou datas			   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
If fOpcRadio(@nColPro, STR0001,;      //"Apuracao das Marcacoes"
					   STR0034,;      //"Selecione a opcao de impressao:"
			   		   STR0035,;      //"Por Periodo"
			   		   STR0036 ) == 0 //"Por Datas"
	Return
EndIf
	
cPerg := IF(nColPro == 1,"PNR080A","PNR080B")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte(cPerg,.F.)

If ( nColPro == 1 ) 
	cProcesso := mv_par01			//Processo
	cPeriodo  := mv_par02			//Periodo
	cRoteiro  := mv_par03			//Roteiro
	cNumPagto := mv_par04			//Numero de Pagamento
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnRel := 'PONR080' //-- Nome Default do relatorio em Disco
wnRel := SetPrint(cString,wnRel,cPerg,@Titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd,,nTamanho)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Retorna a Ordem do Relatorio								 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nOrdem     := aReturn[8]

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando variaveis mv_par?? para Variaveis do Sistema.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nColPro == 1 ) 
	lPeriodo  := .T.
	cProcesso  := mv_par01			//  Processo
	cPeriodo   := mv_par02			//  Periodo
	cRoteiro   := mv_par03			//  Roteiro
	cNumPagto  := mv_par04			//  Numero de Pagamento
	cDeptoDe   := mv_par05			//  Depto De
	cDeptoAte  := mv_par06			//  Depto Ate
	FilialDe   := mv_par07			//  Filial  De
	FilialAte  := mv_par08			//  Filial  Ate
	CcDe       := mv_par09			//  Centro de Custo De
	CcAte      := mv_par10			//  Centro de Custo Ate 
	TurDe      := mv_par11			//  Turno De
	TurAte     := mv_par12			//  Turno Ate
	MatDe      := mv_par13			//  Matricula De
	MatAte     := mv_par14			//  Matricula Ate
	NomDe      := mv_par15			//  Nome De
	NomAte     := mv_par16			//  Nome Ate
	cSit       := mv_par17			//  Situacao
	cCat       := mv_par18			//  Categoria
	lSint      := (mv_par19==1)		//  Sintetico ou Analitico
	lIntMenPre := (mv_par20==1)		//  Intervalo Previsto ou Realizado
	lFeriado   := (mv_par21==1)		//  Considerar Feriado	
	lCC        := (mv_par22==1)		//  C.C. outra pagina
	lFunc      := (mv_par23==1)		//  Func.outra pagina
Else
	lPeriodo   := .F.
	cProcesso  := mv_par01			//  Processo
	dPerIni    := mv_par02          //  Data Inicial
	dPerFim    := mv_par03          //  Data Final
	cDeptoDe   := mv_par04			//  Depto De
	cDeptoAte  := mv_par05			//  Depto Ate
	FilialDe   := mv_par06			//  Filial  De
	FilialAte  := mv_par07			//  Filial  Ate
	CcDe       := mv_par08			//  Centro de Custo De
	CcAte      := mv_par09			//  Centro de Custo Ate 
	TurDe      := mv_par10			//  Turno De
	TurAte     := mv_par11			//  Turno Ate
	MatDe      := mv_par12			//  Matricula De
	MatAte     := mv_par13			//  Matricula Ate
	NomDe      := mv_par14			//  Nome De
	NomAte     := mv_par15			//  Nome Ate
	cSit       := mv_par16			//  Situacao
	cCat       := mv_par17			//  Categoria
	lSint      := (mv_par18==1)		//  Sintetico ou Analitico
	lIntMenPre := (mv_par19==1)		//  Intervalo Previsto ou Realizado
	lFeriado   := (mv_par20==1)		//  Considerar Feriado	
	lCC        := (mv_par21==1)		//  C.C. outra pagina
	lFunc      := (mv_par22==1)		//  Func.outra pagina
EndIf

If lPeriodo
	oPeriodo:cProcesso := cProcesso
	oPeriodo:cPeriodo  := cPeriodo
	oPeriodo:cRoteiro  := cRoteiro
	oPeriodo:cNumPagto := cNumPagto

	oPeriodo:GetPer()
	
	If !(oPeriodo:lFound )
		MsgInfo( OemToAnsi( oPeriodo:cMsgNotFoundPer ) )    //"Período de Apontamento não encontrado."
		Return
	EndIf
	
	dPerIni := oPeriodo:dDataIni
	dPerFim := oPeriodo:dDataFim
Else
	oPeriodo:dDataIni := dPerIni
	oPeriodo:dDataFim := dPerFim	
EndIf

IF nLastKey == 27
	RestArea( aAreaSRA )
	Return( NIL )
EndIF

SetDefault(aReturn,cString)

IF nLastKey == 27
	RestArea( aAreaSRA )
	Return( NIL )
EndIF

cCabec := STR0001  // 'Apuracao das Marcacoes'
Titulo := OemToAnsi(cCabec)

RptStatus({|lEnd| PO080Imp(@lEnd, wnRel, cString)}, Titulo)

RestArea( aAreaSRA )

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PO080Imp ³ Autor ³ R.H. - J. Ricardo     ³ Data ³ 10.04.96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Divergencia nas Marcacoes                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ PO080Imp(lEnd,wnRel,cString)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ lEnd        - A‡Æo do Codelock                             ³±±
±±³          ³ wnRel       - T¡tulo do relat¢rio                          ³±±
±±³Parametros³ cString     - Mensagem                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function PO080Imp(lEnd,WnRel,cString)

Local aAbonos    := {}
Local aImp       := {}
Local aMarcacoes := {}
Local aTabCalend := {}
Local aTabPadrao := {}
Local aTurnos	 := {}
Local cDescrAfa  := ""
Local cAcessaSRA := &("{ || " + ChkRh("PONR080","SRA","2") + "}")
Local cChave     := ""
Local cDetProc   := ""
Local cProc      := ""
Local cPer		 := ""
Local cRot       := ""
Local cNPag      := ""
Local dDataOk    := Ctod("//")
Local dDataApo   := Ctod("//")
Local dRef       := Ctod("//")
Local dData      := Ctod("//")
Local lAfasta    := .F.
Local lImpFunc   := .F.
Local lNaoLista  := .F.
Local nFor       := 0
Local nFor1		 := 0
Local nFor2		 := 0
Local nPos       := 0
Local nPosCalend := 0	
Local nAbono     := 0
Local nDifHor    := 0
Local nIntReal   := 0
Local nIntProg   := 0
Local nMarcacoes := 0
Local nEfeTotHor := 0
Local nEfeTotInt := 0
Local nEfeTotTra := 0
Local nPerDifHor := 0
Local nPreTotTra := 0
Local nLenMarc   := 0
Local nX		 := 0
Local cTipoDia   := ''
Local lImpar	 := .F.

Private aFun     := {}
Private cInicio	 := ""
Private cFim	 := ""		

dbSelectArea('SRA')
IF nOrdem == 5
	cInicio  := 'RA_FILIAL + RA_CC + RA_NOME'
	cFim     := ( FilialAte + CcAte + NomAte )
	SRA->( dbSetOrder(8) )
	SRA->( dbSeek( FilialDe + CcDe + NomDe , .T. ) )
Else
	SRA->( dbSetOrder(nOrdem) )
	IF nOrdem == 1
		cInicio  := 'RA_FILIAL + RA_MAT'
		cFim     := ( FilialAte + MatAte )
		SRA->( dbSeek( FilialDe + MatDe , .T. ) )
	ElseIF nOrdem == 2
		cInicio  := 'RA_FILIAL + RA_CC + RA_MAT'
		cFim     := ( FilialAte + CcAte + MatAte )
		SRA->( dbSeek( FilialDe + CcDe + MatDe , .T. )  )
	ElseIF nOrdem == 3
		cInicio  := 'RA_FILIAL + RA_NOME + RA_MAT '
		cFim     := ( FilialAte + NomAte + MatAte )
		SRA->( dbSeek( FilialDe + NomDe + MatDe , .T. ) )
	ElseIF nOrdem == 4
		cInicio  := 'RA_FILIAL + RA_TNOTRAB '
		cFim     := ( FilialAte + TurAte )
		SRA->( dbSeek( FilialDe + TurDe , .T. ) )
	ElseIf nOrdem == 6
		dbSetOrder(22)
		dbSeek(FilialDe + cDeptoDe + MatDe,.T.)
		cInicio  := 'SRA->RA_FILIAL + SRA->RA_DEPTO + SRA->RA_MAT'
		cFim     := FilialAte + cDeptoAte + MatAte	
	Endif
EndIF

//-- Zera Acumuladores
aEfeTotHor := { 0,0 }
aEfeTotInt := { 0,0 }
aEfeTotTra := { 0,0 }
aDifHor    := { 0,0 }
aPerDifHor := { 0,0 }
aPreTotTra := { 0,0 }
aAboTot    := { 0,0 }

SetRegua(SRA->(RecCount()))

While SRA->( !Eof() .and. &(cInicio) <= cFim )

	IncRegua()

	If lEnd
		IMPR(cCancela,'C')
		Exit
	EndIF

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Consiste Parametrizacao do Intervalo de Impressao , Catetoria ³
	³Situa‡„o e Controle de Acessos e Filiais Validas 			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF SRA->(	(RA_FILIAL  < FilialDe)	.or. (RA_FILIAL  > FilialAte)	.or.;
	   			(RA_TNOTRAB < TurDe)	.or. (RA_TNOTRAB > TurAte)		.or.;
				(RA_NOME < NomDe)		.or. (RA_NOME > NomAte)			.or.;
				(RA_MAT < MatDe)		.or. (RA_MAT > MatAte)			.or.;
				(RA_CC < CcDe)			.or. (RA_CC > CCAte)			.or.;
				(RA_DEPTO < cDeptoDe)   .or. (RA_DEPTO > cDeptoAte )    .or.;
				!(RA_SITFOLH $ cSit)	.or. !(RA_CATFUNC $ cCat)		.or.;
				(!(RA_FILIAL $ fValidFil()) .or. !Eval(cAcessaSRA) );
			)	
		fCabTotal()
		Loop
	EndIF
	
	If !Empty(cProcesso)
		If SRA->RA_PROCES <> cProcesso
			fCabTotal()
			Loop
		EndIf
	EndIf	

    /*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega Arrays com as Marca‡”es do Periodo (aMarcacoes), com³
	³o Calendario de Marca‡”es do Periodo (aTabCalend) e com    as³	
	³Trocas de Turno do Funcionario (aTurnos)					  ³	
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	( aMarcacoes := {} , aTabCalend := {} , aTurnos := {} )
	
	IF !SRA->( GetMarcacoes(	@aMarcacoes		,;	//Marcacoes dos Funcionarios
			   					@aTabCalend		,;	//Calendario de Marcacoes
								@aTabPadrao		,;	//Tabela Padrao
								@aTurnos		,;	//Turnos de Trabalho
								dPerIni 		,;	//Periodo Inicial
								dPerFim			,;	//Periodo Final
								RA_FILIAL		,;	//Filial
								RA_MAT	  		,;	//Matricula
								RA_TNOTRAB		,;	//Turno
								RA_SEQTURN		,;	//Sequencia de Turno
								SRA->RA_CC		,;	//Centro de Custo
								"SP8"			,;	//Alias para Carga das Marcacoes
							    .F.    			,;	//13 -> Se carrega Recno em aMarcacoes
							    .T.    			,;	//14 -> Se considera Apenas Ordenadas
							    .T.    			,;	//15 -> Se Verifica as Folgas Automaticas
							    .F.    			,;	//16 -> Se Grava Evento de Folga Automatica Periodo Anterior
							    NIL				,;	//17 -> Se Carrega as Marcacoes Automaticas
							    NIL				,;	//18 -> Registros de Marcacoes Automaticas que deverao ser Desprezadas
							    NIL				,;	//19 -> Bloco para avaliar as Marcacoes Automaticas que deverao ser Desprezadas
							    .F.				,;	//20 -> Se Considera o Periodo de Apontamento das Marcacoes
							    .F.				,;	//21 -> Se Efetua o Sincronismo dos Horarios na Criacao do Calendario
							    .T.				,;  //Se considera data de apontamento
							    .T.				;	//Se considera data inicial	
					 		);
			  )	 		
		Set Device to Screen
		Help(' ',1,'PONSCALEND')
		Set Device to Printer
		Exit
	EndIF					 

    /*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica o Numero de Elementos de aMarcacoes  			  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	nLenMarc := Len( aMarcacoes )

	//-- Verifica se deveria existir marcacoes no dia (dRef)
	dRef := Ctod("//")
	aFun := {}
	
    /*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Percorre Todas as Ordens do Calendario					  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	For nFor1 := 0 To ( Val(aTabCalend[Len(aTabCalend),2]) - 1 )
	
		aAbonos  := {}
		dDataApo := dPerIni + nFor1

		If (nPosCalend := aScan( aTabCalend, { |x| x[CALEND_POS_DATA_APO] == dDataApo .And. x[4] == '1E'  } ) ) > 0

			dRef := aTabCalend[nPosCalend,1] //-- Encontra a Data de referencia

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica os Abonos na Data									³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IF ( nPos := Ascan( aAbonos, { |x| x[1] == dRef } ) ) > 0
				aAbonos[nPos,2] := __TimeSum(aAbonos[nPos,2],fAbonos(dRef))
			Else
				aAdd(aAbonos,{dRef,fAbonos(dRef)})
			EndIF

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ N„o deve gerar marca‡”es em feriados que nao sejam excecoes.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !lFeriado
				If aTabCalend[nPosCalend,19]
					Loop
				Endif
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ N„o Considera Data Fora do Periodo                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If dRef < dPerIni .Or. dRef > dPerFim
				Loop
			EndIf	
		Else
			Loop
		EndIf
		
		//-- Reinicializa Variaveis
		cPrevisto  := ''
		aPrevisto  := {}
		nMarcacoes := 0
		nEfeTotHor := 0
		nEfeTotInt := 0
		nEfeTotTra := 0
		nPreTotTra := 0
		nAbono     := 0
		nDifHor    := 0
		nPerDifHor := 0

		//-- Dia Normal
		//-- Encontra a 1a marca‡„o da Data de referencia
		If (nPosCalend := Ascan( aTabCalend, { |x| x[CALEND_POS_DATA_APO] == dDataApo .And. x[4] == '1E'  } ) ) > 0
			//-- Guarda o Tipo do dia Segundo a Tabela Padrao Posicionada logo acima
	    	cTipoDia	:= aTabCalend[nPosCalend,6]  
			
			For nFor2 := nPosCalend To Len(aTabCalend)
				//-- N„o Permite a apura‡„o de mais de 8 marca‡”es !!!
				If aTabCalend[nFor2,CALEND_POS_DATA_APO] # dDataApo .Or. nMarcacoes > 8
					Exit
				Endif
				nMarcacoes ++
				If !lFeriado .Or. (lFeriado .And. !aTabCalend[nPosCalend,19])
					Aadd(aPrevisto,{aTabCalend[nFor2,3],aTabCalend[nFor2,1]})
					If nMarcacoes <= 8
						cPrevisto += StrZero(aTabCalend[nFor2,3],5,2) + " "
					Endif
				Else
					Aadd(aPrevisto,{0,00,aTabCalend[nFor2,1]})
					cPrevisto += If( nMarcacoes <= 8,StrZero(0,5,2) + " ",)
				Endif
			Next nFor2	
		Else
			Loop
		EndIf

		//-- Busca as marcacoes
		cEfetivo   := ''
		aEfetivo   := {}
		nMarcacoes := 0
		lNaoLista  := .F.
		lImpar	   := .F.
		
		IF ( nPos := aScan( aMarcacoes , { |x| x[AMARC_DATAAPO] == dDataApo } ) ) > 0.00
			For nX := nPos To nLenMarc
				IF aMarcacoes[ nX , AMARC_DATAAPO ] != dDataApo
					Exit
				EndIF
				IF aScan( aEfetivo, { |x| x[1] == aMarcacoes[nX,2] .and. x[2] == aMarcacoes[nX,1] } ) == 0
					nMarcacoes++
					Aadd(aEfetivo,{aMarcacoes[nX,2], aMarcacoes[nX,1]})
					IF nMarcacoes <= 12 //-- @@ marcacoes realizadas ficam limitadas a doze
						cEfetivo += StrZero(aMarcacoes[nX,2],5,2) + Space(1)
					EndIF
				EndIF
			Next nX	
			//-- Verifica se Marcacoes Impares
			If nMarcacoes%2 # 0
				cEfetivo += STR0022  // '     ** MARC.IMPAR **'
			   lImpar:=.T.
			Endif
			
			cProc := aMarcacoes[ nPos , AMARC_PROCESSO ]
			cPer  := aMarcacoes[ nPos , AMARC_PERIODO  ]
			cRot  := aMarcacoes[ nPos , AMARC_ROTEIRO  ]
			cNPag := aMarcacoes[ nPos , AMARC_NUM_PAGTO]

		Else
			If !lFeriado .or. (lFeriado .and. !aTabCalend[nPosCalend,19])
				lNaoLista := .T.
			Endif
			For nFor := 1 To Len(aPrevisto)
				If aPrevisto[nFor,1] # 0.00
					lNaoLista := .F.
				Endif
			Next nFor
			
		Endif

		If !lFeriado
			//-- N„o lista quando houver Feriados sem Excecoes.
			If aTabCalend[nFor1+1,19] .And. aTabCalend[nFor1+1,10] # "E"
				lNaoLista := .T.
			EndIf
		Endif

		If lNaoLista
			Loop
		Endif

		cTipAfas := Space(1)
		lAfasta  := .F.
		cMotivo  := ''
		dDtaFas  := CtoD('  /  /  ')
		dDtRet   := CtoD('  /  /  ')

		If Len(aEfetivo) == 0  
			//-- Para Dia na Tabela como sendo DSR ou Compensado ou Nao trabalhado(mesmo com horarios)
			//-- Desconsidera se Nao Ocorreram Marcacoes.
			If cTipoDia $ 'D.C.N'
			   Loop
			Endif  
			
			//-- Afastamentos
			If fAfasta( SRA->RA_FILIAL,SRA->RA_MAT,dRef,@dDtafas,@dDtRet,@cTipAfas) .Or. ;
				SRA->RA_SITFOLH $ 'DúT' .And. dRef > SRA->RA_DEMISSA
				lAfasta := .T.
				cDescrAfa := fDescAfast(If(!Empty(cTipAfas),cTipAfas,fDemissao(SRA->RA_SITFOLH, SRA->RA_RESCRAI) ))
				cMotivo := PADC('** '  + AllTrim(cDescrAfa) + ' **',71) +' | '
			EndIf
			//-- Per¡odo anterior a Admiss„o
			If dRef < fDtaAdmis()
				lAfasta := .T.
				cMotivo := STR0024      // '                     ** DATA ANTERIOR A ADMISSAO **                      | '
			EndIf
            //-- Funcionario sem Marcacao
			IF Empty(cMotivo)
				cMotivo := STR0025      // '                         ** SEM MARCACOES **                            | '
			EndIF
		Else
		    //-- Elimina o Ultimo Elemento das marcacoes impares
			If lImpar
				aDel(aEfetivo,Len(aEfetivo))
				aSize(aEfetivo,Len(aEfetivo)-1)
			Endif
		Endif
        
		cEfetivo := StrTran(cEfetivo,'.',':')
		cEfetivo := Left(cEfetivo+Space(71),71)

		cPrevisto := StrTran(cPrevisto,'.',':')
		cPrevisto := Left(cPrevisto+Space(47),47)

		If lSint
			cDet := Space(84) + '| '
		Else
			cDet := StrZero(Day(dRef),2) + '/' + StrZero(Month(dRef),2) + Space(1) + DiaSemana(dRef,3)+ ' | '
			cDet += cPrevisto + ' | '
			If Len(cMotivo) > 0
				cDet += cMotivo
			Else
				cDet += cEfetivo + ' | '
			Endif
		Endif

		//-- Apura Total de Horas
		nPreTotHor := If(Len(aPrevisto)>0,__fNStoDH(__fDHtoNS(aPrevisto[Len(aPrevisto),2],aPrevisto[Len(aPrevisto),1])-__fDHtoNS(aPrevisto[1,2],aPrevisto[1,1]),'H'), 0)
		nEfeTotHor := If(Len(aEfetivo )>0,__fNStoDH(__fDHtoNS(aEfetivo [Len(aEfetivo ),2],aEfetivo [Len(aEfetivo ),1])-__fDHtoNS(aEfetivo [1,2],aEfetivo [1,1]),'H'), 0)

		//-- Apura Total dos Intervalos Efetivos
		nPreTotInt := 0
		
		For nFor := 2 To Len(aPrevisto) Step 2
			If Len(aPrevisto) >= nFor + 1
				nPreTotInt := __TimeSum(nPreTotInt,__fNStoDH(__fDHtoNS(aPrevisto[nFor+1,2],aPrevisto[nFor+1,1])-__fDHtoNS(aPrevisto[nFor,2],aPrevisto[nFor,1]),'H') )
			Endif
		Next nFor

		//-- N„o Considera Horas a Menos em Afastamentos
		If !lAfasta
			For nFor := 2 To Len(aEfetivo) Step 2
				If Len(aEfetivo) >= nFor + 1
					nEfeTotInt := __TimeSum(nEfeTotInt, __fNStoDH(__fDHtoNS(aEfetivo[nFor+1,2],aEfetivo[nFor+1,1])-__fDHtoNS(aEfetivo[nFor,2],aEfetivo[nFor,1]),'H') )
				Endif
			Next nFor

			//-- Busca os abonos do dia 
			nAbono := 0
			If ( nPos := Ascan(aAbonos,{|x| x[1] == dRef }) ) > 0
				nAbono := aAbonos[nPos,2]
			Endif

			If nPreTotInt > nEfeTotInt .And. nEfeTotInt > 0.00
				If !lIntMenPre //-- Considerar intervalos menores que o programado
					nEfeTotInt := nPreTotInt
				EndIf					
			Endif

			//-- Total de Horas Trabalhadas
			nEfeTotTra := __TimeSub(nEfeTotHor,nEfeTotInt)
			nPreTotTra := __TimeSub(nPreTotHor,nPreTotInt)

			nDifHor := __TimeSum(nEfeTotTra,nAbono)
			nDifHor := __TimeSub(nDifHor,nPreTotTra)

			If nPreTotTra > 0
				nPerDifHor := ((((Int(ABS(nDifHor))*60)  +  ((ABS(nDifHor)-Int(ABS(nDifHor))))*100))*100) / ;
					((Int(nPreTotTra)*60)+((nPreTotTra-Int(nPreTotTra))))
			Else
				If nEfeTotTra > 0
					nPerDifHor := 100
				Endif
			Endif

			If nDifHor < 0.00
				nPerDifHor *= -1
			Endif
		EndIf

		If !lSint
			cDet += Transform(nEfeTotHor, '@E 999.99' ) + " "
			cDet += Transform(nEfeTotInt, '@E 999.99' ) + " "
			cDet += Transform(nEfeTotTra, '@E 999.99' ) + " "
			cDet += Transform(nAbono    , '@E 999.99' ) + " "
			cDet += Transform(nDifHor   , '@R 9999.99') + " "
			cDet += Transform(nPerDifHor, '@R 9999.99') + ' |'
		Endif

		For nFor := 1 To 2
			aEfeTotHor[nFor] := __TimeSum(nEfeTotHor,aEfeTotHor[nFor])
			aEfeTotInt[nFor] := __TimeSum(nEfeTotInt,aEfeTotInt[nFor])
			aEfeTotTra[nFor] := __TimeSum(nEfeTotTra,aEfeTotTra[nFor])
			aPreTotTra[nFor] := __TimeSum(nPreTotTra,aPreTotTra[nFor])
			aDifHor[nFor]    := __TimeSum(nDifHor   ,aDifHor[nFor]   )
			aAboTot[nFor]    := __TimeSum(nAbono    ,aAboTot[nFor]   )
		Next

		If !lSint
			If cChave <> cProc + cPer + cRot + cNPag
				cDetProc := STR0037 + cProc + ' - ' + STR0038 + cPer + ' - ' + STR0039 + cRot + ' - ' + STR0040 + cNPag
				aAdd(aFun,cDetProc)
				cChave := cProc + cPer + cRot + cNPag
			EndIf
			aAdd(aFun,cDet)
		Endif

		lImpTCC := .T.
		
	Next nFor1

	fImpFun(@aFun)
	fCabTotal()
Enddo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Imprime o Rodape do Relatorio                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF lRoda
	IF Li < 58
		Li := 58
	EndIF
	Impr("","F")	
EndIF

Set Device To Screen

If aReturn[5] == 1
	Set Printer To
	dbCommit()
	OurSpool(wnRel)
Endif

MS_FLUSH()

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fCabTotal   ³ Autor ³ Equipe Advanced RH  ³ Data ³ 31/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ 					                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fCabTotal()

dbSelectArea( "SRA" )
dbSkip()

nPagAtu := ContFl

If (nOrdem == 2 .Or. nOrdem == 5) .And. ;
	(Eof() .Or. cCcAnt <> SRA->RA_CC .Or. ;
	 cFilAnteri <> SRA->RA_FILIAL )		  // Quebra p/ C.Custo
	fImpCc()
Endif

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fImpFun     ³ Autor ³ Equipe Advanced RH  ³ Data ³ 31/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Imprime um Funcionario e Executa Quebras                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fImpFun(aFun) 


If	Len(aFun) == 0 .And. !lSint
	Return( NIL )
Endif

If cCcAnt # SRA->RA_CC .And. SRA->( !Eof() ) .And. (nOrdem == 2 .Or. nOrdem == 5)	// Quebra p/ C.Custo
	fImprime({},2)
Elseif cTurnoAnt # SRA->RA_TNOTRAB .And. SRA->( !Eof() ) .And. nOrdem == 4			// Quebra p/ Turno
	fImprime({},4)
ElseIf cFilAnteri # SRA->RA_FILIAL .And. SRA->( !Eof() )							// Quebra p/ Filial
	fImprime({},3)
Endif

cFilAnteri := SRA->RA_FILIAL
cCcAnt     := SRA->RA_CC
cTurnoAnt  := SRA->RA_TNOTRAB

fImprime(aFun,1)
aFun := {}

//-- Zera Totais do Funcionario ( 1¦ posi‡„o no Array )
aEfeTotHor[1] := 0
aEfeTotInt[1] := 0
aEfeTotTra[1] := 0
aPreTotTra[1] := 0
aDifHor[1]    := 0
aAboTot[1]    := 0
		
Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fImprime    ³ Autor ³ Equipe Advanced RH  ³ Data ³ 31/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³											                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fImprime(aFun,nTipo)

// nTipo: 1- Funcionario
//        2- Centro de Custo
//        3- Filial
//        4- Turno

Local Det    := ""
Local nPre   := 0

If nTipo == 2	// Salta pagina a cada Centro de Custo
	If lCC .And. !Empty(cCcAnt)
		fPNR080Linha(2,,"P")
	Else
		fPNR080Linha(2)
	Endif
ElseIf nTipo == 3	// Salta pagina a cada Filial
	If nOrdem == 2 .Or. nOrdem == 4 .Or. nOrdem == 5
		fPNR080Linha(nOrdem,,"P")
	Else
		fPNR080Linha(3,,"P")
	Endif
ElseIf nTipo == 4	// Salta pagina a cada Filial
	fPNR080Linha(4)	// Imprime cabecalho do Turno
Endif
	
If nTipo == 1

	Det := STR0027+SRA->RA_MAT+STR0028+Left(SRA->RA_NOME,30)+Space(01)+STR0042+SRA->RA_DEPTO  // 'Matricula: '###' Nome: '###' Depto:

	If lSint
		Det += Space(62) + '|'
		Det += Transform(aEfeTotHor[1],'@R 9999.99')
		Det += Transform(aEfeTotInt[1],'@R 9999.99')
		Det += Transform(aEfeTotTra[1],'@R 9999.99')
		Det += Transform(aAboTot[1]   ,'@R 9999.99') + Space(1)
		Det += Transform(aDifHor[1]   ,'@R 9999.99') + Space(1)
		nPerDifHor := ((((Int(ABS(aDifHor[1]))*60)  +  ((ABS(aDifHor[1])-Int(ABS(aDifHor[1]))))*100))*100) / ;
		((Int(aPreTotTra[1])*60)+((aPreTotTra[1]-Int(aPreTotTra[1]))))
		If aDifHor[1] < 0.00
			nPerDifHor *= -1
		Endif
		Det += Transform(nPerDifHor,'@R 9999.99') + ' |'
	Endif

	If Li >= 58
		If nOrdem == 2	.Or. nOrdem == 4 .Or. nOrdem == 5 // - Centro de Custo ou Turno de Trab
			fPNR080Linha(nOrdem,,"P")
		Else
			fPNR080Linha(3,,"P")
		Endif
	Endif
			
	fPNR080Linha(1,Det)
	
	If !lSint
		fPNR080Linha(1," ")
		For nPre := 1 to Len(aFun)
			If Li >= 58
				If nOrdem == 2	.Or. nOrdem == 4 .Or. nOrdem == 5 // - Centro de Custo ou Turno de Trab
					fPNR080Linha(nOrdem,,"P")
				Else
					fPNR080Linha(3,,"P")
				Endif
				fPNR080Linha(1,STR0027+SRA->RA_MAT+STR0028+Left(SRA->RA_NOME,30)) // 'Matricula: '###' Nome: '
				fPNR080Linha(1," ")
				fPNR080Linha(1,aFun[nPre])
				Loop
			Endif
			fPNR080Linha(1,aFun[nPre])
		Next nPre
	   
		IF Li < 58
			fPNR080Linha(1,Replicate("-",220))
		EndIF	
		
		Det := STR0029  // 'Total do Periodo'
		Det += Space(119)
		Det += Transform(aEfeTotHor[1],'@R 9999.99')
		Det += Transform(aEfeTotInt[1],'@R 9999.99')
		Det += Transform(aEfeTotTra[1],'@R 9999.99')
		Det += Transform(aAboTot[1]   ,'@R 9999.99') + Space(1)
		Det += Transform(aDifHor[1]   ,'@R 9999.99') + Space(1)
		nPerDifHor := ((((Int(ABS(aDifHor[1]))*60)  +  ((ABS(aDifHor[1])-Int(ABS(aDifHor[1]))))*100))*100) / ;
		((Int(aPreTotTra[1])*60)+((aPreTotTra[1]-Int(aPreTotTra[1]))))
		If aDifHor[1] < 0.00
			nPerDifHor *= -1
		Endif
		Det += Transform(nPerDifHor,'@R 9999.99') + ' |'
		fPNR080Linha(1,Det)
	EndIf	
	
	If Li < 58
		fPNR080Linha(1,Replicate("-",220))
	EndIF	
	
	// Salta pagina a cada Funcionario
	If lFunc .And. !lSint
		If nOrdem == 2 .Or. nOrdem == 4 .Or. nOrdem == 5
			fPNR080Linha(nOrdem,,"P")
		Else
			fPNR080Linha(,,"P")
		Endif	
	Endif
	
Endif

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fPNR080Linha³ Autor ³ Equipe Advanced RH  ³ Data ³ 31/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Imprime cabecalhos						                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fPNR080Linha(nTipo,Det,cPara)

nTipo := If(nTipo==NIL,0,nTipo)
cPara := If(cPara==Nil,"C",cPara)

If nTipo == 1 .And. Det <> NIL
	Impr(Det,"C")
	lRoda := .T.
ElseIf nTipo > 0
	If nTipo == 2 .Or. nPagAtu <> ContFl
		//--     Filial: xx - 12345678901234567890    C.Custo: 123456789 - 123456789012345678901234567890               Apuracao: dd/mm/aa a dd/mm/aa
		Det := STR0030+SRA->RA_FILIAL+STR0031+SUBS(SRA->RA_CC+SPACE(20),1,20)+'-'+Left(DescCc(SRA->RA_CC,SRA->RA_FILIAL,30)+Space(25),25) + ; // 'Filial: '###'  C.C.:'
				 STR0032+DTOC(dPerIni)+' - '+DTOC(dPerFim) // '  Periodo: '
	Elseif nTipo == 3 .Or. nPagAtu <> ContFl
		Det := STR0030+SRA->RA_FILIAL+ ;
			    STR0032+DTOC(dPerIni)+' - '+DTOC(dPerFim)  // 'Filial: '###'  Periodo: '
	Elseif nTipo == 4 .Or. nPagAtu <> ContFl
		Det := STR0030+SRA->RA_FILIAL+"  "+STR0007+": "+Trim(SRA->RA_TNOTRAB)+'-'+;
				 FDescTno(SRA->RA_FILIAL,SRA->RA_TNOTRAB)+Space(5) + ;
				 STR0032+DTOC(dPerIni)+' - '+DTOC(dPerFim)  // 'Filial: '##'Turno'##'  Periodo: '
	Endif
	Impr(Det,cPara)
	Impr(Replicate("-",220),"C")
 	lRoda := .T.
Endif
nPagAtu := ContFl

Return( NIL )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fImpCc      ³ Autor ³ Equipe Advanced RH  ³ Data ³ 31/03/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Imprime um Total do C.Custo				                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR080                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function fImpCc
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Processa quebra de Centro de Custo                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF !Empty(cCcAnt) .And. lImpTCC
	lImpTCC := .F.
	fPNR080Linha(1,Replicate("-",220))
	Det := STR0020  // 'Total do Centro de Custo'
	Det += " "+Padr(DescCc(cCcAnt,cFilAnteri,30),139)
	Det += Transform(aDifHor[2],'@R 9999.99') + Space(1)

	nPerDifHor := ((((Int(ABS(aDifHor[2]))*60)  + ;
					  ((ABS(aDifHor[2])-Int(ABS(aDifHor[2]))))*100))*100) / ;
					  ((Int(aPreTotTra[2])*60)+((aPreTotTra[2]-Int(aPreTotTra[2]))))
	
	If aDifHor[2] < 0.00
		nPerDifHor *= -1
	Endif

	Det += Transform(nPerDifHor,'@R 9999.99') + ' |'
	
	fPNR080Linha(1,Det)
	fPNR080Linha(1,Replicate("-",220))
		
	//-- Zera Totais do Centro de Custo ( 2¦ posi‡„o no Array )
	aEfeTotHor[2] := 0
	aEfeTotInt[2] := 0
	aEfeTotTra[2] := 0
	aPreTotTra[2] := 0
	aDifHor[2]    := 0
	aAboTot[2]    := 0
EndIF

Return( NIL )
/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr080Proc	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR01 para variavel private		³
|		   |cProcesso    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr080Proc(cTip)

Local lRet := .T.

cProcesso := &( ReadVar() )

If ( cTip == 'A' )
	lRet := PonX1Valid(cProcesso)
Else
	If !Empty(cProcesso)
		lRet := PonX1Valid(cProcesso)
	EndIf
EndIf

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr080Per	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR02 para variavel private		³
|		   |cPeriodo    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr080Per()

Local cChave := cProcesso
Local lRet := .T.

If !Empty(cRoteiro)
	cChave += cRoteiro
Else
	cChave += "PON"
EndIf

cPeriodo := &( ReadVar() )

cChave += cPeriodo

lRet := PonX1Valid(cChave)

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr080Rot	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR03 para variavel private		³
|		   |cRoteiro    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr080Rot()

Local lRet := .T.

cRoteiro := &( ReadVar() )

lRet := PonX1Valid(cProcesso+cRoteiro)

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr080NPag	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR04 para variavel private		³
|		   |cNumPag	    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr080NPag()

Local lRet := .T.

cNumPagto := &( ReadVar() )

lRet := PonX1Valid(cProcesso+cRoteiro+cPeriodo+cNumPagto)

Return( lRet )