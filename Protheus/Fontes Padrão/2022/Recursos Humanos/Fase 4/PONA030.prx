#INCLUDE "PONA030.CH" 
#INCLUDE "PROTHEUS.CH" 


/*/   
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o	   Ё PONA030  Ё Autor Ё Equipe Advanced RH    Ё Data Ё07/02/1996Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o Ё Cadastro de Rel╒gio de Ponto                               Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё PONA030()												    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso 	   Ё Generico 												    Ё
цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё			ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL.			Ё
цддддддддддддбддддддддбддддддбдддддддддддддддддддддддддддддддддддддддддд╢
ЁProgramador Ё Data	  Ё BOPS Ё  Motivo da Alteracao 					Ё
цддддддддддддеддддддддеддддддедддддддддддддддддддддддддддддддддддддддддд╢
|Luiz GustavoЁ21/11/06ЁMelhorЁInclusao da funcao MenuDef()     		    Ё
|            |        |      |para versao 9.12                          |
ЁLuiz GustavoЁ05/02/07Ё      ЁRetiradas funcoes de ajuste de dicionario.Ё
ЁLeandro Dr  Ё11/08/08ЁMelhorЁInclusao da funcao Pn030TdOk para validar Ё
Ё            Ё        Ё      Ёo campo P0_ELIMINA.                       Ё
юддддддддддддаддддддддаддддддадддддддддддддддддддддддддддддддддддддддддды/*/
Function PONA030()
 
Local aArea			:= GetArea()
Local aIndexSP0		:= {}
Local aAdvSize		:= MsAdvSize()
Local aSvKeys		:= GetKeys()
Local cFiltraSP0	:= ""
Local nAlias		:= 0
Local nX			:= 0

Begin Sequence
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁSo Executa se o Modo de Acesso dos Arquivos do Ponto EstiveremЁ
	ЁOK															   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !ValidArqPon()
		Break
	EndIF
    		
	Private aSp0Buttons	:= {}
	Private aAliasRelo 	:= {}
	Private aRotina		:= MenuDef()
	
	Private bFiltraBrw	:= { || NIL }
	Private cFiltraRh	:= ChkRh( FunName() , "SP0" , "1" )
	Private cTxtAlias 	:= ""
	Private cCadastro	:= OemToAnsi(STR0009 ) // "Cadastro de Rel╒gios"

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁCria a Variavel de Memoria TXT                                          Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	SetMemVar( "TXT" , "" , .T. )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Inicializa o filtro utilizando a funcao FilBrowse                      Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bFiltraBrw 	:= { || FilBrowse( "SP0" , @aIndexSP0 , @cFiltraRH ) }
	SP0->( Eval( bFiltraBrw ) )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta a Configuracao do Botao para Consulta do Arquivo do Relogio      Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	//"Carregando Marca┤■es. "###"Aguarde..."
	bSp0Buttons := { ||	MsAguarde( { || Pona030Btn() } , OemToAnsi( STR0014 + STR0015 ) , Lower( IF( IsMemVar( "P0_ARQUIVO" ) , GetMemVar( "P0_ARQUIVO" ) , SP0->P0_ARQUIVO ) ) ),;
						SetKey( VK_F4 , bSp0Buttons );
			       }
	aAdd(;
				aSp0Buttons	,;
								{;
									"pesquisa" 							,;
		   							bSp0Buttons							,;
		       	   					OemToAnsi( STR0005  + "...<F4>"  )	,;	//"Visualizar"
		       	   					OemToAnsi( STR0005 )				 ;	//"Visualizar"
		           				};
		     )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Endereca a funcao de BROWSE                                  Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	dbSelectArea("SP0")
	SP0->( dbGoTop() )
	SetKey( VK_F4 , bSp0Buttons )
	SP0->( mBrowse( aAdvSize[7] , 0 , aAdvSize[6] , aAdvSize[5] , "SP0" ) )
	RestKeys( aSvKeys , .T. )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Deleta o filtro utilizando a funcao FilBrowse                     	 Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	EndFilBrw("SP0",aIndexSp0)

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Fecha os arquivos  abertos durante a execucao do programa				 Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( ( nAlias := Len(aAliasRelo) ) > 0 )
		For nX := 1 To nAlias
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Fecha os Arquivos Abertos em AbreArqRel()					 			 Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF ( aAliasRelo[nX,04] == "D" )
				TxtAliasClose( aAliasRelo[nX,01] )
			ElseIF (;
						( aAliasRelo[nX,04] == "T" );
						.and.;
						( aAliasRelo[nX,05] > 0 );
					)	
				fClose( aAliasRelo[nX,05] )
			EndIF
			/*/
			здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			Ё Se copiou para o server, Exclui                           			 Ё
			юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
			IF ( aAliasRelo[nX,02] )
				fErase( aAliasRelo[nX,03] )
			EndIF
		Next nX
	EndIF

End Sequence

RestArea( aArea )

Return( NIL )

/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁPona030Vis	 Ё Autor ЁMarinaldo de Jesus   Ё Data Ё16/09/2004Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁChamada a AxVisual com Abertura do Arquivo do Relogio        Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁRetorno da AxVisual()                                	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁPONA030														 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Pona030Vis(;
						cAlias		,;
						nRecno		,;
						nOpc		,;
						aAcho		,;
						nColMens	,;
						cMensagem	,;
						cFunc		,;
						aButtons	,;
						lMaximized	 ;
					)

DEFAULT lMaximized := .T.

IF ( Type( "aSp0Buttons" ) == "A" )
	DEFAULT aButtons := aClone( aSp0Buttons )
EndIF

Return(;
			AxVisual(;
						cAlias		,;
						nRecno		,;
						nOpc		,;
						aAcho		,;
						nColMens	,;
						cMensagem	,;
						cFunc		,;
						aButtons	,;
						lMaximized	 ;
					);
		 )

/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁPona030Inc	 Ё Autor ЁMarinaldo de Jesus   Ё Data Ё16/09/2004Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁChamada a AxInclui											 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁRetorno da AxIncual()                                	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁPONA030														 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Pona030Inc(;
						cAlias		,;
						nRecno		,;
						nOpc		,;
						aAcho		,;
						cFunc		,;
						aCpos		,;
						cTudoOk		,;
						lF3			,;
						cTransact	,;
						aButtons	,;
						aParam		,;
						aAuto		,;
						lVirtual	,;
						lMaximized	 ;
					)

DEFAULT lMaximized := .T.

If Empty(cTudoOk)
	cTudoOk := "Pn030TdOk()"
Else
	cTudoOk := "Pn030TdOk(" + cTudoOk + ")"
EndIf

IF ( Type( "aSp0Buttons" ) == "A" )
	DEFAULT aButtons := aClone( aSp0Buttons )
EndIF

Return( AxInclui(;
						cAlias		,;
						nRecno		,;
						nOpc		,;
						aAcho		,;
						cFunc		,;
						aCpos		,;
						cTudoOk		,;
						lF3			,;
						cTransact	,;
						aButtons	,;
						aParam		,;
						aAuto		,;
						lVirtual	,;
						lMaximized	 ;
					);
	  )

/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁPona030Alt	 Ё Autor ЁMarinaldo de Jesus   Ё Data Ё16/09/2004Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁChamada a AxAtera com Abertura do Arquivo do Relogio         Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁRetorno da AxAltera()                                	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁPONA030														 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Pona030Alt(;
						cAlias		,;
						nRecno		,;
						nOpc		,;
						aAcho		,;
						aCpos		,;
						nColMens	,;
						cMensagem	,;
						cTudoOk		,;
						cTransact	,;
						cFunc		,;
						aButtons	,;
						aParam		,;
						aAuto		,;
						lVirtual	,;
						lMaximized	 ;
					)

Local aArea			:= GetArea()

DEFAULT lMaximized := .T.

If Empty(cTudoOk)
	cTudoOk := "Pn030TdOk()"
Else
	cTudoOk := "Pn030TdOk(" + cTudoOk + ")"
EndIf

IF ( Type( "aSp0Buttons" ) == "A" )
	DEFAULT aButtons := aClone( aSp0Buttons )
EndIF

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁFecha o cTxtAlias Anteriormente Aberto                 	   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
TxtAliasClose( @cTxtAlias )

SP0->( AbreArqRel( P0_TIPOARQ , P0_ARQUIVO , NIL , .T. , .T. ) )

IF !Empty( aArea )
	RestArea( aArea )
EndIF

Return(;
			AxAltera(;
						cAlias		,;
						nRecno		,;
						nOpc		,;
						aAcho		,;
						aCpos		,;
						nColMens	,;
						cMensagem	,;
						cTudoOk		,;
						cTransact	,;
						cFunc		,;
						aButtons	,;
						aParam		,;
						aAuto		,;
						lVirtual	,;
						lMaximized	 ;
					);
	  )

/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁPona030Del	 Ё Autor ЁMarinaldo de Jesus   Ё Data Ё16/09/2004Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁChamada a AxDeleta											 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁRetorno da AxIncual()                                	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁPONA030														 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Pona030Del(;
						cAlias		,;
						nRecno		,;
						nOpc		,;
						cTransact	,;
						aCpos		,;
						aButtons	,;
						aParam		,;
						aAuto		,;
						lMaximized	 ;
					)

DEFAULT lMaximized := .T.

IF ( Type( "aSp0Buttons" ) == "A" )
	DEFAULT aButtons := aClone( aSp0Buttons )
EndIF

Return(;
			AxDeleta(;
						cAlias		,;
						nRecno		,;
						nOpc		,;
						cTransact	,;
						aCpos		,;
						aButtons	,;
						aParam		,;
						aAuto		,;
						lMaximized	 ;
					);
 	  )

/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁPona030Btn   Ё Autor ЁMarinaldo de Jesus   Ё Data Ё16/09/2004Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁDisponibiliza Consulta ao Cadastro Temporario de Marcacoes   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ															 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL                                                  	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁGENERICO                                                     Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Pona030Btn()

Local aSvKeys			:= GetKeys()
Local aAdvSize			:= {}
Local aInfoAdvSize		:= {}
Local aObjCoords		:= {}
Local aObjSize			:= {}
Local aButtons			:= {}
Local aFields			:= {}
Local aBagName			:= {}
Local aLogFile			:= {}

Local bSet15 			:= { || NIL }
Local bSet24			:= { || NIL }
Local bPesqui			:= { || NIL }
Local bInitDlg			:= { || NIL }

Local cTipoArq			:= IF( IsMemVar( "P0_TIPOARQ" ) , GetMemVar( "P0_TIPOARQ" ) , SP0->P0_TIPOARQ )
Local cArquivo			:= IF( IsMemVar( "P0_ARQUIVO" ) , GetMemVar( "P0_ARQUIVO" ) , SP0->P0_ARQUIVO )
Local cArqSrv			:= ""
Local cDataFile			:= ""
Local cHelp				:= ""

Local lSetCentury		:= __SetCentury("on")
Local lCpyT2Srv			:= .F.
Local lForceCopy		:= .F.

Local nLoop				:= 0
Local nLoops			:= 0
Local nItens			:= 0
Local nField			:= 0
Local nHandle			:= 0

Local oDlg				:= NIL
Local oMsSelect			:= NIL
Local oRecMarc			:= NIL
Local cPonArq			:= If( !Empty( SuperGetMv("MV_POARQ",.F.,"N") ), SuperGetMv("MV_POARQ",.F.,"N"), "2" )
Private oTmpTabFO1

Begin Sequence

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁFecha o cTxtAlias Anteriormente Aberto                 	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	TxtAliasClose( @cTxtAlias )

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁAbre  o Arquivo do Relogio                             	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !AbreArqRel( cTipoArq , cArquivo , @nHandle , .T. , .T. , @cArqSrv , @lCpyT2Srv )
		Break
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁMonta o Temporario de Marcacoes                        	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF !SP0BldData( cTipoArq , IF( !Empty( cArqSrv ) , cArqSrv , cArquivo ) , @cDataFile , @aBagName , @cTxtAlias , @aLogFile, , , , , .T. )
		IF !Empty( aLogFile )
			nLoops := Len( aLogFile )
			For nLoop := 1 To nLoops
				cHelp += aLogFile[ nLoop ]
				cHelp += CRLF
			Next nLoop
			Help( "" , 1 , "PONA030INV" , NIL , OemToAnsi( cHelp ) , 1 , 0 )
		EndIF
		Break
	EndIF

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	ЁDefine o Array com os Campos                           	   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdd( aFields ,	{ "CRACHA"	, NIL ,	PosAlias( "SX3" , "RA_CRACHA"	, "" , "X3Titulo()" , 2 , .F. ) , "@!" } )
	aAdd( aFields ,	{ "DDATE"	, NIL ,	PosAlias( "SX3" , "P8_DATA" 	, "" , "X3Titulo()" , 2 , .F. ) , "@D" } )
	aAdd( aFields ,	{ "HORA"	, NIL ,	PosAlias( "SX3" , "P8_HORA" 	, "" , "X3Titulo()" , 2 , .F. ) , "@R 99.99" } )
	aAdd( aFields ,	{ "CODREL"	, NIL ,	PosAlias( "SX3" , "P8_RELOGIO"  , "" , "X3Titulo()" , 2 , .F. ) , "@!" } )
	aAdd( aFields ,	{ "FUNCAO"	, NIL ,	PosAlias( "SX3" , "P8_FUNCAO"	, "" , "X3Titulo()" , 2 , .F. ) , "@!" } )
	aAdd( aFields ,	{ "GIRO"	, NIL ,	PosAlias( "SX3" , "P8_GIRO"		, "" , "X3Titulo()" , 2 , .F. ) , "@!" } )
	aAdd( aFields ,	{ "CUSTO"	, NIL ,	PosAlias( "SX3" , "P8_CC"		, "" , "X3Titulo()" , 2 , .F. ) , "@!" } )
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define os Blocos para as Teclas <CTRL-O>					   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bSet15 	:= { || RestKeys( aSvKeys , .T. ) , oDlg:End() }

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define os Blocos para as Teclas <CTRL-X>     	   			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bSet24	:= { || RestKeys( aSvKeys , .T. ) , oDlg:End() }
	
	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define o Bloco para o Init do Dialog         	   			   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	bInitDlg := { ||	Eval( oMsSelect:oBrowse:bGotop )	,;
						oMsSelect:oBrowse:Refresh()			,;
						EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons );
			 	}

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta as Dimensoes para o Dialogo Principal				   Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	aAdvSize		:= MsAdvSize(.T.,.T.)
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 }
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
	aMsSltCoords	:= { aObjSize[1,1] , aObjSize[1,2] , aObjSize[1,3] , aObjSize[1,4] }

	/*/
	здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Monta Dialogo para Montagem do Filtro                        Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/ 
	
	DEFINE MSDIALOG oDlg TITLE cCadastro From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF GetWndDefault() PIXEL

		oMsSelect := MsSelect():New(;
										cTxtAlias		,;	//Alias	do Arquivo de Filtro
										NIL				,;	//Campo para controle do mark
										NIL         	,;	//Condicao para o Mark
										aFields			,;	//Array com os Campos para o Browse
										NIL				,;	//?
										NIL     		,;	//Conteudo a Ser Gravado no campo de controle do Mark
										aMsSltCoords	,;	//Coordenadas do Objeto
										NIL				,;  //?
										NIL				,;	//?	
										oDlg			 ;	//Objeto Dialog
									)

		@ aMsSltCoords[3]+3,aMsSltCoords[2]+2;
			SAY oRecMarc;
			VAR (;
					OemToAnsi( STR0012	 ); //"Numero de MarcaГУes:"
					+ " " +;
					AllTrim( Str( ( cTxtAlias )->( LastRec() ) ) );
					+ " " +;
					STR0013;	//" Registro:"
					+ " " +;
					AllTrim( Str( ( cTxtAlias )->( Recno() ) ) );
				 );	
			SIZE 150,010;
			OF oDlg;
			PIXEL
		oMsSelect:oBrowse:bChange	:= { || oRecMarc:Refresh() }

	ACTIVATE MSDIALOG oDlg CENTERED ON INIT Eval( bInitDlg )

End Sequence

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura as Teclas de Atalho        						  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
RestKeys( aSvKeys , .T. )

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Exclui os Arquivos Temporarios 							  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
TxtAliasClose( @cTxtAlias )
If oTmpTabFO1 <> Nil
	oTmpTabFO1:Delete()
	Freeobj(oTmpTabFO1)
EndIf

/*/
здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
ЁcPonArq - indica que sС copia o arquivo para o StartPath caso Ё
Ёo parametro MV_POARQ esteja com valor NцO					   Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
If (cPonArq != "1")
	/*/
	зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Se copiou para o server, Exclui 							  Ё
	юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
	IF ( ( lCpyT2Srv ) .and. !Empty( cArqSrv ) )
		IF !( Upper( AllTrim( cArquivo ) ) == Upper( AllTrim( cArqSrv ) ) )
			lForceCopy := .T.
			fErase( cArqSrv )
		EndIF
	EndIF
EndIf

/*/
зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Mantenho o arquivo do Relogio Aberto						  Ё
юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
AbreArqRel( cTipoArq , cArquivo , @nHandle , .F. , .F., Nil, Nil, lForceCopy )

IF !( lSetCentury )
	__SetCentury("off")
EndIF

Return( NIL )

/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁSP0BldData	 Ё Autor ЁMarinaldo de Jesus   Ё Data Ё16/09/2004Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁMonta Arquivo Temporario de Marcacoes de acordo com a EstrutuЁ
Ё          Ёra Definida no Cadastro de Relogios							 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL                                                  	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁNecessita que o SP0 esteja Posicionado                	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGENERICO                                                     Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function SP0BldData(	cDataType	,;
						cDataName	,;
						cDataFile	,;
						aBagName	,;
						cTxtAlias	,;
						aLogFile	,; 
						dDataIni	,;
						dDataFim    ,;
						nDiasExtA	,;
						nDiasExtP	,;
						lTempF4		,;
						cFilSP0  	,;
						nRecRFA		;
				   )

Local aArea			:= GetArea()
Local lRet			:= .T.
Local lSetCentury	:= __SetCentury("on")

Local aFields
Local aFieldsSize

Local cExt
Local cDia
Local cMes
Local cAno
Local cData
Local cCodRel
Local cHrs
Local cMin
Local cCracha
Local cFuncao
Local cGiro
Local cCusto
Local cDbfAlias

Local cFormCra
Local cFormRel
Local cFormFun
Local cFormGir
Local cFormCcu
Local cFormDia
Local cFormMes
Local cFormAno
Local cFormHrs
Local cFormMin

Local dData   

Local lVerPeriodo := ( dDataIni <> NIL )
Local nCraIni
Local nCraFim
Local nRelIni
Local nRelFim
Local nFunIni
Local nFunFim
Local nGirIni
Local nGirFim
Local nCcuIni
Local nCcuFim
Local nDiaIni
Local nDiaFim
Local nMesIni
Local nMesFim
Local nAnoIni
Local nAnoFim
Local nHrsIni
Local nHrsFim
Local nMinIni
Local nMinFim

Local nCodRel
Local nCracha
Local nFuncao
Local nGiro
Local nCusto
Local nFields 
Local aLstIndices := {}

DEFAULT nDiasExtA	:= 2
DEFAULT nDiasExtP	:= 2
DEFAULT lTempF4		:= .F.

Begin Sequence

	IF !( lRet := ( cDataType $ "Dd_Tt" ) )
		Break
	EndIF

	IF !Empty( IF( IsMemVar( "P0_CODFOR" ) , GetMemVar( "P0_CODFOR" ) , SP0->P0_CODFOR ) )
		cFormCra := AllTrim( StrTran( IF( IsMemVar( "P0_CODFOR" ) , GetMemVar( "P0_CODFOR" ) , SP0->P0_CODFOR ) , '"' , "'" ) )
	Else	
		nCraIni := IF( IsMemVar( "P0_CODINI" ) , GetMemVar( "P0_CODINI" ) , SP0->P0_CODINI )
		IF ( nCraIni > 0 )
			nCraFim := ( ( IF( IsMemVar( "P0_CODFIM" ) , GetMemVar( "P0_CODFIM" ) , SP0->P0_CODFIM ) - nCraIni ) + 1 )
		Else
			nCraFim := 0
		EndIF	
	EndIF

	IF !Empty( IF( IsMemVar( "P0_RELOFOR" ) , GetMemVar( "P0_RELOFOR" ) , SP0->P0_RELOFOR ) )
		cFormRel := AllTrim( StrTran( IF( IsMemVar( "P0_RELOFOR" ) , GetMemVar( "P0_RELOFOR" ) , SP0->P0_RELOFOR ) , '"' , "'" ) )
	Else	
		nRelIni := IF( IsMemVar( "P0_RELOINI" ) , GetMemVar( "P0_RELOINI" ) , SP0->P0_RELOINI ) 
		IF ( nRelIni > 0 )
			nRelFim := ( ( IF( IsMemVar( "P0_RELOFIM" ) , GetMemVar( "P0_RELOFIM" ) , SP0->P0_RELOFIM )  - nRelIni ) + 1 )
		Else
			nRelFim := 0
		EndIF	
	EndIF

	IF !Empty( IF( IsMemVar( "P0_FUNCFOR" ) , GetMemVar( "P0_FUNCFOR" ) , SP0->P0_FUNCFOR ) )
		cFormFun := AllTrim( StrTran( IF( IsMemVar( "P0_FUNCFOR" ) , GetMemVar( "P0_FUNCFOR" ) , SP0->P0_FUNCFOR )  , '"' , "'" ) )
	Else	
		nFunIni := IF( IsMemVar( "P0_FUNCINI" ) , GetMemVar( "P0_FUNCINI" ) , SP0->P0_FUNCINI )
		IF ( nFunIni > 0 )
			nFunFim := ( ( IF( IsMemVar( "P0_FUNCFIM" ) , GetMemVar( "P0_FUNCFIM" ) , SP0->P0_FUNCFIM ) - nFunIni ) + 1 )
		Else
			nFunFim := 0
		EndIF	
	EndIF

	IF !Empty( IF( IsMemVar( "P0_GIROFOR" ) , GetMemVar( "P0_GIROFOR" ) , SP0->P0_GIROFOR ) )
		cFormGir := AllTrim( StrTran( IF( IsMemVar( "P0_GIROFOR" ) , GetMemVar( "P0_GIROFOR" ) , SP0->P0_GIROFOR ) , '"' , "'" ) )
	Else	
		nGirIni := IF( IsMemVar( "P0_GIROINI" ) , GetMemVar( "P0_GIROINI" ) , SP0->P0_GIROINI )
		IF ( nGirIni > 0 )
			nGirFim := ( ( IF( IsMemVar( "P0_GIROFIM" ) , GetMemVar( "P0_GIROFIM" ) , SP0->P0_GIROFIM ) - nGirIni ) + 1 ) 
		Else
			nGirFim := 0
		EndIF	
	EndIF

	IF !Empty( IF( IsMemVar( "P0_CCFOR" ) , GetMemVar( "P0_CCFOR" ) , SP0->P0_CCFOR ) )
		cFormCcu := AllTrim( StrTran( IF( IsMemVar( "P0_CCFOR" ) , GetMemVar( "P0_CCFOR" ) , SP0->P0_CCFOR ) , '"' , "'" ) )
	Else	
		nCcuIni := IF( IsMemVar( "P0_CCINI" ) , GetMemVar( "P0_CCINI" ) , SP0->P0_CCINI )
		IF ( nCcuIni > 0 )
			nCcuFim := ( ( IF( IsMemVar( "P0_CCFIM" ) , GetMemVar( "P0_CCFIM" ) , SP0->P0_CCFIM ) - nCcuIni ) + 1 )
		Else
			nCcuFim := 0
		EndIF	
	EndIF

	IF !Empty( IF( IsMemVar( "P0_DIAFOR" ) , GetMemVar( "P0_DIAFOR" ) , SP0->P0_DIAFOR ) )
		cFormDia := AllTrim( StrTran( IF( IsMemVar( "P0_DIAFOR" ) , GetMemVar( "P0_DIAFOR" ) , SP0->P0_DIAFOR ) , '"' , "'" ) )
	Else	
		nDiaIni := IF( IsMemVar( "P0_DIAINI" ) , GetMemVar( "P0_DIAINI" ) , SP0->P0_DIAINI )
		IF ( nDiaIni > 0 )
			nDiaFim := ( ( IF( IsMemVar( "P0_DIAFIM" ) , GetMemVar( "P0_DIAFIM" ) , SP0->P0_DIAFIM ) - nDiaIni ) + 1 )
		Else
			nDiaFim := 0
		EndIF	
	EndIF

	IF !Empty( IF( IsMemVar( "P0_MESFOR" ) , GetMemVar( "P0_MESFOR" ) , SP0->P0_MESFOR ) )
		cFormMes := AllTrim( StrTran( IF( IsMemVar( "P0_MESFOR" ) , GetMemVar( "P0_MESFOR" ) , SP0->P0_MESFOR ) , '"' , "'" ) )
	Else	
		nMesIni := IF( IsMemVar( "P0_MESINI" ) , GetMemVar( "P0_MESINI" ) , SP0->P0_MESINI )
		IF ( nMesIni > 0 )
			nMesFim := ( ( IF( IsMemVar( "P0_MESFIM" ) , GetMemVar( "P0_MESFIM" ) , SP0->P0_MESFIM ) - nMesIni ) + 1 )
		Else
			nMesFim := 0
		EndIF	
	EndIF

	IF !Empty( IF( IsMemVar( "P0_ANOFOR" ) , GetMemVar( "P0_ANOFOR" ) , SP0->P0_ANOFOR ) )
		cFormAno := AllTrim( StrTran( IF( IsMemVar( "P0_ANOFOR" ) , GetMemVar( "P0_ANOFOR" ) , SP0->P0_ANOFOR ) , '"' , "'" ) )
	Else	
		nAnoIni := IF( IsMemVar( "P0_ANOINI" ) , GetMemVar( "P0_ANOINI" ) , SP0->P0_ANOINI )
		IF ( nAnoIni > 0 )
			nAnoFim := ( ( IF( IsMemVar( "P0_ANOFIM" ) , GetMemVar( "P0_ANOFIM" ) , SP0->P0_ANOFIM ) - nAnoIni ) + 1 ) 
		Else
			nAnoFim := 0
		EndIF	
	EndIF

	IF !Empty( IF( IsMemVar( "P0_HORAFOR" ) , GetMemVar( "P0_HORAFOR" ) , SP0->P0_HORAFOR ) )
		cFormHrs := AllTrim( StrTran( IF( IsMemVar( "P0_HORAFOR" ) , GetMemVar( "P0_HORAFOR" ) , SP0->P0_HORAFOR ) , '"' , "'" ) )
	Else	
		nHrsIni := IF( IsMemVar( "P0_HORAINI" ) , GetMemVar( "P0_HORAINI" ) , SP0->P0_HORAINI )
		IF ( nHrsIni > 0 )
			nHrsFim := ( ( IF( IsMemVar( "P0_HORAFIM" ) , GetMemVar( "P0_HORAFIM" ) , SP0->P0_HORAFIM ) - nHrsIni ) + 1 )
		Else
			nHrsFim := 0
		EndIF	
	EndIF

	IF !Empty( IF( IsMemVar( "P0_MINUFOR" ) , GetMemVar( "P0_MINUFOR" ) , SP0->P0_MINUFOR ) )
		cFormMin := AllTrim( StrTran( IF( IsMemVar( "P0_MINUFOR" ) , GetMemVar( "P0_MINUFOR" ) , SP0->P0_MINUFOR ) , '"' , "'" ) )
	Else	
		nMinIni := IF( IsMemVar( "P0_MINUINI" ) , GetMemVar( "P0_MINUINI" ) , SP0->P0_MINUINI )
		IF ( nMinIni > 0 )
			nMinFim := ( ( IF( IsMemVar( "P0_MINUFIM" ) , GetMemVar( "P0_MINUFIM" ) , SP0->P0_MINUFIM ) - nMinIni ) + 1 )
		Else
			nMinFim := 0
		EndIF	
	EndIF

	SetMemVar( "TXT" , "" , .T. )
	SetMemVar( "cErrSp0GetInf" , "" , .T. )

	IF ( cDataType == "T" )

	If lTempF4
		cDbfAlias := "__TMPRELOG" 
		TxtAliasClose( cDbfAlias )
	Else	
		cDbfAlias := "RFA" 
	EndIf

		fT_fUse( cDataName )
		fT_fGotop()
		
		lRet := !( fT_fEof() )
		IF !( lRet )
			Break
		EndIF
		
		While ( !fT_fEof() )

			M->TXT				:= fT_fReadLn()
			M->cErrSp0GetInf	:= ""

			cCracha := Sp0GetInfo( M->TXT , cFormCra , nCraIni , nCraFim )
			IF Empty( cCracha )
				M->cErrSp0GetInf := "ERRO"
			EndIF

			cCodRel := Sp0GetInfo( M->TXT , cFormRel , nRelIni , nRelFim )
			cFuncao := Sp0GetInfo( M->TXT , cFormFun , nFunIni , nFunFim )
			cGiro   := Sp0GetInfo( M->TXT , cFormGir , nGirIni , nGirFim )
			cCusto  := Sp0GetInfo( M->TXT , cFormCcu , nCcuIni , nCcuFim )
			cDia	:= Sp0GetInfo( M->TXT , cFormDia , nDiaIni , nDiaFim )
			cMes	:= Sp0GetInfo( M->TXT , cFormMes , nMesIni , nMesFim )
			cAno	:= Sp0GetInfo( M->TXT , cFormAno , nAnoIni , nAnoFim )
			cHrs	:= Sp0GetInfo( M->TXT , cFormHrs , nHrsIni , nHrsFim )
			cMin	:= Sp0GetInfo( M->TXT , cFormMin , nMinIni , nMinFim )

			IF ( M->cErrSp0GetInf <> "ERRO" )
				cData := ( cDia + "/" + cMes + "/" + cAno )
				IF Empty( Ctod( cData , "DDMMYYYY" ) )
					M->cErrSp0GetInf := "ERRO"
				EndIF
			EndIF

			IF ( lRet := ( M->cErrSp0GetInf <> "ERRO" ) )
				
				nCracha := Max( 1 , Len( cCracha ) )
				nCodRel := Max( 1 , Len( cCodRel ) )
				nFuncao := Max( 1 , Len( cFuncao ) )
				nGiro   := Max( 1 , Len( cGiro   ) )
				nCusto  := Max( 1 , Len( cCusto  ) )
	
				cExt	:= GetDbExtension()

				aFieldsSize := {}
				aAdd( aFieldsSize , { nCracha	, 0 } )
				aAdd( aFieldsSize , { 8 		, 0 } )
				aAdd( aFieldsSize , { 5			, 2 } )
				aAdd( aFieldsSize , { nCodRel	, 0 } )
				aAdd( aFieldsSize , { nFuncao	, 0 } )
				aAdd( aFieldsSize , { nGiro		, 0 } )
				aAdd( aFieldsSize , { nCusto	, 0 } )

				aFields	:= GetFields( aFieldsSize )
	
				If lTempF4
					AAdd(aLstIndices, {"CRACHA", "DDATE", "HORA"} )
					oTmpTabFO1:= RhCriaTrab(cDbfAlias, aFields, aLstIndices)
				Else
					//Alterado para utilizar tabela de transferencia RFA
					dbSelectArea(cDbfAlias)
				EndIf
			   
				fT_fGotop()
				While ( !fT_fEof() )

					M->TXT	:= fT_fReadLn()
					If Len(M->TXT) <= 1
						fT_fSkip()
						Loop
					EndIF
					cCracha := Sp0GetInfo( M->TXT , cFormCra , nCraIni , nCraFim )
					cCodRel := Sp0GetInfo( M->TXT , cFormRel , nRelIni , nRelFim )
					cFuncao := Sp0GetInfo( M->TXT , cFormFun , nFunIni , nFunFim )
					cGiro   := Sp0GetInfo( M->TXT , cFormGir , nGirIni , nGirFim )
					cCusto  := Sp0GetInfo( M->TXT , cFormCcu , nCcuIni , nCcuFim )
					cDia	:= Sp0GetInfo( M->TXT , cFormDia , nDiaIni , nDiaFim )
					cMes	:= Sp0GetInfo( M->TXT , cFormMes , nMesIni , nMesFim )
					cAno	:= Sp0GetInfo( M->TXT , cFormAno , nAnoIni , nAnoFim )
					cHrs	:= Sp0GetInfo( M->TXT , cFormHrs , nHrsIni , nHrsFim )
					cMin	:= Sp0GetInfo( M->TXT , cFormMin , nMinIni , nMinFim )

					IF ( M->cErrSp0GetInf == "ERRO" )
						M->cErrSp0GetInf := ""
						fT_fSkip()
						Loop
					EndIF

					cData	:= ( cDia + "/" + cMes + "/" + cAno )
                    dData   :=  Ctod( cData , "DDMMYYYY" )
					 If lVerPeriodo  
					    If !( ( dData >= (dPerDe - nDiasExtA))  .AND. ( dData <= (dPerAte + nDiasExtP ) ) )
							fT_fSkip()
							Loop
						Endif	
					EndIF

					If lTempF4
						( cDbfAlias )->( dbAppend( .T. ) )
		
						( cDbfAlias )->( CRACHA ) := cCracha
						( cDbfAlias )->( DDATE  ) := dData
						( cDbfAlias )->( HORA   ) := Val( ( cHrs + "." + cMin ) )
						( cDbfAlias )->( CODREL ) := cCodRel
						( cDbfAlias )->( FUNCAO ) := cFuncao
						( cDbfAlias )->( GIRO   ) := cGiro
						( cDbfAlias )->( CUSTO  ) := cCusto
					Else
						cData := DtoS(dData)
						
						(cDbfAlias)->(dbSetOrder(2))
	                    
						If !( cDbfAlias )->( MsSeek( xFilial("SP0") + cCracha + Space(10 - Len(cCracha)) + cData + cHrs + "." + cMin ) )
							IF RecLock( cDbfAlias , .T. )
								( cDbfAlias )->RFA_FILIAL := xFilial("RFA")
								( cDbfAlias )->RFA_ORIG   := cFilSP0
								( cDbfAlias )->RFA_CRACHA := cCracha
								( cDbfAlias )->RFA_DATA   := dData
								( cDbfAlias )->RFA_HORA   := Val( ( cHrs + "." + cMin ) )
								( cDbfAlias )->RFA_CC     := cCusto
								( cDbfAlias )->RFA_RELOGI := cCodRel
								( cDbfAlias )->RFA_FUNCAO := cFuncao
								( cDbfAlias )->RFA_GIRO   := cGiro
								( cDbfAlias )->RFA_FLAG	  := "0"
								( cDbfAlias )->( MsUnLock() )
								If Empty(nRecRFA)
									nRecRFA := ( cDbfAlias )->( Recno() )
								EndIf
							EndIF
						EndIf
					EndIf

					fT_fSkip()
	
				End While
			
			EndIF
			
			IF ( lRet )
				Exit
			EndIF

			fT_fSkip()
	
		End While
		fT_fUse()

	Else

		If lTempF4
			cDbfAlias	:= "__TMPRELOG"
		Else
			cDbfAlias	:= "RFA"
		EndIf
		
		nFields		:= ( cTxtAlias )->( fCount() )
		
		( cTxtAlias )->( dbGotop() )
		
		lRet := ( cTxtAlias )->( !Eof() )
		IF !( lRet )
			Break
		EndIF
		
		While ( cTxtAlias )->( !Eof() )

			M->TXT				:= DbfGetData( cTxtAlias , nFields )
			M->cErrSp0GetInf	:= ""
			
			cCracha := Sp0GetInfo( M->TXT , cFormCra , nCraIni , nCraFim )
			IF Empty( cCracha )
				M->cErrSp0GetInf := "ERRO"
			EndIF

			cCodRel := Sp0GetInfo( M->TXT , cFormRel , nRelIni , nRelFim )
			cFuncao := Sp0GetInfo( M->TXT , cFormFun , nFunIni , nFunFim )
			cGiro   := Sp0GetInfo( M->TXT , cFormGir , nGirIni , nGirFim )
			cCusto  := Sp0GetInfo( M->TXT , cFormCcu , nCcuIni , nCcuFim )
			cDia	:= Sp0GetInfo( M->TXT , cFormDia , nDiaIni , nDiaFim )
			cMes	:= Sp0GetInfo( M->TXT , cFormMes , nMesIni , nMesFim )
			cAno	:= Sp0GetInfo( M->TXT , cFormAno , nAnoIni , nAnoFim )
			cHrs	:= Sp0GetInfo( M->TXT , cFormHrs , nHrsIni , nHrsFim )
			cMin	:= Sp0GetInfo( M->TXT , cFormMin , nMinIni , nMinFim )

			IF ( M->cErrSp0GetInf <> "ERRO" )
				cData := ( cDia + "/" + cMes + "/" + cAno )
				IF Empty( Ctod( cData , "DDMMYYYY" ) )
					M->cErrSp0GetInf := "ERRO"
				EndIF
			EndIF

			IF ( lRet := ( M->cErrSp0GetInf <> "ERRO" ) )
				
				nCracha := Max( 1 , Len( cCracha ) )
				nCodRel := Max( 1 , Len( cCodRel ) )
				nFuncao := Max( 1 , Len( cFuncao ) )
				nGiro   := Max( 1 , Len( cGiro   ) )
				nCusto  := Max( 1 , Len( cCusto  ) )

				cExt	:= GetDbExtension()

				aFieldsSize := {}
				aAdd( aFieldsSize , { nCracha	, 0 } )
				aAdd( aFieldsSize , { 8 		, 0 } )
				aAdd( aFieldsSize , { 5			, 2 } )
				aAdd( aFieldsSize , { nCodRel	, 0 } )
				aAdd( aFieldsSize , { nFuncao	, 0 } )
				aAdd( aFieldsSize , { nGiro		, 0 } )
				aAdd( aFieldsSize , { nCusto	, 0 } )

				aFields	:= GetFields( aFieldsSize )

				If lTempF4
					aLstIndices := {}
					AAdd(aLstIndices, {"CRACHA", "DDATE", "HORA"} )
					oTmpTabFO1:= RhCriaTrab(cDbfAlias, aFields, aLstIndices)
				Else
					//Alterado para utilizar tabela de transferencia RFA
					dbSelectArea(cDbfAlias)
				EndIf
				
				( cTxtAlias )->( dbGotop() )
				While ( cTxtAlias )->( !Eof() )

					M->TXT	:= DbfGetData( cTxtAlias , nFields )
					cCracha := Sp0GetInfo( M->TXT , cFormCra , nCraIni , nCraFim )
					cCodRel := Sp0GetInfo( M->TXT , cFormRel , nRelIni , nRelFim )
					cFuncao := Sp0GetInfo( M->TXT , cFormFun , nFunIni , nFunFim )
					cGiro   := Sp0GetInfo( M->TXT , cFormGir , nGirIni , nGirFim )
					cCusto  := Sp0GetInfo( M->TXT , cFormCcu , nCcuIni , nCcuFim )
					cDia	:= Sp0GetInfo( M->TXT , cFormDia , nDiaIni , nDiaFim )
					cMes	:= Sp0GetInfo( M->TXT , cFormMes , nMesIni , nMesFim )
					cAno	:= Sp0GetInfo( M->TXT , cFormAno , nAnoIni , nAnoFim )
					cHrs	:= Sp0GetInfo( M->TXT , cFormHrs , nHrsIni , nHrsFim )
					cMin	:= Sp0GetInfo( M->TXT , cFormMin , nMinIni , nMinFim )

					IF ( M->cErrSp0GetInf == "ERRO" )
						M->cErrSp0GetInf := ""
						( cTxtAlias )->( dbSkip() )
						Loop
					EndIF

					cData	:= ( cDia + "/" + cMes + "/" + cAno )
					
					 dData   :=  Ctod( cData , "DDMMYYYY" )
					 If lVerPeriodo  
					    If !( ( dData >= (dPerDe - nDiasExtA))  .AND. ( dData <= (dPerAte + nDiasExtP ) ) )
							( cTxtAlias )->( dbSkip() )
							Loop
						Endif	
					EndIF
					
					If lTempF4
						( cDbfAlias )->( dbAppend( .T. ) )
						( cDbfAlias )->( CRACHA ) := cCracha
						( cDbfAlias )->( DDATE  ) := dData
						( cDbfAlias )->( HORA   ) := Val( ( cHrs + "." + cMin ) )
						( cDbfAlias )->( CUSTO  ) := cCusto
						( cDbfAlias )->( CODREL ) := cCodRel
						( cDbfAlias )->( FUNCAO ) := cFuncao
						( cDbfAlias )->( GIRO   ) := cGiro
					Else
						cData := DtoS(dData)					
	
						(cDbfAlias)->(dbSetOrder(2))
	                    
						If !( cDbfAlias )->( MsSeek( xFilial("SP0") + cCracha + Space(10 - Len(cCracha)) + cData + cHrs + "." + cMin ) )
							IF RecLock( cDbfAlias , .T. )					
								( cDbfAlias )->RFA_FILIAL := xFilial("RFA")
								( cDbfAlias )->RFA_ORIG   := cFilSP0
								( cDbfAlias )->RFA_CRACHA := cCracha
								( cDbfAlias )->RFA_DATA   := dData
								( cDbfAlias )->RFA_HORA   := Val( ( cHrs + "." + cMin ) )
								( cDbfAlias )->RFA_CC     := cCusto
								( cDbfAlias )->RFA_RELOGI := cCodRel
								( cDbfAlias )->RFA_FUNCAO := cFuncao
								( cDbfAlias )->RFA_GIRO   := cGiro
								( cDbfAlias )->RFA_FLAG	  := "0"
								( cDbfAlias )->( MsUnLock() )
							EndIF
	                    EndIf
	      			EndIF
                    
					( cTxtAlias )->( dbSkip() )
	
				End While
			
			EndIF
			
			IF ( lRet )
				Exit
			EndIF
	
			( cTxtAlias )->( dbSkip() )
	
		End While
		( cTxtAlias )->( dbCloseArea() )

	EndIF


	IF ( lRet ) .and. ( lTempF4 )
		lRet := oTmpTabFO1 != NIL
	EndIF	

	IF !( lRet )
		DEFAULT aLogFile := {}
		//"Foi encontrada uma Inconsist┬ncia de Informa┤■es no Relogio:"
		aAdd( aLogFile , STR0010 + " " + IF( IsMemVar( "P0_RELOGIO" ) , GetMemVar( "P0_RELOGIO" ) , SP0->P0_RELOGIO ) )
		//"Verifique a configura┤ao do Relogio para o Arquivo: "
		aAdd( aLogFile , STR0011 + " " + IF( IsMemVar( "P0_ARQUIVO" ) , GetMemVar( "P0_ARQUIVO" ) , SP0->P0_ARQUIVO ) )
		Break
	EndIF

	If lTempF4
		cDataType := "D"
	EndIf

	cTxtAlias := cDbfAlias
	

End Sequence

IF !( lSetCentury )
	__SetCentury("off")
EndIF

RestArea( aArea )

Return( lRet )

/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁGetFields    Ё Autor ЁMarinaldo de Jesus   Ё Data Ё16/09/2004Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁObtem os campos para a Montagem do Temporario de Marcacoes   Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ															 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL                                                  	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁGENERICO                                                     Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function GetFields( aFieldsSize )

Local aFields := Array( 7 , 4 )

aFields[ 01 , 01 ] := "CRACHA"
aFields[ 01 , 02 ] := "C"
aFields[ 01 , 03 ] := aFieldsSize[1,1]
aFields[ 01 , 04 ] := aFieldsSize[1,2]

aFields[ 02 , 01 ] := "DDATE"
aFields[ 02 , 02 ] := "D"
aFields[ 02 , 03 ] := aFieldsSize[2,1]
aFields[ 02 , 04 ] := aFieldsSize[2,2]

aFields[ 03 , 01 ] := "HORA"
aFields[ 03 , 02 ] := "N"
aFields[ 03 , 03 ] := aFieldsSize[3,1]
aFields[ 03 , 04 ] := aFieldsSize[3,2]

aFields[ 04 , 01 ] := "CODREL"
aFields[ 04 , 02 ] := "C"
aFields[ 04 , 03 ] := aFieldsSize[4,1]
aFields[ 04 , 04 ] := aFieldsSize[4,2]

aFields[ 05 , 01 ] := "FUNCAO"
aFields[ 05 , 02 ] := "C"
aFields[ 05 , 03 ] := aFieldsSize[5,1]
aFields[ 05 , 04 ] := aFieldsSize[5,2]

aFields[ 06 , 01 ] := "GIRO"
aFields[ 06 , 02 ] := "C"
aFields[ 06 , 03 ] := aFieldsSize[6,1]
aFields[ 06 , 04 ] := aFieldsSize[6,2]

aFields[ 07 , 01 ] := "CUSTO"
aFields[ 07 , 02 ] := "C"
aFields[ 07 , 03 ] := aFieldsSize[7,1]
aFields[ 07 , 04 ] := aFieldsSize[7,2]

Return( aFields )

/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o	   ЁDbfGetData	 Ё Autor ЁMarinaldo de Jesus   Ё Data Ё08/09/2004Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁTransforma o conteudo do arquivo de marcacoes em String      Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ															 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL                                                  	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁSP0BldData                                                   Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function DbfGetData( cDbfAlias , nFields )

Local cTxt := ""

Local cFieldType
Local nField
Local uData

For nField := 1 To nFields
	uData		:= ( cDbfAlias )->( FieldGet( nField ) )
	cFieldType	:= ValType( uData )
	IF ( cFieldType == "C" )
		cTxt += uData
	ElseIF ( cFieldType == "N" )
		cTxt += StrZero( uData , 5 , 2 )
	ElseIF ( cFieldType == "D" )
		cTxt += Dtos( uData )
	EndIF
Next nField

Return( cTxt )

/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o	   ЁSp0GetInfo   Ё Autor ЁMarinaldo de Jesus   Ё Data Ё08/09/2004Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁRetorna Informacoes do Relogio                               Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ															 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL                                                  	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁSP0BldData                                                   Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Sp0GetInfo( cTxt , cForm , nPosIni , nPosFim )

IF ( cForm <> NIL )
	Return( Sp0ExecForm( cForm ) )
Else
	Return( SubStr( cTxt , nPosIni , nPosFim ) )
EndIF

/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁSp0ExecForm  ЁAutor  ЁMarinaldo de Jesus   Ё Data Ё16/09/2004Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o Ё Verifica se a formula digitada ┌ V═lida                     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ															 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL                                                  	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁSp0GetInfo                                                   Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Sp0ExecForm( cFor )

Local cRet := cFor

IF !( CheckExecForm( @cRet ) )
	cRet := ""
	SetMemVar( "cErrSp0GetInf" , "ERRO" )
EndIF

Return( cRet )

/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁTxtAliasCloseЁAutor  ЁMarinaldo de Jesus   Ё Data Ё16/09/2004Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁFecha o arquivo Referenciado pelo cTxtAlias                  Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ															 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL                                                  	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁSIGAPON														 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function TxtAliasClose( cTxtAlias )

Local cAlias := Alias()

IF (;
		!Empty( cTxtAlias );
		.and.;
		( Select( cTxtAlias ) > 0 );
	 )
	( cTxtAlias )->( dbCloseArea() )
	cTxtAlias := ""
EndIF

dbSelectArea( "SP0" )

IF (;
		!Empty( cAlias );
		.and.;
		( Select( cAlias ) > 0 );
	)	
	dbSelectArea( cAlias )
EndIF

Return( NIL )  


/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁP0DIRHINIT   ЁAutor  ЁMauricio MR          Ё Data Ё12/02/2008Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁInicializador padrao para o campo Diretorio Historico        Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ															 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL                                                  	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁSIGAPON														 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function P0DirHInit()
Local cDirHist :=  SuperGetMv("MV_ARQREL",Nil,Space(1))
M->P0_DIRHIST	:= cDirHist
Return (cDirHist)

/*/
зддддддддддбдддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁPN030TDOK    ЁAutor  ЁLeandro Drumond      Ё Data Ё11/08/2008Ё
цддддддддддедддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁFuncao para validacao dos campos da SP0                      Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ															 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL                                                  	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁSIGAPON														 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Pn030TdOk(cTudoOk)
Local aArea	   := GetArea()
Local lRet     := .T.
Local cElimina := M->P0_ELIMINA
Local cFilRel  := xFilial("SP0")
Local cCodRel  := M->P0_RELOGIO
Local cArqRel  := M->P0_ARQUIVO

If cElimina == "1"
	SP0->( dbGoTop() )
	
	While  SP0->( !Eof() )
		If SP0->( P0_ARQUIVO == cArqRel .and. ( P0_FILIAL <> cFilRel .or. P0_RELOGIO <> cCodRel ) )
			MsgAlert(STR0016)  //"Somente И possМvel eliminar o arquivo se o caminho dele for Зnico."
			lRet := .F.
			Exit
		EndIf
		SP0->( dbSkip() )
	EndDo
EndIf

If !Empty(cTudoOk) .and. lRet
	lRet := &(cTudoOk)
EndIf

RestArea(aArea)

Return (lRet)
/*
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    Ё MenuDef		ЁAutorЁ  Luiz Almeida     Ё Data Ё21/11/2006Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁIsola opcoes de menu para que as opcoes da rotina possam    Ё
Ё          Ёser lidas pelas blibliotecas Framework da Versao 9.12 .     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё< Vide Parametros Formais >									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Uso      ЁPONA030                                                     Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё Retorno  ЁaRotina														Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ< Vide Parametros Formais >									Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/

Static Function MenuDef()

	Local aRotina := {;
						   		{ STR0004 ,"PesqBrw" 	, 0, 1, ,.F.} ,; // "Pesquisar"
								{ STR0005 ,"Pona030Vis"	, 0, 2} ,; // "Visualizar"
								{ STR0006 ,"Pona030Inc"	, 0, 3} ,; // "Incluir"
								{ STR0007 ,"Pona030Alt"	, 0, 4} ,; // "Alterar"
								{ STR0008 ,"Pona030Del"	, 0, 5}  ; // "Excluir"
							}
							
	Return aRotina