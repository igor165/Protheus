#INCLUDE "PONR050.CH" 
#INCLUDE "PROTHEUS.CH"
#INCLUDE "PONCALEN.CH"
#INCLUDE "REPORT.CH"


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PONR050  ³ Autor ³ R.H. - J. Ricardo     ³ Data ³ 10.04.96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Relatorio para Abono                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PONR050(void)                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Mauricio MR ³17/10/01³------³ Correcao Impressao de Motivo de Abono so-³±±
±±³            ³        ³------³ mente para funcionarios que possuem.     ³±±
±±³Marinaldo   ³06/11/01³Melhor³ Consider o Turno do Calendario Para retor³±±
±±³            ³        ³------³ nar as Marcacoes						  ³±±
±±³Mauricio MR ³18/12/01³Melhor³A)Incluida Pergunta 'Listar Previsao' para³±±
±±³            ³        ³------³ listar, dia a dia, as previsoes de marca-³±±
±±³            ³        ³------³ coes. Serao impressas marcacoes/previsoes³±±
±±³            ³        ³------³ de 4 a 8 horas por linha ate o maximo de ³±±
±±³            ³        ³------³ 4 linhas. Existira alternancia do cabeca-³±±
±±³            ³        ³------³ lho dependendo das opcoes selecionadas.  ³±±
±±³            ³        ³------³B)Corrigida a impressao Sintetica com lis-³±±
±±³            ³        ³------³ tagem dos motivos de abono. Serao totali-³±± 
±±³            ³        ³------³ zadas as horas do evento no primeiro abo-³±±
±±³            ³        ³------³ no lido e totalizadas as horas abonadas  ³±±
±±³            ³        ³------³ por motivo de abono. Alterado o Sort do  ³±±
±±³            ³        ³------³ array aDet, dinstito para Sint. e Analit.³±±
±±³            ³        ³------³C)Corrigida a chamada da fabonos fornecen-³±±
±±³            ³        ³------³ do tipo de marcacao e centro de custo.   ³±± 
±±³            ³        ³------³Restaurar o n no Retorno da Funcao        ³±± 
±±³=======================================================================³±± 
±±³                         *** Versao 7.10 ***                           ³±± 
±±³=======================================================================³±± 
±±³Mauricio MR ³21/02/02³Melhor³A)Retirada de Perguntas pois foram trans- ³±± 
±±³            ³        ³      ³feridas para o SX1.                       ³±± 
±±³Mauricio MR ³27/02/02³Melhor³A)Inclusao da GetMarcacoes em substituicao³±± 
±±³            ³        ³      ³do algoritimo anterior para tratar a lei -³±±  
±±³            ³        ³      ³tura do SP8(marcacoes).                   ³±±  
±±³            ³        ³      ³B)Inclusao do PonCalen.ch e substituicao  ³±±  
±±³            ³        ³      ³dos indices dos arrays pelas Constantes   ³±±  
±±³            ³        ³      ³correspondentes.                          ³±±  
±±³Marinaldo   ³28/02/02³Melhor³Inclusao da Funcao fChkSX1() que ira inici³±±
±±³            ³        ³      ³alizar as Datas de Acordo com o Periodo de³±±  
±±³            ³        ³      ³Apontamento que sera montado a partir   da³±±  
±±³            ³        ³      ³Data Base do Sistema					  ³±±  
±±³ Priscila R.³10/06/02³------³Ajuste no relatorio para que seja impresso³±± 
±±³            ³--------³------³corretamente o C.C no tamanho 20.         ³±± 
±±³Mauricio MR ³25/09/02³016097³Complementacao da Lista de Identificadores³±± 
±±³            ³--------³------³do Ponto para Faltas/Atrasos/Saidas.      ³±±   
±±³Mauricio MR ³04/12/02³------³Retirada a restricao de existencia de cra-³±± 
±±³            ³--------³------³cha para a emissao do relatorio.	      ³±±    
±±³=======================================================================³±± 
±±³                         *** Versao 9.12 ***                           ³±± 
±±³=======================================================================³±± 
±±³Leandro Dr  ³28/03/08³Melhor³Inclusão de chave processo/periodo/roteiro³±± 
±±³            |        |      |NumPagto. Impressao por data ou periodo   ³±±
±±³Francisco Jr³17/11/09³026122³Compatibilizacao de Fontes com Versao Cor-³±± 
±±³            |        |      |porativa.                                 ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programador  ³ Data     ³ FNC            ³  Motivo da Alteracao                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ³±±
±±³Aldo Marini  ³20/04/2011³00000006382/2011³Conversao para TReport                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function PONR050()
Local	oReport   
Local	aArea 		:= GetArea()
Private nColPro		:= 1
Private cPerg		:= "PN050RA"
Private cProcesso 	:= Nil
Private cPeriodo 	:= Nil
Private cRoteiro  	:= Nil
Private cNumPagto 	:= Nil

If __cRDD == "TOPCONN" .And. ;	// Verifica se esta utilizando ambiente TOP
	GetRpoRelease("R5").And. ;	// Verifica se esta no Release 11.5
	TRepInUse()					// Verifica se Imprime em formato personalizavel

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se deve imprimir por periodo ou datas			   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If fOpcRadio(@nColPro, STR0001,;      //"Relatorio para Abono"
						   STR0026,;      //"Selecione a opcao de impressao:"
				   		   STR0027,;      //"Por Periodo"
				   		   STR0028 ) == 0 //"Por Datas"
		Return
	EndIf
		
	cPerg := IF(nColPro == 1,"PN050RA","PN050RB")
	
	pergunte(cPerg,.F.) 

    oReport := ReportDef()
    oReport:PrintDialog()
Else
 	PONR050R3()
EndIF    

RestArea( aArea )

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³ ReportDef  ³ Autor ³ Totvs IP RH           ³ Data ³12/04/2011³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Relatorio para Abono                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ PONR050                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR050 - Generico                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ReportDef()
Local oReport 
Local oSection1 
Local oSection2 
Local bBlkFil := { || If ( cCodFilial != (cAliasQry)->RA_FILIAL, Eval( { || fInfo(@aInfo,(cAliasQry)->RA_FILIAL), aInfo[3] } ), aInfo[1] ) }
Local aOrd 		:= {STR0004 ,STR0005 ,STR0006 ,STR0007 ,STR0020 , STR0033} // "Matricula"###"Centro de Custo"###"Nome"###"Turno"###"C.Custo+Nome"###"Departamento"
Private cTitulo		:= OemToAnsi(STR0001)			// "Relatorio para Abono"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao dos componentes de impressao                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DEFINE REPORT oReport NAME "PONR050" TITLE cTitulo PARAMETER cPerg ACTION {|oReport| PN050Imp(oReport)} DESCRIPTION OemtoAnsi(STR0045) TOTAL IN COLUMN // "Este programa emite Relacao dos Funcionarios para Abonos de Horas"

	oSection1 := TRSection():New( oReport, OemToAnsi(STR0041), {"SRA","CTT","SR6"}, aOrd,,,,,.F.,.F.,.F.) // "Funcionarios"

		TRCell():New(oSection1,"RA_FILIAL","SRA",,/*Picture*/,8,/*lPixel*/,{|| 	If(!Empty((cAliasQry)->RA_FILIAL),;
																								cCodFilial:= (cAliasQry)->RA_FILIAL,;
																								NIL),;
																								cCodFilial}	)
		TRCell():New(oSection1,"FILIAL","",OemToAnsi(STR0035),/*Picture*/,15,/*lPixel*/,{|| Eval( bBlkFil ) })	// "Desc.Filial"

                                           
		TRCell():New(oSection1,"RA_CHAPA"	,"SRA",,,5)
		TRCell():New(oSection1,"RA_MAT"		,"SRA",,,6)
		TRCell():New(oSection1,"RA_NOME"	,"SRA",,,30,,,,.T.)
		TRCell():New(oSection1,"RA_CC"		,"SRA",OemToAnsi(STR0043),,9)	// "C.Custo"
		TRCell():New(oSection1,"CTT_DESC01"	,"CTT",,,20,,,,.T.)
		TRCell():New(oSection1,"RA_TNOTRAB"	,"SRA",OemToAnsi(STR0044),,3)	// "Tno"
		TRCell():New(oSection1,"R6_DESC"	,"SR6",,,15,,,,.T.)
		TRCell():New(oSection1,"RA_DEPTO"	,"SRA",OemToAnsi(STR0047),,9)	// Depto

	oSection2 := TRSection():New( oSection1, OemToAnsi(STR0042),,,,,,,.F.,.F.,.F. )	 //"Marcações"
                                                                              
		TRCell():New( oSection2, "PREVISTO"    	, "" ,OemToAnsi(STR0024),,24,,,,.T.) // "Previsto" 
		TRCell():New( oSection2, "REALIZADO"   	, "" ,OemToAnsi(STR0025),,24,,,,.T.) // "Realizado" 
		TRCell():New( oSection2, "DATA"     	, "" ,OemToAnsi(STR0046),,5) // "Data 

		TRCell():New( oSection2, "ABONO"     	, "" ,OemToAnsi(STR0036),,3) // "Abn" 
		TRCell():New( oSection2, "DESCABONO"	, "" ,OemToAnsi(STR0037),,20,,,,.T.) // "Descricao"
		TRCell():New( oSection2, "HORAS"		, "" ,OemToAnsi(STR0038),,6) // "Horas"

		TRCell():New( oSection2, "PROCESSO"		, "" ,OemToAnsi(STR0048),,5)	// "Processo"
		TRCell():New( oSection2, "PERIODO"		, "" ,OemToAnsi(STR0049),,6)	// "Periodo"	
		TRCell():New( oSection2, "ROTEIRO"		, "" ,OemToAnsi(STR0050),,3)	// "Rot"
		TRCell():New( oSection2, "NUMPAGTO"		, "" ,OemToAnsi(STR0051),,2)	// "NP"

		TRCell():New( oSection2, "JUSTIFICATIVA", "" ,OemToAnsi(STR0039),,15,,,,.T.) // "Justificativa"
		TRCell():New( oSection2, "VISTO"		, "" ,OemToAnsi(STR0040),,12) // "Visto"


		
Return(oReport)


Static Function PN050Imp(oReport)

Local oSection  := oReport:Section(1)
Local oSection1 := oReport:Section(1):Section(1)
Local cSitQuery	:= ""    
Local cCatQuery	:= ""  
Local nReg		:= 0
Local nOrdem	:= 1
Local cCodAut 	:= "008,010,012,014,018,020,022,032,034" //-- Codigos Autorizados
Local cCodNAut 	:= "007,009,011,013,017,019,021,033,035" //-- Codigos Nao Autorizados

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis de Acesso do Usuario                               ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
Local cAcessaSRA	:= &( " { || " + ChkRH( "PONR050" , "SRA" , "2" ) + " } " )
Local cAcessaSPC 	:= &( " { || " + ChkRH( "PONR050" , "SPC" , "2" ) + " } " )

Local aAutorizado  := {}
Local aJustifica   := {}	//-- retorno Justificativa de abono
Local xQuant       := 0
Local nPos         := 0
Local cPD          := Space(03)
Local nTab	     :=0
Local nPosTab	 :=0
Local nLenCalend :=0
Local aPrevFun   :={}
Local cOrdem	 :=''
Local nLimite    := 0
Local nX		 := 0
Local cCol1      := ''
Local cCol2      := ''
Local nFor		 := 0
Local cPrevDet   := ""
Local cRealDet   := ""

Local oBreakCc
Local oBreakFil
Local oBreakFun

Local lHeaderMar	:= .T.
////////

Private aInfo		:= {}
Private aDet       := {}
Private lCabec     := .F.
Private lCabecCC   := .F.
Private lCabecTT   := .F.
Private lPrimeira  := .T.
Private aMarcFun   := {}
Private aTabPadrao := {}
Private aTabCalend := {}
Private aMarcacoes := {}
Private nPosMarc   := 0 
Private nLenMarc   := 0

Private cCodFilial	:= "##"
Private cDet	 := ''
Private cDet1  	 := ''
Private cDet2	 := ''
Private cDet3	 := ''
Private nVez	 := 0
Private lImpLinhas:= '' 

Private cAliasQry 	:= GetNextAlias()

Private cFilAnte   := ''

Private cSit     := ""
Private cCat     := ""
Private lCC      := .F.
Private lNMarc   := .F.
Private lHExtr   := .F.
Private lInter   := .F.
Private lSitfu   := .F.
Private dPerIni  := CTOD('  /  /  ')
Private dPerFim  := CTOD('  /  /  ')
Private cDeptoDe
Private cDeptoAte
Private lPeriodo  := .F.
Private oPeriodo  := RHPERIODO():New()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando variaveis mv_par?? para Variaveis do Sistema.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nColPro == 1 ) 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis utilizadas para parametros                         ³
	//³ MV_PAR01        //  Processo                                 ³
	//³ MV_PAR02        //  Periodo                                  ³
	//³ MV_PAR03        //  Roteiro                                  ³
	//³ MV_PAR04        //  Numero de Pagamento                      ³
	//³ MV_PAR05        //  Departamento                             ³				
	//³ MV_PAR06        //  Filial                                   ³
	//³ MV_PAR07        //  Centro de Custo                          ³
	//³ MV_PAR08        //  Turno                                    ³
	//³ MV_PAR09        //  Matricula                                ³
	//³ MV_PAR10        //  Nome                                     ³
	//³ MV_PAR11        //  Situacao                                 ³
	//³ MV_PAR12        //  Categoria                                ³
	//³ MV_PAR13        //  Imprime C.C em outra Pagina              ³
	//³ MV_PAR14        //  Imprimir Abonados                        ³
	//³ MV_PAR15        //  Imprimir Autorizados/Nao Autorizados/Ambo³
	//³ MV_PAR16        //  Relatorio Sintetico/Analitico            ³
	//³ MV_PAR17        //  Quebra Func.Pag. Sim/Nao                 ³
	//³ MV_PAR18        //  Imprimir Motivo Abono                    ³
	//³ MV_PAR19        //  Imprimir Marca‡äes                       ³
	//³ MV_PAR20        //  Regra De                                 ³
	//³ MV_PAR21        //  Listar Previsao                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lPeriodo  := .T.
	cProcesso := mv_par01			//Processo
	cPeriodo  := mv_par02			//Periodo
	cRoteiro  := mv_par03			//Roteiro
	cNumPagto := mv_par04			//Numero de Pagamento
	cSit      := mv_par11
	cCat      := mv_par12
	lCC       := If(mv_par13 == 1,.T.,.F.)
	lImpAbon  := If(mv_par14 == 1,.T.,.F.)
	nTipo     := mv_par15
	nSinAna   := mv_par16
	lImpFol	  := If(mv_par17 == 1,.T.,.F.)
	lImpMot   := IF(mv_par18 == 1,.T.,.F.)
	lImpMar   := IF(mv_par19 == 1,.T.,.F.)
	lPrevisao := IF(mv_par21 == 1,.T.,.F.)  //.T. - Lista Horario Previsto
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis utilizadas para parametros                         ³
	//³ MV_PAR01        //  Processo                                 ³
	//³ MV_PAR02        //  Dia Inicial                              ³
	//³ MV_PAR03        //  Dia Final                                ³
	//³ MV_PAR04        //  Departamento                             ³				
	//³ MV_PAR05        //  Filial                                   ³
	//³ MV_PAR06        //  Centro de Custo                          ³
	//³ MV_PAR07        //  Turno                                    ³
	//³ MV_PAR08        //  Matricula                                ³
	//³ MV_PAR09        //  Nome                                     ³
	//³ MV_PAR10        //  Situacao                                 ³
	//³ MV_PAR11        //  Categoria                                ³
	//³ MV_PAR12        //  Imprime C.C em outra Pagina              ³
	//³ MV_PAR13        //  Imprimir Abonados                        ³
	//³ MV_PAR14        //  Imprimir Autorizados/Nao Autorizados/Ambo³
	//³ MV_PAR15        //  Relatorio Sintetico/Analitico            ³
	//³ MV_PAR16        //  Quebra Func.Pag. Sim/Nao                 ³
	//³ MV_PAR17        //  Imprimir Motivo Abono                    ³
	//³ MV_PAR18        //  Imprimir Marca‡äes                       ³
	//³ MV_PAR19        //  Regra De                                 ³
	//³ MV_PAR20        //  Listar Previsao                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	lPeriodo  := .F.
	cProcesso := mv_par01			//Processo
	dPerIni   := mv_par02
	dPerFim   := mv_par03
	cSit      := mv_par10
	cCat      := mv_par11
	lCC       := If(mv_par12 == 1,.T.,.F.)
	lImpAbon  := If(mv_par13 == 1,.T.,.F.)  
	nTipo     := mv_par14
	nSinAna   := mv_par15
	lImpFol	  := If(mv_par16 == 1,.T.,.F.)
	lImpMot   := IF(mv_par17 == 1,.T.,.F.)
	lImpMar   := IF(mv_par18 == 1,.T.,.F.)
	RegDe     := mv_par19
	lPrevisao := IF(mv_par20 == 1,.T.,.F.)  //.T. - Lista Horario Previsto	
EndIf

If lPeriodo
	oPeriodo:cProcesso := cProcesso
	oPeriodo:cPeriodo  := cPeriodo
	oPeriodo:cRoteiro  := cRoteiro
	oPeriodo:cNumPagto := cNumPagto

	oPeriodo:GetPer()
	
	If !(oPeriodo:lFound )
		MsgInfo( OemToAnsi( oPeriodo:cMsgNotFoundPer ) )    //"Período de Apontamento não encontrado."
		Return
	EndIf
	
	dPerIni := oPeriodo:dDataIni
	dPerFim := oPeriodo:dDataFim
Else
	oPeriodo:dDataIni := dPerIni
	oPeriodo:dDataFim := dPerFim	
EndIf	

If dPerIni > dPerFim
   Help(" ",1,"PNR050DATA")
   Return Nil
Endif


SRA->(dbSetOrder(1))

//-- Para Relatorio Sintetico nao imprime Previsao e/ou Marcacao
If nSinAna==1
   lPrevisao:=.F.
   lImpMar	:=.F.
Endif

// Identificadores de Ponto
If nTipo = 1 
	cCodigos := cCodaut
Elseif nTipo = 2
	cCodigos := cCodNAut
ElseIf nTipo = 3
	cCodigos := cCodAut+','+cCodNAut
Endif	

//-- Modifica variaveis para a Query
For nReg:=1 to Len(cSit)
	cSitQuery += "'"+Subs(cSit,nReg,1)+"'"
	If ( nReg+1 ) <= Len(cSit)
		cSitQuery += "," 
	Endif
Next nReg        
cSitQuery := "%" + cSitQuery + "%"

cCatQuery := ""
For nReg:=1 to Len(cCat)
	cCatQuery += "'"+Subs(cCat,nReg,1)+"'"
	If ( nReg+1 ) <= Len(cCat)
		cCatQuery += "," 
	Endif
Next nReg        
cCatQuery := "%" + cCatQuery + "%"

//Transforma parametros do tipo Range em expressao ADVPL para ser utilizada no filtro
MakeSqlExpr(cPerg)
	
BEGIN REPORT QUERY oSection

cFilSRACTT	:= "%" + FWJoinFilial("SRA", "CTT") + "%"
cFilSRASR6	:= "%" + FWJoinFilial("SRA", "SR6") + "%"	
cFilSRASQB	:= "%" + FWJoinFilial("SRA", "SQB") + "%"	

nOrdem		:= oSection:GetOrder()
If nOrdem == 1
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_MAT%"
ElseIf nOrdem == 2
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_CC,SRA.RA_MAT%"
ElseIf nOrdem == 3
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_NOME,SRA.RA_MAT%"
ElseIf nOrdem == 4
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_TNOTRAB%"
ElseIf nOrdem == 5
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_CC,SRA.RA_NOME%"
ElseIf nOrdem == 6
	cOrdem := "%SRA.RA_FILIAL,SRA.RA_DEPTO,SRA.RA_MAT%"
Endif

cQryProcesso := "%(SRA.RA_DEMISSA = '          ' OR (SRA.RA_DEMISSA >= '"+DTOS(dPerIni) + "' AND  SRA.RA_DEMISSA <> '          '))"
If !Empty(cProcesso)
	cQryProcesso += " AND SRA.RA_PROCES = '" + cProcesso + "' "	
Endif
cQryProcesso += "%"

BeginSql alias cAliasQry
	SELECT SRA.RA_FILIAL, SRA.RA_CC, SRA.RA_MAT, SRA.RA_NOME, SRA.RA_TNOTRAB, SRA.RA_DEMISSA,SRA.RA_ADMISSA,SRA.RA_SITFOLH,
		SRA.RA_CHAPA,SRA.RA_SEQTURN,SRA.RA_REGRA,
		CTT.CTT_FILIAL, CTT.CTT_CUSTO, CTT.CTT_DESC01,
		SR6.R6_TURNO, SR6.R6_DESC,
		SQB.QB_DEPTO, SQB.QB_DESCRIC
	FROM %table:SRA% SRA
	INNER JOIN %table:CTT% CTT ON RA_CC = CTT_CUSTO AND CTT.%NotDel% AND %exp:cFilSRACTT%
	INNER JOIN %table:SR6% SR6 ON RA_TNOTRAB = R6_TURNO AND SR6.%NotDel% AND %exp:cFilSRASR6%
	INNER JOIN %table:SQB% SQB ON RA_DEPTO = QB_DEPTO AND SQB.%NotDel% AND %exp:cFilSRASQB%
	WHERE SRA.RA_SITFOLH	IN	(%exp:Upper(cSitQuery)%) 	AND
		  SRA.RA_CATFUNC	IN	(%exp:Upper(cCatQuery)%)	AND
	      %exp:cQryProcesso% AND 
 	      SRA.%notDel%   
	ORDER BY %exp:cOrdem%
EndSql

If ( nColPro == 1 ) 
	END REPORT QUERY oSection PARAM mv_par05,mv_par06,mv_par07,mv_par08,mv_par09,mv_par10,mv_par20
Else
	END REPORT QUERY oSection PARAM mv_par04,mv_par05,mv_par06,mv_par07,mv_par08,mv_par09,mv_par19
Endif

DEFINE BREAK oBreakFil OF oSection WHEN {|| (cAliasQry)->RA_FILIAL }  TITLE OemToansi(STR0001) 
oBreakFil:SetPageBreak(.T.)
oBreakFil:SetHeaderBreak(.T.) 

DEFINE BREAK oBreakFun OF oSection WHEN {|| (cAliasQry)->RA_MAT }  TITLE OemToansi(STR0001) 
oBreakFun:SetHeaderBreak(.T.) 
If lImpFol
	oBreakFun:SetPageBreak(.T.) 
Endif
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Quebra de pagina C.Custo                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (nOrdem = 2 .or. nOrdem = 5) 
	DEFINE BREAK oBreakCc OF oSection WHEN {|| (cAliasQry)->RA_CC } TITLE OemToansi(STR0001) 
	If lCC 
		oBreakCc:SetPageBreak(.T.) 
		oBreakCc:SetHeaderBreak(.T.) 
	Endif 
ElseIf (nOrdem = 4) 
	DEFINE BREAK oBreakCc OF oSection WHEN {|| (cAliasQry)->RA_TNOTRAB } TITLE OemToansi(STR0001) 
	If lCC 
		oBreakCc:SetPageBreak(.T.) 
		oBreakCc:SetHeaderBreak(.T.) 
	Endif 
Endif 
oSection:SetHeaderSection(.T.)
oSection:SetHeaderBreak(.T.) 

oSection1:SetHeaderSection(.F.)
oSection1:SetHeaderBreak(.F.) 

oSection:lHeaderPage:=.F. 
oSection1:lHeaderPage:=.F. 

// Na quebra de pagina executa: Impressao da Linha do funcionario,pula linha,impressão do cabecalho das marcacoes, pula linha
oReport:OnPageBreak( {|| oReport:lOnPageBreak:= .F.,lHeaderMar := .T.,;
							If((oSection1:lPrinting ),;
								(oSection:PrintLine(),	;
									oReport:SkipLine(),;
									oSection1:SetHeaderSection(.T.),;
									oSection1:PrintHeader(),;
									oSection1:SetHeaderSection(.F.),;
									oReport:SkipLine();
								);
							,);
					 },.F. )

cFilAnte := (cAliasQry)->RA_FILIAL

// Verifica a existencia da tabela de Eventos para classificacao dos Abonos
DbSelectArea("SP9")
dbSetOrder(1)
If !DbSeek(xFilial("SP9",cFilAnte))
	If !DbSeek(Space(FWGETTAMFILIAL))
		(cAliasQry)->(DbSkip())
	   	Return
	Endif
Endif

// Carrega a tabela de Eventos para auxiliar a classificacao dos Abonos
cFilCompara := SP9->P9_FILIAL
aAutorizado := {}
While ! Eof() .AND. SP9->P9_FILIAL == cFilCompara
	If Subs(P9_IDPON,1,3) $ cCodigos
		Aadd(aAutorizado, {Left(P9_CODIGO,3), P9_DESC})
	Endif
	DbSkip()
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a variavel aInfo com a filial Logada              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fInfo(@aInfo,(cAliasQry)->RA_FILIAL)

If nSinAna == 1
	osection1:ACELL[1]:cTitle:=space(1)
	osection1:ACELL[2]:cTitle:=space(1)
	osection1:ACELL[3]:cTitle:=space(1)
Endif

//-- Define o total da regua da tela de processamento do relatorio
oReport:SetMeter( 100 )  

//-- Incializa impressao   
oSection:Init(.F.)                                                  

While !(cAliasQry)->( EOF() ) 

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta Regua de Processamento                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oReport:IncMeter( 1 )   

	//-- Verifica se o usuário cancelou a impressão do relatorio
	If oReport:Cancel()
		Exit
	EndIf               

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Posiciona o registro da query na tabela de Funcionarios                ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If !SRA->(dbSeek( (cAliasQry)->RA_FILIAL + (cAliasQry)->RA_MAT ))
		(cAliasQry)->(DbSkip())
	   	Loop
	Endif

	//-- Processa quebra de Filial.
	If (cAliasQry)->RA_FILIAL != cFilAnte 
	    //--Somente "Zera" as variaveis se jah foi impresso algo para nao pula 
	    //--de pagina na primeira vez

		cFilAnte := (cAliasQry)->RA_FILIAL

		// Carrega a tabela de Eventos para auxiliar a classificacao dos Abonos
		DbSelectArea("SP9")
		If !DbSeek(xFilial("SP9",cFilAnte))
			If !DbSeek(Space(FWGETTAMFILIAL))
			   	Exit
			Endif
		Endif

		// Carrega a tabela de Eventos para auxiliar a classificacao dos Abonos
		cFilCompara := SP9->P9_FILIAL
		aAutorizado := {}
		While ! Eof() .AND. SP9->P9_FILIAL == cFilCompara
			If Subs(P9_IDPON,1,3) $ cCodigos
				Aadd(aAutorizado, {Left(P9_CODIGO,3), P9_DESC})
			Endif
			SP9->(DbSkip())
		EndDo
		
		If Len(aAutorizado) == 0
			Exit
		Endif
		
		If !fInfo(@aInfo,(cAliasQry)->RA_FILIAL)
			Exit
		Endif	

	Endif

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Consiste Filiais e Acessos                                             ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	IF !( (cAliasQry)->RA_FILIAL $ fValidFil() ) .or. !Eval( cAcessaSRA )
		(cAliasQry)->(DbSkip())
	   	Loop
	EndIF


	//-- Cria Calendario com o periodo completo com Trocas de Turno
	aMarcacoes	:= {}
	aTabCalend	:= {}	

	//-- Carrega as Marcacoes do Periodo
	IF !GetMarcacoes( @aMarcacoes		,;	//01 -> Marcacoes dos Funcionarios
					  @aTabCalend		,;	//02 -> Calendario de Marcacoes
					  @aTabPadrao		,;	//03 -> Tabela Padrao
					  NIL				,;	//04 -> Turnos de Trabalho
					  dPerIni 			,;	//05 -> Periodo Inicial
					  dPerFim			,;	//06 -> Periodo Final
					  (cAliasQry)->RA_FILIAL	,;	//07 -> Filial
					  (cAliasQry)->RA_MAT		,;	//08 -> Matricula
					  (cAliasQry)->RA_TNOTRAB	,;	//09 -> Turno
					  (cAliasQry)->RA_SEQTURN	,;	//10 -> Sequencia de Turno
					  (cAliasQry)->RA_CC		,;	//11 -> Centro de Custo
					  "SP8"				,;	//12 -> Alias para Carga das Marcacoes
					  .F.    			,;	//13 -> Se carrega Recno em aMarcacoes
					  .T.      			,;	//14 -> Se considera Apenas Ordenadas
					  .T.      			,;	//15 -> Se Verifica as Folgas Automaticas
					  .F.      			,;	//16 -> Se Grava Evento de Folga Automatica Periodo Anterior
					  NIL				,;	//17 -> Se Carrega as Marcacoes Automaticas
					  NIL				,;	//18 -> Registros de Marcacoes Automaticas que deverao ser Desprezadas
					  NIL				,;	//19 -> Bloco para avaliar as Marcacoes Automaticas que deverao ser Desprezadas
					  .F.				,;	//20 -> Se Considera o Periodo de Apontamento das Marcacoes
					  .F.				,;	//21 -> Se Efetua o Sincronismo dos Horarios na Criacao do Calendario
					  .T.				,;  //Se considera data de apontamento
					  .T.				;	//Se considera data inicial					  
					)
		(cAliasQry)->(dbSkip())
		Loop
    EndIF

	//-- Obtem Qtde de Marcacoes
	nLenMarc:=Len(aMarcacoes)

	aDet := {}

	// 1 - Data
	// 2 - Codigo do Evento
	// 3 - Descricao do Evento
	// 4 - Descricao do Abono
	// 5 - Descricao do Abono
	// 6 - Quantidade de horas Abonadas
	// 7 - Marcacoes

	dbSelectArea( "SPC" )
	dbSetOrder(2)
	If DbSeek((cAliasQry)->RA_FILIAL + (cAliasQry)->RA_Mat )
		While SPC->(!Eof()) .And. SPC->PC_FILIAL+SPC->PC_Mat == (cAliasQry)->RA_FILIAL+(cAliasQry)->RA_Mat

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Consiste controle de acessos e filiais validas               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Eval(cAcessaSPC)
				SPC->(dbSkip())
				Loop
			EndIf

			//-- Verifica o Periodo Solicitado
			If Empty(SPC->PC_DATA) .OR. SPC->PC_DATA < dPerIni .OR. SPC->PC_DATA > dPerFim
				DbSkip()
				Loop
			Endif

			//-- Verifica se Deve Imprimir os Abonados
			If !lImpAbon .And. SPC->PC_QTABONO > 0
				dbSkip()
				Loop
			Endif

			//-- Utiliza o codigo informado qdo houver
			cPD := If(Empty(SPC->PC_PDI),SPC->PC_PD,SPC->PC_PDI)

			//-- Verifica se e um codigo contido na relacao de codigos 
			//-- definidas segundo avariavel cCodigos
			nPos := Ascan(aAutorizado,{ |x| x[1] = cPD })
            //-- Se o Codigo do Evento apontado  eh Valido
			If nPos > 0
				//-- Obtem a quantidade do evento apontando
				xQuant := If(SPC->PC_QUANTI>0,SPC->PC_QUANTI,SPC->PC_QUANTC)
                //-- Posiciona na TabCalend para a Data Lida
                nTab := aScan(aTabCalend, {|x| x[CALEND_POS_DATA] == SPC->PC_DATA .And. x[CALEND_POS_TIPO_MARC] == '1E' })
				//-- Se existir calendario para o apontamento
				//-- Obs.: Se um apontamento for digitado pode ocorrer de nao ter
				//--       uma data correspondente na TabCalend ???
				If nTab>0
			  	   //-- Obtem a Ordem para a Data Lida
			  	   dDataApo  := aTabCalend[nTab,CALEND_POS_DATA_APO] //-- Data de APontamento
				
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Obtem as Previsoes Cadastradas p/a Ordem Lida  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					aPrevFun:={}
					If lPrevisao 
					    nLenCalend:=Len(aTabCalend)
					    nPosTab:=nTab
						//-- Corre as Previsoes de mesma Ordem
						While dDataApo == aTabCalend[nPosTab,CALEND_POS_DATA_APO]
						    Aadd(aPrevFun,StrTran(StrZero(aTabCalend[nPosTab,CALEND_POS_HORA],5,2),'.',':'))
							//-- Obtem novo Horario	          			 
							nPosTab ++                  
							If	nPosTab > nLenCalend
							    Exit
							Endif    
						EndDo	
					Endif                                              
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Obtem as Marcacoes Realizadas para a Ordem Lida³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					aMarcFun:={}
					If lImpMar
						//-- A aMarcacoes ‚ setado para a 1a Marca‡„o do dia em quest„o.
						//-- de acordo com a dataapo da tabela
						nPosMarc:=Ascan(aMarcacoes,{|x| x[AMARC_DATAAPO]==dDataApo})
						//-- Se Existir Marcacao para o Dia
						If !Empty(nPosMarc)
							//--  Corre Todas as marcacoes enquanto a mesma data de apontamento
							While dDataApo == aMarcacoes[nPosMarc,AMARC_DATAAPO]
								  //-- Monta o array com as Marcacoes do funcionario para a ordem.
								  Aadd(aMarcFun,StrTran(StrZero(aMarcacoes[nPosMarc,2],5,2),'.',':'))
						 		  nPosMarc++
						 		  //-- Se o contador ultrapassar o total de Marcacoes abandona loop
						 		  If nPosMarc>nLenMarc
						 			 Exit
						 		  Endif   
							EndDo
					    Endif
				    Endif
				Endif

				aJustifica := {}
				If lImpMot
					//-- Verifica se existe abonos e posiciona registro de abono
					fAbonos(SPC->PC_DATA, aAutorizados[nPos,1],,@aJustifica,SPC->PC_TPMARCA,SPC->PC_CC,,SPC->PC_CODFUNC,SPC->PC_DEPTO,SPC->PC_POSTO,SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG)
        		Endif

				If nSinAna == 1	// Sintetica                  
				    //-- Sintetiza por Evento
					If (nPosDet:=Ascan(aDet,{ |x| x[2] = cPD .And. x[13] = SPC->PC_PROCES})) > 0
						aDet[nPosDet,4]:=SomaHoras(aDet[nPosDet,4],xQuant)
						//-- Acumula Abonado somente se Nao for imprimir os motivos do mesmo
						aDet[nPosDet,6]		:=If(Empty(aDet[nPosDet,6]),SomaHoras(aDet[nPosDet,6],SPC->PC_QTABONO),aDet[nPosDet,6])
						aDet[nPosDet,12]	:='A' //Ordem para Obrigar que esse seja o primeiro elemento
												  //apos o Sort do aDet	
				    Endif
 					//-- Acrescenta os motivos de abono para o evento
					If Len(aJustifica) > 0 .And. lImpMot
						For nX := 1 To Len(aJustifica)
							//-- Totaliza cada motivo para o mesmo evento
							If (nPosDet:=Ascan(aDet,{ |x| x[2] = cPD .AND. x[11]==aJustifica[nX,1] .And. x[13] = SPC->PC_PROCES })) > 0
								//-- Totaliza Abonos para mesmo motivo
								aDet[nPosDet,6]:=SomaHoras(aDet[nPosDet,6],aJustifica[nX,2])
							Else
								aAdd(aDet,{ SPC->PC_DATA, aAutorizado[nPos,1], aAutorizado[nPos,2] ,xQuant,;
								PADR(DescAbono(aJustifica[nX,1],'C'),25),;
								aJustifica[nX,2],aMarcFun,aPrevFun,SPC->PC_TPMARCA,SPC->PC_CC,	aJustifica[nX,1],'Z',;
								SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG})
							Endif
						Next nX
					Else
							If nPosDet==0
							   aAdd(aDet,{ SPC->PC_DATA, aAutorizado[nPos,1], aAutorizado[nPos,2] ,	xQuant,;
						       	SPACE(25),0,aMarcFun,aPrevFun,SPC->PC_TPMARCA,SPC->PC_CC,SPACE(3),'Z',;
						       	SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG})
						    Endif   	
					Endif
				Else
					If Len(aJustifica) > 0 .And. lImpMot
						For nX := 1 To Len(aJustifica)
		    	    	    aAdd(aDet,{ SPC->PC_DATA, aAutorizado[nPos,1], aAutorizado[nPos,2] , xQuant,;
							PADR(DescAbono(aJustifica[nX,1],'C'),25),aJustifica[nX,2],aMarcFun,aPrevFun,SPC->PC_TPMARCA,SPC->PC_CC,SPACE(3),'A',;
							SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG})
						Next nX
					Else
						aAdd(aDet,{ SPC->PC_DATA, aAutorizado[nPos,1], aAutorizado[nPos,2] ,	xQuant,;
						SPACE(25),0,aMarcFun,aPrevFun,SPC->PC_TPMARCA,SPC->PC_CC,SPACE(3),'A',;
						SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG})
					Endif
				Endif
			Endif
			SPC->(dbSkip())
		EndDo

	Endif

	// Verifica se não carregou as marcações e salta para o proximo funcionario
	If Len(aDet) == 0
		(cAliasQry)->(DbSkip())
		Loop
	Endif

	//-- O Sort para Analitico e por Data e ordem 
	If nSinAna==2
  	   aSort(aDet,,,{|x,y| Dtos(x[1])+x[12] < Dtos(y[1])+y[12]}) //Data+ordem de leitura
	Else 
		//-- O Sorte no Sintetico e por Evento 
		aSort(aDet,,,{|x,y|x[2]+x[12] < y[2]+y[12]}) //Data+ordem de leitura			
	Endif                  

	oSection:PrintLine()
	oReport:SkipLine()
	oSection1:Init(.F.) 

	If nSinAna == 2	.Or. lHeaderMar // Imprime cabecalho das marcacoes caso seja analitico
		oSection1:SetHeaderSection(.T.)
		oSection1:PrintHeader() 
		oSection1:SetHeaderSection(.F.)
		lHeaderMar := .F.
	Endif
		
	dDtMarc := CTOD(" / / ")
	For nFor := 1 to Len( aDet )

		cPrevDet := ""
		cRealDet := ""
		
		nLimite := Max(Len(aDet[nFor,7]),Len(aDet[nFor,8]))
		
	    If dDtMarc <> aDet[nFor,1]
		    dDtMarc := aDet[nFor,1]
			//-- Altera valores da Section
			For nX := 1 to nLimite
				If Len(aDet[nFor,8]) >= nX
					cPrevDet += aDet [ nFor , 8 , nX ] + Space(1)
				Endif
				If Len(aDet[nFor,7]) >= nX
					cRealDet += aDet [ nFor , 7 , nX ] + Space(1)
				Endif
			Next
		Endif

		If (lPrevisao  .AND. lImpMar)
			oSection1:Cell( "REALIZADO" ):SetValue(cRealDet)
			oSection1:Cell( "PREVISTO" ):SetValue(cPrevDet)
			oSection1:Cell( "DATA" ):SetValue( SubStr( Dtos(aDet[nFor,1]),7,2) + "/" + SubStr(Dtos(aDet[nFor,1]),5,2) )
		ElseIf (lPrevisao  .AND. !lImpMar)
			oSection1:Cell( "REALIZADO" ):SetValue(Space(24))
			oSection1:Cell( "PREVISTO" ):SetValue(cPrevDet)
			oSection1:Cell( "DATA" ):SetValue( SubStr( Dtos(aDet[nFor,1]),7,2) + "/" + SubStr(Dtos(aDet[nFor,1]),5,2) )
		ElseIf (!lPrevisao .AND.  lImpMar)
			oSection1:Cell( "REALIZADO" ):SetValue(cRealDet)
			oSection1:Cell( "PREVISTO" ):SetValue(Space(24))
			oSection1:Cell( "DATA" ):SetValue( SubStr( Dtos(aDet[nFor,1]),7,2) + "/" + SubStr(Dtos(aDet[nFor,1]),5,2) )
		ElseIf (!lPrevisao  .AND. !lImpMar)
			oSection1:Cell( "PREVISTO" ):SetValue(Space(24))
			oSection1:Cell( "REALIZADO" ):SetValue(Space(24))
			oSection1:Cell( "DATA" ):SetValue(Space(5))
		Endif

		oSection1:Cell( "ABONO" ):SetValue(aDet[nFor,2])
		oSection1:Cell( "DESCABONO" ):SetValue(aDet[nFor,3])
		oSection1:Cell( "HORAS" ):SetValue(STRTRAN(StrZero(aDet[nFor,4],6,2),".",":"))				

		oSection1:Cell( "PROCESSO" ):SetValue(aDet[nFor,13])
		oSection1:Cell( "PERIODO" ):SetValue(aDet[nFor,14])		
		oSection1:Cell( "ROTEIRO" ):SetValue(aDet[nFor,15])
		oSection1:Cell( "NUMPAGTO" ):SetValue(aDet[nFor,16])		

		If lImpMot .And. nSinAna == 2	// Imprime Motivo e relatorio quando for Analitico
			If !Empty(aDet[nFor,5]) //-- Evento Com Abonos a Imprimir na Data Lida
				//-- Motivo do Abono
				oSection1:Cell( "JUSTIFICATIVA" ):SetValue(aDet[nFor,5])				
				If aDet[nFor,6] > 0
					oSection1:Cell( "VISTO" ):SetValue(STRTRAN(StrZero(aDet[nFor,6],6,2),".",":"))				
				Endif
			Else
				oSection1:Cell( "JUSTIFICATIVA" ):SetValue(Repl("_",15))				
				oSection1:Cell( "VISTO" ):SetValue(Repl("_",12))				
			Endif
		Else
			oSection1:Cell( "JUSTIFICATIVA" ):SetValue(Repl("_",15))				
			oSection1:Cell( "VISTO" ):SetValue(Repl("_",12))				
		Endif

		//-- Imprime os conteudos da Section
	   	oSection1:PrintLine()
		oReport:SkipLine()
	Next

	oSection1:Finish()
	oReport:ThinLine()
	oReport:SkipLine()		

	(cAliasQry)->(DbSkip())

EndDo

oSection:Finish()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Termino do Relatorio                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If Select(cAliasQry) > 0
	(cAliasQry)->(dbCloseArea())
Endif

Return


//======>>>>>>>>>> DAQUI PARA BAIXO, TRATA-SE DO RELEASE 3
Function PONR050R3()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Locais (Basicas)                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cDesc1    := STR0001  // "Relatorio para Abono"
Local cDesc2    := STR0002  // "Ser  impresso de acordo com os parametros solicitados pelo"
Local cDesc3    := STR0003  // "usuario."
Local cString   :="SRA"        // alias do arquivo principal (Base)
Local aOrd 		:= {STR0004 ,STR0005 ,STR0006 ,STR0007 ,STR0020 , STR0033} // "Matricula"###"Centro de Custo"###"Nome"###"Turno"###"C.Custo+Nome"###"Departamento"
Local wnRel
Local cCodAut 	:= "008,010,012,014,018,020,022,032,034" //-- Codigos Autorizados
Local cCodNAut 	:= "007,009,011,013,017,019,021,033,035" //-- Codigos Nao Autorizados
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis PRIVATE(Basicas)                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aReturn := { STR0008 , 1,STR0009 , 1, 2, 1, "",1 } // "Zebrado"###"Administracao"
PRIVATE nomeprog:="PONR050"
PRIVATE aLinha  := { },nLastKey := 0
PRIVATE cPerg   := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis Utilizadas na funcao IMPR                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE Titulo  :=OemToAnsi(STR0001 ) // "Relatorio para Abono"
PRIVATE cCabec
PRIVATE AT_PRG  := "PONR050"
PRIVATE wCabec0 := 1
PRIVATE wCabec1 :=STR0011  // "Chapa Matr.  Funcionario                         Data   Cod Descricao            Horas  Justificativa                Visto"
PRIVATE CONTFL  :=1
PRIVATE LI      :=0
PRIVATE nTamanho:="N"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis PRIVATE(Programa)                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE nOrdem
PRIVATE lPrevisao:= .F.

Private cProcesso := Nil
Private cPeriodo  := Nil
Private cRoteiro  := Nil
Private cNumPagto := Nil
Private cDeptoDe
Private cDeptoAte
Private dPerIni   := CtoD("//")
Private dPerFim   := CtoD("//")
Private lPeriodo  := .F.
Private nColPro
Private oPeriodo  := RHPERIODO():New()

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica se deve imprimir por periodo ou datas			   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
If fOpcRadio(@nColPro, STR0001,;      //"Relatorio para Abono"
					   STR0026,;      //"Selecione a opcao de impressao:"
			   		   STR0027,;      //"Por Periodo"
			   		   STR0028 ) == 0 //"Por Datas"
	Return
EndIf
	
cPerg := IF(nColPro == 1,"PNR050A","PNR050B")


Pergunte(cPerg,.F.)
If ( nColPro == 1 ) 
	cProcesso := mv_par01			//Processo
	cPeriodo  := mv_par02			//Periodo
	cRoteiro  := mv_par03			//Roteiro
	cNumPagto := mv_par04			//Numero de Pagamento
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnrel:="PONR050"            //Nome Default do relatorio em Disco
wnrel:=SetPrint(cString,wnrel,cPerg,@Titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd,,nTamanho)

nOrdem   := aReturn[8]

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando variaveis mv_par?? para Variaveis do Sistema.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nColPro == 1 ) 
	lPeriodo  := .T.
	cProcesso := mv_par01			//Processo
	cPeriodo  := mv_par02			//Periodo
	cRoteiro  := mv_par03			//Roteiro
	cNumPagto := mv_par04			//Numero de Pagamento
	cDeptoDe  := mv_par05			//Depto De
	cDeptoAte := mv_par06			//Depto Ate		
	FilialDe  := mv_par07
	FilialAte := mv_par08
	CcDe      := mv_par09
	CcAte     := mv_par10
	TurDe     := mv_par11
	TurAte    := mv_par12
	MatDe     := mv_par13
	MatAte    := mv_par14
	NomDe     := mv_par15
	NomAte    := mv_par16
	cSit      := mv_par17
	cCat      := mv_par18
	lCC       := If(mv_par19 == 1,.T.,.F.)
	lImpAbon  := If(mv_par20 == 1,.T.,.F.)
	nTipo     := mv_par21
	nSinAna   := mv_par22
	lImpFol	  := If(mv_par23 == 1,.T.,.F.)
	lImpMot   := IF(mv_par24 == 1,.T.,.F.)
	lImpMar   := IF(mv_par25 == 1,.T.,.F.)
	RegDe     := mv_par26
	RegAte    := mv_par27
	lPrevisao := IF(mv_par28 == 1,.T.,.F.)  //.T. - Lista Horario Previsto
Else
	lPeriodo  := .F.
	cProcesso := mv_par01			//Processo
	dPerIni   := mv_par02
	dPerFim   := mv_par03
	cDeptoDe  := mv_par04			//Depto De
	cDeptoAte := mv_par05			//Depto Ate
	FilialDe  := mv_par06
	FilialAte := mv_par07
	CcDe      := mv_par08
	CcAte     := mv_par09
	TurDe     := mv_par10
	TurAte    := mv_par11
	MatDe     := mv_par12
	MatAte    := mv_par13
	NomDe     := mv_par14
	NomAte    := mv_par15
	cSit      := mv_par16
	cCat      := mv_par17
	lCC       := If(mv_par18 == 1,.T.,.F.)
	lImpAbon  := If(mv_par19 == 1,.T.,.F.)  
	nTipo     := mv_par20
	nSinAna   := mv_par21
	lImpFol	  := If(mv_par22 == 1,.T.,.F.)
	lImpMot   := IF(mv_par23 == 1,.T.,.F.)
	lImpMar   := IF(mv_par24 == 1,.T.,.F.)
	RegDe     := mv_par25
	RegAte    := mv_par26
	lPrevisao := IF(mv_par27 == 1,.T.,.F.)  //.T. - Lista Horario Previsto	
EndIf

If lPeriodo
	oPeriodo:cProcesso := cProcesso
	oPeriodo:cPeriodo  := cPeriodo
	oPeriodo:cRoteiro  := cRoteiro
	oPeriodo:cNumPagto := cNumPagto

	oPeriodo:GetPer()
	
	If !(oPeriodo:lFound )
		MsgInfo( OemToAnsi( oPeriodo:cMsgNotFoundPer ) )    //"Período de Apontamento não encontrado."
		Return
	EndIf
	
	dPerIni := oPeriodo:dDataIni
	dPerFim := oPeriodo:dDataFim
Else
	oPeriodo:dDataIni := dPerIni
	oPeriodo:dDataFim := dPerFim	
EndIf	

If dPerIni > dPerFim
   Help(" ",1,"PNR050DATA")
   Return Nil
Endif

If	nLastKey = 27
    Return Nil
Endif       

//-- Para Relatorio Sintetico nao imprime Previsao e/ou Marcacao
If nSinAna==1
   lPrevisao:=.F.
   lImpMar	:=.F.
Endif

//-- Altera Relatorio se Previsao e/ou Marcacao forem ou nao impressas
wCabec1 :=If(lPrevisao  .AND.  lImpMar ,PADR(STR0024+SPACE(17)+STR0025,51)+STR0011,;
          If(lPrevisao  .AND. !lImpMar ,PADR(STR0024,51)+STR0011,;
          If(!lPrevisao .AND.  lImpMar ,PADR(STR0025,51)+STR0011,;
              Padr(STR0012+SPACE(1)+STR0013+SPACE(2)+STR0014,51)+STR0011)))

SetDefault(aReturn,cString)

If nLastKey = 27
    Return Nil
Endif

// Identificadores de Ponto
If nTipo = 1 
	cCodigos := cCodaut
Elseif nTipo = 2
	cCodigos := cCodNAut
ElseIf nTipo = 3
	cCodigos := cCodAut+','+cCodNAut
Endif	

dInicio := dPerIni
dFim    := dPerFim

cCabec  := STR0001  // "Relatorio para Abono"

Titulo  := OemToAnsi(cCabec)

RptStatus({|lEnd| PO050Imp(@lEnd,wnRel,cString)},Titulo)

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PO050Imp ³ Autor ³ R.H. - J. Ricardo     ³ Data ³ 10.04.96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Relatorio para abono                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ PO050Imp(lEnd,wnRel,cString)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ lEnd        - A‡Æo do Codelock                             ³±±
±±³          ³ wnRel       - T¡tulo do relat¢rio                          ³±±
±±³Parametros³ cString     - Mensagem                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function PO050Imp(lEnd,WnRel,cString)
Local aAutorizado  := {}
Local aJustifica   := {}	//-- retorno Justificativa de abono
Local xQuant       := 0
Local nPos         := 0
Local cPD          := Space(03)
Local cAcessaSRA := &("{ || " + ChkRH("PONR050","SRA","2") + "}")
Local cAcessaSPC := &("{ || " + ChkRH("PONR050","SPC","2") + "}")
Local nTab	     :=0
Local nPosTab	 :=0
Local nPosDet	 :=0
Local nLenCalend :=0
Local aPrevFun   :={}
Local dDataApo   := CtoD("//")
Local nLimite    := 0
Local nX		 := 0
Local cCol1      := ''
Local cCol2      := ''
Local nFor		 := 0

Private cDet	 := ''
Private cDet1  	 := ''
Private cDet2	 := ''
Private cDet3	 := ''
Private cChave	 := ''
Private nVez	 := 0
Private cItem    := ''
Private lImpLinhas:= '' 


Private aDet       := {}
Private lCabec     := .F.
Private lCabecCC   := .F.
Private lCabecTT   := .F.
Private lPrimeira  := .T.
Private aMarcFun   := {}
Private aTabPadrao := {}
Private aTabCalend := {}
Private aMarcacoes := {}
Private nPosMarc   := 0 
Private nLenMarc   := 0

dbSelectArea( "SRA" )
dbGoTop()
DbSetOrder(nOrdem)
If nOrdem == 1
	dbSeek(FilialDe + MatDe,.T.)
	cInicio  := "SRA->RA_FILIAL + SRA->RA_MAT"
	cFim     := FilialAte + MatAte
ElseIf nOrdem == 2
	dbSeek(FilialDe + CcDe + MatDe,.T.)
	cInicio  := "SRA->RA_FILIAL + SRA->RA_CC + SRA->RA_MAT"
	cFim     := FilialAte + CcAte + MatAte
	lCabecCC := IF(!lImpFol,.T.,.F.)
ElseIf nOrdem == 3
	dbSeek(FilialDe + NomDe + MatDe,.T.)
	cInicio  := "SRA->RA_FILIAL + SRA->RA_NOME + SRA->RA_MAT"
	cFim     := FilialAte + NomAte + MatAte
ElseIf nOrdem == 4
	dbSeek(FilialDe + TurDe,.T.)
	cInicio  := "SRA->RA_FILIAL + SRA->RA_TNOTRAB"
	cFim     := FilialAte + TurAte
	lCabecTT := IF(!lImpFol,.T.,.F.)
ElseIf nOrdem == 5
	dbSetOrder(8)
	dbSeek(FilialDe + CcDe + NomDe,.T.)
	cInicio  := 'SRA->RA_FILIAL + SRA->RA_CC + SRA->RA_NOME'
	cFim     := FilialAte + CcAte + NomAte
ElseIf nOrdem == 6
	dbSetOrder(22)
	dbSeek(FilialDe + cDeptoDe + MatDe,.T.)
	cInicio  := 'SRA->RA_FILIAL + SRA->RA_DEPTO + SRA->RA_MAT'
	cFim     := FilialAte + cDeptoAte + MatAte	
Endif

SetRegua(SRA->(RecCount()))

cTurnoant    := "@@@"
cFilAnterior :=  Replicate("@", FwGetTamFilial)
cCcAnt       := Replicate('@',Len(SRA->RA_CC))
dbSelectArea( "SRA" )
While !EOF() .And. &cInicio <= cFim
	IncRegua()

	If lEnd
		IMPR(cCancela,"C")
		Exit
	EndIF

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Consiste controle de acessos e filiais validas               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !(SRA->RA_FILIAL $ fValidFil()) .Or. !Eval(cAcessaSRA)
		SRA->(dbSkip())
		Loop
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Consiste Parametrizacao do Intervalo de Impressao            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SRA->(;
				(  RA_TNOTRAB	< Turde ) .or. ( 	RA_TNOTRAB	> TurAte ) .or. ;
				(  RA_NOME 		< NomDe ) .or. ( 	RA_NOME 	> NomAte ) .or. ;
				(  RA_MAT 		< MatDe ) .or. ( 	RA_MAT 		> MatAte ) .or. ;
				(  RA_CC 		< CCDe  ) .or. ( 	RA_CC 		> CCAte	 ) .or. ;
				(  RA_REGRA		< RegDe ) .or. ( 	RA_REGRA	> RegAte ) .or. ;				
				(  RA_DEPTO		< cDeptoDe) .or. ( 	RA_DEPTO	> cDeptoAte	 );
			)
		SRA->(dbSkip())
		Loop
	EndIF	

	If !Empty(cProcesso)
		If SRA->RA_PROCES <> cProcesso
			SRA->( dbSkip() )
			Loop
		EndIf
	EndIf

	If  (SRA->RA_DEMISSA < dInicio .AND. ! Empty(SRA->RA_DEMISSA))
		SRA->(DbSkip())
		Loop
	Endif

	If !(SRA->RA_SITFOLH $ cSit) .Or. !(SRA->RA_CATFUNC $ cCat)
		DbSkip()
		Loop           // Testa Categoria e Situacao
	Endif

	If SRA->RA_FILIAL # cFilAnterior // quebra filial
		lCabec := .T.
		cFilAnterior := SRA->RA_FILIAL
		cTurnoAnt := "@@@"
		cCcAnt       := Replicate('@',Len(SRA->RA_CC))
		DbSelectArea("SP9")
		If !DbSeek(xFilial("SP9",cFilAnterior))
			If !DbSeek(Space(FWGETTAMFILIAL))
				Exit
			Endif
		Endif

		cFilCompara := SP9->P9_FILIAL
		aAutorizado := {}
		While ! Eof() .AND. SP9->P9_FILIAL = cFilCompara

			If Subs(P9_IDPON,1,3) $ cCodigos
				Aadd(aAutorizado,{Left(P9_CODIGO,3),P9_DESC})
			Endif
			DbSkip()
		EndDo
	Endif

	If nOrdem == 4 .And. cTurnoAnt # SRA->RA_TNOTRAB 
		If !lImpFol
			lCabecTT := .T.
		Endif
		cCcAnt    := Replicate('@',Len(SRA->RA_CC))
		cTurnoAnt := SRA->RA_TNOTRAB
	Endif

	If (nOrdem == 2 .Or. nOrdem == 5) .AND. SRA->RA_CC # cCcAnt
		If lCc
			lCabec := .T.
		Endif
		lCabecCC := .T.
	Endif
	
	cCcAnt := SRA->RA_CC
	cTurnoAnt := SRA->RA_TNOTRAB
	dDtMarc:=CtoD("  /  /  ")

	//-- Cria Calendario com o periodo completo com Trocas de Turno
	aMarcacoes	:= {}
	aTabCalend	:= {}
	
	//-- Carrega as Marcacoes do Periodo
	IF !GetMarcacoes( @aMarcacoes		,;	//01 -> Marcacoes dos Funcionarios
					  @aTabCalend		,;	//02 -> Calendario de Marcacoes
					  @aTabPadrao		,;	//03 -> Tabela Padrao
					  NIL				,;	//04 -> Turnos de Trabalho
					  dPerIni 			,;	//05 -> Periodo Inicial
					  dPerFim			,;	//06 -> Periodo Final
					  SRA->RA_FILIAL	,;	//07 -> Filial
					  SRA->RA_MAT		,;	//08 -> Matricula
					  SRA->RA_TNOTRAB	,;	//09 -> Turno
					  SRA->RA_SEQTURN	,;	//10 -> Sequencia de Turno
					  SRA->RA_CC		,;	//11 -> Centro de Custo
					  "SP8"				,;	//12 -> Alias para Carga das Marcacoes
					  .F.    			,;	//13 -> Se carrega Recno em aMarcacoes
					  .T.      			,;	//14 -> Se considera Apenas Ordenadas
					  .T.      			,;	//15 -> Se Verifica as Folgas Automaticas
					  .F.      			,;	//16 -> Se Grava Evento de Folga Automatica Periodo Anterior
					  NIL				,;	//17 -> Se Carrega as Marcacoes Automaticas
					  NIL				,;	//18 -> Registros de Marcacoes Automaticas que deverao ser Desprezadas
					  NIL				,;	//19 -> Bloco para avaliar as Marcacoes Automaticas que deverao ser Desprezadas
					  .F.				,;	//20 -> Se Considera o Periodo de Apontamento das Marcacoes
					  .F.				,;	//21 -> Se Efetua o Sincronismo dos Horarios na Criacao do Calendario
					  .T.				,;  //Se considera data de apontamento
					  .T.				;	//Se considera data inicial					  
					)
		Set Device to Screen
		Help(' ',1,'PONSCALEND')
		Set Device to Printer
		SRA->(dbSkip())
		Loop
    EndIF
	
	//-- Obtem Qtde de Marcacoes
	nLenMarc:=Len(aMarcacoes)

	aDet := {}

	// 1 - Data
	// 2 - Codigo do Evento
	// 3 - Descricao do Evento
	// 4 - Descricao do Abono
	// 5 - Descricao do Abono
	// 6 - Quantidade de horas Abonadas
	// 7 - Marcacoes

	dbSelectArea( "SPC" )
	dbSetOrder(2)
	If DbSeek(SRA->RA_FILIAL + SRA->RA_MAT )
		While !Eof() .And. SPC->PC_FILIAL+SPC->PC_MAT == SRA->RA_FILIAL+SRA->RA_MAT

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Consiste controle de acessos e filiais validas               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Eval(cAcessaSPC)
				SPC->(dbSkip())
				Loop
			EndIf

			//-- Verifica o Periodo Solicitado
			If Empty(SPC->PC_DATA) .OR. SPC->PC_DATA < dInicio .OR. SPC->PC_DATA > dFim
				DbSkip()
				Loop
			Endif

			//-- Verifica se Deve Imprimir os Abonados
			If !lImpAbon .And. SPC->PC_QTABONO > 0
				dbSkip()
				Loop
			Endif

			//-- Utiliza o codigo informado qdo houver
			cPD := If(Empty(SPC->PC_PDI),SPC->PC_PD,SPC->PC_PDI)

			//-- Verifica se e um codigo contido na relacao de codigos 
			//-- definidas segundo avariavel cCodigos
			nPos := Ascan(aAutorizado,{ |x| x[1] = cPD })
            //-- Se o Codigo do Evento apontado  eh Valido
			If nPos > 0
				//-- Obtem a quantidade do evento apontando
				xQuant := If(SPC->PC_QUANTI>0,SPC->PC_QUANTI,SPC->PC_QUANTC)
                //-- Posiciona na TabCalend para a Data Lida
                nTab := aScan(aTabCalend, {|x| x[CALEND_POS_DATA] == SPC->PC_DATA .And. x[CALEND_POS_TIPO_MARC] == '1E' })
				//-- Se existir calendario para o apontamento
				//-- Obs.: Se um apontamento for digitado pode ocorrer de nao ter
				//--       uma data correspondente na TabCalend ???
				If nTab>0
			  	   //-- Obtem a Ordem para a Data Lida
			  	   dDataApo  := aTabCalend[nTab,CALEND_POS_DATA_APO] //-- Data de APontamento
				
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Obtem as Previsoes Cadastradas p/a Ordem Lida  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					aPrevFun:={}
					If lPrevisao 
					    nLenCalend:=Len(aTabCalend)
					    nPosTab:=nTab
						//-- Corre as Previsoes de mesma Ordem
						While dDataApo == aTabCalend[nPosTab,CALEND_POS_DATA_APO]
						    Aadd(aPrevFun,StrTran(StrZero(aTabCalend[nPosTab,CALEND_POS_HORA],5,2),'.',':'))
							//-- Obtem novo Horario	          			 
							nPosTab ++                  
							If	nPosTab > nLenCalend
							    Exit
							Endif    
						EndDo	
					Endif                                              
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Obtem as Marcacoes Realizadas para a Ordem Lida³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					aMarcFun:={}
					If lImpMar
						//-- A aMarcacoes ‚ setado para a 1a Marca‡„o do dia em quest„o.
						//-- de acordo com a dataapo da tabela
						nPosMarc:=Ascan(aMarcacoes,{|x| x[AMARC_DATAAPO]==dDataApo})
						//-- Se Existir Marcacao para o Dia
						If !Empty(nPosMarc)
							//--  Corre Todas as marcacoes enquanto a mesma data de apontamento
							While dDataApo == aMarcacoes[nPosMarc,AMARC_DATAAPO]
								  //-- Monta o array com as Marcacoes do funcionario para a ordem.
								  Aadd(aMarcFun,StrTran(StrZero(aMarcacoes[nPosMarc,2],5,2),'.',':'))
						 		  nPosMarc++
						 		  //-- Se o contador ultrapassar o total de Marcacoes abandona loop
						 		  If nPosMarc>nLenMarc
						 			 Exit
						 		  Endif   
							EndDo
					    Endif
				    Endif
				Endif

				aJustifica := {}
				If lImpMot
					//-- Verifica se existe abonos e posiciona registro de abono
					fAbonos(SPC->PC_DATA, aAutorizados[nPos,1],,@aJustifica,SPC->PC_TPMARCA,SPC->PC_CC,,SPC->PC_CODFUNC,SPC->PC_DEPTO,SPC->PC_POSTO,SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG)
        		Endif

				If nSinAna == 1	// Sintetica                  
				    //-- Sintetiza por Evento
					If (nPosDet:=Ascan(aDet,{ |x| x[2] = cPD })) > 0
						aDet[nPosDet,4]:=SomaHoras(aDet[nPosDet,4],xQuant)
						//-- Acumula Abonado somente se Nao for imprimir os motivos do mesmo
						aDet[nPosDet,6]		:=If(Empty(aDet[nPosDet,6]),SomaHoras(aDet[nPosDet,6],SPC->PC_QTABONO),aDet[nPosDet,6])
						aDet[nPosDet,12]	:='A' //Ordem para Obrigar que esse seja o primeiro elemento
												  //apos o Sort do aDet	
				    Endif
 					//-- Acrescenta os motivos de abono para o evento
					If Len(aJustifica) > 0 .And. lImpMot
						For nX := 1 To Len(aJustifica)
							//-- Totaliza cada motivo para o mesmo evento
							If (nPosDet:=Ascan(aDet,{ |x| x[2] = cPD .AND. x[11]==aJustifica[nX,1]})) > 0
								//-- Totaliza Abonos para mesmo motivo
								aDet[nPosDet,6]:=SomaHoras(aDet[nPosDet,6],aJustifica[nX,2])
							Else
								aAdd(aDet,{ SPC->PC_DATA, aAutorizado[nPos,1], aAutorizado[nPos,2] ,xQuant,;
								PADR(DescAbono(aJustifica[nX,1],'C'),25),;
								aJustifica[nX,2],aMarcFun,aPrevFun,SPC->PC_TPMARCA,SPC->PC_CC,	aJustifica[nX,1],'Z',;
								SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG})
							Endif
						Next nX
					Else
							If nPosDet==0
							   aAdd(aDet,{ SPC->PC_DATA, aAutorizado[nPos,1], aAutorizado[nPos,2] ,	xQuant,;
						       	SPACE(25),0,aMarcFun,aPrevFun,SPC->PC_TPMARCA,SPC->PC_CC,SPACE(3),'Z',;
						       	SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG})
						    Endif   	
					Endif
				Else
					If Len(aJustifica) > 0 .And. lImpMot
						For nX := 1 To Len(aJustifica)
		    	    	    aAdd(aDet,{ SPC->PC_DATA, aAutorizado[nPos,1], aAutorizado[nPos,2] , xQuant,;
							PADR(DescAbono(aJustifica[nX,1],'C'),25),aJustifica[nX,2],aMarcFun,aPrevFun,SPC->PC_TPMARCA,SPC->PC_CC,SPACE(3),'A',;
							SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG})
						Next nX
					Else
						aAdd(aDet,{ SPC->PC_DATA, aAutorizado[nPos,1], aAutorizado[nPos,2] ,	xQuant,;
						SPACE(25),0,aMarcFun,aPrevFun,SPC->PC_TPMARCA,SPC->PC_CC,SPACE(3),'A',;
						SPC->PC_PROCES,SPC->PC_PERIODO,SPC->PC_ROTEIR,SPC->PC_NUMPAG})
					Endif
				Endif
			Endif
			DbSkip()
		EndDo

 		If Len(aDet) > 0
			//-- O Sort para Analitico e por Data e ordem 
			If nSinAna==2
		  	   aSort(aDet,,,{|x,y| Dtos(x[1])+x[12] < Dtos(y[1])+y[12]}) //Data+ordem de leitura
			Else 
   				//-- O Sorte no Sintetico e por Evento 
   				aSort(aDet,,,{|x,y|x[2]+x[12] < y[2]+y[12]}) //Data+ordem de leitura			
			Endif                  
			
			dDtMarc:=CtoD("  /  /  ")
			//-- Corre Cada Apontamento
			For nFor := 1 To Len(aDet)
				cDet :=""
				//Verifica a Quebra de Data
				If  dDtMarc<>aDet[nFor,1] 
				    //-- Monta Inicio das linhas
				    //-- se previsoes e/ou marcacoes forem impressas  a Cada Data
				    dDtMarc:=aDet[nFor,1]
				    nVez:=0
				    If lImpMar .OR. lPrevisao
						cDet1:=""	// Impressao da Continuacao das Marcacoes/Previsoes
						cDet2:=""	// Impressao da Continuacao das Marcacoes/Previsoes
						cDet3:=""	// Impressao da Continuacao das Marcacoes/Previsoes		
						nVez :=0    // Contador auxiliar para apontar as cDet's
						aMarc  :=aDet[nFor,7] 
						aPrev  :=aDet[nFor,8] 
						nPrev  :=Len(aPrev)
						nMarc  :=Len(aMarc)
						nLimite:=Max(nPrev,nMarc)
						cCol1  := ''
						cCol2  := ''
						
						For nX:=1 to nLimite      
						   //-- Imprime Marcacao, mas nao imprime Previsao
						   If !lPrevisao .AND. lImpMar
							    If nX > 8
									cDet1+=aMarc[nX]+" "
								Else
									cDet+=aMarc[nX]+" "
								Endif                                     
							//-- Imprime Previsao, mas nao imprime Marcacao	
						   ElseIf lPrevisao .AND. !lImpMar
						        If nX > 8
									cDet1+=aPrev[nX]+" "
								Else
									cDet+=aPrev[nX]+" "
								Endif                                     
							//-- Imprime Previsao e Marcacao	
						   Else
						   		//-- Monta Cada Coluna ao Total de 4 marcacoes cada uma
						   		cCol1 +=If(nX<=nPrev,aPrev[nX],SPACE(5)) +" "
							   	cCol2 +=If(nX<=nMarc,aMarc[nX],SPACE(5)) +" "
						   		Do Case
							   		//-- A Cada Multiplo de 4 ou se Ultima Marcacao e Linha
							   		//-- Vazia Preenche-a
							   		
							   		Case nX =4 .OR. (nX == nLimite .AND. Empty(cDet))
							   		  cDet:=Padr(cCol1,24)+"| "+Padr(cCol2,24)
							   		  cCol1:=cCol2:=''
									Case nX =8 .OR. (nX == nLimite .AND. Empty(cDet1))
							   		  cDet1:=Padr(cCol1,24)+"| "+Padr(cCol2,24)
							   		  cCol1:=cCol2:=''						   		  
							   		Case nX =12 .OR. (nX == nLimite .AND. Empty(cDet2))
							   		  cDet2:=Padr(cCol1,24)+"| "+Padr(cCol2,24)
							   		  cCol1:=cCol2:=''
						   	   		Case nX =16 .OR. (nX == nLimite .AND. Empty(cDet3))
							   		  cDet3:=Padr(cCol1,24)+"| "+Padr(cCol2,24)
							   		  cCol1:=cCol2:=''
						   		EndCase
	  					   Endif
						Next
						cDet :=Padr(cDet,51)                    
						cDet1:=Padr(cDet1,51)
	                	cDet2:=Padr(cDet2,51)
	                	cDet3:=Padr(cDet3,51)
	                Else
						//--Reinicializa Variaveis se nao for imprimir previsoes/marcacoes
						cDet1:=""	// Impressao da Continuacao das Marcacoes/Previsoes
						cDet2:=""	// Impressao da Continuacao das Marcacoes/Previsoes
						cDet3:=""	// Impressao da Continuacao das Marcacoes/Previsoes
	                Endif	
            	Endif         
                      
               
                //-- Se nao for a 1a. vez, altera o inicio das linhas referentes as marcacoes/previsoes
                //-- Acrescenta as Marcacoes/Previsoes
                If nVez>0
               		                              
					If nVez<4 //- Imprime as Demais cDet                
					    cItem		:=Alltrim(STR(nVez,0))
					    cDet		:=Padr(cDet&cItem,90)
					    cDet&cItem	:=''
					Endif
				Else
				   nVez++
				Endif

			    //-- Acrescenta Data/CodEvento/DescEvento/Hora
                If nvez>3 //Apos imprimir Todas as possiveis marcacoes/previsoes
                	cDet := If(nSinAna == 1,Space(90),Space(51)+'|'+Space(39))
                Else
					xQuant := StrZero(aDet[nFor,4],6,2)
					xQuant := STRTRAN(xQuant,".",":")
					
					cDet :=Padr(cDet,51)   
	            	//-- Se o Tipo de Apontamento for mesmo que o anterior nao imprime
	            	//-- Data/CodEvento/DescEvento/Hora
	            	If nFor > 1 .And.;
							((nSinAna == 2 	.AND. aDet[nFor-1,1] == aDet[nFor,1] ;  	//Data
						            		.AND. aDet[nFor-1,2] == aDet[nFor,2];  	//Evento 
						            		.AND. aDet[nFor-1,9] == aDet[nFor,9];  	//Tp.Marcacao
						            		.AND. aDet[nFor-1,10] == aDet[nFor,10]);  //C.C.
						    .OR.  ;
						    (nSinAna == 1 	.AND. aDet[nFor-1,2] == aDet[nFor,2]))  //Evento    
						   cDet+=If(nSinAna == 1,'','|')+Space(39)
					Else
						cDet += If(nSinAna == 1,Space(5),'|'+SubStr(Dtos(aDet[nFor,1]),7,2)+"/"+SubStr(Dtos(aDet[nFor,1]),5,2)) + "  " + aDet[nFor,2] + " " + aDet[nFor,3] + " "+ xquant + " "
					Endif
				Endif
				
				//-- Acrescenta Motivo ou Traco para Justificativa
				If lImpMot  
					If !Empty(aDet[nFor,5]) //-- Evento Com Abonos a Imprimir na Data Lida
						//-- Motivo do Abono
						cDet +=aDet[nFor,5] + Space(2)
						If aDet[nFor,6] > 0
							cDet+= " "+ STRTRAN(StrZero(aDet[nFor,6],6,2),".",":")
						Endif
 					Else
						cDet+= Repl("_",24) + Space(2) + Repl("_",15)
					Endif
				Else
					cDet+= Repl("_",24) + Space(2) + Repl("_",15)
				Endif

				If Li <> 60 .And. nFor > 1
					Impr(" ","C")
				Endif

                //--Imprime Nome Somente na 1a. Linha Detalhe
				F050ImprL(cDet,if(nFor > 1 .And. aDet[nFor-1,1] == aDet[nFor,1],.F.,.T.), nFor)

                //--Forca a Impressao das Marcacoes/Previsoes se Nao houver abonos e for o ultimo apontamento
		        //--ou se o proximo apontamento for de outra Data
		        If nFor+1<len(aDet)  
		           lImpLinhas:=If(Empty(aDet[nFor,5]) .AND. aDet[nFor+1,1]<>dDtMarc,.T.,.F.)
		        Else
		           lImpLinhas:=If(Empty(aDet[nFor,5]),.T.,.F.)
		        Endif                                       
		         
		        //--Imprime as Marcacoes/Previsoes se Nao Deseja imprimir o motivo do abono 
		        //-- ou forca a impressao das linhas
		        If !lImpMot  .OR. lImpLinhas
		           If !Empty(cDet1)
		              F050ImprL(cDet1,.F., nFor)
		              cDet1:=''
		           Endif 
		           If !Empty(cDet2)
		              F050ImprL(cDet2,.F., nFor)
		              cDet2:=''
		           Endif
		           If !Empty(cDet3)
		              F050ImprL(cDet3,.F., nFor)
		              cDet3:=''
		           Endif  
		        Endif

			Next nFor

			If Li <> 60
				Impr(Repl("-",132),"C")
			Endif

			If lImpFol
				Impr("","P")
				lCabec:=.T.
			Endif
		Endif
	Endif
	cChave := ''
	DbSelectArea("SRA")
	DbSkip()
Enddo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Termino do relatorio                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SP8" )
dbSetOrder(1)

dbSelectArea("SRA")
dbSetOrder(1)
Set Device To Screen
If aReturn[5] = 1
	Set Printer To
	Commit
	ourspool(wnrel)
Endif
MS_FLUSH()

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Imp_Cabec ³ Autor ³ J.Ricardo             ³ Data ³ 09/04/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Imprime o cabecalho do Relatorio de Presentes/Ausentes     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ POR030IMP                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
====================================================================================================
Chapa Matr.  Funcionario                    Data   Cod Descricao            Horas Justificativa                 Visto"
====================================================================================================
Filial: 01-123456789012345  Turno: 001-12345678901234567890    C.C: 123456789-1234567890123456789012 Depto: 
====================================================================================================
12345 123456 123456789012345678901234567890
99:99 99:99 99:99 99:99 99:99 99:99 99:99   99/99  999 1234567890123456789 999.99 12345678901234567890123456789 12345678901234567890
/*/
Static Function Imp_Cabec
Local cDet
cDet := STR0017 + SRA->RA_FILIAL + "-" + Left(SM0->M0_NOME+Space(15),15) //"Filial: "

Li   :=0

If lImpFol
	cDet+= STR0018+SRA->RA_TNOTRAB // " Turno: "
	cDet+= STR0019+ SUBSTR(SRA->RA_CC+SPACE(20),1,20) + "-" +; // "    C.C: "
    Left(DescCc(SRA->RA_CC,SRA->RA_FILIAL,30)+Space(30),30)
Endif

cDet+= Space(01)+STR0034+SRA->RA_DEPTO

IMPR(cDet,"C")
IMPR(Repl("=",132),"")
Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³f050ImprL ³ Autor ³ Aldo Marini Junior    ³ Data ³ 30/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Imprime detalhe verificando a necessidade de pulo de pagina³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³f050ImprL(cString)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ PONR010                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function f050ImprL(cString,lImpNome, nFor)
Local cNome:=SRA->RA_CHAPA + " " + SRA->RA_MAT + " " + Left(SRA->RA_NOME,30) + " "
Local lCab:=.F.
Local cDet1:=" "
Local cDetProc := ''
//-- Altera o SubCabec se analitico com impressao de previsao ou de marcacoes
If nSinAna == 2  .AND. (lPrevisao .OR. lImpMar)
   cNome:=STR0021+SRA->RA_CHAPA + " " + STR0022+SRA->RA_MAT + " " + STR0023+Left(SRA->RA_NOME,30) + SPACE(5)
Endif 
//-- Deve imprimir o nome ? 
lImpNome := If(lImpNome == Nil, .T., lImpNome)

// Caso seja primeira linha do Detalhe , imprime o Nome do Func.
If nFor == 1 .Or. Li == 60 .Or. Li == 8
	If Li == 60
		lCabec:=.T.

		If !lImpFol
			If nOrdem == 2 .Or. nOrdem == 5
				lCabecCC:=.T.
			Endif
			If nOrdem = 4 
				lCabecTT := .T.
			Endif
		Endif	
	Endif	

	If (lImpMar .OR. lPrevisao) .And. nSinAna == 2
		lCab:=.T.
	Else

		cString := SubStr(cString,50,Len(cString)-49)
		cString := cNome+Space(05)+cString
	Endif	
Endif

If lCabec
	Imp_Cabec()
	lCabec := .F.
Endif

If lCabecCC
		cDet1 := STR0015 + SUBSTR(SRA->RA_CC+SPACE(20),1,20) + "-" +; // "C.C: "
		Left(DescCc(SRA->RA_CC,SRA->RA_FILIAL,30)+Space(30),30)
	IMPR(cDet1,"C")
	If Li <> 60
		IMPR(REPLICATE("-",132),"C")
	Endif
	lCabecCC := .F.
Endif

If lCabecTT
	cDet1 := STR0018+SRA->RA_TNOTRAB +"-"+ fDescTno(SRA->RA_FILIAL,SRA->RA_TNOTRAB) // " Turno: "
	IMPR(cDet1,"C")
	If Li <> 60
		IMPR(REPLICATE("-",132),"C")
	Endif
	lCabecTT := .F.
Endif

If Li < 60
	If lCab .And. lImpNome
		IMPR(cNome,"C")
		lCab:=.F.
	Endif

Endif	

If Li == 60
	Imp_Cabec()
	If (nOrdem == 2 .Or. nOrdem == 5).And. !lImpFol
		cDet1 := STR0015 + SUBSTR(SRA->RA_CC+SPACE(20),1,20) + "-" +; // "C.C: "
		Left(DescCc(SRA->RA_CC,SRA->RA_FILIAL,30)+Space(30),30)
		IMPR(cDet1,"C")
		IMPR(REPLICATE("-",132),"C")
	Endif

	If nOrdem == 4 .And. !lImpFol
		cDet1 := STR0018+SRA->RA_TNOTRAB +"-"+ fDescTno(SRA->RA_FILIAL,SRA->RA_TNOTRAB) // " Turno: "
		IMPR(cDet1,"C")
		If Li <> 60
			IMPR(REPLICATE("-",132),"C")
		Endif
	Endif

	If (lImpMar .OR. lPrevisao) .And. nSinAna == 2
		IMPR(cNome,"C")
	Else
		cString := SubStr(cString,50,Len(cString)-49)
		cString := cNome+Space(05)+cString
	Endif	
Endif

If aDet[nFor,13]+aDet[nFor,14]+aDet[nFor,15]+aDet[nFor,16] <> cChave
	cDetProc := STR0029 + aDet[nFor,13] + ' - ' + STR0030 + aDet[nFor,14] + ' - ' + STR0031 + aDet[nFor,15] + ' - ' + STR0032 + aDet[nFor,16]
	IMPR(cDetProc,"C")
	cChave := aDet[nFor,13] + aDet[nFor,14] + aDet[nFor,15] + aDet[nFor,16]
EndIf

IMPR(cString,"C")

Return
/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr050Proc	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR01 para variavel private		³
|		   |cProcesso    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr050Proc(cTip)

Local lRet := .T.

cProcesso := &( ReadVar() )

If ( cTip == 'A' )
	lRet := PonX1Valid(cProcesso)
Else
	If !Empty(cProcesso)
		lRet := PonX1Valid(cProcesso)
	EndIf
EndIf

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr050Per	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR02 para variavel private		³
|		   |cPeriodo    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr050Per()

Local cChave := cProcesso
Local lRet := .T.

If !Empty(cRoteiro)
	cChave += cRoteiro
Else
	cChave += "PON"
EndIf

cPeriodo := &( ReadVar() )

cChave += cPeriodo

lRet := PonX1Valid(cChave)

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr050Rot	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR03 para variavel private		³
|		   |cRoteiro    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr050Rot()

Local lRet := .T.

cRoteiro := &( ReadVar() )

lRet := PonX1Valid(cProcesso+cRoteiro)

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o	   ³Pnr050NPag	 	³Autor³  Leandro Drumond  ³ Data ³18/04/2008³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Transferir o parametro MV_PAR04 para variavel private		³
|		   |cNumPag	    											    |
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL                      									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso	   ³Generica      										    	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pnr050NPag()

Local lRet := .T.

cNumPagto := &( ReadVar() )

lRet := PonX1Valid(cProcesso+cRoteiro+cPeriodo+cNumPagto)

Return( lRet )