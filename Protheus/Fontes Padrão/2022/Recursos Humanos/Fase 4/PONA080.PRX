#INCLUDE "PONA080.CH" 
#INCLUDE "PROTHEUS.CH"
   
Static lPna08001Block

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o  ³PONA080³Autor ³Equipe Advanced RH (Versao I ) ³Data³07/03/1996³±±
±±³        ³       ³      ³Marinaldo de Jesus (Versao II) ³Data³07/05/2003³±±
±±ÃÄÄÄÄÄÄÄÄÁÄÂÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Cadastro de tabela de hor rio padr„o.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³PONA080()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Generico                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Marinaldo   ³04/03/01³Melhor³ Exclusao da Funcao AcertaBase(), substitu³±±
±±³            ³--------³------³ icao de GetNewPar() por GetMv() e utiliza³±±
±±³            ³--------³------³ cao da GdFieldPos() para Retorno da  posi³±±
±±³            ³--------³------³ cao dos Campos no aHeader.               ³±±
±±³Marinaldo   ³04/03/01³Melhor³ A funcao fHrsTrabGat() foi Transferida p/³±±
±±³            ³--------³------³ O PonxFun()                              ³±±
±±³Marinaldo   ³03/05/01³Melhor³ Separacao dos Campos de Horas Trabalhadas³±±
±±³            ³--------³------³ de acordo com a Jornada.                 ³±±
±±³Marinaldo   ³23/10/01³Melhor³ Alteracao no Dialogo da GetDados         ³±±
±±³Marinaldo   ³28/01/02³Melhor³ Inclusao de Botao Para Facilitar a Digita³±±
±±³            ³--------³------³ cao das Horas Trabalhadas na Tabela de Ho³±±
±±³            ³--------³------³ rario. Esse Botao Servira para   Replicar³±±
±±³            ³--------³------³ as Informacoes entre os Dias da Semana  e³±±
±±³            ³--------³------³ de Acordo com o(s) campo(s) selecionados ³±±
±±³Marinaldo   ³28/01/02³Melhor³ Na Visualizacao da Tabela de Horario  nao³±±
±±³            ³--------³------³ digitar a Sequencia e Mostrar Todas as Se³±±
±±³            ³--------³------³ quencias da Tabela Selecionada.		  ³±±
±±³Marinaldo   ³29/01/02³Melhor³ Documentacao do Cabecalho da Funcao fMont³±±
±±³            ³--------³------³ aCols()								  ³±±
±±³Marinaldo   ³30/01/02³Melhor³ Na Visualizacao Mostrar o Numero de    Se³±±
±±³            ³--------³------³ quencias da atual Tabela de Horario e  na³±±
±±³            ³--------³------³ alteracao ou Exclusao Disponibilizar  Com³±±
±±³            ³--------³------³ bo para a Selecao das Sequencias  Existen³±±
±±³            ³--------³------³ tes									  ³±±
±±³Marinaldo   ³25/02/02³Melhor³ Nao carregar a GetDados quando nao existi³±±
±±³            ³--------³------³ rem dados na Tabela					  ³±±
±±³Marinaldo   ³28/02/02³Acerto³ Chamar o Metodo TudoOk() para validar   a³±±
±±³            ³--------³------³ linha da GetDados na confirmacao da  alte³±±
±±³            ³--------³------³ racao e inclusao da funcao Pn080TudoOk() ³±±
±±³Marinaldo   ³25/07/02³Melhor³ Verificar se a Sequencia selecionada para³±±
±±³            ³--------³------³ Exclusao pode ser Excluida				  ³±±
±±³Marinaldo   ³07/05/03³Melhor³ Redefinicao do Codigo. Foram feitas as se³±±
±±³            ³--------³------³ guintes alteracoes:       				  ³±±
±±³            ³--------³------³ 01 ) Permitir Alterar o conteudo de Todas³±±
±±³            ³--------³------³      as Sequencias                       ³±±
±±³            ³--------³------³ 02 ) Utilizacao de Query para a Carga das³±±
±±³            ³--------³------³      informacoes Quando Base TOP         ³±±
±±³            ³--------³------³ 03 ) Efetuar a Delecao a Partir do Recno ³±±
±±³            ³--------³------³ 04 ) Carregar Campo "Fantasma" para   ali³±±
±±³            ³--------³------³      nhamento da ultima coluna valida    ³±±
±±³            ³--------³------³ 05 ) Padronizacao dos Nomes das Funcoes  ³±±
±±³            ³--------³------³ 06 ) Possibilitar a Exclusao de Todas  as³±±
±±³            ³--------³------³      Sequencias da Tabela                ³±±
±±³            ³--------³------³ 07 ) Quando Existir mais de uma sequencia³±±
±±³            ³--------³------³      na Tabela so permitir a exclusao  se³±±
±±³            ³--------³------³      esta for feita da ultima   sequencia³±±
±±³            ³--------³------³      para a Primeira					  ³±±
±±³Marinaldo   ³08/05/03³Acerto³ Nao permitir a Gravacao de    Informacoes³±±
±±³            ³--------³------³ Inconsistentes quando Inclusao			  ³±±
±±³Marinaldo   ³27/05/03³Melhor³ Inclusao de Novo Botao para Consulta   ao³±±
±±³            ³--------³------³ Calendario de Marcacoes a Partir da  Tabe³±±
±±³            ³--------³------³ la de Horario ( SPJ )                    ³±±
±±³Marinaldo   ³03/07/03³Acerto³ Replicar as Informacoes de Todais        ³±±
±±³Marinaldo   ³26/09/03³Acerto³ Alterada Pona080Lok() para nao   permitir³±±
±±³            ³--------³------³ que o horario termine em uma saida de  in³±±
±±³            ³--------³------³ tervalo								  ³±±
±±³Marinaldo   ³01/12/03³Melhor³Garantir que, na inclusao, as   Sequencias³±±
±±³            ³--------³------³sejam sempre ordenadas de forma  crescente³±±
±±³            ³--------³------³para que nao haja intervalo entre uma   se³±±
±±³            ³--------³------³quencia e  outra , trazer  automaticamente³±±
±±³            ³--------³------³a proxima sequencia valida e verificar  se³±±
±±³            ³--------³------³excedeu o numero máximo de sequencias	  ³±±
±±³Marinaldo   ³03/12/03³Melhor³Inclusao de Novos botoes para   incremento³±±
±±³            ³--------³------³das datas na Montagem do Calendario   	  ³±±
±±³Marinaldo   ³19/04/04³Melhor³Tratamento de Lock nos Registros do SPJ   ³±±
±±³			   ³--------³------³ 11.5                      				  ³±±
±±³Emerson Camp³29/12/10³29591/³Ajuste para nova interface 11. Com a      ³±±
±±³			   ³--------³--2010³aplicação do parametro MV_ECMFTPP que     ³±±
±±³            ³--------³------³afirma ser a versão 11.5 do Protheus      ³±±
±±³Emerson Camp³04/07/11³15658/³Ajuste para nova interface 11. Com a      ³±±
±±³			   ³        ³  2010³aplicação do parametro MV_ECMFTPP que     ³±±
±±³            ³        ³      ³afirma ser a versão 11.5 do Protheus      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß/*/
Function PONA080()

Local lUseSPJ := ( SuperGetMv("MV_USESPJ",NIL,"0")  == "1" )

If lUseSPJ
	PONA080Old()
Else
	PONA420()
EndIf

Return ( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³PONA080Old³ Autor ³ Igor Franzoi	      ³ Data ³24/01/2007³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Funcao de utilizacao antiga tabela de horario padrao SPJ	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³PONA080Old()                                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080Old()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function PONA080Old()

Local aArea			:= GetArea()
Local aAreaSR6		:= SR6->( GetArea() )
Local aAreaSPJ		:= SPJ->( GetArea() )
Local aIndexSR6		:= {}		
Local cFiltraSR6	:= ""

DEFAULT lPna08001Block	:= ExistBlock( "PNA08001"	)

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ So Executa se os Modos de Acesso dos Arquivos Relacionados es³
	³ tiverm OK.												   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( ValidArqPon() )
		Break	
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se Existem Turnos de Trabalho Cadastrados           ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !ChkVazio( "SR6" )
		Break
	EndIF
	
	Private bFiltraBrw	:= { || NIL }
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Array contendo os tipos de Horas Extras               ³
	³ ----------- Elementos contidos por dimensao ------------     ³
	³ 1. Nome do Dia da Semana                                     ³
	³ 2. Tipo do Dia S=Trabal.,N=Nao Trab.,C=Compes.,D=D.S.R.      ³
	³ 3. Tipo de H.Extra 1-2-3 horas normais                       ³
	³ 4. Tipo de H.Extra 5-6-7 horas noturnas                      ³
	³ 5. Indice do Dia de Acordo com Dow()                         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	Private aDias :=	{  							   ;	
							{STR0052 ,"S","1","5","2"},;	// "Segunda"
							{STR0053 ,"S","1","5","3"},;	// "Terca"
							{STR0054 ,"S","1","5","4"},;	// "Quarta"
							{STR0055 ,"S","1","5","5"},;	// "Quinta"
							{STR0056 ,"S","1","5","6"},;	// "Sexta"
							{STR0057 ,"C","3","7","7"},;	// "Sabado"
							{STR0058 ,"D","2","6","1"} ;	// "Domingo"
						}	
	
	Private nLenaDias := Len( aDias )
	
	Private cSemana		:= Space( GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )
	Private cLstSemana	:= cSemana
	Private cCalc	:= "SPJ"
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Array contendo as Rotinas a executar do programa      ³
	³ ----------- Elementos contidos por dimensao ------------     ³
	³ 1. Nome a aparecer no cabecalho                              ³
	³ 2. Nome da Rotina associada                                  ³
	³ 3. Usado pela rotina                                         ³
	³ 4. Tipo de Transa‡„o a ser efetuada                          ³
	³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
	³    2 - Simplesmente Mostra os Campos                         ³
	³    3 - Inclui registros no Bancos de Dados                   ³
	³    4 - Altera o registro corrente                            ³
	³    5 - Remove o registro corrente do Banco de Dados          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	Private aRotina := MenuDef()
	
	Private cCadastro := OemToAnsi(STR0020 )	// "Tabela de Horario Padrao"
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	cFiltraRh	:= ChkRh("PONA080","SR6","1")
	bFiltraBrw 	:= { || FilBrowse( "SR6" , @aIndexSR6 , @cFiltraRH ) }
	Eval( bFiltraBrw )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Monta Browse Baseado no SR6 (Turnos de Trabalho) para a configuracao das³
	³Tabelas de Horario Padrao												 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	dbSelectArea ( "SR6" )
	SR6->( dbGoTop() )
	mBrowse( 06 , 01 , 22 , 75 , "SR6" )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Deleta o filtro utilizando a funcao FilBrowse                     	 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	EndFilBrw( "SR6" , @aIndexSr6 )

End Sequence
	
RestArea( aAreaSPJ )
RestArea( aAreaSR6 )
RestArea( aArea )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Elimina variavel Static                    	                         ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
lPna08001Block := NIL
Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Inc³ Autor ³ Marinaldo de Jesus    ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Inclus„o de tabelas de hor rio padr„o                       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona080Inc()                                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona080Inc( cAlias , nReg , nOpcx )

Local aColsRec	:= {}
Local aSpjKeys	:= {}
Local nOpcA		:= 0

cSemana  := Space( GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )

IF ( ChkVazio( "SR6" ) )
    nOpcA := Pona080Win( .F. , STR0026 , nOpcx , NIL , @aColsRec , NIL , @aSpjKeys )	// "  -  Inclus„o"
	FreeLocks( "SPJ" , aColsRec , .T. , aSpjKeys )
EndIF

Return( nOpcA ) 

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Alt³ Autor ³Marinaldo de Jesus     ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Altera‡„o de tabelas de hor rio padr„o                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona080Alt()                                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona080Alt( cAlias , nReg , nOpcx )

Local aColsRec	:= {}
Local aSpjKeys	:= {}
Local nOpcA		:= 0

cSemana	:= Space( GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )

nOpcA := Pona080Win( .T. , STR0028 , nOpcx , NIL , @aColsRec , NIL , @aSpjKeys )	// "  -  Altera‡„o"
FreeLocks( "SPJ" , aColsRec , .T. , aSpjKeys )

Return( nOpcA )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Vis³ Autor ³Marinaldo de Jesus     ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Visualiza‡„o de tabelas de hor rio padr„o                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona080Vis()	                                          	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona080Vis( cAlias , nReg , nOpcx )

Local aColsRec	:= {}
Local aSpjKeys	:= {}
Local lSeq		:= .F.
Local nOpcA		:= 0

cSemana	:= Space( GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )
nOpcA := Pona080Win( .T. , STR0029 , nOpcx , lSeq , @aColsRec , NIL , @aSpjKeys )	// "  -  Visualiza‡„o"
FreeLocks( "SPJ" , aColsRec , .T. , aSpjKeys )

Return( nOpcA )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Exc³ Autor ³ Marinaldo de Jesus    ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Exclus„o de tabelas de hor rio padr„o                       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona080Exc()                                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona080Exc( cAlias , nReg , nOpcx )

Local aRecnos	:= {}
Local aSeqDel	:= {}
Local aSeqAux	:= {}
Local aSeqAux1	:= {}
Local aLog		:= {}
Local aLogTitle	:= {}
Local aSpjKeys	:= {}
Local bCondDele	:= { || .F. }
Local cChave	:= ""
Local cMsg		:= ""
Local cSeq		:= ""
Local cUseAlias	:= ""
Local lChkDel	:= .T.
Local lDelOk	:= .T.
Local lDelAll	:= .F.
Local lGeraLog	:= .F.
Local nOpcA		:= 0
Local nSeq		:= 0
Local nSeqs		:= 0

cSemana	:= Space( GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )
nOpcA	:= Pona080Win( .T. , STR0032 , nOpcx , NIL , @aRecnos , @aSeqDel , @aSpjKeys ) // "  -  Dele‡„o"

IF ( nOpcA == 1 )
	IF ( lChkDel := MsgYesNo(	OemToAnsi(	STR0065 + ;	//""O Sistema Agora Ira efetuar a Verificacao para ver se a(s) Sequencia(s) selecionada(s)"
											CRLF	+ ;	
											STR0066	+ ;	//"para Exclusao esta(o) sendo utilizada(s)."
											CRLF	+ ;
											CRLF	+ ;	
											STR0081 + ; //"A verifica‡„o pode ser demorada !!"
											CRLF	+ ;
											CRLF	+ ;
											STR0067   ;	//"Confirma a exclus„o da(s) Sequencia(s)?"
					   					 ),;
			 					OemToAnsi( STR0068 ) ;	//"Aten‡„o"
							);
		)

		//"Deseja gerar Log?"###//"Aten‡„o"
		lGeraLog := MsgNoYes( OemToAnsi( STR0073 ), OemToAnsi( STR0068 )  ) 

		//"Excluir todas as sequencias da Tabela?"###"Exclus„o de Sequencias"
		lDelAll := MsgNoYes( OemToAnsi( STR0077 ) , OemToAnsi( STR0078 ) )
	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Verifica se vai Excluir Todas as Sequencias				  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF !( lDelAll )
			aAdd( aSeqAux , cSemana )
		Else
			aSeqAux := aClone( aSeqDel )
		EndIF
		
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Consistindo a Exclusao                       				  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		nSeqs := Len( aSeqAux )
		For nSeq := 1 To nSeqs
			cSeq := aSeqAux[ nSeq ]
			//"Consistindo a Sequencia: "
			MsAguarde( { || lChkDel := SR6->( Pona080DelChk( R6_FILIAL , R6_TURNO , cSeq , lGeraLog , @aLog , @aLogTitle , @cUseAlias ) ) } , NIL , STR0082 + cSeq + "..." )
			IF ( lChkDel )
				aAdd( aSeqAux1 , cSeq )
			Else
				lDelOk := .F.
			EndIF
		Next nSeq

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Exclusao da(s) Sequencia(s)                  				  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( lDelOk )
			nSeqs := Len( aSeqDel )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Verifica se a Sequencia a ser Excluida nao eh a Ultima	  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF !( lDelAll )
				IF ( nSeqs > 1.00 )
					nSeq := aScan( aSeqDel , { |x| x == cSemana } )
					lDelOk := ( nSeq >= nSeqs )
				EndIF
			EndIF	
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Se estiver tudo OK, Efetiva a Exclusao da(s) Sequencia(s)	  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( lDelOk )
				Begin Transaction
					nSeqs := Len( aSeqAux1 )
					For nSeq := 1 To nSeqs
						cSeq 		:= aSeqAux1[ nSeq ]
						cChave 		:= ( SR6->( R6_FILIAL + R6_TURNO ) + cSeq )
						bCondDele	:= { || PJ_FILIAL + PJ_TURNO + PJ_SEMANA == cChave }
						//"Excluido a Sequencia: "
						MsAguarde( { || PonDelRecnos( "SPJ" , aRecnos , bCondDele ) } , NIL , STR0083 + cSeq + "..." )
					Next nSeq
				End Transaction
			Else
				IF ( lGeraLog )
					//"A Sequencia ( Filial/Turno/Seq )###"Nao Pode ser Excluida."
					aAdd( aLog , STR0069 + R6_FILIAL + "/" + R6_TURNO + "/" + cSemana + " " + STR0079 ) 
					//"A Exclusao de Sequencia(s) deve ser feita da Ultima para a Primeira.
					aAdd( aLog , STR0080 ) 
				Else
					cMsg := ( STR0069 + R6_FILIAL + "/" + R6_TURNO + "/" + cSemana + " " )	//"A Sequencia ( Filial/Turno/Seq )
					cMsg += STR0079 														//"Nao Pode ser Excluida."
					cMsg += CRLF
					cMsg += STR0080															//"A Exclusao de Sequencia(s) deve ser feita da Ultima para a Primeira.
				EndIF	
			EndIF	
		EndIF		

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Verifica se Deve Gerar o Log								  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( ( lGeraLog ) .and. !( lDelOk ) )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Gera e Mostra o Log 										  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				10        20       30        40        50        60        70        80        90       100       110...
			1234567890123456789023456789012345678901234567890123456789012345678901234567890123456789012345678901234567890...
			Arquivo Registro   Conteudo
			XXX     9999999999 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX*/
			aAdd( aLogTitle , STR0072 )	//"Arquivo Registro   Chave/Conteudo"
			MsAguarde( { || fMakeLog( { aLog } , aLogTitle , NIL , NIL , FunName() , STR0071 ) } , STR0071 ) //"Log de Ocorrencias na Exclusao de Sequencias"
		ElseIF !( lDelOk )
			IF Empty( cMsg )
				cMsg := ( STR0074 + cUseAlias )	//"A Sequencia a ser excluida est  presente no"###"arquivo "
				cMsg += CRLF
				cMsg += STR0075					// "At‚ que as referˆncias a esta Sequencia sejam eliminadas,"
				cMsg += CRLF
				cMsg += STR0076					//"a mesma n„o pode ser excluida."
			EndIF
			MsgInfo( OemToAnsi( cMsg ) )
		EndIF
	EndIF
EndIF

FreeLocks( "SPJ" , aRecnos , .T. , aSpjKeys )
		
Return( nOpcA )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080DelChk	³Autor³Marinaldo de Jesus ³ Data ³25/07/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Verificar se uma Sequencia pode Ser Deletada                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080DelChk( cFil , cTno , cSeq , lGeraLog , aLog , aLogTitle , cUseAlias )
                
Local aArea		:= GetArea()
Local aAreas	:= Array( 02 )
Local cFilAux	:= ""
Local cConteudo	:= ""
Local cChave	:= ""
Local lDelOk	:= .T.
Local nArea		:= 0
Local nAreas	:= 0

aAreas[1] := SRA->( GetArea() )
aAreas[2] := SPF->( GetArea() )

Begin Sequence

	SRA->( dbSetOrder( RetOrdem( "SRA" , "RA_FILIAL+RA_TNOTRAB+RA_SEQTURN" ) ) )
	cFilAux	:= IF( Empty( cFil ) , xFilial("SRA") , cFil )

	cChave := ( cFilAux + cTno + cSeq )
	IF !( lDelOk := !( SRA->( dbSeek( cChave , .F. ) ) ) )
		IF !( lGeraLog )
			cUseAlias := "SRA"
			Break
		EndIF
		aAdd( aLog , STR0069 + cFil + "/" + cTno + "/" + cSeq + STR0070 ) //"A Sequencia ( Filial/Turno/Seq ) "###" nao pode ser Excluida pois esta sendo utilizada nos arquivos abaixo"
		aAdd( aLog , "" )
		aAdd( aLog , "" )
		While SRA->( !Eof() .and. RA_FILIAL + RA_TNOTRAB + RA_SEQTURN == cChave )
			cConteudo := SRA->( RA_FILIAL + "/" + RA_TNOTRAB + "/" + RA_SEQTURN + "/" + RA_MAT )
			aAdd( aLog , "SRA" + Space( 05 ) + SRA->( StrZero( Recno() , 10 )  + Space( 01 ) + AllTrim( &( IndexKey() ) ) + "/" + cConteudo ) )
			SRA->( dbSkip() )
		End While	
	EndIF
    
    cFilAux := IF( Empty( cFil ) , xFilial("SPF") , cFil )
	SPF->( dbSeek( cFilAux , .F. ) )
	While SPF->( !Eof() .and. PF_FILIAL == cFilAux )
		IF ( SPF->( PF_TURNODE + PF_SEQUEDE ) == ( cTno + cSeq ) ) .or. ;
		   ( SPF->( PF_TURNOPA + PF_SEQUEPA ) == ( cTno + cSeq ) )
			IF !( lGeraLog )
				lDelOk := .F. 
				cUseAlias := "SPF"
				Break
			EndIF
            IF Empty( aLog )
				lDelOk := .F.
				aAdd( aLog , STR0069 + cFil + "/" + cTno + "/" + cSeq + STR0070 ) //"A Sequencia ( Filial/Turno/Seq ) "###" nao pode ser Excluida pois esta sendo utilizada nos arquivos abaixo"
				aAdd( aLog , "" )
				aAdd( aLog , "" )
			EndIF	
			cConteudo := SPF->( PF_FILIAL + "/" + PF_MAT + "/" + PF_TURNODE + "/" + PF_SEQUEDE + "/" + PF_TURNOPA + "/" + PF_SEQUEPA )
			aAdd( aLog , "SPF" + Space( 05 ) + SPF->( StrZero( Recno() , 10 )  + Space( 01 ) + AllTrim( &( IndexKey() ) ) + "/" + cConteudo ) )
		EndIF
		SPF->( dbSkip() )
	End While

End Sequence

nAreas := Len( aAreas )
For nArea := 1 To nAreas
	RestArea( aAreas[ nArea ] )
Next nAreas
RestArea( aArea )

Return( lDelOk )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Win³ Autor ³Marinaldo de Jesus     ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Carregar as Tabelas de Horario Padrao para Manutencao ou  Vi³
³          ³sualizacao													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080Win(	lLe			,;
							cTitulo		,;
							nOpcx		,;
							lSeq		,;
							aColsRec	,;
							aSeq		,;
							aSpjKeys	 ;
						   )

Local aSvKeys		:= GetKeys()
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}
Local aNotFields	:= {}
Local aNotAltera	:= {}
Local aQueryCond	:= {}
Local aVirtual		:= {}
Local aVisual		:= {}
Local aButtonsEnch	:= {}
Local bSet15		:= { || nOpcA := 1 , IF( Prossegue(nOpcX,cSemana,lLe,@n,.T.,@aCols,aHeader,@aColsAll,aHeaderAll,nCountSeq, @nVezChk ) ,;
                                              If( oGet:TudoOk(), ;
                                                  ( RestKeys( aSvKeys , .T. ) , oDlg:End() ),;
                                                   nOpcA:= 0  ;
                                                ),;
                                              nOpcA := 0 ;
                                             ) ;
                       } 
Local bSet24		:= { || RestKeys( aSvKeys , .T. ) , oDlg:End() , nOpcA := 0 }
Local bReplicate	:= { || NIL }
Local bCalendario	:= { || NIL }
Local bValid		:= { || NIL }
Local bGetSpj		:= { || NIL }
Local cKey			:= ""
Local cKeyLock		:= ""
Local cAlias  		:= "SPJ"
Local lContinua		:= .F.
Local lExecLock		:= ( ( nOpcx == 3 ) .or. ( nOpcx == 4 ) .or. ( nOpcx == 5 ) )
Local lLocks		:= .T.
Local nOpcA			:= 0
Local nCountSeq		:= 0
Local nField		:= 0
Local nVezChk		:= 0
Local oDlg			:= NIL
Local oGet			:= NIL
Local oFont			:= NIL
Local oGroup		:= NIL	
Local oFontBig		:= NIL
Local oComboBox		:= NIL
Local oMsGet		:= NIL

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Monta a entrada de dados do arquivo                          ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Private aHeader		:= {}
Private aHeaderAll	:= {}
Private aCols		:= {}
Private aColsAll	:= {}
Private aAntColsAll	:= {}
Private aAltera  	:= {}
Private cFilSR6		:= SR6->R6_FILIAL
Private cTnoSR6		:= SR6->R6_TURNO
Private nUsado  	:= 0
Private nUsadoAll	:= 0
                	
DEFAULT lLe			:= .F.
DEFAULT lSeq		:= .T.
DEFAULT aColsRec	:= {}
DEFAULT aSeq		:= {}

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdvSize		:= MsAdvSize()
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
	aAdd( aObjCoords , { 000 , 025 , .T. , .F. } )
	aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
	aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta o Cabecalho do ArrayMain (aHeaderAll)				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aHeaderAll	:= GdMontaHeader(@nUsadoAll,@aVirtual,@aVisual,cAlias,aNotFields,.T.,.T.,.T.)
	aHeaderAll[GdFieldPos("PJ_DIA",aHeaderAll),4] := nLenaDias
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta Query para a Selecao das Informacoes                   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	#IFDEF TOP
		aQueryCond		:= Array( 05 )
		aQueryCond[01]	:= "PJ_FILIAL='"+cFilSR6+"'"
		aQueryCond[02]	:= " AND "
		aQueryCond[03]	:= "PJ_TURNO='"+cTnoSR6+"'"
		aQueryCond[04]	:= " AND "
		aQueryCond[05]	:= "D_E_L_E_T_=' ' "
	#ENDIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Detalhes conforme aHeaderAll    				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	cKey 		:= ( cFilSR6 + cTnoSR6 )
	IF ( lExecLock )
		aSpjKeys := {}
		cKeyLock := StrTran( cKey , " " , "_" )
		aAdd( aSpjKeys , cKeyLock )
		IF !( lLocks := WhileNoLock( "SPJ" , NIL , aSpjKeys , 1 , 1 , .T. , 1 , 5 ) )
			Break
		EndIF
	EndIF	
	bGetSpj		:= { |lLock,lExclu|	IF( lExecLock , ( lLock := .T. , lExclu	:= .T. ) , NIL ),;
											aColsAll := SPJ->(;
																GdMontaCols(	aHeaderAll	,;	//01 -> Array com os Campos do Cabecalho da GetDados
																				nUsadoAll	,;	//02 -> Numero de Campos em Uso
																				aVirtual	,;	//03 -> [@]Array com os Campos Virtuais
																				aVisual		,;	//04 -> [@]Array com os Campos Visuais
																				cAlias		,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
																				aNotFields	,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
																				@aColsRec	,;	//07 -> [@]Array unidimensional contendo os Recnos
																				cAlias		,;	//08 -> Alias do Arquivo Pai
																				cKey		,;	//09 -> Chave para o Posicionamento no Alias Filho
																				NIL			,;	//10 -> Bloco para condicao de Loop While
																				NIL			,;	//11 -> Bloco para Skip no Loop While
																				NIL			,;	//12 -> Se Havera o Elemento de Delecao no aCols 
																				NIL			,;	//13 -> Se cria variaveis Publicas
																				NIL			,;	//14 -> Se Sera considerado o Inicializador Padrao
																				NIL			,;	//15 -> Lado para o inicializador padrao
																				NIL			,;	//16 -> Opcional, Carregar Todos os Campos
																				NIL			,;	//17 -> Opcional, Nao Carregar os Campos Virtuais
																				aQueryCond	,;	//18 -> Opcional, Utilizacao de Query para Selecao de Dados
																				.F.			,;	//19 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
																				.F.			,;	//20 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
																				.T.			,;	//21 -> Carregar Coluna Fantasma
																				NIL			,;	//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
																				NIL			,;	//23 -> Verifica se Deve verificar se o campo eh usado
																				NIL			,;	//24 -> Verifica se Deve verificar o nivel do usuario
																				NIL			,;	//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols
																				@aSpjKeys	,;	//26 -> [@]Array que contera as chaves conforme recnos
																				@lLock		,;	//27 -> [@]Se devera efetuar o Lock dos Registros
																				@lExclu		 ;	//28 -> [@]Se devera obter a Exclusividade nas chaves dos registros
																		    );
															  ),;
											IF( lExecLock , ( lLock .and. lExclu ) , .T. );
		  			}
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Lock do Registro do SPJ									   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lLocks := WhileNoLock( "SPJ" , NIL , NIL , 1 , 1 , .T. , 1 , 5 , bGetSpj ) )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Consiste Informacoes Quando inclusao       				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nOpcX == 3 )	//Inclusao
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Quando nao Existirem Informacoes Para o Turno o Unico Elemento³
		³do aColsAll, Carregado pela GdMontaCols(), devera Ser Deletado³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( Len( aColsRec ) == 0 )
			IF !Empty( aColsAll )
				GdFieldPut( "GDDELETED" , .T. , 01 , aHeaderAll , @aColsAll )
			EndIF
		Else
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Na inclusao aColsRec devera Permanecer Vazio				   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			aColsRec := {}
		EndIF
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Quando nao Existirem Registros, Soh permitir a Inclusao      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpcX <> 3 ) .and. ( Len( aColsRec ) == 0 ) )
		Help(" ",1,"P080SP7NEX")
		Break
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Salva conteudo de aColsAll para Comparacao antes da Gravacao ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAntColsAll	:= aClone( aColsAll )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Campos Nao Alteraveis           					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aNotAltera , "PJ_DIA" 	)
	aAdd( aNotAltera , "PJ_SEMANA"	)
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Campos que nao Conterao na GetDados    					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aNotFields , "PJ_FILIAL"  )
	aAdd( aNotFields , "PJ_TURNO"  	)
	aAdd( aNotFields , "PJ_NMARCS" 	)
	aAdd( aNotFields , "PJ_MOUTDIA"	)
	IF ( lSeq )
		aAdd( aNotFields , "PJ_SEMANA"	)
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta o Cabecalho Real (aHeader )       					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nField := 1 To nUsadoAll
		IF ( aScan( aNotFields , aHeaderAll[ nField , 02 ] ) == 0 )
			++nUsado
			aAdd( aHeader , aClone( aHeaderAll[ nField ] ) )
		EndIF
	Next nField
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega os Campos Editaveis conforme aHeader				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nField := 1	To nUsado
		IF (;
				( aScan( aVirtual 		, aHeader[ nField , 02 ] ) == 0 ) .and. ;
		   		( aScan( aVisual  		, aHeader[ nField , 02 ] ) == 0 ) .and. ;
		   		( aScan( aNotFields		, aHeader[ nField , 02 ] ) == 0 ) .and. ;
		   		( aScan( aNotAltera		, aHeader[ nField , 02 ] ) == 0 )       ;
		  	)
			aAdd( aAltera , aHeader[ nField , 02 ] )
		EndIF			   
	Next nField
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica as Sequencias do Turno Corrente e carrega Tabela  Va³
	³ zia														   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aSeq := Pona080BldCols(	nOpcX 		,;	//01 ->	//Opcao do aRotina
							@aCols 		,;	//02 ->	//Array com os Detalhes para Alteracao
							aHeader		,;	//03 ->	//Cabecalho do aCols para Alteracao
							aColsAll	,;	//04 ->	//Array com Todos os Detalhes para o Turno
							aHeaderAll	,;	//05 ->	//Cabecalhjo do aColsAll
							lSeq		,;	//06 ->	//Se carregara ou nao a Sequencia
							.T.      	,;	//07 ->	//Se eh apenas para Contar as Sequencias
							@nCountSeq	 ;	//08 ->	//Numero de Sequencias
					   	  )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se Devera Continuar o Processo					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lContinua := ( ( lSeq ) .or. ( !( lSeq ) .and. ( nCountSeq > 0 ) ) ) )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta os Botoes para a EnchoiceBar             			  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( Inclui ) .or. ( Altera ) ) //Na Inclusao ou Alteracao
		//Adiciona Botao para Replicar os Horarios
		bReplicate	:= {|| (;
							 IF( (;
							 		!Empty( cSemana ) .and.;
							 		Pona080SPJChk(nOpcX,cSemana,lLe,@n,NIL,@aCols,aHeader,@aColsAll,aHeaderAll,nCountSeq);
							 	  ),;
								  (;
	            					IF(	Pona080RplMarc(	aClone( aHeader )	,;
	            										aClone( aCols	)	,;
														aClone( aAltera )	,;
														aClone( aVisual )	 ;
													  )						,;
										oGet:ForceRefresh(),;
										NIL;
								  	  );
							 		),;
									MsgInfo( OemToAnsi( STR0003 ) , OemToAnsi( STR0002 ) );//"Informe uma Sequˆncia V lida"###"Sequˆncia Inv lida"
							  	),;
								oDlg:bSet15 := bSet15		,;
								oDlg:bSet24 := bSet24		,;
								SetKey( 15 , oDlg:bSet15 )	,;
								SetKey( 24 , oDlg:bSet24 )	,;
								SetKey( VK_F4 , bReplicate ) ;
							); 
						}
		aAdd(; 
				aButtonsEnch ,;
								{;
									"DESTINOS"			,;
	    							bReplicate			,;
	        	   					OemToAnsi( STR0001 ),;//"Replicar Informa‡”es <F4>..."
	        	   					OemToAnsi( STR0299 ) ;//"Replicar"
	            				};
	         )					 	
	EndIF
	bCalendario	:= {|| (;
						 	Pona080Calend( ( ( Inclui ) .or. ( Altera ) ) )	,;
							oDlg:bSet15 := bSet15							,;
							oDlg:bSet24 := bSet24							,;
							SetKey( 15 , oDlg:bSet15 )						,;
							SetKey( 24 , oDlg:bSet24 )						,;
							SetKey( VK_F5 , bCalendario )					 ;
						); 
					}
	aAdd(; 
			aButtonsEnch ,;
							{;
								"S4SB014N"				,;
   		       					bCalendario				,;
   	    	   					OemToAnsi( STR0090 ) 	,;//"Consultar o Calend rio <F5>..."
   	    	   					OemToAnsi( STR0390 ) 	;//"Consultar"
   	        				};
   	     )
		
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Disponibiliza "DIALOG BOX" para Manutencao ou Visualizacao da³
	³ Tabela													   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	DEFINE FONT oFont		NAME "Arial" SIZE 0,-11 BOLD
	DEFINE FONT oFontBig	NAME "Arial" SIZE 07,25 BOLD
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0040) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL									   			// 'Tabela de Horario Padrao
	
		@ aObjSize[1,1], aObjSize[1,2] 		GROUP oGroup TO aObjSize[1,3],aObjSize[1,4]*0.80 	LABEL OemToAnsi(STR0042) OF oDlg PIXEL				// 'Turno:'
		oGroup:oFont:= oFont
		@ aObjSize[1,1], aObjSize[1,4]*0.805 	GROUP oGroup TO aObjSize[1,3],aObjSize[1,4] 		LABEL OemToAnsi(IF(lSeq,STR0043,STR0004))	OF oDlg PIXEL	// "Sequˆncia:"###//"No.Sequˆncias"
		oGroup:oFont:= oFont
	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Mostra a Descricao do Turno na Caixa de Dialogo			  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		@ aObjSize[1,1]+10, aObjSize[1,2]*2.5 SAY LEFT(SR6->( R6_TURNO+" - "+AllTrim(R6_DESC)),60) 	SIZE 250,10 OF oDlg PIXEL FONT oFontBig 
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Mostra a Sequencia de Turno na Caixa de Dialogo			  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( lSeq )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Monta o Bloco para Validacao                   			  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			bValid := { |lValid| lValid := Pona080SPJChk(nOpcX,cSemana,lLe,@n,.T.,@aCols,aHeader,@aColsAll,aHeaderAll,nCountSeq,( ++nVezChk > 1 ) ) ,;
								 IF( lValid , ( oGet:ForceRefresh() , oGet:oBrowse:SetFocus() , lValid ) , lValid ) }
			IF ( Inclui )
				cSemana := StrZero( ++nCountSeq , GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) )
				@ aObjSize[1,1]+10, aObjSize[1,4]*0.82  MSGET oMsGet VAR cSemana SIZE 010,10 OF oDlg PIXEL FONT oFont
				oMsGet:bValid := { || ( cSemana := StrZero( Val( cSemana ) , GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) ) ) ,;
									  ValidMaxSeq( nCountSeq ) .and. ChkSeqAnt( @cSemana ) .and. Eval( bValid );
								  }
			Else
				@ aObjSize[1,1]+10, aObjSize[1,4]*0.82 COMBOBOX oComboBox VAR cSemana ITEMS aSeq SIZE 025,10 OF oDlg PIXEL FONT oFont WHEN ( cLstSemana := cSemana , .T. )
				oComboBox:bChange:= bValid 				
			EndIF
		Else
		 	@ aObjSize[1,1]+10, aObjSize[1,4]*0.82 SAY StrZero( nCountSeq , GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) ) SIZE 025,10 OF oDlg PIXEL FONT oFontBig
		EndIF
		
		oGet := MsGetDados():New(aObjSize[2,1],aObjSize[2,2],aObjSize[2,3],aObjSize[2,4],nOpcx,"Pona080Lok","Pona080Tok","",NIL,aAltera,NIL,NIL,nLenaDias)
			
	ACTIVATE MSDIALOG oDlg ON INIT (;
													IF( ValType( oComboBox ) == "O",;
															Eval( oComboBox:bChange ),;
															NIL;
													   ),;		
													SetKey( VK_F4 , bReplicate  )		,;
													SetKey( VK_F5 , bCalendario )		,;
													EnchoiceBar(	oDlg				,;
																	bSet15				,;
	        	 		                  							bSet24				,;
																   	NIL					,;
		            												aButtonsEnch		 ;
	         				                  		   			);
	         				                  	 )	   			

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura as Teclas de Atalho                     	  		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RestKeys( aSvKeys , .T. )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Grava as Informacoes no SPJ                      	  		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpcx == 3 .or. nOpcx == 4 ) .and. ( nOpcA == 1 ) )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Transfere os Dados do aCols para o aColsAll                  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		Pona080AllTrf( aCols , aHeader , @aColsAll , aHeaderAll , cSemana )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Apenas se Houveram Modificacoes                  	  		  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF !( fCompArray( aAntColsAll , aColsAll ) )
			Pona080Grava( aColsRec , nOpcX , cSemana )
		EndIF
	EndIF

End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Carrega Chave para Liberacao do Lock						   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lExecLock )
	aAdd( aSpjKeys , cKeyLock )
EndIF

Return( nOpcA )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³ChkSeqAnt	 ³Autor³Marinaldo de Jesus	  ³ Data ³01/12/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Garantir que as Sequencias na Tabela sejam cadastradas em or³
³          ³dem															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function ChkSeqAnt( cSeqAtu , lMaxSeq )

Local lSeqOk	:= .T.

Local bSeqOk
Local cSeqAnt
Local nSeq
Local nTamSeq

DEFAULT lMaxSeq := .F.

Begin Sequence

	nSeq	:= Val( cSeqAtu )

	IF ( nSeq == 1 )
		Break
	EndIF

	cSeqAnt	:= cSeqAtu
	nTamSeq	:= GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" )

	IF ( nSeq < 1 )
		nSeq := 1
		cSeqAtu := StrZero( nSeq , nTamSeq )
		Break
	EndIF

	cSeqAnt := StrZero( --nSeq , nTamSeq )
	bSeqOk	:= { || SPJ->( dbSeek( xFilial( "SPJ" ) + SR6->R6_TURNO + cSeqAnt , .F. ) ) }
	IF ( lSeqOk := Eval( bSeqOk ) )
		Break
	Else
		cSeqAtu := cSeqAnt
		While !( lSeqOk := ChkSeqAnt( @cSeqAtu , @lMaxSeq ) )
			IF ( lMaxSeq )
				Break
			EndIF
			cSeqAnt := StrZero( --nSeq , nTamSeq )
			cSeqAtu := cSeqAnt
		End While
	EndIF
	
	IF Empty( StrTran( cSeqAtu , "*" , "" ) )
		cSeqAtu := Str( RetMaxSeq() + 1 )
	EndIF
	nSeq := Val( cSeqAtu )
	
	IF ( lMaxSeq := !( lSeqOk := ValidMaxSeq( nSeq ) ) )
		cSeqAtu	:= StrZero( --nSeq , nTamSeq )
		Break
	EndIF

End Sequence

Return( lSeqOk )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³RetMaxSeq	 ³Autor³Marinaldo de Jesus	  ³ Data ³02/12/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Retorna o Numero Maximo de Sequencias Permitidas para a Tabe³
³          ³la de Horario Padrao										³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function RetMaxSeq()

Local nTamSeq	:= GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" )
Local nMaxSeq	:= Val( Replica( "9" , nTamSeq ) )

Return( nMaxSeq )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³ValidMaxSeq	 ³Autor³Marinaldo de Jesus	  ³ Data ³02/12/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validar o Numero Maximo de Sequencias Permitidas para a Tabe³
³          ³la de Horario Padrao										³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function ValidMaxSeq( nSeqAtu )

Local cMsg
Local lNoMaxSeq

IF !( lNoMaxSeq := ( nSeqAtu <= RetMaxSeq() ) )
	cMsg := STR0097 //"Excedeu o N£mero de Sequencias.
	cMsg += CRLF + CRLF
	cMsg += STR0098	//"Sequencia Atual:
	cMsg += AllTrim( Str( nSeqAtu ) )
	cMsg += CRLF + CRLF
	cMsg += STR0099 //M ximo permitido: 
	cMsg += AllTrim( Str( RetMaxSeq() ) )
	MsgInfo( OemToAnsi( cMsg ) , OemToAnsi( STR0068 ) )	//"Aten‡„o"
EndIF

Return( lNoMaxSeq )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Grava³Autor³ Marinaldo de Jesus	  ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Gravar Informacoes no SPJ                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080Grava( aColsRec , nOpcX , cSemana )

Local aColsAux		:= {}
Local aCposPos		:= {}
Local lAddNew		:= .F.
Local nCol			:= 0
Local nCols			:= Len( aColsAll	)
Local nField		:= 0
Local nFields		:= Len( aHeaderAll	)
Local nRec			:= 0
Local nRecnos		:= Len( aColsRec 	)
Local nPosField		:= 0
Local nPosDeleted	:= GdFieldPos( "GDDELETED" , aHeaderAll )
Local nPosSemana	:= GdFieldPos( "PJ_SEMANA" , aHeaderAll )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Obtem o Posicionamento dos Campos                	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
For nField := 1 To nFields 
	nPosField := SPJ->( FieldPos( aHeaderAll[ nField , 02 ] ) )
	aAdd( aCposPos , { aHeaderAll[ nField , 02 ] , nPosField } )
Next nField

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Elimina os Elementos Deletados do aColsAll       	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( aScan( aColsAll , { |x| x[ nPosDeleted ] } ) > 0 )
	For nCol := 1 To nCols
		IF ( aColsAll[ nCol , nPosDeleted ] )
			Loop
		EndIF
		aAdd( aColsAux , aClone( aColsAll[ nCol ] ) )
	Next nCol
	aColsAll := aClone( aColsAux )
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Na Inclusao soh Inclui os Novos Registros         	  	  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( nOpcX == 3 )
	IF ( aScan( aColsAll , { |x| ( x[ nPosSemana ] <> cSemana ) } ) > 0 )
		For nCol := 1 To nCols
			IF !( aColsAll[ nCol , nPosSemana ] == cSemana )
				Loop
			EndIF
			aAdd( aColsAux , aClone( aColsAll[ nCol ] ) )
		Next nCol
		aColsAll := aClone( aColsAux )
	EndIF	
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica se Deve Adicionar novos Registros       	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lAddNew := ( nRecnos == 0 ) )
	nRecnos := Len( aColsAll )
EndIF

Begin Transaction
	nFields := Len( aCposPos )
	IF ( nRecnos > 0 )
		For nRec := 1 To nRecnos
			IF !( lAddNew )
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Soh grava o que efetivamente foi alterado        	  		  ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF ( fCompArray( aColsAll[ nRec ] , aAntColsAll[ nRec ] ) )
					Loop
				EndIF
				SPJ->( dbGoto( aColsRec[ nRec ] ) )
			EndIF
			IF SPJ->( RecLock( "SPJ" , lAddNew ) )
				For nField := 1 To nFields
					IF ( ( nPosField := aCposPos[ nField , 02 ] ) > 0 )
						SPJ->( FieldPut( nPosField , aColsAll[ nRec , nField ] ) )
					EndIF
				Next nField
				SPJ->( MsUnlock() )
			EndIF	
		Next nRec
	EndIF
	SPJ->( EvalTrigger() )
End Transaction

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Lok  ³Autor³Marinaldo de Jesus     ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Critica linha digitada                                      ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona080Lok( oBbj )
         
Local cMsgInfo		:= ""
Local lRet			:= .T.
Local nCtMarc		:= 0      
Local nX			:= 0
Local nHeader		:= Len( aHeader )
Local nPosTpDia		:= GdFieldPos( 'PJ_TPDIA'   )
Local nPosHr1		:= GdFieldPos( 'PJ_HRSTRAB' )
Local nPosHr2		:= GdFieldPos( 'PJ_HRSTRA2' ) 
Local nPosHr3		:= GdFieldPos( 'PJ_HRSTRA3' )
Local nPosHr4		:= GdFieldPos( 'PJ_HRSTRA4' )
Local nPosTot		:= GdFieldPos( 'PJ_HRTOTAL' ) 
Local nPosHi1		:= GdFieldPos( 'PJ_HRSINT1' ) 
Local nPosHi2   	:= GdFieldPos( 'PJ_HRSINT2' ) 
Local nPosHi3		:= GdFieldPos( 'PJ_HRSINT3' )
Local nPosMen		:= GdFieldPos( 'PJ_HORMENO' ) 
Local nPosMai		:= GdFieldPos( 'PJ_HORMAIS' )

Begin Sequence

	//-- Nao permite campos em branco
	For nX := 1 To nHeader
		IF Subs(aHeader[nX,2],1,8) $ 'PJ_ENTRA*PJ_SAIDA'
			IF aCols[n,nX] > 0 .or. (aCols[n,nX] == 0 .and. Subs(aHeader[Min(nHeader,nX+1),2],1,8)$"PJ_ENTRA,PJ_SAIDA" .and. aCols[n,nX+1] > 0) .or. aCols[n,nX] == 0 .and. nCtMarc%2 # 0
				nCtMarc++
			EndIF
		EndIF
	Next nX
	
	IF nCtMarc > 0 .and. nCtMarc % 2 > 0 .and. aCols[n, nPosTpDia] == 'S'
		// Nao sao permitidas marcacoes impares.
		Help(' ',1,'PNA080MPAR')
		lRet := .F.
		Break
	EndIF
	
	IF Empty( aCols[ n , nPosMen ] ) .or. Empty( aCols[ n , nPosMai ] )
		// Horas Inferior ou Horas Superior Nao podem ser zero
		IF Empty( aCols[ n , nPosMen ] )
			Help(' ',1,'HORMAMEZER',,STR0060 + aHeader[ nPosMen , 01 ] + " - " + aHeader[ nPosMen , 02 ]  , 5 , 0 ) //"Campo: "	
		Else
			Help(' ',1,'HORMAMEZER',,STR0060 + aHeader[ nPosMai , 01 ] + " - " + aHeader[ nPosMai , 02 ] , 5 , 0 ) //"Campo: "
		EndIF
		lRet := .F. 
		Break
	EndIF
	
	//Grava Horas Trabalhadas 1a. Jornada
	IF !Empty( nPosHr1 )
		aCols[ n , nPosHr1 ] := fHrsTrabGat( "H" ,,, "1" )
	EndIF
	
	//Grava Horas Trabalhadas 2a. Jornada
	IF !Empty( nPosHr2 )
		aCols[ n , nPosHr2 ] := fHrsTrabGat( "H" ,,, "2" )
	EndIF
	
	//Grava Horas Trabalhadas 3a. Jornada
	IF !Empty( nPosHr3 )
		aCols[ n , nPosHr3 ] := fHrsTrabGat( "H" ,,, "3" )
	EndIF
	
	//Grava Horas Trabalhadas 4a. Jornada
	IF !Empty( nPosHr4 )
		aCols[ n , nPosHr4 ] := fHrsTrabGat( "H" ,,, "4" )
	EndIF
	
	//Grava Horas 1o. Intervalo
	IF !Empty( nPosHi1 )
		aCols[ n , nPosHi1 ] := fHrsTrabGat( "I",,,"1" )
	EndIF
	
	//Grava Horas 2o. Intervalo
	IF !Empty( nPosHi2 )
		aCols[ n , nPosHi2 ] := fHrsTrabGat( "I",,,"2" )
	EndIF
	
	//Grava Horas 3o. Intervalo
	IF !Empty( nPosHi3 )
		aCols[ n , nPosHi3 ] := fHrsTrabGat( "I",,,"3" )
	EndIF
	
	//Grava Total de Horas ( Trabalhadas + Intervalo )
	IF !Empty( nPosTot )
		aCols[ n , nPosTot ] := 0
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHi1 ] )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHi2 ] )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHi3 ] )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHr1 ] )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHr2 ] )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHr3 ] )
		aCols[ n , nPosTot ] := __TimeSum( aCols[ n , nPosTot ] , aCols[ n , nPosHr4 ] )
	EndIF
	
	//Verifica se Existe Saida de Intervalo sem Entrada correspondente
	IF ( ( ( aCols[ n , nPosHi1 ] <> 0 ) .or. ( GdFieldGet( 'PJ_INTERV1' ) == "S" ) ) .and. ( aCols[ n , nPosHr2 ] == 0 ) )
		lRet		:= .F.
		cMsgInfo	:= STR0092  //"Tabela n„o pode terminar com uma saida de intervalo"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0093	//"O intervalo: "
		cMsgInfo	+= " 1 "
		cMsgInfo	+= STR0094  //"Nao possui a entrada correspondente"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0095  //"Altere o conteudo do campo: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_INTERV1' ) , 01 ]
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo    += STR0096	//"ou informe Hor rio nos campos: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_ENTRA2' ) , 01 ]
		cMsginfo	+= " / " 
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_SAIDA2' ) , 01 ]
		Break		
	EndIF

	//Verifica se Existe Saida de Intervalo sem Entrada correspondente
	IF ( ( ( aCols[ n , nPosHi2 ] <> 0 ) .or. ( GdFieldGet( 'PJ_INTERV2' ) == "S" ) ) .and. ( aCols[ n , nPosHr3 ] == 0 ) )
		lRet		:= .F.
		cMsgInfo	:= STR0092  //"Tabela n„o pode terminar com uma saida de intervalo"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0093	//"O intervalo: "
		cMsgInfo	+= " 2 "
		cMsgInfo	+= STR0094  //"Nao possui a entrada correspondente"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0095  //"Altere o conteudo do campo: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_INTERV2' ) , 01 ]
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo    += STR0096	//"ou informe Hor rio nos campos: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_ENTRA3' ) , 01 ]
		cMsginfo	+= " / " 
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_SAIDA3' ) , 01 ]
		Break		
	EndIF

	//Verifica se Existe Saida de Intervalo sem Entrada correspondente
	IF ( ( ( aCols[ n , nPosHi3 ] <> 0 ) .or. ( GdFieldGet( 'PJ_INTERV3' ) == "S" ) ) .and. ( aCols[ n , nPosHr4 ] == 0 ) )
		lRet		:= .F.
		cMsgInfo	:= STR0092  //"Tabela n„o pode terminar com uma saida de intervalo"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0093	//"O intervalo: "
		cMsgInfo	+= " 3 "
		cMsgInfo	+= STR0094  //"Nao possui a entrada correspondente"
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo	+= STR0095  //"Altere o conteudo do campo: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_INTERV3' ) , 01 ]
		cMsgInfo	+= CRLF
		cMsgInfo	+= CRLF
		cMsgInfo    += STR0096	//"ou informe Hor rio nos campos: "
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_ENTRA4' ) , 01 ]
		cMsginfo	+= " / " 
		cMsgInfo	+= aHeader[ GdFieldPos( 'PJ_SAIDA4' ) , 01 ]
		Break		
	EndIF

End Sequence

IF ( !( lRet) .and. !Empty( cMsgInfo ) )
	//"Existe inconsistˆncias na Tabela de Hor rio"
	MsgInfo( OemToAnsi( cMsgInfo ) , OemToAnsi( STR0091 ) )
EndIF
	
Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080Tok ³ Autor ³Marinaldo de Jesus    ³ Data ³28/02/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validacao das Linhas Digitadas na GetDados					³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()													³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Function Pona080Tok( oObj )

Local lRet		:= .T.
Local nI		:= 0
Local nItera	:= Len( aCols )
Local nSvn		:= n

For nI := 1 To nItera
	n := nI
	IF !( lRet := Pona080Lok( oObj ) )
		Exit
	EndIF
Next nI

n := nSvn

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080SPJChk³Autor³Marinaldo de Jesus    ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Validar a Semana Digitada e Transferir os Dados para o Array³
³          ³Master ( aColsAll )										    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080SPJChk(	nOpcX 		,;
								cSemana 	,;
								lLe			,;
								nLinCols	,;
								lValid		,;
								aCols		,;
								aHeader		,;
								aColsAll	,;
								aHeaderAll	,;
								nCountSeq	,;
								lTransfToAll ;
							  )		

Local lRet			:= .T.
Local nSvN			:= nLinCols
Local nPos			:= 0
Local nPos1			:= 0
Local nSemana		:= GdFieldPos( "PJ_SEMANA" , aHeaderAll )

DEFAULT lValid			:= .F.
DEFAULT lTransfToAll	:= .F.

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Se a Sequencia estiver Vazia                                 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF !( lRet := !Empty(cSemana) )
		Help(" ",1,"CSEMANA")
		Break
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Procura a Sequencia no aColsAll	                          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nPos := aScan( aColsAll , { |x| x[nSemana] == cSemana 	} )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Retorna o Help correspondente  	                          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( lRet ) .and. ( nPos > 0 ) .and. !( lLe ) )
	   Help(" ",1,"P080SP7EXI")
	   lRet := .F.
	   Break
	ElseIF ( ( lRet ) .and. ( nPos == 0 ) .and. ( lLe ) )
	   Help(" ",1,"P080SP7NEX")
	   lRet := .F.
	   Break
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Tranferindo Dados e Remontando o aCols		                  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( lRet ) .and. ( lLe ) .and. ( lValid ) )
		IF ( ( lTransfToAll ) .and. ( nOpcX == 4 ) )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Transfere os Dados do aCols para o aColsAll                  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( ( nPos1	:= aScan( aColsAll , { |x| x[nSemana] == cLstSemana	} ) ) > 0 )
				Pona080AllTrf( aCols , aHeader , @aColsAll , aHeaderAll , cLstSemana )
			EndIF
		EndIF
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Monta Novo aCols Conforme a Sequencia						  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		Pona080BldCols(	nOpcX 		,;	//01 ->	//Opcao do aRotina
						@aCols 		,;	//02 ->	//Array com os Detalhes para Alteracao
						aHeader		,;	//03 ->	//Cabecalho do aCols para Alteracao
						aColsAll	,;	//04 ->	//Array com Todos os Detalhes para o Turno
						aHeaderAll	,;	//05 ->	//Cabecalhjo do aColsAll
						NIL			,;	//06 ->	//Se carregara ou nao a Sequencia
						NIL			,;	//07 ->	//Se eh apenas para Contar as Sequencias
						nCountSeq	 ;	//08 ->	//Numero de Sequencias
				  	  )
	EndIF

End Sequence
	
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Reposiona aCols											  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
nLinCols := IF( lValid , 1 , nSvN )

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080RplMarc  ³Autor³Marinaldo de Jesus ³ Data ³22/01/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Replica informacao da Linha de Marcacoes para os Demais Dias³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³< Vide Parametros Formais >									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³lRet														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080RplMarc( aLocHeader , aLocCols , aLocAltera , aLocVisual )

Local aSvKeys		:= GetKeys()
Local aCloneCols	:= { aClone( aLocCols[n] ) }
Local aCloneHeader	:= aClone( aLocHeader )
Local aSvLocCols	:= aClone( aLocCols )
Local aDiaSemana	:= {}
Local aListBox		:= {}
Local bSet15		:= { || nOpcA := 1 , IF( oGet:TudoOk() , ( RestKeys( aSvKeys , .T. ) , oDlg:End() ) , nOpcA := 0 ) }
Local bSet24		:= { || RestKeys( aSvKeys , .T. ) , oDlg:End() , nOpcA := 0 }
Local nX			:= 0
Local nY			:= 0
Local nLenCols		:= 0
Local nLenHeader	:= 0
Local nLenAlter		:= 0
Local nLenVisual	:= 0
Local nPosDia		:= 0
Local nOpcA			:= 0
Local nSvN			:= n
Local lRet			:= .F.
Local oDlg
Local oGet
Local oFont
Local oGroup
Local oFontBig
Local oMain
Local oCheckSeg
Local oCheckTer
Local oCheckQua
Local oCheckQui
Local oCheckSex
Local oCheckSab
Local oCheckDom
Local oListBox
Local oBtnMarcTod
Local oBtnDesmTod
Local oBtnInverte
Local oOk			:= LoadBitmap( GetResources(), "LBOK" )
Local oNo			:= LoadBitmap( GetResources(), "LBNO" )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaração de arrays para dimensionar tela		         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjSize		:= {}
Local aObjCoords	:= {}	
Local aAdv1Size		:= {}
Local aInfo1AdvSize	:= {}
Local aObj1Size		:= {}	
Local aObj1Coords 	:= {}	
Local aAdv2Size		:= {}
Local aInfo2AdvSize	:= {}
Local aObj2Size		:= {}	
Local aObj2Coords 	:= {}

aCols	:= {}
aHeader := {}

IF ( ( nPosDia := aScan( aAltera , { |x| Upper( AllTrim( x ) ) == "PJ_DIA" } ) ) > 0 )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Elimina os Elementos Correspondentes ao Tipo do Dia         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	( aDel(aLocAltera,nPosDia) , aSize(aLocAltera,Len( aLocAltera )-1) )
EndIF

IF ( ( nPosDia := GdFieldPos( "PJ_DIA" , aLocHeader ) ) > 0 )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega o Array aDiaSemana com a Descricao dos Dias da Semana³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aEval( aLocCols , { |x,y| aAdd( aDiaSemana , { IF( y < 6 , .T. , .F. ) , aLocCols[ y , nPosDia ] } ) } )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Elimina os Elementos Correspondentes ao Tipo do Dia         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nLenCols	:= Len( aCloneCols[1] )
	nLenHeader	:= Len( aCloneHeader )

	( aDel(aCloneCols[1],nPosDia) , aSize(aCloneCols[1],--nLenCols) )
	( aDel(aCloneHeader,nPosDia) , aSize(aCloneHeader,--nLenHeader) )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Monta a Estrutura do aCols e do aHeader padrao para Digitacao³
	³das Informacoes da Tabela de Horario                    	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aCols	:= aClone( aCloneCols )
	aHeader	:= aClone( aCloneHeader )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega no aListBox os Campos para que poderao ser Alterados ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nLenAlter := Len( aLocAltera )
	For nX := 1 To nLenAlter
		IF ( ( nY := GdFieldPos( aLocAltera[ nX ] )  ) > 0 )
			aAdd( aListBox , { .T. , aHeader[ nY , 1 ] } )
		EndIF
	Next Nx
	nLenVisual := Len( aLocVisual )
	For nX := 1 To nLenVisual
		IF ( ( nY := GdFieldPos( aLocVisual[ nX ] )  ) > 0 )
			IF !Empty( aHeader[ nY , 1 ] )
				aAdd( aListBox , { .T. , aHeader[ nY , 1 ] } )
			EndIF	
		EndIF
	Next Nx
	
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta as Dimensoes dos Objetos         					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	aAdvSize		:= MsAdvSize()
	aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }					 
	aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )					 
	aAdd( aObjCoords , { 000 , 040 , .T. , .T. } )					 
	aAdd( aObjCoords , { 000 , 060 , .T. , .T. } )
	aObjSize	:= MsObjSize( aInfoAdvSize , aObjCoords, .T. )
	
	aAdv1Size    := aClone(aObjSize[3])

	aInfo1AdvSize    := { aAdv1Size[2] , aAdv1Size[1] , aAdv1Size[4] , aAdv1Size[3] , 1 , 1 }
	aAdd( aObj1Coords , { 025 , 000 , .T. , .T. } )
	aAdd( aObj1Coords , { 005 , 000 , .F. , .T. } )
	aAdd( aObj1Coords , { 075 , 000 , .T. , .T. } )
	aObj1Size := MsObjSize( aInfo1AdvSize , aObj1Coords, .T., .T. )

	aAdv2Size    := aClone(aObj1Size[3])

	aInfo2AdvSize    := { aAdv2Size[2] , aAdv2Size[1] , aAdv2Size[4] , aAdv2Size[3] , 1 , 1 }
	aAdd( aObj2Coords , { 000 , 000 , .T. , .T., .T. } )
	aAdd( aObj2Coords , { 000 , 020 , .T. , .F. } )
	aObj2Size := MsObjSize( aInfo2AdvSize , aObj2Coords )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Monta Caixa de Dialogo para Digitacao que Contera os  Objetos³
	³GetDados, ListBox e CheckBox								  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	DEFINE FONT oFont		NAME "Arial" SIZE 0,-11 BOLD
	DEFINE FONT oFontBig	NAME "Arial" SIZE 07,25 BOLD
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0040) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMain PIXEL			// 'Tabela de Horario Padrao

	@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup TO aObjSize[1,3],aObjSize[1,4]*0.70 LABEL OemToAnsi(STR0042) OF oDlg PIXEL						// 'Turno:'
	oGroup:oFont := oFont
	@ aObjSize[1,1] , aObjSize[1,4]*0.705 GROUP oGroup TO aObjSize[1,3],aObjSize[1,4] LABEL OemToAnsi(STR0043) OF oDlg PIXEL						// "Sequˆncia:"
	oGroup:oFont := oFont

	@ aObjSize[1,1]+7 , aObjSize[1,2]*2.5 SAY SR6->( R6_TURNO+" - "+AllTrim(R6_DESC))	SIZE 250,10 OF oDlg PIXEL FONT oFontBig
	@ aObjSize[1,1]+7 , aObjSize[1,4]*0.72 SAY cSemana 									SIZE 010,10 OF oDlg PIXEL FONT oFontBig

	oGet := MSGetDados():New(aObjSize[2,1], aObjSize[2,2], aObjSize[2,3], aObjSize[2,4],4,"Pona080Lok","Pona080Tok","",NIL,aLocAltera,,,1)

	@ aObj1Size[1,1], aObj1Size[1,2] GROUP oGroup TO aObj1Size[1,3], aObj1Size[1,4] LABEL OemToAnsi( STR0061 ) OF oDlg PIXEL				// "Dia da Semana:"
	oGroup:oFont := oFont

	@ aObj1Size[1,1]+10,aObj1Size[1,2]*2.5 CHECKBOX oCheckSeg VAR aDiaSemana[1,1] PROMPT OemToAnsi( aDiaSemana[1,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
	@ aObj1Size[1,1]+20,aObj1Size[1,2]*2.5 CHECKBOX oCheckTer VAR aDiaSemana[2,1] PROMPT OemToAnsi( aDiaSemana[2,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
	@ aObj1Size[1,1]+30,aObj1Size[1,2]*2.5 CHECKBOX oCheckQua VAR aDiaSemana[3,1] PROMPT OemToAnsi( aDiaSemana[3,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
	@ aObj1Size[1,1]+40,aObj1Size[1,2]*2.5 CHECKBOX oCheckQui VAR aDiaSemana[4,1] PROMPT OemToAnsi( aDiaSemana[4,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
	@ aObj1Size[1,1]+50,aObj1Size[1,2]*2.5 CHECKBOX oCheckSex VAR aDiaSemana[5,1] PROMPT OemToAnsi( aDiaSemana[5,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
	@ aObj1Size[1,1]+60,aObj1Size[1,2]*2.5 CHECKBOX oCheckSab VAR aDiaSemana[6,1] PROMPT OemToAnsi( aDiaSemana[6,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont
	@ aObj1Size[1,1]+70,aObj1Size[1,2]*2.5 CHECKBOX oCheckDom VAR aDiaSemana[7,1] PROMPT OemToAnsi( aDiaSemana[7,2] ) SIZE 55,08 OF oDlg PIXEL FONT oFont

	@ aObj2Size[1,1], aObj2Size[1,2] LISTBOX oListBox FIELDS HEADER "" , OemToAnsi( StrTran( AllTrim( STR0060 ) , ":" , "" ) ) SIZE aObj2Size[1,3], aObj2Size[1,4] PIXEL ON DBLCLICK (Pona080BoxMarc(oListBox,@aListBox,@oDlg),oListBox:nColPos := 1,oListBox:Refresh()) NOSCROLL //"Campo: "
	oListBox:SetArray(aListBox)
	oListBox:bLine := { || { IF(aListBox[oListBox:nAt,1],oOk,oNo),aListBox[oListBox:nAt,2] } }

	@ aObj2Size[2,1]+8, aObj2Size[2,2]	BUTTON oBtnMarcTod	PROMPT OemToAnsi( STR0062 )		SIZE 54.50,13.50 OF oDlg	PIXEL ACTION (Pona080BoxMarc( oListBox , @aListBox , @oDlg , "M" ),oListBox:nColPos := 1,oListBox:Refresh()) //"Marca Todos"
	SetKey(VK_F4,{ || ( Pona080BoxMarc( oListBox , @aListBox , @oDlg , "M" ),oListBox:nColPos := 1,oListBox:Refresh()) } )
	@ aObj2Size[2,1]+8,aObj2Size[2,2]+60	BUTTON oBtnDesmTod	PROMPT OemToAnsi( STR0063 )		SIZE 54.50,13.50 OF oDlg	PIXEL ACTION (Pona080BoxMarc( oListBox , @aListBox , @oDlg , "D" ),oListBox:nColPos := 1,oListBox:Refresh()) //"Desmarca Todos"
	SetKey(VK_F5,{ || ( Pona080BoxMarc( oListBox , @aListBox , @oDlg , "D" ),oListBox:nColPos := 1,oListBox:Refresh()) } )
	@ aObj2Size[2,1]+8,aObj2Size[2,2]+120	BUTTON oBtnInverte	PROMPT OemToAnsi( STR0064 ) 	SIZE 54.50,13.50 OF oDlg	PIXEL ACTION (Pona080BoxMarc( oListBox , @aListBox , @oDlg , "I" ),oListBox:nColPos := 1,oListBox:Refresh()) //"Inverte Sele‡„o"
	SetKey(VK_F6,{ || ( Pona080BoxMarc( oListBox , @aListBox , @oDlg , "I" ),oListBox:nColPos := 1,oListBox:Refresh()) } )

	ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar( @oDlg , bSet15 , bSet24 )

	DeleteObject(oOk)
	DeleteObject(oNo)

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Restaura as Teclas de Atalho                     	  		  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RestKeys( aSvKeys , .T. )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Atualiza a GetDados do Dialogo Principal                    ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nOpcA == 1 )
		nLenHeader := Len( aHeader )
		nLenCols := Len( aLocCols )
		For nX := 1 To nLenCols
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Apenas para o Dia Selecionado                               ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( aDiaSemana[ nX , 1 ] )
				For nY := 1 To nLenHeader
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Se o Campo Nao for Alteravel Procura o Proximo              ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					IF (;
							(;
								( aScan( aLocAltera , { |x| x == aHeader[ nY , 02 ] } ) == 0 ) .and. ;
					   			( aScan( aLocVisual , { |x| x == aHeader[ nY , 02 ] } ) == 0 ) ;
					   		) .or.;
					   		Empty( aHeader[ nY , 01 ] );
					   	)	 	 
						Loop
					EndIF
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³ Apenas para o Campo Selecionado                             ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					IF ( aListBox[ nY , 01 ] )
						aLocCols[ nX , GdFieldPos( aHeader[ nY , 02 ] , aLocHeader ) ]  := aCols[ 01 , nY ]
					EndIF
				Next nY
			EndIF
		Next nX
	EndIF

EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica se Houveram Alteracoes no aCols para o ForceRefresh³
³ no Objeto GetDados										  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lRet := !fCompArray( aLocCols , aSvLocCols ) )
	aCols := aClone( aLocCols )
Else
	aCols := aClone( aSvLocCols )
EndIF
aHeader := aClone( aLocHeader )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura Posicao da Linha do aCols						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
n := nSvN

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080BoxMarc	³Autor³Marinaldo de Jesus ³ Data ³22/01/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Controla o Marck do ListBox									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona080BoxMarc( @oListBox , @aListBox , @oDlg , cMarckTip )	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Pona080RplMarc() em PONA080                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080BoxMarc( oListBox , aListBox , oDlg , cMarckTip )

DEFAULT cMarckTip := ""

IF Empty( cMarckTip )
	aListBox[ oListBox:nAt , 1 ] := !aListBox[ oListBox:nAt , 1 ]
ElseIF cMarckTip	 == "M"
	aEval( aListBox , { |x,y| aListBox[y,1] := .T. } )
ElseIF cMarckTip == "D"
	aEval( aListBox , { |x,y| aListBox[y,1] := .F. } )
ElseIF cMarckTip == "I"
	aEval( aListBox , { |x,y| aListBox[y,1] := !aListBox[y,1] } )
EndIF

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080BldCols	³Autor³Marinaldo de Jesus ³ Data ³22/01/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Montar a Estrutura do aCols para aGetDados para   Manutencao³
³          ³da Tabela de Horario Padrao									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                  					³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080BldCols(	nOpcX 		,;	//01 ->	//Opcao do aRotina
								aCols 		,;	//02 ->	//Array com os Detalhes para Alteracao
								aHeader		,;	//03 ->	//Cabecalho do aCols para Alteracao
								aColsAll	,;	//04 ->	//Array com Todos os Detalhes para o Turno
								aHeaderAll	,;	//05 ->	//Cabecalhjo do aColsAll
								lSeq		,;	//06 ->	//Se carregara ou nao a Sequencia
								lCountSeq	,;	//07 ->	//Se eh apenas para Contar as Sequencias
								nCountSeq	 ;	//08 ->	//Numero de Sequencias
						   	  )

Local aSeq			:= {}
Local cSeq			:= cSemana
Local cSeqAnt		:= "__cSeqAnt__"
Local cSeqAtu		:= "__cSeqAtu__"
Local nCountLin		:= 0
Local nSemana		:= GdFieldPos( "PJ_SEMANA" , aHeaderAll )
Local nPosSeq		:= 0
Local nDia			:= 0 
Local nField		:= 0
Local nMaxTab		:= 0
Local nMaxAll		:= 0
Local nPosDeleted	:= 0
Local nX			:= 0

DEFAULT aCols		:= {}
DEFAULT lSeq 		:= .T.
DEFAULT lCountSeq	:= .F.
DEFAULT nCountSeq	:= 0

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Verifica se Deve contar as Sequencias Existentes			   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lCountSeq )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Carrega o Numero de Sequencias Existentes					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nX := 1 To Len( aColsAll )
		IF !Empty( ( cSeqAtu := GdFieldGet( "PJ_SEMANA" , nX , NIL , aHeaderAll , aColsAll ) ) )
			IF !( cSeqAnt == cSeqAtu )
				++nCountSeq
				aAdd( aSeq , cSeqAtu )
				cSeqAnt := cSeqAtu
			EndIF
		EndIF	
	Next nX
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Carrega os Dados do Calendario conforme Sequencia			  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( ( ( nOpcX <> 3 ) .and. !( lCountSeq ) ) .or. ( nOpcX == 2 ) )
	IF ( nCountSeq > 0 )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta as Linhas e Colunas do aCols						   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		aCols := IF( lSeq , Array( nLenaDias , ( nUsado + 1 ) ) , Array( ( nLenaDias * nCountSeq ) , ( nUsado + 1 ) ) )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Carrega o Numero de Elemementos no aCols  				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		nMaxAll	:= Len( aColsAll )
		IF ( nMaxAll < nMaxTab )
			IF ( nOpcx <> 5 )
				MsgInfo( OemToAnsi( STR0391 ) ) //"Existem Inconsistências na Tabela de Horário. Exclua as Sequências e Reinclua-as."
			EndIF
		EndIF
		nMaxTab	:= Len( aCols )
		For nX := 1 To nMaxTab
			IF ( lSeq )
				IF ( ( nPosSeq := aScan( aColsAll , { |x| x[nSemana] == cSeq } , ++nPosSeq ) ) == 0 )
					IF ( ( nPosSeq := aScan( aColsAll , { |x| x[nSemana] == cSeq } ) ) == 0 )
						Loop
					EndIF
				EndIF
			Else
				IF ( nX <= nMaxAll )
					nPosSeq := nX
				Else
					nPosSeq := nMaxAll
				EndIF
			EndIF
			cSeqAtu := GdFieldGet( "PJ_SEMANA" , nPosSeq , NIL , aHeaderAll , aColsAll )
			IF ( ( lSeq .and. ( cSeq == cSeqAtu ) ) .or. !( lSeq ) )
				For nField := 1 To nUsado
					GdFieldPut(;
									aHeader[ nField , 02 ] ,;
									GdFieldGet( aHeader[ nField , 02 ] , nPosSeq , NIL , aHeaderAll , aColsAll ),;
									nX,;
									aHeader,;
									@aCols;
							   )		
				Next nField
			EndIF
		Next nX
	Else
		Help(" ",1,"P080SP7NEX")
	EndIF
Else
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Neste Caso o Calendario eh Vazio                             ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nMaxTab := Len( aCols := Array( nLenaDias , ( nUsado + 1 ) ) )
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Consistindo o aCols                                          ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( ( nOpcX == 3 ) .or. ( lCountSeq ) .or. ( nCountSeq > 0 ) )
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Preenche os Valores "DEFAULT" para os Campos                 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nPosDeleted := GdFieldPos( "GDDELETED" , aHeader )
	For nDia := 1 To nMaxTab
		For nX := 1 To Len( aHeader )
			IF ( aHeader[ nX , 02 ] == "GHOSTCOL" )
				Loop
			EndIF
			IF Empty( aCols[ nDia , nX ] )
				aCols[ nDia , nX ] := CriaVar( aHeader[ nX , 02 ] )
			EndIF
		Next nX
		GdFieldPut( "GDDELETED" , .F. , nDia , aHeader , @aCols )
	Next nDia	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Quando nao estiver verificando a quantidade de sequencias   e³
	³nao for inclusao Remonta o aCols							  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( !( lCountSeq ) .and. ( nOpcX <> 3 ) ) .or. ( nOpcX == 2 ) )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Remonta o aCols Considerando a Segunda como o Primeiro dia da³
		³Semana														  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		Pona080RmkCols( @aCols )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Carrega a Descricao do Tipo do Dia							  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		nDia := 0
		For nX := 1 To nMaxTab
			IF ( ++nDia > 7 )
				nDia := 1
			EndIF
			GdFieldPut( "PJ_DIA" , aDias[ nDia , 01 ] , nX , aHeader , @aCols )
		Next nX
	Else
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Carrega a Descricao do Tipo do Dia							  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		nDia := 0
		For nX := 1 To nMaxTab
			IF ( ++nDia > 7 )
				nDia := 1
			EndIF
			GdFieldPut( "PJ_DIA"	, aDias[ nDia , 01 ] , nX , aHeader , @aCols )
			GdFieldPut( "PJ_TPDIA"	, aDias[ nDia , 02 ] , nX , aHeader , @aCols )
			GdFieldPut( "PJ_TPEXT"	, aDias[ nDia , 03 ] , nX , aHeader , @aCols )
			GdFieldPut( "PJ_TPEXTN"	, aDias[ nDia , 04 ] , nX , aHeader , @aCols )
		Next nX
	EndIF
EndIF

Return( aSeq )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080RmkCols	³Autor³Marinaldo de Jesus ³ Data ³22/01/2002³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Remonta o aCols Para Considerar a Segunda o 1o. Dia da  Sema³
³          ³na															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Pona080RmkCols( aCols , nMaxTab )							³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080RmkCols( aCols , nMaxTab )

Local aSvDom	:= {}
Local nX		:= 0

DEFAULT nMaxTab	:= Len( aCols )

For nX := 1 To nMaxTab Step 7
	aAdd( aSvDom , aClone( aCols[ nX ] ) )
Next nX
For nX := 1 To nMaxTab
	IF ( ( nX % 7 ) != 0 )
		aCols[ nX ] := aClone( aCols[ nX + 1 ] )
	Else
		aCols[ nX ] := aClone( aSvDom[ ( nX / 7 ) ] )
	EndIF
Next nX

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080AllTrf	³Autor³Marinaldo de Jesus ³ Data ³06/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Transfere Informacoes do aCols para o aColsAll              ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>     								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080AllTrf( aCols , aHeader , aColsAll , aHeaderAll , cSemana )

Local aPosSortAll	:= {}
Local aPosKeyAll	:= {}
Local nITem			:= 0
Local nItens		:= 0
Local nPosFilial	:= 0
Local nPosTurno		:= 0
Local nPosSemana	:= 0
Local nPosDia		:= 0
Local nPos			:= 0

IF !Empty( cSemana )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Retorna o Conteudo Original do PJ_DIA						  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nPosDia := GdFieldPos( "PJ_DIA" , aHeader )
	For nItem := 1 To Len( aCols )
		IF ( ( nPos := aScan( aDias , { |x| x[1] == aCols[ nItem , nPosDia ] } ) ) > 0 )
			aCols[ nItem , nPosDia ] := aDias[ nPos , 05 ]
		EndIF
	Next nItem

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Obtem o Posicionamento dos Campos    						  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	nPosFilial	:= GdFieldPos( "PJ_FILIAL"	, aHeaderAll )
	nPosTurno	:= GdFieldPos( "PJ_TURNO"	, aHeaderAll )
	nPosSemana	:= GdFieldPos( "PJ_SEMANA" 	, aHeaderAll )
	nPosDia		:= GdFieldPos( "PJ_DIA"	 	, aHeaderAll )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega Array a Posicao dos Campos para o "Sort"			  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aPosSortAll	, nPosFilial )
	aAdd( aPosSortAll	, nPosTurno	 )
	aAdd( aPosSortAll	, nPosSemana )
	aAdd( aPosSortAll	, nPosDia	 )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Carrega Array com a Posicao dos Campos e as Chaves  Correspon³
	³dentes														  ³	
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aAdd( aPosKeyAll  	, { nPosFilial	, cFilSR6 	} )
	aAdd( aPosKeyAll  	, { nPosTurno	, cTnoSR6 	} )
	aAdd( aPosKeyAll  	, { nPosSemana  , cSemana	} )
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Transfere os Dados Entre aCols        					  	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	GdTransfaCols(	@aColsAll   ,;	//01 -> Array com a Estrutura do aCols Contendo todos os Dados
					@aCols		,;	//02 -> Array com a Estrutura do aCols Contendo Dados Especificos
					aHeader		,;	//03 -> Array com a Estrutura do aHeader Contendo Informacoes dos Campos
					NIL			,;	//04 -> Array com as Posicoes dos Campos para Pesquisa
					NIL			,;	//05 -> Chave para Busca
					aPosSortAll	,;	//06 -> Array com as Posicoes dos Campos para Ordenacao
					aPosKeyAll	,;	//07 -> Array com as Posicoes dos Campos e Chaves para Pesquisa
					aHeaderAll	,;	//08 -> Array com a Estrutura do aHeaderAll Contendo Informacoes dos Campos
					.T.			 ;	//09 -> Se Carrega o Elemento como Deletado na Remontagem do aCols
				   )
EndIF
	
Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Pona080Calend	³Autor³Marinaldo de Jesus ³ Data ³26/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Disponibilizar Calendario para consulta                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>     								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³NIL															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³< Vide Parametros Formais >									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080Calend( lBuildTemp )

Local aKeys				:= GetKeys()
Local aArea				:= GetArea()
Local aAreaSPJ			:= {}
Local aSvaCols			:= {}
Local aSvaColsAll		:= {}
Local aAdvSize			:= {}
Local aInfoAdvSize		:= {}
Local aObjSize			:= {}
Local aObjCoords		:= {}
Local aButtons			:= {}
Local bSet15			:= { || NIL }
Local bSet24			:= { || NIL }
Local bCriaCalend		:= { || NIL }
Local bShowCalend		:= { || NIL }
Local bPrev				:= { || GetPerPrev( @dDataIni , @dDataFim , oDataIni , oDataFim )	, SetKey( VK_F4 , bPrev 	) }
Local bAtu				:= { || GetPerAtu( @dDataIni , @dDataFim , oDataIni , oDataFim )	, SetKey( VK_F5 , bAtu		) }
Local bNext				:= { || GetPerNext( @dDataIni , @dDataFim , oDataIni , oDataFim )	, SetKey( VK_F6 , bNext 	) }
Local bPerSPO			:= { || GetPerSPO( @dDataIni , @dDataFim , oDataIni , oDataFim )	, SetKey( VK_F7 , bPerSPO	) }
Local bDialogInit		:= { || NIL }
Local cDataFile			:= ""
Local cBagName			:= ""
Local cExt				:= ""
Local cRdd				:= __LocalDriver
Local cIndexKey			:= ""
Local cSequencia		:= IF( Empty( cSemana ) , StrZero( 01 , GetSx3Cache( "PJ_SEMANA" , "X3_TAMANHO" ) ) , cSemana )
Local dDataIni			:= Ctod("//")
Local dDataFim      	:= Ctod("//")
Local lBuildData		:= .F.
Local lShowCalend		:= .F.
Local lCriaCalend		:= .F.
Local lMaxP8PGOrdVld	:= .T.
Local nMaxOrd			:= 0
Local oDlg				:= NIL
Local oFont				:= NIL
Local oFontBig			:= NIL
Local oGroup			:= NIL
Local oDataIni			:= NIL
Local oDataFim			:= NIL

Static __aStruSPJ__

Private aTabCalend	:= {}

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Obtem Periodo conforme Parametro ( Sugerido )				   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
GetPonMesDat( @dDataIni , @dDataFim )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Monta as Dimensoes dos Objetos         					   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdvSize		:= MsAdvSize(  , .T. , 390 )
aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 5 , 5 }
aAdd( aObjCoords , { 000 , 010 , .T. , .F. } )
aAdd( aObjCoords , { 000 , 020 , .T. , .F. } )
aAdd( aObjCoords , { 000 , 000 , .T. , .T. } )
aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Botao para o Periodo Anterior  					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd(; 
		aButtons	,;
						{;
							"PREV"				,;	
   							bPrev				,;
       	   					OemToAnsi( STR0100 ),;	//"Anterior <F4>..."
       	   					OemToAnsi( STR0300 ) ;	//"Anterior"
           				};
        )					 	

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Botao para o Periodo Atual     					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd(; 
		aButtons	,;
						{;
							"OBJETIVO"				,;
   							bAtu				,;
       	   					OemToAnsi( STR0101 ),;	//"Atual <F5>..."
       	   					OemToAnsi( STR0301 ) ;	//"Atual"
           				};
        )					 	

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Botao para o Proximo Periodo						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd(; 
		aButtons	,;
						{;
							"NEXT"				,;
   							bNext				,;
       	   					OemToAnsi( STR0102 ),;	//"Pr¢ximo <F6>..."
       	   					OemToAnsi( STR0302 ) ;	//"Pr¢ximo"       	   					
           				};
        )					 	

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Botao para os Periodos do SPO						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
aAdd(; 
		aButtons	,;
						{;
							"BMPSXB"			,;
   							bPerSPO				,;
       	   					OemToAnsi( STR0103 ),;	//"Per¡odo do SP0 <F7>..."
       	   					OemToAnsi( STR0303) ;	//"Per¡odo"
           				};
        )					 	

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Define o Bloco para a Teclas <CTRL-O>   ( Button OK da Enchoi³
³ ceBar )													   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
bSet15 := { || 			IF(;
							Eval( oDataIni:bValid ) .and.;
							Eval( oDataFim:bValid ) .and.;
							( lMaxP8PGOrdVld := MaxP8PGOrdVld( dDataIni , dDataFim , .T. , @nMaxOrd ) ),;
							(;
								lShowCalend := .T. 		,;
							(;
								RestKeys( aKeys , .T. ) ,;
								oDlg:End()			     ;
							),;
							),;
							(;
								IF( !( lMaxP8PGOrdVld ) , dDataFim := ( dDataIni + ( nMaxOrd  - 1 ) ) , NIL ) ,;
								.F.;
							);	
						   );
			}

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Define o  Bloco  para a Teclas <CTRL-X> ( Button Cancel da En³
³ choiceBar )												   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
bSet24 := { || RestKeys( aKeys , .T. ) , oDlg:End() }

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Define o Bloco para o Init do Dialog 						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
bDialogInit := { ||;
						SetKey( VK_F4 , bPrev	),;
						SetKey( VK_F5 , bAtu 	),; 
						SetKey( VK_F6 , bNext	),;
						SetKey( VK_F7 , bPerSPO	),;
						EnchoiceBar( oDlg , bSet15 , bSet24 , NIL , aButtons );
				}

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Monta Dialogo para a selecao do Periodo 					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
DEFINE FONT oFont		NAME "Arial" SIZE 0,-11 BOLD
DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0084) From aAdvSize[7],0 TO aAdvSize[6]*0.40,aAdvSize[5] OF oMainWnd PIXEL			//"Selecione o Periodo Para a Montagem do Calend rio"

	@ aObjSize[1,1] , aObjSize[1,2] GROUP oGroup TO aObjSize[3,1],aObjSize[3,4] LABEL OemToAnsi(STR0085) OF oDlg PIXEL	//"Periodo:"
	oGroup:oFont:= oFont

	@ aObjSize[2,1]+5, aObjSize[2,2]*2.5  		SAY OemToAnsi(STR0086)		SIZE 100,10 OF oDlg PIXEL FONT oFont	//"Inicial:"
	@ aObjSize[2,1]+3, (aObjSize[2,2]*2.5)+25	MSGET oDataIni VAR dDataIni	SIZE 100,10 OF oDlg PIXEL FONT oFont VALID !Empty( dDataIni )

	@ aObjSize[2,1]+5, aObjSize[2,4]*0.5		SAY OemToAnsi(STR0087)		SIZE 100,10 OF oDlg PIXEL FONT oFont	//"Final:"
	@ aObjSize[2,1]+3, (aObjSize[2,4]*0.5)+25	MSGET oDataFim VAR dDataFim	SIZE 100,10 OF oDlg PIXEL FONT oFont VALID ( !Empty( dDataFim ) .and. ( dDataIni <= dDataFim ) )
			
ACTIVATE MSDIALOG oDlg CENTERED ON INIT Eval( bDialogInit )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura as Teclas de Atalho                     	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aKeys , .T. )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³So Mostra Calendario se nao Cancelou o Dialogo do Periodo    ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( lShowCalend )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Verifica se Deve Criar o arquivo Temporario               	  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lBuildTemp )
		DEFAULT __aStruSPJ__ := SPJ->( dbStruct() )
	    aAreaSPJ	:= SPJ->( GetArea() )
		cExt 		:= GetDbExtension()
		cDataFile	:= ( CriaTrab( NIL , .F. ) + cExt )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Se foi Possivel criar o Arquivo Temporario					  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( lBuildData := MsCreate( cDataFile , __aStruSPJ__ , cRdd ) )
			cBagName	:= ( FileNoExt( cDataFile )+IndexExt() )
			cIndexKey	:= SPJ->( IndexKey() )
			SPJ->( dbCloseArea() )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Se foi Possivel Abrir o Arquivo Temporario					  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( lBuildData := MsOpenDbf( .T. , cRdd , cDataFile , "SPJ" , .T. , .F. ) )
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Se o Arquivo Estiver Selecionado							  ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF ( lBuildData := ( Select( "SPJ" ) > 0 ) )
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³Salva o Conteudo do aCols e do aColsAll para Restauracao   na³
					³Saida														  ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					aSvaCols	:= aClone( aCols )
					aSvaColsAll	:= aClone( aColsAll )
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³Transfere os dados do aCols para o aColsAll e Grava as  infor³
					³macoes no Temporario										  ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					Pona080AllTrf( aCols , aHeader , @aColsAll , aHeaderAll , cSequencia )
					Pona080TmpGrv()
					SPJ->( IndRegua( "SPJ" , cBagName , cIndexKey , NIL , NIL , NIL , .T. ) )
					SPJ->( dbClearIndex() )
					SPJ->( dbSetIndex( cBagName ) )
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³Restaura o Conteudo do aCols e do aColsAll                   ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					aCols		:= aClone( aSvaCols )
					aColsAll	:= aClone( aSvaColsAll )
				EndIF
			EndIF
		EndIF
	Else
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Na Visualizacao Obtem sequencia conforme a Linha da GetDados ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		cSequencia := GdFieldGet( "PJ_SEMANA" )
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Cria o Calendario do Periodo        						  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bCriaCalend	:= { || lCriaCalend := CriaCalend(	dDataIni 	,;	//01 -> Data Inicial do Periodo
													dDataFim 	,;	//02 -> Data Final do Periodo
													cTnoSR6	 	,;	//03 -> Turno Para a Montagem do Calendario
													cSequencia 	,;	//04 -> Sequencia Inicial para a Montagem Calendario
													NIL			,;	//05 -> Array Tabela de Horario Padrao
													@aTabCalend ,;	//06 -> Array com o Calendario de Marcacoes
													cFilSR6		,;	//07 -> Filial para a Montagem da Tabela de Horario
													NIL			,;	//08 -> Matricula para a Montagem da Tabela de Horario
													NIL			,;	//09 -> Centro de Custo para a Montagem da Tabela
													NIL			,;	//10 -> Array com as Trocas de Turno
													NIL			,;	//11 -> Array com Todas as Excecoes do Periodo
													.F. 		 ;	//12 -> Se executa Query para a Montagem da Tabela Padrao
												  );
					}
	MsAguarde( bCriaCalend , OemToAnsi( STR0088 ) ) //"Criando o Calend rio..."
	IF ( lCriaCalend  )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Mostra o Calendario conforme periodo						  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		bShowCalend	:= { || F_ALT_H(NIL,NIL,NIL,NIL,NIL,NIL,NIL,.F.) }
		MsAguarde( bShowCalend , OemToAnsi( STR0089 ) ) //"Montando o Calend rio..."
	EndIF	
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Apaga os Arquivos Temporarios       						  ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lBuildData )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Fecha e Exclui o SPJ Temporario     						  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		SPJ->( dbCloseArea() )
		fErase( cDataFile )
		fErase( cBagName )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Abre o SPJ padrao                   						  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		ChkFile("SPJ")
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Restaura o Estado do SPJ            						  ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF !Empty( aAreaSPJ )
			RestArea( aAreaSPJ )
		EndIF
	EndIF

EndIF
	
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Restaura Dados de Entrada           						  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
RestKeys( aKeys , .T. )
RestArea( aArea )

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Pona080TmpGrv³Autor³Marinaldo de Jesus	  ³ Data ³07/05/2003³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Gravar Informacoes no SPJ                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Pona080TmpGrv()

Local aColsAux		:= {}
Local aCposPos		:= {}
Local nCol			:= 0
Local nCols			:= Len( aColsAll	)
Local nField		:= 0
Local nFields		:= Len( aHeaderAll	)
Local nRec			:= 0
Local nRecnos		:= 0
Local nPosField		:= 0
Local nPosDeleted	:= GdFieldPos( "GDDELETED" , aHeaderAll )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Obtem o Posicionamento dos Campos                	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
For nField := 1 To nFields 
	nPosField := SPJ->( FieldPos( aHeaderAll[ nField , 02 ] ) )
	aAdd( aCposPos , { aHeaderAll[ nField , 02 ] , nPosField } )
Next nField

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Elimina os Elementos Deletados do aColsAll       	  		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF ( aScan( aColsAll , { |x| x[ nPosDeleted ] } ) > 0 )
	For nCol := 1 To nCols
		IF ( aColsAll[ nCol , nPosDeleted ] )
			Loop
		EndIF
		aAdd( aColsAux , aClone( aColsAll[ nCol ] ) )
	Next nCol
	aColsAll := aClone( aColsAux )
EndIF

nFields := Len( aCposPos )
nRecnos	:= Len( aColsAll )
IF ( nRecnos > 0 )
	For nRec := 1 To nRecnos
		IF SPJ->( RecLock( "SPJ" , .T. ) )
			For nField := 1 To nFields
				IF ( ( nPosField := aCposPos[ nField , 02 ] ) > 0 )
					SPJ->( FieldPut( nPosField , aColsAll[ nRec , nField ] ) )
				EndIF
			Next nField
			SPJ->( MsUnlock() )
		EndIF	
	Next nRec
EndIF

Return( NIL )



/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡ao    ³Prossegue    ³Autor³Mauricio MR     	  ³ Data ³02/06/2005³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³ Chama Ponto de Entrada                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³PONA080()                                                   ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/

Static Function Prossegue(nOpcX,cSemana,lLe,n,lValida,aCols,aHeader,aColsAll,aHeaderAll,nCountSeq,nVezChk )
Local lRet		:= .T.
Local aRetBlock

/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Ponto de Entrada para Antes de Confirmar as Informacoes  da  ³
³ Tabela de Horario Padrao.                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/

IF ( lPna08001Block ) 
   
		/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Valida e Transfere os Dados do aCols para o aColsAll         ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
 
 	IF ( ValType( aRetBlock := ExecBlock("PNA08001",.F.,.F.,{aClone(aColsAll), aClone(aHeaderAll), cSemana, nOpcx}) ) == "A" )
		aColsAll	:= If( ValType(aRetBlock[1]) == "A", aClone(aRetBlock[1]) , aColsAll	)
		lRet		:= If( ValType(aRetBlock[2]) == "L", aRetBlock[2] 			, lRet		)
	EndIF 

EndIF

Return ( lRet )           
                   
Static Function MenuDef()

Local aRotina :=       { { STR0011 ,"PesqBrw"  			 , 0 , 1,,.F.},;  // "Pesquisar"
	                     { STR0012 ,"Pona080Vis"		 , 0 , 2},;  // "Visualizar"
	                     { STR0014 ,"Pona080Inc"		 , 0 , 3},;  // "Incluir"
	                     { STR0016 ,"Pona080Alt"		 , 0 , 4},;  // "Alterar"
	                     { STR0018 ,"Pona080Exc"		 , 0 , 5},;  // "Excluir"
						 { STR0059 ,"PutHrsTab(cCalc)" 	 , 0 , 6}}   // "Calcular Horas"
Return aRotina
