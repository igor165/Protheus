#INCLUDE "GPEM590.CH"
#INCLUDE "Protheus.CH"

Static cAuxTemp := ''

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ GPEM590  ³ Autor ³R.H. - J. Ricardo                   ³ Data ³ 19/06/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ GERA DISQUETE DA DIRF                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GPEM590(void)                                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ Requisito         ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Bruno Nunes ³23/01/14³ M12RH01_001943_01 ³ Unificacao da DIRF da versao 11 com      ³±±
±±³            ³        ³                   ³ a fase 4                                 ³±±
±±³Christiane V³29/04/14³        TPJZJ8     ³ Réplicas P11 para P12                    ³±±
±±³Allyson M   ³25/06/14³TPIJBY		        ³Ajuste p/ gerar o valor do 13o. mesmo se  ³±±
±±³            ³        ³         	        ³a empresa encerrou as atividades.	       ³±±
±±³Christiane V³27/06/14³        TPJZJ8     ³Alt. mnemonico P_VLLIMOUT para nVlLimOut  ³±±
±±³Wag Mobile  ³14/01/15³ TRKAQ7            ³Ajuste na geração da Dirf 2014 incluido o ³±±
±±³            ³        ³                   ³Id. de estrutura do leiaute atual M1LB5V2 ³±±
±±³Vitor Pires ³11/03/15³TRUV31             ³Inibe geração de informações complementa- ³±±
±±³            ³        ³                   ³res para Assist.Medica e Odontológica     ³±±
±±³Allyson M   ³11/03/15³TRSCV8 	  		³Melhoria p/ performance: execucao de query³±±
±±³            ³        ³         	  		³p/ ambiente Top e ajuste na geracao do txt³±±
±±³            ³        ³         	  		³p/ gravar o arquivo na pasta system e     ³±±
±±³            ³        ³         	  		³depois copia-lo p/ o destino selecionado. ³±±
±±³L.Trombini  ³16/03/15³TRVOXY             ³Ajuste para levar o movimento anual do fun³±±
±±³            ³        ³                   ³cionario expatriado 					   ³±±
±±³Renan Borges³23/10/15³TTJNHW     	    ³Ajuste para gerar arquivo da Dirf referen-³±±
±±³            ³        ³             		³te ao ano-calendário 2015, com o código de³±±
±±³            ³        ³          		    ³finido no layout da DIRF 2015.            ³±±
±±³Claudinei S.³13/01/16³TTXLIX             ³Incluído Registro identificador do layout ³±±
±±³            ³        ³                   ³da DIRF 2016.                             ³±±
±±³Claudinei S.³22/01/16³TTXLIX             ³Ajustada a função GpmGeraINF() para que   ³±±
±±³            ³        ³                   ³mostre os valores de PLR no Informe.      ³±±
±±³Joao Balbino³14/03/16³TUPFR6     	    ³Incluído tratamento para registro deleta- ³±±
±±³            ³        ³          			³do na RHM para busca agregados com	       ³±±
±±³            ³        ³           		³termino de vigência            	   	   ³±±
±±³Eduardo K.M.³13/06/16³TVIRPD      		³Ajuste para não gravar as verbas com  	   ³±±
±±³            ³        ³             		³incidência "O" no registro RTRT.          ³±±
±³Jônatas A.   ³05/01/17³     MRH-4752      ³Compatibilização fontes DIRF P118->P12114 ³±±
±³             ³        ³            		³Ajustes para gravacao DIRF 2017           ³±±
±±³Claudinei S.³01/02/17³MRH-5979           ³Tratamento para remoção de caracteres     ³±±
±±³            ³        ³                   ³especiais que agora são validados na DIRF.³±±
±±³Marcos Cout.³06/02/17³MRH-5979	  		³Ajustes para retornar os dados da previ_  ³±±
±±³Marcia Moura³        ³        	  		³ dencia privada no PGD DIRF 2017. Criado  ³±±
±±³            ³        ³        	  		³ a funcao RegINFPrev()/ Inclusão SCP      ³±±
±±³Marcia Moura³07/02/17³MRH-6315     		³Ajustes na geração SCP (Financeiro)       ³±±
±±³Claudinei S.³17/02/17³MRH-7124     		³Ajuste em SalvaReg() para que os arrays da³±±
±±³            ³        ³             		³previdência complementar sejam limpos a   ³±±
±±³            ³        ³             		³cada troca de funcionário.                ³±±
±±³Claudinei S.³24/02/17³MRH-7753     		³Ajuste em GerPSTemp() para considerar o   ³±±
±±³            ³        ³             		³CPF na Query, para que todos os valores do³±±
±±³            ³        ³             		³plano sejam considerados independente da  ³±±
±±³            ³        ³             		³filial do funcionário.                    ³±±
±±³Claudinei S.³27/02/17³MRH-7761           ³Ajuste em GrvRegRRA() para não gerar error³±±
±±³            ³        ³					³log quando o funcionário possuir RRA      ³±±
±±³Oswaldo L   ³20/09/17³DRHPAG-5698        ³Ajuste projeto Ctree                      ³±±
±±³Evandro P.  ³09/10/17³MPRIMESP-9776     	³Ajuste para carregar valores de pensão    ³±±
±±³            ³        ³(Replica)        	³ alimentícia no arquivo magnético da DIRF ³±±
±±³            ³        ³             		³quando funcionário foi demitido e depois  ³±±
±±³            ³        ³             		³readmitido com uma nova matricula .       ³±±
±±³Fabio G.    ³24/05/17³DRHGCH-2619        ³Ajuste em GPM590NEW() para não gerar error³±±
±±³            ³        ³					³log quando processar Arq Magnetico de Anos³±±
±±³            ³        ³             		³Anteriores a 2017.     				   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function GPEM590()
Local nOpca
Local aSays		:= {}
Local aButtons	:= {} //<== arrays locais de preferencia
Local bProcesso	:= {|oSelf| GPM590Processa(oSelf)}
Local aOfusca		:= If(FindFunction('ChkOfusca'), ChkOfusca(), { .T., .F., {"",""} }) //[1]Acesso; [2]Ofusca; [3]Mensagem
Local aMsg			:= aOfusca[3]
Local aFldRel		:= {"RA_NOME", "RA_RACACOR"}
Local lBlqAcesso	:= aOfusca[2] .And. !Empty( FwProtectedDataUtil():UsrNoAccessFieldsInList( aFldRel ) )
Static nVez

Private cCadastro 	:= OemToAnsi(STR0001) //"Gera‡„o do disco da D.I.R.F."
Private nSavRec		:= RECNO()

if !lBlqAcesso
	//Comunicado sobre a não disponibilização da Rais e Dirf para releases inferiores à 12.1.25
	If GetRpoRelease() < "12.1.023" .AND. FindFunction("DirfRaisMsg")
		DirfRaisMsg()
	EndIf

	Pergunte("GPM590",.F.)

	If RFI->( ColumnPos("RFI_VALPG"))== 0
		Aviso(STR0023,STR0024,{"OK"}) //"Atencao"# "Tabelas desatualizadas. Execute o atualizador"
		Return
	EndIf

	nOpca := 0
	aAdd(aSays,OemToAnsi(STR0002) )  //" Este programa gera o disquete da D.I.R.F. "

	aAdd(aButtons, { 5,.T.,{| | Pergunte("GPM590",.T. ) } } )
	aAdd(aButtons, { 1,.T.,{|o| nOpca := 1,IF(gpconfOK(),FechaBatch(),nOpca:=0) }} )
	aAdd(aButtons, { 2,.T.,{|o| FechaBatch() }} )

	FormBatch( cCadastro, aSays, aButtons )

	Pergunte("GPM590",.F.)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis utilizadas para parametros                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpca == 1
		Processa({|lEnd| GPM590Processa(),STR0003})  // "Gera‡„o do disco da D.I.R.F."
	EndIf
Else
	Help(" ",1,aMsg[1],,aMsg[2],1,0)
ENDIF

dbSelectArea("SRL")
SET FILTER TO
RetIndex("SRL")
dbSelectArea("SR4")
SET FILTER TO
RetIndex("SR4")

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³Gpm590ProcessaºAutor  ³Microsiga           º Data ³  01/20/05   º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³                                                                º±±
±±º      ³                                                                º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ AP                                                             º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gpm590Processa(oSelf)

Local nCntArq		:= 0
Local aOldArea		:= GetArea()
Local cRpoRel		:= GetRpoRelease()

Private aStruRCS	:= RCS->( dbStruct() )
Private aStruSR4	:= SR4->( dbStruct() )
Private aStruSRL 	:= SRL->( dbStruct() )
Private cAliasRCS	:= "RCS"
Private cAliasSR4	:= "SR4"
Private cAliasSRL	:= "SRL"
Private cSRLVPEIM	:= ""
Private cSR4VPEIM	:= ""
Private cCposRCS	:= ""
Private cCposSR4	:= ""
Private cCposSRL	:= ""
Private cValidFil 	:= fValidFil()

SM0->( dbSeek( cEmpant + cFilAnt ) )
If MV_PAR04 >= "2017" .And. cRpoRel < "12.1.016" .And. ( !ExistFunc( "RhContExt" ) .Or. !RhContExt( SM0->M0_CGC ) )
	Aviso( STR0023, STR0053, { "Ok" }, , )
	RestArea( aOldArea )
	Return
EndIf

//Carrega os campos da tabela SR4 p/ uso na Query
For nCntArq := 1 To Len(aStruSR4)
	If nCntArq < Len(aStruSR4)
		cCposSR4 += aStruSR4[nCntArq,1] + ", "
	Else
		cCposSR4 += aStruSR4[nCntArq,1] + " "
	EndIf
Next nCntArq

//Carrega os campos da tabela SRL p/ uso na Query
For nCntArq := 1 To Len(aStruSRL)
	If nCntArq < Len(aStruSRL)
		cCposSRL += aStruSRL[nCntArq,1] + ", "
	Else
		cCposSRL += aStruSRL[nCntArq,1] + " "
	EndIf
Next nCntArq

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica o Ano Calendario para direcionar para o layout correto da DIRF³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If MV_PAR04 <= "2009"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Processa DIRF - Ano/Calendario ate 2009.  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Gpm590Old(oSelf)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Processa DIRF - Ano/Calendario a partir de 2010.   ³
	//³*** Novo Layout da DIRF 2011.                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Gpm590New(oSelf)
EndIf

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ Gpm590Old    ºAutor  ³Microsiga           º Data ³  01/20/05   º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Processa DIRF - Ano/Calendario ate 2009.                       º±±
±±º      ³                                                                º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gpm590Old(oSelf)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis LOCAIS DO PROGRAMA                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cFilAnterior  := ''
Local cSav20		:= ''
Local cSav7			:= ''
Local nMult			:= 0
Local nPosAnt		:= 0
Local nPosAtu		:= 0
Local nPosCnt		:= 0
Local nTotRegs 		:= 0// Regua
Local aTipo2_0[13][3]
Local aTipo2_0_A[13][3]
Local aTipo2_0_B[13][3]
Local aTipo2_1[13][3]
Local aTipo2_2[13,3]
Local aTipo2_2_A[13,3]
Local aTipo2_2_B[13,3]
Local aTipo2_3[13,3]
Local aTotal[13,3]
Local nTotFunc  	:= 0
Local nSeq   		:= 0
Local lGrava1   	:= .T.
Local lGp590Fun 	:= ExistBlock("GP590Fun")
Local cGrava1  		:= ""
Local cGrava2_0		:= ""
Local cGrava2_0_A	:= ""
Local cGrava2_0_B	:= ""
Local lGrvTp2_0_AB  := .T.
Local cGrava2_1		:= ""
Local lGrvTp2_1		:= .F.
Local cGrava2_2		:= ""
Local cGrava2_2_A	:= ""
Local cGrava2_2_B	:= ""
Local lGrvTp2_2		:= .F.
Local lGrvTp2_2_AB	:= .F.
Local cGrava2_3		:= ""
Local lGrvTp2_3		:= .F.
Local nTotGerIr 	:= 0.00
Local nTotalIr  	:= 0.00
Local M				:= 0
Local N				:= 0
Local lOk			:= .F.
Local lLevaFunc		:= .F.
Local nTotReg		:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis de Acesso do Usuario                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cAcessaSRL	:= &( " { || " + If( Empty( cAcessaSRL := ChkRH( "GPEM590" , "SRL" , "2" ) ) , ".T." , cAcessaSRL ) + " } " )
Private cAcessaSR4	:= &( " { || " + If( Empty( cAcessaSR4 := ChkRH( "GPEM590" , "SR4" , "2" ) ) , ".T." , cAcessaSR4 ) + " } " )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis PRIVADAS BASICAS                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aCRA := { STR0009,STR0010,STR0011 } //"Confirma"###"Redigita"###"Abandona"
Private aABD := { STR0012,STR0013,STR0014 } //"Drive [A]"###"Drive [B]"###"Abandona"
Private aTA  := { STR0015,STR0016 }         //"Tenta Novamente"###"Abandona"
Private aInfo:= {}
Private cSei := ''

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis PRIVADAS DO PROGRAMA                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private nEspaco 	:= 0
Private nDisco 		:= 0
Private nGravados 	:= 0
Private cDrive  	:= " "
Private nReg    	:= 0
Private nReg2 		:= 0
Private nArq		:= 0
Private lZera		:= .F.
Private cArqRCS     := ''
Private cArqSR4     := ''
Private cArqSRL     := ''

nVez := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³MV_PAR01 - C.N.P.J. De ?"                          ³
//³MV_PAR02 - C.N.P.J. Ate ?                          ³
//³MV_PAR03 - Tipo de Entrega ?                       ³
//³MV_PAR04 - Ano Calendario ?                        ³
//³MV_PAR05 - Ano Referencia ?                        ³
//³MV_PAR06 - Filial Responsavel ?                    ³
//³MV_PAR07 - CPF Responsavel ?                       ³
//³MV_PAR08 - Nome Responsavel ?                      ³
//³MV_PAR09 - DDD/Fone/Ramal ?                        ³
//³MV_PAR10 - E-mail Responsavel ?                    ³
//³MV_PAR11 - Arquivo Destino ?                       ³
//³MV_PAR12 - Situacao da Decl. ?                     ³
//³MV_PAR13 - Data do Evento    ?                     ³
//³MV_PAR14 - Tipo de Evento    ?                     ³
//³MV_PAR15 - Natureza Declarante ?                   ³
//³MV_PAR16 - Numero do Recibo    ?                   ³
//³MV_PAR17 - Indicacao do tipo de rendimento/Imposto ³
//³MV_PAR18 - Indicador de declarante depositario     ³
//³MV_PAR19 - Indicador de Socio Ostensivo responsavel³
//³           por Sociedade por Conta de Participacao ³
//³           - SPC.                                  ³
//³MV_PAR20 - CPF do responsavel perante o CNPJ       ³
//³MV_PAR21 - Tipo de arquivo 1-Declaraçao/		      ³
//³           2- Comprovante de rendimentos           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCgcDe   	:= mv_par01
cCgcAte  	:= mv_par02
cSei     	:= If(mv_par03 == 1 ,"O","R")
cAnoBase 	:= mv_par04
cAnoRef	 	:= mv_par05
cFilResp 	:= mv_par06
cCpfResp 	:= mv_par07
cNomResp 	:= Padr(mv_par08,60)
cDDDResp 	:= StrZero(Val(SubStr(mv_par09,2,4)),4)      //  Formato (011 )99999-9999/R:999999
cFoneResp	:= StrZero(Val(SubStr(mv_par09,7,5)+SubStr(mv_par09,13,4)),9)
cRamal   	:= If( Empty( SubStr( MV_PAR09, 20, 6 ) ), "", AllTrim( Str( Val( SubStr( MV_PAR09, 20, 6 ) ) ) ) 	)
cEmailRes	:= mv_par10
cDrive   	:= mv_par11
cSitDecl 	:= StrZero(mv_par12,1)
cEvento	 	:= strzero(day(mv_par13),2)+strzero(month(mv_par13),2)+strzero(year(mv_par13),4)
cTpEvento	:= If( mv_par14==3,space(01),str(mv_par14,1) )
cNatDecl 	:= If(mv_par15 == 1 ,"0",If (mv_par15 == 2 ,"1",If(mv_par15 == 3,"2",If(mv_par15 == 4,"3","4"))))
cRecibo	 	:= mv_par16
cIdentRend 	:= If(mv_par17 == 1 ,"0","1")
cIndDep		:= If(mv_par18 == 1 ,"0","1")
cIndSocio	:= If(mv_par19 == 1 ,"0","1")
cCPF_CNPJ	:= mv_par20
nTipoArq	:= MV_PAR21
cFaxResp	:= Replicate("0",9)

If SubStr(cFoneResp,1,1) == "0"
	cFoneResp := SubStr(cFoneResp,2,8)
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona Ponteiro "DE" Informado                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea( "SRL" )

cArqNtx  := CriaTrab(NIL, .F.)
cIndCond := "RL_CGCFONT + RL_CODRET + RL_TIPOFJ + RL_CPFCGC + RL_FILIAL + RL_MAT"
IndRegua("SRL",cArqNtx,cIndCond,,,"Selecionando Registros...")

cCgcAnt := "!!!!!!!!!!!!!!"
cRetAnt := Space(04)
nSeq    := 1
nReg    := 0
nReg2   := 0

cFilAnterior  := Replicate("!", FWGETTAMFILIAL)
cCpfCgcAnt    := "!!!!!!!!!!!!!!"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³monta matriz zerada para cada beneficiario³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aEval(aTotal    ,{|x|aFill(x,0)})
aEval(aTipo2_0  ,{|x|aFill(x,0)})
aEval(aTipo2_0_A,{|x|aFill(x,0)})
aEval(aTipo2_0_B,{|x|aFill(x,0)})
aEval(aTipo2_1  ,{|x|aFill(x,0)})
aEval(aTipo2_2  ,{|x|aFill(x,0)})
aEval(aTipo2_2_A,{|x|aFill(x,0)})
aEval(aTipo2_2_B,{|x|aFill(x,0)})
aEval(aTipo2_3  ,{|x|aFill(x,0)})

If !fInfo(@aInfo,cFilResp)
	Return()
Endif

cCgcResp := Left(aInfo[8] + Space(14),14)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Desenha cursor para movimentacao                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTotReg := SRL->(RecCount())
ProcRegua(SRL->(RecCount()))
dbSeek( cCgcDe , .T. )

If nTipoArq == 1 //Declaracao
	While !Eof() .And. SRL->RL_CGCFONT <= cCgcAte
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Movimenta Regua Processamento                                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IncProc(STR0017)	//"D.I.R.F."

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Consiste Controlde de Acesso                                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !(SRL->RL_FILIAL $ cValidFil ) .Or. !Eval(cAcessaSRL)
			SRL->(dbSkip())
			Loop
		EndIF
		If SRL->RL_CPFCGC # cCpfCgcAnt .or. SRL->RL_CGCFONT # CCgcAnt
			aEval(aTipo2_0  ,{|x|aFill(x,0)})
			aEval(aTipo2_0_A,{|x|aFill(x,0)})
			aEval(aTipo2_0_B,{|x|aFill(x,0)})
			aEval(aTipo2_1  ,{|x|aFill(x,0)})
			aEval(aTipo2_2  ,{|x|aFill(x,0)})
			aEval(aTipo2_2_A,{|x|aFill(x,0)})
			aEval(aTipo2_2_B,{|x|aFill(x,0)})
			aEval(aTipo2_3  ,{|x|aFill(x,0)})

			cCpfCgcAnt := SRL->RL_CPFCGC
		Endif

		If SRL->RL_CGCFONT # CCgcAnt

			cCgcAnt := SRL->RL_CGCFONT
			cRetAnt := SRL->RL_CODRET
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Funcao para gerar registro tipo 1 lay-out dirf³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cGrava1 := MontaTipo1(nSeq)

			lGrava1 := .T.
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Matriz zerada para cada beneficiario³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aEval(aTotal,{|x|aFill(x,0)})
		Endif
		cCpfCgcAnt    := SRL->RL_CPFCGC
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta Registro Tipo 2    Beneficiario                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SR4")    // Preenche a matriz com os valores existentes
		dbSeek( SRL->RL_FILIAL + SRL->RL_MAT + SRL->RL_CPFCGC + SRL->RL_CODRET+cAnoBase )

		While ! Eof() .And. SRL->RL_FILIAL+SRL->RL_MAT+SRL->RL_CPFCGC+SRL->RL_CODRET+cAnoBase == ;
			SR4->R4_FILIAL+SR4->R4_MAT+SR4->R4_CPFCGC+SR4->R4_CODRET+SR4->R4_ANO

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Consiste Controle de de Acesso                                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !(SR4->R4_FILIAL $ cValidFil ) .Or. !Eval(cAcessaSR4)
				SR4->(dbSkip())
				Loop
			EndIF
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Informacoes dos beneficiarios.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			lOk 	:= .F.
			If len(AllTrim(SR4->R4_TIPOREN))== 1
				If AllTrim(SR4->R4_TIPOREN)$ "AxBxCxDxJxKxLxTxM"
					nMes   := Val(SR4->R4_MES)
					If AllTrim(SR4->R4_TIPOREN)$ "AxDxJxKxLx"
						If AllTrim(SR4->R4_TIPOREN) $ 'AxJ'
							nElem  	:= 1
							nMes   	:= If (AllTrim(SR4->R4_TIPOREN) = "A",Val(SR4->R4_MES),13)
							lOk 	:= .T.
						Elseif AllTrim(SR4->R4_TIPOREN) $ 'DxL'
							nElem  := 3
							nMes   := If (AllTrim(SR4->R4_TIPOREN) # "L",Val(SR4->R4_MES),13)
							lOk 	:= .T.
						Endif
						nMesUf := Val(SR4->R4_MES)

						If lOk
							aTipo2_0[nMes,nElem] +=  NoRound(SR4->R4_VALOR, 2)
						EndIf

					Elseif AllTrim(SR4->R4_TIPOREN) $ 'BxCxKxTxM' .and. !( ((cAnoBase>="2007" .and. cAnoBase<=cAnoRef) .or. cAnoBase>="2008") .and. cAnoRef >="2008")
						nElem  := 2
						nMes   := If ( AllTrim(SR4->R4_TIPOREN) # "K",Val(SR4->R4_MES),13)
						lOk 	:= .T.
						If lOk
							aTipo2_0[nMes,nElem] +=  NoRound(SR4->R4_VALOR, 2)
						EndIf

					ElseIf ( cAnoBase >="2007" .and. cAnoRef >="2008") .and. AllTrim(SR4->R4_TIPOREN)$ "BxCxTxM"
						If AllTrim(SR4->R4_TIPOREN) $ 'B'
							aTipo2_0_A[nMes,1] +=  NoRound(SR4->R4_VALOR, 2)
						ElseIf AllTrim(SR4->R4_TIPOREN) $ 'T'
							aTipo2_0_A[nMes,2] +=  NoRound(SR4->R4_VALOR, 2)
						ElseIf AllTrim(SR4->R4_TIPOREN) $ 'C'
							aTipo2_0_A[nMes,3] +=  NoRound(SR4->R4_VALOR, 2)
						ElseIf AllTrim(SR4->R4_TIPOREN) $ 'M'
							aTipo2_0_B[nMes,1] +=  NoRound(SR4->R4_VALOR, 2)
						EndIf
						lGrvTp2_0_AB := .T.
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Beneficiarios com valores de imposto compensados³
					//³em virtude de decisao judicial.                 ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ElseIf AllTrim(SR4->R4_TIPOREN)$ "V#1"
					nMes   	:= If (AllTrim(SR4->R4_TIPOREN) # "1",Val(SR4->R4_MES),13)
					nElem	:= 2
					aTipo2_1[nMes,nElem] +=  NoRound(SR4->R4_VALOR, 2)
					lGrvTp2_1 := .T.
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Beneficiarios com rendimneto/imposto cuja tributação ³
					//³esta sob exigibilidade suspensa.                     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ElseIf AllTrim(SR4->R4_TIPOREN)$ "W#X#Y#2#3#4#6#7#8#9"
					nMes   	:= If ( !(AllTrim(SR4->R4_TIPOREN) $ "2#3#4"),Val(SR4->R4_MES),13)

					lGrvTp2_2 := .T.

					If AllTrim(SR4->R4_TIPOREN) $ "W#2#X#3#Y#4"
						If AllTrim(SR4->R4_TIPOREN)$ "W#2"
							nElem	:= 1
							lOk 	:= .T.
						Elseif	AllTrim(SR4->R4_TIPOREN)$ "X#3" .and. !( cAnoBase>="2007" .and. cAnoRef >="2008")
							nElem	:= 2
							lOk 	:= .T.
						ElseIf	AllTrim(SR4->R4_TIPOREN)$ "Y#4"
							nElem	:= 3
							lOk 	:= .T.
						EndIf
					    If lOk
							aTipo2_2[nMes,nElem] +=  NoRound(SR4->R4_VALOR, 2)
						EndIf

					ElseIf ( cAnoBase>="2007" .and. cAnoRef >="2008") .and. AllTrim(SR4->R4_TIPOREN)$ "6#7#8#9"

						If	AllTrim(SR4->R4_TIPOREN)$ "6"
							aTipo2_2_A[nMes,1] +=  NoRound(SR4->R4_VALOR, 2)
						ElseIf AllTrim(SR4->R4_TIPOREN)$ "7"
							aTipo2_2_A[nMes,2] +=  NoRound(SR4->R4_VALOR, 2)
						ElseIf AllTrim(SR4->R4_TIPOREN)$ "8"
							aTipo2_2_A[nMes,3] +=  NoRound(SR4->R4_VALOR, 2)
						ElseIf AllTrim(SR4->R4_TIPOREN) $ '9'
							aTipo2_2_B[nMes,1] +=  NoRound(SR4->R4_VALOR, 2)
						EndIf
						lGrvTp2_2_AB := .T.

					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Beneficiarios do imposto de renda retido na fonte³
					//³com deposito judicial.                           ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ElseIf AllTrim(SR4->R4_TIPOREN)$ "Z#5"
					nMes   	:= If (AllTrim(SR4->R4_TIPOREN) # "5",Val(SR4->R4_MES),13)
					nElem	:= 1
					aTipo2_3[nMes,nElem] +=  NoRound(SR4->R4_VALOR, 2)
					lGrvTp2_3 := .T.
				Endif

			ElseIf len(AllTrim(SR4->R4_TIPOREN))== 2 //Deducoes de 13o
				nMes := 13
				If ( cAnoBase >="2007" .and. cAnoRef >="2008") .and. AllTrim(SR4->R4_TIPOREN)$ "B1xC1xT1xM1"
					If AllTrim(SR4->R4_TIPOREN) $ 'B1'
						aTipo2_0_A[nMes,1] +=  NoRound(SR4->R4_VALOR, 2)
					ElseIf AllTrim(SR4->R4_TIPOREN) $ 'T1'
						aTipo2_0_A[nMes,2] +=  NoRound(SR4->R4_VALOR, 2)
					ElseIf AllTrim(SR4->R4_TIPOREN) $ 'C1'
						aTipo2_0_A[nMes,3] +=  NoRound(SR4->R4_VALOR, 2)
					ElseIf AllTrim(SR4->R4_TIPOREN) $ 'M1'
						aTipo2_0_B[nMes,1] +=  NoRound(SR4->R4_VALOR, 2)
					EndIf
					lGrvTp2_0_AB := .T.

				ElseIf ( cAnoBase>="2007" .and. cAnoRef >="2008") .and. AllTrim(SR4->R4_TIPOREN)$ "61#71#81#91"

					If	AllTrim(SR4->R4_TIPOREN)$ "61"
						aTipo2_2_A[nMes,1] +=  NoRound(SR4->R4_VALOR, 2)
					ElseIf AllTrim(SR4->R4_TIPOREN)$ "71"
						aTipo2_2_A[nMes,2] +=  NoRound(SR4->R4_VALOR, 2)
					ElseIf AllTrim(SR4->R4_TIPOREN)$ "81"
						aTipo2_2_A[nMes,3] +=  NoRound(SR4->R4_VALOR, 2)
					ElseIf AllTrim(SR4->R4_TIPOREN) $ '91'
						aTipo2_2_B[nMes,1] +=  NoRound(SR4->R4_VALOR, 2)
					EndIf
					lGrvTp2_2_AB := .T.
				EndIf
			EndIf
			dbSkip()
		Enddo
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Pula para verificar se o proximo tem o mesmo CPFCGC³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SRL")
		nOldRec := SRL->( RECNO() )
		dbSkip()
		If SRL->RL_CPFCGC # cCpfCgcAnt .Or. SRL->RL_CGCFONT # cCgcAnt  .Or. SRL->RL_CODRET # cRetAnt
			lZera 	:= (SRL->RL_CODRET # cRetAnt)
			cRetAnt := SRL->RL_CODRET
			dbGoTo(nOldRec)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ So Grava Para Quem Teve Imposto Retido Durante o Ano         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nTotalIR := 0.00
			FOR M = 1 TO 13
				nTotalIR += aTipo2_0[m,3]
			Next M
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ So grava para quem teve rendimento superior a 6.000 no ano,  ³
			//³ conforme artigo 1o. da IN. SRF No. 511/2005.		 		 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nTotalRend := 0.00
			FOR M = 1 TO 13
				nTotalRend += aTipo2_0[m,1]
			Next M

			lLevaFunc := .F.
			If lGp590Fun
				lLevaFunc := (ExecBlock("GP590Fun",.F.,.F.))
			EndIf

			If (nTotalRend > 6000 .and. SRL->RL_CODRET $ "0561#0588#3208") .Or. nTotalIr > 0.00 .or. lLevaFunc
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Gravar Registro Tipo 1 so' quando houver Ir Retido neste CGC³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lGrava1
					If !Grava(cGrava1)
						Return
					Endif
					lGrava1 := .F.
					nSeq ++
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Monta registro tipo 2 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cGrava2_0 := MontaTipo2(nSeq,aTipo2_0,@aTotal,"0",If( ((cAnoBase>="2007" .and. cAnoBase<=cAnoRef) .or. cAnoBase==cAnoRef)  .and. cAnoRef >="2008","0",space(1)))
				If !Grava(cGrava2_0)
					Return
				Endif

				If ( cAnoBase>="2007" .and. cAnoRef >="2008") .and. lGrvTp2_0_AB .and. SRL->RL_TIPOFJ == "1"
					nSeq ++ //Deducoes prev. Oficial, dependentes e Pensao alimenticia
					cGrava2_0_A := MontaTipo2(nSeq,aTipo2_0_A,@aTotal,"0","1")
					If !Grava(cGrava2_0_A)
						Return
					Endif

					nSeq ++  //Deducoes previdencia privada e ao FAPI
					cGrava2_0_B := MontaTipo2(nSeq,aTipo2_0_B,@aTotal,"0","2")
					If !Grava(cGrava2_0_B)
						Return
					Endif
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Beneficiarios com valores de imposto compensados em virtude de decisao judicial.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lGrvTp2_1
					nSeq ++
					cGrava2_1 := MontaTipo2(nSeq,aTipo2_1,@aTotal,"1",space(1))
					If !Grava(cGrava2_1)
						Return
					Endif
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Beneficiarios com rendimento/imposto cuja tributação esta sob exigibilidade suspensa.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lGrvTp2_2
					nSeq ++
					cGrava2_2 := MontaTipo2(nSeq,aTipo2_2,@aTotal,"2",If(((cAnoBase>="2007" .and. cAnoBase<=cAnoRef) .or. cAnoBase==cAnoRef) .and. cAnoRef>="2008","0",space(1)))
					If !Grava(cGrava2_2)
						Return
					Endif

					If ( cAnoBase>="2007" .and. cAnoRef >="2008") .and. lGrvTp2_2_AB .and. SRL->RL_TIPOFJ == "1"
						nSeq ++ //Exig. Suspensa deducoes prev. Oficial, dependentes, e pensao alimenticia
						cGrava2_2_A := MontaTipo2(nSeq,aTipo2_2_A,@aTotal,"2","1")
						If !Grava(cGrava2_2_A)
							Return
						Endif

						nSeq ++ //Exig.Suspensa dedução de previdencia privada e FAPI
						cGrava2_2_B := MontaTipo2(nSeq,aTipo2_2_B,@aTotal,"2","2")
						If !Grava(cGrava2_2_B)
							Return
						EndIf
					Endif
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Beneficiarios do imposto de renda retido na fonte com deposito judicial.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lGrvTp2_3
					nSeq ++
					cGrava2_3 := MontaTipo2(nSeq,aTipo2_3,@aTotal,"3",space(1))
					If !Grava(cGrava2_3)
						Return
					Endif
				EndIf
				nSeq ++
				nTotFunc ++
			Endif
			dbSelectArea("SRL")
			dbSkip()
		Endif

		If SRL->RL_CPFCGC # cCpfCgcAnt .Or. SRL->RL_CODRET # cRetAnt .or. lZera
			aEval(aTipo2_0  ,{|x|aFill(x,0)})
			aEval(aTipo2_0_A,{|x|aFill(x,0)})
			aEval(aTipo2_0_B,{|x|aFill(x,0)})
			aEval(aTipo2_1  ,{|x|aFill(x,0)})
			aEval(aTipo2_2  ,{|x|aFill(x,0)})
			aEval(aTipo2_2_A,{|x|aFill(x,0)})
			aEval(aTipo2_2_B,{|x|aFill(x,0)})
			aEval(aTipo2_3  ,{|x|aFill(x,0)})
			cCpfCgcAnt := SRL->RL_CPFCGC
			lGrvTp2_1 := .F.
			lGrvTp2_2 := .F.
			lGrvTp2_3 := .F.
		Endif

		dbSelectArea("SRL")

	Enddo

	FClose(nArq)

	dbSelectArea("SRL")
	SET FILTER TO
	RetIndex("SRA")
Else
	fGeraInforme(oSelf)
	FClose(nArq)
	dbSelectArea ("SRL")
	dbSelectArea("SRL")
	SET FILTER TO

	If !Empty(cArqSR4)
		dbSelectArea ("SR4")
		RetIndex("SR4")
		dbSetOrder(1)
		If File(cArqSR4+OrdBagExt())
			fErase(cArqSR4+OrdBagExt())
		EndIf
	EndIF

	If !Empty(cArqRCS)
		dbSelectArea ("RCS")
		RetIndex("RCS")
		dbSetOrder(1)
		If File(cArqRCS+OrdBagExt())
			fErase(cArqRCS+OrdBagExt())
		EndIf
	EndIf
	RetIndex("SRA")
EndIf

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Grava     ³ Autor ³ R.H. -                ³ Data ³ 26/01/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gravacao do registro TXT                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Grava(cReg)  		                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ creg := Registro texto				                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM590                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Grava(cRegistro)
Local cMsg 	:= ""

If nVez == Nil  .Or. nVez == 0

	If MV_PAR21==2

		nPos := At( ":",upper(cDrive )	)
		If Upper(Substr( cDrive,nPos+1,6)) == "\DIRF\"
			cDrive := Substr(cDrive,1,(nPos+6) )+"Informe.txt"
	   	Else
			nPos:= At( "DIRF",upper(cDrive )	)
			cDrive := Substr(cDrive,1,(nPos-1))+"Informe.txt"
		EndIf
	EndIf
	cDrive := Alltrim(Upper(cDrive))

	nArq := MSFCREATE(cDrive,0)
	If Ferror() # 0 .AND. nArq = -1
		cMsg := STR0019+STR(Ferror(),3) 			//-- " Erro de grava‡„o, codigo DOS: "
		Help('',1,,,cMsg,1)
		Return(.F.)
	Endif
	nVez := 1

Endif

If !Empty( cRegistro )
	cRegistro := Subs(cRegistro+Space(730),1,730)+CHR(13)+CHR(10)

	Fwrite(nArq,cRegistro,732)

	If Ferror() # 0
		cMsg := STR0019+STR(Ferror(),3) 		//-- "Erro de grava‡„o, codigo DOS:"
		Help('',1,,,cMsg,1)
		Return(.F.)
	Endif
EndIf

Return( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FDDIRF    ³ Autor ³ R.H. -                ³ Data ³ 26/01/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ SELECIONAR DIRETORIO PARA GRAVAR ARQUIVO DIRF              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FDDirf()     		                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM590                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function FDDirf()
Local mvRet := Alltrim(ReadVar())
Local cFile := ''

oWnd 	:= GetWndDefault()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de entrada para alterar o nome da variavel cFile                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("GP590ARQ")
	cFile := ExecBlock("GP590ARQ",.F.,.F.,cFile)
Else
	cFile 	:= cGetFile(STR0021, OemToAnsi(STR0022)) //"D.I.R.F. |DIRF"###"Selecione Diretorio"
	If Empty(cFile)
		Return(.F.)
	Endif
	cDrive := Alltrim(Upper(cFile))
EndIf

&mvRet := cFile
If oWnd != Nil
	GetdRefresh()
EndIf

Return( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MONTATIPO1³ Autor ³ R.H. -                ³ Data ³ 26/01/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ MONTA REGISTRO TIPO 1 DA DIRF                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MONTATIPO1() 		                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ aTotal - Array com os valore da filial                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM590                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MontaTipo1(nSeq)
Local	cRazao     := ""
Local	cEndereco  := ""
Local	cCompl     := ""
Local	cBairro    := ""
Local	cCep       := ""
Local	cCidade    := ""
Local	cUf        := ""
Local	cFone      := ""
Local	cTipoDecl  := ""
Local	aFoneSM0   := {}

If !fInfo(@aInfo,cFilResp)
	Return(.F.)
Endif

cRazao    := Subs(aInfo[03] + Space(60),1,60)
cEndereco := Left(aInfo[04] + Space(40),40)
cCompl    := Left(aInfo[14] + Space(20),20)
cBairro   := Left(aInfo[13] + Space(20),20)
cCep      := Left(aInfo[07] + Space(08),8)
cCidade   := Left(aInfo[05] + Space(40),40)
cUf       := Left(aInfo[06] + Space(02),2)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Funcao para desmembrar o telefone em um vetor com 3 elementos:		³
//³		1o Elemento - Refere-se ao DDI									³
//³		2o Elemento - Refere-se ao DDD									³
//³		3o Elemento - Refere-se ao TELEFONE								³
//³ Deve-se enviar o telefone em uma variavel caracter com o conteudo	³
//³ do campo SM0->M0_FONE.												³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aFoneSM0	:= FisGetTel( aInfo[10] )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caracteres nao aceitos no DIRF                                      ³
//³	NAO UTILIZADO, pois a funcao FisGetTel retorna vetor numerico       ³
//³	Mantido para historico                                              ³
//³	aCaracter	:= {"/",".","\","-",","," ","(",")"}                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

cDDD		:= StrZero( aFoneSM0[02], 4 )
cFone		:= StrZero( aFoneSM0[03], 8 )

cTipoDecl	:= If (aInfo[15] == 3 , "1","2")

cGrava1 := STRZERO(nSeq,8)							// Sequencia   		001 a 008
cGrava1 += '1'										// Tipo registro	009 a 009
cGrava1 += StrZero(val(SRL->RL_CGCFONT),14)		    // CNPJ Declar. 	010 a 023
cGrava1 += "DIRF" 									// Nome do Arquivo 	024 a 027
cGrava1 += cAnobase									// Ano Calendario	028 a 031
cGrava1 += cSei 									// Tipo Declaracao  032 a 032   // O-Original ou R-Retificadora
cGrava1 += cSitDecl									// Situacao Decl.	033 a 033	// 1-Declaracao Normal , 2-extincao/encerramento de espolio/saida definitiva do pais
cGrava1 += cTipoDecl								// Tipo Declarante	034	a 034	// 1-Fisica 2-Juridica
cGrava1 += cNatDecl	 								// Natureza 		035 a 035
cGrava1 += cIdentRend								// Ident.Tipo rend.	036 a 036
cGrava1 += cAnoRef	 								// Ano referencia	037 a 040
cGrava1 += cIndDep	 								// Ind.Decl.Deposit.041 a 041	// 0- Nao depositario de decisao judicial, 1 - Depositario de decisao judicial
cGrava1 += cIndSocio 								// Ind Socio Ostens.042 a 042   // 0- Nao e Socio Ostensivo; 1- Socio Ostensivo
cGrava1 += PADR(SRL->RL_NOMFONT,60)   				// Nome empresarial 043 a 102
cGrava1 += cCPF_CNPJ 								// Cpf Resp. CNPJ	103 a 113
cGrava1 += If(cSitDecl=="1",SPACE(08),cEvento)		// Data do Evento	114 a 121
cGrava1 += cTpEvento 								// Tipo do Evento   122 a 122  	// 1 - Espolio, 2- Saida definitiva do pais
cGrava1 += SPACE(28) 								// em Branco        123 a 150
cGrava1 += space(14)								// em branco        151 a 164
cGrava1 += cRecibo  								// Recibo			165 a 176
cGrava1 += SPACE(229) 								// em Branco		177 a 405
cGrava1 += cCpfResp									// Cpf Resp.		406 a 416
cGrava1 += cNomResp 								// Nome respons.	417 a 476
cGrava1 += cDDDResp 								// DDD Respons.		477 a 480
cGrava1 += cFoneResp 								// Fone respons.	481 a 489
cGrava1 += cRamal									// Ramal respons.	490 a 496
cGrava1 += cFaxResp 								// Fax Respons.		497 a 505
cGrava1 += padr(cEmailRes,50) 						// E-mail Respons.	506 a 555
cGrava1 += Space(165) 								// Branco			556 a 720
cGrava1 += Space(12)								// Branco			721 a 732
cGrava1 += "9"										// Obrigatorio		733 a 733

Return(cGrava1)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MONTATIPO2³ Autor ³ R.H. -                ³ Data ³ 26/01/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Monta Registro Tipo 2 da DIRF(Informacoes dos Beneficiarios)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MONTATIPO2() 		                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ aTotal - Array com os valores da filial                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ GPEM590                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MontaTipo2(nSeq,aTipo2,aTotal,cIdent,cDeducao)
Local nCol		:= 1
Local cBenef	:= ""
Local aCaracter := {}
Local cGrava2	:= ""
Local M			:= 0

dbSelectArea("SRL")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tirar Ponto e caracteres do Nome                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cBenef 		:= SRL->RL_BENEFIC
aCaracter	:= {"/",".","\","-",",","(",")"}   		// Caracteres nao aceitos no DIRF

For nCol:=1 to Len(aCaracter)
	cBenef := STRTRAN(cBenef,aCaracter[nCol]," ")
Next

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tirar caracteres especiais do Nome                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cBenef 		:= FSubst(cBenef)

cGrava2 := STRZERO(nSeq,8)							// Sequencia		001 a 008
cGrava2 += '2'										// Tipo				009 a 009
cGrava2 += StrZero(val(SRL->RL_CGCFONT),14)		    // CNPJ Decl.		010 a 023
cGrava2 += SRL->RL_CODRET							// Cod.Retencao		024 a 027
cGrava2 += SRL->RL_TIPOFJ							// Especie benef.	028 a 028 //1- Beneficiario pessoa Fisica, 2-Beneficiario pessoa Juridica

If SRL->RL_TIPOFJ = "1"
	cGrava2 += "000"+Subs(SRL->RL_CPFCGC,1,11)		// CPF Bebefic.		029 a 042
Else
	cGrava2 += SRL->RL_CPFCGC						// CNPJ Benefic.	029 a 042
Endif
cGrava2 += PADR(cBenef,60)							// Nome Bebefic.	043 a 102

For M = 1 To 13
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Zera o valor dos Rendimento se Negativo                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If aTipo2[M,1]  < 0.00
		aTipo2[M,1] := 0.00
	Endif

	cGrava2 += Strzero( aTipo2[M,1] * 100 , 15) // Rendimento
	cGrava2 += Strzero( aTipo2[M,2] * 100 , 15)	// Deducao
	cGrava2 += Strzero( aTipo2[M,3] * 100 , 15) // Imposto Retido

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Soma os Valores Para Totalizar o Codigo de Retencao          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aTotal[M,1] += aTipo2[m,1]
	aTotal[M,2] += aTipo2[m,2]
	aTotal[m,3] += aTipo2[m,3]
Next
cGrava2 += cIdent									// Identif. Situacao	688 a 688
cGrava2 += cDeducao									// Ident.Espec.Deducoes 689 a 689
cGrava2 += Space(8)									// Branco				690 a 697
cGrava2 += padr(SRL->RL_FILIAL+SRL->RL_MAT,32)		// Uso Declarante		698 a 729
cGrava2 += "9"										// Obrigatorio			730 a 730

Return(cGrava2)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEM590   ºAutor  ³Microsiga           º Data ³  01/08/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function fGeraInforme(oSelf)

Local aCPFCGC 	:= {}
Local nPos		:= 0
Local nCPFCGC	:= 0
Local aLetra 	:= {"A","B","M","C","T","D","E","F","G","H","P","U","I","J","K","L","O","R","V","W","X","Y","Z","1","2","3","4","5","6","7","8","9","B1","C1","M1","T1","61","71","81","91"}
//--                1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32   33   34   35   36   37   38   39   40
Local aTotLetra [40]
Local l1Vez		:= .T.
Local cFil_MAT	:= ""
Local aComplem	:= {}
Local nx		:= 0
Local cDescOred := ""
Local lCentra	:= .T.
Local lGp590Fun := ExistBlock("GP590Fun")
Local nTotalIR := 0.00
Local nTotalRend := 0.00
Local cComplem	:= ""

While SRL->(!Eof()) .And. SRL->RL_CGCFONT <= cCgcAte
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Movimenta Regua Processamento                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IncProc(STR0017)	//"D.I.R.F."

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Consiste Controlde de Acesso                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !(SRL->RL_FILIAL $ fValidFil() ) .Or. !Eval(cAcessaSRL)
		SRL->(dbSkip())
		Loop
	EndIF

	If AllTrim( SRL->RL_TIPOFJ ) == "2"
		SRL->(dbSkip())
		Loop
	EndIf

	If SRL->RL_CGCFONT < cCgcDe .or. SRL->RL_CGCFONT > cCgcAte
		dbSelectArea ( "SRL" )
		SRL->(dbSkip())
		Loop
	EndIf

	If SRL->RL_CPFCGC # cCpfCgcAnt .or. SRL->RL_CGCFONT # CCgcAnt
		cCpfCgcAnt := SRL->RL_CPFCGC //ZERA VARIAVEIS
	Endif

	If SRL->RL_CGCFONT # CCgcAnt
		cCgcAnt := SRL->RL_CGCFONT
		cRetAnt := SRL->RL_CODRET
	Endif

	cCpfCgcAnt    := SRL->RL_CPFCGC

	dbSelectArea ("SR4")
	nOrdem := RetOrder( "SR4" , "R4_ANO+R4_CPFCGC+R4_CODRET+R4_MES" , .T. )
	If  nOrdem == 0
		cArqSR4 := criatrab("",.F.)
		IndRegua("SR4",cArqSR4,"R4_ANO+R4_CPFCGC+R4_CODRET+R4_MES",,,STR0012) //"Selecionando Registros..."
		nIndex 	:= RetIndex("SR4")
		dbSetIndex(cArqSR4+OrdBagExt())
		SR4->( dbSetOrder(nIndex+1))

	Else
		SR4->( dbSetOrder( nOrdem )	)
    EndIf

	dbSelectArea ("RCS")
	nOrdem := RetOrder( "RCS" , "RCS_ANO+RCS_CPFBEN+RCS_CODRET" , .T. )
	If nOrdem == 0
		cArqRCS := criatrab("",.F.)

		IndRegua("RCS",cArqRCS,"RCS_ANO+RCS_CPFBEN+RCS_CODRET",,,STR0012) //"Selecionando Registros..."
		nIndex 	:= RetIndex("RCS")
		dbSetIndex(cArqRCS+OrdBagExt())
		RCS->( dbSetOrder(nIndex+1))
    Else
		RCS->( dbSetOrder(nOrdem) )
    EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Guarda o CPF/CNPJ do beneficiário para não gerar mais de uma ³
	//³vez a mesma pessoa.                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nCPFCGC :=  ascan(aCPFCGC,{|X|X[1]==SRL->RL_CPFCGC})
	If nCPFCGC > 0
		If alltrim(SRL->RL_CGCFONT) == alltrim(aCPFCGC[nCPFCGC,2])  .and. ;
			alltrim(SRL->RL_CODRET) == alltrim(aCPFCGC[nCPFCGC,3])
			SRL->(dbSkip())
			Loop
		EndIf
	EndIf

	Afill ( aTotLetra , 0 )
	l1Vez		:= .T.
	nTotalIR	:= 0
	nTotalRend	:= 0

	cSr4Filial 	:= Replicate("!", FwGetTamFilial)

	dbSelectArea ( "SR4" )
	SR4->( dbSeek ( cAnoBase + SRL->RL_CPFCGC + SRL->RL_CODRET ) )

	While SR4->(! Eof() ) .AND. SR4->R4_ANO == cAnoBase .AND. SR4->R4_CPFCGC == SRL->RL_CPFCGC .AND. SR4->R4_CODRET == SRL->RL_CODRET

		If !(SR4->R4_FILIAL $ fValidFil() ) .Or. !Eval(cAcessaSR4)
			SR4->(dbSkip())
			Loop
		EndIf

    	If l1Vez
    		chkAtivo(@cFil_MAT)
	    	l1Vez := .F.
    	EndIf

		If (SR4->R4_FILIAL # SRL->RL_FILIAL )
			If cSr4Filial # SR4->R4_FILIAL
				dbSelectArea("SRL")
				aArea		:= GetArea()
				SRL->( dbSetOrder(1) )
				cCNPJoLD 	:= SRL->RL_CGCFONT
				cSr4Filial 	:= SR4->R4_FILIAL
				SRL->(dbSeek(SR4->R4_FILIAL+SR4->R4_MAT))
				If SRL->RL_CGCFONT # cCNPJoLD
					lCentra := .F.
				   	SR4->( dbSkip() )
					RestArea(aArea)
			   		Loop
				EndIf

				chkAtivo(@cFil_mat)

				RestArea(aArea)
			ElseIf !lCentra
			   	SR4->( dbSkip() )
				Loop
			EndIf
		EndIf

		nLetra := Ascan(aLetra,Alltrim(SR4->R4_TIPOREN))

		If nLetra >0
			aTotLetra[nLetra] += NoRound(SR4->R4_VALOR,2)

			If Alltrim(SR4->R4_TIPOREN) $"D#L"
				nTotalIR += SR4->R4_VALOR
			EndIf

			If Alltrim(SR4->R4_TIPOREN) $"A#J"
				nTotalRend += SR4->R4_VALOR
			EndIf

		EndIf

		SR4->( dbSkip() )
    EndDo

	lLevaFunc := .F.
	If lGp590Fun
		lLevaFunc := (ExecBlock("GP590Fun",.F.,.F.))
	EndIf

	If (nTotalRend > 6000 .and. SRL->RL_CODRET $ "0561#0588#3208") .Or. nTotalIr > 0.00 .or. lLevaFunc

	    dbSelectArea("RCS")

		RCS->( dbSeek( cAnoBase + SRL->RL_CPFCGC + SRL->RL_CODRET ))

		cCNPJoLD 	:= ""
		cRCSFilial 	:= Replicate("!", FwGetTamFilial)
		aComplem	:= {}
		While RCS->(! Eof() ) .AND. RCS->RCS_ANO == cAnoBase .AND. RCS->RCS_CPFBEN == SRL->RL_CPFCGC .AND. RCS->RCS_CODRET == SRL->RL_CODRET

			If (RCS->RCS_FILIAL # SRL->RL_FILIAL )
				If cRCSFilial # RCS->RCS_FILIAL
					dbSelectArea("SRL")
					aArea	:= GetArea()
					SRL->( dbSetOrder(1) )
					cCNPJoLD 	:= SRL->RL_CGCFONT
					cRCSFilial 	:= RCS->RCS_FILIAL
					SRL->(dbSeek(RCS->RCS_FILIAL+RCS->RCS_MAT))
					If SRL->RL_CGCFONT # cCNPJoLD
						lCentra := .F.
					   	RCS->( dbSkip() )
						RestArea(aArea)
				   		Loop
					EndIf
					RestArea(aArea)
				ElseIf !lCentra
			   		RCS->( dbSkip() )
					Loop
				EndIf
			EndIf

			If !Empty(RCS->RCS_NOME) .and. Empty(RCS->RCS_OUTROS)
				If RCS->RCS_VALOR # 0

					cChave 	:= RCS->RCS_CPFCGC + RCS->RCS_VERBA + RCS->RCS_TIPORE
					nPos 	:= Ascan( aComplem,{|X|X[3] == cChave .and. X[2]> 0 })
					If nPos > 0
						aComplem[nPos,2] += RCS->RCS_VALOR
						RCS->(dbSkip())
						Loop

					Else
						aAdd(aComplem,{Alltrim(FSubst(RCS->RCS_DESCRI))+space(03)+Transform(RCS->RCS_CPFCGC,If(Len(RCS->RCS_CPFCGC) ==11,"@R 999.999.999-99","@R 99.999.999/9999-99")),  RCS->RCS_VALOR ,cChave,If(RCS->RCS_TIPORE ="W" .OR. RCS->RCS_TIPORE ="2",1, If(RCS->RCS_TIPORES = "C" .OR. RCS->RCS_TIPORE ="C1",2,3))})
					EndIf

				Else
					aAdd(aComplem,{SPACE(04)+ FSubst(RCS->RCS_NOME) +space(23), "" } )
				Endif
			EndIf

	   		cDescOred:= ""
			If !Empty(RCS->RCS_OUTROS)
				cDescOred += If(!empty(alltrim(cDescOred)),", ","")+ alltrim(RCS->RCS_OUTROS)
			EndIf

			RCS->( dbSkip() )

		EndDo

	    cComplem	:= ""
		If aTotLetra[07]+aTotLetra[08]+aTotLetra[09]+aTotLetra[10]+aTotLetra[11]+aTotLetra[12]+aTotLetra[13] > 0 .or.;
			Len(aComplem) >0

			If nCPFCGC == 0
				Aadd( aCPFCGC, {SRL->RL_CPFCGC,SRL->RL_CGCFONT,SRL->RL_CODRET})
			EndIf

			cComplem := Left(SRL->RL_CPFCGC+space(11),11 )		// CPF DO BENEFICIARIO  001 a 011
			cComplem += space(45)								// Filler				012 a 056
			cComplem += Strzero( aTotLetra[08] * 100 , 15)		// Aposentadoria		057 a 071
			cComplem += Strzero( aTotLetra[09] * 100 , 15)		// Diarias				072 a 086
			cComplem += Strzero( aTotLetra[10] * 100 , 15)		// Invalidez			087 a 101
			cComplem += Strzero( aTotLetra[11] * 100 , 15)		// Lucro de PJ			102 a 116
			cComplem += Strzero( aTotLetra[12] * 100 , 15)		// Vl.pg. tit.micro emp.117 a 131
			cComplem += Strzero( aTotLetra[07] * 100 , 15)		// indenizacoes			132 a 146
			cComplem += Left( cDescOred+Space(60),60 )			// Descricao de outros  147 a 206
			cComplem += Strzero( aTotLetra[13] * 100 , 15)		// outros rendimentos	207 a 221

			cInf := ""
			For nx := 1 to len(aComplem)
				cInf += aComplem[nx,1] + " => " +TRANSFORM(acomplem[nX,2],"@E 999,999,999.99") +" ;"
			Next

			cComplem += Left(cInf+Space(200),200 )				// Inf.complementares 	222 a 421

		EndIf
		If !Grava(cComplem)
			Return
		EndIf
	EndIf

	SRL->( dbSkip() )
EndDo
Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ Gpm590New    ºAutor  ³Alberto Deviciente	 º Data ³ 16/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Processa DIRF - Ano/Calendario a partir de 2010.               º±±
±±º      ³ *** Novo Layout da DIRF 2011.                                  º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Gpm590New(oSelf)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis LOCAIS DO PROGRAMA                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lPensao 		:= .F.
Local lPrev			:= .F.
Local aAreaAux		:= {}
Local aAreaSR4		:= {}
Local cFilFunc 		:= ""
Local cMatFunc 		:= ""
Local cNomeFunc		:= ""
Local cTipoFJ  		:= ""
Local cCPFCGCFun 	:= ""
Local cCNPJ			:= ""
Local cCodReten 	:= ""
Local cFilIDREC		:= ""
Local cFilBPFDEC	:= ""
Local cFilBPJDEC	:= ""
Local cFilSR4		:= ""
Local cFilAuxR4		:= "########"
Local cFilBenef 	:= ""
Local cRetAux	 	:= ""
Local cTipoRen      := ""
Local cBenPA		:= ""
Local cBenPC		:= ""
Local nValor		:= 0
Local cRetifica 	:= ""
Local cFilialSRV    := if(empty(xFilial("SRV")),'"'+xFilial("SRV")+'"',"SRL->RL_FILIAL")
Local cIdVerAM 		:= "049"  	//Identificador de Calculo de Assistencia Medica do Funcionario (Titular)
Local cIdVerAO 		:= "714"  	//Identificador de Calculo de Assistencia Odontologica do Funcionario (Titular)
Local cVerbAMTit	:= Space(3) //Codigo da Verba de Assistencia Medica do Titular
Local cVerbAOTit	:= Space(3) //Codigo da Verba de Assistencia Odontologica do Titular
Local aRegBenefi 	:= {} 		//Array auxiliar para armazenar registros do Beneficiario
Local aRegEntid		:= {}
Local lAltNome		:= .F.
Local lConsidera 	:= .F.
Local lLevaFunc		:= .F.
Local lLevaPLR		:= .F.
Local lFilSR4Ok		:= .F.
Local lGp590Fun 	:= ExistBlock("GP590Fun")
Local nTotalIR 		:= 0
Local nTotalRend 	:= 0
Local nTotalAno 	:= 0
Local nVlMinIRPF 	:= 0
Local nVlMinOut 	:= 0
Local nTotalResc 	:= 0
Local nPosBen		:= 0

Local cAliasTmp		:= ""
Local cQrySR4		:= ""
Local cQrySRL		:= ""
Local cWhere		:= ""
Local nCntArq		:= 0
Local nRegSRL		:= 0
Local nCol1 		:= 0
Local cFiltSRL		:= ChkRH( "GPEM590" , "SRL" , "2" )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis de Acesso do Usuario                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cAcessaSRL	:= &( " { || " + IF( Empty( cFiltSRL ) , ".T." , StrTran(cFiltSRL, "SRL->", "(cAliasSRL)->") ) + " } " )
Private cAcessaSR4	:= &( " { || " + IF( Empty( cAcessaSR4 := ChkRH( "GPEM590" , "SR4" , "2" ) ) , ".T." , cAcessaSR4 ) + " } " )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis PRIVADAS BASICAS                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cSei

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis PRIVADAS DO PROGRAMA                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cDrive  	:= " "
Private nArq

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ De / Para  (Grau de Parentesco do Dependente)                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aDPGrauPar  := { {"C", "03"},; //Conjuge/Companheiro
						 {"F", "04"},; //Filho(a)
						 {"E", "06"},; //Enteado(a)
						 {"P", "08"},; //Pai/Mãe
					 	 {"O", "10"},; //Outros
					 	 {"A", "10"} } //Agregado

Private aArqvsTMP   := {}
Private oOPSETmp    := Nil
Private oTPSETmp    := Nil
Private oDTPSETmp   := Nil
Private oRDTPSETmp  := Nil
Private oRTPSETmp   := Nil
Private oINFTmp     := Nil
Private oBRPDETmp   := Nil
Private oVRPDETmp   := Nil
Private oCABRRATmp  := Nil
Private oDETRRATmp  := Nil

Private aSubRgIDREC := {}  //Array para armazenar o nome de todos os arrays de Sub-Registros do Bloco IDREC
Private aSubRgVPEIM := {}  //Array para armazenar o nome de todos os arrays de Sub-Registros do Bloco IDREC
Private lTemBenefi	:= .F. //Variavel para controlar se tem ou nao beneficiario para gerar para o Codigo de Receita que estiver sendo processado
Private lTemEntid	:= .F. //Variavel para controlar se tem ou nao valores pagos a entidades imunes/isentas para gerar para o CNPJ de fonta pagadora selecionado
Private aRegDIRF 	:= {}
Private aRegRESPO 	:= {}
Private aRegDECPF 	:= {}
Private aRegDECPJ 	:= {}
Private aRegIDREC 	:= {}
Private aRegVPEIM	:= {}
Private aRegBPFDEC 	:= {}
Private aRegBPJDEC 	:= {}
Private aRegRTRT 	:= {}
Private aRegINFPC	:= {}
Private aRegINFPA	:= {}
Private aRegRTPO 	:= {}
Private aRegRTPP 	:= {}
Private aRegRTFA	:= {}
Private aRegRTSP	:= {}
Private aRegRTEP 	:= {}
Private aRegESFA 	:= {}
Private aRegESSP 	:= {}
Private aRegESEP 	:= {}
Private aRegRTDP 	:= {}
Private aRegRTPA 	:= {}
Private aRegRTIRF	:= {}
Private aRegCJAC	:= {}
Private aRegCJAA	:= {}
Private aRegESRT 	:= {}
Private aRegESPO 	:= {}
Private aRegESPP 	:= {}
Private aRegESDP 	:= {}
Private aRegESPA 	:= {}
Private aRegESIR 	:= {}
Private aRegESDJ 	:= {}
Private aRegRIDAC	:= {}
Private aRegRIIRP	:= {}
Private aRegRIAP	:= {}
Private aRegRIMOG	:= {}
Private aRegRIP65	:= {}
Private aRegRIL96	:= {}
Private aRegRIPTS	:= {}
Private aRegRIO 	:= {}
Private aRegRIMUM	:= {}
Private aRegRISEN	:= {}
Private aRegFIMDirf := {}
Private aRegReceita := {} 	//Array para armazenar registros que estao associados abaixo do bloco IDREC
Private aRegRendEnt	:= {}
Private cCPFCNPJDec := "" 	//CPF/CNPJ do Declarante
Private cTipoDecl 	:= ""
Private lTemAssSau  := .F. 	//Variavel para indicar se tem Plano de Saude associado a algum funcionario
Private lTemResExt  := .F. 	//Variavel para indicar se ALGUM FUNCIONARIO tem rendimentos pagos a residentes ou domiciliados no exterior
Private lResExt		:= .F. 	//Variavel para indicar se o funcionario EH OU FOI residente ou domiciliado no exterior
Private lCabRRA		:= .F.  //Varivael para indicar se deve gravar o cabecalho da RRA
Private aScp		:= {}   //Dados de Sociedade em Conta de Participacao
Private lCpoDEP  := SRQ->( ColumnPos( "RQ_RELDEP" ) > 0 )

dbSelectArea("RCB")
dbSelectArea("SRB")
dbSelectArea("SRL")
dbSelectArea("SRA")

SetMnemonicos(xFilial("RCA"),NIL,.T.,"P_VLLIMDIRF")
nVlMinIRPF := If( Type("P_VLLIMDIRF") == "U", 0, P_VLLIMDIRF )

//³Carrega Mneumonico "nVlLimOut"                                         ³
//³Valor minimo anual de valores pagos ao funcionario que obriga ele a    ³
//³declarar IRPF [Imp. Renda Pessoa Fisica] )                             ³
SetMnemonicos(xFilial("RCA"),NIL,.T.,"P_VLLIMOUT")
nVlMinOut := If( Type("P_VLLIMOUT") == "U", 0, P_VLLIMOUT )

If nVlMinOut <= 0
	Help( " ", 1, "Help",, STR0050, 1, 0 )//'Antes de prosseguir, é necessário informar o valor do Mnemônico "P_LLIMOUT".'
	Return
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³MV_PAR01 - C.N.P.J. De ?"                          ³
//³MV_PAR02 - C.N.P.J. Ate ?                          ³
//³MV_PAR03 - Tipo de Entrega ?                       ³
//³MV_PAR04 - Ano Calendario ?                        ³
//³MV_PAR05 - Ano Referencia ?                        ³
//³MV_PAR06 - Filial Responsavel ?                    ³
//³MV_PAR07 - CPF Responsavel ?                       ³
//³MV_PAR08 - Nome Responsavel ?                      ³
//³MV_PAR09 - DDD/Fone/Ramal ?                        ³
//³MV_PAR10 - E-mail Responsavel ?                    ³
//³MV_PAR11 - Arquivo Destino ?                       ³
//³MV_PAR12 - Situacao da Decl. ?                     ³
//³MV_PAR13 - Data do Evento    ?                     ³
//³MV_PAR14 - Tipo de Evento    ?                     ³
//³MV_PAR15 - Natureza Declarante ?                   ³
//³MV_PAR16 - Numero do Recibo    ?                   ³
//³MV_PAR17 - Indicacao do tipo de rendimento/Imposto ³
//³MV_PAR18 - Indicador de declarante depositario     ³
//³MV_PAR19 - Indicador de Socio Ostensivo responsavel³
//³           por Sociedade por Conta de Participacao ³
//³           - SPC.                                  ³
//³MV_PAR20 - CPF do responsavel perante o CNPJ       ³
//³MV_PAR21 - Tipo de arquivo 1-Declaraçao/		      ³
//³           2- Comprovante de rendimentos           ³
//³MV_PAR22 - Indicador de fundação pública de		  ³
//³			  direito privado /1-Sim 2- Não 		  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCgcDe   	:= mv_par01
cCgcAte  	:= mv_par02
cSei     	:= If(mv_par03 == 1 ,"O","R")
cAnoBase 	:= mv_par04
cAnoRef	 	:= mv_par05
cFilResp 	:= mv_par06
cCpfResp 	:= mv_par07
cNomResp 	:= Padr(mv_par08,60)
cDDDResp 	:= StrZero(Val(SubStr(mv_par09,2,4)),4)      //  Formato (011 )99999-9999/R:999999
cFoneResp	:= StrZero(Val(SubStr(mv_par09,7,5)+SubStr(mv_par09,13,4)),9)
cRamal   	:= If( Empty( SubStr( MV_PAR09, 20, 6 ) ), "", AllTrim( Str( Val( SubStr( MV_PAR09, 20, 6 ) ) ) ) 	)
cEmailRes	:= mv_par10
cDrive   	:= mv_par11
cSitDecl 	:= StrZero(mv_par12,1)

cDtEvento	:= strzero(year(mv_par13),4)+strzero(month(mv_par13),2)+strzero(day(mv_par13),2) //Formato AAAAMMDD
cTpEvento	:= If( mv_par14==3,space(01),str(mv_par14,1) )
cNatDecl 	:= If(mv_par15 == 1 ,"0",If (mv_par15 == 2 ,"1",If(mv_par15 == 3,"2",If(mv_par15 == 4,"3","4"))))
cRecibo	 	:= mv_par16
cIdentRend 	:= If(mv_par17 == 1 ,"0","1")
cIndDep		:= If(mv_par18 == 1 ,"N","S") //Ind.Decl.Deposit.	(N=Nao depositario de decisao judicial; S=Depositario de decisao judicial)
cIndSocio	:= If(mv_par19 == 1 ,"N","S") //Indicador de Socio Ostensivo  (S=Socio ostensivo; N=Nao eh socio ostensivo)

cCPF_CNPJ	:= mv_par20
cFunPubPrv	:= "N"
If cAnoBase >= "2018"
	If Type("mv_par22") <> "N"
		Aviso(STR0023,STR0054,{"OK"}) //"Atencao"# "Verifique a pergunta 22 do Grupo 'GPM590' e o Grupo de Perguntas 'GPM590ESPO'. Execute o atualizador"
		Return
	EndIf
	cFunPubPrv	:= If(mv_par22 == 1 ,"S","N")
EndIf


cFaxResp	:= Replicate("0",9)

If SubStr(cFoneResp,1,1) == "0"
	cFoneResp := SubStr(cFoneResp,2,8)
Endif

cRetifica := if(!Empty(cRecibo),"S","N") //Verifica se eh Retificadora ou Original (S=Retificadora;  N=Original)

SRA->( dbSetOrder(1) ) //RA_FILIAL+RA_MAT

dbSelectArea("SRV")
SRV->( dbSetOrder(2) ) //RV_FILIAL+RV_CODFOL

dbSelectArea("SRB")
SRB->( dbSetOrder(1) )

//Executa query com o contador dos registros que serao processados
cFrom	:= "FROM " + RetSqlName("SRL") + " "

cWhere	:= "WHERE EXISTS ( SELECT DISTINCT R4_FILIAL, R4_MAT, R4_CODRET FROM " + RetSqlName("SR4") + " WHERE RL_FILIAL = R4_FILIAL AND RL_MAT =  R4_MAT AND RL_CODRET = R4_CODRET AND R4_ANO = '" + cAnoBase + "' AND " + RetSqlName("SR4") +  ".D_E_L_E_T_ = ' ' ) "

cWhere	+= "AND RL_CGCFONT BETWEEN '" + cCgcDe + "' AND '" + cCgcAte + "' "

cWhere	+= "AND " + RetSqlName("SRL") + ".D_E_L_E_T_ = ' ' "

cQrySRL := "SELECT COUNT(RL_FILIAL) AS NROREG " + cFrom + cWhere

cQrySRL	:= ChangeQuery(cQrySRL)
cAliasTmp := GetNextAlias()
dbUseArea(.T., "TOPCONN", TcGenQry(,,cQrySRL), cAliasTmp)

If (cAliasTmp)->( !Eof() )
	nRegSRL := (cAliasTmp)->(NROREG)
EndIf

( cAliasTmp )->( dbCloseArea() )

//Executa query p/ filtro dos registros que serao processados
cOrder	:= "ORDER BY RL_CGCFONT,RL_CODRET,RL_TIPOFJ,RL_CPFCGC,RL_FILIAL,RL_MAT,RL_PAIS,RL_NIFEX"

cQrySRL := "SELECT " + cCposSRL + cFrom + cWhere + cOrder

cQrySRL	:= ChangeQuery(cQrySRL)
cAliasSRL := GetNextAlias()
dbUseArea(.T., "TOPCONN", TcGenQry(,,cQrySRL), cAliasSRL)

For nCntArq := 1 To Len(aStruSRL)
	If ( aStruSRL[nCntArq][2] != "C" )
		TcSetField(cAliasSRL, aStruSRL[nCntArq][1], aStruSRL[nCntArq][2], aStruSRL[nCntArq][3], aStruSRL[nCntArq][4])
	EndIf
Next nX

cCgcAnt := "!!!!!!!!!!!!!!"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Desenha cursor para movimentacao                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcRegua( nRegSRL )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Localiza as verbas de Assist. Medica (049) e Odontologica ³
//³ (714) do titular atraves do identificador da verba        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SRV->( dbSeek(&(cFilialSRV)+cIdVerAM) )
	cVerbAMTit := SRV->RV_COD
Else
	cVerbAMTit := Space(3)
EndIf
If SRV->( dbSeek(&(cFilialSRV)+cIdVerAO) )
	cVerbAOTit := SRV->RV_COD
Else
	cVerbAOTit := Space(3)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria tabelas temporarias                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
CriaTbls(1)

While (cAliasSRL)->( !Eof() ) .And. (cAliasSRL)->RL_CGCFONT <= cCgcAte

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Consiste Controlde de Acesso                                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !((cAliasSRL)->RL_FILIAL $ cValidFil) .Or. !Eval(cAcessaSRL)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Movimenta Regua Processamento                                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IncProc(STR0017)	//"D.I.R.F."s
		(cAliasSRL)->(dbSkip())
		Loop
	EndIf
	aScp:= {}
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera 1 (um) arquivo da DIRF para cada CNPJ/CPJ (fonte pagadora)³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (cAliasSRL)->RL_CGCFONT # CCgcAnt

		cCgcAnt := (cAliasSRL)->RL_CGCFONT

		If Len(aRegDIRF) > 0

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Monta arquivo TXT da DIRF  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !GerArqvMag()
				Return()
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Apaga tabelas temporarias  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			CriaTbls(2)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Cria tabelas temporarias   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			CriaTbls(1)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tipo Declarante (1-Fisica; 2-Juridica)   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Len(AllTrim((cAliasSRL)->RL_CGCFONT)) == 14
			cTipoDecl := "2" //2-Juridica
		Else
			cTipoDecl := "1" //1-Fisica
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gera Registro DIRF (Inicio do arquivo)   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		RegDIRF(cAnoRef,cAnoBase,cRetifica,cRecibo)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gera Registro RESPO (Responsavel pelo    ³
		//³ preenchimento da declaracao)             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		RegRESPO(cCpfResp,cNomResp,cDDDResp,cFoneResp,cRamal,cEmailRes)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tipo do Declarante                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cTipoDecl == "1" //1-Fisica
			cCPFCNPJDec := (cAliasSRL)->RL_CGCFONT

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gera Registro DECPF (Declarante Pessoa Fisica)³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			RegDECPF((cAliasSRL)->RL_CGCFONT,(cAliasSRL)->RL_NOMFONT,cSitDecl,cDtEvento,cTpEvento,cIndSocio)
		Else //2-Juridica
			cCPFCNPJDec := (cAliasSRL)->RL_CGCFONT

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Processa informações para o registro VPEIM ³
			//³ somente se campo 12 do reg. DECPJ for "S"  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cNatDecl $ "0*1*3*8"
				fProcVPEIM( @aRegEntid, (cAliasSRL)->RL_CGCFONT, cCgcAnt )
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gera Registro DECPJ (Declarante Pessoa Juridica)³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			RegDECPJ((cAliasSRL)->RL_CGCFONT,(cAliasSRL)->RL_NOMFONT,cSitDecl,cDtEvento,cNatDecl,cCPF_CNPJ,cIndSocio,cIndDep)

			lTemEntid	:= .F.
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera Registro IDREC (Identificacao de codigo de receita)³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RegIDREC()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Filtro para o Bloco IDREC                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cFilIDREC := (cAliasSRL)->RL_CGCFONT + (cAliasSRL)->RL_CODRET

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Laco para o Bloco IDREC (para gerar seus SUB-Registros) ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	While (cAliasSRL)->(!Eof()) .And. (cAliasSRL)->RL_CGCFONT+(cAliasSRL)->RL_CODRET == cFilIDREC



		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Bloco BPFDEC "Pessoa Fisica"                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (cAliasSRL)->RL_TIPOFJ == "1" //1=Fisica; 2=Juridica

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Filtro para o Bloco BPFDEC "Pessoa Fisica"              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cFilBPFDEC := (cAliasSRL)->RL_CGCFONT + (cAliasSRL)->RL_CODRET + (cAliasSRL)->RL_TIPOFJ

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Laco para o Bloco BPFDEC "Pessoa Fisica" (para gerar seus SUB-Registros) ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			While (cAliasSRL)->(!Eof()) .And. (cAliasSRL)->(RL_CGCFONT+RL_CODRET+RL_TIPOFJ) == cFilBPFDEC

				cFilFunc 	:= (cAliasSRL)->RL_FILIAL
				cMatFunc 	:= (cAliasSRL)->RL_MAT
				cNomeFunc	:= (cAliasSRL)->RL_BENEFIC
				cTipoFJ  	:= (cAliasSRL)->RL_TIPOFJ
				cCPFCGCFun 	:= (cAliasSRL)->RL_CPFCGC
				cCodReten   := (cAliasSRL)->RL_CODRET
				lPensao 	:= .F.
				lPrev		:= .F.
				SRA->( dbSeek((cAliasSRL)->RL_FILIAL+(cAliasSRL)->RL_MAT) )

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Busca verbas de Assis. medica e Odontologica do Titular ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SRV->( dbSeek(&(cFilialSRV)+cIdVerAM) )
					cVerbAMTit := SRV->RV_COD
				Else
					cVerbAMTit := Space(3)
				Endif

				If SRV->( dbSeek(&(cFilialSRV)+cIdVerAO) )
					cVerbAOTit := SRV->RV_COD
				Else
					cVerbAOTit := Space(3)
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gera Registro BPFDEC (Informacao de beneficiario Pessoa Fisica do declarante) ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				RegBPFDEC()

				lPensao := .F.
				lPrev	:= .F.

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Reinicializa variaveis                                                        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cRetAux		:= ""
				lAltNome	:= .F.
				lLevaPLR	:= .F.
				nTotalIr 	:= 0
				nTotalRend 	:= 0
				nTotalResc	:= 0
				nTotalAno 	:= 0

				cFilBenef := (cAliasSRL)->RL_CGCFONT + (cAliasSRL)->RL_CODRET + (cAliasSRL)->RL_TIPOFJ + (cAliasSRL)->RL_CPFCGC

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Laco para o buscar valores do beneficiario "Pessoa Fisica" em questao         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				While (cAliasSRL)->(!Eof()) .And. (cAliasSRL)->(RL_CGCFONT+RL_CODRET+RL_TIPOFJ+RL_CPFCGC) == cFilBenef

					If (cAliasSRL)->RL_CODRET == "3562"//PLR
						nTotalRend 	:= 0
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Busca Informacoes do beneficiario na tabela SR4  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					cFilSR4 := (cAliasSRL)->RL_FILIAL + (cAliasSRL)->RL_MAT + (cAliasSRL)->RL_CPFCGC + (cAliasSRL)->RL_CODRET + cAnoBase

					(cAliasSR4)->( dbSetOrder( 1 ) )

					(cAliasSR4)->( dbSeek( cFilSR4 ) )

					lCabRRA := .T.
					lPensao := .F.
					lPrev	:= .F.

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Percorre todos os meses do Ano Base                                           ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					While (cAliasSR4)->( !Eof() ) .And. cFilSR4 == (cAliasSR4)->R4_FILIAL+(cAliasSR4)->R4_MAT+(cAliasSR4)->R4_CPFCGC+(cAliasSR4)->R4_CODRET+(cAliasSR4)->R4_ANO

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Consiste Controle de Acesso                                            ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If cFilAuxR4 <> (cAliasSR4)->R4_FILIAL
							cFilAuxR4 := (cAliasSR4)->R4_FILIAL
							If !Eval(cAcessaSR4)
								lFilSR4Ok := .F.
								(cAliasSR4)->(dbSkip())
								Loop
							EndIf
							lFilSR4Ok := .T.
						ElseIf !lFilSR4Ok
							(cAliasSR4)->(dbSkip())
							Loop
						EndIf

					    If (cAliasSRL)->(RL_PAIS+RL_NIFEX) <> (cAliasSR4)->(R4_PAIS+R4_NIFEX)
							(cAliasSR4)->(dbSkip())
							Loop
					    EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Gera registros de valores mensais ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					    nMes 		:= Val((cAliasSR4)->R4_MES)
					    cTipoRen 	:= AllTrim((cAliasSR4)->R4_TIPOREN)
					    nValor      := NoRound((cAliasSR4)->R4_VALOR,2)

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Verifica se eh registro que o funcionario esta residente ou domiciliado no exterior ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If !Empty((cAliasSR4)->R4_PAIS)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Inclui Registros de Residentes ou Domiciliados no Exterior   ³
							//³referente aos Identificadores: BRPDE e VRPDE                 ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							lResExt	:= .T.
							GpIncResEx(cTipoRen,nValor)
							(cAliasSR4)->(dbSkip())
							Loop
						EndIf

						If cTipoRen $ 'AxJx' .Or. cTipoRen == 'O1'

							nTotalAno   += nValor //Soma o Total pago no ano

							nMes := Iif(cTipoRen == "J", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RTRT (Rendimentos Tributaveis - Rendimento Tributavel)  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRTRT(nMes,nValor)

							If (cAliasSRL)->RL_CODRET != "3562"//PLR
								nTotalRend += nValor
							EndIf

						ElseIf cTipoRen $ 'BxB1'

							nMes := Iif(cTipoRen == "B1", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RTPO (Rendimentos Tributaveis - Deducao - Previdencia Oficial)  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRTPO(nMes,nValor)

						ElseIf cTipoRen $ 'MxM1'

							nMes := Iif(cTipoRen == "M1", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RTPP (Rendimentos Tributaveis - Deducao - Previdencia Privada)  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRTPP(nMes,nValor)

						ElseIf cTipoRen $ 'TxT1'

							nMes := Iif(cTipoRen == "T1", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RTDP (Rendimentos Tributaveis - Deducao - Dependentes)          ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRTDP(nMes,nValor)

						ElseIf cTipoRen $ 'CxC1xC3'

							nMes := Iif(cTipoRen == "C1", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RTPA (Rendimentos Tributaveis - Deducao - Pensao Alimenticia)   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRTPA(nMes,nValor)

						ElseIf cTipoRen $ 'DxLxQ1'

							nMes := Iif(cTipoRen == "L", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RTIRF (Rendimentos Tributaveis - Imposto de Renda Retido na Fonte) ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRTIRF(nMes,nValor)

							nTotalIR += nValor

						ElseIf cTipoRen $ 'Vx1'

							nMes := Iif(cTipoRen == "1", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro CJAC (Compensacao de Imposto por Decisao Judicial - Ano-calendario) ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegCJAC(nMes,nValor)

						ElseIf cTipoRen $ 'SxS1'

							nMes := Iif(cTipoRen == "S1", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro CJAA (Compensacao de Imposto por Decisao Judicial - Anos Anteriores) ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegCJAA(nMes,nValor)

						ElseIf cTipoRen $ 'Wx2'

							nMes := Iif(cTipoRen == "2", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro ESRT (Tributacao com Exigibilidade Suspensa - Rendimento Tributavel) ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegESRT(nMes,nValor)

						ElseIf cTipoRen $ '6x61'

							nMes := Iif(cTipoRen == "61", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro ESPO (Tributacao com Exigibilidade Suspensa - Deducao - Previdencia Oficial) ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegESPO(nMes,nValor)

						ElseIf cTipoRen $ '9x91'

							nMes := Iif(cTipoRen == "91", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro ESPP (Tributacao com Exigibilidade Suspensa - Deducao - Previdencia Privada) ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegESPP(nMes,nValor)

						ElseIf cTipoRen $ '7x71'

							nMes := Iif(cTipoRen == "71", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro ESDP (Tributacao com Exigibilidade Suspensa - Deducao - Dependentes) ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegESDP(nMes,nValor)

						ElseIf cTipoRen $ '8x81'

							nMes := Iif(cTipoRen == "81", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro ESPA (Tributacao com Exigibilidade Suspensa - Deducao - Pensao Alimenticia) ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegESPA(nMes,nValor)

						ElseIf cTipoRen $ 'Yx4'

							nMes := Iif(cTipoRen == "4", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro ESIR (Tributacao com Exigibilidade Suspensa - Imposto de Renda na Fonte)    ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegESIR(nMes,nValor)

						ElseIf cTipoRen $ 'Zx5'

							nMes := Iif(cTipoRen == "5", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro ESDJ (Tributacao com Exigibilidade Suspensa - Deposito Judicial)            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegESDJ(nMes,nValor)

						ElseIf cTipoRen == 'G'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIDAC (Rendimentos Isentos - Diaria e Ajuda de Custo)                       ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIDAC(nMes,nValor)

							nTotalAno   += nValor //Soma o Total pago no ano

						ElseIf cTipoRen $ 'ExE1'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIIRP (Rendimentos Isentos - Indenizacoes por Rescisao de Contrato de Trabalho, inclusive a titulo de PDV)³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							nMes := Iif(cTipoRen == "E1", 13, nMes)

							RegRIIRP(nMes,nValor)

							If cTipoRen == "E"
								nTotalResc  += nValor //Soma o Total pago no ano
								nTotalAno   += nValor
							EndIf

						ElseIf cTipoRen $ '0'  //(Zero)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIAP (Rendimentos Isentos - Abono Pecuniario) ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIAP(nMes,nValor)

							nTotalAno   += nValor //Soma o Total pago no ano

						ElseIf cTipoRen $ 'HxH1'

							nMes := Iif(cTipoRen == "H1", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIMOG (Rendimentos Isentos - Pensao, Aposentadoria ou Reforma por Molestia Grave) ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIMOG(nMes,nValor)

							If cTipoRen == "H"
								nTotalAno   += nValor //Soma o Total pago no ano
							EndIf

						ElseIf cTipoRen $ 'FxF1'

							nMes := Iif(cTipoRen == "F1", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIP65 (Rendimentos Isentos - Parcela Isenta de Aposentadoria para Maiores de 65 anos) ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIP65(nMes,nValor)

							If cTipoRen == "F"
								nTotalAno   += nValor //Soma o Total pago no ano
							EndIf

						ElseIf cTipoRen == 'P' .and. cTipoDecl == "2" //2-Juridica

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIL96 (Rendimentos Isentos Anuais - Lucros e dividendos pagos a partir de 1996)       ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIL96(nValor)

							nTotalAno += nValor //Soma o Total pago no ano
							lLevaPLR  := If(nValor > 0 .AND. nTotalAno > nVlMinOut,.T.,.F.) //se o valor do rendimento ultrapassar o minimo, considera para DIRF.

						ElseIf cTipoRen == 'U' .and. cTipoDecl == "2" //2-Juridica

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIPTS (Rendimentos Isentos Anuais - Valores pagos a titular ou socio ou empresa de pequeno porte, exceto pro-labore e alugueis) ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIPTS(nValor)

							nTotalAno   += nValor //Soma o Total pago no ano

						ElseIf cTipoRen == 'I'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIO (Rendimentos Isentos Anuais - Outros)                                             ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIO(nValor)

							nTotalAno   += nValor //Soma o Total pago no ano

						ElseIf cTipoRen == 'A1'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Rendimentos Tributaveis - RRA  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"1",nMes,nValor,(cAliasSR4)->R4_MESES)
						ElseIf cTipoRen == 'B2'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Previdencia Oficial - RRA      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"2",nMes,nValor,(cAliasSR4)->R4_MESES)
						ElseIf cTipoRen == 'C2'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Pensao Alimenticia - RRA       ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"3",nMes,nValor,(cAliasSR4)->R4_MESES)
						ElseIf cTipoRen == 'D2'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Imposto Retido - RRA           ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"4",nMes,nValor,(cAliasSR4)->R4_MESES)
						ElseIf cTipoRen == 'I1'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Rendimentos Isentos - RRA      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"5",nMes,nValor,(cAliasSR4)->R4_MESES)
						ElseIf cTipoRen == 'B3'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Acao Judicial - RRA            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"6",nMes,nValor,(cAliasSR4)->R4_MESES)
						EndIf

						// Procura o registro de Pensao somente ano 2016 para frente
						if cAnoBase >= "2016" .and. !lPensao
							cBen := ""
							cBenPA := ""
							cBenPC := ""
							aAreaSR4	:= GetArea()
							SM8->(dbSetOrder(2))
							SET SOFTSEEK ON
							IF SM8->( dbSeek((cAliasSR4)->R4_FILIAL+(cAliasSR4)->R4_MAT+(cAliasSR4)->R4_CODRET+(cAliasSR4)->R4_ANO))
								While SM8->( !Eof() ) .And. (cAliasSR4)->R4_FILIAL+IIf(ColumnPos('M8_CPFCGC')>0,(cAliasSR4)->R4_CPFCGC,(cAliasSR4)->R4_MAT)+(cAliasSR4)->R4_CODRET+(cAliasSR4)->R4_ANO == SM8->M8_FILIAL+IIf(ColumnPos('M8_CPFCGC')>0,SM8->M8_CPFCGC,SM8->M8_MAT)+SM8->M8_CODRET+SM8->M8_ANO
									IF cBen <> SM8->M8_CODBEN
										aAreaSM8	:= GetArea()
										dbSelectArea( "SRQ" )
										SET SOFTSEEK OFF
										IF SRQ->(dbseek(SM8->M8_FILIAL+SM8->M8_MAT+SM8->M8_CODBEN+"01"))
											nPosBen := Ascan( aRegINFPA,{|X|  X[1] == SM8->M8_CODBEN .OR. X[3] == SM8->M8_CPFBEN })
											If nPosBen == 0 //VALIDA CPF DO BENEFICIARIO PARA GERAR APENAS 1 LINHA POR CPF.
												RegINFPA(SM8->M8_CODBEN,SRQ->RQ_CIC,DtoS(SRQ->RQ_NASC),SRQ->RQ_NOME,If(lCpoDEP,SRQ->RQ_RELDEP,""))
											EndIf
											If cAnoBase > "2016"
												If nPosBen > 0 .AND. !Empty(SRQ->RQ_CIC) .AND. aRegINFPA[nPosBen,3] == SM8->M8_CPFBEN
													cBenPA := aRegINFPA[nPosBen,1] //para ocorrencias repetidas do mesmo CPF, mantem apenas 1 CODBEN.
												ElseIf !Empty(SRQ->RQ_CIC) .AND. "00" != cBenPA
													cBenPA := SM8->M8_CODBEN
												Else
													cBenPA := "00" //beneficiario unico para unir todos os valores pagos
												EndIF
											Else
												cBenPA := SM8->M8_CODBEN
											EndIf
										ENDIF
										cBen := SM8->M8_CODBEN
									endif
									If SM8->M8_TIPOREN == 'C2'
										GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"3",val(SM8->M8_MES),SM8->M8_VALOR,(cAliasSR4)->R4_MESES,srq->RQ_CIC,DtoS(SRQ->RQ_NASC),srq->RQ_NOME)
									EndIf
									If alltrim(SM8->M8_TIPOREN)  $ 'CxC1xC3'
										nMes := If(SM8->M8_TIPOREN == "C1", 13, val(SM8->M8_MES))
										RegRTPA16(cBenPA,nMes,SM8->M8_VALOR)
									EndIf
									If alltrim(SM8->M8_TIPOREN)  $ '8x81'
										nMes := If(SM8->M8_TIPOREN == "81", 13, val(SM8->M8_MES))
										RegESPA16(cBenPA,nMes,SM8->M8_VALOR)
									EndIf

									RESTArea(aAreaSM8)
									SM8->(dbSkip())
								EndDo
							Endif
							RESTArea(aAreaSR4)
							lPensao := .T.
							If !Empty(cBenPA) .AND. "00" != cBenPA .AND. cAnoBase >= "2017"
								aRegBPFDEC[5] := "S"
							EndIf
						Endif

						// Procura o registro de Previdencia complementar
						if cAnoBase >= "2016" .and. !lPrev
							cCnpjPr := ""
							aAreaSR4	:= GetArea()
							SM9->(dbSetOrder(2))
							SET SOFTSEEK ON
							cCnpjF := ""
							IF SM9->( dbSeek((cAliasSR4)->R4_FILIAL+(cAliasSR4)->R4_MAT+(cAliasSR4)->R4_CODRET+(cAliasSR4)->R4_ANO))
								While SM9->( !Eof() ) .And. (cAliasSR4)->R4_FILIAL+(cAliasSR4)->R4_MAT+(cAliasSR4)->R4_CODRET+(cAliasSR4)->R4_ANO == SM9->M9_FILIAL+SM9->M9_MAT+SM9->M9_CODRET+SM9->M9_ANO
									cTipoRen 	:= AllTrim(SM9->M9_TIPOREN)
									if cCnpjF <> SM9->M9_CNPJ
										RegINFPC(SM9->M9_CNPJ,SM9->M9_NOMEEMP,SM9->M9_CODFOR)
										cCnpjF := SM9->M9_CNPJ
										If cAnoBase > "2016"
											If !Empty(SM9->M9_CNPJ) .AND. !Empty(SM9->M9_NOMEEMP) .AND. "00" != cBenPC
												cBenPC := SM9->M9_CNPJ
											Else
												cBenPC := "00"
											EndIf
										Else
											cBenPC := SM9->M9_CNPJ
										EndIf
									Endif
									if cTipoRen $ 'MxM1'// previdencia
										nMes := If(cTipoRen == "M1", 13, val(SM9->M9_MES))
										RegRTPP16(nMes,SM9->M9_VALOR,cBenPC,1)
									Elseif cTipoRen  $ 'M2xM5'//fapi
										nMes := If(SM9->M9_TIPOREN == "M5", 13, val(SM9->M9_MES))
										RegRTPP16(nMes,SM9->M9_VALOR,cBenPC,2)

									Elseif cTipoRen  $ 'M3xM6'// fundo previdencia ser. publico
										nMes := If(cTipoRen == "M6", 13, val(SM9->M9_MES))
										RegRTPP16(nMes,SM9->M9_VALOR,cBenPC,3)

									Elseif cTipoRen  $ 'M4xM7' //Contribuicai ente publico
										nMes := If(cTipoRen== "M7", 13, val(SM9->M9_MES))
										RegRTPP16(nMes,SM9->M9_VALOR,cBenPC,4)

									Elseif cTipoRen  $ '9x91' //previdencia exig. suspensa
										nMes := If(cTipoRen == "91", 13, val(SM9->M9_MES))
										RegRTPP16(nMes,SM9->M9_VALOR,cBenPC,5)

									Elseif cTipoRen  $ '9Dx9A' // FAPI exig. suspensa
										nMes := If(cTipoRen == "9A", 13, val(SM9->M9_MES))
										RegRTPP16(nMes,SM9->M9_VALOR,cBenPC,6)

									Elseif cTipoRen  $ '9Ex9B'//fundo previdencia ser. publico exig. suspensa
										nMes := If(cTipoRen == "9B", 13, val(SM9->M9_MES))
										RegRTPP16(nMes,SM9->M9_VALOR,cBenPC,7)

									Elseif cTipoRen  $ '9Fx9C' //Contribuicai ente publico exig. suspensa
										nMes := If(cTipoRen == "9C", 13, val(SM9->M9_MES))
										RegRTPP16(nMes,SM9->M9_VALOR,cBenPC,8)
									endif

									SM9->(dbSkip())
								enddo
							Endif
							RESTArea(aAreaSR4)
							lPrev := .T.
							If !Empty(cBenPC) .AND. "00" != cBenPC .AND. cAnoBase >= "2017"
								aRegBPFDEC[6] := "S"
							EndIf
						Endif

						(cAliasSR4)->(dbSkip())

					End While

					If lGp590Fun
						lLevaFunc := (ExecBlock("GP590Fun",.F.,.F.))
					EndIf

					//Caso o codigo de retencao seja diferente de PLR e nao houve retencao de IR ou nao atingiu os rendimentos minimos
					//verifica se houve pagamento de PLR e se houve retencao de IR de PLR
					If (cAliasSRL)->RL_CODRET != "3562" .And. !(nTotalIr > 0 .Or. ( (nTotalRend+nTotalResc) >= nVlMinIRPF .and. (cAliasSRL)->RL_CODRET == "0561") .Or. (nTotalAno > nVlMinOut .and. (cAliasSRL)->RL_CODRET != "0561") .Or. lResExt .Or. lLevaFunc)
						aAreaAux := (cAliasSR4)->( GetArea() )
						(cAliasSR4)->( dbSetOrder( RetOrdem( "SR4", "R4_ANO+R4_CPFCGC+R4_CODRET+R4_MES" ) ) )
						(cAliasSR4)->( dbSeek ( cAnoBase+(cAliasSRL)->RL_CPFCGC+"3562"  ) )

						While (cAliasSR4)->( !Eof() ) .And. cAnoBase+(cAliasSRL)->RL_CPFCGC+"3562"  == (cAliasSR4)->R4_ANO+(cAliasSR4)->R4_CPFCGC+(cAliasSR4)->R4_CODRET
							If AllTrim((cAliasSR4)->R4_TIPOREN) == 'Q1'
								nTotalIr += NoRound((cAliasSR4)->R4_VALOR,2)
							EndIf
							(cAliasSR4)->( dbSkip() )
						End While

						RestArea( aAreaAux )
					//Caso o codigo de retencao de PLR e nao houve retencao de IR verifica o total de rendimentos e de retencao de IR
					//dos outro codigos de retencao para o ano calendario
					ElseIf (cAliasSRL)->RL_CODRET == "3562" .And. !(nTotalIr > 0 .Or. lResExt .Or. lLevaFunc)
						aAreaAux := (cAliasSR4)->( GetArea() )
						(cAliasSR4)->( dbSetOrder( RetOrdem( "SR4", "R4_ANO+R4_CPFCGC+R4_CODRET+R4_MES" ) ) )
						(cAliasSR4)->( dbSeek ( cAnoBase+(cAliasSRL)->RL_CPFCGC  ) )

						While (cAliasSR4)->( !Eof() ) .And. cAnoBase+(cAliasSRL)->RL_CPFCGC  == (cAliasSR4)->R4_ANO+(cAliasSR4)->R4_CPFCGC
							If (cAliasSR4)->R4_CODRET != "3562"
								cRetAux := (cAliasSR4)->R4_CODRET
								If AllTrim((cAliasSR4)->R4_TIPOREN) $ 'DxL'
									nTotalIr += NoRound((cAliasSR4)->R4_VALOR,2)
								ElseIf AllTrim((cAliasSR4)->R4_TIPOREN) $ 'AxJ'
									nTotalRend += NoRound((cAliasSR4)->R4_VALOR,2)
								ElseIf AllTrim((cAliasSR4)->R4_TIPOREN) $ 'AxJxO1xGx0xHxFxI'
									nTotalAno += NoRound((cAliasSR4)->R4_VALOR,2)
								ElseIf cTipoDecl == "2" .And. AllTrim((cAliasSR4)->R4_TIPOREN) $ 'Ux2'
									nTotalAno += NoRound((cAliasSR4)->R4_VALOR,2)
								EndIf
							EndIf
							(cAliasSR4)->( dbSkip() )
						End While

						If nTotalIr > 0 .Or. ((nTotalRend+nTotalResc) >= nVlMinIRPF .and. cRetAux == "0561") .Or. (nTotalAno > nVlMinOut .and. cRetAux != "0561") .OR.;
							 (nTotalAno > nVlMinIRPF .and. (cAliasSRL)->RL_CODRET == "3562")
							lLevaPLR := .T.
						EndIf

						RestArea( aAreaAux )
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Verifica se o Beneficiario entra ou nao na declaracao³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If nTotalIr > 0 .Or. ((nTotalRend+nTotalResc) >= nVlMinIRPF .and. (cAliasSRL)->RL_CODRET == "0561") .Or. (nTotalAno > nVlMinOut .and. (cAliasSRL)->RL_CODRET != "0561") .Or. lResExt .Or. lLevaFunc .Or. lLevaPLR
						lConsidera := .T.
						aAreaAux := GetArea()

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Guarda o nome alterado do funcionario se a matricula em questao nao esta com situacao demitida ou transferida ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If cNomeFunc != (cAliasSRL)->RL_BENEFIC .And. !( fDesc( "SRA", (cAliasSRL)->RL_MAT, "RA_SITFOLH", Nil, (cAliasSRL)->RL_FILIAL, RetOrdem( "SRA" , "RA_FILIAL+RA_MAT" ) ) $ "D*T" )
							cNomeFunc 	:= (cAliasSRL)->RL_BENEFIC
							lAltNome	:= .T.
						EndIf
						RestArea( aAreaAux )
					Else
						lConsidera := .F.
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Movimenta Regua Processamento                                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					IncProc(STR0017)	//"D.I.R.F."

					(cAliasSRL)->(dbSkip())
				End

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera Registros relacionados a Previdencia Privada  (Registros: INF)             ³
					//³ Consulta a tabela: SM9 (Registro: INF)                                          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lConsidera
					//RegINFPrev( AllTrim( cMatFunc ),  AllTrim( cCPFCGCFun ) , cAnoBase)

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera Registros relacionados a Plano Privado de Assistencia a Saude (Registros: OPSE, TPSE, DTPSE)             ³
					//³ e Informacoes Complementares (Registro: INF)                                                                  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					GerPSTemp(cFilFunc,cMatFunc,cTipoFJ,cCPFCGCFun,cCodReten,cVerbAMTit,cVerbAOTit)
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Se houve alteracao no nome, guarda o nome no array auxiliar  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lAltNome
					aRegBPFDEC[3] := cNomeFunc
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Armazena valores no array auxiliar para reiniciar arrays dos registros do Beneficiario  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SalvaReg(@aRegBenefi,lConsidera,aSubRgIDREC)
			End
		EndIf

		lFilSR4Ok := .F.
		cFilAuxR4 := "#######"


		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Bloco BPJDEC "Pessoa Juridica"  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (cAliasSRL)->RL_CGCFONT+(cAliasSRL)->RL_CODRET == cFilIDREC .and. (cAliasSRL)->RL_TIPOFJ == "2" //1=Fisica; 2=Juridica

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Filtro para o Bloco BPJDEC "Pessoa Juridica"                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cFilBPJDEC := (cAliasSRL)->RL_CGCFONT + (cAliasSRL)->RL_CODRET + (cAliasSRL)->RL_TIPOFJ

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Laco para o Bloco BPJDEC "Pessoa Juridica" (para gerar seus SUB-Registros)³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			While (cAliasSRL)->(!Eof()) .And. (cAliasSRL)->RL_CGCFONT+(cAliasSRL)->RL_CODRET+(cAliasSRL)->RL_TIPOFJ == cFilBPJDEC

				cFilFunc 	:= (cAliasSRL)->RL_FILIAL
				cMatFunc 	:= (cAliasSRL)->RL_MAT
				cTipoFJ  	:= (cAliasSRL)->RL_TIPOFJ
				cCPFCGCFun 	:= (cAliasSRL)->RL_CPFCGC
				cCodReten   := (cAliasSRL)->RL_CODRET

				SRA->( dbSeek((cAliasSRL)->RL_FILIAL+(cAliasSRL)->RL_MAT) )

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Busca verbas de Assis. medica e Odontologica do Titular                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SRV->( dbSeek(&(cFilialSRV)+cIdVerAM) )
					cVerbAMTit := SRV->RV_COD
				Else
					cVerbAMTit := Space(3)
				EndIf

				If SRV->( dbSeek(&(cFilialSRV)+cIdVerAO) )
					cVerbAOTit := SRV->RV_COD
				Else
					cVerbAOTit := Space(3)
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gera Registro BPJDEC (Informacao de beneficiario Pessoa Juridica do declarante) ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				RegBPJDEC()

				cFilBenef := (cAliasSRL)->RL_CGCFONT + (cAliasSRL)->RL_CODRET + (cAliasSRL)->RL_TIPOFJ + (cAliasSRL)->RL_CPFCGC

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Reinicializa variaveis                                                          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cRetAux 	:= ""
				lLevaPLR 	:= .F.
				nTotalIR 	:= 0
				nTotalRend 	:= 0
				nTotalResc	:= 0
				nTotalAno   := 0

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Laco para o buscar valores do beneficiario "Pessoa Juridica" em questao         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				While (cAliasSRL)->(!Eof()) .And. (cAliasSRL)->RL_CGCFONT+(cAliasSRL)->RL_CODRET+(cAliasSRL)->RL_TIPOFJ+(cAliasSRL)->RL_CPFCGC == cFilBenef

					If (cAliasSRL)->RL_CODRET == "3562"//PLR
						nTotalRend 	:= 0
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Busca Informacoes do beneficiario na tabela SR4  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					cFilSR4 := (cAliasSRL)->RL_FILIAL + (cAliasSRL)->RL_MAT + (cAliasSRL)->RL_CPFCGC + (cAliasSRL)->RL_CODRET + cAnoBase

					(cAliasSR4)->( dbSeek( cFilSR4 ) )

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Percorre todos os meses do Ano Base                                             ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					While (cAliasSR4)->( !Eof() ) .And. cFilSR4 == (cAliasSR4)->R4_FILIAL+(cAliasSR4)->R4_MAT+(cAliasSR4)->R4_CPFCGC+(cAliasSR4)->R4_CODRET+(cAliasSR4)->R4_ANO

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Consiste Controle de Acesso                                            ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If cFilAuxR4 <> (cAliasSR4)->R4_FILIAL
							cFilAuxR4 := (cAliasSR4)->R4_FILIAL
							If !Eval(cAcessaSR4)
								lFilSR4Ok := .F.
								(cAliasSR4)->(dbSkip())
								Loop
							EndIf
							lFilSR4Ok := .T.
						ElseIf !lFilSR4Ok
							(cAliasSR4)->(dbSkip())
							Loop
						EndIf

						If (cAliasSRL)->(RL_PAIS+RL_NIFEX) <> (cAliasSR4)->(R4_PAIS+R4_NIFEX)
							(cAliasSR4)->(dbSkip())
							Loop
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Gera registros de valores mensais ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nMes 		:= Val((cAliasSR4)->R4_MES)
						cTipoRen 	:= AllTrim((cAliasSR4)->R4_TIPOREN)
						nValor      := NoRound((cAliasSR4)->R4_VALOR,2)

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Verifica se eh registro que o funcionario esta residente ou domiciliado no exterior³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If !Empty((cAliasSR4)->R4_PAIS)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Inclui Registros de Residentes ou Domiciliados no Exterior   ³
							//³referente aos Identificadores: BRPDE e VRPDE                 ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							lResExt	:= .T.
							GpIncResEx(cTipoRen,nValor)
							(cAliasSR4)->(dbSkip())
							Loop
						EndIf

						If cTipoRen $ 'AxJx' .Or. cTipoRen == 'O1'

							If (cAliasSRL)->RL_CODRET != "3562"//PLR
   							    nTotalAno   += nValor //Soma o Total pago no ano
							EndIf

							nMes := Iif(cTipoRen == "J", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RTRT (Rendimentos Tributaveis - Rendimento Tributavel)               ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRTRT(nMes,nValor)

							If (cAliasSRL)->RL_CODRET != "3562"//PLR
								nTotalRend += nValor
							EndIf

						ElseIf cTipoRen $ 'DxLxQ1'

							nMes := Iif(cTipoRen == "L", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RTIRF (Rendimentos Tributaveis - Imposto de Renda Retido na Fonte)   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRTIRF(nMes,nValor)

							nTotalIR += nValor

						ElseIf cTipoRen == 'G'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIDAC (Rendimentos Isentos - Diaria e Ajuda de Custo)                ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIDAC(nMes,nValor)

							nTotalAno   += nValor //Soma o Total pago no ano

						ElseIf cTipoRen $ '0'  //(Zero)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIAP (Rendimentos Isentos - Abono Pecuniario)                        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIAP(nMes,nValor)

							nTotalAno   += nValor //Soma o Total pago no ano

						ElseIf cTipoRen $ 'HxH1'

							nMes := If(cTipoRen == "H1", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIMOG (Rendimentos Isentos - Pensao, Aposentadoria ou Reforma por Molestia Grave)³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIMOG(nMes,nValor)

							If cTipoRen == "H"
								nTotalAno   += nValor //Soma o Total pago no ano
							EndIf

						ElseIf cTipoRen $ 'FxF1'

							nMes := Iif(cTipoRen == "F1", 13, nMes)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIP65 (Rendimentos Isentos - Parcela Isenta de Aposentadoria para Maiores de 65 anos)³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIP65(nMes,nValor)

							If cTipoRen == "F"
								nTotalAno   += nValor //Soma o Total pago no ano
							EndIf

						ElseIf cTipoRen == 'P' .and. cTipoDecl == "2" //2-Juridica

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIL96 (Rendimentos Isentos Anuais - Lucros e dividendos pagos a partir de 1996)      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIL96(nValor)

							nTotalAno   += nValor //Soma o Total pago no ano

						ElseIf cTipoRen == 'U' .and. cTipoDecl == "2" //2-Juridica

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIPTS (Rendimentos Isentos Anuais - Valores pagos a titular ou socio ou empresa de pequeno porte, exceto pro-labore e alugueis)³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIPTS(nValor)

							nTotalAno   += nValor //Soma o Total pago no ano

						ElseIf cTipoRen == 'I'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera Registro RIO (Rendimentos Isentos Anuais - Outros)                                            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RegRIO(nValor)

							nTotalAno   += nValor //Soma o Total pago no ano

						ElseIf cTipoRen == 'A1'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Rendimentos Tributaveis - RRA    ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"1",nMes,nValor,(cAliasSR4)->R4_MESES)
						ElseIf cTipoRen == 'B2'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Previdencia Oficial - RRA        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"2",nMes,nValor,(cAliasSR4)->R4_MESES)
						ElseIf cTipoRen == 'C2'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Pensao Alimenticia - RRA         ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"3",nMes,nValor,(cAliasSR4)->R4_MESES)
						ElseIf cTipoRen == 'D2'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Imposto Retido - RRA             ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"4",nMes,nValor,(cAliasSR4)->R4_MESES)
						ElseIf cTipoRen == 'I1'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Rendimentos Isentos - RRA        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"5",nMes,nValor,(cAliasSR4)->R4_MESES)
						ElseIf cTipoRen == 'B3'

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Acao Judicial - RRA              ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							GrvRegRRA((cAliasSRL)->RL_TIPOFJ,(cAliasSRL)->RL_CPFCGC,"6",nMes,nValor,(cAliasSR4)->R4_MESES)
						EndIf
						(cAliasSR4)->(dbSkip())
					End

					If lGp590Fun
						lLevaFunc := (ExecBlock("GP590Fun",.F.,.F.))
					EndIf

					//Caso o codigo de retencao seja diferente de PLR e nao houve retencao de IR ou nao atingiu os rendimentos minimos
					//verifica se houve pagamento de PLR e se houve retencao de IR de PLR
					If (cAliasSRL)->RL_CODRET != "3562" .And. !(nTotalIr > 0 .Or. (nTotalRend >= nVlMinIRPF .and. (cAliasSRL)->RL_CODRET == "0561") .Or. (nTotalAno > nVlMinOut .and. (cAliasSRL)->RL_CODRET != "0561") .Or. lResExt .Or. lLevaFunc)
						aAreaAux := (cAliasSR4)->( GetArea() )
						(cAliasSR4)->( dbSetOrder( RetOrdem( "SR4", "R4_ANO+R4_CPFCGC+R4_CODRET+R4_MES" ) ) )
						(cAliasSR4)->( dbSeek ( cAnoBase+(cAliasSRL)->RL_CPFCGC+"3562"  ) )

						While (cAliasSR4)->( !Eof() ) .And. cAnoBase+(cAliasSRL)->RL_CPFCGC+"3562"  == (cAliasSR4)->R4_ANO+(cAliasSR4)->R4_CPFCGC+(cAliasSR4)->R4_CODRET
							If AllTrim((cAliasSR4)->R4_TIPOREN) == 'Q1'
								nTotalIr += NoRound((cAliasSR4)->R4_VALOR,2)
							EndIf
							(cAliasSR4)->( dbSkip() )
						End While

						RestArea( aAreaAux )
					//Caso o codigo de retencao de PLR e nao houve retencao de IR verifica o total de rendimentos e de retencao de IR
					//dos outro codigos de retencao para o ano calendario
					ElseIf (cAliasSRL)->RL_CODRET == "3562" .And. !(nTotalIr > 0 .Or. lResExt .Or. lLevaFunc)
						aAreaAux := (cAliasSR4)->( GetArea() )
						(cAliasSR4)->( dbSetOrder( RetOrdem( "SR4", "R4_ANO+R4_CPFCGC+R4_CODRET+R4_MES" ) ) )
						(cAliasSR4)->( dbSeek ( cAnoBase+(cAliasSRL)->RL_CPFCGC  ) )

						While (cAliasSR4)->( !Eof() ) .And. cAnoBase+(cAliasSRL)->RL_CPFCGC  == (cAliasSR4)->R4_ANO+(cAliasSR4)->R4_CPFCGC
							If (cAliasSR4)->R4_CODRET != "3562"
								cRetAux := (cAliasSR4)->R4_CODRET
								If AllTrim((cAliasSR4)->R4_TIPOREN) $ 'DxL'
									nTotalIr += NoRound((cAliasSR4)->R4_VALOR,2)
								ElseIf AllTrim((cAliasSR4)->R4_TIPOREN) $ 'AxJ'
									nTotalRend += NoRound((cAliasSR4)->R4_VALOR,2)
								ElseIf AllTrim((cAliasSR4)->R4_TIPOREN) $ 'AxJxO1xGx0xHxFxI'
									nTotalAno += NoRound((cAliasSR4)->R4_VALOR,2)
								ElseIf cTipoDecl == "2" .And. AllTrim((cAliasSR4)->R4_TIPOREN) $ 'Ux2'
									nTotalAno += NoRound((cAliasSR4)->R4_VALOR,2)
								EndIf
							EndIf
							(cAliasSR4)->( dbSkip() )
						End While

						If nTotalIr > 0 .Or. (nTotalRend >= nVlMinIRPF .and. cRetAux == "0561") .Or. (nTotalAno > nVlMinOut .and. cRetAux != "0561")
							lLevaPLR := .T.
						EndIf

						RestArea( aAreaAux )
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Verifica se o Beneficiario entra ou nao na declaracao³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If nTotalIr > 0 .Or. (nTotalRend >= nVlMinIRPF .and. (cAliasSRL)->RL_CODRET == "0561") .Or. (nTotalAno > nVlMinOut .and. (cAliasSRL)->RL_CODRET != "0561") .Or. lResExt .Or. lLevaFunc .Or. lLevaPLR
						lConsidera := .T.
					Else
						lConsidera := .F.
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Movimenta Regua Processamento                                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					IncProc(STR0017)	//"D.I.R.F."

					(cAliasSRL)->(dbSkip())
				EndDo

				If lConsidera
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera Registros relacionados a Previdencia Privada  (Registros: INF)             ³
					//³ Consulta a tabela: SM9 (Registro: INF)                                          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					//RegINFPrev( AllTrim( cMatFunc ),  AllTrim( cCPFCGCFun ) , cAnoBase)

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera Registros relacionados a Plano Privado de Assistencia a Saude (Registros: OPSE, TPSE, DTPSE)³
					//³ e Informacoes Complementares (Registro: INF)                                                     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					GerPSTemp(cFilFunc,cMatFunc,cTipoFJ,cCPFCGCFun,cCodReten,cVerbAMTit,cVerbAOTit)
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Armazena valores no array auxiliar para reiniciar arrays dos registros do Beneficiario³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SalvaReg(@aRegBenefi,lConsidera,aSubRgIDREC)
			End
		EndIf
	End

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Somente considera este codigo de receita para gerar no TXT se tiver pelo menos 1 beneficiario³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lTemBenefi .and. Len(aRegBenefi) > 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Armazena o registro de Receita (IDREC) e seus SUB-Registros ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aAdd( aRegReceita, {aRegIDREC, aRegBenefi} )
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Reinicializa variaveis   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aRegIDREC 	:= {} //Limpa array para iniciar o laco com outro Codigo de Receita
	aRegBenefi 	:= {} //Limpa array de beneficiarios para carregar beneficiarios de outro Codigo de Receita
	lTemBenefi  := .F.
	lResExt		:= .F.
EndDo

If len(aRegDIRF) > 0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta arquivo TXT da DIRF³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !GerArqvMag()
		Return()
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Apaga tabelas temporarias³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	CriaTbls(2)
EndIf

(cAliasSRL)->( dbCloseArea() )

dbSelectArea("SRL")
SET FILTER TO
dbSelectArea("SR4")
SET FILTER TO
RetIndex("SRA")

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegDIRF      ºAutor  ³Alberto Deviciente	 º Data ³ 16/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Registro de informacao da declaracao - (Inicio do arquivo)     º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador DIRF                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegDIRF(cAnoRef,cAnoBase,cRetifica,cRecibo)

Local cEstrutura	:= ""

Do Case

	Case cAnoBase == "2021" .OR. cAnoBase == "2022"
		cEstrutura := "XJFSFHB"
	Case cAnoBase == "2020"
		cEstrutura := "VR4QLM8"
	Case cAnoBase == "2019"
		cEstrutura := "AT65HD8"
	Case cAnoBase == "2018"
		cEstrutura := "T17BS45"
	Case cAnoBase == "2017"
		cEstrutura := "Q84FV63"
	Case cAnoBase == "2016"
		cEstrutura	:= "P49VS72"
	Case cAnoBase == "2015"
		cEstrutura	:= "L35QJS2"
	Case cAnoBase == "2014"
		cEstrutura	:= "M1LB5V2"
	Case cAnoBase < "2013"
		cEstrutura	:= "7C2DE7J"
	OtherWise
		cEstrutura	:= "F8UCL6S"
EndCase

aRegDIRF :=  { 	"DIRF",; 		//01 - Identificador de registro
				cAnoRef,;		//02 - Ano Referencia
				cAnoBase,;		//03 - Ano Calendario
				cRetifica,;		//04 - Indicador de retificadora
				ALLTRIM(cRecibo),;		//05 - Numero do recibo
				cEstrutura }   	//06 - Identificador de estrutura do leiaute
Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRESPO     ºAutor  ³Alberto Deviciente	 º Data ³ 16/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Responsavel pelo preenchimento da declaracao                   º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RESPO                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRESPO(cCpfResp,cNomResp,cDDDResp,cFoneResp,cRamal,cEmailRes)

aRegRESPO :=  { 	"RESPO",; 			   				//01 - Identificador de registro
					cCpfResp,;							//02 - CPF
					AllTrim(cNomResp),;					//03 - Nome
					cValToChar(Val(cDDDResp)),;			//04 - DDD
					cFoneResp,;							//05 - Telefone
					cRamal,;							//06 - Ramal
					"",;								//07 - Fax
					AllTrim(SubStr(cEmailRes,1,50))} 	//08 - Correio eletronico

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegDECPF     ºAutor  ³Alberto Deviciente	 º Data ³ 17/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Declarante Pessoa Fisica.                                      º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador DECPF                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegDECPF(cCPFDeclPF,cNomeDecPF,cSitDecl,cDtEvento,cTpEvento, cIndSocio)

Local cSitEspDec	:= ""
Local cDeclFalec	:= "N"
Local cDtObito		:= ""
Local cSitEspoli 	:= ""
Local cCPFInvent	:= ""
Local cNomeInven	:= ""


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ S - Encerramento de espolio/saida definitiva do pais.       ³
//³ N - Nao eh encerramento de espolio/saida definitiva do pais ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cSitEspDec := if(cSitDecl=="1","N","S")

if cSitEspDec <> "S"
	cDtEvento := ""
	cTpEvento := ""
endif

cCPFDeclPF:= If(AllTrim(cCPFDeclPF) == "11", cCPFDeclPF, cCPF_CNPJ)

If (cAnoBase > "2017")
	If cSitDecl == "2" .AND. cTpEvento == "1"
		cDeclFalec	:= "S"
	Else
		Pergunte("GPM590ESPO",.T.)
		cDeclFalec	:= If(mv_par01 == 1 ,"S","N")
		cDtObito	:= If(cDeclFalec == "N",  "", strzero(year(mv_par02),4)+strzero(month(mv_par02),2)+strzero(day(mv_par02),2) ) //Formato AAAAMMDD
		cSitEspoli 	:= If(cDeclFalec == "N",  "", If(mv_par03 == 1 ,"0","1") )
		cCPFInvent	:= If(cDeclFalec == "N", "" ,mv_par04)
		cNomeInven	:= If(cDeclFalec == "N", "" ,mv_par05)
	EndIf
EndIf

If (cAnoBase < "2017")
	aRegDECPF :=  { 	"DECPF",; 			   				//01 - Identificador de registro
						AllTrim(cCPFDeclPF),;				//02 - CPF
						AllTrim(SubStr(cNomeDecPF,1,60)),;	//03 - Nome
						"",;								//04 - Indicador de declarante de rendimentos pagos a residentes ou domiciliados no exterior (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
						"S",;								//05 - Indicador de Titular de Serviços Notariais e de Registros (S=Sim;,N=Nao)
	           			"",;								//06 - Indicador de plano privado de assistencia de saude - coletivo empresarial (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
						cSitEspDec,;						//07 - Indicador de situacao especial da declaracao
						cDtEvento,;							//08 - Data do Evento
						cTpEvento }   						//09 - Tipo de Evento
ElseIf (cAnoBase < "2018")
	aRegDECPF :=  { 	"DECPF",; 			   				//01 - Identificador de registro
						AllTrim(cCPFDeclPF),;				//02 - CPF
						AllTrim(SubStr(cNomeDecPF,1,60)),;	//03 - Nome
						"",;								//04 - Indicador de declarante de rendimentos pagos a residentes ou domiciliados no exterior (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
						"S",;								//05 - Indicador de Titular de Serviços Notariais e de Registros (S=Sim;,N=Nao)
	           			"",;								//06 - Indicador de plano privado de assistencia de saude - coletivo empresarial (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
						cIndSocio,;							//07 - Indicador de socio ostensivo responsavel por sociedade em conta de participacao - SCP
						cSitEspDec,;						//08 - Indicador de situacao especial da declaracao
						cDtEvento,;							//09 - Data do Evento
						cTpEvento }   						//10 - Tipo de Evento
Else
	aRegDECPF :=  { 	"DECPF",; 			   				//01 - Identificador de registro
						AllTrim(cCPFDeclPF),;				//02 - CPF
						AllTrim(SubStr(cNomeDecPF,1,60)),;	//03 - Nome
						"",;								//04 - Indicador de declarante de rendimentos pagos a residentes ou domiciliados no exterior (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
						"S",;								//05 - Indicador de Titular de Serviços Notariais e de Registros (S=Sim;,N=Nao)
	           			"",;								//06 - Indicador de plano privado de assistencia de saude - coletivo empresarial (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
						cIndSocio,;							//07 - Indicador de socio ostensivo responsavel por sociedade em conta de participacao - SCP
						cSitEspDec,;						//08 - Indicador de situacao especial da declaracao
						cDtEvento,;							//09 - Data do Evento
						cTpEvento,;    						//10 - Tipo de Evento
						cDeclFalec,;   						//11 - Indicador de declarante falecido
						cDtObito,;    						//12 - Data do óbito
						cSitEspoli,;   						//13 - Situação do espólio
						cCPFInvent,;   						//14 - CPF do inventariante
						cNomeInven}  						//15 - Nome do inventariante

EndIf

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegDECPJ     ºAutor  ³Alberto Deviciente	 º Data ³ 17/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Declarante Pessoa Juridica.                                    º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador DECPJ                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegDECPJ(cCNPJDecPJ,cNomeDecPJ,cSitDecl,cDtEvento,cNatDecl,cCPF_CNPJ,cIndSocio,cIndDep)
Local cSitEspDec := ""
Local cIndCapit	:= ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ S - Encerramento de espolio/saida definitiva do pais.       ³
//³ N - Nao eh encerramento de espolio/saida definitiva do pais ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cSitEspDec := if(cSitDecl=="1","N","S")
cIndCapit := If(lTemEntid .And. cNatDecl $ "0*1*3*8", "S","N")

if cSitEspDec <> "S"
	cDtEvento := ""
endif
If (cAnoBase < "2015")
	aRegDECPJ := { 	"DECPJ",; 			   				//01 - Identificador de registro
					cCNPJDecPJ,;						//02 - CNPJ
					AllTrim(SubStr(cNomeDecPJ,1,150)),;	//03 - Nome empresarial
	          		cNatDecl,;							//04 - Natureza do declarante
					cCPF_CNPJ,;							//05 - CPF responsavel perante o CNPJ
	         		cIndSocio,;							//06 - Indicador de socio ostensivo responsavel por sociedade em conta de participacao - SCP
					cIndDep,;							//07 - Indicador de declarante depositario de credito decorrente de decisao judicial
					"N",;								//08 - Indicador de declarante de instituicao administradora ou intermediadora de fundo ou clube de investimento (S=Sim; N=Nao)
					"",;						  		//09 - Indicador de declarante de rendimentos pagos a residentes ou domiciliados no exterior (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
	       			"",;								//10 - Indicador de plano privado de assistencia de saude - coletivo empresarial  (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
	       			"N",;								//11 - Indicador de pagamentos relacionados à Copa das Confederações Fifa 2013 e Copa do Mundo Fifa 2014
					cSitEspDec,;						//12 - Indicador de situacao especial da declaracao
					cDtEvento }   						//13 - Data do evento
ElseIf (cAnoBase < "2016")
	aRegDECPJ := { 	"DECPJ",; 			   				//01 - Identificador de registro
					cCNPJDecPJ,;						//02 - CNPJ
					AllTrim(SubStr(cNomeDecPJ,1,150)),;	//03 - Nome empresarial
	          		cNatDecl,;							//04 - Natureza do declarante
					cCPF_CNPJ,;							//05 - CPF responsavel perante o CNPJ
	         		cIndSocio,;							//06 - Indicador de socio ostensivo responsavel por sociedade em conta de participacao - SCP
					cIndDep,;							//07 - Indicador de declarante depositario de credito decorrente de decisao judicial
					"N",;								//08 - Indicador de declarante de instituicao administradora ou intermediadora de fundo ou clube de investimento (S=Sim; N=Nao)
					"",;						  		//09 - Indicador de declarante de rendimentos pagos a residentes ou domiciliados no exterior (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
	       			"",;								//10 - Indicador de plano privado de assistencia de saude - coletivo empresarial  (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
	       			"N",;								//11 - Indicador de pagamentos relacionados à Copa das Confederações Fifa 2013 e Copa do Mundo Fifa 2014
					"N",;								//12 - Indicador de pagamentos relacionados aos Jogos Olimpicos de 2016 e aos Jogos Paraolimpicos de 2016
					cSitEspDec,;						//13 - Indicador de situacao especial da declaracao
					cDtEvento }   						//14 - Data do evento
ElseIf (cAnoBase < "2017")
	aRegDECPJ := { 	"DECPJ",;		   				//01 - Identificador de registro
				cCNPJDecPJ,;						//02 - CNPJ
				AllTrim(SubStr(cNomeDecPJ,1,150)),;	//03 - Nome empresarial
          		cNatDecl,;							//04 - Natureza do declarante
				cCPF_CNPJ,;							//05 - CPF responsavel perante o CNPJ
         		cIndSocio,;							//06 - Indicador de socio ostensivo responsavel por sociedade em conta de participacao - SCP
				cIndDep,;							//07 - Indicador de declarante depositario de credito decorrente de decisao judicial
				"N",;								//08 - Indicador de declarante de instituicao administradora ou intermediadora de fundo ou clube de investimento (S=Sim; N=Nao)
				"",;						  		//09 - Indicador de declarante de rendimentos pagos a residentes ou domiciliados no exterior (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
       			"",;								//10 - Indicador de plano privado de assistencia de saude - coletivo empresarial  (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
				"N",;								//11 - Indicador de pagamentos relacionados aos Jogos Olimpicos de 2016 e aos Jogos Paraolimpicos de 2016
				cSitEspDec,;						//12 - Indicador de situacao especial da declaracao
				cDtEvento }   						//13 - Data do evento
ElseIf (cAnoBase < "2018")
	aRegDECPJ := { 	"DECPJ",;		   				//01 - Identificador de registro
				cCNPJDecPJ,;						//02 - CNPJ
				AllTrim(SubStr(cNomeDecPJ,1,150)),;	//03 - Nome empresarial
          		cNatDecl,;							//04 - Natureza do declarante
				cCPF_CNPJ,;							//05 - CPF responsavel perante o CNPJ
         		cIndSocio,;							//06 - Indicador de socio ostensivo responsavel por sociedade em conta de participacao - SCP
				cIndDep,;							//07 - Indicador de declarante depositario de credito decorrente de decisao judicial
				"N",;								//08 - Indicador de declarante de instituicao administradora ou intermediadora de fundo ou clube de investimento (S=Sim; N=Nao)
				"",;						  		//09 - Indicador de declarante de rendimentos pagos a residentes ou domiciliados no exterior (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
       			"",;								//10 - Indicador de plano privado de assistencia de saude - coletivo empresarial  (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
				"N",;								//11 - Indicador de pagamentos relacionados aos Jogos Olimpicos de 2016 e aos Jogos Paraolimpicos de 2016
				cIndCapit,;							//12 - Indicador de entidade em que a Uniao detem maioria do capital social sujeito a voto, recebe recursos do Tresouro Nacional e esta obrigada a registrar a execucao orcamentaria no Siafi (S=Sim [se posicao 4 igual a 0,1,3, ou 8]; N=Nao)
				cSitEspDec,;						//13 - Indicador de situacao especial da declaracao
				cDtEvento }   						//14 - Data do evento
Else
	aRegDECPJ := { 	"DECPJ",;		   				//01 - Identificador de registro
				cCNPJDecPJ,;						//02 - CNPJ
				AllTrim(SubStr(cNomeDecPJ,1,150)),;	//03 - Nome empresarial
          		cNatDecl,;							//04 - Natureza do declarante
				cCPF_CNPJ,;							//05 - CPF responsavel perante o CNPJ
         		cIndSocio,;							//06 - Indicador de socio ostensivo responsavel por sociedade em conta de participacao - SCP
				cIndDep,;							//07 - Indicador de declarante depositario de credito decorrente de decisao judicial
				"N",;								//08 - Indicador de declarante de instituicao administradora ou intermediadora de fundo ou clube de investimento (S=Sim; N=Nao)
				"",;						  		//09 - Indicador de declarante de rendimentos pagos a residentes ou domiciliados no exterior (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
       			"",;								//10 - Indicador de plano privado de assistencia de saude - coletivo empresarial  (S=Sim; N=Nao) (Essa posicao sera atualizada no momento da geracao do TXT)
       			cIndCapit,;							//11 - Indicador de entidade em que a Uniao detem maioria do capital social sujeito a voto, recebe recursos do Tresouro Nacional e esta obrigada a registrar a execucao orcamentaria no Siafi (S=Sim [se posicao 4 igual a 0,1,3, ou 8]; N=Nao)
       			cFunPubPrv,;						//12 - Indicador de fundação pública de direito privado instituída pela União, Estados, Municípios ou Distrito Federal
				cSitEspDec,;						//13 - Indicador de situacao especial da declaracao
				cDtEvento }   						//14 - Data do evento
EndIf

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegIDREC     ºAutor  ³Alberto Deviciente	 º Data ³ 17/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Identificacao de codigo de receita.                            º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador IDREC                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegIDREC()

aRegIDREC := { 	"IDREC",; 			   			//01 - Identificador de registro
				(cAliasSRL)->RL_CODRET }   				//02 - Codigo de receita

Return()

/*/{Protheus.doc} RegVPEIM
Identificacao do registro de Rendimentos de Entidades Imunes ou Isentas
Valores pagos às entidades imunes ou isentas – IN RFB 1.234/2012
@author jonatas.alves
@since 12/01/18
@version 1.0
/*/
Static Function RegVPEIM()

aRegVPEIM :=	{;
					"VPEIM",; 			   					//01 - Identificador de registro
					( cSRLVPEIM )->RL_CPFCGC,;				//02 - CNPJ
					AllTrim( ( cSRLVPEIM )->RL_BENEFIC );	//03 - Nome empresarial
				}

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegBPFDEC    ºAutor  ³Alberto Deviciente	 º Data ³ 20/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Informacao de beneficiario Pessoa Fisica do declarante.        º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador BPFDEC                                         º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegBPFDEC()

If (cAnoBase < "2017")
aRegBPFDEC := {	"BPFDEC",; 			   																					//01 - Identificador de registro
					AllTrim((cAliasSRL)->RL_CPFCGC),;																	//02 - CPF
					AllTrim(SubStr(FSubst((cAliasSRL)->RL_BENEFIC),1,60)),;												//03 - Nome
					if(empty(SRA->RA_MOLEST) .Or. strZero(Year(SRA->RA_MOLEST),4) > cAnoBase,"",dToS(SRA->RA_MOLEST))}	//04 - Data atribuida pelo laudo da molestia grave
Else
	aRegBPFDEC := {	"BPFDEC",; 			   																				//01 - Identificador de registro
					AllTrim((cAliasSRL)->RL_CPFCGC),;																	//02 - CPF
					AllTrim(SubStr(FSubst((cAliasSRL)->RL_BENEFIC),1,60)),;												//03 - Nome
					if(empty(SRA->RA_MOLEST) .Or. strZero(Year(SRA->RA_MOLEST),4) > cAnoBase,"",dToS(SRA->RA_MOLEST)),;	//04 - Data atribuida pelo laudo da molestia grave
					"N",;																								//05 - Indicador de identificacao do alimentado (S=Sim; N=Nao) - sera alterado no momento que realizar validacao da pensao
					"N";																								//06 - Indicador de identificacao da previdencia complementar (S=Sim; N=Nao) - sera alterado no momento que realizar validacao da previdencia
					}
EndIf
aAdd( aSubRgIDREC, "aRegBPFDEC"	) //Adiciona o array desse registro no array de controle do bloco IDREC

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegBPJDEC    ºAutor  ³Alberto Deviciente	 º Data ³ 20/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Informacao de beneficiario Pessoa Juridica do declarante.      º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador BPJDEC                                         º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegBPJDEC()

aRegBPJDEC := {	"BPJDEC",; 			   						//01 - Identificador de registro
		   		(cAliasSRL)->RL_CPFCGC,;							//02 - CNPJ
		   		AllTrim(SubStr((cAliasSRL)->RL_BENEFIC,1,150)) }  	//03 - Nome empresarial

aAdd( aSubRgIDREC, "aRegBPJDEC"	) //Adiciona o array desse registro no array de controle do bloco IDREC

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRTRT      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Tributaveis - Rendimento Tributavel.               º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RTRT                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRTRT(nMes,nVlr)
if len(aRegRTRT) == 0
	aRegRTRT :=  {	"RTRT",; 			   						//01 - Identificador de registro
					0,;											//02 - Janeiro
			   		0,;											//03 - Fevereiro
			   		0,;											//04 - Marco
			 		0,;											//05 - Abril
			   		0,;											//06 - Maio
			   		0,;											//07 - Junho
			   		0,;											//08 - Julho
			   		0,;											//09 - Agosto
			   		0,;											//10 - Setembro
			   		0,;											//11 - Outubro
			   		0,;											//12 - Novembro
					0,;											//13 - Dezembro
			   		0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegRTRT" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

endif

aRegRTRT[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRTPO      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Tributaveis - Deducao - Previdencia Oficial.       º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RTPO                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRTPO(nMes,nVlr)
if len(aRegRTPO) == 0
	aRegRTPO := { 	"RTPO",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegRTPO" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

endif

aRegRTPO[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRTPP      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Tributaveis - Deducao - Previdencia Privada.       º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RTPP                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRTPP(nMes,nVlr)
If Len(aRegRTPP) == 0
	aRegRTPP := { 	"RTPP",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	If cAnoBase < "2016"
		aAdd( aSubRgIDREC, "aRegRTPP" 	) //Adiciona o array desse registro no array de controle do bloco IDREC
	Endif

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRTPP[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRTDP      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Tributaveis - Deducao - Dependentes.               º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RTDP                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRTDP(nMes,nVlr)
If Len(aRegRTDP) == 0
	aRegRTDP := { 	"RTDP",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegRTDP" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRTDP[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRTPA      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Tributaveis - Deducao - Pensao Alimenticia.        º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RTPA                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRTPA(nMes,nVlr)
If Len(aRegRTPA) == 0
	aRegRTPA := { 	"RTPA",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegRTPA" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRTPA[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRTIRF     ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Tributaveis - Imposto de Renda Retido na Fonte.    º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RTIRF                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRTIRF(nMes,nVlr)
If Len(aRegRTIRF) == 0
	aRegRTIRF := { 	"RTIRF",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegRTIRF" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRTIRF[nMes+1] += nVlr

Return()

							//Gera Registro CJAC (Compensacao de Imposto por Decisao Judicial - Ano-calendario)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegCJAC      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Compensacao de Imposto por Decisao Judicial - Ano-calendario.  º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador CJAC                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegCJAC(nMes,nVlr)
If Len(aRegCJAC) == 0
	aRegCJAC := { 	"CJAC",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegCJAC" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegCJAC[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegCJAA      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Compensacao de Imposto por Decisao Judicial - Anos Anteriores. º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador CJAA                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegCJAA(nMes,nVlr)
If Len(aRegCJAA) == 0
	aRegCJAA := { 	"CJAA",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegCJAA" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegCJAA[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegESRT      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Tributacao com Exigibilidade Suspensa - Rendimento Tributavel. º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador ESRT                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegESRT(nMes,nVlr)
If Len(aRegESRT) == 0
	aRegESRT := { 	"ESRT",; 			   					   		//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegESRT" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegESRT[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegESPO      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Tributacao com Exigibilidade Suspensa - Deducao - Previdencia  º±±
±±º      ³Oficial.                                                        º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador ESPO                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegESPO(nMes,nVlr)
If Len(aRegESPO) == 0
	aRegESPO :=  { 	"ESPO",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegESPO" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegESPO[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegESPP      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Tributacao com Exigibilidade Suspensa - Deducao - Previdencia  º±±
±±º      ³Privada.                                                        º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador ESPP                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegESPP(nMes,nVlr)
If Len(aRegESPP) == 0
	aRegESPP := { 	"ESPP",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegESPP" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegESPP[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegESDP      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Tributacao com Exigibilidade Suspensa - Deducao - Dependentes  º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador ESDP                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegESDP(nMes,nVlr)
If Len(aRegESDP) == 0
	aRegESDP := { 	"ESDP",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegESDP" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegESDP[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegESPA      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Tributacao com Exigibilidade Suspensa - Deducao - Pensao Ali-  º±±
±±º      ³menticia.                                                       º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador ESPA                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegESPA(nMes,nVlr)
If Len(aRegESPA) == 0
	aRegESPA := { 	"ESPA",; 			   						//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegESPA" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegESPA[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegESIR      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Tributacao com Exigibilidade Suspensa - Imposto de Renda na    º±±
±±º      ³Fonte.                                                          º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador ESIR                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegESIR(nMes,nVlr)
If Len(aRegESIR) == 0
	aRegESIR :=  { 	"ESIR",;	 			   						//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }											//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegESIR" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegESIR[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegESDJ      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Tributacao com Exigibilidade Suspensa - Deposito Judicial.     º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador ESDJ                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegESDJ(nMes,nVlr)
If Len(aRegESDJ) == 0
	aRegESDJ := { "ESDJ",;	 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegESDJ" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegESDJ[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRIDAC     ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Isentos - Diaria e Ajuda de Custo.                 º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RIDAC                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRIDAC(nMes,nVlr)
If Len(aRegRIDAC) == 0
	aRegRIDAC := {"RIDAC",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						"" }  										//14 - Decimo Terceiro ( Nao tem 13o. Para este Registro )

	aAdd( aSubRgIDREC, "aRegRIDAC" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRIDAC[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRIIRP     ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Isentos - Indenizacoes por Rescisao de Contrato de º±±
±±º      ³Trabalho, inclusive a titulo de PDV.                            º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RIIRP                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRIIRP(nMes,nVlr)
If Len(aRegRIIRP) == 0
	aRegRIIRP := {"RIIRP",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro ( Nao tem 13o. Para este Registro )

	aAdd( aSubRgIDREC, "aRegRIIRP" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRIIRP[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRIAP      ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Isentos - Abono Pecuniario.                        º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RIAP                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRIAP(nMes,nVlr)
If Len(aRegRIAP) == 0
	aRegRIAP := {  "RIAP",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						"" }  										//14 - Decimo Terceiro ( Nao tem 13o. Para este Registro )

	aAdd( aSubRgIDREC, "aRegRIAP" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRIAP[nMes+1] += nVlr

Return()

							//Gera Registro RIMOG (Rendimentos Isentos - Pensao, Aposentadoria ou Reforma por Molestia Grave)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRIMOG     ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Isentos - Pensao, Aposentadoria ou Reforma por     º±±
±±º      ³Molestia Grave.                                                 º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RIMOG                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRIMOG(nMes,nVlr)
If Len(aRegRIMOG) == 0
	aRegRIMOG := {  "RIMOG",; 			   							//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegRIMOG" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRIMOG[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRIP65     ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Isentos - Parcela Isenta de Aposentadoria para     º±±
±±º      ³Maiores de 65 anos.                                             º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RIP65                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRIP65(nMes,nVlr)
If Len(aRegRIP65) == 0
	aRegRIP65 := {"RIP65",; 				   						//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						0 }  										//14 - Decimo Terceiro

	aAdd( aSubRgIDREC, "aRegRIP65" ) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRIP65[nMes+1] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRIL96     ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Isentos Anuais - Lucros e dividendos pagos a       º±±
±±º      ³partir de 1996.                                                 º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RIL96                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRIL96(nVlr)
If Len(aRegRIL96) == 0
	aRegRIL96 := {"RIL96",; 			   			//01 - Identificador de registro
						0 }							//02 - Valor pago no ano

	aAdd( aSubRgIDREC, "aRegRIL96" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRIL96[2] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRIPTS     ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Isentos Anuais - Valores pagos a titular ou socio  º±±
±±º      ³ou empresa de pequeno porte, exceto pro-labore e alugueis.      º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RIPTS                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRIPTS(nVlr)
If Len(aRegRIPTS) == 0
	aRegRIPTS := { "RIPTS",; 				   			//01 - Identificador de registro
						0 } 							//02 - Valor pago no ano

	aAdd( aSubRgIDREC, "aRegRIPTS" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRIPTS[2] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRIO       ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Isentos Anuais - Outros.                           º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RIO                                            º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegRIO(nVlr)
If Len(aRegRIO) == 0
	aRegRIO := { "RIO",; 			   														//01 - Identificador de registro
					0,;																		//02 - Valor pago no ano
					AllTrim(SubStr("Outros rendimentos Isentos e Não Tributaveis",1,60)) }  //03 - Descricao dos rendimentos isentos - outros

	aAdd( aSubRgIDREC, "aRegRIO" 	) //Adiciona o array desse registro no array de controle do bloco IDREC

	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRIO[2] += nVlr

Return()

/*/{Protheus.doc} RegRIMUM
Valores pagos às entidades imunes ou isentas - IN RFB 1.234/2012
Rendimentos Imunes – art. 4º, inciso III
Identificador RIMUM
@author jonatas.alves
@since 12/01/18
@version 1.0
/*/
Static Function RegRIMUM( nMes, nVlr )

If Len( aRegRIMUM ) == 0
	aRegRIMUM := {;
						"RIMUM",; 			   						//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						"";  										//14 - Decimo Terceiro ( Nao tem 13o. Para este Registro )
					}

	aAdd( aSubRgVPEIM, "aRegRIMUM" 	) //Adiciona o array desse registro no array de controle do bloco VPEIM

	lTemEntid := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRIMUM[ nMes + 1 ] += nVlr

Return()

/*/{Protheus.doc} RegRISEN
Valores pagos às entidades imunes ou isentas - IN RFB 1.234/2012
Rendimentos Imunes – art. 4º, inciso III
Identificador RISEN
@author jonatas.alves
@since 12/01/18
@version 1.0
/*/
Static Function RegRISEN( nMes, nVlr )

If Len( aRegRISEN ) == 0
	aRegRISEN := {;
						"RISEN",; 			   						//01 - Identificador de registro
						0,;											//02 - Janeiro
						0,;											//03 - Fevereiro
						0,;											//04 - Marco
						0,;											//05 - Abril
						0,;											//06 - Maio
						0,;											//07 - Junho
						0,;											//08 - Julho
						0,;											//09 - Agosto
						0,;											//10 - Setembro
						0,;											//11 - Outubro
						0,;											//12 - Novembro
						0,;											//13 - Dezembro
						"";  										//14 - Decimo Terceiro ( Nao tem 13o. Para este Registro )
					}

	aAdd( aSubRgVPEIM, "aRegRISEN" 	) //Adiciona o array desse registro no array de controle do bloco VPEIM

	lTemEntid := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

EndIf

aRegRISEN[ nMes + 1 ] += nVlr

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegFIMDirf   ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Registro identificador do termino da declaracao - (Fim arquivo)º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador FIMDirf                                        º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegFIMDirf()
aRegFIMDirf :=  { "FIMDirf" } 		//01 - Identificador de registro
Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ SalvaReg     ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Salva registros do Beneficiario no array auxiliar.             º±±
±±º      ³                                                                º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function SalvaReg(aRegGrava,lConsidera,aMainReg)

Local nTamAux	:= 0
Local nX 		:= 0
Local nY 		:= 0
Local cLinhaReg := ""
Local aAuxReg   := {}
Local cVlr		:= ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Concatena os valores de todos os arrays de registros e depois limpa cada array              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lConsidera //Considera funcionario na Declaracao
	For nX:=1 To Len(aMainReg)

		aAuxReg := {}
		//aAuxReg := &(aMainReg[nX]) --Macro-execução é um problema de performance
		aAuxReg := fCarArray(aMainReg[nX], .F.)
		If aMainReg[nX] == "aRegINFPC" .and. cAnoBase >= "2016"
			GravPri(@aRegGrava)
		ElseIf aMainReg[nX] == "aRegINFPA"  .and. cAnoBase >= "2016"
			GravPen(@aRegGrava)
		Else
			nTamAux := Len(aAuxReg)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Limpa valor Decimo Terceiro caso esteja zerado e codigo retencao diferente de 0561          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Len(aAuxReg) == 14 .AND. (cAliasSRL)->RL_CODRET <> "0561" .AND.;
				(ValType(aAuxReg[14]) != "C" .AND. aAuxReg[14] == 0)
				aAuxReg[14] := ""
			EndIf
			cLinhaReg := ""

			For nY:=1 To Len(aAuxReg)
		   		If ValType(aAuxReg[nY]) == "N"
					If cSitDecl == "2" .And. nY < nTamAux .And. SubStr(cDtEvento,1,6) <  cAnoBase + StrZero((nY - 1),2)
						cVlr := ""
					Else
						cVlr := AllTrim(Transform(aAuxReg[nY], "@E 9999999999999.99"))
						cVlr := SubStr(cVlr,1,len(cVlr)-3)+Right(cVlr,2)
				  	Endif

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³DIRF 2012 utiliza o campo com 13 posicoes                                                   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If cAnoBase >= "2011"
						If Len(cVlr) == 14
							cVlr := SubStr(cVlr,2,len(cVlr))
						ElseIf Len(cVlr) == 15
							cVlr := SubStr(cVlr,3,len(cVlr))
						EndIf
					EndIf
					cLinhaReg += cVlr+"|"
				Else
					cLinhaReg += aAuxReg[nY]+"|"
				EndIf
			Next nY

			If !Empty( cLinhaReg )
				aAdd( aRegGrava, cLinhaReg )
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Limpa o Array                                                                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			fCarArray(aMainReg[nX], .T.)
		EndIf
	Next nX
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Apenas limpa todos os arrays de Sub-Registros do Bloco IDREC                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX:=1 To Len(aMainReg)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Limpa o Array                                                                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		fCarArray(aMainReg[nX], .T.)

	Next nX
EndIf

aRegINFPC := {}
aRegRTPP:= {}
aRegRTFA:= {}
aRegRTSP:= {}
aRegRTEP:= {}
aRegESPP:= {}
aRegESFA:= {}
aRegESSP:= {}
aRegESEP:= {}

aMainReg := {} //Limpa Array
aRegINFPA 	:= {}
aRegRTPA 	:= {}
aRegESPA 	:= {}

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ CriaTbls     ºAutor  ³Alberto Deviciente	 º Data ³ 28/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Cria/Apaga tabelas temporarias.                                º±±
±±º      ³                                                                º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function CriaTbls(nTipo)
Local cAlias 	:= ""
Local aCmp 		:= {}
Local cArq 		:= ""
Local nI	 	:= 0
Local nTamChvINF:= 0
Local nTamDesINF:= 0
Local nTamCPFCGC:= 0
Local nTamTipoOu:= 0

If nTipo == 1 //Cria tabelas

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tabela OPSE - Operadora do Plano Privado de Assistencia a Saude - Coletivo Empresarial      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAlias	:=	"T_OPSE"
	If Select(cAlias)==0
		aCmp :=	{}
		aAdd (aCmp, {"CNPJOPER"	,"C", 	014,		0}) //CNPJ da operadora de plano de saude
		aAdd (aCmp, {"NOMEEMP"	,"C", 	150,		0}) //Nome empresarial
		aAdd (aCmp, {"REGANS"	,"C", 	006,		0}) //Registro ANS

		oOPSETmp := FWTemporaryTable():New(cAlias,aCmp)
		oOPSETmp:AddIndex( "INDOPSE", {"CNPJOPER"} )
		oOPSETmp:Create()

		DbSelectArea (cAlias)
		dbSetOrder(1)
	   	aAdd (aArqvsTMP, {cAlias})

	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tabela TPSE - Titular do Plano Privado de Assistencia a saude - Coletivo Empresarial        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAlias := "T_TPSE"
	If Select(cAlias)==0
		aCmp :=	{}
		aAdd (aCmp, {"CNPJOPER"	,"C", 	014,		0}) //CNPJ da operadora de plano de saude (Apenas para relacionar com o registro pai "OPSE" )
		aAdd (aCmp, {"CPFTIT"	,"C", 	011,		0}) //CPF do titular
		aAdd (aCmp, {"NOMETIT"	,"C", 	060,		0}) //Nome do titular
		aAdd (aCmp, {"VLRTIT"	,"N", 	015,		2}) //Valor pago no ano


		oTPSETmp := FWTemporaryTable():New(cAlias,aCmp)
		oTPSETmp:AddIndex( "INDTPSE", {"CNPJOPER","CPFTIT"} )
		oTPSETmp:Create()

		DbSelectArea (cAlias)
		dbSetOrder(1)

	   	aAdd (aArqvsTMP, {cAlias})
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tabela DTPSE - Dependente do Plano Privado de Assistencia a Saude - Coletivo Empresarial    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAlias := "T_DTPSE"
	If Select(cAlias)==0
		aCmp :=	{}
		aAdd (aCmp, {"CNPJOPER"	,"C", 	014,		0}) //CNPJ da operadora de plano de saude (Apenas para relacionar com o registro pai "OPSE" e "T_DTPSE" )
		aAdd (aCmp, {"CPFTIT"	,"C", 	011,		0}) //CPF do Titular (Apenas para relacionar com o registro pai "T_DTPSE" )
		aAdd (aCmp, {"COD"	    ,"C", 	002,		0}) //Codigo do Dependente
		aAdd (aCmp, {"CPFDEP"	,"C", 	011,		0}) //CPF do dependente
		aAdd (aCmp, {"DTNASDEP"	,"C", 	008,		0}) //Data de nascimento
		aAdd (aCmp, {"NOMEDEP"	,"C", 	060,		0}) //Nome do dependente
		aAdd (aCmp, {"RELADEP"	,"C", 	002,		0}) //Relacao de dependencia
		aAdd (aCmp, {"VLRDEP"	,"N", 	015,		2}) //Valor pago no ano


		oDTPSETmp := FWTemporaryTable():New(cAlias,aCmp)
		oDTPSETmp:AddIndex( "IND1", {"CNPJOPER","CPFTIT","COD","CPFDEP","DTNASDEP"} )
		oDTPSETmp:AddIndex( "IND2", {"CNPJOPER","CPFTIT","CPFDEP","DTNASDEP","COD"} )
		oDTPSETmp:Create()

		DbSelectArea (cAlias)
		dbSetOrder(1)

	   	aAdd (aArqvsTMP, {cAlias})
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tabela RDTPSE - Reembolso do Dependente do Plano Privado de Assis.  Coletivo Empresarial    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAlias := "T_RDTPSE"
	If Select(cAlias)==0
		aCmp :=	{}
		aAdd (aCmp, {"CNPJOPER"	,"C", 	014,		0}) //CNPJ da operadora de plano de saude (Apenas para relacionar com o registro pai "OPSE" e "T_DTPSE" )
		aAdd (aCmp, {"CPFTIT"	,"C", 	011,		0}) //CPF do Titular (Apenas para relacionar com o registro pai "T_DTPSE" )
		aAdd (aCmp, {"COD"	    ,"C", 	002,		0}) //Codigo do Dependente
		aAdd (aCmp, {"TPMED"		,"C", 	001,		0}) //Tipo de medico
		aAdd (aCmp, {"CNPJMED"	,"C", 	014,		0}) //CPNJ do prestador de servicos
		aAdd (aCmp, {"NOMEMED"	,"C", 	150,		0}) //NOME do medico
		aAdd (aCmp, {"VLRANO"	,"N", 	015,		2}) //Valor pago no ano
		aAdd (aCmp, {"VLRANT"	,"N", 	015,		2}) //Valor pago no ano


		oRDTPSETmp := FWTemporaryTable():New(cAlias,aCmp)
		oRDTPSETmp:AddIndex( "IND1", {"CNPJOPER","CPFTIT","TPMED","CNPJMED"} )
		oRDTPSETmp:Create()

		DbSelectArea (cAlias)
		dbSetOrder(1)

	   	aAdd (aArqvsTMP, {cAlias})
	EndIf



	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tabela RTPSE - Dados de reembolso por titulor                                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAlias := "T_RTPSE"
	If Select(cAlias)==0
		aCmp :=	{}
		aAdd (aCmp, {"CNPJOPER"	,"C", 	014,		0}) //CNPJ da operadora de plano de saude (Apenas para relacionar com o registro pai "OPSE" e "T_DTPSE" )
		aAdd (aCmp, {"CPFTIT"	,"C", 	011,		0}) //CPF do Titular (Apenas para relacionar com o registro pai "T_DTPSE" )
		aAdd (aCmp, {"TPMED"		,"C", 	001,		0}) //Tipo de medico
		aAdd (aCmp, {"CNPJMED"	,"C", 	014,		0}) //CPNJ do prestador de servicos
		aAdd (aCmp, {"NOMEMED"	,"C", 	150,		0}) //NOME do medico
		aAdd (aCmp, {"VLRANO"	,"N", 	015,		2}) //Valor pago no ano
		aAdd (aCmp, {"VLRANT"	,"N", 	015,		2}) //Valor pago anos anteriores


		oRTPSETmp := FWTemporaryTable():New(cAlias,aCmp)
		oRTPSETmp:AddIndex( "IND1", {"CNPJOPER","CPFTIT","TPMED","CNPJMED"} )
		oRTPSETmp:Create()

		DbSelectArea (cAlias)
		dbSetOrder(1)

	   	aAdd (aArqvsTMP, {cAlias})
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tabela INF - Informacoes Complementares     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAlias := "T_INF"
	If Select(cAlias)==0

		nTamChvINF 	:= TamSX3("RCS_CPFCGC")[1]+TamSX3("RCS_VERBA")[1]+TamSX3("RCS_TIPORE")[1]
		nTamDesINF	:= TamSX3("RCS_DESCRI")[1]+ 3 +TamSX3("RCS_CPFCGC")[1]
		nTamCPFCGC	:=	TamSX3("RCS_CPFCGC")[1]
		nTamTipoOu	:=	TamSX3("RCS_OUTROS")[1]

		aCmp :=	{}
		aAdd (aCmp, {"CPF"		,"C", 	011,					0}) //CPF
		aAdd (aCmp, {"CHAVE"	,"C", 	nTamChvINF,				0}) //Chave
		aAdd (aCmp, {"VALOR"	,"N", 	TamSX3("RCS_VALOR")[1],	2}) //Valor
		aAdd (aCmp, {"INFORMAC"	,"C", 	nTamDesINF,				0}) //Descricao da Informacao
		aAdd (aCmp, {"CPFCGC" 	,"C",	nTamCPFCGC,				0}) //Cpf Complementar
		aAdd (aCmp, {"OUTROS" 	,"C",	nTamTipoOu,				0}) //Cpf Complementar


		oINFTmp := FWTemporaryTable():New(cAlias,aCmp)
		oINFTmp:AddIndex( "IND1", {"CPF","CHAVE","CPFCGC"} )
		oINFTmp:Create()

		DbSelectArea (cAlias)
		dbSetOrder(1)
	   	aAdd (aArqvsTMP, {cAlias})
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tabela BRPDE - Informacao de beneficiario dos rendimentos pagos a residentes ou domiciliados no exterior  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAlias := "T_BRPDE"
	If Select(cAlias)==0
		aCmp :=	{}
		aAdd (aCmp, {"TIPOBEN"	,"C", 	001,	0}) //Beneficiario (1-Pessoa fisica; 2-Pessoa juridica)
		aAdd (aCmp, {"CODPAIS"	,"C", 	003,	0}) //Codigo de pais
		aAdd (aCmp, {"NIF"		,"C", 	030,	0}) //Numero de identificação fiscal - NIF
		aAdd (aCmp, {"BENDNIF"	,"C", 	001,	0}) //Indicador de beneficiário dispensado do Número de Identificação Fiscal - NIF
		aAdd (aCmp, {"PAISDNIF"	,"C", 	001,	0}) //Indicador de que o país não exige Número de Identificação Fiscal - NIF
		aAdd (aCmp, {"CPFCNPJ"	,"C", 	014,	0}) //CPF/CNPJ
		aAdd (aCmp, {"NOME"		,"C", 	150,	0}) //Nome/Nome empresarial
		aAdd (aCmp, {"RELFONT"	,"C", 	003,	0}) //Relacao fonte pagadora
		aAdd (aCmp, {"LOGRAD"	,"C", 	060,	0}) //Logradouro
		aAdd (aCmp, {"NUMERO"	,"C", 	006,	0}) //Numero
		aAdd (aCmp, {"COMPLEM"	,"C", 	025,	0}) //Complemento
		aAdd (aCmp, {"BAIRRO"	,"C", 	020,	0}) //Bairro/Distrito
		aAdd (aCmp, {"CODPOST"	,"C", 	010,	0}) //Codigo postal
		aAdd (aCmp, {"CIDADE"	,"C", 	040,	0}) //Cidade
		aAdd (aCmp, {"ESTADO"	,"C", 	040,	0}) //Estado/Provincia
		aAdd (aCmp, {"TELEF"	,"C", 	015,	0}) //Telefone
		aAdd (aCmp, {"CPFCGC"	,"C", 	014,	0}) //CPF/CNPJ Beneficiário		

		oBRPDETmp := FWTemporaryTable():New(cAlias,aCmp)
		oBRPDETmp:AddIndex( "IND1", {"TIPOBEN","CODPAIS","NIF","CPFCGC"} )
		oBRPDETmp:Create()

		DbSelectArea (cAlias)
		dbSetOrder(1)

	   	aAdd (aArqvsTMP, {cAlias})
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tabela VRPDE - Valores de rendimentos pagos a residentes ou domiciliados no exterior     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAlias := "T_VRPDE"
	If Select(cAlias)==0
		aCmp :=	{}
		aAdd (aCmp, {"TIPOBEN"	,"C", 	001,	0}) //Beneficiario (1-Pessoa fisica; 2-Pessoa juridica) (Usado para fazer relacionamento com a tabela T_BRPDE)
		aAdd (aCmp, {"CODPAIS"	,"C", 	003,	0}) //Codigo de pais									(Usado para fazer relacionamento com a tabela T_BRPDE)
		aAdd (aCmp, {"NIF"		,"C", 	030,	0}) //Numero de identificação fiscal - NIF				(Usado para fazer relacionamento com a tabela T_BRPDE)
		aAdd (aCmp, {"DTPGTO"	,"C", 	008,	0}) //Data do pagamento
		aAdd (aCmp, {"RECEITA"	,"C", 	004,	0}) //Codigo de receita
		aAdd (aCmp, {"TIPREND"	,"C", 	003,	0}) //Tipo de rendimento
		aAdd (aCmp, {"RENDPAG"	,"N", 	015,	2}) //Rendimento pago
		aAdd (aCmp, {"IMPRET"	,"N", 	015,	2}) //Imposto retido
		aAdd (aCmp, {"FORMTRB"	,"C", 	002,	0}) //Forma de tributacao
		aAdd (aCmp, {"CPFCGC"	,"C", 	014,	0}) //CPF/CNPJ Beneficiário

		oVRPDETmp := FWTemporaryTable():New(cAlias,aCmp)
		oVRPDETmp:AddIndex( "IND1", {"TIPOBEN","CODPAIS","NIF","CPFCGC","DTPGTO","RECEITA"} )
		oVRPDETmp:Create()

		DbSelectArea (cAlias)
		dbSetOrder(1)
	   	aAdd (aArqvsTMP, {cAlias})
	EndIf

	cAlias := "T_CABRRA"
	If Select(cAlias)==0
		aCmp :=	{}
		aAdd (aCmp, {"TIPOBEN"	,"C", 	001,	0}) //Beneficiario (1-Pessoa fisica; 2-Pessoa juridica)
		aAdd (aCmp, {"CPFBEN"	,"C", 	011,	0}) //CPF do Beneficiario
		aAdd (aCmp, {"NOMEBEN"	,"C", 	060,	0}) //Nome do Beneficiario
		aAdd (aCmp, {"NATUREZA"	,"C", 	050,	0}) //Natureza do RRA
		aAdd (aCmp, {"PROCESSO"	,"C", 	020,	0}) //Numero do Processo
		aAdd (aCmp, {"TIPOADV"	,"C", 	001,	0}) //1=Advogadp/2=Escritorio
		aAdd (aCmp, {"CPFADV"	,"C", 	014,	0}) //CPF do advogado/Cnpj do escritorio
		aAdd (aCmp, {"NOMEADV"	,"C", 	150,	0}) //Nome do advgogado/escritorio de advocacia
		aAdd (aCmp, {"DTLAUDO"	,"D", 	008,	0}) //Data do Laudo da Molestia Grave
		aAdd (aCmp, {"VAPGADV"	,"C", 	012,	2}) //Data do Laudo da Molestia Grave


		oCABRRATmp := FWTemporaryTable():New(cAlias,aCmp)
		oCABRRATmp:AddIndex( "IND1", {"TIPOBEN","CPFBEN","PROCESSO"} )
		oCABRRATmp:AddIndex( "IND2", {"TIPOBEN","PROCESSO","CPFBEN"} )

		oCABRRATmp:Create()

		DbSelectArea (cAlias)
		dbSetOrder(1)
	   	aAdd (aArqvsTMP, {cAlias})
	EndIf

	cAlias := "T_DETRRA"
	If Select(cAlias)==0
		aCmp :=	{}
		aAdd (aCmp, {"TIPOBEN"	,"C", 	001,	0}) //Beneficiario (1-Pessoa fisica; 2-Pessoa juridica)
		aAdd (aCmp, {"CPFBEN"	,"C", 	011,	0}) //CPF do Beneficiario
		aAdd (aCmp, {"IDREG"	,"C", 	001,	0}) //Identificador do Registro (1=RTRT,2=RTPO...)
		aAdd (aCmp, {"NOMEREG"	,"C", 	007,	0}) //Nome do Registro (RTRT,RTPO...)
		aAdd (aCmp, {"MES"		,"C", 	002,	0}) //Mes do Beneficio (01,02,03...13)
		aAdd (aCmp, {"CPFDEP"	,"C", 	011,	0}) //CPF do dependente
		aAdd (aCmp, {"NASCDEP"	,"C", 	008,	0}) //data nasc
		aAdd (aCmp, {"VALOR"	,"N", 	013,	2}) //Valor do Beneficio
		aAdd (aCmp, {"MESES"	,"N", 	004,	0}) //Quantidade de meses compostos
		aAdd (aCmp, {"PROCESSO"	,"C", 	020,	0}) //Numero do Processo
		aAdd (aCmp, {"NOMEDEP"	,"C", 	060,	0}) //Numero do Processo


		oDETRRATmp := FWTemporaryTable():New(cAlias,aCmp)
		oDETRRATmp:AddIndex( "IND1", {"TIPOBEN","CPFBEN","PROCESSO","IDREG","CPFDEP","NASCDEP","MES"} )
		oDETRRATmp:AddIndex( "IND2", {"TIPOBEN","PROCESSO","CPFBEN","IDREG","MES"} )

		oDETRRATmp:Create()

		DbSelectArea (cAlias)
		dbSetOrder(1)
	   	aAdd (aArqvsTMP, {cAlias})
	EndIf

Else //Apaga tabelas
	If oOPSETmp <> Nil
		oOPSETmp:Delete()
		oOPSETmp := Nil
	EndIf

	If oTPSETmp <> Nil
		oTPSETmp:Delete()
		oTPSETmp := Nil
	EndIf

	If oDTPSETmp <> Nil
		oDTPSETmp:Delete()
		oDTPSETmp := Nil
	EndIf

	If oRDTPSETmp <> Nil
		oRDTPSETmp:Delete()
		oRDTPSETmp := Nil
	EndIf

	If oRTPSETmp <> Nil
		oRTPSETmp:Delete()
		oRTPSETmp := Nil
	EndIf

	If oINFTmp <> Nil
		oINFTmp:Delete()
		oINFTmp := Nil
	EndIf

	If oBRPDETmp <> Nil
		oBRPDETmp:Delete()
		oBRPDETmp := Nil
	EndIf

	If oVRPDETmp <> Nil
		oVRPDETmp:Delete()
		oVRPDETmp := Nil
	EndIf

	If oCABRRATmp <> Nil
		oCABRRATmp:Delete()
		oCABRRATmp := Nil
	EndIf

	If oDETRRATmp <> Nil
		oDETRRATmp:Delete()
		oDETRRATmp := Nil
	EndIf

	aArqvsTMP := {}
EndIf

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GrvRegRRA    ºAutor  ³Leandro Drumond     º Data ³ 18/07/2012  º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Gera Registros relacionados a RRA - Rendimentos Recebidos      º±±
±±º      ³Acumuladamente.                                                 º±±
±±º      ³Grava nos arquivos temporarios para posteriormente gerar no ar- º±±
±±º      ³quivo magnetico.                                                º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GrvRegRRA(cTipoBen, cCPFBen, cTipoReg, nMes, nValor, nMeses, cCPFdep, cDtdep, cNome)
Local aTipoReg := {"RTRT","RTPO","RTPA","RTIRF","RIMOG","DAJUD"}
Local cChave   := ''

Default cCPFdep:= "00000000000"
Default cDtdep:= "00000000"
Default cNome := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro RIMOG deve ser geraqdo apenas para pessoa juridica.                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cTipoBen == '1' .and. cTipoReg = '5'
	Return(Nil)
EndIf

RFI->(DbSeek(xFilial('RFI')+(cAliasSR4)->R4_MAT+(cAliasSR4)->R4_IDCMPL))

If !Empty(RFI->RFI_NUMPRO)
	cChave := cTipoBen+AllTrim(cCpfBen)+RFI->RFI_NUMPRO
Else
	cChave := cTipoBen+AllTrim(cCpfBen)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Grava o arquivo referente ao cabecalho de RRA                                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !T_CABRRA->( dbSeek(cChave) )
	RecLock("T_CABRRA",.T.)
	T_CABRRA->TIPOBEN	:= cTipoBen												//CNPJ da operadora de plano de saude (Apenas para fazer relacionamento com o registro "OPSE")
	T_CABRRA->CPFBEN	:= cCPFBen												//CPF do titular
	T_CABRRA->NOMEBEN	:= FSubst(SRA->RA_NOME)											//Nome do titular
	T_CABRRA->DTLAUDO	:= If(Empty(SRA->RA_MOLEST),CtoD(''),SRA->RA_MOLEST)	//Data do Laudo da Molestia Grave
	If !Empty(RFI->RFI_NUMPRO)
		T_CABRRA->PROCESSO := AllTrim(RFI->RFI_NUMPRO)
		T_CABRRA->TIPOADV  := RFI->RFI_ADVFJ
		T_CABRRA->CPFADV   := RFI->RFI_CPFADV
		T_CABRRA->NOMEADV  := RFI->RFI_NADV
		T_CABRRA->VAPGADV  := STR(RFI->RFI_VALPG)
	Else
		T_CABRRA->PROCESSO := ''
	EndIf
	T_CABRRA->( MsUnlock() )
EndIf

If !T_DETRRA->( dbSeek(cTipoBen+cCpfBen+AllTrim(RFI->RFI_NUMPRO)+cTipoReg+cCPFdep+cDtdep+AllTrim(Str(nMes))) )
	RecLock("T_DETRRA",.T.)
	T_DETRRA->TIPOBEN	:= cTipoBen
	T_DETRRA->CPFBEN	:= cCPFBen
	T_DETRRA->IDREG		:= cTipoReg
	T_DETRRA->NOMEREG	:= aTipoReg[Val(cTipoReg)]
	T_DETRRA->CPFDEP	:= cCPFdep
	T_DETRRA->NASCDEP	:= cDtdep
	T_DETRRA->MES		:= AllTrim(Str(nMes))
	T_DETRRA->VALOR		:= nValor
	T_DETRRA->PROCESSO	:= AllTrim(RFI->RFI_NUMPRO)
	T_DETRRA->NOMEDEP 	:= cNome
	T_DETRRA->( MsUnLock() )
Else
	RecLock("T_DETRRA",.F.)
	T_DETRRA->VALOR := T_DETRRA->VALOR + nValor
	T_DETRRA->( MsUnLock() )
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se quantidade de meses foi gravada                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !T_DETRRA->( dbSeek(cTipoBen+cCpfBen+AllTrim(RFI->RFI_NUMPRO)+"7"+AllTrim(Str(nMes))) )
	RecLock("T_DETRRA",.T.)
	T_DETRRA->TIPOBEN	:= cTipoBen
	T_DETRRA->CPFBEN	:= cCPFBen
	T_DETRRA->IDREG		:= "7"
	T_DETRRA->NOMEREG	:= "QTMESES"
	T_DETRRA->MES		:= AllTrim(Str(nMes))
	T_DETRRA->MESES		:= nMeses
	T_DETRRA->PROCESSO	:= AllTrim(RFI->RFI_NUMPRO)
	T_DETRRA->( MsUnLock() )
EndIf

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GpmGeraRRA   ºAutor  ³Leandro Drumond   	 º Data ³ 18/07/2012  º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Recebidos Acumuladamente - RRA.                    º±±
±±º      ³ Grava no TXT, o registro RRA e seus Sub-Registros              º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GpmGeraRRA()
Local cTexto   	:= ""
Local c_Enter  	:= CHR(13)+CHR(10)
Local cVlr 	 	:= ""
Local cProcRRA	:= ""
Local cDescRet	:= ""
Local lRegRRA	:= .T.
Local lBpfRRA	:= .T.
Local lINFPA	:= .F.
Local aMeses	:= {0,0,0,0,0,0,0,0,0,0,0,0,0}
Local aTexto	:= {}
Local aAuxINFPA	:= {}
Local aAuxRTPA	:= {}
Local nX		:= 0
Local nTamMes	:= 0
Local nPos		:= 0
Local cNmDep1 	:= ""
Local cCpfDep1 	:= ""
Local cDtDep1 	:= ""

dbSelectArea("SX5")
If dbSeek(cFilial+"37"+"1889")
    cDescRet := SubStr(X5Descri(),1,50)
EndIf

nPos := Ascan( aArqvsTMP, { |x| X[1] == 'T_CABRRA' }  )

If nPos > 0
	T_CABRRA->( dbSetOrder(2) )
EndIf

T_CABRRA->( dbGoTop() )

nPos := Ascan( aArqvsTMP, { |x| X[1] == 'T_DETRRA' }  )

If nPos > 0
	T_DETRRA->( dbSetOrder(2) )
EndIf

T_DETRRA->( dbGoTop() )


While T_CABRRA->( !EoF() )

	If !lRegRRA
		lRegRRA := !(cProcRRA == AllTrim(T_CABRRA->PROCESSO))
	EndIf

	If lRegRRA

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³RRA - Rendimentos Recebidos Acumuladamente                                                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cTexto := "RRA|1|" //01 - Identificador de registro + Identificador de RRA

		cTexto += AllTrim(T_CABRRA->PROCESSO) + '|'
		cTexto += AllTrim(T_CABRRA->TIPOADV) + '|'
		cTexto += AllTrim(T_CABRRA->CPFADV) + '|'
		cTexto += AllTrim(T_CABRRA->NOMEADV) + '|'
		If (cAnoBase >= "2016")
			If Val(T_CABRRA->VAPGADV) >0
				cTexto += AllTrim(Transform(T_CABRRA->VAPGADV, "@E 99999999999.99")) + '|'
			Else
				cTexto += '|'
			Endif
		Endif
		cTexto += c_Enter

		If !GravaArqv(cTexto)
			Return .F.
		EndIf

		cProcRRA := AllTrim(T_CABRRA->PROCESSO)

		lRegRRA := .F.

		cTexto := 'IDREC|1889|' + c_Enter

		If !GravaArqv(cTexto)
			Return .F.
		EndIf

		aMeses := {0,0,0,0,0,0,0,0,0,0,0,0,0}
	EndIf

	T_DETRRA->( dbSeek(T_CABRRA->TIPOBEN+T_CABRRA->PROCESSO+T_CABRRA->CPFBEN) )

	lBpfRRA := .T.
	lINFPA := .F.

	While T_DETRRA->( !EoF() .and. T_DETRRA->CPFBEN == T_CABRRA->CPFBEN .and. T_DETRRA->PROCESSO == T_CABRRA->PROCESSO )
		If lBpfRRA
			cTexto := 'BPFRRA|' + T_CABRRA->CPFBEN + '|' + AllTrim(T_CABRRA->NOMEBEN) + '|' + FSubst(AllTrim(cDescRet)) + '|' + If(Empty(T_CABRRA->DTLAUDO),'',DtoC(T_CABRRA->DTLAUDO)) + '|'

			aAdd(aTexto,cTexto)

			cTexto := ''
			lBpfRRA := .F.
		EndIf

		If !Empty(cTexto) .AND. (cTexto == "RTPA")
			If (cTexto == AllTrim(T_DETRRA->NOMEREG))
				cCpfDep1 := If(Empty(T_DETRRA->CPFDEP),"00",T_DETRRA->CPFDEP)
				nPos:= aScan(aAuxINFPA, {|x| x[1] == cCpfDep1})
				If nPos == 0
					aAdd(aAuxINFPA, {cCpfDep1,T_DETRRA->NASCDEP,T_DETRRA->NOMEDEP}) //CPF * DatNasc * Nome
				EndIf

				nPos:= aScan(aAuxRTPA, {|x| x[1] == cCpfDep1})
				If nPos == 0
					aAdd(aAuxRTPA, {cCpfDep1,0,0,0,0,0,0,0,0,0,0,0,0,0}) //CPF * Jan * Fev * Mar * Abr * Mai * Jun * Jul * Ago * Set * Out * Nov * Dez * 13
					aAuxRTPA[Len(aAuxRTPA),(Val(T_DETRRA->MES) + 1)] := T_DETRRA->VALOR
				Else
					aAuxRTPA[nPos,(Val(T_DETRRA->MES) + 1)] += T_DETRRA->VALOR
				EndIf
			Else
				cCpfDep1 := "00"
				nPos:= aScan(aAuxINFPA, {|x| x[1] == cCpfDep1})
				If nPos > 0
						//unir os lancamentos no CPF - '00'
						For nX := 1 to Len(aAuxRTPA)
							If nX != nPos
								aAuxRTPA[nPos,02] += aAuxRTPA[nX,02]
								aAuxRTPA[nPos,03] += aAuxRTPA[nX,03]
								aAuxRTPA[nPos,04] += aAuxRTPA[nX,04]
								aAuxRTPA[nPos,05] += aAuxRTPA[nX,05]
								aAuxRTPA[nPos,06] += aAuxRTPA[nX,06]
								aAuxRTPA[nPos,07] += aAuxRTPA[nX,07]
								aAuxRTPA[nPos,08] += aAuxRTPA[nX,08]
								aAuxRTPA[nPos,09] += aAuxRTPA[nX,09]
								aAuxRTPA[nPos,10] += aAuxRTPA[nX,10]
								aAuxRTPA[nPos,11] += aAuxRTPA[nX,11]
								aAuxRTPA[nPos,12] += aAuxRTPA[nX,12]
								aAuxRTPA[nPos,13] += aAuxRTPA[nX,13]
								aAuxRTPA[nPos,14] += aAuxRTPA[nX,14]
							EndIf
						Next nX

						cTexto := "RTPA"
						For nX := 2 to 14
							cVlr := AllTrim(Transform(aAuxRTPA[nPos,nX], "@E 99999999999.99"))
							cVlr := SubStr(cVlr,1,len(cVlr)-3)+Right(cVlr,2)
							cTexto += "|" + cVlr
						Next nX

						cTexto += "|" + c_Enter
						aAdd(aTexto,cTexto)
					lINFPA := .F.
				Else
					For nPos := 1 to Len(aAuxINFPA)
						cTexto := "INFPA|"
						cTexto += aAuxINFPA[nPos,1]+"|"
						cTexto += aAuxINFPA[nPos,2]+"|"
						cTexto += aAuxINFPA[nPos,3]+"||"+ c_Enter
						aAdd(aTexto,cTexto)

						cTexto := "RTPA"
						For nX := 2 to 14
							cVlr := AllTrim(Transform(aAuxRTPA[nPos,nX], "@E 99999999999.99"))
							cVlr := SubStr(cVlr,1,len(cVlr)-3)+Right(cVlr,2)
							cTexto += "|" + cVlr
						Next nX

						cTexto += "|" + c_Enter
						aAdd(aTexto,cTexto)
					Next nPos
					lINFPA := .T.
				EndIf
				cTexto := ""
				cVlr := ""
				aAuxINFPA := {}
				aAuxRTPA := {}
				nPos := 0
				nX := 0
				Loop
			EndIf
		Else
			If !(cTexto == AllTrim(T_DETRRA->NOMEREG))
				If !Empty(cTexto)
					nTamMes := If(cTexto=="QTMESES", 12, 13)
					For nX := 1 to nTamMes
						If nTamMes == 13 .And. nX == 13
							cVlr := ""
						ElseIf nTamMes == 13
							cVlr := AllTrim(Transform(aMeses[nX], "@E 99999999999.99"))
							cVlr := SubStr(cVlr,1,len(cVlr)-3)+Right(cVlr,2)
						Else
							cVlr := AllTrim(Transform(aMeses[nX], "@E 999.9"))
							cVlr := SubStr(cVlr,1,len(cVlr)-2)+Right(cVlr,1)
						EndIf
						cTexto += "|" + cVlr
					Next nX
					cTexto += "|" + c_Enter
					aAdd(aTexto,cTexto)
				EndIf
				cTexto := AllTrim(T_DETRRA->NOMEREG)
				aMeses := {0,0,0,0,0,0,0,0,0,0,0,0,0}
				If	(cTexto == "RTPA")
					Loop
				EndIf
			EndIf

			If T_DETRRA->IDREG == '7'
				aMeses[Val(T_DETRRA->MES)] := T_DETRRA->MESES
			Else
				aMeses[Val(T_DETRRA->MES)] := T_DETRRA->VALOR
			EndIf
		EndIf
		T_DETRRA->( dbSkip() )
	EndDo

	If !Empty(aTexto)
		If lINFPA
			aTexto[1] += "S"
		ElseIf cAnoBase > "2016"
			aTexto[1] += "N"
		EndIf
		aTexto[1] += "|" + c_Enter
		For nX := 1 to Len(aTexto)
			If !GravaArqv(aTexto[nX])
				Return .F.
			EndIf
		Next nX
		aTexto := {}
	EndIf

	If !Empty(cTexto)
		nTamMes := If(cTexto=="QTMESES", 12, 13)
		For nX := 1 to nTamMes
			If nTamMes == 13 .And. nX == 13
				cVlr := ""
			ElseIf nTamMes == 13
				cVlr := AllTrim(Transform(aMeses[nX], "@E 99999999999.99"))
				cVlr := SubStr(cVlr,1,len(cVlr)-3)+Right(cVlr,2)
			Else
				cVlr := AllTrim(Transform(aMeses[nX], "@E 999.9"))
				cVlr := SubStr(cVlr,1,len(cVlr)-2)+Right(cVlr,1)
			EndIf
			cTexto += "|" + cVlr
		Next nX
		cTexto += "|" + c_Enter

		If !GravaArqv(cTexto)
			Return .F.
		EndIf
	EndIf
	cTexto := ""
	aMeses := {0,0,0,0,0,0,0,0,0,0,0,0,0}

	T_CABRRA->( dbSkip() )
EndDo

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GpmGeraSCP   ºAutor  ³Marcia Moura     	 º Data ³ 02/02/2017  º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Sociedade em Conta de Participacao                             º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GpmGeraSCP()
Local cTexto   	:= ""
Local c_Enter  	:= CHR(13)+CHR(10)
Local cVlr 	 	:= ""
Local aMeses	:= {0,0,0,0,0,0,0,0,0,0,0,0}
Local nX		:= 0
Local nP		:= 0
Local nT		:= 0

Local nTamMes	:= 0
Local nPos		:= 0


aScp:={}
aScp:= F994DIRF(cAnoBase,cFilResp)

for nX:=1 to len(aScp)
	cTexto := "SCP|" //01 - Identificador de registro
	cTexto += AllTrim(aScp[nX,3]) + '|'
	cTexto += AllTrim(aScp[nX,2]) + '|'
	cTexto += c_Enter
	If !GravaArqv(cTexto)
		Return .F.
	EndIf

	for nP:=1 to len(aScp[nX,4])
		if 	aScp[nX,4,nP,2] == "J"
			cTexto := "BPJSCP|" //01 - Identificador de registro
		else
			cTexto := "BPFSCP|" //01 - Identificador de registro
		endif
		cTexto += AllTrim(aScp[nX,4,nP,4]) + '|'
		cTexto += AllTrim(aScp[nX,4,nP,3]) + '|'
		cTexto += AllTrim(aScp[nX,4,nP,5]) + '|'
		cTexto += c_Enter
		If !GravaArqv(cTexto)
			Return .F.
		EndIf
		For nT := 1 to len(aScp[nX,4,nP,6])
			aMeses[Val(aScp[nX,4,nP,6,nT,1])] := aScp[nX,4,nP,6,nT,3]
		Next nT
			For nT := 1 to 12
				if nT == 1
					cTexto := "RISCP" //01 - Identificador de registro
				endif

				cVlr := AllTrim(Transform(aMeses[nT], "@E 99999999999.99"))
				cVlr := SubStr(cVlr,1,len(cVlr)-3)+Right(cVlr,2)
				cTexto += "|" + cVlr
			Next nT
			cTexto += "|000|" + c_Enter
		If !GravaArqv(cTexto)
			Return .F.
		EndIf

	Next nP
Next nX

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GerPSTemp    ºAutor  ³Alberto Deviciente	 º Data ³ 29/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Gera Registros relacionados a Plano Privado de Assistencia a   º±±
±±º      ³Saude e Informacoes Complementares.                             º±±
±±º      ³Grava nos arquivos temporarios para posteriormente gerar no ar- º±±
±±º      ³quivo magnetico.                                                º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GerPSTemp(cFilFun,cMatFun,cTipFJFun,cCPFCGCFun,cCodRetenc,cVerbAMTit,cVerbAOTit)
Local cTipoAsSau	:= ""
Local cTipoBenef	:= ""
Local cCodDep		:= ""
Local cTipDep   	:= ""
Local cChaveRCS		:= ""
Local nOrdem		:= 0			// ordem a ser utilizada na pesquisa do indice "RCS_ANO+RCS_CPFBEN+RCS_CODRET+RCS_TIPORE"
Local aArea			:= GetArea()
Local aSRLArea
Local lCentra		:= .T.
Local cCNPJAnt		:= cCgcAnt
Local cRCSFilial 	:= Replicate("!", FwGetTamFilial)

Local cQryRCS		:= ""
Local cWhere		:= ""
Local nCntArq		:= 0

Local nAux			:= 0
Local cCpfB			:= ''

Private aDependentes	:= {}

Static lPeGP590TAB		:= ExistBlock("GP590TAB")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Se for Pessoa Juridica, desconsidera, pois para Plano de Saude (TPSE) e Informacos Complementares (Reg. INF)³
//³somente sao aceitos Pessoa Fisica "CPF"                                                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cTipFJFun == "2" //1=Fisica;2=Juridica
	Return(Nil)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de Entrada GP590TAB para carregar tabelas temporarias                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lPeGP590TAB
	ExecBlock("GP590TAB")
	Return(Nil)
EndIf

cChaveRCS := cAnoBase+cCPFCGCFun

// Tratamento da ordem do indice "RCS_ANO+RCS_CPFBEN+RCS_CODRET+RCS_TIPORE"
dbSelectArea ("RCS")
nOrdem := RetOrder( "RCS", "RCS_ANO+RCS_CPFBEN+RCS_CODRET+RCS_TIPORE", .T. )

If nOrdem == 0
	cArqRCS := criatrab( "", .F. )

	IndRegua( "RCS", cArqRCS, "RCS_ANO+RCS_CPFBEN+RCS_CODRET+RCS_TIPORE",,, STR0012 ) //"Selecionando Registros..."
	nIndex := RetIndex("RCS")
	RCS->( dbSetOrder( nIndex + 1 ) )
Else
	RCS->( dbSetOrder( nOrdem ) )
EndIf

RCS->( dbSeek( cChaveRCS ) )

While (cAliasRCS)->(! Eof() ) .AND. (cAliasRCS)->(RCS_ANO+RCS_CPFBEN ) == cChaveRCS

	dbSelectArea(cAliasRCS)

	If !( (cAliasRCS)->RCS_CODRET == cCodRetenc .or. (cAliasRCS)->RCS_CODRET == '1889' )
		(cAliasRCS)->( dbSkip() )
		Loop
	EndIf

	If ((cAliasRCS)->RCS_FILIAL # cFilFun )
		If cRCSFilial # (cAliasRCS)->RCS_FILIAL
			aSRLArea	:= SRL->(GetArea())
			dbSelectArea("SRL")
			SRL->( dbSetOrder(1) )
			cRCSFilial 	:= (cAliasRCS)->RCS_FILIAL
			SRL->(dbSeek((cAliasRCS)->RCS_FILIAL+(cAliasRCS)->RCS_MAT))
				If SRL->RL_CGCFONT # cCNPJAnt
					lCentra := .F.
					(cAliasRCS)->( dbSkip() )
					RestArea(aSRLArea)
					Loop
				Else
					lCentra := .T.
				EndIf
			RestArea(aSRLArea)
		ElseIf !lCentra
			(cAliasRCS)->( dbSkip() )
			Loop
		EndIf
	EndIf

	dbSelectArea(cAliasRCS)

 	If !Empty((cAliasRCS)->RCS_NOME) .and. Empty((cAliasRCS)->RCS_OUTROS) .and. (cAliasRCS)->RCS_VALOR # 0

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Inclui Informacoes Complementares no arquivo temporario referente ao Identificador "INF"                    ³
		//³Grava desmembrado no arquivo temporario para posteriormente fazer a concatenacao das informacoes            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		RegINF(AllTrim(cCPFCGCFun))
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se a Informacao esta relacionada com Assistencia de Saude (Medica ou Odontologica) ³
	//³Incluido tratamento para o campo RCS_OUTROS vazio para impedir duplicidade no valor		   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If AllTrim((cAliasRCS)->RCS_TIPORE) == "R" .and. ! Empty((cAliasRCS)->RCS_OUTROS) .And. ( (cAliasRCS)->RCS_VALOR > 0 .Or. SubStr( (cAliasRCS)->RCS_OUTROS, 1, 1) == "T" )
		If !"REEMBOLSO" $ (cAliasRCS)->RCS_OUTROS
			cTipoAsSau := SubStr((cAliasRCS)->RCS_OUTROS,2,3)
			cTipoBenef := If(SubStr((cAliasRCS)->RCS_OUTROS,1,1) == "T","TIT","DEP")
			cCodDep    := SubStr((cAliasRCS)->RCS_OUTROS,5,2)
			cTipDep	   := SubStr((cAliasRCS)->RCS_OUTROS,1,1)
			nAux := AT( "CPF: ", (cAliasRCS)->RCS_DESCRI )
			if nAux > 0
				cCpfB := SubStr((cAliasRCS)->RCS_DESCRI,nAux+5,14)
				cCpfB := StrTran( cCpfB, ".", "" )
				cCpfB := StrTran( cCpfB, "-", "" )
			else
				cCPFB := ''
			endif
			GpIncRegPS(cTipoAsSau,cTipoBenef,cCodDep,cTipDep,cCpfB)
		Else
			If cAnoBase >= "2016"
				cTipoAsSau := SubStr((cAliasRCS)->RCS_OUTROS,2,3)
				cTipoBenef := If(SubStr((cAliasRCS)->RCS_OUTROS,1,1) == "T","TIT","DEP")
				cCodDep    := SubStr((cAliasRCS)->RCS_OUTROS,5,2)
				cTipDep	   := SubStr((cAliasRCS)->RCS_OUTROS,1,1)
				If !EMPTY((cAliasRCS)->RCS_INMED)
					GpIncRegRe(cTipoAsSau,cTipoBenef,cCodDep,cTipDep) // gera registro de reembolso
				EndIf
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Registro esta relacionado a Informacoes Complementares - Reg. INF   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		RegINF( AllTrim( cCPFCGCFun ))

	Endif
	(cAliasRCS)->( dbSkip() )
End

RCS->( dbCloseArea() )

RestArea( aArea )

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GpIncRegPS   ºAutor  ³Alberto Deviciente	 º Data ³ 29/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Inclui Registros de Plano de Saude no arquivo temporario.      º±±
±±º      ³ referente aos Identificadores: OPSE, TPSE, DTPSE               º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GpIncRegPS(cTipoAsSau,cTipoBenef,cCodDep,cTipDep, cCPFB)
Local cRelDepend := ""
Local nPosGP   	 := 0
Local cCNPJPlaSa := AllTrim((cAliasRCS)->RCS_CPFCGC)
Local cCPFBenTit := ""
Local cCPFDep    := ""
Local dNascDep   := ""
Local cNomeDep   := ""
Local nPos		 := 0
Local cTpVerb    := PosSrv((cAliasRCS)->RCS_VERBA, xFilial("SRV", (cAliasRCS)->RCS_FILIAL), "RV_TIPOCOD")

cCPFBenTit := alltrim((cAliasRCS)->RCS_CPFBEN)

If cTipoBenef == "TIT"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Titular (Funcionario)          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	If cTipoAsSau == "MED"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³MED = Assist. Medica           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica / Inclui Operadora de Plano de Saude no arquivo temporario, referente ao Identificador: OPSE³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		GpInclOPSE(cTipoAsSau,cCNPJPlaSa)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Grava o arquivo referente ao registro (TPSE - Informacao de Titular do Plano Privado de Assistencia a Saude - Coletivo Empresarial)³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !T_TPSE->( dbSeek(cCNPJPlaSa+cCPFBenTit) )
			RecLock("T_TPSE",.T.)
			T_TPSE->CNPJOPER:= cCNPJPlaSa			//CNPJ da operadora de plano de saude (Apenas para fazer relacionamento com o registro "OPSE")
			T_TPSE->CPFTIT	:= cCPFBenTit			//CPF do titular
			T_TPSE->NOMETIT	:= If (!Empty(SRA->RA_NOMECMP), FSubst(SRA->RA_NOMECMP), FSubst(SRA->RA_NOME))		//Nome do titular
			T_TPSE->VLRTIT	:= (cAliasRCS)->RCS_VALOR		//Valor pago no ano
			T_TPSE->( MsUnlock() )
		Else
			RecLock("T_TPSE",.F.)
			T_TPSE->VLRTIT	:= T_TPSE->VLRTIT +  ((cAliasRCS)->RCS_VALOR * If(cTpVerb == "1", -1 , 1) )  //Soma Valor de outro plano (No caso qdo. tem Ass.Medica e Odontologica com o mesmo CNPJ)
			T_TPSE->( MsUnlock() )
		EndIf

	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ODO = Assist. Odontologica     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica / Inclui Operadora de Plano de Saude no arquivo temporario, referente ao Identificador: OPSE                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		GpInclOPSE(cTipoAsSau,cCNPJPlaSa)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Grava o arquivo referente ao registro (TPSE - Informacao de Titular do Plano Privado de Assistencia a Saude - Coletivo Empresarial)³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !T_TPSE->( dbSeek(cCNPJPlaSa+cCPFBenTit) )
			RecLock("T_TPSE",.T.)
			T_TPSE->CNPJOPER:= cCNPJPlaSa			//CNPJ da operadora de plano de saude (Apenas para fazer relacionamento com o registro "OPSE")
			T_TPSE->CPFTIT	:= cCPFBenTit			//CPF do titular
			T_TPSE->NOMETIT	:= IF (!Empty(SRA->RA_NOMECMP), FSubst(SRA->RA_NOMECMP), FSubst(SRA->RA_NOME))		//Nome do titular
			T_TPSE->VLRTIT	:= (cAliasRCS)->RCS_VALOR		//Valor pago no ano
			T_TPSE->( MsUnlock() )
		Else
			RecLock("T_TPSE",.F.)
			T_TPSE->VLRTIT	:= T_TPSE->VLRTIT + ((cAliasRCS)->RCS_VALOR * If(cTpVerb == "1", -1 , 1) )    //Soma Valor de outro plano (No caso qdo. tem Ass.Medica e Odontologica com o mesmo CNPJ)
			T_TPSE->( MsUnlock() )
		EndIf
	EndIf

ElseIf cTipoBenef == "DEP"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Dependente                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	If Empty(aDependentes)
		dbSelectArea("SRB")
		SRB->(dbSetOrder(1))
		SRB->(dbSeek((cAliasRCS)->RCS_FILIAL+(cAliasRCS)->RCS_MAT))
		While SRB->(!EOF()) .AND. SRB->RB_FILIAL = (cAliasRCS)->RCS_FILIAL .AND. SRB->RB_MAT == (cAliasRCS)->RCS_MAT
			aAdd( aDependentes, { SRB->RB_COD, SRB->RB_CIC, dToS(SRB->RB_DTNASC), SRB->RB_NOME, SRB->RB_GRAUPAR }  )
			SRB->(dbSkip())
		End

		DbSelectArea("RHM")
		Set Delete OFF
		DbSetOrder( RetOrdem( "RHM", "RHM_FILIAL+RHM_MAT+RHM_TPFORN+RHM_CODFOR+RHM_CODIGO" ) )
		RHM->(dbSeek( (cAliasRCS)->RCS_FILIAL+(cAliasRCS)->RCS_MAT ) )
		While RHM->(!EOF()) .AND. RHM->RHM_FILIAL == (cAliasRCS)->RCS_FILIAL .AND. RHM->RHM_MAT == (cAliasRCS)->RCS_MAT
			If RHM->(deleted() ) // Tratamento para agregados deletados na RHM
				DbSelectArea("RHN")
				RHN->(dbSeek( RHM->RHM_FILIAL+RHM->RHM_MAT ) )
				While RHN->(!EOF()) .AND. RHN->RHN_FILIAL == RHM->RHM_FILIAL .AND. RHN->RHN_MAT == RHM->RHM_MAT
					If RHN_OPERAC == '2' .AND. !EMPTY(RHN_TPALT)
						aAdd( aDependentes, { RHM->RHM_CODIGO, RHM->RHM_CPF, dToS(RHM->RHM_DTNASC), RHM->RHM_NOME, "A" }  )
					EndIf
					RHN->(dbSkip())
				End While
				RHM->(dbSkip())
			Else
				aAdd( aDependentes, { RHM->RHM_CODIGO, RHM->RHM_CPF, dToS(RHM->RHM_DTNASC), RHM->RHM_NOME, "A" }  )
				RHM->(dbSkip())
			EndIf
		End While
		Set Delete ON
	Else
		nPos := aScan( aDependentes, { |x| X[5] == cTipDep .And. x[1] == cCodDep .and. (empty(cCPFB) .or. (!empty(cCPFB) .and. x[2] == cCPFB))}  )
		If nPos == 0
			dbSelectArea("SRB")
			SRB->(dbSetOrder(1))
			SRB->(dbSeek((cAliasRCS)->RCS_FILIAL+(cAliasRCS)->RCS_MAT))
			While SRB->(!EOF()) .AND. SRB->RB_FILIAL = (cAliasRCS)->RCS_FILIAL .AND. SRB->RB_MAT == (cAliasRCS)->RCS_MAT
				If SRB->RB_COD == cCodDep
					aAdd( aDependentes, { SRB->RB_COD, SRB->RB_CIC, dToS(SRB->RB_DTNASC), SRB->RB_NOME, SRB->RB_GRAUPAR }  )
				EndIf
				SRB->(dbSkip())
			End
		EndIf
		nPos := aScan( aDependentes, { |x| X[5] == cTipDep .And. x[1] == cCodDep .and. (empty(cCPFB) .or. (!empty(cCPFB) .and. x[2] == cCPFB)) } )
		If nPos == 0
			dbSelectArea("RHM")
			dbSetOrder( RetOrdem( "RHM", "RHM_FILIAL+RHM_MAT+RHM_TPFORN+RHM_CODFOR+RHM_CODIGO" ) )
			If dbSeek( (cAliasRCS)->RCS_FILIAL+(cAliasRCS)->RCS_MAT+If(cTipoAsSau == "MED", "1", "2") )
				While RHM->(!EOF()) .AND. RHM->RHM_FILIAL = (cAliasRCS)->RCS_FILIAL .AND. RHM->RHM_MAT == (cAliasRCS)->RCS_MAT
					If RHM->RHM_CODIGO == cCodDep
						aAdd( aDependentes, { RHM->RHM_CODIGO, RHM->RHM_CPF, dToS(RHM->RHM_DTNASC), RHM->RHM_NOME, "A" }  )
					EndIf
					RHM->(dbSkip())
				End While
			EndIf
		EndIf
	EndIf

	nPos := aScan( aDependentes, { |x| X[5] == cTipDep .And. x[1] == cCodDep .and. (empty(cCPFB) .or. (!empty(cCPFB) .and. x[2] == cCPFB))}  )
	If nPos > 0
		If cTipoAsSau == "MED"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³MED = Assist. Medica           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica / Inclui Operadora de Plano de Saude no arquivo temporario, referente ao Identificador: OPSE³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			GpInclOPSE(cTipoAsSau,cCNPJPlaSa)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Grava o arquivo referente ao registro (DTPSE - Informacao de Dependente do Plano Privado de Assistencia a Saude - Coletivo Empresarial)³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			T_DTPSE->(dbSetOrder(2))
		 	If !T_DTPSE->( dbSeek(cCNPJPlaSa+cCPFBenTit+aDependentes[nPos,2]+aDependentes[nPos,3]) )

				cRelDepend := ""
				nPosGP   := aScan( aDPGrauPar, { |x| x[1]==aDependentes[nPos,5] } )
				If nPosGP > 0
					cRelDepend := aDPGrauPar[nPosGP][2]
				EndIf

				RecLock("T_DTPSE",.T.)
				T_DTPSE->CNPJOPER	:= cCNPJPlaSa				//CNPJ da operadora de plano de saude (Apenas para fazer relacionamento com os registros "OPSE" e "DTPSE")
				T_DTPSE->CPFTIT		:= alltrim((cAliasRCS)->RCS_CPFBEN)	//CPF do Titular (Apenas para relacionar o Dependente com o Titular)
				T_DTPSE->COD        := cCoddep                 //Codigo do Dependente
				T_DTPSE->CPFDEP		:= aDependentes[nPos,2]		//CPF do dependente
				T_DTPSE->DTNASDEP	:= aDependentes[nPos,3] 	//Data de nascimento
				T_DTPSE->NOMEDEP	:= aDependentes[nPos,4]		//Nome do dependente
				T_DTPSE->RELADEP	:= cRelDepend				//Relacao de dependencia
				T_DTPSE->VLRDEP		:= (cAliasRCS)->RCS_VALOR			//Valor pago no ano
				T_DTPSE->( MsUnlock() )
			Else
				RecLock("T_DTPSE",.F.)
				T_DTPSE->VLRDEP		:= T_DTPSE->VLRDEP + ((cAliasRCS)->RCS_VALOR * If(cTpVerb == "1", -1 , 1) )   //Soma Valor de outro plano (No caso qdo. tem Ass.Medica e Odontologica com o mesmo CNPJ)
				T_DTPSE->( MsUnlock() )
			EndIf
			T_DTPSE->(dbSetOrder(1))

		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ODO = Assist. Odontologica     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica / Inclui Operadora de Plano de Saude no arquivo temporario, referente ao Identificador: OPSE³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			GpInclOPSE(cTipoAsSau,cCNPJPlaSa)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Grava o arquivo referente ao registro (DTPSE - Informacao de Dependente do Plano Privado de Assistencia a Saude - Coletivo Empresarial)³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			T_DTPSE->(dbSetOrder(2))
		 	If !T_DTPSE->( dbSeek(cCNPJPlaSa+cCPFBenTit+aDependentes[nPos,2]+aDependentes[nPos,3]) )

				cRelDepend := ""
				nPosGP   := aScan( aDPGrauPar, { |x| x[1]==aDependentes[nPos,5] } )
				If nPosGP > 0
					cRelDepend := aDPGrauPar[nPosGP][2]
				EndIf

					RecLock("T_DTPSE",.T.)
					T_DTPSE->CNPJOPER	:= cCNPJPlaSa				//CNPJ da operadora de plano de saude (Apenas para fazer relacionamento com os registros "OPSE" e "DTPSE")
					T_DTPSE->CPFTIT		:= alltrim((cAliasRCS)->RCS_CPFBEN)	//CPF do Titular (Apenas para relacionar o Dependente com o Titular)
					T_DTPSE->COD        := cCodDep                 //Codigo do Dependente
					T_DTPSE->CPFDEP		:= aDependentes[nPos,2]		//CPF do dependente
					T_DTPSE->DTNASDEP	:= aDependentes[nPos,3] 	//Data de nascimento
					T_DTPSE->NOMEDEP	:= aDependentes[nPos,4]		//Nome do dependente
					T_DTPSE->RELADEP	:= cRelDepend				//Relacao de dependencia
					T_DTPSE->VLRDEP		:= (cAliasRCS)->RCS_VALOR			//Valor pago no ano
					T_DTPSE->( MsUnlock() )
			Else
				RecLock("T_DTPSE",.F.)
				T_DTPSE->VLRDEP		:= T_DTPSE->VLRDEP + ((cAliasRCS)->RCS_VALOR * If(cTpVerb == "1", -1 , 1) )  //Soma Valor de outro plano (No caso qdo. tem Ass.Medica e Odontologica com o mesmo CNPJ)
				T_DTPSE->( MsUnlock() )
			EndIf
			T_DTPSE->(dbSetOrder(1))
		EndIf
	EndIf
EndIf

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GpInclOPSE   ºAutor  ³Alberto Deviciente	 º Data ³ 29/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Inclui Operadora de Plano de Saude no arquivo temporario.      º±±
±±º      ³ referente ao Identificador: OPSE                               º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GpInclOPSE(cTipoAS,cCNPJFor)
Local cCodForn 	:= ""
Local cNomeForn := ""
Local cCodANSFor:= ""
Local cTabForn 	:= ""

If cTipoAS == "MED"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³MED = Assist. Medica           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cTabForn := "S016"
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Assist. Odontologia            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cTabForn := "S017"
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Busca os dados do fornecedor do Plano de Assist. de Saude³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCodForn := fPosTab(cTabForn,cCNPJFor,"=",6,,,,4) //Busca Codigo do Fornecedor

If !Empty(cCodForn)

	If !T_OPSE->( dbSeek(cCNPJFor) )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Busca os dados do fornecedor do Plano de Assist. Medica³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cNomeForn  := fPosTab(cTabForn,cCodForn,"=",4,,,,5) //Busca Nome do Fornecedor
		cCodANSFor 	:= fPosTab(cTabForn,cCodForn,"=",4,,,,7) //Busca o Registro ANS do Fornecedor de Assist. Medica

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Grava o arquivo referente ao registro (OPSE - Operadora do Plano Privado de Assistencia a Saude - Coletivo Empresarial)³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		RecLock("T_OPSE",.T.)
		T_OPSE->CNPJOPER:= cCNPJFor 		//CNPJ da operadora de plano de saude
		T_OPSE->NOMEEMP	:= cNomeForn 		//Nome empresarial
		T_OPSE->REGANS	:= cCodANSFor 		//Registro ANS
		T_OPSE->( MsUnlock() )

		lTemAssSau := .T. //Atualiza variavel para indicar se tem Plano de Saude (Para gerar os registros OPSE, TPSE e DTPSE no TXT)

	EndIf
EndIf

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GpmGeraPSE   ºAutor  ³Alberto Deviciente	 º Data ³ 03/Jan/2011 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Plano Privado de Assistencia a Saude - coletivo empresarial.   º±±
±±º      ³ Grava no TXT, o registro PSE e seus Sub-Registros              º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GpmGeraPSE()
Local cTexto   	:= ""
Local cTxtAux	:= ""
Local cTPSE		:= ""
Local c_Enter  	:= CHR(13)+CHR(10)
Local cVlR	 	:= ""
Local cVlTPSE 	:= ""
Local lRTPSE	:= .T.
Local lDTPSE	:= .T.

T_OPSE->( dbGoTop() )
T_TPSE->( dbGoTop() )
T_DTPSE->( dbGoTop() )

If T_OPSE->( !EoF() )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³PSE - Registro de informacao de pagamentos a Plano Privado de Assistencia a Saude - Coletivo Empresarial               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cTexto := "PSE|" //01 - Identificador de registro
	cTexto += c_Enter
	If !GravaArqv(cTexto)
		Return(.F.)
	EndIf

	While T_OPSE->( !EoF() )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³OPSE - Registro de informacao da Operadora do Plano Privado de Assistencia a Saude - Coletivo Empresarial              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cTexto := "OPSE|" 				   		//01 - Identificador de registro
		cTexto += T_OPSE->CNPJOPER+"|" 			//02 - CNPJ da operadora de plano privado de assistencia a saude
		cTexto += AllTrim(T_OPSE->NOMEEMP)+"|" 	//03 - Nome empresarial
		cTexto += T_OPSE->REGANS+"|" 			//04 - Registro ANS
		cTexto += c_Enter
		If !GravaArqv(cTexto)
			Return(.F.)
		EndIf

		cTexto := ""
		T_TPSE->( dbSeek(T_OPSE->CNPJOPER) )
		While T_TPSE->( !EoF() ) .And. T_TPSE->CNPJOPER == T_OPSE->CNPJOPER

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³TPSE - Registro de informacao de Titular do Plano Privado de Assistencia a Saude - Coletivo Empresarial                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cVlTPSE := AllTrim(Transform(T_TPSE->VLRTIT, "@E 9999999999999.99"))
			cVlTPSE := SubStr(cVlTPSE,1,len(cVlTPSE)-3)+Right(cVlTPSE,2)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³DIRF 2012 utiliza o campo com 13 posicoes    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cAnoBase >= "2018"
				If Len(cVlTPSE) > 9
					cVlTPSE := SubStr(cVlTPSE,Len(cVlr)-8,len(cVlr))
				EndIf
			ElseIf  cAnoBase >= "2011"
				If Len(cVlTPSE) == 14
					cVlTPSE := SubStr(cVlTPSE,2,len(cVlTPSE))
				ElseIf Len(cVlTPSE) == 15
					cVlTPSE := SubStr(cVlTPSE,3,len(cVlTPSE))
				EndIf
			EndIf

			cTPSE := "TPSE|" 				   		//01 - Identificador de registro
			cTPSE += T_TPSE->CPFTIT+"|" 			//02 - CPF do titular
			cTPSE += alltrim(T_TPSE->NOMETIT)+"|" //03 - Nome
			cTPSE += cVlTPSE+"|" 					//04 - Valor pago no ano
			cTPSE += c_Enter

			// valores reembolso do titular
			T_RTPSE->( DbSetOrder (1) )
			T_RTPSE->( dbSeek(T_TPSE->CNPJOPER+T_TPSE->CPFTIT) )
			If T_RTPSE->( EoF() )
				lRTPSE := .F.
			Else
				lRTPSE	:= .T.
				cTexto := cTPSE
				cTxtAux := ""
				While T_RTPSE->( !EoF() ) .And. T_RTPSE->CNPJOPER+T_RTPSE->CPFTIT == T_TPSE->CNPJOPER+T_TPSE->CPFTIT
					//RTPSE - Registro de reembolso do Plano Privado de Assistencia a Saude - Coletivo Empresarial
					cVlr := AllTrim(Transform(T_RTPSE->VLRANO, "@E 9999999999999.99"))
					cVlr := SubStr(cVlr,1,len(cVlr)-3)+Right(cVlr,2)
					//DIRF 2012 utiliza o campo com 13 posicoes
					If cAnoBase >= "2011"
						If Len(cVlr) == 14
							cVlr := SubStr(cVlr,2,len(cVlr))
						ElseIf Len(cVlr) == 15
							cVlr := SubStr(cVlr,3,len(cVlr))
						EndIf
					EndIf

					cTexto +=  "RTPSE|" 				     		//01 - Identificador de registro
					cTexto += AllTrim(T_RTPSE->CNPJMED)+"|"	//02 - CPF/CNPJ do medico
					cTexto += alltrim(T_RTPSE->NOMEMED)+"|" 				//03 - Nome do Medico
					cTexto += cVlr+"|" 						//06 - Valor pago no ano
					cTexto += "|" 					    	//07 - Valor pago em anos anteriores (nao vamos gravar)
					cTexto += c_Enter

					T_RTPSE->( dbSkip() )
				End
			EndIf
			T_DTPSE->( dbSetOrder (2) )
			T_DTPSE->( dbSeek(T_TPSE->CNPJOPER+T_TPSE->CPFTIT) )
			If T_DTPSE->( EoF() )
				lDTPSE := .F.
			Else
				lDTPSE := .T.

				If !lRTPSE
					cTexto := cTPSE
				EndIf

				cAuxTemp := ''
				While T_DTPSE->( !EoF() ) .And. T_DTPSE->CNPJOPER+T_DTPSE->CPFTIT == T_TPSE->CNPJOPER+T_TPSE->CPFTIT

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³DTPSE - Registro de informacao de Dependente do Plano Privado de Assistencia a Saude - Coletivo Empresarial³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					cVlr := AllTrim(Transform(T_DTPSE->VLRDEP, "@E 9999999999999.99"))
					cVlr := SubStr(cVlr,1,Len(cVlr)-3)+Right(cVlr,2)

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³DIRF 2012 utiliza o campo com 13 posicoes    ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If cAnoBase >= "2018"
						If Len(cVlr) > 9
							cVlr := SubStr(cVlr,Len(cVlr)-8,len(cVlr))
						EndIf
					ElseIf cAnoBase >= "2011"
						If Len(cVlr) == 14
							cVlr := SubStr(cVlr,2,len(cVlr))
						ElseIf Len(cVlr) == 15
							cVlr := SubStr(cVlr,3,len(cVlr))
						EndIf
					EndIf
					cAuxTemp := "DTPSE|"+AllTrim(T_DTPSE->CPFDEP)+"|"+T_DTPSE->DTNASDEP+"|"+AllTrim(T_DTPSE->NOMEDEP)+"|"+T_DTPSE->RELADEP+"|"+cVlr+"|"+c_Enter

					if !(cAuxTemp $ cTexto)
						cTxtAux += "DTPSE|" 						//01 - Identificador de registro
						cTxtAux += AllTrim(T_DTPSE->CPFDEP)+"|"		//02 - CPF do dependente
						cTxtAux += T_DTPSE->DTNASDEP+"|" 			//03 - Data de nascimento
						cTxtAux += AllTrim(T_DTPSE->NOMEDEP)+"|"	//04 - Nome do dependente
						cTxtAux += T_DTPSE->RELADEP+"|" 			//05 - Relacao de dependencia
						cTxtAux += cVlr+"|" 						//06 - Valor pago no ano
						cTxtAux += c_Enter
					endif

					// grava o valor de reembolso do dependente
					T_RDTPSE->( DbSetOrder (1) )
					T_RDTPSE->( dbSeek(T_DTPSE->CNPJOPER+T_DTPSE->CPFTIT+T_DTPSE->COD ) )
					If T_RDTPSE->( EoF() )
					//nao tem RDTPSE, entao cVlr do DTPSE deve ser maior que zero
						If val(cVlr) > 0
							cTexto += cTxtAux
						EndIf
						cTxtAux := ""
					Else
						cTexto += cTxtAux
						cTxtAux := ""
						While T_RDTPSE->( !EoF() ) .And. T_DTPSE->CNPJOPER+T_DTPSE->CPFTIT+T_DTPSE->COD == T_RDTPSE->CNPJOPER+T_RDTPSE->CPFTIT+T_RDTPSE->COD
							//RTDPSE - Registro de reembolso do Plano Privado de Assistencia a Saude - Coletivo Empresarial
							cVlr := AllTrim(Transform(T_RDTPSE->VLRANO, "@E 9999999999999.99"))
							cVlr := SubStr(cVlr,1,len(cVlr)-3)+Right(cVlr,2)
							//DIRF 2012 utiliza o campo com 13 posicoes
							If cAnoBase >= "2011"
								If Len(cVlr) == 14
									cVlr := SubStr(cVlr,2,len(cVlr))
								ElseIf Len(cVlr) == 15
									cVlr := SubStr(cVlr,3,len(cVlr))
								EndIf
							EndIf

							cTexto += "RDTPSE|" 				     	//01 - Identificador de registro
							cTexto += AllTrim(T_RDTPSE->CNPJMED)+"|"	//02 - CPF/CNPJ do medico
							cTexto += alltrim(T_RDTPSE->NOMEMED)+"|" 	//03 - Nome do Medico
							cTexto += cVlr+"|" 							//06 - Valor pago no ano
							cTexto += "|" 								//07 - Valor pago anos anteriores (nao gravaremos)
							cTexto += c_Enter

							T_RDTPSE->( dbSkip() )
						End
					EndIf

					T_DTPSE->( dbSkip() )
				End
			EndIf

			If !lRTPSE .And. !lDTPSE .And. Val(cVlTPSE) > 0
				cTexto := cTPSE
			EndIf

			If !Empty(cTexto) .AND. !GravaArqv(cTexto)
				Return(.F.)
			EndIf

			T_TPSE->( dbSkip() )
		End

		T_OPSE->( dbSkip() )
	End

Endif

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GpIncResEx   ºAutor  ³Alberto Deviciente	 º Data ³ 03/Jan/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Inclui Registros de Residentes ou Domiciliados no Exterior     º±±
±±º      ³ referente aos Identificadores: BRPDE, VRPDE                    º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GpIncResEx(cTipRend,nValor)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³A e J = Rendimento Tributavel                ³
//³D e L = Imposto Retido na Fonte              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(cTipRend $ 'AxJxDxL')
	Return()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Grava o arquivo temporario referente ao registro (BRPDE - Informacao de beneficiario dos rendimentos pagos a residentes ou domiciliados no exterior)³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !T_BRPDE->( dbSeek((cAliasSRL)->RL_TIPOFJ+(cAliasSR4)->R4_PAIS+(cAliasSR4)->R4_NIFEX+(cAliasSRL)->RL_CPFCGC) )
	RecLock("T_BRPDE", .T.)
	T_BRPDE->TIPOBEN := (cAliasSRL)->RL_TIPOFJ 	//Beneficiario (1-Pessoa fisica; 2-Pessoa juridica)
	T_BRPDE->CODPAIS := (cAliasSR4)->R4_PAIS 	//Codigo de pais
	T_BRPDE->NIF	 := (cAliasSR4)->R4_NIFEX	//Numero de identificacao fiscal - NIF
	T_BRPDE->BENDNIF := IIF( (cAliasSRL)->RL_BEDINI == "1","S","N")	//Indicador de beneficiário dispensado do Número de Identificação Fiscal - NIF
	T_BRPDE->PAISDNIF:= IIF( (cAliasSRL)->RL_PAEXNI == "2","N","S")	//Indicador de que o país não exige Número de Identificação Fiscal - NIF
	T_BRPDE->CPFCNPJ := (cAliasSR4)->R4_CPFCGC	//CPF/CNPJ
	T_BRPDE->NOME	 := (cAliasSRL)->RL_BENEFIC //Nome/Nome empresarial
	T_BRPDE->RELFONT := IIF( (cAliasSRL)->RL_TIPOFJ == "2", (cAliasSRL)->RL_BREEX, "" )	//Relacao fonte pagadora
	T_BRPDE->LOGRAD	 := (cAliasSRL)->RL_LOGEX	//Logradouro
	T_BRPDE->NUMERO	 := (cAliasSRL)->RL_NUMEX	//Numero
	T_BRPDE->COMPLEM := (cAliasSRL)->RL_COMPL	//Complemento
	T_BRPDE->BAIRRO	 := (cAliasSRL)->RL_BAIEX	//Bairro/Distrito
	T_BRPDE->CODPOST := (cAliasSRL)->RL_POSEX	//Codigo postal
	T_BRPDE->CIDADE	 := (cAliasSRL)->RL_CIDEX	//Cidade
	T_BRPDE->ESTADO	 := (cAliasSRL)->RL_ESTEX	//Estado/Provincia
	T_BRPDE->TELEF	 := (cAliasSRL)->RL_TELEX	//Telefone
	T_BRPDE->CPFCGC  := (cAliasSRL)->RL_CPFCGC
	T_BRPDE->(MsUnlock())

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Grava o arquivo temporario referente ao registro (VRPDE - Valores de rendimentos pagos a residentes ou domiciliados no exterior)³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !T_VRPDE->( dbSeek((cAliasSRL)->RL_TIPOFJ+(cAliasSR4)->R4_PAIS+(cAliasSR4)->R4_NIFEX+(cAliasSRL)->RL_CODRET+(cAliasSRL)->RL_CPFCGC+dToS((cAliasSR4)->R4_DTPGT)) )
		RecLock("T_VRPDE", .T.)
		T_VRPDE->TIPOBEN := (cAliasSRL)->RL_TIPOFJ
		T_VRPDE->CODPAIS := (cAliasSR4)->R4_PAIS
		T_VRPDE->NIF	 := (cAliasSR4)->R4_NIFEX
		T_VRPDE->DTPGTO	 := dToS((cAliasSR4)->R4_DTPGT)
		T_VRPDE->RECEITA := (cAliasSRL)->RL_CODRET
		T_VRPDE->TIPREND := (cAliasSRL)->RL_TPREX
		T_VRPDE->CPFCGC  := (cAliasSRL)->RL_CPFCGC

		If cTipRend $ 'AxJ'
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Rendimento Tributavel                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			T_VRPDE->RENDPAG := nValor
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Imposto Retido na Fonte                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			T_VRPDE->IMPRET	 := nValor
		EndIf
		T_VRPDE->FORMTRB := (cAliasSRL)->RL_TRBEX
		T_VRPDE->(MsUnlock())

		lTemResExt := .T.  //Atualiza variavel para indicar se tem Registros de Residentes ou Domiciliados no Exterior (Para gerar os registros RPDE, BRPDE e VRPDE no TXT)
	EndIf
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Grava o arquivo temporario referente ao registro (VRPDE - Valores de rendimentos pagos a residentes ou domiciliados no exterior)³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !T_VRPDE->( dbSeek((cAliasSRL)->RL_TIPOFJ+(cAliasSR4)->R4_PAIS+(cAliasSR4)->R4_NIFEX+(cAliasSRL)->RL_CPFCGC+dToS((cAliasSR4)->R4_DTPGT)+(cAliasSRL)->RL_CODRET) )
		RecLock("T_VRPDE", .T.)
		T_VRPDE->TIPOBEN := (cAliasSRL)->RL_TIPOFJ
		T_VRPDE->CODPAIS := (cAliasSR4)->R4_PAIS
		T_VRPDE->NIF	 := (cAliasSR4)->R4_NIFEX
		T_VRPDE->DTPGTO	 := dToS((cAliasSR4)->R4_DTPGT)
		T_VRPDE->RECEITA := (cAliasSRL)->RL_CODRET
		T_VRPDE->TIPREND := (cAliasSRL)->RL_TPREX
		T_VRPDE->CPFCGC  := (cAliasSRL)->RL_CPFCGC

		If cTipRend $ 'AxJ'
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Rendimento Tributavel                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			T_VRPDE->RENDPAG := nValor
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Imposto Retido na Fonte                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			T_VRPDE->IMPRET	 := nValor
		EndIf
		T_VRPDE->FORMTRB := (cAliasSRL)->RL_TRBEX
		T_VRPDE->(MsUnlock())

		lTemResExt := .T.  //Atualiza variavel para indicar se tem Registros de Residentes ou Domiciliados no Exterior (Para gerar os registros RPDE, BRPDE e VRPDE no TXT)
	Else
		RecLock("T_VRPDE", .F.)

		If cTipRend $ 'AxJ'
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Rendimento Tributavel                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			T_VRPDE->RENDPAG := nValor
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Imposto Retido na Fonte                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			T_VRPDE->IMPRET	 := nValor
		EndIf
		T_VRPDE->(MsUnlock())
	EndIf
EndIf

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GpGerResEx   ºAutor  ³Alberto Deviciente	 º Data ³ 03/Jan/2011 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Residentes ou Domiciliados no Exterior.                        º±±
±±º      ³ Grava no TXT, os registros BRPDE e VRPDE.                      º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GpGerResEx()
Local cTexto   	:= ""
Local c_Enter  	:= CHR(13)+CHR(10)
Local cVlrRend 	 := ""
Local cVlrImpRet := ""

T_BRPDE->( dbGoTop() )
T_VRPDE->( dbGoTop() )

If T_BRPDE->( !EoF() )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³RPDE - Registro de Informacao de rendimentos pagos a residentes ou domiciliados no exterior³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cTexto := "RPDE|" //01 - Identificador de registro
	cTexto += c_Enter
	If !GravaArqv(cTexto)
		Return(.F.)
	EndIf

	While T_BRPDE->( !EoF() )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³BRPDE - Registro de Informacao de beneficiario dos rendimentos pagos a residentes ou domiciliados no exterior³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cTexto := "BRPDE|"						//01 - Identificador de registro
		cTexto += T_BRPDE->TIPOBEN+"|"			//02 - Beneficiario (1-Pessoa fisica; 2-Pessoa juridica)
		cTexto += AllTrim(T_BRPDE->CODPAIS)+"|"	//03 - Codigo de pais

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Somente considera o codigo do NIF se o pais exigir NIF e o beneficiario necessitar do NIF                    ³
		//³Obs: codigo do NIF nao e' obrigatorio                                                                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If T_BRPDE->PAISDNIF == "N" .And. T_BRPDE->BENDNIF == "N"
			cTexto += AllTrim(T_BRPDE->NIF)+"|"		//04 - Numero de identificacao fiscal - NIF
		Else
			cTexto += "|
		EndIf
		cTexto += AllTrim(T_BRPDE->BENDNIF)+"|"	//05 - Indicador de beneficiário dispensado do Número de Identificação Fiscal - NIF
		cTexto += AllTrim(T_BRPDE->PAISDNIF)+"|"//06 - Indicador de que o país não exige Número de Identificação Fiscal - NIF
		cTexto += AllTrim(T_BRPDE->CPFCNPJ)+"|"	//07 - CPF/CNPJ
		cTexto += AllTrim(T_BRPDE->NOME)+"|"	//08 - Nome/Nome empresarial
		cTexto += AllTrim(T_BRPDE->RELFONT)+"|"	//09 - Relacao fonte pagadora
		cTexto += AllTrim(T_BRPDE->LOGRAD)+"|"	//10 - Logradouro
		cTexto += AllTrim(T_BRPDE->NUMERO)+"|"	//11 - Numero
		cTexto += AllTrim(T_BRPDE->COMPLEM)+"|"	//12 - Complemento
		cTexto += AllTrim(T_BRPDE->BAIRRO)+"|"	//13 - Bairro/Distrito
		cTexto += AllTrim(T_BRPDE->CODPOST)+"|"	//14 - Codigo postal
		cTexto += AllTrim(T_BRPDE->CIDADE)+"|"	//15 - Cidade
		cTexto += AllTrim(T_BRPDE->ESTADO)+"|"	//16 - Estado/Provincia
		cTexto += AllTrim(T_BRPDE->TELEF)+"|"	//17 - Telefone
		cTexto += c_Enter

		If !GravaArqv(cTexto)
			Return(.F.)
		EndIf

		T_VRPDE->( dbSeek(T_BRPDE->TIPOBEN+T_BRPDE->CODPAIS+T_BRPDE->NIF+T_BRPDE->CPFCGC ) )

		While T_VRPDE->( !EoF() ) .and. T_VRPDE->(TIPOBEN+CODPAIS+NIF+CPFCGC) == T_BRPDE->(TIPOBEN+CODPAIS+NIF+CPFCGC)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³VRPDE - Registro de Valores de rendimentos pagos a residentes ou domiciliados no exterior                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cVlrRend := AllTrim(Transform(T_VRPDE->RENDPAG, "@E 9999999999999.99"))
			cVlrRend := SubStr(cVlrRend,1,len(cVlrRend)-3)+Right(cVlrRend,2)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³DIRF 2012 utiliza o campo com 13 posicoes   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cAnoBase >= "2011"
				If Len(cVlrRend) == 14
					cVlrRend := SubStr(cVlrRend,2,len(cVlrRend))
				ElseIf Len(cVlrRend) == 15
					cVlrRend := SubStr(cVlrRend,3,len(cVlrRend))
				EndIf
			EndIf

			cVlrImpRet := AllTrim(Transform(T_VRPDE->IMPRET, "@E 9999999999999.99"))
			cVlrImpRet := SubStr(cVlrImpRet,1,len(cVlrImpRet)-3)+Right(cVlrImpRet,2)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³DIRF 2012 utiliza o campo com 13 posicoes   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cAnoBase >= "2011"
				If Len(cVlrImpRet) == 14
					cVlrImpRet := SubStr(cVlrImpRet,2,len(cVlrImpRet))
				ElseIf Len(cVlrImpRet) == 15
					cVlrImpRet := SubStr(cVlrImpRet,3,len(cVlrImpRet))
				EndIf
			EndIf

			cTexto := "VRPDE|" 				//01 - Identificador de registro
			cTexto += T_VRPDE->DTPGTO+"|" 	//02 - Data do pagamento
			cTexto += T_VRPDE->RECEITA+"|" 	//03 - Codigo de receita
			cTexto += T_VRPDE->TIPREND+"|" 	//04 - Tipo de rendimento
			cTexto += cVlrRend+"|" 			//05 - Rendimento pago
			cTexto += cVlrImpRet+"|" 		//06 - Imposto retido
			cTexto += T_VRPDE->FORMTRB+"|" 	//07 - Forma de tributacao
			cTexto += c_Enter

			T_VRPDE->( dbSkip() )


			If !GravaArqv(cTexto)
				Return(.F.)
			EndIf

		End

		T_BRPDE->( dbSkip() )
	End

EndIf
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegINF       ºAutor  ³Alberto Deviciente	 º Data ³ 03/Jan/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Inclui Informacoes Complementares no arquivo temporario.       º±±
±±º      ³ Referente ao Identificador: INF                                º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegINF(cCPFCGCFun)
Local cChaveINF := ""
Local cInformac := ""
Local cCPFCGCCom:= ""
Local cTexto1	  := ""
Local cTexto2	  := ""
Local aCaracter := {}
Local nCol := 0
aCaracter	:= {":","/",".","\","-",",","(",")"}   		// Caracteres nao aceitos no DIRF

cCPFCGCCom := AllTrim((cAliasRCS)->RCS_CPFCGC)

If !Empty((cAliasRCS)->RCS_TIPORE)
	cChaveINF := (cAliasRCS)->RCS_TIPORE + (cAliasRCS)->RCS_DESCRI
Else
	cChaveINF :=  (cAliasRCS)->RCS_CPFCGC + (cAliasRCS)->RCS_VERBA + (cAliasRCS)->RCS_TIPORE
EndIf

If T_INF->( dbSeek(cCPFCGCFun+cChaveINF+cCPFCGCCom) )
	RecLock("T_INF", .F.)
	T_INF->VALOR := T_INF->VALOR + (cAliasRCS)->RCS_VALOR
	T_INF->(MsUnlock())
Else
	cCPFCGCCom := AllTrim((cAliasRCS)->RCS_CPFCGC)

	cTexto1 := (cAliasRCS)->RCS_DESCRI
	For nCol:=1 to Len(aCaracter)
		cTexto1 := STRTRAN(cTexto1,aCaracter[nCol],"")
	Next
	cInformac := alltrim(cTexto1)+ If(AllTrim((cAliasRCS)->RCS_TIPORE) == "R", Space(2), space(03) + cCPFCGCCom )
	RecLock("T_INF", .T.)
	T_INF->CPF 	 := cCPFCGCFun
	T_INF->CHAVE 	 := cChaveINF
	T_INF->VALOR 	 := (cAliasRCS)->RCS_VALOR
	T_INF->INFORMAC:= cInformac
	T_INF->CPFCGC	 := (cAliasRCS)->RCS_CPFCGC
	T_INF->OUTROS	:= FSubst((cAliasRCS)->RCS_OUTROS)
	T_INF->(MsUnlock())
EndIf

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GpmGeraINF   ºAutor  ³Alberto Deviciente	 º Data ³ 03/Jan/2011 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Informacoes Complementares - Reg. INF                          º±±
±±º      ³ Grava no TXT, o as informacoes armazenadas no arquivo          º±±
±±º      ³ temporario referente ao registro INF.                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GpmGeraINF()
Local cTexto   	:= ""
Local c_Enter  	:= CHR(13)+CHR(10)
Local cInfConcat:= ""
Local cCPFINF 	:= ""

T_INF->( dbGoTop() )
If T_INF->( !EoF() )

	While T_INF->( !EoF() )

		cInfConcat 	:= ""
		cCPFINF	 	:= T_INF->CPF

		While T_INF->CPF == cCPFINF

		  	If !(SubStr(T_INF->OUTROS,2,3) $ "MED/ODO")
				cInfConcat += AllTrim(T_INF->INFORMAC) + " Valor " + Transform(T_INF->VALOR,"@E 999,999,999.99") +" "
			EndIf

			T_INF->( dbSkip() )
		End

		If cInfConcat <> ""
			//³Informacoes complementares (500 Caracteres) ³
			cInfConcat := Left(cInfConcat,500)

			//³INF - Informacoes Complementares            ³
			cTexto := "INF|" 				   		//01 - Identificador de registro
			cTexto += cCPFINF+"|" 		   			//02 - CPF
			cTexto += cInfConcat+"|" 				//03 - Informacoes complementares
			cTexto += c_Enter
			If !GravaArqv(cTexto)
				Return(.F.)
			EndIf
		EndIf
	End

EndIf


Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GerArqvMag   ºAutor  ³Alberto Deviciente	 º Data ³ 29/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Gera o arquivo magnetico da DIRF.                              º±±
±±º      ³                                                                º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GerArqvMag()
Local cArqTmp	:= GetNextAlias()
Local cBkpArq	:= ""
Local cDirSelec := Alltrim(cDrive)
Local cNomeDir 	:= cDirSelec+"\"+AllTrim(cCPFCNPJDec) 			//Diretorio que sera criado para armazenar o arquivo
Local cNomeArq 	:= cNomeDir+"\DIRF_"+cAnoBase+".txt"   	//Nome do Arquivo da DIRF a ser gerado "DIRF_ANO" (Ex.: DIRF_2010)
Local cMsg   	:= ""

If Empty(cCPFCNPJDec)
	Help(" ",1,"Help",,STR0035,1,0) //"CPF/CNPJ do declarante não informado. Campo [RL_CGCFONT]."
	Return(.F.)
EndIf

//Primeiro gera o arquivo no system
cBkpArq 	:= cNomeArq
cNomeArq	:= Upper( GetPvProfString( GetEnvServer() , "StartPath" , "" , GetAdv97() ) )
cNomeArq	:= Alltrim(cNomeArq + cArqTmp)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Grava informacoes de abertura do arquivo da DIRF              ³
//³Grava informacoes do array "aRegReceita"                      ³
//³Grava informacoes dos arquivos temporarios de Assist. medica  ³
//³Grava informacoes de Residentes ou Domiciliados no exterior   ³
//³Grava informacoes do Registro INF (Informcaoes Complementares)³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

//Cria arquivo da DIRF
nArq := MSFCREATE(cNomeArq,0)
IF Ferror() # 0 .And. nArq = -1
	cMsg := STR0018+STR(Ferror(),3) 			//-- "Erro de abertura, codigo DOS:"
	Help(" ",1,"Help",,cMsg,1,0)
	Return .F.
Endif

//Monta e grava arquivo da DIRF
if len(aRegDIRF) > 0 .and. len(aRegRESPO) > 0

	if cTipoDecl == "1" //1-Fisica

		//Atualiza a posicao 04 do array do registro DECPF (Indicador de declarante de rendimentos pagos a residentes ou domiciliados no exterior (S=Sim; N=Nao))
		if lTemResExt
			aRegDECPF[4] := "S" //Sim, tem Plano Privado de Assistencia de Saude
		else
			aRegDECPF[4] := "N" //Nao tem Plano Privado de Assistencia de Saude
		endif

		//Atualiza a posicao 06 do array do registro DECPF (Indicador de plano privado de assistencia de saude - coletivo empresarial (S=Sim; N=Nao))
		if lTemAssSau
			aRegDECPF[6] := "S" //Sim, tem Plano Privado de Assistencia de Saude
		else
			aRegDECPF[6] := "N" //Nao tem Plano Privado de Assistencia de Saude
		endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Layout - Declaracao - Pessoa Fisica  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		if !DIRFLayPF()
			Return .F.
		endif
	elseif cTipoDecl == "2" //2-Juridica

		//Atualiza a posicao 09 do array do registro DECPJ (Indicador de declarante de rendimentos pagos a residentes ou domiciliados no exterior (S=Sim; N=Nao))
		if lTemResExt
			aRegDECPJ[9] := "S" //Sim, tem Plano Privado de Assistencia de Saude
		else
			aRegDECPJ[9] := "N" //Nao tem Plano Privado de Assistencia de Saude
		endif

		//Atualiza a posicao 10 do array do registro DECPJ (Indicador de plano privado de assistencia de saude - coletivo empresarial  (S=Sim; N=Nao))
		if lTemAssSau
			aRegDECPJ[10] := "S" //Sim, tem Plano Privado de Assistencia de Saude
		else
			aRegDECPJ[10] := "N" //Nao tem Plano Privado de Assistencia de Saude
		endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Layout - Declaracao - Pessoa Juridica³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		if !DIRFLayPJ()
			Return .F.
		endif

	endif

	//Fecha o arquivo
	FClose(nArq)

	//Reinicializa variaveis
	aRegDIRF  	:= {}
	aRegRESPO 	:= {}
	aRegDECPF 	:= {}
	aRegDECPJ 	:= {}
	aRegReceita := {}
	aRegRendEnt	:= {}
	lTemAssSau 	:= .F.
	lTemResExt  := .F.

endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Cria diretorio principal com nome "DIRF" para armazenar as pastas de cada CNPJ declarante³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !ExistDir(cDirSelec)

	If Makedir(cDirSelec) <> 0
		cMsg := STR0036+cDirSelec //"Nao foi possível criar o diretorio: "
		Help(" ",1,"Help",,cMsg,1,0)
		Return(.F.)
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Cria diretorio com o numero do CNPJ declarante    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !ExistDir(cNomeDir)
	If Makedir(cNomeDir) <> 0
		cMsg := STR0036+cNomeDir //"Nao foi possível criar o diretorio: "
		Help(" ",1,"Help",,cMsg,1,0)
		Return(.F.)
	EndIf
EndIf

//Faz a copia do arquivo gerado na system p/ o arquivo destino
If !( __CopyFile( cNomeArq , cBkpArq ) )


	Aviso( STR0023, STR0047, { "Ok" }, Nil, STR0048 ) //Atencao###"Erro ao criar o arquivo"
	fErase( cNomeArq )
	Return (.F.)
EndIf

fErase( cNomeArq )

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ DIRFLayPF    ºAutor  ³Alberto Deviciente	 º Data ³ 03/Jan/2011 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Layout DIRF - Declarante Pessoa Fisica.                        º±±
±±º      ³ Monta informacoes para o arquivo da DIRF conforme layout padraoº±±
±±º      ³definido.                                                       º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function DIRFLayPF()
Local cTexto   	:= ""
Local c_Enter  	:= CHR(13)+CHR(10)
Local nX 		:= 0
Local nY 		:= 0
Local nLenIDREC := len(aRegReceita)
Local nLenBenefi:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³DIRF - Registro de informacao da declaracao - (Inicio do arquivo)³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aEval(aRegDIRF,{|x| cTexto += x+"|" })
cTexto += c_Enter

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³RESPO - Responsavel pelo preenchimento                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aEval(aRegRESPO,{|x| cTexto += x+"|" })
cTexto += c_Enter

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³DECPF - Declarante Pessoa Fisica                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aEval(aRegDECPF,{|x| cTexto += x+"|" })
cTexto += c_Enter

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Grava as informacoes iniciais no arquivo TXT da DIRF             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !GravaArqv(cTexto)
	Return(.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³IDREC - Identificacao de codigo de receita e seus SUB-Registros  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nX:=1 to nLenIDREC

	cTexto := ""

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³IDREC - Identificacao de Codigo de receita                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aEval(aRegReceita[nX][1],{|x| cTexto += x+"|" })
	cTexto += c_Enter
	If !GravaArqv(cTexto)
		Return(.F.)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³SUB-Registros do registro IDREC                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nLenBenefi := len(aRegReceita[nX][2])
	For nY:=1 To nLenBenefi
		cTexto := aRegReceita[nX][2][nY]+c_Enter

		If !GravaArqv(cTexto)
			Return(.F.)
		EndIf
	Next nY
Next nX


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Grava no TXT informacoes referentes aos Rendimentos Recebidos Acumuladamente - RRA³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !GpmGeraRRA()
	Return(.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Plano Privado de Assistencia a Saude - coletivo empresarial                       ³
//³Grava no TXT, o registro PSE e seus Sub-Registros                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !GpmGeraPSE()
	Return(.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Rendimentos pagos a residentes ou domiciliados no exterior                        ³
//³Grava no TXT, o registro RPDE e seus Sub-Registros                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !GpGerResEx()
	Return(.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³INF - Informacoes Complementares                                                  ³
//³Grava no TXT, o registro INF                                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !GpmGeraINF()
	Return(.F.)
EndIf

cTexto := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro identificador do termino da declaracao (identificador FIMDirf)           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RegFIMDirf()
aEval(aRegFIMDirf,{|x| cTexto += x+"|" })
cTexto += c_Enter
If !GravaArqv(cTexto)
	Return(.F.)
EndIf

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ DIRFLayPJ    ºAutor  ³Alberto Deviciente	 º Data ³ 03/Jan/2011 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Layout DIRF - Declarante Pessoa Juridica.                      º±±
±±º      ³ Monta informacoes para o arquivo da DIRF conforme layout padraoº±±
±±º      ³definido.                                                       º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function DIRFLayPJ()

Local aCodDIRF	:= { aRegReceita, aRegRendEnt }
Local aProcDIRF
Local cTexto   	:= ""
Local c_Enter  	:= CHR(13)+CHR(10)
Local nX 		:= 0
Local nY 		:= 0
Local nCntDIRF	:= 0
Local nCodDIRF	:= Len( aCodDIRF )
Local nProcDIRF	:= 0
Local nLenBenefi:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³DIRF - Registro de informacao da declaracao - (Inicio do arquivo)                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aEval(aRegDIRF,{|x| cTexto += x+"|" })
cTexto += c_Enter

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³RESPO - Responsavel pelo preenchimento                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aEval(aRegRESPO,{|x| cTexto += x+"|" })
cTexto += c_Enter

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³DECPJ - Declarante Pessoa Juridica                                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aEval(aRegDECPJ,{|x| cTexto += x+"|" })
cTexto += c_Enter

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Grava as informacoes iniciais no arquivo TXT da DIRF                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !GravaArqv(cTexto)
	Return(.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³1)IDREC - Identificacao de codigo de receita e seus SUB-Registros                     ³
//³2)VPEIM - Identificacao de valores de entidades imunes ou isentas e seus SUB-Registros³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nCntDIRF := 1 To nCodDIRF

	aProcDIRF	:= {}
	aProcDIRF 	:= aClone( aCodDIRF[ nCntDIRF ] )
	nProcDIRF	:= Len( aProcDIRF )

	For nX := 1 To nProcDIRF

		cTexto := ""
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³IDREC - Identificacao de Codigo de receita                                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aEval(aProcDIRF[nX][1],{|x| cTexto += x+"|" })
		cTexto += c_Enter
		If !GravaArqv(cTexto)
			Return(.F.)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³SUB-Registros do registro IDREC                                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nLenBenefi := len(aProcDIRF[nX][2])
		For nY:=1 To nLenBenefi
			cTexto := aProcDIRF[nX][2][nY]+c_Enter

			If !GravaArqv(cTexto)
				Return(.F.)
			EndIf
		Next nY
	Next nX
Next nCntDIRF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Grava no TXT informacoes referentes aos Rendimentos Recebidos Acumuladamente - RRA³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !GpmGeraRRA()
	Return(.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Grava no TXT, o registro SCP e seus Sub-Registros - Sociedade de Conta de Participacao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aScp := {}
aScp:= F994DIRF(cAnoBase,cFilResp)
If !Empty(aScp)
	If !GpmGeraSCP()
		Return .F.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Plano Privado de Assistencia a Saude - coletivo empresarial                       ³
//³Grava no TXT, o registro PSE e seus Sub-Registros                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !GpmGeraPSE()
	Return(.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Rendimentos pagos a residentes ou domiciliados no exterior                        ³
//³Grava no TXT, o registro RPDE e seus Sub-Registros                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !GpGerResEx()
	Return(.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³INF - Informacoes Complementares                                                  ³
//³Grava no TXT, o registro INF                                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !GpmGeraINF()
	Return(.F.)
EndIf

cTexto := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Registro identificador do termino da declaracao (identificador FIMDirf)           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RegFIMDirf()
aEval(aRegFIMDirf,{|x| cTexto += x+"|" })
cTexto += c_Enter
If !GravaArqv(cTexto)
	Return(.F.)
EndIf

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GravaArqv    ºAutor  ³Alberto Deviciente	 º Data ³ 03/Jan/2011 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Grava texto no arquivo da DIRF.                                º±±
±±º      ³                                                                º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GravaArqv(cTxt)

FWrite(nArq, cTxt)

If Ferror() # 0
	Help(" ",1,"Help",,STR0019+STR(Ferror(),3),1,0) //-- "Erro de grava‡„o, codigo DOS:"
	Help(" ",1,"Help",,STR0037,1,0) //"Geração do arquivo será abortada!"
	Return(.F.)
Endif

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FSubst        ³ Autor ³ Cristina Ogura   ³ Data ³ 17/09/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao que substitui os caracteres especiais por espacos   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FSubst()                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ GPEM610                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function FSubst(cTexto)
Local aAcentos:={}
Local aAcSubst:={}
Local cImpCar := Space(01)
Local cImpLin :=""
Local cAux 	  :=""
Local cAux1	  :=""
Local nTamTxt := Len(cTexto)
Local j
Local nPos

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Para alteracao/inclusao de caracteres, utilizar a fonte TERMINAL no IDE com o tamanho³
//³ maximo possivel para visualizacao dos mesmos.                                        ³
//³ Utilizar como referencia a tabela ASCII anexa a evidencia de teste (FNC 807/2009).   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAcentos :=	{;
			Chr(199),Chr(231),Chr(196),Chr(197),Chr(224),Chr(229),Chr(225),Chr(228),Chr(170),;
			Chr(201),Chr(234),Chr(233),Chr(237),Chr(244),Chr(246),Chr(242),Chr(243),Chr(186),;
			Chr(250),Chr(097),Chr(098),Chr(099),Chr(100),Chr(101),Chr(102),Chr(103),Chr(104),;
			Chr(105),Chr(106),Chr(107),Chr(108),Chr(109),Chr(110),Chr(111),Chr(112),Chr(113),;
			Chr(114),Chr(115),Chr(116),Chr(117),Chr(118),Chr(120),Chr(122),Chr(119),Chr(121),;
			Chr(065),Chr(066),Chr(067),Chr(068),Chr(069),Chr(070),Chr(071),Chr(072),Chr(073),;
			Chr(074),Chr(075),Chr(076),Chr(077),Chr(078),Chr(079),Chr(080),Chr(081),Chr(082),;
			Chr(083),Chr(084),Chr(085),Chr(086),Chr(088),Chr(090),Chr(087),Chr(089),Chr(048),;
			Chr(049),Chr(050),Chr(051),Chr(052),Chr(053),Chr(054),Chr(055),Chr(056),Chr(057),;
			Chr(038),Chr(195),Chr(212),Chr(211),Chr(205),Chr(193),Chr(192),Chr(218),Chr(220),;
			Chr(213),Chr(245),Chr(227),Chr(252),".";
			}

aAcSubst :=	{;
			"C","c","A","A","a","a","a","a","a",;
			"E","e","e","i","o","o","o","o","o",;
			"u","a","b","c","d","e","f","g","h",;
			"i","j","k","l","m","n","o","p","q",;
			"r","s","t","u","v","x","z","w","y",;
			"A","B","C","D","E","F","G","H","I",;
			"J","K","L","M","N","O","P","Q","R",;
			"S","T","U","V","X","Z","W","Y","0",;
			"1","2","3","4","5","6","7","8","9",;
			"E","A","O","O","I","A","A","U","U",;
			"O","o","a","u"," ";
			}

For j:=1 To Len(AllTrim(cTexto))
	cImpCar	:=SubStr(cTexto,j,1)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Nao pode sair com 2 espacos em branco.    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cAux	:=Space(01)
    nPos 	:= 0
	nPos 	:= Ascan(aAcentos,cImpCar)
	If nPos > 0
		cAux := aAcSubst[nPos]
	Elseif (cAux1 == Space(1) .And. cAux == space(1)) .Or. Len(cAux1) == 0
		cAux :=	""
	EndIf
    cAux1 	:= 	cAux
	cImpCar	:=	cAux
	cImpLin	:=	cImpLin+cImpCar
Next j

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Volta o texto no tamanho original         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cImpLin := Left(cImpLin+Space(nTamTxt),nTamTxt)

Return(cImpLin)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegINFPC      ºAutor  ³Marcia Moura       º Data ³ 15/Dez/2016 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Informacoes Previdencia Compl                                  º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador INFPC                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RegINFPC(cCnpj,cNome,cCod)


	If Len(aRegINFPC) == 0 .or. Ascan( aRegINFPC,{|X|X[1] == "INFPC" .And. X[2] == cCnpj }) == 0
		aadd(aRegINFPC, {	"INFPC",; 		   						//01 - Identificador de registro
						cCnpj,;											//02 - CNPJ
				   		cNome })											//03 - Nome
	Endif

	If nPos1:= Ascan( aSubRgIDREC,{|X|X == "aRegINFPC" }) == 0
		aAdd( aSubRgIDREC, "aRegINFPC" 	) //Adiciona o array desse registro no array de controle do bloco IDREC
	Endif

Return



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegINFPA      ºAutor  ³Marcia Moura       º Data ³ 27/Dez/2016 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Informacoes Pensao alimenticia                                 º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador INFPA                                          º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RegINFPA(cCod,cCpf,cData,cNome,cRelDep)

Local cRelDepen := ""
Default cRelDep := ""

If cRelDep == "1"		//Conjuge/Companheiro
   cRelDepen := "03"
ElseIf cRelDep == "2"   //Filho(a)
   cRelDepen := "04"
ElseIf cRelDep == "3"   //Enteado(a)
   cRelDepen := "06"
ElseIf cRelDep == "4"   //Pai/Mae
   cRelDepen := "08"
ElseIf cRelDep == "5"   //Agregado/Outros
   cRelDepen := "10"
Else
	cRelDepen := ""
Endif

nPos 	:= Ascan( aRegINFPA,{|X|X[1] == cCod  })
if nPos == 0
	aadd( aRegINFPA, {cCod,"INFPA",cCPF, ALLTRIM(cData),cNome,cRelDepen} )
Endif
	// so grava uma vez
if len(aRegINFPA)== 1
	aAdd( aSubRgIDREC, "aRegINFPA" 	) //Adiciona o array desse registro no array de controle do bloco IDREC
Endif

Return



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRTPA16      ºAutor  ³Marcia Moura  e	 º Data ³ 27/Dez/2016 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Tributaveis - Deducao - Pensao Alimenticia.        º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RTPA                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RegRTPA16(cCod,nMes,nVlr)

		nPos:= Ascan( aRegRTPA,{|X|X[1] == cCod  })

		if nPos == 0 .and. nVlr > 0
			aadd (aRegRTPA,{ 	cCod,; 			    							//01 - Codigo do beneficiario
								"RTPA",;										//02 - Identificador de registro
								0,;											//03 - Janeiro
								0,;											//04 - Fevereiro
								0,;											//05 - Marco
								0,;											//06 - Abril
								0,;											//07 - Maio
								0,;											//08 - Junho
								0,;											//09 - Julho
								0,;											//10 - Agosto
								0,;											//11 - Setembro
								0,;											//12 - Outubro
								0,;											//13 - Novembro
								0,;											//14 - Dezembro
								0 })  										//15 - Decimo Terceiro



		lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

		endif

		If nVlr > 0
			nPos:= Ascan( aRegRTPA,{|X|X[1] == cCod  })
			aRegRTPA[nPos][nMes+2] += nVlr
		EndIf


Return





/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegESPA16      ºAutor  ³Marcia Moura  e	 º Data ³ 27/Dez/2016 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Tributaveis - Deducao - Pensao Alimenticia.        º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RTPA                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RegESPA16(cCod,nMes,nVlr)
	nPos:= Ascan( aRegESPA,{|X|X[1] == cCod  })

	if nPos == 0 .and. nVlr > 0
		aadd (aRegESPA,{ 	cCod,; 			    							//01 - Codigo do beneficiario
							"ESPA",;										//02 - Identificador de registro
							0,;											//03 - Janeiro
							0,;											//04 - Fevereiro
							0,;											//05 - Marco
							0,;											//06 - Abril
							0,;											//07 - Maio
							0,;											//08 - Junho
							0,;											//09 - Julho
							0,;											//10 - Agosto
							0,;											//11 - Setembro
							0,;											//12 - Outubro
							0,;											//13 - Novembro
							0,;											//14 - Dezembro
							0 })  										//15 - Decimo Terceiro



	lTemBenefi := .T. //Para indicar que tem beneficiario para gerar para o Codigo de Receita que esta sendo processado

	endif

	If nVlr > 0
		nPos:= Ascan( aRegESPA,{|X|X[1] == cCod  })
		if nPos>0
			aRegESPA[nPos][nMes+2] += nVlr
		Endif
	EndIf

Return



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRTPP16    ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Tributaveis - Deducao - Previdencia Privada.       º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RTPP                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RegRTPP16(nMes,nVlr,cCnpj,nTp)

Local cArray := ""
Local cNomeA := ""
local nPos := 0


if nTp == 1
	cArray := "aRegRTPP"
	cNomeA := "RTPP"

Elseif nTp ==2
	cArray := "aRegRTFA"
	cNomeA := "RTFA"

Elseif nTp ==3
	cArray := "aRegRTSP"
	cNomeA := "RTSP"

Elseif nTp ==4
	cArray := "aRegRTEP"
	cNomeA := "RTEP"

Elseif nTp ==5
	cArray := "aRegESPP"
	cNomeA := "ESPP"

Elseif nTp ==6
	cArray := "aRegESFA"
	cNomeA := "ESFA"

Elseif nTp ==7
	cArray := "aRegESSP"
	cNomeA := "ESSP"

Elseif nTp ==8
	cArray := "aRegESEP"
	cNomeA := "ESEP"

Endif
nPos := Ascan ( &(cArray), { |X| X[1]  == cCnpj } )

if nPos == 0 .and. nVlr > 0
	aadd(&(cArray), { cCnpj	,;                                 //01 cnpj
						cNomeA,; 			   						//02 - Identificador de registro
						0,;											//03 - Janeiro
						0,;											//04 - Fevereiro
						0,;											//05 - Marco
						0,;											//06 - Abril
						0,;											//07 - Maio
						0,;				 							//08 - Junho
						0,;											//09 - Julho
						0,;											//10 - Agosto
						0,;											//11 - Setembro
						0,;											//12 - Outubro
						0,;											//13 - Novembro
						0,;											//14 - Dezembro
						0})										//15 - Decimo Terceiro
endif

If nVlr > 0
	nPos := Ascan ( &(cArray), { |X| X[1]  == cCnpj } )
		if nPos>0
			&(cArray)[nPos][nMes+2] += nVlr
		Endif
EndIf

Return



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegRTPP16    ºAutor  ³Alberto Deviciente	 º Data ³ 27/Dez/2010 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Tributaveis - Deducao - Previdencia Privada.       º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RTPP                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RegmRTPP16(nMes,nVlr,cCnpj,nTp)

Local cArray := ""
Local cNomeA := ""
local nPos := 0


if nTp == 1
	cArray := "aRegRTPP"
	cNomeA := "RTPP"

Elseif nTp ==2
	cArray := "aRegRTFA"
	cNomeA := "RTFA"

Elseif nTp ==3
	cArray := "aRegRTSP"
	cNomeA := "RTSP"

Elseif nTp ==4
	cArray := "aRegRTEP"
	cNomeA := "RTEP"

Elseif nTp ==5
	cArray := "aRegESPP"
	cNomeA := "ESPP"

Elseif nTp ==6
	cArray := "aRegESFA"
	cNomeA := "ESFA"

Elseif nTp ==7
	cArray := "aRegESSP"
	cNomeA := "ESSP"

Elseif nTp ==8
	cArray := "aRegESEP"
	cNomeA := "ESEP"

Endif
if len(&(cArray)) == 0 .and. nVlr > 0
	aadd(&(cArray) := { cCnpj	,;                                 //01 cnpj
						cNomeA,; 			   						//02 - Identificador de registro
						0,;											//03 - Janeiro
						0,;											//04 - Fevereiro
						0,;											//05 - Marco
						0,;											//06 - Abril
						0,;											//07 - Maio
						0,;											//08 - Junho
						0,;											//09 - Julho
						0,;											//10 - Agosto
						0,;											//11 - Setembro
						0,;											//12 - Outubro
						0,;											//13 - Novembro
						0,;											//14 - Dezembro
						0 })										//15 - Decimo Terceiro
endif

If nVlr > 0
	nPos := Ascan ( &(cArray) , { |X| X == cCnpj } )
		if nPos>0
			&(cArray)[nMes+2] += nVlr
		Endif
EndIf

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GravPen      ºAutor  ³Marcia Moura  e	 º Data ³ 27/Dez/2016 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Rendimentos Tributaveis - Deducao - Pensao Alimenticia.        º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador RTPA                                           º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GravPen(aRegBenefi)

Local nTamAux	:= 0
Local nX 		:= 0
Local nP 		:= 0
Local nV 		:= 0
Local nY 		:= 0
Local nPosRTPA := 0
Local nPosESPA := 0
Local cLinhaReg := ""
Local aAuxReg   := {}
Local cVlr		:= ""
Local cTexto:= ""

if len(aRegRTPA)> 0 .or. len(aRegESPA)>0
	aRegINFPA := aSort( aRegINFPA ,,, { |x,y| x[3]+x[4]+x[5] < y[3]+y[4]+y[5] } )
	If (Ascan(aRegRTPA,{|x| x[1] == "00" }) > 0) .OR. (Ascan(aRegESPA,{|x| x[1] == "00" }) > 0) //nao possui dados para o INFPA
		If Len(aRegRTPA) > 1
			//unir os lancamentos no 00
			nPosRTPA := Ascan(aRegRTPA,{|x| x[1] == "00" })
			If nPosRTPA == 0 //caso nao tenha '00'
				aAdd(aRegRTPA, {"00","ESPA",0,0,0,0,0,0,0,0,0,0,0,0,0})
				nPosRTPA := Len(aRegRTPA)
			EndIf
			For nP := 1 to Len(aRegRTPA)
				If nP <> nPosRTPA
					aRegRTPA[nPosRTPA,03] += aRegRTPA[nP,3]
					aRegRTPA[nPosRTPA,04] += aRegRTPA[nP,4]
					aRegRTPA[nPosRTPA,05] += aRegRTPA[nP,5]
					aRegRTPA[nPosRTPA,06] += aRegRTPA[nP,6]
					aRegRTPA[nPosRTPA,07] += aRegRTPA[nP,7]
					aRegRTPA[nPosRTPA,08] += aRegRTPA[nP,8]
					aRegRTPA[nPosRTPA,09] += aRegRTPA[nP,9]
					aRegRTPA[nPosRTPA,10] += aRegRTPA[nP,10]
					aRegRTPA[nPosRTPA,11] += aRegRTPA[nP,11]
					aRegRTPA[nPosRTPA,12] += aRegRTPA[nP,12]
					aRegRTPA[nPosRTPA,13] += aRegRTPA[nP,13]
					aRegRTPA[nPosRTPA,14] += aRegRTPA[nP,14]
					aRegRTPA[nPosRTPA,15] += aRegRTPA[nP,15]
				EndIf
			Next nP
		Else
			nPosRTPA := 1
		EndIf

		nV := 1
		If Len(aRegESPA) > 0
			If Len(aRegESPA) > 1
				//unir os lancamentos no 00
				nPosESPA := Ascan(aRegESPA,{|x| x[1] == "00" })
				If nPosESPA == 0 //caso nao tenha '00'
					aAdd(aRegESPA, {"00","ESPA",0,0,0,0,0,0,0,0,0,0,0,0,0})
					nPosESPA := Len(aRegESPA)
				EndIf
				For nP := 1 to Len(aRegESPA)
					If nP <> nPosESPA
						aRegESPA[nPosESPA,03] += aRegESPA[nP,3]
						aRegESPA[nPosESPA,04] += aRegESPA[nP,4]
						aRegESPA[nPosESPA,05] += aRegESPA[nP,5]
						aRegESPA[nPosESPA,06] += aRegESPA[nP,6]
						aRegESPA[nPosESPA,07] += aRegESPA[nP,7]
						aRegESPA[nPosESPA,08] += aRegESPA[nP,8]
						aRegESPA[nPosESPA,09] += aRegESPA[nP,9]
						aRegESPA[nPosESPA,10] += aRegESPA[nP,10]
						aRegESPA[nPosESPA,11] += aRegESPA[nP,11]
						aRegESPA[nPosESPA,12] += aRegESPA[nP,12]
						aRegESPA[nPosESPA,13] += aRegESPA[nP,13]
						aRegESPA[nPosESPA,14] += aRegESPA[nP,14]
						aRegESPA[nPosESPA,15] += aRegESPA[nP,15]
					EndIf
				Next nPos
			Else
				nPosESPA := 1
			EndIf
			nV := 2
		EndIf

		For nP:=1 to nV //grava o infpa
			cLinhaReg := ""
			if nP == 1
				aAuxReg := If(!Empty(aRegRTPA), aRegRTPA[nPosRTPA],{})
			Else
				aAuxReg := aRegESPA[nPosESPA]
			Endif
			If Len(aAuxReg) == 15 .AND. (cAliasSRL)->RL_CODRET <> "0561" .AND.;
				(ValType(aAuxReg[15]) != "C" .AND. aAuxReg[15] == 0)
				aAuxReg[15] := ""
			EndIf

			For nY:=2 to Len(aAuxReg) //grava o rtpa
				If ValType(aAuxReg[nY]) == "N"
					If cSitDecl == "2" .And. nY < nTamAux .And. SubStr(cDtEvento,1,6) <  cAnoBase + StrZero((nY - 1),2)
						cVlr := ""
					Else
						cVlr := AllTrim(Transform(aAuxReg[nY], "@E 9999999999999.99"))
						cVlr := SubStr(cVlr,1,len(cVlr)-3)+Right(cVlr,2)
  					Endif

					If Len(cVlr) == 14
						cVlr := SubStr(cVlr,2,len(cVlr))
					ElseIf Len(cVlr) == 15
						cVlr := SubStr(cVlr,3,len(cVlr))
					EndIf

					If "-" $ cVlr
						cVlr := "000"
					Endif
					cLinhaReg += cVlr+"|"
				Else
					If "-" $ cVlr
						cVlr := "000"
					Endif
						cLinhaReg += aAuxReg[nY]+"|"
				Endif
			Next nY
			If Len(cLinhaREg) > 0
				aAdd( aRegBenefi, cLinhaReg )
			EndIf
		Next nV
	Else
		//Concatena os valores de todos os arrays de registros e depois limpa cada array
		for nX:=1 to len(aRegINFPA)
				cTexto := "INFPA|"
				cTexto += alltrim(aRegINFPA[nx,3])+"|"
				cTexto += aRegINFPA[nx,4]+"|"
				cTexto += substr(aRegINFPA[nx,5],1,60)+"|"
				cTexto += aRegINFPA[nx,6]+"|"
				cLinhaReg := cTexto
				aAdd( aRegBenefi, cLinhaReg )

				nV := 1
				if nPos1:= Ascan( aRegESPA,{|X|X[1] == aRegINFPA[nx,1]  })>0
					nV := 2
				Endif

				for nP:=1 to nV
					cLinhaReg := ""
					if nP == 1
						nPos:= Ascan( aRegRTPA,{|X|X[1] == aRegINFPA[nx,1]  })
						if nPos>0
							aAuxReg := aRegRTPA[npos]
						Endif
					Else
						nPos:= Ascan( aRegESPA,{|X|X[1] == aRegINFPA[nx,1]  })
						if nPos>0
							aAuxReg := aRegESPA[npos]
						endif
					Endif
					If Len(aAuxReg) == 15 .AND. (cAliasSRL)->RL_CODRET <> "0561" .AND.;
						(ValType(aAuxReg[15]) != "C" .AND. aAuxReg[15] == 0)
						aAuxReg[15] := ""
					EndIf

					for nY:=2 to len(aAuxReg)
						if ValType(aAuxReg[nY]) == "N"
							If cSitDecl == "2" .And. nY < nTamAux .And. SubStr(cDtEvento,1,6) <  cAnoBase + StrZero((nY - 1),2)
								cVlr := ""
							Else
								cVlr := AllTrim(Transform(aAuxReg[nY], "@E 9999999999999.99"))
								cVlr := SubStr(cVlr,1,len(cVlr)-3)+Right(cVlr,2)
		  					Endif
						//DIRF 2012 utiliza o campo com 13 posicoes
							If cAnoBase >= "2011"
								If Len(cVlr) == 14
									cVlr := SubStr(cVlr,2,len(cVlr))
								ElseIf Len(cVlr) == 15
									cVlr := SubStr(cVlr,3,len(cVlr))
								EndIf
							EndIf
							If "-" $ cVlr
								cVlr := "000"
							Endif
							cLinhaReg += cVlr+"|"
						else
							If "-" $ cVlr
								cVlr := "000"
							Endif
								cLinhaReg += aAuxReg[nY]+"|"
						endif
					next nY
					if len(cLinhaREg) > 0
						aAdd( aRegBenefi, cLinhaReg )
					endif
				Next nV
		next nX
	EndIf
Endif
Return



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GravPri      ºAutor  ³Marcia Moura  e	 º Data ³ 27/Dez/2016 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Grava Previdencia Privada                                      º±±
±±º      ³                                                                º±±
±±º      ³ - Identificador INFPC e outros                                 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GravPri(aRegBenefi)

Local nTamAux	:= 0
Local nX 		:= 0
Local nP 		:= 0
Local nV 		:= 0
Local nY 		:= 0
Local n1		:= 0
Local nPos00	:= 0
Local cLinhaReg := ""
Local aAuxReg   := {}
Local cVlr		:= ""
Local cTexto:= ""
Local aRegs := {}
Local cArray := ""

if len(aRegINFPC)>0
	aRegINFPC:= aSort( aRegINFPC ,,, { |x,y| x[2] < y[2] } )

	aRegs := {"aRegRTPP","aRegRTFA","aRegRTSP","aRegRTEP","aRegESPP","aRegESFA","aRegESSP","aRegESEP"}
	//nao possui dados para o INFPC
	If (Ascan(aRegRTPP,{|x| x[1] == "00" }) > 0) .OR. (Ascan(aRegRTFA,{|x| x[1] == "00" }) > 0) .OR. (Ascan(aRegRTSP,{|x| x[1] == "00" }) > 0) .OR. (Ascan(aRegRTEP,{|x| x[1] == "00" }) > 0);
		.OR. (Ascan(aRegESPP,{|x| x[1] == "00" }) > 0) .OR. (Ascan(aRegESFA,{|x| x[1] == "00" }) > 0) .OR. (Ascan(aRegESSP,{|x| x[1] == "00" }) > 0) .OR. (Ascan(aRegESEP,{|x| x[1] == "00" }) > 0)

		For n1 := 1 to 8
			cArray := aRegs[n1]
			if len(&(cArray)) > 0

				If Len(&(cArray)) > 1
					//unir os lancamentos
					nPos00 := Ascan(&(cArray),{|x| x[1] == "00" })
					If nPos00 == 0 //caso nao tenha '00'
						aAdd(&(cArray), {"00",Substr(cArray,5,8),0,0,0,0,0,0,0,0,0,0,0,0,0})
						nPos00 := Len(&(cArray))
					EndIf
					For nP := 1 to Len (&(cArray))
						If nP <> nPos00
							&(cArray)[nPos00,03] += &(cArray)[nP,3]
							&(cArray)[nPos00,04] += &(cArray)[nP,4]
							&(cArray)[nPos00,05] += &(cArray)[nP,5]
							&(cArray)[nPos00,06] += &(cArray)[nP,6]
							&(cArray)[nPos00,07] += &(cArray)[nP,7]
							&(cArray)[nPos00,08] += &(cArray)[nP,8]
							&(cArray)[nPos00,09] += &(cArray)[nP,9]
							&(cArray)[nPos00,10] += &(cArray)[nP,10]
							&(cArray)[nPos00,11] += &(cArray)[nP,11]
							&(cArray)[nPos00,12] += &(cArray)[nP,12]
							&(cArray)[nPos00,13] += &(cArray)[nP,13]
							&(cArray)[nPos00,14] += &(cArray)[nP,14]
							&(cArray)[nPos00,15] += &(cArray)[nP,15]
						EndIf
					Next nP
				Else
					nPos00 := 1
				EndIf

				cLinhaReg := ""

				If (cAliasSRL)->RL_CODRET <> "0561" .AND. valType(&(cArray)[1,15]) != "C" .AND. &(cArray)[1,15] == 0
					&(cArray)[1,15] := ""
				EndIf

				for nY:=2 to 15
					if ValType(&(cArray)[1,nY]) == "N"
						If cSitDecl == "2" .And. nY < nTamAux .And. SubStr(cDtEvento,1,6) <  cAnoBase + StrZero((nY - 1),2)
							cVlr := ""
						Else
							cVlr := AllTrim(Transform(&(cArray)[1,nY], "@E 9999999999999.99"))
							cVlr := SubStr(cVlr,1,len(cVlr)-3)+Right(cVlr,2)
	  					Endif

						If Len(cVlr) == 14
							cVlr := SubStr(cVlr,2,len(cVlr))
						ElseIf Len(cVlr) == 15
							cVlr := SubStr(cVlr,3,len(cVlr))
						EndIf

						If "-" $ cVlr
							cVlr := "000"
						Endif
						cLinhaReg += cVlr+"|"
					else
						If "-" $ cVlr
							cVlr := "000"
						Endif
							cLinhaReg += &(cArray)[1,nY]+"|"
					endif
				next nY

				aAdd( aRegBenefi, cLinhaReg )
			Endif
		Next n1
	Else
	//Concatena os valores de todos os arrays de registros e depois limpa cada array
		for nX:=1 to len(aRegINFPC)
			cTexto := aRegINFPc[nx,1]+"|"
			cTexto += aRegINFPC[nx,2]+"|"
			cTexto += aRegINFPC[nx,3]+"|"

			cLinhaReg := cTexto
			aAdd( aRegBenefi, cLinhaReg )

			for n1 := 1 to 8
				cArray := aRegs[n1]
				if len(&(cArray))>0
					nPos1:= Ascan( &(cArray),{|X|X[1] == aRegINFPC[nx,2]  })
					if nPos1>0 //
						cLinhaReg := ""

						If (cAliasSRL)->RL_CODRET <> "0561" .AND. valType(&(cArray)[nPos1,15]) != "C" .AND. &(cArray)[nPos1,15] == 0
							&(cArray)[nPos1,15] := ""
						EndIf

						for nY:=2 to 15
							if ValType(&(cArray)[nPos1,nY]) == "N"
								If cSitDecl == "2" .And. nY < nTamAux .And. SubStr(cDtEvento,1,6) <  cAnoBase + StrZero((nY - 1),2)
									cVlr := ""
								Else
									cVlr := AllTrim(Transform(&(cArray)[nPos1,nY], "@E 9999999999999.99"))
									cVlr := SubStr(cVlr,1,len(cVlr)-3)+Right(cVlr,2)
			  					Endif
							//DIRF 2012 utiliza o campo com 13 posicoes
								If cAnoBase >= "2011"
									If Len(cVlr) == 14
										cVlr := SubStr(cVlr,2,len(cVlr))
									ElseIf Len(cVlr) == 15
										cVlr := SubStr(cVlr,3,len(cVlr))
									EndIf
								EndIf
								If "-" $ cVlr
									cVlr := "000"
								Endif
								cLinhaReg += cVlr+"|"
							else
								If "-" $ cVlr
									cVlr := "000"
								Endif
									cLinhaReg += &(cArray)[nPos1,nY]+"|"
							endif
						next nY

						aAdd( aRegBenefi, cLinhaReg )
					Endif
				Endif
			Next n1
		Next nX
	EndIf
Endif
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ GpIncRegRe   ºAutor  ³Marcia Moura      	 º Data ³ 03/jan/2017 º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Inclui Registros de reembolso no arquivo temporario.           º±±
±±º      ³ referente aos Identificadores: RTPSE, RDTPSE                   º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GpIncRegRe(cTipoAsSau,cTipoBenef,cCodDep,cTipDep)
Local cRelDepend := ""
Local nPosGP   	 := 0
Local cCNPJPlaSa := AllTrim((cAliasRCS)->RCS_CPFCGC)
Local cCPFBenTit := ""
Local cCPFDep    := ""
Local dNascDep   := ""
Local cNomeDep   := ""
Local nPos		 := 0
Local cCPFPrest := ""

cCPFBenTit := alltrim((cAliasRCS)->RCS_CPFBEN)
cCPFPrest  := alltrim((cAliasRCS)->RCS_INMED)  //cnpj ou cpf do medico

if cTipoBenef == "TIT" // Titular (Funcionario)

		//Grava o arquivo referente ao registro (TPSE - Informacao de Titular do Plano Privado de Assistencia a Saude - Coletivo Empresarial)
		if !T_RTPSE->( dbSeek(cCNPJPlaSa+cCPFBenTit+cCPFPrest) )
			RecLock("T_RTPSE",.T.)
			T_RTPSE->CNPJOPER:= cCNPJPlaSa			//CNPJ da operadora de plano de saude (Apenas para fazer relacionamento com o registro "OPSE")
			T_RTPSE->CPFTIT	:= cCPFBenTit			//CPF do titular
			if len(alltrim(cCPFPrest)) == 11
				T_RTPSE->TPMED	:= "1"   		//cpf/cnpj prestador
			else
				T_RTPSE->TPMED	:= "2"   		//cpf/cnpj prestador
			endif

			T_RTPSE->CNPJMED	:= cCPFPrest   		//cpf/cnpj prestador
			T_RTPSE->NOMEMED	:= (cAliasRCS)->RCS_NOMED  		//nome do prestador
			T_RTPSE->VLRANO	:= (cAliasRCS)->RCS_VALOR		//Valor pago no ano
			T_RTPSE->( MsUnlock() )
		else
			RecLock("T_RTPSE",.F.)
			T_RTPSE->VLRANO	:= T_RTPSE->VLRANO + (cAliasRCS)->RCS_VALOR //Soma Valor de outro plano (No caso qdo. tem Ass.Medica e Odontologica com o mesmo CNPJ)
			T_RTPSE->( MsUnlock() )
		endif


Elseif cTipoBenef == "DEP" // Dependente

	 		//Grava o arquivo referente ao registro (DTPSE - Informacao de Dependente do Plano Privado de Assistencia a Saude - Coletivo Empresarial)
 	if !T_RDTPSE->( dbSeek(cCNPJPlaSa+cCPFBenTit+cCodDep+cCPFPrest) )
		RecLock("T_RDTPSE",.T.)
		T_RDTPSE->CNPJOPER	:= cCNPJPlaSa				//CNPJ da operadora de plano de saude (Apenas para fazer relacionamento com os registros "OPSE" e "DTPSE")
		T_RDTPSE->CPFTIT		:= alltrim((cAliasRCS)->RCS_CPFBEN)	//CPF do Titular (Apenas para relacionar o Dependente com o Titular)
		T_RDTPSE->COD			:= cCodDep		//Codigo dependente
			if len(alltrim(cCPFPrest)) == 11
				T_RDTPSE->TPMED	:= "1"   		//cpf/cnpj prestador
			else
				T_RDTPSE->TPMED	:= "2"   		//cpf/cnpj prestador
			endif

		T_RDTPSE->CNPJMED	:= cCPFPrest   		//cpf/cnpj prestador
		T_RDTPSE->NOMEMED	:= (cAliasRCS)->RCS_NOMED  		//nome do prestador
		T_RDTPSE->VLRANO	:= (cAliasRCS)->RCS_VALOR		//Valor pago no ano
		T_RDTPSE->( MsUnlock() )
	else
		RecLock("T_RDTPSE",.F.)
		T_RDTPSE->VLRANO		:= T_RDTPSE->VLRANO + (cAliasRCS)->RCS_VALOR  //Soma Valor de outro plano (No caso qdo. tem Ass.Medica e Odontologica com o mesmo CNPJ)
		T_RDTPSE->( MsUnlock() )
	Endif
endif

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao³ RegINFPrev  ºAutor  ³Marcos Coutinho	 º Data ³ 03/Fev/2017     º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ Inclui Informacoes Complementares de Previdencia Privada       º±±
±±º      ³  no arquivo temporario. Referente ao Identificador: INF        º±±
±±ÌÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso   ³ SIGAGPE                                                        º±±
±±ÈÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RegINFPrev(cMatFunc, cCPFCGCFun, cAnoBase)
Local cChaveINF := ""
Local cInformac := ""
Local cCPFCGCCom:= ""
Local cTexto1	  := ""
Local cTexto2	  := ""
Local aCaracter := {}
Local nCol := 0
LOCAL aArea
Local aDados := {}
Local nX := 0

//------------------------------
//| Guardando o ambiente atual
//------------------------------
aArea := GetArea()

//---------------------------------
//| Caracteres nao aceitos no DIRF
//---------------------------------
aCaracter	:= {":","/",".","\","-",",","(",")"}

//------------------------------------------------
//| Looping na tabela SM9 posicionado no registro
//------------------------------------------------
DbSelectArea("SM9")
If( SM9-> (DbSeek((cAliasSRL)->RL_FILIAL + cMatFunc + (cAliasSRL)->RL_CODRET + cAnoBase )))
	While( SM9->(!Eof()) .AND. ( SM9->M9_MAT == cMatFunc ))
		// CNPJ
		cCPFCGCCom := AllTrim(SM9->M9_CNPJ)

		// cChaveInf
		If !Empty(SM9->M9_TIPOREN)
			cChaveINF := AllTrim(SM9->M9_TIPOREN + SM9->M9_NOMEEMP)
		Else
			cChaveINF :=  AllTrim(SM9->M9_CNPJ + SM9->M9_CODRET + SM9->M9_TIPOREN)
		EndIf

		// Nome do Prestador
		cTexto1 := SM9->M9_NOMEEMP
		For nCol:=1 to Len(aCaracter)
			cTexto1 := STRTRAN(cTexto1,aCaracter[nCol],"")
		Next

		// cInformac
		cInformac := AllTrim(cTexto1)+ If(AllTrim(SM9->M9_TIPOREN) == "R", Space(2), space(03) + cCPFCGCCom )

		// Chave Mestre
		cChaveMestre := cCPFCGCFun+cChaveINF+cCPFCGCCom

		//------------------------------------
		//| Alimentando o array de dados base
		//| Se array de dados está vazio, insere o 1o registro
		//-------------------------------------------------------
		If(Len(aDados) == 0)
			aAdd(aDados, { cChaveMestre, cCPFCGCFun, cChaveINF, SM9->M9_VALOR, cInformac, cCPFCGCCom, AllTrim(cTexto1)})
		Else
			//Se array nao esta vazio, verifica se chave ja existe:
			//EXISTE     = incrementa somente o valor
			//NAO EXISTE = insere registro novo
			nPos := aScan( aDados, { |x| x[1] == AllTrim(cChaveMestre) } )
			if(nPos > 0)
				aDados[nPos,4] += SM9->M9_VALOR
			else
				aAdd(aDados, { cChaveMestre,cCPFCGCFun,cChaveINF,SM9->M9_VALOR,cInformac,cCPFCGCCom, AllTrim(SM9->M9_NOMEEMP) })
			Endif
		EndIf

		//---------------------------
		//| Proximo registro da prev
		//---------------------------
		SM9->(dbSkip())
	EndDo

	//----------------------------------------
	//| Realiza a insercao dos dados do array
	//| dentro da tabela temporária
	//----------------------------------------
	For nX :=1 to Len(aDados)
		RecLock("T_INF", .T.)
		T_INF->CPF 	 	:= aDados[nX,2]
		T_INF->CHAVE 		:= aDados[nX,3]
		T_INF->VALOR 		:= aDados[nX,4]
		T_INF->INFORMAC 	:= aDados[nX,5]
		T_INF->CPFCGC		:= aDados[nX,6]
		T_INF->OUTROS		:= FSubst(SM9->M9_NOMEEMP)
		T_INF->(MsUnlock())
	Next
EndIf

//------------------------------
//| Restaurando o ambiente atual
//------------------------------
RestArea(aArea)

Return

/*/{Protheus.doc} fProcVPEIM
Processa query e gera registros do bloco VPEIM
@author jonatas.alves
@since 12/01/18
@version 1.0
/*/
Static Function fProcVPEIM( aRegEntid, cCNPJDecPJ, cCgcAnt )

Local aArea := GetArea()

Local cFrom		:= ""
Local cWhere	:= ""
Local cOrder	:= ""
Local cQrySRL	:= ""
Local cAliasTmp	:= ""
Local cNameDB	:= Upper( TcGetDb() )
Local cFilBenef	:= ""
Local cFilSR4	:= ""
Local cFontEnt	:= ""
Local cQrySR4	:= ""
Local cQrySRL	:= ""
Local cTipoRen	:= ""

Local nRegSRL	:= 0
Local nCntStru	:= 0
Local nMes		:= 0
Local nValor	:= 0

//Seleciona registros para rendimentos de entidades imunes/isentas e declarante P.J.
cFrom	:= "FROM " + RetSqlName("SRL") + " "

cWhere	:= "WHERE EXISTS ( SELECT DISTINCT R4_FILIAL, R4_MAT, R4_CODRET FROM " + RetSqlName("SR4") + " WHERE RL_FILIAL = R4_FILIAL AND RL_MAT =  R4_MAT AND RL_CODRET = R4_CODRET AND R4_ANO = '" + cAnoBase + "' AND R4_TIPOREN IN ( 'I2', 'I3' ) AND R4_VALOR > 0 AND " + RetSqlName("SR4") +  ".D_E_L_E_T_ = ' ' ) "
cWhere	+= "AND 	RL_CGCFONT = '" + cCgcAnt + "' "
cWhere	+= "AND " + RetSqlName("SRL") + ".D_E_L_E_T_ = ' ' "

//Executa query p/ filtro dos registros que serao processados
cOrder	:= "ORDER BY RL_CGCFONT,RL_CPFCGC,RL_CODRET,RL_TIPOFJ,RL_FILIAL,RL_MAT,RL_PAIS,RL_NIFEX"

cQrySRL := "SELECT " + cCposSRL + cFrom + cWhere + cOrder

cQrySRL	:= ChangeQuery( cQrySRL )
cSRLVPEIM := GetNextAlias()
dbUseArea( .T., "TOPCONN", TcGenQry( , , cQrySRL ), cSRLVPEIM )

For nCntStru := 1 To Len( aStruSRL )
	If ( aStruSRL[ nCntStru ][ 2 ] != "C" )
		TcSetField( cSRLVPEIM, aStruSRL[ nCntStru ][ 1 ], aStruSRL[ nCntStru ][ 2 ], aStruSRL[ nCntStru ][ 3 ], aStruSRL[ nCntStru ][ 4 ] )
	EndIf
Next

dbSelectArea( cSRLVPEIM )

While !( cSRLVPEIM )->( Eof() )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera Registro VPEIM – Valores pagos às entidades imunes ou isentas – IN RFB 1.234/2012³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RegVPEIM()

	cFilBenef	:= ( cSRLVPEIM )->( RL_CGCFONT + RL_CPFCGC + RL_CODRET )
	cFontEnt	:= ( cSRLVPEIM )->( RL_CGCFONT + RL_CPFCGC )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Laco para o buscar valores de cada entidade ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	While ( cSRLVPEIM )->( !Eof() ) .And. ( cSRLVPEIM )->( RL_CGCFONT + RL_CPFCGC + RL_CODRET ) == cFilBenef

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Busca Informacoes do beneficiario na tabela SR4  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cFilSR4 := ( cSRLVPEIM )->( RL_FILIAL + RL_MAT + RL_CPFCGC + RL_CODRET + cAnoBase )

		//Executa query p/ filtro dos registros que serao processados
		cFrom	:= "FROM " + RetSqlName("SR4") + " "

		cWhere	:= "WHERE 		R4_FILIAL	= '" + ( cSRLVPEIM )->RL_FILIAL + "' "
		cWhere	+= "		AND R4_MAT 		= '" + ( cSRLVPEIM )->RL_MAT + "' "
		cWhere	+= " 		AND R4_CPFCGC	= '" + ( cSRLVPEIM )->RL_CPFCGC + "' "
		cWhere	+= "		AND R4_CODRET	= '" + ( cSRLVPEIM )->RL_CODRET + "' "
		cWhere	+= "		AND R4_ANO 		= '" + cAnoBase + "' "
		cWhere	+= "		AND R4_PAIS 	= '" + ( cSRLVPEIM )->RL_PAIS + "' "
		cWhere	+= "		AND R4_NIFEX 	= '" + ( cSRLVPEIM )->RL_NIFEX + "' "
		cWhere	+= 	" 		AND R4_TIPOREN IN ( 'I2', 'I3' ) "

		cWhere	+= "AND " + RetSqlName("SR4") + ".D_E_L_E_T_ = ' ' "

		cOrder	:= "ORDER BY R4_FILIAL, R4_MAT, R4_CPFCGC, R4_CODRET, R4_ANO, R4_MES, R4_PAIS, R4_NIFEX "

		cQrySR4 	:= "SELECT " + cCposSR4 + cFrom + cWhere + cOrder

		cQrySR4	:= ChangeQuery(cQrySR4)
		cSR4VPEIM := GetNextAlias()
		dbUseArea(.T., "TOPCONN", TcGenQry(,,cQrySR4), cSR4VPEIM)

	   	For nCntStru := 1 To Len( aStruSR4 )
			If ( aStruSR4[ nCntStru ][ 2 ] <> "C" )
				TcSetField( cSR4VPEIM, aStruSR4[ nCntStru ][ 1 ], aStruSR4[ nCntStru ][ 2 ], aStruSR4[ nCntStru ][ 3 ], aStruSR4[ nCntStru ][ 4 ] )
			EndIf
		Next nCntStru

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Percorre todos os meses do Ano Base                                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		While ( cSR4VPEIM )->( !Eof() ) .And. cFilSR4 == ( cSRLVPEIM )->( RL_FILIAL + RL_MAT + RL_CPFCGC + RL_CODRET + cAnoBase )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Consiste Controle de Acesso                                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !( ( cSR4VPEIM )->R4_FILIAL $ cValidFil ) .Or. !Eval( cAcessaSR4 )
				( cSR4VPEIM )->( dbSkip() )
				Loop
			EndIf

		    nMes 		:= Val( ( cSR4VPEIM )->R4_MES )
		    cTipoRen 	:= AllTrim( ( cSR4VPEIM )->R4_TIPOREN )
		    nValor      := NoRound( ( cSR4VPEIM )->R4_VALOR, 2 )

			If cTipoRen == "I2"
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gera Registro RIMUM– Rendimentos Imunes – art. 4º, inciso III³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				RegRIMUM( nMes, nValor )
			ElseIf cTipoRen == "I3"
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gera Registro RISEN– Rendimentos Isentos – art. 4º, inciso IV³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				RegRISEN( nMes, nValor )
			EndIf

			( cSR4VPEIM )->( dbSkip() )
		End

		( cSRLVPEIM )->( dbSkip() )
	End

	If ( cSRLVPEIM )->( RL_CGCFONT + RL_CPFCGC ) # cFontEnt
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Armazena valores no array auxiliar para reiniciar arrays dos registros do Beneficiario  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SalvaReg( @aRegEntid, .T., aSubRgVPEIM )

		If lTemEntid .And. Len(aRegEntid) > 0
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Armazena o registro de Entidades (VPEIM) e seus SUB-Registros ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aAdd( aRegRendEnt, {aRegVPEIM, aRegEntid} )
		EndIf

		aSubRgVPEIM	:= {}
		aRegVPEIM 	:= {} //Limpa array para iniciar o laco com outro Codigo de Receita
		aRegEntid 	:= {} //Limpa array de beneficiarios para carregar beneficiarios de outro Codigo de Receita
	EndIf
End

RestArea( aArea )

Return

/*/{Protheus.doc} fCarArray
Elimina macro execução que é demasiadamente lenta
@author leandro.drumond
@since 24/01/18
@version 1.0
/*/
Static Function fCarArray(cArray, lDeleta)

Local aRet := {}

Do Case
	Case cArray == "aRegRIMUM"
		If lDeleta
			aRegRIMUM := {}
		Else
			aRet := aRegRIMUM
		EndIf
	Case cArray == "aRegRISEN"
		If lDeleta
			aRegRISEN := {}
		Else
			aRet := aRegRISEN
		EndIf
	Case cArray == "aRegBPFDEC"
		If lDeleta
			aRegBPFDEC := {}
		Else
			aRet := aRegBPFDEC
		EndIf
	Case cArray == "aRegBPJDEC"
		If lDeleta
			aRegBPJDEC := {}
		Else
			aRet := aRegBPJDEC
		EndIf
	Case cArray == "aRegRTRT"
		If lDeleta
			aRegRTRT := {}
		Else
			aRet := aRegRTRT
		EndIf
	Case cArray == "aRegRTPO"
		If lDeleta
			aRegRTPO := {}
		Else
			aRet := aRegRTPO
		EndIf
	Case cArray == "aRegRTPP"
		If lDeleta
			aRegRTPP := {}
		Else
			aRet := aRegRTPP
		EndIf
	Case cArray == "aRegRTDP"
		If lDeleta
			aRegRTDP := {}
		Else
			aRet := aRegRTDP
		EndIf
	Case cArray == "aRegRTPA"
		If lDeleta
			aRegRTPA := {}
		Else
			aRet := aRegRTPA
		EndIf
	Case cArray == "aRegRTIRF"
		If lDeleta
			aRegRTIRF := {}
		Else
			aRet := aRegRTIRF
		EndIf
	Case cArray == "aRegCJAC"
		If lDeleta
			aRegCJAC := {}
		Else
			aRet := aRegCJAC
		EndIf
	Case cArray == "aRegCJAA"
		If lDeleta
			aRegCJAA := {}
		Else
			aRet := aRegCJAA
		EndIf
	Case cArray == "aRegESRT"
		If lDeleta
			aRegESRT := {}
		Else
			aRet := aRegESRT
		EndIf
	Case cArray == "aRegESPO"
		If lDeleta
			aRegESPO := {}
		Else
			aRet := aRegESPO
		EndIf
	Case cArray == "aRegESPP"
		If lDeleta
			aRegESPP := {}
		Else
			aRet := aRegESPP
		EndIf
	Case cArray == "aRegESDP"
		If lDeleta
			aRegESDP := {}
		Else
			aRet := aRegESDP
		EndIf
	Case cArray == "aRegESPA"
		If lDeleta
			aRegESPA := {}
		Else
			aRet := aRegESPA
		EndIf
	Case cArray == "aRegESIR"
		If lDeleta
			aRegESIR := {}
		Else
			aRet := aRegESIR
		EndIf
	Case cArray == "aRegESDJ"
		If lDeleta
			aRegESDJ := {}
		Else
			aRet := aRegESDJ
		EndIf
	Case cArray == "aRegRIDAC"
		If lDeleta
			aRegRIDAC := {}
		Else
			aRet := aRegRIDAC
		EndIf
	Case cArray == "aRegRIIRP"
		If lDeleta
			aRegRIIRP := {}
		Else
			aRet := aRegRIIRP
		EndIf
	Case cArray == "aRegRIAP"
		If lDeleta
			aRegRIAP := {}
		Else
			aRet := aRegRIAP
		EndIf
	Case cArray == "aRegRIMOG"
		If lDeleta
			aRegRIMOG := {}
		Else
			aRet := aRegRIMOG
		EndIf
	Case cArray == "aRegRIP65"
		If lDeleta
			aRegRIP65 := {}
		Else
			aRet := aRegRIP65
		EndIf
	Case cArray == "aRegRIL96"
		If lDeleta
			aRegRIL96 := {}
		Else
			aRet := aRegRIL96
		EndIf
	Case cArray == "aRegRIPTS"
		If lDeleta
			aRegRIPTS := {}
		Else
			aRet := aRegRIPTS
		EndIf
	Case cArray == "aRegRIO"
		If lDeleta
			aRegRIO := {}
		Else
			aRet := aRegRIO
		EndIf
	Case cArray == "aRegINFPC"
		If lDeleta
			aRegINFPC := {}
		Else
			aRet := aRegINFPC
		EndIf
	Case cArray == "aRegINFPA"
		If lDeleta
			aRegINFPA := {}
		Else
			aRet := aRegINFPA
		EndIf
	OtherWise
		If lDeleta
			&(cArray) := {}
		Else
			aRet := &(cArray)
		EndIf
EndCase

Return aRet
