#INCLUDE "APDSNDAV.CH"
#INCLUDE "AP5MAIL.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "TBICODE.CH"
#INCLUDE "TBICONN.CH"
#INCLUDE "SIGAWF.CH"
#INCLUDE "PROTHEUS.CH"

#DEFINE NEWTASKAPD	"SIGAAPD/APDSNDAV"

#DEFINE ADD_PATH_HTML				"!PATH_HTML!"
#DEFINE ADD_COD_ID					"!COD_ID!"
#DEFINE ADD_TITULO_HTML 			"!TITULO_HTML!"
#DEFINE ADD_DATA_DO_ENVIO			"!DATA_DO_ENVIO!"
#DEFINE ADD_DT_LIM_RSP				"!DT_LIM_RSP!"
#DEFINE ADD_COD_EMPRESA				"!COD_EMPRESA!"
#DEFINE ADD_COD_FILIAL				"!COD_FILIAL!"
#DEFINE ADD_DESC_FILIAL				"!DESC_FILIAL!"
#DEFINE ADD_COD_AVALIACAO			"!COD_AVALIACAO!"
#DEFINE ADD_DESC_AVALIACAO			"!DESC_AVALIACAO!"
#DEFINE ADD_DATA_INICIO_AVALIACAO	"!DATA_INICIO_AVALIACAO!"
#DEFINE ADD_DATA_FINAL_AVALIACAO	"!DATA_FINAL_AVALIACAO!"
#DEFINE ADD_COD_PROJETO				"!COD_PROJETO!"
#DEFINE ADD_DESC_PROJETO			"!DESC_PROJETO!"
#DEFINE ADD_DATA_INICIO_PROJETO		"!DATA_INICIO_PROJETO!"
#DEFINE ADD_DATA_FINAL_PROJETO		"!DATA_FINAL_PROJETO!"
#DEFINE ADD_COD_AVALIADO			"!COD_AVALIADO!"
#DEFINE ADD_NOME_AVALIADO			"!NOME_AVALIADO!"
#DEFINE ADD_COD_AVALIADOR			"!COD_AVALIADOR!"
#DEFINE ADD_NOME_AVALIADOR			"!NOME_AVALIADOR!"
#DEFINE ADD_MSG						"!MSG!"

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdSndAv  ЁAutor  ЁMarinaldo de Jesus     Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁAutomacao do Processo de Envio de Avaliacoes                Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁVoid                                                        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁSIGAAPD                                                     Ё
цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
Ё           ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL            Ё
цддддддддддддбддддддддбддддддбдддддддддддддддддддддддддддддддддддддддддд╢
ЁProgramador Ё Data   Ё BOPS Ё  Motivo da Alteracao                     Ё
цддддддддддддеддддддддеддддддедддддддддддддддддддддддддддддддддддддддддд╢
ЁCecilia Car.Ё04/07/14ЁTPZWF1ЁIncluido o fonte da 11 para a 12 e efetua-Ё
Ё            Ё        Ё      Ёda a limpeza.                             Ё  
юддддддддддддаддддддддаддддддадддддддддддддддддддддддддддддддддддддддддды/*/
Function ApdSndAv( aParamUser ) /*/ Array com dois elementos 1=cEmp (Codigo da Empresa ) , 2=cFil ( Codigo da Filial )  /*/
	
	Local aArea
	Local aSelect		:= {}
	Local lNoExecInRmt	:= !( Type( "oMainWnd" ) == "O" )
	Local aModuloReSet
	Local cEmp
	Local cFil
	Local lSetCentury
	
	DEFAULT aParamUser := Array( 02 )
	
	RpcSetType( 3 )
	PREPARE ENVIRONMENT EMPRESA ( aParamUser[1] ) FILIAL ( aParamUser[2] )
	
	aArea			:= GetArea()
	SetsDefault()
	lSetCentury	:= __SetCentury("on")
	
	aModuloReSet := SetModulo( "SIGAAPD", "APD" )
	
	aAdd( aSelect , "RBL" )
	aAdd( aSelect , "RD0" )
	aAdd( aSelect , "RD2" )
	aAdd( aSelect , "RD3" )
	aAdd( aSelect , "RD5" )
	aAdd( aSelect , "RD6" )
	aAdd( aSelect , "RD7" )
	aAdd( aSelect , "RD8" )
	aAdd( aSelect , "RDA" )
	aAdd( aSelect , "RDB" )
	aAdd( aSelect , "RDC" )
	aAdd( aSelect , "RDG" )
	aAdd( aSelect , "RDH" )
	aAdd( aSelect , "RDP" )
	aAdd( aSelect , "SQO" )
	aAdd( aSelect , "SQP" )
	aAdd( aSelect , "WF1" )
	aAdd( aSelect , "WF2" )
	aAdd( aSelect , "WF3" )
	aAdd( aSelect , "WFA" )
	
	If ( Len( aParamUser ) >= 1 )
		cEmp := aParamUser[1]
	EndIf
	If ( Len( aParamUser ) >= 2 )
		cFil := aParamUser[2]
	EndIf
	
	cRdcFil := xFilial( "RDC" )
	
	SetTopType( "A" )
	cRdcFil		:= xFilial( "RDC" )
	
	If ApdSndIni( aSelect, lNoExecInRmt )
		ApdRd6Proc( cFilAnt, aParamUser[3] )
	EndIf
	
	If ( lNoExecInRmt )
		CloseNotUse( {}, aSelect )
	EndIf
	
	ConOut( CRLF )
	
	ReSetModulo( aModuloReSet )
	
	If !( lSetCentury )
		__SetCentury("off")
	EndIF
	
	RestArea( aArea )
	
	RpcClearEnv() // Reseta o ambiente
	
Return( .T. )

/*/
зддддддддддбдддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdSndIni	 ЁAutor ЁMarinaldo de Jesus	  Ё Data Ё14/01/2003Ё
цддддддддддедддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializa o Processo de WorkFlow                           Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdSndIni( aSelect , lNoExecInRmt )

Local aNotSelect	:= {}
Local lApdSndIni	:= .T.

Begin Sequence

	IF ( lNoExecInRmt )
		IF !( lApdSndIni := RestartNotUse( aSelect , @aNotSelect ) )
			Break
		EndIF
	EndIF

	RBL->( dbSetOrder( RetOrdem( "RBL" , "RBL_FILIAL+RBL_ESCALA+RBL_ITEM" ) ) )
	RD3->( dbSetOrder( RetOrdem( "RD3" , "RD3_FILIAL+RD3_CODIGO" ) ) )
	RD6->( dbSetOrder( RetOrdem( "RD6" , "RD6_FILIAL+RD6_CODIGO" ) ) )
	RD7->( dbSetOrder( RetOrdem( "RD7" , "RD7_FILIAL+RD7_CODAVA+RD7_CODADO+RD7_CODCOM+RD7_ITECOM" ) ) )
	RD8->( dbSetOrder( RetOrdem( "RD8" , "RD8_FILIAL+RD8_CODMOD+RD8_CODCOM+RD8_ITECOM+RD8_ORDEM+RD8_CODQUE" ) ) )
	RDC->( dbSetOrder( RetOrdem( "RDC" , "RDC_FILIAL+RDC_CODAVA+DTOS(RDC_DTIAVA)" ) ) )
	RDP->( dbSetOrder( RetOrdem( "RDP" , "RDP_FILIAL+RDP_CODAVA+DTOS(RDP_DATINI)" ) ) )

End Sequence

Return( lApdSndIni )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdRd6Proc  ЁAutorЁMarinaldo de Jesus     Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁProcessa para Cada Avaliacao                                Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdRd6Proc( cFil, cCodAva )
	
	Local cSvFilAnt			:= cFilAnt
	Local cRd6Filial		:= xFilial( "RD6", cFil )
	Local lNotRd6Compart	:= !Empty( cRd6Filial )
	Local nRd6Recno
	Local nRd6NextRecno
	Local nRd6Order
	
	nRd6Order := RD6->( RetOrdem( "RD6", "RD6_FILIAL+RD6_CODIGO" ))
	RD6->( dbSetOrder( nRd6Order ) )
	
	If ( lNotRd6Compart )
		RD6->( MsSeek( cRd6Filial + cCodAva, .T. ))
	Else
		RD6->( MsSeek( Space(FWGETTAMFILIAL) + cCodAva, .T. ))
	EndIf
	
	While RD6->(!Eof() .And. If( lNotRd6Compart, ( RD6_FILIAL + RD6_CODIGO == cRd6Filial + cCodAva), RD6_CODIGO == cCodAva ))
		
		If !GetNextRecno( "RD6", @nRd6NextRecno, @nRd6Recno, nRd6Order )
			Exit
		EndIf
		If ( RD6->RD6_STATUS == "1" )
			ApdRdpProc( cRd6Filial )
		EndIf
		If !GotoNextRecno( "RD6", nRd6NextRecno, nRd6Order )
			Exit
		EndIf
	EndDo
	
	cFilAnt := cSvFilAnt
	
Return( NIL )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdRdpProc  ЁAutorЁMarinaldo de Jesus     Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁProcessa para Cada Item da Agenda                           Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdRdpProc( cFil )

Local cKeyRd6	:= RD6->( xFilial( "RDP" , cFil ) + RD6_CODIGO )

Local nRdpNextRecno
Local nRdpRecno
Local nRdpOrder

nRdpOrder := RDP->( IndexOrd() )
IF ( RDP->( MsSeek( cKeyRd6 , .F. ) ) )
	While RDP->(!Eof() .And. (( RDP_FILIAL + RDP_CODAVA ) == cKeyRd6 ))
		IF !GetNextRecno( "RDP" , @nRdpNextRecno , @nRdpRecno , nRdpOrder )
			Exit
		EndIF
		ApdSndEnvA( RDP->RDP_TIPENV , RDP->RDP_MSGAVA )
		IF !GotoNextRecno( "RDP" , nRdpNextRecno , nRdpOrder )
			Exit
		EndIF
	End While
EndIF

Return( NIL )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdSndEnvAЁAutor  ЁMarinaldo de Jesus	  Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁExecuta o Processo de Envio de Avaliacoes                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdSndEnvA( cTipoEnv , cCodMsgAva )	//1=Envia e-mail com aviso;2=Envia e-mail com avaliacao

Local aSqoCols			:= {}
Local aSqpCols			:= {}
Local lApdSndEnvA		:= .T.

Local aRd8Header
Local aRd8Cols
Local aSqoHeader
Local aSqpHeader
Local aParams

Local cPathFileWF
Local cMsgCab
Local cMsgRod
Local cRdcFil
Local cKeyRdc
Local cRd3Key                                       

Local nQuest
Local nQuests
Local nRd8Filial
Local nRd8CodQue
Local nRd3Recno
Local nRdcNextRecno
Local nRdcRecno
Local nRdcOrder

Begin Sequence
	
	IF ( cTipoEnv == "2" )
		
		RD7->( MsSeek( RD6->( RD6_FILIAL + RD6_CODIGO ) , .F. ) )
		
		cRd3Key := RD6->( xFilial( "RD3" , RD6_FILIAL ) + RD6_CODMOD )
		IF !( lApdSndEnvA := !RD3->( !MsSeek( cRd3Key , .F. ) ) )
			Break
		EndIF
		RstGetAdsLckRec()
		nRd3Recno := RD3->( Recno() )
		IF !LockRegsCode( "RD3" , { nRd3Recno } , { cRd3Key } , 10 , 3 , .T. , 1 )
			Break
		EndIF
		
		IF !( lApdSndEnvA := !RD8->( !MsSeek( RD3->( xFilial( "RD8" , RD3_FILIAL ) + RD3_CODIGO ) , .F. ) ) )
			Break
		EndIF
		
		Rd8GetInfo( @aRd8Header , @aRd8Cols )
		nRd8Filial	:= GdFieldPos( "RD8_FILIAL" , aRd8Header )
		nRd8CodQue	:= GdFieldPos( "RD8_CODQUE" , aRd8Header )
		
		nQuests := Len( aRd8Cols )
		For nQuest := 1 To nQuests
			cKey := xFilial( "SQO" , aRd8Cols[ nQuest , nRd8Filial ] )
			cKey += aRd8Cols[ nQuest , nRd8CodQue ]
			SqoGetInfo( cKey , @aSqoHeader , @aSqoCols )
			SqpGetInfo( cKey , @aSqpHeader , @aSqpCols )
		Next nQuest
		
		IF RDG->( MsSeek( RD6->( xFilial( "RDG" , RD6_FILIAL ) + RD6_CODCAB ) , .F. ) )
			cMsgCab := ApdMsMm( RDG->RDG_CODMEM, NIL, NIL, NIL, 3, , , "RDG",)
		EndIF
		
		IF RDG->( MsSeek( RD6->( xFilial( "RDG" , RD6_FILIAL ) + RD6_CODROD ) , .F. ) )
			cMsgRod := ApdMsMm( RDG->RDG_CODMEM, NIL, NIL, NIL, 3, , , "RDG",)
		EndIF
		
		aParams := {}
		IF !( lApdSndEnvA := ApdMakeHtml(	@cPathFileWF	,;
											@aParams		,;
											aRd8Header		,;
											aRd8Cols		,;
											aSqoHeader		,;
											aSqoCols		,;
											aSqpHeader		,;
											aSqpCols		,;
											cMsgCab			,;
											cMsgRod			 ;
										);
			)
			Break
		EndIF
		
	Else
		
		IF !( lApdSndEnvA := ApdMkAviso( @cPathFileWF ) )
			Break
		EndIF
		
	EndIF
	
	cRdcFil := xFilial( "RDC", RD6->RD6_FILIAL )
	cKeyRdc	:= ( cRdcFil + RD6->RD6_CODIGO + DTOS( RDP->RDP_DATINI ) )
	IF !( lApdSndEnvA := RDC->( MsSeek( cKeyRdc, .F. ) ) )
		Break
	EndIF

	nRdcOrder := RDC->( IndexOrd() )
	While RDC->(!Eof() .And. (( RDC_FILIAL + RDC_CODAVA + DTOS( RDC_DTIAVA ) ) == cKeyRdc ))	
		IF !GetNextRecno( "RDC" , @nRdcNextRecno , @nRdcRecno , nRdcOrder )
			Exit
		EndIF
		
		If !(RDC->RDC_TIPOAV == '3' .AND. !fBuscaAva(nRdcRecno)) // Busca se avaliaГУes jА foram feitas antes de enviar o consenso
			IF !ApdEnvChk( RDC->RDC_FILIAL , nRdcRecno )
				ApdSndBldAva( cPathFileWF , aParams , cTipoEnv , cCodMsgAva )
			EndIF
			If fValidStatus()
				ApdSndCob( cPathFileWF , aParams , cTipoEnv , cCodMsgAva )
			EndIf
		EndIf
		
		IF !GotoNextRecno( "RDC" , nRdcNextRecno , nRdcOrder )
			Exit
		EndIF
	End While

End Sequence

IF ( cTipoEnv == "2" )
	FreeLocks( "RD3" , nRd3Recno , .T. , cRd3Key )
EndIF	

Return( lApdSndEnvA )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdMkAviso  ЁAutorЁMarinaldo de Jesus	  Ё Data Ё18/12/2003Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁEnvia Mensagens                                             Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdMkAviso( cPathFileWF, cTipo )

Local lApdMkAviso		:= .T.

Local aHtml

Local cMakeDir
Local cFile

Default cTipo = "1"

Begin Sequence

	aHtml := {}
	aAdd( aHtml ,	"<html>" + CRLF )
	aAdd( aHtml ,		"<body>" + CRLF )
	aAdd( aHtml ,			"<table style='font-size: 10pt; border-collapse: collapse' bordercolor='#111111' cellpadding='0' cellspacing='0'>" + CRLF )
	aAdd( aHtml ,				"<tr>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0009 + CRLF )	//"Empresa/Filial :" + 
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_COD_EMPRESA + "/" + ADD_COD_FILIAL + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DESC_FILIAL + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,				"</tr>" + CRLF )
	aAdd( aHtml ,				"<tr>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0010 + CRLF ) //"AvaliaГЦo :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_COD_AVALIACAO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )	
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DESC_AVALIACAO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0011 + CRLF )	//"Periodo :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DATA_INICIO_AVALIACAO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DATA_FINAL_AVALIACAO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,				"</tr>" + CRLF )
	aAdd( aHtml ,				"<tr>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0012 + CRLF )	//"Projeto :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_COD_PROJETO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DESC_PROJETO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0011 + CRLF )	//"Periodo :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DATA_INICIO_PROJETO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DATA_FINAL_PROJETO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,				"</tr>" + CRLF )
	aAdd( aHtml ,				"<tr>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0013 + CRLF )	//"Avaliado :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_COD_AVALIADO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )	
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_NOME_AVALIADO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )	
	aAdd( aHtml ,				"</tr>" + CRLF )
	aAdd( aHtml ,				"<tr>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0014 + CRLF )	//"Avaliador :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_COD_AVALIADOR + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_NOME_AVALIADOR + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,				"</tr>" + CRLF )
	aAdd( aHtml ,			"</table>" + CRLF )
	aAdd( aHtml ,			"<p style='LINE-HEIGHT:100%' align='justify'>" + CRLF )
	aAdd( aHtml ,				ADD_MSG + CRLF )
	aAdd( aHtml ,			"</p>" + CRLF )     
	If cTipo == "2"
		aAdd( aHtml ,			" <p> <a href='!proc_link!' title='!titulo!'>!Name_link!</a>" + CRLF )  
		aAdd( aHtml ,			"</p>" + CRLF )	
	EndIf
	aAdd( aHtml ,		"</body>" + CRLF )
	aAdd( aHtml ,	"</html>" + CRLF )
	
	ApdAddVar( @aHtml )
	
	cMakeDir	:= ApdGetPath()  
	
	If cTipo == "2"
		cFile 		:= "APDSDNOT.HTM"
	Else                             
		cFile 		:= "APDSDAVI.HTM"
	EndIf	
		
	IF !( lApdMkAviso := ApdHtmlMke( aHtml , @cMakeDir , cFile , .T. ) )
		Break
	EndIF

	cPathFileWF := cMakeDir

End Sequence

Return( lApdMkAviso )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁRd8GetInfo		ЁAutorЁMarinaldo de Jesus Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCarrega Informacoes do RD8                                  Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function Rd8GetInfo( aRd8Header , aRd8Cols )

Local cNewKeyRd8Header	:= ( cEmpAnt + cFilAnt )
Local cNewKeyRd8Cols 	:= ( cNewKeyRd8Header + RD3->( RD3_FILIAL + RD3_CODIGO ) )

Static __aRd8Header	:= {}
Static __aRd8Cols	:= {}
Static cKeyRd8Head	:= "__cKeyRd8Head__"
Static cKeyRd8Cols	:= "__cKeyRd8Cols__"

IF (;
		!( cKeyRd8Head == cNewKeyRd8Header );
		.or.;
		Empty( __aRd8Header );
	)	
	__aRd8Header	:= {}
	cKeyRd8Head		:= cNewKeyRd8Header
Else
	aRd8Header := aClone( __aRd8Header )
EndIF

IF !( cKeyRd8Cols == cNewKeyRd8Cols )
	cKeyRd8Cols	:= cNewKeyRd8Cols
	aRd8Cols	:= GdMontaCols(	@aRd8Header				,;	//01 -> Array com os Campos do Cabecalho da GetDados
								NIL						,;	//02 -> Numero de Campos em Uso
								NIL						,;	//03 -> [@]Array com os Campos Virtuais
								NIL						,;	//04 -> [@]Array com os Campos Visuais
								"RD8"					,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
								NIL						,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
								NIL						,;	//07 -> [@]Array unidimensional contendo os Recnos
								"RD3"					,;	//08 -> Alias do Arquivo Pai
								NIL						,;	//09 -> Chave para o Posicionamento no Alias Filho
								NIL						,;	//10 -> Bloco para condicao de Loop While
								NIL						,;	//11 -> Bloco para Skip no Loop While
								.F.						,;	//12 -> Se Havera o Elemento de Delecao no aCols 
								.F.						,;	//13 -> Se cria variaveis Publicas
								.F.						,;	//14 -> Se Sera considerado o Inicializador Padrao
								NIL						,;	//15 -> Lado para o inicializador padrao
								.T.						,;	//16 -> Se carregara todos os campos no aHeader
								.T.						,;	//17 -> Nao Carregar os Campos Virtuais
								NIL						,;	//18 -> Opcional, Utilizacao de Query para Selecao de Dados
								.T.						,;	//19 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
								.T.						,;	//20 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
								.F.						,;	//21 -> Carregar Coluna Fantasma
								.F.						,;	//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
								.F.						,;	//23 -> Verifica se Deve verificar se o campo eh usado
								.F.						,;	//24 -> Verifica se Deve verificar o nivel do usuario
								.F.						,;	//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols
								NIL						,;	//26 -> [@]Array que contera as chaves conforme recnos
								.F.						,;	//27 -> [@]Se devera efetuar o Lock dos Registros
								.F.						,;	//28 -> [@]Se devera obter a Exclusividade nas chaves dos registros
								NIL						,;	//29 -> Numero maximo de Locks a ser efetuado
								.F.				 		 ;	//30 -> Utiliza Numeracao na GhostCol
							)
	__aRd8Cols 		:= aClone( aRd8Cols )
	__aRd8Header	:= aClone( aRd8Header )

Else
	aRd8Cols := aClone( __aRd8Cols )
EndIF

Return( .T. )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁSqoGetInfo		ЁAutorЁMarinaldo de Jesus Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCarrega Informacoes do SQO                                  Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function SqoGetInfo( cKey , aSqoHeader , aSqoCols )

Local cNewKeySqoHeader	:= ( cEmpAnt + cFilAnt )

Local aSqoColsAux
Local nLoop
Local nLoops

Static __aSqoHeader	:= {}
Static cKeySqoHead	:= "__cKeySqoHead__"

IF (;
		!( cKeySqoHead == cNewKeySqoHeader );
		.or.;
		Empty( __aSqoHeader );
	)	
	__aSqoHeader	:= {}
	cKeySqoHead		:= cNewKeySqoHeader
Else
	aSqoHeader := aClone( __aSqoHeader )
EndIF

aSqoColsAux := GdMontaCols(	@aSqoHeader							,;	//01 -> Array com os Campos do Cabecalho da GetDados
							NIL									,;	//02 -> Numero de Campos em Uso
							NIL									,;	//03 -> [@]Array com os Campos Virtuais
							NIL									,;	//04 -> [@]Array com os Campos Visuais
							"SQO"								,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
							NIL									,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
							NIL									,;	//07 -> [@]Array unidimensional contendo os Recnos
							"SQO"								,;	//08 -> Alias do Arquivo Pai
							cKey								,;	//09 -> Chave para o Posicionamento no Alias Filho
							NIL									,;	//10 -> Bloco para condicao de Loop While
							NIL									,;	//11 -> Bloco para Skip no Loop While
							.F.									,;	//12 -> Se Havera o Elemento de Delecao no aCols 
							.F.									,;	//13 -> Se cria variaveis Publicas
							.F.									,;	//14 -> Se Sera considerado o Inicializador Padrao
							NIL									,;	//15 -> Lado para o inicializador padrao
							.T.						 			,;	//16 -> Se carregara todos os campos no aHeader
							.T.									,;	//17 -> Nao Carregar os Campos Virtuais
							NIL									,;	//18 -> Opcional, Utilizacao de Query para Selecao de Dados
							.T.									,;	//19 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
							.T.									,;	//20 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
							.F.									,;	//21 -> Carregar Coluna Fantasma
							.F.									,;	//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
							.F.									,;	//23 -> Verifica se Deve verificar se o campo eh usado
							.F.									,;	//24 -> Verifica se Deve verificar o nivel do usuario
							.F.									,;	//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols
							NIL						 			 ;	//26 -> [@]Array que contera as chaves conforme recnos
						)

IF Empty( __aSqoHeader )
	__aSqoHeader := aClone( aSqoHeader )
EndIF

nLoops := Len( aSqoColsAux )
For nLoop := 1 To nLoops
	aAdd( aSqoCols , aClone( aSqoColsAux[ nLoop ] ) )
Next nLoop
aSqoColsAux := {}

Return( .T. )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁSqpGetInfo		ЁAutorЁMarinaldo de Jesus Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCarrega Informacoes do SQP                                  Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function SqpGetInfo( cKey , aSqpHeader , aSqpCols )

Local aSqpColsAux
Local nLoop
Local nLoops

Static __aSqpHeader	:= {}
Static cKeySqpHead	:= "__cKeySqpHead__"

IF (;
		!( cKeySqpHead == ( cEmpAnt + cFilAnt ) ) .or.;
		Empty( __aSqoHeader );
	)
	__aSqpHeader := {}
Else
	aSqpHeader := aClone( __aSqpHeader )
EndIF

aSqpColsAux	:= GdMontaCols(	@aSqpHeader							,;	//01 -> Array com os Campos do Cabecalho da GetDados
							NIL									,;	//02 -> Numero de Campos em Uso
							NIL									,;	//03 -> [@]Array com os Campos Virtuais
							NIL									,;	//04 -> [@]Array com os Campos Visuais
							"SQP"								,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
							NIL									,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
							NIL									,;	//07 -> [@]Array unidimensional contendo os Recnos
							"SQP"								,;	//08 -> Alias do Arquivo Pai
							cKey								,;	//09 -> Chave para o Posicionamento no Alias Filho
							NIL									,;	//10 -> Bloco para condicao de Loop While
							NIL									,;	//11 -> Bloco para Skip no Loop While
							.F.									,;	//12 -> Se Havera o Elemento de Delecao no aCols 
							.F.									,;	//13 -> Se cria variaveis Publicas
							.F.									,;	//14 -> Se Sera considerado o Inicializador Padrao
							NIL									,;	//15 -> Lado para o inicializador padrao
							.T.						 			,;	//16 -> Se carregara todos os campos no aHeader
							.T.									,;	//17 -> Nao Carregar os Campos Virtuais
							NIL									,;	//18 -> Opcional, Utilizacao de Query para Selecao de Dados
							.T.									,;	//19 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
							.T.									,;	//20 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
							.F.									,;	//21 -> Carregar Coluna Fantasma
							.F.									,;	//22 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
							.F.									,;	//23 -> Verifica se Deve verificar se o campo eh usado
							.F.									,;	//24 -> Verifica se Deve verificar o nivel do usuario
							.F.									,;	//25 -> Verifica se Deve Carregar o Elemento Vazio no aCols
							NIL						 			 ;	//26 -> [@]Array que contera as chaves conforme recnos
						)
						
IF Empty( __aSqpHeader )
	__aSqpHeader	:= aClone( aSqpHeader )
EndIF	

nLoops := Len( aSqpColsAux )
For nLoop := 1 To nLoops
	aAdd( aSqpCols , aClone( aSqpColsAux[ nLoop ] ) )
Next nLoop
aSqpColsAux := {}

Return( .T. )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdMakeHtml	    ЁAutorЁMarinaldo de Jesus Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁMonta o Template HTML                                       Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdMakeHtml(	cPathFileWF ,;
								aParams		,;
								aRd8Header	,;
								aRd8Cols	,;
								aSqoHeader	,;
								aSqoCols	,;
								aSqpHeader	,;
								aSqpCols	,;
								cMsgCab		,;
								cMsgRod		 ;
							)

Local aHtml 	:= {}
Local cMakeDir	:= ""
Local lMakeOk	:= .F.

Begin Sequence

	aAdd( aHtml ,	"<!-- saved from url=(0022)http://internet.e-mail -->" + CRLF )
	aAdd( aHtml ,	"<!--" ) //No CRLF
	aAdd( aHtml ,		ADD_PATH_HTML ) //No CRLF
	aAdd( aHtml ,	"-->" + CRLF )
	aAdd( aHtml ,	"<!--" ) //No CRLF
	aAdd( aHtml ,		ADD_COD_ID ) //No CRLF
	aAdd( aHtml ,	"-->" + CRLF )
	aAdd( aHtml ,	"<html>" + CRLF  )
	aAdd( aHtml ,		"<head>" + CRLF )
	aAdd( aHtml , 			"<meta http-equiv='Content-Language' content='pt-br'>" + CRLF )
	aAdd( aHtml , 			"<meta http-equiv='Content-Type' content='text/html; charset=windows-1252'>" + CRLF )
	aAdd( aHtml , 			"<meta name='GENERATOR' content='Microsoft FrontPage 5.0'>" + CRLF )
	aAdd( aHtml , 			"<meta name='ProgId' content='FrontPage.Editor.Document'>" + CRLF )
	aAdd( aHtml ,			"<title>" + CRLF )
	aAdd( aHtml ,				ADD_TITULO_HTML + CRLF )
	aAdd( aHtml ,			"</title>" + CRLF )
	aAdd( aHtml ,			"<script language=Javascript>" + CRLF )
	aAdd( aHtml ,				"<!-- Begin" + CRLF )
	aAdd( aHtml ,					"function textCounter( field , countfield , maxlimit )" + CRLF )
	aAdd( aHtml ,					"{" + CRLF )
	aAdd( aHtml ,						"if ( field.value.length > maxlimit ) // if too long...trim it!" + CRLF )
	aAdd( aHtml ,						"{" + CRLF )
	aAdd( aHtml ,							"field.value = field.value.substring(0, maxlimit);" + CRLF )
	aAdd( aHtml ,							"// otherwise, update 'characters left' counter" + CRLF )
	aAdd( aHtml ,						"}" + CRLF )
	aAdd( aHtml ,						"else" + CRLF ) 
	aAdd( aHtml ,						"{" + CRLF )
	aAdd( aHtml ,							"countfield.value = maxlimit - field.value.length;" + CRLF )
	aAdd( aHtml ,						"}" + CRLF )
	aAdd( aHtml ,					"}" + CRLF )
	aAdd( aHtml ,				"// End -->" + CRLF )
	aAdd( aHtml ,				"<!-- Begin" + CRLF )
	aAdd( aHtml ,					"function ChkDoc( DocChk ) /*/ Autor: Marinaldo de Jesus 14/12/2003 12:06:59 PM */" + CRLF )
	aAdd( aHtml ,					"{" + CRLF )
	aAdd( aHtml ,						"var oElements		= DocChk.form.elements;" + CRLF )
	aAdd( aHtml ,						"var cName  		= '';"	+ CRLF )
	aAdd( aHtml ,						"var cLastName		= '';"	+ CRLF )
	aAdd( aHtml ,						"var nElements		= 0;"	+ CRLF )
	aAdd( aHtml ,						"var nNoChecked		= 0;"	+ CRLF )
	aAdd( aHtml ,						"var i				= 0;" 	+ CRLF )
	aAdd( aHtml ,						"var e				= 0;" 	+ CRLF )
	aAdd( aHtml ,						"var nAt			= " + AllTrim( Str( ( 6 + TamSX3("QP_QUESTAO")[1] ) ) ) + ";" + CRLF )
	aAdd( aHtml ,						"var lDocumentOk	= true;" + CRLF )
	aAdd( aHtml ,						"for ( i = 0 ; i < oElements.length ; ++i )" + CRLF )
	aAdd( aHtml ,						"{" + CRLF )
	aAdd( aHtml ,							"if ( oElements[ i ].type.toLowerCase() == 'hidden' )" + CRLF )
	aAdd( aHtml ,							"{" + CRLF )
	aAdd( aHtml ,								"continue;" + CRLF )
	aAdd( aHtml ,							"}" + CRLF )
	aAdd( aHtml ,							"if ( ( oElements[ i ].type.toLowerCase() == 'checkbox' ) || ( oElements[ i ].type.toLowerCase() == 'radio' ) )" + CRLF )
	aAdd( aHtml ,							"{" + CRLF )
	aAdd( aHtml ,								"cName = oElements[ i ].name.substr( 0 , nAt );" + CRLF )
	aAdd( aHtml ,								"if ( cName == cLastName )" + CRLF )
	aAdd( aHtml ,								"{" + CRLF )
	aAdd( aHtml ,									"continue;" + CRLF )
	aAdd( aHtml ,								"}" + CRLF )
	aAdd( aHtml ,								"cLastName	= cName;" + CRLF )
	aAdd( aHtml ,								"nElements 	= 0;" + CRLF )
	aAdd( aHtml ,								"nNoChecked	= 0;" + CRLF )
	aAdd( aHtml ,								"if ( !oElements[ i ].checked )" + CRLF )
	aAdd( aHtml ,								"{" + CRLF )
	aAdd( aHtml ,									"for ( e = i ; e < oElements.length ; ++e  )" + CRLF )
	aAdd( aHtml ,									"{" + CRLF )
	aAdd( aHtml ,										"if ( oElements[ e ].name.substr( 0 , nAt ) == cName )" + CRLF )
	aAdd( aHtml ,										"{" + CRLF )
	aAdd( aHtml ,											"++nElements;" + CRLF )
	aAdd( aHtml ,											"if ( !( oElements[ e ].checked ) )" + CRLF )
	aAdd( aHtml ,											"{" + CRLF )
	aAdd( aHtml ,												"++nNoChecked;" + CRLF )
	aAdd( aHtml ,											"}" + CRLF )
	aAdd( aHtml ,										"}" + CRLF )
	aAdd( aHtml ,										"else" + CRLF )
	aAdd( aHtml ,										"{" + CRLF )
	aAdd( aHtml ,											"break;" + CRLF )
	aAdd( aHtml ,										"}" + CRLF )
	aAdd( aHtml ,									"}" + CRLF )
	aAdd( aHtml ,								"}" + CRLF )
	aAdd( aHtml ,								"if ( !( nElements == 0 ) && !( nNoChecked == 0 ) && ( nElements == nNoChecked ) )" + CRLF )
	aAdd( aHtml ,								"{" + CRLF )
	aAdd( aHtml ,									"oElements[ i ].focus();" + CRLF )
	aAdd( aHtml ,									"lDocumentOk = false;" + CRLF )
	aAdd( aHtml ,									"break;" + CRLF )
	aAdd( aHtml ,								"}" + CRLF )
	aAdd( aHtml ,							"}" + CRLF )
	aAdd( aHtml ,							"else if ( oElements[ i ].type.toLowerCase() == 'textarea' || oElements[ i ].type.toLowerCase() == 'text' )" + CRLF )
	aAdd( aHtml ,							"{" + CRLF )
	aAdd( aHtml ,								"if ( oElements[ i ].value == '' )" + CRLF )
	aAdd( aHtml ,								"{" + CRLF )
	aAdd( aHtml ,									"oElements[ i ].focus();" + CRLF )
	aAdd( aHtml ,									"lDocumentOk = false;" + CRLF )
	aAdd( aHtml ,									"break;" + CRLF )
	aAdd( aHtml ,								"}" + CRLF )
	aAdd( aHtml ,							"}" + CRLF )
	aAdd( aHtml ,						"}" + CRLF )
	aAdd( aHtml ,						"if ( !( lDocumentOk ) )" + CRLF )
	aAdd( aHtml ,						"{" + CRLF )
	aAdd( aHtml ,							"alert('" + STR0001 +"');" + CRLF )	//Existem Perguntas que nЦo foram Respondidas. Favor Verificar!
	aAdd( aHtml ,						"}" + CRLF )
	aAdd( aHtml ,						"else" + CRLF )
	aAdd( aHtml ,						"{" + CRLF )
	aAdd( aHtml ,							"document.all[ 'FRM_APDSNDAV' ].submit();" + CRLF )
	aAdd( aHtml ,							"disableForm( DocChk.form )" + CRLF )
	aAdd( aHtml ,						"}" + CRLF )
	aAdd( aHtml ,						"return( lDocumentOk );" + CRLF )
	aAdd( aHtml ,					"}" + CRLF )
	aAdd( aHtml ,				"// End -->" + CRLF )
	aAdd( aHtml ,				"<!-- Begin" + CRLF )
	aAdd( aHtml ,					"function RemoveWhitespace( text )" + CRLF )
	aAdd( aHtml ,					"{" + CRLF )
    aAdd( aHtml ,						"text.value = text.value.replace(/\r/g, ' ');" + CRLF )
    aAdd( aHtml ,						"text.value = text.value.replace(/'/g, '');" + CRLF )
	aAdd( aHtml ,						"text.value = text.value.replace(/ +/g, ' ');" + CRLF )
	aAdd( aHtml ,						"text.value = text.value.replace(/^\s/g, '');" + CRLF )
	aAdd( aHtml ,						"text.value = text.value.replace(/\s$/g, '');" + CRLF )
  	aAdd( aHtml ,						"if ( text.value == ' '){text.value = ''};" + CRLF )
	aAdd( aHtml ,					"}" + CRLF )
	aAdd( aHtml ,				"// End -->" + CRLF )
	aAdd( aHtml ,				"<!-- Begin" + CRLF )
	aAdd( aHtml ,					"function disableForm( theform )" + CRLF )
	aAdd( aHtml ,					"{" + CRLF )
	aAdd( aHtml ,						"var tempobj" + CRLF )
	aAdd( aHtml ,						"if ( document.all || document.getElementById)" + CRLF )
	aAdd( aHtml ,						"{" + CRLF )
	aAdd( aHtml ,							"for ( i = 0 ; i < theform.length; i++)" + CRLF )
	aAdd( aHtml ,							"{" + CRLF )
	aAdd( aHtml ,								"tempobj = theform.elements[i];" + CRLF )
	aAdd( aHtml ,								"tempobj.disabled = true;" + CRLF )
	aAdd( aHtml ,							"}" + CRLF )
	aAdd( aHtml ,							"setTimeout('alert(" + '"' + OemToAnsi( STR0033 + " " + STR0004 + " " + STR0034 ) + '"' + ")', 1000);" + CRLF ) //"As respostas de sua AvaliaГЦo foram enviadas. O botЦo:"###"ENVIAR"###"serА desabilitado."
	aAdd( aHtml ,							"return( true );" + CRLF )
	aAdd( aHtml ,						"}" + CRLF )
	aAdd( aHtml ,						"else" + CRLF )
	aAdd( aHtml ,						"{" + CRLF )
	aAdd( aHtml ,							"setTimeout('alert(" + '"' + OemToAnsi( STR0033 + " " + STR0035 + " " + STR0036 + " " + STR0004 + " " + STR0037 ) + '"' + ")', 1000);" + CRLF ) //"As respostas de sua AvaliaГЦo foram enviadas. O botЦo:"###"mas, considerando que a versao do seu IE И anterior юs verУes 4+ ou NS 6"###"o botЦo:"###"ENVIAR"###"nЦo serА desabilitado."
	aAdd( aHtml ,							"return( false );" + CRLF )
	aAdd( aHtml ,						"}" + CRLF )
	aAdd( aHtml ,					"}" + CRLF )
	aAdd( aHtml ,				"//  End -->" + CRLF )
	aAdd( aHtml ,			"</script>" + CRLF )
	aAdd( aHtml ,		"</head>" + CRLF )
	aAdd( aHtml ,		"<body style='font-family:Arial,Times New Roman,Courier,Verdana; color:#003399; font-size:10pt'>" + CRLF )
	aAdd( aHtml ,			'<form action="mailto:%WFMailTo%" method="post" name="FRM_APDSNDAV">' + CRLF + CRLF )     
	aAdd( aHtml ,				"<p style='LINE-HEIGHT:100%' align='center'>" + CRLF )
	aAdd( aHtml ,					"<b>" + CRLF )
	aAdd( aHtml ,						"<font size='4'>" + CRLF )
	aAdd( aHtml ,							"Microsiga" + CRLF )
	aAdd( aHtml ,							"&nbsp;-&nbsp;" + CRLF )
	aAdd( aHtml ,							"AvaliaГЦo 360╨" + CRLF )
	aAdd( aHtml ,						"</font>" + CRLF )
	aAdd( aHtml ,					"</b>" + CRLF )
	aAdd( aHtml ,				"</p>" + CRLF )
	aAdd( aHtml ,				"<font size='2'>" + CRLF )
	aAdd( aHtml ,					"<p style='LINE-HEIGHT:100%' align='center'>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0020 + CRLF ) //"Data do Envio:"
	aAdd( aHtml ,							"&nbsp;&nbsp;" + CRLF )
	aAdd( aHtml ,							ADD_DATA_DO_ENVIO + CRLF )
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</p>" + CRLF )
	aAdd( aHtml ,					"<p style='LINE-HEIGHT:100%' align='justify'>" + CRLF )
	aAdd( aHtml ,						STR0002 + CRLF )	//"Esta mensagem foi gerada automaticamente pelo "
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							SubStr( cVersao , 1 , 3 ) + " - WorkFlow" + CRLF )
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,						STR0003 + CRLF )	//"e refere-se ao processo de avaliaГЦo, sendo que apСs a sua resposta vocЙ deve clicar no botЦo "
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							"'" + STR0004 + "'" + CRLF )	//"ENVIAR"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</p>" + CRLF )
	aAdd( aHtml ,					"<p style='LINE-HEIGHT:100%' align='justify'>" + CRLF )
	aAdd( aHtml ,						STR0005 + CRLF )	//"Caso essa mensagem nЦo seja respondida atИ:"
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							ADD_DT_LIM_RSP + CRLF )
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,						STR0006 + SubStr( AllTrim( cVersao ) , 1 , 3 ) + "." + CRLF ) //" serА executado a funГЦo de Time-Out (Redirecionamento AutomАtico) do "
	aAdd( aHtml ,					"</p>" + CRLF )
	aAdd( aHtml ,					"<p style='LINE-HEIGHT:100%' align='justify'>" + CRLF )
	aAdd( aHtml ,						STR0007 + CRLF )	//"Grato,"
	aAdd( aHtml ,					"</p>" + CRLF )
	aAdd( aHtml ,					"<p style='LINE-HEIGHT:100%' align='justify'>" + CRLF )
	aAdd( aHtml ,						STR0008 + CRLF )	//"Administrador Protheus"
	aAdd( aHtml ,					"</p>" + CRLF )
	aAdd( aHtml ,				"</font>" + CRLF )
	aAdd( aHtml ,				"<HR>" + CRLF )
	aAdd( aHtml ,				"<table style='font-size: 10pt; border-collapse: collapse' bordercolor='#111111' cellpadding='0' cellspacing='0'>" + CRLF )
	aAdd( aHtml ,					"<tr>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							"<b>" + CRLF )
	aAdd( aHtml ,								STR0009 + CRLF )	//"Empresa/Filial :"
	aAdd( aHtml ,							"</b>" + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_COD_EMPRESA +"/" + ADD_COD_FILIAL + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							" - " + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_DESC_FILIAL + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,					"</tr>" + CRLF )
	aAdd( aHtml ,					"<tr>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							"<b>" + CRLF )
	aAdd( aHtml ,								STR0010 + CRLF ) //"AvaliaГЦo :"
	aAdd( aHtml ,							"</b>" + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_COD_AVALIACAO + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )	
	aAdd( aHtml ,							" - " + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_DESC_AVALIACAO + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							"<b>" + CRLF )
	aAdd( aHtml ,								STR0011 + CRLF )	//"Periodo :"
	aAdd( aHtml ,							"</b>" + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_DATA_INICIO_AVALIACAO + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							" - " + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_DATA_FINAL_AVALIACAO + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,					"</tr>" + CRLF )
	aAdd( aHtml ,					"<tr>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							"<b>" + CRLF )
	aAdd( aHtml ,								STR0012 + CRLF )	//"Projeto :"
	aAdd( aHtml ,							"</b>" + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_COD_PROJETO + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							" - " + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_DESC_PROJETO + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							"<b>" + CRLF )
	aAdd( aHtml ,								STR0011 + CRLF )	//"Periodo :"
	aAdd( aHtml ,							"</b>" + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_DATA_INICIO_PROJETO + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							" - " + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_DATA_FINAL_PROJETO + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,					"</tr>" + CRLF )
	aAdd( aHtml ,					"<tr>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							"<b>" + CRLF )
	aAdd( aHtml ,								STR0013 + CRLF )	//"Avaliado :"
	aAdd( aHtml ,							"</b>" + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_COD_AVALIADO + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )	
	aAdd( aHtml ,							" - " + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_NOME_AVALIADO + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )	
	aAdd( aHtml ,					"</tr>" + CRLF )
	aAdd( aHtml ,					"<tr>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							"<b>" + CRLF )
	aAdd( aHtml ,								STR0014 + CRLF )	//"Avaliador :"
	aAdd( aHtml ,							"</b>" + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_COD_AVALIADOR + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							" - " + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,						"<td>" + CRLF )
	aAdd( aHtml ,							ADD_NOME_AVALIADOR + CRLF )
	aAdd( aHtml ,						"</td>" + CRLF )
	aAdd( aHtml ,					"</tr>" + CRLF )
	aAdd( aHtml ,				"</table>" + CRLF )
	IF !Empty( cMsgCab )
		aAdd( aHtml ,				"<p>" + CRLF )
			aAdd( aHtml ,				cMsgCab + CRLF )
		aAdd( aHtml ,				"</p>" + CRLF )
	EndIF
	aAdd( aHtml ,				"<br>" + CRLF )
	aAdd( aHtml ,				"<br>" + CRLF )
	aAdd( aHtml ,				"<table border='1' cellpadding='0' cellspacing='0' style='border-collapse:collapse' bordercolor='#000000' width='100%' id='AutoNumber1' bordercolorlight='#008080' bordercolordark='#008080' bgcolor='#FFFFFF'>" + CRLF )

	IF !( lMakeOk := ApdAddQst( @aParams	,;
								@aHtml		,;
								aRd8Header	,;
								aRd8Cols	,;
								aSqoHeader	,;
								aSqoCols	,;
								aSqpHeader	,;
								aSqpCols	 ;
							 );
		 )
		aHtml := {}
		Break
	EndIF

	aAdd( aHtml ,				"</table>" + CRLF )
	aAdd( aHtml ,				"<p>" + CRLF )
	aAdd( aHtml ,					STR0015 + CRLF )	//"ApСs Responder Todas as QuestУes"
	aAdd( aHtml ,					"<b>" + CRLF )
	aAdd( aHtml ,						"'" + STR0016 + "'" + CRLF )	//"Click"
	aAdd( aHtml ,					"</b>" + CRLF )
	aAdd( aHtml ,					STR0017 + CRLF )	//"no botЦo"
	aAdd( aHtml ,					"<b>" + CRLF )
	aAdd( aHtml ,							"'" + STR0004 + "'" + CRLF ) //"ENVIAR"
	aAdd( aHtml ,					"</b>" + CRLF )
	aAdd( aHtml ,				"</p>" + CRLF )
	aAdd( aHtml ,				"<p>" + CRLF )
	aAdd( aHtml ,					"<input type='button' value='" + STR0004 /*"ENVIAR"*/ + "' name='SubmitButton' size='20' onclick=ChkDoc(this)>" + CRLF )
	aAdd( aHtml ,				"</p>" + CRLF )
	IF !Empty( cMsgRod )
		aAdd( aHtml ,				"<p>" + CRLF )
		aAdd( aHtml ,					cMsgRod + CRLF )
		aAdd( aHtml ,				"</p>" + CRLF )
	EndIF
	aAdd( aHtml ,				"<br>" + CRLF )
	aAdd( aHtml ,				"<br>" + CRLF )
	aAdd( aHtml ,				"<p>" + CRLF )
	aAdd( aHtml ,					"<b>" + CRLF )
	aAdd( aHtml ,						"<i>" + CRLF )
	aAdd( aHtml ,							"Microsiga Business Intelligence" + CRLF )
	aAdd( aHtml ,						"</i>" + CRLF )
	aAdd( aHtml ,					"</b>" + CRLF )
	aAdd( aHtml ,				"</p>" + CRLF )
	aAdd( aHtml ,			"</form>" + CRLF )
	aAdd( aHtml ,		"</body>" + CRLF )
	aAdd( aHtml ,	"<html>" + CRLF )

	ApdAddVar( @aHtml )

	cMakeDir := ApdGetPath()
	IF !( lMakeOk := ApdHtmlMke( aHtml , @cMakeDir , ( "MD"+ RD3->RD3_CODIGO + ".HTM" ) ) )
		Break
	EndIF

	cPathFileWF := cMakeDir

End Sequence
	
Return( lMakeOk )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdMakeHtml	    ЁAutorЁMarinaldo de Jesus Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁMonta o Template HTML                                       Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function ApdHtmlMke( aHtml , cMakeDir , cFile , lTemp )

Local cHtml		:= ""
Local lMakeOk	:= .F.
Local nMakeOk	:= 0
Local nHandle	:= 0
Local nLoop		:= 0
Local nLoops	:= 0

DEFAULT lTemp	:= .F.

Begin Sequence

	IF !( lMakeOk := lIsDir( cMakeDir ) )
		MakeDir( cMakeDir )
		While (!( lMakeOk := lIsDir( cMakeDir )) .And. ( ++nMakeOk <= 10 ))
			Sleep( 1000 )
			MakeDir( cMakeDir )
		EndDo
	EndIF	
	IF !( lMakeOk )
		Break
	EndIF
	nMakeOk := 0
	cMakeDir += ( "\SIGAAPD" )
	IF !( lMakeOk := lIsDir( cMakeDir ) )
		MakeDir( cMakeDir )
		While (!( lMakeOk := lIsDir( cMakeDir )) .And. ( ++nMakeOk <= 10 ))
			Sleep( 1000 )
			MakeDir( cMakeDir )
		EndDo
	EndIF
	IF !( lMakeOk )
		Break
	EndIF
	nMakeOk := 0
	cMakeDir += ( "\APDEMP" + cEmpAnt )
	IF !( lMakeOk := lIsDir( cMakeDir ))
		MakeDir( cMakeDir )
		While (!( lMakeOk := lIsDir( cMakeDir )) .And. ( ++nMakeOk <= 10 ))
			Sleep( 1000 )
			MakeDir( cMakeDir )
		End While
	EndIF	
	IF !( lMakeOk )
		Break
	EndIF
	nMakeOk := 0
	cMakeDir += ( "\APDFIL" + AllTrim(cFilAnt) )
	IF !( lMakeOk := lIsDir( cMakeDir ))
		MakeDir( cMakeDir )
		While (!( lMakeOk := lIsDir( cMakeDir )) .And. ( ++nMakeOk <= 10 ))
			Sleep( 1000 )
			MakeDir( cMakeDir )
		End While
	EndIF	
	IF !( lMakeOk )
		Break
	EndIF
	IF ( lTemp )
		nMakeOk := 0
		cMakeDir := Alltrim(cMakeDir)
		cMakeDir += ( "\TEMP" )
		IF !( lMakeOk := lIsDir( cMakeDir ) )
			MakeDir( cMakeDir )
			While (!( lMakeOk := lIsDir( cMakeDir )) .And. ( ++nMakeOk <= 10 ))
				Sleep( 1000 )
				MakeDir( cMakeDir )
			End While
		EndIF	
	EndIF
	IF !( lMakeOk )
		Break
	EndIF
	cMakeDir += "\"
	cMakeDir += cFile
	IF !File( cMakeDir )
		lMakeOk := ( ( nHandle := fCreate( cMakeDir ) ) <> -1 )
		nMakeOk := 0
		IF !( lMakeOk )
			While (;
						!( lMakeOk := ( fError() == 0 ) );
						.and.;
						( ++nMakeOk <= 10 );
				   )
				Sleep( 1000 )
				IF ( lMakeOk := ( ( nHandle := fCreate( cMakeDir ) ) <> -1 ) )
					Exit
				EndIF
			End While
		EndIF	
		IF !( lMakeOk )
			Break
		EndIF
		nLoops := Len( aHtml )
		For nLoop := 1 To nLoops
			cHtml += aHtml[ nLoop ]
		Next nLoop
		fWrite( nHandle , cHtml )
		cHtml := ""
		fClose( nHandle )
		nMakeOk := 0
		While (;
					!( lMakeOk := ( fError() == 0 ) );
					.and.;
					( ++nMakeOk <= 10 );
				)
			Sleep( 1000 )
			fClose( nHandle )
		End While
		IF !( lMakeOk )
			Break
		EndIF
	EndIF

End Sequence

Return( lMakeOk )

/*/
зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdGetPath	  ЁAutor  ЁMarinaldo de Jesus Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддддддадддддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁRetorna o Path e o nome do arquivo para envio da Avaliacao  Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdGetPath()

Local cPathWorkFlow := AllTrim( GetMv( "MV_WFDIR" , NIL , "\WORKFLOW" ) )

IF Empty( cPathWorkFlow )
	cPathWorkFlow := "\WORKFLOW"
Else
	IF ( "\" $ SubStr( cPathWorkFlow , -1 ) )
		cPathWorkFlow := SubStr( cPathWorkFlow , 1 , Len( cPathWorkFlow ) - 1 )
	EndIF
EndIF

Return( cPathWorkFlow  )

/*/
зддддддддддбддддддддддддддддбдддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdAddQst	    ЁAutorЁMarinaldo de Jesus Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддддддддадддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁCarrega as Questoes no Template HTML                        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdAddQst(	aParams 	,;
							aHtml		,;
							aRd8Header	,;
							aRd8Cols	,;
							aSqoHeader	,;
							aSqoCols	,;
							aSqpHeader	,;
							aSqpCols	 ;
						 )

Local aLstHtml		:= aClone( aHtml )

Local cRd3Fil		:= xFilial( "RD3" )
Local cRd8Fil		:= xFilial( "RD8" , cRd3Fil )
Local cSqoFil		:= xFilial( "SQO" , cRd3Fil )
Local cSqpFil		:= xFilial( "SQP" , cRd3Fil )
Local cRblFil		:= xFilial( "RBL" , cRd3Fil )
Local cLstIteCom	:= "__cLstIteCom__"

Local nQstNumber	:= 0
Local nSizeNames	:= 0
Local nOnlyOne		:= 0
Local nText			:= 0
Local nRd2Order 	:= RetOrdem( "RD2" , "RD2_FILIAL+RD2_CODIGO+RD2_ITEM" )
Local nRblOrder		:= RetOrdem( "RBL" , "RBL_FILIAL+RBL_ESCALA+RBL_ITEM" )
Local nQoFilial		:= GdFieldPos( "QO_FILIAL"	, aSqoHeader )
Local nQoQuestao	:= GdFieldPos( "QO_QUESTAO"	, aSqoHeader )
Local nQoQuest		:= GdFieldPos( "QO_QUEST"	, aSqoHeader )
Local nQoTipoObj	:= GdFieldPos( "QO_TIPOOBJ"	, aSqoHeader )
Local nQoEscala		:= GdFieldPos( "QO_ESCALA"	, aSqoHeader )
Local nQpFilial		:= GdFieldPos( "QP_FILIAL"	, aSqpHeader )
Local nQpQuestao	:= GdFieldPos( "QP_QUESTAO"	, aSqpHeader )
Local nQpAlterna	:= GdFieldPos( "QP_ALTERNA"	, aSqpHeader )
Local nQpDescric	:= GdFieldPos( "QP_DESCRIC"	, aSqpHeader )
Local nQpPercent	:= GdFieldPos( "QP_PERCENT"	, aSqpHeader )
Local nRd8CodQue	:= GdFieldPos( "RD8_CODQUE" , aRd8Header )
Local nRd8CodCom	:= GdFieldPos( "RD8_CODCOM" , aRd8Header )
Local nRd8IteCom	:= GdFieldPos( "RD8_ITECOM" , aRd8Header )

Local aRblHeader
Local aRblCols
Local aRblQuery

Local bSqoAscan
Local bSqpAscan

Local cKeySqo
Local cKeySqp
Local cQuestao
Local cCodAlt
Local cAltDesc
Local cCodCom
Local cIteCom
Local cTipoObj
Local cEscala
Local cAux
Local cName

Local nQuest
Local nQuests
Local nItensQst
Local nItemQst
Local nSqoPos
Local nSqpPos
Local nPercAlt
Local nRblItem
Local nRblDecri
Local nRblValor

bSqpAscan := { |x|	x[ nQpFilial  ] +	;
					x[ nQpQuestao ] ==	;
					cKeySqp;
		  }

bSqoAscan := { |x|	x[ nQoFilial  ] +	;
					x[ nQoQuestao ] ==	;
					cKeySqo;
		  }

nQuests := Len( aRd8Cols )
For nQuest := 1 To nQuests
	
	cQuestao	:= aRd8Cols[ nQuest , nRd8CodQue ]

	cKeySqo		:= ( cSqoFil + cQuestao )
	cKeySqp		:= ( cSqpFil + cQuestao )

	IF ( ( nSqoPos := aScan( aSqoCols , bSqoAscan ) ) == 0 )
		Loop
	EndIF

	IF ( ( cTipoObj := aSqoCols[ nSqoPos , nQoTipoObj ] ) <> "3" )	//Quando nao for dissertativa
		aRblCols	:= {}
		cEscala		:= aSqoCols[ nSqoPos , nQoEscala ]
		IF Empty( cEscala )
			IF ( ( nSqpPos := aScan( aSqpCols , bSqpAscan ) ) == 0 )
				Loop
			EndIF
		Else
			IF !PosAlias( "RBL" , cEscala , cRblFil , NIL , nRblOrder , .T. )
				Loop
			EndIF
			aRblQuery		:= Array( 05 )
			aRblQuery[01]	:= "RBL_FILIAL='"+cRblFil+"'"
			aRblQuery[02]	:= " AND "
			aRblQuery[03]	:= "RBL_ESCALA='"+cEscala+"'"
			aRblQuery[04]	:= " AND "
			aRblQuery[05]	:= "D_E_L_E_T_=' ' "
			aRblCols	:= GdBuildCols(	@aRblHeader		,;	//01 -> Array com os Campos do Cabecalho da GetDados
										NIL   			,;	//02 -> Numero de Campos em Uso
										NIL     		,;	//03 -> [@]Array com os Campos Virtuais
										NIL    			,;	//04 -> [@]Array com os Campos Visuais
										"RBL"			,;	//05 -> Opcional, Alias do Arquivo Carga dos Itens do aCols
										NIL				,;	//06 -> Opcional, Campos que nao Deverao constar no aHeader
										NIL				,;	//07 -> [@]Array unidimensional contendo os Recnos
										"RBL"		   	,;	//08 -> Alias do Arquivo Pai
										cRblFil+cEscala	,;	//09 -> Chave para o Posicionamento no Alias Filho
										NIL				,;	//10 -> Bloco para condicao de Loop While
										NIL				,;	//11 -> Bloco para Skip no Loop While
										.F.				,;	//12 -> Se Havera o Elemento de Delecao no aCols 
										.F.				,;	//13 -> Se Sera considerado o Inicializador Padrao
										.T.				,;	//14 -> Opcional, Carregar Todos os Campos
										.T.			 	,;	//15 -> Opcional, Nao Carregar os Campos Virtuais
										aRblQuery		,;	//16 -> Opcional, Utilizacao de Query para Selecao de Dados
										.F.				,;	//17 -> Opcional, Se deve Executar bKey  ( Apenas Quando TOP )
										.F.				,;	//18 -> Opcional, Se deve Executar bSkip ( Apenas Quando TOP )
										.F.				,;	//19 -> Carregar Coluna Fantasma e/ou BitMap ( Logico ou Array )
										.F.				,;	//20 -> Inverte a Condicao de aNotFields carregando apenas os campos ai definidos
										.F.				,;	//21 -> Verifica se Deve Checar se o campo eh usado
										.F.				,;	//22 -> Verifica se Deve Checar o nivel do usuario
										.F.				,;	//23 -> Verifica se Deve Carregar o Elemento Vazio no aCols
										NIL				,;	//24 -> [@]Array que contera as chaves conforme recnos
										.F.				,;	//25 -> [@]Se devera efetuar o Lock dos Registros
										.F.				,;	//26 -> [@]Se devera obter a Exclusividade nas chaves dos registros
										NIL				,;	//27 -> Numero maximo de Locks a ser efetuado
										.F.				 ;	//28 -> Utiliza Numeracao na GhostCol
									)
			nRblItem	:= GdFieldPos( "RBL_ITEM"	, aRblHeader )
			nRblDescri	:= GdFieldPos( "RBL_DESCRI" , aRblHeader )
			nRblValor	:= GdFieldPos( "RBL_VALOR"	, aRblHeader )
		EndIF
	EndIF

	cCodCom 	:= aRd8Cols[ nQuest  , nRd8CodCom ]
	cIteCom 	:= aRd8Cols[ nQuest	 , nRd8IteCom ]

	aAdd( aParams , { cCodCom , cIteCom , cQuestao  ,  {} } )
	nSizeNames := Len( aParams )

	++nQstNumber

	IF ( cIteCom <> cLstIteCom )
		cLstIteCom := cIteCom
		aAdd( aHtml , 	"<tr>" + CRLF )
		aAdd( aHtml ,		"<td width='100%' bgcolor='#993300' bordercolor='#008080' style='color: #FFFFFF; text-align:center'>" + CRLF )
		aAdd( aHtml ,			AllTrim( PosAlias( "RD2" , cCodCom+cIteCom , cRd8Fil , "RD2_DESC" , nRd2Order , .F. ) ) + CRLF )
		aAdd( aHtml ,		"</td>" + CRLF )
		aAdd( aHtml , 	"</tr>" + CRLF )
	EndIF	
	aAdd( aHtml , 	"<tr>" + CRLF )
	aAdd( aHtml ,		"<td width='100%' bgcolor='#008080' style='color: #FFFFFF; font-size: 10pt; text-align: justify'>" + CRLF )
	aAdd( aHtml ,			AllTrim( Str( nQstNumber ) ) + " - ) " + CRLF )
	aAdd( aHtml ,			AllTrim( aSqoCols[ nSqoPos , nQoQuest ] ) + CRLF )
	aAdd( aHtml ,		"</td>" + CRLF )
	aAdd( aHtml , 	"</tr>" + CRLF )
	aAdd( aHtml , 	"<tr>" + CRLF )
	aAdd( aHtml ,		"<td style='font-size: 10pt'>" + CRLF )
		IF ( ( cTipoObj == "1" ) .or. ( cTipoObj == "4" ) )    //CheckBox ( Multipa Escolha ou Pontuacao )
			aAdd( aHtml ,		"<ol>" + CRLF )
				IF Empty( cEscala )
					nItensQst := Len( aSqpCols )
					For nItemQst := nSqpPos To nItensQst
						IF ( aSqpCols[ nItemQst , nQpQuestao ] == cQuestao )
							cCodAlt		:= aSqpCols[ nItemQst , nQpAlterna ]
							nPercAlt	:= aSqpCols[ nItemQst , nQpPercent ]
							cName		:= ( "CB"+StrZero( nQstNumber , 04 ) + cQuestao + cCodAlt )
							cAltDesc	:= AllTrim( aSqpCols[ nItemQst , nQpDescric ] )
							aAdd( aHtml ,		"<li>" + CRLF )
							aAdd( aHtml ,			"<input type=checkbox name='%" + cName + "%' value='" + cCodAlt + "'>" + cAltDesc + CRLF )
							aAdd( aHtml ,		"</li>" + CRLF )
							aAdd( aParams[ nSizeNames , 04 ] , { cCodAlt , cName , nPercAlt , "" , "" } )
						Else
							Exit
						EndIF
					Next nItemQst
				Else
					nItensQst	:= Len( aRblCols )
					For nItemQst := 1 To nItensQst
						cCodAlt		:= aSqpCols[ nItemQst , nRblItem	]
						nPercAlt	:= aSqpCols[ nItemQst , nRblValor	]
						cName		:= ( "CB"+StrZero( nQstNumber , 04 ) + cQuestao + "RBL" + cCodAlt )
						cAltDesc	:= AllTrim( aSqpCols[ nItemQst , nRblDecri ] )
						aAdd( aHtml ,		"<li>" + CRLF )
						aAdd( aHtml ,			"<input type=checkbox name='%" + cName + "%' value='" + cCodAlt + "'>" + cAltDesc + CRLF )
						aAdd( aHtml ,		"</li>" + CRLF )
						aAdd( aParams[ nSizeNames , 04 ] , { "" , cName , nPercAlt , cCodAlt , cEscala } )
					Next nItemQst
				EndIF
			aAdd( aHtml ,		"</ol>" + CRLF )
		ElseIF ( cTipoObj == "2" )  // RadioButton ( Unica Escolha )
			aAdd( aHtml ,		"<ol>" + CRLF )
			++nOnlyOne
			IF Empty( cEscala )
				nItensQst := Len( aSqpCols )
				For nItemQst := nSqpPos To nItensQst
					IF ( aSqpCols[ nItemQst , nQpQuestao ] == cQuestao )
						cCodAlt		:= aSqpCols[ nItemQst , nQpAlterna ]
						nPercAlt	:= aSqpCols[ nItemQst , nQpPercent ]
						cName		:= ( "RB"+StrZero( nQstNumber , 04 ) + cQuestao + AllTrim( Str( nOnlyOne ) ) )
						cAltDesc	:= AllTrim( aSqpCols[ nItemQst , nQpDescric ] )         
						aAdd( aHtml ,		"<li>" + CRLF )
						aAdd( aHtml ,			"<input type=radio name='%" + cName + "%' value='" + cCodAlt +"'>" + cAltDesc + CRLF )
						aAdd( aHtml ,		"</li>" + CRLF )
						aAdd( aParams[ nSizeNames , 04 ] , { cCodAlt , cName , nPercAlt , "" , "" } )
					Else
						Exit
					EndIF
				Next nItemQst
			Else
				nItensQst := Len( aRblCols )
				For nItemQst := 1 To nItensQst
					cCodAlt		:= aRblCols[ nItemQst , nRblItem 	]
					nPercAlt	:= aRblCols[ nItemQst , nRblValor	]
					cName		:= ( "RB"+StrZero( nQstNumber , 04 ) + cQuestao + "RBL" + AllTrim( Str( nOnlyOne ) ) )
					cAltDesc	:= AllTrim( aRblCols[ nItemQst , nRblDescri ] )
					aAdd( aHtml ,		"<li>" + CRLF )
					aAdd( aHtml ,			"<input type=radio name='%" + cName + "%' value='" + cCodAlt +"'>" + cAltDesc + CRLF )
					aAdd( aHtml ,		"</li>" + CRLF )
					aAdd( aParams[ nSizeNames , 04 ] , { "" , cName , nPercAlt , cCodAlt , cEscala } )
				Next nItemQst
			EndIF
			aAdd( aHtml ,		"</ol>" + CRLF )
		ElseIF ( cTipoObj ==  "3" ) // TextArea ( Dissertativa )
			++nText
			cCodAlt		:= ""
			nPercAlt    := 0
			cName		:= ( "TA"+StrZero( nQstNumber , 04 ) + cQuestao + AllTrim( Str( nText ) ) )
			aAdd( aHtml ,		"<p>" + CRLF )
			aAdd( aHtml ,			"<textarea wrap=physical rows=9 cols=120 name='%"+cName+"%' value='' onKeyDown='textCounter(this.form."+cName+",this.form.remLen"+cName+",1024);' onKeyUp='textCounter(this.form."+cName+",this.form.remLen"+cName+",1024);' onblur='RemoveWhitespace(this.form."+cName+");textCounter(this.form."+cName+",this.form.remLen"+cName+",1024);'></textarea>" + CRLF )
			aAdd( aHtml ,			STR0021 /*/"MАximo de caracteres permitidos:"*/ + "<input readonly type=text name=remLen"+cName+" size=3 maxlength=3 value='1024'>" + CRLF )
			aAdd( aHtml ,		"</p>" + CRLF )
			aAdd( aParams[ nSizeNames , 04 ] , { cCodAlt , cName , nPercAlt , "" , "" } )
		EndIF
	aAdd( aHtml ,		"</td>" + CRLF )
	aAdd( aHtml ,	"</tr>" + CRLF )
Next nQuest

lAddOk := !ArrayCompare( aHtml , aLstHtml )

Return( lAddOk )

/*/
зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdSndBldAva  ЁAutor  ЁMarinaldo de Jesus Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддддддадддддддадддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁMonta o Objeto para envio da Avaliacao                      Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdSndBldAva( cPathFileWF , aParams , cTipoEnv , cCodMsgAva )

Local lApdSndBldAva	:= .T.

Local cIdoProcess
Local cUser
Local cUserNam
Local cMail
Local cTo     
Local cTwProcess
Local cParam
Local cRpcServer
Local cMsgAva
Local cRdgFilial
Local cRdgSeek

Local nRd0Order
Local nRdnOrder
Local nParam
Local nParams
Local nName
Local nNames   
Local cPathServer 
Local lCorpo
Local oProcess

Begin Sequence

	IF !( lApdSndBldAva := !Empty( cCodMsgAva ) )  .and. ( cTipoEnv == "1" )
		Break
	EndIF	
	cRdgFilial	:= xFilial( "RDG" )
	cRdgSeek	:= ( cRdgFilial + cCodMsgAva )
	RDG->( dbSetOrder( RetOrdem( "RDG" , "RDG_FILIAL+RDG_CODIGO+RDG_CODMEM" ) ) )
	IF !( lApdSndBldAva := RDG->( MsSeek( cRdgSeek , .F. ) ) ) .and. ( cTipoEnv == "1" )
		Break
	EndIF
	cMsgAva := ApdMsMm( RDG->RDG_CODMEM, NIL, NIL, NIL, 3, , , "RDG",)
	IF !( lApdSndBldAva := !Empty( cMsgAva ) ) .and. ( cTipoEnv == "1" )
		Break
	EndIF      
	
	IF !( Rd0GetUsrMail( RDC->RDC_FILIAL , RDC->RDC_CODDOR , @cUser , @cUserNam , @cMail , @cTo ) )
		Break
	EndIF

	cRpcServer := GetApdRpcServer()
	cTwProcess := ApdGetProc()
	IF !( ( lApdSndBldAva := ( SubStr( cTwProcess , 1 , 2 ) ) <> "-1" ) )
		ConOut( CRLF )
		ConOut( cTwProcess )
		ConOut( CRLF )
		Break
	EndIF
	
	oProcess := TWFProcess():New( cTwProcess, NEWTASKAPD )

	oProcess:NewVersion( .T. )
	oProcess:NewTask( NEWTASKAPD , cPathFileWF )       

	nRd0Order		:= RetOrdem( "RD0" , "RD0_FILIAL+RD0_CODIGO" )
	nRdnOrder		:= RetOrdem( "RDN" , "RDN_FILIAL+RDN_CODIGO" )

	oProcess:oHtml:ValByName( VarNotExcl( ADD_PATH_HTML				)	,	cPathFileWF )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_TITULO_HTML			)	,	AllTrim( RD6->RD6_DESC ) )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_ID				)	,	RDC->RDC_ID )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_DATA_DO_ENVIO			)	,	Dtoc( MsDate() ) )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_EMPRESA			)	, 	cEmpAnt			)
	oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_FILIAL			)	, 	cFilAnt			)
	oProcess:oHtml:ValByName( VarNotExcl( ADD_DESC_FILIAL			)	, 	SM0->( AllTrim( M0_NOMECOM ) + " / " + AllTrim( M0_FILIAL ) ) )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_AVALIACAO			)	,   RD6->RD6_CODIGO	)
	oProcess:oHtml:ValByName( VarNotExcl( ADD_DESC_AVALIACAO		)	,   AllTrim( RD6->RD6_DESC ) )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_DATA_INICIO_AVALIACAO	)	,   RD6->RD6_DTINI	)
	oProcess:oHtml:ValByName( VarNotExcl( ADD_DATA_FINAL_AVALIACAO	)	,   RD6->RD6_DTFIM	)
	oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_PROJETO			)	,   RDC->RDC_CODPRO	)
	oProcess:oHtml:ValByName( VarNotExcl( ADD_DESC_PROJETO			)	,   AllTrim( PosAlias( "RDN" , RDC->RDC_CODPRO , RDC->RDC_FILIAL , "RDN_DESC" , nRdnOrder , .F. ) ) )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_DATA_INICIO_PROJETO	)	,   RDC->RDC_DTIAVA )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_DATA_FINAL_PROJETO	)	,   RDC->RDC_DTFAVA	)
	oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_AVALIADOR			)	,	RDC->RDC_CODDOR )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_NOME_AVALIADOR		)	,	AllTrim( PosAlias( "RD0" , RDC->RDC_CODDOR , RDC->RDC_FILIAL , "RD0_NOME" , nRd0Order , .F. ) ) )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_AVALIADO			)	,	RDC->RDC_CODADO )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_NOME_AVALIADO			)	,	AllTrim( PosAlias( "RD0" , RDC->RDC_CODADO , RDC->RDC_FILIAL , "RD0_NOME" , nRd0Order , .F. ) ) )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_DT_LIM_RSP			)	,	Dtoc( RDC->RDC_DTLIMR ) )
	oProcess:oHtml:ValByName( VarNotExcl( ADD_MSG					)	,	cMsgAva )

	IF ( cTipoEnv == "2" )
		nParams := Len( aParams )
		For nParam := 1 To nParams
			nNames := Len( aParams[ nParam , 04 ] )
			For nName := 1 To nNames
				cParam	:= aParams[ nParam , 04 , nName , 02 ]
				oProcess:oHtml:ValByName( cParam , NIL )
			Next nName
		Next nParam
		oProcess:aParams	:= aClone( aParams )
		
	    If !lCorpo                                             
			oProcess:cBody := STR0010 +" :" + AllTrim( RD6->RD6_DESC )+ "<P>" + cMsgAva + "</P>"	
	    EndIf
	EndIF
	
	oProcess:bReturn	:= "ApdSndRet()"
	oProcess:bTimeOut	:= GetAvSndOut( 0 , RDP->( Min( RDP_INIRSP , RDP_DATGER ) ) , RDC->RDC_DTLIMR )
		
	oProcess:cSubject	:=	RD6->RD6_DESC
	lCorpo:= WFGetMV("MV_WFHTML", .F. )

	oProcess:cTo		:=	If(lCorpo, "apdavaliacao\"+Alltrim(RD6->RD6_CODIGO), cTo)
	oProcess:UserSiga	:= cUser
	
	IF !( lApdSndBldAva := !Empty( cIdoProcess := oProcess:Start() ) )
		Break
	EndIF
	         
	ApdSndRdcPut( cIdoProcess , cUser , cUserNam , cMail )
	
	RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
				oProcess:fProcCode						 ,;	//Codigo do Processo
				"100001"								 ,;	//Tipo do processo
				NIL										 ,;	//Descricao (Obtem do WF2)	
				cUserNam								  ; //Usuario
				)
	
	RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
				oProcess:fProcCode						 ,;	//Codigo do Processo
				"100003"								 ,;	//Tipo do processo
				NIL										 ,;	//Descricao (Obtem do WF2)	
				cUserNam								  ; //Usuario
				)
	
		                         
	// Corpo do e-mail com a descricao da avaliacao e o link para acesso a arquivo html de resposta
		
	If ( cTipoEnv == "2" ) .and. lCorpo     // Se for tipo envio de avaliacao e for mostrando no corpo do e-mail
		
		ApdMkAviso( @cPathFileWF, "2" )  
		oProcess:NewTask(NEWTASKAPD, cPathFileWF,.T.)  
		
		oProcess:cSubject := RD6->RD6_DESC      // Assunto
		oProcess:cTo := cto 					// Destinatario
		
		oProcess:ohtml:ValByName("Name_link",RD6->RD6_DESC)   
		cPathServer:= getmv("MV_WFBRWSR")
		   
		//EndereГo onde os arquivos html estao gravados
		If WFGetMV("MV_WFWEBEX", .F. )
			oProcess:ohtml:ValByName("proc_link","http://"+cPathServer+"/w_wfhttpret.apw?ProcID=apdavaliacao/"+Alltrim(RD6->RD6_CODIGO)+"/" + cIdoProcess + ".htm")
		Else
			oProcess:ohtml:ValByName("proc_link","http://"+cPathServer+"/messenger/emp"+cempant+"/apdavaliacao/"+Alltrim(RD6->RD6_CODIGO)+"/" + cIdoProcess + ".htm")
		End    
		oProcess:Start()                       
	ElseIf ( cTipoEnv == "1" ) 
	   	ApdMkAviso( @cPathFileWF, "2" )  
		oProcess:NewTask(NEWTASKAPD, cPathFileWF,.T.)  
		oProcess:cSubject := RD6->RD6_DESC      // Assunto
		oProcess:cTo := cto 					// Destinatario
		oProcess:Start()      
	EndIf

End Sequence

Return( lApdSndBldAva )

/*/
зддддддддддбдддддддддддддддбдддддбддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁGetApdRpcServerЁAutorЁMarinaldo de Jesus  Ё Data Ё10/12/2003Ё
цддддддддддедддддддддддддддадддддаддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁRetorna o Host de Execucao do SIGAAPD                       Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function GetApdRpcServer()

Local cRpcServer

cRpcServer := GetJobProfString( "ApdRpcServer" , ""  )
IF Empty( cRpcServer )
	cRpcServer := GetJobProfString( "RpcServer" , ""  )
	IF Empty( cRpcServer )
		cRpcServer	:= GetPvProfString( "HTTP" , "ApdRpcServer" , "" , GetAdv97() )
		IF Empty( cRpcServer )
			cRpcServer	:= GetPvProfString( "HTTP" , "RpcServer" , "" , GetAdv97() )
		EndIF
	EndIF
EndIF

Return( cRpcServer )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdWF1Wf2PutЁAutorЁMarinaldo de Jesus	  Ё Data Ё10/12/2003Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁGrava o Numero do Processo no WF1                           Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdWF1Wf2Put( cTwProcess )
                
WF1->( dbSetOrder( RetOrdem( "WF1" , "WF1_FILIAL+WF1_COD" ) ) )
IF WF1->( !dbSeek( xFilial( "WF1" ) + cTwProcess , .F. ) )
	WF1->( RecLock( "WF1" , .T. ) )
		WF1->WF1_FILIAL := xFilial( "WF1" )
		WF1->WF1_COD	:= cTwProcess
		WF1->WF1_DESCR	:= STR0022	//"Envio de Avaliacoes"
	WF1->( MsUnLock() )
EndIF

WF1->( dbSetOrder( RetOrdem( "WF2" , "WF2_FILIAL+WF2_PROC+WF2_STATUS" ) ) )
IF WF2->( !dbSeek( xFilial( "WF2" ) + cTwProcess + "100001" , .F. ) )
	WF2->( RecLock( "WF2" , .T. ) )
		WF2->WF2_FILIAL := xFilial( "WF2" )
		WF2->WF2_PROC 	:= cTwProcess
		WF2->WF2_STATUS	:= "100001"
		WF2->WF2_DESCR	:= STR0023	//"Inicio do Envio"
	WF2->( MsUnLock() )	
EndIF

IF WF2->( !dbSeek( xFilial( "WF2" ) + cTwProcess + "100002" , .F. ) )
	WF2->( RecLock( "WF2" , .T. ) )
		WF2->WF2_FILIAL := xFilial( "WF2" )
		WF2->WF2_PROC 	:= cTwProcess
		WF2->WF2_STATUS	:= "100002"
		WF2->WF2_DESCR	:= STR0024	//"Envio Ok"
	WF2->( MsUnLock() )	
EndIF

IF WF2->( !dbSeek( xFilial( "WF2" ) + cTwProcess + "100003" , .F. ) )
	WF2->( RecLock( "WF2" , .T. ) )
		WF2->WF2_FILIAL := xFilial( "WF2" )
		WF2->WF2_PROC 	:= cTwProcess
		WF2->WF2_STATUS	:= "100003"
		WF2->WF2_DESCR	:= STR0025	//"Aguardando Retorno"
	WF2->( MsUnLock() )	
EndIF

IF WF2->( !dbSeek( xFilial( "WF2" ) + cTwProcess + "100004" , .F. ) )
	WF2->( RecLock( "WF2" , .T. ) )
		WF2->WF2_FILIAL := xFilial( "WF2" )
		WF2->WF2_PROC 	:= cTwProcess
		WF2->WF2_STATUS	:= "100004"
		WF2->WF2_DESCR	:= STR0026	//"Envio de Cobranca"
	WF2->( MsUnLock() )	
EndIF

IF WF2->( !dbSeek( xFilial( "WF2" ) + cTwProcess + "100005" , .F. ) )
	WF2->( RecLock( "WF2" , .T. ) )
		WF2->WF2_FILIAL := xFilial( "WF2" )
		WF2->WF2_PROC 	:= cTwProcess
		WF2->WF2_STATUS	:= "100005"
		WF2->WF2_DESCR	:= STR0027	//"Reenvio da Avaliacao"
	WF2->( MsUnLock() )	
EndIF

IF WF2->( !dbSeek( xFilial( "WF2" ) + cTwProcess + "100006" , .F. ) )
	WF2->( RecLock( "WF2" , .T. ) )
		WF2->WF2_FILIAL := xFilial( "WF2" )
		WF2->WF2_PROC 	:= cTwProcess
		WF2->WF2_STATUS	:= "100006"
		WF2->WF2_DESCR	:= STR0028	//"Avaliacao Retornada"
	WF2->( MsUnLock() )
EndIF

IF WF2->( !dbSeek( xFilial( "WF2" ) + cTwProcess + "100007" , .F. ) )
	WF2->( RecLock( "WF2" , .T. ) )
		WF2->WF2_FILIAL := xFilial( "WF2" )
		WF2->WF2_PROC 	:= cTwProcess
		WF2->WF2_STATUS	:= "100007"
		WF2->WF2_DESCR	:= STR0029	//"Processo Finalizado"
	WF2->( MsUnLock() )
EndIF

Return( NIL )

/*/
зддддддддддбддддддддддддбдддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdSndRdcPutЁAutorЁMarinaldo de Jesus	  Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддддадддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁInicializa o Processo de WorkFlow                           Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdSndRdcPut( cIdoProcess , cUser , cUserNam , cMail )

IF RDC->( RecLock( "RDC" , .F. , .F. ) )
	RDC->RDC_FILIAL	:= xFilial( "RDC" )
	RDC->RDC_ATIVO	:= RD6->RD6_STATUS
	RDC->RDC_TIPO	:= "1"	//Pendente
	RDC->RDC_IDENT	:= cIdoProcess
	RDC->RDC_CHKENV	:= "1"	//Sim
	RDC->RDC_USER	:= cUser
	RDC->RDC_USRNAM	:= cUserNam
	RDC->RDC_EMAIL	:= cMail
	RDC->( MsUnlock() )
EndIF

Return( .T. )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdSndRet ЁAutor  ЁMarinaldo de Jesus	  Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁControla o Retorno das Avaliacoes Endiadas                  Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function ApdSndRet( oProcess )

Local aParams		:= {}
Local aJaProc		:= {}
Local cSvEmpAnt		:= cEmpAnt
Local cSvFilAnt		:= cFilAnt

Local aEmpFil

Local cRdbSeek
Local cRdbSeek1
Local cRdcSeek
Local cFil
Local cRdcFil
Local cRdcId
Local cRdbFil
Local cAlterna
Local cEscala
Local cItemEsc

Local lTextArea
Local lSetCentury
Local lRdbAddNew
Local lRd5Identi

Local nParam
Local nParams
Local nPosEmpFil
Local nName
Local nNames
Local nSM0Recno

Begin Sequence
	
	IF ( Select( "SM0" ) > 0 )
		nSM0Recno := SM0->( Recno() )
	EndIF
	aEmpFil := ArrEmpFilGet()

	cEmp	:= oProcess:oHtml:RetByName( VarNotExcl( ADD_COD_EMPRESA ) )
	cFil	:= oProcess:oHtml:RetByName( VarNotExcl( ADD_COD_FILIAL  ) )

	IF ( ( nPosEmpFil := aScan( aEmpFil , { |x| ( ( x[ 01 ] == cEmp ) .and. ( x[ 02 ] == cFil ) ) } ) ) == 0 )
		Break
	EndIF
	
	SM0->( MsGoto( aEmpFil[ nPosEmpFil , 03 ] ) )

	cRdcFil 	:= xFilial( "RDC" , cFil )
	cRdcId		:= oProcess:oHtml:RetByName( VarNotExcl( ADD_COD_ID ) )

	cRdcSeek	:= cRdcFil
	cRdcSeek	+= cRdcId

	RDC->( dbSetOrder( RetOrdem( "RDC" , "RDC_FILIAL+RDC_ID" ) ) )

	IF !( RDC->( MsSeek( cRdcSeek , .F. ) ) )
		Break
	EndIF

	RDC->( ApdEnvChk( RDC_FILIAL , Recno() ) )

	RD6->( dbSetOrder( RetOrdem( "RD6" , "RD6_FILIAL+RD6_CODIGO" ) ) )
	IF !RD6->( MsSeek( xFilial( "RD6" , cFil ) + RDC->RDC_CODAVA , .F. ) )
		Break
	EndIF

	RD5->( dbSetOrder( RetOrdem( "RD5" , "RD6_FILIAL+RD6_CODIGO" ) ) )
	RD5->( MsSeek( xFilial( "RD5" , cFil ) + RDC->RDC_CODTIP , .F. ) )
	lRd5Identi	:= ( RD5->RD5_IDENTI == "1" ) //Identifica Avaliador

	RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
				oProcess:fProcCode						 ,;	//Codigo do Processo
				"100006"								 ,;	//Tipo do processo
				NIL										 ,;	//Descricao (Obtem do WF2)	
				AllTrim( RDC->RDC_USRNAM )				  ; //Usuario
			  )

	cRdbFil		:= xFilial( "RDB" , cFil )

	aParams := aClone( oProcess:aParams )
	nParams := Len( aParams )
	For nParam := 1 To nParams

		cRdbSeek := cRdbFil
		cRdbSeek +=	cRdcId
		cRdbSeek += aParams[ nParam , 01 ]	//Competencia
		cRdbSeek += aParams[ nParam , 02 ]	//Item de Competencia
		cRdbSeek += aParams[ nParam , 03 ]	//Questao

		nNames := Len( aParams[ nParam , 04 ] )
		For nName := 1 To nNames

			lTextArea := ( "TA" $ SubStr( aParams[ nParam , 04 , nName , 02 ] , 1 , 2 ) )

			IF (;
					( ( cAlterna := oProcess:oHtml:RetByName( aParams[ nParam , 04 , nName , 02 ] ) ) == NIL ) ;
				)	
				Loop
			EndIF

			cEscala		:= ""	
			cItemEsc	:= ""
			IF ( SubStr( aParams[ nParam , 04 , nName , 02 ] , 1 , 3 ) == "RBL" )
				cItemEsc	:= cAlterna
				cEscala		:= aParams[ nParam , 04 , nName , 05 ]
				cAlterna	:= ""
			EndIF

			IF !( lTextArea )
				
				IF Empty( cItemEsc )
					IF (;
							( aScan( aParams[ nParam , 04 ] , { |x| ( cAlterna == x[ 01 ] ) } ) == 0 );
					 	)
					 	Loop
					EndIF
				Else
					IF (;
							( aScan( aParams[ nParam , 04 ] , { |x| ( cItemEsc == x[ 04 ] ) .and. ( cEscala == x[ 05 ] ) } ) == 0 );
					 	)
					 	Loop
					EndIF
				EndIF	

				IF ( aScan( aJaProc , { |x| x[ 01 ] == aParams[ nParam , 01 ] .and. ;	//Codigo da Competencia
										 	x[ 02 ] == aParams[ nParam , 02 ] .and. ;	//Item de Competencia
											x[ 03 ] == aParams[ nParam , 03 ] .and. ;	//Codigo da Questao
											x[ 04 ] == cAlterna				  .and.	;	//Codigo da Alternativa ou Dissertativo
											x[ 05 ] == cEscala				  .and. ;	//Codigo da Escala
											x[ 06 ] == cItemEsc				        ;	//Codigo do Item da Escala
				 					  };
			 				) > 0;
			 		)
   					Loop
   				EndIF
			EndIF

			cRdbSeek1 := cRdbSeek
			IF Empty( cEscala )
				cRdbSeek1 += aParams[ nParam , 04 , nName , 01 ]
				RDB->( dbSetOrder( RetOrdem( "RDB" , "RDB_FILIAL+RDB_ID+RDB_CODCOM+RDB_ITECOM+RDB_CODQUE+RDB_CODALT" ) ) )
			Else
				cRdbSeek1 += aParams[ nParam , 04 , nName , 05 ]
				cRdbSeek1 += aParams[ nParam , 04 , nName , 04 ]
				RDB->( dbSetOrder( RetOrdem( "RDB" , "RDB_FILIAL+RDB_ID+RDB_CODCOM+RDB_ITECOM+RDB_CODQUE+RDB_ESCALA+RDB_ITEESC" ) ) )
			EndIF

			lRdbAddNew := RDB->( !MsSeek( cRdbSeek1 , .F. ) )
			IF !RDB->( RecLock( "RDB" , lRdbAddNew ) )
				Break
			EndIF

			aAdd( aJaProc , {;
									aParams[ nParam , 01 ]	,;	//Codigo da Competencia
									aParams[ nParam , 02 ]	,;	//Item de Competencia
									aParams[ nParam , 03 ]	,;	//Codigo da Questao
									cAlterna				,;	//Codigo da Alternativa ou Dissertativo
									cEscala					,;	//Codigo da Escala
									cItemEsc				 ;	//Codigo do Item da Escala
							 };
				 )

			RDB->RDB_FILIAL := cRdbFil
			RDB->RDB_CODAVA := RDC->RDC_CODAVA
			RDB->RDB_CODADO := RDC->RDC_CODADO
			RDB->RDB_CODPRO := RDC->RDC_CODPRO
			IF ( lRd5Identi )
				RDB->RDB_CODDOR := RDC->RDC_CODDOR
			Else
				RDB->RDB_CODDOR := Space( GetSx3Cache( "RDB_CODDOR" , "X3_TAMANHO" ) )
			EndIF
			RDB->RDB_TIPOAV	:= RDC->RDC_TIPOAV
			RDB->RDB_DTIAVA	:= RDC->RDC_DTIAVA
			RDB->RDB_DTFAVA	:= RDC->RDC_DTFAVA
			RDB->RDB_CODMOD	:= RD6->RD6_CODMOD
			RDB->RDB_CODCOM := aParams[ nParam , 01 ]
			RDB->RDB_ITECOM	:= aParams[ nParam , 02 ]
			RDB->RDB_CODTIP	:= RDC->RDC_CODTIP
			RDB->RDB_CODNET	:= RDC->RDC_CODNET
			RDB->RDB_CODQUE := aParams[ nParam , 03 ]
			IF !( lTextArea )
				IF Empty( cEscala )
					RDB->RDB_CODALT	:= aParams[ nParam , 04 , nName , 01 ]
				Else
					RDB->RDB_ESCALA	:= aParams[ nParam , 04 , nName , 05 ]
					RDB->RDB_ITEESC	:= aParams[ nParam , 04 , nName , 04 ]
				EndIF
			Else
				RDB->RDB_MEMO	:= cAlterna
			EndIF
			RDB->RDB_RESOBT	:= aParams[ nParam , 04 , nName , 03 ]
			RDB->RDB_ID		:= RDC->RDC_ID
			RDB->( MsUnlock() )

		Next nName
	
	Next nParam

	IF RDC->( RecLock( "RDC" , .F. ) )
		IF Empty( RDC->RDC_DATENV )
			RDC->RDC_DATENV := Ctod( oProcess:oHtml:RetByName( VarNotExcl( ADD_DATA_DO_ENVIO ) ) , "DDMMYYYY" )
		EndIF
		RDC->RDC_DATRET := MsDate()
		RDC->RDC_TIPO	:= "3"	//Retornado
		RDC->( MsUnLock() )
	EndIF

	RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
				oProcess:fProcCode						 ,;	//Codigo do Processo
				"100007"								 ,;	//Tipo do processo
				NIL										 ,;	//Descricao (Obtem do WF2)	
				AllTrim( RDC->RDC_USRNAM )				  ; //Usuario
              )
	oProcess:Finish()

End Sequence

IF ( cEmpAnt <> cSvEmpAnt )
	cEmpAnt := cSvEmpAnt
EndIF

IF ( cFilAnt <> cSvFilAnt )
	cFilAnt := cSvFilAnt 
EndIF

IF !Empty( nSM0Recno )
	SM0->( MsGoto( nSM0Recno ) )
EndIF

Return( .T. )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdSndOut ЁAutor  ЁMarinaldo de Jesus	  Ё Data Ё14/01/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁControla o Retorno das Avaliacoes enviadas                  Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function ApdSndOut( nQuant , oProcess )

Local lStartOk	:= .T.

Local cFil
Local cRdcSeek
Local cRdcFil
Local cRdcId
Local cRdpSeek
Local cTo
Local cUser
Local cUserNam
Local cMail
Local cIdoProcess

Local nAtReenv

Local lMsgCob

Begin Sequence

	cFil		:= oProcess:oHtml:ValByName( ADD_COD_FILIAL )
	cRdcId		:= oProcess:oHtml:ValByName( ADD_COD_ID )

	cRdcFil		:= xFilial( "RDC" , cFil )
	cRdcSeek	:= cRdcFil
	cRdcSeek	+= cRdcId

	RDC->( dbSetOrder( RetOrdem( "RDC" , "RDC_FILIAL+RDC_ID" ) ) )

	IF RDC->( !MsSeek( cRdcSeek , .F. ) )
		RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
					oProcess:fProcCode						 ,;	//Codigo do Processo
					"100007"								 ,;	//Tipo do processo
					NIL										 ,;	//Descricao (Obtem do WF2)	
					AllTrim( RDC->RDC_USRNAM )				  ; //Usuario
    	          )
   		oProcess:Finish()
		Break
	EndIF

	RD6->( dbSetOrder( RetOrdem( "RD6" , "RD6_FILIAL+RD6_CODIGO" ) ) )
	IF RD6->( !MsSeek( xFilial( "RD6" ) + RDC->RDC_CODAVA , .F. ) )
		RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
					oProcess:fProcCode						 ,;	//Codigo do Processo
					"100007"								 ,;	//Tipo do processo
					NIL										 ,;	//Descricao (Obtem do WF2)	
					AllTrim( RDC->RDC_USRNAM )				  ; //Usuario
    	          )
   		oProcess:Finish()
		Break
	EndIF

	RDC->( ApdEnvChk( RDC_FILIAL , Recno() ) )

	RDP->( dbSetOrder( RetOrdem( "RDP" , "RDP_FILIAL+RDP_CODAVA+DTOS(RDP_DATINI)" ) ) )
	cRdpSeek := ( xFilial( "RDP" , cFil ) + RDC->( RDC_CODAVA + Dtos( RDC_DTIAVA ) ) )
	IF RDP->( !MsSeek( cRdpSeek , .F. ) )
		RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
					oProcess:fProcCode						 ,;	//Codigo do Processo
					"100007"								 ,;	//Tipo do processo
					NIL										 ,;	//Descricao (Obtem do WF2)	
					AllTrim( RDC->RDC_USRNAM )				  ; //Usuario
    	          )
   		oProcess:Finish()
		Break
	EndIF

	IF ( RDC->RDC_ATIVO == "2" )
		RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
					oProcess:fProcCode						 ,;	//Codigo do Processo
					"100007"								 ,;	//Tipo do processo
					NIL										 ,;	//Descricao (Obtem do WF2)	
					AllTrim( RDC->RDC_USRNAM )				  ; //Usuario
    	          )
   		oProcess:Finish()
		Break
	EndIF

	IF !Empty( RDC->RDC_DATRET )
		RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
					oProcess:fProcCode						 ,;	//Codigo do Processo
					"100007"								 ,;	//Tipo do processo
					NIL										 ,;	//Descricao (Obtem do WF2)	
					AllTrim( RDC->RDC_USRNAM )				  ; //Usuario
    	          )
   		oProcess:Finish()
		Break
	EndIF

	IF !( lMsgCob := ( MsDate() > RDC->RDC_DTLIMR ) )
		//...Nao chegou a Hora de Efetuar a Cobranca.
		Break
	EndIF

	IF ( nQuant > RDP->RDP_QTDCOB )
		IF Rd0GetUsrMail( RD6->RD6_FILIAL , RD6->RD6_CODRSP , NIL , NIL , @cTo )
			lStartOk := ApdSndMsg( RD6->RD6_FILIAL , cTo , RDP->RDP_MEMRSP )
		EndIF
	EndIF

	IF RDC->( RecLock( "RDC" , .F. ) )
		RDC->RDC_QTDCOB := nQuant
		RDC->( MsUnLock() )
	EndIF

	IF ( RDP->RDP_TIPCOB $ "2_3" )

		IF !( lStartOk := Rd0GetUsrMail( RDC->RDC_FILIAL , RDC->RDC_CODDOR , @cUser , @cUserNam , @cMail , @cTo ) )
			oProcess:Finish()
			Break
		EndIF

		oProcess:NewTask( NEWTASKAPD , oProcess:cHtmlFile , .T. )

		oProcess:bTimeOut := GetAvSndOut( nQuant )

		nAtReenv := At( STR0030 , oProcess:cSubject )
		IF ( nAtReenv > 0 )
			oProcess:cSubject := SubStr( oProcess:cSubject , 1 , ( nAtReenv - 1 ) )
		EndIF
		oProcess:cSubject	+= STR0030 //" ( Reenvio ) "
		oProcess:cSubject	+= " - "
		oProcess:cSubject	+= AllTrim( Str( RDC->RDC_QTDCOB ) )

		oProcess:cTo		:=	cTo

		IF ( lStartOk := !Empty( cIdoProcess := oProcess:Start() ) )

			ApdSndRdcPut( cIdoProcess , cUser , cUserNam , cMail )

			RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
						oProcess:fProcCode						 ,;	//Codigo do Processo
						"100001"								 ,;	//Tipo do processo
						NIL										 ,;	//Descricao (Obtem do WF2)	
						cUserNam								  ; //Usuario
					   )

			RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
						oProcess:fProcCode						 ,;	//Codigo do Processo
						"100005"								 ,;	//Tipo do processo
						NIL										 ,;	//Descricao (Obtem do WF2)	
						cUserNam								  ; //Usuario
					   )

		EndIF

		IF ( RDP->RDP_TIPCOB == "3" )
			cTo			:= oProcess:cTo
			lStartOk	:= ApdSndMsg( RDC->RDC_FILIAL , cTo , RDP->RDP_MEMCOB )
		EndIF
	
	ElseIF ( RDP->RDP_TIPCOB == "1" )

		cTo			:= oProcess:cTo
		lStartOk	:= ApdSndMsg( RDC->RDC_FILIAL , cTo , RDP->RDP_MEMCOB )

	EndIF

End Sequence

Return( lStartOk )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdSndMsg ЁAutor  ЁMarinaldo de Jesus	  Ё Data Ё18/12/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁEnvia Mensagens                                             Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdSndMsg( cFil , cTo , cCodMsg )

Local lStartOk		:= .T.

Local aHtml

Local cMsg
Local cMakeDir
Local cTwProcess
Local cFile
Local cRdgFil
Local cKeySeek

Local nRd0Order
Local nRdnOrder

Local oProcessMsg

Begin Sequence

	IF !( lStartOk := !Empty( cTo ) )
		Break
	EndIF

	cTwProcess := ApdGetProc()
	IF !( ( lStartOk := ( SubStr( cTwProcess , 1 , 2 ) ) <> "-1" ) )
		ConOut( CRLF )
		ConOut( cTwProcess )
		ConOut( CRLF )
		Break
	EndIF

	cRdgFil 	:= xFilial( "RDG" , cFil )
	cKeySeek	:= ( cRdgFil + cCodMsg )

	RDG->( dbSetOrder( RetOrdem( "RDG" , "RDG_FILIAL+RDG_CODIGO+RDG_CODMEM" ) ) )
	IF RDG->( MsSeek( cKeySeek , .F. ) )
		cMsg	:= ApdMsMm( RDG->RDG_CODMEM, NIL, NIL, NIL, 3, , , "RDG",)
	Else
		cMsg	:= STR0032	//"Existem Avaliacoes Pendentes"
	EndIF

	aHtml := {}
	aAdd( aHtml ,	"<html>" + CRLF )
	aAdd( aHtml ,		"<body>" + CRLF )
	aAdd( aHtml ,			"<table style='font-size: 10pt; border-collapse: collapse' bordercolor='#111111' cellpadding='0' cellspacing='0'>" + CRLF )
	aAdd( aHtml ,				"<tr>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0009 + CRLF )	//"Empresa/Filial :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_COD_EMPRESA +"/" + ADD_COD_FILIAL + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DESC_FILIAL + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,				"</tr>" + CRLF )
	aAdd( aHtml ,				"<tr>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0010 + CRLF ) //"AvaliaГЦo :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_COD_AVALIACAO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )	
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DESC_AVALIACAO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0011 + CRLF )	//"Periodo :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DATA_INICIO_AVALIACAO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DATA_FINAL_AVALIACAO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,				"</tr>" + CRLF )
	aAdd( aHtml ,				"<tr>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0012 + CRLF )	//"Projeto :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_COD_PROJETO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DESC_PROJETO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0011 + CRLF )	//"Periodo :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DATA_INICIO_PROJETO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_DATA_FINAL_PROJETO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,				"</tr>" + CRLF )
	aAdd( aHtml ,				"<tr>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0013 + CRLF	)	//"Avaliado :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_COD_AVALIADO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )	
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_NOME_AVALIADO + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )	
	aAdd( aHtml ,				"</tr>" + CRLF )
	aAdd( aHtml ,				"<tr>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						"<b>" + CRLF )
	aAdd( aHtml ,							STR0014 + CRLF )	//"Avaliador :"
	aAdd( aHtml ,						"</b>" + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_COD_AVALIADOR + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						" - " + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,					"<td>" + CRLF )
	aAdd( aHtml ,						ADD_NOME_AVALIADOR + CRLF )
	aAdd( aHtml ,					"</td>" + CRLF )
	aAdd( aHtml ,				"</tr>" + CRLF )
	aAdd( aHtml ,			"</table>" + CRLF )
	aAdd( aHtml ,			"<p style='LINE-HEIGHT:100%' align='justify'>" + CRLF )
	aAdd( aHtml ,				ADD_MSG + CRLF )
	aAdd( aHtml ,			"</p>" + CRLF )
	aAdd( aHtml ,		"</body>" + CRLF )
	aAdd( aHtml ,	"</html>" + CRLF )

	ApdAddVar( @aHtml )

	cMakeDir	:= ApdGetPath()
	cFile 		:= "APDSDMSG.HTM"
	IF !( lStartOk := ApdHtmlMke( aHtml , @cMakeDir , cFile , .T. ) )
		Break
	EndIF

	oProcessMsg := TWFProcess():New( cTwProcess , NEWTASKAPD )

	oProcessMsg:NewVersion( .T. )
	oProcessMsg:NewTask( NEWTASKAPD , cMakeDir )
	oProcessMsg:cSubject	:= STR0031	//"Aviso de Avaliacao Pendente"
	oProcessMsg:cTo		 	:= cTo

	nRd0Order	:= RetOrdem( "RD0" , "RD0_FILIAL+RD0_CODIGO" )
	nRdnOrder	:= RetOrdem( "RDN" , "RDN_FILIAL+RDN_CODIGO" )

	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_COD_EMPRESA			)	, 	cEmpAnt			)
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_COD_FILIAL				)	, 	cFilAnt			)
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_DESC_FILIAL			)	, 	SM0->( AllTrim( M0_NOMECOM ) + " / " + AllTrim( M0_FILIAL ) ) )
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_COD_AVALIACAO			)	,   RD6->RD6_CODIGO	)
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_DESC_AVALIACAO			)	,   AllTrim( RD6->RD6_DESC ) )
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_DATA_INICIO_AVALIACAO	)	,   RD6->RD6_DTINI	)
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_DATA_FINAL_AVALIACAO	)	,   RD6->RD6_DTFIM	)
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_COD_PROJETO			)	,   RDC->RDC_CODPRO	)
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_DESC_PROJETO			)	,   AllTrim( PosAlias( "RDN" , RDC->RDC_CODPRO , RDC->RDC_FILIAL , "RDN_DESC" , nRdnOrder , .F. ) ) )
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_DATA_INICIO_PROJETO	)	,   RDC->RDC_DTIAVA )
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_DATA_FINAL_PROJETO		)	,   RDC->RDC_DTFAVA	)
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_COD_AVALIADOR			)	,	RDC->RDC_CODDOR )
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_NOME_AVALIADOR			)	,	AllTrim( PosAlias( "RD0" , RDC->RDC_CODDOR , RDC->RDC_FILIAL , "RD0_NOME" , nRd0Order , .F. ) ) )
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_COD_AVALIADO			)	,	RDC->RDC_CODADO )
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_NOME_AVALIADO			)	,	AllTrim( PosAlias( "RD0" , RDC->RDC_CODADO , RDC->RDC_FILIAL , "RD0_NOME" , nRd0Order , .F. ) ) )
	oProcessMsg:oHtml:ValByName( VarNotExcl( ADD_MSG					)	, 	cMsg			)

	lStartOk := !Empty( oProcessMsg:Start() )

End Sequence

Return( lStartOk )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdGetProcЁAutor  ЁMarinaldo de Jesus	  Ё Data Ё08/12/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁRetorna um Numero de Processo Valido                        Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdGetProc()

Local nGetSX8Len := GetSX8Len()

Local cNewProc
Local bGetNrExclOk
Local lGetNrExclOk

Begin Sequence

	IF !( CheckModWF1() )
		cNewProc := "-1/NoParam( MV_APDPROC )"
		Break
	EndIF

	IF ( ( cNewProc := GetMv( "MV_APDPROC" , NIL , "-1/NoParam( MV_APDPROC )" ) ) == "-1/NoParam( MV_APDPROC )" )
		Break
	EndIF

	IF ( SubStr( cNewProc , 1 , 2 ) <> "-1" ).AND.!Empty( cNewProc )
		Break
	EndIF

	//IF Empty( cNewProc )
	//	cNewProc := Replicate( "0" , GetSx3Cache( "WF1_COD" , "X3_TAMANHO" ) )
	//EndIF

	bGetNrExclOk := { || lGetNrExclOk := GetNrExclOk( @cNewProc , "WF1" , "WF1_COD" , "WF1_FILIAL+WF1_COD" , NIL , .F. , .F. ) }
    CheckExecForm( bGetNrExclOk , .F. )
	IF !( lGetNrExclOk )
		cNewProc := "-1/NoUsedCode"
		Break
	EndIF

	IF !( PutMvFil( "MV_APDPROC" , cNewProc , cFilAnt ) )
		cNewProc := "-1/Error in PutMvFil to param MV_APDPROC"
		Break
	EndIF

End Sequence
	
IF Empty( cNewProc )
	cNewProc := "-1/UndefinedError"
ElseIF ( SubStr( cNewProc , 1 , 2 ) <> "-1" )
	ApdWF1Wf2Put( cNewProc )
	While ( GetSx8Len() > nGetSX8Len )
		ConfirmSx8()
	End While
EndIF

Return( cNewProc )

/*/
зддддддддддбддддддддддддддбдддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤┘o	   ЁCheckModWF1   ЁAutorЁ Marinaldo de Jesus  Ё Data Ё16/12/2003Ё
цддддддддддеддддддддддддддадддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁVerifica o Modo de Acesso do WF1 e,se nao for compartilhado,Ё
Ё          ЁDuplica os Parametros MV_APDPROC							Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>                                   Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁGenerico 												    Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function CheckModWF1()

Local aArea		:= GetArea()
Local aAreaSM0	:= SM0->( GetArea() )

Local lRet		:= .T.

Local nSm0NextRecno
Local nSm0Recno
Local nSm0Order

Begin Sequence

	IF ( lRet := Empty( xFilial( "WF1" ) ) )
		Break
	EndIF

	nSm0Order := SM0->( IndexOrd() )
	IF ( lRet := SM0->( MsSeek( cEmpAnt , .F. ) ) )
		While SM0->(;
						!Eof();
						.and.;
						( M0_CODIGO == cEmpAnt );
					)
			IF !GetNextRecno( "SM0" , @nSm0NextRecno , @nSm0Recno , nSm0Order )
				Exit
			EndIF
			IF ( lRet := DuplicaMv( FWGETCODFILIAL , "MV_APDPROC" ) )
				IF !( lRet := DuplicaMv( FWGETCODFILIAL , "MV_APDPROC" ) )
					Break
				EndIF
			Else
				Break
			EndIF
			IF !GotoNextRecno( "SM0" , nSm0NextRecno , nSm0Order )
				Exit
			EndIF
		End While
	EndIF

End Sequence

IF !( lRet )
	Help( "" , 1 , "NOEXISTMVS" )
EndIF

RestArea( aAreaSM0 )
RestArea( aArea )

Return( lRet )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdChkEnv ЁAutor  ЁMarinaldo de Jesus	  Ё Data Ё10/12/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁVerifica se as avaliacoes foram Enviadas                    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function ApdChkEnv( aParamUser ) /*/ Array com dois elementos 1 = cEmp (Codigo da Empresa ) , 2 = cFil ( Codigo da Filial )  */

	Local aArea	
	Local aSelect		:= {}
	Local lNoExecInRmt	:= !( Type( "oMainWnd" ) == "O" )
	Local aModuloReSet                                  
	Local cEmp
	Local cFil
	Local lSetCentury
	
	DEFAULT aParamUser := Array( 02 )
	
	RpcSetType( 3 )
	PREPARE ENVIRONMENT EMPRESA ( aParamUser[1] ) FILIAL ( aParamUser[2] )
	
	aArea := GetArea()
	
	SetsDefault()
	lSetCentury	:= __SetCentury("on")
	
	aModuloReSet := SetModulo( "SIGAAPD" , "APD" )
	
	aAdd( aSelect, "RDC" )
	aAdd( aSelect, "RDP" )
	aAdd( aSelect, "WFA" )
	
	If ( Len( aParamUser ) >= 1 )
		cEmp := aParamUser[1]                                                
	EndIf
	
	If ( Len( aParamUser ) >= 2 )
		cFil := aParamUser[2]
	EndIf
	
	SetTopType( "A" )
	
	cRdcFil		:= xFilial( "RDC" )
			
	If ApdSndIni( aSelect, lNoExecInRmt )
		ApdEnvChk( cFilAnt )
	EndIf
	
	If ( lNoExecInRmt )
		CloseNotUse( {}, aSelect )
	EndIf
	
	WFReturn( { cEmp , cFil } )
	
	ConOut( CRLF )
	
	ReSetModulo( aModuloReSet )
	
	If !( lSetCentury )
		__SetCentury("off")
	EndIf
	
	RestArea( aArea )
	
	RpcClearEnv() // Reseta o ambiente
	
Return( .T. )

/*/
зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdEnvChk ЁAutor  ЁMarinaldo de Jesus	  Ё Data Ё10/12/2003Ё
цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤┘o ЁVerifica se as avaliacoes foram Enviadas                    Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais> 									Ё
цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso	   ЁAPDSNDAV      												Ё
юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function ApdEnvChk( cFil , nRdcRecno )

Local bWhile		:= { || .T. }

Local cRdcFil		:= xFilial( "RDC" , cFil )
Local cWfaFil		:= xFilial( "WFA" )

Local lApdEnvChk	:= .T.

Local nWfaSvOrder	:= WFA->( IndexOrd() )
Local nRdcSvOrder	:= RDC->( IndexOrd() )
Local nRdpSvOrder	:= RDP->( IndexOrd() )
Local nWfaOrderI	:= RetOrdem( "WFA" , "WFA_FILIAL+WFA_IDENT" )
Local nWfaOrderT 	:= RetOrdem( "WFA" , "WFA_FILIAL+WFA_TIPO+WFA_IDENT" )
Local nRdcOrder		:= RetOrdem( "RDC" , "RDC_FILIAL+RDC_TIPO+RDC_IDENT" )
Local nRdpOrder		:= RDP->( RetOrdem( "RDP" , "RDP_FILIAL+RDP_CODAVA+DTOS(RDP_DATINI)" ) )
Local nRdpRecno		:= RDP->( Recno() )

Local cIdentSeek
Local cMailSeek
Local cMessSeek
Local nRdcNextRecno

RDC->( dbSetOrder( nRdcOrder ) )
RDP->( dbSetOrder( nRdpOrder ) )

IF ( nRdcRecno == NIL )
	RDC->( MsSeek( cRdcFil + "1" , .F. ) )
	bWhile := { || (( RDC_FILIAL + RDC_TIPO ) == ( cRdcFil + "1" ))}	
Else
	RDC->( MsGoto( nRdcRecno ) )
EndIF

While RDC->( !Eof() .and. Eval( bWhile ) )
	
	IF ( nRdcRecno == NIL ) //Nao Obtenho o NextRecno Forcando, assim, a saida atraves da GotoNextRecno()
		IF !GetNextRecno( "RDC" , @nRdcNextRecno , NIL , nRdcOrder )
			Exit
		EndIF
	EndIF

	WFA->( dbSetOrder( nWfaOrderI ) )
	cIdentSeek	:= ( cWfaFil + RDC->RDC_IDENT )
	lApdEnvChk	:= WFA->( dbSeek( cIdentSeek , .F. ) )

	WFA->( dbSetOrder( nWfaOrderT ) )
	cMailSeek	:= ( cWfaFil + WF_SENT + RDC->RDC_IDENT )
	cMessSeek	:= ( cWfaFil + WF_OUTHTTP + RDC->RDC_IDENT )
	IF (;
			!( WFA->( MsSeek( cMailSeek , .F. ) ) );
			.and.;
			!( WFA->( MsSeek( cMessSeek , .F. ) ) );
		)
		IF !GotoNextRecno( "RDC" , nRdcNextRecno , nRdcOrder )
			Exit
		EndIF
		Loop
	EndIF

	IF RDC->( RecLock( "RDC" , .F. ) )
		RDC->RDC_TIPO 	:= "2"				//Enviado
		RDC->RDC_DATENV	:= WFA->WFA_DATA
		cKeySeek := ( xFilial( "RDP" , cRdcFil ) + RDC->( RDC_CODAVA + Dtos( RDC_DTIAVA ) ) )
		IF RDP->( MsSeek( cKeySeek , .F. ) )
			IF ( RDP->RDP_STATUS < "4" )
				IF RDP->( RecLock( "RDP" , .F. ) )
					RDP->RDP_STATUS := "4" //"Enviada"
					RDP->( MsUnLock() )
				EndIF
			EndIF
		EndIF
		RDC->( MsUnLock() )
	EndIF

	IF !GotoNextRecno( "RDC" , nRdcNextRecno , nRdcOrder )
		Exit
	EndIF

End While

RDP->( MsGoto( nRdpRecno ) )

WFA->( dbSetOrder( nWfaSvOrder ) )
RDC->( dbSetOrder( nRdcSvOrder ) ) 
RDP->( dbSetOrder( nRdpSvOrder ) )

Return( lApdEnvChk )

/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁInApdSndAvExecЁAutor ЁMarinaldo de Jesus   Ё Data Ё24/08/2004Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁExecutar Funcoes Dentro de APDSNDAV                          Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   ЁInApdSndAvExec( cExecIn , aFormParam )						 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁuRet                                                 	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function InApdSndAvExec( cExecIn , aFormParam )
         
Local uRet

DEFAULT cExecIn		:= ""
DEFAULT aFormParam	:= {}

IF !Empty( cExecIn )
	cExecIn	:= BldcExecInFun( cExecIn , aFormParam )
	uRet	:= &( cExecIn )
EndIF

Return( uRet )

/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁRd0GetUsrMail ЁAutor ЁMarinaldo de Jesus   Ё Data Ё28/09/2004Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁObtem o Codigo do Usuario e o e-mail Ю partir do RD0		 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁlGetOk                                              	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁGenerico 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Function Rd0GetUsrMail( cFil , cRd0Codigo , cUser , cUserNam , cMail , cTo )

Local aUser		:= PosAlias( "RD0" , cRd0Codigo , cFil , { "RD0_USER" , "RD0_EMAIL" } , RetOrdem( "RD0" , "RD0_FILIAL+RD0_CODIGO" ) , .F. )
Local lGetOk	:= .F.

Begin Sequence

	IF !( lGetOk := !Empty( aUser ) )
		Break
	EndIF

	cUser	:= aUser[1]
	cMail	:= AllTrim( aUser[2] )

	Do Case
		Case ( lGetOk := ( Empty( cUser ) .and. !Empty( cMail ) ) )
			cTo := cMail
		Case ( lGetOk := ( !Empty( cUser ) .and. Empty( cMail ) ) )
			cUserNam	:= UsrRetName( cUser )
			cTo			:= cUserNam
		Case ( lGetOk := ( !Empty( cUser ) .and. !Empty( cMail ) ) )
			cUserNam	:= UsrRetName( cUser )
			cTo			:= ( cMail )
		OtherWise
			Break
	EndCase

End Sequence

Return( lGetOk )

/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁGetAvSndOut	  ЁAutor ЁMarinaldo de Jesus   Ё Data Ё29/09/2004Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁObtem o Array com Informacoes para o bTimeOut       		 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁaTimeOut                                              	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁApdSndAv 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function GetAvSndOut( nQuant , dTStart , dTOut )

Local aTimeOut			:= {}

Local nDiasTimeOut
Local nMinTimeOut
Local nHrsTimeOut

Static nSndOutSeed 		:= 999
Static cSndOutTipo		:= "E"

DEFAULT dTStart			:= MsDate()
DEFAULT dTOut			:= dTStart

nDiasTimeOut			:= DateDiffDay( dTStart , dTOut )
nHrsTimeOut				:= DataHora2Ale( dTOut , SecsToHMS( Seconds() ) , 180 , @nSndOutSeed , cSndOutTipo )
nMinTimeOut				:= ( nHrsTimeOut - Int( nHrsTimeOut ) )
nHrsTimeOut				:= ( nHrsTimeOut - nMinTimeOut )
cSndOutTipo				:= IF( ( cSndOutTipo == "E" ) , "S" , "E" )

DEFAULT nQuant			:= 0

aAdd( aTimeOut , {;
					"ApdSndOut(" + AllTrim( Str( ++nQuant ) ) + ")",;
					nDiasTimeOut,;
					nHrsTimeOut,;
					nMinTimeOut;
				 };
	 )

Return( aTimeOut )

/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁApdAddVar     ЁAutor ЁMarinaldo de Jesus   Ё Data Ё13/10/2004Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁAdiciona em aHtm as variaveis padroes               		 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL                                                   	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁApdSndAv 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function ApdAddVar( aHtml )

Local aVarHtml := {}

Local nVar
Local nVars

aAdd( aVarHtml , ADD_PATH_HTML				)
aAdd( aVarHtml , ADD_COD_ID					)
aAdd( aVarHtml , ADD_TITULO_HTML			)
aAdd( aVarHtml , ADD_DATA_DO_ENVIO			)
aAdd( aVarHtml , ADD_DT_LIM_RSP				)
aAdd( aVarHtml , ADD_COD_EMPRESA			)
aAdd( aVarHtml , ADD_COD_FILIAL				)
aAdd( aVarHtml , ADD_DESC_FILIAL			)
aAdd( aVarHtml , ADD_COD_AVALIACAO			)
aAdd( aVarHtml , ADD_DESC_AVALIACAO			)
aAdd( aVarHtml , ADD_DATA_INICIO_AVALIACAO	)
aAdd( aVarHtml , ADD_DATA_FINAL_AVALIACAO	)
aAdd( aVarHtml , ADD_COD_PROJETO			)
aAdd( aVarHtml , ADD_DESC_PROJETO			)
aAdd( aVarHtml , ADD_DATA_INICIO_PROJETO	)
aAdd( aVarHtml , ADD_DATA_FINAL_PROJETO		)
aAdd( aVarHtml , ADD_COD_AVALIADO			)
aAdd( aVarHtml , ADD_NOME_AVALIADO			)
aAdd( aVarHtml , ADD_COD_AVALIADOR			)
aAdd( aVarHtml , ADD_NOME_AVALIADOR			)
aAdd( aVarHtml , ADD_MSG					)

nVars := Len( aVarHtml )
For nVar := 1 To nVars
	IF ( aScan( aHtml , { |x| ( aVarHtml[ nVar ] $ x ) } ) == 0 )
		aAdd( aHtml , "<!--" + aVarHtml[ nVar ] + "-->" + CRLF )
	EndIF
Next nVar

Return( NIL )

/*/
зддддддддддбддддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©
ЁFun┤└o    ЁVarNotExcl	  ЁAutor ЁMarinaldo de Jesus   Ё Data Ё14/10/2004Ё
цддддддддддеддддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢
ЁDescri┤└o ЁRetira a "!" das variaveis Html Quando ValByName e RetByName Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁSintaxe   Ё<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁParametrosЁ<Vide Parametros Formais>									 Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁRetorno   ЁNIL                                                   	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁObserva┤└oЁ                                                      	     Ё
цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢
ЁUso       ЁApdSndAv 													 Ё
юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды/*/
Static Function VarNotExcl( cVar )
Return( StrTran( cVar , "!" , "" ) )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁApdSndCob ╨Autor  ЁMicrosiga           ╨ Data Ё  22/07/11   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё                                                            ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё AP                                                         ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/

Static Function ApdSndCob( cPathFileWF , aParams , cTipoEnv , cCodMsgAva )

Local lApdSndBldAva	:= .T.

Local cIdoProcess
Local cUser
Local cUserNam
Local cMail
Local cTo     
Local cTwProcess
Local cParam
Local cRpcServer
Local cMsgAva
Local cRdgFilial
Local cRdgSeek

Local nRd0Order
Local nRdnOrder
Local nParam
Local nParams
Local nName
Local nNames   
Local cPathServer 
Local lCorpo
Local oProcess

Begin Sequence

	IF !( lApdSndBldAva := !Empty( cCodMsgAva ) )  .and. ( cTipoEnv == "1" )
		Break
	EndIF	
	
	If Empty(RDC->RDC_DATRET ) .And. MsDate() > RDC->RDC_DTLIMR 
		
		cRdgFilial	:= xFilial( "RDG" )
		cRdgSeek	:= cRdgFilial + cCodMsgAva 
		RDG->( dbSetOrder( RetOrdem( "RDG" , "RDG_FILIAL+RDG_CODIGO+RDG_CODMEM" ) ) )
		IF !( lApdSndBldAva := RDG->( MsSeek( cRdgSeek , .F. ) ) ) .and. ( cTipoEnv == "1" )
			Break
		EndIF
	
		If RDG->( MsSeek( cRdgFilial+RDP->RDP_MEMCOB , .F. ) )
			cMsgAva := ApdMsMm( RDG->RDG_CODMEM, NIL, NIL, NIL, 3, , , "RDG",)
		Else
			cMsgAva := 'Mensagem de cobranca nao cadastrada'
		Endif
	
		IF !( lApdSndBldAva := !Empty( cMsgAva ) ) .and. ( cTipoEnv == "1" )
			Break
		EndIF      
		               
		IF !( Rd0GetUsrMail( RDC->RDC_FILIAL , RDC->RDC_CODDOR , @cUser , @cUserNam , @cMail , @cTo ) )
			Break
		EndIF
	
		cRpcServer := GetApdRpcServer()
		cTwProcess := ApdGetProc()
		IF !( ( lApdSndBldAva := ( SubStr( cTwProcess , 1 , 2 ) ) <> "-1" ) )
			ConOut( CRLF )
			ConOut( cTwProcess )
			ConOut( CRLF )
			Break
		EndIF
	
		oProcess := TWFProcess():New( cTwProcess , NEWTASKAPD )
	
		oProcess:NewVersion( .T. )
		oProcess:NewTask( NEWTASKAPD , cPathFileWF )       
	
		nRd0Order		:= RetOrdem( "RD0" , "RD0_FILIAL+RD0_CODIGO" )
		nRdnOrder		:= RetOrdem( "RDN" , "RDN_FILIAL+RDN_CODIGO" )
	
		oProcess:oHtml:ValByName( VarNotExcl( ADD_PATH_HTML				)	,	cPathFileWF )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_TITULO_HTML			)	,	AllTrim( RD6->RD6_DESC ) )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_ID				)	,	RDC->RDC_ID )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_DATA_DO_ENVIO			)	,	Dtoc( MsDate() ) )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_EMPRESA			)	, 	cEmpAnt			)
		oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_FILIAL			)	, 	cFilAnt			)
		oProcess:oHtml:ValByName( VarNotExcl( ADD_DESC_FILIAL			)	, 	SM0->( AllTrim( M0_NOMECOM ) + " / " + AllTrim( M0_FILIAL ) ) )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_AVALIACAO			)	,   RD6->RD6_CODIGO	)
		oProcess:oHtml:ValByName( VarNotExcl( ADD_DESC_AVALIACAO		)	,   AllTrim( RD6->RD6_DESC ) )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_DATA_INICIO_AVALIACAO	)	,   RD6->RD6_DTINI	)
		oProcess:oHtml:ValByName( VarNotExcl( ADD_DATA_FINAL_AVALIACAO	)	,   RD6->RD6_DTFIM	)
		oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_PROJETO			)	,   RDC->RDC_CODPRO	)
		oProcess:oHtml:ValByName( VarNotExcl( ADD_DESC_PROJETO			)	,   AllTrim( PosAlias( "RDN" , RDC->RDC_CODPRO , RDC->RDC_FILIAL , "RDN_DESC" , nRdnOrder , .F. ) ) )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_DATA_INICIO_PROJETO	)	,   RDC->RDC_DTIAVA )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_DATA_FINAL_PROJETO	)	,   RDC->RDC_DTFAVA	)
		oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_AVALIADOR			)	,	RDC->RDC_CODDOR )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_NOME_AVALIADOR		)	,	AllTrim( PosAlias( "RD0" , RDC->RDC_CODDOR , RDC->RDC_FILIAL , "RD0_NOME" , nRd0Order , .F. ) ) )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_COD_AVALIADO			)	,	RDC->RDC_CODADO )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_NOME_AVALIADO			)	,	AllTrim( PosAlias( "RD0" , RDC->RDC_CODADO , RDC->RDC_FILIAL , "RD0_NOME" , nRd0Order , .F. ) ) )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_DT_LIM_RSP			)	,	Dtoc( RDC->RDC_DTLIMR ) )
		oProcess:oHtml:ValByName( VarNotExcl( ADD_MSG					)	,	cMsgAva )
	
		IF ( cTipoEnv == "2" )
			nParams := Len( aParams )
			For nParam := 1 To nParams
				nNames := Len( aParams[ nParam , 04 ] )
				For nName := 1 To nNames
					cParam	:= aParams[ nParam , 04 , nName , 02 ]
					oProcess:oHtml:ValByName( cParam , NIL )
				Next nName
			Next nParam
			oProcess:aParams	:= aClone( aParams )
			
		    If !lCorpo                                             
				oProcess:cBody := STR0010 +" :" + AllTrim( RD6->RD6_DESC )+ "<P>" + cMsgAva + "</P>"	
		    EndIf
		EndIF
		
		oProcess:bReturn	:= "ApdSndRet()"
		oProcess:bTimeOut	:= GetAvSndOut( 0 , RDP->( Min( RDP_INIRSP , RDP_DATGER ) ) , RDC->RDC_DTLIMR )
			
		oProcess:cSubject	:=	RD6->RD6_DESC
		lCorpo:= WFGetMV("MV_WFHTML", .F. )
	
		oProcess:cTo		:= cTo
		oProcess:UserSiga	:= cUser
		
		IF !( lApdSndBldAva := !Empty( cIdoProcess := oProcess:Start() ) )
			Break
		EndIF
		         
		ApdSndRdcPut( cIdoProcess , cUser , cUserNam , cMail )
		
		RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
					oProcess:fProcCode						 ,;	//Codigo do Processo
					"100001"								 ,;	//Tipo do processo
					NIL										 ,;	//Descricao (Obtem do WF2)	
					cUserNam								  ; //Usuario
					)
		
		RastreiaWF( oProcess:fProcessID+"."+oProcess:fTaskID ,;	//Processo e Task
					oProcess:fProcCode						 ,;	//Codigo do Processo
					"100003"								 ,;	//Tipo do processo
					NIL										 ,;	//Descricao (Obtem do WF2)	
					cUserNam								  ; //Usuario
					)
		
			                         
		// Corpo do e-mail com a descricao da avaliacao e o link para acesso a arquivo html de resposta
			
		If ( cTipoEnv == "2" ) .and. lCorpo     // Se for tipo envio de avaliacao e for mostrando no corpo do e-mail
			
			ApdMkAviso( @cPathFileWF, "2" )  
			oProcess:NewTask(NEWTASKAPD, cPathFileWF,.T.)  
			
			oProcess:cSubject := RD6->RD6_DESC      // Assunto
			oProcess:cTo := cto 					// Destinatario
			
			oProcess:ohtml:ValByName("Name_link",RD6->RD6_DESC)   
			cPathServer:= getmv("MV_WFBRWSR")
			   
			//EndereГo onde os arquivos html estao gravados
			If WFGetMV("MV_WFWEBEX", .F. )
				oProcess:ohtml:ValByName("proc_link","http://"+cPathServer+"/w_wfhttpret.apw?ProcID=apdavaliacao/"+Alltrim(RD6->RD6_CODIGO)+"/" + cIdoProcess + ".htm")
			Else
				oProcess:ohtml:ValByName("proc_link","http://"+cPathServer+"/messenger/emp"+cempant+"/apdavaliacao/"+Alltrim(RD6->RD6_CODIGO)+"/" + cIdoProcess + ".htm")
			End    
			oProcess:Start()                       
		ElseIf ( cTipoEnv == "1" ) 
		   	ApdMkAviso( @cPathFileWF, "2" )  
			oProcess:NewTask(NEWTASKAPD, cPathFileWF,.T.)  
			oProcess:cSubject := RD6->RD6_DESC      // Assunto
			oProcess:cTo := cto 					// Destinatario
			oProcess:Start()      
		EndIf
	EndIf
	
End Sequence

Return( lApdSndBldAva )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммямммммммммммммкмммммммямммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁfValidStatus ╨Autor  ЁMicrosiga        ╨ Data Ё  22/07/11   ╨╠╠
╠╠лммммммммммьмммммммммммммймммммммомммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё                                                            ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё AP                                                         ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function fValidStatus()

Local aAreaRD6 	:= GetArea('RD6')
Local cChaveRD6 := xFilial('RD6')+RDC->RDC_CODAVA
Local lRetorno 	:= .F.
                   
RD6->(dbSelectArea('RD6'))
RD6->(dbSetOrder(1))

If RD6->(dbSeek(cChaveRD6))
	If RD6->RD6_STATUS == '1'
		lRetorno := .T.
	EndIf
EndIf

RestArea(aAreaRD6)	

Return(lRetorno)

/*/{Protheus.doc} fBuscaAva
Busca se avaliaГУes jА foram feitas antes de enviar o consenso
@author CМcero Alves
@since 10/09/2019
@version 12.1.19
/*/
Static Function fBuscaAva(nRdcRec)
	
	Local lRet 			:= .F.
	Local lAval			:= .F.
	Local lAutoAva		:= .F.
	Local lExstAutoAv	:= .F.
	Local cKeyRDC 		:= RDC->(RDC_FILIAL + RDC_CODAVA  + DTOS(RDC_DTIAVA))
	Local cCodAdo		:=  RDC->RDC_CODADO
	
	Default nRdcRec	:= RDC->(Recno())
	
	RDC->( dbGotop() )
	RDC->( dbSeek(cKeyRdc) )
	While RDC->(!Eof() .And. (( RDC_FILIAL + RDC_CODAVA + DTOS( RDC_DTIAVA )) == cKeyRdc ))
		
		If RDC->RDC_TIPOAV == '3'
			RDC->( dbSkip() )
			Loop
		EndIf
		
		If RDC->RDC_TIPOAV == '1' .AND. !Empty(RDC->RDC_DATRET) 
			lAval := .T.
		ElseIf RDC->RDC_TIPOAV == '2' .AND. RDC->RDC_CODADO == cCodAdo
			lExstAutoAv := .T.	// Existe auto-avaliaГЦo do subordinado a ser respondida.
			If !Empty(RDC->RDC_DATRET)
				lAutoAva := .T.	// Auto-avaliaГЦo do subordinado jА foi respondida
			EndIf			
		EndIf
		RDC->( dbSkip() )
		
	EndDo
	
	RDC->(DbGoTo(nRdcRec))
	
	If lAval // Se nЦo existir a avaliaГЦo respondida nem preciso verificar as outras condiГУes.
		lRet 	:= .T.
		If lExstAutoAv .AND. !lAutoAva // Existe a auto-avaliaГЦo mas ela nЦo foi respondida entЦo nЦo envio a mensagem de consenso.
			lRet := .F.
		EndIf
	EndIf
	
	//RestArea( aAreaWFA )			
	Return lRet
	
/*/{Protheus.doc} SchedDef
DefiniГУes utilizadas pelo Schedule
@author CМcero Alves
@since 10/09/2019
/*/
Static Function SchedDef()
	
	Local aOrd := {}
	Local aParam := {}
	aParam	:= { "P", "PARAMDEF", "", aOrd, }
	
Return aParam