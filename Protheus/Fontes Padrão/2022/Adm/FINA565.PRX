#Include "PROTHEUS.CH"
#Include "FONT.CH"
#Include "COLORS.CH"
#Include "FINA565.CH"
#INCLUDE "FILEIO.CH"
#INCLUDE "FWLIBVERSION.CH"

Static lF565TPliq
Static lFWCodFil := FindFunction("FWCodFil")
Static lIsIssBx := FindFunction("IsIssBx")
Static _oFINA5651
Static dLastPcc  := CTOD("22/06/2015")
Static lPLSCTFIN := findFunction("PLSCTFIN")
// VALORES ACESSÓRIOS
Static __lValAcess	:= ExistFunc( "FValAcess" )
Static __lExistFKD	:= ExistFunc( "FAtuFKDBx" )
Static __cLoja      := ""
Static __cForn565   := ""
Static __cParc565	:= ""
Static __lMetric	:= .F.
Static __cFunBkp    := ""
Static __cFunMet	:= ""
Static __cGtrname	:= ""

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ FINA565  ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 21.01.98  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Programa de Liquidacao                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FINA565(nPosArotina, aGetAut1, aChvAut, aGetAut2, aColItens, aEdit, lAutomato)

// Alguns pontos de entrada foram incluidos para necessidades
// especificas na empresa 4K, pois devido ao alto volume de che-
// ques a liquidar existe a necessidade de alguns controles para
// lelos em relacao a manipulacao dos registros e log de usuarios.
Private aPos		:= {  15,  1, 70, 315 }
Private cCadastro	:= STR0001 //"Liquidacao"
Private cLote
Private aRotina		:= MenuDef()
Private aDiario		:= {}
Private cCodDiario	:= ""

Default nPosArotina	:= 0
Default lF565TPliq	:= ExistBlock("F565TPliq")
Default aGetAut1	:= {}
Default aChvAut		:= {}
Default aGetAut2	:= {}
Default aColItens	:= {}
Default aEdit		:= {}
Default lAutomato	:= .F.

__lMetric	:= FwLibVersion() >= "20210517"

Fa565MotBx("LIQ","LIQUIDACAO","ANSS")

SetKey( VK_F12, { | a, b | AcessaPerg("FIN565", .T.) } )
Pergunte("FIN565", .F.)

If nPosArotina > 0 // Sera executada uma opcao diretamento de aRotina, sem passar pela mBrowse
	dbSelectArea("SE2")
	bBlock := &( "{ |a, b, c, d, e, f, g, h, i| " + aRotina[ nPosArotina,2 ] + "(a, b, c, d, e, f, g, h, i) }" )
	Eval( bBlock, Alias(), (Alias())->(Recno()), nPosArotina, aGetAut1, aChvAut, aGetAut2, aColItens, aEdit, lAutomato )
Else
	mBrowse( 6, 1, 22, 75, "SE2", , "!E2_SALDO", , , , FA040Legenda("SE2") )
EndIf

If SuperGetMv("MV_CMC7FIN") == "S"
	If nHdlCmC7 >= 0
		CMC7Fec(nHdlCmC7,SuperGetMv("MV_CMC7PRT"))
	EndIf
EndIf

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A565Liquid³ Autor ³ Mauricio Pequim Jr.   ³ Data ³21.01.98  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Inclusao de Liquida‡„o                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA565                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A565Liquid( cAlias, nReg, nOpcx, aGetAut1, aChvAut, aGetAut2, aColItens, aEdit, lAutomato )
Local lPanelFin := IsPanelFin()
Local lContinua	:= .T.
Local nOpca    	:= 0
Local nCntFor 	:= 0
Local nCntPos	:= 0
Local aAutAux	:= {}
Local cMoeda
Local aTam		 := TamSx3("E2_NUM")
Local oDlg
Local oFnt
Local oValorMax
Local oValor	 := 0
Local oQtdTit 	 := 0
Local cVar
Local cMoeda565
Local aMoedas	 := {}
Local TRB		 := ""
Local cVar1 	 := cIntervalo := STR0063		//"01 EMISSAO   "
Local aIntervalo := { STR0063, STR0064 }		//"01 EMISSAO   "###"02 VENCIMENTO"
Local oMark
Local nTamTit	 := TamSX3("E2_PREFIXO")[1]+TamSX3("E2_NUM")[1]+TamSX3("E2_PARCELA")[1]+TamSX3("E2_TIPO")[1]
Local nTamChave	 := TamSX3("E2_FILIAL")[1]+TamSX3("E2_FORNECE")[1]+TamSX3("E2_LOJA")[1]+nTamTit
Local cSimb		 := ""
Local lA565Col	 := ExistBlock("A565COL") // Permite a alteracao de aCols, aHeader
Local oValorDe
Local oValorAte
Local aTamBco 	 := TamSx3("E2_BCOCHQ")
Local aTamAge 	 := TamSx3("E2_AGECHQ")
Local aTamCta 	 := TamSx3("E2_CTACHQ")
Local lF565NUM 	 := ExistBlock("F565NUM")
Local cFilSX6
Local aAltera 	 := {}
Local aAreaSe2 	 := SE2->(GetArea())
Local lF565Can 	 := Existblock("F565CAN")
Local lF565Con 	 := Existblock("F565CON")
Local E2_TIPO
Local oCbx
Local oCbx2
Local aOutrMoed  := {STR0135,STR0136} //"1 - Converte"###"2 - Nao Considera"
Local cOutrMoed  := STR0136 //"2 - Nao Considera"
Local nX 		 := 0
Local oTimer
Local nTimeOut   := SuperGetMv("MV_FATOUT",,900)*1000 // Estabelece 15 minutos para que o usuarios selecione
Local nTimeMsg   := SuperGetMv("MV_MSGTIME",,120)*1000 	// Estabelece 02 minutos para exibir a mensagem para o usuário
Local aBut565    := {}
Local cDsFornece := ""
Local oFor565    := NIL
Local oLjFor     := NIL
Local oBtFilial
Local cArqFil	:= ""
Local cAliasSE2	:= ""
Local nLinIni	:= 0
Local nColIni	:= 0
Local nLinFin	:= 0
Local nColFin	:= 0
Local nTxLiq	:= 0
Local cChvAuto	:= ""
Local nPPre		:= 0
Local nPTipo	:= 0
Local nPBcoChq	:= 0
Local nPAgeChq	:= 0
Local nPCtaChq	:= 0
Local nPNum		:= 0
Local nPVlCru	:= 0
Local nPAcre	:= 0
Local nPDecr	:= 0
Local nPVenc	:= 0
Local nPValo	:= 0
Local nPPre2	:= 0
Local nPTipo2	:= 0
Local nPBcoChq2	:= 0
Local nPAgeChq2	:= 0
Local nPCtaChq2	:= 0
Local nPNum2	:= 0
Local nPVlCru2	:= 0
Local nPAcre2	:= 0
Local nPDecr2	:= 0
Local nPVenc2	:= 0
Local nPValo2	:= 0
Local nY		:= 0
Local nZ		:= 0
Local aE2Pre	:= TamSx3("E2_PREFIXO")
Local aE2Tipo	:= TamSx3("E2_TIPO")
Local aE2VlCr	:= TamSx3("E2_VLCRUZ")
Local aE2Vlliq	:= TamSx3("E2_VALLIQ")
Local aE2Desc	:= TamSx3("E2_DESCONT")
Local aE2Vl		:= TamSx3("E2_VALOR")
Local aE2Sld	:= TamSx3("E2_SALDO")
Local aE2Juros	:= TamSx3("E2_JUROS")
Local aE2Multa	:= TamSx3("E2_MULTA")
Local aE2Acres	:= TamSx3("E2_ACRESC")
Local aE2Decre	:= TamSx3("E2_DECRESC")
Local aE2TxMoe	:= TamSx3("E2_TXMOEDA")
Local lEdit		:= .F.
Local lCondicao := .F.
Local nTamAcols := 0
Local aMatVal   := {}
Local lA565TXL	:=  ExistBlock("A565TXL")	//Ponto de entrada para preenchimento da variável nTxLiq (Taxa da moeda dos titulos gerados pela liquidação)
Local nInicio	:= 0
Local nFim		:= 0
Local nRegProc	:= 0

Private aCampos := {	{"MARCA"  , "C",  2,			0										},;
						{"FILIAL" , "C", If(lFWCodFil,FWGETTAMFILIAL,TamSX3("E2_FILIAL")[1]), 0	},;	// GESTAO
						{"TITULO" , "C", nTamTit+3,		0										},;
						{"MOEDAO" , "N",  2,			0										},;	//Moeda do Titulo
						{"CTMOED" , "N", aE2TxMoe[1],	aE2TxMoe[2]								},;	//Moeda do Titulo
						{"VALORI" , "N", aE2Vl[1],		aE2Vl[2]								},;	//Valor original do titulo
						{"ABATIM" , "N", aE2Vl[1],		aE2Vl[2]								},;
						{"BAIXADO", "N", aE2Sld[1],		aE2Sld[2]								},;
						{"VALCVT" , "N", aE2Vl[1],		aE2Vl[2]								},;	//Valor convertido para a moeda escolhida
						{"JUROS"  , "N", aE2Juros[1],	aE2Juros[2]								},;
						{"VACESS" , "N", aE2Juros[1],   aE2Juros[2]                             },;	//Valores acessórios
						{"VLMULTA", "N", aE2Multa[1],	aE2Multa[2]								},;
						{"DESCON" , "N", aE2Desc[1],	aE2Desc[2]								},;
						{"VALLIQ" , "N", aE2Vlliq[1],	aE2Vlliq[2]								},;
						{"EMISSAO", "D", 08,			0										},;
						{"VENCTO" , "D", 08,			0										},;
						{"ACRESC" , "N", aE2Acres[1],	aE2Acres[2]								},;
						{"DECRESC", "N", aE2Decre[1],	aE2Decre[2]								},;
						{"CHAVE"  , "C", nTamChave,		0										},;
						{"CHAVE2" , "C", nTamChave,		0										},;
						{"E2_REC" , "N", 15,			0										} }

Private aCpoBro	 := {	{ "MARCA"  ,, " ","  "},;
						{	"FILIAL"	,, SE2->(RetTitle("E2_FILIAL")),"@!"					},;	// GESTAO
						{	"TITULO"	,, STR0079,		"@X"									},; //"Número T¡tulo"
						{	"MOEDAO"	,, STR0134,		"@E 99"									},; //"Moeda"
						{	"CTMOED"	,, STR0139,		PesqPict("SE2","E2_TXMOEDA")			},; //"Cotacao"
						{	"VALORI"	,, STR0080,		PesqPict("SE2","E2_VALOR")				},; //"Vlr.Original"
						{	"ABATIM"	,, STR0082,		PesqPict("SE2","E2_VALOR")				},; //"Vlr.Abatim."
						{	"BAIXADO"	,, STR0106,		PesqPict("SE2","E2_SALDO")				},; //"Vlr.Baixado"
						{	"VALCVT"	,, STR0138,		PesqPict("SE2","E2_VALOR")				},; //"Valor em "
						{	"JUROS"		,, STR0081,		PesqPict("SE2","E2_JUROS")				},; //"Vlr.Juros"
						{	"ACRESC"	,, STR0205,		PesqPict("SE2","E2_ACRESC")				},; //"Vlr.Acréscimo"
						{   "VACESS"	,, STR0193,		"@E 9,999,999,999.99"					},; //"Vlr.Acess"
						{	"DESCON"	,, STR0083,		PesqPict("SE2","E2_DESCONT")			},; //"Vlr.Descon."
						{	"DECRESC"	,, STR0206,		PesqPict("SE2","E2_DECRESC")			},; //"Vlr.Decréscimo"
						{	"VALLIQ"	,, STR0084,		PesqPict("SE2","E2_VALLIQ")				},; //"Vlr.Liquidar"
						{	"EMISSAO"	,, STR0085,		"@X"									},; //"Data Emissão"
						{	"VENCTO"	,, STR0086,		"@X"									} } //"Data Vencimento"

Private nUsado2	 := 0
Private cLiquid	 := Space(6)
Private CurLen
Private nIntervalo:= 1
Private dData565I := dDataBase
Private dData565F := dDataBase
Private dBaixa	  := dDataBase
Private cFornece  := Criavar("E2_FORNECE",.F.)
Private cFornDE   := cFornece
Private cLojaDE   := __cLoja
Private cFornAte  := cFornece
Private cLojaAte  := __cLoja
Private cNomeForn := CriaVar ("E2_NOMFOR")
Private nMoeda 	  := 1
Private nValor 	  := 0
Private nQtdTit   := 0
Private nValorMax := 0				// valor maximo de liquidacao (digitado)
Private nValorDe  := 0 			   // valor inicial dos titulos
Private nValorAte := 9999999999.99 // Valor final dos titulos
Private nValorLiq := 0				// valor da liquidacao ap¢s mBrowse
Private nNroParc  := 0				// numero de parcelas digitadas
Private cCondicao := Space(3)		// numero de parcelas automaticas
Private cNatureza := Criavar ("E2_NATUREZ")
Private nPosAtu	  := 0
Private nPosAnt	  := 9999
Private nColAnt	  := 9999
Private aHeader   := {}
Private aCols  	  := {}
Private cMarca    := GetMark()
Private lInverte  := .F.
Private cTipo	  := Criavar ("E2_TIPO")
Private nSaldoBx  := 0
Private lReliquida:= IIF(nOpcx == 2,.F.,.T.)
Private l565Fil   := ExistBlock("FA565FIL")
Private oDlgKco
Private nValorAcr := 0				// valor da liquidacao ap¢s mBrowse
Private nValorDcr := 0				// valor da liquidacao ap¢s mBrowse
Private nValorTot := 0
Private cNumDe	  := CriaVar("E2_NUM")
Private cNumAte	  := cNumDe
Private cPrefDe	  := CriaVar("E2_PREFIXO")
Private cPrefAte  := cPrefDe

// Recupera o numero do lote contabil.
LoteCont( "FIN" )
Private oGet
Private oValorLiq
Private oValorAcr
Private oValorDcr
Private oValorTot
Private oNroParc
Private lOpenCmc7
Private oFornAte
Private oLojaAte
Private nVa	:= 0
Private aSelFil		:= {}

Default aGetAut1	:= {}
Default aChvAut		:= {}
Default aGetAut2	:= {}
Default aColItens	:= {}
Default aEdit		:= {}
Default lAutomato	:= .F.

__cParc565 := F565Parc()

If !CtbValiDt(,dDatabase,,,,{"FIN001"},)
	Return
EndIf

//Metricas - Acessos a Liquidação
__cFunBkp   := FunName()
__cFunMet	:= Iif(AllTrim(__cFunBkp)=='RPC',"RPCFINA565",__cFunBkp)

If __lMetric
	SetFunName(__cFunMet)
	// Metrica de controle de acessos
	FwCustomMetrics():setSumMetric(Alltrim(ProcName()), "financeiro-protheus_qtd-por-acesso_total", 1)
	SetFunName(__cFunBkp)
Endif

DEFINE FONT oFnt NAME "Arial" SIZE 12,14 BOLD
// Inicializa array com as moedas existentes.
aMoedas := FDescMoed()

If Existblock("FA565ADDCPO")
	ExecBlock("FA565ADDCPO",.F.,.F.)
Endif

//Não permite Liquidar titulos com solicitaçao de transferencia pendente
If !Empty(SE2->E2_NUMSOL)
	MsgAlert(STR0183 + Chr(13)+Chr(10) + STR0184)		//"Operação não permitida !!"###"Titulo possui solicitação de Transferência."
	Return
Endif

DbSelectArea(cAlias)
cAlias    	:= "SE2"
cFornece  	:= SE2->E2_FORNECE
__cForn565	:= cFornece
__cLoja     := SE2->E2_LOJA
cFornDE 	:= SE2->E2_FORNECE
cLojaDE   	:= SE2->E2_LOJA
cFornAte  	:= SE2->E2_FORNECE
cLojaAte  	:= SE2->E2_LOJA
cNomeForn 	:= SE2->E2_NOMFOR
dData565I 	:= SE2->E2_EMISSAO  //DSERFINP-33107
dData565F 	:= dDataBase

If Empty(cPrefAte)
	cPrefAte := "ZZZ"
EndIf

If Empty(cNumAte)
	cNumAte := Replicate("Z",TamSx3("E2_NUM")[1])
EndIf

M->E2_TIPO := cTipo

While .T.
	cFilSX6	 := SX6->X6_FIL
	nValTot	 := 0
	nOpca    := 0
	nInicio	 := 0
	nFim	 := 0
	nRegProc := 0

	If nOpcx == 6
		cCadastro := STR0074 //Reliquidação
	Endif

	If !lAutomato
		aSize := MSADVSIZE()
		If lPanelFin  //Chamado pelo Painel Financeiro
			dbSelectArea(cAlias)
			oPanelDados := FinWindow:GetVisPanel()
			oPanelDados:FreeChildren()
			aDim := DLGinPANEL(oPanelDados)
			DEFINE MSDIALOG oDlg OF oPanelDados:oWnd FROM 0,0 To 0,0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )

			// Observacao Importante quanto as coordenadas calculadas abaixo:
			// --------------------------------------------------------------
			// a funcao DlgWidthPanel() retorna o dobro do valor da area do
			// painel, sendo assim este deve ser dividido por 2 antes da sub-
			// tracao e redivisao por 2 para a centralizacao.
			nEspLarg := ((DlgWidthPanel(oPanelDados)/2) - 178) /2
			nEspLin  := 0

		Else
			nEspLarg := 7
	   		nEspLin  := 5

			DEFINE MSDIALOG oDlg FROM	130,0 TO 440,380 TITLE cCadastro PIXEL
		Endif
		oDlg:lMaximized := .F.
		oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,20,20)
		oPanel:Align := CONTROL_ALIGN_ALLCLIENT

		@ nEspLin, nEspLarg TO 133+nEspLin, 178+nEspLarg OF oPanel PIXEL
		nEspLarg := nEspLarg -7

		@ 001+nEspLin, 014+nEspLarg SAY STR0070	SIZE 40, 7 OF oPanel PIXEL   //"Fornecedor De"
		@ 001+nEspLin, 070+nEspLarg SAY STR0072	SIZE 20, 7 OF oPanel PIXEL   //"Loja De"
		@ 001+nEspLin, 104+nEspLarg SAY STR0071	SIZE 40, 7 OF oPanel PIXEL   //"Fornecedor Ate"
		@ 001+nEspLin, 160+nEspLarg SAY STR0073	SIZE 20, 7 OF oPanel PIXEL   //"Loja Ate"

		@ 019+nEspLin, 014+nEspLarg SAY STR0013	SIZE 40, 7 OF oPanel PIXEL   //"Gerar p/ Fornecedor"
		@ 019+nEspLin, 070+nEspLarg SAY STR0014	SIZE 40, 7 OF oPanel PIXEL   //"Loja"
		@ 037+nEspLin, 014+nEspLarg SAY STR0015	SIZE 40, 7 OF oPanel PIXEL   //"Valor Maximo"
		@ 037+nEspLin, 075+nEspLarg SAY STR0107	SIZE 50, 7 OF oPanel PIXEL   //"Titulos no valor de"
		@ 037+nEspLin, 130+nEspLarg SAY STR0108	SIZE 40, 7 OF oPanel PIXEL   //"Ate o valor de"

		@ 055+nEspLin, 014+nEspLarg SAY STR0016	SIZE 40, 7 OF oPanel PIXEL   //"Moeda"
		@ 055+nEspLin, 075+nEspLarg SAY STR0137	SIZE 40, 7 OF oPanel PIXEL   //"Outras Moedas"
		@ 080+nEspLin, 014+nEspLarg SAY STR0065 SIZE 40, 7 OF oPanel PIXEL   //"Intervalo por"
		@ 080+nEspLin, 075+nEspLarg SAY STR0066 SIZE 40, 7 OF oPanel PIXEL   //"Data de"
		@ 080+nEspLin, 130+nEspLarg SAY STR0067 SIZE 40, 7 OF oPanel PIXEL   //"Ate"

		@ 108+nEspLin, 014+nEspLarg SAY STR0157	SIZE 40, 7 OF oPanel PIXEL   //"Pref De"
		@ 108+nEspLin, 045+nEspLarg SAY STR0067 SIZE 40, 7 OF oPanel PIXEL   //"Ate"
		@ 108+nEspLin, 075+nEspLarg SAY STR0158 SIZE 40, 7 OF oPanel PIXEL   //"Titulo de"
		@ 108+nEspLin, 130+nEspLarg SAY STR0067 SIZE 40, 7 OF oPanel PIXEL   //"Ate"

		@ 009+nEspLin, 014+nEspLarg MSGET cFornDe	F3 "FOR" SIZE 52, 08 OF oPanel PIXEL Hasbutton
		@ 009+nEspLin, 070+nEspLarg MSGET cLojaDe	SIZE 20, 08 OF oPanel PIXEL

		@ 009+nEspLin, 104+nEspLarg MSGET oFornAte	VAR cFornAte F3 "FOR" SIZE 52, 08 OF oPanel PIXEL Hasbutton
		@ 009+nEspLin, 160+nEspLarg MSGET oLojaAte	VAR cLojaAte SIZE 20, 08 OF oPanel PIXEL

		@ 027+nEspLin, 014+nEspLarg MSGET oFor565 VAR __cForn565	F3 "FOR" 	Valid Iif(!a565Forn(),oFor565:SetFocus(),.T.) SIZE 52, 08 OF oPanel PIXEL Hasbutton
		@ 027+nEspLin, 070+nEspLarg MSGET oLjFor  VAR __cLoja					Valid Iif(!a565Forn(),oLjFor:SetFocus(),.T.) SIZE 20, 08 OF oPanel PIXEL

		@ 045+nEspLin, 014+nEspLarg MSGET oValorMax 	VAR nValorMax	Picture "@E 9,999,999,999.99" SIZE 60, 08 OF oPanel PIXEL hasbutton
		@ 045+nEspLin, 075+nEspLarg MSGET oValorDe 		VAR nValorDe	Picture "@E 9,999,999,999.99" SIZE 52, 08 OF oPanel PIXEL hasbutton
		@ 045+nEspLin, 130+nEspLarg MSGET oValorAte 	VAR nValorAte 	Picture "@E 9,999,999,999.99" SIZE 52, 08 OF oPanel PIXEL hasbutton

		@ 063+nEspLin, 014+nEspLarg MSCOMBOBOX oCbx 	VAR cMoeda565	ITEMS aMoedas   	SIZE 60, 54 OF oPanel PIXEL
		@ 063+nEspLin, 075+nEspLarg MSCOMBOBOX oCbx2	VAR cOutrMoed	ITEMS aOutrMoed   	SIZE 60, 54 OF oPanel PIXEL
		@ 089+nEspLin, 014+nEspLarg MSCOMBOBOX oCbx1 	VAR cIntervalo ITEMS aIntervalo 	SIZE 60, 54 OF oPanel PIXEL
		@ 089+nEspLin, 075+nEspLarg MSGET dData565I		Valid !Empty(dData565I)	SIZE 52, 08 OF oPanel PIXEL Hasbutton
		@ 089+nEspLin, 130+nEspLarg MSGET dData565F		Valid !Empty(dData565F) .and. dData565F >= dData565I 	.and. ;
																		If(val(substr(cIntervalo,1,2))=1,dData565F <= dDataBase,.T.);
														SIZE 52, 08 OF oPanel PIXEL Hasbutton

		@ 116+nEspLin, 014+nEspLarg MSGET cPrefDe	SIZE 20, 08 OF oPanel PIXEL
		@ 116+nEspLin, 045+nEspLarg MSGET cPrefAte	VALID cPrefAte >= cPrefDe SIZE 20, 08 OF oPanel PIXEL
		@ 116+nEspLin, 075+nEspLarg MSGET cNumDe	SIZE 52, 08 OF oPanel PIXEL
		@ 116+nEspLin, 130+nEspLarg MSGET cNumAte	VALID cNumAte >= cNumDe SIZE 52, 08 OF oPanel PIXEL

		If lPanelFin  //Chamado pelo Painel Financeiro
			oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1])
			ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,;
			{||cVar:=cMoeda565,cVar1:=cIntervalo,cFornece:=__cForn565,cTipo:=M->E2_TIPO,;
			 IF(Fa565OK1(),(If(A565YesNo(),(nOpca:=1,oDlg:End()),nOpca:=0)),nOpca:=2)},;
			{||oDlg:End(),nOpca:=0})

			cAlias := FinWindow:cAliasFile
			dbSelectArea(cAlias)
			FinVisual(cAlias,FinWindow,(cAlias)->(Recno()),.T.)

	    Else

			/* GESTAO - inicio */
			DEFINE SBUTTON Var oBtFilial FROM 141, 079 TYPE 05 ACTION { || aSelFil := Fa565Fil() } ENABLE OF oPanel
				oBtFilial:cCaption := STR0176
				oBtFilial:cToolTip := STR0177
			/* GESTAO - fim */

			DEFINE SBUTTON FROM 141, 114 TYPE 1 ACTION ;
				(cVar:=cMoeda565,cVar1:=cIntervalo,cFornece:=__cForn565,cTipo:=M->E2_TIPO,IF(Fa565OK1() ,(If(A565YesNo(),(nOpca:=1,oDlg:End()),nOpca:=0)),nOpca:=2)) ENABLE OF oPanel
			DEFINE SBUTTON FROM 141, 149 TYPE 2 ACTION { || oDlg:End(), nOpca:=0 } ENABLE OF oPanel

			ACTIVATE MSDIALOG oDlg CENTERED
		Endif
	Else
		For nX := 1 To Len(aGetAut1)
			If Upper(aGetAut1[nX][1]) == "CFORNDE"
				cFornDe := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "CLOJADE"
				cLojaDe := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "CFORNATE"
				cFornAte := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "CLOJAATE"
				cLojaAte := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "CFORN565"
				__cForn565 := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "CLOJA"
				__cLoja := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "NVALORMAX"
				nValorMax := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "NVALORDE"
				nValorDe := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "NVALORATE"
				nValorAte := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "CMOEDA565"
				cMoeda565 := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "COUTRMOED"
				cOutrMoed := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "CINTERVALO"
				cIntervalo := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "DDATA565I"
				dData565I := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "DDATA565F"
				dData565F := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "CPREFDE"
				cPrefDe := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "CPREFATE"
				cPrefAte := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "CNUMDE"
				cNumDe := aGetAut1[nX][2]
			EndIf
			If Upper(aGetAut1[nX][1]) == "CNUMATE"
				cNumAte := aGetAut1[nX][2]
			EndIf
		Next nX

		If Len(aChvAut) == 1
			cChvAuto := aChvAut[1][1]
		EndIf

		For nX := 1 To Len(aGetAut2)
			If Upper(aGetAut2[nX][1]) == "CLOJA"
				__cLoja := aGetAut2[nX][2]
			ElseIf Upper(aGetAut2[nX][1]) == "CCONDICAO"
				cCondicao := aGetAut2[nX][2]
			ElseIf Upper(aGetAut2[nX][1]) == "CTIPO"
				cTipo := aGetAut2[nX][2]
			ElseIf Upper(aGetAut2[nX][1]) == "CNATUREZA"
				cNatureza := aGetAut2[nX][2]
			ElseIf Upper(aGetAut2[nX][1]) == "NTXLIQ" .And. VAL(cMoeda565) > 1
				nTxLiq := aGetAut2[nX][2]
			ElseIf Upper(aGetAut2[nX][1]) == "CFORNECE"
				cFornece := aGetAut2[nX][2]
			EndIf
		Next nX

		For nX := 1 To Len(aEdit)
			If ValType(aEdit[nX][1]) == "C" .AND. UPPER(aEdit[nX][1]) == "EDITAR"
				lEdit := aEdit[nX][2]
				Exit
			EndIf
		Next nX

		cVar		:= cMoeda565
		cVar1		:= cIntervalo
		__cForn565	:= cFornece
		M->E2_TIPO	:= cTipo

		If a565Forn(.T.)
			nOpca := 1
		Else
			nOpca := 2
		EndIf

	EndIf

	If nOpca == 0
		If Existblock("FA565OUT")
			Execblock("FA565OUT",.F.,.F.)
		Endif
		Exit
	EndIf

	If nOpca == 2
		Loop
	EndIf

	//Metricas - Carregamento da tela de seleção - INICIO
	If __lMetric
		nInicio := Seconds()
	Endif

	DbSelectArea('SA2')
	SA2->(DbSetOrder(1))
	If SA2->(DbSeek(xFilial("SA2")+cFornece+__cLoja)) .And. AllTrim(SA2->A2_NREDUZ) != AllTrim(cNomeForn)
		cNomeForn := SA2->A2_NREDUZ
	EndIf

	nMoeda		:= Val(Substr(cVar,1,2))
	cSimb		:= Pad(SuperGetmv("MV_SIMB"+Alltrim(STR(nMoeda))),4)
	nIntervalo	:= Val(Substr(cVar1,1,2))
	nChoice		:= Val(Substr(cOutrMoed,1,1))

	//Acrescenta o símbolo da moeda do processo de liquidação
	For nX := 9 to 15
		aCpoBro [nX,3] += 	cSimb
	Next

	SomaAbat("","","","P")
	cAliasSE2 := A565SelSE2(@cArqFil)

	If (cAliasSE2)->(Eof())
		Help(" ",1,"RECNO")
		Exit
	Endif

	cLiquid	:= Soma1(GetMv("MV_NUMLIQP"))

	While !MayIUseCode( "E2_NUMLIQP"+xFilial("SE2")+cLiquid )  //verifica se esta na memoria, sendo usado
		cLiquid := Soma1(cLiquid) // busca o proximo numero disponivel
	EndDo

	// Ponto de entrada para manipulacao do numero de
	// liquidacao. Deve retornar um novo nro de liquidacao
	// e ja deve gravar no parametro MV_NUMLIQP para nao causar
	// duplicidade na numeracao. O ponto deve ser executado nesse
	// ponto para nao perder a numeracao desnecessariamente caso
	// nao haja titulos a serem selecionados.
	IF lF565Num
		While .T.
			cLiquid := ExecBlock("F565NUM",.F.,.F.)

			If !MayIUseCode("E2_NUMLIQ"+xFilial("SE2")+cLiquid) //verifica se esta na memoria, sendo usado busca o proximo numero disponivel
				Help(" ",1,"A460LIQ")
			Else
				Exit
			EndIf
		EndDo
	Endif

	//Cria Arquivo Temporario
	Fa565Gerarq(aCampos)

	nOpca		:= 0
	nValor		:= 0	// Valor total dos titulos,mostrado no rodape do browse
	nValCruz	:= 0	// Acumula Valor original na moeda nacional
	nJuros		:= 0
	nVa			:= 0 	// Valor Acessório
	nDesc		:= 0
	nAbatim		:= 0
	nQtdTit		:= 0	// Quantidade de titulos,mostrado no rodape do browse
	lContinua	:= .T.
	cAlias		:= "TRB"

	//Carrega Registros do Arquivo Temporario
	Fa565Repl(TRB, cAliasSE2, lEdit, cMarca, aEdit, lAutomato, aMatVal)

	If !Empty(cArqFil)
		CtbTmpErase(cArqFil)
	Endif

	DbSelectArea(cAliasSE2)
	DbCloseArea()

	// Monta MarkBrowse para selecionar os titulos p/ liquidacao
	nOpca := 0
	dbSelectArea("TRB")

	//Metricas - Carregamento da tela de seleção
	If __lMetric
		nRegProc := TRB->(Reccount())
	Endif

	If nValorMax > 0
		DBEVAL({ |a| FA565DBEVA(nValorMax, @nQtdTit)})
		dbSelectArea("TRB")
	Endif

	TRB->(dbGotop())
	dbSelectArea("SA2")
	SA2->(DbSetOrder(1))

	If SA2->(dbSeek(xFilial("SA2")+cFornece+__cLoja))
		While !SA2->(Eof()) .And. xFilial("SA2")+cFornece+__cLoja == SA2->(A2_FILIAL+A2_COD+A2_LOJA)
	    	If SA2->A2_NREDUZ == cNomeForn
		   		cDsFornece := GetLGPDValue("SA2","A2_NOME")
		   		Exit
			EndIf
	   		SA2->(dbSkip())
		EndDo
	Endif

	//Metricas - Carregamento da tela de seleção - FIM
	If __lMetric .and. nRegProc > 0
		nFim := Seconds() - nInicio
		nFim := nFim / nRegProc

		SetFunName(__cFunMet)
		FwCustomMetrics():setAverageMetric(Alltrim(ProcName())+" - TempoEntrada", "financeiro-protheus_tempo-conclusão-processo_seconds", nFim)
		SetFunName(__cFunBkp)
	Endif

	If !lAutomato
		// Faz o calculo automatico de dimensoes de objetos
		aSize := MSADVSIZE()
		oSize := FWDefSize():New(.T.)
		oSize:AddObject("MASTER",100,100,.T.,.T.)
		oSize:lLateral := .F.
		oSize:lProp := .T.
		oSize:Process()

		DEFINE MSDIALOG oDlgKco TITLE cCadastro PIXEL FROM oSize:aWindSize[1],oSize:aWindSize[2] To oSize:aWindSize[3],oSize:aWindSize[4] OF oMainWnd
		oTimer:= TTimer():New(nTimeOut,{|| MsgTimer(nTimeMsg, oDlgKco) },oDlgKco) // Ativa timer
		oTimer:Activate()

		nLinIni := oSize:GetDimension("MASTER","LININI")
		nColIni := oSize:GetDimension("MASTER","COLINI")
		nLinFin := oSize:GetDimension("MASTER","LINEND")
		nColFin := oSize:GetDimension("MASTER","COLEND")

		If Len(AllTrim(cDsFornece)) >= 35
		@ nLinIni + 001, 002  To nLinIni+045,nColFin PIXEL OF oDlgKco

			@ nLinIni + 003, 005 Say STR0053		FONT oDlgKco:oFont  PIXEL Of oDlgKco  //"Nro. Liquida‡„o "
			@ nLinIni + 003, 060 Say cLiquid Picture "@!"	FONT oFnt COLOR CLR_HBLUE PIXEL Of oDlgKco
			@ nLinIni + 012, 005 Say STR0020 + cFornece + " - " + cDsFornece	FONT oDlgKco:oFont  PIXEL Of oDlgKco //"Fornecedor  "
			@ nLinIni + 021, 005 Say STR0021 + __cLoja							FONT oDlgKco:oFont  PIXEL Of oDlgKco //"Loja  "
			@ nLinIni + 030, 005 Say STR0022 + AllTrim(Str(nMoeda,2,0))		FONT oDlgKco:oFont  PIXEL Of oDlgKco //"Moeda  "

			//Coluna 2
			@ nLinIni + 003, 200 Say STR0025 		SIZE 50,8 FONT oDlgKco:oFont PIXEL Of oDlgKco  //"Valor Digitado "
			@ nLinIni + 003, 280 Say oValorMax	VAR nValorMax	Picture "@E 999,999,999.99" FONT oDlgKco:oFont PIXEL Of oDlgKco
			@ nLinIni + 021, 200 Say STR0027		SIZE 50,8 FONT oDlgKco:oFont PIXEL Of oDlgKco  //"Qtde Titulos "
			@ nLinIni + 021, 280 Say oQtdTit  	VAR nQtdTit  	Picture "9999"  				 FONT oDlgKco:oFont PIXEL Of oDlgKco
			@ nLinIni + 030, 200 Say STR0023 + Dtoc(dData565I) 				FONT oDlgKco:oFont  PIXEL Of oDlgKco //"Emiss„o de  "
			@ nLinIni + 030, 275 Say STR0024 + Dtoc(dData565F)				FONT oDlgKco:oFont  PIXEL Of oDlgKco //"at‚  "

			//Coluna 3
			@ nLinIni + 003, 350 Say STR0026		SIZE 50,8 FONT oDlgKco:oFont PIXEL Of oDlgKco  //"Valor Selecionado ""
			@ nLinIni + 003, 430 Say oValor   	VAR nValor		Picture "@E 999,999,999.99" FONT oDlgKco:oFont PIXEL Of oDlgKco

		Else

			@ nLinIni + 001, 002  To nLinIni+045,nColFin PIXEL OF oDlgKco

		@ nLinIni + 003, 005 Say STR0053		FONT oDlgKco:oFont  PIXEL Of oDlgKco  //"Nro. Liquida‡„o "
		@ nLinIni + 003, 060 Say cLiquid Picture "@!"	FONT oFnt COLOR CLR_HBLUE PIXEL Of oDlgKco

		@ nLinIni + 012, 005 Say STR0020 + cFornece + " - " + cDsFornece	FONT oDlgKco:oFont  PIXEL Of oDlgKco //"Fornecedor  "
		@ nLinIni + 012, 170 Say STR0021 + __cLoja							FONT oDlgKco:oFont  PIXEL Of oDlgKco //"Loja  "
		@ nLinIni + 030, 005 Say STR0022 + AllTrim(Str(nMoeda,2,0))		FONT oDlgKco:oFont  PIXEL Of oDlgKco //"Moeda  "
		@ nLinIni + 021, 005 Say STR0023 + Dtoc(dData565I) 				FONT oDlgKco:oFont  PIXEL Of oDlgKco //"Emiss„o de  "
		@ nLinIni + 021, 080 Say STR0024 + Dtoc(dData565F)				FONT oDlgKco:oFont  PIXEL Of oDlgKco //"at‚  "

		//Coluna 2
		@ nLinIni + 003, 200 Say STR0025 		SIZE 50,8 FONT oDlgKco:oFont PIXEL Of oDlgKco  //"Valor Digitado "
		@ nLinIni + 003, 280 Say oValorMax	VAR nValorMax	Picture "@E 99,999,999,999.99" FONT oDlgKco:oFont PIXEL Of oDlgKco
		@ nLinIni + 012, 200 Say STR0026		SIZE 50,8 FONT oDlgKco:oFont PIXEL Of oDlgKco  //"Valor Selecionado "
		@ nLinIni + 012, 280 Say oValor   	VAR nValor		Picture "@E 99,999,999,999.99" FONT oDlgKco:oFont PIXEL Of oDlgKco
		@ nLinIni + 021, 200 Say STR0027		SIZE 50,8 FONT oDlgKco:oFont PIXEL Of oDlgKco  //"Qtde Titulos "
		@ nLinIni + 021, 280 Say oQtdTit  	VAR nQtdTit  	Picture "9999"  				 FONT oDlgKco:oFont PIXEL Of oDlgKco

		EndIf

		oMark 		:= MsSelect():New("TRB","MARCA","",aCpoBro,.F.,@cMarca,{nLinIni + 48, nColIni, nLinFin, nColFin}, , )
		oMark:bMark := {||A565Exibe(cMarca,oValor,oQtdTit)}
		oMark:bAval	:= {||Fa565bAval(cMarca,oValor,oQtdTit,oMark)}
		oMark:oBrowse:lhasMark := .t.
		oMark:oBrowse:lCanAllmark := .t.
		oMark:oBrowse:bAllMark := { || A565Inverte(cMarca,oValor,oQtdTit,.T.,oMark)}

		If lPanelFin  //Chamado pelo Painel Financeiro
			aBut565 := {}
		   	AADD(aBut565,{"PESQUISA",{||Fa565Pesq(oMark)}, STR0095,STR0095}) //"Pesquisar..(CTRL-P)"###"Pesquisar"
			AADD(aBut565,{"NOTE",{||Fa565Edit(oValor,oQtdTit, aMatVal, nMoeda)}, STR0094,STR0094}) //"Edita Registro..(CTRL-E)"###"Editar"

			ACTIVATE MSDIALOG oDlgKco ON INIT FaMyBar(oDlgKco,  {|| nOpca := 1,oDlgKco:End()},;
																{|| nOpca := 2,oDlgKco:End()},aBut565) VALID (oTimer:End(),.T.)
		Else
			ACTIVATE MSDIALOG oDlgKco ON INIT Fa565Bar(oDlgKco, {|| nOpca := 1,oDlgKco:End()},;
																{|| nOpca := 2,oDlgKco:End()},oMark,oValor,oQtdTit,aMatVal,nMoeda) VALID (oTimer:End(),.T.)
		Endif
	Else
		nQtdTit := TRB->(RECCOUNT())
		nOpca := 1
	EndIf

	If nOpca == 2 .or. nOpca == 0
		If Existblock("F565SAID")
			Execblock("F565SAID",.F.,.F.)
		EndIf

		FreeUsedCode()  //libera codigos de correlativos reservados pela MayIUseCode()
		Processa({|| DBloqSE2()}, STR0192) //Destravando os Títulos Selecionados
		Exit
	EndIf

	If SuperGetMV( "MV_FINCTAL", .T., "1" ) == "2"
		MsgInfo(STR0185 + AllTrim(Str(nMoeda)) + ".",STR0186) //Para a liquidação será adotado o aprovador padrão para a moeda: " ### "Controle de alçadas ativo"
	Endif

	DbSelectArea("TRB")

	If Existblock("F565GRV")
		Execblock("F565GRV",.F.,.F.)
	Endif

	If nValor == 0
		//Efetuar a liquida‡„o qdo um Titulo NCC deduzir at‚ zero seu titulo original correspondente (Argentina).
		If cPaisLoc == "ARG"
			a565Grava({},{})
		EndIf

		//Destrava só os registros marcados.
		Processa({|| DBloqSE2()}, STR0192)	//	"Destravando os Títulos Selecionados"
		Exit
	EndIf

	nUsado2 := 0
	cMoeda := AllTrim(Str(nMoeda,2))
	Aadd(aHeader,{STR0069,"E2_PREFIXO",	PesqPict("SE2","E2_PREFIXO"),	aE2Pre[1],		aE2Pre[2],	"AllWaysTrue()",	"û","C","SE2" } )		//"PREFIXO "
	Aadd(aHeader,{STR0159,"E2_TIPO",	PesqPict("SE2","E2_TIPO"),		aE2Tipo[1],		aE2Tipo[2],	"FA565TIPO()",		"û","C","SE2" } )		//"TIPO"
	Aadd(aHeader,{STR0029,"E2_BCOCHQ",	PesqPict("SE2","E2_BCOCHQ"),	aTamBco[1],		0,			"AllWaysTrue()",	"û","C","SE2" } )		//"BCO. "
	Aadd(aHeader,{STR0030,"E2_AGECHQ",	PesqPict("SE2","E2_AGECHQ"),	aTamAge[1],		0,			"AllwaysTrue()",	"û","C","SE2" } )		//"AGENCIA"
	Aadd(aHeader,{STR0031,"E2_CTACHQ",	PesqPict("SE2","E2_CTACHQ"),	aTamCta[1],		0,			"AllwaysTrue()",	"û","C","SE2" } )		//"CONTA"
	Aadd(aHeader,{STR0032,"E2_NUM",		PesqPict("SE2","E2_NUM"),		aTam[1],		0,			"a565NumChq()",		"û","C","SE2" } )		//"NRO. CHEQUE"
	Aadd(aHeader,{STR0033,"E2_VENCTO",	" ",							8,				0,			"a565DataOK()",		"û","D","SE2" } )		//"DATA BOA"
	Aadd(aHeader,{STR0034,"E2_VLCRUZ",	PesqPict("SE2","E2_VLCRUZ"),	aE2VlCr[1],		aE2VlCr[2],	"A565Valor()",		"û","N","SE2" } )		//"VALOR"
	Aadd(aHeader,{STR0116,"E2_ACRESC",	PesqPict("SE2","E2_ACRESC"),	aE2Acres[1],	aE2Acres[2],"A565Valor()",		"û","N","SE2" } )		//"ACRESCIIMOS"
	Aadd(aHeader,{STR0117,"E2_DECRESC",	PesqPict("SE2","E2_DECRESC"),	aE2Decre[1],	aE2Decre[2],"A565Valor()",		"û","N","SE2" } )		//"DECRESCIMOS"
	Aadd(aHeader,{STR0118,"E2_VALOR",	PesqPict("SE2","E2_VALOR"),		aE2Vl[1],		aE2Vl[2],	"AllwaysTrue()",	"û","N","SE2" } )		//"VALOR TOTAL"

	// Monta array com os campos alteraveis na getdados. O ultimo campo sera
	// apenas para mostrar o valor final do cheque (valor+acres-Decres)
	// na posicao 10 do aheader.
	If lA565Col
		ExecBlock("A565COL", .F., .F. )
	Endif

	nUsado2 := Len(aHeader)

	For nCntFor := 1 to nUsado2
		If nCntFor != 11
			Aadd(aAltera,aHeader[nCntFor,2])
		Endif
	Next nCntFor

	aCols   := Array( 1 , (nUsado2+1) )
	aCols[1, nUsado2+1] := .F.

	For nCntFor := 1 To nUsado2
		aCols[1,nCntFor] := CriaVar(aHeader[nCntFor,2],.T.)
	Next nCntFor

	nOpca := 0

	//Ponto de entrada para manipular a taxa contratada dos titulos a serem gerados pela liquidação.
	If lA565TxL .and. nMoeda > 1
		nTxLiq := ExecBlock("A565TXL", .F., .F. )

		If nTxLiq == NIL .Or. Valtype( nTxLiq ) != "N"
			nTxLiq := 0
		EndIf
	Endif

	If !lAutomato
		oSize := FWDefSize():New(.T.)
		oSize:AddObject("MASTER",100,100,.T.,.T.)
		oSize:lLateral := .F.
		oSize:lProp := .T.
		oSize:Process()

		DEFINE MSDIALOG oPanel2 TITLE cCadastro PIXEL FROM oSize:aWindSize[1],oSize:aWindSize[2] To oSize:aWindSize[3],oSize:aWindSize[4] OF oMainWnd

		nLinIni := oSize:GetDimension("MASTER","LININI")
		nColIni := oSize:GetDimension("MASTER","COLINI")
		nLinFin := oSize:GetDimension("MASTER","LINEND")
		nColFin := oSize:GetDimension("MASTER","COLEND")

		@ nLinIni + 001, 002  To nLinIni+024,nColFin PIXEL OF oPanel2

		@ nLinIni+003 , 004 SAY STR0053	             		FONT oPanel2:oFont 				PIXEL Of oPanel2	//"Nro. Liquida‡„o "
		@ nLinIni+003 , 060 SAY cLiquid	Picture "@!"		FONT oFnt COLOR CLR_BLUE		PIXEL Of oPanel2
		@ nLinIni+003 , 200 SAY STR0023	+ Dtoc(dData565I) 	FONT oPanel2:oFont				PIXEL Of oPanel2	//"Emiss„o de  "
		@ nLinIni+003 , 275	SAY STR0024	+ Dtoc(dData565F)	FONT oPanel2:oFont				PIXEL Of oPanel2	//"at‚  "

		@ nLinIni+012 , 004 SAY STR0020	+ cFornece			FONT oPanel2:oFont				PIXEL Of oPanel2	//"Cliente  "
		@ nLinIni+012 , 060 SAY STR0021						FONT oPanel2:oFont  			PIXEL Of oPanel2	//"Loja  "
		@ nLinIni+012 , 075 MSGET oLjFor VAR __cLoja F3 "SA1" SIZE 20,6	FONT oPanel2:oFont	PIXEL Of oPanel2	HASBUTTON
		oLjFor:lReadOnly := .T.

		@ nLinIni+012 , 200	SAY STR0036			 SIZE 25,6	FONT oPanel2:oFont				PIXEL Of oPanel2  //"Valor  "
		@ nLinIni+012 , 260 SAY nValor Picture PesqPict("SE2","E2_VALOR") FONT oPanel2:oFont 		PIXEL Of oPanel2

		//Linha Separador
		@ nLinIni+025, 002  To nLinIni+082, nColFin PIXEL OF oPanel2

		@ nLinIni+028, 004 SAY STR0037	SIZE 40,8 FONT oPanel2:oFont PIXEL Of oPanel2  //"Condicao  "
		@ nLinIni+041, 004 SAY STR0068	SIZE 40,8 FONT oPanel2:oFont PIXEL Of oPanel2  //"Tipo"
		@ nLinIni+054, 004 SAY STR0038	SIZE 40,8 FONT oPanel2:oFont PIXEL Of oPanel2  //"Natureza  "
		@ nLinIni+067, 004 SAY STR0190 PIXEL Of oPanel2 //Taxa Moeda

		@ nLinIni+028, 060 MSGET cCondicao F3 "SE4" Picture "!!!" SIZE 10,8 FONT oPanel2:oFont;
			Valid IIf( Empty(cCondicao), .T., (ExistCpo("SE4",cCondicao) .and. SE4->E4_TIPO != "9")) .and. A565Cond(cCondicao,nUsado2) hasbutton PIXEL Of oPanel2

		@ nLinIni+041, 060 MSGET M->E2_TIPO F3 "05" Picture "!!!" SIZE 10,8 FONT oPanel2:oFont Valid Empty(M->E2_TIPO) .or. FA565Tipo(@M->E2_TIPO) hasbutton PIXEL Of oPanel2
		@ nLinIni+054, 060 MSGET cNatureza		F3 "SED" Valid A565NATUR(cNatureza) SIZE 40,8 FONT oPanel2:oFont hasbutton PIXEL Of oPanel2
		@ nLinIni+067, 060 MSGET nTxLiq When If(nMoeda > 1, .T., .F.) Picture PesqPict("SE2","E2_TXMOEDA") PIXEL Of oPanel2 hasbutton

		@ nLinIni+028, 200 SAY STR0040	SIZE 35,6 FONT oPanel2:oFont  PIXEL Of oPanel2 //"Qtde Parcelas  "
		@ nLinIni+028, 280 SAY oNroParc 	VAR nNroParc 	Picture PesqPict("SE2","E2_PARCELA") FONT oPanel2:oFont PIXEL Of oPanel2
		@ nLinIni+038, 200 SAY STR0039	SIZE 35,6 FONT oPanel2:oFont  PIXEL Of oPanel2 //"Valor Total  "
		@ nLinIni+038, 280 SAY oValorLiq	VAR nValorLiq	Picture PesqPict("SE2","E2_VALOR") SIZE 100,8 FONT oPanel2:oFont PIXEL Of oPanel2
		@ nLinIni+048, 200 SAY STR0119	SIZE 35,6 FONT oPanel2:oFont  PIXEL Of oPanel2 //"Acrescimos"
		@ nLinIni+048, 280 SAY oValorAcr	VAR nValorAcr	Picture PesqPict("SE2","E2_ACRESC") SIZE 100,8 FONT oPanel2:oFont PIXEL Of oPanel2
		@ nLinIni+058, 200 SAY STR0120	SIZE 35,6 FONT oPanel2:oFont  PIXEL Of oPanel2 //"Decrescimos"
		@ nLinIni+058, 280 SAY oValorDcr	VAR nValorDcr	Picture PesqPict("SE2","E2_DECRESC") SIZE 100,8 FONT oPanel2:oFont PIXEL Of oPanel2
		@ nLinIni+068, 200 SAY STR0121	SIZE 35,6 FONT oPanel2:oFont  PIXEL Of oPanel2 //"Total Geral"
		@ nLinIni+068, 280 SAY oValorTot	VAR nValorTot	Picture PesqPict("SE2","E2_VALOR") SIZE 100,8 FONT oPanel2:oFont PIXEL Of oPanel2

		oGet := MsGetDados():New(nLinIni+084, nColIni, nLinFin, nColFin, nOpcx, "A565OK", "A565TudoOK(.F.)", "", .T., aAltera,,,200)

		If lPanelFin //Chamado pelo Painel Financeiro
		   ACTIVATE MSDIALOG oPanel2 ON INIT FaMyBar(oPanel2, {||cTipo := M->E2_TIPO, nOpca := 1, If(oGet:TudoOk() .And. F565COTMOE(nMoeda, nTxLiq), oPanel2:End(), nOpca := 0)}, {||oPanel2:End()})
		Else
			ACTIVATE MSDIALOG oPanel2 ON INIT EnchoiceBar(oPanel2, {||cTipo := M->E2_TIPO, nOpca := 1, If(oGet:TudoOk() .And. F565COTMOE(nMoeda, nTxLiq), oPanel2:End(), nOpca := 0)} ,{||oPanel2:End()})
		Endif
	Else
		//aCols
		lCondicao := !Empty(cCondicao)

		If !lCondicao
			nPTipo		:= aScan( aHeader, { |z| AllTrim( Upper(z[2])) == "E2_TIPO"		} )
			nPVlCru		:= aScan( aHeader, { |z| AllTrim( Upper(z[2])) == "E2_VLCRUZ"	} )
			nPVenc		:= aScan( aHeader, { |z| AllTrim( Upper(z[2])) == "E2_VENCTO"	} )
			nPValo		:= aScan( aHeader, { |z| AllTrim( Upper(z[2])) == "E2_VALOR"	} )

			nPTipo2		:= aScan( aColItens[1], { |z| AllTrim( Upper(z[1])) == "E2_TIPO"	} )
			nPVlCru2	:= aScan( aColItens[1], { |z| AllTrim( Upper(z[1])) == "E2_VLCRUZ"	} )
			nPVenc2		:= aScan( aColItens[1], { |z| AllTrim( Upper(z[1])) == "E2_VENCTO"	} )
			nPValo2		:= aScan( aColItens[1], { |z| AllTrim( Upper(z[1])) == "E2_VALOR"	} )
		Else
			A565Cond(cCondicao, nUsado2, cTipo, lAutomato)
		EndIF

		nPPre		:= aScan( aHeader, { |z| AllTrim( Upper(z[2])) == "E2_PREFIXO"	} )
		nPBcoChq	:= aScan( aHeader, { |z| AllTrim( Upper(z[2])) == "E2_BCOCHQ"	} )
		nPAgeChq	:= aScan( aHeader, { |z| AllTrim( Upper(z[2])) == "E2_AGECHQ"	} )
		nPCtaChq	:= aScan( aHeader, { |z| AllTrim( Upper(z[2])) == "E2_CTACHQ"	} )
		nPNum		:= aScan( aHeader, { |z| AllTrim( Upper(z[2])) == "E2_NUM"		} )
		nPAcre		:= aScan( aHeader, { |z| AllTrim( Upper(z[2])) == "E2_ACRESC"	} )
		nPDecr		:= aScan( aHeader, { |z| AllTrim( Upper(z[2])) == "E2_DECRESC"	} )

		nPPre2		:= aScan( aColItens[1], { |z| AllTrim( Upper(z[1])) == "E2_PREFIXO"	} )
		nPBcoChq2	:= aScan( aColItens[1], { |z| AllTrim( Upper(z[1])) == "E2_BCOCHQ"	} )
		nPAgeChq2	:= aScan( aColItens[1], { |z| AllTrim( Upper(z[1])) == "E2_AGECHQ"	} )
		nPCtaChq2	:= aScan( aColItens[1], { |z| AllTrim( Upper(z[1])) == "E2_CTACHQ"	} )
		nPNum2		:= aScan( aColItens[1], { |z| AllTrim( Upper(z[1])) == "E2_NUM"		} )
		nPAcre2		:= aScan( aColItens[1], { |z| AllTrim( Upper(z[1])) == "E2_ACRESC"	} )
		nPDecr2		:= aScan( aColItens[1], { |z| AllTrim( Upper(z[1])) == "E2_DECRESC"	} )

		nTamAcols := IIf(!lCondicao, Len(aColItens),Len(aCols))
		nY := 1

		For nX := 1 To nTamAcols
			If nX <> 1 .And. !lCondicao
				For nCntPos := 1 To nUsado2
					aAdd(aAutAux,CriaVar(aHeader[nCntPos,2],.T.))
				Next nCntFor

				aAdd(aCols,aAutAux)
				aAdd(aCols[nX],.F.)
				aAutAux := {}

			EndIf

			If !lCondicao
				nY := nX
			EndIf

			If nPPre2 <> 0
				aCols[nX][nPPre]	:= aColItens[nY][nPPre2][2]
			EndIF

			If nPTipo2 <> 0
				aCols[nX][nPTipo]	:= aColItens[nY][nPTipo2][2]
			EndIf

			If nPBcoChq2 <> 0
				aCols[nX][nPBcoChq]	:= aColItens[nY][nPBcoChq2][2]
			EndIF

			If nPAgeChq2 <> 0
				aCols[nX][nPAgeChq]	:= aColItens[nY][nPAgeChq2][2]
			EndIF

			If nPCtaChq2 <> 0
				aCols[nX][nPCtaChq]	:= aColItens[nY][nPCtaChq2][2]
			EndIF

			IF nX <> 1 .And. lCondicao
				aCols[nX][nPNum]	:= Soma1(aColItens[1][nPNum2][2])
			Else
				aCols[nX][nPNum]	:= aColItens[nY][nPNum2][2]
			EndIf

			If nPVenc2 <> 0
				aCols[nX][nPVenc]	:= aColItens[nY][nPVenc2][2]
			EndIf

			If nPVlCru2 <> 0
				aCols[nX][nPVlCru]	:= aColItens[nY][nPVlCru2][2]
			EndIf

			If nPAcre2 <> 0
				aCols[nX][nPAcre]	:= aColItens[nY][nPAcre2][2]
			EndIf

			If nPDecr2 <> 0
				aCols[nX][nPDecr]	:= aColItens[nY][nPDecr2][2]
			EndIf

			If nPValo2 <> 0
				aCols[nX][nPValo]	:= aColItens[nY][nPValo2][2]
			EndIf

			If nUsado2 > 11
				For nZ := 12 to nUsado2
					aCols[nX][nZ]	:= aColItens[nY][nZ][2]
				Next
			Endif
		Next nX

		cTipo := M->E2_TIPO

		If A565TudoOK(lAutomato) .And. F565COTMOE(nMoeda, nTxLiq)
			nOpca := 1
		EndIf
	EndIf

	SetKey(14,NIL)

	If nOpcA == 1 .And. !Empty(aCols)
		If !lF565Num .And. GetMv("MV_NUMLIQP") < cLiquid
			dbSelectArea("SX6")
			PutMv("MV_NUMLIQP", cLiquid)
    	Endif

		a565Grava(aHeader, aCols, nTxLiq, aMatVal)
	EndIf

	If nOpca != 1 .And. (lF565Can .Or. lF565CON)
		If lF565Can
			Execblock("F565CAN",.F.,.F.)		// P.E para log cancelamento
		Else
			Execblock("F565CON",.F.,.F.)		// P.E para log confirmacao
		EndIf
	Endif

	MsUnlockAll()

	Exit
End

__cForn565 := " "
__cLoja    := " "

FreeUsedCode()  //libera codigos de correlativos reservados pela MayIUseCode()
RELEASE FONT oFnt
cCadastro := STR0001  // "Liquidação"
SE2->(RestArea(aAreaSe2))

Return


/*/{Protheus.doc} DBloqSE2
(long_description)
@type "DesBloqueia os Títulos Selecionados")
@author Mario
@since 26/07/2018
@version 1.0
/*/

Static Function DBloqSE2

TRB->(dbSetOrder(2))
TRB->(dbSeek(cMarca))
While !TRB->(EOF()) .And. !Empty(TRB->MARCA)
	SE2->(dbGoto(TRB->E2_REC))
	SE2->(MsUnlock())
	TRB->(dbSkip())
Enddo

Return

//-------------------------------------------------------------------
/*{Protheus.doc} A565Forn
Verifica se fornecedor existe

@param oFor565, objeto que contem os dados do fornecedor
@param oLjFor, objeto que contem os dados da loja do fornecedor
@param lAutomato, Verifica se esta sendo chamada por rotina automatica

@author Vitor Duca
@since  15/10/2019
*/
//-------------------------------------------------------------------
STATIC Function A565Forn(lAutomato)
	Local lRetorna as Logical
	Local cChave   as Character
	Local aArea    as Array
	Local cCampo   As Character

	Default lAutomato := .F.

	lRetorna := .T.
	cChave 	 := ""
	aArea	 := GetArea()
	cCampo   := ReadVar()

	DbSelectArea("SA2")
	SA2->(DbSetOrder(1))

	If !lAutomato .and. Type("aCpoRet") == "U" // variavel aCpoRet so é preenchida quando utiliza a consulta padrao(F3).
		If cCampo == "__CFORN565"
			cChave := __cForn565
			If SA2->(DbSeek(xFilial("SA2")+cChave,.F.))
				If __cLoja <> SA2->A2_LOJA
					__cLoja := SA2->A2_LOJA
				EndIf
				// Avalia se o fornecedor esta bloqueado se informado o fornecedor e loja
				If SA2->A2_MSBLQL == "1"
					Help(" ",1,"A565FORN",,STR0188,1,0) //"O código de fornecedor e loja informados para geração estão bloqueados."
					lRetorna := .F.
				Endif
			Else
				Help(" ",1,"A565FORN",,STR0189,1,0) //"O código de fornecedor e loja informados não estão cadastrados no sistema."
				lRetorna := .F.
			EndIf
		Endif

		If cCampo == "__CLOJA"
			cChave := __cForn565+__cLoja
			If SA2->(DbSeek(xFilial("SA2")+cChave))
				lRetorna := .T.
				If SA2->A2_MSBLQL == "1"
					Help(" ",1,"A565FORN",,STR0188,1,0) //"O código de fornecedor e loja informados para geração estão bloqueados."
					lRetorna := .F.
				Endif
			Else
				Help(" ",1,"A565FORN",,STR0189,1,0) //"O código de fornecedor e loja informados não estão cadastrados no sistema."
				lRetorna := .F.
			EndIf
		EndIf
	Else
		cChave := __cForn565+__cLoja
		If SA2->(DbSeek(xFilial("SA2")+cChave))
			lRetorna := .T.
		Else
			lMsErroAuto := .T.
			lRetorna := .F.
		Endif
	Endif

	RestArea(aArea)
Return lRetorna

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³A565OK    ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 22/01/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida Linha do Getdados   								  			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A565OK()												  	  				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA565													  				  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a565OK()
Local lRet := .T.
Local nCont
Local cAtual := aCols[n,3]+aCols[n,4]+aCols[n,5]+aCols[n,6]
Local lOk := .F.
Local lRetPE
Local nCont2

// Verifica se o linha foi deletada, liberando a movimentacao
// para as outras linhas
If aCols[n,nUsado2+1]
	Return .T.
EndIf

// Verifica se o Valor do cheque = 0
If aCols[n,8] = 0
	Return .F.
EndIf

// Verifica se n„o existem campos em branco, descartando o
// campo prefixo.
For nCont2 := 2 to 8
	If Empty (aCols[n,nCont2] )
		if ! lOk
			Help(" ",1,"A460VAZIOS")
			Return .F.
		EndIf
	EndIf
Next nCont2

// Verifica se data n„o ‚ menor que database
If !aCols[n,nUsado2+1]
	If aCols[n,7] < dDataBase
		Help(" ",1,"A460DTCHEQ")
		Return .F.
	EndIf
EndIf

// Ponto de Entrada para desativar validação da Numeração
If Existblock("FA565LOK")
	lRetPE := Execblock("FA565LOK",.F.,.F.)
	If ValType(lRetPE) == "L"
		Return lRetPE
	Endif
Else
	If !aCols[n,nUsado2+1]
		For nCont := 1 to Len (aCols)
		// Verifica se Cheque ja existe
			If !aCols[nCont,nUsado2+1]
				If aCols[nCont,3]+aCols[nCont,4]+aCols[nCont,5]+aCols[nCont,6] == cAtual .And. nCont <> n
					Help(" ",1,"A460EXISTE")
					Return .F.
				EndIf
			EndIf
		Next nCont
	EndIf
Endif

// Ponto de entrada para validacao da linha pelo usuario.
If Existblock("A565VALLIN")
	lRetPE := Execblock("A565VALLIN",.F.,.F.)
	If ValType(lRetPE) == "L"
		Return lRetPE
	Endif
Endif

// Verifica se Cheque nao excedeu o valor total da liquida‡„o
A565VALOR(.F.)
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³A565TudoOK³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 22/01/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida Toda a Getdados   											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A565TudoOK()															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA565																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a565TudoOK(lAutomato)
Local lRet := .T.
Local nCont := 0
Local nCont2 := 0
Local lOk := .F.
Local cpref
Local cNumChq
Local aChq := {}
Local lRetPE := .F.

Default lAutomato := .F.

//294 - Natureza Sintetica e Analitica
If !(FinVldNat( .F., cNatureza ))
	Return .F.
EndIf

// Verifica se n„o existem campos em branco ou zerados
// (somente possivel no calculo automatico de parcelas ).
// Descartando o campo prefixo.
For nCont := 1 to Len (aCols)
	For nCont2 := 2 to 8
		If Empty (aCols[nCont,nCont2] ) .and. !( aCols[nCont,nUsado2+1] )
			if ! lOk
				Help(" ",1,"A460VAZIOS")
				Return .F.
			EndIf
		EndIf
	Next nCont2
Next nCont

// Verifica se data n„o ‚ menor que database ou que a data
// da linha acima
For nCont := 1 to Len (aCols)
	If ! (aCols[nCont,nUsado2+1])
		If aCols[nCont,7] < dDataBase
			Help(" ",1,"A460DTCHEQ")
			lMsErroAuto := .T.
			Return .F.
		EndIf
	EndIf
Next nCont

If Existblock("FA565LOK")
	lRetPE := Execblock("FA565LOK",.F.,.F.)
Endif
if !lRetPE
	For nCont := 1 To len (aCols)
		cpref:= Alltrim(aCols[ncont][1])
		cNumChq:= Alltrim(aCols[ncont][6])
   		If aScan(aChq,{|x| x[1]==cpref .AND. x[2]==cNumChq}) > 0
    		MsgInfo("Existem títulos com Prefixo e Cheques iguais")
			lMsErroAuto := .T.
    		lret := .F.
		EndIF
		Aadd(aChq, {cPref,cNumChq} )
	Next nCont
Endif

// Verifica se Cheques nao excederam o valor total da liquida‡„o
A565Valor(.F.,lAutomato)
If ( nValorLiq + nValorAcr - nValorDcr ) > nValor
	//Valor da liquidação é superior ao valor total do(s) título(s) selecionado(s), deseja continuar ?
	If !lAutomato .and. !MSGYESNO( STR0194, STR0051 )
		lMsErroAuto := .T.
		lRet := .F.
	EndIf
EndIf

If ExistBlock("F565TOK")
	lRet := ExecBlock("F565TOK",.f.,.f.)
Endif

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³A565NumChq³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 22/01/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Numera cheques automaticamente se parcelamento automatico	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A565NumChq()														  	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA565																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a565NumChq()

Local nCont := 0
Local cBco	:= 0
Local cAge	:= 0
Local cNCon	:= 0
Local cNChq	:= 0
Local lInicial := .F.
Local cPrefixo := space(03)
Local nTamNum := TamSX3( "E1_NUM" )[ 1 ]

__cParc565 := F565Parc()

// Verifica existencia de titulo com mesmo numero
If !(A565VerNum(aCols[n,1],M->E2_NUM,aCols[n,2]))
	Help(" ",1,"A460EXISTE",,M->E2_NUM,3,1)
	Return .f.
EndIf

// Se parcelamento automatico e se primeira linha do aCols
// numera cheque automaticamente
aCols[n,6] :=  M->E2_NUM

If ( !Empty (cCondicao) ) .and. n == 1 .and. Len(aCols) > 1 .and. Empty (aCols[2,6])

	lInicial := .T.

	cBco := aCols[1,3]
	cAge := aCols[1,4]
	cNcon := aCols[1,5]
	cNChq := aCols[n,6]
	cPrefixo := aCols[1,1]
	If Empty(cPrefixo)
		aCols[1,1]:="A"
	   cPrefixo:= "A"
	Endif
	For nCont := 2 to Len (aCols)
		cNChq    := Pad( Soma1( AllTrim( cNChq    ) ) , nTamNum  )

		// Verifica existencia de titulo com mesmo numero
		IF !(A565VerNum(cPrefixo,cNChq,aCols[nCont,2]))
			Help(" ",1,"A460EXISTE",,cNChq,3,1)
			oGet:oBrowse:Refresh()
			oGet:Refresh()
			Return .f.
		EndIf
		aCols[nCont,1] := cPrefixo
		aCols[nCont,3] := cBco
		aCols[nCont,4] := cAge
		aCols[nCont,5] := cNCon
		aCols[nCont,6] := cNChq
	Next nCont
EndIf

If lInicial
	n := 1
EndIf

oGet:oBrowse:Refresh()
oGet:Refresh()
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³A565DataOK³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 22/01/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida Data na Getdados   								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A565DataOK()											  	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA565													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a565DataOK()

Local lRet := .T.

// Verifica se data n„o ‚ menor que database
If m->e2_vencto < dDataBase
	Help(" ",1,"A460DTCHEQ")
	lRet := .F.
EndIf
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³A565Valor ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 22/01/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Soma os Valores das Liquida‡oes							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A565Valor()											  	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA565													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a565Valor( lValida, lAutomato )

Local lRet := .T.
Local nVlLiq := 0
Local nVlAcr := 0
Local nVlDcr := 0
Local cVar
Local nCont

Default lAutomato := .F.

lValida := IIF(lValida == NIL, .T.,lValida)

If lValida
	// Caso o valor do decrescimo seja maior que o valor a
	// da parcela, ou se tente digitar valor de acrescimo e
	// decrescimo para a mesma parcela, retorna .F.
	cVar := ReadVar()
	DO CASE
		Case Alltrim(cVar) == "M->E2_VLCRUZ"
			nVlLiq	:= M->E2_VLCRUZ
			nVlAcr	:= aCols[n,9]
			nVlDcr	:= aCols[n,10]
		Case Alltrim(cVar) == "M->E2_ACRESC"
			nVlLiq	:= aCols[n,8]
			nVlAcr	:= M->E2_ACRESC
			nVlDcr	:= aCols[n,10]
		Case Alltrim(cVar) == "M->E2_DECRESC"
			nVlLiq	:= aCols[n,8]
			nVlAcr	:= aCols[n,9]
			nVlDcr	:= M->E2_DECRESC
	ENDCASE
	If nVlLiq < nVlDcr .or. (nVlAcr > 0 .and. nVlDcr > 0)
		Return .F.
	Endif
	aCols[n,8] := nVlLiq
	aCols[n,9] := nVlAcr
	aCols[n,10] := nVlDcr
Endif

nValorLiq := 0
nNroParc  := 0
nValorAcr := 0
nValorDcr := 0
nValorTot := 0

For nCont := 1 to Len(aCols)
	//Valor total (Valor Parcela + Acresc - Decresc) - Apenas informativo
	aCols[nCont,11] := aCols[nCont,8]+aCols[nCont,9]-aCols[nCont,10]
	If !aCols[nCont,nUsado2+1]    // Soma apenas os ativos
		nValorLiq  += aCols[nCont,8]
		nValorAcr  += aCols[nCont,9]
		nValorDcr  += aCols[nCont,10]
		nValorTot  += aCols[nCont,11]
		nNroParc ++
	EndIf
Next nCont

If !lAutomato
	oValorLiq:Refresh()
	oValorAcr:Refresh()
	oValorDcr:Refresh()
	oValorTot:Refresh()
	oNroParc:Refresh()
EndIf

Return lRet


//-------------------------------------------------------------------
/*/{Protheus.doc} A565SelSE2(nRecno)
Criação do arquivo TRB da liquidação

@param cArqFil    	Arquivo das filiais selecionadas
@Return cAliasSE2   Alias da tabela temporária criada

@author Mauricio Pequim Jr
@since 12/07/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Function A565SelSE2(cArqFil As Character) As Character
	Local cQuery		As Character
	Local cAliasSE2		As Character
	Local cTmpSe2Fil	As Character
	Local aTam			As Array
	Local lEmpComp		As Logical

	cQuery		:= ""
	cAliasSE2	:= ""
	cTmpSe2Fil	:= ""
	aTam		:= TamSX3("E2_VALOR")
	lEmpComp	:= FWModeAccess("SE2", 3) == "C"

	Default cArqFil		:= ""

	If ExistBlock("FA565OWN")
		//O ponto de entrada FA565OWN deve retornar a query do usuário
		cQuery := ExecBlock("FA565OWN",.F.,.F.)
	Else
		cQuery := "SELECT R_E_C_N_O_ FROM " + RetSQLName("SE2") + " "

		If lEmpComp
			cQuery += "WHERE " + FinSelFil(aSelFil, "SE2", lEmpComp)
		Else
			cQuery += "WHERE " + "E2_FILIAL " + GetRngFil( aSelFil, "SE2", .T., @cTmpSE2Fil)
			cArqFil := cTmpSE2Fil
		EndIf

		cQuery += " and E2_FORNECE >= '" + cFornDe + "'"
		cQuery += " and E2_FORNECE <= '" + cFornAte + "'"
		cQuery += " and E2_LOJA >= '" + cLojaDe + "'"
		cQuery += " and E2_LOJA <= '" + cLojaAte + "'"
		cQuery += " and E2_PREFIXO >= '" + cPrefDe + "'"
		cQuery += " and E2_PREFIXO <= '" + cPrefAte + "'"
		cQuery += " and E2_NUM >= '" + cNumDe + "'"
		cQuery += " and E2_NUM <= '" + cNumAte + "'"

		If nIntervalo == 1
			cQuery += " and E2_EMISSAO >= '" + DTOS(dData565I) + "'"
			cQuery += " and E2_EMISSAO <= '" + DTOS(dData565F) + "'"
		Else
			cQuery += " and E2_VENCTO >= '" + DTOS(dData565I) + "'"
			cQuery += " and E2_VENCTO <= '" + DTOS(dData565F) + "'"
			cQuery += " and E2_EMISSAO <= '" + DTOS(dDatabase) + "'"
		EndIf

		If nChoice == 2 //Nao converte outras moedas
			cQuery += " and E2_MOEDA = " + AllTrim(Str(nMoeda))
		Endif

		// AAF - Titulos originados no SIGAEFF não devem ser alterados
		cQuery += " and E2_ORIGEM NOT IN('SIGAEFF ', 'FINI055 ')"

		cQuery += " and E2_SALDO > 0"
		cQuery += " and E2_VALOR >= " + AllTrim(Str(nValorDe,aTam[1]+aTam[2]+1,aTam[2]))
		cQuery += " and E2_VALOR <= " + AllTrim(Str(nValorAte,aTam[1]+aTam[2]+1,aTam[2]))

		cQuery += " and not (E2_TIPO in " + FormatIn(MVABATIM,"|") + ")"

		If !lReliquida 	//Liquida titulos nÆo liquidados anteriormente
			cQuery += " and E2_NUMLIQ = '" + Space(TamSX3("E2_NUMLIQ")[1]) + "'"
		ElseIf lReliquida		// Reliquida‡ao
			cQuery  += " and E2_NUMLIQ <> '" + Space(TamSX3("E2_NUMLIQ")[1]) + "'"
		Endif

		cQuery += " and not (E2_TIPO in " + FormatIn(MVPROVIS + "|" + MVPAGANT + "|" + MV_CPNEG,"|") + ")"

		If l565Fil
		cQuery += ExecBlock("FA565FIL",.F.,.F.)
		Endif

		cQuery += " and D_E_L_E_T_ = ' '"

	EndIf

	cAliasSE2 := GetNextAlias()
	cQuery := ChangeQuery(cQuery)
	DbUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cAliasSE2,.F.,.T.)

	FwFreeArray(aTam)

Return(cAliasSE2)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FA565DBEVA³ Autor ³ Mauricio Pequim Jr	³ Data ³ 18/12/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Trata o dbeval para marcar e desmarcar item				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA565DBEVA()									  			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA565													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa565DbEva( nValorMax, nQtdTit )

If TRB->(MsRLock()) // Se conseguir travar o registro

	If nValor < nValorMax .And. (VALLIQ+nValor) <= nValorMax
		nValor += VALLIQ
		TRB->MARCA := cMarca
		nQtdTit++
	Else
		TRB->MARCA := " "
	EndIf

EndIf

Return Nil

//-------------------------------------------------------------------------
/*/{Protheus.doc} A565Grava
Programa de Atualizacao do SE2

@param aHeader	, Array		, aHeader
@param aCols	, Array		, aCols
@param nTxLiq	, Numeric	, Taxa Moeda utilizada na Liquidação
@return .T.		, Lógico	, Verdadeiro

@author Mauricio Pequim Jr.
@since  26/01/1998
@version 12.1.30
/*/
//-------------------------------------------------------------------------
Static Function A565Grava(aHeader as Array, aCols As Array, nTxLiq as Numeric, aMatVal As Array) as Logical
Local cArquivo 		As Character
Local nTotal  		As Numeric
Local nHdlPrv 		As Numeric
Local nCntFor 		As Numeric
Local nSe2Rec 		As Numeric
Local lHeadProva 	As Logical
Local lPadrao 		As Logical
Local cPadrao 		As Character
Local lContabiliza 	As Logical
Local lf565Val  	As Logical
Local lf565SE2  	As Logical
Local aComplem 		As Array
Local nTotBaixar  	As Numeric	// Valor total dos títulos selecionados.
Local lF565NDF  	As Logical
Local nTitBxd		As Numeric
Local lBxAbatim 	As Logical
Local nX           	As Numeric
Local nValorTotal 	As Numeric
Local nValPadrao 	As Numeric
Local i				As Numeric
Local lGeraNDF 		As Logical
Local aPcc			As Array
Local lRastro		As Logical
Local aRastroOri	As Array
Local aRastroDes	As Array
Local nValProces	As Numeric
Local aFlagCTB		As Array
Local lUsaFlag		As Logical
Local lPCCBaixa 	As Logical
Local lIRBaixa		As Logical
Local aPccBaixa		As Array //Pcc aqui
Local aIRBaixa		As Array //IR aqui
Local aIssBaixa		As Array //Iss aqui
Local nPropPcc		As Numeric
Local nPropIR		As Numeric
Local nPis			As Numeric
Local nCofins		As Numeric
Local nCsll			As Numeric
Local nIRRF			As Numeric
Local nTotPis		As Numeric
Local nTotCofins	As Numeric
Local nTotCsll		As Numeric
Local nTotIr		As Numeric
Local nTotLiq		As Numeric
Local nPropIss		As Numeric
Local nIss			As Numeric
Local nTotIss		As Numeric
Local nIssBaixa		As Numeric
Local nBasePcc		As Numeric
Local nBaseIR		As Numeric
Local nBaseIss		As Numeric
Local nTotBasPcc	As Numeric
Local nTotBasIR		As Numeric
Local nTotBasIss	As Numeric
Local lCalcIssBx 	As Logical
Local lInssBx		As Logical
Local nTamSeq		As Numeric
Local cSequencia	As Character
Local lAtuSldNat    As Logical
Local lFinVDoc		As Logical		//Controle de validacao de documentos obrigatorios
Local cFilialAtu	As Character
Local oModelBxP		As Object
Local oSubFK2		As Object
Local oSubFK6		As Object
Local cLog			As Character
Local cChaveTit		As Character
Local cChaveFK7		As Character
Local cCamposE5		As Character
Local lRet			As Logical
Local cCodAprov 	As Character
Local nSalImp 		As Numeric
Local nI			As Numeric
Local nZ			As Numeric
Local cOrigem   	As Character
Local lF565SE5		As Logical
Local aRecSe5		As Array
Local aAreaMNT		As Array
Local aAreaSE5		As Array
Local cIdOrig		As Character
Local nVa			As Numeric
Local nCasDec   	As Numeric
Local cChavSE2  	As Character
Local cChaveFK2 	As Character
Local nVlrJurDes 	As Numeric
Local lAcrDec		As Logical
Local lIntegNG      As Logical
Local cFunName      As Character
Local aTipoDoc      As Array
Local nTipoDoc      As Numeric
Local nSalDup       As Numeric
Local nSalDupM      As Numeric
Local nMvMcusto     As Numeric
Local nTxSm2Liq     As Numeric
Local nPos          As Numeric
Local nTaxaMov      As numeric
Local nSldTit       As Numeric
Local nInicio		As Numeric
Local nFim			As Numeric
Local nGravados		As Numeric

Private __LACO		As Numeric
Private aDocsOri	As Array
Private aDocsDes	As Array

DEFAULT nTxLiq	:= 0
Default aMatVal := {}

lAcrDec			:= Iif(F565Perg(4), MV_PAR04, 0) == 1 // 1 = Sim , 2 = Não
nTotal  		:= 0
nHdlPrv 		:= 0
nCntFor 		:= 0
nSe2Rec 		:= 0
lHeadProva 		:= .F.
lPadrao 		:= .F.
lContabiliza	:= .F.
lf565Val 		:= ExistBlock("F565VAL")
lf565SE2 		:= ExistBlock("F565SE2")
aComplem 		:= {}
nTotBaixar  	:= nValorLiq + Iif(lAcrDec, (nValorAcr-nValorDcr), 0)	// Valor total dos títulos selecionados.
lF565NDF 		:= ExistBlock("F565NDF")
nTitBxd			:= nQtdTit
lBxAbatim 		:= .F.
cChave        	:= ""
nX            	:= 0
nValorTotal 	:= 0
nValPadrao 		:= 0
lGeraNDF 		:= .T.
aPcc			:= {}
lRastro			:= FVerRstFin()
aRastroOri		:= {}
aRastroDes		:= {}
nValProces		:= nValorLiq
aFlagCTB		:= {}
lUsaFlag		:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
lPCCBaixa 		:= SuperGetMv("MV_BX10925",.T.,"2") == "1"
lIRBaixa		:= .F.
aPccBaixa		:= {0,0,0,0}		//Pcc aqui
aIRBaixa		:= {0,0} //IR aqui
aIssBaixa		:= {0,0} //Iss aqui
nPropPcc		:= 1
nPropIR			:= 1
nPis			:= 0
nCofins			:= 0
nCsll			:= 0
nIRRF			:= 0
nTotPis			:= 0
nTotCofins		:= 0
nTotCsll		:= 0
nTotIr			:= 0
nTotLiq			:= 0
nPropIss		:= 0
nIss			:= 0
nTotIss			:= 0
nIssBaixa		:= 0
nBasePcc		:= 0
nBaseIR			:= 0
nBaseIss		:= 0
nTotBasPcc		:= 0
nTotBasIR		:= 0
nTotBasIss		:= 0
lCalcIssBx 		:= IIF(lIsIssBx, IsIssBx("P"), SuperGetMv("MV_MRETISS",.F.,"1") == "2" )
lInssBx			:= SuperGetMv("MV_INSBXCP",.F.,"2") == "1"
nTamSeq			:= TamSX3("E5_SEQ")[1]
cSequencia		:= Replicate("0",nTamSeq)
lAtuSldNat    	:= .T.
lFinVDoc		:= IIF(GetNewPar("MV_FINVDOC","2")=="1",.T.,.F.)		//Controle de validacao de documentos obrigatorios
cFilialAtu		:= ""
oModelBxP		:= FWLoadModel("FINM020")
oSubFK2			:= Nil
oSubFK6			:= Nil
cLog			:= ""
cChaveTit		:= ""
cChaveFK7		:= ""
cCamposE5		:= ""
lRet			:= .T.
cCodAprov 		:= ""
nSalImp 		:= 0
nI				:= 0
nZ				:= 0
cOrigem   		:= "FINA565"
lF565SE5		:= Existblock("F565SE5")
aRecSe5			:= {}
aAreaMNT		:= {}
aAreaSE5		:= {}
cIdOrig			:= ""
nVa				:= 0
nCasDec   		:= TamSx3("E2_TXMOEDA")[2]
cChavSE2  		:= ""
cChaveFK2 		:= ""
nVlrJurDes		:= 0
aDocsOri		:= {}
aDocsDes		:= {}
nSaldoBx 		:= 0
lIntegNg        := FindFunction("NGBAIXASE2") .And. GetNewPar( "MV_NGMNTFI","N" ) == 'S'
cFunName        := SubStr(AllTrim(FunName()), 1, TamSx3("FK2_ORIGEM")[1])
aTipoDoc        := {"CP", "BA", "VL", "V2", "LJ"}
nTipoDoc        := Len(aTipoDoc)
nSalDup         := 0
nSalDupM        := 0
nMvMcusto       := Val(SuperGetMv("MV_MCUSTO", .T., 0))
nTxSm2Liq       := 0
nPos            := 0
nTaxaMov        := 0
nSldTit         := 0
nInicio			:= 0
nFim			:= 0
nGravados		:= 0

VALOR  			:= 0
VALOR5		 	:= 0
VALOR6 			:= 0
VALOR7 			:= 0
nCm 			:= 0
cCodAprov 		:= ""

If SuperGetMV("MV_FINCTAL", .T., "1" ) == "2"
	cCodAprov := FA050Aprov(nMoeda)
Endif
//Trecho para tratamento do envio da Loja via integração do AGRO
__cLoja := IIF( IsIncallStack("OGA360LIQ") , __cLojaAGR , __cLoja )

DbSelectArea("TRB")
TRB->(dbGoTop())

cFilialAtu := cFilAnt

If nMoeda > 1
	nTxSm2Liq := RecMoeda(dDataBase, nMoeda)
EndIf

Begin Transaction

	//Metricas - Gravação da compensação
	If __lMetric
		nInicio := Seconds()
	Endif

	While !TRB->(Eof())

		DbSelectArea("TRB")

		If TRB->MARCA == cMarca
			DbSelectArea("SE2")
			SE2->(DbSetOrder(1))
			SE2->(DbGoto(TRB->E2_REC))

			If SE2->(E2_FORNECE+E2_LOJA) < cFornDe+cLojaDe .And. SE2->(E2_FORNECE+E2_LOJA) > cFornAte+cLojaAte
				TRB->(DbSkip())
				Loop
			EndIf

			If lPLSCTFIN .And. PLSCTFIN('SE2')
				cOrigem := SE2->E2_ORIGEM
				DbSelectArea("SE2")
			Endif

			nTaxaMov   := Iif(nTxSm2Liq > 0, nTxSm2Liq, TRB->CTMOED)
			lIRBaixa   := .F.
			cFilAnt    := SE2->E2_FILORIG
			lBxAbatim  := .F.
			nCm        := 0
			nPos       := 0
			nSldTit    := 0

			If nMoeda != TRB->MOEDAO .And. (nPos := Ascan(aMatVal, {|aMat| aMat[1] == TRB->E2_REC})) > 0
				RecLock("TRB", .F.)
				If aMatVal[nPos,2] > 0 //Juros
					If TRB->MOEDAO == 1
						TRB->JUROS := Round(xMoeda(aMatVal[nPos,2], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, TRB->CTMOED), 2)
					Else
						TRB->JUROS := Round(xMoeda(aMatVal[nPos,2], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, nTaxaMov, TRB->CTMOED), 2)
					Endif
				EndIf

				If aMatVal[nPos,3] > 0 //Acréscimo
					If TRB->MOEDAO == 1
						TRB->ACRESC := Round(xMoeda(aMatVal[nPos,3], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, TRB->CTMOED), 2)
					Else
						TRB->ACRESC := Round(xMoeda(aMatVal[nPos,3], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, nTaxaMov, TRB->CTMOED), 2)
					Endif
					TRB->ACRESC	:= If(ABS(SE2->E2_SDACRES - TRB->ACRESC) == ABS(0.01),SE2->E2_SDACRES, TRB->ACRESC)
				EndIf

				If aMatVal[nPos,4] > 0 //Desconto
					If TRB->MOEDAO == 1
						TRB->DESCON := Round(xMoeda(aMatVal[nPos,4], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, TRB->CTMOED), 2)
					Else
						TRB->DESCON := Round(xMoeda(aMatVal[nPos,4], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, nTaxaMov, TRB->CTMOED), 2)
					Endif
				EndIf

				If aMatVal[nPos,5] > 0 //Descréscimo
					If TRB->MOEDAO == 1
						TRB->DECRESC := Round(xMoeda(aMatVal[nPos,5], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, TRB->CTMOED), 2)
					Else
						TRB->DECRESC := Round(xMoeda(aMatVal[nPos,5], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, nTaxaMov, TRB->CTMOED), 2)
					Endif
					TRB->DECRESC	:= If(ABS(SE2->E2_SDDECRE - TRB->DECRESC) == ABS(0.01),SE2->E2_SDDECRE, TRB->DECRESC)
				EndIf

				If aMatVal[nPos,6] != 0 //VA
					If TRB->MOEDAO == 1
						TRB->VACESS := Round(xMoeda(aMatVal[nPos,6], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, TRB->CTMOED), 2)
					Else
						TRB->VACESS := Round(xMoeda(aMatVal[nPos,6], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, nTaxaMov, TRB->CTMOED), 2)
					Endif
				EndIf

				If aMatVal[nPos,7] > 0 //Abatimento
					If TRB->MOEDAO == 1
						TRB->ABATIM := Round(xMoeda(aMatVal[nPos,7], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, TRB->CTMOED), 2)
					Else
						TRB->ABATIM := Round(xMoeda(aMatVal[nPos,7], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, nTaxaMov, TRB->CTMOED), 2)
					Endif
				EndIf
				TRB->(MsUnlock())
			EndIf

			nTitBxd--

			If TRB->VALLIQ >= nTotBaixar
				RecLock("TRB", .F.)
				TRB->VALLIQ := nTotBaixar
				TRB->(MsUnlock())

				nTotBaixar := 0
				nSaldoBx := TRB->VALLIQ

				If TRB->MOEDAO != nMoeda
					If nPos > 0
						nSldTit := ((TRB->VALLIQ + Round(aMatVal[nPos,4],2) + Round(aMatVal[nPos,5],2) + Round(aMatVal[nPos,7],2)) - (Round(aMatVal[nPos,2],2)+Round(aMatVal[nPos,3],2))) - Round(aMatVal[nPos,6],2)
					EndIf

					If nPos > 0 .And. nSldTit == Round(aMatVal[nPos,8],2)
						If TRB->MOEDAO == 1
							nSaldoBx := Round(xMoeda(aMatVal[nPos,8], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, TRB->CTMOED), 2)
						Else
							nSaldoBx := Round(xMoeda(aMatVal[nPos,8], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, nTaxaMov,TRB->CTMOED), 2)
						Endif
						nSaldoBx := ((nSaldoBx - TRB->(DESCON+DECRESC+ABATIM)) + TRB->(JUROS+ACRESC)) + TRB->VACESS
					Else
						nSaldoBx := Round(xMoeda(nSaldoBx, nMoeda, TRB->MOEDAO, dDataBase, nCasDec, nTaxaMov, TRB->CTMOED), 2)
					EndIf
				EndIf

				nValPadrao := ((nSaldoBx + TRB->(DESCON+DECRESC+ABATIM)) - TRB->(JUROS+ACRESC))

				If TRB->VACESS != 0
					nValPadrao := Iif(TRB->VACESS > 0, (nValPadrao - TRB->VACESS), (nValPadrao+Abs(TRB->VACESS)))
				EndIf

				If cPaisLoc == "BRA"
					If lPCCBaixa .And. SE2->(E2_PIS+E2_COFINS+E2_CSLL) > 0 .And. Empty(SE2->E2_NUMBOR)
						nPropPcc := nValPadrao/SE2->E2_VALOR

						If dDataBase < dLastPcc
							aPccBaixa[1] += SE2->E2_PIS * nPropPcc
							aPccBaixa[2] += SE2->E2_COFINS * nPropPcc
							aPccBaixa[3] += SE2->E2_CSLL * nPropPcc
							aPccBaixa[4] += SE2->E2_BASEPIS * nPropPcc
						Else
							nSalImp := salRefPag(SA2->A2_COD+SA2->A2_LOJA)
							aPcc	:= newMinPcc(dDataBase, nSalImp,SE2->E2_NATUREZ,"P",SE2->E2_FORNECE+SE2->E2_LOJA)

							aPccBaixa[1]	+= aPcc[2]
							aPccBaixa[2]	+= aPcc[3]
							aPccBaixa[3]	+= aPcc[4]
							aPccBaixa[4]	+= nSalImp
						EndIf
					Endif

					If !SE2->E2_TIPO $ MVPAGANT .And. Posicione("SA2", 1, xfilial("SA2") + SE2->(E2_FORNECE), "A2_CALCIRF") == "2"
						lIRBaixa := Posicione("SED",1,xfilial("SED") + SE2->(E2_NATUREZ),"ED_CALCIRF") == "S"
					Endif

					If lIRBaixa .And. Len(aIRBaixa) >= 2
						If dDataBase < dLastPcc
							nPropIR := nValPadrao/SE2->E2_VALOR
						Else
							nSalImp := salRefPag(SE2->E2_FORNECE+SE2->E2_LOJA)
							nPropIR := nSalImp / (SE2->E2_VALOR + If(!lCalcIssBx, SE2->E2_ISS, 0) + SE2->E2_INSS)
						Endif

						aIRBaixa[1]	+= SE2->E2_IRRF * nPropIR
						aIRBaixa[2]	+= SE2->E2_BASEIRF * nPropIR
					Endif
				EndIf

				If lCalcIssBx .And. SE2->E2_ISS > 0 .And. Len(aIssBaixa) >= 2
					nPropIss		:= nValPadrao/SE2->E2_VALOR
					nIssBaixa		+= SE2->E2_ISS
					aIssBaixa[1]	+= SE2->E2_ISS * nPropIss
					aIssBaixa[2]	+= SE2->E2_BASEISS * nPropIss
				EndIf
			Else
				nTotBaixar -= TRB->VALLIQ
				nSaldoBx := TRB->VALLIQ

				If TRB->MOEDAO != nMoeda
					If nPos > 0
						nSldTit := ((TRB->VALLIQ + Round(aMatVal[nPos,4],2) + Round(aMatVal[nPos,5],2) + Round(aMatVal[nPos,7],2)) - (Round(aMatVal[nPos,2],2)+Round(aMatVal[nPos,3],2))) - Round(aMatVal[nPos,6],2)
					EndIf

					If nPos > 0 .And. nSldTit == Round(aMatVal[nPos,8],2)
						If TRB->MOEDAO == 1
							nSaldoBx := Round(xMoeda(aMatVal[nPos,8], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, TRB->CTMOED), 2)
						Else
							nSaldoBx := Round(xMoeda(aMatVal[nPos,8], nMoeda, TRB->MOEDAO, dDataBase, nCasDec, nTaxaMov,TRB->CTMOED), 2)
						Endif
						nSaldoBx := ((nSaldoBx - TRB->(DESCON+DECRESC+ABATIM)) + TRB->(JUROS+ACRESC)) + TRB->VACESS
					Else
						nSaldoBx := Round(xMoeda(nSaldoBx, nMoeda, TRB->MOEDAO, dDataBase, nCasDec, nTaxaMov, TRB->CTMOED), 2)
					EndIf
				EndIf

				nValPadrao := ((nSaldoBx + TRB->(DESCON+DECRESC+ABATIM)) - TRB->(JUROS+ACRESC))

				If TRB->VACESS != 0
					nValPadrao := Iif(TRB->VACESS > 0, (nValPadrao - TRB->VACESS), (nValPadrao+Abs(TRB->VACESS)))
				EndIf

				If cPaisLoc == "BRA"
					If lPCCBaixa .And. SE2->(E2_PIS+E2_COFINS+E2_CSLL) > 0 .And. Empty(SE2->E2_NUMBOR)
						nPropPcc := (nValPadrao / SE2->E2_VALOR)

						If dDataBase < dLastPcc
							aPccBaixa[1] += (SE2->E2_PIS * nPropPcc)
							aPccBaixa[2] +=	(SE2->E2_COFINS * nPropPcc)
							aPccBaixa[3] += (SE2->E2_CSLL * nPropPcc)
						Else
							nSalImp := salRefPag(SE2->(E2_FORNECE+E2_LOJA))
							aPcc	:= newMinPcc(dDataBase, nSalImp, SE2->E2_NATUREZ, "P", SE2->(E2_FORNECE+E2_LOJA))

							aPccBaixa[1] += aPcc[2]
							aPccBaixa[2] += aPcc[3]
							aPccBaixa[3] += aPcc[4]
							aPccBaixa[4] += nSalImp
						EndIf
					Endif

					If !SE2->E2_TIPO $ MVPAGANT .And. Posicione("SA2", 1, xFilial("SA2") + SE2->(E2_FORNECE), "A2_CALCIRF") == "2"
						lIRBaixa := Posicione("SED", 1, xFilial("SED") + SE2->(E2_NATUREZ), "ED_CALCIRF") == "S"
					Endif

					If lIRBaixa .And. Len(aIRBaixa) >= 2
						If dDataBase < dLastPcc
							nPropIR := (nValPadrao / SE2->E2_VALOR)
						Else
							nSalImp := salRefPag(SE2->(E2_FORNECE+E2_LOJA))
							nPropIR	:= nSalImp/(SE2->E2_VALOR + If(!lCalcIssBx,SE2->E2_ISS,0) + iF(!lInssBx,SE2->E2_INSS,0))
						Endif

						aIRBaixa[1]	+= SE2->E2_IRRF * nPropIR
						aIRBaixa[2]	+= SE2->E2_BASEIRF * nPropIR
					Endif
				EndIf

				If lCalcIssBx .And. SE2->E2_ISS > 0 .And. Len(aIssBaixa) >= 2
					nPropIss	 := nValPadrao/SE2->E2_VALOR
					nIssBaixa	 += SE2->E2_ISS
					aIssBaixa[1] += SE2->E2_ISS * nPropIss
					aIssBaixa[2] += SE2->E2_BASEISS * nPropIss
				Endif
			EndIf

			//Cálculo da correção monetária.
			If (SE2->E2_MOEDA > 1 .Or. cPaisLoc != "BRA")
				nCm := FA565CORR(nSaldoBx, nCasDec, TRB->CTMOED, nTaxaMov)
			EndIf

			If SE2->(DbSeek(TRB->CHAVE))
				cStatus := "B"

				If !Empty(SE2->E2_NUMLIQ) .And. lReliquida
					cStatus := "R"
				Endif

				RecLock("SE2", .F.)
				SE2->E2_VALLIQ	:= nSaldoBx
				SE2->E2_SALDO	-= nValPadrao
				SE2->E2_BAIXA	:= dDataBase
				SE2->E2_MOVIMEN	:= dDataBase
				SE2->E2_STATUS	:= cStatus
				SE2->E2_TIPOLIQ	:= cTipo
				SE2->E2_SDACRES	-= TRB->ACRESC
				SE2->E2_SDDECRE	-= TRB->DECRESC
				SE2->E2_JUROS	:= TRB->JUROS
				SE2->E2_DESCONT	:= TRB->DESCON
				SE2->E2_CORREC	:= nCm
				SE2->(MsUnlock())

				//Metricas - Gravados
				nGravados += 1

				If lAtuSldNat
					AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR,SE2->E2_VLCRUZ, "-", Nil, cFunName, "SE2", TRB->E2_REC, 0)
				EndIf

				//Rastreamento - Geradores
				If lRastro
					aadd(aRastroOri, {SE2->E2_FILIAL, SE2->E2_PREFIXO, SE2->E2_NUM, SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALLIQ})
				Endif

				//Documentos
				If lFinVDoc .And. SE2->E2_TEMDOCS = "1"
					aAdd(aDocsOri, {SE2->E2_FILIAL, SE2->E2_PREFIXO, SE2->E2_NUM, SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA})
				EndIf

				FA373Bx(.T.)

				//Baixar titulos de abatimento se for baixa total
				If TRB->ABATIM > 0 .And. SE2->E2_SALDO <= 0

					dbSelectArea("__SE2")
					__SE2->(dbSetOrder(6))
					__SE2->(MsSeek(Left(TRB->CHAVE2, Len(TRB->CHAVE2)-3)))

					While __SE2->(!Eof()) .And. __SE2->(E2_FILIAL+E2_FORNECE+E2_LOJA+E2_PREFIXO+E2_NUM+E2_PARCELA) == Left(TRB->CHAVE2,Len(TRB->CHAVE2)-3)
						If __SE2->E2_TIPO $ MVABATIM
							RecLock("__SE2")
							__SE2->E2_SALDO   := 0
							__SE2->E2_BAIXA	  := dDataBase
							__SE2->E2_MOVIMEN := dDataBase
							__SE2->E2_STATUS  := "B"
							__SE2->(MsUnlock())

							If lAtuSldNat
								AtuSldNat(__SE2->E2_NATUREZ, __SE2->E2_VENCREA, __SE2->E2_MOEDA, "2", "P", __SE2->E2_VALOR,__SE2->E2_VLCRUZ, "+",,FunName(),"__SE2",__SE2->(Recno()),0)
							Endif
						EndIf
						__SE2->(dbSkip())
					EndDo
				EndIf

				dbSelectArea("SE2")
				SE2->(DbSetOrder(1))
				SE2->(dbGoto(TRB->E2_REC))

				If ExistBlock("F565GerNDF")
					lGeraNDF := ExecBlock("F565GerNDF",.F.,.F.)
				Endif

				//Caso o total da liquidação seja maior que a soma dos títulos originaisgera NDF
				If nTitBxd == 0 .And. lGeraNDF .And. Round(nTotBaixar, 2) > 0

					//Metricas - Gravados
					nGravados += 1

					A565VerPc(1,.T.,cLiquid)

					RecLock("SE2",.T.)
					SE2->E2_FILIAL  := xFilial("SE2")
					SE2->E2_PREFIXO := "LIQ"
					SE2->E2_NUM     := cLiquid
					SE2->E2_PARCELA := __cParc565
					SE2->E2_TIPO    := Left(MV_CPNEG, 3)
					SE2->E2_EMISSAO := dDataBase
					SE2->E2_VENCTO  := dDataBase
					SE2->E2_VENCREA := DataValida(dDataBase)
					SE2->E2_SALDO   := nTotBaixar
					SE2->E2_VALOR   := nTotBaixar
					SE2->E2_VLCRUZ  := Iif(nMoeda == 1, nTotBaixar, Round(xMoeda(nTotBaixar, nMoeda, 1, dDataBase, nCasDec, nTaxaMov, 0), 2))
					SE2->E2_MOEDA   := nMoeda
					SE2->E2_FORNECE := cFornece
					SE2->E2_LOJA    := __cLoja
					SE2->E2_NOMFOR  := cNomeForn
					SE2->E2_NUMLIQ  := cLiquid
					SE2->E2_STATUS  := "A"
					SE2->E2_VENCORI := dDataBase
					SE2->E2_EMIS1   := dDataBase
					SE2->E2_NATUREZ := cNatureza
					SE2->E2_FILORIG := cFilAnt
					SE2->E2_MULTNAT := "2"
					SE2->E2_CODAPRO := cCodAprov
					SE2->E2_TXMOEDA := nTxLiq
					SE2->(MsUnLock())

					//Dados da tabela auxiliar com o código do título a pagar
					cChaveTit := xFilial("SE2", SE2->E2_FILORIG)+"|"+SE2->E2_PREFIXO+"|"+SE2->E2_NUM+"|"+SE2->E2_PARCELA+"|"+SE2->E2_TIPO+"|"+SE2->E2_FORNECE+"|"+SE2->E2_LOJA
					FINGRVFK7("SE2", cChaveTit)

					If cPaisLoc <> "BRA"
						SE2->E2_SITUACA := "0"
					EndIf

					If lF565NDF
						ExecBlock("F565NDF", .F., .F., {TRB->E2_REC})
						SE2->(dbGoto(TRB->E2_REC))
					Endif

					If lRastro
						aadd(aRastroOri, {SE2->E2_FILIAL, SE2->E2_PREFIXO, SE2->E2_NUM, SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALLIQ})
					EndIf

					IF lFinVDoc .And. SE2->E2_TEMDOCS = "1"
						aAdd(aDocsOri, {SE2->E2_FILIAL, SE2->E2_PREFIXO, SE2->E2_NUM, SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA})
					EndIf

					If mv_par01 == 1
						cFilAnt := cFilialAtu
						lPadrao	:= VerPadrao("510")

						If !lHeadProva .and. lPadrao
							nHdlPrv := HeadProva( cLote, "FINA565", Substr( cUsuario, 7, 6 ), @cArquivo )
							lHeadProva := .T.
						EndIf

						If lPadrao
							If lUsaFlag
								aAdd( aFlagCTB, {"E2_LA", "S", "SE2", SE2->( Recno() ), 0, 0, 0} )
							EndIf

							If UsaSeqCor()
								AADD(aDiario,{"SE2",SE2->(recno()),cCodDiario,"E2_NODIA","E2_DIACTB"})
							EndIf

							nTotal += DetProva( nHdlPrv, "510", "FINA565", cLote, /*nLinha*/, /*lExecuta*/, /*cCriterio*/, /*lRateio*/, /*cChaveBusca*/, /*aCT5*/,;
													/*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/ )
						EndIf

						If nTotal > 0 .AND. !lUsaFlag
							RecLock("SE2")
							SE2->E2_LA := "S"
						Endif
					Endif

					cFilAnt := SE2->E2_FILORIG
				Endif
			EndIf

			dbSelectArea("SE2")
			SE2->(DbSetOrder(1))
			SE2->(dbGoto(TRB->E2_REC))

			//Atualização saldo duplicata de fornecedor
			If SA2->(DbSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA))
				nSalDup  := Round(xMoeda((nValPadrao-TRB->ABATIM), SE2->E2_MOEDA, 1, SE2->E2_EMISSAO, nCasDec, SE2->E2_TXMOEDA, 0), 2)
				nSalDupM := Round(xMoeda((nValPadrao-TRB->ABATIM), SE2->E2_MOEDA, nMvMcusto, SE2->E2_EMISSAO, nCasDec, SE2->E2_TXMOEDA, Nil), 2)

				RecLock("SA2", .F.)
				If SE2->E2_TIPO $ MVPAGANT+"|"+MV_CPNEG+"|"+MVABATIM
					SA2->A2_SALDUP  += nSalDup
					SA2->A2_SALDUPM += nSalDupM
	      		Else
					SA2->A2_SALDUP  -= nSalDup
					SA2->A2_SALDUPM -= nSalDupM
				Endif

				If (nAtraso := (dDataBase - SE2->E2_VENCTO)) > 1
					If cValToChar(Dow(SE2->E2_VENCTO)) $ "1|7" .And. Dow(dDataBase) == 2 .And. nAtraso <= 2
						nAtraso := 0
					EndIF

					If SA2->A2_MATR < nAtraso
						SA2->A2_MATR := nAtraso
					EndIf
				EndIf
				SA2->(MsUnlock())
			EndIf

			lContabiliza := mv_par01 == 1

			If lf565SE2
				aComplem :=	ExecBlock("F565SE2",.f.,.f.,aComplem)
			EndIf

			cFilAnt := cFilialAtu
			cPadrao := "530"
			lPadrao  := VerPadrao(cPadrao)
			SE5->(dbSetOrder(2))

			For nx:= 1 to nTipoDoc
				If SE5->(MsSeek(xFilial("SE5") + aTipoDoc[nx]+ SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO)))
					cChavSE2 := xFilial("SE2")+aTipoDoc[nx]+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)

					While !SE5->(Eof()) .And. SE5->(E5_FILIAL+E5_TIPODOC+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) == cChavSE2
						If PadL(AllTrim(cSequencia), nTamSeq, "0") < PadL(AllTrim(SE5->E5_SEQ), nTamSeq, "0")
							cSequencia := SE5->E5_SEQ
						Endif
						SE5->(dbSkip())
					EndDo
				EndIf
			Next nx

			If Len(AllTrim(cSequencia)) < nTamSeq
				cSequencia := PadL(cSequencia, nTamSeq, "0")
			Endif

			cSequencia := Soma1(cSequencia,nTamSeq)

			cCamposE5 := "{"
			cCamposE5 += "{'E5_TIPO',     SE2->E2_TIPO}"
			cCamposE5 += ",{'E5_PREFIXO', SE2->E2_PREFIXO}"
			cCamposE5 += ",{'E5_NUMERO',  SE2->E2_NUM}"
			cCamposE5 += ",{'E5_PARCELA', SE2->E2_PARCELA}"
			cCamposE5 += ",{'E5_FORNECE', SE2->E2_FORNECE}"
			cCamposE5 += ",{'E5_CLIFOR',  SE2->E2_FORNECE}"
			cCamposE5 += ",{'E5_LOJA',    SE2->E2_LOJA}"
			cCamposE5 += ",{'E5_DTDIGIT', dDataBase}"
			cCamposE5 += ",{'E5_DTDISPO', dDataBase}"
			cCamposE5 += ",{'E5_BENEF',   SE2->E2_NOMFOR}"
			cCamposE5 += ",{'E5_VLJUROS', " + cValToChar(TRB->(JUROS+ACRESC)) + "}"
			cCamposE5 += ",{'E5_VLDESCO', " + cValToChar(TRB->(DESCON+DECRESC)) + "}"
			cCamposE5 += ",{'E5_VLCORRE', " + cValToChar(nCm) + "}"
			cCamposE5 += ",{'E5_FILORIG', SE2->E2_FILORIG}"
			cCamposE5 += ",{'E5_VLACRES', " + cValToChar(TRB->ACRESC) + " }"
			cCamposE5 += ",{'E5_VLDECRE', " + cValToChar(TRB->DECRESC) + " }"
			cCamposE5 += "}"

			oModelBxP:SetOperation(3)
			oModelBxP:Activate()
			oModelBxP:SetValue("MASTER", "E5_GRV", .T.)
			oModelBxP:SetValue("MASTER", "E5_CAMPOS", cCamposE5)
			oModelBxP:SetValue("MASTER", "NOVOPROC", .T.)
			oSubFK2	:= oModelBxP:GetModel("FK2DETAIL")
			oSubFK6	:= oModelBxP:GetModel("FK6DETAIL")
			cChaveTit := xFilial("SE2", SE2->E2_FILORIG)+"|"+SE2->E2_PREFIXO+"|"+SE2->E2_NUM+"|"+SE2->E2_PARCELA+"|"+SE2->E2_TIPO+"|"+SE2->E2_FORNECE+"|"+SE2->E2_LOJA
			cChaveFK7 := FINGRVFK7("SE2", cChaveTit)
			cChaveFk2 := FWUUIDV4()
			oFKA := oModelBxP:GetModel("FKADETAIL")

			If !oFKA:IsEmpty()
				oFKA:AddLine()
			Endif

			oFKA:SetValue("FKA_IDORIG",    cChaveFk2)
			oFKA:SetValue("FKA_TABORI",    "FK2")
			//Dados da baixa a pagar
			oSubFK2:SetValue("FK2_IDFK2",  cChaveFk2 )
			oSubFK2:SetValue("FK2_DATA",   dDataBase )
			oSubFK2:SetValue("FK2_VALOR",  nSaldoBx)
			oSubFK2:SetValue("FK2_NATURE", SE2->E2_NATUREZ )
			oSubFK2:SetValue("FK2_RECPAG", "P" )
			oSubFK2:SetValue("FK2_TPDOC",  "BA" )
			oSubFK2:SetValue("FK2_HISTOR", STR0105)
			oSubFK2:SetValue("FK2_SEQ",    cSequencia)
			oSubFK2:SetValue("FK2_FILORI", SE2->E2_FILORIG)
			oSubFK2:SetValue("FK2_CCUSTO", SE2->E2_CCUSTO)
			oSubFK2:SetValue("FK2_MOEDA",  StrZero(SE2->E2_MOEDA,2))
			oSubFK2:SetValue("FK2_MOTBX",  "LIQ" )
			oSubFK2:SetValue("FK2_DOC",    cLiquid )
			oSubFK2:SetValue("FK2_IDDOC",  cChaveFK7)
			oSubFK2:SetValue("FK2_ORIGEM", cFunName)

			nTaxaMov := If(TRB->CTMOED > 0, TRB->CTMOED, nTaxaMov )

			If SE2->E2_MOEDA == 1
				oSubFK2:SetValue("FK2_VLMOE2", Round(xMoeda(nSaldoBx, 1, nMoeda, dDataBase, nCasDec, 0, nTaxaMov), 2))
				oSubFK2:SetValue("FK2_TXMOED", Iif(SE2->E2_MOEDA == nMoeda, 0, nTaxaMov))
			Else
				oSubFK2:SetValue("FK2_VLMOE2", Round(xMoeda(nSaldoBx, SE2->E2_MOEDA, 1, dDataBase, nCasDec, nTaxaMov, 0), 2))
				oSubFK2:SetValue("FK2_TXMOED", nTaxaMov)
			EndIf

			If (TRB->(JUROS+ACRESC) != 0) .Or. (TRB->(DESCON+DECRESC) != 0) .Or. (nCm != 0) .Or. (TRB->VACESS != 0)
				For i := 2 To 5
					if i == 2
						nVlrJurDes := TRB->(JUROS+ACRESC)
						cTpDoc     := "JR"
						cHistMov   := STR0104
					Elseif i == 3
						nVlrJurDes := TRB->(DESCON+DECRESC)
						cTpDoc     :="DC"
						cHistMov   := STR0103
					Elseif i == 4
						nVlrJurDes := nCm
						cTpDoc     := "CM"
						cHistMov   := STR0174
					Elseif i == 5
						nVlrJurDes := TRB->VACESS
						cTpDoc     := "VA"
						cHistMov   := ""
					Endif

					If nVlrJurDes == 0
						Loop
					EndIf

					// Grava valores acessórios (FKD).
					If cTpDoc == "VA" .and. TRB->VACESS != 0
						FSetFK6FKD(oSubFK6, cChaveFK7, cChaveFk2)
					Else
						If !oSubFK6:IsEmpty()
							oSubFK6:AddLine()
							oSubFK6:GoLine( oSubFK6:Length() )
						Endif

						oSubFK6:SetValue("FK6_FILIAL", FWxFilial("FK6"))
						oSubFK6:SetValue('FK6_IDFK6',  GetSxEnum('FK6','FK6_IDFK6'))
						oSubFK6:SetValue('FK6_TABORI', 'FK2')
						oSubFK6:SetValue('FK6_TPDOC',  cTpDoc)
						oSubFK6:SetValue('FK6_VALCAL', nVlrJurDes)
						oSubFK6:SetValue('FK6_VALMOV', nVlrJurDes)
						oSubFK6:SetValue('FK6_RECPAG', "P")
						oSubFK6:SetValue('FK6_HISTOR', cHistMov)
						oSubFK6:SetValue('FK6_IDORIG', cChaveFK2)

						If ExistBlock("SE5FI565")
							ExecBlock('SE5FI565',.f.,.F.)
						Endif
					Endif
				Next i
			EndIf

			If !(lUsaFlag .And. lContabiliza .And. lPadrao)
				oSubFK2:SetValue("FK2_LA", Iif(lContabiliza .And. lPadrao, "S", "") )
			EndIf

			If oModelBxP:VldData()
			    oModelBxP:CommitData()
				oModelBxP:DeActivate()
			Else
				lRet := .F.
			    cLog := cValToChar(oModelBxP:GetErrorMessage()[4]) + ' - '
			    cLog += cValToChar(oModelBxP:GetErrorMessage()[5]) + ' - '
			    cLog += cValToChar(oModelBxP:GetErrorMessage()[6])

				oModelBxP:DeActivate()
			    Help( ,,"M020VALID",,cLog, 1, 0 )
				DisarmTransaction()
				Exit
			Endif

			If SE5->E5_TIPODOC $ 'JR|DC'
				aAreaSE5 := SE5->(GetArea())
				cIdOrig  := SE5->E5_IDORIG
				SE5->(dbSetOrder(21))
				If !SE5->(MsSeek(xFilial("SE5") + cIdOrig))
					RestArea(aAreaSE5)
				EndIf
				SE5->(dbSetOrder(1))
			EndIf

			// Realiza integração com SIGAMNT
			If lIntegNg
				NGBAIXASE2(1)
				dbSelectArea("SE2")
				SE2->(DbSetOrder(1))
				SE2->(dbGoto(TRB->E2_REC))
			EndIf

			If lF565SE5
				aRecSe5 := aClone(FIM020RSE5())
			Endif

			If lUsaFlag .And. lContabiliza .And. lPadrao
				aRecSe5 := aClone(FIM020RSE5())

				For nI := 1 to Len(aRecSE5)
					aAdd( aFlagCTB, {"E5_LA", "S", "SE5", aRecSE5[nI], 0, 0, 0} )
				Next nI
			EndIf

			If UsaSeqCor()
				AADD(aDiario,{"SE5", SE5->(recno()), cCodDiario, "E5_NODIA", "E5_DIACTB"})
			EndIf

			If mv_par01 == 1 .And. lPadrao
				ABATIMENTO  := TRB->ABATIM
				cAliasAnt 	:= Alias()
				DbSelectArea("SA2")
				SA2->(DbSetOrder(1))

				SA2->(MsSeek(xFilial("SA2",SE2->E2_FILORIG)+SE2->E2_FORNECE+SE2->E2_LOJA))
				dbSelectArea(cAliasAnt)

				If !lHeadProva .And. lPadrao
					nHdlPrv := HeadProva( cLote, "FINA565", Substr( cUsuario, 7, 6 ), @cArquivo )
					lHeadProva := .T.
				EndIf

				nTotal += DetProva( nHdlPrv, cPadrao, "FINA565", cLote, /*nLinha*/, /*lExecuta*/, /*cCriterio*/, /*lRateio*/, /*cChaveBusca*/, /*aCT5*/,;
											/*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/ )

			EndIf

			MsUnlock()
			ABATIMENTO := 0
		EndIf

		If __lExistFKD
			FAtuFKDBx()
		EndIf

		DbSelectArea("TRB")
		TRB->(DbSkip())

		If nTotBaixar <= 0
			ABATIMENTO := 0
			Exit
		Endif
	EndDo

	FwFreeArray(aMatVal)

	If lRet
		If lF565SE5
			ExecBlock("F565SE5",.F.,.F.,{aRecSe5})
		Endif

		cFilAnt := cFilialAtu
		cPadrao := "510"
		lPadrao	:= VerPadrao("510")

		If (SE2->E2_PRETPIS <> "1"  .Or. SE2->E2_PRETCOF <> "1" .Or. SE2->E2_PRETCSL <> "1") .And. SE2->(E2_PIS -E2_VRETPIS) == 0
			lPCCBaixa := .F.
		EndIf

		If lPCCBaixa .OR. lCalcIssBx
			For nCntFor:=1 To Len(aCols)
				If !(aCols[nCntFor,nUsado2+1])
					nTotLiq += aCols[nCntFor,8]
				Endif
			Next
		Endif

		//Loop para geração de Titulo(s)
		For nCntFor := 1 To Len(aCols)
			__LACO := nCntFor

			If !(aCols[nCntFor,nUsado2+1])

				A565VerPc(nCntFor,.F.)

				If lPCCBaixa
					nPropPcc	:= aCols[nCntFor,8] / nTotLiq
					nPis		:= Round(NoRound(aPccBaixa[1] * nPropPcc,3),2)
					nCofins		:= Round(NoRound(aPccBaixa[2] * nPropPcc,3),2)
					nCsll		:= Round(NoRound(aPccBaixa[3] * nPropPcc,3),2)
					nBasePcc	:= Round(NoRound(aPccBaixa[4] * nPropPcc,3),2)
					nTotPis		+= nPis
					nTotCofins	+= nCofins
					nTotCsll	+= nCsll
					nTotBasPCC	+= nBasePcc

					//Acerto de eventuais problemas de arredondamento
					If aPccBaixa[1] - nTotPis <= 0.01
						nPis		+= aPccBaixa[1] - nTotPis
					Endif

					If aPccBaixa[2] - nTotCofins <= 0.01
						nCofins	+= aPccBaixa[2] - nTotCofins
					Endif

					If aPccBaixa[3] - nTotCsll <= 0.01
						nCSll		+= aPccBaixa[3] - nTotCsll
					Endif

					If aPccBaixa[4] - nTotBasPCC <= 0.01
						nBasePcc	+= aPccBaixa[4] - nTotBasPCC
					Endif
				Endif

				//IR Baixa Tratamento da proporcionalizacao dos impostos PCC para posterior gravacao na parcela gerada
				If lIRBaixa
					nPropIR		:= aCols[nCntFor,8] / nTotLiq
					nIrrf		:= Round(NoRound(aIRBaixa[1] * nPropIR,3),2)
					nBaseIR		:= Round(NoRound(aIRBaixa[2] * nPropIR,3),2)
					nTotIR		+= nIrrf
					nTotBasIR	+= nBaseIR

					//Acerto de eventuais problemas de arredondamento
					If aIRBaixa[1] - nTotIR <= 0.01
						nIrrf	+= aIRBaixa[1] - nTotIR
					Endif

					If aIRBaixa[2] - nTotBasIR <= 0.01
						nBaseIR	+= aIRBaixa[2] - nTotBasIR
					Endif
				Endif

				//ISS Baixa Tratamento da proporcionalizacao do ISS para posterior gravacao na parcela gerada
				If lCalcIssBx
					nPropIss	:= aCols[nCntFor,8] / nTotLiq
					nIss		:= Round(NoRound(nIssBaixa * nPropIss, 3), 2)
					nBaseIss	:= Round(NoRound(aIssBaixa[2] * nPropIss, 3), 2)
					nTotIss		+= nIss
					nTotBasIss	+= nBaseIss

					//Acerto de eventuais problemas de arredondamento
					If nIssBaixa - nTotIss <= 0.01
						nIss	+= nIssBaixa - nTotIss
					EndIf

					If aIssBaixa[2] - nTotBasIss <= 0.01
						nBaseIss	+= aIssBaixa[2] - nTotBasIss
					EndIf
				EndIf

				DbSelectArea("SE2")
				SE2->(DbSetOrder(1))

				RecLock("SE2",.T.)
				SE2->E2_FILIAL	:= xFilial("SE2")
				SE2->E2_PREFIXO	:= aCols[nCntFor,1]
				SE2->E2_NUMLIQ	:= cLiquid				// Nro. da Liquidacao
				SE2->E2_NUM	   	:= aCols[nCntFor,6]		// nro. do cheque
				SE2->E2_TIPO   	:= aCols[nCntFor,2]		// Tipo
				SE2->E2_BCOCHQ 	:= aCols[nCntFor,3]		// banco
				SE2->E2_AGECHQ 	:= aCols[nCntFor,4]		// agencia
				SE2->E2_CTACHQ 	:= aCols[nCntFor,5]		// conta
				SE2->E2_SALDO  	:= aCols[nCntFor,8]		// valor do cheque
				SE2->E2_STATUS 	:= "A"
				SE2->E2_PARCELA	:= __cParc565
				SE2->E2_FORNECE	:= cFornece
				SE2->E2_LOJA	:= __cLoja
				SE2->E2_NOMFOR	:= cNomeForn
				SE2->E2_EMISSAO	:= dDataBase
				SE2->E2_EMIS1	:= dDataBase
				SE2->E2_VENCTO	:= aCols[nCntFor,7]		// data de vencimento
				SE2->E2_VENCREA	:= DataValida(aCols[nCntFor,7],.T.)
				SE2->E2_VENCORI	:= aCols[nCntFor,7]		// data de vencimento
				SE2->E2_VALOR	:= aCols[nCntFor,8]		// valor do cheque
				SE2->E2_VLCRUZ 	:= Iif(nMoeda == 1, aCols[nCntFor,8], Round(xMoeda(aCols[nCntFor,8], nMoeda, 1, dDataBase, nCasDec, nTxLiq, 0), 2))
				SE2->E2_MOEDA 	:= nMoeda
				SE2->E2_NATUREZ := cNatureza
				SE2->E2_MULTNAT := "2"
				SE2->E2_ACRESC 	:= aCols[nCntFor,9]		// acrescimo
				SE2->E2_DECRESC := aCols[nCntFor,10]	// decrescimo
				SE2->E2_SDACRES := aCols[nCntFor,9]		// acrescimo
				SE2->E2_SDDECRE := aCols[nCntFor,10]	// decrescimo
				SE2->E2_ORIGEM 	:= cOrigem
				SE2->E2_FLUXO 	:= "S"
				SE2->E2_STATUS	:= "A"
				SE2->E2_CODAPRO	:= cCodAprov
				SE2->E2_TXMOEDA	:= nTxLiq
				SE2->E2_FILORIG	:= cFilAnt

				If lUsaFlag .AND. lPadrao .AND. MV_PAR01 == 1
					aAdd( aFlagCTB, {"E2_LA", "S", "SE2", SE2->( Recno() ), 0, 0, 0} )
				Else
					SE2->E2_LA := Iif(lPadrao .And. mv_par01 == 1, "S", "")
				EndIf

				//Grava campos inseridos pelo usuário na tela final da liquidação (parcelamento)
				If nUsado2 > 11		//Se o aHeader for maior que o padrão
					For nZ := 12 to nUsado2
						SE2->&(aHeader[nZ][2]) := Acols[nCntFor][nZ]
					Next
				Endif

				If UsaSeqCor()
					AADD(aDiario,{"SE2",SE2->(recno()),cCodDiario,"E2_NODIA","E2_DIACTB"})
				endif

				//Pcc Baixa
				If lPCCBaixa
					Replace E2_PIS		With nPis
					Replace E2_PRETPIS	With "1"
					Replace E2_BASEPIS	With nBasePcc
					Replace E2_COFINS	With nCofins
					Replace E2_PRETCOF	With "1"
					Replace E2_BASECOF	With nBasePcc
					Replace E2_CSLL		With nCsll
					Replace E2_PRETCSL	With "1"
					Replace E2_BASECSL	With nBasePcc
				Endif

				//IR Baixa
				If lIRBaixa
					Replace E2_IRRF		With nIrrf
					Replace E2_PRETIRF	With "1"
					Replace E2_BASEIRF	With nBaseIR
				EndIf

				//ISS Baixa
				If lCalcIssBx
					Replace E2_ISS 		With  nIss
					Replace E2_FRETISS 	With  "1"
					Replace E2_TRETISS 	With  "2"
					Replace E2_BASEISS 	With  nBaseIss
				Endif

				//Documentos
				If lFinVDoc .And. Len(aDocsOri) > 0
					SE2->E2_TEMDOCS := "1"
				EndIf

				MsUnlock()

				//Metricas - Gravados
				nGravados += 1

				//Dados da tabela auxiliar com o código do título a pagar
				cChaveTit := xFilial("SE2", SE2->E2_FILORIG)+"|"+SE2->E2_PREFIXO+"|"+SE2->E2_NUM+"|"+SE2->E2_PARCELA+"|"+SE2->E2_TIPO+"|"+SE2->E2_FORNECE+"|"+SE2->E2_LOJA
				FINGRVFK7("SE2", cChaveTit)

				//Criação do Ponto de Entrada para manipular o titulo gerado da liquidação
				If lF565TPliq
					ExecBlock("F565TPliq",.F.,.F.)
				EndIf

				If lAtuSldNat
					AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR,SE2->E2_VLCRUZ, "+",,FunName(),"SE2",SE2->(Recno()),0)
				Endif

				nValorTotal += SE2->E2_VLCRUZ

				If lf565Val
					ExecBlock("F565VAL",.f.,.f.,aComplem)
				EndIf

				//Rastreamento - Gerados
				If lRastro
					aadd(aRastroDes,{	SE2->E2_FILIAL, SE2->E2_PREFIXO, SE2->E2_NUM, SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA, SE2->E2_VALOR } )
				Endif

				//Documentos
				If lFinVDoc .And. Len(aDocsOri) > 0
					aAdd(aDocsDes,{SE2->E2_FILIAL, SE2->E2_PREFIXO, SE2->E2_NUM, SE2->E2_PARCELA, SE2->E2_TIPO, SE2->E2_FORNECE, SE2->E2_LOJA } )
				EndIf

				//Atualiza Acumulado de Fornecedores
				SA2->(DbSetOrder(1))
				If SA2->(DbSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA))
					nSalDup  := Round(xMoeda(SE2->E2_VALOR, SE2->E2_MOEDA, 1, dDataBase, nCasDec, SE2->E2_TXMOEDA, 0), 2)
					nSalDupM := Round(xMoeda(SE2->E2_VALOR, SE2->E2_MOEDA, nMvMcusto, dDataBase, nCasDec, SE2->E2_TXMOEDA), 2)

					RecLock( "SA2" )
					If SE2->E2_TIPO $ MVPAGANT+"|"+MV_CPNEG+"|"+MVABATIM
						SA2->A2_SALDUP  -= nSalDup
						SA2->A2_SALDUPM -= nSalDupM
					Else
						SA2->A2_SALDUP  += nSalDup
						SA2->A2_SALDUPM += nSalDupM
					EndIf
					SA2->(MsUnlock())
				EndIf

				//Contabiliza On Line
				If mv_par01 == 1 .And. lPadrao
					If !lHeadProva .And. lPadrao
						nHdlPrv     := HeadProva( cLote, "FINA565", Substr( cUsuario, 7, 6 ), @cArquivo )
						lHeadProva	:= .T.
					EndIf

					If lPadrao
						nTotal += DetProva( nHdlPrv, cPadrao, "FINA565", cLote, /*nLinha*/, /*lExecuta*/, /*cCriterio*/, /*lRateio*/, /*cChaveBusca*/,;
													/*aCT5*/, /*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/ )
					EndIf
				EndIf
			EndIf
		Next nCntFor

		VALOR := nValorTotal

		If mv_par01 == 1 .And. lPadrao
			nSe2Rec := SE2->(Recno())
			SE2->(DbGoto(0))

			//Contabilizo totalizador - VALOR
			nTotal += DetProva( nHdlPrv, cPadrao, "FINA565", cLote, /*nLinha*/, /*lExecuta*/, /*cCriterio*/, /*lRateio*/, /*cChaveBusca*/,;
			                    /*aCT5*/, /*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/ )
			SE2->(DbGoto(nSe2Rec))
		EndIf

		If nTotal > 0
			RodaProva(nHdlPrv, nTotal)
			cA100Incl(cArquivo, nHdlPrv, 3, cLote, mv_par02 == 1, mv_par03 == 1, /*cOnLine*/, /*dData*/, /*dReproc*/, @aFlagCTB, /*aDadosProva*/, aDiario)
			aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
		EndIf

		VALOR := 0

		If Existblock("F565CTB")
			Execblock("F565CTB",.F.,.F.)
		Endif

		//Gravacao do rastreamento
		If lRastro
			FINRSTGRV(2,"SE2",aRastroOri,aRastroDes,nValProces)
		Endif

		//Documentos
		If (Len(aDocsOri) > 0) .And. lFinVDoc
 			CN062GrvFat(aDocsOri,aDocsDes)
		EndIf

		//Metricas - Gravação da Liquidação
		If __lMetric .and. nGravados > 0
			nFim := Seconds() - nInicio
			nFim := nFim / nGravados

			SetFunName(__cFunMet)
			FwCustomMetrics():setAverageMetric(Alltrim(ProcName())+" - TempoGravacao", "financeiro-protheus_tempo-conclusão-processo_seconds", nFim)
			SetFunName(__cFunBkp)
		Endif

	EndIf
End Transaction

Return .T.

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³A565YesNo	³ Autor ³ Mauricio Pequim Jr.   ³ Data ³ 25/01/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Exibe mensagem de OK para dados digitados da fatura		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A565YesNo()							                      		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA565													  				  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A565YesNo()
Return (MsgYesNo(STR0050,STR0051))  //"Confirma Dados?"###"Aten‡„o"

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³A565Exibe	³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 07/11/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Exibe Totais de titulos selecionados						  	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A565Exibe()											  	  				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA565													  				  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A565Exibe( cAlias, cMarca, oValor, oQtdTit )
DbSelectArea(cAlias)
If (cAlias)->MARCA == cMarca
	nValor 	+= (cAlias)->VALLIQ
	nQtdTit++
Else
	nValor 	-= (cAlias)->VALLIQ
	nQtdTit--
EndIf

nValor := IIf (nValor < 0, 0, nValor)
nQtdTit:= Iif (nQtdTit < 0, 0 ,nQtdTit)
oValor:Refresh()
oQtdTit:Refresh()
Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ A565Invert ³ Autor ³ Wagner Xavier	       ³ Data ³ 09/05/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Marca / Desmarca titulos				            				 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Fina565													    				 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A565Inverte(cMarca, oValor, oQtdTit, lTodos, oMark )
	Local nReg       := TRB->(Recno())
	Local cLstMoeda  := ""
	Local cLstTitulo := ""
	Local cMoeda     := ""

	Default lTodos  := .T.

	DbSelectArea("TRB")

	If lTodos
		TRB->(DbGoTop())
	Endif

	SE2->(dbSetOrder(1))

	While !lTodos .Or. !TRB->(Eof())
		If SE2->(DbSeek(TRB->CHAVE)) .And. SE2->E2_SALDO > 0
			cMoeda := ""
			lMarca := TRB->MARCA != cMarca

			If lMarca .And. ((TRB->MOEDAO > 1 .And. TRB->MOEDAO != nMoeda .And. TRB->CTMOED == 0) .Or.;
							 (TRB->MOEDAO == 1 .And. nMoeda > 1 .And. RecMoeda(dDataBase, nMoeda) <= 0))
				cMoeda := cValToChar(Iif(TRB->MOEDAO > 1, TRB->MOEDAO, nMoeda))

				If !Empty(cLstTitulo)
					cLstTitulo += CRLF
				EndIf

				cLstTitulo += SE2->E2_PREFIXO+"-"+SE2->E2_NUM+"-"+SE2->E2_PARCELA+"-"+SE2->E2_TIPO

				If !cMoeda $ cLstMoeda
					cLstMoeda += Iif(Empty(cLstMoeda), "", ", ") + cMoeda
				EndIf
			ElseIf SE2->(MsRLock())
				TRB->(RecLock("TRB"))

				If lMarca
					TRB->MARCA := cMarca
					nValor += TRB->VALLIQ
					nQtdTit++
				Else
					TRB->MARCA := " "
					nValor -= TRB->VALLIQ
					nQtdTit--
				EndIf

				TRB->(MsUnlock())
			EndIf
		Endif

		If lTodos
			TRB->(dbSkip())
		Else
			Exit
		Endif
	EndDo

	If (nValor < 0 .Or. nQtdTit < 0)
		nQtdTit := nValor := 0
	EndIf

	If !Empty(cLstTitulo)
		Help(Nil, Nil, "COTMOEDA", Nil, STR0199, 1, 0,,,,,, {STR0200 + CRLF + CRLF + STR0202 + CRLF + cLstMoeda + CRLF + CRLF + STR0201 + CRLF + cLstTitulo})
	EndIf

	TRB->(DbGoTo(nReg))
	oQtdTit:Refresh()
	oValor:Refresh()
Return Nil

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³A565Cond 	³ Autor ³ Mauricio Pequim Jr.   ³ Data ³ 25/01/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Faz calculos da Liquidacao de parcelas automaticas 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A565Cond(cCondicao)													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA565																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A565Cond( cCondicao, nUsado2, cTipo, lAutomato )

Local nValParc		:= 0
Local nDifer		:= 0
Local aTamBco 		:= TamSx3("E2_BCOCHQ")
Local aTamAge 		:= TamSx3("E2_AGECHQ")
Local aTamCta 		:= TamSx3("E2_CTACHQ")
Local aTamTit 		:= TamSx3("E2_NUM")
Local nHeader
Local nCond

If SE4->(dbSeek(xFilial("SE4")+cCondicao))
	If SE4->E4_TIPO == "9"
	Return .F.
	ElseIf SE4->E4_TIPO == "A"
		// As condicoes de pagamento do tipo A são exclusivas dos modulos SIGAVEI e SIGAOFI.
		Alert(STR0170)
		Return .F.
	Endif
Endif

If Empty(cCondicao)
	aParcelas := {{dDataBase,nValor}}
Else
	aParcelas := Condicao (nValor,cCondicao,,dDataBase)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Corrige possiveis diferencas entre o valor selecionado e o ³
	//³ apurado ap¢s a divisao das parcelas						   	³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nCond := 1 to Len (aParcelas)
		nValParc += aParcelas [ nCond, 2]
	Next
	If nValParc != nValor
		nDifer := round(nValor - nValParc,2)
		aParcelas [ Len(aParcelas), 2 ] += nDifer
	EndIf
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Passa para aCols{} as datas e Valores de parcela apurados  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aCols:= Array(len(aParcelas),(nUsado2+1))

For nCond := 1 to Len (aParcelas)
	If ExistIni("E2_PREFIXO")
     	aCols[nCond,1] := InitPad(SX3->X3_RELACAO)
   Else
		aCols[nCond,1] := space(3)
   EndIf
	aCols[nCond,3] := Space(aTamBco[1])								// Banco
	aCols[nCond,4] := Space(aTamAge[1])								// Agencia
	aCols[nCond,5] := Space(aTamCta[1])   							// Conta
	aCols[nCond,2] := cTipo
	aCols[nCond,6] := Space(aTamTit[1])	// nRO.cHEQUE
	aCols[nCond,7] := aParcelas [nCond,1]							// data
	aCols[nCond,8] := aParcelas [nCond,2]							// valor da parcela
	aCols[nCond,9] := 0														// acrescimo
	aCols[nCond,10] := 0                  								// decrescimo
	aCols[nCond,11] := aParcelas [nCond,2]							// valor do cheque
	// Iniciar colunas adicionadas pelo usuario
	If nUsado2 > 11 // Tamanho do aHeader
		For nHeader := 12 to nUsado2
			aCols[nCond,nHeader] := CriaVar(aHeader[nHeader,2],.T.)
		Next
	Endif
	aCols[nCond,nUsado2+1] := .F.										// controle de delecao
Next nCond
nValorLiq	:= 0
nNroParc	:= 0

If SuperGetMv("MV_CMC7FIN") == "S"
	// Abre porta para CMC7
	If lOpenCmc7 == Nil
		OpenCMC7()
		lOpenCmc7 := .T.
	Endif
	If ExistBlock("A565PARC")
		ExecBlock("A565PARC", .F., .F. )
	Else
		F565CMC7()
	Endif
Endif

If !lAutomato
	oGet:ForceRefresh()
EndIF
A565Valor(.F., lAutomato)

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FA565CAN   ³ Autor ³ Mauricio Pequim Jr.	 ³ Data ³ 02/02/98  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Cancelamento de Liquida‡„o                 				    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA565CAN()													³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 													³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FA565CAN( cAlias, cCampo, nOpcx, aGetAut1, aChvAut, aGetAut2, aColItens, aEdit, lAutomato )
Local lPanelFin := IsPanelFin()
Local cArquivo
Local nTotal	:= 0
Local nHdlPrv	:= 0
Local nOpcT		:= 0
Local nTitulos	:= 0
Local nParcelas	:= 0
Local cNewLiq
Local cTitulo 	:= STR0062  //"Cancel. Liquida‡„o"
Local cDadosSE2
Local cDadosSe5
Local lHeadProva:= .F.
Local lPadraoE2	:= VerPadrao("515")  // Exclusao de conta a PAGAR
Local cPadrao
Local lContabilizou := .F.
Local lCtBaixa 	:= .F.
Local lFin565e2 := ExistBlock("FIN565E2")
Local nAcresc 	:= 0
Local nDecresc 	:= 0
Local aFlagCTB	:= {}
Local lAtuSldNat:= .T.
Local cFilialAtu	:= ""
Local nMoedaCus	:= 0
Local aDadosSE5	:= {}
Local aAreaAnt		:= {}
Local oModelBxP	:= FWLoadModel("FINM020")
Local cLog			:= ""
Local lRet			:= .T.
Local aTitPai   := {}
Local nI		:= 0
Local lExistFJU := FJU->(ColumnPos("FJU_RECPAI")) >0 .and. FindFunction("FinGrvEx")
Local aAreaMnt  := {}
Local nX	    := 0
Local lIntegNg  := FindFunction("NGBAIXASE2") .And. SuperGetMv("MV_NGMNTFI", .F., "N") == "S"
Local nTxMoeda  := 0
Local nSalDup   := 0
Local nSalDupM  := 0
Local nCasDec   := TamSx3("E2_TXMOEDA")[2]
Local cTipoDoc  := ""
Local cChaveTit := ""

Local nInicio	:= 0
Local nFim		:= 0
Local nGravados	:= 0

Private cLiqCan := CriaVar("E2_NUM" , .F.)
Private aDiario := {}
Private cCodDiario:= ""

Default aGetAut1	:= {}
Default aChvAut		:= {}
Default aGetAut2	:= {}
Default aColItens	:= {}
Default aEdit		:= {}
Default lAutomato	:= .F.

// Zerar variaveis para contabilizar os impostos da lei 10925.
VALOR5 := 0
VALOR6 := 0
VALOR7 := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se data do movimento n„o ‚ menor que data limite de ³
//³ movimentacao no financeiro									 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !DtMovFin(,,"1")
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica o numero do Lote 									 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SX5")
MsSeek(cFilial+"09FIN")

Private cLote := Substr(X5_DESCRI,1,4)

If Empty(SE2->E2_NUMLIQ)
	cLiqCan := SuperGetMV("MV_NUMLIQP")
Else
	cLiqCan := SE2->E2_NUMLIQ
EndIf

nValor		:= 0
nValPag		:= 0
nTitulos 	:= 0
nParcelas	:= 0
nOpcT 		:= 0

//Metricas - Acessos a Liquidação - Cancelamento
__cFunBkp   := FunName()
__cFunMet	:= Iif(AllTrim(__cFunBkp)=='RPC',"RPCFINA565",__cFunBkp)

If __lMetric
	SetFunName(__cFunMet)
	// Metrica de controle de acessos
	FwCustomMetrics():setSumMetric(Alltrim(ProcName()), "financeiro-protheus_qtd-por-acesso_total", 1)
	SetFunName(__cFunBkp)
Endif

If !lAutomato
	aSize := MSADVSIZE()
	If lPanelFin  //Chamado pelo Painel Financeiro
		dbSelectArea(cAlias)
		oPanelDados := FinWindow:GetVisPanel()
		oPanelDados:FreeChildren()
		aDim := DLGinPANEL(oPanelDados)
		DEFINE MSDIALOG oDlg OF oPanelDados:oWnd FROM 0,0 To 0,0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Observacao Importante quanto as coordenadas calculadas abaixo: ³
		//³ -------------------------------------------------------------- ³
		//³ a funcao DlgWidthPanel() retorna o dobro do valor da area do   ³
		//³ painel, sendo assim este deve ser dividido por 2 antes da sub- ³
		//³ tracao e redivisao por 2 para a centralizacao. 				   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nEspLarg := (((DlgWidthPanel(oPanelDados)/2) - 114) /2)
		nEspLin  := 0
		oDlg:lMaximized := .F.
		oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,20,20)
		oPanel:Align := CONTROL_ALIGN_ALLCLIENT

	Else
		DEFINE MSDIALOG oDlg4 FROM	20,1 TO 103,340 TITLE cTitulo PIXEL
		nEspLarg := 3
	  	nEspLin  := 0
	  	oDlg4:lMaximized := .F.
		oPanel := TPanel():New(0,0,'',oDlg4,, .T., .T.,, ,20,20)
		oPanel:Align := CONTROL_ALIGN_ALLCLIENT

	Endif

	@ 006+nEspLin, nEspLarg TO 036, 111+nEspLarg OF oPanel PIXEL
	nEspLarg := nEspLarg -11
	@ 021+nEspLin, 014+nEspLarg MSGET cLiqCan Valid !Empty(cLiqCan) 	SIZE 49, 11 OF oPanel PIXEL
	@ 011+nEspLin, 014+nEspLarg SAY STR0058 SIZE 49, 07 OF oPanel PIXEL //"Nro. Liquida‡„o"

	If lPanelFin  //Chamado pelo Painel Financeiro
			// define dimenção da dialog
			oDlg:nWidth := aDim[4]-aDim[2]

			ACTIVATE MSDIALOG oDlg ON INIT (FaMyBar(oDlg,{||,nOpct:=1, oDlg:End()},{||,oDlg:End()}),oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1]))
			FinVisual(cAlias,FinWindow,(cAlias)->(Recno()),.T.)

	Else
		DEFINE SBUTTON FROM 10, 133 TYPE 1 ACTION (nOpct:=1, If (Fa565OK2(),oDlg4:End(),nOpct:=0)) ENABLE OF oDlg4
		DEFINE SBUTTON FROM 23, 133 TYPE 2 ACTION oDlg4:End() ENABLE OF oDlg4
		ACTIVATE MSDIALOG oDlg4 CENTERED
	Endif
Else
	For nX := 1 To Len(aGetAut1)
		If Upper(aGetAut1[nX][1]) == "CLIQCAN"
			cLiqCan := aGetAut1[nX][2]
		EndIf
	Next nX

	If Fa565OK2()
		nOpct:=1
	Else
		nOpct:=0
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a Area atual do SE2                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SE2")
nOrdemSe2 	:= IndexOrd()
nRegSE2 	:= Recno()
nRecSe5		:= SE5->(Recno())

If Existblock("F565CANC")
	nOpct := Execblock("F565CANC" ,.F.,.F.)
Endif

If nOpct == 1

	//Metricas - Gravação da Liquidação
	If __lMetric
		nInicio := Seconds()
	Endif

	If A565Filtra(cLiqCan)

		cFilialAtu := cFilAnt
		nMoedaCus:= Val(GetMv("MV_MCUSTO"))
		DbSelectArea("SE2")
		SE2->(DbGoTop())
		DbSelectArea("TRBCAN")
		TRBCAN->(DbGoTop())

		While TRBCAN->(!Eof())
     		SE2->(dbGoto(TRBCAN->CHAVE))
			DbSelectArea("SE2")
			cDadosSe2 := SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
			cDadosSe5 := cDadosSe2
			aDadosSE5 := {SE2->E2_FILORIG,SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_FORNECE,SE2->E2_LOJA}

			//Metricas - Gravação do cancelamento da liquidação
			nGravados += 1

			//Movimento dos titulos geradores de liquidacao
			If (Empty(SE2->E2_NUMLIQ) .And. (Empty(SE2->E2_BCOCHQ) .and. !(SE2->E2_TIPO $ MV_CPNEG))) .Or. SE2->E2_STATUS == "R"
				nJuros	 := 0
				nVa		 := 0
				nDescont := 0
				nCM      := 0
				nTxMoeda := 0
				nAcresc	 := 0
				nDecresc := 0
				cFilAnt  := SE2->E2_FILORIG
				nTotAbat := SomaAbat(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,"P",SE2->E2_MOEDA,dDataBase,SE2->E2_FORNECE,SE2->E2_LOJA)
				cFilAnt	 := cFilialAtu
				dbSelectArea("SE5")
				SE5->(dbSetOrder(7))

				//Ponto de entrada para tratamento do titulo gerado pela liquidacao antes do cancelamento
				IF ExistBlock("F565E5")
      				ExecBlock("F565E5", .F., .F.)
				EndIf

				If SE5->(MsSeek(xFilial("SE5")+cDadosSE5))
					aAreaAnt := SE5->(GETAREA())

					While !Eof() .And. xFilial("SE5") == SE5->E5_FILIAL .And. SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) == cDadosSE5
						If SE5->E5_SITUACA == "C" .or. cLiqCan != Alltrim(E5_DOCUMEN) .or. ;
							SE5->E5_MOTBX != "LIQ" .or. !(SE5->E5_TIPODOC $ "DC|JR|BA|VA|CM") .Or.;
							SE5->E5_RECPAG != "P" .or. SE2->E2_FILORIG != SE5->E5_FILORIG
							SE5->(DbSKip())
							Loop
						EndIf

						//Verifica movimentacao de AVP
						FAVPValTit("SE2", SE5->(RecNo()))
						cTipoDoc := AllTrim(SE5->E5_TIPODOC)

						If cTipoDoc $ "DC|JR|VA|CM"
							If cTipoDoc == "DC"
								nDescont := SE5->E5_VALOR
							ElseIf cTipoDoc == "JR"
								nJuros := SE5->E5_VALOR
							ElseIf cTipoDoc == "VA"
								nVa := SE5->E5_VALOR
							Else
								nCM := SE5->E5_VALOR
							EndIf

							RecLock("SE5")
							SE5->E5_SITUACA := "C"
							SE5->(MsUnLock())
						ElseIf SE5->E5_TIPODOC == "BA"
							nRecSE5  := SE5->(Recno())
							nValPag  := SE5->E5_VALOR
							nValorM2 := SE5->E5_VLMOED2
							lCtBaixa := "S" $ SE5->E5_LA
							nAcresc	 := SE5->E5_VLACRES
							nDecresc := SE5->E5_VLDECRE
							nTxMoeda := SE5->E5_TXMOEDA

							oModelBxP := FWLoadModel("FINM020")
							oModelBxP:SetOperation( 4 )
							oModelBxP:Activate()
							oModelBxP:SetValue( "MASTER", "E5_GRV", .T. )
							oModelBxP:SetValue( "MASTER", "E5_OPERACAO", 1 )
							oModelBxP:SetValue( "MASTER", "HISTMOV"    , STR0062)
		             		oFKA := oModelBxP:GetModel( "FKADETAIL" )
							oFKA:SeekLine( { {"FKA_IDORIG", SE5->E5_IDORIG } } )

							If oModelBxP:VldData()
								SE5->(dbGoTo(nRecSE5))
								oModelBxP:CommitData()
							Else
								lRet := .F.
								cLog := cValToChar(oModelBxP:GetErrorMessage()[4]) + ' - '
								cLog += cValToChar(oModelBxP:GetErrorMessage()[5]) + ' - '
								cLog += cValToChar(oModelBxP:GetErrorMessage()[6])
								Help( ,,"M020VALID",,cLog, 1, 0 )
							EndIf

							oModelBxP:DeActivate()
						EndIf

						If UsaSeqCor()
							AADD(aDiario, {"SE5", SE5->(Recno()), cCodDiario, "E5_NODIA", "E5_DIACTB"})
			   			EndIf

						SE5->(dbSkip())
					EndDo

					RestArea(aAreaAnt)
				EndIf

				SE5->(dbGoTo(nRecSE5))
				SE2->(dbGoTo(TRBCAN->CHAVE))

				If nTxMoeda == 0 .And. SE2->E2_MOEDA > 1
					nTxMoeda := RecMoeda(SE5->E5_DATA, SE2->E2_MOEDA)
				EndIf

				cFilAnt  := SE2->E2_FILORIG

				DbSelectArea("SE2")
				SE2->(DbSetOrder(1))

				If SE2->(MsSeek(xFilial("SE2") + cDadosSE2))
					RecLock("SE2")
					SE2->E2_VALLIQ  := nValPag
					SE2->E2_DESCONT := nDescont
					SE2->E2_JUROS   := nJuros
					SE2->(MsUnlock())
				EndIf

				ABATIMENTO := nTotAbat

				SA2->(DbSetOrder(1))
				//Atualiza saldo duplicata de fornecedor
				If SA2->(DbSeek(xFilial("SA2")+SE2->(E2_FORNECE+E2_LOJA)))
					nSalDupM := (SE5->(E5_VALOR+E5_VLDESCO-E5_VLJUROS) - nVa)
					nSalDup  := Round(xMoeda(nSalDupM, SE2->E2_MOEDA, 1, SE2->E2_EMISSAO, nCasDec, SE2->E2_TXMOEDA, 0), 2)
					nSalDupM := Round(xMoeda(nSalDupM, SE2->E2_MOEDA, nMoedaCus, SE2->E2_EMISSAO, nCasDec, SE2->E2_TXMOEDA, 0), 2)

					RecLock( "SA2" )
					If SE2->E2_TIPO $ MVPAGANT+"|"+MV_CPNEG+"|"+MVABATIM
						SA2->A2_SALDUP  -= nSalDup
						SA2->A2_SALDUPM -= nSalDupM
      				Else
						SA2->A2_SALDUP  += nSalDup
						SA2->A2_SALDUPM += nSalDupM
					EndIf
					SA2->(MsUnlock())
				EndIf

				//adiciona no array os dados do titulos pai
				If lExistFJU
					aAdd(aTitPai,{SE2->E2_FILIAL,SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_FORNECE,SE2->E2_LOJA,SE2->(Recno())})
				EndIf

				cFilAnt := cFilialAtu
				cPadrao := "531"    //cancelamento de baixa
				lPadrao := VerPadrao(cPadrao)
				SA2->(MsSeek(xFilial("SA2")+SE2->(E2_FORNECE+E2_LOJA)))
				DbSelectArea("SE2")

				If lPadrao
					If !lHeadProva
						nHdlPrv := HeadProva( cLote, "FINA565", Substr( cUsuario, 7, 6 ), @cArquivo )
						lHeadProva := .T.
					EndIf

					If lCtBaixa
						nTotal += DetProva( nHdlPrv, cPadrao, "FINA565", cLote, /*nLinha*/, /*lExecuta*/, /*cCriterio*/, /*lRateio*/, /*cChaveBusca*/,;
											/*aCT5*/, /*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/ )
					EndIf
				EndIf

				cFilAnt := SE2->E2_FILORIG

				//Valores Acessorios.
				If __lExistFKD
					FAtuFKDBx(.T.)
				EndIf

				If lAtuSldNat
					AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR,SE2->E2_VLCRUZ, "+",,FunName(),"SE2",SE2->(Recno()),0)
				Endif

				//Verifica se h  abatimentos para voltar a carteira
				If nTotAbat > 0 .And. SE2->E2_SALDO == 0
					SE2->(DbSetOrder(6))

					If SE2->(MsSeek(xFilial("SE2")+SE2->(E2_FORNECE+E2_LOJA+E2_PREFIXO+E2_NUM+SE2->E2_PARCELA)))
						cTitAnt := SE2->(E2_FILIAL+E2_FORNECE+E2_LOJA+E2_PREFIXO+E2_NUM+SE2->E2_PARCELA)

						While !SE2->(Eof()) .and. cTitAnt == SE2->(E2_FILIAL+E2_FORNECE+E2_LOJA+E2_PREFIXO+E2_NUM+SE2->E2_PARCELA)
							If !(SE2->E2_TIPO $ MVABATIM)
								SE2->(dbSkip())
								Loop
							Endif

							Reclock("SE2", .F.)
							SE2->E2_BAIXA   := Ctod(" /  /  ")
							SE2->E2_SALDO	:= SE2->E2_VALOR
							SE2->E2_DESCONT := 0
							SE2->E2_JUROS   := 0
							SE2->E2_MULTA   := 0
							SE2->E2_CORREC  := 0
							SE2->E2_VALLIQ  := 0
							SE2->E2_LOTE    := Space(Len(E2_LOTE))
							SE2->E2_STATUS  := "A"
							SE2->(MsUnLock())

							If lAtuSldNat
								AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR,SE2->E2_VLCRUZ, "-",,FunName(),"SE2",SE2->(Recno()),0)
							Endif

							FA373Bx(.F.)
							SE2->(DbSkip())
						EndDo
					Endif

					SE2->(DbSetOrder(1))
				Endif

				SE2->(dbGoTo(TRBCAN->CHAVE))
				nValor := 0

				If nTotAbat > 0 .And. SE2->E2_SALDO == 0
					nValor := nTotAbat
				EndIf

				nValor += (((nValPag + nDescont) - nJuros) - nVa)

				If ABS(Round(SE2->E2_VALOR - nValor, 2)) == 0.01
					nValor := SE2->E2_VALOR
				EndIf

				RecLock("SE2", .F.)
				SE2->E2_SALDO	+= nValor
				SE2->E2_CORREC  := 0
				SE2->E2_MOVIMEN	:= dDataBase
				SE2->E2_TIPOLIQ	:= Space(3)
				SE2->E2_SDACRES	+= nAcresc
				SE2->E2_SDDECRE	+= nDecresc
				SE2->E2_STATUS  := "A"

				If SE2->E2_SALDO == SE2->E2_VALOR
					SE2->E2_VALLIQ	:= 0
					SE2->E2_BAIXA	:= Ctod("//")
					SE2->E2_MOVIMEN := SE2->E2_BAIXA
					SE2->E2_DESCONT := 0
					SE2->E2_JUROS   := 0
				EndIf

				SE2->(MsUnlock())

				FA373Bx(.F.)

				//Cancelamento do rastreamento(FI7/FI8)
				FINRSTDEL("SE2", cDadosSe5, aDadosSE5)

				//Se houver integração entre os módulos Manutenção de Ativos e Financeiro
				If lIntegNg
					aAreaMnt := GetArea()
					NGBAIXASE2(2)
					RestArea(aAreaMnt)
				EndIf
			ElseIf (SE2->E2_NUMLIQ = cLiqCan .Or. SE2->E2_TIPO $ MV_CPNEG)	.and. SE2->E2_STATUS != "R"
				cFilAnt := cFilialAtu
				SA2->(DbSetOrder(1))

				If SA2->(DbSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA))
					nSalDup  := Round(xMoeda(SE2->E2_SALDO, SE2->E2_MOEDA, 1, SE2->E2_EMISSAO, nCasDec, SE2->E2_TXMOEDA), 2)
					nSalDupM := Round(xMoeda(SE2->E2_SALDO, SE2->E2_MOEDA, nMoedaCus, SE2->E2_EMISSAO, nCasDec, SE2->E2_TXMOEDA), 2)

					DbSelectArea("SA2")
					RecLock( "SA2" )
					If SE2->E2_TIPO $ MVPAGANT+"|"+MV_CPNEG+"|"+MVABATIM
						SA2->A2_SALDUP  += nSalDup
						SA2->A2_SALDUPM += nSalDupM
					Else
						SA2->A2_SALDUP  -= nSalDup
						SA2->A2_SALDUPM -= nSalDupM
					EndIf
					MsUnlock()
				Endif

				//Se for uma parcela da liquidacao contabiliza o cancelamento e deleta
				cPadrao := "515"

				//Posiciona o SE2 pois o arquivo de trabalgo pode ser resultado de uma Query
				DbSelectArea("SE2")
				SE2->(DbSetOrder(1) )
				SE2->(MsSeek( xFilial("SE2") + cDadosSE2 ) )
				lContabilizou := Iif(SubStr(SE2->E2_LA,1,1)=="S",.T.,.F.)

				If !lHeadProva .and. lPadraoE2
					nHdlPrv := HeadProva( cLote, "FINA565", Substr( cUsuario, 7, 6 ), @cArquivo )
					lHeadProva := .T.
				EndIf

				If lPadraoE2 .and. lContabilizou
					nTotal += DetProva( nHdlPrv, cPadrao, "FINA565", cLote, /*nLinha*/, /*lExecuta*/, /*cCriterio*/, /*lRateio*/, /*cChaveBusca*/,;
					                    /*aCT5*/, /*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/ )
				EndIf

				If lFin565e2
					Execblock("FIN565E2",.F.,.F.)
				Endif

				If lAtuSldNat
					AtuSldNat(SE2->E2_NATUREZ, SE2->E2_VENCREA, SE2->E2_MOEDA, "2", "P", SE2->E2_VALOR,SE2->E2_VLCRUZ, "-",,FunName(),"SE2",SE2->(Recno()),0)
				Endif

				//apaga documentos
				If SE2->E2_TEMDOCS == "1"
					CN062ApagDocs()
				EndIf

				DbSetOrder(1)
				cChaveTit := xFilial("SE2")+"|"+ SE2->E2_PREFIXO +"|"+ SE2->E2_NUM +"|"+ SE2->E2_PARCELA +"|"+ SE2->E2_TIPO +"|"+ SE2->E2_FORNECE +"|"+ SE2->E2_LOJA
				FINDELFKs(cChaveTit, "SE2")

				If lExistFJU
					For ni := 1 to Len(aTitPai)
						FinGrvEx("P",aTitPai[nI][1], aTitPai[nI][2],aTitPai[nI][3],aTitPai[nI][4],aTitPai[nI][5],aTitPai[nI][6],aTitPai[nI][7],aTitPai[nI][8])
					Next ni
				Endif

				SE2->(RecLock("SE2",.F.))
				SE2->(DbDelete())
				SE2->(MsUnlock())
			EndIf

			cFilAnt := cFilialAtu
			TRBCAN->(DbSkip())
		EndDo

		cFilAnt := cFilialAtu

		If nTotal > 0
			RodaProva(nHdlPrv, nTotal )
			cA100Incl( cArquivo, nHdlPrv, 3, cLote, mv_par02==1, mv_par03==1, /*cOnLine*/, /*dData*/, /*dReproc*/, @aFlagCTB, /*aDadosProva*/, aDiario )
			aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
		EndIf

		//Volta Ultimo Numero do Parametro de Liquidacao
		cNewLiq := GetMV("MV_NUMLIQP")

		If cNewLiq == cLiqCan
			dbSelectArea("SX6")
			PutMv("MV_NUMLIQP", Tira1(cLiqCan))
		EndIf
	EndIf
EndIf

// Restaura a area do SE2
If Select("TRBCAN") > 0
	DbSelectArea("TRBCAN")
	DbCloseArea()
EndIf

DbSelectArea("SE2")
DbSetOrder(nOrdemSE2)
DbGoToP()

//Metricas - Gravação da Liquidação
If __lMetric .and. nGravados > 0
	nFim := Seconds() - nInicio
	nFim := nFim / nGravados

	SetFunName(__cFunMet)
	FwCustomMetrics():setAverageMetric(Alltrim(ProcName())+" - TempoGravacao", "financeiro-protheus_tempo-conclusão-processo_seconds", nFim)
	SetFunName(__cFunBkp)
EndIf

Return (.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ A565Filtra ³ Autor ³ Jeremias Luna         ³ Data ³ 12.05.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Calcula Parcelas, Nro.Titulos e valor da Liquida. a cancelar ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Fina565														³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A565Filtra( cLiqCan )

Local lRetOk := .T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis para a funcao da barra de status do processamento     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//MsAguarde({||A460CalCan(cLiqCan, @lRetOK)},"Cancelamento da Liquidacao - Num: "+cLiqCan)
A565CalCan(cLiqCan, @lRetOK)

Return(lRetOk)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ A565CalCan ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 02/02/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Calcula Parcelas, Nro.Titulos e valor da Liquida. a cancelar ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Fina565														³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A565CalCan( cLiqCan, lRetOk )

Local cQuery	:= ""
Local cChave	:= ""

lRetOk := IIF(lRetOk == Nil,.T.,lRetOk)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria indice condicional separando os titulos que deram origem a ³
//³ liquidacao e os titulos que foram gerados					    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SE2")
DbSetOrder(1)

cChave := "E2_FILIAL+E2_NUMLIQ"

cQuery += "SELECT SE2.R_E_C_N_O_ CHAVE
cQuery += "FROM   "+RetSqlName("SE2")+" SE2 "
cQuery += "INNER JOIN (SELECT E5_FILIAL,E5_RECPAG,E5_SITUACA,E5_TIPODOC,E5_DOCUMEN,E5_MOTBX,D_E_L_E_T_,E5_FILORIG,E5_PREFIXO,E5_NUMERO,E5_PARCELA,E5_TIPO,E5_CLIFOR,E5_LOJA FROM "+ RetSqlName("SE5")
cQuery += ") SE5 "
cQuery += "ON  SE5.E5_FILORIG = SE2.E2_FILORIG "
cQuery += "AND SE5.E5_PREFIXO = SE2.E2_PREFIXO "
cQuery += "AND SE5.E5_NUMERO = SE2.E2_NUM "
cQuery += "AND SE5.E5_PARCELA = SE2.E2_PARCELA "
cQuery += "AND SE5.E5_TIPO = SE2.E2_TIPO "
cQuery += "AND SE5.E5_CLIFOR = SE2.E2_FORNECE "
cQuery += "AND SE5.E5_LOJA = SE2.E2_LOJA "
cQuery += "WHERE  SE5.E5_FILIAL = '" + xFilial("SE5") + "' "
cQuery += "AND SE5.E5_RECPAG = 'P' "
cQuery += "AND SE5.E5_SITUACA <> 'C' "
cQuery += "AND SE5.E5_TIPODOC = 'BA' "
cQuery += "AND SE5.E5_DOCUMEN = '" + PADR(cLiqCan,TamSx3("E5_DOCUMEN")[1]) + "'"
cQuery += "AND SE5.E5_MOTBX = 'LIQ' "
cQuery += "AND SE2.D_E_L_E_T_ = ' ' "
cQuery += "AND SE5.D_E_L_E_T_ = ' ' "
cQuery += "UNION ALL "
cQuery += "SELECT SE2.R_E_C_N_O_ CHAVE "
cQuery += "FROM   "+RetSqlName("SE2")+" SE2 "
cQuery += "WHERE  E2_FILIAL = '" + xFilial("SE2") + "' "
cQuery += "AND E2_NUMLIQ = '"+ cLiqCan + "' "
cQuery += "AND SE2.D_E_L_E_T_ = ' ' "

cQuery := ChangeQuery(cQuery)
dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), 'TRBCAN', .F., .T.)
DbSelectArea("TRBCAN")
/* GESTAO - fim */

DbGoTop()
// Certifica se foram encontrados registros na condi‡„o selecionada
If Bof() .and. Eof()
	Help(" ",1,"RECNO")
	// Restaura os indices do SE2 e deleta o arquivo de trabalho
	If Select("TRBCAN") > 0
		DbSelectArea("TRBCAN")
		DbCloseArea()
	EndIf

	DbSelectArea("SE2")
	DbSetOrder(1)
	DbGoTop()
	lRetOk:= .F.
EndIf

If lRetOk

	While TRBCAN->(!Eof())
		dbSelectArea("TRBCAN")
     	SE2->(dbGoto(TRBCAN->CHAVE))
     	TRBCAN->(dbSkip())
		DbSelectArea("SE2")
		// Caso tenha ocorrido a baixa de alguma parcela da liquida‡„o , nao
		// sera possivel a opera‡„o de cancelamento.
		If SE2->E2_NUMLIQ == cLiqCan .And. 	STR(SE2->E2_SALDO,17,2) != STR(SE2->E2_VALOR,17,2)
			Help(" ",1,"LIQJABX")   // Nao aceita se ja houve baixa em liquidacao
			lRetOk := .F.
			Exit
		EndIf
	End
EndIf

Return lRetOk

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ A565natur  ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 17/03/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Validacao da Natureza                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Fina565														³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A565Natur( cNatureza )

Local lRetorna := .T.

//294 - Natureza Sintetica e Analitica
If !(FinVldNat( .F., cNatureza, 2 ))
	lRetorna := .F.
Endif

Return lRetorna

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ A565VerNum ³ Autor ³ Julio Wittwer         ³ Data ³ 03.11.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Consiste n£mero de Cheque na Liquida‡„o                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Fina565	(A565NumChq)      									³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A565VerNum( cPrefixo, cTit, cTipo )

Local cAlias 		:= Alias()
Local nOrdem		:= IndexOrd()
Local nRegistro		:= Recno()
Local lRet 			:= .T.
Local cKeyChq

Default cTipo := ""

__cParc565 := F565Parc()
cPrefixo := Iif(cPrefixo==nil,space(03),cPrefixo)
cKeyChq :=	xFilial("SE2")+cPrefixo+cTit+cTipo

// Verifica se o titulo ja existe no SE2
DbSelectArea("SE2")
DbSetOrder(1)
If MsSeek(xFilial("SE2")+cPrefixo+cTit+__cParc565+cTipo)
	While !Eof() .and. xFilial("SE2")+SE2->(E2_PREFIXO+E2_NUM+E2_TIPO) == cKeyChq
		If SE2->(E2_BCOCHQ+E2_AGECHQ+E2_CTACHQ) == aCols[n,3]+aCols[n,4]+aCols[n,5]
			lRet := .F.
			Exit
		Endif
		dbSkip()
	End
EndIf
DbSelectArea(cAlias)
DbSetOrder(nOrdem)
DbGoTo(nRegistro)

Return(lRet)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ A565VerPc  ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 17.04.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Consiste n£mero de parcela na Liquida‡„o                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Fina565	                  									³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A565VerPc( nContad, lNcc, cLiquid )

	Local nRecSE2 := SE2->(Recno())
	Local cChave := ""

	Default nContad := 0
	Default lNcc := .F.
	Default cLiquid := ""

	__cParc565 := F565Parc()

	While .T.
		If lNcc
			cChave := "LIQ"+cLiquid+__cParc565+Left(MV_CPNEG,3)
		Else
			cChave := aCols[nContad,1]+aCols[nContad,6]+__cParc565+aCols[nContad,2]
		EndIf

		If SE2->(MsSeek( xFilial("SE2") + cChave ))
			__cParc565 := Soma1(__cParc565)
		Else
			Exit
		EndIf
	EndDo

	SE2->(DbGoTo(nRecSE2))

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³FA565Tipo ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 03/12/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Checa o Tipo do titulo informado 				  		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA565Tipo() 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA565													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FA565Tipo( cTipo )
Local lRetorna := .T.
Local nI := 1
Local lTipo := (cTipo == NIL)

cTipo := IIF(cTipo == NIL, M->E2_TIPO, cTipo)

DbSelectArea("SX5")
If !MsSeek(cFilial+"05"+cTipo)
	Help(" ",1,"E1_TIPO")
	lRetorna := .F.
Else
	If cTipo $ MVPAGANT+"/"+MV_CPNEG
		Help(" ",1,"E1_TIPO")
		lRetorna := .F.
	ElseIf cTipo $ MVPAGANT+"/"+MVTAXA+"/"+MV_CPNEG .or. cTipo $ MVABATIM
		Help(" ",1,"TIPODOC")
		lRetorna := .F.
	EndIf
EndIf
If lRetorna .and. !lTipo
	For nI := 1 to Len(aCols)
		aCols[nI,2] := cTipo
	Next
	oGet:ForceRefresh()
Endif

Return lRetorna


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FA565GerAr³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 18/12/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gera arquivo de trabalho									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA565GerAr()												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa565Gerarq( aCampos )
	Local nTcSql As Numeric

	nTcSql	:= 0

	If _oFINA5651 <> Nil
		//-- Limpa registros para nova execução
		nTcSql := TcSQLExec("DELETE FROM " + __cGtrname )
		If nTcSql < 0
			//-- Se ocorrer algum problema refaz a temporaria
			_oFINA5651:Delete()
			_oFINA5651 := Nil
		EndIf
	EndIf
	If _oFINA5651 == Nil
		_oFINA5651 := FWTemporaryTable():New("TRB")
		_oFINA5651:SetFields(aCampos)
		_oFINA5651:AddIndex("1", {"CHAVE"})
		_oFINA5651:AddIndex("2", {"MARCA"})
		//------------------    
		//Criação da tabela temporaria    
		//------------------
		_oFINA5651:Create() 

		//Obtenho o nome físico da tabela temporária no banco de dados
		__cGtrname := _oFINA5651:GetRealName()
	EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FA565Repl ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 20/02/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Grava registros no arquivo temporario					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA565Repl() 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa565Repl(TRB, cAliasSE2, lEdit, cMarca, aEdit, lAutomato, aMatVal)
	Local nAbat		 := 0
	Local nJuros	 := 0
	Local nDescon	 := 0
	Local nTaxaMov   := 0
	Local nAcresc    := 0
	Local nDecres    := 0
	Local nVALCVT    := 0
	Local nSldTit    := 0
	Local nX		 := 0
	Local cChvSe2	 := ""
	Local dDataBaixa := Nil
	Local lTemBaixa  := .F.
	Local nVA        := 0
	Local nAedit     := 0
	Local lOk        := .F.
	Local lFA565GRVT := ExistBlock("FA565GRVTRB")
	Local lF565JUR 	 := ExistBlock("F565JUR")
	Local lF565DESC	 := ExistBlock("F565DESC")
	Local lIntSJURI	 := SuperGetMv("MV_JURXFIN",.T.,.F.)
	Local nCasDec    := TamSx3("E2_TXMOEDA")[2]
	Local nTaxaMin   := 0
	Local nTxaMoeLiq := 0
	Local nMoedaCvt	 := 0

	Default cAliasSE2	:= "SE2"
	Default lEdit		:= .F.
	Default cMarca		:= ""
	Default aEdit		:= {}
	Default lAutomato   := .F.
	Default aMatVal     := {}

	dbSelectArea(cAliasSE2)
	(cAliasSE2)->(dbGotop())
	nAedit := Len(aEdit)

	If nMoeda > 1
		nTxaMoeLiq := RecMoeda(dDataBase, nMoeda)
	EndIf

	While (cAliasSE2)->(!Eof())
		SE2->(DbGoTo((cAliasSE2)->R_E_C_N_O_))
		lEditTit   := .F.
		lTemBaixa  := .F.
		dDataBaixa := Nil
		nTaxaMin   := nTaxaMov   := SE2->E2_TXMOEDA
		nVALCVT    := SE2->E2_VALOR
		nSldTit    := SE2->E2_SALDO
		nAcresc    := SE2->E2_SDACRES
		nDecres    := SE2->E2_SDDECRE
		nVA        := 0
		nJuros     := 0
		nDescon    := 0
		nAbat      := 0
		nMoedaCvt  := 0

		If SE2->E2_OK == "xx"
			SE2->(RecLock("SE2"))
			SE2->E2_OK := ""
			SE2->(MsUnlock())
			(cAliasSE2)->(DbsKip())
			Loop
		EndIf

		If lIntSJURI .And. !Fa565Juri((cAliasSE2)->R_E_C_N_O_)
			SE2->(dbsKip())
			Loop
		EndIf

		If nTaxaMin == 0
			nTaxaMin := 1
			IF SE2->E2_MOEDA != nMoeda
				nMoedaCvt  := If( SE2->E2_MOEDA > 1, SE2->E2_MOEDA, nMoeda)
				If (nTaxaMov := RecMoeda(dDataBase, nMoedaCvt)) > 0
					nTaxaMin := nTaxaMov
				EndIf
			EndIf
		EndIf

		If !Empty(SE2->E2_BAIXA)
			lTemBaixa  := .T.
			dDataBaixa := SE2->E2_BAIXA
		EndIf

		nAbat := SomaAbat(SE2->E2_PREFIXO, SE2->E2_NUM, SE2->E2_PARCELA, "P", SE2->E2_MOEDA, dDataBase, SE2->E2_FORNECE, SE2->E2_LOJA)

		If lF565JUR
			nJuros := ExecBlock("F565JUR",.F.,.F.)
		Else
			nJuros := fa080Juros(SE2->E2_MOEDA, Nil, "SE2", dDataBaixa, nTaxaMin, nCasDec)
		Endif

		If lF565DESC
			nDescon := ExecBlock("F565DESC",.F.,.F.)
		EndIf

		If __lValAcess
			nVA := FValAcess(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_FORNECE,SE2->E2_LOJA,;
								SE2->E2_NATUREZ,lTemBaixa,"","P",dDataBase,Nil,SE2->E2_MOEDA,SE2->E2_MOEDA, nTaxaMin)
		Endif

		If SE2->E2_MOEDA != nMoeda
			If nVA != 0
				nVA := xMoeda(nVA, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec, nTaxaMin)
			EndIf

			If nAbat > 0
				nAbat := xMoeda(nAbat, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec, nTaxaMin)
			EndIf

			If nJuros > 0
				nJuros := xMoeda(nJuros, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec, nTaxaMin)
			EndIf

			If nDescon > 0
				nDescon := xMoeda(nDescon, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec, nTaxaMin)
			EndIf

			If nAcresc > 0
				nAcresc := xMoeda(nAcresc, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec, nTaxaMin)
			EndIf

			If nDecres > 0
				nDecres := xMoeda(nDecres, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec, nTaxaMin)
			EndIf

			If SE2->E2_MOEDA == 1 .And. nMoeda > 1 .And. nTxaMoeLiq == 0
				nVALCVT := xMoeda(nVALCVT, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec, 0, 1)
				nSldTit := xMoeda(nSldTit, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec, 0, 1)
			Else
				nVALCVT := xMoeda(nVALCVT, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec, nTaxaMin)
				nSldTit := xMoeda(nSldTit, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec, nTaxaMin)
			EndIf
		EndIf

		RecLock("TRB", .T.)
		TRB->FILIAL  := SE2->E2_FILORIG
		TRB->TITULO  := SE2->E2_PREFIXO + "-" + SE2->E2_NUM + "-" + SE2->E2_PARCELA + "-" + SE2->E2_TIPO
		TRB->EMISSAO := SE2->E2_EMISSAO
		TRB->VENCTO  := SE2->E2_VENCREA
		TRB->VALORI  := SE2->E2_VALOR
		TRB->ABATIM  := Iif(nAbat > 0, Round(nAbat, 2), 0)
		TRB->BAIXADO := (SE2->E2_VALOR - SE2->E2_SALDO)
		TRB->VACESS	 := Iif(nVA != 0, Round(nVA, 2), 0)
		TRB->MOEDAO  := SE2->E2_MOEDA
		TRB->CHAVE   := SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
		TRB->CHAVE2  := SE2->(E2_FILIAL+E2_FORNECE+E2_LOJA+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO)
		TRB->E2_REC  := (cAliasSE2)->R_E_C_N_O_

		For nX := 1 To nAedit
			If ValType(aEdit[nX][1]) == "A"
				nPosChv	 := aScan(aEdit[nX], {|z| Alltrim(Upper(z[1])) == "CHAVE"})
				nPosCMoe := aScan(aEdit[nX], {|z| Alltrim(Upper(z[1])) == "NCOTMOED"})
				nPosVJur := aScan(aEdit[nX], {|z| Alltrim(Upper(z[1])) == "NVALJUR"})
				nPosVDes := aScan(aEdit[nX], {|z| Alltrim(Upper(z[1])) == "NVALDES"})
				nPosVLiq := aScan(aEdit[nX], {|z| Alltrim(Upper(z[1])) == "NVALLIQ"})

				cChvSe2  := SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+SE2->E2_FORNECE+SE2->E2_LOJA)
				lOk      := lEdit .And. nPosChv > 0 .And. nPosCMoe > 0 .And. nPosVJur > 0 .And. nPosVDes > 0 .And. nPosVLiq > 0

				If lOk .And. aEdit[nX][nPosChv][2] == cChvSe2
					nValJur  := aEdit[nX][nPosVJur][2]
					nValDes	 := aEdit[nX][nPosVDes][2]
					nValLiq	 := aEdit[nX][nPosVLiq][2]

					If SE2->E2_MOEDA != nMoeda .And. !Empty(aEdit[nX][nPosCMoe][2])
						nTaxaMov := aEdit[nX][nPosCMoe][2]

						nVALCVT    := SE2->E2_VALOR
						nSldTit    := SE2->E2_SALDO

						If SE2->E2_MOEDA == 1 .And. nMoeda > 1
							nVALCVT := xMoeda(nVALCVT, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec, ,nTaxaMov)
							nSldTit := xMoeda(nSldTit, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec, ,nTaxaMov)
						Else
							nVALCVT := xMoeda(nVALCVT, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec,nTaxaMov)
							nSldTit := xMoeda(nSldTit, SE2->E2_MOEDA, nMoeda, dDataBase, nCasDec,nTaxaMov)
						EndIf
					EndIf

					TRB->JUROS  := nValJur
					TRB->DESCON := nValDes
					TRB->VALCVT := Round(nVALCVT,2)
					TRB->VALLIQ	:= nValLiq
					TRB->CTMOED	:= If(nTaxaMov == 0, 1, nTaxaMov)
					TRB->MARCA  := cMarca
					lEditTit := .T.
				EndIf
			EndIf
		Next nX

		If !lEditTit
			TRB->JUROS   := Round(nJuros, 2)
			TRB->ACRESC  := Round(nAcresc, 2)
			TRB->DESCON  := Round(nDescon, 2)
			TRB->DECRESC := Round(nDecres, 2)
			TRB->VALCVT  := Round(nVALCVT, 2)
			TRB->VALLIQ  := ((Round(nSldTit, 2) - TRB->(DESCON+DECRESC+ABATIM)) + TRB->(JUROS+ACRESC)) + TRB->VACESS
			TRB->CTMOED	 := nTaxaMov
			TRB->MARCA   := " "

			If lAutomato
				TRB->MARCA := cMarca
			EndIf
		EndIf

		If lAutomato
			nValor += TRB->VALLIQ
		EndIf

		If lFA565GRVT
			ExecBlock("FA565GRVTRB", .F., .F.)
		Endif

		If SE2->E2_MOEDA != nMoeda
			Aadd(aMatVal, {TRB->E2_REC, nJuros, nAcresc, nDescon, nDecres, nVA, nAbat, nSldTit})
		EndIf

		(cAliasSE2)->(DbSkip())
	EndDo
Return Nil

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa565Bar	³ Autor ³ Mauricio Pequim Jr	  ³ Data ³18.12.00³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Mostra a EnchoiceBar na tela - WINDOWS 					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa565Bar(oDlg, bOk, bCancel, oMark, oValor, oQtdTit, aMatVal, nMoeda)
Local bSet15
Local bSet24
Local lOk
Local lVolta 	:= .F.
Local lRet 		:= .T.
Local aButtons	:= {}

Default aMatVal := {}

If lRet
	AADD(aButtons, {"NOTE", {||Fa565Edit(oValor, oQtdTit, aMatVal, nMoeda)}, STR0165 } )
EndIf

AADD(aButtons, {"PESQUISA", {||Fa565Pesq(oMark)}, STR0166})
EnchoiceBar( oDlg, {|| ( lLoop := lVolta, lOk := Eval( bOk ) ) }, {|| ( lLoop := .F., Eval( bCancel ), ButtonOff( bSet15, bSet24, .T. ) ) },, aButtons,,,,, .F. )

Return Nil

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa565Edit ³ Autor ³ Mauricio Pequim Jr	  ³ Data ³18.12.00³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Mostra a EnchoiceBar na tela - WINDOWS 					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa565Edit(oValor, oQtdTit, aMatVal, nMoeda)
	Local nOpca   := 0
	Local nCol    := 0
	Local aDados  := {}
	Local nPos    := 0
	Local nValOld := 0
	Local nCasDec := TamSx3("E2_TXMOEDA")[2]
	Local cSimb   := Pad(SuperGetmv("MV_SIMB"+Alltrim(STR(nMoeda))),4)

	Default aMatVal := {}

	SE2->(dbSetOrder(1))

	If SE2->(MsSeek(TRB->CHAVE))
		If SE2->(MsRLock())
			nValOri  := TRB->VALORI
			nValAbt  := TRB->ABATIM
			nValBxd  := TRB->BAIXADO
			nCotMoed := TRB->CTMOED
			nValJur  := TRB->JUROS
			nValDes  := TRB->DESCON
			nValLiq  := TRB->VALLIQ
			aDados   := {SE2->E2_SALDO, TRB->MOEDAO, nMoeda, TRB->CTMOED, TRB->JUROS, TRB->ACRESC, TRB->DESCON, TRB->DECRESC, TRB->VACESS, TRB->ABATIM}

			DEFINE MSDIALOG oDlga FROM	69,70 TO 296-(nCol*1.6),331 TITLE STR0096 PIXEL
			@0.5, 2 TO 90-nCol, 128 OF oDlga  PIXEL

			@03, 68	MSGET nValOri Picture "@E 9999,999,999.99" When .F. SIZE 54, 10 OF oDlga PIXEL Hasbutton
			@04, 09 SAY STR0097 SIZE 54,7 OF oDlga PIXEL //Vlr.Original

			@15, 68 MSGET nValAbt Picture "@E 9999,999,999.99" When .F. SIZE 54, 10 OF oDlga PIXEL Hasbutton
			@16, 09 SAY STR0100  SIZE 54,7 OF oDlga PIXEL //Abatimento

			@27, 68	MSGET nValBxd Picture "@E 9999,999,999.99" When .F. SIZE 54, 10 OF oDlga PIXEL Hasbutton
			@28, 09 SAY STR0106 SIZE 54,7 OF oDlga PIXEL //Vlr.Baixado

			@39, 68 MSGET nCotMoed Picture "@E 9,999.9999" When TRB->MOEDAO != nMoeda Valid Fa565CTM(nCotMoed, aDados, nValOri, nValBxd, TRB->VALLIQ) SIZE 54,10 OF oDlga Hasbutton PIXEL
			@40, 09 SAY STR0140 SIZE 54,7 OF oDlga PIXEL //Cotacao da Moeda (R$)

			@51, 68	MSGET nValJur Picture "@E 9999,999,999.99" Valid Fa565Val(nValJur, nValDes, @nValLiq, aDados) SIZE 54, 10 OF oDlga Hasbutton PIXEL
			@52, 09 SAY STR0098 + " " + cSimb  SIZE 54, 7 OF oDlga PIXEL //Juros

			@63-nCol, 68 MSGET nValDes Picture "@E 9999,999,999.99" Valid Fa565Val(nValJur, nValDes, @nValLiq, aDados) SIZE 54, 10 OF oDlga Hasbutton PIXEL
			@64-nCol, 09 SAY STR0099 + " " + cSimb  SIZE 54, 7 OF oDlga PIXEL //Desconto

			@75-nCol, 68 MSGET nValLiq Picture "@E 9999,999,999.99" Valid Fa565Val(nValJur, nValDes, @nValLiq, aDados) SIZE 54, 10 OF oDlga Hasbutton PIXEL
			@76-nCol, 09 SAY STR0101 + " " + cSimb SIZE 54, 7 OF oDlga PIXEL //Vlr.Liquidar

			DEFINE SBUTTON FROM 98-nCol, 71 TYPE 1 ENABLE ACTION (nOpca := 1, oDlga:End()) OF oDlga
			DEFINE SBUTTON FROM 98-nCol, 99 TYPE 2 ENABLE ACTION (nOpca := 0, oDlga:End()) OF oDlga
			ACTIVATE MSDIALOG oDlga CENTERED

			If nOpca == 1

				RecLock("TRB", .F.)
				If Empty(TRB->MARCA)
					TRB->MARCA := cMarca
					nValor += TRB->VALLIQ
				Endif
				nValOld := TRB->VALLIQ

				If Len(aDados) >= 10
					TRB->CTMOED  := aDados[4]
					TRB->JUROS   := Round(aDados[5], 2)
					TRB->ACRESC  := Round(aDados[6], 2)
					TRB->DESCON  := Round(aDados[7], 2)
					TRB->DECRESC := Round(aDados[8], 2)
					TRB->VACESS  := Round(aDados[9], 2)
					TRB->ABATIM  := Round(aDados[10],2)
					TRB->VALLIQ  := nValLiq
					If aDados[2] > 1
						TRB->VALCVT := Round(xMoeda(SE2->E2_SALDO, aDados[2], aDados[3], dDatabase, nCasDec, aDados[4], 0), 2)
					Else
						TRB->VALCVT := Round(xMoeda(SE2->E2_SALDO, aDados[2], aDados[3], dDatabase, nCasDec,TRB->CTMOED ,aDados[4] ), 2)
					Endif

					If TRB->CTMOED != nMoeda .And. (nPos := Ascan(aMatVal, {|aMat| aMat[1] == TRB->E2_REC})) > 0
						aMatVal[nPos,2] := aDados[5]
						aMatVal[nPos,3] := aDados[6]
						aMatVal[nPos,4] := aDados[7]
						aMatVal[nPos,5] := aDados[8]
						aMatVal[nPos,6] := aDados[9]
						aMatVal[nPos,7] := aDados[10]
						aMatVal[nPos,8] := aDados[1]
					EndIf
				EndIf

				TRB->(MsUnlock())
				nValor -= nValOld
				nValor += TRB->VALLIQ
				oValor:Refresh()
				oQtdTit:Refresh()
			EndIf
		Else
			IW_MsgBox(STR0156, STR0051, "STOP")	//"Este titulo está sendo utilizado em outro terminal, não pode ser utilizado na Liquidação"###"Atenção"
		Endif
	Else
		Help(" ", 1, "TITNAOENCONT", Nil, "Título " + TRB->CHAVE + "não encontrado", 2, 0,,,,,, {})
	EndIf

	FwFreeArray(aDados)
Return

//------------------------------
/*/{Protheus.doc}Fa565Val
Valida o valor digitado, juros, desconto e
valor liquido

@param nValJur, numeric, valor do juros
@param nValDes, numeric, valor do desconto
@param nValLiq, numeric, valor liquido a negociar.
@param aDados, Vetor com os valores a liquidar de um título
[1]  - Valor a liquidar
[2]  - Moeda do título
[3]  - Moeda da liquidação
[4]  - Taxa do título a negociar
[5]  - Valor do juros
[6]  - Valor do acréscimo
[7]  - Valor do desconto
[8]  - Valor do decréscimo
[9]  - Valor acessório
[10] - Valor do abatimento
@return lRet, Lógico indica que o valor foi alterado.

@author Mauricio Pequim Jr
@since  18.12.00
@version 12
@type function
/*/
//------------------------------
Static Function Fa565Val(nValJur, nValDes, nValLiq, aDados)
	Local lRet     := .T.
	Local cCampo   := ""
	Local nJurAnt  := 0
	Local nDesAnt  := 0
	Local nCasDec  := 0
	Local nSldLiq  := 0
	Local nOutVlr  := 0

	Default nValJur := 0
	Default nValDes := 0
	Default nValLiq := 0
	Default aDados  := {}

	If Len(aDados) >= 10
		cCampo   := AllTrim(ReadVar())
		nJurAnt  := Round(aDados[5],2)
		nDesAnt  := Round(aDados[7],2)

		If (cCampo == "NVALLIQ" .Or. nValLiq <= 0)
			If nValLiq <= 0
				lRet    := .F.
				nValLiq := Round(aDados[1],2)
				Help(" ", 1, "SALDOLIQ", Nil, STR0195, 2, 0,,,,,, {STR0196} )
			Else
				nCasDec := TamSx3("E2_TXMOEDA")[2]
				If aDados[2] > 1
					nSldLiq := Round(xMoeda(SE2->E2_SALDO, aDados[2], aDados[3], dDatabase, nCasDec, aDados[4], 0), 2)
				Else
					nSldLiq := Round(xMoeda(SE2->E2_SALDO, aDados[2], aDados[3], dDatabase, nCasDec, ,aDados[4] ), 2)
				Endif

				If (aDados[7] + aDados[8]+ Abs(aDados[9]) + aDados[10]) > 0
					nSldLiq -= (Round(aDados[7],2) + Round(aDados[8],2) + Round(aDados[10],2)) + Iif(aDados[9] < 0, Abs(aDados[9]), 0)

					If aDados[9] < 0
						nSldLiq += Round(aDados[9],2)
					ElseIf aDados[9] > 0
						nOutVlr += Round(aDados[9],2)
					EndIf
				EndIf

				nOutVlr += (nJurAnt + Round(aDados[6],2))

				If (nValLiq - nOutVlr)  > nSldLiq
					lRet    := .F.
					nValLiq := Round(aDados[1],2)
					Help(" ", 1, "SALDOLIQ", Nil, STR0197, 2, 0,,,,,,{STR0198} )
				EndIf
			EndIf
			If lRet .and. nValLiq != aDados[1]
				aDados[1] := nValLiq
			Endif
		EndIf

		If lRet .And. (cCampo == "NVALJUR" .And. nValJur != nJurAnt) .Or. (cCampo == "NVALDES" .And. nValDes != nDesAnt)
			If cCampo == "NVALJUR"
				aDados[5] := nValJur
				nValLiq   -= nJurAnt
				nValLiq   += nValJur
			Else
				aDados[7] := nValDes
				nValLiq   += nDesAnt
				nValLiq   -= nValDes
			EndIf
		EndIf
	EndIf
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa565Pesq ³ Autor ³ Mauricio Pequim Jr	  ³ Data ³18.12.00  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ tela de pesquisa - WINDOWS 				    			  		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  				  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa565Pesq( oMark )

Local cCampo := Space(25)

DEFINE MSDIALOG oDlgb FROM	69,70 TO 160,331 TITLE STR0002 PIXEL  //"Pesquisar"
@ 1, 2 TO 22, 128 OF oDlgb  PIXEL
@ 7, 68	MSGET cCampo Picture "@!" SIZE 54, 10 OF oDlgb PIXEL
@ 8, 9 SAY STR0102  SIZE 54, 7 OF oDlgb PIXEL  //"Pesquisa"
DEFINE SBUTTON FROM 29, 71 TYPE 1 ENABLE ACTION (nOpca:=1,Fa565Acha(cCampo,oMark),;
								oDlgb:End(),nOpca:=0) OF oDlgb
DEFINE SBUTTON FROM 29, 99 TYPE 2 ENABLE ACTION (oDlgb:End()) OF oDlgb
ACTIVATE MSDIALOG oDlgb CENTERED
Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa565Acha ³ Autor ³ Mauricio Pequim Jr	  ³ Data ³18.12.00  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao que realiza a pesquisa - WINDOWS					     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  				  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa565Acha( cCampo, oMark )

dbSelectArea("TRB")
MsSeek(xFilial("SE2")+cCampo,.T.)
oMark:oBrowse:Refresh(.T.)

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa565OK1	³ Autor ³ Mauricio Pequim Jr	  ³ Data ³17.07.01³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao que realiza a validacao do usuario na primeira tela ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa565OK1()
Local lRet := .T.
If ExistBlock("F565OK1")
	lRet := ExecBlock("F565OK1",.f.,.f.)
Endif

// Se Portugal, pega cod. Diario
If UsaSeqCor() .AND. lRet
	lRet := Fa565OK2()
Endif

If lRet
	// Validacao de confirmacao de tela e obrigatoriedade do preenchimento do fornecedor e loja
	If (Empty(__cForn565) .Or. Empty(__cLoja))
		Help("  ",1,"A565FORN",,STR0187,1,0) //"Informe o código do fornecedor e loja."
		lRet := .F.
	Endif

	If cFornAte < cFornDe
		IW_MsgBox( STR0168, STR0051, "STOP" )	// "O código <Fornecedor Ate> deve ser maior ou igual ao código <Fornecedor De>."###"Atenção"
		oFornAte:SetFocus()
		lRet := .F.
	ElseIf cFornAte == cFornDe .And. cLojaAte < cLojaDe
		IW_MsgBox( STR0169, STR0051, "STOP" )	// "O código <Loja Ate> deve ser maior ou igual ao código <Loja De>."###"Atenção"
		oLojaAte:SetFocus()
		lRet := .F.
	EndIf
EndIf

Return lRet



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ F565CMC7 ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 28/08/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa destinado a efetuar a leitura de cheques a partir ³±±
±±³          ³ do equipamento CMC7 e alimentar a rotina de liquidacao.    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F565CMC7()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lContinua		:= .T.			// Flag da leitura quando for por dispositivo serial
Local nNumCH		:= 1			// Numeral do cheque (qual cheque esta sendo lido. Se primeiro, segundo etc)
Local aCMC7			:= {}			// Array que guardara os dados do cheque vindos da leitora
Local dVenc565		:= dDataBase    // Data inicial do cheque
Local nValChq565	:= 0			// Valor inicial do cheque
Local nCont			:= 0            // Variavel de looping do aHeader
Local aCmc7Tc 		:= {}			// Armazena o retorno da funcao F565Cmc7Tc
Local nX			:= 2            // Variavel para comparar com o tamanho do aCols
Local lContLeit		:= .T.			// Verifica se a leitura (teclado) acabou ou nao
Local nPosFili		:= aScan(aHeader,{|z| Alltrim(Upper(z[2]))=="E2_PREFIXO" })	// Captura no aHeader o campo da filial
Local nPosTipo		:= aScan(aHeader,{|z| Alltrim(Upper(z[2]))=="E2_TIPO" })		// Captura no aHeader o campo do tipo de operacao
Local nPosBanco		:= aScan(aHeader,{|z| Alltrim(Upper(z[2]))=="E2_BCOCHQ" })		// Captura no aHeader o campo do banco
Local nPosAgen		:= aScan(aHeader,{|z| Alltrim(Upper(z[2]))=="E2_AGECHQ" })		// Captura no aHeader o campo da agencia
Local nPosConta		:= aScan(aHeader,{|z| Alltrim(Upper(z[2]))=="E2_CTACHQ" }) 	// Captura no aHeader o campo da conta
Local nPosCheque	:= aScan(aHeader,{|z| Alltrim(Upper(z[2]))=="E2_NUM" })		// Captura no aHeader o campo do nro. do cheque
Local nPosValor		:= aScan(aHeader,{|z| Alltrim(Upper(z[2]))=="E2_VLCRUZ" }) 	// Captura no aHeader o campo do valor do cheque
Local lCond 		:= .T.
Private lUsaCmC7	:= .T.			// Necessario para funcionamento das funcoes de leitura

If IW_MsgBox(STR0122,STR0001,"YESNO")  //"Deseja utilizar a leitora de cheques?"###"Liquidação"
	If nHdlCMC7 < 0
		lContinua := .f.
		// Leitura do cheque utilizando leitor via teclado.
		If Len( aCols ) >= 1 .AND. Empty( aCols[1,nPosBanco] )
			aCmc7Tc		:= F460Cmc7Tc() //F565Cmc7Tc()
	    	If !Empty( aCols[1,nPosValor] )
	    		nValChq565 := aCols[1,nPosValor]
	    	Endif
	    	If 	Len(aCmc7Tc) != 0
	    		F565GetChq(aCmC7Tc,@dVenc565,@nValChq565)
		    	aCols[1,nPosFili]	:= Pad(cFilAnt,Len(SE2->E2_PREFIXO))			// Prefixo
				aCols[1,nPosTipo]	:= cTipo		   	// Tipo
				aCols[1,nPosBanco]	:= aCmc7Tc[1]		// Banco
				aCols[1,nPosAgen]	:= aCmc7Tc[3]		// Agencia
				aCols[1,nPosConta]	:= aCmc7Tc[4]		// Conta
				aCols[1,nPosCheque]	:= Pad(aCmc7Tc[2],Len(SE2->E2_NUM))		// Cheque
				aCols[1,nPosValor]	:= nValChq565		// Valor
			EndIf
		Endif
		While lContLeit
			If IW_MsgBox(STR0125,STR0001,"YESNO")	//"Deseja incluir mais cheques?"###"Liquidação"
				aCmc7Tc	:= F460Cmc7Tc()
				If Len(aCmc7Tc) != 0
					If aScan(aCols,{|x| AllTrim(x[3])+AllTrim(x[4])+AllTrim(x[5])+AllTrim(x[6])== ;
						AllTrim(aCmc7Tc[1])+AllTrim(aCmc7Tc[3])+AllTrim(aCmc7Tc[4])+AllTrim(aCmc7Tc[2]) }) = 0
						If nX <= Len( aCols )
							If !Empty( aCols[nX,nPosValor] )
	    						nValChq565 := aCols[nX,nPosValor]
	    					Endif
	    				Endif
						F565GetChq(aCmC7Tc,@dVenc565,@nValChq565)
						If Empty( cCondicao ) .OR. Len( aCols ) = 1 .OR. nX > Len( aCols ) .OR. !lCond
							Aadd( aCols, { 	Pad(cFilAnt,Len(SE2->E2_PREFIXO)),	cTipo, 		aCmc7Tc[1], aCmc7Tc[3],	aCmc7Tc[4], aCmc7Tc[2],;
									 	dVenc565,	nValChq565, 0,			0, 			nValChq565, .F. } )
							lCond := .F.
						Elseif lCond
							aCols[nX,nPosFili]		:= Pad(cFilAnt,Len(SE2->E2_PREFIXO))		// Prefixo
							aCols[nX,nPosTipo]		:= cTipo		   	// Tipo
							aCols[nX,nPosBanco]		:= aCmc7Tc[1]		// Banco
							aCols[nX,nPosAgen]		:= aCmc7Tc[3]		// Agencia
							aCols[nX,nPosConta]		:= aCmc7Tc[4]		// Conta
							aCols[nX,nPosCheque]	:= Pad(aCmc7Tc[2],Len(SE2->E2_NUM))		// Cheque
							aCols[nX,nPosValor]		:= nValChq565		// Valor
							nX++
						Endif
					Else
						IW_MsgBox(STR0124,STR0051,"STOP")	//""Cheque já Incluído ! Será Desprezado.""###"Atenção"
					Endif
				EndIf
			Else
				lContLeit := .F.
			Endif
			Loop
		End
	Endif

	While lContinua
		aCmc7 := {}
		aCmc7 := LjLeCmc7(nNumCH)
		If Len(aCmc7) > 0
			dVenc565		:= dDataBase
			nValChq565	:= 0
			IF F565GetChq(aCmC7,@dVenc565,@nValChq565)
				If nNumCH == 1  // Se for o primeiro
					aCols[1,1] := Pad(cFilAnt,Len(SE2->E2_PREFIXO))		//Prefixo
					aCols[1,2] := cTipo			//Tipo
					aCols[1,3] := aCmc7[1]		//Banco
					aCols[1,4] := aCmc7[3]		//Agencia
					aCols[1,5] := aCmc7[4]		//Conta
					aCols[1,6] := Pad(aCmc7[2],Len(SE2->E2_NUM))		//Cheque
					aCols[1,7] := dVenc565		//Vencimento
					aCols[1,8] := nValChq565	//Valor
					aCols[1,9] := 0				//Acrescimo
					aCols[1,10] := 0			//Decrescimo
					aCols[1,11] := nValChq565	//Valor
					If nUsado2 > 11 // Tamanho do aHeader
						For nCont := 12 to nUsado2
							aCols[1,nCont] := CriaVar(aHeader[nCont,2],.T.)
						Next
					Endif
					aCols[1,nUsado2+1] := .F.	// controle de delecao
					nNumCH++
				Else
					//Pesquisa se cheque ja foi lido anteriormente (Banco/Agencia/Conta/Nro.Cheque)
					If aScan(aCols,{|x| AllTrim(x[3])+AllTrim(x[4])+AllTrim(x[5])+AllTrim(x[6])== ;
							AllTrim(aCmc7[1])+AllTrim(aCmc7[3])+AllTrim(aCmc7[4])+AllTrim(aCmc7[2]) }) = 0

						Aadd(aCols,{	Pad(cFilAnt,Len(SE2->E2_PREFIXO)),	aCmc7[1],	aCmc7[3],	aCmc7[4],	Pad(aCmc7[2],Len(SE2->E2_NUM)),;
										dVenc565,	nValChq565,	0,			0,			nValChq565})
						If nUsado2 > 12 // Tamanho do aHeader
							For nCont := 13 to nUsado2
								AADD(aCols[Len(aCols)],CriaVar(aHeader[nCont,2],.T.))
							Next
						Endif
						AADD(aCols[Len(aCols)],.F.)	// controle de delecao
						nNumCH++
					Else
						IW_MsgBox(STR0124,STR0051,"STOP") //"Cheque já Incluído ! Será Desprezado."###"Atenção"
					Endif
				EndIf
			Endif
			If !IW_MsgBox(STR0125,STR0001,"YESNO") //"Deseja incluir mais cheques?"###"Liquidação"
				Exit
			EndIf
		Else
			IF IW_Msgbox(STR0126,STR0051,"YESNO")  //"Encerra leitura de Cheques ?"###"Atenção"
				Exit
			Endif
		Endif
	End
Endif
n:= Len(aCols)
Return


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F565GetChq³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 28/08/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Entrada de dados do cheque   								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F565GetChq(ExpA1,ExpD1,ExpN1)							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1=Array contendo dados do cheque (vindos da leitora)	  ³±±
±±³          ³ ExpD1=Data de vencto do cheque                             ³±±
±±³          ³ ExpC3=Valor do Cheque                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA565													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F565GetChq( aCmC7, dVenc565, nValChq565 )

Local lCorrige := .F.
Local lRet := .F.
Local nOpca := 0
Local oBanco
// Criacao da Interface
While .T.
	nOpca := 0
	DEFINE MSDIALOG oMkwdlg FROM	070,116 TO 334,330 TITLE STR0127 PIXEL  //"Dados do cheque"
	@ 010,010 SAY STR0128     	Size 25,08 OF oMkwdlg PIXEL	//"Banco"
	@ 025,010 SAY STR0129   	Size 25,08 OF oMkwdlg PIXEL	//"Agência"
	@ 040,010 SAY STR0130     	Size 25,08 OF oMkwdlg PIXEL	//"Conta"
	@ 055,010 SAY STR0131    	Size 25,08 OF oMkwdlg PIXEL	//"Cheque"
	@ 070,010 SAY STR0132		Size 35,08 OF oMkwdlg PIXEL	//"Vencimento"
	@ 085,010 SAY STR0133		Size 25,08 OF oMkwdlg PIXEL	//"Valor"
	@ 010,050 MSGET oBanco VAR aCmc7[1] WHEN lCorrige	Size 15,10 OF oMkwdlg PIXEL
	@ 025,050 MSGET aCmc7[3] WHEN lCorrige	Size 30,10 OF oMkwdlg PIXEL
	@ 040,050 MSGET aCmc7[4] WHEN lCorrige	Size 30,10 OF oMkwdlg PIXEL
	@ 055,050 MSGET aCmc7[2] WHEN lCorrige	Size 30,10 OF oMkwdlg PIXEL
	@ 070,050 MSGET dVenc565					Size 40,10 OF oMkwdlg PIXEL
	@ 085,050 MSGET nValChq565 Valid nValChq565 > 0 Picture "@E 99,999,999.99" Size 40,10  OF oMkwdlg PIXEL

	DEFINE SBUTTON FROM 107, 015 TYPE 1 ACTION (nOpca:=1,oMkwdlg:End())ENABLE OF oMkwdlg PIXEL
	DEFINE SBUTTON FROM 107, 045 TYPE 2 ACTION (nOpca:=2,oMkwdlg:End())ENABLE OF oMkwdlg PIXEL
	DEFINE SBUTTON FROM 107, 075 TYPE 5 ACTION (nOpca:=3,	;
																aCmc7[1] := PADR(aCmc7[1],3," "),;
																aCmc7[3] := PADR(aCmc7[3],4," "),;
																aCmc7[4] := PADR(aCmc7[4],8," "),;
																aCmc7[2] := PADR(aCmc7[2],6," "),;
																lCorrige := .T.,;
																oBanco:SetFocus()) ENABLE OF oMkwdlg PIXEL

	ACTIVATE MSDIALOG oMkwdlg CENTERED

	If nOpca == 1  // Confirma Dados do Cheque
	   lRet := .T.
		lCorrige := .F.
	ElseIf nOpca == 2 	// Finaliza inclusao de cheques
		lRet := .F.
		lCorrige := .F.
	Endif
	Exit
End
Return(lRet)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa565CTM	³ Autor ³ Mauricio Pequim Jr.   ³ Data ³02.12.02  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Converte os valores para nova cotacao da moeda			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa565CTM(nNovaTaxa, aDados, nValOri, nValBxd, nValOld)
	Local lRet     := .F.
	Local nSldTit  := 0
	Local nMoedTit := 0
	Local nTaxaTit := 0
	Local nMoedLiq := 0
	Local nCasDec  := 0

	Default nNovaTaxa := 0
	Default aDados    := {}
	Default nValOri	  := 0
	Default nValBxd   := 0
	Default nValOld   := 0

	If Len(aDados) >= 10
		lRet := (nNovaTaxa > 0 .Or. aDados[2] == 1)
	EndIf

	If lRet .And. nNovaTaxa != aDados[4]
		nCasDec  := TamSx3("E2_TXMOEDA")[2]
		nMoedTit := aDados[2]
		nMoedLiq := aDados[3]
		nTaxaTit := aDados[4]
		nCotMoed := nNovaTaxa
		nValOri  := nValOri - nValBxd //estabelece o valor original do título substraindo a baixa para cálculo da cotação em moeda estrangeira.

		If nMoedTit == 1
			nSldTit  := xMoeda(aDados[1], nMoedTit, nMoedLiq, dDataBase, nCasDec, TRB->CTMOED, nNovaTaxa)
		Else
			nSldTit  := xMoeda( nValOri, nMoedTit, nMoedLiq, dDataBase, nCasDec, nNovaTaxa, 0)
		EndIf

		If aDados[5] > 0 //Juros
			aDados[5] := xMoeda(aDados[5], nMoedLiq, nMoedTit, dDataBase, nCasDec, nTaxaTit ,nTaxaTit  )
			aDados[5] := xMoeda(aDados[5], nMoedTit, nMoedLiq, dDataBase, nCasDec, nNovaTaxa,nNovaTaxa )
		EndIf

		If aDados[6] > 0 //Acréscimo
			aDados[6] := xMoeda(aDados[6], nMoedLiq, nMoedTit, dDataBase, nCasDec, nTaxaTit , nTaxaTit)
			aDados[6] := xMoeda(aDados[6], nMoedTit, nMoedLiq, dDataBase, nCasDec, nNovaTaxa, nNovaTaxa)
		EndIf

		If aDados[7] > 0 //Desconto
			aDados[7] := xMoeda(aDados[7], nMoedLiq, nMoedTit, dDataBase, nCasDec, nTaxaTit , nTaxaTit)
			aDados[7] := xMoeda(aDados[7], nMoedTit, nMoedLiq, dDataBase, nCasDec, nNovaTaxa, nNovaTaxa)
		EndIf

		If aDados[8] > 0 //Descréscimo
			aDados[8] := xMoeda(aDados[8], nMoedLiq, nMoedTit, dDataBase, nCasDec, nTaxaTit , nTaxaTit)
			aDados[8] := xMoeda(aDados[8], nMoedTit, nMoedLiq, dDataBase, nCasDec, nNovaTaxa, nNovaTaxa)
		EndIf

		If aDados[9] != 0 //VA
			aDados[9] := xMoeda(aDados[9], nMoedLiq, nMoedTit, dDataBase, nCasDec, nTaxaTit , nTaxaTit)
			aDados[9] := xMoeda(aDados[9], nMoedTit, nMoedLiq, dDataBase, nCasDec, nNovaTaxa, nNovaTaxa)
		EndIf

		If aDados[10] > 0 //Abatimento
			aDados[10] := xMoeda(aDados[10], nMoedLiq, nMoedTit, dDataBase, nCasDec, nTaxaTit , nTaxaTit)
			aDados[10] := xMoeda(aDados[10], nMoedTit, nMoedLiq, dDataBase, nCasDec, nNovaTaxa, nNovaTaxa)
		EndIf

		nValJur   := Round(aDados[5],2)
		nValDes   := Round(aDados[7],2)
		nValLiq   := ((Round(nSldTit,2) - (nValDes + Round(aDados[8],2) + Round(aDados[10],2))) + (nValJur + Round(aDados[6],2))) + Round(aDados[9],2)
		aDados[1] := nSldTit
		aDados[4] := nNovaTaxa
	ElseIf lRet .And. nNovaTaxa == aDados[4]
		aDados[1] := nValOld //como não houve alteração de taxa, permanece o mesmo valor que antes.
	EndIf

Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³F565PARC  ºAutor  ³Edney S. Souza      º Data ³  06/03/02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna a Parcela do Título                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function F565PARC()
__cParc565 := StrZero(1,TamSx3("E2_PARCELA")[1])
Return __cParc565


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Fa565bAval ³ Autor ³ Mauricio Pequim Jr.  ³ Data ³ 02/04/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Bloco de marcacoo       			     					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ Fa565bAval()		  										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA565													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa565bAval( cMarca, oValor, oQtdTit, oMark )
Local lRet := .T.

SE2->(dbSetOrder(1))
SE2->(MsSeek(TRB->CHAVE))

If SE2->E2_SALDO > 0 .And. SE2->(MsRLock())
	If (lRet := !(lPLSCTFIN .And. PLSCTFIN('TRB'))) //verificacao SIGAPLS
		A565Inverte(cMarca, oValor, oQtdTit, .F., oMark)
	EndIf
Else
	IW_MsgBox(STR0156,STR0051, "STOP")	//"Este titulo está sendo utilizado em outro terminal, não pode ser utilizado na Liquidação"###"Atenção"
	lRet := .F.
Endif

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³F565ConfirºAutor  ³Mauro Sano          º Data ³  27/03/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao para a validar o código capturado pelo leitor de    º±±
±±º          ³ CMC7.                                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametr  ³ ExpC1 = Contem a string lida do cheque, antes do tratamentoº±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ ExpL1 = Confirma se os dados lidos sao validos             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA565                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function F565Confirma( cCmc7 )
Local lRet := .F.		// Retorno da validacao da string

If Empty( cCmc7 ) // Caso nao leia nada
	MsgAlert( STR0161 )		// "Passe o cheque novamente no leitor."
Elseif ( "?" $ cCmc7 ) .OR. Len( AllTrim( cCmc7 ) ) <> 34 // Se encontrar o caracter de erro (?) ou tamnaho menor que o correto (34)
	MsgAlert( STR0162 + " " + STR0161 )		// "Erro na leitura." ### "Passe o cheque novamente no leitor."
Else
	lRet := .T.
Endif

Return ( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³F565Cmc7TcºAutor  ³Mauro Sano          º Data ³  27/03/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao para a captura do código CMC7 pelo leitor via       º±±
±±º          ³ teclado.                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ ExpA1 = Array contendo os dados lidos do cheque:           º±±
±±º          ³ [1] - Banco | [2] - Agencia | [3] - Conta | [4] - Cheque   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA565                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function F565Cmc7Tc()
Local cCmc7 	:= Space(35)	// Recebera o conteudo lido do cheque
Local oCmc7						// Objeto do get do CMC7
Local oDlg						// Monta a tela de captura do codigo
Local aCmc7Tc	:= {}			// Armazena os dados do cheque; retorno da funcao

DEFINE MSDIALOG oDlg TITLE STR0163 FROM 200 , 001 TO 300 , 300 OF oMainWnd PIXEL	// "Leitura do código do cheque"
@ 010 , 018 Say STR0167 SIZE 050 , 050 OF oDlg PIXEL								// "Passe o cheque:"
@ 018 , 018 MSGET oCmc7 VAR cCmc7 PICTURE "@!" SIZE 120,009 OF oDlg PIXEL
DEFINE SBUTTON FROM 30 , 110 TYPE 2 ACTION (Iif (F565Confirma(cCmc7), oDlg:End(), oCmc7:SetFocus()) )  ENABLE OF oDlg
ACTIVATE MSDIALOG oDlg CENTERED
Aadd( aCmc7Tc, SubStr(cCmc7, 2, 3) )	//Banco
Aadd( aCmc7Tc, SubStr(cCmc7, 14, 6) )	//Cheque
Aadd( aCmc7Tc, SubStr(cCmc7, 5, 4) )	//Agencia
Aadd( aCmc7Tc, SubStr(cCmc7, 25, 8) )	//Conta


Return( aCmc7Tc )

Static Function MenuDef()

Local aRotina := {	{ STR0002 ,"AxPesqui"  , 0 , 1,,.F. },;	//"Pesquisar"
							{ STR0003 ,"A565Liquid", 0 , 3 },;   // "Liquidar"
							{ STR0076 ,"A565Liquid", 0 , 3 },;   // "Reliquidar"
							{ STR0052 ,"FA565Can"  , 0 , 6 },;  	//"Cancelar"
							{ STR0175 ,"FA040Legenda", 0 , 7, , .F.}}  	//"Legenda"
If Existblock("FA565ROT")
 	aRotina := Execblock("FA565ROT",.F.,.F.,aRotina)		//adiciona alguma rotina em aRotina
Endif

Return(aRotina)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinA290T   ³ Autor ³ Marcelo Celi Marques ³ Data ³ 26.03.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada semi-automatica utilizado pelo gestor financeiro   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA290                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA565T(aParam)
	cRotinaExec := "FINA565"
	ReCreateBrow("SE2",FinWindow)
	FinA565(aParam[1])
	ReCreateBrow("SE2",FinWindow)
	dbSelectArea("SE2")

	INCLUI := .F.
	ALTERA := .F.

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Fa565OK2()
Funcao que solicita cod. diario para Portugal

@param
@Return	lRetOK2
@author	Erica Casale
@since		16/06/08
@version	1.0
/*/
//-------------------------------------------------------------------

Static Function Fa565OK2()

Local lRetOK2 := .T.

// Se Portugal, pega cod. Diario
If UsaSeqCor()
	cCodDiario := CTBAVerDia()
Endif

Return lRetOK2

//-------------------------------------------------------------------
/*/{Protheus.doc} Fa565MotBx()
Funcao para criar automaticamente o motivo de baixa LIQ na tabela Mot baixas

@param		cMot
@param		cNomMot
@param		cConfMot
@Return
@author	Marcelo Celi Marques
@since		23/01/09
@version	1.0
/*/
//-------------------------------------------------------------------

Static Function Fa565MotBx(cMot,cNomMot, cConfMot)
	Local lMotBxEsp	:= .F.
	Local aMotbx 	:= ReadMotBx(@lMotBxEsp)
	Local nHdlMot	:= 0
	Local I			:= 0
	Local cFile 	:= "SIGAADV.MOT"
	Local nTamLn	:= 19

	If lMotBxEsp
		nTamLn	:= 20
		cConfMot	:= cConfMot + "N"
	EndIf
	If ExistBlock("FILEMOT")
		cFile := ExecBlock("FILEMOT",.F.,.F.,{cFile})
	Endif

	If Ascan(aMotbx, {|x| Substr(x,1,3) == Upper(cMot)}) < 1
		nHdlMot := FOPEN(cFile,FO_READWRITE)
		If nHdlMot <0
			HELP(" ",1,"SIGAADV.MOT")
			Final("SIGAADV.MOT")
		Endif

		nTamArq:=FSEEK(nHdlMot,0,2)	// VerIfica tamanho do arquivo
		FSEEK(nHdlMot,0,0)			// Volta para inicio do arquivo

		For I:= 0 to  nTamArq step nTamLn // Processo para ir para o final do arquivo
			xBuffer:=Space(nTamLn)
			FREAD(nHdlMot,@xBuffer,nTamLn)
	    Next

		fWrite(nHdlMot,cMot+cNomMot+cConfMot+chr(13)+chr(10))
		fClose(nHdlMot)
	EndIf
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} fa565Corr()
Calcula a correção monetária.

@param nValorBx, numeric, Valor base para cáclulo de cm
@param nCasDec, numeric, Quantidade de casas decimais.
@param nNovaTaxa, numeric, Taxa de baixa do título.
@Return	nCorrecao	Valor calculado da correção monetária

@author	Mauricio Pequim Jr
@since		11/01/12
@version	1.0
/*/
//-------------------------------------------------------------------

Function fa565Corr(nValorBx, nCasDec, nNovaTaxa, nTaxaMov)
	Local nCorrecao := 0
	Local nValAtual := 0
	Local nValEmiss := 0
	Local dDtVaria  := SE2->E2_EMISSAO
	Local nTaxaCorr := SE2->E2_TXMOEDA
	Local lCalcCm   := SuperGetMV("MV_CALCCM", .F., "N") == "S"
	Local lGerCm    := .F.

	Default nValorBx  := 0
	Default nCasDec   := 2
	Default nNovaTaxa := 0
	Default nTaxaMov  := 0

	If (SE2->E2_MOEDA > 1 .Or. cPaisLoc != "BRA") .and. nNovaTaxa == 0
		nNovaTaxa := nTaxaMov
	Endif

	lGerCm    := (SE2->E2_TXMOEDA == 0 .Or. (nNovaTaxa > 0 .And. SE2->E2_TXMOEDA != nNovaTaxa))

	If lCalcCm .And. lGerCm .And. SE2->E2_MOEDA > 1
		If Empty(SE2->E2_DTVARIA) .And. Round(nValorBx,2) == Round(SE2->E2_VALOR,2)
			nValEmiss := SE2->E2_VLCRUZ
		Else
			If !Empty(SE2->E2_DTVARIA)
				dDtVaria  := SE2->E2_DTVARIA
				nTaxaCorr := SE2->E2_TXMDCOR
			EndIf

			nValEmiss := xMoeda(nValorBx, SE2->E2_MOEDA, 1, dDtVaria, nCasDec, nTaxaCorr)
		EndIf

		nValAtual := xMoeda(nValorBx, SE2->E2_MOEDA, 1, dDataBase, nCasDec, nNovaTaxa)
		nCorrecao := Round(nValAtual - nValEmiss, 2)
	EndIf
Return nCorrecao

//-------------------------------------------------------------------
/*/{Protheus.doc} FA565Fil()
Permite determinar as filias para selecao dos titulos
para liquidacao.

@param
@Return	aRet   Array contendo as filiais para Gestão
@author
@since		22/07/2013
@version	1.0
/*/
//-------------------------------------------------------------------

Function Fa565Fil()

Local aRet	:= {}

If MsgYesNo(STR0178 + CRLF + CRLF + STR0179 + CRLF + CRLF + STR0180,STR0051)
	aRet := AdmGetFil(.F.,.T.,"SE2",.F.,.T.,.T.,.T.)
Else
	aRet := {}
EndIf

Return(Aclone(aRet))

//-------------------------------------------------------------------
/*/{Protheus.doc} Fa565Juri(nRecno)
Rotina para verifica se tem integracao com o SIGAPFS e realiza
realiza as validacoes da integracao.

@param nRecno    Recno do título da SE2 (Contas a pagar)

@Return lRet   .T. Se o título é valido para ser manipulado.

@author bruno.ritter
@since 09/10/2017
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function Fa565Juri(nRecno)

Local lRet := .T.

lRet := JVldBxPag(nRecno, .F., .F.)

Return lRet


//------------------------------
/*/{Protheus.doc} F565Perg
Verifica se existe a pergunta FIN565 no utilizando FWSX1Util
@author Rafael Sarracini
@since 10/07/2020
@version P12
@param  nPos, Numeric, Posição da Pergunta a ser verificada.
@Return lRet, Logical, Se existe Pergunta.
/*/
//------------------------------
Static Function F565Perg(nPos as Numeric) as Logical

	Local oPerg 	As Object
	Local _aPerg 	As Array
	Local lRet 		As Logical

	//Inicializa Objeto
	oPerg := FWSX1Util():New()
	oPerg:AddGroup("FIN565")
	oPerg:SearchGroup()
	_aPerg :=  oPerg:GetGroup("FIN565")[2]
	//se tamanho do array for maior que o solicitado
	lRet := len(_aPerg) >= nPos

	//Limpa Variaveis
	FwFreeArray( _aPerg )
	oPerg:Destroy()
	FwFreeObj(oPerg)
	oPerg := Nil
Return lRet

/*/{Protheus.doc} F565COTMOE
Valida se existe cotação de moeda para a liquidação.
@author Sivaldo Oliveira
@since 22/08/2020
@version 12
@param nMoedaLiq, numeric, moeda da liquidação
@param nTaxaLiq, numeric, taxa da liquidação
@return lRet, logical, retorna verdadeiro ou falso que
indica se há cotação para a liquidação
/*/
Static Function F565COTMOE(nMoedaLiq As Numeric, nTaxaLiq As Numeric) As Logical
	Local lRet As Logical

	//Inicializa variável
	lRet := .T.

	Default nMoedaLiq := 1
	Default nTaxaLiq := 0

	If nMoedaLiq > 1 .And. nTaxaLiq <= 0
		If !(lRet := RecMoeda(dDataBase, nMoedaLiq) > 0)
			Help(Nil, Nil, "COTMOEDALIQ", Nil, STR0203, 1, 0,,,,,, {STR0204 + cValTochar(nMoedaLiq)})
		EndIf
	EndIf
Return lRet
