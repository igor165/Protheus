#Include "PROTHEUS.CH"
#Include "FINA581.CH"

//Compilar SQA

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ FINA581  ºAutor  ³ Danilo Dias        º Data ³ 01/05/2011  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Liberação das despesas, adiantamentos e prestação de       º±±
±±º          ³ contas.                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAFIN                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FINA581

Local cTipoLib := SuperGetMV( "MV_FINCTAL", .F., "1" )

Private aCores  := {}
Private aRotina := Menudef( cTipoLib )
Private cTitulo := STR0016	//"Liberação de Movimentos do Caixinha"

dbSelectarea("SEU")
SEU->(dbSetOrder(1))


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Mostra/Altera lancamentos contabeis mv_par01 Sim/Nao         ³
//³ Aglutina lancamentos contabeis      mv_par02 Sim/Nao         ³
//³ Lancamento contabil On-Line         mv_par03 Sim/Nao         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega funcao Pergunte	                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetKey (VK_F12,{|a,b| AcessaPerg("FIA550",.T.)})

Pergunte("FIA550",.F.)

SEU->(DbSeek(xFilial()))
mBrowse( 6, 1, 22, 75, "SEU",,,,,, Fa581Leg() )


Set Key VK_F12 To

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ MenuDef	ºAutor  ³ Danilo Dias        º Data ³ 01/05/2011  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ MenuDef                                                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ ExpC1 = Tipo de liberação ( 1=Simples ou 2=Fundo Fixo )    ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MenuDef( cTipoLib )

Default cTipoLib := "1"

//Verifica se parâmetro de Liberação por alçadas está ativo. ( MV_FINCTAL = 2 )
If cTipoLib = "1"

    //Menu para liberação simples
	aRotina := { { STR0001, "AxPesqui" , 0, 1 },;	//"Pesquisar"
                 { STR0002, "Fa581Man" , 0, 3, , .F. },;	//"Liberação Manual"
                 { STR0003, "Fa581Aut" , 0, 3, , .F. },;	//"Lib. Automática"
            	 { STR0004, "Fa581Canc", 0, 3, , .F. },;	//"Anular"
                 { STR0005, "Fa581Leg" , 0, 2, , .F. } }	//"Legenda"

Else

	//Menu para liberação por alçada de fundo fixo
	aRotina := { { STR0001, "AxPesqui"   , 0, 1 },;			//"Pesquisar"
                 { STR0006, "Fa581Saldo" , 0, 3 },;			//"Consulta Saldos"
                 { STR0007, "Fa581Liber" , 0, 3 },;			//"Libera Mov."
           	     { STR0004, "Fa581Anula" , 0, 3 },;			//"Anula"
                 { STR0008, "Fa581Super" , 0, 3 },;			//"Superior"
                 { STR0009, "Fa581Transf", 0, 3 },;			//"Transfere Sup."
                 { STR0010, "Fa581Aus"   , 0, 3 },;			//"Ausência Temp."
                 { STR0005, "Fa581Leg"   , 0, 2, , .F. } }	//"Legenda"

EndIf

Return aRotina

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Leg	ºAutor  ³ Danilo Dias        º Data ³ 01/05/2011  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Cores da Legenda                                           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581Leg( cAlias, nReg )

Local aLegenda := {}
Local uRetorno := .T.

//Cores para a legenda
aLegenda := { {"BR_AZUL"	, STR0011	},;	 //"Bloqueado (Esperando outros níveis)"
              {"BR_VERMELHO", STR0012	},;	 //"Esperando aprovação do usuário"
              {"BR_VERDE"   , STR0013	},;	 //"Movimento liberado pelo usuário"
              {"BR_PRETO"   , STR0014	},;  //"Movimento bloqueado pelo usuário"
              {"BR_CINZA"   , STR0015	} }  //"Movimento liberado por outro usuário"

//Verifica se não foi chamada do menu
If nReg == nil
	uRetorno := {}
	//Legenda de status da movimentação do caixinha
	aAdd( uRetorno, { "EU_STATUS == '01'", "BR_VERMELHO" } )	//Esperando aprovação do usuário
	aAdd( uRetorno, { "EU_STATUS == '02'", "BR_AZUL"	   } )	//Bloqueado (esperando outros níveis)
	aAdd( uRetorno, { "EU_STATUS == '03' .Or. Empty(EU_STATUS)", "BR_VERDE" } )	//Movimento liberado pelo usuário
	aAdd( uRetorno, { "EU_STATUS == '04'", "BR_PRETO"	   } )	//Movimento bloqueado pelo usuário
	aAdd( uRetorno, { "EU_STATUS == '05'", "BR_CINZA"	   } )	//Movimento liberado por outro usuário
Else
	BrwLegenda( cTitulo, STR0005, aLegenda )  //"Legenda"
EndIf

Return uRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Man   ºAutor  ³ Danilo Dias      º Data ³ 01/05/2011  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Liberação manual do movimento sem validação de alçadas.    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581Man( cAlias, nReg )

Local aArea := GetArea()
local lRet := Fa581CxAbe(SEU->EU_CAIXA)

If lRet
	//Verifica se é uma despesa, adiantamento ou prestação de contas.
	If SEU->EU_TIPO $ ("00|01|02|03")

		//Movimento aguardando liberação, libera.
		If SEU->EU_STATUS == "01"
			RecLock( "SEU", .F. )
				SEU->EU_STATUS  := "03"
				SEU->EU_DATALIB := dDataBase
				SEU->EU_USUALIB := cUserName
			SEU->(MsUnlock())

		//Movimento bloqueado aguardando outros níveis
		ElseIf SEU->EU_STATUS == "02"
			Help( " ", 1, "Fa581Man", , STR0019, 1, 0 )	//"Movimento está bloqueado aguardando outros níveis."

		//Movimento já liberado
		ElseIf SEU->EU_STATUS == "03" .Or. SEU->EU_STATUS == "05"
			Help( " ", 1, "Fa581Man", , STR0020, 1, 0 )	//"Movimento já foi liberado."

		//Movimento bloqueado pelo usuário
		ElseIf SEU->EU_STATUS == "04"
			Help( " ", 1, "Fa581Man", , STR0021, 1, 0 )		//"Movimento foi bloqueado por usuário."
		EndIf
	Else
		Help( " ", 1, "Fa581Man", , STR0022, 1, 0 )	//"Movimento não é uma despesa, adiantamento ou prestação de contas."
	EndIf
EndIf

RestArea(aArea)
FWFreeArray(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Aut   ºAutor  ³ Danilo Dias      º Data ³ 01/05/2011  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Liberação automática do movimento sem validação de alçadas º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581Aut()

Local oMark
Local oDlg
Local oPanel
Local oQtde
Local aArea     := GetArea()
Local cMarca    := GetMark()
Local lInverte  := .T.
Local aSize     := {}
Local aCampos   := {}
Local nQtde     := 0
Local nOpca     := 0
Local bCondicao := { || SEU->EU_STATUS == "01" .And. SEU->EU_TIPO $ ("00") }
Local cCondicao := 'SEU->EU_STATUS == "01" .And. SEU->EU_TIPO $ ("00")'

aSize := MsAdvSize()

dbSelectArea("SX3")
SX3->(dbSetOrder(1))
SX3->(dbSeek("SEU"))

//Exibe na markBrowse os campos que estão com Browse igual a Sim no dicionário ou
//são os campos definidos como padrão para proteção.
While SX3->X3_ARQUIVO == "SEU"
	If ( SX3->X3_BROWSE == "S" .Or. SX3->X3_CAMPO $ ("EU_CAIXA|EU_TIPO|EU_HISTOR|EU_VALOR|EU_EMISSAO") ) .And. !SX3->X3_CONTEXT == "V"
		aAdd( aCampos, {SX3->X3_CAMPO, , X3_TITULO, X3_PICTURE} )
	EndIf
	SX3->(dbSkip())
EndDo

//Filtra Movimentos pendentes apenas
SEU->(dbSetFilter( bCondicao, cCondicao ) )
SEU->(dbGoTop())

//Cria MsDialog com marcação
oDlg := MSDialog():New( aSize[7], 0, aSize[6], aSize[5], STR0023, , , , , , , , oMainWnd, .T., , , , )	//"Aprovação de Movimentos"
oDlg:lMaximized := .T.

	oPanel := TPanel():New( 0, 0, '', oDlg, , .T., .T., , , 40, 40, .T., .T. )
	oPanel:Align := CONTROL_ALIGN_TOP

	oSay  := TSay():New( 10, 10, { || STR0024 }, oPanel,,,,,,.T.,,, 120, 10 )	//"Quantidade de movimentos selecionados:"
	oQtde := TSay():New( 10, 135, { || nQtde }, oPanel,,,,,,.T.,,, 60, 10 )

	oMark := MsSelect():New( "SEU", "EU_OK",, /*aCampos*/, .F., @cMarca, { 35, oDlg:nLeft, oDlg:nBottom, oDlg:nRight } )
	oMark:oBrowse:bAllMark := { || Fa581Marca( cMarca, oQtde, @nQtde, lInverte, .T., oMark, "SEU", "EU_OK" ) }
	oMark:bMark := { || Fa581Display( cMarca, lInverte, oQtde, @nQtde ) }
	oMark:bAval	:= { || Fa581Marca( cMarca, oQtde, @nQtde, lInverte, .F., oMark, "SEU", "EU_OK" ) }
	oMark:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT

oDlg:Activate( ,,,.T.,,,{ || EnchoiceBar( oDlg, { || ( nOpca := 1, oDlg:End() ) }, {|| nOpca := 0, ODlg:End() } ) } )

//Se usuário clicou em Ok
If nOpca == 1

	SEU->(dbGoTop())

	While SEU->(!Eof())
		If SEU->EU_OK == cMarca .And. SEU->EU_STATUS == "01"
			If Fa581CxAbe(SEU->EU_CAIXA)
				RecLock( "SEU", .F. )
					SEU->EU_STATUS  := "03"
					SEU->EU_DATALIB := dDataBase
					SEU->EU_USUALIB := cUserName
				MsUnlock()
			EndIf
		EndIf
		SEU->(dbSkip())
	EndDo

EndIf

SEU->(dbClearFilter())
RestArea(aArea)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Marca ºAutor ³Danilo Dias        º Data ³  04/15/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Atualiza marcação na tela de seleção.                      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ cMarca = Marca utlizada na MsSelect.                       ³±±
±±³          ³ oQtde  = Objeto Get que recebe a quantidade selecionada.   ³±±
±±³          ³ nQtde  = Aramazena a quantidade selecionada.(Referência)   ³±±
±±³          ³ lInverte = Indica se deve usar inversão da seleção.        ³±±
±±³          ³ lTodos = Habilita seleção de todos os itens da MsSelect.   ³±±
±±³          ³ oMark = Objeto MsSelect.                                   ³±±
±±³          ³ cAlias = Alias da tabela que está sendo usada na MsSelect. ³±±
±±³          ³ cCpoMarca = Campo utilizado para a marcação.               ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Fa581Marca( cMarca, oQtde, nQtde, lInverte, lTodos, oMark,;
                            cAlias, cCpoMarca )

Local aArea := GetArea()

Default lInverte := .T.
Default lTodos   := .F.

If lTodos
	(cAlias)->(dbGoTop())
Endif

While !lTodos .Or. (cAlias)->(!Eof())
	RecLock(cAlias, .F.)

	If lInverte
		If &(cCpoMarca) == cMarca
			&(cCpoMarca) := ""
			nQtde--
			nQtde := IIf ( nQtde <= 0, 0, nQtde )
	 	Else
	 		&(cCpoMarca) := cMarca
			nQtde++
		EndIf
	Else
		If &(cCpoMarca) != cMarca
			&(cCpoMarca) := cMarca
			nQtde++
		EndIf
	EndIf

	MsUnLock()
	oQtde:Refresh()

	If !lTodos
		Exit
	Endif

	(cAlias)->(dbSkip())
EndDo

oMark:oBrowse:Refresh()

RestArea(aArea)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função	 ³ Fa581Display ³ Autor ³ Danilo Dias      ³ Data ³ 18/04/2011  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrição ³ Atualiza tela de seleção da liberação automática.            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA581														³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ cMarca = Marca utlizada na MsSelect.                         ³±±
±±³          ³ lInverte = Indica se deve usar inversão da seleção.          ³±±
±±³          ³ oQtde  = Objeto Get que recebe a quantidade selecionada.     ³±±
±±³          ³ nQtde  = Aramazena a quantidade selecionada.(Referência)     ³±±
±±³          ³ cCampo = Campo utilizado para a marcação.                    ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Fa581Display( cMarca, lInverte, oQtde, nQtde, cCampo )

If IsMark( cCampo, cMarca, lInverte )
	 nQtde++
Else
	 nQtde--
	 nQtde:= IIf( nQtde < 0, 0, nQtde )
End

oQtde:Refresh()

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Canc  ºAutor  ³ Danilo Dias      º Data ³  04/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Cancelamento da liberação.                                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581Canc()
	Local aArea := GetArea()
	local lRet  := Fa581CxAbe(SEU->EU_CAIXA)

	IF lRet
		//Verifica se é uma despesa, adiantamento ou prestação de contas.
		If SEU->EU_TIPO $ ("00|01|02|03") 

			//Movimento liberado, bloqueia.
			If SEU->EU_STATUS == "03" 
				RecLock( "SEU", .F. )
				SEU->EU_STATUS  := "01"
				SEU->EU_DATALIB := CTOD("  /  /  ")
				SEU->EU_USUALIB := ""
				SEU->(MsUnlock())
			EndIf	
		Else
			Help( " ", 1, "Fa581Canc", , STR0022, 1, 0 )	//"Movimento não é uma despesa, adiantamento ou prestação de contas."
		EndIf
	EndIf
	
	RestArea(aArea)
	FWFreeArray(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Saldo ºAutor  ³ Danilo Dias      º Data ³  04/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Consulta de Saldos do usuário aprovador.                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA580, FINA581                                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581Saldo()
Local aArea    := GetArea()
Local oDlg
Local oCalend
Local oSaldo
Local oMoeda
Local oDataSld
Local nSaldo   := 0
Local cMoeda   := "1"
Local dDataRef := dDataBase
Local cCodigo  := ""
Local cNome    := ""
Local nValMin  := 0
Local nValMax  := 0
Local nLimite  := 0
Local nMoeda   := 0	

If FunName() == "FINA580"
	nMoeda := SE2->E2_MOEDA
Else
	nMoeda := SEU->EU_MOEDA
EndIf 

If nMoeda > 0
	cMoeda := StrZero(nMoeda,TamSx3("FRP_MOEDA")[1])
EndIf

dbSelectArea("FRP")
FRP->(dbSetOrder(2))
If FRP->(dbSeek( xFilial() + __cUserId  + cMoeda ))

	cCodigo := FRP->FRP_COD
	cNome   := UsrFullName(__cUserId)
	nValMax := FRP->FRP_LIMMAX
	nValMin := FRP->FRP_LIMMIN
	nLimite := FRP->FRP_LIMITE
	cMoeda  := FRP->FRP_MOEDA
	nSaldo  := Fa581ValSld( cCodigo, cMoeda, dDataRef )

	oDlg := MsDialog():New( 0, 0, 320, 575, STR0025, , , , , , , , oMainWnd, .T., , , ,  )	//"Consulta de Saldos"

		oCalend         := MsCalend():New( 82, 10, oDlg )
		oCalend:bChange := { || Fa581ChgDt( @oMoeda, @oSaldo, @nSaldo, @oDataSld, @dDataRef, cCodigo, cMoeda, oCalend:dDiaAtu ) }
		oCalend:dDiaAtu := dDataBase

		oSay     := TSay():New( 010, 010, { || STR0026 }, oDlg,,,,,,.T.,,, 60, 10 )	//"Código"
		oCodigo  := TGet():New( 020, 010, { |u| If( PCount() > 0, cCodigo := u, cCodigo ) }, oDlg, 060, 010,,,,,,,,.T.,,,{|| .F.},,,,,,,"cCodigo" )
		oSay     := TSay():New( 010, 080, { || STR0027 }, oDlg,,,,,,.T.,,, 50, 10 )	//"Nome"
		oNome    := TGet():New( 020, 080, { |u| If( PCount() > 0, cNome := u, cNome ) }, oDlg, 200, 010,,,,,,,,.T.,,,{|| .F.},,,,,,,"cNome" )
		oSay     := TSay():New( 040, 010, { || STR0028 }, oDlg,,,,,,.T.,,, 82, 10 )	//"Valor Mínimo"
		oValMin  := TGet():New( 050, 010, { |u| If( PCount() > 0, nValMin := u, nValMin) }, oDlg, 082, 010, SX3->(X3Picture("FRP_LIMMIN")),,,,,,,.T.,,,{|| .F.},,,,,,,"nValMin" )
		oSay     := TSay():New( 040, 104, { || STR0029 }, oDlg,,,,,,.T.,,, 82, 10 )	//"Valor Máximo"
		oValMax  := TGet():New( 050, 104, { |u| If( PCount() > 0, nValMax := u, nValMax ) }, oDlg, 082, 010, SX3->(X3Picture("FRP_LIMMAX")),,,,,,,.T.,,,{|| .F.},,,,,,,"nValMax" )
		oSay     := TSay():New( 040, 198, { || STR0030 }, oDlg,,,,,,.T.,,, 82, 10 )	//"Limite"
		oLimite  := TGet():New( 050, 198, { |u| If( PCount() > 0, nLimite := u, nLimite ) }, oDlg, 082, 010, SX3->(X3Picture("FRP_LIMITE")),,,,,,,.T.,,,{|| .F.},,,,,,,"nLimite" )

		oSay     := TSay():New( 090, 155, { || STR0031 }, oDlg,,,,,,.T.,,, 51, 10 )	//"Saldo na data"
		oSaldo   := TGet():New( 089, 205, { |u| If( PCount() > 0, nSaldo := u, nSaldo ) }, oDlg, 072, 010, SX3->(X3Picture("FRT_SALDO")),,,,,,,.T.,,,{|| .F.},,,,,,,"nSaldo" )
		oSay     := TSay():New( 108, 155, { || STR0032 }, oDlg,,,,,,.T.,,, 51, 10 )	//"Moeda"
		oMoeda   := TGet():New( 107, 205, { |u| If( PCount() > 0, cMoeda := u, cMoeda ) }, oDlg, 072, 010,,,,,,,,.T.,,,{|| .F.},,,,,,,"cMoeda" )
		oSay     := TSay():New( 126, 155, { || STR0033 }, oDlg,,,,,,.T.,,, 51, 10 )	//"Data de Ref."
		oDataSld := TGet():New( 125, 205, { |u| If( PCount() > 0, dDataRef := u, dDataRef ) }, oDlg, 072, 010,,,,,,,,.T.,,,{|| .F.},,,,,,,"dDataRef" )

		//Botão para fechar a janela
		oButton:=tButton():New(144,242,STR0064,oDlg,{||oDlg:End()},035,,,,,.T.) //"Fechar"

	oDlg:Activate( ,,,.T.,,, )

Else
	Help( " ", 1, "Fa581Saldo", , STR0034, 1, 0 )	//"Usuário não é Gestor Financeiro."
EndIf

RestArea(aArea)
FWFreeArray(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581ValSld ºAutor  ³ Danilo Dias     º Data ³  04/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida o saldo do usuário aprovador.                       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA580, FINA581                                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ cCodAprov = Código do gestor financeiro.                   ³±±
±±³          ³ cMoeda = Moeda utlizada na aprovação.                      ³±±
±±³          ³ dDtRef = Data de referência da aprovação.                  ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581ValSld( cCodAprov, cMoeda, dDtRef )

Local aMovAprov := {}
Local nSldAprov := 0

aMovAprov := fxAlcSld( cMoeda, dDtRef, cCodAprov, .F. ) 	//Monta array com os movimentos do Gestor
nSldAprov := fxAlcSldFim( aMovAprov )	//Busca saldo final do usuário aprovador

Return nSldAprov

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581ChgDt ºAutor  ³ Danilo Dias      º Data ³  04/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Atualiza o saldo de acordo com a data selecionada no       º±±
±±º          ³ calendário.                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581ChgDt( oMoeda, oSaldo, nSaldo, oDataSld, dDataRef,;
                     cCodigo, cMoeda, dDtRef )

nSaldo   := Fa581ValSld( cCodigo, cMoeda, dDtRef )
dDataRef := dDtRef

oSaldo:Refresh()
oDataSld:Refresh()

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Liber  ºAutor  ³ Danilo Dias     º Data ³  04/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Liberação de movimentos pelo aprovador usando regras de    º±±
±±º          ³ alçada por fundo fixo.                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581Liber(cAlias, nReg)
Local aArea     := GetArea()
Local cUsrAprov := __cUserId
Local cCodAprov := SEU->EU_CODAPRO
Local cMoeda    := strzero(SEU->EU_MOEDA,TamSx3("FRP_MOEDA")[1])//cValToChar(SEU->EU_MOEDA)//alterado por Fernando Radu Muscalu em 01/09/2011
Local dDtRef    := dDataBase
Local nTotal    := SEU->EU_VALOR
Local nNumInt   := SEU->EU_NUM
Local cEmissao  := SEU->EU_EMISSAO
Local nSldAprov := 0
Local lRet      := .T.
Local nOpc      := 0
Local nRecSEU	:= 0 

SET->(dbSetOrder(1))
SET->(dbSeek(xFilial("SET")+SEU->EU_CAIXA))

If !Empty(SEU->EU_STATUS)
	If Alltrim(SEU->EU_STATUS) $ '03|05'
		If Empty(cCodAprov)
			Help( " ", 1, "Fa581Liber", , STR0035, 1, 0 )	//"Movimento a liberar não possui aprovador."
			Return()
		Endif
	Endif
	If dDataBase < SEU->EU_EMISSAO
		Help( " ", 1, "Fa581Liber",, STR0073,1,0 ) //"Data da liberação não pode ser menor que a data da movimentação do caixinha."
		Return()
	Endif
	If SET->ET_SITUAC == "1"
		Help( " ", 1, "Fa581Liber",, STR0074,1,0 ) //"Caixa fechado. A liberação não poderá ser realizada."
		Return()
	Endif
Endif

//Busca dados do Gestor Aprovador do Movimento
dbSelectArea("FRP")
FRP->(dbSetOrder(2))

If FRP->(dbSeek( xFilial("FRP") + cUsrAprov + cMoeda ))

	//Verifica se é uma despesa, adiantamento ou prestação de contas.
	If SEU->EU_TIPO $ ("00|01|02|03")

		//Movimento aguardando liberação
		If SEU->EU_STATUS == "01"

			//Verifica se usuário é o aprovador
			If FRP->FRP_COD == cCodAprov
				//Verifica saldo do aprovador
				lRet := Fa550ValSld( cUsrAprov, cCodAprov, cMoeda, dDtRef, nTotal, @nSldAprov )
			Else
				Help( " ", 1, "Fa581Liber", , STR0036, 1, 0 )	//"Usuário não é o aprovador para esse movimento."
				lRet := .F.
			EndIf

			If lRet
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Monta tela de confirmação da liberação das movimentações ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nOpc := Fa581CfMov( STR0016, .T., "SEU", nNumInt, cEmissao, dDtRef, nTotal, "EU_VALOR" )

				If nOpc == 1 //Movimento aprovado
					Begin Transaction

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza o saldo do aprovador ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					lRet := FXALCGrava( cUsrAprov, cCodAprov, cMoeda, "2", dDtRef, nTotal )

					//Realiza os lanc CTB/PCO e abate o saldo do caixinha
					nRecSEU	:= SEU->(Recno())
					FA560Lanc()
					SEU->(dbGoto(nRecSEU))
					If lRet
						//Se tem saldo libera Movimento
						RecLock( "SEU", .F. )
						SEU->EU_STATUS  := "03"
						SEU->EU_DATALIB := dDataBase
						SEU->EU_USUALIB := cUserName
						MsUnlock()
					EndIf

					//Inserir aqui a chamada do débito do caixinha (atualização da SET)

					End Transaction
				ElseIf nOpc == 2	//Movimento bloqueado
					RecLock( "SEU", .F. )
					SEU->EU_STATUS  := "04"
					MsUnlock()
				EndIf
			EndIf

			//Movimento bloqueado aguardando outros níveis
		ElseIf SEU->EU_STATUS == "02"
			Help( " ", 1, "Fa581Liber", , STR0019, 1, 0 )	//"Movimento está bloqueado aguardando outros níveis."

			//Movimento já liberado
		ElseIf SEU->EU_STATUS == "03" .Or. SEU->EU_STATUS == "05"
			Help( " ", 1, "Fa581Liber", , STR0020, 1, 0 )	//"Movimento já foi liberado."

			//Movimento bloqueado pelo usuário
		ElseIf SEU->EU_STATUS == "04"
			Help( " ", 1, "Fa581Liber", , STR0021, 1, 0 )	//"Movimento foi bloqueado por usuário."
		EndIf
	Else
		Help( " ", 1, "Fa581Liber", , STR0022, 1, 0 )	//"Movimento não é uma despesa, adiantamento ou prestação de contas."
	EndIf
Else
	Help( " ", 1, "Fa581Liber", , STR0038, 1, 0 )	//"Usuário não é um Gestor Financeiro ou não tem permissão para a moeda deste movimento."
EndIf

RestArea( aArea )

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Anula   ºAutor  ³ Danilo Dias    º Data ³  04/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Estornar a liberação do movimento corrente.                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581Anula( cAlias, nReg )
Local aArea     := GetArea()
Local cUsrAprov := __cUserId
Local cCodAprov := SEU->EU_CODAPRO
Local dDtRef    := dDataBase
Local dEmissao  := SEU->EU_EMISSAO
Local nTotal    := SEU->EU_VALOR
Local nNumInt   := SEU->EU_NUM
Local cMoeda    := strzero(SEU->EU_MOEDA,TamSx3("FRP_MOEDA")[1])//cValToChar(SEU->EU_MOEDA)//alterado por Fernando Radu Muscalu em 01/09/2011
Local nOpc      := 0
Local lRet      := Fa581CxAbe(SEU->EU_CAIXA)

IF lRet
	//Verifica se é uma despesa, adiantamento ou prestação de contas.
	If SEU->EU_TIPO $ ("00|01|02|03")

		//Movimento liberado, bloqueia.
		If SEU->EU_STATUS == "03" .Or. SEU->EU_STATUS == "05"
			
			If SEU->EU_TIPO == "01" .and. SEU->EU_VALOR != SEU->EU_SLDADIA
				//Se for adiantamento já com prestacao de contas, não permite anular
				Help( " ", 1, "Fa581CancA", , STR0075, 1, 0 ) //"Cancelamento não permitido. Adiantamento já possui prestação de contas." 
			Else

				//Busca dados do Gestor Aprovador do Movimento
				dbSelectArea("FRP")
				FRP->(dbSetOrder(2))

				If FRP->(dbSeek( xFilial() + cUsrAprov + cMoeda ))

					//Verifica se usuário é o aprovador
					If FRP->FRP_COD == cCodAprov
						nOpc := Fa581CfMov( STR0039, .F., "SEU", nNumInt, dEmissao, dDtRef, nTotal, "EU_VALOR" )	//"Cancelamento da Liberação de Movimento do Caixinha"

						If nOpc == 1	//Confirma estorno
							Begin Transaction

							//Atualiza o saldo do aprovador
							lRet := FXALCGrava( cUsrAprov, cCodAprov, cMoeda, "3", dDtRef, nTotal )

							If lRet
								//Atualiza status do Movimento
								RecLock( "SEU", .F. )
									SEU->EU_STATUS  := "01"
									SEU->EU_DATALIB := CTOD("  /  /  ")
									SEU->EU_USUALIB := ""
								MsUnlock()
							EndIf
							End Transaction
						EndIf
					Else
						Help( " ", 1, "Fa581Anula", , STR0036, 1, 0 )	//"Usuário não é o aprovador para esse movimento."
					EndIf
				Else
					Help( " ", 1, "Fa581Anula", , STR0038, 1, 0 )	//"Usuário não é um Gestor Financeiro ou não tem permissão para a moeda deste Movimento."
				EndIf
			EndIf
		Else
			Help( " ", 1, "Fa581Anula", , STR0040, 1, 0 )	//"Movimento não foi liberado."
		EndIf
	Else
		Help( " ", 1, "Fa581Anula", , STR0022, 1, 0 )	//"Movimento não é uma despesa, adiantamento ou prestação de contas."
	EndIf
EndIf

RestArea(aArea)
FWFreeArray(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Super ºAutor  ³ Danilo Dias      º Data ³  04/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Libera movimentos pelo aprovador superior.                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581Super( cAlias, nReg )
Local aArea     := GetArea()
Local cUsrAprov := __cUserId
Local cCodAprov := SEU->EU_CODAPRO
Local cCodSup   := Fa006User( cUsrAprov, .F., 2, SEU->EU_MOEDA)	//Retorna o código de gestor do usuário logado
Local cMoeda    := Strzero(SEU->EU_MOEDA,TamSX3("FRP_MOEDA")[1])//cValToChar(SEU->EU_MOEDA) //alterado por Fernando Radu Muscalu em 01/09/2011
Local dDtRef    := dDataBase
Local dEmissao  := SEU->EU_EMISSAO
Local nTotal    := SEU->EU_VALOR
Local nNumInt   := SEU->EU_NUM
Local nSldAprov := 0
Local lRet      := Fa581CxAbe(SEU->EU_CAIXA)

If lRet
	//Verifica se usuário é superior do aprovador do Movimento
	dbSelectArea("FRS")
	FRS->(dbSetOrder(3))

	If FRS->(dbSeek( xFilial() + "2" + cCodAprov + cCodSup ))

		cCodAprov := cCodSup

		//Verifica se é uma despesa, adiantamento ou prestação de contas.
		If SEU->EU_TIPO $ ("00|01|02|03")

			//Movimento aguardando liberação
			If SEU->EU_STATUS == "01"

				dbSelectArea("FRP")
				FRP->(dbSetOrder(1))
				FRP->(dbGoTop())

				If FRP->(dbSeek (xFilial() + FRS->FRS_CODSUP + cMoeda))
					nOpc := Fa581CfMov( STR0041, , "SEU", nNumInt, dEmissao, dDtRef, nTotal, "EU_VALOR" )	//"Liberação de Movimento pelo Gestor Superior"
				Else
					Help( " ", 1, "Fa581Transf", , STR0042, 1, 0 )	//"Superior não é um Gestor Financeiro."
					nOpc := 0
				EndIf

				If nOpc == 1
					//Verifica saldo do gestor
					lRet := Fa550ValSld( cUsrAprov, cCodAprov, cMoeda, dDtRef, nTotal, @nSldAprov )

					If lRet
						Begin Transaction

						lRet := FXALCGrava( cUsrAprov, cCodAprov, cMoeda, "2", dDtRef, nTotal )

						//Realiza os lanc CTB/PCO e abate o saldo do caixinha
						SET->(dbSetOrder(1))
						SET->(dbSeek(xFilial("SET")+SEU->EU_CAIXA))
						FA560Lanc()

						If lRet
							//Se tem saldo libera Movimento
							RecLock( "SEU", .F. )
							SEU->EU_STATUS  := "05"
							SEU->EU_CODAPRO := cCodSup
							SEU->EU_DATALIB := dDataBase
							SEU->EU_USUALIB := cUserName
							MsUnlock()
						EndIf

						End Transaction
					EndIf
				ElseIf nOpc == 2
					RecLock( "SEU", .F. )
					SEU->EU_STATUS  := "04"
					SEU->EU_CODAPRO := cCodSup
					MsUnlock()
				EndIf

			//Movimento bloqueado aguardando outros níveis
			ElseIf SEU->EU_STATUS == "02"
				Help( " ", 1, "Fa581Man", , STR0019, 1, 0 )	//"Movimento está bloqueado aguardando outros níveis."

			//Movimento já liberado
			ElseIf SEU->EU_STATUS == "03" .Or. SEU->EU_STATUS == "05"
				Help( " ", 1, "Fa581Man", , STR0020, 1, 0 )	//"Movimento já foi liberado."

			//Movimento bloqueado pelo usuário
			ElseIf SEU->EU_STATUS == "04"
				Help( " ", 1, "Fa581Man", , STR0021, 1, 0 )	//"Movimento foi bloqueado por usuário."
			EndIf
		Else
			Help( " ", 1, "Fa581Man", , STR0022, 1, 0 )	//"Movimento não é uma despesa, adiantamento ou prestação de contas."
		EndIf
	Else
		Help( " ", 1, "Fa581Man", , STR0043, 1, 0 )	//"Apenas um superior do aprovador pode liberar um Movimento através dessa opção."
	EndIf
EndIf

RestArea(aArea)
FWFreeArray(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Transf ºAutor  ³ Danilo Dias     º Data ³  04/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Transfere a responsabilidade da liberação para o superior. º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581Transf(cAlias, nReg)
Local aArea     := GetArea()
Local cUsrAprov := __cUserId
Local cCodAprov := SEU->EU_CODAPRO
Local cMOeda    := Strzero(SEU->EU_MOEDA,TamSX3("FRP_MOEDA")[1])//cValToChar(SEU->EU_MOEDA)//alterado por Fernando Radu Muscalu em 01/09/2011
Local dDtRef    := dDataBase
Local dEmissao  := SEU->EU_EMISSAO
Local nTotal    := SEU->EU_VALOR
Local nNumInt   := SEU->EU_NUM

//Verifica se usuário é gestor financeiro
dbSelectArea("FRP")
FRP->(dbSetOrder(2))

If FRP->(dbSeek( xFilial() + cUsrAprov + cMoeda ))

	//Verifica se é uma despesa, adiantamento ou prestação de contas.
	If SEU->EU_TIPO $ ("00|01|02|03")

		//Movimento aguardando liberação
		If SEU->EU_STATUS == "01"

            //Verifica se usuário é o aprovador
			If FRP->FRP_COD == cCodAprov

			    dbSelectArea("FRS")
			    FRS->(dbSetOrder(1))

			    //Verifica se há superior vinculado na tabela FRS - Amarração Gestor X Superior
			    If FRS->(dbSeek( xFilial() + "2" + cCodAprov + "01" ))

			    	FRP->(dbSetOrder(1))
			    	FRP->(dbGoTop())
			    	If FRP->(dbSeek (xFilial() + FRS->FRS_CODSUP + cMoeda))
			    		nOpc := Fa581CfMov( STR0044, , "SEU", nNumInt, dEmissao, dDtRef, nTotal, "EU_VALOR" )	//"Liberação de Movimento do Caixinha"
			    	Else
			    		Help( " ", 1, "Fa581Transf", , STR0042, 1, 0 )	//"Superior não é um Gestor Financeiro."
			    		nOpc := 0
			    	EndIf

			    	If nOpc == 1
						RecLock( "SEU", .F. )
						SEU->EU_CODAPRO := FRS->FRS_CODSUP
						SEU->EU_DATALIB := CTOD("  /  /  ")
						SEU->EU_USUALIB := ""
						MsUnlock()
				 	ElseIf nOpc == 2
				 		RecLock( "SEU", .F. )
				 		SEU->EU_STATUS  := "04"
						SEU->EU_CODAPRO := FRS->FRS_CODSUP
						SEU->EU_DATALIB := CTOD("  /  /  ")
						SEU->EU_USUALIB := ""
						MsUnlock()
				 	EndIf
				Else
			   		Help( " ", 1, "Fa581Transf", , STR0045, 1, 0 )	//"Usuário não possui superior vinculado."
				EndIf

	   		Else
		    	Help( " ", 1, "Fa581Transf", , STR0036, 1, 0 )	//"Usuário não é o aprovador deste Movimento."
		    EndIf

		//Movimento bloqueado
		ElseIf SEU->EU_STATUS == "02" .Or. SEU->EU_STATUS == "04"
			Help( " ", 1, "Fa581Transf", , STR0046, 1, 0 )	//"Esta operação não poderá ser realizada, o registro selecionado encontra-se bloqueado."

		//Movimento já liberado
		ElseIf SEU->EU_STATUS == "03" .Or. SEU->EU_STATUS == "05"
			Help( " ", 1, "Fa581Transf", , STR0020, 1, 0 )	//"Movimento já foi liberado."

		EndIf
	Else
		Help( " ", 1, "Fa581Transf", , STR0022, 1, 0 )	//"Movimento não é uma despesa, adiantamento ou prestação de contas."
	EndIf
Else
	Help( " ", 1, "Fa581Transf", , STR0038, 1, 0 )	//"Usuário não é um Gestor Financeiro ou não tem permissão para a moeda deste Movimento."
EndIf

RestArea(aArea)
FWFreeArray(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Aus   ºAutor  ³ Danilo Dias      º Data ³  04/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Transfere a responsabilidade da liberação por ausência     º±±
±±º          ³ temporária.                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581Aus()

Local aArea     := GetArea()
Local aAreaSEU  := SEU->(GetArea())
Local cMarca    := GetMark()
Local cCodSup   := Fa006User( __cUserID, .F., 2 )	//Retorna o código de gestor do usuário logado

nOpc := Fa581Mark( "SEU", "EU_OK", @cMarca, cCodSup )

If nOpc == 1
	SEU->(dbGoTop())

	While SEU->(!Eof())
		If SEU->EU_OK == cMarca
			RecLock( "SEU", .F. )
			SEU->EU_CODAPRO := cCodSup
			SEU->EU_DATALIB := CTOD("  /  /  ")
			SEU->EU_USUALIB := ""
			MsUnlock()
		EndIf
		SEU->(dbSkip())
	EndDo
EndIf

SEU->(dbClearFilter())

RestArea(aAreaSEU)
RestArea(aArea)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Mark    ºAutor  ³ Danilo Dias    º Data ³ 10/05/2011  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Monta tela com MarkBrowse para transferir documentos do    º±±
±±º          ³ aprovador para o superior.                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA580, FINA581                                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ cAlias = Alias utilizado na MsSelect.                      ³±±
±±³          ³ cCampo = Campo usado para a marcação da MsSelect.          ³±±
±±³          ³ cMarca = Marca para identificar os registros selecionados. ³±±
±±³          ³          Deve ser passado por referência.                  ³±±
±±³          ³ cCodSup = Código do superior que será o aprovador.         ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581Mark( cAlias, cCampo, cMarca, cCodSup )

Local oDlg
Local oAprovAus
Local oQtde
Local oMark
Local aArea     := GetArea()
Local aAprov    := {}
Local cAprovAus := ""
Local cCodApr   := ""
Local cSuperior := cCodSup + " - " + Fa006User( cCodSup )	//Retorna o nome do gestor
Local nQtde     := 0
Local lInverte  := .T.
Local cCpoMarca := cAlias + "->" + cCampo
Local nOpc      := 0

//Monta array com gestores amarrados ao superior
Fa581Aprov( @aAprov, "2", cCodSup )

If Len(aAprov) > 0
	//Inicializa variável do combo com primeiro aprovador do array
	cAprovAus := aAprov[1]

	oDlg := MsDialog():New( 0, 0, 400, 780, STR0047, , , , , , , , oMainWnd, .T., , , ,  )	//"Transferência por Ausência Temporária de Aprovadores"

		oSay     := TSay():New( 014, 006, { || STR0048 }, oDlg,,,,,,.T.,,, 080, 009 )	//"Aprovador Ausente "
		oAprovAus := TComboBox():New( 012, 070, { |u| If( PCount() > 0, cAprovAus := u, cAprovAus ) }, aAprov, 250, 090, oDlg,, { || Fa580ClrMk( cAlias, CcpoMarca ), Fa581Filtra ( cAlias, Substr(cAprovAus, 1, 6), @oMark, @oDlg ), nQtde := 0 },,,,.T.,,,,{|| .T.},,,,, "cAprovAus" )

		oSay      := TSay():New( 032, 006, { || STR0049 }, oDlg,,,,,,.T.,,, 080, 009 )	//"Aprovador Superior "
		oSuperior := TGet():New( 030, 070, { |u| If( PCount() > 0, cSuperior := u, cSuperior ) }, oDlg, 250, 009,,,,,,,,.T.,,,{|| .F.},,,,,,,"cSuperior" )

		oSay      := TSay():New( 050, 006, { || STR0024 }, oDlg,,,,,,.T.,,, 120, 009 )	//"Quantidade de Movimentos selecionados:"
		oQtde     := TSay():New( 050, 135, { || nQtde }, oDlg,,,,,,.T.,,, 060, 009 )

		oMark := MsSelect():New( cAlias, cCampo,,, .F., @cMarca, { 070, 010, 175, 380 } )
		oMark:oBrowse:bAllMark := { || Fa581Marca( cMarca, oQtde, @nQtde, lInverte, .T., oMark, cAlias, cCpoMarca ) }
		oMark:bMark := { || Fa581Display( cMarca, lInverte, oQtde, @nQtde, cCampo ) }
		oMark:bAval	:= { || Fa581Marca( cMarca, oQtde, @nQtde, lInverte, .F., oMark, cAlias, cCpoMarca ) }

		oBtnTransf := tButton():New( 182, 299, STR0050, oDlg, { || nOpc := 1, oDlg:End() }, 040,,,,,.T.,,,,,,, )	//"Transferir"
		oBtnCancel := tButton():New( 182, 340, STR0051, oDlg, { || nOpc := 0, oDlg:End() }, 040,,,,,.T.,,,,,,, )	//"Cancelar"

	//Ativa MsDialog acionando filtro de Movimentos pendentes do gestor selecionado no Combo Box
	oDlg:Activate( ,,,.T.,,, { || Fa581Filtra ( cAlias, Substr(cAprovAus, 1, 6), @oMark, @oDlg ) } )
Else
	Help( " ", 1, "Fa581Mark", , STR0063, 1, 0 )	//"Não há gestores amarrados ao usuário atual. Verifique o cadastro de amarração de Aprovadores X Superiores."
EndIf

Return nOpc


Static Function Fa580ClrMk( cAlias, cCpoMarca )

Local aArea := GetArea()

(cAlias)->(dbGoTop())

While (cAlias)->(!Eof())
	RecLock( cAlias, .F. )
		&(cCpoMarca) := ""
	MsUnlock()
	(cAlias)->(dbSkip())
EndDo

RestArea(aArea)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Filtra  ºAutor  ³ Danilo Dias    º Data ³ 29/04/2011  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Filtra os movimentos pendentes do gestor no caixinha.      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ cAlias = Alias utilizado na MsSelect.                      ³±±
±±³          ³ cCodApr = Código do gestor aprovador da transação.         ³±±
±±³          ³ oMark = Objeto MsSelect.                                   ³±±
±±³          ³ oDlg = Objeto MsDialog.                                    ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Fa581Filtra ( cAlias, cCodApr, oMark, oDlg )

Local cCondicao := ""
Local bCondicao := { || &(cCondicao) }

//Filtra Movimentos pendentes apenas
If cAlias == "SEU"
	cCondicao := 'SEU->EU_CODAPRO == "' + cCodApr + '"' + ' .And. SEU->EU_STATUS = "01"' + ' .And. SEU->EU_TIPO $ ("00|01|02|03")'
	bCondicao := { || &(cCondicao) }
EndIf

If cAlias == "SE2"
	cCondicao := 'SE2->E2_CODAPRO == "' + cCodApr + '"' + ' .And. SE2->E2_STATLIB = "01"'
	bCondicao := { || &(cCondicao) }
EndIf

(cAlias)->(dbClearFilter())
(cAlias)->(dbSetFilter( bCondicao, cCondicao ) )
(cAlias)->(dbGoTop())

//Atualiza o MsDialog
If ValType(oMark) == "O"
	oDlg:Refresh()
	oMark:oBrowse:Refresh(.T.)
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581Aprov ºAutor  ³ Danilo Dias      º Data ³ 28/04/2011  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Carrega um array com os aprovadores que o usuário está     r±±
±±º          ³ amarrado como superior na tabela FRS.                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ aAprov = Array que receberá os gestores amarrados ao Sup.  ³±±
±±³          ³ cTipo = Tipo do usuário amarrado.(1=Analista ou 2=Gestor)  ³±±
±±³          ³ cCodSup = Código do gestor superior.                       ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Fa581Aprov( aAprov, cTipo, cCodSup )

Local aAreaFRS := FRS->(GetArea())
Local bSeek    := { |cBusca| cBusca == FRS->FRS_CODAPR }

dbSelectArea("FRS")
FRS->(dbSetOrder(3))
FRS->(dbSeek( xFilial() + cTipo ))

//Monta array com gestores cujo usuário está amarrado como superior.
While FRS->(!Eof()) .And. FRS->FRS_TIPO == cTipo
	If FRS->FRS_CODSUP == cCodSup .And. aScan( aAprov, bSeek ) == 0
		aAdd( aAprov, FRS->FRS_CODAPR + " - " + Fa006User( FRS->FRS_CODAPR ) )
	EndIf
	FRS->(dbSkip())
EndDo

RestArea(aAreaFRS)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581CfMov ºAutor  ³ Danilo Dias      º Data ³ 28/04/2011  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Monta tela de confirmação da liberação das movimentações   r±±
±±º          ³ do caixinha e transferências de aprovadores.               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581, FINA580                                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ cTitulo = Título para o MsDialog.                          ³±±
±±³          ³ lBtnBlq = Ativa o botão de bloqueio.                       ³±±
±±³          ³ cAlias = Alias usado no MsDialog.                          ³±±
±±³          ³ cNumInt = Número do título ou movimento do caixinha.       ³±±
±±³          ³ cEmissao = Data de emissão do título ou movimento.         ³±±
±±³          ³ dDtRef = Data de referência da transação.                  ³±±
±±³          ³ nTotal = Valor do título ou movimento.                     ³±±
±±³          ³ cCpoVlr = Nome do campo que contém o valor para usar pict. ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581CfMov( cTitulo, lBtnBlq, cAlias, cNumInt, cEmissao,;
                     dDtRef, nTotal, cCpoVlr )

Local oDlg
Local oBtnAprov, oBtnCanc
Local cUsrAprov	:= FRP->FRP_USER
Local cCodAprov	:= FRP->FRP_COD
Local cNomAprov	:= Fa006User(cCodAprov)
Local cMoeda	:= FRP->FRP_MOEDA//CValToChar(FRP->FRP_MOEDA)//alterado por Fernando Radu Muscalu em 01/09/2011
Local nLimMin	:= FRP->FRP_LIMMIN
Local nLimMax	:= FRP->FRP_LIMMAX
Local aMovAprov	:= fXAlcSld( cMoeda, dDtRef, cCodAprov, .F. ) 	//Monta array com os movimentos do Gestor
Local nSldAprov	:= fxAlcSldFim( aMovAprov )	//Retorna o saldo atual do Gestor
Local aTipoLim	:= {}
Local cTipoLim	:= FRP->FRP_TIPO
Local nOpc		:= 0

Default lBtnBlq	:= .T.

//Carrega tipos de limite do campo combo pelo X3_CBOX
dbSelectArea("SX3")
SX3->(dbSetOrder(2))
If SX3->(dbSeek("FRP_TIPO"))
	aTipoLim := StrToKarr( X3CBox(), ";" )
EndIf

//Cria Dialog de liberação do movimento
oDlg := MSDialog():New( 0, 0, 300, 600, cTitulo, , , , , , , , oMainWnd, .T., , , , )

oGroup1 := TGroup():New( 002, 005, 042, 295, STR0052, oDlg,,,.T., )	//"Movimento"

	oSay     := TSay():New( 012, 010, { || STR0053 }, oGroup1,,,,,,.T.,,, 60, 10 )	//"Número Int."
    oNumInt  := TGet():New( 010, 070, { |u| If( PCount() > 0, cNumInt := u, cNumInt ) }, oGroup1, 060, 010,,,,,,,,.T.,,,{|| .F.},,,,,,,"cNumInt" )
    oSay     := TSay():New( 012, 170, { || STR0054 }, oGroup1,,,,,,.T.,,, 60, 10 )	//"Emissão"
    oEmissao := TGet():New( 010, 230, { |u| If( PCount() > 0, cEmissao := u, cEmissao ) }, oGroup1, 060, 010, "@D",,,,,,,.T.,,,{|| .F.},,,,,,,"cEmissao" )
    oSay     := TSay():New( 026, 170, { || STR0033 }, oGroup1,,,,,,.T.,,, 60, 10 )	//"Data de Ref."
    oDtRef   := TGet():New( 024, 230, { |u| If( PCount() > 0, dDtRef := u, dDtRef ) }, oGroup1, 060, 010,,,,,,,,.T.,,,{|| .F.},,,,,,, "dDtRef" )
	oSay     := TSay():New( 026, 010, { || STR0055 }, oGroup1,,,,,,.T.,,, 80, 10 )	//"Valor"
    oTotal   := TGet():New( 024, 070, { |u| If( PCount() > 0, nTotal := u, nTotal ) }, oGroup1, 060, 010, (cAlias)->(X3Picture(cCpoVlr)),,,,,,,.T.,,,{|| .F.},,,,,,,"nTotal" )

oGroup2 := TGroup():New( 050, 005, 105, 295, STR0056, oDlg,,,.T., )	//"Aprovador"

    oSay     := TSay():New( 060, 010, { || STR0056 }, oGroup2,,,,,,.T.,,, 60, 10 )	//"Aprovador"
    oAprov   := TGet():New( 058, 070, { |u| If( PCount() > 0, cNomAprov := u, cNomAprov ) }, oGroup2, 220, 010,,,,,,,,.T.,,,{|| .F.},,,,,,,"cNomAprov" )
    oSay     := TSay():New( 076, 010, { || STR0057 }, oGroup2,,,,,,.T.,,, 60, 10 )	//"Limite Mín."
    oLimMin  := TGet():New( 074, 070, { |u| If( PCount() > 0, nLimMin := u, nLimMin ) }, oGroup2, 060, 010, FRP->(X3Picture("FRP_LIMMIN")),,,,,,,.T.,,,{|| .F.},,,,,,,"nLimMin" )
    oSay     := TSay():New( 076, 170, { || STR0058 }, oGroup2,,,,,,.T.,,, 60, 10 )	//"Limite Máx."
    oLimMax  := TGet():New( 074, 230, { |u| If( PCount() > 0, nLimMax := u, nLimMax ) }, oGroup2, 060, 010, FRP->(X3Picture("FRP_LIMMAX")),,,,,,,.T.,,,{|| .F.},,,,,,,"nLimMax" )
    oSay     := TSay():New( 090, 010, { || STR0059 }, oGroup2,,,,,,.T.,,, 60, 10 )	//"Saldo"
    oLimite  := TGet():New( 088, 070, { |u| If( PCount() > 0, nSldAprov := u, nSldAprov ) }, oGroup2, 060, 010, FRP->(X3Picture("FRP_LIMITE")),,,,,,,.T.,,,{|| .F.},,,,,,,"nSldAprov" )
    oSay     := TSay():New( 090, 170, { || STR0060 }, oGroup2,,,,,,.T.,,, 60, 10 )	//"Tipo Lim."
    oTipoLim := TComboBox():New( 088, 230, { |u| If( PCount() > 0, cTipoLim := u, cTipoLim ) }, aTipoLim, 060, 010, oGroup2,,,,,,.T.,,,,{|| .F.},,,,, "cTipoLim" )

    oBtnAprov := tButton():New( 130, 070, STR0061 , oDlg, { || oDlg:End(), nOpc := 1 }, 050,,,,,.T.,,,,,,, )	//"Aprovar"
    oBtnAprov := tButton():New( 130, 130, STR0062 , oDlg, { || oDlg:End(), nOpc := 2 }, 050,,,,,lBtnBlq,,,,,,, )	//"Bloquear"
    oBtnCanc  := tButton():New( 130, 190, STR0051 , oDlg, { || oDlg:End(), nOpc := 0 }, 050,,,,,.T.,,,,,,, )	//"Cancelar"

oDlg:Activate( ,,,.T.,,,,, )

Return nOpc

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa581CxAbe ºAutor  ³ Yuri Porto     º Data ³ 28/04/2011   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÊÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida se o caixa está aberto						      r±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA581                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ cCaixa = COdigo do caixa na tabela SEU				   .  ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa581CxAbe( cCaixa As Char) As logic
	Local aArea As Array
	Local lRet As logic
	lRet := .T.
	aArea := GetArea()

	SET->(dbSetOrder(1))
	iF SET->(dbSeek(xFilial("SET")+cCaixa))
		If SET->ET_SITUAC == "1"
			Help( " ", 1, ProcName(1),, STR0076,1,0 ) //"Caixa fechado. O movimento não pode ser realizado."
			lRet := .F.
		Endif
	EndIf
	
	RestArea(aArea)
Return lret
