#INCLUDE "ATFA031.CH"
#Include "FiveWin.ch"
      

// 17/08/2009 - Ajuste para filiais com mais de 2 caracteres.

//********************************
// Controle de multiplas moedas  *
//********************************
Static lMultMoed := FindFunction("AtfMoedas")

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ ATFA031	  ³ Autor ³ Paulo Augusto		  ³ Data ³ 20/03/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Baixa Anual de Ativos conforme legislacao					³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ Generico 													³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³			 ³ ***  Lancto padronizado Utilizado:   810						³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ATFA031
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis 														³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local nDecimais := Set( _SET_DECIMALS )
Local aCores :=	{{ ' EMPTY(N3_USACRED) .And. EMPTY(N3_DTBAIXA) ','ENABLE'    },;	//Bem sem Baixa
				 { '!EMPTY(N3_USACRED) .And. !EMPTY(N3_DTBAIXA)','DISABLE'   },;	//Baixa Legislacao
				 { ' EMPTY(N3_USACRED) .And. !EMPTY(N3_DTBAIXA)','BR_AMARELO'},;	// Baixa Normal														//SC com Pedido Colocado Parcial
				 { '!EMPTY(N3_USACRED) .And.  EMPTY(N3_DTBAIXA)','BR_AZUL'	 }}		//Bem com baixa de Legislacao
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a Integridade dos dados de Entrada 								³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Set( _SET_DECIMALS ,20 )
SetKey( VK_F12, { || Pergunte("AFA031",.T.) })

Private cMoedaAtf 	:= GetMV("MV_ATFMOEDA")
Private cMoeda          
Private lAtfCont 	:= IIf(Trim(GetMv("MV_ATFCONT"))="O",.T.,.F.)
Private cFiltroSN3 	:= ""
Private cFiltroSN1	:= ""
Private aRotina := MenuDef()                                                                                                         
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabecalho da tela de atualizacoes								  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cCadastro := OemToAnsi(STR0004) // "Credito Anual do Ativo Fixo Conf. Legislacao"   
lPrim 	:= .T.
aPos	:= {  8,  4, 11, 74 }
aRotina [1,2] := "AxPesqui"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ativa tecla F10 para ativar parametros de lan‡amentos contab.             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetKey( VK_F12, { || Pergunte("AFA031",.T.) } )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega as perguntas selecionadas:                                     ³
//³ mv_par01 - 1 Mostra lan‡amentos cont beis                              ³
//³            2 NAO Mostra lan‡amentos cont beis                          ³
//³            3 NAO Contabiliza                                           ³
//³ mv_par02 - 1 Aglutina                                                  ³
//³            2 Nao Aglutina                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Pergunte("AFA031",.F.)

mBrowse( 6, 1,22,75,"SN3",,,,,,aCores)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Recupera a Integridade dos dados										  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SET( _SET_DECIMALS , nDECIMAIS )
SET KEY VK_F12 TO

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³AF031Auto ³ Autor ³ Paulo Augusto		  	³ Data ³ 20/03/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Rotina de calculo da baixa automatica					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³  														  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ atfa031													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function AF031Auto(cAlias,nReg,nOpc)

Local 	oDlg, oDlg1, oQtda 
Local 	cCapital
Local 	cNota 		:= 	Space(6)
Local 	cSerie		:= 	Space(3)
Local 	lPadrao
Local 	cIndex		:=	"",	cChave:="",	cIndexSN1:="",	cChave1:=""
Local 	nSavOrd1	:=	IndexOrd()
Local 	nUfir 	 	:=	0 	
Local 	nQuant      :=	0
Local 	nQtdOrig	:=	0
//********************************
// Controle de multiplas moedas  *
//********************************
Local 	aVlrOrig := If(lMultMoed,AtfMultMoe(,,{|x| 0}), {0,0,0,0,0} )
Local 	aVlrBx   := If(lMultMoed,AtfMultMoe(,,{|x| 0}), {0,0,0,0,0} )
Local	aVlrDesp := If(lMultMoed,AtfMultMoe(,,{|x| 0}), {0,0,0,0,0} )
Local 	nTot
//Local 	nVlrOrig1 	:=	0, nVlrOrig2 :=0,  nVlrOrig3 :=0,  nVlrOrig4 :=0,  nVlrOrig5 :=0
//Local 	nVlrBx1   	:=	0, nVlrBx2   :=0,  nVlrBx3   :=0,  nVlrBx4   :=0,  nVlrBx5   :=0
//Local	nVlrDesp1 	:=	0, nVlrDesp2 :=0,  nVlrDesp3 :=0,  nVlrDesp4 :=0,  nVlrDesp5 :=0
Local	nVlrCorBem	:=	0, nVlrCorDep:=0
Local 	nTotBaixa 	:=	0
Local 	nDiferenca	:=	0  
Local 	nTotBxAtu 	:=	0
Local	nPBaixaATf 	:=	GetNewPar("MV_ATFTXBX",4)	// percentual de baixa
Local 	cAtfMoedn 	:= 	GetMv("MV_ATFMDLM")	// moeda a ser cons. na baixa ( limite)
Local 	nATFLimtx	:= 	GetMv("MV_ATFLMTX")	// Limite Total a ser considerado na baixa
Local 	nValMax  	:= 	xmoeda( nATFLimTx,Val(cAtfMoedn),1,dDataBase) // Valor Maximo para reducao do ATF( convertido na moeda 1)
Local 	lBaixa 		:=	.T.
Local	lCalcRed	:=	.T.
Local	dDataBx 	:= GetNewPar("MV_ATFULBX","")
Local	cATFCRAT	:= SuperGetMV("MV_ATFCRAT",.F.,"1")	//Aplicacao de credito sobre ativo: 0-Mensal | 1-Anual (Default)
Local	dDataVir	:= GetNewPar("MV_VIRAATF","")		//Data da ultima virada do Ativo Fixo
Local 	xCab := {}
Local 	xAtivo := {}

Private cArquivo	:= 	""
Private dDInDepr	:= 	CTOD("  /  /  ")
Private cPadrao   	:= 	""
Private nTotal 		:= 	0
Private nHdlPrv		:= 	0
Private nQtdeSn		:= 	0
Private nPercBaixa	:= 	0
//********************************
// Controle de multiplas moedas  *
//********************************
Private aVlrAtual:= If(lMultMoed,AtfMultMoe(,,{|x| 0}), {0,0,0,0,0} )
Private aVlResid := If(lMultMoed,AtfMultMoe(,,{|x| 0}), {0,0,0,0,0} )
Private aValBaixa:= If(lMultMoed,AtfMultMoe(,,{|x| 0}), {0,0,0,0,0} )
Private aValDepr := If(lMultMoed,AtfMultMoe(,,{|x| 0}), {0,0,0,0,0} )
Private aDepr	 := If(lMultMoed,AtfMultMoe(,,{|x| 0}), {0,0,0,0,0} )
//Private nVlrAtual1	:= 	0, nVlrAtual2:= 0, nVlrAtual3:= 0, nVlrAtual4:= 0, nVlrAtual5	:= 0
//Private nVlResid1 	:= 	0, nVlResid2 := 0, nVlResid3 := 0, nVlResid4 := 0, nVlResid5	:= 0
//Private nValBaixa1	:= 	0, nValBaixa2:= 0, nValBaixa3:= 0, nValBaixa4:= 0, nValBaixa5	:= 0
//Private nValDepr1 	:= 	0, nValDepr2 := 0, nValDepr3 := 0, nValDepr4 := 0, nValDepr5	:= 0
//Private nDepr1 		:= 	0, nDepr2  	 := 0, nDepr3 	 := 0, nDepr4 	 := 0, nDepr5 		:= 0
Private cMotivo		:= 	STR0018 //"11-BxLei"
Private nQtdBens 	:=	0
Private nValCorr 	:= 	0, nValCorDep := 0
Private nPercAtiv 	:= 	0
Private dBaixa030  	:= 	dDataBase
Private aMotivos	:= 	{}
Private lCalcula  	:= 	Iif(GetMv("MV_CORREC") == "S",.T.,.F.)
Private nParCorrec	:= 	GetMv("MV_VALCORR")
Private lQuant 		:= 	.T. 
Private lSN7 		:=	.F.
Private lUmaVez 	:=	.T.
Private lAuto		:=	.T.
Private lMsErroAuto := .F.

Set( _SET_DECIMALS ,20 )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o registro n„o est  em uso por outra esta‡„o. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If Empty(dDataBx)
	MsgStop(OemToAnsi(STR0019),OemToAnsi(STR0020))	//"Verifique a existencia do Parametro MV_ATFULBX"###" Parametro "
	Return .T.
EndIf	

If cATFCRAT == "1" //Aplicacao anual de credito sobre ativo 
	//--------------------------
	// Valida o mes de execucao
	//--------------------------
	If Month(dDatabase) <> 12
		MsgStop(OemToAnsi(STR0021),OemToAnsi(STR0022))	//" O Calculo so pode ser executado no mes de dezembro"###"Mes Invalido"
		Return .T.
	EndIf
	//--------------------------
	// Valida o ano de execucao
	//--------------------------
	If  Year(dDatabase) ==	Year(dDataBx).And. Month(dDataBx) == 12 
		MsgStop(OemToAnsi(STR0007),OemToAnsi(STR0008))	// "Ja foi feito o credito do Ativo Fixo para este ano"### "Ja executado"
		Return .T.
	EndIf
ElseIf cATFCRAT == "0" //Aplicacao mensal de credito sobre ativo

	//-----------------------------------------------
	// Valida se o mes de execucao ja sofreu calculo
	//-----------------------------------------------
	If Month(dDatabase) == Month(dDataBx) .And. Year(dDatabase) == Year(dDataBx)
		MsgStop(OemToAnsi(STR0030),OemToAnsi(STR0008)) //"Já foi feito o crédito do Ativo Fixo para este mês."###"Ja executado"
		Return .T.
	EndIf

	//----------------------------------------------------
	// Se mes de execucao for janeiro, valida se o ultimo
	// calculo foi realizado em dezembro do ano anterior
	//----------------------------------------------------
	If Month(dDatabase) == 1 .And. (Month(dDataBx) != 12 .Or. Year(dDataBx)+1 != Year(dDatabase))
		MsgStop(OemToAnsi(STR0031),OemToAnsi(STR0032)) //A data de execução deve ser no mês posterior a última execução. Verifique os parâmetros MV_ATFULBX e MV_ATFCRAT.###"Atenção"
		Return .T.
	EndIf

	//---------------------------------------------------
	// Caso não seja janeiro, valida o ano e se o mes do
	// último calculo eh anterior a data de execucao
	//--------------------------------------------------
	If Month(dDatabase) != 1 .And. (Month(dDatabase)-1 != Month(dDataBx) .Or. Year(dDataBx) != Year(dDatabase))
		MsgStop(OemToAnsi(STR0031),OemToAnsi(STR0032)) //A data de execução deve ser no mês posterior a última execução. Verifique os parâmetros MV_ATFULBX e MV_ATFCRAT.###"Atenção"
		Return .T.
	EndIf

Else
	MsgStop(OemToAnsi(STR0034),OemToAnsi(STR0032)) //"Erro na definição do periodo do crédito sobre os bens do ativo fixo. Verifique o parâmetro MV_ATFCRAT."###"Atenção"
	Return .T.
EndIf

If dDatabase <> GetMv("MV_ULTDEPR")
	MsgStop(OemToAnsi(STR0023),OemToAnsi(STR0024))	//" Data do sistema deve ser igual a ultima depreciacao "###"Data"
	Return .T.
EndIf	

If !MsgYesNo(OemToAnsi(STR0009),OemToAnsi(STR0010))	//  " Antes de executar esta rotina faca uma copia de seguranca dos arquivos. Deseja continuar a execucao?" ### "Copia de Seguranca"
	Return .T.
EndIf

If !SoftLock("SN3")
	 Return .t.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica o numero do Lote do modulo Ativo Fixo 							  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
dbSelectArea("SX5")
dbSeek(cFilial+"09ATF")
cLoteAtf := SubStr(X5Descri(),1,4)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica tabela de motivos para baixa 									  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSeek(cFilial+"16")
While SX5->X5_FILIAL+SX5->X5_TABELA == cFilial+"16"
	cCapital := Capital(X5Descri())
	AAdd( aMotivos, SubStr(SX5->X5_CHAVE,1,2 ) + "-" + SubStr(cCapital,1,12 ) )
	dbSkip()
EndDo

af031ChecF()
dbSelectArea("SN3")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta express„o do Filtro para sele‡„o						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cIndex := CriaTrab(nil,.f.)
cChave  := IndexKey( )
IndRegua("SN3",cIndex,cChave,,cFiltroSN3,OemToAnsi(STR0011))  //"Selecionando Registros..."
nIndex := RetIndex("SN3")
dbSelectArea("SN3")
#IFNDEF TOP
	dbSetIndex(cIndex+OrdBagExt())
#ENDIF
dbSetOrder(nIndex+1)
DbGoTop()
If BOF() .and. EOF() 
	RetIndex("SN3")
	dbSetOrder(nSavOrd1)
	DbClearFilter()
	FErase (cIndex+OrdBagExt())
	Return
EndIf

dbSelectArea("SN1")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta express„o do Filtro para sele‡„o						 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cIndexSN1 := CriaTrab(nil,.f.)
cChave1  := IndexKey( )
IndRegua("SN1",cIndexSN1,cChave1,,cFiltroSN1 ,OemToAnsi(STR0011))  //"Selecionando Registros..."
nIndexSN1 := RetIndex("SN1")
dbSelectArea("SN1")
#IFNDEF TOP
	dbSetIndex(cIndexSN1+OrdBagExt())
#ENDIF
dbSetOrder(nIndexSN1+1)
dbGotop()

While !EOF() .and.  N1_FILIAL == xFilial("SN1")
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se utiliza credito pela Legislacao e se esta dentro do periodo de aquisicao	³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If N1_USACRED == "1" 
		If cATFCRAT == "1" .And. Year(N1_AQUISIC)== Year(dDatabase) //Criterio de atualização anual
			lCalcRed := .T.
		ElseIf cATFCRAT == "0" .And. Month(N1_AQUISIC)== Month(dDatabase) //Criterio de atualização mensal
			lCalcRed := .T.
		Else
			lCalcRed := .F.
		EndIf
	Else
		lCalcRed := .F.
	EndIf

	aArea	:=SN1->(GetArea())
	If lCalcRed
	   nPBaixa:=nPBaixaATf
		dbSelectArea("SN3")
		dbSeek(cFilial+SN1->N1_CBASE+SN1->N1_ITEM)
	
		cChave 		:= &(IndexKey())
		nQtdeSn		:= IIF(SN1->N1_QUANTD == 0,1,SN1->N1_QUANTD)
		nQtdOrig 	:= nQtdeSn
		nQuant		:= nQtdeSn 

		//********************************
		// Controle de multiplas moedas  *
		//********************************
		If lMultMoed
		    AtfMultMoe(,,{|x| aVlrAtual[x] := SN3->&("N3_VORIG"+Alltrim(Str(x)))+SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x))) })
		Else
			aVlrAtual[2] 	:= N3_VORIG2+N3_AMPLIA2
			aVlrAtual[3] 	:= N3_VORIG3+N3_AMPLIA3
			aVlrAtual[4] 	:= N3_VORIG4+N3_AMPLIA4
			aVlrAtual[5] 	:= N3_VORIG5+N3_AMPLIA5
		EndIf
		aVlrAtual[1] 	:= Iif(SN1->N1_PATRIM # "C", SN3->N3_VORIG1+SN3->N3_VRCACM1+SN3->N3_AMPLIA1, SN3->N3_VORIG1+SN3->N3_AMPLIA1 )		
		
		//********************************
		// Controle de multiplas moedas  *
		//********************************
		If lMultMoed
			AtfMultMoe(,,{|x| aValBaixa[x] 	:= Round(aVlrAtual[x] * (nPBaixa /100), X3Decimal("N3_VORIG"+Alltrim(Str(x))))})
		Else
			aValBaixa[2] 	:= Round(aVlrAtual[2] * (nPBaixa /100), X3Decimal("N3_VORIG2"))
			aValBaixa[3] 	:= Round(aVlrAtual[3] * (nPBaixa /100), X3Decimal("N3_VORIG3"))
			aValBaixa[4] 	:= Round(aVlrAtual[4] * (nPBaixa /100), X3Decimal("N3_VORIG4"))
			aValBaixa[5] 	:= Round(aVlrAtual[5] * (nPBaixa /100), X3Decimal("N3_VORIG5"))
		EndIf
		aValBaixa[1] 	:= Iif(SN1->N1_PATRIM # "C",Round(SN3->N3_VORIG1 * (nPBaixa /100), X3Decimal("N3_VORIG1")) + Round(SN3->N3_VRCACM1 * (nPBaixa /100), X3Decimal("N3_VRCACM1"))+Round(SN3->N3_AMPLIA1 * (nPBaixa /100), X3Decimal("N3_AMPLIA1")),;
			Round(SN3->N3_VORIG1 * (nPBaixa /100), X3Decimal("N3_VORIG1")) + Round(SN3->N3_AMPLIA1 * (nPBaixa /100), X3Decimal("N3_AMPLIA1")))
			
			
		nTotBxAtu	:= aValBaixa[1]
		nTotBaixa	:= nTotBaixa + nTotBxAtu 
		
		If (nTotBaixa >= nValMax)  
		 	nDiferenca	:=  nTotBaixa - nValMax
			nPBaixa		:= 	(nTotBxAtu - nDiferenca )/ aVlrAtual[1]
			  
			//********************************
			// Controle de multiplas moedas  *
			//********************************
			If lMultMoed
				AtfMultMoe(,,{|x| aValBaixa[x] 	:= Round(aVlrAtual[x] * (nPBaixa /100), X3Decimal("N3_VORIG"+Alltrim(Str(x))))})
			Else
				aValBaixa[1] 	:= 	Round(aVlrAtual[1] * nPBaixa , X3Decimal("N3_VORIG1"))
				aValBaixa[2] 	:= 	Round(aVlrAtual[2] * nPBaixa , X3Decimal("N3_VORIG2"))
				aValBaixa[3] 	:= 	Round(aVlrAtual[3] * nPBaixa , X3Decimal("N3_VORIG3"))
				aValBaixa[4] 	:= 	Round(aVlrAtual[4] * nPBaixa , X3Decimal("N3_VORIG4"))
				aValBaixa[5] 	:= 	Round(aVlrAtual[5] * nPBaixa , X3Decimal("N3_VORIG5"))
			EndIf
			nQuant		:= 	nQtdOrig  
			lUmaVez		:=	.T.                          
		EndIf
	
		//********************************
		// Controle de multiplas moedas  *
		//********************************
		nTot := 0
		If lMultMoed
			AtfMultMoe(,,{|x| nTot += aValBaixa[x] })
		Else
			nTot += aValBaixa[1]
			nTot += aValBaixa[2]
			nTot += aValBaixa[3]
			nTot += aValBaixa[4]
			nTot += aValBaixa[5]
		EndIf
		If (nTot) > 0
						
			RecLock("SN3", .F.)
				Replace N3_USACRED With "3"
			MsUnLock()
			DbsetOrder(1)
			
			xCab :={ 	{"FN6_FILIAL"	,xFilial("SN3")			,NIL},;
						{"FN6_CBASE"	,SN3->N3_CBASE			,NIL},;
						{"FN6_CITEM"	,SN3->N3_ITEM			,NIL},;
						{"FN6_MOTIVO"	,"11"					,NIL},;  
						{"FN6_QTDATU"	,nQuant		 			,NIL},;   
						{"FN6_BAIXA"	,100					,NIL},;  
						{"FN6_QTDBX"	,nQuant					,NIL},;
						{"FN6_DTBAIX"	,dBaixa030				,NIL},;
						{"FN6_NUMNF"	,cNota					,NIL},;  
						{"FN6_SERIE"	,cSerie					,NIL},;  
						{"FN6_PERCBX"	,100					,NIL},;
						{"FN6_VLVEND"	,aValBaixa[1]			,NIL},;
						{"FN6_DEPREC"	,GETMV('MV_ATFDPBX')	,NIL}	}
					
			xAtivo:={ 	{"N3_FILIAL"	, xFilial("SN3")	,NIL},;
						{"N3_CBASE"		, SN3->N3_CBASE		,NIL},;
						{"N3_ITEM"		, SN3->N3_ITEM		,NIL},;
				   	   	{"N3_TIPO"		, SN3->N3_TIPO		,NIL},;
						{"N3_BAIXA"   	, SN3->N3_BAIXA		,NIL},;
			   		  	{"N3_TPSALDO"	, SN3->N3_TPSALDO	,NIL} }
			
		
			MsExecAuto({|a,b,c|ATFA036(a,b,c)},xCab,xAtivo,3)  
			If lMsErroAuto
		   		MostraErro()
			Endif
		
			nTotBxAtu:= 0    
			
			SN1->(RecLock("SN1", .F.))
				Replace SN1->N1_USACRED With "3"
			SN1->(MsUnLock()) 
			
			RecLock("SN3", .F.)
			Replace N3_USACRED With "3"
			MsUnLock()
			nQtdBens 	:= nQtdBens  + 1
		EndIf
	EndIf
	RestArea(aArea)
	dbSkip()
End


PUTMV("MV_ATFULBX",DTOS(dDataBase))   // Atualiza a data da ultima execucao
MsgStop(OemToAnsi(STR0013) + Alltrim(STR(nQtdBens) ) + OemToAnsi(STR0014) ,OemToAnsi(STR0015))   //A rotina gerou baixa em   ### " bens "   ###  "Bens baixados "


If nQtdBens != 0 .and. nHdlPrv > 0
	RodaProva(nHdlPrv,nTotal)
	cA100Incl(cArquivo,nHdlPrv,2,cLoteAtf,mv_par01 = 1,mv_par02 = 1)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura os ¡ndices 										 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RetIndex("SN3")
dbSetOrder(nSavOrd1)
DbClearFilter()
FErase (cIndex+OrdBagExt())

RetIndex("SN1")
dbSetOrder(1)
DbClearFilter()
FErase (cIndexSN1+OrdBagExt()) 

Return


/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Af031ChecF³ Autor ³ Paulo Augusto		  	³ Data ³ 21/03/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ filtro		 											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³  														  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ atfa031													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function Af031ChecF()
cFiltroSN3 := 'N3_FILIAL == "'+xFilial("SN3")+'" .AND. N3_BAIXA == "0" .AND. EMPTY(N3_DTBAIXA)'
cFiltroSN1 := 'N1_FILIAL == "'+xFilial("SN1")+'" .AND.  Year(SN1->N1_AQUISIC)== year(dDatabase) '
Return 
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A031Legenda³ Autor ³ Paulo Augusto        ³ Data ³10.05.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Exibe uma janela contendo a legenda da mBrowse.              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Exclusivo ATFA031                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A031Legenda()

BrwLegenda(cCadastro,STR0029,{	{"ENABLE",OemToAnsi(STR0025)},; //"Legenda" //"Bem sem Baixa" 
	{"DISABLE",OemToAnsi(STR0026)},; //"Baixa Legislacao"
	{"BR_AMARELO",OemToAnsi(STR0027)},; //"Baixa Normal"
	{"BR_AZUL",OemToAnsi(STR0028)}} ) //"Bem com baixa de Legislacao"
Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Ana Paula N. Silva     ³ Data ³08/12/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados     ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function MenuDef()
Local aRotina := { 	{ OemToAnsi(STR0001)	, "AxPesqui"	, 0 , 1},;  //"Pesquisar"
						{ OemToAnsi(STR0002)	, "ATFVISUAL"	, 0 , 2},;  //"Visualizar"
				   		{ OemToAnsi(STR0003)	, "AF031Auto"	, 0 , 6},; //"Baixar"
						{ OemToAnsi(STR0017)	, "A031Legenda"	, 0 , 6, ,.F.} } //"Legenda"
Return(aRotina)
