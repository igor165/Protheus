#INCLUDE "PROTHEUS.CH"
#INCLUDE "DBINFO.CH"
#INCLUDE "FINA100.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "TOTVS.CH"
#INCLUDE "FWLIBVERSION.CH"

// Estudo de Métricas
Static __lMetric  := .F.
Static __cFunBkp  := FunName()
Static __cFunMet  := ""

Static nMsgOpc		:= 	0
Static lPagar		:= .F.
Static lReceber		:= .F.
Static _oFINA1001
Static lFA100TRF	:= Nil
Static lFA100VET	:= Nil
Static __F100DPRM   := Nil
Static lEAIA100		:= Nil
Static cEAIA100v	:= Nil
Static lPmsInt		:= Nil
Static __oMoviTB    := Nil

//-----------------------------------------------------------------------------------------------------
/*/{Protheus.doc} FINA100
Programa de manutenção no cadastro de Movimentos bancários

Function FINA100(nPosArotina,aRotAuto,nOpcAuto)
@param nPosArotina 	Posição do array aRotina a ser executado em rotina automática
@param aRotAuto 	Array contendo as informações para processamento via execauto
@param nOpcAuto 	Opção a ser executada via rotina automatica (execauto)

@author Wagner Xavier
@since 28/08/2013
@version MP11.90
Luis Enríquez |23/11/2018| DMINA-4943 En func. fA100Cheq() se usan campos correctos para nombre de
                           cliente SE1, se coloca correctamente parámetro de opción 3-Inlucir en llamado
                           de FINA040, además se realiza corrección en función fa100clifor
                           para validar y obtener loja. (MEX)
/*/
//-----------------------------------------------------------------------------------------------------
Function FINA100(nPosArotina As Numeric, aRotAuto As Array, nOpcAuto As Numeric)

	Local cPesquisa		:= "AxPesqui"						// Funcao para montar pesquisa
	Local lADVPR		:= IIF(TYPE("lADVPR") == "U",.F.,lADVPR) // Valida Advpr - Argentina.

	PRIVATE cPerg		:= "AFI100"
	PRIVATE cArquivo	:= " "
	PRIVATE lExterno	:= .F.
	PRIVATE cCondicao	:= ""
	PRIVATE aIndex		:= {}
	PRIVATE bFiltraBrw
	PRIVATE bPMSDlgMB 	:= {|| PmsDlgMB(2, M->E5_PROJPMS, M->E5_HISTOR, M->E5_RECPAG)}
	PRIVATE aButtons  	:= {}
	PRIVATE aRatAJE   	:= {}
	PRIVATE aAutoCab  	:= aRotAuto
	PRIVATE lF100Auto 	:= ( aRotAuto <> NIL )
	PRIVATE nAutoOpc 	:= nOpcAuto
	PRIVATE nFinLmCH  	:= SUPERGETMV("MV_FINLMCH",.F.,0)
	PRIVATE aItensCtb	:= {}		// Utilizado ao informar o campo "Rateio" como "Sim"
	Private cFilter		:= ""
	Private cIdMovim	:= ""

	Default lPmsInt		:= IsIntegTop(,.T.)

	If cPaisLoc $ "ANG|ARG|AUS|BOL|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|TRI|URU|VEN"
		dbSelectArea("FRE")
		dbSelectArea("FRF")
	Endif

	pergunte("AFI100",.F.)

	If FwIsInCallStack("FWMILEProA")
		//Verifica se veio como array os parametros vindos do mile, pois o mesmo envia somente array
		If ValType(nPosARotina) == "A"
			If Len(nPosARotina) > 0
				nPosARotina := nPosARotina[1]
			Else
				nPosARotina := nil
			EndIf
		EndIf

		If ValType(nOpcAuto) == "A"
			If Len(nOpcAuto) > 0
				nOpcAuto := nOpcAuto[1]
			Else
				nOpcAuto := 3
			EndIf
			nAutoOpc 	:= nOpcAuto
		EndIf

	EndIf

	If !lF100Auto .And. GetHlpLGPD({"A6_COD", "A6_AGENCIA", "A6_NUMCON"})
		Return .F.
	Endif

	If !lF100Auto
		SetKey (VK_F12,{|a,b| AcessaPerg("AFI100",.T.)})
	EndIf

	If cPaisLoc <> "BRA"
		DbSelectArea("SE5")
		DbSetOrder(3)
		cCondicao  := "E5_FILIAL = '"+xFilial('SE5')+"' AND E5_BANCO <> '"+Space(TamSX3('E5_BANCO')[1])+"'"
		cPesquisa := "PesqBrw()"
	Endif

	If !Empty(cCondicao) .Or. cPaisLoc == "BRA"
		If ExistBlock("F100FBRW")
			cCondicao := ExecBlock("F100FBRW",.F.,.F.,{cCondicao})
		EndIf
		cFilter := cCondicao
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atualiza a database do sistema caso a data de movimento³
	//³da impressora seja diferente da data cronologia.       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nModulo == 12  // SIGALOJA 
		If lFiscal
			LjEcfIFData()
		EndIf
	EndIf

	// botão de integração com o PMS
	If IntePMS().AND. !lPmsInt
		aButtons := {{'PROJETPMS', {|| Eval(bPmsDlgMB)}, STR0045, STR0062}} //"Gerenciamento de Projetos" //"Projetos"
	EndIf

	If ExistBlock ("F100BTOV")
		aButtons:= ExecBlock("F100BTOV",.F.,.F.,{aButtons})
	EndIf

	PRIVATE aRotina := MenuDef(lF100Auto)

	PRIVATE cRecPag	:= " "
	PRIVATE cCadastro := OemToAnsi(STR0009)  //"Movimenta‡„o Banc ria"
	PRIVATE cLote //sx5 TABELA 09
	PRIVATE nUsado 	:= 0
	PRIVATE nValRat	:= 0
	PRIVATE oValRat

	PRIVATE nQtdTot		:= 0		//Utilizado no Rateio Externo do SIGACTB.
	LoteCont( "FIN" )

	//Ponto de entrada para ser utilizado antes do Browse
	If ExistBlock("F100BROW")
		ExecBlock("F100BROW",.F.,.F.)
	EndIf

	//Endere‡a a fun‡„o de BROWSE
	DEFAULT nPosArotina := 0

	If !lF100Auto
		If nPosArotina > 0 // Sera executada uma opcao diretamento de aRotina, sem passar pela mBrowse
			dbSelectArea("SE5")
			bBlock := &( "{ |a,b,c,d,e| " + aRotina[ nPosArotina,2 ] + "(a,b,c,d,e) }" )
			Eval( bBlock, Alias(), (Alias())->(Recno()),nPosArotina)
		Else
			DbSelectArea("SE5")
			DbSetOrder(1)
			mBrowse( 6, 1,22,75,"SE5",,,,,,F100Legenda(),,,,,,,,cFilter)
		Endif
	Else
		//Trata a variavel nPos pois mais de uma opcao do menu tem o mesmo ID

		If nOpcAuto == 3 // Pagar

			dbSelectArea("SE5")
			MsRotAuto(nOpcAuto,aAutoCab,"SE5")

		ElseIf nOpcAuto == 4 //Receber
			nOpcAuto := 3

			dbSelectArea("SE5")
			MsRotAuto(nOpcAuto,aAutoCab,"SE5")

		ElseIf nOpcAuto == 5 .Or. nOpcAuto == 6 //Excluir e Cancelar
			IF cPaisLoc == "ARG" .and. lADVPR .AND. Findfunction("VldAdvpr")
				VldAdvpr(aAutoCab,nOpcAuto)
			Else
				dbSelectArea("SE5")
				Fa100Can("SE5",SE5->(Recno()),nOpcAuto)
			EndIF

		ElseIf nOpcAuto == 7 //Transferencia
			fa100tran("SE5",SE5->(RecNo()),3,,aAutoCab)

		ElseIf nOpcAuto == 8 //Estorno Transferencia
			Fa100Est(aAutoCab)

		ElseIf nOpcAuto == 9 //Classificação
			FA100Clas("SE5",SE5->(RecNo()),9)

		EndIf

	EndIf

	If !Empty(cCondicao)
		EndFilBrw("SE5",aIndex)
		Retindex("SE5")
	Endif

	If !lF100Auto
		Set Key VK_F12 To RestInter()
	EndIf

Return



//-----------------------------------------------------------------------------------------------------
/*/{Protheus.doc} fA100Pag
Inclusão de movimento bancário manual - PAGAR

@param cAlias	- Alias do arquivo 
@param nReg		- Numero do registro
@param nOpc		- Data a ser validada

@author Wagner Xavier 
@since 03/06/1992
@version 12
/*/
//-----------------------------------------------------------------------------------------------------
Function fA100Pag(cAlias As Character, nReg As Numeric, nOpc As Numeric) As Logical

	Local lPanelFin 	:= IsPanelFin()
	Local nOpca			:= 0
	Local lPadrao		:= .F.
	Local cPadrao		:= ""
	Local nHdlPrv		:=0
	Local nTotal		:=0
	Local lMostra		:= .F.
	Local lAglutina		:= .F.
	Local cArqRat		:= ""
	Local lFa100Pag		:= Existblock("FA100PAG")
	Local lMovBco		:= .T.
	Local cSeq			:= ""
	Local aButtons		:= {}
	Local lRet			:= .T.
	Local lFindITF 		:= .T.
	Local aFlagCTB 		:= {}
	Local lUsaFlag		:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
	Local cCondFiltro	:= ""
	Local nA			:= 0
	Local nValCheques	:= 0.00
	Local aCposF472		:= {}
	Local aCheque   	:= {}
	Local aCheqTerc 	:= {}
	Local lGerouCh		:= .F.
	Local oModelMov 	:= NIL //FWLoadModel("FINM030") //Model de movimentos
	Local oSubFK5		:= NIL
	Local oSubFKA		:= NIL
	Local oSubFK8		:= NIL
	Local cChaveSF1		:= ""
	Local cCamposE5		:= ""
	Local cLog			:= ""
	Local cChaveTit		:= ""
	Local cChaveFK7		:= ""
	Local cMoedaBnc		:= ""
	Local nValorConv	:= 0
	Local nRecSe5		:= 0
	Local lUsaFRE		:= SUPERGETMV('MV_USEFRE',.T.,.F.) 	// Usa talonario tabela FRE
	Local aRetInteg 	:= {}
	Local dDtLanc	 	:= dDataBase

	pergunte("AFI100",.F.)

	PRIVATE bPMSDlgMB	:= {||PmsDlgMB(3,M->E5_PROJPMS,M->E5_HISTOR,"P")}
	PRIVATE aRatAJE		:= {}
	PRIVATE nSaveSx8Len := GetSx8Len()
	PRIVATE cSeqCv4		:= ""
	PRIVATE cCodDiario 	:= ""
	/*
	nota de debito */
	PRIVATE cNumNota	:= ""
	PRIVATE cSerNota	:= ""
	PRIVATE cEspNota	:= ""
	PRIVATE nValBrut	:= 0

	//Implementacao do Execauto
	PRIVATE lF100Auto := If(Type('lF100Auto') <> 'L',.F.,lF100Auto)

	PRIVATE cEletrCh	:= " 12" //Varíavel para validação comum com a Ordem de Pago - Talonário - Argentina
	PRIVATE cSE5IdMov	:= ''

	DEFAULT lEAIA100 	:= FWHasEAI("FINA100", .T.,, .T.)
	DEFAULT lPmsInt		:= IsIntegTop(,.T.)

	F100Metric(PROCNAME())

	If nOpc == 3 // inclusao
		cSeqCv4 := GetSx8Num("CV4", "CV4_SEQUEN")
	EndIf

	//ITF não se aplica ao Brasil
	If cPaisLoc == "BRA"
		lFindITF := .F.
	Endif

	lPagar      := .T.
	lReceber    := .F.

	cRecPag:="P"
	dbSelectArea( cAlias )

	// Inclui o botao de Apontamento no SIGAPMS
	If IntePMS().AND. !lPmsInt
		SetKey(VK_F10, {|| Eval(bPmsDlgMB)})
		aButtons := {{'PROJETPMS',{|| Eval(bPmsDlgMB) },STR0045,STR0062}} //"Gerenciamento de Projetos" //"Projetos"
	EndIf

	// Inicia lancamento no PCO
	PcoIniLan('000007')

	//Inclusão de novos botoes
	If ExistBlock ("F100BTOP")
		aButtons:= ExecBlock("F100BTOP",.F.,.F.,{aButtons})
	EndIf

	If FunName() == "FINA472"		//Se executada pela rotina extrato, indica para essa rotina a inclusao de movimento financeiro
		F472DadosMov(.F.,"INCMOV")
	Endif

	Begin Transaction
	If !lF100Auto
		If lPanelFin
				dbSelectArea("SE5")
				RegToMemory("SE5",.T.,,,FunName())
				oPanelDados := FinWindow:GetVisPanel()
				oPanelDados:FreeChildren()
				aDim := DLGinPANEL(oPanelDados)
				Inclui := .T.
				nOpca := AxInclui(cAlias,nReg,nOpc,,,,"F100VlPe('P') .And. Fa100Bco() .And. ValNat() .And. (M->E5_RATEIO=='N' .Or. FA050TudCT("+Str(nOpc,2)+",'516','FINA100'"+")).And.PcoVldLan('000007','03','FINA100')",,,aButtons,{ {||.T.},{||.T.},{||.T.},{|| GravaFKs()} },,,,,.T.,oPanelDados,aDim,FinWindow)
		Else
			If cPaisLoc == "DOM"
				nOpca := AxInclui(cAlias,nReg,nOpc,,,,"F100VlPe('P') .And. Fa100Bco() .And. (M->E5_RATEIO=='N' .and. FA100V01(M->E5_VALOR,M->E5_MOEDA) .Or. FA050TudCT("+Str(nOpc,2)+",'516','FINA100'"+")).And.PcoVldLan('000007','03','FINA100') .and. FA100V01(M->E5_VALOR,M->E5_MOEDA)",,"Fa100Grv()",aButtons,{ {||.T.},{||.T.},{||.T.},{|| GravaFKs()} })
			ElseIf !(cPaisLoc == "BRA")
				If FunName() == "FINA472"		//Se executada pela rotina de extrato, inicializa os valores do movimento.
					aCposF472 := FA100Cpos('P')
					F472CposMov(@aCposF472)
					nOpca := AxInclui(cAlias,nReg,nOpc,,"F472MovFin()",aCposF472,"F100VlPe('P') .And. Fa100Bco() .And. Fa100TudoOK() .And. (M->E5_RATEIO=='N' .Or. FA050TudCT("+Str(nOpc,2)+",'516','FINA100'"+")).And.PcoVldLan('000007','03','FINA100')",,"Fa100Grv()",aButtons,{ {||.T.},{||.T.},{||.T.},{|| GravaFKs()} })
				Else
					nOpca := AxInclui(cAlias,nReg,nOpc,,,FA100Cpos('P'),"F100VlPe('P') .And. Fa100Bco() .And. FA100Bloq() .And. Fa100TudoOK() .And. (M->E5_RATEIO=='N' .Or. FA050TudCT("+Str(nOpc,2)+",'516','FINA100'"+")).And.PcoVldLan('000007','03','FINA100')",,"Fa100Grv()",aButtons,{ {||.T.},{||.T.},{||.T.},{|| GravaFKs()} })
				Endif
			Else
				nOpca := AxInclui(cAlias,nReg,nOpc,,,,"F100VlPe('P') .And. Fa100Bco() .And. ValNat() .And. FA100Bloq() .And. (M->E5_RATEIO=='N' .Or. FA050TudCT("+Str(nOpc,2)+",'516','FINA100'"+")).And.PcoVldLan('000007','03','FINA100')",,"",aButtons,{ {||.T.},{||.T.},{||.T.},{|| lRet := GravaFKs()} })
			EndIf
		Endif
	Else
		Inclui := .T.
		//Implementações para leitura dos parâmetros informados via ExecAuto para substituir o SX1 "AFI100" para execução da rotina
		If (nPosAuto := AScan(aAutoCab, {|campo| Upper(campo[1]) == "NCTBONLINE"})) > 0
			MV_PAR04 :=	IIf(ValType(aAutoCab[nPosAuto][2]) == "N", aAutoCab[nPosAuto][2], MV_PAR04)
		EndIf

		nOpc  := 3
		nOpca := AxIncluiAuto(cAlias,"F100VlPe('P') .And. Fa100Bco() .And. FA100Bloq() .And. (M->E5_RATEIO=='N' .Or. FA050TudCT("+Str(3,2)+",'516','FINA100'"+")).And.PcoVldLan('000007','03','FINA100')")
		//Se gravou SE5 na inclusão automatica, grava as FKs
		If nOpca = 1
			GravaFKs(.T.)
		Endif
	EndIf

	If nOpca == 1 .And. lRet
		cCondFiltro := cCondicao
		If FunName() == "FINA472"
			/* Se executada pela rotina extrato, registra o movimento para a conciliacao. */
			F472DadosMov(SE5->(Recno()),"SE5")
		Else
			/* A propria FINA472 gera o documento fiscal */
			If cPaisLoc == "ARG"
				If SE5->E5_TIPOMOV == "01"				//Despesas Bancárias --> geracao de nota de debito
					aRegSE5 := {SE5->(Recno())}
					bFunAuto := {|| A095DadosND(SE5->E5_CLIFOR,SE5->E5_LOJA,aRegSE5,"SE5","E5_VALOR",.F.,.F.)}
					/*
					As variaveis com os dados da nota sao declaradas como private para estarem disponiveis para o bloco de validacao preenche-las apos a
					finalizacao da digitacao da ND. */
					cNumNota	:= ""
					cSerNota	:= ""
					cEspNota	:= ""
					nValBrut	:=	0
					Mata101n(,,,,3,10)
					SE5->(DbGoTo(aRegSE5[1]))
					If !Empty(cNumNota)
						cSerNota := PadR(cSerNota,SerieNfId('SF1',6,'F1_SERIE') )

						//Define os campos que não existem na FK5 e que serão gravados apenas na E5, para que a gravação da E5 continue igual
						cCamposE5 := "{"
						cCamposE5 += "{'E5_NUMERO', '"  + cNumNota + "'}"
						cCamposE5 += ",{'E5_PREFIXO', '"  + cSerNota + "'}"
						cCamposE5 += ",{'E5_MOVFKS', 'S'}"
						cCamposE5 += "}"

						oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG )
						oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
						oModelMov:Activate()
						oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
						oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5

						//Posiciona a FKA com base no IDORIG da SE5 posicionada
						oSubFKA := oModelMov:GetModel( "FKADETAIL" )
						If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

							//Dados do movimento
							oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
							oSubFK5:SetValue( "FK5_VALOR", nValBrut ) //Atualiza o valor do movimento devido a possivel adicao de impostos

							//Dados da nota de débito
							cChaveSF1 := xFilial("SE2") + "|" +  SE2->E2_PREFIXO + "|" + SE2->E2_NUM + "|" + SE2->E2_PARCELA + "|" + ;
										SE2->E2_TIPO + "|" + SE2->E2_FORNECE + "|" + SE2->E2_LOJA
							cIdDoc := FINGRVFK7("SF1", cChaveSF1)
							oSubFK5:SetValue( "FK5_IDDOC", cIdDoc )

							If oModelMov:VldData()
							oModelMov:CommitData()
							Else
								lRet := .F.
								cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
								cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
								cLog += cValToChar(oModelMov:GetErrorMessage()[6])
								Help(,,"MF100PAG1",,cLog, 1, 0 )
							Endif
						Endif
						oModelMov:DeActivate()
						oModelMov:Destroy()
						oModelMov := NIL

					Else

						oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG )
						oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
						oModelMov:Activate()
						oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
						oModelMov:SetValue( "MASTER", "E5_OPERACAO", 3 ) //E5_OPERACAO 3 = Deleta da SE5 e gera estorno na FK5

						//Posiciona a FKA com base no IDORIG da SE5 posicionada
						oSubFKA := oModelMov:GetModel( "FKADETAIL" )
						If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

							If oModelMov:VldData()
								oModelMov:CommitData()
							Else
								lRet := .F.
								cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
								cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
								cLog += cValToChar(oModelMov:GetErrorMessage()[6])
								Help(,,"MF100PAG2",,cLog, 1, 0 )
							Endif
							oModelMov:DeActivate()
							oModelMov:Destroy()
							oModelMov := NIL
						Endif
						If lRet
							cCondicao := cCondFiltro
							If Type("bFiltraBrw") == "B"
								Eval( bFiltraBrw )
							EndIf
						Endif

						lRet := .F.
					EndIf
				EndIf
			EndIf
		Endif

		If lRet

			cCondicao := cCondFiltro

			// Posiciona arquivo Naturezas
			dbSelectArea("SED")
			dbSeek(xFilial("SED")+SE5->E5_NATUREZ)

			If lPagar

				// Seleciona o cheque com base no Banco, Agencia, Conta e Numero do Talão.
				FJS->(dbSetOrder(1))
				FJS->(dbSeek(xFilial("FJS")+SE5->E5_TIPO))

				If FJS->FJS_TIPOIN == "CH" .and. lUsaFRE
					If AllTrim(FJS->FJS_CARTE) $ "23" .And. AllTrim(FJS->FJS_TERCEI) $ "14"	//Proprio ou Terceiro
						//Emitir cheque próprio do Total do movimento.
						aCheque := fA100SetCheque(SE5->E5_VALOR)
						lGerouCh := Len(aCheque) > 0
					Else
						If AllTrim(FJS->FJS_CARTE) $ "23" .And. FJS->(Found()) .and. AllTrim(FJS->FJS_TERCEI) $ "23"	//Aceita Cheque de Terceiro
							nValCheques := 0.00
							aCheqTerc := fA100GetCheques()   			//Selecionar os cheques de Terceiros
							For nA := 1 To Len(aCheqTerc)
								nValCheques += aCheqTerc[nA][8]
							Next nA
							If SE5->E5_VALOR > nValCheques
								//Emitir cheque próprio do Total ou a diferença do Valor de SE5 subtraindo o cheques de Terceiros.
								aCheque := fA100SetCheque(SE5->E5_VALOR - nValCheques)
							EndIf
							lGerouCh := Len(aCheqTerc) > 0 .Or. Len(aCheque) > 0
						EndIf
					EndIf
					If !lGerouCh // Se não gerou o cheque, aborta a operação e estorna o registro do movimento bancário

						oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG )
						oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
						oModelMov:Activate()
						oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
						oModelMov:SetValue( "MASTER", "E5_OPERACAO", 3 ) //E5_OPERACAO 3 = Deleta da SE5 e gera extorno na FK5

						//Posiciona a FKA com base no IDORIG da SE5 posicionada
						oSubFKA := oModelMov:GetModel( "FKADETAIL" )
						If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

							If oModelMov:VldData()
								oModelMov:CommitData()
							Else
								lRet := .F.
								cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
								cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
								cLog += cValToChar(oModelMov:GetErrorMessage()[6])
								Help(,,"MF100PAG4",,cLog, 1, 0 )
							Endif
						Endif
						oModelMov:DeActivate()
						oModelMov:Destroy()
						oModelMov := NIL

						cCondicao := cCondFiltro
						If Type("bFiltraBrw") == "B"
							Eval( bFiltraBrw )
						EndIf

						lRet := .F.
					EndIf
				EndIf

			EndIf

			If lRet
				//-----------------------------------
				// Grava o Novo Cheque emitido
				//-----------------------------------
				If SE5->E5_MOEDA $ "C1|C2|C3|C4|C5|CH"
					fA100Cheq("FINA100PAG",aCheque,aCheqTerc)
				EndIf

				//Altera o tipo do documento selecionado, utilizando o tipo interno do modo de pago
				dbSelectArea("FJS")
				FJS->(dbSetOrder(1))
				If FJS->(dbSeek(xFilial("FJS")+SE5->E5_TIPO))

					cCamposE5 := "{{'E5_TIPO', FJS->FJS_TIPOIN}"
					cCamposE5 += ",{'E5_MOVFKS', 'S'}"
					cCamposE5 += "}"

					oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG )
					oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
					oModelMov:Activate()
					oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
					oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 )

					//Posiciona a FKA com base no IDORIG da SE5 posicionada
					oSubFKA := oModelMov:GetModel( "FKADETAIL" )
					If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

						If oModelMov:VldData()
							oModelMov:CommitData()
						Else
							lRet := .F.
							cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[6])
							Help(,,"MF100PAG5",,cLog, 1, 0 )
						Endif
					Endif
					oModelMov:DeActivate()
					oModelMov:Destroy()
					oModelMov := NIL

				EndIf

				//---------------------------------------------------------------
				// Se for cheque pre-datado, gera titulos de cheques
				//---------------------------------------------------------------
				IF ( SE5->E5_MOEDA $ "C1|C2|C3|C4|C5" .And. SE5->E5_VENCTO > SE5->E5_DATA .And.;
					!Empty(SE5->E5_NUMCHEQ) .And. Substr(SE5->E5_NUMCHEQ,1,1) != "*")

					fA100TitPg()

					//Dados da tabela auxiliar com o código do título a pagar
					cChaveTit := xFilial("SE2") + "|" +  SE2->E2_PREFIXO + "|" + SE2->E2_NUM + "|" + SE2->E2_PARCELA + "|" + ;
									SE2->E2_TIPO + "|" + SE2->E2_FORNECE + "|" + SE2->E2_LOJA
					cChaveFK7 := FINGRVFK7("SE2", cChaveTit)

					//Define os campos que não existem nas FKs e que serão gravados apenas na E5, para que a gravação da E5 continue igual
					cCamposE5 := "{"
					cCamposE5 += "{'E5_PREFIXO' , SE2->E2_PREFIXO}"
					cCamposE5 += ",{'E5_NUMERO' , SE2->E2_NUM}"
					cCamposE5 += ",{'E5_PARCELA', SE2->E2_PARCELA}"
					cCamposE5 += ",{'E5_TIPO'   , SE2->E2_TIPO}"
					cCamposE5 += ",{'E5_FORNECE', SE2->E2_FORNECE}"
					cCamposE5 += ",{'E5_CLIFOR' , SE2->E2_FORNECE}"
					cCamposE5 += ",{'E5_LOJA'   , SE2->E2_LOJA}"
					cCamposE5 += ",{'E5_MOVFKS' , 'S'}"
					cCamposE5 += ",{'E5_TIPODOC', 'CD'}"
					cCamposE5 += "}"

					oModelMov := FWLoadModel("FINM030") //Recarrega o Model de baixas a pagar para pegar o campo do relacionamento (SE5->E5_IDORIG )
					oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
					oModelMov:Activate()
					oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
					oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5

					//Posiciona a FKA com base no IDORIG da SE5 posicionada
					oSubFKA := oModelMov:GetModel( "FKADETAIL" )
					If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

						oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
						oSubFK5:SetValue( "FK5_TPDOC", "CD" )
						oSubFK5:SetValue( "FK5_IDDOC", cChaveFK7 )

						If oModelMov:VldData()
							oModelMov:CommitData()
						Else
							lRet := .F.
							cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[6])
							Help(,,"MF100PAG6",,cLog, 1, 0 )
						Endif
					Endif
					oModelMov:DeActivate()
					oModelMov:Destroy()
					oModelMov := NIL

				Endif

				If lRet
					If SE5->E5_MOEDA$"C1/C2/C3/C4/C5/CH"
						If !(cPaisLoc == "BRA")
							lMovBco := Empty(aCheque)
						Else
							If (Empty(SE5->E5_NUMCHEQ) .or. Substr(SE5->E5_NUMCHEQ,1,1)=="*")
								lMovBco := .f.
							Endif
						Endif
					Endif

					IF SE5->E5_VENCTO <= SE5->E5_DATA .and. lMovBco
						//---------------------------------------------------------------
						// Atualiza Saldo Bancario
						//---------------------------------------------------------------
						AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,SE5->E5_DATA,SE5->E5_VALOR,"-")
						If mv_par04 == 2
							If cPaisLoc <> "BRA"
								If lFindITF .And. FinProcITF( SE5->( Recno() ),1 ) .and. lRetCkPG(3,,SE5->E5_BANCO)
									FinProcITF( SE5->( Recno() ),3,, .F.,{} ,  )
								EndIf
							EndIf	
						EndIf
					EndIf

					SA6->( DbSetOrder(1) )
					SA6->( dbSeek( xFilial() + SE5->E5_BANCO + SE5->E5_AGENCIA + SE5->E5_CONTA ) )
					cMoedaBnc  := StrZero( Max(SA6->A6_MOEDA, 1 ), 2)
					nValorConv := Iif (Empty(SE5->E5_TXMOEDA), SE5->E5_VALOR, SE5->E5_VALOR * SE5->E5_TXMOEDA)

					AtuSldNat(SE5->E5_NATUREZ, SE5->E5_DATA, cMoedaBnc, "3", "P", SE5->E5_VALOR, nValorConv, "+",,FunName(),"SE5", SE5->(Recno()),nOpc)

					//---------------------------------------------
					// Atualizacao dos dados do Modulo SIGAPMS
					//---------------------------------------------
					PmsWriteMB(1,"SE5")

					cPadrao:=IIF(SE5->E5_RATEIO=="S","516","562")
					lPadrao:=VerPadrao(cPadrao)
					nRecSe5 := SE5->(RECNO())

					//---------------------------------------------
					// Lacncamento orcamentario
					//---------------------------------------------
					PcoDetLan("000007","03","FINA100")
					If mv_par04 == 1
						//--------------------------------------------------------------
						// Lançamento Contabil
						//--------------------------------------------------------------
						IF lPadrao
							IF cPadrao == "516"
								If !CtbInUse()
									cArqRat := fa050rate( cPadrao , "FINA100", "I" )

									oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG )
									oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
									oModelMov:Activate()
									oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5

									//Posiciona a FKA com base no IDORIG da SE5 posicionada
									oSubFKA := oModelMov:GetModel( "FKADETAIL" )
									If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

										//Dados Contábeis
										oSubFK8 := oModelMov:GetModel("FK8DETAIL")
										oSubFK8:SetValue( "FK8_ARQRAT", cArqRat )

										If oModelMov:VldData()
											oModelMov:CommitData()
										Else
											lRet := .F.
											cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
											cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
											cLog += cValToChar(oModelMov:GetErrorMessage()[6])
											Help(,,"MF100PAG7",,cLog, 1, 0 )
										Endif
									Endif
									oModelMov:DeActivate()
									oModelMov:Destroy()
									oModelMov := NIL

								Else
									cSeq := Fa050GerLc( cPadrao, cLote,	"FINA100" /*cPrograma*/, 3 /*nOpc*/, @nHdlPrv, @nTotal,;
												@aFlagCTB, "000007" /*cProcPCO*/, "05" /*cItemPCO*/, "P" /*cRecPag*/, /*aRecCV4*/, lUsaFlag )

									If !Empty(cSeq)

										oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG )
										oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
										oModelMov:Activate()
										oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5

										//Posiciona a FKA com base no IDORIG da SE5 posicionada
										oSubFKA := oModelMov:GetModel( "FKADETAIL" )
										If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

											//Dados Contábeis
											oSubFK8 := oModelMov:GetModel("FK8DETAIL")
											oSubFK8:SetValue( "FK8_ARQRAT", cSeq )

											If oModelMov:VldData()
												oModelMov:CommitData()
											Else
												lRet := .F.
												cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
												cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
												cLog += cValToChar(oModelMov:GetErrorMessage()[6])
												Help(,,"MF100PAG8",,cLog, 1, 0 )
											Endif
										Endif
										oModelMov:DeActivate()
										oModelMov:Destroy()
										oModelMov := NIL

									EndIf
								EndIf

								If lRet
									//realizo a apuracao de ITF sem lancamento contabil, pois nao sera utilziada no rateio
									If cPaisLoc <> "BRA"
										If lFindITF .And. FinProcITF( SE5->( Recno() ),1 ) .and. lRetCkPG(3,,SE5->E5_BANCO)
											FinProcITF( SE5->( Recno() ),3,, .F.,{} ,  )
										EndIf
									EndIf	
								Endif
							Else
								//---------------------------------------------
								// Inicializa Lancamento Contabil
								//---------------------------------------------
								nHdlPrv := HeadProva( cLote, "FINA100" /*cPrograma*/, Substr( cUsuario, 7, 6 ), @cArquivo )

								//---------------------------------------------
								// Prepara Lancamento Contabil
								//---------------------------------------------
								If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
									aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
								Endif
								nTotal += DetProva( nHdlPrv, cPadrao, "FINA100" /*cPrograma*/, cLote, /*nLinha*/, /*lExecuta*/,;
											/*cCriterio*/, /*lRateio*/, /*cChaveBusca*/, /*aCT5*/, /*lPosiciona*/, @aFlagCTB,;
											/*aTabRecOri*/, /*aDadosProva*/ )
								If cPaisLoc <> "BRA"
									If lFindITF .And. FinProcITF( SE5->( Recno() ),1 ) .and. lRetCkPG(3,,SE5->E5_BANCO)
										FinProcITF( SE5->( Recno() ),3,, .F.,{ nHdlPrv, cPadrao, "", "FINA100", cLote } , @aFlagCTB )
									EndIf
								EndIf	

								If UsaSeqCor()
									cCodDiario := SE5->E5_DIACTB
									nRecSe5 := SE5->(RECNO())
									aDiario := {{"SE5",nRecSe5,cCodDiario,"E5_NODIA","E5_DIACTB"}}
								Else
									aDiario := {}
								Endif

								//---------------------------------------------
								// Efetiva Lan‡amento Contabil
								//---------------------------------------------
								lMostra	 := If( mv_par02 == 1, .T., .F. )
								lAglutina := If( mv_par01 == 1, .T., .F. )

								RodaProva( nHdlPrv, nTotal )

								dDtLanc := dDataBase
								If SuperGetMv("MV_DTCNMOV",.F.,'1') == '2' // Data de contabilização movimento bancário; 1 = database (default); 2 - Data do Movimento
									dDtLanc	 := SE5->E5_DATA 
								EndIf							

								cA100Incl( cArquivo, nHdlPrv, 3 /*nOpcx*/, cLote, lMostra /*lDigita*/, lAglutina /*lAglut*/,;
											/*cOnLine*/, dDtLanc, /*dReproc*/, @aFlagCTB, /*aDadosProva*/, aDiario )
								aFlagCTB := {} // Limpa o coteudo apos a efetivacao do lancamento
							Endif

							SE5->(dbGoto(nRecSe5))

							If !lUsaFlag

								RecLock("SE5")
								SE5->E5_LA := 'S'
								SE5->E5_MOVFKS := 'S'
								SE5->(MsUnlock())

								FK5->(dbSetOrder(1))
								If FK5->(MsSeek(xFilial("FK5",SE5->E5_FILORIG)+ SE5->E5_IDORIG ))
									RecLock("FK5")
									FK5->FK5_LA := 'S'
									FK5->(MsUnlock())
								EndIf
								dbSelectarea("SE5")
							Endif

							If lRet
								IF SE5->E5_MOEDA $ "C1|C2|C3|C4|C5"
									If !Empty(SEF->EF_NUM)
										Reclock("SEF")
										SEF->EF_LA := "S"
										MsUnLock()
									EndIf
								EndIf
							Endif

						Endif
					Else
						IF lPadrao .And. cPadrao == "516" .And. CtbInUse()
							cSeq := Fa050GerLc( cPadrao,	cLote, "FINA100" /*cPrograma*/,	3 /*nOpc*/, NIL /*nHdlPrv*/,	NIL /*nTotal*/,;
										@aFlagCTB, "000007" /*cProcPCO*/,	"05" /*cItemPCO*/, "P" /*cRecPag*/,	/*aRecCV4*/, lUsaFlag )

							If !Empty(cSeq)

								oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG )
								oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
								oModelMov:Activate()
								oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5

								//Posiciona a FKA com base no IDORIG da SE5 posicionada
								oSubFKA := oModelMov:GetModel( "FKADETAIL" )
								If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

									//Dados Contábeis
									oSubFK8 := oModelMov:GetModel("FK8DETAIL")
									oSubFK8:SetValue( "FK8_ARQRAT", cSeq )

									If oModelMov:VldData()
										oModelMov:CommitData()
									Else
										lRet := .F.
										cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
										cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
										cLog += cValToChar(oModelMov:GetErrorMessage()[6])
										Help(,,"MF100PAG10",,cLog, 1, 0 )
									Endif
								Endif
								oModelMov:DeActivate()
								oModelMov:Destroy()
								oModelMov := NIL

							EndIf
						EndIf
					Endif

					If Empty(SE5->E5_ARQRAT) .And. SE5->E5_RATEIO == "S" .And. (!Empty(cSeq) .OR. !Empty(cArqRat))
						cCamposE5 := "{"
						cCamposE5 += "{'E5_ARQRAT',  '" + Iif(!Empty(cArqRat), cArqRat, cSeq) +"'}"
						cCamposE5 += "}"

						oModelMov := FWLoadModel("FINM030")
						oModelMov:SetOperation( MODEL_OPERATION_UPDATE )
						oModelMov:Activate()
						oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
						oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 )

						If oModelMov:VldData()
							oModelMov:CommitData()
							oModelMov:DeActivate()
						EndIf
					EndIf

					//---------------------------------------------
					// Executa ponto de entrada
					//---------------------------------------------
					If lFa100Pag
						Execblock("FA100PAG",.f.,.f.)
					Endif
					SE5->(MsUnlock())

					If FunName() == "FINA472"
						F472DadosMov(.T.,"INCMOV")	//indica para FINA472 a inclusao de movimento financeiro
					Endif
				Endif
			Endif
		Endif
	Endif

	If lRet
		PcoFinLan('000007')
		PcoFreeBlq('000007')
		If cPaisLoc <> "BRA" .And. Type("bFiltraBrw") == "B"
			Eval( bFiltraBrw )
		Endif

		// Verifica o arquivo de rateio, e apaga o arquivo temporario
		// para que no proximo rateio seja criado novamente
		If Select("TMP") > 0
			DbSelectArea( "TMP" )
			cArqRat := DbInfo(DBI_FULLPATH)
			cArqRat := AllTrim(SubStr(cArqRat,Rat("\",cArqRat)+1))
			DbCloseArea()
			FErase(cArqRat)
		EndIf

		If IntePMS().AND. !lPmsInt
			SetKey(VK_F10, Nil)
		EndIf

		// Integração EAI.
		If lEAIA100 .and. nOpca == 1
			SetMsgOpc(nOpc)
			aRetInteg := FwIntegDef('FINA100',,,, 'FINA100')
			// Se der erro no envio da integração, então faz rollback e apresenta mensagem em tela para o usuário.
			If !aRetInteg[1]
				Help(,, "FINA100INTEG",, STR0146 + AllTrim(aRetInteg[2]), 1, 0,,,,,, {STR0147}) // "O movimento bancário não será gravado pois ocorreu um erro na integração: ", "Verifique as configurações da integração EAI."
				lRet := .F.
			EndIf
		Endif
	Endif

	If !lRet
		DisarmTransaction()
	Endif
	End Transaction


	if nOpca == 1
	MBrChgLoop(.T.)
	endif

	//Restaura variaveis publicas alteradas na operação de UPDATE do model FINM030
	INCLUI := .T.
	ALTERA := .F.


Return lRet /*Function fA100Pag*/

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FA100Rec  ³ Autor ³ Wagner Xavier         ³ Data ³ 03/06/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa para inclusao de Movimento a Receber              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FA100Rec(ExpC1,ExpN1,ExpN2)                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Numero da opcao selecionada                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA100Rec(cAlias As Character, nReg As Numeric, nOpc As Numeric) As Logical
	Local lPanelFin := IsPanelFin()
	Local lPadrao,cPadrao:="563",nHdlPrv:=0,nTotal:=0
	Local nOpca
	Local lMostra,lAglutina
	Local cArqRat
	Local aButtons
	Local lFa100Rec := Existblock("FA100REC")
	Local lCalTroco := Existblock("FINATROC")
	Local lMovBco   :=.T.
	Local lRet:= .T.

	Local aFlagCTB := {}
	Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
	Local lFindITF := If(cPaisLoc=="DOM",.F.,.T.)
	Local lAtuSldNat := .T.

	Local oModelMov := NIL //FWLoadModel("FINM030") //Model de movimentos
	Local oSubFK5
	Local oSubFKA
	Local oSubFK8
	Local cChaveSF2 := ""
	Local cCamposE5 := ""
	Local cLog := ""
	Local cSeq := ""
	Local cMoedaBnc  := ""
	Local nValorConv := 0
	Local aRetInteg  := {}
	Local dDtLanc	 := dDataBase

	pergunte("AFI100",.F.)

	PRIVATE bPMSDlgMB	:= {||PmsDlgMB(3,M->E5_PROJPMS,M->E5_HISTOR,"R")}
	PRIVATE aRatAJE		:= {}

	PRIVATE nSaveSx8Len := GetSx8Len()
	PRIVATE cSeqCv4		:= ""
	PRIVATE cCodDiario  := ""

	// Nota de débito
	PRIVATE cNumNota	:= ""
	PRIVATE cSerNota	:= ""
	PRIVATE cEspNota	:= ""
	Private nValBrut	:=	0
	Private cPrefixNF	:= ""

	//Implementacao do Execauto
	PRIVATE lF100Auto := If(Type('lF100Auto') <> 'L',.F.,lF100Auto)

	Default lPmsInt		:= IsIntegTop(,.T.)
	Default lEAIA100 	:= FWHasEAI("FINA100", .T.,, .T.)

	F100Metric(PROCNAME())

	cSeqCv4 := GetSx8Num("CV4", "CV4_SEQUEN")
	cRecPag := "R"

	//ITF não se aplica ao Brasil
	If cPaisLoc == "BRA"
		lFindITF := .F.
	Endif

	lPagar      := .F.
	lReceber    := .T.

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inclui o botao de Apontamento no SIGAPMS                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IntePMS().AND. !lPmsInt
		SetKey(VK_F10, {|| Eval(bPmsDlgMB)})
		aButtons := {{'PROJETPMS',{|| Eval(bPmsDlgMB) },STR0045,STR0062}} //"Gerenciamento de Projetos" //"Projetos"
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicia lancamento no PCO                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoIniLan('000007')

	//Inclusão de novos botoes
	If ExistBlock ("F100BTOR")
		aButtons:= ExecBlock("F100BTOR",.F.,.F.,{aButtons})
	EndIf

	dbSelectArea( cAlias )

	If FunName() == "FINA472"		//Se executada pela rotina extrato, indica para essa rotina a inclusao de movimento financeiro
		F472DadosMov(.F.,"INCMOV")
	Endif

	Begin Transaction
	If !lF100Auto

		If lPanelFin
			dbSelectArea("SE5")
			RegToMemory("SE5",.T.,,,FunName())
			oPanelDados := FinWindow:GetVisPanel()
			oPanelDados:FreeChildren()
			aDim := DLGinPANEL(oPanelDados)
			Inclui := .T.
			nOpca := AxInclui(cAlias,nReg,nOpc,,,,"F100VlPe('R') .And. Fa100Bco() .And. ValNat() .And. (M->E5_RATEIO=='N' .Or. FA050TudCT("+Str(nOpc,2)+",'517','FINA100'"+"))"	,,,aButtons,{ {||.T.},{||.T.},{||.T.},{|| GravaFKs()} },,,,,.T.,oPanelDados,aDim,FinWindow)
		Else
			If !(cPaisLoc == "BRA")
				If FunName() == "FINA472"		//Se executada pela rotina de extrato, inicializa os valores do movimento.
					aCposF472 := FA100Cpos('R')
					F472CposMov(@aCposF472)
					nOpca := AxInclui(cAlias,nReg,nOpc,,"F472MovFin()",aCposF472,"F100VlPe('R') .And. Fa100Bco() .And. Fa100TudoOK() .And. (M->E5_RATEIO=='N' .Or. FA050TudCT("+Str(nOpc,2)+",'517','FINA100'"+")).And.PcoVldLan('000007','03','FINA100')",,"Fa100Grv()",aButtons, { {||.T.},{||.T.},{||.T.},{|| GravaFKs()} })
				Else
					nOpca := AxInclui(cAlias,nReg,nOpc,,,FA100Cpos('R'),"F100VlPe('R') .And. Fa100Bco() .And. FA100Bloq() .And. Fa100TudoOK() .And. (M->E5_RATEIO=='N' .Or. FA050TudCT("+Str(nOpc,2)+",'517','FINA100'"+")).And.PcoVldLan('000007','03','FINA100')",,"Fa100Grv()",aButtons, { {||.T.},{||.T.},{||.T.},{|| GravaFKs()} })
				Endif
			Else
				nOpca := AxInclui(cAlias,nReg,nOpc,,,,"F100VlPe('R') .And. Fa100Bco() .And. ValNat() .And. FA100Bloq() .and. (M->E5_RATEIO=='N' .Or. FA050TudCT("+Str(nOpc,2)+",'517','FINA100'"+"))",,,aButtons, { {||.T.},{||.T.},{||.T.},{|| GravaFKs()} } )
			Endif
		Endif

	Else
		//Implementações para leitura dos parâmetros informados via ExecAuto para substituir o SX1 "AFI100" para execução da rotina
		If (nPosAuto := AScan(aAutoCab, {|campo| Upper(campo[1]) == "NCTBONLINE"})) > 0
			MV_PAR04 :=	IIf(ValType(aAutoCab[nPosAuto][2]) == "N", aAutoCab[nPosAuto][2], MV_PAR04)
		EndIf
		Inclui := .T.
		//Via Execauto
		nOpc  := 3
		nOpca := AxIncluiAuto(cAlias,"F100VlPe('R') .And. FA100Bloq() .And. Fa100Bco() .And. FA100TpBco(M->E5_TIPO,M->E5_BANCO,M->E5_AGENCIA,M->E5_CONTA)  .And. (M->E5_RATEIO=='N' .Or. FA050TudCT("+Str(nOpc,2)+",'517','FINA100'"+"))")
		//Se gravou SE5 na inclusão automatica, grava as FKs
		If nOpca = 1
			GravaFKs(.T.)
		Endif
	EndIf

	If nOpca == 1 .And. lRet
		cCondFiltro := cCondicao
		If FunName() == "FINA472"		//Se executada pela rotina extrato, registra o movimento para a conciliacao.
			F472DadosMov(SE5->(Recno()),"SE5")
		Endif
		If cPaisLoc == "ARG"
			If SE5->E5_TIPOMOV == "01"				//Despesas Bancárias --> geracao de nota fiscal
				aRegSE5 := {SE5->(Recno())}
				bFunAuto := {|| A096DadosND(SE5->E5_CLIFOR,SE5->E5_LOJA,aRegSE5,"SE5","E5_VALOR",.F.,.F.)}
				/*
				As variaveis com os dados da nota sao declaradas como private para estarem disponiveis para o bloco de validacao preenche-las apos a
				finalizacao da digitacao da ND. */
				cNumNota	:= ""
				cSerNota	:= ""
				cEspNota	:= ""
				nValBrut	:= 0
				Mata467n(,,,,3,1)
				SE5->(DbGoTo(aRegSE5[1]))
				If !Empty(cNumNota)
					cSerNota := PadR(cSerNota,SerieNfId('SF2',6,'F2_SERIE') )
					//Define os campos que não existem na FK5 e que serão gravados apenas na E5, para que a gravação da E5 continue igual
					cCamposE5 := "{"
					cCamposE5 += "{'E5_NUMERO', '"  + cNumNota + "'}"
					cCamposE5 += ",{'E5_PREFIXO', '"  + cSerNota + "'}"
					cCamposE5 += ",{'E5_MOVFKS', 'S'}"
					cCamposE5 += "}"

					oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG )
					oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
					oModelMov:Activate()
					oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
					oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5

					//Posiciona a FKA com base no IDORIG da SE5 posicionada
					oSubFKA := oModelMov:GetModel( "FKADETAIL" )
					If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

						//Dados do movimento
						oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
						oSubFK5:SetValue( "FK5_VALOR", nValBrut ) //Atualiza o valor do movimento devido a possivel adicao de impostos

						//Dados da nota
						cChaveSF2 := xFilial("SE2") + "|" +  SE2->E2_PREFIXO + "|" + SE2->E2_NUM + "|" + SE2->E2_PARCELA + "|" + ;
									SE2->E2_TIPO + "|" + SE2->E2_FORNECE + "|" + SE2->E2_LOJA
						cIdDoc := FINGRVFK7("SF2", cChaveSF2)
						oSubFK5:SetValue( "FK5_IDDOC", cIdDoc )

						If oModelMov:VldData()
						oModelMov:CommitData()
						Else
							lRet := .F.
							cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[6])
							Help(,,"MF100REC1",,cLog, 1, 0 )
						Endif
					Endif
					oModelMov:DeActivate()
					oModelMov:Destroy()
					oModelMov := NIL

				Else

					oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG )
					oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
					oModelMov:Activate()
					oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
					oModelMov:SetValue( "MASTER", "E5_OPERACAO", 3 ) //E5_OPERACAO 3 = Deleta da SE5 e gera estorno na FK5

					//Posiciona a FKA com base no IDORIG da SE5 posicionada
					oSubFKA := oModelMov:GetModel( "FKADETAIL" )
					If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

						If oModelMov:VldData()
							oModelMov:CommitData()
						Else
							lRet := .F.
							cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[6])
							Help(,,"MF100REC2",,cLog, 1, 0 )
						Endif
					Endif
					oModelMov:DeActivate()
					oModelMov:Destroy()
					oModelMov := NIL

					If lRet
						cCondicao := cCondFiltro
						If Type("bFiltraBrw") == "B"
							Eval( bFiltraBrw )
						EndIf
					Endif

					lRet := .F.
				EndIf
			EndIf
		EndIf

		If lRet
			cCondicao := cCondFiltro

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Posiciona arquivo Naturezas											³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SED")
			dbSeek(xFilial("SED")+SE5->E5_NATUREZ)

			If SE5->E5_MOEDA $ "C1þC2þC3þC4þC5" .and. SE5->E5_VENCTO > SE5->E5_DATA  .And.;
				(!Empty(SE5->E5_NUMCHEQ) .And. Substr(SE5->E5_NUMCHEQ,1,1) != "*")
				lMovBco := .F.
			EndIf

			If lRet

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Grava o Novo Cheque emitido											     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If cPaisLoc != "BRA"
					FJS->(dbSetOrder(1))
					FJS->(dbSeek(xFilial("FJS")+SE5->E5_TIPO))
					If SE5->E5_MOEDA $ "C1þC2þC3þC4þC5/CH" .and. FJS->FJS_TIPOIN == "CH"
						fA100Cheq("FINA100REC")
						lMovBco := .F. //Se for cheque, não atualiza o saldo bancário
					EndIf
				Else
					fA100Cheq("FINA100REC")
				EndIf

				//Altera o tipo do documento selecionado, utilizando o tipo interno do modo de pago.
				dbSelectArea("FJS")
				FJS->(dbSetOrder(1))
				If FJS->(dbSeek(xFilial("FJS")+SE5->E5_TIPO))

					cCamposE5 := "{{'E5_TIPO', FJS->FJS_TIPOIN}"
					cCamposE5 += ",{'E5_MOVFKS', 'S'}"
					cCamposE5 += "}"

					oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
					oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
					oModelMov:Activate()
					oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
					oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 )

					//Posiciona a FKA com base no IDORIG da SE5 posicionada
					oSubFKA := oModelMov:GetModel( "FKADETAIL" )
					If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

						If oModelMov:VldData()
							oModelMov:CommitData()
						Else
							lRet := .F.
							cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[6])
							Help(,,"MF100REC4",,cLog, 1, 0 )
						Endif
					Endif
					oModelMov:DeActivate()
					oModelMov:Destroy()
					oModelMov := NIL

				EndIf

				IF SE5->E5_VENCTO <= SE5->E5_DATA .and. lMovBco
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza Saldo Bancario												  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,SE5->E5_DATA,SE5->E5_VALOR,"+")
					If mv_par04 == 2
						If cPaisLoc <> "BRA"
							If lFindITF .And. FinProcITF( SE5->( Recno() ),1 ) .and. lRetCkPG(3,,SE5->E5_BANCO)
								FinProcITF( SE5->( Recno() ),3,, .F.,{} ,  )
							EndIf
						EndIf	
					EndIf
				Endif
				MsUnLock()

				If lAtuSldNat
					SA6->( DbSetOrder(1) )
					SA6->( dbSeek( xFilial() + SE5->E5_BANCO + SE5->E5_AGENCIA + SE5->E5_CONTA ) )

					cMoedaBnc  := StrZero( Max(SA6->A6_MOEDA, 1 ), 2)
					nValorConv := Iif (Empty(SE5->E5_TXMOEDA), SE5->E5_VALOR, SE5->E5_VALOR * SE5->E5_TXMOEDA)

					AtuSldNat(SE5->E5_NATUREZ, SE5->E5_DATA, cMoedaBnc, "3", "R", SE5->E5_VALOR, nValorConv, "+",,FunName(),"SE5", SE5->(Recno()),nOpc)
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualizacao dos dados do Modulo SIGAPMS    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				PmsWriteMB(1,"SE5")

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Lacncamento orcamentario                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				PcoDetLan("000007","04","FINA100")

				cPadrao:=IIF(SE5->E5_RATEIO=="S","517","563")
				lPadrao:=VerPadrao(cPadrao)

				If mv_par04 == 1
					//-------------------------------------------------------------
					// Lan‡amento Contabil
					//-------------------------------------------------------------
					If lPadrao
						IF cPadrao == "517"
							If !CtbInUse()
								cArqRat := fa050rate( cPadrao , "FINA100","I" )

								oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG )
								oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
								oModelMov:Activate()
								oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5

								//Posiciona a FKA com base no IDORIG da SE5 posicionada
								oSubFKA := oModelMov:GetModel( "FKADETAIL" )
								If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

									//Dados Contábeis
									oSubFK8 := oModelMov:GetModel("FK8DETAIL")
									oSubFK8:SetValue( "FK8_ARQRAT", cArqRat )

									If oModelMov:VldData()
										oModelMov:CommitData()
									Else
										lRet := .F.
										cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
										cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
										cLog += cValToChar(oModelMov:GetErrorMessage()[6])
										Help(,,"MF100REC5",,cLog, 1, 0 )
									Endif
								Endif
								oModelMov:DeActivate()
								oModelMov:Destroy()
								oModelMov := NIL

							Else

								cSeq := Fa050GerLc( cPadrao, cLote, "FINA100" /*cPrograma*/, 3 /*nOpc*/, @nHdlPrv, @nTotal,;
													@aFlagCTB, "000007" /*cProcPCO*/, "06" /*cItemPCO*/, "R" /*cRecPag*/,;
													/*aRecCV4*/, lUsaFlag )

								If !Empty(cSeq)

									oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
									oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
									oModelMov:Activate()
									oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5

									//Posiciona a FKA com base no IDORIG da SE5 posicionada
									oSubFKA := oModelMov:GetModel( "FKADETAIL" )
									If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

										//Dados Contábeis
										oSubFK8 := oModelMov:GetModel("FK8DETAIL")
										oSubFK8:SetValue( "FK8_ARQRAT", cSeq )

										If oModelMov:VldData()
											oModelMov:CommitData()
										Else
											lRet := .F.
											cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
											cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
											cLog += cValToChar(oModelMov:GetErrorMessage()[6])
											Help(,,"MF100REC6",,cLog, 1, 0 )
										Endif
									Endif
									oModelMov:DeActivate()
									oModelMov:Destroy()
									oModelMov := NIL

								EndIf
							EndIf

							If lRet
								//realizo a apuracao de ITF sem lancamento contabil, pois nao sera utilziada no rateio
								If cPaisLoc <> "BRA"
									If lFindITF .And. FinProcITF( SE5->( Recno() ),1 ) .and. lRetCkPG(3,,SE5->E5_BANCO)
										FinProcITF( SE5->( Recno() ),3,, .F.,{} ,  )
									EndIf
								EndIf	
							Endif
						Else
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Inicializa Lancamento Contabil                                   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							nHdlPrv := HeadProva( cLote, "FINA100" /*cPrograma*/, Substr( cUsuario, 7, 6 ), @cArquivo )

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Prepara Lancamento Contabil                                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
								aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
							Endif
							nTotal += DetProva( nHdlPrv, cPadrao, "FINA100" /*cPrograma*/, cLote, /*nLinha*/, /*lExecuta*/,;
												/*cCriterio*/, /*lRateio*/, /*cChaveBusca*/, /*aCT5*/, /*lPosiciona*/,;
												@aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/ )
							If cPaisLoc <> "BRA"
								If lFindITF .And. FinProcITF( SE5->( Recno() ),1 ) .and. lRetCkPG(3,,SE5->E5_BANCO)
									FinProcITF( SE5->( Recno() ),3,, .F.,{ nHdlPrv, cPadrao, "", "FINA100", cLote } , @aFlagCTB )
								EndIf
							EndIf	

							If UsaSeqCor()
								cCodDiario :=SE5->E5_DIACTB
								aDiario := {{"SE5",SE5->(RECNO()),cCodDiario,"E5_NODIA","E5_DIACTB"}}
							Else
								aDiario := {}
							Endif

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Efetiva Lan‡amento Contabil                                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								lMostra	 := If( mv_par02 == 1, .T., .F. )
								lAglutina := If( mv_par01 == 1, .T., .F. )

								RodaProva( nHdlPrv,;
										nTotal )

								dDtLanc := dDataBase
								If SuperGetMv("MV_DTCNMOV",.F.,'1') == '2' // Data de contabilização movimento bancário; 1 = database (default); 2 - Data do Movimento
									dDtLanc	 := SE5->E5_DATA 
								EndIf

								cA100Incl( cArquivo, nHdlPrv, 3 /*nOpcx*/, cLote, lMostra /*lDigita*/, lAglutina /*lAglut*/,;
											/*cOnLine*/, dDtLanc, /*dReproc*/, @aFlagCTB, /*aDadosProva*/, aDiario )
								aFlagCTB := {} //Limpa o coteudo apos a efetivacao do lancamento
						EndIf

						If !lUsaFlag

							//Manda o campo LA com o valor de 2 Caracteres, para manter a gravação original na E5
							cCamposE5 := "{{'E5_LA', 'S'}"
							cCamposE5 += ",{'E5_MOVFKS', 'S'}"
							cCamposE5 += "}"

							oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
							oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
							oModelMov:Activate()
							oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5
							oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5

							//Posiciona a FKA com base no IDORIG da SE5 posicionada
							oSubFKA := oModelMov:GetModel( "FKADETAIL" )
							If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

								//Dados Contábeis
								oSubFK5 := oModelMov:GetModel("FK5DETAIL")
								oSubFK5:SetValue( "FK5_LA", "S" )

								If oModelMov:VldData()
									oModelMov:CommitData()
								Else
									lRet := .F.
									cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
									cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
									cLog += cValToChar(oModelMov:GetErrorMessage()[6])
									Help(,,"MF100REC7",,cLog, 1, 0 )
								Endif
							Endif
							oModelMov:DeActivate()
							oModelMov:Destroy()
							oModelMov := NIL

						Endif

					EndIf
				Else
					If lPadrao .And. cPadrao == "517" .And. CtbInUse()

						cSeq := Fa050GerLc( cPadrao, cLote, "FINA100" /*cPrograma*/, 3 /*nOpc*/, @nHdlPrv, @nTotal, @aFlagCTB,;
											"000007" /*cProcPCO*/, "06" /*cItemPCO*/, "R" /*cRecPag*/, /*aRecCV4*/, lUsaFlag )

						If !Empty(cSeq)

							oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
							oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
							oModelMov:Activate()
							oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5

							//Posiciona a FKA com base no IDORIG da SE5 posicionada
							oSubFKA := oModelMov:GetModel( "FKADETAIL" )
							If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

								//Dados Contábeis
								oSubFK8 := oModelMov:GetModel("FK8DETAIL")
								oSubFK8:SetValue( "FK8_ARQRAT", cSeq )

								If oModelMov:VldData()
									oModelMov:CommitData()
								Else
									lRet := .F.
									cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
									cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
									cLog += cValToChar(oModelMov:GetErrorMessage()[6])
									Help(,,"MF100REC8",,cLog, 1, 0 )
								Endif
							Endif
							oModelMov:DeActivate()
							oModelMov:Destroy()
							oModelMov := NIL

						EndIf
					EndIf
				EndIf

				If Empty(SE5->E5_ARQRAT) .And. SE5->E5_RATEIO == "S" .And. (!Empty(cSeq) .OR. !Empty(cArqRat))
					cCamposE5 := "{"
					cCamposE5 += "{'E5_ARQRAT',  '" + Iif(!Empty(cArqRat), cArqRat, cSeq) +"'}"
					cCamposE5 += "}"

					oModelMov := FWLoadModel("FINM030")
					oModelMov:SetOperation( MODEL_OPERATION_UPDATE )
					oModelMov:Activate()
					oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
					oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 )

					If oModelMov:VldData()
						oModelMov:CommitData()
						oModelMov:DeActivate()
					EndIf

					oModelMov:DeActivate()
					oModelMov:Destroy()
					oModelMov := NIL
				EndIf

				If lRet

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Executa ponto de entrada         						  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lFa100Rec
						Execblock("FA100REC",.f.,.f.)
					Endif

					If lCalTroco
						ExecBlock("FINATROC",.F.,.F.)
					Endif
					SE5->(MsUnlock())

					If FunName() == "FINA472"
						F472DadosMov(.T.,"INCMOV")	//indica para FINA472 a inclusao de movimento financeiro
					Endif
				Endif
			Endif
		Endif
	Endif

	If lRet
		PcoFinLan('000007')
		PcoFreeBlq('000007')
		If cPaisLoc <> "BRA" .And. Type("bFiltraBrw") == "B"
			Eval( bFiltraBrw )
		Endif

		// Verifica o arquivo de rateio, e apaga o arquivo temporario
		// para que no proximo rateio seja criado novamente
		If Select("TMP") > 0
			DbSelectArea( "TMP" )
			cArqRat := DbInfo(DBI_FULLPATH)
			cArqRat := AllTrim(SubStr(cArqRat,Rat("\",cArqRat)+1))
			DbCloseArea()
			FErase(cArqRat)
		EndIf

		If IntePMS().AND. !lPmsInt
			SetKey(VK_F10, Nil)
		EndIf

		// Integração EAI.
		If lEAIA100 .and. nOpca == 1
			SetMsgOpc(nOpc)
			aRetInteg := FwIntegDef('FINA100',,,, 'FINA100')
			// Se der erro no envio da integração, então faz rollback e apresenta mensagem em tela para o usuário.
			If !aRetInteg[1]
				Help(,, "FINA100INTEG",, STR0146 + AllTrim(aRetInteg[2]), 1, 0,,,,,, {STR0147}) // "O movimento bancário não será gravado pois ocorreu um erro na integração: ", "Verifique as configurações da integração EAI."
				lRet := .F.
			EndIf
		Endif
	Endif

	If !lRet
		DisarmTransaction()
	Endif
	End Transaction

	if nOpca == 1
	MBrChgLoop(.T.)
	endif

	//Restaura variaveis publicas alteradas na operação de UPDATE do model FINM030
	INCLUI := .T.
	ALTERA := .F.

Return lRet /*Function FA100Rec*/

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FA100Cheq ³ Autor ³ Wagner Xavier         ³ Data ³ 03/06/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Grava o Cheque Emitido                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fa100Cheq()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nao tem                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100Cheq(cOrigem,aCheque,aCheqTerc)
Local aSavArea		:= GetArea()
Local nRegistro		:= 0
Local nPagar		:= 1
Local cDocumento	:= ""	//SE5->E5_DOCUMEN
Local cFornece		:= ""	//SE5->E5_CLIFOR
Local cLoja			:= ""	//SE5->E5_LOJA
Local cBenef		:= ""
Local cTipoMov		:= ""
Local nRecNoSE5		:= 0	//SE5->(RecNo())
Local nRecNoSE1		:= 0
Local cLiquid		:= Soma1(GetMv("MV_NUMLIQ"),6)
Local nA			:= 0
Local aPagar		:= {}
Local aReceber		:= {}
Local nDias			:= 0
Local nMoeda		:= 0
Local dDtVencto		:= CTOD("")
Local aFeriados		:= {}

Local oModelMov 	:= NIL	//FWLoadModel("FINM030")
Local oModelBxR 	:= NIL	//FWLoadModel("FINM010")
Local oSubFK5
Local oSubFKA
Local oSubFK1
Local cLog 			:= ""
Local lRet 			:= .T.
local cCamposE5 	:= ""
Local cChaveCH 		:= ""
Local cChaveTit 	:= ""
Local cChaveFK7 	:= ""
Local nValor 		:= 0
Local lUsaFRE		:= SUPERGETMV('MV_USEFRE',.T.,.F.) 	// Usa talonario tabela FRE

DEFAULT aCheque		:= {}
DEFAULT aCheqTerc	:= {}

If cOrigem == "FINA100PAG"
	//Gravar Cheque próprio do valor total do Movimento ou Saldo quando usado cheques de Terceiros
	If Len(aCheque) > 0
	    //Posiciona da tabela de Modo de Pagos
	    FJS->(dbSetOrder(1))
	    FJS->(dbSeek(xFilial("FJS")+SE5->E5_TIPO))

		//Reposciona no cheque e grava os dados complementares (valor, status, alinea, etc...)
		SEF->(DbGoTo(aCheque[Len(aCheque)][1]))
		If SEF->(Recno()) == aCheque[Len(aCheque)][1]
			RecLock("SEF",.F.)
			SEF->EF_NUM     := aCheque[Len(aCheque)][2]
			SEF->EF_VALOR   := aCheque[Len(aCheque)][4]
			SEF->EF_BENEF	:= SE5->E5_BENEF
			SEF->EF_VENCTO	:= aCheque[Len(aCheque)][3]
			SEF->EF_DATA	:= SE5->E5_DATA
			SEF->EF_HIST 	:= "CH A PAGAR "+SE5->E5_DOCUMEN
			SEF->EF_LIBER 	:= If(nPagar==1,GetMV("MV_LIBCHEQ"),"S")
			SEF->EF_FORNECE	:= SE5->E5_CLIFOR
			SEF->EF_LOJA	:= SE5->E5_LOJA
			SEF->EF_LA     	:= "S"
			SEF->EF_SEQUENC	:= PadL("1",TamSX3("EF_SEQUENC")[1],"0")
			SEF->EF_PARCELA	:= SE5->E5_PARCELA
			SEF->EF_STATUS	:= "02"
			SEF->EF_TITULO  := SEF->EF_NUM
			SEF->EF_TIPO    := FJS->FJS_TIPOIN
			SEF->EF_ORIGEM  := "FINA100"
			If Empty(SEF->EF_IDSEF)
				cChaveCH := FWUUIDV4()
				SEF->EF_IDSEF	:= cChaveCH
			Endif
			If cPaisLoc == "ARG"
				SEF->EF_PORTADO := SE5->E5_BANCO
			EndIf
			SEF->(MsUnlock())

			// Gravar histórico de movimentações do Cheque.
			fA100GrvFRF("P","99","CHEQUE VINCULADO AL PAGO")

			cChaveCH := SEF->EF_IDSEF

			//Define os campos que não existem na FK5 e que serão gravados apenas na E5, para que a gravação da E5 continue igual
			cCamposE5 := "{{'E5_FORNECE', SE5->E5_CLIFOR}"
			cCampoSE5 += ",{'E5_LOJA', SE5->E5_LOJA}"
			cCamposE5 += ",{'E5_MOVFKS', 'S'}"
			cCamposE5 += "}"

			oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
			oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
			oModelMov:Activate()
			oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //habilita gravação de SE5
			oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5

			//Posiciona a FKA com base no IDORIG da SE5 posicionada
			oSubFKA := oModelMov:GetModel( "FKADETAIL" )
			If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

				//Dados do movimento
				oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
				oSubFK5:SetValue( "FK5_NUMCH", SEF->EF_NUM )

				//Dados do cheque
				oSubFKA:AddLine()
				oSubFKA:SetValue( 'FKA_IDFKA',FWUUIDV4())
				oSubFKA:SetValue( 'FKA_IDORIG', cChaveCH )
				oSubFKA:SetValue( 'FKA_TABORI', 'SEF' )

				If oModelMov:VldData()
			       oModelMov:CommitData()
				Else
			       	lRet := .F.
				    cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
				    cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
				    cLog += cValToChar(oModelMov:GetErrorMessage()[6])
		       		Help(,,"MF100CH1",,cLog, 1, 0 )
				Endif
			Endif
			oModelMov:DeActivate()
			oModelMov:Destroy()
			oModelMov := NIL

			If lRet
				//Incluir título do CH no Contas à Pagar
				nMoeda := Max(MoedaBco(SEF->EF_BANCO,SEF->EF_AGENCIA,SEF->EF_CONTA),1)
				SE2->(dbSetOrder(1))
				If !SE2->(dbSeek(xFilial("SE2")+SEF->EF_PREFIXO+SEF->EF_NUM+SEF->EF_PARCELA+SEF->EF_TIPO))
					aPagar := {}
	            	AADD(aPagar,{"E2_FILIAL"	, xFilial("SE2")	,".T."})
	            	AADD(aPagar,{"E2_PREFIXO"	, SEF->EF_PREFIXO	,".T."})
	            	AADD(aPagar,{"E2_NUM"		, SEF->EF_NUM	  	,".T."})
	            	AADD(aPagar,{"E2_PARCELA"	, SEF->EF_PARCELA	,".T."})
	            	AADD(aPagar,{"E2_TIPO"		, SEF->EF_TIPO		,".T."})
	            	AADD(aPagar,{"E2_NATUREZ"	, SE5->E5_NATUREZ	,".T."})
					If cPaisLoc != "ARG"
		            	AADD(aPagar,{"E2_PORTADO"	, "   "				,".T."})
                    Endif
	            	AADD(aPagar,{"E2_FORNECE"	, SE5->E5_FORNECE	,".T."})
	            	AADD(aPagar,{"E2_LOJA"   	, SE5->E5_LOJA		,".T."})
	            	AADD(aPagar,{"E2_NOMFOR"	, SA2->A2_NREDUZ 	,".T."})
	            	AADD(aPagar,{"E2_EMISSAO"	, SEF->EF_DATA		,".T."})
	            	AADD(aPagar,{"E2_VENCTO"	, SEF->EF_VENCTO	,".T."})
	            	AADD(aPagar,{"E2_VENCORI"	, SEF->EF_VENCTO	,".T."})
	            	AADD(aPagar,{"E2_VENCREA"	, DataValida(SEF->EF_VENCTO)	,".T."})
	            	AADD(aPagar,{"E2_VALOR"  	, SEF->EF_VALOR		,".T."})
	            	AADD(aPagar,{"E2_SALDO"  	, SEF->EF_VALOR		,".T."})
	            	AADD(aPagar,{"E2_BCOCHQ" 	, SEF->EF_BANCO		,".T."})
	            	AADD(aPagar,{"E2_AGECHQ"  	, SEF->EF_AGENCIA	,".T."})
	            	AADD(aPagar,{"E2_CTACHQ"	, SEF->EF_CONTA		,".T."})
	            	AADD(aPagar,{"E2_HIST"   	, SE5->E5_HISTOR	,".T."})
	            	AADD(aPagar,{"E2_MOEDA"   	, nMoeda			,".T."})
	            	AADD(aPagar,{"E2_ORIGEM" 	, "FINA100"			,".T."})
	            	AADD(aPagar,{"E2_PORTADO" 	, SEF->EF_BANCO		,".T."})
	            	AADD(aPagar,{"E2_NUMBCO" 	, SEF->EF_NUM		,".T."})
					If cPaisLoc == "ARG"
						AADD(aPagar,{"E2_VLCRUZ" 	, SE5->E5_VLMOED2		,".T."})
						AADD(aPagar,{"E2_TXMOEDA" 	, SE5->E5_TXMOEDA	,".T."})
					EndIf

	 				lMsErroAuto := .F.
					MsgRun(OemToAnsi(STR0114),,{||MsExecAuto({|a,b,c| FINA050(a,b,c) },aPagar,,3)}) //"Gerando registros no Contas a Pagar..."
				    If lMSErroAuto
						MostraErro()
						Break
						Return .F.
					EndIf
					RecLock("SE2",.F.)
					Replace SE2->E2_NUMBCO	With SEF->EF_NUM
					SE2->(MsUnLock())
				EndIf

			Endif

		EndIf
	EndIf

	If lRet
		If Len(aCheqTerc) > 0 //Tratamento para cheque de Terceiros

			//³Cheques de terceiros aplicados no pagamento do Movimento Bancário
			cDocumento := SE5->E5_DOCUMEN
			cFornece   := SE5->E5_CLIFOR
			cLoja      := SE5->E5_LOJA
			cBenef     := SE5->E5_BENEF
			cTipoMov   := If( cPaisLoc == "ARG", SE5->E5_TIPOMOV, "")
			nRecNoSE5  := SE5->(RecNo())

			cLiquid    := Soma1(GetMv("MV_NUMLIQ"),6)

			cCamposE5 := ""

			oModelBxR := FWLoadModel("FINM010")
			oModelBxR:SetOperation( MODEL_OPERATION_INSERT ) //Inclusao
			oModelBxR:Activate()
			oSubFK1 := oModelBxR:GetModel( "FK1DETAIL" )
			oSubFKA := oModelBxR:GetModel( "FKADETAIL" )

			For nA := 1 To Len(aCheqTerc)
				nRecNoSEF := aCheqTerc[nA][13]
				nRecNoSE1 := aCheqTerc[nA][14]
				SE1->( dbGoTo( nRecNoSE1) )
				//Incluir movimentos correspondentes aos cheques de Terceiros.
				If ! SE1->(Eof())
			    	//Define os campos que não existem nas FKs e que serão gravados apenas na E5, para que a gravação da E5 continue igual
					If !Empty(cCamposE5)
						cCamposE5 += "|"
					Endif
					cCamposE5 += "{"
					cCamposE5 += "{'E5_DTDIGIT', dDataBase}"
					cCamposE5 += ",{'E5_TIPO', SE1->E1_TIPO}"
					cCamposE5 += ",{'E5_PREFIXO', SE1->E1_PREFIXO}"
					cCamposE5 += ",{'E5_NUMERO', SE1->E1_NUM}"
					cCamposE5 += ",{'E5_PARCELA', SE1->E1_PARCELA}"
					cCamposE5 += ",{'E5_CLIFOR', SE1->E1_CLIENTE}"
					cCamposE5 += ",{'E5_LOJA', SE1->E1_LOJA}"
					cCamposE5 += ",{'E5_BENEF', '" + cBenef + "'}"
					cCamposE5 += ",{'E5_BCOCHQ', SE1->E1_BCOCHQ}"
					cCamposE5 += ",{'E5_AGECHQ', SE1->E1_AGECHQ}"
					cCamposE5 += ",{'E5_CTACHQ', SE1->E1_CTACHQ}"
					cCamposE5 += ",{'E5_NUMLIQ', '" + cLiquid + "'}"
					cCamposE5 += ",{'E5_NUMCHEQ', SE5->E5_NUMERO}"
					cCamposE5 += ",{'E5_MOVFKS', 'S'}"
					If cPaisLoc == "ARG"
						cCamposE5 += ",{'E5_TIPOMOV', '" + cTipoMov + "'}"
					 EndIf
					cCamposE5 += "}"

					//Dados da tabela auxiliar com o código do título a receber
					cChaveTit := xFilial("SE1") + "|" +  SE1->E1_PREFIXO + "|" + SE1->E1_NUM + "|" + SE1->E1_PARCELA + "|" + ;
					               SE1->E1_TIPO + "|" + SE1->E1_CLIENTE + "|" + SE1->E1_LOJA
					cChaveFK7 := FINGRVFK7( "SE1", cChaveTit )

					//Dados do Processo
					If !oSubFKA:IsEmpty()
						oSubFKA:AddLine()
					Endif
					oSubFKA:SetValue( "FKA_IDORIG", FWUUIDV4() )
					oSubFKA:SetValue( "FKA_TABORI", "FK1" )

					//Dados da baixa a receber
					nValor := SE1->E1_VLCRUZ
					oSubFK1:SetValue( "FK1_RECPAG", "P" )
					oSubFK1:SetValue( "FK1_HISTOR", STR0140 )
					oSubFK1:SetValue( "FK1_DATA", aCheqTerc[nA][10] )
					oSubFK1:SetValue( "FK1_VENCTO", aCheqTerc[nA][11] )
					oSubFK1:SetValue( "FK1_NATURE", SE1->E1_NATUREZ )
					oSubFK1:SetValue( "FK1_TPDOC", "BA" )
					oSubFK1:SetValue( "FK1_MOTBX", "LIQ" )
					oSubFK1:SetValue( "FK1_SEQ", PadL("1",TamSX3("E5_SEQ")[1],"0") )
					oSubFK1:SetValue( "FK1_DOC", cDocumento )
					oSubFK1:SetValue( "FK1_ORDREC", cLiquid )
					oSubFK1:SetValue( "FK1_MOEDA", StrZero(SE1->E1_MOEDA,2) )
					oSubFK1:SetValue( "FK1_VALOR", nValor )
					oSubFK1:SetValue( "FK1_VLMOE2", SE1->E1_VALOR )
					oSubFK1:SetValue( "FK1_LA", "S" )
					oSubFK1:SetValue( "FK1_ORIGEM", "F100BXCT" )
					oSubFK1:SetValue( "FK1_IDDOC", cChaveFK7 )

		 			//³Baixar cheques de terceiros no Contas à Receber.
					RecLock("SE1",.F.)
					SE1->E1_BAIXA   := dDataBase
					SE1->E1_EMIS1   := dDataBase
					SE1->E1_MOVIMEN := dDataBase
					SE1->E1_SALDO   := SE1->E1_SALDO - nValor
					SE1->E1_VALLIQ  := SE1->E1_VALOR
					MsUnLock()

					//³Atualizar o Status do Cheque de Terceiros
					SEF->( dbGoTo( nRecNoSEF) )
					If ! SEF->(Eof())
						RecLock("SEF",.F.)
						SEF->EF_STATUS := "04"     //Liquidado.
						SEF->EF_FORNECE := cFornece
						SEF->EF_LOJA := cLoja
						MsUnLock()
					EndIf

					// Gravar histórico de movimentações do Cheque.
					fA100GrvFRF("P","99","CHEQUE VINCULADO AL PAGO")
	        	EndIf
	    	Next nA
			oModelBxR:SetValue( "MASTER", "NOVOPROC", .T. )
    		oModelBxR:SetValue( "MASTER", "E5_GRV", .T. ) //Informa se vai gravar SE5 ou não
			oModelBxR:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5

	    	If oModelBxR:VldData()
			    oModelBxR:CommitData()
			Else
				lRet := .F.
			    cLog := cValToChar(oModelBxR:GetErrorMessage()[4]) + ' - '
			    cLog += cValToChar(oModelBxR:GetErrorMessage()[5]) + ' - '
			    cLog += cValToChar(oModelBxR:GetErrorMessage()[6])
		    	Help(,,"MF100CH2",,cLog, 1, 0 )
			Endif
			oModelBxR:DeActivate()
			oModelBxR:Destroy()
			oModelBxR := NIL

	    	//Atualiza parametros do numero da ultima Liquidação
	 		PutMv("MV_NUMLIQ",cLiquid)

			SE5->(dbGoTo(nRecNoSE5))
		EndIf

		If cPaisLoc <> "ARG" .and. !lUsaFRE	 //Somente quando não é utilizado o controle de Cheques
			cChaveCH := FWUUIDV4()
			RecLock("SEF",.T.)
			SEF->EF_FILIAL := cFilial
			SEF->EF_NUM 	:= SE5->E5_NUMCHEQ
			SEF->EF_BANCO	:= SE5->E5_BANCO
			SEF->EF_AGENCIA := SE5->E5_AGENCIA
			SEF->EF_BENEF	:= SE5->E5_BENEF
			SEF->EF_VALOR	:= SE5->E5_VALOR
			SEF->EF_DATA	:= SE5->E5_DATA
			SEF->EF_CONTA	:= SE5->E5_CONTA
			SEF->EF_HIST	:= SE5->E5_HISTOR
			SEF->EF_TIPO	:= SubStr( SE5->E5_TIPO,1,2 )
			SEF->EF_SEQUENC := PadL("1",TamSX3("EF_SEQUENC")[1],"0")
			SEF->EF_LIBER	:= "S"
			SEF->EF_ORIGEM := cOrigem
			SEF->EF_IDSEF	:= cChaveCH
			If "FINA100PAG" $ cOrigem
				SEF->EF_FORNECE	:= SE5->E5_CLIFOR
				SEF->EF_LOJA	:= SE5->E5_LOJA
			EndIf
			nRegistro:=SEF->(Recno())
			MsUnLock()

			//Vincula o cheque criado ao processo
			lRet := FkProcSEF(cChaveCH)

		EndIf
	Endif
ElseIf cOrigem == "FINA100REC"

	cCamposE5 := "{{'E5_CLIENTE', SE5->E5_CLIFOR}"
	cCamposE5 += ",{'E5_MOVFKS', 'S'}"
	cCamposE5 += "}"

	oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
	oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
	oModelMov:Activate()
	oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
	oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 )

	//Posiciona a FKA com base no IDORIG da SE5 posicionada
	oSubFKA := oModelMov:GetModel( "FKADETAIL" )
	If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

		If oModelMov:VldData()
			oModelMov:CommitData()
		Else
			lRet := .F.
		    cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
		    cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
		    cLog += cValToChar(oModelMov:GetErrorMessage()[6])
       		Help(,,"MF100CH3",,cLog, 1, 0 )
		Endif
	Endif
	oModelMov:DeActivate()
	oModelMov:Destroy()
	oModelMov := NIL

	If cPaisLoc $ "ANG|ARG|AUS|BOL|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|TRI|URU|VEN"
	    //Posiciona da tabela de Modo de Pagos
	    FJS->(dbSetOrder(1))
	    FJS->(dbSeek(xFilial("FJS")+SE5->E5_TIPO))

		SA1->(dbSetOrder(1))
		SA1->(dbSeek(xFilial("SA1")+SE5->E5_CLIENTE+SE5->E5_LOJA))

		SA6->(dbSetOrder(1))
		SA6->(dbSeek(xFilial("SA6")+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA))

		If AllTrim(FJS->FJS_CARTE) $ "13" .And. AllTrim(FJS->FJS_TERCEI) $ "13"

			oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
			oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
			oModelMov:Activate()
			oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //habilita gravação de SE5

			//Posiciona a FKA com base no IDORIG da SE5 posicionada
			oSubFKA := oModelMov:GetModel( "FKADETAIL" )
			If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

				//Dados do movimento
				oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
				oSubFK5:SetValue( "FK5_TERCEI", "1" )

				If oModelMov:VldData()
			       oModelMov:CommitData()
				Else
			       	lRet := .F.
				    cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
				    cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
				    cLog += cValToChar(oModelMov:GetErrorMessage()[6])
		       		Help(,,"MF100CH4",,cLog, 1, 0 )
				Endif
			Endif
			oModelMov:DeActivate()
			oModelMov:Destroy()
			oModelMov := NIL

		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gravação do cheque recebido com base no Controle de Cheques...                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nDias     := SA6->A6_DIASCOB
		dDtVencto := SE5->E5_VENCTO
		aFeriados := RetFeriados()
		While nDias > 0
	   		dDtVencto++
	       	If Ascan(aFeriados,DTOS(dDtVencto)) == 0 .And. DOW(dDtVencto) <> 1 .And. DOW(dDtVencto) <> 7
	       		nDias--
	       	EndIf
	   	End
	   	cChaveCH := FWUUIDV4()
		RecLock("SEF", .T.)
		SEF->EF_FILIAL	:= xFilial("SEF")
		SEF->EF_NUM		:= SE5->E5_NUMCHEQ
		SEF->EF_VALOR	:= SE5->E5_VALOR
		SEF->EF_DATA	:= dDataBase
		SEF->EF_VENCTO	:= dDtVencto	//Data de Vencimento + Dias de compensação (Clearing).
		SEF->EF_BENEF	:= SM0->M0_NOMECOM
		SEF->EF_CART	:= "R"
		SEF->EF_LA		:= "S"
		SEF->EF_LIBER	:= "S"
		SEF->EF_SEQUENC := "01"
		SEF->EF_TEL		:= SA1->A1_TEL
		SEF->EF_PREFIXO	:= SE5->E5_PREFIXO
		SEF->EF_TITULO	:= SE5->E5_NUMERO
		SEF->EF_TIPO	:= FJS->FJS_TIPOIN
		SEF->EF_PARCELA	:= SE5->E5_PARCELA
		SEF->EF_CLIENTE	:= SE5->E5_CLIFOR
		SEF->EF_LOJACLI	:= SE5->E5_LOJA
		SEF->EF_EMITENT	:= SA1->A1_NOME
		If AllTrim(FJS->FJS_TERCEI) $ "13" .And. cPaisLoc $ "ANG|ARG|AUS|BOL|BRA|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|TRI|URU|VEN"
			SEF->EF_CPFCNPJ	:= SE5->E5_CGC
			IF cPaisLoc <> "BRA"
				SEF->EF_ENDOSSA := "1"
			Endif
			SEF->EF_TERCEIR	:= .T.
		Else
			SEF->EF_CPFCNPJ	:= SA1->A1_CGC
			IF cPaisLoc <> "BRA"
				SEF->EF_ENDOSSA := "2"
			Endif
			SEF->EF_TERCEIR	:= .F.
		EndIf
		SEF->EF_HIST    := "CH A COBRAR "+SE5->E5_DOCUMEN
		SEF->EF_ORIGEM	:= "FINA100"
		SEF->EF_PORTADO := SE5->E5_BANCO
		SEF->EF_IDSEF	:= cChaveCH
		MsUnLock()

		//Vincula o cheque criado ao processo
		lRet := FkProcSEF(cChaveCH)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³  Controle de Cheques  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cPaisLoc $ "ANG|ARG|AUS|BOL|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|TRI|URU|VEN"

			RecLock("SEF",.F.)

			SEF->EF_BANCO	:= SE5->E5_BCOCHQ
			SEF->EF_AGENCIA	:= SE5->E5_AGECHQ
			SEF->EF_CONTA	:= SE5->E5_CTACHQ
			SEF->EF_STATUS  := "01" 	//Carteira

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³  Requisito de Controle de Entidades Bancarias  (Junho/2012)  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( cPaisLoc == "ARG" )

				SEF->EF_POSTAL := SE5->E5_POSTAL

			EndIf

			MsUnlock()

			fA100GrvFRF("R","01","CHEQUE EN CARTERA")

			nMoeda := Max(MoedaBco(SEF->EF_BANCO,SEF->EF_AGENCIA,SEF->EF_CONTA),1)

			SE1->(dbSetOrder(1))

			If !SE1->(dbSeek(xFilial("SE1")+SEF->EF_PREFIXO+SEF->EF_NUM+SEF->EF_PARCELA+SEF->EF_TIPO))
				aReceber := {}
	           	AADD(aReceber,{"E1_FILIAL"	, xFilial("SE1")	,".T."})
	           	AADD(aReceber,{"E1_PREFIXO"	, SEF->EF_PREFIXO	,".T."})
	           	AADD(aReceber,{"E1_NUM"		, SEF->EF_NUM	  	,".T."})
	           	AADD(aReceber,{"E1_PARCELA"	, SEF->EF_PARCELA	,".T."})
	           	AADD(aReceber,{"E1_TIPO"	, SEF->EF_TIPO		,".T."})
	           	AADD(aReceber,{"E1_NATUREZ"	, SE5->E5_NATUREZ	,".T."})
	           	AADD(aReceber,{"E1_PORTADO"	, "   "				,".T."})
	           	AADD(aReceber,{"E1_CLIENTE"	, SE5->E5_CLIENTE	,".T."})
	           	AADD(aReceber,{"E1_LOJA"   	, SE5->E5_LOJA		,".T."})
	           	AADD(aReceber,{"E1_NOMCLI"	, SA1->A1_NREDUZ 	,".T."})
	           	AADD(aReceber,{"E1_EMISSAO"	, SEF->EF_DATA		,".T."})
	           	AADD(aReceber,{"E1_VENCTO"	, SEF->EF_VENCTO	,".T."})
	           	AADD(aReceber,{"E1_VENCORI"	, SEF->EF_VENCTO	,".T."})
	           	AADD(aReceber,{"E1_VENCREA"	, DataValida(SEF->EF_VENCTO),".T."})
	           	AADD(aReceber,{"E1_VALOR"  	, SEF->EF_VALOR		,".T."})
	           	AADD(aReceber,{"E1_VLCRUZ" 	, Round(xMoeda(SEF->EF_VALOR,nMoeda,1,dDataBase,3),MsDecimais(1)),".T."})
	           	AADD(aReceber,{"E1_SALDO"  	, SEF->EF_VALOR		,".T."})
	           	AADD(aReceber,{"E1_BCOCHQ" 	, SEF->EF_BANCO		,".T."})
	           	AADD(aReceber,{"E1_AGECHQ" 	, SEF->EF_AGENCIA	,".T."})
	           	AADD(aReceber,{"E1_CTACHQ"	, SEF->EF_CONTA		,".T."})
	           	AADD(aReceber,{"E1_HIST"   	, SE5->E5_HISTOR	,".T."})
	           	AADD(aReceber,{"E1_MOEDA"  	, nMoeda			,".T."})
	           	AADD(aReceber,{"E1_ORIGEM" 	, "FINA100"			,".T."})
	           	AADD(aReceber,{"E1_PORTADO"	, SE5->E5_BANCO		,".T."})
	           	AADD(aReceber,{"E1_AGEDEP" 	, SE5->E5_AGENCIA	,".T."})
	           	AADD(aReceber,{"E1_CONTA"	, SE5->E5_CONTA		,".T."})

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³  Requisito de Controle de Entidades Bancarias  (Junho/2012)  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( cPaisLoc == "ARG" )

					AADD( aReceber, { "E1_POSTAL" , SE5->E5_POSTAL  ,".T." } )

				EndIf

	 			lMsErroAuto := .F.

				MsgRun(OemToAnsi(STR0118),,{||MsExecAuto({|a,b,c| FINA040(a,b,c) },aReceber,3,)})//"Gerando registros no Contas a Receber..."

			    If lMSErroAuto
					MostraErro()
					Break
					Return .F.
				EndIf
			EndIf
		EndIf

	Endif
ElseIf cOrigem == "FINA100TRF"

	If (cPaisLoc <> "ARG" .and. ! AliasInDIc("FRE")) .or. (cPaisLoc = "MEX")	//Somente quando não é utilizado o controle de Cheques
		cChaveCH := FWUUIDV4()
		RecLock("SEF",.T.)
		SEF->EF_FILIAL  := cFilial
		SEF->EF_NUM 	:= SE5->E5_NUMCHEQ
		SEF->EF_BANCO	:= SE5->E5_BANCO
		SEF->EF_AGENCIA := SE5->E5_AGENCIA
		SEF->EF_BENEF	:= SE5->E5_BENEF
		SEF->EF_VALOR	:= SE5->E5_VALOR
		SEF->EF_DATA	:= SE5->E5_DATA
		SEF->EF_CONTA	:= SE5->E5_CONTA
		SEF->EF_HIST	:= SE5->E5_HISTOR
		SEF->EF_TIPO	:= SubStr( SE5->E5_TIPO,1,2 )
		SEF->EF_SEQUENC	:= PadL("1",TamSX3("EF_SEQUENC")[1],"0")
		SEF->EF_LIBER	:= "S"
		SEF->EF_ORIGEM 	:= cOrigem
		SEF->EF_IDSEF		:= cChaveCH
		nRegistro:=SEF->(Recno())
		MsUnLock()

		//Vincula o cheque criado ao processo
		lRet := FkProcSEF(cChaveCH)
	EndIf
EndIf

RestArea(aSavArea)
Return nRegistro

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FA100Moeda³ Autor ³ Wagner Xavier         ³ Data ³ 30/04/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Checa a Moeda informada ‚ valida                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FA100Moeda()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA100Moeda()
Local lRet := .T.

dbSelectArea("SX5")
dbSetOrder(1)  // X5_FILIAL, X5_TABELA, X5_CHAVE.
IF !(dbSeek(cFilial + "06" + M->E5_MOEDA, .F.))
	Help(" ",1,"E5_MOEDA")
	lRet := .F.
EndIf
Return lRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FA100Can	³ Autor ³ Wagner Xavier         ³ Data ³ 30/04/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Cancela Movimento de Caixa                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³FA100Can()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa100Can(cAlias As Character, nReg As Numeric, nOpc As Numeric)
	Local lExclui	:= nOpc == 5
	Local lPanelFin := IsPanelFin()
	Local nOpcA
	Local lPadrao,cPadrao,nHdlPrv:=0,nTotal:=0
	Local lMostra,lAglutina
	Local cSinal := Iif(SE5->E5_RECPAG=="P","+","-")
	Local lMovBco := .T.
	Local lFa100CAN := ExistBlock("FA100CAN")
	Local lFa100CA2 := ExistBlock("FA100CA2")
	Local lRet := .T.
	Local oDlg,i,bCampo
	Local aButtons
	Local aFlagCTB := {}
	Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
	LOCAL dDataOrig
	LOCAL nCanMPost := 0

	LOCAL nValor   := SE5->E5_VALOR
	LOCAL nVlMoed2 := SE5->E5_VLMOED2
	LOCAL cBanco   := SE5->E5_BANCO
	LOCAL cAgencia := SE5->E5_AGENCIA
	LOCAL cConta   := SE5->E5_CONTA
	LOCAL cNaturez := SE5->E5_NATUREZ
	LOCAL cDebito  := SE5->E5_DEBITO
	LOCAL cCredito := SE5->E5_CREDITO
	LOCAL cDocumen := SE5->E5_DOCUMEN
	LOCAL cHistor  := SE5->E5_HISTOR
	LOCAL cNumCheq := SE5->E5_NUMCHEQ
	Local cNumChSub:= SE5->E5_NUMCHEQ
	LOCAL cRecPag  := SE5->E5_RECPAG
	LOCAL cMoeda   := SE5->E5_MOEDA
	LOCAL cLa      := SE5->E5_LA
	Local nTxMoeda := SE5->E5_TXMOEDA
	LOCAL lEnti5   := CtbMovSaldo("CT0",,'05')
	LOCAL lEnti6   := CtbMovSaldo("CT0",,'06')
	LOCAL lEnti7   := CtbMovSaldo("CT0",,'07')
	LOCAL lEnti8   := CtbMovSaldo("CT0",,'08')
	LOCAL lEnti9   := CtbMovSaldo("CT0",,'09')
	LOCAL lValCpo5 := (SE5->(ColumnPos("E5_EC05CR")) > 0 .and. SE5->(ColumnPos("E5_EC05DB")) > 0)
	LOCAL lValCpo6 := (SE5->(ColumnPos("E5_EC06CR")) > 0 .and. SE5->(ColumnPos("E5_EC06DB")) > 0)
	LOCAL lValCpo7 := (SE5->(ColumnPos("E5_EC07CR")) > 0 .and. SE5->(ColumnPos("E5_EC07DB")) > 0)
	LOCAL lValCpo8 := (SE5->(ColumnPos("E5_EC08CR")) > 0 .and. SE5->(ColumnPos("E5_EC08DB")) > 0)
	LOCAL lValCpo9 := (SE5->(ColumnPos("E5_EC09CR")) > 0 .and. SE5->(ColumnPos("E5_EC09DB")) > 0)
	LOCAL cTipoLan
	LOCAL cRateio  := SE5->E5_RATEIO
	LOCAL dVencto  := SE5->E5_VENCTO
	LOCAL cBenef   := SE5->E5_BENEF
	LOCAL cArqRat  := SE5->E5_ARQRAT
	Local cCCusto	:= SE5->E5_CCUSTO
	Local cCCC		:= SE5->E5_CCC
	Local cCCD		:= SE5->E5_CCD
	Local cItemD	:= SE5->E5_ITEMD
	Local cItemC	:= SE5->E5_ITEMC
	Local cClVlDB	:= SE5->E5_CLVLDB
	Local cClVlCR	:= SE5->E5_CLVLCR
	Local lBxConc  := GetNewPar("MV_BXCONC","2") == "1"
	LOCAL cProcPCO, cItemPCO
	Local aDiario  := {}
	Local lFindITF := .T.
	Local lAtuSldNat := .T.
	Local aCab          := {}
	Local aItem         := {}
	Local aItens        := {}
	Local cNFiscal      := SE5->E5_NUMERO
	Local cSerie        := ""
	Local cPrefixNF     := SE5->E5_PREFIXO
	Local cFornece      := SE5->E5_CLIFOR
	Local cLoja         := SE5->E5_LOJA
	Local cTipoMov      := If( cPaisLoc == "ARG",SE5->E5_TIPOMOV,"" )
	Local cCondFiltro   := ""
	Local cDocumento    := ""
	Local nRecNoSE5  	:= 0
	Local nIndexOrd  	:= 0
	Local cPrefixo 		:= ""
	Local cParcela 		:= ""
	Local cTipCheq      := ""
	Local cTpMov 		:= ""
	Local aPagar        := {}
	Local aReceber        := {}
	Local nLenCheque  	:= TamSX3("EF_NUM")[1]

	Local cCamposE5 := ""
	Local oModelMov := NIL
	Local cLog := ""
	Local cProcFKs  := ""
	Local oSubFK5
	Local oSubFK8
	Local oSubFKA
	Local cAuxTpLan := ""
	Local oSize
	Local nLenHist := TamSX3("FK5_HISTOR")[1]
	Local cMoedaBnc  := ""
	Local nValorConv := 0
	Local lbFilBrw   := .F.
	Local nRecnoLP	 := 0
	Local aRetInteg  := {}
	Local nOperacEst := 0
	Local lTrocoLoja := .F.
	Local lChF100	 := SuperGetMV( "MV_USEFRE" , .T. /*lHelp*/, .F. /*cPadrao*/)
	Local lAchoCH 	 := .F.
	Local nTpDoc	 := SE5->E5_TIPODOC
	Local dDtBkp	 := dDatabase

	PRIVATE cLote 		:= ""
	PRIVATE bPMSDlgMB	:= {||PmsDlgMB(2,M->E5_PROJPMS,M->E5_HISTOR,M->E5_RECPAG)}
	PRIVATE aRatAJE		:= {}
	PRIVATE cCodDiario  := ""

	// Implementacao do Execauto
	PRIVATE lF100Auto := If(Type('lF100Auto') <> 'L',.F.,lF100Auto)

	DEFAULT lPmsInt		:= IsIntegTop(,.T.)
	DEFAULT lEAIA100 	:= FWHasEAI("FINA100", .T.,, .T.)

	If Type("lMSErroAuto") <> "L"
		PRIVATE lMSErroAuto := .F.
		PRIVATE lMSHelpAuto := .F. // para mostrar os erros na tela
	Endif

	IF nOpc == 5
		F100Metric(PROCNAME()+":EXCLUIR")
	ELSEIF nOpc == 6
		F100Metric(PROCNAME()+":CANCELAR")
	ENDIF

	//Verifico se os campos das entidades contabeis existem no dicionario de dados
	If lEnti5 .And. lValCpo5
		cEnti5Cr := SE5->E5_EC05CR
		cEnti5Db := SE5->E5_EC05DB
	Endif

	If lEnti6 .And. lValCpo6
		cEnti6Cr := SE5->E5_EC06CR
		cEnti6Db := SE5->E5_EC06DB
	Endif

	If lEnti7 .And. lValCpo7
		cEnti7Cr := SE5->E5_EC07CR
		cEnti7Db := SE5->E5_EC07DB
	Endif

	If lEnti8 .And. lValCpo8
		cEnti8Cr := SE5->E5_EC08CR
		cEnti8Db := SE5->E5_EC08DB
	Endif

	If lEnti9 .And. lValCpo9
		cEnti9Cr := SE5->E5_EC09CR
		cEnti9Db := SE5->E5_EC09DB
	Endif

	//ITF não se aplica ao Brasil
	If cPaisLoc == "BRA"
		lFindITF := .F.
	Endif

	lPagar      := .F.
	lReceber    := .F.

	// PE para permitir ao usuario criar validacoes quanto ao acesso deste item
	If ExistBlock( "FA100VLD" )
		If !ExecBlock( "FA100VLD", .F., .F., { lExclui } )
			Return
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inclui o botao de Apontamento no SIGAPMS                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IntePMS().AND. !lPmsInt
		SetKey(VK_F10, {|| Eval(bPmsDlgMB)})
		aButtons := {{'PROJETPMS',{|| Eval(bPmsDlgMB) },STR0045,STR0062}} //"Gerenciamento de Projetos" //"Projetos"
	EndIf

	IF SE5->E5_TIPOLAN $ "DC"		// Inverte o tipo de lançamento
		If cTipoLan == "D"
			cTipoLan := "C"
		Else
			cTipoLan := "D"
		Endif
	Endif

	//*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//*³ Monta a entrada de dados do arquivo 								 ³
	//*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PRIVATE aTELA[0][0],aGETS[0]

	LoteCont( "FIN" )

	If Type("bFiltraBrw") == "B"
		lbFilBrw := .T.
	Endif

	lTrocoLoja := ( AllTrim(SE5->E5_MOEDA) == "TC" )

	While .T.

		dbSelectArea( "SE5" )
		//*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//*³ Envia para processamento dos Gets			 ³
		//*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nOpcA:=0

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se data do movimento n„o ‚ menor que data limite de ³
		//³ movimentacao no financeiro    										  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SE5->E5_RECPAG == "P"
			cTpMov := iIf(SE5->E5_TIPODOC == "ES","2", "1")
		ElseIf SE5->E5_RECPAG == "R"
			cTpMov := iIf(SE5->E5_TIPODOC == "ES","1", "2")
		Endif

		If nOpc == 5
			If !DtMovFin(SE5->E5_DATA,,cTpMov)
				Exit
			Endif
		Else
			If !DtMovFin(dDataBase,,cTpMov)
				Exit
			Endif
		Endif

		// C = Antigo cancelamento
		// X = Registro estornado
		// E = Registro de estorno
		IF SE5->E5_SITUACA $ "C/E/X"
			Help(" ",1,"JA-CANCEL")
			Exit
		Endif

		//Bloqueio de Exclusão/Cancelamento de transferências originadas nas rotinas do TOTVS Antecipa
		If AllTrim(SE5->E5_ORIGEM) $ "FINA136A/FINA136C"
			Help(" ", 1, "F100TECHFIN",, STR0150, 1, 0) // Exclusão/Cancelamento não permitido pois movimento foi feito através do TOTVS Antecipa.
			Exit
		EndIf

		//Nao permito cancelamento de baixa se a mesma foi conciliada e se
		//o parametro MV_BXCONC estiver como 2(Padrao) - Nao permite
		If !Empty(SE5->E5_RECONC) .And. !lBxConc   		
				Help(" ",1,"MOVRECONC")
				Exit		
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ AAF - Titulos originados no SIGAEFF não devem ser alterados   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !lF100Auto .AND. "SIGAEFF" $ SE5->E5_ORIGEM
		Help(" ",1,"FAORIEFF")
		Exit
		EndIf

		//Verifica bloqueio da conta
		If CCBLOCKED(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA)
			Exit
		Endif

		IF dDataBase < SE5->E5_DATA
			If !lF100Auto
				// Atencao ### A movimentacao em ### eh posterior a data de cancelamento ### Confirmar ### Cancelar
				nCanMPost := Aviso(	STR0032, STR0073 + DtoC( SE5->E5_DATA ) + STR0074 + " (" + DtoC( dDataBase ) + ")." +;
									STR0075, { STR0076, STR0056 }, 2 )	// Confirma o cancelamento usando como referencia a data da movimentacao?
				// Confirma cancelamento de movimento posterior a database
				If nCanMPost == 1
					dDataOrig := dDataBase
					// Altera a database para a data do movimento para evitar a troca manual pelo login (CheckSum)
					dDataBase := SE5->E5_DATA
				Else
					Exit
				EndIf
			Else
				nCanMPost := 1		// Para voltar a data
				dDataOrig := dDataBase
				dDataBase := SE5->E5_DATA
			EndIf
		Endif

		If SE5->E5_MOVCX == "S"
			Help(" ", 1, "F100NODEL",,STR0060+CHR(10)+STR0061,1,0 )	//"Este movimento nao pode ser cancelado pois"###"foi gerado por outra rotina."
			Exit
		Endif

		If !Empty(SE5->E5_TIPODOC) .And. !lTrocoLoja
			If !SE5->E5_TIPODOC $ "CD|DH"
				IF cPaisLoc <> "ARG" 
					Help(" ", 1, "FA100BAIXA" )
					Exit
				Else
					IF lChF100 .AND. ALLTRIM(SE5->E5_TIPO) == "CH" .AND. ALLTRIM(SE5->E5_MOEDA)  == "CH" .AND. ALLTRIM(SE5->E5_RECPAG) == "P" .AND. !Empty(SE5->E5_TALAO) .AND. ALLTRIM(SE5->E5_ORIGEM) == "FINA100"
						IF Findfunction("VldCanCh")
							lAchoCH :=  VldCanCh(1)
							IF !lAchoCH
								Exit
							EndIF
						Else
							MSGALERT(STR0153, STR0096) 
							Exit
						EndIF
					Else
						Help(" ", 1, "FA100BAIXA" )
						Exit
					EndIf
					SEF->(DbCloseArea())
				EndIF
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Checa se tem titulo CH ligado … mov. Bancaria ³
				//³ e se o mesmo pode ser Apagado.                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SE5->E5_RECPAG="P" .and. SE5->E5_MOEDA $ "C1|C2|C3|C4|C5"
					DbSelectArea("SE2")
					DbSetOrder(1)
					If DbSeek(SE5->E5_FILIAL + SE5->E5_PREFIXO + SE5->E5_NUMERO + ;
							SE5->E5_PARCELA + SE5->E5_TIPO) .and. ;
							(SE2->E2_FORNECE + SE2->E2_LOJA == SE5->E5_CLIFOR + SE5->E5_LOJA)


						If SE2->E2_SALDO != SE2->E2_VALOR
							Help(" ",1,"FA100CANCH")

							If cPaisLoc <> "BRA" .And. lbFilBrw
								Eval( bFiltraBrw )
							Endif
							Return /*Function Fa100Can*/
						Endif
					Endif
				Endif
			EndIf
		EndIf
		IF !SoftLock( "SE5")
			If cPaisLoc <> "BRA" .And. lbFilBrw
				Eval( bFiltraBrw )
			Endif
			Return /*Function Fa100Can*/
		EndIf
		dbSelectArea( "SE5" )
		nOpcA:=1
		bCampo := {|nCPO| Field(nCPO) }
		FOR i := 1 TO FCount()
			M->&(EVAL(bCampo,i)) := FieldGet(i)
		NEXT i

		oSize := FwDefSize():New(.T.)
		oSize:lLateral := .F.
		oSize:AddObject("MASTER",100,100,.T.,.T.)
		oSize:lProp := .T.
		oSize:Process()

		If !lF100Auto
			If lPanelFin  //Chamado pelo Painel Financeiro
				oPanelDados := FinWindow:GetVisPanel()
				oPanelDados:FreeChildren()
				aDim := DLGinPANEL(oPanelDados)
				DEFINE MSDIALOG oDlg OF oPanelDados:oWnd FROM 0,0 To 0,0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )
			Else
				DEFINE MSDIALOG oDlg TITLE cCadastro FROM oSize:aWindSize[1],oSize:aWindSize[2] TO oSize:aWindSize[3],oSize:aWindSize[4] PIXEL OF oMainWnd
				oDlg:lMaximized := .T.
			Endif

			oEnc01 := MsMGet():New(cAlias, nReg, 5,,"AC",OemToAnsi(STR0016),,{oSize:GetDimension("MASTER","LININI"),oSize:GetDimension("MASTER","COLINI"),oSize:GetDimension("MASTER","LINEND"),oSize:GetDimension("MASTER","COLEND")},,,,,,oDlg,,,.F.)

			If lPanelFin  //Chamado pelo Painel Financeiro
				oDlg:lMaximized := .F.
				oPanelDados:Align := CONTROL_ALIGN_ALLCLIENT
				oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1])
				If !(cPaisLoc == "BRA")
					ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,{|| If(FinOkDiaCTB() .and. fA100DelOk(),nOpca:= 2,nOpca:= 1),oDlg:End()},{|| nOpca := 1,oDlg:End()},aButtons,)
				Else
					ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,{|| If(FinOkDiaCTB(),nOpca:= 2,nOpca:= 1),oDlg:End()},{|| nOpca := 1,oDlg:End()},aButtons,)
				EndIf
			Else
				If !(cPaisLoc == "BRA")
					ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| If(FinOkDiaCTB() .and. fA100DelOk(),nOpca:= 2,nOpca:= 1),oDlg:End()},{|| nOpca := 1,oDlg:End()},,aButtons,)
				Else
					ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| If(FinOkDiaCTB(),nOpca:= 2,nOpca:= 1),oDlg:End()},{|| nOpca := 1,oDlg:End()},,aButtons)
				EndIf
			Endif
		Else
			nOpca := IIf( EnchAuto("SE5",aAutoCab,"FinOkDiaCTB()",5),2,0)
		EndIf

		IF nOpcA == 2

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto Entrada para confirmacao da exclusao			  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lFa100CA2
				lRet := Execblock("FA100CA2",.f.,.f.,{nOpc})
			Endif

			If !lRet
				If cPaisLoc <> "BRA" .And. lbFilBrw
					Eval( bFiltraBrw )
				Endif
				Return /*Function Fa100Can*/
			EndIf
			PcoIniLan('000007')

			Begin Transaction
				cCondFiltro := cCondicao
				If cPaisLoc == "ARG" .and. cTipoMov == "01"
					If !(FunName() == "FINA472")		//A reversao do documento e feita pela propria FINA472.
						If ! Empty(cNFiscal) .and. ! Empty(cFornece) .and. !Empty(cLoja)
							If SE5->E5_RECPAG == "P"
								nRec := FINBuscaNF(,cNFiscal,cPrefixNF,cFornece,cLoja,"SF1",.F.)
								SF1->(dbGoto(nRec))
								cSerie := SF1->F1_SERIE

								aCab := {}
								AADD(aCab,{"F1_DOC"    ,SF1->F1_DOC    ,Nil})
								AADD(aCab,{"F1_SERIE"  ,SF1->F1_SERIE  ,Nil})
								AADD(aCab,{"F1_FORNECE",SF1->F1_FORNECE,Nil})
								AADD(aCab,{"F1_LOJA"   ,SF1->F1_LOJA   ,Nil})
								AADD(aCab,{"F1_TIPODOC",SF1->F1_TIPODOC,Nil})
								AADD(aCab,{"F1_MOEDA"  ,SF1->F1_MOEDA  ,Nil})
								AADD(aCab,{"F1_TXMOEDA",SF1->F1_TXMOEDA,Nil})

								SD1->(dbSetOrder(1))
								SD1->(dbSeek(xFilial("SD1")+cNFiscal+cSerie+cFornece+cLoja))
								While SD1->(!Eof()) .and. SD1->D1_FILIAL == xFilial("SD1")  .and.;
										SD1->D1_DOC == cNFiscal .and. SD1->D1_SERIE == cSerie .and.;
										SD1->D1_FORNECE == cFornece .and. SD1->D1_LOJA == cLoja
									aItem:={}
									AADD(aItem,{"D1_DOC"    ,SD1->D1_DOC    ,Nil})
									AADD(aItem,{"D1_SERIE"  ,SD1->D1_SERIE  ,Nil})
									AADD(aItem,{"D1_FORNECE",SD1->D1_FORNECE,Nil})
									AADD(aItem,{"D1_LOJA"   ,SD1->D1_LOJA   ,Nil})
									AADD(aItens,ACLONE(aItem))
									SD1->(dbSkip())
								End
								RegToMemory("SE2",.F.)
								MsgRun(OemToAnsi(STR0124),,{||MSExecAuto({|x,y,z| MATA101N(x,y,z)},aCab,aItens,5)})		//"Apagando o documento fiscal"
								cCondicao := cCondFiltro
								If lMSErroAuto
									MostraErro()
									DisarmTrans()
									Return .F.
								EndIf
							Else
								nRec := FINBuscaNF(,cNFiscal,cPrefixNF,cFornece,cLoja,"SF2",.F.)
								SF2->(dbGoto(nRec))
								cSerie := SF2->F2_SERIE
								aCab := {}
								AADD(aCab,{"F2_DOC"    ,SF2->F2_DOC    ,Nil})
								AADD(aCab,{"F2_SERIE"  ,SF2->F2_SERIE  ,Nil})
								AADD(aCab,{"F2_CLIENTE",SF2->F2_CLIENTE,Nil})
								AADD(aCab,{"F2_LOJA"   ,SF2->F2_LOJA   ,Nil})
								AADD(aCab,{"F2_TIPODOC",SF2->F2_TIPODOC,Nil})

								SD2->(dbSetOrder(1))
								SD2->(dbSeek(xFilial("SD2")+cNFiscal+cSerie+cFornece+cLoja))
								While SD2->(!Eof()) .and. SD2->D2_FILIAL == xFilial("SD2")  .and.;
										SD2->D2_DOC == cNFiscal .and. SD2->D2_SERIE == cSerie .and.;
										SD2->D2_CLIENTE == cFornece .and. SD2->D2_LOJA == cLoja
									aItem:={}
									AADD(aItem,{"D2_DOC"    ,SD2->D2_DOC    ,Nil})
									AADD(aItem,{"D2_SERIE"  ,SD2->D2_SERIE  ,Nil})
									AADD(aItem,{"D2_CLIENTE",SD2->D2_FORNECE,Nil})
									AADD(aItem,{"D2_LOJA"   ,SD2->D2_LOJA   ,Nil})
									AADD(aItens,ACLONE(aItem))
									SD2->(dbSkip())
								End

								MsgRun(OemToAnsi(STR0124),,{||MSExecAuto({|x,y,z| MATA467N(x,y,z)},aCab,aItens,5)})	//"Apagando o documento fiscal"
								cCondicao := cCondFiltro
								If lMSErroAuto
									MostraErro()
									DisarmTrans()
									Return .F.
								EndIf
							Endif
					Endif
					EndIf
				EndIf

				If !(cPaisLoc == "BRA")

					FJS->(dbSetOrder(1))
					FJS->(dbSeek(xFilial("FJS")+SE5->E5_TIPO))

					dbSelectArea("SEF")
					cDocumento := SE5->E5_DOCUMEN
					nRecNoSE5  := SE5->(RecNo())
					nIndexOrd  := SE5->(IndexOrd())

					If SE5->E5_RECPAG == "P"

						If FJS->FJS_TIPOIN == "CH" .and. AllTrim(FJS->FJS_TERCEI) $ "1234"
							//³Cheques de terceiros aplicados no pagamento do Movimento Bancário
							If fA100DelCHQ(cDocumento,"APAGAR")
								//Tratamento para Cheque Próprio
								//Excluir o cheque próprio da diferença qdo este existir...
								SE5->(dbGoTo(nRecNoSE5))
									cNumChSub := FA100NUMCH(SE5->E5_BANCO, SE5->E5_AGENCIA,SE5->E5_CONTA,SE5->E5_TALAO,SE5->E5_NUMCHEQ,SE5->E5_CLIFOR, SE5->E5_LOJA,SE5->E5_TIPO)
									If Empty(cNumChSub)
										cNumChSub := SE5->E5_NUMCHEQ
								EndIf
								SEF->(dbSetOrder(1))
								If SEF->(dbSeek(xFilial("SEF")+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA+PADR(cNumChSub,nLenCheque)))
									cPrefixo := SEF->EF_PREFIXO
									cNumCheq := SEF->EF_NUM
									cParcela := SEF->EF_PARCELA
									cTipCheq := SEF->EF_TIPO

									If SEF->EF_IMPRESS <> "S" .and. SEF->EF_STATUS == "02"	//Cheque não emitido e vinculado ao pagamento.
										RecLock("SEF",.F.)
										EF_VALOR   := 0.00
										EF_DATA    := CTOD("")
										EF_VENCTO  := CTOD("")
										EF_TITULO  := ""
										EF_FORNECE := ""
										EF_LOJA    := ""
										EF_HIST    := ""
										EF_LA      := ""
										EF_STATUS  := "00"
										EF_REFTIP  := ""
										EF_ORIGEM  := ""
										EF_BENEF   := ""
										EF_IDSEF   := ""
										MsUnLock()
										fA100GrvFRF("P","99","ANULADO NA MOV. BANCARIA")

										//Excluir o título CH do Contas à Pagar
										SE2->(dbSetOrder(1))
										SE2->(dbSeek(xFilial("SE2")+cPrefixo+PADR(cNumCheq,Len(SE2->E2_NUM))+cParcela+cTipCheq))
										If SE2->(Found())
											aPagar := {}
											AADD(aPagar,{"E2_FILIAL"	, xFilial("SE2")	,".T."})
											AADD(aPagar,{"E2_PREFIXO"	, SE2->E2_PREFIXO	,".T."})
											AADD(aPagar,{"E2_NUM"		, SE2->E2_NUM	  	,".T."})
											AADD(aPagar,{"E2_PARCELA"	, SE2->E2_PARCELA	,".T."})
											AADD(aPagar,{"E2_TIPO"		, SE2->E2_TIPO		,".T."})

											lMsErroAuto := .F.
											MsgRun(OemToAnsi(STR0115),,{||MsExecAuto({|a,b,c| FINA050(a,b,c) },aPagar,,5)})
											If lMSErroAuto
												MostraErro()
												DisarmTransaction()
												Break
												Return .F.
											EndIf
										EndIf
									EndIf
								EndIf
							EndIf
						EndIf

					ElseIf SE5->E5_RECPAG == "R"

						If FJS->FJS_TIPOIN == "CH"
							//Posicionar no Cheque à partir do numero do cheque registrado.
							SEF->(dbSetOrder(1))
							If SEF->(dbSeek(xFilial("SEF")+SE5->E5_BCOCHQ+SE5->E5_AGECHQ+SE5->E5_CTACHQ+PADR(SE5->E5_NUMCHEQ,nLenCheque)))
								If SEF->EF_STATUS == "01"	//Cheque em Carteira.
									cPrefixo := SEF->EF_PREFIXO
									cNumCheq := SEF->EF_NUM
									cParcela := SEF->EF_PARCELA
									cTipCheq := SEF->EF_TIPO

									RecLock("SEF",.F.)
									dbDelete()
									MsUnLock()
									fA100GrvFRF("R","99","ANULADO NA MOV. BANCARIA")
									//Excluir o título CH do Contas à Pagar
									SE1->(dbSetOrder(1))
									If SE1->(dbSeek(xFilial("SE1")+cPrefixo+PADR(cNumCheq,Len(SE1->E1_NUM))+cParcela+cTipCheq))
										aReceber := {}
										AADD(aReceber,{"E1_FILIAL"	, xFilial("SE1")	,".T."})
										AADD(aReceber,{"E1_PREFIXO"	, SE1->E1_PREFIXO	,".T."})
										AADD(aReceber,{"E1_NUM"		, SE1->E1_NUM	  	,".T."})
										AADD(aReceber,{"E1_PARCELA"	, SE1->E1_PARCELA	,".T."})
										AADD(aReceber,{"E1_TIPO"		, SE1->E1_TIPO		,".T."})
										lMsErroAuto := .F.
										MsgRun(OemToAnsi(STR0123),,{||MsExecAuto({|a,b,c| FINA040(a,b,c) },aReceber,5)})
										If lMSErroAuto
											MostraErro()
											DisarmTransaction()
											Break
											Return .F.
										EndIf
									EndIf
								EndIf
							EndIf
						EndIf

					EndIf
					SE5->(dbSetOrder(nIndexOrd))
					SE5->(dbGoTo(nRecNoSE5))
				EndIf

				cCondicao := cCondFiltro
				dbSelectArea( "SED" )
				dbSeek( cFilial + SE5->E5_NATUREZ )
				dbSelectArea("SA6")
				dbSeek(cFilial+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA)

				IF SE5->E5_VENCTO > SE5->E5_DATA
					lMovBco := .f.
				ElseIf SE5->E5_MOEDA$"C1/C2/C3/C4/C5/CH".and.;
						(Empty(SE5->E5_NUMCHEQ) .or. Substr(SE5->E5_NUMCHEQ,1,1)=="*")
					lMovBco := .f.
				Endif

				If lMovBco .and. ((cPaisLoc == "ARG" .and. !lAchoCH) .or. cPaisLoc <> "ARG") 
					AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,dDataBase,SE5->E5_VALOR,cSinal)
				EndIf
				
				If lMovBco .and. (cPaisLoc == "ARG" .and. lAchoCH) .and. Findfunction("VldCanCh")
					VldCanCh(2)
				EndIF

				If lAtuSldNat
					SA6->( DbSetOrder(1) )
					SA6->( dbSeek( xFilial() + SE5->E5_BANCO + SE5->E5_AGENCIA + SE5->E5_CONTA ) )

					cMoedaBnc  := StrZero( Max(SA6->A6_MOEDA, 1 ), 2)
					nValorConv := Iif (Empty(SE5->E5_TXMOEDA), SE5->E5_VALOR, SE5->E5_VALOR * SE5->E5_TXMOEDA)

					AtuSldNat(SE5->E5_NATUREZ, SE5->E5_DATA, cMoedaBnc, "3", cRecPag, SE5->E5_VALOR, nValorConv, "-",,FunName(),"SE5", SE5->(Recno()),nOpc)
				Endif

				// Marca o registro para que nao se possa cancelar n vezes
				cCamposE5 := "{{'E5_SITUACA', 'X'}" //identificacao de um movimento estornado
				cCamposE5 += ",{'E5_MOVFKS', 'S'}"
				cCamposE5 += "}"

				oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
				oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
				oModelMov:Activate()
				oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
				oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 )

				//Posiciona a FKA com base no IDORIG da SE5 posicionada
				oSubFKA := oModelMov:GetModel( "FKADETAIL" )
				If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

					lRet := (oModelMov:VldData() .and. oModelMov:CommitData())
					If !lRet
						cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
						cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
						cLog += cValToChar(oModelMov:GetErrorMessage()[6])
						Help(,,"MF100CAN1",,cLog, 1, 0 )
					Endif
				Endif
				oModelMov:DeActivate()
				oModelMov:Destroy()
				oModelMov := NIL

				If cRateio == "S"
					If !CtbInUse()
						cPadrao := Iif(cRecPag =="R","517","516")
					Else
						cPadrao := Iif(cRecPag =="R","558","557")
					EndIf
				Else
					cPadrao := IIF ( cRecPag ="P","564","565" )
				Endif

				lPadrao  := VerPadrao( cPadrao )
				If nOpc == 6  //Estorno (Cancelamento)

					//Pega o número do processo e define no campo virtual do Model
					cProcFKs := FINProcFKs( SE5->E5_IDORIG, "FK5" )
					cCamposE5 := "{"

					//Define os campos que não existem na FK5 e que serão gravados apenas na E5, para que a gravação da E5 continue igual
					cCamposE5 += "{'E5_SITUACA', 'E'}" //identificacao de um estorno bancario manual, usado para diferenciar o registro na contabilizacao.
					cCamposE5 += ",{'E5_IDMOVI', '" + SE5->E5_IDMOVI + "' } "
					cCamposE5 += ",{'E5_VENCTO', STOD('" + DTOS(dVencto) + "')}"
					cCamposE5 += ",{'E5_DTDIGIT', dDataBase}"
					cCamposE5 += ",{'E5_BENEF', '" + cBenef + "'}"
					If cPaisLoc == "ARG" .and. lAchoCH 
						cCamposE5 += ",{'E5_TIPODOC','" + nTpDoc + "'} " 
					Else
						cCamposE5 += ",{'E5_TIPODOC', '  ' } "
					EndIf
					cCamposE5 += ",{'E5_MOVFKS', 'S'}"
					cCamposE5 += ",{'E5_DEBITO', '"	+ cCredito	+ "'}"		// Inverter
					cCamposE5 += ",{'E5_CREDITO', '"+ cDebito	+ "'}"		// Inverter
					cCamposE5 += ",{'E5_CCC', '"	+ cCCD 		+ "'}"		// Inverter
					cCamposE5 += ",{'E5_CCD', '"	+ cCCC 		+ "'}"		// Inverter
					cCamposE5 += ",{'E5_ITEMC', '"	+ cItemD 	+ "'}"		// Inverter
					cCamposE5 += ",{'E5_ITEMD', '"	+ cItemC 	+ "'}"		// Inverter
					cCamposE5 += ",{'E5_CLVLCR', '"	+ cClVlDB	+ "'}"		// Inverter
					cCamposE5 += ",{'E5_CLVLDB', '" + cClVlCR	+ "'}"		// Inverter
					cCamposE5 += ",{'E5_PROCTRA', '" +SE5->E5_PROCTRA	+ "'}"		

					If lEnti5 .And. lValCpo5
						cCamposE5 += ",{'E5_EC05CR', '" + cEnti5Db	+ "'}"   // Inverter Entidade contabil
						cCamposE5 += ",{'E5_EC05DB', '" + cEnti5Cr	+ "'}"   // Inventer Entidade contabil
					Endif

					If lEnti6 .And. lValCpo6
						cCamposE5 += ",{'E5_EC06CR', '" + cEnti6Db	+ "'}"   // Inverter Entidade contabil
						cCamposE5 += ",{'E5_EC06DB', '" + cEnti6Cr	+ "'}"   // Inventer Entidade contabil
					Endif

					If lEnti7 .And. lValCpo7
						cCamposE5 += ",{'E5_EC07CR', '" + cEnti7Db	+ "'}"   // Inverter Entidade contabil
						cCamposE5 += ",{'E5_EC07DB', '" + cEnti7Cr	+ "'}"   // Inventer Entidade contabil
					Endif

					If lEnti8 .And. lValCpo8
						cCamposE5 += ",{'E5_EC08CR', '" + cEnti8Db	+ "'}"   // Inverter Entidade contabil
						cCamposE5 += ",{'E5_EC08DB', '" + cEnti8Cr	+ "'}"   // Inventer Entidade contabil
					Endif

					If lEnti9 .And. lValCpo9
						cCamposE5 += ",{'E5_EC09CR', '" + cEnti9Db	+ "'}"   // Inverter Entidade contabil
						cCamposE5 += ",{'E5_EC09DB', '" + cEnti9Cr	+ "'}"   // Inventer Entidade contabil
					Endif

					If cPaisLoc == "ARG"
						If cTipoMov == "01"
							cCamposE5 += ",{'E5_NUMERO', '" + cNFiscal + "'}"
							cCamposE5 += ",{'E5_PREFIXO', '" + cPrefixNF + "'}"
							cCamposE5 += ",{'E5_CLIFOR', '" + cFornece + "'}"
							cCamposE5 += ",{'E5_LOJA', '" + cLoja + "'}"
						Endif
					Endif

					If cPaisLoc == "BRA"
						If mv_par04 == 1 .And. lPadrao .And. Alltrim(cLa) == "S" .And. cPadrao $ "516/517/557/558" .And. !lUsaFlag
							cCamposE5 += ",{'E5_LA', 'S'}"
						EndIf
					Else
						//caso nao haja contabilizacao, ou e contabilizacao com rateio, chamo a rotina de gravacao de ITF sem contabilizacao
						If !( lPadrao .and. SubStr(cLa,1,1) == "S"	.And. cPadrao $ "516/517/557/558") .And. mv_par04 <> 1
							If cRecPag $ "P|R" .And. lFindITF .And. FinProcITF( SE5->( Recno() ),1 )
								FinProcITF( SE5->( Recno() ), 6, , .F.,, )
							EndIf
						ElseIf lPadrao .And. cPadrao $ "516/517/557/558"
							cCamposE5 += ",{'E5_LA', 'S'}"
						EndIf
					EndIf

					cCamposE5 += "}"

					//Inclusão do movimento de estorno
					oModelMov := FWLoadModel("FINM030")
					oModelMov:SetOperation( MODEL_OPERATION_INSERT ) //Inclusão
					oModelMov:Activate()
					oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
					oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 )
					oModelMov:SetValue( "MASTER", "IDPROC", cProcFKs )
					oModelMov:SetValue( "MASTER", "NOVOPROC", .F. ) //Informa que a inclusão será feita com um novo número de processo

					//Dados do Processo
					oSubFKA := oModelMov:GetModel("FKADETAIL")
					oSubFKA:SetValue( "FKA_IDORIG", FWUUIDV4() )
					oSubFKA:SetValue( "FKA_TABORI", "FK5" )

					//Dados do movimento
					oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
					oSubFK5:SetValue( "FK5_VALOR", nValor )
					oSubFK5:SetValue( "FK5_BANCO", cBanco )
					oSubFK5:SetValue( "FK5_AGENCI", cAgencia )
					oSubFK5:SetValue( "FK5_CONTA", cConta )
					oSubFK5:SetValue( "FK5_NATURE", cNaturez )
					oSubFK5:SetValue( "FK5_DATA", dDataBase )
					oSubFK5:SetValue( "FK5_DTDISP", dDatabase )
					oSubFK5:SetValue( "FK5_DOC", cDocumen )
					oSubFK5:SetValue( "FK5_TPDOC", "ES" )
					oSubFK5:SetValue( "FK5_HISTOR", SubStr(STR0055 + AllTrim(cHistor),1,nLenHist)) //"ESTORNO "
					oSubFK5:SetValue( "FK5_NUMCH", cNumCheq ) //
					oSubFK5:SetValue( "FK5_RECPAG", Iif(cRecPag=="R","P","R") )
					oSubFK5:SetValue( "FK5_MOEDA", cMoeda )
					oSubFK5:SetValue( "FK5_FILORI", cFilAnt )
					oSubFK5:SetValue( "FK5_RATEIO", Iif( cRateio == "S", "1", "2" ) )
					oSubFK5:SetValue( "FK5_VLMOE2", nVlMoed2 )
					oSubFK5:SetValue( "FK5_ORIGEM", FunName() )
					oSubFK5:SetValue( "FK5_CCUSTO", cCCusto )
					oSubFK5:SetValue( "FK5_TXMOED", nTxMoeda )
					If cPaisLoc == "ARG"
						If cTipoMov == "01"
							oSubFK5:SetValue("FK5_TPMOV", If(cTipoMov=="01", "1", "2" ) )
						Endif
					Endif

					//Dados Contábeis
					cAuxTpLan := cTipoLan
					If cAuxTpLan == "D"
						cAuxTpLan := "1"
					ElseIf cAuxTpLan == "C"
						cAuxTpLan := "2"
					ElseIf cAuxTpLan == "X"
						cAuxTpLan := "3"
					Else
						cAuxTpLan := ""
					Endif
					oSubFK8 := oModelMov:GetModel("FK8DETAIL")
					oSubFK8:SetValue( "FK8_DEBITO", cCredito )	//inverter
					oSubFK8:SetValue( "FK8_CREDIT", cDebito )	//inverter
					oSubFK8:SetValue( "FK8_TPLAN", cAuxTpLan )
					oSubFK8:SetValue( "FK8_CCD", cCCC ) //inverter
					oSubFK8:SetValue( "FK8_CCC", cCCD ) //inverter
					oSubFK8:SetValue( "FK8_ITEMD", cItemC ) //inverter
					oSubFK8:SetValue( "FK8_ITEMC", cItemD ) //inverter
					oSubFK8:SetValue( "FK8_CLVLDB", cClVlCR ) //inverter
					oSubFK8:SetValue( "FK8_CLVLCR", cClVlDB ) //inverter
					oSubFK8:SetValue( "FK8_ARQRAT", cArqRat ) //Arquivo de rateio do titulo original

					lRet := (oModelMov:VldData() .and. oModelMov:CommitData())
					If !lRet
						cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
						cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
						cLog += cValToChar(oModelMov:GetErrorMessage()[6])
						Help(,,"MF100CAN2",,cLog, 1, 0 )
					Endif
					oModelMov:DeActivate()
					oModelMov:Destroy()
					oModelMov := NIL

					If IntePMS()
						DbSelectArea("AJE")
						DbSetOrder(3)
						If AJE->(DbSeek(xFilial("SE5")+E5_PROJPMS))
							RecLock("AJE",.F.)
							AJE->(DBDelete())
							AJE->(MsUnlock())
						EndIf
					Endif
				Else //Exclusao

					oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)

					cCamposE5 := "{"
					cCamposE5 += "{'E5_LA', '" + SE5->E5_LA + "'}" //Manda o campo LA com o valor de 2 Caracteres, para manter a gravação original na E5
					cCamposE5 += ",{'E5_DEBITO', '"	+ cCredito	+ "'}"
					cCamposE5 += ",{'E5_CREDITO', '"+ cDebito	+ "'}"
					cCamposE5 += ",{'E5_CCC', '"	+ cCCD 		+ "'}"
					cCamposE5 += ",{'E5_CCD', '"	+ cCCC 		+ "'}"
					cCamposE5 += ",{'E5_ITEMC', '"	+ cItemD 	+ "'}"
					cCamposE5 += ",{'E5_ITEMD', '"	+ cItemC 	+ "'}"
					cCamposE5 += ",{'E5_CLVLCR', '"	+ cClVlDB	+ "'}"
					cCamposE5 += ",{'E5_CLVLDB', '" + cClVlCR	+ "'}"
					cCamposE5 += "} "

					//Tratamento para o estorno do troco do loja, que deve excluir o registro da SE5, ao invés de mudar o E5_SITUACA para "C"
					nOperacEst := Iif( lTrocoLoja, 3, 1 )

					oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
					oModelMov:Activate()
					oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação SE5
					oModelMov:SetValue( "MASTER", "E5_OPERACAO", nOperacEst ) //E5_OPERACAO 1 = Altera E5_SITUACA da SE5 para 'C' e gera estorno na FK5
					oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) // Limpa o Flag do E5_LA e para contabilizar a exclusão off-line

					//Posiciona a FKA com base no IDORIG da SE5 posicionada
					oSubFKA := oModelMov:GetModel( "FKADETAIL" )
					If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

						lRet := (oModelMov:VldData() .and. oModelMov:CommitData())
						If !lRet
							cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[6])
							Help(,,"MF100CAN3",,cLog, 1, 0 )
						Endif
					Endif
					oModelMov:DeActivate()
					oModelMov:Destroy()
					oModelMov := NIL

					//caso nao haja contabilizacao, ou e contabilizacao com rateio, chamo a rotina de gravacao de ITF sem contabilizacao
					If cPaisLoc <> "BRA"
						If !( lPadrao .and. SubStr(cLa,1,1) == "S"	.And. cPadrao $ "516/517/557/558") .And. mv_par04 <> 1
							If cRecPag $ "P|R" .And. lFindITF .And. FinProcITF( SE5->( Recno() ),1 )
								FinProcITF( SE5->( Recno() ), 5, , .F.,, )
							EndIf
						EndIf
					EndIf
					If IntePMS()
						DbSelectArea("AJE")
						DbSetOrder(3)
						If AJE->(DbSeek(xFilial("SE5")+E5_PROJPMS))
							RecLock("AJE",.F.)
							AJE->(DBDelete())
							AJE->(MsUnlock())
						EndIf
					Endif
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Cancela o Novo Cheque emitido								 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				IF cRecPag = "P" .and. E5_MOEDA $ "C1þC2þC3þC4þC5/CH"
					If cPaisLoc == "BRA"
						fA100CanCh()
					Else
						fA100CanCh(cNumChSub)
					EndIf
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Executa ponto de entrada         						  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lFa100CAN
					Execblock("FA100CAN",.f.,.f.)
				Endif

				// Volta a database original se confirmou o cancelamento da movimentacao com data posterior a database
				If nCanMPost == 1
					dDataBase := dDataOrig
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Lacncamento orcamentario                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nOpc == 6  //Estorno (Cancelamento)
					nRecnoLP := SE5->(RECNO())
					SE5->(dbSkip(-1))	//	Para o PCO montar o GRID no registro correto
				Endif
				If cRecPag ="P"
					lRet := PcoDetLan("000007","07","FINA100")
				Else
					lRet := PcoDetLan("000007","08","FINA100")
				EndIf

				If nOpc == 6
					SE5->(dbGoto(nRecnoLP))
				EndIf
				If lRet
					dDtBkp := dDataBase
					If SuperGetMv("MV_DTCNMOV",.F.,'1') == '2' // Data de contabilização movimento bancário; 1 = database (default); 2 - Data do Movimento
						If dDataBase < SE5->E5_DATA
							dDataBase := SE5->E5_DATA
						EndIf
					EndIf
					If cPadrao $ "516/517"
						cArq := fa050rate( cPadrao , "FINA100" ,"E",@nHdlPrv,@cArquivo)
						If !Empty(cArquivo)
							If UsaSeqCor()
								aDiario := {{"SE5",SE5->(RECNO()),cCodDiario,"E5_NODIA","E5_DIACTB"}}
							Else
								aDiario := {}
							Endif

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Efetiva Lan‡amento Contabil                                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RodaProva( nHdlPrv,;
										nTotal )

							cA100Incl( cArquivo,;
										nHdlPrv,;
										3 /*nOpcx*/,;
										cLote,;
										.T. /*lDigita*/,;
										.F. /*lAglut*/,;
										/*cOnLine*/,;
										/*dData*/,;
										/*dReproc*/,;
										@aFlagCTB,;
										/*aDadosProva*/,;
										aDiario )
							aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento

						End
					ElseIf cPadrao $ "557/558"
						cProcPCO := "000007"
						If cRecPag ="P"
							cItemPCO := "09"
						Else
							cItemPCO := "10"
						EndIf
						CtbRatFin(cPadrao,"FINA100",cLote,3," ",nOpc,NIL/*cDebito*/,NIL/*cCredito*/,NIL/*cHistorico*/,NIL/*nHdlPrv*/,NIL/*nTotal*/,NIL/*aFlagCTB*/, cProcPCO, cItemPCO, cRecPag )
					Else
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Lan‡amento Contabil                                               ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						lPadrao := VerPadrao( cPadrao )
						If lPadrao .and. SubStr(cLa,1,1) == "S"		// Contabiliza apenas se a origem foi contabilizada

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Inicializa Lancamento Contabil                                   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							nHdlPrv := HeadProva( cLote,;
													"FINA100" /*cPrograma*/,;
													Substr( cUsuario, 7, 6 ),;
													@cArquivo )

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Prepara Lancamento Contabil                                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If !Empty(nRecnoLP)
								SE5->(DbGoTo(nRecnoLP))
							EndIf
							If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
								aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
							Endif
							nTotal += DetProva( nHdlPrv,;
												cPadrao,;
												"FINA100" /*cPrograma*/,;
												cLote,;
												/*nLinha*/,;
												/*lExecuta*/,;
												/*cCriterio*/,;
												/*lRateio*/,;
												/*cChaveBusca*/,;
												/*aCT5*/,;
												/*lPosiciona*/,;
												@aFlagCTB,;
												/*aTabRecOri*/,;
												/*aDadosProva*/ )
							If cPaisLoc <> "BRA"
								If cRecPag $ "P|R" .And. lFindITF .And. FinProcITF( SE5->( Recno() ),1 )
									If nOpc == 6//estorno
										FinProcITF( SE5->( Recno() ), 6, , .F.,{ nHdlPrv, cPadrao, "", "FINA100", cLote }, @aFlagCTB)
									Else//exclusao
										FinProcITF( SE5->( Recno() ), 5, , .F.,{ nHdlPrv, cPadrao, "", "FINA100", cLote }, @aFlagCTB)
									EndIf
								EndIf
							EndIf	

							If UsaSeqCor()
								aDiario := {{"SE5",SE5->(RECNO()),cCodDiario,"E5_NODIA","E5_DIACTB"}}
							Else
								aDiario := {}
							Endif

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Efetiva Lan‡amento Contabil                                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							lMostra   := If( mv_par02 == 1, .T., .F. )
							lAglutina := If( mv_par01 == 1, .T., .F. )

							RodaProva( nHdlPrv,;
											nTotal )
							cA100Incl( cArquivo,;
										nHdlPrv,;
										3 /*nOpcx*/,;
										cLote,;
										lMostra /*lDigita*/,;
										lAglutina /*lAglut*/,;
										/*cOnLine*/,;
										/*dData*/,;
										/*dReproc*/,;
										@aFlagCTB,;
										/*aDadosProva*/,;
										aDiario )
							aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento

							If !lUsaFlag

								//Manda o campo LA com o valor de 2 Caracteres, para manter a gravação original na E5
								cCamposE5 := "{{'E5_LA', 'S'}"
								cCamposE5 += ",{'E5_MOVFKS', 'S'}"
								cCamposE5 += "}"

								oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
								oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
								oModelMov:Activate()
								oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5
								oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5

								//Posiciona a FKA com base no IDORIG da SE5 posicionada
								oSubFKA := oModelMov:GetModel( "FKADETAIL" )
								If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

									//Dados Contábeis
									oSubFK5 := oModelMov:GetModel("FK5DETAIL")
									oSubFK5:SetValue( "FK5_LA", "S" ) //Salva apenas 1 caractere (S ou N) nas FKs

									lRet := (oModelMov:VldData() .and. oModelMov:CommitData())
									If !lRet
										cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
										cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
										cLog += cValToChar(oModelMov:GetErrorMessage()[6])
										Help(,,"MF100CAN4",,cLog, 1, 0 )
									Endif
								Endif
								oModelMov:DeActivate()
								oModelMov:Destroy()
								oModelMov := NIL
							Endif
						Endif
					Endif
					PcoFinLan('000007')
					dDataBase := dDtBkp
				Endif

				// Integração EAI.
				If lRet .and. lEAIA100
					SetMsgOpc(nOpc)
					aRetInteg := FwIntegDef('FINA100',,,, 'FINA100')
					// Se der erro no envio da integração, então faz rollback e apresenta mensagem em tela para o usuário.
					If !aRetInteg[1]
						Help(,, "FINA100INTEG",, STR0146 + AllTrim(aRetInteg[2]), 1, 0,,,,,, {STR0147}) // "O movimento bancário não será gravado pois ocorreu um erro na integração: ", "Verifique as configurações da integração EAI."
						lRet := .F.
					EndIf
				EndIf

				If !lRet
					DisarmTransaction()
				Endif

			End Transaction
		Else
			If nCanMPost == 1
				dDataBase := dDataOrig
			Endif
			MsUnlock()
		Endif
		Exit
	Enddo

	dbSelectArea( cAlias )
	If cPaisLoc <> "BRA" .And. lbFilBrw
		Eval( bFiltraBrw )
	Endif

	// Verifica o arquivo de rateio, e apaga o arquivo temporario
	// para que no proximo rateio seja criado novamente
	If Select("TMP") > 0
		DbSelectArea( "TMP" )
		cArqRat := DbInfo(DBI_FULLPATH)
		cArqRat := AllTrim(SubStr(cArqRat,Rat("\",cArqRat)+1))
		DbCloseArea()
		FErase(cArqRat)
	EndIf
	If lPanelFin  //Chamado pelo Painel Financeiro
		dbSelectArea(FinWindow:cAliasFile)
		FinVisual(FinWindow:cAliasFile,FinWindow,(FinWindow:cAliasFile)->(Recno()))
	Endif

	If IntePMS().AND. !lPmsInt
		SetKey(VK_F10, Nil)
	EndIf

Return /*Function Fa100Can*/

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fa100conta³ Autor ³ Wagner Xavier         ³ Data ³ 30/04/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verifica se a conta foi digitada de acordo com o Tipo       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa100conta()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION fa100conta()
LOCAL lRet AS LOGICAL
LOCAL aArea AS ARRAY

lRet := .T.
aArea := GetArea()

IF cRecPag == "P" // So consiste banco no pagamento
	IF !EMPTY(M->E5_BANCO) .OR. !EMPTY(M->E5_AGENCIA) .OR. !EMPTY(M->E5_CONTA)
		
		DBSELECTAREA("SA6")
		SA6->(DBSETORDER(1))  // A6_FILIAL, A6_COD, A6_AGENCIA, A6_NUMCON.
		
		lRet := SA6->(MSSeek(cFilial + M->E5_BANCO + M->E5_AGENCIA + M->E5_CONTA, .F.))
		IF !lRet
			Help(" ",1,"BCONOEXIST")

			//Caso o registro não seja encontrado limpa os campos para permitir informar os dados novamente.
			M->E5_CONTA := SPACE(TamSX3("E5_CONTA")[1])
			
			lRet := SA6->(MSSeek(cFilial + M->E5_BANCO + M->E5_AGENCIA, .F.))
			IF !lRet
				M->E5_AGENCIA := SPACE(TamSX3("E5_AGENCIA")[1])
			ENDIF
			
			lRet := SA6->(MSSeek(cFilial + M->E5_BANCO, .F.))
			IF !lRet
				M->E5_BANCO := SPACE(TamSX3("E5_BANCO")[1])
			ENDIF
			
			GetDRefresh()
		ENDIF
	Endif
ENDIF

RestArea(aArea)

RETURN lRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fa100NumC ³ Autor ³ Wagner Xavier         ³ Data ³ 30/04/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verifica se cheque foi digitado de acordo com moeda         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa100NumC()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa100NumC()
Local lRet			:= .T.
Local aAreaSE5	:= SE5->(GetArea())
Local aArea		:= GetArea()

If Empty(M->E5_NUMCHEQ)
	If cPaisLoc == "BRA" .and. M->E5_TIPO <> "CH "
		If (M->E5_MOEDA $ "C1.C2.C3.C4.C5")
			Help(" ", 1, "NumeroCheq")
			lRet := .F.
		EndIf
	EndIf
Else
	DbSelectArea("SEF")
	SEF->(DbSetOrder(1))
	If SEF->( DbSeek( xFilial("SEF") + M->E5_BANCO + M->E5_AGENCIA + M->E5_CONTA + M->E5_NUMCHEQ ) )
		lRet := .F.
		Help(, , "JaTemCheq", , , , , , , , , , )
	EndIf
EndIf

RestArea(aArea)
RestArea(aAreaSE5)

Return lRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fa100venc ³ Autor ³ Wagner Xavier         ³ Data ³ 30/04/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verifica se a data de vencimento foi digitada               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa100Venc()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa100venc()
Local lRet:=.T.
IF Empty(M->E5_VENCTO) .And. !Empty(M->E5_NUMCHEQ)
	Help(" ",1,"Vencimento")
	lRet:=.F.
End
Return lRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fa100tit  ³ Autor ³ Wagner Xavier         ³ Data ³ 30/04/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Gera titulo de cheque, com data do vencimento               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa100tit()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fa100tit()
Local cAlias:=Alias()
Local cPrefixo := "CHQ"
Local cParcela := TamParcela("E1_PARCELA","1","01","001")
Local cCliente := GetMv("MV_CLIPAD")

//Cria Fornecedor Padrao
dbSelectArea("SA1")
dbSetOrder(1)
If !dbSeek(xfilial("SA1")+cCliente+"01")
	Reclock("SA1",.T.)
	SA1->A1_FILIAL := cFilial
	SA1->A1_COD 	:= cCliente
	SA1->A1_LOJA	:= "01"
	SA1->A1_NOME	:= "CLIENTE PADRAO"
	SA1->A1_NREDUZ := "CLIENTE PADRAO"
	SA1->A1_BAIRRO := "."
	SA1->A1_MUN 	:= "."
	SA1->A1_EST 	:= SuperGetMv("MV_ESTADO")
	SA1->A1_End 	:= "."
	SA1->A1_TIPO	:= "J"
	MsUnlock()
	FKCOMMIT()
Endif

dbSelectArea( "SE1" )
dbSetOrder ( 1 )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o titulo ja existe. Em caso afirmativo, ser adi- ³
//³ cionado 1 ao prefixo do titulo. 									  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
While .T.

	If dbSeek( xFilial("SE1")+cPrefixo+Substr(SE5->E5_NUMCHEQ,1,TamSX3("E1_NUM")[1]) + ;
			cParcela+ Substr(MVCHEQUE,1,3) )
		cPrefixo := Soma1( cPrefixo )
		Loop
	Endif
	Reclock("SE1",.T.)
	SE1->E1_FILIAL 	:= xFilial()
	SE1->E1_PREFIXO	:= cPrefixo
	SE1->E1_NUM 		:= Substr(SE5->E5_NUMCHEQ,1,TamSX3("E1_NUM")[1])
	SE1->E1_TIPO		:= MVCHEQUE
	SE1->E1_PARCELA	:= cParcela
	SE1->E1_VENCTO 	:= SE5->E5_VENCTO
	SE1->E1_VENCREA	:= DataValida(SE5->E5_VENCTO,.T.)
	SE1->E1_VENCORI	:= DataValida(SE5->E5_VENCTO,.T.)
	SE1->E1_VALOR		:= SE5->E5_VALOR
	SE1->E1_SALDO		:= SE5->E5_VALOR
	SE1->E1_NATUREZ	:= SE5->E5_NATUREZ
	SE1->E1_EMISSAO	:= SE5->E5_DATA
	SE1->E1_EMIS1		:= SE5->E5_DATA
	SE1->E1_HIST		:= SE5->E5_HISTOR
	SE1->E1_SITUACA	:= "0"
	SE1->E1_CLIENTE	:= IIF(Empty(SE5->E5_CLIFOR),cCliente,SE5->E5_CLIFOR)
	SE1->E1_LOJA		:= "01"
	SE1->E1_MOEDA		:= 1
	dbSelectArea("SA1")
	dbSeek(cFilial+SE1->E1_CLIENTE+SE1->E1_LOJA)
	dbSelectArea("SE1")
	SE1->E1_NOMCLI := SA1->A1_NREDUZ
	SE1->E1_VLCRUZ := SE1->E1_VALOR
	If cPaisLoc <> "BRA"
		SA6->(DbSetOrder(1))
		SA6->(DbSeek(xFilial()+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA))
		SE1->E1_MOEDA  := Max(SA6->A6_MOEDA,1)
		SE1->E1_VLCRUZ := xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,1,dDataBase)
	Endif
	If SpbInUse()
		SE1->E1_MODSPB := SE5->E5_MODSPB
	Endif
	Exit
End
MsUnLock()
dbSelectArea( cAlias )
Return

//-----------------------------------------------------------------------------------------------------
/*/{Protheus.doc} fa100TitPg
Gera titulo de cheque, com data do vencimento

@author Mauricio Pequim Jr.
@since 28/06/2018
@version 12
/*/
//-----------------------------------------------------------------------------------------------------
Static Function fa100TitPg()

Local cAlias	:= Alias()
Local cPrefixo	:= "CHQ"
Local cParcela	:= TamParcela("E2_PARCELA","1","01","001")
Local cFornece	:= PADR(GetMv("MV_FORPAD"), TamSx3("E2_FORNECE")[1])
Local cLoja		:= PADR("00", TamSx3("E2_LOJA")[1])
Local nTamNum	:= TamSX3("E1_NUM")[1]
Local cTipCheq	:= Substr(MVCHEQUE,1,3)
Local cNumTit	:= Substr(SE5->E5_NUMCHEQ,1,nTamNum)	
Local cNomFor 	:= ""

//Cria Fornecedor Padrao
dbSelectArea("SA2")
dbSetOrder(1)
If !dbSeek(xfilial("SA2")+cFornece+cLoja)
	Reclock("SA2",.T.)
	SA2->A2_FILIAL	:= xFilial("SA2")
	SA2->A2_COD 	:= cFornece
	SA2->A2_LOJA	:= cLoja
	SA2->A2_NOME	:= "FORNECEDOR PADRAO"
	SA2->A2_NREDUZ	:= "FORNECEDOR PADRAO"
	SA2->A2_BAIRRO	:= "."
	SA2->A2_MUN 	:= "."
	SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
	SA2->A2_End 	:= "."
	SA2->A2_TIPO	:= "J"
	MsUnlock()
	FKCOMMIT()
Endif

dbSelectArea( "SE2" )
dbSetOrder ( 1 )

// Verifica se o titulo já existe. 
// Em caso afirmativo, ser adicionado 1 ao prefixo do titulo.

While dbSeek( xFilial("SE2")+ cPrefixo + cNumTit + cParcela + cTipCheq)
	cPrefixo := Soma1( cPrefixo )
Enddo

Reclock("SE2",.T.)
SE2->E2_FILIAL  := xFilial("SE2")
SE2->E2_PREFIXO := cPrefixo
SE2->E2_NUM		:= cNumTit
SE2->E2_TIPO	:= cTipCheq
SE2->E2_PARCELA := cParcela
SE2->E2_VENCTO  := SE5->E5_VENCTO
SE2->E2_VENCREA := DataValida(SE5->E5_VENCTO,.T.)
SE2->E2_VENCORI := DataValida(SE5->E5_VENCTO,.T.)
SE2->E2_VALOR	:= SE5->E5_VALOR
SE2->E2_SALDO	:= SE5->E5_VALOR
SE2->E2_NATUREZ := SE5->E5_NATUREZ
SE2->E2_EMISSAO := SE5->E5_DATA
SE2->E2_EMIS1	:= SE5->E5_DATA
SE2->E2_HIST	:= SE5->E5_HISTOR
SE2->E2_FORNECE := IIF(Empty(SE5->E5_CLIFOR),cFornece,SE5->E5_CLIFOR)
SE2->E2_LOJA	:= IIF(Empty(SE5->E5_LOJA),cLoja,SE5->E5_LOJA)
SE2->E2_MOEDA	:= MoedaBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA)
SE2->E2_VLCRUZ  := xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1,dDataBase)
SE2->E2_ORIGEM  := "FINA100"		// Identifica Rotina Geradora

cNomFor := GetAdvFVal("SA2","A2_NREDUZ",xFilial("SA2")+SE2->(E2_FORNECE+E2_LOJA),1,"",.T.)
Replace E2_NOMFOR With cNomFor

If SpbInUse()
	SE2->E2_MODSPB := SE5->E5_MODSPB
Endif

MsUnLock()
dbSelectArea( cAlias )

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fa100data³ Autor ³ Wagner Xavier         ³ Data ³ 03/06/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Consiste data da movimentacao.                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fa100data()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa100data()
Local lRet:=.T.
Local lMovRetro := SuperGetMV("MV_DTMOVRE",.T.,.F.)
Local nMovRetro := SuperGetMV("MV_DTMOVDR",,999)

If !Dtmovfin(M->E5_DATA,,"3")
	lRet:=.F.
ElseIF lMovRetro
	if (M->E5_DATA + nMovRetro < dDataBase)
		If (!lF100Auto)
			Help(" ",1,"DATAANTER")
			lRet:=.F.
		EndIf
	Endif
Else
 	if(M->E5_DATA  < dDataBase)
		If (!lF100Auto)
			Help(" ",1,"DATAANTER")
			lRet:=.F.
		EndIf
 	Endif
EndIF

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fa100tran³Autor  ³ Wagner Xavier         ³ Data ³ 03/06/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Transferencia entre bancos/agencias.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fa100tran()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa100tran(cAlias As Character, nReg As Numeric, nOpc As Numeric, aM As Array, aAutoCab As Array) As Logical
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define Vari veis 														  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Local lPanelFin 	:= IsPanelFin()
	LOCAL cBcoOrig		:= CriaVar("E5_BANCO")
	LOCAL cBcoDest		:= CriaVar("E5_BANCO")
	LOCAL cAgenOrig		:= CriaVar("E5_AGENCIA")
	LOCAL cAgenDest		:= CriaVar("E5_AGENCIA")
	LOCAL cCtaOrig		:= CriaVar("E5_CONTA")
	LOCAL cCtaDest		:= CriaVar("E5_CONTA")
	LOCAL cNaturOri		:= CriaVar("E5_NATUREZ")
	LOCAL cNaturDes		:= CriaVar("E5_NATUREZ")
	LOCAL cDocTran		:= CriaVar("E5_NUMCHEQ")
	LOCAL cHist100		:= CriaVar("E5_HISTOR")
	LOCAL nValorTran	:= 0
	LOCAL nOpcA			:= 0
	LOCAL cBenef100 	:= CriaVar("E5_BENEF")
	LOCAL oDlg			:= NIL
	LOCAL lA100BL01		:= ExistBlock("A100BL01")
	LOCAL lF100DOC		:= ExistBlock("F100DOC")
	LOCAL aValores		:= {}
	LOCAL lGrava		:= .F.
	LOCAL nA			:= 0
	LOCAL cMoedaTx		:= ""
	LOCAL lSpbInUse		:= SpbInUse()
	LOCAL aModalSPB		:=  {"1=TED","2=CIP","3=COMP"}
	LOCAL oModSPB		:= NIL
	LOCAL cModSpb		:= ""
	LOCAL aTrfPms		:= {}
	LOCAL lEstorno		:= .F.
	LOCAL aSimbMoeda	:= {}							//Array com os simbolos das moedas.
	LOCAL nPosMoeda		:= 0							//Verifica a posicao da moeda no array aSimbMoeda
	LOCAL nX			:= 0							//Contador
	LOCAL nTotMoeda		:= 0							//TotMoeda
	LOCAL lExit			:= .F. 						//Executa a rotina apenas uma vez (Painel Gestor)

	Local aValidGet		:= {}
	Local nPosAuto		:= 0
	Local lFA100Get		:= Existblock ("FA100Get")
	Local aFa100Get		:= {}
	Local nDiasDispo	:= SUPERGETMV("MV_DIASCRD",.F.,0)
	Local dDataCred		:= dDatabase + nDiasDispo
	Local dDtdisp		:= dDatabase
	Local lbFilBrw		:= .F.
	Local cGetMoeda		:= ""
	Local laTrfPan		:= .F.
	Local nPosBco		:= 0
	Local nPosAgenci	:= 0
	Local nPosConta		:= 0
	Local nTxTransf     := 0

	Default aAutoCab := {}

	PRIVATE oBcoOrig	:= NIL
	PRIVATE oAgenOrig	:= NIL
	PRIVATE oCtaOrig	:= NIL
	PRIVATE oBcoDest	:= NIL
	PRIVATE oAgenDest	:= NIL
	PRIVATE oCtaDest	:= NIL

	PRIVATE cCodDiario 	:= ""
	PRIVATE aDiario 	:= {}
	PRIVATE nTxEstP		:= 0
	PRIVATE nTxEstR		:= 0

	F100Metric(PROCNAME())

	lPagar      := .F.
	lReceber    := .F.

	//Implementacao do Execauto
	lF100Auto := If(Empty(aAutoCab),.F.,.T.)

	//Se chamado do
	If Type("aTrfPanel") == "A"
		PRIVATE cLote
		PRIVATE cArquivo := " "
		LoteCont( "FIN" )
		laTrfPan := .T.
	Endif

	// rotina externa nao contabiliza (o SIGALOJA usa esta rotina
	// direto da rotina de venda rapida e neste caso
	// o parametro ‚ sempre .T.
	If Substr(Upper(FunName()),1,7) == "LOJA220"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica Permissao "Sangria/Entrada de Troco" - #5 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !LjProfile(5,,,,,.T.)
			Return(NIL)
		EndIf
		lExterno := .T.
	Endif

	PRIVATE aTxMoedas := {}
	/*
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³A moeda 1 e tambem inclusa como um dummy, nao vai ter uso,    ³
	//³mas simplifica todas as chamadas a funcao xMoeda, ja que posso³
	//³passara a taxa usando a moeda como elemento do Array atxMoedas³
	//³Exemplo xMoeda(E1_VALOR,E1_MOEDA,1,dDataBase,,aTxMoedas[E1_MOEDA][2])
	//³Bruno - Paraguay 22/08/2000                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/
	aAdd  (aTxMoedas,{"",1,PesqPict("SM2","M2_MOEDA1")})
	For nA   := 2  To MoedFin()
		cMoedaTx := Str(nA,IIf(nA <= 9,1,2))
		cGetMoeda := GetMv("MV_MOEDA"+cMoedaTx)
		If !Empty(cGetMoeda)
			Aadd(aTxMoedas,{cGetMoeda,RecMoeda(dDataBase,nA),PesqPict("SM2","M2_MOEDA"+cMoedaTx) })
		Else
			Exit
		Endif
	Next

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Deleta a Ocorrencia "EST" no SX5 para for‡ar o usuario a uti-³
	//³ lizar a OPCAO Estorno para que o saldo bancario seja tratado ³
	//³ corretamente.                                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SX5")
	If dbSeek(xFilial()+"14"+"EST")
		Reclock("SX5")
		dbDelete()
		MsUnlock()
	Endif

	PRIVATE nTotal := 0
	PRIVATE cTipoTran := Space(3)

	DEFAULT lFA100TRF := ExistBlock("FA100TRF")
	DEFAULT lPmsInt	  := IsIntegTop(,.T.)


	If Type("bFiltraBrw") == "B"
		lbFilBrw := .T.
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se data do movimento n„o ‚ menor que data limite de ³
	//³ movimentacao no financeiro    										  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !DtMovFin(,,"3")
		If cPaisLoc <> "BRA" .And. lbFilBrw
			Eval( bFiltraBrw )
		Endif
		Return
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicia lancamento no PCO                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoIniLan("000007")

	While .T.

		dbSelectArea("SE5")

		cBcoOrig	:= CriaVar("E5_BANCO")
		cBcoDest	:= CriaVar("E5_BANCO")
		cAgenOrig	:= CriaVar("E5_AGENCIA")
		cAgenDest	:= CriaVar("E5_AGENCIA")
		cCtaOrig	:= CriaVar("E5_CONTA")
		cCtaDest	:= CriaVar("E5_CONTA")
		cNaturOri	:= CriaVar("E5_NATUREZ")
		cNaturDes	:= CriaVar("E5_NATUREZ")
		cDocTran 	:= CriaVar("E5_NUMCHEQ")
		cHist100 	:= CriaVar("E5_HISTOR")
		nValorTran	:= 0
		cBenef100	:= CriaVar("E5_BENEF")
		cTipoTran	:= CriaVar("E5_MOEDA")
		dDataCred	:= DataValida(dDataCred)
		dDtdisp		:= DataValida(dDtdisp)
		If lSpbInUse
			cModSpb := "1"
		Endif
		nOpcA := 0

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Recebe dados a serem digitados 										  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		//Se chamado do Painel Gestor, posicionado numa determinada C/C
		//Já preenche os dados da conta de partida (saida do dinheiro)
		If laTrfPan
			SetKey (VK_F12,{|a,b| AcessaPerg("AFI100",.T.)})
			pergunte("AFI100",.F.)
			lExit := .T.
			If Len(aTrfPanel) > 0
				cBcoOrig	:= aTrfPanel[1]
				cAgenOrig   := aTrfPanel[2]
				cCtaOrig	:= aTrfPanel[3]
			Endif
		Endif

		aSize := MSADVSIZE()

		If lFA100Get
			aFa100Get:= Execblock ("FA100Get",.F.,.F.,{cBcoOrig,cAgenOrig,cCtaOrig,cNaturOri,cBcoDest,cAgenDest,cCtaDest,cNaturDes,cTipoTran,cDocTran,nValorTran,cHist100,cBenef100})
			If ValType(aFa100Get) == "A"
				cBcoOrig 	:= IIF(ValType(aFa100Get[1,1])=="C",aFa100Get[1,1],cBcoOrig)
				cAgenOrig 	:= IIF(ValType(aFa100Get[2,1])=="C",aFa100Get[2,1],cAgenOrig)
				cCtaOrig 	:= IIF(ValType(aFa100Get[3,1])=="C",aFa100Get[3,1],cCtaOrig)
				cNaturOri 	:= IIF(ValType(aFa100Get[4,1])=="C",aFa100Get[4,1],cNaturOri)
				cBcoDest 	:= IIF(ValType(aFa100Get[5,1])=="C",aFa100Get[5,1],cBcoDest)
				cAgenDest 	:= IIF(ValType(aFa100Get[6,1])=="C",aFa100Get[6,1],cAgenDest)
				cCtaDest 	:= IIF(ValType(aFa100Get[7,1])=="C",aFa100Get[7,1],cCtaDest)
				cNaturDes 	:= IIF(ValType(aFa100Get[8,1])=="C",aFa100Get[8,1],cNaturDes)
				cTipoTran 	:= IIF(ValType(aFa100Get[9,1])=="C",aFa100Get[9,1],cTipoTran)
				cDocTran 	:= IIF(ValType(aFa100Get[10,1])=="C",aFa100Get[10,1],cDocTran)
				nValorTran 	:= IIF(ValType(aFa100Get[11,1])=="N",aFa100Get[11,1],nValorTran)
				cHist100 	:= IIF(ValType(aFa100Get[12,1])=="C",aFa100Get[12,1],cHist100)
				cBenef100 	:= IIF(ValType(aFa100Get[13,1])=="C",aFa100Get[13,1],cBenef100)
			EndIf
		EndIF

		If !lF100Auto
			If lPanelFin  //Chamado pelo Painel Financeiro
				oPanelDados := FinWindow:GetVisPanel()
				oPanelDados:FreeChildren()
				aDim := DLGinPANEL(oPanelDados)
				DEFINE MSDIALOG oDlg OF oPanelDados:oWnd FROM 0,0 To 0,0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )

				//----------------------------------------------------------------------
				// Observacao Importante quanto as coordenadas calculadas abaixo:
				//----------------------------------------------------------------------
				// a funcao DlgWidthPanel() retorna o dobro do valor da area do
				// painel, sendo assim este deve ser dividido por 2 antes da subtracao
				// e redivisao por 2 para a centralizacao.
				//----------------------------------------------------------------------
				nEspLarg :=	(((DlgWidthPanel(oPanelDados)/2) - 168) /2)
				nEspLin  := 1
			Else
				nEspLarg := 0
				nEspLin  := 1
				DEFINE MSDIALOG oDlg FROM  32, 113 TO 340,550 TITLE OemToAnsi(STR0009) PIXEL	// "Movimenta‡„o Banc ria"
			Endif

			oDlg:lMaximized := .F.
			oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,20,20)
			oPanel:Align := CONTROL_ALIGN_ALLCLIENT

			@ 000+nEspLin,004+nEspLarg TO 025+nEspLin,172+nEspLarg OF oPanel	PIXEL LABEL STR0020  // "Origem"
			@ 027+nEspLin,004+nEspLarg TO 052+nEspLin,172+nEspLarg OF oPanel	PIXEL LABEL STR0024  // "Destino"
			@ 056+nEspLin,004+nEspLarg TO 079+nEspLin,172+nEspLarg OF oPanel	PIXEL
			@ 081+nEspLin,004+nEspLarg TO 150+nEspLin,172+nEspLarg OF oPanel	PIXEL LABEL STR0025  // "Identificação"

			// Primeiro quadro - Banco Origem
			@ 005+nEspLin,008+nEspLarg SAY OemToAnsi(STR0021) 		 SIZE 19, 7 OF oPanel PIXEL	// "Banco"
			@ 005+nEspLin,042+nEspLarg SAY OemToAnsi(STR0022) 		 SIZE 25, 7 OF oPanel PIXEL	// "Agˆncia"
			@ 005+nEspLin,122+nEspLarg SAY OemToAnsi(STR0034)		 SIZE 28, 7 OF oPanel PIXEL	// "Natureza"
			@ 005+nEspLin,072+nEspLarg SAY OemToAnsi(STR0023) 		 SIZE 20, 7 OF oPanel PIXEL	// "Conta"

			@ 013+nEspLin,009+nEspLarg MSGET oBcoOrig 	VAR cBcoOrig	F3 "SA6"	Picture "@S3"	Valid CarregaSa6(@cBcoOrig,@cAgenOrig,@cCtaOrig,.F.,,,@cNaturOri)	SIZE 10, 08												  OF oPanel PIXEL hasbutton
			@ 013+nEspLin,042+nEspLarg MSGET oAgenOrig	VAR cAgenOrig  				Picture "@S5"	SIZE 20, 08 OF oPanel PIXEL
			@ 013+nEspLin,072+nEspLarg MSGET oCtaOrig	VAR cCtaOrig				Picture "@S10"	SIZE 45, 08 OF oPanel PIXEL
			@ 013+nEspLin,122+nEspLarg MSGET cNaturOri					F3 "SED" 					Valid ExistCpo("SED",@cNaturOri) .AND. FinVldNat( .F., cNaturOri, 3 ) SIZE 47, 08 																		  OF oPanel PIXEL hasbutton

			// Segundo quadro - Banco Destino
			@ 032+nEspLin,008+nEspLarg SAY OemToAnsi(STR0021) 		 SIZE 23, 7 OF oPanel PIXEL	// "Banco"
			@ 032+nEspLin,042+nEspLarg SAY OemToAnsi(STR0022) 		 SIZE 27, 7 OF oPanel PIXEL	// "Agˆncia"
			@ 032+nEspLin,072+nEspLarg SAY OemToAnsi(STR0023) 		 SIZE 18, 7 OF oPanel PIXEL	// "Conta"
			@ 032+nEspLin,122+nEspLarg SAY OemToAnsi(STR0034)		 SIZE 28, 7 OF oPanel PIXEL	// "Natureza"

			@ 040+nEspLin,009+nEspLarg MSGET oBcoDest VAR cBcoDest	F3 "SA6" Picture "@S3"	Valid CarregaSa6(@cBcoDest,@cAgenDest,@cCtaDest,.F.,@cBenef100,,@cNaturDes) SIZE 10, 08 OF oPanel PIXEL hasbutton
			@ 040+nEspLin,042+nEspLarg MSGET oAgenDest VAR cAgenDest		 Picture "@S5"	SIZE 20, 08 OF oPanel PIXEL
			@ 040+nEspLin,072+nEspLarg MSGET oCtaDest VAR cCtaDest			 Picture "@S10"	Valid If( (cBcoDest+cAgenDest+cCtaDest) <> (cBcoOrig+cAgenOrig+cCtaOrig),.T.,oBcoDest:SetFocus() )	SIZE 45, 08 OF oPanel PIXEL
			@ 040+nEspLin,122+nEspLarg MSGET cNaturDes				F3 "SED"				Valid ExistCpo("SED",@cNaturDes)  .AND. FinVldNat( .F., cNaturDes, 3 ) SIZE 47, 08 OF oPanel PIXEL hasbutton

			//Terceiro Quadro - "Data de Crédito"
			@ 058+nEspLin,008+nEspLarg SAY STR0143 SIZE 50, 7 OF oPanel PIXEL	// "Data de Crédito"
			@ 066+nEspLin,009+nEspLarg MSGET oDataCred 	VAR dDataCred	Valid F100VlDtCr(dDataCred,cBcoOrig,cBcoDest) SIZE 60, 08	OF oPanel PIXEL hasbutton

			//Quarto Quadro	- Dados complementares do
			@ 087+nEspLin,008+nEspLarg SAY OemToAnsi(STR0026) 		 SIZE 31, 7 OF oPanel PIXEL	// "Tipo Mov."
			@ 087+nEspLin,042+nEspLarg SAY OemToAnsi(STR0027) 		 SIZE 43, 7 OF oPanel PIXEL	// "N£mero Doc."
			@ 087+nEspLin,099+nEspLarg SAY OemToAnsi(STR0028) 		 SIZE 17, 7 OF oPanel PIXEL	// "Valor"
			@ 106+nEspLin,009+nEspLarg SAY OemToAnsi(STR0029) 		 SIZE 28, 7 OF oPanel PIXEL	// "Hist¢rico"
			@ 125+nEspLin,009+nEspLarg SAY OemToAnsi(STR0030) 		 SIZE 40, 7 OF oPanel PIXEL	// "Benefici rio"

			@ 096+nEspLin,09+nEspLarg MSGET cTipoTran					F3 "14"	Picture "!!!"	Valid (!Empty(cTipoTran) .And. ExistCpo("SX5","14"+cTipoTran)) .and. ;
																								Iif(cTipoTran="CH",fa050Cheque(cBcoOrig,cAgenOrig,cCtaOrig,cDocTran),.T.) .And. ;
																								Iif(cTipoTran="CH" .or. cTipoTran="TB",fa100DocTran(cBcoOrig,cAgenOrig,cCtaOrig,cTipoTran,@cDocTran),.T.) SIZE  15, 08 OF oPanel PIXEL hasbutton
			@ 096+nEspLin,042+nEspLarg MSGET cDocTran		Picture PesqPict("SE5", "E5_NUMCHEQ")	Valid !Empty(cDocTran).and.fa100doc(cBcoOrig,cAgenOrig,cCtaOrig,cDocTran) SIZE 47, 08 OF oPanel PIXEL
			@ 096+nEspLin,099+nEspLarg MSGET nValorTran		PicTure PesqPict("SE5","E5_VALOR",18)	Valid nValorTran > 0 .and. If(cPaisLoc=="DOM",FA100V01(nValorTran,cTipoTran),.T.)    SIZE  66, 08 OF oPanel PIXEL hasbutton

			@ 114+nEspLin,009+nEspLarg MSGET cHist100		Picture "@S22"      					Valid !Empty(cHist100)        SIZE 155, 08 OF oPanel PIXEL

			If lSpbInUse
				@ 133+nEspLin,009+nEspLarg MSGET cBenef100	Picture "@S21"      					Valid !Empty(cBenef100)       SIZE 95, 08 OF oPanel PIXEL
				@ 125+nEspLin,108+nEspLarg SAY OemToAnsi(STR0048) 	 SIZE 31, 7 OF oPanel PIXEL //"Modalidade SPB"
				@ 133+nEspLin,108+nEspLarg MSCOMBOBOX oModSPB VAR cModSpb ITEMS aModalSPB SIZE 56, 16 OF oPanel PIXEL ;
								VALID SpbTipo("SE5",cModSpb,cTipoTran,"TR")
			Else
				@ 133+nEspLin,009+nEspLarg MSGET cBenef100		Picture "@S21"      				Valid !Empty(cBenef100)       SIZE 155, 08 OF oPanel PIXEL
			Endif

			If lPanelFin  //Chamado pelo Painel Financeiro
				aButtonTxt := {}
				If IntePMS().AND. !lPmsInt
					aTrfPms := {CriaVar("E5_PROJPMS"),CriaVar("E5_TASKPMS"),CriaVar("E5_PROJPMS"),CriaVar("E5_PROJPMS"),CriaVar("E5_EDTPMS"),CriaVar("E5_TASKPMS")}
					AADD(aButtonTxt,{STR0062, STR0062, {||F100PmsTrf(aTrfPms)}})  // "Projetos"
				Endif

				If cPaisLoc <> "BRA"
					AADD(aButtonTxt,{STR0035,STR0035, {||Fa100SetMo()}})  //  "&Tasas"
				Endif

				oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1])
				ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,{||If(FinOkDiaCTB(),nOpca:=1,nOpca:=0),oDLg:End()},{||nOpca:=0,oDlg:End()},,aButtonTxt);
					VALID (If(nOpca==1,;
							If(!CarregaSa6(cBcoOrig,cAgenOrig,cCtaOrig,.T.,,.T.),(oBcoOrig:SetFocus(),.F.),.T.) .and.;
							If(!CarregaSa6(cBcoDest,cAgendest,cCtadest,.T.,,.T.),(oBcoDest:SetFocus(),.F.),.T.) .and.;
							ValidTran(cTipoTran,cBcoDest,cAgenDest,cCtaDest,cBenef100,cDocTran,nValorTran,cNaturOri,cNaturDes,cBcoOrig,cAgenOrig,cCtaOrig).and.;
							IF(lSpbInUse,SpbTipo("SE5",cModSpb,cTipoTran,"TR"),.T.),.T.) )

				cAlias := FinWindow:cAliasFile
				dbSelectArea(cAlias)
				FinVisual(cAlias,FinWindow,(cAlias)->(Recno()),.T.)

			Else
				DEFINE SBUTTON FROM 10, 180 TYPE 1 ENABLE ACTION (If(FinOkDiaCTB(),nOpca:=1,nOpca:=0),oDLg:End()) OF oPanel
				DEFINE SBUTTON FROM 23, 180 TYPE 2 ENABLE ACTION (nOpca:=0,oDlg:End()) OF oPanel

				If IntePMS().AND. !lPmsInt
					aTrfPms := {CriaVar("E5_PROJPMS"),CriaVar("E5_TASKPMS"),CriaVar("E5_PROJPMS"),CriaVar("E5_PROJPMS"),CriaVar("E5_EDTPMS"),CriaVar("E5_TASKPMS")}
					@ 36,180 BUTTON STR0062 SIZE 29 ,14   ACTION {||F100PmsTrf(aTrfPms)	} OF oPanel PIXEL  // "Projetos"
				EndIf

				If cPaisLoc <> "BRA"
					@ 60, 180 BUTTON OemToAnsi(STR0035) SIZE 30,15 ACTION (Fa100SetMo()) OF oPanel PIXEL   //  "&Tasas"
				ElseIf FXMultSld()
					@ 60,180 BUTTON oButSel PROMPT STR0071 SIZE 26, 12 OF oPanel ACTION ( Fa340SetMo()  ) PIXEL  // "Taxas"
				EndIf

				ACTIVATE MSDIALOG oDlg CENTERED VALID  (iif(nOpca==1 , ;
					If(!CarregaSa6(cBcoOrig,cAgenOrig,cCtaOrig,.T.,,.T.),(oBcoOrig:SetFocus(),.F.),.T.) .and.;
					If(!CarregaSa6(cBcoDest,cAgendest,cCtadest,.T.,,.T.),(oBcoDest:SetFocus(),.F.),.T.) .and.;
					IIf(cPaisLoc=="BRA",ValidHist(cHist100),.t.) .and.;
					ValidTran(cTipoTran,cBcoDest,cAgenDest,cCtaDest,cBenef100,cDocTran,nValorTran,cNaturOri,cNaturDes,cBcoOrig,cAgenOrig,cCtaOrig).and.;
					IIF(lSpbInUse,SpbTipo("SE5",cModSpb,cTipoTran,"TR"),.T.),.T.) )
			Endif
		Else
			//Via Execauto
			Inclui := .T. 
			aValidGet:= {}
			If (nPosBco := ascan(aAutoCab,{|x| Upper(x[1]) == 'CBCOORIG'})) > 0
				cBcoOrig	:=	PADR(aAutoCab[nPosBco,2],TamSx3("E5_BANCO")[1])
			Else
				cBcoOrig 	:= PADR(InitPad(GetSX3Cache("E5_BANCO", "X3_RELACAO")),TamSx3("E5_BANCO")[1])
				If cBcoOrig == Nil
					cBcoOrig 	:= ""
				EndIf
			EndIf

			If (nPosAgenci  := ascan(aAutoCab,{|x| Upper(x[1]) == 'CAGENORIG'})) > 0
				cAgenOrig	:=	PADR(aAutoCab[nPosAgenci,2],TamSx3("E5_AGENCIA")[1])
			Else
				cAgenOrig	:=	PADR(InitPad(GetSX3Cache("E5_AGENCIA", "X3_RELACAO")),TamSx3("E5_AGENCIA")[1])
				If cAgenOrig == Nil
					cAgenOrig := ""
				EndIf
			EndIf

			If (nPosConta := ascan(aAutoCab,{|x| Upper(x[1]) == 'CCTAORIG'})) > 0
				cCtaOrig	:=	PADR(aAutoCab[nPosConta,2],TamSx3("E5_CONTA")[1])
			Else
				cCtaOrig	:=PADR(InitPad(GetSX3Cache("E5_CONTA", "X3_RELACAO")),TamSx3("E5_CONTA")[1])
				If cCtaOrig == Nil
					cCtaOrig := ""
				EndIf
			EndIf

			Aadd(aValidGet,{'cBcoOrig' ,cBcoOrig,"CarregaSa6('"+cBcoOrig+"','"+cAgenOrig+"','"+cCtaOrig+"',.F.,,,'"+cNaturOri+"')",.T.})
			Aadd(aValidGet,{'cAgenOrig',cAgenOrig,"CarregaSa6('"+cBcoOrig+"','"+cAgenOrig+"','"+cCtaOrig+"',.F.,,,'"+cNaturOri+"')",.T.})
			Aadd(aValidGet,{'cCtaOrig',cCtaOrig,"CarregaSa6('"+cBcoOrig+"','"+cAgenOrig+"','"+cCtaOrig+"',.F.,,,'"+cNaturOri+"')",.T.})

			If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'CNATURORI'})) > 0
				cNaturOri	:=	aAutoCab[nPosAuto,2]
				Aadd(aValidGet,{'cNaturOri' ,aAutoCab[nPosAuto,2],"ExistCpo('SED','"+cNaturOri+"')",.T.})
			EndIf

			If (nPosBco := ascan(aAutoCab,{|x| Upper(x[1]) == 'CBCODEST'})) > 0
				cBcoDest	:=	PADR(aAutoCab[nPosBco,2],TamSx3("E5_BANCO")[1])
			Else
				cBcoDest 	:= PADR(InitPad(GetSX3Cache("E5_BANCO", "X3_RELACAO")),TamSx3("E5_BANCO")[1])
				If cBcoDest == Nil
					cBcoDest := ""
				EndIf
			EndIf

			If (nPosAgenci := ascan(aAutoCab,{|x| Upper(x[1]) == 'CAGENDEST'})) > 0
				cAgenDest	:=	PADR(aAutoCab[nPosAgenci,2],TamSx3("E5_AGENCIA")[1])
			Else
				cAgenDest	:=	PADR(InitPad(GetSX3Cache("E5_AGENCIA", "X3_RELACAO")),TamSx3("E5_AGENCIA")[1])
				If cAgenDest== Nil
					cAgenDest := ""
				EndIf
			EndIf

			If (nPosConta := ascan(aAutoCab,{|x| Upper(x[1]) == 'CCTADEST'})) > 0
				cCtaDest	:=	PADR(aAutoCab[nPosConta,2],TamSx3("E5_CONTA")[1])
			Else
				cCtaDest	:=	PADR(InitPad(GetSX3Cache("E5_CONTA", "X3_RELACAO")),TamSx3("E5_CONTA")[1])
				If cCtaDest== Nil
					cCtaDest := ""
				EndIf
			EndIf

			Aadd(aValidGet,{'cBcoDest',cBcoDest,"CarregaSa6('"+cBcoDest+"','"+cAgenDest+"','"+cCtaDest+"',.F.,,,'"+cNaturDes+"')",.T.})
			Aadd(aValidGet,{'cAgenDest',cAgenDest,"CarregaSa6('"+cBcoDest+"','"+cAgenDest+"','"+cCtaDest+"',.F.,,,'"+cNaturDes+"')",.T.})
			Aadd(aValidGet,{'cCtaDest',cCtaDest,"CarregaSa6('"+cBcoDest+"','"+cAgenDest+"','"+cCtaDest+;
			"',.F.,,,'"+cNaturDes+"') .and. ( '"+cBcoDest +"' != '"+ cBcoOrig +"' .or. '"+ cAgenDest +"' != '"+;
			cAgenOrig +"' .or. '"+ cCtaDest+"' != '"+cCtaOrig+"')",.T.})

			If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'CNATURDES'})) > 0
				cNaturDes	:=	aAutoCab[nPosAuto,2]
				Aadd(aValidGet,{'cNaturDes' ,aAutoCab[nPosAuto,2],"ExistCpo('SED','"+cNaturDes+"')",.T.})
			EndIf

			If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'DDATACRED'})) > 0
				dDataCred	:=	aAutoCab[nPosAuto,2]
				Aadd(aValidGet,{'dDataCred' ,aAutoCab[nPosAuto,2],"F100VlDtCr(stod('" + dtos(dDataCred) + "'),'"+cBcoOrig+"','"+cBcoDest+"')",.T.})
			EndIf

			If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'CDOCTRAN'})) > 0
				cDocTran	:=	PADR(aAutoCab[nPosAuto,2],TamSx3("E5_NUMCHEQ")[1])
				Aadd(aValidGet,{'cDocTran' ,aAutoCab[nPosAuto,2],"'"+cDocTran+"'<> '"+Space(TamSx3('E5_NUMCHEQ')[1])+"' .and. fa100DocTran('"+cBcoOrig+"','"+cAgenOrig+"','"+cCtaOrig+"','"+cDocTran+"') .And. fa100doc('"+cBcoOrig+"','"+cAgenOrig+"','"+cCtaOrig+"','"+cDocTran+"')",.T.})
			EndIf

			If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'CTIPOTRAN'})) > 0
				cTipoTran	:=	aAutoCab[nPosAuto,2]
				Aadd(aValidGet,{'cTipoTran' ,aAutoCab[nPosAuto,2],;
				"('"+cTipoTran+"'<> '"+Space(TamSx3('E5_TIPODOC')[1])+"' .And. "+;
				"ExistCpo('SX5','14'+'"+cTipoTran+"')).and. "+;
				"Iif('"+cTipoTran+"'='CH',fa050Cheque('"+cBcoOrig+"','"+cAgenOrig+"','"+cCtaOrig+"','"+cDocTran+"'),.T.).And."+;
				"Iif('"+cTipoTran+"' $ 'CH#TB',fa100DocTran('"+cBcoOrig+"','"+cAgenOrig+"','"+cCtaOrig+"','"+cDocTran+"'),.T.)",.T.})
			EndIf

			If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'NVALORTRAN'})) > 0
				nValorTran	:=	aAutoCab[nPosAuto,2]
				Aadd(aValidGet,{'nValorTran' ,aAutoCab[nPosAuto,2],'nValorTran > 0',.T.})
			EndIf

			If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'CHIST100'})) > 0
				cHist100	:=	aAutoCab[nPosAuto,2]
				Aadd(aValidGet,{'cHist100' ,aAutoCab[nPosAuto,2],"'"+cHist100+"'<> '"+Space(TamSx3('E5_HISTOR')[1])+"'",.T.})
			EndIf

			If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'CBENEF100'})) > 0
				cBenef100	:=	aAutoCab[nPosAuto,2]
				Aadd(aValidGet,{'cBenef100' ,aAutoCab[nPosAuto,2],"'"+cBenef100+"'<> '"+Space(TamSx3('E5_BENEF')[1])+"'",.T.})
			EndIf

			If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == "NTXTRANSF"})) > 0
				nTxTransf := aAutoCab[nPosAuto,2] 
			EndIf
			
			//Implementações para leitura dos parâmetros informados via ExecAuto para substituir o SX1 "AFI100" para execução da rotina
			If (nPosAuto := AScan(aAutoCab, {|campo| Upper(campo[1]) == "NAGLUTINA"})) > 0
				MV_PAR01 :=	IIf(ValType(aAutoCab[nPosAuto][2]) == "N", aAutoCab[nPosAuto][2], 2)
			EndIf

			If (nPosAuto := AScan(aAutoCab, {|campo| Upper(campo[1]) == "NCTBONLINE"})) > 0
				MV_PAR04 :=	IIf(ValType(aAutoCab[nPosAuto][2]) == "N", aAutoCab[nPosAuto][2], 2)
			EndIf

			//Valida os campos
			If !SE5->(MsVldGAuto(aValidGet)) .or. ;
				!(CarregaSa6(cBcoOrig,cAgenOrig,cCtaOrig,.T.,,.T.) .and. ;
					ValidTran(cTipoTran,cBcoDest,cAgenDest,cCtaDest,cBenef100,cDocTran,nValorTran,cNaturOri,cNaturDes,cBcoOrig,cAgenOrig,cCtaOrig).and.;
					IIF(lSpbInUse,SpbTipo("SE5",cModSpb,cTipoTran,"TR"),.T.))
				nOpcA := 0
			Else
				nOpcA := 1
			EndIf
		EndIf

		IF nOpcA == 1

			Begin Transaction
				lGrava := .T.
				If lFA100TRF
					lGrava := ExecBlock("FA100TRF", .F., .F., { cBcoOrig, cAgenOrig, cCtaOrig,;
																cBcoDest, cAgenDest, cCtaDest,;
																cTipoTran, cDocTran, nValorTran,;
																cHist100, cBenef100, cNaturOri,;
																cNaturDes , cModSpb, lEstorno, ;
																dDtdisp,dDataCred})
				Endif

				If lF100DOC
					cDocTran := ExecBlock("F100DOC",.F.,.F.,{	cBcoOrig	, cAgenOrig	, cCtaOrig		,;
																cBcoDest	, cAgenDest	, cCtaDest		,;
																cTipoTran	, cDocTran	, nValorTran	,;
																cHist100	, cBenef100	, cNaturOri		,;
																cNaturDes 	, cModSpb	, lEstorno      ,;
																dDataCred})
				EndIf

				IF lGrava
					//Preenche o array aSimbMoeda
					nTotMoeda := MoedFin()
					For nX := 1 To nTotMoeda
						If( !(Empty(SuperGetMV("MV_MOEDA"+Alltrim(Str(nX))))))
							AAdd( aSimbMoeda,SuperGetMV("MV_SIMB"+Alltrim(Str(nX))))
						EndIf
					Next nX

					//Verifica e transacao em dinheiro e deixa fazer a transferencia entre bancos
					nPosMoeda := Ascan(aSimbMoeda,{|x| Trim(x) == Trim(cTipoTran)})
					//-----------------------------------------------------------------
					//³Permite realizar a transferencia sendo Cartao
					//-----------------------------------------------------------------
					If IsCaixaLoja(cBcoOrig) .AND. !(IsCaixaLoja(cBcoDest)) .AND. nPosMoeda == 0 .AND. !(Alltrim(cTipoTran) $ "CC|CD")
						MsgInfo(STR0065)
					Else
						fa100grava( 	cBcoOrig	,	cAgenOrig	,	cCtaOrig	,	cNaturOri	,	;
										cBcoDest	,	cAgenDest	,	cCtaDest	,	cNaturDes	,	;
										cTipoTran	,	cDocTran	,	nValorTran	,	cHist100	,	;
										cBenef100	,	lEstorno	,	cModSpb		,	aTrfPms		,   ;
										nTxTransf, /*nRegOrigem*/, /*nRegDestino*/,	dDataCred )

					EndIf
				ENDIF
			End Transaction

			If lA100BL01
				aValores := {	cBcoOrig,cAgenOrig,cCtaOrig,cNaturOri,cBcoDest,cAgenDest,;
								cCtaDest,cNaturDes,cTipoTran,nValorTran,cDocTran,cBenef100,cHist100,cModSpb,dDataCred}

				ExecBlock("A100BL01",.F.,.F.,aValores)
			EndIf
		Endif

		//Via Execauto fecha no 1o. looping
		If lF100Auto
			lExit := .T.
		EndIf

		If nOpcA != 1 .or. lExit
			If nOpca != 1
				lExit := .F.
			Endif
			Exit
		Endif
	Enddo

	If cPaisLoc <> "BRA" .And. lbFilBrw
		Eval( bFiltraBrw )
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Finaliza lancamento no PCO                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoFinLan("000007")

	//Destroi objeto criado na função F100MovTB
	If __oMoviTB != Nil
		__oMoviTB:Destroy()
		__oMoviTB := Nil
	Endif

Return lExit

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fa100DocTran³ Autor ³ Wagner Xavier         ³ Data ³ 14/09/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Ponto de entrada para manipular variavel cDocTran             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa100DocTran(cBcoOrig,cAgenOrig,cCtaOrig,cTipoTran,cDocTran)  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa100DocTran(cBcoOrig,cAgenOrig,cCtaOrig,cTipoTran,cDocTran)

If ExistBlock("FA100DOC")
	cDocTran := ExecBlock("FA100DOC", .F., .F., {cBcoOrig, cAgenOrig,cCtaOrig,cTipoTran,cDocTran})
EndIf

Return .T.

//-----------------------------------------------------------------------------------------
/*/{Protheus.doc} fa100grava
Realiza a gravação da transferência.
Essa função deve ser chamada dentro de uma transação.

@author  Wagner Xavier
@since   08/09/1993
/*/
//-----------------------------------------------------------------------------------------
STATIC Function fa100grava( cBcoOrig  As Character, cAgenOrig As Character, cCtaOrig   As Character, cNaturOri As Character,;
							cBcoDest  As Character, cAgenDest As Character, cCtaDest   As Character, cNaturDes As Character,;
							cTipoTran As Character, cDocTran  As Character, nValorTran As Numeric, cHist100    As Character,; 
							cBenef100 As Character,	lEstorno  As Logical, cModSpb      As Character, aTrfPms   As Array,; 
							nTxMoeda  As Numeric, nRegOrigem  As Numeric, nRegDestino  As Numeric, dDataCred   As Date) As Logical

	Local lPadrao1	:=.F.
	Local lPadrao2	:= .F.
	Local cPadrao	:= "560"
	Local lMostra	:= .F.
	Local lAglutina	:= .F.
	Local lA100TR01	:= ExistBlock("A100TR01")
	Local lA100TR02	:= ExistBlock("A100TR02")
	Local lA100TR03	:= ExistBlock("A100TR03")
	Local lA100TRA	:= ExistBlock("A100TRA")
	Local lA100TRB	:= ExistBlock("A100TRB")
	Local lA100TRC	:= ExistBlock("A100TRC")
	Local nRegSEF 	:= 0
	Local nMoedOrig := 1
	Local nMoedTran	:=	1
	Local lSpbInUse	:= SpbInUse()
	Local cProcesso := ""
	Local aFlagCTB 	:= {}
	Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
	Local lFindITF 	:= If(cPaisLoc=="DOM" .and. Rtrim(cTipoTran)=="$",.F.,If(cPaisLoc=="DOM",If(lRetCkPG(3,,cBcoOrig),.T.,.F.),.T.) )
	Local nMBcoOri	:= 1 // Moeda da conta corrente origem
	Local nMBcoDst	:= 1 // Moeda da conta corrente destino
	Local lAtuSldNat:= .T.
	Local oModelMov := NIL	//FWLoadModel("FINM030")
	Local oSubFK5 	:= NIL
	Local oSubFK9	:= NIL
	Local oSubFKA	:= NIL
	Local cLog       := ""
	Local cCamposE5  := ""
	Local cIdMovim   := ""
	Local lRet       := .T.
	Local aAreaFKs   := {}
	Local cProcFKs   := ""
	Local cMoedaBnc  := ""
	Local nValorConv := 0
	Local dDtdisp    := dDatabase
	Local aGetSED    := {}
	Local aRetInteg  := {}
	Local cOrigem    := ""
	Local nCasDec    := 2
	Local lGerChTB	 := SuperGetMV( "MV_GERCHTB" , .T. /*lHelp*/, 'S') == 'S' //Gera cheque para movimento TB ? Default = Sim
	Local lTrfCxFin	 := .F.
	Local cNumPRC :=""
	DEFAULT aTrfPms     := {}
	DEFAULT nTxMoeda    := 0
	DEFAULT nRegOrigem  := 0
	DEFAULT nRegDestino := 0
	DEFAULT dDataCred   := DataValida(dDataBase)
	DEFAULT lExterno    := .F.
	DEFAULT cEAIA100v 	:= "0.000"
	DEFAULT lEAIA100 	:= FWHasEAI("FINA100", .T.,, .T.)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atencao!, neste programa sera' utilizado 2 lan‡amentos padroni³
	//³ zados, pois o mesmo gera 2 registros na movimentacao bancaria³
	//³ O 1. registro para a saida  (Banco Origem ) ->Padrao "560"   ³
	//³ O 2. registro para a entrada(Banco Destino) ->Padrao "561"   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	dbSelectarea("SE5")
	cProcesso	:= IIf(cPaisLoc $ "ANG|ARG|AUS|BOL|BRA|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|URU|VEN",IIf(!lEstorno,GetSx8Num("SE5","E5_PROCTRA","E5_PROCTRA"+cEmpAnt),SE5->E5_PROCTRA),"")
	ConfirmSx8()
	dbSelectarea("SEF")

	//ITF não se aplica ao Brasil
	If cPaisLoc == "BRA"
		lFindITF := .F.
	Endif

	STRLCTPAD := " "

	If !Empty(cBcoOrig + cAgenOrig + cCtaOrig) .and. !Empty(cBcoDest + cAgenDest + cCtaDest)	
		cOrigem := SubStr(AllTrim(FunName()), 1, TamSx3("FK5_ORIGEM")[1])
		nCasDec := TamSx3("FK5_TXMOED")[2]	
		
		DbSelectArea("SA6")
		SA6->(DbSetOrder(1))
		
		If SA6->(DbSeek(xFilial("SA6")+cBcoDest+cAgenDest+cCtaDest)) .And. SA6->A6_MOEDA > 1
			nMBcoDst := SA6->A6_MOEDA
		EndIf	
		
		If cPaisLoc	# "BRA"
			nMoedTran := nMBcoDst
		Endif
		
		If SA6->(DbSeek(xFilial("SA6")+cBcoOrig+cAgenOrig+cCtaOrig)) .And. SA6->A6_MOEDA > 1
			nMBcoOri := SA6->A6_MOEDA 
		EndIf
		
		cIdMovim := CriaVar("E5_IDMOVI", .T.)
		
		lTrfCxFin := FTrfCxFin(cBcoOrig, cBcoDest) //Verifica se é transferencia enter caixas financeiros

		If !lTrfCxFin 
			//Ajusto a data de crédito para o próximo dia útil caso o usuário informe uma data de crédito em dia não útil
			dDataCred := DataValida(dDataCred)
			dDtdisp   := DataValida(dDatabase)
		Else
			//Para transferencia entre caixas a data de disponibilidade será a mesma nas mov. de saída e entrada
			dDtdisp := dDataCred 
		Endif		

		//Ajusto a data da saída caso o usuário informe uma data de credito anterior a database do sistema.
		//Dessa forma não fica a saída posterior a entrada
		If dDtdisp > dDataCred
			dDtDisp := dDataCred
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza movimentacao bancaria c/referencia a saida			  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRet
			//Define os campos que não existem na FK5 e que serão gravados apenas na E5, para que a gravação da E5 continue igual
			cCamposE5 := "{"
			cCamposE5 += "{'E5_DTDIGIT', dDataBase}"
			cCamposE5 += ",{'E5_BENEF', '" + cBenef100 + "'}"
			cCamposE5 += ",{'E5_IDMOVI', '" + cIdMovim + "'}"
			cCamposE5 += ",{'E5_MOVFKS', 'S'}"
			cCamposE5 += "}"

			oModelMov := FWLoadModel("FINM030")
			oModelMov:SetOperation( MODEL_OPERATION_INSERT ) //Inclusao
			oModelMov:Activate()
			oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Informa se vai gravar SE5 ou não
			oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5
			oModelMov:SetValue( "MASTER", "NOVOPROC", .T. ) //Informa que a inclusão será feita com um novo número de processo

			//Se for estorno, pega o processo do movimento de origem
			If lEstorno
				aAreaFKs := GetArea()
				dbSelectArea("SE5")
				SE5->(dbGoTo(nRegOrigem))
				//Pega o número do processo e define no campo virtual do Model
				cProcFKs := FINProcFKs( SE5->E5_IDORIG, "FK5" )
				If !Empty(cProcFKs)
					oModelMov:SetValue( "MASTER", "IDPROC", cProcFKs )
					oModelMov:SetValue( "MASTER", "NOVOPROC", .F. ) //Informa que a inclusão será feita vínculada à um processo já existente
				Endif
				RestArea(aAreaFKs)
			Endif

			//Dados do Processo
			oSubFKA := oModelMov:GetModel("FKADETAIL")
			oSubFKA:SetValue( "FKA_IDORIG", FWUUIDV4() )
			oSubFKA:SetValue( "FKA_TABORI", "FK5" )

			//Informacoes do movimento
			oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
			oSubFK5:SetValue( "FK5_DATA", dDataBase )
			oSubFK5:SetValue( "FK5_BANCO", cBcoOrig )
			oSubFK5:SetValue( "FK5_AGENCI", cAgenOrig )
			oSubFK5:SetValue( "FK5_CONTA", cCtaOrig )
			oSubFK5:SetValue( "FK5_RECPAG", "P" )
			oSubFK5:SetValue( "FK5_NUMCH", cDocTran )
			oSubFK5:SetValue( "FK5_HISTOR", cHist100 )
			oSubFK5:SetValue( "FK5_TPDOC", "TR" )
			oSubFK5:SetValue( "FK5_MOEDA", cTipoTran )
			oSubFK5:SetValue( "FK5_ORIGEM", cOrigem)
			
			If cPaisLoc == "BRA"
				If !lEstorno .And. nTxMoeda == 0 .And. nMBcoOri > 1 .And. Len(aTxMoedas) >= nMBcoOri
					nTxMoeda := aTxMoedas[nMBcoOri,2]
				EndIf
				
				If nMBcoOri != nMBcoDst
					If lEstorno					
						oSubFK5:SetValue("FK5_VALOR", Round(xMoeda(nValorTran, nMBcoDst, nMBcoOri, dDataBase, nCasDec, nTxMoeda), 2))
						oSubFK5:SetValue("FK5_VLMOE2", nValorTran)					
					Else
						oSubFK5:SetValue("FK5_VALOR", nValorTran)
						oSubFK5:SetValue("FK5_VLMOE2", Round(xMoeda(nValorTran, nMBcoOri, nMBcoDst, dDataBase, nCasDec, nTxMoeda), 2))
					EndIf
				Else
					oSubFK5:SetValue("FK5_VALOR", nValorTran)
					oSubFK5:SetValue("FK5_VLMOE2", nValorTran)
				EndIf
				
				oSubFK5:SetValue("FK5_TXMOED", nTxMoeda)
			Else
				nMoedOrig		:= MAX(SA6->A6_MOEDA,1)

				// CASO A TAXA CONTRATADA TENHA SIDO INFORMADA, ESTA DEVE SER ASSUMIDA.
				If Len(aTxMoedas) > 1 .And. ntxestp > 0 .And. nMoedTran > 0
					aTxMoedas[nMoedTran][2] := ntxestp
				Endif

				If Len(aTxMoedas) > 1 .And. nTxEstR > 0 .And. nMoedOrig > 0
					aTxMoedas[nMoedOrig][2] := nTxEstR
				Endif

				oSubFK5:SetValue( "FK5_VALOR", IIf(lEstorno,Round(xMoeda(nValorTran,nMoedTran,nMoedOrig,dDataBase,MsDecimais(nMoedOrig)+1,nTxEstP,nTxEstR),MsDecimais(nMoedOrig)),nValorTran) )
				//Gravo o valor na moeda 1 para nao ter problemas na hora da conversao por casas
				//decimais perdidas na contabilidade... Bruno.
				oSubFK5:SetValue( "FK5_VLMOE2", IIf(lEstorno,xMoeda(nValorTran,nMoedTran,Iif(nMoedOrig>1 .And. (nMoedTran==1 .Or. nMoedOrig == nMoedTran),1,nMoedOrig),,,aTxMoedas[nMoedTran][2]),xMoeda(nValorTran,nMoedOrig,1,,,aTxMoedas[nMoedOrig][2])) )
				oSubFK5:SetValue( "FK5_TXMOED", aTxMoedas[nMoedOrig][2] )
			Endif		
			
			oSubFK5:SetValue( "FK5_DTDISP", Iif(lEstorno, dDataCred, dDtdisp))
			oSubFK5:SetValue( "FK5_NATURE", cNaturOri )
			oSubFK5:SetValue( "FK5_FILORI", cFilAnt )
			
			If lSpbInUse
				oSubFK5:SetValue( "FK5_MODSPB", cModSpb )
			Endif
			oSubFK5:SetValue( "FK5_PROTRA", cProcesso )

			If oModelMov:VldData()
				oModelMov:CommitData()
			Else
				lRet := .F.
				cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
				cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
				cLog += cValToChar(oModelMov:GetErrorMessage()[6])
				Help(,,"MF100GRV1",,cLog, 1, 0)
			Endif

			oModelMov:DeActivate()
			oModelMov:Destroy()
			oModelMov := NIL
		Endif

		If lRet
			If lAtuSldNat
				SA6->( DbSetOrder(1) )
				SA6->( dbSeek( xFilial() + SE5->E5_BANCO + SE5->E5_AGENCIA + SE5->E5_CONTA ) )

				cMoedaBnc  := StrZero( Max(SA6->A6_MOEDA, 1 ), 2)
				nValorConv := Iif (Empty(SE5->E5_TXMOEDA), SE5->E5_VALOR, SE5->E5_VALOR * SE5->E5_TXMOEDA)

				AtuSldNat(SE5->E5_NATUREZ, SE5->E5_DATA, cMoedaBnc, "3", "P", SE5->E5_VALOR, nValorConv, If(lEstorno,"-","+"),,FunName(),"SE5", SE5->(Recno()),0)
			Endif
			// Se Portugal, registra dados do Diario (movimento origem)
			If UsaSeqCor()
				AADD(aDiario,{"SE5",SE5->(RECNO()),cCodDiario,"E5_NODIA","E5_DIACTB"})
			Else
				aDiario := {}
			Endif

			If !Empty(aTrfPms) .And. !Empty(aTrfPms[1])
				nRecNo	:= SE5->(RecNo())
				cID		:= STRZERO(SE5->(RecNo()),10)
				cStart	:= "AA"
				dbSelectArea("SE5")
				dbSetOrder(9)
				While dbSeek(xFilial()+cID)
					cID := STRZERO(nRecNo,8)+cStart
					cStart := SomaIt(cStart)
				End
				SE5->(dbGoto(nRecNo))

				cCamposE5 := "{{'E5_PROJPMS', '" + cId +"'}}"
				oModelMov := FWLoadModel("FINM030")
				oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
				oModelMov:Activate()
				oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //habilita gravação de SE5
				oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5)

				//Posiciona a FKA com base no IDORIG da SE5 posicionada
				oSubFKA := oModelMov:GetModel( "FKADETAIL" )
				If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

					//Dados de integrações
					oSubFK9 := oModelMov:GetModel( "FK9DETAIL" )
					If !oSubFK9:IsEmpty()
						oSubFK9:SetValue( "FK9_PRJPMS", cId )
					EndIf

					If oModelMov:VldData()
						oModelMov:CommitData()
					Else
						lRet := .F.
						cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
						cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
						cLog += cValToChar(oModelMov:GetErrorMessage()[6])
						Help(,,"MF100GRV2",,cLog, 1, 0 )
					Endif
				Endif
				oModelMov:DeActivate()
				oModelMov:Destroy()
				oModelMov := NIL

				If lRet
					RecLock("AJE",.T.)
					AJE->AJE_FILIAL	:= xFilial("AJE")
					AJE->AJE_VALOR 	:= SE5->E5_VALOR
					AJE->AJE_DATA	:= SE5->E5_DATA
					AJE->AJE_HISTOR	:= SE5->E5_HISTOR
					AJE->AJE_PROJET	:= aTrfPms[1]
					AJE->AJE_REVISA	:= PmsAF8Ver(aTrfPms[1])
					AJE->AJE_TAREFA	:= aTrfPms[2]
					AJE->AJE_ID		:= cID
					MsUnlock()
				EndIf
			EndIf
		Endif

		If lRet

			If !lEstorno .AND.;
				((Alltrim(cTipoTran) == "CH" .AND. !IsCaixaLoja(cBcoOrig)) .OR. ((Alltrim(cTipoTran) == "TB") .AND. lGerChTB))
				nRegSEF := Fa100Cheq("FINA100TRF")
			Endif

			If lA100TR01
				ExecBlock("A100TR01",.F.,.F.,lEstorno)
			EndIf

			If lA100TRA
				ExecBlock("A100TRA",.F.,.F.,{lEstorno, cBcoOrig,  cBcoDest,  cAgenOrig, cAgenDest, cCtaOrig,;
				cCtaDest, cNaturOri, cNaturDes, cDocTran,  cHist100})
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ So atualiza do saldo se for R$,DO,TB,TC ou se for CH e o ban-³
			//³ co origem n„o for um caixa do loja, pois este foi gerado no  ³
			//³ SE1 e somente sera atualizado na baixa do titulo.            ³
			//³ Aclaracao : Foi incluido o tipo $ para os movimentos en di-- ³
			//³ nheiro em QUALQUER moeda, pois o R$ nao e representativo     ³
			//³ fora do BRASIL. Bruno 07/12/2000 Paraguai                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( !(Alltrim(SE5->E5_MOEDA) $ "CC/CD/CH/CO/EST/FI/VL/GS.") .or.;
			(SE5->E5_MOEDA == "CH" .and. !IsCaixaLoja(cBcoOrig))) .and. ;
			!(SUBSTR(SE5->E5_NUMCHEQ,1,1) == "*")
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza saldo bancario.									 ³
				//³ Paso o E5_VALOR pois fora do Brasil a conta pode ser em moeda³
				//³ diferente da moea Oficial.                                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				AtuSalBco(cBcoOrig,cAgenOrig,cCtaOrig,dDataCred,SE5->E5_VALOR,"-")
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Lacncamento orcamentario - Transferencia origem ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoDetLan("000007","01","FINA100")

			If !lExterno
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Lan‡amento Contabil - 1. registro do SE5                           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				lPadrao1 := VerPadrao( cPadrao )
				STRLCTPAD := cBcoOrig+"/"+cAgenOrig+"/"+cCtaOrig

				If lPadrao1 .and. mv_par04 == 1  // On Line
					aGetSED := SED->(GETAREA())
					SED->(DbSetOrder(1))
					SED->(DbSeek(xFilial("SED") + SE5->E5_NATUREZ))

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Inicializa Lancamento Contabil                                   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nHdlPrv := HeadProva( cLote, "FINA100" /*cPrograma*/, Substr( cUsuario, 7, 6 ), @cArquivo )

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Prepara Lancamento Contabil                                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
						aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
					Endif
					nTotal += DetProva( nHdlPrv, cPadrao, "FINA100" /*cPrograma*/, cLote, /*nLinha*/, /*lExecuta*/,;
					/*cCriterio*/, /*lRateio*/, /*cChaveBusca*/, /*aCT5*/, /*lPosiciona*/, @aFlagCTB,;
					/*aTabRecOri*/, /*aDadosProva*/ )
					If !lUsaFlag

						oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
						oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
						oModelMov:Activate()
						oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5

						//Posiciona a FKA com base no IDORIG da SE5 posicionada
						oSubFKA := oModelMov:GetModel( "FKADETAIL" )
						If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

							//Dados Contábeis
							oSubFK5 := oModelMov:GetModel("FK5DETAIL")
							oSubFK5:SetValue( "FK5_LA", "S" )

							If oModelMov:VldData()
								oModelMov:CommitData()
							Else
								lRet := .F.
								cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
								cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
								cLog += cValToChar(oModelMov:GetErrorMessage()[6])
								Help(,,"MF100GRV3",,cLog, 1, 0 )
							Endif
						Endif
						oModelMov:DeActivate()
						oModelMov:Destroy()
						oModelMov := NIL
					Endif
					If cPaisLoc <> "BRA"
						If lRet .and. lFindITF .And. FinProcITF( SE5->( Recno() ),1 )  .AND. Iif(cPaisLoc <> "BOL", lRetCkPG(3,,cBcoOrig) .and. (lRetCkPG(3,,cBcoOrig) <> lRetCkPG(3,,cBcoDest)), .T.) //GERA ITF C/ CONTABILIZACAO
							If  lEstorno .And. cPaisLoc=="BOL"
								FinProcITF( SE5->( Recno() ),6,, .F.,{ nHdlPrv, "", "", "FINA100", cLote } , @aFlagCTB )
							Else
								FinProcITF( SE5->( Recno() ),3,, .F.,{ nHdlPrv, "", "", "FINA100", cLote } , @aFlagCTB )
							EndIf
						EndIf
					EndIf	
					RestArea(aGetSED)
				Else
					If cPaisLoc <> "BRA"
						If lFindITF .AND. FinProcITF( SE5->( Recno() ),1 ) .AND. Iif(cPaisLoc <> "BOL", lRetCkPG(3,,cBcoOrig) .AND. (lRetCkPG(3,,cBcoOrig) <> lRetCkPG(3,,cBcoDest)),.T.) //GERA ITF S/ CONTABILIZACAO
							
							If  lEstorno .And. cPaisLoc=="BOL"
								FinProcITF( SE5->( Recno() ),6,, .F. )
							Else
								FinProcITF( SE5->( Recno() ),3,, .F. )
							EndIf
						EndIf
					EndIf	
				EndIf
			Endif
		Endif

		cNumPRC := SE5->E5_PROCTRA// Nahim Terrazas 05/02/2019 - tomo porque para hacer la reversión no lo encuentra debido a que el ITF lo toma prorrateado
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza movimentacao bancaria c/referencia a entrada		  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRet		
			//Define os campos que não existem na FK5 e que serão gravados apenas na E5, para que a gravação da E5 continue igual
			cCamposE5 := "{"
			cCamposE5 += "{'E5_DTDIGIT', dDataBase}"
			cCamposE5 += ",{'E5_BENEF', '" + cBenef100 + "'}"
			cCamposE5 += ",{'E5_IDMOVI', '" + cIdMovim + "'}"
			cCamposE5 += ",{'E5_MOVFKS', 'S'}"
			cCamposE5 += "}"

			oModelMov := FWLoadModel("FINM030")
			oModelMov:SetOperation( MODEL_OPERATION_INSERT ) //Inclusao
			oModelMov:Activate()
			oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Informa se vai gravar SE5 ou não
			oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5
			oModelMov:SetValue( "MASTER", "NOVOPROC", .F. ) //Informa que a inclusão será feita com um número de processo já existente

			//Se for estorno, pega o processo do movimento de destino
			If lEstorno
				aAreaFKs := GetArea()
				dbSelectArea("SE5")
				SE5->(dbGoTo(nRegDestino))
				//Pega o número do processo e define no campo virtual do Model
				cProcFKs := FINProcFKs( SE5->E5_IDORIG, "FK5" )
				If !Empty(cProcFKs)
					oModelMov:SetValue( "MASTER", "IDPROC", cProcFKs )
					oModelMov:SetValue( "MASTER", "NOVOPROC", .F. ) //Informa que a inclusão será feita vínculada à um processo já existente
				Endif
				RestArea(aAreaFKs)
			Endif
			//Dados do Processo
			oSubFKA := oModelMov:GetModel("FKADETAIL")
			oSubFKA:SetValue( "FKA_IDORIG", FWUUIDV4() )
			oSubFKA:SetValue( "FKA_TABORI", "FK5" )

			//Informacoes do movimento
			oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
			oSubFK5:SetValue( "FK5_DATA", dDataBase )
			oSubFK5:SetValue( "FK5_BANCO", cBcoDest )
			oSubFK5:SetValue( "FK5_AGENCI", cAgenDest )
			oSubFK5:SetValue( "FK5_CONTA", cCtaDest )
			oSubFK5:SetValue( "FK5_RECPAG", "R" )
			oSubFK5:SetValue( "FK5_DOC", cDocTran )
			oSubFK5:SetValue( "FK5_HISTOR", cHist100 )
			oSubFK5:SetValue( "FK5_TPDOC", "TR" )
			oSubFK5:SetValue( "FK5_MOEDA", cTipoTran )
			oSubFK5:SetValue( "FK5_ORIGEM", cOrigem)
			
			If cPaisLoc == "BRA"		
				If nMBcoOri != nMBcoDst
					If lEstorno		
						oSubFK5:SetValue("FK5_VALOR", nValorTran)
						oSubFK5:SetValue("FK5_VLMOE2",  Round(xMoeda(nValorTran, nMBcoDst, nMBcoOri, dDataBase, nCasDec, nTxMoeda), 2))
					Else
						oSubFK5:SetValue("FK5_VALOR",  Round(xMoeda(nValorTran, nMBcoOri, nMBcoDst, dDataBase, nCasDec, nTxMoeda), 2))
						oSubFK5:SetValue("FK5_VLMOE2", nValorTran)
					EndIf
				Else
					oSubFK5:SetValue("FK5_VALOR", nValorTran)
					oSubFK5:SetValue("FK5_VLMOE2", nValorTran)
				EndIf
				oSubFK5:SetValue("FK5_TXMOED", nTxMoeda)
			Else
				oSubFK5:SetValue( "FK5_VALOR", IIf(lEstorno,nValorTran,Round(xMoeda(nValorTran,nMoedOrig,Max(nMBcoDst,1),dDataBase,MsDecimais(Max(nMBcoDst,1))+1,aTxMoedas[nMoedOrig][2],aTxMoedas[Max(nMBcoDst,1)][2]),MsDecimais(Max(nMBcoDst,1)))) )

				//Gravo o valor na moeda 1 para nao ter problemas na hora da conversao por casas
				//decimais perdidas na contabilidade... Bruno.
				oSubFK5:SetValue( "FK5_VLMOE2", IIf(lEstorno,xMoeda(nValorTran,nMoedTran,Iif(nMoedOrig>1 .And. (nMoedTran==1 .Or. nMoedOrig == nMoedTran),1,nMoedOrig),,,aTxMoedas[nMoedTran][2]),xMoeda(nValorTran,nMoedOrig,1,,,aTxMoedas[nMoedOrig][2])) )
				oSubFK5:SetValue( "FK5_TXMOED", aTxMoedas[nMoedTran][2] )
			Endif
			
			oSubFK5:SetValue( "FK5_DTDISP", Iif(lEstorno, dDtdisp, dDataCred))
			oSubFK5:SetValue( "FK5_NATURE", cNaturDes )
			oSubFK5:SetValue( "FK5_FILORI", cFilAnt )
			
			If lSpbInUse
				oSubFK5:SetValue( "FK5_MODSPB", cModSpb )
			Endif
			oSubFK5:SetValue( "FK5_PROTRA", cProcesso )

			If oModelMov:VldData()
				oModelMov:CommitData()
			Else
				lRet := .F.
				cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
				cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
				cLog += cValToChar(oModelMov:GetErrorMessage()[6])
				Help(,,"MF100GRV4",,cLog, 1, 0 )
			Endif
			oModelMov:DeActivate()
			oModelMov:Destroy()
			oModelMov := NIL

			If lRet
				// Se Portugal, registra dados do Diario (movimento destino)
				If UsaSeqCor()
					AADD(aDiario,{"SE5",SE5->(RECNO()),cCodDiario,"E5_NODIA","E5_DIACTB"})
				Else
					aDiario := {}
				Endif

				If !Empty(aTrfPms) .And. !Empty(aTrfPms[3])
					nRecNo	:= SE5->(RecNo())
					cID		:= STRZERO(SE5->(RecNo()),10)
					cStart	:= "AA"
					dbSelectArea("SE5")
					dbSetOrder(9)
					While dbSeek(xFilial()+cID)
						cID := STRZERO(nRecNo,8)+cStart
						cStart := SomaIt(cStart)
					EndDO
					SE5->(dbGoto(nRecNo))

					cCamposE5 := "{{'E5_PROJPMS', '" + cId +"'}}"
					oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
					oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
					oModelMov:Activate()
					oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //habilita gravação de SE5
					oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5)

					//Posiciona a FKA com base no IDORIG da SE5 posicionada
					oSubFKA := oModelMov:GetModel( "FKADETAIL" )
					oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

					//Dados de integração
					oSubFK9 := oModelMov:GetModel("FK9DETAIL")
					If !oSubFK9:IsEmpty()
						oSubFK9:SetValue( "FK9_PRJPMS", cId )
					EndIf

					If oModelMov:VldData()
						oModelMov:CommitData()
					Else
						lRet := .F.
						cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
						cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
						cLog += cValToChar(oModelMov:GetErrorMessage()[6])
						Help(,,"MF100GRV5",,cLog, 1, 0 )
					Endif
					oModelMov:DeActivate()
					oModelMov:Destroy()
					oModelMov := NIL

					If lRet
						RecLock("AJE",.T.)
						AJE->AJE_FILIAL	:= xFilial("AJE")
						AJE->AJE_VALOR 	:= SE5->E5_VALOR
						AJE->AJE_DATA	:= SE5->E5_DATA
						AJE->AJE_HISTOR	:= SE5->E5_HISTOR
						AJE->AJE_PROJET	:= aTrfPms[3]
						AJE->AJE_REVISA	:= PmsAF8Ver(aTrfPms[3])
						AJE->AJE_EDT	:= aTrfPms[4]
						AJE->AJE_TAREFA	:= aTrfPms[5]
						AJE->AJE_ID		:= cID
						MsUnlock()
					EndIf
				EndIf
			Endif

			If lRet
				If lAtuSldNat
					SA6->( DbSetOrder(1) )
					SA6->( dbSeek( xFilial() + SE5->E5_BANCO + SE5->E5_AGENCIA + SE5->E5_CONTA ) )

					cMoedaBnc  := StrZero( Max(SA6->A6_MOEDA, 1 ), 2)
					nValorConv := Iif (Empty(SE5->E5_TXMOEDA), SE5->E5_VALOR, SE5->E5_VALOR * SE5->E5_TXMOEDA)

					AtuSldNat(SE5->E5_NATUREZ, SE5->E5_DATA, "01", "3", "R", SE5->E5_VALOR,, If(lEstorno,"-","+"),,FunName(),"SE5", SE5->(Recno()),0)
				Endif

				If lA100TR02
					ExecBlock("A100TR02",.F.,.F.,lEstorno)
				EndIf
				If lA100TRB
					ExecBlock("A100TRB",.F.,.F.,{lEstorno, cBcoOrig,  cBcoDest,  cAgenOrig, cAgenDest, cCtaOrig,;
					cCtaDest, cNaturOri, cNaturDes, cDocTran,  cHist100})
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ So atualiza do saldo se for R$,DO,TB,TC ou se for CH e o ban-³
				//³ co origem n„o for um caixa do loja, pois este foi gerado no  ³
				//³ SE1 e somente sera atualizado na baixa do titulo.            ³
				//³ O teste do caixa ‚ exatamente para o banco origem Mesmo.     ³
				//³ Aclaracao : Foi incluido o tipo $ para os movimentos en di-- ³
				//³ nheiro em QUALQUER moeda, pois o R$ nao e representativo     ³
				//³ fora do BRASIL. Bruno 07/12/2000 Paraguai                    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (!(Alltrim(SE5->E5_MOEDA) $ "CC/CD/CH/CO/EST/FI/VL/GS.") .or. ;
				(SE5->E5_MOEDA == "CH" .and. !IsCaixaLoja(cBcoOrig))) .and. ;
				!(SUBSTR(SE5->E5_NUMCHEQ,1,1) == "*")
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza saldo bancario.									 ³
					//³ Passo o E5_VALOR pois fora do Brasil a conta pode ser em moeda³
					//³ diferente da moeda Oficial.                                   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					AtuSalBco(cBcoDest,cAgenDest,cCtaDest,dDataCred, SE5->E5_VALOR ,"+")
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Lacncamento orcamentario - Transferencia destino ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				PcoDetLan("000007","02","FINA100")

				If !lExterno
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Lan‡amento Contabil - 2. registro do SE5                           ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					cPadrao   := "561"
					lPadrao2  := VerPadrao(cPadrao)
					STRLCTPAD := cBcoDest+"/"+cAgenDest+"/"+cCtaDest

					IF lPadrao2 .and. !lPadrao1 .and. mv_par04 == 1
						nHdlPrv := HeadProva(cLote,"FINA100",Substr(cUsuario,7,6),@cArquivo)
					Endif

					IF lPadrao2 .and. mv_par04 == 1
						nTotal += DetProva( nHdlPrv, cPadrao,"FINA100",cLote)
					Endif

					IF ( lPadrao1 .or. lPadrao2) .and. mv_par04 == 1

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Efetiva Lan‡amento Contabil                                      ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						lMostra	 := If( mv_par02 == 1, .T., .F. )
						lAglutina := If( mv_par01 == 1, .T., .F. )
						
						If cPaisLoc <> "BRA"
							If lFindITF .And. FinProcITF( SE5->( Recno() ),1 )  .and. Iif(cPaisLoc <> "BOL", !(lRetCkPG(3,,cBcoOrig)) .and.  lRetCkPG(3,,cBcoDest),.T.) //GERA ITF C/ CONTABILIZACAO
								If lEstorno .And. cPaisloc=="BOL"
									FinProcITF( SE5->( Recno() ),6,, .F.,{ nHdlPrv, "", "", "FINA100", cLote } , @aFlagCTB )
									
								Else
									If cPaisLOc=="BOL"	
										FinProcITF( SE5->( Recno() ),3   ,        , .F.     ,{ nHdlPrv, "", "", "FINA100", cLote } , @aFlagCTB,          ,          ,cNumPRC )
									Else
										FinProcITF( SE5->( Recno() ),3,, .F.,{ nHdlPrv, "", "", "FINA100", cLote } , @aFlagCTB )				
									EndIf
								
								
								EndIf	
							EndIf
						EndIf	
						RodaProva( nHdlPrv, nTotal )

						cA100Incl( cArquivo,;
							nHdlPrv,;
							3 /*nOpcx*/,;
							cLote,;
							lMostra /*lDigita*/,;
							lAglutina /*lAglut*/,;
							/*cOnLine*/,;
							/*dData*/,;
							/*dReproc*/,;
							@aFlagCTB,;
							/*aDadosProva*/,;
							aDiario )
						aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento

						If lPadrao1 .and. nRegSEF > 0
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Se contabilizou a Saida, e Foi uma TB  / CH, ent„o  ³
							//³ marca no cheque que j  foi contabilizado.           ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea("SEF")
							DbGoto(nRegSEF)
							Reclock("SEF")
							SEF->EF_LA := "S"
							MsUnlock()
						Endif
					Else
						If cPaisLoc <> "BRA"
							If lFindITF .And. FinProcITF( SE5->( Recno() ),1 ) .and. Iif(cPaisLoc <> "BOL", !(lRetCkPG(3,,cBcoOrig)) .and.  lRetCkPG(3,,cBcoDest),.T.)
								If lEstorno .And. cPaisloc=="BOL"
									FinProcITF( SE5->( Recno() ),6,, .F. )
								Else
									If cPaisLOc=="BOL"	
										FinProcITF( SE5->( Recno() ),3,,.F.,,,,,cNumPRC	)
									Else
										FinProcITF( SE5->( Recno() ),3,, .F. )
									EndIf
									
								EndIf
							EndIf
						EndIf	
					Endif
				Endif
			Endif
		Endif
	Endif

	If lRet
		If lA100TR03
			ExecBlock("A100TR03",.F.,.F.,lEstorno)
		EndIf
		If lA100TRC
			ExecBlock("A100TRC",.F.,.F.,{lEstorno, cBcoOrig,  cBcoDest,  cAgenOrig, cAgenDest, cCtaOrig,;
			cCtaDest, cNaturOri, cNaturDes, cDocTran,  cHist100})
		EndIf
	Endif

	If lRet .and. !lExterno .and. lPadrao2 .and. mv_par04 == 1  // On Line

		oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
		oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
		oModelMov:Activate()
		oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5

		//Posiciona a FKA com base no IDORIG da SE5 posicionada
		oSubFKA := oModelMov:GetModel( "FKADETAIL" )
		If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

			//Dados do movimento
			oSubFK5 := oModelMov:GetModel("FK5DETAIL")
			oSubFK5:SetValue( "FK5_LA", "S" )

			If oModelMov:VldData()
				oModelMov:CommitData()
			Else
				lRet := .F.
				cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
				cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
				cLog += cValToChar(oModelMov:GetErrorMessage()[6])
				Help(,,"MF100GRV6",,cLog, 1, 0 )
			Endif
		Endif
		oModelMov:DeActivate()
		oModelMov:Destroy()
		oModelMov := NIL
	EndIf

	// Integração EAI após a gravação da transferência bancária.
	If lRet
		// Mensagem de transferência bancária apenas se versão 3.000 ou superior.
		If lEAIA100 .and. val(cEAIA100v) >= 3.000
			SetMsgOpc(If(lEstorno, 8, 7))  // 7 - Inclusão de transferência bancária / 8 - Estorno de transferência bancária.
			aRetInteg := FwIntegDef('FINA100',,,, 'FINA100')
			// Se der erro no envio da integração, então faz rollback e apresenta mensagem em tela para o usuário.
			If !aRetInteg[1]
				Help(,, "FINA100INTEG",, STR0146 + AllTrim(aRetInteg[2]), 1, 0,,,,,, {STR0147}) // "O movimento bancário não será gravado pois ocorreu um erro na integração: ", "Verifique as configurações da integração EAI."
				lRet := .F.
			EndIf
		Endif
	Endif

	If lRet
		If cPaisLoc $ "ANG|ARG|AUS|BOL|BRA|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|URU|VEN"
			if  cPaisLoc=="BOL" .AND. !lEstorno  // Devido a geração da Mov do ITF
				SE5->E5_PROCTRA := cNumPRC	
			endif 
			If Len(Alltrim(SE5->E5_PROCTRA)) > 0
				PutMV("MV_NPROC",SE5->E5_PROCTRA)
			Endif
		Endif
	Else
		DisarmTransaction()
	Endif

Return lRet /*Function fa100grava*/


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fa100Clas ³ Autor ³ Wagner Xavier         ³ Data ³ 03/06/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Classifica‡„o cont bil para lan‡amentos cont beis pendentes ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa100Clas()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA100Clas(cAlias,nReg,nOpc)
Local lPanelFin := IsPanelFin()
Local lAglut := .F.
Local lDigita := .F.
Local lPergunte := .F.

PRIVATE cCodDiario := ""

F100Metric(PROCNAME())

lPagar     := .F.
lReceber   := .F.

Pergunte("AFI100",.F.)
lAglut := Iif(mv_par01==1,.T.,.F.)
lDigita:= Iif(mv_par02==1,.T.,.F.)

If lPanelFin
	Set Key VK_F12 To
	lPergunte := PergInPanel("FIN100",.T.)
ElseIf !lF100Auto
	lPergunte := pergunte("FIN100",.T.)
Else
	lPergunte := pergunte("FIN100",.F.)
Endif

If lPergunte
	If FinOkDiaCTB()
		If !lF100Auto
			If MsgYesNo(OemToAnsi(STR0031),OemToAnsi(STR0032))  // "Confirma Processamento"###"Aten‡„o"
				Processa({|lEnd| FA100Processa(lAglut,lDigita)})
			EndIF
		Else
			Processa({|lEnd| FA100Processa(lAglut,lDigita)})
		Endif
	Endif
Endif
If cPaisLoc <> "BRA" .And. Type("bFiltraBrw") == "B"
	Eval( bFiltraBrw )
Endif
Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fa100Process³ Autor ³ Wagner Xavier         ³ Data ³ 07.04.94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Classifica a movimentacao bancaria.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa100Processa()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nao ha'                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAFIN                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa100Processa(lAglut,lDigita)
LOCAL nTotal:=0,aContas[12],nHdlPrv:=0
LOCAL lFirst	:=.t.
Local nValor	:= 0
Local lPadrao 	:= .F.
Local cPadrao  	:= "562"
Local aDiario  	:= {}
Local aFlagCTB	:= {}
Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Local oModelMov := NIL //FWLoadModel("FINM030")
Local oSubFK5
Local oSubFKA
Local cCamposE5 := ""
Local lRet := .T.

dbSelectArea("SE5")
dbSetOrder(1)
ProcRegua(SE5->(RecCount()),24,04)

Begin Transaction

	dbSeek(xFilial("SE5")+DtoS(mv_par01),.T.)

	While !Eof().and.xFilial()==SE5->E5_FILIAL.and.E5_DATA<=mv_par02

		IncProc(24,04)
		IF Substr(E5_LA,1,1) == "S" .Or. E5_SITUACA == "C" .or. E5_TIPODOC <> "DH"
			dbSkip()
			Loop
		End

		cPadrao := IIf(E5_RECPAG == "P", "562", "563")
		If cPaisLoc$"PER|DOM"
		   IIF(E5_RECPAG == "P" .AND. E5->E5_TIPO== "TF",cPadrao:="56A",cPadrao:=cPadrao) //ESTABELECE LANCTO PADRAO PARA ITF //ADD WAGNER MONTENEGRO
		Endif
		lPadrao := VerPadrao(cPadrao)
		If !CtbInUse()
			// Esta verificacao só é válida para Sigacon. No Sigactb é utilizado o LP 562
			If Empty( E5_TIPOLAN ) .and. Empty(E5_DEBITO) .and. Empty(E5_CREDITO)
				dbSkip( )
				Loop
			End
			If lFirst
				nHdlPrv:=HeadProva(cLote,"FINA100",Substr(cUsuario,7,6),@cArquivo,.T.)
				lFirst:=.F.
			End
			//Nas localizacoes, as movimentacoes sao feitas na moeda do BANCO, por isso
			//tanto nas transferencias quanto no PAGAR/RECEBER, e' gravado o valor em moeda 1
			//no campo E5_vlmoed2 para facilitar a contabilizacao. Bruno 22/08/00 22:01
			If cPaisLoc # "BRA"
				nValor   := E5_VLMOED2
			Else
				nValor   := E5_VALOR
			Endif
			aContas[1]:=E5_TIPOLAN
			aContas[2]:=TranslCta(E5_DEBITO,20) 	//Interpreta debito
			aContas[3]:=TranslCta(E5_CREDITO,20)	 //Interpreta credito
			Store 0 To aContas[7],aContas[8],aContas[9],aContas[10]
			aContas[4]:=nValor
			aContas[5]:="SSSSS"
			aContas[6]:=Substr(E5_HISTOR,1,40)
			aContas[7]:=0
			aContas[8]:=0
			aContas[9]:=0
			aContas[10]:=0
			aContas[11]:=TranslCta(E5_CCD,9) 	 // 07/12/95
			aContas[12]:=TranslCta(E5_CCC,9) 	 // 07/12/95
			IF aContas[4] > 0
				fWrite(nHdlPrv,aContas[1]+aContas[2]+aContas[3]+;
					Str(aContas[4],16,2)+aContas[5]+aContas[6]+;
					Str(aContas[7],16,2)+Str(aContas[8],16,2)+;
					Str(aContas[9],16,2)+Str(aContas[10],16,2)+;
					aContas[11]+aContas[12]+Space(126)+CHR(13)+CHR(10),312)
				nTotal+=aContas[4]
			Endif
		Else				// Esta utilizando o Sigactb
			If lPadrao
				If lFirst
					nHdlPrv:=HeadProva(cLote,"FINA100",Substr(cUsuario,7,6),@cArquivo)
					lFirst := .F.
				EndIf
				If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
					aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
				Endif
				nTotal += DetProva( nHdlPrv,;
				                    cPadrao,;
				                    "FINA100" /*cPrograma*/,;
				                    cLote,;
				                    /*nLinha*/,;
				                    /*lExecuta*/,;
				                    /*cCriterio*/,;
				                    /*lRateio*/,;
				                    /*cChaveBusca*/,;
				                    /*aCT5*/,;
				                    /*lPosiciona*/,;
				                    @aFlagCTB,;
				                    /*aTabRecOri*/,;
				                    /*aDadosProva*/ )
				// Alimenta aDiario (PTG)
				If UsaSeqCor()
		  			AADD(aDiario,{"SE5",SE5->(RECNO()),cCodDiario,"E5_NODIA","E5_DIACTB"})
				Endif
			EndIf
		EndIf
		dbSelectArea("SE5")
		If !lUsaFlag

			//Manda o campo LA com o valor de 2 Caracteres, para manter a gravação original na E5
			cCamposE5 := "{{'E5_LA', 'S'}"
			cCamposE5 += ",{'E5_MOVFKS', 'S'}"
			cCamposE5 += "}"

			oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
			oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
			oModelMov:Activate()
			oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5
			oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5

			//Posiciona a FKA com base no IDORIG da SE5 posicionada
			oSubFKA := oModelMov:GetModel( "FKADETAIL" )
			If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

    			//Dados Contábeis
    	   		oSubFK5 := oModelMov:GetModel("FK5DETAIL")
    			oSubFK5:SetValue( "FK5_LA", "S" ) //Salva apenas 1 caractere (S ou N) nas FKs

    			If oModelMov:VldData()
    	       		oModelMov:CommitData()

    			Else
    		       	lRet := .F.
    			    cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
    			    cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
    			    cLog += cValToChar(oModelMov:GetErrorMessage()[6])
   		       		Help(,,"MF100PROC1",,cLog, 1, 0 )
    			Endif
            Endif
			oModelMov:DeActivate()
			oModelMov:Destroy()
			oModelMov := NIL

		EndIf
		dbSkip()
	End

	If nTotal>0

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Efetiva Lan‡amento Contabil                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			RodaProva(nHdlPrv,nTotal)

			cA100Incl( cArquivo,;
			           nHdlPrv,;
			           3 /*nOpcx*/,;
			           cLote,;
			           lDigita,;
			           lAglut,;
			           /*cOnLine*/,;
			           /*dData*/,;
			           /*dReproc*/,;
			           @aFlagCTB,;
			           /*aDadosProva*/,;
			           aDiario )
			aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento

	EndIf

End Transaction

// Restaura pergunta principal
pergunte("AFI100",.F.)
dbSelectArea( "SE5" )
dbSeek(cFilial)

Return Nil

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fa100Perg ³ Autor ³ Wagner Xavier         ³ Data ³ 29/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Carrega funcao pergunte                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa100perg()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa100Perg()

pergunte("AFI100",.T.)

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FA100CanCh³ Autor ³ Valter G. Nogueira Jr.³ Data ³ 23/02/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Cancelo o cheque referente ao pagamento                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fa100CanCh()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nao tem                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC Function fA100CanCh(cNumChq)
Local cAlias:=Alias()
Local nRegSE2, nOrdSE2
Local lExistFJU := FJU->(ColumnPos("FJU_RECPAI")) >0 .and. FindFunction("FinGrvEx")
Default cNumChq := SE5->E5_NUMCHEQ
dbSelectArea( "SEF" )
dbSetOrder(1)
dbSeek(xFilial("SEF")+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA+cNumChq)
// Os movimentos de cheques a serem aglutinados são gerados com a chave em branco,
// entao procura o registro no SEF referente ao movimento bancario
While xFilial("SEF")+SEF->(EF_BANCO+EF_AGENCIA+EF_CONTA+EF_NUM)==;
	xFilial("SEF")+SE5->(E5_BANCO+E5_AGENCIA+E5_CONTA)+cNumChq .And.;
	(EF_VALOR = SE5->E5_VALOR)
	RecLock("SEF",.F.,.T.)
	If ( !(EF_IMPRESS $ "CAS") )
		dbDelete()
	ElseIf ( SEF->EF_IMPRESS == "S" )
		SEF->EF_IMPRESS := "C"
	EndIf
	MsUnLock()
	DbSkip()
End
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se existir, apaga Titulo CH gerado pelo cheque...            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SE2")
nRegSE2:= recno()
nOrdSE2:= IndexOrd()
DbSetOrder(1)
IF DbSeek(SE5->E5_FILIAL + SE5->E5_PREFIXO + SE5->E5_NUMERO + SE5->E5_PARCELA + SE5->E5_TIPO)

	FINDELFKs(xFilial("SE2")+"|"+SE2->E2_PREFIXO+"|"+SE2->E2_NUM+"|"+SE2->E2_PARCELA+"|"+SE2->E2_TIPO+"|"+SE2->E2_FORNECE+"|"+SE2->E2_LOJA,"SE2")
	If lExistFJU
		FinGrvEx("P")
	Endif

	RecLock("SE2",.F.,.T.)
	DbDelete()
	MsUnlock()
Endif
DbSelectArea("SE2")
DbSetOrder(nOrdSe2)
DbGoto(nRegSe2)

dbSelectArea(cAlias)
Return(.T.)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fa100CtaIgual³ Autor ³ Wagner Xavier      ³      ³ 18/03/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verifique se as contas s„o iguais                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fa100Conta()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa100CtaIgual()
LOCAL lRet := .T.
If !Empty(M->E5_DEBITO) .and. !Empty(M->E5_CREDITO)
	If Trim(M->E5_DEBITO) == Trim(M->E5_CREDITO)
		Help(" ",1,"a100CtaIgual")
		lRet := .F.
	End
End
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FINA100   ºAutor  ³Microsiga           ºFecha ³ 18/12/2012  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica os dados para gravacao do movimentos bancario.    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa100TudoOK()

Local lRet	:= .T.

/* Caso o movimento seja de gastos bancarios ou se o tipo de documento gerar titulo a pagar, deve-se informar um fornecedor que sera usado para ND ou para o titulo */
If Empty(M->E5_CLIFOR)
	If M->E5_TIPOMOV == "01"		//gasto bancario
		lRet := .F.
	Else
		FJS->(dbSetOrder(1))
		FJS->(dbSeek(xFilial("FJS") + M->E5_TIPO))
		If FJS->FJS_RCOP == "1"		//gera titulo a pagar
			lRet := .F.
		Endif
	Endif
	If !lRet
		MsgAlert(STR0117,STR0088)//"O fornecedor/cliente é obrigatório quando o tipo de movimento é gastos bancários e/ou o tipo de título esteja configurado para gerar títulos a pagar/cobrar.")
	Endif
Endif

//-------------------------------------------------------------------------
// Valida o Movimento de tipo Outros Projeto: M11.7CTR01 Requisito: 1421.5
//-------------------------------------------------------------------------
If lRet
	lRet := FA100TpBco(M->E5_TIPO,M->E5_BANCO,M->E5_AGENCIA,M->E5_CONTA)
EndIf

Return(lRet)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FA100Bco	³ Autor ³ Pilar S. Albaladejo   ³		³ 18/03/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Consiste se banco, agencia e conta existem 					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³fa100Bco()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA100																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa100Bco()
LOCAL lFin100Ok := ExistBlock("F100TOK")
LOCAL lRet := .T.
Local lSpbInUse := SpbInUse()
Public cRG104 := ""

If !Dtmovfin(,,IIF(IsInCallStack("fa100pag"),"1",IIF(IsInCallStack("fa100rec"),"2","")))
	lRet := .F.
Endif

If lFin100Ok .and. lRet
	If !(Execblock("F100TOK",.F.,.F.))
		lRet := .F.
	Endif
Endif

If lRet
	dbSelectArea("SA6")
	If !(dbSeek(cFilial+m->e5_banco+m->e5_agencia+m->e5_conta))
		Help(" ",1,"BCONOEXIST")
		lRet := .F.
	ElseIf SA6->A6_BLOCKED == "1"  //Conta corrente bloqueada
		Help(" ",1,"CCBLOCKED")
		lRet := .F.
	ElseIf !ExistCpo("SA6",m->e5_banco+m->e5_agencia+m->e5_conta,1,,.F.,.T.)
		Help(" ",1,"BANCOBLOQ")
        lRet := .F.
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Quando a moeda for cheque o sistema irah obrigar a informacao³
//³ do numero do cheque, pois a rotina de geracao/cancelamento e ³
//³ contabilizacao de cheques estah baseado no SEF/SE2 (Contas a ³
//³ Pagar). O ideal para cheques nao numerados eh a utilizacao   ³
//³ da rotina de Contas a Pagar e posterior Baixa. Esta rotina   ³
//³ nao substitui a funcionalide do Contas a Pagar.              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .and. m->e5_moeda $ "C1/C2/C3/C4/C5/CH" .and. Empty(m->e5_numcheq)
	If !lF100Auto .and. cPaisLoc == "BRA" .and. M->E5_TIPO <> "CH "
		Help(" ",1,"NumeroCheq")
		lRet := .F.
	EndIf
EndIf

If lRet .and. lSpbInUse
	If !SpbTipo("SE5",M->E5_MODSPB,M->E5_MOEDA)
		lRet := .F.
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se os campos de integracao com o SIGAPMS.           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. !Empty(M->E5_PROJPMS) .And. Empty(M->E5_EDTPMS+M->E5_TASKPMS)
	HELP(1,"  ","A240PMS")
	lRet := .F.
EndIf

If lRet	//Consistir se há conteudo para Banco, Agencia e Conta quando recebimento com cheque.
	If !(cPaisLoc == "BRA")
	    FJS->(dbSetOrder(1))
	    FJS->(dbSeek(xFilial("FJS")+M->E5_TIPO))
		If !(M->E5_MOEDA $ "C1/C2/C3/C4/C5/CH") .And. !lF100Auto .And. FJS->FJS_TIPOIN == "CH"
			MsgAlert(STR0122,STR0032) // "Para utilizar um modo de pago que gere/utilize cheque, o numerário deve ser C1,C2,C3,C4,C5 ou CH."
			lRet := .F.
		EndIf
		If lRet .And. lReceber

			If FJS->FJS_TIPOIN == "CH"
				//Verificar a existência do banco quando for Recebimento através de cheque
				If Empty(M->E5_BCOCHQ)
					Help(" ",1,"FA100BCOCHQ",,STR0101+CRLF+STR0108+CRLF,1,0)
					lRet := .F.
				EndIf
				If Empty(M->E5_AGECHQ)
					Help(" ",1,"FA100AGECHQ",,STR0102+CRLF+STR0109+CRLF,1,0)
					lRet := .F.
				EndIf
				If Empty(M->E5_CTACHQ)
					Help(" ",1,"FA100CTACHQ",,STR0103+CRLF+STR0110+CRLF,1,0)
					lRet := .F.
				EndIf
				If Empty(M->E5_NUMCHEQ)
					MsgAlert(STR0119,STR0032) //"Para movimentações a receber, com modo de pago que gere cheque, deve ser informado o número do cheque"
					lRet := .F.
				EndIf
            Else
                //---- 16/11/2012
				If !Empty( M->E5_BCOCHQ )
                    // "Para esta Forma de Pagto, o campo <Banco Cheque> não deve ser preenchido."
					ApMsgAlert( STR0128 + RetTitle( "E5_BCOCHQ" ) + STR0129 , STR0032 )
					lRet := .F.
					M->E5_BCOCHQ := CriaVar( "E5_BCOCHQ" )
					M->E5_AGECHQ := CriaVar( "E5_AGECHQ" )
					M->E5_POSTAL := CriaVar( "E5_POSTAL" )
				EndIf
                //---------------
			EndIf
		EndIf

		//-------------------------------------------------------------------------
		// Valida o Movimento de tipo Outros Projeto: M11.7CTR01 Requisito: 1421.5
		//-------------------------------------------------------------------------
		If lRet
			lRet := FA100TpBco(M->E5_TIPO,M->E5_BANCO,M->E5_AGENCIA,M->E5_CONTA)
		EndIf

		dbSelectArea("SX3")
		dbSetOrder(2)
		If SX3->(dbSeek("E5_RG104"))
			cRG104 := M->E5_RG104
		EndIf
		IF (cPaisLoc == "ARG" .And. cRG104 == "S") .And. lRet
			If (lRet := GetEstCCO()) == .F.
				MsgInfo(STR0139)
			End IF
		EndIf

	EndIf
EndIf

Return lRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FA100Pre	³ Autor ³ Pilar S. Albaladejo   ³		³ 18/03/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Consiste se movimento podera ser pre'datado                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³fa100Pre()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA100																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa100Pre()
LOCAL lRet := .t.
Local lDtMovRet := SuperGetMV("MV_DTMOVRE",.T.,.F.)

If (!(m->e5_moeda $ "C1/C2/C3/C4/C5") .Or. Substr(m->e5_numcheq,1,1) == "*");
		.and. m->e5_vencto > m->e5_data
	If (!lDtMovRet .And. !lF100Auto)
		Help(" ",1,"FA100PRE")
		lRet := .f.
	EndIf
End
Return lRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FA100Est	³ Autor ³ Alessandro B. Freire  ³		³ 02/07/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Estorna movimentos bancarios										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³fa100Est()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ FINA100  ³ 																			  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION Fa100Est(aAutoCab As Array)

	Local lPanelFin 	:= IsPanelFin()
	LOCAL cBcoOrig 		:= ""                 // Banco a ser estornado
	LOCAL cAgenOrig		:= ""                 // Ag.   "  "     "
	LOCAL cCtaOrig 		:= ""                 // Cta.  "  "     "
	LOCAL cNatOrig    	:= ""
	LOCAL cMoedaTran  	:= ""						 // Numerario da Transferencia original
	LOCAL cBcoDest 		:= ""                 // Banco estornante
	LOCAL cAgenDest		:= ""                 // Ag.      "
	LOCAL cCtaDest 		:= ""                 // Cta.     "
	LOCAL cNatDest    	:= ""
	LOCAL cHist100		:= STR0033 // "Estorno de transferencia."
	LOCAL cBenef100		:= ""
	LOCAL cDoc			:= ""
	LOCAL cModSpb		:= "1"
	LOCAL nVlrEstorno 	:= 0						 // Valor a ser estornado.
	LOCAL nRegOrigem	:= 0
	LOCAL nRegDestino 	:= 0
	LOCAL nTamTit		:= TamSx3("E5_PREFIXO")[1]+TamSx3("E5_NUMERO")[1]+TamSx3("E5_PARCELA")[1]+TamSx3("E5_TIPO")[1]
	LOCAL nT			:= 0
	LOCAL nPos			:= 0
	LOCAL nTimeOut		:= SuperGetMv("MV_FATOUT",,900)*1000 // Estabelece 15 minutos para que o usuarios selecione
	LOCAL aAreaSE5		:= SE5->(GetArea())  // Ordem original do SE5 no inicio da operacao.
	LOCAL aEstornante	:= {} 					 // Array contendo dados do banco estornante.
	LOCAL aEstornado	:= {} 					 // Array contendo dados do banco estornante.
	LOCAL lGrava		:= .T.
	LOCAL lSpbInUse		:= SpbInUse()
	LOCAL lBlocked		:= .F.
	LOCAL lEstorno		:= .T.
	LOCAL lMarca		:= .F.
	Local oOk			:= LoadBitmap( GetResources(), "LBOK" )
	Local oNo			:= LoadBitmap( GetResources(), "LBNO" )
	LOCAL oPanel		:= NIL
	LOCAL oPanel1		:= NIL
	LOCAL oFnt			:= NIL
	Local oTimer		:= NIL
	Local lPergunte 	:= .F.
	Local aArea			:= {}
	Local cProcesso		:= ''
	Local nOrdPTrans	:= OrdProcTransf()
	LOCAL nA			:= 0
	LOCAL nI			:= 0
	LOCAL cMoedaTx		:= ""
	Local nPosAuto		:= 0
	Local lBxConc		:= GetNewPar("MV_BXCONC","2") == "1"
	Local nTxMoeda		:= 0
	Local nDiasDispo	:= SUPERGETMV("MV_DIASCRD",.F.,0)
	Local dDataCred		:= dDatabase
	Local lbFilBrw   	:= .F.
	Local cGetMoeda		:= ""

	Default aAutoCab := {}
	Default lFA100VET	:= ExistBlock("FA100VET")
	Default __F100DPRM  := ExistBlock("F100DPRM")
	Default lFA100TRF   := ExistBlock("FA100TRF")

	PRIVATE nTotal		:= 0
	PRIVATE nTxEstR		:= 0
	PRIVATE nTxEstP		:= 0
	PRIVATE cCodDiario	:= ""
	PRIVATE aDiario		:= {}
	PRIVATE aTxMoedas 	:= {}



	F100Metric(PROCNAME())

	lPagar   := .F.
	lReceber := .F.

	//--------------------------------------------------------------------------
	// A moeda 1 e tambem inclusa como um dummy, nao vai ter uso,
	// mas simplifica todas as chamadas a funcao xMoeda, ja que posso
	// passara a taxa usando a moeda como elemento do Array atxMoedas
	// Exemplo xMoeda(E1_VALOR,E1_MOEDA,1,dDataBase,,aTxMoedas[E1_MOEDA][2])
	// Bruno - Paraguay 22/08/2000
	//--------------------------------------------------------------------------
	aAdd  (aTxMoedas,{"",1,PesqPict("SM2","M2_MOEDA1")})
	For nA   := 2  To MoedFin()
		cMoedaTx := Str(nA,IIf(nA <= 9,1,2))
		cGetMoeda	:= GetMv("MV_MOEDA"+cMoedaTx)
		If !Empty(cGetMoeda)
			Aadd(aTxMoedas,{cGetMoeda,RecMoeda(dDataBase,nA),PesqPict("SM2","M2_MOEDA"+cMoedaTx) })
		Else
			Exit
		Endif
	Next

	If Type("bFiltraBrw") == "B"
		lbFilBrw := .T.
	Endif

	DEFINE FONT oFnt NAME "Arial" SIZE 10,14 BOLD

	//--------------------------------------------------------------------------
	// Parametros da funcao:
	// mv_par01 = N£mero do documento a estornar
	// mv_par02 = Data da Movimentacao
	// mv_par03 = Banco
	// mv_par04 = Agencia
	// mv_par05 = Conta
	//--------------------------------------------------------------------------
	If !lF100Auto
		If lPanelFin
			lPergunte := PergInPanel("FA100E",.T.)
		Else
		lPergunte := pergunte("FA100E",.T.)
		Endif

		If !lPergunte
			// Restaura pergunta principal
			pergunte("AFI100",.F.)
			If cPaisLoc <> "BRA" .And. lbFilBrw
				Eval( bFiltraBrw )
			Endif
			Return(.F.)
		EndIf

	Else //Via rotina automatica

		// Restaura pergunta principal
		Pergunte("AFI100",.F.)

		//Substitui as variaveis pelos conteudos do ExecAuto
		If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'AUTNRODOC'})) > 0
			mv_par01 :=	Padr(aAutoCab[nPosAuto,2],TamSx3("E5_NUMCHEQ")[1])
		EndIf

		If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'AUTDTMOV'})) > 0
			mv_par02 :=	aAutoCab[nPosAuto,2]
		EndIf

		If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'AUTBANCO'})) > 0
			mv_par03 :=	Padr(aAutoCab[nPosAuto,2],TamSx3("E5_BANCO")[1])
		EndIf

		If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'AUTAGENCIA'})) > 0
			mv_par04 :=	Padr(aAutoCab[nPosAuto,2],TamSx3("E5_AGENCIA")[1])
		EndIf

		If (nPosAuto := ascan(aAutoCab,{|x| Upper(x[1]) == 'AUTCONTA'})) > 0
			mv_par05 :=	Padr(aAutoCab[nPosAuto,2],TamSx3("E5_CONTA")[1])
		EndIf

	EndIf

	// Verifica se data do movimento não é menor que data limite de movimentacao no financeiro.
	// Antes verificavamos a data do movimento original (mv_par02), porem como se trata de uma Transferencia
	// precisamos realizar a verificação na data em que o estorno ocorrerá.
	If !DtMovFin(dDataBase,,"3")
		// Restaura pergunta principal
		pergunte("AFI100",.F.)
		If cPaisLoc <> "BRA" .And. lbFilBrw
			Eval( bFiltraBrw )
		Endif
		Return
	Endif

	//Estorno de movimento futuro nao eh permitido
	If dDataBase < mv_par02
		// Restaura pergunta principal
		Help(" ",1,"DTESTINV",, STR0042 +; // "Data do estorno inválida!"
					Chr(10)  + STR0043 + DTOC(mv_par02) +; // "Data da movimentação: "
					Chr(10)  + STR0044 + DTOC(dDataBase), 4, 0) // "Data do estorno: "
		pergunte("AFI100",.F.)
		If cPaisLoc <> "BRA" .And. lbFilBrw
			Eval( bFiltraBrw )
		Endif
		Return
	Endif

	//Verifico transferencias com mesmas caracteristicas
	aAreaSE5:= SE5->(GetArea())
	dbSelectArea("SE5")
	dbSetOrder(2) //E5_FILIAL+E5_TIPODOC+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+DtoS(E5_DATA)+E5_CLIFOR+E5_LOJA+E5_SEQ

	If MSSeek( xFilial("SE5")+"TR"+Space(nTamTit)+DTOS(mv_par02))

		While ! Eof()								.And. ;
			( SE5->E5_FILIAL == xFilial("SE5")) .And. ;
			( SE5->E5_DATA == mv_par02 )			.And. ;
			( SE5->E5_TIPODOC == "TR" )
			//Nao permito cancelamento de baixa se a mesma foi conciliada e se
			//o parametro MV_BXCONC estiver como 2(Padrao) - Nao permite
			If !Empty(SE5->E5_RECONC) .And. !lBxConc  							
					SE5->(dbSkip())
					Loop			
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³  Verifica se o registro corresponde aos parametros informados. ³
			//³  Caso afirmativo, encontrou o banco estornante.				   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Alltrim(SE5->E5_NUMCHEQ) == 	Alltrim(mv_par01)   .And.;
				SE5->E5_BANCO	== 	mv_par03   .And.;
				SE5->E5_AGENCIA	== 	mv_par04   .And.;
				SE5->E5_CONTA	== 	mv_par05   .And.;
				SE5->E5_RECPAG 	== 	"P"

				//Array para tela de opcoes
				If cPaisLoc $ "ANG|ARG|AUS|BOL|BRA|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|URU|VEN" .And. nOrdPTrans > 0
						If FA100ProcT(Alltrim(SE5->E5_PROCTRA)) // Funcao que verifica se esse registro ja fora estornado antes
							dbSkip()
							Loop
						Else
						nT := Ascan(aEstornante,{|x|x[11]== SE5->E5_MOEDA+AllTrim(SE5->E5_NUMCHEQ)+AllTrim(SE5->E5_PROCTRA)})
					Endif
				Else
					nT := Ascan(aEstornante,{|x|x[11]== SE5->E5_MOEDA+AllTrim(SE5->E5_NUMCHEQ)})
				Endif

				If nT > 0
					aEstornante[nT,1]:= Dtoc(E5_DATA)				//Data
					aEstornante[nT,2]:= SE5->E5_BANCO				//Banco Origem
					aEstornante[nT,3]:= SE5->E5_AGENCIA				//Agencia Origem
					aEstornante[nT,4]:= SE5->E5_CONTA           //Conta Origem
					aEstornante[nT,5]:= SE5->E5_NUMCHEQ         //Documento
					aEstornante[nT,6]:= SE5->E5_MOEDA           //Tipo de transferencia
					aEstornante[nT,7]:= Transf(E5_VALOR,"@E 9999,999,999.99") //valor

					aEstornante[nT,12] := SE5->(RECNO())				
					nPos := nT

				Else

					Aadd(aEstornante,{Dtoc(E5_DATA),SE5->E5_BANCO,SE5->E5_AGENCIA,;
						SE5->E5_CONTA,SE5->E5_NUMCHEQ,SE5->E5_MOEDA,;
						Transf(E5_VALOR,"@E 9999,999,999.99"),; 				//Chave do movimento de saida
						"","","",; 														//Banco, Agencia e Conta do movimento de entrada
						iif(cPaisLoc $ "ANG|ARG|AUS|BOL|BRA|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|URU|VEN" .And. nOrdPTrans > 0,SE5->E5_MOEDA+ALLTRIM(SE5->E5_NUMCHEQ)+AllTrim(SE5->E5_PROCTRA) , SE5->E5_MOEDA+ALLTRIM(SE5->E5_NUMCHEQ)),;				//Amarracao entre saida e entrada
						SE5->(RECNO()),;												//Registro do movimento de saida
						0 })																//Registro do movimento de entrada
						nPos := Len(aEstornante)

				Endif

				If cPaisLoc $ "ANG|ARG|AUS|BOL|BRA|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|URU|VEN" .And. nOrdPTrans > 0
					aArea := GetArea()
					cProcesso := SE5->E5_PROCTRA
					dbSetOrder(nOrdPTrans)
					dbSeek(xFilial("SE5")+cProcesso,.T.)
					While ! Eof() .And. SE5->E5_PROCTRA == cProcesso
						If Alltrim(SE5->E5_TIPODOC) == "TE" .And. Alltrim(SE5->E5_RECPAG) == "P" .And. Alltrim(SE5->E5_NUMCHEQ) == 	Alltrim(mv_par01)
							Exit
						EndIF
						If Alltrim(SE5->E5_TIPODOC) == "TR" .And. Alltrim(SE5->E5_RECPAG) == "R" .And. Alltrim(SE5->E5_DOCUMEN) == 	Alltrim(mv_par01)
							aEstornante[nPos,13] := SE5->(RECNO())
							aEstornante[nPos,8]	 := SE5->E5_BANCO			//Banco Destino
							aEstornante[nPos,9]	 := SE5->E5_AGENCIA			//Agencia Destino
							aEstornante[nPos,10] := SE5->E5_CONTA          //Conta Destino						
							Exit
						Endif
						dbSkip()
					Enddo
					RestArea(aArea)
				Endif

			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³  O documento ser  o estornado caso for um movimento a receber  ³
			//³  com o numero informado e no mesmo dia.						   ³
			//³  Procura pelo N§ do Doc em E5_DOCUMEN   					   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If AllTrim(SE5->E5_DOCUMEN) == AllTrim(mv_par01) .And.;
				SE5->E5_RECPAG	== "R" .And.;
				SE5->E5_BANCO	== 	mv_par03   .And.;
				SE5->E5_AGENCIA	== 	mv_par04   .And.;
				SE5->E5_CONTA	== 	mv_par05   .And.;
				SE5->E5_DATA	== mv_par02

				If cPaisLoc $ "ANG|ARG|AUS|BOL|BRA|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|URU|VEN" .And. nOrdPTrans > 0
					If FA100ProcT(Alltrim(SE5->E5_PROCTRA)) // Funcao que verifica se esse registro ja fora estornado antes
						dbSkip()
						Loop
					Else
						nT := Ascan(aEstornante,{|x|x[11]== SE5->E5_MOEDA+AllTrim(SE5->E5_DOCUMEN)+Alltrim(SE5->E5_PROCTRA) })
					Endif
				Else
					nT := Ascan(aEstornante,{|x|x[11]== SE5->E5_MOEDA+AllTrim(SE5->E5_DOCUMEN) })
				Endif

				If nT > 0
					aEstornante[nT,8]	:= SE5->E5_BANCO
					aEstornante[nT,9]	:= SE5->E5_AGENCIA
					aEstornante[nT,10] := SE5->E5_CONTA
					aEstornante[nT,13] := SE5->(RECNO())
				Else				
					Aadd(aEstornante,{"","","","","","","",;					//Chave do movimento de saida
							SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,;		//Banco, Agencia e Conta do movimento de entrada
							iif(cPaisLoc $ "ANG|ARG|AUS|BOL|BRA|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|URU|VEN" .And. nOrdPTrans > 0,SE5->E5_MOEDA+ALLTRIM(SE5->E5_DOCUMEN)+AllTrim(SE5->E5_PROCTRA) , SE5->E5_MOEDA+ALLTRIM(SE5->E5_DOCUMEN)),;	//Amarracao entre saida e entrada
							0,;													//Registro do movimento de saida
							SE5->(RECNO()) })									//Registro do movimento de entrada
					nT := Len(aEstornante)
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Se jah encontrou o banco estornante, nao continua a procura pelo documento a receber no mesmo dia. ³
				//³ Isto evita que selecione o mesmo documento, no mesmo dia, porem de outro banco.                    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !Empty(aEstornante[nT,2]+aEstornante[nT,3]+aEstornante[nT,4])
					Exit
				EndIf

				If cPaisLoc $ "ANG|ARG|AUS|BOL|BRA|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|URU|VEN" .And. nOrdPTrans > 0
					aArea := GetArea()
					cProcesso := SE5->E5_PROCTRA
					dbSetOrder(nOrdPTrans)
					dbSeek(xFilial("SE5")+cProcesso,.T.)
					While ! Eof() .And. SE5->E5_PROCTRA == cProcesso
						If Alltrim(SE5->E5_TIPODOC) == "TR" .And. Alltrim(SE5->E5_RECPAG) == "P"
							aEstornante[nT,12] := SE5->(RECNO())
							// Adiciona os dados do Banco Origem, para que apareçam na proxima tela
							aEstornante[nT,1]:= Dtoc(E5_DATA)			//Data
							aEstornante[nT,2]:= SE5->E5_BANCO			//Banco Origem
							aEstornante[nT,3]:= SE5->E5_AGENCIA			//Agencia Origem
							aEstornante[nT,4]:= SE5->E5_CONTA           //Conta Origem
							aEstornante[nT,5]:= SE5->E5_NUMCHEQ         //Documento
							aEstornante[nT,6]:= SE5->E5_MOEDA           //Tipo de transferencia
							aEstornante[nT,7]:= Transf(E5_VALOR,"@E 9999,999,999.99") //valor
							Exit
						Endif
						dbSkip()
					Enddo
					RestArea(aArea)
				Endif

			EndIf
			dbSkip()
		EndDo
	Endif

	//Nao achou registros de transferencia
	If Len (aEstornante) == 0
		HELP(" ",1,"RECNO",, ; // "Não existem registros no arquivo em pauta "
				Chr(10)  + STR0077, 4, 0) //"Ou o(s) registro(s) se encontra(m) conciliado(s). "

		pergunte("AFI100",.F.)
		dbSelectArea("SE5")
		SE5->(RestArea(aAreaSE5))
		If cPaisLoc <> "BRA" .And. lbFilBrw
			Eval( bFiltraBrw )
		Endif
		Return .F.
	EndIf

	//Tela para escolher o a transferencia a ser estornada
	//se houverem transferencias com mesmo documento no mesmo dia, mas de moedas diferentes
	//Exemplo
	// TRF1 - 02/03/07 - CH - 123456
	// TRF1 - 02/03/07 - R$ - 123456
	// TRF1 - 02/03/07 - DC - 123456

	//Monto as strings para a tela de selecao
	For nT := 1 to Len(aEstornante)
		//Se uma das pontas da transferencia não for encontrada, desprezo
		//Se nao estiver marcado, desprezo
		If aEstornante[nT,12] > 0 .and. ;	//Registro original de saida
			aEstornante[nT,13] > 0 			//Registro original de entrada

			AADD(aEstornado,{	aEstornante[nT,1],aEstornante[nT,2],aEstornante[nT,3],;
								aEstornante[nT,4],aEstornante[nT,5],aEstornante[nT,6],;
								aEstornante[nT,7],aEstornante[nT,8],aEstornante[nT,9],;
								aEstornante[nT,10],lMarca,aEstornante[nT,12],aEstornante[nT,13]})


		Endif
	Next

	//Nao achou registros de transferencia
	If Len (aEstornado) == 0
		HELP(" ",1,"RECNO" )
		pergunte("AFI100",.F.)
		dbSelectArea("SE5")
		SE5->(RestArea(aAreaSE5))
		If cPaisLoc <> "BRA" .And. lbFilBrw
			Eval( bFiltraBrw )
		Endif
		Return .F.
	EndIf

	//Tela de selecao de transferencias a estornar
	nTrfCanc := 0
	aSize := MsAdvSize(,.F.,400)

	If !lF100Auto
		DEFINE MSDIALOG oDlg TITLE STR0033 From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL
		oDLg:lMaximized := .T.
		oTimer:= TTimer():New(nTimeOut,{|| oDlg:End() },oDlg) // Ativa timer
		oTimer:Activate()

		//---
		oPanel:= TPanel():New(0,0,'',oDlg, oDlg:oFont, .T., .T.,, ,20,20,.T.,.T. )
		oPanel:Align := CONTROL_ALIGN_TOP


		If Len(aEstornante) > 1
			//"Foram encontradas transferências bancárias semelhantes. Selecione as transferências a serem estornadas."
			@ 004, 005 Say STR0066	FONT oFnt COLOR CLR_HRED	PIXEL Of oPanel
		Else
			//"Confirme o estorno da transferência"
			@ 004, 005 Say STR0067	FONT oFnt COLOR CLR_HRED	PIXEL Of oPanel
		Endif

		//---
		@005,010 LISTBOX oBrw FIELDS TITLE "",;
											Rtrim(RetTitle("E5_DATA")) ,;		//"Data"   	,;
											STR0021+" "+STR0020	,;				//"Banco Origem"
											STR0022+" "+STR0020	,;				//"Agencia Origem"
											STR0023+" "+STR0020	,;				//"Conta Origem"
											STR0027					,;				//"Documento"
											STR0026					,;				//"Tipo Transf."
											STR0028					,;				//"Valor"
											STR0021+" "+STR0024	,;				//"Banco Destino"
											STR0022+" "+STR0024	,;				//"Agencia Destino"
											STR0023+" "+STR0024	 ;				//"C/C Destino"
			SIZE 370,100 OF oDlg PIXEL ;
			ON DBLCLICK (Iif(aEstornado[oBrw:nAt,11] == .F., Iif(FA100Conc(cProcesso), aEstornado[oBrw:nAt,11] := !aEstornado[oBrw:nAt,11], aEstornado[oBrw:nAt,11] := aEstornado[oBrw:nAt,11]), aEstornado[oBrw:nAt,11] := .F.),oBrw:Refresh()) NOSCROLL

				oBrw:SetArray( aEstornado )
				oBrw:bLine := {|| { If(aEstornado[oBrw:nAt,11],oOk,oNo),;
											aEstornado[oBrw:nAt,1],aEstornado[oBrw:nAt,2], ;
											aEstornado[oBrw:nAt,3],aEstornado[oBrw:nAt,4], ;
											aEstornado[oBrw:nAt,5],aEstornado[oBrw:nAt,6], ;
											aEstornado[oBrw:nAt,7],aEstornado[oBrw:nAt,8], ;
											aEstornado[oBrw:nAt,9],aEstornado[oBrw:nAt,10] }}
				
				oBrw:bHeaderClick := {|oObj,nCol| Iif(FA100Conc(cProcesso), If( nCol==1, fMarkAll(@aEstornado),Nil), Nil), oBrw:Refresh()}

				oBrw:Align := CONTROL_ALIGN_ALLCLIENT
				oBrw:Refresh(.f.)

		//---
		oPanel1:= TPanel():New(0,0,'',oDlg, oDlg:oFont, .T., .T.,, ,20,20,.T.,.T. )
		oPanel1:Align := CONTROL_ALIGN_BOTTOM

		If lPanelFin  //Chamado pelo Painel Financeiro
			ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,;
			{|| If(FinOkDiaCTB(),nTrfCanc:=1,nTrfCanc:=0),oDlg:End()},;
			{||nTrfCanc := 0,oDlg:End()})
		Else
			DEFINE SBUTTON FROM 4,325 TYPE 1 ACTION (If(FinOkDiaCTB(),nTrfCanc:=1,nTrfCanc:=0),oDlg:End())  ENABLE OF oPanel1 PIXEL
			DEFINE SBUTTON FROM 4,360 TYPE 2 ACTION (nTrfCanc := 0,oDlg:End())  ENABLE OF oPanel1 PIXEL
			ACTIVATE MSDIALOG oDlg VALID (oTimer:End(),.T.) CENTERED
		Endif
	Else
		//Via execauto estorna todos os movimentos
		For nI := 1 To Len(aEstornado)
			aEstornado[nI,11] := .T.
		Next nI

		nTrfCanc := 1
	EndIf

	If nTrfCanc == 0
		// Restaura pergunta principal
		pergunte("AFI100",.F.)
		If cPaisLoc <> "BRA" .And. lbFilBrw
			Eval( bFiltraBrw )
		Endif
		Return
	Endif

	If nTrfCanc == 1 

		//Inicia lancamento no PCO m
		PcoIniLan("000007")

		For nPos := 1 to Len(aEstornado)

			nRegOrigem	:= aEstornado[nPos,12]		//Registro original de saida
			nRegDestino	:= aEstornado[nPos,13]		//Registro original de entrada
			lContinua := .T.

			//Se uma das pontas da transferencia não for encontrada, desprezo
			//Se nao estiver marcado, desprezo
			If nRegOrigem == 0 .or. nRegDestino == 0 .or. !aEstornado[nPos,11]
				lContinua := .F.
			Endif

			If lContinua
				//posicionar SE5 no Regitro original de saida
				SE5->(dbGoto(nRegOrigem))

				// Se foi criado um cheque para esta transferencia, o mesmo deve ser cancelado,
				// uma vez que o valor ser  estornado.	  	 ³
				If nRegOrigem > 0 .and. SE5->E5_MOEDA $ "CH|TB"
					dbSelectArea("SEF")
					dbSetOrder(1)
					If dbSeek( xFilial("SEF")+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA+SE5->E5_NUMCHEQ )
						RecLock("SEF",.F.)

						If (__F100DPRM)
							ExecBlock("F100DPRM",.F.,.F.)
						EndIf
						
						If EF_IMPRESS == "S"
							Replace EF_IMPRESS With "C"
						Else
							dbDelete()
						Endif
						MsUnlock()
					EndIf
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ O beneficiario sera o banco estornante.				  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SA6->(dbSetOrder(1))
				SA6->(MSSeek( xFilial("SA6")+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA ))
				cBenef100	:= SA6->A6_NOME

				//posicionar SE5 no Regitro original de saida
				dbSelectArea("SE5")
				SE5->(dbGoto(nRegOrigem))
				cBcoDest 	:= SE5->E5_BANCO
				cAgenDest	:= SE5->E5_AGENCIA
				cCtaDest 	:= SE5->E5_CONTA
				cNatDest 	:= SE5->E5_NATUREZ
				cMoedaTran  := SE5->E5_MOEDA
				cModSpb		:= IIF(lSpbInUse, SE5->E5_MODSPB, cModSpb)
				cDoc		:= SE5->E5_NUMCHEQ
				nVlrEstorno := SE5->E5_VALOR
				nTxEstP     := SE5->E5_VLMOED2/SE5->E5_VALOR

				//posicionar SE5 no Regitro original de ENTRADA
				dbSelectArea("SE5")
				SE5->(dbGoto(nRegDestino))
				cBcoOrig 	:= SE5->E5_BANCO
				cAgenOrig	:= SE5->E5_AGENCIA
				cCtaOrig 	:= SE5->E5_CONTA
				cNatOrig 	:= SE5->E5_NATUREZ
				nTxEstR		:= SE5->E5_VLMOED2/SE5->E5_VALOR
				nTxMoeda	:= SE5->E5_TXMOEDA

				If !FTrfCxFin(cBcoOrig, cBcoDest) //Caso não for transferencia entre caixas financeiros considera MV_DIASCRD e dia util
					dDataCred := dDatabase + nDiasDispo
					dDataCred := If(SE5->E5_DTDISPO > dDataCred, SE5->E5_DTDISPO, dDataCred )
					dDataCred := DataValida(dDataCred)
				Else
					dDataCred := If(SE5->E5_DTDISPO > dDataCred, SE5->E5_DTDISPO, dDataCred )
				Endif

				// Valida estorno da transferencia
				If lFA100VET
					If ! ExecBlock("FA100VET", .F., .F., { nRegOrigem , nRegDestino } )
						pergunte("AFI100",.F.)
						dbSelectArea("SE5")
						SE5->(RestArea(aAreaSE5))
						If cPaisLoc <> "BRA" .And. lbFilBrw
							Eval( bFiltraBrw )
						Endif
						Exit
					Endif
				Endif

				// Restaura pergunta principal (necessaria para verificar contabilizacao etc)
				pergunte("AFI100",.F.)
				lGrava := .T.
				If lFA100TRF
					lGrava := ExecBlock("FA100TRF", .F., .F., { cBcoOrig, cAgenOrig, cCtaOrig,;
																cBcoDest, cAgenDest, cCtaDest,;
																cMoedaTran, cDoc, nVlrEstorno,;
																cHist100, cBenef100, cNatOrig,;
																cNatDest,cModSpb,lEstorno, dDataCred })
				Endif

				//Verifica se alguma das contas está bloqueada
				If CCBLOCKED(cBcoOrig,cAgenOrig,cCtaOrig) .or. CCBLOCKED(cBcoDest,cAgenDest,cCtaDest)
					lBlocked := .T.
				Endif

				If !lBlocked
					IF lGrava
						Begin Transaction
						If fa100grava(	cBcoOrig,cAgenOrig,cCtaOrig,cNatOrig,;
									cBcoDest,cAgenDest,cCtaDest,cNatDest,;
									cMoedaTran,cDoc,nVlrEstorno,cHist100,;
									cBenef100,lEstorno, cModSpb,,nTxMoeda, ;
									nRegOrigem, nRegDestino, dDataCred )

							//Seto a variável abaixo para que, caso seja necessária a migração do registro original, o model o faça.
							//Esta variável é setada .T. na função acima, correetamente.
							//Mas para a migração no carregamento do model FINM030 é necessário que ela esteja com .F.
							INCLUI := .F.

							//------------------------------------------------------------------------
							// Grava tipodoc com TE indicando o estorno da transferencia.
							// REGISTRO ORIGEM
							//------------------------------------------------------------------------
							dbSelectArea("SE5")
							dbGoto(nRegOrigem)
							RecLock("SE5")
							SE5->E5_TIPODOC := 'TE'
							SE5->(MsUnlock())

							FK5->(dbSetOrder(1))
							If FK5->(MsSeek(xFilial("FK5",SE5->E5_FILORIG)+ SE5->E5_IDORIG ))
								RecLock("FK5")
								FK5->FK5_TPDOC := 'TE'
								FK5->(MsUnlock())
							EndIf

							//------------------------------------------------------------------------
							// Grava tipodoc com TE indicando o estorno da transferencia.
							// REGISTRO DESTINO
							//------------------------------------------------------------------------
							dbSelectArea("SE5")
							dbGoto(nRegDestino)
							RecLock("SE5")
							SE5->E5_TIPODOC := 'TE'
							SE5->(MsUnlock())

							FK5->(dbSetOrder(1))
							If FK5->(MsSeek(xFilial("FK5",SE5->E5_FILORIG)+ SE5->E5_IDORIG ))
								RecLock("FK5")
								FK5->FK5_TPDOC := 'TE'
								FK5->(MsUnlock())
							EndIf
						Endif
						End Transaction

						dbSelectArea("SE5")

						//Restaura pergunta do processo
						Pergunte( "FA100E", .F. )
					Endif
				Endif
			Endif
		Next

		//Finaliza lancamento no PCO
		PcoFinLan("000007")
	Endif

	SE5->(RestArea(aAreaSE5))
	pergunte("AFI100",.F.)
	If cPaisLoc <> "BRA" .And. lbFilBrw
		Eval( bFiltraBrw )
	Endif

	If !lF100Auto
		If lPanelFin  //Chamado pelo Painel Financeiro
			dbSelectArea(FinWindow:cAliasFile)
			FinVisual(FinWindow:cAliasFile,FinWindow,(FinWindow:cAliasFile)->(Recno()),.T.)
		Endif
	EndIf

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FA100Doc	³ Autor ³ Alessandro B. Freire  ³		³ 02/07/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida o documento digitado 										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³fa100Doc()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ FINA100  ³ 																			  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa100Doc(cBanco,cAgencia,cConta,cDocumento)

LOCAL lRet:=.T.
LOCAL lTemMov := .F.

//Verificar se o documento é igual a *
If Substr(cDocumento,1,1) == "*"  .And. Len(Alltrim(cDocumento)) > 1
	Help("",1,"INVALIDDOC",,STR0152,1,0) //"Não é permitida a digitação de '*' na primeira posição do documento."                                                                                                                                                                                                                                                                                                                                                                                                                                              
	lRet := .F.
EndIf

If (Alltrim(cTipoTran) != "TB" .And. Alltrim(cTipoTran) != "CH") .And.;
		Substr(cDocumento,1,1) == "*"
	lRet := .F.
EndIf

//Verifico se nas transferencias em cheque, ja exista cheque com mesma numeracao
dbSelectArea("SEF")
dbSetOrder(1)
If lRet .and. AllTrim(cTipoTran) $ "TB#CH" .and. ;
	SEF->(dbSeek(xFilial("SEF")+cBanco+cAgencia+cConta+Substr(cDocumento,1,15)))

	Help(" ",1,"100DOCEXIS")
	lRet := .F.
Endif

//Procura se ja nao houve movimentacao com o documento informado
If lRet
	lTemMov := F100MovTB(cBanco,cAgencia,cConta,cDocumento,cTipoTran,dDataBase)
	If lTemMov
		HELP(" ",1,"100DOCEXIS" )
		lRet := .F.
	Endif
Endif

Return lRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³F100PesInd³ Autor ³ Bruno Sobieski Chavez ³ Data ³ 21.06.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Pesquisa para IndRegua (quando na funçao que chama aRotina |±
±±³       	 ³ nao e possivel enviar parametros).								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA100PesInd  															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA100																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA100PesInd
AxPesqInd(cIndice,cIndexArg)
Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ ValidTran³ Autor ³ J£lio Wittwer         ³ Data ³08.02.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida‡„o do banco / agencia / conta de destino na transf. ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ValidTran(cTipo, @Banco, @agencia, @conta , @benef)        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA100																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ValidTran(cTip,cBco,cAge,cCta,cBen,cDoc,nValTran,cNaturOri,cNaturDes,cBcoOrig,cAgenOrig,cCtaOrig)

Local lRet 		:= .T.
Local nMoedaDes := 0
Local nMoedaOri := 0
Local lCxLoja	:= GetNewPar( "MV_CXLJFIN", .F. )
Local nMoedOri	:= 0
Local nMoedDst	:= 0

If Empty(cTip) .or. nValTran <= 0
	lRet := .F.
Endif

//Verifica se Conta Origem = Conta Destino
If cBcoOrig+cAgenOrig+cCtaOrig == cBco+cAge+cCta
	Help(" ",1,"BCO_TRF")
	lRet := .F.
Endif

If Empty(cNaturOri) .or. Empty(cNaturDes)
	Help(" ",1,"NATUREZA")
	lRet := .F.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apenas deve obrigar a digita‡„o do destino da opera‡„o ³
//³ quando for movimenta‡„o em dinheiro                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet
	If alltrim(cTip) $ "R$/DOC/TB"
		lRet := CarregaSa6(@cBco,@cAge,@cCta,.T.,@cBen,.T.,,.T.)
	Else
		IF !Empty(cBco + cAge + cCta)
			lRet := CarregaSa6(@cBco,@cAge,@cCta,.T.,@cBen,.T.,,.T.)
		Else
			lRet := .F.
		Endif
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Obrigar a digita‡Æo do nro do documento de transferenc.³
//³ quando for movimenta‡„o via Doc, Cheque ou Cheque TB   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .and. Empty(cDoc)
	Help(" ",1,"NRODOC",,STR0037,1,0)	//"Numero de documento invalido"
	lRet := .F.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se data do movimento n„o ‚ menor que data limite de ³
//³ movimentacao no financeiro    										  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .and. !DtMovFin(,,"3")
	lRet := .f.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se as taxas das moedas usadas estao cadastradas ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet
	nMoedaOri := MoedaBco(cBcoOrig,cAgenOrig,cCtaOrig)
	nMoedaDes := MoedaBco(cBco,cAge,cCta)
	If cPaisLoc <> "BRA" .or. nMoedaOri <> nMoedaDes
		If (Len(aTxMoedas) < nMoedaOri .Or. (nMoedaOri > 1 .And. aTxMoedas[nMoedaOri,2] == 0)) .Or.;
			(Len(aTxMoedas) < nMoedaDes .Or. (nMoedaDes > 1 .And. aTxMoedas[nMoedaDes,2] == 0))
			lRet := .F.
			Help(" ",1,'NoMoneda')
		Endif
	Endif
Endif

//Se for caixa do Loja e nao for Sangria
//Se for caixa Financeiro
//Não Serao admitidas transferencias em CHEQUE (CH/TB) ou DOC
If lRet .AND. nModulo <> 12 .AND. (Alltrim(cTip) $ "CH/DOC/TB" .AND.  ( (IsCaixaLoja(cBcoOrig) .AND. !lCxLoja) .OR. IsCxFin(cBcoOrig,cAgenOrig,cCtaOrig) ) )
	Help(" ",1,"INVTRF",,STR0069,1,0)
	lRet := .F.
Endif

// A transferencia entre cntas correntes eh permitida apenas para:
// 1. C/C origem em outra moeda para C/C destino em Real
// 2. C/C origem e C/C destino com mesma moeda (Ex: US$ para US$)
If lRet .AND. FXMultSld()
	DbSelectArea( "SA6" )
	SA6->( DbSetOrder( 1 ) )
	If SA6->( DbSeek( xFilial( "SA6" ) + cBcoOrig + cAgenOrig + cCtaOrig ) )
		nMoedOri := SA6->A6_MOEDA
	EndIf

	If SA6->( DbSeek( xFilial( "SA6" ) + cBco + cAge + cCta ) )
		nMoedDst := SA6->A6_MOEDA
	EndIf

	lRet := .F.
	If ( nMoedOri <> 1 .AND. nMoedDst == 1 ) .OR. ( nMoedOri == nMoedDst )
		lRet := .T.
	EndIf

	If !lRet
		Help(" ", 1, "BCOTRF",, STR0072, 1, 0 ) // "A transferência é permitida apenas para: 1- C/C origem em outra moeda para C/C destino em Real. 2- C/C origem e C/C destino com mesma moeda (Ex: US$ para US$)"
	EndIf
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³IsCaixaLoj³ Autor ³ Wagner Xavier 		³ Data ³ 16/02/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verifica se o codigo do banco ‚ um caixa do SIGALOJA.       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³V rios     												  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function IsCaixaLoja( cCaixa )
LOCAL lCaixa := .F.
LOCAL cAlias := Alias()

dbSelectArea("SX5")
If SX5->( DbSeek( xFilial("SX5") + "23" + PadR(Substr(cCaixa,1,3),TamSx3("X5_CHAVE")[1]) ) )
	lCaixa := .T.
Endif

dbSelectArea(cAlias)
Return lCaixa
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Fa100SetMoºAutor  ³Bruno Sobieski      º Data ³  22/08/00   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Permite corrigir as taxas das moedas para a taxa da hora.   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP5                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function Fa100SetMo()
Local oDlg, nLenMoedas	:= Len(aTxMoedas)
Local lConfirmo	:=	.F.
Local aTxTmp   := aClone(aTxMoedas)

If nLenMoedas > 1
	Define MSDIALOG oDlg From 200,0 TO 362,230 TITLE OemToAnsi(STR0036) PIXEL   //   "Tasas"
   @ 005,005  To 062,110 OF oDlg PIXEL
   @ 012,010 SAY  aTxMoedas[2][1]  Of oDlg PIXEL
   @ 010,060 MSGET aTxMoedas[2][2] PICTURE aTxMoedas[1][3] Of oDlg PIXEL
   If nLenMoedas > 2
      @ 024,010 SAY  aTxMoedas[3][1]  Of oDlg PIXEL
      @ 022,060 MSGET aTxMoedas[3][2] PICTURE aTxMoedas[2][3] Of oDlg PIXEL
      If nLenMoedas > 3
         @ 036,010 SAY  aTxMoedas[4][1]  Of oDlg PIXEL
         @ 034,060 MSGET aTxMoedas[4][2] PICTURE aTxMoedas[3][3] Of oDlg PIXEL
         If nLenMoedas > 4
            @ 048,010 SAY  aTxMoedas[5][1]  Of oDlg PIXEL
            @ 046,060 MSGET aTxMoedas[5][2] PICTURE aTxMoedas[4][3] Of oDlg PIXEL
         Endif
      Endif
   Endif
   DEFINE  SButton FROM 064,80 TYPE 1 Action (lConfirmo := .T. , oDlg:End() ) ENABLE OF oDlg  PIXEL
   Activate MSDialog oDlg CENTERED
   If !lConfirmo
      aTxMoedas   := aClone(aTxTmp)
   Endif

Else
	Help("",1,"NoMoneda")
Endif

Return


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³F100Legenda ³ Autor ³ Mauricio Pequim Jr. ³ Data ³ 13.11.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria uma janela contendo a legenda da mBrowse ou retorna a ³±±
±±³          ³ para o BROWSE                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Fina100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F100Legenda(nReg)

Local aLegenda := { 	{"BR_VERDE", STR0039 },;		//"Movimento Bancario - Receber"
							{"BR_AZUL", STR0040 },;		//"Movimento Bancario - Pagar"
							{"BR_AMARELO", STR0057 },;		//"Movimento Bancario - Cancelado"
							{"BR_VERMELHO", STR0041 } }	//"Movimento Bancario - Excluido"
Local uRetorno := .T.

F100Metric(PROCNAME())

If nReg = Nil	// Chamada direta da funcao onde nao passa, via menu Recno eh passado
	uRetorno := {}
	Aadd(uRetorno, { 'E5_RECPAG = "R" .and. Empty(E5_SITUACA)', aLegenda[1][1] } )
	Aadd(uRetorno, { 'E5_RECPAG = "P" .and. Empty(E5_SITUACA)', aLegenda[2][1] } )
	Aadd(uRetorno, { 'E5_SITUACA $ "X/E"', aLegenda[3][1] } )
	Aadd(uRetorno, { 'E5_SITUACA = "C"', aLegenda[4][1] } )
Else
	BrwLegenda(cCadastro, STR0070, aLegenda) // "Legenda"
Endif

Return uRetorno

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³F100VldPrj³ Autor ³Fabio Rogerio Pereira  ³ Data ³ 31/01/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Validacao do codigo da tarefa digitada.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F100VldPrj(cAlias)
Local lRet	:= .F.
Local aArea		:= GetArea()
Local aAreaAF8	:= AF8->(GetArea())
Local aAreaAF9	:= AF9->(GetArea())
Local aAreaAFC	:= AFC->(GetArea())

If AF8->(dbSeek(xFilial()+M->E5_PROJPMS))
	Do Case
		Case (cAlias == "AF9")
			If AF9->(dbSeek(xFilial()+AF8->AF8_PROJET+AF8->AF8_REVISA+M->E5_TASKPMS))
				lRet := .T.
			EndIf

		Case (cAlias == "AFC")
			If AFC->(dbSeek(xFilial()+AF8->AF8_PROJET+AF8->AF8_REVISA+M->E5_EDTPMS))
				lRet := .T.
			EndIf
	EndCase

	If !lRet
		HELP("   ",1,"REGNOIS")
	EndIf
Else
	HELP("   ",1,"REGNOIS")
EndIf

RestArea(aAreaAF8)
RestArea(aAreaAF9)
RestArea(aAreaAFC)
RestArea(aArea)

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³F100DlgPms³ Autor ³ Edson Maricate        ³ Data ³ 15-02-2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Cria uma janela de consula das tarefas do Projeto.            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³SIGAPMS                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F100DlgPms(cValid)

Local aRet

DEFAULT cValid 	:= "AF9"

aRet := PmsSelTsk(STR0046,"AF8/AFC/AF9",cValid,STR0047)  //"Selecione a Tarefa"###"Selecao Invalida. Esta consulta permite apenas a selecao das Tarefas do projeto. Varifique o elemento selecionado."

If !Empty(aRet)
	If aRet[1]=="AF9"
		AF9->(dbGoto(aRet[2]))
		M->E5_PROJPMS		:= AF9->AF9_PROJET
		M->E5_TASKPMS		:= AF9->AF9_TAREFA
		M->E5_EDTPMS		:= SPACE(LEN(M->E5_EDTPMS))
	ElseIf aRet[1]=="AFC"
		AFC->(dbGoto(aRet[2]))
		M->E5_PROJPMS		:= AFC->AFC_PROJET
		M->E5_TASKPMS		:= SPACE(LEN(M->E5_TASKPMS))
		M->E5_EDTPMS		:= AFC->AFC_EDT
	EndIf
	If ExistBlock("PMSDLGMOV")
		ExecBlock("PMSDLGMOV",.F.,.F.)
	EndIf
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³F100PmsTrf³ Autor ³ Edson Maricate        ³ Data ³ 15-02-2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Cria uma janela de selecao do projeto Origem/Destino para     ³±±
±±³          ³alocacao no projeto.                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³SIGAPMS                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F100PmsTrf(aTrfPms)


DEFINE MSDIALOG oDlg FROM  32, 113 TO 200,517 TITLE STR0049 PIXEL	 //"Gerenciamento de Projetos : Transferencia"

	@ 06, 4 TO 036, 165 Label STR0050 OF oDlg	PIXEL  //"Origem"
	@ 44, 4 TO 074, 165 Label STR0051 OF oDlg	PIXEL  //"Destino"

	@ 12, 09 SAY STR0052 Of oDlg PIXEL  //"Projeto"
	@ 12, 60 SAY STR0053 Of oDlg PIXEL	  //"Tarefa"
	@ 21, 09 MSGET aTrfPms[1] F3 "AF8" Picture PesqPict("SE5","E5_PROJPMS") Valid Vazio(aTrfPms[1]).Or.(ExistCpo("AF8",aTrfPms[1],1) .And. PmsSetF3("AF9",2,aTrfPms[1]).And.aTrfPms[3]!=aTrfPms[1]) SIZE 30, 10 OF oDlg PIXEL
	@ 21, 60 MSGET aTrfPms[2] F3 "AF9" Picture PesqPict("SE5","E5_TASKPMS") Valid Vazio(aTrfPms[2]).Or.(ExistCpo("AF9",aTrfPms[1]+PmsAF8Ver(aTrfPms[1])+aTrfPms[2],1)) When !Empty(aTrfPms[1]) SIZE 50, 10 OF oDlg PIXEL

	@ 50, 09 SAY STR0052 Of oDlg PIXEL  //"Projeto"
	@ 50, 60 SAY "EDT" Of oDlg PIXEL
	@ 50,111 SAY STR0053 Of oDlg PIXEL  //"Tarefa"
	@ 59, 09 MSGET aTrfPms[3] F3 "AF8" Picture PesqPict("SE5","E5_PROJPMS") Valid Vazio(aTrfPms[3]).Or.(ExistCpo("AF8",aTrfPms[3],1) .And.aTrfPms[3]!=aTrfPms[1] .And. PmsSetF3("AF9",2,aTrfPms[3]) .And. PmsSetF3("AFC",2,aTrfPms[3]).And.If(.T.,(aTrfPms[4]:=Space(Len(aTrfPms[4])),aTrfPms[5]:=Space(Len(aTrfPms[5]))),Nil) ) SIZE 30, 10 OF oDlg PIXEL
	@ 59, 60 MSGET aTrfPms[4] F3 "AFC" Picture PesqPict("SE5","E5_EDTPMS") Valid Vazio(aTrfPms[4]).Or.(ExistCpo("AFC",aTrfPms[3]+PmsAF8Ver(aTrfPms[3])+aTrfPms[4],1).And.(aTrfPms[5]:=Space(Len(aTrfPms[5])))) When !Empty(aTrfPms[3]) .And. Empty(aTrfPms[5])  SIZE 50, 10 OF oDlg PIXEL
	@ 59,111 MSGET aTrfPms[5] F3 "AF9" Picture PesqPict("SE5","E5_TASKPMS") Valid Vazio(aTrfPms[5]).Or.(ExistCpo("AF9",aTrfPms[3]+PmsAF8Ver(aTrfPms[3])+aTrfPms[5],1).And.(aTrfPms[4]:=Space(Len(aTrfPms[4])))) When !Empty(aTrfPms[3]) .And. Empty(aTrfPms[4]) SIZE 50, 10 OF oDlg PIXEL

	DEFINE SBUTTON FROM 10, 168 TYPE 1 ENABLE ACTION If(f100OkTrf(aTrfPms),(nOpca:=1,oDLg:End()),Nil) OF oDlg
	DEFINE SBUTTON FROM 23, 168 TYPE 2 ENABLE ACTION (nOpca:=0,oDlg:End()) OF oDlg

ACTIVATE MSDIALOG oDlg CENTERED

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³F100OkTrf ³ Autor ³ Edson Maricate        ³ Data ³ 15-02-2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida se os todos os campos foram informados corretamente    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³SIGAFIN                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function f100OkTrf(aTrfPms)
Local lRet := .T.

If !Empty(aTrfPms[1]) .And. Empty(aTrfPms[2])
	HELP("  ",1,"OBRIGAT")
	lRet := .F.
EndIf

If lRet .And. !Empty(aTrfPms[3]) .And. Empty(aTrfPms[4]+aTrfPms[5])
	HELP("  ",1,"OBRIGAT")
	lRet := .F.
EndIf

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Fa100Rateio³ Autor ³ Wagner Mobile Costa  ³ Data ³ 06/08/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Visualizacao do Rateio de Movimento Bancario - > SIGACTB    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³Fa050Rateio(cAlias,nReg,nOpc) 							           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA050            							 			           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa100Rateio(cAlias,nReg,nOpc)
Local cArq

RegToMemory("SE5",.F.,.F.)

If ! Empty(SE5->E5_ARQRAT)
	CtbRatFin(If(SE5->E5_RECPAG = "R", "517", "516"),"FINA100","",5,SE5->E5_ARQRAT,2)
Else
	Help("",1,	"NoRateio")
Endif

// Verifica o arquivo de rateio, e apaga o arquivo temporario
// para que no proximo rateio seja criado novamente
If Select("TMP") > 0
	DbSelectArea( "TMP" )
	cArq := DbInfo(DBI_FULLPATH)
	cArq := AllTrim(SubStr(cArq,Rat("\",cArq)+1))
	DbCloseArea()
	FErase(cArq)
EndIf

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Fa100ValRat³ Autor ³ Claudio D. de Souza  ³ Data ³ 06/11/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao do campo E5_RATEIO                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³Fa100ValRat									 							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA100            										 			  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa100ValRat() AS LOGICAL

Local lRet AS LOGICAL
LOCAL cPadrao AS CHARACTER

    lRet := .T. // Retorno Padrão

    IF (M->E5_RATEIO = "S") 
        cPadrao := IF(cRecPag = "P","516","517")
        
        IF VerPadrao(cPadrao)
            lRet := pertence("SN").And.If(M->E5_RATEIO="S".And.GetMv("MV_MCONTAB")="CTB",(F050EscRat(If(cRecPag="P","516","517"),"FINA100",cLote),.T.),.T.)
        ELSE
            IF ISBLIND()
                Help(,,'HELP',STR0157)  //"Não é possível incluir o rateio contábil. O sistema não localizou o respectivo Lançamento Padrão (516/517)"
            ELSE
                MsgInfo(STR0157,STR0009)    // ###"Não é possível incluir o rateio contábil. O sistema não localizou o respectivo Lançamento Padrão (516/517)" ###"Movimentação Bancária"
            ENDIF
            M->E5_RATEIO := 'N'
        ENDIF
    ENDIF

RETURN lRet



/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³fMarkAll	 ³ Autor ³ Mauricio Pequim Jr   ³ Data ³ 03/03/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Inverter marcacao dos registros da ListBox	                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³fMarkAll(aTit)								 							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array Utilizado na Listbox								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA100            										 			  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fMarkAll(aTit)

Local nI := 0

If Len(aTit) > 0
	For nI := 1 to Len(aTit)
		If aTit[nI][11]
			aTit[nI][11] := .F.
		Else
			aTit[nI][11] := .T.
		EndIf
	Next
EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Ana Paula N. Silva     ³ Data ³22/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados     ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef(lF100Auto)
Local aRotina:= {}
Local aUserButton := {}

Default lF100Auto := .F.

//Monta botoes especifico no ExecAuto, pois mais de uma rotina esta com NOPC igual
If !lF100Auto
	aRotina :=  { 	{ OemToAnsi(STR0001),"AxPesqui" , 0 , 1},;  // "Localizar"
					{ OemToAnsi(STR0064),"AxVisual('SE5',SE5->(RecNo()),2,,,,,aButtons)" , 0 , 2},;  // "Visualizar"
					{ OemToAnsi(STR0002),"fA100Pag" , 0 , 3},;  // "Pagar"
					{ OemToAnsi(STR0003),"fA100Rec" , 0 , 3},;  // "Receber"
					{ OemToAnsi(STR0004),"fA100Can" , 0 , 5,53},;  // "Excluir"
					{ OemToAnsi(STR0056),"fA100Can" , 0 , 6,53},;  // "Cancelar"
					{ OemToAnsi(STR0005),"fA100Tran", 0 , 3},;  //"Transf"
					{ OemToAnsi(STR0006),"fA100Est" , 1 , 5},;  // "Est.trnsf"
					{ OemToAnsi(STR0007),"fA100Clas", 0 , 5},;  // "Classif"
					{ OemToAnsi(STR0141),"CTBC662", 0 , 7},;  // "Tracker Contábil"
					{ OemToAnsi(STR0038),"F100Legenda", 0 , 6, ,.F.} } //"Legenda"
Else
	aRotina :=  { 	{ OemToAnsi(STR0001),"AxPesqui" , 0 , 1},;  // "Localizar"
					{ OemToAnsi(STR0064),"AxVisual('SE5',SE5->(RecNo()),2,,,,,aButtons)" , 0 , 2},;  // "Visualizar"
					{ OemToAnsi(STR0002),"fA100Pag" , 0 , IIf(nAutoOpc == 3,3,2)},;  // "Pagar"
					{ OemToAnsi(STR0003),"fA100Rec" , 0 , IIf(nAutoOpc == 4,3,2)},;  // "Receber"
					{ OemToAnsi(STR0004),"fA100Can" , 0 , IIf(nAutoOpc == 5,5,2)},;  // "Excluir"
					{ OemToAnsi(STR0056),"fA100Can" , 0 , IIf(nAutoOpc == 6,6,2),53},;  // "Cancelar"
					{ OemToAnsi(STR0005),"fA100Tran", 0 , IIf(nAutoOpc == 7,3,2)},;  //"Transf"
					{ OemToAnsi(STR0006),"fA100Est" , 1 , IIf(nAutoOpc == 8,5,2)},;  // "Est.trnsf"
					{ OemToAnsi(STR0007),"fA100Clas", 0 , IIf(nAutoOpc == 9,5,2)},;  // "Classif"
					{ OemToAnsi(STR0141),"CTBC662", 0 , 9},;  // "Tracker Contábil"
					{ OemToAnsi(STR0038),"F100Legenda", 0 , IIf(nAutoOpc == 10,6,2), ,.F.} } //"Legenda"
EndIf

If CtbInUse()
	Aadd(aRotina, { STR0054,"FA100Rateio", 0 , 1}) //"Vis R&ateio"
Endif

//Adiciona botoes do usuario na EnchoiceBar
If ExistBlock("FA100ROT")
	aUserButton := ExecBlock( "FA100ROT",.F.,.F.,{aRotina})
	If ValType(aUserButton) == "A" .And. Len(aUserButton) > Len(aRotina)
		aRotina := aClone(aUserButton)
	EndIf
EndIf

Return(aRotina)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 | F100VlPe	 ³ Autor ³Ana Paula             ³ Data ³ 26/06/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Pe para bloquear a inclusao de movimentos                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³  												 							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³cTipo 												  						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA100            										 			  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F100VlPe(cTipo)
Local lRet:=.T.
If cTipo=='P' .And. ExistBlock("FA100OKP")
   lRet:= ExecBlock("FA100OKP",.F.,.F.)
Endif

IF cTipo=='R' .And. ExistBlock("FA100OKR")
   lRet:= ExecBlock("FA100OKR",.F.,.F.)
Endif

Return(lRet)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinA100T   ³ Autor ³ Marcelo Celi Marques ³ Data ³ 04.04.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada semi-automatica utilizado pelo gestor financeiro   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA100T(aParam)

	ReCreateBrow("SE5",FinWindow)
	cRotinaExec := "FINA100"
	FinA100(aParam[1])
	ReCreateBrow("SE5",FinWindow)

	dbSelectArea("SE5")

	INCLUI := .F.
	ALTERA := .F.

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³ Fun‡„o	  ³ IsCxFin  ³ Autor ³ Mauricio Pequim Jr    ³Data  ³ 22/09/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Descri‡„o ³ Verifica se o Banco em questão é um caixa geral Financeiro ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Sintaxe   ³ IsCxFin(cBanco,cAgencia,cConta)									   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function IsCxFin(cBcoOri,cAgeOri,cCtaOri)

Local aCaixaFin	:= xCxFina() // Caixa Geral do Financeiro (MV_CXFIN)
Local nTamBco		:= TamSx3("E5_BANCO")[1]
Local nTamAge		:= TamSx3("E5_AGENCIA")[1]
Local nTamCta		:= TamSx3("E5_CONTA")[1]

Local lRet := .F.

If PADR(cBcoOri,nTamBco) == PADR(aCaixaFin[1],nTamBco) .and. ;
	PADR(cAgeOri,nTamAge) == PADR(aCaixaFin[2],nTamAge) .and. ;
	PADR(cCtaOri,nTamCta) == PADR(aCaixaFin[3],nTamCta)
	lRet := .T.
Endif

Return lRet



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FA100ProcTºAutor  ³Clóvis Magenta      º Data ³  11/02/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função que irá verificar se o registro da SE5 ja foi estor-º±±
±±º          ³ nado. Caso ja tenha sido, nao podera ser estornado denovo  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FA100ProcT(cProctra)
Local lEstornado 	:= .F.
Local	aArea			:= GetArea()
Local nOrdPTrans := OrdProcTransf()

DEFAULT cProctra := ""

dbselectArea("SE5")
dbSetOrder(nOrdPTrans) //E5_FILIAL+E5_PROCTRA
dbSeek(xFilial("SE5")+cProctra)
While !SE5->(Eof()) .and. SE5->(E5_FILIAL+E5_PROCTRA) == xFilial("SE5")+cProctra
	If E5_TIPODOC = "TE"
		lEstornado := .T.
		EXIT
	Endif
	dbSkip()
EndDo

RestArea(aArea)

Return lEstornado

Static Function lRetCkPG(n,cDebInm,cBanco,nPagar)
Local lRetCx:=.T.
If cPaisLoc$"PER|DOM"
   If n==3
      If cBanco $ (Left(GetMv("MV_CXFIN"),TamSX3("A6_COD")[1])+"/"+GetMv("MV_CARTEIR"))  .or. IsCaixaLoja(cBanco)
         lRetCx:=.F.
      Endif
   Endif
Endif
Return(lRetCx)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±
±±³Fun‡…o	 ³ FA100V01 ³ Autor ³ Wagner Montenegro	³ Data ³ 11.05.11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±
±±³Descri‡…o ³ Verifica se valor de pagto é > que Limite p/ pgto em especie³±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±
±±³Retorno	 ³ Lógico       											               ³±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±
±±³Uso		 ³ Localização Rep. Dominicana                                 ³±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION FA100V01(nValorTran,cTipoTran)
Local lRet := .T.
If (Rtrim(cTipoTran)=="$" .OR. Rtrim(cTipoTran)=="R$") .AND. nValorTran >= nFinLmCH
	lRet := .F.
	Help(" ",1,"HELP",STR0078,STR0079,1,0)//"FA100 - LIMITE ITF","Operação disponivel apenas com Cheque ou Transferência Bancária."
Endif
Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100Tipo ³Autor  ³ Jose Lucas  		 ³ Data ³  30/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validar o tipo da tabela de Modo de Pagos - FJS.			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ ExpL := fA100Tipo()   				                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ 														      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100Tipo()
Local aSavArea  := GetArea()
Local cTipo	    := &(ReadVar())
Local lRet      := .T.
Local cCarteira := IIf(lReceber,"1","2") + "|3"
Local lUsaCmc7	:= SuperGetMv("MV_CMC7FIN") == "S"
Local aCheque	:= {}

FJS->(dbSetOrder(1))
If ! FJS->(dbSeek(xFilial("FJS")+cTipo))
 	Help(" ",1,"FA100MODO",,STR0104+CRLF,1,0)
  	lRet := .F.
Elseif FJS->FJS_BLOQ == "1"
  	Help(" ",1,"FA100MODINV",,STR0105+CRLF,1,0)
   	lRet := .F.
ElseIf !(FJS->FJS_CARTE $ cCarteira)
	 MsgAlert(STR0121,STR0032)  //"Modo de pagamento não pode ser utilizado para esta carteira""###"Atención"
	 lRet := .F.
ElseIf !(AllTrim(FJS->FJS_RCOP) == "2")
	If FunName() == "FINA472"
		MsgAlert(STR0127,STR0126)		//"Para movimentos gerados pela conciliação bancária, o modo de pagamento deve gerar movimento bancário."
		lRet := .F.
	Endif
Endif

If lRet .and. lUsaCmc7 .and. lReceber .and. FJS->FJS_TIPOIN $ "CH "
	aCheque := FinCmc7Tc()
	If Len(aCheque) > 0
		//Verifica e cadastra as entidades bancárias se for ao caso
		//Fa100EntBc(cBanco,cAgencia,cCodPost,cDVCta)
		FINEntBc(aCheque[1],aCheque[2],aCheque[3])
		M->E5_BCOCHQ 	:=	aCheque[1]	//Banco
		M->E5_AGECHQ 	:= 	aCheque[2]	//Agencia
		M->E5_CTACHQ	:= 	aCheque[5]	//Conta
		M->E5_POSTAL	:=	aCheque[3]	//Codigo Postal
		M->E5_NUMCHEQ	:= 	aCheque[4]	//Cheque

		lRefresh := .T.

	Endif
EndIf

RestArea(aSavArea)

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100Terc()     ºAutor  ³ Jose Lucas  º Data ³  05/09/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validar se documento é Próprio ou de Terceiros.            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ ExpL := fA100Terc()   				                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ 														      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100Terc()
Local aSavArea  := GetArea()
Local cTipo     := M->E5_TIPO
Local cTerceiro := &(ReadVar())
Local lRet      := .T.
Local lValida  	:= .T.

If ! cTerceiro $ "12"
	Help(" ",1,"FA100MODINV",,STR0105+CRLF,1,0)
	lRet := .F.
EndIf
If lRet
	FJS->(dbSetOrder(1))
	FJS->(dbSeek(xFilial("FJS")+cTipo))

 	//Verifica a Origem - Mov. Pagar ou Receber - para validar o Modo de Pago
 	If IsInCallStack("fA100Rec")
 		lValida := AllTrim(FJS->FJS_CARTE) $ "13" .And. AllTrim(FJS->FJS_TERCEI) $ "13"
 	ElseIf IsInCallStack("fA100Pag")
  		lValida := AllTrim(FJS->FJS_CARTE) $ "23" .And. AllTrim(FJS->FJS_TERCEI) $ "23"
 	EndIf

 	//Verificar bloqueio e se tipo pode ser usado na baixa da Ordem de Pago.
	If !lValida .And. cTerceiro == "1"
		Help(" ",1,"FA100MODTER",,STR0085+CRLF,1,0)
		lRet := .F.
	EndIf
EndIf
RestArea(aSavArea)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100Talao()    ºAutor  ³ Jose Lucas  º Data ³  05/09/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validar a digitação do número do Talonário quando CH chequeº±±
±±           ³ for próprio.                                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ ExpL := fA100Talao()  				                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ 														      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100Talao()
Local aSavArea  := GetArea()
Local cBanco    := M->E5_BANCO
Local cAgencia  := M->E5_AGENCIA
Local cConta    := M->E5_CONTA
Local cNumTalao := &(ReadVar())
Local lRet      := .T.
Local cQrySEF   := ""

FJS->(dbSetOrder(1))
FJS->(dbSeek(xFilial("FJS")+M->E5_TIPO))

If FJS->FJS_TIPOIN == "CH"
	FRE->(dbSetOrder(3))
	If ! FRE->(dbSeek(xFilial("FRE")+cBanco+cAgencia+cConta+cNumTalao))
		//Verificar a existencia do numero do Talão.
		Help(" ",1,"FA100CHEQUERA",,STR0087+CRLF,1,0)
		lRet := .F.
	EndIf
	If lRet
		If Select("QRYSEF")>0
			QRYSEF->(DbCloseArea())
		EndIf

		cQrySEF	:= "SELECT "
		cQrySEF += " EF_TALAO "
		cQrySEF	+= "FROM "
		cQrySEF += RetSqlName("SEF") + " SEF "
		cQrySEF += "WHERE "
		cQrySEF += " EF_FILIAL = '" + xFilial("SEF") + "' "
		cQrySEF += " AND EF_CART = 'P' "
		cQrySEF	+= " AND EF_BANCO = '" + cBanco + "' "
		cQrySEF += " AND EF_AGENCIA = '" + cAgencia + "' "
		cQrySEF += " AND EF_CONTA = '" + cConta + "' "
		cQrySEF += " AND EF_TALAO = '" + cNumTalao + "' "
		cQrySEF += " AND EF_STATUS = '00' AND EF_LIBER = 'S' AND EF_CART = 'P' "
		cQrySEF	+= " AND D_E_L_E_T_ = '' "
		cQrySEF += "ORDER BY EF_TALAO, EF_PREFIXO, EF_NUM "

		cQrySEF	:= ChangeQuery(cQrySEF)

		dbUseArea(.T., "TOPCONN", TCGenQry(,,cQrySEF), "QRYSEF", .T., .T.)

	   	If  QRYSEF->(Eof())
			Help(" ",1,"FA100CHQPAG",,STR0120+CRLF,1,0) //"Não foi encontrado cheque disponível para este talão"
  			lRet := .F.
	 	EndIf
	 	QRYSEF->(dbCloseArea())
	EndIf
EndIf

RestArea(aSavArea)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100CliFor()    ºAutor  ³ Jose Lucas  º Data ³  05/09/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validar o código do Cliente/Fornecedor.					  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ ExpL := fA100CliFor()  				                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ 														      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100CliFor()
Local aSavArea  := GetArea()
Local cCliFor   := &(ReadVar())
Local cLoja     := ''
Local lRet      := .T.

If Type('M->E5_LOJA') == 'U'
	cLoja := ALLTRIM(CriaVar('E5_LOJA'))
Else
	cLoja := M->E5_LOJA
EndIf

cLoja := IIf(Empty(cLoja), '', cLoja)

If lPagar
	If !Empty(cCliFor+cLoja)
		SA2->(dbSetOrder(1))
		If ! SA2->(dbSeek(xFilial("SA2")+cCliFor+cLoja))
			Help(" ",1,"FA100FORN",,STR0088+CRLF,1,0)
			lRet := .F.
		EndIf
		cLoja := SA2->A2_LOJA
	Endif
ElseIf lReceber
	If !Empty(cCliFor+cLoja)
		SA1->(dbSetOrder(1))
		If ! SA1->(dbSeek(xFilial("SA1")+cCliFor+cLoja))
			Help(" ",1,"FA100CLIE",,STR0089+CRLF,1,0)
			lRet := .F.
		EndIf
		cLoja := SA1->A1_LOJA
	Endif
EndIf

If lRet
	M->E5_LOJA := cLoja
	nEndereco := aScan(aGets,{|x| ALLTRIM(Subs(x,9,10)) == "E5_LOJA"})
	If nEndereco > 0
		aTELA[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := cLoja
	EndIf
	lRefresh := .T.
EndIf
RestArea(aSavArea)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100GetCheques ºAutor  ³ Jose Lucas  º Data ³  05/09/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Disponibilizar interface para disponibilizar os cheques de ³±±
±±           ³ Terceiros.                                                 ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ ExpL := fA100GetCheques()			                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ 														      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100GetCheques() AS ARRAY

Local lTerceiro As Logical
Local oDlg		As Object
Local oPanel 	As Object
Local aCheques	As Array
Local aSize     As Array
Local nOpc	    As Numeric
Local cMarca    As Character
Local lInverte 	As Logical
Local nValorSE5 As Numeric
Local nTotalChq As Numeric
Local nSaldo    As Numeric
Local bUpdate	As Block
Local bEndWin	As Block
Local nTcSql    As Numeric

lTerceiro	:= .T.
aCheques	:= {}
aSize		:= {}
nOpc	    := 0
cMarca		:= GetMark()
lInverte	:= .F.
nValorSE5	:= SE5->E5_VALOR
nTotalChq	:= 0.00
nSaldo		:= SE5->E5_VALOR
bUpdate		:= {|| If(fA100MrkOk(),(nOpc:=1,oDlg:End()),.F.)}
bEndWin		:= {|| oDlg:End()}

PRIVATE nValorSel := 0.00
PRIVATE oValorSE5 := 0.00
PRIVATE oTotalChq := 0.00
PRIVATE oSaldo    := 0.00

If Type("nValor")=="U"
	nValor	:=	0
EndIf

If ExistBlock("A85CHPDT")
   	aCheques	:=	ExecBlock("A85CHPDT",.F.,.F.)
Else
	
	aStru := {}
	AADD(aStru,{"OK"	 	,"C",2,0})
	AADD(aStru,{"TIPO"	 	,"C",3,0})
	AADD(aStru,{"PREFIXO"	,"C",3,0})
	AADD(aStru,{"NUMCHEQUE"	,"C",TamSX3("EF_NUM")[1],0})
	AADD(aStru,{"PARCELA"	,"C",TamSX3("EF_PARCELA")[1],0})
	AADD(aStru,{"CLIENTE"	,"C",TamSX3("A1_COD")[1],0})
	AADD(aStru,{"LOJA"		,"C",TamSX3("A1_LOJA")[1],0})
	AADD(aStru,{"VALOR"		,"N",16,02})
	AADD(aStru,{"MOEDA"		,"N",02,0})
	AADD(aStru,{"EMISSAO"	,"D",08,0})
	AADD(aStru,{"VENCTO" 	,"D",08,0})
	AADD(aStru,{"VENCREA"	,"D",08,0})
	AADD(aStru,{"ENDOSSA"   ,"C",01,0})
	AADD(aStru,{"STATUS"	,"C",TamSX3("EF_STATUS")[1],0})
	AADD(aStru,{"RECNOSE1"	,"N",06,0})
	AADD(aStru,{"RECNOSEF"	,"N",06,0})

	If _oFINA1001 <> Nil
		//-- Limpa registros para nova execução
		nTcSql := TcSQLExec("DELETE FROM "+_oFINA1001:GetRealName())
		
		If nTcSql < 0 .Or. SELECT("TRB") <= 0
			//-- Se ocorrer algum problema refaz a temporaria
			_oFINA1001:Delete()
			_oFINA1001 := Nil
		Else
 			TRB->(DBGOTO(1))
		EndIf
	EndIf
	If _oFINA1001 == Nil
		_oFINA1001:= FWTemporaryTable():New( "TRB" )
		_oFINA1001:SetFields(aStru)
		_oFINA1001:AddIndex("1", {"VENCTO","TIPO","PREFIXO","NUMCHEQUE","PARCELA","CLIENTE","LOJA"})
		_oFINA1001:Create()
	EndIf

	Processa({|| fA100Cheques(,,cMarca,@nValorSE5,@nTotalChq,@nSaldo)}, OemToAnsi(STR0091))		//"Seleccionando cheques de terceros..."

	// Exibe Browse somente se existirem produtos a serem criados! //
	If TRB->(RecCount()) > 0
		TRB->(dbGoTop())

		aCpos := {	{"OK"    	, "", "  "	                  , ""},;   //"Ok"
					{"TIPO"		, "", fA100X3Tit("EF_TIPO")   , ""},;
					{"VALOR"	, "", fA100X3Tit("EF_VALOR")  , "@E 999,999,999.99"},;
					{"PREFIXO"  , "", fA100X3Tit("EF_PREFIXO"), ""},;
					{"NUMCHEQUE", "", fA100X3Tit("EF_NUM") 	  , ""},;
					{"PARCELA"  , "", fA100X3Tit("EF_PARCELA"), ""},;
					{"CLIENTE"	, "", fA100X3Tit("A1_COD") 	  , ""},;
					{"LOJA" 	, "", fA100X3Tit("A1_LOJA")	  , ""},;
					{"MOEDA"	, "", fA100X3Tit("E2_MOEDA")  , "@E 99"},;
					{"EMISSAO"	, "", fA100X3Tit("EF_DATA")	  , ""},;
					{"VENCTO"	, "", fA100X3Tit("EF_VENCTO") , ""},;
					{"VENCREA"  , "", fA100X3Tit("E1_VENCREA"), ""},;
					{"STATUS"	, "", fA100X3Tit("EF_STATUS") , ""},;
					{"RECNOSE1"	, "", "Reg.SE1" 			  , ""},;
					{"RECNOSEF" , "", "Reg.SEF"               , ""} }

       	lInverte := .F.

		aSize   := MsAdvSize()

		DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0092) From 9,0 To 30,106 OF oMainWnd 	//"Documentos de Terceros"

			oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,20,20,.T.,.T. )
			oPanel:Align := CONTROL_ALIGN_TOP

		    @ 5.8, 010 SAY OemToAnsi(STR0093)					PIXEL OF oPanel    		//"Valor del Movimiento"
		    @ 6.3, 095 SAY oValorSE5 VAR nValorSE5 	SIZE 60,08 	PIXEL OF oPanel PICTURE "@E 999,999,999.99"

		    @ 5.8, 155 SAY OemToAnsi(STR0094)					PIXEL OF oPanel			//"Total en Cheques"
		    @ 6.3, 235 SAY oTotalChq VAR nTotalChq 	SIZE 60,08 	PIXEL OF oPanel PICTURE "@E 999,999,999.99"

		    @ 5.8, 285 SAY OemToAnsi(STR0095)				   	PIXEL OF oPanel			//"Saldo"
		    @ 6.3, 345 SAY oSaldo	 VAR nSaldo	 	SIZE 60,08 	PIXEL OF oPanel PICTURE "@E 999,999,999.99"

			oMark := MsSelect():New("TRB","OK","",aCpos,@lInverte,@cMarca,{25,oDlg:nLeft,oDlg:nBottom,oDlg:nRight})

			oMark:bMark := {|| fA100Display(cMarca,lInverte,oDlg,@nValorSE5,@nTotalChq,@nSaldo)}
			oMark:bAval	:= {|| fA100bAval(cMarca,lInverte,oDlg,@nValorSE5,@nTotalChq,@nSaldo)}
			oMark:oBrowse:lhasMark := .t.
			oMark:oBrowse:lCanAllmark := .f.
			oMark:oBrowse:bAllMark := {|| fA100bAll(cMarca,lInverte,oDlg)}
			oMark:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT

		ACTIVATE MSDIALOG oDlg ON INIT 	EnchoiceBar(oDlg,bUpdate,bEndWin)

		If nOpc == 1
			//Adicionar os cheques ao browse de pagamentos.
			TRB->(dbGoTop())
			While TRB->(!EOf())
				If TRB->OK == cMarca
                   AADD(aCheques,{TRB->STATUS, TRB->TIPO, TRB->PREFIXO, TRB->NUMCHEQUE, TRB->PARCELA, TRB->CLIENTE, TRB->LOJA,;
								  TRB->VALOR, TRB->MOEDA, TRB->EMISSAO,	TRB->VENCTO, TRB->VENCREA, TRB->RECNOSEF, TRB->RECNOSE1})
				EndIf
				TRB->(dbSkip())
			End
		EndIf
	Else
		If lTerceiro
			Aviso(OemToAnsi(STR0096),OemToAnsi(STR0097),{"Ok"})  //"Aviso"###Não existem cheques de Terceiros..."
		EndIf
	Endif

EndIf
Return( aCheques )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100SetCheque  ºAutor  ³ Jose Lucas  º Data ³  05/09/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Retonar próximo numero do cheque correspondente a Chequera º±±
±±º          ³ informada e quando documento for próprio.                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ ExpA := fA100SetCheque()				                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ 														      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Retorno   ³ Array contendo dados do Cheque.   					      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100SetCheque(nValor)
Local aSavArea  := GetArea()
Local cBanco    := CriaVar("E5_BANCO")
Local cAgencia  := CriaVar("E5_AGENCIA")
Local cConta    := CriaVar("E5_CONTA")
Local cNumTalao := CriaVar("E5_TALAO")
Local cQrySEF   := ""
Local aCheques  := {}

DEFAULT nValor := 0.00

FJS->(dbSetOrder(1))
FJS->(dbSeek(xFilial("FJS")+SE5->E5_TIPO))

If ( FJS->FJS_TIPOIN == "CH")		//Verifique se documento é Cheque.
	//Definir variaveis...
	cBanco    := SE5->E5_BANCO
	cAgencia  := SE5->E5_AGENCIA
	cConta    := SE5->E5_CONTA
	cNumTalao := SE5->E5_TALAO

	If Select("QRYSEF")>0
		QRYSEF->(DbCloseArea())
	EndIf

	cQrySEF	:= "SELECT "
	cQrySEF += " EF_TALAO, "
	cQrySEF += " EF_PREFIXO, "
	cQrySEF += " EF_NUM, "
	cQrySEF += " EF_STATUS, "
	cQrySEF += " EF_LIBER, "
	cQrySEF += " R_E_C_N_O_ "
	cQrySEF	+= "FROM "
	cQrySEF += RetSqlName("SEF") + " SEF "
	cQrySEF += "WHERE "
	cQrySEF += " EF_FILIAL = '" + xFilial("SEF") + "' "
	cQrySEF += " AND EF_CART = 'P' "
	cQrySEF	+= " AND EF_BANCO = '" + cBanco + "' "
	cQrySEF += " AND EF_AGENCIA = '" + cAgencia + "' "
	cQrySEF += " AND EF_CONTA = '" + cConta + "' "
	cQrySEF += " AND EF_TALAO = '" + cNumTalao + "' "
	cQrySEF += " AND EF_STATUS = '00' AND EF_LIBER = 'S' AND EF_CART = 'P' "
	cQrySEF	+= " AND D_E_L_E_T_ = '' "
	cQrySEF += "ORDER BY EF_TALAO, EF_PREFIXO, EF_NUM "

	cQrySEF	:= ChangeQuery(cQrySEF)

	dbUseArea(.T., "TOPCONN", TCGenQry(,,cQrySEF), "QRYSEF", .T., .T.)

	If ! QRYSEF->(Eof())
		QRYSEF->(dbGoTop())
		SEF->(dbGoTo(QRYSEF->R_E_C_N_O_))
		If SEF->(DbRlock(QRYSEF->R_E_C_N_O_))
			If !Empty(SE5->E5_VENCTO)
				AADD(aCheques,{QRYSEF->R_E_C_N_O_, QRYSEF->EF_NUM, SE5->E5_VENCTO, If(nValor > 0, nValor,SE5->E5_VALOR)} )
			Else
				AADD(aCheques,{QRYSEF->R_E_C_N_O_, QRYSEF->EF_NUM, SE5->E5_DATA, If(nValor > 0, nValor,SE5->E5_VALOR)} )
			EndIf
		EndIf
	EndIf
   	If Len(aCheques) == 0
		Help(" ",1,"FA100CHQPAG",,STR0098+CRLF,1,0)
  		SEF->(MsUnlock())
 	EndIf
 	QRYSEF->(dbCloseArea())
EndIf
RestArea(aSavArea)
Return aCheques

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fA100Cheques ³ Autor ³ Jose Lucas       ³ Data ³ 08/08/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Preencher matriz dos cheques de terceiros disponiveis para ³±±
±±³          ³ posterior seleção na função MsSelect().                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpA := fA100Cheques()			                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA := Array com cheques de terceiros disponiveis.	      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fA100Cheques(cCliente,cLoja,cMarca,nValorSE5,nTotalChq,nSaldo)
Local aSavArea   := GetArea()
Local cQuery     := ""
Local cTipo      := IIF(Type('MVCHEQUES')=='C',MVCHEQUES,MVCHEQUE)
Local aTamSaldo  := TamSX3("E1_SALDO")
Local aTamMoeda  := TamSX3("E1_MOEDA")
Local cClientDe  := Replicate(" ",TamSX3("A1_COD")[1])
Local cClientAte := Replicate("Z",TamSX3("A1_COD")[1])
Local cLojaDe    := Replicate(" ",TamSX3("A1_LOJA")[1])
Local cLojaAte   := Replicate("Z",TamSX3("A1_LOJA")[1])
Local lUsaCmc7	 := SuperGetMv("MV_CMC7FIN") == "S"
Local aCheque	 := {}
Local lRet		 := .T.

DEFAULT cCliente := ""
DEFAULT cLoja    := ""
DEFAULT cMarca	 := ""
DEFAULT nValorSE5:= 0
DEFAULT nTotalChq:= 0
DEFAULT nSaldo   := 0


If lUsaCmc7 .and. cPaisLoc == "ARG" .and. MsgYesNo(STR0131,STR0132)	//"Deseja utilizar a leitora de cheques?"###"Leitura de cheques"

	While .T.
		aCheque := FinCmc7Tc(.F.)

		If Len(aCheque) > 0
			//Localizo o CHEQUE no SEF
			SEF->(dbSetorder(6))//EF_FILIAL+EF_CART+EF_BANCO+EF_AGENCIA+EF_CONTA+EF_NUM+EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO
			If SEF->(MsSeek(xFilial("SEF")+"R"+aCheque[1]+aCheque[2]+aCheque[5]+aCheque[4])) .and. SEF->EF_ENDOSSA == "1"
				//Localizo o TITULO no SE1
				SE1->(DbSetOrder(2))
				If SE1->(MsSeek(xFilial("SE1")+SEF->(EF_CLIENTE+EF_LOJACLI+EF_PREFIXO+EF_NUM+EF_PARCELA+EF_TIPO)))
					//Valido se o titulo pode ser selecionado
					If SE1->E1_SALDO > 0 .AND. SE1->E1_SITUACA $ " /1/0" .AND. Empty(SE1->E1_NUMBOR) .AND. !(SE1->E1_TIPO $ "NCC/NDC/NCI/NCE")

						//Tento travar o registro
						If SE1->(MsRlock())

							If !(TRB->(MsSeek(DTOS(SEF->EF_VENCTO)+SEF->(EF_TIPO+EF_PREFIXO+EF_NUM+EF_PARCELA+EF_CLIENTE+EF_LOJA))))

								If SEF->EF_VENCTO > dDataBase 	//Data de vencimento do cheque de Terceiro é maior que a database
							   		Help(" ",1,"FA100VENCTO",,STR0099+CRLF,1,0) //"Fecha de vencimiento del cheque de Tercero mayor que 30 dias."
								    lRet := .F.
								EndIf
								If lRet
									If (SEF->EF_VALOR + nTotalChq) > nValorSE5
										Help(" ",1,"FA100MAIOR",,STR0100+CRLF,1,0)	//"Valor del cheque es mayor que el título de movimiento bancário."
								    	lRet := .F.
									EndIf
								EndIf

                        		If lRet

									RecLock("TRB",.T.)
									TRB->OK		    := cMarca
									TRB->STATUS     := SEF->EF_STATUS
									TRB->TIPO       := SEF->EF_TIPO
									TRB->PREFIXO	:= SEF->EF_PREFIXO
									TRB->NUMCHEQUE	:= SEF->EF_NUM
									TRB->PARCELA	:= SEF->EF_PARCELA
									TRB->CLIENTE    := SEF->EF_CLIENTE
									TRB->LOJA       := SEF->EF_LOJACLI
									TRB->VALOR		:= SEF->EF_VALOR
									TRB->MOEDA		:= SE1->E1_MOEDA
									TRB->EMISSAO	:= SEF->EF_DATA
									TRB->VENCTO		:= SEF->EF_VENCTO
									TRB->VENCREA	:= SEF->EF_VENCTO + 30
									TRB->RECNOSE1	:= SE1->(RECNO())
									TRB->RECNOSEF	:= SEF->(RECNO())
									MsUnLock()

									nTotalChq += TRB->VALOR
									nSaldo := nValorSE5 - nTotalChq
								Endif
							Else
								Help(" ",1,"A100LCUSADO",,STR0133+CRLF+STR0134,1,0) //"Este cheque já foi utilizado anteriormente neste processo."###"Por favor, verifique a situação do cheque"
							Endif
						Else
							Help(" ",1,"A100LCUSD",,STR0135,1,0)		//"Este cheque não pode ser utilizado pois está sendo utilizado em outro terminal"
						Endif
					Else
						Help(" ",1,"A100LCSIT",,STR0136+CRLF+STR0134,1,0)		//"Este cheque não pode ser utilizado."###"Por favor, verifique a situação do cheque"
					Endif
				Else
					Help(" ",1,"A100LCTIT",,STR0136+CRLF+STR0134,1,0)			//"Este cheque não pode ser utilizado."###"Por favor, verifique a situação do cheque"
				Endif
			Else
				Help(" ",1,"A100LCCHQ",,STR0137+CRLF+STR0134,1,0)		//"O cheque não foi encontrado ou não recebeu endosso."###"Por favor, verifique a situação do cheque"
			Endif
		Endif

		If !MsgYesNo(STR0130,STR0132)		//"Deseja realizar nova leitura de cheque?"###"Leitura de cheques"
			Exit
		Endif
	EndDo

Else

	cTipo := StrTran(cTipo,"|","','")

	If Select("QRYCHQ") > 0
		QRYCHQ->(dbCloseArea())
	EndIf
	cQuery := ""
	cQuery += "SELECT DISTINCT "
	cQuery += "EF_STATUS STATUS, "
	cQuery += "EF_PREFIXO PREFIXO, "
	cQuery += "EF_NUM NUMCHEQUE, "
	cQuery += "EF_PARCELA PARCELA, "
	cQuery += "EF_CLIENTE CLIENTE, "
	cQuery += "EF_LOJACLI LOJA, "
	cQuery += "EF_VALOR VALOR, "
	cQuery += "E1_MOEDA MOEDA, "
	cQuery += "EF_DATA EMISSAO, "
	cQuery += "EF_VENCTO VENCTO, "
	cQuery += "EF_TIPO TIPO, "
	cQuery += "EF_VENCTO VENCREA, "
	cQuery += "SE1.R_E_C_N_O_ RECNOSE1, "
	cQuery += "SEF.R_E_C_N_O_ RECNOSEF "
	cQuery += " FROM "
	cQuery += RetSqlName("SE1") + " SE1 ,"
	cQuery += RetSqlName("SEF") + " SEF "
	cQuery += " WHERE "
	cQuery += " SE1.E1_FILIAL = '"+xFilial("SE1")+"' "
	cQuery += " AND SEF.EF_FILIAL = '"+xFilial("SEF")+"' "
	cQuery += " AND SE1.E1_PREFIXO = SEF.EF_PREFIXO "
	cQuery += " AND SE1.E1_NUM = SEF.EF_NUM "
	cQuery += " AND SE1.E1_PARCELA = SEF.EF_PARCELA "
	cQuery += " AND SE1.E1_TIPO = SEF.EF_TIPO "
	cQuery += " AND SE1.E1_CLIENTE = SEF.EF_CLIENTE "
	cQuery += " AND SE1.E1_LOJA = SEF.EF_LOJACLI "
	If Empty(cCliente) .and. Empty(cLoja)
		cQuery += " AND SE1.E1_CLIENTE BETWEEN '"+cClientDe+"' AND '"+cClientAte+"' "
		cQuery += " AND SE1.E1_LOJA BETWEEN '"+cLojaDe+"' AND '"+cLojaAte+"' "
	Else
		cQuery += " AND SE1.E1_CLIENTE = '"+cCliente+"' "
		cQuery += " AND SE1.E1_LOJA = '"+cLoja+"' "
	EndIf
	cQuery += " AND SE1.E1_TIPO IN ('"+cTipo+"')"
	cQuery += " AND SE1.E1_SITUACA IN (' ','0','1') "
	cQuery += " AND SE1.E1_SALDO > 0 "
	If cPaisLoc <> "BRA"
		cQuery += " AND SEF.EF_ENDOSSA = '1'"
	Endif
	cQuery += " AND SEF.EF_CART = 'R' "
	cQuery += " AND SE1.D_E_L_E_T_ = ' ' "
	cQuery += " AND SEF.D_E_L_E_T_ = ' ' "
	cQuery += " ORDER BY VENCTO, PREFIXO, NUMCHEQUE, PARCELA, CLIENTE, LOJA "

	cQuery := ChangeQuery(cQuery)

	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"QRYCHQ",.T.,.F.)

	TcSetField("QRYCHQ","EMISSAO"  	,"D",08,0)
	TcSetField("QRYCHQ","VENCTO"   	,"D",08,0)
	TcSetField("QRYCHQ","VENCREA"  	,"D",08,0)
	TcSetField("QRYCHQ","MOEDA" 	,"N",aTamMoeda[1],aTamMoeda[2])
	TcSetField("QRYCHQ","VALOR" 	,"N",aTamSaldo[1],aTamSaldo[2])
	TcSetField("QRYCHQ","RECNOSE1" 	,"N",06,0)
	TcSetField("QRYCHQ","RECNOSEF"  ,"N",06,0)

	QRYCHQ->(dbGoTop())

	While QRYCHQ->(!Eof())
		RecLock("TRB",.T.)
		TRB->STATUS     := QRYCHQ->STATUS
		TRB->TIPO       := QRYCHQ->TIPO
		TRB->PREFIXO	:= QRYCHQ->PREFIXO
		TRB->NUMCHEQUE	:= QRYCHQ->NUMCHEQUE
		TRB->PARCELA	:= QRYCHQ->PARCELA
		TRB->CLIENTE    := QRYCHQ->CLIENTE
		TRB->LOJA       := QRYCHQ->LOJA
		TRB->VALOR		:= QRYCHQ->VALOR
		TRB->MOEDA		:= QRYCHQ->MOEDA
		TRB->EMISSAO	:= QRYCHQ->EMISSAO
		TRB->VENCTO		:= QRYCHQ->VENCTO
		TRB->VENCREA	:= QRYCHQ->VENCTO + 30
		TRB->RECNOSE1	:= QRYCHQ->RECNOSE1
		TRB->RECNOSEF	:= QRYCHQ->RECNOSEF
		MsUnLock()
		QRYCHQ->(dbSkip())
	End
Endif
RestArea(aSavArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100x3Tit ºAutor  ³ Jose Lucas       º Data ³  05/09/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retornar o título definido no SX3 para o campo informado.  º±±
±±º          ³ 					                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ ExpC1 := fA100x3Tit(ExpC2)			                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ ExpC2 := Nome do Campo, exemplo: EF_NUM				      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA850                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fA100x3Tit(cCampo)
Local aSavArea   := GetArea()
Local cTitCampo  := ""


dbSelectArea("SX3")
dbSetOrder(2)
If dbSeek( cCampo )   
	cTitCampo := X3Titulo()
EndIf

RestArea(aSavArea)
Return cTitCampo

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100bAll    ºAutor  ³ Jose Lucas     º Data ³  17/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Marcar e desmarcar todos os cheques do objeto Markbrow.    º±±
±±º          ³ 					                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ fA100bAll(cMarca,lInverte,oDlg)		                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ 														      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA850                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100bAll(cMarca,lInverte,oDlg)
Local nReg := RecNo()
dbGoTop()
dbEval({|| TRB->OK := If(Empty(TRB->OK) .and. TRB->VENCREA <= ( dDataBase + 30 ), "x", " ")})
dbGoto(nReg)
oMark:oBrowse:Refresh()
oDlg:Refresh()
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100Display ºAutor  ³ Jose Lucas     º Data ³  17/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Marcar e desmarcar todos os cheques do objeto Markbrow.    º±±
±±º          ³ 					                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ fA100Display(cMarca,lInverte,oDlg)	                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ 														      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fA100Display(cMarca,lInverte,oDlg,nValorSE5,nTotalChq,nSaldo)
Local lRet := .T.
If IsMark(TRB->OK,cMarca,lInverte)
	nTotalChq -= TRB->VALOR
Else
	nTotalChq += TRB->VALOR
	If nTotalChq > SE5->E5_VALOR
		nTotalChq -= TRB->VALOR
     	lRet := .F.
	EndIf
EndIf
If nTotalChq <> 0
	nSaldo := nValorSE5 - nTotalChq
	oTotalChq:Refresh()
	oValorSE5:Refresh()
	oSaldo:Refresh()
EndIf
oMark:oBrowse:Refresh()
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100bAval   ºAutor  ³ Jose Lucas     º Data ³  17/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Avaliar e processar os registris marcados.                 º±±
±±º          ³ 					                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ ExpL1 := fA100bAval(ExpC1,ExpL2)		                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ ExpC1 = cMarca										      ³±±
±±³          ³ ExpC1 = lInverte										      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fA100bAval(cMarca,lInverte,oDlg,nValorSE5,nTotalChq,nSaldo)
Local lRet := .T.

If TRB->OK == cMarca
	nTotalChq -= TRB->VALOR
   	RecLock("TRB",.F.)
   	TRB->OK := "  "
   	MsUnLock()
Else
	nTotalChq += TRB->VALOR
	If TRB->VENCREA > ( dDataBase + 30 ) 	//Data de vencimento do cheque de Terceiro é de 30 dias
		nTotalChq -= TRB->VALOR
   		Help(" ",1,"FA100VENCTO",,STR0099+CRLF,1,0)
	    lRet := .F.
	EndIf
	If lRet
		If nTotalChq > nValorSE5
        	nTotalChq -= TRB->VALOR
			Help(" ",1,"FA100MAIOR",,STR0100+CRLF,1,0)
	    	lRet := .F.
		EndIf
	EndIf
	If lRet
   		RecLock("TRB",.F.)
   		TRB->OK := cMarca
   		MsUnLock()
   	Else
   	   	RecLock("TRB",.F.)
	   	TRB->OK := "  "
   		MsUnLock()
   	EndIf
EndIf
nSaldo := nValorSE5 - nTotalChq

If oDlg != NIL
	oTotalChq:Refresh()
	oValorSE5:Refresh()
	oSaldo:Refresh()
	oMark:oBrowse:Refresh()
Endif
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100MrkOk   ºAutor  ³ Jose Lucas     º Data ³  13/09/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validar e permitr o fechamento do Dialogo.                 º±±
±±º          ³ 					                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ ExpL1 := fA100MrkOk()				                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ 														      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100MrkOk()
Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100DelOk   ºAutor  ³ Jose Lucas     º Data ³  17/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Avaliar a movimentação quando os pagamentos e recebimentos º±±
±±º          ³ estejam vinculados diretamente a Cheques.                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ ExpL1 := fA100DelOk()				                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ ExpC1 = cMarca										      ³±±
±±³          ³ ExpC1 = lInverte										      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100DelOk()
Local aSavArea    := GetArea()
Local aSavAreaSE5 := SE5->(GetArea())
Local cDocumento  := SE5->E5_DOCUMEN
Local lRet        := .T.
Local nLenCheque  := TamSX3("EF_NUM")[1]

FJS->(dbSetOrder(1))
FJS->(dbSeek(xFilial("FJS")+SE5->E5_TIPO))

dbSelectArea("SEF")
SEF->(dbSetOrder(1))

If SE5->E5_RECPAG == "P"
		//Tratamento para Cheque Próprio
	If FJS->FJS_TIPOIN == "CH" .and. AllTrim(FJS->FJS_TERCEI) $ "1234"
            // Validar a existencia de cheques de Terceiros vinculados ao pagamento.
		If fA100DelCHQ(cDocumento,"VALIDAR")
				// Validar a existencia de cheque próprio da diferença qdo este existir...
				//Tratamento para Cheque Próprio
			SEF->(dbSetOrder(1))
			If SEF->(dbSeek(xFilial("SEF")+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA+PADR(SE5->E5_NUMCHEQ,nLenCheque)))
				If SEF->EF_IMPRESS == "S" .and. SEF->EF_STATUS <> "02"	//Cheque não emitido e vinculado ao pagamento.
					Help(" ",1,"FA100CHQIMPRES",,STR0106+CRLF+STR0113+CRLF,1,0)
					lRet := .F.
				EndIf
			EndIf
		EndIf
	EndIf
ElseIf SE5->E5_RECPAG == "R"

	If FJS->FJS_TIPOIN == "CH"
			//Posicionar no Cheque à partir do numero do cheque registrado.
		SEF->(dbSetOrder(1))
		If SEF->(dbSeek(xFilial("SEF")+SE5->E5_BCOCHQ+SE5->E5_AGECHQ+SE5->E5_CTACHQ+PADR(SE5->E5_NUMCHEQ,nLenCheque)))
			If SEF->EF_STATUS <> "01"		//Status do cheque diferenre de carteira, deve ser excluido no controle de cheques.
				Help(" ",1,"CHQNOCART",,STR0111+CRLF+STR0113+CRLF,1,0)
				lRet := .F.
			EndIf
		EndIf
	EndIf

EndIf
SE5->(RestArea(aSavAreaSE5))
RestArea(aSavArea)
Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100GrvFRF   ºAutor  ³ Jose Lucas     º Data ³  13/09/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Gravar o histórico das movimentações do cheque na tabela   º±±
±±º          ³ FRF.                                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ fA100GrvFRF(cCodMotivo,cDescricao)	                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³ ExpC1 = cCodMotivo									      ³±±
±±³          ³ ExpC1 = cDescricao									      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fA100GrvFRF(cCarteira,cMotivo,cDescricao)
Local cSavArea := GetArea()
Local cSeqFRF := GetSx8Num("FRF","FRF_SEQ")

//Gravar o histórico para as alterações de status do cheque.
RecLock("FRF",.T.)
FRF->FRF_FILIAL	 := xFilial("FRF")
FRF->FRF_BANCO	 := SEF->EF_BANCO
FRF->FRF_AGENCIA := SEF->EF_AGENCIA
FRF->FRF_CONTA	 := SEF->EF_CONTA
FRF->FRF_NUM	 := SEF->EF_NUM
FRF->FRF_PREFIX	 := SEF->EF_PREFIXO
FRF->FRF_CART	 := cCarteira
FRF->FRF_DATPAG	 := SEF->EF_DATA
FRF->FRF_MOTIVO	 := cMotivo
If cCarteira == "P"
	FRF->FRF_FORNEC  := SEF->EF_FORNECE
Else
	FRF->FRF_CLIENT  := SEF->EF_CLIENTE
EndIf
FRF->FRF_LOJA	 := IIF(cCarteira == "P",SEF->EF_LOJA,SEF->EF_LOJACLI)
FRF->FRF_NUMDOC	 := SEF->EF_TITULO
FRF->FRF_DESCRI	 := cDescricao
FRF->FRF_SEQ	 := cSeqFRF
FRF->(MsUnLock())
ConfirmSX8()

RestArea(cSavArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100BcoChq   ºAutor  ³ Jose Lucas     º Data ³  13/09/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validar conteúdo do banco quando aRotina igual a Receber   º±±
±±º          ³ (FA100REC) e tipo do documento igual a Cheque.  		      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ fA100BcoChq()						                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³                                  					      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100BcoChq()

Local cBcoCheq  := &(ReadVar())
Local lRet      := .T.

//--- Chamado TFXRFZ
Local lFJN := .T.

FJS->(dbSetOrder(1))
FJS->(dbSeek(xFilial("FJS")+M->E5_TIPO))

If lReceber
	If FJS->FJS_TIPOIN == "CH " .and. Empty(cBcoCheq)
		Help(" ",1,"FA100BCOCHQ",,STR0101+CRLF+STR0108+CRLF,1,0)
		lRet := .F.
	EndIf

	//--- Requisito de Entidades Bancarias
	If lRet

		If ( cPaisLoc == "ARG" )

			If lFJN   // Se EXISTIR operacionalmente a SXB FJNCON ---------------

				//--- Se existir conteudo informado manualmente no campo E5_BCOCHQ
				If !Empty( cBcoCheq )

					If Empty( M->E5_AGECHQ ) .OR. Empty( M->E5_POSTAL )

						lRet := .F.
						ApMsgAlert( OemToAnsi( STR0125 ) )   // "Por favor, use a consulta padrão, de forma a preencher os campos de <Agencia> e <Codigo Postal>."

					EndIf

				EndIf

			EndIf   // ---------------------------------------------------------

		EndIf

    EndIf

EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100AgeChq   ºAutor  ³ Jose Lucas     º Data ³  13/09/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validar conteúdo do banco quando aRotina igual a Receber   º±±
±±º          ³ (FA100REC) e tipo do documento igual a Cheque.  		      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ fA100AgeChq()						                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³                                  					      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100AgeChq()
Local cAgeCheq  := &(ReadVar())
Local lRet      := .T.

FJS->(dbSetOrder(1))
FJS->(dbSeek(xFilial("FJS")+M->E5_TIPO))

If lReceber
	If FJS->FJS_TIPOIN == "CH" .and. Empty(cAgeCheq)
		Help(" ",1,"FA100AGECHQ",,STR0102+CRLF+STR0109+CRLF,1,0)
		lRet := .F.
	EndIf
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100CtaChq   ºAutor  ³ Jose Lucas     º Data ³  13/09/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validar conteúdo da Agencia quando aRotina igual a Receber º±±
±±º          ³ (FA100REC) e tipo do documento igual a Cheque.             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ fA100BcoChq()						                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³                                  					      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100CtaChq()
Local cCtaCheq  := &(ReadVar())
Local lRet      := .T.

FJS->(dbSetOrder(1))
FJS->(dbSeek(xFilial("FJS")+M->E5_TIPO))

If lReceber
	If FJS->FJS_TIPOIN == "CH" .and. Empty(cCtaCheq)
		Help(" ",1,"FA100CTACHQ",,STR0103+CRLF+STR0110+CRLF,1,0)
		lRet := .F.
	EndIf
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fA100DelCHQ   ºAutor  ³ Jose Lucas     º Data ³  15/09/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Cancelar as movimentações SE5, reverter os cheques SEF e   º±±
±±º          ³ reverter saldos da liquidação de SE1 referente o cheque.   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Sintaxe   ³ fA100DelCHQ()						                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Parametros³                                  					      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA100                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA100DelCHQ(cDocumento,cOperacao)
Local aSavArea   := GetArea()
Local cQrySE5    := ""
Local aTamValor  := TamSX3("E5_VALOR")
Local nLenCheque := TamSX3("EF_NUM")[1]
Local lRet       := .F.
Local oModelMov  := NIL	//FWLoadModel("FINM030")
Local cLog := ""

If AllTrim(SE5->E5_TERCEIR) == "2"
	lRet := .T.
Else

	If Select("QRYSE5")>0
		QRYSE5->(dbCloseArea())
	EndIf

	cQrySE5 := "SELECT "
	cQrySE5 += " E5_PREFIXO, "
	cQrySE5 += " E5_NUMERO, "
	cQrySE5 += " E5_PARCELA, "
	cQrySE5 += " E5_TIPO, "
	cQrySE5 += " E5_VALOR, "
	cQrySE5 += " E5_BCOCHQ, "
	cQrySE5 += " E5_AGECHQ, "
	cQrySE5 += " E5_CTACHQ, "
	cQrySE5 += " E5_NUMCHEQ, "
	cQrySE5 += " E5_RECPAG, "
	cQrySE5 += " E5_TIPODOC, "
	cQrySE5 += " E5_NUMCHEQ, "
	cQrySE5 += " E5_MOTBX, "
	cQrySE5 += " R_E_C_N_O_  RECNOSE5 "
	cQrySE5	+= " FROM "
	cQrySE5 += RetSqlName("SE5") + " SE5 "
	cQrySE5 += "WHERE "
	cQrySE5 += " E5_FILIAL = '" + xFilial("SE5") + "' "
	cQrySE5 += " AND E5_RECPAG = 'P' "
	cQrySE5	+= " AND E5_TIPODOC = 'BA' "
	cQrySE5 += " AND E5_MOTBX  = 'LIQ' "
	cQrySE5 += " AND E5_DOCUMEN = '" + cDocumento + "' "
	cQrySE5	+= " AND D_E_L_E_T_ = ' ' "
	cQrySE5 += "ORDER BY E5_PREFIXO, E5_NUMERO, E5_PARCELA, E5_LOJA "

	cQrySE5	:= ChangeQuery(cQrySE5)

	dbUseArea(.T., "TOPCONN", TCGenQry(,,cQrySE5), "QRYSE5", .T., .T.)

	TcSetField("QRYSE5","E5_VALOR" 	,"N",aTamValor[1],aTamValor[2])
	TcSetField("QRYSE5","RECNOSE5"  ,"N",08,0)

	QRYSE5->(dbGoTop())

	If cOperacao == "APAGAR"

		While QRYSE5->(!Eof())

    		SE1->(dbSetOrder(1))
			If SE1->(dbSeek(xFilial("SE1")+QRYSE5->E5_PREFIXO+QRYSE5->E5_NUMERO+QRYSE5->E5_PARCELA+QRYSE5->E5_TIPO))

				//Posicionar no Cheque à partir do numero do cheque registrado.
				If SEF->(dbSeek(xFilial("SEF")+SE1->E1_BCOCHQ+SE1->E1_AGECHQ+SE1->E1_CTACHQ+PADR(QRYSE5->E5_NUMCHEQ,nLenCheque)))
					//Verificar Status do Cheque de Terceiro
					If SEF->EF_STATUS == "04" 		//Liquidado
  						RecLock("SEF",.F.)
           	 			SEF->EF_STATUS = "01"		//Em carteira
           	 			SEF->EF_FORNECE = " "
           	 			SEF->EF_LOJA = " "
            			MsUnLock()

            			fA100GrvFRF("P","99","ANULADO NA MOV. BANCARIA")

						//³Estornar a baixa dos cheques de terceiros no Contas à Receber em SE1.
						RecLock("SE1",.F.)
						SE1->E1_BAIXA   := CTOD("")
						SE1->E1_MOVIMEN := CTOD("")
						SE1->E1_SALDO   := QRYSE5->E5_VALOR
						SE1->E1_VALLIQ  := 0.00
						MsUnLock()

						//Apagar a movimentação bancaria gerada pelo Cheque de terceiro.
						SE5->(dbGoTo(QRYSE5->RECNOSE5))
						If ! SE5->(Eof())

							oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
							oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
							oModelMov:Activate()
							oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação SE5
							oModelMov:SetValue( "MASTER", "E5_OPERACAO", 3 ) //E5_OPERACAO 3 = Deleta da SE5 e gera estorno na FK5

							//Posiciona a FKA com base no IDORIG da SE5 posicionada
							oSubFKA := oModelMov:GetModel( "FKADETAIL" )
							If oSubFKA:SeekLine( { {"FKA_FILIAL", SE5->E5_FILIAL },{"FKA_IDORIG", SE5->E5_IDORIG } } )

								If oModelMov:VldData()
							       	oModelMov:CommitData()
								Else
									lRet := .F.
								    cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
								    cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
								    cLog += cValToChar(oModelMov:GetErrorMessage()[6])
						       		Help(,,"MF100DELCH",,cLog, 1, 0 )
								Endif
							Endif
							oModelMov:DeActivate()
							oModelMov:Destroy()
							oModelMov := NIL

						EndIf
					EndIf
   				EndIf
    		EndIf
			QRYSE5->(dbSkip())
		End
		lRet := .T.
	ElseIf cOperacao == "VALIDAR"

		While QRYSE5->(!Eof())
    		SE1->(dbSetOrder(1))
			If SE1->(dbSeek(xFilial("SE1")+QRYSE5->E5_PREFIXO+QRYSE5->E5_NUMERO+QRYSE5->E5_PARCELA+QRYSE5->E5_TIPO))
				//Posicionar no Cheque à partir do numero do cheque registrado.
				If SEF->(dbSeek(xFilial("SEF")+SE1->E1_BCOCHQ+SE1->E1_AGECHQ+SE1->E1_CTACHQ+PADR(QRYSE5->E5_NUMCHEQ,nLenCheque)))
					//Verificar Status do Cheque de Terceiro
					If ! SEF->EF_STATUS $ "04" .and. SEF->EF_CART == "R" 		//Liquidado
						Help(" ",1,"FA100CHQNOLIQ",,STR0111+CRLF+STR0113+CRLF,1,0)
						lRet := .T.
						Exit
					EndIf
    			EndIf
    		EndIf
			QRYSE5->(dbSkip())
		End
	EndIf
	QRYSE5->(dbCloseArea())
EndIf

RestArea(aSavArea)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FINA100   ºAutor  ³Microsiga           ºFecha ³ 19/01/2012  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Complementa a gravacao do movimento bancario.              º±±
±±º          ³ Executada durante a gravacao da AXINCLUI                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Fa100Grv()
FJS->(dbSetOrder(1))
FJS->(dbSeek(xFilial("FJS")+M->E5_TIPO))

If cPaisLoc <> "BRA"
	If AllTrim(FJS->FJS_TERCEI) == "4"
		RecLock("SE5", .F.)
		Replace SE5->E5_TERCEIR	With "2"
		MsUnLock()
	Else
		RecLock("SE5", .F.)
		Replace SE5->E5_TERCEIR	With "1"
		MsUnLock()
	EndIf
EndIf

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³FA100Cpos ³ Autor ³ RODRIGO GIMENES       ³ Data ³ 03/11/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ CONFIGURAÇÃO DE ARRAY DE CAMPOS                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FA100Cpos(ExpA1)                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Expa1 = Array com os campos do cabeçalho                   ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA100                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function FA100Cpos(cModo)
Local aRet := {}
Local aStruct := SE5->(DbStruct())
Local aArea	 := GetArea()
Local cCampo := ""
Local lIncluiCpo := .T.
Local nX := 0

Default cModo := ""

For nX := 1 to Len(aStruct)
	cCampo := aStruct[nX,1]
	If cCampo == 'E5_TALAO'
		lIncluiCpo := cModo == "P"
	ElseIf cCampo $ 'E5_AGECHQ|E5_BCOCHQ|E5_CTACHQ|E5_POSTAL|E5_CGC'
		lIncluiCpo := cModo == "R"
	Else
		lIncluiCpo := .T.
	EndIf

	If lIncluiCpo
		AADD(aRet,cCampo)
	EndIf
Next nX
RestArea(aArea)

Return(aRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FA100NUMCHºAutor  ³Microsiga           º Data ³  02/23/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function FA100NUMCH(cBanco, cAgencia,cConta,cTalao,cTitulo,cForne, cLoja,cTipo)

Local aArea 	:= GetArea()
Local aAreaSE2 	:= {}
Local cQuery	:= ""
Local cAlias	:= ""
Local cChqOrg 	:= ""


DbSelectArea("SE2")
aAreaSE2 	:= SE2->(GetArea())


cChqOrg := ""

cQuery 	:=  "Select SE2.E2_NUMBCO,SEF.EF_PREFIXO From " + RetSqlName("SEF")+" SEF ," + RetSqlName("SE5")+" SE5 "
cQuery  +=  " INNER JOIN " + RetSqlName("SE2") + " SE2 ON(SE2.E2_BCOCHQ = SE5.E5_BANCO "
cQuery	+=  " AND SE2.E2_AGECHQ = SE5.E5_AGENCIA AND SE2.E2_CTACHQ = SE5.E5_CONTA "
cQuery	+=  " AND SE2.E2_BCOCHQ = SE5.E5_BANCO AND SE2.E2_NUM = SE5.E5_NUMCHEQ "
cQuery	+=  " AND SE2.E2_FORNECE = SE5.E5_CLIFOR AND SE2.E2_LOJA = SE5.E5_LOJA) "
cQuery	+=	" WHERE SE5.E5_FILIAL = '"+xFilial("SE5")+"' AND "
cQuery	+=	" SE2.E2_NUM = '" + cTitulo +"' AND "
cQuery	+=	" SE5.E5_BANCO = '" + cBanco +"' AND "
cQuery	+=	" SE5.E5_AGENCIA = '" + cAgencia +"' AND "
cQuery	+=	" SE5.E5_CONTA = '" + cConta +"' AND "
cQuery	+=	" SE5.E5_TALAO = '" + cTalao +"' AND "
cQuery	+=	" SE5.E5_CLIFOR = '" + cForne +"' AND "
cQuery	+=	" SE5.E5_LOJA = '" + cLoja +"' AND "
cQuery	+=	" SE5.E5_TIPO = '" + cTipo +"' AND "
cQuery	+=	" SEF.EF_PREFIXO = SE2.E2_PREFIXO AND "
cQuery	+=	" SE2.D_E_L_E_T_ = ''"
cQuery 	:= 	ChangeQuery(cQuery)
cAlias	:=	GetNextAlias()
dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.F.,.T.)
If (cAlias)->(!Eof())
	cChqOrg := (cAlias)->(E2_NUMBCO)
EndIf
DbCloseArea()

RestArea(aAreaSE2)
RestArea(aArea)

Return cChqOrg

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FA100VlNatºAutor  ³TOTVS               º Data ³  08/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida natureza que realizam movimentos bancarios.          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA100VlNat(cNat)
Local lRet := .T.

If Posicione("SED",1,xfilial("SED") + cNat ,"ED_MOVBCO") == "2"
	Help(" ",1,STR0126, , ; //"MOVIMENTAÇÃO BANCÁRIA"
         STR0080,1,0) //"Natureza informada inválida."
 	lRet:= .F.
EndIf

Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ValidHistº   Autor  ³TOTVS              º Data ³  17/12/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida o campo histórico par não passar vazio               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function ValidHist(cHist100)

Local lRet := .t.

If !Empty(cHist100)
	lRet := .t.
Else
	Help(" ",1,"HISTBRANCO")
	lRet := .f.
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FA100TpBcoºAutor  ³Microsiga           º Data ³  05/01/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida o tipo de banco do modo de pago (FJS)e do banco(SA6)º±±
±±º          ³ Projeto: M11.7CTR01 Requisito: 1421.5                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAFIN - Argentina                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA100TpBco(cTipModPag,cCodBanco,cCodAgenc,cCodConta)
Local lRet			:= .T.
Local aSaveArea 	:= GetArea()
Local cFJSTipBco	:= ""
Local cSA6TipBco	:= ""

Default cTipModPag	:= CriaVar("FJS_TIPO"	,.F.)
Default cCodBanco	:= CriaVar("A6_COD"		,.F.)
Default cCodAgenc	:= CriaVar("A6_AGENCIA"	,.F.)
Default cCodConta	:= CriaVar("A6_NUMCON"	,.F.)

//Verifica se os campos existem na base
If cPaisLoc $ "ANG|ARG|AUS|BOL|CHI|COL|COS|DOM|EQU|EUA|HAI|MEX|PAD|PAN|PAR|PER|POR|PTG|SAL|TRI|URU|VEN"

	//Verifica se todos campos estao preenchidos
	If !Empty(cTipModPag) .And. !Empty(cCodBanco) .And. !Empty(cCodAgenc) .And. !Empty(cCodConta)

		cFJSTipBco := GetAdvFVal("FJS","FJS_TIPBCO"	,XFilial("FJS")+cTipModPag						,1,"")
		cSA6TipBco := GetAdvFVal("SA6","A6_TIPBCO"	,XFilial("SA6")+cCodBanco+cCodAgenc+cCodConta	,1,"")
		If !Empty(cFJSTipBco) .And. (cFJSTipBco <> cSA6TipBco)
			lRet := .F.
			Help(" ",1,"SA6TIPBCO")
		EndIf

	EndIf

EndIf

RestArea(aSaveArea)

Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GetEstCCO ºAutor  ³Luis Samaniego      º Data ³  05/02/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Obtener datos de la tabla de estados Vs Ing. Brutos (CCO)  º±±
±±º          ³ 										                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAFIN - Argentina                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GetEstCCO()
	Local lRet := .T.
	Local nTltCoef := 0
	Local cFilCCO	:= xFilial("CCO",cFilAnt)
	Public aEstCCO := {}

	dbSelectArea("CCO")
	CCO->(dbSetOrder(1))
	CCO->(dbGotop())
	While !CCO->(EOF())
		If CCO->CCO_COESIR > 0
			aAdd(aEstCCO,{CCO->CCO_FILIAL, CCO->CCO_CODPRO, CCO->CCO_DESCPR, CCO->CCO_CODJUR, CCO->CCO_AGPER, CCO->CCO_TPPERC, CCO->CCO_TIPO, CCO->CCO_CPERNC, CCO->CCO_AGRET, CCO->CCO_TPRET, CCO->CCO_NROAGE, CCO->CCO_COESIR,0} )
			If cFilCCO == CCO->CCO_FILIAL
				nTltCoef += CCO->CCO_COESIR
			EndIF
		EndIf
		CCO->(dbSkip())
	EndDo

	If nTltCoef <> 1
		lRet := .F.
	EndIf

Return(lRet)


//-------------------------------------------------------------------
/*/{Protheus.doc} SetMsgOpc
Função para definição do modo de edição da mensagem única de  movimentos financeiros

@param cOpc Modo de edição do processo

@author marylly.araujo
@since 28/08/2013
@version MP11.90
/*/
//-------------------------------------------------------------------
STATIC FUNCTION SetMsgOpc(nOpc)
nMsgOpc := nOpc
Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} SetMsgOpc
Função para definição do modo de edição da mensagem única de  movimentos financeiros

@param cOpc Modo de edição do processo

@author marylly.araujo
@since 28/08/2013
@version MP11.90
/*/
//-------------------------------------------------------------------
FUNCTION GetMsgOpc()
Return nMsgOpc

//-------------------------------------------------------------------
/*/{Protheus.doc} SetMsgOpc
Função para definição do modo de edição da mensagem única de  movimentos financeiros

@param cOpc Modo de edição do processo

@author marylly.araujo
@since 28/08/2013
@version MP11.90
/*/
//-------------------------------------------------------------------
FUNCTION GetIdMov()
Return cSE5IdMov

//-------------------------------------------------------------------
/*/{Protheus.doc} GravaFKs
Função para gravação da tabela FK5

@param lAuto, indica se foi chamada por rotina automatica
@author Pedro Alencar
@since 08/04/2014
@version P12
/*/
//-------------------------------------------------------------------
Static Function GravaFKs(lAuto)
	Local oModelMov  := FWLoadModel("FINM030")
	Local oSubFK5	 := Nil
	Local oSubFK8	 := Nil
	Local oSubFK9	 := Nil
	Local oSubFKA	 := Nil
	Local cLog 		 := ""
	Local lRet 		 := .T.
	Local cChaveFK5  := FWUUIDV4()
	Local cCamposE5	 := ""
	Local cTipoLan	 := ""
	Local lMVDtMov	 := SuperGetMv("MV_DTMOVRE", .T., .F.)
	Local lAltDTDsp	 := SuperGetMV("MV_EXDTDSP", .T., .F.)
	Local dDataMv	 := dDatabase
	Local nMoeda   	 := 1
	Local cOrigem	 := ""
	Local cTpDoc	 := ""
	Local lTrocoLoja := .F.
	Local lUsaFRE		:= SUPERGETMV('MV_USEFRE',.T.,.F.) 	// Usa talonario tabela FRE

	Default lAuto 	 := .F.

	cOrigem := FunName()
	//Tratamento para a gravação de registro do troco do loja
	lTrocoLoja := AllTrim(SE5->E5_MOEDA) == "TC"

	If cPaisLoc == "ARG" .And. lUsaFRE .And. fVldCheque(SE5->E5_TIPO, SE5->E5_MOEDA)
		cTpDoc := "BA"
	Else

		cTpDoc := Iif( lTrocoLoja, "VL", "DH" )
	Endif

	If lMVDtMov .AND. cRecPag == 'P'
		dDatabase	:= SE5->E5_DATA
	EndIf

	oModelMov:SetOperation( MODEL_OPERATION_INSERT ) //Inclusao
	oModelMov:Activate()
	oModelMov:SetValue( "MASTER", "E5_GRV", .F. )
	oModelMov:SetValue( "MASTER", "NOVOPROC", .T. ) //Informa que a inclusão será feita com um novo número de processo

	//Dados do Processo
	oSubFKA := oModelMov:GetModel("FKADETAIL")
	oSubFKA:SetValue( "FKA_IDORIG", cChaveFK5 )
	oSubFKA:SetValue( "FKA_TABORI", "FK5" )

	//Dados do Movimento
	oSubFK5 := oModelMov:GetModel("FK5DETAIL")
	oSubFK5:SetValue( "FK5_DATA", SE5->E5_DATA )
	oSubFK5:SetValue( "FK5_VALOR", SE5->E5_VALOR )
	oSubFK5:SetValue( "FK5_MOEDA", SE5->E5_MOEDA )
	oSubFK5:SetValue( "FK5_NATURE", SE5->E5_NATUREZ )
	oSubFK5:SetValue( "FK5_RECPAG", cRecPag )
	oSubFK5:SetValue( "FK5_TPDOC", cTpDoc )
	oSubFK5:SetValue( "FK5_ORIGEM", cOrigem )
	oSubFK5:SetValue( "FK5_BANCO", SE5->E5_BANCO )
	oSubFK5:SetValue( "FK5_AGENCI", SE5->E5_AGENCIA )
	oSubFK5:SetValue( "FK5_CONTA", SE5->E5_CONTA )
	oSubFK5:SetValue( "FK5_NUMCH", SE5->E5_NUMCHEQ )
	oSubFK5:SetValue( "FK5_DOC", SE5->E5_DOCUMEN )
	oSubFK5:SetValue( "FK5_HISTOR", SE5->E5_HISTOR )
	oSubFK5:SetValue( "FK5_VLMOE2", SE5->E5_VLMOED2 )
	oSubFK5:SetValue( "FK5_TXMOED", SE5->E5_TXMOEDA )
	oSubFK5:SetValue( "FK5_DTDISP", IIF(lF100AUTO .And. lAltDTDsp, SE5->E5_DTDISPO, SE5->E5_DATA) )
	oSubFK5:SetValue( "FK5_SEQCON", SE5->E5_SEQCON )
	oSubFK5:SetValue( "FK5_FILORI", cFilAnt )
	oSubFK5:SetValue( "FK5_OK", SE5->E5_OK )
	oSubFK5:SetValue( "FK5_RATEIO", Iif( SE5->E5_RATEIO == "S", "1", "2" ) )
	oSubFK5:SetValue( "FK5_SEQ", SE5->E5_SEQ )
	oSubFK5:SetValue( "FK5_PROTRA", SE5->E5_PROCTRA )
	oSubFK5:SetValue( "FK5_CCUSTO", SE5->E5_CCUSTO )
	If cPaisLoc == "BRA"
		oSubFK5:SetValue( "FK5_MODSPB", SE5->E5_MODSPB )
	Else
		oSubFK5:SetValue( "FK5_TERCEI", SE5->E5_TERCEIR )
		If cPaisLoc == "ARG"
			oSubFK5:SetValue( "FK5_TPMOV", Iif(SE5->E5_TIPOMOV == "01", "1", "2" ) )
		Endif
	Endif

	//Nas localizacoes, as movimentacoes sao feitas na moeda do BANCO, por isso
	//tanto nas transferencias quanto no PAGAR/RECEBER, é gravado o valor em moeda 1
	//no campo E5_VLMOED2 para facilitar a contabilizacao. Bruno 22/08/00 22:01
	If cPaisLoc # "BRA"
		If cRecPag == 'P' // Pagar
			SA6->(DbSetOrder(1))
			SA6->(dbSeek(xFilial()+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA))
			nMoeda   := Max(IIf(Type("SA6->A6_MOEDAP")=="U",SA6->A6_MOEDA,If(SA6->A6_MOEDAP>0,SA6->A6_MOEDAP,SA6->A6_MOEDA)),1)
			If SE5->E5_TXMOEDA > 0
				oSubFK5:SetValue( "FK5_VLMOE2", xMoeda(SE5->E5_VALOR,nMoeda,1,SE5->E5_DATA,,SE5->E5_TXMOEDA) )
			Else
				oSubFK5:SetValue( "FK5_VLMOE2", xMoeda(SE5->E5_VALOR,nMoeda,1,SE5->E5_DATA) )
			Endif
		Else // Receber
			SA6->(DbSetOrder(1))
			SA6->(dbSeek(xFilial()+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA))
			If SE5->E5_TXMOEDA > 0
				oSubFK5:SetValue( "FK5_VLMOE2", xMoeda(SE5->E5_VALOR,Max(SA6->A6_MOEDA,1),1,SE5->E5_DATA,,SE5->E5_TXMOEDA) )
			Else
				oSubFK5:SetValue( "FK5_VLMOE2", xMoeda(SE5->E5_VALOR,Max(SA6->A6_MOEDA,1),1,SE5->E5_DATA) )
			Endif
		EndIf
	Endif

	//Como a gravação da E5 já foi feita pelo AxInclui, manda o valor do IDORIG com base na chave do FK5 que será gerado
	cCamposE5 := "{"
	cCamposE5 += "{'E5_IDORIG', '" + cChaveFK5 + "'}"
	cCamposE5 += ",{'E5_TABORI', 'FK5'}"
	cCamposE5 += ",{'E5_MOVFKS', 'S'}"
	If !lTrocoLoja
		cCamposE5 += ",{'E5_TIPODOC', '" + cTpDoc + "'}"
	EndIf
	cCamposE5 += ",{'E5_DTDIGIT', dDatabase}"
	cCamposE5 += ",{'E5_ORIGEM', '" + cOrigem + "'}"
	cCamposE5 += ",{'E5_MOVFKS', 'S'}"
	cCamposE5 += ",{'E5_RATEIO', '" + SE5->E5_RATEIO + "'}"
	cCamposE5 += GrvTxMdVlr( cRecPag , @oSubFK5 , @oModelMov )

	If cRecPag == 'R'

		//Se for cheque pre-datado, gera titulos de cheques
		IF SE5->E5_MOEDA $ "C1þC2þC3þC4þC5" .and. SE5->E5_VENCTO > SE5->E5_DATA  .And.;
				(!Empty(SE5->E5_NUMCHEQ) .And. Substr(SE5->E5_NUMCHEQ,1,1) != "*")

			fA100Tit()

			//Define os campos que não existem nas FKs e que serão gravados apenas na E5, para que a gravação da E5 continue igual
			cCamposE5 += ",{'E5_PREFIXO', SE1->E1_PREFIXO}"
			cCamposE5 += ",{'E5_NUMERO', SE1->E1_NUM}"
			cCamposE5 += ",{'E5_PARCELA', SE1->E1_PARCELA}"
			cCamposE5 += ",{'E5_TIPO', SE1->E1_TIPO}"
			cCamposE5 += ",{'E5_CLIENTE', SE1->E1_CLIENTE}"
			cCamposE5 += ",{'E5_CLIFOR', SE1->E1_CLIENTE}"
			cCamposE5 += ",{'E5_LOJA', SE1->E1_LOJA}"

		EndIF

	EndIf

	cCamposE5 += "}"
	oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 )

   	//Dados Contábeis
   	cTipoLan := SE5->E5_TIPOLAN
   	If cTipoLan == "D"
   		cTipoLan := "1"
   	ElseIf cTipoLan == "C"
   		cTipoLan := "2"
   	ElseIf cTipoLan == "X"
		cTipoLan := "3"
	Else
		cTipoLan := ""
   	Endif
   	oSubFK8 := oModelMov:GetModel("FK8DETAIL")
	oSubFK8:SetValue( "FK8_TPLAN", cTipoLan )
	oSubFK8:SetValue( "FK8_DEBITO", SE5->E5_DEBITO )
	oSubFK8:SetValue( "FK8_CREDIT", SE5->E5_CREDITO )
	oSubFK8:SetValue( "FK8_CCD", SE5->E5_CCD )
	oSubFK8:SetValue( "FK8_CCC", SE5->E5_CCC )
	oSubFK8:SetValue( "FK8_ARQRAT", SE5->E5_ARQRAT )
	oSubFK8:SetValue( "FK8_ITEMD", SE5->E5_ITEMD )
	oSubFK8:SetValue( "FK8_ITEMC", SE5->E5_ITEMC )
	oSubFK8:SetValue( "FK8_CLVLDB", SE5->E5_CLVLDB )
	oSubFK8:SetValue( "FK8_CLVLCR", SE5->E5_CLVLCR )
	If oSubFK8:CanSetValue('FK8_DIACTB')
		oSubFK8:SetValue( "FK8_DIACTB", SE5->E5_DIACTB )
	EndIf
	oSubFK8:SetValue( "FK8_NODIA", SE5->E5_NODIA )

	//Dados de integração
	oSubFK9 := oModelMov:GetModel("FK9DETAIL")
	oSubFK9:SetValue( "FK9_SITUA", SE5->E5_SITUA )
	oSubFK9:SetValue( "FK9_PRJPMS", SE5->E5_PROJPMS )
	oSubFK9:SetValue( "FK9_EDTPMS", SE5->E5_EDTPMS )
	oSubFK9:SetValue( "FK9_TASPMS", SE5->E5_TASKPMS )
	oSubFK9:SetValue( "FK9_OPERAD", SE5->E5_OPERAD )
	oSubFK9:SetValue( "FK9_NUMMOV", SE5->E5_NUMMOV )
	oSubFK9:SetValue( "FK9_FLDMED", SE5->E5_FLDMED )
	oSubFK9:SetValue( "FK9_FORMPG", SE5->E5_FORMAPG )

   	If oModelMov:VldData()
		oModelMov:CommitData()
	Else
		lRet := .F.
		cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
		cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
		cLog += cValToChar(oModelMov:GetErrorMessage()[6])
		Help(,,"MF100GRVFK",,cLog, 1, 0 )
	Endif
	oModelMov:DeActivate()
	oModelMov:Destroy()
	oModelMov := NIL
   	oSubFK5 := Nil
   	oSubFK8 := Nil
   	oSubFK9 := Nil
   	oSubFKA := Nil

	If lMVDtMov .AND. cRecPag == 'P'
		dDatabase	:= dDataMv
	EndIf

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} FkProcSEF
Função para víncular um cheque à um processo na FKA, com base no
processo da SE5 posicionada

@param cIdSef, ID do cheque, gerado com a função FWUUIDV4()
@author Pedro Alencar
@since 02/05/2014
@version P12
/*/
//-------------------------------------------------------------------
Static Function FkProcSEF (cIdSef)
	Local lRet := .T.
	Local oModelMov := FWLoadModel("FINM030") //Model de Movimento Bancário
	Local oSubFKA
	Local cLog := ""

	//Vincula o cheque criado ao processo
	oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
	oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
	oModelMov:Activate()
	oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //habilita gravação de SE5

	oSubFKA := oModelMov:GetModel( "FKADETAIL" )
	If !oSubFKA:IsEmpty()
		oSubFKA:AddLine()
	Endif
	oSubFKA:SetValue( 'FKA_IDFKA', FWUUIDV4() )
	oSubFKA:SetValue( 'FKA_IDORIG', cIdSef )
	oSubFKA:SetValue( 'FKA_TABORI', 'SEF' )

	If oModelMov:VldData()
		oModelMov:CommitData()
	Else
	    lRet := .F.
	    cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
	    cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
	    cLog += cValToChar(oModelMov:GetErrorMessage()[6])
    	Help(,,"MF100FKSEF",,cLog, 1, 0 )
	Endif
	oModelMov:DeActivate()
	oModelMov:Destroy()
	oModelMov := NIL

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} GrvTxMdVlr
Efeua a gravação do campo E5_VLMOED2 para localizados e
a gravação dos campos E5_VLMOED2 e E5_TXMOEDA para BRA
@author daniel.mendes
@since 27/11/2015
@version 12.1.7
/*/
//-------------------------------------------------------------------
Static Function GrvTxMdVlr( cTipo , oMdlFK5 , oMdlMster )
Local nMoeda   := 0
Local nRecMda  := 0
Local cReturn  := ""

//Nas localizacoes, as movimentacoes sao feitas na moeda do BANCO, por isso
//tanto nas transferencias quanto no PAGAR/RECEBER, e' gravado o valor em moeda 1
//no campo E5_vlmoed2 para facilitar a contabilizacao. Bruno 22/08/00 22:01
SA6->( DbSetOrder(1) )
SA6->( dbSeek( xFilial() + SE5->E5_BANCO + SE5->E5_AGENCIA + SE5->E5_CONTA ) )
nMoeda := Max( IIf( Type("SA6->A6_MOEDAP") == "U" , SA6->A6_MOEDA , Iif( SA6->A6_MOEDAP > 0 , SA6->A6_MOEDAP , SA6->A6_MOEDA ) ) , 1 )

If cPaisLoc # "BRA"
	If cTipo == "P"
		If SE5->E5_TXMOEDA > 0
			oMdlFK5:SetValue( "FK5_VLMOE2" , xMoeda(SE5->E5_VALOR,nMoeda,1,SE5->E5_DATA,,SE5->E5_TXMOEDA) )
		Else
			oMdlFK5:SetValue( "FK5_VLMOE2" , xMoeda(SE5->E5_VALOR,nMoeda,1,SE5->E5_DATA) )
		EndIf
	Else
		If SE5->E5_TXMOEDA > 0
			oMdlFK5:SetValue( "FK5_VLMOE2" , xMoeda(SE5->E5_VALOR,Max(SA6->A6_MOEDA,1),1,SE5->E5_DATA,,SE5->E5_TXMOEDA) )
		Else
			oMdlFK5:SetValue( "FK5_VLMOE2" , xMoeda(SE5->E5_VALOR,Max(SA6->A6_MOEDA,1),1,SE5->E5_DATA) )
		EndIf
	EndIf
	cReturn += ",{'E5_VLMOED2'," + cValToChar( oMdlFK5:GetValue( "FK5_VLMOE2" ) ) + "}"
ElseIf nMoeda > 1
	If Empty( SE5->E5_VLMOED2 ) .And. SE5->E5_VALOR > 0
		oMdlFK5:SetValue( "FK5_VLMOE2" , SE5->E5_VALOR )
		cReturn += ",{'E5_VLMOED2'," + cValToChar( SE5->E5_VALOR ) + "}"
	EndIf
	If Empty( SE5->E5_TXMOEDA )
		nRecMda := RecMoeda( dDataBase , nMoeda )
		oMdlFK5:SetValue( "FK5_TXMOED" , nRecMda )
		cReturn += ",{'E5_TXMOEDA'," + cValToChar( nRecMda ) + "}"
	EndIf
EndIf

Return cReturn

//-------------------------------------------------------------------
/*/{Protheus.doc}FA100Bloq
Valida se existe cadastro bloqueados para geração de movimentação bancária.
@author Sivaldo Oliveira
@return lRet
@since  25/07/17
/*/
//-------------------------------------------------------------------
Function FA100Bloq()
	Local lRet As Logical

	//Inicializa variáveis.
	lRet := .T.

	//Cliente/Fornecedor
	If FwIsInCallStack("FA100Pag")
		If !Empty(M->E5_CLIFOR) .And. !Empty(M->E5_LOJA)
			SA2->(DbSetOrder(1))
			If SA2->(DbSeek(xFilial("SA2")+M->(E5_CLIFOR+E5_LOJA))) .And. SA2->A2_MSBLQL == "1"
				lRet := .F.
				Help(" ", 1, "CAD_BLOQ",,STR0148, 2, 0,,,,,, {""}) //"Fornecedor bloqueado!"
			EndIf
		EndIf
	ElseIf FwIsInCallStack("FA100Rec")
		If !Empty(M->E5_CLIFOR) .And. !Empty(M->E5_LOJA)
			SA1->(DbSetOrder(1))
			If SA1->(DbSeek(xFilial("SA1")+M->(E5_CLIFOR+E5_LOJA))) .And. SA1->A1_MSBLQL == "1"
				lRet := .F.
				Help(" ", 1, "CAD_BLOQ",,STR0149, 2, 0,,,,,, {""}) //"Cliente bloqueado!"
			EndIf
		EndIf
	Endif

	//Banco
	If lRet .And. !Empty(M->E5_BANCO)
		SA6->(DbSetOrder(1))
		If SA6->(DbSeek(xFilial("SA6")+M->(E5_BANCO+E5_AGENCIA+E5_CONTA))) .And. SA6->A6_BLOCKED == "1"
			lRet := .F.
			Help(" ", 1, "CAD_BLOQ",,"Banco bloqueado!", 2, 0,,,,,, {""})
		EndIf
	EndIf

	//Conta contábil Débito e Crédito
	If lRet .And. (!Empty(M->E5_DEBITO) .Or. !Empty(M->E5_CREDITO))
		CT1->(DbSetOrder(1))
		If !Empty(M->E5_DEBITO) .And. CT1->(DbSeek(xFilial("CT1")+M->E5_DEBITO)) .And.;
			(CT1->CT1_BLOQ == "1" .Or. (CT1->CT1_BLOQ == '2' .AND. ( ( ! Empty( CT1->CT1_DTBLIN ) .AND. dDatabase >= CT1->CT1_DTBLIN) .AND. ( ! Empty( CT1->CT1_DTBLFI ) .AND. dDatabase <= CT1->CT1_DTBLFI ) )))
			lRet := .F.
			Help(" ", 1, "CAD_BLOQ",,"Conta débito bloqueada!", 2, 0,,,,,, {""})
		EndIf

		If lRet .And. !Empty(M->E5_CREDITO) .And. CT1->(DbSeek(xFilial("CT1")+M->E5_CREDITO)) .And.;
			(CT1->CT1_BLOQ == "1" .Or. (CT1->CT1_BLOQ == '2' .AND. ( ( ! Empty( CT1->CT1_DTBLIN ) .AND. dDatabase >= CT1->CT1_DTBLIN) .AND. ( ! Empty( CT1->CT1_DTBLFI ) .AND. dDatabase <= CT1->CT1_DTBLFI ) )))
			lRet := .F.
			Help(" ", 1, "CAD_BLOQ",,"Conta crédito bloqueada!", 2, 0,,,,,, {""})
		EndIf
	EndIf

	//Centro de Custo
	If lRet .And. !Empty(M->E5_CCUSTO)
		CTT->(DbSetOrder(1))
		If CTT->(DbSeek(xFilial("CTT")+M->E5_CCUSTO)) .And. CTT->CTT_BLOQ == "1"
			lRet := .F.
			Help(" ", 1, "CAD_BLOQ",,"Centro de custo bloqueado!", 2, 0,,,,,, {""})
		EndIf
	EndIf

	//Item contábil Débito e Crédito
	If lRet .And. (!Empty(M->E5_ITEMD) .Or. !Empty(M->E5_ITEMC))
		CTD->(DbSetOrder(1))

		If !Empty(M->E5_ITEMD)
			If CTD->(DbSeek(xFilial("CTD")+M->E5_ITEMD)) .And. CTD->CTD_BLOQ == "1"
				lRet := .F.
				Help(" ", 1, "CAD_BLOQ",,"Item Contábil Débito bloqueado!", 2, 0,,,,,, {""})
			EndIf
		EndIf

		If lRet .And. !Empty(M->E5_ITEMC)
			If CTD->(DbSeek(xFilial("CTD")+M->E5_ITEMC)) .And. CTD->CTD_BLOQ == "1"
				lRet := .F.
				Help(" ", 1, "CAD_BLOQ",,"Item Contábil Crédito bloqueado!", 2, 0,,,,,, {""})
			EndIf
		EndIf
	EndIf

	//Centro de Custo Débito e Crédito
	If lRet .And. (!Empty(M->E5_ITEMD) .Or. !Empty(M->E5_ITEMC))
		CTD->(DbSetOrder(1))

		If !Empty(M->E5_ITEMD)
			If CTD->(DbSeek(xFilial("CTD")+M->E5_ITEMD)) .And. CTD->CTD_BLOQ == "1"
				lRet := .F.
				Help(" ", 1, "CAD_BLOQ",,"Item Contábil Débito bloqueado!", 2, 0,,,,,, {""})
			EndIf
		EndIf

		If lRet .And. !Empty(M->E5_ITEMC)
			If CTD->(DbSeek(xFilial("CTD")+M->E5_ITEMC)) .And. CTD->CTD_BLOQ == "1"
				lRet := .F.
				Help(" ", 1, "CAD_BLOQ",,"Item Contábil Crédito bloqueado!", 2, 0,,,,,, {""})
			EndIf
		EndIf
	EndIf


Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc}ValNat
Valida a natureza escolhida
@return lRet
@since  10/05/16
/*/
//-------------------------------------------------------------------
Function ValNat()

Local lRet 		:= .T.
Local lFa100Nat	:= ExistBlock("Fa100Nat")
Local lValida	:= .T.

SED->(DbSetOrder())
lRet := SED->(dbSeek(xFilial("SED")+M->E5_NATUREZ))

If lRet
	If SED->ED_MSBLQL == "1"
		Help(" ", 1, "REGBLOQ")
		lRet := .F.
	EndIf

	If lRet
		If lFa100Nat
			lValida := ExecBlock("Fa100Nat",.F.,.F.,)
		EndIf

		If lValida
			If !Empty(SED->ED_CSTPIS) .and. !Empty(SED->ED_CSTCOF)
				If SED->ED_CSTPIS $ ("50#51#52#53#54#55#56#60#61#62#63#64#65#66") .and. SED->ED_CSTCOF $ ("50#51#52#53#54#55#56#60#61#62#63#64#65#66")
					If Empty(M->E5_CLIFOR)
						Help(" ",1,"FA100NAT",,"A natureza informada possui CST de crédito, e não possui Cliente/Fornecedor",1,0)
						lRet := .F.
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
EndIf

Return lRet



Function F100F3CF()

If IsInCallStack("fA100Pag")
	CONPAD1(,,,"FOR100")
ElseIf IsInCallStack("fA100Rec")
	CONPAD1(,,,"CLI")
EndIf

Return .T.

Function F100F3Tipo()

If IsInCallStack("fA100Pag")
	CONPAD1(,,,"FJSP")
ElseIf IsInCallStack("fA100Rec")
	CONPAD1(,,,"FJSC")
Else
	CONPAD1(,,,"FJS")
EndIf

Return .T.

/*/{Protheus.doc} IntegDef
Função para integração via Mensagem Única Totvs.

@author  marylly.araujo
@version P11.90
@since   28/08/2013
/*/
Static Function IntegDef(cXml, cTypeTrans, cTypeMsg, cVersion, cTransac)
Return FINI100(cXml, cTypeTrans, cTypeMsg, cVersion, cTransac)

//-----------------------------------------------------------------------------------------------------
/*/{Protheus.doc} F100VlDtCr
Validação do campo Data de Crédito da tela de transferência entre C/C

@param dDataCred - Data a ser validada
@param cBcoOrig - Banco de origem
@param cBcoDest - Banco de destino

@return lRet - boleano determina se a data informada é válida ou não

@author Mauricio Pequim Jr.
@since 28/06/2018
@version 12
/*/
//-----------------------------------------------------------------------------------------------------
Function F100VlDtCr(dDataCred As Date, cBcoOrig As Character, cBcoDest As Character) As Logical

Local lRet    As Logical

DEFAULT dDataCred := CTOD('//')
DEFAULT cBcoOrig  := ""
DEFAULT cBcoDest  := ""

lRet    := .F.

If (!Empty(dDataCred) .and. dDataCred >= dDatabase)
	lRet := .T.
Else
	HELP(' ',1,"F100DTCRD",,STR0144,2,0,,,,,, {STR0145})		//"Data de crédito inválida."###"verifique se a data informada é maior ou igual a database do sistema."
Endif

If lRet .and. dDataCred != DataValida(dDataCred)
	If !FTrfCxFin(cBcoOrig, cBcoDest) //Caso for transferencia entre caixas financeiros, desconsiderar a validação.
		HELP(' ',1,"F100DTCR2",,STR0144,2,0,,,,,, {STR0151})		//"Data de crédito inválida."###"verifique se a data informada é maior ou igual a database do sistema."
		lRet := .F.
	Endif
Endif

Return lRet

/*/{Protheus.doc} MsgUVer
Função que verifica a versão de uma mensagem única cadastrada no adapter EAI.

Essa função deverá ser EXCLUÍDA e substituída pela função FwAdapterVersion()
após sua publicação na Lib de 2019.

@param cRotina		Rotina que possui a IntegDef da Mensagem Unica
@param cMensagem	Nome da Mensagem única a ser pesquisada

@author		Felipe Raposo
@version	P12
@since		23/11/2018
@return		xVersion - versão da mensagem única cadastrada. Se não encontrar, retorna nulo.
/*/
Static Function MsgUVer(cRotina, cMensagem)

Local aArea		:= GetArea()
Local xVersion	:= ""
Local aRetAdap	:= {}

If FindFunction("FwAdapterVersion")
	xVersion := FwAdapterVersion(cRotina, cMensagem)
Else
	If FindFunction("FwAdapterInfo")
		aRetAdap := FwAdapterInfo( cRotina, cMensagem)
		If Len(aRetAdap) > 0
			xVersion := aRetAdap[8]
		Endif
	Endif
Endif

RestArea(aArea)

Return xVersion

/*/{Protheus.doc} FTrfCxFin
Verifica se o banco informado é caixa financeiro

@param cBanco Banco origem da transferencia bancaria
@param cBanco Banco destino da transferencia bancaria

@author Fabio Casagrande Lima
@since  08/02/2021
@return	lRet - Retorna .T. se sao bancos caixa ou .F. se não for
/*/
Static Function FTrfCxFin(cBcoOri As Character, cBcoDest As Character) As Logical

	Local nTamBco  As Numeric
	Local lRet     As Logical
	Local lCxLoja  As Logical
	Local cCarteir As Character
	Local cCxGeral As Character

	Default cBcoOri := ""
	Default cBcoDest := ""

	nTamBco  := TamSX3("A6_COD")[1]
	lRet := .F.
	lCxLoja  := SuperGetMV( "MV_CXLJFIN", .F. ) //Indica que os caixas de loja tambem sao considerados como caixas financeiros.
	cCarteir := SuperGetMV( "MV_CARTEIR", .F. ) //Contem a relacao dos bancos que trabalham em regime de carteira
	cCxGeral := SuperGetMV( "MV_CXFIN"  , .F. ) //Contem o banco, agencia e conta que representam o caixa geral financeiro

	If (SubStr(cBcoOri,1,2) == "CX" .or. cBcoOri $ Left(cCxGeral,nTamBco)+"/"+cCarteir .or. (lCxLoja .and. IsCaixaLoja(cBcoOri))) .and.;
		(SubStr(cBcoDest,1,2) == "CX" .or. cBcoDest $ Left(cCxGeral,nTamBco)+"/"+cCarteir .or. (lCxLoja .and. IsCaixaLoja(cBcoDest)) )
		lRet := .T.			
	Endif

Return lRet

//------------------------------
/*/{Protheus.doc}F100MovTB
Verifica se existem transferencias bancarias com o
banco, agencia, conta e documento passado para a função.

@param cBanco  , characters, banco de origem da transferencia
@param cAgencia, characters, agencia de origem da transferencia
@param cConta  , characters, conta de origem da transferencia
@param cDoc    , characters, codigo de documento da transferencia
@param cTipoTr , characters, tipo da transferencia

@return lRet, logico, .T. caso exista movimentacao

@author Fabio Casagrande Lima
@since  16/09/2021
@version 12
@type function
/*/
//------------------------------
Static Function F100MovTB(cBanco As Character, cAgencia As Character, cConta As Character, cDoc As Character, cTipoTr As Character, dData As Date)

    Local lRet      As Logical
    Local cQry 		As Character
    Local cCampoPre As Character
    Local cCampoNum As Character
    Local cCampoPar As Character
    Local cCampoTip As Character	
	Local cDataMov  As Character

    Default cBanco   := ""
    Default cAgencia := ""
    Default cConta   := ""
    Default cDoc     := ""
	Default cTipoTr  := ""
	Default dData  	 := dDataBase

    lRet      := .F.
    cQry      := ""
    cCampoPre := Padr("", TamSX3("E5_PREFIXO")[1])
    cCampoNum := Padr("", TamSX3("E5_NUMERO")[1])
    cCampoPar := Padr("", TamSX3("E5_PARCELA")[1])
    cCampoTip := Padr("", TamSX3("E5_TIPO")[1])

    If __oMoviTB == Nil
        cQry := "SELECT E5_DATA DTMOV FROM ?  "
        cQry += "WHERE E5_FILIAL = ? AND E5_TIPODOC = ? AND E5_RECPAG = ? AND "
        cQry += "E5_PREFIXO = ? AND E5_NUMERO = ? AND E5_PARCELA = ? AND "
        cQry += "E5_TIPO = ? AND E5_DATA = ? AND E5_BANCO = ? AND "
        cQry += "E5_AGENCIA = ? AND E5_CONTA = ? AND E5_NUMCHEQ = ? AND "		
        cQry += "E5_MOEDA = ? AND D_E_L_E_T_ = ' ' "
        cQry := ChangeQuery(cQry)
        __oMoviTB := FWPreparedStatement():New(cQry)
    EndIf

    __oMoviTB:SetNumeric(1, RetSqlName("SE5"))
    __oMoviTB:SetString(2, xFilial("SE5")) //E5_FILIAL
    __oMoviTB:SetString(3, 'TR') //E5_TIPODOC
    __oMoviTB:SetString(4, 'P') //E5_RECPAG
    __oMoviTB:SetString(5, cCampoPre) //E5_PREFIXO
    __oMoviTB:SetString(6, cCampoNum) //E5_NUMERO
    __oMoviTB:SetString(7, cCampoPar) //E5_PARCELA
    __oMoviTB:SetString(8, cCampoTip) //E5_TIPO
    __oMoviTB:SetDate(9, dData) //E5_DATA
    __oMoviTB:SetString(10, cBanco) //E5_BANCO
    __oMoviTB:SetString(11, cAgencia) //E5_AGENCIA
    __oMoviTB:SetString(12, cConta) //E5_CONTA
    __oMoviTB:SetString(13, Alltrim(cDoc)) //E5_NUMCHEQ
    __oMoviTB:SetString(14, cTipoTr) //E5_MOEDA

	cQry  := __oMoviTB:GetFixQuery()
	cDataMov := MpSysExecScalar(cQry, "DTMOV")

	If !Empty(AllTrim(cDataMov))
       lRet := .T.
	EndIf

Return lRet


/*/{Protheus.doc} F100Metric()
Registro de Métricas

@author Norberto M de Melo
@since 27/20/2021
@version 1.0
@type static function

@return NIL
/*/
STATIC FUNCTION F100Metric(cMenuOpc AS CHARACTER)
LOCAL cMetricDscr AS CHARACTER

DEFAULT cMenuOpc := ""

__lMetric  := FwLibVersion() >= "20210517"
__cFunBkp   := FunName()
__cFunMet	:= Iif(AllTrim(__cFunBkp)=='RPC',"RPCFINA100",__cFunBkp)

If __lMetric .AND. !EMPTY(cMenuOpc)
    SetFunName(__cFunMet)
    cMetricDscr := "FINA100_ITMENU_" + ALLTRIM(cMenuOpc)
    FwCustomMetrics():setSumMetric(cMetricDscr, "financeiro-protheus_qtd-por-conteudo_total", 1)
    SetFunName(__cFunBkp)
ENDIF

RETURN NIL

/*/{Protheus.doc} FA100Conc
Função que irá verificar se o registro da SE5 está conciliado.

@author		Victor Furukawa
@since		04/11/2021
@version	1.0
@param		cProcTra, character, Numero do Processo (E5_PROCTRA)
@return		lConcilia, logical, Retorna .T. para continuar ou .F. para não continuar
/*/
Static Function FA100Conc(cProcTra As Character) As Logical

	Local aArea			As Array
	Local cFilialSE5	As Character
	Local lConcilia		As Logical
	Local nOrdPTrans	As Numeric

	aArea		:= GetArea()
	lConcilia	:= .T.
	nOrdPTrans	:= OrdProcTransf()
	cFilialSE5	:= FwXFilial("SE5")

	Default		cProctra := ""

	DbSelectArea("SE5")
	SE5->(DbSetOrder(nOrdPTrans)) //E5_FILIAL+E5_PROCTRA
	SE5->(DbSeek(cFilialSE5 + cProctra))
	While !SE5->(EoF()) .And. SE5->(E5_FILIAL + E5_PROCTRA) == cFilialSE5 + cProctra
		If !(Empty(SE5->E5_RECONC))
			lConcilia := MsgYesNo(STR0154 + " " + Iif(SE5->E5_RECPAG == "P", AllTrim(SE5->E5_NUMCHEQ), AllTrim(SE5->E5_DOCUMEN)) + " " + STR0155, STR0156)
			Exit
		EndIf
		SE5->(DbSkip())
	EndDo

	RestArea(aArea)

Return lConcilia

