#INCLUDE "PROTHEUS.CH"
#INCLUDE "FISXATF.CH"

STATIC _lDefTopCTB	:= IfDefTopCTB()

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³DeprecAtivo ³ Autor ³ Claudio D. de Souza   ³ Data ³ 13/12/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retorna a depreciacao do periodo dos bens utilizados na       ³±±
±±³          ³fabricacao de produtos destinados a venda, que sera utilizada ³±±
±±³          ³no calculo do PIS.                                            ³±±
±±³          ³pelo usuario e adicionar na matriz de campos que poder ser    ³±±
±±³          ³alterados                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Utilizacao³ DeprecAtivo(dDtIni,dDtFim)                                   ³±±
±±³Parametros³ dDtIni   -> Data incial do periodo de depreciacao            ³±±
±±³          ³ dDtFim   -> Data final do periodo de depreciacao             ³±±
±±³          ³ lProcBase-> Flag para indicar se deverah processar o calculo ³±±
±±³          ³             pela base (DEFAULT eh .T. = Processa)            ³±±
±±³          ³ cNATBCCrd-> Seu conteudo deve indicar qual o codigo do       ³±±
±±³          ³             credito deve compor os valores retornados. Quando³±±
±±³          ³             não for passada ou tiver seu conteudo vazio,     ³±±
±±³          ³             serao processados todos os registros do SN1.     ³±±
±±³          ³             Exemplo de formato do parametro: "09/11"         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FISCAL                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function DeprecAtivo(dDtIni, dDtFim, lRetVCred, lFiltro, aProcItem, lRelBasApr, lProcBase, cNATBCCrd, cMs_Fil, lContaBem, aTiposExc, lCCBem, lAquisicao, aFilsCalc, cAqDpr)
//Estas funcoes foram retiradas deste fonte e incluido no fonte fisxatf.prx e deverão ser substituidas pelo nome novo
//pois somente o fonte fisxatf sofrerá manutencao - somente foram redirecionada para manter legado
//Alert("Esta funcao foi redirecionada para fonte fisxatf.prx - Devera ser invocada como _DeprecAtivo()")
Return( _DeprecAtivo(@dDtIni, @dDtFim, @lRetVCred, @lFiltro, @aProcItem, @lRelBasApr, @lProcBase, @cNATBCCrd, @cMs_Fil, @lContaBem, @aTiposExc, @lCCBem, @lAquisicao, aFilsCalc, cAqDpr) )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AtfRegF130ºAutor  ³Microsiga           º Data ³  04/05/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Geracao de arquivo temporario para gerar registro F130 do   º±±
±±º          ³SPED FISCAL PIS/COFINS                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function AtfRegF130(cFilProc, dDtIni, dDtFim, cCdBaseIni, cCdBaseFim, cAliasTmp, lRelBasApr, cNATBCCrd, aTiposExc)
//Estas funcoes foram retiradas deste fonte e incluido no fonte fisxatf.prx e deverão ser substituidas pelo nome novo
//pois somente o fonte fisxatf sofrerá manutencao - somente foram redirecionada para manter legado
//Alert("ESta funcao foi redirecionada para o fonte fisxatf.prx - Devera ser chamada por _AtfRegF130()")
Return( _AtfRegF130(@cFilProc, @dDtIni, @dDtFim, @cCdBaseIni, @cCdBaseFim, @cAliasTmp, @lRelBasApr, @cNATBCCrd, @aTiposExc) )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³_DeprecAtivo³ Autor ³ Claudio D. de Souza   ³ Data ³ 13/12/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retorna a depreciacao do periodo dos bens utilizados na       ³±±
±±³          ³fabricacao de produtos destinados a venda, que sera utilizada ³±± 
±±³          ³no calculo do PIS.                                            ³±±
±±³          ³pelo usuario e adicionar na matriz de campos que poder ser    ³±±
±±³          ³alterados                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Utilizacao³ _DeprecAtivo(dDtIni,dDtFim)                                  ³±±
±±³Parametros³ dDtIni   -> Data incial do periodo de depreciacao            ³±±
±±³          ³ dDtFim   -> Data final do periodo de depreciacao             ³±±
±±³          ³ lProcBase-> Flag para indicar se deverah processar o calculo ³±±
±±³          ³             pela base (DEFAULT eh .T. = Processa)            ³±±
±±³          ³ cNATBCCrd-> Seu conteudo deve indicar qual o codigo do       ³±±
±±³          ³             credito deve compor os valores retornados. Quando³±±
±±³          ³             não for passada ou tiver seu conteudo vazio,     ³±±
±±³          ³             serao processados todos os registros do SN1.     ³±±
±±³          ³             Exemplo de formato do parametro: "09/11"         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FISCAL                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function _DeprecAtivo(dDtIni, dDtFim, lRetVCred, lFiltro, aProcItem, lRelBasApr, lProcBase, cNATBCCrd, cMs_Fil, lContaBem, aTiposExc, lCCBem, lAquisicao, aFilsCalc, cAqDpr)

Local aAreaSn1		:= SN1->(GetArea())
Local aAreaSn3		:= SN3->(GetArea())
Local aAreaSn4		:= SN4->(GetArea())
Local aAreaSD1		:= SD1->(GetArea())
Local aArea			:= GetArea()
Local aTemp			:= {}
Local aDatas		:= {}                           
Local aStru 		:= {}

Local cAliasTmp
Local cFiltro
Local cIndTmp
Local cArqIndSD1	:= ""
Local cAtivIni 		:= ""
Local cAtivFim 		:= "ZZZZZZZZZZ"
Local cArqATI		:= ""
Local cArqAtiv		:= "ATI"
Local cMoedAtf      := ""

Local dAquisicao	:= CToD( "" ) 
Local dDtAtivIni	:= CToD( "" ) 
Local dDtAtivFim	:= CToD( "" ) 
Local dPeriodo		:= CToD( "" ) 
Local dLimite		:= CToD( "" ) 

Local lQuery    	:= .F.      
Local lProcItem		:= .F.

Local nRet			:= 0
Local nIndex
Local nBaseCred 	:= 0  
Local nAnoLimite	:= 0 
Local nAnos 		:= 4
Local nMeses		:= 48
Local nMesRef       := 48
Local nIndSD1   	:= 0
Local nBaseItem		:= 0            
Local nRetItem		:= 0
Local nMes 			:= 0
Local nAno 			:= 0
Local nX			:= 1
Local bValAtf       := {|| &( GetNewPar( "MV_VLRATF", '(SD1->D1_TOTAL-SD1->D1_VALDESC)+If(SF4->F4_CREDIPI=="S",0,SD1->D1_VALIPI)-IIf(SF4->F4_CREDICM=="S",SD1->D1_VALICM,0)' ) ) }
Local nVlRatF       := 0
// ALTERADO EM 19/07/2010 - PATRICIA RAJAO
Local nVlBsCl		:= SuperGetMv("MV_BSCREPC",,1) //1 = Valor do bem Imobilizado e 2= Valor de Aquisição do Ativo
Local nFLDBase		:= SuperGetMv("MV_FLDBSCR",,1) //1=D1_TOTAL, 2=D1_BASEIMP
Local aAtivo		:= {}
Local lRecNotFis

Local aRelImp    	:= 	MaFisRelImp("MT100",{ "SD1" })
Local nScanPis 		:= 	0
Local cCpAlPisEn 	:=	""
Local nScanCof 		:= 	0
Local cCpAlCofEn 	:= 	""
Local cXFor			:=	""
Local lShared 		:= .F.
Local aSldSN4, nVlrBaixa
Local cTipoNotIn	:= ""
Local lConsSN1     := .T.
Local lN1MSFIL     := SN1->(FieldPos("N1_MSFIL"))> 0 .AND. FWModeAccess("SN1",3)=="C"

Local aModoComp		:= {}

#IFDEF TOP
	Local cFilBack	:= cFilAnt
	Local nLoop     := 0 
	Local nForFilial:= 0
#ENDIF	

Default cAqDpr := ""
DEFAULT lRetVCred 	:= .F. 
DEFAULT lFiltro	  	:= .F.                                          
DEFAULT lRelBasApr  := .F.                                       
DEFAULT aProcItem 	:= {} 
DEFAULT lProcBase	:=	.T.
DEFAULT	cNATBCCrd	:=	""
DEFAULT	 cMs_Fil    := cFilAnt
DEFAULT	 lContaBem 	:= .T.
//DEFAULT aTiposExc  := {'10','02','42'}
//Email da Liz ( N3-Fiscal ) Enviada em: quinta-feira, 21 de junho de 2012 14:48 --> para alterar os tipos a nao ser considerado na query
//Conforme acabamos de conversar, nos termos da legislação em vigor abaixo transcrita, não devem ser considerados 
//para apropriação e créditos do PIS e da COFINS no SPEDPISCOFINS, 
//registro F120, os tipos de ATIVO : 02, 04, 05, 06, 07, 08, 09 e 10, 
//correspondentes a REAVALIAÇÃO e DEPRECIAÇÃO ACELARADA dos bens, desta forma, 
//solicitamos que seja alterada a DEPRECATIVO acrescentando as  exceções faltantes (not in), nas já existentes :
//"Instrução Normativa SRF nº 457, de 18 de outubro de 2004 - DOU de 5.11.2004
DEFAULT aTiposExc  := {'10','02','42','04','05','06','08','09'} 
DEFAULT	 lCCBem 	:= SuperGetMv("MV_ATFCCMV",.F., .T.) //.T. = Considera Centro Custo Cpo N3_CCUSTO (Padrao) .F. =Considera CC das Movimentacoes (SN4) N4_CCUSTO

DEFAULT	 lAquisicao := .F.  //PARA ESTABELECER DLIMITE --> .F. = Considera DATA INICIO DEPRECIACAO (PADRAO) .T. = DATA DE AQUISICAO 
#IFDEF TOP
	DEFAULT aFilsCalc	:= MatFilCalc(.F.)
#ENDIF
dbSelectArea("SD1")
dbSetOrder(1)

cTipoNotIn	:= ""
#IFNDEF TOP	
For nX := 1 TO Len(aTiposExc)
	cTipoNotIn	+= aTiposExc[nX]
	cTipoNotIn	+= If(nX<Len(aTiposExc), "|", "")
Next
#ELSE
For nX := 1 TO Len(aTiposExc)
	cTipoNotIn	+= "'"+aTiposExc[nX]
	cTipoNotIn	+= If(nX<Len(aTiposExc), "',", "'")
Next
#ENDIF	

dbSelectArea("SN1")
aAdd(aModoComp, FWModeAccess("SN1",1) )
aAdd(aModoComp, FWModeAccess("SN1",2) )
aAdd(aModoComp, FWModeAccess("SN1",3) )
lShared := Ascan(aModoComp, 'C') > 0

lConsSN1 	:= lCCBem  //se for cc bem considera sempre do SN1

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se as depreciacoes serao processadas item a item.³
//³Conteudo do array aProcItem:                              ³
//³[01] = Codigo do ativo inicial a ser processado           ³
//³[02] = Codigo do ativo final a ser processado             ³
//³[03] = Data de aquisicao inicial a ser processada         ³
//³[04] = Data de aquisicao final a ser processada           ³
//³[05] = Alias do arquivo temporario a ser criado           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If GetMv("MV_ATFMDF", ,"0") == "0"
	cMoedAtf := "1"
Else
	cMoedAtf := AllTrim(GetMv("MV_ATFMOED"))
Endif

If Len(aProcItem) > 0

	lProcItem	:= .T.
	
	cAtivIni 	:= aProcItem[01]
	cAtivFim 	:= aProcItem[02]
	dDtAtivIni 	:= aProcItem[03]
	dDtAtivFim 	:= aProcItem[04]	
	cArqAtiv	:= aProcItem[05]
	
	// Cria o arquivo temporário que ira receber as depreciacoes de cada um dos itens
	AADD(aStru,{"BEM"			,"C"	,TamSx3("N4_CBASE")[1],0})
	AADD(aStru,{"ITEM"			,"C"	,TamSx3("N4_ITEM")[1],0})
	AADD(aStru,{"DESCRI"		,"C"	,TamSx3("N1_DESCRIC")[1],0})
	AADD(aStru,{"BASE"			,"N"	,013,2})
	AADD(aStru,{"VRET"			,"N"	,013,2})
	AADD(aStru,{"DTAPR"			,"D"	,008,0})

	AADD(aStru,{"NATBCCRED"		,"C"	,002,0})
	AADD(aStru,{"INDBEMIMOB"	,"C"	,002,0})
	AADD(aStru,{"INDORIGCRD"	,"C"	,001,0})
	AADD(aStru,{"INDUTILBEM"	,"C"	,001,0})
	AADD(aStru,{"CSTPIS"		,"C"	,002,0})
	
	//PARC_OPER_NAO_BC_CRED -- CAMPO 07 DO LEIAUTE - CAMPO VLRBCEXC
	AADD(aStru,{"VLRBCEXC"		,"N"	,018,2})
	
	AADD(aStru,{"VLRBCPIS"		,"N"	,018,2})
	AADD(aStru,{"ALIQPIS"		,"N"	,008,4})
	AADD(aStru,{"VLRPIS"		,"N"	,018,2})
	AADD(aStru,{"CSTCOFINS"		,"C"	,002,0})
	AADD(aStru,{"VLRBCCOFIN"	,"N"	,018,2})
	AADD(aStru,{"ALIQCOFINS"	,"N"	,008,4})
	AADD(aStru,{"VLRCOFINS"		,"N"	,018,2})
	AADD(aStru,{"CODCONTA"		,"C"	,TamSx3("N3_CCONTAB")[1],0})
	AADD(aStru,{"CODCCUSTO"		,"C"	,TamSx3("N3_CCUSTO")[1],0})
	AADD(aStru,{"DESCBEMIMO"	,"C"	,250,0})
	
	//campos a ser utilizado pelo pessoal do N3-FISCAL (caio.martins)
	AADD(aStru,{"NOTAFISCAL"	,"C"	,Len(SN1->N1_NFISCAL),0})
	AADD(aStru,{"SERIE"			,"C"	,Len(SN1->N1_NSERIE),0})
	AADD(aStru,{"FORNECEDOR"	,"C"	,Len(SN1->N1_FORNEC),0})
	AADD(aStru,{"LOJA"			,"C"	,Len(SN1->N1_LOJA ),0})
	AADD(aStru,{"NUMPRO"		,"C"	,10,0})
	AADD(aStru,{"INDPRO"		,"C"	,1,0})

	cArqATI	:=	CriaTrab(aStru)
	dbUseArea(.T.,__LocalDriver,cArqATI,cArqAtiv)
	IndRegua(cArqAtiv,cArqATI,"BEM+ITEM+DTOS(DTAPR)")
	
	AADD(aTemp,{cArqATI,cArqAtiv})

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tratamento para formatar o IN() de ambiente TOP³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(cNATBCCrd)
		cXFor	:=	"'"+SubStr(cNATBCCrd,1,2)+"'"
		For nX := 4 To Len(cNATBCCrd) Step 3
			cXFor	+=	",'"+SubStr(cNATBCCrd,nX,2)+"'"
		Next nX
		
		#IFDEF TOP
			IF TcSrvType() != "AS/400"
				cNATBCCrd	:=	cXFor
			EndIf
		#ENDIF
	EndIf
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Cria um array com todos os periodos que serao processados, para imprimir ³
//³mes a mes cada um dos bens quando necessario.                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lProcItem   
	For dPeriodo := dDtIni to dDtFim
		If nMes <> Month(dPeriodo) .Or. nAno <> Year(dPeriodo)
			nMes 		:= Month(dPeriodo)	                    
			nAno 		:= Year(dPeriodo)
			aAdd(aDatas,{dPeriodo,LastDay(dPeriodo)})      
		Endif
	Next                                        

	//Posiciono o campo correto com a base do PIS da tabela SD1
	If !Empty( nScanPis := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_ALIQPS2"} ) )
		cCpAlPisEn := aRelImp[nScanPis,2]
	EndIf
	
	//Posiciono o campo correto com a base da COFINS da tabela SD1
	If !Empty( nScanCof := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_ALIQCF2"} ) )
		cCpAlCofEn := aRelImp[nScanCof,2]
	EndIf
Else 
	aAdd(aDatas,{dDtIni,dDtFim})							
Endif

#IFDEF TOP
For nForFilial := 1 To Len(aFilsCalc)
	If !aFilsCalc[nForFilial][1]
		Loop
	EndIf
	cFilAnt	:= aFilsCalc[nForFilial][2]
#ENDIF
	#IFDEF TOP
		IF TcSrvType() != "AS/400"
			lQuery := .T.
		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Query utilizada para processar somente as depreciacoes dos ativos com CALCPIS = Sim ou Fracao³
			//| Montagem da somatoria dos valores depreciados (N4_VLROC1).                                  |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		   	cAliasTmp := GetNextAlias()                           
//	       	cFiltro := "SELECT N4_DATA,N4_CBASE,N4_ITEM,N1_CBASE,N1_DESCRIC,N1_CALCPIS,SUM(SN4.N4_VLROC1) SOMA " 
	       	cFiltro := "SELECT N4_DATA,N4_CBASE,N4_ITEM,N1_CBASE,N1_DESCRIC,N1_CALCPIS,SUM(SN4.N4_VLROC"+ AllTrim(cMoedAtf) + " ) SOMA " 
	       	cFiltro += ",N3_AQUISIC,N3_DINDEPR,N1_MESCPIS " 
		   
//		   	If lProcItem
			   	cFiltro += ",N1_ORIGCRD"
			   	cFiltro += ",N1_CSTPIS"
				cFiltro += ",N1_ALIQPIS"
				cFiltro += ",N1_CSTCOFI"
				cFiltro += ",N1_ALIQCOF"
				cFiltro += ",N1_DETPATR"
				cFiltro += ",N1_UTIPATR"
				cFiltro += ",N1_NFITEM"
				cFiltro += ",N1_CODBCC"
				cFiltro += ",N1_NUMPRO"
				cFiltro += ",N1_INDPRO"
                //campos criados para verificar se base do pis considera da nota ou do bem  e se calcula PIS registrado no movimento SN4
				cFiltro += ",N1_CBCPIS"
				cFiltro += ",N4_CALCPIS"
				If lContaBem
					cFiltro += ",N1_NFISCAL, N1_NSERIE, N1_FORNEC, N1_LOJA,N3_CCONTAB"
					If lCCBem
						cFiltro += ",N3_CCUSTO "
					Else
						cFiltro += ",N4_CCUSTO "
					EndIf
				Else
					cFiltro += ",N1_NFISCAL, N1_NSERIE, N1_FORNEC, N1_LOJA,N3_CDEPREC "
					If lCCBem
						cFiltro += ",N3_CCUSTO "
					Else
						cFiltro += ",N4_CCUSTO "
					EndIf
				EndIf
//		   	EndIf
		   	
		   	
		   	cFiltro += " FROM "+RetSqlName("SN1")+" SN1,"
		   	cFiltro +=         RetSqlName("SN3")+" SN3,"
		   	cFiltro +=         RetSqlName("SN4")+" SN4 "
		   	cFiltro += " WHERE "
		   	cFiltro += "N1_FILIAL='"+xFilial("SN1")+"' AND "
			If  !Empty(cMs_Fil) .And. lN1MSFIL  //se tabela SN1 eh compartilhada e passado o parametro cMs_Fil
				//dbSelectArea("SN1")
				cFiltro += "N1_MSFIL='"+cMs_Fil+"' AND "
			EndIf
		   	If lConsSN1  //se considera do cadastro do ativo o campo calcula pis
			   	cFiltro += "N1_CALCPIS IN ('1','S','3') AND "
			   	cFiltro += "(N1_MESCPIS <> 1 OR N1_CODBCC <> '10') AND "
		   	Else         //considera do arquivo de movimento (SN4) tem q ter o campo criado    
		   		cFiltro += "N4_CALCPIS IN ('1','S','3') AND "
			Endif
					   
		   	If lProcItem
	   		   cFiltro += "N1_CBASE >= '" + cAtivIni + "' AND " 
	   		   cFiltro += "N1_CBASE <= '" + cAtivFim + "' AND "
			   cFiltro += "N1_AQUISIC >= '" + DtoS(dDtAtivIni) + "' AND "
			   cFiltro += "N1_AQUISIC <= '" + DtoS(dDtAtivFim) + "' AND "
		   	Endif
		   	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Utilizado pelo SPED Pis/Cofins (FISCAL) para processar um ³
			//³determinado tipo de credito.                              ³
			//³Obs.: Ao alterar o MATR927 analisar o MATA996, pois       ³
			//³as rotinas apresentam as mesmas informações.              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		 If !Empty(cNATBCCrd) .And. FunName() <> "MATR927" .And. FunName() <> "MATA996"
				cFiltro += "N1_CODBCC IN("+cNATBCCrd+") AND "
	 	 EndIf
		   	
		   	cFiltro += "SN1.D_E_L_E_T_=' ' AND "
		   	cFiltro += "N3_FILIAL='"+xFilial("SN3")+"' AND "
		   	cFiltro += "N3_CBASE = N1_CBASE AND "
		   	cFiltro += "N3_ITEM  = N1_ITEM  AND "
		   	
		   	If !Empty(cTipoNotIn)
			   	//Quando o tipo do Item for igual a 10 nao deve ser considerado o valor
			   	//do mesmo para base de calculo de PIS/COFINS
				//Conforme Instrucao Normativa SRF 457 de 18/10/2001 art. 2/4 os tipo 2 e 42
				//nao devem fazer parte do credito de PIS/COFINS " 
				//por solicitacao analista Mauro Afonso Goncalves - N3 - FISCAL
			   	cFiltro += "N3_TIPO NOT IN("+cTipoNotIn+") AND "		                             
		   	EndIf
		   	
		   	cFiltro += "SN3.D_E_L_E_T_=' ' AND "
		   	cFiltro += "N4_FILIAL='"+xFilial("SN4")+"' AND "
		   	cFiltro += "N4_CBASE = N1_CBASE AND "
		   	cFiltro += "N4_ITEM  = N1_ITEM  AND "
		   	cFiltro += "N4_TIPO  = N3_TIPO  AND "
		   	cFiltro += "N4_SEQ	= N3_SEQ AND "
		   	cFiltro += "N4_DATA>='"+Dtos(dDtIni)+"' AND "
		   	cFiltro += "N4_DATA<='"+Dtos(dDtFim)+"' AND "
		   	cFiltro += "N4_OCORR IN ('06','10') AND "
		   	cFiltro += "N4_TIPOCNT ='3' AND "
		   	cFiltro += "SN4.D_E_L_E_T_=' '"
		   	
		   	cFiltro += " GROUP BY N4_DATA,N4_CBASE,N4_ITEM,N1_CBASE,N1_DESCRIC,N1_CALCPIS"		   
		    	cFiltro += ",N3_AQUISIC,N3_DINDEPR,N1_MESCPIS " 
		   
//		   	If lProcItem
			   	cFiltro += ",N1_ORIGCRD"
			   	cFiltro += ",N1_CSTPIS"
				cFiltro += ",N1_ALIQPIS"
				cFiltro += ",N1_CSTCOFI"
				cFiltro += ",N1_ALIQCOF"
				cFiltro += ",N1_DETPATR"
				cFiltro += ",N1_UTIPATR"
				cFiltro += ",N1_NFITEM"
				cFiltro += ",N1_CODBCC"
				cFiltro += ",N1_NUMPRO"
				cFiltro += ",N1_INDPRO"
                //campos criados para verificar se base do pis considera da nota ou do bem  e se calcula PIS registrado no movimento SN4
				cFiltro += ",N1_CBCPIS"
				cFiltro += ",N4_CALCPIS"
				If lContaBem
					cFiltro += ",N1_NFISCAL, N1_NSERIE, N1_FORNEC, N1_LOJA,N3_CCONTAB "
					If lCCBem
						cFiltro += ",N3_CCUSTO "
					Else
						cFiltro += ",N4_CCUSTO "
					EndIf

				Else
					cFiltro += ",N1_NFISCAL, N1_NSERIE, N1_FORNEC, N1_LOJA,N3_CDEPREC "
					If lCCBem
						cFiltro += ",N3_CCUSTO "
					Else
						cFiltro += ",N4_CCUSTO "
					EndIf
				EndIf
//		   	EndIf                  

			If ExistBlock( 'DEPRECQRY' )
				cFiltro := Execblock( 'DEPRECQRY' , .F. , .F. , {cFiltro} )
			Endif			
		   	
		   	cFiltro := ChangeQuery(cFiltro)
		   	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cFiltro),cAliasTmp,.T.,.T.)
		   
		   	// Gravando Temporario do processamento por item
			Do While !(cAliasTmp)->(Eof())

				nAliqPis	:=	0
				nAliqCof	:=	0	
				cOrigCred	:=	""
				cCstPis	:=	""
				cCstCofin	:=	""
				lAchouSF4	:=	.F. 			

	             //campos criados para verificar se base do pis considera da nota ou do bem  e se calcula PIS registrado no movimento SN4
				If ! ( (cAliasTmp)->N4_CALCPIS $ " |1|S|3" )  //nao calcula pis no mov. avanca registro-colocado space(1)tb devido mov. antigos
					(cAliasTmp)->( dbSkip() )
					Loop
				EndIf
				
				nBaseItem 	:= 0
				nMeses		:= IIf(!Empty((cAliasTMP)->N1_MESCPIS),(cAliasTMP)->N1_MESCPIS, 48 )
				nMesRef		:= Iif(!Empty((cAliasTMP)->N1_MESCPIS),(cAliasTMP)->N1_MESCPIS-1, 47 )

				If ! lAquisicao
					dLimite 		:= Iif((cAliasTMP)->N3_AQUISIC<(cAliasTMP)->N3_DINDEPR, MonthSum(Stod((cAliasTMP)->N3_DINDEPR),nMesRef), MonthSum(Stod((cAliasTMP)->N3_AQUISIC),nMesRef))    				
					If Month(dLimite)==1 .And. Iif((cAliasTMP)->N3_AQUISIC<(cAliasTMP)->N3_DINDEPR, Month(Stod((cAliasTMP)->N3_DINDEPR)), Month(Stod((cAliasTMP)->N3_AQUISIC)))==1
						dLimite	:= Ctod(Alltrim(Str(Day(dLimite)))+"/"+"12"+"/"+Alltrim(Str(Year(dLimite)-1)))
					Endif
				Else
					dLimite 		:= MonthSum(Stod((cAliasTMP)->N3_AQUISIC),nMesRef)
					If Month(dLimite)==1 .And. Month(Stod((cAliasTMP)->N3_AQUISIC))==1
						dLimite	:= Ctod(Alltrim(Str(Day(dLimite)))+"/"+"12"+"/"+Alltrim(Str(Year(dLimite)-1)))
					Endif
				EndIf
			
				If StoD((cAliasTMP)->N4_DATA)<=LastDay(dLimite) .Or. (cAliasTMP)->N1_CALCPIS=="1" .Or. ( (cAliasTMP)->N4_CALCPIS=="1" )
					
					nRet+=(cAliasTMP)->SOMA
				   	
					If lProcItem
				   	
						If (cAliasTMP)->N1_CALCPIS $"3|1" .And. ExistBlock("DEPREATF")
							nBaseItem		:= ExecBlock("DEPREATF",.f.,.f.,{cAliasTMP,cAliasTMP, "F120"})
						Else

							lRecNotFis := !Empty((cAliasTmp)->(N1_NFISCAL+N1_NSERIE+N1_FORNEC+N1_LOJA)) .And.;
											SD1->(MsSeek(xFilial("SD1")+(cAliasTmp)->(N1_NFISCAL+N1_NSERIE+N1_FORNEC+N1_LOJA)))
											
							//campos criados para verificar se base do pis considera da nota ou do bem  e se calcula PIS registrado no movimento SN4
							If lRecNotFis  //se tem os campos e achou nota fiscal verifica novo campo
								lRecNotFis := If(( Empty((cAliasTmp)->N1_CBCPIS) .Or.  (cAliasTmp)->N1_CBCPIS == "1" ), lRecNotFis, .F. )
							EndIf
					   		
							If lRecNotFis
								
								While SD1->(! Eof() .And. SD1->(D1_FILIAL+D1_DOC+D1_SERIE+D1_FORNECE+D1_LOJA)==xFilial("SD1")+(cAliasTmp)->(N1_NFISCAL+N1_NSERIE+N1_FORNEC+N1_LOJA))
								
									If ((SD1->D1_ITEM==(cAliasTmp)->N1_NFITEM .And. (cAliasTmp)->N1_NFITEM!=' ') .Or.; 
		    							((cAliasTmp)->N1_CBASE==Left(SD1->D1_CBASEAF, TamSx3("N1_CBASE")[1])))
	
										lAchouSF4	:=	SF4->(MsSeek(xFilial("SF4")+SD1->D1_TES))
										Exit

									EndIf

									SD1->(dbSkip())

								End
								
								If lAchouSF4
									nAliqPis	:=	SD1->&(AllTrim(cCpAlPisEn))
									nAliqCof	:=	SD1->&(AllTrim(cCpAlCofEn))	
									cOrigCred	:=	Iif(Left(SD1->D1_CF,1)=="3","1","0")
									cCstPis		:=	SF4->F4_CSTPIS
									cCstCofin	:=	SF4->F4_CSTCOF
									
								EndIf																			
							EndIf
						EndIf
				   	    
						If (cAliasTMP)->N1_NFISCAL <> ' '
							SF4->(MsSeek(xFilial("SF4")+SD1->D1_TES))
							
							lPisMajor	:=  If (SF4->F4_MALQPIS <> 0, .T., .F.) 
							lCofMajor	:=  If (SF4->F4_MALQCOF <> 0, .T., .F.) 
							
							If lPisMajor .And. lCofMajor								
								(cAliasTMP)->(dbSkip())
								Loop 
							Endif
						Endif
						
						DeprecTMP((cAliasTMP)->N4_CBASE,;
								(cAliasTMP)->N4_ITEM,;
								(cAliasTMP)->N1_DESCRIC,;
								nBaseItem,;
								(cAliasTMP)->SOMA,;
								SToD((cAliasTMP)->N4_DATA),;
								cArqAtiv,;
								If(lContaBem, (cAliasTMP)->N3_CCONTAB, (cAliasTMP)->N3_CDEPREC),;
								If(lCCBem, (cAliasTMP)->N3_CCUSTO, (cAliasTMP)->N4_CCUSTO),;
								Iif(Empty(cOrigCred),(cAliasTMP)->N1_ORIGCRD,cOrigCred),;
								Iif(Empty(cCstPis),(cAliasTMP)->N1_CSTPIS,cCstPis),;
								Iif(nAliqPis==0,(cAliasTMP)->N1_ALIQPIS,nAliqPis),;
								Iif(Empty(cCstCofin),(cAliasTMP)->N1_CSTCOFI,cCstCofin),;
								Iif(nAliqCof==0,(cAliasTMP)->N1_ALIQCOF,nAliqCof),;
								(cAliasTMP)->N1_DETPATR,;
								(cAliasTMP)->N1_UTIPATR,;
								(cAliasTMP)->N1_CODBCC,;
								(cAliasTMP)->N1_NFISCAL,;
								(cAliasTMP)->N1_NSERIE,;
								(cAliasTMP)->N1_FORNEC,;
								(cAliasTMP)->N1_LOJA,;
								(cAliasTMP)->N1_NUMPRO,;
								(cAliasTMP)->N1_INDPRO	)	//Segundo consulta ao analista Arnaldo Raymundo, o sistema soh trata este lancamento
					Endif	
				Endif
				
				(cAliasTmp)->(dbSkip())
			Enddo
		   	(cAliasTmp)->( dbCloseArea() ) 
				
			//Flag para deixar a opcao de processar a base de credito sobre o valor de aquisicao ou nao
			If lProcBase
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Query utilizada para processar somente as depreciacoes dos ativos com CALCPIS = Fracao³
				//| Montagem da base do credito (N3_VORIG1).                                             |
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			   	dbSelectArea("SN1")
			    aStruSN3 	:= SN3->( dbStruct()) 
				cAliasTmp 	:= GetNextAlias() 
	
				cFiltro := "SELECT N1_CBASE,N3_AQUISIC,N3_DINDEPR,N3_VORIG1,N1_QUANTD,N1_ITEM,N3_DLANCTO,N1_DESCRIC "
				cFiltro += ",N1_MESCPIS " 
				// o Campo N1_VLAQUIS contém o valor da aquisição informado diretamnente no ATIVO
				cFiltro += ",N1_VLAQUIS "
				
//			   	If lProcItem
				   	cFiltro += ",N1_ORIGCRD"
				   	cFiltro += ",N1_CSTPIS"
					cFiltro += ",N1_ALIQPIS"
					cFiltro += ",N1_CSTCOFI"
					cFiltro += ",N1_ALIQCOF"
					cFiltro += ",N1_DETPATR"
					cFiltro += ",N1_UTIPATR"
					cFiltro += ",N1_NFITEM"
					cFiltro += ",N1_CODBCC"
					cFiltro += ",N1_NUMPRO"
					cFiltro += ",N1_INDPRO"
	                //campos criados para verificar se base do pis considera da nota ou do bem  e se calcula PIS registrado no movimento SN4
					cFiltro += ",N1_CBCPIS"
					If lContaBem
						cFiltro += ",N1_NFISCAL, N1_NSERIE, N1_FORNEC, N1_LOJA,N3_CCONTAB,N3_CCUSTO "
					Else
						cFiltro += ",N1_NFISCAL, N1_NSERIE, N1_FORNEC, N1_LOJA,N3_CDEPREC,N3_CCUSTO "
					EndIf
//			   	EndIf
				//acrescentado para utilizacao na funcao SaldoSN4 para extrair o valor das baixas sofridas pelo bem
				cFiltro += ",N1_FILIAL, N3_TIPO, N3_SEQ, N3_SEQREAV "
				
				cFiltro += " FROM "+RetSqlName("SN1")+" SN1,"
				cFiltro +=         RetSqlName("SN3")+" SN3 "
				cFiltro += " WHERE "
				cFiltro += " N1_FILIAL='"+xFilial("SN1")+"' AND "
				If !Empty(cMs_Fil) .And. lN1MSFIL   //se tabela SN1 eh compartilhada e passado o parametro cMs_Fil
					//dbSelectArea("SN1")
					cFiltro += " N1_MSFIL='"+cMs_Fil+"' AND "
				EndIf
				//cFiltro += " N1_CALCPIS='3' AND "
				cFiltro += " N1_CALCPIS IN ('1','S','3') AND "
				
				If !Empty(cNATBCCrd)
					cFiltro += " N1_CODBCC  IN ( "+cNATBCCrd+" ) AND "
				EndIf
			    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			    //³Verifica se deverao ser processadas as depreciacoes por ativo.³
			    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			    If lProcItem
		   		    cFiltro += " N1_CBASE >= '" + cAtivIni + "' AND " 
		   		    cFiltro += " N1_CBASE <= '" + cAtivFim + "' AND "
				    cFiltro += " N1_AQUISIC >= '" + DtoS(dDtAtivIni) + "' AND "
				    cFiltro += " N1_AQUISIC <= '" + DtoS(dDtAtivFim) + "' AND "
			    Endif
			    
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Utilizado pelo SPED Pis/Cofins (FISCAL) para processar um ³
				//³determinado tipo de credito                               ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			   	If !Empty(cNATBCCrd) 
					cFiltro += " N1_CODBCC IN("+cNATBCCrd+") AND "
			   	EndIf

				cFiltro += " SN1.D_E_L_E_T_=' ' AND "
				cFiltro += " N3_FILIAL='"+xFilial("SN3")+"' AND "
				cFiltro += " N3_CBASE=N1_CBASE AND "
				cFiltro += " N3_ITEM=N1_ITEM AND "
	 		    If !Empty(cTipoNotIn)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Quando o tipo do Item for igual a 10 nao deve ser considerado o valor³
					//³do mesmo para base de calculo de PIS/COFINS                          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					//Conforme Instrucao Normativa SRF 457 de 18/10/2001 art. 2/4 os tipo 2 e 42
					//nao devem fazer parte do credito de PIS/COFINS " 
					//por solicitacao analista Mauro Afonso Goncalves - N3 - FISCAL
				   	cFiltro += " N3_TIPO NOT IN("+cTipoNotIn+") AND "		                             
		  		EndIf
				cFiltro += " SN3.D_E_L_E_T_=' ' " 
	
				If lFiltro
	           		cFiltro += " AND N1_AQUISIC >='"+Dtos(dDtIni)+"' AND "
			   		cFiltro += " N1_AQUISIC <='"+Dtos(dDtFim)+"' "
				Endif
				
				if cAqDpr = "1"
			   			cFiltro += " AND EXISTS ( SELECT  N4_FILIAL,N4_CBASE,N4_ITEM,N4_TIPO,N4_SEQREAV "
						cFiltro +=	" FROM  "+RetSqlName("SN4")+" SN4 "
		          		cFiltro +=	" WHERE " 
						cFiltro +=	" N4_FILIAL 	= SN3.N3_FILIAL AND "  
						cFiltro +=	" N4_CBASE 	= SN3.N3_CBASE AND " 
						cFiltro +=	" N4_ITEM 	= SN3.N3_ITEM AND "
						cFiltro +=	" N4_TIPO 	= SN3.N3_TIPO AND " 
						cFiltro +=	" N4_SEQREAV 	= SN3.N3_SEQREAV AND " 
						cFiltro +=	" N4_OCORR 	= '05' AND  "
						cFiltro +=	" N4_DATA 	<= '"+Dtos(dDtFim)+"' AND " 
						cFiltro +=	" SN4.D_E_L_E_T_ = '') "
					elseif cAqDpr = "2"
						cFiltro += " AND EXISTS ( SELECT  N4_FILIAL,N4_CBASE,N4_ITEM,N4_TIPO,N4_SEQREAV "
						cFiltro +=	" FROM  "+RetSqlName("SN4")+" SN4 "
		          		cFiltro +=	" WHERE " 
						cFiltro +=	" N4_FILIAL 	= SN3.N3_FILIAL AND "  
						cFiltro +=	" N4_CBASE 	= SN3.N3_CBASE AND " 
						cFiltro +=	" N4_ITEM 	= SN3.N3_ITEM AND "
						cFiltro +=	" N4_TIPO 	= SN3.N3_TIPO AND " 
						cFiltro +=	" N4_SEQREAV 	= SN3.N3_SEQREAV AND " 
						cFiltro +=	" N4_OCORR		= '06' AND  "
						cFiltro +=	" N4_DATA 	<= '"+Dtos(dDtFim)+"' AND " 
						cFiltro +=	" SN4.D_E_L_E_T_ = '') "
					EndIf
					
				cFiltro := ChangeQuery(cFiltro)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cFiltro),cAliasTmp,.T.,.T.)
				
				For nLoop := 1 To Len( aStruSN3 ) 
					If AllTrim( aStruSN3[ nLoop, 1 ] ) $ "N3_AQUISIC|N3_DINDEPR|N3_VORIG1"
						TcSetField( cAliasTMP, aStruSN3[nLoop,1], aStruSN3[nLoop,2], aStruSN3[nLoop,3],aStruSN3[ nLoop,4])
					EndIf 					
				Next nLoop 								

				While !( cAliasTMP )->( Eof() ) 
					
					If nVlBsCl==2
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Como a base de cálculo será o valor da aquisição do ativo , não será necessário ³
						//³processar todos os registros da tabela SN3, pois o valor total já está na SN1.  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If AScanX(aAtivo, {|x| x[1]==( cAliasTMP )->N1_CBASE .And. x[2]==( cAliasTMP )->N1_ITEM } ) > 0
							( cAliasTMP )->( dbSkip() )
							Loop
						Else
							Aadd(aAtivo,{ ( cAliasTMP )->N1_CBASE, ( cAliasTMP )->N1_ITEM })
						EndIf
					EndIf
					
					nBaseItem 	:= 0
					nMeses		:= IIf(!Empty((cAliasTMP)->N1_MESCPIS),(cAliasTMP)->N1_MESCPIS, 48 )
					nMesRef  	:= IIf(!Empty((cAliasTMP)->N1_MESCPIS),(cAliasTMP)->N1_MESCPIS-1, 47 )

					If ! lAquisicao				
						dAquisicao  	:= Iif((cAliasTMP)->N3_AQUISIC<(cAliasTMP)->N3_DINDEPR,(cAliasTMP)->N3_DINDEPR,(cAliasTMP)->N3_AQUISIC) 
						dLimite		:= MonthSum(dAquisicao,nMesRef)
						If Month(dLimite)==1 .And. Month(dAquisicao)==1
							dLimite:= Ctod(Alltrim(Str(Day(dLimite)))+"/"+"12"+"/"+Alltrim(Str(Year(dLimite)-1)))
						Endif
					Else
						dAquisicao  	:= (cAliasTMP)->N3_AQUISIC
						dLimite		:= MonthSum(dAquisicao,nMesRef)
						If Month(dLimite)==1 .And. Month(dAquisicao)==1
							dLimite:= Ctod(Alltrim(Str(Day(dLimite)))+"/"+"12"+"/"+Alltrim(Str(Year(dLimite)-1)))
						Endif
					EndIf
						
	                // Apura o valor de 1/48 ou 1/24             
					// O array aDatas ira conter a data inicial e final passadas nos parametros da rotina
					// ou todos os periodos, quando for necessario detalhar cada bem processado.
					For nX := 1 to Len(aDatas)
						If aDatas[nX][02] >= dAquisicao .And. aDatas[nX][01] <= dLimite
						
							nAliqPis	:=	0
							nAliqCof	:=	0	
							cOrigCred	:=	""
							cCstPis		:=	""
							cCstCofin	:=	""
							lAchouSF4	:=	.F. 

							If ExistBlock("DEPREATF")
								nBaseCred 	+= ExecBlock("DEPREATF",.f.,.f.,{cAliasTMP,cAliasTMP, ""})/nMeses
								nBaseItem	:= ExecBlock("DEPREATF",.f.,.f.,{cAliasTMP,cAliasTMP, ""})/nMeses
							Else
								lRecNotFis := 	!Empty((cAliasTMP)->N1_CBASE) .And. ;  //se codigo base preenchido
												!Empty((cAliasTmp)->(N1_NFISCAL+N1_NSERIE+N1_FORNEC+N1_LOJA)) .And.;  //se SN1 tem vinculo com nota fiscal
												SD1->(MsSeek(xFilial("SD1")+(cAliasTmp)->(N1_NFISCAL+N1_NSERIE+N1_FORNEC+N1_LOJA)))  // se encontrou nota fiscal
												
								//campos criados para verificar se base do pis considera da nota ou do bem  e se calcula PIS registrado no movimento SN4
								If lRecNotFis  //se tem os campos e achou nota fiscal verifica novo campo
									lRecNotFis := If(( Empty((cAliasTmp)->N1_CBCPIS) .Or.  (cAliasTmp)->N1_CBCPIS == "1" ), lRecNotFis, .F. )
								EndIf
								
								If lRecNotFis  //se recupera dados da nota fiscal de entrada
									
									While SD1->(! Eof() .And. ;
											SD1->(D1_FILIAL+D1_DOC+D1_SERIE+D1_FORNECE+D1_LOJA)==xFilial("SD1")+(cAliasTmp)->(N1_NFISCAL+N1_NSERIE+N1_FORNEC+N1_LOJA))

										lAchouSF4	:=	.F. 

										lAchouSF4	:=	SF4->(MsSeek(xFilial("SF4")+SD1->D1_TES))
										
										If lAchouSF4
											If 	( (cAliasTmp)->N1_NFITEM!=' '.And. SD1->D1_ITEM==(cAliasTmp)->N1_NFITEM ) .Or.;
												( (cAliasTmp)->N1_NFITEM==' '.And. SF4->F4_BENSATF = '2' .And. (cAliasTmp)->N1_CBASE =  SUBS(D1_CBASEAF, 1, Len(SN1->N1_CBASE)) .And. (cAliasTmp)->N1_ITEM =  SUBSTRING(D1_CBASEAF, Len(SN1->N1_CBASE)+1, Len(SN1->N1_ITEM)) ) .Or.;
											    ( (cAliasTmp)->N1_NFITEM==' '.And. SF4->F4_BENSATF = '1' .And. (cAliasTmp)->N1_CBASE =  SUBS(D1_CBASEAF, 1, Len(SN1->N1_CBASE)) )
												Exit
											EndIf	
										EndIf	
										SD1->(dbSkip())
									EndDo
									
                                    //se encontrou o item da nota fiscal referente ao ativo
									If lAchouSF4
										nAliqPis	:=	SD1->&(AllTrim(cCpAlPisEn))
										nAliqCof	:=	SD1->&(AllTrim(cCpAlCofEn))	
										cOrigCred	:=	Iif(Left(SD1->D1_CF,1)=="3","1","0")
										cCstPis		:=	SF4->F4_CSTPIS
										cCstCofin	:=	SF4->F4_CSTCOF
										lPisMajor	:=  If (SF4->F4_MALQPIS <> 0, .T., .F.) 
										lCofMajor	:=  If (SF4->F4_MALQCOF <> 0, .T., .F.) 
									EndIf	
																											
								EndIf
		
								If lAchouSF4   //achou o TES e conseguentemente tb achou a nota de entrada
									
									If lPisMajor .And. lCofMajor								
										Exit // Saída do For...Next
									Endif
								
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³A rotina a seguir e uma protecao devido a falha no dicionario padrao    ³
									//³onde a expressao cadastrada no parametro MV_VLRATF foi cadastrada com   ³
									//³Aspas, isso faz com que a macro do codblock retorne uma string.         ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									nVlRatF := Eval( bValAtf )
									If ValType(nVlRatF) <> "N"
										nVlRatF := (SD1->D1_TOTAL-SD1->D1_VALDESC)+If(SF4->F4_CREDIPI=="S",0,SD1->D1_VALIPI)-IIf(SF4->F4_CREDICM=="S",SD1->D1_VALICM,0)
									EndIf

									nVlrBaixa := 0
									aSldSN4	:= SaldoSN4( ( cAliasTMP )->N1_FILIAL,( cAliasTMP )->N1_CBASE,( cAliasTMP )->N1_ITEM,( cAliasTMP )->N3_TIPO,( cAliasTMP )->N3_SEQ,( cAliasTMP )->N3_SEQREAV,/*aMoeda*/,dDtFim/*dDataSLD*/,.T./*lAgrupa*/,dAquisicao/*dDataIni*/,/*cSaldo*/)
									If Len(aSldSN4) > 0
										nVlrBaixa:= aSldSN4[1,2,8]  //baixas do ativo desde a data de aquisicao ateh data fim 
									EndIf
									// Variável que armazena o conteúdo do Parâmentro MV_BSCREPC
									IF nVlBsCl == 1
										nBaseCred 	+= ((nVlRatF-nVlrBaixa)/nMeses)/(SD1->D1_QUANT/(cAliasTMP)->N1_QUANTD)
										nBaseItem	:= ((nVlRatF-nVlrBaixa)/nMeses)/(SD1->D1_QUANT/(cAliasTMP)->N1_QUANTD)
									Else
										If SF4->F4_BENSATF == "2"
											if nFLDBase == 1 // Usar D1_TOTAL
												nBaseItem	:=  ( SD1->D1_TOTAL-nVlrBaixa) / nMeses
											else
												nBaseItem	:=  ( SD1->D1_BASIMP6-nVlrBaixa) / nMeses
											endif	
										ElseIf SF4->F4_BENSATF == "1"
											if nFLDBase == 1 // Usar D1_TOTAL
												nBaseItem	:=  ( (SD1->D1_TOTAL/SD1->D1_QUANT)-nVlrBaixa) / nMeses
											else
												nBaseItem	:=  ( (SD1->D1_BASIMP6/SD1->D1_QUANT)-nVlrBaixa) / nMeses
											endif
										EndIf

										nBaseCred += nBaseItem

									EndIf									
								
								ElseIf !Empty((cAliasTMP)->N1_CBASE)
								
									If (cAliasTMP)->N1_NFISCAL <> ' '
										SF4->(MsSeek(xFilial("SF4")+SD1->D1_TES))
										
										lPisMajor	:=  If (SF4->F4_MALQPIS <> 0, .T., .F.) 
										lCofMajor	:=  If (SF4->F4_MALQCOF <> 0, .T., .F.) 
										
										If lPisMajor .And. lCofMajor								
											Exit // Saída do For...Next											
										Endif
									Endif
									
									nVlrBaixa := 0
									aSldSN4	:= SaldoSN4( ( cAliasTMP )->N1_FILIAL,( cAliasTMP )->N1_CBASE,( cAliasTMP )->N1_ITEM,( cAliasTMP )->N3_TIPO,( cAliasTMP )->N3_SEQ,( cAliasTMP )->N3_SEQREAV,/*aMoeda*/,dDtFim/*dDataSLD*/,.T./*lAgrupa*/,dAquisicao/*dDataIni*/,/*cSaldo*/)
									
									If Len(aSldSN4) > 0
										nVlrBaixa:= aSldSN4[1,2,8]  //baixas do ativo desde a data de aquisicao ateh data fim 
									EndIf
									
									// Variável que armazena o conteúdo do Parâmentro MV_BSCREPC
									IF nVlBsCl == 1	
										nBaseCred 	+= (( cAliasTMP )->N3_VORIG1-nVlrBaixa) / nMeses
								   		nBaseItem	:= (( cAliasTMP )->N3_VORIG1-nVlrBaixa) / nMeses
									Else
										nBaseCred 	+= ( ( cAliasTMP )->N1_VLAQUIS-nVlrBaixa) / nMeses
										nBaseItem	:= ( ( cAliasTMP )->N1_VLAQUIS-nVlrBaixa) / nMeses
									EndIf
								EndIf
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Armazena os valores das bases por item+data caso seja solicitado³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If lProcItem						
								If lAchouSF4
									nAliqPis	:=	SD1->&(AllTrim(cCpAlPisEn))
									nAliqCof	:=	SD1->&(AllTrim(cCpAlCofEn))	
									cOrigCred	:=	Iif(Left(SD1->D1_CF,1)=="3","1","0")
									cCstPis		:=	SF4->F4_CSTPIS
									cCstCofin	:=	SF4->F4_CSTCOF
									lPisMajor	:=  If (F4_MALQPIS <> 0, .T., .F.) 
									lCofMajor	:=  If (F4_MALQCOF <> 0, .T., .F.) 								

									If lPisMajor .And. lCofMajor								
										Exit // Saída do For...Next 
									Endif
								
								EndIf
							
								DeprecTMP((cAliasTMP)->N1_CBASE,;
										(cAliasTMP)->N1_ITEM,;
										(cAliasTMP)->N1_DESCRIC,;
										nBaseItem,;
										0,;
										aDatas[nX][02],;
										cArqAtiv,;
										If(lContaBem, (cAliasTMP)->N3_CCONTAB, (cAliasTMP)->N3_CDEPREC),;										
										(cAliasTMP)->N3_CCUSTO,;
										Iif(Empty(cOrigCred),(cAliasTMP)->N1_ORIGCRD,cOrigCred),;
										Iif(Empty(cCstPis),(cAliasTMP)->N1_CSTPIS,cCstPis),;
										Iif(nAliqPis==0,(cAliasTMP)->N1_ALIQPIS,nAliqPis),;
										Iif(Empty(cCstCofin),(cAliasTMP)->N1_CSTCOFI,cCstCofin),;
										Iif(nAliqCof==0,(cAliasTMP)->N1_ALIQCOF,nAliqCof),;
										(cAliasTMP)->N1_DETPATR,;
										(cAliasTMP)->N1_UTIPATR,;
										(cAliasTMP)->N1_CODBCC,;
										(cAliasTMP)->N1_NFISCAL,;
										(cAliasTMP)->N1_NSERIE,;
										(cAliasTMP)->N1_FORNEC,;
										(cAliasTMP)->N1_LOJA,;
										(cAliasTMP)->N1_NUMPRO,;
										(cAliasTMP)->N1_INDPRO	)	//Segundo consulta ao analista Arnaldo Raymundo, o sistema soh trata este lancamento
							Endif
						EndIf 										   
					Next
			   
					(cAliasTMP)->(dbSkip()) 		   
				EndDo
				(cAliasTmp)->( dbCloseArea() )
			EndIf
		Else	
	#ENDIF 
			SF4->(DbSetOrder (1))
			cFiltro := "N1_FILIAL='"+xFilial("SN1")+"'"
			If !Empty(cMs_Fil) .And. lN1MSFIL  //se tabela SN1 eh compartilhada e passado o parametro cMs_Fil
				//dbSelectArea("SN1")
				cFiltro += " .And. N1_MSFIL='"+cMs_Fil+"' "
			EndIf
			cFiltro += " .And. (N1_CALCPIS$'1S3')"
			If lFiltro
                cFiltro += ' .And. DTOS(N1_AQUISIC)>="'+DTOS(dDtIni)+'".And. DTOS(N1_AQUISIC)<="'+DTOS(dDtFim)+'" '
			Endif                               
		    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		    //³Verifica se deverao ser processadas as depreciacoes por ativo.³
		    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		    If lProcItem
	   		    cFiltro += " .And. N1_CBASE >= '" + cAtivIni + "' " 
	   		    cFiltro += " .And. N1_CBASE <= '" + cAtivFim + "' "
			    cFiltro += " .And. DTOS(N1_AQUISIC) >= '" + DtoS(dDtAtivIni) + "' "
			    cFiltro += " .And. DTOS(N1_AQUISIC) <= '" + DtoS(dDtAtivFim) + "' "
		    Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Utilizado pelo SPED Pis/Cofins (FISCAL) para processar um ³
			//³determinado tipo de credito                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		    If !Empty(cNATBCCrd)
		    	cFiltro += " .And. N1_CODBCC$'"+cNATBCCrd+"' "
		    EndIf
		    //
			dbSelectArea("SN1")
			cIndTmp := CriaTrab(,.F.)
			IndRegua("SN1",cIndTmp,IndexKey(),,cFiltro)
			nIndex := RetIndex("SN1")
			#IFNDEF TOP	
				dbSetIndex(cIndTmp+OrdBagExt())
			#ENDIF	
			dbSetOrder(nIndex+1)
			dbGotop()
			cAliasTmp := "SN1"
			DbSelectArea(cAliasTmp)
			While !Eof()
				DbSelectArea("SN3")
				dbSeek(xFilial("SN3")+SN1->(N1_CBASE+N1_ITEM))
				While SN3->(!Eof()) .And. xFilial("SN3")+SN1->(N1_CBASE+N1_ITEM) ==;
					   SN3->(N3_FILIAL+N3_CBASE+N3_ITEM)
					   
					If !Empty(cTipoNotIn) .And. SN3->N3_TIPO $ cTipoNotIn   // "10|02|42"
						//Quando o tipo do Item for igual a 10 nao deve ser considerado o valor
						//do mesmo para base de calculo de PIS/COFINS
						//Conforme Instrucao Normativa SRF 457 de 18/10/2001 art. 2/4 os tipo 2 e 42
						//nao devem fazer parte do credito de PIS/COFINS " 
						//por solicitacao analista Mauro Afonso Goncalves - N3 - FISCAL
						SN3->( dbSkip() )
						Loop
					EndIf
					   
					// Para verificar os valores de credito de cada item
					nBaseItem 	:= 0
					nRetItem		:= 0
					
					If lProcBase .And. SN1->N1_CALCPIS $ "3|1" 
					
						// Verifica se esta dentro do periodo de 48 meses ( 4 anos ) ou 24 meses ( 2 anos ) desde a aquisicao 
                        nMeses      := IIf(!Empty(SN1->N1_MESCPIS),SN1->N1_MESCPIS, 48 )

						nMesRef		:= IIf(!Empty(SN1->N1_MESCPIS),SN1->N1_MESCPIS-1, 47 )
						dAquisicao  := IIF ( SN3->N3_AQUISIC < SN3->N3_DINDEPR, SN3->N3_DINDEPR, SN3->N3_AQUISIC)
						dLimite		:=  MonthSum(dAquisicao,nMesRef)
						If Month(dLimite)==1 .And. Month(dAquisicao)==1
							dLimite:= Ctod(Alltrim(Str(Day(dLimite)))+"/"+"12"+"/"+Alltrim(Str(Year(dLimite)-1)))
						Endif
							
                        // Apura o valor de 1/48 ou 1/24             
						// O array aDatas ira conter a data inicial e final passadas nos parametros da rotina
						// ou todos os periodos, quando for necessario detalhar cada bem processado.
						For nX := 1 to Len(aDatas) 
							If aDatas[nX][02] >= dAquisicao .And. aDatas[nX][01] <= dLimite
							
								nAliqPis	:=	0
								nAliqCof	:=	0	
								cOrigCred	:=	""
								cCstPis		:=	""
								cCstCofin	:=	""
								lAchouSF4	:=	.F. 

								If nIndSD1 == 0
									nIndSD1++
									cArqIndSD1 := CriaTrab(,.F.)
									SD1->(IndRegua("SD1",cArqIndSD1,"D1_FILIAL+D1_CBASEAF"))
								EndIf
								If ExistBlock("DEPREATF")
									nBaseCred	+= ExecBlock("DEPREATF",.f.,.f.,{"SN1","SN3",""})/nMeses
									nBaseItem  	:= ExecBlock("DEPREATF",.f.,.f.,{"SN1","SN3",""})/nMeses
								Else
								
									lRecNotFis := 	!Empty(SN1->N1_CBASE) .And. ;
						   							SD1->(MsSeek(xFilial("SD1")+SN1->N1_CBASE))
						   									
									
									//campos criados para verificar se base do pis considera da nota ou do bem  e se calcula PIS registrado no movimento SN4
									If lRecNotFis  //se tem os campos e achou nota fiscal verifica novo campo
										lRecNotFis := If(( Empty(SN1->N1_CBCPIS) .Or.  SN1->N1_CBCPIS == "1" ), lRecNotFis, .F. )
									EndIf
				   					
									If lRecNotFis
					   				lAchouSF4 := MsSeek (xFilial ("SF4")+SD1->D1_TES)
										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³A rotina a seguir e uma protecao devido a falha no dicionario padrao    ³
										//³onde a expressao cadastrada no parametro MV_VLRATF foi cadastrada com   ³
										//³Aspas, isso faz com que a macro do codblock retorne uma string.         ³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										nVlRatF := Eval( bValAtf )
										If ValType(nVlRatF) <> "N"
											nVlRatF := (SD1->D1_TOTAL-SD1->D1_VALDESC)+If(SF4->F4_CREDIPI=="S",0,SD1->D1_VALIPI)-IIf(SF4->F4_CREDICM=="S",SD1->D1_VALICM,0)
										EndIf
										nVlrBaixa := 0
										aSldSN4	:= SaldoSN4( ( cAliasTmp )->N1_FILIAL,( cAliasTmp )->N1_CBASE,( cAliasTmp )->N1_ITEM, SN3->N3_TIPO, SN3->N3_SEQ, SN3->N3_SEQREAV,/*aMoeda*/,dDtFim/*dDataSLD*/,.T./*lAgrupa*/,dAquisicao/*dDataIni*/,/*cSaldo*/)
										If Len(aSldSN4) > 0
											nVlrBaixa:= aSldSN4[1,2,8]  //baixas do ativo desde a data de aquisicao ateh data fim 
										EndIf
										//ALTERADO EM 19/07/2010 - PATRICIA RAJAO
										//Variavel que armazena o MV_BSCREPC criado em 19/07/2010
										IF nVlBsCl == 1	
											nBaseCred 	+= ((nVlRatF-nVlrBaixa)/nMeses)/(SD1->D1_QUANT/SN1->N1_QUANTD)
											nBaseItem	:= ((nVlRatF-nVlrBaixa)/nMeses)/(SD1->D1_QUANT/SN1->N1_QUANTD)
										ELSE
											nBaseCred 	+= ( SD1->D1_TOTAL-nVlrBaixa) / nMeses
											nBaseItem	:= ( SD1->D1_TOTAL-nVlrBaixa) / nMeses								
										ENDIF
										/*
										nBaseCred 	+= ((SD1->D1_TOTAL+SD1->D1_VALIPI+SD1->D1_ICMSRET) / nMeses ) / (SD1->D1_QUANT/SN1->N1_QUANTD)
										nBaseItem	:= ((SD1->D1_TOTAL+SD1->D1_VALIPI+SD1->D1_ICMSRET) / nMeses ) / (SD1->D1_QUANT/SN1->N1_QUANTD)
										*/
									Else
										nVlrBaixa := 0
										aSldSN4	:= SaldoSN4( ( cAliasTmp )->N1_FILIAL,( cAliasTmp )->N1_CBASE,( cAliasTmp )->N1_ITEM, SN3->N3_TIPO, SN3->N3_SEQ, SN3->N3_SEQREAV,/*aMoeda*/,dDtFim/*dDataSLD*/,.T./*lAgrupa*/,dAquisicao/*dDataIni*/,/*cSaldo*/)
										If Len(aSldSN4) > 0
											nVlrBaixa:= aSldSN4[1,2,8]  //baixas do ativo desde a data de aquisicao ateh data fim 
										EndIf
										//ALTERADO EM 19/07/2010 - PATRICIA RAJAO
										//Variavel que armazena o MV_BSCREPC criado em 19/07/2010								
										IF nVlBsCl == 1	
											nBaseCred 	+= (SN3->N3_VORIG1-nVlrBaixa) / nMeses
											nBaseItem	:= (SN3->N3_VORIG1-nVlrBaixa) / nMeses
										ELSE //exibir alerta
											nBaseCred 	+= ( SN1->N1_VLAQUIS-nVlrBaixa) / nMeses
											nBaseItem	:= ( SN1->N1_VLAQUIS-nVlrBaixa) / nMeses
										EndIf
									EndIf
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Armazena os valores das bases por item+data caso seja solicitado³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If lProcItem

									If lAchouSF4
										nAliqPis	:=	SD1->&(AllTrim(cCpAlPisEn))
										nAliqCof	:=	SD1->&(AllTrim(cCpAlCofEn))	
										cOrigCred	:=	Iif(Left(SD1->D1_CF,1)=="3","1","0")
										cCstPis		:=	SF4->F4_CSTPIS
										cCstCofin	:=	SF4->F4_CSTCOF
									EndIf

									DeprecTMP(SN1->N1_CBASE,;
											SN1->N1_ITEM,;
											SN1->N1_DESCRIC,;
											nBaseItem,;
											0,;
											aDatas[nX][02],;
											cArqAtiv,;
											If(lContaBem, SN3->N3_CCONTAB, SN3->N3_CDEPREC),;
											SN3->N3_CCUSTO,;
											Iif(Empty(cOrigCred),SN1->N1_ORIGCRD,cOrigCred),;
											Iif(Empty(cCstPis),SN1->N1_CSTPIS,cCstPis),;
											Iif(nAliqPis==0,SN1->N1_ALIQPIS,nAliqPis),;
											Iif(Empty(cCstCofin),SN1->N1_CSTCOFI,cCstCofin),;
											Iif(nAliqCof==0,SN1->N1_ALIQCOF,nAliqCof),;
											SN1->N1_DETPATR,;
											SN1->N1_UTIPATR,;
											SN1->N1_CODBCC,;
											SN1->N1_NFISCAL,;
											SN1->N1_NSERIE,;
											SN1->N1_FORNEC,;
											SN1->N1_LOJA,; 
											SN1->N1_NUMPRO,;
											SN1->N1_INDPRO	)	//Segundo consulta ao analista Arnaldo Raymundo, o sistema soh trata este lancamento
									
								Endif 
							EndIf					
						Next
					Else					   
						// Localiza o registro da depreciacao do Bem+Item+Tipo do SN3					   
						DbSelectArea("SN4")						

						dbSeek(xFilial("SN4")+SN1->(N1_CBASE+N1_ITEM)+SN3->N3_TIPO+DTOS(dDtIni),.T.)
						While !Eof() .And. ;
							xFilial("SN4")+SN1->(N1_CBASE+N1_ITEM)+SN3->N3_TIPO == ;
							SN4->N4_FILIAL+SN4->N4_CBASE+SN4->N4_ITEM+SN4->N4_TIPO	 .And.;
							SN4->N4_DATA <= dDtFim
								
							//campos criados para verificar se base do pis considera da nota ou do bem  e se calcula PIS registrado no movimento SN4
							If ! ( SN4->N4_CALCPIS $ " |1|S" )  //nao calcula pis no mov. avanca registro-colocado space(1)tb devido mov. antigos
								SN4->( dbSkip() )
								Loop
							EndIf

							nAliqPis	:=	0
							nAliqCof	:=	0	
							cOrigCred	:=	""
							cCstPis	:=	""
							cCstCofin	:=	""
							lAchouSF4	:=	.F. 
								
							// Registro de depreciacao do periodo		
							If SN4->N4_OCORR $ "06#10" .And. SN4->N4_TIPOCNT =="3" .And. SN4->N4_SEQ == SN3->N3_SEQ
								nRet 		+= SN4->N4_VLROC1							 
								nRetItem 	:= SN4->N4_VLROC1
								
							   	If lProcItem
									//procura nota fiscal de entrada
						   			lRecNotFis := 	Empty(SN1->(N1_NFISCAL+N1_NSERIE+N1_FORNEC+N1_LOJA)) .And.;
													SD1->(MsSeek(xFilial("SD1")+SN1->(N1_NFISCAL+N1_NSERIE+N1_FORNEC+N1_LOJA)))
											
									//campos criados para verificar se base do pis considera da nota ou do bem  e se calcula PIS registrado no movimento SN4
									If lRecNotFis  //se tem os campos e achou nota fiscal verifica novo campo
										lRecNotFis := If(( Empty(SN1->N1_CBCPIS) .Or.  SN1->N1_CBCPIS == "1" ), lRecNotFis, .F. )
									EndIf
									
									If lRecNotFis
										
										While SD1->(!Eof() .And. SD1->(D1_FILIAL+D1_DOC+D1_SERIE+D1_FORNECE+D1_LOJA)==xFilial("SD1")+SN1->(N1_NFISCAL+N1_NSERIE+N1_FORNEC+N1_LOJA))
										
											If ((SD1->D1_ITEM=SN1->N1_NFITEM .And. SN1->N1_NFITEM!=' ') .Or.; 
				    							(SN1->N1_CBASE=Left(SD1->D1_CBASEAF, TamSx3("N1_CBASE")[1])))
			
												lAchouSF4	:=	SF4->(MsSeek(xFilial("SF4")+SD1->D1_TES))
												Exit
				    							
				    							EndIf

											SD1->(dbSkip())
										End
										
										If lAchouSF4
											nAliqPis	:=	SD1->&(AllTrim(cCpAlPisEn))
											nAliqCof	:=	SD1->&(AllTrim(cCpAlCofEn))	
											cOrigCred	:=	Iif(Left(SD1->D1_CF,1)=="3","1","0")
											cCstPis	:=	SF4->F4_CSTPIS
											cCstCofin	:=	SF4->F4_CSTCOF
										EndIf																			
									EndIf

									DeprecTMP(SN1->N1_CBASE,;
										SN1->N1_ITEM,;
										SN1->N1_DESCRIC,;
										nBaseItem,;
										nRetItem,;
										SN4->N4_DATA,;
										cArqAtiv,;
										If(lContaBem, SN3->N3_CCONTAB, SN3->N3_CDEPREC),;
										SN3->N3_CCUSTO,;
										Iif(Empty(cOrigCred),SN1->N1_ORIGCRD,cOrigCred),;
										Iif(Empty(cCstPis),SN1->N1_CSTPIS,cCstPis),;
										Iif(nAliqPis==0,SN1->N1_ALIQPIS,nAliqPis),;
										Iif(Empty(cCstCofin),SN1->N1_CSTCOFI,cCstCofin),;
										Iif(nAliqCof==0,SN1->N1_ALIQCOF,nAliqCof),;
										SN1->N1_DETPATR,;
										SN1->N1_UTIPATR,;
										SN1->N1_CODBCC,;
										SN1->N1_NFISCAL,;
										SN1->N1_NSERIE,;
										SN1->N1_FORNEC,;
										SN1->N1_LOJA,;
										SN1->N1_NUMPRO,;
										SN1->N1_INDPRO	 )	//Segundo consulta ao analista Arnaldo Raymundo, o sistema soh trata este lancamento
								Endif 
							Endif 
								
							SN4->(DbSkip())
						EndDo 
					
					EndIf 	
							
					DbSelectArea("SN3")

					SN3->(DbSkip())
				EndDo 

				DbSelectArea(cAliasTmp)
				DbSkip()
			End
	#IFDEF TOP
		Endif
	#ENDIF

	If !lQuery 	
		dbSelectArea("SN1")
		DbClearFil()
		RetIndex("SN1")
		fErase(cIndTmp+OrdBagExt())
	Endif
	
	If !Empty(cArqIndSd1)
		RetIndex("SD1")
		Ferase(cArqIndSd1+OrdBagExt())
	EndIf
#IFDEF TOP
Next
cFilAnt	:= cFilBack
#ENDIF
SN1->(RestArea(aAreaSn1))
SN3->(RestArea(aAreaSn3))	
SN4->(RestArea(aAreaSn4))
If _lDefTopCTB //Proteção para não ocorrer error.log de index not found da SD1.
	SD1->(RestArea(aAreaSD1))
Endif
RestArea(aArea)

If lRetVCred
	xValor := { nRet, nBaseCred }
Else 
	xValor := nRet
EndIf 	      	

If !lProcItem
	Return( xValor )
Else 
	// Caso o processamento seja por item, será retornado o nome do temporario criado para exclusao.
	Return(aTemp)
Endif

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DeprecTMP ºAutor  ³Mary C. Hergert     º Data ³  11/04/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Grava arquivo temporário retornado no processamento dos     º±±
±±º          ³creditos nas depreciacoes por item                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³DeprecAtivo()                                               º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function DeprecTMP(cCodBem,cItem,cDescr,nBase,nRet,dData,cArqAtiv,cContaC,cCCusto,;
						cOrigCred,cCSTPis,nAliqPis,cCSTCofins,nAliqCofins,cIndBem,cUtilBem,cNatBCCrd,cNotaFis,cSerNF,cFornec,cLoja,cNumPro,cIndPro)
Local	cDescExt	:=	""
Local	lNils	:=	cContaC==Nil .And. cCCusto==Nil .And. cOrigCred==Nil .And. cCSTPis==Nil .And. nAliqPis==Nil .And.;
					cCSTCofins==Nil .And. 	nAliqCofins==Nil .And. cIndBem==Nil .And. cUtilBem==Nil

Local lPEF120EXCL 	:= ExistBlock("AF120EXC")
Local nVlrExcl := 0

Default cNotaFis 	:= ""
Default cSerNF		:= ""
Default cFornec 	:= ""
Default cLoja 		:= ""
Default cNumPro		:= ""
Default cIndPro		:= ""
nVlrExcl := 0
If lPEF120EXCL     //ponto de entrada para incluir valor a excluir
	nVlrExcl := ExecBlock("AF120EXC",.F.,.F.,{cArqAtiv,cCodBem,cItem,dData})
	If ValType(nVlrExcl) != "N"
		nVlrExcl := 0
	EndIf
EndIf

If ExistBlock("DEPREATF")
	nRet	:= nBase
EndIf	

(cArqAtiv)->(dbSetOrder(1))
If !(cArqAtiv)->(dbSeek(cCodBem+cItem+dtos(dData)))
	
	//Processamento da descricao complementar do ativo SN2.
	If !lNils
		cDescExt	:= Atf130DExt(cCodBem,cItem)
		cDescExt	:= If(Empty(cDescExt),cDescr,cDescExt)
	EndIf
	
	RecLock(cArqAtiv,.T.)
	(cArqAtiv)->BEM	:= cCodBem
	(cArqAtiv)->ITEM	:= cItem
	(cArqAtiv)->DESCRI	:= cDescr

	(cArqAtiv)->DTAPR	:= dData
	
	If !lNils	
		(cArqAtiv)->NATBCCRED	:=	cNatBCCrd
		(cArqAtiv)->INDBEMIMOB	:=	cIndBem		
		(cArqAtiv)->INDORIGCRD	:=	cOrigCred	
		(cArqAtiv)->INDUTILBEM	:=	cUtilBem	
		(cArqAtiv)->CSTPIS		:=	cCSTPis
		(cArqAtiv)->ALIQPIS		:=	nAliqPis
		(cArqAtiv)->CSTCOFINS	:=	cCSTCofins
		(cArqAtiv)->ALIQCOFINS	:=	nAliqCofins
		(cArqAtiv)->CODCONTA	:=	cContaC
		(cArqAtiv)->CODCCUSTO	:=	cCCusto
		(cArqAtiv)->DESCBEMIMO	:=	cDescExt
	EndIf
	
Else
	RecLock(cArqAtiv,.F.)
Endif
	(cArqAtiv)->BASE	+= nBase
	(cArqAtiv)->VRET	+= nRet

	(cArqAtiv)->VLRBCEXC    := nVlrExcl
	(cArqAtiv)->VLRBCPIS	:=	(cArqAtiv)->VRET - (cArqAtiv)->VLRBCEXC
	(cArqAtiv)->VLRPIS		:=	(cArqAtiv)->(VLRBCPIS*(ALIQPIS/100))	
	(cArqAtiv)->VLRBCCOFIN	:=	(cArqAtiv)->VRET - (cArqAtiv)->VLRBCEXC	
	(cArqAtiv)->VLRCOFINS	:=	(cArqAtiv)->(VLRBCCOFIN*(ALIQCOFINS/100))		

	//campos a ser utilizado pelo pessoal do N3-FISCAL (caio.martins)
	(cArqAtiv)->NOTAFISCAL 	:=	cNotaFis
	(cArqAtiv)->SERIE 		:=	cSerNF
	(cArqAtiv)->FORNECEDOR 	:=	cFornec
	(cArqAtiv)->LOJA 		:=	cLoja
	(cArqAtiv)->NUMPRO 		:=	cNumPro
	(cArqAtiv)->INDPRO 		:=	cIndPro

	MsUnLock()
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³_AtfRegF130 ºAutor  ³Microsiga         º Data ³  04/05/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Geracao de arquivo temporario para gerar registro F130 do   º±±
±±º          ³SPED FISCAL PIS/COFINS                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function _AtfRegF130(cFilProc, dDtIni, dDtFim, cCdBaseIni, cCdBaseFim, cAliasTmp, lRelBasApr, cNATBCCrd)
					
Local aAreaSn1		:= SN1->(GetArea())
Local aAreaSn3		:= SN3->(GetArea())
Local aAreaSn4		:= SN4->(GetArea())
Local aAreaSD1		:= SD1->(GetArea())
Local aArea			:= GetArea()

Local aTemp 		:= {}

Local cAliasSN1
Local cQuery
Local cWhere		:= ""
Local cTmpWhere
Local lQuery    	:= .F.      
Local cIndTmp
Local nIndex

Local dAquisicao	:= CToD( "" ) 
Local dLimite		:= CToD( "" ) 

Local nVlrAquisic
Local nVlrBCPIS
Local nVlrBCCOF
Local nMeses		:= 48
Local nMesRef 		:= 48
Local nX
Local aSldSN4

Local lATFPR130		:= ExistBlock("ATFPR130")
Local cFilX			:= cFilAnt
Local cFilSN1
Local cRecSN1, cCposSN1, cCposSD1
Local nVlBsCl		:= SuperGetMv("MV_BSCREPC",.F., 1) //1 = Valor do bem Imobilizado e 2= Valor de Aquisição do Ativo                    

Local cXFor

Local cMs_Fil 		:= ""
Local lShared 		:= .F.

Local aModoComp		:= {}

DEFAULT cFilProc 	:= cFilAnt
DEFAULT dDtIni 		:= FirstDay(dDataBase)
DEFAULT dDtFim 		:= LastDay(dDataBase)
DEFAULT cCdBaseIni  := Space(Len(SN1->N1_CBASE))
DEFAULT cCdBaseFim  := Replicate("z", Len(SN1->N1_CBASE))
DEFAULT cAliasTmp 	:= CriaTrab(,.F.)   
DEFAULT lRelBasApr  := .F.
DEFAULT cNATBCCrd   := ""

cFilAnt 			:= cFilProc

dbSelectArea("SN1")
cFilSN1 			:= xFilial("SN1")
aAdd(aModoComp, FWModeAccess("SN1",1) )
aAdd(aModoComp, FWModeAccess("SN1",2) )
aAdd(aModoComp, FWModeAccess("SN1",3) )
lShared := Ascan(aModoComp, 'C') > 0

cMs_Fil 			:= If(lShared,cFilProc,"")

If Select( cAliasTmp ) > 0
	MsgStop("Error - Alias already in use. Verify.")
	Return( aTemp )
EndIf
	
// Cria o arquivo temporário que ira receber as depreciacoes de cada um dos itens
AtfCriaTmp( AtfLayout("F130"), cAliasTmp, aTemp )

     
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tratamento para formatar o IN() de ambiente TOP³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(cNATBCCrd) 
		cXFor	:=	"'"+SubStr(cNATBCCrd,1,2)+"'"
		For nX := 4 To Len(cNATBCCrd) Step 3
			cXFor	+=	",'"+SubStr(cNATBCCrd,nX,2)+"'"
		Next nX
		
		#IFDEF TOP
			IF TcSrvType() != "AS/400"
				cNATBCCrd	:=	cXFor
			EndIf
		#ENDIF
	EndIf

	//Tabela tipos de entrada e saida
	dbSelectArea("SF4")
	DbSetOrder (1)
	//tabela itens da nota fiscal de entrada
	dbSelectArea("SD1")
	dbSetOrder(1)
	
	If _lDefTopCTB

	   	dbSelectArea("SN1")
	    lQuery := .T.
	    aStruSN3 := SN3->( dbStruct()) 
		cAliasSN1 := GetNextAlias() 
		cRecSN1 := "SN1.R_E_C_N_O_ SN1RECNO "

		cCposSN1 := "'SN1' TABORI, N1_FILIAL,N1_CBASE,N1_ITEM,N1_CALCPIS,N3_CCONTAB,N3_CCUSTO,N3_CDEPREC,N1_DETPATR,N1_UTIPATR,N1_NFISCAL,N1_NSERIE,N1_FORNEC,N1_LOJA,"
		cCposSN1 += "N3_TIPO,N3_SEQ,N3_SEQREAV,N3_AQUISIC,N3_DINDEPR,N3_VORIG1,N1_QUANTD,N1_ITEM,N3_DLANCTO,N1_DESCRIC, 0 SD1RECNO, SN1.R_E_C_N_O_ SN1RECNO "
		cCposSN1 += ",N1_MESCPIS " 
		// o Campo N1_VLAQUIS contém o valor da aquisição informado diretamnente no ATIVO
		cCposSN1 += ",N1_VLAQUIS "
		cCposSN1 += ",N1_NUMPRO "
		cCposSN1 += ",N1_INDPRO "
		
		cCposSD1 := "'SD1' TABORI, N1_FILIAL,N1_CBASE,N1_ITEM,N1_CALCPIS,N3_CCONTAB,N3_CCUSTO,N3_CDEPREC,N1_DETPATR,N1_UTIPATR,N1_NFISCAL,N1_NSERIE,N1_FORNEC,N1_LOJA,"
		cCposSD1 += "N3_TIPO,N3_SEQ,N3_SEQREAV,N3_AQUISIC,N3_DINDEPR,N3_VORIG1,N1_QUANTD,N1_ITEM,N3_DLANCTO,N1_DESCRIC, SD1.R_E_C_N_O_ SD1RECNO, SN1.R_E_C_N_O_ SN1RECNO "
		cCposSD1 += ",N1_MESCPIS " 
		// o Campo N1_VLAQUIS contém o valor da aquisição informado diretamnente no ATIVO
		cCposSD1 += ",N1_VLAQUIS "
		cCposSD1 += ",N1_NUMPRO "
		cCposSD1 += ",N1_INDPRO "
		
		cWhere := ""	
		cWhere += "N1_FILIAL='"+cFilSN1+"' AND "
		If lShared .And. !Empty(cMs_Fil)  //se tabela SN1 eh compartilhada e passado o parametro cMs_Fil
			dbSelectArea("SN1")
			cWhere += "N1_MSFIL='"+cMs_Fil+"' AND "
		EndIf
		cWhere += "N1_CALCPIS IN ('1','S','3') AND "
	    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	    //³Verifica se deverao ser processadas as depreciacoes por ativo.³
	    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	    If Empty(cCdBaseIni)
			cWhere += "N1_CBASE != ' ' AND " 	    
	    Else
	  		cWhere += "N1_CBASE >= '" + cCdBaseIni + "' AND " 
	 	EndIf
   		cWhere += "N1_CBASE <= '" + cCdBaseFim + "' AND "
		cWhere += "N1_AQUISIC <= '" + DtoS(dDtFim) + "' AND "		
	   	cWhere += "SN1.D_E_L_E_T_=' ' AND "
		cWhere += "N3_FILIAL= N1_FILIAL AND "
		cWhere += "N3_CBASE=N1_CBASE AND "
		cWhere += "N3_ITEM=N1_ITEM AND "
		cWhere += "N3_TIPO = '01' AND "
		
		//somente os bens ativos na data
		cWhere += " ( N3_DTBAIXA > '" + DTOS(dDtFim) + "'  OR N3_DTBAIXA = ' ') AND "+ CRLF
		cWhere += " (N1_BAIXA   > '" + DTOS(dDtFim) + "' OR N1_BAIXA = ' ')  AND "+ CRLF
		//somente a ultima sequencia ativa do bem
		cWhere += "N3_SEQ = ( "
		cWhere += "          SELECT  "
		cWhere += "          MAX(N4_SEQ) N4_SEQ "
		cWhere += "          FROM " + RetSQLTab("SN4")
		cWhere += "          WHERE "
		cWhere += " 		  N4_FILIAL 	= SN3.N3_FILIAL AND "
		cWhere += " 	      N4_CBASE 	= SN3.N3_CBASE AND "
		cWhere += " 		  N4_ITEM 	= SN3.N3_ITEM AND "
		cWhere += " 		  N4_TIPO 	= SN3.N3_TIPO AND "
		cWhere += " 		  N4_SEQREAV 	= SN3.N3_SEQREAV AND "
		cWhere += " 		  N4_OCORR 	IN ('04','05','16') AND "+ CRLF  //04=TRANSFERENCIA PARA 05=AQUISICAO  16=AQUISICAO POR TRANSFERENCIA
		cWhere += "     	  N4_DATA 	<= '"+DtoS(dDtFim)+"' AND "
		cWhere += "     	  SN4.D_E_L_E_T_ = ''  "
		cWhere += "     	) AND "
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Utilizado pelo SPED Pis/Cofins (FISCAL) para processar um ³
		//³determinado tipo de credito                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	   	If !Empty(cNATBCCrd) 
			cWhere += "N1_CODBCC IN("+cNATBCCrd+") AND "
	   	EndIf
		cWhere += "SN3.D_E_L_E_T_=' ' " 
		cWhereSD1 := ""		
		cWhereSD1 += " F4_FILIAL='"+xFilial("SF4")+"' AND "
		cWhereSD1 += " F4_CODIGO= D1_TES  AND "
		cWhereSD1 += " F4_ATUATF = 'S' AND "
		cWhereSD1 += " D1_FILIAL='"+xFilial("SD1")+"' AND "
		cWhereSD1 += " D1_DOC = N1_NFISCAL AND "
		cWhereSD1 += " D1_SERIE = N1_NSERIE AND "
		cWhereSD1 += "( "
		cWhereSD1 += "( N1_NFITEM != ' ' AND D1_ITEM = N1_NFITEM ) OR "
		If AllTrim( Upper( TcGetDb() ) ) $ "ORACLE_INFORMIX" 
			cWhereSD1 += "( N1_NFITEM = ' ' AND F4_BENSATF = '1' AND N1_CBASE =  SUBSTR(D1_CBASEAF, 1, "+Alltrim(Str(Int(Len(SN1->N1_CBASE))))+") ) OR "
			cWhereSD1 += "( N1_NFITEM = ' ' AND F4_BENSATF = '2' AND N1_CBASE =  SUBSTR(D1_CBASEAF, 1, "+Alltrim(Str(Int(Len(SN1->N1_CBASE))))+")  AND N1_ITEM =  SUBSTR(D1_CBASEAF, "+Alltrim(Str(Int(Len(SN1->N1_CBASE)+1)))+","+Alltrim(Str(Int(Len(SN1->N1_ITEM))))+")  ) "				
		Else
			cWhereSD1 += "( N1_NFITEM = ' ' AND F4_BENSATF = '1' AND N1_CBASE =  SUBSTRING(D1_CBASEAF, 1, "+Alltrim(Str(Int(Len(SN1->N1_CBASE))))+") ) OR "
			cWhereSD1 += "( N1_NFITEM = ' ' AND F4_BENSATF = '2' AND N1_CBASE =  SUBSTRING(D1_CBASEAF, 1, "+Alltrim(Str(Int(Len(SN1->N1_CBASE))))+") "+" AND N1_ITEM =  SUBSTRING(D1_CBASEAF, "+Alltrim(Str(Int(Len(SN1->N1_CBASE)+1)))+","+Alltrim(Str(Int(Len(SN1->N1_ITEM))))+")  ) "				
		EndIf
		cWhereSD1 += " ) AND "
		cWhereSD1 += "D1_FORNECE = N1_FORNEC AND "
		cWhereSD1 += "D1_LOJA = N1_LOJA  AND "
		cWhereSD1 += " N1_CBCPIS <> '2'	 AND "                     								
		cWhereSD1 += "SD1.D_E_L_E_T_=' ' "
		
		//no ponto de entrada somente devera ser colocado condicoes para as tabelas sn1/sn3
		IF lATFPR130
			cTmpWhere 	:= ExecBlock("ATFPR130",.F.,.F.,{lQuery,cWhere})
			cWhere 		:= IIF(ValType(cTmpWhere) != "C" .Or. Empty(cTmpWhere),cWhere,cTmpWhere)
		ENDIF
		//query 1  --> SOMENTE OS BENS QUE POSSUEM NF VIA COMPRAS
	   	cQuery := " SELECT " + cCposSD1 
		cQuery += "FROM "+RetSqlName("SN1")+" SN1,"
		cQuery +=         RetSqlName("SN3")+" SN3, "
		cQuery +=         RetSqlName("SD1")+" SD1, "
		cQuery +=         RetSqlName("SF4")+" SF4 "
		cQuery += "WHERE "
		cQuery += cWhere
		
		cQuery += " AND N1_NFISCAL != ' ' "
		cQuery += " AND N1_FORNEC != ' ' "
		cQuery += " AND N1_LOJA != ' ' "
		cQuery += " AND "+ cWhereSD1
		
		cQuery += " UNION "
		
		//query 2  ---> SOMENTE OS BENS QUE NAO POSSUEM NF 
		cQuery += " SELECT " + cCposSN1 
		cQuery += "FROM "+RetSqlName("SN1")+" SN1,"
		cQuery +=         RetSqlName("SN3")+" SN3 "
		cQuery += "WHERE "
		cQuery += cWhere
		
		cQuery += " AND SN1.R_E_C_N_O_ NOT IN ( "
			//filtrar apenas os recnos que nao foram contemplados na query 1
			cQuery += " SELECT " + cRecSN1
			cQuery += "FROM "+RetSqlName("SN1")+" SN1,"
			cQuery +=         RetSqlName("SN3")+" SN3, "
			cQuery +=         RetSqlName("SD1")+" SD1, "
			cQuery +=         RetSqlName("SF4")+" SF4 "
			cQuery += "WHERE "
			cQuery += cWhere
			cQuery += " AND "+ cWhereSD1
			//termino do filtro
		cQuery += "                           ) "
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSN1,.T.,.T.)
		
		For nX := 1 To Len( aStruSN3 ) 
			If AllTrim( aStruSN3[ nX, 1 ] ) $ "N3_AQUISIC|N3_DINDEPR|N3_VORIG1"
				TcSetField( cAliasSN1, aStruSN3[nX,1], aStruSN3[nX,2], aStruSN3[nX,3],aStruSN3[ nX,4])
			EndIf 					
		Next nX 					
		
		While !( cAliasSN1 )->( Eof() )

			//data de aquisicao - retirado a data de depreciacao conforme fnc 00000005622/2012
			//If ( cAliasSN1 )->N3_DINDEPR > ( cAliasSN1 )->N3_AQUISIC
			//	dAquisicao  := ( cAliasSN1 )->N3_DINDEPR
			//Else
				dAquisicao  := ( cAliasSN1 )->N3_AQUISIC
			//EndIf			
			//credito de pis por fracao == "3"
			If ( cAliasSN1 )->N1_CALCPIS == "3" 
				// Verifica se esta dentro do periodo definido no campo N1_MESCPIS (06, 12, 24, 48 entre outros)
				nMeses      := IIf(!Empty(( cAliasSN1 )->N1_MESCPIS),( cAliasSN1 )->N1_MESCPIS, 48 )
				nMesRef		:= IIf(!Empty(( cAliasSN1 )->N1_MESCPIS),( cAliasSN1 )->N1_MESCPIS-1, 47 )
				dLimite		:=  LastDay( MonthSum(dAquisicao,nMesRef) )
            Else
				dLimite  := LastDay(dAquisicao)
			EndIf
			
			nPorcAtiva := 0
			
			If dAquisicao <= dDtFim .And. dLimite > dDtIni
		   		If ( cAliasSN1 )->N1_CALCPIS $ "1|3" .And. ExistBlock("DEPREATF")
					nVlrBCPIS :=nVlrBCCOF := ExecBlock("DEPREATF",.f.,.f.,{cAliasSN1,cAliasSN1, "F130"})
					AtfPopuTmp("F130",cAliasSN1,cAliasTmp,( cAliasSN1 )->N1_CBASE,( cAliasSN1 )->N1_ITEM,( cAliasSN1 )->N1_DESCRIC,dAquisicao,nVlrBCPIS,nVlrBCCOF, "SN1" ,(cAliasSN1)->N1_NUMPRO,(cAliasSN1)->N1_INDPRO)					
				Else
	                //Valor do bem que servira de base na aquisicao
					aSldSN4	:= SaldoSN4( ( cAliasSN1 )->N1_FILIAL,( cAliasSN1 )->N1_CBASE,( cAliasSN1 )->N1_ITEM,( cAliasSN1 )->N3_TIPO,( cAliasSN1 )->N3_SEQ,( cAliasSN1 )->N3_SEQREAV,/*aMoeda*/,dAquisicao/*dDataSLD*/,.T./*lAgrupa*/,/*dDataIni*/,/*cSaldo*/)
					If Len(aSldSN4) > 0
						nVlrAquisic := aSldSN4[1,2,1]  //aquisicao nao considera baixas
					Else
						nVlrAquisic := ( cAliasSN1 )->N3_VORIG1
					EndIf
				    //Valor do bem na data final
					aSldSN4	:= SaldoSN4( ( cAliasSN1 )->N1_FILIAL,( cAliasSN1 )->N1_CBASE,( cAliasSN1 )->N1_ITEM,( cAliasSN1 )->N3_TIPO,( cAliasSN1 )->N3_SEQ,( cAliasSN1 )->N3_SEQREAV,/*aMoeda*/,dDtFim/*dDataSLD*/,.T./*lAgrupa*/,dAquisicao/*dDataIni*/,/*cSaldo*/)
					If Len(aSldSN4) > 0
						nVlrDtFim:= aSldSN4[1,2,1]-aSldSN4[1,2,8]  //na data final considera aquisicao - baixas
					Else
						nVlrDtFim:= nVlrAquisic
					EndIf
					//porcao ativa do bem na data final
					If nVlrAquisic > 0 
						nPorcAtiva := nVlrDtFim / nVlrAquisic
					EndIf
			
					If ( cAliasSN1 )->TABORI == "SD1"
						SD1->( dbGoto ( ( cAliasSN1 )->SD1RECNO ) )
								    
						If SF4->( MsSeek (xFilial ("SF4")+SD1->D1_TES) ) .And. SF4->F4_ATUATF = "S"
							//se desmembrar ativo em bens individual deve dividir pela quantidade, i.e., uma ficha de bem para cada unidade do item da nota
							If SF4->F4_BENSATF = "1"
								nVlrBCPIS := nPorcAtiva * SD1->D1_BASIMP6 / SD1->D1_QUANT
								nVlrBCCOF := nPorcAtiva * SD1->D1_BASIMP5 / SD1->D1_QUANT 
							Else
								nVlrBCPIS := nPorcAtiva * SD1->D1_BASIMP6
								nVlrBCCOF := nPorcAtiva * SD1->D1_BASIMP5
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Armazena os valores das bases por item+data caso seja solicitado³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							AtfPopuTmp("F130",cAliasSN1,cAliasTmp,( cAliasSN1 )->N1_CBASE,( cAliasSN1 )->N1_ITEM,( cAliasSN1 )->N1_DESCRIC,dAquisicao,nVlrBCPIS,nVlrBCCOF,( cAliasSN1 )->TABORI,(cAliasSN1)->N1_NUMPRO,(cAliasSN1)->N1_INDPRO)
						
						EndIf  
					Else 
						//implementar quando nao tem nota fiscal igual ao tratamento na funcao deprecativo
						IF nVlBsCl == 1	
							nVlrBCPIS := nPorcAtiva * nVlrAquisic //( cAliasSN1 )->N3_VORIG1
							nVlrBCCOF := nPorcAtiva * nVlrAquisic //( cAliasSN1 )->N3_VORIG1
						ELSE
							nVlrBCPIS := nPorcAtiva * ( cAliasSN1 )->N1_VLAQUIS
							nVlrBCCOF := nPorcAtiva * ( cAliasSN1 )->N1_VLAQUIS
						EndIf
		
						AtfPopuTmp("F130",cAliasSN1,cAliasTmp,( cAliasSN1 )->N1_CBASE,( cAliasSN1 )->N1_ITEM,( cAliasSN1 )->N1_DESCRIC,dAquisicao,nVlrBCPIS,nVlrBCCOF,( cAliasSN1 )->TABORI,(cAliasSN1)->N1_NUMPRO,(cAliasSN1)->N1_INDPRO)
					
					EndIf
				EndIf
			EndIf
			
			DbSelectArea(cAliasSN1)
			DbSkip()
			
		EndDo
	Else
	     //cQuery = filtro para indregua no cadastro do ativo fixo
		lQuery := .F.
		cWhere := "N1_FILIAL='"+cFilSN1+"'"
		If lShared .And. !Empty(cMs_Fil)  //se tabela SN1 eh compartilhada e passado o parametro cMs_Fil
			dbSelectArea("SN1")
			If lN1MSFIL
				cWhere += " .And. N1_MSFIL='"+cMs_Fil+"' "
			EndIf
		EndIf
		cWhere += " .And. N1_CALCPIS$'1S3'"
		cWhere += ' .And. DTOS(N1_AQUISIC)<="'+DTOS(dDtFim)+'" '
	    If Empty(cCdBaseIni)
			cWhere += " .And. N1_CBASE <> ' ' " 	    
	    Else
	  		cWhere += " .And. N1_CBASE >= '" + cCdBaseIni + "' " 
	 	EndIf
   		cWhere += " .And. N1_CBASE <= '" + cCdBaseFim + "' "		
		cWhere += " .And. (DTOS(N1_BAIXA)>'" + DTOS(dDtFim) + "' .OR. DTOC(N1_BAIXA)=' ')  "
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Utilizado pelo SPED Pis/Cofins (FISCAL) para processar um ³
		//³determinado tipo de credito                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	   	If !Empty(cNATBCCrd) 
			cWhere += " .And. N1_CODBCC $ '"+cNATBCCrd+"'"
	   	EndIf
	   	
		IF lATFPR130
			cTmpWhere 	:= ExecBlock("ATFPR130",.F.,.F.,{lQuery,cWhere})
			cWhere 		:= IIF(ValType(cTmpWhere) != "C" .Or. Empty(cTmpWhere),cWhere,cTmpWhere)
		ENDIF
		cQuery := cWhere
	    //tabela de cadastro de ativo 
		dbSelectArea("SN1")
		cIndTmp := CriaTrab(,.F.)
		IndRegua("SN1",cIndTmp,IndexKey(),,cQuery)
		nIndex := RetIndex("SN1")
		#IFNDEF TOP	
			dbSetIndex(cIndTmp+OrdBagExt())
		#ENDIF	
		dbSetOrder(nIndex+1)
		dbGotop()
		cAliasSN1 := "SN1"
		DbSelectArea(cAliasSN1)
		While (cAliasSN1)->(!Eof())
			DbSelectArea("SN3")
			dbSeek(cFilSN1+( cAliasSN1 )->(N1_CBASE+N1_ITEM))
			While SN3->(!Eof() .And. N3_FILIAL+N3_CBASE+N3_ITEM == cFilSN1+( cAliasSN1 )->(N1_CBASE+N1_ITEM) )				
			
				//indice 01 SD1 --> D1_FILIAL+D1_DOC+D1_SERIE+D1_FORNECE+D1_LOJA+D1_COD+D1_ITEM						
				If	SN3->N3_TIPO == '01' .And. ( Empty(SN3->N3_DTBAIXA) .OR. SN3->N3_DTBAIXA > dDtFim)
					//data de aquisicao - retirado a data de depreciacao conforme fnc 00000005622/2012
					//If SN3->N3_DINDEPR > SN3->N3_AQUISIC
					//	dAquisicao  := SN3->N3_DINDEPR
					//Else
						dAquisicao  := SN3->N3_AQUISIC
					//EndIf			
	
					//credito de pis por fracao == "3"
					If ( cAliasSN1 )->N1_CALCPIS == "3" 
						// Verifica se esta dentro do periodo de 48 meses ( 4 anos ) ou 24 meses ( 2 anos ) desde a aquisicao 
						nMeses      := IIf(!Empty(SN1->N1_MESCPIS),SN1->N1_MESCPIS, 48 )
						nMesRef		:= IIf(!Empty(SN1->N1_MESCPIS),SN1->N1_MESCPIS-1, 47 )
						dLimite		:=  LastDay( MonthSum(dAquisicao,nMesRef) )
		            Else
						
						dLimite  := LastDay( dAquisicao )
						
					EndIf
				
					//somente a ultima sequencia ativa do bem
					DbSelectArea("SN4")
					dbSetOrder(1)
					dbSeek(cFilSN1+( cAliasSN1 )->(N1_CBASE+N1_ITEM))
					cSeqAux := ""
					While SN4->(!Eof() .And. N4_FILIAL+N4_CBASE+N4_ITEM == cFilSN1+( cAliasSN1 )->(N1_CBASE+N1_ITEM) )
						If SN4->N4_TIPO = '01' .And. SN4->N4_OCORR $ '05|04|16' .And. ;  ////04=TRANSFERENCIA PARA 05=AQUISICAO  16=AQUISICAO POR TRANSFERENCIA
							SN4->N4_SEQREAV = SN3->N3_SEQREAV .And. DTOS(SN4->N4_DATA) <= DTOS(dDtFim)
							cSeqAux := SN4->N4_SEQ
						EndIf
						SN4->( dbSkip() )
					Enddo
                    If !Empty(cSeqAux) .And. SN3->N3_SEQ == cSeqAux
						nPorcAtiva := 0
						If dAquisicao <= dDtFim .And. dLimite >= dDtIni
			                //Valor do bem que servira de base na aquisicao
							aSldSN4	:= SaldoSN4( ( cAliasSN1 )->N1_FILIAL,( cAliasSN1 )->N1_CBASE,( cAliasSN1 )->N1_ITEM,SN3->N3_TIPO,SN3->N3_SEQ,SN3->N3_SEQREAV,/*aMoeda*/,dAquisicao/*dDataSLD*/,.T./*lAgrupa*/,/*dDataIni*/,/*cSaldo*/)
							nVlrAquisic := aSldSN4[1,2,1]      //aquisicao nao considera baixas
						    //Valor do bem na data final
							aSldSN4	:= SaldoSN4( ( cAliasSN1 )->N1_FILIAL,( cAliasSN1 )->N1_CBASE,( cAliasSN1 )->N1_ITEM,SN3->N3_TIPO,SN3->N3_SEQ,SN3->N3_SEQREAV,/*aMoeda*/,dDtFim/*dDataSLD*/,.T./*lAgrupa*/,dAquisicao/*dDataIni*/,/*cSaldo*/)
							nVlrDtFim:= aSldSN4[1,2,1]-aSldSN4[1,2,8]   //na data final considera aquisicao - baixas
							//porcao ativa do bem na data final
							If nVlrAquisic > 0 
								nPorcAtiva := nVlrDtFim / nVlrAquisic
							EndIf
												
							If 	!Empty(SN1->N1_NFISCAL).And. !Empty(SN1->N1_FORNEC) .And. !Empty(SN1->N1_LOJA) .And. ;
								SD1->(MsSeek(xFilial("SD1")+SN1->N1_NFISCAL+SN1->N1_NSERIE+SN1->N1_FORNEC+SN1->N1_LOJA))
								
								While SD1->(! Eof() .And. D1_FILIAL+D1_DOC+D1_SERIE+D1_FORNECE+D1_LOJA ==xFilial("SD1")+SN1->(N1_NFISCAL+N1_NSERIE+N1_FORNEC+N1_LOJA))
									If Left(SD1->D1_CBASEAF, Len(SN1->N1_CBASE)) == ( cAliasSN1 )->N1_CBASE .And. ;
										SF4->( MsSeek (xFilial ("SF4")+SD1->D1_TES) )
						
										//se desmembrar ativo em bens individual deve dividir pela quantidade, i.e., uma ficha de bem para cada unidade do item da nota
										If SF4->F4_BENSATF = "1"
											nVlrBCPIS := nPorcAtiva * SD1->D1_BASIMP6 / SD1->D1_QUANT
											nVlrBCCOF := nPorcAtiva * SD1->D1_BASIMP5 / SD1->D1_QUANT 
										Else
											nVlrBCPIS := nPorcAtiva * SD1->D1_BASIMP6
											nVlrBCCOF := nPorcAtiva * SD1->D1_BASIMP5
										EndIf
										//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³Armazena os valores das bases por item+data caso seja solicitado³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
										AtfPopuTmp("F130","",cAliasTmp,( cAliasSN1 )->N1_CBASE,( cAliasSN1 )->N1_ITEM,( cAliasSN1 )->N1_DESCRIC,dAquisicao,nVlrBCPIS,nVlrBCCOF, "SD1",(cAliasSN1)->N1_NUMPRO,(cAliasSN1)->N1_INDPRO)
									
									EndIf  
									SD1->( dbSkip() )
								EndDo
							Else
								//implementar quando nao tem nota fiscal igual ao tratamento na funcao deprecativo
								IF nVlBsCl == 1	
									nVlrBCPIS := nPorcAtiva4 * nVlrAquisic //SN3->N3_VORIG1
									nVlrBCCOF := nPorcAtiva * nVlrAquisic //SN3->N3_VORIG1
								ELSE
									nVlrBCPIS := nPorcAtiva * SN1->N1_VLAQUIS
									nVlrBCCOF := nPorcAtiva * SN1->N1_VLAQUIS
								EndIf
				
								AtfPopuTmp("F130",cAliasSN1,cAliasTmp,( cAliasSN1 )->N1_CBASE,( cAliasSN1 )->N1_ITEM,( cAliasSN1 )->N1_DESCRIC,dAquisicao,nVlrBCPIS,nVlrBCCOF,"SN1",(cAliasSN1)->N1_NUMPRO,(cAliasSN1)->N1_INDPRO)
							EndIf
						EndIf
					EndIf
                EndIf
				DbSelectArea("SN3")
				SN3->(DbSkip())
			EndDo 
			DbSelectArea(cAliasSN1)
			DbSkip()
		EndDo
    EndIf
	If !lQuery 	
		dbSelectArea("SN1")
		DbClearFil()
		RetIndex("SN1")
		fErase(cIndTmp+OrdBagExt())
	Endif


RestArea(aAreaSn1)
RestArea(aAreaSn3)
RestArea(aAreaSn4)
RestArea(aAreaSD1)
RestArea(aArea)

cFilAnt := cFilX

Return(aTemp)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AtfLayout ºAutor  ³Microsiga           º Data ³  04/05/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Monta Estrutura para arquivo temporario para gerar registro º±±
±±º          ³SPED FISCAL PIS/COFINS                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AtfLayout(cReg)
Local aStru := {}

AADD(aStru,{"BEM"	,"C",010,0})
AADD(aStru,{"ITEM"	,"C",004,0})
AADD(aStru,{"DESCRI","C",040,0})
AADD(aStru,{"DTAQS"	,"D",008,0})

If 		cReg == "F120"
				//1234567890           //CAMPO No.
	AADD(aStru,{"REG"			,"C",004,0})  //01
	AADD(aStru,{"NAT_BC_CRE"	,"C",002,0})  //02
	AADD(aStru,{"IDENT_BEM"		,"N",002,0})  //03
	AADD(aStru,{"IND_ORIG_C"	,"C",001,0})  //04
	AADD(aStru,{"IND_UTIL_B"	,"N",001,0})  //05
	AADD(aStru,{"VL_OPER_DE"	,"N",018,2})  //06
	AADD(aStru,{"PARC_OPER"		,"N",018,2})  //07
	AADD(aStru,{"CST_PIS"		,"N",002,0})  //08
	AADD(aStru,{"VL_BC_PIS"		,"N",018,2})  //09
	AADD(aStru,{"ALIQ_PIS"		,"N",008,4})  //10
	AADD(aStru,{"VL_PIS"		,"N",018,2})  //11
	AADD(aStru,{"CST_COFINS"	,"N",002,0})  //12
	AADD(aStru,{"VL_BC_COFI"	,"N",018,2})  //13
	AADD(aStru,{"ALIQ_COFIN"	,"N",008,4})  //14
	AADD(aStru,{"VL_COFINS"		,"N",018,2})  //15
	AADD(aStru,{"COD_CTA"		,"C",060,0})  //16
	AADD(aStru,{"COD_CCUS"		,"C",060,0})  //17
	AADD(aStru,{"DESC_BEM_I"	,"C",200,0})  //18

ElseIf cReg == "F130"
				//1234567890           //CAMPO No.
	AADD(aStru,{"REG"			,"C",004,0})  //01
	AADD(aStru,{"NAT_BC_CRE"	,"C",002,0})  //02
	AADD(aStru,{"IDENT_BEM"		,"N",002,0})  //03
	AADD(aStru,{"IND_ORIG_C"	,"C",001,0})  //04
	AADD(aStru,{"IND_UTIL_B"	,"N",001,0})  //05
	AADD(aStru,{"MES_OPER_A"	,"N",006,0})  //06
	AADD(aStru,{"VL_OPER_AQ"	,"N",018,2})  //07
	AADD(aStru,{"PARC_OPER"		,"N",018,2})  //08
	AADD(aStru,{"VL_BC_CRED"	,"N",018,2})  //09
	AADD(aStru,{"IND_NR_PAR"	,"N",001,0})  //10
	AADD(aStru,{"CST_PIS"		,"N",002,0})  //11
	AADD(aStru,{"VL_BC_PIS"		,"N",018,2})  //12
	AADD(aStru,{"ALIQ_PIS"		,"N",008,4})  //13
	AADD(aStru,{"VL_PIS"		,"N",018,2})  //14
	AADD(aStru,{"CST_COFINS"	,"N",002,0})  //15
	AADD(aStru,{"VL_BC_COFI"	,"N",018,2})  //16
	AADD(aStru,{"ALIQ_COFIN"	,"N",008,4})  //17
	AADD(aStru,{"VL_COFINS"		,"N",018,2})  //18
	AADD(aStru,{"COD_CTA"		,"C",060,0})  //19
	AADD(aStru,{"COD_CCUS"		,"C",060,0})  //20
	AADD(aStru,{"DESC_BEM_I"	,"C",200,0})  //21
	//campos a ser utilizado pelo pessoal do N3-FISCAL (caio.martins)
	AADD(aStru,{"NOTAFISCAL"	,"C",Len(SN1->N1_NFISCAL),0})
	AADD(aStru,{"SERIE"			,"C",Len(SN1->N1_NSERIE),0})
	AADD(aStru,{"FORNECEDOR"	,"C",Len(SN1->N1_FORNEC),0})
	AADD(aStru,{"LOJA"			,"C",Len(SN1->N1_LOJA ),0})
	AADD(aStru,{"NUMPRO"		,"C"	,10,0})
	AADD(aStru,{"INDPRO"		,"C"	,1,0})

EndIf
Return aStru

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AtfPopuTmpºAutor  ³Microsiga           º Data ³  04/05/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Popularo arquivo temporario para gerar registro SPED FISCAL º±±
±±º          ³SPED FISCAL PIS/COFINS                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AtfPopuTmp(cReg,cAliasSN1,cAliasTmp,cCodBem,cItem,cDescr,dData,nVlrBCPIS,nVlrBCCOF,cTabOri,cNumPro,cIndPro)
Local lDefTop
Local nValor := nVlrBCPIS //somente considerara nVlrBCPIS pq no layout atual considera que são iguais
Local cDescExt := ''    
Local cIND_ORIG_C, nALIQ_PIS, nCST_PIS, nCST_COFINS, nALIQ_COFIN
Local lPEF130EXCL 	:= ExistBlock("AF130EXC")
Local lF120Cust     := ExistBlock("F120CUST" )
Local lPisMajor	:=  .F.
Local lCofMajor	:=  .F.
Local nAlqPisMaj := 0
Local nAlqCofMaj := 0
						
Default cNumPro := ""
Default cIndPro := ""

lDefTop := _lDefTopCTB

If lF120Cust
	ExecBlock("F120CUST",.F.,.F.,{cReg, cAliasTmp, cCodBem, cItem, cDescr, dData, cDescExt, cTabOri, cNumPro, cIndPro, nValor, cAliasSN1 })   
Else 
	(cAliasTmp)->(dbSetOrder(1))
	If !(cAliasTmp)->(dbSeek(cCodBem+cItem+dtos(dData)))
		RecLock(cAliasTmp,.T.)
		(cAliasTmp)->BEM		:= cCodBem
		(cAliasTmp)->ITEM		:= cItem
		(cAliasTmp)->DESCRI		:= cDescr
		(cAliasTmp)->DTAQS		:= dData
		cDescExt				:= Atf130DExt(cCodBem,cItem)
		(cAliasTmp)->DESC_BEM_I	:= If(Empty(cDescExt),cDescr,cDescExt)					//cpo:18 F120 ou cpo:21 F130
		MsUnLock()
	Endif
	
	If lDefTop
		SN1->( dbGoto( (cAliasSN1)->SN1RECNO  ) )
	EndIf
	
	nVlrExcl := 0
	If lPEF130EXCL     //ponto de entrada para incluir valor a excluir
		nVlrExcl := ExecBlock("AF130EXC",.F.,.F.,{cAliasTMP})
		If ValType(nVlrExcl) != "N"
			nVlrExcl := 0
		EndIf
	EndIf
	If cTabOri == "SD1"
		cIND_ORIG_C		:= If(Left(SD1->D1_CF,1)=="3","1","0")
		nCST_PIS 		:=	Int(Val(SF4->F4_CSTPIS))
		nALIQ_PIS 		:= SD1->D1_ALQIMP6
		nCST_COFINS		:= 	Int(Val(SF4->F4_CSTCOF))
		nALIQ_COFIN		:= 	SD1->D1_ALQIMP5	
		nAlqPisMaj 		:= SF4->F4_MALQPIS
		nAlqCofMaj 		:= SF4->F4_MALQCOF
		lPisMajor		:=  ( SF4->F4_MALQPIS <> 0 )
		lCofMajor		:=  ( SF4->F4_MALQCOF <> 0 )
	Else
		cIND_ORIG_C		:= SN1->N1_ORIGCRD
		nCST_PIS 		:= Int(Val(SN1->N1_CSTPIS))
		nALIQ_PIS 		:= SN1->N1_ALIQPIS 
		nCST_COFINS		:= Int(Val(SN1->N1_CSTCOFI))
		nALIQ_COFIN		:= SN1->N1_ALIQCOF 
	EndIf
	
	RecLock(cAliasTmp,.F.) 
	If lDefTop
		If 		cReg == "F120"                                                                            	//CPOS
			(cAliasTmp)->REG			:= "F120"															//01
			(cAliasTmp)->NAT_BC_CRE		:= (cAliasSN1)->(If((cAliasSN1)->N1_DETPATR$"01|02","11","09"))	//02
			(cAliasTmp)->IDENT_BEM		:= Int(Val((cAliasSN1)->N1_DETPATR))								//03
			(cAliasTmp)->IND_ORIG_C		:= cIND_ORIG_C														//04
			(cAliasTmp)->IND_UTIL_B		:= Int(Val((cAliasSN1)->N1_UTIPATR))								//05
			(cAliasTmp)->VL_OPER_DE		+= nValor															//06
			(cAliasTmp)->PARC_OPER		:= 	0																//07
			(cAliasTmp)->CST_PIS		:= 	nCST_PIS														//08
			(cAliasTmp)->VL_BC_PIS		:= (cAliasTmp)->(VL_OPER_DE-PARC_OPER)								//09
			(cAliasTmp)->ALIQ_PIS		:= 	nALIQ_PIS   													//10
			(cAliasTmp)->VL_PIS			:= (cAliasTmp)->(VL_BC_PIS*ALIQ_PIS/100)							//11
			(cAliasTmp)->CST_COFINS		:= 	nCST_COFINS														//12
			(cAliasTmp)->VL_BC_COFI		:=  (cAliasTmp)->(VL_OPER_DE-PARC_OPER)							//13
			(cAliasTmp)->ALIQ_COFIN		:= 	nALIQ_COFIN														//14
			(cAliasTmp)->VL_COFINS		:= (cAliasTmp)->(VL_BC_COFI*ALIQ_COFIN/100)						//15
			(cAliasTmp)->COD_CTA		:= (cAliasSN1)->N3_CDEPREC											//16
			(cAliasTmp)->COD_CCUS		:= (cAliasSN1)->N3_CCUSTO											//17
		ElseIf cReg == "F130"
			(cAliasTmp)->REG			:= "F130"															//01
			(cAliasTmp)->NAT_BC_CRE		:= "10"																//02
			(cAliasTmp)->IDENT_BEM		:= Int(Val((cAliasSN1)->N1_DETPATR))								//03
			(cAliasTmp)->IND_ORIG_C		:= cIND_ORIG_C														//04
			(cAliasTmp)->IND_UTIL_B		:= Int(Val((cAliasSN1)->N1_UTIPATR))								//05
			(cAliasTmp)->MES_OPER_A		:= Int(Val(Subs(Dtos(dData),5,2)+Subs(Dtos(dData),1,4)))			//06
			(cAliasTmp)->VL_OPER_AQ		+= nValor															//07
			(cAliasTmp)->PARC_OPER		+= nVlrExcl															//08
			(cAliasTmp)->VL_BC_CRED		:= (cAliasTmp)->(VL_OPER_AQ-PARC_OPER)								//09
			(cAliasTmp)->IND_NR_PAR		:= Atf130Parc(Int((cAliasSN1)->N1_MESCPIS))						//10
			(cAliasTmp)->CST_PIS		:= nCST_PIS															//11
			If Int((cAliasSN1)->N1_MESCPIS) > 0
				(cAliasTmp)->VL_BC_PIS 	:= (cAliasTmp)->VL_BC_CRED/Int((cAliasSN1)->N1_MESCPIS) 			//12
			Else
				(cAliasTmp)->VL_BC_PIS 	:= (cAliasTmp)->VL_BC_CRED								 			//12
			EndIF

			If !lPisMajor  //se nao tem PIS majorado
				(cAliasTmp)->ALIQ_PIS		:= 	nALIQ_PIS														//13
				(cAliasTmp)->VL_PIS 		:= (cAliasTmp)->(VL_BC_PIS*ALIQ_PIS/100)							//14
			Else
				(cAliasTmp)->ALIQ_PIS		:= 	nALIQ_PIS - nAlqPisMaj														//13
				(cAliasTmp)->VL_PIS 		:= ( (cAliasTmp)->(VL_BC_PIS*nALIQ_PIS/100) - (cAliasTmp)->(VL_BC_PIS*nAlqPisMaj/100) )							//14
			EndIf

			(cAliasTmp)->CST_COFINS		:= 	nCST_COFINS														//15
			If Int((cAliasSN1)->N1_MESCPIS) > 0
				(cAliasTmp)->VL_BC_COFI	:= (cAliasTmp)->VL_BC_CRED/Int((cAliasSN1)->N1_MESCPIS) 			//16
			Else
				(cAliasTmp)->VL_BC_COFI	:= (cAliasTmp)->VL_BC_CRED								 			//16
			EndIf

			If !lCofMajor  //se nao tem COFINS majorado
				(cAliasTmp)->ALIQ_COFIN		:= nALIQ_COFIN														//17
				(cAliasTmp)->VL_COFINS		:= (cAliasTmp)->(VL_BC_COFI*ALIQ_COFIN/100)		 				//18
			Else
				(cAliasTmp)->ALIQ_COFIN		:= nALIQ_COFIN - nAlqCofMaj														//17
				(cAliasTmp)->VL_COFINS		:= ( (cAliasTmp)->(VL_BC_COFI*nALIQ_COFIN/100) - (cAliasTmp)->(VL_BC_COFI*nAlqCofMaj/100) )	 				//18
			EndIf

			(cAliasTmp)->COD_CTA		:= (cAliasSN1)->N3_CCONTAB											//19
			(cAliasTmp)->COD_CCUS		:= (cAliasSN1)->N3_CCUSTO											//20
			//campos a ser utilizado pelo pessoal do N3-FISCAL (caio.martins)
			(cAliasTmp)->NOTAFISCAL		:= (cAliasSN1)->N1_NFISCAL
			(cAliasTmp)->SERIE			:= (cAliasSN1)->N1_NSERIE
			(cAliasTmp)->FORNECEDOR		:= (cAliasSN1)->N1_FORNEC
			(cAliasTmp)->LOJA 			:= (cAliasSN1)->N1_LOJA
			(cAliasTmp)->NUMPRO 		:= cNumPro
			(cAliasTmp)->INDPRO			:= cIndPro
			
		EndIf
	Else
		If 		cReg == "F120"
			(cAliasTmp)->REG			:= "F120"															//01
			(cAliasTmp)->NAT_BC_CRE		:= If(SN1->N1_DETPATR$"01|02","11","09")							//02
			(cAliasTmp)->IDENT_BEM		:= Int(Val(SN1->N1_DETPATR))										//03
			(cAliasTmp)->IND_ORIG_C		:= cIND_ORIG_C														//04
			(cAliasTmp)->IND_UTIL_B		:= Int(Val(SN1->N1_UTIPATR))										//05
			(cAliasTmp)->VL_OPER_DE		+= nValor															//06
			(cAliasTmp)->PARC_OPER		:= 	0																//07
			(cAliasTmp)->CST_PIS		:= 	nCST_PIS 														//08
			(cAliasTmp)->VL_BC_PIS		:= (cAliasTmp)->(VL_OPER_DE-PARC_OPER)								//09
			(cAliasTmp)->ALIQ_PIS		:= 	nALIQ_PIS 														//10
			(cAliasTmp)->VL_PIS			:= (cAliasTmp)->(VL_BC_PIS*ALIQ_PIS/100)							//11
			(cAliasTmp)->CST_COFINS		:= 	nCST_COFINS														//12
			(cAliasTmp)->VL_BC_COFI		:=  (cAliasTmp)->(VL_OPER_DE-PARC_OPER)							//13
			(cAliasTmp)->ALIQ_COFIN		:= 	nALIQ_COFIN														//14
			(cAliasTmp)->VL_COFINS		:= (cAliasTmp)->(VL_BC_COFI*ALIQ_COFIN/100)						//15
			(cAliasTmp)->COD_CTA		:= SN3->N3_CDEPREC													//16
			(cAliasTmp)->COD_CCUS		:= SN3->N3_CCUSTO													//17
		ElseIf cReg == "F130"
			(cAliasTmp)->REG			:= "F130"															//01
			(cAliasTmp)->NAT_BC_CRE		:= "10"																//02
			(cAliasTmp)->IDENT_BEM		:= Int(Val(SN1->N1_DETPATR))										//03
			(cAliasTmp)->IND_ORIG_C		:= cIND_ORIG_C														//04
			(cAliasTmp)->IND_UTIL_B		:= Int(Val(SN1->N1_UTIPATR))										//05
			(cAliasTmp)->MES_OPER_A		:= Int(Val(Subs(Dtos(dData),5,2)+Subs(Dtos(dData),1,4)))			//06
			(cAliasTmp)->VL_OPER_AQ		+= nValor															//07
			(cAliasTmp)->PARC_OPER		+= nVlrExcl 														//08
			(cAliasTmp)->VL_BC_CRED		:= (cAliasTmp)->(VL_OPER_AQ-PARC_OPER)								//09
			(cAliasTmp)->IND_NR_PAR		:= Atf130Parc(Int(SN1->N1_MESCPIS))								//10
			(cAliasTmp)->CST_PIS		:= nCST_PIS															//11
			If Int(SN1->N1_MESCPIS) > 0
				(cAliasTmp)->VL_BC_PIS 	:= (cAliasTmp)->VL_BC_CRED/Int(SN1->N1_MESCPIS)		 			//12
			Else
				(cAliasTmp)->VL_BC_PIS 	:= (cAliasTmp)->VL_BC_CRED							 				//12
			EndIF
			
			If !lPisMajor  //se nao tem PIS majorado
				(cAliasTmp)->ALIQ_PIS		:= 	nALIQ_PIS														//13
				(cAliasTmp)->VL_PIS 		:= (cAliasTmp)->(VL_BC_PIS*ALIQ_PIS/100)							//14
			Else
				(cAliasTmp)->ALIQ_PIS		:= 	nALIQ_PIS - nAlqPisMaj														//13
				(cAliasTmp)->VL_PIS 		:= ( (cAliasTmp)->(VL_BC_PIS*nALIQ_PIS/100) - (cAliasTmp)->(VL_BC_PIS*nAlqPisMaj/100) )							//14
			EndIf

			(cAliasTmp)->CST_COFINS		:= 	nCST_COFINS														//15
			If Int(SN1->N1_MESCPIS) > 0
				(cAliasTmp)->VL_BC_COFI	:= (cAliasTmp)->VL_BC_CRED/Int(SN1->N1_MESCPIS) 					//16
			Else
				(cAliasTmp)->VL_BC_COFI	:= (cAliasTmp)->VL_BC_CRED								 			//16
			EndIf

			If !lCofMajor  //se nao tem COFINS majorado
				(cAliasTmp)->ALIQ_COFIN		:= nALIQ_COFIN														//17
				(cAliasTmp)->VL_COFINS		:= (cAliasTmp)->(VL_BC_COFI*ALIQ_COFIN/100)		 				//18
			Else
				(cAliasTmp)->ALIQ_COFIN		:= nALIQ_COFIN - nAlqCofMaj														//17
				(cAliasTmp)->VL_COFINS		:= ( (cAliasTmp)->(VL_BC_COFI*nALIQ_COFIN/100) - (cAliasTmp)->(VL_BC_COFI*nAlqCofMaj/100) )	 				//18
			EndIf

			(cAliasTmp)->COD_CTA		:= SN3->N3_CCONTAB													//19
			(cAliasTmp)->COD_CCUS		:= SN3->N3_CCUSTO													//20
			//campos a ser utilizado pelo pessoal do N3-FISCAL (caio.martins)
			(cAliasTmp)->NOTAFISCAL		:= SN1->N1_NFISCAL
			(cAliasTmp)->SERIE			:= SN1->N1_NSERIE
			(cAliasTmp)->FORNECEDOR		:= SN1->N1_FORNEC
			(cAliasTmp)->LOJA 			:= SN1->N1_LOJA
			(cAliasTmp)->NUMPRO 		:= cNumPro
			(cAliasTmp)->INDPRO			:= cIndPro
			
		EndIf
	EndIf
	MsUnLock()
EndIf

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Atf130ParcºAutor  ³Microsiga           º Data ³  11/05/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Retorna codigo para layout correspondente ao numero de      º±±
±±º          ³meses (N1_MESCPIS)                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function Atf130Parc(nMeses)
Local nRet := 0
If nMeses == 0
	nRet := 1
ElseIf nMeses == 12
	nRet := 2
ElseIf nMeses == 24
	nRet := 3
ElseIf nMeses == 48
	nRet := 4
//ElseIf nMeses == 6     Utilizado apenas para Embalagens de bebidas frias
//	nRet := 5
Else
	nRet := 9
EndIf
Return(nRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AtfCriaTmpºAutor  ³Microsiga           º Data ³  04/05/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Criacao do arquivo temporario para gerar registro           º±±
±±º          ³SPED FISCAL PIS/COFINS                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AtfCriaTmp(aStru,cAliasTmp,aRetTmp)
Local cArqTmp
Default aRetTmp := {}

cArqTmp	:=	CriaTrab(aStru)

If Select( cArqTmp ) > 0
	DbSelectArea( cArqTmp )
	( cArqTmp )->( DbCloseArea() )
Endif

dbUseArea(.T.,__LocalDriver,cArqTmp,cAliasTmp)
IndRegua(cAliasTmp,cArqTmp,"BEM+ITEM+DTOS(DTAQS)")
AADD(aRetTmp,{cArqTmp,cAliasTmp})

Return aRetTmp

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Atf130DExtºAutor  ³Microsiga           º Data ³  11/05/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Retorna descricao estendia                                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function Atf130DExt(cCodBem,cItem)
Local cString := ""
dbSelectArea("SN2")
dbSetOrder(1)
If dbSeek(xFilial("SN2")+cCodBem+cItem+"01")
	While SN2->(!Eof() .And. N2_FILIAL+N2_CBASE+N2_ITEM+N2_TIPO==xFilial("SN2")+cCodBem+cItem+"01")
		cString += Alltrim(SN2->N2_HISTOR)+Space(1)
		SN2->(dbSkip())
	EndDo
EndIf
cString := Alltrim(StrTran(cString,CRLF,' '))
Return(cString)