#INCLUDE "FINA380.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWCOMMAND.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "TBICONN.CH" 
#INCLUDE "FWLIBVERSION.CH"

Static lFWCodFil 	:= .T.
Static _lFA380CHV	:= ExistBlock("FA380CHV")
Static __lMinInd	:= .F.
Static __cUsrChv	:= ""
Static __oFin380	:= NIL
Static __aF380IND   := {}
Static __lFa380     := ExistBlock("F380RECO",.F.,.F.)
Static __oTmpTotl	:= NIL
Static _lSharSA61	:= NIL
Static _lSharSA62	:= NIL
Static _lSharSA63	:= NIL
Static _lSharSE53	:= NIL
Static __lMetric    := .F.

//--------------------------------------------------------------         
/*/{Protheus.doc} FINA380
Conciliação bancária

@author Pilar S. Albaladejo
@since 24/10/1994
@version 12
/*/
//--------------------------------------------------------------
Function FinA380( nPosArotina, lAutomato )
Local aArea			:= GetArea()

Private aRotina		:= MenuDef()
Private cBco380		:= CriaVar("E5_BANCO")
Private cAge380		:= CriaVar("E5_AGENCIA")
Private cCta380		:= CriaVar("E5_CONTA")
Private dIniDt380	:= dDataBase
Private dFimDt380	:= dDataBase
Private nQtdTitP	:= 0
Private nQtdTitR	:= 0
Private nValRec		:= 0
Private nValPag		:= 0
Private nBalOn380	:= 0
Private nSldFinOn	:= 0
Private cCadastro	:= STR0003 // Cabeçalho da tela de baixas - "Reconciliação Bancária"
Private cFil380		:= ""	// Variavel destinada a complementação do filtro atrves de ponto de entrada

_lSharSA61	:= FWModeAccess("SA6",1) == "C"
_lSharSA62	:= FWModeAccess("SA6",2) == "C"
_lSharSA63	:= FWModeAccess("SA6",3) == "C"
_lSharSE53	:= FWModeAccess("SE5",3) == "C"
__lMetric       := FwLibVersion() >= "20210517"

Default lAutomato	:= .F.
Default nPosArotina	:= 0

dbSelectArea("SE5")
dbSetOrder(1)
dbSeek(xFilial("SE5"))

//--------------------------------
// Chamada da funcao pergunte
// mv_par01 - Visibilidade
// 1 - Todos
// 2 - Nao Conciliados
// 3 - Conciliados
//--------------------------------
SetKey (VK_F12,{|a,b| AcessaPerg("FIN380",.T.)})
pergunte("FIN380",.F.)

 // Endereçaa a Função de Browse
If nPosArotina > 0 // Sera executada uma opcao diretamento de aRotina, sem passar pela mBrowse
	dbSelectArea("SE5")
	bBlock := &( "{ |a,b,c,d,e| " + aRotina[ nPosArotina,2 ] + "(a,b,c,d,e) }" )
	Eval( bBlock, Alias(), (Alias())->(Recno()),nPosArotina,,lAutomato)
Else
	mBrowse( 6, 1,22,75,"SE5",,,,,,F380Legenda())
EndIf

//------------------------------------
// Recupera a Integridade dos dados
//------------------------------------
RestArea(aArea)

FWFreeArray(__aF380IND)
FWFreeArray(aArea)

_lSharSA61	:= NIL
_lSharSA62	:= NIL
_lSharSA63	:= NIL
_lSharSE53	:= NIL
Return


//--------------------------------------------------------------
/*/{Protheus.doc} fA380Rec
Conciliação bancária

@author Pilar S. Albaladejo
@since 24/10/1994
@version 12
/*/
//--------------------------------------------------------------
Function fA380Rec( cAlias, cCampo, nOpcE, lCtrlCheq, lAutomato )
Local lPanelFin		:= IsPanelFin()
Local nSldIniRec	:= 0 //nSaldoIni Saldo anterior (Reconciliados)
Local nSldFinRec	:= 0 //nSaldoAtu Saldo atual (Reconciliados)
Local nSldIniBanc	:= 0 //nSaldoGer Saldo anterior (Bancario)
Local nSldFinBanc	:= 0 //Saldo Atual (Bancario)
Local nOpca 		:= 0
Local aStruct		:= {}
Local dDTLimRec		:= GetMV("MV_DATAREC")
Local lF380Grv		:= ExistBlock("F380GRV",.F.,.F.)
Local aCampos		:= {}
Local oDlg			:= NIL
Local oQtdaP		:= NIL
Local oQtdaR		:= NIL
Local oValRec		:= NIL
Local oValPag		:= NIL
Local oValIni		:= NIL
Local oValAtu		:= NIL
Local oValRecT		:= NIL
Local oValGer		:= NIL
Local oMark			:= 0
Local lInverte		:= .F.
Local lAtuSaldo		:= .F.
Local lAtSalRec1	:= .F.
Local lAtSalRec2	:= .F.
Local nReconc		:= 0
Local cReconAnt		:= ""
Local aSize			:= {}
Local oPanel		:= NIL
Local cKeyCheque	:= ""  
Local lAltDt		:= .T.
Local lSaldoAtu		:= .F.
Local nLinha		:= 0
Local nSize			:= 0
Local aColuna		:= {}
Local lF380VLD		:= ExistBlock("F380VLD",.F.,.F.) 
Local lL380VLD		:= .F.
Local lF380AlDt 	:= ExistBlock("F380AlDt")
Local nPosVlr		:= 0
Local nValTit		:= 0
Local nTamFil		:= 0
Local nTamKey		:= 0
Local nTamTipo   	:= 0
Local nInicio		:= 0
Local nFim			:= 0
Local nCont			:= 0
Local nY			:= 0
Local nZ			:= 0
Local nIntervalo	:= 0
Local cAux			:= {}
Local aArrInd		:= { "E5_DTDISPO", "E5_NATUREZ", "E5_VALOR", "E5_RECPAG", "E5_NUMERO", "E5_BENEF" }
Local cFilAtu		:= cFilAnt
Local lOK			:= .F.
Local cIdProc		:= "" 
Local lF380ATR		:= ExistBlock("F380ATR")
Local lF380IND		:= ExistBlock("F380IND")
Local lF380MTR		:= ExistBlock("F380MTR")
Local oValOnLin		:= NIL
Local cMoedBco		:= Alltrim(Str(SA6->A6_MOEDA))
Local nI			:= 0
Local aObfuscated	:= {}
Local cCampos		:= ""
Local nTamFilNam	:= 0
Local nPosFil		:= 0
Local nOrdSeek		:= 7
Local lDTDispFK 	:= FK1->(FieldPos("FK1_DTDISP")) > 0 .And. FK2->(FieldPos("FK2_DTDISP")) > 0 
Local nCampo        As Numeric
Local cCampoAtu     As Character
Local cSinal        := ""
Local oMovFilho     := Nil
Local nTimer        := 0
Local nMedTimer     := 0
Local oTimer        := Nil
Local nTotTit		:= 0

Private aChave		:= {}
Private cIndexSE5	:= ""
Private cMarca		:= GetMark()

Default lCtrlCheq	:= .F.
Default lAutomato	:= .F.

If !CtbValiDt(,dDataBase,,,,{"FIN001","FIN002"},)
	Return
EndIf
	
__aF380IND := {}

If cPaisLoc == "BRA"
   aCampos	 := {	{ "E5_OK"  		 ,, STR0004 },; //"Rec."      
					{ "E5_FILIAL"    ,, STR0080 },; //"Filial"
					{ "E5_DTDISPO"   ,, STR0067 },; //"DT Disponivel"
					{ "E5_MOEDA"     ,, STR0006 },; //"Numer rio"
					{ "E5_VALOR"     ,, STR0007 ,PesqPict("SE5","E5_VALOR",19)},; //"Vlr. Movimen."
					{ "E5_NATUREZ"   ,, STR0008 },; //"Natureza"
					{ "E5_BANCO"     ,, STR0009 },; //"Banco"
					{ "E5_AGENCIA"   ,, STR0010 },; //"Agˆncia"
					{ "E5_CONTA"     ,, STR0011 },; //"Conta"
					{ "E5_NUMCHEQ"   ,, STR0012 },; //"Num. Cheque"
					{ "E5_DOCUMEN"   ,, STR0013 },; //"Documento"
					{ "E5_VENCTO"    ,, STR0014 },; //"Vencimeto"
					{ "E5_DATA"		 ,, STR0005 },; //"DT Movimento"
					{ "E5_RECPAG"    ,, STR0036 },; //"Rec/Pag"
					{ "E5_BENEF"     ,, STR0015 },; //"Benefici rio"
					{ "E5_HISTOR"    ,, STR0016 },; //"Hist¢rico"
					{ "E5_CREDITO"   ,, STR0017	},; //"Cta Cr‚dito"
					{ "E5_PREFIXO"   ,, STR0058	},; //"Prefixo"
					{ "E5_NUMERO"    ,, STR0059	},; //"Número"
					{ "E5_PARCELA"   ,, STR0060	},; //"Parcela"
					{ "E5_TIPO" 	 ,, STR0061	},; //"Tipo"
					{ "E5_CLIFOR"	 ,, STR0062	},; //"Cli/For"
					{ "E5_LOJA" 	 ,, STR0063	}} 	//"Loja"

Else   
   aCampos	 := {	{ "E5_OK"  		 ,, STR0004 },; //"Rec."
					{ "E5_NUMERO"    ,, STR0040 },; //"Numero"   
					{ "E5_DTDISPO"   ,, STR0067 },; //"DT Disponivel"
					{ "E5_MOEDA"     ,, STR0006 },; //"Numer rio"
					{ "E5_VALOR"     ,, STR0007 ,PesqPict("SE5","E5_VALOR",19)},; //"Vlr. Movimen."
					{ "E5_NATUREZ"   ,, STR0008 },; //"Natureza"
					{ "E5_BANCO"     ,, STR0009 },; //"Banco"
					{ "E5_AGENCIA"   ,, STR0010 },; //"Agˆncia"
					{ "E5_CONTA"     ,, STR0011 },; //"Conta"
					{ "E5_NUMCHEQ"   ,, STR0012 },; //"Num. Cheque"
					{ "E5_DOCUMEN"   ,, STR0013 },; //"Documento"
					{ "E5_VENCTO"    ,, STR0014 },; //"Vencimeto"
					{ "E5_DATA"		 ,, STR0005 },; //"DT Movimento"
					{ "E5_RECPAG"    ,, STR0036 },; //"Rec/Pag"
					{ "E5_BENEF"     ,, STR0015 },; //"Benefici rio"
					{ "E5_HISTOR"    ,, STR0016 },; //"Hist¢rico"
					{ "E5_CREDITO"   ,, STR0017 }}  //"Cta Cr‚dito"
EndIf

// Permite a altera‡Æo da ordem em que os campos serÆo apresentados.
If ExistBlock("F380CPOS")
	aCampos := ExecBlock("F380CPOS", .F., .F., { aCampos } )
Endif

If lPanelFin
	lOK := PergInPanel("FIN380",.T.)
Else
	lOK := pergunte("FIN380",.T.)
Endif

While lOK
	nSldIniRec	:= 0	/*Saldo anterior (Reconciliados)*/
	nSldFinRec	:= 0	/*Saldo atual (Reconciliados)*/
	nSldIniBanc	:= 0	/*Saldo anterior (Bancario)*/
	nSldFinBanc := 0	/*Saldo Atual (Bancario)*/
	nQtdTitP	:= 0
	nQtdTitR	:= 0
	nValRec		:= 0
	nValPag		:= 0
	nValRecT	:= 0
	nValPagT	:= 0
	nOpca		:= 3

	aSize := MSADVSIZE()
	If cPaisLoc $ "ARG|DOM|EQU" .AND. (FUNNAME()=="FINA095" .OR. FUNNAME()=="FINA096")
		nOpca:=1
	ElseIf !lAutomato
		If lPanelFin  //Chamado pelo Painel Financeiro					
			oPanelDados := FinWindow:GetVisPanel()
			oPanelDados:FreeChildren()
			aDim := DLGinPANEL(oPanelDados)
			DEFINE MSDIALOG oDlg OF oPanelDados:oWnd FROM 0,0 To 0,0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )							
			//------------------------------------------------------------------
			// Observacao Importante quanto as coordenadas calculadas abaixo:  
			//--------------------------------------------------------------  		
			// a funcao DlgWidthPanel() retorna o dobro do valor da area do
			// painel, sendo assim este deve ser dividido por 2 antes da 
			// subtracao e redivisao por 2 para a centralizacao.
			//------------------------------------------------------------------
			nEspLarg :=	(((DlgWidthPanel(oPanelDados)/2) - 160) /2)
			nEspLin  := 0
		Else   
			nEspLarg := 0
			nEspLin  := 0
			If cPaisLoc $ "EUA"
				DEFINE MSDIALOG oDlg FROM	91,83 TO 318,412 TITLE cCadastro PIXEL //"Reconcili‡„o Banc ria"
			Else
		  		DEFINE MSDIALOG oDlg FROM	91,83 TO 278,412 TITLE cCadastro PIXEL //"Reconcili‡„o Banc ria"
			EndIf
		Endif   

		oDlg:lMaximized := .F.
		oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,20,20)
		oPanel:Align := CONTROL_ALIGN_ALLCLIENT    		
		
		If cPaisLoc $ "EUA"
			@ 000+nEspLin,003+nEspLarg TO 093+nEspLin,163+nEspLarg OF oPanel  PIXEL
		Else
			@ 000+nEspLin,003+nEspLarg TO 073+nEspLin,163+nEspLarg OF oPanel  PIXEL
		Endif
		
		@ 011+nEspLin,010+nEspLarg SAY STR0020 SIZE 20, 7 OF oPanel PIXEL //"Banco:"
		@ 009+nEspLin,045+nEspLarg MSGET cBco380	F3 "SA6" Picture PesqPict("SE8","E8_BANCO")  ;
										Valid If(nOpca<>0,CarregaSA6(@cBco380,,,.T.),.T.) ;
										SIZE 17, 10 OF oPanel Hasbutton PIXEL
		@ 026+nEspLin,010+nEspLarg SAY STR0021 SIZE 24, 7 OF oPanel PIXEL //"Agˆncia:"
		@ 024+nEspLin,045+nEspLarg MSGET cAge380	Picture PesqPict("SE8","E8_AGENCIA")   ;
										Valid If(nOpca<>0,CarregaSA6(@cBco380,@cAge380,,.T.),.T.) ;
										SIZE 32, 10 OF oPanel PIXEL
		@ 42+nEspLin,010+nEspLarg SAY STR0022 SIZE 20, 7 OF oPanel PIXEL //"Conta:"
		If cPaisLoc == 'CHI'
			@ 040+nEspLin,045+nEspLarg MSGET cCta380	Picture PesqPict("SE8","E8_CONTA") ; 
											Valid If(nOpca<>0,CarregaSA6(@cBco380,@cAge380,@cCta380,.T.),.T.) ;
											SIZE 67, 10 OF oPanel PIXEL
		Else 
			@ 040+nEspLin,045+nEspLarg MSGET cCta380	Picture PesqPict("SE8","E8_CONTA") ; 
											Valid If(nOpca<>0,CarregaSA6(@cBco380,@cAge380,@cCta380,.T.),.T.) ;
											SIZE 47, 10 OF oPanel PIXEL
		EndIf										
		@ 057+nEspLin,010+nEspLarg SAY STR0027 SIZE 20, 7 OF oPanel PIXEL //"De"
		@ 056+nEspLin,045+nEspLarg MSGET dIniDt380 	Picture "99/99/99" ;
											VALID If( nOpca <> 0, Iif( !lF380VLD, (dIniDt380 > dDtLimRec), .T. ), .T. ) ;
											SIZE 50, 10 OF oPanel Hasbutton PIXEL
		@ 058+nEspLin,098+nEspLarg SAY STR0024 SIZE 20, 7 OF oPanel PIXEL //"Até"	
		@ 056+nEspLin,114+nEspLarg MSGET dFimDt380	Picture "99/99/99";
											VALID If( nOpca <> 0, Iif( !lF380VLD, ((dFimDt380 > dDtLimRec) .and. (dFimDt380 >= dIniDt380)), .T. ), .T.) ;
											SIZE 50, 10 OF oPanel Hasbutton PIXEL
		If cPaisLoc $ "EUA"

			@ 076+nEspLin,010+nEspLarg SAY STR0089 SIZE 20, 7 OF oPanel PIXEL //"Balance Online"
			@ 074+nEspLin,045+nEspLarg MSGET nBalOn380	Picture PesqPict("SE5","E5_VALOR")  ;
										Valid .T. ;
										SIZE 60, 10 OF oPanel Hasbutton PIXEL
		
		EndIf
		If lPanelFin //Chamado pelo Painel Financeiro			
			oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1])			
			ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,{||nOpca:=1,oDLg:End()},{||nOpca:=0,oDlg:End()})
			
			cAlias := FinWindow:cAliasFile     
			dbSelectArea(cAlias)					
			FinVisual(cAlias,FinWindow,(cAlias)->(Recno()),.T.)
	
		Else	
			If cPaisLoc $ "EUA"
				DEFINE SBUTTON FROM 96, 104 TYPE 1 ENABLE ACTION (nOpca:=1,oDLg:End()) OF oPanel
				DEFINE SBUTTON FROM 96, 132 TYPE 2 ENABLE ACTION oDlg:End() OF oPanel
			Else
				DEFINE SBUTTON FROM 76, 104 TYPE 1 ENABLE ACTION (nOpca:=1,oDLg:End()) OF oPanel
				DEFINE SBUTTON FROM 76, 132 TYPE 2 ENABLE ACTION oDlg:End() OF oPanel
			Endif   	
			ACTIVATE MSDIALOG oDlg CENTERED
		Endif
	Elseif lAutomato //para rutina Automatica
		If FindFunction("GetParAuto")
			aRetAuto 		:= GetParAuto("FINA380TESTCASE")
			cBco380 		:= aRetAuto[1]
			cAge380 		:= aRetAuto[2]
			cCta380 		:= aRetAuto[3]
			dIniDt380 		:= aRetAuto[4]
			dFimDt380 		:= aRetAuto[5]
		Endif
		nOpca:=1	
	Endif

	If nOpca == 0 .Or. nOpca == 3
		Return
	Else 
		If lF380VLD
			// Se retornar falso nao continua processamento
			lL380VLD := ExecBlock("F380VLD", .F., .F., { dDtLimRec, dIniDt380, dFimDt380 } )
			
			If ValType(lL380VLD) == "L" 
				If !lL380VLD
					Loop                                                                          
				EndIf
			EndIf	
		Else
			If dIniDt380 <= dDtLimRec .Or. dFimDt380 <= dDtLimRec
				// Período informado está abaixo da data limite de Reconciliacao Bancária.
				Aviso( STR0077, STR0079, {"Ok"} )
				Exit
			EndIf
		EndIf
	EndIf
	If cPaisLoc == "BRA" .AND. (SA6->A6_MOEDA > 1)
		nPosVlr := aScan(aCampos, {|x| x[1] == "E5_VALOR"})
	Endif

	SA6->(dbSetOrder(1))
	MsSeek( xFilial("SA6")+cBco380+cAge380+cCta380)
	cMoedBco := Alltrim(Str(SA6->A6_MOEDA))

	dbSelectArea( "SE8" )
	dbSeek( xFilial("SE8")+cBco380+cAge380+cCta380+Dtos(dIniDt380),.T. )
	dbSkip( -1 )
	
	If xFilial("SE8") != E8_FILIAL .or.  E8_BANCO != cBco380 .or. E8_AGENCIA != cAge380 .or. E8_CONTA != cCta380 .or. BOF() .or. EOF()
		nSldIniRec	:= 0					/*Saldo anterior (Reconciliados)*/
		nSldIniBanc	:= 0					/*Saldo anterior (Bancario)*/
	Else
		nSldIniBanc	:= E8_SALATUA		/*Saldo anterior*/
		nSldIniRec	:= E8_SALRECO		/*Saldo anterior (Reconciliados)*/
	End

	SE8->(dbSeek( xFilial("SE8")+cBco380+cAge380+cCta380+Dtos(dFimDt380),.T. ))
	If xFilial ("SE8") != E8_FILIAL .or. E8_BANCO != cBco380 .or. E8_AGENCIA != cAge380 .or. E8_CONTA != cCta380 .or.;	
		Dtos(dFimDt380) != DTOS(E8_DTSALAT) .or. BOF() .or. EOF()
		dbSkip(-1)  
		lSaldoAtu := ! (E8_FILIAL+E8_BANCO+E8_AGENCIA+E8_CONTA != xFilial("SE8")+cBco380+cAge380+cCta380 .or. BOF() .or. EOF())  		
	Else
		lSaldoAtu := .T.
	Endif	 

	// Atualiza o valor do saldo atual
	If !lSaldoAtu
		nSldFinRec	:= 0					/*Saldo atual (Reconciliados)*/
		nSldFinBanc	:= 0					/*Saldo atual (Bancario)*/
	Else
		nSldFinBanc	:= E8_SALATUA		/*Saldo atual (Reconciliados)*/
		nSldFinRec	:= E8_SALRECO		/*Saldo atual (Reconciliados)*/
	EndIf
	
	dbSelectArea("SE5")
	
	If _lFA380CHV
		cChave  := ExecBlock("FA380CHV", .F., .F.)
		
		If SubStr(AllTrim(cChave),1,1) == "("
			cChave := StrTran(cChave,"(","",,1)
		EndIf
		
		aChave := StrTokArr(cChave,"+")
		
		For nCont	:= 1 to Len(aChave)
			nY	:= ASCAN(aChave,"DTOS(")
			If nY > 0 
				aChave[nY] := STRTRAN(aChave[nY],"DTOS(","")
				aChave[nY] := STRTRAN(aChave[nY],")","")
			EndIf
		
			nZ	:= ASCAN(aChave,"STR(")
			If nZ > 0 
				cAux	:= aChave[nZ]	
				nInicio := AT('(',cAux) + 1
				nFim	:= AT(',',cAux)
				If nFim == 0
					nFim	:= AT(')',cAux)
				Endif	
				nIntervalo := nFim - nInicio 
				
				aChave[nZ] := Subs(cAux,nInicio,nInterValo)
			EndIf
			If nCont == Len(aChave)
				aChave[nCont]	:= STRTRAN(aChave[nCont],")","")
			EndIf
			If nCont == 1
				nY	:= 0
				nY	:= ASCAN(aArrInd,{|x| x == aChave[1]})
				If nY > 0
					// destroi o vetor auxiliar
					aSize( aArrInd, 0 )
					aArrInd := Nil
				Else
					aSize( aArrInd, 0 )
					aArrInd := Nil
				EndIf
			EndIf
		Next
	Else
		aChave  := {"E5_DTDISPO", "E5_BANCO", "E5_AGENCIA", "E5_CONTA"}
	EndIf
	
	aStruct := SE5->(dbStruct())
	AAdd( aStruct, {"E5_RECNO"		,"N", 15, 0} )
	AAdd( aStruct, {"E5_OK2"		,"C", 2, 0} )
	
	nTamFilNam := Len(FWFilialName(cEmpAnt,cFilAnt,1))+3
	nPosFil := aScan(aStruct,{|x|x[1]=="E5_FILIAL"})
	aStruct[nPosFil][3] += nTamFilNam
	
	If(__oFin380 <> NIL)
		__oFin380:Delete()
		__oFin380 := NIL
	EndIf

	//Criando a tabela temporaria
	__oFin380 := FwTemporaryTable():New("TRB")
	//Setando as colunas
	__oFin380:SetFields(aStruct)
	
	//Criando o indicie
	If _lFA380CHV .And. !Empty(aChave)
		__oFin380:AddIndex("1",	aChave)
		__cUsrChv	:= aChave[1]
		nOrdSeek := 1
	Else
		__oFin380:AddIndex("1",	{"E5_DTDISPO", "E5_BANCO", "E5_AGENCIA", "E5_CONTA"})
		__oFin380:AddIndex("2", {"E5_NATUREZ"})	//"Natureza"
		__oFin380:AddIndex("3", {"E5_VALOR"})   //"Valor Movimento"
		__oFin380:AddIndex("4", {"E5_RECPAG"})  //"Receber/Pagar"
		__oFin380:AddIndex("5", {"E5_NUMERO"})	//"Numero"
		__oFin380:AddIndex("6", {"E5_BENEF"})	//"Beneficiario"
		__lMinInd	:= .T.
		nOrdSeek := 6
	EndIf

	If lF380IND
		__aF380IND := ExecBlock("F380IND",.F.,.F.)
		For nCont := 1 to Len(__aF380IND)
			nOrdSeek += 1
			__oFin380:AddIndex(cValToChar(nOrdSeek), __aF380IND[nCont][2])
		Next
		nCont := 0
	EndIf

	//Este indice deve ser sempre o último e serve para o pós processamento da rotina (performance)
	nOrdSeek += 1
	__oFin380:AddIndex(cValToChar(nOrdSeek), {"E5_OK2"})		//"Verificacao"

	//Criando a Tabela Temporaria
	__oFin380:Create()

    For nCampo := 1 To Len(aCampos) 
        cCampoAtu := AllTrim(aCampos[nCampo][1])
        If cCampoAtu != "E5_OK"            
            If SE5->(FieldPos(cCampoAtu)) > 0
                cCampos += cCampoAtu + ","
            EndIf
        EndIf
    Next nCampo

	//Adiciono campos do indice do usuario, que não estejam dentre os campos acima.
	If !Empty(__cUsrChv)
		For nY := 1 to Len(aChave)
			If !(aChave[nY] $ cCampos)
				cCampos += aChave[nY] + ","
			Endif
		Next
	Endif

	// Alimenta a temporaria TRB
	Fa380ChecF(lCtrlCheq,nSldIniBanc,cCampos)
	
	DbSelectArea("TRB")
	TRB->(dbGoTop())
	
	IF TRB->(BOF()) .and. TRB->(EOF())
		Help(" ",1,"RECNO")
		Exit
	Endif

	If lF380ATR
		ExecBlock("F380ATR",.F.,.F.)
	EndIf

	nOpca := 0

	IF !lAutomato //Automato 
		//Faz o calculo automatico de dimensoes de objetos
		oSize := FwDefSize():New(.T.)
		
		oSize:lLateral	:= .F.
		oSize:lProp		:= .T. // Proporcional
		
		oSize:AddObject( "1STROW" ,  100, 20, .T., .T. ) // Totalmente dimensionavel
		oSize:AddObject( "2NDROW" ,  100, 80, .T., .T. ) // Totalmente dimensionavel
			
		oSize:aMargins	:= { 3, 3, 3, 3 } // Espaco ao lado dos objetos 0, entre eles 3 

		oSize:Process() // Dispara os calculos		
		
		a1stRow := {	oSize:GetDimension("1STROW","LININI"),;
						oSize:GetDimension("1STROW","COLINI"),;
						oSize:GetDimension("1STROW","LINEND"),;
						oSize:GetDimension("1STROW","COLEND")}
						
		a2ndRow := {	oSize:GetDimension("2NDROW","LININI"),;
						oSize:GetDimension("2NDROW","COLINI"),;
						oSize:GetDimension("2NDROW","LINEND"),;
						oSize:GetDimension("2NDROW","COLEND")}
		
		DEFINE MSDIALOG oDlg TITLE STR0025 From oSize:aWindSize[1],oSize:aWindSize[2] to oSize:aWindSize[3],oSize:aWindSize[4] OF oMainWnd PIXEL  //"Reconcilia‡„o Banc ria"
		oDlg:lMaximized := .T.

		//------------------------------------------------------------------------------------------------------------------------
		//Painel 1 - Informações
		//------------------------------------------------------------------------------------------------------------------------
		nLinha	:= a1stRow[1] + 3
		nSize := 90
		If cPaisLoc=="EUA"
			aColuna:={a1stRow[2],,,,,}
		Else
			aColuna:={a1stRow[2],,,}
		EndIf		
		aColuna[2]:=aColuna[1]+nSize+5
		aColuna[3]:=aColuna[2]+70
		aColuna[4]:=aColuna[3]+nSize+5
		If cPaisLoc=="EUA"
			aColuna[5]:=aColuna[4]+70
			aColuna[6]:=aColuna[5]+nSize+5
		EndIf
		@nLinha,aColuna[1] Say STR0054 + " (" + STR0099 + ")"SIZE nSize,10 PIXEL Of oDlg		// Saldo anterior (Bancario)	
		@nLinha,aColuna[2] Say oValGer VAR nSldIniBanc Picture PesqPict("SE5","E5_VALOR",19) SIZE 50,10  PIXEL Of oDlg
		@nLinha,aColuna[3] Say STR0055 + " (" + STR0099 + ")" SIZE nSize,10 PIXEL Of oDlg		// Saldo atual (Bancario)
		@nLinha,aColuna[4] Say oValAtu  VAR nSldFinBanc Picture PesqPict("SE5","E5_VALOR",19) SIZE 50,10  PIXEL Of oDlg 
		If cPaisLoc=="EUA"
			@nLinha,aColuna[5] Say   STR0089  SIZE nSize,10 PIXEL Of oPanel		// "Balance Online"
			@nLinha,aColuna[6] Say oValAtu  VAR nBalOn380 Picture PesqPict("SE5","E5_VALOR",19) SIZE 50,10  PIXEL Of oPanel 
		EndIf	
		nLinha += 9
		
		@nLinha,aColuna[1] Say STR0054 + " (" + STR0002 + ")" SIZE nSize,10 PIXEL Of oDlg		// Saldo anterior (Reconciliados)
		@nLinha,aColuna[2] Say oValIni  VAR nSldIniRec Picture PesqPict("SE5","E5_VALOR",19) SIZE 50,10  PIXEL Of oDlg 
		@nLinha,aColuna[3] Say STR0055 + " (" + STR0002 + ")" SIZE nSize,10 PIXEL Of oDlg		// Saldo atual (Reconciliados)
		@nLinha,aColuna[4] Say oValAtu  VAR nSldFinRec Picture PesqPict("SE5","E5_VALOR",19) SIZE 50,10  PIXEL Of oDlg 
		If cPaisLoc=="EUA" 
			@nLinha,aColuna[5] Say   STR0090  SIZE nSize,10 PIXEL Of oPanel	// "Diference "
			@nLinha,aColuna[6] Say oValOnLin  VAR nSldFinOn Picture PesqPict("SE5","E5_VALOR",19) SIZE 50,10  PIXEL Of oPanel 
		EndIf
		nLinha += 9

		@nLinha,aColuna[1] Say STR0056  SIZE nSize,10 PIXEL Of oDlg 	//"Total Recebido "	 
		@nLinha,aColuna[2] Say oValRecT VAR nValRecT  Picture PesqPict("SE5","E5_VALOR",19) SIZE 50,10  PIXEL Of oDlg 
		@nLinha,aColuna[3] Say STR0057  SIZE nSize,10 PIXEL Of oDlg 			//"Total Pago     " 
		@nLinha,aColuna[4] Say oValPagT VAR nValPagT  Picture PesqPict("SE5","E5_VALOR",19) SIZE 50,10  PIXEL Of oDlg
		nLinha += 9

		@nLinha,aColuna[1] Say STR0019  SIZE nSize,10 PIXEL Of oDlg   //"Docs.Reconc. Receber "
		@nLinha,aColuna[2] Say oQtdaR   VAR nQtdTitR Picture "@E 99999" SIZE 50,10  PIXEL Of oDlg 
		@nLinha,aColuna[3] Say STR0038  SIZE nSize,10 PIXEL Of oDlg  //"Valor Recebido "
		@nLinha,aColuna[4] Say oValRec  VAR nValRec Picture PesqPict("SE5","E5_VALOR",19) SIZE 50,10  PIXEL Of oDlg 
		nLinha += 9

		@nLinha,aColuna[1] Say STR0037  SIZE nSize,10 PIXEL Of oDlg   //"Docs.Reconc. Pagar "
		@nLinha,aColuna[2] Say oQtdaP   VAR nQtdTitP Picture "@E 99999" SIZE 50,10  PIXEL Of oDlg 
		@nLinha,aColuna[3] Say STR0039  SIZE nSize,10 PIXEL Of oDlg  //"Valor Pago "
		@nLinha,aColuna[4] Say oValPag  VAR nValPag Picture PesqPict("SE5","E5_VALOR",19) SIZE 50,10  PIXEL Of oDlg 
		nLinha += 9

		@nLinha,aColuna[1] Say STR0091 + SubStr(GetMV("MV_SIMB"+cMoedBco),1,3)  SIZE 50,10 PIXEL Of oDlg 	//"Valores expressos em "
		nLinha += 9
		//------------------------------------------------------------------------------------------------------------------------
		//Painel 2 - MsSelect
		//------------------------------------------------------------------------------------------------------------------------
		oMark := MsSelect():New("TRB","E5_OK","",aCampos,@lInverte,@cMarca,{a2ndRow[1],a2ndRow[2],a2ndRow[3],a2ndRow[4]})
		oMark:oBrowse:lColDrag := .T. 

		For nI := 1 To Len(aCampos)
			AADD( aObfuscated , aCampos[nI][1] )
		Next nI

		If GetFinLGPD()
			oMark:oBrowse:aObfuscatedCols := FwProtectedDataUtil():SetObFuscatedFields(aObfuscated)
		EndIF	

		If cPaisLoc=="EUA"
			oMark:bMark := {| | FA380Displ(cMarca,lInverte,oQtdaP,oQtdaR,oValRec,oValPag,oValRecT,oValPagT,oValOnLin,nSldIniBanc)}
			oMark:oBrowse:bAllMark := { || A380Inverte(cMarca,oQtdaP,oQtdaR,oValRec,oValPag,oValRecT,oValPagT,oValOnLin,nSldIniBanc)}
		Else 
			oMark:bMark := {| | FA380Displ(cMarca,lInverte,oQtdaP,oQtdaR,oValRec,oValPag,oValRecT,oValPagT)}
			oMark:oBrowse:bAllMark := { || A380Inverte(cMarca,oQtdaP,oQtdaR,oValRec,oValPag,oValRecT,oValPagT)}
		EndIf
		If mv_par01 != 1  // Apenas para Conciliados e NÆo conciliados
			oMark:oBrowse:lhasMark = .t.
			oMark:oBrowse:lCanAllmark := .t.
		Endif

		ACTIVATE MSDIALOG oDlg ON INIT (Fa380Bar(oDlg, {|| nOpca := 1, oDlg:End()}, {|| nOpca := 2, oDlg:End()}, @oMark), oMark:oBrowse:Refresh()) CENTERED

	Else //Automato 
		nOpca:=1
		Reclock("TRB",.F.)
		Replace TRB->E5_OK With "X"
		MsUnlock()
	Endif		
	
	If lF380MTR
		DbSelectArea("TRB")
		ExecBlock("F380MTR",.F.,.F.)
	EndIf	               
	
	If nOpca == 1

		oTimer:= FwMarkTimer():New()
		oTimer:StartTimer()
		
		nTamFil := TamSX3("E5_FILIAL")[1]
		nTamKey := TamSX3("E5_PREFIXO")[1]+TamSX3("E5_NUMERO")[1]+TamSX3("E5_PARCELA")[1] + 1
		nTamTipo := TamSX3("E5_TIPO")[1]

		dbSelectArea("FK1")
		dbSelectArea("FK2")
		dbSelectArea("FK5")
		dbSelectArea("FKA")
		dbSelectArea("TRB")
		dbSelectArea("SE5")

		SM0->(dbSetOrder(1))
		FK1->(dbSetOrder(1))
		FK2->(dbSetOrder(1))
		FK5->(dbSetOrder(1))
		TRB->(dbGoTop())
		TRB->(DBSetOrder(nOrdSeek))
		TRB->(DBSeek("A",.T.))
		
		While TRB->(!Eof()) .AND. !Empty(TRB->E5_OK2)
			SE5->(dbGoTo( TRB->E5_RECNO ))
			nTotTit ++
			//Caso a filial não seja totalmente compartilhada ajusto cFilAnt
			If _lSharSE53
				//Se filial de origem preenchida
				If !Empty(SE5->E5_FILORIG)
					cFilAnt := SE5->E5_FILORIG
				Else
					//Se filial de origem vazia (inconsistência de base)
					SM0->(MsSeek(cEmpAnt+Alltrim(xFilial("SE5",SE5->E5_FILIAL))))
					cFilAnt := SM0->M0_CODFIL
				Endif
			Else // Se a Filial é totalmente exclusiva, deve usar o _FILIAL
				cFilAnt := SE5->E5_FILIAL				
			Endif

			//Verifico se nao estava reconciliado anteriormente
			If cPaisLoc $ "ARG|DOM|EQU"
				SEF->(DbSetOrder(6))                
				IF SEF->( DbSeek( xFilial("SEF")+SE5->E5_RECPAG+If(SE5->E5_RECPAG=="R",(SE5->E5_BCOCHQ+SE5->E5_AGECHQ+SE5->E5_CTACHQ+SUBSTR(SE5->E5_NUMERO,1,TAMSX3("EF_NUM")[1])),(SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA+SUBSTR(IIf(cPaisLoc == "ARG",SE5->E5_NUMERO,SE5->E5_NUMCHEQ),1,TAMSX3("EF_NUM")[1])))+SE5->E5_PREFIXO ))
					RecLock("SEF")                                            
					SEF->EF_RECONC := IIf(!Empty(TRB->E5_OK),"x"," ")
					SEF->(MSUnlock())
				Endif
			Endif
			
			cReconAnt := SE5->E5_RECONC
			
			//Obtem o IDPROC
			cIdProc := FINProcFKs(SE5->E5_IDORIG, SE5->E5_TABORI)
			FKA->(dbSetOrder(2))
			FKA->(dbseek(SE5->E5_FILIAL+cIdProc))
			
			While FKA->(!EOF()) .AND. FKA->FKA_IDPROC == cIdProc
				If FKA->FKA_TABORI == "FK5"
					If FK5->(dbseek(FKA->FKA_FILIAL+FKA->FKA_IDORIG)) 
						If FK5->FK5_TPDOC == SE5->E5_TIPODOC
							Reclock("FK5", .F.)
							If !Empty(TRB->E5_OK)
								FK5->FK5_DTCONC :=  dDataBase
							Else
								FK5->FK5_DTCONC :=  CTOD("") 
							Endif
								
							If FK5->FK5_DTDISP # TRB->E5_DTDISPO
								dOldDispo := SE5->E5_DTDISPO
								lAtuSaldo := .T.
								FK5->FK5_DTDISP :=  TRB->E5_DTDISPO
							Endif
							FK5->(MsUnlock())	
						Endif						
					EndIf
				ElseIf lDTDispFK .And. FKA->FKA_TABORI == "FK1"
					If FK1->(dbseek(FKA->FKA_FILIAL+FKA->FKA_IDORIG))
						If FK1->FK1_TPDOC == SE5->E5_TIPODOC
							Reclock("FK1", .F.)
							If FK1->FK1_DTDISP # TRB->E5_DTDISPO
								FK1->FK1_DTDISP :=  TRB->E5_DTDISPO
							Endif
							FK1->(MsUnlock())	
						Endif
					EndIf
				ElseIf lDTDispFK .And. FKA->FKA_TABORI == "FK2"
					If FK2->(dbseek(FKA->FKA_FILIAL+FKA->FKA_IDORIG))
						If FK2->FK2_TPDOC == SE5->E5_TIPODOC
							Reclock("FK2", .F.)
							If FK2->FK2_DTDISP # TRB->E5_DTDISPO
								FK2->FK2_DTDISP :=  TRB->E5_DTDISPO
							Endif
							FK2->(MsUnlock())
						EndIf
					EndIf
				Endif
				FKA->(dbskip())
			Enddo
			
			If !AllTrim(SE5->E5_TIPODOC) $ "DB|ES"
				AltDtFilho(TRB->E5_DTDISPO, @oMovFilho)
			EndIf
			
			Reclock("SE5", .F.)
			SE5->E5_RECONC := IIf(!Empty(TRB->E5_OK),"x"," ")
			If SE5->E5_DTDISPO <> TRB->E5_DTDISPO
				SE5->E5_DTDISPO := TRB->E5_DTDISPO
			EndIf
			SE5->(MsUnlock())				
		
			//Acerto E5_DTDISPO dos titulos baixados com cheque para melhor apresentacao no
			//relatorio de fluxo de caixa realizado
			If lAtuSaldo .AND. !EMPTY(SE5->E5_NUMCHEQ)
				dbSelectArea("SE5")							
				SE5->(dbSetOrder(11))
				
				If SE5->(MsSeek(xFilial("SE5")+SE5->(E5_BANCO+E5_AGENCIA+E5_CONTA+E5_NUMCHEQ)))
					cKeyCheque := SE5->(E5_FILIAL+E5_BANCO+E5_AGENCIA+E5_CONTA+E5_NUMCHEQ)
					
					While SE5->(!Eof()) .and. cKeyCheque == SE5->(E5_FILIAL+E5_BANCO+E5_AGENCIA+E5_CONTA+E5_NUMCHEQ)
						If lF380AlDt	
							If !(lAltDt := ExecBlock("F380AlDt",.F.,.F.))
								SE5->(DbSkip())
								Loop
							EndIf
						EndIf
						
						If (SE5->(Recno()) == TRB->E5_RECNO .Or. lF380AlDt) .And. FK5->(dbseek(xFilial("SE5")+SE5->E5_IDORIG))
							Reclock("FK5", .F.)
							FK5->FK5_DTDISP :=  TRB->E5_DTDISPO
							FK5->(MsUnlock())
						EndIf
						
						SE5->(dbSkip())
					Enddo
				Endif
				
				SE5->(dbGoTo( TRB->E5_RECNO ))
			Endif
			
			If lF380Grv
				ExecBlock("F380GRV",.F.,.F.)
			EndIf	
	
			//Verifico atualizacao do saldo conciliado
			DO CASE
				CASE Empty(cReconAnt) .and. !Empty(SE5->E5_RECONC)
					nReconc := 1 	//Se foi reconciliado agora 			
				CASE !Empty(cReconAnt) .and. Empty(SE5->E5_RECONC)
					nReconc := 2 	//Se foi desconciliado agora
				CASE !Empty(cReconAnt) .and. !Empty(SE5->E5_RECONC)
	            	nReconc := 3	//Nao foi alterada a situacao anterior, mas ja estava conciliado
				CASE Empty(cReconAnt) .and. Empty(SE5->E5_RECONC)		
	            	nReconc := 3	//Nao foi alterada a situacao anterior, mas nao estava conciliado
			END CASE				
	
			If lAtuSaldo  // atualiza saldo bancario se alterou o E5_DTDISPO
				lAtuSaldo  := .F.				
				lAtSalRec1 := (nReconc == 2 .or. nReconc == 3) .And. !Empty(SE5->E5_RECONC) //Atualiza saldo conciliado na data antiga				
				lAtSalRec2 := nReconc != 4 .And. !Empty(SE5->E5_RECONC) //Atualiza saldo conciliado na data nova
				
				If SE5->E5_RECPAG == "P"
					AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,dOldDispo,SE5->E5_VALOR,"+",lAtSalRec1)
					AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,SE5->E5_DTDISPO,SE5->E5_VALOR,"-",lAtSalRec2)
				Else
					AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,dOldDispo,SE5->E5_VALOR,"-",lAtSalRec1)
					AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,SE5->E5_DTDISPO,SE5->E5_VALOR,"+",lAtSalRec2)
				Endif
			ElseIf (nReconc == 1 .Or. nReconc == 2)	//1 => Atualiza saldo conciliado, 2 => Saldo desconciliado
				cSinal  := Iif(nReconc == 2, Iif(SE5->E5_RECPAG == "P", "+", "-"), Iif(SE5->E5_RECPAG == "P", "-", "+"))
				nValTit := SE5->E5_VALOR
				
				If Alltrim(SE5->E5_TIPODOC) $ "TR;BD"
					aAreaSE5 := SE5->(GetArea())
					SE5->(dbsetorder(2))
					
					If SE5->(dbseek(SE5->E5_FILIAL+"I2"+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO+DTOS(SE5->E5_DATA)+ SE5->E5_CLIFOR+SE5->E5_LOJA+SE5->E5_SEQ))
						nValTit += SE5->E5_VALOR 
					EndIf
					
					RestArea(aAreaSE5)					
				EndIf
				
				AtuSalBco(SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, SE5->E5_DTDISPO, nValTit, cSinal, .T., .F.)
			Endif
			
			TRB->(dbSkip())
		EndDo 
	Endif
	If __lMetric .and. nTotTit>0
		nTimer := oTimer:ElapseTime(.T.)//o true vai fazer reiniciar, caso vc queira usar de novo o oTimer...aí ele começa a contar de 
		nMedTimer := nTimer/nTotTit
		FwCustomMetrics():setAverageMetric("TempoGravação", "financeiro-protheus_tempo-conclusão-processo_seconds", nMedTimer)
	EndIf
	Exit
EndDo

If oTimer != NIL
	oTimer:Destroy()
	oTimer := nil
Endif

If __oTmpTotl != NIL
	__oTmpTotl:Destroy()
	__oTmpTotl := NIL
Endif

If __oFin380 <> Nil
	__oFin380:Delete()
	__oFin380 := Nil
EndIf

If oMovFilho != Nil
	oMovFilho:Destroy()
	oMovFilho := Nil
EndIf

cFilAnt := cFilAtu

dbSelectArea("SE5")
Return (.T.)

//---------------------------------------------------------------------------
/*/{Protheus.doc} fa380ChecF
Grava no arq. de trabalho os registros que obedecerem as condicoes.

@param lCtrlCheq	Controle de talonário
@param nSldIniBanc	Saldo inicial da conta corrente
@param cCampos		Campos a serem mostrados na tela


@author Alessandro B.Freire
@since 08/01/1997
@version 12
/*/
//---------------------------------------------------------------------------
Function Fa380ChecF(lCtrlCheq,nSldIniBanc,cCampos)
Local nRegAtu	:= SM0->(Recno())
Local cEmpAnt	:= SM0->M0_CODIGO
Local aFiliais	:= {}
Local cLayout   := FWSM0Layout()
Local lGestao	:= "E" $ cLayout .Or. "U" $ cLayout
Local cQuery    := ""
Local nTcSql	:= 0
Local cDB 		:= Alltrim(TcGetDb())
Local cFunction := Alltrim(FUNNAME())
Local cTRB		:= __oFin380:GetRealName()
Local nX		:= 0
Local nTamFilCod := 0
Local nTimer        := 0
Local nMedTimer     := 0
Local oTimer        := Nil
Local nTotTit		:= 0

Default lCtrlCheq	:=.F.
Default nSldIniBanc := 0

nTamFilCod := TamSX3("E5_FILIAL")[1]

// Filtro do usuário
IF (ExistBlock("F380FIL"))
	cFil380 := UPPER(ExecBlock("F380FIL",.f.,.f.))

	If (".AND." $ cFil380) .or. (".OR." $ cFil380) .or. ("#" $ cFil380) .or. ("!=" $ cFil380) .or. ("==" $ cFil380)
		Fa380Filt()
		cFil380 := ""
	Endif	

Else
	cFil380 := ""
Endif

If lGestao	
	If _lSharSA63 .And. !_lSharSE53
		AdmSelecFil("",0,.F.,@aFiliais,"SE5",!_lSharSA61,!_lSharSA62)
	Else
		Aadd(aFiliais,cFilAnt)
	Endif
Else
	If _lSharSA63 .And. !_lSharSE53
		If SM0->(dbSeek(cEmpAnt,.T.))
			While SM0->(!Eof()) .and. SM0->M0_CODIGO == cEmpAnt
				AADD(aFiliais,IIf( lFWCodFil, FWGETCODFILIAL, SM0->M0_CODFIL ))
				SM0->(DbSkip())
			Enddo
		EndIf
		SM0->(dbGoto(nRegAtu))
	Else
		Aadd(aFiliais,cFilAnt)
	Endif
Endif

oTimer:= FwMarkTimer():New()
oTimer:StartTimer()


cQuery += "INSERT "

If cDB == "ORACLE"
	cQuery += " /*+ APPEND */ "
Endif

If cDB == "DB2"
	cQuery := STRTRAN( cQuery, " FOR READ ONLY ", " " )
EndIf

cQuery += " INTO " + cTRB + "(" + cCampos + "E5_RECNO,E5_OK,E5_OK2,E5_RECONC)" 
cQuery += " SELECT " + cCampos + "R_E_C_N_O_,CASE WHEN E5_RECONC = 'x' THEN '"+cMarca+"' ELSE ' ' END E5_OK,' ' E5_OK2, E5_RECONC "
cQuery += " FROM "+ RETSQLNAME("SE5")
cQuery += " WHERE E5_FILIAL " + GetRngFil( aFiliais, "SE5", .T.,) + " AND "
cQuery += "E5_BANCO = '" + cBco380 + "' AND "
cQuery += "E5_AGENCIA = '" + cAge380 + "' AND "
cQuery += "E5_CONTA = '" + cCta380 + "' AND "
cQuery += "E5_DTDISPO <= '" + DTOS(dFimDt380) + "' AND "
cQuery += "E5_DTDISPO >= '" + DTOS(dIniDt380) + "' AND "

If cPaisLoc $ "ARG|DOM|EQU" .and. lCtrlCheq .and. cFunction $ "FINA095/FINA096"
	If cFunction == "FINA096"
		cQuery += " E5_TIPO = 'CH' AND E5_TIPODOC LIKE '%VL%' AND E5_RECPAG = 'R' AND E5_SITUACA <> 'C' AND "      
	Elseif cFunction =="FINA095"                                                                                      
		cQuery += " (E5_TIPO LIKE '%CH%' OR E5_TIPO LIKE '%ORP%') AND (E5_TIPODOC LIKE '%VL%' OR E5_TIPODOC LIKE '%CH%') AND E5_RECPAG = 'P' AND E5_SITUACA <> 'C' AND " 
	Endif	                                                                                                            
Else	          
	cQuery += " E5_TIPODOC NOT IN ('JR','VA','TL','DC','D2','MT','M2','CM','C2','CP','BA','V2','J2') AND E5_SITUACA <> 'C' "
Endif

cQuery += " AND (NOT (E5_TIPODOC = 'PA ' AND E5_ORIGEM = 'FINA090' AND E5_NUMCHEQ <> ' ')) "

IF mv_par01==2
	cQuery += "AND E5_RECONC = ' ' "
Elseif mv_par01==3
	cQuery += "AND E5_RECONC <> ' ' "
EndIf

If !Empty(cFil380)
	cQuery += "AND " + cFil380
Endif

cQuery += " AND D_E_L_E_T_ = ' ' "
cQuery += " ORDER BY E5_FILIAL,E5_DTDISPO,E5_BANCO,E5_AGENCIA,E5_CONTA,E5_NUMCHEQ"
nTcSql := TcSQLExec(cQuery)

if (nTcSql < 0)
	conout("TCSQLError() " + TCSQLError())
else
	For nX := 1 to Len(aFiliais)
		cQuery := " UPDATE "+ cTRB +" SET E5_FILIAL = '"+ SUBS(FWCodFil(cEmpAnt,aFiliais[nX]),1,nTamFilCod) + " - " + FWFilialName(cEmpAnt,aFiliais[nX],1) + "' "
		cQuery += " WHERE E5_FILIAL = '" + xFilial("SE5",aFiliais[nX]) + "' "
		nTcSql := TcSQLExec(cQuery)
		if (nTcSql < 0)
			conout("TCSQLError() " + TCSQLError())
		Endif
	Next	
endif

// Totaliza marcados da carteira Pagar
aTotMarcs := Totaliza(cTRB,"P",.T.)
nValPag := aTotMarcs[1]
nQtdTitP:= aTotMarcs[2]
nTotTit += aTotMarcs[2]

// Totaliza marcados da carteira Receber
aTotMarcs := Totaliza(,"R",.T.)
nValRec := aTotMarcs[1]
nQtdTitR:= aTotMarcs[2]
nTotTit += aTotMarcs[2]

// Totaliza desmarcados da carteira Pagar
aTotMarcs := Totaliza(,"P",.F.)
nValPagT := aTotMarcs[1]
nTotTit += aTotMarcs[2]

// Totaliza desmarcados da carteira Receber
aTotMarcs := Totaliza(,"R",.F.)
nValRecT := aTotMarcs[1]
nTotTit += aTotMarcs[2]

If cPaisLoc =="EUA"
	nSldFinOn := - (nBalOn380 - ((nSldIniBanc + nValRec) - nValPag))
EndIf	

cFilAnt := IIf( lFWCodFil, FWGETCODFILIAL, SM0->M0_CODFIL )

If __lMetric .and. nTotTit > 0
	nTimer := oTimer:ElapseTime(.T.)//o true vai fazer reiniciar, caso vc queira usar de novo o oTimer...aí ele começa a contar de 
	nMedTimer := nTimer/nTotTit
	FwCustomMetrics():setAverageMetric("TempoEntrada", "financeiro-protheus_tempo-conclusão-processo_seconds", nMedTimer)
EndIf

If oTimer != NIL
	oTimer:Destroy()
	oTimer := nil
Endif

Return .T.

//---------------------------------------------------------------------------
/*/{Protheus.doc} fa380Displ
Marca e desmarca registros da conciliação bancária

@param cMarca		Marca para controle
@param lInverte		Indica se realiza inversão de marcação
@param oQtdaP		Objeto de quantidade de registros a Pagar
@param oQtdaR		Objeto de quantidade de registros a Receber
@param oValRec		Objeto de Docs.Reconc. Receber
@param oValPag		Objeto de Docs.Reconc. Pagar
@param oValRecT		Objeto de Total Recebido
@param oValPagT		Objeto de Total Pago
@param oValOnLin	Objeto de Valor da diferença (EUA)
@param nSldIniBanc	Saldo inicial da conta corrente

@author Mauricio Pequim Jr.
@since 23/09/1998
@version 12
/*/
//---------------------------------------------------------------------------
Function fa380Displ(cMarca,lInverte,oQtdaP,oQtdaR,oValRec,oValPag,oValRecT,oValPagT,oValOnLin,nSldIniBanc)

	Default oValOnLin	:= nil
	Default nSldIniBanc := 0

	RecLock("TRB", .F.)			
	If IsMark("E5_OK",cMarca,lInverte) // Indica os não conciliados
		If TRB->E5_RECPAG == "P"
			nValPag += TRB->E5_VALOR
			nValPagT -= TRB->E5_VALOR
			nQtdTitP++
		Else
			nValRec += TRB->E5_VALOR
			nValRecT -= TRB->E5_VALOR
			nQtdTitR++
		Endif

		If TRB->E5_OK2 != "EE" //Registro teve sua data de disponibilidade alterada, logo não deve ter a marcação modificada
		
			If TRB->E5_OK2 == "MM"						
					TRB->E5_OK2 := "  "		//Registro será marcado (MM)					
			Elseif TRB->E5_OK2 == "DD"		
					TRB->E5_OK2 := "MM"		//Registro será alterado pois esta tentando marcar um registro que ja está marcado(MM)							
			Else 		
					TRB->E5_OK2 := "DD"		//Registro será desmarcado (DD)		
			Endif 
		
		Endif
		
	Else //indica os conciliados
	
		If TRB->E5_RECPAG == "P"
			nValPag -= TRB->E5_VALOR
			nValPagT += TRB->E5_VALOR
			nQtdTitP--
		Else
			nValRec -= TRB->E5_VALOR
			nValRecT += TRB->E5_VALOR
			nQtdTitR--				
		Endif
		
		If TRB->E5_OK2 != "EE" //Registro teve sua data de disponibilidade alterada, logo não deve ter a marcação modificada
			
				If TRB->E5_OK2 == "MM"			
						TRB->E5_OK2 := "MM"		//Registro será marcado (MM)						
				Elseif TRB->E5_OK2 == "DD"			
						TRB->E5_OK2 := "  "		//Registro será alterado pois esta tentando marcar um registro que ja está marcado(MM)								
				Else 			
						TRB->E5_OK2 := "DD"		//Registro será desmarcado (DD)			
				Endif 
			
		Endif
		TRB->(MsUnlock())		
	Endif

	If cPaisLoc == "EUA"
		nSldFinOn := - (nBalOn380 - ((nSldIniBanc + nValRec) - nValPag))
	EndIf

	If __lFa380
		ExecBlock("F380RECO",.F.,.F.)
	EndIf	

	oQtdaR:Refresh()
	oQtdaP:Refresh()
	oValRec:Refresh()
	oValPag:Refresh()
	oValRecT:Refresh()
	oValPagT:Refresh()

	If cPaisLoc == "EUA"
		oValOnLin:Refresh()
	EndIf

Return

/*/{Protheus.doc} Fa380Bar
Barra de botões.

@author		Mauricio Pequim Jr.
@since 		18/06/2001
@version 	12
/*/
Function Fa380Bar(oDlg As Object, bOk As Block, bCancel As Block, oMark As Object)

	Local aButtons	As Array
	Local bAcao		As Block
	Local bSet15	As Block
	Local bSet18	As Block
	Local bSet24	As Block
	Local cTitulo	As Character
	Local cTituloPE	As Character
	Local lOk		As Logical
	Local lVolta	As Logical

	aButtons	:= {}
	lOK			:= .F.
	lVolta		:= .F.

	AAdd(aButtons, {"S4WB008N",	{|| Calculadora()},								STR0048 })  //"Calculadora..."
	AAdd(aButtons, {"NOTE",		{|| Fa380Edit(),	oMark:oBrowse:Refresh() },	STR0052 })  //"Editar"###"Edita Registro..(CTRL-E)"
	AAdd(aButtons, {"NOTE",		{|| MBrowPesq()},								STR0001 })  //"Pesquisar"
	
	SetKey(5, {|| Fa380Edit()})

	If ExistBlock( "F380BUT" )
		AADD(aButtons, {"azul"		, {|| ExecBlock("F380BUT",.F.,.F.) }, STR0068 } )  //"Usuário"###"Botão do Usuário..(CTRL-R)"   
		SetKey(18, {|| ExecBlock("F380BUT",.F.,.F.)} )
	EndIf

	// Ponto de entrada permite a inclusão de um botão customizado 
	If ExistBlock("F380BTCUST")
		bAcao := {|| ExecBlock("F380BTCUST", .F., .F., {3, @oDlg, @oMark})}

		cTituloPE := ExecBlock("F380BTCUST", .F., .F., {2, @oDlg, @oMark})

		cTitulo := IIf(Empty(cTituloPE), STR0075, cTituloPE)

		AAdd(aButtons, {"azul",	bAcao, cTitulo})
	EndIf

	EnchoiceBar(oDlg, {|| (lLoop := lVolta, lOk := Eval(bOk))}, {|| (lLoop := .F., Eval(bCancel), ButtonOff(bSet15, bSet24, bSet18, .T.))},, aButtons,,,,, .F.)

Return Nil

//---------------------------------------------------------------------------
/*/{Protheus.doc} ButtonOff
Desliga Botao da enchoice bar

@author Mauricio Pequim Jr.
@since 18/06/2001
@version 12
/*/
//---------------------------------------------------------------------------
Static Function ButtonOff(bSet15,bSet24,bSet18,lOk)
DEFAULT lOk := .t.
IF lOk
	 SetKey(15,bSet15)
	 SetKey(24,bSet24)
	 SetKey(18,bSet18)	 
Endif

Return .T.


//---------------------------------------------------------------------------
/*/{Protheus.doc} Fa380Edit
Edição da data de conciliação (dtdispo)

@author Mauricio Pequim Jr.
@since 18/06/2001
@version 12
/*/
//---------------------------------------------------------------------------
Static Function Fa380Edit()

Local oDlg1		:= NIL 
Local dNewDispo := TRB->E5_DTDISPO
Local nRecOri	:= TRB->(RECNO())
Local nRadio	:= 1
Local cCondicao := ""
Local nRecAtu	:= 0 
Local nRecNxt	:= 0
Local oRadio	:= 0
Local cCond2	:= ""
Local lF380DTD	:= ExistBlock("F380DTD")
Local lF380DTC	:= ExistBLock("F380DTC")
Local lDtOk 	:= .F.
Local nTrbInd	:= TRB->(IndexOrd())
Local lSeekOk   := .T.
Local lClickOk	:= .F.

Private lDtCrdAnt := .F.

//Permito conciliacao de movimentos com data de credito anterior a data de inclusao no sistema.
If lF380DTD
	lDtCrdAnt := ExecBlock("F380DTD",.F.,.F.)
Endif	

TRB->(dbSetOrder(1))

dDtDispo  := TRB->E5_DTDISPO

DEFINE MSDIALOG oDlg1 FROM  69,70 TO 220,331 TITLE STR0042 PIXEL  //'Reconciliacao - EXTRATO'
@ 0, 2 TO 58, 128 OF oDlg1 PIXEL
@ 8, 08 SAY STR0102 SIZE 80, 8 OF oDlg1 PIXEL	//"Data para Disponibilização"
@ 7, 75 MSGET dNewDispo SIZE 50,8 OF oDlg1 PIXEL VALID DtMovFin(dNewDispo) HASBUTTON
If mv_par01 != 2
	@ 20,08 Radio oRadio VAR nRadio ;
		ITEMS STR0064, ; //"Apenas para este registro"
			STR0065, ; //"Apenas para registros de mesma data"
			STR0066 ; //"Para todos os registros"
	 3D SIZE 105,10 OF oDlg1 PIXEL
Else
	@ 20,08 Radio oRadio VAR nRadio ;
		ITEMS STR0064, ; //"Apenas para este registro"
			STR0065, ; //"Apenas para registros de mesma data"
			STR0066, ; //"Para todos os registros"
			STR0076 ; //"Apenas para registros marcados"
	 3D SIZE 105,10 OF oDlg1 PIXEL
Endif

DEFINE SBUTTON FROM 60, 100 TYPE 1 ENABLE ACTION IIF( lF380DTC , (lDtOk := ExecBlock("F380DTC",.F.,.F.,dNewDispo), lClickOk := .T., oDlg1:End()) , (lDtOk := .T., lClickOk := .T., oDlg1:End()) ) OF oDlg1
ACTIVATE MSDIALOG oDlg1 CENTERED

If lClickOk
	cCond2 := "((DTOS(E5_DTDISPO) != '"+ DTOS(dNewDispo) +"' .and. DTOS(E5_DATA) <= '" + DTOS(dNewDispo) + "') .or. lDtCrdAnt)"

	If nRadio == 1		 	//Se gravar apenas para o registro corrente
		cCondicao	:= ".T."	                                        
	ElseIf nRadio == 2 	//Se gravar apenas para os registros da mesma data
		If !(lSeekOk := TRB->(DbSeek(DTOS(dDtDispo))))
			Help(' ', 1, "MOVBANC" ,Nil, STR0103 + ": " + DTOC(dDtDispo), 2,0,,,,,, {STR0104})
		EndIf
		
		cCondicao := "DTOS(TRB->E5_DTDISPO) == '" + DTOS(E5_DTDISPO)+"'"
	ElseIf nRadio == 3  //Se gravar a data para todos os movimentos
		TRB->(dbGoTop())
		cCondicao := "!(TRB->(EOF()))"
	ElseIf nRadio == 4  //Se gravar a data apenas para os registros selecionados
		TRB->(dbGoTop())
		cCondicao := "!(TRB->(EOF()))"
		cCond2	+= " .and. TRB->E5_OK == '" + cMarca + "'"
	Endif

	While lSeekOk .And. &cCondicao
		If nRadio > 1
			nRecAtu := TRB->(RECNO())
			TRB->(DbSkip())
			nRecNxt := TRB->(RECNO())
			TRB->(dbGoto(nRecAtu))
		Endif
		
		If &cCond2	
			If lDtOk .And. TRB->E5_DTDISPO != dNewDispo
				RecLock("TRB")
				TRB->E5_DTDISPO := dNewDispo
				TRB->E5_OK2 := "EE" //Registro teve sua data de disponibilidade editada - Marca registro com EE independente do valor anterior
				MsUnLock()
			EndIf	
		ElseIf nRadio == 1 .And. TRB->E5_DTDISPO != dNewDispo		//apenas para registro corrente
			Aviso(STR0077, STR0078, {"Ok"})  //"Atencao"###"Data de disponibilidade nao pode ser anterior a data de inclusao do movimento."
		Endif	
		
		If nRadio == 1 // Se gravar a data apenas para o registro corrente
			Exit
		Endif
		
		TRB->(dbGoto(nRecNxt))
	Enddo

	TRB->(dbSetOrder(nTrbInd))
	TRB->(dbGoto(nRecOri))
EndIf
Return


//---------------------------------------------------------------------------
/*/{Protheus.doc} A380Inverte
Inversão de marcação

@param cMarca		Marca para controle
@param lInverte		Indica se realiza inversão de marcação
@param oQtdaP		Objeto de quantidade de registros a Pagar
@param oQtdaR		Objeto de quantidade de registros a Receber
@param oValRec		Objeto de Docs.Reconc. Receber
@param oValPag		Objeto de Docs.Reconc. Pagar
@param oValRecT		Objeto de Total Recebido
@param oValPagT		Objeto de Total Pago
@param oValOnLin	Objeto de Valor da diferença (EUA)
@param nSldIniBanc	Saldo inicial da conta corrente

@author Mauricio Pequim Jr.
@since 18/06/2001
@version 12
/*/
//---------------------------------------------------------------------------
Static Function A380Inverte(cMarca,oQtdaP,oQtdaR,oValRec,oValPag,oValRecT,oValPagT,oValOnLin,nSldIniBanc)
	Local nReg := TRB->(Recno())
	
	Default oValOnLin 	:= nil
	Default nSldIniBanc := 0
	
	DbSelectArea("TRB")                                                                                                                    
	TRB->(DbGoTop())
	
	While !Eof()
		If TRB->E5_OK == cMarca
			If mv_par01 != 1  .or. Empty(TRB->E5_RECONC) //Apenas para Conciliados e NÆo conciliados
				If TRB->E5_RECPAG == "P"
					nValPag -= TRB->E5_VALOR
					nValPagT += TRB->E5_VALOR
					nQtdTitP--
				Else
					nValRec -= TRB->E5_VALOR
					nValRecT += TRB->E5_VALOR
					nQtdTitR--
				Endif
				
				RecLock("TRB")
				TRB->E5_OK  := "  "
				TRB->E5_OK2 := Iif(TRB->E5_OK2 != "EE", Iif(TRB->E5_OK2 == "DD", "", "MM"), TRB->E5_OK2) 
				TRB->(MsUnlock())
			EndIf
		Else
			If TRB->E5_RECPAG == "P"
				nValPag += TRB->E5_VALOR
				nValPagT -= TRB->E5_VALOR
				nQtdTitP++
			Else
				nValRec += TRB->E5_VALOR
				nValRecT -= TRB->E5_VALOR
				nQtdTitR++
			Endif
			
			RecLock("TRB")
			TRB->E5_OK  := cMarca
			TRB->E5_OK2 := Iif(TRB->E5_OK2 != "EE", Iif(TRB->E5_OK2 == "MM", "", "DD"), TRB->E5_OK2)
			TRB->(MsUnlock())
		Endif
		
		If __lFa380
			ExecBlock("F380RECO",.F.,.F.)
		EndIf
		
		TRB->(Dbskip())
	EndDo
	
	If cPaisLoc == "EUA"
		nSldFinOn := - (nBalOn380 - ((nSldIniBanc + nValRec) - nValPag))
	EndIf	
	
	DbSelectArea("TRB")
	TRB->(DbGoTo(nReg))
	oQtdaR:Refresh()
	oQtdaP:Refresh()
	oValRec:Refresh()
	oValPag:Refresh()
	oValRecT:Refresh()
	oValPagT:Refresh()
	
	If cPaisLoc == "EUA"
		oValOnLin:Refresh()
	EndIf
Return(NIL)


//-------------------------------------------------------------------
/*/{Protheus.doc} MenuDef
Utilizacao de menu Funcional  

@param Parametros do array a Rotina:                           
          1. Nome a aparecer no cabecalho                             
          2. Nome da Rotina associada                                 
          3. Reservado                                                
          4. Tipo de Transação a ser efetuada:                        
          	  1 - Pesquisa e Posiciona em um Banco de Dados         
              2 - Simplesmente Mostra os Campos                       
              3 - Inclui registros no Bancos de Dados                 
              4 - Altera o registro corrente                         
              5 - Remove o registro corrente do Banco de Dados        
          5. Nivel de acesso                                          
          6. Habilita Menu Funcional                                  

@return Array com opcoes da rotina
@author Ana Paula N. Silva 
@since 21/11/2006
/*/
//-------------------------------------------------------------------
Static Function MenuDef()

Local aRotina := {	{ STR0001, "AxPesqui"	, 0 , 1,,.F.},; // "Pesquisar"
					{ STR0002, "fA380Rec"	, 0 , 3},; // "Reconciliacao"
					{ STR0084, "F380Legenda", 0 , 6, ,.F.} } //"Legenda"
Return(aRotina)


//---------------------------------------------------------------------------
/*/{Protheus.doc} FinA380T
Chamada semi-automatica utilizado pelo gestor financeiro

@author Marcelo Celi Marques
@since 04/04/2008
@version 12
/*/
//---------------------------------------------------------------------------
Function FinA380T(aParam)
	ReCreateBrow("SE5",FinWindow)      	
	cRotinaExec := "FINA380"
	FinA380(aParam[1])
	ReCreateBrow("SE5",FinWindow)      	

	dbSelectArea("SE5")
	
	INCLUI := .F.
	ALTERA := .F.

Return .T.	


//---------------------------------------------------------------------------
/*/{Protheus.doc} F380Legenda
Cria uma janela contendo a legenda da mBrowse ou retorna a para o BROWSE

@author Josse.Gavetti
@since 13/11/2014
@version 12
/*/
//---------------------------------------------------------------------------
Function F380Legenda(nReg)

Local aLegenda := { {"BR_VERDE", STR0085 },;		//"Movimento Bancario - Receber"
					{"BR_AZUL", STR0086 },;		//"Movimento Bancario - Pagar"
					{"BR_AMARELO", STR0087 },;		//"Movimento Bancario - Cancelado"
					{"BR_VERMELHO", STR0088 } }	//"Movimento Bancario - Excluido"
Local uRetorno := .T.

If nReg = Nil	// Chamada direta da funcao onde nao passa, via menu Recno eh passado
	uRetorno := {}
	Aadd(uRetorno, { 'E5_RECPAG = "R" .and. Empty(E5_SITUACA)', aLegenda[1][1] } )
	Aadd(uRetorno, { 'E5_RECPAG = "P" .and. Empty(E5_SITUACA)', aLegenda[2][1] } )
	Aadd(uRetorno, { 'E5_SITUACA $ "X/E"', aLegenda[3][1] } )
	Aadd(uRetorno, { 'E5_SITUACA = "C"', aLegenda[4][1] } )
Else
	IF !IsBlind()
		BrwLegenda(cCadastro, STR0084, aLegenda) // "Legenda"
	EndIf
Endif

Return uRetorno


//---------------------------------------------------------------------------
/*/{Protheus.doc} AltDtFilho
Atualiza a data E5_DTDISPO dos títulos filhos do principal

@Param dDataConc	data de conciliação ajustada

@author Daniel Mendes
@since 06/08/2015
@version 12
/*/
//---------------------------------------------------------------------------
Static Function AltDtFilho(dDataConc, oMovFilho)
	Local cChaveSE5 := ""
	Local cFilSE5   := ""
	Local aTipos    := { "VL","CM","CX","DC","MT","JR","V2","C2","D2","M2","J2","BA","TL","LJ","RA" }
	Local aArea     := {}
	Local aAreaSE5  := {}
	Local cLote		:= ""
	Local cRecPag	:= ""
	Local cQry      := ""
	Local cTblTmp   := ""
	
	aArea     := GetArea()
	aAreaSE5  := SE5->(GetArea())
	cFilSE5   := SE5->E5_FILIAL
	cLote	  := SE5->E5_LOTE
	cRecpag	  := SE5->E5_RECPAG
	
	If SE5->E5_TIPODOC != "CH"		
		If !Empty(SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO))
			If oMovFilho == Nil
				cQry := "SELECT R_E_C_N_O_ FROM " + RetSqlName("SE5") + " "
				cQry += "WHERE E5_FILIAL = ? AND E5_TIPODOC IN (?) AND E5_PREFIXO = ? AND E5_NUMERO = ? "
				cQry += "AND E5_PARCELA = ? AND E5_TIPO = ? AND E5_DATA = ? AND E5_CLIFOR = ? 
				cQry += "AND E5_LOJA = ? AND E5_SEQ = ? AND E5_SITUACA <> 'C' AND D_E_L_E_T_ = ' ' "
				cQry := ChangeQuery(cQry)
				oMovFilho := FwPreparedStatement():New(cQry)			
			EndIf
			
			oMovFilho:SetString(1,  SE5->E5_FILIAL)
			oMovFilho:SetIn(2,      aTipos)
			oMovFilho:SetString(3,  SE5->E5_PREFIXO)
			oMovFilho:SetString(4,  SE5->E5_NUMERO)
			oMovFilho:SetString(5,  SE5->E5_PARCELA)
			oMovFilho:SetString(6,  SE5->E5_TIPO)
			oMovFilho:SetString(7,  DtoS(SE5->(E5_DATA)))
			oMovFilho:SetString(8,  SE5->E5_CLIFOR)
			oMovFilho:SetString(9,  SE5->E5_LOJA)
			oMovFilho:SetString(10, SE5->E5_SEQ)
			
			cQry := oMovFilho:GetFixQuery()
			cTblTmp := MpSysOpenQuery(cQry)
			
			While (cTblTmp)->(!Eof()) .And. (cTblTmp)->R_E_C_N_O_ > 0
				SE5->(DbGoto((cTblTmp)->R_E_C_N_O_))
				
				If SE5->E5_DTDISPO == dDataConc
					(cTblTmp)->(DbSkip())
					Loop
				EndIf
				
				RecLock("SE5")
				SE5->E5_DTDISPO := dDataConc
				SE5->(MsUnLock())
				(cTblTmp)->(DbSkip())

			EndDo		
			
			(cTblTmp)->(DbCloseArea()) 

		ElseIf !Empty(cLote)
			SE5->(dbSetOrder(5))//E5_FILIAL+E5_LOTE+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+DtoS(E5_DATA)                                                                                         
			
			If SE5->(MsSeek(cFilSE5+cLote))
				While SE5->(!Eof()) .And. SE5->E5_LOTE == cLote
					If (SE5->E5_DTDISPO < dIniDt380) .Or. (SE5->E5_DTDISPO > dFimDt380) .Or. (SE5->E5_RECPAG <> cRecPag)
						SE5->(dbSkip())
						Loop
					EndIf
					
					If (SE5->E5_BANCO <> cBco380) .Or. (SE5->E5_AGENCIA <> cAge380) .Or. (SE5->E5_CONTA <> cCta380)
						SE5->(dbSkip())
						Loop
					EndIf
					
					RecLock("SE5")
					SE5->E5_DTDISPO := dDataConc
					SE5->(MsUnLock())
					SE5->(dbSkip())
				EndDo
			EndIf
		EndIf
	ElseIf !Empty(SE5->E5_NUMCHEQ) .Or. !Empty(cLote)
		If !Empty(SE5->E5_NUMCHEQ)
			cChaveSE5 := cFilSE5+SE5->(E5_BANCO+E5_AGENCIA+E5_CONTA+E5_NUMCHEQ)+DtoS(SE5->E5_DATA)
			SE5->(dbSetOrder(11)) 
			SE5->(dbSeek(cChaveSE5))		
			
			While SE5->(!Eof()) .And. SE5->(E5_FILIAL+E5_BANCO+E5_AGENCIA+E5_CONTA+E5_NUMCHEQ)+DtoS(SE5->E5_DATA) == cChaveSE5
				If (!SE5->E5_TIPODOC $ "VL/CM/CX/DC/MT/JR/V2/C2/D2/M2/J2/BA/TL/LJ/RA") .Or. (SE5->E5_DTDISPO == dDataConc)
					SE5->(dbSkip())
					Loop	
				EndIf
				
				RecLock("SE5")
				SE5->E5_DTDISPO := dDataConc
				SE5->(MsUnLock())
				SE5->(dbSkip())
			Enddo			
		Else
			SE5->(dbSetOrder(5))//E5_FILIAL+E5_LOTE+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+DtoS(E5_DATA)                                                                                         
			
			If SE5->(MsSeek(cFilSE5+cLote))
				While SE5->(!Eof()) .And. SE5->E5_LOTE == cLote				
					If (SE5->E5_DTDISPO == dDataConc) .Or. (SE5->E5_DTDISPO < dIniDt380) .Or. (SE5->E5_DTDISPO > dFimDt380)
						SE5->(dbSkip())
						Loop
					EndIf
					
					RecLock("SE5")
					SE5->E5_DTDISPO := dDataConc
					SE5->( MsUnLock() )
					SE5->(dbSkip())
				EndDo
			EndIf		
		EndIf		
	EndIf
	
	RestArea(aAreaSE5)
	RestArea(aArea)
	FwFreeArray(aAreaSE5)
	FwFreeArray(aArea)
Return Nil

//---------------------------------------------------------------------------
/*/{Protheus.doc} MBrowPesq
Função para pesquisar dados no arquivo temporário.  

@Param dDataConc	data de conciliação ajustada

@author Ronaldo Tapia
@since 07/06/2016
@version 12
/*/
//---------------------------------------------------------------------------
Static Function MBrowPesq()
Local oDlgPesq	:= NIL
Local oOrdem	:= NIL
Local oChave	:= NIL
Local oBtOk		:= NIL
Local oBtCan	:= NIL
Local oBtPar	:= NIL
Local cOrdem	:= ""
Local cChave 	:= Space(100)
Local nOrdem 	:= 1
Local nOpcao 	:= 0
Local nY        := 0
Local nRecTrb	:= TRB->(RECNO())
Local nOrdUsr 	:= 0
Local cUserKey	:= ""
Local aOrdens   := {}
Local aOrdInd   := {}

If !__lMinInd .And. !Empty(__cUsrChv)

	For nY := 1 To Len(aChave)
		If nY == 1
			cChvAux := AllTrim(FwX3Titulo(aChave[nY]))
			Loop
		EndIf
		
		cChvAux += " + " + AllTrim(FwX3Titulo(aChave[nY]))
	Next nY
	
	aAdd(aOrdens, cChvAux)
Else
	AAdd(aOrdens, STR0067 ) //"Data Disponibilidade"
	AAdd(aOrdens, STR0008 ) //"Natureza"
	AAdd(aOrdens, STR0007 ) //"Valor Movimento"
	AAdd(aOrdens, STR0036 ) //"Receber/Pagar"
	AAdd(aOrdens, STR0040 ) //"Número"
	AAdd(aOrdens, STR0015 ) //"Beneficiário"
EndIf

If Len(__aF380IND) > 0
	For nY := 1 To Len(__aF380IND)
		If Len(__aF380IND[nY]) >= 3 .And. !Empty(__aF380IND[nY][3]) 			
			Aadd(aOrdens, __aF380IND[nY,3])
			Aadd(aOrdInd, __aF380IND[nY,3])
		EndIf
	Next nY 
EndIf

//Monta tela de pesquisa
DEFINE MSDIALOG oDlgPesq TITLE STR0001 FROM 00,00 TO 100,500 PIXEL //Pesquisar
@ 005, 005 COMBOBOX oOrdem VAR cOrdem ITEMS aOrdens SIZE 210,08 PIXEL OF oDlgPesq ON CHANGE nOrdem := oOrdem:nAt + 1 // Acerta a ordem do indice
@ 020, 005 MSGET oChave VAR cChave SIZE 210,08 OF oDlgPesq PIXEL 
DEFINE SBUTTON oBtOk  FROM 05,218 TYPE 1 ACTION (nOpcao := 1, oDlgPesq:End()) ENABLE OF oDlgPesq PIXEL
DEFINE SBUTTON oBtCan FROM 20,218 TYPE 2 ACTION (nOpcao := 0, oDlgPesq:End()) ENABLE OF oDlgPesq PIXEL
DEFINE SBUTTON oBtPar FROM 35,218 TYPE 5 WHEN .F. OF oDlgPesq PIXEL
ACTIVATE MSDIALOG oDlgPesq CENTERED

//Ajuste quando a ordem for 1
If !__lMinInd .And. nOrdem = 1
	nOrdem := 2
EndIf

If nOpcao == 1
	nOrdem := aScan(aOrdens, {|x| x == cOrdem})
	// Ajusta valor da chave
	If __lMinInd
		If nOrdem <= 6  
			If cOrdem == aOrdens[1]
				cChave := CTOD(cChave)
			ElseIf cOrdem == aOrdens[3]			
				If cPaisloc $ "MEX|EUA|AUS"
					cChave := Val(alltrim(strtran(cChave,",","")))				
				else
					cChave := Val(StrTran(StrTran(cChave,".",""),",","."))
				Endif
			Else 
				cChave := Alltrim(Upper(cChave))
			EndIf							
		Else
			nOrdUsr := aScan(aOrdInd, {|x| x == cOrdem})		//ordens retornadas do PE F380IND			
			cUserKey := __aF380IND [nOrdUsr,2,1]			

			If TAMSX3(cUserKey)[3] == "D"
				cChave := CTOD(cChave)
			ElseIf TAMSX3(cUserKey)[3] == "N"
					If cPaisloc $ "MEX|EUA|AUS"
						cChave := Val(alltrim(strtran(cChave,",","")))				
					Else
						cChave := Val(StrTran(StrTran(cChave,".",""),",","."))
					Endif
			Else 
				cChave := Alltrim(Upper(cChave))
			EndIf	
		Endif
	ElseIf !__lMinInd
		If TAMSX3(__cUsrChv)[3] == "D"
			cChave := CTOD(cChave)
		ElseIf TAMSX3(__cUsrChv)[3] == "N"			
				If cPaisloc $ "MEX|EUA|AUS"
					cChave := Val(alltrim(strtran(cChave,",","")))				
				else
					cChave := Val(StrTran(StrTran(cChave,".",""),",","."))
				Endif
		Else 
				cChave := Alltrim(Upper(cChave))				
		EndIf
	EndIf
	
	//Posiciona no registro da pesquisa	
	TRB->(dbGoTop())
	TRB->(dbSetOrder(nOrdem)) 
	
	If !Empty(cChave) .and. !TRB->(dbSeek(cChave))
		MSGInfo(STR0100 + CRLF + STR0101, STR0077 )	//"Não foi encontrado nenhum registro com a chave informada."###"Por favor, verifique os valores informados."###"Atenção"
		TRB->(dbGoto(nRecTrb))
	Endif
Endif

FWFreeArray(aOrdens)
FwFreeArray(aOrdInd)
Return


//-------------------------------------------------------------------
/*/{Protheus.doc} Fa380Filt
Montagem do HELP no processo de transferencia
@type  Static Function
@author Vitor Duca
@since 02/03/2020
@version 1.0
@return 
/*/
//-------------------------------------------------------------------
static function Fa380Filt()
	Local cMsg 		AS Character
	Local cTitulo 	AS Character
	Local aBtLinks 	AS Array

	cTitulo  := "Ponto de Entrada F380FIL"
	aBtLinks := ARRAY(2,2)

	cMsg := "<font size='6' color='#0c9abe'><b>HELP - F380FIL</b></font><br/><br/>"

	cMsg += "<font size='4' color='#444'><b>"+ STR0092 +"</b></font><br/>"		//"Ocorrência"
	cMsg += "<font size='4' color='#666'>"+ STR0093 +"<br/>"					//"Verificamos que o filtro de usuário do ponto de entrada F380FIL está com sintaxe diferente de SQL, impossibilitando sua aplicação no processo atual."
	cMsg += "<font size='4' color='#666'>"+ STR0094 +"</font><br/>"				//"O processamento continuará normalmente sem a aplicação do filtro específico.
	cMsg += "</font><br/><br/>"

	cMsg += "<font size='4' color='#444'><b>"+ STR0095 +"</b></font><br/>"		//"Solução"
	cMsg += "<font size='4' color='#666'>"+ STR0096 +"</font><br/><br/>"		//"Por favor, informe a área responsável para ajuste deste filtro."

	cMsg += "<font size='4' color='#444'><b>"+ STR0097 +"</b></font>"			//"Para maiores informações acesse:"
	cMsg += "<br/><br/>"

	aBtLinks[1,1] := STR0098 													//"Documentação do filtro de usuário da rotina de conciliação bancária"
	aBtLinks[1,2] := "https://tdn.totvs.com/x/qVePI"

	FinHelp(cTitulo, cMsg, aBtLinks, 300, 600)

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} Totaliza
Retorna total das movimentacoes a serem conciliadas
@type  Static 
@author Igor Nascimento
@since 22/09/2020
@param cAliasTRB - Alias da TmpTable
	   cCart  - Carteira a ser filtrada
	   lMark  - Se filtrara movimentos marcados ou desmarcados
@return aTotais - [1]= Soma dos valores, [2]= Qtd movimentos
/*/
//-------------------------------------------------------------------
Static Function Totaliza(cAliasTRB As Character, cCart As Character, lMark As Logical) As Array

	Local aArea		As Array
	Local aTotais	As Array
	Local cTmp		As Character
	Local cQuery	As Character

	Default cAliasTRB	:= ""
	Default cCart		:= ""
	Default lMark		:= .F.

	aArea   := GetArea()
	aTotais := Array(2)

	If __oTmpTotl == Nil 
		cQuery := "SELECT ISNULL(SUM(E5_VALOR),0) VALTOT, COUNT(*) QTDTOT FROM "+ cAliasTRB + " "
		cQuery += "WHERE "
		cQuery += "E5_RECPAG = ? AND "
		cQuery += "E5_OK = ?"
		cQuery := ChangeQuery(cQuery)
		__oTmpTotl := FWPreparedStatement():New(cQuery)
	EndIf
	
	__oTmpTotl:SetString(1, cCart)
	__oTmpTotl:SetString(2, If(lMark,cMarca," ") )

	cQry := __oTmpTotl:GetFixQuery()
	cTmp := MpSysOpenQuery(cQry)

	If (cTmp)->(!EOF())
		aTotais[1] := (cTmp)->VALTOT
		aTotais[2] := (cTmp)->QTDTOT
	Else
		aTotais[1] := 0
		aTotais[2] := 0
	EndIf

	(cTmp)->(dbCloseArea())

	RestArea(aArea)

Return aTotais
