#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FINA181.CH"

#DEFINE ACEITAVEL 10

Static aIt_TpDoc := {}

Static lMovEnt05
Static lMovEnt06
Static lMovEnt07
Static lMovEnt08
Static lMovEnt09
Static __oUltResg  := NIL
Static __cSeqEst
Static __aRetAuto := {}
Static __lBxParc := .T. 
Static __lNewProc := .F.
Static __cMVFTPO := ""
Static __lEstBx := .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ FINA181  ³ Autor ³ Eduardo Riera         ³ Data ³ 28/03/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Resgates de Aplica‡”es/Emprestimos Financeiros             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FINA181()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA181(nPosArotina, lAutomato, cSeqAuto, aAutoCab, aParam)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Array contendo as Rotinas a executar do programa      ³
//³ ----------- Elementos contidos por dimensao ------------     ³
//³ 1. Nome a aparecer no cabe‡alho                              ³
//³ 2. Nome da Rotina associada                                  ³
//³ 3. Usado pela rotina                                         ³
//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
//³    2 - Simplesmente Mostra os Campos                         ³
//³    3 - Inclui registros no Bancos de Dados                   ³
//³    4 - Altera o registro corrente                            ³
//³    5 - Remove o registro corrente do Banco de Dados          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Parametros do Programa                                       ³
//³                                                              ³
//³ MV_PAR01 : Mostra Lanc. Contabil                             ³
//³ MV_PAR02 : Contabiliza On-Line                               ³
//³ MV_PAR03 : Diferencao Aceitavel para Resgate Total           ³
//³                                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Local nA := 0
	Local nC := MoedFin()
	Local cMoedaTx
	Local cRelease := GetRpoRelease()

	PRIVATE aRotina := MenuDef()
	PRIVATE cCadastro := OemToAnsi(STR0005)  //"Resg.de Aplic/Emprest."
	PRIVATE aTxMoedas := {}
// Verifica o numero do Lote
	PRIVATE cLote
	LoteCont( "FIN" )
// Variaveis para baixa das parcelas provisorias no contas a pagar
	PRIVATE cNumSE2 := ""
	PRIVATE cParSE2 := ""
	PRIVATE lParcela := .F.

// Endereca a função de BROWSE
	DEFAULT nPosArotina := 0
	DEFAULT lAutomato 	:= .F.
	DEFAULT cSeqAuto    := "01"
	DEFAULT aAutoCab    := {}
	DEFAULT aParam   	:= {}

	If !lAutomato .and. cRelease > "12.1.033"//FindFunction("FAplEmpNew") .and. FAplEmpNew("FINA181")
		FINA716()
		Return
	Endif
	
	__cSeqEst := ""
	__aRetAuto := aClone(aAutoCab)

	// Inicia as variaveis staticas do fonte.
	FinIniVar()

	Aadd(aTxMoedas,{"",1,PesqPict("SM2","M2_MOEDA1")})
	For nA	:=	2	To nC
		cMoedaTx := Str(nA,IIf(nA <= 9,1,2))
		If !Empty(GetMv("MV_MOEDA"+cMoedaTx))
			Aadd(aTxMoedas,{GetMv("MV_MOEDA"+cMoedaTx),RecMoeda(dDataBase,nA),PesqPict("SM2","M2_MOEDA"+cMoedaTx) })
		Else
			Exit
		Endif
	Next

// Configura ambiente e Carrega função Pergunte
	SetKey( VK_F12 ,{|| Fa181Perg()})
	Pergunte("AFI181",.F.)

	If lAutomato .and. Len(aParam) > 0
		F181PerAut(aParam)
	Endif

	If nPosArotina > 0 // Sera executada uma opcao diretamento de aRotina, sem passar pela mBrowse
		__cSeqEst := cSeqAuto
		dbSelectArea("SEH")
		bBlock := &( "{ |a,b,c,d,e| " + aRotina[ nPosArotina,2 ] + "(a,b,c,d,e) }" )
		Eval( bBlock, Alias(), (Alias())->(Recno()),nPosArotina,lAutomato)
	Else
		mBrowse( 6, 1,22,75,"SEH",,,,,,Fa181Legenda())
	Endif

// Restaura Ambiente 
	SetKey( VK_F12 , Nil )

Return(.T.)

/*/
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡„o    ³A181Resg  ³ Autor ³ Eduardo Riera         ³ Data ³ 28.03.98 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡„o ³ Resgates de Aplicacoes Financeiras/Pagto de Emprestimos    ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe   ³ A181Resg  (ExpC1,ExpN1,ExpN2)                              ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
	±±³          ³ ExpN1 = Numero do registro                                 ³±±
	±±³          ³ ExpN2 = Numero da op‡„o selecionada                        ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso      ³ FINA181                                                    ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a181Resg(cAlias,nReg,nOpc,lAutomato)

	DEFAULT lAutomato	:= .F.
	
	// Inicia as variaveis staticas do fonte.
	FinIniVar()

	// Localiza e posiciona Fornecedor
	SA2->(DBGOTO(FornEmpr(SEH->EH_NUMERO, SEH->EH_DATA, SEH->EH_NATUREZ)))

	If !CCBLOCKED(SEH->EH_BANCO,SEH->EH_AGENCIA,SEH->EH_CONTA) //Verifica bloqueio de conta corrente
		If ( SEH->EH_APLEMP=="APL" )
			If ExistBlock("F181QTS")
				ExecBlock("F181QTS",.F.,.F.)
			Else
				If SEH->EH_DATA <= dDataBase
					a181ResgApl(cAlias,nReg,nOpc,lAutomato)
				Else
					If !lAutomato
						IW_MsgBox(STR0080,STR0081,"STOP") //"Operação não permitida, data base menor que a data da aplicação"###"Atenção"
					EndIf
				Endif
			Endif
		Else
			If SEH->EH_DATA <= dDataBase
				a181ResgEmp(cAlias,nReg,nOpc,lAutomato)
			Else
				IW_MsgBox(STR0082,STR0081,"STOP") //"Operação não permitida, data base menor que a data do empréstimo"###"Atenção"
			Endif
		EndIf
	Endif

Return(.T.)

/*/
	ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡…o    ³Fa181Vld  ³ Autor ³ André Luiz B. Silva ³ Data ³ 14/02/2013 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡…o ³ Validação do campo EH_VALISWP                              ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe   ³Fa181Vld()                                                  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³                                                            ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso      ³FINA181                                                     ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function Fa181Vld()

	Local lRet  := .T.
	Local lClsIof  := .T.

	If lClsIof
		If ( ALLTRIM(SEH->EH_TIPO) == 'CDI' .And. ALLTRIM(SEH->EH_CLSIOF) == "1")
			lRet := .F.
		EndIf
	EndIf

Return(lRet)

/*/
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡„o    ³A181ResgAp³ Autor ³ Eduardo Riera         ³ Data ³ 28.03.98 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡„o ³ Resgates de Aplicacoes Financeiras                         ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe   ³ A181ResgAp(ExpC1,ExpN1,ExpN2)                              ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
	±±³          ³ ExpN1 = Numero do registro                                 ³±±
	±±³          ³ ExpN2 = Numero da op‡„o selecionada                        ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso      ³ FINA181                                                    ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function a181ResgApl(cAlias,nReg,nOpc,lAutomato)

	Local lPanelFin		:= IsPanelFin()
	Local cPadrao		:="585"
	Local lDigita		:= If(MV_PAR01==1,.T.,.F.)
	Local nHdlPrv		:= 0
	Local lPadrao		:= VerPadrao(cPadrao)
	Local nTotal		:= 0
	Local cArquivo		:= ""
	Local nOpcA			:=0
	Local nI            := 0
	Local oDlg
	Local lContinua  	:= .T.
	Local ca181Codigo	:= SEH->EH_NUMERO+"/"+SEH->EH_REVISAO
	Local cNBanco    	:= SEH->EH_NBANCO
	Local cA181Bco   	:= SEH->EH_BANCO
	Local cA181Age   	:= SEH->EH_AGENCIA
	Local cA181Cta   	:= SEH->EH_CONTA
	Local dA181Cred  	:= dDataBase
	Local cA181Histor	:= STR0010+" "+SEH->EH_TIPO //"Resgate de Aplicacao"
	Local nTamSeq		:= TamSX3("EI_SEQ")[1]
	Local csequencia 	:= Replicate("0",nTamSeq)
	Local aA181Calc  	:= {}
	Local aDifAprop  	:= {}
	Local nDifAprop  	:= 0
	Local lFa181Rap  	:= ExistBlock("FA181RAP")
	Local lAplCota   	:= (SEH->EH_TIPO $ GetMv("MV_APLCAL4"))
	Local cPict      	:= PesqPict("SEH","EH_QUOTAS") // PICTURE PARA VALORES POR QUOTAS
	Local cPict2     	:= PesqPict("SEH","EH_VALOR")  // PICTURE PARA VALORES GENERICOS
	Local nCntFor
	Local cLctPco    	:= ""
	Local lPcoConf 		:= .F.
//Variaveis para o PE FA181VLR
	Local lFA181VLR 	:= ExistBlock("FA181VLR")
	Local aFa181Vlr		:= {}
	Local aDifVlr		:= {}
	Local nx			:= 0
	Local nz			:= 0
	Local nMoedaBco     := 1

	Local oModelMov		:= FWLoadModel("FINM030") //Model de Movimento Bancário
	Local oSubFK5
	Local oSubFKA
	Local cLog			:= ""
	Local lRet			:= .T.
	Local cCamposE5		:= ""
	Local lAplImune 	:= FindFunction("FA181Imune") .And. SuperGetMv("MV_APLIMUN",,"1") == '3'
	Local lF181RGBL		:= ExistBlock("F181RGBL")
	Local lFA181RES		:= ExistBlock("FA181RES")
	Local lNewCalc		:= TableInDic('FO3')
	LOCAL cMoedaBco		:= '01'

	Private cA181Nat   := ""
	Private cCodDiario := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ SE9 - Tabela de contrato bancario                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("SE9")
	DbSetOrder(1)
	DbSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)

	PRIVATE nA181VlAtu := 0.00
	PRIVATE nA181VlResg:= 0.00
	PRIVATE nA181VlIRF := 0.00
	PRIVATE nA181VlSwap:= 0.00
	PRIVATE nA181IRSwap:= 0.00
	PRIVATE nA181VlIOF := 0.00
	PRIVATE nA181VlTaxa:= 0.00
	PRIVATE nA181RegPri:= 0.00
	PRIVATE nA181RegJur:= 0.00
	PRIVATE nA181SldPri:= 0.00
	PRIVATE nA181SldJur:= 0.00
	PRIVATE nA181Saldo := 0.00
	PRIVATE nA181VlCrd := 0.00
	PRIVATE nA181CrdAnt:= 0.00
	PRIVATE nA181VlMoed:= RecMoeda(dDataBase,SEH->EH_MOEDA)
	PRIVATE nA181VlCota:= SE9->E9_VLRCOTA

	Private nA181RdBruto	:= 0
	Private nA181IRRdBruto	:= 0
	Private nA181VlLiquido	:= 0
	Private nA181BaseCalc	:= 0
	Private na181BaseCota	:= 0
	Private lPergAplIm		:= .F.
	Private oGet01
	Private oGet02
	Private oGet03
	Private oGet04
	Private oGet05
	Private oGet06
	Private oGet07
	Private oGet08
	Private oGet09
	Private oGet10
	Private oGet11
	Private oGet12
	Private oGet13
	Private oGet14

	DEFAULT lAutomato := .F.

	If lNewCalc
		If AllTrim(SEH->EH_TIPO) != "CP"
			lNewCalc := .F.
		EndIf
	EndIf

// Localiza e posiciona Fornecedor
	SA2->(DBGOTO(FornEmpr(SEH->EH_NUMERO, SEH->EH_DATA, SEH->EH_NATUREZ)))

	DbSelectArea("SE0")
	If MsSeek(xFilial("SE0")+SE9->(E9_BANCO+E9_AGENCIA+E9_CONTA+E9_NUMERO)+Str(21001231-Val(DTOS(dDataBase)),11))
		nA181VlCota:= SE0->E0_VALOR
	Endif
	DbSelectArea("SEH")
	If lAplImune
		FA181Imune(,,.T.)
	EndIf
	If !lAplCota .Or. lNewCalc
		aA181Calc := Fa171Calc(dDataBase,SEH->EH_SALDO,.T.)
		na181IRRdBruto	:= aA181Calc[8]
	Else
		aA181Calc := Fa171Calc(dDataBase,SEH->EH_SLDCOTA,,,,SEH->EH_VLRCOTA,nA181VlCota,(SEH->EH_SLDCOTA * nA181VlCota))
		na181IRRdBruto	:= aA181Calc[2]
	EndIf

	nA181VlAtu := aA181Calc[1]
	nA181VlResg:= nA181VlAtu
	nA181VlIRF := aA181Calc[2]
	nA181VlSwap:= 0.00
	nA181IRSwap:= 0.00
	nA181VlIOF := aA181Calc[3]
	nA181VlTaxa:= aA181Calc[4]
	nA181RegPri:= SEH->EH_SALDO
	nA181RegJur:= nA181VlAtu-SEH->EH_SALDO
	nA181SldPri:= 0.00
	nA181SldJur:= 0.00

	n181CtRg   := 0 // Quantidade de cotas resgatadas
	n181SldQs  := 0 // Saldo em cotas a resgatar
	n181SldRs  := 0 // Saldo em Reais a resgatar

	If !lAplCota
		nA181Saldo	:= nA181SldPri-nA181SldJur
		nA181VlCrd	:= nA181VlResg-nA181VlIrf-nA181IrSwap-nA181VlIof-nA181VlTaxa+nA181VlSwap
	Else
		nA181Saldo	:= Iif((na181VlAtu - na181VlResg - na181VlIrf) < 0,0,(na181VlAtu - na181VlResg - na181VlIrf))
		nA181VlCrd	:= nA181VlResg-nA181VlIrf-nA181IrSwap-nA181VlIof-nA181VlTaxa+nA181VlSwap
	EndIf

	nA181CrdAnt		:= nA181VlCrd
	na181RdBruto	:= aA181Calc[7]
	na181VlLiquido	:= aA181Calc[9]
	na181BaseCalc	:= aA181Calc[11]
	n181CtRg       := na181VlResg / nA181VlCota

	If ( SEH->EH_APLEMP=="APL" )
		cA181Nat := &(GetMv("MV_NATRAPL"))
	EndIf
	cA181Nat := PadR(cA181Nat,TamSX3("EH_NATUREZ")[1])
	Fa171AtuNat(cA181Nat,SEH->EH_APLEMP,"FINA181")
	If ( !DtMovFin(,,IIF(SEH->EH_APLEMP=="APL","1","")) )
		lContinua := .F.
	EndIf
	If ( SEH->EH_SALDO == 0 )
		Help(" ",1,"A181JABAIX")
		lContinua := .F.
	EndIf

	NoRound(nA181VlCrd)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a geraçao de lancamentos do SIGAPCO      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoIniLan("000009")

	IF lF181RGBL
		ExecBlock("F181RGBL",.F.,.F.)
	EndIf

	While lContinua
		SoftLock( "SEH" )
		lContinua := .F.
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Recebe dados a serem digitados                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !lAutomato
			If lPanelFin  //Chamado pelo Painel Financeiro
				DEFINE MSDIALOG oDlg FROM  81,15 TO 460,574 TITLE OemToAnsi(STR0010) PIXEL  //"Resgate de Aplicacao"
			Else
				DEFINE MSDIALOG oDlg FROM  81,15 TO 410,578 TITLE OemToAnsi(STR0010) PIXEL  //"Resgate de Aplicacao"
			Endif

			@ 001,004 TO 036,280 PROMPT OemToAnsi(STR0011) OF oDlg  PIXEL //"Dados da Operacao"
			@ 010,010 SAY OemToAnsi(STR0012)			SIZE 18,09  OF oDlg PIXEL //"Codigo"
			@ 010,033 MSGET cA181Codigo				SIZE 33,09  OF oDlg PIXEL WHEN .F.
			@ 010,072 SAY OemToAnsi(STR0013)			SIZE 45,09  OF oDlg PIXEL //"Inst.Financeira"
			@ 010,115 MSGET cNBanco						SIZE 63,09  OF oDlg PIXEL WHEN .F.
			@ 010,183 SAY OemToAnsi(STR0014)			SIZE 21,09  OF oDlg PIXEL //"Emissao"
			@ 010,206 MSGET SEH->EH_DATA          SIZE 40,09   OF oDlg PIXEL WHEN .F.
			@ 023,010 SAY OemToAnsi(STR0015)    	SIZE 39,09  OF oDlg PIXEL //"Vlr.Principal"
			@ 023,052 MSGET SEH->EH_SALDO          SIZE 66,09  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_SALDO",18) 	WHEN .F.
			@ 023,127 SAY OemToAnsi(STR0016) SIZE 42,09  OF oDlg PIXEL //"Vlr.Atualizado"
			@ 023,173 MSGET nA181VlAtu                      SIZE 73,09  OF oDlg PIXEL  ;
				PICTURE PesqPict("SEH","EH_VALOR",18) 	WHEN .F.
			@ 038,004 TO 160,132 PROMPT OemToAnsi(STR0017) OF oDlg  PIXEL //"Dados do Resgate"
			@ 047,010 SAY OemToAnsi(STR0018)			SIZE 18,08  OF oDlg PIXEL //"Banco"
			@ 047,031 MSGET cA181Bco               SIZE 18,08  OF oDlg Hasbutton PIXEL ;
				VALID Fa181Bco(cA181Bco) ;
				F3 "SA6"
			@ 047,062 SAY OemToAnsi(STR0019)       SIZE 24,08  OF oDlg PIXEL //"Agencia"
			@ 047,084 MSGET cA181Age               SIZE 46,08  OF oDlg PIXEL ;
				VALID Fa181Bco(cA181Bco,cA181Age)
			@ 058,010 SAY OemToAnsi(STR0020)       SIZE 18,08  OF oDlg PIXEL //"Conta"
			@ 058,031 MSGET cA181Cta               SIZE 33,08  OF oDlg PIXEL ;
				VALID Fa181Bco(cA181Bco,cA181Age,cA181Cta)
			@ 058,068 SAY OemToAnsi(STR0021)       SIZE 36,08  OF oDlg PIXEL //"Crd."
			@ 058,084 MSGET dA181Cred              SIZE 46,08  OF oDlg Hasbutton PIXEL ;
				VALID dA181Cred >= dDataBase
			@ 069,010 SAY OemToAnsi(STR0022)       SIZE 36,08  OF oDlg PIXEL //"Natureza"
			@ 069,060  MSGET cA181Nat               SIZE 68,08  OF oDlg Hasbutton PIXEL VALID FinVldNat(.F.,cA181Nat) F3 "SED"
			@ 080,010 SAY OemToAnsi(STR0023)       SIZE 21,08  OF oDlg PIXEL //"Histor."
			@ 080,037 MSGET cA181Histor            SIZE 91,08 OF oDlg PIXEL

			If lAplCota
				@ 091,010 SAY OemToAnsi(STR0076)    			SIZE 56,08  OF oDlg PIXEL //"Valor Unit. das Cotas
				@ 091,060 MSGET oGet02 VAR nA181VlCota       SIZE 68,08  OF oDlg Hasbutton PIXEL PICTURE GetSx3Cache("EH_VLRCOTA","X3_PICTURE") VALID Fa181Valor(oDlg,,,oGet02)

				@ 102,010 SAY OemToAnsi(STR0036) SIZE 51,08 OF oDlg PIXEL //"(=)Vlr.do Credito"
				@ 102,060 MSGET oGet12 VAR nA181VlCrd        SIZE 68,08  OF oDlg Hasbutton PIXEL PICTURE cPict2 VALID Fa181Valor(oDlg,,,oGet12)
			Else
				@ 091,010 SAY OemToAnsi(STR0024) SIZE 46,08  OF oDlg PIXEL //"(+)Vlr.Resgate"
				@ 091,060 MSGET oGet01 VAR nA181VlResg      	SIZE 68,08  OF oDlg Hasbutton PIXEL ;
					PICTURE PesqPict("SEH","EH_VALOR",18) 	VALID Fa181Valor(oDlg)
				@ 102,010 SAY OemToAnsi(STR0025)      			SIZE 46,08  OF oDlg PIXEL //"(-)Vlr. I.R."
				@ 102,060 MSGET oGet02 VAR nA181VlIRF 			SIZE 68,08  OF oDlg Hasbutton PIXEL ;
					PICTURE PesqPict("SEH","EH_VALIRF",18) VALID Fa181Valor(oDlg)
			Endif
			@ 113,010 SAY OemToAnsi(STR0026)    SIZE 46,08  OF oDlg PIXEL //"(+)Dif. SWAP"
			@ 113,060 MSGET oGet03 VAR nA181VlSwap      		SIZE 68,08  OF oDlg Hasbutton PIXEL ;
				PICTURE PesqPict("SEH","EH_VALSWAP",18) 	VALID Fa181Valor(oDlg)
			@ 123,010 SAY OemToAnsi(STR0027)   SIZE 46,08  OF oDlg PIXEL //"(-)I.R. SWAP"
			@ 123,060 MSGET oGet04 VAR nA181IRSwap      		SIZE 68,08  OF oDlg Hasbutton PIXEL ;
				PICTURE PesqPict("SEH","EH_VALISWP",18) 	VALID Fa181Valor(oDlg)
			@ 135,010 SAY OemToAnsi(STR0028)    SIZE 46,08  OF oDlg PIXEL //"(-)Vlr. IOF"
			@ 135,060 MSGET oGet05 VAR nA181VlIof       		SIZE 68,08  OF oDlg Hasbutton PIXEL When Fa181Vld();
				PICTURE PesqPict("SEH","EH_VALIOF",18)  	VALID Fa181Valor(oDlg)
			@ 146,010 SAY OemToAnsi(STR0029)SIZE 46,08  OF oDlg PIXEL //"(-)Outras Taxas"
			@ 146,060 MSGET oGet06 VAR nA181VlTaxa      		SIZE 68,08  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALJUR",18)  	VALID Fa181Valor(oDlg)

			If lAplCota
				@ 038,132 TO 160,280 PROMPT OemToAnsi(STR0030)    OF oDlg PIXEL //"Dados do Saldo"
				@ 047,138 SAY OemToAnsi(STR0077)      SIZE 70,08  OF oDlg PIXEL // Qtde. Cotas Resgatadas
				@ 047,208 MSGET oGet07 VAR n181CtRg   SIZE 68,08  OF oDlg PIXEL PICTURE cPict Hasbutton

				@ 069,138 SAY OemToAnsi(STR0078)      SIZE 60,08  OF oDlg PIXEL // Saldo em cotas
				@ 069,208 MSGET oGet08 VAR n181SldQs  WHEN {||	n181SldRs := n181SldQs * na181VlCota,;
					If(Round(n181SldRs,2)<=0,n181SldQs:=0,Nil),.T.} SIZE 68,08  OF oDlg PIXEL PICTURE cPict Hasbutton

					@ 091,138 SAY OemToAnsi(STR0079+&("MV_SIMB"+ALLTRIM(STR(SEH->EH_MOEDA,2))))      SIZE 51,08  OF oDlg PIXEL  // Saldo em xx - xx = simbolo da moeda
					@ 091,208 MSGET oGet09 VAR n181SldRs WHEN { || n181SldRs := n181SldQs * na181VlCota, .F. } SIZE 68,08  OF oDlg PIXEL PICTURE cPict2 Hasbutton

					@ 113,138 SAY OemToAnsi(STR0073)			   SIZE 51,08 OF oDlg PIXEL			 //"Redimento Bruto"
					@ 113,208 MSGET oGet13 VAR nA181RdBruto   SIZE 68,08 OF oDlg PIXEL PICTURE cPict2 Hasbutton
					@ 124,138 SAY OemToAnsi(STR0074)			   SIZE 51,08 OF oDlg PIXEL			 //"IR S/Redimento Bruto"

					@ 124,208 MSGET oGet14 VAR nA181IRRdBruto	SIZE 68,08 OF oDlg VALID Fa181ValIr() PIXEL PICTURE cPict2 Hasbutton

					@ 146,138 SAY OemToAnsi(STR0024) SIZE 46,08  OF oDlg PIXEL //"(+)Vlr.Resgate"
					@ 146,208 MSGET oGet01 VAR nA181VlResg      SIZE 68,08  OF oDlg PIXEL PICTURE cPict2 When .F.

				Else
					@ 038,132 TO 160,280 PROMPT OemToAnsi(STR0030) OF oDlg PIXEL //"Dados do Saldo"
					@ 047,138 SAY OemToAnsi(STR0031)    		SIZE 51,08 	OF oDlg PIXEL //"Vlr.Resg.s/Princ."
					@ 047,208 MSGET oGet07 VAR nA181RegPri    SIZE 68,08  OF oDlg PIXEL 	PICTURE PesqPict("SEH","EH_VALREG",18) WHEN .F.
					@ 058,138 SAY OemToAnsi(STR0032)    		SIZE 51,08 	OF oDlg PIXEL //"Vlr.Resg.s/Juros"
					@ 058,208 MSGET oGet08 VAR nA181RegJur    SIZE 68,08  OF oDlg PIXEL PICTURE PesqPict("SEH","EH_VALREG",18)  	WHEN .F.
					@ 069,138 SAY OemToAnsi(STR0033)				SIZE 51,08 	OF oDlg PIXEL			//"Vlr.Saldo s/Princ."
					@ 069,208 MSGET oGet09 VAR nA181SldPri		SIZE 68,08  OF oDlg PIXEL PICTURE PesqPict("SEH","EH_SALDO",18)	 	WHEN .F.
					@ 080,138 SAY OemToAnsi(STR0034)				SIZE 51,08 	OF oDlg PIXEL			//"Vlr.Saldo s/Juros"
					@ 080,208 MSGET oGet10 VAR nA181SldJur		SIZE 68,08  OF oDlg PIXEL PICTURE PesqPict("SEH","EH_VALJUR",18) 	WHEN .F.
					@ 091,138 SAY OemToAnsi(STR0035)				SIZE 51,08 	OF oDlg PIXEL			//"Vlr.Saldo Aplicado"
					@ 091,208 MSGET oGet11 VAR nA181Saldo		SIZE 68,08  OF oDlg PIXEL PICTURE PesqPict("SEH","EH_SALDO",18) 		WHEN .F.
					@ 146,138 SAY OemToAnsi(STR0036) SIZE 51,08 OF oDlg PIXEL //"(=)Vlr.do Credito"
					@ 146,208 MSGET oGet12 VAR nA181VlCrd     SIZE 68,08  OF oDlg Hasbutton PIXEL ;
						PICTURE PesqPict("SEH","EH_VALCRED",18) 	VALID {|| NoRound(nA181VlCrd),Fa181Valor(oDlg)}
				EndIf

				If lPanelFin  //Chamado pelo Painel Financeiro
					ACTIVATE MSDIALOG oDlg CENTERED ON INIT FaMyBar(oDlg,;
						{||nOpca:=1,IF(Fa181Ok(cA181Bco,cA181Age,cA181Cta),oDlg:End(),nOpca:=3)},;
						{||oDlg:End()})

				Else
					DEFINE SBUTTON FROM 009,250 TYPE 1 ENABLE ACTION (nOpca:=1,IF(Fa181Ok(cA181Bco,cA181Age,cA181Cta),oDlg:End(),nOpca:=3)) OF oDlg
					DEFINE SBUTTON FROM 023,250 TYPE 2 ENABLE ACTION oDlg:End() OF oDlg
					ACTIVATE MSDIALOG oDlg CENTERED
				Endif
			Else
				aRetAuto  := Iif(FindFunction("GetParAuto"), GetParAuto("FINA181TestCase"), __aRetAuto)

				If ValType(aRetAuto) != "U" .AND. !Empty(aRetAuto)
					//"Banco"
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "cA181Bco"})) > 0
						cA181Bco := aRetAuto[nPos][2]
					EndIf
					//"Agencia"
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "cA181Age"})) > 0
						cA181Age := aRetAuto[nPos][2]
					EndIf
					//"Conta"
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "cA181Cta"})) > 0
						cA181Cta := aRetAuto[nPos][2]
					EndIf
					//"Crd."
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "dA181Cred"})) > 0
						dA181Cred := aRetAuto[nPos][2]
					EndIf
					//"Natureza"
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "cA181Nat"})) > 0
						cA181Nat := aRetAuto[nPos][2]
					EndIf
					//"Histor."
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "cA181Histor"})) > 0
						cA181Histor := aRetAuto[nPos][2]
					EndIf
					///"(+)Vlr.Resgate"
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VlResg"})) > 0
						nA181VlResg := aRetAuto[nPos][2]
					EndIf
					//"(-)Vlr. I.R."
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VlIRF"})) > 0
						nA181VlIRF := aRetAuto[nPos][2]
					EndIf
					//"(+)Dif. SWAP"
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VlSwap"})) > 0
						nA181VlSwap := aRetAuto[nPos][2]
					EndIf
					//"(-)I.R. SWAP"
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181IRSwap"})) > 0
						nA181IRSwap := aRetAuto[nPos][2]
					EndIf
					//"(-)Vlr. IOF"
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VlIof"})) > 0
						nA181VlIof := aRetAuto[nPos][2]
					EndIf
					//"(-)Outras Taxas"
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VlTaxa"})) > 0
						nA181VlTaxa := aRetAuto[nPos][2]
					EndIf
					//"(=)Vlr.do Credito"
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VlCrd"})) > 0
						nA181VlCrd := aRetAuto[nPos][2]
					EndIf
					//"(=)Valor Unit Cotas"
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "na181vlcota"})) > 0
						na181vlcota := aRetAuto[nPos][2]
					EndIf
					//"(=)	Qtde Cotas Resga
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "N181CTRG"})) > 0
						N181CTRG := aRetAuto[nPos][2]
					EndIf

					//"(=)Saldo em Cotas
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "N181SLDQS"})) > 0
						N181SLDQS := aRetAuto[nPos][2]
					EndIf

					//"(=)Rendimento Bruto
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "NA181RDBRUTO"})) > 0
						NA181RDBRUTO := aRetAuto[nPos][2]
					EndIf

					//"(=)IR Sobre Rend
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "NA181IRRDBRUTO"})) > 0
						NA181IRRDBRUTO := aRetAuto[nPos][2]
					EndIf

					If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181RegPri"})) > 0
						nA181RegPri := aRetAuto[nPos][2]
					EndIf

					If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181RegJur"})) > 0
						nA181RegJur := aRetAuto[nPos][2]
					EndIf

					If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181SldPri"})) > 0
						nA181SldPri := aRetAuto[nPos][2]
					EndIf

					If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181SldJur"})) > 0
						nA181SldJur := aRetAuto[nPos][2]
					EndIf

					If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181Saldo"})) > 0
						nA181Saldo := aRetAuto[nPos][2]
					EndIf

					IF aScan(aRetAuto,{|x| x[1] == "RECALCULAR"}) > 0
						FOR nI := 1 TO LEN(aRetAuto)
							Fa181Valor(NIL,UPPER(aRetAuto[nI][1]),lAutomato)
						NEXT nI
					ENDIF
				EndIf
				nOpca := 1
			EndIf

			Do Case
			Case nOpcA == 2
				lContinua := .T.
			Case nOpcA == 3
				dbSelectArea(cAlias)
				MsUnlock()
				lContinua := .F.
			Case nOpcA == 1
				lPcoConf := .T.
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Ponto de Entrada para gravacao de dados complementares            ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lFA181RES
					If !ExecBlock("FA181RES",.F.,.F.)
						dbSelectArea("SEH")
						MsUnLock()
						Return(.T.)
					Endif
				EndIf

				SED->(DbSeek(xFilial("SED")+cA181Nat))

				dbSelectArea('SA6')
				dbSetOrder(1)
				If dbSeek(xFilial()+SEH->EH_BANCO+SEH->EH_AGENCIA+SEH->EH_CONTA)
					nMoedaBco := Max(SA6->A6_MOEDA,1)
				EndIf

				dbSelectArea("SEI")
				dbSetOrder(1)
				dbSeek(xFilial("SEI")+SEH->EH_APLEMP+SEH->EH_NUMERO+SEH->EH_REVISAO)
				While ( !Eof() .And. SEI->EI_FILIAL == xFilial("SEI") .And.;
						SEI->EI_APLEMP == SEH->EH_APLEMP .And.;
						SEI->EI_REVISAO== SEH->EH_REVISAO .And.;
						SEI->EI_NUMERO == SEH->EH_NUMERO )
					csequencia := If(cSequencia>SEI->EI_SEQ,cSequencia,SEI->EI_SEQ)
					dbSelectArea("SEI")
					dbSkip()
				EndDo

				//Ponto de entrada para permitir a alteracao dos valores de resgate e juros (nao aplicavel a cotas)
				If lFA181VLR .AND. !lAplCota
					aDifVlr := Array(0)
					aFa181Vlr := ExecBlock("FA181VLR",.F.,.F.,{nA181RegPri /* valor resgate */, nA181RegJur /* juros resgate */})
					If ValType(aFa181Vlr) == "A" .AND. !Empty(aFa181Vlr) .AND. Len(aFa181Vlr) == 2
						//Se o valor de resgate for menor que o saldo ou dentro da tolerancia de resgate
						If aFa181Vlr[1] <= SEH->EH_SALDO .OR. Abs(aFa181Vlr[1] - SEH->EH_SALDO) < mv_par03
							aAdd(aDifVlr,{aFa181Vlr[1] - nA181RegPri, {"nA181RegPri","nA181SldPri","nA181Saldo","nA181VlCrd"}})
							aAdd(aDifVlr,{aFa181Vlr[2] - nA181RegJur, {"nA181RegJur","nA181SldPri","nA181SldJur","nA181Saldo","nA181VlCrd"}})
							For nx := 1 to Len(aDifVlr)
								If aDifVlr[nx][1] < 0 		//Valor inferior, subtrair
									For nz := 1 to Len(aDifVlr[nx][2])
										&(aDifVlr[nx][2][nz]) -= aDifVlr[nx][1]
									Next nz
								ElseIf aDifVlr[nx][1] > 0	//Valor superior, somar
									For nz := 1 to Len(aDifVlr[nx][2])
										&(aDifVlr[nx][2][nz]) += aDifVlr[nx][1]
									Next nz
								Endif
							Next nx
						Endif
					Endif
				Endif

				cSequencia := Soma1(cSequencia,nTamSeq)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Inicio do bloco protegido via TTS                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				Begin Transaction
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza os dados da aplicacao                     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					RecLock("SEH",.F.)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualizacao da qtde de quotas                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lAplCota
						nA181RegJur 	 	:= nA181RdBruto
						SEH->EH_SLDCOTA	:= n181SldQs
						SEH->EH_SALDO 		:= Max(SEH->EH_SLDCOTA * nA181VlCota,0)
						If !lAutomato
							nA181VlIrf          := iIf(nA181VlIrf <> nA181IRRdBruto , nA181IRRdBruto, nA181VlIrf  )
						EndIf
					Else
						SEH->EH_SALDO	:= Round(nA181SldPri,2)
					Endif
					SEH->EH_STATUS	:= Iif(SEH->EH_SALDO<0.01,"B","A")
					SEH->EH_VALREG	:= nA181VlResg
					SEH->EH_DATARES	:= dA181Cred
					SEH->EH_VALJUR	:= nA181RegJur
					SEH->EH_VALIOF	:= nA181VlIOF
					SEH->EH_VALIRF	:= nA181VlIrf
					SEH->EH_VALSWAP	:= nA181VlSwap
					SEH->EH_VALISWP	:= nA181IrSwap
					SEH->EH_VALOUTR	:= nA181VlTaxa
					SEH->EH_VALCRED	:= NoRound(nA181VlCrd)
					// Se existir o campo com a data do ultimo pagto de IR e deve-se deduzir o IR da aplicacao, grava a data
					// do ultimo pagto. de IR, pois ela sera utilizada no calculo do rendimento posteriormente.
					If Empty(SEH->EH_ULTPGIR)
						SEH->EH_ULTPGIR  := dDataBase
					Endif

					VALOR := nA181RegPri

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava o Valor do Principal                         ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( nA181RegPri != 0)
						Reclock("SEI",.T.)
						SEI->EI_FILIAL  := xFilial("SEI")
						SEI->EI_NUMERO  := SEH->EH_NUMERO
						SEI->EI_REVISAO := SEH->EH_REVISAO
						SEI->EI_TIPODOC := "BP" // Baixa do Principal
						SEI->EI_DATA    := dDataBase
						SEI->EI_TIPO    := SEH->EH_TIPO
						SEI->EI_APLEMP  := SEH->EH_APLEMP
						SEI->EI_BANCO   := cA181Bco
						SEI->EI_AGENCIA := cA181AGe
						SEI->EI_CONTA   := cA181Cta
						SEI->EI_VALOR   := nA181RegPri
						SEI->EI_NATUREZ := cA181Nat
						SEI->EI_DTDIGIT := dDataBase
						SEI->EI_LA      := If( lPadrao .And. MV_PAR02 == 1,"S","")
						SEI->EI_SEQ     := cSequencia
						SEI->EI_VLMOED2 := 0
						SEI->EI_MOTBX   := "NOR"
						SEI->EI_HISTOR  := cA181Histor
						SEI->EI_TAXA    := SEH->EH_TAXA
						SEI->EI_TXMOEDA := nA181VlMoed
						dbSelectArea("SE9")
						dbSetOrder(1)
						If MsSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
							SEI->EI_VLRQTS  := SE9->E9_COTAANT
							SEI->EI_VLRQTA  := SE9->E9_VLRCOTA
						EndIf
						SEI->EI_QTDCOTA := n181CtRg

						cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
						If !Empty(cLctPco)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera os lancamentos do SIGAPCO                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							PcoDetLan("000009", cLctPco, "FINA181")
						EndIf
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava o Valor do Juros                             ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( nA181RegJur != 0 )
						Reclock("SEI",.T.)
						SEI->EI_FILIAL  := xFilial("SEI")
						SEI->EI_NUMERO  := SEH->EH_NUMERO
						SEI->EI_REVISAO := SEH->EH_REVISAO
						SEI->EI_TIPODOC := "JR" // Apropriacao dos Juros
						SEI->EI_DATA    := dDataBase
						SEI->EI_TIPO     := SEH->EH_TIPO
						SEI->EI_APLEMP  := SEH->EH_APLEMP
						SEI->EI_BANCO   := cA181Bco
						SEI->EI_AGENCIA := cA181AGe
						SEI->EI_CONTA   := cA181Cta
						SEI->EI_VALOR   := nA181RegJur
						SEI->EI_NATUREZ := cA181Nat
						SEI->EI_DTDIGIT := dDataBase
						SEI->EI_LA      :=  If( lPadrao .And. MV_PAR02 == 1,"S","")
						SEI->EI_SEQ     := cSequencia
						SEI->EI_VLMOED2 := 0
						SEI->EI_MOTBX   := "NOR"
						SEI->EI_HISTOR  := cA181Histor
						SEI->EI_TAXA    := SEH->EH_TAXA
						SEI->EI_TXMOEDA := nA181VlMoed
						dbSelectArea("SE9")
						dbSetOrder(1)
						If MsSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
							SEI->EI_VLRQTS  := SE9->E9_COTAANT
							SEI->EI_VLRQTA  := SE9->E9_VLRCOTA
						EndIf
						SEI->EI_QTDCOTA := n181CtRg

						cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
						If !Empty(cLctPco)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera os lancamentos do SIGAPCO                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							PcoDetLan("000009", cLctPco, "FINA181")
						EndIf
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava o Valor do Resgate                           ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( nA181VlResg != 0 )
						Reclock("SEI",.T.)
						SEI->EI_FILIAL  := xFilial("SEI")
						SEI->EI_NUMERO  := SEH->EH_NUMERO
						SEI->EI_REVISAO := SEH->EH_REVISAO
						SEI->EI_TIPODOC := "RG" // Baixa do Valor do Resgate
						SEI->EI_DATA    := dDataBase
						SEI->EI_TIPO    := SEH->EH_TIPO
						SEI->EI_APLEMP  := SEH->EH_APLEMP
						SEI->EI_BANCO   := cA181Bco
						SEI->EI_AGENCIA := cA181AGe
						SEI->EI_CONTA   := cA181Cta
						SEI->EI_VALOR   := nA181VlResg
						SEI->EI_NATUREZ := cA181Nat
						SEI->EI_DTDIGIT := dDataBase
						SEI->EI_LA      := If( lPadrao .And. MV_PAR02 == 1,"S","")
						SEI->EI_SEQ     := cSequencia
						SEI->EI_VLMOED2 := 0
						SEI->EI_MOTBX   := "NOR"
						SEI->EI_HISTOR  := cA181Histor
						SEI->EI_TAXA    := SEH->EH_TAXA
						SEI->EI_TXMOEDA := nA181VlMoed
						dbSelectArea("SE9")
						dbSetOrder(1)
						If MsSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
							SEI->EI_VLRQTS  := SE9->E9_COTAANT
							SEI->EI_VLRQTA  := SE9->E9_VLRCOTA
						EndIf
						SEI->EI_QTDCOTA := n181CtRg

						cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
						If !Empty(cLctPco)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera os lancamentos do SIGAPCO                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							PcoDetLan("000009", cLctPco, "FINA181")
						EndIf

						cMoedaBco := Posicione('SA6',1,xFilial('SA6')+cA181Bco+cA181Age+cA181Cta,'A6_MOEDA')
						AtuSldNat(cA181Nat, dDataBase,cMoedaBco, "3", "R", nA181VlResg, 0, "+",,FunName(),"SEH", SEH->(Recno()),0)

					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava o Valor do IRF                               ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( nA181VlIrf != 0 )
						Reclock("SEI",.T.)
						SEI->EI_FILIAL  := xFilial("SEI")
						SEI->EI_NUMERO  := SEH->EH_NUMERO
						SEI->EI_REVISAO := SEH->EH_REVISAO
						SEI->EI_TIPODOC := "I1" // Apropriacao do IRF
						SEI->EI_DATA    := dDataBase
						SEI->EI_TIPO     := SEH->EH_TIPO
						SEI->EI_APLEMP  := SEH->EH_APLEMP
						SEI->EI_BANCO   := cA181Bco
						SEI->EI_AGENCIA := cA181AGe
						SEI->EI_CONTA   := cA181Cta
						SEI->EI_VALOR   := nA181VlIrf
						SEI->EI_NATUREZ := cA181Nat
						SEI->EI_DTDIGIT := dDataBase
						SEI->EI_LA      := If( lPadrao .And. MV_PAR02 == 1,"S","")
						SEI->EI_SEQ     := cSequencia
						SEI->EI_VLMOED2 := 0
						SEI->EI_HISTOR  := cA181Histor
						SEI->EI_MOTBX   := "NOR"
						SEI->EI_TAXA    := SEH->EH_TAXA
						SEI->EI_TXMOEDA := nA181VlMoed
						dbSelectArea("SE9")
						dbSetOrder(1)
						If MsSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
							SEI->EI_VLRQTS  := SE9->E9_COTAANT
							SEI->EI_VLRQTA  := SE9->E9_VLRCOTA
						EndIf
						SEI->EI_QTDCOTA := n181CtRg

						cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
						If !Empty(cLctPco)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera os lancamentos do SIGAPCO                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							PcoDetLan("000009", cLctPco, "FINA181")
						EndIf
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava o Valor do IOF                               ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( nA181VlIof != 0 )
						Reclock("SEI",.T.)
						SEI->EI_FILIAL  := xFilial("SEI")
						SEI->EI_NUMERO  := SEH->EH_NUMERO
						SEI->EI_REVISAO := SEH->EH_REVISAO
						SEI->EI_TIPODOC := "I2" //Apropriacao do IOF
						SEI->EI_DATA    := dDataBase
						SEI->EI_TIPO    := SEH->EH_TIPO
						SEI->EI_APLEMP  := SEH->EH_APLEMP
						SEI->EI_BANCO   := cA181Bco
						SEI->EI_AGENCIA := cA181AGe
						SEI->EI_CONTA   := cA181Cta
						SEI->EI_VALOR   := nA181VlIof
						SEI->EI_NATUREZ := cA181Nat
						SEI->EI_DTDIGIT := dDataBase
						SEI->EI_LA      := If( lPadrao .And. MV_PAR02 == 1,"S","")
						SEI->EI_SEQ     := cSequencia
						SEI->EI_VLMOED2 := 0
						SEI->EI_MOTBX   := "NOR"
						SEI->EI_HISTOR  := cA181Histor
						SEI->EI_TAXA    := SEH->EH_TAXA
						SEI->EI_TXMOEDA := nA181VlMoed
						dbSelectArea("SE9")
						dbSetOrder(1)
						If MsSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
							SEI->EI_VLRQTS  := SE9->E9_COTAANT
							SEI->EI_VLRQTA  := SE9->E9_VLRCOTA
						EndIf
						SEI->EI_QTDCOTA := n181CtRg

						cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
						If !Empty(cLctPco)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera os lancamentos do SIGAPCO                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							PcoDetLan("000009", cLctPco, "FINA181")
						EndIf
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava o Valor do Swap                              ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( nA181VlSwap != 0 )
						Reclock("SEI",.T.)
						SEI->EI_FILIAL  := xFilial("SEI")
						SEI->EI_NUMERO  := SEH->EH_NUMERO
						SEI->EI_REVISAO := SEH->EH_REVISAO
						SEI->EI_TIPODOC := "SW" // Valor do SWAP
						SEI->EI_DATA    := dDataBase
						SEI->EI_TIPO     := SEH->EH_TIPO
						SEI->EI_APLEMP  := SEH->EH_APLEMP
						SEI->EI_BANCO   := cA181Bco
						SEI->EI_AGENCIA := cA181AGe
						SEI->EI_CONTA   := cA181Cta
						SEI->EI_VALOR   := nA181VlSwap
						SEI->EI_NATUREZ := cA181Nat
						SEI->EI_DTDIGIT := dDataBase
						SEI->EI_LA      := If( lPadrao .And. MV_PAR02 == 1,"S","")
						SEI->EI_SEQ     := cSequencia
						SEI->EI_VLMOED2 := 0
						SEI->EI_MOTBX   := "NOR"
						SEI->EI_HISTOR  := cA181Histor
						SEI->EI_TAXA    := SEH->EH_TAXA
						SEI->EI_TXMOEDA := nA181VlMoed
						dbSelectArea("SE9")
						dbSetOrder(1)
						If MsSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
							SEI->EI_VLRQTS  := SE9->E9_COTAANT
							SEI->EI_VLRQTA  := SE9->E9_VLRCOTA
						EndIf
						SEI->EI_QTDCOTA := n181CtRg

						cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
						If !Empty(cLctPco)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera os lancamentos do SIGAPCO                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							PcoDetLan("000009", cLctPco, "FINA181")
						EndIf
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava o Valor do IRF s/ SWAP                       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( nA181IrSwap != 0 )
						Reclock("SEI",.T.)
						SEI->EI_FILIAL  := xFilial("SEI")
						SEI->EI_NUMERO  := SEH->EH_NUMERO
						SEI->EI_REVISAO := SEH->EH_REVISAO
						SEI->EI_TIPODOC := "I3" //Apropriacao do IRF s/ SWAP
						SEI->EI_DATA    := dDataBase
						SEI->EI_TIPO     := SEH->EH_TIPO
						SEI->EI_APLEMP  := SEH->EH_APLEMP
						SEI->EI_BANCO   := cA181Bco
						SEI->EI_AGENCIA := cA181AGe
						SEI->EI_CONTA   := cA181Cta
						SEI->EI_VALOR   := nA181IrSwap
						SEI->EI_NATUREZ := cA181Nat
						SEI->EI_DTDIGIT := dDataBase
						SEI->EI_LA      := If( lPadrao .And. MV_PAR02 == 1,"S","")
						SEI->EI_SEQ     := cSequencia
						SEI->EI_VLMOED2 := 0
						SEI->EI_MOTBX   := "NOR"
						SEI->EI_HISTOR  := cA181Histor
						SEI->EI_TAXA    := SEH->EH_TAXA
						SEI->EI_TXMOEDA := nA181VlMoed
						dbSelectArea("SE9")
						dbSetOrder(1)
						If MsSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
							SEI->EI_VLRQTS  := SE9->E9_COTAANT
							SEI->EI_VLRQTA  := SE9->E9_VLRCOTA
						EndIf
						SEI->EI_QTDCOTA := n181CtRg

						cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
						If !Empty(cLctPco)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera os lancamentos do SIGAPCO                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							PcoDetLan("000009", cLctPco, "FINA181")
						EndIf
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava o Valor das Taxas                            ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( nA181VlTaxa != 0 )
						Reclock("SEI",.T.)
						SEI->EI_FILIAL  := xFilial("SEI")
						SEI->EI_NUMERO  := SEH->EH_NUMERO
						SEI->EI_REVISAO := SEH->EH_REVISAO
						SEI->EI_TIPODOC := "I4" // Apropriacao de despesas
						SEI->EI_DATA    := dDataBase
						SEI->EI_TIPO     := SEH->EH_TIPO
						SEI->EI_APLEMP  := SEH->EH_APLEMP
						SEI->EI_BANCO   := cA181Bco
						SEI->EI_AGENCIA := cA181AGe
						SEI->EI_CONTA   := cA181Cta
						SEI->EI_VALOR   := nA181VlTaxa
						SEI->EI_NATUREZ := cA181Nat
						SEI->EI_DTDIGIT := dDataBase
						SEI->EI_LA      := If( lPadrao .And. MV_PAR02 == 1,"S","")
						SEI->EI_SEQ     := cSequencia
						SEI->EI_VLMOED2 := 0
						SEI->EI_MOTBX   := "NOR"
						SEI->EI_HISTOR  := cA181Histor
						SEI->EI_TAXA    := SEH->EH_TAXA
						SEI->EI_TXMOEDA := nA181VlMoed
						dbSelectArea("SE9")
						dbSetOrder(1)
						If MsSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
							SEI->EI_VLRQTS  := SE9->E9_COTAANT
							SEI->EI_VLRQTA  := SE9->E9_VLRCOTA
						EndIf
						SEI->EI_QTDCOTA := n181CtRg

						cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
						If !Empty(cLctPco)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera os lancamentos do SIGAPCO                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							PcoDetLan("000009", cLctPco, "FINA181")
						EndIf
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava o Valor Creditado                            ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( nA181VlCrd != 0 )
						Reclock("SEI",.T.)
						SEI->EI_FILIAL  := xFilial("SEI")
						SEI->EI_NUMERO  := SEH->EH_NUMERO
						SEI->EI_REVISAO := SEH->EH_REVISAO
						SEI->EI_TIPODOC := "VL" // Valor do Credito
						SEI->EI_DATA    := dDataBase
						SEI->EI_TIPO     := SEH->EH_TIPO
						SEI->EI_APLEMP  := SEH->EH_APLEMP
						SEI->EI_BANCO   := cA181Bco
						SEI->EI_AGENCIA := cA181AGe
						SEI->EI_CONTA   := cA181Cta
						SEI->EI_VALOR   := nA181VlCrd
						SEI->EI_NATUREZ := cA181Nat
						SEI->EI_DTDIGIT := dDataBase
						SEI->EI_LA      := If( lPadrao .And. MV_PAR02 == 1,"S","")
						SEI->EI_SEQ     := cSequencia
						SEI->EI_VLMOED2 := 0
						SEI->EI_MOTBX   := "NOR"
						SEI->EI_HISTOR  := cA181Histor
						SEI->EI_TAXA    := SEH->EH_TAXA
						SEI->EI_TXMOEDA := nA181VlMoed
						dbSelectArea("SE9")
						dbSetOrder(1)
						If MsSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
							SEI->EI_VLRQTS  := SE9->E9_COTAANT
							SEI->EI_VLRQTA  := SE9->E9_VLRCOTA
						EndIf
						SEI->EI_QTDCOTA := n181CtRg

						cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
						If !Empty(cLctPco)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Gera os lancamentos do SIGAPCO                      ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							PcoDetLan("000009", cLctPco, "FINA181")
						EndIf
					EndIf


			/* 
			--- Formas de gravacao da movimentacao bancaria no resgate de aplicacoes (a passar por revisao) ---
			FK5_MOEDA: Moeda do cadastro do banco (A6_MOEDA)
			FK5_VALOR: Valor calculado/digitado e exibido em tela;
			FK5_VLMOE2: Nao é gravado;
			FK5_TXMOED: Nao é gravado;	
			*/

					//Define os campos que não existem na FK5 e que serão gravados apenas na E5, para que a gravação da E5 continue igual
					cCamposE5	:= Fa171CpSE5(lMovEnt05, lMovEnt06, lMovEnt07, lMovEnt08,lMovEnt09)

					oModelMov:SetOperation( MODEL_OPERATION_INSERT ) //Inclusao
					oModelMov:Activate()
					oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Informa se vai gravar SE5 ou não
					oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5
					oModelMov:SetValue( "MASTER", "NOVOPROC", .T. ) //Informa que a inclusão será feita com um novo número de processo

					//Dados do Processo
					oSubFKA := oModelMov:GetModel("FKADETAIL")
					oSubFKA:SetValue( "FKA_IDORIG", FWUUIDV4() )
					oSubFKA:SetValue( "FKA_TABORI", "FK5" )

					//Informacoes do movimento
					oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
					oSubFK5:SetValue( "FK5_DATA", dA181Cred )
					oSubFK5:SetValue( "FK5_BANCO", cA181Bco )
					oSubFK5:SetValue( "FK5_AGENCI", cA181Age )
					oSubFK5:SetValue( "FK5_CONTA", cA181Cta )
					oSubFK5:SetValue( "FK5_VALOR", nA181VlCrd )
					oSubFK5:SetValue( "FK5_RECPAG", "R" )
					oSubFK5:SetValue( "FK5_TPDOC", "RF" )
					oSubFK5:SetValue( "FK5_LA", Iif(mv_par02==1,"S"," ") )
					oSubFK5:SetValue( "FK5_NATURE", cA181Nat )
					oSubFK5:SetValue( "FK5_HISTOR", cA181Histor )
					oSubFK5:SetValue( "FK5_DTDISP", dA181Cred )
					oSubFK5:SetValue( "FK5_DOC", SEH->EH_NUMERO+SEH->EH_REVISAO+cSequencia )
					oSubFK5:SetValue( "FK5_MOEDA", PADL(nMoedaBco,TamSX3("CTO_MOEDA")[1],"0") )
					oSubFK5:SetValue( "FK5_FILORI", SEH->EH_FILIAL )
					oSubFK5:SetValue( "FK5_ORIGEM", FunName() )
					oSubFK5:SetValue( "FK5_CCUSTO", SEH->EH_CCUSTO )

					//Gravação da tabela FK8 - Dados Contábeis
					Fa171GrFK8(oModelMov,lMovEnt05, lMovEnt06, lMovEnt07, lMovEnt08,lMovEnt09)

					If oModelMov:VldData()
						oModelMov:CommitData()
					Else
						lRet := .F.
						cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
						cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
						cLog += cValToChar(oModelMov:GetErrorMessage()[6])

						Help( ,,"MF181RESGA",,cLog, 1, 0 )
					Endif

					oModelMov:DeActivate()
					oModelMov:Destroy()
					oModelMov := NIL

					AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, SE5->E5_DATA, SE5->E5_VALOR,;
						IIf(SE5->E5_RECPAG=="R","+","-") )

					// Contabiliza o Resgate - LP585
					If (MV_PAR02 == 1) .AND. lPadrao
						// Posiciona Banco
						SA6->(DbSetOrder(1))
						SA6->(DbSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
						// Posiciona Natureza
						SED->(DBSETORDER(1))
						SED->(xFilial("SED")+SEH->EH_NATUREZ)
						// Posiciona Fornecedor
						IF FindFunction("FORNEMPR")
							SA2->(DBGOTO(FornEmpr(SEH->EH_NUMERO, SEH->EH_DATA, SEH->EH_NATUREZ)))
						ENDIF

						nHdlPrv := HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
						nTotal += DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
					EndIf

					// Calcula a Diferenca das apropriacoes Mensais
					If ( SEH->EH_SALDO == 0 )
						dbSelectArea("SEH")

						RecLock("SEH",.F.)

						SEH->EH_VALIRF  := 0
						SEH->EH_VALIOF  := 0
						SEH->EH_VALISWP := 0
						SEH->EH_VALOUTR := 0
						SEH->EH_VALJUR  := 0
					EndIf

					//Registrando apropriacao mensal

					// Obtém o histórico de apropriações Mensais
					aDifAprop := SEIMovSummary(;
						IF(lAplCota, (SE0->E0_VALOR * n181CtRg), nA181RegPri),;
							IF(lAplCota, SEH->EH_DTULTAT, SEH->EH_ULTAPR),;
								,,,, lAplCota)

							dbSelectArea("SEI")
							SEI->(dbSetOrder(1))
							SEI->(DBSEEK(xFilial()+SEH->EH_APLEMP+SEH->EH_NUMERO+SEH->EH_REVISAO+cSequencia))

							While ( !Eof() .And. SEH->EH_FILIAL == SEI->EI_FILIAL .And.;
									SEH->EH_NUMERO == SEI->EI_NUMERO .And.;
									SEH->EH_REVISAO== SEI->EI_REVISAO .AND.;
									cSequencia == SEI->EI_SEQ )

								If ( SEI->EI_MOTBX == "NOR" )
									If  SEI->EI_TIPODOC $ "I1#I2#I3#I4#I6#I7#JR" .And. SEI->EI_STATUS <> "C"

										IF SEI->EI_TIPODOC $ "I1;I6"
											nDifAprop := Ascan(aDifAprop,{|x| x[1] $ "I1;I6"})
										ELSEIF SEI->EI_TIPODOC $ "JR;I7"
											nDifAprop := Ascan(aDifAprop,{|x| x[1] $ "JR;I7"})
										ELSE
											nDifAprop := Ascan(aDifAprop,{|x| x[1] == SEI->EI_TIPODOC })
										ENDIF

										If ( nDifAprop == 0 )
											aadd(aDifAprop,{ SEI->EI_TIPODOC, 0 , 0 , 0})
											nDifAprop := Len(aDifAprop)
										EndIf

										aDifAprop[nDifAprop,2] += SEI->EI_VALOR
										aDifAprop[nDifAprop,3] += SEI->EI_VALOR
									EndIf
								EndIf

								SEI->(dbSkip())
							EndDo

							// Verifica se teve apropriação de IOF
							nDifAprop := Ascan(aDifAprop,{|x| x[1] == 'I2' })
							IF !EMPTY(nDifAprop) .AND. EMPTY(aDifAprop[nDifAprop][3])
								// Se não teve IOF no resgate - Estorna da apropriação o valor equivalente pelo resgate.
								aDifAprop[nDifAprop][4] := aDifAprop[nDifAprop][2] * (-1)
							ENDIF

							For nCntFor := 1 To Len(aDifAprop)
								If ( aDifAprop[nCntFor,2] != 0 )
									If (aDifAprop[nCntFor,1] $ "I1#I2#I3#I4#I6#I7#JR") .and.;
											(aDifAprop[nCntFor,2] - aDifAprop[nCntFor,4]) # 0

										Reclock("SEI",.T.)
										SEI->EI_FILIAL  := xFilial("SEI")
										SEI->EI_NUMERO  := SEH->EH_NUMERO
										SEI->EI_REVISAO := SEH->EH_REVISAO
										SEI->EI_TIPODOC := aDifAprop[nCntFor,1]
										SEI->EI_DATA    := dDataBase
										SEI->EI_TIPO     := SEH->EH_TIPO
										SEI->EI_APLEMP  := SEH->EH_APLEMP
										SEI->EI_VALOR   := aDifAprop[nCntFor,2]
										SEI->EI_NATUREZ := cA181Nat
										SEI->EI_DTDIGIT := dDataBase
										SEI->EI_LA      := If( lPadrao .And. MV_PAR02 == 1,"S","")
										SEI->EI_SEQ     := cSequencia
										SEI->EI_VLMOED2 := 0
										SEI->EI_MOTBX   := "APR"
										SEI->EI_STATUS  := ""
										SEI->EI_HISTOR  := STR0041  //"Apropriacao Mensal"
										SEI->EI_TAXA    := SEH->EH_TAXA
										SEI->EI_TXMOEDA := nA181VlMoed

										SEI->EI_BANCO   := SEH->EH_BANCO
										SEI->EI_AGENCIA := SEH->EH_AGENCIA
										SEI->EI_CONTA   := SEH->EH_CONTA

										dbSelectArea("SE9")
										dbSetOrder(1)
										If MsSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
											SEI->EI_VLRQTS  := SE9->E9_COTAANT
											SEI->EI_VLRQTA  := SE9->E9_VLRCOTA
										EndIf

										cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
										If !Empty(cLctPco)
											//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
											//³ Gera os lancamentos do SIGAPCO                      ³
											//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
											PcoDetLan("000009", cLctPco, "FINA181")
										EndIf
										RecLock("SEH",.F.)
										If lAplCota
											Do Case
											Case SEI->EI_TIPODOC $ "I1;I6" // Apropriacao do IRF
												SEH->EH_VALIRF  := na181IrRdBruto
											Case SEI->EI_TIPODOC == "I2" // Apropriacao do IOF
												SEH->EH_VALIOF  := SEI->EI_VALOR
											Case SEI->EI_TIPODOC == "I3" // Apropriacao do IR/Swap
												SEH->EH_VALISWP := SEI->EI_VALOR
											Case SEI->EI_TIPODOC == "I4" // Apropriacao de outras taxas
												SEH->EH_VALOUTR := SEI->EI_VALOR
											Case SEI->EI_TIPODOC $ "JR;I7" // Apropriacao dos Juros
												SEH->EH_VALJUR  := na181RdBruto
											EndCase
										Else
											Do Case
											Case SEI->EI_TIPODOC == "I1" .And. SEI->EI_VALOR >= 0 // Apropriacao do IRF
												SEH->EH_VALIRF  := SEI->EI_VALOR
											Case SEI->EI_TIPODOC == "I1" .And. SEI->EI_VALOR < 0 // Apropriacao do IRF
												SEH->EH_VALIRF  := Round(nA181VLIRF,2)
											Case SEI->EI_TIPODOC == "I2" // Apropriacao do IOF
												SEH->EH_VALIOF  := SEI->EI_VALOR
											Case SEI->EI_TIPODOC == "I3" // Apropriacao do IR/Swap
												SEH->EH_VALISWP := SEI->EI_VALOR
											Case SEI->EI_TIPODOC == "I4" // Apropriacao de outras taxas
												SEH->EH_VALOUTR := SEI->EI_VALOR
											Case SEI->EI_TIPODOC == "JR" .And. SEI->EI_VALOR >= 0 // Apropriacao dos Juros
												SEH->EH_VALJUR  := SEI->EI_VALOR
											Case SEI->EI_TIPODOC == "JR" .And. SEI->EI_VALOR < 0 // Apropriacao dos Juros
												SEH->EH_VALJUR  := Round(nA181RegJur,2)
											EndCase
										Endif
									EndIf
								EndIf
							Next nCntFor

							// Ponto de entrada para resgate de aplica‡Æo
							If lFa181Rap
								ExecBlock("FA181RAP", .F., .F. )
							Endif
							If UsaSeqCor()
								FA181Diario()
								aDiario := {{"SE5",SE5->(Recno()),cCodDiario, "E5_NODIA","E5_DIACTB"}}
							Else
								aDiario := {}
							EndIf

							// Contabiliza Diferenças de Provisão - LP582
							If (MV_PAR02 == 1) .AND. VerPadrao("582")
								// Posiciona Banco
								SA6->(DbSetOrder(1))
								SA6->(DbSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								// Posiciona Natureza
								SED->(DBSETORDER(1))
								SED->(xFilial("SED")+SEH->EH_NATUREZ)
								// Posiciona Fornecedor
								IF FindFunction("FORNEMPR")
									SA2->(DBGOTO(FornEmpr(SEH->EH_NUMERO, SEH->EH_DATA, SEH->EH_NATUREZ)))
								ENDIF

								IF nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								ENDIF

								nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
							EndIf

							IF !EMPTY(nTotal)
								RodaProva(nHdlPrv,nTotal)

								cA100Incl(cArquivo,nHdlPrv,3,cLote,lDigita,.F.,,,,,,aDiario)
							ENDIF

							If lAplCota
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Atualizacao da qtde de quotas no resgate			    ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								dbSelectArea("SE9")
								dbSetOrder(1)
								If dbSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
									RecLock("SE9",.F.)
									SE9->E9_COTAANT := SE9->E9_VLRCOTA
									SE9->E9_VLRCOTA := na181VlCota
								Endif
								dbSelectArea("SE0")
								dbSetOrder(1)
								// Atualiza arquivo de cotacoes
								If !MsSeek(xFilial("SE0")+SE9->(E9_BANCO+E9_AGENCIA+E9_CONTA+E9_NUMERO)+Str(21001231-Val(DTOS(dDataBase)),11)+Space(3))
									RecLock("SE0",.T.)
									SE0->E0_FILIAL		:= xFilial("SE0")
									SE0->E0_BANCO		:= SE9->E9_BANCO
									SE0->E0_AGENCIA	:= SE9->E9_AGENCIA
									SE0->E0_CONTA		:= SE9->E9_CONTA
									SE0->E0_CONTRAT	:= SE9->E9_NUMERO
									SE0->E0_SUBCTA		:= Space(3)
									SE0->E0_DATA		:= dDataBase
									SE0->E0_ORDEM		:= Str(21001231-Val(DTOS(dDataBase)),11)
								Else
									RecLock("SE0",.F.)
								Endif
								SE0->E0_VALOR		:= na181VlCota
								SE0->E0_ORIGEM		:= "R" // Resgate
								DbSelectArea("SE9")
							Endif
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Final  do bloco protegido via TTS                         ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						End Transaction
						lContinua := .F.
					OtherWise
						lContinua := .F.
					EndCase
				EndDo

				dbSelectArea("SEH")
				MsUnLock()

				If lPcoConf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera os lancamentos do SIGAPCO  (referente SEH)     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					PcoDetLan("000009","01","FINA181")
				EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza a geraçao de lancamentos do SIGAPCO        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				PcoFinLan("000009")

				lPergAplIm := .F.

				Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ a181Estor³ Autor ³ Eduardo Riera         ³ Data ³ 01.04.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Estorno do Resgate de Aplicacoes/Emprestimos Financeiros   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ a181Estor(ExpC1,ExpN1,ExpN2)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Numero da op‡„o selecionada                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA181                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a181Estor(cAlias,nReg,nOpc,lAutomato)

	// Inicia as variaveis staticas do fonte.
	FinIniVar()

	// Localiza e posiciona Fornecedor
	SA2->(DBGOTO(FornEmpr(SEH->EH_NUMERO, SEH->EH_DATA, SEH->EH_NATUREZ)))

	If !CCBLOCKED(SEH->EH_BANCO,SEH->EH_AGENCIA,SEH->EH_CONTA) //Verifica bloqueio de conta corrente
		If ( SEH->EH_APLEMP=="APL" )
			If ExistBlock("F181EQT")
				ExecBlock("F181EQT",.F.,.F.)
			Else
				A181EstAp(cAlias,nReg,nOpc,lAutomato)
			EndIf
		Else
			a181EstEmp(cAlias,nReg,nOpc,lAutomato)
		EndIf
	Endif
Return(.T.)

/*/
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡„o    ³ a181EstAp³ Autor ³ Eduardo Riera         ³ Data ³ 01.04.98 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡„o ³ Estorno do Resgate de Aplicacoes Financeiras               ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe   ³ a181EstAp(ExpC1,ExpN1,ExpN2)                               ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
	±±³          ³ ExpN1 = Numero do registro                                 ³±±
	±±³          ³ ExpN2 = Numero da op‡„o selecionada                        ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso      ³ FINA181                                                    ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function a181EstAp(cAlias,nReg,nOpc,lAutomato)
	Local lPanelFin := IsPanelFin()
	Local cChave     := ""
	Local cPadrao    := "586"
	Local lDigita    := If(MV_PAR01==1,.T.,.F.)
	Local nHdlPrv    := 0
	Local lPadrao    := VerPadrao(cPadrao)
	Local nTotal     := 0
	Local cArquivo   := ""
	Local nOpcA      := 0
	Local nPosicao   := 0
	Local oDlg
	Local lContinua  := .T.
	Local cA181Codigo:= SEH->EH_NUMERO+"/"+SEH->EH_REVISAO
	Local cNBanco    := SEH->EH_NBANCO
	Local cA181Bco   := SEH->EH_BANCO
	Local cA181Age   := SEH->EH_AGENCIA
	Local cA181Cta   := SEH->EH_CONTA
	Local dA181Cred  := dDataBase
	Local cA181Histor:= STR0039+" "+SEH->EH_TIPO //"Est.Resg.Aplicacao"
	Local nTamSeq	 := TamSX3("EI_SEQ")[1]
	Local csequencia := Replicate("0",nTamSeq)
	Local aA181Reg   := {}
	Local cListBox   := 0
	Local nCntFor    := 0
	Local aA181Estor := {}
	Local nCntFor1   := 0
	Local aMovEst    := {}
	Local nQtdCota		:= 0
	Local na181IrAcum	:= 0
	Local na181Sequenc	:= 0
	Local lAplCota := SEH->EH_TIPO $ GetMv("MV_APLCAL4")
	Local n181VlrQts, n181VlrQta
	Local lFa181Eap  := ExistBlock("FA181EAP")
	Local cLctPco 	:= ""
	Local lPcoConf 	:= .F.
	Local dUltPgIr		:= Ctod("//")
	Local lUltApr		:= .F. // Ultima apropriacao. (Unica restante)
	Local nUltResgate := 0
	Local nUltResgJur := 0
	Local nRecSEI
	Local oModelMov
	Local oSubFK5
	Local oSubFKA
	Local cLog := ""
	Local lRet := .T.
	Local cCamposE5 := ""
	Local cSeqAnt := ""
	Local nE5Recno := 0
	Local cDocumen := ""
	Local lMvTTS		:= SuperGetMv("MV_TTS",.F.,"S") == "N"
	Local lFa181Est	:= ( ExistBlock("FA181EST") )
	Local nRecSE2	:= NIL
	LOCAL cMoedaBco := '01'
	Local dDataRes	:= SEH->EH_DATARES
	Local dUltResg	:= CTOD("  /  /  ")
	Local cChaveSEH := SEH->EH_APLEMP+SEH->EH_NUMERO+SEH->EH_REVISAO
	Local nValCotRes := 0
	Local nValResAnt := 0

	Private cA181Nat   := ""
	Private cCodDiario := ""
	Private nA181VlAtu := 0.00
	Private nA181VlResg:= 0.00
	Private nA181RegPri:= 0.00
	Private nA181RegJur:= 0.00
	Private nA181VlIRF := 0.00
	Private nA181VlSwap:= 0.00
	Private nA181IRSwap:= 0.00
	Private nA181VlIOF := 0.00
	Private nA181VlTaxa:= 0.00
	Private nA181VlCrd := 0.00

	Default lAutomato := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ SE9 - Tabela de contrato bancario                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	If lAutomato
		cChaveSEH := SEH->EH_APLEMP+SEH->EH_NUMERO+SEH->EH_REVISAO+__cSeqEst
	Endif

	DbSelectArea("SE9")
	DbSetOrder(1)
	DbSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)

	dbSelectArea("SEI")
	dbSetOrder(1)
	dbSeek(xFilial("SEI")+cChaveSEH)

	If !lAutomato
		While ( !Eof() .And. xFilial("SEI")  == SEI->EI_FILIAL .And.;
				SEH->EH_APLEMP  == SEI->EI_APLEMP .And.;
				SEH->EH_NUMERO  == SEI->EI_NUMERO .And.;
				SEH->EH_REVISAO == SEI->EI_REVISAO )
			If ( SEI->EI_TIPODOC == "VL" .And. SEI->EI_MOTBX=="NOR" .And. ;
					SEI->EI_STATUS != "C" )
				aadd(aA181Estor,SEI->EI_NUMERO+"/"+SEI->EI_REVISAO+" "+;
					Dtoc(SEI->EI_DATA)+" "+;
					TransForm(SEI->EI_VALOR,Tm(SEI->EI_VALOR,18,;
					TamSX3("EI_VALOR")[2]))+" "+SEI->EI_SEQ )
				aadd(aA181Reg,SEI->(Recno()))
				na181Sequenc := SEI->EI_SEQ
				n181VlrQts := SEI->EI_VLRQTS
				n181VlrQta := SEI->EI_VLRQTA
				nQtdCota   := SEI->EI_QTDCOTA
			EndIf
			dbSelectArea("SEI")
			dbSkip()
		EndDo
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Escolhe Baixa a ser cancelada                                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( Len(aA181Estor) > 1 )
			cListBox := aA181Estor[1]
			nPosicao := 1
			DEFINE MSDIALOG oDlg FROM 5, 5 TO 14, 50 TITLE OemToAnsi( STR0040 ) //"Resgates Efetuados"
			@  .5, 2 LISTBOX cListBox ITEMS aA181Estor SIZE 150 , 40 Font oDlg:oFont
			DEFINE SBUTTON FROM 055,112    TYPE 1 ACTION (nPosicao := 1,oDlg:End()) ENABLE OF oDlg
			DEFINE SBUTTON FROM 055,139.1 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg

			ACTIVATE MSDIALOG oDlg CENTERED
			If nPosicao == 1
				nPosicao := Ascan(aA181Estor,cListBox)
			Endif
			If ( nPosicao == 0 )
				lContinua := .F.
			Endif
			If na181Sequenc <> Right(aa181Estor[nPosicao],nTamSeq)

				Help(" ",1,"A181Sequen")

				lContinua := .F.
			EndIf
		Else
			lUltApr	 := .T.
			nPosicao := 1
		EndIF
	Else
		aadd(aA181Reg, SEI->(Recno()))
		na181Sequenc := SEI->EI_SEQ
		n181VlrQts := SEI->EI_VLRQTS
		n181VlrQta := SEI->EI_VLRQTA
		nQtdCota   := SEI->EI_QTDCOTA
		nPosicao := 1
	Endif

	If !lAutomato .and. Empty(aA181Estor)
		Help(" ",1,"A181RESGAP")
		lContinua := .F.
	EndIf

	If ( !DtMovFin(,,IIF(SEH->EH_APLEMP=="APL","1","")) )
		lContinua := .F.
	EndIf

	If ( lContinua )
		dbSelectArea("SEI")
		dbGoTo(aA181Reg[nPosicao])
		dbSetOrder(1)
		dbSeek(xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ)
		cChave := xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ
		While ( SEI->EI_FILIAL+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ==;
				cChave .And. !Eof() )
			cA181Nat   := SEI->EI_NATUREZ
			If ( SEI->EI_MOTBX=="NOR" )
				cA181Bco   := SEI->EI_BANCO
				cA181Age   := SEI->EI_AGENCIA
				cA181Cta   := SEI->EI_CONTA
			EndIf
			cA181Histor:= "Est.Resg.Aplicacao"+" "+SEH->EH_TIPO

			If ( SEI->EI_TIPODOC == "RG" .And. SEI->EI_MOTBX=="NOR" )
				nA181VlAtu := nA181VlResg := SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "I1" .And. SEI->EI_MOTBX=="NOR" )
				nA181VlIRF := SEI->EI_VALOR
				na181IrAcum     := SEI->EI_SLDIRAC
			EndIf
			If ( SEI->EI_TIPODOC == "I2" .And. SEI->EI_MOTBX=="NOR" )
				nA181VlIOF := SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "SW" .And. SEI->EI_MOTBX=="NOR" )
				nA181VlSwap :=  SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "I3" .And. SEI->EI_MOTBX=="NOR" )
				nA181IRSwap := SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "I4" .And. SEI->EI_MOTBX=="NOR" )
				nA181VlTaxa := SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "VL" .And. SEI->EI_MOTBX=="NOR" )
				nA181VlCrd := SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "BP" .And. SEI->EI_MOTBX=="NOR" )
				nA181RegPri := SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "JR" .And. SEI->EI_MOTBX=="NOR" )
				nA181RegJur := SEI->EI_VALOR
			EndIf
			dbSelectArea("SEI")
			dbSkip()
		EndDo
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a geraçao de lancamentos do SIGAPCO      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoIniLan("000009")

	While lContinua
		SoftLock( "SEH" )
		lContinua := .F.
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Recebe dados a serem digitados                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !lAutomato
			If lPanelFin  //Chamado pelo Painel Financeiro
				DEFINE MSDIALOG oDlg FROM  81,15 TO 460,574 TITLE OemToAnsi(STR0010) PIXEL  //"Est.Resg.Aplicacao"
			Else
				DEFINE MSDIALOG oDlg FROM  81,15 TO 400,574 TITLE OemToAnsi(STR0039) PIXEL  //"Est.Resg.Aplicacao"
			Endif

			@ 001,004 TO 036,276 PROMPT OemToAnsi(STR0011) OF oDlg  PIXEL //"Dados da Operacao"
			@ 010,010 SAY OemToAnsi(STR0012)            SIZE 18,09  OF oDlg PIXEL //"Codigo"
			@ 010,033 MSGET cA181Codigo                 SIZE 33,09  OF oDlg PIXEL WHEN .F.
			@ 010,072 SAY OemToAnsi(STR0013) SIZE 45,09  OF oDlg PIXEL //"Inst.Financeira"
			@ 010,115 MSGET cNBanco                     SIZE 63,09  OF oDlg PIXEL WHEN .F.
			@ 010,183 SAY OemToAnsi(STR0014)            SIZE 21,09  OF oDlg PIXEL //"Emissao"
			@ 010,206 MSGET SEH->EH_DATA                SIZE 18,09  OF oDlg PIXEL WHEN .F.

			@ 023,010 SAY OemToAnsi(STR0015)    SIZE 39,09  OF oDlg PIXEL //"Vlr.Principal"
			@ 023,127 SAY OemToAnsi(STR0016) SIZE 42,09  OF oDlg PIXEL //"Vlr.Atualizado"
			@ 023,052 MSGET nA181RegPri      SIZE 66,09  OF oDlg PIXEL PICTURE TM(nA181RegPri,18) WHEN .F.
			@ 023,173 MSGET nA181VlAtu       SIZE 66,09  OF oDlg PIXEL PICTURE TM(nA181RegPri,18) WHEN .F.


			@ 038,004 TO 160,132 PROMPT OemToAnsi(STR0017) OF oDlg  PIXEL //"Dados do Resgate"
			@ 047,010 SAY OemToAnsi(STR0018)            SIZE 18,08  OF oDlg PIXEL //"Banco"
			@ 047,031 MSGET cA181Bco                    SIZE 18,08  OF oDlg PIXEL WHEN .F.
			@ 047,059 SAY OemToAnsi(STR0019)            SIZE 24,08  OF oDlg PIXEL //"Agencia"
			@ 047,082 MSGET cA181Age                    SIZE 46,08  OF oDlg PIXEL WHEN .F.
			@ 058,010 SAY OemToAnsi(STR0020)            SIZE 18,08  OF oDlg PIXEL //"Conta"
			@ 058,031 MSGET cA181Cta                    SIZE 33,08  OF oDlg PIXEL WHEN .F.
			@ 058,067 SAY OemToAnsi(STR0021)            SIZE 36,08  OF oDlg PIXEL //"Crd."
			@ 058,082 MSGET dA181Cred                   SIZE 46,08  OF oDlg PIXEL WHEN .F.
			@ 069,010 SAY OemToAnsi(STR0022)            SIZE 36,08  OF oDlg PIXEL //"Natureza"
			@ 069,060 MSGET cA181Nat                    SIZE 68,08  OF oDlg Hasbutton PIXEL VALID FinVldNat(.F.,cA181Nat) F3 "SED"
			@ 080,010 SAY OemToAnsi(STR0023)            SIZE 21,08  OF oDlg PIXEL //"Histor."
			@ 080,037 MSGET cA181Histor                 SIZE 91,08 OF oDlg PIXEL  WHEN .F.
			@ 091,010 SAY OemToAnsi(STR0024) SIZE 46,08  OF oDlg PIXEL //"(+)Vlr.Resgate"
			@ 091,060 MSGET nA181VlResg                 SIZE 68,08  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALREG",18)	 WHEN .F.
			@ 102,010 SAY OemToAnsi(STR0025)            SIZE 46,08  OF oDlg PIXEL //"(-)Vlr. I.R."
			@ 102,060 MSGET nA181VlIRF                  SIZE 68,08  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALIRF",18)	 WHEN .F.
			@ 113,010 SAY OemToAnsi(STR0026)            SIZE 46,08  OF oDlg PIXEL //"(+)Dif. SWAP"
			@ 113,060 MSGET nA181VlSwap                 SIZE 68,08  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALSWAP",18) WHEN .F.
			@ 123,010 SAY OemToAnsi(STR0027)            SIZE 46,08  OF oDlg PIXEL //"(-)I.R. SWAP"
			@ 123,060 MSGET nA181IRSwap                 SIZE 68,08  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALISWP",18) WHEN .F.
			@ 135,010 SAY OemToAnsi(STR0028)            SIZE 46,08  OF oDlg PIXEL //"(-)Vlr. IOF"
			@ 135,060 MSGET nA181VlIof                  SIZE 68,08  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALIOF",18)  WHEN .F.
			@ 146,010 SAY OemToAnsi(STR0029)            SIZE 46,08  OF oDlg PIXEL //"(-)Outras Taxas"
			@ 146,060 MSGET nA181VlTaxa                 SIZE 68,08  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALJUR",18)  WHEN .F.

			@ 047,138 SAY OemToAnsi(STR0036)			     SIZE 51,08 OF oDlg PIXEL  //"(=)Vlr.do Credito"
			@ 047,204 MSGET nA181VlCrd					     SIZE 68,08 OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALCRED",18) WHEN .F.

			If lPanelFin  //Chamado pelo Painel Financeiro
				ACTIVATE MSDIALOG oDlg CENTERED ON INIT FaMyBar(oDlg,;
					{||nOpca:=2,IF(Fa181Ok(cA181Bco,cA181Age,cA181Cta),oDlg:End(),nOpca:=3)},;
					{||oDlg:End()})
			Else
				DEFINE SBUTTON FROM 009,245 TYPE 1 ENABLE ACTION (nOpca:=2,IF(Fa181Ok(cA181Bco,cA181Age,cA181Cta),oDlg:End(),nOpca:=3)) OF oDlg
				DEFINE SBUTTON FROM 023,245 TYPE 2 ENABLE ACTION oDlg:End() OF oDlg
				ACTIVATE MSDIALOG oDlg CENTERED
			Endif
		Else
			If FindFunction("GetParAuto")
				aRetAuto    := GetParAuto("FINA181TestCase")
				If ValType(aRetAuto) != "U" .AND. !Empty(aRetAuto)
					//"Natureza"
					If	(nPos := aScan(aRetAuto,{|x| x[1] == "cA181Nat"})) > 0
						cA181Nat := aRetAuto[nPos][2]
					EndIf
				EndIf
			EndIf
			nOpca		:= 2
		EndIf

		SED->(DbSeek(xFilial("SED")+cA181Nat))

		nRecSE2 := SE2->(RECNO())
		SE2->(DBGOBOTTOM())
		SE2->(DBSKIP())

		Do Case
		Case nOpcA == 1
			dbSelectArea(cAlias)
			MsUnlock()
			lContinua := .F.
		Case nOpcA == 2
			lPcoConf := .T.
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Ponto de entrada para gravacao de dados complementares            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lFa181Est
				ExecBlock("FA181EST",.F.,.F.)
			EndIf
			dbSelectArea('SA6')
			dbSetOrder(1)
			If dbSeek(xFilial()+SEH->EH_BANCO+SEH->EH_AGENCIA+SEH->EH_CONTA)
				nMoedaBco := Max(SA6->A6_MOEDA,1)
			EndIf
			dbSelectArea("SEI")
			dbSetOrder(1)
			dbSeek(xFilial("SEI")+SEH->EH_APLEMP+SEH->EH_NUMERO+SEH->EH_REVISAO)
			While ( !Eof() .And. SEI->EI_FILIAL == xFilial("SEI") .And.;
					SEI->EI_APLEMP == SEH->EH_APLEMP .And.;
					SEI->EI_REVISAO == SEH->EH_REVISAO .And. ;
					SEI->EI_NUMERO == SEH->EH_NUMERO)
				cSequencia := If(cSequencia>SEI->EI_SEQ,cSequencia,SEI->EI_SEQ)
				// Encontra a data de ultimo pagto. do IR para gravar essa data no cadastro da aplicacao
				If SEI->EI_MOTBX	== "APR" .And. SEI->EI_TIPODOC == "I7" // Valor do rendimento na Retencao do IR
					dUltPgIr := SEI->EI_DATA
				Endif
				dbSelectArea("SEI")
				dbSkip()
			EndDo
			cSeqAnt := cSequencia
			cSequencia := Soma1(cSequencia,nTamSeq)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Inicio do bloco protegido via TTS                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Begin Transaction
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza os dados da aplicacao                     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				RecLock("SEH",.F.)
				// Restaura a data de ultimo pagto do IR para que no proximo resgate o sistema recalcule o valor do
				// rendimento corretamente.
				SEH->EH_ULTPGIR	:= dUltPgIr

				// Limpa a data da ultima apropria??o para estorno final
				// If lUltApr
				// 	SEH->EH_ULTAPR	:= Ctod("//")
				// Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualizacao da qtde de quotas                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lAplCota
					SEH->EH_SLDCOTA += nQtdCota					
					SEH->EH_SALDO 	:= SEH->EH_SALDO / SE9->E9_VLRCOTA * n181VlrQta
					nValCotRes 		:= nA181VlResg / SE9->E9_VLRCOTA // Valor em cotas referente ao resgate
					nValResAnt		:= nValCotRes * n181VlrQta // Valor Total das cotas considerando o valor anterior da cota, para cálculo do juros recebido
					SEH->EH_SALDO   += nA181VlResg - (nA181VlResg - nValResAnt) //soma ao saldo o valor do resgate menos os juros recebidos

					dUltResg		:= F181ResFAF(nA181Sequenc)
					SEH->EH_DATARES	:= dUltResg
				Else
					SEH->EH_SALDO   += nA181RegPri
				EndIf
				SEH->EH_STATUS := If(SEH->EH_SALDO<0.01,"B","A")
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Indica que a movimentacao foi cancelada            ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SEI")
				dbGoTo(aA181Reg[nPosicao])
				dbSetOrder(1)
				dbSeek(xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ)
				cChave := xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ
				While ( SEI->EI_FILIAL+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ==;
						cChave .And. !Eof() )
					RecLock("SEI",.F.)
					aadd(aMovEst,Array(SEI->(FCount())))
					For nCntFor := 1 To SEI->(FCount())                 `
						aMovEst[Len(aMovEst),nCntFor] := SEI->(FieldGet(nCntFor))
					Next nCntFor

					if SEI->EI_TIPODOC $ ('RG,JR')
						do case
						case SEI->EI_TIPODOC == 'RG'
							nUltResgate := SEI->EI_VALOR //Corresponde ao valor do resgate.
							cMoedaBco := Posicione('SA6',1,xFilial('SA6')+cA181Bco+cA181Age+cA181Cta,'A6_MOEDA')
							AtuSldNat(cA181Nat, SEI->EI_DATA, cMoedaBco, "3", "R", SEI->EI_VALOR, 0, "-",,FunName(),"SEI", SEI->(Recno()),0)
						case	SEI->EI_TIPODOC == 'JR'
							nUltResgJur := SEI->EI_VALOR //Corresponde ao valor do juros s/resgate.
						endcase
					endif

					SEI->EI_STATUS := "C"
					dbSelectArea("SEI")
					dbSkip()
				EndDo
				For nCntFor := 1 To Len(aMovEst)
					RecLock("SEI",.T.)
					For nCntFor1 := 1 To Len(aMovEst[nCntFor])
						SEI->(FieldPut(nCntFor1,aMovEst[nCntFor,nCntFor1]))
					Next nCntFor1
					SEI->EI_VALOR  *= (-1)
					SEI->EI_STATUS := "C"
					SEI->EI_LA     := If( lPadrao .And. MV_PAR02 == 1,"S","")
					SEI->EI_SEQ    := cSequencia
					SEI->EI_DTDIGIT:= dDatabase
					SEI->EI_HISTOR := cA181Histor

					cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .T. /*lCancela*/)
					If !Empty(cLctPco)
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera os lancamentos do SIGAPCO                      ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						PcoDetLan("000009", cLctPco, "FINA181")
					EndIf

				Next nCntFor

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Efetua a Movimentacao Bancaria de Estorno          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

				//Pega o registro da SE5 correspondente ao movimento da aplicação ou empreéstimo posicionado
				cDocumen := SEH->EH_NUMERO+SEH->EH_REVISAO+cSeqAnt
				nE5Recno := FN181SE5 ( "RF", cDocumen )
				If nE5Recno > 0
					SE5->( dbGoto( nE5Recno ) )
				Else
					lRet := .F.
				Endif

			/* 
			--- Formas de gravacao da movimentacao bancaria no estorno de resgate de aplicacoes (a passar por revisao) ---
			FK5_MOEDA: Moeda do cadastro do banco (A6_MOEDA)
			FK5_VALOR: Valor calculado/digitado e exibido em tela;
			FK5_VLMOE2: Nao é gravado;
			FK5_TXMOED: Nao é gravado;	
			*/

				If lRet
					//Define os campos que não existem nas FKs e que serão gravados apenas na E5, para que a gravação da E5 continue igual
					cCamposE5	:= Fa171CpSE5(lMovEnt05, lMovEnt06, lMovEnt07, lMovEnt08,lMovEnt09)

					oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento
					oModelMov:SetOperation( MODEL_OPERATION_INSERT ) //Inclusao
					oModelMov:Activate()
					oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Informa se vai gravar SE5 ou não
					oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5
					oModelMov:SetValue( "MASTER", "NOVOPROC", .F. ) //Informa que a inclusão não será feita com um novo número de processo

					//Dados do Processo
					oSubFKA := oModelMov:GetModel("FKADETAIL")
					oSubFKA:SetValue( "FKA_IDORIG", FWUUIDV4() )
					oSubFKA:SetValue( "FKA_TABORI", "FK5" )

					//Informacoes do movimento
					oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
					oSubFK5:SetValue( "FK5_DATA", dA181Cred )
					oSubFK5:SetValue( "FK5_BANCO", cA181Bco )
					oSubFK5:SetValue( "FK5_AGENCI", cA181Age )
					oSubFK5:SetValue( "FK5_CONTA", cA181Cta )
					oSubFK5:SetValue( "FK5_VALOR", nA181VlCrd )
					oSubFK5:SetValue( "FK5_RECPAG", "P" )
					oSubFK5:SetValue( "FK5_TPDOC", "RF" )
					oSubFK5:SetValue( "FK5_LA", Iif(mv_par02==1,"S"," ") )
					oSubFK5:SetValue( "FK5_NATURE", cA181Nat )
					oSubFK5:SetValue( "FK5_HISTOR", cA181Histor )
					oSubFK5:SetValue( "FK5_DTDISP", dA181Cred )
					oSubFK5:SetValue( "FK5_DOC", SEH->EH_NUMERO+SEH->EH_REVISAO+cSequencia  )
					oSubFK5:SetValue( "FK5_MOEDA", PADL(nMoedaBco,TamSX3("CTO_MOEDA")[1],"0") )
					oSubFK5:SetValue( "FK5_FILORI", SEH->EH_FILIAL )
					oSubFK5:SetValue( "FK5_ORIGEM", FunName() )
					oSubFK5:SetValue( "FK5_CCUSTO", SEH->EH_CCUSTO )

					//Gravação da tabela FK8 - Dados Contábeis
					Fa171GrFK8(oModelMov,lMovEnt05, lMovEnt06, lMovEnt07, lMovEnt08,lMovEnt09)

					If oModelMov:VldData()
						oModelMov:CommitData()
					Else
						lRet := .F.
						cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
						cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
						cLog += cValToChar(oModelMov:GetErrorMessage()[6])

						Help( ,,"MF181ESTA",,cLog, 1, 0 )
					Endif

					oModelMov:DeActivate()
					oModelMov:Destroy()
					oModelMov := NIL

					If lRet
						AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, SE5->E5_DATA, SE5->E5_VALOR,;
							IIf(SE5->E5_RECPAG=="R","+","-") )

						If lFa181Eap
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Ponto de entrada para resgate de aplica‡Æo ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							ExecBlock("FA181EAP", .F., .F. )
						Endif

						//Eh necessario atualizar ANTES do processo de Contabilizacao.
						SEH->EH_VALREG  := nUltResgate //Obtido do SEI. Corresponde ao valor do ultimo resgate.
						SEH->EH_VALJUR  := nUltResgJur //Obtido do SEI. Corresponde ao valor do juros s/ultimo resgate.

						If UsaSeqCor()
							FA181Diario()
							aDiario := {{"SE5",SE5->(Recno()), cCodDiario, "E5_NODIA","E5_DIACTB"}}
						Else
							aDiario := {}
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Lancamento Contabil                            ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( lPadrao .And. MV_PAR02 == 1 )
							nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
							nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
							RodaProva(nHdlPrv,nTotal)
							cA100Incl(cArquivo,nHdlPrv,3,cLote,lDigita,.F.,,,,,,aDiario)
						EndIf

						If lAplCota
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Atualizacao da qtde de quotas no resgate			    ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							DbSelectArea("SE9")
							DbSetOrder(1)
							DbSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
							RecLock("SE9",.F.)

							SE9->E9_COTAANT := n181VlrQts
							SE9->E9_VLRCOTA := n181VlrQta

							SE0->(dbSetOrder(1))
							If SE0->(MsSeek(xFilial("SE0")+SE9->(E9_BANCO+E9_AGENCIA+E9_CONTA+E9_NUMERO)+Str(21001231-Val(DTOS(dDataBase)),11)+Space(3))) .And. ;
									SE0->E0_ORIGEM =="R"
								If DTOS(SEH->EH_DATARES) <> DTOS(dDataRes)
									Reclock("SE0",.f.)
									SE0->(dbDelete())
									SE0->(MsUnlock())
								Else
									Reclock("SE0",.f.)
									SE0->E0_VALOR := n181VlrQta
									SE0->(MsUnlock())
								EndIf
							EndIf


						Endif

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ No estorno deve subtrair os valores de resgate e taxas do valor jah gravado, ³
						//³ depois dos lancamentos de integracao com PCO e CTB executados acima.         ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If nPosicao > 1
							nPosicao --
							nRecSEI := SEI->( Recno() )
							dbSelectArea("SEI")
							dbGoTo(aA181Reg[nPosicao])
							dbSetOrder(1)
							dbSeek(xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ)
							cChave := xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ
							While ( SEI->EI_FILIAL+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ==;
									cChave .And. !Eof() )
								cA181Nat   := SEI->EI_NATUREZ
								If ( SEI->EI_MOTBX=="NOR" )
									cA181Bco   := SEI->EI_BANCO
									cA181Age   := SEI->EI_AGENCIA
									cA181Cta   := SEI->EI_CONTA
								EndIf
								cA181Histor:= "Est.Resg.Aplicacao"+" "+SEH->EH_TIPO

								If ( SEI->EI_TIPODOC == "RG" .And. SEI->EI_MOTBX=="NOR" )
									nA181VlResg := SEI->EI_VALOR
								EndIf
								If ( SEI->EI_TIPODOC == "I1" .And. SEI->EI_MOTBX=="NOR" )
									nA181VlIRF := SEI->EI_VALOR
									na181IrAcum     := SEI->EI_SLDIRAC
								EndIf
								If ( SEI->EI_TIPODOC == "I2" .And. SEI->EI_MOTBX=="NOR" )
									nA181VlIOF := SEI->EI_VALOR
								EndIf
								If ( SEI->EI_TIPODOC == "SW" .And. SEI->EI_MOTBX=="NOR" )
									nA181VlSwap :=  SEI->EI_VALOR
								EndIf
								If ( SEI->EI_TIPODOC == "I3" .And. SEI->EI_MOTBX=="NOR" )
									nA181IRSwap := SEI->EI_VALOR
								EndIf
								If ( SEI->EI_TIPODOC == "I4" .And. SEI->EI_MOTBX=="NOR" )
									nA181VlTaxa := SEI->EI_VALOR
								EndIf
								If ( SEI->EI_TIPODOC == "VL" .And. SEI->EI_MOTBX=="NOR" )
									nA181VlCrd := SEI->EI_VALOR
								EndIf
								If ( SEI->EI_TIPODOC == "BP" .And. SEI->EI_MOTBX=="NOR" )
									nA181RegPri := SEI->EI_VALOR
								EndIf
								If ( SEI->EI_TIPODOC == "JR" .And. SEI->EI_MOTBX=="NOR" )
									nA181RegJur := SEI->EI_VALOR
								EndIf
								dbSelectArea("SEI")
								dbSkip()
							EndDo

							If lMvTTS
								RecLock("SEH", .F.)
							EndIf

							SEH->EH_VALREG  := nA181VlResg
							SEH->EH_VALJUR  := nA181RegJur
							SEH->EH_VALIOF  := nA181VlIOF
							SEH->EH_VALIRF  := nA181VlIrf
							SEH->EH_VALSWAP := nA181VlSwap
							SEH->EH_VALISWP := nA181IrSwap
							SEH->EH_VALOUTR := nA181VlTaxa
							SEH->EH_VALCRED := nA181VlCrd

							nPosicao ++
							SEI->(DbGoTo(nRecSEI))

						Else

							If lMvTTS
								RecLock("SEH", .F.)
							EndIf

							SEH->EH_VALREG  -= nA181VlResg
							SEH->EH_VALJUR  -= nA181RegJur
							SEH->EH_VALIOF  -= nA181VlIOF
							SEH->EH_VALIRF  -= nA181VlIrf
							SEH->EH_VALSWAP -= nA181VlSwap
							SEH->EH_VALISWP -= nA181IrSwap
							SEH->EH_VALOUTR -= nA181VlTaxa
							SEH->EH_VALCRED -= nA181VlCrd

						EndIf

					Endif

				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Final  do bloco protegido via TTS                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			End Transaction
			lContinua := .F.
		OtherWise
			lContinua := .F.
		EndCase
		SE2->(DBGOTO(nRecSE2))
	EndDo
	dbSelectArea("SEH")
	MsUnLock()

	If lPcoConf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gera os lancamentos do SIGAPCO  (referente SEH)     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		PcoDetLan("000009","01","FINA181")
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza a geraçao de lancamentos do SIGAPCO        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoFinLan("000009")

Return(.T.)

/*/
	ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡„o    ³Fa181Perg ³ Autor ³ Eduardo Riera         ³ Data ³ 29/03/98 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡„o ³Ativa fun‡„o pergunte                                       ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe   ³Fa181Perg()                                                 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³                                                            ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso      ³FINA181                                                     ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa181Perg()

	Pergunte("AFI181",.T.)

Return( .T. )

/*/
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡…o    ³FA181Ok   ³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 07/11/95 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡…o ³ Exibe mensagem de OK para dados digitados de resgate       ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe   ³ FA181OK()                                                  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso      ³ FINA181                                                    ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa181Ok(cA181Bco,cA181Age,cA181Cta)
	Local lRet := .F.
	Local lF181Valid := ExistBlock("F181VALID")

	If Type("nA181VlCrd") != "U" .And. Round(nA181VlCrd,2) > Round(nA181VlAtu-nA181VlIrf-nA181IrSwap-nA181VlIof-nA181VlTaxa+nA181VlSwap,2)
		Help(" ",1,"A181VLCRD")
		nA181VlCrd := 0
	Else
		lRet := Fa181Bco(cA181Bco,cA181Age,cA181Cta)

		If lRet .And. lF181Valid
			lRet:=ExecBlock("F181VALID",.F.,.F.,{lRet})
		EndIf

		If SEH->EH_APLEMP=="EMP" .And. FwIsInCallStack("a181Resg") .And. nA181VPLP1 <= 0 .And. na181vldeb <= 0
			Help( ,,"FA181RESGA",, STR0105 , 1, 0 ) //"Valor de resgate é igual ou menor que zero, movimentação não permitida."
			lRet := .F.
		ElseIf SEH->EH_APLEMP=="APL"  .And. FwIsInCallStack("a181Resg") .And. nA181VlResg <= 0
			Help( ,,"FA181RESGA",, STR0105 , 1, 0 ) //"Valor de resgate é igual ou menor que zero, movimentação não permitida."
			lRet := .F.
		Endif

		If lRet
			lRet := (MsgYesNo(STR0037,STR0038))  //"Confirma Resgate?"###"Aten‡„o"
		Endif
	Endif

Return lRet

/*/
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡…o    ³FA181Bco  ³ Autor ³ Eduardo Riera         ³ Data ³ 30/03/98 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡…o ³ Validacao do Banco                                         ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe   ³ FA181Bco(cBanco,cAgencia,cConta)                           ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso      ³ FINA181                                                    ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa181Bco(cBanco,cAgencia,cConta)
	Local lRetorno := .T.
	Local cBusca   := ""
	Local aAreaSA6   := SA6->(GetArea())

	If ( !Empty(cBanco) )
		cBusca += cBanco
	EndIf

	If ( !Empty(cAgencia) )
		cBusca += cAgencia
	EndIf

	If ( !Empty(cConta) )
		cBusca += cConta
	ElseIf FwIsInCallStack("FA181OK")
		cBusca += cConta
	EndIf

	SA6->(dbSetOrder(1))

	If !Empty(cAgencia) .And. !Empty(cConta)
		lRetorno := ExistCpo("SA6",cBusca,1)
	Else
		If !( lRetorno := SA6->(MsSeek(xFilial("SA6")+cBusca)) )
			Help(" ",1,"FA100BCO")
		EndIf
	Endif

	If lRetorno .And. !Empty(cAgencia) .And. !Empty(cConta)

		SA6->(MsSeek(xFilial("SA6")+cBusca))
		If SA6->A6_BLOCKED == "1"  //Conta Bloqueada
			Help( " ", 1, "CCBLOCKED" )
			lRetorno := .F.
		ElseIf SA6->(FieldPos("A6_MSBLQL")) > 0 .And. SA6->A6_MSBLQL == "1" // campo de bloqueio ativado e banco bloqueado
			Help(" ",1,"REGBLOQ",,,1,0)
			lRetorno := .F.
		Endif

	Endif

	SA6->(RestArea(aAreaSA6))

Return(lRetorno)

/*/
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡…o    ³FA181Valor³ Autor ³ Eduardo Riera         ³ Data ³ 31/03/98 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡…o ³ Validacao da Digitacao dos valores referentes a baixa      ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe   ³ FA181Valor( )                                              ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso      ³ FINA181                                                    ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa181Valor(oDlg,cCampo,lAutomato,oGet)

	Local aCalc		:= {}
	Local nProp		:= 0
	Local nValor	:= 0
	Local lRet		:= .T.
	Local nDias		:= (dDataBase - SEH->EH_DATA)
	Local cTabIrf	:= "AR"
	Local aTabIrf	:= {{ 180, 22.5 },;
		{ 360, 20.0 },;
		{ 720, 17.5 },;
		{ 1000000, 15.0 } }
	Local nAscan	:= Ascan( aTabIrf, { |e| e[1] >= nDias } ) // Pesquisa a aliquota conforme o tempo da aplicacao
// A taxa de IR sera: Se o campo estiver vazio, utiliza a tabela AR se ela existir ou a tabela acima caso contrario.
// Se o campo de TAXA de IR estiver preenchido no cadastro, utiliza esta taxa.
	Local nTaxaIrf	:= If(Empty(SEH->EH_TAXAIRF), If(SX5->(MsSeek(xFilial("SX5")+"AR")),;
		Val(TabelaIrf(cTabIrf,nDias)),aTabIrf[nAscan][2]),SEH->EH_TAXAIRF)
	Local lL11033	:= SuperGetMv("MV_L11033",,.F.)
	Local lNewCalc	:= TableInDic( 'FO3' )

	DEFAULT cCampo := Upper(AllTrim(ReadVar()))

	If oGet <> Nil .And. !oGet:lModified
		Return(lRet)
	EndIf

	If lNewCalc
		If AllTrim(SEH->EH_TIPO) != "CP"
			lNewCalc := .F.
		EndIf
	EndIf

	If ( SEH->EH_APLEMP == "APL" )
		Do Case
		Case ( cCampo $ "NA181VLRESG#NA181VLCOTA" ) .And. !lNewCalc
			If !(SEH->EH_TIPO $ GetMv("MV_APLCAL4"))
				nProp := NoRound(SEH->EH_SALDO*nA181VlResg/nA181VlAtu,TamSX3("EH_SALDO")[2])
				aCalc := Fa171Calc(dDataBase,nProp,.T.)
				nA181VlIRF := aCalc[2]
				nA181VlIOF := aCalc[3]
				nA181VlTaxa:= aCalc[4]
				nA181RegJur:= aCalc[5]
				nA181IRRdBruto	:= aCalc[8]
			Else
				// Caso seja alterado o valor das cotas, recalcula os valores
				// do resgate, rendimento, etc.
				If cCampo $ "NA181VLCOTA"
					aCalc := Fa171Calc(dDataBase,SEH->EH_SLDCOTA,,,,SEH->EH_VLRCOTA,na181VlCota,(SEH->EH_SLDCOTA * na181VlCota))
					nA181VlAtu := aCalc[1]
					nA181VlResg:= nA181VlAtu
					nA181VlIRF := aCalc[2]
					nA181VlSwap:= 0.00
					nA181IRSwap:= 0.00
					nA181VlIOF := aCalc[3]
					nA181VlTaxa:= aCalc[4]
					nA181RegPri:= SEH->EH_SALDO
					nA181RegJur:= nA181VlAtu-SEH->EH_SALDO
					nA181SldPri:= 0.00
					nA181SldJur:= 0.00
					nA181VlCrd	:= nA181VlResg-nA181VlIrf-nA181IrSwap-nA181VlIof-nA181VlTaxa+nA181VlSwap
				Endif
				nProp := SEH->EH_SALDO*nA181VlResg/nA181VlAtu
				aCalc := Fa171Calc(dDataBase,nProp,,,, SEH->EH_VLRCOTA, na181VlCota,na181VlResg)
				nA181IRRdBruto	:= aCalc[2]
				nA181VlIRF		:= aCalc[2]
				nA181VlIOF		:= aCalc[3]
				nA181VlTaxa		:= aCalc[4]
				nA181RegJur		:= aCalc[5]
				nA181RdBruto	:= aCalc[7]
				nA181VlLiquido	:= aCalc[9]
				na181BaseCalc	:= aCalc[11]
				nA181RegPri		:= nA181VlResg-nA181RegJur+nA181VlSwap
				n181CtRg       := na181VlResg / nA181VlCota
				n181SldQs      := SEH->EH_SLDCOTA - n181CtRg
			EndIf

		Case ( cCampo $ "NA181VLCRD" ) .And. !lNewCalc
			If !(SEH->EH_TIPO $ GetMv("MV_APLCAL4"))
				If Round(nA181CrdAnt,2) != Round(nA181VlCrd,2)
					nA181VlResg := NoRound(nA181VlCrd*(nA181VlResg+nA181VlSwap)/nA181CrdAnt,TamSX3("EH_SALDO")[2])
					nProp := NoRound(SEH->EH_SALDO*nA181VlResg/nA181VlAtu,TamSX3("EH_SALDO")[2])
					aCalc := Fa171Calc(dDataBase,nProp,.T.)
					nA181VlIRF := aCalc[2]
					nA181VlIOF := aCalc[3]
					nA181VlTaxa:= aCalc[4]
					nA181RegJur:= aCalc[5]
				EndIf
			Else
				// Encontra o valor do resgate para o valor do crédito atual
				// Resgate parcial, recalcula o valor do IR
				If Str(nA181VlCrd+na181VlIof+nA181VlIrf+nA181VlTaxa,19,2) != Str(SEH->EH_SLDCOTA * na181VlCota,19,2)
					aCalc := Fa171Calc(dDataBase,SEH->EH_SLDCOTA,,,,SEH->EH_VLRCOTA,na181VlCota,na181VlCrd)
					aCalc := Fa171Calc(dDataBase,SEH->EH_SLDCOTA,,,,SEH->EH_VLRCOTA,na181VlCota,nA181VlCrd+aCalc[2]+aCalc[3])

					nA181VlIRF		:= aCalc[2]
					nA181VlIOF		:= aCalc[3]
					nA181VlTaxa		:= aCalc[4]
					nA181RegJur		:= aCalc[5]
					nA181RdBruto	:= aCalc[7]
					nA181IRRdBruto	:= aCalc[2]
					nA181VlLiquido	:= aCalc[9]
					na181BaseCalc	:= aCalc[11]
					na181VlResg		:= nA181VlCrd+na181VlIrf+na181VlIof + nA181VlTaxa
				Else // Resgate total
					aCalc := Fa171Calc(dDataBase,SEH->EH_SLDCOTA,,,,SEH->EH_VLRCOTA,na181VlCota,(SEH->EH_SLDCOTA * na181VlCota))
					nA181VlAtu := aCalc[1]
					nA181VlResg:= nA181VlAtu
					nProp := NoRound((nA181VlResg-SEH->EH_SALDO)*nA181VlResg/nA181VlAtu,TamSX3("EH_SALDO")[2])
					aCalc := Fa171Calc(dDataBase,nProp,,,, SEH->EH_VLRCOTA, na181VlCota,na181VlResg)
					nA181VlIRF		:= aCalc[2]
					nA181VlIOF		:= aCalc[3]
					nA181VlTaxa		:= aCalc[4]
					nA181RegJur		:= aCalc[5]
					nA181RdBruto	:= aCalc[7]
					nA181IRRdBruto	:= aCalc[2]
					nA181VlLiquido	:= aCalc[9]
					na181BaseCalc	:= aCalc[11]
					nA181RegPri		:= nA181VlResg-nA181RegJur+nA181VlSwap
					nA181VlCrd	   := nA181VlResg-nA181VlIrf-nA181IrSwap-nA181VlIof-nA181VlTaxa+nA181VlSwap
				Endif
				n181CtRg       := (Na181VlIof+nA181VlIRF+nA181VlCrd + nA181VlTaxa) / nA181VlCota
				n181SldQs      := SEH->EH_SLDCOTA - n181CtRg
			EndIf

			If Round(nA181VlCrd,2) > Round(nA181VlAtu-nA181VlIrf-nA181IrSwap-nA181VlIof-nA181VlTaxa+nA181VlSwap,2)
				Help(" ",1,"A181VLCRD")
				nA181VlCrd := 0
				lRet := .F.
			Endif
		Case ( cCampo $ "NA181VLSWAP" ) .And. nA181VlSwap > 0 .And. !lNewCalc
			nProp := NoRound(SEH->EH_SALDO*(nA181VlResg+nA181VlSwap)/nA181VlAtu,TamSX3("EH_SALDO")[2])
			If !(SEH->EH_TIPO $ GetMv("MV_APLCAL4"))
				aCalc := Fa171Calc(dDataBase,SEH->EH_SALDO,.T.)
				nA181VlIOF		:= aCalc[3]
				nA181VlTaxa		:= aCalc[4]
				nA181RegJur		:= aCalc[5]
				nA181RegPri		:= nA181VlResg-nA181RegJur+nA181VlSwap
			EndIf
		Case (cCampo $ "NA181VLIOF") .And. IF(lAutomato,.T.,oGet05:lModified) .And. !lNewCalc
			If (SEH->EH_TIPO $ GetMv("MV_APLCAL4"))
				// Se alterar o Valor fo IOF, calcula o novo IR e o novo valor de
				// resgate.
				nA181VlIRF	   := (nTaxaIrf/100) * (nA181RdBruto-nA181VlIof)
				nA181IRRdBruto := nA181VlIRF
				nA181VlResg  	:= na181VlCrd+na181VlIof+na181VlIrf
				n181CtRg       := na181VlResg / nA181VlCota
				n181SldQs      := SEH->EH_SLDCOTA - n181CtRg
			Endif
		EndCase

		If ( cCampo $ "NA181VLSWAP" ) .And. !lNewCalc
			nA181IRSwap := Iif(nA181VlSwap>0,nA181VlSwap*SEH->EH_TXIRSWP/100,0)
		EndIf

		If ( nA181RegPri > SEH->EH_SALDO .Or. Abs(nA181VlAtu-nA181VlResg) < MV_PAR03 ) .And. !lNewCalc
			nA181RegPri	:= SEH->EH_SALDO
			nA181RegJur := nA181VlResg-nA181RegPri+nA181VlSwap
			nA181VlAtu  := nA181RegPri+nA181RegJur
		EndIf

		If !(SEH->EH_TIPO $ GetMv("MV_APLCAL4")) .And. !lNewCalc
			nA181RegPri := nA181VlResg-nA181RegJur+nA181VlSwap
			nA181SldJur	:= nA181VlAtu - SEH->EH_SALDO - nA181RegJur
			nA181SldPri	:= nA181VlAtu - nA181RegJur - nA181RegPri - nA181SldJur
			nA181Saldo	:= nA181SldPri+nA181SldJur
			nA181VlCrd	:= Round(nA181VlResg-nA181VlIrf-nA181IrSwap-nA181VlIof-nA181VlTaxa+nA181VlSwap,2)
			nA181CrdAnt	:= nA181VlCrd
		ElseIf !lNewCalc
			na181SldPri	:= Iif((SEH->EH_SALDO - na181BaseCalc) >= 0,(SEH->EH_SALDO - na181BaseCalc),0)

			If cCampo $ "NA181VLCRD"
				If lAutomato .OR. !oGet12:lModified
					na181SldJur		:= (na181VlAtu - na181VlResg ) - na181SldPri
					na181SldJur		:= Iif(na181SldJur>=0,na181SldJur,0)
					nA181Saldo		:= na181VlAtu - na181VlResg
					nA181Saldo		:= Iif(na181Saldo>=0,na181Saldo,0)
					na181BaseCota	:= (na181VlCrd + na181VlIrf +na181VlIof) / na181VlCota
					nA181VlCrd		:= nA181VlResg - nA181VlIrf - nA181IrSwap - nA181VlIof - nA181VlTaxa + nA181VlSwap
				Endif
			Else
				na181SldJur		:= (na181VlAtu - na181VlResg - na181VlIrf) - na181SldPri
				na181SldJur		:= Iif(na181SldJur>=0,na181SldJur,0)
				nA181Saldo		:= na181VlAtu - na181VlResg - na181VlIrf
				nA181Saldo		:= Iif(na181Saldo>=0,na181Saldo,0)
				n181SldQs      := If(na181Saldo>=0,n181SldQs,0) // Zera o saldo em cotas, caso o saldo em R$ seja 0
				na181BaseCota	:= (na181VlResg + na181VlIrf + na181VlIof) / nA181VlCota
			EndIf
			nA181CrdAnt := nA181VlCrd
		EndIf

		If lNewCalc
			//Se valor do resgate é diferente do valor do crédito, houve alteração
			If nA181VlResg != na181VlCrd

				If cCampo $ 'NA181VLCRD'
					nA181VlResg := nA181VlCrd
				Else
					nA181VlCrd := nA181VlResg
				EndIf

				If nA181VlResg >= nA181RegJur
					nA181SldPri	:= SEH->EH_SALDO - ( nA181VlResg - nA181RegJur )
					nA181SldJur	:= 0
					nA181Saldo	:= nA181VlAtu - nA181VlResg

					nA181RegPri := nA181VlResg - nA181RegJur
				Else
					nA181SldPri	:= SEH->EH_SALDO
					nA181SldJur	:= nA181RegJur - nA181VlResg
					nA181Saldo	:= nA181VlAtu - nA181VlResg

					nA181RegPri := 0
					nA181RegJur := nA181RegJur - nA181VlResg
				EndIf

				nA181VlAtu  := nA181RegPri + nA181RegJur

			EndIf

			nA181VlIRF := 0
			nA181VlSwap:= 0
			nA181IRSwap:= 0
			nA181VlIOF := 0
			nA181VlTaxa:= 0

		EndIf

		If oDlg != Nil
			aEval(oDlg:aControls, {|e| If(ValType(e) == "O", e:Refresh(), Nil) } )
		Endif
	Else
		If ( cCampo $ "NA181VPLP1#DA181DTAPR#NA181VLMOED" ) .Or. ( lL11033 .And. ( cCampo $ "NA181VJUR1#NA181SJUR1" ))
			aCalc := Fa171Calc(dA181DtApr,Iif(lL11033, nA181VPLP1,SEH->EH_SALDO),.T.,nA181VlMoed)
			If ( cCampo $ "NA181VPLP1" )
				n181VlIOF	:= aCalc[2,10]
			Else
				nA181SPCP2	:= Round(SEH->EH_SALDO * SEH->EH_PERCPLP/100 , TamSX3("EH_SALDO")[2])
				nA181SPLP2	:= SEH->EH_SALDO - nA181SPCP2
				nA181SPCP1	:= Round(SEH->EH_VLCRUZ * SEH->EH_PERCPLP/100,TamSX3("EH_SALDO")[2])
				nA181SPLP1	:= SEH->EH_VLCRUZ - nA181SPCP1
				nA181SJUR2	:= aCalc[1,2]
				nA181SJUR1	:= Iif (aCalc[2,2] == 0, nA181SJUR1, aCalc[2,2] * nA181VlMoed)
				nA181SVCLP	:= aCalc[2,3]
				nA181SVCCP	:= aCalc[2,4]
				nA181SVCJR	:= Iif( Empty(SEH->EH_FORMULA) .OR. SEH->EH_MOEDA > 1, aCalc[2,5], 0 )
			EndIf
		EndIf
		If ( SEH->EH_MOEDA <> 1 )
			nValor     := Round(nA181VPLP2/na181SPLP2*nA181SPLP1,TamSX3("EH_SALDO")[2])
			nA181VPLP1 := If( Abs(nValor-nA181VPLP1)<=ACEITAVEL,nA181VPLP1,nValor)
			nValor     := Round(nA181VPCP2/na181SPCP2*nA181SPCP1,TamSX3("EH_SALDO")[2])
			nA181VPCP1 := If( Abs(nValor-nA181VPCP1)<=ACEITAVEL,nA181VPCP1,nValor)
			nValor     := Round(nA181VJUR2/nA181SJUR2*nA181SJUR1,TamSX3("EH_SALDO")[2])
			nA181VJUR1 := If( Abs(nValor-nA181VJUR1)<=ACEITAVEL,nA181VJUR1,nValor)
			nValor     := Round(nA181VPLP2*nA181VlMoed,TamSX3("EH_SALDO")[2])-nA181VPLP1
			nA181VVCLP := If( Abs(nValor-nA181VVCLP)<=ACEITAVEL,nA181VVCLP,nValor)
			nValor     := Round(nA181VPCP2*nA181VlMoed,TamSX3("EH_SALDO")[2])-na181VPCP1
			nA181VVCCP := If( Abs(nValor-nA181VVCCP)<=ACEITAVEL,nA181VVCCP,nValor)
			nValor     := Round(nA181VJUR2*nA181VlMoed,TamSX3("EH_SALDO")[2])-na181VJUR1
			nA181VVCJR := If( Abs(nValor-nA181VVCJR)<=ACEITAVEL,nA181VVCJR,nValor)
		EndIf
		If ( ExistBlock("FA181EMP") )
			ExecBlock("FA181EMP",.F.,.F.)
		EndIf
		nA181STOT1 := nA181SPLP1+nA181SPCP1+nA181SJUR1+nA181SVCLP+nA181SVCCP+nA181SVCJR
		nA181STOT2 := nA181SPLP2+nA181SPCP2+nA181SJUR2
		nA181VTOT1 := nA181VPLP1+nA181VPCP1+nA181VJUR1+nA181VVCLP+nA181VVCCP+nA181VVCJR
		nA181VTOT2 := nA181VPLP2+nA181VPCP2+nA181VJUR2
		nA181VlDeb := na181VTOT1+(Iif(lL11033 .And. SEH->EH_APLEMP == "EMP", ( nA181VLIRF * (-1)), nA181VLIRF))+nA181VLDES+If(SEH->EH_MOEDA==1,nA181VLGAP,0)
		If oDlg != Nil
			oGet01:Refresh()
			oGet02:Refresh()
			oGet03:Refresh()
			oGet04:Refresh()
			oGet05:Refresh()
			oGet06:Refresh()
			oGet07:Refresh()
			oGet08:Refresh()
			oGet09:Refresh()
		EndIf
	EndIf

Return lRet

/*/
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡„o    ³A181ResgEm³ Autor ³ Eduardo Riera         ³ Data ³ 28.03.98 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡„o ³ Pagto de Emprestimos Financeiros                           ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe   ³ A181ResgEmp(ExpC1,ExpN1,ExpN2)                             ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
	±±³          ³ ExpN1 = Numero do registro                                 ³±±
	±±³          ³ ExpN2 = Numero da op‡„o selecionada                        ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso      ³ FINA181                                                    ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function a181ResgEmp(cAlias,nReg,nOpc,lAutomato)
	Local lPanelFin := IsPanelFin()
	LOCAL cPadrao    :="585"
	LOCAL lDigita    := If(MV_PAR01==1,.T.,.F.)
	LOCAL nHdlPrv    := 0
	LOCAL lPadrao    := VerPadrao(cPadrao)
	LOCAL nTotal     := 0
	LOCAL cArquivo   := ""
	LOCAL lContabil  := .F.
	LOCAL nOpcA      :=0
	LOCAL oDlg
	LOCAL lContinua  := .T.
	LOCAL cMoeda1    := GetMv("MV_SIMB1")
	LOCAL cMoeda2    := GetMv("MV_SIMB"+AllTrim(Str(SEH->EH_MOEDA,2)))
	LOCAL cA181Histor:= STR0043+" "+SEH->EH_TIPO //"Pagto de Emprestimo"
	Local nTamSeq	 := TamSX3("EI_SEQ")[1]
	Local csequencia := Replicate("0",nTamSeq)
	LOCAL aA181Calc  := {}
	LOCAL ca181Codigo:= SEH->EH_NUMERO+"/"+SEH->EH_REVISAO
	LOCAL nA181Taxa  := SEH->EH_TAXA
	LOCAL cA181Bco   := SEH->EH_BANCO
	LOCAL cA181Age   := SEH->EH_AGENCIA
	LOCAL cA181Cta   := SEH->EH_CONTA
	LOCAL dA181DtDeb := dDataBase
	LOCAL lFa181Rep  := ExistBlock("FA181REP")
	Local nRecnoSeh
	Local cLctPco    := ""
	Local lPcoConf 	:= .F.
	Local lF181VCBL := ExistBlock("F181VCBL")
	Local nMoedaBco := 1

	Local oModelMov := FWLoadModel("FINM030") //Model de Movimento Bancário
	Local oSubFK5
	Local oSubFKA
	Local cLog		:= ""
	Local lRet		:= .T.
	Local cCamposE5	:= ""
	Local lL11033	:= SuperGetMv("MV_L11033",,.F.)
	Local cCodCont	:= SEH->EH_NUMERO
	Local oTButtonP	:= Nil
	Local nTxIOF	:= SEH->EH_TAXAIOF
	Local nDias		:= 0
	Local nRecSE2	:= NIL
	Local aRetAuto	:= {}

	Private cA181Nat   := ""

	PRIVATE nA181VLIRF := 0.00
	PRIVATE nA181VLDES := 0.00
	PRIVATE nA181VLGAP := 0.00
	PRIVATE nA181VLDEB := 0.00
	PRIVATE nA181SPLP1 := 0.00
	PRIVATE nA181SPCP1 := 0.00
	PRIVATE nA181SPLP2 := 0.00
	PRIVATE nA181SPCP2 := 0.00
	PRIVATE nA181SJUR1 := 0.00
	PRIVATE nA181SJUR2 := 0.00
	PRIVATE nA181SVCLP := 0.00
	PRIVATE nA181SVCCP := 0.00
	PRIVATE nA181SVCJR := 0.00
	PRIVATE nA181STOT1 := 0.00
	PRIVATE nA181STOT2 := 0.00
	PRIVATE nA181VPLP1 := 0.00
	PRIVATE nA181VPCP1 := 0.00
	PRIVATE nA181VPLP2 := 0.00
	PRIVATE nA181VPCP2 := 0.00
	PRIVATE nA181VJUR1 := 0.00
	PRIVATE nA181VJUR2 := 0.00
	PRIVATE nA181VVCLP := 0.00
	PRIVATE nA181VVCCP := 0.00
	PRIVATE nA181VVCJR := 0.00
	PRIVATE nA181VTOT1 := 0.00
	PRIVATE nA181VTOT2 := 0.00
	PRIVATE dA181DtApr := dDataBase
	PRIVATE nA181VlMoed:= RecMoeda(dA181DtApr,SEH->EH_MOEDA)
	PRIVATE n181VlIOF		:= 0.00

	PRIVATE oGet01
	PRIVATE oGet02
	PRIVATE oGet03
	PRIVATE oGet04
	PRIVATE oGet05
	PRIVATE oGet06
	PRIVATE oGet07
	PRIVATE oGet08
	PRIVATE oGet09
	Private cCodDiario := ""

	DEFAULT lAutomato := .F.

	aA181Calc	:= Fa171Calc(dDataBase,SEH->EH_SALDO,.T.,nA181VlMoed)
	nA181SPCP2	:= Round(SEH->EH_SALDO * SEH->EH_PERCPLP/100 , TamSX3("EH_SALDO")[2])
	nA181SPLP2	:= SEH->EH_SALDO - nA181SPCP2
	nA181SPLP1	:= SEH->EH_VLCRUZ
	nA181SPCP1	:= Round(SEH->EH_VLCRUZ * SEH->EH_PERCPLP/100,TamSX3("EH_SALDO")[2])
	nA181SPLP1	:= SEH->EH_VLCRUZ - nA181SPCP1
	nA181SJUR2	:= aA181Calc[1,2]
	nA181SJUR1	:= aA181Calc[2,2] * nA181VlMoed
	nA181SVCLP	:= aA181Calc[2,3]
	nA181SVCCP	:= aA181Calc[2,4]
	nA181SVCJR	:= Iif(Empty(SEH->EH_FORMULA) .Or. SEH->EH_MOEDA > 1,aA181Calc[2,5],0)
	nA181STOT1	:= nA181SPLP1 + nA181SPCP1 + nA181SJUR1 + nA181SVCLP + nA181SVCCP + nA181SVCJR
	nA181STOT2 := nA181SPLP2+nA181SPCP2+nA181SJUR2
	nA181VPLP1 := nA181SPLP1
	nA181VPCP1 := nA181SPCP1
	nA181VPLP2 := nA181SPLP2
	nA181VPCP2 := nA181SPCP2
	nA181VJUR1 := nA181SJUR1
	nA181VJUR2 := nA181SJUR2
	nA181VVCLP := nA181SVCLP
	nA181VVCCP := nA181SVCCP
	nA181VVCJR := nA181SVCJR
	nA181VTOT1 := nA181STOT1
	nA181VTOT2 := nA181STOT2

	nA181VlMoed := If( nA181VlMoed == 0, 1, nA181VlMoed )
	nA181VLDeb		:= If( lL11033, nA181VTOT1 - nA181VLIRF, nA181VLDeb )

// Calcula o IOF conforme a tabela cadastrada no SX5, ou a taxa de IOF cadastrada na aplicacao
	nDias := dDataBase - SEH->EH_DATA // Data da Inclusao da Aplicacao
	n181VlIOF := FIN_IOF(SEH->EH_APLEMP,nA181VPLP1,nDias,nTxIOF)

	If ( SEH->EH_APLEMP=="EMP" )
		cA181Nat := &(GetMv("MV_NATREMP"))
	EndIf
	cA181Nat := PadR(cA181Nat,TamSX3("EH_NATUREZ")[1])
	Fa171AtuNat(cA181Nat,SEH->EH_APLEMP,"FINA181")
	If ( !DtMovFin(,,IIF(SEH->EH_APLEMP=="EMP","2","")) )
		lContinua := .F.
	EndIf
	If ( SEH->EH_SALDO == 0 )
		Help(" ",1,"A181JABAIX")
		lContinua := .F.
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a geraçao de lancamentos do SIGAPCO      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoIniLan("000009")

	IF lF181VCBL
		ExecBlock("F181VCBL",.F.,.F.)
	EndIf


	While lContinua
		SoftLock( "SEH" )
		lContinua := .F.
		If !lAutomato
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Recebe dados a serem digitados                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lPanelFin  //Chamado pelo Painel Financeiro
				DEFINE MSDIALOG oDlg FROM 024,031 TO 424,633 TITLE OemToAnsi(STR0010) PIXEL  //"Pagto de Emprestimo"
			Else
				DEFINE MSDIALOG oDlg FROM 024,031 TO 400,633 TITLE OemToAnsi(STR0043) PIXEL //"Pagto de Emprestimo"
			Endif
			@ 001.5,002.0 TO 035.0,299.5 PIXEL PROMPT STR0044 OF oDlg //"Dados do Emprestimo"
			@ 008.0,009.0 SAY OemToAnsi(STR0045)           SIZE 18.0,09.0  OF oDlg PIXEL //"Codigo"
			@ 008.0,042.0 MSGET cA181Codigo                SIZE 59.0,09.0  OF oDlg PIXEL ;
				WHEN .F.
			@ 008.0,119.0 SAY OemToAnsi(STR0046)           SIZE 18.0,09.0  OF oDlg PIXEL //"Taxa"
			@ 008.0,142.0 MSGET nA181Taxa                  SIZE 52.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_TAXA",14) WHEN .F.
			@ 008.0,206.5 SAY OemToAnsi(STR0047) 		     SIZE 30.0,09.0  OF oDlg PIXEL //"Dt. Aprop."
			@ 008.0,240.0 MSGET oGet01 VAR dA181DtApr		  SIZE 52.0,09.0  OF oDlg Hasbutton PIXEL ;
				VALID dA181DtApr >= dDataBase .And. Fa181Valor()
			@ 021.0,009.0 SAY OemToAnsi(STR0048)   SIZE 50.0,09.0  OF oDlg PIXEL //"Valor da Moeda"
			@ 021.0,054.0 MSGET oGet02 VAR nA181VlMoed  		SIZE 50.0,09.0  OF oDlg Hasbutton PIXEL;
				PICTURE PesqPict("SM2","M2_MOEDA2",14) VALID Fa181Valor()

			//------------------------Group Dados do Pagto-------------------------------------------------

			@ 036.0,002.0 TO 128.5,299.5 PIXEL PROMPT STR0049    OF oDlg //"Dados do Pagto"
			@ 043.0,004.0 SAY STR0050         		SIZE 52.5,07.5  OF oDlg PIXEL //"Opera‡ao"
			@ 043.0,061.5 SAY OemToAnsi(STR0051+" "+cMoeda1)   SIZE 52.5,07.5  OF oDlg PIXEL //"Saldo"
			@ 043.0,121.5 SAY OemToAnsi(STR0051+" "+cMoeda2)   SIZE 52.5,07.5  OF oDlg PIXEL //"Saldo"
			@ 043.0,180.5 SAY OemToAnsi(STR0052+" "+cMoeda1) 	SIZE 52.5,07.5  OF oDlg PIXEL //"Pagto"
			@ 043.0,240.5 SAY OemToAnsi(STR0052+" "+cMoeda2) 	SIZE 52.5,07.5  OF oDlg PIXEL //"Pagto"
			@ 051.0,004.0 SAY OemToAnsi(STR0053)					SIZE 52.5,09.0  OF oDlg PIXEL //"Princ.Longo Prazo"
			@ 062.0,004.0 SAY OemToAnsi(STR0054)					SIZE 52.5,09.0  OF oDlg PIXEL //"Princ.Curto Prazo"
			@ 073.0,004.0 SAY OemToAnsi(STR0055)            	SIZE 52.5,09.0  OF oDlg PIXEL //"Juros"
			@ 084.0,004.0 SAY OemToAnsi(STR0056)   				SIZE 52.5,09.0  OF oDlg PIXEL //"Var.Cambial LP"
			@ 095.0,004.0 SAY OemToAnsi(STR0057)   				SIZE 52.5,09.0  OF oDlg PIXEL //"Var.Cambial CP"
			@ 106.0,004.0 SAY OemToAnsi(STR0058)        			SIZE 52.5,09.0  OF oDlg PIXEL //"VC Juros "
			@ 117.0,004.0 SAY OemToAnsi(STR0059)       			SIZE 52.5,09.0  OF oDlg PIXEL //"(=) Totais"

			//------------------------Primeira Coluna de Gets-----------------------------------------------

			@ 051.0,060.5 MSGET nA181SPLP1                  	SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton ;
				PICTURE PesqPict("SEH","EH_VALVCLP",18) 	WHEN .F.
			@ 062.0,060.5 MSGET nA181SPCP1                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALVCCP",18)	WHEN .F.
			@ 073.0,060.5 MSGET nA181SJUR1                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALJUR",18)		VALID Fa181Valor()
			@ 084.0,060.5 MSGET nA181SVCLP                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALVCLP",18)		VALID Fa181Valor()
			@ 095.0,060.5 MSGET nA181SVCCP                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALVCCP",18)		VALID Fa181Valor()
			@ 106.0,060.5 MSGET nA181SVCJR                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALJUR",18)		VALID Fa181Valor()
			@ 117.0,060.5 MSGET nA181STOT1                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_SALDO",18) 		WHEN .F.

			//------------------------Segunda Coluna de Gets------------------------------------------------

			@ 051.0,120.0 MSGET nA181SPLP2                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_SALDO",18)		WHEN .F.
			@ 062.0,120.0 MSGET nA181SPCP2                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_SALDO",18)		WHEN .F.
			@ 073.0,120.0 MSGET nA181SJUR2                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALJUR",18) 	WHEN SEH->EH_MOEDA!=1

			//------------------------Terceira Coluna de Gets-----------------------------------------------

			@ 117.0,120.0 MSGET nA181STOT2                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALOR",18)		WHEN .F.
			@ 051.0,179.5 MSGET nA181VPLP1                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALVCLP",18)	VALID nA181VPLP1 <= nA181SPLP1 .And. Fa181Valor()
			@ 062.0,179.5 MSGET nA181VPCP1                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALVCCP",18)	VALID nA181VPCP1 <= nA181SPCP1 .And. Fa181Valor()
			@ 073.0,179.5 MSGET nA181VJUR1                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALJUR",18)		VALID (nA181VJUR1 <= nA181SJUR1 .Or. lL11033) .And. Fa181Valor()
			@ 084.0,179.5 MSGET nA181VVCLP                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALVCLP",18)	VALID nA181VVCLP <= nA181SVCLP .And. Fa181Valor()
			@ 095.0,179.5 MSGET nA181VVCCP                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALVCCP",18)	VALID nA181VVCCP <= nA181SVCCP .And. Fa181Valor()
			@ 106.0,179.5 MSGET nA181VVCJR                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALJUR",18)		VALID nA181VVCJR <= nA181SVCJR .And. Fa181Valor()
			@ 117.0,179.5 MSGET nA181VTOT1                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_SALDO",18)		WHEN .F.

			//------------------------Quarta Coluna de Gets-------------------------------------------------

			@ 051.0,239.0 MSGET oGet03 VAR  nA181VPLP2   	SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALVCLP",18)	WHEN SEH->EH_MOEDA!=1 ;
				VALID nA181VPLP2 <= nA181SPLP2 .And. Fa181Valor()
			@ 062.0,239.0 MSGET oGet04 VAR nA181VPCP2    	SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALVCCP",18)	WHEN SEH->EH_MOEDA!=1 ;
				VALID nA181VPCP2 <= nA181SPCP2 .And. Fa181Valor()
			@ 073.0,239.0 MSGET oGet05 VAR nA181VJUR2    	SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_VALJUR",18)		WHEN SEH->EH_MOEDA!=1 ;
				VALID nA181VJUR2 <= nA181SJUR2 .And. Fa181Valor()
			@ 117.0,239.0 MSGET nA181VTOT2                  SIZE 57.0,09.0  OF oDlg PIXEL Hasbutton;
				PICTURE PesqPict("SEH","EH_SALDO",18)	 	WHEN .F.

			//------------------------Group Dados do Debito-------------------------------------------------

			@ 129.0,002.0 TO 180.0,299.5 PIXEL PROMPT STR0060     OF oDlg //"Dados do Debito"

			//------------------------Primeira Coluna de Says-----------------------------------------------

			@ 136.0,006.0 SAY OemToAnsi(STR0061)           		SIZE 38.0,07.0  OF oDlg PIXEL //"(+)Vlr.IR"
			@ 147.0,006.0 SAY OemToAnsi(STR0062)     				SIZE 38.0,09.0  OF oDlg PIXEL //"(+)Vlr.Despesas"
			@ 157.0,006.0 SAY OemToAnsi(STR0063)          		SIZE 38.0,09.0  OF oDlg PIXEL //"(+)Vlr.Gap"
			@ 167.0,006.0 SAY OemToAnsi(STR0028)					SIZE 38.0,09.0  OF oDlg PIXEL //"(-)Vlr. IOF"

			//------------------------Primeira Coluna de Gets-----------------------------------------------

			@ 135.0,052.5 MSGET oGet06 VAR nA181VLIRF        	SIZE 57.0,09.0  OF oDlg Hasbutton PIXEL ;
				PICTURE PesqPict("SEH","EH_VALIRF",18) 	VALID Fa181Valor()
			@ 146.0,052.5 MSGET oGet07 VAR nA181VLDES        	SIZE 57.0,09.0  OF oDlg Hasbutton PIXEL ;
				PICTURE PesqPict("SEH","EH_VALOR",18) 		VALID Fa181Valor()
			@ 157.0,052.5 MSGET oGet08 VAR nA181VLGAP				SIZE 57.0,09.0  OF oDlg Hasbutton PIXEL ;
				PICTURE PesqPict("SEH","EH_VALGAP",18) 	VALID Fa181Valor()
			@ 167.0,052.5 MSGET oGet09 VAR n181VlIOF				SIZE 57.0,09.0  OF oDlg Hasbutton PIXEL ;
				PICTURE PesqPict("SEH","EH_VALIOF",18)  	VALID Fa181Valor()

			//------------------------Segunda Coluna de Says------------------------------------------------

			@ 135.0,117.0 SAY OemToAnsi(STR0064)        SIZE 23.0,09.0  OF oDlg PIXEL //"Dt.Debito"
			@ 146.0,117.0 SAY OemToAnsi(STR0065)         SIZE 23.0,09.0  OF oDlg PIXEL //"Natureza"
			@ 157.0,117.0 SAY OemToAnsi(STR0066)            SIZE 23.0,09.0  OF oDlg PIXEL //"Banco"

			//------------------------Segunda Coluna de Gets------------------------------------------------

			@ 135.0,150.5 MSGET dA181DtDeb                  SIZE 45.0,09.0  OF oDlg Hasbutton PIXEL ;
				VALID dA181DtDeb >= dDataBase
			@ 146.0,150.5 MSGET cA181Nat                    SIZE 45.0,09.0  OF oDlg Hasbutton PIXEL ;
				PICTURE "@!" Valid FinVldNat(.F.,cA181Nat) F3 "SED"
			@ 157.0,150.5 MSGET cA181Bco                    SIZE 45.0,09.0  OF oDlg Hasbutton PIXEL ;
				PICTURE "@!" F3 "SA6" VALID Fa181Bco(cA181Bco)

			//------------------------Terceira Coluna de Says-----------------------------------------------

			@ 135.0,201.5 SAY OemToAnsi(STR0067)          SIZE 23.0,09.0  OF oDlg PIXEL //"Agencia"
			@ 146.0,201.5 SAY OemToAnsi(STR0068)            SIZE 23.0,09.0  OF oDlg PIXEL //"Conta"
			@ 157.0,201.5 SAY OemToAnsi(STR0069)       SIZE 23.0,09.0  OF oDlg PIXEL //"Vlr.Debito"

			//------------------------Terceira Coluna de Gets-----------------------------------------------

			@ 135.0,240.0 MSGET cA181Age                    SIZE 45.0,09.0  OF oDlg Hasbutton PIXEL ;
				PICTURE "@!" ;
				VALID Fa181Bco(cA181Bco,cA181Age)
			@ 146.0,240.0 MSGET cA181Cta                    SIZE 45.0,09.0  OF oDlg Hasbutton PIXEL ;
				PICTURE "@!" ;
				VALID Fa181Bco(cA181Bco,cA181Age,cA181Cta)
			@ 157.0,240.0 MSGET nA181VLDeb                  SIZE 57.0,09.0  OF oDlg Hasbutton PIXEL ;
				PICTURE PesqPict("SEH","EH_VALCRED",18) 	VALID  Fa181EmpOk()

			If lPanelFin  //Chamado pelo Painel Financeiro
				ACTIVATE MSDIALOG oDlg CENTERED ON INIT FaMyBar(oDlg,;
					{||nOpca:=1,IF(Fa181Ok(cA181Bco,cA181Age,cA181Cta),oDlg:End(),nOpcA:=3)},;
					{||oDlg:End()})

			Else
				oTButtonP := TButton():New( 021, 200, STR0097,oDlg,{ ||FA181Parc(cCodCont)}, 30,11,,,.F.,.T.,.F.,,.F.,,,.F. ) //"Parcelas"
				DEFINE SBUTTON FROM 021,235 TYPE 1 ENABLE ACTION (nOpca:=1,IF(Fa181Ok(cA181Bco,cA181Age,cA181Cta),oDlg:End(),nOpcA:=3)) OF oDlg
				DEFINE SBUTTON FROM 021,265 TYPE 2 ENABLE ACTION oDlg:End() OF oDlg
				ACTIVATE MSDIALOG oDlg CENTERED
			Endif
		Else
			
			If FindFunction("GetParAuto") .and. Empty(aRetAuto)
				aRetAuto    := GetParAuto("FINA181TestCase")
			Endif

			aRetAuto  :=  Iif(Empty(aRetAuto), __aRetAuto, aRetAuto)

			If ValType(aRetAuto) != "U" .AND. !Empty(aRetAuto)

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "cA181Bco"})) > 0
					cA181Bco := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "cA181Age"})) > 0
					cA181Age := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "cA181Cta"})) > 0
					cA181Cta := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "dA181DtApr"})) > 0
					dA181DtApr := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "dA181DTDEB"})) > 0
					dA181DTDEB := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "cA181Nat"})) > 0
					cA181Nat := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VPLP1"})) > 0
					nA181VPLP1 := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VPCP1"})) > 0
					nA181VPCP1 := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VJUR1"})) > 0
					nA181VJUR1 := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VVCLP"})) > 0
					nA181VVCLP := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VVCCP"})) > 0
					nA181VVCCP := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181SVCLP"})) > 0
					nA181SVCLP := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181SVCCP"})) > 0
					nA181SVCCP := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181SVCJR"})) > 0
					nA181SVCJR := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181SJUR1"})) > 0
					nA181SJUR1 := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VVCJR"})) > 0
					nA181VVCJR := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VTOT1"})) > 0
					nA181VTOT1 := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VLIRF"})) > 0
					nA181VLIRF := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VLDES"})) > 0
					nA181VLDES := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "n181VlIOF"})) > 0
					n181VlIOF := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VTOT2"})) > 0
					nA181VTOT2 := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VPCP2"})) > 0
					nA181VPCP2 := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181SPCP2"})) > 0
					nA181SPCP2 := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181SJUR2"})) > 0
					nA181SJUR2 := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VTOT2"})) > 0
					nA181VTOT2 := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VJUR2"})) > 0
					nA181VJUR2 := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VLGAP"})) > 0
					nA181VLGAP := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181STOT2"})) > 0
					nA181STOT2 := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "nA181VlDeb"})) > 0
					nA181VLDeb := aRetAuto[nPos][2]
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "CONTRATOPARCELA"})) > 0
					If Empty(__aRetAuto)
						FA181GetP(NIL,aRetAuto[nPos][2],lAutomato)
					Else
						SE2->(dbSetOrder(1)) //E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA 
						If SE2->(MsSeek(xFilial("SE2")+"EMP"+aRetAuto[nPos][2])) .or. SE2->(MsSeek(xFilial("SE2")+"TEM"+aRetAuto[nPos][2]))
							cNumSE2 := SE2->E2_NUM 
							cParSE2 := SE2->E2_PARCELA 
							lParcela := .T.
						Endif		
					EndIf
				EndIf

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "BAIXAPARCELA"})) > 0
					__lBxParc := aRetAuto[nPos][2]
				Endif

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "NOVOPROCESSO"})) > 0
					__lNewProc := aRetAuto[nPos][2] .and. GetRpoRelease() >= "12.1.033" 
				Endif

			EndIf
			nOpca := 1
		EndIf

		SED->(DbSeek(xFilial("SED")+cA181Nat))

		nRecSE2 := SE2->(RECNO())
		SE2->(DBGOBOTTOM())
		SE2->(DBSKIP())

		Do Case
		Case nOpcA == 3
			dbSelectArea(cAlias)
			MsUnlock()
			lContinua := .F.
		Case nOpcA == 1 .And. Fa181EmpOk()
			lContabil  := lPadrao .And. MV_PAR02 == 1
			lPcoConf := .T.
			dbSelectArea('SA6')
			dbSetOrder(1)
			If dbSeek(xFilial()+cA181Bco+cA181Age+Ca181Cta)
				nMoedaBco := Max(SA6->A6_MOEDA,1)
			EndIf

			dbSelectArea("SEI")
			dbSetOrder(1)
			dbSeek(xFilial("SEI")+SEH->EH_APLEMP+SEH->EH_NUMERO+SEH->EH_REVISAO)
			While ( !Eof() .And. SEI->EI_FILIAL == xFilial("SEI") .And.;
					SEI->EI_APLEMP == SEH->EH_APLEMP .And.;
					SEI->EI_REVISAO== SEH->EH_REVISAO )
				cSequencia := If(cSequencia>SEI->EI_SEQ,cSequencia,SEI->EI_SEQ)
				dbSelectArea("SEI")
				dbSkip()
			EndDo
			cSequencia := Soma1(csequencia,nTamSeq)
			nRecnoSeh := SEH->(Recno())
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Inicio do bloco protegido via TTS                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Begin Transaction
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Grava a Apropriacao ate a data do pagamento        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				// Desde o ultimo pagto/resgate
				SEI->(DbSetOrder(3))
				SEI->(MsSeek(xFilial("SEI")+"EMP"+SEH->(DTOS(EH_ULTAPR)+EH_NUMERO+EH_REVISAO+"NOR")))
				SEI->(DbSetOrder(1))
				aCalculo := Fa171Calc(Iif(!lL11033,If(Empty(SEH->EH_ULTAPR),SEH->EH_DATA,SEH->EH_ULTAPR),dDataBase),;
					Nil,;
					.T.,;
					If(Empty(SEH->EH_ULTAPR),SEH->EH_VLMOED,If(SEI->(!Eof()) .And. SEI->EI_TXMOEDA > 0, SEI->EI_TXMOEDA,Nil)),;
						If(Empty(SEH->EH_ULTAPR),SEH->EH_DATA,SEH->EH_ULTAPR))
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor do Juros                             ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181SJUR1-aCalculo[2,2] != 0 )
							RecLock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "JR" // Apropriacao dos Juros
							SEI->EI_DATA    := dA181DTAPR
							SEI->EI_TIPO	 := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_NATUREZ := cA181Nat
							SEI->EI_VALOR   := nA181SJUR1-aCalculo[2,2]
							SEI->EI_VLMOED2 := Iif(SEH->EH_MOEDA!=1,nA181SJUR2-aCalculo[1,2],nA181SJUR1-aCalculo[2,2])
							SEI->EI_DTDIGIT := dA181DtApr
							SEI->EI_LA		 := If(lContabil,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_MOTBX   := "APR"
							SEI->EI_HISTOR  := STR0041	//"Apropriacao Mensal"
							SEI->EI_ULTAPR  := SEH->EH_ULTAPR
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed

							SEI->EI_BANCO   := SEH->EH_BANCO
							SEI->EI_AGENCIA := SEH->EH_AGENCIA
							SEI->EI_CONTA   := SEH->EH_CONTA

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Lancamento Contabil                            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Lancamento Contabil                            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							dbSelectArea("SEH")
							RecLock("SEH",.F.)
							SEH->EH_VALJUR := nA181SJUR1
							SEH->EH_VALJUR2:= nA181SJUR2
							MsUnLock()
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor da Variacao Cambial a Longo Prazo    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181SVCLP-aCalculo[2,3] != 0 )
							RecLock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "V1"
							SEI->EI_DATA    := dA181DtApr
							SEI->EI_TIPO	 := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_VALOR   := nA181SVCLP-aCalculo[2,3]
							SEI->EI_DTDIGIT := dA181DtApr
							SEI->EI_LA		 := If(lContabil,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_MOTBX   := "APR"
							SEI->EI_HISTOR  := STR0041	//"Apropriacao Mensal"
							SEI->EI_ULTAPR  := SEH->EH_ULTAPR

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Lancamento Contabil                            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RecLock("SEH",.F.)
							SEH->EH_VALVCLP := nA181SVCLP
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor da Variacao Cambial a Curto Prazo    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181SVCCP-aCalculo[2,4] != 0 )
							RecLock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "V2"
							SEI->EI_DATA    := dA181DTAPR
							SEI->EI_TIPO	 := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_VALOR   := nA181SVCCP-aCalculo[2,4]
							SEI->EI_DTDIGIT := dA181DtApr
							SEI->EI_LA		 := If(lContabil,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_MOTBX   := "APR"
							SEI->EI_HISTOR  := STR0041 //"Apropriacao Mensal"
							SEI->EI_ULTAPR  := SEH->EH_ULTAPR

							SEI->EI_BANCO   := SEH->EH_BANCO
							SEI->EI_AGENCIA := SEH->EH_AGENCIA
							SEI->EI_CONTA   := SEH->EH_CONTA

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Lancamento Contabil                            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							dbSelectArea("SEH")
							RecLock("SEH",.F.)
							SEH->EH_VALVCCP := nA181SVCCP
						EndIf
						If ( nA181SVCJR-aCalculo[2,5] != 0 )
							RecLock("SEI",.T.)
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Grava o Valor da Variacao Cambial dos Juros        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "V3"
							SEI->EI_DATA    := dA181DTAPR
							SEI->EI_TIPO	 := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_VALOR   := nA181SVCJR-aCalculo[2,5]
							SEI->EI_DTDIGIT := dA181DtApr
							SEI->EI_LA		 := If(lContabil,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_MOTBX   := "APR"
							SEI->EI_HISTOR  := STR0041	//"Apropriacao Mensal"
							SEI->EI_ULTAPR  := SEH->EH_ULTAPR

							SEI->EI_BANCO   := SEH->EH_BANCO
							SEI->EI_AGENCIA := SEH->EH_AGENCIA
							SEI->EI_CONTA   := SEH->EH_CONTA

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Lancamento Contabil                            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							dbSelectArea("SEH")
							RecLock("SEH",.F.)
							SEH->EH_VALVCJR := nA181SVCJR
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Atualiza data de Ultima apropriacao.           ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						RecLock("SEH")
						SEH->EH_ULTAPR  := dA181DTAPR
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor do Juros                             ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181VJUR2 != 0 .Or. nA181VJUR1!=0)
							RecLock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "JR" // Apropriacao dos Juros
							SEI->EI_DATA    := dA181DTAPR
							SEI->EI_TIPO	 := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_NATUREZ := cA181Nat
							SEI->EI_VALOR   := nA181VJUR1
							SEI->EI_VLMOED2 := Iif(SEH->EH_MOEDA==1,nA181VJUR1,nA181VJUR2)
							SEI->EI_DTDIGIT := dDataBase
							SEI->EI_LA		 := If(lContabil,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_MOTBX   := "NOR"
							SEI->EI_HISTOR  := cA181Histor
							SEI->EI_ULTAPR  := SEH->EH_ULTAPR
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Lancamento Contabil                            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							dbSelectArea("SEH")
							RecLock("SEH",.F.)
							SEH->EH_VALJUR := nA181SJUR1
							SEH->EH_VALJUR2:= nA181SJUR2
							MsUnLock()
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor da Variacao Cambial a Longo Prazo    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181VVCLP != 0 )
							RecLock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "V1" // Apropriacao da Variacao cambial a Longo Prazo
							SEI->EI_DATA    := dA181DtApr
							SEI->EI_TIPO	 := SEH->EH_TIPO
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_NATUREZ := cA181Nat
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_VALOR   := nA181VVCLP
							SEI->EI_DTDIGIT := dDataBase
							SEI->EI_LA		 := If(lContabil,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_MOTBX   := "NOR"
							SEI->EI_HISTOR  := cA181Histor
							SEI->EI_ULTAPR  := SEH->EH_ULTAPR
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed
							MsUnLock()

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							RecLock("SEH",.F.)
							SEH->EH_VALJUR	 := nA181VVCLP
							SEH->EH_VALJUR2 := nA181SJUR2
							MsUnLock()

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor da Variacao Cambial a Curto Prazo    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181VVCCP != 0 )
							RecLock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "V2" // Apropriacao da Variacao Cambial a Curto Prazo
							SEI->EI_DATA    := dA181DTAPR
							SEI->EI_TIPO	 := SEH->EH_TIPO
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_NATUREZ := cA181Nat
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_VALOR   := nA181VVCCP
							SEI->EI_DTDIGIT := dDataBase
							SEI->EI_LA		 := If(lContabil,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_MOTBX   := "NOR"
							SEI->EI_HISTOR  := cA181Histor
							SEI->EI_ULTAPR  := SEH->EH_ULTAPR
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor da Variacao Cambial dos Juros        ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181VVCJR != 0 )
							Reclock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "V3" // Apropriacao da Variacao Cambial dos Juros
							SEI->EI_DATA    := dA181DTAPR
							SEI->EI_TIPO    := SEH->EH_TIPO
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_NATUREZ := cA181Nat
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_VALOR   := nA181VVCJR
							SEI->EI_DTDIGIT := dDataBase
							SEI->EI_LA		 := If(lContabil,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_MOTBX   := "NOR"
							SEI->EI_HISTOR  := cA181Histor
							SEI->EI_ULTAPR  := SEH->EH_ULTAPR
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor do IOF                               ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( n181VlIof != 0 )
							Reclock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "I2" //Apropriacao do IOF
							SEI->EI_DATA    := dDataBase
							SEI->EI_TIPO    := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_VALOR   := n181VlIOF
							SEI->EI_NATUREZ := cA181Nat
							SEI->EI_DTDIGIT := dDataBase
							SEI->EI_LA      := If( lPadrao .And. MV_PAR02 == 1, "S", "" )
							SEI->EI_SEQ     := cSequencia
							SEI->EI_VLMOED2 := Iif(SEH->EH_MOEDA==1,n181VlIOF,0)
							SEI->EI_MOTBX   := "NOR"
							SEI->EI_HISTOR  := cA181Histor
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed
							dbSelectArea("SE9")
							dbSetOrder(1)
							If MsSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
								SEI->EI_VLRQTS  := SE9->E9_COTAANT
								SEI->EI_VLRQTA  := SE9->E9_VLRCOTA
							EndIf

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Atualiza os dados do Emprestimo                    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						RecLock("SEH",.F.)
						SEH->EH_VALREG	:= nA181VPLP1+nA181VPCP1+nA181VJUR1
						SEH->EH_VALREG2	:= nA181VPLP2+nA181VPLP2+nA181VJUR2
						SEH->EH_VALIRF	:= nA181VLIRF
						SEH->EH_VALOUTR	:= nA181VLDES
						SEH->EH_VALGAP	:= nA181VLGAP
						SEH->EH_VALCRED	:= nA181VLDEB
						SEH->EH_VALIOF	:= n181VlIOF
						If ( SEH->EH_MOEDA != 1 )
							SEH->EH_SALDO		-= nA181VPLP2+nA181VPCP2
							SEH->EH_VLCRUZ	-= nA181VPLP1+nA181VPCP1
						Else
							SEH->EH_SALDO		-= nA181VPLP1+nA181VPCP1
							SEH->EH_VLCRUZ	-= nA181VPLP1+nA181VPCP1
						EndIf
						SEH->EH_STATUS := If(SEH->EH_SALDO<0.01,"B","A")
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor do Principal a Longo Prazo           ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181VPLP1+nA181VPLP2 != 0 )
							Reclock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "BL" // Baixa do Longo Prazo
							SEI->EI_DATA    := dA181DTAPR
							SEI->EI_TIPO    := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_VALOR   := nA181VPLP1
							SEI->EI_VLMOED2 := Iif(SEH->EH_MOEDA==1,nA181VPLP1,nA181VPLP2)
							SEI->EI_DTDIGIT := dDataBase
							SEI->EI_LA      := If( lPadrao .And. MV_PAR02==1,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_MOTBX   := "NOR"
							SEI->EI_HISTOR  := cA181Histor
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor do Principal a Curto Prazo           ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181VPCP1+nA181VPCP2 != 0 )
							Reclock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "BC" // Baixa do Curto Prazo
							SEI->EI_DATA    := dA181DTAPR
							SEI->EI_TIPO    := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_VALOR   := nA181VPCP1
							SEI->EI_VLMOED2 := Iif(SEH->EH_MOEDA==1,nA181VPCP1,nA181VPCP2)
							SEI->EI_NATUREZ := cA181Nat
							SEI->EI_DTDIGIT := dDataBase
							SEI->EI_LA      := If( lPadrao .And. MV_PAR02==1,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_MOTBX   := "NOR"
							SEI->EI_HISTOR  := cA181Histor
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor do Principal a Curto Prazo           ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181VJUR1+nA181VJUR2 != 0 )
							Reclock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "BJ" // Baixa do Juro
							SEI->EI_DATA    := dA181DTAPR
							SEI->EI_TIPO    := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_VALOR   := nA181VJUR1
							SEI->EI_VLMOED2 := Iif(SEH->EH_MOEDA==1,nA181VJUR1,nA181VJUR2)
							SEI->EI_NATUREZ := cA181Nat
							SEI->EI_DTDIGIT := dDataBase
							SEI->EI_LA      := If( lPadrao .And. MV_PAR02==1,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_MOTBX   := "NOR"
							SEI->EI_HISTOR  := cA181Histor
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor do IRF                               ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181VLIRF != 0 )
							Reclock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "I1" // Pagto do Valor do IRF
							SEI->EI_DATA    := dA181DTAPR
							SEI->EI_TIPO    := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_VALOR   := nA181VLIRF
							SEI->EI_NATUREZ := cA181Nat
							SEI->EI_DTDIGIT := dDataBase
							SEI->EI_LA      := If( lPadrao .And. MV_PAR02==1,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_VLMOED2 := Iif(SEH->EH_MOEDA==1,nA181VLIRF,0)
							SEI->EI_HISTOR  := cA181Histor
							SEI->EI_MOTBX   := "NOR"
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor das Taxas                            ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181VLDES != 0 )
							Reclock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "I4" // Pagto das Despesas
							SEI->EI_DATA    := dDataBase
							SEI->EI_TIPO    := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_VALOR   := nA181VLDES
							SEI->EI_NATUREZ := cA181Nat
							SEI->EI_DTDIGIT := dDataBase
							SEI->EI_LA      := If( lPadrao .And. MV_PAR02==1,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_VLMOED2 := Iif(SEH->EH_MOEDA==1,nA181VLDES,0)
							SEI->EI_MOTBX   := "NOR"
							SEI->EI_HISTOR  := cA181Histor
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor do GAP                               ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181VLGAP != 0 )
							Reclock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "I5" // Pagto do GAP
							SEI->EI_DATA    := dA181DTAPR
							SEI->EI_TIPO    := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_VALOR   := nA181VLGAP
							SEI->EI_NATUREZ := cA181Nat
							SEI->EI_DTDIGIT := dDataBase
							SEI->EI_LA      := If( lPadrao .And. MV_PAR02==1,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_VLMOED2 := Iif(SEH->EH_MOEDA==1,nA181VLGAP,0)
							SEI->EI_MOTBX   := "NOR"
							SEI->EI_HISTOR  := cA181Histor
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava o Valor Debitado                             ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( nA181VLDEB != 0 )
							Reclock("SEI",.T.)
							SEI->EI_FILIAL  := xFilial("SEI")
							SEI->EI_NUMERO  := SEH->EH_NUMERO
							SEI->EI_REVISAO := SEH->EH_REVISAO
							SEI->EI_TIPODOC := "VL" // Valor do Debito
							SEI->EI_DATA    := dA181DTDEB
							SEI->EI_TIPO    := SEH->EH_TIPO
							SEI->EI_APLEMP  := SEH->EH_APLEMP
							SEI->EI_BANCO   := cA181Bco
							SEI->EI_AGENCIA := cA181AGe
							SEI->EI_CONTA   := cA181Cta
							SEI->EI_VALOR   := nA181VLDEB
							SEI->EI_NATUREZ := cA181Nat
							SEI->EI_DTDIGIT := dDataBase
							SEI->EI_LA      := If( lPadrao .And. MV_PAR02==1,"S","")
							SEI->EI_SEQ     := cSequencia
							SEI->EI_VLMOED2 := Iif(SEH->EH_MOEDA==1,nA181VLDEB,0)
							SEI->EI_MOTBX   := "NOR"
							SEI->EI_HISTOR  := cA181Histor
							SEI->EI_TAXA    := SEH->EH_TAXA
							SEI->EI_TXMOEDA := nA181VlMoed

							If lParcela
								SEI->EI_PARCELA := cParSE2 // Parcela do emprestimo
							EndIf

							cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
							If !Empty(cLctPco)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Gera os lancamentos do SIGAPCO                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								PcoDetLan("000009", cLctPco, "FINA181")
							EndIf

							If ( lPadrao .And. MV_PAR02 == 1 )
								SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Posiciona SA6                                  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								Sa6->(DbSetOrder(1))
								Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
								If nHdlPrv <= 0
									nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
								Endif
								nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
								If ( VerPadrao("582") )
									nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
								EndIf
								SEH->(MsGoto(nRecnoSeh))
							Endif
						EndIf

			/*  
			Faz a baixa do titulo tipo PR referente a parcela selecionada no momento do 
			pagamento/resgate, ou caso nao seja selecionada a parcela, todos os titulos 
			PR relacionados ao emprestimo são baixados. 
			*/

			dbSelectArea("SE2")
			SE2->(dbSetOrder(1)) //Prefixo+Numero+Parcela+...
			If lParcela 
				If !__lNewProc
					If SE2->(DbSeek(xFilial("SE2")+"EMP"+cNumSE2+cParSE2+"PR")) .or. SE2->(DbSeek(xFilial("SE2")+"TEM"+cNumSE2+cParSE2+"PR"))
						If Empty(SE2->E2_BAIXA)
							Reclock("SE2",.F.)
							SE2->E2_SALDO := 0
							SE2->E2_BAIXA := dDataBase
							SE2->( MsUnlock() )
						EndIf
					EndIf
				Else
					If !F181Subst(xFilial("SE2")+SEH->EH_TIPO+cNumSE2+cParSE2+"PR", nA181VLDEB)
						DisarmTransaction()
						Break
					Endif
				Endif		
			Else
				If SE2->(DbSeek(xFilial("SE2")+"EMP"+cCodCont)) .OR. SE2->(DbSeek(xFilial("SE2")+"TEM"+cCodCont))
					While SE2->(!Eof()) .And. SE2->E2_FILIAL == xFilial("SE2") .And.;
							(SE2->E2_PREFIXO == "EMP" .OR. SE2->E2_PREFIXO == "TEM") .And. Alltrim(SE2->E2_NUM) == cCodCont

						If SE2->E2_TIPO <> "PR" .Or. Alltrim(SE2->E2_ORIGEM) <> "FINA171"
							SE2->(dbSkip())
							Loop
						EndIf

						If Empty(SE2->E2_BAIXA)
							Reclock("SE2",.F.)
							SE2->E2_SALDO := 0
							SE2->E2_BAIXA := dDataBase
							SE2->( MsUnlock() )
						EndIf
						SE2->(dbSkip())
					End
				EndIf
			EndIf

			lParcela	:= .F.
			
			If !__lNewProc
				/* 
				--- Formas de gravacao da movimentacao bancaria no pagamento de emprestimos (a passar por revisao) ---
				FK5_MOEDA: Moeda do cadastro do banco (A6_MOEDA)
				FK5_VALOR: Valor calculado/digitado e exibido em tela;
				FK5_VLMOE2: Faz a conversao do FK5_VALOR partindo da moeda do banco para a moeda do EH_MOEDA (taxa do SM2);
				FK5_TXMOED: Nao é gravado;	
				*/

				//Define os campos que não existem na FK5 e que serão gravados apenas na E5, para que a gravação da E5 continue igual
				cCamposE5	:= Fa171CpSE5(lMovEnt05, lMovEnt06, lMovEnt07, lMovEnt08,lMovEnt09)

				oModelMov:SetOperation( MODEL_OPERATION_INSERT ) //Inclusao
				oModelMov:Activate()
				oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Informa se vai gravar SE5 ou não
				oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5
				oModelMov:SetValue( "MASTER", "NOVOPROC", .T. ) //Informa que a inclusão será feita com um novo número de processo

				//Dados do Processo
				oSubFKA := oModelMov:GetModel("FKADETAIL")
				oSubFKA:SetValue( "FKA_IDORIG", FWUUIDV4() )
				oSubFKA:SetValue( "FKA_TABORI", "FK5" )

				//Informacoes do movimento
				oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
				oSubFK5:SetValue( "FK5_DATA", dA181DTDEB )
				oSubFK5:SetValue( "FK5_BANCO", cA181Bco )
				oSubFK5:SetValue( "FK5_AGENCI", cA181Age )
				oSubFK5:SetValue( "FK5_CONTA", cA181Cta )
				oSubFK5:SetValue( "FK5_VALOR", nA181VLDEB )
				oSubFK5:SetValue( "FK5_VLMOE2", xMoeda(nA181VLDEB,nMoedaBco,SEH->EH_MOEDA,,,aTxMoedas[nMoedaBco][2],aTxMoedas[SEH->EH_MOEDA][2]) )
				oSubFK5:SetValue( "FK5_RECPAG", "P" )
				oSubFK5:SetValue( "FK5_TPDOC", "PE" )
				oSubFK5:SetValue( "FK5_LA", Iif(mv_par02==1,"S"," ") )
				oSubFK5:SetValue( "FK5_NATURE", cA181Nat )
				oSubFK5:SetValue( "FK5_HISTOR", cA181Histor )
				oSubFK5:SetValue( "FK5_DTDISP", dA181DTDEB )
				oSubFK5:SetValue( "FK5_DOC", SEH->EH_NUMERO+SEH->EH_REVISAO+cSequencia  )
				oSubFK5:SetValue( "FK5_MOEDA", PADL(nMoedaBco,TamSX3("CTO_MOEDA")[1],"0") )
				oSubFK5:SetValue( "FK5_FILORI", SEH->EH_FILIAL )
				oSubFK5:SetValue( "FK5_ORIGEM", FunName() )
				oSubFK5:SetValue( "FK5_CCUSTO", SEH->EH_CCUSTO )

				//Gravação da tabela FK8 - Dados Contábeis
				Fa171GrFK8(oModelMov,lMovEnt05, lMovEnt06, lMovEnt07, lMovEnt08,lMovEnt09)

				If oModelMov:VldData()
					oModelMov:CommitData()
				Else
					lRet := .F.
					cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
					cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
					cLog += cValToChar(oModelMov:GetErrorMessage()[6])

					Help( ,,"MF181RESGE",,cLog, 1, 0 )
				Endif

				oModelMov:DeActivate()
				oModelMov:Destroy()
				oModelMov := NIL

				AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, SE5->E5_DATA, SE5->E5_VALOR,;
					IIf(SE5->E5_RECPAG=="R","+","-") )

				AtuSldNat(cA181Nat, dA181DTDEB, SE5->E5_MOEDA, "3", Iif(SEH->EH_APLEMP=="EMP","P","R"),SE5->E5_VALOR, 0, "+",,FunName(),"SE5", SE5->(Recno()),0)
			Else
				If __lBxParc
					If !F181BxParc(xFilial("SE2")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+__cMVFTPO+E2_FORNECE+E2_LOJA), cA181Bco, cA181Cta, cA181Age, cA181Nat, dA181DTDEB)
						DisarmTransaction()
						Break
					Endif
				Endif
			Endif

			If lFa181Rep
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Ponto de entrada para resgate de Emprestimo³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ExecBlock("FA181REP", .F., .F. )
			Endif

			If UsaSeqCor()
				FA181Diario()
				aDiario := {{"SE5",SE5->(Recno()), cCodDiario, "E5_NODIA","E5_DIACTB"}}
			Else
				aDiario := {}
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Lancamento Contabil                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( lPadrao .And. MV_PAR02 == 1 )
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona SA6                                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SEI->(DbGoto(0)) // Desposiciona SEI para contabilizar pelo SEH
				Sa6->(DbSetOrder(1))
				Sa6->(MsSeek(xFilial("SA6")+ca181bco+Ca181Age+ca181Cta))
				If nHdlPrv <= 0
					nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
				Endif
				nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
				If ( VerPadrao("582") )
					nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
				EndIf
				RodaProva(nHdlPrv,nTotal)
				cA100Incl(cArquivo,nHdlPrv,3,cLote,lDigita,.F.,,,,,,aDiario)
			EndIf	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Final  do bloco protegido via TTS                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		End Transaction
		lContinua := .F.
	Case nOpcA == 2
		lContinua := .T.
	Case nOpcA == 1 .And. !Fa181EmpOk()
		lContinua := .T.
	OtherWise
		lContinua := .F.
	EndCase
	SE2->(DBGOTO(nRecSE2))
EndDo

If lAutomato .and. __lNewProc .and. __lBxParc .and. lMsErroAuto
	F181RstInt()
Endif

dbSelectArea("SEH")
MsUnLock()

If lPcoConf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera os lancamentos do SIGAPCO  (referente SEH)     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoDetLan("000009","30","FINA181")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza a geraçao de lancamentos do SIGAPCO        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PcoFinLan("000009")

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Fa181EmpOk³ Autor ³ Eduardo Riera         ³ Data ³ 20/04/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validacao da Digitacao dos valores referentes a baixa      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Fa181EmpOk( )                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA181                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa181EmpOk(oDlg)

	Local lL11033		:= SuperGetMv("MV_L11033",,.F.)
	Local lRetorno := .T.
	If (SEH->EH_MOEDA != 1 )
		If ( Abs(Round(nA181VTOT2*nA181VlMoed,TamSX3("EH_VALOR")[2])-;
				(nA181VlDeb - nA181VLIRF - If(SEH->EH_MOEDA==1,nA181VLGAP,0) - nA181VLDES ))>ACEITAVEL )
			Help(" ",1,"FA181EMPOK")
			lRetorno := .F.
		EndIf
	Else
		If ( Abs(Round(nA181VTOT1,TamSX3("EH_VALOR")[2])-;
				(nA181VlDeb - (Iif(lL11033 .And. SEH->EH_APLEMP == "EMP", nA181VLIRF * (-1), nA181VLIRF)) - If(SEH->EH_MOEDA==1,nA181VLGAP,0) - nA181VLDES) )>ACEITAVEL )
			Help(" ",1,"FA181EMPOK")
			lRetorno := .F.
		EndIf
	EndIf
Return(lRetorno)

/*/
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡„o    ³A181EstEmp³ Autor ³ Eduardo Riera         ³ Data ³ 21.04.98 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡„o ³ Estorno do Pagto de Emprestimo Financeiro                  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe   ³ A181EstEmp(ExpC1,ExpN1,ExpN2)                              ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
	±±³          ³ ExpN1 = Numero do registro                                 ³±±
	±±³          ³ ExpN2 = Numero da op‡„o selecionada                        ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso      ³ FINA181                                                    ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function a181EstEmp(cAlias,nReg,nOpc,lAutomato)
	Local lPanelFin := IsPanelFin()
	LOCAL cPadrao    :="586"
	LOCAL lDigita    := If(MV_PAR01==1,.T.,.F.)
	LOCAL nHdlPrv    := 0
	LOCAL lPadrao    := VerPadrao(cPadrao)
	LOCAL nTotal     := 0
	LOCAL cArquivo   := ""
	LOCAL nOpcA      :=0
	LOCAL oDlg
	LOCAL lContinua  := .T.
	LOCAL cMoeda1    := GetMv("MV_SIMB1")
	LOCAL cMoeda2    := GetMv("MV_SIMB"+AllTrim(Str(SEH->EH_MOEDA,2)))
	LOCAL cA181Histor:= STR0070+" "+SEH->EH_TIPO //"Est.Pagto Emprestimo"
	Local nTamSeq	 := TamSX3("EI_SEQ")[1]
	Local csequencia := Replicate("0",nTamSeq)
	LOCAL ca181Codigo:= SEH->EH_NUMERO+"/"+SEH->EH_REVISAO
	LOCAL nA181Taxa  := SEH->EH_TAXA
	LOCAL cA181Bco   := SEH->EH_BANCO
	LOCAL cA181Age   := SEH->EH_AGENCIA
	LOCAL cA181Cta   := SEH->EH_CONTA
	LOCAL dA181DtDeb := dDataBase
	LOCAL nA181VLIRF := 0.00
	LOCAL nA181VLDES := 0.00
	LOCAL nA181VLGAP := 0.00
	LOCAL nA181VLDEB := 0.00
	LOCAL nA181SPLP1 := 0.00
	LOCAL nA181SPCP1 := 0.00
	LOCAL nA181SPLP2 := 0.00
	LOCAL nA181SPCP2 := 0.00
	LOCAL nA181SJUR1 := 0.00
	LOCAL nA181SJUR2 := 0.00
	LOCAL nA181SVCLP := 0.00
	LOCAL nA181SVCCP := 0.00
	LOCAL nA181SVCJR := 0.00
	LOCAL nA181STOT1 := 0.00
	LOCAL nA181STOT2 := 0.00
	LOCAL nA181VPLP1 := 0.00
	LOCAL nA181VPCP1 := 0.00
	LOCAL nA181VPLP2 := 0.00
	LOCAL nA181VPCP2 := 0.00
	LOCAL nA181VJUR1 := 0.00
	LOCAL nA181VJUR2 := 0.00
	LOCAL nA181VVCLP := 0.00
	LOCAL nA181VVCCP := 0.00
	LOCAL nA181VVCJR := 0.00
	LOCAL nA181VTOT1 := 0.00
	LOCAL nA181VTOT2 := 0.00
	LOCAL dA181DtApr := dDataBase
	LOCAL nA181VlMoed:= RecMoeda(dA181DtApr,SEH->EH_MOEDA)
	LOCAL aA181Reg   := {}
	LOCAL aA181Estor := {}
	LOCAL nPosicao   := 0
	LOCAL cListBox   := ""
	LOCAL cChave	  := ""
	LOCAL aMovEst    := {}
	LOCAL nCntFor    := 0
	LOCAL nCntFor1   := 0
	LOCAL dUltApr    := Ctod("")
	LOCAL lUltApr	 := .F. // Ultima apropriacao. (Unica restante)
	Local nRecnoSeh
	Local cLctPco 	:= ""
	Local lPcoConf 	:= .F.
	Local nTotalSEI := 0
	Local nMoedaBco  := 1
	Local lFa181Est	:= ( ExistBlock("FA181EST") )
	Local lAchouE2	:= .T.
	Local cChaveSEH	:= SEH->EH_APLEMP+SEH->EH_NUMERO+SEH->EH_REVISAO

	Local oModelMov
	Local oSubFK5
	Local oSubFKA
	Local cLog := ""
	Local lRet := .T.
	Local cCamposE5 := ""
	Local cSeqAnt := ""
	Local lF181EPE := ExistBlock("F181EPE")
	Local nRecSE2	:= NIL
	Local aRetAuto	:= {}

	Private cCodDiario := ""
	Private cA181Nat   := ""

	Default lAutomato := .F.

	If lAutomato
		cChaveSEH := SEH->EH_APLEMP+SEH->EH_NUMERO+SEH->EH_REVISAO+__cSeqEst
	Endif

	dbSelectArea("SEI")
	dbSetOrder(1)
	dbSeek(xFilial("SEI")+cChaveSEH)

	lParcela := .F.

	If !lAutomato
		While ( !Eof() .And. xFilial("SEI")  == SEI->EI_FILIAL .And.;
				SEH->EH_APLEMP  == SEI->EI_APLEMP .And.;
				SEH->EH_NUMERO  == SEI->EI_NUMERO .And.;
				SEH->EH_REVISAO == SEI->EI_REVISAO )
			If ( SEI->EI_TIPODOC == "VL" .And. SEI->EI_MOTBX=="NOR" .And. SEI->EI_STATUS != "C" )
				aadd(aA181Estor,SEI->EI_NUMERO+"/"+SEI->EI_REVISAO+" "+;
					Dtoc(SEI->EI_DATA)+" "+;
					TransForm(SEI->EI_VALOR,Tm(SEI->EI_VALOR,18,;
					TamSX3("EI_VALOR")[2]))+" "+SEI->EI_SEQ )
				aadd(aA181Reg,SEI->(Recno()))
			EndIf
			dbSelectArea("SEI")
			dbSkip()
		EndDo
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Escolhe Baixa a ser cancelada                                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( Len(aA181Estor) > 1 )
			cListBox := aA181Estor[1]
			nPosicao := 0
			DEFINE MSDIALOG oDlg FROM 5, 5 TO 14, 50 TITLE OemToAnsi( "Pagtos Efetuados" ) //"Pagtos Efetuados"
			@  .5, 2 LISTBOX cListBox ITEMS aA181Estor SIZE 150 , 40 Font oDlg:oFont
			DEFINE SBUTTON FROM 055,112    TYPE 1 ACTION (nPosicao := 1,oDlg:End()) ENABLE OF oDlg
			DEFINE SBUTTON FROM 055,139.1 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg

			ACTIVATE MSDIALOG oDlg CENTERED
			If nPosicao == 1
				nPosicao := Ascan(aA181Estor,cListBox)
			Endif
			If ( nPosicao == 0 )
				lContinua := .F.
			Endif
		Else
			lUltApr  := .T.
			nPosicao := 1
		EndIF
	Else
		aadd(aA181Reg, SEI->(Recno()))
		na181Sequenc := SEI->EI_SEQ
		nPosicao := 1
	EndIF
	If ( !DtMovFin(,,IIF(SEH->EH_APLEMP=="EMP","2","")) )
		lContinua := .F.
	EndIf
	If ( !lAutomato .and. Empty(aA181Estor) )
		Help(" ",1,"A181RESGEP")
		lContinua := .F.
	EndIf
	If ( lContinua )
		dbSelectArea("SEI")
		dbGoTo(aA181Reg[nPosicao])
		dbSetOrder(1)
		dbSeek(xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ)
		cChave := xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ
		While ( SEI->EI_FILIAL+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ==;
				cChave .And. !Eof() )
			cA181Nat   := SEI->EI_NATUREZ
			If ( SEI->EI_MOTBX=="NOR" )
				cA181Bco   := SEI->EI_BANCO
				cA181Age   := SEI->EI_AGENCIA
				cA181Cta   := SEI->EI_CONTA
			EndIf
			If ( SEI->EI_TIPODOC == "JR" .And. SEI->EI_MOTBX=="NOR" )
				nA181SJUR1 := SEI->EI_VALOR
				nA181SJUR2 := SEI->EI_VLMOED2
				dA181DTAPR := SEI->EI_DATA
			EndIf
			If ( SEI->EI_MOTBX == "APR" ) .And. !lUltApr
				dUltApr    := SEI->EI_ULTAPR
			EndIf
			If ( SEI->EI_TIPODOC == "I1" .And. SEI->EI_MOTBX=="NOR" )
				nA181VLIRF := SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "I4" .And. SEI->EI_MOTBX=="NOR" )
				nA181VLDES := SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "I5" .And. SEI->EI_MOTBX=="NOR" )
				nA181VLGAP :=  SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "V1" .And. SEI->EI_MOTBX=="NOR" )
				nA181SVCLP := SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "V2" .And. SEI->EI_MOTBX=="NOR" )
				nA181SVCCP := SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "V3" .And. SEI->EI_MOTBX=="NOR" )
				nA181SVCJR := SEI->EI_VALOR
			EndIf
			If ( SEI->EI_TIPODOC == "BL" .And. SEI->EI_MOTBX=="NOR" )
				nA181VPLP1 := SEI->EI_VALOR
				nA181VPLP2 := SEI->EI_VLMOED2
			EndIf
			If ( SEI->EI_TIPODOC == "BC" .And. SEI->EI_MOTBX=="NOR" )
				nA181VPCP1 := SEI->EI_VALOR
				nA181VPCP2 := SEI->EI_VLMOED2
			EndIf
			If ( SEI->EI_TIPODOC == "BJ" .And. SEI->EI_MOTBX=="NOR" )
				nA181VJUR1 := SEI->EI_VALOR
				nA181VJUR2 := SEI->EI_VLMOED2
			EndIf
			If ( SEI->EI_TIPODOC == "VL" .And. SEI->EI_MOTBX=="NOR" )
				nA181VLDEB := SEI->EI_VALOR
				dA181DTDEB := SEI->EI_DATA
			EndIf
			dbSelectArea("SEI")
			dbSkip()
		EndDo
		nA181STOT1 := nA181SPLP1+nA181SPCP1+nA181SJUR1+nA181SVCLP+nA181SVCCP+nA181SVCJR
		nA181STOT2 := nA181SPLP2+nA181SPCP2+nA181SJUR2
		nA181VTOT1 := nA181VPLP1+nA181VPCP1+nA181VJUR1+nA181VVCLP+nA181VVCCP+nA181VVCJR
		nA181VTOT2 := nA181VPLP2+nA181VPCP2+nA181VJUR2
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a geraçao de lancamentos do SIGAPCO      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoIniLan("000009")

	oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento

	While lContinua
		SoftLock( "SEH" )
		lContinua := .F.

		If !lAutomato

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Recebe dados a serem digitados                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			If lPanelFin  //Chamado pelo Painel Financeiro
				DEFINE MSDIALOG oDlg FROM 024,031 TO 404,633 TITLE OemToAnsi(STR0072) PIXEL //"Estorno de Pagto"
			Else
				DEFINE MSDIALOG oDlg FROM 024,031 TO 364,633 TITLE OemToAnsi(STR0072) PIXEL //"Estorno de Pagto"
			Endif

			@ 001.5,002.0 TO 035.0,299.5 PIXEL PROMPT STR0044 OF oDlg //"Dados do Emprestimo"
			@ 008.0,009.0 SAY OemToAnsi(STR0045)           		SIZE 18.0,09.0  OF oDlg PIXEL //"Codigo"
			@ 008.0,042.0 MSGET cA181Codigo                 	SIZE 52.0,09.0  OF oDlg PIXEL ;
				WHEN .F.
			@ 008.0,119.0 SAY OemToAnsi(STR0046)             	SIZE 18.0,09.0  OF oDlg PIXEL //"Taxa"
			@ 008.0,142.0 MSGET nA181Taxa                   	SIZE 52.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_TAXA",14) ;
				WHEN .F.
			@ 008.0,206.5 SAY OemToAnsi(STR0047)       			SIZE 30.0,09.0  OF oDlg PIXEL //"Dt. Aprop."
			@ 008.0,240.0 MSGET dA181DtApr							SIZE 32.0,09.0  OF oDlg PIXEL ;
				WHEN .F.
			@ 021.0,009.0 SAY OemToAnsi(STR0048)   				SIZE 50.0,09.0  OF oDlg PIXEL //"Valor da Moeda"
			@ 021.0,064.0 MSGET nA181VlMoed 				 			SIZE 50.0,09.0  OF oDlg PIXEL;
				PICTURE PesqPict("SM2","M2_MOEDA2",14);
				WHEN .F.

			@ 036.0,002.0 TO 128.5,299.5 PIXEL PROMPT STR0049    OF oDlg //"Dados do Pagto"
			@ 043.0,004.0 SAY STR0050         		SIZE 52.5,07.5  OF oDlg PIXEL //"Opera‡ao"
			@ 043.0,061.5 SAY OemToAnsi(STR0051+" "+cMoeda1)   SIZE 52.5,07.5  OF oDlg PIXEL //"Saldo"
			@ 043.0,121.5 SAY OemToAnsi(STR0051+" "+cMoeda2)   SIZE 52.5,07.5  OF oDlg PIXEL //"Saldo"
			@ 043.0,180.5 SAY OemToAnsi(STR0052+" "+cMoeda1) 	SIZE 52.5,07.5  OF oDlg PIXEL //"Pagto"
			@ 043.0,240.5 SAY OemToAnsi(STR0052+" "+cMoeda2) 	SIZE 52.5,07.5  OF oDlg PIXEL //"Pagto"
			@ 051.0,004.0 SAY OemToAnsi(STR0053)					SIZE 52.5,09.0  OF oDlg PIXEL //"Princ.Longo Prazo"
			@ 062.0,004.0 SAY OemToAnsi(STR0054)					SIZE 52.5,09.0  OF oDlg PIXEL //"Princ.Curto Prazo"
			@ 073.0,004.0 SAY OemToAnsi(STR0055)            	SIZE 52.5,09.0  OF oDlg PIXEL //"Juros"
			@ 084.0,004.0 SAY OemToAnsi(STR0056)   				SIZE 52.5,09.0  OF oDlg PIXEL //"Var.Cambial LP"
			@ 095.0,004.0 SAY OemToAnsi(STR0057)   				SIZE 52.5,09.0  OF oDlg PIXEL //"Var.Cambial CP"
			@ 106.0,004.0 SAY OemToAnsi(STR0058)        			SIZE 52.5,09.0  OF oDlg PIXEL //"VC Juros "
			@ 117.0,004.0 SAY OemToAnsi(STR0059)       			SIZE 52.5,09.0  OF oDlg PIXEL //"(=) Totais"
			@ 051.0,060.5 MSGET nA181SPLP1                  	SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALVCLP",18)	WHEN .F.
			@ 062.0,060.5 MSGET nA181SPCP1                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALVCCP",18)	WHEN .F.
			@ 073.0,060.5 MSGET nA181SJUR1                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALJUR",18)		WHEN .F.
			@ 084.0,060.5 MSGET nA181SVCLP                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALVCLP",18) 	WHEN .F.
			@ 095.0,060.5 MSGET nA181SVCCP                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALJUR",18) 	WHEN .F.
			@ 106.0,060.5 MSGET nA181SVCJR                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALJUR",18)		WHEN .F.
			@ 117.0,060.5 MSGET nA181STOT1                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_SALDO",18)		WHEN .F.
			@ 051.0,120.0 MSGET nA181SPLP2                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALVCLP",18)	WHEN .F.
			@ 062.0,120.0 MSGET nA181SPCP2                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALVCCP",18)	WHEN .F.
			@ 073.0,120.0 MSGET nA181SJUR2                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALJUR",18)		WHEN .F.
			@ 117.0,120.0 MSGET nA181STOT2                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_SALDO",18)		WHEN .F.
			@ 051.0,179.5 MSGET nA181VPLP1                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALVCLP",18)	WHEN .F.
			@ 062.0,179.5 MSGET nA181VPCP1                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALVCCP",18)	WHEN .F.
			@ 073.0,179.5 MSGET nA181VJUR1                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALJUR",18)		WHEN .F.
			@ 084.0,179.5 MSGET nA181VVCLP                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALVCCP",18)	WHEN .F.
			@ 095.0,179.5 MSGET nA181VVCCP                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALVCCP",18)	WHEN .F.
			@ 106.0,179.5 MSGET nA181VVCJR                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALJUR",18)		WHEN .F.
			@ 117.0,179.5 MSGET nA181VTOT1                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_SALDO",18)		WHEN .F.
			@ 051.0,239.0 MSGET nA181VPLP2   					SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALVCCP",18)	WHEN .F.
			@ 062.0,239.0 MSGET nA181VPCP2    					SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALVCCP",18)	WHEN .F.
			@ 073.0,239.0 MSGET nA181VJUR2    					SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALJUR",18)		WHEN .F.
			@ 117.0,239.0 MSGET nA181VTOT2                  SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_SALDO",18)		WHEN .F.

			@ 129.0,002.0 TO 168.0,299.5 PIXEL PROMPT STR0060     OF oDlg //"Dados do Debito"
			@ 136.0,006.0 SAY OemToAnsi(STR0061)           SIZE 38.0,07.0  OF oDlg PIXEL //"(+)Vlr.IR"
			@ 147.0,006.0 SAY OemToAnsi(STR0062)    	SIZE 38.0,09.0  OF oDlg PIXEL //"(+)Vlr.Despesas"
			@ 157.0,006.0 SAY OemToAnsi(STR0063)          SIZE 38.0,09.0  OF oDlg PIXEL //"(+)Vlr.Gap"
			@ 135.0,052.5 MSGET	nA181VLIRF        	SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALIRF",18)		WHEN .F.
			@ 146.0,052.5 MSGET  nA181VLDES        	SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALOR",18) 		WHEN .F.
			@ 157.0,052.5 MSGET  nA181VLGAP				SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALGAP",18)		WHEN .F.
			@ 135.0,117.0 SAY OemToAnsi(STR0064)      SIZE 23.0,09.0  OF oDlg PIXEL //"Dt.Debito"
			@ 146.0,117.0 SAY OemToAnsi(STR0065)      SIZE 23.0,09.0  OF oDlg PIXEL //"Natureza"
			@ 157.0,117.0 SAY OemToAnsi(STR0066)      SIZE 23.0,09.0  OF oDlg PIXEL //"Banco"
			@ 135.0,150.5 MSGET dA181DtDeb            SIZE 35.0,09.0  OF oDlg PIXEL ;
				WHEN .F.
			@ 146.0,150.5 MSGET cA181Nat              SIZE 35.0,09.0  OF oDlg Hasbutton PIXEL ;
				PICTURE "@!" 	VALID FinVldNat(.F.,cA181Nat) F3 "SED"
			@ 157.0,150.5 MSGET cA181Bco              SIZE 35.0,09.0  OF oDlg PIXEL ;
				PICTURE "@!" 	WHEN .F.
			@ 135.0,201.5 SAY OemToAnsi(STR0067)      SIZE 23.0,09.0  OF oDlg PIXEL //"Agencia"
			@ 146.0,201.5 SAY OemToAnsi(STR0068)      SIZE 23.0,09.0  OF oDlg PIXEL //"Conta"
			@ 157.0,201.5 SAY OemToAnsi(STR0069)      SIZE 23.0,09.0  OF oDlg PIXEL //"Vlr.Debito"
			@ 135.0,240.0 MSGET cA181Age              SIZE 45.0,09.0  OF oDlg PIXEL ;
				PICTURE "@!" 	WHEN .F.
			@ 146.0,240.0 MSGET cA181Cta              SIZE 45.0,09.0  OF oDlg PIXEL ;
				PICTURE "@!" 	WHEN .F.
			@ 157.0,240.0 MSGET nA181VLDeb            SIZE 57.0,09.0  OF oDlg PIXEL ;
				PICTURE PesqPict("SEH","EH_VALCRED",18)	WHEN .F.

			If lPanelFin  //Chamado pelo Painel Financeiro
				ACTIVATE MSDIALOG oDlg CENTERED ON INIT FaMyBar(oDlg,;
					{||nOpca:=1,IF(Fa181Ok(cA181Bco,cA181Age,cA181Cta),oDlg:End(),nOpcA:=3)},;
					{||oDlg:End()})

			Else
				DEFINE SBUTTON FROM 021,235 TYPE 1 ENABLE ACTION (nOpca:=1,IF(Fa181Ok(cA181Bco,cA181Age,cA181Cta),oDlg:End(),nOpcA:=3)) OF oDlg
				DEFINE SBUTTON FROM 021,265 TYPE 2 ENABLE ACTION oDlg:End() OF oDlg
				ACTIVATE MSDIALOG oDlg CENTERED
			Endif
		Else
			If FindFunction("GetParAuto") .and. Empty(aRetAuto)
				aRetAuto    := GetParAuto("FINA181TestCase")
			Endif

			aRetAuto  :=  Iif(Empty(aRetAuto), __aRetAuto, aRetAuto)

			If ValType(aRetAuto) != "U" .AND. !Empty(aRetAuto)
				//"Natureza"
				If	(nPos := aScan(aRetAuto,{|x| x[1] == "cA181Nat"})) > 0
					cA181Nat := aRetAuto[nPos][2]
				EndIf
				
				If	(nPos := aScan(aRetAuto,{|x| x[1] == "NOVOPROCESSO"})) > 0
					__lNewProc := aRetAuto[nPos][2] .and. GetRpoRelease() >= "12.1.033" 
				Endif

				If	(nPos := aScan(aRetAuto,{|x| x[1] == "ESTORNABAIXA"})) > 0
					__lEstBx := aRetAuto[nPos][2]
				Endif
			EndIf
			nOpca := 1
		EndIf
		
		nRecSE2 := SE2->(RECNO())
		SE2->(DBGOBOTTOM())
		SE2->(DBSKIP())

		Do Case
		Case nOpcA == 3
			dbSelectArea(cAlias)
			MsUnlock()
			lContinua := .F.
		Case nOpcA == 1
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Ponto de entrada para gravacao de dados complementares            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lFa181Est
				ExecBlock("FA181EST",.F.,.F.)
			EndIf

			lPcoConf := .T.
			dbSelectArea('SA6')
			dbSetOrder(1)
			If dbSeek(xFilial()+cA181Bco+cA181Age+cA181Cta)
				nMoedaBco := Max(SA6->A6_MOEDA,1)
			EndIf
			dbSelectArea("SEI")
			dbSetOrder(1)
			dbSeek(xFilial("SEI")+SEH->EH_APLEMP+SEH->EH_NUMERO+SEH->EH_REVISAO)
			While ( !Eof() .And. SEI->EI_FILIAL == xFilial("SEI") .And.;
					SEI->EI_APLEMP == SEH->EH_APLEMP .And.;
					SEI->EI_REVISAO== SEH->EH_REVISAO .And.;
					SEI->EI_NUMERO == SEH->EH_NUMERO )
				cSequencia := If(cSequencia>SEI->EI_SEQ,cSequencia,SEI->EI_SEQ)
				dbSelectArea("SEI")
				dbSkip()
			EndDo
			cSeqAnt := cSequencia
			cSequencia := Soma1(csequencia,nTamSeq)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Inicio do bloco protegido via TTS                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Begin Transaction
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Indica que a movimentacao foi cancelada            ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SEI")
				dbGoTo(aA181Reg[nPosicao])
				dbSetOrder(1)
				dbSeek(xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ)
				cChave := xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ
				While ( SEI->EI_FILIAL+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ==;
						cChave .And. !Eof() )
					RecLock("SEI",.F.)
					aadd(aMovEst,Array(SEI->(FCount())))
					For nCntFor := 1 To SEI->(FCount())
						aMovEst[Len(aMovEst),nCntFor] := SEI->(FieldGet(nCntFor))
					Next nCntFor
					SEI->EI_STATUS := "C"
					dbSelectArea("SEI")
					dbSkip()
				EndDo
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Estorna a movimentacao.                            ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SEH")
				RecLock("SEH",.F.)
				SEH->EH_VALJUR  := 0
				SEH->EH_VALJUR2 := 0
				SEH->EH_VALVCLP := 0
				SEH->EH_VALVCCP := 0
				SEH->EH_VALVCJR := 0
				nRecnoSeh := SEH->(Recno())
				For nCntFor := 1 To Len(aMovEst)
					RecLock("SEI",.T.)
					For nCntFor1 := 1 To Len(aMovEst[nCntFor])
						SEI->(FieldPut(nCntFor1,aMovEst[nCntFor,nCntFor1]))
					Next nCntFor1
					SEI->EI_VALOR  *= (-1)
					SEI->EI_STATUS := "C"
					SEI->EI_LA     := If( lPadrao .And. MV_PAR02==1,"S","")
					SEI->EI_SEQ    := cSequencia
					SEI->EI_DTDIGIT:= dDatabase
					SEI->EI_HISTOR := cA181Histor

					cLctPco    := PcoItLancto(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .T. /*lCancela*/)
					If !Empty(cLctPco)
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Gera os lancamentos do SIGAPCO                      ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						PcoDetLan("000009", cLctPco, "FINA181")
					EndIf

					If ( SEI->EI_MOTBX == "NOR" )
						Do Case
						Case SEI->EI_TIPODOC == "JR" // Apropriacao dos Juros
							SEH->EH_VALJUR  += SEI->EI_VALOR
							SEH->EH_VALJUR2 += SEI->EI_VLMOED2
						Case SEI->EI_TIPODOC == "V1" // Apropriacao da VC a LP
							SEH->EH_VALVCLP += SEI->EI_VALOR
						Case SEI->EI_TIPODOC == "V2" // Apropriacao da VC a CP
							SEH->EH_VALVCCP += SEI->EI_VALOR
						Case SEI->EI_TIPODOC == "V3" // Apropriacao da VC do Juro
							SEH->EH_VALVCJR += SEI->EI_VALOR
						EndCase
					Else
						Do Case
						Case SEI->EI_TIPODOC == "JR" // Apropriacao dos Juros
							SEH->EH_VALJUR  -= SEI->EI_VALOR
							SEH->EH_VALJUR2 -= SEI->EI_VLMOED2
						Case SEI->EI_TIPODOC == "V1" // Apropriacao da VC a LP
							SEH->EH_VALVCLP -= SEI->EI_VALOR
						Case SEI->EI_TIPODOC == "V2" // Apropriacao da VC a CP
							SEH->EH_VALVCCP -= SEI->EI_VALOR
						Case SEI->EI_TIPODOC == "V3" // Apropriacao da VC do Juro
							SEH->EH_VALVCJR -= SEI->EI_VALOR
						EndCase
					EndIf
					If ( lPadrao .And. MV_PAR02 == 1 )
						SEH->(DbGoto(0)) // DEspociciona SEH para contabilizar pelo SEI
						If nHdlPrv <= 0
							nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
						Endif
						nTotalSEI := 0
						nTotalSEI := DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
						nTotal += nTotalSEI
						If ( VerPadrao("582") )
							nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
						EndIf
						SEH->(MsGoto(nRecnoSeh))
					Endif
				Next nCntFor
				RecLock("SEH",.F.)
				SEH->EH_ULTAPR  := dUltApr
				SEH->EH_VALREG  := nA181VPLP1+nA181VPCP1+nA181VJUR1
				SEH->EH_VALREG2 := nA181VPLP2+nA181VPLP2+nA181VJUR2
				SEH->EH_VALIRF  := nA181VLIRF
				SEH->EH_VALOUTR := nA181VLDES
				SEH->EH_VALGAP  := nA181VLGAP
				SEH->EH_VALCRED := nA181VLDEB
				If ( SEH->EH_MOEDA != 1 )
					SEH->EH_SALDO   += nA181VPLP2+nA181VPCP2
					SEH->EH_VLCRUZ  += nA181VPLP1+nA181VPCP1
				Else
					SEH->EH_SALDO   += nA181VPLP1+nA181VPCP1
					SEH->EH_VLCRUZ  += nA181VPLP1+nA181VPCP1
				EndIf
				SEH->EH_STATUS := If(SEH->EH_SALDO<0.01,"B","A")

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Efetua a Movimentacao Bancaria de Estorno          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

				If lRet .And. !Empty(SEH->EH_AMORTIZ)

					//Indica se consegue localizar a(s) parcela(s) do pagamento do emprestimo e cancela a baixa
					lAchouE2 := F181CanSE2(SEI->EI_FILIAL, SEI->EI_APLEMP, SEI->EI_NUMERO, SEI->EI_REVISAO, SEI->EI_TIPO, SEI->EI_PARCELA)

					If !lAchouE2
						lRet := .F.
						cLog := STR0098 + Chr(10) + Chr(13) //STR0098 "Titulo não encontrado: "
						cLog += STR0099 + xFilial("SE2") + Chr(13) + Chr(10) // STR0099 "		Filial: "
						cLog += STR0100 + "EMP" + Chr(13) + Chr(10) // STR0100 "		Prefixo: "
						cLog += STR0101 + PadR(SEI->EI_NUMERO, TamSX3("E2_NUM")[1] ) + Chr(13) + Chr(10) // STR0101 "		Número: "
						cLog += STR0102 + PadR(SEI->EI_PARCELA, TamSX3("E2_PARCELA")[1] ) + Chr(13) + Chr(10) // STR0102 "		Parcela: "
						Help( , , "MF181ESTE", , cLog, 1, 0 )
						DisarmTransaction()
					EndIf

				EndIf

			/* 
			--- Formas de gravacao da movimentacao bancaria no estorno do pagamento de emprestimos (a passar por revisao) ---
			FK5_MOEDA: Moeda do cadastro do banco (A6_MOEDA)
			FK5_VALOR: Valor calculado/digitado e exibido em tela;
			FK5_VLMOE2: Faz a conversao do FK5_VALOR partindo da moeda do banco para a moeda do EH_MOEDA (taxa do SM2);
			FK5_TXMOED: Nao é gravado;	
			*/
				If lRet
					If !__lNewProc
						//Define os campos que não existem nas FKs e que serão gravados apenas na E5, para que a gravação da E5 continue igual
						cCamposE5	:= Fa171CpSE5(lMovEnt05, lMovEnt06, lMovEnt07, lMovEnt08,lMovEnt09)

						oModelMov:SetOperation( MODEL_OPERATION_INSERT ) //Inclusao
						oModelMov:Activate()
						oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Informa se vai gravar SE5 ou não
						oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5
						oModelMov:SetValue( "MASTER", "NOVOPROC", .F. ) //Informa que a inclusão não será feita com um novo número de processo

						//Dados do Processo
						oSubFKA := oModelMov:GetModel("FKADETAIL")
						oSubFKA:SetValue( "FKA_IDORIG", FWUUIDV4() )
						oSubFKA:SetValue( "FKA_TABORI", "FK5" )

						//Informacoes do movimento
						oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
						oSubFK5:SetValue( "FK5_DATA", dA181DTDEB )
						oSubFK5:SetValue( "FK5_BANCO", cA181Bco )
						oSubFK5:SetValue( "FK5_AGENCI", cA181Age )
						oSubFK5:SetValue( "FK5_CONTA", cA181Cta )
						oSubFK5:SetValue( "FK5_VALOR", nA181VLDEB )
						oSubFK5:SetValue( "FK5_VLMOE2", xMoeda(nA181VLDEB,nMoedaBco,SEH->EH_MOEDA,,,aTxMoedas[nMoedaBco][2],aTxMoedas[SEH->EH_MOEDA][2]) )
						oSubFK5:SetValue( "FK5_RECPAG", "R" )
						oSubFK5:SetValue( "FK5_TPDOC", "PE" )
						oSubFK5:SetValue( "FK5_LA", Iif(mv_par02==1,"S"," ") )
						oSubFK5:SetValue( "FK5_NATURE", cA181Nat )
						oSubFK5:SetValue( "FK5_HISTOR", cA181Histor )
						oSubFK5:SetValue( "FK5_DTDISP", dA181DTDEB )
						oSubFK5:SetValue( "FK5_DOC", SEH->EH_NUMERO+SEH->EH_REVISAO+cSequencia  )
						oSubFK5:SetValue( "FK5_MOEDA", PADL(nMoedaBco,TamSX3("CTO_MOEDA")[1],"0") )
						oSubFK5:SetValue( "FK5_FILORI", SEH->EH_FILIAL )
						oSubFK5:SetValue( "FK5_ORIGEM", FunName() )
						oSubFK5:SetValue( "FK5_CCUSTO", SEH->EH_CCUSTO )

						//Gravação da tabela FK8 - Dados Contábeis
						Fa171GrFK8(oModelMov,lMovEnt05, lMovEnt06, lMovEnt07, lMovEnt08,lMovEnt09)

						If oModelMov:VldData()
							oModelMov:CommitData()
							
							AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, SE5->E5_DATA, SE5->E5_VALOR,;
								IIf(SE5->E5_RECPAG=="R","+","-") )

							AtuSldNat(cA181Nat, dA181DTDEB, SE5->E5_MOEDA, "3", Iif(SEH->EH_APLEMP=="EMP","P","R"),SE5->E5_VALOR, 0, "-",,FunName(),"SE5", SE5->(Recno()),0)

						Else
							lRet := .F.
							cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
							cLog += cValToChar(oModelMov:GetErrorMessage()[6])

							Help( ,,"MF181ESTE",,cLog, 1, 0 )
						Endif

						oModelMov:DeActivate()
						oModelMov:Destroy()
						oModelMov := Nil

					Endif	

					If lRet

						If lF181EPE
							ExecBlock("F181EPE",.F.,.F.)
						EndIf
						If UsaSeqCor()
							FA181Diario()
							aDiario := {{"SE5",SE5->(Recno()), cCodDiario, "E5_NODIA","E5_DIACTB"}}
						Else
							aDiario := {}
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Lancamento Contabil                            ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( lPadrao .And. MV_PAR02 == 1 )
							SEI->(DbGoto(0)) // Despociciona SEI para contabilizar pelo SEH
							If nHdlPrv <= 0
								nHdlPrv:=HeadProva(cLote,"FINA181",Substr(cUsuario,7,6),@cArquivo)
							Endif
							nTotal+=DetProva(nHdlPrv,cPadrao,"FINA181",cLote)
							If ( VerPadrao("582") )
								nTotal+=DetProva(nHdlPrv,"582","FINA181",cLote)
							EndIf
							RodaProva(nHdlPrv,nTotal)
							cA100Incl(cArquivo,nHdlPrv,3,cLote,lDigita,.F.,,,,,,aDiario)
						EndIf

					Endif
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Final  do bloco protegido via TTS                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			End Transaction
			lContinua := .F.
		Case nOpcA == 2
			lContinua := .T.
		OtherWise
			lContinua := .F.
		EndCase
		SE2->(DBGOTO(nRecSE2))
	EndDo
	dbSelectArea("SEH")
	MsUnLock()

	If lPcoConf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Gera os lancamentos do SIGAPCO  (referente SEH)     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		PcoDetLan("000009","30","FINA181")
	EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza a geraçao de lancamentos do SIGAPCO        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoFinLan("000009")

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³V183CONTRATºAutor  ³Claudio D. de Souzaº Data ³  13/08/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validar o codigo do contrato na aplicacao, nao permitindo a º±±
±±º          ³inclusao de duas aplicacoes por cotas para um mesmo contratoº±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP6                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION V181Contrat(cContrato)
	Local aArea := GetArea()
	Local lRet := .T.

	DbSelectArea("SEH")
	DbSetOrder(3)
	If SEH->EH_TIPO $ GetMv("MV_APLCAL4") .And.;
			MsSeek(xFilial("SEH")+cContrato)
		lRet := .F.
		Help(" ",1,"A181JAEXIS")
	Endif

	RestArea(aArea)

Return lRet

//------------------------------------------------------------------------------------------
/* {Protheus.doc} ³Fa181ValIr
Recalcula os valores de resgate, credito e cotas resgatadas
quando o usuario alterar o valor do IR calculado pelo sist.

@author    Claudio D. de Souza
@version   11.80
@since     28/04/2004
@protected
*/
//------------------------------------------------------------------------------------------
Static Function Fa181ValIr()

	Local lRet := .F.
	// Calculo deve ser maior menor do Vlr. do Credito e não poderá ser negativo
	If nA181IRRdBruto >= 0 .and. nA181IRRdBruto <= nA181VlCrd

		nA181VlIRF  := nA181IRRdBruto // Assume o novo valor de IR

		// Recalcula a quantidade de cotas resgatadas, saldo em cotas e valor de resgate.
		n181CtRg	:= (nA181VlCrd + nA181IRRdBruto + nA181VlIOF + nA181VlTaxa) / na181VlCota
		n181SldQs 	:= SEH->EH_SLDCOTA - n181CtRg
		nA181VlResg := nA181VlCrd + nA181IRRdBruto + nA181VlIOF + nA181VlTaxa

		lRet 		:= .T.

	Else
		//O valor informado não pode ser maior do que o Vlr. do Credito e não pode ser Negativo.
		nA181IRRdBruto := nA181VlIRF
		Help(NIL, NIL, "FA181ValIR", NIL, STR0103, 1, 0, NIL, NIL, NIL, NIL, NIL, {STR0104})
		lRet 		:= .F.
	EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³PcoItLancto ºAutor  ³Paulo Carnelossi  º Data ³  10/11/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³retornar o item de lancamento do processo PCO  000009 -     º±±
±±º          ³RESGATE DE APLIC/EMPRESTIMOS para ser utilizado na funcao   º±±
±±º          ³PcoDetLan                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function PcoItLancto(cAplEmp, cTipoDoc, cNorApr, lCancela)
	Local cItLctoPco := "", nElemLct, nPos
	DEFAULT lCancela := .F.

	If lCancela   //cancelamento
		nElemLct := 05
	Else		//lancto normal inclusao
		nElemLct := 04
	EndIf

	If Len(aIt_TpDoc)==0  //se o array nao estiver preenchido popula
	/*estrutura do array aIt_TpDoc
	Coluna 1 - APL (APLICACAO) EMP (EMPRESTIMO
	Coluna 2 - EI_TIPODOC (TIPO DO DOCUMENTO)
	Coluna 3 - EI_MOTBX (NORMAL/APROPRIACAO)
	Coluna 4 - Item do Lancamento modulo PCO INCLUSAO - 000009-RESG.APLIC.EMPREST.
	Coluna 5 - Item do Lancamento modulo PCO CANCELTO - 000009-RESG.APLIC.EMPREST.
	Coluna 6 - Descritivo do Item
	*/
		//APLICACAO
		aAdd(aIt_TpDoc,	{"APL","BP","NOR","02","16","Baixa Valor do Principal"		})
		aAdd(aIt_TpDoc,	{"APL","JR","NOR","03","17","Valor dos Juros"		 		})
		aAdd(aIt_TpDoc,	{"APL","RG","NOR","04","18","Baixa do Valor do Resgate"		})
		aAdd(aIt_TpDoc,	{"APL","I1","NOR","05","19","Valor do IRF"					})
		aAdd(aIt_TpDoc,	{"APL","I2","NOR","06","20","Valor do IOF"					})
		aAdd(aIt_TpDoc,	{"APL","SW","NOR","07","21","Valor do SWAP"					})
		aAdd(aIt_TpDoc,	{"APL","I3","NOR","08","22","Valor do IRF s/ SWAP"			})
		aAdd(aIt_TpDoc,	{"APL","I4","NOR","09","23","Valor de despesas"				})
		aAdd(aIt_TpDoc,	{"APL","VL","NOR","10","24","Valor do Credito"				})
		aAdd(aIt_TpDoc,	{"APL","I1","APR","11","25","Apropriacao do IRF"			})
		aAdd(aIt_TpDoc,	{"APL","I2","APR","12","26","Apropriacao do IOF"			})
		aAdd(aIt_TpDoc,	{"APL","I3","APR","13","27","Apropriacao do IRF s/ SWAP"	})
		aAdd(aIt_TpDoc,	{"APL","I4","APR","14","28","Apropriacao de despesas"		})
		aAdd(aIt_TpDoc,	{"APL","JR","APR","15","29","Apropriacao dos Juros "		})
		//EMPRESTIMO
		aAdd(aIt_TpDoc,	{"EMP","JR","NOR","31","46","Valor  dos Juros"						})
		aAdd(aIt_TpDoc,	{"EMP","V1","NOR","32","47","Variacao Cambial a Longo Prazo"		})
		aAdd(aIt_TpDoc,	{"EMP","V2","NOR","33","48","Variacao Cambial a Curto Prazo"		})
		aAdd(aIt_TpDoc,	{"EMP","V3","NOR","34","49","Variacao Cambial dos Juros"			})
		aAdd(aIt_TpDoc,	{"EMP","BL","NOR","35","50","Baixa do Longo Prazo"					})
		aAdd(aIt_TpDoc,	{"EMP","BC","NOR","36","51","Baixa do Curto Prazo"					})
		aAdd(aIt_TpDoc,	{"EMP","BJ","NOR","37","52","Baixa do Juro"							})
		aAdd(aIt_TpDoc,	{"EMP","I1","NOR","38","53","Pagto do Valor do IRF"					})
		aAdd(aIt_TpDoc,	{"EMP","I4","NOR","39","54","Pagto das Despesas"					})
		aAdd(aIt_TpDoc,	{"EMP","I5","NOR","40","55","Pagto do GAP"							})
		aAdd(aIt_TpDoc,	{"EMP","VL","NOR","41","56","Valor do Debito"						})
		aAdd(aIt_TpDoc,	{"EMP","JR","APR","42","57","Apropriacao dos Juros"					})
		aAdd(aIt_TpDoc,	{"EMP","V1","APR","43","58","Apropriacao Var.Cambial a Longo Prazo"	})
		aAdd(aIt_TpDoc,	{"EMP","V2","APR","44","59","Apropriacao Var.Cambial a Curto Prazo"	})
		aAdd(aIt_TpDoc,	{"EMP","V3","APR","45","60","Apropriacao Var.Cambial dos Juros"		})
	EndIf

	If (nPos := Ascan(aIt_TpDoc,{|aVal| 	aVal[1] == cAplEmp .And. ;
			aVal[2] == cTipoDoc .And. ;
			aVal[3] == cNorApr 			} )) > 0
		cItLctoPco := aIt_TpDoc[nPos, nElemLct]
	EndIf

Return(cItLctoPco)

/*/
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡…o    ³Fa181Legenda³ Autor ³ Mauricio Pequin Jr. ³ Data ³ 05.05.08 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡…o ³ Cria uma janela contendo a legenda da mBrowse ou retorna a ³±±
	±±³          ³ para o BROWSE                                              ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso      ³ Fina181                                                    ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa181Legenda(nReg)

	Local aLegenda := {{"BR_VERDE", 	"Aplicação com Saldo" },;	//"Aplicação com Saldo"
	{"BR_VERMELHO","Aplicação Resgatada" }}	//"Aplicação Resgatada"
	Local uRetorno := .T.

	If nReg = Nil	// Chamada direta da funcao onde nao passa, via menu Recno eh passado
		uRetorno := {}
		Aadd(uRetorno, { 'EH_SALDO <= 0'	, aLegenda[2][1] } )
		Aadd(uRetorno, { 'EH_SALDO > 0'	, aLegenda[1][1] } )
	Else
		BrwLegenda(cCadastro, "Legenda", aLegenda)
	Endif

Return uRetorno

/*/
	ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Programa  ³MenuDef   ³ Autor ³ Ana Paula N. Silva     ³ Data ³23/11/06 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³Parametros do array a Rotina:                               ³±±
	±±³          ³1. Nome a aparecer no cabecalho                             ³±±
	±±³          ³2. Nome da Rotina associada                                 ³±±
	±±³          ³3. Reservado                                                ³±±
	±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
	±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados     ³±±
	±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
	±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
	±±³          ³    4 - Altera o registro corrente                          ³±±
	±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
	±±³          ³5. Nivel de acesso                                          ³±±
	±±³          ³6. Habilita Menu Funcional                                  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³          ³               ³                                            ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
	Local aRotina :={  {OemToAnsi(STR0001),"AxPesqui"  , 0 , 1,,.F.},;  // "Pesquisar"
	{OemToAnsi(STR0002),"AxVisual"  , 0 , 2},;  // "Visualizar"
	{OemToAnsi(STR0003),"a181Resg"  , 0 , 4},;  // "Resgatar"
	{OemToAnsi(STR0004),"a181Estor" , 0 , 5,},;  // "Estorno"
	{OemToAnsi(STR0089),"Fa181Legenda" , 0 ,2,,.F.} }  // "Legenda"
Return(aRotina)

/*/
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Fun‡…o    ³FinA181T   ³ Autor ³ Marcelo Celi Marques ³ Data ³ 04.04.08 ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descri‡…o ³ Chamada semi-automatica utilizado pelo gestor financeiro   ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso      ³ FINA181                                                    ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA181T(aParam)
	cRotinaExec := "FINA181"
	ReCreateBrow("SEH",FinWindow)
	FinA181(aParam[1])
	dbSelectArea("SEH")
	ReCreateBrow("SEH",FinWindow)
	dbSelectArea("SEH")

	INCLUI := .F.
	ALTERA := .F.

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ FA070Diario º Autor ³ Gustavo Henrique º Data ³  31/05/08  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Seleciona codigo do diario contabil, utilizado na quando   º±±
±±º          ³ selecionada contabilizacao on-line.                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Financeiro - Localizacao Portugal                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FA181Diario()

	Local lRet := .T.

	cCodDiario	:= CTBAVerDia()
	lRet := !Empty( cCodDiario )

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} FN181SE5
Função para encontrar o registro de SE5 correspondente ao movimento
da aplicação ou empréstimo posicionado (SEH)

@param cTpDoc, Tipo Doc que será considerado na busca ("RF" ou "PE")
@param cDocumen, Número do documento que será considerado na busca da SE5
@return nRecno, identificação do registro na SE5
@author Pedro Alencar
@since 08/05/2014
@version P12
/*/
//-------------------------------------------------------------------
Static Function FN181SE5 (cTpDoc, cDocumen)

	Local nRecno := 0
	Local cQuery := ""
	Local cAliasTMP := ""
	Default cTpDoc := "RF"
	Default cDocumen := "00"

	cQuery := "SELECT R_E_C_N_O_ "
	cQuery += "FROM " + RetSqlName("SE5") + " SE5 "
	cQuery += "WHERE SE5.E5_DOCUMEN = '" + cDocumen + "' "
	cQuery += "AND SE5.E5_TIPODOC = '" + cTpDoc  + "' "

	cQuery := ChangeQuery(cQuery)
	cAliasTMP := GetNextAlias()
	dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasTMP, .T., .F. )

	//Pega o recno da SE5 referente a aplicação
	( cAliasTMP )->( dbGoTop() )
	nRecno := ( cAliasTMP )->R_E_C_N_O_

	(cAliasTMP)->( dbCloseArea() )
	FErase( cAliasTMP + GetDBExtension() )

Return nRecno

//------------------------------------------------------------------------------------------
/* {Protheus.doc} FA181Parc
Habilita um markbrowse para selecionar as parcelas do contrato de emprestimo

@author    Ronaldo Tapia
@version   11.80
@since     06/07/2016
@protected
*/
//------------------------------------------------------------------------------------------

Static Function FA181Parc(cCodCont)

	Local cFiltro   := ""
	Local aSize	   	:= FWGetDialogSize( oMainWnd )
	Local nTop		:= 0
	Local nLeft	   	:= 0
	Local lEnd		:=	.F.
	Local oDlg		:= Nil
	Local oMark	   	:= Nil
	Local bParcela	:= {|| Processa({|| lEnd := FA181GetP( oMark,cCodCont )}, STR0090), Iif(lEnd, oDlg:End(), MsgInfo(STR0091,STR0090))} //###"Parcelas do contrato de empréstimo" ###"Selecione algum registro"

	Default cCodCont := SEH->EH_NUMERO

	Private nSelMax := 1
	Private nJaSel  := 0

// Desabilita opções do menu
	aRotina := {}

// Verifica se encontra as parcelas do contrato
	If SE2->(dbseek(xFilial("SE2")+"EMP"+cCodCont))

		oDlg := MsDialog():New( nTop, nLeft, aSize[3], aSize[4],STR0092,,,,,,,,, .T.,,,, .F. ) //"Seleção das parcelas do contrato"

		// Define filtro para seleção
		cFiltro := "E2_PREFIXO=='EMP' .And. E2_TIPO=='PR' .And. ALLTRIM(E2_ORIGEM)=='FINA171' .And. E2_NUM== '"+cCodCont+"' .And. E2_SALDO > 0"

		// Salva a area atual
		aAreaSE2 := SE2->(GetArea())

		// Instanciamento do classe
		oMark := FWMarkBrowse():New()
		oMark:SetOwner( oDlg )

		// Definição da tabela a ser utilizada
		oMark:SetAlias('SE2')
		SE2->(DBSetOrder(3))

		//Configuração de opções
		oMark:SetMenuDef( "" )
		oMark:SetWalkThru( .F. )
		oMark:SetAmbiente( .F. )
		oMark:AddButton("Processa",bParcela)

		// Define quais campos serão mostrados na seleção
		oMark:SetOnlyFields( { 'E2_PREFIXO','E2_NUM','E2_PARCELA','E2_VENCREA','E2_VALOR','E2_JUROS','E2_SALDO','E2_BAIXA'} )

		// Define a titulo do browse de marcacao
		oMark:SetDescription(STR0092) //"Seleção das parcelas do contrato"

		// Define o campo que sera utilizado para a marcação
		oMark:SetFieldMark( 'E2_OK' )

		// Permite marcar apenas um registro
		oMark:SetCustomMarkRec({||FA181Sel(oMark)})

		// Define a legenda
		oMark:AddLegend( "E2_SALDO<E2_VALOR", "RED",STR0093) //Aplicação Resgatada Parcial
		oMark:AddLegend( "E2_SALDO=E2_VALOR", "GREEN" ,STR0094) //"Aplicação com Saldo"

		// Definição do filtro de aplicacao
		oMark:SetFilterDefault(cFiltro)

		// Ativacao da classe
		oMark:Activate()

		// Ativação do container
		oDlg:Activate()

		// Restaura area local
		RestArea(aAreaSE2)
	Else
		MsgInfo(STR0095,STR0038) //"Não foram encontradas parcelas para este contrato!" //"Atenção"
		Return .F.
	EndIf

Return NIL

//------------------------------------------------------------------------------------------
/* {Protheus.doc} FA181GetP
Identifica os registros selecionados no markbrowser

@author    Ronaldo Tapia
@version   11.80
@since     06/07/2016
@protected
*/
//------------------------------------------------------------------------------------------

Static Function FA181GetP(oMark,cCodCont,lAutomato)

	Local cMarca	:= IF(EMPTY(lAutomato),oMark:Mark(),'')
	Local lRet		:= .F.

	Default cCodCont := SEH->EH_NUMERO
	DEFAULT lAutomato := .F.

//Zera variaveis da tela
	NA181VPLP1 := 0
	NA181VPLP2 := 0
	NA181VJUR1 := 0
	NA181VLDEB := 0
	nA181VTOT1 := 0
	nA181VTOT2 := 0

// Posiciona no arquivo correto
	dbSelectArea("SE2")
	SE2->(dbSetOrder(1))	//E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA
	If SE2->(MsSeek(xFilial("SE2")+"EMP"+cCodCont)) .OR. SE2->(MsSeek(xFilial("SE2")+"TEM"+cCodCont))

		// Percorre todas as parcelas e verifica qual foi selecionada
		While !SE2->( EOF())
			If lAutomato .OR. oMark:IsMark(cMarca)
				// Preenche com o valor das parcelas selecionadas
				// Parcela com carencia não tem amortizacao no saldo do emprestimo
				If SE2->E2_VALOR = 0.01
					NA181VPLP1 := 0
				Else
					If SE2->E2_MOEDA > 1
						NA181VPLP1 := xMoeda(SE2->E2_VALOR - SE2->E2_JUROS,SE2->E2_MOEDA,1)
						NA181VPLP2 := SE2->E2_VALOR - SE2->E2_JUROS
						NA181VLDEB := xMoeda(SE2->E2_VALOR,SE2->E2_MOEDA,1)
						NA181VJUR1 := xMoeda(SE2->E2_JUROS,SE2->E2_MOEDA,1)
						NA181SJUR1 := xMoeda(SE2->E2_JUROS,SE2->E2_MOEDA,1)
					Else
						NA181VPLP1 := SE2->E2_VALOR - SE2->E2_JUROS
						NA181VPLP2 := SE2->E2_VALOR - SE2->E2_JUROS
						NA181VLDEB := SE2->E2_VALOR
						NA181VJUR1 := SE2->E2_JUROS
						NA181SJUR1 := SE2->E2_JUROS
					EndIf
				EndIf
				NA181VJUR2 := SE2->E2_JUROS
				NA181SJUR2 := SE2->E2_JUROS
				NA181STOT1 := nA181SPLP1 + NA181VJUR1
				NA181STOT2 := nA181SPLP2 + NA181VJUR2
				DA181DTAPR := SE2->E2_VENCREA

				lRet		:= .T.

				nA181VTOT1 := nA181VPLP1+nA181VPCP1+nA181VJUR1+nA181VVCLP+nA181VVCCP+nA181VVCJR
				nA181VTOT2 := nA181VPLP2+nA181VPCP2+nA181VJUR2
				IF !EMPTY(SEH->EH_TAXAIOF)
					n181VlIOF := FIN_IOF(SEH->EH_APLEMP,nA181VPLP1,(dDataBase-SEH->EH_DATA),SEH->EH_TAXAIOF)
				ENDIF

				// Alimenta as variaveis do titulo provisorio no contas a pagar
				cNumSE2 := SE2->E2_NUM
				cParSE2 := SE2->E2_PARCELA
				lParcela := .T.

				IF lAutomato
					EXIT
				ENDIF
			EndIf
			SE2->( DbSkip() )
		Enddo
	ENdif

// Preenche o menu novamente
	aRotina := MenuDef()

Return(lRet)

//------------------------------------------------------------------------------------------
/* {Protheus.doc} FA181Sel
Verifica se registro foi selecionado

@author    Ronaldo Tapia
@version   11.80
@since     07/07/2016
@protected
*/
//------------------------------------------------------------------------------------------

Static Function FA181Sel(oMark)

	Local cParSel  := SE2->E2_PARCELA // Parcela selecionada
	Local nReg 	 := Recno()
	Local cNumero  := SE2->E2_NUM
	Local lParAnt  := .F.

// Verifica se foi marcada
	If (!oMark:IsMark())
		nJaSel ++
		If nJaSel > nSelMax
			MsgInfo(STR0091,STR0038) //"Selecione algum registro" //"Atenção"
			nJaSel --
			Return .t.
		EndIf

		// Verifica se existem parcelas anteriores que não foram baixadas
		lParAnt := FA181PAnt(cNumero,cParSel)
		If lParAnt
			SE2->(DbGoTo(nReg))
			MsgInfo(STR0096,STR0038) //"Existem parcelas anteriores que não foram baixadas. Verifique!" //"Atenção"
			nJaSel --
			Return .T.
		EndIf

		// Atualiza campo OK
		RecLock(oMark:Alias(),.F.)
		(oMark:Alias())->E2_OK  := oMark:Mark()
		(oMark:Alias())->(MsUnLock())
	Else
		// Libera campo OK
		RecLock(oMark:Alias(),.F.)
		(oMark:Alias())->E2_OK  := ""
		(oMark:Alias())->(MsUnLock())
		nJaSel --
	EndIf

Return .T.

//------------------------------------------------------------------------------------------
/* {Protheus.doc} FA181Sel
Verifica se existem parcelas anteriores que não foram baixadas
@author    Ronaldo Tapia
@version   11.80
@since     08/07/2016
@protected
*/
//------------------------------------------------------------------------------------------

Static Function FA181PAnt(cNumero,cParSel)

	Local lRet := .F.

	SE2->(dbGoTop())
	SE2->(dbSetOrder(3))
	While SE2->(!EOF()) .And. xFilial("SE2") == SE2->E2_FILIAL .And. SE2->E2_NUM == cNumero .And. VAL(SE2->E2_PARCELA) < VAL(cParSel)
		If SE2->E2_SALDO <> 0
			Return .T.
		EndIf
	Enddo

Return lRet

//------------------------------------------------------------------------------------------
/* {Protheus.doc} F181CanSE2
Cancela a baixa do titulo PR (parcela do emprestimo selecionada no momento do pagamento/restate)
do emprestimo, ou caso não tenha sido vinculada a parcela no momento do pagamento/resgate, é estornada
a baixa de todas as parcelas (já que todas foram baixadas).

@author    Renato Ito
@version   12.1.25
@since     06/02/2020

@param cFil, Character, EI_FILIAL
@param cAplemp, Character, EI_APLEMP
@param cNumero, Character, EI_NUMERO
@param cRevisao, Character, EI_REVISAO
@param cTipo, Character, EI_TIPO
@param cParcela, Character, EI_PARCELA
@return lRet, Logical, indica se conseguiu localizar o(s) título(s)
*/
//------------------------------------------------------------------------------------------

Static Function F181CanSE2(cFil As Character, cAplemp As Character, cNumero As Character, cRevisao As Character, cTipo As Character, cParcela As Character ) As Logical

	Local cQuery 	As Character
	Local cQry1		As Character
	Local oPrepared As Object
	Local lRet		As Logical

	lRet := .T.

	cNumero		:= PadR(cNumero, TamSX3("E2_NUM")[1] )
	cParcela	:= PadR(cParcela, TamSX3("E2_PARCELA")[1] )

	dbSelectArea("SE2")
	SE2->(dbSetOrder(1))	// FILIAL + PREFIXO + NUMERO + PARCELA + TIPO + FORNECEDOR + LOJA

	If !Empty(cParcela)	//aqui está sendo cancelado apenas uma parcela ( baixa de parcela )
		If SE2->( DbSeek( xFilial("SE2",cFil) + "EMP" + cNumero + cParcela +"PR" ) ) .OR. SE2->( DbSeek( xFilial("SE2",cFil) + "TEM" + cNumero + cParcela +"PR" ) )
			If !__lNewProc
				If !Empty(SE2->E2_BAIXA)
					Reclock("SE2",.F.)
					SE2->E2_SALDO := SE2->E2_VALOR
					SE2->E2_BAIXA := Ctod("//")
					SE2->( MsUnlock() )
				EndIf
			Else
				If __lEstBx .and. !F181EstSub()
					DisarmTransaction()
					Break
				Endif
			Endif	
		Else
			lRet := .F.
		EndIf
	Else // aqui está sendo cancelando a baixa que não foi selecionado uma parcela
		If SE2->(DbSeek(xFilial("SE2", cFil)+"EMP"+ cNumero)) .OR. SE2->(DbSeek(xFilial("SE2", cFil)+"TEM"+ cNumero))

			cQuery := 'SELECT COUNT(EI_PARCELA) PARCELA FROM' + RetSqlName("SEI") + 'WHERE '
			cQuery += 'EI_FILIAL = ? '
			cQuery += 'AND EI_APLEMP =? '
			cQuery += 'AND EI_NUMERO = ? '
			cQuery += 'AND EI_REVISAO =? '
			cQuery += 'AND EI_TIPO = ? '
			cQuery += 'AND EI_PARCELA = ? '
			cQuery += 'AND EI_STATUS = ? '
			cQuery += 'AND D_E_L_E_T_ = ? '
			cQuery := ChangeQuery(cQuery)

			oPrepared:=FWPreparedStatement():New(cQuery)
			oPrepared:SetString(1, cFil)
			oPrepared:SetString(2, cAplemp)
			oPrepared:SetString(3, cNumero)
			oPrepared:SetString(4, cRevisao)
			oPrepared:SetString(5, cTipo)
			oPrepared:SetString(6, cParcela)
			oPrepared:SetString(7, Nil)
			oPrepared:SetString(8, Nil)

			While SE2->(!Eof()) .And. SE2->E2_FILIAL == xFilial("SE2", cFil) .And. SE2->E2_PREFIXO $ "EMP|TEM" .And. SE2->E2_NUM == cNumero
				If SE2->E2_TIPO <> "PR" .Or. Alltrim(SE2->E2_ORIGEM) <> "FINA171" .Or. Empty(SE2->E2_BAIXA)
					SE2->(dbSkip())
					Loop
				EndIf

				oPrepared:SetString(6, SE2->E2_PARCELA)
				cQry1 := oPrepared:GetFixQuery()

				If MpSysExecScalar(cQry1,"PARCELA") > 0
					SE2->(dbSkip())
					Loop
				EndIF

				Reclock("SE2",.F.)
				SE2->E2_SALDO := SE2->E2_VALOR
				SE2->E2_BAIXA := Ctod("//")
				SE2->( MsUnlock() )
				SE2->(DbSkip())
			EndDo
			oPrepared:Destroy()
		Else
			lRet := .F.
		EndIf
	EndIf

Return lRet

//------------------------------------------------------------------------------------------
/* {Protheus.doc} FinIniVar
Inicia as varíaveis estáticas da rotina FINA181.
@author    Simone Mie Sato Kakinoana
@version   12.1.27
@since     02/09/2020
*/
//-------------------------------------------------------------------------------
Static Function FinIniVar()

	If TYPE("lMovEnt05") == 'U' .or. lMovEnt05 == Nil
		lMovEnt05	:= CtbMovSaldo("CT0",,'05')
	EndIf

	If TYPE("lMovEnt06") == 'U' .or. lMovEnt06 == Nil
		lMovEnt06	:= CtbMovSaldo("CT0",,'06')
	EndIf

	If TYPE("lMovEnt07") == 'U' .or. lMovEnt07 == Nil
		lMovEnt07	:= CtbMovSaldo("CT0",,'07')
	EndIf

	If TYPE("lMovEnt08") == 'U' .or. lMovEnt08 == Nil
		lMovEnt08	:= CtbMovSaldo("CT0",,'08')
	EndIf

	If TYPE("lMovEnt09") == 'U' .or. lMovEnt09 == Nil
		lMovEnt09	:= CtbMovSaldo("CT0",,'09')
	EndIf

	__oUltResg := NIL
 	__lBxParc := .T. 
 	__lNewProc := .F.
	__cMVFTPO := SuperGetMv("MV_FEMPTPO",.F.,"BOL")
	__lEstBx := .T.

Return
//------------------------------------------------------------------------------------------
/* {Protheus.doc} F181ResFAF
Obtenção da última data de resgate para gravação no EH_DATARES

@author    Simone Mie Sato Kakinoana
@version   12.1.27
@since     23/12/2020
*/
//-------------------------------------------------------------------------------
Static Function F181ResFAF(cSeq)

	Local cQuery	as Character
	Local cAliasTmp	as Character
	Local cTipo		as Character
	Local cAux		as Character

	Local dRetorno	as Date
	Local dUltResg	as Date

	DEFAULT cSeq	:= ""

	cQuery 	:= ""
	cAliasTmp	:= ""
	dUltResg	:= SEH->EH_DATARES

	cTipo		:= GetMv("MV_APLCAL4")
	cAux 		:= "("+ strtran(cTipo,"|","','")+")"
	cTipo		:= strtran(cAux,'"',"'")

	IF __oUltResg == NIL

		cQuery :=	" SELECT MAX(EI_DATA) MAXDATA "
		cQuery +=	" FROM ? SEI "
		cQuery += 	" WHERE SEI.EI_FILIAL = ?"
		cQuery += 	" AND SEI.EI_APLEMP = 'APL'"
		cQuery += 	" AND SEI.EI_TIPODOC = 'RG' "
		cQuery += 	" AND SEI.EI_TIPO IN " +cTipo
		cQuery += 	" AND SEI.EI_STATUS <> 'C' "
		cQuery += 	" AND SEI.EI_MOTBX = 'NOR' "
		cQuery += 	" AND SEI.EI_NUMERO = ?"
		cQuery +=	" AND SEI.D_E_L_E_T_ = ' '"
		cQuery +=  	" AND SEI.EI_SEQ <> ? "
		cQuery := ChangeQuery(cQuery)
		__oUltResg := FWPreparedStatement():New(cQuery)
	EndIf

	__oUltResg:SetNumeric(1,RetSqlName("SEI"))
	__oUltResg:SetString(2,xFilial("SEI"))
	__oUltResg:SetString(3,SEH->EH_NUMERO )
	__oUltResg:SetString(4,cSeq)

	cQuery := __oUltResg:GetFixQuery()

	cAliasTmp := MpSysOpenQuery(cQuery)

	TCSetField(cAliasTmp,"MAXDATA", "D")

	dRetorno := (cAliasTmp)->MAXDATA

Return(dRetorno)

//------------------------------------------------------------------------------------------
/* {Protheus.doc} FinIniVar
Localiza Fornecedor pelos regitros gerados - SE2 - vinculados ao contrato

@author    Norberto M de Melo
@version   28/04/2021
@see
*/
//-------------------------------------------------------------------------------
FUNCTION FornEmpr(cNumero AS CHARACTER, dData AS DATE, cNaturez AS CHARACTER) AS NUMERIC
	LOCAL nRet AS NUMERIC	// SA2->(RECNO())
	LOCAL cSA2Cursor AS CHARACTER
	LOCAL cSA2Filial AS CHARACTER
	LOCAL cSE2Filial AS CHARACTER
	LOCAL cQry AS CHARACTER
	LOCAL aArea AS ARRAY

	DEFAULT cNumero := IF(!SEH->(EOF()),SEH->EH_NUMERO,"")
	DEFAULT dData := IF(!SEH->(EOF()),SEH->EH_DATA,CTOD(""))
	DEFAULT cNaturez := IF(!SEH->(EOF()),SEH->EH_NATUREZ,"")

	aArea := GetArea()
	nRet := 0
	cSA2Filial := xFilial("SA2")
	cSE2Filial := xFilial("SE2",cSA2Filial)
	cSA2Cursor := GetNextAlias()

	cQry := "SELECT DISTINCT SA2.R_E_C_N_O_ SA2RECNO "
	cQry += "FROM " + RetSqLName("SA2") + " SA2 "
	cQry += "INNER JOIN " + RetSqLName("SE2") + " SE2 ON '" + cSE2Filial + "' =  SA2.A2_FILIAL AND E2_FORNECE = A2_COD AND E2_LOJA = A2_LOJA "
	cQry += "WHERE "
	cQry += "E2_FILIAL = '" + xFilial("SE2") + "' "
	cQry += "AND E2_PREFIXO IN ('EMP','TEM') "
	cQry += "AND E2_NUM = '" + cNumero + "' "
	cQry += "AND E2_TIPO = 'PR ' "
	cQry += "AND E2_EMISSAO = '" + DTOS(dData) + "' "
	cQry += "AND E2_NATUREZ = 'EMPRESTIMO' "
	cQry += "AND SE2.D_E_L_E_T_ = '' "
	cQry += "AND SA2.D_E_L_E_T_ = '' "

	cQry := ChangeQuery(cQry)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQry),cSA2Cursor,.T.,.T.)
	TcSetField(cSA2Cursor,"SA2RECNO","N",15,0)

	IF !(cSA2Cursor)->(EOF())
		nRet := (cSA2Cursor)->SA2RECNO
	ENDIF
	(cSA2Cursor)->(DBCLOSEAREA())
	RestArea(aArea)

RETURN nRet


/* {Protheus.doc} SEIMovSummary
Obtem o resumo de movimentações SEI sobre apropriações de uma determinada Aplicação SEH

@author    Norberto M de Melo
@version   14/07/2021
@see
*/
STATIC FUNCTION SEIMovSummary(nResgate AS NUMERIC, dUltApr AS DATE,;
		cFil AS CHARACTER, cAplEmp AS CHARACTER, cNumero AS CHARACTER, cRevisao AS CHARACTER, lAplCota AS LOGICAL) AS ARRAY

	LOCAL aAreaAtual AS ARRAY
	LOCAL aRet AS ARRAY
	LOCAL bValidAlias AS BLOCK
	LOCAL cAliasSEI AS CHARACTER
	LOCAL cNulo AS CHARACTER
	LOCAL cType AS CHARACTER
	LOCAL cDtUltApr AS CHARACTER
	LOCAL nAprop AS NUMERIC
	LOCAL nPercent AS NUMERIC
	LOCAL nPos AS NUMERIC
	LOCAL nSaldoApl AS NUMERIC
	LOCAL lResgAprop AS LOGICAL

	DEFAULT nResgate := SEH->EH_VALOR
	DEFAULT cFil := SEH->EH_FILIAL
	DEFAULT cAplEmp := SEH->EH_APLEMP
	DEFAULT cNumero := SEH->EH_NUMERO
	DEFAULT cRevisao := SEH->EH_REVISAO
	DEFAULT dUltApr := SEH->EH_ULTAPR
	DEFAULT lAplCota := .T.

	aRet := {}
	lResgAprop := .F.

	IF !EMPTY(cNumero + cRevisao)
		cDtUltApr := DTOS(dUltApr)
		cNulo := SPACE(LEN(cDtUltApr))
		nSaldoApl := SEH->EH_VALOR
		nPercent := (nResgate / nSaldoApl)
		aAreaAtual := GETAREA()
		bValidAlias := {|cAlias,cType| IF(FindFunction('TCOBJECT'),TCObject(cAlias,@cType),TCCANOPEN(cAlias))}
		cType := ''

		WHILE .T.
			cAliasSEI := GetNextAlias()
			IF !EMPTY(cAliasSEI) .AND. !EVAL(bValidAlias,cAliasSEI,cType) .AND. EMPTY(SELECT(cAliasSEI))
				EXIT
			ENDIF
		ENDDO

		BeginSQL Alias cAliasSEI
			SELECT EI_FILIAL, EI_APLEMP, EI_DATA, EI_NUMERO, EI_TIPODOC, SUM(EI_VALOR) VALOR, EI_ULTAPR
			FROM %Table:SEI% SEI
			WHERE 
					EI_FILIAL = %XFilial:SEI%
				AND EI_APLEMP = %Exp:cAplEmp%
				AND EI_NUMERO = %Exp:cNumero%
				AND EI_REVISAO = %Exp:cRevisao%
				AND (
						(EI_MOTBX = 'APR' AND EI_ULTAPR <= %Exp:cDtUltApr% AND EI_ULTAPR <> %Exp:cNulo%)
					OR 
						(EI_MOTBX = 'NOR' AND EI_TIPODOC = 'BP' AND EI_DATA <= %Exp:cDtUltApr%)
					)
				AND SEI.%NotDel%
			GROUP BY EI_FILIAL, EI_APLEMP, EI_DATA, EI_NUMERO, EI_TIPODOC, EI_ULTAPR
			ORDER BY EI_FILIAL, EI_APLEMP, EI_DATA, EI_NUMERO, EI_TIPODOC
		EndSQL

		WHILE !(cAliasSEI)->(EOF())
			IF (cAliasSEI)->EI_TIPODOC == 'BP'
				nSaldoApl -= (cAliasSEI)->VALOR
				nPercent := (nResgate / nSaldoApl)
				(cAliasSEI)->(DBSKIP())
			ENDIF
			lResgAprop := ( !lAplCota .And. SEH->EH_SALDO == 0 .And. !Empty((cAliasSEI)->EI_ULTAPR) )
			nAprop := ((cAliasSEI)->VALOR * If(lResgAprop, 1, nPercent)) * (-1)
			IF !EMPTY(nPos := ASCAN(aRet,{|e| e[1] == (cAliasSEI)->EI_TIPODOC}))
				If lResgAprop
					aRet[nPos][2] := nAprop
					aRet[nPos][4] := nAprop
				Else
					aRet[nPos][2] += nAprop
					aRet[nPos][4] += nAprop
				EndIf
			ELSE
				AADD(aRet,(cAliasSEI)->({EI_TIPODOC,nAprop,0,nAprop}))
			ENDIF
			(cAliasSEI)->(DBSKIP())
		ENDDO

		(cAliasSEI)->(DBCLOSEAREA())
		RestArea(aAreaAtual)
	ENDIF

RETURN aRet

/*/{Protheus.doc} F181PerAut
	Altera os perguntes da rotina, para execuções automaticas
	@type  Static Function
	@author Vitor Duca
	@since 16/11/2021
	@version 1.0
	@param aParam, Array, Matriz contendo a ordem do SX1 e seu conteudo
/*/
Static Function F181PerAut(aParam As Array)
	Local nX As Numeric
	Local cVarParam As Character 

	nX := 0 
	cVarParam := ""

	For nX := 1 to Len(aParam)
		cVarParam := Alltrim(Upper(aParam[nX][1]))
		If "MV_PAR" $ cVarParam
			&(cVarParam) := aParam[nX][2]
		EndIf
	Next nX
Return 

/*/{Protheus.doc} F181Subst
	Realiza a substituição do titulo provisorio da parcela no emprestimo
	novo processo que so sera habilitado no novo gestor financeiro
	@type  Static Function
	@author Vitor Duca
	@since 08/04/2022
	@version 1.0
	@param cChavePR, Character, Chave do titulo provisorio que sera substituido
	@param nValor, Numeric, Valor do novo titulo que sera gerado
	@return lRet, Logical, Define se a substituição foi realizada com sucesso
/*/
Static Function F181Subst(cChavePR As Character, nValor As Numeric) As Logical
	Local aExecAuto As Array
	Local aAuxTitPrv As Array
	Local aTitPrv As Array
	Local lRet As Logical

	DEFAULT cChavePR := ""

	aExecAuto := {}
	aAuxTitPrv := {}
	aTitPrv := {}
	lRet := .F.

	SE2->(DbSetOrder(1))
	If SE2->(MsSeek(cChavePR))
		lMsErroAuto := .F.

		Aadd(aExecAuto, {"E2_NUM", SE2->E2_NUM, NIL})
		Aadd(aExecAuto, {"E2_PREFIXO", SE2->E2_PREFIXO, NIL})
		Aadd(aExecAuto, {"E2_PARCELA", SE2->E2_PARCELA, NIL})
		Aadd(aExecAuto, {"E2_TIPO", __cMVFTPO, NIL})
		Aadd(aExecAuto, {"E2_NATUREZ", SE2->E2_NATUREZ, NIL})
		Aadd(aExecAuto, {"E2_FORNECE", SE2->E2_FORNECE, NIL})
		Aadd(aExecAuto, {"E2_LOJA", SE2->E2_LOJA, NIL})
		Aadd(aExecAuto, {"E2_EMISSAO", SE2->E2_EMISSAO, NIL})
		Aadd(aExecAuto, {"E2_VENCTO", SE2->E2_VENCTO, NIL})
		Aadd(aExecAuto, {"E2_VENCREA", SE2->E2_VENCREA, NIL})
		Aadd(aExecAuto, {"E2_VALOR", nValor, NIL})
		Aadd(aExecAuto, {"E2_HIST", STR0106 + " - " + SEH->EH_NUMERO + SEH->EH_REVISAO, NIL})
		Aadd(aExecAuto, {"E2_ORIGEM", "FINA181", NIL})

		aAuxTitPrv := { { "E2_PREFIXO", SE2->E2_PREFIXO, NIL },;
						{ "E2_NUM", SE2->E2_NUM, NIL },;
						{ "E2_PARCELA", SE2->E2_PARCELA, NIL },;
						{ "E2_TIPO", "PR ", NIL },;
						{ "E2_FORNECE", SE2->E2_FORNECE, NIL },;
						{ "E2_LOJA", SE2->E2_LOJA, NIL }}

		aadd(aTitPrv, aAuxTitPrv)

		MsExecAuto({|a,b,c,d,e,f,g,h,i,j| FINA050(a,b,c,d,e,f,g,h,i,j)},aExecAuto,,6,,,,,,aTitPrv)

		If !lMsErroAuto
			lRet := .T.	
		Endif
	Endif	

Return lRet

/*/{Protheus.doc} F181BxParc
	Realiza a baixa do titulo efetivo referente a parcela do emprestimo
	novo processo de pagamento das parcelas no emprestimo
	disponivel apenas para o novo gestor
	@type  Static Function
	@author Vitor Duca
	@since 11/04/2022
	@version 1.0
	@param cChaveTit, Character, Chave do titulo principal
	@param cBanco, Character, Codigo do banco
	@param cConta, Character, Conta corrente do banco
	@param cAgencia, Character, Agencia do banco
	@param cNaturez, Character, Natureza que sera utilizada na baixa
	@param dDtBaixa, Date, Data da baixa
	@return lRet, Logical, Define se a operação foi concluida com sucesso
/*/
Static Function F181BxParc(cChaveTit As Char, cBanco As Char, cConta As Char, cAgencia As Char, cNaturez As Char, dDtBaixa As Date) As Logical
	Local lRet As Logical
	Local aExecAuto As Array
	Local aPerg As Array

	DEFAULT cChaveTit := ""
	DEFAULT cBanco := ""
	DEFAULT cConta := ""
	DEFAULT cAgencia := ""
	DEFAULT cNaturez := ""
	DEFAULT dDtBaixa := dDataBase

	aExecAuto := {}
	aPerg := {}
	lRet := .F.

	SE2->(DbSetOrder(1))
	If SE2->(DbSeek(cChaveTit))
		lMsErroAuto := .F.

		Aadd(aExecAuto, {"E2_PREFIXO", SE2->E2_PREFIXO, NIL})
		Aadd(aExecAuto, {"E2_NUM", SE2->E2_NUM, NIL})
		Aadd(aExecAuto, {"E2_PARCELA", SE2->E2_PARCELA, NIL})
		Aadd(aExecAuto, {"E2_TIPO", SE2->E2_TIPO, NIL})
		Aadd(aExecAuto, {"E2_FORNECE", SE2->E2_FORNECE, NIL})
		Aadd(aExecAuto, {"E2_LOJA", SE2->E2_LOJA, NIL})
		Aadd(aExecAuto, {"E2_NATUREZ", Padr(cNaturez, TamSx3("E2_NATUREZ")[1]), NIL})
		Aadd(aExecAuto, {"AUTMOTBX", "DEBITO CC", NIL})
		Aadd(aExecAuto, {"AUTBANCO", Padr(cBanco, TamSx3("A6_COD")[1]), NIL})
		Aadd(aExecAuto, {"AUTAGENCIA", Padr(cAgencia, TamSx3("A6_AGENCIA")[1]), NIL})
		Aadd(aExecAuto, {"AUTCONTA", Padr(cConta, TamSx3("A6_NUMCON")[1]), NIL})
		Aadd(aExecAuto, {"AUTVLRPG", SE2->E2_SALDO, NIL})
		Aadd(aExecAuto, {"AUTDTBAIXA", dDtBaixa, NIL})
		Aadd(aExecAuto, {"AUTDTDEB", dDtBaixa, NIL})
		
		MsExecAuto({|x,y| FINA080(x,y)}, aExecAuto, 3)

		If !lMsErroAuto
			lRet := .T.
		Endif
	Endif

Return lRet

/*/{Protheus.doc} F181EstSub
	Estorno da baixa e substituição no novo processo de pagamento das parcelas em um 
	emprestimo, processo so esta disponivel no novo gestor financeiro
	@type  Static Function
	@author Vitor Duca
	@since 11/04/2022
	@version 1.0
	@return lRet, Logical, Define se a operação foi concluida com sucesso
/*/
Static Function F181EstSub() As Logical
	Local nRecno As Numeric
	Local lRet As Logical
	Local nRecnoPR As Numeric
	Local aExecAuto As Array 

	lRet := .F.
	aExecAuto := {}
	nRecnoPR := SE2->(Recno())
	nRecno := F181Rastr() //Retorna o recno do titulo gerado pela substituição
	
	If nRecno > 0
		SE2->(DbGoto(nRecno))

		If F181EstBx()
			lMsErroAuto := .F.

			Aadd(aExecAuto, {"E2_PREFIXO", SE2->E2_PREFIXO, NIL})
			Aadd(aExecAuto, {"E2_NUM", SE2->E2_NUM, NIL})
			Aadd(aExecAuto, {"E2_PARCELA", SE2->E2_PARCELA, NIL})
			Aadd(aExecAuto, {"E2_TIPO", SE2->E2_TIPO, NIL})
			Aadd(aExecAuto, {"E2_NATUREZ", SE2->E2_NATUREZ, NIL})
			Aadd(aExecAuto, {"E2_FORNECE", SE2->E2_FORNECE, NIL})
			Aadd(aExecAuto, {"E2_LOJA", SE2->E2_LOJA, NIL})
		
			MsExecAuto({|x,y,Z| FINA050(x,y,Z)},aExecAuto,,5)

			If !lMsErroAuto
				lRet := .T.
			Endif
		Endif		
	Endif

	SE2->(DbGoto(nRecnoPR))
Return lRet

/*/{Protheus.doc} F181Rastr
	Pesquisa o rastreio do titulo substituido 
	@type  Static Function
	@author Vitor Duca
	@since 11/04/2022
	@version 1.0
	@return nRecno, Numeric, R_E_C_N_O_ do titulo gerado atraves da substituição
/*/
Static Function F181Rastr() As Numeric
	Local nRecno As Numeric	
	Local aAreaFII As Array
	Local aAreaSE2 As Array

	nRecno := 0
	aAreaFII := FII->(GetArea())
	aAreaSE2 := SE2->(GetArea())

	FII->(DbSetOrder(1))
	If FII->(DbSeek(xFilial("FII")+"SE2"+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)))
		SE2->(DbSetOrder(1))
		If SE2->(DbSeek(FII->(FII_FILIAL+FII_PREFDE+FII_NUMDES+FII_PARCDE+FII_TIPODE+FII_CFDES+FII_LOJADE)))
			nRecno := SE2->(Recno())
		Endif		 
	Endif

	RestArea(aAreaFII)
	RestArea(aAreaSE2)

Return nRecno

/*/{Protheus.doc} F181EstBx
	Estorna a baixa efetuada no titulo efetivo gerado atraves do emprestimo
	Processo existente apenas no novo gesto financeiro
	@type  Static Function
	@author Vitor Duca
	@since 11/04/2022
	@version 1.0
	@return lRet, Logical, Define se a operação foi concluida com sucesso
/*/
Static Function F181EstBx() As Logical
	Local lRet As Logical
	Local aExecAuto As Array

	lRet := .F.
	aExecAuto := {}

	lMsErroAuto := .F.

	Aadd(aExecAuto, {"E2_PREFIXO", SE2->E2_PREFIXO, NIL})
	Aadd(aExecAuto, {"E2_NUM", SE2->E2_NUM, NIL})
	Aadd(aExecAuto, {"E2_PARCELA", SE2->E2_PARCELA, NIL})
	Aadd(aExecAuto, {"E2_TIPO", SE2->E2_TIPO, NIL})
	Aadd(aExecAuto, {"E2_NATUREZ", SE2->E2_NATUREZ, NIL})
	Aadd(aExecAuto, {"E2_FORNECE", SE2->E2_FORNECE, NIL})
	Aadd(aExecAuto, {"E2_LOJA", SE2->E2_LOJA, NIL})

	MsExecAuto({|x,y| FINA080(x,y)}, aExecAuto, 5)

	If !lMsErroAuto
		lRet := .T.
	Endif

Return lRet

/*/{Protheus.doc} F181EstMov
	Realiza o estorno do movimento da SEI e restaura saldo da SEH
	@type  Function
	@author Vitor Duca
	@since 20/04/2022
	@version 1.0
	@param nRecnoSE2, Numeric, R_E_C_N_O_ do registro na SE2 que esta sendo excluido
	@return lRet, Logical, Retorna se o estornou ocorreu sem erros
/*/
Function F181EstMov(nRecnoSE2 As Numeric) As Logical
	Local aAreaSE2 As Array
	Local aAreaSEH As Array
	Local cQuery As Character
	Local cSeq As Character
	Local lRet As Logical
	Local aExecAuto As Array

	Private lMsErroAuto := .F.

	DEFAULT nRecnoSE2 := 0

	aAreaSE2 := SE2->(GetArea())
	aAreaSEH := SEH->(GetArea())
	aExecAuto := {}
	cSeq := ""
	lRet := .T.

	SE2->(DbGoto(nRecnoSE2))
	If AllTrim(SE2->E2_ORIGEM) == "FINA181" .and. Alltrim(SE2->E2_TIPO) == Alltrim(SuperGetMv("MV_FEMPTPO",.F.,"BOL"))
		SEH->(DbSetOrder(1))
		If SEH->(DbSeek(xFilial("SEH")+Padr(SE2->E2_NUM,TAMSX3("EH_NUMERO")[1]))) .and. SEH->EH_GERPARC == '1'
			cQuery := "SELECT MAX(SEI.EI_SEQ) MAXSEQ "
			cQuery += "FROM " + RetSqlName("SEI") + " SEI "
			cQuery += "WHERE SEI.EI_FILIAL = '" + xFilial("SEI") + "' "
			cQuery += "AND SEI.EI_NUMERO = '" + SE2->E2_NUM + "' "
			cQuery += "AND SEI.EI_PARCELA = '" + SE2->E2_PARCELA + "' "
			cQuery += "AND NOT EXISTS "
			cQuery += 	"(SELECT EST.EI_SEQ "
			cQuery += 	"FROM " + RetSqlName("SEI") + " EST "
			cQuery += 	"WHERE EST.EI_FILIAL = SEI.EI_FILIAL "
			cQuery += 	"AND EST.EI_NUMERO = SEI.EI_NUMERO "
			cQuery += 	"AND EST.EI_REVISAO = SEI.EI_REVISAO "
			cQuery += 	"AND EST.EI_PARCELA = SEI.EI_PARCELA "
			cQuery += 	"AND EST.EI_SEQ = SEI.EI_SEQ "
			cQuery += 	"AND EST.EI_STATUS = 'C' "
			cQuery += 	"AND EST.D_E_L_E_T_ = '') "
			cQuery += "AND SEI.D_E_L_E_T_ = '' "

			cQuery := ChangeQuery(cQuery)

			cSeq := MpSysExecScalar(cQuery, "MAXSEQ")

			If !Empty(cSeq)
				Aadd( aExecAuto, { "NOVOPROCESSO", .T., NIL } )
				Aadd( aExecAuto, { "ESTORNABAIXA", .F., NIL } )

				MsExecAuto({|v,w,x,y| FinA181(v,w,x,y)}, 4, .T., cSeq, aExecAuto)

				If lMsErroAuto
					lRet := .F.
					MostraErro()
				Endif
			Endif	
		Endif
	Endif	

	RestArea(aAreaSE2)
	RestArea(aAreaSEH)
	
Return lRet

/*/{Protheus.doc} F181RstInt
	Verifica e restaura integridade do novo processo de pagamento
	da parcela quando foi solicitado a baixa do titulo efetivo, porem
	por algum motivo não foi possivel fazer a baixa
	@type  Static Function
	@author Vitor Duca
	@since 06/06/2022
	@version 1.0
/*/
Static Function F181RstInt()
	Local nRecno As Numeric
	Local lBkpErrAut As Logical
	Local aArea As Array
	Local aAreaSE2 As Array 
	Local aExecAuto As Array

	nRecno := 0 
	lBkpErrAut := lMsErroAuto
	aArea := GetArea()
	aAreaSE2 := SE2->(GetArea())
	aExecAuto := {}

	If SE2->(DbSeek(xFilial("SE2")+"EMP"+cNumSE2+cParSE2+"PR")) .or. SE2->(DbSeek(xFilial("SE2")+"TEM"+cNumSE2+cParSE2+"PR"))
		nRecno := F181Rastr() //Verifica se a substuição foi feita
		If nRecno > 0 
			SE2->(DbGoto(nRecno))
			If Empty(SE2->E2_BAIXA) .and. SE2->E2_SALDO == SE2->E2_VALOR //Verifica se NÃO foi feita a baixa do titulo efetivo
				
				//Exclui o titulo efetivo para que o usuario consiga realizar o processo novamente
				lMsErroAuto := .F.

				Aadd(aExecAuto, {"E2_PREFIXO", SE2->E2_PREFIXO, NIL})
				Aadd(aExecAuto, {"E2_NUM", SE2->E2_NUM, NIL})
				Aadd(aExecAuto, {"E2_PARCELA", SE2->E2_PARCELA, NIL})
				Aadd(aExecAuto, {"E2_TIPO", SE2->E2_TIPO, NIL})
				Aadd(aExecAuto, {"E2_NATUREZ", SE2->E2_NATUREZ, NIL})
				Aadd(aExecAuto, {"E2_FORNECE", SE2->E2_FORNECE, NIL})
				Aadd(aExecAuto, {"E2_LOJA", SE2->E2_LOJA, NIL})
			
				MsExecAuto({|x,y,Z| FINA050(x,y,Z)},aExecAuto,,5)

			Endif
		Endif
	Endif

	lMsErroAuto := lBkpErrAut

	RestArea(aAreaSE2)
	RestArea(aArea)

Return 
