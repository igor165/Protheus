#INCLUDE "FINA374.ch"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FONT.CH"

STATIC lBlind		:= .T.
Static lFWCodFil	:= .T.
Static lIsIssBx 	:= .T.
Static dLastPcc  	:= dDataBase
Static _oFINA3741   := NIL
Static _oFINA3742   := NIL
Static __cRetISS    := NIL	
Static __cNatPIS    := NIL
Static __cNatCOF    := NIL
Static __cNatCSL	:= NIL
Static __cNatNDF	:= NIL
Static __cNatNCF	:= NIL
Static __F374GRTX	:= NIL
Static __F374CNCF	:= NIL

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FINA374	³ Autor ³ Adrianne Furtado	     ³ Data ³ 03.04.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Rotina de apuração dos impostos Pis, Cofins e 				  ³±±
±±³          ³ CSLL que permite desfazer/descalcular títulos de impostos, ³±±
±±³          ³ quando gerados através de borderô e tornando-se indevidos  ³±±
±±³          ³ posteriomente com relação ao valor mínimo de retenção      ³±±
±±³          ³ (parâmetro MV_VL10925).									  		 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ SigaFin - FINA374										 		  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA374()
  
Local cPerg 	:= "FIN374"
Local aPergs 	:= {}

Private cLote
Private cCadastro 	:= STR0001 //"Verificação de Retenção de Impostos - Pis, Cofins e Csll"
PRIVATE LanceiCtb 	:= .F.
Private aRotina		:= {	{STR0002 ,"AxPesqui" 		, 0 , 1 },; //"Pesquisar"
								{STR0003,"AxVisual" 			, 0 , 2 },; //"Visualizar"
								{'Apurar PCC',"Fa374Gera"	, 0 , 4} ,;
								{'Cancelar',"Fa374Can"		, 0 , 6 }} 
LoteCont("FIN")

F374Static()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                   ³
//³========================================================³
//³ mv_par01 // Mês                                        ³
//³ mv_par02 // Ano			                                ³ 
//³ mv_par03 // De Fornecedor							  			  ³ 
//³ mv_par04 // Até Fornecedor                             ³
//³ mv_par05 // Mostra tela contabilizacao                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega as perguntas selecionadas                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetKey (VK_F12,{|a,b| AcessaPerg("FIN374",.T.)})
Pergunte(cPerg,.F.)

mBrowse( 6, 1,22,75,"SE2",,,,,, Fa040Legenda("SE2"))
Set Key VK_F12 To

F374Clean()

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FA374Gera ³ Autor ³ Mauricio Pequim Jr.   ³ Data ³16.03.04  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Aglutinacao de impostos                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA374                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FA374Gera(cAlias,nReg,nOpcx,lAuto)

Local aSays		:= {}
Local aButtons	:= {}  
Local nOpca		:= 0           
Local nX		:= 0
Local aArea		:= GetArea()
Local cLojaImp	:= PadR( "00", TamSX3( "A2_LOJA" )[1], "0" )

Private cCadastro	:= STR0004 //"Apuração de retenção de PCC"
Private lProcessou	:= .F.

If cPaisLoc <> "BRA"

	If !lBlind
		Aviso(STR0005,STR0006,{"Ok"}) //"Atencao"###"Para utilizar essa rotina é necessário que a base possua o campo E2_PROPCC"
		Aviso(STR0005,STR0007,{"Ok"}) //"Atencao"###"Para utilizar essa rotina é necessário que a base possua o campo E2_FORNPAI"
		Aviso(STR0005,STR0008,{"Ok"}) //"Atencao"###"Para utilizar essa rotina é necessário que a base possua o campo E2_DTBORDER"
	Endif

	Return()
Endif

If GetMv("MV_BX10925") <> "1"
	If !lBlind
		Aviso(STR0005,STR0009,{"Ok"}) //"Atencao"###"Essa rotina calcula a diferenca de impostos Pis, Cofins e CSLL gerados na baixa (MV_BX10925 = '1')."
	Endif
	Return()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ POR MAIS ESTRANHO QUE PARE€A, ESTA FUNCAO DEVE SER CHAMADA AQUI! ³
//³                                                                  ³
//³ A fun‡„o SomaAbat reabre o SE2 com outro nome pela ChkFile para  ³
//³ efeito de performance. Se o alias auxiliar para a SumAbat() n„o  ³
//³ estiver aberto antes da IndRegua, ocorre Erro de & na ChkFile,   ³
//³ pois o Filtro do SE2 uptrapassa 255 Caracteres.                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SomaAbat("","","","P")

DbSelectArea("SA2")
DbSetOrder(1)
MsSeek(xFilial("SA2")+GetMv("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMv("MV_UNIAO")))+cLojaImp)
cForUniao	:= SA2->A2_COD
cLojUniao	:= SA2->A2_LOJA
cNomUniao	:= SA2->A2_NREDUZ	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Sem foro para utiliza‡„o da Aglutinacao de Impostos             ³
//³ N„o permite o acesso simultƒneo … rotina por mais de 1 usuario. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If LockByName("FINA374A",.T.,.F.)
		
	Pergunte("FIN374",.F.)  //Pergunta para chamada da rotina via menu

	If lAuto = Nil .or. !lAuto
		Aadd(aSays,OemToAnsi(STR0017)) //"Este programa tem como objetivo permitir verificação dos impostos Pis, "
		Aadd(aSays,OemToAnsi(STR0018)) //"Cofins e CSLL gerados em um determinado periodo"
			
		AADD(aButtons, { 5,.T.,{|| Pergunte("FIN374",.T.) } } )
		AADD(aButtons, { 6,.T.,{|o| FINR895(@lProcessou)}} )
		AADD(aButtons, { 1,.T.,{|o| nOpca:= 1,o:oWnd:End()}} )
		AADD(aButtons, { 2,.T.,{|o| o:oWnd:End() }} )
			
		FormBatch( cCadastro, aSays, aButtons)// ,,,428)
		
		Pergunte("FIN374",.F.)	
	Else
		//Inicialização das estaticas
		F374Static()
		nOpca	:= 1
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis utilizadas para parametros                   ³
	//³========================================================³
	//³ mv_par01 // Mês                                        ³
	//³ mv_par02 // Ano			                                ³ 
	//³ mv_par03 // De Fornecedor							  			  ³ 
	//³ mv_par04 // Até Fornecedor                             ³
	//³ mv_par05 // Mostra tela contabilizacao                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpca == 1
		If Empty(mv_par01) .or. Empty(mv_par02)
			If !lBlind	
				Aviso(STR0005,STR0019,{"OK"}) //"Atencao"###"As perguntas devem estar preenchidas."
			Endif
			UnLockByName("FINA374A",.T.,.F.)
			Return()
		EndIf
		If !lBlind .and. ((mv_par02 > Year(dDataBase)) .or.;
			((mv_par01 > Month(dDatabase)) .and. (mv_par02 == Year(dDataBase))))
			If !MsgYesNo(STR0020+Chr(13)+STR0021,STR0022) //"O período mes+ano selecionado é posterior a DataBase."###"Deseja continuar mesmo assim?"###"Atenção"
				UnLockByName("FINA374A",.T.,.F.)
				Return()
			EndIf
		EndIf

		//Verifico existencia das naturezas e fornecedor Uniao
		F374NatNew(@cForUniao,@cLojUniao,@cNomUniao)
		
		Processa({|| Fina374Apur(nOpca,@lProcessou,lAuto)})
	Endif

	UnLockByName("FINA374A",.T.,.F.)

	If _oFINA3741 <> NIL .OR. _oFINA3742 <> NIL
		_oFINA3741:Delete()
		_oFINA3741	:= NIL
		_oFINA3742:Delete()
		_oFINA3742	:= NIL
	Endif	
Else
	MsgAlert(STR0010+chr(13)+chr(10)+;	 //"A Verificação de Pis, Cofins e Csll está sendo utilizada"
				STR0011+chr(13)+chr(10)+; //"por outro usuario. Por questoes de integridade de dados, nao"
				STR0012+chr(13)+chr(10)+;  //"‚ permitida a utiliza‡„o desta rotina por mais de um usu rio"
				STR0013,cCadastro) //"simultaneamente. Tente novamente mais tarde."
	Return
Endif

RestArea(aArea)

Return(Nil)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FINA374	³ Autor ³ Adrianne Furtado		  ³ Data ³ 03.04.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa para montagem dos titulos de Pis, Cofins e CSLL - ³±±
±±³          ³ OffLine															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ SigaFin - FINA374													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fina374Apur(nOpca,lProcessou,lAuto)

Local nPIS 			:= 0
Local nCOF 			:= 0
Local nCSL 			:= 0
Local nPISRet		:= 0
Local nCOFRet		:= 0
Local nCSLRet		:= 0
Local nBase			:= 0
Local nTotPIS		:= 0
Local nTotCOF		:= 0
Local nTotCSL		:= 0
Local nTotPISRet	:= 0
Local nTotCOFRet	:= 0
Local nTotCSLRet	:= 0
Local nBaseImp		:= 0
Local nValOutImp	:= 0
Local nValTit 		:= 0
Local nTotAbat		:= 0
Local nAcresc		:= 0
Local nDecresc		:= 0    
Local nRegAtu		:= SM0->(Recno())
Local nVlMinImp		:= GetNewPar("MV_VL10925",5000)
Local nTamForLj		:= TamSx3("E2_FORNECE")[1]+TamSx3("E2_LOJA")[1]
Local nValProc		:= 0
Local aCampos		:= {}
Local aCampos2		:= {}
Local aSays			:= {}
Local aButtons		:= {}
Local aValImp		:= {}
Local aArqs			:= {}
Local cProcess		:= ""
Local cModRetPIS	:= GetNewPar( "MV_RT10925", "1" )
Local cModTot		:= GetNewPar( "MV_MT10925", "1" )
Local cCodRetPis	:= ""
Local cCodRetCof	:= ""
Local cCodRetCsl	:= ""
Local lSest			:= .t.  //Verifica campo de SEST
					
//Considero juros multa ou desconto na base do imposto.
// 1 = Considera valores juros multa ou desconto
// 2 = Nao considera valores juros multa ou desconto
Local lJurMulDes	:= (SuperGetMv("MV_IMPBAIX",.t.,"1") == "1")

Local lBaseSE2		:= SuperGetMv("MV_BS10925",.T.,"1") == "1"
local	lFirst := .T.
Local lAchouDif := .F.
//Tipo de Processo de verificação de PCC
// 1 = Apenas um processo para cada verificacao PCC
// 2 = Um processo por Fornecedor a cada verif. PCC
Local cTpProcPCC:= GetNewPar( "MV_PR10925", "1" )


Local nHdlPrv	:= 0
Local nTotal	:= 0
Local cArquivo	:= ""
Local aFlagCTB := {}
Local lHdlPrv	:=.F.
Local lDigita	:=IIf(mv_par05==1,.T.,.F.)
Local lAglut	:=.F.
Local lPadrao	:= VerPadrao( "510" )
Local lUsaFlag := GetNewPar("MV_CTBFLAG",.F.)
							
If !lProcessou .or. Empty(aArqs)
	aArqs := F374TRB(@lProcessou,@lAchouDif)
Endif

dbSelectArea("TRB2")
dbGotop()

If !TRB2->(BOF()) .AND. !TRB2->(EOF()) .and. lAchouDif

	If lAuto = .F. .OR. lAuto = Nil
		nOpca := 0
		Aadd(aSays,OemToAnsi(STR0023)) //"Foram verificadas diferenças relativas a retenção de Pis, Cofins e CSLL"
		Aadd(aSays,OemToAnsi(STR0024)) //"no perídodo solicitado."
		Aadd(aSays,OemToAnsi(STR0025)) //"Caso deseje, emita o relatório de conferência antes de confirmar o processo"
			
		AADD(aButtons, { 6,.T.,{|o| FINR895(@lProcessou)}} )
		AADD(aButtons, { 1,.T.,{|o| nOpca:= 1,o:oWnd:End()}} )
		AADD(aButtons, { 2,.T.,{|o| o:oWnd:End() }} )
				
		FormBatch( cCadastro, aSays, aButtons)// ,,,428)
	Else
		nOpca := 1
	Endif
	 
	If nOpca == 1   
		BEGIN TRANSACTION
		// Valida data da nova lei de PCC VL13137
			If dDataBase >= dLastPcc
				nVlMinImp	:= 0
			EndIf
			
			While !TRB2->(EOF())

				//Verifica se achou diferença de PCC para este fornecedor
				If (ABS(TRB2->(PIS+COF+CSL)) - ABS(TRB2->(PISRET+COFRET+CSLRET)) != 0) .OR. ;
					(TRB2->BASEPCC <= nVlMinImp .and. TRB2->(PISRET+COFRET+CSLRET) >  0)
					//Obtenho os codigos de processo de verificacao de PCC
					//Um processo por Fornecedor
					If cTpProcPCC == "2" .or. lFirst
						cProcess	:= GetSx8Num("SE2","E2_PROCPCC","E2_PROCPCC"+cEmpAnt)
						ConfirmSx8()               
						lFirst := .F.
					Endif
					
					//Obtenho os codigos de retenção padrao para o PCC
					F374CodRet(TRB2->PISRET,TRB2->COFRET,TRB2->CSLRET,@cCodRetPis,@cCodRetCof,@cCodRetCsl)

					IF lPadrao .and. !lHdlPrv
						nHdlPrv	:= HeadProva(cLote,"FINA374",Substr(cUsuario,7,6),@cArquivo)
						lHdlPrv 	:= .T.
					Endif
	
					//Se o Fornecedor teve base menor no periodo mas reteve impostos
					//Gera TXA para compensar com os TX da União
					//Gera NCF para pagamento do valor retido indevidamente para o fornecedor 
					If TRB2->BASEPCC <= nVlMinImp .and. TRB2->(PISRET+COFRET+CSLRET) > 0
		
						If TRB2->PISRET > 0
							AADD(aValImp, {"PIS",TRB2->PISRET,cCodRetPis})
						Endif
	
						If TRB2->COFRET > 0
							AADD(aValImp, {"COF",TRB2->COFRET,cCodRetCof})
						Endif
	
						If TRB2->CSLRET > 0
							AADD(aValImp, {"CSL",TRB2->CSLRET,cCodRetCsl})
						Endif
	
						If Len(aValImp) > 0
							//Grava os titulos a serem gerados
							F374GerSE2(aValImp,cForUniao,cLojUniao,cNomUniao,cProcess,cCodRetPis,TRB2->PJPF,"1",lDigita,lAglut,nHdlPrv,@nTotal,lPadrao,cArquivo,@aFlagCTB,lUsaFlag)				
							//Grava os titulos que participaram do processo
							F374GrvSE2(cProcess)				
						Endif
	
					//Se o Fornecedor teve base para retencao, mas reteve a maior
					ElseIf TRB2->BASEPCC > nVlMinImp 
		
						If TRB2->PIS - TRB2->PISRET != 0
							AADD(aValImp, {"PIS",ABS(TRB2->PIS - TRB2->PISRET),cCodRetPis})
						Endif
		
						If TRB2->COF - TRB2->COFRET != 0
							AADD(aValImp, {"COF",ABS(TRB2->COF - TRB2->COFRET),cCodRetCof})
						Endif
	
						If TRB2->CSL - TRB2->CSLRET != 0
							AADD(aValImp, {"CSL",ABS(TRB2->CSL - TRB2->CSLRET),cCodRetCsl})
						Endif
		
						If Len(aValImp) > 0
				
							If TRB2->(PIS+COF+CSL) - TRB2->(PISRET+COFRET+CSLRET) < 0
								//Pagou mais imposto do que devia
								//Gera TXA para compensar com os TX da Uniao
								//Gera NCF para pagamento do valor retido indevidamente para o fornecedor 
								//Grava os titulos a serem gerados
								F374GerSE2(aValImp,cForUniao,cLojUniao,cNomUniao,cProcess,cCodRetPis,TRB2->PJPF,"2",lDigita,lAglut,nHdlPrv,@nTotal,lPadrao,cArquivo,@aFlagCTB,lUsaFlag)				
								//Grava os titulos que participaram do processo
								F374GrvSE2(cProcess)				
							Else
								//Pagou menos imposto do que devia
								//Gera TX para pagar a Uniao
								//Gera NDF para compensar coms as notas do fornecedor                          
								//Grava os titulos a serem gerados
								F374GerSE2(aValImp,cForUniao,cLojUniao,cNomUniao,cProcess,cCodRetPis,TRB2->PJPF,"3",lDigita,lAglut,nHdlPrv,@nTotal,lPadrao,cArquivo,@aFlagCTB,lUsaFlag)				
								//Grava os titulos que participaram do processo
								F374GrvSE2(cProcess)				
							Endif
						Endif
					EndIf	                    
				Endif
				TRB2->(DbSkip())
				aValImp		:= {}
			EndDo           
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava Rodap‚ 													  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lHdlPrv .And. nTotal > 0
				RodaProva(nHdlPrv,nTotal)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Envia para Lan‡amento Cont bil 							  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cA100Incl(cArquivo,nHdlPrv,3,cLote,lDigita,lAglut,,,,@aFlagCTB)
				aFlagCTB := {}
			Endif
	
		END TRANSACTION
		
		SM0->(dbGoto(nRegAtu))  
		cFilAnt := IIf( lFWCodFil, FWGETCODFILIAL, SM0->M0_CODFIL )
		
	EndIf       
Else
	Aviso(STR0005,STR0026,{"Ok"}) //"Atencao"###"Não foram verificadas diferenças na retenção dos impostos Pis, Cofins, Csll."
Endif

Return(Nil)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³F374TRB   ³Autor  ³Mauricio Pequim Jr  ³ Data ³  25/08/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Monta os TRBs necessários para a verificação de impostos PCCº±±
±±º          ³bem como a emissão do relatorio de verificação (FINR895)	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA374/FINR895                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F374TRB(lProcessou,lAchouDif)

Local aCampos		:= {}
Local aCampos2		:= {}
Local cQuery		:= ""
Local nPIS 			:= 0
Local nCOF 			:= 0
Local nCSL 			:= 0
Local nPISRet		:= 0
Local nCOFRet		:= 0
Local nCSLRet		:= 0
Local nBase			:= 0
Local nTotPIS		:= 0
Local nTotCOF		:= 0
Local nTotCSL		:= 0
Local nTotPISRet	:= 0
Local nTotCOFRet	:= 0
Local nTotCSLRet	:= 0
Local nBaseImp 	:= 0
Local nValOutImp	:= 0
Local nValTit 		:= 0
Local nTotAbat		:= 0
Local nAcresc		:= 0
Local nDecresc		:= 0
Local nVlMinImp	:= GetNewPar("MV_VL10925",5000)
Local nTamForLj	:= TamSx3("E2_FORNECE")[1]+TamSx3("E2_LOJA")[1]
Local nTamForn		:= TamSx3("E2_FORNECE")[1]
Local nTamLoja		:= TamSx3("E2_LOJA")[1]
Local cModRetPIS	:= GetNewPar( "MV_RT10925", "1" )
Local cModTot		:= GetNewPar( "MV_MT10925", "1" )
Local cSepTxa		:= If("|"$MVTXA,"|",",")
Local cSepTx		:= If("|"$MVTAXA,"|",",")
Local cAliasTmp	:= ""
Local lSest			:= .T.  //Verifica campo de SEST
Local lCalcIssBx 	:=	.F.

//Considero juros multa ou desconto na base do imposto.
// 1 = Considera valores juros multa ou desconto
// 2 = Nao considera valores juros multa ou desconto
Local lJurMulDes	:= (SuperGetMv("MV_IMPBAIX",.t.,"1") == "1")

Local lBaseSE2		:= SuperGetMv("MV_BS10925",.T.,"1") == "1"					

DEFAULT lProcessou := .F.
DEFAULT lAchouDif  := .F.

If Select("TMP") > 0
	TMP->(dbCloseArea())
EndIf

dDataIni := CToD("01/"+Str(mv_par01)+"/"+Str(mv_par02))
dDataFim := LastDay(CTOD("01/"+Str(mv_par01)+"/"+Str(mv_par02), "ddmmyy"))
 
cAliasTmp := GetNextAlias()
cQuery := "SELECT R_E_C_N_O_ RECSE2 FROM "+RetSqlName("SE2")+" SE2A WHERE "
cQuery += " E2_FILIAL = '" + xFilial("SE2") + "' AND "
cQuery += " E2_FORNECE BETWEEN '" + mv_par03 + "' AND '" + mv_par04 + "' AND "
cQuery += " ( E2_PIS > 0 OR E2_COFINS > 0 OR E2_CSLL > 0 ) AND "
cQuery += " ((E2_NUMBOR <> '' AND E2_DTBORDE BETWEEN '"+Dtos( dDataIni) +"' AND '"+Dtos( dDataFim) +"') OR "
cQuery += "  (E2_BAIXA BETWEEN '"+Dtos( dDataIni) +"' AND '"+Dtos( dDataFim) +"')) AND "
cQuery += "(E2_PRETPIS <> '1' OR E2_PRETCOF <> '1' OR E2_PRETCSL <> '1' ) AND "
cQuery += " SE2A.D_E_L_E_T_ = ' ' "
cQuery += " UNION "
cQuery += " SELECT R_E_C_N_O_ RECSE2 FROM "+RetSqlName("SE2")+" SE2B WHERE "
cQuery += " E2_FILIAL = '" + xFilial("SE2") + "' AND "
cQuery += " E2_EMISSAO BETWEEN '"+Dtos( dDataIni) +"' AND '"+Dtos( dDataFim) +"' AND "
cQuery += " E2_ORIGEM = 'FINA374' AND "
cQuery += " (E2_TIPO IN " + FormatIn(MVTXA,cSepTxa)  + " OR "
cQuery += " E2_TIPO IN " + FormatIn(MVTAXA,cSepTx) + ") AND "
cQuery += " SE2B.D_E_L_E_T_ = ' ' "

cQuery:= ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTMP,.F.,.T.)

dbselectarea(cAliasTmp)
dbGoTop()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria array para gerar arquivo de trabalho                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aCampos,{ "MES"    	,"C",2 ,0 } )
AADD(aCampos,{ "ANO" 		,"C",4 ,0 } )
AADD(aCampos,{ "FORNECE" 	,"C",TamSx3("E2_FORNECE")[1],0 } )
AADD(aCampos,{ "LOJA" 		,"C",TamSx3("E2_LOJA")[1],0 } )
AADD(aCampos,{ "NOME"  		,"C",30,0 } )
AADD(aCampos,{ "PREFIXO"  	,"C",3 ,0 } )
AADD(aCampos,{ "PARCELA"  	,"C",3 ,0 } )
AADD(aCampos,{ "TIPO"  		,"C",3 ,0 } )
AADD(aCampos,{ "NUM"  		,"C",TamSx3("E2_NUM")[1],0 } )
AADD(aCampos,{ "BORDERO"  	,"C",6 ,0 } )
AADD(aCampos,{ "DTBORD" 	,"D",8 ,0 } )
AADD(aCampos,{ "BAIXA" 		,"D",8 ,0 } )
AADD(aCampos,{ "PIS"    	,"N",14,2 } )
AADD(aCampos,{ "COF"    	,"N",14,2 } )
AADD(aCampos,{ "CSL"			,"N",14,2 } )
AADD(aCampos,{ "PISRET"		,"N",14,2 } )
AADD(aCampos,{ "COFRET"		,"N",14,2 } )
AADD(aCampos,{ "CSLRET"		,"N",14,2 } )
AADD(aCampos,{ "BASEPCC"	,"N",14,2 } )
AADD(aCampos,{ "SALDO"		,"N",14,2 } )
AADD(aCampos,{ "PROCPCC"	,"C",TamSx3("E2_PROCPCC")[1],2 } )
AADD(aCampos,{ "DTPRPCC"	,"D",8 ,0 } )
AADD(aCampos,{ "RECNOPCC"	,"N",17,0 } )
AADD(aCampos,{ "RECSE2"	,"N",17,0 } )

AADD(aCampos2,{ "MES"    	,"C",2 ,0 } )
AADD(aCampos2,{ "ANO" 		,"C",4 ,0 } )
AADD(aCampos2,{ "FORNECE" 	,"C",TamSx3("E2_FORNECE")[1],0 } )
AADD(aCampos2,{ "LOJA" 		,"C",TamSx3("E2_LOJA")[1],0 } )
AADD(aCampos2,{ "NOME"  	,"C",30,0 } )
AADD(aCampos2,{ "PJPF"  	,"C",1,0 } )
AADD(aCampos2,{ "PIS"    	,"N",14,2 } )
AADD(aCampos2,{ "COF"    	,"N",14,2 } )
AADD(aCampos2,{ "CSL"		,"N",14,2 } )
AADD(aCampos2,{ "PISRET"	,"N",14,2 } )
AADD(aCampos2,{ "COFRET"	,"N",14,2 } )
AADD(aCampos2,{ "CSLRET"	,"N",14,2 } )
AADD(aCampos2,{ "BASEPCC"	,"N",14,2 } )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria arquivo de trabalho                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//Deleta a tabela temporária no banco de dados, caso já exista
F374Clean("1")

//Cria o Objeto do FwTemporaryTable
_oFINA3741 := FwTemporaryTable():New("TRB")
	
//Cria a estrutura do alias temporario
_oFINA3741:SetFields(aCampos)
	
//Adiciona o indicie na tabela temporaria
_oFINA3741:AddIndex("1",{"FORNECE", "LOJA", "DTBORD", "BAIXA"})

//Criando a Tabela Temporaria
_oFINA3741:Create()

cNomArq1 := _oFINA3741:GetRealName()

//********************************************************************************************************************	

//Deleta a tabela temporária no banco de dados, caso já exista
F374Clean("2")

//Cria o Objeto do FwTemporaryTable
_oFINA3742 := FwTemporaryTable():New("TRB2")
	
//Cria a estrutura do alias temporario
_oFINA3742:SetFields(aCampos2)
	
//Adiciona o indicie na tabela temporaria
_oFINA3742:AddIndex("1",{"FORNECE", "LOJA"})
		
//Criando a Tabela Temporaria
_oFINA3742:Create()

cNomArq2 := _oFINA3742:GetRealName()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ SETREGUA -> Indica quantos registros serao processaDos para a regua ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbselectarea(cAliasTMP)
dbGoTop()
IncProc(STR0028) //"Selecionando Registros..."

While !(cAliasTMP)->(EOF())

	dbselectarea(cAliasTMP)
	
	DbSelectArea("SE2")
	dbSetOrder(1)

	DbGoto((cAliasTMP)->RECSE2)				
	
	lImpInFat := .F.

	If !(SE2->E2_TIPO $ MVTAXA+"#"+MVTXA  .AND. "FINA374" $ SE2->E2_ORIGEM)  
	    
	
		lCalcIssBx :=	IIF(lIsIssBx, IsIssBx("P"), __cRetISS == "2" )
	
		If 'NOTFAT' $ SE2->E2_FATURA
			nValOutImp := f080OutImp(SE2->E2_SALDO - nTotAbat + nAcresc - nDecresc)
			lImpInFat := .T.
		Else
			nValOutImp := SE2->(E2_IRRF+E2_INSS+E2_ISS)
		Endif
		
		If lSest
			nValOutImp += SE2->E2_SEST
		Endif
		
		If lCalcIssBx .and. !lImpInFat
			nValOutImp -= SE2->E2_ISS
		Endif
		
		//Caso o titulo possua o valor de base dos impostos preenchidos, considero
		//esse valor com base para calculo, desprezando o valor do titulo
		If lBaseSe2 .And. SE2->E2_BASEPIS > 0
			nValTit 	:= SE2->E2_BASEPIS
			nBaseImp 	:= SE2->E2_BASEPIS
		Else
			nValTit 	:= SE2->E2_VALOR + nValOutImp
			nBaseImp 	:= nValTit
		Endif
		
		//Considero juros,multa,desconto,abatimento, acrescimo e decrescimo na base do imposto
		If lJurMulDes
			
			//Valor dos abatimentos/acrescimo/decrescimo de cada titulo selecionado pendente de retenção
			nTotAbat := SomaAbat(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,"P",SE2->E2_MOEDA,,SE2->E2_FORNECE)
			nAcresc  := SE2->E2_ACRESC
			nDecresc := SE2->E2_DECRESC
			
			//Remonto a base para o calculo dos impostos de PIS/COF/CSL
			If Empty(nBaseImp)
				nTit := (Ascan(aTitBsImp,{|x| x[1] == SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)}))
				nBaseImp := SE2->E2_SALDO-nTotAbat+nAcresc-nDecresc+nValOutImp+nValComp+aDadosImp[4]-aDadosImp[5]+If(nTit==0,0,aTitBsImp[nTit,2])
				//Se for pa bruto e tiver baixado o valor dos impostos de um PA do titulo,
				//busco o valor no SE5 para recompor a base.
				If lPABruto
					nBaseImp += PABrtComp()
				EndIf
			EndIf
		Endif
		cFornece 	:=	SE2->E2_FORNECE
		cLoja		:= SE2->E2_LOJA
	Else
		cFornece 	:=	SUBSTR(SE2->E2_FORNPAI,1,nTamForn)
		cLoja		:= SUBSTR(SE2->E2_FORNPAI,nTamForn+1,nTamLoja)
	Endif
		
	//Posiciona SA2
	SA2->(dbSetOrder(1))
	SA2->(MsSeek(xFilial("SA2")+cFornece+cLoja))	

	//ARQUIVO ANALITICO
	RecLock("TRB",.T.)
	TRB->MES 		:= STR(mv_par01)
	TRB->ANO   		:= STR(mv_par02)
	TRB->FORNECE	:= cFornece
	TRB->LOJA     	:= cLoja
	TRB->NOME  		:= GetLGPDValue('SA2','A2_NREDUZ')
	TRB->PREFIXO	:= SE2->E2_PREFIXO
	TRB->NUM 		:= SE2->E2_NUM
	TRB->PARCELA	:= SE2->E2_PARCELA
	TRB->TIPO		:= SE2->E2_TIPO
	TRB->BORDERO	:= SE2->E2_NUMBOR
	TRB->DTBORD		:= SE2->E2_DTBORDE
	TRB->BAIXA 		:= SE2->E2_BAIXA
	TRB->SALDO	 	:= SE2->E2_SALDO
	TRB->RECSE2:= SE2->(RECNO())
	DO CASE
		CASE SE2->E2_TIPO $ MVTXA .AND. "FINA374" $ SE2->E2_ORIGEM  
			TRB->PIS   		:=  0//If(SUBSTR(SE2->E2_NUMTIT,8,3)=='PIS',(SE2->E2_VALOR * -1),0)
			TRB->COF  		:=  0//If(SUBSTR(SE2->E2_NUMTIT,8,3)=='COF',(SE2->E2_VALOR * -1),0)
			TRB->CSL  		:=  0//If(SUBSTR(SE2->E2_NUMTIT,8,3)=='CSL',(SE2->E2_VALOR * -1),0)
			TRB->PISRET  	:=  If(SUBSTR(SE2->E2_NUMTIT,8,3)=='PIS',(SE2->E2_VALOR * -1),0)
			TRB->COFRET  	:=  If(SUBSTR(SE2->E2_NUMTIT,8,3)=='COF',(SE2->E2_VALOR * -1),0)
			TRB->CSLRET  	:=  If(SUBSTR(SE2->E2_NUMTIT,8,3)=='CSL',(SE2->E2_VALOR * -1),0)
			TRB->BASEPCC 	:=  0
			TRB->PROCPCC	:= SE2->E2_PROCPCC
			TRB->DTPRPCC	:= SE2->E2_EMISSAO
		CASE SE2->E2_TIPO $ MVTAXA .AND. "FINA374" $ SE2->E2_ORIGEM  
			TRB->PIS   		:=  0
			TRB->COF  		:=  0
			TRB->CSL  		:=  0
			TRB->PISRET  	:=  If(SUBSTR(SE2->E2_NUMTIT,8,3)=='PIS',SE2->E2_VALOR,0)
			TRB->COFRET  	:=  If(SUBSTR(SE2->E2_NUMTIT,8,3)=='COF',SE2->E2_VALOR,0)
			TRB->CSLRET  	:=  If(SUBSTR(SE2->E2_NUMTIT,8,3)=='CSL',SE2->E2_VALOR,0)
			TRB->BASEPCC 	:=  0
			TRB->PROCPCC	:= SE2->E2_PROCPCC
			TRB->DTPRPCC	:= SE2->E2_EMISSAO
		OTHERWISE
			TRB->PIS 		:= SE2->E2_PIS
			TRB->COF			:= SE2->E2_COFINS
			TRB->CSL			:= SE2->E2_CSLL
			TRB->PISRET		:= SE2->E2_VRETPIS
			TRB->COFRET		:= SE2->E2_VRETCOF
			TRB->CSLRET		:= SE2->E2_VRETCSL					
			TRB->BASEPCC	:= nBaseImp
		ENDCASE				
			
	MsUnlock()

	//ARQUIVO SINTETICO
	DbSelectArea("TRB2")
	If DbSeek(cFornece+cLoja)
		RecLock("TRB2",.F.)
	Else
		RecLock("TRB2",.T.)
		TRB2->FORNECE	:= cFornece
		TRB2->LOJA		:= cLoja
		TRB2->NOME		:= GetLGPDValue('SA2','A2_NREDUZ')
		TRB2->PJPF		:= SA2->A2_TIPO		
	Endif
	DO CASE
		CASE SE2->E2_TIPO $ MVTXA .AND. "FINA374" $ SE2->E2_ORIGEM  
			TRB2->PISRET  	+=  If(SUBSTR(SE2->E2_NUMTIT,8,3)=='PIS',(SE2->E2_VALOR * -1),0)
			TRB2->COFRET  	+=  If(SUBSTR(SE2->E2_NUMTIT,8,3)=='COF',(SE2->E2_VALOR * -1),0)
			TRB2->CSLRET  	+=  If(SUBSTR(SE2->E2_NUMTIT,8,3)=='CSL',(SE2->E2_VALOR * -1),0)
		CASE SE2->E2_TIPO $ MVTAXA .AND. "FINA374" $ SE2->E2_ORIGEM  
			TRB2->PISRET  	+=  If(SUBSTR(SE2->E2_NUMTIT,8,3)=='PIS',SE2->E2_VALOR,0)
			TRB2->COFRET  	+=  If(SUBSTR(SE2->E2_NUMTIT,8,3)=='COF',SE2->E2_VALOR,0)
			TRB2->CSLRET  	+=  If(SUBSTR(SE2->E2_NUMTIT,8,3)=='CSL',SE2->E2_VALOR,0)
		OTHERWISE
			TRB2->PIS 		+= SE2->E2_PIS
			TRB2->COF		+= SE2->E2_COFINS
			TRB2->CSL		+= SE2->E2_CSLL
			TRB2->PISRET	+= SE2->E2_VRETPIS
			TRB2->COFRET	+= SE2->E2_VRETCOF
			TRB2->CSLRET	+= SE2->E2_VRETCSL
			TRB2->BASEPCC	+= nBaseImp
		ENDCASE				
	MsUnlock()
	dbselectarea(cAliasTMP)
	dbSkip()

	lProcessou := .T.
EndDo

If dDataBase >= dLastPcc
	nVlMinImp	:= 0
EndIf

//Verifico se houve alguma diferença apurada
DbSelectArea("TRB2")
dbGotop()
While !Eof()
	//Se o fornecedor possuir:
	//- Diferenca entre o retido e o calculado ou
	//- Valor retido incorretamente para base menor que 5000
	If (ABS(TRB2->(PIS+COF+CSL)) - ABS(TRB2->(PISRET+COFRET+CSLRET)) != 0 .AND. TRB2->BASEPCC	> nVlMinImp) .OR. ;
		(ABS(TRB2->(PISRET+COFRET+CSLRET)) > 0 .AND. TRB2->BASEPCC	<= nVlMinImp)
		lAchouDif := .T.
		EXIT
	Endif
	dbSkip()
Enddo

dbSelectArea(cAliasTMP)
dbCloseArea()
DbSelectArea("TRB")
DbGoTop()

DbSelectArea("TRB2")
DbGoTop()

Return ({cNomArq1,cNomArq2})

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ F374GrvSE2       ³ Mauricio Pequim       ³ Data ³ 23.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Gravacao dos titulos no SE2                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F374GrvSE2(ExpA1,ExpN1,ExpC1) 									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array contendo os dados do titulo a ser gravado    ³±±
±±³			 ³ ExpN1 = N£mero do registro no array								  ³±±
±±³			 ³ ExpC1 = Titulo ja gerado para complemento do IR				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FinA378 				                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function	F374GrvSE2(cProcess)

Local aArea := GetArea()

dbSelectArea("TRB")

If MsSeek(TRB2->(FORNECE+LOJA))
	While !Eof() .and. TRB->(FORNECE+LOJA) == TRB2->(FORNECE+LOJA)
		If Empty(SE2->E2_PROCPCC)
			RecLock("SE2",.F.)
			SE2->E2_PROCPCC	:= cProcess
			MsUnlock()
		Endif	
		TRB->(DbSkip())
	Enddo
Endif

RestArea(aArea)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ F374GerSE2       ³ Mauricio Pequim       ³ Data ³ 23.08.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Gravacao dos titulos no SE2                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F374GerSE2(ExpA1,ExpN1,ExpC1) 									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array contendo os dados do titulo a ser gravado    ³±±
±±³			 ³ ExpN1 = N£mero do registro no array								  ³±±
±±³			 ³ ExpC1 = Titulo ja gerado para complemento do IR				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FinA374 				                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F374GerSE2(aValImp,cForUniao,cLojUniao,cNomUniao,cProcess,cCodRetPis,cTipoFor,cTipo,lDigita,lAglut,nHdlPrv,nTotal,lPadrao,cArquivo,aFlagCTB,lUsaFlag)

Local cParcela	:= TamParcela("E2_PARCELA",Space(1),Space(2),Space(3))
Local cTipoSE2	:= "TX "
Local cTipoNDF	:= "NDF"
Local cNatureza	:= ""
Local aTamParc 	:= TamSx3("E2_PARCELA")
Local cPrefixo	:= "VPC"
Local dDataVenc	:= F050VIMP("PIS",,,,cCodRetPis,cTipoFor)
Local nLaco		:= 0
Local nValorADT	:= 0
Local cNatNDF		:= __cNatNDF
Local cNumNDF		:= ""

DEFAULT cTipo := 3

cNumNDF	:= GetSx8Num("SE2","E2_NUM","FINA374"+cEmpAnt)
ConfirmSx8()               

For nLaco := 1 to Len(aValImp)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Analise dos codigos das naturezas envolvidas                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If aValImp[nLaco,1] $ "PIS"
		cNatureza	:= __cNatPIS
		cNatureza	:= Iif(Empty(cNatureza),,cNatureza)
	ElseIf aValImp[nLaco,1] $ "COF"
		cNatureza	:= __cNatCOF
		cNatureza	:= Iif(Empty(cNatureza),"COF",cNatureza)
	ElseIf aValImp[nLaco,1] $ "CSL"
		cNatureza	:= __cNatCSL
		cNatureza	:= Iif(Empty(cNatureza),"CSL",cNatureza)
	Endif
	
	//Valores de imposto retido a maior 
	If cTipo $ "1#2"
		cTipoSE2		:= "TXA"
		cTipoNDF		:= "NCF"
		cNatNDF		:= __cNatNCF
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o numero do titulo ja existe                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("SE2")
	DbSetOrder(1)
	cParcela := Soma1(cParcela,aTamParc[1])
	While .T.
		If DbSeek(xFilial("SE2")+cPrefixo+Pad(cProcess,Len(E2_NUM))+cParcela+cTipoSE2+cForUniao+cLojUniao)
			cParcela := Soma1(cParcela,aTamParc[1])
		Else
			Exit
		Endif
	EndDo
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gravacao do titulo de imposto apurado                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RecLock("SE2",.T.)
	SE2->E2_FILIAL		:= xFilial("SE2")
	SE2->E2_PREFIXO	:= cPrefixo
	SE2->E2_NUM			:= cNumNDF
	SE2->E2_PARCELA	:= cParcela
	SE2->E2_TIPO		:= cTipoSE2
	SE2->E2_EMISSAO	:= dDataBase
	SE2->E2_VALOR		:= aValImp[nLaco,2]
	SE2->E2_VENCREA	:= DataValida(dDataVenc,.T.)
	SE2->E2_SALDO		:= aValImp[nLaco,2]
	SE2->E2_VENCTO		:= dDataVenc
	SE2->E2_VENCORI	:= dDataVenc
	SE2->E2_MOEDA		:= 1
	SE2->E2_EMIS1		:= dDataBase
	SE2->E2_FORNECE	:= cForUniao
	SE2->E2_LOJA		:= cLojUniao
	SE2->E2_NOMFOR		:= cNomUniao
	SE2->E2_VLCRUZ		:= aValImp[nLaco,2]
	SE2->E2_ORIGEM		:= "FINA374"
	SE2->E2_NATUREZ	:= cNatureza
	SE2->E2_NUMTIT		:= "FINA374"+aValImp[nLaco,1]
	SE2->E2_PROCPCC	:= cProcess
	SE2->E2_FORNPAI	:= TRB2->(FORNECE+LOJA)
	SE2->E2_CODRET		:= aValImp[nLaco,3]
	SE2->E2_DIRF		:= "2" // O titulo gerado pela aglutinacao nao deve ir para DIRF, para nao ocorrer duplicidade
									 // com o titulo de origem (na DIRF e na impressao da DARF).
	SE2->E2_MULTNAT	:= "2"
	SE2->E2_FILORIG := cFilAnt
	MsUnlock()
	If __F374GRTX
		ExecBlock("F374GRTX",.F.,.F.,{cTipoSE2})
	Endif

	nValorADT 	+= aValImp[nLaco,2]

Next

//Gravo Adiantamento ou titulo para pagar para o FORNECEDOR 
If nValorADT > 0

	cParcela	:= TamParcela("E2_PARCELA",Space(1),Space(2),Space(3))
	DbSelectArea("SE2")
	DbSetOrder(1)
	While .T.
		cTitGerado := cPrefixo+cProcess+cParcela+cTipoNDF+TRB->(FORNECE+LOJA)
		If MsSeek(xFilial("SE2")+cTitGerado)
			While !Eof() .and. xFilial("SE2")+cTitGerado == ;
				SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
				cParcela := StrZero(Max(Val(SE2->E2_PARCELA),Val(cParcela)),aTamParc[1])
				dbSkip()
			Enddo
			cParcela := Soma1(cParcela,aTamParc[1])
		Else
			Exit
		Endif
	EndDo

	RecLock("SE2",.T.)
	SE2->E2_FILIAL		:= xFilial("SE2")
	SE2->E2_PREFIXO	:= cPrefixo
	SE2->E2_NUM			:= cNumNDF
	SE2->E2_PARCELA	:= cParcela
	SE2->E2_TIPO		:= cTipoNDF
	SE2->E2_EMISSAO	:= dDataBase
	SE2->E2_VALOR		:= ABS(nValorADT)
	SE2->E2_VENCREA	:= DataValida(dDataVenc,.T.)
	SE2->E2_SALDO		:= ABS(nValorADT)
	SE2->E2_VENCTO		:= dDataVenc
	SE2->E2_VENCORI	:= dDataVenc
	SE2->E2_MOEDA		:= 1
	SE2->E2_EMIS1		:= dDataBase
	SE2->E2_FORNECE	:= TRB2->FORNECE
	SE2->E2_LOJA		:= TRB2->LOJA
	SE2->E2_NOMFOR		:= TRB2->NOME
	SE2->E2_VLCRUZ		:= ABS(nValorADT)
	SE2->E2_PROCPCC	:= cProcess
	SE2->E2_ORIGEM		:= "FINA374"
	SE2->E2_NATUREZ	:= cNatNDF
	SE2->E2_NUMTIT		:= "FINA374"
	SE2->E2_MULTNAT	:= "2"
	SE2->E2_FILORIG := cFilAnt
	If __F374CNCF
		ExecBlock("F374CNCF",.F.,.F.,{cTipoNDF})
	Endif 
	MsUnlock()

	If lUsaFlag
		aAdd(aFlagCTB,{"E2_LA","S","SE2",SE2->(Recno()),0,0,0})
	EndIf

	If nHdlPrv > 0
		nTotal	+=	DetProva(nHdlPrv,"510","FINA374",cLote,,,,,,,,@aFlagCTB)
	Endif

	If LanceiCtb // Vem do DetProva																								
		If !lUsaFlag
			RecLock("SE2")
			SE2->E2_LA    := "S"
			MsUnlock()
		EndIf
	Endif
Endif	

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ F374NatNew       ³ Mauricio Pequim       ³ Data ³ 05/06/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Criacao nas naturezas necessarias no IR OffLine            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F378NatNew()						 									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA378      			                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function F374NatNew(cForUniao,cLojUniao,cNomUniao)

Local cDescNat 	:= ""
Local cNatureza	:= ""
Local nA 		:= 0
Local cLojaImp	:= PadR( "00", TamSX3( "A2_LOJA" )[1], "0" )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria a natureza de IRRF                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

For nA := 1 to 5
	DO CASE
		CASE nA == 1	//PIS
			cNatureza	:= __cNatPIS
			cNatureza	:= If (Empty(cNatureza),"PIS",cNatureza) 
			cDescNat	:= "PIS"
		CASE nA == 2	//Cofins	
			cNatureza	:= __cNatCOF
			cNatureza	:= If (Empty(cNatureza),"COF",cNatureza) 
			cDescNat	:= "COFINS"
		CASE nA == 3	//CSLL
			cNatureza	:= __cNatCSL
			cNatureza	:= If (Empty(cNatureza),"CSL",cNatureza) 
			cDescNat	:= "CSLL"
		CASE nA == 4	//NDF
			cNatureza	:= __cNatNDF
			cNatureza	:= If (Empty(cNatureza),"NDF",cNatureza)
			cDescNat	:= "NOTA DEBITO FORNECEDOR"
		CASE nA == 5	//NCF
			cNatureza	:= __cNatNCF
			cNatureza	:= If (Empty(cNatureza),"NCF",cNatureza)
			cDescNat	:= "NOTA CREDITO FORNECEDOR"	
	ENDCASE

	DbSelectArea("SED")
	cNatureza := AllTrim(cNatureza)
	cNatureza := cNatureza+(Space(10-Len(cNatureza)))
	
	If ( ! DbSeek( xFilial("SED") + cNatureza ) )
		RecLock("SED",.T.)
		SED->ED_FILIAL  := xFilial("SED")
		SED->ED_CODIGO  := cNatureza
		SED->ED_CALCIRF := "N"
		SED->ED_CALCISS := "N"
		SED->ED_CALCINS := "N"
		SED->ED_CALCCOF := "N"
		SED->ED_CALCPIS := "N"
		SED->ED_CALCCSL := "N"
		SED->ED_DESCRIC := cDescNat 
		SED->ED_TIPO	:= "2"		
		MsUnlock()
		
	EndIf
Next	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Criacao do Fornecedor Uniao                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SA2")
DbSetOrder(1)

If !DbSeek(xFilial("SA2")+GetMv("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMv("MV_UNIAO")))+cLojaImp)
	Reclock("SA2",.T.)
		SA2->A2_FILIAL	:= xFilial("SA2")
		SA2->A2_COD		:= GetMv("MV_UNIAO")
		SA2->A2_LOJA	:= cLojaImp
		SA2->A2_NOME	:= "UNIAO"
		SA2->A2_NREDUZ	:= "UNIAO"
		SA2->A2_BAIRRO	:= "."
		SA2->A2_MUN		:= "."
		SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
		SA2->A2_END		:= "."
		SA2->A2_TIPO	:= "J"
	MsUnlock()
EndIf

cForUniao	:= SA2->A2_COD
cLojUniao	:= SA2->A2_LOJA
cNomUniao	:= SA2->A2_NREDUZ	

Return(Nil)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³F374CODRETºAutor  ³MAURICIO PEQUIM JR  º Data ³26.08.2008   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida o codigo de retencao do PCC       )                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA374                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F374CodRet(nPis,nCofins,nCsll,cCodRetPis,cCodRetCof,cCodRetCsl)

// Caso nao exista um dos tres impostos, o codigo de retencao sera diferenciado para cada imposto
If	(nPis <= 0 .Or. nCofins <= 0 .Or. nCsll <= 0 )
	cCodRetPis := "5979"
	cCodRetCof := "5960"
	cCodRetCsl := "5987"
Else
	// Se os 3 impostos juntos 
	cCodRetPis := "5952"
	cCodRetCof := "5952"
	cCodRetCsl := "5952"
Endif

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³VMesAno374ºAutor  ³Adrianne Furtado    º Data ³08.04.2008   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida o Mês e Ano informado na Pergunte()                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA374                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function VMesAno374(nMes, nAno)

Local lRet     
            
Default nMes := Nil
Default nAno := Nil

If ValType(nMes) == "N"
	If nMes >=1 .and. nMes<=12
		lRet := .T.
	Else 
		If !lBlind
			Aviso(STR0005,STR0029,{"OK"})
		Endif
		lRet := .F.
	EndIf
EndIf

If ValType(nAno) == "N"
	If nAno >= 1900 .and. nAno <= Year(dDataBase)+1
		lRet := .T.
	Else           
		//"Atenção""O ano informado é inválido. Verifique a informação correta e preencha novamente.""Ok"	
		If !lBlind
			Aviso(STR0005,STR0029,{"Ok"})	
		Endif
		lRet := .F.		
	EndIf
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fa374Can  ³ Autor ³ Mauricio Pequim Jr.   ³ Data ³28.08.08  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cancelamento do processo de verificacao de PCC             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA374                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FA374Can(cAlias,nReg,nOpcx)

Local cProcCan		:= CriaVar("E2_PROCPCC")
Local cIndex		:= CriaTrab(,.F.)
Local cChave		:= ""
Local cFiltro		:= ""
Local nIndex		:= 0
Local nOpct	 		:= 0
Local nA				:= 0
Local aRegsGer		:= {}
Local aRegsBxd		:= {}
Local aArea			:= GetArea()
Local lContinua	:= .T.
Local oDlg
Local cAliasSE2	:= "SE2"
Local cUniao := PADR(GetMV("MV_UNIAO"),Len(SA2->A2_COD))
//Controla o Pis Cofins e Csll na baixa
Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"
Local lExistFJU := FJU->(ColumnPos("FJU_RECPAI")) >0 .and. FindFunction("FinGrvEx")

PRIVATE cLote := ""
LoteCont("FIN")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Sem foro para utiliza‡„o da Aglutinacao de Impostos             ³
//³ N„o permite o acesso simultƒneo … rotina por mais de 1 usuario. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If LockByName("FINA374C",.T.,.F.)
		
	DEFINE MSDIALOG oDlg FROM	20,1 TO 120,340 TITLE STR0031 PIXEL //"Cancelamento de Processo de Apuração de PIS, COFINS e CSLL"
	@ 6, 11 TO 36, 125 OF oDlg PIXEL
	@ 21, 14 MSGET cProcCan Valid !Empty(cProcCan) 	SIZE 49, 11 OF oDlg PIXEL
	@ 11, 14 SAY STR0032 SIZE 70, 07 OF oDlg PIXEL	//"Processo a Cancelar"
	DEFINE SBUTTON FROM 10, 133 TYPE 1 ACTION (nOpct:=1, oDlg:End()) ENABLE OF oDlg
	DEFINE SBUTTON FROM 23, 133 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg
	ACTIVATE MSDIALOG oDlg CENTERED

	If nOpct == 1               
		
		lContinua := .T.	
		DbSelectArea("SE2")
		dbSetOrder(1)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se deverar ser considerada filial de/ate            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cQuery := "SELECT R_E_C_N_O_ RECNO FROM " + RetSQLname("SE2")
		cQuery += " WHERE "
		cQuery += "E2_PROCPCC = '"+Pad(cProcCan,Len(E2_PROCPCC))+"' AND "
		cQuery += " E2_ORIGEM LIKE 'FINA374%' AND "
		cQuery += "D_E_L_E_T_ = ' ' "
		cQuery := ChangeQuery(cQuery)
				
		dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), "SE2TRB", .F., .T.)
		cAlias:="SE2TRB

		ProcRegua((cAlias)->(RecCount()))

		If Bof() .And. Eof()
			lContinua := .F.
		EndIf

		dbSelectArea(cAlias)
		DbGoTop()

		While !Eof() .and. lContinua
			IncProc(STR0033)  //"Selecionado titulos de impostos"
			
			dbSelectArea("SE2")
			dbGoto(SE2TRB->RECNO)
			
			If SE2->E2_SALDO > 0 .and. STR(SE2->E2_SALDO,17,3) == STR(SE2->E2_VALOR,17,3) .and. ;
				Empty(SE2->E2_PORTADO) .and. SE2->E2_IMPCHEQ != "S"
				AADD(aRegsGer,SE2->(Recno()))
			Else
				lContinua := .F.
			Endif
			dbSelectArea(cAlias)
			dbSkip()		
		Enddo

		If lContinua
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Restaura a integridade da tabela de titulos a pagar          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
			If Select("SE2TRB") > 0
				dbSelectArea("SE2TRB")
				dbCloseArea()
				dbSelectArea("SE2")
				dbSetOrder(1)
			Endif	
		
			BEGIN TRANSACTION	

			//Exclui titulos gerados pelo processo
			//Apaga os titulos geradores do processo
			For nA := 1 to Len(aRegsGer)	
				dbSelectArea("SE2")
				dbGoto(aRegsGer[nA])

				If "FINA374" $ SE2->E2_ORIGEM 
					If lExistFJU
						FinGrvEx("P")
					Endif
				
					RecLock("SE2")
					dbDelete()
					MsUnlock()
				Else
					RecLock("SE2")
					SE2->E2_PROCPCC := Space(nTamProcPcc)
					MsUnlock()
				Endif
			Next

			END TRANSACTION

		Else
			Help(" ",1,"NOCANPRC",,STR0034+CHR(10)+;		//"Processo não pode ser cancelado pois algum dos "
								STR0035+CHR(10)+;		//"títulos gerados encontra-se baixado total ou "
								STR0036+CHR(10)+;		//"parcialmente ou registros não foram encontrados "
										STR0037,1,0)				//"para esse processo"

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Restaura a integridade da tabela de titulos a pagar          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
			If Select("SE2TRB") > 0
				dbSelectArea("SE2TRB")
				dbCloseArea()
				dbSelectArea("SE2")
				dbSetOrder(1)
			Endif		
		Endif
	Endif	
	Set Key VK_F12 To

	UnLockByName("FINA374C",.T.,.F.)
Else
	MsgAlert(STR0010+chr(13)+chr(10)+;	 //"A Verificação de Pis, Cofins e Csll está sendo utilizada"
				STR0011+chr(13)+chr(10)+; //"por outro usuario. Por questoes de integridade de dados, nao"
				STR0012+chr(13)+chr(10)+;  //"‚ permitida a utiliza‡„o desta rotina por mais de um usu rio"
				STR0013,cCadastro) //"simultaneamente. Tente novamente mais tarde."
	Return
Endif
	
RestArea(aArea)

Return(Nil)

//-----------------------------------------------------------------------------------------------------
/*/{Protheus.doc} F374Clean

Limpa o objeto da temporarytable
 
@Author	Leonardo Castro
@since	29/03/2018
/*/
//-----------------------------------------------------------------------------------------------------
Static Function F374Clean(cX As Character)

Default cX := "0"

//Deleta a tabela temporária no banco de dados, caso já exista
If _oFINA3741 <> Nil .And. cX $ "0|1"
	_oFINA3741:Delete()
	_oFINA3741 := Nil
EndIf

If _oFINA3742 <> nIL .And. cX $ "0|2"
	_oFINA3742:Delete()
	_oFINA3742	:= Nil
EndIf

Return Nil

/*/{Protheus.doc} F374Static
	Função responsavel pela inicialização das variaveis estaticas
	@type  Static Function
	@author Vitor Duca
	@since 02/07/2020
	@version 1.0
	@param param, param_type, param_descr
	@return return, return_type, return_description
	@example
	(examples)
	@see (links_or_references)
/*/
Static Function F374Static()
	
	lBlind		:= IsBlind()
	lIsIssBx 	:= FindFunction("IsIssBx")
	dLastPcc  	:= CTOD("22/06/2015")
	__cRetISS   := SuperGetMv("MV_MRETISS",.F.,"1")
	__cNatPIS   := GetMv("MV_PISNAT",.F.,"PIS")
	__cNatCOF   := GetMv("MV_COFINS",.F.,"COF")
	__cNatCSL	:= GetMv("MV_CSLL",.F.,"CSL")
	__cNatNCF	:= &(GetMv("MV_NATNCF",.F.,'"NCF"'))
	__cNatNDF	:= &(GetMv("MV_NATNDF",.F.,'"NDF"'))
 	__F374GRTX	:= ExistBlock("F374GRTX")
 	__F374CNCF	:= ExistBlock("F374CNCF")

Return 