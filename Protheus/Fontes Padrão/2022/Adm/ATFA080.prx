#INCLUDE "ATFA080.CH"
#Include "Protheus.ch"

// 17/08/2009 - Ajuste para filiais com mais de 2 caracteres.
Static lFWCodFil := .T.

//********************************
// Controle de multiplas moedas  *
//********************************
Static lMultMoed := .T.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ ATFA080  ³ Autor ³ Vin¡cius Barreira           ³ Data ³ 28/09/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Virada Anual                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³                            ATUAIZACOES SOFRIDAS                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador  ³ Data   ³   BOPS   ³           Motivo da Alteracao             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Marco A. Glz ³18/04/17³  MMI-365 ³Se replica llamado TVTXMA, el cual consiste³±±
±±³             ³        ³          ³en realizar el calculo de depreciacion,    ³±±
±±³             ³        ³          ³cuando el calendario sea diferente al 01 de³±±
±±³             ³        ³          ³Enero - 31 Diciembre. (ARG)                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function ATFA080()

	Local nDecimais := Set( _SET_DECIMALS )

	Local aSays			:= {}, aButtons := {}
	Local nOpca			:= 0
	Local dDataBx		:= GetNewPar("MV_ATFULBX","")
	Local dDataVir		:= GetNewPar("MV_VIRAATF","")
	Local dUltDepr		:= GetMV("MV_ULTDEPR")
	Local dDataAju		:= If( cPaisLoc<>"BRA", GetNewPar("MV_ATFINDT","" ), ""  ) // Dt do Ultimo Ajuste por Inflacao
	Local lATFInfl		:= If( cPaisLoc<>"BRA", GetNewPar("MV_ATFINFL",.F.), .F. ) // Ativa Ajuste por Inflacao
	Local lVldInfl		:= .T.
	Local lNoAjuInf		:= .F.
	Local cFunction		:= "ATFA080"
	Local cTitle		:= STR0003
	Local bProcess		:= Nil
	Local cDescription	:= STR0004 + STR0009 + STR0010 + STR0011
	Local cPerg			:="AFA080"
	Local aInfoCustom	:= {}
	Local lSldAtf		:= GetNewPar("MV_ATFRSLD",.F.)
	Local cATFCRAT		:= SuperGetMV("MV_ATFCRAT",.F.,"1") //Criterio de atualizacao: 0-Mensal | 1-Anual (Default)
	Local nAuxDia		:= 1
	Local nAuxMes		:= 1

	Aadd(aInfoCustom,{"Cancelar",{|oPanelCenter|oPanelCenter:oWnd:End() },"CANCEL" })

	Private cCadastro	:= OemToAnsi(STR0003) // "    Virada Anual do Ativo Imobilizado    "
	Private cPriDiaMes	:= "0101"
	Private cUltDiaMes	:= "1231"
	Private lPerDepr	:= .F.

	If cPaisLoc == "ARG"
		lPerDepr := ATFXPerDepr(@cPriDiaMes, @cUltDiaMes)
		If lPerDepr
			nAuxMes := Val(Substr(cPriDiaMes,1,2))
			nAuxDia := Val(Substr(cPriDiaMes,3,2))
		EndIf
	EndIf

	Set( _SET_DECIMALS ,4 )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ ..:: Paises Localizados ::.. (11/2004)                ³
	//³Validacao sobre Parametro MV_ATFINFL para que assim    ³
	//³seja feito o ajuste por inflacao anual antes de efetuar³
	//³o fechamento anual do Ativo Fixo.                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lATFInfl
		If Empty( dDataAju )
			MsgStop( OemToAnsi(STR0020), OemToAnsi(STR0021) )  //" Parametro MV_ATFINDT nao existe, favor cria-lo. "###" Parametro necessario inexistente "
			lNoAjuInf := .T.
			lVldInfl  := .F.
		EndIf
		If lVldInfl .And. Empty(dDataVir)
			MsgStop( OemToAnsi(STR0022), OemToAnsi(STR0021) )  //" O Parametro MV_VIRAATF  nao existe "###" Parametro necessario inexistente "
			lNoAjuInf := .T.
			lVldInfl  := .F.
		EndIf
		If lVldInfl .And. ( dDatabase <> dDataAju )
			MsgStop( OemToAnsi(STR0023), OemToAnsi(STR0024) ) //" Antes e necessario rodar a rotina de Ajuste por Inflacao "###" Ajuste por inflacao "
			lNoAjuInf := .T.
			lVldInfl  := .F.
		EndIf
		If lVldInfl .And. ( dDatabase == dDataVir )
			MsgStop( OemToAnsi(STR0025), OemToAnsi(STR0026) )  //" Fechamento anual ja processado neste exercicio "###" Ja processado "
			lNoAjuInf := .T.
			lVldInfl  := .F.
		EndIf
		If lNoAjuInf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Rotina de Ajuste por Inflacao nao foi executada³
			//³e parametro MV_ATFINFL esta ativado            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Return
		Endif
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Desenha a tela do programa  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc=="CHI"

		If Year(dDataVir) >=  Year(dDataBase)
			MsgStop(OemToAnsi(STR0018),OemToAnsi(STR0019))    //" Ja foi executada a rotina de virada anual "###"Virada Anual "
			Return .t.
		EndIf

		If cATFCRAT == "1" //Criterio de atualização anual
			If Year(dDataBx) <>  Year(dDataBase)
				MsgStop(OemToAnsi(STR0014),OemToAnsi(STR0015))  // " So pode ser feita a virada anual apos o calculo da baixa anual " ###" Baixa Anual "
				Return .t.
			EndIf
		ElseIf cATFCRAT == "0" //Criterio de atualização mensal
			If Month(dDataBx) != 12 .Or. Year(dDataBx) <>  Year(dDataBase)
				MsgStop(OemToAnsi(STR0036),OemToAnsi(STR0034)) //"Só pode ser feita a virada anual após o cálculo de credito IR"###"Atenção"
				Return .t.
			EndIf
		Else
			MsgStop(OemToAnsi(STR0035),OemToAnsi(STR0034)) //"Parametro MV_ATFCRAT configurado incorretamente"###"Atenção"
			Return .t.
		EndIf

		If dDataBase < dDataBx
			MsgStop(OemToAnsi(STR0016), OemToAnsi(STR0017))  // "A virada so pode ser feita com data igual ou posterior ao calculo de credito IR."### "Data Sistema"
			Return .t.
		EndIf
	EndIf

	//se tem o parametro MV_ATFRSLD (REFAZ SALDO) CONFIGURADO COM .T. e controla data de virada
	If lSldAtf
		dDataVir :=  AtfGetSN0("13","VIRADAATIVO")
		If !Empty(dDataVir)
			dDataVir := STOD(dDataVir)
			//data da virada deve ser sempre no primeiro dia do ano
			If lPerDepr
				If ( DTOS(dDataVir) != "19800101" .And. Year(dDataBase) != Year(dDataVir)+1 ) .Or. Month(dDataBase) != nAuxMes .Or. Day(dDataBase) != nAuxDia .Or.( DTOS(dDataVir) != "19800101" .And. dDataBase != dUltDepr+1 )
					Aviso(STR0034,STR0028+CRLF+;  //"Atencao"###"A virada anual deve ser executada sempre que se encerra o exercício contábil. "
					STR0037 + Strzero(nAuxDia, 2) + "/" + Strzero(nAuxMes, 2) + "/" + StrZero(Year(dDataVir)+1,4)+CRLF+;  //"No Ativo, o exercício encerra-se após o cálculo de 31 de Dezembro."##"Data p/ proxima Virada : 01/01/"
					STR0031+DtoC(dDataVir)+"       "+;   //"Ultima Virada : "
					STR0032+DtoC(dUltDepr), {"Ok"})  //"Ultima Calculo Depreciacao : "
					Return .t.
				EndIf
			Else
				If ( DTOS(dDataVir) != "19800101" .And. Year(dDataBase) != Year(dDataVir)+1 ) .Or. Month(dDataBase) != 1 .Or. Day(dDataBase) != 1 .Or.( DTOS(dDataVir) != "19800101" .And. dDataBase != dUltDepr+1 )
					Aviso(STR0034,STR0028+;  //"Atencao"###"A virada anual deve ser executada sempre que se encerra o exercício contábil. "
					STR0029+Space(25)+STR0030+StrZero(Year(dDataVir)+1,4)+CRLF+;  //"No Ativo, o exercício encerra-se após o cálculo de 31 de Dezembro."##"Data p/ proxima Virada : 01/01/"
					STR0031+DtoC(dDataVir)+"       "+;   //"Ultima Virada : "
					STR0032+DtoC(dUltDepr), {"Ok"})  //"Ultima Calculo Depreciacao : "
					Return .t.
				EndIf
			EndIf
		Else
			Aviso(STR0034,STR0028+;  //"Atencao"##"A virada anual deve ser executada sempre que se encerra o exercício contábil. "
			STR0029+Space(50)+CRLF+;  //"No Ativo, a virada ocorre após o cálculo de 31 de Dezembro. "
			STR0033, {"Ok"})  //"Erro : Nao preenchido a data da virada.Verifique!"
			Return .t.
		EndIf
	EndIf

	Pergunte("AFA080",.F.)

	If MV_PAR07 == 1 .And. !Empty(xFilial("SN1")) // Seleciona filiais
		bProcess :=  {|oSelf|IIF( AT080Valid( ), AF080Fil(MV_PAR08,MV_PAR09,oSelf) , .T. ) }
	Else
		bProcess :=  {|oSelf|Iif(AT080Valid(),A080Virada(oSelf),.T.)}
	ENdIf

	tNewProcess():New( cFunction, cTitle, bProcess, cDescription, cPerg,aInfoCustom, .T.,5, "Descrição do painel Auxiliar", .T. )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Recupera a Integridade dos dados ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SET( _SET_DECIMALS , nDECIMAIS )

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AF080Fil  ºAutor  ³Alvaro Camillo Neto º Data ³  21/09/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Executa o processamento para cada filial                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ ATFA080                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AF080Fil(cFilDe,cFilAte,oSelf)
	
	Local cFilIni	:= cFIlAnt
	Local aArea		:= GetArea()
	Local nInc		:= 0
	Local aSM0		:= AdmAbreSM0()

	oSelf:SaveLog( "MENSAGEM: EXECUTANDO A APURACAO DA FILIAL " + cFilDe + " Ate " + cFilAte )

	For nInc := 1 To Len( aSM0 )
		If aSM0[nInc][1] == cEmpAnt .AND. aSM0[nInc][2] >= cFilDe .AND. aSM0[nInc][2] <= cFilAte
			cFilAnt := aSM0[nInc][2]

			oSelf:SaveLog( "MENSAGEM: EXECUTANDO A APURACAO DA FILIAL " + cFilAnt )

			A080Virada( oSelf )
		EndIf
	Next

	cFilAnt := cFilIni
	oSelf:SaveLog( "MENSAGEM: TERMINO DA APURACAO DA FILIAL " + cFilDe + " Ate " + cFilAte )

	RestArea(aArea)
	
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A080Virada³ Autor ³ Wagner Xavier         ³ Data ³ 28/01/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Virada anual de saldos.                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A080Virada(oSelf)

	Local aTxMedia		:= {}
	Local aTaxas		:= {}
	Local aDias			:= {}
	Local nUltTxMes		:= 0
	Local nDias			:= 0
	Local nTaxaDepr		:= 0
	Local nTaxaCorr		:= 0
	Local nAx,nAx2,cAx,nMedia
	Local cChave
	Local lDelSN1		:= .T.    //Verifica se o registro pode ser excluido do SN1
	Local cChave1
	Local lInverte		:= .F.
	Local cGrupoPass	:= GetMv("MV_GRPASS")
	Local lCtb			:= CtbInUse()
	Local cAliasTrb
	Local lNatCont		:= GetNewPar("MV_ATFNAT", "P") == "C"
	Local nFator		:= 1
	//********************************
	// Controle de multiplas moedas  *
	//********************************
	Local __nQuantas := If(lMultMoed,AtfMoedas(),5)
	Local lSldAtf 	:= GetNewPar("MV_ATFRSLD",.F.)
	Local cQuery

	Private cMoedaAtf   := GetMv("MV_ATFMOED")
	Private nVlCorAcum  := nVlDepAcum := 0

	If MV_PAR07 == 1 .And. Empty(xFilial("SN1"))
		oSelf:SaveLog("TRATAMENTO MULTI FILIAL DESABILITADO: SN1 COMPARTILHADO")
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Calcular M‚dia das moedas para c lculo da corre‡„o monet ria.       ³
	//³ Caso a moeda seja UFIR (MV_MOEDATF)  e data base for superior a     ³
	//³ 01/09/94, dever  ser utilizada a taxa da UFIR do primeiro dia do    ³
	//³ pr¢ximo mˆs.                                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//********************************
	// Controle de multiplas moedas  *
	//********************************
	aTxMedia  	:= 	If(lMultMoed,AtfMultMoe(,,{|x| 0}), {0,0,0,0,0} )
	aTaxas    	:= {}
	aDias     	:= 	If(lMultMoed,AtfMultMoe(,,{|x| 0}), {0,0,0,0,0} )
	nUltTxMes	:= 0
	nRegua		:= ( Day(dDatabase) )
	nDias 		:= 0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Transfere as taxas das moedas para um array e pega a £ltima taxa do mˆs   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oSelf:Savelog("INICIO")	//"Processamento iniciado."
	oSelf:SetRegua1(nRegua)

	DbSelectArea( "SM2" )
	DbSeek(FirstDay(dDataBase), .T.)
	While !Eof() .And. SM2->M2_DATA <= LastDay(dDataBase)
		If oSelf:lEnd
			Exit
		EndIf
		oSelf:IncRegua1()

		//********************************
		// Controle de multiplas moedas  *
		//********************************
		AAdd(aTaxas,{})
		If lMultMoed
			AtfMultMoe(,,{|x| aAdd(aTaxas[Len(aTaxas)], If( x=1 , SM2->M2_Data , SM2->&("M2_Moeda"+Alltrim(Str(x))) )) })
		Else
			AAdd(aTaxas,{SM2->M2_Data,SM2->M2_Moeda2,SM2->M2_Moeda3,SM2->M2_Moeda4,SM2->M2_Moeda5})
		EndIf

		If lMultMoed
			AtfMultMoe(,,{|x| If(x=1,.F., aDias[x] += IIf(SM2->&("M2_Moeda"+Alltrim(Str(x))) != 0, 1, 0) ) })
		Else
			aDias[2] += IIf(SM2->M2_Moeda2 != 0, 1, 0)
			aDias[3] += IIf(SM2->M2_Moeda3 != 0, 1, 0)
			aDias[4] += IIf(SM2->M2_Moeda4 != 0, 1, 0)
			aDias[5] += IIf(SM2->M2_Moeda5 != 0, 1, 0)
		EndIf

		++nDias
		dbSkip()
	EndDo

	//********************************
	// Controle de multiplas moedas  *
	//********************************
	For nAx := 2 To __nQuantas
		cAx := Alltrim(Str(nAx))
		aTxMedia[nAx] := 0
		nMedia := 0
		For nAx2 := 1 To nDias
			aTxMedia[nAx] += aTaxas[nAx2][nAx]
			nMedia ++
			If nAx == Val(cMoedaAtf)
				nUltTxMes := IIf(aTaxas[nAx2][nAx]=0,nUltTxMes,aTaxas[nAx2][nAx])
			Endif
		EndFor
		aTxMedia[nAx] := aTxMedia[nAx] / nMedia
	EndFor

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica qual ufir ser  usada para apresentar no Raz„o. Existem   ³
	//³ duas: a do c lculo da corre‡„o e a do c lculo da deprecia‡„o.     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nTaxaDepr := aTxMedia[ Val( cMoedaAtf ) ]
	nTaxaCorr := Iif( dDataBase < ctod("01/09/94","ddmmyy"), nUltTxMes, af050MesSeg(cMoedaAtf) )

	Af120Delete("SN5", dDataBase)		// Saldos da conta
	Af120Delete("SN6", dDataBase)		// Item Contabil
	Af120Delete("SNA", dDataBase)		// Classe de Valor
	Af120Delete("SNC", dDataBase)		// Centro de custo

	cAliasTrb := GetNextAlias()
	cQuery 	:= " SELECT SN3.R_E_C_N_O_ RECNO "
	cQuery  += "FROM "+RetSqlName("SN3")+" SN3 "
	cQuery  += "WHERE "
	cQuery  += "N3_FILIAL = '" + xFilial("SN3") + "' AND "
	cQuery  += "N3_AQUISIC <= '" + Dtos(dDataBase) + "'"
	If mv_par01 == 2 // naso considera itens baixados
		cQuery  += " AND N3_BAIXA < '1'"
	Else
		// Se considera, verifica o periodo da baixa
		cQuery  += " AND (N3_BAIXA < '1' OR (N3_DTBAIXA >= '" + Dtos(mv_par02) + "' AND N3_DTBAIXA <= '" + Dtos(mv_par03) + "'))"
	Endif
	cQuery  += " AND D_E_L_E_T_ = ' '"
	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTrb,.T.,.T.)

	oSelf:SetRegua2(2)
	oSelf:IncRegua2()

	While (cAliasTrb)->(!Eof())

		SN3->(DbGoto((cAliasTrb)->RECNO)) // Posiciona no Alias original

		cSinal 	 := "+"
		lInverte := .F.

		If !lCtb
			dbSelectArea("SI1")
			dbSetOrder(1)
			If dbSeek(xFilial("SI1")+SN3->N3_CCONTAB)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ lInverte ‚ .T. se a Conta do bem pertencer ao grupo de Passi-³
				//³ vos e seu saldo for credor.                                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (SI1->I1_NORMAL=="D" .And. Subs(SI1->I1_CODIGO,1,1)$cGrupoPass)
					lInverte := .T.
				Endif
			Endif
		Else
			dbSelectArea("CT1")
			dbSetOrder(1)
			If dbSeek(xFilial("CT1")+SN3->N3_CCONTAB)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ lInverte ‚ .T. se a Conta do bem pertencer ao grupo de Passi-³
				//³ vos e seu saldo for credor.                                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (CT1->CT1_NORMAL=="1" .And. Subs(CT1->CT1_CONTA,1,1)$cGrupoPass)
					lInverte := .T.
				Endif
			Endif
		EndIf

		// Posiciona no cadastro de bens
		dbSelectArea("SN1")
		dbSetOrder(1)
		If !(dbSeek(xFilial("SN1")+SN3->N3_CBASE+SN3->N3_ITEM))
			DbSelectArea(cAliasTrb)
			dbSkip()
			Loop
		Endif

		If SN1->N1_PATRIM = "S" .Or. SN1->N1_PATRIM = "A"// Inverte o sinal caso a conta seja PL ou Amortização ( legado e base histórica )
			lInverte := .T.
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o Saldo do SN5 - Corre‡„o ³
		//³ Manutencao: Mon  03-04-1996  10:19 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		dbSelectArea("SN3")
		If VAL( SN3->N3_BAIXA ) < 1  .or. MV_PAR01 == 1

			//********************************
			// Controle de multiplas moedas  *
			//********************************
			aValOrig	:= If(lMultMoed,AtfMultMoe(,,{|x| 0}), {0,0,0,0,0} )
			If lMultMoed
				AtfMultMoe(,,{|x| aValOrig[x] := SN3->&("N3_VORIG"+Alltrim(Str(x)))+SN3->&(If(x>9,"N3_AMPLI","N3_AMPLIA")+Alltrim(Str(x)))  })
			Else
				aValOrig[2] := SN3->N3_VORIG2+SN3->N3_AMPLIA2
				aValOrig[3] := SN3->N3_VORIG3+SN3->N3_AMPLIA3
				aValOrig[4] := SN3->N3_VORIG4+SN3->N3_AMPLIA4
				aValOrig[5] := SN3->N3_VORIG5+SN3->N3_AMPLIA5
			EndIf
			aValOrig[1] := SN3->N3_VORIG1+SN3->N3_VRCACM1+SN3->N3_AMPLIA1

			//Considera o parametro MV_ATFNAT caso o conteudo seja "C" (Considera Natureza da Conta).
			If lNatCont
				nFator := GetFator()
				cSinal := Iif (nFator = 1, "+" , "-" )
				//Senao, realiza a inversao padrao do sistema.
			Elseif lInverte
				cSinal := IIf(cSinal=="+", "-", "+")
			Endif
			ATFSaldo(	SN3->N3_CCONTAB,dDataBase,"0",0,0,0,0,0,cSinal,nTaxaCorr,SN3->N3_SUBCCON,,;
			SN3->N3_CLVLCON,SN3->N3_CUSTBEM,"1", aValOrig)
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o Saldo do SN5 - Deprecia‡„o ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		//********************************
		// Controle de multiplas moedas  *
		//********************************
		aValDepr	:= If(lMultMoed,AtfMultMoe(,,{|x| 0}), {0,0,0,0,0} )
		If lMultMoed
			AtfMultMoe(,,{|x| aValDepr[x] := SN3->&(If(x>9,"N3_VRDAC","N3_VRDACM")+Alltrim(Str(x))) +  If(x=1,SN3->N3_VRCDA1,0)  })
		Else
			aValDepr[1] := SN3->N3_VRDACM1 + SN3->N3_VRCDA1
			aValDepr[2] := SN3->N3_VRDACM2
			aValDepr[3] := SN3->N3_VRDACM3
			aValDepr[4] := SN3->N3_VRDACM4
			aValDepr[5] := SN3->N3_VRDACM5
		EndIf

		ATFSaldo(	SN3->N3_CCDEPR,dDataBase,"0",0,0,0,0,0,cSinal,nTaxaDepr,SN3->N3_SUBCCDE,,SN3->N3_CLVLCDE,;
		SN3->N3_CCCDEP,"4", aValDepr)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Limpeza dos acumuladores do exerc¡cio  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SN3")
		RecLock("SN3")

		//********************************
		// Controle de multiplas moedas  *
		//********************************
		If lMultMoed
			AtfMultMoe("SN3","N3_VRDBAL",{|x| 0 })
		Else
			SN3->N3_VRDBAL1 := 0  // Deprecia‡„o acumulada exerc¡cio moeda 1
			SN3->N3_VRDBAL2 := 0
			SN3->N3_VRDBAL3 := 0
			SN3->N3_VRDBAL4 := 0
			SN3->N3_VRDBAL5 := 0
		EndIf
		SN3->N3_VRCDB1  := 0  // Corre‡„o deprec.acum. exerc¡cio (moeda 1)

		If cPaisLoc == "CHI"
			SN3->N3_CLVRCOA :=  SN3->N3_VRCACM1  // acumulado de correcion M. - SN3->N3_VRCMES1, 14/12/2012
			SN3->N3_CLVRDEA :=  SN3->N3_VRDACM1  // acumulado de depreciacion
		endif
		SN3->N3_VRCMES1 := 0  // Corre‡„o no mes moeda1
		SN3->N3_VRCBAL1 := 0  // Corre‡„o no balan‡o
		//********************************
		// Controle de multiplas moedas  *
		//********************************
		If lMultMoed
			AtfMultMoe("SN3","N3_VRDMES",{|x| 0 })
		Else
			SN3->N3_VRDMES1 := 0  // Valor deprecia‡„o mes
			SN3->N3_VRDMES2 := 0
			SN3->N3_VRDMES3 := 0
			SN3->N3_VRDMES4 := 0
			SN3->N3_VRDMES5 := 0
		EndIf
		SN3->N3_VRCDM1  := 0  // Corre‡„o deprecia‡„o no mes

		MsUnlock()

		DbSelectArea(cAliasTrb)
		DbSkip()
	End

	oSelf:IncRegua2(LTrim(Str(2)))

	(cAliasTrb)->(DbCloseArea())

	If mv_par04 == 1     //deleta bens baixados

		If Empty(mv_par05)
			mv_par05 := Ctod("01/01/1980")
		Endif

		cAliasTrb := GetNextAlias()
		cQuery := " SELECT SN3.R_E_C_N_O_ RECNO "
		cQuery  += "FROM "+RetSqlName("SN3")+" SN3 "
		cQuery  += "WHERE "
		cQuery  += "N3_FILIAL = '" + xFilial("SN3") + "' AND "
		cQuery  += "N3_BAIXA >= '1' AND "
		cQuery  += "N3_DTBAIXA <> ' ' AND "
		cQuery  += "N3_DTBAIXA >= '" + Dtos(mv_par05) + "' AND "
		cQuery  += "N3_DTBAIXA <= '" + Dtos(mv_par06) + "' AND "
		cQuery  += "D_E_L_E_T_ = ' '"
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasTrb,.T.,.T.)

		While (cAliasTrb)->(!Eof())

			SN3->(DbGoto((cAliasTrb)->RECNO)) // Posiciona no Alias original

			cChave  := (SN3->N3_CBASE+SN3->N3_ITEM+SN3->N3_TIPO)
			nPosSn3 := SN3->(Recno())

			cChave1 := SN3->N3_CBASE+SN3->N3_ITEM
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se todos itens do SN3 foram deletados para deletar  ³
			//³ tambem o SN1. O registro correspondente no SN1 so pode ser   ³
			//³ excluido se nao existirem bens que nao foram baixados.       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			lDelSn1 := .T.
			SN3->(DbSetOrder(1))

			If SN3->(dbSeek(xFilial("SN3")+cChave1))
				// Verifica se ha algum item no SN3 em aberto, para nao excluir o SN1
				While SN3->(!Eof()) .And. xFilial("SN3")==SN3->N3_FILIAL .And.;
				cChave1==SN3->N3_CBASE+SN3->N3_ITEM
					If Val(SN3->N3_BAIXA)==0
						lDelSN1 := .F.
						Exit
					Endif
					SN3->(dbSkip())
				EndDo
			Endif

			Begin Transaction
				SN3->(dbGoto(nPosSN3))
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Inicia a exclusao dos bens do cadastro de movimentos (SN4)   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SN4")
				dbSetOrder(1)
				If dbSeek(xFilial("SN4")+cChave)
					While !Eof() .And. N4_FILIAL==xFilial("SN4") .and.;
					SN4->N4_CBASE+SN4->N4_ITEM+SN4->N4_TIPO==cChave

						oSelf:IncRegua1()

						If SN3->N3_SEQREAV != SN4->N4_SEQREAV
							dbSelectArea("SN4")
							dbSkip()
							Loop
						EndIf
						
						If SN4->N4_OCORR == '05' .AND. !lDelSN1
							dbSkip()
							Loop
						EndIf
						
						Reclock("SN4")
						dbDelete()
						MsUnlock()
						FkCommit()
						dbSkip()
					EndDo
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Inicia a exclusao dos bens do cadastro de movimentos (SN2)   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SN2")
				dbSetOrder(1)
				If dbSeek(xFilial("SN2")+cChave)
					While !Eof() .And. SN2->N2_FILIAL == xFilial("SN2") .and.;
					SN2->N2_CBASE+SN2->N2_ITEM+SN2->N2_TIPO == cChave
						If SN3->N3_SEQ != SN2->N2_SEQ
							dbSelectArea("SN2")
							dbSkip()
							Loop
						EndIf

						oSelf:IncRegua1()

						Reclock("SN2")
						dbDelete()
						MsUnlock()
						FkCommit()
						dbSkip()
					EndDo
				EndIf
				Reclock("SN3")
				dbDelete()
				MsUnlock()
				FkCommit()
				If lDelSN1
					dbSelectArea("SN1")
					If (dbSeek(xFilial("SN1")+cChave1))
						Reclock("SN1")
						dbDelete()
						MsUnlock()
						FkCommit()
					EndiF
				Endif
			End Transaction

			dbSelectArea(cAliasTrb)
			dbSkip()
		EndDo
		(cAliasTrb)->(DbCloseArea())
	EndIf

	If cPaisLoc $ "CHI|ARG"
		PUTMV("MV_VIRAATF",DTOS(dDataBase))   // Atualiza a data da ultima execucao
	EndIf
	If lSldAtf
		AtfPutSN0("13","VIRADAATIVO", /*cCampo*/, StrZero(Year(dDataBAse),4)+cPriDiaMes/*cConteudo*/) // Atualiza a data da ultima virada na tabela 13 (SN0)
	EndIf

	oSelf:Savelog("FIM")	//"Processamento encerrado."

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ AT080Valid    ³ Autor ³ Ana Paula     ³ Data ³ 13.12.08    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validação dos parametros para processamento                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ 				                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AT080Valid(nOpca)
	
	Local lexec:= .T.
	Default nOpca := 1

	If mv_par01 == 1 .And. nOpca == 1 // Considera baixas
		If Empty(mv_par02) .Or. Empty(mv_par03)
			HELP(" ",1,"NVAZIO",,STR0012,4,0) // "Data inicial ou data final das baixas a considerar, não pode ser vazia"
			// Forca a saida da rotina, sem processar a virada anual
			nOpca := 2
			lexec:= .F.
		Endif
	Endif
	If mv_par04 == 1 .And. nOpca == 1 // Elimina baixados
		If Empty(mv_par05) .Or. Empty(mv_par06)
			HELP(" ",1,"NVAZIO",,STR0013,4,0) // "Data inicial ou data final das baixas a eliminar, não pode ser vazia"
			// Forca a saida da rotina, sem processar a virada anual
			nOpca := 2
			lexec:= .F.
		Endif
	Endif
	
Return lexec

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³AdmAbreSM0³ Autor ³ Orizio                ³ Data ³ 22/01/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retorna um array com as informacoes das filias das empresas ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AdmAbreSM0()
	
	Local aArea			:= SM0->( GetArea() )
	Local aAux			:= {}
	Local aRetSM0		:= {}
	Local lFWLoadSM0	:= .T.
	Local lFWCodFilSM0 	:= .T.

	If lFWLoadSM0
		aRetSM0	:= FWLoadSM0()
	Else
		DbSelectArea( "SM0" )
		SM0->( DbGoTop() )
		While SM0->( !Eof() )
			aAux := { 	SM0->M0_CODIGO,;
			IIf( lFWCodFilSM0, FWGETCODFILIAL, SM0->M0_CODFIL ),;
			"",;
			"",;
			"",;
			SM0->M0_NOME,;
			SM0->M0_FILIAL }

			aAdd( aRetSM0, aClone( aAux ) )
			SM0->( DbSkip() )
		End
	EndIf

	RestArea( aArea )
	
Return aRetSM0
