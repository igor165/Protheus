#INCLUDE "fina376.ch"
#Include "PROTHEUS.CH"
#INCLUDE "FWMVCDEF.CH"

Static lFWCodFil 	:= .T.
Static lSE2xSE5		:= FwModeAccess("SE2",3) == "C"
Static cCgc 		:= ""
Static cFilLogada 	:= ""
Static __oFina376   := Nil
Static __F376QRY    := ExistBlock("F376QRY")
Static __F376GRV    := ExistBlock("F376GRV")

//-------------------------------------------------------------------
/*{Protheus.doc} FINA376

Programa para aglutinar titulos de impostos.

@author Mauricio Pequim
@version 12
@since   15/03/2004
*/
//-------------------------------------------------------------------
Function FinA376( nPosArotina, lAutomato, cProc )
	Local cPerg			:= "AFI376"
	Local oBrowse

	Private cLote
	Private aRotina		:= MenuDef()
	Private cCadastro 	:= STR0001

	Default nPosArotina	:= 0
	Default lAutomato	:= .F.
	Default cProc		:= ""

	cFilLogada	:= cFilAnt

	//-------- Variaveis utilizadas para parametros ---------------
	// mv_par01 // Mostra lancamentos contabeis
	// mv_par02 // Aglutina lancamentos contabeis
	// mv_par03 // Lancamentos contabeis on-line
	// mv_par04 // Imprime Relatorio
	// mv_par05 // Do Vencimento
	// mv_par06 // Ate o Vencimento
	// mv_par07 // Filial De
	// mv_par08 // Filial Ate
	// mv_par09 // Vencto. Titulo Gerado
	// mv_par10 // Gerar Titulos na Filial
	// mv_par11 // Considerar titulos - Devidos/Todos
	//--------------------------------------------------------------
	SetKey(VK_F12,{|a,b| AcessaPerg("AFI376",.T.)})
	Pergunte(cPerg,.F.)

	If ExistBlock("F376BRW")
		ExecBlock("F376BRW",.F.,.F.)
	EndIf

	If nPosArotina > 0
		bBlock := &( "{ |x,y,z,k,i| " + aRotina[ nPosArotina,2 ] + "(x,y,z,k,i) }" )
		dbSelectArea("SE2")
		Eval( bBlock,Alias(),SE2->(Recno()), nPosArotina, lAutomato, cProc )
	Else
		oBrowse := FWmBrowse():New()
		oBrowse:SetAlias( 'SE2' )
		oBrowse:SetDescription(cCadastro)
		oBrowse:AddLegend("SE2->E2_SALDO > 0 "  , "GREEN", STR0052) // "T¡tulo em aberto"
		oBrowse:AddLegend("SE2->E2_SALDO == 0 " , "RED"  , STR0053) // "T¡tulo baixado"
		oBrowse:Activate()
	Endif

	Set Key VK_F12 To

Return(.T.)

//-------------------------------------------------------------------
/*{Protheus.doc} fa376Gera

Programa de Aglutinacao de impostos

@author Mauricio Pequim Jr.
@version 12
@since   16/03/2004
*/
//-------------------------------------------------------------------
Function fa376Gera( cAlias, nReg, nOpcx, lAutomato )
	Local lPanelFin		:= IsPanelFin()
	Local aSays			:= {}
	Local aButtons		:= {}
	Local lEnd			:= Nil 
	Local aRegs			:= {}
	Local aValImp       := {}
	Local nOpca			:= 0
	Local aArea			:= GetArea()
	Local cPerg			:= "AFI376"

	Local cLojaImp		:= PadR( "00", TamSX3( "A2_LOJA" )[1], "0" )
	Local nI 			:= 1
	Local nJ 			:= 1
	Local nPosic 		:= 0
	Local aSM0 			:= FWLoadSM0()
	Local aSelAux 		:= {}
	Local nNroFil 		:= 1
	Local cGrpEmp 		:= AllTrim(FWGrpCompany())
	Local lOk 			:= .T.
	Local cFilBrowse 	:= ""
	Local aSelFil		:= {}
	Local cTmpFil		:= ""

	Default lAutomato	:= .F.

	lEnd := .F.

	SA2->(DbSetOrder(1))
	SA2->(MsSeek(xFilial("SA2")+GetMv("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMv("MV_UNIAO")))+cLojaImp))
	cForUniao	:= SA2->A2_COD
	cLojUniao	:= SA2->A2_LOJA
	cNomUniao	:= SA2->A2_NREDUZ

	// Sem foro para utiliza‡„o da Aglutinacao de Impostos
	// Não permite o acesso simultaneo - rotina por mais de 1 usuario.
	IF ( nHdlLock := MSFCREATE("FINA376.L"+cEmpAnt+FWCodEmp())) < 0
		MsgAlert(STR0005+chr(13)+chr(10)+; //"A Funcao de Aglutinação de Impostos esta sendo utilizada por"
					STR0006+chr(13)+chr(10)+;	 //"outro usuario. Por questoes de integridade de dados, nao"
					STR0007+chr(13)+chr(10)+; //"‚ permitida a utiliza‡„o desta rotina por mais de um usu rio"
					STR0008,cCadastro) //"simultaneamente. Tente novamente mais tarde."
		Return
	Endif

	// Grava no sem foro informações sobre quem esta utilizando a compensação
	FWrite(nHdlLock,"Operador: "+cUserName+chr(13)+chr(10)+;
							"Empresa.: "+cEmpAnt+FWCodEmp()+chr(13)+chr(10)+;
							"Filial..: "+cFilAnt+chr(13)+chr(10))

	// Inicializa o log de processamento
	ProcLogIni( aButtons )

	Aadd(aSays,STR0028)//"Este programa tem como objetivo de gerar títulos aglutinadores de impostos a pagar"
	Aadd(aSays,STR0029)//"(Irrf, Pis, Cofins e Csll)"

	If (SuperGetMV( "MV_FINCTAL", .T., "1" ) == "2")
		Aadd(aSays," ")
		Aadd(aSays,"*** " + STR0047 + " ***")//"Controle de alçadas ativo"
		Aadd(aSays,STR0048)//"Os novos títulos terão o aprovador padrão (parâmetro MV_FINAP01 - moeda 01)."
	Endif

	If !lAutomato
		If lPanelFin//Chamado pelo Painel Financeiro
			aButtonTxt := {}
			If Len(aButtons) > 0
				AADD(aButtonTxt,{STR0044,STR0044,aButtons[1][3]})// Visualizar
			Endif
			AADD(aButtonTxt,{STR0045,STR0045, {||Pergunte(cPerg,.T. )}})// Parametros
			FaMyFormBatch(aSays,aButtonTxt,{||nOpca :=1},{||})
		Else
			Aadd(aButtons, { 05,.T.,{|| Pergunte(cPerg,.T. )}})
			Aadd(aButtons, { 01,.T.,{|o| nOpca :=1, o:oWnd:End()}})
			Aadd(aButtons, { 02,.T.,{|o| o:oWnd:End()}})
			FormBatch(cCadastro,aSays,aButtons)
		Endif
	Else
		nOpca := If( Fa376Fil(), 1, 0 )
	EndIf

	If nOpca == 1

		//Pega a raiz do cnpj da filial centralizadora
		If !Fa376Fil(@nPosic)
			lOk := .F.
		EndIf

		If lOk
			// Atualiza o log de processamento
			ProcLogAtu("INICIO")

			// Cria as naturezas necessarias
			F376NatNew(@cForUniao,@cLojUniao,@cNomUniao)

			// GESTAO - inicio
			If MV_PAR13 == 1
				// Set a cfilant, pois se nenhuma filial for selecionada considera a filial logada e não a filial posicionada no browse.
				cFilBrowse := cFilAnt
				cFilAnt := cFilLogada

				AdmSelecFil("AFI376",13,.F.,@aSelAux,"SE2",.F.)

				// restaura a filial do browse
				cFilAnt := cFilBrowse

				nNroFil := Len(aSelAux)

				If nNroFil > 1
					For nI := 1 To nNroFil
						For nJ := 1 To Len(aSM0)
							If aSelAux[nI] == aSM0[nJ, 2] .And. AllTrim(SubStr(aSM0[nJ, 18], 1, 8)) == cCGC .And. AllTrim(aSM0[nJ, 1]) == cGrpEmp
								Aadd(aSelFil, aSelAux[nI])
							EndIf
						Next nJ
					Next nI
				EndIf

				// Restaura o pergunte, pois o mesmo é alterado para 2 quando não é selecionada nenhuma filial.
				MV_PAR13 := 1
			Else
				Aadd(aSelAux, cFilLogada)
				nNroFil := Len(aSelAux)
			EndIf

			If nNroFil == 1 .And. nPosic > 0
				For nI := 1 To Len(aSM0)
					If AllTrim(aSM0[nI,2]) == AllTrim(aSelAux[1]) .And. AllTrim(aSM0[nI, 1]) == cGrpEmp .And. SubStr(AllTrim(aSM0[nI, 18]), 1, 8) == cCgc
						Aadd(aSelFil, xFilial("SE2", aSelAux[1]))
						Exit
					Endif
				Next nI
			Endif

			If Len(aSelFil) == 0
				Help(" ",1,"CNPJFIL",,STR0051, 1, 0)
				lOk := .F.
			EndIf

			If lOk
				Processa( { |lEnd| Fa376Pagar( @aValImp, @aRegs, @aSelFil, @cTmpFil, lAutomato ) },STR0001)// "Aglutinação de Impostos"

				If Len(aValImp) >= 1
					Fa376Result( aValImp, cForUniao, cLojUniao, cNomUniao, aRegs, lAutomato )
				Else
					Help(" ",1,"RECNO")
					ProcLogAtu("ERRO","RECNO",Ap5GetHelp("RECNO"))
				Endif

				If !Empty(cTmpFil)
					CtbTmpErase(cTmpFil)
				Endif
			EndIf

			// Atualiza o log de processamento
			ProcLogAtu("FIM")
		EndIf
	Endif

	fclose(nHdlLock)
	Ferase("FINA376.L"+cEmpAnt+FWCodEmp())

	RestArea(aArea)

Return(Nil)


//-------------------------------------------------------------------
/*{Protheus.doc} Fa376Pagar

Processamento da analise do contas a pagar

@author Mauricio Pequim Jr.
@version 12
@since   23/08/2001
*/
//-------------------------------------------------------------------
Function Fa376Pagar( aValImp, aRegs, aSelFil, cTmpFil, lAutomato ) As Logical
	Local aRetProj As Array
	Local nX       As Numeric
	Local lRet     As Logical
	Local cImposto As Character
	Local nPos	   As Numeric
	Local aVImpAux As Array
	Local aRegsAux As Array

	Default aSelFil		:= {}
	Default cTmpFil		:= ""
	Default lAutomato	:= .F.


	//Inicialização das variaveis
	aRetProj := {}
	nX       := 0
	lRet     := .T.
	cImposto := ""
	nPos     := 0
	aVImpAux := {}
	aRegsAux := {}

	lRet := F376CriaTmp(aSelFil,cTmpFil)

	If lRet
		aValImp := {}
		aRegs   := {}

		ProcRegua(RecCount())

		While SE2TRB->(!Eof())
			IncProc(STR0016)
			SE2->(dbGoto(SE2TRB->RECNO))

			//Considera titulos
			//Todos - Todos os TX independentes de o titulo pai ter sido baixado.
			//Devidos - Apenas os titulos cujos titulos pai tenha sofrido uma baixa.
			//Essa pergunta visa diferenciar os titulos efetivamente devidos, ou seja que os titulos
			//pai sofreram uma baixa (a lei define que o fato gerador do imposto eh o pagamento
			//do titulo pai).
			If MV_PAR11 == 2 .and. !Fa376Pai()
				SE2TRB->(DbSkip())
				Loop
			Endif

			// Atentar-se ao alterar a variável "cImposto" pois ela possui interferência direta na gravação do E2_CODRET
			// dos títulos aglutinados
			cImposto := SE2->(E2_TIPO+"  "+E2_NATUREZ+E2_CODRET)
			If Len(aValImp) > 0
				nPos := Ascan(aValImp,{ |x| x[1] == cImposto } )
			Endif

			If nPos > 0
				aValImp[nPos,2] += SE2->E2_SALDO
			Else
				AADD(aValImp, {cImposto, SE2->E2_SALDO })
			Endif

			AADD(aRegs, {SE2->(Recno()), SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA)} )
			SE2TRB->(dbSkip())
		Enddo

		If Len(aValImp) >= 1 .and. ExistBlock("F376PROJ")
			aRegsAux := AClone(aRegs)
			aVImpAux := AClone(aValImp)

			aRetProj := ExecBlock("F376PROJ", .F., .F.,{aRegs,aValImp})

			For nX := 1 To Len(aRetProj)

				If nX == 1 .And. ValType(aRetProj[1]) == "A"
					aRegs := AClone(aRetProj[1])
				Endif

				If nX == 2 .And. ValType(aRetProj[2]) == "A"
					aValImp := AClone(aRetProj[2])
				Endif
			Next nX
		Endif
	Endif

	If __oFina376 <> Nil
		__oFina376:Delete()
		__oFina376 := Nil
	EndIf

Return lRet

//-------------------------------------------------------------------
/*{Protheus.doc} Fa376Result

Simulacao para analise do dados obtidos

@author Mauricio Pequim Jr.
@version 12
@since   26/03/2004
*/
//-------------------------------------------------------------------
Function Fa376Result( aValImp, cForUniao, cLojUniao, cNomUniao, aRegs, lAutomato )
	Local nConta	:= Len(aValImp)
	Local oDlg
	Local nOpcao	:= 0
	Local oBmp
	Local nA			:= 0
	Local oGet
	Local nTotImp	:= 0
	Local cProcess	:= CriaVar("E5_AGLIMP")
	Local aRotOri  := Aclone(aRotina)
	Local aTits		:= {}
	Private aHeader	:= {}
	Private aCols	:= Array(nConta,4)
	Private aRotina :=	{	{ "aRotina Falso", "AxPesq",		0, 1 },;
									{ "aRotina Falso", "AxVisual",	0, 2 } }
	Default lAutomato	:= .F.

	// Montagem do vetor aHeader
	Aadd(aHeader,{STR0017,	"A2_NUMCON","@!"               ,	10, 00, " ", "    ", "C", ,"V"})//"Codigo Retencao"
	Aadd(aHeader,{STR0018,	"E2_VALOR" ,"@E 999,999,999.99",	15, 02, " ", "    ", "N", ,"V"})//"Imposto a Gerar"
	Aadd(aHeader,{"     ",	"E2_OK"    ,"!!"               ,	02, 00, " ", "    ", "C", ,"V"})

	// Montagem do aCols com os valores apurados
	For nA:=1 to Len(aValImp)
		aCols[nA,1] := aValImp[nA,1]// Imposto
		aCols[nA,2] := aValImp[nA,2]
		aCols[nA,3] := Space(2)

		aCols[nA,4] := .F.
		nTotImp += aValImp[nA,2]
	Next nA

	//Linha de total Geral
	aadd(aCols,{STR0030, nTotImp,	Space(02),.F.})//"Total Geral"

	If !lAutomato
		DEFINE MSDIALOG oDlg TITLE STR0001 FROM 100,001 To 400,540 Of oMainWnd Pixel //"Aglutinação de Impostos"
			@ 000, 000 BITMAP oBmp RESNAME "Login" oF oDlg SIZE 50, 200 NOBORDER WHEN .F. PIXEL
			oGet := MsGetDados():New(001,055,120,265,2,"Allways True","Allways True","",.F.,,,,200)
			oGet:oBrowse:lHscroll := .F.

			Define Sbutton From 130,180 Type 1 Action (nOpcao:=1,oDlg:End())		Enable Of oDlg
			Define Sbutton From 130,210 Type 2 Action (nOpcao:=0,oDlg:End())		Enable Of oDlg
			Define Sbutton From 130,240 Type 6 Action Fr376Rel(aRegs,aTits,cProcess,.T.,aCols)				Enable Of oDlg
		ACTIVATE MSDIALOG oDlg Centered
	Else
		nOpcao := 1
	EndIf

	If nOpcao == 1 //Gravacao dos dados
		cProcess	:= Fa381Seq() //Obtem o processo ID de processo de aglutinação
		Processa( { |lEnd| Fa376Grava( aValImp, cForUniao, cLojUniao, cNomUniao, cProcess, aRegs ) }, STR0001 )//"Aglutinação de Impostos"
	EndIf

	aRotina := Aclone(aRotOri)

Return(Nil)

//-------------------------------------------------------------------
/*{Protheus.doc} Fa376Grava

Gravacao dos dados nas tabelas envolvidas

@param aValImp, Array contendo os dados a serem gravados na criação dos titulos de IRRF

@author Mauricio Pequim Jr.
@version 12
@since   23/08/2001
*/
//-------------------------------------------------------------------
Function Fa376Grava(aValImp,cForUniao,cLojUniao,cNomUniao,cProcess,aRegs)
	Local nLaco		:= 0
	Local nTotal	:= 0
	Local nHdlPrv	:= 0
	Local lHdlPrv	:= .F.
	Local cArquivo	:= ""
	Local lDigita	:= IIF(mv_par01==1,.T.,.F.)
	Local lAglutina := IIF(mv_par02==1,.T.,.F.)
	Local aTits 	:= {}
	Local cCodAprov	:= ""
	Local lOk	    := .F.

	Private cLote		:= ""
	Private aFlagCTB	:= {}
	Private lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)

	LoteCont("FIN")

	If (SuperGetMV( "MV_FINCTAL", .T., "1" ) == "2")
		cCodAprov := FA050Aprov(1)
	Endif

	BEGIN TRANSACTION
		//Gera titulos aglutinadores
		ProcRegua(Len(aValImp))
		For nLaco:=1 To Len(aValImp)
			If aValImp[nLaco,2] <> 0
				IncProc(STR0031)//"Gerando títulos... "
				Fa376GrvE2(aValImp,nLaco,cForUniao,cLojUniao,cNomUniao,cProcess,aRegs,@nTotal,@nHdlPrv,@lHdlPrv,@cArquivo,aTits,cCodAprov)
			EndIf
		Next

		//Baixa titulos de impostos
		Fa376BxE2(aRegs,cForUniao,cLojUniao,cNomUniao,cProcess,@nTotal,@nHdlPrv,@lHdlPrv,@cArquivo)

		If nHdlPrv > 0 .and. nTotal > 0
			// Envia para Lan‡amento Contabil
			RodaProva( nHdlPrv,;
					nTotal )

			cA100Incl( cArquivo,;
					nHdlPrv,;
					3 /*nOpcx*/,;
					cLote,;
					lDigita,;
					lAglutina,;
					/*cOnLine*/,;
					/*dData*/,;
					/*dReproc*/,;
					@aFlagCTB,;
					/*aDadosProva*/,;
					/*aDiario*/ )

			aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
		Endif
		ConfirmSX8()
		lOk := .T.
	END TRANSACTION

	// Emite Relatorio
	If mv_par04 == 1 .And. lOk
		Fr376Rel(aRegs,aTits,cProcess,.F.)
	Endif

Return(Nil)


//-------------------------------------------------------------------
/*{Protheus.doc} Fa376GrvE2

Gravacao dos titulos no SE2

@param aValImp, Array contendo os dados a serem gravados na criação dos titulos de IRRF
@param nLaco, numero do registro no array

@author Mauricio Pequim Jr.
@version 12
@since   23/08/2001
*/
//-------------------------------------------------------------------
Function Fa376GrvE2(aValImp,nLaco,cForUniao,cLojUniao,cNomUniao,cProcess,aRegs,nTotal,nHdlPrv,lHdlPrv,cArquivo,aTits,cCodAprov)
	Local cTipoSE2		:= SubStr(aValImp[nLaco,1],1,3)
	Local cNatureza		:= &(GetMv("MV_IRF"))
	Local cPadrao		:= "510"
	Local lPadrao		:= .T.
	Local aTamParc		:= TamSx3("E2_PARCELA")
	Local cParcela		:= space(aTamParc[1])
	Local cPrefixo		:= "AGL"
	Local cFilAtu		:= cFilAnt
	Local dDataVenc		:= IIF(mv_par09 < dDataBase, dDataBase, mv_par09)
	Local dDtVcRea		:= DataValida(dDataVenc,.F.)
	Local aModAc 		:= {}
	Local aLayoutGC 	:= {} //leiaute do gestao corporativa
	Local cE2FilOrig    := If( Empty( mv_par10), cFilAnt, mv_par10 )
	Local nTamRet		:= TamSx3("E2_TIPO")[1] + TamSx3("E2_NATUREZ")[1] + 3
	Local nTamCodRet	:= TamSx3("E2_CODRET")[1]

	//--- Tratamento Gestao Corporativa
	Local lGestao   := Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa
	//
	Local cFilFwSE2 := IIF( lGestao, FwFilial("SE2") , xFilial("SE2") )

	Default cCodAprov	:= ""

	dDataVenc := If(dDataVenc > dDtVcRea, dDtVcrea, dDataVenc)

	// Gravacao do titulo de imposto apurado
	If !Empty(mv_par10)
		/*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄµA¿
		//³se o lay-out retornar "E"mpresa e/ou "U"nidade de Negócio   ³
		//³significa que usa Gestão Corporativa, caso contrário usa só ³
		//³filial (método padrão)                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄµ*/
		If lFWCodFil .and. ("E" $ FWSM0Layout() .or. "U" $ FWSM0Layout())
			aLayoutGC := FWLoadSM0()
					nPosGC := Ascan(aLayoutGC,{ |x| x[2] == Iif(Empty(cFilFwSE2), cE2FilOrig, mv_par10)} )
			If nPosGC > 0
				aadd(aModAc,FWModeAccess("SE2",1))
				aadd(aModAc,FWModeAccess("SE2",2))
				aadd(aModAc,FWModeAccess("SE2",3))
				cFilNewT := If(aModAc[1] = 'E', aLayoutGC[nPosGC][3],Space(Len(aLayoutGC[nPosGC][3]))) //empresa
				cFilNewT += If(aModAc[2] = 'E', aLayoutGC[nPosGC][4],Space(Len(aLayoutGC[nPosGC][4]))) //unidade de negócio
				cFilNewT += If(aModAc[3] = 'E', aLayoutGC[nPosGC][5],Space(Len(aLayoutGC[nPosGC][5]))) //filial
			Else
				cFilNewT := MV_PAR10
			EndIf
		EndIf
		cFilAnt := MV_PAR10
	Else
		mv_par10 := cFilAnt
	EndIf

	//Ponto de entrada para tratamento do prefixo
	If ExistBlock("F376PRF")
		cPrefixo := ExecBlock("F376PRF",.F.,.F.)
	Endif

	// Verifica se o numero do titulo ja existe
	DbSelectArea("SE2")
	DbSetOrder(1)
	cParcela := Soma1(cParcela,aTamParc[1])
	While .T.

		If SE2->( DbSeek( xFilial("SE2") + cPrefixo + Pad(cProcess,Len(E2_NUM)) + cParcela + cTipoSE2 + cForUniao + cLojUniao ) )
			cParcela := Soma1(cParcela,aTamParc[1])
		Else
			Exit
		Endif
	EndDo

	RecLock( "SE2", .T. )
		SE2->E2_FILIAL	:= xFilial("SE2")
		SE2->E2_PREFIXO	:= cPrefixo
		SE2->E2_NUM		:= cProcess
		SE2->E2_PARCELA	:= cParcela
		SE2->E2_TIPO	:= cTipoSE2
		SE2->E2_EMISSAO	:= dDataBase
		SE2->E2_VALOR	:= ABS(aValImp[nLaco,2])
		SE2->E2_VENCREA	:= dDtVcRea
		SE2->E2_SALDO	:= ABS(aValImp[nLaco,2])
		SE2->E2_VENCTO	:= dDataVenc
		SE2->E2_VENCORI	:= dDataVenc
		SE2->E2_MOEDA	:= 1
		SE2->E2_EMIS1	:= dDataBase
		SE2->E2_FORNECE	:= cForUniao
		SE2->E2_LOJA	:= cLojUniao
		SE2->E2_NOMFOR	:= cNomUniao
		SE2->E2_VLCRUZ	:= ABS(aValImp[nLaco,2])
		SE2->E2_ORIGEM	:= "FINA376"
		SE2->E2_NATUREZ	:= cNatureza
		SE2->E2_NUMTIT	:= "FINA376"
		SE2->E2_CODRET	:= Substr(aValImp[nLaco,1], nTamRet, nTamCodRet)
		SE2->E2_DIRF	:= "2" // O titulo gerado pela aglutinacao nao deve ir para DIRF, para nao ocorrer duplicidade
										// com o titulo de origem (na DIRF e na impressao da DARF).
		SE2->E2_MULTNAT	:= "2"
		SE2->E2_FILORIG	:= MV_PAR10
		SE2->E2_CODAPRO	:= cCodAprov
	SE2->( MsUnlock() )

	//Ponto de entrada para tratamento do prefixo
	If __F376GRV
		ExecBlock("F376GRV",.F.,.F.)
	Endif

	//Guardo os titulos gerados para o relatorio
	AADD(aTits,SE2->(RECNO()))

	// Contabilizacao do titulo de IR
	lPadrao		:= VerPadrao(cPadrao)

	If lPadrao .and. mv_par03 == 1   // Contabiliza On-Line
		If nHdlPrv <= 0
			nHdlPrv := HeadProva( cLote,;
								"FINA376",;
								substr( cUsuario, 7, 6 ),;
								@cArquivo )
		Endif

		If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
			aAdd( aFlagCTB, { "E2_LA", "S", "SE2", SE2->( RecNo() ), 0, 0, 0} )
		Endif

		If nHdlPrv > 0
			//Contabiliza pela variavel VALOR. Nao necessita de controle de flag.
			nTotal += DetProva( nHdlPrv,;
								cPadrao,;
								"FINA376" /*cPrograma*/,;
								cLote,;
								/*nLinha*/,;
								/*lExecuta*/,;
								/*cCriterio*/,;
								/*lRateio*/,;
								/*cChaveBusca*/,;
								/*aCT5*/,;
								/*lPosiciona*/,;
								@aFlagCTB,;
								/*aTabRecOri*/,;
								/*aDadosProva*/ )
		Endif

		If nTotal > 0 .AND. !lUsaFlag
			DbSelectArea("SE2")
			RecLock("SE2")
			SE2->E2_LA := "S "
			MsUnlock()
		EndIf
	EndIf

	cFilAnt := cFilAtu

Return

//-------------------------------------------------------------------
/*{Protheus.doc} Fa376BxE2

Baixa os titulos no SE2

@author Mauricio Pequim Jr.
@version 12
@since   23/08/2001
*/
//-------------------------------------------------------------------
Function Fa376BxE2(aRegs,cForUniao,cLojUniao,cNomUniao,cProcess,nTotal,nHdlPrv,lHdlPrv,cArquivo)
	Local cPadrao	:= "530"
	Local lPadrao	:= VerPadrao(cPadrao)
	Local nA		:= 0
	Local cSeqBx
	Local cFilAtu  	:= cFilAnt
	Local aRecSE5  	:= {}
	Local aAreaSE5 	:= {}
	Local cFilOrig	:= ""
	Local oBxImp    := Nil
	Local lBaixou   := .F.

	Local oModelBxP
	Local oSubFKA
	Local oSubFK2
	Local cLog 		:= ""
	Local cCamposE5 := ""

	ProcRegua(Len(aRegs))

	For nA := 1 to Len(aRegs)
		IncProc(STR0032)  // "Baixando títulos... "
		dbSelectArea("SE2")
		dbGoto(aRegs[nA,1])

		cFilOrig := F376FilOri()

		cSeqBx := FaNxtSeqBx("SE2")
		cFilAnt := If(!Empty(SE2->E2_FILORIG), SE2->E2_FILORIG, SE2->E2_FILIAL)

		If !Empty(cCamposE5)
			cCamposE5 += "|"
		EndIf

		cCamposE5 += "{"
		cCamposE5 +=  "{'E5_DTDIGIT',dDataBase}"
		cCamposE5 += ",{'E5_PREFIXO',SE2->E2_PREFIXO}"
		cCamposE5 += ",{'E5_NUMERO',SE2->E2_NUM}"
		cCamposE5 += ",{'E5_PARCELA',SE2->E2_PARCELA}"
		cCamposE5 += ",{'E5_CLIFOR',SE2->E2_FORNECE}"
		cCamposE5 += ",{'E5_FORNECE',SE2->E2_FORNECE}"
		cCamposE5 += ",{'E5_LOJA',SE2->E2_LOJA}"
		cCamposE5 += ",{'E5_BENEF',SE2->E2_NOMFOR}"
		cCamposE5 += ",{'E5_TIPO',SE2->E2_TIPO}"
		cCamposE5 += ",{'E5_DTDISPO',dDataBase}"
		cCamposE5 += ",{'E5_AGLIMP','"+cProcess+"'}"
		cCamposE5 += "}"

		oBxImp := BxImposto():new()
		oBxImp:ModelOper(3)
		oBxImp:SetHistorico(STR0019)
		oBxImp:SetFilorig(cFilOrig)
		oBxImp:SetSeqBx(cSeqBx)
		oBxImp:SetVlrBx(SE2->E2_SALDO)
		oBxImp:SetCamposE5(cCamposE5)
		oBxImp:Activate()
		lBaixou := oBxImp:Grava()
		If !lBaixou
			cLog := oBxImp:GetErrorGrava()
			Help( ,,"M020BXE201",,cLog, 1, 0 )
			Disarmtransaction()
			Break
		Endif
		oBxImp:Limpa()
		oBxImp := NIL

		aAdd(aRecSE5,SE5->(Recno()))

		If lPadrao .and. mv_par03 == 1 // Contabiliza On-Line
			If nHdlPrv <= 0
				nHdlPrv	:= HeadProva(cLote,"FINA376",Substr(cUsuario,7,6),@cArquivo)
			Endif
			If nHdlPrv > 0
				nTotal	+= DetProva(nHdlPrv,cPadrao,"FINA376",cLote)
			Endif
			If nTotal > 0
				DbSelectArea("SE5")

				cCamposE5 += "{"
				cCamposE5 +=  "{'E5_LA','S'}"
				cCamposE5 += "}"

				oModelBxP := FWLoadModel("FINM020")
				oModelBxP:SetOperation(MODEL_OPERATION_UPDATE) //Alteracao
				oModelBxP:Activate()
				oModelBxP:SetValue("MASTER","E5_GRV",.T.)
				oModelBxP:SetValue("MASTER","E5_CAMPOS",cCamposE5) //Informa os campos da SE5 que serão gravados
				//oModelBxP:SetValue("MASTER","E5_LA","S")

				oSubFKA := oModelBxP:GetModel("FKADETAIL")
				oSubFKA:SeekLine({{"FKA_IDORIG",SE5->E5_IDORIG}})
				oSubFKA:SetValue("FKA_TABORI","FK2")

				oSubFK2 := oModelBxP:GetModel("FK2DETAIL")
				oSubFK2:SetValue("FK2_LA",'S')

				If oModelBxP:VldData()
					oModelBxP:CommitData()
				Else
					cLog := cValToChar(oModelBxP:GetErrorMessage()[4]) + ' - '
					cLog += cValToChar(oModelBxP:GetErrorMessage()[5]) + ' - '
					cLog += cValToChar(oModelBxP:GetErrorMessage()[6])
					Help(,,"M020BXE202",,cLog,1,0)
				Endif

			oModelBxP:DeActivate()
			oModelBxP:Destroy()
			oModelBxP:= nil
			EndIf
		EndIf

		RecLock("SE2")
			SE2->E2_BAIXA	 := iif(SE2->E2_BAIXA <= dDataBase, dDataBase, SE2->E2_BAIXA)
			SE2->E2_MOVIMEN  := dDataBase
			SE2->E2_VALLIQ   := SE2->E2_SALDO

			IF MV_PAR12 == 1 .and. cPaisLoc $ "AUS|BRA"
				SE2->E2_AGLIMP		:= cProcess
			Endif
			SE2->E2_SALDO := 0
		MsUnlock()
	Next

	aAreaSE5 := SE5->(GetArea())
	If ExistBlock("F376BxTx")
		ExecBlock("F376BxTx",.F.,.F.,{aRecSE5})
	EndIf
	RestArea(aAreaSE5)

	cFilAnt := cFilAtu

Return


//-------------------------------------------------------------------
/*{Protheus.doc} F376NatNew

Criacao nas naturezas necessarias no IR OffLine

@author Mauricio Pequim Jr.
@version 12
@since   05/06/2001
*/
//-------------------------------------------------------------------
Function F376NatNew(cForUniao,cLojUniao,cNomUniao)
	Local cDescNat := ""
	Local cNatureza:= ""
	Local cNatIR   := Alltrim(&(GetMv("MV_IRF",.F.,'"IRF"')))
	Local cNatPIS  := GetMv("MV_PISNAT",.F.,"PIS")
	Local cNatCOF  := GetMv("MV_COFINS",.F.,"COF")
	Local cNatCSL  := GetMv("MV_CSLL"  ,.F.,"CSL")
	Local nA 	   := 0
	Local cFil376  := mv_par10
	Local cFilAtu  := cFilAnt

	Local cLojaImp	:= PadR( "00", TamSX3( "A2_LOJA" )[1], "0" )

	//--- Tratamento Gestao Corporativa
	Local lGestao   := Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa
	//
	Local cFilFwSED := IIF( lGestao, FwFilial("SED") , xFilial("SED") )
	Local cFilFwSA2 := IIF( lGestao, FwFilial("SA2") , xFilial("SA2") )

	// Cria a natureza de IRRF
	If !Empty(mv_par10)
		cFilAnt := mv_par10
	Endif

	For nA := 1 to 5
		DO CASE
			CASE nA == 1	//IRRF
				cNatureza	:= cNatIR
				cNatureza	:= If (Empty(cNatureza),"IRF",cNatureza)
				cDescNat		:= "IMPOSTO DE RENDA RETIDO NA FONTE"
			CASE nA == 3	//PIS
				cNatureza	:= cNatPIS
				cNatureza	:= If (Empty(cNatureza),"PIS",cNatureza)
				cDescNat		:= "PIS"
			CASE nA == 4	//Cofins
				cNatureza	:= cNatCOF
				cNatureza	:= If (Empty(cNatureza),"COF",cNatureza)
				cDescNat		:= "COFINS"
			CASE nA == 5	//CSLL
				cNatureza	:= cNatCSL
				cNatureza	:= If (Empty(cNatureza),"CSL",cNatureza)
				cDescNat    := "CSLL"
		ENDCASE

		DbSelectArea("SED")
		cNatureza := AllTrim(cNatureza)
		cNatureza := cNatureza+(Space(10-Len(cNatureza)))
		cFil376	 := If( Empty( cFilFwSED ), xFilial("SED"), mv_par10 )

		If ( ! DbSeek( cFil376 + cNatureza ) )
			RecLock("SED",.T.)
			SED->ED_FILIAL  := cFil376
			SED->ED_CODIGO  := cNatureza
			SED->ED_CALCIRF := "N"
			SED->ED_CALCISS := "N"
			SED->ED_CALCINS := "N"
			SED->ED_CALCCOF := "N"
			SED->ED_CALCPIS := "N"
			SED->ED_CALCCSL := "N"
			SED->ED_DESCRIC := cDescNat
			SED->ED_TIPO	:= "2"
			MsUnlock()
			FKCOMMIT()
		EndIf
	Next

	// Criacao do Fornecedor Uniao
	DbSelectArea("SA2")
	DbSetOrder(1)
	cFil376	 := If( Empty( cFilFwSA2 ), xFilial("SA2"), mv_par10 )
	If !DbSeek(cFil376+GetMv("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMv("MV_UNIAO")))+cLojaImp)
		Reclock("SA2",.T.)
			SA2->A2_FILIAL	:= cFil376
			SA2->A2_COD		:= GetMv("MV_UNIAO")
			SA2->A2_LOJA	:= cLojaImp
			SA2->A2_NOME	:= "UNIAO"
			SA2->A2_NREDUZ	:= "UNIAO"
			SA2->A2_BAIRRO	:= "."
			SA2->A2_MUN		:= "."
			SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
			SA2->A2_END		:= "."
			SA2->A2_TIPO	:= "."
		MsUnlock()
		FKCOMMIT()
	EndIf

	cForUniao	:= SA2->A2_COD
	cLojUniao	:= SA2->A2_LOJA
	cNomUniao	:= SA2->A2_NREDUZ
	cFilAnt := cFilAtu

Return(Nil)

//-------------------------------------------------------------------
/*{Protheus.doc} Fr376Rel

Impressao do relatorio analitico para conferencia

@param aRegs, Array contendo os dados dos titulos baixados
@param aTits, Array contendo os dados dos titulos gerados
@param cProcess, codigo do processo de aglutinação de impostos

@author Mauricio Pequim Jr.
@version 12
@since   23/08/2001
*/
//-------------------------------------------------------------------
Function Fr376Rel(aRegs,aTits,cProcess,lPreAglu,aCols)
	Local cDesc1	:= STR0020 //"Este relatorio irá  demonstrar os titulos que foram utilizados para "
	Local cDesc2	:= STR0021 //"para a aglutinação de impostos bem como os titulos gerados"
	Local cDesc3	:= ""
	Local wNrel
	Local Tamanho	:= "G"
	Local nA		:= 0
	Local CbCont	:= 0
	Local CbTxt		:= Space(10)
	Local cString	:= "SE2"
	Local nColPrefixo
	Local nColNumero
	Local nColParcela
	Local nColTipo
	Local nColEmissao
	Local nColVencto
	Local nColVencRea
	Local nColValor
	Local nColNaturez
	Local nSubTot	:= 0
	Local nTamFil 	:= FinTamSXG("033",TAMSX3("E2_FILIAL")[1])[1]

	Private Li			:= 80
	Private M_pag		:= 1
	Private Titulo		:= STR0022+ cProcess //"Relatorio de Aglutinacao de Impostos - Processo Nr. "
	Private cabec1		:= ""
	Private cabec2		:= ""
	Private aReturn		:= {STR0023, 1, STR0024, 2, 2, 1, "",1 } //"Zebrado"###"Administracao"
	Private nomeprog	:= IIF(IsInCallStack("FINA378"), "FINA378" , "FINA376")
	Private nLastKey	:= 0

	//Mudo titulo do relatorio quando for anterior ao encerramento do processo
	If lPreAglu
		Titulo := STR0040		//"Relatorio de Previsao de Aglutinação de Impostos"
	Endif

	// Envia controle para a funcao SETPRINT
	wnrel := IIF(IsInCallStack("FINA378"), "FR378Rel" , "FR376Rel")
	wnrel := SetPrint(cString,wNrel,,titulo,cDesc1,cDesc2,cDesc3,.F.,"",.T.,Tamanho,"",.F.)
	If nLastKey == 27
		Return(Nil)
	EndIf

	SetDefault(aReturn,cString)
	If nLastKey == 27
		Return(Nil)
	EndIf

	// Considerar filiais
	nColPrefixo	:= 9
	nColNumero	:= 18
	nColParcela	:= 32
	nColTipo	:= 38
	nColEmissao	:= 44
	nColVencto	:= 56
	nColVencRea	:= 68
	nColNaturez := 80
	nColValor	:= 91
	//Tratamento de filial variável
	If nTamFil > 6
		nColPrefixo		:= nColPrefixo   + (nTamFil - 5)
		nColNumero		:= nColNumero   + (nTamFil - 5)
		nColParcela		:= nColParcela   + (nTamFil - 5)
		nColTipo			:= nColTipo   + (nTamFil - 5)
		nColEmissao	:= nColEmissao   + (nTamFil - 5)
		nColVencto		:= nColVencto   + (nTamFil - 5)
		nColVencRea	:= nColVencRea   + (nTamFil - 5)
		nColNaturez 	:= nColNaturez   + (nTamFil - 5)
		nColValor			:= nColValor   + (nTamFil - 5)

		Cabec1 := SubStr(STR0025,1,9)  + Space(2) + Space(nTamFil - 6) + SubStr(STR0025,10,108) //" Filial  Prefixo  Numero        Parc  Tipo  Emissao     Vencimento  Venc Real   Natureza           Valor"
	Else
		Cabec1 :=  STR0025  //" Filial  Prefixo  Numero        Parc  Tipo  Emissao     Vencimento  Venc Real   Natureza           Valor"
	EndIf
		//"     Filial  Prefixo  Numero        Parc  Tipo  Emissao     Vencimento  Venc Real   Natureza           Valor"
		//      12      123      9999999999999 1     123   99/99/9999  99/99/9999  99/99/9999  xxxxxxxxxx 99,999,999.99
		//      1       9        32            38    38    44          56          68          80         91

	Cabec2 := ""
	If Len(aRegs) > 0
		aSort( aRegs,,, {|a,b| a[2] < b[2] })
		nSubTot := 0
		//Imprime titulos baixados
		For nA:=1 To Len(aRegs)
			If Li >= 58
				Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho,Iif(aReturn[4]==1,15,18))
				Li := Prow()+1
			EndIf
			DbSelectArea("SE2")
			DbSetOrder(1)
			DbGoTo(aRegs[nA,1])
			@Li,001 PSAY SE2->E2_FILIAL
			@Li,nColPrefixo	PSAY SE2->E2_PREFIXO
			@Li,nColNumero		PSAY SE2->E2_NUM
			@Li,nColParcela	PSAY SE2->E2_PARCELA
			@Li,nColTipo		PSAY SE2->E2_TIPO
			@Li,nColEmissao	PSAY SE2->E2_EMISSAO
			@Li,nColVencto		PSAY SE2->E2_VENCTO
			@Li,nColVencRea	PSAY SE2->E2_VENCREA
			@Li,nColNaturez	PSAY SE2->E2_NATUREZ

			If lPreAglu
				@Li,nColValor		PSAY SE2->E2_SALDO Picture "@e 99,999,999.99"
				nSubTot += SE2->E2_SALDO
			Else
				@Li,nColValor		PSAY SE2->E2_VALLIQ Picture "@e 99,999,999.99"
				nSubTot += SE2->E2_VALLIQ
			Endif
			Li++
	Next
	If Li >= 55
			Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho,Iif(aReturn[4]==1,15,18))
			Li := Prow()+1
		EndIf
		@Li,001					PSAY If(lPreAglu,STR0041,STR0026) +" -->> " //"Total de Titulos a Baixar  "###"Total de Titulos Baixados"
		@Li,nColValor			PSAY nSubTot		Picture "@e 99,999,999.99"

		Li +=2
		@ Li,000 PSAY __PrtThinLine()
		Li += 2

		nSubTot := 0
		//Imprime os titulos gerados (apenas se nao for relatorio de previsao)
		If !lPreAglu
			For nA := 1 to Len(aTits)
				If Li >= 58
					Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho,Iif(aReturn[4]==1,15,18))
					Li := Prow()+1
				EndIf
				DbSelectArea("SE2")
				DbSetOrder(1)
				DbGoTo(aTits[nA])
				@Li,001 PSAY SE2->E2_FILIAL
				@Li,nColPrefixo	PSAY SE2->E2_PREFIXO
				@Li,nColNumero		PSAY SE2->E2_NUM
				@Li,nColParcela	PSAY SE2->E2_PARCELA
				@Li,nColTipo		PSAY SE2->E2_TIPO
				@Li,nColEmissao	PSAY SE2->E2_EMISSAO
				@Li,nColVencto		PSAY SE2->E2_VENCTO
				@Li,nColVencRea	PSAY SE2->E2_VENCREA
				@Li,nColNaturez	PSAY SE2->E2_NATUREZ
				@Li,nColValor		PSAY SE2->E2_SALDO Picture "@e 99,999,999.99"
				nSubTot += SE2->E2_SALDO

				Li++
			Next
		Else
			For nA := 1 to Len(aCols)-1
				If Li >= 58
					Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho,Iif(aReturn[4]==1,15,18))
					Li := Prow()+1
				EndIf
				@Li,001 				PSAY aCols[nA,1]  //Imposto
				@Li,nColValor		PSAY aCols[nA,2] Picture "@e 99,999,999.99"

				nSubTot += aCols[nA,2]
				Li++
			Next

		Endif
	If Li >= 55
			Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho,Iif(aReturn[4]==1,15,18))
			Li := Prow()+1
		EndIf
		@Li,001					PSAY If(lPreAglu,STR0042,STR0027) +" -->> " //"Total de Titulos a Gerar  "###"Total de Titulos Gerados"
		@Li,nColValor			PSAY nSubTot		Picture "@e 99,999,999.99"

		Roda(CbCont,CbTxt,Tamanho)

	Endif

	If aReturn[5] = 1
		Set Printer To
		DbCommitAll()
		OurSpool(wnrel)
	EndIf

	MS_FLUSH()

Return(Nil)

//------------------------------
/*/{Protheus.doc}FA376Fil
Validacao da filial para qual serao gerados os novos titulos

@author Mauricio Pequim
@since  16.03.04
@version 12
/*/
//------------------------------
Function Fa376Fil(nPosic)
	Local nTamEmp	:= Len(FWSM0LayOut(,1))
	Local lRet		:= .T.
	Local aSM0      := FWLoadSM0()
	Local cGrpEmp   := AllTrim(FWGrpCompany())
	Local lGestao   := Iif( lFWCodFil, FWSizeFilial() > 2, .F. )
	Local cFilFwSE2 := IIF( lGestao , FwFilial("SE2") , xFilial("SE2") )

	Default nPosic := 0
	cCgc := ""

	If !Empty( cFilFwSE2 ) .and. Empty(mv_par10)
		lRet := .F.
	Endif

	If Empty( cFilFwSE2 ) .and. !Empty(mv_par10)
		lRet := .F.
	Endif

	If lRet .and. !Empty(mv_par10) .and. !(ExistCpo("SM0",cEmpAnt+mv_par10))
		lRet := .F.
	Endif

	If nPosic := Ascan(aSM0,{|x| (AllTrim(x[2])) == AllTrim(MV_PAR10)})
		//Caso há mais de uma filial com o mesmo código em grupos de empresas diferentes
		While AllTrim(aSM0[nPosic, 1]) != cGrpEmp
			aSM0[nPosic,2] := ""
			nPosic := Ascan(aSM0,{|x| (AllTrim(x[2])) == AllTrim(MV_PAR10)})

			If nPosic = 0 .Or. nPosic >= Len(aSM0)
				If nPosic > 0 .And. AllTrim(aSM0[nPosic, 1]) != cGrpEmp
					nPosic := 0
				EndIf
				exit
			EndIf
		EndDo

		If lRet := nPosic > 0
			If Substr(MV_PAR10,1,nTamEmp) == FwCompany()
				cCgc := Substr(AllTrim(aSM0[nPosic, 18]), 1, 8)
				lRet := .T.
			Else
				lRet := AllTrim(aSM0[nPosic, 1]) == cGrpEmp
				cCgc := Substr(AllTrim(aSM0[nPosic, 18]), 1, 8)
			EndIf
		EndIf
	EndIf

	If !lRet
		Help(" ",1,"FILCENTRAL",,STR0050 + ": " + cGrpEmp, 1, 0)
		cCgc := ""
	EndIf
Return lRet

//-------------------------------------------------------------------
/*{Protheus.doc} fa376Can

Cancelamento do processo de Aglutinacao de impostos

@author Mauricio Pequim Jr.
@version 12
@since   16/03/2004
*/
//-------------------------------------------------------------------
Function fa376Can(cAlias,nReg,nOpcx,lAutomato,cProc)
	Local lPanelFin		:= IsPanelFin()
	Local cProcCan		:= CriaVar("E5_AGLIMP")
	Local nOpct	 		:= 0
	Local nA				:= 0
	Local aRegsGer		:= {}
	Local aRegsBxd		:= {}
	Local aArea			:= GetArea()
	Local lContinua		:= .T.
	Local lPadrao515	:= Verpadrao("515")
	Local lPadrao531	:= Verpadrao("531")
	Local oDlg
	Local cAliasSE5		:= "SE5"
	Local nTotal		:= 0
	Local nHdlPrv		:= 0
	Local cArquivo
	Local lDigita		:=IIF(mv_par01==1,.T.,.F.)
	Local lAglutina 	:=IIF(mv_par02==1,.T.,.F.)
	Local cUniao 		:= PADR(GetMV("MV_UNIAO"),Len(SA2->A2_COD))
	Local lFa378POS 	:= ExistBlock("FA378POS")
	Local lRet			:= .T.
	Local aRecCan 		:= {} //Array que armazena os RECNOS do SE5 cancelados
	Local aAreaSE5 		:= {}
	Local aRegsSE2		:= {}
	Local cFilAtu 		:= cFilAnt
	Local lExistFJU 	:= FJU->(ColumnPos("FJU_RECPAI")) >0 .and. FindFunction("FinGrvEx")
	Local cFilBkp 		:= cFilAnt

	//Reestruturação SE5 - Início
	Local oModelBxP 	:= FWLoadModel("FINM020")
	Local oSubFKA
	Local cLog 			:= ""
	Local cCamposE5 	:= ""
	//Reestruturação SE5 - Fim

	PRIVATE cLote 		:= ""
	LoteCont("FIN")

	Default lAutomato	:= .F.
	Default cProc		:= ""

	// Sem foro para utiliza‡„o da Aglutinacao de Impostos
	// N„o permite o acesso simultƒneo … rotina por mais de 1 usuario.
	IF ( nHdlLock := MSFCREATE("FINA376.L"+cEmpAnt+FWCodEmp())) < 0
		MsgAlert(STR0005+chr(13)+chr(10)+; //"A Funcao de Aglutinação de Impostos esta sendo utilizada por"
					STR0006+chr(13)+chr(10)+;	 //"outro usuario. Por questoes de integridade de dados, nao"
					STR0007+chr(13)+chr(10)+; //"‚ permitida a utiliza‡„o desta rotina por mais de um usu rio"
					STR0008,cCadastro) //"simultaneamente. Tente novamente mais tarde."
		Return
	Endif

	// Grava no sem foro informações sobre quem est  utilizando o Bordero
	FWrite(nHdlLock,"Operador: "+cUserName+chr(13)+chr(10)+;
							"Empresa.: "+cEmpAnt+FWCodEmp()+chr(13)+chr(10)+;
							"Filial..: "+cFilAnt+chr(13)+chr(10))

	//Caso o titulo aglutinador estiver posicionado, ja traz o o processo preenchido na tela
	If "FINA376" $ ALLTRIM(SE2->E2_NUMTIT)
		cProcCan := SE2->E2_NUM
	Endif

	aSize := MSADVSIZE()
	If !lAutomato
		While .T.
			If lPanelFin  //Chamado pelo Painel Financeiro
				dbSelectArea(cAlias)
				oPanelDados := FinWindow:GetVisPanel()
				oPanelDados:FreeChildren()
				aDim := DLGinPANEL(oPanelDados)
				DEFINE MSDIALOG oDlg OF oPanelDados:oWnd FROM 0,0 To 0,0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )
				oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1])

				// Observacao Importante quanto as coordenadas calculadas abaixo:
				// --------------------------------------------------------------
				// a funcao DlgWidthPanel() retorna o dobro do valor da area do
				// painel, sendo assim este deve ser dividido por 2 antes da sub-
				// tracao e redivisao por 2 para a centralizacao.
				nEspLarg := ((DlgWidthPanel(oPanelDados)/2) - 114) /2
				nEspLin  := 0

			Else
				nEspLarg := 0
				nEspLin  := 0
				DEFINE MSDIALOG oDlg FROM	20,1 TO 120,340 TITLE STR0033 PIXEL//"Cancelamento de Aglutinacao de Impostos"
			Endif

			oDlg:lMaximized := .F.
			oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,20,20)
			oPanel:Align := CONTROL_ALIGN_ALLCLIENT

			@ 006+nEspLin, 011+nEspLarg TO 036+nEspLin, 125+nEspLarg OF oPanel PIXEL
			@ 021+nEspLin, 014+nEspLarg MSGET cProcCan SIZE 49, 11 OF oPanel PIXEL
			@ 011+nEspLin, 014+nEspLarg SAY STR0034 SIZE 70, 07 OF oPanel PIXEL		//"Processo a Cancelar"

			If lPanelFin  //Chamado pelo Painel Financeiro
				ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,{|| nOpct:=1, oDlg:End()},{||nOpct:=0, oDlg:End()})

			Else
				DEFINE SBUTTON FROM 010, 133 TYPE 1 ACTION (nOpct:=1, oDlg:End()) ENABLE OF oPanel
				DEFINE SBUTTON FROM 023, 133 TYPE 2 ACTION (nOpct:=0, oDlg:End()) ENABLE OF oPanel
				ACTIVATE MSDIALOG oDlg CENTERED
			Endif

			// Ponto de entrada APÓS confirmação do Cancelamento
			If lFa378Pos
			lRet:= ExecBlock('FA378POS',.F.,.F.,{lRet})
			Endif

			If !lRet
				Return
			Endif

			If nOpct == 1 .And. Empty(cProcCan)
			Loop
			Endif
			Exit

		Enddo
	Else
		cProcCan	:= cProc
		nOpct		:= 1
	EndIf

	If nOpct == 1

		lContinua := .T.
		DbSelectArea("SE2")
		dbSetOrder(1)

		// Verifica se deverar ser considerada filial de/ate
		cQuery := "SELECT R_E_C_N_O_ RECNO FROM " + RetSQLname("SE2")
		cQuery += " WHERE "
		cQuery += "E2_FORNECE LIKE '"+cUniao+"%' AND "
		If MV_PAR12 == 1
			cQuery += "E2_TIPO IN ('"+MVTAXA+"','"+MVTXA+"') AND "
		Else
			cQuery += "E2_TIPO IN ('"+MVTAXA+"') AND "
		Endif
		cQuery += "E2_NUMTIT IN ('FINA376') AND "
		cQuery += "E2_NUM = '"+ cProcCan + "' AND "
		cQuery += "D_E_L_E_T_ = ' ' "
		cQuery := ChangeQuery(cQuery)

		dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), "SE2TRB", .F., .T.)
		cAlias:="SE2TRB"

		dbSelectArea(cAlias)
		DbGoTop()

		ProcRegua((cAlias)->(RecCount()))
		If Bof() .And. Eof()
			Help(" ",1,"FA376CANCSE2",,STR0055, 1, 0,,,,,, {STR0056} )
			lContinua := .F.
		EndIf

		While !Eof() .and. lContinua
			IncProc(STR0016) //"Selecionado titulos de impostos"

			dbSelectArea("SE2")
			dbGoto(SE2TRB->RECNO)

			If SE2->E2_SALDO > 0	.and. STR(SE2->E2_SALDO,17,3) == STR(SE2->E2_VALOR,17,3) .and. ;
				Empty(SE2->E2_PORTADO) .and. SE2->E2_IMPCHEQ != "S" .and. ;
				AllTrim(SE2->E2_IDDARF) == ""
				AADD(aRegsGer,SE2->(Recno()))
			Else
				lContinua := .F.
			Endif
			dbSelectArea(cAlias)
			dbSkip()
		Enddo

		If lContinua
			DbSelectArea("SE5")
			dbSetOrder(7)

			// Verifica se deverar ser considerada filial de/ate
			cQuery := "SELECT R_E_C_N_O_ RECNO FROM " + RetSQLname("SE5")
			cQuery += " WHERE "
			cQuery += "E5_CLIFOR LIKE '"+cUniao+"%' AND "
			If MV_PAR12 == 1
				cQuery += "E5_TIPO IN "+ FORMATIN(MVTAXA+MVTXA,,3)+" AND "
			Else
				cQuery += "E5_TIPO IN "+ FORMATIN(MVTAXA,,3)+" AND "
			Endif

			cQuery += "E5_AGLIMP = '"+ cProcCan + "' AND "
			cQuery += "E5_ORIGEM = 'FINA376' AND " 
			cQuery += "D_E_L_E_T_ = ' ' "
			cQuery += "ORDER BY E5_FILORIG "
			cQuery := ChangeQuery(cQuery)

			dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), "SE5TRB", .F., .T.)
			cAliasSE5:="SE5TRB"

			dbSelectArea(cAliasSE5)
			DbGoTop()
			ProcRegua(RecCount())
			If Bof() .And. Eof()
				Help(" ",1,"FA376CANCSE5",,STR0055, 1, 0,,,,,, {STR0056} )
				lContinua := .F.
			EndIf
			While !Eof() .and. lContinua
				IncProc(STR0016) //"Selecionado titulos de impostos"

				dbSelectArea("SE5")
				dbGoto(SE5TRB->RECNO)

				AADD(aRegsBxd,SE5->(Recno()))
				dbSelectArea(cAliasSE5)
				dbSkip()
			Enddo

			If Len(aRegsBxd) > 0
				aRecCan := AClone(aRegsBxd)
			EndIf

			// Restaura a integridade da tabela de titulos a pagar
			If Select("SE2TRB") > 0
				dbSelectArea("SE2TRB")
				dbCloseArea()
				dbSelectArea("SE2")
				dbSetOrder(1)
			Endif
			If Select("SE2CAN") > 0
				dbSelectArea("SE2CAN")
				dbCloseArea()
				dbSelectArea("SE2")
				dbSetOrder(1)
			Endif
			If Select("SE5TRB") > 0
				dbSelectArea("SE5TRB")
				dbCloseArea()
				dbSelectArea("SE5")
				dbSetOrder(1)
			Endif

			If lContinua

				//Cancela Baixas
				For nA := 1 to Len(aRegsBxd)
					dbSelectArea("SE5")
					dbGoto(aRegsBxd[nA])
					If SE5->E5_FILORIG <> cFilAnt .And. nHdlPrv > 0 .and. nTotal > 0
						SE5->(dbGoto(aRegsBxd[--nA]))
						RodaProva(nHdlPrv,nTotal)
						cA100Incl(cArquivo,nHdlPrv,3,cLote,lDigita,lAglutina)
						nHdlPrv := 0
						nTotal  := 0
						SE5->(dbGoto(aRegsBxd[++nA]))
					EndIf

					If SE5->E5_SITUACA != "C"

						dbSelectArea("SE2")
						dbSetOrder(1)

						If SE5->E5_FILORIG <> cFilAnt
							cFilAnt := SE5->E5_FILORIG
						EndIf
						If SE2->(MsSeek(Iif(lSE2xSE5,xFilial("SE2"),SE5->E5_FILORIG)+SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)))
							RecLock("SE2")
							SE2->E2_SALDO += SE5->E5_VALOR
							SE2->E2_BAIXA :=	IIF( Str(E2_SALDO,17,2) == Str(E2_VALOR,17,2),CtoD(""), E2_BAIXA )
							MSUnlock()
							//Reestruturação SE5 - Início

							If !Empty(cCamposE5)
								cCamposE5 += "|"
							EndIf

							cCamposE5 += "{"
							cCamposE5 +=  "{'E5_SITUACA','C'}"
							cCamposE5 += "}"

							oModelBxP := FWLoadModel("FINM020")
							oModelBxP:SetOperation(MODEL_OPERATION_UPDATE) //Alteracao
							oModelBxP:Activate()
							oModelBxP:SetValue("MASTER","E5_GRV",.T.)
							oModelBxP:SetValue("MASTER","E5_CAMPOS",cCamposE5) //Informa os campos da SE5 que serão gravados
							//E5_OPERACAO 1 = Altera E5_SITUACA da SE5 para 'C' e gera estorno na FK5
							//E5_OPERACAO 2 = Grava E5 com E5_TIPODOC = 'ES' e gera estorno na FK5
							//E5_OPERACAO 3 = Deleta da SE5 e gera estorno na FK5
							oModelBxP:SetValue("MASTER","E5_OPERACAO",1)

							oSubFKA := oModelBxP:GetModel("FKADETAIL")
							oSubFKA:SeekLine({{"FKA_IDORIG",SE5->E5_IDORIG}})
							oSubFKA:SetValue("FKA_TABORI","FK2")

							If oModelBxP:VldData()
								oModelBxP:CommitData()
								oModelBxP:DeActivate()
							Else
								cLog := cValToChar(oModelBxP:GetErrorMessage()[4]) + ' - '
								cLog += cValToChar(oModelBxP:GetErrorMessage()[5]) + ' - '
								cLog += cValToChar(oModelBxP:GetErrorMessage()[6])
								Help(,,"M020CAN01",,cLog,1,0)
							Endif

							//Reestruturação SE5 - Fim

							If MV_PAR12 == 1 .and. cPaisLoc $ "AUS|BRA"
								RecLock("SE2",.F.)
								SE2->E2_AGLIMP := ""
								MsUnlock()
							Else
								//Reestruturação SE5 - Início

								If !Empty(cCamposE5)
									cCamposE5 += "|"
								EndIf

								cCamposE5 += "{"
								cCamposE5 +=  "{'E5_AGLIMP',''}"
								cCamposE5 += "}"

								oModelBxP := FWLoadModel("FINM020")
								oModelBxP:SetOperation(MODEL_OPERATION_UPDATE) //Alteracao
								oModelBxP:Activate()
								oModelBxP:SetValue("MASTER","E5_GRV",.T.)
								oModelBxP:SetValue("MASTER","E5_CAMPOS",cCamposE5) //Informa os campos da SE5 que serão gravados

								oSubFKA := oModelBxP:GetModel("FKADETAIL")
								oSubFKA:SeekLine({{"FKA_IDORIG",SE5->E5_IDORIG}})
								oSubFKA:SetValue("FKA_TABORI","FK2")

								If oModelBxP:VldData()
									oModelBxP:CommitData()
									oModelBxP:DeActivate()
								Else
									cLog := cValToChar(oModelBxP:GetErrorMessage()[4]) + ' - '
									cLog += cValToChar(oModelBxP:GetErrorMessage()[5]) + ' - '
									cLog += cValToChar(oModelBxP:GetErrorMessage()[6])
									Help(,,"M020CAN02",,cLog,1,0)
								Endif

								//Reestruturação SE5 - Fim
							Endif
						Endif

						If AllTrim(SE5->E5_LA) == "S" .and. lPadrao531
							If nHdlPrv <= 0
								nHdlPrv:=HeadProva(cLote,"FINA376",Substr(cUsuario,7,6),@cArquivo)
							Endif
							If nHdlPrv > 0
								nTotal+=DetProva(nHdlPrv,"531","FINA376",cLote)
							Endif
						Endif
						If nA == Len(aRegsBxd)
							If nHdlPrv > 0 .and. nTotal > 0
								RodaProva(nHdlPrv,nTotal)
								cA100Incl(cArquivo,nHdlPrv,3,cLote,lDigita,lAglutina)
								nHdlPrv := 0
								nTotal  := 0
							Endif
						EndIf
					EndIf
				Next
				//Restaura cFilAnt
				cFilAnt := cFilBkp

				IF cPaisLoc $ "AUS|BRA"
					For nA := 1 to Len(aRegsSE2)
						dbSelectArea("SE2")
						dbGoto(aRegsSE2[nA])
						RecLock("SE2",.F.)
							SE2->E2_AGLIMP := ""
						MsUnlock()
					Next nA
				EndIf

				//Exclui titulos gerados
				For nA := 1 to Len(aRegsGer)
					dbSelectArea("SE2")
					dbGoto(aRegsGer[nA])
					If SE2->E2_LA == "S" .and. lPadrao515
						If nHdlPrv <= 0
							nHdlPrv:=HeadProva(cLote,"FINA376",Substr(cUsuario,7,6),@cArquivo)
						Endif
						If nHdlPrv > 0
							nTotal+=DetProva(nHdlPrv,"515","FINA376",cLote)
						Endif
					Endif

					If lExistFJU
						FinGrvEx("P")
					Endif

					RecLock("SE2")
					dbDelete()
					MsUnlock()
				Next
				If nHdlPrv > 0 .and. nTotal > 0
					RodaProva(nHdlPrv,nTotal)
					cA100Incl(cArquivo,nHdlPrv,3,cLote,lDigita,lAglutina)
				Endif
				aAreaSE5 := SE5->(GetArea())
				If Existblock("F376CanBx")
					ExecBlock("F376CanBx",.F.,.F.,{aRecCan})
				Endif
				RestArea(aAreaSE5)
			Endif
		Else
			If AllTrim(SE2->E2_IDDARF) <> ""
				Help(" ",1,"NOCANAGL",,STR0035 +CHR(10)+;		//"Processo de Aglutinação de Impostos não "
									STR0036 +CHR(10)+;		//"pode ser cancelado pois algum dos títulos"
									STR0046,1,0)          //"gerados encontra-se em DARF          "
			Else
				Help(" ",1,"NOCANAGL",,STR0035 +CHR(10)+;		//"Processo de Aglutinação de Impostos não "
												STR0036 +CHR(10)+;		//"pode ser cancelado pois algum dos títulos"
												STR0037 +CHR(10)+;		//"gerados encontra-se baixado total ou "
												STR0038 +CHR(10)+;		//"parcialmente ou registros não foram "
												STR0039 ,1,0)				//"encontrados para esse processo"
			EndIf
			// Atualiza o log de processamento com o erro
			ProcLogAtu("ERRO","NOCANAGL",STR0035 +CHR(10)+;		//"Processo de Aglutinação de Impostos não "
											STR0036 +CHR(10)+;		//"pode ser cancelado pois algum dos títulos"
											STR0037 +CHR(10)+;		//"gerados encontra-se baixado total ou "
											STR0038 +CHR(10)+;		//"parcialmente ou registros não foram "
											STR0039 )

			// Restaura a integridade da tabela de titulos a pagar
			If Select("SE2TRB") > 0
				dbSelectArea("SE2TRB")
				dbCloseArea()
				dbSelectArea("SE2")
				dbSetOrder(1)
			Endif
			If Select("SE2CAN") > 0
				dbSelectArea("SE2CAN")
				dbCloseArea()
				dbSelectArea("SE2")
				dbSetOrder(1)
			Endif
			If Select("SE5TRB") > 0
				dbSelectArea("SE5TRB")
				dbCloseArea()
				dbSelectArea("SE5")
				dbSetOrder(1)
			Endif

		Endif
	Endif
	Set Key VK_F12 To
	fclose(nHdlLock)
	Ferase("FINA376.L"+cEmpAnt+FWCodEmp())

	RestArea(aArea)

	If lPanelFin  //Chamado pelo Painel Financeiro
		dbSelectArea(FinWindow:cAliasFile)
		FinVisual(FinWindow:cAliasFile,FinWindow,(FinWindow:cAliasFile)->(Recno()),.T.)
	Endif

	cFilAnt := cFilAtu

Return(Nil)

//-------------------------------------------------------------------
/*{Protheus.doc} Fa376Pai

Verifica se o titulo pai do TX sofreu baixa

@author Mauricio Pequim Jr.
@version 12
@since   24/03/2004
*/
//-------------------------------------------------------------------
FuncTion Fa376Pai()
	Local aArea    := SE2->(GetArea())
	LOCAL lAchou   := .F.
	LOCAL cPrefixo := SE2->E2_PREFIXO
	LOCAL cNum	   := SE2->E2_NUM
	LOCAL cParcela := SE2->E2_PARCELA
	Local cFilAtu  := cFilAnt

	//Verifico o titulo pai para o IR somente se o calculo do vencimento do imposto
	//nao for feito com base no vencimento do titulo. Neste caso ele ja eh efetivamente devido
	If GETMV("MV_VENCIRF") != "V" .Or. GetMv("MV_VCTIRPF",,"") != "V"
		lAchou := .T.
	Else
		//Mudo a filial corrente para a filial do titulo de imposto
		cFilAnt := FXRetFil( "SE2", SE2->E2_FILIAL )
		SE2->(dbSetOrder(1))

		If SE2->(DbSeek(xFilial("SE2") + cPrefixo + cNum))
			While SE2->(!Eof()) .and. SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM) == xFilial("SE2")+cPrefixo+cNum
				If SE2->E2_PARCIR == cParcela
					//Verifico se o titulo pai sofreu baixa
					If STR(SE2->E2_SALDO,17,2) != STR(SE2->E2_VALOR,17,2)
						lAchou := .T.
						Exit
					EndIf
				EndIf

				SE2->(DbSkip())
			Enddo
		EndIf
	Endif

	cFilAnt := cFilAtu
	RestArea(aArea)
Return lAchou

//-------------------------------------------------------------------
/*{Protheus.doc} MenuDef

Utilizacao de menu Funcional

@sample
1. Nome a aparecer no cabecalho
2. Nome da Rotina associada
3. Reservado
4. Tipo de Transa‡„o a ser efetuada:
	1 - Pesquisa e Posiciona em um Banco de Dados
	2 - Simplesmente Mostra os Campos
	3 - Inclui registros no Bancos de Dados
	4 - Altera o registro corrente
	5 - Remove o registro corrente do Banco de Dados
5. Nivel de acesso
6. Habilita Menu Funcional

@Return aRotina, Array com opcoes da rotina.
@author Ana Paula N. Silva
@version 12
@since   23/11/2006
*/
//-------------------------------------------------------------------
Static Function MenuDef()
	Local aRotina := {	{STR0043  , "AxPesqui" , 0 , 1 },;  //"Pesquisar"
								{STR0044 , "AxVisual" , 0 , 2 },;  //"Visualizar"
								{ STR0002 ,"Fa376Gera", 0 , 4 },; //"Aglutinar"
								{ STR0003 ,"Fa376Can"  , 0 , 5 }} //"Cancelar"
Return(aRotina)

//-------------------------------------------------------------------
/*{Protheus.doc} FinA376T

Chamada semi-automatica utilizado pelo gestor financeiro

@author Marcelo Celi Marques
@version 12
@since   26/03/2008
*/
//-------------------------------------------------------------------
Function FinA376T(aParam)
	cRotinaExec := "FINA376"
	ReCreateBrow("SE2",FinWindow)
	FinA376(aParam[1])
	ReCreateBrow("SE2",FinWindow)
	dbSelectArea("SE2")

	INCLUI := .F.
	ALTERA := .F.

Return .T.

//-------------------------------------------------------------------
/*{Protheus.doc} FinTamSXG

Funcao de processamento da gravacao do SXD

@author Totvs
@version 12
@since   27/10/2010
*/
//-------------------------------------------------------------------
Static Function FinTamSXG(cGrupo,nTamPad)
	Local aRet

	DbSelectArea("SXG")
	DbSetOrder(1)

	IF DbSeek(cGrupo)
		aRet := TamSXG(cGrupo)
	Else
		aRet := {nTamPad,"@!",nTamPad,nTamPad}
	Endif

Return aRet

//-------------------------------------------------------------------
/*{Protheus.doc} FA376Data
Validacao da data de vencimento para os novos titulos
(UTILIZADA NO DICIONARIO)

@author Mauricio Pequim
@version 12
@since  16/03/2004
*/
//-------------------------------------------------------------------
Function Fa376Data()

Local lRet := .T.

If Empty(mv_par09) .or. mv_par09 < dDatabase
	lRet := .F.
Endif

Return lRet

//-------------------------------------------------------------------
/*{Protheus.doc} F376CriaTmp

@author Vitor Duca
@version 12
@since   22/11/2019
*/
//-------------------------------------------------------------------
Static Function F376CriaTmp(aSelFil As Array, cTmpFil As Character)
	Local cInsert  As Character
	Local cDb      As Character
	Local cF376QRY As Character
	Local nErro    As Numeric
	Local cUniao   As Character
	Local cNatIrf  As Character
	Local lRet     As Logical

	//Manter a variável "cQuery" como Private por questão de compatibilidade
	//com o Ponto de Entrada F376QRY
	Private cQuery As Character

	Default aSelFil		:= {}
	Default cTmpFil		:= ""

	//Inicialização das variaveis
	cInsert  := ""
	cQuery   := ""
	cDb      := AllTrim(tcGetdb())
	cF376QRY := ""
	nErro    := 0
	cUniao   := PADR(GetMV("MV_UNIAO"),Len(SA2->A2_COD))
	cNatIrf  := &(SuperGetMV("MV_IRF"))
	lRet     := .T.

	cQuery	:= "SELECT R_E_C_N_O_ FROM " + RetSQLname("SE2") + " WHERE "

	If MV_PAR13 == 2
		cQuery += "E2_FILIAL = '" + aSelFil[1] + "' AND "
	Else
		cQuery += "E2_FILIAL " + GetRngFil(aSelFil,"SE2",.T., @cTmpFil) + " AND "
	Endif

	cQuery += "E2_FORNECE LIKE '" + cUniao + "%' AND "

	If MV_PAR12 == 1
		cQuery += "E2_TIPO IN "+ FORMATIN(MVTAXA+MVTXA,,3)+" AND "
	Else
		cQuery += "E2_TIPO IN "+ FORMATIN(MVTAXA,,3)+" AND "
	Endif

	cQuery += "E2_VENCREA BETWEEN '"+Dtos(MV_PAR05)+"' AND '"+Dtos(MV_PAR06)+"' AND "
	cQuery += "E2_SALDO > 0 AND "
	cQuery += "E2_NATUREZ IN ('"+ cNatIrf +"') AND "
	cQuery += "E2_NUMTIT NOT IN ('FINA376','FINA381') AND "
	cQuery += "E2_IDDARF = ' ' AND "
	cQuery += "D_E_L_E_T_ = ' ' "

	If __F376QRY
		cF376QRY := ExecBlock("F376QRY",.F.,.F.)
		If (ValType(cF376QRY) == "C")
			cQuery += cF376QRY
		EndIf
	Endif

	cQuery += "ORDER BY E2_CODRET "
	cQuery := ChangeQuery(cQuery)

	If __oFina376 != Nil
		__oFina376:Delete()
		__oFina376 := Nil
	EndIf

	__oFina376 := FWTemporaryTable():New("SE2TRB")
	__oFina376:SetFields({{"RECNO", "N", 16, 0 }})
	__oFina376:AddIndex("1",{"RECNO"})
	__oFina376:Create()

	cInsert := "INSERT "

	If cDb == "ORACLE"
		cInsert += " /*+ APPEND */ "
	ElseIf cDb == "DB2"
		cQuery := STRTRAN(cQuery, "FOR READ ONLY", "")
	EndIf

	cInsert += "INTO " + __oFina376:GetRealName() + " (RECNO) " + cQuery
	Processa({|| nErro := TcSQLExec(cInsert)})

	If nErro >= 0
		SE2TRB->(DbGoTop())
	Else
		__oFina376:Delete()
		__oFina376 := Nil
		lRet       := .F.
		Help(" ",1,"RECNO")
		ProcLogAtu("ERRO","RECNO",Ap5GetHelp("RECNO"))
	Endif

Return lRet

//-------------------------------------------------------------------
/*{Protheus.doc} F376FilOri

Altera a variavel cFilOrig, para gravação da baixa

@author Totvs
@version 12
@since   26/11/2019
*/
//-------------------------------------------------------------------
Static Function F376FilOri()
	Local aAreaSe2 As Array
	Local cFilOrig As Character
	Local cChave   As Character

	aAreaSe2	:= GetArea()
	cFilOrig	:= SE2->E2_FILORIG
	cChave      := ""

	If SE2->E2_ORIGEM == 'FINA040 ' .and. Empty(cFilOrig)
		cChave	:= SE2->E2_PREFIXO+SE2->E2_NUM
		dbselectArea("SE1")
		SE1->(dbSetOrder(1))
		While !Eof() .and. SE1->(dbSeek(xFilial("SE1")+cChave))
			If SE1->E1_PREFIXO+SE1->E1_NUM == cChave .and. SE1->E1_IRRF == SE2->E2_VALOR .and. SE1->E1_PARCIRF == SE2->E2_PARCELA
				cFilOrig	:= SE1->E1_FILORIG
				Exit
			EndIf
			SE1->(dbSkip)
		EndDo
	EndIf

	RestArea(aAreaSe2)
	FwFreeArray(aAreaSE2)

Return cFilOrig
