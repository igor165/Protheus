#Include "FINA183.CH"
#Include "PROTHEUS.CH"
#Define ACEITAVEL 10

Static aIt_TpDct 	:= {}
static __oStSumImp 	as object
static __cTpRenApl4 := SuperGetMv("MV_RENAPL4",,"1") //Tipo de Rendimento Apl. FAF: 1= Acumulado, 2=Mensal
Static _lRotAuto := .F.
Static _aRotAuto := {}
Static _aRetAuto := {}
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ FINA183  ³ Autor ³ Jeremias Luna         ³ Data ³ 10.08.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retencao do IR no ultimo dia do mes                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FINA183()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Aplicacao Financeira                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA183(nPosArotina as Numeric, aRotAuto as Array)
Local cRelease := GetRpoRelease()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Array contendo as Rotinas a executar do programa      ³
//³ ----------- Elementos contidos por dimensao ------------     ³
//³ 1. Nome a aparecer no cabe‡alho                              ³
//³ 2. Nome da Rotina associada                                  ³
//³ 3. Usado pela rotina                                         ³
//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
//³    2 - Simplesmente Mostra os Campos                         ³
//³    3 - Inclui registros no Bancos de Dados                   ³
//³    4 - Altera o registro corrente                            ³
//³    5 - Remove o registro corrente do Banco de Dados          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aRotina := MenuDef()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabe‡alho da tela de atualiza‡”es                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Private cCadastro := OemToAnsi(STR0005)  //"Retencao de IR/Atualizacao da Qtde de Quotas"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica o numero do Lote                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Private cLote
LoteCont( "FIN" )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Endereca a fun‡„o de BROWSE                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

DEFAULT nPosArotina := 0
DEFAULT aRotAuto    := {}

If nPosArotina > 0 // Sera executada uma opcao diretamento de aRotina, sem passar pela mBrowse
	dbSelectArea("SEH")
	If !Empty(aRotAuto)
		_lRotAuto := .T.
		_aRotAuto := aRotAuto
		posSEH(aRotAuto)
	EndIf
	bBlock := &( "{ |a,b,c,d,e| " + aRotina[ nPosArotina,2 ] + "(a,b,c,d,e) }" )
	Eval( bBlock, Alias(), (Alias())->(Recno()), nPosArotina)
Else
	
	If cRelease > "12.1.033"//FindFunction("FAplEmpNew") .and. FAplEmpNew("FINA183")
		FINA716()
		Return
	Endif

	mBrowse( 6, 1,22,75,"SEH",,,,,,FA183Legend())
Endif

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a183Reter ³ Autor ³ Jeremias Luna         ³ Data ³ 10.08.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retencao do IR no ultimo dia do mes                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ a183Reter(ExpC1,ExpN1,ExpN2)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Numero da op‡„o selecionada                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA183                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a183Reter(cAlias as Character, nReg as Numeric, nOpc as Numeric)

Local lPanelFin		:= IsPanelFin()
Local cPadrao		:="582"
Local nHdlPrv		:= 0
Local lPadrao		:= VerPadrao(cPadrao)
Local nTotal		:= 0
Local cArquivo		:= ""
Local nOpcA			:=0
Local oDlg
Local lContinua 	:= .T.
Local ca183Codigo	:= SEH->EH_NUMERO+"/"+SEH->EH_REVISAO
Local cNBanco		:= SEH->EH_NBANCO
Local ca183Nat
Local ca183Bco		:= SEH->EH_BANCO
Local ca183Age		:= SEH->EH_AGENCIA
Local ca183Cta		:= SEH->EH_CONTA
Local da183Cred		:= dDataBase
Local ca183Histor	:= STR0010+" "+SEH->EH_TIPO //"Retencao de IR"
Local cSequencia	:= "00"
Local nVlCotaAnt	:= nVlCotaAtu := 0
Local nIrAcum		:= 0
Local cPict			:= PesqPict("SEH","EH_QUOTAS") // PICTURE PARA VALORES POR QUOTAS
Local cPict2		:= PesqPict("SEH","EH_VALOR")  // PICTURE PARA VALORES GENERICOS
Local lDeduzIR		:= (StrZero(Month(dDataBase),2) $ SuperGetMv("MV_10892",,"05#11"))
Local cLctPco		:= ""
Local lPcoConf		:= .F.
Local aFlagCTB		:= {}
Local lUsaFlag		:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Local cTpRenApl4	:= __cTpRenApl4
Local lContinuaOk 	:= .F.

Local nAtField  := 0
Local aAutField := 0
Local nPos      := 0
Local lCalcCota := .T.
Local cAltCPO   := ""
Local nAltVlr   := 0

If SEH->EH_APLEMP <> "APL" .Or. !SEH->EH_TIPO $ GetMv("MV_APLCAL4")
	Help(" ",1,"a183Aplic")
	Return
EndIf

// Nao permite executar antes do ultimo dia util do mes.
IF dDataBase < DataValida(LastDay(dDataBase),.F.)
	Help(" ",1,"a183DtApr")
	Return(.T.)
Endif

IF SEH->EH_DTULTAT == DdataBase
	Help(" ",1,"a183Aprop")
	Return(.T.)
Endif

DbSelectArea("SE9")
DbSetOrder(1)
DbSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)

Private na183VlAtu := 0.00
Private na183VlResg:= 0.00
Private na183VlIRF := 0.00
Private na183VlSwap:= 0.00
Private na183IRSwap:= 0.00
Private na183VlIOF := 0.00 			// Iof na aprop. so existe para efeito de IR
									// ou seja, nao sera gerado no SEI nem sera
									// deduzido do rendimento, mas sera deduzido
									// do IR, para que o IR nao seja calculado sobre
									// o IOF tambem
Private na183VlTaxa:= 0.00
Private na183RegPri:= 0.00
Private na183RegJur:= 0.00
Private na183SldPri:= 0.00
Private na183SldJur:= 0.00
Private na183Saldo := 0.00
Private na183VlCrd := 0.00
Private na183CrdAnt:= 0.00
Private nRendimento:= 0.00
Private na183VlMoed:= RecMoeda(dDataBase,SEH->EH_MOEDA)
Private n183QtdCota:= 0
Private n183SldCota := 0
Private na183AtuIr

Private oGet01
Private oGet02
Private oGet03
Private oGet04
Private oGet05
Private oGet06
Private oGet07
Private oGet08
Private oGet09


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calculo do valor do IR a ser retido                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nVlCotaAtu := SE9->E9_VLRCOTA // Valor da cota atual

If cTpRenApl4 == "1"
	nVlCotaAnt := SEH->EH_VLRCOTA // Valor da cota no dia da aplica‡Æo
Else
	nVlCotaAnt := SE9->E9_VLRCOTA // Valor da cota no dia da aplica‡Æo
EndIf

DbSelectArea("SE0")
DbSetOrder(1)
If MsSeek(xFilial("SE0")+SE9->(E9_BANCO+E9_AGENCIA+E9_CONTA+E9_NUMERO)+Str(21001231-Val(DTOS(dDataBase)),11))
	nVlCotaAtu := SE0->E0_VALOR
Endif
DbSelectArea("SEH")

ca183Nat := GetMv("MV_NATRETE")
ca183Nat := Alltrim(ca183Nat)
If "EXECBLOCK" $ Upper(ca183Nat) .Or. "IF(" $ Upper(ca183Nat)
	ca183Nat := &(ca183Nat)
Endif
ca183Nat := Pad(ca183Nat,TamSx3("ED_CODIGO")[1])

// inicializa as variáveis com as informações do execucao
If _lRotAuto
	aAutField := {;
		'CNBANCO', 'NA183VLATU', 'CA183BCO', 'CA183AGE', 'CA183CTA',;
		'DA183CRED', 'CA183NAT', 'CA183HISTOR', 'NVLCOTAATU', 'NA183ATUIR',;
		'NA183VLIRF','NRENDIMENTO','N183QTDCOTA','N183SLDCOTA'}

	For nAtField := 1 to Len(aAutField)
		nPos := Ascan(_aRotAuto, {|e| AllTrim(UPPER(e[1])) == aAutField[nAtField]})
		If nPos > 0
			&(aAutField[nAtField]) := _aRotAuto[nPos,2]
			If aAutField[nAtField] == 'NA183VLIRF'
				lCalcCota := .F.
			EndIf
		EndIf
	Next nAtField
EndIf

// Calcula valores iniciais
If lCalcCota
	Fa183VlrCota(@na183VlIrf,nVlCotaAnt,nVlCotaAtu,,lDeduzIR)
EndIf

If ( !DtMovFin(,,"2") )
	lContinua := .F.
EndIf
If ( SEH->EH_SLDCOTA == 0 )
	Help(" ",1,"a181JABAIX")
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Lógica para atualizar os valores quando alterados pelo NGF  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If _lRotAuto .And. IsInCallStack("F183CalAlt")

	nPos := Ascan(_aRotAuto, {|e| AllTrim(UPPER(e[1])) == "ALT_CAMPO"})
	If nPos > 0
		cAltCPO := UPPER(_aRotAuto[nPos, 2])
	EndIf
	nPos := Ascan(_aRotAuto, {|e| AllTrim(UPPER(e[1])) == "ALT_VALOR"})
	If nPos > 0
		nAltVlr := _aRotAuto[nPos, 2]
	EndIf

	If cAltCPO == 'NA183VLIRF'
		na183VlIrf  := nAltVlr
		n183QtdCota := If(lDeduzIR, ((na183VlIrf + getSumImp( 'I6' )) / nVlCotaAtu), 0)
		n183SldCota := SEH->EH_SLDCOTA-n183QtdCota
		na183AtuIR  := n183SldCota * nVlCotaAtu
	EndIf
	If cAltCPO == 'NVLCOTAATU'
		nVlCotaAtu := nAltVlr
		Fa183VlrCota(@na183VlIrf, nVlCotaAnt, nVlCotaAtu, oDlg, lDeduzIR)
	EndIf
	If cAltCPO == 'N183QTDCOTA'
		n183SldCota := SEH->EH_SLDCOTA-n183QtdCota
		na183AtuIR	:= n183SldCota * nVlCotaAtu
	EndIf
	If cAltCPO == 'N183SLDCOTA'
		na183AtuIR		:= n183SldCota * nVlCotaAtu
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Retorno de calculo dos gets para o NGF              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If IsInCallStack("F183Calc") .Or. IsInCallStack("F183CalAlt")
	aadd(_aRetAuto, {'ca183Codigo', ca183Codigo})
	aadd(_aRetAuto, {'cNBanco'    , cNBanco})
	aadd(_aRetAuto, {'EH_DATA'    , SEH->EH_DATA})
	aadd(_aRetAuto, {'EH_SALDO'   , SEH->EH_SALDO})
	aadd(_aRetAuto, {'EH_SLDCOTA' , SEH->EH_SLDCOTA})
	aadd(_aRetAuto, {'na183VlAtu' , na183VlAtu})
	aadd(_aRetAuto, {'ca183Bco'   , ca183Bco})
	aadd(_aRetAuto, {'ca183Age'   , ca183Age})
	aadd(_aRetAuto, {'ca183Cta'   , ca183Cta})
	aadd(_aRetAuto, {'da183Cred'  , da183Cred})
	aadd(_aRetAuto, {'ca183Nat'   , ca183Nat})
	aadd(_aRetAuto, {'ca183Histor', ca183Histor})
	aadd(_aRetAuto, {'nVlCotaAtu' , nVlCotaAtu})
	aadd(_aRetAuto, {'na183AtuIr' , na183AtuIr})
	aadd(_aRetAuto, {'na183VlIrf' , na183VlIrf})
	aadd(_aRetAuto, {'nRendimento', nRendimento})
	aadd(_aRetAuto, {'n183QtdCota', n183QtdCota})
	aadd(_aRetAuto, {'n183SldCota', n183SldCota})
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a geraçao de lancamentos do SIGAPCO      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PcoIniLan("000011")

While lContinua
	SoftLock( "SEH" )

	lContinua := .F.
	nOpca:=0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Recebe dados a serem digitados                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	If _lRotAuto
		nOpca := 1
		If !Fa183Ok(ca183Nat)
			nOpca := 3
			Help(,,STR0049) //Natureza inválida
		EndIf
	Else
		If(!lContinuaOk)
			If lPanelFin  //Chamado pelo Painel Financeiro
				DEFINE MSDIALOG oDlg FROM  81,15 TO 440,574 TITLE OemToAnsi(STR0010) PIXEL			//"Retencao de Ir"
			Else
				DEFINE MSDIALOG oDlg FROM  81,15 TO 410,574 TITLE OemToAnsi(STR0010) PIXEL			//"Retencao de Ir"
			Endif
			@ 001,004 TO 036,280 PROMPT OemToAnsi(STR0011) OF oDlg  PIXEL					//"Dados da Operacao"

			@ 010,010 SAY OemToAnsi(STR0012)			SIZE 18,09  OF oDlg PIXEL			//"Codigo"
			@ 010,033 MSGET ca183Codigo					SIZE 33,09  OF oDlg PIXEL WHEN .F.

			@ 010,072 SAY OemToAnsi(STR0013)			SIZE 45,09  OF oDlg PIXEL			//"Inst.Financeira"
			@ 010,115 MSGET cNBanco						SIZE 63,09  OF oDlg PIXEL WHEN .F.

			@ 010,183 SAY OemToAnsi(STR0014)			SIZE 21,09  OF oDlg PIXEL			//"Emissao"
			@ 010,206 MSGET SEH->EH_DATA				SIZE 40,09  OF oDlg PIXEL WHEN .F.

			@ 023,010 SAY OemToAnsi(STR0015)			SIZE 39,09  OF oDlg PIXEL			//"Vlr.Principal"
			@ 023,052 MSGET SEH->EH_SALDO				SIZE 66,09  OF oDlg PIXEL PICTURE cPict2 WHEN .F.

			@ 023,132 SAY OemToAnsi(STR0016)			SIZE 42,09  OF oDlg PIXEL			//"Vlr.Atualizado"
			@ 023,176 MSGET oGet09 VAR na183VlAtu	SIZE 70,09  OF oDlg PIXEL PICTURE cPict2  WHEN .F.

			@ 038,004 TO 160,132 PROMPT OemToAnsi(STR0017) OF oDlg  PIXEL					//"Dados da Retencao"

			@ 047,010 SAY OemToAnsi(STR0018)			SIZE 18,08  OF oDlg PIXEL			//"Banco"
			@ 047,031 MSGET ca183Bco					SIZE 18,08  OF oDlg PIXEL WHEN .F.

			@ 047,062 SAY OemToAnsi(STR0019)			SIZE 24,08  OF oDlg PIXEL			//"Agencia"
			@ 047,092 MSGET ca183Age					SIZE 36,08  OF oDlg PIXEL WHEN .F.

			@ 058,010 SAY OemToAnsi(STR0020)			SIZE 18,08  OF oDlg PIXEL			//"Conta"
			@ 058,031 MSGET ca183Cta					SIZE 33,08  OF oDlg PIXEL WHEN .F.

			@ 058,077 SAY OemToAnsi(STR0021)			SIZE 36,08  OF oDlg PIXEL			//"Crd."
			@ 058,092 MSGET da183Cred					SIZE 36,08  OF oDlg PIXEL WHEN .F.

			@ 069,010 SAY OemToAnsi(STR0022)			SIZE 36,08  OF oDlg PIXEL			//"Natureza"
			@ 069,060 MSGET ca183Nat					SIZE 68,08  OF oDlg Hasbutton PIXEL	VALID FinVldNat( .F., ca183Nat ) 	F3 "SED"

			@ 080,010 SAY OemToAnsi(STR0023)			SIZE 21,08  OF oDlg PIXEL			//"Histor."
			@ 080,037 MSGET ca183Histor				SIZE 91,08  OF oDlg PIXEL

			@ 091,010 SAY OemToAnsi(STR0040)			SIZE 51,08 OF oDlg PIXEL			//"Vlr. Unit. das Cotas"
			@ 091,060 MSGET oGet08 VAR nVlCotaAtu	SIZE 68,08 OF oDlg Hasbutton PIXEL PICTURE cPict VALID Fa183VlrCota(@na183VlIrf,nVlCotaAnt,nVlCotaAtu,oDlg,lDeduzIR)

			@ 102,010 SAY OemToAnsi(STR0024)			SIZE 46,08  OF oDlg PIXEL			//"Vlr.Atu - IR"
			@ 102,060 MSGET oGet01 VAR na183AtuIR  SIZE 68,08  OF oDlg Hasbutton PIXEL PICTURE cPict2 WHEN { || na183AtuIR		:= n183SldCota * nVlCotaAtu, .T. }

			@ 113,010 SAY OemToAnsi(STR0025)			SIZE 46,08  OF oDlg PIXEL			//"I.R. S/ Rend. - IOF"
			@ 113,060 MSGET oGet02 VAR na183VlIRF	SIZE 68,08  OF oDlg Hasbutton PIXEL PICTURE cPict2 VALID { || n183QtdCota 	:= If(lDeduzIR, ((na183VlIrf+getSumImp('I6'))/nVlCotaAtu), 0 ),;
																																	n183SldCota 	:= SEH->EH_SLDCOTA-n183QtdCota,;
																																	na183AtuIR		:= n183SldCota * nVlCotaAtu, .T. }
			@ 124,010 SAY OemToAnsi(STR0026)			SIZE 46,08  OF oDlg PIXEL			//"Rendimento"
			@ 124,060 MSGET oGet03 VAR nRendimento	SIZE 68,08  OF oDlg Hasbutton PIXEL PICTURE cPict2

			@ 135,010 SAY OemToAnsi(STR0028)			SIZE 46,08  OF oDlg PIXEL			//"Qtde. Cotas do IR"
			@ 135,060 MSGET oGet04 VAR n183QtdCota	SIZE 68,08  OF oDlg Hasbutton PIXEL PICTURE cPict VALID { || n183SldCota 	:= SEH->EH_SLDCOTA-n183QtdCota, .T. }

			@ 146,010 SAY OemToAnsi(STR0027)			SIZE 46,08  OF oDlg PIXEL			//"Saldo em cotas"
			@ 146,060 MSGET oGet05 VAR n183SldCota	SIZE 68,08  OF oDlg Hasbutton PIXEL PICTURE cPict

			If lPanelFin  //Chamado pelo Painel Financeiro
				ACTIVATE MSDIALOG oDlg CENTERED ON INIT FaMyBar(oDlg,;
					{||nOpca:=1,Iif(Fa183Ok(ca183Nat),oDlg:End(),nOpca:=3)},;
					{||nOpca:=0,oDlg:End()})

			Else
				DEFINE SBUTTON FROM 009,250 TYPE 1 ENABLE ACTION (nOpca:=1,Iif(Fa183Ok(ca183Nat),oDlg:End(),nOpca:=3)) OF oDlg
				DEFINE SBUTTON FROM 023,250 TYPE 2 ENABLE ACTION oDlg:End() OF oDlg
				ACTIVATE MSDIALOG oDlg CENTERED
			Endif
		endIf
	EndIf

	Do Case
		Case nOpcA == 2
			lContinua := .T.
		Case nOpcA == 3
			dbSelectArea(cAlias)
			MsUnlock()
			lContinua := .F.
		Case nOpcA == 1
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Ponto de Entrada para gravacao de dados complementares            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (ExistBlock("Fa183RES"))
				If !ExecBlock("Fa183RES",.F.,.F.)
					dbSelectArea("SEH")
					MsUnLock()
					Return(.T.)
				EndIf
			EndIf

			DbSelectArea("SEI")
			DbSetOrder(1)
			DbSeek(xFilial("SEI")+SEH->EH_APLEMP+SEH->EH_NUMERO+SEH->EH_REVISAO)
			While ( !Eof() .And. SEI->EI_FILIAL == xFilial("SEI") .And.;
				SEI->EI_APLEMP == SEH->EH_APLEMP .And.;
				SEI->EI_REVISAO== SEH->EH_REVISAO )

				cSequencia := If(cSequencia>SEI->EI_SEQ,cSequencia,SEI->EI_SEQ)

				dbSelectArea("SEI")
				dbSkip()
			EndDo

			cSequencia := Soma1(cSequencia,2)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Inicio do bloco protegido via TTS                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			Begin Transaction

			DbSelectArea("SEH")
			RecLock("SEH",.F.)

			SEH->EH_ULTAPR  	:= dDataBase
			SEH->EH_SLDCOTA		:= n183SldCota
			SEH->EH_SALDO		:= na183AtuIR
			SEH->EH_DTULTAT   := dDataBase  // Data da Atualizacao
			// Se existir o campo com a data do ultimo pagto de IR e deve-se deduzir o IR da aplicacao, grava a data
			// do ultimo pagto. de IR, pois ela sera utilizada no calculo do rendimento posteriormente.
			If lDeduzIR
				SEH->EH_ULTPGIR  := dDataBase
			Endif

			// Se houve IOF grava IRACUM para que no proximo resgate,
			// este IR nao seja computado, pois se existe IOF na aprop. significa
			// que a aplicacao foi feita apos o 1§ dia do mes.
			If cTpRenApl4 =="1"
				SEH->EH_IRACUM		:= na183VlIrf
			Else
				SEH->EH_IRACUM		+= na183VlIrf
			EndIf
			SEH->EH_IOFVIRT	:= na183VlIof

			nIrAcum				:= SEH->EH_IRACUM

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava o Valor do IRF                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( na183VlIrf != 0 )
				Reclock("SEI",.T.)
				SEI->EI_FILIAL		:= xFilial("SEI")
				SEI->EI_NUMERO		:= SEH->EH_NUMERO
				SEI->EI_REVISAO		:= SEH->EH_REVISAO
				SEI->EI_TIPODOC		:= "I6" // Retencao do IRF
				SEI->EI_DATA		:= dDataBase
				SEI->EI_TIPO		:= SEH->EH_TIPO
				SEI->EI_APLEMP		:= SEH->EH_APLEMP
				SEI->EI_BANCO		:= cA183Bco
				SEI->EI_AGENCIA		:= cA183AGe
				SEI->EI_CONTA		:= cA183Cta
				SEI->EI_VALOR		:= nA183VlIrf
				SEI->EI_NATUREZ		:= cA183Nat
				SEI->EI_DTDIGIT		:= dDataBase
				//SEI->EI_LA			:= If(lPadrao, "S","")
				SEI->EI_SEQ			:= cSequencia
				SEI->EI_VLMOED2		:= 0
				SEI->EI_HISTOR		:= cA183Histor
				SEI->EI_MOTBX		:= "APR"
				SEI->EI_TAXA		:= SEH->EH_TAXA
				SEI->EI_TXMOEDA		:= nA183VlMoed
				SEI->EI_IRACUM 		:= nIrAcum
				SEI->EI_VLRQTS      := SE9->E9_COTAANT
				SEI->EI_VLRQTA      := SE9->E9_VLRCOTA
				SEI->EI_QTDCOTA   := n183QtdCota
				SEI->EI_ULTAPR  	:= dDataBase

				cLctPco    := PcoItLanApr(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
				If !Empty(cLctPco)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera os lancamentos do SIGAPCO                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					PcoDetLan("000011", cLctPco, "FINA183")
				EndIf

				If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
					aAdd( aFlagCTB, { "EI_LA", "S", "SEI", SEI->( RecNo() ), 0, 0, 0} )
				EndIf
			EndIf

			If lPadrao
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona SA6                                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

				SA6->(DbSetOrder(1))
				SA6->(DbSeek(xFilial("SA6")+ca183bco+Ca183Age+ca183Cta))

				nHdlPrv := HeadProva( cLote,;
				                      "FINA183",;
				                      substr( cUsuario, 7, 6 ),;
				                      @cArquivo )

				//Contabiliza pela variavel VALOR. Nao necessita de controle de flag.
				nTotal += DetProva( nHdlPrv,;
				                    cPadrao,;
				                    "FINA183" /*cPrograma*/,;
				                    cLote,;
				                    /*nLinha*/,;
				                    /*lExecuta*/,;
				                    /*cCriterio*/,;
				                    /*lRateio*/,;
				                    /*cChaveBusca*/,;
				                    /*aCT5*/,;
				                    /*lPosiciona*/,;
				                    @aFlagCTB,;
				                    /*aTabRecOri*/,;
				                    /*aDadosProva*/ )
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava o Valor do Rendimento                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nRendimento != 0
				Reclock("SEI",.T.)
				SEI->EI_FILIAL		:= xFilial("SEI")
				SEI->EI_NUMERO		:= SEH->EH_NUMERO
				SEI->EI_REVISAO		:= SEH->EH_REVISAO
				SEI->EI_TIPODOC		:= "I7" // Valor do rendimento na Retencao do IR
				SEI->EI_DATA		:= dDataBase
				SEI->EI_TIPO		:= SEH->EH_TIPO
				SEI->EI_APLEMP		:= SEH->EH_APLEMP
				SEI->EI_BANCO		:= cA183Bco
				SEI->EI_AGENCIA		:= cA183AGe
				SEI->EI_CONTA		:= cA183Cta
				SEI->EI_VALOR		:= nRendimento // Valor do rendimento
				SEI->EI_NATUREZ		:= cA183Nat
				SEI->EI_DTDIGIT		:= dDataBase
				//SEI->EI_LA			:= If(lPadrao,"S","")
				SEI->EI_SEQ			:= cSequencia
				SEI->EI_VLMOED2		:= 0
				SEI->EI_HISTOR		:= cA183Histor
				SEI->EI_MOTBX		:= "APR"
				SEI->EI_TAXA		:= SEH->EH_TAXA
				SEI->EI_TXMOEDA		:= nA183VlMoed
				SEI->EI_IRACUM 		:= nIrAcum
				SEI->EI_VLRQTS    	:= SE9->E9_COTAANT
				SEI->EI_VLRQTA    	:= SE9->E9_VLRCOTA
				SEI->EI_QTDCOTA   	:= n183QtdCota
				SEI->EI_ULTAPR  	:= dDataBase

				cLctPco    := PcoItLanApr(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .F.)
				If !Empty(cLctPco)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera os lancamentos do SIGAPCO                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					PcoDetLan("000011", cLctPco, "FINA183")
				EndIf

				If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
					aAdd( aFlagCTB, { "EI_LA", "S", "SEI", SEI->( RecNo() ), 0, 0, 0} )
				EndIf
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Lancamento Contabil                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lPadrao
				nTotal += DetProva( nHdlPrv,;
				                    cPadrao,;
				                    "FINA183" /*cPrograma*/,;
				                    cLote,;
				                    /*nLinha*/,;
				                    /*lExecuta*/,;
				                    /*cCriterio*/,;
				                    /*lRateio*/,;
				                    /*cChaveBusca*/,;
				                    /*aCT5*/,;
				                    /*lPosiciona*/,;
				                    @aFlagCTB,;
				                    /*aTabRecOri*/,;
				                    /*aDadosProva*/ )

				RodaProva(  nHdlPrv,;
							nTotal )

				cA100Incl( cArquivo,;
				           nHdlPrv,;
				           3 /*nOpcx*/,;
				           cLote,;
				           .T.,;
				           .F.,;
				           /*cOnLine*/,;
				           /*dData*/,;
				           /*dReproc*/,;
				           @aFlagCTB,;
				           /*aDadosProva*/,;
				           /*aDiario*/ )

				aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento

			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualizacao da qtde de quotas para retencao do IR  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SE9")
			DbSetOrder(1)
			DbSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
			RecLock("SE9",.F.)

			SE9->E9_COTAANT := nVlCotaAnt
			SE9->E9_VLRCOTA := nVlCotaAtu
			DbSelectArea("SE0")
			// Atualiza arquivo de cotacoes
			If !MsSeek(xFilial("SE0")+SE9->(E9_BANCO+E9_AGENCIA+E9_CONTA+E9_NUMERO)+Str(21001231-Val(DTOS(dDataBase)),11)+Space(3))
		  		RecLock("SE0",.T.)
	  			SE0->E0_FILIAL		:= xFilial("SE0")
	  			SE0->E0_BANCO		:= SE9->E9_BANCO
	  			SE0->E0_AGENCIA	:= SE9->E9_AGENCIA
	  			SE0->E0_CONTA		:= SE9->E9_CONTA
		  		SE0->E0_CONTRAT	:= SE9->E9_NUMERO
	  			SE0->E0_SUBCTA		:= Space(3)
	  			SE0->E0_DATA		:= dDataBase
	  			SE0->E0_ORDEM		:= Str(21001231-Val(DTOS(dDataBase)),11)
	  		Else
	  			RecLock("SE0",.F.)
			Endif
			SE0->E0_VALOR		:= nVlCotaAtu
  			SE0->E0_ORIGEM		:= "P" // Apropriacao
  			DbSelectArea("SE9")

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Final  do bloco protegido via TTS                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			End Transaction

			lContinua := .F.
		OtherWise
			lContinua := .F.
	EndCase
EndDo

dbSelectArea("SEH")
MsUnLock()

If lPcoConf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera os lancamentos do SIGAPCO  (referente SEH)     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoDetLan("000011","01","FINA183")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza a geraçao de lancamentos do SIGAPCO        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PcoFinLan("000011")

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ a183Estor³ Autor ³ Jeremias Luna         ³ Data ³ 10.08.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Estorno da Retencao do IR                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ a183Estor(ExpC1,ExpN1,ExpN2)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Numero da op‡„o selecionada                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA183                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a183Estor(cAlias as character, nReg as numeric, nOpc as numeric)
Local lPanelFin := IsPanelFin()
Local cChave     := ""
Local cPadrao    := "584"
Local nHdlPrv    := 0
Local lPadrao    := VerPadrao(cPadrao)
Local nTotal     := 0
Local cArquivo   := ""
Local nOpcA      := 0
Local nPosicao   := 0
Local oDlg
Local lContinua  := .T.
Local ca183Codigo:= SEH->EH_NUMERO+"/"+SEH->EH_REVISAO
Local cNBanco    := SEH->EH_NBANCO
Local ca183Nat   := CriaVar("ED_CODIGO",.F.)
Local ca183Bco   := SEH->EH_BANCO
Local ca183Age   := SEH->EH_AGENCIA
Local ca183Cta   := SEH->EH_CONTA
Local da183Cred  := dDataBase
Local ca183Histor:= STR0039+" "+SEH->EH_TIPO //"Est.Resg.Aplicacao"
Local cSequencia := "00"
Local aa183Reg   := {}
Local cListBox   := 0
Local nCntFor		:= 0
Local aa183Estor	:= {}
Local nCntFor1		:= 0
Local aMovEst		:= {}
Local nVlCota		:= 0
Local aa183Calc		:= {}
Local n183NumSeq	:= 0
Local nQtdCota    := 0
Local n183QtdCota := 0
Local cPict      := PesqPict("SEH","EH_QUOTAS") // PICTURE PARA VALORES POR QUOTAS
Local cPict2     := PesqPict("SEH","EH_VALOR")  // PICTURE PARA VALORES GENERICOS
Local cLctPco    := ""
Local lPcoConf 	:= .F.
Local aFlagCTB		:= {}
Local lUsaFlag		:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Local cTpRenApl4	:= __cTpRenApl4
Local nRecEst as numeric
Local nPosHist 	:= 0

If SEH->EH_APLEMP <> "APL" .Or. !SEH->EH_TIPO $ GetMv("MV_APLCAL4")
	Help(" ",1,"a183Aplic")
	Return
EndIf

If !DtMovFin(,,"2")
	Help(" ",1,"a183DeMovF")

	Return(.F.)
EndIf

DbSelectArea("SEI")
DbSetOrder(1)
DbSeek(xFilial("SEI")+SEH->EH_APLEMP+SEH->EH_NUMERO+SEH->EH_REVISAO)

While !Eof().And.xFilial("SEI") ==SEI->EI_FILIAL.And.SEH->EH_APLEMP ==SEI->EI_APLEMP .And.;
					SEH->EH_NUMERO ==SEI->EI_NUMERO .And. SEH->EH_REVISAO == SEI->EI_REVISAO
	// Imposto de Renda
	If SEI->EI_TIPODOC$"I6".And.SEI->EI_MOTBX=="APR".And.SEI->EI_STATUS<>"C"
		na183VlIRF:= SEI->EI_VALOR
	Endif

	// Rendimentos
	If SEI->EI_TIPODOC$"I7".And.SEI->EI_MOTBX=="APR".And.SEI->EI_STATUS<>"C"
		Aadd(	aa183Estor,SEI->EI_NUMERO+"/"+SEI->EI_REVISAO+" "+Dtoc(SEI->EI_DATA)+" "+;
				TransForm(SEI->EI_VALOR,Tm(SEI->EI_VALOR,18,TamSX3("EI_VALOR")[2]))+" "+;
				SEI->EI_SEQ	)

		n183NumSeq := Val(SEI->EI_SEQ)
		// Obtem os valores utilizados na operacao, para realizar o estorno
		n183VlrQts := SEI->EI_VLRQTS
		n183VlrQta := SEI->EI_VLRQTA
		nRendimento:= SEI->EI_VALOR
		nQtdCota   := SEI->EI_QTDCOTA
		n183SldCota := SEH->EH_SLDCOTA+SEI->EI_QTDCOTA
		Aadd(aa183Reg,SEI->(Recno()))
	EndIf

	DbSelectArea("SEI")
	DbSkip()
EndDo

If Empty(aa183Estor)
	Help(" ",1,"a183RESGAP")
	Return(.F.)
EndIf

aa183Calc	:= Fa171Calc(dDataBase,SEH->EH_SLDCOTA,,,,n183VlrQts,n183VlrQta,SEH->EH_SLDCOTA*n183VlrQta,.F.)
nVlCota		:= n183VlrQta

Private nA183VlAtu := 0.00
Private nA183VlResg:= 0.00
Private nA183VlIRF := 0.00
Private nA183VlSwap:= 0.00
Private nA183IRSwap:= 0.00
Private nA183VlIOF := 0.00
Private nA183VlTaxa:= 0.00
Private nA183RegPri:= 0.00
Private nA183RegJur:= 0.00
Private nA183SldPri:= 0.00
Private nA183SldJur:= 0.00
Private nA183Saldo := 0.00
Private nA183VlCrd := 0.00
Private nA183CrdAnt:= 0.00
Private nA183VlMoed:= RecMoeda(dDataBase,SEH->EH_MOEDA)

Private oGet01
Private oGet02
Private oGet03
Private oGet04
Private oGet05
Private oGet06
Private oGet07
Private oGet08

nA183VlAtu	:= aA183Calc[1]
nA183VlResg	:= nA183VlAtu
nA183VlIRF	:= aA183Calc[2]
nA183VlIOF  := aA183Calc[3]
nA183VlSwap	:= 0.00
nA183IRSwap	:= 0.00
nA183VlIOF	:= 0.00
nA183VlTaxa	:= 0.00
nA183SldPri	:= 0.00
nA183SldJur	:= 0.00
nA183Saldo	:= nA183SldPri-nA183SldJur
nA183VlCrd	:= nA183VlResg-nA183VlIrf-nA183IrSwap-nA183VlTaxa+nA183VlSwap
nA183CrdAnt	:= nA183VlCrd

ca183Nat		:= GetMv("MV_NATRETE")
ca183Nat		:= Alltrim(ca183Nat)
If "EXECBLOCK" $ Upper(ca183Nat) .Or. "IF(" $ Upper(ca183Nat)
	ca183Nat := &(ca183Nat)
Endif

ca183Nat := Pad(ca183Nat,TamSx3("ED_CODIGO")[1])

na183AtuIr	:= nA183VlResg
nA183AtuIR  := na183VlResg+nA183VlIrf

if _lRotAuto
	nRecEst := aa183Reg[len(aa183Reg)]
else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Escolhe Baixa a ser cancelada                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cListBox := aa183Estor[1]
	nPosicao := 0

	DEFINE MSDIALOG oDlg FROM 5, 5 TO 14, 50 TITLE OemToAnsi( STR0043 ) //"Retencao de IR efetuadas"
	@  .5, 2 LISTBOX cListBox ITEMS aa183Estor SIZE 150 , 40 Font oDlg:oFont

	DEFINE SBUTTON FROM 055,112		TYPE 1 ACTION (nPosicao := 1,oDlg:End()) ENABLE OF oDlg
	DEFINE SBUTTON FROM 055,139.1	TYPE 2 ACTION oDlg:End() ENABLE OF oDlg

	ACTIVATE MSDIALOG oDlg CENTERED

	If nPosicao == 1
		nPosicao := Ascan(aa183Estor,cListBox)
	EndIf
	If ( nPosicao == 0 )
		lContinua := .F.
	EndIf

	If nPosicao >= 1
		If n183NumSeq <> Val(Right(aa183Estor[nPosicao],2))
			Help(" ",1,"A183Sequen")
			lContinua := .F.
		EndIf
	EndIf

	if lContinua
		nRecEst := aa183Reg[nPosicao]
	endIf

endIf

If lContinua

	DbSelectArea("SEI")
	DbGoTo(nRecEst)
	DbSetOrder(1)
	DbSeek(xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ)

	cChave		:= xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ
	na183VlIRF	:= 0

	While !Eof() .And. SEI->EI_FILIAL+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ == cChave
		ca183Nat := SEI->EI_NATUREZ

		If SEI->EI_MOTBX=="APR" .And.SEI->EI_STATUS<>"C"
			ca183Bco   := SEI->EI_BANCO
			ca183Age   := SEI->EI_AGENCIA
			ca183Cta   := SEI->EI_CONTA
		EndIf

		ca183Histor:= "Est.Retencao de IR"+" "+SEH->EH_TIPO

		If _lRotAuto
			nPosHist := Ascan(_aRotAuto, {|e| AllTrim(UPPER(e[1])) == "CA183HISTOR"})
			If nPosHist > 0
				ca183Histor := _aRotAuto[nPosHist, 2]
			EndIf
		EndIf

		If SEI->EI_TIPODOC == "I6" .And. SEI->EI_MOTBX=="APR" .And.SEI->EI_STATUS<>"C"
			na183VlIRF  := SEI->EI_VALOR
			n183QtdCota := SEI->EI_QTDCOTA
			n183SldCota := SEH->EH_SLDCOTA+SEI->EI_QTDCOTA
		EndIf

		DbSelectArea("SEI")
		DbSkip()
	EndDo
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Retorno de calculo dos gets para o NGF              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If _lRotAuto .And. IsInCallStack("F183GetEst")
	aadd(_aRetAuto, {'ca183Codigo', ca183Codigo})
	aadd(_aRetAuto, {'cNBanco'    , cNBanco})
	aadd(_aRetAuto, {'EH_DATA'    , SEH->EH_DATA})
	aadd(_aRetAuto, {'EH_SALDO'   , SEH->EH_SALDO})
	aadd(_aRetAuto, {'na183VlAtu' , na183VlAtu})
	aadd(_aRetAuto, {'ca183Bco'   , ca183Bco})
	aadd(_aRetAuto, {'ca183Age'   , ca183Age})
	aadd(_aRetAuto, {'ca183Cta'   , ca183Cta})
	aadd(_aRetAuto, {'da183Cred'  , da183Cred})
	aadd(_aRetAuto, {'ca183Nat'   , ca183Nat})
	aadd(_aRetAuto, {'ca183Histor', ca183Histor})
	aadd(_aRetAuto, {'nVlCotaAtu' , nVlCota})
	aadd(_aRetAuto, {'na183AtuIr' , na183AtuIr})
	aadd(_aRetAuto, {'na183VlIrf' , na183VlIrf})
	aadd(_aRetAuto, {'nRendimento', nRendimento})
	aadd(_aRetAuto, {'n183QtdCota', n183QtdCota})
	aadd(_aRetAuto, {'n183SldCota', n183SldCota})
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a geraçao de lancamentos do SIGAPCO      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PcoIniLan("000011")

While lContinua
	SoftLock( "SEH" )

	lContinua := .F.

	If _lRotAuto
		nOpca := 2
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Recebe dados a serem digitados                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		If lPanelFin  //Chamado pelo Painel Financeiro
			DEFINE MSDIALOG oDlg FROM  81,15 TO 440,574 TITLE OemToAnsi(STR0042) PIXEL			//"Estorno da Retencao do IR"
		Else
			DEFINE MSDIALOG oDlg FROM  81,15 TO 400,574 TITLE OemToAnsi(STR0042) PIXEL			//"Estorno da Retencao do IR"
		Endif
		@ 001,004 TO 036,276 PROMPT OemToAnsi(STR0011) OF oDlg  PIXEL					//"Dados da Operacao"

		@ 010,010 SAY OemToAnsi(STR0012)			SIZE 18,09  OF oDlg PIXEL			//"Codigo"
		@ 010,033 MSGET ca183Codigo					SIZE 33,09  OF oDlg PIXEL WHEN .F.

		@ 010,072 SAY OemToAnsi(STR0013)			SIZE 45,09  OF oDlg PIXEL			//"Inst.Financeira"
		@ 010,115 MSGET cNBanco						SIZE 63,09  OF oDlg PIXEL WHEN .F.

		@ 010,183 SAY OemToAnsi(STR0014)			SIZE 21,09  OF oDlg PIXEL			//"Emissao"
		@ 010,206 MSGET SEH->EH_DATA				SIZE 26,09  OF oDlg PIXEL WHEN .F.

		@ 023,010 SAY OemToAnsi(STR0015)			SIZE 39,09  OF oDlg PIXEL			//"Vlr.Principal"
		@ 023,052 MSGET SEH->EH_SALDO				SIZE 66,09  OF oDlg PIXEL ;
		PICTURE TM(SEH->EH_SALDO,18) WHEN .F.

		@ 023,132 SAY OemToAnsi(STR0016)			SIZE 42,09  OF oDlg PIXEL			//"Vlr.Atualizado"
		@ 023,176 MSGET na183VlAtu					SIZE 66,09  OF oDlg PIXEL ;
		PICTURE TM(na183VlAtu,18) WHEN .F.

		@ 038,004 TO 156,132 PROMPT OemToAnsi(STR0017) OF oDlg  PIXEL					//"Dados da Retencao"

		@ 047,010 SAY OemToAnsi(STR0018)			SIZE 18,08  OF oDlg PIXEL			//"Banco"
		@ 047,031 MSGET ca183Bco					SIZE 18,08  OF oDlg PIXEL ;
		WHEN .F.

		@ 047,062 SAY OemToAnsi(STR0019)			SIZE 24,08  OF oDlg PIXEL			//"Agencia"
		@ 047,092 MSGET ca183Age					SIZE 36,08  OF oDlg PIXEL ;
		WHEN .F.

		@ 058,010 SAY OemToAnsi(STR0020)			SIZE 18,08  OF oDlg PIXEL			//"Conta"
		@ 058,031 MSGET ca183Cta					SIZE 33,08  OF oDlg PIXEL ;
		WHEN .F.

		@ 058,077 SAY OemToAnsi(STR0021)			SIZE 36,08  OF oDlg PIXEL			//"Crd."
		@ 058,092 MSGET da183Cred					SIZE 37,08  OF oDlg PIXEL WHEN .F.

		@ 069,010 SAY OemToAnsi(STR0022)			SIZE 36,08  OF oDlg PIXEL			//"Natureza"
		@ 069,060 MSGET ca183Nat					SIZE 68,08  OF oDlg Hasbutton PIXEL ;
		VALID FinVldNat( .F., ca183Nat ) 	F3 "SED"

		@ 080,010 SAY OemToAnsi(STR0023)			SIZE 21,08  OF oDlg PIXEL			//"Histor."
		@ 080,037 MSGET ca183Histor				SIZE 91,08 OF oDlg PIXEL

		@ 091,010 SAY OemToAnsi(STR0040)			SIZE 51,08 OF oDlg PIXEL			//"Vlr. Unit. das Cotas"
		@ 091,060 MSGET oGet08 VAR nVlCota		SIZE 68,08 OF oDlg PIXEL PICTURE cPict WHEN .F.

		@ 102,010 SAY OemToAnsi(STR0024)			SIZE 46,08  OF oDlg PIXEL			//"Vlr.Atu - IR"
		@ 102,060 MSGET oGet01 VAR na183AtuIR  SIZE 68,08  OF oDlg PIXEL PICTURE cPict2 WHEN .F.

		@ 113,010 SAY OemToAnsi(STR0025)			SIZE 46,08  OF oDlg PIXEL			//"I.R. S/ Rend. - IOF"
		@ 113,060 MSGET oGet02 VAR na183VlIRF	SIZE 68,08  OF oDlg PIXEL PICTURE cPict2 WHEN .F.

		@ 124,010 SAY OemToAnsi(STR0026)			SIZE 46,08  OF oDlg PIXEL			//"Rendimento"
		@ 124,060 MSGET oGet03 VAR nRendimento	SIZE 68,08  OF oDlg PIXEL PICTURE cPict2 WHEN .F.

		@ 135,010 SAY OemToAnsi(STR0028)			SIZE 46,08  OF oDlg PIXEL			//"Qtde. Cotas do IR"
		@ 135,060 MSGET oGet04 VAR n183QtdCota	SIZE 68,08  OF oDlg PIXEL PICTURE cPict WHEN .F.

		@ 146,010 SAY OemToAnsi(STR0027)			SIZE 46,08  OF oDlg PIXEL			//"Saldo em cotas"
		@ 146,060 MSGET oGet05 VAR n183SldCota	SIZE 68,08  OF oDlg PIXEL PICTURE cPict WHEN .F.

		If lPanelFin  //Chamado pelo Painel Financeiro
			ACTIVATE MSDIALOG oDlg CENTERED ON INIT FaMyBar(oDlg,;
				{||nOpca:=2,Iif(Fa183Ok(ca183Nat),oDlg:End(),nOpca:=3)},;
				{||oDlg:End()})

		Else
			DEFINE SBUTTON FROM 009,245 TYPE 1 ENABLE ACTION (nOpca:=2,Iif(Fa183Ok(ca183Nat),oDlg:End(),nOpca:=3)) OF oDlg
			DEFINE SBUTTON FROM 023,245 TYPE 2 ENABLE ACTION oDlg:End() OF oDlg

			ACTIVATE MSDIALOG oDlg CENTERED
		Endif

	EndIf

	Do Case
		Case nOpcA == 1
			dbSelectArea(cAlias)
			MsUnlock()
			lContinua := .F.
		Case nOpcA == 2
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Ponto de entrada para gravacao de dados complementares            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			If ExistBlock("FA183EST")
				ExecBlock("FA183EST",.F.,.F.)
			EndIf

			dbSelectArea("SEI")
			dbSetOrder(1)
			dbSeek(xFilial("SEI")+SEH->EH_APLEMP+SEH->EH_NUMERO+SEH->EH_REVISAO)

			While Eof() == .F. .And. SEI->EI_FILIAL == xFilial("SEI")	.And.;
				SEI->EI_APLEMP == SEH->EH_APLEMP							.And.;
				SEI->EI_REVISAO== SEH->EH_REVISAO

				cSequencia := Iif(cSequencia>SEI->EI_SEQ,cSequencia,SEI->EI_SEQ)

				DbSelectArea("SEI")
				DbSkip()
			EndDo

			cSequencia := Soma1(cSequencia,2)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Inicio do bloco protegido via TTS                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			Begin Transaction

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Indica que a movimentacao foi cancelada            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			DbSelectArea("SEI")
			DbGoTo(nRecEst)
			DbSetOrder(1)
			DbSeek(xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ)

			cChave := xFilial("SEI")+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ

			While Eof() == .F. .And. SEI->EI_FILIAL+SEI->EI_APLEMP+SEI->EI_NUMERO+SEI->EI_REVISAO+SEI->EI_SEQ==cChave
				aadd(aMovEst,Array(SEI->(FCount())))

				For nCntFor := 1 To SEI->(FCount())
					aMovEst[Len(aMovEst),nCntFor] := SEI->(FieldGet(nCntFor))
				Next nCntFor

				RecLock("SEI",.F.)
				SEI->EI_STATUS := "C"

				dbSelectArea("SEI")
				dbSkip()
			EndDo

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Lancamento Contabil                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lPadrao
				nHdlPrv := HeadProva( cLote,;
				                      "FINA183",;
				                      substr( cUsuario, 7, 6 ),;
				                      @cArquivo )
			EndIf

			For nCntFor := 1 To Len(aMovEst)
				RecLock("SEI",.T.)

				For nCntFor1 := 1 To Len(aMovEst[nCntFor])
					SEI->(FieldPut(nCntFor1,aMovEst[nCntFor,nCntFor1]))
				Next nCntFor1

				SEI->EI_DTDIGIT	:= dDatabase
				SEI->EI_HISTOR		:= cA183Histor

				If lPadrao .And. nHdlPrv > 0
					//Contabiliza pela variavel VALOR. Nao necessita de controle de flag.
					nTotal += DetProva( nHdlPrv,;
					                    cPadrao,;
					                    "FINA183" /*cPrograma*/,;
					                    cLote,;
					                    /*nLinha*/,;
					                    /*lExecuta*/,;
					                    /*cCriterio*/,;
					                    /*lRateio*/,;
					                    /*cChaveBusca*/,;
					                    /*aCT5*/,;
					                    /*lPosiciona*/,;
					                    @aFlagCTB,;
					                    /*aTabRecOri*/,;
					                    /*aDadosProva*/ )
				EndIf

				SEI->EI_VALOR		*= (-1)
				SEI->EI_LA			:= Iif(lPadrao,"S","")
				SEI->EI_SEQ			:= cSequencia
				SEI->EI_STATUS		:= "C"

				cLctPco    := PcoItLanApr(SEI->EI_APLEMP, SEI->EI_TIPODOC, SEI->EI_MOTBX, .T.)
				If !Empty(cLctPco)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera os lancamentos do SIGAPCO                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					PcoDetLan("000011", cLctPco, "FINA183")
				EndIf

				If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
					aAdd( aFlagCTB, { "EI_LA", "S", "SEI", SEI->( RecNo() ), 0, 0, 0} )
				EndIf
			Next nCntFor

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualizacao da qtde de quotas para retencao do IR  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			RecLock("SEH",.F.)

			SEH->EH_ULTAPR  	:= If(FirstDay(SEH->EH_ULTAPR)<= SEH->EH_DATA,CTOD(""),LastDay(dDataBase-31))
			// Ajusta a data do ultimo recolhimento do IR
			SEH->EH_ULTPGIR	:= LastDay(MsSomaMes(SEH->EH_ULTPGIR,-6))
			SEH->EH_ULTPGIR	:= If(SEH->EH_ULTPGIR < SEH->EH_DATA,CTOD(""),SEH->EH_ULTPGIR)
			SEH->EH_SLDCOTA	+= nQtdCota

			SEH->EH_IOFVIRT	:= 0
			If cTpRenApl4 =="1"
				SEH->EH_SALDO		:= SEH->EH_SALDO - nRendimento + na183VlIRF
				SEH->EH_IRACUM	:=	0
			Else
				SEH->EH_SALDO		:= SEH->EH_SALDO - nRendimento
				SEH->EH_IRACUM	-=	nA183VlIRF
			EndIf
			// No estorno o saldo nao podera ser menor que o valor aplicado originalmente
			If SEH->EH_SALDO < SEH->EH_VALOR
				SEH->EH_SALDO := SEH->EH_VALOR
			Endif

			SEH->EH_DTULTAT   := CTOD("")

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Lancamento Contabil                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lPadrao .And. nHdlPrv > 0
			 	RodaProva(  nHdlPrv,;
			 				nTotal )

				cA100Incl( cArquivo,;
				           nHdlPrv,;
				           3 /*nOpcx*/,;
				           cLote,;
				           .T.,;
				           .F.,;
				           /*cOnLine*/,;
				           /*dData*/,;
				           /*dReproc*/,;
				           @aFlagCTB,;
				           /*aDadosProva*/,;
				           /*aDiario*/ )

				aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
			EndIf

			// Atualiza no SE9 as cotas utilizadas na apropriacao
			DbSelectArea("SE9")
			DbSetOrder(1)
			DbSeek(xFilial()+SEH->EH_CONTRAT+SEH->EH_BCOCONT+SEH->EH_AGECONT)
			RecLock("SE9",.F.)

			SE9->E9_COTAANT := n183VlrQts
			SE9->E9_VLRCOTA := n183VlrQta

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Final  do bloco protegido via TTS                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			End Transaction

			lContinua := .F.
		OtherWise
			lContinua := .F.
	EndCase
EndDo

DbSelectArea("SEH")
MsUnLock()

If lPcoConf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Gera os lancamentos do SIGAPCO  (referente SEH)     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoDetLan("000011","01","FINA183")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza a geraçao de lancamentos do SIGAPCO        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PcoFinLan("000011")

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³Fa183Ok   ³ Autor ³ Jeremias Luna         ³ Data ³ 10.08.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Confirmacao para inicio do processamento                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Fa183OK()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ 1-Codigo da natureza                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA183                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa183Ok(cNatureza, lValNGF)
Local lRetorno := .T.
DEFAULT lValNGF := .F.

If !FinVldNat( .F., cNatureza )
	lRetorno := .F.
Else
	If(!lValNGF)
		lRetorno := if(isBlind(), .T., MsgYesNo(OemToAnsi(STR0037),OemToAnsi(STR0038)) ) //"Confirma a Operacao?"###"Aten‡„o"
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para validacao da Natureza ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("F183VNAT") .and. lRetorno == .T.
	lRetorno := ExecBlock("F183VNAT",.F.,.F.,{cNatureza})
endif

Return(lRetorno)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Fa183VlrCota     ³ Jeremias Luna         ³ Data ³ 10.08.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Recalculo do valor do Ir a ser retido                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Fa183VlrCota()                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nExpN1 - Valor do IR a ser retido                          ³±±
±±³          ³ nExpN2 - Valor anterior da Quota                           ³±±
±±³          ³ nExpN3 - Valor atual da Quota                              ³±±
±±³          ³ nExpL1 - Flag para atualizacao dos objetos                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA183                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa183VlrCota(na183VlIrf,nVlAnt,nVlAtu,oDlg,lDeduzIR)

Local nTaxaIrf		:= TaxaIRAp(lDeduzIR)
Local nTxAux		:= 0

// Ponto de Entrada para alteração da nTaxaIrf
If ExistBlock("F183TXIR")

	nTxAux	:= ExecBlock( "F183TXIR", .F., .F., { nTaxaIrf } )

	If ValType(nTxAux) == "N"
		nTaxaIrf := If(nTxAux >= 0 , nTxAux, nTaxaIrf )
		nTxAux	:= 0
	EndIf
EndIf

nVlAnt		:= Iif(nVlAnt==Nil,0,nVlAnt)
nVlAtu		:= Iif(nVlAtu==Nil,0,nVlAtu)

aa183Calc := Fa171Calc(dDataBase,SEH->EH_SLDCOTA,,,,Iif(nVlAnt == 0 , SEH->EH_VLRCOTA,nVlAnt),nVlAtu,(SEH->EH_SLDCOTA * nVlAtu),,lDeduzIR,nTaxaIrf)
na183VlAtu := aa183Calc[1]
na183VlResg:= na183VlAtu

na183VlIrf		:= aa183Calc[2]
nA183VlIOF		:= aa183Calc[3]
nA183VlTaxa		:= aa183Calc[4]
nA183RegJur		:= aa183Calc[5]
nRendimento    := aa183Calc[7]
nA183IRRdBruto	:= aa183Calc[2]
nA183VlLiquido	:= aa183Calc[9]
na183BaseCalc	:= aa183Calc[11]
nA183RegPri		:= nA183VlResg-nA183RegJur+nA183VlSwap
nA183VlCrd	   := nA183VlResg-nA183VlIrf-nA183IrSwap-nA183VlIof-nA183VlTaxa+nA183VlSwap

n183QtdCota 	:= If(lDeduzIR, ( ( nA183IRRdBruto + getSumImp('I6') ) / nVlAtu ), 0 )
n183SldCota 	:= SEH->EH_SLDCOTA-n183QtdCota
na183AtuIr 		:= n183SldCota*nVlAtu

na183VlSwap	:= 0.00
na183IRSwap	:= 0.00
na183VlTaxa	:= aa183Calc[4]
na183RegPri	:= SEH->EH_SALDO
na183RegJur	:= na183VlAtu-SEH->EH_SALDO
na183SldPri	:= 0.00
na183SldJur	:= 0.00
na183Saldo	:= na183SldPri-na183SldJur
na183VlCrd	:= na183VlResg-na183VlIrf-na183IrSwap-na183VlTaxa+na183VlSwap
na183CrdAnt	:= na183VlCrd

// Atualiza os objetos da tela
If oDlg != Nil
	aEval(oDlg:aControls, { |e| If(ValType(e) == "O", e:Refresh(), Nil)})
EndIf
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³PcoItLanApr ºAutor  ³Paulo Carnelossi  º Data ³  10/11/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³retornar o item de lancamento do processo PCO  000011 -     º±±
±±º          ³APROPRIACAO APLICACAO POR COTAS para ser utilizado na funcao   º±±
±±º          ³PcoDetLan                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function PcoItLanApr(cAplEmp, cTipoDoc, cNorApr, lCancela)
Local cItLctoPco := "", nElemLct, nPos
DEFAULT lCancela := .F.

If lCancela   //cancelamento
	nElemLct := 05
Else		//lancto normal inclusao
	nElemLct := 04
EndIf

If Len(aIt_TpDct)==0  //se o array nao estiver preenchido popula
	/*estrutura do array aIt_TpDct
	Coluna 1 - APL (APLICACAO) EMP (EMPRESTIMO
	Coluna 2 - EI_TIPODOC (TIPO DO DOCUMENTO)
	Coluna 3 - EI_MOTBX (NORMAL/APROPRIACAO)
	Coluna 4 - Item do Lancamento modulo PCO INCLUSAO - 000011-APROPR APLIC P/COTAS
	Coluna 5 - Item do Lancamento modulo PCO CANCELTO - 000011-APROPR APLIC P/COTAS
	Coluna 6 - Descritivo do Item
	*/
	//APLICACAO
	aAdd(aIt_TpDct,	{"APL","I6","APR","02","04","Valor do IR (inclusao)"			 })
	aAdd(aIt_TpDct,	{"APL","I7","APR","03","05","Valor do Rendimento na Retencao IR" })
EndIf

If (nPos := Ascan(aIt_TpDct,{|aVal| 	aVal[1] == cAplEmp .And. ;
										aVal[2] == cTipoDoc .And. ;
										aVal[3] == cNorApr 			} )) > 0
	cItLctoPco := aIt_TpDct[nPos, nElemLct]
EndIf

Return(cItLctoPco)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FA183Legend³ Autor ³ Marcelo Celi Marques ³ Data ³ 08.05.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria uma janela contendo a legenda da mBrowse              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA183                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FA183Legend(nReg)
Local uRetorno := .T.
Local aLegenda := {{"ENABLE"	, 	STR0045	},;	//"Com Saldo"
				   	{"DISABLE"	, 	STR0046	}}		//"Sem Saldo"


If nReg = Nil	// Chamada direta da funcao onde nao passa, via menu Recno eh passado
	uRetorno := {}
	Aadd(uRetorno, {"EH_SALDO > 0", aLegenda[1][1]}) // Com Saldo
	Aadd(uRetorno, {"EH_SALDO <= 0",aLegenda[2][1]}) // Sem Saldo
Else
	BrwLegenda(cCadastro,STR0047,aLegenda)
Endif

Return uRetorno

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Ana Paula N. Silva     ³ Data ³23/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados     ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
Local aRotina :={{OemToAnsi(STR0001),"AxPesqui"  , 0 , 1},;  // "Pesquisar"
					{OemToAnsi(STR0002),"AxVisual"  , 0 , 2},;  // "Visualizar"
					{OemToAnsi(STR0003),"a183Reter" , 0 , 4},;  // "Apropriar"
					{OemToAnsi(STR0004),"a183Estor" , 0 , 5} }  // "Estorno"
Return(aRotina)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinA183T   ³ Autor ³ Marcelo Celi Marques ³ Data ³ 08.05.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada semi-automatica utilizado pelo gestor financeiro   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA183                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA183T(aParam)
	cRotinaExec := "FINA183"
	ReCreateBrow("SEH",FinWindow)
	FinA183(aParam[1])
	ReCreateBrow("SEH",FinWindow)
	dbSelectArea("SEH")

	INCLUI := .F.
	ALTERA := .F.

Return .T.


//------------------------------------------------------------------------------
/*/	{Protheus.doc} TaxaIRAp()
Retorna a Taxa de IR para Apropriação por cotas
SEH deve posicionada

@param lComeCotas - Mês do come-cotas?


@return nTaxaIrf - Taxa de IR para apropriação por cotas

@author	rafael rondon
@since 08/07/2020
@version	12.1.30
/*/
//------------------------------------------------------------------------------
Static Function TaxaIRAp( lComeCotas As Logical  ) As Numeric

Local nTaxaIrf	As Numeric
Local nDiasApl	AS Numeric

Default lComeCotas		:= (StrZero(Month(dDataBase),2) $ SuperGetMv("MV_10892",,"05#11")) // Meses do come cotas

nTaxaIrf	:= 0
nDiasApl	:= dDataBase - SEH->EH_DATA

If lComeCotas
	/*
		No mês do come-cotas considera-se alíquota:
		Fundos de curto prazo = 20%	(FIC)
		Fundos de longo prazo = 15% (FAF)
	*/
	If AllTrim(SEH->EH_TIPO) == "FIC" // Curto prazo
		nTaxaIrf := 20
	Else
		nTaxaIrf := 15
	EndIf
Else
	If SuperGetMv("MV_APIRTAB",,.F.) // Define alíquota de IR para os meses não come-cotas, .T. - será considerada tabela regressiva de IR; .F. - 15% / 20%
		/*
			Meses que não são come-cotas considera a tabela regressiva de IR
		*/
		If AllTrim(SEH->EH_TIPO) == "FIC"
			nTaxaIrf := IRCurtoPrazo( nDiasApl )
		Else
			nTaxaIrf := Val(TabelaIrf( "AR" , nDiasApl ) )
		EndIf
	Else
		/*
			Entendimento em 14/07/2020 é que com o parâmetro MV_APIRTAB = .T. acima é o correto, porém foi parametrizado para quem operava com 15%.
		*/
		If AllTrim(SEH->EH_TIPO) == "FIC" // Curto prazo
			nTaxaIrf := 20
		Else
			nTaxaIrf := 15
		EndIf
	EndIf
EndIf

Return nTaxaIrf

//------------------------------------------------------------------------------
/*/	{Protheus.doc} getSumImp()
Soma o valor de determinado imposto nos últimos seis meses de apropriação.
Criado para cálculo do come cotas em ambientes parametrizados com apropriação mensal.
Considera SEH posicionada.

@param Imposto a ser somado. Padrão "I6" (Imposto de renda retido na fonte)

@return Soma do imposto recebido como parâmetro nas seis últimas apropriações. Se o
ambiente não está parametrizado com apropriação mensal retorna zero.

@author	guilherme.sordi@totvs.com.br
@since 29/03/2022
@version 12.1.33
/*/
//------------------------------------------------------------------------------
static function getSumImp(cImp as character)
	local nSumImp as numeric
	local cAlias as character
	local cQuery as character
	local nMonths as numeric
	local dStart as date
	local dEnd as date

	default cImp := "I6"

	if __cTpRenApl4 != "2"
		return 0
	endIf

	nMonths := 6 //Soma os seis últimos meses. Exemplo: Apropriação 30/11/2021 - Soma imp. calculados nas apropriações de junho a outubro (e novembro se existisse, mas normalmente não será o caso)
	dEnd := ddatabase
	dStart := FirstDate(monthSub(dEnd, nMonths-1))

	if __oStSumImp == NIL
		cQuery := "SELECT COALESCE(SUM(EI_VALOR),0) SUMIMP "
		cQuery += "FROM "+ retSQLName("SEI") +" SEI "
		cQuery += "WHERE SEI.D_E_L_E_T_ = ' ' "
		cQuery += "AND EI_FILIAL = ? "
		cQuery += "AND EI_TIPODOC = ? "
		cQuery += "AND EI_MOTBX = 'APR' "
		cQuery += "AND EI_STATUS <> 'C' "
		cQuery += "AND EI_DATA BETWEEN ? AND ? "
		cQuery += "AND EI_NUMERO = ? "
		__oStSumImp := FWPreparedStatement():new(cQuery)
	endIf
	__oStSumImp:setString(1, xFilial("SEI"))
	__oStSumImp:setString(2, cImp)
	__oStSumImp:setDate(3, dStart)
	__oStSumImp:setDate(4, dEnd)
	__oStSumImp:setString(5, SEH->EH_NUMERO)
	cAlias := MpSysOpenQuery(__oStSumImp:getFixQuery())

	if !(cAlias)->(BOF()) .and. !(cAlias)->(EOF())
		nSumImp := (cAlias)->SUMIMP
	endIf

	(cAlias)->(DBCloseArea())
return nSumImp

/*/{Protheus.doc} posSEH
	Posiciona a tabela SEH no registro encaminhado pelo execauto
	@type  Function
	@author user
	@since 07/04/2022
	@version version
	@param aRotAuto, Array, array com os campos da SEH para posicionar
/*/
Function posSEH(aRotAuto as Array)
	Local nPos    as Numeric
	Local cFilSEH as Character
	Local cNumSEH as Character
	Local cRevSEH as Character

	nPos    := 0
	cFilSEH := ""
	cNumSEH := ""
	cRevSEH := ""

	nPos := Ascan(aRotAuto, {|e| AllTrim(e[1]) == "EH_FILIAL"})
	If nPos > 0
		cFilSEH := aRotAuto[nPos,2]
	EndIf
	nPos := Ascan(aRotAuto, {|e| AllTrim(e[1]) == "EH_NUMERO"})
	If nPos > 0
		cNumSEH := aRotAuto[nPos,2]
	EndIf
	nPos := Ascan(aRotAuto, {|e| AllTrim(e[1]) == "EH_REVISAO"})
	If nPos > 0
		cRevSEH := aRotAuto[nPos,2]
	EndIf

	If !Empty(cNumSEH) .And. !Empty(cRevSEH)
		DbSelectArea("SEH")
		DbSetOrder(1)
		SEH->(DbSeek(cFilSEH + cNumSEH + cRevSEH))
	EndIf
Return

/*/{Protheus.doc} F183Calc
	Retorna os valores de tela para uso no NGF
	@type  Function
	@author renato.ito
	@since 07/04/2022
	@param aRotAuto, Array, array com as variáveis
/*/
Function F183Calc(aRotAuto as Array)
	FINA183(3, aRotAuto)
Return _aRetAuto

/*/{Protheus.doc} F183CalAlt
	Atualiza os valores quando alterados pelo NGF
	@type  Function
	@author renato.ito
	@since 07/04/2022
	@param aRotAuto, Array, array com as variáveis atualizadas
/*/
Function F183CalAlt(aRotAuto as Array)
	FINA183(3, aRotAuto)
Return _aRetAuto

/*/{Protheus.doc} F183GetEst
	Retorna os valores do estorno de tela para uso no NGF
	@type  Function
	@author renato.ito
	@since 07/04/2022
	@param aRotAuto, Array, array com as variáveis
/*/
Function F183GetEst(aRotAuto as Array)
	FINA183(4, aRotAuto)
Return _aRetAuto

