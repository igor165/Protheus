#INCLUDE "APWEBSRV.CH"
#INCLUDE "PROTHEUS.CH"
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³WSCTB100  ³ Autor ³Eduardo Riera          ³ Data ³24.06.2004  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Web Service da funcionalidade de lancamentos contabeis       ³±±
±±³          ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Atualizacoes sofridas desde a Construcao Inicial.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Programador  ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSSTRUCT AccountingEntryView
	WSDATA EntryDate           As Date     //Data
	WSDATA LotNumber           As String   //Lote
	WSDATA SubLot              As String   //Sub-Lote
	WSDATA DocumentNumber      As String   //Documento
	WSDATA EntryRow            As Array Of AccountingEntryRowView OPTIONAL
ENDWSSTRUCT

WSSTRUCT AccountingEntryRowView
	WSDATA RowNumber           As String   //Linha
	WSDATA Currency            As String   //Moeda
	WSDATA EntryType           As String   //Tipo de Lançamento
	WSDATA DebitAccounting     As String   OPTIONAL //Conta a Debito
	WSDATA CreditAccounting    As String   OPTIONAL //Conta a Credito
	WSDATA StandardHistory     As String   OPTIONAL //Historico Padrão
	WSDATA History             As String   OPTIONAL //Historico
	WSDATA DebitCostCenter     As String   OPTIONAL //Centro de custo a Debito
	WSDATA CreditCostCenter    As String   OPTIONAL //Centro de custo a Credito
	WSDATA DebitItem           As String   OPTIONAL //Item a Debito
	WSDATA CreditItem          As String   OPTIONAL //Item a Credito
	WSDATA DebitValueCategory  As String   OPTIONAL //Classe de valor a Debito
	WSDATA CreditValueCategory As String   OPTIONAL //Classe de valor a credito
	WSDATA DebitActivity       As String   OPTIONAL //Atividade a Debito
	WSDATA CreditActivity      As String   OPTIONAL //Atividade a Credito
	WSDATA BalanceType         As String   //Tipo de Saldo
	WSDATA Origin              As String   OPTIONAL //Origem 
	WSDATA StandardEntry       As String   OPTIONAL //Lançamento Padrão
	WSDATA EntryConversion     As Array Of AccountingEntryValueView OPTIONAL 
	WSDATA UserFields          As Array Of UserField OPTIONAL
ENDWSSTRUCT

WSSTRUCT AccountingEntryValueView
	WSDATA ConversionDate      As Date     OPTIONAL //Data de conversão
	WSDATA RateValue           As Float    OPTIONAL //Taxa de conversão
	WSDATA Criterion           As String   OPTIONAL //Criterio de conversão
	WSDATA EntryValue          As Float	   //Valor do lançamento
ENDWSSTRUCT
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definicao do Web Service de Controle do Usuario                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
WSSERVICE CTBAccountingEntry DESCRIPTION "Serviço de consulta e atualização dos lançamentos contabéis." NAMESPACE "http://webservices.microsiga.com.br/ctbaccountingentry.apw"
   WSDATA UserCode                 As String
   WSDATA Header                   As Array Of BrwHeader
   WSDATA HeaderType               As String
   WSDATA QueryAddWhere            As String OPTIONAL
   WSDATA IndexKey                 As String OPTIONAL
   
   WSDATA ListOfEntry              As Array Of AccountingEntryView OPTIONAL
   WSDATA EntryDateFrom            As Date     //Data Inicial
   WSDATA EntryDateTo              As Date     //Data Final
   WSDATA LotNumberFrom            As String   //Lote Inicial
   WSDATA LotNumberTo              As String   //Lote Final
   WSDATA SubLotFrom               As String   //Sub-Lote Inicial
   WSDATA SubLotTo                 As String   //Sub-Lote Final
   WSDATA DocumentFrom             As String   //Documento Inicial
   WSDATA DocumentTo               As String   //Documento Final
 	
   WSDATA AccountingEntry          As AccountingEntryView
   WSDATA EntryDate                As Date     //Data do lancamento
   WSDATA LotNumber                As String   //Lote do lancamento
   WSDATA SubLot                   As String   //Sub-Lote do lancamento
   WSDATA Document                 As String   //Documento do lancamento
   WSDATA EntryRow                 As String   OPTIONAL //Linha do lancamento contabil

   WSMETHOD GetHeader		DESCRIPTION "Método que descreve as estruturas de retorno do Serviço"
   WSMETHOD BrwEntry        DESCRIPTION "Método de listagem dos lançamentos contabéis"
   WSMETHOD GetEntry        DESCRIPTION "Método de consulta aos laçamento contabil"
//   WSMETHOD PutEntry        DESCRIPTION "Método de autalização dos laçamentos contabéis"
ENDWSSERVICE

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetHeader ³Autor  ³ Eduardo Riera         ³ Data ³24.06.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Método de recuperacao do header dos lançamentos contabeis.   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Nome da Estrutura                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o Método foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este Método devolve o header de uma estrutura                ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetHeader WSRECEIVE HeaderType WSSEND Header WSSERVICE CTBAccountingEntry

::Header := FinHeader(::HeaderType)

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³BrwEntry  ³Autor  ³ Eduardo Riera         ³ Data ³25.06.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Método de listagem dos lancamentos contabeis                 ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Nome da Estrutura                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o Método foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este Método devolve o header de uma estrutura                ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD BrwEntry WSRECEIVE UserCode,EntryDateFrom,EntryDateTo,LotNumberFrom,LotNumberTo,SubLotFrom,SubLotTo,DocumentFrom,DocumentTo,QueryAddWhere,IndexKey WSSEND ListOfEntry WSSERVICE CTBAccountingEntry

Local aArea    := GetArea()
Local lRetorno := .T.
Local cAliasCT2:= "CT2"
Local nX       := 0
Local cQuery   := ""
Local aStruCT2 := CT2->(dbStruct())


If PrtChkUser(::UserCode,"CTBAccountingEntry","BrwEntry")
	dbSelectArea("CT2")
	dbSetOrder(1)
	::IndexKey := IIf(Empty(::IndexKey),CT2->(IndexKey()),::IndexKey)
	cAliasCT2 := "BrwEntry"
	
	cQuery := "SELECT DISTINCT CT2_FILIAL,CT2_DATA,CT2_LOTE,CT2_SBLOTE,CT2_DOC "
	cQuery += "FROM "+RetSqlName("CT2")+" CT2 "
	cQuery += "WHERE CT2.CT2_FILIAL = '"+xFilial("CT2")+"' AND "
	cQuery += "CT2.CT2_DATA >= '"+Dtos(::EntryDateFrom)+"' AND "
	cQuery += "CT2.CT2_DATA <= '"+Dtos(::EntryDateTo)+"' AND "
	cQuery += "CT2.CT2_LOTE >= '"+::LotNumberFrom+"' AND "
	cQuery += "CT2.CT2_LOTE <= '"+::LotNumberTo+"' AND "
	cQuery += "CT2.CT2_SBLOTE >= '"+::SubLotFrom+"' AND "
	cQuery += "CT2.CT2_SBLOTE <= '"+::SubLotTo+"' AND "
	cQuery += "CT2.CT2_DOC >= '"+::DocumentFrom+"' AND "
	cQuery += "CT2.CT2_DOC <= '"+::DocumentTo+"' AND "
	cQuery += "CT2.D_E_L_E_T_=' ' "
	
	cQuery := WsQueryAdd(cQuery,::QueryAddWhere)

	cQuery += "ORDER BY CT2_FILIAL,CT2_DATA,CT2_LOTE,CT2_SBLOTE,CT2_DOC "

	cQuery := ChangeQuery(cQuery)
	
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasCT2)
	
	For nX := 1 To Len(aStruCT2)
		If aStruCT2[nX][2]<>"C" .And. FieldPos(aStruCT2[nX][1])<>0
			TcSetField(cAliasCT2,aStruCT2[nX][1],aStruCT2[nX][2],aStruCT2[nX][3],aStruCT2[nX][4])
		EndIf
	Next nX	
	nX := 0
	dbSelectArea(cAliasCT2)
	dbGotop()	
	While !Eof() .And. (cAliasCT2)->CT2_FILIAL == xFilial("CT2")
		
		If nX == 0
			::ListOfEntry := {}
		EndIf
		If aScan(::ListOfEntry,{|x| x:EntryDate == (cAliasCT2)->CT2_DATA .And.;
			x:LotNumber == (cAliasCT2)->CT2_LOTE .And.;
			x:SubLot == (cAliasCT2)->CT2_SBLOTE .And.;
			x:DocumentNumber == (cAliasCT2)->CT2_DOC}) == 0
			
			aadd(::ListOfEntry,WSClassNew("AccountingEntryView"))
			nX++
			GetEntry(@::ListOfEntry[nX],cAliasCT2,.T.)
		EndIf

		dbSelectArea(cAliasCT2)
		dbSkip()			
	EndDo
	dbSelectArea(cAliasCT2)
	dbCloseArea()
	dbSelectArea("CT2")
Else
	lRetorno := .F.
EndIf

RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetEntry  ³Autor  ³ Eduardo Riera         ³ Data ³25.06.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Método de consulta ao documento contabil                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Nome da Estrutura                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica que o Método foi avaliado com sucesso          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Este Método devolve um documento contabil com todas as suas  ³±±
±±³          ³linhas                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
WSMETHOD GetEntry WSRECEIVE UserCode,EntryDate,LotNumber,SubLot,Document,EntryRow WSSEND AccountingEntry WSSERVICE CTBAccountingEntry

Local aArea    := GetArea()
Local lRetorno := .T.
Local cAliasCT2:= "CT2"
Local aStruCT2 := CT2->(dbStruct())
Local nX       := 0
Local cQuery   := ""	


If PrtChkUser(::UserCode,"CTBAccountingEntry","BrwEntry")
	dbSelectArea("CT2")
	dbSetOrder(1)
	cAliasCT2 := "GetEntry"
	
	cQuery := "SELECT * "
	cQuery += "FROM "+RetSqlName("CT2")+" CT2 "
	cQuery += "WHERE CT2.CT2_FILIAL = '"+xFilial("CT2")+"' AND "
	cQuery += "CT2.CT2_DATA = '"+Dtos(::EntryDate)+"' AND "
	cQuery += "CT2.CT2_LOTE = '"+::LotNumber+"' AND "
	cQuery += "CT2.CT2_SBLOTE = '"+::SubLot+"' AND "
	cQuery += "CT2.CT2_DOC = '"+::Document+"' AND "
	If !Empty(::EntryRow)
		cQuery += "CT2.CT2_LINHA = '"+::EntryRow+"' AND "
	EndIf
	cQuery += "CT2.CT2_DOC = '"+::Document+"' AND "
	cQuery += "CT2.D_E_L_E_T_=' ' "
	
	cQuery += "ORDER BY "+WsSqlOrder(CT2->(IndexKey()))

	cQuery := ChangeQuery(cQuery)
	
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasCT2)
	
	For nX := 1 To Len(aStruCT2)
		If aStruCT2[nX][2]<>"C" .And. FieldPos(aStruCT2[nX][1])<>0
			TcSetField(cAliasCT2,aStruCT2[nX][1],aStruCT2[nX][2],aStruCT2[nX][3],aStruCT2[nX][4])
		EndIf
	Next nX	

	dbSelectArea(cAliasCT2)
	While !Eof() .And. (cAliasCT2)->CT2_FILIAL == xFilial("CT2") .And.;
		(cAliasCT2)->CT2_DATA == ::EntryDate .And.;
		(cAliasCT2)->CT2_LOTE == ::LotNumber .And.;
		(cAliasCT2)->CT2_SBLOTE == ::SubLot .And.;
		(cAliasCT2)->CT2_DOC == ::Document 
		
		GetEntry(@::AccountingEntry,cAliasCT2,.T.)
		nX := 0					
		While !Eof() .And. (cAliasCT2)->CT2_FILIAL == xFilial("CT2") .And.;
			(cAliasCT2)->CT2_DATA == ::EntryDate .And.;
			(cAliasCT2)->CT2_LOTE == ::LotNumber .And.;
			(cAliasCT2)->CT2_SBLOTE == ::SubLot .And.;
			(cAliasCT2)->CT2_DOC == ::Document .And.;
			(Empty(::EntryRow) .Or. (cAliasCT2)->CT2_LINHA == ::EntryRow)
			
			If nX == 0
				::AccountingEntry:EntryRow := {}
			EndIf
			aadd(::AccountingEntry:EntryRow,WSClassNew("AccountingEntryRowView"))
			nX++
			GetEntry(@::AccountingEntry:EntryRow[nX],cAliasCT2,.F.)
		EndDo
	EndDo

	dbSelectArea(cAliasCT2)
	dbCloseArea()
	dbSelectArea("CT2")

	If Empty(::AccountingEntry:DOCUMENTNUMBER)
		lRetorno := .F.
		SetSoapFault("GetEntry","Não foi encontrado nenhum lançamento contabil")
	EndIf
Else
	lRetorno := .F.
EndIf

RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetEntry  ³Autor  ³ Eduardo Riera         ³ Data ³25.06.2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Montagem do Lote do lancamento contabil                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto do Lote contabil                               ³±±
±±³          ³ExpC2: Alias do CT2                                          ³±±
±±³          ³ExpL3: Indica se é um objeto de cabecalho ou item            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta funcao atualiza a estrutura do lancamento contabil      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GetEntry(oObjeto,cAliasCT2,lCab)

DEFAULT lCab := .F.

If lCab
	oObjeto:EntryDate             := (cAliasCT2)->CT2_DATA
	oObjeto:LotNumber             := (cAliasCT2)->CT2_LOTE
	oObjeto:SubLot                := (cAliasCT2)->CT2_SBLOTE
	oObjeto:DocumentNumber        := (cAliasCT2)->CT2_DOC
Else
	oObjeto:RowNumber             := (cAliasCT2)->CT2_LINHA
	oObjeto:Currency              := (cAliasCT2)->CT2_MOEDLC
	oObjeto:EntryType             := (cAliasCT2)->CT2_DC
	oObjeto:DebitAccounting       := (cAliasCT2)->CT2_DEBITO
	oObjeto:CreditAccounting      := (cAliasCT2)->CT2_CREDIT
	oObjeto:StandardHistory       := (cAliasCT2)->CT2_HP
	oObjeto:History               := (cAliasCT2)->CT2_HIST
	oObjeto:DebitCostCenter       := (cAliasCT2)->CT2_CCD
	oObjeto:CreditCostCenter      := (cAliasCT2)->CT2_CCC
	oObjeto:DebitItem             := (cAliasCT2)->CT2_ITEMD
	oObjeto:CreditItem            := (cAliasCT2)->CT2_ITEMC
	oObjeto:DebitValueCategory    := (cAliasCT2)->CT2_CLVLDB
	oObjeto:CreditValueCategory   := (cAliasCT2)->CT2_CLVLCR
	oObjeto:DebitActivity         := (cAliasCT2)->CT2_ATIVDE
	oObjeto:CreditActivity        := (cAliasCT2)->CT2_ATIVCR
	oObjeto:BalanceType           := (cAliasCT2)->CT2_TPSALD
	oObjeto:Origin                := (cAliasCT2)->CT2_ORIGEM
	oObjeto:StandardEntry         := (cAliasCT2)->CT2_LP
	UserFields("CT2",@oObjeto:UserFields,cAliasCT2)

	nX := 0	
	dbSelectArea(cAliasCT2)
	While !Eof() .And. (cAliasCT2)->CT2_FILIAL == xFilial("CT2") .And.;
		(cAliasCT2)->CT2_DATA == ::EntryDate .And.;
		(cAliasCT2)->CT2_LOTE == ::LotNumber .And.;
		(cAliasCT2)->CT2_SBLOTE == ::SubLot .And.;
		(cAliasCT2)->CT2_DOC == ::Document .And.;
		(cAliasCT2)->CT2_LINHA == ::EntryRow

		If nX == 0
			oObjeto:EntryConversion := {}
		EndIf
		aadd(oObjeto:EntryConversion,WSClassNew("AccountingEntryValueView"))
		nX++
		oObjeto:EntryConversion[nX]:ConversionDate := (cAliasCT2)->CT2_DATATX
		oObjeto:EntryConversion[nX]:RateValue      := (cAliasCT2)->CT2_TAXA
		oObjeto:EntryConversion[nX]:Criterion      := (cAliasCT2)->CT2_CRCONV
		oObjeto:EntryConversion[nX]:EntryValue     := (cAliasCT2)->CT2_VALOR

		dbSelectArea(cAliasCT2)
		dbSkip()
	EndDo
EndIf
Return(.T.)