#INCLUDE "FINA560.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWMVCDEF.CH"

STATIC nTamCaso := NIL 

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё FINA560  Ё Autor Ё Leonardo Ruben        Ё Data Ё 14.06.00 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de Ingresso de Comprovantes do Caixinha           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe	 Ё FINA560()												  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё SIGAFIN													  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function FINA560(nPosArotina,aRotAuto,nOpcAuto,aDetails)

Local lCXJurFin := FVldJurxFin()
Local aCores    := {}
LOCAL cFilSEU  			//Expressao de filtro da mBrowse

Private aAutoCab 	:= aRotAuto
Private aAutoItens	:= aDetails
Private aValidGet	:= {}
Private lF560Auto 	:= ( aRotAuto <> NIL )
Private nValorPrest := 0
Private aDiario     := {}
Private cCodDiario  := ""
Private lIntUMovMe	:= .F.

If cPaisloc<>"BRA"
	aCores    := {{ 'EU_TIPO="00" .AND. Empty(EU_BAIXA) .AND. Empty(EU_NROADIA)'	, 'ENABLE' },; // Despesas nao baixadas
	{  'EU_TIPO="00" .AND. Empty(EU_BAIXA) ', 'BR_AZUL'},;		// Despesas de adiantamento nao baixadas
	{  'EU_TIPO="01" .AND. EU_SLDADIA>0'   	, 'BR_AMARELO'},;	// Adiantamento com saldo (em aberto)
	{  'EU_TIPO="03"       '	, 'BR_MARRON'},;    // Complemento de adiantamento
	{  '!Empty(EU_BAIXA)' 					, 'DISABLE'} }	// despesas baixadas e outros movimentos
Else
	aCores    := {{  'EU_TIPO="00" .AND. Empty(EU_BAIXA) ', 'BR_AZUL'},;		// Despesas de adiantamento nao baixadas
	{  'EU_TIPO="01" .AND. EU_SLDADIA>0'   	, 'BR_AMARELO'},;	// Adiantamento com saldo (em aberto)
	{  'EU_TIPO="03"       '	, 'BR_MARRON'},;    			// Complemento de adiantamento
	{  '!Empty(EU_BAIXA)' 					, 'DISABLE'},;      // despesas baixadas e outros movimentos
	{  '(!Empty(EU_CODAPRO) .And. EU_STATUS $ "01|02")'	, 'BR_PINK'},;		// "Movimento aguardando aprovaГЦo"
	{  '(!Empty(EU_CODAPRO) .And. EU_STATUS == "04") '	, 'BR_PRETO'}}	    // "Movimento bloqueado"
	lIntUMovMe := .T.
Endif


//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Mostra/Altera lancamentos contabeis mv_par01 Sim/Nao         Ё
//Ё Aglutina lancamentos contabeis      mv_par02 Sim/Nao         Ё
//Ё Lancamento contabil On-Line         mv_par03 Sim/Nao         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Carrega funcao Pergunte	                                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
SetKey (VK_F12,{|a,b| AcessaPerg("FIA550",.T.)})

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada F560PRG              							Ё
//Ё Ponto de entrada para inibir o F12 para determinados usuarios   Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("F560PRG")
	ExecBlock("F560PRG",.F.,.F.)
Endif

Pergunte("FIA550",.F.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define Array contendo as Rotinas a executar do programa      Ё
//Ё ----------- Elementos contidos por dimensao ------------     Ё
//Ё 1. Nome a aparecer no cabecalho                              Ё
//Ё 2. Nome da Rotina associada                                  Ё
//Ё 3. Usado pela rotina                                         Ё
//Ё 4. Tipo de Transa┤└o a ser efetuada                          Ё
//Ё    1 - Pesquisa e Posiciona em um Banco de Dados             Ё
//Ё    2 - Simplesmente Mostra os Campos                         Ё
//Ё    3 - Inclui registros no Bancos de Dados                   Ё
//Ё    4 - Altera o registro corrente                            Ё
//Ё    5 - Remove o registro corrente do Banco de Dados          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

Private aRotina := MenuDef()
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define o cabecalho da tela de atualizacoes                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE cCadastro :=OemtoAnsi(STR0011 )  //"Movimento de Caixinhas"

dbSelectArea("SEU")
dbSetOrder(1)

If ExistBlock("FA550VERIF",.T.) .And. Fa550Verif()
	aRotina:=Asize(aRotina,Len(aRotina)+1)
	aRotina:=Ains(aRotina,5)
	aRotina[5]:={"Reposicion", "FA560Rep",0,4}
	Aadd(aCores,{'EU_TIPO="91"'	, 'BR_CINZA'})	 	// Reposicao: aguardando liberacao
	Aadd(aCores,{'EU_TIPO="92"'	, 'BR_PINK'})		// Reposicao: aguardando compensacao do cheque
	Aadd(aCores,{'EU_TIPO="90"'	, 'BR_PRETO'})		// Reposicao cancelada
Endif


//Arquivo de rateios juridicos de despesas do caixinha
If lCXJurFin
	dbSelectArea("FJ4")
	dbSetOrder(1)
Endif


//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica a existencia de Filtros na mBrowse                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("FT560FIL")
	cFilSEU := ExecBlock("FT560FIL",.f.,.f.)
	If !Empty(cFilSEU)
		dbSetFilter( { || &cFilSEU}, cFilSEU )
	Endif
Endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Endereca a funcao de BROWSE                                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
DEFAULT nPosArotina := 0
If nPosArotina > 0 // Sera executada uma opcao diretamento de aRotina, sem passar pela mBrowse
	dbSelectArea("SEU")
	bBlock := &( "{ |a,b,c,d,e| " + aRotina[ nPosArotina,2 ] + "(a,b,c,d,e) }" )
	Eval( bBlock, Alias(), (Alias())->(Recno()),nPosArotina)
ElseIf lF560Auto
	Default nOpcAuto := 3
	Do Case
		Case nOpcAuto == 3
			FA560Inclui("SEU",Recno(),nOpcAuto)
		Case nOpcAuto == 4
			FA560Adian("SEU",Recno())
		Case nOpcAuto == 5
			FA560Deleta("SEU",Recno(),nOpcAuto)
	EndCase
Else
	DbSelectArea("SEU")
	DbSetOrder(1)
	DbSeek(xFilial())
	mBrowse( 6, 1,22,75,"SEU",,,,,,FA560Legend())
Endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Finaliza o uso da funcao FilBrowse e retorna os indices padroes.       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !Empty(cFilSEU)
	dbClearFilter()
	RetIndex("SEU")
EndIf

Set Key VK_F12 To
Return

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560IncluiЁ AutorЁ Leonardo Ruben        Ё Data Ё 13.06.00 Ё╠╠
╠╠цддддддддддедддддддддддаддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁInclusao de Comprovantes do Caixinha                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe e ЁFA560Inclui()                                               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo									  Ё╠╠
╠╠Ё			 Ё ExpN1 = Nёmero do registro 								  Ё╠╠
╠╠Ё			 Ё ExpN2 = Nёmero da op┤└o selecionada 						  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FINA560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Fa560Inclui(cAlias,nReg,nOpc,cFilOri,cViagem)
Local lPanelFin		:= IsPanelFin()
Local aArea			:= GetArea()
Local nOpcA			:= 0
Local nCntFor		:= 0
Local aPosEnch		:= {}
Local aVisual		:= {}
Local nRecSEU		:= 0
Local nSaveSx8		:= GetSx8Len()
Local cCpoSEU		:= ""
Local lFa550IncI	:= ExistBlock("FA550INI")
Local lFa550IncF	:= ExistBlock("FA550INF")
Local lResp			:= .T.
Local aSize			:= {}
Local aObjects		:= {}
Local aInfo			:= {}
Local aPosObj		:= {}
Local aCposUMov		:= {}
Local nT			:= 0

// Variaveis para IntegraГЦo SIGATMS x SIGAMNT
Local lCXJurFin		:= FVldJurxFin()

Private aFolTms     := {}
Private aFolTmsBkp  := {}
Private lIntUMovMe	:= Iif(Type("lIntUMovMe") == "U" .And. nModulo == 43, .T., lIntUMovMe)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta a entrada de dados do arquivo                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Private aTELA[0][0],aGETS[0]
Private ADIANTAMENTO :=	.F.

DEFAULT cFilOri		:= ''
DEFAULT cViagem		:= ''

lF560Auto := If( TYPE("lF560Auto") == "U",.F.,lF560Auto )

If lPanelFin .Or. lF560Auto   //Chamado pelo Gestor Financeiro - PFIN
   Inclui := .T.
Endif

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Envia para processamento dos Gets          Ё
//юдддддддддддддддддддддддддддддддддддддддддддды


//здддддддддддддддддд©
//Ё Carrega Enchoice Ё
//юдддддддддддддддддды
cCpoSEU:="EU_BCOREP.EU_AGEREP.EU_CTAREP.EU_TITULO."+ If( cPaisLoc <> "BRA", "EU_TIPDEB.", "")
cCpoSEU+="EU_SERCOMP."
aCposUMov := {"EU_STAUMOV","EU_ENVUMOV"}
DbSelectArea("SX3")
DbSetOrder(1)
MsSeek(cAlias)
While  !Eof() .And. X3_ARQUIVO == cAlias
	If lIntUMovMe .Or. (Ascan(aCposUMov,{|ccpo| AllTrim(SX3->X3_CAMPO) == AllTrim(ccpo)}) == 0)
		If	x3uso(SX3->X3_USADO) .And. cNivel >= SX3->X3_NIVEL
			If Alltrim(X3_CAMPO)$cCpoSEU
				Aadd( aVisual, "NOUSER" )
				DbSkip()
				Loop
			Endif
			cCampo := SX3->X3_CAMPO
			If	( SX3->X3_CONTEXT == "V"  .Or. Inclui )
				M->&(cCampo) := CriaVar(SX3->X3_CAMPO)
			Else
				M->&(cCampo) := SET->(FieldGet(FieldPos(SX3->X3_CAMPO)))
			EndIf
			Aadd( aVisual, SX3->X3_CAMPO )
		EndIf
	Endif
	dbSkip()
EndDo

// VerificaГЦo e ValidaГЦo do NЗmero Interno - EU_NUM
M->EU_NUM := VerValNUM(M->EU_NUM,.F.)

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao com o Modulo de Transporte (TMS)Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
If IntTMS() .And. nModulo == 43 .And. !Empty(cFilOri) .And. !Empty(cViagem)
	M->EU_FILORI := cFilOri
	M->EU_VIAGEM := cViagem
Endif

If lFa550IncI
	ExecBlock("FA550INI",.F.,.F.,)
Endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicia lancamento no PCO                                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoIniLan("000359")

If lF560Auto
	RegToMemory("SEU",.T.,.F.)
	aValidGet:= {}
	If Len(aAutoCab) > 0
		SX3->(dbSetOrder(2))
		For nT := 1 to Len(aAutoCab)
			If SEU->( FieldPos(aAutoCab[nT,1]) ) > 0
				If Type("M->"+aAutoCab[nT,1]) != "U"
					M->&(aAutoCab[nT,1]) := aAutoCab[nT,2]
					SX3->(MsSeek(aAutoCab[nT,1]))
					Aadd(aValidGet,{aAutoCab[nT,1] ,aAutoCab[nT,2],SX3->X3_VALID,.T.})
				EndIf		
			EndIf
		Next nT
	EndIf
	
	If !SEU->(MsVldGAuto(aValidGet))
		Return .F.
	Else
		nOpca := 1
	EndIf
Else
	If lPanelFin  //Chamado pelo Painel Financeiro
		dbSelectArea("SEU")
		RegToMemory("SEU",.T.,,,FunName())
		oPanelDados := FinWindow:GetVisPanel()
		oPanelDados:FreeChildren()
		aDim := DLGinPANEL(oPanelDados)
	
		DEFINE MSDIALOG oDlg OF oPanelDados:oWnd FROM 0, 0 TO 0,0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )
	
		aPosEnch := {,,,}
		oEnc01:= MsMGet():New( cAlias, nReg, nOpc,,,,aVisual,aPosEnch,,3,,,,oDlg,,,.F.)
		oEnc01:oBox:Align := CONTROL_ALIGN_ALLCLIENT
	
		// define dimenГЦo da dialog
	  	oDlg:nWidth := aDim[4]-aDim[2]
	  		
		ACTIVATE MSDIALOG oDlg  ON INIT ( FaMyBar(oDlg,{||nOpca:=1,If(F560TudoOk(aGets,aTela) ,oDlg:End(),nOpca:=0)},{||nOpca:=0,oDlg:End()}),	oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1]))
	Else
		//+------------------------------------------------------+
		//| Faz o calculo automatico de dimensoes de objetos     |
		//+------------------------------------------------------+
		aSize := MsAdvSize()
		aObjects := {}
		AAdd( aObjects, { 100, 100, .t., .t. } )
	
		aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
		aPosObj := MsObjSize( aInfo, aObjects )
	
	   	Define MSDialog oDlg Title cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd Pixel
	       oEnc01 := MsMGet():New( 	cAlias, nReg, nOpc,,,,aVisual,aPosObj[1],,3,,,,oDlg,,,.F.)
	   	   oEnc01:oBox:Align := CONTROL_ALIGN_ALLCLIENT
	
		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpca:=1,If(F560TudoOk(aGets,aTela) .And. Fa560Valor() ,oDlg:End(),nOpca:=0)},{||nOpca:=0,oDlg:End()})
	Endif
EndIf

If nOpcA == 1

	Begin Transaction
	RecLock(cAlias,.T.)
	For nCntFor := 1 TO FCount()
		If "FILIAL"$Field(nCntFor)
			FieldPut(nCntFor,xFilial())
		Else
			cCampo :=  FieldName(nCntFor)
			If cCampo == "EU_FILORI"
				FieldPut(nCntFor,cFilAnt)
			Else
				If TYPE("M->"+cCampo) != "U"
					FieldPut(nCntFor,M->&(cCampo))
				EnDIf
			EndIf
		EndIf
	Next nCntFor

    //Grava Status de aguardando liberaГЦo do tМtulo se o campo existir.
	Replace SEU->EU_STATUS With "01"

	SEU->(DbCommit())
	nRecSEU := SEU->(RECNO())
	dbSelectArea("SET")
	dbSetOrder(1)
	dbSeek( xFilial()+SEU->EU_CAIXA)
	//Gravo o numero de sequencial de caixa aberto.....
	RecLock("SEU",.F.)
	Replace EU_SEQCXA  With SET->ET_SEQCXA
	MsUnlock()

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Efetua os lancamentos no PCO e CTB e abate o saldo do caixinha   Ё
	//Ё Este processo foi transformado em funcao para ser executado apos Ё
	//Ё a aprovacao do movimento no controle de alcada (MV_FINCTAL=2)    Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If SuperGetMV("MV_FINCTAL", .T., "1") == "1"
		FA560Lanc()
	EndIf

	//CAIXINHA x JURIDICO
	//Grava registro de pre-faturamento no SIGAPFS
	//Se caixinha integrado com SIGAPFS
	//Se eh despesa juridica
	//Se sera reembolsado pelo cliente
	//Se nao sofrera rateio
	If cPaisloc == "BRA"
		If lCXJurFin .and. SEU->EU_TIPO == '00' .and. SEU->EU_DESPJUR == '1' .and. SEU->EU_FATJUR == '1' .and. SEU->EU_RATJUR == '2'
			cCodFat := GeraPFS(3,SEU->EU_NUM,,SEU->EU_CLIENTE,SEU->EU_LOJACLI,SEU->EU_CASO,SEU->EU_PROFISS,SEU->EU_EMISSAO,,SEU->EU_VALOR,SEU->EU_TIPDESP,SEU->EU_MEMDSCR)
			If !Empty(cCodFat)
				RecLock("SEU",.F.)
				SEU->EU_SEQJUR := cCodFat
				SEU->(MsUnLock())
			EndIf
		Endif
	Endif	

	While (GetSx8Len() > nSaveSx8 )
		ConfirmSX8()
	Enddo

	End Transaction

	//CAIXINHA x JURIDICO
	//Grava registro de pre-faturamento no SIGAPFS
	//Se caixinha integrado com SIGAPFS
	//Se eh despesa juridica
	//Se sofrera rateio
	If lCXJurFin .and. SEU->EU_TIPO == '00' .and. SEU->EU_DESPJUR == '1' .and. SEU->EU_RATJUR == '1' .And. !lF560Auto

    	If MsgYesNo (STR0104+CRLF+STR0105,STR0106)	//"Deseja realizar o rateio jurМdico da despesa neste momento ?"###"(и possivel digitar o rateio posteriormente.)"###"Rateio JurМdico"
			aArea := GetArea()
			xRet := FWExecView( STR0106 , "FINA562", 4, /*oDlg*/, {|| .T. }/*bCloseOnOk*/, /*bOk*/ , /*nPercReducao*/, /*aEnableButtons*/, /*bCancel*/ )		//"Rateio JurМdico"
			RestArea(aArea)
		Endif

	Endif


	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Ponto de entrada que permite ao usuario exibir ou nao a mensagem de impressao Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ExistBlock("F560IMRC")
		lResp := ExecBlock("F560IMRC",.F.,.F.) //
	endif
	If lResp == .T. .And. !lF560Auto
		If IW_MsgBox(STR0030+ IIF(M->EU_TIPO == "00", STR0031,STR0032),STR0033,"YESNO") //"Deseja Imprimir Recibo "###"desta Despesa ?"###"deste Adiantamento ?"###"ImpressЦo de recibo"
			SEU->(dbGoto(nRecSEU))
			If ExistBlock("F560RECB")
				ExecBlock("F560RECB",.F.,.F.) //Relatorio de recibo do Caixinha customizado
			Else
				Finr565()  //RelatСrio de recibo do Caixinha padrao
			Endif
		Endif
	Endif

Else
	While ( GetSx8Len() > nSaveSx8 )
		RollBackSX8()
	EndDO
EndIf

If lFa550IncF
	ExecBlock("FA550INF",.F.,.F.,)
Endif

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Finaliza a gravacao dos lancamentos do SIGAPCO            Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoFinLan("000359")
PcoFreeBlq("000359")
dbSelectArea(cAlias)
RestArea(aArea)

SEU->(DBGOTO(SEU->(LASTREC())))


Return /*Function Fa560Inclui*/

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560DeletaЁ AutorЁ Leonardo Ruben        Ё Data Ё 13.06.00 Ё╠╠
╠╠цддддддддддедддддддддддаддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Exclusao de comprovantes do Caixinha                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe e Ё FA560Deleta(ExpC1,ExpN1,ExpN2)                             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё			 Ё ExpN2 = Nёmero da op┤└o selecionada 						  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FINA560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
FUNCTION FA560Deleta(cAliasCanc,nReg,nOpc)
Local lPanelFin := IsPanelFin()
LOCAL nOpcA
LOCAL lOk   := .T., lRet := .T.
LOCAL oDlg
Local nVlrDel, cMens, cNroAdia, dBaixa
Local aArea      := GetArea()
Local lF560Del   := ExistBlock("F560DEL")
Local lF560DEL1  := ExistBlock("F560DEL1")
Local lF560DEL2  := ExistBlock("F560DEL2")
Local lF560DEL3  := ExistBlock("F560DEL3")
Local lF560DEL4  := ExistBlock("F560DEL4")
LOCAL lPermiss   := .F.
Local nHdlPrv    := 0
Local lDigita    := .F.
Local lAglutina  := .F.
Local cArquivo
Local lPadrao579 := VerPadrao("579")
Local nTotal     := 0
Local lBlock 	  := .F.
Local aFlagCTB   := {}
Local lUsaFlag	  := SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Local aSize 	  := {}
Local aObjects   := {}
Local aInfo 	  := {}
Local aPosObj 	  := {}
Local nRecnoSEU   := 0
Local nT		  := 0
Local lMntTms    := ( SuperGetMV( "MV_NGMNTMS",,'N') == 'S' )//-- Ativa integracao TMS X MNT.
Local cIntmov	 := ""
Local aCab       := {}
Local aItem      := {}
Local aItens     := {}
Local lCXJurFin	 := FVldJurxFin()
Local lPctCaix 	 := SuperGetMV("MV_PCTCAIX",.F.,.F.)
Local lFincTal	 := IIf(SuperGetMV("MV_FINCTAL",.F.,.F.)=="2",.T.,.F.)	
Local lDelDes 	 := .F.	
Local lClosedCx	 := .T.
Local cChaveCanc := ""
Local cChaveDesp := ""
Local lIniPco    := .T.

//Monta a entrada de dados do arquivo
PRIVATE cLote :=""
PRIVATE aTELA[0][0],aGETS[0]
PRIVATE ADIANTAMENTO	:=	.F.
PRIVATE aDiario := {}
PRIVATE cCodDiario := ""

If Type("lMSErroAuto") == "U"
	PRIVATE lMSErroAuto := .F.
EndIf

If Type("lMSHelpAuto") == "U"
	PRIVATE lMSHelpAuto := .F. // para mostrar os erros na tela
EndIf

PRIVATE lIntUMovMe  := Iif(Type("lIntUMovMe") == "U" .And. nModulo == 43, .T., lIntUMovMe)

lF560Auto := If( TYPE("lF560Auto") == "U",.F.,lF560Auto )

If (nT := ascan(aAutoCab,{|x| x[1]='EU_NUM'}) ) > 0
	dbSelectArea("SEU")
	dbSetOrder(1)
	If SEU->(DbSeek(xFilial("SEU")+aAutoCab[nT,2]))
		nOpca := 2
	EndIf
EndIf

Pergunte("FIA550",.F.)

lDigita    := Iif(mv_par01 ==1,.T.,.F.)
lAglutina  := Iif(mv_par02 ==1,.T.,.F.)

bCampo := {|nCPO| Field(nCPO) }

/*
 * NotificaГЦo ao efetuar prestaГЦo de contas
 */
If lIntUMovMe
	If SEU->EU_STAUMOV == '1'
		Help(" ",1,"Fa560uMovPenC",,STR0128,1,0) //"Adiantamento pendente de envio para prestaГЦo de contas no aplicativo mobile uMov.me. Em caso de cancelamento de prestaГЦo de contas efetuado mesmo assim, este adiantamento nЦo serА enviado para prestaГЦo de contas pelo aplicativo mobile."
	ElseIf SEU->EU_STAUMOV == '2'
		Help(" ",1,"Fa560uMovCamC",,STR0129,1,0) //"Adiantamento enviado para prestaГЦo de contas no aplicativo mobile uMov.me. Em caso de cancelamento de prestaГЦo de contas efetuado mesmo assim, no sincronismo, as informaГУes da prestaГЦo de contas pelo aplicativo mobile serЦo canceladas."
	ElseIf SEU->EU_STAUMOV == '3'
		Help(" ",1,"Fa560uMovRetC",,STR0130,1,0) //"Adiantamento com prestaГЦo de contas retornada do aplicativo mobile uMov.me. Em caso de cancelamento de prestaГЦo de contas efetuado mesmo assim, no sincronismo, as informaГУes da prestaГЦo de contas pelo aplicativo mobile serЦo canceladas."
	EndIf
Endif

SET->(dbSetOrder(1))
SET->(dbSeek( xFilial()+SEU->EU_CAIXA))
lClosedCx := IIF(SET->ET_SITUAC == "0" , .F. , .T.)

// Ponto de entrada que definira a permissao ou nao de exclusao de movimentos do caixinha
If lF560Del
	lPermiss := ExecBlock("F560DEL",.F.,.F.)
Endif

If ExistBlock("F560BLOCK")
	lBlock:= ExecBlock("F560BLOCK",.F.,.F.)
EndIf

If !lBlock
	// Nao excluo movimentos baixados, exceto com permissao
	// Nao excluo devolucao de adiantamento, movimento banco/caixinha ou movimento caixinha/Banco
	// Nao excluo se o Caixinha estiver fechado
	// Nao excluo movimentos de reposicao
	// Nao excluo movimentos gerados por faturas de entrada
	If cPaisLoc <> "BRA" .and. SEU->EU_TIPDEB == "_NF_"  //CHILE
		lRet := .F.
		Help(,,STR0054,,STR0088,1,0)		//"Este movimento foi gerado por uma fatura de entrada, somente poderА ser anulado pela exclusЦo dessa fatura."
	Else
		If lClosedCx
			Help(" ",1,"FA550FECH",,STR0044,1,0)	//Caixinha fechado. NЦo И possМvel realizar movimentos.
			lRet:= .F.
		EndIf  

		If  lRet .AND.;
            (   (   (SEU->EU_TIPO >= "90") .OR.;
                    (!Empty(SEU->EU_BAIXA) .AND. !lPermiss) .OR.;
                    (SEU->EU_TIPO $ "02#10#11") .OR.;
                    (SEU->EU_TIPO $ "01" .AND. SEU->EU_SLDADIA<>SEU->EU_VALOR .AND. lPctCaix == "1");
                ) .OR.;
                (SEU->EU_TIPO $ "00" .AND. !Empty(SEU->EU_BAIXA));
            )
			
            nRecnoSEU := SEU->(RECNO())
			
			//Verifico se jА nЦo houve um cancelamento/exclusao
			cChaveCanc := SEU->EU_FILIAL + SEU->EU_CAIXA + "02" + SEU->EU_NROADIA	   // Registro Cancelamento
			cChaveDesp := SEU->EU_FILIAL + SEU->EU_CAIXA + "02" + SEU->EU_NUM		   // Registro Despesa/ Adiantamento
			
			SEU->(dbSetOrder(6))			
			If  SEU->(dbSeek(cChaveCanc)) .Or. SEU->(dbSeek(cChaveDesp)) 
				Help(" ",1,"FA560BAIXA")
				lRet := .F.
			EndIf

			SEU->(dbSetOrder(1))
			SEU->(dbGoTo(nRecnoSEU))
		EndIf
		
		//Caixinha x Juridico
		If lRet .and. lCXJurFin .and. !F560CanDel()
			Help(" ",1,"NODELJUR",,STR0107,1,0)		//"NЦo И possivel excluir este registro pois o mesmo possui movimentos de prИ-faturamento de serviГos (mСdulo SIGAPFS) e os mesmos jА foram faturados."
			lRet := .F.
		EndIf
		
		//Verifica se Despesa jА foi aprovada
		If lRet .And. lFincTal
			If SEU->EU_STATUS <> "03"				
				If !lF560Auto .And. MSGYESNO(STR0126 + " " + STR0146 ,STR0054)
					lDelDes := .T. // FunГЦo ilustrativa que implementa o algoritmo do jogo da forca.
				Else
					lRet := .F.
				Endif	
			Endif	
		Endif
		
		If lRet
			If SEU->EU_TIPO == "10"
				Help("", 1, "F560NOCANCREP",, STR0149, 1,,,,,,,; //"NЦo И permitido realizar o cancelamento de uma ReposiГЦo do Caixinha"
					{STR0150}) //"Realize o estorno da ReposiГЦo atravИs da rotina ManutenГЦo do Caixinha."
				lRet := .F.
			ElseIf SEU->EU_TIPO == "11"
				Help("", 1, "F560NOCANCEST",, STR0151, 1,,,,,,,; //"NЦo И permitido realizar o cancelamento de um Estorno de ReposiГЦo ou DevoluГЦo de Caixinha."
					{STR0152}) //"Realize uma nova ReposiГЦo do Caixinha."
				lRet := .F.
			EndIf
		EndIf
	Endif
	
	If (lDelDes .Or. (mv_par03 == 1)) .And. lRet .And. lPadrao579 .And. SEU->EU_LA == "S" .And. nHdlPrv <= 0
		LoteCont("FIN")
		nHdlPrv := HeadProva(cLote, "FINA560" /*cPrograma*/, Substr( cUsuario, 7, 6 ), @cArquivo)
	EndIf	

	IF lRet .AND. cPaisLoc == "ARG" 
		If SEU->EU_VALOR <> SEU->EU_SLDADIA .AND. SEU->EU_TIPO == "01"
			Aviso(STR0054, STR0024) //'AtenciСn',"Anticipo con comprobantes ya informados"
			lRet := .F. 
		Endif
		If lRet .AND.  SEU->EU_TIPO == '00'  .AND. Empty(SEU->EU_STATUS)
			Aviso(STR0054, STR0088) //'AtenciСn',"Este movimiento se generС por una factura de entrada, solo podrА ser anulada por el borrado de la factura."
			lRet := .F. 
		EndIF
	EndIf
	
	If lRet
		//Inicia lancamento no PCO
		PcoIniLan("000359")
		
		While lRet
			If SEU->EU_TIPO == "00" // Reembolso
				cMens := OemToAnsi(STR0013)  //"Quanto ┘ exclus└o?"
			Else
				dbSelectArea("SEU")
				dbSetOrder(3)  // filial + nroadia
				
				If dbSeek( xFilial() + EU_NUM)
					cMens := OemToAnsi(STR0018)  //"Serao excluidos comprovantes do adiantamento. Continua?"
				Else
					cMens := OemToAnsi(STR0013)  //"Quanto ┘ exclus└o?"
				EndIf
				
				RestArea(aArea)
			EndIf		
			
			//Envia para processamento dos Gets
			nOpcA := If(lF560Auto, nOpcA, 0)
			SoftLock(cAliasCanc)
			
			If lPanelFin .And. !(lF560Auto) //Chamado pelo Painel Financeiro
				dbSelectArea("SEU")
				RegToMemory("SEU",.F.,.F.,,FunName())
				oPanelDados := FinWindow:GetVisPanel()
				oPanelDados:FreeChildren()
				aDim := DLGinPANEL(oPanelDados)
				DEFINE MSDIALOG oDlg OF oPanelDados:oWnd FROM 0, 0 TO 0, 0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )
				aPosEnch := {,,,}
				oEnc01:= MsMGet():New( cAliasCanc, nReg, nOpc,,"AC",cMens,,,,,,,,oDlg,,,.F.)
				oEnc01:oBox:Align := CONTROL_ALIGN_ALLCLIENT

				//define dimenГЦo da dialog
				oDlg:nWidth := aDim[4]-aDim[2]
				ACTIVATE MSDIALOG oDlg  ON INIT ( FaMyBar(oDlg,{||nOpca := 2,oDlg:End()},{|| nOpca := 1,oDlg:End()}),	oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1]))
			ElseIf !lF560Auto
				aSize := MsAdvSize()
				aObjects := {}
				AAdd( aObjects, { 100, 100, .t., .t. } )

				aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
				aPosObj := MsObjSize( aInfo, aObjects )

				DEFINE MSDIALOG oDlg TITLE cCadastro FROM aSize[7],0 to aSize[6],aSize[5] of oMainWnd Pixel
				nOpcA:=EnChoice( cAliasCanc, nReg, nOpc, ,"AC",cMens, , aPosObj[1])
				nOpca := 1
				ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpca := 2,oDlg:End()},{|| nOpca := 1,oDlg:End()})
			Endif
			
			DbSelectArea(cAliasCanc)

			If lOk .And. nOpcA == 2
				If SEU->EU_TIPO == "00"
					nRecnoSEU := SEU->(Recno())
					
					If cPaisLoc $ "ARG/BOL/" .And. !Empty(SEU->EU_NFISCAL)
						SF1->(dbSetOrder(1))
						SF1->(dbSeek(xFilial("SF1")+SEU->EU_NFISCAL+SEU->EU_SERIE+SEU->EU_FORNECE+SEU->EU_LOJA))

						aCab := {}
						AADD(aCab,{"F1_DOC"    ,SF1->F1_DOC    ,".T."})
						AADD(aCab,{"F1_SERIE"  ,SF1->F1_SERIE  ,".T."})
						AADD(aCab,{"F1_FORNECE",SF1->F1_FORNECE,".T."})
						AADD(aCab,{"F1_LOJA"   ,SF1->F1_LOJA   ,".T."})
						AADD(aCab,{"F1_TIPODOC",SF1->F1_TIPODOC,".T."})
						AADD(aCab,{"F1_MOEDA"  ,SF1->F1_MOEDA  ,".T."})
						AADD(aCab,{"F1_TXMOEDA",SF1->F1_TXMOEDA,".T."})

						SD1->(dbSetOrder(1))
						SD1->(dbSeek(xFilial("SD1")+SEU->EU_NFISCAL+SEU->EU_SERIE+SEU->EU_FORNECE+SEU->EU_LOJA))
						
						While SD1->(!Eof()) .and. SD1->D1_FILIAL == xFilial("SD1") .and.;
								SD1->D1_DOC == SEU->EU_NFISCAL .and. SD1->D1_SERIE == SEU->EU_SERIE .and.;
								SD1->D1_FORNECE == SEU->EU_FORNECE .and. SD1->D1_LOJA == SEU->EU_LOJA
							aItem:={}
							AADD(aItem,{"D1_DOC"    ,SD1->D1_DOC    ,".T."})
							AADD(aItem,{"D1_SERIE"  ,SD1->D1_SERIE  ,".T."})
							AADD(aItem,{"D1_FORNECE",SD1->D1_FORNECE,".T."})
							AADD(aItem,{"D1_LOJA"   ,SD1->D1_LOJA   ,".T."})
							AADD(aItens,ACLONE(aItem))
							SD1->(dbSkip())
						End
							
						RegToMemory("SE2",.F.)
						MsgRun(OemToAnsi(STR0080),,{||MSExecAuto({|x,y,z| MATA101N(x,y,z)},aCab,aItens,5)})
						
						If lMSErroAuto
							MostraErro()
							Return .F.
						EndIf
					EndIf
					
					If nHdlPrv > 0 .And. SEU->EU_LA == "S"
						If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
							aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
						Endif
							
						nTotal += DetProva(nHdlPrv, "579" /*cPadrao*/, "FINA560" /*cPrograma*/, cLote, /*nLinha*/, /*lExecuta*/, /*cCriterio*/,;
											/*lRateio*/, /*cChaveBusca*/, /*aCT5*/, /*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/)
					Endif
					
					SEU->(dbGoTo(nRecnoSEU))
					cIntMov := SEU->EU_NUM
					
					If !lFincTal .Or. (lFincTal .And. !lDelDes)
						Fa560FcAdi(nRecnoSEU, SEU->EU_VALOR, GetSx8Len(), Nil, .T., Nil, Nil, Nil, Nil, Nil, lIniPco)
					Endif			
					
					//IntegraГЦo caixinha x juridico
					If lCXJurFin .and. SEU->EU_DESPJUR == '1'
						SEU->(dbGoTo(nRecnoSEU))
						F560DelJur(SEU->EU_NUM,SEU->EU_SEQJUR)
					Endif
					
					//Ponto de entrada F560DEL2, Destina-se a gravacoes complementares da exclusao do movimento do caixinha
					If lF560DEL2
						ExecBlock("F560DEL2",.F.,.F.)
					Endif
					
					//Estorna o Movim. de Custo de Transporte
					If IntTMS() .And. nModulo == 43
						If (!Empty(SEU->EU_CODVEI) .And. !Empty(SEU->EU_CODDES) .And. Posicione("DA3",1,xFilial("DA3")+SEU->EU_CODVEI,"DA3_FROVEI") == StrZero(1,Len(DA3->DA3_FROVEI))) .Or. ;
						(!Empty(SEU->EU_FILORI) .And. !Empty(SEU->EU_VIAGEM) .And. !Empty(SEU->EU_CODDES))
							SDG->(dbSetOrder(5))
							SDG->(MsSeek(cSeek:=xFilial("SDG")+SEU->EU_FILORI+SEU->EU_VIAGEM+SEU->EU_CODVEI))
							Do While SDG->(!Eof()) .And. SDG->(DG_FILIAL+DG_FILORI+DG_VIAGEM+DG_CODVEI) == cSeek
								If SDG->DG_ORIGEM == "SEU" .And. SDG->DG_CODDES == SEU->EU_CODDES
									If SDG->DG_INTMOV == cIntMov
										RecLock('SDG',.F.)
										dbDelete()
										MsUnLock()
										Exit
									Else
										RecLock('SDG',.F.)
										dbDelete()
										MsUnLock()
										Exit
									EndIf
								EndIf
								SDG->(dbSkip())
							EndDo
						EndIf
						If lMntTms
							TmsMntEsOs('2',SEU->EU_FILORI,SEU->EU_VIAGEM,SEU->EU_CODVEI,SEU->EU_CODDES,cIntMov)
						EndIf
					EndIf
				Else
					Begin Transaction					
						//Caso tipo adiantamento, exclui seus comprovantes primeiro
						If SEU->EU_TIPO == "01" // Adiantamento
							//Devolve valor do adiantamento para o saldo do caixinha
							//mesma quando ja' foi reposto o valor do caixinha e sequencia do SET e SEU nao coincidem mais.
							cNroAdia := SEU->EU_NUM
							aAreaSEU := SEU->(GetArea())
							
							dbSelectArea("SEU")
							SEU->(dbSetOrder(3)) //EU_FILIAL + EU_NROADIA + EU_NUM					
							SEU->(dbSeek(xFilial("SEU")+cNroAdia))
							
							While !SEU->(Eof()) .And. SEU->(EU_FILIAL+EU_NROADIA) == (xFilial("SEU")+cNroAdia) .And. SEU->EU_LA == "S"
								If nHdlPrv > 0
									//Prepara Lancamento Contabil
									If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
										aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
									Endif
									
									nTotal += DetProva(nHdlPrv, "579" /*cPadrao*/, "FINA560" /*cPrograma*/, cLote, /*nLinha*/, /*lExecuta*/, /*cCriterio*/,;
														/*lRateio*/, /*cChaveBusca*/, /*aCT5*/, /*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/ )
								Endif
								
								SEU->(dbSkip())
							Enddo
							
							RestArea(aAreaSEU)
							FwFreeArray(aAreaSEU)
							
							If SEU->EU_SLDADIA > 0 .And. SEU->EU_SEQCXA < SET->ET_SEQCXA
								Fa560FcAdi(SEU->(Recno()), SEU->EU_SLDADIA, GetSx8Len(), Nil, Nil, Nil, Nil, Nil, Nil, Nil, lIniPco)
							Endif
							
							dbSelectArea("SEU")
							SEU->(dbSetOrder(1))  // filial + nroadia
							
							While dbSeek(xFilial("SEU")+cNroAdia)
								//IntegraГЦo caixinha x juridico
								If lCXJurFin .and. SEU->EU_DESPJUR == '1'
									F560DelJur(cNroAdia)
								EndIf
								
								//Ponto de entrada F560DEL3
								If lF560DEL3
									ExecBlock("F560DEL3",.F.,.F.)
								Endif
								
								RecLock(cAliasCanc,.F.,.t.)
								(cAliasCanc)->(dbDelete())
								(cAliasCanc)->(MsUnlock())
								
								//Gravacao dos lancamentos do SIGAPCO
								PcoDetLan("000359", "02", "FINA560", .T.)
							EndDo
							
							RestArea(aArea)
						EndIf
						
						//Ponto de entrada F560DEL1 Destina-se a gravacoes complementares da exclusao do movimento do caixinha
						If lF560DEL1
							ExecBlock("F560DEL1",.F.,.F.)
						EndIf
						
						DbSelectArea(cAliasCanc)
						RecLock(cAliasCanc, .F., .t.)
						nVlrDel  := (cAliasCanc)->EU_VALOR
						cNroAdia := (cAliasCanc)->EU_NROADIA
						dBaixa   := (cAliasCanc)->EU_BAIXA
						
						If nHdlPrv > 0 .And. SEU->EU_LA == "S"
							//Prepara Lancamento Contabil
							If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
								aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
							Endif
								
							nTotal += DetProva(nHdlPrv, "579" /*cPadrao*/, "FINA560" /*cPrograma*/, cLote, /*nLinha*/, /*lExecuta*/, /*cCriterio*/, /*lRateio*/,;
												/*cChaveBusca*/, /*aCT5*/, /*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/)
						EndIf
						
						(cAliasCanc)->(dbDelete())
						(cAliasCanc)->(MsUnlock())
						
						//Gravacao dos lancamentos do SIGAPCO
						PcoDetLan("000359","02","FINA560", .T.)
						
						//Atualiza saldo do caixinha se nao for comprovante de adiantamento, caso contrario atualiza saldo do adiantamento
						If Empty(cNroAdia) .or. (cPaisLoc == "ARG" .and.  !Empty(cNroAdia))
							If Empty(dBaixa) .or. lPermiss // somente atualiza se nao for baixado/rendido
								//Atualiza saldo do caixinha e niveis superiores, se houverem
								If FXMultSld()
									AtuSalCxa( SEU->EU_CAIXA , dDataBase , SEU->EU_VALOR )
								EndIf
								
								dbSelectArea("SET")
								SET->(dbSetOrder(1) )
								SET->(dbSeek( xFilial()+SEU->EU_CAIXA))
								
								If lPctCaix == "1"
									nSldAtu := ET_SALDO + SEU->EU_SLDADIA //Fa570AtuSld( SET->ET_CODIGO) - Reprocessava todos os saldos do caixinha para retornar o valor da devoluГЦo - desnecessАrio, o valor a devolver estА posicionado (SEU->EU_VALOR)
									RecLock("SET",.F.)
									If cPaisLoc == "ARG"
										REPLACE ET_SALANT WITH ET_SALDO
									EndIf
									REPLACE ET_SALDO WITH nSldAtu
								Else
									nSldAtu := ET_SALDO + SEU->EU_VALOR
									RecLock("SET",.F.)
									If cPaisLoc == "ARG"
										REPLACE ET_SALANT WITH ET_SALDO
									EndIf
									REPLACE ET_SALDO WITH nSldAtu
								Endif
								
								SET->(MsUnlock())
								//Gravacao dos lancamentos do SIGAPCO
								PcoDetLan("000359","01","FINA560")
							EndIf
						Else
							//Verifico se o nro do adiantamento И o mesmo da variАvel, assim nЦo altero o registro
							//que estА sendo excluМdo (o que И incoerente) e tambИm causa erro de integridade
							If SEU->EU_NROADIA != cNroAdia 
								SEU->(dbSetOrder(1))
								
								If SEU->(dbSeek(xFilial()+cNroAdia)) .And. (Empty(SEU->EU_BAIXA) .Or. lPermiss) .And. cAliasCanc == "SEU"  // somente atualiza se nao for baixado/rendido
									REPLACE SEU->EU_SLDADIA WITH SEU->EU_SLDADIA + nVlrDel
									
									If !Empty(SEU->EU_BAIXA)
										REPLACE SEU->EU_BAIXA WITH CTOD("//")
									EndIf
									
									SEU->( MsUnlock() )
									
									//Gravacao dos lancamentos do SIGAPCO
									PcoDetLan("000359","02","FINA560")
									RestArea(aArea)
								EndIf
							EndIf
						EndIf
					End Transaction
				EndIf
				
				If nHdlPrv > 0
					//Efetiva Lan┤amento Contabil
					RodaProva(nHdlPrv, nTotal )
					
					If UsaSeqCor()
						cCodDiario := CTBAVerDia()
						AADD(aDiario, {"SEU", SEU->(recno()), cCodDiario, "EU_NODIA", "EU_DIACTB"})
					Endif
					
					If lUsaFlag .And. !EMPTY(SEU->EU_NUM) // Armazena em aFlagCTB para atualizar no modulo Contabil
						aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
					Endif
					
					cA100Incl(cArquivo, nHdlPrv, 3 /*nOpcx*/, cLote, lDigita, lAglutina /*lAglut*/, /*cOnLine*/, /*dData*/, /*dReproc*/, @aFlagCTB, /*aDadosProva*/, aDiario )
					aFlagCTB := {}
					
					If !lUsaflag .And. !Empty(SEU->EU_NUM)
						Reclock("SEU",.F.)
						Replace EU_LA	With "S"
						MsUnLock()
					EndIf
				EndIf
			Else
				MsUnLock()
			ENDIF
			
			EXIT
		EndDo
		
		//Finaliza a gravacao dos lancamentos do SIGAPCO
		PcoFinLan("000359")
	Endif
EndIf

//Ponto de entrada F560DEL4
If lF560DEL4
	ExecBlock("F560DEL4",.F.,.F.)
Endif

//Exclui registro de Despesa que nЦo foi aprovado e nЦo movimenta banco (pois nЦo movimentou na inclusЦo)
If lFinctal .And. ldeldes .And. nOpcA <> 1 .And. SEU->EU_STATUS == "01" .And. SEU->EU_TIPO == "00"
	Reclock("SEU",.F.)
	SEU->(DbDelete())
	MsUnlock()
Endif

dbSelectArea(cAliasCanc)
Return lRet


/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560ValorЁ Autor Ё Leonardo Ruben        Ё Data Ё 28.06.00 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁValidacao do campo EU_VALOR                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe e Ё Fa560Valor()                                               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FINA560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
/*/
Function Fa560Valor(nValor,cCaixa,lTela,cCxAdian,cCxRendic)
Local aAreaAnt  := GetArea()
Local lRet      := .T.
Local nx
Local nPosValor := 0
Local lRetValor :=.T.
Local lVlPrtCM  := GetNewPar("MV_PCTCXMA","2")=="1"  // Permite prestacao de contas a maior no adiantamento
Local aAreaSET

DEFAULT nValor    := M->EU_VALOR
DEFAULT cCaixa    := IIF(Type("M->EU_CAIXA")=="C",M->EU_CAIXA, SEU->EU_CAIXA)
DEFAULT lTela     := .T.
DEFAULT cCxAdian  := IIF(Type("M->EU_NROADIA")=="C",M->EU_NROADIA, SEU->EU_NROADIA)
DEFAULT cCxRendic := IIF(Type("M->EU_NRREND")=="C",M->EU_NRREND, SEU->EU_NRREND)

If ExistBlock("F560VALOR")
	lRetValor:=ExecBlock("F560VALOR",.F.,.F.)
Endif

If nValor <= 0
	Help(" ",1,"FA560VALOR")
	lRet := .F.
ElseIf ValType("cCaixa")=="C" .And. Empty(cCaixa)
	// No caso de adiantamento, o acols nao contem o campo EU_CAIXA
	Help(" ",1,"FA560CXVAZ")
	lRet := .F.
ElseIf  ValType("cCaixa")=="C" .And. Type("OSALDO")!="O"
	dbSelectArea("SET")
	dbSetOrder(1)
	dbSeek( xFilial()+cCaixa)
	//Si es una factura de entrada con caja chica.
	If cPaisLoc == "ARG" .OR. cPaisLoc == "BOL"
		//Si los valores para nЗmero de referencia y nЗmero de anticipaciСn.
		If !Empty(cCxAdian) .And. !Empty(cCxRendic)
			//Se buscan coincidencias para el nЗmero de referencia y de anticipaciСn.
			aAreaSET := SEU->(GetArea())
			DbSelectArea('SEU')
			SEU->(DbSetOrder(8))
			If DbSeek(xFilial("SEU")+cCaixa+cCxRendic)
				While (SEU->(!Eof())) .And. SEU->EU_NROADIA == cCxAdian
					lRet := .T.
					dbSkip()
				Enddo
		 	EndIf
		 	RestArea(aAreaSET)
		EndIf
		
		If SET->ET_SALDO < nValor .and. lRetValor .And. FunName() != "MATA101N"  // Valor informado e' superior ao saldo
			Help(" ",1,"FA560SALDO")
			lRet := .F.
		EndIf
	Else
		If SET->ET_SALDO < nValor .and. lRetValor   // Valor informado e' superior ao saldo
			Help(" ",1,"FA560SALDO")
			lRet := .F.
		EndIf
	EndIf
EndIf

nValorPrest := 0

If lTela .And. Type("OSALDO")!="U"
	// Validacao do valor digitado no aCols (caso de adiantamentos)
	// Remonta o saldo do adiantamento de acordo com o aCols
	nPosValor := Ascan( aHeader, {|x| AllTrim(x[2])=="EU_VALOR" } )
	nFa560sld  := nSldOrig
	For nx := 1 To Len(aCols)
		If !aCols[nx,Len(aCols[nx])]  // not deleted
			If n == nx
				nFa560sld -= M->EU_VALOR
				nValorPrest := nValorPrest + M->EU_VALOR
			Else
				nFa560sld -= aCols[nx][nPosValor]
				nValorPrest := nValorPrest + aCols[nx][nPosValor]
			EndIf
		EndIf
	Next nx
	oSaldo:Refresh()


	If lVlPrtCM
	    If nValorPrest > (SET->ET_SALDO + nSldOrig)
 	 	   Help(" ",1,"F560PDMAAD",,STR0049+chr(10)+STR0050,1,1) // "A prestacao de contas supera" # "o saldo limite do caixinha"
			lRet := .F.
 	    EndIf

	ElseIf nFa560sld < 0     // saldo negativo
		Help(" ",1,"FA560SLDAD")
		lRet := .F.
	EndIf
EndIf

If cPaisLoc == "BRA"
	//Verificacao da Moeda do Caixinha
	If !M->EU_MOEDA == SET->ET_MOEDA
		M->EU_MOEDA := SET->ET_MOEDA
	Endif
Endif

RestArea(aAreaAnt)
Return lRet

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560AdianЁ Autor Ё Leonardo Ruben        Ё Data Ё 13.06.00 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁBaixa de ingressos tipo Adiantamento (Caixinha)             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁFA560Adian(ExpC1,ExpN1)                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo							    Ё╠╠
╠╠Ё			 Ё ExpN1 = Nёmero do registro 					    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FINA560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
/*/
Function Fa560Adian(cAlias,nReg)
Local lPanelFin := IsPanelFin()
Local lGravaOK 	:= .T.
Local nOpca		:= 0
Local nUsado 	:= 0
Local oDlg, oGet
Local lContinua := .T.
Local cCampos   := ""
Local cNroAnt   := SEU->EU_NUM
Local oFont
Local nRecnoSEU := SEU->(Recno())
Local cCaption
Local lF560Cpos := ExistBlock("F560CPOS")
Local nSaveSx8  := GetSx8Len()
Local nX := 0
Local nY := 0
Local nT := 0
Local lFa550Adia:=	ExistBlock("FA550ADF")

Local nTimeOut  := SuperGetMv("MV_FATOUT",,900)*1000 	// Estabelece 15 minutos para que o usuarios selecione
Local nTimeMsg  := SuperGetMv("MV_MSGTIME",,120)*1000 	// Estabelece 02 minutos para exibir a mensagem para o usuАrio
Local oTimer

Local lPadrao579 := VerPadrao("579")
Local lGeraLanc  := .F.
Local lDigita    := .F.
Local lAglutina  := .F.
Local aSEUCont	  :={}
Local nHdlPrv    := 0
Local cArquivo
Local nTotal     := 0
Local aFlagCTB := {}
Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Local lCXJurFin	:= FVldJurxFin()
Local cBenef := SEU->EU_BENEF
Local lRepSald := .F.
Local lF560ACESSO :=	ExistBlock("F560ACESSO")   
Local lAcesso := .T.
Local lMovEnt05 := CtbMovSaldo("CT0",,'05')
Local lMovEnt06 := CtbMovSaldo("CT0",,'06')
Local lMovEnt07 := CtbMovSaldo("CT0",,'07')
Local lMovEnt08 := CtbMovSaldo("CT0",,'08')
Local lMovEnt09 := CtbMovSaldo("CT0",,'09')
Local lFINCTAL	:= SuperGetMV("MV_FINCTAL", .T., "1") == "2"
Local lVerific   := .T.
Local lAprova	:= .F.
Local lF560APROV  := ExistBlock ('F560APROV')

Private 	cLote    	:= ""
PRIVATE 	aHeader 	:= {}
PRIVATE 	aCols   	:= {}
PRIVATE 	aNroCols	:= {}
Private 	bNumRel
Private 	oSaldo  	:= NIL
PRIVATE ADIANTAMENTO:=	.T.

Private aFolTms     := {}
Private aFolTmsBkp  := {}

lF560Auto := If( TYPE("lF560Auto") == "U",.F.,lF560Auto )
lFINCTAL := If(lFINCTAL .and. cPaisLoc == "BRA", !Empty(SEU->EU_CODAPRO), lFINCTAL)

If lF560Auto
	If (nT := ascan(aAutoCab,{|x| x[1]='EU_NUM'}) ) > 0
		dbSelectArea("SEU")
		dbSetOrder(1)
		If SEU->(DbSeek(xFilial("SEU")+aAutoCab[nT,2]))
			nRecnoSEU := SEU->(Recno())
			cNroAnt   := SEU->EU_NUM
			nOpca 	  := 1
		EndIf
	EndIf
EndIf

Pergunte("FIA550",.F.)

lGeraLanc  := Iif(mv_par03 ==1,.T.,.F.)
lDigita    := Iif(mv_par01 ==1,.T.,.F.)
lAglutina  := Iif(mv_par02 ==1,.T.,.F.)

If SEU->EU_TIPO <> "01" //somente adiantamentos
		Help(" ",1,"FA560TIPO")
	dbSelectArea(cAlias)
	Return /*Function Fa560Adian*/
ElseIf SEU->EU_SLDADIA <= 0 //somente adiantamentos com saldo
		Help(" ",1,"FA560SALDO")
	dbSelectArea(cAlias)
	Return/*Function Fa560Adian*/
EndIf

If SEU->EU_EMISSAO > dDataBase  //somente adiantamentos com data anterior ou igual a data base
	If !lF560Auto
		MsgStop(STR0041,STR0040)  // "Adiantamento com data superior a data do sistema" ## "Data"
	EndIf
	dbSelectArea(cAlias)
	Return /*Function Fa560Adian*/
EndIf

If cPaisLoc $ "ARG|BOL" .and. !lFINCTAL
	lVerific:= .F.
ElseIf !((cPaisLoc $ "ARG|BOL" .Or. lFINCTAL) .And. SEU->EU_STATUS $ "01|02")
	lVerific:= .F.
EndIf


If lVerific  
	Help(" ",1,"Fa560Adian",,STR0082,1,0) //"Adiantamento pendente de aprovacao."
	dbSelectArea(cAlias)
	Return
EndIf

If lF560APROV
	lAprova := ExecBlock("F560APROV",.F.,.F.)
EndIf

If lFINCTAL .AND. !(SEU->EU_STATUS $ '03|05') .And. !lAprova//Somente adiantamento aprovados
	Help(" ",1,"Fa560NAPROV",,STR0082,1,0) //"Adiantamento pendente de aprovacao."
	dbSelectArea(cAlias)
	Return
EndIf

/*
 * NotificaГЦo ao efetuar prestaГЦo de contas
 */
If lIntUMovMe
		If SEU->EU_STAUMOV == '1'
			Help(" ",1,"Fa560uMovPen",,STR0131,1,0) //"Adiantamento pendente de envio para prestaГЦo de contas no aplicativo mobile uMov.me. Em caso de prestaГЦo de contas efetuado mesmo assim, este adiantamento nЦo serА enviado para prestaГЦo de contas pelo aplicativo mobile."
		ElseIf SEU->EU_STAUMOV == '2'
			Help(" ",1,"Fa560uMovCam",,STR0132,1,0) //"Adiantamento enviado para prestaГЦo de contas no aplicativo mobile uMov.me. Em caso de prestaГЦo de contas efetuado mesmo assim, no sincronizo, as informaГУes da prestaГЦo de contas pelo aplicativo mobile serЦo descartadas."
		ElseIf SEU->EU_STAUMOV == '3'
			Help(" ",1,"Fa560uMovRet",,STR0133,1,0) //"Adiantamento com prestaГЦo de contas retornada do aplicativo mobile uMov.me. NЦo И possМvel efetuar a prestaГЦo de contas novamente."
			dbSelectArea(cAlias)
			Return
		EndIf
	EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Faz a montagem do aHeader a partir dos campos SX3.           Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cCampos := "EU_NRREND|EU_HISTOR|EU_FORNECE|EU_LOJA|EU_NOME|EU_CGC|EU_EMISSAO|EU_NRCOMP|EU_VALOR|EU_CONTA|EU_CCD|EU_CCC|EU_ITEMD|EU_ITEMC|"

If lMovEnt05
	cCampos += "EU_EC05DB|EU_EC05CR|"
EndIf

If lMovEnt06
	cCampos += "EU_EC06DB|EU_EC06CR|"
EndIf

If lMovEnt07
	cCampos += "EU_EC07DB|EU_EC07CR|"
EndIf

If lMovEnt08
	cCampos += "EU_EC08DB|EU_EC08CR|"
EndIf

If lMovEnt09
	cCampos += "EU_EC09DB|EU_EC09CR|"
EndIf


//Pe para possibilitar a inclusao de outros campos na tela de PrestaГЦo de Cotnas
If ExistBlock("FT560CPC")
	aCmpPE := ExecBlock("FT560CPC",.f.,.f.)
	For nY = 1 to Len(aCmpPE)
		If SEU->(FieldPos(aCmpPE[nY])) > 0 .and. !(aCmpPE[nY] $ cCampos )
			cCampos += aCmpPE[nY] + "|"
		EndIf
	Next nY
Endif

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao com o Modulo de Transporte (TMS)Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
If IntTMS() .And. nModulo == 43
	cCampos += "EU_FILORI|EU_VIAGEM|EU_CODVEI|EU_DESVEI|EU_CODDES|"
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Posiciona no DTQ (Viagem), pois, o SXB do campo Cod. Veiculo,Ё
	//Ё filtra somente os veiculos utilizados na Viagem posicionada  Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	DTQ->(dbSetOrder(2))
	DTQ->(MsSeek(xFilial('DTQ')+ Left(cNroAnt,Len(DTQ->(DTQ_FILORI+DTQ_VIAGEM)))   ))

EndIf

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao com o Modulo SIGAPFS/SIGAJURI   Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
If lCXJurFin
	//Se foi um movimento de adiantamento juridico
	If SEU->EU_TIPO == '01' .AND. SEU->EU_DESPJUR == '1'
		cCampos += "EU_TIPDESP|EU_PROFISS|EU_NATUREZ|EU_FATJUR|EU_CLIENTE|EU_LOJACLI|EU_CASO|EU_ESCRIT|EU_GRPJUR|EU_MEMDSCR|"
	Endif
Endif

//Ponto de entrada para adicao de campos na getdados.
If lF560Cpos
	cCampos += ExecBlock("F560CPOS",.F.,.F.,cCampos)
Endif

dbSelectArea("SX3")
dbSetOrder(1)
dbSeek(cAlias)
While !EOF() .And. (x3_arquivo == cAlias)
	IF X3USO(x3_usado) .AND. cNivel >= x3_nivel .And. Trim(x3_campo)$ cCampos
		nUsado++
        AADD(aHeader,{ TRIM(X3Titulo()) ,;
        AllTrim(SX3->X3_CAMPO),;
        SX3->X3_PICTURE ,;
        SX3->X3_TAMANHO ,;
        SX3->X3_DECIMAL ,;
        SX3->X3_VALID ,;
        SX3->X3_USADO ,;
        SX3->X3_TIPO ,;
        SX3->X3_ARQUIVO ,;
        SX3->X3_CONTEXT,;
        SX3->X3_RELACAO } )
	Endif
	If Trim(x3_campo) == "EU_NUM"
		bNumRel := X3_RELACAO
	EndIf
	dbSkip()
Enddo

//здддддддддддддддддддддддддддддддддддддд©
//Ё Faz a montagem do aCols              Ё
//юдддддддддддддддддддддддддддддддддддддды
dbSelectArea(cAlias)
dbSetOrder(3)  // filial+nroadia
aadd(aCols,Array(nUsado+1))

For ny := 1 to Len(aHeader)
	If ( aHeader[ny][10] != "V")
		aCols[1][ny] := CriaVar(aHeader[ny][2])
	EndIf
	aCols[1][nUsado+1] := .F.
Next ny

dbSelectArea(cAlias)
dbSetOrder(1)       // volta ao indice original
dbGoto( nRecnoSEU)  // volta ao registro do adiantamento
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Montagem do cabecalho e getdados                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Private fa560Cod := SEU->EU_CAIXA
Private nFa560sld:= SEU->EU_SLDADIA
Private fa560Nro := SEU->EU_NUM
Private nSldOrig := SEU->EU_SLDADIA
Private fa560Seq := ""
Private dDataAdi := SEU->EU_EMISSAO
Private fa560Apro:= SEU->EU_CODAPRO
Private fa560Moed:= SEU->EU_MOEDA
Private fa560Ben := SEU->EU_BENEF

If lF560Auto
	aValidGet:= {}
	If Len(aAutoItens) > 1	// Verifica se tem mais de 1 prestacao de ctas para equalizar aCols
		For nY := 2 to Len(aAutoItens)
			If ValType(aAutoItens[nY]) == "A"
				Aadd(aCols,aClone(aCols[nY-1]))
			Else
				lContinua := .F.
				Exit
			EndIf					
		Next nY++
	EndIf
	If lContinua
		For nX := 1 to Len(aCols)
			For nY := 1 to Len(aAutoItens[nY])
				If (nT := aScan(aAutoItens[nX],{|x| x[1]=aHeader[nY,2]}) ) > 0
					aCols[nX,nY] := aAutoItens[nX,nT][2]
					Aadd(aValidGet,{aAutoItens[nX,nT][1] ,aAutoItens[nX,nT][2],,.t.})
					If aAutoItens[nX,nT][1] == "EU_VALOR"
						nFa560sld -= aCols[nX,nY]
					EndIf
				EndIf
			Next nY
		Next nX
		// Valida Gets
		If !SEU->(MsVldGAuto(aValidGet))
			Return .F.
		Else
			nOpca := 1
		EndIf
	EndIf
EndIf

fa560Seq := Fa570SeqAtu(fa560Cod)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se ja existem comprovantes, pergunta se deseja fechar o adiantamento Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea(cAlias)
dbSetOrder(3)  // filial+nroadia
If dbSeek( xFilial()+ cNroAnt)
	// "Deseja fechar o adiantamento e transferir o saldo remanescente?","Adiantamento com comprovantes ja inclusos"
	If nSldOrig >0
		If lF560Auto
			If (nT := ascan(aAutoCab,{|x| x[1]='EU_SLDREM'}) ) > 0
	   			lRepSald := aAutoCab[nT,2]
	   		EndIf
		Else
			lRepSald := MsgYesNo(OemToAnsi(STR0023),OemToAnsi(STR0024))
		EndIf
		If lRepSald
			If lF560ACESSO
				lAcesso := ExecBlock("F560ACESSO",.F.,.F.)							
			EndIf	
			
			If lAcesso	
			   //MsgYesNo(OemToAnsi(STR0023),OemToAnsi(STR0024))
				Fa560FcAdi(nRecnoSEU,nSldOrig,nSaveSx8,,,,,,,lRepSald)
	
				// CONTABILIZAгцO DO REGISTRO GERADO DO FECHAMENTO E TRANSFERENCIA DO SALDO REMANESCENTE
				If lPadrao579 .And. lGeraLanc
					If nHdlPrv <= 0
						nHdlPrv +=HeadProva(cLote,"FINA560",Subs(cUsuario,7,6),@cArquivo)
					Endif
					If  nHdlPrv > 0 .And. Empty(SEU->EU_LA)
						nTotal	:=	DetProva(nHdlPrv,"579","FINA560",cLote)
					Endif
					RodaProva(nHdlPrv,nTotal)
				Endif
	
				If nHdlPrv > 0
					If cA100Incl(cArquivo,nHdlPrv,3,cLote,lDigita,lAglutina)
						Reclock("SEU",.F.)
						Replace EU_LA	With "S"
						MsUnLock()
	
						//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
						//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						PcoDetLan("000359","02","FINA560")
					Endif
				Endif
	
				dbSelectArea(cAlias)
				Return /*Function Fa560Adian*/
			EndIf
		EndIf
	EndIf
EndIf

If Len(aRotina) == 2
	//Tratar aRotina para compatibilizar com a execuГЦo MsGetDados
	aRotina := { { STR0056, "FA560CpFis",0 ,3 },;  		//"Comprovantes Fiscais"
	       	     { STR0057, "FA560Adian",0 ,4 },;      	//"Outros Comprovantes"
	       	     { STR0057, "FA560Adian",0 ,4}}       	//"Outros Comprovantes"
EndIf
dbSelectArea(cAlias)
dbSetOrder(1)       // volta ao indice original
dbGoto( nRecnoSEU)  // volta ao registro do adiantamento

dbSelectArea("SET")
dbSetOrder(1)
dbSeek( xFilial()+SEU->EU_CAIXA)

dbSelectArea(cAlias)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicia lancamento no PCO                                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoIniLan("000359")

cCaption :=	SEU->EU_CAIXA	+ " - " +SET->ET_NOME
nOpca	 := If(lF560Auto,nOpca,0)
If !lF560Auto
	DEFINE FONT oFont NAME "Arial" SIZE 10,12 BOLD
	
	aSize := MSADVSIZE()
	
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0015)+" "+fa560Nro From aSize[7],0 To aSize[6],aSize[5] OF oMainWnd PIXEL
	
	oDlg:lMaximized := .T.
	
	oTimer:= TTimer():New((nTimeOut-nTimeMsg),{|| MsgTimer(nTimeMsg,oDlg) },oDlg) // Ativa timer
	oTimer:Activate()
	
	oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,20,20,.T.,.T. )
	oPanel:Align := CONTROL_ALIGN_TOP
	
	@ 002, 003 SAY OemToAnsi(STR0016)+ " : " PIXEL OF oPanel FONT oFont COLOR CLR_GRAY   //"Caixinha"
	@ 002, 050 SAY cCaption 				PIXEL OF oPanel FONT oFont
	@ 002, 200 SAY OemToAnsi(STR0017)  	PIXEL OF oPanel FONT oFont COLOR CLR_GRAY  //"Saldo : "
	@ 002, 280 SAY oSaldo VAR nFa560sld PICTURE PesqPict("SEU","EU_SLDADIA") ;
													PIXEL OF oPanel FONT oFont  ;
													COLOR If(nFa560sld<0,CLR_RED,CLR_BLUE)
	
	@ 011, 003 SAY OemToAnsi(STR0043) 	PIXEL OF oPanel FONT oFont COLOR CLR_GRAY  //"Data do Adiantamento:"
	@ 011, 100 SAY dDataAdi					PIXEL OF oPanel FONT oFont
	oGet := MSGetDados():New(34,5,128,315,3,"FA560LinOK","FA560TudOK",,.T.,,,,300)
	oGet:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT
	
	
	If lPanelFin
		ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,{||nOpca:=1,if(oGet:TudoOk(),oDlg:End(),nOpca := 0)},{||oDlg:End()})
	Else
		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpca:=1,if(oGet:TudoOk(),oDlg:End(),nOpca := 0)},{||oDlg:End()})
	Endif
EndIf

If nOpcA == 1
	//Se houve prestacao de contas
	If lContinua .and. nFa560Sld != nSldOrig
		lGravaOk := FA560Grava(cAlias,nRecnoSEU,nSaveSx8,,cBenef)

		If !lGravaOk
			Help(" ",1,"A560NAOREG")
		EndIf

	Else //Se nao houve prestacao de contas posso devolver o dinheiro ao caixa
		If (nFa560Sld > 0) .And. !lF560Auto .And.;
			(MsgYesNo(OemToAnsi(STR0021),OemToAnsi(STR0022))) 	//"Deseja transferir o saldo remanescente para o caixinha?","Adiantamento com saldo remanescente"
			
			If lF560ACESSO
				lAcesso := ExecBlock("F560ACESSO",.F.,.F.)
			EndIf 	
			
			If lAcesso					
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Atualiza informacoes do registro de adiantamento            Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				dbSelectArea("SEU")
				dbGoto(nRecnoSEU)
	
				If lPadrao579 .And. lGeraLanc
					If nHdlPrv <= 0
						LoteCont("FIN")
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Inicializa Lancamento Contabil                                   Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
							nHdlPrv := HeadProva( cLote,;
							                      "FINA560" /*cPrograma*/,;
							                      Substr( cUsuario, 7, 6 ),;
							                      @cArquivo )
					Endif
					If  nHdlPrv > 0
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Prepara Lancamento Contabil                                      Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
							If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
								aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
							Endif
							nTotal += DetProva( nHdlPrv,;
							                    "579" /*cPadrao*/,;
							                    "FINA560" /*cPrograma*/,;
							                    cLote,;
							                    /*nLinha*/,;
							                    /*lExecuta*/,;
							                    /*cCriterio*/,;
							                    /*lRateio*/,;
							                    /*cChaveBusca*/,;
							                    /*aCT5*/,;
							                    /*lPosiciona*/,;
							                    @aFlagCTB,;
							                    /*aTabRecOri*/,;
							                    /*aDadosProva*/ )
						AAdd(aSEUCont,SEU->(RECNO()))
						Reclock("SEU",.F.)
						Replace EU_LA	With "S"
						MsUnLock()
					Endif
				EndIf
	
				If nHdlPrv > 0 .And. nTotal > 0
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Efetiva Lan┤amento Contabil                                      Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						RodaProva( nHdlPrv,;
						           nTotal )
						If cA100Incl( cArquivo,;
							           nHdlPrv,;
							           3 /*nOpcx*/,;
							           cLote,;
							           lDigita,;
							           lAglutina /*lAglut*/,;
							           /*cOnLine*/,;
							           /*dData*/,;
							           /*dReproc*/,;
							           @aFlagCTB,;
							           /*aDadosProva*/,;
							           aDiario )
								If !lUsaflag
									Reclock("SEU",.F.)
									Replace EU_LA	With "S"
									MsUnLock()
								Endif
						Endif
						aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
				EndIf
				Fa560FcAdi(nRecnoSEU,nFa560Sld,nSaveSx8)
			EndIf
		Endif
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Ponto de entrada F560ADIA              				 Ё
	//Ё Destina-se a gravacoes complementares da exclusao  Ё
	//Ё do movimento do caixinha 							 Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ExistBlock("F560ADIA")
		ExecBlock("F560ADIA",.F.,.F.)
	Endif
Endif
MsUnLockAll()

//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Limpa array da IntegraГЦo com TMS x MNT			 	 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
aFolTms   	:= {}
aFolTmsBkp 	:= {}



If lFa550Adia
	ExecBlock("FA550ADF",.F.,.F.,{nOpca==1})
Endif

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Finaliza a gravacao dos lancamentos do SIGAPCO            Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoFinLan("000359")

dbSelectArea(cAlias)
Return /*Function Fa560Adian*/


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560LinOkЁ Autor Ё Leonardo Ruben        Ё Data Ё 15.06.00 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Critica se a linha digitada esta' Ok                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁfA560LinOk()                                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Fina560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function FA560LinOk()
Local nx
Local lRet 		 := .T.
Local lDeleted  := .F.
Local aArea		 := GetArea()
Local aAreaDT7
Local nValor	 := 0
Local lCpoCus
Local nPosValor := 0
Local lUtiCus   := .T.
Local lCXJurFin	:= FVldJurxFin()

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao com o Modulo de Transporte (TMS)Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
If IntTMS()
	aAreaDT7 := DT7->(GetArea())
 	lCpoCus  := .T.
EndIf

nPosValor := Ascan( aHeader, {|x| AllTrim(x[2])=="EU_VALOR" } )

If ValType(aCols[n,Len(aCols[n])]) == "L"
	lDeleted := aCols[n,Len(aCols[n])]      // Verifica se esta Deletado
EndIf


If !lDeleted
	If ExistBlock("F560LOK")
		lRet := ExecBlock("F560LOK",.F.,.F.)
	Endif

	If lRet
		For nx := 1 To Len(aHeader)
			If Trim(aHeader[nx][2]) == "EU_EMISSAO" .AND. n == Len(aCols)
				If aCols[n][nx] < dDataAdi
					MsgStop(STR0042,STR0040) //"Data Comprovante nao pode ser menor que o adiantamento" ##"DATA"
					lRet := .F.
					Exit
			    EndIf
			Endif


			If lRet .And. Trim(aHeader[nx][2]) == "EU_VALOR" .AND. n == Len(aCols)
				If Empty(aCols[n][nx]) .and. n >= 1
					Help(" ",1,"FA560VALOR")
					lRet := .F.
					Exit
				Else
					nValor := aCols[n][nx]
				Endif
			Endif
			If !lRet
				Exit
			Endif
		Next nx

		//здддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Integracao com o Modulo de Transporte (TMS)Ё
		//юдддддддддддддддддддддддддддддддддддддддддддды
		If lRet .And. IntTMS() .And. nModulo == 43
			If lCpoCus .And. !Empty(GdFieldGet('EU_CODDES',n))
				lUtiCus := .T.
		   		DT7->(dbSetOrder(1))
			   	If DT7->(MsSeek(xFilial('DT7')+GdFieldGet('EU_CODDES',n))) .And. DT7->DT7_UTICUS == '2' //-- NЦo
					lUtiCus := .F.
				EndIf
			EndIf
			If lUtiCus
    				If Empty(GdFieldGet('EU_CODVEI',n))  .And. Empty(GdFieldGet('EU_VIAGEM',n))
					Help('',1,'FA560NOINF')  // Informe o No. da Viagem ou o Codigo do Veiculo ...
				   	lRet := .F.
			   	EndIf
			Endif
			If !Empty(GdFieldGet('EU_CODVEI', n)) .And. (!Empty(GdFieldGet('EU_FILORI', n)) .Or. ;
				!Empty(GdFieldGet('EU_VIAGEM', n)) )
				Help('',1,'FA560ESCOL') //A Viagem e o Veiculo nao poderao ser informados simultaneamente ...
			   	lRet := .F.
			EndIf
		EndIf

		//Caixinha x Juridico
		//Validacao especifica para integracao caixinha Financeiro x SigaPFS
		If lRet .and. lCXJurFin .and. SEU->EU_DESPJUR == '1'

			cFatJur := GdFieldGet('EU_FATJUR', n)

			If Empty(GdFieldGet('EU_PROFISS', n))
				Help(" ",1,"F560DJURP1",,STR0090+CRLF+STR0091,1,0)	//'Por tratar-se de uma prestaГЦo de contas de adiantamento juridico, o campo abaixo tem seu preenchimento como obrigatСrio.'###'Prof.Favorec'
				lRet := .F.
			Endif

			If lRet .and. Empty(GdFieldGet('EU_TIPDESP', n))
				Help(" ",1,"F560DJURP2",,STR0090+CRLF+STR0092,1,0)  //'Por tratar-se de uma prestaГЦo de contas de adiantamento juridico, o campo abaixo tem seu preenchimento como obrigatСrio.'###'Tipo Despesa'
				lRet := .F.
			Endif

			If lRet

				cCliente := GdFieldGet('EU_CLIENTE', n)
				clojaCli := GdFieldGet('EU_LOJACLI', n)
				cCaso	 := GdFieldGet('EU_CASO', n)
				cEscrit  := GdFieldGet('EU_ESCRIT', n)
				cGrpJur  := GdFieldGet('EU_GRPJUR', n)
				cDescri  := GdFieldGet('EU_MEMDSCR', n)

				If cFatJur == '1'	//Despesa cobrada do cliente

					If Empty(cCliente) .OR. Empty(cLojaCli) .OR. Empty(cCaso) .OR. Empty(cDescri)
						Help(" ",1,"F560DJURP2",,STR0093+CRLF+STR0094+CRLF+STR0095+CRLF+STR0096+CRLF+"DescriГЦo",1,0) //'Quando a despesa juridica for reembolsАvel do cliente, И obrigatСrio o preenchimento dos campos abaixo:'###'Cliente Jur.'###'Loja Cliente'###'Caso'
						lRet := .F.
					Endif

    			Else

					SED->(dbSetOrder(1))
					If MsSeek(xFilial("SED")+GdFieldGet('EU_NATUREZ', n))
						If SED->ED_ESCRIT == '1'
							If Empty(cEscrit)
								Help(" ",1,"F560DJURP3",,STR0097+CRLF+STR0098,1,0)	//'Devido a configuraГЦo da Natureza o campo abaixo tem seu preenchimento como obrigatСrio.'###'EscritСrio'
								lRet := .F.
	                    	ElseIf SED->ED_GRPJUR == '1' .and. Empty(cGrpJur)
								Help(" ",1,"F560DJURP4",,STR0097+CRLF+STR0099,1,0)	//'Devido a configuraГЦo da Natureza o campo abaixo tem seu preenchimento como obrigatСrio.'###'Grupo Jurid.'
								lRet := .F.
							Endif
						Endif
					Endif
				Endif

				If lRet
					//Se a despesa nao vai ser cobrada do cliente, limpo os campos de Cliente, Loja e Caso
					If cFatJur == '2' .and. (!Empty(cCliente) .OR. !Empty(cLojaCli) .OR. !Empty(cCaso))
						GDFieldPut('EU_CLIENTE', "", n)
						GDFieldPut('EU_LOJACLI', "", n)
						GDFieldPut('EU_CASO'   , "", n)
					Endif

					//Se a despesa vai ser cobrada do cliente, limpo os campos de escritorio e grupo juridico
					If cFatJur == '1' .and. (!Empty(cEscrit) .OR. !Empty(cGrpJur))
						GDFieldPut('EU_ESCRIT', "", n)
						GDFieldPut('EU_GRPJUR', "", n)
					Endif
				Endif
			Endif
		Endif

	EndIf

	// Remonta o saldo do adiantamento de acordo com o aCols
	If lRet
		nFa560sld := nSldOrig
		For nx := 1 To Len(aCols)
			If !aCols[nx,Len(aCols[nx])]  // not deleted
				nFa560sld -= aCols[nx][nPosValor]
			EndIf
		Next nx
	Endif
Else
	GDFieldPut('EU_VALOR', 0, n)
EndIf


oSaldo:Refresh()
RestArea(aArea)
//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao com o Modulo de Transporte (TMS)Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
If IntTMS()
	RestArea(aAreaDT7)
EndIf

Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560TudOkЁ Autor Ё Leonardo Ruben        Ё Data Ё 15.06.00 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Critica se os comprovantes estao todos ok                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Objeto a ser verificado.                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Fina560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function FA560TudOk()
Local ny
Local nx
Local nMaxArray
Local lRet 		:= .T.
Local lDeleted 	:= .F.
Local nPosValor	:= Ascan( aHeader, {|x| AllTrim(x[2])=="EU_VALOR" } )
Local aArea		:= GetArea()
Local lVlPrtCM:= GetNewPar("MV_PCTCXMA","2")=="1"  // Permite prestacao de contas a maior no adiantamento

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё O processo de verificacao no array eh efetuado novamente pois existe a possibilidade   Ё
//Ё do usuario ter excluido um titulo, ter lancado outros e antes do momento de confirmar  Ё
//Ё ter voltado a habilitar o titulo excluido, ai eh necessario revalidar o seu conteudo   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
nValorPrest := 0
For nx := 1 To Len(aCols)
	If !aCols[nx,Len(aCols[nx])]  // not deleted
		nValorPrest := nValorPrest + aCols[nx][nPosValor]
	EndIf
Next nx

If lVlPrtCM
 	If nValorPrest > (SET->ET_SALDO + nSldOrig)
  	   Help(" ",1,"F560PDMAAD",,STR0049+chr(10)+STR0050,1,1) // "A prestacao de contas supera" # "o saldo limite do caixinha"
       lRet := .F.
 	EndIf

ElseIf nFa560sld < 0     // saldo negativo
	Help(" ",1,"FA560SLDAD")
	lRet := .F.
EndIf

If lRet .And. ExistBlock("F560TOK")
	lRet := ExecBlock("F560TOK",.F.,.F.)
Endif

If lRet
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё verifica se o ultimo elemento do array esta em branco        Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	nMaxArray := Len(aCols)

	For ny = 1 to nMaxArray
		If ValType(aCols[ny,Len(aCols[ny])]) == "L"
			lDeleted := aCols[ny,Len(aCols[ny])]      // Se esta Deletado
		End
		If !lDeleted
			If Empty(aCols[ny][nPosValor]) .and. Len(aCols) >= 1
				Help(" ",1,"FA560VALOR")
				lRet := .F.
			Endif
		Endif
	Next ny

Endif

If UsaSeqCor()
	cCodDiario := CTBAVerDia()
Endif

RestArea(aArea)
Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560GravaЁAutor  Ё Leonardo Ruben        Ё Data Ё 15.06.00 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Grava os itens do aCols - Caixinha                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁfA560Grava(ExpC1,ExpN1)                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo			    			         Ё╠╠
╠╠Ё			 Ё ExpN1 = Nёmero do registro 				         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Fina560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function FA560Grava(cAlias,nRecnoSEU,nSaveSx8,aCompFis,cBenef)

Local nx			:= 0
Local ny			:= 0
Local nValor		:= 0
Local aArea			:= GetArea()
Local lSeek			:= .f.
Local nSldSobra		:= 0
Local nOrder		:= 0
Local cNroAdia		:= ""
Local cNumRel1		:= ""
Local cNumRel2		:= ""
Local aSEUCont		:={}
Local nHdlPrv		:= 0
Local lDigita		:= Iif(mv_par01 ==1,.T.,.F.)
Local lAglutina		:= Iif(mv_par02 ==1,.T.,.F.)
Local lGeraLanc		:= Iif(mv_par03 ==1,.T.,.F.)
Local cArquivo
Local lPadrao572	:= VerPadrao("572")
Local lPadrao579	:= VerPadrao("579")
Local nTotal		:= 0
Local nSaldoAdi		:= 0
Local i := 1
Local lRepSald := .F.

Local aFlagCTB		:= {}
Local lUsaFlag		:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)

//зддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё variaveis para IntegraГЦo TMSx x MNT  			 Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддды
Local lGerOs 		:= .F.
Local lMntTms 		:= ( SuperGetMV( "MV_NGMNTMS",,'N') == 'S' )//-- Ativa integracao TMS X MNT.
Local cSerDesp  	:= ( SuperGetMV('MV_SERDESP',,'' ) )
Local aCab          := {}
Local aItem         := {}
Local cProduto      := GetNewPar("MV_FINPDRG","RG499")  //Produto GenИrico para PrestaГЦo de Contas (Rendicion de Gastos).
Local cTES		    := GetNewPar("MV_FINTERG","499") 	//TES genИrico para PrestaГЦo de Contas (Rendicion de Gastos).
Local cCondPag      := GetNewPar("MV_FINCPRG","499") 	//CondiГЦo de Pagamento (Rendicion de Gastos).

Local lCXJurFin	:= FVldJurxFin()
Local luMovMe		:= .F. // Flag de Adiantamento com integraГЦo uMov.me
Local lF560ACESSO := ExistBlock("F560ACESSO")  
Local lF560GRV2   := ExistBlock("F560GRV2")  
Local lF560PCCX	  := ExistBlock("F560PCCX")
Local lF560DEL5   := ExistBlock("F560DEL5")
Local lAcesso := .T.

DEFAULT aCompFis    := {}
DEFAULT cBenef		:= "."

PRIVATE cLote 		:= ""
PRIVATE aDiario 	:= {}
PRIVATE lMSErroAuto := .F.
PRIVATE lMSHelpAuto := .F. // para mostrar os erros na tela
PRIVATE cUfOrig		:= "" // usado dentro do MATA101n (Gatilho) 

lF560Auto := If( TYPE("lF560Auto") == "U",.F.,lF560Auto )

If Len(aCompFis) > 0

	SA2->(dbSetOrder(1))
	SA2->(dbSeek(xFilial("SA2")+aCompFis[1][3]+aCompFis[1][4]))

	//Posicionar ou criar Codigo do Produto definido do parametro MV_FINPDRG
	SB1->(dbSetorder(1))
	If !SB1->(dbSeek(xFilial("SB1")+cProduto))
		Fa560CProd(cProduto)
    EndIf
    cUM    := SB1->B1_UM
    cSegUM := SB1->B1_SEGUM
    cLocal := SB1->B1_LOCPAD

	//Posicionar ou criar TES definido do parametro MV_FINTERG
	SF4->(dbSetOrder(1))
	If !SF4->(dbSeek(xFilial("SF4")+cTES))
		Fa560CTes(cTES)
	EndIf
    cCFO := SF4->F4_CF

	//Posicionar ou criar CondiГЦo de Pagamento definido do parametro MV_FINCPRG
	SE4->(dbSetOrder(1))
	If !SE4->(dbSeek(xFilial("SE4")+cCondPag))
		Fa560CCond(cCondPag)
	EndIf

    nValMerc    := aCompFis[2][5]      //ValMerc
    nValIVA 	:= aCompFis[3][1]      //IVA
    nPercIB3895 := aCompFis[3][2]      //IBP
    nPercIVA    := aCompFis[3][3]      //IVP
    nPercIB672  := aCompFis[3][4]      //IB2
    nPercSUSS   := aCompFis[3][5]      //PGA
    nOutraPerc  := aCompFis[3][6]      //IV3

    cConta   := aCompFis[3][7]	//Conta Contabil
	aCab := {}
    AADD(aCab,{"F1_DOC"    ,aCompFis[1][1] , Nil})   // NUMERO DA NOTA
    AADD(aCab,{"F1_SERIE"  ,aCompFis[1][2] , Nil})   // SERIE DA NOTA
    AADD(aCab,{"F1_FORNECE",aCompFis[1][3] , Nil})   // FORNECEDOR  
    AADD(aCab,{"F1_LOJA"   ,aCompFis[1][4] , Nil})   // LOJA DO FORNECEDOR
    If cPaisLoc == "PER" 
		AADD(aCab,{"F1_TPDOC"  ,aCompFis[1][7] , Nil})   // TIPO DE COMPROVANTE - PERU  
	EndIf
    AADD(aCab,{"F1_TIPO"   ,"N"			   , Nil})   // TIPO DA NF
    AADD(aCab,{"F1_EMISSAO",aCompFis[1][5] , Nil})       
    AADD(aCab,{"F1_DESPESA",aCompFis[2][1] , Nil})
    AADD(aCab,{"F1_DESCONT",aCompFis[2][2] , Nil})
    AADD(aCab,{"F1_FRETE"  ,aCompFis[2][3] , Nil})
    AADD(aCab,{"F1_SEGURO" ,aCompFis[2][4] , Nil})
    AADD(aCab,{"F1_VALMERC",aCompFis[2][5] , Nil})               
    AADD(aCab,{"F1_VALBRUT",aCompFis[2][6] , Nil})    
    AADD(aCab,{"F1_COND"   ,cCondPag	   , Nil})       
    AADD(aCab,{"F1_MOEDA"  ,fa560Moed	   , Nil})               
    AADD(aCab,{"F1_TXMOEDA",Iif(fa560Moed > 1, RecMoeda(aCompFis[1][5],fa560Moed),1), Nil})
    AADD(aCab,{"F1_EST"	   ,SA2->A2_EST	   , Nil})
    AADD(aCab,{"F1_ESPECIE",If(cPaisLoc=="BRA","NFE","NF"),Nil})	// NOTA FISCAL DE ENTRADA
	AADD(aCab,{"F1_TIPODOC","10"		   , Nil})
	AADD(aCab,{"F1_STATUS" ,"A"		  	   , Nil})
	AADD(aCab,{"F1_NATUREZ",aCompFis[1][6] , Nil})
	If cPaisLoc == "ARG" 
		AADD(aCab,{"F1_PROVENT"	   ,SA2->A2_EST	   , Nil})
	EndIf
    If nValIVA > 0  
		aImposto := Fa560GetImpos("IVA","SF1")
		AADD(aCab,{aImposto[1]  ,nValMerc      ,Nil}) 
		AADD(aCab,{aImposto[3]  ,nValIVA       ,Nil})
    EndIf	 
    If nPercIB3895 > 0  
		aImposto := Fa560GetImpos("IBP","SF1")
		AADD(aCab,{aImposto[1]  ,nValMerc      ,Nil}) 
		AADD(aCab,{aImposto[3]  ,nPercIB3895   ,Nil})
    EndIf
    If nPercIVA > 0  
		aImposto := Fa560GetImpos("IVP","SF1")
		AADD(aCab,{aImposto[1]  ,nValMerc      ,Nil}) 
		AADD(aCab,{aImposto[3]  ,nPercIVA		,Nil})
    EndIf           
    If nPercIB672 > 0  
		aImposto := Fa560GetImpos("IB2","SF1")
		AADD(aCab,{aImposto[1]  ,nValMerc      ,Nil}) 
		AADD(aCab,{aImposto[3]  ,nPercIB672	,Nil})
    EndIf           
    If nPercSUSS > 0  
		aImposto := Fa560GetImpos("PGA","SF1")
		AADD(aCab,{aImposto[1]  ,nValMerc      ,Nil}) 
		AADD(aCab,{aImposto[3]  ,nPercSUSS		,Nil})
    EndIf           
    If nOutraPerc > 0  
		aImposto := Fa560GetImpos("IV3","SF1")
		AADD(aCab,{aImposto[1]  ,nValMerc   ,Nil}) 
		AADD(aCab,{aImposto[3]  ,nOutraPerc	,Nil})
    EndIf           

    SF4->(dbSetOrder(1))              
    SF4->(dbSeek(xFilial("SF4")+cTES))
    cCFO     := SF4->F4_CF

    aItens := {}
	aItem  := {}
	AADD(aItem,{"D1_ITEM"     ,"0001"			,Nil})  // Item da NF
	AADD(aItem,{"D1_COD"      ,cProduto			,Nil})  // Codigo do produto
   	AADD(aItem,{"D1_UM"       ,cUM		        ,Nil})  // Unidade do produto
   	AADD(aItem,{"D1_VUNIT"    ,aCompFis[2][5]	,Nil})  // Valor unitario do item
    AADD(aItem,{"D1_QUANT"    ,1		        ,Nil})  // Quantidade do produto
  	AADD(aItem,{"D1_OPER"     ,"51"			    ,Nil})  // CСdigo de OperaГЦo    ADMIN	
	AADD(aItem,{"D1_TES"      ,cTES		        ,Nil})  // TES                                            
   	AADD(aItem,{"D1_CF"       ,cCFO			    ,Nil})  // Classificacao Fiscal                                                
	AADD(aItem,{"D1_CONTA"    ,aCompFis[3][7]   ,Nil})
	AADD(aItem,{"D1_FORNECE"  ,aCompFis[1][3]   ,Nil})
	AADD(aItem,{"D1_LOJA"     ,aCompFis[1][4]   ,Nil})
	AADD(aItem,{"D1_LOCAL"    ,cLocal           ,Nil})
	AADD(aItem,{"D1_DOC"      ,aCompFis[1][1]   ,Nil})
	AADD(aItem,{"D1_SERIE"    ,aCompFis[1][2] 	,Nil})
	AADD(aItem,{"D1_EMISSAO"  ,aCompFis[1][5]	,Nil})
	AADD(aItem,{"D1_DTDIGIT"  ,dDataBase        ,Nil})               
	AADD(aItem,{"D1_TIPO"     ,"N"				,Nil})     	
	AADD(aItem,{"D1_TIPODOC"  ,"10"				,Nil})
	AADD(aItem,{"D1_TOTAL"    ,aCompFis[2][5]   ,Nil})
   	AADD(aItem,{"D1_PEDIDO"   ,""               ,Nil})	// Pedido de compra
   	AADD(aItem,{"D1_ITEMPC"   ,""               ,".T."})	// Item do Pedido de compra                                                                          
    AADD(aItem,{"D1_ESPECIE"  ,If(cPaisLoc=="BRA","NFE","NF"),Nil})	// NOTA FISCAL DE ENTRADA 
	If cPaisLoc == "ARG" 
		AADD(aItem,{"D1_PROVENT"	   ,SA2->A2_EST	   , Nil})
	EndIf
    If nValIVA > 0  
		aImposto := Fa560GetImpos("IVA","SD1")
		AADD(aItem,{aImposto[1]  ,nValMerc      ,Nil})  
		AADD(aItem,{aImposto[2]  ,aImposto[4]   ,Nil})    	
		AADD(aItem,{aImposto[3]  ,nValIVA       ,Nil})
    EndIf	 
    If nPercIB3895 > 0  
		aImposto := Fa560GetImpos("IBP","SD1")
		AADD(aItem,{aImposto[1]  ,nValMerc      ,Nil}) 
		AADD(aItem,{aImposto[2]  ,aImposto[4]   ,Nil})    	
		AADD(aItem,{aImposto[3]  ,nPercIB3895   ,Nil})
    EndIf
    If nPercIVA > 0  
		aImposto := Fa560GetImpos("IVP","SD1")
		AADD(aItem,{aImposto[1]  ,nValMerc      ,Nil}) 
		AADD(aItem,{aImposto[2]  ,aImposto[4]   ,Nil})    	
		AADD(aItem,{aImposto[3]  ,nPercIVA		,Nil})
    EndIf           
    If nPercIB672 > 0  
		aImposto := Fa560GetImpos("IB2","SD1")
		AADD(aItem,{aImposto[1]  ,nValMerc      ,Nil}) 
		AADD(aItem,{aImposto[2]  ,aImposto[4]   ,Nil})    	
		AADD(aItem,{aImposto[3]  ,nPercIB672	,Nil})
    EndIf           
    If nPercSUSS > 0  
		aImposto := Fa560GetImpos("PGA","SD1")
		AADD(aItem,{aImposto[1]  ,nValMerc      ,Nil}) 
		AADD(aItem,{aImposto[2]  ,aImposto[4]   ,Nil})    	
		AADD(aItem,{aImposto[3]  ,nPercSUSS		,Nil})
    EndIf           
    If nOutraPerc > 0  
		aImposto := Fa560GetImpos("IV3","SD1")
		AADD(aItem,{aImposto[1]  ,nValMerc      ,Nil}) 
		AADD(aItem,{aImposto[2]  ,aImposto[4]   ,Nil})    	
		AADD(aItem,{aImposto[3]  ,nOutraPerc	,Nil})
    EndIf           
    AADD(aItens,ACLONE(aItem))

   	MsgRun(OemToAnsi(STR0078),,{||MSExecAuto({|x,y,z| MATA101N(x,y,z)},aCab,aItens,3)}) //"Grabando el comprobante fiscal"

    If lMSErroAuto  
		MostraErro()       
		RestArea(aArea)
		Return .F.
    EndIf
EndIf

Begin Transaction

For nx = 1 to Len(aCols)

	If ValType(aCols[nx,Len(aCols[nx])]) == "L"  /// Verifico se posso Deletar
		lDeleted := aCols[nx,Len(aCols[nx])]      /// Se esta Deletado
	EndIf

	For ny := 1 to Len(aHeader)
		If aHeader[ny][2] $ "EU_CCC|EU_CCD|EU_ITEMC|EU_ITEMD" .And. Empty(aCols[nx][ny])
			aCols[nx][ny] := SEU->&(aHeader[ny][2])
		EndIf
	Next ny

	If lIntUMovMe
		If SEU->EU_ENVUMOV == '1'
			luMovMe := .T.
			SEU->EU_STAUMOV := '4' // Encerrado
			SEU->EU_ENVUMOV := '3' // Cancelar Atividade (Mobile)
		EndIf
	Endif

	If !lDeleted
		lSeek := .f.
		If Len(aNroCols) >= nx
			lSeek := dbSeek( xFilial()+aNroCols[nx][1])
		EndIf
		//зддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Insere ou altera comprovantes do adiantamento   Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддды
		If !lSeek
			RecLock(cAlias,.T.)
			cNumRel1 := VerValNUM(&bNumRel)    // Numero sequencial/semaforo (x3_relacao)
			ConfirmSX8()
			cNumRel2 := VerValNUM(&bNumRel)    // Numero sequencial/semaforo (x3_relacao)
			ConfirmSX8()
			Replace EU_FILIAL  With xFilial("SEU")
			Replace EU_FILORI  With xFilial("SEU")
			Replace EU_NUM     With cNumRel1
			Replace EU_CAIXA   With fa560Cod
			Replace EU_DTDIGIT With dDataBase
			Replace EU_TIPO    With "00"         // Reembolso
			Replace EU_NROADIA With fa560Nro    // informa a que adiantamento se refere
			Replace EU_SEQCXA  With fa560Seq

			Replace EU_MOEDA   With fa560Moed

			Replace EU_STATUS	With "03"
			Replace EU_CODAPRO	With fa560Apro

			/*
			 * Adiantamentos que estЦo no processo de integraГЦo com a plataforma uMov.me
			 * Movimentos dos caixinha com Status 1-Pendente de Envio e 2-Em Campo
			 * Para as prestaГЦo feitas pelo ERP para movimentos com os status mencionados acima,
			 * a prestaГЦo de contas serА atualizada para encerrada.
			 */
			If lIntUMovMe
				If luMovMe
					SEU->EU_ENVUMOV := '1'
					SEU->EU_STAUMOV := '4'
				EndIf
			Endif
		Else
			RecLock(cAlias,.F.)
		EndIf

			//alimenta a diario ver se posiciona certo
		If UsaSeqCor()
			AADD(aDiario,{"SEU",SEU->(recno()),cCodDiario,"EU_NODIA","EU_DIACTB"})
		Endif

		//здддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza com informacoes do aCols  Ё
		//юдддддддддддддддддддддддддддддддддддды
		For ny = 1 to Len(aHeader)
			If aHeader[ny][10] # "V"
				SEU->(FieldPut( FieldPos( AllTrim(aHeader[ny][2]) ), aCols[nx][ny]))
			Endif
		Next ny

		/*
		 * Adiantamentos que estЦo no processo de integraГЦo com a plataforma uMov.me
		 * Movimentos dos caixinha com Status 1-Pendente de Envio e 2-Em Campo
		 * Para as prestaГЦo feitas pelo ERP para movimentos com os status mencionados acima,
		 * a prestaГЦo de contas serА atualizada para encerrada.
		 */
		If lIntUMovMe
			If luMovMe
				SEU->EU_ENVUMOV := '1'
				SEU->EU_STAUMOV := '4'
			EndIf
		Endif

		If Len(aCompFis) > 0
			If cPaisLoc $ "ARG/BOL/"
				RecLock("SEU",.F.)
				SEU->EU_NFISCAL := aCompFis[1][1]			
				SerieNFID("SEU",1,"EU_SERIE",aCompFis[1][5],"NF",aCompFis[1][2])			
				MsUnLock()
			EndIf
		EndIf

		//здддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Integracao com o Modulo de Transporte (TMS)Ё
		//юдддддддддддддддддддддддддддддддддддддддддддды
		If IntTMS() .And. nModulo == 43 
			If (!Empty(SEU->EU_CODVEI) .And. !Empty(SEU->EU_CODDES) .And. ;
					Posicione("DA3",1,xFilial("DA3")+SEU->EU_CODVEI,"DA3_FROVEI") == StrZero(1,Len(DA3->DA3_FROVEI)));																								
					.Or. ( !Empty(SEU->EU_FILORI) .And. !Empty(SEU->EU_VIAGEM) .And. !Empty(SEU->EU_CODDES))	
				// Grava o Custo de Transporte
				TMA250GrvSDG(cAlias,SEU->EU_FILORI,SEU->EU_VIAGEM,SEU->EU_CODDES,GdFieldGet('EU_VALOR',nX),nX,SEU->EU_CODVEI,,,,,,,SEU->EU_NUM)
			EndIf
			If lMntTms .And. !lGerOs
				// Grava as Ordens de ServiГo e Finaliza as mesmas.
				TmsMntGrOs ('2',cSerDesp,aFolTms,aFolTmsBkp,aCols,)
				lGerOs := .T.
			EndIf					
		EndIf

		//CAIXINHA x JURIDICO
		//Grava registro de pre-faturamento no SIGAPFS
		//Se caixinha integrado com SIGAPFS
		//Se eh despesa juridica
		//Se sera reembolsado pelo cliente
		//Se nao sofrera rateio
		If lCXJurFin .and. SEU->EU_TIPO == '00'

			RecLock("SEU",.F.)

			SEU->EU_DESPJUR := '1'
			SEU->EU_RATJUR  := '2'

			If SEU->EU_FATJUR == '1'

				cCodFat := GeraPFS(3,SEU->EU_NUM,,SEU->EU_CLIENTE,SEU->EU_LOJACLI,SEU->EU_CASO,SEU->EU_PROFISS,SEU->EU_EMISSAO,,SEU->EU_VALOR,SEU->EU_TIPDESP,SEU->EU_MEMDSCR)
				If !Empty(cCodFat)
					SEU->EU_SEQJUR  := cCodFat
				Else
					DisarmTransaction()
					Exit
				Endif
			Endif

			SEU->(MsUnLock())

		Endif

		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		PcoDetLan("000359","02","FINA560")

		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza informacoes do registro de adiantamento            Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		nValor := SEU->EU_VALOR
		If lPadrao572 .And. lGeraLanc

			If nHdlPrv <= 0
				LoteCont("FIN")
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Inicializa Lancamento Contabil                                   Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					nHdlPrv := HeadProva( 	cLote,;
											"FINA560" /*cPrograma*/,;
											Substr( cUsuario, 7, 6 ),;
											@cArquivo )
			Endif
			If  nHdlPrv > 0
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Prepara Lancamento Contabil                                      Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
						aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
					Endif
					nTotal += DetProva( nHdlPrv,;
										"572" /*cPadrao*/,;
										"FINA560" /*cPrograma*/,;
										cLote,;
										/*nLinha*/,;
										/*lExecuta*/,;
										/*cCriterio*/,;
										/*lRateio*/,;
										/*cChaveBusca*/,;
										/*aCT5*/,;
										/*lPosiciona*/,;
										@aFlagCTB,;
										/*aTabRecOri*/,;
										/*aDadosProva*/ )
				AAdd(aSEUCont,SEU->(RECNO()))
				Reclock("SEU",.F.)
				Replace EU_LA	With "S"
				MsUnLock()
			Endif
		EndIf
		If lF560GRV2
			ExecBlock("F560GRV2",.F.,.F.,{})
		Endif
		dbSelectArea("SEU")
		dbGoto(nRecnoSEU)       // posiciona no registro tipo adiantamento
		RecLock("SEU",.F.)
		Replace EU_SLDADIA With EU_SLDADIA-If(!lSeek,nValor,nValor-aNroCols[nx][2])
		MsUnlock()

 		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		PcoDetLan("000359","02","FINA560")
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Ponto de entrada para gravacao de dadaos complementares dos itens apos a prestacao Ё
		//Ё de contas do caixinha                                                              Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lF560PCCX
			ExecBlock("F560PCCX",.F.,.F.,{})
		Endif

	Else  // deletados

		// apenas aqueles itens que foram carregados inicialmente no aCols
		If Len(aNroCols) >= nx
			If dbSeek( xFilial()+aNroCols[nx][1])
				If lF560DEL5
					ExecBlock("F560DEL5",.F.,.F.,{})
				Endif
				RecLock(cAlias,.F.,.t.)
				dbDelete()
				MsUnlock()
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				PcoDetLan("000359","02","FINA560", .T.)
			EndIf

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Atualiza informacoes do registro de adiantamento            Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("SEU")
			dbGoto(nRecnoSEU)       // posiciona no registro tipo adiantamento
			RecLock("SEU",.F.)
			Replace EU_SLDADIA With EU_SLDADIA+aNroCols[nx][2]
			MsUnlock()

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			PcoDetLan("000359","02","FINA560")
		EndIf
	EndIf
	dbSelectArea(cAlias)
Next nx

nSaldoAdi:=EU_SLDADIA
If nSaldoAdi < 0
		RecLock("SEU",.F.)
		dbGoto(nRecnoSEU)       // posiciona no registro tipo adiantamento
		RecLock("SEU",.F.)
		MsUnlock()
		RegToMemory("SEU", .F., .T.)
		RecLock("SEU",.T.)

		bCampo := {|nCPO| Field(nCPO) }


		For i := 1 TO FCount()
			cNome:=EVAL(bCampo,i)
			Replace &cNome   With M->&(cNome)
		Next i

		Replace EU_FILIAL  	With xFilial("SEU")
		Replace EU_FILORI  	With xFilial("SEU")
		Replace EU_NUM     	With GetSXENum("SEU","EU_NUM")
		Replace EU_CAIXA   	With fa560Cod
		Replace EU_DTDIGIT 	With dDataBase
		Replace EU_TIPO    	With "03"         // COmp. de Adto.
		Replace EU_NROADIA 	With fa560Nro    // informa a que adiantamento se refere
		Replace EU_SEQCXA  	With fa560Seq
		Replace EU_VALOR  	With (nSaldoAdi*-1)
		Replace EU_HISTOR	with   STR0046 + " " + fa560Nro
		Replace EU_LA		With " "
		Replace EU_STATUS	With "01"

		/*
		 * Adiantamentos que estЦo no processo de integraГЦo com a plataforma uMov.me
		 * Movimentos dos caixinha com Status 1-Pendente de Envio e 2-Em Campo
		 * Para as prestaГЦo feitas pelo ERP para movimentos com os status mencionados acima,
		 * a prestaГЦo de contas serА atualizada para encerrada.
		 */
		If lIntUMovMe
			If luMovMe
				SEU->EU_ENVUMOV := '1'
				SEU->EU_STAUMOV := '4'
			EndIf
		Endif
		
		MsUnlock()

		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		PcoDetLan("000359","02","FINA560")

		//**********************************
		// Atulizacao do saldo do caixinha *
		//**********************************
		If FXMultSld()
			AtuSalCxa( SEU->EU_CAIXA , dDataBase , SEU->EU_VALOR )
		EndIf

		ConfirmSX8()

		If lPadrao572 .and. lGeraLanc
			If nHdlPrv <= 0
				LoteCont("FIN")
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Inicializa Lancamento Contabil                                   Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					nHdlPrv := HeadProva(   cLote,;
											"FINA560" /*cPrograma*/,;
											Substr( cUsuario, 7, 6 ),;
											@cArquivo )
			Endif
			If  nHdlPrv > 0 .And. Empty(SEU->EU_LA)
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Prepara Lancamento Contabil                                      Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
						aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
					Endif
					nTotal += DetProva( nHdlPrv,;
										"572" /*cPadrao*/,;
										"FINA560" /*cPrograma*/,;
										cLote,;
										/*nLinha*/,;
										/*lExecuta*/,;
										/*cCriterio*/,;
										/*lRateio*/,;
										/*cChaveBusca*/,;
										/*aCT5*/,;
										/*lPosiciona*/,;
										@aFlagCTB,;
										/*aTabRecOri*/,;
										/*aDadosProva*/ )
			Endif
			If nHdlPrv > 0 .And. nTotal > 0
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Efetiva Lan┤amento Contabil                                      Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					RodaProva( 	nHdlPrv,;
								nTotal )
					If cA100Incl( cArquivo,;
								nHdlPrv,;
								3 /*nOpcx*/,;
								cLote,;
								lDigita,;
								lAglutina /*lAglut*/,;
								/*cOnLine*/,;
								/*dData*/,;
								/*dReproc*/,;
								@aFlagCTB,;
								/*aDadosProva*/,;
								aDiario )
							If !lUsaflag
								Reclock("SEU",.F.)
								Replace EU_LA	With "S"
								MsUnLock()
							Endif
					Endif
					aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
			EndIf
		EndIf

		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza saldo do caixinha e niveis superiores, se houverem Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		dbSelectArea("SET")
		SET->(dbSetOrder(1))
		SET->(dbSeek( xFilial()+SEU->EU_CAIXA))
		nSldAtu := Fa570AtuSld( ET_CODIGO)[1,1]
		SET->(RecLock("SET",.F.))
		SET->ET_SALANT	:= ET_SALDO
		SET->ET_SALDO	:= nSldAtu
		SET->(MsUnlock())

		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		PcoDetLan("000359","01","FINA560")

EndIf


End Transaction
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se sobrou saldo no registro de adiantamento,                Ё
//Ё pergunta-se se deseja REPASSAR O REMANESCENTE para o saldo  Ё
//Ё do caixinha e com isso o adiantamento ficara com saldo zero,Ё
//Ё o que permitira que o mesmo seja baixado/rendido.           Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SEU")
dbGoto(nRecnoSEU)       // posiciona no registro tipo adiantamento
nSldSobra := SEU->EU_SLDADIA

If nSldSobra > 0
	If !lF560Auto
   		lRepSald := MsgYesNo(OemToAnsi(STR0023),OemToAnsi(STR0024))	//"Deseja transferir o saldo remanescente para o caixinha?","Adiantamento com saldo remanescente"
   	Else
   		If (nT := ascan(aAutoCab,{|x| x[1]='EU_SLDREM'}) ) > 0
   			lRepSald := aAutoCab[nT,2]
   		EndIf
   	EndIf
  	If lRepSald
		If lF560ACESSO
			lAcesso := ExecBlock("F560ACESSO",.F.,.F.)									
		EndIf 
		
		If lAcesso 	
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Atualiza informacoes do registro de adiantamento            Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		
			If lPadrao572 .And. lGeraLanc
				If nHdlPrv <= 0
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Inicializa Lancamento Contabil                                   Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						nHdlPrv := HeadProva( cLote,;
						                      "FINA560" /*cPrograma*/,;
						                      Substr( cUsuario, 7, 6 ),;
						                      @cArquivo )
				Endif
				If  nHdlPrv > 0 .And. Empty(SEU->EU_LA)
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Prepara Lancamento Contabil                                      Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
							aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
						Endif
						nTotal += DetProva( nHdlPrv,;
						                    "572" /*cPadrao*/,;
						                    "FINA560" /*cPrograma*/,;
						                    cLote,;
						                    /*nLinha*/,;
						                    /*lExecuta*/,;
						                    /*cCriterio*/,;
						                    /*lRateio*/,;
						                    /*cChaveBusca*/,;
						                    /*aCT5*/,;
						                    /*lPosiciona*/,;
						                    @aFlagCTB,;
						                    /*aTabRecOri*/,;
						                    /*aDadosProva*/ )
					AAdd(aSEUCont,SEU->(RECNO()))
				Endif
				RodaProva(nHdlPrv,nTotal)
			EndIf
			Fa560FcAdi(nRecnoSEU,nSldSobra,nSaveSx8,cNumRel2,,,,,,lRepSald)
			// CONTABILIZAгцO DO REGISTRO GERADO DA TRANSFERENCIA DO SALDO REMANESCENTE
			If lPadrao579 .And. lGeraLanc
				If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
					aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
				Endif
				If nHdlPrv <= 0
					nHdlPrv +=HeadProva(cLote,"FINA560",Subs(cUsuario,7,6),@cArquivo)
				Endif
				If  nHdlPrv > 0 .And. Empty(SEU->EU_LA)
					nTotal	:=	DetProva(nHdlPrv,"579","FINA560",cLote,,,,,,,,@aFlagCTB)
					AAdd(aSEUCont,SEU->(RECNO()))
				Endif
				RodaProva(nHdlPrv,nTotal)
			Endif
		Endif
  Endif
Elseif (nSldSobra <= 0)
	Begin Transaction
	// Baixa o adiantamento
	RecLock("SEU",.F.)
	Replace	EU_BAIXA With dDataBase
	MsUnlock()

	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	PcoDetLan("000359","02","FINA560")

	// Baixa as despesas
	nOrder   := IndexOrd()
	cNroAdia := EU_NUM
	dbSetOrder(3)
	IF dbSeek(xFilial()+cNroAdia)
		While ! Eof() .And. SEU->EU_FILIAL == xFilial() ;
			.And. SEU->EU_NROADIA == cNroAdia
			RecLock("SEU",.F.)
			Replace	EU_BAIXA With dDataBase
			MsUnlock()

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			PcoDetLan("000359","02","FINA560")
			dbSkip()
		Enddo
	Endif

	dbSetOrder(nOrder)
	dbGoto(nRecnoSEU)
	End Transaction
EndIf

If nHdlPrv > 0
	Begin Transaction
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Efetiva Lan┤amento Contabil                                      Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

			If cA100Incl( cArquivo,;
				           nHdlPrv,;
				           3 /*nOpcx*/,;
				           cLote,;
				           lDigita,;
				           lAglutina /*lAglut*/,;
				           /*cOnLine*/,;
				           /*dData*/,;
				           /*dReproc*/,;
				           @aFlagCTB,;
				           /*aDadosProva*/,;
				           aDiario )
				For nX := 1	To Len(aSEUCont)
					SEU->(DbGoTo(aSEUCont[nX]))
					If !lUsaFlag
						Reclock("SEU",.F.)
						Replace EU_LA	With "S"
						MsUnLock()
					Endif
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					PcoDetLan("000359","02","FINA560")
				Next
			Endif
			aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
	End Transaction
EndIf

RestArea(aArea)  // restaura ambiente anterior

Return .T.


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560FcAdiЁAutor  Ё Leonardo Ruben        Ё Data Ё 15.06.00 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Fecha adiantamento - repassa saldo remanescente            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁfA560FcAdi(ExpN1,ExpN2)                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpN1 = Nёmero do Registro    							  Ё╠╠
╠╠Ё			 Ё ExpN2 = Sobra do Saldo do Adiantamento       			  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Fina560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function Fa560FcAdi(nRecnoSEU, nSldSobra, nSaveSx8, cNumRel2, lEstorno, cForn, cLoja, cFat, cSer, lRepSald, lIniPco)
Local nSldAtu  := 0, nI, cNroAdia
Local aDadAdia := {}
Local lExclMov :=.F.
Local lF560FCADI := ExistBlock("F560FCADI")
Local nRecnoDev  := SEU->(Recno())
Local cNumCxa  := ""
Local nValor   := 0
Local cTipo	:= ""
Local lDespAdt	 := Iif(SEU->EU_TIPO == '00',.T.,.F.)
Local lAdtBx	 := .T.
Local lAchouSET  := .T.
Local lAtualiz 	 := .F. 
Local nSldCx 	 := 0
Local lComprob   := .T.	// Verifico Regra de estorno para itens vinculados a comprobvantes - ARG

Default nRecnoSEU := SEU->(Recno())
Default nSldSobra := SEU->EU_SLDADIA
Default nSaveSx8  := GetSx8Len()
Default lEstorno  := .F.

//Chile
//Quando a prestacao de contas foi gerada por uma fatura de entrada, seus dados serao gravados para identifica-la no movimento de devolucao para a caixinha.
//A identificacao e utilizada no momento da exclusao da fatura, para tambem excluir o movimento de devolucao.
Default cForn := ""
Default cLoja := ""
Default cFat  := ""
Default cSer  := ""
//Chile

Default lRepSald := .F.
Default lIniPco  := .F.

Private fa560Moed := SEU->EU_MOEDA
Private fa560Apro := SEU->EU_CODAPRO
Private bAgdLib   := {|| IIF(SEU->EU_STATUS $ "01|02",.T.,.F.)} 

dbSelectArea("SEU")
SEU->(dbGoto(nRecnoSEU))       // posiciona no registro tipo adiantamento

bNumRel	 :=	Iif (Type("bNumRel") == "U", 'GetSXENum("SEU","EU_NUM")', bNumRel)
cNumRel2 := Iif (cNumRel2 == NIL, VerValNUM(&bNumRel), cNumRel2)
fa560Nro :=	Iif (Type("fa560Nro") == "U", SEU->EU_NUM, fa560Nro)
lExclMov := GetNewPar("MV_PCTCAIX","2") == "1" .And. !Empty(EU_NROADIA)

If cPaisLoc == "ARG" .And. lExclMov .And. nSldSobra > 0 .And. !IsInCallStack("FA560DELETA")
	lExclMov := .F.
EndIf

If !lIniPco //Inicia lancamento no PCO
	PcoIniLan("000359")
EndIf

Begin Transaction
	//se for estorno de uma despesa de adiantamento, nao atualiza o saldo do caixinha 
	If lDespAdt .and. lEstorno .and. !Empty(SEU->EU_NROADIA)
		lAdtBx := .F.
	EndIf
	
	If SEU->(DbSeek(xFilial("SEU")+SEU->EU_NROADIA))
		RecLock("SEU",.F.)
		SEU->EU_SLDADIA	+= nSldSobra
        SEU->EU_BAIXA := SEU->(IF((EU_SLDADIA == EU_VALOR),CTOD(""),EU_BAIXA))
		SEU->(MsUnlock())
	Endif
	
	SEU->(dbGoto(nRecnoSEU))

	lComprob := !(cPaisLoc == "ARG" .AND. EU_TIPO == "00" .AND.  Empty(EU_BENEF) ) //Repoe o saldo do caixinha - ARG 
	
	If lExclMov
		dbSelectArea("SET")
		SET->(dbSetOrder(1))
		lAchouSET := SET->(dbSeek(xFilial("SET")+SEU->EU_CAIXA))
		
		dbSelectArea("SEU")
		cNroAdia := SEU->EU_NUM
		cNumCxa  := SEU->EU_CAIXA
		nValor   := SEU->EU_VALOR
		
		SEU->(dbSetOrder(1))
		If SEU->(dbSeek(xFilial("SEU")+cNroAdia))
			cNroAdia := SEU->EU_NROADIA
			RecLock("SEU", .F.)
			SEU->(dbDelete())
			SEU->(MsUnLock())
			
			//Gravacao dos lancamentos do SIGAPCO
			PcoDetLan("000359", "02", "FINA560", .T.)
		EndIf
		
		If SEU->(dbSeek(xFilial("SEU")+cNroAdia)) .And. !lEstorno 
			RecLock("SEU",.F.)
			SEU->EU_SLDADIA -= nSldSobra
			MsUnLock()
			
			//Gravacao dos lancamentos do SIGAPCO
			PcoDetLan("000359","02","FINA560")
		Endif
		
		If FindFunction("FXMultSld()") .AND. FXMultSld() .AND. ( SEU->EU_TIPO <> '01' .OR. (SEU->EU_TIPO = '01' .AND. !empty(cNroAdia))) .and. lAdtBx 
			AtuSalCxa( cNumCxa , dDataBase , nSldSobra )
		EndIf
		
		If lAchouSET .And. cPaisLoc <> "ARG"
			//Repoe o saldo do caixinha
			RecLock("SET",.F.)
			nSldAtu := ET_SALDO + nSldSobra
			SET->ET_SALDO := nSldAtu
			SET->(MsUnlock())
		EndIf
	Else
		cNroAdia := SEU->EU_NUM
		
		RecLock("SEU",.F.)
		SEU->EU_SLDADIA := 0
		SEU->EU_BAIXA   := dDataBase
		SEU->(MsUnlock())
		
		//Guardo os dados do adiantamento para gravar o retorno do adiantamento
		For nI	:=	1	To FCount()
			AAdd(aDadAdia, FieldGet(nI))
		Next
		
		//Posiciona no caixinha
		dbSelectArea("SET")
		SET->(dbSetOrder(1))
		SET->(dbSeek(xFilial("SET")+SEU->EU_CAIXA))
		
		//Baixa/Rende gastos do adiantamento
		SEU->(dbSetOrder(3))
		If SEU->(dbSeek(xFilial()+cNroAdia))
			While SEU->(!Eof()) .And. SEU->(EU_FILIAL+EU_NROADIA) == (xFilial("SEU")+cNroAdia)
				RecLock("SEU", .F.)
				SEU->EU_BAIXA := dDataBase
				SEU->(MsUnlock())
				SEU->(dbSkip())
			Enddo
		Endif
		
		//Gera reg.fechamento de adiantamento
		RecLock("SEU", .T.)
		
		For nI	:=	1 To FCount()
			FieldPut(nI, aDadAdia[nI])
		Next
		
		SEU->EU_FILORI  := xFilial("SEU")
		SEU->EU_VALOR   := nSldSobra
		SEU->EU_TIPO    := "02"
		SEU->EU_NUM     := cNumRel2
		SEU->EU_NROADIA := fa560Nro    // informa a que adiantamento se refere
		SEU->EU_BAIXA   := dDataBase
		SEU->EU_EMISSAO := dDataBase
		SEU->EU_DTDIGIT := dDataBase
		SEU->EU_LA      := "  "
		
		//Chile -> Identifica a fatura de entrada se o movimento foi gerada por uma
		If !Empty(cForn) .And. !Empty(cLoja) .And. !Empty(cFat)
			SEU->EU_FORNECE := cForn
			SEU->EU_LOJA    := cLoja
			SEU->EU_NRCOMP  := cFat
			SEU->EU_SERCOMP := cSer
		Endif
		
		//Chile
		SEU->EU_MOEDA   := fa560Moed
		SEU->EU_STATUS  := "03"
		SEU->EU_CODAPRO := fa560Apro
		
		If lEstorno
			SEU->EU_HISTOR := STR0039
		EndIf
		
		SEU->EU_SEQCXA := SET->ET_SEQCXA //a devolucao deve ser registrada na seq atual do caixinha
		SEU->(MsUnLock())
		nRecnoDev := SEU->(Recno())
		
		//Gravacao dos lancamentos do SIGAPCO
		PcoDetLan("000359", "02", "FINA560")
		
		//Atulizacao do saldo do caixinha
		If !Eval(bAgdLib) .AND. FindFunction( "FXMultSld()" ) .AND. FXMultSld() .AND. lAdtBx  
			AtuSalCxa( SEU->EU_CAIXA , dDataBase , SEU->EU_VALOR ) 
		Elseif cPaisLoc == "ARG" .And. SEU->EU_STATUS = "03"
			If lComprob
				nSldCx := SET->ET_SALDO
				StaticCall(FINA570, AtuSldAnt, SEU->EU_CAIXA, SEU->EU_VALOR, .T.)	
				lAtualiz := IIF(nSldCx == SET->ET_SALDO,.F.,.T.) // Valido se o valor do caixinha foi alterado
				SEU->(DbGoTo(nRecnoDev))
			EndIF
		Endif
			
		//Atualiza saldo do caixinha se nao for uma despesa de adiantamento em aberto
		If !lEstorno .OR. (lEstorno .AND. !(SEU->EU_TIPO == "00" .And. Empty(SEU->EU_BAIXA) .And. !Empty( SEU->EU_NROADIA)))
			dbSelectArea("SEU")
			SEU->(dbSetOrder(1))
			
			If SEU->(DbSeek(xFilial("SEU")+SEU->EU_NROADIA)) //posiciona no reg. da prestaГЦo de contas pai da devoluГЦo.
				cTipo := SEU->EU_TIPO
				If SEU->(DbSeek(xFilial("SEU")+SEU->EU_NROADIA)) //posiciona no reg. do adiantamento pai da prestaГЦo de contas.
					cTipo := SEU->EU_TIPO
				EndIf
			EndIf
			
			SEU->(DbGoTo(nRecnoDev))
			
			If cPaisloc == "ARG" 
				IF !lAtualiz .AND. lComprob
					If lRepSald .OR. cTipo <> "01" .And. !lDespAdt
						RecLock("SET", .F.)
						nSldAtu :=  SET->ET_SALDO + SEU->EU_VALOR
						SET->ET_SALDO := nSldAtu
						SET->(MsUnlock())
					ElseIf cTipo == "01" .and. SEU->EU_STATUS == "03"
						RecLock("SET",.F.)
						nSldAtu :=  nSldSobra
						SET->ET_SALDO := nSldAtu
						SET->(MsUnlock())
					Endif
				EndIF
			Else
				If lRepSald .OR. cTipo <> "01" 
					RecLock("SET",.F.)
					nSldAtu :=  SET->ET_SALDO + SEU->EU_VALOR
					SET->ET_SALDO := nSldAtu
					SET->(MsUnlock())
				ElseIf cTipo == "01" .and. SEU->EU_STATUS == "03" .And. !lDespAdt
					RecLock("SET",.F.)
					nSldAtu := SET->ET_SALDO + nSldSobra
					SET->ET_SALDO := nSldAtu
					SET->(MsUnlock())
				Endif
			Endif
		EndIF
		
		//Gravacao dos lancamentos do SIGAPCO
		PcoDetLan("000359", "02", "FINA560", .T.)
		
		While (GetSx8Len() > nSaveSx8 )
			ConfirmSX8()
		Enddo
		
		If lF560FCADI
			ExecBlock("F560FCADI",.F.,.F.,{cNroAdia, nSldSobra, lEstorno})
		Endif
	Endif
End Transaction

If !lIniPco //Finaliza a gravacao dos lancamentos do SIGAPCO
	PcoFinLan("000359")
EndIf
Return .T.

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560LegendЁ Autor Ё Leonardo Ruben       Ё Data Ё 30.06.01 Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Cria uma janela contendo a legenda da mBrowse              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FINA560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function FA560Legend(nReg)
Local uRetorno	:= .T.
Local aLegenda	:= {}
Private lIntUMovMe	:= Iif(Type("lIntUMovMe") == "U" .And. nModulo == 43, .T., lIntUMovMe)

// Tratamento da legenda caso funГЦo seja chamada por outro painel
If FunName() != "FINA560"
	If cPaisLoc == "BRA"
		lIntUMovMe := .T.  
	Else
		lIntUMovMe := .F.
	EndIf	
EndIf

If ExistBlock("FA550VERIF",.T.)
		aLegenda:= 	{	{"ENABLE"	, 	STR0026	},;	//"Despesa nao baixada"
					{"BR_AZUL"	, 	STR0027	},;	//"Despesa de adiantamento nao baixada"
					{"BR_AMARELO",	STR0028	},;	//"Adiantamento com saldo (em aberto)"
					{"DISABLE"	, 	STR0029}} //"Despesa baixada ou outros movimentos"
Else
		aLegenda:= 	{{"BR_PINK"	, 	STR0126},;	//"Movimento aguardando aprovaГЦo"
					{"BR_PRETO"	, 	STR0127},;	//"Movimento Bloqueado"
					{"ENABLE"	, 	STR0026	},;	//"Despesa nao baixada"
					{"BR_AZUL"	, 	STR0027	},;	//"Despesa de adiantamento nao baixada"
					{"BR_AMARELO",	STR0028	},;	//"Adiantamento com saldo (em aberto)"
					{"DISABLE"	, 	STR0029}}	//"Despesa baixada ou outros movimentos"

EndIf

If ExistBlock("FA550VERIF",.T.) .And. Fa550Verif()
	Aadd(aLegenda,{"BR_CINZA",STR0034})		//"Reposicao: aguardando autorizacao"
	Aadd(aLegenda,{"BR_PINK",STR0035})		//"Reposicao: aguardando debito do titulo"
	Aadd(aLegenda,{"BR_PRETO",STR0036})		//"Reposicao cancelada"
Endif

If  GetNewPar("MV_PCTCXMA","2")=="1"  // Permite prestacao de contas a maior no adiantamento
	Aadd(aLegenda,{"BR_MARRON",STR0046})  	//Complemento de Adiantamento
EndIf

If nReg = NIL	// Chamada direta da funcao onde nao passa, via menu Recno eh passado

	uRetorno := {}
	If (ExistBlock("FA550VERIF",.T.) )
		Aadd(uRetorno, {'EU_TIPO="00" .AND. Empty(EU_BAIXA) .AND. Empty(EU_NROADIA)' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")	, aLegenda[1][1]})	//"Despesa nao baixada"
		Aadd(uRetorno, {'EU_TIPO="00" .AND. Empty(EU_BAIXA)' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")							, aLegenda[2][1]})	//"Despesa de adiantamento nao baixada"
		Aadd(uRetorno, {'EU_TIPO="01" .AND. EU_SLDADIA > 0' + If(lIntUMovMe,'   .AND. EU_ENVUMOV != "1"',"")				       	, aLegenda[3][1]})	//"Adiantamento com saldo (em aberto)"
		Aadd(uRetorno, {'!Empty(EU_BAIXA)' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")										   	, aLegenda[4][1]}) 	//"Despesa baixada ou outros movimentos"
    Else
		Aadd(uRetorno, {'(!Empty(EU_CODAPRO) .And. EU_STATUS $ "01|02")' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")            	, aLegenda[1][1]})	//"Movimento aguardando aprovaГЦo"
		Aadd(uRetorno, {'(!Empty(EU_CODAPRO) .And. EU_STATUS == "04")' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")             	, aLegenda[2][1]})	//"Movimento bloqueado"
   		Aadd(uRetorno, {'EU_TIPO="00" .AND. Empty(EU_BAIXA) .AND. Empty(EU_NROADIA)' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")	, aLegenda[3][1]}) 	//"Despesa nao baixada"
		Aadd(uRetorno, {'EU_TIPO="00" .AND. Empty(EU_BAIXA)' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")						 	, aLegenda[4][1]}) 	//"Despesa de adiantamento nao baixada"
		Aadd(uRetorno, {'EU_TIPO="01" .AND. EU_SLDADIA > 0' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")					    	, aLegenda[5][1]}) 	//"Adiantamento com saldo (em aberto)"
		Aadd(uRetorno, {'!Empty(EU_BAIXA)' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")											, aLegenda[6][1]}) 	//"Despesa baixada ou outros movimentos"
	Endif

	If (ExistBlock("FA550VERIF",.T.) .And. Fa550Verif()) .And. (GetNewPar("MV_PCTCXMA","2")=="1")
		Aadd(uRetorno,{'EU_TIPO="91" .AND. EU_ENVUMOV != "1"'	, aLegenda[5][1]})	 	// Reposicao: aguardando liberacao
		Aadd(uRetorno,{'EU_TIPO="92" .AND. EU_ENVUMOV != "1"'	, aLegenda[6][1]})		// Reposicao: aguardando compensacao do cheque
		Aadd(uRetorno,{'EU_TIPO="90" .AND. EU_ENVUMOV != "1"'	, aLegenda[7][1]})		// Reposicao cancelada
		Aadd(uRetorno,{'EU_TIPO="03" .AND. EU_ENVUMOV != "1"' 	, aLegenda[8][1]})		// Complemento de adiantamento

	ElseIf (ExistBlock("FA550VERIF",.T.) .And. Fa550Verif())
		Aadd(uRetorno,{'EU_TIPO="91"' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")	, aLegenda[5][1]})	 	// Reposicao: aguardando liberacao
		Aadd(uRetorno,{'EU_TIPO="92"' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")	, aLegenda[6][1]})		// Reposicao: aguardando compensacao do cheque
		Aadd(uRetorno,{'EU_TIPO="90"' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")	, aLegenda[7][1]})		// Reposicao cancelada
	ElseIf (GetNewPar("MV_PCTCXMA","2")=="1")
		Aadd(uRetorno,{'EU_TIPO="03"' + If(lIntUMovMe,' .AND. EU_ENVUMOV != "1"',"")	, aLegenda[5][1]}) 	  //"Complemento de adiantamento"
   EndIf
Else
	BrwLegenda(cCadastro,STR0025,aLegenda) //"Legenda"
EndIf

Return uRetorno

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFa560Vld()ЁAutor  ЁPatricia A. Salomao    Ё Data Ё 21.06.02 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Validacao dos Campos                                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁFa560Vld()                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ                         									  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Fina560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function Fa560Vld()
Local lRet    := .T.
Local cCampo  := ReadVar()
Local cChave  := ""
Local cSerDesp:= ( SuperGetMV('MV_SERDESP',,'' ) )
Local nPosFolder := 0
Local nPosFilOri := 0
Local nPosViagem := 0
Local nPosCodVei := 0
Local nPosCodDes := 0
Local lMntTms    := ( SuperGetMV( "MV_NGMNTMS",,'N') == 'S' )//-- Ativa integracao TMS X MNT.

If ADIANTAMENTO
	nPosFilOri := Ascan(aHeader, {|x| AllTrim(x[2]) == "EU_FILORI"})
	nPosViagem := Ascan(aHeader, {|x| AllTrim(x[2]) == "EU_VIAGEM"})
	nPosCodVei := Ascan(aHeader, {|x| AllTrim(x[2]) == "EU_CODVEI"})
	nPosCodDes := Ascan(aHeader, {|x| AllTrim(x[2]) == "EU_CODDES"})
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Validacoes para o Modulo de Transporte (TMS)       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
If IntTMS() .And. nModulo == 43
	If cCampo == 'M->EU_FILORI' .Or. cCampo == 'M->EU_VIAGEM'
		If ADIANTAMENTO

			If !Empty(GdFieldGet('EU_CODVEI', n))
				Help('',1,'FA560NOVIA') // A Viagem Nao podera ser informada pois o campo Veiculo ja foi preenchido ...
				lRet := .F.
			EndIf

			If (!lRet .And. cCampo == 'M->EU_FILORI') .Or. (cCampo == 'M->EU_FILORI' .And. Vazio())
				GDFieldPut('EU_VIAGEM',Space(Len(SEU->EU_VIAGEM)),n)
			ElseIf !lRet .Or. Vazio()
				Empty(GdFieldGet('EU_FILORI', n))
			EndIf

			If lRet .And. cCampo == 'M->EU_FILORI'
				cChave := M->EU_FILORI+AllTrim(GdFieldGet('EU_VIAGEM', n))
			ElseIf lRet
				cChave := GdFieldGet('EU_FILORI', n)+M->EU_VIAGEM
			EndIf

     		If lRet .And. !Empty(aFolTmsBkp)
				GDFieldPut('EU_CODDES',Space(Len(SEU->EU_CODDES)),n)
				GDFieldPut('EU_HISTOR',Space(Len(SEU->EU_HISTOR)),n)
			EndIf

		Else

			If !Empty(M->EU_CODVEI)
				Help('',1,'FA560NOVIA') // A Viagem Nao podera ser informada pois o campo Veiculo ja foi preenchido ...
				lRet := .F.
				M->EU_VIAGEM := Space(Len(SEU->EU_VIAGEM))
				M->EU_FILORI := Space(Len(SEU->EU_FILORI))
			EndIf
			If lRet .And. cCampo == 'M->EU_FILORI'
				If Vazio()
					M->EU_VIAGEM := Space(Len(SEU->EU_VIAGEM))
				EndIf
			EndIf
			If lRet .And. cCampo == 'M->EU_VIAGEM'
				If Empty(M->EU_FILORI)
					lRet := .F.
				EndIf
			EndIf
			If lRet
				cChave := M->EU_FILORI+M->EU_VIAGEM
			EndIf
		EndIf
		If ADIANTAMENTO
			If lRet .And. !Empty(AllTrim(GdFieldGet('EU_FILORI', n))) .And. !Empty(AllTrim(GdFieldGet('EU_VIAGEM', n))) ;
																		.And. !ExistCpo("DTQ", cChave, 2)
				lRet := .F.
			EndIf
			If lRet .And. Posicione("DTQ",2,xFilial("DTQ") + cChave,"DTQ_TIPVIA") == StrZero(3,Len(DTQ->DTQ_TIPVIA))
				Help("",1,"FA560TIPVI")
				lRet := .F.
			EndIf
			If lRet
				GDFieldPut( 'EU_VALOR', FA560Pdg(	If(cCampo == 'M->EU_FILORI', M->EU_FILORI, GDFieldGet('EU_FILORI', n)),;
													If(cCampo == 'M->EU_VIAGEM', M->EU_VIAGEM, GDFieldGet('EU_VIAGEM', n)),;
													GDFieldGet('EU_CODDES',n), GDFieldGet('EU_VALOR',n) ), n)
			EndIf
		Else
			If lRet .And. (!Empty(M->EU_FILORI) .Or. !Empty(M->EU_VIAGEM)) .And. !ExistCpo("DTQ", cChave, 2)
				lRet := .F.
			EndIf
			If lRet .And. Posicione("DTQ",2,xFilial("DTQ") + cChave,"DTQ_TIPVIA") == StrZero(3,Len(DTQ->DTQ_TIPVIA))
				Help("",1,"FA560TIPVI")
				lRet := .F.
			EndIf
     		If lRet .And. !Empty(aFolTmsBkp)
				If	lRet .And. (M->EU_FILORI <> aFolTmsBkp[1,1] .Or. M->EU_VIAGEM <> aFolTmsBkp[1,2])
					M->EU_CODDES := Space(Len(SEU->EU_CODDES))
					M->EU_HISTOR := Space(Len(SEU->EU_HISTOR))
					aFolTms      := {}
					aFolTmsBkp   := {}
				EndIf
			EndIf
		EndIf

	ElseIf cCampo == 'M->EU_CODMOT'
		DA4->(dbSetOrder(1))
		DA4->(MsSeek(xFilial('DA4')+ M->EU_CODMOT ))
		M->EU_BENEF := DA4->DA4_NOME
	ElseIf cCampo == 'M->EU_CODDES'
		If !Vazio()
			If (lRet := ExistCpo("DT7"))
				DT7->(dbSetOrder(1))
				DT7->(MsSeek(xFilial('DT7')+ M->EU_CODDES ))
				If ADIANTAMENTO
					M->EU_FILORI := AllTrim(GdFieldGet('EU_FILORI', n))
					M->EU_VIAGEM := AllTrim(GdFieldGet('EU_VIAGEM', n))
					M->EU_CODVEI := AllTrim(GdFieldGet('EU_CODVEI', n))
					If lRet
						nPosFolder := Ascan( aCols, {|x|	AllTrim(x[nPosFilOri])+AllTrim(x[nPosViagem])+AllTrim(x[nPosCodVei])+AllTrim(x[nPosCodDes])==;
															M->EU_FILORI+M->EU_VIAGEM+M->EU_CODVEI+AllTrim(M->EU_CODDES)} )

						If n > nPosFolder .And. nPosFolder <> 0
							If !GdDeleted(nPosFolder)   //NЦo Esta deletado
								If lMntTms .And. !Empty(DT7->DT7_CODFAM)
									Aviso(STR0054, Iif(!Empty(M->EU_CODVEI),STR0051,STR0052);  //"AtenГЦo",'VeМculo e Despesa jА informados,"###"Viagem e Despesa jА informadas,"
									 + STR0053 + AllTrim(Str(nPosFolder)),{"Ok"}) //" na Linha: "
									lRet := ( .F. )
								EndIf
							EndIf
						EndIf
						If lRet
							GDFieldPut('EU_HISTOR',Posicione("DT7",1,xFilial("DT7")+M->EU_CODDES,"DT7_DESCRI"),n)
							If lMntTms
								lRet := TmsIntMnt("2", cSerDesp, AllTrim(M->EU_FILORI), AllTrim(M->EU_VIAGEM), AllTrim(M->EU_CODVEI), AllTrim(M->EU_CODDES), @aFolTms, aFolTmsBkp, aCols, ADIANTAMENTO)
							EndIf
						EndIf
					EndIf
				ElseIf lRet					
					If M->EU_TIPO == '01' .And. !Empty(M->EU_CODDES) //--Despesa
						M->EU_VALOR := FA560Pdg( M->EU_FILORI, M->EU_VIAGEM, M->EU_CODDES,M->EU_VALOR ) //Calcula valor do pedagio						
					EndIf
					M->EU_HISTOR := Posicione("DT7",1,xFilial("DT7")+M->EU_CODDES,"DT7_DESCRI")
					If lMntTms
						TmsIntMnt("2", cSerDesp, AllTrim(M->EU_FILORI), AllTrim(M->EU_VIAGEM), AllTrim(M->EU_CODVEI), AllTrim(M->EU_CODDES), @aFolTms, aFolTmsBkp) //IntegraГao TMS x MNT					
					EndIf
				EndIf
			EndIf
		ElseIf ADIANTAMENTO //Limpar o histСrico do caso o campo despesa seja apagada.
			GDFieldPut('EU_HISTOR',Space(Len(SEU->EU_HISTOR)),n)
		Else //Limpar o histСrico do caso o campo despesa seja apagado.
			M->EU_HISTOR := Space(Len(SEU->EU_HISTOR))
		EndIf
	ElseIf cCampo == 'M->EU_CODVEI'
		If ADIANTAMENTO
			If !Empty(GdFieldGet('EU_FILORI', n))  .Or. !Empty(GdFieldGet('EU_VIAGEM', n))
				Help('',1,'FA560NOVEI') // O Veiculo Nao podera ser informado pois o campo Viagem ja foi preenchido ...
				lRet := .F.
			EndIf
			If lRet .And. !Empty(aFolTmsBkp)
				GDFieldPut('EU_CODDES',Space(Len(SEU->EU_CODDES)),n)
				GDFieldPut('EU_HISTOR',Space(Len(SEU->EU_HISTOR)),n)
			EndIf
		Else
			If !Empty(M->EU_FILORI) .Or. !Empty(M->EU_VIAGEM)
				Help('',1,'FA560NOVEI') // O Veiculo Nao podera ser informado pois o campo Viagem ja foi preenchido ...
				lRet := .F.
			EndIf
			If lRet .And. !Empty (aFolTmsBkp)
				If M->EU_CODVEI <> aFolTmsBkp[1,3]
					M->EU_CODDES:= Space(Len(SEU->EU_CODDES))
					M->EU_HISTOR:= Space(Len(SEU->EU_HISTOR))
					aFolTms		:= {}
					aFolTmsBkp	:= {}
				EndIf
			EndIf
		EndIf
	EndIf
EndIf
Return ( lRet )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁFA560REP  ╨Autor  ЁMarcello            ╨Fecha Ё 01/07/2004  ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё                                                            ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё FINA560                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function Fa560Rep()
Local lRet:=.T.
Local aSEU:=SEU->(GetArea())
If SEU->EU_TIPO$"91/92" //movimento aguardando autorizacao para reposicao e/ou compensacao de cheque
	Fa550Rep20(SEU->EU_CAIXA,.T.,.T.,,.F.,SEU->(Recno()))
Else
	Aviso(STR0037,STR0038,{'Ok'})   //'Operacion no disponible'###'Esta operacion solo esta disponible para los movimientos de reposicion pendientes de aprobacion'
	lRet	:=	.F.
Endif
SEU->(RestArea(aSEU))
Return lRet
/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁFA560VlRen╨Autor  ЁBruno Sobieski      ╨Fecha Ё 01/07/2004  ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     ЁValida o numero da rendicao                                 ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё FINA560                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function Fa560Rend()
Local lRet     := .T.
Local aSEU     := SEU->(GetArea())
Local cCaixa   := IIF(Type("M->EU_CAIXA")=="C",M->EU_CAIXA,IIf(Type("cCxCaixa")=="C",cCxCaixa,SEU->EU_CAIXA))
Local cAdian   := IIF(Type("M->EU_NROADIA")=="C",M->EU_NROADIA,IIf(Type("cCxAdian")=="C",cCxAdian,SEU->EU_NROADIA))
Local cNroRend := &(ReadVar())

	If !Empty(cNroRend)
		DbSelectArea('SEU')
		If !empty(cAdian) .and. FunName() == "MATA101N"
			DbSetOrder(6) //EU_FILIAL+EU_CAIXA+EU_TIPO+EU_NROADIA+EU_NUM
			MSSeek(xFilial()+cCaixa+"01"+cAdian)
			While lRet .And.!Eof() .And. SEU->(EU_FILIAL+EU_CAIXA+EU_TIPO)==xFilial()+cCaixa+"01"
				IF cAdian == SEU->EU_NROADIA .AND. cNroRend == SEU->EU_NRREND
					If SEU->EU_TIPO $ "00/01/02" .And. !Empty(SEU->EU_BAIXA)
						Help(" ",1,"FA560REND")
						lRet	:=	.F.
					Endif
				EndIF
				DbSkip()
			Enddo
		else
			DbSetOrder(8) //EU_FILIAL+EU_CAIXA+EU_NRREND
			MSSeek(xFilial()+cCaixa+cNroRend)
			While lRet .And.!Eof() .And. SEU->(EU_FILIAL+EU_CAIXA+EU_NRREND)==xFilial()+cCaixa+cNroRend
				If SEU->EU_TIPO$"00/01/02" .And.  Iif(cPaisloc=="BOL",.T.,!Empty(SEU->EU_BAIXA))
					Help(" ",1,"FA560REND")
					lRet	:=	.F.
				Endif
				DbSkip()
			Enddo
		endif
	Endif

SEU->(RestArea(aSEU))
Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁF560VerPE ╨Autor  ЁPaulo Augusto       ╨Fecha Ё 09/12/2005  ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     ЁValida a existencia do ponto de entrada                     ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё FINA560                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function  F560VerPE()
Local lRet:= .T.
If ExistBlock("F560VMOV")
	lRet:= 	ExecBlock("F560VMOV",.F.,.F.)
Endif

If lRet .and. SET->ET_SITUAC == "1"
	MsgStop(STR0044,STR0045)
	lRet:=.F.
Endif
Return(lRet)


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFINA560_V  Ё Autor Ё Telso Carneiro       Ё Data Ё 02/10/06 Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Funcao utilizada para verificar a ultima versao do fonte   Ё╠╠
╠╠Ё			 Ё FINA560.PRW aplicado no rpo do cliente, assim verificando  Ё╠╠
╠╠Ё			 Ё a necessidade de uma atualizacao neste fonte.			     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё TMSA144Sub 	                                               Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function FINA560_V()
Local nRet := 20061002 // 02 de outubro de 2006
Return nRet

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁPrograma  ЁMenuDef   Ё Autor Ё Ana Paula N. Silva     Ё Data Ё27/11/06 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Utilizacao de menu Funcional                               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁArray com opcoes da rotina.                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁParametros do array a Rotina:                               Ё╠╠
╠╠Ё          Ё1. Nome a aparecer no cabecalho                             Ё╠╠
╠╠Ё          Ё2. Nome da Rotina associada                                 Ё╠╠
╠╠Ё          Ё3. Reservado                                                Ё╠╠
╠╠Ё          Ё4. Tipo de Transa┤└o a ser efetuada:                        Ё╠╠
╠╠Ё          Ё		1 - Pesquisa e Posiciona em um Banco de Dados     Ё╠╠
╠╠Ё          Ё    2 - Simplesmente Mostra os Campos                       Ё╠╠
╠╠Ё          Ё    3 - Inclui registros no Bancos de Dados                 Ё╠╠
╠╠Ё          Ё    4 - Altera o registro corrente                          Ё╠╠
╠╠Ё          Ё    5 - Remove o registro corrente do Banco de Dados        Ё╠╠
╠╠Ё          Ё5. Nivel de acesso                                          Ё╠╠
╠╠Ё          Ё6. Habilita Menu Funcional                                  Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function MenuDef()
Local aPresConta 	:= {}
Local aRotina    	:= {}

If cPaisLoc $ "ARG|PER|BOL"

	aPresConta := { { STR0056, "FA560CpFis",0 ,3 },;  		//"Comprovantes Fiscais"
		            { STR0057, "FA560Adian",0 ,4}}       	//"Outros Comprovantes"

	aRotina := { {STR0006, "AxPesqui"	  ,0,1,,.F.},;  	//"Pesquisar"
				 {STR0007, "AxVisual"   ,0,2},;  			//"Visualizar"
				 {STR0008, "FA560Inclui",0,3},;  			//"Incluir"
				 {STR0009, "FA560Deleta",0,5},;  			//"Excluir"
				 {STR0010, aPresConta   ,0,4},;  			//"Prestacao de Contas"
				 {STR0025, "FA560Legend",0,2, ,.F.} }  		//"Legenda"

ElseIf cPaisLoc == "CHI"

	aRotina := { {STR0006, "AxPesqui"	  ,0,1,,.F.},;  	//"Pesquisar"
				 {STR0007, "AxVisual"   ,0,2},;  			//"Visualizar"
				 {STR0008, "FB560Inclui",0,3},;  			//"Incluir"
				 {STR0009, "FA560Deleta",0,5},;  			//"Excluir"
				 {STR0010, "FA560Adian" ,0 ,4},;  			//"Prestacao de Contas"
				 {STR0025, "FA560Legend",0,2, ,.F.} }  		//"Legenda"

Else
	
	aRotina := { {STR0006, "AxPesqui"	  ,0,1,,.F.},;  	//"Pesquisar"
				 {STR0007, "AxVisual"   ,0,2},;  			//"Visualizar"
				 {STR0008, "FA560Inclui",0,3},;  			//"Incluir"
				 {STR0009, "FA560Deleta",0,5},;  			//"Excluir"
				 {STR0010, "FA560Adian" ,0 ,4}}  			//"Prestacao de Contas"

	Aadd(aRotina,{STR0025, "FA560Legend",0,2, ,.F.})  		//"Legenda"
EndIf

If cPaisLoc $ "PER|BOL"
	Aadd(aRotina,	{STR0142, "FA560EstRep" ,0,5})
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё P.E. utilizado para adicionar itens no Menu da mBrowse       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("FA560BRW")
	aRotina := ExecBlock("FA560BRW",.F.,.F.,{aRotina})
EndIf

Return(aRotina)


/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFinA560T   Ё Autor Ё Marcelo Celi Marques Ё Data Ё 04.04.08 Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Chamada semi-automatica utilizado pelo gestor financeiro   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FINA560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function FinA560T(aParam)
	cRotinaExec := "FINA560"
	ReCreateBrow("SEU",FinWindow)
	FinA560(aParam[1])
	FinVisual("SEU",FinWindow,SEU->(Recno()),.T.)
	ReCreateBrow("SEU",FinWindow)
	dbSelectArea("SEU")

	INCLUI := .F.
	ALTERA := .F.

Return .T.


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560Pdg Ё Autor Ё Vitor Raspa            Ё Data Ё 09.Jan.07Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Funcao para realizar o calculo do pedagio                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё FA560Pdg( cExpC1, cExpC2 )                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ cExpC1 - Filial de Origem                                  Ё╠╠
╠╠Ё          Ё cExpC2 - Numero da Viagem                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё nValPdg - Valor do Pedagio                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FINA560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function FA560Pdg( cFilOri, cViagem, cCodDes,nValPdg )
Local cDesPdg   := SuperGetMV( 'MV_DESPDG',, '' ) //-- Despesa de Pedagio
Local aVeiculos := {}
Local lQtdEix   := .T.
Local lQtdEixV  := .T.
Local aAreaDTR  := DTR->(GetArea())
Local aAreaDTQ  := DTQ->(GetArea())
Local cCodOpe   := ''
Local lFailPdg  := .F.
Local cSeekDTR  := ''
Default nValPdg := 0

//-- Calcula o Pedagio
If AllTrim(cCodDes) == cDesPdg .And. !Empty(cFilOri) .And. !Empty(cViagem)
	DTR->(dbSetOrder(1))
	DTR->(dbSeek(cSeekDTR := xFilial('DTR')+cFilOri+cViagem))
	While DTR->(!Eof()) .And. DTR->(DTR_FILIAL+DTR_FILORI+DTR_VIAGEM) == cSeekDTR
		If Empty(cCodOpe)
			cCodOpe := DTR->DTR_CODOPE
		EndIf
		AAdd( aVeiculos, { DTR->DTR_CODVEI,;
								 Iif(lQtdEix, DTR->DTR_QTDEIX, Posicione("DA3",1,xFilial("DA3")+DTR->DTR_CODVEI,"DA3_QTDEIX")),;
								 Iif(lQtdEixV,DTR->DTR_QTEIXV, 0) })

		If !Empty(DTR->DTR_CODRB1) .And. (!lQtdEix .Or. Empty(DTR->DTR_QTDEIX))
			AAdd( aVeiculos, { DTR->DTR_CODRB1,;
								    Posicione("DA3",1,xFilial("DA3")+DTR->DTR_CODRB1,"DA3_QTDEIX"),;
									 0 })
		EndIf

		If !Empty(DTR->DTR_CODRB2) .And. (!lQtdEix .Or. Empty(DTR->DTR_QTDEIX))
			AAdd( aVeiculos, { DTR->DTR_CODRB2,;
									 Posicione("DA3",1,xFilial("DA3")+DTR->DTR_CODRB2,"DA3_QTDEIX"),;
									 0 })
		EndIf
		DTR->(DbSkip())
	EndDo
	nValPdg := TmsCalPdg(aVeiculos, Posicione('DTQ',2,xFilial('DTQ')+cFilOri+cViagem,'DTQ_ROTA'), cCodOpe, @lFailPdg)
EndIf

RestArea(aAreaDTQ)
RestArea(aAreaDTR)

Return(nValPdg)

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддбддддддбдддддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560Whe Ё Autor ЁLeandro Paulino       Ё Data Ё 21/05/2011 Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддаддддддадддддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁX3_WHEN do campo EU_VALOR. Nao permite a ALTERACAO do con-  Ё╠╠
╠╠Ё          Ёteudo deste campo, caso a integraГЦo de ativos estiver habi-Ё╠╠
╠╠Ё          Ёlitada e existir famМlia na despesa informada.              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁFA560Whe()                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁLogico                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁFINA560 - IntegraГЦo com SIGATMS x SIGAMNT                  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠*/
Function FA560Whe(cCampo)

Local lRet     := .T.
Local lMntTms  := (SuperGetMV( "MV_NGMNTMS",,'N') == 'S') //-- Ativa integracao TMS X MNT.
Default cCampo := ReadVar()

If AllTrim(cCampo) == "M->EU_VALOR"
	If lMntTms .And. nModulo == 43
		If ADIANTAMENTO
			lRet := Empty(Posicione('DT7',1,xFilial("DT7")+GdFieldGet("EU_CODDES",n),'DT7_CODFAM'))
		Else
			lRet := Empty(Posicione('DT7',1,xFilial("DT7")+M->EU_CODDES,'DT7_CODFAM'))
		EndIf
	EndIf
EndIf

Return ( lRet )
/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁF560VldApr╨Autor  Ё Danilo Dias        ╨ Data Ё 02/05/2011  ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Valida o campo de cСdigo do aprovador EU_CODAPRO caso o    ╨╠╠
╠╠╨          Ё controle de alГadas esteja ativado. (MV_FINCTAL = 2)       ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё FINA560                                                   ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function F560VldApr()

Local aArea := GetArea()
Local lRet  := .T.
Local cCtAl := SuperGetMV("MV_FINCTAL", .T., "1")

If cCtAl == "2"
	If Empty(M->EU_CODAPRO)
		Help( " ", 1, "F560VldApr", , STR0055, 1, 0 )	//"O campo 'Cod. Aprov.' И obrigatСrio quando controle de alГadas estА ativo."
		lRet := .F.
	EndIf
EndIf

RestArea(aArea)

Return lRet

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560CpFisЁ Autor Ё Jose Lucas            Ё Data Ё 21.07.11 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁBaixa de ingressos tipo Comprovante Fiscal.                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁFA560CpFis(ExpC1,ExpN1)                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo	   					 	 		  Ё╠╠
╠╠Ё			 Ё ExpN1 = Nёmero do registro 								  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FINA560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Fa560CpFis(cAlias,nReg)
Local lPanelFin := IsPanelFin()
Local lGravaOK 	:= .T.
Local nOpca		:= 0
Local nUsado 	:= 0
Local oDlg, oGet
Local lContinua := .T.
Local cCampos   := ""
Local cNroAnt   := SEU->EU_NUM
Local oFont
Local nRecnoSEU := SEU->(Recno())
Local cCaption
Local lF560Cpos := ExistBlock("F560CPOS")
Local nSaveSx8  := GetSx8Len()
Local nY := 0
Local lFa550Adia:=	ExistBlock("FA550ADF")
Local lF560APROV  := ExistBlock ('F560APROV')
Local lAprova   := .F.

Local nTimeOut  := SuperGetMv("MV_FATOUT",,900)*1000 	// Estabelece 15 minutos para que o usuarios selecione
Local nTimeMsg  := SuperGetMv("MV_MSGTIME",,120)*1000 	// Estabelece 02 minutos para exibir a mensagem para o usuАrio
Local oTimer

Local lPadrao579 := VerPadrao("579")
Local lGeraLanc  := Iif(mv_par03 ==1,.T.,.F.)
Local lDigita    := Iif(mv_par01 ==1,.T.,.F.)
Local lAglutina  := Iif(mv_par02 ==1,.T.,.F.)
Local aSEUCont	  :={}
Local nHdlPrv    := 0
Local cArquivo
Local nTotal     := 0
Local aFlagCTB := {}
Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Local lF560ACESSO :=	ExistBlock("F560ACESSO")   
Local lAcesso := .T.
Local lFINCTAL	:= SuperGetMV("MV_FINCTAL", .T., "1") == "2"

Private 	cLote    	:= ""
PRIVATE 	aHeader 	:= {}
PRIVATE 	aCols   	:= {}
PRIVATE 	aNroCols	:= {}
Private 	bNumRel
Private 	oSaldo  	:= NIL
PRIVATE ADIANTAMENTO:=	.T.

Private aFolTms     := {}
Private aFolTmsBkp  := {}

If SEU->EU_TIPO <> "01" //somente adiantamentos
	Help(" ",1,"FA560TIPO")
	dbSelectArea(cAlias)
	Return /*Function Fa560Adian*/
ElseIf SEU->EU_SLDADIA <= 0 //somente adiantamentos com saldo
	Help(" ",1,"FA560SALDO")
	dbSelectArea(cAlias)
	Return/*Function Fa560Adian*/
EndIf

If SEU->EU_EMISSAO > dDataBase  //somente adiantamentos com data anterior ou igual a data base
	MsgStop(STR0041,STR0040)  // "Adiantamento com data superior a data do sistema" ## "Data"
	dbSelectArea(cAlias)
	Return /*Function Fa560Adian*/
EndIf

If lF560APROV
	lAprova := ExecBlock("F560APROV",.F.,.F.)
EndIf

If lFINCTAL .and. !(SEU->EU_STATUS $ '03|05') .And. !lAprova//Somente adiantamento aprovados
	Help(" ",1,"FA560CPFIS",,STR0082,1,0) //"Adiantamento pendente de aprovacao."
	dbSelectArea(cAlias)
	Return
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Faz a montagem do aHeader a partir dos campos SX3.           Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cCampos := "EU_NRREND|EU_HISTOR|EU_FORNECE|EU_LOJA|EU_NOME|EU_CGC|EU_EMISSAO|EU_NRCOMP|EU_VALOR|EU_CONTA|"

//Pe para possibilitar a inclusao de outros campos na tela de PrestaГЦo de Cotnas
If ExistBlock("FT560CPC")
	aCmpPE := ExecBlock("FT560CPC",.f.,.f.)
	For nY = 1 to Len(aCmpPE)
		If SEU->(FieldPos(aCmpPE[nY])) > 0 .and. !(aCmpPE[nY] $ cCampos )
			cCampos += aCmpPE[nY] + "|"
		EndIf
	Next nY
Endif

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao com o Modulo de Transporte (TMS)Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
If IntTMS() .And. nModulo == 43
	cCampos += "EU_FILORI|EU_VIAGEM|EU_CODVEI|EU_DESVEI|EU_CODDES|"
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Posiciona no DTQ (Viagem), pois, o SXB do campo Cod. Veiculo,Ё
	//Ё filtra somente os veiculos utilizados na Viagem posicionada  Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	DTQ->(dbSetOrder(2))
	DTQ->(MsSeek(xFilial('DTQ')+ Left(cNroAnt,Len(DTQ->(DTQ_FILORI+DTQ_VIAGEM)))   ))

EndIf

//Ponto de entrada para adicao de campos na getdados.
If lF560Cpos
	cCampos += ExecBlock("F560CPOS",.F.,.F.,cCampos)
Endif

dbSelectArea("SX3")
dbSetOrder(1)
dbSeek(cAlias)
While !EOF() .And. (x3_arquivo == cAlias)
	IF X3USO(x3_usado) .AND. cNivel >= x3_nivel .And. Trim(x3_campo)$ cCampos
		nUsado++
		AADD(aHeader,{ TRIM(X3Titulo()), x3_campo, x3_picture,;
		x3_tamanho, x3_decimal, x3_valid,;
		x3_usado, x3_tipo, x3_arquivo, x3_context } )
	Endif
	If Trim(x3_campo) == "EU_NUM"
		bNumRel := X3_RELACAO
	EndIf
	dbSkip()
Enddo

//здддддддддддддддддддддддддддддддддддддд©
//Ё Faz a montagem do aCols              Ё
//юдддддддддддддддддддддддддддддддддддддды
dbSelectArea(cAlias)
dbSetOrder(3)  // filial+nroadia
aadd(aCols,Array(nUsado+1))

For ny := 1 to Len(aHeader)
	If ( aHeader[ny][10] != "V")
		aCols[1][ny] := CriaVar(aHeader[ny][2])
	EndIf
	aCols[1][nUsado+1] := .F.
Next ny


dbSelectArea(cAlias)
dbSetOrder(1)       // volta ao indice original
dbGoto( nRecnoSEU)  // volta ao registro do adiantamento
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Montagem do cabecalho e getdados                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Private fa560Cod := SEU->EU_CAIXA
Private nFa560sld:= SEU->EU_SLDADIA
Private fa560Nro := SEU->EU_NUM
Private nSldOrig := SEU->EU_SLDADIA
Private fa560Seq := ""
Private dDataAdi := SEU->EU_EMISSAO
Private fa560Moed:= SEU->EU_MOEDA

Private fa560Apro:= SEU->EU_CODAPRO

fa560Seq := Fa570SeqAtu(fa560Cod)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se ja existem comprovantes, pergunta se deseja fechar o adiantamento Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea(cAlias)
dbSetOrder(3)  // filial+nroadia
If dbSeek( xFilial()+ cNroAnt)
	// "Deseja fechar o adiantamento e transferir o saldo remanescente?","Adiantamento com comprovantes ja inclusos"
	If nSldOrig >0 .And. MsgYesNo(OemToAnsi(STR0023),OemToAnsi(STR0024))
		If lF560ACESSO
			lAcesso := ExecBlock("F560ACESSO",.F.,.F.)									
		EndIf		
		
		If lAcesso
			Fa560FcAdi( nRecnoSEU, nSldOrig,nSaveSx8)
	
			// CONTABILIZAгцO DO REGISTRO GERADO DO FECHAMENTO E TRANSFERENCIA DO SALDO REMANESCENTE
			If lPadrao579 .And. lGeraLanc
				If nHdlPrv <= 0
					nHdlPrv +=HeadProva(cLote,"FINA560",Subs(cUsuario,7,6),@cArquivo)
				Endif
				If  nHdlPrv > 0 .And. Empty(SEU->EU_LA)
					nTotal	:=	DetProva(nHdlPrv,"579","FINA560",cLote)
				Endif
				RodaProva(nHdlPrv,nTotal)
			Endif
	
			If nHdlPrv > 0
				If cA100Incl(cArquivo,nHdlPrv,3,cLote,lDigita,lAglutina)
					Reclock("SEU",.F.)
					Replace EU_LA	With "S"
					MsUnLock()
	
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					PcoDetLan("000359","02","FINA560")
				Endif
			Endif
	
			dbSelectArea(cAlias)
			Return /*Function Fa560Adian*/
		EndIf
	EndIf
EndIf

If Len(aRotina) == 2
	//Tratar aRotina para compatibilizar com a execuГЦo MsGetDados
	aRotina := { { STR0056, "FA560CpFis",0 ,3 },;  		//"Comprovantes Fiscais"
	       	     { STR0057, "FA560Adian",0 ,4 },;      	//"Outros Comprovantes"
	       	     { STR0057, "FA560Adian",0 ,4}}       	//"Outros Comprovantes"
EndIf

dbSelectArea(cAlias)
dbSetOrder(1)       // volta ao indice original
dbGoto( nRecnoSEU)  // volta ao registro do adiantamento

dbSelectArea("SET")
dbSetOrder(1)
dbSeek( xFilial()+SEU->EU_CAIXA)

dbSelectArea(cAlias)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicia lancamento no PCO                                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoIniLan("000359")

cCaption :=	SEU->EU_CAIXA	+ " - " +SET->ET_NOME
DEFINE FONT oFont NAME "Arial" SIZE 10,12 BOLD

nOpca := 0

aSize := MSADVSIZE()

DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0015)+" "+fa560Nro From aSize[7],0 To aSize[6],aSize[5] OF oMainWnd PIXEL

oDlg:lMaximized := .T.

oTimer:= TTimer():New((nTimeOut-nTimeMsg),{|| MsgTimer(nTimeMsg,oDlg) },oDlg) // Ativa timer
oTimer:Activate()

oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,20,20,.T.,.T. )
oPanel:Align := CONTROL_ALIGN_TOP

@ 002, 003 SAY OemToAnsi(STR0016)+ " : " PIXEL OF oPanel FONT oFont COLOR CLR_GRAY   //"Caixinha"
@ 002, 050 SAY cCaption 				PIXEL OF oPanel FONT oFont
@ 002, 200 SAY OemToAnsi(STR0017)  	PIXEL OF oPanel FONT oFont COLOR CLR_GRAY  //"Saldo : "
@ 002, 280 SAY oSaldo VAR nFa560sld PICTURE PesqPict("SEU","EU_SLDADIA") ;
												PIXEL OF oPanel FONT oFont  ;
												COLOR If(nFa560sld<0,CLR_RED,CLR_BLUE)

@ 011, 003 SAY OemToAnsi(STR0043) 	PIXEL OF oPanel FONT oFont COLOR CLR_GRAY  //"Data do Adiantamento:"
@ 011, 100 SAY dDataAdi					PIXEL OF oPanel FONT oFont

oGet := MSGetDados():New(34,5,128,315,3,"FA560LinOK","FA560TudOK",,.T.,,,,300)
oGet:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT


If lPanelFin
	ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,{||nOpca:=1,if(oGet:TudoOk(),oDlg:End(),nOpca := 0)},{||oDlg:End()})
Else
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpca:=1,if(oGet:TudoOk(),oDlg:End(),nOpca := 0)},{||oDlg:End()})
Endif

If nOpcA == 1
	//Se houve prestacao de contas
	If lContinua .and. nFa560Sld != nSldOrig

		//зддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Tela de solicitacao dos dados de comprovantes Ё
		//Ё Fiscais na prestaГЦo de Contas.               Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддды
		aCompFis := Fa560GetCF()

			//здддддддддддддд©
			//ЁGrava os dadosЁ
			//юдддддддддддддды
		If !Empty(aCompFis)
			lGravaOk := Fa560Grava(cAlias,nRecnoSEU,nSaveSx8,aCompFis)
		Else
		    lGravaOk := .F.
		EndIf

		If !lGravaOk
			Help(" ",1,"A560NAOREG")
		EndIf

	Else //Se nao houve prestacao de contas posso devolver o dinheiro ao caixa
		If (nFa560Sld > 0) .And.;
			(MsgYesNo(OemToAnsi(STR0021),OemToAnsi(STR0022))) 	//"Deseja transferir o saldo remanescente para o caixinha?","Adiantamento com saldo remanescente"
			
			If lF560ACESSO
				lAcesso := ExecBlock("F560ACESSO",.F.,.F.)									
			EndIf	
			
			If lAcesso		
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Atualiza informacoes do registro de adiantamento            Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	
				dbSelectArea("SEU")
				dbGoto(nRecnoSEU)
	
				If lPadrao579 .And. lGeraLanc
					If nHdlPrv <= 0
						LoteCont("FIN")
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Inicializa Lancamento Contabil                                   Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
							nHdlPrv := HeadProva( cLote,;
							                      "FINA560" /*cPrograma*/,;
							                      Substr( cUsuario, 7, 6 ),;
							                      @cArquivo )
					Endif
					If  nHdlPrv > 0
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Prepara Lancamento Contabil                                      Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
							If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
								aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
							Endif
							nTotal += DetProva( nHdlPrv,;
							                    "579" /*cPadrao*/,;
							                    "FINA560" /*cPrograma*/,;
							                    cLote,;
							                    /*nLinha*/,;
							                    /*lExecuta*/,;
							                    /*cCriterio*/,;
							                    /*lRateio*/,;
							                    /*cChaveBusca*/,;
							                    /*aCT5*/,;
							                    /*lPosiciona*/,;
							                    @aFlagCTB,;
							                    /*aTabRecOri*/,;
							                    /*aDadosProva*/ )
						AAdd(aSEUCont,SEU->(RECNO()))
						Reclock("SEU",.F.)
						Replace EU_LA	With "S"
						MsUnLock()
					Endif
				EndIf
	
				If nHdlPrv > 0 .And. nTotal > 0
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Efetiva Lan┤amento Contabil                                      Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						RodaProva( nHdlPrv,;
						           nTotal )
						If cA100Incl( cArquivo,;
							           nHdlPrv,;
							           3 /*nOpcx*/,;
							           cLote,;
							           lDigita,;
							           lAglutina /*lAglut*/,;
							           /*cOnLine*/,;
							           /*dData*/,;
							           /*dReproc*/,;
							           @aFlagCTB,;
							           /*aDadosProva*/,;
							           aDiario )
								If !lUsaflag
									Reclock("SEU",.F.)
									Replace EU_LA	With "S"
									MsUnLock()
								Endif
						Endif
						aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
				EndIf
				Fa560FcAdi(nRecnoSEU,nFa560Sld,nSaveSx8)
			EndIf
		Endif
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Ponto de entrada F560ADIA              				 Ё
	//Ё Destina-se a gravacoes complementares da exclusao  Ё
	//Ё do movimento do caixinha 							 Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ExistBlock("F560ADIA")
		ExecBlock("F560ADIA",.F.,.F.)
	Endif
Endif
MsUnLockAll()

//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Limpa array da IntegraГЦo com TMS x MNT			 	 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
aFolTms   	:= {}
aFolTmsBkp 	:= {}



If lFa550Adia
	ExecBlock("FA550ADF",.F.,.F.,{nOpca==1})
Endif

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Finaliza a gravacao dos lancamentos do SIGAPCO            Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoFinLan("000359")

//Evita que a tela seja aberta novamente
MBrChgLoop(.F.)

dbSelectArea(cAlias)
Return /*Function Fa560Adian*/

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё Fa560GetCF Ё Autor Ё Lucas          		Ё Data Ё 20/07/11 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Solicita dados de comprovantes Fiscais na prestaГЦo de     Ё╠╠
╠╠Ё          Ё Contas.                                                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Fa560GetCF()				                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo			    				      Ё╠╠
╠╠Ё			 Ё ExpN1 = NЗmero do registro 					              Ё╠╠
╠╠Ё			 Ё ExpN2 = OpГЦo do aRotina 					              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FINA560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Fa560GetCF()
Local aSavArea   := GetArea()
Local cNFiscal   := CriaVar("F1_DOC")
Local cSerie     := SerieNFID("SF1",5,"F1_SERIE")
Local cFornece   := ""
Local cLoja      := ""
Local cTpDoc     := ""
Local dEmissao   := CTOD("")
Local nValDesp   := 0.00
Local nValDesc	 := 0.00
Local nValFrete	 := 0.00
Local nValSeguro := 0.00
Local nValMerc	 := 0.00
Local nValBruto	 := 0.00
Local nValIVA	 := 0.00
Local nPercIB3895 := 0.00
Local nPercIVA	 := 0.00
Local nPercIB672 := 0.00
Local nPercSUSS	 := 0.00
Local nOutraPerc := 0.00
Local cConta     := ""
Local nOpcA      := 0
Local nPosForn   := 0
Local nPosLoja   := 0
Local nPosData   := 0
Local nPosVlBrut := 0
Local nPosConta  := 0
Local cNatureza  := ""
Local aSize      := {}
Local aObjects   := {}
Local aInfo      := {}
Local aPosObj    := {}
Local nX         := 0

Local aCompFis   := {}

If cPaisLoc == "PER"
	cTpDoc     := CriaVar("CCL_CODGOV",.F.)
EndIf

If AllTrim(FunName()) == "FINA560"
	nPosForn   := Ascan(aHeader,{|x| AllTrim(x[2]) == "EU_FORNECE"})
	nPosLoja   := Ascan(aHeader,{|x| AllTrim(x[2]) == "EU_LOJA"})
	nPosData   := Ascan(aHeader,{|x| AllTrim(x[2]) == "EU_EMISSAO"})
	nPosVlBrut := Ascan(aHeader,{|x| AllTrim(x[2]) == "EU_VALOR"})
	nPosConta  := Ascan(aHeader,{|x| AllTrim(x[2]) == "EU_CONTA"})

	cFornece  := If(nPosForn > 0,aCols[n][nPosForn],CriaVar("A2_COD"))
	cLoja     := If(nPosLoja > 0,aCols[n][nPosLoja],CriaVar("A2_LOJA"))
	dEmissao  := If(nPosData > 0,aCols[n][nPosData],CriaVar("EU_EMISSAO"))
	For nX := 1 To len(aCols)
		nValBruto += If(nPosVlBrut > 0,aCols[nX][nPosVlBrut],0.00)
	Next nX
	cConta    := If(nPosConta  > 0,aCols[n][nPosConta],"")
	cNatureza := SET->ET_NATUREZ
ElseIf AllTrim(FunName()) == "FINA100"
	cFornece  := CriaVar("A2_COD")
	cLoja     := CriaVar("A2_LOJA")
	dEmissao  := SE5->E5_DATA
	nValBruto := SE5->E5_VALOR
	cConta    := SE5->E5_DEBITO
	cNatureza := SE5->E5_NATUREZ
EndIf

//aSize := MSADVSIZE()

aSize := MsAdvSize()
aObjects := {}
AAdd( aObjects, { 050, 050, .t., .t. } )

aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
aPosObj := MsObjSize( aInfo, aObjects )

//DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0058) FROM 9,0 TO 28,80 OF oMainWnd

DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0058) From aSize[7],0 To aSize[6],aSize[5] OF oMainWnd PIXEL //"Datos del Comprobante Fiscal"

@ 045,001 TO 071, 355 LABEL STR0059 OF oDlg  PIXEL 		//"Comprobante Fiscal"
@ 075,001 TO 130, 355 LABEL STR0060 OF oDlg  PIXEL 		//"Totales"
@ 135,001 TO 205, 355 LABEL STR0061 OF oDlg  PIXEL 		//"Impuestos"

@ 057,004 SAY OemToAnsi(STR0062)    	         SIZE 23, 8 OF oDlg PIXEL		//"Factura"
@ 055,035 MSGET cNFiscal		                 PICTURE PesqPict("SF1","F1_DOC") 	SIZE 50, 8 OF oDlg PIXEL
@ 057,090 SAY OemToAnsi(STR0063)                 SIZE 25, 8 OF oDlg PIXEL		//"Serie"
@ 055,120 MSGET cSerie			                 PICTURE PesqPict("SF1","F1_SERIE") SIZE 25, 8 OF oDlg PIXEL
@ 057,152 SAY OemToAnsi(STR0064)	             SIZE 40, 8 OF oDlg PIXEL		//"Proveedor"
@ 055,190 MSGET cFornece						 PICTURE PesqPict("SA2","A2_COD") 	F3 CpoRetF3("F1_FORNECE");
                                                 VALID ExistCpo("SA2",cFornece) 	SIZE 40, 8 OF oDlg PIXEL

@ 057,240 SAY OemToAnsi(STR0065)	             SIZE 25, 8 OF oDlg PIXEL		//"Tienda"
@ 055,270 MSGET cLoja							 PICTURE PesqPict("SA2","A2_LOJA") 	F3 CpoRetF3("F1_LOJA");
												 VALID ExistCpo("SA2",cFornece+cLoja) SIZE 25, 8 OF oDlg PIXEL

If cPaisLoc == "PER"
	@ 057,300 SAY OemToAnsi(STR0143)	         	SIZE 25, 8 OF oDlg PIXEL		//"Tipo Doc."
	@ 055,325 MSGET cTpDoc						 	PICTURE PesqPict("CCL","CCL_CODGOV") F3 CpoRetF3("F1_TPDOC");
													VALID ExistCpo('CCL',cTpDoc,2)  SIZE 20, 8 OF oDlg PIXEL
EndIf

If AllTrim(FunName()) == "FINA560"
	@ 087,004 SAY OemToAnsi(STR0066)		         SIZE 50, 8 OF oDlg PIXEL		//"Valor Gastos"
	@ 085,075 MSGET nValDesp		                 PICTURE PesqPict("SF1","F1_VALMERC") SIZE 50, 8 OF oDlg PIXEL
EndIf

@ 087,152 SAY OemToAnsi(STR0067)	             SIZE 50, 8 OF oDlg PIXEL		//"Descuentos"
@ 085,205 MSGET nValDesc		                 PICTURE PesqPict("SF1","F1_VALMERC") SIZE 50, 8 OF oDlg PIXEL

@ 102,004 SAY OemToAnsi(STR0068)		         SIZE 50, 8 OF oDlg PIXEL       //"Frete"
@ 100,075 MSGET nValFrete		                 PICTURE PesqPict("SF1","F1_VALMERC") SIZE 50, 8 OF oDlg PIXEL
@ 102,152 SAY OemToAnsi(STR0069)		         SIZE 50, 8 OF oDlg PIXEL		//"Seguro"
@ 100,205 MSGET nValSeguro		                 PICTURE PesqPict("SF1","F1_VALMERC") SIZE 50, 8 OF oDlg PIXEL

If AllTrim(FunName()) == "FINA560"
	@ 117,004 SAY OemToAnsi(STR0070)			     SIZE 50, 8 OF oDlg PIXEL		//"Valor Mercaderia"
Else
	@ 117,004 SAY OemToAnsi(STR0066)		         SIZE 50, 8 OF oDlg PIXEL		//"Valor Gastos"
EndIf

@ 115,075 MSGET nValMerc		                 PICTURE PesqPict("SF1","F1_VALMERC") SIZE 50, 8 OF oDlg PIXEL
@ 117,152 SAY OemToAnsi(STR0071)		         SIZE 50, 8 OF oDlg PIXEL		//"Valor Bruto"
@ 115,205 MSGET nValBruto		                 PICTURE PesqPict("SF1","F1_VALMERC") WHEN .F. SIZE 50, 8 OF oDlg PIXEL

@ 147,004 SAY OemToAnsi(STR0072) 	         	 SIZE 50, 8 OF oDlg PIXEL		//"Valor IVA"
@ 145,075 MSGET nValIVA			                 PICTURE PesqPict("SF1","F1_VALMERC") SIZE 50, 8 OF oDlg PIXEL
@ 147,152 SAY OemToAnsi(STR0073)     	 		 SIZE 60, 8 OF oDlg PIXEL		//"Perc. IB 38/95"
@ 145,205 MSGET nPercIB3895		                 PICTURE PesqPict("SF1","F1_VALMERC") SIZE 50, 8 OF oDlg PIXEL

@ 162,004 SAY OemToAnsi(STR0074)        		 SIZE 60, 8 OF oDlg PIXEL		//"Perc. IVA 3337"
@ 160,075 MSGET nPercIVA		                 PICTURE PesqPict("SF1","F1_VALMERC") SIZE 50, 8 OF oDlg PIXEL
@ 162,152 SAY OemToAnsi(STR0075)       			 SIZE 60, 8 OF oDlg PIXEL		//"Perc. IB 672/95"
@ 160,205 MSGET nPercIB672		                 PICTURE PesqPict("SF1","F1_VALMERC") SIZE 50, 8 OF oDlg PIXEL

@ 177,004 SAY OemToAnsi(STR0076)			     SIZE 50, 8 OF oDlg PIXEL		//"Perc. SUSS"
@ 175,075 MSGET nPercSUSS		                 PICTURE PesqPict("SF1","F1_VALMERC") SIZE 50, 8 OF oDlg PIXEL
@ 177,152 SAY OemToAnsi(STR0077)	 			 SIZE 50, 8 OF oDlg PIXEL		//"Otras Perc."
@ 175,205 MSGET nOutraPerc		                 PICTURE PesqPict("SF1","F1_VALMERC") SIZE 50, 8 OF oDlg PIXEL

ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpca:=1,if(Fa560Ok(nValMerc,nValBruto,(nValMerc+nValIVA+nValDesp+nValFrete+nValSeguro-nValDesc),cNFiscal),oDlg:End(),nOpca := 0)},{||oDlg:End()})

If nOpcA == 1
	//Carrega o Array aCompFis (Comprovante Fiscal)
	AADD(aCompFis,{cNFiscal,cSerie,cFornece,cLoja,dEmissao,cNatureza,cTpDoc})
	AADD(aCompFis,{nValDesp,nValDesc,nValFrete,nValSeguro,nValMerc,nValBruto})
    AADD(aCompFis,{nValIVA,nPercIB3895,nPercIVA,nPercIB672,nPercSUSS,nOutraPerc,cConta})
Else
 	aCompFis := {}
EndIf

RestArea(aSavArea)
Return aCompFis


/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё Fa560Ok    Ё Autor Ё Jose Lucas          Ё Data Ё 21/07/11 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Validar a EnChoice.									 	  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Fa560Ok()						                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ 									    				      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FINA560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Fa560Ok(nVal,nValBruto,nValTot,cNFiscal)
Local lRet := .T.

Default cNFiscal := ""

If nVal == 0
	MsgAlert(OemToAnsi(STR0081))
	lRet := .F.
EndIf

If lRet .And. nValTot<>nValBruto
	Aviso(STR0054,STR0089,{"OK"})
	lRet := .F.
EndIf

If lRet .And. Empty(cNFiscal)
	Aviso(STR0054,STR0062+STR0085,{"OK"})
	lRet := .F.
EndIf

Return(lRet)

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠
╠╠ЁFunГЦo	 Ё Fa560GetImposЁ Autor Ё JosИ Lucas		Ё Data Ё 21/05/11 Ё╠╠
╠╠цддддддддддеддддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠
╠╠ЁDescri┤┘o Ё Retornar array com nome dos campos Base, Aliquota e Valor   Ё╠
╠╠Ё          Ё dos impostos.                                               Ё╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠
╠╠ЁParametrosЁ ExpC1 := Sigla do imposto.                                  Ё╠
╠╠Ё          Ё          Exemplo: "IVA", "IBP"                              Ё╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠
╠╠ЁRetorno	 Ё ExpA1 {Nome do Cpo Base,Aliquota,Imposto}				   Ё╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠
╠╠ЁUso		 Ё LocalizaГЦo Argentina                                       Ё╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function Fa560GetImpos(cSiglaImp,cAlias)
LOCAL aSavArea  := GetArea()
LOCAL aImposto  := {"","","",0.00}
LOCAL cCpoVBase := ""
LOCAL cCpoCAliq := ""
LOCAL cCpoCImpo := ""
LOCAL nAliqImpo := 0.00

SFB->(dbSetOrder(1))
If SFB->(dbSeek(xFilial("SFB")+cSiglaImp))
	While SFB->(!Eof()) .and. SFB->FB_FILIAL == xFilial("SFB") .and. AllTrim(cSiglaImp) $ SFB->FB_CODIGO
		If cAlias == "SD1"
			cCpoVBase := "D1_BASIMP"+AllTrim(SFB->FB_CPOLVRO)
            cCpoCAliq := "D1_ALQIMP"+AllTrim(SFB->FB_CPOLVRO)
   			cCpoCImpo := "D1_VALIMP"+AllTrim(SFB->FB_CPOLVRO)
   			nAliqImpo := SFB->FB_ALIQ
   		Else
			cCpoVBase := "F1_BASIMP"+AllTrim(SFB->FB_CPOLVRO)
			cCpoCAliq := " "
   			cCpoCImpo := "F1_VALIMP"+AllTrim(SFB->FB_CPOLVRO)
   			nAliqImpo := SFB->FB_ALIQ
   		EndIf
        If !Empty(cCpoCImpo)
        	aImposto[1] := cCpoVBase
        	aImposto[2] := cCpoCAliq
			aImposto[3] := cCpoCImpo
			aImposto[4] := nAliqImpo
		EndIf
		SFB->(dbSkip())
	End
EndIf
RestArea(aSavArea)
Return aImposto

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁFA560Lanc ╨Autor  ЁMicrosiga           ╨ Data Ё  23/03/12   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Efetua os lancamentos no PCO e CTB e abate o saldo do cai- ╨╠╠
╠╠╨          Ё xinha. Este processo foi transformado em funcao para ser   ╨╠╠
╠╠╨          Ё executado apos a aprovacao do movimento no controle de     ╨╠╠
╠╠╨          Ё alcada (MV_FINCTAL=2)                                      ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё SIGAFIN                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function FA560Lanc()
Local nSldAtu		:= 0
Local nVlrRep		:= 0
Local lPadrao572	:= VerPadrao("572")
Local nHdlPrv		:= 0
Local lUsaFlag		:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Local aFlagCTB		:= {}
Local nTotal		:= 0
Local lDigita			:= .F.
Local lAglutina		:= .F.
Local lGeraLanc		:= .F.
Local lF560Rep		:= .T.
Local lExecMsg		:= .T.
Local lFa550MSG		:= ExistBlock("Fa550MSG")
Local lMntTms		:= ( SuperGetMV( "MV_NGMNTMS",,'N') == 'S' )//-- Ativa integracao TMS X MNT.
Local cArquivo
Local cSerDesp		:= ( SuperGetMV('MV_SERDESP',,'' ) )

Private aFolTms		:= {}
Private aFolTmsBkp	:= {}
Private cLote		:= ""
Private aDiario		:= {}

lF560Auto := If( TYPE("lF560Auto") == "U",.F.,lF560Auto )

Pergunte("FIA550",.F.)

lDigita		:= If(MV_PAR01 == 1,.T.,.F.)
lAglutina	:= If(MV_PAR02 == 1,.T.,.F.)
lGeraLanc	:= If(MV_PAR03 == 1,.T.,.F.)

//***Posicionar no registro do SEU***
If UsaSeqCor()
	cCodDiario:= M->EU_DIACTB
	AADD(aDiario,{"SEU",SEU->(recno()),cCodDiario,"EU_NODIA","EU_DIACTB"})
Endif

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoDetLan("000359","02","FINA560")
dbSelectArea("SET")

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Atualiza saldo do caixinha                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
nSldAtu := ET_SALDO - SEU->EU_VALOR
RecLock("SET",.F.)
REPLACE ET_SALANT WITH ET_SALDO
REPLACE ET_SALDO WITH nSldAtu
MsUnlock()

If FXMultSld()
	AtuSalCxa( ET_CODIGO, dDataBase, SEU->EU_VALOR * -1 )
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada F560GRV              						    Ё
//Ё Destina-se a gravacoes complementares do movimento do caixinha  Ё
//Ё inclusive para criar o cheque avulso quando ao adiantamento     Ё
//Ё exigir															Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("F560GRV")
	ExecBlock("F560GRV",.F.,.F.)
Endif

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoDetLan("000359","01","FINA560")

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё contabilizacao do movimento                                     Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

If lPadrao572 .and. lGeraLanc
	If nHdlPrv <= 0
		LoteCont("FIN")
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Inicializa Lancamento Contabil                                   Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			nHdlPrv := HeadProva( cLote,;
			                      "FINA560" /*cPrograma*/,;
			                      Substr( cUsuario, 7, 6 ),;
			                      @cArquivo )
	Endif
	If  nHdlPrv > 0 .And. Empty(SEU->EU_LA)
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Prepara Lancamento Contabil                                      Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
				aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
			Endif
			nTotal += DetProva( nHdlPrv,;
			                    "572" /*cPadrao*/,;
			                    "FINA560" /*cPrograma*/,;
			                    cLote,;
			                    /*nLinha*/,;
			                    /*lExecuta*/,;
			                    /*cCriterio*/,;
			                    /*lRateio*/,;
			                    /*cChaveBusca*/,;
			                    /*aCT5*/,;
			                    /*lPosiciona*/,;
			                    @aFlagCTB,;
			                    /*aTabRecOri*/,;
			                    /*aDadosProva*/ )
	Endif

	If nHdlPrv > 0 .And. nTotal > 0
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Efetiva Lan┤amento Contabil                                      Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			RodaProva( nHdlPrv,;
			           nTotal )
			If cA100Incl( cArquivo,;
				           nHdlPrv,;
				           3 /*nOpcx*/,;
				           cLote,;
				           lDigita,;
				           lAglutina /*lAglut*/,;
				           /*cOnLine*/,;
				           /*dData*/,;
				           /*dReproc*/,;
				           @aFlagCTB,;
				           /*aDadosProva*/,;
				           aDiario )
					If !lUsaflag
						Reclock("SEU",.F.)
						Replace EU_LA	With "S"
						MsUnLock()
					Endif
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					PcoDetLan("000359","02","FINA560")
			Endif
			aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada F560REP              							Ё
//Ё Destina-se a permitir ou nao as reposicoes. O retorno sera logi-Ё
//Ё co, sendo .T. permite a reposicao ou .F. em caso contrario. 	Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("F560REP")
	lF560Rep := ExecBlock("F560REP",.F.,.F.)
Endif

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o saldo ficou negativo ou      Ё
//Ё atingiu o limite de reposicao              Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
DbSelectArea('SET')
lExecMsg := If(lFa550MSG,ExecBlock("Fa550MSG",.F.,.F.),.T.) .And. !lF560Auto
If lF560Rep .and. ((nSldAtu < 0) .Or.;
	Iif( ET_TPREP=="0", (ET_VALOR - nSldAtu > ET_LIMREP),;
	((1-nSldAtu/ET_VALOR)*100 > ET_LIMREP) ))
	If ExistBlock("FA550VERIF",.T.) .And. Fa550Verif()
		If Fa550VlUsr(SET->ET_CODIGO,__CUSERID)
			If lExecMsg
				If MsgYesNo(OemToAnsi(STR0019),OemToAnsi(STR0020))
					// "Deseja fazer a reposicao agora? ","Valor limite de reposicao atingido"
					nVlrRep := Fa550Rep20(ET_CODIGO,.T.,.T.,.T.) // Baixa e repoe
				Endif
			Endif
		Else
			MsgAlert(OemToAnsi(STR0020))
		Endif
	Else
		If lExecMsg
			If MsgYesNo(OemToAnsi(STR0019),OemToAnsi(STR0020))
				// "Deseja fazer a reposicao agora? ","Valor limite de reposicao atingido"
				nVlrRep := Fa550Repor( ET_CODIGO,.T.,.T.,.T.) // Baixa e repoe
			Endif
		Endif
	EndIf
Endif

If cPaisLoc <> "BRA"

	DbSelectArea('SET')
	DbSetOrder(1)
	MsSeek(xFilial()+SEU->EU_CAIXA)
	RecLock('SET',.F.)
	Replace ET_NRREND WITH SEU->EU_NRREND
    MsUnLock()

	PcoDetLan("000359","01","FINA550")

Endif

If IntTMS() .And. nModulo == 43
	If (!Empty(SEU->EU_CODVEI) .And. !Empty(SEU->EU_CODDES) .And. ;
					Posicione("DA3",1,xFilial("DA3")+SEU->EU_CODVEI,"DA3_FROVEI") == StrZero(1,Len(DA3->DA3_FROVEI)));
					.Or. ( !Empty(SEU->EU_FILORI) .And. !Empty(SEU->EU_VIAGEM) .And. !Empty(SEU->EU_CODDES))
		// Grava o Custo de Transporte
		TMA250GrvSDG("SEU",SEU->EU_FILORI,SEU->EU_VIAGEM,SEU->EU_CODDES,SEU->EU_VALOR,1,SEU->EU_CODVEI,,,,,,,SEU->EU_NUM)
	EndIf
	If lMntTms
		// Grava Os e Finalizada a mesma.
		TmsMntGrOs('2',cSerDesp,aFolTms,aFolTmsBkp)
	EndIf
	aFolTms		:= {}
	aFolTmsBkp	:= {}
EndIf

Return


/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддддбддддддбдддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё FB560Inclui Ё AutorЁ Carlos E. Chigres   Ё Data Ё 08/11/12 Ё╠╠
╠╠цддддддддддедддддддддддддаддддддадддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Inclusao de Comprovantes do Caixinha em modo PLANILHA      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe e Ё FB560Inclui()                                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo									  Ё╠╠
╠╠Ё			 Ё ExpN1 = Nёmero do registro 								  Ё╠╠
╠╠Ё			 Ё ExpN2 = Nёmero da op┤└o selecionada 						  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FINA560 - Localizacao Chile                                Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function FB560Inclui(cAlias,nReg,nOpc,cFilOri,cViagem)

Local aArea		 := GetArea()
Local nOpcA		 := 0
Local nPosi      := 1
Local nInd       := 1
Local nCntFor	 := 0
Local nSaveSx8	 := GetSx8Len()
Local cCampo     := " "
Local aSize		 := {}
Local aObjects	 := {}
Local aInfo		 := {}
Local aPosObj	 := {}
Local aCampos    := {}
Local aUnWanted  := {}

//--- array de controle de Lock nos Caixinhas (usado em Fb560Caixa)
Private aCajas   := {}

Private aFolTms    := {}
Private aFolTmsBkp := {}

//зддддддддддддддддддддддддддддддддддддд©
//Ё Monta a entrada de dados do arquivo Ё
//юддддддддддддддддддддддддддддддддддддды
Private aTELA[0][0],aGETS[0]

Private oGet01
Private aHeader := {}, aCols := {}

Private ADIANTAMENTO :=	.F.

DEFAULT cFilOri		:= ''
DEFAULT cViagem		:= ''

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Composicao dos campos que irao fazer parte da MsNewGetDados. Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
aCampos := { "EU_NUM","EU_CAIXA","EU_TIPO","EU_HISTOR","EU_NRCOMP","EU_VALOR","EU_MOEDA","EU_EMISSAO","EU_DTDIGIT",;
             "EU_BENEF","EU_FORNECE","EU_LOJA","EU_NOME","EU_CONTAD","EU_CONTAC","EU_CCD","EU_CCC",;
             "EU_ITEMD","EU_ITEMC","EU_CLVLDB","EU_CLVLCR","EU_NODIA","EU_SLDADIA","EU_NRREND" }

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Composicao dos campos que NAO PODEM fazer parte da MsNewGetDados  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
aUnWanted := { "EU_CGC","EU_CONTA","EU_BAIXA","EU_NROADIA","EU_DIACTB","EU_VLMOED2",;
               "EU_NFISCAL","EU_SERIE","EU_CODAPRO","EU_APROVA" }

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Funcao que monta o aHeader e o aCols vazio Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
A560Fill( cAlias, aUnWanted, aCampos )

//здддддддддддддддддддддддддд©
//Ё Inicia lancamento no PCO Ё
//юдддддддддддддддддддддддддды
PcoIniLan("000359")

//зддддддддддддддддддддддддддддддддддд©
//Ё Envia para processamento dos Gets Ё
//юддддддддддддддддддддддддддддддддддды

	//+------------------------------------------------------+
	//| Faz o calculo automatico de dimensoes de objetos     |
	//+------------------------------------------------------+
	aSize := MsAdvSize()
	aObjects := {}
	AAdd( aObjects, { 100, 100, .t., .t. } )

	aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
	aPosObj := MsObjSize( aInfo, aObjects )

   	Define MSDialog oDlg Title cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd Pixel

       oGet01 := MSNewGetDados():New(aPosObj[1,1]+2,aPosObj[1,2]+1,aPosObj[1,3],aPosObj[1,4],Iif(Altera .Or. Inclui, GD_INSERT+GD_DELETE+GD_UPDATE, 0), "B560LinOk" ,"Allwaystrue()" , , , , 999, ,  , "B560DelK" , oDlg, aHeader, aCols )

	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpca:=1,If( oGet01:TudoOk(), oDlg:End(), nOpca:=0)},{||nOpca:=0,oDlg:End()})


If nOpcA == 1

	Begin Transaction

	//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Tratamento aCols, ordenando pela Caixinha + EU_NUM Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
	aSort( oGet01:aCols,,,{|x,y| x[2]+x[1] < y[2]+y[1] } )

	//зддддддддддддддддддддддддддддддд©
	//Ё Loop para a Gravacao do aCols Ё
	//юддддддддддддддддддддддддддддддды
    //
    dbSelectArea( "SEU" )
    //
    For nInd := 1 TO Len( oGet01:aCols )

       If !GDDeleted( nInd, oGet01:aHeader, oGet01:aCols )

	      RecLock( "SEU", .T. )

		    SEU->EU_FILIAL := xFilial("SEU")

	        For nCntFor := 1 TO Len( aCampos )

               cCampo  := aCampos[ nCntFor ]
               nPosi   := FieldPos( cCampo )
               xContem := GDFieldGet( cCampo, nInd, , oGet01:aHeader, oGet01:aCols )

                If nPosi > 0
                   //--- Grava, se o campo existe na base
			       FieldPut( nPosi, xContem )
			       //
                EndIf

            Next nCntFor

			//--- Grava Status de aguardando liberaГЦo do tМtulo se o campo existir.
			SEU->EU_STATUS := "01"

           /*
            * Se o movimento NцO for do tipo Adiantamento, o movimento ficarА indisponМvel para integraГЦo com o uMov.me
            */
			If lIntUMovMe
				If SEU->EU_TIPO <> '01'
					SEU->EU_STAUMOV := ' '
					SEU->EU_ENVUMOV := ' '
				EndIf
			Endif

           //здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
           //Ё Bloco para gravar o numero de sequencial de caixa aberto Ё
           //юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	       SEU->( DbCommit() )

           //--- Posiciona no Caixinha
	       dbSelectArea("SET")
	       dbSetOrder(1)
	       dbSeek( xFilial("SET")+SEU->EU_CAIXA)
           //
           dbSelectArea( "SEU" )

	       SEU->EU_SEQCXA := SET->ET_SEQCXA
           //здддддддддддддд©
           //Ё Fim do Bloco Ё
           //юдддддддддддддды

           //здддддддддддддддддддддддддддддддддддддддддддддддддд©
           //Ё Bloco para avaliar e gravar o Saldo Adiantamento Ё
           //юдддддддддддддддддддддддддддддддддддддддддддддддддды
             If SEU->EU_TIPO == "01"
                SEU->EU_SLDADIA := SEU->EU_VALOR
             EndIf

	      MsUnLock()

          //здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
          //Ё Efetua os lancamentos no PCO e CTB e abate o saldo do caixinha   Ё
          //юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
          FB560Lanc()

       EndIf

    Next nInd

    While (GetSx8Len() > nSaveSx8 )
	   ConfirmSX8()
	Enddo

	End Transaction

Else

	While ( GetSx8Len() > nSaveSx8 )
		RollBackSX8()
	EndDO

EndIf

//здддддддддддддддддддддддддддддддддддддддд©
//Ё Desfazer os Locks feitos em Fb560Valor Ё
//юдддддддддддддддддддддддддддддддддддддддды
dbSelectArea( "SET" )
dbSetOrder( 1 )
  //
  For nInd := 1 TO Len( aCajas )

     cCampo := aCajas[ nInd ][ 1 ]
     //
     If dbSeek( xFilial("SET") + cCampo )

        MsUnLock()

     EndIf

  Next nInd

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Finaliza a gravacao dos lancamentos do SIGAPCO            Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoFinLan("000359")
PcoFreeBlq("000359")
dbSelectArea(cAlias)
RestArea(aArea)

Return Nil

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁB560LinOk Ё Autor Ё Andre Schwartz        Ё Data Ё 22/11/04 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Verifica se a linha digitada esta OK                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FB560Inclui, FINA560                                       Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function B560LinOk()

Local lRet     := .T.

Local nI       := 1
Local nPos     := 1
Local cCampo   := " "
Local xContem  := NIL
Local aVerCamp := { "EU_CAIXA", "EU_TIPO", "EU_HISTOR", "EU_VALOR", "EU_BENEF", "EU_NRCOMP", "EU_EMISSAO" }

//--- Ignore linhas deletadas
If !GDDeleted( n, oGet01:aHeader, oGet01:aCols )

   For nI := 1 To Len( aVerCamp )

      cCampo  := aVerCamp[ nI ]

      xContem := GDFieldGet( cCampo, n, , oGet01:aHeader, oGet01:aCols )

      If Empty( xContem )

         nPos   := GDFieldPos( cCampo, oGet01:aHeader )
         cCampo := oGet01:aHeader[ nPos ][ 1 ]
         //--- Inconsistencia , Campo Obrigatorio - nЦo preenchido.
         Aviso( STR0083, STR0084 + cCampo + STR0085, { 'Ok' } )

         lRet := .F.

         EXIT

      EndIf

   Next nI

EndIf

If lRet
   lRet := PcoVldLan('000359','02','FINA560',,,.T.)
EndIf

Return( lRet )

/*
ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммммкммммммммммммкмммммммкммммммммммммммммммммкммммммкмммммммммм╩╠╠
╠╠╨ Programa   ╨ A560Fill   ╨ Autor ╨        Nava        ╨ Data ╨ 18/10/01 ╨╠╠
╠╠лммммммммммммйммммммммммммймммммммйммммммммммммммммммммйммммммймммммммммм╧╠╠
╠╠╨   Preenche aHeader e Acols da GetDados                                 ╨╠╠
╠╠лммммммммммммкммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨ Sintaxe    ╨ A560Fill( cAlias, aNoFields, aYesFields, lOnlyYes )       ╨╠╠
╠╠╨            ╨                                                           ╨╠╠
╠╠лммммммммммммнммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨ Parametros ╨                                                           ╨╠╠
╠╠╨         01 ╨ cAlias     - Alias                                        ╨╠╠
╠╠╨         02 ╨ aNoFields  - Campos a serem excluidos                     ╨╠╠
╠╠╨         03 ╨ aYesFields - Campos a serem incluidos                     ╨╠╠
╠╠╨         04 ╨ lOnlyYes   - Flag indicando se considera somente os campos╨╠╠
╠╠╨            ╨ declarados no aYesFields + campos do usuario              ╨╠╠
╠╠лммммммммммммнммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨ Retorno    ╨                                                           ╨╠╠
╠╠╨ммммммммммммнммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨ Uso        ╨ Generico                                                  ╨╠╠
╠╠лммммммммммммнммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨ Comentario ╨ Supoe aHeader e Acols declarados como Private PELO progr. ╨╠╠
╠╠╨            ╨ e inicializadas como um array vazio.                      ╨╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function A560Fill( cAlias, aNoFields, aYesFields, lOnlyYes )

Local nX         := 1
Local nPos       := 1
Local aChange    := {}
Local cTxValid   := " "

Local aArea 	 := GetArea()
Local aAreaAlias := ( cAlias )->( GetArea() )
Local lNoFields	 := ( aNoFields <> NIL )
Local lYesFields := ( aYesFields <> NIL )

//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё aHeader e Acols devem vir definidos OBRIGATORIAMENTE Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local nUsado      := Len( aHeader )

Default lOnlyYes  := .F.

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Composicao dos VALIDS que serao alterados na MsNewGetDados Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
  Aadd( aChange, { "EU_CAIXA", "ExistCpo('SET') .And. Fb560Caixa()" } ) // Vazio() .or. ExistCpo("SET")
  Aadd( aChange, { "EU_TIPO" , "Pertence('00|01')" } )              // Len(M->EU_TIPO)>1 .And. Pertence("00|01")
  Aadd( aChange, { "EU_VALOR", "Positivo() .And. Fb560Valor()" } )  // Positivo() .And. Fa560Valor()

//зддддддддддддддддддддддд©
//Ё Monta o array aHeader Ё
//юддддддддддддддддддддддды
SX3->( DbSetOrder( 1 ) )
SX3->( DbSeek( cAlias ) )

SX3->( DbEval( {||	++nUsado, ;
		 					AADD(	aHeader, {	AllTrim( X3Titulo()), ;
												RTrim(X3_CAMPO),;
												X3_PICTURE, ;
												X3_TAMANHO, ;
												X3_DECIMAL, ;
												X3_VALID, 	;
												X3_USADO,	;
												X3_TIPO, 	;
												X3_F3,	    ;
												X3_CONTEXT  } ) },;
					{ || 	( lYesFields .AND. Ascan( aYesFields, { |x| x == AllTrim( X3_CAMPO ) } ) > 0 ) .OR. ;
							If(lOnlyYes,X3_PROPRI == "U" .And. X3USO(X3_USADO) .AND. cNivel >= X3_NIVEL,;
							( X3USO(X3_USADO) .AND. cNivel >= X3_NIVEL .AND. ;
							( !lNoFields .OR. Ascan( aNoFields, Rtrim( X3_CAMPO ) ) == 0 ) )) },;
					{ || 	! Eof() .AND. X3_ARQUIVO == cAlias } )	)


//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Varredura do aHeader ja montado, para interceptar os Valids Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
For nX := 1 To Len( aHeader )

    //--- Determina a posicao do Campo no aChange
    nPos := aScan( aChange, { |x| x[ 1 ] == aHeader[ nX ][ 2 ] } )

    If nPos > 0

       cTxValid := aChange[ nPos ][ 2 ]

       If !Empty( cTxValid )

          aHeader[ nX ][ 6 ] := cTxValid

       EndIf

    EndIf

Next nX


//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta o aCols vazio para a MsNewGetDados() Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
Aadd(aCols,Array(nUsado+1))
Aeval( aHeader, {|aCampo, nI| aCols[1][nI] := ( cAlias )->( CriaVar(aHeader[nI,2],.T.) ) } )
aCols[Len(aCols)][nUsado+1] := .F.

RestArea( aAreaAlias )
RestArea( aArea )

Return Nil


/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё Fb560Valor Ё Autor Ё Carlos E. Chigres   Ё Data Ё 08/11/12 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Validacao do campo EU_VALOR                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Fb560Valor()                                               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Acionado exclusivamente no modo Planilha da Inclusao       Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Fb560Valor()

//--- Retorno
Local lRet := .T.

//--- Ambiente
Local aAreaAnt  := GetArea()

//--- Genericas
Local nX        := 1
Local nPosValor := GDFieldPos( "EU_VALOR", oGet01:aHeader )
Local nPosCaixa := GDFieldPos( "EU_CAIXA", oGet01:aHeader )
Local lRetValor := .T.

//--- Leitura de campos do aCols
Local nValor    := GDFieldGet( "EU_VALOR", n, .T., oGet01:aHeader, oGet01:aCols )    // 3o parametro -> ReadVar
Local cCaixa    := GDFieldGet( "EU_CAIXA", n, , oGet01:aHeader, oGet01:aCols )

//--- Movimento Acumulado
Local cCajaCh   := " "
Local nMoveCx   := 0


If ExistBlock("F560VALOR")
   lRetValor := ExecBlock("F560VALOR",.F.,.F.)
Endif


If nValor <= 0

	Help(" ",1,"FA560VALOR")
	lRet := .F.

ElseIf ValType("cCaixa") == "C" .And. Empty( cCaixa )

	// No caso de adiantamento, o acols nao contem o campo EU_CAIXA
	Help(" ",1,"FA560CXVAZ")
	lRet := .F.

EndIf


//--- Prossegue ?
If lRet

   //зддддддддддддддддддддддддддддддддддддддддддддд©
   //Ё Trecho construido para Somar os valores dos Ё
   //Ё Movimentos ja digitados e que pertencam a   Ё
   //Ё mesma CAIXINHA.                             Ё
   //юддддддддддддддддддддддддддддддддддддддддддддды
    nMoveCx := 0

	For nX := 1 To Len( oGet01:aCols )

        //--- Nao considera linhas deletadas
        If !GDDeleted( nX, oGet01:aHeader, oGet01:aCols )

           //--- Nao posso considerar a linha que esta sendo editada ...
           If nX != n

              //--- Extracao da Caixa lida do aCols
              cCajaCh := aCols[ nX ][ nPosCaixa ]

              //--- Acumula SOMENTE se for da mesma Caixa da Linha que esta sendo digitada / validada
              If cCajaCh == cCaixa

                 nMoveCx += aCols[ nX ][ nPosValor ]

              EndIf

           EndIf

	    EndIf

	Next nX

    //здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
    //Ё Na validacao do valor digitado, e verificado se o saldo da Ё
    //Ё caixinha selecionada e suficiente para o movimento.        Ё
    //Ё Para esta validacao, nao devera ser considerado            Ё
    //Ё simplesmente o saldo atual da caixinha: o valor a ser      Ё
    //Ё considerado sera o saldo da caixinha subtraindo-lhe        Ё
    //Ё os valores dos movimentos (linhas) ja digitados e que      Ё
    //Ё pertencam a mesma caixinha.                                Ё
    //юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SET")
	dbSetOrder(1)
	dbSeek( xFilial("SET")+cCaixa )

	If SET->ET_SALDO - nMoveCx < nValor .And. lRetValor   // Valor informado e' superior ao saldo
       Help(" ",1,"FA560SALDO")
	   lRet := .F.
	EndIf

EndIf


RestArea( aAreaAnt )

Return( lRet )


/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё Fb560Caixa Ё Autor Ё Carlos E. Chigres   Ё Data Ё 08/11/12 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Validacao do campo EU_CAIXA                                Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠Ё          Ё Devido a validacao do VALOR no Lancamento, nao sera        Ё╠╠
╠╠Ё          Ё possivel trocar o campo EU_CAIXA apos informado. Afinal,   Ё╠╠
╠╠Ё          Ё a validacao do VALOR se da somando os lancamentos para a   Ё╠╠
╠╠Ё          Ё mesma Caixinha ao longo do aCols.                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Fb560Caixa()                                               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Acionado exclusivamente no modo Planilha da Inclusao       Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Fb560Caixa()

//--- Retorno
Local lRet := .T.

//--- Genericas
Local lFwd     := .T.
Local nPos     := 1
Local cFilSET  := xFilial("SET")
Local aAreaAnt := GetArea()

//--- Leitura do CONTEUDO do aCols - terceiro parametro se TRUE representa ReadVar
Local cContem := GDFieldGet( "EU_CAIXA", n, .F., oGet01:aHeader, oGet01:aCols )
Local xConten := GDFieldGet( "EU_CAIXA", n, .T., oGet01:aHeader, oGet01:aCols )


 //--- Verifica se existe CONTEUDO PREVIO ja armazenado no aCols
 If Empty( cContem )

    If !Empty( xConten )

       dbSelectArea("SET")
       dbSetOrder( 1 )
       lFwd := dbSeek( cFilSET + xConten )

       If lFwd

          If SET->( MsRLock() )

             nPos := aScan( aCajas, {|x| x[ 1 ] ==  SET->ET_CODIGO } )
             //
             If nPos == 0
                Aadd( aCajas, { SET->ET_CODIGO , " " } )
             EndIf

          Else

             lRet := .F.
             //
             IW_MsgBox( STR0087, STR0054, "STOP" )  //"Este Caixinha estА sendo utilizado em outro terminal, nЦo pode ser utilizado no Movimento"###"AtenГЦo"

          EndIf

       EndIf

    EndIf

 Else

    lRet := .F.
    //---  Inconsistencia , JА existe uma Caixinha informada, e nЦo pode ser alterada.
    Aviso( STR0083, STR0086 , { "Ok" } ) //"Inconsistencia"###"JА existe uma Caixinha informada, e nЦo pode ser alterada."

 EndIf

RestArea( aAreaAnt )

Return( lRet )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё B560DelK Ё Autor Ё Andre Schwartz        Ё Data Ё 22/11/04 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Na restauracao da linha, precisa checar Valor novamente    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FB560Inclui, FINA560                                       Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function B560DelK()

Local lRet := .T.

//--- Ambiente
Local aAreaAnt  := GetArea()

//--- Genericas
Local nX        := 1
Local nPosValor := GDFieldPos( "EU_VALOR", oGet01:aHeader )
Local nPosCaixa := GDFieldPos( "EU_CAIXA", oGet01:aHeader )

//--- Leitura de campos do aCols
Local nValor    := GDFieldGet( "EU_VALOR", n, , oGet01:aHeader, oGet01:aCols )
Local cCaixa    := GDFieldGet( "EU_CAIXA", n, , oGet01:aHeader, oGet01:aCols )

//--- Movimento Acumulado
Local cCajaCh   := " "
Local nMoveCx   := 0

 //--- Se ja esta deletado, nao deixa reintegrar ... pela validacao do campo Valor
 If GDDeleted( n, oGet01:aHeader, oGet01:aCols )

   //зддддддддддддддддддддддддддддддддддддддддддддд©
   //Ё Trecho construido para Somar os valores dos Ё
   //Ё Movimentos ja digitados e que pertencam a   Ё
   //Ё mesma CAIXINHA.                             Ё
   //юддддддддддддддддддддддддддддддддддддддддддддды
    nMoveCx := 0

	For nX := 1 To Len( oGet01:aCols )

        //--- Nao considera linhas deletadas
        If !GDDeleted( nX, oGet01:aHeader, oGet01:aCols )

           //--- Nao posso considerar a linha que esta sendo editada ...
           If nX != n

              //--- Extracao da Caixa lida do aCols
              cCajaCh := aCols[ nX ][ nPosCaixa ]

              //--- Acumula SOMENTE se for da mesma Caixa da Linha que esta sendo digitada / validada
              If cCajaCh == cCaixa

                 nMoveCx += aCols[ nX ][ nPosValor ]

              EndIf

           EndIf

	    EndIf

	Next nX

    //здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
    //Ё Na validacao do valor digitado, e verificado se o saldo da Ё
    //Ё caixinha selecionada e suficiente para o movimento.        Ё
    //Ё Para esta validacao, nao devera ser considerado            Ё
    //Ё simplesmente o saldo atual da caixinha: o valor a ser      Ё
    //Ё considerado sera o saldo da caixinha subtraindo-lhe        Ё
    //Ё os valores dos movimentos (linhas) ja digitados e que      Ё
    //Ё pertencam a mesma caixinha.                                Ё
    //юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SET")
	dbSetOrder(1)
	dbSeek( xFilial("SET")+cCaixa )

	If SET->ET_SALDO - nMoveCx < nValor    // Valor informado e' superior ao saldo
       Help(" ",1,"FA560SALDO")
	   lRet := .F.
	EndIf

 EndIf

RestArea( aAreaAnt )

Return( lRet )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁFB560Lanc ╨Autor  ЁMicrosiga           ╨ Data Ё  23/03/12   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Efetua os lancamentos no PCO e CTB e abate o saldo do      ╨╠╠
╠╠╨          Ё caixinha.                                                  ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё SIGAFIN                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function FB560Lanc()

Local nSldAtu		:= 0
Local nVlrRep		:= 0
Local lPadrao572	:= VerPadrao("572")
Local nHdlPrv		:= 0
Local lUsaFlag		:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Local aFlagCTB		:= {}
Local nTotal		:= 0
Local lDigita		:= If(MV_PAR01 == 1,.T.,.F.)
Local lAglutina		:= If(MV_PAR02 == 1,.T.,.F.)
Local lGeraLanc		:= If(MV_PAR03 == 1,.T.,.F.)
Local lF560Rep		:= .T.
Local lExecMsg		:= .T.
Local lFa550MSG		:= ExistBlock("Fa550MSG")
Local lMntTms		:= ( SuperGetMV( "MV_NGMNTMS",,'N') == 'S' )//-- Ativa integracao TMS X MNT.
Local cArquivo
Local cSerDesp		:= ( SuperGetMV('MV_SERDESP',,'' ) )

Private aFolTms		:= {}
Private aFolTmsBkp	:= {}
Private cLote		:= ""
Private aDiario		:= {}

//***Posicionar no registro do SEU***
If UsaSeqCor()
	cCodDiario := SEU->EU_DIACTB
	AADD(aDiario,{"SEU",SEU->(recno()),cCodDiario,"EU_NODIA","EU_DIACTB"})
Endif

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoDetLan("000359","02","FINA560")
dbSelectArea("SET")

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Atualiza saldo do caixinha                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
nSldAtu := ET_SALDO - SEU->EU_VALOR
RecLock("SET",.F.)
REPLACE ET_SALDO WITH nSldAtu
//MsUnlock()     // Mantem bloqueado - lancamento modo Grid

If FXMultSld()
	AtuSalCxa( ET_CODIGO, dDataBase, SEU->EU_VALOR * -1 )
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoDetLan("000359","01","FINA560")

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё contabilizacao do movimento                                     Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

If lPadrao572 .and. lGeraLanc
	If nHdlPrv <= 0
		LoteCont("FIN")
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Inicializa Lancamento Contabil                                   Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			nHdlPrv := HeadProva( cLote,;
			                      "FINA560" /*cPrograma*/,;
			                      Substr( cUsuario, 7, 6 ),;
			                      @cArquivo )
	Endif
	If  nHdlPrv > 0 .And. Empty(SEU->EU_LA)
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Prepara Lancamento Contabil                                      Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
				aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
			Endif
			nTotal += DetProva( nHdlPrv,;
			                    "572" /*cPadrao*/,;
			                    "FINA560" /*cPrograma*/,;
			                    cLote,;
			                    /*nLinha*/,;
			                    /*lExecuta*/,;
			                    /*cCriterio*/,;
			                    /*lRateio*/,;
			                    /*cChaveBusca*/,;
			                    /*aCT5*/,;
			                    /*lPosiciona*/,;
			                    @aFlagCTB,;
			                    /*aTabRecOri*/,;
			                    /*aDadosProva*/ )
	Endif

	If nHdlPrv > 0 .And. nTotal > 0
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Efetiva Lan┤amento Contabil                                      Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			RodaProva( nHdlPrv,;
			           nTotal )
			If cA100Incl( cArquivo,;
				           nHdlPrv,;
				           3 /*nOpcx*/,;
				           cLote,;
				           lDigita,;
				           lAglutina /*lAglut*/,;
				           /*cOnLine*/,;
				           /*dData*/,;
				           /*dReproc*/,;
				           @aFlagCTB,;
				           /*aDadosProva*/,;
				           aDiario )
					If !lUsaflag
						Reclock("SEU",.F.)
						Replace EU_LA	With "S"
						MsUnLock()
					Endif
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Gravacao dos lancamentos do SIGAPCO                       Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					PcoDetLan("000359","02","FINA560")
			Endif
			aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada F560REP              							Ё
//Ё Destina-se a permitir ou nao as reposicoes. O retorno sera logi-Ё
//Ё co, sendo .T. permite a reposicao ou .F. em caso contrario. 	Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("F560REP")
	lF560Rep := ExecBlock("F560REP",.F.,.F.)
Endif

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o saldo ficou negativo ou      Ё
//Ё atingiu o limite de reposicao              Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
DbSelectArea('SET')
lExecMsg := If(lFa550MSG,ExecBlock("Fa550MSG",.F.,.F.),.T.)
If lF560Rep .and. ((nSldAtu < 0) .Or.;
	Iif( ET_TPREP=="0", (ET_VALOR - nSldAtu > ET_LIMREP),;
	((1-nSldAtu/ET_VALOR)*100 > ET_LIMREP) ))
	If ExistBlock("FA550VERIF",.T.) .And. Fa550Verif()
		If Fa550VlUsr(SET->ET_CODIGO,__CUSERID)
			If lExecMsg
				If MsgYesNo(OemToAnsi(STR0019),OemToAnsi(STR0020))
					// "Deseja fazer a reposicao agora? ","Valor limite de reposicao atingido"
					nVlrRep := Fa550Rep20(ET_CODIGO,.T.,.T.,.T.) // Baixa e repoe
				Endif
			Endif
		Else
			MsgAlert(OemToAnsi(STR0020))
		Endif
	Else
		If lExecMsg
			If MsgYesNo(OemToAnsi(STR0019),OemToAnsi(STR0020))
				// "Deseja fazer a reposicao agora? ","Valor limite de reposicao atingido"
				nVlrRep := Fa550Repor( ET_CODIGO,.T.,.T.,.T.) // Baixa e repoe
			Endif
		Endif
	EndIf
Endif

If cPaisLoc <> "BRA"

	DbSelectArea('SET')
	DbSetOrder(1)
	MsSeek(xFilial()+SEU->EU_CAIXA)
	RecLock('SET',.F.)
	Replace ET_NRREND WITH SEU->EU_NRREND
    //MsUnlock()     // Mantem bloqueado - lancamento modo Grid

	PcoDetLan("000359","01","FINA550")

Endif

If IntTMS() .And. nModulo == 43
	If (!Empty(SEU->EU_CODVEI) .And. !Empty(SEU->EU_CODDES) .And. ;
					Posicione("DA3",1,xFilial("DA3")+SEU->EU_CODVEI,"DA3_FROVEI") == StrZero(1,Len(DA3->DA3_FROVEI)));
					.Or. ( !Empty(SEU->EU_FILORI) .And. !Empty(SEU->EU_VIAGEM) .And. !Empty(SEU->EU_CODDES))
		// Grava o Custo de Transporte
		TMA250GrvSDG("SEU",SEU->EU_FILORI,SEU->EU_VIAGEM,SEU->EU_CODDES,SEU->EU_VALOR,1,SEU->EU_CODVEI,,,,,,,SEU->EU_NUM)
	EndIf
	If lMntTms
		// Grava Os e Finalizada a mesma.
		TmsMntGrOs('2',cSerDesp,aFolTms,aFolTmsBkp)
	EndIf
	aFolTms		:= {}
	aFolTmsBkp	:= {}
EndIf

Return

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  Ё FA560TOK  ╨Autor  ЁLeonardo Castro╨    Data Ё  07/02/13   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё ValidaГЦo de saldo na confirmaГЦo de inclusЦo              ╨╠╠
╠╠╨          Ё  de movimento do caixinha.                                 ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё Financeiro - Caixinha                                      ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/

Function FA560TOK()

Local lRet := .F.

DbSelectArea("SET")
SET->(DbSetOrder(1))
If DbSeek(xFilial("SET")+M->EU_CAIXA)
	If Obrigatorio(aGets,aTela) .AND. F560VerPE() .And. PcoVldLan('000359','02','FINA560') .And. F560VldApr()
		If M->EU_VALOR < SET->ET_SALDO
			lRet := .T.
		Else
		    Help(" ",1,"FA560SLD")
		EndIf
    EndIf
EndIf

Return lRet


//SIGAFIN X SIGAPFS

//-----------------------------------------------------------------------------------------------------
/*/{Protheus.doc} Fin560When

Verificacao de possibilidade de edicao dos campos do caixinha criados para a integracao
Sigafin x SigaPFS

@author    Mauricio Pequim Jr
@version   11.80
@since     12/03/13

@param cCampo	- CСdigo do Campo a ser verificado

@return ExpL1 = Confirma a possibilidade de ediГЦo do campo (When)

/*/
//-----------------------------------------------------------------------------------------------------
Function Fin560When(cCampo)

Local lRet		:= .F.
Local lCXJurFin	:= FVldJurxFin()
Local lPrestCta := IsInCallStack("Fa560Adian")
Local lClassMov := IsInCallStack("F560Class")
Local cTpMov	:= ""
Local cDespJur	:= ""
Local cFatJur	:= ""
Local cNatureza := ""
Local cRatJur 	:= ""
Local lNatureza := .F.

Default cCampo := ""

If !Empty(cCampo)

	If lPrestCta	//Na prestacao de contas de adiantamento nao tenho os campos de memoria
		cTpMov		:= SEU->EU_TIPO
		cDespJur	:= SEU->EU_DESPJUR
		cFatJur		:= GDFieldGet( "EU_FATJUR", n, .F., aHeader, aCols )
		cNatureza	:= GDFieldGet( "EU_NATUREZ", n, .F., aHeader, aCols )
		cRatJur 	:= "2"
	ElseIf !lClassMov
		cTpMov		:= M->EU_TIPO
		cDespJur	:= M->EU_DESPJUR
		cFatJur		:= M->EU_FATJUR
		cNatureza	:= M->EU_NATUREZ
		cRatJur 	:= M->EU_RATJUR
	Endif

	If lCXJurFin
		If Alltrim(cCampo) $ "EU_DESPJUR"
			lRet := .T.

		ElseIf cDespJur == '1'
			If !Empty(cNatureza)
				SED->(DbSetOrder(1))
				If SED->(MsSeek(xFilial("SED")+cNatureza))
					lNatureza := .T.
				Endif
			Endif

			If cTpMov == '00' //Despesa
				If Alltrim(cCampo) $ "EU_RATJUR|EU_TIPDESP|EU_PROFISS|EU_NATUREZ"
					lRet := .T.


			    //Caso nao seja feito o rateio juridico, os campos abaixo podem ser habilitados.
			    //Caso contrario, somente na tela de rateio.
				ElseIf cRatJur == '2'

					If Alltrim(cCampo) $ "EU_MEMDSCR|EU_FATJUR"
						lRet := .T.
                    Endif

					If cFatJur == '1'
						If Alltrim(cCampo) $ "EU_CLIENTE|EU_LOJACLI|EU_CASO"
							lRet := .T.
						Endif
					ElseIf cFatJur == '2' .and. lNatureza
						If Alltrim(cCampo) == "EU_ESCRIT" .and. SED->ED_ESCRIT == '1'
							lRet := .T.
						ElseIf Alltrim(cCampo) == "EU_GRPJUR" .and. SED->ED_GRPJUR == '1'
							lRet := .T.
						Endif
					Endif
        		Endif
			ElseIf cTpMov == '01' //Adiantamento
				If lPrestCta
					If Alltrim(cCampo) $ "EU_TIPDESP|EU_PROFISS|EU_NATUREZ"
						lRet := .T.

				    //Caso nao seja feito o rateio juridico, os campos abaixo podem ser habilitados.
				    //Caso contrario, somente na tela de rateio.
					ElseIf cRatJur == '2'

						If Alltrim(cCampo) $ "EU_MEMDSCR|EU_FATJUR"
							lRet := .T.
	                    Endif

						If cFatJur == '1'
							If Alltrim(cCampo) $ "EU_CLIENTE|EU_LOJACLI|EU_CASO"
								lRet := .T.
							Endif
						ElseIf cFatJur == '2' .and. lNatureza
							If Alltrim(cCampo) == "EU_ESCRIT" .and. SED->ED_ESCRIT == '1'
								lRet := .T.
							ElseIf Alltrim(cCampo) == "EU_GRPJUR" .and. SED->ED_GRPJUR == '1'
								lRet := .T.
							Endif
						Endif
	        		Endif

				Else
					If Alltrim(cCampo) $ "EU_PROFISS"
						lRet := .T.
					Endif
				Endif
			Endif
		Endif
	ElseIf !lCXJurFin .AND. lIntUMovMe .And. Val(M->EU_ENVUMOV) == 1 .AND. M->EU_TIPO == '01'
		If Alltrim(cCampo) $ "EU_CLIENTE|EU_LOJACLI|EU_PROFISS"
			lRet := .T.
		EndIf
		M->EU_STAUMOV := '1'
	ElseIf M->EU_TIPO <> '01' .OR. (lIntUMovMe .And. M->EU_ENVUMOV $ '2|3')
		If !lCXJurFin
			M->EU_CLIENTE	:= Space(Len(M->EU_CLIENTE))
			M->EU_LOJACLI	:= Space(Len(M->EU_LOJACLI))
			M->EU_PROFISS	:= Space(Len(M->EU_PROFISS))
		EndIf
		If lIntUMovMe
			M->EU_STAUMOV := ' '
			M->EU_ENVUMOV := '2'
		Endif
	Endif
Endif

Return lRet


//-----------------------------------------------------------------------------------------------------
/*/{Protheus.doc} F560TudoOk

Verificacao TudoOk da tela de inclusЦo de movimentos do caixinha

@author    Mauricio Pequim Jr
@version   11.80
@since     12/03/13

@param aGets
@param aTela

@return ExpL1 = Retorno lСgico para as validaГУes realizadas

/*/
//-----------------------------------------------------------------------------------------------------

Function F560TudoOk(aGets,aTela)

Local lRet		:= .F.
Local cTpMov	:= ""
Local cDespJur	:= ""
Local cFatJur	:= ""
Local cNatureza	:= ""
Local cRateio	:= ""
Local lCXJurFin	:= FVldJurxFin()

//Validacao padrao (existente anteriormente)
If Obrigatorio(aGets,aTela) .And. F560VerPE() .And. PcoVldLan('000359','02','FINA560') .And. F560VldApr()
	lRet := .T.

	//Validacao especifica para integracao caixinha Financeiro x SigaPFS
	If lCXJurFin

		cTpMov		:= M->EU_TIPO
		cDespJur	:= M->EU_DESPJUR
		cFatJur		:= M->EU_FATJUR
		cNatureza	:= M->EU_NATUREZ
		cRateio		:= M->EU_RATJUR

		If cDespJur == '1'

			//Movimento de Despesa
			If cTpMov == '00'
				If Empty(M->EU_PROFISS) .OR. Empty(M->EU_TIPDESP) .OR. Empty(M->EU_NATUREZA)
					Help(" ",1,"F560DJUR0",,STR0109 +CRLF+STR0091+CRLF+STR0092+CRLF+STR0108,1,0) ///"Quando se tratar de um movimento do caixinha para integraГЦo com o SIGAPFS, os seguintes campos sЦo obrigatСrios:"
					lRet := .F.
				Endif

                If lRet
					If cFatJur == '1'
						If Empty(M->EU_CLIENTE) .OR. Empty(M->EU_LOJACLI) .OR. Empty(M->EU_CASO)
							Help(" ",1,"F560DJUR1",,STR0093+CRLF+STR0094+CRLF+STR0095+CRLF+STR0096,1,0) //'Quando a despesa juridica for reembolsАvel do cliente, И obrigatСrio o preenchimento dos campos abaixo:'###'Cliente Jur.'###'Loja Cliente'###'Caso'
							lRet := .F.
						Endif
					ElseIf cRateio == '2' .and. !(Empty(cNatureza))

						SED->(dbSetOrder(1))
						If MsSeek(xFilial("SED")+cNatureza)
							If SED->ED_ESCRIT == '1'
								If Empty(M->EU_ESCRIT)
									Help(" ",1,"F560DJUR2",,STR0097+CRLF+STR0098,1,0)		//'Devido a configuraГЦo da Natureza o campo abaixo tem seu preenchimento como obrigatСrio.'###'EscritСrio'
									lRet := .F.
			                    ElseIf SED->ED_GRPJUR == '1' .and. Empty(M->EU_GRPJUR)
									Help(" ",1,"F560DJUR3",,STR0097+CRLF+STR0099,1,0)	//'Devido a configuraГЦo da Natureza o campo abaixo tem seu preenchimento como obrigatСrio.'###'Grupo Jurid.'
									lRet := .F.
								Endif
							Endif
						Endif
					Endif
				Endif

				If lRet
					//Se a despesa nao vai ser cobrada do cliente, limpo os campos de Cliente, Loja e Caso
					If cFatJur == '2' .and. (!Empty(M->EU_CLIENTE) .OR. !Empty(M->EU_LOJACLI) .OR. !Empty(M->EU_CASO))
						M->EU_CLIENTE := ""
						M->EU_LOJACLI := ""
						M->EU_CASO    := ""
					Endif

					//Se a despesa vai ser cobrada do cliente, limpo os campos de escritorio e grupo juridico
					If cFatJur == '1' .and. (!Empty(M->EU_ESCRIT) .OR. !Empty(M->EU_GRPJUR))
						M->EU_ESCRIT := ""
						M->ED_GRPJUR := ""
					Endif
				Endif

			//Movimento de Adiantamento
			ElseIf cTpMov == '01'
				If Empty(M->EU_PROFISS)
					Help(" ",1,"F560DJUR4",,STR0100+CRLF+STR0091,1,0)	//'Devido o tipo de movimento ser de Adiantamento e tratar-se de uma despesa juridica, o campo abaixo tem seu preenchimento como obrigatСrio.'###'Prof.Favorec'
					lRet := .F.
				Else
					M->EU_CLIENTE := ""
					M->EU_LOJACLI := ""
					M->EU_CASO    := ""
					M->EU_ESCRIT  := ""
					M->ED_GRPJUR  := ""
				Endif
			Endif
		Endif
	Else
		If lRet .And. lIntUMovMe .And. M->EU_ENVUMOV == '1'
			If Empty(M->EU_PROFISS)
				Help(" ",1,"F560BENEF",,STR0135,1,0)	//'Campo Prof.Favorec nЦo informado. Por favor, informar a identificaГЦo do participante beneficiado pelo adiantamento.'
				lRet := .F.
			ElseIf Empty(M->EU_CLIENTE)
				Help(" ",1,"F560CLIEN",,STR0136,1,0)	//'Campo Cliente nЦo informado. Por favor, informar a identificaГЦo do cliente que serА atendido pelo participante vinculado a este adiantamento.'
				lRet := .F.
			ElseIf Empty(M->EU_LOJACLI)
				Help(" ",1,"F560LOJA",,STR0137,1,0)	//'Campo Loja nЦo informado. Por favor, informar a identificaГЦo da loja do cliente que serА atendido pelo participante vinculado a este adiantamento.'
				lRet := .F.
			ElseIf M->EU_TIPO <> '01'
				Help(" ",1,"F560ENV",,STR0138,1,0) //'Movimentos que NцO sejam do tipo Adiantamento nЦo podem ser enviados para a plataforma uMov.me'
				lRet := .F.
			EndIf
		Elseif cPaisloc == "ARG".And. ALLTRIM(M->EU_TIPO) == "01" .AND. EMPTY(M->EU_NROADIA)
			Help(" ",1,"F560ADIANT",,STR0148,1,0)//"Cuanto se trata de movimientos de tipo Anticipo en campo Numero Antec debe ser informado".
			lRet := .F.
		EndIf
	Endif
Endif

Return lRet


//-----------------------------------------------------------------------------------------------------
/*/{Protheus.doc} FIN560IDSP

Inicializador padrao do campo EU_DESPJUR (Despesa juridica)

@author    Mauricio Pequim Jr
@version   11.80
@since     12/03/13

@return ExpC1 = Retorna o inicializador padrao do campo EU_DESPJUR (Despesa juridica)

/*/
//-----------------------------------------------------------------------------------------------------
Function FIN560IDSP()

Local cRelDspJur := '2'
Local lCXJurFin	:= FVldJurxFin()

If lCxJurFin
	cRelDspJur := '1'
Endif

Return cRelDspJur


//-----------------------------------------------------------------------------------------------------
/*/{Protheus.doc} FIN560Cli

Verificacao a existencia de Cliente/Loja

@author    Mauricio Pequim Jr
@version   11.80
@since     12/03/13

@param cCliente	- CСdigo do Cliente
@param cLoja	- CСdigo da Loja do Cliente

@return ExpL1 = Confirma a existencia de Cliente/Loja

/*/
//-----------------------------------------------------------------------------------------------------
Function FIN560Cli (cCliente,cLoja)

Local lRet := .F.
Local aAreaSA1 := SA1->(GetArea())

DEFAULT cCliente := ""
DEFAULT cLoja := ""

If !Empty(cCliente)
	SA1->(dbSetOrder(1))
	If SA1->(MsSeek(xFilial("SA1")+cCliente+cLoja))
		Fin560Caso('EU_CLIENTE')
		lRet := .T.
	Endif
Endif
RestArea(aAreaSA1)
Return lRet


//-----------------------------------------------------------------------------------------------------
/*/{Protheus.doc} Fin560Rd0

ValidaГ]Цo do campo EU_PROFISS

@author    Mauricio Pequim Jr
@version   11.80
@since     12/03/13

@return ExpL1 = Retorno lСgico para as validaГУes realizadas

/*/
//-----------------------------------------------------------------------------------------------------

Function Fin560Rd0(cCodigo)

Local lRet	:= .F.

DEFAULT cCodigo := ""

RD0->(dbSetOrder(9)) // Filial + SIGLA

If !Empty(cCodigo) .and. RD0->(MsSeek(xFilial("RD0")+cCodigo)) .and. Empty(RD0->RD0_DTADEM)
	lRet := .T.
Else
	Help(" ",1,"F560PRFJUR",,STR0101+CRLF+STR0102,1,0)	//'CСdigo do profissional favorecido invАlido.'###'Verifique o cadastro de participantes.'
Endif

Return lRet

//-----------------------------------------------------------------------------------------------------
/*/{Protheus.doc} Fin560Caso

ValidaГ]Цo do campo EU_CASO

@author    Mauricio Pequim Jr
@version   11.80
@since     12/03/13

@return ExpL1 = Retorno lСgico para as validaГУes realizadas

/*/
//-----------------------------------------------------------------------------------------------------

Function Fin560Caso(cCampo)

Local cNumCaso := SuperGetMV('MV_JCASO1',,'1')
Local aArea    := GetArea()
Local aAreaNVE := NVE->(GetArea())
Local aAreaSA1 := SA1->(GetArea())
Local aCliLoj  := {}
Local lRet 	   := .T.
Local lPrestCta := IsInCallStack("Fa560Adian")
Local cCaso		:= ""
Local cCliente	:= ""
Local cLojaCli	:= ""

DEFAULT cCampo := 'EU_CASO'

If nTamCaso == NIL
	nTamCaso := TamSx3("NVE_NUMCAS")[1]
Endif

cCaso 	 := If (lPrestCta .and. cCampo != 'EU_CASO'   , GDFieldGet( 'EU_CASO'   , n, .F., aHeader, aCols ), M->EU_CASO    )
cCliente := If (lPrestCta .and. cCampo != 'EU_CLIENTE', GDFieldGet( 'EU_CLIENTE', n, .F., aHeader, aCols ), M->EU_CLIENTE )
cLojaCli := If (lPrestCta .and. cCampo != 'EU_LOJACLI', GDFieldGet( 'EU_LOJACLI', n, .F., aHeader, aCols ), M->EU_LOJACLI )

If cCampo == "EU_CASO" .AND. !Empty( cCaso )

	If cNumCaso == '2'  //Numero do caso nao se repete para os clientes

		aCliLoj := F560CasoAtual(cCaso)

		If	!Empty(aCliLoj)
			If lPrestCta
				GDFieldPut('EU_CLIENTE',aCliLoj[1][1],n)
				GDFieldPut('EU_LOJACLI',aCliLoj[1][2],n)
			Else
				M->EU_CLIENTE := aCliLoj[1][1]
				M->EU_LOJACLI := aCliLoj[1][2]
			Endif
		Endif
	Else				//Numero do caso se repete para os clientes

		If !Empty(cCliente) .AND. !Empty(cLojaCli)
			lRet := ExistCpo('NVE',cCliente+cLojaCli+cCaso,1,,.F.)
			If !lRet
				Help(" ",1,"F560CASO1",,STR0103,1,0)	//"Preenchimento de Cliente / Loja / Caso invАlido. Por favor, verifique."
			EndIf
		Endif
	EndIF

ElseIf cCampo == "EU_CLIENTE"

	If !Empty(cCliente) .AND. !Empty(cLojaCli)

		If !Empty(cCaso)
			lRet := ExistCpo('NVE',cCliente+cLojaCli+cCaso,1,,.F.)
			If !lRet
				Help(" ",1,"F560CASO2",,STR0103,1,0)	//"Preenchimento de Cliente / Loja / Caso invАlido. Por favor, verifique!"
			EndIf
		EndIf
	EndIf

EndIf

RestArea( aAreaNVE )
RestArea( aAreaSA1 )
RestArea( aArea )

Return lRet


//-------------------------------------------------------------------
/*/{Protheus.doc} F560CasoAtual
FunГЦo para buscar o cliente/loja/caso atual tratando a questЦo de casos em andamento/remanejados
quando o parametro "MV_JCASO1" for igual a 2 (Sequencia de caso independente do cliente).

@author Mauricio Pequim Jr
@since 15/03/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Function F560CasoAtual(cCaso)

Local aRet    := {}
Local cQuery  := ""
Local aCasos  := {}
Local nI      := 0
Local cQuery1 := ""
Local aNY1    := {}
Local cClien  := ""
Local cLoja   := ""

Default cCaso := ""

If !Empty(cCaso)

	cQuery := "SELECT NVE.NVE_CCLIEN, NVE.NVE_LCLIEN, NVE.NVE_NUMCAS, NVE.NVE_SITUAC, NVE.R_E_C_N_O_ NVERECNO"
	cQuery += " FROM "+RetSqlName("NVE")+" NVE "
	cQuery += " WHERE NVE.NVE_FILIAL = '" + xFilial( "NVE" ) + "'"
	cQuery += " AND NVE.NVE_NUMCAS = '" + cCaso + "'"
	cQuery += " AND D_E_L_E_T_ = '' "

	aCasos := JurSQL(cQuery, {"NVE_CCLIEN", "NVE_LCLIEN", "NVE_NUMCAS", "NVE_SITUAC", "NVERECNO"})

	If Len(aCasos) == 1
		aAdd(aRet,{aCasos[1][1], aCasos[1][2]})
	ElseIf Len(aCasos) > 1
		For nI := 1 to len(aCasos)
			If aCasos[nI][4] == "1"
				aAdd(aRet,{aCasos[nI][1], aCasos[nI][2]})
				Exit
			EndIf
		Next nI

		If Empty(aRet)
			cQuery1 := "SELECT NY1_CCLIEN, NY1_CLOJA, NY1_SEQ"
			cQuery1 += " FROM "+RetSqlName("NY1")+" NY1 "
			cQuery1 += " WHERE NY1.NY1_FILIAL = '" + xFilial( "NY1" ) + "'"
			cQuery1 += " AND NY1.NY1_CCASO = '" + cCaso + "'"
			cQuery1 += " AND D_E_L_E_T_ = '' "
			cQuery1 += " ORDER BY NY1_SEQ "

			aNY1 := JurSQL(cQuery1, {"NY1_CCLIEN", "NY1_CLOJA", "NY1_SEQ"})

			If !Empty(aNY1)
				For nI := 1 to len(aNY1)
					cClien := aNY1[nI][1]
					cLoja  := aNY1[nI][2]
				Next nI

				aAdd(aRet, JurGetDdTB("NVE",1,xFilial("NVE")+cClien+cLoja+cCaso,{"NVE_CCLINV", "NVE_CLJNV"}))

			EndIf

		EndIf
	EndIf
Endif


Return aRet


//-------------------------------------------------------------------
/*/{Protheus.doc} F560CanDel
FunГЦo para verificar se И possivel excluir o movimento do caixinha
caso o mesmo seja referente a uma integraГЦo Caixinha x Juridico

@author Mauricio Pequim Jr
@since 27/03/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Function F560CanDel()

Local lRet := .T.
Local aArea := GetArea()

If SEU->EU_DESPJUR == '1'

	If !Empty(SEU->EU_SEQJUR)
		aDesp := GetAdvFVal("NVY",{"NVY_SITUAC", "NVY_CPREFT"},xFilial("NVY")+SEU->EU_SEQJUR,1,{"",""})
		If (aDesp[1] == '2'  .Or. !Empty(aDesp[2]))
			lRet := .F.
		EndIf

	ElseIf SEU->EU_RATJUR == '1'
		//busco o rateio na FJ4 e verifico se um deles foi faturado
		dbSelectArea("FJ4")
		FJ4->(DbSetOrder(1))

		If FJ4->(MsSeek(xfilial("FJ4")+SEU->EU_NUM))
			While !Eof() .and. xfilial("FJ4")+SEU->EU_NUM == FJ4->(FJ4_FILIAL+FJ4_NUM)
				aDesp := GetAdvFVal("NVY",{"NVY_SITUAC", "NVY_CPREFT"},xFilial("NVY")+SEU->EU_SEQJUR,1,{"",""})
				If (aDesp[1] == '2'  .Or. !Empty(aDesp[2]))
					lRet := .F.
					Exit
				EndIf
				FJ4->(dbSkip())
			Enddo
		Endif
	Endif
Endif

RestArea(aArea)

Return lRet


//-------------------------------------------------------------------
/*/{Protheus.doc} F560CanDel
FunГЦo para excluir os registros das tabelas FJ4 e NVY referentes a
uma integraГЦo Caixinha x Juridico

@author Mauricio Pequim Jr
@since 27/03/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Function F560DelJur(cNroAdia,cSeqJur)

Local aRecFJ4 := {}
Local aArea := GetArea()
Local nX := 0

DEFAULT cNroAdia := ""
DEFAULT cSeqJur	 := ""

If !Empty(cNroAdia)

	//Despesa juridica sem rateio
	If !Empty(cSeqJur)
		ExcluiPFS(cSeqJur)
	Else

		//Despesa juridica com rateio
		dbSelectArea("FJ4")
		FJ4->(DbSetOrder(1))

		If FJ4->(MsSeek(xfilial("FJ4")+cNroAdia))
			While !Eof() .and. xfilial("FJ4")+cNroAdia == FJ4->(FJ4_FILIAL+FJ4_NUM)
				aadd(aRecFJ4,FJ4->(RECNO()))
				If !Empty(FJ4->FJ4_SEQJUR)
					ExcluiPFS(FJ4->FJ4_SEQJUR)
				Endif
				FJ4->(dbSkip())
			Enddo
		Endif

		If Len(aRecFJ4) > 0
			For nX := 1 to Len(aRecFJ4)
				FJ4->(DbGoto(aRecFJ4[nX]))
				Reclock('FJ4')
				DbDelete()
				MsUnlock()
			Next
		Endif

	Endif

Endif

RestArea(aArea)

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} F560Class
FunГЦo da tela de classificaГЦo de movimentos retornados da integraГЦo
do aplicativo mobile com o ambiente Protheus

@author Marylly AraЗjo Silva
@since 08/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Function F560Class()
Local aArea		:= GetArea()

If Pergunte("F560CLASS",.T.)
	FWExecView(STR0116,"FINA560", 4,, { || .T. } ) // 'ClassificaГЦo de Movimentos de Adiantamento'
Endif

RestArea(aArea)
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} ModelDef
FunГЦo de definiГЦo do modelo de dados dos movimentos de adiantamentos
integrados com a plataforma uMov.me pendentes de classificaГЦo de dados.

@author	Marylly AraЗjo Silva
@since		09/10/2013
@version	MP11.90
/*/
//-------------------------------------------------------------------
Static Function ModelDef()
// Cria a estrutura a ser usada no Modelo de Dados
Local oStruCab := FWFormModelStruct():New()
Local oStruMov := FWFormStruct( 1, 'SEU')
Local oModel	

oStruCab:AddField( ;
STR0117           		, ;		// [01] Titulo do campo	//"Data De"
STR0118					, ;		// [02] ToolTip do campo	//"Data Inicial"
"DATADE"					, ;		// [03] Id do Field
"D"							, ;		// [04] Tipo do campo
8							, ;		// [05] Tamanho do campo
0							, ;		// [06] Decimal do campo
{ || }						, ;		// [07] Code-block de validaГЦo do campo
							, ;    // [08] Code-block de validaГЦo When do campo
							, ;    // [09] Lista de valores permitido do campo
							.T.)   // [10] Indica se o campo tem preenchimento obrigatСrio

oStruCab:AddField( ;
STR0119	           	, ;		// [01] Titulo do campo	//"Data AtИ"
STR0120					, ;		// [02] ToolTip do campo	//"Data Final"
"DATAATE"					, ;		// [03] Id do Field
"D"							, ;		// [04] Tipo do campo
8							, ;		// [05] Tamanho do campo
0							, ;		// [06] Decimal do campo
{ || }						, ;		// [07] Code-block de validaГЦo do campo
							, ;    // [08] Code-block de validaГЦo When do campo
							, ;    // [09] Lista de valores permitido do campo
							.T.)   // [10] Indica se o campo tem preenchimento obrigatСrio

oStruCab:AddField( ;
STR0121		          	, ;		// [01] Titulo do campo	//"Caixinha De"
STR0121					, ;		// [02] ToolTip do campo	"Caixinha De"
"CAIXADE"					, ;		// [03] Id do Field
"C"							, ;		// [04] Tipo do campo
TamSX3("EU_CAIXA")[1]	, ;		// [05] Tamanho do campo
0							, ;		// [06] Decimal do campo
{ || }						, ;		// [07] Code-block de validaГЦo do campo
							, ;    // [08] Code-block de validaГЦo When do campo
							, ;    // [09] Lista de valores permitido do campo
							.T.)   // [10] Indica se o campo tem preenchimento obrigatСrio

oStruCab:AddField( ;
STR0122       			, ;		// [01] Titulo do campo	//"Caixinha AtИ"
STR0122					, ;		// [02] ToolTip do campo	//"Caixinha AtИ"
"CAIXAATE"					, ;		// [03] Id do Field
"C"							, ;		// [04] Tipo do campo
TamSX3("EU_CAIXA")[1]	, ;		// [05] Tamanho do campo
0							, ;		// [06] Decimal do campo
{ || }						, ;		// [07] Code-block de validaГЦo do campo
							, ;    // [08] Code-block de validaГЦo When do campo
							, ;    // [09] Lista de valores permitido do campo
							.T.)   // [10] Indica se o campo tem preenchimento obrigatСrio

/*
@param═cIdField══ID═do═Field(═se═passado═*═troca═de═todos═os═campos)
@param═nProperty═Nome═da═Propriedade,═ela═pode═ser(lembre-se═de═incluir═o═FWMVCDEF.CH:
════════MODEL_FIELD_TITULO══════C═══════Titulo
════════MODEL_FIELD_TOOLTIP═════C═══════DescriГЦo═completa═do═campo
════════MODEL_FIELD_IDFIELD═════C═══════Nome═(ID)
════════MODEL_FIELD_TIPO════════C═══════Tipo
════════MODEL_FIELD_TAMANHO═════N═══════Tamanho
════════MODEL_FIELD_DECIMAL═════N═══════Decimais═
════════MODEL_FIELD_VALID═══════B═══════ValidaГЦo
════════MODEL_FIELD_WHEN════════B═══════Modo═de═ediГЦo
════════MODEL_FIELD_VALUES══════A═══════Lista═de═valores═permitido═do═campo═(combo)
════════MODEL_FIELD_OBRIGAT═════L═══════Indica═se═o═campo═tem═preenchimento═obrigatСrio
════════MODEL_FIELD_INIT════════B═══════Inicializador═padrЦo
════════MODEL_FIELD_KEY═════════L═══════Indica═se═o═campo═И═chave
════════MODEL_FIELD_NOUPD═══════L═══════Indica═se═o═campo═pode═receber═valor═em═uma═operaГЦo═de═update.
════════MODEL_FIELD_VIRTUAL═════L═══════Indica═se═o═campo═И═virtual════════════
@param═xValue═-═Valor═a═ser═atribuido
oView:SetProperty()*/
/*
 * Desabilitando os campos que nЦo poderЦo ser alterados no processo de classificaГЦo de movimentos de adiantamentos da integraГЦo do uMov.me
 */
oStruMov:SetProperty("EU_CAIXA"		,MODEL_FIELD_WHEN	,FWBuildFeature( STRUCT_FEATURE_WHEN,'.F.'))
oStruMov:SetProperty("EU_TIPO"		,MODEL_FIELD_WHEN	,FWBuildFeature( STRUCT_FEATURE_WHEN,'.F.'))
oStruMov:SetProperty("EU_HISTOR"	,MODEL_FIELD_WHEN	,FWBuildFeature( STRUCT_FEATURE_WHEN,'F560MVCWhe()'))
oStruMov:SetProperty("EU_NRCOMP"	,MODEL_FIELD_WHEN	,FWBuildFeature( STRUCT_FEATURE_WHEN,'F560MVCWhe()'))
oStruMov:SetProperty("EU_VALOR"		,MODEL_FIELD_WHEN	,FWBuildFeature( STRUCT_FEATURE_WHEN,'F560MVCWhe()'))
oStruMov:SetProperty("EU_EMISSAO"	,MODEL_FIELD_WHEN	,FWBuildFeature( STRUCT_FEATURE_WHEN,'.F.'))
oStruMov:SetProperty("EU_BENEF"		,MODEL_FIELD_WHEN	,FWBuildFeature( STRUCT_FEATURE_WHEN,'.F.'))
oStruMov:SetProperty("EU_CLIENTE"	,MODEL_FIELD_WHEN	,FWBuildFeature( STRUCT_FEATURE_WHEN,'.F.'))
oStruMov:SetProperty("EU_LOJACLI"	,MODEL_FIELD_WHEN	,FWBuildFeature( STRUCT_FEATURE_WHEN,'.F.'))
oStruMov:SetProperty("EU_PROFISS"	,MODEL_FIELD_WHEN	,FWBuildFeature( STRUCT_FEATURE_WHEN,'.F.'))

oStruMov:AddField( ;            	// Ord. Tipo Desc.
''									, ;	// [01]  C   Titulo do campo
''									, ;	// [02]  C   ToolTip do campo
'SELECIONADO'                	, ;	// [03]  C   Id do Field
'L'									, ;	// [04]  C   Tipo do campo
1									, ;	// [05]  N   Tamanho do campo
0									, ;	// [06]  N   Decimal do campo
NIL									, ;	// [07]  B   Code-block de validaГЦo do campo
NIL									, ;	// [08]  B   Code-block de validaГЦo When do campo
NIL									, ;	// [09]  A   Lista de valores permitido do campo
NIL									, ;	// [10]  L   Indica se o campo tem preenchimento obrigatСrio
FwBuildFeature( 3,'.F.' )		, ;	// [11]  B   Code-block de inicializacao do campo
NIL									, ;	// [12]  L   Indica se trata-se de um campo chave
NIL									, ;	// [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
.T.									)	// [14]  L   Indica se o campo И virtual

oStruMov:AddField('IMAGEM',' ','IMAGEM','BT',20,,FWBuildFeature(STRUCT_FEATURE_VALID,"F560VerImg(), .T."),,,,{ ||"BMPCONS.PNG"} )

oModel := MPFormModel():New('FINA560',,,{|oModel| FA560Grv(oModel) } )
oModel:AddFields( 'PARAMETROS', NIL, oStruCab,,,{|oModel| FA560LCab(oModel) } )
oModel:AddGrid( 'SEUDETAIL', 'PARAMETROS', oStruMov,,,,,{|oModel| FA560LMov(oModel) })

oModel:SetDescription( STR0123 ) //'Modelo de ParБmetros da ClassificaГЦo de Movimentos'
oModel:GetModel( 'PARAMETROS' ):SetDescription( 'PARAMETROS' )
oModel:GetModel( 'SEUDETAIL' ):SetDescription( STR0124 ) //'Dados do Movimentos'

oModel:SetPrimaryKey( {} )

Return oModel

//-------------------------------------------------------------------
/*/{Protheus.doc} ViewDef
DefiniГЦo do interface da tela de classificaГЦo de movimentos de
adiantamentos integrados com a plataforma uMov.me.

@author Marylly AraЗjo Silva

@since 09/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function ViewDef()
// Cria a estrutura a ser usada na View
Local oStruPar	:= FWFormViewStruct():New()
Local oStruMov	:= FWFormStruct( 2, 'SEU')
// Cria um objeto de Modelo de Dados baseado no ModelDef do fonte informado
Local oModel		:= FWLoadModel( 'FINA560' )
Local oView		:= nIL
Local lCXJurFin	:= FVldJurxFin()

oStruPar:AddField( ;
'DATADE'				, ;		// [01] Campo
'01'					, ;		// [02] Ordem
STR0117				, ;    // [03] Titulo	//'Data De'
STR0117				, ;    // [04] Descricao	//'Data De'
						, ;    // [05] Help
'G'		              , ;    // [06] Tipo do campo   COMBO, Get ou CHECK
"@!"					, ;    // [07] Picture
						, ;    // [08] PictVar
''                     )    // [09] F3

oStruPar:AddField( ;
'DATAATE'				, ;		// [01] Campo
'02'					, ;		// [02] Ordem
STR0119				, ;    // [03] Titulo	//'Data AtИ'
STR0119				, ;    // [04] Descricao	//'Data AtИ'
						, ;    // [05] Help
'G'		              , ;    // [06] Tipo do campo   COMBO, Get ou CHECK
"@!"					, ;    // [07] Picture
						, ;    // [08] PictVar
''                     )    // [09] F3

oStruPar:AddField( ;
'CAIXADE'				, ;		// [01] Campo
'03'					, ;		// [02] Ordem
STR0121				, ;    // [03] Titulo	//'Do Caixinha'
STR0121				, ;    // [04] Descricao	//'Do Caixinha'
						, ;    // [05] Help
'G'		              , ;    // [06] Tipo do campo   COMBO, Get ou CHECK
"@!"					, ;    // [07] Picture
						, ;    // [08] PictVar
'SET'                  )    // [09] F3

oStruPar:AddField( ;
'CAIXAATE'				, ;		// [01] Campo
'04'					, ;		// [02] Ordem
STR0122				, ;    // [03] Titulo	//'AtИ Caixinha'
STR0122				, ;    // [04] Descricao	//'AtИ Caixinha'
						, ;    // [05] Help
'G'		              , ;    // [06] Tipo do campo   COMBO, Get ou CHECK
"@!"					, ;    // [07] Picture
						, ;    // [08] PictVar
'SET'                  )    // [09] F3

oStruMov:RemoveField( 'EU_FILORIG'	)
oStruMov:RemoveField( 'EU_NATUREZ' )
oStruMov:RemoveField( 'EU_VLMOED2' )
oStruMov:RemoveField( 'EU_MOEDA'	)
oStruMov:RemoveField( 'EU_APROVA'	)
oStruMov:RemoveField( 'EU_CODAPRO' )
oStruMov:RemoveField( 'EU_NODIA' 	)
oStruMov:RemoveField( 'EU_DIACTB' 	)
oStruMov:RemoveField( 'EU_NROADIA' )
oStruMov:RemoveField( 'EU_SLDADIA' )
oStruMov:RemoveField( 'EU_BAIXA' 	)
oStruMov:RemoveField( 'EU_CONTA' 	)
oStruMov:RemoveField( 'EU_DTDIGIT' )
oStruMov:RemoveField( 'EU_STAUMOV' )
oStruMov:RemoveField( 'EU_IMGUMOV' )

/*
 * Se a IntegraГЦo com o MСdulo de PrИ-Faturamento de ServiГos (SIGAPFS), nЦo exibir os campos referente a esta integraГЦo.
 */
If !lCXJurFin
	oStruMov:RemoveField( 'EU_DESPJUR' )
	oStruMov:RemoveField( 'EU_RATJUR' )
	oStruMov:RemoveField( 'EU_TIPDESP' )
	oStruMov:RemoveField( 'EU_NATUREZ' )
	oStruMov:RemoveField( 'EU_FATJUR' )
	oStruMov:RemoveField( 'EU_CASO' )
	oStruMov:RemoveField( 'EU_ESCRIT' )
	oStruMov:RemoveField( 'EU_GRPJUR' )
	oStruMov:RemoveField( 'EU_DESCRI' )
	oStruMov:RemoveField( 'EU_MEMDSCR' )
EndIf

oStruMov:AddField( ;                        // Ord. Tipo Desc.
'SELECIONADO'                      , ;      // [01]  C   Nome do Campo
"02"                             	, ;      // [02]  C   Ordem
''										, ;      // [03]  C   Titulo do campo
''										, ;      // [04]  C   Descricao do campo
{ '' } 								, ;      // [05]  A   Array com Help
'L'                                , ;      // [06]  C   Tipo do campo
'@!'                               , ;      // [07]  C   Picture
NIL                                , ;      // [08]  B   Bloco de Picture Var
NIL                                , ;      // [09]  C   Consulta F3
.T.                                , ;      // [10]  L   Indica se o campo И alteravel
NIL                                , ;      // [11]  C   Pasta do campo
NIL                                , ;      // [12]  C   Agrupamento do campo
NIL                                , ;      // [13]  A   Lista de valores permitido do campo (Combo)
NIL                                , ;      // [14]  N   Tamanho maximo da maior opГЦo do combo
NIL                                , ;      // [15]  C   Inicializador de Browse
.T.                                , ;      // [16]  L   Indica se o campo И virtual
NIL                                , ;      // [17]  C   Picture Variavel
NIL                                )        // [18]  L   Indica pulo de linha apСs o campo

oStruMov:AddField('IMAGEM','99','','',,'BT','@BMP') // BotЦo de exibiГЦo da imagem do comprovante

oView := FWFormView():New()
oView:SetModel( oModel )
oView:AddField( 'VIEW_PAR' , oStruPar, 'PARAMETROS'   )
oView:AddGrid(  'VIEW_SEU' , oStruMov, 'SEUDETAIL'    )
oView:CreateHorizontalBox( "BOXPAR",  20 ) // 20% da Tela
oView:CreateHorizontalBox( "BOXSEU",  80 ) // 80% da Tela

oView:SetOwnerView( 'VIEW_PAR' , "BOXPAR" )
oView:SetOwnerView( 'VIEW_SEU' , "BOXSEU" )

Return oView


//-------------------------------------------------------------------
/*/{Protheus.doc} FA560LCab
FunГЦo que retorna a carga de dados do cabeГalho de parБmetros da
classificaГЦo de movimentos de adiantamentos integrados com a plataforma uMov.me

@author Marylly AraЗjo Silva
@since 09/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

static function  FA560LCab(oModel)
Local aRet		:= {}
Local aAux		:= {}

Pergunte("F560CLASS",.F.)

aAdd(aAux,MV_PAR01)
aAdd(aAux,MV_PAR02)
aAdd(aAux,MV_PAR03)
aAdd(aAux,MV_PAR04)

aRet := {aAux,0}

Return aRet

//-------------------------------------------------------------------
/*/{Protheus.doc} FA560LMov
FunГЦo que retorna a carga de dados dos movimentos da conciliaГЦo

@author Marylly AraЗjo Silva

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function FA560LMov(oModelMov)
Local aItMov		:= {}
Local dDataDe 	:= cTod("")
Local dDataAte	:= cTod("")
Local cCaixaDe 	:= ""
Local cCaixaAte	:= ""
Local aCpoSEU		:= {}
Local aArea		:= GetArea()
Local aFields		:= oModelMov:GetStruct():GetFields()
Local nMov			:= 0

Pergunte("F560CLASS",.F.)

dDataDe 		:= MV_PAR01
dDataAte		:= MV_PAR02
cCaixaDe 		:= MV_PAR03
cCaixaAte		:= MV_PAR04

// PosiГЦo no Array - AtenГЦo a ordem deve ser a mesma do model
For nMov := 1 to Len(aFields)
	aAdd(aCpoSEU, Alltrim(aFields[nMov][3]) )
Next nMov

//Retorna os movimentos do extrato
FA560GMOV(@aItMov,aCpoSEU,dDataDe,dDataAte,cCaixaDe,cCaixaAte)

RestArea(aArea)
Return aItMov


//-------------------------------------------------------------------
/*/{Protheus.doc} FA560GMOV
FunГЦo que busca os dados do movimentos de adiantamentos com pendЙncia
de classificaГЦo para encerramento do processo de prestaГЦo de contas.

@author Marylly AraЗjo Silva

@since 09/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function FA560GMOV(aRet,aCpoSEU,dDataDe,dDataAte,cCaixaDe,cCaixaAte)

Local aAux 		:= {}
Local cQuery		:= ""
Local cTabSEU   	:= GetNextAlias()
Local aStru		:= SEU->(dbStruct())
Local nX			:= 0
Local aArea		:= GetArea()
Local cCampo		:= ""
Local nPosCpo		:= 0

/*
 * Query de busca de movimentos atualizados e retornados com a integraГЦo com a plataforma uMov.me que precisem
 * ser classificados e ter o processo de encerramento da prestaГЦo de contas encerrado.
 */
cQuery += " SELECT "  									+ CRLF
For nX := 1 To Len(aCpoSEU)
	nPosCpo := aScan(aStru,{| aPropCpo | AllTrim(aPropCpo[1]) == AllTrim(aCpoSEU[nX]) })
	If nPosCpo > 0 .AND. aStru[nPosCpo][2] <> "M"
		If nX == 1
			cQuery += aCpoSEU[nX] 						+ CRLF
		Else
			cQuery += "," + aCpoSEU[nX] 				+ CRLF
		EndIf
	EndIf
Next nX
cQuery += " FROM " + RetSQLName("SEU") + " SEU	"  	+ CRLF
cQuery += " WHERE	 "										+ CRLF
cQuery +=		" SEU.EU_FILIAL = '" + xFilial("SEU") + "' AND	"	+ CRLF
cQuery +=		" SEU.D_E_L_E_T_ = ' ' AND " + CRLF
cQuery +=		" SEU.EU_STAUMOV = '3' AND " // Status de IntegraГЦo com uMov.me como 'Retonardo'
cQuery +=		" SEU.EU_EMISSAO BETWEEN '" + DTOS(dDataDe) + "' AND '" + DTOS(dDataAte) + "'
If !EMPTY(cCaixaDe) .OR. !EMPTY(cCaixaAte)
	cQuery +=	" AND SEU.EU_CAIXA BETWEEN '" + cCaixaDe + "' AND '" + cCaixaAte + "' "
EndIf
cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cTabSEU,.T.,.T.)

/*
 * Formatando os dados do resultado da query de acordo com o tipo de dado do campo
 */
For nX :=  1 To Len(aStru)
	If SEU->(FieldPos(AllTrim(aStru[nX][1])))> 0 .AND. aScan(aCpoSEU,AllTrim(aStru[nX][1])) > 0 .AND. !(aStru[nX][2] $ "C|M")
		TcSetField(cTabSEU,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
	EndIf
Next nX

/*
 * Montagem da massa de dados que irА preencher o Grid dos Movimentos de Adiantamento e PrestaГЦo de contas
 * retornado da plataforma uMov.me.
 */
While (cTabSEU)->(!EOF())
	aAux := Nil
	aAux := Array(Len(aCpoSEU))

	For nX := 1 to Len(aCpoSEU)
		nPosCpo := aScan(aStru,{| aPropCpo | AllTrim(aPropCpo[1]) == AllTrim(aCpoSEU[nX]) })
		cCampo   := aCpoSEU[nX]
		If nPosCpo > 0 .AND. aStru[nPosCpo][2] <> "M"
			aAux[nX] := (cTabSEU)->&(cCampo)
		ElseIf AllTrim(cCampo) == "IMAGEM"
			aAux[nX] := "BMPCONS.PNG"
		EndIf
	Next nX

	aAdd(aRet,{0 ,aAux })

	(cTabSEU)->(dbSkip())
EndDo

(cTabSEU)->(dbCloseArea())

RestArea(aArea)
Return aRet


//-------------------------------------------------------------------
/*/{Protheus.doc} FA560Grv
FunГЦo de gravaГЦo dos dados do modelo de movimentos de adiantamento
retornados na integraГЦo do Protheus com a plataforma uMov.me.

@author Marylly AraЗjo Silva

@since 10/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function FA560Grv(oModel)
Local aArea		:= GetArea()
Local aAreaSEU	:= SEU->( GetArea() )
Local nLinha		:= 0
Local nOperation	:= oModel:GetOperation()
Local lOk			:= .T.
Local aSaveLines	:= FWSaveRows()
Local oModelSEU	:= Nil
Local cFilSEU		:= xFilial( 'SEU' )
Local nQtdMov		:= 0
Local lCXJurFin		:= FVldJurxFin()
Local cCodFat		:= ""

oModelSEU	:= oModel:GetModel( 'SEUDETAIL' )
nQtdMov	:= oModelSEU:GetQtdLine()

If nOperation == MODEL_OPERATION_UPDATE
	Begin Transaction

	For nLinha := 1 To nQtdMov
		oModelSEU:GoLine( nLinha )
		If oModelSEU:IsUpdated() .AND. oModelSEU:GetValue('SELECIONADO')
			SEU->( dbSetOrder( 1 ) ) // Filial + Id. Movimento
			If SEU->( dbSeek( cFilSEU + oModelSEU:GetValue('EU_NUM') ) )
				SEU->(RecLock("SEU", .F.))
				SEU->EU_FILIAL	:= cFilSEU
				SEU->EU_BENEF		:= oModelSEU:GetValue("EU_BENEF")
				SEU->EU_FORNECE	:= oModelSEU:GetValue("EU_FORNECE")
				SEU->EU_LOJA		:= oModelSEU:GetValue("EU_LOJA")
				SEU->EU_NOME		:= oModelSEU:GetValue("EU_NOME")
				SEU->EU_CGC		:= oModelSEU:GetValue("EU_CGC")
				SEU->EU_CONTAD	:= oModelSEU:GetValue("EU_CONTAD")
				SEU->EU_CONTAC	:= oModelSEU:GetValue("EU_CONTAC")
				SEU->EU_CCD		:= oModelSEU:GetValue("EU_CCD")
				SEU->EU_CCC		:= oModelSEU:GetValue("EU_CCC")
				SEU->EU_ITEMD		:= oModelSEU:GetValue("EU_ITEMD")
				SEU->EU_ITEMC		:= oModelSEU:GetValue("EU_ITEMC")
				SEU->EU_CLVLDB	:= oModelSEU:GetValue("EU_CLVLDB")
				SEU->EU_CLVLCR	:= oModelSEU:GetValue("EU_CLVLCR")
				SEU->EU_STAUMOV	:= '4' // Encerrado
				SEU->EU_BAIXA		:= DDATABASE
				SEU->EU_STATUS	:= '03'

				//CAIXINHA x JURIDICO
				//Grava registro de pre-faturamento no SIGAPFS
				//Se caixinha integrado com SIGAPFS
				//Se eh despesa juridica
				//Se sera reembolsado pelo cliente
				//Se nao sofrera rateio
				If lCXJurFin .and. SEU->EU_TIPO == '00'
					SEU->EU_DESPJUR := '1'
					SEU->EU_RATJUR  := '2'
					If SEU->EU_FATJUR == '1'
						cCodFat := GeraPFS(3,SEU->EU_NUM,,SEU->EU_CLIENTE,SEU->EU_LOJACLI,SEU->EU_CASO,SEU->EU_PROFISS,SEU->EU_EMISSAO,,SEU->EU_VALOR,SEU->EU_TIPDESP,SEU->EU_MEMDSCR)
						If !Empty(cCodFat)
							SEU->EU_SEQJUR  := cCodFat
						Else
							DisarmTransaction()
							Exit
						Endif
					Endif
				Endif

				SEU->(MsUnLock())
			EndIf
		EndIf
	Next nLinha

	End Transaction
EndIf

FWRestRows( aSaveLines )
RestArea( aAreaSEU )
RestArea( aArea )
Return lOk

//-------------------------------------------------------------------
/*/{Protheus.doc} F560VlSta
FunГЦo de validaГУes do campos necessАrios para incluir um movimento de adiantamento de acordo com o
necessАrio com a integraГЦo com a plataforma uMov.me

@author Marylly AraЗjo Silva
@since 18/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Function F560VlSta()
Local aArea		:= GetArea()

If Pergunte("F560CLASS",.T.)
	FWExecView(STR0113,"FINA560", 4,, { || .T. } ) // 'ClassificaГЦo de Movimentos de Adiantamento'
Endif

RestArea(aArea)
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} F560VerImg
FunГЦo que exibe a imagem do comprovante enviado pelo aplicativo mobile (uMov.me)
@author Marylly AraЗjo Silva
@since 28/11/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Function F560VerImg()

Local oDlg				:= Nil
Local oTIBrowser		:= Nil
Local aSize			:= MsAdvSize()
Local oModel			:= FWModelActive()
Local oModelSEU		:= oModel:GetModel( 'SEUDETAIL' )

cUrl	:= oModelSEU:GetValue('EU_IMGUMOV')

// Atualiza as corrdenadas da Janela MAIN
oMainWnd:CoorsUpdate()
nMyWidth  := oMainWnd:nClientWidth - 10
nMyHeight := oMainWnd:nClientHeight - 30

If !Empty(cUrl)
	DEFINE DIALOG oDlg TITLE STR0115 From aSize[7],00 To nMyHeight,nMyWidth PIXEL // "Comprovante"

	oTIBrowser := TIBrowser():New(07,07,nMyHeight-220, nMyWidth-820,cUrl,oDlg)
	oTIBrowser:GoHome()

	ACTIVATE DIALOG oDlg CENTERED
Else
	MsgAlert(STR0114)//"NЦo foi integrada nenhuma imagem para esse registro."
EndIf

Return


//-------------------------------------------------------------------
/*/{Protheus.doc} F560MVCWhe
ValidaГЦo dos campos que nЦo podem ser editados de acordo com o tipo de movimento que estА sendo classificado.
@author Marylly AraЗjo Silva
@since 04/12/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Function F560MVCWhe()
Local lRet			:= .F.
Local oModel		:= FWModelActive()
Local oModelSEU	:= oModel:GetModel( 'SEUDETAIL' )
Local cTipoMov	:= oModelSEU:GetValue("EU_TIPO")

If cTipoMov != "01" .AND. cTipoMov != "02"
	lRet := .T.
EndIf

Return lRet

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁFA560EstRep Ё Autor Ё Ana Paula Nasc     Ё Data Ё 01.12.13 Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Estorno de resposiГЦo do caixinha - Peru                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё FINA560                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
FUNCTION FA560EstRep(cAlias,nReg,nOpc)
Local lPanelFin := If (FindFunction("IsPanelFin"),IsPanelFin(),.F.)
LOCAL nOpcA
LOCAL lOk   := .T., lRet := .T.
LOCAL oDlg
Local cMens, cNroAdia
Local aArea      := GetArea()
Local nHdlPrv    := 0
Local lDigita    := Iif(mv_par01 ==1,.T.,.F.)
Local lAglutina  := Iif(mv_par02 ==1,.T.,.F.)
Local lGeraLanc  := Iif(mv_par03 ==1,.T.,.F.)
Local cArquivo
Local lPadrao57E := VerPadrao("57E")
Local nTotal     := 0
Local lBlock := .F.      
Local aFlagCTB := {}
Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/) 
Local aSize 	:= {}
Local aObjects 	:= {}
Local aInfo 	:= {}
Local aPosObj 	:= {}   
Local bNumRel 
Local cNumRel        

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta a entrada de dados do arquivo                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Private cLote :=""
//PRIVATE aTELA[0][0],aGETS[0]
//PRIVATE ADIANTAMENTO	:=	.F.
Private aDiario := {}
Private cCodDiario := ""

//bCampo := {|nCPO| Field(nCPO) }
aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}

Aadd(aHelpPor,"Este nЦo И um movimento de reposiГЦo")
Aadd(aHelpPor,"e por isto nЦo poderА ser estornado.")
//Aadd(aHelpPor," ser estornado.")

Aadd(aHelpSpa,"Este no es un movimiento de reposiciСn ")
Aadd(aHelpSpa," y por ello, no podrА revertirse.")
//Aadd(aHelpSpa," ser estornado.")


Aadd(aHelpEng,"This is not a replenishment")
Aadd(aHelpEng,"transaction, so it cannot")
Aadd(aHelpEng,"be reversed.")

PutHelp("PF560ESTREP",aHelpPor,aHelpEng,aHelpSpa,.F.)         

aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}    

aSoluPor := {}
aSoluSpa := {}
aSoluEng := {}


Aadd(aHelpPor,"Esta reposiГЦo nЦo pode ser estonada, ")
Aadd(aHelpPor,"existem movimentos utillizando o ")
Aadd(aHelpPor,"valor desta reposiГЦo.")

Aadd(aHelpSpa,"Esta reposiciСn no puede revertirse. ")
Aadd(aHelpSpa,"Existen movimientos que utilizan el valor")
Aadd(aHelpSpa,"de esta reposiciСn.")
                                       

Aadd(aHelpEng,"This replenishment cannot be reversed.")
Aadd(aHelpEng,"There are transactions using ")
Aadd(aHelpEng,"this replenishment value.")
                

Aadd(aSoluPor,"Cancele os movimentos para concluir o  ")
Aadd(aSoluPor,"estorno. ")   
Aadd(aSoluSpa,"Anule el movimiento para que sea posible ")
Aadd(aSoluSpa,"realizar la reversiСn.")
Aadd(aSoluEng,"Cancel the transaction(s), so you")
Aadd(aSoluEng,"can perform the reversal.")

PutHelp("PF560MOVREP",aSoluPor,aHelpEng,aHelpSpa,.F.)         
PutHelp("SF560MOVREP",aSoluPor,aSoluEng,aSoluSpa,.F.)          


If SEU->EU_TIPO <>"10" .and. lRet// verifico se И um movimento de reposiГЦo
	Help(" ",1,"F560ESTREP")
	lRet := .F.
EndIf
 

IF lRet .And. SEU->EU_REPEST =="S"
	MsgAlert(STR0140)  
	lRet:= .F.
EndIF


If lRet          
  //	dbSelectArea("SET")
	SET->(dbSetOrder(1))
	SET->(dbSeek( xFilial()+SEU->EU_CAIXA))
	If SET->ET_SITUAC <> "0"  //Verifico se o caixa ja esta fechado
		Help(" ",1,"FA550FECH") 
		lRet:= .F.
	EndIf  
EndIF
       

       

If lRet	
	nRecReg := SEU->(Recno())                                    
	
	cNroAdia := SEU->EU_NUM 
	cSeqCxa := SEU->EU_SEQCXA
	cCaixa := SEU->EU_CAIXA
	aAreaSEU := GetArea()
				
	While !SEU->(Eof()) .and. (SEU->EU_FILIAL == xFilial()) .and. (SEU->EU_SEQCXA == cSeqCxa) .and. (SEU->EU_CAIXA == cCaixa) .and. !lBlock //.and. !lCont
		cNroAdia := SEU->EU_NUM 
		aAreaMov:= SEU->(GetArea())
		dbSetOrder(3)  //EU_FILIAL+EU_CAIXA+EU_SEQCXA+EU_NUM  
		If !SEU->EU_TIPO$"10/02"
			If !(SEU->( dbSeek( xFilial() + cNroAdia )) .and. SEU->EU_TIPO == "02" )
			   Help(" ",1,"F560MOVREP")
			   //	MsgAlert("Existem movimentos utillizando o valor desta reposiГЦo. Cancele os movimentos para concluir o estorno")
				lRet:= .F.
			Endif
		EndIf
		RestArea(AareaMov)
		SEU->(DBSKIP())
	EndDo 
	
	RestArea(aAreaSEU)
	RestArea(aArea)	
	
EndIf	

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Inicia lancamento no PCO                                   Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	PcoIniLan("000359")

	If lRet
		If lPadrao57E   .And. lGeraLanc
			If nHdlPrv <= 0
				LoteCont("FIN")
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Inicializa Lancamento Contabil                                   Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					nHdlPrv := HeadProva( cLote,;
					                      "FINA560" /*cPrograma*/,;
					                      Substr( cUsuario, 7, 6 ),;
					                      @cArquivo )
			Endif
		
	
		EndIf

	
		nOpcA:=0
	
		If lPanelFin  //Chamado pelo Painel Financeiro
			dbSelectArea("SEU")
			RegToMemory("SEU",.F.,.F.,,FunName())                                       
			oPanelDados := FinWindow:GetVisPanel()
			oPanelDados:FreeChildren()
			aDim := DLGinPANEL(oPanelDados)
			DEFINE MSDIALOG oDlg OF oPanelDados:oWnd FROM 0, 0 TO 0, 0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )	
			aPosEnch := {,,,}
			oEnc01:= MsMGet():New( cAlias, nReg, nOpc,,"AC",cMens,,,,,,,,oDlg,,,.F.) 						
			oEnc01:oBox:Align := CONTROL_ALIGN_ALLCLIENT
					
			// define dimenГЦo da dialog
			oDlg:nWidth := aDim[4]-aDim[2]
		
			ACTIVATE MSDIALOG oDlg  ON INIT ( FaMyBar(oDlg,{||nOpca := 2,oDlg:End()},{|| nOpca := 1,oDlg:End()}),	oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1]))
	
		Else		
			aSize := MsAdvSize()
	   		aObjects := {}
			AAdd( aObjects, { 100, 100, .t., .t. } )
	
			aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
			aPosObj := MsObjSize( aInfo, aObjects )

			Define MSDialog oDlg Title cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd Pixel
			nOpcA:=EnChoice( cAlias, nReg, nOpc, ,"AC",cMens, , aPosObj[1])
			nOpca := 1
			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpca := 2,oDlg:End()},{|| nOpca := 1,oDlg:End()})
		Endif
		
		DbSelectArea(cAlias)
		
		If lOk .And. nOpcA == 2
	
			If  nHdlPrv > 0
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Prepara Lancamento Contabil                                      Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil 
							aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
						Endif
						nTotal += DetProva( nHdlPrv,;
						                    "57E" /*cPadrao*/,;
						                    "FINA560" /*cPrograma*/,;
						                    cLote,;
						                    /*nLinha*/,;
						                    /*lExecuta*/,;
						                    /*cCriterio*/,;
						                    /*lRateio*/,;
						                    /*cChaveBusca*/,;
						                    /*aCT5*/,;
						                    /*lPosiciona*/,;
						                    @aFlagCTB,;
						                    /*aTabRecOri*/,;
						                    /*aDadosProva*/ )
						 
						                    
			Endif				
			
		Begin Transaction
			If SEU->EU_TIPO == "10" // ReposiГЦo
				aAreaSEU := SEU->(GetArea())
				DbSelectArea(cAlias)
				nVlrEst  := SEU->EU_VALOR
				cNroAdia := SEU->EU_NROADIA
				nNrrend:= SEU->EU_NRREND   
			
				
				// Caso o movimento de reposiГЦo tenha atualizado saldo bancario, o saldo serА atualizado novamente com o estorno do valor
				dbSelectArea("SE5")
				dbSetOrder(11)
				If SE5->(dbSeek( xFilial()+SEU->EU_BCOREP+SEU->EU_AGEREP+SEU->EU_CTAREP+SEU->EU_TITULO))
					Fa550MvBc2("E", nVlrEst, STR0141,SEU->EU_BCOREP,SEU->EU_AGEREP,SEU->EU_CTAREP,,,SEU->EU_TITULO) //"DEVOLUCION DE CAJA"
				EndIf 
		
		//		PcoDetLan("000359","02","FINA560", .T.)
			      
			
				
				RecLock("SEU",.F.)
				REPLACE EU_REPEST WITH "S"
				MsUnlock()
	
				// Atualizando o saldo do caixinha	
				dbSelectArea("SET")
				dbSetOrder(1)
				SET->(dbSeek( xFilial()+SEU->EU_CAIXA))
				nSldAtu := ET_SALDO - SEU->EU_VALOR 
				RecLock("SET",.F.)
				REPLACE ET_SALDO WITH nSldAtu
				MsUnlock()
				
				dbSelectArea("SX3")
				dbSetOrder(2)  // campo
				dbSeek("EU_NUM")
				bNumRel := SX3->X3_RELACAO
				cNumRel := VerValNUM(&bNumRel)
			
				// GravaГЦo do movimento de estorno da resposiГЦo
				nRecInc := 0  
				PmsCopyReg("SEU",nRecReg,{{"EU_TIPO","12"},{" EU_HISTOR",STR0140},{"EU_BAIXA",dDataBase},{"EU_DTDIGIT",dDataBase},{"EU_NUM",cNumRel},{"EU_SEQCXA ",SET->ET_SEQCXA},{"EU_NRREND",nNrrend}},@nRecInc)
		
                IF __lSX8
                    ConfirmSX8()
                ENDIF
        
			EndIF					
		End Transaction
							
		If nHdlPrv > 0 .and. lPadrao57E  .And. lGeraLanc
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Efetiva Lan┤amento Contabil                                      Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			RodaProva( nHdlPrv, nTotal )
			If ( FindFunction( "UsaSeqCor" ) .And. UsaSeqCor() )
				cCodDiario := CTBAVerDia() 
				AADD(aDiario,{"SEU",SEU->(recno()),cCodDiario,"EU_NODIA","EU_DIACTB"})
			Endif   
			If lUsaFlag .And. !EMPTY(SEU->EU_NUM) // Armazena em aFlagCTB para atualizar no modulo Contabil 
				aAdd( aFlagCTB, {"EU_LA", "S", "SEU", SEU->( Recno() ), 0, 0, 0} )
			Endif                            
			cA100Incl( cArquivo,;
		           nHdlPrv,;
		           3 /*nOpcx*/,;
		           cLote,;
		           lDigita,;
		           lAglutina /*lAglut*/,;
		           /*cOnLine*/,;
		           /*dData*/,;
		           /*dReproc*/,;
		           @aFlagCTB,;
		           /*aDadosProva*/,;
		           aDiario )
			aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento
		
			If !lUsaflag .And. !Empty(SEU->EU_NUM)
				Reclock("SEU",.F.)
				Replace EU_LA	With "S"
			MsUnLock()
			EndIf
		EndIf
	ENDIF
	
//EndIf

	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Finaliza a gravacao dos lancamentos do SIGAPCO            Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	PcoFinLan("000359")

EndIf	


dbSelectArea(cAlias)
Return 


//-------------------------------------------------------
/*/{Protheus.doc} VerValNUM
VerificaГЦo e ValidaГЦo do NЗmero Interno - EU_NUM
@author Norberto M de Melo

@since 11/05/2022
@version 1.0
/*/
//-------------------------------------------------------
STATIC FUNCTION VerValNUM(cVlField AS CHARACTER, lCriaVar AS LOGICAL) AS CHARACTER
LOCAL aAreaSEU AS ARRAY

DEFAULT cVlField := M->EU_NUM
DEFAULT lCriaVar := .F.

aAreaSEU := SEU->(GETAREA())
cVlField := IF(lCriaVar,CriaVar("EU_NUM"),cVlField)
SEU->(DBSETORDER(1))    // EU_FILIAL, EU_NUM
WHILE SEU->(DBSEEK(xFilial('SEU')+cVlField))
    IF __lSX8
        ConfirmSX8()
    ENDIF
    cVlField := CriaVar("EU_NUM")
ENDDO
RESTAREA(aAreaSEU)

RETURN cVlField
