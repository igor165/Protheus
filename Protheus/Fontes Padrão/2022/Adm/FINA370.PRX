#INCLUDE "FileIO.CH"
#INCLUDE "FINA370.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "DBINFO.CH"
#INCLUDE "FWMVCDEF.CH"

#DEFINE mcEMP 1
#DEFINE mcUNG 2
#DEFINE mcFIL 3

#DEFINE NRECNO 1
#DEFINE NMODEL 2
#DEFINE NALIAS 3

Static lBlind	 := IsBlind()
Static lFWCodFil := .T.
Static aPswUser	:= nil
Static aPswGrupo	:= nil

Static lPosE1MsFil	:= NIL
Static lPosE2MsFil	:= NIL
Static lPosE5MsFil	:= NIL
Static lPosEfMsFil	:= NIL
Static _lCtbIniLan	:= FindFunction("CtbIniLan")
Static _lCtbProc	:=  _lCtbIniLan .and. (Alltrim(Upper(TCGetDB())) $ "MSSQL7|ORACLE") .and. SuperGetMv("MV_CTBUPRC",.T.,.F.) .And. SuperGetMv("MV_ALTLCTO",.T.,"S") == "N"
Static _cAliasBkp	:= If(_lCtbIniLan, CriaTrab(,.F.), "")

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FINA370	³ Autor ³ Wagner Xavier 		³ Data ³ 24/08/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa de Lan‡amentos Cont beis Off-Line				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FINA370()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ SIGAFIN													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FinA370(lDireto)

Default lDireto		:= .F.

SetFunName("CTBAFIN")

CTBAFIN(lDireto)

Return
	

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FA370Proc ³ Autor ³ Wagner Xavier 		³ Data ³ 24/08/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa de Lan‡amentos Cont beis Off-Line				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FINA370()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ SIGAFIN													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA370Processa(lBat,oSelf)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Vari veis 														  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lPadrao,lAglut
Local nTotal  :=0
Local nHdlPrv :=0
Local cArquivo:= ""
Local cPadrao
Local nValLiq	:=0
Local nDescont	:=0
Local nJuros	:=0
Local nMulta	:=0
Local nCorrec	:=0
Local nVl
Local nDc
Local nJr
Local nMt
Local nCm
Local lTitulo := .F.
Local dDataAnt:= dDataBase
Local dDataini:= dDataBase
Local nPeriodo:= 0
Local nLaco   := 0
Local cIndex, cIndSE2,cIndex2
Local cChave,cChave2
Local cFor
Local nIndex, nIndSE2,nIndex2
Local nReg
Local nRegSE5 	:= 0
Local nRegOrigSE5 := 0
Local lX 		:= .F.
Local lAdiant 	:= .F.
Local nProxReg 	:= 0
Local nRegEmp 	:= SM0->(Recno())
Local lEstorno 	:= .F.
Local lEstRaNcc := .F.
Local lEstPaNdf := .F.
Local lEstCart2 := .F.
Local lCompens 	:= .F.  
Local cCtBaixa 	:= Getmv("MV_CTBAIXA")
Local lCtMovPa 	:= SuperGetMv("MV_CTMOVPA",.T.,"1") == "2" // Indica se a Contabiliza‡?o Offline do LP513 ocorrer  pelo T¡tulo(SE2) ou Mov.Bancario(SE5) do Pagamento Antecipado. 1="SE2" / 2="SE5"
Local nLacoTrf 	:= 0
Local aTrf		:= {}
Local nValorTotal := 0
Local l370CTBUSR := Existblock("F370CTBUSR")
Local l370E5R 	:= Existblock("F370E5R")
Local l370E5P 	:= Existblock("F370E5P")
Local l370E5T 	:= Existblock("F370E5T")
Local l370E1FIL := Existblock("F370E1F")   // Criado Ponto de Entrada
Local l370E2FIL := Existblock("F370E2F")   // Criado Ponto de Entrada
Local l370E5FIL := Existblock("F370E5F")   // Criado Ponto de Entrada
Local l370EFFIL := Existblock("F370EFF")   // Criado Ponto de Entrada
Local l370EUFIL := Existblock("F370EUF")   // Criado Ponto de Entrada
Local lF370NATP := Existblock("F370NATP")   // Criado Ponto de Entrada
Local lF370E1WH := Existblock("F370E1W")   // Criado Ponto de Entrada para o While do SE1
Local l370E5KEY := Existblock("F370E5K")   // Criado Ponto de Entrada
Local l370EFKEY := Existblock("F370EFK")   // Criado Ponto de Entrada
Local l370E5CON := Existblock("F370E5CT")	 // Ponto de entrada para filtro do SE5 na contabilização
Local cCondWhile:= " "
Local nRegAnt
Local bCampo, nOrderSEU
Local cChaveSev
Local cChaveSeZ
Local cChaveSEF
Local nRecSe1
Local nRecSe2
Local cNumBor, cProxBor, nBordero, nTotBord, nBordDc, nBordJr, nBordMt, nBordCm
Local nTotDoc 	:= 0
Local nTotProc 	:= 0
Local lPadraoCC
Local lSkipLct 	:= .F.
Local cSitOri 	:= " "
Local cSitCob 	:= " "
Local cSeqSE5 	:= ""
Local lPadraoCCE
Local cPadraoCC
Local lMultNat 	:= .F.
Local nTamTot
Local nRecSev
Local nRecSez
Local cCarteira := GetMV("MV_CARTEIR")
Local aFlagCTB 	:= {}
Local lUsaFlag 	:= GetNewPar("MV_CTBFLAG",.F.)
Local lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"

Local nPis		:= 0
Local	nCofins	:= 0
Local nCsll		:= 0
Local nVretPis	:= 0
Local nVretCof 	:= 0
Local nVretCsl 	:= 0
Local aRecsSE5 	:= {} // x[1] - Recno | x[2] - Model | x[3] - Alias.
Local aRecsSEF 	:= {}
Local nX := 0

Local lMulNatSE2 	:= .F.
Local cProxChq		:= ""
Local cChequeAtual 	:= ""
Local lEstCompens 	:= .F.
Local lAchouSE5		:= .F.
Local cFilialPesq
Local cSElserie		:= ""
Local cSELRecibo	:= ""
Local cFilorig  	:= ""
Local cFilDoc		:= ""

Local lFindITF := .T.
//Variaveis para gravação do código de correlativo
Local aDiario	:= {}
Local lSeqCorr	:= UsaSeqCor("SE1/SE2/SE5/SEH/SEK/SEL/SET/SEU")

Local nz		:= 0
Local cAliasEF	:= "TRBSEF"

Local aLstSEF	:= {}  
Local aStru		:= SEF->(dbStruct())
Local cEF_T01	:= aStru[SEF->(FieldPos("EF_DATA")),2]
Local bCond		:= Nil
Local cQuery	:= ""

Local nPosReg  	:= 0
Local cPathLog 	:= GetMv("MV_DIRDOC")
Local cLogArq 	:= "Fina370Log.TXT"
Local cCaminho 	:= cPathLog + cLogArq
Local cTRCondWhile := " "
Local cFiltro	:= ""
Local	cCodNat := Upper(STR0053+"|"+STR0054)
Local lBrasil	:= cPaisLoc == "BRA"
Local nMove		:= 1   
Local nLenCheque:= TamSX3("EF_NUM")[1]
Local nRecMovPa := 0
Local lPAMov	:= .F.
Local lPccBxCp	:= GetMV("MV_BX10925") == "1" //Pcc na Baixa

//1 - Contabiliza por titulo ; 2 - contabiliza por venda (somente quando possuir integração)
Local nCtbVenda		:= SuperGetMV("MV_CTBINTE",,1)
Local aFils			:= {}
Local dDataSEF	:= dDataBase
Local cMVSLDBXCR 	:= GetMv("MV_SLDBXCR")
Local lCtbafin 		:= FwIsInCallStack("CTBAFIN")
Local lSE2SE1EOF 	:= .F.
Local lBxCnab 		:= SuperGetMv("MV_BXCNAB",.T.,"N") == "S"

Local Lracont := .F.
Local lHasCTB			:= .F.	// Deverá efetuar Lançamento contábil
Local lPass		:= .F.
Local lAGP			:= .F.
Local lMvAGP		:= SuperGetMv("MV_CTBAGP",.F.,.F.)
Local dDtRefSEF	:= CToD('')
Local lSE5CROK	:= .F.
Local lSE5CPOK	:= .F.
Local nValO2 := 0
Local nValO3 := 0
Local nValO4 := 0
Local lFilOrgChq := Mv_Par14 == 1 .And. lPosEfMsFil

Local lSE1MCFIL := FWMODEACCESS("SE1",mcFIL) == 'C'
Local lSE2MCFIL := FWMODEACCESS("SE2",mcFIL) == 'C'
Local lSE5MCFIL := FWMODEACCESS("SE5",mcFIL) == 'C'
Local lSEFMCFIL := FWMODEACCESS("SEF",mcFIL) == 'C'
Local lUsaFilOrig := (lSE1MCFIL .OR. lSE2MCFIL .OR. lSE5MCFIL .OR. lSEFMCFIL) .AND. GETNEWPAR("MV_CTBZFIL",.F.)

Local cFilCampo := ''
Local cAliasSE5 := GetNextAlias()
Local cExp      := ""

Local cMVPAR07  := ""
Local nRecNoSEF := 0
Local nTotAplEmp:= 0

LOCAL cDocTB := ""
LOCAL nRecNoSE5 := 0
LOCAL lQuebraDoc := .T.
LOCAL lGroupDoc := SUPERGETMV("MV_GPDOCTB",.F.,.F.)
Local cNatTroc   := Alltrim(IIf( cPaisLoc <> "BRA", SuperGetMV("MV_NATTROC"), GetNewPar("MV_NATTROC",'"TROCO"') ))
Local aRecSE5 := {}
LOCAL aCT5    := {}
Local cUniao := GetMv( "MV_UNIAO" )
Local cMunic := GetMv( "MV_MUNIC" )
Local lF370INFI := ExistBlock("F370INFI")
Local lDatBor := IIF(mv_par03 == 1 .and. mv_par12 == 2 ,.T.,.F.)	//respeita datas de baixa diferentes no mesmo borderô - Ctas a Pagar

Default lBat	:= .F.

Private cCampo
Private Inclui := .T.
Private cLote	:= Space( 4)
Private nSaveSx8Len := GetSx8Len()
Private cSeqCv4		:= ""   
Private lGerouTxt	:= .F.

If !lUsaFilOrig
	lSE1MCFIL := .F.
	lSE2MCFIL := .F.
	lSE5MCFIL := .F.
	lSEFMCFIL := .F.
EndIf 

If !CtbValiDt(,dDatabase,,,,{"FIN001","FIN002"},)
	Return
EndIf

If Funname() == "FINA370" .and. !lBlind
	oSelf:Savelog("INICIO")
EndIf	
If cPaisLoc == "BRA"
	lFindITF := .F.
Endif
//cria temporario de contabilizacao no banco de dados e otimiza validacao do lancamento
If FindFunction("CtbIniLan")
	CtbIniLan()
EndIf

cSeqCv4 := GetSx8Num("CV4", "CV4_SEQUEN")

If ! CtbInUse() .And.;
	(!(mv_par04 >= GetMv("MV_DATADE") .And. mv_par04 <= GetMv("MV_DATAATE")) .Or.;
	!(mv_par05 >= GetMv("MV_DATADE") .And. mv_par05 <= GetMv("MV_DATAATE")))
	HELP(" ",1,"DATACOMPET")

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza o log de processamento com o erro  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Funname() == "FINA370" .and. !lBlind
		oSelf:Savelog("ERRO","DATACOMPET",Ap5GetHelp("DATACOMPET"))
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Utilizacao da funcao ProcLogAtu para permitir a gravacao ³
		//³do log no CV8 quando do uso da classe tNewProcess que    ³
		//³grava o LOG no SXU (FNC 00000028259/2009)                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("ERRO","DATACOMPET",Ap5GetHelp("DATACOMPET"))			
	Else	
		ProcLogAtu("ERRO","DATACOMPET",Ap5GetHelp("DATACOMPET"))
	EndIf	

	Return .F.
EndIf

cFilDe := cFilAnt
cFilAte:= cFilAnt
//Para usuarios do SigaCon
If !CtbInUse()
	lUsaFlag := .F.
EndIf

If mv_par08 == 1
	cFilDe := mv_par09
	cFilAte:= mv_par10
EndIf

aFils := F370Fil(mv_par09,mv_par10) // Retorna filiais que o usuario tem acesso

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros								  ³
//³ mv_par01 // Mostra Lan‡amentos Cont beis 						  ³
//³ mv_par02 // Aglutina Lan‡amentos Cont beis						  ³
//³ mv_par03 // Emissao / Data Base 									  ³
//³ mv_par04 // Data Inicio												  ³
//³ mv_par05 // Data Fim													  ³
//³ mv_par06 // Carteira : Receber / Pagar /Cheque / Ambas 		  ³
//³ mv_par07 // Baixas por Data de Emiss„o ou Digita‡„o			  ³
//³ mv_par08 // Considera filiais abaixo                         ³
//³ mv_par09 // Da Filial                                        ³
//³ mv_par10 // Ate a Filial                                     ³
//³ mv_par11 // Atualiza Sinteticas                              ³
//³ mv_par12 // Separa por ? (Periodo,Documento,Processo)        ³
//³ mv_par13 // Ctb Bordero - Total/Por Bordero                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ    

dbSelectArea("SM0")
dbSeek(cEmpAnt+cFilDe,.T.)

While !Eof() .and. M0_CODIGO == cEmpAnt .and. IIf( lFWCodFil, FWGETCODFILIAL, SM0->M0_CODFIL ) <= cFilAte

	cFilAnt := IIf( lFWCodFil, FWGETCODFILIAL, SM0->M0_CODFIL )		// Mudar filial atual temporariamente 
	If Ascan(aFils,{|x| Alltrim(x) == Alltrim(cFilAnt)}) == 0 
    	SM0->( dbSkip() )
    	Loop
    Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Chama a SumAbatRec para abrir alias auxiliar __SE1 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Select("__SE1") == 0
		SumAbatRec("","","",1,"")
	EndIf	
	
	
		cMVPAR07 := If(MV_PAR07 == 1,"SE5->E5_DATA",If(MV_PAR07 == 2,"SE5->E5_DTDIGIT","SE5->E5_DTDISPO"))	
	
		If Select("__SE5") == 0
			ChkFile("SE5",.F.,"__SE5")
		Else
			dbSelectArea("__SE5")
		EndIf

		dbSelectArea("SE5")
		cIndex := CriaTrab(,.f.)
		aRecsSE5 := {}
		
		If lSE5MCFIL	//	Filial Compartilhada?
			cFilCampo := "SE5->E5_FILORIG+"
		Else
			cFilCampo := "SE5->E5_FILIAL+"
		EndIf
		
		If  mv_par07 == 1
			cChave := cFilCampo+"SE5->E5_RECPAG+Dtos(E5_DATA )+SE5->(E5_NUMCHEQ+E5_DOCUMEN+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIfOR+E5_LOJA+E5_SEQ)"
			cFor := 'dtos(SE5->E5_DATA) >= "'+dtos(mv_par04)+'" .and. dtos(SE5->E5_DATA) <= "'+dtos(mv_par05)+'" .and. '
			cFor += '(SE5->E5_LA < "S " .or. (!empty(SE5->E5_ORDREC + SE5->E5_SERREC) .and. SE5->E5_RECPAG == "R" .and. SE5->E5_TIPODOC == "BA"))'  // Filtra registros de Recebimentos Diversos p/Contabilizacao
				cFor += ' .and. SE5->E5_TIPODOC $ "PA/RA/BA/VL/V2/D2/J2/MT/M2/CM/C2/AP/EP/PE/RF/If/CP/TL/ES/TR/DB/OD/LJ/E2/TE/PE  "'				
		ElseIf mv_par07 == 2
			cChave := cFilCampo+"SE5->E5_RECPAG+Dtos(SE5->E5_DTDIGIT )+SE5->(E5_NUMCHEQ+E5_DOCUMEN+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIfOR+E5_LOJA+E5_SEQ)"
			cFor := '((dtos(SE5->E5_DTDIGIT) >= "'+dtos(mv_par04)+'" .and. dtos(SE5->E5_DTDIGIT) <= "'+dtos(mv_par05)+'" .and. '
				cFor += ' SE5->E5_TIPODOC $ "PA/RA/BA/VL/V2/D2/J2/MT/M2/CM/C2/AP/EP/PE/RF/If/CP/TL/ES/DB/OD/LJ/E2/PE  ") .or. '
			cFor += '( dtos(SE5->E5_DATA) >= "'+dtos(mv_par04)+'" .and. dtos(SE5->E5_DATA) <= "'+dtos(mv_par05)+'" .and.  SE5->E5_TIPODOC $"TR/TE")) .and. '				 
			cFor += '(SE5->E5_LA < "S " .or. (!empty(SE5->E5_ORDREC + SE5->E5_SERREC) .and. SE5->E5_RECPAG == "R" .and. SE5->E5_TIPODOC == "BA"))'  // Filtra registros de Recebimentos Diversos p/Contabilizacao
		Else
			cChave := cFilCampo+"SE5->E5_RECPAG+Dtos(SE5->E5_DTDISPO)+SE5->(E5_NUMCHEQ+E5_DOCUMEN+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIfOR+E5_LOJA+E5_SEQ)"
			cFor := '((dtos(SE5->E5_DTDISPO) >= "'+dtos(mv_par04)+'" .and. dtos(SE5->E5_DTDISPO) <= "'+dtos(mv_par05)+'" .and. '
				cFor += ' SE5->E5_TIPODOC $ "PA/RA/BA/VL/V2/D2/J2/MT/M2/CM/C2/AP/EP/PE/RF/If/CP/TL/ES/DB/OD/LJ/E2/PE  ") .or. '
			cFor += '( dtos(SE5->E5_DATA) >= "'+dtos(mv_par04)+'" .and. dtos(SE5->E5_DATA) <= "'+dtos(mv_par05)+'" .and.  (SE5->E5_TIPODOC $"TR/TE" .or. EMPTY(SE5->(E5_TIPODOC+E5_TIPO))))) .and. '				
			cFor += '(SE5->E5_LA < "S " .or. (!empty(SE5->E5_ORDREC + SE5->E5_SERREC) .and. SE5->E5_RECPAG == "R" .and. SE5->E5_TIPODOC == "BA"))'  // Filtra registros de Recebimentos Diversos p/Contabilizacao
		EndIf
		
		If  mv_par14 == 1 .and. lPosE5MsFil 
		
			cFor += ' .and. SE5->E5_MSFIL >= "'+ mv_par15 +'"'
			cFor += ' .and. SE5->E5_MSFIL <= "'+ mv_par16 +'"'
			
		Else
			
			cFor += ' .and. SE5->E5_FILIAL == "'+ xFilial("SE5",cFilAnt) +'"'	
		
		EndIf		

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de Entrada para filtrar registros do SE5. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If l370E5FIL
			cFor := Execblock("F370E5F",.F.,.F.,cFor)
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de Entrada para alterar ordenacao do SE5  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If l370E5KEY
			cChave := Execblock("F370E5K",.F.,.F.,cChave)
		EndIf
				
		cFiltro := cChave

		dbSelectArea("SE5")
		IndRegua("SE5",cIndex,cChave,,cFor,STR0018)  //"Selecionando Registros..."
		nIndex := RetIndex("SE5")
		SE5->(dbSetOrder(nIndex+1))
		dbGoTop()
	
		
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Contabiliza pelo E2_EMIS1 - CONTAS PAGAR   			  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (mv_par06 = 2 .Or. mv_par06 = 4) 
		cIndSE2 := CriaTrab(,.f.)
		
		dbSelectArea("SE2")
		If lSE2MCFIL	//	Filial Compartilhada?
			cFilCampo := "E2_FILORIG+"
		Else
			cFilCampo := "E2_FILIAL+"
		EndIf

		cChave := cFilCampo+"DTOS(E2_EMIS1)+E2_NUMBOR+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA"
		cFor := 'dtos(E2_EMIS1) >= "'+dtos(mv_par04)+'" .and. dtos(E2_EMIS1) <= "'+dtos(mv_par05)+'" .and. '
		cFor += 'E2_LA <> "S" .and. subString(E2_ORIGEM,1,3) <> "PLS"  .and. empty(E2_PLLOTE) .and. E2_PREFIXO <> "PLS" '
		
		If lSE2MCFIL	//	Filial Compartilhada?
			cFor += ' .and. E2_FILORIG == "' + cFilAnt + '"' 
		Else
			If mv_par14 == 1 .and. lPosE2MsFil .AND. (cFilAnt >= MV_PAR15) .AND. (cFilAnt <= MV_PAR16)
				cFor += ' .and. E2_MSFIL == "'+ cFilAnt +'"'
			ELSE
				cFor += ' .and. E2_FILIAL == "'+xFilial("SE2",cFilAnt)+'"'
		EndIf		
		EndIf		
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de Entrada para filtrar registros do SE2. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If l370E2FIL
			cFor := Execblock("F370E2F",.F.,.F.,cFor)
		EndIf
		
		dbSelectArea("SE2")

			ChkFile("SE2",.f.,"TRBSE2")
			IndRegua("TRBSE2",cIndSE2,cChave,,cFor,"Selecionando Registros...")
			nIndSE2 := -1
			dbSelectArea("TRBSE2")

		dbSetOrder(nIndSE2+1)
		dbSeek(cFilAnt)
	EndIf
	
	If (mv_par06 = 3 .Or. mv_par06 = 4 )
		//--Arquivo de Cheque SEF

			dbSelectArea("SEF")
			If lSEFMCFIL	//	Filial Compartilhada?
				cFilCampo := "EF_FILORIG+"
			Else
				cFilCampo := "EF_FILIAL+"
			EndIf
			cChave := cFilCampo+"EF_BANCO+EF_AGENCIA+DTOS(EF_DATA)"
			
			cQuery := ""
			aEval(DbStruct(),{|e| cQuery += ","+AllTrim(e[1])})
			// Obtem os registros a serem processados
			cQuery := "SELECT " + SubStr(cQuery,2)
			cQuery += ",SEF.R_E_C_N_O_ SEFRECNO "
			cQuery += "FROM " + RetSqlName("SEF") + " SEF "
		
			If lFilOrgChq .and. (cFilAnt >= mv_par15) .and. (cFilAnt <= mv_par16)
				cQuery += "WHERE EF_MSFIL = '" + cFilAnt + "' AND "
			Else
				If lSEFMCFIL	//	Filial Compartilhada?
					cQuery += "WHERE EF_FILORIG = '" + cFilAnt + "' AND "
				Else
					cQuery += "WHERE EF_FILIAL = '" + xFilial("SEF") + "' AND "
				EndIf		
			EndIf		

			cQuery += "EF_DATA BETWEEN '" + DTOS(mv_par04) + "' AND '" + DTOS(mv_par05) + "' AND "
			cQuery += "EF_LA <> 'S ' AND "
			cQuery += "EF_LIBER = 'S ' AND "
			cQuery += "D_E_L_E_T_ = ' ' "

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de Entrada para filtrar registros do SE2. ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If l370EFFIL
				cQuery += Execblock("F370EFF",.F.,.F.,cQuery)
			EndIf
                     
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de Entrada para alterar ordenacao do SEF  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If l370EFKEY
				cChave := Execblock("F370EFK",.F.,.F.,cChave)
			EndIf

			// seta a ordem de acordo com a opcao do usuario
			cQuery += "ORDER BY " + SqlOrder(cChave)
			cQuery := ChangeQuery(cQuery)
			dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), cAliasEF, .F., .T.)
			For nz := 1 TO LEN(aStru)
				If aStru[nz][2] != "C"
					TCSetField(cAliasEF, aStru[nz][1], aStru[nz][2], aStru[nz][3], aStru[nz][4])
				EndIf
			Next
			DbGoTop()
			EndIf		
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ La‡o da contabiliza‡„o dia a dia, pela emiss„o (mv_par03 = 1)³
	//³ ou pela database.														  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If mv_par03 == 1
		nPeriodo := mv_par05 - mv_par04 + 1 // Data Final - Data inicial
		nPeriodo := IIf( nPeriodo == 0, 1, nPeriodo )
	Else
		nPeriodo := 1
	EndIf
	
	dDataIni := mv_par04

	BEGIN SEQUENCE
	
	If ! lBat
		If Funname() == "FINA370"
			oSelf:SetRegua1(nPeriodo)
		Else	
			ProcRegua(nPeriodo)
		EndIf	
	EndIf
	For nLaco := 1 to nPeriodo
		
		If ! lBat
			If Funname() == "FINA370"
				oSelf:IncRegua1()
			Else
				IncProc()
			EndIf	
		EndIf
		dbSelectArea( "SE1" )
		
		nTotal		:= 0
		nHdlPrv		:= 0
		lCabecalho	:= .F.
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se a contabiliza‡„o for pela data de emiss„o, altera o valor ³
		//³ da data-base e dos parƒmetros, para efetuar a contabiliza‡„o ³
		//³ e a sele‡„o dos registros respectivamente.						  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If mv_par03 == 1
			dDataBase := dDataIni + nLaco - 1
			mv_par04 := dDataBase
			mv_par05 := dDataBase
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ VerIfica o N£mero do Lote 											  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		LoteCont("FIN")
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ VerIfica se ‚ um EXECBLOCK e caso sendo, executa-o							³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If At(UPPER("EXEC"),X5Descri()) > 0
			cLote := &(X5Descri())
		EndIf
		
		If (mv_par06 == 1 .or. mv_par06 == 4)
			
			// TROCA O ALIAS DA SE5 para utilizar a SE5 sem filtro
			DbChangeAlias("SE5","SE5FIL")
			DbChangeAlias("__SE5","SE5")
						
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Contas a Receber - SE1990 										     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SE1")
			SE1->(dbSetOrder(6))
			SE1->(dbSeek(cFilial+Dtos(mv_par04),.T.))
			
			If lF370E1WH
				cCondWhile := Execblock("F370E1W",.F.,.F.) 
			Else
				cCondWhile := "( SE1->E1_EMISSAO >= mv_par04 .And. SE1->E1_EMISSAO <= mv_par05 ) "
			EndIf
			
			If lSE1MCFIL	//	Filial Compartilhada?
				cFor := "'" + cFilAnt + "' == SE1->E1_FILORIG" 
			Else
				cFor := "'" + xFilial("SE1",cFilAnt) + "' == SE1->E1_FILIAL " 
			EndIf
			
			If mv_par14 == 1 .and. lPosE1MsFil .AND. (cFilAnt >= MV_PAR15) .AND. (cFilAnt <= MV_PAR16)
				cFor += " .and. SE1->E1_MSFIL == '" + cFilAnt + "'"
			EndIf
			
			cFor += " .and. subString(SE1->E1_ORIGEM,1,3) <> 'PLS' .and. empty(SE1->E1_PLNUCOB) .and. SE1->E1_PREFIXO <> 'PLS' "
			If nCtbVenda == 2 //Contabilização por venda
				If !Empty(AllTrim(cCondWhile)) 
					cCondWhile += " .And. AllTrim(SE1->E1_ORIGEM) <> 'FINI055'"
				Else
					cCondWhile := " AllTrim(SE1->E1_ORIGEM) <> 'FINI055' .and. subString(SE1->E1_ORIGEM,1,3) <> 'PLS' .and. empty(SE1->E1_PLNUCOB) .and. SE1->E1_PREFIXO <> 'PLS'"
				Endif
			Endif
			
			While !Eof() .And. &cCondWhile
				
				If !(&cFor)
					dbSkip()
					Loop				
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ponto de Entrada para filtrar registros do SE1. ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If l370E1FIL
					If !Execblock("F370E1F",.F.,.F.)
						dbSkip()
						Loop
					EndIf
				EndIf
				
				cPadrao := "500"
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ VerIfica se ser  gerado Lan‡amento Cont bil			  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SE1->E1_LA == "S" .Or. (SE1->E1_TIPO $ MVPROVIS .And. mv_par17 <> 1)
					SE1->( dbSkip())
					Loop
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona no cliente.										  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea( "SA1" )
				dbSeek( xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA )
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona na natureza.										  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea( "SED" )
				dbSeek( cFilial+SE1->E1_NATUREZ )
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona na SE5,se RA										  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SE1->E1_TIPO $ MVRECANT
					dbSelectArea("SE5")
					dbSetOrder(2)
					dbSeek( xFilial()+"RA"+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO+DtoS(SE1->E1_EMISSAO)+SE1->E1_CLIENTE+SE1->E1_LOJA)
					dbSetOrder(1)
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona no banco.											  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea( "SA6" )
				dbSetOrder(1)
				dbSeek( cFilial+SE1->E1_PORTADO+SE1->E1_AGEDEP+SE1->E1_CONTA )
				// Se for um recebimento antecipado e nao encontrou o banco
				// pelo SE1, pesquisa pelo SE5.
				If SE1->E1_TIPO $ MVRECANT
					If SA6->(Eof())
						dbSeek( cFilial+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA )
					EndIf
					cPadrao:="501"
				EndIf
				
				dbSelectArea("SE1")
				
				lPadrao		:= VerPadrao(cPadrao)
				lPadraoCc 	:= VerPadrao("506") //Rateio por C.Custo de MultiNat C.Receber
				
				If lPadrao
				
					If !lCabecalho
						a370Cabecalho(@nHdlPrv,@cArquivo)
					EndIf
					cChaveSev := RetChaveSev("SE1")
					cChaveSez := RetChaveSev("SE1",,"SEZ")
					dbSelectArea("SE1")
					nRecSe1 := Recno()
					DbSelectArea("SEV")
					// Se utiliza multiplas naturezas, contabiliza pelo SEV
					If SE1->E1_MULTNAT == "1" .And. MsSeek(cChaveSev)

						dbSelectArea("SE1")
						nRecSe1 := Recno()
						DbGoBottom()
						DbSkip()
						DbSelectArea("SEV")
						dbSetOrder(2)
						While xFilial("SEV")+SEV->(EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+;
							EV_LOJA+EV_IDENT) == cChaveSev+"1" .And. !Eof()

							If SEV->EV_LA != "S"
								dbSelectArea( "SED" )
								MsSeek( xFilial("SED")+SEV->EV_NATUREZ ) // Posiciona na natureza, pois a conta pode estar la.
								dbSelectArea("SEV")
								
								If SEV->EV_RATEICC == "1" .and. lPadraoCC .and. lPadrao// Rateou multinat por c.custo
									dbSelectArea("SEZ")
									dbSetOrder(4)
									MsSeek(cChaveSeZ+SEV->EV_NATUREZ) // Posiciona no arquivo de Rateio C.Custo da MultiNat
								
									While !Eof() .and. xFilial("SEZ")+SEZ->(EZ_PREFIXO+EZ_NUM+;
										EZ_PARCELA+EZ_TIPO+EZ_CLIFOR+EZ_LOJA+EZ_NATUREZ+EZ_IDENT) == cChaveSeZ+SEV->EV_NATUREZ+"1"
										
										If SEZ->EZ_LA != "S"

											If lUsaFlag
												aAdd(aFlagCTB,{"EZ_LA","S","SEZ",SEZ->(Recno()),0,0,0})
											EndIf

											nTotDoc	+=	DetProva(nHdlPrv,"506","FINA370",cLote,,,,,,aCT5,,@aFlagCTB)

											If LanceiCtb // Vem do DetProva																								
												If !lUsaFlag
													RecLock("SEZ")
													SEZ->EZ_LA    := "S"
													MsUnlock( )
												EndIf 
											ElseIf lUsaFlag
												If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SEZ->(Recno()) }))>0
													aFlagCTB := Adel(aFlagCTB,nPosReg)
													aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
												EndIf
											EndIf												
										EndIf
										dbSkip()
									Enddo
									DbSelectArea("SEV")
								Else
									If lUsaFlag
										aAdd(aFlagCTB,{"EV_LA","S","SEV",SEV->(Recno()),0,0,0})
									EndIf
									nTotDoc	+= DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,,,@aFlagCTB)
								EndIf
								
								If LanceiCtb // Vem do DetProva
									If !lUsaFlag	
										RecLock("SEV")
										SEV->EV_LA    := "S"
										MsUnlock( )
										LanceiCtb := .F.
									EndIf
								ElseIf lUsaFlag
									If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SEV->(Recno()) }))>0
										aFlagCTB := Adel(aFlagCTB,nPosReg)
										aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
									EndIf
								EndIf
								
							EndIf

							DbSelectArea("SEV")
							DbSkip()
						Enddo
						nTotal  	+=	nTotDoc
						nTotProc	+=	nTotDoc // Totaliza por processo

						If !lCabecalho
							a370Cabecalho(@nHdlPrv,@cArquivo)
						EndIf
						nRecSev := SEV->(Recno())
						nRecSez := SEZ->(Recno())
						dbSelectArea("SEV")
						dbGobottom()
						dbSkip()
						DbSelectArea("SEZ")
						dbGobottom()
						dbSkip()
						nTotDoc	+=	DetProva(nHdlPrv,"506","FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
						If mv_par12 == 2 
							If nTotDoc > 0 // Por documento
								Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
								nTotDoc := 0
							EndIf
							aFlagCTB := {}
						EndIf
						
						dbSelectArea("SE1")
						DbGoto(nRecSe1)
					EndIf

					dbSelectArea("SEV")
					DbGoBottom()
					DbSkip()
					
					DbSelectArea("SE1")
					dbGoto(nRecSe1)
					If lUsaFlag
						aAdd(aFlagCTB,{"E1_LA","S","SE1",SE1->(Recno()),0,0,0})
					EndIf
					If !lCabecalho							/// Se não houver cabeçalho aberto, abre.
						a370Cabecalho(@nHdlPrv,@cArquivo)
					EndIf
					
					nTotDoc	:= DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
					nTotal	+= nTotDoc
					nTotProc+= nTotDoc //Totaliza por processo
					If mv_par12 == 2 
						If nTotDoc > 0 // Por documento
							If lSeqCorr
								aDiario := {{"SE1",SE1->(recno()),SE1->E1_DIACTB,"E1_NODIA","E1_DIACTB"}}
							EndIf
							Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB,@aDiario)
						EndIf
						aFlagCTB := {}
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza Flag de Lan‡amento Cont bil		  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If LanceiCtb
						If !lUsaFlag
							Reclock("SE1")
							REPLACE E1_LA With "S"
							MsUnlock( )
						EndIf
					ElseIf lUsaFlag
						If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SE1->(Recno()) }))>0
							aFlagCTB := Adel(aFlagCTB,nPosReg)
							aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
						EndIf
					EndIf
				EndIf
				DbSelectArea("SE1")
				dbSkip()
			Enddo
			
			If mv_par12 == 3 
				If nTotProc > 0 // Por processo
					Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
					nTotProc := 0
				EndIf
				aFlagCTB := {}
			EndIf
			
			//RETORNA o alias da SE5 filtrada
			DbChangeAlias("SE5","__SE5")
			DbChangeAlias("SE5FIL","SE5")
			
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Movimenta‡„o Banc ria a Receber - SE5990 						  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SE5")
				SE5->(dbSetOrder(nIndex+1))
				
				If lSE5CROK
					If lSE5MCFIL	//	Usa Filial de Origem?
						SE5->(dbSeek( cFilAnt+"R"+Dtos(mv_par04),.F. ))
					Else
						SE5->(dbSeek( xFilial('SE5')+"R"+Dtos(mv_par04),.F. ))
					EndIf
				Else
					SE5->(dbGoTop())
					lSE5CROK := .T.
				EndIf
				 
				aRecsSE5 := {}

				If l370E5CON
					cFor:= Execblock("F370E5CT",.F.,.F.)
				Else                
					cTpData := If(mv_par07 == 3, "SE5->E5_DTDISPO", "SE5->E5_DATA")	
					cFor := " (" + cTpData + " >= mv_par04 .And. " + cTpData + " <= mv_par05 )"
					cFor += " .AND. ( EMPTY(SE5->E5_MOTBX) .OR. SE5->E5_TIPODOC=='DB') "
				EndIf

				If lSE5MCFIL	//	Usa Filial de Origem?
					cCondWhile := "'" + cFilAnt + "' == SE5->E5_FILORIG" 
				Else
					cCondWhile := "'" + xFilial("SE5") + "' == SE5->E5_FILIAL " 
				EndIf

				If mv_par14 == 1 .and. lPosE5MsFil
					cCondWhile += " .and. SE5->E5_MSFIL == '" + cFilAnt + "'"
				EndIf

				While SE5->(!Eof()) .And. &cCondWhile
				
					If !(&cFor) .OR. (aScan(aRecsSE5,{|x| x[1]==(SE5->(Recno())) }) > 0)
						SE5->(dbSkip())
						Loop
					EndIf
					
					cPadrao := ''
					
					lRaCont := .F. //Limpa variavel de Contabilização de Baixa de RA - LP 520

					If (SE5->E5_RECPAG $ "R|P") .and. (SE5->E5_TIPODOC $ "TR#TE") 
						SE5->(dbSkip())
						Loop
					EndIf
					
					If !SE5->E5_TIPODOC $ "TR#TE" .and. SE5->E5_SITUACA <> "E" 
						cPadrao := "563"
					ElseIf !SE5->E5_TIPODOC $ "TR#TE"
						cPadrao := "564"
					EndIf
					lX			:= .F.
					

					if SE5->E5_TIPO = "RA " .AND. SE5->E5_RECPAG ="P" .AND. SE5->E5_LA <"S "
					 Lracont := .T.
					Endif 
					
					If SE5->E5_RECPAG == "P" .and. SE5->E5_TIPO <> "RA "  .And. !(SE5->E5_TIPODOC $ "TR|TE") .And. SubStr(SE5->E5_LA,1,1) == "S"
						SE5->(dbSkip())
						Loop
					EndIf

					// Aplicações e Empréstimos
					// Estorno de Aplicações, Resgates, Inclusão de Empréstimos, Estorno de Pagamentos
					If SE5->E5_RECPAG == "R" .AND. SE5->E5_TIPODOC $ "AP/RF/PE/EP"
						// Identifica e Valida o Lançamento Padrão a ser Utilizado neste processo
						If AplEmpVerPadrao(@cPadrao)
							CtbAPLEMP("R", cPadrao, aFlagCTB, lUsaFlag, @nTotDoc, @nHdlPrv, @cArquivo, aCT5)
							nTotProc += nTotDoc
							nTotal   += nTotDoc
						EndIf
						
						SE5->(dbSkip())
						
						If SE5->(Eof()) .And. mv_par12 == 2 .And. nTotProc > 0 
							If VerPadrao(cPadrao)
								Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB,@aDiario)
								nTotProc := 0
								LanceiCtb := .F.
								SE5->(DbGoBottom())
								SE5->(dbSkip())
							EndIf	
						EndIf						
						
						Loop
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Caracteriza-se lancamento os registros com :		  ³
					//³ E5_TIPODOC = brancos                         		  ³
					//³ E5_TIPODOC = "DB" // Receita Bancaria - FINA200     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( !lX )
						If !(SE5->E5_TIPODOC $ "DB/TR/TE") .AND. !((SE5->E5_TIPODOC $ "ES") .AND. cPadrao == "564" .AND. SE5->E5_RECPAG == "R" ).and. !Lracont
							If !Empty(SE5->E5_TIPODOC) .OR. SE5->E5_RECPAG == "P"
								SE5->(dbSkip())
								Loop
							EndIf
						EndIf
					EndIf
					
					If SE5->E5_RATEIO == "S" .And. CtbInUse()
						cPadrao := If(SE5->E5_RECPAG == "R" .And. SE5->E5_SITUACA <> "E", "517", cPadrao)
						
						If SE5->E5_RECPAG == "R" .AND. (SE5->E5_SITUACA == "E" .or. SE5->E5_SITUACA == "C") // CARREGO VARIAVEL PARA CONTABILIZAR EXCLUSÃO E CANCELAMENTO
							cPadrao := "558"
						EndIf
					EndIf
					
					If Lracont 
						 cPadrao := "520"
					Endif
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Posiciona na natureza.										  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					dbSelectArea( "SED" )
					dbSeek(xFilial()+SE5->E5_NATUREZ)
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Posiciona no banco.											  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					dbSelectArea("SA6")
					dbSetOrder(1)
					dbSeek(xFilial()+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA)
					
					dbSelectArea("SE5")
					lPadrao := VerPadrao(cPadrao)
					
					If l370E5R
						Execblock("F370E5R",.F.,.F.)
					EndIf
					
					If lPadrao
						If SE5->E5_RATEIO != "S"
							If !lCabecalho
								a370Cabecalho(@nHdlPrv,@cArquivo)
							EndIf
							If lUsaFlag
								aAdd(aFlagCTB,{"E5_LA","S","SE5",SE5->(Recno()),0,0,0})
							EndIf
							nTotDoc	:= DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
							nTotProc+= nTotDoc
							nTotal	+=	nTotDoc
							
							If mv_par12 == 2 
								If nTotDoc > 0 // Por documento
									If lSeqCorr
										aDiario := {{"SE5",SE5->(recno()),SE5->E5_DIACTB,"E5_NODIA","E5_DIACTB"}}
									EndIf
									Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB,@aDiario)
								EndIf
								aFlagCTB := {}
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Atualiza Flag de Lan‡amento Cont bil		  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If LanceiCtb
								AAdd(aRecsSE5,{ SE5->(Recno()),'FINM030','FK5'}) // Mov.Bancaria
								IF !lUsaFlag
									RecLock("SE5")
									SE5->E5_LA := "S"
									SE5->( MsUnlock())
								Endif	
							EndIf
						Else
							If CtbInUse()				// Somente para SIGACTB
								If nHdlPrv <= 0
									a370Cabecalho(@nHdlPrv,@cArquivo)
								EndIf
								RegToMemory("SE5",.F.,.F.)
								If lUsaFlag
									aAdd(aFlagCTB,{"E5_LA","S","SE5",SE5->(Recno()),0,0,0})
								EndIf
								// Devido a estrutura do programa, o rateio ja eh "quebrado"
								// por documento.
								F370RatFin(cPadrao,"FINA370",cLote,4," ",4,,,,@nHdlPrv,@nTotDoc,@aFlagCTB)
								lCabecalho := If(nHdlPrv <= 0, lCabecalho, .T.)
								nTotProc	+= nTotDoc
								nTotal	+=	nTotDoc
								If mv_par12 == 2 
									If nTotDoc > 0 // Por documento
										If lSeqCorr
											aDiario := {{"SE5",SE5->(recno()),SE5->E5_DIACTB,"E5_NODIA","E5_DIACTB"}}
										EndIf
										Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB,@aDiario)
									EndIf
									aFlagCTB := {}
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Atualiza Flag de Lan‡amento Cont bil	   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If LanceiCtb
									aAdd(aRecsSE5,{ SE5->(Recno()),'FINM030','FK5'}) // Mov.Bancaria									
								EndIf
							EndIf
						EndIf
					EndIf
					dbSelectArea("SE5")
					dbSkip()
				End
				
				// Aplicações e Empréstimos - Contabiliza as Apropriações - Não gera movimentação Bancária
				If VerPadrao("582")
					CtbAPLEMP("R", "582", aFlagCTB, lUsaFlag, @nTotAplEmp, @nHdlPrv, @cArquivo, aCT5)
					If !EMPTY(nTotAplEmp)
						nTotDoc  += nTotAplEmp
						nTotProc += nTotDoc
						nTotal   += nTotDoc
						nTotAplEmp := 0
					EndIf
				EndIf
				
				If mv_par12 == 3
					If nTotProc > 0 // Por processo
						Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
						nTotProc := 0
					EndIf
					aFlagCTB := {}
				EndIf
			
		EndIf
		
		If (mv_par06 == 2 .or. mv_par06 == 4)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Contas a Pagar - SE2990												  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea( "TRBSE2" )

			dbSetOrder(nIndSe2+1)
			
			If lSE2MCFIL	//	Usa Filial de Origem?
				dbSeek( cFilAnt + DtoS(mv_par04), .T. )
			Else
			dbSeek(xFilial("SE2")+DtoS(mv_par04),.T.)
			EndIf
			
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Contabiliza pelo E2_EMIS1                  			  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			While TRBSE2->(!Eof()) .And. xFilial("SE2") == TRBSE2->E2_FILIAL .And. TRBSE2->E2_EMIS1 >= mv_par04 ; 
				.And. TRBSE2->E2_EMIS1 <= mv_par05

					If !lPass .And. lMvAGP 
						While !Eof()
							If TRBSE2->E2_PREFIXO == "AGP" .And. Empty(TRBSE2->E2_TITPAI) .And. Alltrim(TRBSE2->E2_ORIGEM) == "FINA378"
								lAGP := .T.
								Exit
							EndIf
							DbSkip()
						EndDo
						lPass := .T.
						TRBSE2->(DbGotop())
					EndIf
					SE2->(dbGoto(TRBSE2->(Recno())))

				lMulNatSE2 := .F.
				lPAMov	:= .F.

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se ser  gerado Lan‡amento Cont bil			  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If	SE2->E2_LA = "S" .Or. (SE2->E2_TIPO $ MVPROVIS .And. mv_par17 <> 1)

						TRBSE2->(dbSkip())
					Loop
				EndIf
				
				// Nao contabiliza titulos de impostos aglutinados com origem na rotina FINA378 se foram gerados na baixa
				If !lAGP // Neste caso o Parâmetro de contabilização dos impostos aglutinados inverte a operação
					If	AllTrim( Upper( SE2->E2_ORIGEM ) ) == "FINA378" .And. SE2->E2_PREFIXO == "AGP" .And. lPccBxCp	// Aglutinacao Pis/Cofins/Csll

							TRBSE2->(dbSkip())
						Loop
					EndIf
				ElseIf AllTrim(SE2->E2_CODRET) == "5952" .And. ( (SE2->E2_PREFIXO != "AGP" .Or. !Empty(SE2->E2_TITPAI)) .And. AllTrim(SE2->E2_ORIGEM) != "FINA378") .And. F370ChkAgp()
					RecLock("SE2",.F.)
					SE2->E2_LA := 'S'
					SE2->(MsUnLock())

						TRBSE2->(dbSkip())
					Loop
				EndIf
				
				// Contabiliza inclusoes de Pagamento Antecipado - MV_CTMOVPA.
				If SE2->E2_TIPO $ MVPAGANT
					If !lCtMovPa
					nRecMovPa := F080MovPA(.T.,SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,SE2->E2_FORNECE,SE2->E2_LOJA)
						lPAMov := nRecMovPa > 0
					Else
							TRBSE2->(dbSkip())
						Loop
					EndIf
				Endif
				
				If	SE2->E2_TIPO $ MVTAXA+"/"+MVISS+"/"+MVINSS .And.;
					( AllTrim(SE2->E2_FORNECE) $ cUniao .Or.;
					AllTrim(SE2->E2_FORNECE) $ cMunic)
					// Contabiliza rateio de impostos em multiplas naturezas e multiplos
					// centros de custos.
					lPadrao		:= VerPadrao("510")
					lPadraoCC 	:= VerPadrao("508")  // Rateio C.Custo de MultiNat Pagar
					If lPadrao
						If SE2->E2_RATEIO != "S"
							If !lCabecalho
								a370Cabecalho(@nHdlPrv,@cArquivo)
							EndIf
							cChaveSev := RetChaveSev("SE2")
							cChaveSeZ := RetChaveSev("SE2",,"SEZ")
							DbSelectArea("SEV")
							// Se utiliza multiplas naturezas, contabiliza pelo SEV
							If SE2->E2_MULTNAT=="1" .And. MsSeek(cChaveSev)
								lMulNatSE2 := .F.
								dbSelectArea("SE2")
								nRecSe2 := Recno()
								DbGoBottom()
								DbSkip()

								DbSelectArea("SEV")
								dbSetOrder(2)
								While xFilial("SEV")+SEV->(EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+;
									EV_LOJA+EV_IDENT) == cChaveSev+"1" .And. !Eof()
									If SEV->EV_LA != "S"
										dbSelectArea( "SED" )
										MsSeek( xFilial("SED")+SEV->EV_NATUREZ ) // Posiciona na natureza, pois a conta pode estar la.
										dbSelectArea("SEV")
										If SEV->EV_RATEICC == "1" .and. lPadrao .and. lPadraoCC // Rateou multinat por c.custo
											dbSelectArea("SEZ")
											dbSetOrder(4)
											MsSeek(cChaveSeZ+SEV->EV_NATUREZ) // Posiciona no arquivo de Rateio C.Custo da MultiNat
											While !Eof() .and. xFilial("SEZ")+SEZ->(EZ_PREFIXO+EZ_NUM+;
												EZ_PARCELA+EZ_TIPO+EZ_CLIFOR+EZ_LOJA+EZ_NATUREZ+EZ_IDENT) == cChaveSeZ+SEV->EV_NATUREZ+"1"

												If SEZ->EZ_LA != "S"

													If lUsaFlag
														aAdd(aFlagCTB,{"EZ_LA","S","SEZ",SEZ->(Recno()),0,0,0})
													EndIf

													VALOR := 0
													VALOR2 := 0
													VALOR3 := 0
													VALOR4 := 0
													Do Case
														Case SEZ->EZ_TIPO $ MVTAXA
															VALOR2 := SEZ->EZ_VALOR
														Case SEZ->EZ_TIPO $ MVISS
															VALOR3 := SEZ->EZ_VALOR
														Case SEZ->EZ_TIPO $ MVINSS
															VALOR4 := SEZ->EZ_VALOR
													EndCase
													nTotDoc	+=	DetProva(nHdlPrv,"508","FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
													If LanceiCtb // Vem do DetProva
														If !lUsaFlag
															RecLock("SEZ")
															SEZ->EZ_LA    := "S"
															MsUnlock( )
														EndIf
													ElseIf lUsaFlag
														If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SEZ->(Recno()) }))>0
															aFlagCTB := Adel(aFlagCTB,nPosReg)
															aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
														EndIf											
													EndIf
												EndIf
												dbSkip()
											Enddo
										Else
											VALOR := 0
											VALOR2 := 0
											VALOR3 := 0
											VALOR4 := 0
											Do Case
												Case SEV->EV_TIPO $ MVTAXA
													VALOR2 := SEV->EV_VALOR
												Case SEV->EV_TIPO $ MVISS
													VALOR3 := SEV->EV_VALOR
												Case SEV->EV_TIPO $ MVINSS
													VALOR4 := SEV->EV_VALOR
											EndCase

											If lUsaFlag
												aAdd(aFlagCTB,{"EV_LA","S","SEV",SEV->(Recno()),0,0,0})
											EndIf

											nTotDoc	+=	DetProva(nHdlPrv,"510","FINA370",cLote,,,,,,aCT5,,@aFlagCTB)

										EndIf
										If LanceiCtb // Vem do DetProva
											If !lUsaFlag
												RecLock("SEV")
												SEV->EV_LA    := "S"
												MsUnlock( )
												LanceiCtb := .F.
											EndIf    
										ElseIf lUsaFlag
											If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SEV->(Recno()) }))>0
												aFlagCTB := Adel(aFlagCTB,nPosReg)
												aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
											EndIf											
										EndIf
									EndIf
									dbSelectArea("SEV")
									DbSkip()
								Enddo
								nTotal  	+=	nTotDoc
								nTotProc	+=	nTotDoc // Totaliza por processo
								nRecSev := SEV->(Recno())
								nRecSez := SEZ->(Recno())
								dbSelectArea("SEV")
								dbGobottom()
								dbSkip()
								dbSelectArea("SEV")
								dbGobottom()
								dbSkip()
								dbSelectArea("SE2")			// permite contabilizar os impostos pelo SE2
								dbGoto(nRecSe2)
								If lUsaFlag
									aAdd(aFlagCTB,{"E2_LA","S","SE2",SE2->(Recno()),0,0,0})
								EndIf
								If !lCabecalho
									a370Cabecalho(@nHdlPrv,@cArquivo)
								EndIf
								nTotDoc	+=	DetProva(nHdlPrv,"508","FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
								SEV->(dbGoto(nRecSev))
								SEZ->(dbGoto(nRecSez))
								dbSelectArea("SE2")
								DbGoto(nRecSe2)
								If mv_par12 == 2 
									If nTotDoc > 0 // Por documento
										If lF370NatP
											ExecBlock("F370NATP",.F.,.F.,{nHdlPrv,cLote})
										EndIf
										Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
										nTotDoc := 0
									EndIf
									aFlagCTB := {}
								EndIf
								
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Atualiza Flag de Lan‡amento Cont bil 	   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If LanceiCtb
									If !lUsaFlag
										Reclock("SE2")
										Replace E2_LA With "S"
										SE2->(MsUnlock())
									EndIf
								ElseIf lUsaFlag
									If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SE2->(Recno()) }))>0
										aFlagCTB := Adel(aFlagCTB,nPosReg)
										aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
									EndIf
								EndIf
							EndIf
						EndIf
					EndIf
					// Fim da contabilizacao de titulos de impostos por multiplas natureza
					// e multiplos centros de custos
						dbSelectArea( "TRBSE2" )

					If lMulNatSE2
						dbSkip()
						Loop
					EndIf
				EndIf
				
				dbSelectArea("TRBSE2")
				
				nRegAnt := Recno()
				dbSkip()
				nProxReg := Recno()
				DbGoto(nRegAnt)
				
				cPadrao := "510"
				
				If	SE2->E2_TIPO $ MVPAGANT
					cPadrao:="513"
				EndIf
				
				If	SE2->E2_RATEIO == "S"
					cPadrao := "511"
				EndIf
				
				If	SE2->E2_DESDOBR == "S"
					cPadrao := "577"
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona no fornecedor.									  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea( "SA2" )
				dbSeek( xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA )
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona na natureza.										  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea( "SED" )
				dbSeek( xFilial("SED")+SE2->E2_NATUREZ )
				dbSelectArea("SE2")
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona na SE5 e no Banco,se PA e SEF para Cheque ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SE2->E2_TIPO $ MVPAGANT
					
					dbSelectArea("SE5")
						dbSetOrder(2)
						dbSeek( xFilial()+"PA"+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO+DtoS(SE2->E2_EMISSAO)+SE2->E2_FORNECE+SE2->E2_LOJA)
						dbSetOrder(1)

					dbSelectArea("SEF")
					dbSetOrder(3)
					dbSeek(xFilial()+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO+SE2->E2_NUMBCO)
					
					dbSelectArea( "SA6" )
					dbSetOrder(1)
					If SE5->(Found())
						dbSeek( xFilial()+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA)
					Else
						If ! dbSeek( xFilial()+SEF->EF_BANCO+SEF->EF_AGENCIA+SEF->EF_CONTA)
							__SE5->( dbSetOrder( 2 ) )
							__SE5->( MsSeek( xFilial("SE5")+"PA"+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO+DtoS(SE2->E2_EMISSAO)+SE2->E2_FORNECE+SE2->E2_LOJA) )
							dbSeek( xFilial("SA6")+__SE5->E5_BANCO+__SE5->E5_AGENCIA+__SE5->E5_CONTA)
							__SE5->( dbSetOrder( 1 ) )
						EndIf
					EndIf
					dbSelectArea( "SE2" )
				EndIf
				lPadrao		:= VerPadrao(cPadrao)
				lPadraoCC 	:= VerPadrao("508")  // Rateio C.Custo de MultiNat Pagar
				
				If lPadrao
				
					If SE2->E2_RATEIO != "S"
				
						If !lCabecalho
							a370Cabecalho(@nHdlPrv,@cArquivo)
						EndIf
						
						cChaveSev := RetChaveSev("SE2")
						cChaveSeZ := RetChaveSev("SE2",,"SEZ")
						DbSelectArea("SEV")
						
						// Se utiliza multiplas naturezas, contabiliza pelo SEV
						If SE2->E2_MULTNAT=="1" .And. MsSeek(cChaveSev)
						
							dbSelectArea("SE2")
							nRecSe2 := Recno()
							DbSelectArea("SEV")
							dbSetOrder(2)
							While xFilial("SEV")+SEV->(EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+;
								EV_LOJA+EV_IDENT) == cChaveSev+"1" .And. !Eof()
								If SEV->EV_LA != "S"

									dbSelectArea( "SED" )
									MsSeek( xFilial("SED")+SEV->EV_NATUREZ ) // Posiciona na natureza, pois a conta pode estar la.
									dbSelectArea("SEV")
									If SEV->EV_RATEICC == "1" .and. lPadrao .and. lPadraoCC // Rateou multinat por c.custo

										dbSelectArea("SEZ")
										dbSetOrder(4)
										MsSeek(cChaveSeZ+SEV->EV_NATUREZ) // Posiciona no arquivo de Rateio C.Custo da MultiNat
										While !Eof() .and. xFilial("SEZ")+SEZ->(EZ_PREFIXO+EZ_NUM+;
												EZ_PARCELA+EZ_TIPO+EZ_CLIFOR+EZ_LOJA+EZ_NATUREZ+EZ_IDENT) == cChaveSeZ+SEV->EV_NATUREZ+"1"

											If SEZ->EZ_LA != "S"
												If lUsaFlag
													aAdd(aFlagCTB,{"EZ_LA","S","SEZ",SEZ->(Recno()),0,0,0})
												EndIf
	
												VALOR2	:= 0
												VALOR3	:= 0
												VALOR4	:= 0
												VALOR  	:= 0
												Do Case
													Case SEZ->EZ_TIPO $ MVTAXA
														VALOR2 := SEZ->EZ_VALOR
													Case SEZ->EZ_TIPO $ MVISS
														VALOR3 := SEZ->EZ_VALOR
													Case SEZ->EZ_TIPO $ MVINSS
														VALOR4 := SEZ->EZ_VALOR
													Otherwise
														VALOR  := SEZ->EZ_VALOR
												EndCase
												nTotDoc	+=	DetProva(nHdlPrv,"508","FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
												If LanceiCtb // Vem do DetProva
													If !lUsaFlag
														RecLock("SEZ")
														SEZ->EZ_LA    := "S"
														MsUnlock( )
													EndIf    
												ElseIf lUsaFlag
													If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SEZ->(Recno()) }))>0
														aFlagCTB := Adel(aFlagCTB,nPosReg)
														aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
													EndIf													
												EndIf
											EndIf

											dbSkip()
										Enddo
										DbSelectArea("SEV")
									Else
										VALOR := 0
										VALOR2 := 0
										VALOR3 := 0
										VALOR4 := 0
										Do Case
											Case SEV->EV_TIPO $ MVTAXA
												VALOR2 := SEV->EV_VALOR
											Case SEV->EV_TIPO $ MVISS
												VALOR3 := SEV->EV_VALOR
											Case SEV->EV_TIPO $ MVINSS
												VALOR4 := SEV->EV_VALOR
										EndCase
										If lUsaFlag
											aAdd(aFlagCTB,{"EV_LA","S","SEV",SEV->(Recno()),0,0,0})
										EndIf
										nTotDoc	+= DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
									EndIf
									If LanceiCtb // Vem do DetProva
										If !lUsaFlag
											RecLock("SEV")
											SEV->EV_LA    := "S"
											MsUnlock( )
											LanceiCtb := .F.
										EndIf    
									ElseIf lUsaFlag
										If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SEV->(Recno()) }))>0
											aFlagCTB := Adel(aFlagCTB,nPosReg)
											aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
										EndIf										
									EndIf
								EndIf
								dbSelectArea("SEV")
								DbSkip()
							Enddo
							nTotal  	+=	nTotDoc
							nTotProc	+=	nTotDoc // Totaliza por processo
							dbSelectArea("SE2")
							DbGoto(nRecSe2)
							//Se contabiliza por processo, contabilizo o titulo do SE2 referente as multiplas naturezas.
							If mv_par12 == 3
						   		SEV->( DbGoBottom() )
								SEV->( DbSkip() )
								If lUsaFlag
									aAdd(aFlagCTB,{"E2_LA","S","SE2",SE2->(Recno()),0,0,0})
								EndIf
								nTotDoc	+= DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)							
								If LanceiCtb // Vem do DetProva
									If !lUsaFlag
										RecLock("SE2")
										Replace E2_LA With "S"
										MsUnlock( )
									EndIf  
								ElseIf lUsaFlag
									If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SE2->(Recno()) }))>0
										aFlagCTB := Adel(aFlagCTB,nPosReg)
										aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
									EndIf										
								EndIf
							EndIf
							If mv_par12 == 3 
								If nTotProc > 0 // Por processo
									If lF370NatP
										ExecBlock("F370NATP",.F.,.F.,{nHdlPrv,cLote})
									EndIf
									Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotProc,@aFlagCTB)
									nTotProc := 0
								EndIf
								aFlagCTB := {}
							EndIf
						EndIf
						dbSelectArea("SEV")
						DbGoBottom()
						DbSkip()
						dbSelectArea( "SE2" )
						
						If ! SE2->E2_LA == "S"
							If !lCabecalho
								a370Cabecalho(@nHdlPrv,@cArquivo)
							EndIf
							
							If lUsaFlag
								aAdd(aFlagCTB,{"E2_LA","S","SE2",SE2->(Recno()),0,0,0})
							EndIf
							
							nTotDoc	+= DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
							nTotProc+= nTotDoc
							nTotal	+= nTotDoc
							If mv_par12 == 2 
								If nTotDoc > 0 // Por documento
									If lSeqCorr
										aDiario := {{"SE2",SE2->(recno()),SE2->E2_DIACTB,"E2_NODIA","E2_DIACTB"}}
									EndIf
									Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB,@aDiario)
									nTotDoc := 0
								EndIf
								aFlagCTB := {}
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Atualiza Flag de Lan‡amento Cont bil 		  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If LanceiCtb
								If !lUsaFlag
									Reclock("SE2")
									Replace E2_LA With "S"
									SE2->(MsUnlock())
								EndIf  
							ElseIf lUsaFlag
								If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SE2->(Recno()) }))>0
									aFlagCTB := Adel(aFlagCTB,nPosReg)
									aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
								EndIf								
							EndIf
						EndIf
					Else
						If !CtbInUse()
							/// Fa370Rat já cria cabecalho contab. caso não esteja aberto
							If lUsaFlag
								aAdd(aFlagCTB,{"E2_LA","S","SE2",SE2->(Recno()),0,0,0})
							EndIf
							nTotDoc	:=	Fa370Rat(AllTrim(SE2->E2_ARQRAT),@nHdlPrv,@cArquivo)
							nTotProc	+= nTotDoc
							nTotal	+=	nTotDoc
							If mv_par12 == 2 
								If nTotDoc > 0 // Por documento
									Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
								EndIf
								aFlagCTB := {}
							EndIf
							
							If nTotal != 0
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Atualiza Flag de Lan‡amento Cont bil		  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								dbSelectArea("SE2")
								If !lUsaFlag
									Reclock("SE2")
									Replace E2_LA With "S"
									SE2->(MsUnlock())
								EndIf
							EndIf
						Else
							// Devido a estrutura do programa, o rateio ja eh "quebrado"
							// por documento.
							If !lCabecalho							/// Se não houver cabeçalho aberto, abre.
								a370Cabecalho(@nHdlPrv,@cArquivo)
							EndIf
							RegToMemory("SE2",.F.,.F.)
							If lUsaFlag
								aAdd(aFlagCTB,{"E2_LA","S","SE2",SE2->(Recno()),0,0,0})
							EndIf
							F370RatFin(cPadrao,"FINA370",cLote,4," ",4,,,,@nHdlPrv,@nTotDoc,@aFlagCTB)
							lCabecalho := If(nHdlPrv <= 0, lCabecalho, .T.)
							nTotProc	+= nTotDoc
							nTotal	+=	nTotDoc
							If mv_par12 == 2 
								If nTotDoc > 0 // Por documento
									If lSeqCorr
										aDiario := {{"SE2",SE2->(recno()),SE2->E2_DIACTB,"E2_NODIA","E2_DIACTB"}}
									EndIf
									Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB,@aDiario)
								EndIf
								aFlagCTB := {}
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Atualiza Flag de Lan‡amento Cont bil		  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If LanceiCtb
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Atualiza Flag de Lan‡amento Cont bil		  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								dbSelectArea("SE2")
								If !lUsaFlag
									Reclock("SE2")
									Replace E2_LA With "S"
									SE2->(MsUnlock())
								EndIf  
							ElseIf lUsaFlag
								If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SE2->(Recno()) }))>0
									aFlagCTB := Adel(aFlagCTB,nPosReg)
									aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
								EndIf								
							EndIf
						EndIf
					EndIf
				EndIf

					dbSelectArea("TRBSE2")

				dbGoto(nProxReg)
				LanceiCtb := .F.
			Enddo
			If mv_par12 == 3
				If nTotProc > 0 // Por processo
					Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
					nTotProc := 0
				EndIf
				aFlagCTB := {}
			EndIf
			
				dbSelectArea( "TRBSE2" )
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Movimenta‡„o Banc ria a Pagar - SE5990							  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea( "SE5" )
			SE5->(dbSetOrder(nIndex+1))
			
			If lSE5CPOK
				If lSE5MCFIL	//	Usa Filial de Origem?
					SE5->(dbSeek( cFilAnt+"P"+Dtos(mv_par04),.F. ))
				Else
					SE5->(dbSeek( xFilial('SE5')+"P"+Dtos(mv_par04),.F. ))
				EndIf
			Else
				SE5->(dbGoTop())
				lSE5CPOK := .T.
			EndIf

			If l370E5CON
				cFor:= Execblock("F370E5CT",.F.,.F.)
			Else
				cTpData := If(mv_par07 == 3, "SE5->E5_DTDISPO", "SE5->E5_DATA")
				cFor := " (" + cTpData + " >= mv_par04 .And. " + cTpData + " <= mv_par05 )"
				cFor += " .AND. ( EMPTY(SE5->E5_MOTBX) .OR. SE5->E5_TIPODOC $ 'DB|PA')" // Atende Movimento Bancario gerado por baixas via CNAB ou Movimento Bancario de PAGANT.
			EndIf

			If lSE5MCFIL	//	Usa Filial de Origem?
				cCondWhile := "'" + cFilAnt + "' == SE5->E5_FILORIG" 
			Else
				cCondWhile := "'" + xFilial("SE5") + "' == SE5->E5_FILIAL " 
			EndIf

			If mv_par14 == 1 .and. lPosE5MsFil
				cCondWhile += " .and. SE5->E5_MSFIL == '" + cFilAnt + "'"
			EndIf

			While SE5->(!Eof()) .And. &cCondWhile
			
				If !(&cFor) .OR. (aScan(aRecsSE5,{|x| x[1]==(SE5->(Recno())) }) > 0)
					SE5->(dbSkip())
					Loop
				EndIf
				
				If Iif(SE5->E5_SITUACA $ "X|E" .And. SE5->E5_RECPAG $ "R|P", .F.,; //cancel de mov. banc
					(SE5->E5_RECPAG == "R" .And. !SE5->E5_TIPODOC $ 'TR|TE'))				
					SE5->(dbSkip())
					Loop
				EndIf
				
				// Contabiliza movimentacao bancaria de adiantamento - MV_CTMOVPA
				If !lCtMovPa .And. SE5->E5_RECPAG == "P" .And. SE5->E5_TIPO	== MVPAGANT
					SE5->(dbSkip())      
					Loop
				EndIf
				
				// Nao contabiliza movimento bancario totalizador da baixa CNAB ou automatica
				// Este sera feito pela Baixa do titulo (LP530 ou LP532)
				If Empty(SE5->E5_TIPODOC) .and. !Empty(SE5->E5_LOTE)
					SE5->(dbSkip())
					Loop
				EndIf
				
				cPadrao := ""
				
				If (SE5->E5_RECPAG $ "R|P") .and. (SE5->E5_TIPODOC $ "TR#TE")
					SE5->(dbSkip())
					Loop
				EndIf
				
				If !SE5->E5_TIPODOC $ "TR#TE" .And. SE5->E5_SITUACA <> "E"
					cPadrao := "562"
				ElseIf !SE5->E5_TIPODOC $ "TR#TE"
					cPadrao := "565"
				EndIf
				//cPadrao do ITF - Peru
				//se for ITF utiliza lancamento especIfico
				If cPaisLoc <> "BRA"
					If lFindITF .And. FinProcITF( SE5->( Recno() ),2 )
						If SE5->E5_SITUACA == 'E' .Or. SE5->E5_SITUACA == 'C'
							cPadrao := "56B"
						Else
							cPadrao := "56A"
						EndIf
					EndIf
				EndIf
				lX := .f.
				
				// Aplicações e Empréstimos
				// Inclusão de Aplicações Financeiras, Estorno de empréstimos, Inclusão de Pagamentos e Estorno Resgate de Aplicações 
				If SE5->E5_RECPAG == "P" .AND. SE5->E5_TIPODOC $ "AP/RF/PE/EP" 
					// Identifica e Valida o Lançamento Padrão a ser Utilizado neste processo
					If AplEmpVerPadrao(@cPadrao)
						CtbAPLEMP("P", cPadrao, aFlagCTB, lUsaFlag, @nTotDoc, @nHdlPrv, @cArquivo, aCT5)
						nTotProc += nTotDoc
						nTotal   += nTotDoc
					EndIf
					SE5->(dbSkip())
					Loop
					dbSelectArea("SE5")
				EndIf

				If !lX
					If !Empty(SE5->E5_TIPODOC) .Or.;
						(Empty(SE5->E5_NATUREZ) .AND. cPadrao!="562")	// Para nao contabilizar totalizar do bordero quando o lançamento não for o 562
						// como movimentacao bancaria a pagar.
						If !(SE5->E5_TIPODOC $ "DB/OD/TR/TE/PA")
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Caracteriza-se lancamento os registros com :		  ³
							//³ E5_TIPODOC = brancos                         		  ³
							//³ E5_TIPODOC = "DB" // Desp Bancaria gerada no FINA200³
							//³ E5_TIPODOC = "OD" // Outras Despesas gerada FINA200 ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							SE5->( dbSkip())
							Loop
						EndIf
					EndIf
				EndIf
				
				If SE5->E5_RATEIO == "S" .And. CtbInUse()
					cPadrao := If(SE5->E5_RECPAG == "P" .And. (aScan(aRecsSE5,{|x| x[1]==(SE5->(Recno())) }) == 0), "516", cPadrao)
					
					If SE5->E5_RECPAG =="P" .AND. (SE5->E5_SITUACA == "E" .or. SE5->E5_SITUACA == "C")
					    cPadrao := "557"
					EndIf					    
				EndIf
				
				If SE5->E5_TIPO $ MVPAGANT
					SE2->( DbSetOrder(1) )
					SE2->( DbSeek( xFilial("SE2",SE5->E5_FILORIG) + SE5->( E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA ) ) )
					cPadrao := "513"
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona na natureza.										  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea( "SED" )
				dbSeek( cFilial+SE5->E5_NATUREZ )
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona no banco.											  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea( "SA6" )
				dbSetOrder(1)
				dbSeek( cFilial+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA )
				
				If l370E5P
					Execblock("F370E5P",.F.,.F.)
				EndIf
				
				lPadrao:=VerPadrao(cPadrao)
				If lPadrao
					If SE5->E5_RATEIO != "S"
						If nHdlPrv <= 0
							a370Cabecalho(@nHdlPrv,@cArquivo)
						EndIf
						If lUsaFlag
							aAdd(aFlagCTB,{"E5_LA","S","SE5",SE5->(Recno()),0,0,0})
						EndIf
						nTotDoc	:=	DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
						nTotProc	+= nTotDoc
						nTotal	+=	nTotDoc
						
						If mv_par12 == 2 
							If nTotDoc > 0 // Por documento
								If lSeqCorr
									aDiario := {{"SE5",SE5->(recno()),SE5->E5_DIACTB,"E5_NODIA","E5_DIACTB"}}
								EndIf
								Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB,@aDiario)
							EndIf
							aFlagCTB := {}
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Atualiza Flag de Lan‡amento Cont bil		  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If LanceiCtb
							If cPadrao $ "562;565;580;585;586;513"
								aAdd(aRecsSE5, { SE5->(RECNO()), 'FINM030', 'FK5'} ) //Mov. Bancario						
							Else
								aAdd(aRecsSE5, { SE5->(RECNO()), 'FINM020', 'FK2'} ) //Baixas a Pagar
							Endif
						EndIf
					Else			// Rateio 516 -> somente sigactb!
						If CtbInUse()
							// Devido a estrutura do programa, o rateio ja eh "quebrado"
							// por documento.
							If nHdlPrv <= 0
								a370Cabecalho(@nHdlPrv,@cArquivo)
							EndIf
							RegToMemory("SE5",.F.,.F.)
							If lUsaFlag
								aAdd(aFlagCTB,{"E5_LA","S","SE5",SE5->(Recno()),0,0,0})
							EndIf
														
							F370RatFin(cPadrao,"FINA370",cLote,4," ",4,,,,@nHdlPrv,@nTotDoc,@aFlagCTB)
							lCabecalho := If(nHdlPrv <= 0, lCabecalho, .T.)
							nTotProc	+= nTotDoc
							nTotal	+=	nTotDoc
							If mv_par12 == 2 
								If nTotDoc > 0 // Por documento
									If lSeqCorr
										aDiario := {{"SE5",SE5->(recno()),SE5->E5_DIACTB,"E5_NODIA","E5_DIACTB"}}
									EndIf
									Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB,@aDiario)
								EndIf
								aFlagCTB := {}
							EndIf
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Atualiza Flag de Lan‡amento Cont bil		  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If LanceiCtb
								If EMPTY(SE5->(E5_TIPODOC+E5_MOTBX))
									aAdd(aRecsSE5, {SE5->(RECNO()), 'FINM030', 'FK5'} ) //Movimento Bancário.
								Else
									aAdd(aRecsSE5, {SE5->(RECNO()), 'FINM020', 'FK2'} ) //Baixas a Pagar
								EndIf
							EndIf
						EndIf
					EndIf
				End
				dbSelectArea("SE5")
				dbSkip()
			End

			// Aplicações e Empréstimos - Contabiliza as Apropriações - Não gera movimentação Bancária
			If VerPadrao("582")
				CtbAPLEMP("R", "582", aFlagCTB, lUsaFlag, @nTotAplEmp, @nHdlPrv, @cArquivo, aCT5)
				If !EMPTY(nTotAplEmp)
					nTotDoc  += nTotAplEmp
					nTotProc += nTotDoc
					nTotal   += nTotDoc
					nTotAplEmp := 0
				EndIf
			EndIf
			
			If mv_par12 == 3 
				If nTotProc > 0 // Por processo
					Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
					nTotProc := 0
				EndIf
				aflagCTB := {}
			EndIf
		End

		If (mv_par06 == 1 .or. mv_par06 == 4)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Baixas a Receber 										     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea( "SE5" )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Variaveis para suporte a Recebimentos Diversos³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cSELSerie	:= ""
				cSELRecibo	:= ""

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica qual a data a ser utilizada para baixa				 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cCampo:=IIF(mv_par07 == 1,"SE5->E5_DATA",Iif(mv_par07 == 2,"SE5->E5_DTDIGIT","SE5->E5_DTDISPO"))

			If lSE5MCFIL	//	Usa Filial de Origem?
				cFor := ' SE5->E5_FILORIG == "' + cFilAnt + '"' 
			ElseIf MV_PAR14 == 1 .and. lPosE5MsFil
				cFor := ' SE5->E5_MSFIL == "' + cFilAnt + '"'
			Else
				cFor := ' SE5->E5_FILIAL == "' + xFilial("SE5") + '"'
			EndIf

			SE5->(dbSetOrder(nIndex+1))
			If lUsaFilOrig
				dbSeek( cFilAnt +"R"+dtos(mv_par04),.t.)
			Else
			dbSeek( cFilial+"R"+dtos(mv_par04),.t.)
			Endif


			While ! SE5->(Eof()) .and. SE5->E5_RECPAG == "R" .and. &cCampo <= mv_par05

				If !(&cFor) .OR. (aScan(aRecsSE5,{|x| x[1]==(SE5->(Recno())) }) > 0)
					SE5->(dbSkip())
					Loop
				EndIf

				// contabilização de Correção monetária pode ser feita via campo E5_VLCORRE
				If SE5->E5_TIPODOC == "CM"
					aAdd(aRecsSE5, {SE5->(RECNO()), '', ''} ) //Valores Acessorios
					SE5->(DbSkip())
					Loop
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ A Data da Contabilizacao de Baixa sera efetuada com base na  ³
				//³ escolha do parametro mv_par07. A variavel dDataBaseAux       ³
				//³ serve para restaurar o valor da variavel dDataBase           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dDatabase := &cCampo

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Contabilizacao de Recebimentos Diversos - Tabela SEL³
				//³Executada atraves das movimentacoes no SE5          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If	!Empty( SE5->(E5_ORDREC + E5_SERREC) ) .And. cPaisLoc == "BRA"
						
						If	( SE5->E5_SERREC + SE5->E5_ORDREC ) <> ( cSELSerie + cSELRecibo )

							cSELSerie	:= SE5->E5_SERREC
							cSELRecibo	:= SE5->E5_ORDREC
						
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Controle de contabilizacao.              ³
							//³Percorre e contabiliza todos os registros³
							//³de um recibo.                            ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								F370CTBSEL(	cSELSerie,;
												cSELRecibo,;
												@nTotDoc,;
												cLote,;
												@nHdlPrv,;
												@cArquivo,;
												lUsaFlag,;
												@aFlagCTB,;
												@aCT5;
								)
		

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Separa por ?                                      ³
							//³Acumuladores para a geracao do Documento Contabil.³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If mv_par12 == 1 .and. nTotDoc > 0		// Por Periodo
									nTotal += nTotDoc
								ElseIf mv_par12 == 2 
									If nTotDoc > 0	// Por Documento
										If lSeqCorr
											aDiario := {{"SE5",SE5->(recno()),SE5->E5_DIACTB,"E5_NODIA","E5_DIACTB"}}
										EndIf
										Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB,@aDiario)
										nTotDoc := 0 // Inicializa Variavel
									EndIf
									aFlagCTB := {}
								ElseIf mv_par12 == 3					// Por Processo
									nTotProc += nTotDoc
								EndIf
						EndIf
					    
					   	If AllTrim(SE5->E5_LA) == "S"
							SE5->( DBSkip() ) // Nestes casos a movimentacao nao eh contabilizada pelo SE5
							Loop
						EndIf	
					EndIf				
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Nao serao contabilizadas Mov. Fin. Manuais e Transf.Bancaria neste ponto  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				// Nem aplicacoes, emprestimos, estornos de aplicacoes e estornos de emprestimos
				If Empty(SE5->E5_TIPODOC) .OR. SE5->E5_TIPODOC $ "TR/TE/DB/OD/AP/RF/PE/EP" .Or. SubStr(SE5->E5_LA,1,1) == "S"
					SE5->(dbSkip())
					Loop
				EndIf
				
				lAdiant 	:= .f.
				lEstorno 	:= .F.
				lEstRaNcc 	:= .F.
				lCompens 	:= .F.  
				lEstCompens := .F.

				If SE5->E5_TIPODOC == "ES"
					lEstorno := .T.
				EndIf
				If SE5->E5_TIPODOC == "ES" .and. SE5->E5_TIPO $ MVRECANT+"/"+MV_CRNEG
					lEstRaNcc := .T.
				EndIf

				If SE5->E5_TIPO $ MVPAGANT+"/"+MV_CPNEG
					lAdiant := .T.
				EndIf
				
				If  SE5->E5_TIPODOC == "BA" .and. SE5->E5_MOTBX == "CMP"
					lCompens := .T.
				EndIf
				
				If SE5->E5_TIPODOC == "ES" .and. SE5->E5_MOTBX == "CMP"
					lEstCompens := .T.
				EndIf

				// Despreza inclusao de RA que sera contabilizado pelo SE1
				If SE5->E5_TIPODOC == "RA" .and. SE5->E5_TIPO $ MVRECANT
					aAdd(aRecsSE5, {SE5->(RECNO()), 'FINM010' ,'FK1'} )
					SE5->(dbSkip())
					Loop
				EndIf

				// Despreza baixas do titulo principal, para nao duplicar.
				If SE5->E5_TIPODOC == "CP" .and. SE5->E5_MOTBX == "CMP"
					If !lUsaFilOrig
					aAdd(aRecsSE5, {SE5->(RECNO()), 'FINM010', 'FK1'} ) //Baixas a Receber.
					SE5->(dbSkip())
					Loop
					Else
						lCompens := .T.
					Endif
				EndIf
				
				// Despreza estorno de compensacao do titulo principal, para nao duplicar.
				If !lUsaFilOrig				
				If SE5->E5_TIPODOC == "ES" .and. SE5->E5_MOTBX == "CMP" .and. !(SE5->E5_TIPO $ MVPAGANT+"/"+MV_CPNEG)
					aAdd(aRecsSE5, {SE5->(RECNO()), 'FINM020', 'FK2'} ) //Baixas a Pagar.
					SE5->(dbSkip())
					Loop
				EndIf
				EndIf

				If (lAdiant .or. lEstorno) .and. !lEstRaNcc
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Ponto de entrada que permite a informacao manual da Filial ³
					//³ para pesquisa na SE2 na contabilizacao off-line            ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
					cFilialPesq := xFilial("SE2")
					If lF370INFI
						cFilialPesq := ExecBlock("F370INFI",.F.,.F.,{cFilialPesq})	               
					EndIf										
					
					dbSelectArea("SE2")
					dbSetOrder(1)
					
					If lAdiant
						cFilorig := xFilial("SE2")
					Else
						cFilorig := xFilial("SE5")
					EndIf               
										
					If !(MsSeek(cFilorig+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO+SE5->E5_CLIFOR+SE5->E5_LOJA))
						If SE5->E5_MOTBX == "CMP" .and. !(MsSeek(SE5->E5_FILORIG+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO+SE5->E5_CLIFOR+SE5->E5_LOJA))
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Localizada inconsistˆncia no arquivo SE5. A fun‡„o fa370conc	 ³
							//³ pergunta se o usu rio quer continuar ou abandonar.				 ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If !FA370CONC()
								Break
							EndIf
							dbSelectArea("SE5")
							SE5->(dbSkip())
							Loop
						EndIf
					EndIf
				Else
					dbSelectArea( "SE1" )
					dbSetOrder( 2 )

					cFilorig := xFilial("SE1")

					If !(MsSeek(cFilOrig+SE5->E5_CLIFOR+SE5->E5_LOJA+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO ))
						If !Empty(SE5->E5_FILORIG)
							cFilOrig := SE5->E5_FILORIG
						EndIf   
						
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Caso não encontre o título pelo campo E5_FILORIG, busca pelo campo E5_MSFIL (sigaloja)³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If  !(MsSeek( cFilOrig +SE5->E5_CLIFOR+SE5->E5_LOJA+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO )) 
							If mv_par14 == 1 .and. Substr(SE5->E5_HISTOR,1,4) = "LOJ-" .And. lPosE5MsFil
								cFilOrig := SE5->E5_MSFIL
							EndIf
						EndIf 
						
					EndIf  

					If !(MsSeek( cFilOrig +SE5->E5_CLIFOR+SE5->E5_LOJA+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO ))
						//Se for o totalizador da baixa automatica, nao pode ser gerado mensagem
						If lBxCnab .and. AllTrim(SE5->E5_ORIGEM) $ "FINA090|FINA091|FINA300|FINA430|FINA740|FINA750" .AND. SE5->E5_TIPODOC == "VL" .AND. !Empty(SE5->E5_LOTE) .AND. Empty(SE5->E5_TIPO + SE5->E5_DOCUMEN + SE5->E5_NUMERO + SE5->E5_PARCELA + SE5->E5_CLIFOR + SE5->E5_LOJA)
							dbSelectArea("SE5")
							SE5->(dbSkip())
							Loop
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Localizada inconsistˆncia no arquivo SE5. A fun‡„o fa370conc	 ³
						//³ pergunta se o usu rio quer continuar ou abandonar.				 ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If !FA370CONC()
							Break
						EndIf
						dbSelectArea("SE5")
						SE5->(dbSkip())
						Loop
					Else
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Carrega variavies para contabilizacao dos    ³
						//³ abatimentos (impostos da lei 10925).         ³			
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					 	dbSelectArea("__SE1")
				 		dbSetOrder( 1 )
						__SE1->(MsSeek(cFilOrig +SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA)))
						While __SE1->(!EOF()) .And.;
						      __SE1->(E1_FILIAL + E1_PREFIXO + E1_NUM + E1_PARCELA) ==;
						      (cFilOrig + SE5->(E5_PREFIXO + E5_NUMERO + E5_PARCELA))
							If __SE1->E1_TIPO == MVPIABT
								VALOR5 := __SE1->E1_VALOR			
							ElseIf __SE1->E1_TIPO == MVCFABT
								VALOR6 := __SE1->E1_VALOR
							ElseIf __SE1->E1_TIPO == MVCSABT
								VALOR7 := __SE1->E1_VALOR						
							EndIf			
							__SE1->(dbSkip())
						Enddo
					EndIf
				EndIf
				
				nPis	:= 0
				nCofins	:= 0
				nCsll	:= 0
				nVretPis:= 0
				nVretCof:= 0
				nVretCsl:= 0

				If (lAdiant .or. lEstorno) .and. !lEstRaNcc
					nValLiq	:= SE2->E2_VALLIQ
					nDescont:= SE2->E2_DESCONT
					nJuros	:= SE2->E2_JUROS
					nMulta	:= SE2->E2_MULTA
					nCorrec	:= SE2->E2_CORREC
					If lPccBaixa
						nPis	 := SE2->E2_PIS
						nCofins	 := SE2->E2_COFINS
						nCsll	 := SE2->E2_CSLL
						nVretPis := SE2->E2_VRETPIS
						nVretCof := SE2->E2_VRETCOF
						nVretCsl := SE2->E2_VRETCSL
					EndIf
				Else
					nValLiq	:= SE1->E1_VALLIQ
					nDescont:= SE1->E1_DESCONT
					nJuros	:= SE1->E1_JUROS
					nMulta	:= SE1->E1_MULTA
					nCorrec	:= SE1->E1_CORREC
					cSitOri := SE1->E1_SITUACA
				EndIf
				
				dbSelectArea( "SE5" )
				nVl:=nDc:=nJr:=nMt:=nCm:=0
				lTitulo := .F.
				cSeq	:= SE5->E5_SEQ
				cBanco  := " "
				nRegSE5 := 0
				nRegOrigSE5 := 0
				
				If (lAdiant .or. lEstorno) .and. !lEstRaNcc
					cChaveSe5 := "xFilial()==SE5->E5_FILIAL.And.SE2->E2_PREFIXO==SE5->E5_PREFIXO.And.SE2->E2_NUM==SE5->E5_NUMERO.And.SE2->E2_PARCELA==SE5->E5_PARCELA.And.SE2->E2_TIPO==SE5->E5_TIPO.And.cSeq==SE5->E5_SEQ .And. SE5->E5_CLIFOR+SE5->E5_LOJA == SE2->E2_FORNECE+SE2->E2_LOJA"
					lSE2SE1EOF := SE2->(EOF())
				Else
					cChaveSe5 := "xFilial()==SE5->E5_FILIAL.And.SE1->E1_PREFIXO==SE5->E5_PREFIXO.And.SE1->E1_NUM==SE5->E5_NUMERO.And.SE1->E1_PARCELA==SE5->E5_PARCELA.And.SE1->E1_TIPO==SE5->E5_TIPO.And.cSeq==SE5->E5_SEQ .And.SE5->E5_CLIFOR+SE5->E5_LOJA==SE1->E1_CLIENTE+SE1->E1_LOJA"
					lSE2SE1EOF := SE1->(EOF())
				EndIf
				lAchouSE5:=.F.
				While SE5->(!Eof()) .and. !lSE2SE1EOF .And. &cChaveSE5 
					lAchouSE5 := .T.
					If !(SE5->E5_RECPAG == "R" .and. &cCampo <= mv_par05)
						Exit
					EndIf
					
					If &cCampo > mv_par05
						Exit
					EndIf

					nPisBx := 0
					nCofBx := 0
					nCslBx := 0
				
					dbSelectArea("SE5")
					
					If  SE5->E5_TIPODOC $ "BA|VL|V2|ES|LJ"
						nVl	  := E5_VALOR
						cBanco  := SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA
						nRegSE5 := SE5->(Recno())
						cSitCob := " "
						If !Empty(SE5->E5_SITCOB)
							cSitCob := SE5->E5_SITCOB
						EndIf
						lMultnat := SE5->E5_MULTNAT == "1"
						cSeqSE5	:= SE5->E5_SEQ
						If lPccBaixa
							IF Empty(SE5->E5_PRETPIS)
								nPisBx := SE5->E5_VRETPIS
								nCofBx := SE5->E5_VRETCOF
								nCslBx := SE5->E5_VRETCSL
							EndIf
						EndIf
					ElseIf SE5->E5_TIPODOC $ "DC|D2"
						nDc	  := E5_VALOR
						If nRegSE5 == 0; nRegSE5 := SE5->(Recno()); EndIf
					ElseIf SE5->E5_TIPODOC $ "JR|J2|TL"
						nJr	  := E5_VALOR
						If nRegSE5 == 0; nRegSE5 := SE5->(Recno()); EndIf
					ElseIf SE5->E5_TIPODOC $ "MT|M2"
						nMt := E5_VALOR
						If nRegSE5 == 0; nRegSE5 := SE5->(Recno()); EndIf
					ElseIf SE5->E5_TIPODOC $ "CM|C2"
						nCm := E5_VALOR
						If nRegSE5 == 0; nRegSE5 := SE5->(Recno()); EndIf
					ElseIf SE5->E5_TIPODOC $ "CP"
						nVl	  	:= E5_VALOR
						cSeqSE5	:= SE5->E5_SEQ
						nRegSE5 := SE5->(Recno())
					EndIf
					
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza Flag de Lan‡amento Cont bil		  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					lTitulo := .T.
					nRegAnt := SE5->(RecNo())
					/// proteção existente por falha do DB2 AS400 não executar corretamente o dbSkip()
					If (aScan(aRecsSE5,{|x| x[1]==nRegAnt}) == 0) 
						If SE5->E5_TIPODOC $ "BA|VL|V2|ES|LJ|CP"
							If Alltrim(SE5->E5_TIPODOC) == "ES" .And. !Empty(SE5->E5_NUMCHEQ)
								AAdd( aRecsSE5, {SE5->(Recno()),'FINM030','FK5'} ) //  estorno de cheque
							Else 
								If SE5->E5_TABORI == "FK1" .OR. (SE5->E5_RECPAG == "R" .and. SE5->E5_TIPODOC <> "ES" .and. !SE5->E5_TIPO $ MVPAGANT+"/"+MV_CPNEG) .Or. (SE5->E5_RECPAG == "P" .and. SE5->E5_TIPODOC == "ES" .and. !SE5->E5_TIPO $ MVPAGANT+"/"+MV_CPNEG);
									.OR. (SE5->E5_RECPAG == "P" .and. SE5->E5_TIPODOC <> "ES" .and. SE5->E5_TIPO $ MVRECANT+"/"+MV_CRNEG)  

									AAdd( aRecsSE5, {SE5->(Recno()),'FINM010','FK1'} ) //baixa a receber
								Else
									AAdd( aRecsSE5, {SE5->(Recno()),'FINM020','FK2'} ) //  estorno de Baixas a pagar
								Endif
							EndIf	
						Else
							AAdd( aRecsSE5, {SE5->(Recno()),'',''} ) //Valores acessórios
						EndIf
					EndIf
					SE5->(dbSkip())
					
					WHILE SE5->(!EOF()) .AND. (aScan(aRecsSE5,{|x| x[1]==(SE5->(Recno())) }) > 0)
						SE5->(dbSkip())
						LOOP
					ENDDO
					nReg := SE5->(Recno())
					SE5->(DbGoto(nRegAnt))
					If lUsaFlag
						aAdd(aFlagCTB,{"E5_LA","S"+SubStr(E5_LA,2,1),"SE5",SE5->(Recno()),0,0,0})
					EndIf
					SE5->(dbGoto(nReg))
					dbSelectArea("SE5")
				Enddo
				
				If !lAchouSE5
					If nRegSE5 == 0; nRegSE5 := SE5->(Recno()); EndIf
					SE5->(DbSkip())
				EndIf
				If lTitulo
					If (lAdiant .or. lEstorno) .and. !lEstRaNcc
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Protecao provisoria: lTitulo .T. sem SE2   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
   	                	If SE2->(!EOF()) .AND. SE2->(!BOF())
							Reclock( "SE2" )
							Replace E2_VALLIQ  With nVl
							Replace E2_DESCONT With nDc
							Replace E2_JUROS	 With nJr
							Replace E2_MULTA	 With nMt
							Replace E2_CORREC  With nCm
							If lPccBaixa
								Replace E2_PIS		With nPisBx
								Replace E2_COFINS	With nCofBx
								Replace E2_CSLL	With nCslBx
								Replace E2_VRETPIS	With nPisBx
								Replace E2_VRETCOF	With nCofBx
								Replace E2_VRETCSL	With nCslBx
							EndIf
							SE2->(MsUnlock())
						EndIf
					Else

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Protecao provisoria: lTitulo .T. sem SE1   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
                    	If SE1->(!EOF()) .AND. SE1->(!BOF())
							Reclock( "SE1" )
							Replace E1_VALLIQ  With nVl
							Replace E1_DESCONT With nDc
							Replace E1_JUROS   With nJr
							Replace E1_MULTA   With nMt
							Replace E1_CORREC  With nCm
							If !Empty(cSitCob)
								Replace E1_SITUACA With cSitCob
							EndIf
							SE1->( MsUnlock())
						EndIf
					EndIf
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona no cliente/fornecedor 						  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lTitulo
					If (lAdiant .or. lEstorno) .and. !lEstRaNcc
						dbSelectArea("SA2")
						dbSeek(xFilial()+SE2->E2_FORNECE+SE2->E2_LOJA)
						dbSelectArea( "SED" )
						dbSeek( xFilial()+SE2->E2_NATUREZ )
					Else
						dbSelectArea( "SA1" )
						dbSeek( cFilial+SE1->E1_CLIENTE+SE1->E1_LOJA )
						dbSelectArea( "SED" )
						dbSeek( cFilial+SE1->E1_NATUREZ )
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Posiciona no banco. 										  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					dbSelectArea( "SA6" )
					dbSetOrder(1)
					dbSeek( xFilial("SA6")+cBanco)
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona o arquivo SE5 para que os lan‡amentos  ³
				//³ cont beis possam Localizar o motivo da baixa.	  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nRegOrigSE5 := 0
				If  nRegSE5 > 0
					nRegOrigSE5 := SE5->(Recno())
					SE5->(dbGoTo(nRegSE5))
				EndIf
				If lAdiant .and. !lEstCompens
					cPadrao := "530"
				ElseIf lEstCompens  //Estorno Compensacao Pagar
					cPadrao := "589"				
				ElseIf lEstorno
					cPadrao := "531"
				ElseIf lCompens
					cPadrao := "596"
				Else
					dbSelectArea( "SE1" )
					If cPaisLoc == "CHI" .And. SE5->E5_MOTBX == "DEV"
						cPadrao := "574"
					Else
						cPadrao := fa070Pad()
					EndIf
				EndIf
				lPadrao 	:= VerPadrao(cPadrao)
				lPadraoCc 	:= VerPadrao("536") //Rateio por C.Custo de MultiNat C.Receber
				lPadraoCcE 	:= VerPadrao("539") //Estorno do rateio C.Custo de MultiMat CR
				
				If lAchouSE5
					
					If lPadrao 
					
						If !lCabecalho
							a370Cabecalho(@nHdlPrv,@cArquivo)
						EndIf
						//Contabilizando estorno de C.Pagar
						If lEstorno
							cChaveSev := RetChaveSev("SE2")+"2"+cSeqSE5
							cChaveSez := RetChaveSev("SE2",,"SEZ")
						Else
							cChaveSev := RetChaveSev("SE1")+"2"+cSeqSE5
							cChaveSez := RetChaveSev("SE1",,"SEZ")
						EndIf
						
						DbSelectArea("SEV")
						dbSetOrder(2)
						
						// Se utiliza multiplas naturezas, contabiliza pelo SEV
						If lMultNat .And. MsSeek(cChaveSev)
						
							dbSelectArea("SE1")
							nRecSe1 := Recno()
							DbGoBottom()
							DbSkip()
							dbSelectArea("SE2")
							nRecSe2 := Recno()
							DbGoBottom()
							DbSkip()
							
							DbSelectArea("SEV")
							
							While xFilial("SEV")+SEV->(EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+;
								EV_LOJA+EV_IDENT+EV_SEQ) == cChaveSev .And. !Eof()
								
								//Se estou contabilizando um estorno, trata-se de um C. Pagar,
								//So vou contabilizar os EV_SITUACA == E
								If (lEstorno .and. !(SEV->EV_SITUACA == "E")) .or. ;
									(!lEstorno .and. (SEV->EV_SITUACA == "E"))
									//Se nao for um estorno, nao devo contabilizar o registro se
									//EV_SITUACA == E
									dbSkip()
									Loop
								ElseIf lEstorno
									//O lancamento a ser considerado passa a ser o do estorno
									lPadraoCC := lPadraoCCE
								EndIf
								
								If SEV->EV_LA != "S"
									dbSelectArea( "SED" )
									MsSeek( xFilial("SED")+SEV->EV_NATUREZ ) // Posiciona na natureza, pois a conta pode estar la.
									dbSelectArea("SEV")
									If SEV->EV_RATEICC == "1" .and. lPadraoCC .and. lPadrao // Rateou multinat por c.custo
										dbSelectArea("SEZ")
										dbSetOrder(4)
										MsSeek(cChaveSeZ+SEV->EV_NATUREZ+"2"+cSeqSE5) // Posiciona no arquivo de Rateio C.Custo da MultiNat
										While !Eof() .and. xFilial("SEZ")+SEZ->(EZ_PREFIXO+EZ_NUM+;
											EZ_PARCELA+EZ_TIPO+EZ_CLIFOR+EZ_LOJA+EZ_NATUREZ+EZ_IDENT+EZ_SEQ) == cChaveSeZ+SEV->EV_NATUREZ+"2"+cSeqSE5
											
											//Se estou contabilizando um estorno, trata-se de um C. Pagar,
											//So vou contabilizar os EZ_SITUACA == E
											//Se nao for um estorno, nao devo contabilizar o registro se
											//EZ_SITUACA == E
											If (lEstorno .and. !(SEZ->EZ_SITUACA == "E")) .or. ;
												(!lEstorno .and. (SEZ->EZ_SITUACA == "E"))
												dbSkip()
												Loop
											EndIf
											If SEZ->EZ_LA != "S"
	
												aAdd(aFlagCTB,{"EZ_LA","S","SEZ",SEZ->(Recno()),0,0,0})
												//O lacto padrao fica:
												//536 - Rateio multinat com c.custo C.Receber
												//539 - Estorno de Rat. Multinat C.Custo C.Pagar
												cPadraoCC := If(SEZ->EZ_SITUACA == "E","539","536")
												VALOR := SEZ->EZ_VALOR
												nTotDoc	+=	DetProva(nHdlPrv,cPadraoCC,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
												If LanceiCtb // Vem do DetProva
													If !lUsaFlag
														RecLock("SEZ")
														SEZ->EZ_LA    := "S"
														MsUnlock( )
													EndIf 
												ElseIf lUsaFlag
													If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SEZ->(Recno()) }))>0
														aFlagCTB := Adel(aFlagCTB,nPosReg)
														aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
													EndIf													
												EndIf
											EndIf
											dbSkip()
										Enddo
										DbSelectArea("SEV")
									Else
										If lUsaFlag
											aAdd(aFlagCTB,{"EV_LA","S","SEV",SEV->(Recno()),0,0,0})
										EndIf
										nTotDoc	:=	DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
									EndIf
									If LanceiCtb // Vem do DetProva
										If !lUsaFlag
											RecLock("SEV")
											SEV->EV_LA    := "S"
											MsUnlock( )
										EndIf  
									ElseIf lUsaFlag
										If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SEV->(Recno()) }))>0
											aFlagCTB := Adel(aFlagCTB,nPosReg)
											aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
										EndIf										
									EndIf
								EndIf
								DbSelectArea("SEV")
								DbSkip()
								VALOR := 0
							Enddo
							nTotal  	+=	nTotDoc
							nTotProc	+=	nTotDoc // Totaliza por processo
							
							If mv_par12 == 2 
								If nTotDoc > 0 // Por documento
									Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
									nTotDoc := 0
								EndIf
								aFlagCTB := {}
							EndIf
							
							dbSelectArea("SE2")
							DbGoto(nRecSe2)
							
							dbSelectArea("SE1")
							DbGoto(nRecSe1)
						Else
							dbSelectArea("SEV")
							DbGoBottom()
							DbSkip()
							DbSelectArea("SE1")
							If SE1->E1_TIPO == MVPIABT
								VALOR5 := SE1->E1_VALOR			
							ElseIf SE1->E1_TIPO == MVCFABT
								VALOR6 := SE1->E1_VALOR
							ElseIf SE1->E1_TIPO == MVCSABT
								VALOR7 := SE1->E1_VALOR			
							EndIf	
							If lCompens
								STRLCTPAD := SE5->E5_DOCUMEN
								cFilDoc	  := SE5->E5_FILIAL
								nRegSE1Cp := SE1->(Recno())
								nRegSE5Cp := SE5->(Recno())
								SE5->(dbskip(-1))
								// Verifica se o registro anterior ja contabilizou o imposto
								If cFilDoc+STRLCTPAD <> SE5->E5_FILIAL+SE5->E5_DOCUMEN .Or. SE5->(Bof())
									dbSetOrder(1)
									If dbSeek(xFilial("SE1")+STRLCTPAD)
										//Armanzena variaveis privates
										nValO2 := VALOR2
										nValO3 := VALOR3
										nValO4 := VALOR4 		
																	
										If !(SE1->E1_TIPO $ MVRECANT) 
											If SE1->E1_ISS <> 0
												VALOR2 := SE1->E1_ISS			
											EndIf
											If SE1->E1_INSS <> 0
												VALOR3 := SE1->E1_INSS			
											EndIf
											If SE1->E1_IRRF <> 0
												VALOR4 := SE1->E1_IRRF			
											EndIf
											If SE1->E1_PIS <> 0
												VALOR5 := SE1->E1_PIS		
											EndIf
											If SE1->E1_COFINS <> 0
												VALOR6 := SE1->E1_COFINS
											EndIf
											If SE1->E1_CSLL <> 0
												VALOR7 := SE1->E1_CSLL			
											EndIf
											// Acrescimo e Decrescimo								
											VALOR8 := SE1->E1_ACRESC											
											VALOR9 := SE1->E1_DECRESC
																						
											VALOR := SE1->E1_VALOR-(VALOR2+VALOR3+VALOR4+VALOR5+VALOR6+VALOR7+VALOR8+VALOR9)	// Valor NF liquido
										EndIf
									EndIf
								EndIf
								SE5->(dbGoTo(nRegSE5Cp))
								SE1->(dbGoTo(nRegSE1Cp))
							EndIf
							
						    nTotDoc	:=	DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
							nTotProc+= nTotDoc
							nTotal	+= nTotDoc
							If mv_par12 == 2 
								If nTotDoc > 0 // Por documento
									Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
								EndIf
								aFlagCTB := {}
							EndIf
							//Recupera as variaveis Privates
							VALOR2 := nValO2
							VALOR3 := nValO3
							VALOR4 := nValO4 
							VALOR5		:= 0
							VALOR6		:= 0
							VALOR7		:= 0
							VALOR8		:= 0
							VALOR9		:= 0
						EndIf
					EndIf
				EndIf	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Devolve a posi‡„o original do arquivo  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nRegOrigSE5 > 0
					SE5->(dbGoTo(nRegOrigSE5))
				EndIf
				If !lAdiant .and. !lEstorno
					dbSelectArea("SE1")
					If !Eof() .And. !Bof()
						Reclock( "SE1" )
						Replace E1_VALLIQ  With nValliq
						Replace E1_DESCONT With nDescont
						Replace E1_JUROS	 With nJuros
						Replace E1_MULTA	 With nMulta
						Replace E1_CORREC  With nCorrec
						Replace E1_SITUACA With cSitOri
						SE1->( MsUnlock( ) )
					EndIf
				Else
					dbSelectArea("SE2")
					If !Eof() .And. !Bof()
						Reclock( "SE2" )
						Replace E2_VALLIQ  With nValliq
						Replace E2_DESCONT With nDescont
						Replace E2_JUROS	 With nJuros
						Replace E2_MULTA	 With nMulta
						Replace E2_CORREC  With nCorrec
						If lPccBaixa
							Replace E2_PIS		With nPis
							Replace E2_COFINS	With nCofins
							Replace E2_CSLL	With nCsll
							Replace E2_VRETPIS	With nVretPis
							Replace E2_VRETCOF	With nVretCof
							Replace E2_VRETCSL	With nVretCsl
						EndIf
						SE2->( MsUnlock())
					EndIf
				EndIf
				dbSelectArea("SE5")                       	
			Enddo
			
			If mv_par12 == 3 
				If nTotProc > 0 // Por processo
					Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
					nTotProc := 0
				EndIf
				aflagCTB := {}
			EndIf
			dbSelectArea( "SE5" )
		EndIf
		
		If (mv_par06 == 2 .or. mv_par06 == 4)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Baixas a Pagar															  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea( "SE5" )
			VALOR 		:= 0
			VALOR2		:= 0
			VALOR3		:= 0
			VALOR4		:= 0
			VALOR5		:= 0
			
			nValorTotal := 0
			nBordero	:= 0
			nTotBord	:= 0
			nBordDc		:= 0
			nBordJr		:= 0
			nBordMt		:= 0
			nBordCm		:= 0
			                                        	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ VerIfica qual a data a ser utilizada para baixa				  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cCampo:=IIF(mv_par07 == 1,"SE5->E5_DATA",Iif(mv_par07 == 2,"SE5->E5_DTDIGIT","SE5->E5_DTDISPO"))

			If lSE5MCFIL	//	Usa Filial de Origem?
				cFor := ' SE5->E5_FILORIG == "' + cFilAnt + '"' 
			ElseIf MV_PAR14 == 1 .and. lPosE5MsFil
				cFor := ' SE5->E5_MSFIL == "' + cFilAnt + '"'
			Else
				cFor := ' SE5->E5_FILIAL == "' + xFilial("SE5") + '"'
			EndIf

			SE5->(dbSetOrder(nIndex+1))
			If lUsaFilOrig
				dbSeek( cFilAnt +"P"+dTos(mv_par04),.T.)
			Else
			dbSeek( cFilial +"P"+dTos(mv_par04),.T.)
			Endif

			cNumBor := ""
			While SE5->(!Eof()) .And. SE5->E5_RECPAG == "P" .and. &cCampo <= IIF(lDatBor,mv_par05+nPeriodo-1,mv_par05)
			
				If !(&cFor) .OR. (aScan(aRecsSE5,{|x| x[1]==(SE5->(Recno())) }) > 0)
					SE5->(dbSkip())
					Loop
				EndIf
				
				// Estorno de Compensação de Cheque - Contabiliza On-Line -	(SEF) FINA191
				IF (SE5->E5_TIPODOC == 'ES' .AND. !EMPTY(SE5->E5_NUMCHEQ))
					cExp := 'CH'
					BeginSQL Alias cAliasSE5
						Select Count(SE5.E5_FILIAL) as COUNT
						From %table:SE5% SE5
						Where 
							SE5.E5_FILIAL = %xfilial:SE5%
							AND SE5.E5_PREFIXO = %exp:SE5->E5_PREFIXO%
							AND SE5.E5_DATA = %exp:DTOS(SE5->E5_DATA)%
							AND SE5.E5_BANCO = %exp:SE5->E5_BANCO%
							AND SE5.E5_AGENCIA = %exp:SE5->E5_AGENCIA%
							AND SE5.E5_CONTA = %exp:SE5->E5_CONTA%
							AND SE5.E5_NUMCHEQ = %exp:SE5->E5_NUMCHEQ%
							AND SE5.E5_SEQ     = %exp:SE5->E5_SEQ%
							AND SE5.E5_TIPODOC = %exp:cExp%
							AND %NotDel%
					EndSQL
					IF (cAliasSE5)->COUNT >= 1
						(cAliasSE5)->(DBCLOSEAREA())
						SE5->(DBSKIP())
						LOOP
					ELSE
						(cAliasSE5)->(DBCLOSEAREA())
					ENDIF
				ENDIF
				
				dDatabase := &cCampo
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Nao serao contabilizadas Mov. Fin. Manuais e Transf.Bancaria neste ponto  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				// Nem aplicacoes, emprestimos, estornos de aplicacoes e estornos de emprestimos
				If Empty(SE5->E5_TIPODOC) .OR. SE5->E5_TIPODOC $ "TR/TE/DB/OD/LJ/AP/RF/PE/EP" .Or. SubStr(SE5->E5_LA,1,1) == "S"
					SE5->(dbSkip())                                                    
					Loop
				EndIf
				
				//Nao serao contabilizadas os movimentos de troco de vendas do sigaloja
				If SE5->E5_TIPODOC $ "VL#TR" .AND. !Empty(SE5->E5_NUMERO) .and. SE5->E5_MOEDA == "TC"
			  		If Upper(AllTrim(SE5->E5_NATUREZ)) $ Upper(cNatTroc) //"Troco"  
			        	SE5->(dbSkip())
						Loop
					EndIf
				EndIf
				
				lAdiant 	:= .F.
				lEstorno 	:= .F.
				lEstPaNdf 	:= .F.
				lEstCart2 	:= .F.
				lCompens  	:= .F.
				lEstCompens := .F.
				
				If SE5->E5_TIPODOC == "ES"
					lEstorno := .T.
				EndIf
				
				If SE5->E5_TIPODOC == "E2"
					lEstCart2 := .T.
				EndIf
				
				If SE5->E5_TIPO $ MVPAGANT+"/"+MV_CPNEG .and. SE5->E5_TIPODOC == "ES"
					lEstPaNdf := .T.
				EndIf
				
				If SE5->E5_TIPODOC == "ES" .and. SE5->E5_MOTBX == "CMP"
					lEstCompens := .T.
				EndIf

				If SE5->E5_TIPO $ MVRECANT+"/"+MV_CRNEG
					lAdiant := .T.
				EndIf
				
				If SE5->E5_TIPODOC == "BA" .and. SE5->E5_MOTBX == "CMP"
					lCompens := .T.
				EndIf

				// Despreza inclusao de PA que sera contabilizado pelo SE2
				If SE5->E5_TIPODOC == "PA" .and. SE5->E5_TIPO $ MVPAGANT
					SE5->(dbSkip())
					Loop
				EndIf

				// Despreza baixas do titulo principal, para nao duplicar.
				If SE5->E5_TIPODOC == "CP" .and. SE5->E5_MOTBX == "CMP"
					If !lUsaFilOrig
					AAdd( aRecsSE5, {SE5->(Recno()),'FINM020','FK2'} ) // Baixas a pagar.
					SE5->(dbSkip())
					Loop
					Else
						lCompens := .T.
				EndIf
				EndIf
				
				// Despreza estorno de compensacao do titulo principal, para nao duplicar.
				If SE5->E5_TIPODOC == "ES" .and. SE5->E5_MOTBX == "CMP" .and. !(SE5->E5_TIPO $ MVRECANT+"/"+MV_CRNEG)
					AAdd( aRecsSE5, {SE5->(Recno()),'FINM010','FK1'} ) // Baixas a receber.
					SE5->(dbSkip())
					Loop
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Apenas contabilza se :                                       ³
				//³ For realmente uma baixa de contas a PAGAR                    ³
				//³ mv_ctbaixa dIferente de "C" - Cheque                         |
				//³ Ou se for igual a C e for uma baixa no banco caixa			  |
				//³______________________________________________________________|
				If !lAdiant .and. !lEstorno .and. !lEstCart2
					If cCtBaixa == "C" .And. SE5->E5_MOTBX == "NOR"  .And.;
						!(Substr(SE5->E5_BANCO,1,2)=="CX" .or. SE5->E5_BANCO$cCarteira)
						SE5->(dbSkip())
						Loop
					EndIf
				EndIf
				
				// A baixa de adiantamento ou estorno de baixa a receber gera registro a pagar
				If (lAdiant .or. lEstorno .or. lEstCart2) .and. !lEstPaNdf
					dbSelectArea("SE1")
					dbSetOrder(2)
					If !(MsSeek(xFilial("SE1")+SE5->E5_CLIFOR+SE5->E5_LOJA+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO))
						If SE5->E5_MOTBX == "CMP" .and. !(MsSeek(SE5->E5_FILORIG+SE5->E5_CLIFOR+SE5->E5_LOJA+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO))
						   If !(mv_par14 == 1 .and. lPosE5MsFil .and. (MsSeek(SE5->E5_MSFIL+SE5->E5_CLIFOR+SE5->E5_LOJA+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO)) .And. Substr(SE1->E1_ORIGEM,1,4) == "LOJA")
						   
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Localizada inconsistˆncia no arquivo SE5. A fun‡„o fa370conc	 ³
								//³ pergunta se o usu rio quer continuar ou abandonar.				 ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If !FA370CONC()
									Break
								EndIf
								dbSelectArea("SE5")
								SE5->(dbSkip())
								Loop 
						   EndIf
						EndIf
					EndIf
				Else
					dbSelectArea( "SE2" )
					dbSetOrder( 1 )
					cFilorig := xFilial("SE2")
					
					If !(MsSeek( cFilOrig +SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO+SE5->E5_CLIFOR+SE5->E5_LOJA))
						If !Empty(SE5->E5_FILORIG)
							cFilOrig := SE5->E5_FILORIG
						EndIf
					EndIf
					
					If !(MsSeek( cFilOrig +SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO+SE5->E5_CLIFOR+SE5->E5_LOJA))
						//Se for o totalizador da baixa automatica, nao pode ser gerado mensagem
						If lBxCnab .and. AllTrim(SE5->E5_ORIGEM) $ "FINA090|FINA091|FINA300|FINA430|FINA740|FINA750" .AND. SE5->E5_TIPODOC == "VL" .AND. !Empty(SE5->E5_LOTE) .AND. Empty(SE5->E5_TIPO + SE5->E5_DOCUMEN + SE5->E5_NUMERO + SE5->E5_PARCELA + SE5->E5_CLIFOR + SE5->E5_LOJA)
							dbSelectArea("SE5")
							SE5->(dbSkip())
							Loop
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Localizada inconsistˆncia no arquivo SE5. A fun‡„o fa370conc	 ³
						//³ pergunta se o usu rio quer continuar ou abandonar.				 ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If !FA370CONC()
							Break
						EndIf
						dbSelectArea("SE5")
						SE5->(dbSkip())
						Loop
					EndIf
					
					// Nao contabiliza titulos de impostos aglutinados com origem na rotina FINA378 se foram gerados na baixa
					If !lAGP .and. !lMvAGP // Neste caso o Parâmetro de contabilização dos impostos aglutinados inverte a operação					
						If	AllTrim( Upper( SE2->E2_ORIGEM ) ) == "FINA378" .And. SE2->E2_PREFIXO == "AGP" .And. lPccBxCp	// Aglutinacao Pis/Cofins/Csll
							SE5->(dbSkip())
							Loop
						EndIf
					ElseIf AllTrim(SE2->E2_CODRET) == "5952" .And. ( (SE2->E2_PREFIXO != "AGP" .And. !Empty(SE2->E2_TITPAI)) .And. AllTrim(SE2->E2_ORIGEM) != "FINA378") .And. F370ChkAgp()
						RecLock("SE5", .F.)
						SE5->E5_LA := 'S'
						SE5->(MsUnLock())
						SE5->(dbSkip())
						Loop
					EndIf
				EndIf
				
				nPis	:= 0
				nCofins	:= 0
				nCsll	:= 0
				nVretPis:= 0
				nVretCof:= 0
				nVretCsl:= 0
				
				If (lAdiant .or. lEstorno .or. lEstCart2) .and. !lEstPaNdf
					nValLiq	:= SE1->E1_VALLIQ
					nDescont:= SE1->E1_DESCONT
					nJuros	:= SE1->E1_JUROS
					nMulta	:= SE1->E1_MULTA
					nCorrec	:= SE1->E1_CORREC
				Else
					nValLiq	:= SE2->E2_VALLIQ
					nDescont:= SE2->E2_DESCONT
					nJuros	:= SE2->E2_JUROS
					nMulta	:= SE2->E2_MULTA
					nCorrec	:= SE2->E2_CORREC
					If lPccBaixa
						nPis	 := SE2->E2_PIS
						nCofins	 := SE2->E2_COFINS
						nCsll	 := SE2->E2_CSLL
						nVretPis := SE2->E2_VRETPIS
						nVretCof := SE2->E2_VRETCOF
						nVretCsl := SE2->E2_VRETCSL
					EndIf
				EndIf
				
				dbSelectArea( "SE5" )
				nVl:=nDc:=nJr:=nMt:=nCm:=0
				lTitulo := .F.
				cSeq	:= SE5->E5_SEQ
				cBanco  := " "
				nRegSE5 := 0
				nRegOrigSE5 := 0
				
				If (lAdiant .or. lEstorno .or. lEstCart2) .and. !lEstPaNdf
					cChaveSe5 := "xFilial()==SE5->E5_FILIAL.And.SE1->E1_PREFIXO==SE5->E5_PREFIXO.And.SE1->E1_NUM==SE5->E5_NUMERO.And.SE1->E1_PARCELA==SE5->E5_PARCELA.And.SE1->E1_TIPO==SE5->E5_TIPO.And.cSeq==SE5->E5_SEQ .And.SE5->E5_CLIFOR+SE5->E5_LOJA==SE1->E1_CLIENTE+SE1->E1_LOJA"
					lSE2SE1EOF := SE1->(Eof())
				Else
					cChaveSe5 := "xFilial()==SE5->E5_FILIAL.And.SE2->E2_PREFIXO==SE5->E5_PREFIXO.And.SE2->E2_NUM==SE5->E5_NUMERO.And.SE2->E2_PARCELA==SE5->E5_PARCELA.And.SE2->E2_TIPO==SE5->E5_TIPO.And.cSeq==SE5->E5_SEQ .And. SE5->E5_CLIFOR+SE5->E5_LOJA == SE2->E2_FORNECE+SE2->E2_LOJA"
					lSE2SE1EOF := SE2->(Eof())
				EndIf
				
				cNumBor 	:= SE5->E5_DOCUMEN
				STRLCTPAD 	:= SE5->E5_DOCUMEN
				CODFORCP 	:= SE5->E5_FORNADT
				LOJFORCP 	:= SE5->E5_LOJAADT
				lAchouSE5	:= .F.
				While  SE5->(!Eof()) .And. !lSE2SE1EOF .and. &cChaveSE5 
					lAchouSE5 := .T.
					dbSelectArea("SE5")
					
					// Se nao satisfizer a primeira condicao, Despreza o registro
					If !(SE5->E5_RECPAG == "P" .and. &cCampo <= IIF(lDatBor,mv_par05+nPeriodo-1,mv_par05))
						Exit
					EndIf
					
					If &cCampo > IIF(lDatBor,mv_par05+nPeriodo-1,mv_par05)
						Exit
					EndIf

					nPisBx := 0
					nCofBx := 0
					nCslBx := 0
					
					If	SE5->E5_TIPODOC $ "BA|VL|V2|ES|LJ|E2"
						cBanco  	:= SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA
						cCheque 	:= SE5->E5_NUMCHEQ
						nVl	  		:= SE5->E5_VALOR
						nRegSE5 	:= SE5->(Recno())
						lMultnat 	:= SE5->E5_MULTNAT == "1"
						cSeqSE5		:= SE5->E5_SEQ
						If lPccBaixa
							//"" - Retido na baixa ou 4 - Retido no Bordero(Fina241)
							If Empty(SE5->E5_PRETPIS) .Or. SE5->E5_PRETPIS == "4" 
								nPisBx := SE5->E5_VRETPIS
								nCofBx := SE5->E5_VRETCOF
								nCslBx := SE5->E5_VRETCSL
							EndIf
						EndIf
					ElseIf SE5->E5_TIPODOC $ "DCüD2"
						nDc	  := SE5->E5_VALOR
						If nRegSE5 == 0; nRegSE5 := SE5->(Recno()); EndIf
					ElseIf SE5->E5_TIPODOC $ "JRüJ2/TL"
						nJr	  := SE5->E5_VALOR
						If nRegSE5 == 0; nRegSE5 := SE5->(Recno()); EndIf
					ElseIf SE5->E5_TIPODOC $ "MTüM2"
						nMt := SE5->E5_VALOR
						If nRegSE5 == 0; nRegSE5 := SE5->(Recno()); EndIf
					ElseIf SE5->E5_TIPODOC $ "CMüC2"
						nCm := SE5->E5_VALOR
						If nRegSE5 == 0; nRegSE5 := SE5->(Recno()); EndIf
					ElseIf SE5->E5_TIPODOC $ "CP"
						If nRegSE5 == 0; nRegSE5 := SE5->(Recno()); EndIf	
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza Flag de Lan‡amento Cont bil		  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nRegAnt := SE5->(Recno())         
					/// proteção existente por falha do DB2 AS400 não executar corretamente o dbSkip()
					If (aScan(aRecsSE5,{|x| x[1]==nRegAnt}) == 0) 
						If Alltrim(SE5->E5_TIPODOC) $ 'BA|VL|CP|ES'
							If Alltrim(SE5->E5_TIPODOC) == "ES" .And. !Empty(SE5->E5_NUMCHEQ)
								AAdd( aRecsSE5, {SE5->(Recno()),'FINM030','FK5'} ) //  estorno de cheque
							Else 
								If SE5->E5_TABORI == "FK1" .OR. (SE5->E5_RECPAG == "R" .and. SE5->E5_TIPODOC <> "ES" .and. !SE5->E5_TIPO $ MVPAGANT+"/"+MV_CPNEG) .Or. (SE5->E5_RECPAG == "P" .and. SE5->E5_TIPODOC == "ES" .and. !SE5->E5_TIPO $ MVPAGANT+"/"+MV_CPNEG);
									.OR. (SE5->E5_RECPAG == "P" .and. SE5->E5_TIPODOC <> "ES" .and. SE5->E5_TIPO $ MVRECANT+"/"+MV_CRNEG)  
									AAdd( aRecsSE5, {SE5->(Recno()),'FINM010','FK1'} ) // estorno de baixa a receber
								Else
									AAdd( aRecsSE5, {SE5->(Recno()),'FINM020','FK2'} ) // Baixas a pagar
								Endif
							EndIf
						Else
							AAdd( aRecsSE5, {SE5->(Recno()),'',''} ) // Valores Acessórios
						EndIf
					EndIf	
					SE5->(dbSkip())
					WHILE SE5->(!EOF()) .AND. (aScan(aRecsSE5,{|x| x[1]==(SE5->(Recno())) }) > 0)
						SE5->(dbSkip())
						LOOP
					ENDDO
					///////////// Proteção AS 400 - Fim //////////////
					cProxBor := SE5->E5_DOCUMEN
					nReg := Recno()
					SE5->(DbGoto(nRegAnt))
					If lUsaFlag
						aAdd(aFlagCTB,{"E5_LA","S"+SubStr(SE5->E5_LA,2,1),"SE5",SE5->(Recno()),0,0,0})
					EndIf
					lTitulo := .T.
					dbGoto(nReg)
				EndDO
				
				If !lAchouSE5
					If nRegSE5 == 0
						nRegSE5 := SE5->(Recno())
					EndIf
					SE5->(DbSkip())
				EndIf
				If lTitulo
					If (lAdiant .or. lEstorno .or. lEstCart2) .and. !lEstPaNdf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Protecao provisoria: lTitulo .T. sem SE1   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
                    	If SE1->(!EOF()) .AND. SE1->(!BOF())
							Reclock( "SE1" )
							Replace E1_VALLIQ  With nVl
							Replace E1_DESCONT With nDc
							Replace E1_JUROS	 With nJr
							Replace E1_MULTA	 With nMt
							Replace E1_CORREC  With nCm
							SE1->( MsUnlock())
						EndIf
					Else
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Protecao provisoria: lTitulo .T. sem SE2   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
                    	If SE2->(!EOF()) .AND. SE2->(!BOF())
							Reclock( "SE2" )
							Replace E2_VALLIQ  With nVl
							Replace E2_DESCONT With nDc
							Replace E2_JUROS	 With nJr
							Replace E2_MULTA	 With nMt
							Replace E2_CORREC  With nCm
							If lPccBaixa
								Replace E2_PIS		With nPisBx
								Replace E2_COFINS	With nCofBx
								Replace E2_CSLL	With nCslBx
								Replace E2_VRETPIS	With nPisBx
								Replace E2_VRETCOF	With nCofBx
								Replace E2_VRETCSL	With nCslBx
							EndIf
							SE2->(MsUnlock())
						EndIf
					EndIf
				EndIf
				
				If lTitulo
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Posiciona no fornecedor. 									  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If (lAdiant .or. lEstorno .or. lEstCart2) .and. !lEstPaNdf
						dbSelectArea( "SA1" )
						dbSeek( cFilial+SE1->E1_CLIENTE+SE1->E1_LOJA )
						dbSelectArea( "SED" )
						dbSeek( cFilial+SE1->E1_NATUREZ )
					Else
						dbSelectArea("SA2")
						dbSeek(xFilial()+SE2->E2_FORNECE+SE2->E2_LOJA)
						dbSelectArea( "SED" )
						dbSeek( xFilial()+SE2->E2_NATUREZ )
						if !Empty( SE2->E2_NUMBOR )
							nValorTotal += SE2->E2_VALLIQ
						endif
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Posiciona no banco.											  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					dbSelectArea( "SA6" )
					dbSetOrder(1)
					dbSeek( cFilial+cBanco)
					dbSelectArea( "SE5" )
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Posiciona o arquivo SE5 para que os lan‡amentos  ³
				//³ cont beis possam Localizar o motivo da baixa. 	  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nRegOrigSE5 := 0
				If nRegSE5 > 0
					nRegOrigSE5 := SE5->(Recno())
					SE5->(DbGoTop())
					SE5->(dbGoTo(nRegSE5))
				EndIf
				
				If lEstorno .and. lEstPaNdf .and. !lEstCompens
					cPadrao := "531"
				ElseIf lEstCompens  //Estorno Compensacao Receber
					cPadrao := "588"									
				ElseIf lEstorno
					cPadrao := "527"
				ElseIf lEstCart2
					cPadrao := "540"
				ElseIf lAdiant
					dbSelectArea( "SE1" )
					cPadrao := fa070Pad()
				ElseIf lCompens
					cPadrao := "597"
				Else
					cPadrao := Iif(Empty(SE5->E5_DOCUMEN) .Or. SE5->E5_MOTBX $ "PCC|LIQ|IRF" .Or. "FINA080" $ SE5->E5_ORIGEM,"530","532")
					
					// Totalizo por Bordero
					
					If cPadrao = "532" .And. mv_par13 = 2
						nBordero 	+= SE2->E2_VALLIQ
						nTotBord 	+= SE2->E2_VALLIQ
						nBordDc		+= SE2->E2_DESCONT
						nBordJr		+= SE2->E2_JUROS
						nBordMt		+= SE2->E2_MULTA
						nBordCm		+= SE2->E2_CORREC
					EndIf
					
					// Disponibilizo a Variavel VALOR com o total dos borderos aglutinados
					
					If cPadrao = "532" .And. cProxBor <> cNumBor
						VALOR 		:= nBordero
						VALOR2		:= nBordDc
						VALOR3		:= nBordJr
						VALOR4		:= nBordMt
						VALOR5		:= nBordCm
						
						nBordero 	:= 0.00
						nBordDc		:= 0
						nBordJr		:= 0
						nBordMt		:= 0
						nBordCm		:= 0
					Else
						VALOR 		:= 0.00
						VALOR2		:= 0.00
						VALOR3		:= 0.00
						VALOR4		:= 0.00
						VALOR5		:= 0.00
					EndIf
				EndIf
				lPadrao 	:= VerPadrao(cPadrao)
				lPadraoCc 	:= VerPadrao("537") //Rateio por C.Custo de MultiNat C.Pagar
				lPadraoCcE 	:= VerPadrao("538") //Estorno do rateio C.Custo de MultiMat CR
				
				If lAchouSE5
				
					If  lPadrao
					
						If !lCabecalho
							a370Cabecalho(@nHdlPrv,@cArquivo)
						EndIf
	
						// Se utiliza multiplas naturezas, contabiliza pelo SEV
						If lMultNat 						
							
							//Contabilizando estorno de C.Receber
							If lEstorno
								cChaveSev := RetChaveSev("SE1")+"2"+cSeqSE5
								cChaveSez := RetChaveSev("SE1",,"SEZ")
							Else
								cChaveSev := RetChaveSev("SE2")+"2"+cSeqSE5
								cChaveSez := RetChaveSev("SE2",,"SEZ")
							EndIf
					
							DbSelectArea("SEV")
							dbSetOrder(2)
							If MsSeek(cChaveSev)
	
								dbSelectArea("SE2")
								nValorTotal -= SE2->E2_VALLIQ							
	
								nRecSe2 := Recno()
								DbGoBottom()
								DbSkip()
								
								dbSelectArea("SE1")
								nRecSe1 := Recno()
								DbGoBottom()
								DbSkip()
								
								DbSelectArea("SEV")
		
								While xFilial("SEV")+SEV->(EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+;
									EV_LOJA+EV_IDENT+EV_SEQ) == cChaveSev .And. !Eof()
									
									//Se estou contabilizando um estorno, trata-se de um C. Pagar,
									//So vou contabilizar os EV_SITUACA == E
									//Se nao for um estorno, nao devo contabilizar o registro se
									//EV_SITUACA == E
									If (lEstorno .and. !(SEV->EV_SITUACA == "E")) .or. ;
										(!lEstorno .and. (SEV->EV_SITUACA == "E"))
										dbSkip()
										Loop
									ElseIf lEstorno
										//O lancamento a ser considerado passa a ser o do estorno
										lPadraoCC := lPadraoCCE
									EndIf
									
									If SEV->EV_LA != "S"
										dbSelectArea( "SED" )
										MsSeek( xFilial("SED")+SEV->EV_NATUREZ ) // Posiciona na natureza, pois a conta pode estar la.
										dbSelectArea("SEV")
										If SEV->EV_RATEICC == "1" .and. lPadraoCC .and. lPadrao // Rateou multinat por c.custo
											dbSelectArea("SEZ")
											dbSetOrder(4)
											MsSeek(cChaveSeZ+SEV->EV_NATUREZ+"2"+cSeqSE5) // Posiciona no arquivo de Rateio C.Custo da MultiNat
											While !Eof() .and. xFilial("SEZ")+SEZ->(EZ_PREFIXO+EZ_NUM+;
												EZ_PARCELA+EZ_TIPO+EZ_CLIFOR+EZ_LOJA+EZ_NATUREZ+EZ_IDENT+EZ_SEQ) == cChaveSeZ+SEV->EV_NATUREZ+"2"+cSeqSE5
												
												//Se estou contabilizando um estorno, trata-se de um C. Pagar,
												//So vou contabilizar os EZ_SITUACA == E
												//Se nao for um estorno, nao devo contabilizar o registro se
												//EZ_SITUACA == E
												If (lEstorno .and. !(SEZ->EZ_SITUACA == "E")) .or. ;
													(!lEstorno .and. (SEZ->EZ_SITUACA == "E"))
													dbSkip()
													Loop
												EndIf
												If SEZ->EZ_LA != "S"
													If lUsaFlag
														aAdd(aFlagCTB,{"EZ_LA","S","SEZ",SEZ->(Recno()),0,0,0})
													EndIf
													//O lacto padrao fica:
													//537 - Rateio multinat com c.custo C.Pagar
													//538 - Estorno de Rat. Multinat C.Custo C.Receber
													cPadraoCC := If(SEZ->EZ_SITUACA == "E","538","537")
													VALOR := SEZ->EZ_VALOR
													nTotDoc	+=	DetProva(nHdlPrv,cPadraoCC,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
													If LanceiCtb // Vem do DetProva
														If !lUsaFlag
															RecLock("SEZ")
															SEZ->EZ_LA    := "S"
															MsUnlock( )
															LanceiCtb := .F. 
														EndIf 
													ElseIf lUsaFlag
														If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SEZ->(Recno()) }))>0
															aFlagCTB := Adel(aFlagCTB,nPosReg)
															aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
														EndIf														
													EndIf
												EndIf
												dbSkip()
											Enddo
											DbSelectArea("SEV")
										Else
											If lUsaFlag
											  If SEZ->(!Eof())
												aAdd(aFlagCTB,{"EZ_LA","S","SEZ",SEZ->(Recno()),0,0,0})
											  Endif	
											EndIf
											nTotDoc	:=	DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
										EndIf
										If LanceiCtb // Vem do DetProva
											If !lUsaFlag
												RecLock("SEV")
												SEV->EV_LA    := "S"
												MsUnlock( )   
												LanceiCtb := .F.
											EndIf  
										ElseIf lUsaFlag
											If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SEV->(Recno()) }))>0
												aFlagCTB := Adel(aFlagCTB,nPosReg)
												aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
											EndIf											
										EndIf
									EndIf
									DbSelectArea("SEV")
									DbSkip()
									VALOR := 0
								Enddo
								nTotal  	+=	nTotDoc
								nTotProc	+=	nTotDoc // Totaliza por processo
								
								If mv_par12 == 2 
									If nTotDoc > 0 // Por documento
										Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
										nTotDoc := 0
									EndIf
									aFlagCTB := {}
								EndIf
								dbSelectArea("SE1")
								DbGoto(nRecSe1)
								dbSelectArea("SE2")
								DbGoto(nRecSe2)
							EndIf
						Else
							dbSelectArea("SEV")
							DbGoBottom()
							DbSkip()
							DbSelectArea("SE2")
							
	                        nTotDoc	:=	DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
							nTotProc+= nTotDoc
							nTotal	+= nTotDoc
							
							// Se possuir vinculo com Bordero, gera lancamento por Bordero
							If mv_par12 == 2 .and. nTotDoc > 0	// Por Documento
								lChkBordero := .t.
								If !Empty( cProxBor )	.and.	!Empty( cNumBor  ) .and.;	
									(cProxBor == cNumBor)
									lChkBordero := .f.
								endIf
								If lChkBordero 
									Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
									nTotDoc := 0
									aFlagCTB := {}
								endIf	
							endIf								
						EndIf
					EndIf   
				EndIf	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Devolve a posi‡„o original do arquivo  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nRegOrigSE5 > 0
					SE5->(dbGoTo(nRegOrigSE5))
				EndIf
				If (lAdiant .or. lEstorno .or. lEstCart2) .and. !lEstPaNdf
					dbSelectArea("SE1")
					If !SE1->(Eof()) .And. !Bof()
						Reclock( "SE1" )
						Replace E1_VALLIQ  With nValliq
						Replace E1_DESCONT With nDescont
						Replace E1_JUROS	 With nJuros
						Replace E1_MULTA	 With nMulta
						Replace E1_CORREC  With nCorrec
						SE1->( MsUnlock( ) )
					EndIf
				Else
					dbSelectArea("SE2")
					If !Eof() .And. !Bof()
						Reclock( "SE2" )
						Replace E2_VALLIQ  With nValliq
						Replace E2_DESCONT With nDescont
						Replace E2_JUROS	 With nJuros
						Replace E2_MULTA	 With nMulta
						Replace E2_CORREC  With nCorrec
						If lPccBaixa
							Replace E2_PIS		With nPis
							Replace E2_COFINS	With nCofins
							Replace E2_CSLL	With nCsll
							Replace E2_VRETPIS	With nVretPis
							Replace E2_VRETCOF	With nVretCof
							Replace E2_VRETCSL	With nVretCsl
						EndIf
						SE2->( MsUnlock())
					EndIf
				EndIf
			EndDO
			
			If nValorTotal > 0
				If !lCabecalho
					a370Cabecalho(@nHdlPrv,@cArquivo)
				EndIf
				VALOR 	:= If(mv_par13 = 1, nValorTotal, 0.00)
				VALOR2	:= VALOR3	:= VALOR4	:= VALOR5	:= 0.00
				dbSelectArea("SE2")
				dbGobottom()
				dbSkip()
				// Se estiver contabilizando carteira a Pagar apenas,
				// desposiciona E1 tambem, pois no LP podera conter
				// E1_VALLIQ e este campo retornara um valor, duplicando
				// o LP 527. Ex. Criar um LP 527 contabilizando pelo E1_VALLIQ
				// Fazer uma Baixa e um cancelamento, contabilizar off-line
				// escolhendo apenas a carteira a Pagar
				If mv_par06 == 2 .Or. mv_par06 == 4
					dbSelectArea("SE1")
					dbGobottom()
					dbSkip()
					dbSelectArea("SE5")
					dbGobottom()
					dbSkip()
				EndIf
				nTotDoc	:=	DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
				nTotProc	+= nTotDoc
				nTotal	+=	nTotDoc
				If mv_par12 == 2 
					If nTotDoc > 0 // Por documento
						Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
					EndIf
					aflagCTB := {}
				EndIf
			EndIf
		EndIf
		
		If mv_par12 == 3 
			If nTotProc > 0 // Por processo
				Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
				nTotProc := 0
			EndIf
			aFlagCTB := {}
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Contabiliza‡ao de Cheques  											  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		If (mv_par06 = 3  .Or. mv_par06 = 4)
		
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³       *** Alteracao para ganho de performance ***            ³
				//³Caso o banco seja relacional, pesquisar apenas os titulos     ³
				//³da data que esta sendo processada. Alteracao faz com que      ³
				//³a varredura de registros na SEF limite-se ao total de titulos ³
				//³encontrados na data e nao todos os registros da tabela.       ³
				//³                                                              ³
				//³APENAS a forma de varredura foi alterado, nada foi mudado     ³
				//³nas regras de gravacoes contabeis.                            ³
				//³                                                              ³
				//³ESTUDO DE CASO :                                              ³								
				//³Cliente processa 7564 dias (nPeriodo) X 113056 registros SEF  ³
				//³Totalizando : 855.155.584 varreduras de registros no SEF      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
   				aLstSEF := {}
   				nz := 0
   				nTotREGSEF := 0
				If Select(cAliasEF) # 0
					dbSelectArea(cAliasEF)
					dbCloseArea()
					fErase(cAliasEF + OrdBagExt())
					fErase(cAliasEF + GetDbExtension())
				Endif   				
				dbSelectArea("SEF")
				SEF->(dbSetOrder(1))
				cQuery := "SELECT EF_FILIAL, EF_BANCO, EF_AGENCIA, EF_CONTA, EF_NUM, EF_DATA, SEF.R_E_C_N_O_ SEFRECNO "
				cQuery += "FROM " + RetSqlName("SEF") + " SEF "

			If lFilOrgChq .and. (cFilAnt >= mv_par15) .and. (cFilAnt <= mv_par16)
				cQuery += "WHERE EF_MSFIL = '" + cFilAnt + "' AND "
			Else
				If lSEFMCFIL	//	Filial Compartilhada?
					cQuery += "WHERE EF_FILORIG = '" + cFilAnt + "' AND "
				Else
					cQuery += "WHERE EF_FILIAL = '" + xFilial("SEF") + "' AND "
				EndIf				
				EndIf				

				If cMVSLDBXCR == "C"						
					cQuery += "(( EF_ORIGEM IN ('FINA191','FINA070','FINA460') AND EF_DTCOMP BETWEEN '"  + DTOS(mv_par04) + "' AND '" + DTOS(mv_par05) + "') OR "
					CQuery += "(EF_ORIGEM NOT IN ('FINA191','FINA070','FINA460') AND " 
				EndIf

				cQuery += "EF_DATA BETWEEN '" + DTOS(mv_par04) + "' AND '" + DTOS(mv_par05) + Iif( cMVSLDBXCR == "C" , "'))" , "'" )
				cQuery += " AND EF_LA <> 'S ' "
				cQuery += " AND EF_LIBER = 'S ' AND D_E_L_E_T_ = ' ' "

				If l370EFFIL
					cQuery += Execblock("F370EFF",.F.,.F.,cQuery)
				EndIf                           
				cQuery += "ORDER BY " + SqlOrder("EF_FILIAL+EF_BANCO+EF_AGENCIA+EF_CONTA+EF_NUM+DTOS(EF_DATA)") 
				ChangeQuery(cQuery)
				dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), cAliasEF, .F., .T.)
				(cAliasEF)->(dbGoTop())
				Do While !(cAliasEF)->(Eof())
					aAdd(aLstSEF,(cAliasEF)->SEFRECNO)
					nTotREGSEF++
					(cAliasEF)->(dbSkip())						
				EndDo
	   			
			dbSelectArea("SEF")
			SEF->(dbSetOrder(1))
			SEF->(dbSeek(xFilial("SEF"),.T.))

				bCond := {|| !Empty(nTotREGSEF) .AND. nz++ < nTotREGSEF}

			While Eval(bCond)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Guarda o pr¢ximo registro para IndRegua					  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					SEF->(dbGoTo(aLstSEF[nz]))
					nRegAnt := SEF->(Recno())
					
					If nz < nTotREGSEF
						SEF->(dbGoTo(aLstSEF[nz + 1]))
						nProxReg := SEF->(Recno())
						cProxChq := SEF->(EF_BANCO+EF_AGENCIA+EF_CONTA+EF_NUM)  //Utilizado para quebra por documento
						SEF->(dbGoTo(aLstSEF[nz]))
					Else
						nProxReg := 0
						cProxChq := ""
					EndIf

				If Alltrim(SEF->EF_ORIGEM) $ "FINA040|FINA191|FINA070|FINA460" .and. cMVSLDBXCR == "C"											
					dDtRefSEF := SEF->EF_DTCOMP
				Else
					dDtRefSEF := If(cEF_T01="D",SEF->EF_DATA,StoD(SEF->EF_DATA))
				Endif							

				If dDtRefSEF >= mv_par04 .AND. ;
					dDtRefSEF <= mv_par05 .AND. ;
					!Empty(SEF->EF_NUM) .AND. ;
					SubStr(SEF->EF_LA,1,1) != "S" .AND. ;
					(Alltrim(SEF->EF_ORIGEM) $ "FINA050#FINA040#FINA080#FINA070#FINA190#FINA090#FINA091#FINA390TIT#FINA390AVU#FINA191#FINA460" .OR. ;
					Empty(SEF->EF_ORIGEM))
	
					cPadrao := "590"
					lChqSTit := .F.
					If AllTrim(SEF->EF_ORIGEM) == "FINA390TIT" // Liberacao de cheque
						cPadrao := "566"
					EndIf
					If AllTrim(SEF->EF_ORIGEM) == "FINA390AVU"
						cPadrao := "567"
					EndIf
					If Alltrim(SEF->EF_ORIGEM) == "FINA191" .OR. Alltrim(SEF->EF_ORIGEM) == "FINA070" .Or. Alltrim(SEF->EF_ORIGEM) == "FINA460"
						cPadrao := "559"
						If cMVSLDBXCR == "C"						
							dDataSEF := SEF->EF_DTCOMP
						Else
							dDataSEF := SEF->EF_DATA
						Endif	
					EndIf
					If Alltrim(SEF->EF_ORIGEM) == "FINA040" //Cheque gerados pelo SIGALOJA ou gerados na inclusão de títulos da carteira CR.
						If cMVSLDBXCR == "C"	.and. !Empty(SEF->EF_DTCOMP)					
							dDataSEF := SEF->EF_DTCOMP
							cPadrao := "559"  
						Elseif SE1->E1_STATUS == "B" 
							dDataSEF := SEF->EF_DATA
							cPadrao := "559"  
						Else
							dbSelectArea("SEF")
							dbGoto(nProxReg)
							Loop
						Endif	
					Endif		
					If !cCtBaixa $ "AC" .and. Alltrim(SEF->EF_ORIGEM) $ "FINA050#FINA080#FINA190#FINA090#FINA091#FINA390TIT"
						dbSelectArea("SEF")
						dbGoto(nProxReg)
						Loop
					EndIf
					
					// Nao contabilizo cancelados em off-line, exceto módulo PLS
					If SEF->EF_IMPRESS == "C"
						dbSelectArea("SEF")
						dbGoto(nProxReg)
						Loop
					EndIf
					
					// Nao contabilizo cheques de PA nao aglutinados
					// Registro totalizador n?o tˆm preenchidos os campos EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO
					If SEF->EF_IMPRESS != "A" .and. Alltrim(SEF->EF_ORIGEM) == "FINA050" .AND. !EMPTY(SEF->(EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO)) 
						dbSelectArea("SEF")
						dbGoto(nProxReg)
						Loop
					EndIf
					
					//Não contabilizo cheque recebido que nao foram compensados
					If Empty(SEF->EF_DTCOMP) .and. Alltrim(SEF->EF_ORIGEM)=="FINA191"
						dbSelectArea("SEF")
						dbGoto(nProxReg)
						Loop
					EndIf
					

					If SEF->EF_IMPRESS $ "SN "	// Cheque impresso ou n„o
						VALOR     := SEF->EF_VALOR		// para lan‡amento padr„o
						STRLCTPAD := SEF->EF_HIST
						NUMCHEQUE := SEF->EF_NUM
						ORIGCHEQ  := ALLTRIM(SEF->EF_ORIGEM)
						cChequeAtual := SEF->(EF_BANCO+EF_AGENCIA+EF_CONTA+EF_NUM)
						// Posiciona no banco do cheque
						dbSelectArea("SA6")
						SA6->(dbSetOrder(1))
						SA6->(dbSeek(xFilial("SA6")+SEF->EF_BANCO+SEF->EF_AGENCIA+SEF->EF_CONTA))
						
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Desposiciona propositalmente o SEF para que APENAS a³
						//³ variavel VALOR esteja com conteudo. O reposicionamen³
						//³ to ‚ feito na volta do Looping.                     ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ORIGCHEQ == "FINA190" .OR.; // Jun‡Æo de cheques
							(ORIGCHEQ == "FINA050" .AND. EMPTY(SEF->(EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO))) // Totalizador gerado na inclus?o de PA
							dbSelectArea("SEF")
							cChequeAtual := SEF->(EF_BANCO+EF_AGENCIA+EF_CONTA+EF_NUM)
							dbGoBottom()
							dbSkip()
							dbSelectArea("SE1")
							dbGoBottom()
							dbSkip()
							dbSelectArea("SE2")
							dbGoBottom()
							dbSkip()
							dbSelectArea("SE5")
							dbGoBottom()
							dbSkip()
						EndIf
						If Alltrim(SEF->EF_ORIGEM) == "FINA080"  // Baixas a Pagar
							// Se o cheque nao foi impresso, desposiciona as tabelas para contabilizar somente com as variaveis
							If SEF->EF_IMPRESS $ "N "
								dbSelectArea("SEF")
								dbGoBottom()
								dbSkip()
								dbSelectArea("SE1")
								dbGoBottom()
								dbSkip()
								dbSelectArea("SE2")
								dbGoBottom()
								dbSkip()
								dbSelectArea("SE5")
								dbGoBottom()
								dbSkip()
							Else	// Cheque impresso
								// Posiciona SE5 na movimentação de baixa do titulo do cheque e mantem as outras tabelas posicionadas
								SE5->(dbSetOrder(2))                                                                                                                      
								If ! SE5->(MsSeek(xFilial("SE5")+"VL"+SEF->(EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO+IIf(cEF_T01="D",DtoS(EF_DATA),EF_DATA)+EF_FORNECE+EF_LOJA+SEF->EF_SEQUENC)))
									SE5->(MsSeek(xFilial("SE5")+"BA"+SEF->(EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO+IIf(cEF_T01="D",DtoS(EF_DATA),EF_DATA)+EF_FORNECE+EF_LOJA+SEF->EF_SEQUENC)))
								EndIf
								SE5->(dbSetOrder(nIndex+1))
								cChequeAtual := SEF->(EF_BANCO+EF_AGENCIA+EF_CONTA+EF_NUM)								
							EndIf
						EndIf
						If Alltrim(SEF->EF_ORIGEM) == "FINA390TIT"  // Chq s/ Titulo
							dbSelectArea("SE1")
							dbGoBottom()
							dbSkip()
							dbSelectArea("SE2")
							dbGoBottom()
							dbSkip()
							VALOR     := 0
							lChqStit	:= .T.
							__SE5->(dbSetOrder(1))	
							__SE5->(MsSeek(xFilial("SE5")+IIf(cEF_T01="D",DTOS(SEF->EF_DATA),SEF->EF_DATA)+SEF->(EF_BANCO+EF_AGENCIA+EF_CONTA+EF_NUM)))
							SED->(DbSetOrder(1))
							SED->(MsSeek(xFilial("SED")+__SE5->E5_NATUREZ))											
							cChequeAtual := SEF->(EF_BANCO+EF_AGENCIA+EF_CONTA+EF_NUM)							
						EndIf
						If Alltrim(SEF->EF_ORIGEM) == "FINA390AVU"  // Cheque Avulso
							VALOR     := 0
							STRLCTPAD := ""
							NUMCHEQUE := ""
							ORIGCHEQ  := ""
							lChqStit	:= .T.
							__SE5->(dbSetOrder(1))	
							__SE5->(MsSeek(xFilial("SE5")+IIf(cEF_T01="D",DTOS(SEF->EF_DATA),SEF->EF_DATA)+SEF->(EF_BANCO+EF_AGENCIA+EF_CONTA+EF_NUM)))
							SED->(DbSetOrder(1))
							SED->(MsSeek(xFilial("SED")+__SE5->E5_NATUREZ))											
							cChequeAtual := SEF->(EF_BANCO+EF_AGENCIA+EF_CONTA+EF_NUM)							
						EndIf
					ElseIf SEF->EF_IMPRESS == "A"	// Cheque Aglutinado  
						VALOR     := 0
						STRLCTPAD := ""
						NUMCHEQUE := ""
						ORIGCHEQ  := ""
						cChequeAtual := SEF->(EF_BANCO+EF_AGENCIA+EF_CONTA+EF_NUM)
						// Posiciona no banco do cheque
						dbSelectArea("SA6")
						SA6->(dbSetOrder(1))
						SA6->(dbSeek(xFilial("SA6")+SEF->EF_BANCO+SEF->EF_AGENCIA+SEF->EF_CONTA))
						
						dbSelectArea("SE5")
						SE5->(dbSetOrder(2))		//posiciona no SE5

						cChaveSEF := SEF->(EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO+IIf(cEF_T01="D",DtoS(EF_DATA),EF_DATA)+EF_FORNECE+EF_LOJA+EF_SEQUENC)
						If !SE5->(dbSeek(xFilial("SE5")+"VL"+cChaveSEF))
							SE5->(dbSeek(xFilial("SE5")+"BA"+cChaveSEF))
						EndIf
						SE5->(dbSetOrder(nIndex+1))
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Posiciona Registros                                 ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !SEF->(EOF())
						dbSelectArea( "SA6" )
						SA6->(dbSetOrder(1))
						SA6->(dbSeek(xFilial("SA6")+SEF->EF_BANCO+SEF->EF_AGENCIA+SEF->EF_CONTA))

						If !lChqSTit
							If SEF->EF_TIPO $ MVRECANT + "/" + MV_CRNEG
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Neste caso o titulo veio de um Contas³
								//³ a Receber (SE1)                      ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								dbSelectArea("SE1")
								DbSetOrder(1)
								If dbSeek(xFilial("SE1")+SEF->EF_PREFIXO+SEF->EF_TITULO+SEF->EF_PARCELA+SEF->EF_TIPO+SEF->EF_FORNECE+SEF->EF_LOJA)
									dbSelectArea("SED")
									dbSeek(xFilial("SED")+SE1->E1_NATUREZ)
									dbSelectArea("SA1")
									dbSeek(xFilial("SA1")+SEF->EF_FORNECE+SEF->EF_LOJA)
								EndIf
							Else
								dbSelectArea( "SE2" )
								dbSetOrder(1)
								If dbSeek(xFilial("SE2")+SEF->EF_PREFIXO+SEF->EF_TITULO+;
									SEF->EF_PARCELA+SEF->EF_TIPO+;
									SEF->EF_FORNECE+SEF->EF_LOJA,.F.)
									dbSelectArea("SED")
									dbSetOrder(1)
									dbSeek(xFilial("SED")+SE2->E2_NATUREZ)
									dbSelectArea("SA2")
									dbSetOrder(1)
									dbSeek(xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA)
								EndIf
							EndIf
							If Alltrim(SEF->EF_ORIGEM) == "FINA390TIT"  // Chq s/ Titulo
								dbSelectArea("SEF")
								dbGoBottom()
								dbSkip()
							EndIf
						EndIf
					EndIf
					dbSelectArea( "SEF" )
					
					lPadrao := VerPadrao(cPadrao)
					
					If lPadrao
					
						If !lCabecalho
							a370Cabecalho(@nHdlPrv,@cArquivo)
						EndIf
						If lUsaFlag
							aAdd(aFlagCTB,{"EF_LA","S","SEF",nRegAnt,0,0,0})
						EndIf
						
						If !EMPTY(nRecNoSEF := FINFK5BUSCA(nil,"SEF"))                                                                                   
							AAdd( aRecsSE5, {nRecNoSEF,'FINM030','FK5'} ) //  estorno de cheque
						EndIf
						
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Deve passar a tabela de cheques (SEF) e Recno posicionado para gravar na CTK/CV3    ³
						//³ Assim, no momento da exclusao do lancto. pelo CTB, limpa o flag da SEF corretamente ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nTotDoc  += DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB,{"SEF",nRegAnt})
						nTotProc += nTotDoc
						nTotal   += nTotDoc
						
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Atualiza Flag de Lan‡amento Cont bil do cheque contabilizado  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						dbSelectArea("SEF")
						dbGoto(nRegAnt)
						If LanceiCtb .And. !(SEF->(Eof()))
							If !lUsaFlag
								Reclock("SEF")
								SEF->EF_LA := "S"
								MsUnlock()
							EndIf    
						ElseIf lUsaFlag
							If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SEF->(Recno()) }))>0
								aFlagCTB := Adel(aFlagCTB,nPosReg)
								aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
							EndIf							
						EndIf
						// Por documento
						If mv_par12 == 2 
							If nTotDoc > 0 .and. cChequeAtual != cProxChq
								Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
								nTotDoc := 0							
								aFlagCTB := {}
							EndIf
						EndIf
					EndIf
				EndIf
				dbSelectArea("SEF")
				dbGoto(nProxReg)
			Enddo
			If mv_par12 == 3 
				If nTotProc > 0 // Por processo
					Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
				EndIf
				aFlagCTB := {}
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Movimenta‡„o Banc ria - Transferencia & Estorno da Transf.   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aRecSE5 := SE5->(Getarea())
			If mv_par06 = 4
				nTotProc := 0

				If Select("_NewSe5") == 0
					ChkFile("SE5",.F.,"_NewSe5")
				Endif
				dbSelectArea("_NewSe5")
				
				
				aTrf := {"TR","TE"}
				nTamTot	:= Len(SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO))
		
				cIndex2 := CriaTrab(,.f.)
				//cria novo indice pela data e tipodoc para que saia na ordem origem e destino		
				If lSE5MCFIL	//	Usa Filial de Origem?
					cFilCampo := "_NewSe5->E5_FILORIG+"
					cFor := ' _NewSe5->E5_FILORIG == "' + cFilAnt + '"'
				ElseIf MV_PAR14 == 1 .and. lPosE5MsFil
					cFor := ' _NewSe5->E5_MSFIL == "' + cFilAnt + '"'
					cFilCampo := "_NewSe5->E5_FILIAL+"
				Else
					cFor := ' _NewSe5->E5_FILIAL == "' + xFilial("SE5") + '"'	
					cFilCampo := "_NewSe5->E5_FILIAL+"
				EndIf
				
				cFor += " .AND. _NewSe5->E5_TIPODOC $ 'TR#TE' " //  Filtra somente as transferencias bancarias
				cFor += " .AND. DTOS(_NewSe5->E5_DATA) >= '"+DTOS(mv_par04)+"' .AND. DTOS(_NewSe5->E5_DATA) <= '"+DTOS(mv_par05)+"'"
				cFor += " .AND. _NewSe5->E5_LA < 'S' "
				
				cChave2 := cFilCampo+" Dtos(_NewSe5->E5_DATA )+_NewSe5->E5_TIPODOC+_NewSe5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIfOR+E5_LOJA+E5_PROCTRA)"

				IndRegua("_NewSe5",cIndex2,cChave2,,cFor,STR0018)  //"Selecionando Registros..."
				nIndex2 := RetIndex("_NewSe5")

				_NewSe5->(dbSetOrder(nIndex2+1))
				_NewSe5->(dbGoTop())
				
				For nMove := 1 to 2 
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				 	//³ Dividimos agora em 2 partes: 								³
				 	//³	1 - Mov. bancario padrao de inclusao manual (FINA100); 		³
				 	//³ 2 - Alteração do SIGALOJA contabilização LocalIZADO.		³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					
					For nLacoTrf := 1 to Len(aTrf)
	
						_NewSe5->(dbSeek(If(lSE5MCFIL, cFilAnt,xFilial('SE5') )+Dtos(mv_par04)+aTrf[nLacoTrf], .T.))
						
						If lSE5MCFIL	//	Usa Filial de Origem?
							cTRCondWhile := "'" + cFilAnt + "' == _NewSe5->E5_FILORIG" 
						Else
							cTRCondWhile := "'" + xFilial("SE5") + "' == _NewSe5->E5_FILIAL " 
						EndIf

						If mv_par14 == 1 .and. lPosE5MsFil
							cTRCondWhile += " .and. _NewSe5->E5_MSFIL == '" + cFilAnt + "'"
						EndIf

						cTRCondWhile += " .AND. (_NewSe5->E5_DATA >= mv_par04 .AND. _NewSe5->E5_DATA <= mv_par05) .AND. _NewSe5->E5_TIPODOC == '" + aTrf[nLacoTrf] + "'"
						
						//Somente quando a pergunta "Carteira?" estiver como "Todas"
						cTRCondWhile += " .AND. MV_PAR06 == 4 "
	
						While !_NewSe5->(Eof()) .AND. &cTRCondWhile
							SE5->(DBGoto(_NewSe5->(Recno())))
							If SE5->E5_RECPAG == "P"
								cPadrao := "560"
							ElseIf SE5->E5_RECPAG == "R"
								cPadrao := "561"
							EndIf
	
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ VerIfica se ser  gerado Lan‡amento Cont bil			  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If SubStr(SE5->E5_LA,1,1) == "S"
								_NewSe5->( dbSkip( ) )
								Loop
							End
							// Neste momento não considera 
							If nMove==1 .and. SE5->E5_NATUREZ $ cCodNat .and. !lBrasil 
								_NewSe5->( dbSkip( ) )
								Loop
							End
	
							If nMove==2 .and. !(SE5->E5_NATUREZ $ cCodNat .AND. SE5->E5_TIPODOC $ "TR#TE")
								_NewSe5->( dbSkip( ) )
								Loop
							End
	
							If SE5->E5_SITUACA == "C"
								_NewSe5->( dbSkip() )
								Loop
							End
	
							//Transferencia ou estorno de transferencia carteira descontada
							If SE5->E5_TIPODOC $ "TR#TE" .AND. !Empty(SE5->E5_NUMERO)
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Por conta de uma integracao com a RM, os campos E5_PREFIXO e        ³
								//³E5_NUMERO sao utilizados pelo SIGALOJA na gravacao de               ³
								//³movimentos bancarios, valores estes que em nada tem a ver com       ³
								//³titulos do financeiro, sendo assim a regra de que o campo E5_NUMERO ³
								//³deve estar vazio para contabilizar mov. do tipo TR/TE.              ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						  		If !(Upper(AllTrim(SE5->E5_NATUREZ)) $ Upper(STR0053+"|"+STR0054)) //"Sangria","Troco" 
						        	_NewSe5->(dbSkip())
									Loop
								EndIf
	
							EndIf
							
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Posiciona na natureza.										  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							dbSelectArea( "SED" )
							dbSetOrder(1)
							SED->( dbSeek( cFilial+SE5->E5_NATUREZ ) )
							
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Posiciona no banco.											  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							dbSelectArea( "SA6" )
							dbSetOrder(1)
							SA6->( dbSeek( cFilial+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA ) )
							
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Posiciona no cheque.							    ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							dbSelectArea( "SEF" )
							dbSetOrder(1)
							SEF->(dbSeek( cFilial+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA+PADR(SE5->E5_NUMCHEQ,nLenCheque) ) )
							
							If l370E5T
								Execblock("F370E5T",.F.,.F.)
							EndIf
							
							dbSelectArea( "SE5" )
							
							lPadrao := VerPadrao(cPadrao)
							If lPadrao
								If !lCabecalho
									a370Cabecalho(@nHdlPrv,@cArquivo)
								EndIf
								If lUsaFlag
									aAdd(aFlagCTB,{"E5_LA","S","SE5",SE5->(Recno()),0,0,0})
								EndIf
								
								nTotDoc	:=	DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
								nTotProc+= nTotDoc
								nTotal	+= nTotDoc
								
								If mv_par12 == 2	// Por documento
									If nTotDoc > 0
										If lSeqCorr
											aDiario := {{"SE5",SE5->(recno()),SE5->E5_DIACTB,"E5_NODIA","E5_DIACTB"}}
										EndIf
										
										IF lGroupDoc
											// Movimentação Bancária - Controle por documento 
											cDocTB := IF(SE5->E5_RECPAG == 'P', ALLTRIM(SE5->E5_NUMCHEQ), ALLTRIM(SE5->E5_DOCUMEN))
											nRecNoSE5 := _NewSe5->(RECNO())
											_NewSe5->(DBSKIP())
											IF _NewSe5->(EOF())
												lQuebraDoc := .T.
											ELSE
												IF _NewSe5->E5_TIPODOC = 'TR'	// Transferências Bancárias - Controla o mesmo documento por campos diferentes
													lQuebraDoc := (cDocTB <> IF(_NewSe5->E5_RECPAG == 'P', ALLTRIM(_NewSe5->E5_NUMCHEQ), ALLTRIM(_NewSe5->E5_DOCUMEN)))
												ELSE
													lQuebraDoc := (cDocTB <> ALLTRIM(_NewSe5->E5_DOCUMEN))
												ENDIF
											ENDIF
											_NewSe5->(DBGOTO(nRecNoSE5))
										ENDIF
										
										IF lQuebraDoc
											Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB,@aDiario)
										ENDIF
									EndIf
									aflagCTB := {}
								EndIf
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Atualiza Flag de Lan‡amento Cont bil		  ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If LanceiCtb
									AAdd(aRecsSE5,{ SE5->(Recno()),'FINM030','FK5'}) // Mov.Bancaria
									AADD(aRecsSEF,SEF->(RECNO()))
								EndIf
							EndIf
							_NewSe5->( dbSkip() )
						EndDo
		
						If mv_par12 == 3 
							If nTotProc > 0 // Por processo
								Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
								nTotProc := 0
							EndIf
							aFlagCTB := {}
						EndIf
					Next nLacoTrf
				Next nMove
				
				fErase(cIndex2+OrdBagExt())
				_NewSe5->(DbCloseArea())
				dbSelectArea("SE5")
						
			EndIf	
			RestArea(aRecSE5)
		EndIf
		
		//Seto o flag de contabilizacao - SE5
		If Len(aRecsSE5) > 0 .and. !lUsaFlag
			dbSelectArea("SE5")
			DbGoTop()
			For nX := 1 to Len(aRecsSE5)
				dbGoto(aRecsSE5[nX][NRECNO])
				FA370Grv(aRecsSE5[nX])
			Next
			aRecsSE5 := {}
		EndIf
		
		//Seto o flag de contabilizacao - SEF
		If Len(aRecsSEF) > 0 .and. !lUsaFlag
			dbSelectArea("SEF")
			For nX := 1 to Len(aRecsSEF)
				dbGoto(aRecsSEF[nX])
				If !(SEF->(EoF()))
					Reclock("SEF")
					REPLACE EF_LA With "S"
					SEF->(MsUnlock())
				EndIf
			Next
			aRecsSEF := {}
			SEF->(dbGoBottom())
			SEF->(dbSkip())
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Caixinha   SEU990             				     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If mv_par06 != 3
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Caixinha   SEU990             				  						  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea( "SET" )
			dbSetOrder( 1 )
			dbSeek( cFilial)
			nOrderSEU	:=	IIf(mv_par07==1,2,4)
			bCampo		:=	IIf(mv_par07==1,{|| EU_BAIXA },{|| EU_DTDIGIT })
			While !Eof() .And. cFilial == SET->ET_FILIAL
				dbSelectArea( "SEU" )
				dbSetOrder( nOrderSEU )
				dbSeek( cFilial + SET->ET_CODIGO + DTOS(MV_PAR04) , .T. )
				While !Eof() .And. cFilial == SEU->EU_FILIAL .And. EU_CAIXA == SET->ET_CODIGO .And. Eval(bCampo) <= mv_par05
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Ponto de Entrada para filtrar registros do SEU. ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If l370EUFIL
						If !Execblock("F370EUF",.F.,.F.)
							dbSkip()
							Loop
						EndIf
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ VerIfica se ser  gerado Lan‡amento Cont bil			  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If SEU->EU_LA == "S"
						SEU->( dbSkip())
						Loop
					EndIf
					
					// Tipo 00 sem Nro de adiantamento = Despesa (P)
					// Tipo 00 com Nro de adiantamento = Prestação de contas (R)
					// Tipo 01 - Adiantamento (P)
					// Tipo 02 - Devolucao de adiantamento (R)
					// Tipo 10 - Movimento Banco -> Caixinha  (R)
					// Tipo 11 - Movimento Caixinha -> Banco (P)
					
					lSkipLct := .F.
					
					//Receber
					//VerIfico se eh Despesa. Se for, ignoro
					If mv_par06 == 1 .and. SEU->EU_TIPO $ "00" .AND. EMPTY(SEU->EU_NROADIA)
						lSkipLct := .T.
					EndIf
					//VerIfico se eh um Adiantamento ou Devolucao para o banco. Se for Ignoro
					If mv_par06 == 1 .and. SEU->EU_TIPO $ "01/11"
						lSkipLct := .T.
					EndIf
					
					//Pagar
					//VerIfico se eh Prestacao de contas de adiantamento para o caixinha.
					//Se for, ignoro pois eh movimento de entrada
					If mv_par06 == 2 .and. SEU->EU_TIPO $ "00" .and. !EMPTY(SEU->EU_NROADIA)
						lSkipLct := .T.
					EndIf
					//VerIfico se eh uma devolucao de dinheiro de adiantamento para o caixinha ou
					// se eh uma reposicao (Banco -> Caixinha).
					// Se for Ignoro pois eh movimento de entrada!!
					If mv_par06 == 2 .and. SEU->EU_TIPO $ "02/10"
						lSkipLct := .T.
					EndIf
					
					If lSkipLct
						SEU->( dbSkip())
						Loop
					EndIf
					
					
					//Reposicao = 10 - Devolucao de reposicao = 11
					If SEU->EU_TIPO $ "10/11"
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Posiciona no banco.											  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						dbSelectArea( "SA6" )
						dbSetOrder(1)
						dbSeek( cFilial+SET->ET_BANCO+SET->ET_AGEBCO+SET->ET_CTABCO )
						cPadrao := "573"
					Else
						If SEU->EU_TIPO == '02'
							cPadrao := "579"
						Else
							cPadrao := "572"
						EndIf
					EndIf
					
					dbSelectArea("SEU")
					lPadrao := VerPadrao(cPadrao)
					If lPadrao
						If !lCabecalho
							a370Cabecalho(@nHdlPrv,@cArquivo)
						EndIf
						If lUsaFlag
							aAdd(aFlagCTB,{"EU_LA","S","SEU",SEU->(Recno()),0,0,0})
						EndIf
						nTotDoc	:=	DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)
						nTotProc	+= nTotDoc
						nTotal	+=	nTotDoc
						If mv_par12 == 2 
							If nTotDoc > 0 // Por documento
								If lSeqCorr
									aDiario := {{"SEU",SEU->(recno()),SEU->EU_DIACTB,"EU_NODIA","EU_DIACTB"}}
								EndIf
								Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB,@aDiario)
							EndIf
							aFlagCTB := {}
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Atualiza Flag de Lan‡amento Cont bil		  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If LanceiCtb
							If !lUsaFlag
								Reclock("SEU")
								REPLACE EU_LA With "S"
								MsUnlock( )
							EndIf    
						ElseIf lUsaFlag
							If (nPosReg  := aScan(aFlagCTB,{ |x| x[4] == SEU->(Recno()) }))>0
								aFlagCTB := Adel(aFlagCTB,nPosReg)
								aFlagCTB := aSize(aFlagCTB,Len(aFlagCTB)-1)
							EndIf							
						EndIf
					EndIf
					dbSkip()
				Enddo
				DbSelectArea("SET")
				DbSkip()
			Enddo
			If mv_par12 == 3 
				If nTotProc > 0 // Por processo
					Ca370Incl(cArquivo,@nHdlPrv,cLote,nTotal,@aFlagCTB)
					nTotProc := 0
				EndIf
				aFlagCTB := {}
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava Rodap‚ 													  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lCabecalho .And. mv_par12 == 1 // Por periodo
			If nTotal > 0
				RodaProva(nHdlPrv,nTotal)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Envia para Lan‡amento Cont bil 							  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				lDigita:=IIf(mv_par01==1,.T.,.F.)
				lAglut :=IIf(mv_par02==1,.T.,.F.)
//				BEGIN TRANSACTION
				cA100Incl(cArquivo,nHdlPrv,3,cLote,lDigita,lAglut,,iif(cPadrao=="559",dDataSEF,Nil),,@aFlagCTB)
//				END TRANSACTION
			EndIf
			aFlagCTB := {}
		EndIf
		
	Next 	  // final do la‡o dos dias
	
	END SEQUENCE
	
	dbSelectArea("SE5")
	RetIndex("SE5")
	fErase(cIndex+OrdBagExt())
	
	If mv_par06 = 2 .Or. mv_par06 = 4
			If Select("TRBSE2") > 0
				dbSelectArea( "TRBSE2" )
				dbCloseArea()
			EndIf
		
	ElseIf mv_par06 = 3 .Or. mv_par06 = 4
		dbSelectArea("SEF")
		RetIndex("SEF")
		
	EndIf

	If Select(cAliasEF) > 0
		dbSelectArea(cAliasEF)
		dbCloseArea()
		fErase(cAliasEF + OrdBagExt())
		fErase(cAliasEF + GetDbExtension())
	EndIf

	dbSelectArea("SM0")
	dbSkip()
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Data inicial precisa ser "resetada"                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	mv_par04 := mv_par04 - nLaco + 2
	
Enddo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Recupera o valor real da data base por seguranca	  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dDataBase := dDataAnt

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Recupera a filial original                      	  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SM0->(dbGoto(nRegEmp))
cFilAnt := IIf( lFWCodFil, FWGETCODFILIAL, SM0->M0_CODFIL )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Recupera a Integridade dos Dados									  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MsUnlockAll()

dbSelectArea( "SE1" )
dbSetOrder( 1 )
dbSeek(xFilial())
dbSelectArea( "SE2" )
dbSetOrder( 1 )
dbSeek(xFilial())
dbSelectArea("SEF")
dbSetOrder(1)
dbSeek(xFilial())
dbSelectArea( "SE5" )
Retindex("SE5")
dbClearFilter()

//exclui temporario de contabilizacao no banco de dados utilizado para otimizacao validacao do lancamento
If FindFunction("CtbFinLan")
	//FINALIZA E APAGA ARQUIVO TMP NO BANCO
	CtbFinLan()
EndIf
If Funname() == "FINA370" .and. !lBlind
	oSelf:Savelog("FIM")
EndIf

If lGerouTxt .and. !lBlind .And. !lCtbafin
	If nTpLog == 1
		Aviso(STR0031,STR0052+cCaminho+"'.",{'OK'},2) //"Foram gravados registros de inconsistências na tabela SE5 nesta contabilização. Favor verificar os registros no arquivo 'Fina370Log.TXT', existente na pasta '"
	ElseIf nTpLog == 2
		FA370Rel(aIncons)
	EndIF
EndIf

//--------------------------------------------
// Ponto de Entrada ao final do processamento
//   para processos complementares do usuario
//--------------------------------------------
If l370CTBUSR
	Execblock("F370CTBUSR",.F.,.F.)
EndIf

Return NIL

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FA370CONC³ Autor ³ Vinicius Barreira	  ³ Data ³ 24/08/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Tela de Aviso de Falha na consistˆncia do SE5				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA370CONC() 															  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ SIGAFIN																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA370CONC()
Local cCadast	:= STR0019 //"Contabiliza‡„o"
Local lRet 		:= .F.
Local lUsaLog	:= SuperGetMv("MV_FINLOG",.T.,.F.)
Local cTexto	:= ""
Local cDate		:= DtoC(date())
Local cHour		:= substr(time(),1,5)
Local cPathLog := GetMv("MV_DIRDOC")
Local cLogArq 	:= "Fina370Log.TXT"
Local cCaminho := cPathLog + cLogArq
Local lCtbafin := FwIsInCallStack("CTBAFIN")

If valtype("nTpLog") == "U"
	nTpLog := 1
EndIf

If !lBlind

	If lUsaLog

	   cTexto += "*** "+cDate+" "+cHour+"--> "+ STR0025 + "PREF. + NUM + PARC + TIP"+chr(13)+chr(10) // "Dados do título:"
	   cTexto += SE5->E5_PREFIXO+"-"+SE5->E5_NUMERO+"-"+SE5->E5_PARCELA+"-"+SE5->E5_TIPO + chr(13)+chr(10)
	   cTexto += STR0035 + ": " + ALLTRIM(STR(SE5->(RECNO()))) +chr(13)+chr(10)    //"Registro SE5 ->"
	   cTexto += "*** ---------------------- ***"
		
		If lCtbafin .Or. nTpLog == 1  
			FinLog( cCaminho, cTexto ) 
		ElseIf nTpLog == 2
			aAdd(aIncons, cTexto )
		EndIf
		
		lGerouTxt := .T.
		lRet := .T.
	EndIf
Else 
	If lUsaLog
	   cTexto += "*** "+cDate+" "+cHour+"--> "+ STR0025 + "PREF. + NUM + PARC + TIP"+chr(13)+chr(10) // "Dados do título:"
	   cTexto += SE5->E5_PREFIXO+"-"+SE5->E5_NUMERO+"-"+SE5->E5_PARCELA+"-"+SE5->E5_TIPO + chr(13)+chr(10)
	   cTexto += STR0035 + ": " + ALLTRIM(STR(SE5->(RECNO()))) +chr(13)+chr(10)    //"Registro SE5 ->"
	   cTexto += "*** ---------------------- ***"

		If lCtbafin .Or. nTpLog == 1  
			FinLog( cCaminho, cTexto ) 
		ElseIf nTpLog == 2
			aAdd(aIncons, cTexto )
		EndIf
		
		lGerouTxt := .T.
		lRet := .T.

	EndIf
EndIf
	
Return lRet
	
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ Fa370Rat ³ Autor ³ Pilar S. Albaladejo   ³ Data ³ 25/08/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Grava linha de rateio no arquivo de contra-prova			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ Fa370Rat()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ SIGAFIN																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa370Rat(cArqRat,nHdlPrv,cArquivo)

Local nBytes := 0
Local nHdlRateio
Local nTotal := 0
Local nTamArq
Local xBuffer, cArqOrig, cArqDest

// Abre arquivo de rateio
cArqRat		:= GetMv("MV_PROVA") + cArqRat + ".LAN"
If !FILE(cArqRat)
	Help(" ",1,"Fa370NOARQ",,cArqRat,3,1)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza o log de processamento com o erro  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Funname() == "FINA370" .and. !lBlind
		oSelf:Savelog("ERRO","Fa370NOARQ",Ap5GetHelp("Fa370NOARQ")+cArqRat)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Utilizacao da funcao ProcLogAtu para permitir a gravacao ³
		//³do log no CV8 quando do uso da classe tNewProcess que    ³
		//³grava o LOG no SXU (FNC 00000028259/2009)                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		ProcLogAtu("ERRO","Fa370NOARQ",Ap5GetHelp("Fa370NOARQ")+cArqRat)	
	Else	
		ProcLogAtu("ERRO","Fa370NOARQ",Ap5GetHelp("Fa370NOARQ")+cArqRat)
	EndIf
	Return 0
EndIf

If nHdlPRv == 0 .or. (nHdlPrv == 65536 .and. GetHProva() < 0 )
	a370Cabecalho(@nHdlPrv,@cArquivo,.T.)
	lCabecalho := .T.
EndIf
nHdlPrv  := GetHProva()
cArquivo := GetHFile()

nHdlRateio	:= Fopen(cArqRat)
nTamArq		:= FSEEK(nHdlRateio,0,2)
xBuffer		:= Space( 312 )
FSEEK(nHdlRateio,0,0)
FREAD(nHdlRateio,@xBuffer,312)

While .T.
	If nBytes < nTamArq
		xBuffer:=Space(312)
		FREAD(nHdlRateio,@xBuffer,312)
		If  Substr(xBuffer,309,2) = "FF"     // Fim de Arquivo
			Exit
		EndIf
		nTotal += Val(Substr(xBuffer,42,16))
		// Escreve no arquivo de contra-prova
		FWRITE(nHdlPrv,xBuffer,312)
		dbCommit()
		nBytes+=312
	Else
		Exit
	EndIf
End

// Renomeia arquivo de rateio
Fclose(nHdlRateio)
cArqOrig:=Trim(cArqRat)
cArqDest:=Substr(cArqRat,1,Len(cArqRat)-4)+".#LA"
fRename(cArqOrig,cArqDest)
Return nTotal

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³a370Cabeca³ Autor ³ Wagner Xavier 		  ³ Data ³ 24/08/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Monta o arquivo de Contra Prova (Lancamentos off line) 	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³a370Cabeca																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³SIGAFIN																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a370Cabecalho(nHdlPrv,cArquivo,lCriar)
lCriar     := If(lCriar=NIL,.f.,lCriar)
nHdlPrv    := HeadProva(cLote,"FINA370",Substr(cUsuario,7,6),@cArquivo,lCriar)
lCabecalho := .T.
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Ca370Incl ³ Autor ³ Claudio D. de Souza	  ³ Data ³ 12/08/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Envia lancamentos para contabilizade.                  	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³Ca370Incl 																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³FINA370																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Ca370Incl(cArquivo,nHdlPrv,cLote,nTotal,aFlagCTB,aDiario)
Local lDigita,;
		lAglut 
Default aDiario := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava Rodap‚ 													  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nHdlPrv > 0
	RodaProva(nHdlPrv,nTotal)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Envia para Lan‡amento Cont bil 							  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lDigita:=IIf(mv_par01==1,.T.,.F.)
	lAglut :=IIf(mv_par02==1,.T.,.F.)

	cA100Incl(cArquivo,nHdlPrv,3,cLote,lDigita,lAglut,,,,@aFlagCTB,,aDiario)

	lCabecalho := .F.
	nHdlPrv := 0
EndIf

aFlagCTB := {}
aDiario	:= {}

Return Nil


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A370CanProºAutor  ³Marcos S. Lobo      º Data ³  06/26/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Cria Semaforo de processamento e verIfica concorrencia com  º±±
±±º          ³base nos intervalos de parametros                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP - Contabilizacao Off-Line Financeiro                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A370CanProc(nCart, dDtVldDe, dDtVldAte, cFilDe, cFilAte,oSelf)
Local lRet		:= .F.
Local nX		:= 1
Local aInfos	:= {}
Local nEr		:= 0 
Local cFile		:= ""
Local cBuffer	:= ""
Local cUserLck	:= ""
Local dDTDe
Local dDTAte
Local nHandle 	:= -1
Local lCreate	:= .F.
Local lOK
Local cUserCTB	:= PADR('SCHED',15)

Default cFilDe := cFilAnt
Default cFilAte:= cFilAnt

If !lBlind
	cUserCTB := cUserName
EndIf
 
While !LockByName("FINA370LOCKPROC"+cEmpAnt,.T.,.T.,.T.)
    nER++
	If !lBlind
		MsAguarde({|| Sleep(1000) }, STR0026+ALLTRIM(STR(nER)), STR0027) //"Semaforo de processamento... tentativa "#"Aguarde, arquivo sendo criado por outro usuário."
	Else
		Sleep(5000)		
	EndIf
	If nER > 5	/// A PARTIR DA QUINTA TENTATIVA
		If !lBlind
			If Aviso(STR0028,STR0029,{STR0030,STR0034},2) == 2//"Criação de Semaforo de processamento."#"Não foi possivel acesso exclusivo para criar o semaforo de processamento."#"Repetir"#"Fechar"
				If Funname() == "FINA370" .and. !lBlind
					oSelf:Savelog("ERRO",STR0031,STR0032+STR0033)	
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Utilizacao da funcao ProcLogAtu para permitir a gravacao ³
					//³do log no CV8 quando do uso da classe tNewProcess que    ³
					//³grava o LOG no SXU (FNC 00000028259/2009)                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					ProcLogAtu("ERRO",STR0031,STR0032+STR0033)						
				Else	
					ProcLogAtu("ERRO",STR0031,STR0032+STR0033)	
				EndIf	
				Return lRet
			Else
				nER := 0
			EndIf		
		ElseIf nER >= 30
			If Funname() == "FINA370" .and. !lBlind
				oSelf:Savelog("ERRO",STR0031,STR0032+STR0033)	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Utilizacao da funcao ProcLogAtu para permitir a gravacao ³
				//³do log no CV8 quando do uso da classe tNewProcess que    ³
				//³grava o LOG no SXU (FNC 00000028259/2009)                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ProcLogAtu("ERRO",STR0031,STR0032+STR0033)		
			Else	
				ProcLogAtu("ERRO",STR0031,STR0032+STR0033)	
			EndIf	
			Return lRet
		EndIf
    EndIf
EndDo

//MakeDir("\SEMAFORO\")
cFile := "CTB370"+AllTrim(cEmpAnt)

lCriaTrab := !(MsFile(cFile,,"TOPCONN"))

If !lCriaTrab
	If Select("SEM370") <= 0
		dbUseArea(.T.,'TOPCONN',cFile,"SEM370",.T.,.F.)
	EndIf
	If (lCriaTrab := VALTYPE(SEM370->DTDE) == 'D')
		SEM370->(DBCLOSEAREA())
		MSERASE(cFile,,"TOPCONN")
	Endif
EndIf

If lCriatrab
	aStruct  := {}
	AAdd( aStruct, { "FILDE"	, "C", Len( cFilAnt )	, 0 } )
	AAdd( aStruct, { "FILATE"	, "C", Len( cFilAnt )	, 0 } )
	AAdd( aStruct, { "DTDE"		, "C", 8 				, 0 } )
	AAdd( aStruct, { "DTATE"	, "C", 8 				, 0 } )
	AAdd( aStruct, { "CCART"	, "C", 1				, 0 } )
	AAdd( aStruct, { "CUSER"	, "C", Len( cUserCTB )	, 0 } )
	AAdd( aStruct, { "HORAI"	, "C", Len(Time())		, 0 } )
	AAdd( aStruct, { "DATAI"	, "C", 8				, 0 } )
	AAdd( aStruct, { "HORAF"	, "C", Len(Time())		, 0 } )
	AAdd( aStruct, { "DATAF"	, "C", 8				, 0 } )
	MsCreate( cFile , aStruct , 'TOPCONN' )
EndIf

If Select("SEM370") <= 0
	dbUseArea(.T.,'TOPCONN',cFile,"SEM370",.T.,.F.)
EndIf

dbSelectArea("SEM370")			
dbGoTop()

lSai		:= .F.
lRet1		:= .T.
lRet2		:= .T.
lRet3		:= .T.	

While !lSai .and. SEM370->(!Eof())
	        
	If cFilDe <= SEM370->FILDE .and. cFilAte >= SEM370->FILATE
		lRet1 := .F.
	ElseIf cFilDe >= SEM370->FILDE .and. cFilDe <= SEM370->FILATE
		lRet1 := .F.
	ElseIf cFilAte >= SEM370->FILDE .and. cFilAte <= SEM370->FILATE
		lRet1 := .F.
	ElseIf cFilDe > cFilAte
		lRet1 := .F.		
	EndIf	    

	If DTOS(dDtVldDe) <= SEM370->DTDE .and. DTOS(dDtVldAte) >= SEM370->DTATE
		lRet2 := .F.
	ElseIf DTOS(dDtVldDe) >= SEM370->DTDE .and. DTOS(dDtVldDe) <= SEM370->DTATE
		lRet2 := .F.
	ElseIf DTOS(dDtVldAte) >= SEM370->DTDE .and. DTOS(dDtVldAte) <= SEM370->DTATE
		lRet2 := .F.
	ElseIf DTOS(dDtVldDe) > DTOS(dDtVldAte)
		lRet2 := .F.		
	EndIf
	
	If nCart == 4 .or. SEM370->CCART == "4"
		lRet3 := .F.
	ElseIf Str(nCart,1) == SEM370->CCART	
		lRet3 := .F.	
	EndIf
	
	If !lRet1 .and. !lRet2 .and. !lRet3
		/// SE LOCALIZOU NO MESMO PERIODO E NAS MESMAS FILIAIS E MESMA CARTEIRA

		If SEM370->(RLock())			/// SE CONSEGUIR ALOCAR 	
			SEM370->(dbDelete())		/// NAO TEM CONCORRENCIA
			SEM370->(MsUnlock())
		Else		
			If !lBlind
				Aviso(STR0031,STR0032+Alltrim(SEM370->CUSER)+" "+SEM370->HORAI+" "+STR0033,{STR0034},2) //"Atenção!"###"Este processo esta sendo utilizado com parametros conflitantes ( mesmo periodo ou carteiras ) por outro usuário ( "###" ) no momento. Verifique o período e os parametros selecionados para o processamento ou tente novamente mais tarde."###"Fechar"
			EndIf
		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza o log de processamento com o erro  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If Funname() == "FINA370" .and. !lBlind
					If ValType(oSelf) == "O"
						oSelf:Savelog("ERRO",STR0031,STR0032+Alltrim(SEM370->CUSER)+STR0033)
					Endif
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Utilizacao da funcao ProcLogAtu para permitir a gravacao ³
					//³do log no CV8 quando do uso da classe tNewProcess que    ³
					//³grava o LOG no SXU (FNC 00000028259/2009)                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					ProcLogAtu("ERRO",STR0031,STR0032+AllTrim(SEM370->CUSER)+STR0033)	
				Else	
    				ProcLogAtu("ERRO",STR0031,STR0032+Alltrim(SEM370->CUSER)+STR0033)
    			EndIf	
			lSai		:= .T.
		EndIf
	EndIf
	SEM370->(dbSkip())
EndDo

If !lSai
	RecLock("SEM370",.T.)
	SEM370->FILDE	:= PADR(cFilDe,LEN(cFilAnt))
	SEM370->FILATE	:= PADR(cFilAte,LEN(cFilAnt))
	SEM370->DTDE	:= DTOS(dDtVldDe)
	SEM370->DTATE	:= DTOS(dDtVldAte)
	SEM370->CCART	:= Str(nCart,1)
	SEM370->CUSER	:= cUserCTB
	SEM370->HORAI	:= Time()
	SEM370->DATAI	:= DTOS(Date())
	MsUnlock()	
	RecLock("SEM370",.F.)	// DEIXA REGISTRO ALOCADO
	lRet := .T.				// PROCESSAMENTO PODE SER EFETUADO
EndIf

UnLockByName("FINA370LOCKPROC"+cEmpAnt,.T.,.T.,.T.)

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A370FREEPRºAutor  ³Marcos S. Lobo      º Data ³  06/26/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Libera registro alocado no semaforo de processamento.       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP Contabilizacao Off-Line Financeiro                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A370FreeProc(aKeyProc)

Local cFile 	:= "CTB370"+AllTrim(cEmpAnt)
Local nER		:= 0
Local nI		:= NIL
Local lTRBEmpty := .F.

DEFAULT aKeyProc := NIL

If !( MsFile(cFile,,"TOPCONN") )
	Return
EndIf

If Select("SEM370") <= 0
	Return
EndIf

While !LockByName("FINA370LOCKPROC"+cEmpAnt,.T.,.T.,.T.)
    nER++
	If !lBlind
		MsAguarde({|| Sleep(1000) }, STR0026+ALLTRIM(STR(nER)), STR0029)//"Semaforo de processamento... tentativa "#"Aguarde, arquivo sendo criado por outro usuário."
	Else
		Sleep(5000)		
	EndIf
	If nER > 5	/// A PARTIR DA QUINTA TENTATIVA
		If !lBlind
			If Aviso(STR0028,STR0029,{STR0030,STR0034},2) == 2//"Gravacao de Semaforo de processamento."#"Não foi possivel acesso exclusivo para gravar o semaforo de processamento."#"Repetir"#"Fechar"
				If Funname() == "FINA370" .and. !lBlind
					oSelf:Savelog("ERRO",STR0031,STR0032+STR0033)	
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Utilizacao da funcao ProcLogAtu para permitir a gravacao ³
					//³do log no CV8 quando do uso da classe tNewProcess que    ³
					//³grava o LOG no SXU (FNC 00000028259/2009)                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					ProcLogAtu("ERRO",STR0031,STR0032+STR0033)	
				Else	
					ProcLogAtu("ERRO",STR0031,STR0032+STR0033)	
				EndIf
				
				Return
			Else
				nER := 0
			EndIf		
		ElseIf nER >= 30
			If Funname() == "FINA370" .and. !lBlind
				oSelf:Savelog("ERRO",STR0031,STR0032+STR0033)	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Utilizacao da funcao ProcLogAtu para permitir a gravacao ³
				//³do log no CV8 quando do uso da classe tNewProcess que    ³
				//³grava o LOG no SXU (FNC 00000028259/2009)                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ProcLogAtu("ERRO",STR0031,STR0032+STR0033)	
			Else	
				ProcLogAtu("ERRO",STR0031,STR0032+STR0033)	
			EndIf
			Return
		EndIf
    EndIf
EndDo

If !EMPTY(aKeyProc)
	cEval := ''
	For nI := 1 To Len(aKeyProc)
		cEval += "SEM370->" + aKeyProc[nI][1] + " =='" + aKeyProc[nI][2] + "' "
		If nI < Len(aKeyProc)
			cEval += " .and. "
		EndIf
	Next nI
	bEval := {|| &cEval }
Else
	bEval := {|| .T.}
EndIf

dbSelectArea("SEM370")
SEM370->(dbGoTop())
While !SEM370->(Eof()) 
	If Eval(bEval) .and. SEM370->(RLock())
		Field->HORAF	:= Time()
		Field->DATAF	:= DTOS(Date())
		MsUnlock()
		RecLock("SEM370",.F.)
		SEM370->(dbDelete())
		MsUnlock()
	EndIf
	SEM370->(DBSKIP())
EndDo

SEM370->(DBCLOSEAREA())
dbUseArea(.T.,'TOPCONN',cFile,"SEM370",.T.,.F.)
lTRBEmpty := SEM370->(EOF())
SEM370->(DBCLOSEAREA())

If lTRBEmpty
	MSERASE(cFile,,"TOPCONN")
Endif

UnLockByName("FINA370LOCKPROC"+cEmpAnt,.T.,.T.,.T.)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Ana Paula N. Silva     ³ Data ³24/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados         ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()
Local aRotina:={ 	{ STR0012,"AxPesqui" , 0 , 1},;  //"Localizar"
					{ STR0013,"fA100Pag" , 0 , 3},;  //"Pagar"
					{ STR0014,"fA100Rec" , 0 , 3},;  //"Receber"
					{ STR0015,"fA100Can" , 0 , 5},;  //"Excluir"
					{ STR0016,"fA100Tran", 0 , 3},;  //"Transferir"
					{ STR0017,"fA100Clas", 0 , 5} }  //"Classificar"
Return(aRotina)
                             


Static Function F370Process(oSelf)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Utilizacao da funcao ProcLogAtu para permitir a gravacao ³
//³do log no CV8 quando do uso da classe tNewProcess que    ³
//³grava o LOG no SXU (FNC 00000028259/2009)                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcLogAtu("INICIO")
If mv_par08 == 1
	If A370CanProc(mv_par06, mv_par04, mv_par05,mv_par09,mv_par10,oSelf)
		FA370Processa(.F.,oSelf)  // Chamada da funcao de Contabilizacao Off-Line
	EndIf
Else
		If A370CanProc(mv_par06, mv_par04, mv_par05,,,oSelf)
		 FA370Processa(.F.,oSelf)  // Chamada da funcao de Contabilizacao Off-Line
	EndIf	
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Utilizacao da funcao ProcLogAtu para permitir a gravacao ³
//³do log no CV8 quando do uso da classe tNewProcess que    ³
//³grava o LOG no SXU (FNC 00000028259/2009)                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ProcLogAtu("FIM")	

A370FreeProc()          

Return
	
	
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³F370CTBSELºAutor  ³Microsiga           º Data ³  03/05/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao que pesquisa e contabiliza todos os registro de um  º±±
±±º          ³ recibo gerado pelo FINA087a                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA370                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function F370CTBSEL( cSerie, cRecibo, nTotal, cLote, nHdlPrv, cArquivo, lUsaFlag, aFlagCTB, aCT5 )
Local lResult		:=	.T.
Local aListArea		:=	{ GetArea() } // Atencao: A primeira deve ser restaurada por ultimo. (UEPS)
Local i				:=	0
Local cKeyImp		:=	""
Local cAlias		:=	""
Local lAchou		:=	.F.
Local nLinha		:=	1 
Local aRecSEL		:= {}

lResult := VerPadrao( "575" )
    
	If lResult .and. !lCabecalho
		a370Cabecalho( @nHdlPrv, @cArquivo )	
		If nHdlPrv <= 0
			Help( " ", 1, "A100NOPROV" )
			lResult := .F.
		EndIf
	EndIf

	If lResult
		GetDBArea( "SEL", @aListArea )
		SEL->( DBSetOrder( 8 ) )	// EL_FILIAL+EL_SERIE+EL_RECIBO+EL_TIPODOC+EL_PREFIXO+EL_NUMERO+EL_PARCELA+EL_TIPO
		SEL->( DBSeek( xFilial("SEL") + cSerie + cRecibo ) )	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Gera Lancamento Contab. para RECIBO.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Do while	!SEL->( EOF() ) .and.;
					( SEL->EL_SERIE == cSerie ) .and.;
					( SEL->EL_RECIBO == cRecibo ) .and.;
					( SEL->EL_LA <> 'S' )

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Guarda Registro³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			AADD( aRecSEL, SEL->(RECNO()) )
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Posiciona Banco.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			GetDBArea( "SA6", @aListArea )
			SA6->( DbsetOrder( 1 ) )
			SA6->( DbSeek( xFilial("SA6") + SEL->EL_BANCO + SEL->EL_AGENCIA + SEL->EL_CONTA, .F.) )
			
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³VerIfica se tem titulo vinculado.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			GetDBArea( "SE1", @aListArea )
			SE1->( DbsetOrder( 2 ) )
			SE1->( DbSeek(	xFilial("SE1") +;
							SEL->EL_CLIORIG +;
							SEL->EL_LOJORIG +;
							SEL->EL_PREFIXO +;
							SEL->EL_NUMERO +;
							SEL->EL_PARCELA +;
							SEL->EL_TIPO, .F.) )

			If !SE1->( EOF() )
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Posiciona na Natureza do Titulo .³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				GetDBArea( "SED", @aListArea )
				SED->( DbsetOrder( 1 ) )
				SED->( DbSeek(	xFilial("SED") +;
								SE1->E1_NATUREZ, .F.) )
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Posiciona Cliente.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			GetDBArea( "SA1", @aListArea )
			SA1->( DbsetOrder( 1 ) )
			SA1->( DbSeek( xFilial("SA1") + SE1->E1_CLIENTE + SE1->E1_LOJA, .F.) )
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Posiciona no cabecalho da NF vinculada.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				Do Case
				Case ( Alltrim( SEL->EL_TIPO ) == Alltrim( GetSESnew("NCC") ) )
					cAlias := "SF1"
				Case ( Alltrim( SEL->EL_TIPO ) == Alltrim( GetSESnew("NDE") ) )
					cAlias := "SF1"         
				Otherwise
					cAlias := "SF2"    
				EndCase
				cKeyImp := 	xFilial(cAlias)	+;
							SE1->E1_NUM		+;
							SE1->E1_PREFIXO	+;
							SE1->E1_CLIENTE	+;
							SE1->E1_LOJA			

				If ( cAlias == "SF1" )
					cKeyImp += SE1->E1_TIPO
				EndIf

				Posicione( cAlias, 1, cKeyImp, "F" + SubStr( cAlias, 3, 1 ) + "_VALIMP1" )
				lAchou := .F.

			GetDBArea( "SEL", @aListArea )
			If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil 
				aAdd( aFlagCTB, {"EL_LA", "S", "SEL", SEL->( Recno() ), 0, 0, 0} )
			EndIf
			
			nTotal += DetProva( nHdlPrv,;
			                    "575" /*cPadrao*/,;
			                    "FINA087a" /*cPrograma*/,;
			                    cLote,;
			                    nLinha,;
			                    /*lExecuta*/,;
			                    /*cCriterio*/,;
			                    /*lRateio*/,;
			                    /*cChaveBusca*/,;
			                    aCT5,;
			                    /*lPosiciona*/,;
			                    @aFlagCTB,;
			                    /*aTabRecOri*/,;
			                    /*aDadosProva*/ )
			
			SEL->( DbSkip() )
		EndDo
	
		If !lUsaFlag .and. ( Len( aRecSEL ) > 0 )
			For i := 1 To Len( aRecSEL )
				SEL->( DBGoTo( aRecSEL[ i ] ) )
				RecLock( "SEL", .F. )
				Replace EL_LA With "S"
				MsUnLock()
			Next i

		EndIf
	
	EndIf

    // Restaura todas as areas. 
    // A ultima area a ser restaurada sera a area ativa no momento da chamada a esta funcao.
	for i := Len( aListArea	 ) to 1 Step -1 // UEPS
		RestArea( aListArea[ i ] )
	Next i

Return lResult

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GetDBArea ºAutor  ³Microsiga           º Data ³  03/06/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Seleciona uma area de dados, armazena a area numa lista    º±±
±±º          ³ para permitir a restauracao porterior.                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA370                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function GetDBArea( cAlias, aListGetArea )
Default cAlias			:= Alias()
Default aListGetArea	:= {}

	DBSelectArea( cAlias )
	// Pesquisa para evitar duplicidade.
	If ASCAN( aListGetArea, { | aVal | aVal[ 1 ] == cAlias } ) == 0
		AADD( aListGetArea, (cAlias)->( GetArea() ) )
	EndIf

Return NIL /*Function GetDBArea*/
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinA370T   ³ Autor ³ Marcelo Celi Marques ³ Data ³ 26.03.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada semi-automatica utilizado pelo gestor financeiro   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA370                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA370T(aParam)
	cRotinaExec := "FINA370"
	ReCreateBrow("SE2",FinWindow)      	
	FinA370()
	ReCreateBrow("SE2",FinWindow)      	

	dbSelectArea("SE2")
	
	INCLUI := .F.
	ALTERA := .F.

Return .T.	


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ F370RatFin ºAutor ³ Gustavo Henrique   º Data ³ 21/05/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Chamar a rotina de rateio do Contas a Pagar com tratamento º±±
±±º          ³ de ambiente                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Financeiro                                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F370RatFin( cPadrao, cProg, cLote, nTipo, cCodRateio, nOpc, cDebito, cCredito, cHistorico, nHdlPrv, nTotDoc, aFlagCTB )

Local dMvPar04 := CtoD( "  /  /  " )	
Local dMvPar05 := CtoD( "  /  /  " )
Local cArq	   := ""
                     
// Guarda as perguntas de data inicial e data final, que sao alteradas durante o processamento, 
// quando selecionada a contabilizacao pela data de emissao ao inves de database
If mv_par03 == 1
	dMvPar04 := mv_par04
	dMvPar05 := mv_par05
EndIf

SaveInter() 

If _lCtbProc 
	If Select(_cAliasBkp) == 0 .and. Select("TMP") > 0 .and. "CT2" $ TMP->(Field(1))
		dbChangeAlias( "TMP", _cAliasBkp )
	EndIf
	CtbRatFin( cPadrao, "FINA370", cLote, 4, " ", 4,,,, @nHdlPrv, @nTotDoc, @aFlagCTB )
	If Select("TMP") > 0 .and. !("CT2" $ TMP->(Field(1)))	// TMP quando contem CTJ, criada na RatFin
		TMP->(dbCloseArea())
		dbChangeAlias( _cAliasBkp, "TMP" )
	EndIf
Else
	If  Select(_cAliasBkp) == 0 .and. Select("TMP") > 0 .and. "CT2_" $ TMP->(Field(1))
		dbChangeAlias( "TMP", _cAliasBkp )
	EndIf
	CtbRatFin( cPadrao, "FINA370", cLote, 4, " ", 4,,,, @nHdlPrv, @nTotDoc, @aFlagCTB )
	If Select("TMP") > 0 .and. "CTJ" $ TMP->(Field(1))
		cArq := DbInfo(DBI_FULLPATH)
		cArq := AllTrim(SubStr(cArq,Rat("\",cArq)+1))
		TMP->(dbCloseArea()) 
		FErase(cArq)
		dbChangeAlias( _cAliasBkp, "TMP" )
	EndIf 
EndIf

RestInter()

If mv_par03 == 1
	mv_par04 := dMvPar04
	mv_par05 := dMvPar05
EndIf

Return .T.

/*/{Protheus.doc}FA370Grv
Função de atualização do campo LA para as novas tabelas do financeiro ( FK1, FK2 e FK5)
@author William Matos Gundim Junior
@param aRecsSE5 - x[1] - Recno | x[2] - Model | x[3] - Alias.
@param aFlagCTB
@since  21/04/2014
@version 12
/*/
Function FA370Grv(aArray)
Local aArea := GetArea()
Local cLog  := ""
Local oModel
Local oFKA 
Local cTab := ''
Default aArray := {}

If ValType(aArray[NALIAS]) == 'C'

	cTab := aArray[NALIAS]
	
	If !Empty(aArray[NMODEL])	
		oModel := FWLoadModel(aArray[NMODEL])
		oModel:SetOperation(MODEL_OPERATION_UPDATE)
		oModel:Activate()
		//Atualiza o campo Identifica Lançamento;
		oFKA := oModel:GetModel('FKADETAIL')
		If oFKA:SeekLine( { {"FKA_IDORIG", SE5->E5_IDORIG } } )
			oModel:SetValue( cTab + 'DETAIL', cTab + '_LA', "S")
			
			If oModel:VldData()
				oModel:CommitData()
				dbGoto(aArray[NRECNO])
				Reclock("SE5")
				REPLACE E5_LA With "S"
				MsUnlock()
			Else
				cLog := cValToChar(oModel:GetErrorMessage()[4]) + ' - '
				cLog += cValToChar(oModel:GetErrorMessage()[5]) + ' - '
				cLog += cValToChar(oModel:GetErrorMessage()[6]) + ' - '
				cLog += "RECNO " + str( SE5->(Recno()) )         	
				Help( ,,"FN370VL",,cLog, 1, 0 )
			Endif
		Else
			cLog := STR0059 +  SE5->E5_IDORIG // "Registro FKA não encontrado: " 
			Help( ,,"FN370VL",,cLog, 1, 0 )
		Endif	
	
		oModel:Deactivate()
		oModel:Destroy()
		oModel:=nil				
		oFka:=nil
	Else
		// Não realiza a migração de valores acessórios pois estes já devem estar migrados ao migrar a baixa
		Reclock("SE5", .f.)
		REPLACE E5_LA With "S"
		MsUnlock()
	EndIf	
EndIf

RestArea(aArea)

Return 

//-------------------------------------------------------------------
/*/{Protheus.doc}FA370Rel
Cabecalho do relatorio das Inconsistências da Contabilização Offline
@author Caique Bispo Ferreira
@since  04/11/2014
@version 12
/*/
//-------------------------------------------------------------------

Function FA370Rel(aIncons)

Local cPict          := ""
Local imprime        := .T.

Private cDesc1       := STR0058 //"Este programa tem como objetivo imprimir relatorio com as"
Private cDesc2       := STR0057 //" Inconsistencias da Contabilizacao" 
Private cDesc3       := STR0057 //"Inconsistências da Contabilização"
Private titulo       := STR0057 //"Inconsistências da Contabilização" 
Private nLin         := 80

Private Cabec1       := STR0057//"Inconsistencias da Contabilizacao"
Private Cabec2       := ""
Private aOrd         := {}
Private lEnd         := .F.
Private limite       := 220
Private tamanho      := "M"
Private nomeprog     := "FINA370" 
Private nTipo        := 10
Private aReturn      := { "Zebrado", 1, STR0038, 2, 2, 1, "", 1}///"Administracao"
Private nLastKey     := 0
Private cbtxt        := Space(10)
Private cbcont       := 00
Private CONTFL       := 01
Private m_pag        := 1
Private wnrel        := "FA370REL"
Private nOrdem       := 1

wnrel := SetPrint(,wnrel,,@titulo,cDesc1,cDesc2,cDesc3,.F.,"",.F.,Tamanho,,.F.)

If nLastKey == 27
	Return
Endif

SetDefault( aReturn ,  ,,,"M" , 2 ) 

If nLastKey == 27
   Return
Endif

nTipo := If(aReturn[4]==1,10,15)

RptStatus({|lEnd| FA370Run(lEnd,WnRel,nOrdem,aIncons)},Titulo)

Return 

//-------------------------------------------------------------------
/*/{Protheus.doc}FA370Run
Impressão das Inconsistências da Contabilização Offline
@author Caique Bispo Ferreira
@since  04/11/2014
@version 12
/*/
//-------------------------------------------------------------------

Static Function FA370Run(lEnd,WnRel,nOrdem,aIncons)

Local nTxt := ""

For nTxt := 1 to Len(aIncons)
	
	If lEnd
      @nLin,00 PSAY STR0039
      Exit
	Endif
	If nLin > 59 // Salto de Página. Neste caso o formulario tem 59 linhas...
      Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho,nTipo)
      nLin := 8
	Endif
    @nLin,00 PSAY aIncons[nTxt]
	nLin := nLin + 1 

Next nTxt
              
SET DEVICE TO SCREEN

If aReturn[5]==1
   dbCommitAll()
   SET PRINTER TO
   OurSpool(wnrel)
Endif

MS_FLUSH()

Return

//-------------------------------------------------------------------
/*/{Protheus.doc}FA370TXT
Leitura do log de inconsistencias.
@author Caique Bispo Ferreira
@since  04/11/2014
@version 12
/*/
//-------------------------------------------------------------------
Function FA370TXT(cCaminho)
Local aIncons := {}
Local nBtLidos
Local cBuffer
Local nHdl    := -1
Local nTamFile := 0

If File( cCaminho )
	nHdl := fOpen(cCaminho,0)
	If nHdl >= 0
		nTamFile := fSeek(nHdl,0,2)
		fSeek(nHdl,0,0)
		cBuffer  := Space(nTamFile)                // Variavel para criacao da linha do registro para leitura
		nBtLidos := fRead(nHdl,@cBuffer,nTamFile)  // Leitura  do arquivo
		fClose(nHdl)
		aAdd( aIncons,cBuffer)
	EndIf
EndIf 

Return aIncons

//-------------------------------------------------------------------
/*/{Protheus.doc}FinLog
Gravação do log de inconsistencias.
@author Caique Bispo Ferreira
@since  12/05/2015
@version 12
/*/
//-------------------------------------------------------------------
Function FinLog( cArquivo, cTexto )

Local nHdl 		:= 0

If !File(cArquivo)
	nHdl := FCreate(cArquivo)
Else
	nHdl := FOpen(cArquivo, FO_READWRITE)
Endif

FSeek(nHdl,0,FS_END)
cTexto += Chr(13)+Chr(10)
FWrite(nHdl, cTexto, Len(cTexto))
FClose(nHdl)

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ F370Fil ºAutor ³ Julio Saraiva 	º Data ³  14/05/15	    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Retorna filiais que o usuario logado tem acesso            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ EXPC1 - Filial inicial informada no range                  º±±
±±º          ³ EXPC2 - Filial final   informada no range                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPC1 - String com as filiais que o usuario tem acesso     º±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function F370Fil( cFilIni, cFilFim )

Local aFils		:= {}
Local aFlUser		:= {}
Local i			:= 0
Local j			:= 0 
Local nTamFil   := ""
Local lSumRule	:= FWUsrGrpRule(__cUserId) == "3"
Local lAdmUsFl	:= FindFunction("ADMGTUSFL")

Default cFilIni	:= Space( TamSX3( "E2_FILIAL" )[1] )
Default cFilFim	:= PadR( "Z", TamSX3( "E2_FILIAL" )[1], "Z" )

nTamFil := len(cFilIni) 

If aPswUser == nil
	PswOrder( 1 )
	PswSeek( __cUserId, .T. )
	aPswUser := PswRet()
Else
	PswOrder( 2 )
	PswSeek( aPswUser[1][2], .T. )
Endif

// Prioriza informacao do grupo?
If ( ValType( aPswUser ) == "A" ) .and. ( (aPswUser[2][11]) .Or. lSumRule )
	For i := 1 To Len( aPswUser[1][10] )
		// Pesquisa o(s) Grupo(s) que o Usuario participa
		PswOrder( 1 )
		If PswSeek( aPswUser[1][10][i], .F. )
			aPswGrupo := FwGrpEmp(aPswUser[1][10][i])
			If ( ValType( aPswGrupo ) == "A" )
				For j := 1 To Len( aPswGrupo)
					If	aPswGrupo[j] == "@@@@"
						aFils:=LoadFils()
						Exit
					ElseIf	SubStr( aPswGrupo[j], 1, Len(cEmpAnt) ) == cEmpAnt
						If  SubStr( aPswGrupo[j], 3, nTamFil ) >= cFilIni .And. ;
							SubStr( aPswGrupo[j], 3, nTamFil ) <= cFilFim  
							aadd(aFils,SubStr( aPswGrupo[j], 3, nTamFil ))
						EndIf
					EndIf					
				Next j
			EndIf
		EndIf
	Next i
// Prioriza Informacao do Usuario
Else
	If lAdmUsFl
		aFlUser := ADMGTUSFL(.T.)
	EndIf

	If ( ValType( aPswUser ) == "A" )
		For i := 1 To Len( aPswUser[2][6] )
			If	aPswUser[2][6][i] == "@@@@" 
				aFils:=LoadFils()			
				Exit
			ElseIf	SubStr( aPswUser[2][6][i], 1, 2 ) == cEmpAnt .And. aScan(aFlUser,SubStr( aPswUser[2][6][i], 3, nTamFil )) > 0
				If  SubStr( aPswUser[2][6][i], 3, nTamFil ) >= cFilIni .And. ;
					SubStr( aPswUser[2][6][i], 3, nTamFil ) <= cFilFim   	
					aadd(aFils,SubStr( aPswUser[2][6][i], 3, LEN(aPswUser[2][6][i]) )) 
				EndIf
			EndIf
		Next i
	EndIf
EndIf

Return aFils  

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ LoadFils ºAutor ³ Julio Saraiva 	º Data ³  14/05/15  	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Retorna filiais que o usuario logado tem acesso            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros						                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ EXPC1 - array com as filiais que o usuario tem acesso     º±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/


Function LoadFils()
Local aFiliais	:= {}
Local aSM0		:= AdmAbreSM0()
Local nX		:= 0

For nX := 1 to Len(aSM0)
    If Alltrim(aSM0[nX][1]) != Alltrim(cEmpAnt)
    	Loop
    Else
    	aadd(aFiliais,aSM0[nX][2])
    Endif
    
Next nX


Return aFiliais

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ F370ChkAgp ºAutor ³ Rodrigo Oliveira   º Data ³ 17/12/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Verificar na SE5 se o imposto foi aglutinado ou não.       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Financeiro                                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function F370ChkAgp()

Local aArea	:= GetArea()
Local cQuery	:= ""
Local lRet		:= .F.

cQuery := "SELECT E5_AGLIMP AGP"
cQuery += " FROM " + RetSqlName("SE5") + " SE5 "
cQuery += " WHERE E5_FILIAL = 	'" + xFilial("SE2") + "' "
cQuery += " AND E5_PREFIXO = 	'" + SE2->E2_PREFIXO + "' "
cQuery += " AND E5_NUMERO = 	'" + SE2->E2_NUM + "' "
cQuery += " AND E5_PARCELA = 	'" + SE2->E2_PARCELA + "' "
cQuery += " AND E5_TIPO = 		'" + SE2->E2_TIPO + "' "
cQuery += " AND E5_CLIFOR = 	'" + SE2->E2_FORNECE + "' "
cQuery += " AND E5_LOJA = 		'" + SE2->E2_LOJA + "' "
cQuery += " AND D_E_L_E_T_ = '' "

cQuery := ChangeQuery(cQuery)

dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), "TRB", .F., .T.)

lRet := Iif(!Empty(TRB->AGP), .T., .F.)

TRB->(DbCloseArea())
RestArea(aArea)

Return lRet

/*/{Protheus.doc} ZeraValorSEH
Zera o valor dos campos monetarios 
 
@author norbertom
@since 01/09/2016
@version 1.0
@return NIL
@example
	ZeraValorSEH()
/*/
Static Function ZeraValorSEH()
RecLock('SEH')
SEH->EH_VALREG := 0
SEH->EH_VALREG2:= 0
SEH->EH_VALIRF := 0
// Soh zera valor do IOF para buscar o movimento de IOF (EI_TIPODOC igual a "I2") nos casos de aplicacoes.
If SEH->EH_APLEMP == "APL"
	SEH->EH_VALIOF := 0
EndIf
SEH->EH_VALSWAP:= 0
SEH->EH_VALISWP:= 0
SEH->EH_VALOUTR:= 0
SEH->EH_VALGAP := 0
SEH->EH_VALCRED:= 0
SEH->EH_VALJUR := 0
SEH->EH_VALJUR2:= 0
SEH->EH_VALVCLP:= 0
SEH->EH_VALVCCP:= 0
SEH->EH_VALVCJR:= 0
SEH->EH_VALREG := 0
SEH->EH_VALREG2:= 0
SEH->(MsUnlock())
Return NIL

/*/{Protheus.doc} GravaValorSEH
Atribui valor aos campos monetarios 
 
@author norbertom
@since 01/09/2016
@version 1.0
@param cTipo
@return NIL
@example
	GravaValorSEH("APR")
/*/
Static Function GravaValorSEH(cTipo)
Default cTipo := ""
RecLock('SEH')
Do Case
	Case cTipo == "APR"
		If SEI->EI_TIPODOC == "I1"
			SEH->EH_VALIRF := Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "I2"
			SEH->EH_VALIOF := Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "I3"   
			SEH->EH_VALISWP:= Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "I4"
			SEH->EH_VALOUTR:= Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "I5"
			SEH->EH_VALGAP := Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "JR"
			SEH->EH_VALJUR  := Abs(SEI->EI_VALOR)
			SEH->EH_VALJUR2 := Abs(SEI->EI_VLMOED2)
		EndIf
		If SEI->EI_TIPODOC == "V1"
			SEH->EH_VALVCLP := Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "V2"
			SEH->EH_VALVCCP := Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "V3"   
			SEH->EH_VALVCJR := Abs(SEI->EI_VALOR)
		EndIf
	Case cTipo == "NOR"
		If SEI->EI_TIPODOC == "RG" 
			SEH->EH_VALREG := Abs(SEI->EI_VALOR)
			SEH->EH_VALREG2:= Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "I1"
			SEH->EH_VALIRF := Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "I2" 
			SEH->EH_VALIOF := Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "SW" 
			SEH->EH_VALSWAP:= Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "I3" 
			SEH->EH_VALISWP:= Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "I4" 
			SEH->EH_VALOUTR:= Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "I5" 
			SEH->EH_VALGAP := Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "VL" 
			SEH->EH_VALCRED:= Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "JR" 
			SEH->EH_VALJUR := Abs(SEI->EI_VALOR)
			SEH->EH_VALJUR2:= Abs(SEI->EI_VLMOED2)
		EndIf
		If SEI->EI_TIPODOC == "V1" 
			SEH->EH_VALVCLP := Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "V2" 
			SEH->EH_VALVCCP := Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "V3" 
			SEH->EH_VALVCJR := Abs(SEI->EI_VALOR)
		EndIf
		If SEI->EI_TIPODOC == "BL" 
			SEH->EH_VALREG := Abs(SEI->EI_VALOR)
			SEH->EH_VALREG2:= Abs(SEI->EI_VLMOED2)
		EndIf
		If SEI->EI_TIPODOC == "BC" 
			SEH->EH_VALREG := Abs(SEI->EI_VALOR)
			SEH->EH_VALREG2:= Abs(SEI->EI_VLMOED2)
		EndIf
		If SEI->EI_TIPODOC == "BJ" 
			SEH->EH_VALJUR := Abs(SEI->EI_VALOR)
			SEH->EH_VALJUR2:= Abs(SEI->EI_VLMOED2)
		EndIf
		If SEI->EI_TIPODOC == "BP"
			VALOR := Abs(SEI->EI_VALOR)
		EndIf
	Otherwise
EndCase
SEH->(MSUnlock())
Return NIL

/*/{Protheus.doc} AplEmpVerPadrao
Atribui valor à variável cPadrao do LP correspondente à operaçção  
----------------------------------------------------------------
Movimentações - SE5

Aplicações Financeiras	- Inclusão				- E5_RECPAG = 'P' .AND. E5_TIPODOC = 'AP'
Aplicações Financeiras	- Estorno/Exclusão	- E5_RECPAG = 'R' .AND. E5_TIPODOC = 'AP'

Resgate de Aplicações		- Inclusão				- E5_RECPAG = 'R' .AND. E5_TIPODOC = 'RF'
Resgate de Aplicações		- Estorno/Exclusão	- E5_RECPAG = 'P' .AND. E5_TIPODOC = 'RF'

Empréstimos 				- Inclusão				- E5_RECPAG = 'R' .AND. E5_TIPODOC = 'EP'
Empréstimos 				- Estorno/Exclusão	- E5_RECPAG = 'P' .AND. E5_TIPODOC = 'EP'

Pagamento	 				- Inclusão				- E5_RECPAG = 'P' .AND. E5_TIPODOC = 'PE'
Pagamento 					- Estorno				- E5_RECPAG = 'R' .AND. E5_TIPODOC = 'PE'
----------------------------------------------------------------
580 - Aplicação Financeira
581 - Exclusão Aplicação Financeira
582 - Apropriação/Resgate de Empréstimo
584 - Estorno Apropriação
585 - Resgate Aplicação Financeira
586 - Estorno Empréstimo / Estorno do Resgate
----------------------------------------------------------------
@author norbertom
@since 01/09/2016
@version 1.0
@param cPadrao, Por Referência para receber o código do LP do processo
@return VerPadrao(cPadrao)
@example
	If !AplEmpVerPadrao(@cPadrao)
		SE5->(dbSkip())
		Loop
	EndIf
/*/
Static Function AplEmpVerPadrao(cPadrao,cTipoDoc,cRecPag)
Default cPadrao := ""
Default cTipoDoc := SE5->E5_TIPODOC
Default cRecPag  := SE5->E5_RECPAG

If cTipoDoc $ "AP/EP"		 
	If ( cTipoDoc=="AP" .And. cRecPag=="P" ) .Or. ( cTipoDoc=="EP" .And. cRecPag=="R" )
		cPadrao := "580"		// Inclusão de Aplicações ou Empréstimos
	Else
		cPadrao := "581"		// Estorno de Aplicações ou Empréstimos
	EndIf
ElseIf cTipoDoc $ "RF/PE"	
	If ( cTipoDoc=="RF" .And. cRecPag=="R" ) .Or. ( cTipoDoc=="PE" .And. cRecPag=="P" )
		cPadrao := "585"		// Inclusão de Resgate ou Pagamento
	Else
		cPadrao := "586"		// Estorno de Resgate ou Pagamento
	EndIf
EndIf

Return VerPadrao(cPadrao)

/*/{Protheus.doc} CallDetProva
Função que executa a função DetProva()  
@author norbertom
@since 01/09/2016
@version 1.0
@param cAliasArq, Caracter, Apelido do arquivo 
@param cPadrao, Caracter, Código de contabilização
@param cLote, Caracter, Lote contábil
@param nHdlPrv, Numerico, Referência do Handle do arquivo retornado pela função HeadProva
@param cArquivo, Caracter, Referência do Nome do Arquivo retornado pela função HeadProva 
@param aFlagCTB, Array com os recnos para para gravar caso não efetue o flag pelo Contábil   
@param lUsaFlag, Logico, Se utiliza flag de Contabilização
@return nRet, Numerico, Valor Contabilizado
@example
	nTotal := CallDetProva(cAliasArq,cPadrao,cLote,@nHdlPrv,@cArquivo,aFlagCTB,lUsaFlag)
/*/
Static Function CallDetProva(cAliasArq,cPadrao,cLote,nHdlPrv,cArquivo,aFlagCTB,lUsaFlag,aCT5)
Local nRet := 0
Local nX := 0

Default cAliasArq := ''
Default cPadrao   := ''
Default cLote     := ''
Default nHdlPrv   := 0
Default cArquivo  := ''
Default aFlagCTB  := {}
Default lUsaFlag  := .F.

If !lCabecalho
	a370Cabecalho(@nHdlPrv,@cArquivo)
EndIf

nRet := DetProva(nHdlPrv,cPadrao,"FINA370",cLote,,,,,,aCT5,,@aFlagCTB)

If LanceiCtb .and. !(lUsaFlag)	// Vem do DetProva
	For nX := 1 To Len( aFlagCTB )
		(aFlagCTB[nX][3])->( dbGoTo( aFlagCTB[nX][4] ) )
		RecLock(aFlagCTB[nX][3])
		(aFlagCTB[nX][3])->&(aFlagCTB[nX][1]) := aFlagCTB[nX][2]
		(aFlagCTB[nX][3])->( MsUnlock() )
	Next nX	

	aFlagCTB := {}
EndIf

Return nRet


/*/{Protheus.doc} CtbAPLEMP
Contabiliza Aplicações e Empréstimos   
@author norbertom
@since 01/09/2016
@version 1.0
@param cCarteira, Caracter, Tipo da carteira (P)agar ou (R)eceber.
@param cPadrao, Caracter, Código de contabilização
@param aFlagCTB, Array com os recnos para para gravar caso não efetue o flag pelo Contábil   
@param lUsaFlag, Logico, Se utiliza flag de Contabilização
@param nTotal, Numerico, Referência de acumulador
@return NIL
@example
	CtbAPLEMP(cCarteira, cPadrao, aFlagCTB, lUsaFlag, @nTotal,@nHdlPrv,@cArquivo)
/*/
Static Function CtbAPLEMP(cCarteira, cPadrao, aFlagCTB, lUsaFlag, nTotal, nHdlPrv, cArquivo, aCT5)
Local uRet          := NIL
Local cChaveSEH     := ""
Local cChaveSEI     := ""
Local nTamEHNumero  := If((SEH->(FieldPos('EH_NUMERO')) > 0), TamSX3('EH_NUMERO')[1], 0)
Local nTamEHRevisao := If((SEH->(FieldPos('EH_REVISAO')) > 0), TamSX3('EH_REVISAO')[1],0)
Local nTamEISEQ     := If((SEI->(FieldPos('EI_SEQ')) > 0), TamSX3('EI_SEQ')[1],0)
Local aAreaTrab     := {}
Local nI            := 0
Local nPosSEI       := 0

Default cCarteira:= ""
Default cPadrao  := ""
Default aFlagCTB := {}
Default lUsaFlag := .F.
Default nTotal   := 0
Default nHdlPrv  := 0
default cArquivo := ""

// CONTAS A RECEBER
//580 - Empréstimos 				- Inclusão				- E5_RECPAG = 'R' .AND. E5_TIPODOC = 'EP'
//581 - Aplicações Financeiras	- Estorno/Exclusão	- E5_RECPAG = 'R' .AND. E5_TIPODOC = 'AP'
//585 - Resgate de Aplicações	- Inclusão				- E5_RECPAG = 'R' .AND. E5_TIPODOC = 'RF'
//586 - Pagamento 				- Estorno/Exclusão	- E5_RECPAG = 'R' .AND. E5_TIPODOC = 'PE'

// CONTAS A PAGAR
//580 - Aplicações Financeiras	- Inclusão				- E5_RECPAG = 'P' .AND. E5_TIPODOC = 'AP'
//581 - Empréstimos 				- Estorno/Exclusão	- E5_RECPAG = 'P' .AND. E5_TIPODOC = 'EP'
//585 - Pagamento	 				- Inclusão				- E5_RECPAG = 'P' .AND. E5_TIPODOC = 'PE'
//586 - Resgate de Aplicações	- Estorno/Exclusão	- E5_RECPAG = 'P' .AND. E5_TIPODOC = 'RF'

AAdd(aAreaTrab,SEH->(GetArea()))
AAdd(aAreaTrab,SEI->(GetArea()))

If cPadrao $ "580:581:585:586"
	AAdd( aFlagCTB, {"E5_LA","S","SE5",SE5->(Recno()),0,0,0} )

	// Estabelece os indices que serão utilizados
	SEH->(dbSetOrder(1))	// EH_FILIAL+EH_NUMERO+EH_REVISAO
	SEI->(dbSetOrder(1))	// EI_FILIAL+EI_APLEMP+EI_NUMERO+EI_REVISAO+EI_SEQ

	// Extrai chave de localização da tabela de movimentações
	cChaveSEH := (xFilial("SEH") + SubStr(SE5->E5_DOCUMEN,1,nTamEHNumero+nTamEHRevisao))
	
	// Busca do documento na tabela Master de Aplicações e Empréstimos 
	If SEH->(dbSeek(cChaveSEH)) 
		AAdd( aFlagCTB, {"EH_LA","S","SEH",SEH->(Recno()),0,0,0} )
		
		// Extrai chave de localização da tabela de movimentações
		cChaveSEI :=  (xFilial("SEH") + SEH->EH_APLEMP + SubStr(SE5->E5_DOCUMEN,1,nTamEHNumero+nTamEHRevisao+nTamEISEQ))
	Else
		cChaveSEI := "" 
	EndIf

	// Busca do documento na tabela Detalhe de Aplicações e Empréstimos
	// Algumas operações nao grava a sequencia no E5_DOCUMEN  
	If !Empty(cChaveSEI) .AND. SEI->(dbSeek(cChaveSEI))	// .OR. SEI->(dbSeek(AllTrim(cChaveSEI))))
		// Confirma o valor da chave de pesquisa.
		cChaveSEI := SEI->(EI_FILIAL+EI_APLEMP+EI_NUMERO+EI_REVISAO+EI_SEQ)
		ZeraValorSEH()
		Do While !SEI->(EOF()) .AND. (SEI->(EI_FILIAL+EI_APLEMP+EI_NUMERO+EI_REVISAO+EI_SEQ) == cChaveSEI)
			If SEI->EI_LA < "S " .AND. SEI->EI_MOTBX == 'NOR' 
				GravaValorSEH("NOR")
				AAdd( aFlagCTB, {"EI_LA","S","SEI",SEI->(Recno()),0,0,0} )
			EndIf
			SEI->(dbSkip()) 
		EndDo
	EndIf
	
	// Posiciona SEI no EOF() para que os valores não sejam utilizados na contabilização.
	// Por concepção, devem ser utilizados os valores apurados na SEH.
	SEI->(dbGoBottom())
	SEI->(dbSkip())

	nTotal	+=	CallDetProva('SE5',cPadrao,cLote,@nHdlPrv,@cArquivo,aFlagCTB,lUsaFlag,aCT5)
	
	// Busca do documento na tabela Detalhe de Aplicações e Empréstimos - Recompor Saldos 
	//If !Empty(cChaveSEI) .AND. SEI->(dbSeek(cChaveSEI))
	//	ZeraValorSEH()
	//	Do While !SEI->(EOF()) .AND. (SEI->(EI_FILIAL+EI_APLEMP+EI_NUMERO+EI_REVISAO+EI_SEQ) == cChaveSEI) 
	//		GravaValorSEH("NOR")
	//		SEI->(dbSkip()) 
	//	EndDo
	//EndIf
ElseIf cPadrao $ "582"	// 	Lançamentos de Apropriação: Não geram SE5-Movimentação Bancária.

	SEI->(dbSetOrder(3))	// EI_FILIAL+EI_APLEMP+DTOS(EI_DTDIGIT)+EI_NUMERO+EI_REVISAO+EI_MOTBX+EI_TIPODOC
	cChaveSEI := SEI->(xFilial('SEI')+If(cCarteira == "R", "APL", "EMP")+DTOS(MV_PAR04))

	If !Empty(cChaveSEI) .AND. SEI->(dbSeek(cChaveSEI))

		cChaveSEI := SEI->(EI_FILIAL+EI_APLEMP+DTOS(EI_DTDIGIT))
		While !SEI->(EOF()) .AND. (SEI->(EI_FILIAL+EI_APLEMP+DTOS(EI_DTDIGIT)) == cChaveSEI)
			If SEI->EI_LA < "S " .AND. SEI->EI_MOTBX == "APR"

				cChaveSEH := SEI->(EI_FILIAL+EI_NUMERO+EI_REVISAO)
				If !Empty(cChaveSEH) .and. SEH->(dbSeek(cChaveSEH))

					ZeraValorSEH()
					// Controla quebra das apropriações pelo número do documento/revisão
					While	!SEI->(EOF()) .AND.;
							(SEI->(EI_FILIAL+EI_APLEMP+DTOS(EI_DTDIGIT)) == cChaveSEI) .AND.;
							(SEI->(EI_FILIAL+EI_NUMERO+EI_REVISAO) == cChaveSEH)
						GravaValorSEH("APR")
						AAdd( aFlagCTB, {"EI_LA","S","SEI",SEI->(Recno()),0,0,0} )
						SEI->(dbSkip())
					EndDo
	
					// Posiciona SEI no EOF() para que os valores não sejam utilizados na contabilização.
					// Por concepção, devem ser utilizados os valores apurados na SEH.
					nPosSEI := SEI->(RECNO())	// Conserva posição atual
					If !SEI->(EOF())
						SEI->(dbGoBottom())
						SEI->(dbSkip())
					EndIf
	
					// Chama DetProva()				
					nTotal	+=	CallDetProva('SE5',cPadrao,cLote,@nHdlPrv,@cArquivo,aFlagCTB,lUsaFlag,aCT5)
	
					// Restaura posição atual 
					SEI->(dbGoTo(nPosSEI))
				Else
					SEI->(dbSkip())			
				EndIf
			Else
				SEI->(dbSkip())			
			EndIf
		EndDo
	EndIf
EndIf

// Restaura Ambiente - Método Pilha
For nI := Len(aAreaTrab) To 1 Step -1 
	RestArea(aAreaTrab[nI])
Next nI

Return uRet
