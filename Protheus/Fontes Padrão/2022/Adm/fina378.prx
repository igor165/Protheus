#INCLUDE "FINA378.ch"
#Include "PROTHEUS.CH"
#INCLUDE 'FWMVCDEF.CH'

Static lSeleciona:=	.F.
Static _oFINA3781
Static _oFINA3782
Static _oFINA3783
Static _oFINA3784
Static __o378imps := NIL

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ FINA378	³ Autor ³ Mauricio Pequim	    ³ Data ³ 15.03.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa p/aglutinar titulos de impostos Pis, Cofins e Csll³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ SigaFin - FINA378										   ±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA378(nPosArotina, lAutomato, cProc)

Local cPerg := "AFI378"
Local oBrowse

Private cLote
Private cCadastro := STR0001 //"Aglutinação de Impostos - Pis, Cofins e Csll"
Private aRotina := MenuDef()
Private cNatIRF	:= &(GetMv("MV_IRF"))
Private lChoose	:= .T.
Private lChoImp	:= .F.
Private lChangeX:= .T.

DEFAULT nPosArotina := 0
DEFAULT lAutomato	:= .F.
DEFAULT cProc		:= ""

If nPosArotina > 0
	lAutomato := .T.
EndIf

LoteCont("FIN")
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                        ³
//³=============================================================³
//³ mv_par01 // Selecionar títulos ?                  		 	 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//modifica o tipo de escolhar com MarkBrowse ou sem(padrao) / fabrica

SetKey (VK_F11,{|a,b| AcessaPerg("FIN378MARK",.T.)})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                        ³
//³=============================================================³
//³ mv_par01 // Do Vencimento                          		 	³
//³ mv_par02 // Ate o Vencimento                          		³
//³ mv_par03 // Filial De                          		 		³
//³ mv_par04 // Filial Ate                          		 	³
//³ mv_par05 // Gerar Titulos na Filial                         ³
//³ mv_par06 // Aglutina IR?(1=SIM/2=NAO)*descontinuado         ³
//³ mv_par07 // Modo de Retencao                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega as perguntas selecionadas                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SetKey (VK_F12,{|a,b| AcessaPerg("AFI378",.T.)})
Pergunte(cPerg,.F.)

If nPosArotina > 0 // Sera executada uma opcao diretamento de aRotina, sem passar pela mBrowse
   dbSelectArea("SE2")
   bBlock := &( "{ |a,b,c,d,e| " + aRotina[ nPosArotina,2 ] + "(a,b,c,d,e) }" )
   Eval( bBlock, Alias(), (Alias())->(Recno()),nPosArotina,lAutomato,cProc )
Else
	oBrowse := FWmBrowse():New()
	oBrowse:SetAlias( 'SE2' )
	oBrowse:SetDescription(cCadastro) 
	//Adiciona Legenda                                           
	oBrowse:AddLegend("SE2->E2_SALDO > 0 "  , "GREEN", STR0034) // "T¡tulo em aberto"
	oBrowse:AddLegend("SE2->E2_SALDO == 0 " , "RED"  , STR0035) // "T¡tulo baixado"
	oBrowse:Activate()
Endif 

Set Key VK_F12 To
Set Key VK_F11 To

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fa378Gera ³ Autor ³ Mauricio Pequim Jr.   ³ Data ³16.03.04  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Aglutinacao de impostos                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA378                                                    ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fa378Gera(cAlias,nReg,nOpcx,lAutomato)

Local lPanelFin		:= IsPanelFin()
Local aSays			:= {}
Local aButtons		:= {}
Local lEnd			:= Nil
Local nOpca			:= 0
Local aArea			:= GetArea()
Local cPerg			:= "AFI378"
Local cLojaImp 		:= PadR( "00", TamSX3( "A2_LOJA" )[1], "0" )
// GESTAO - inicio
Local aSelFil		:= {}
Local cTmpFil		:= ""
Local nX			:= 0
DEFAULT lAutomato	:= .F.
lEnd				:= .F.
// GESTAO - fim
DbSelectArea("SA2")
DbSetOrder(1)
MsSeek(xFilial("SA2")+GetMv("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMv("MV_UNIAO")))+cLojaImp)
cForUniao	:= SA2->A2_COD
cLojUniao	:= SA2->A2_LOJA
cNomUniao	:= SA2->A2_NREDUZ	

// Sem foro para utilização da Aglutinacao de Impostos
// Não permite o acesso simultaneo rotina por mais de 1 usuario.
IF ( nHdlLock := MSFCREATE("FINA378.L"+cEmpAnt)) < 0
	MsgAlert(STR0006+chr(13)+chr(10)+;		//"A Funcao de Aglutinação de Impostos esta sendo utilizada por"
				STR0007+chr(13)+chr(10)+;	//"outro usuario. Por questoes de integridade de dados, nao"
				STR0008+chr(13)+chr(10)+; 	//"‚ permitida a utiliza‡„o desta rotina por mais de um usu rio"
				STR0009,cCadastro) 			//"simultaneamente. Tente novamente mais tarde."
	Return
Endif

// Grava no sem foro informações sobre quem est  utilizando o Bordero
FWrite(nHdlLock,"Operador: "+cUserName+chr(13)+chr(10)+;
				"Empresa.: "+cEmpAnt+chr(13)+chr(10)+;
				"Filial..: "+cFilAnt+chr(13)+chr(10))


Aadd(aSays,STR0010)		//"Este programa tem como objetivo de gerar títulos aglutinadores de impostos a pagar"
Aadd(aSays,"(Pis, Cofins e Csll)")

If (SuperGetMV( "MV_FINCTAL", .T., "1" ) == "2")
	Aadd(aSays," ")
	Aadd(aSays,"*** " + STR0031 + " ***")			//"Controle de alçadas ativo"
	Aadd(aSays,STR0032)								//"Os novos títulos terão o aprovador padrão (parâmetro MV_FINAP01 - moeda 01)."
Endif

If !lAutomato
	If lPanelFin  //Chamado pelo Painel Financeiro			
		aButtonTxt := {}
		AADD( aButtonTxt, { STR0025, STR0025, {||Pergunte(cPerg,.T. )}}) // Parametros						
		FaMyFormBatch( aSays, aButtonTxt, { || If( Fa378Fil(), nOpca := 1, nOpca := 0 ) }, { || nOpca := 0 } )	
	Else
		Aadd(aButtons, { 01,.T.,{|o| If(Fa378Fil(),(o:oWnd:End(),nOpca := 1),nOpca := 0)}})
		Aadd(aButtons, { 02,.T.,{|o| o:oWnd:End()}})
		Aadd(aButtons, { 05,.T.,{|| Pergunte(cPerg,.T. )}})
	
		FormBatch(cCadastro,aSays,aButtons)
	Endif
Else
	If(Fa378Fil(),nOpca:=1,nOpca:=0)
EndIf
	
If nOpca == 1

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria as naturezas necessarias               					  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	F378NatNew( @cForUniao, @cLojUniao, @cNomUniao )
	/*
	GESTAO - inicio */
	If MV_PAR08 == 1 .And. !IsBlind()
		AdmSelecFil("AFI378",08,.F.,@aSelFil,"SE5",.T.)
	ElseIf lAutomato  
		If FindFunction("GetParAuto")
			aRetAuto	:= GetParAuto("FINA378TestCase")
			If Len(aRetauto[1]) > 0
				For nX := 1 to Len(aRetauto[1])
					aAdd(aSelFil,aRetAuto[1][nX])
				Next nX
			Else
				Aadd(aSelFil,cFilAnt)
			EndIf
		Endif
	Else
		Aadd(aSelFil,cFilAnt)
	Endif
	
	If MV_PAR07 == 2
		Processa({|lEnd| Fa378Pagar(@cForUniao,@cLojUniao,@cNomUniao,@aSelFil,@cTmpFil,lAutomato)},STR0001) 		//"Aglutinação de Impostos - Pis, Cofins e Csll"
	Elseif cPaisLoc == "BRA"
		Processa({|lEnd| Fa378Emiss(@cForUniao,@cLojUniao,@cNomUniao,@aSelFil,@cTmpFil,lAutomato)},STR0001) 		//"Aglutinação de Impostos - Pis, Cofins e Csll"
	Endif
	
	If !Empty(cTmpFil)
		CtbTmpErase(cTmpFil)
	Endif
	// GESTAO - fim
Endif	

FClose(nHdlLock)
Ferase("FINA378.L"+cEmpAnt)

If INCLUI
	MBrChgLoop(.F.) // Evita que a operação seja reiniciada pela mBrowse EndIf
EndIf

RestArea(aArea)

Return(Nil)


/*{Protheus.doc} Fa378Emiss
	@description	Processamento da analise do contas a pagar
	@author			Mauricio Pequim
	@since			23/08/2001
*/
Function Fa378Pagar(cForUniao as Character, cLojUniao as Character, cNomUniao as Character, aSelFil as Array, cTmpFil as Character, lAutomato as Logical)
	Local cChave		as Character
	Local nX 			as Numeric
	Local aCampos 		as Array
	Local aTam 			as Array
	Local aTamCli 		as Array
	Local aTamLoja		as Array
	Local nTamTit		as Numeric
	Local nFator 		as Numeric
	Local aArea 		as Array
	Local aImpostos 	as Array
	Local aFornec  		as Array
	Local aFornAux 		as Array
	Local dDtVenc		as Date
	Local nI 			as Numeric
	Local cSavFil 		as Character

	Local lPCCBaixa 	as Logical
	Local aAreaSM0 		as Array

	Local oDlg			as Object
	Local oMark1		as Object
	Local lInverte		as Logical
	Local cCodRetCus	as Character
	Local lCodRet		as Logical
	Local aResult		as Array
	Local lRet			as Logical
	Local aRegs			as Array
	Local aStruTmp		as Array
	Local cQuery		as Character
	Local cQuery2		as Character
	Local cQryCmp		as Character
	Local lConfirma		as Logical
	Local cNatIn		as Character
	Local aTits			as Array

	cChave		:= ""
	nX 			:= 0
	aCampos 	:= {}
	aTam 		:= {}
	aTamCli 	:= {}
	aTamLoja	:= {}
	nTamTit		:= TamSX3("E1_PREFIXO")[1]+TamSX3("E1_NUM")[1]+TamSX3("E1_PARCELA")[1]+TamSX3("E1_TIPO")[1]
	nFator 		:= 1
	aArea 		:= GetArea()
	aImpostos 	:= {}
	aFornec  	:= {}
	aFornAux 	:= {}
	dDtVenc		:= F378CalcDt()
	nI 			:= 0
	cSavFil 	:= cFilant

	lPCCBaixa 	:= SuperGetMv("MV_BX10925",.T.,"2") == "1"  
	aAreaSM0 	:= {}

	oDlg		:= NIL
	oMark1		:= NIL
	lInverte	:= .F.
	cCodRetCus	:= ""
	lCodRet		:= 	.F.
	aResult		:= {}
	lRet		:= .T.
	aRegs		:= {}
	aStruTmp	:= {}
	cQuery		:= ""
	cQuery2		:= ""
	cQryCmp		:= ""
	lConfirma	:= .F.
	cNatIn		:= "('" + SuperGetMv("MV_PISNAT") + "','" + SuperGetMv("MV_COFINS") + "','" + SuperGetMv("MV_CSLL") + "')"
	aTits		:= {}

	Private aValImp		:= {}
	Private aRegsImp	:= {}
	Private aTitsImp	:= {}

	//GESTAO - inicio
	Default aSelFil			:= {}
	Default cTmpFil			:= ""
	Default lAutomato		:= .F.
	// GESTAO - fim

	// verificando a existencia do parametro
	// Pega todos os codigos de retenção PCC - Pis / Cofins / Csll
	cCodRetCus	:= SuperGetMv("MV_CODRET",.F.,"")
	If !Empty(cCodRetCus)
		cCodRetCus := FormatIn( cCodRetCus , '/' ) 
		lCodRet	:= .T.
	EndIf

	aTamCli:=TamSX3("E5_CLIFOR")
	aTamLoja:=TamSX3("E5_LOJA")
	aTam:=TamSX3("E5_VALOR")

	AADD(aCampos,{"FILIAL"		,"C", FWGETTAMFILIAL ,0})
	AADD(aCampos,{"FILORIG"  	,"C", FWGETTAMFILIAL ,0})
	AADD(aCampos,{"FORNECE"  	,"C",aTamCli[1],aTamCli[2]})
	AADD(aCampos,{"LOJA"    	,"C",aTamLoja[1],aTamLoja[2]})
	AADD(aCampos,{"NUMERO"  	,"C",nTamTit,0})
	AADD(aCampos,{"DATABX"  	,"D",8,0})
	AADD(aCampos,{"VALORBX"   	,"N",aTam[1],aTam[2]})
	AADD(aCampos,{"VALORLIQ"  	,"N",aTam[1],aTam[2]})
	AADD(aCampos,{"SEQBX"     	,"C",Tamsx3("E5_SEQ")[1],0})
	AADD(aCampos,{"NUMREG"     	,"N",15,0})

	If _oFINA3781 <> Nil
		_oFINA3781:Delete()
		_oFINA3781	:= Nil
	EndIf

	//Cria o Objeto do FwTemporaryTable
	_oFINA3781 := FwTemporaryTable():New("TRB")

	//Cria a estrutura do alias temporario
	_oFINA3781:SetFields(aCampos)

	//Adiciona o indicie na tabela temporaria
	_oFINA3781:AddIndex("1",{"FORNECE","LOJA","NUMERO"})
		
	//Criando a Tabela Temporaria
	_oFINA3781:Create()
		
	//Abre a tela para selecao dos titulos que terao o imposto aglutinado
	//Caso nao exista selecao, o processo ocorre da forma antiga (todo os titulos selecionados via query)
	Pergunte("FIN378MARK",.F.)	
	lChoose	:= If(MV_PAR01 = 1 .and. lPccBaixa,.T.,.F.)  // gera aglutinacao
	lChoImp	:= If(MV_PAR02 = 1 .and. !lAutomato,.T.,.F.)	 // se gera o relatorio
	lSeleciona	:= If(MV_PAR01 = 1 .and. lPccBaixa,.T.,.F.)  // seleciona titulos 
	//---------------------------------------------------

	Pergunte("AFI378",.F.)

	DbSelectArea("SE5")
	dbSetOrder(1)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se deverar ser considerada filial de/ate            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	aStru := SE5->(dbStruct())

	/*
	GESTAO - inicio */	
	Aadd(aStruTmp ,{"E2_PREFIXO"	, "C", TamSX3("E2_PREFIXO")[1], 0 } )
	Aadd(aStruTmp ,{"E2_NUM"		, "C", TamSX3("E2_NUM")[1], 0 } )
	Aadd(aStruTmp ,{"E2_PARCELA"	, "C", TamSX3("E2_PARCELA")[1], 0 } )
	Aadd(aStruTmp ,{"E2_SEQBX"		, "C", TamSX3("E2_SEQBX")[1], 0 } )
	Aadd(aStruTmp ,{"E2_NATUREZ"	, "C", TamSX3("E2_NATUREZ")[1], 0 } )
	Aadd(aStruTmp ,{"E2_EMISSAO"	, "D", TamSX3("E2_EMISSAO")[1], 0 } )
	Aadd(aStruTmp ,{"E2_VENCTO"		, "D", TamSX3("E2_VENCTO")[1], 0 } )
	Aadd(aStruTmp ,{"E2_FORNECE"	, "C", aTamCli[1], 0 } )
	Aadd(aStruTmp ,{"E2_LOJA"		, "C", aTamLoja[1], 0 } )
	Aadd(aStruTmp ,{"E2_CODRET"		, "C", TamSX3("E2_CODRET")[1], 0 } )
	Aadd(aStruTmp ,{"E2_VALOR"		, "N", TamSX3("E2_VALOR")[1], 2 } )
	Aadd(aStruTmp ,{"E2_IDDARF"		, "C", TamSX3("E2_IDDARF")[1], 0 } )

	For nX := 1 To Len(aStruTmp)
		If Ascan(aStru,{|campo| AllTrim(campo[1]) == AllTrim(aStruTmp[nX,1])}) == 0
			Aadd(aStru,Aclone(aStruTmp[nX]))
		Endif
	Next
	/* GESTAO - fim
	*/

	Asort(aStru,,,{|x,y| x[1]<y[1]})  // colocar os campos da tabela  SE2 na frente do browse

	Aadd(aStru ,{"RECSE2", "N", 10, 0 } ) // tratar o campo recno
	Aadd(aStru ,{"RECSE5", "N", 10, 0 } ) // tratar o campo recno

	cChave	:= "E5_CLIFOR,E5_LOJA,E5_DATA,E5_PREFIXO,E5_NUMERO,E5_PARCELA,E5_TIPO,E5_SEQ"
	cQuery  := "SELECT " 

	cQryCmp	:= "E5_FILIAL,E5_CLIFOR,E5_LOJA,E5_DATA,E5_PREFIXO,E5_NUMERO,E5_PARCELA,E5_TIPO,"
	cQryCmp	+= "E5_NATUREZ,E5_TIPODOC,E5_SEQ,E5_RECPAG,E5_VALOR,E5_VLMOED2,E5_VLJUROS,E5_VLMULTA,E5_VLDESCO,E5_FILORIG"

	//Controla impostos pela baixa
	If lPccBaixa
		cQryCmp	+= ",E5_PRETPIS,E5_PRETCOF,E5_PRETCSL,E5_VRETPIS,E5_VRETCOF,E5_VRETCSL"
	Endif

	cQryCmp	+= ",E2_PREFIXO,E2_NUM,E2_PARCELA,E2_SEQBX,E2_NATUREZ,E2_EMISSAO,E2_VENCTO,E2_FORNECE,E2_LOJA,E2_CODRET,E2_VALOR,E2_IDDARF"
	cQuery	+= cQryCmp

	cQuery	+= ", SE5.R_E_C_N_O_ RECSE5 " 
	cQuery	+= ", SE2.R_E_C_N_O_ RECSE2 " 
	cQuery	+= "FROM "+RetSqlName("SE5")+" SE5 "

	cQuery	+= ", "+RetSqlName("SE2")+" SE2 "
	cQuery	+= " WHERE "

	cQuery += "E2_TIPO = 'TX ' AND "
	cQuery += "E2_VALOR = E2_SALDO AND "
	cQuery += "E2_SALDO > 0 AND "
	cQuery += "E2_FORNECE = '" +cForUniao+"' AND "
	cQuery += "E2_LOJA = '"    +cLojUniao+"' AND "
	cQuery += "E2_NATUREZ IN " + cNatIn + " AND "
	cQuery += "E2_IDDARF = ' ' AND "

	// Esta condicao é para tratar alguns casos que tenha customização no parametro MV_CODRET.			
	If lCodRet
		cQuery += " E2_CODRET IN " + cCodRetCus + " AND "
	EndIf

	cQuery += FinSelFil(aSelFil, "SE5", .F., .T., 10) + " AND "	

	cQuery += "E5_DATA BETWEEN '"+Dtos(mv_par01)+"' AND '"+Dtos(mv_par02)+"' AND "
	cQuery += "E5_TIPODOC IN ('VL','BA','CP','V2','PA') AND "
	cQuery += "E5_TIPO NOT IN " + FormatIn(MV_CPNEG,"|") + " AND "
	cQuery += "E5_TIPO NOT IN " + FormatIn(MVISS+MVTAXA+MVTXA+MVINSS+"SES",,3)+" AND "
	cQuery += "E5_SITUACA <> 'C' AND "
	cQuery += "E5_RECPAG = 'P' AND "
	cQuery += "SE5.D_E_L_E_T_ = ' ' "

	cQuery += " AND SE2.E2_NUMTIT NOT IN ('FINA378','FINA381', 'FINA376') "
	cQuery += " AND SE2.D_E_L_E_T_ = ' ' "
	cQuery += " AND SE5.E5_FILORIG = SE2.E2_FILORIG "
	cQuery += " AND SE5.E5_PREFIXO||SE5.E5_NUMERO||SE5.E5_PARCELA||SE5.E5_TIPO||SE5.E5_CLIFOR||SE5.E5_LOJA = SE2.E2_TITPAI "
	cQuery += " AND ( "																//1 Abre
	cQuery +=   	   " ( SE5.E5_MOTBX <> 'PCC' "
	If lPccBaixa
		cQuery += 		" AND SE5.E5_SEQ = SE2.E2_SEQBX "							//2 Abre - Fecha
	EndIf
	cQuery +=       " ) OR ( SE5.E5_MOTBX = 'PCC' AND "								//3 Abre
	cQuery += 				" ( "													//4 Abre
	cQuery +=                 " (E5_VRETCOF > 0 AND E5_PRETCOF IN (' ','4')) "      //4 4.1
	cQuery +=              " OR (E5_VRETPIS > 0 AND E5_PRETPIS IN (' ','4')) "      //4 4.2
	cQuery +=              " OR (E5_VRETCSL > 0 AND E5_PRETCSL IN (' ','4')) "      //4 4.3
	cQuery +=               " )"                                                    //4 Fecha
	cQuery +=            " ) "                                                      //3 Fecha
	cQuery +=  		" ) "															//1 Fecha

	cQuery += "AND NOT EXISTS ( "
	cQuery += "SELECT A.E5_NUMERO "
	cQuery += "FROM "+RetSqlName("SE5")+" A "
	cQuery += "WHERE A.E5_FILIAL='"+xFilial("SE5")+"' AND "
	cQuery +=		"A.E5_NATUREZ=SE5.E5_NATUREZ AND "
	cQuery +=		"A.E5_PREFIXO=SE5.E5_PREFIXO AND "
	cQuery +=		"A.E5_NUMERO=SE5.E5_NUMERO AND "
	cQuery +=		"A.E5_PARCELA=SE5.E5_PARCELA AND "
	cQuery +=		"A.E5_TIPO=SE5.E5_TIPO AND "
	cQuery +=		"A.E5_CLIFOR=SE5.E5_CLIFOR AND "
	cQuery +=		"A.E5_LOJA=SE5.E5_LOJA AND "
	cQuery +=		"A.E5_SEQ=SE5.E5_SEQ AND "
	cQuery +=		"A.E5_TIPODOC='ES' AND "
	cQuery +=		"A.E5_RECPAG<>'P' AND "
	cQuery +=		"A.D_E_L_E_T_ = ' ') "

	//Ponto de entrada FA378FLT que permite inserir alguma condicao do usuario na query
	//o usuario recebe como parametro lQuery - .T. indica query  .F. utilizar filtro para indregua
	If ExistBlock("FA378FLT")
		cQuery += ExecBlock('FA378FLT',.F.,.F.,{.T.})
	EndIf	

	cQuery += "ORDER BY "+ cChave

	//Abre a tela para selecao dos titulos que terao o imposto aglutinado
	//Caso nao exista selecao, o processo ocorre da forma antiga (todo os titulos selecionados via query)
	If lChoose  
		cAlias := "TRBSE5"

		cNomeArq   	:= ""
		aVar		:= {}
		cChave 		:= ""
		aOrd		:= {}
		nCont1		:= 0
		aCampos		:= {}

		If _oFINA3782 <> Nil
			_oFINA3782:Delete()
			_oFINA3782	:= Nil
		Endif	

		//Cria o Objeto do FwTemporaryTable
		_oFINA3782 := FwTemporaryTable():New("TRBSE5")

		//Cria a estrutura do alias temporario
		_oFINA3782:SetFields(aStru)
			
		//Adiciona o indicie na tabela temporaria		
		_oFINA3782:AddIndex("1",{"RECSE5"})
		_oFINA3782:AddIndex("2",{"E5_FILIAL"	, "E5_DATA"	, "E5_BANCO"	, "E5_AGENCIA", "E5_CONTA"	, "E5_NUMCHEQ", "RECSE5"})
		_oFINA3782:AddIndex("3",{"E5_FILIAL"	, "E5_TIPODOC", "E5_PREFIXO", "E5_NUMERO"	, "E5_PARCELA", "E5_TIPO"	, "E5_DATA"	, "E5_CLIFOR"	, "E5_LOJA"	, "E5_SEQ"	, "RECSE5"})
		_oFINA3782:AddIndex("4",{"E5_FILIAL"	, "E5_BANCO"	, "E5_AGENCIA", "E5_CONTA"	, "E5_PREFIXO", "E5_NUMERO"	, "E5_PARCELA", "E5_TIPO"	, "E5_DATA"	, "RECSE5"})
		_oFINA3782:AddIndex("5",{"E5_FILIAL"	, "E5_NATUREZ", "E5_PREFIXO", "E5_NUMERO"	, "E5_PARCELA", "E5_TIPO"	, "E5_DTDIGIT", "E5_RECPAG"	, "E5_CLIFOR"	, "E5_LOJA", "RECSE5"})
		_oFINA3782:AddIndex("6",{"E5_FILIAL"	, "E5_LOTE"	, "E5_PREFIXO", "E5_NUMERO"	, "E5_PARCELA", "E5_TIPO"	, "E5_DATA"	, "RECSE5"})
		_oFINA3782:AddIndex("7",{"E5_FILIAL"	, "E5_DTDIGIT", "E5_NATUREZ", "RECSE5"})
		_oFINA3782:AddIndex("8",{"E5_FILIAL"	, "E5_PREFIXO", "E5_NUMERO"	, "E5_PARCELA", "E5_TIPO"	, "E5_CLIFOR"	, "E5_LOJA"	, "E5_SEQ"		, "RECSE5"})
		_oFINA3782:AddIndex("9",{"E5_FILIAL"	, "E5_ORDREC"	, "E5_SERREC"	, "RECSE5"})
		_oFINA3782:AddIndex("10",{"E5_FILIAL"	, "E5_PROJPMS", "E5_EDTPMS"	, "E5_TASKPMS", "E5_DATA"	, "E5_BANCO"	, "E5_AGENCIA", "E5_CONTA"	, "RECSE5"})
		_oFINA3782:AddIndex("11",{"E5_FILIAL"	, "E5_DOCUMEN", "RECSE5"})
		_oFINA3782:AddIndex("12",{"E5_FILIAL"	, "E5_BANCO"	, "E5_AGENCIA", "E5_CONTA"	, "E5_NUMCHEQ", "E5_DATA"	, "RECSE5"})
		_oFINA3782:AddIndex("13",{"E5_FILIAL"	, "E5_BANCO"	, "E5_AGENCIA", "E5_CONTA"	, "E5_DTDISPO", "E5_NUMCHEQ", "RECSE5"})
		_oFINA3782:AddIndex("14",{"E5_FILIAL"	, "E5_BANCO"	, "E5_DTDISPO", "E5_CONTA"	, "E5_AGENCIA", "E5_TIPODOC", "RECSE5"})
		_oFINA3782:AddIndex("15",{"E5_FILIAL"	, "E5_NODIA"	, "RECSE5"})
			
		//Criando a Tabela Temporaria
		_oFINA3782:Create()

		cQuery2 := " INSERT "
		If ALLTRIM(tcGetdb()) == "ORACLE"
			cQuery2 += " /*+ APPEND */ "
		Endif
		
		cQuery :=  ChangeQuery(cQuery)
		cQuery2 += " INTO "+_oFINA3782:GetRealName()+" (" + cQryCmp + ", RECSE5, RECSE2) " + cQuery
		
		FWMsgRun(, {|| TcSQLExec(cQuery2)},STR0043,STR0044) //"Processando registros solicitados."

	Else	
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), "TRBSE5", .F., .T.)
		cAlias:="TRBSE5"
		For ni := 1 to Len(aStru)
			If aStru[ni,2] != 'C' .and. FieldPos(aStru[ni,1]) > 0
				TCSetField(cAlias, aStru[ni,1], aStru[ni,2],aStru[ni,3],aStru[ni,4])
			Endif
		Next
	EndIf

	dbSelectArea(cAlias)
	DbGoTop()

	If Eof()
		Alert(STR0030)		//"Sem informação na base, com este parametro."
		dbCloseArea()
		Ferase(cAlias+GetDBExtension())
		Ferase(cAlias+OrdBagExt())

		dbSelectArea("TRB")
		dbCloseArea()
		Ferase(cAlias+GetDBExtension())
		Ferase(cAlias+OrdBagExt())
		
		Return
	Endif

	ProcRegua(RecCount())

	
	//Rotina para tratar uma MarkBrowse dos titulos.
	If lChoose  
		aListar := getViewLst(.T.)

		nIndice := SE5->(IndexOrd())
		
		dbSelectArea(cAlias)
		
		cMarca := GetMark()
		aSize := MSADVSIZE()
		
		If !lAutomato
			
			DEFINE MSDIALOG oDlg TITLE STR0027 From aSize[7],0 To aSize[6],aSize[5] OF oMainWnd PIXEL
				oDlg:lMaximized := .T.
				
				oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,30,30,.T.,.T. )
				oPanel:Align := CONTROL_ALIGN_BOTTOM
				
				//Botao Pesquisa
				DEFINE SBUTTON oBtn  FROM 10,200	TYPE 15 ACTION (Fin378Pesq(oMark1,cAlias,nIndice)) ENABLE OF oPanel
				//Botao confirmar
				DEFINE SBUTTON FROM 10,230 TYPE 1 ACTION (lConfirma := .T.,oDlg:End()) ENABLE OF oPanel
				//Botao Fechar
				DEFINE SBUTTON FROM 10,260 TYPE 2 ACTION (oDlg:End ()) ENABLE OF oPanel
				
				oBtn:cToolTip := STR0002 //"Pesquisa"
				oBtn:cCaption := STR0002 //"Pesquisa"
				
				oMark1	:=	MsSelect():New (cAlias, "E5_OK",,aListar,@lInverte,@cMarca, {10, 11, 160, 535})
				oMark1:oBrowse:bAllMark := { || F378Invert(cAlias,cMarca,.T.,oMark1)}
				oMark1:oBrowse:Refresh()

				oMark1:oBrowse:lHasMark 	:= 	.T.
				oMark1:oBrowse:lCanAllMark	:=	.T.
				oMark1:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT
			
			ACTIVATE MSDIALOG oDlg CENTERED	
			
			If lConfirma
				If F378NotSel(cAlias, "E5_OK", cMarca)
					Alert(STR0042) //"Nenhum título foi selecionado. Processo encerrado."
					lConfirma := .F.
				EndIf
			
			EndIf

		Else
			If FindFunction("GetParAuto")
				aRetAuto	:= GetParAuto("FINA378TESTCASE")
				lConfirma	:= .T.
				For nX := 1 to Len(aRetAuto[2])
					
					cPrefixo	:= PADR(aRetAuto[2][nX][1],TamSx3("E2_PREFIXO")[1])
					cTitulo		:= PADR(aRetAuto[2][nX][2],TamSx3("E2_NUM")[1])
					cParc		:= PADR(aRetAuto[2][nX][3],TamSx3("E2_PARCELA")[1])	    
					cForn		:= PADR(aRetAuto[2][nX][4],TamSx3("E2_FORNECE")[1])
					cLoja		:= PADR(aRetAuto[2][nX][5],TamSx3("E2_LOJA")[1])

					TRBSE5->(DbGoTop())	

					While !TRBSE5->(Eof()) 
						If cPrefixo == TRBSE5->E2_PREFIXO .AND. cTitulo == TRBSE5->E2_NUM .AND.;
							cParc == TRBSE5->E2_PARCELA .AND. cForn == TRBSE5->E2_FORNECE .AND. cLoja == TRBSE5->E2_LOJA .AND.;
							Empty(TRBSE5->E5_OK)
						
							RecLock("TRBSE5",.F.)
								TRBSE5->E5_OK := cMarca 
							MsUnlock()

						Endif
						TRBSE5->(dbSkip())			
					EndDo

				Next nX
			EndIf

		EndIf
	Else
		lConfirma	:= .T.	
	EndIf

	If lConfirma
		dbSelectArea(cAlias)
		dbGotop()

		Pergunte("AFI378",.F.)
			
		aFornec := {}
		aResult := {}
		SE2->(DbSetOrder(1))
		//Verifico os minimos de cada Fornecedor no periodo
		While !Eof()
			IncProc(STR0012)		//"Verificando Fornecedores"
			cFornAnt := E5_CLIFOR+E5_LOJA
			nTotBaixas := 0
			
			While !Eof() .and. E5_CLIFOR+E5_LOJA == cFornAnt

				If lChoose
					If (cAlias)->E5_OK <> cMarca
						dbSkip()
						Loop
					Endif
				EndIf

				If E5_VLMOED2 > 0
					nTxMoeda  := E5_VALOR / E5_VLMOED2
				Else
					nTxMoeda := 1
				Endif
				
				Fa378Imp(@aResult, @aRegs, (cAlias)->RECSE2)

				SE2->(MsSeek(xFilial("SE2",(cAlias)->E5_FILORIG)+(cAlias)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)))
				//Nao considerar para aglutinacao de impostos, titulos que ja tenham DARF emitida.
				If !Empty(SE2->E2_IDDARF)
					(cAlias)->(dbSkip())
					Loop
				Endif

				RecLock("TRB",.T.)
					FILIAL		:= (cAlias)->E5_FILIAL
					FORNECE 	:= (cAlias)->E5_CLIFOR
					LOJA 		:= (cAlias)->E5_LOJA
					NUMERO		:= (cAlias)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO)
					VALORBX 	:= Round( NoRound( (cAlias)->E5_VALOR * nTxMoeda, 3 ), 2 )
					VALORLIQ 	:= Round( NoRound( ( (cAlias)->(E5_VALOR-E5_VLJUROS-E5_VLMULTA+E5_VLDESCO) ) * nTxMoeda, 3 ), 2 )
					DATABX		:= (cAlias)->E5_DATA
					FILORIG 	:= (cAlias)->E5_FILORIG
				
					If lPccBaixa .AND. (Empty((cAlias)->E5_PRETPIS) .OR. Empty((cAlias)->E5_PRETCOF) .OR. ;
						Empty((cAlias)->E5_PRETCSL) )
						// Em caso de PA (pela baixa), nao considerar o valor dos impostos no valor liquido.
						If (cAlias)->E5_TIPO $ MVPAGANT
							nFator := VALORLIQ / SE2->E2_VALOR
						ElseIf !Empty(SE2->E2_NUMBOR) //Caso seja bordero, o fator sera sempre 1
							nFator := 1
						Else
							nFator := (VALORLIQ+(cAlias)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)) / SE2->E2_VALOR
						Endif
					Endif
					
					// Proporcionaliza o valor o IRRF + ISS + INSS para que em baixas parciais
					// o valor desses tributos nao sejam somados mais de uma vez para cada baixa
					nTotBaixas += (cAlias)->E5_VALOR + ( SE2->( E2_IRRF + E2_ISS + E2_INSS ) * nFator )
					
					If lPccBaixa .and. (Empty((cAlias)->E5_PRETPIS) .or. Empty((cAlias)->E5_PRETCOF) .or. ;
						Empty((cAlias)->E5_PRETCSL) )
						VALORLIQ	+= (cAlias)->(E5_VRETPIS + E5_VRETCOF + E5_VRETCSL)
						SEQBX		:= (cAlias)->E5_SEQ
						NUMREG		:= (cAlias)->RECSE5
						If (cAlias)->E5_VALOR >= 0
							nTotBaixas += (cAlias)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
						Endif			
					Endif  
				MsUnlock()
				dbSelectArea(cAlias)
				(cAlias)->(dbSkip())
			Enddo
			AADD(aFornec, {cFornAnt,.T.})
		Enddo

		aFornAux := AClone(aFornec)
		If ExistBlock("F378PROJ")
			ExecBlock("F378PROJ", .F., .F.,{aFornec,cAlias})
			If ValType(aFornec) <> "A"
				aFornec := AClone(aFornAux)
			Endif
		Endif

		// Restauro a filial original
		cFilant := cSavFil

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Restaura a integridade da tabela de titulos a pagar          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Select("TRBSE5") > 0
			dbSelectArea("SE5")
			dbSetOrder(1)
			DbSeek(xFilial("SE5"))
			(cAlias)->(DbGoTop())
		EndIf

		If Len(aFornec) == 0
			Help(" ",1,"RECNO")
		Else
			//Verifico os impostos
			ProcRegua(Len(aFornec))
			BEGIN TRANSACTION
				If Len(aResult) >= 1
					lRet := Fa378Result( aResult, aRegs, lAutomato )
				Endif
				If lRet
					cProcess	:= Fa381Seq() //Obtem o processo ID de processo de aglutinação				
					for nX := 1 to Len(aRegs)
						aAdd(aTits, aRegs[nX][1])
					next nX	

					If Len(aFornec) > 0
						TRB->(dbGotop())
						Processa( { |lEnd| Fa378BxImp( TRB->FILIAL, cProcess, aImpostos, dDtVenc, cAlias, aTits) }, STR0014 )
					Endif				
					//Gravo os impostos aglutinadores
					If Len(aImpostos) > 0
						Processa( { |lEnd| Fa378Grava(aImpostos,cForUniao,cLojUniao,cNomUniao,cProcess) } , STR0015 )		//"Gerando Impostos Aglutinados"
					Endif
				EndIf
				cFilant := cSavFil
			END TRANSACTION

			FreeUsedCode()

		EndIf

		//Chamada da funcao para tratar a impressao
		If lChoImp .and. lRet
			aAreaSM0 := SM0->(GetArea())
			If !Empty("mv_par05")	 	
				dbSelectArea("SM0")
				dbSeek(cEmpAnt+mv_par05,.T.)
			Endif	
			Fr376Rel(aRegsImp,aTitsImp,cProcess,.F.)
			SM0->(RestArea(aAreaSM0))
		EndIf

	EndIf

	If Select("TRB") > 0
		dbSelectArea("TRB")
		dbCloseArea()
	Endif

	If Select("TRBSE5") > 0
		dbSelectArea("TRBSE5")
		dbCloseArea()
	Endif

	RestArea(aArea)

Return(Nil)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ Fa378BxImp       ³ Mauricio Pequim       ³ Data ³ 23.08.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gravacao dos dados nas tabelas envolvidas                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ Fa378BxImp()			           							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA378													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa378BxImp(cFilGrv,cProcess,aImpostos,dDtVenc,cAlias,aTits1)
Local aNaturezas	as Array
Local aDescImp		as Array
Local aTits			as Array
Local cSeqBx		as Character
Local aArea			as Array
Local cFilAtu		as Character
Local nX			as Numeric
Local nValAcres		as Numeric
Local nValDecre		as Numeric
Local nValorImp		as Numeric
Local cImposto		as Character
Local cCodRet		as Character
Local lBaixou   	as Logical
Local oBxImp    	as Object
Local lPCCBaixa		as Logical
Local lAbtAdiant	as Logical
Local oModelBxP		as Object
Local oSubFKA		as Object
Local oSubFK2		as Object
Local oSubFK7		as Object
Local cLog			as Character
Local cCamposE5		as Character

default aTits1	:= {}

aTits		:= {}
cSeqBx		:= ""
aArea		:= GetArea()
cFilAtu		:= cFilAnt
nX			:= 0
nValAcres	:= 0
nValDecre	:= 0
nValorImp	:= 0
cImposto	:= ""
cCodRet		:= ""
lBaixou		:= .F.
oBxImp		:= NIL

//Controla o Pis Cofins e Csll na baixa
lPCCBaixa	:= SuperGetMv("MV_BX10925",.T.,"2") == "1"  

lAbtAdiant	:= .F.

//Reestruturação SE5 - Início
oModelBxP	:= Nil //FWLoadModel("FINM020") //Model de Baixas a Pagar
oSubFKA		:= Nil
oSubFK2		:= Nil
oSubFK7		:= Nil
cLog		:= ""
cCamposE5	:= ""
//Reestruturação SE5 - Fim



aNaturezas := { GetMv("MV_PISNAT"), GetMv("MV_COFINS"), GetMv("MV_CSLL") }
aDescImp := {"PIS ","COF ","CSL "}

//Busco os impostos do titulo principal
cFilAnt := FXRetFil( "SE2", cFilGrv )

If Len(aTits1) == 0
	aTits	:= F378VerImp(cAlias, aTits1)
Else	
	For nX := 1 to len(aTits1)
		AAdd(aTits, {aTits1[nX]})
	Next nX
EndIf

If SE2->E2_TIPO $ MVPAGANT
	lAbtAdiant := .T.
Endif
Begin Transaction

//Faco as baixas dos titulos de impostos 
For nX := 1 to Len(aTits)
	//Posiciono no imposto e baixo parcial
	SE2->(dbGoto(aTits[nX,1]))
	cCodRet	:= ""

	If Len(aTits[nx]) == 1
		aAdd(aTits[nx], aDescImp[aScan(aNaturezas,AllTrim(SE2->E2_NATUREZ))])
		aAdd(aTits[nx], SE2->E2_TIPO)
	EndIf

	If Empty(SE2->E2_IDDARF)
		//Baixo o titulo
		If SE2->E2_SALDO > 0
			RecLock("SE2",.F.)
			nValorImp := If(SE2->E2_SALDO > 0 .And. SE2->E2_SALDO < SE2->E2_VALOR,SE2->E2_SALDO, SE2->E2_VALOR) 
			nValAcres := SE2->E2_SDACRES
			nValDecre := SE2->E2_SDDECRE
			cImposto := aTits[nX,3]+aTits[nX,2]+SE2->E2_CODRET
			
			cCodRet  := SE2->E2_CODRET

		 	AADD(aRegsImp,{SE2->(Recno()),SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA)})

			SE2->E2_BAIXA		:= dDataBase
			SE2->E2_MOVIMEN	:= dDataBase
			SE2->E2_SALDO		-= nValorImp
			SE2->E2_VALLIQ	:= nValorImp + nValAcres - nValDecre
			SE2->E2_SDACRES 	-= nValAcres 
			SE2->E2_SDDECRE 	-= nValDecre 		
			If SE2->E2_SALDO > 0
				SE2->E2_VENCTO	:= dDtVenc
				SE2->E2_VENCREA	:= dDtVenc
			Endif
			SE2->(MsUnlock())
        	
			cSeqBx := FaNxtSeqBx()
			If !Empty(cCamposE5)
				cCamposE5 += "|"
			EndIf

			cCamposE5 += "{"
			cCamposE5 +=  "{'E5_DTDIGIT',dDataBase}"
			cCamposE5 += ",{'E5_PREFIXO',SE2->E2_PREFIXO}"
			cCamposE5 += ",{'E5_NUMERO',SE2->E2_NUM}"
			cCamposE5 += ",{'E5_PARCELA',SE2->E2_PARCELA}"
			cCamposE5 += ",{'E5_CLIFOR',SE2->E2_FORNECE}"
			cCamposE5 += ",{'E5_FORNECE',SE2->E2_FORNECE}"
			cCamposE5 += ",{'E5_LOJA',SE2->E2_LOJA}"
			cCamposE5 += ",{'E5_BENEF',SE2->E2_NOMFOR}"
			cCamposE5 += ",{'E5_TIPO',SE2->E2_TIPO}"
			cCamposE5 += ",{'E5_DTDISPO',dDataBase}"
			cCamposE5 += ",{'E5_AGLIMP','"+cProcess+"'}"
			cCamposE5 += "}"

			oBxImp := BxImposto():new()
			oBxImp:ModelOper(3)
			oBxImp:SetHistorico(STR0017)
			oBxImp:SetFilorig(SE2->E2_FILORIG)
			oBxImp:SetSeqBx(cSeqBx)
			oBxImp:SetVlrBx(nValorImp)
			oBxImp:SetCamposE5(cCamposE5)
			oBxImp:Activate()
			lBaixou := oBxImp:Grava()
			If !lBaixou
				cLog := oBxImp:GetErrorGrava()
				Help(,,"M020BXIMP01",,cLog,1,0)	
				Disarmtransaction()
				Break				
			Endif
			oBxImp:Limpa()
			oBxImp := NIL	
			cCamposE5 := ""

			//Verificar PE abaixo			

			SE2->(dbGoto(TRB->NUMREG))
			If SE2->(!Eof())  .and. cPaisLoc == "BRA" .and. Empty(SE2->E2_AGLIMP) .and. SE2->(MsRLock())
				RecLock("SE2",.F.)
				SE2->E2_AGLIMP	:= cProcess
				SE2->(MsUnlock())
		    ENDIF

			If lPccBaixa

				//Reestruturação SE5 - Início

					If !Empty(cCamposE5)
						cCamposE5 += "|"
					EndIf

					cCamposE5 += "{"
					cCamposE5 +=  "{'E5_AGLIMP','"+cProcess+"'}"
					cCamposE5 += "}"

					oModelBxP := FWLoadModel("FINM020")
					oModelBxP:SetOperation(MODEL_OPERATION_UPDATE) //Alteracao
					oModelBxP:Activate()
					oModelBxP:SetValue("MASTER","E5_GRV",.T.)
					oModelBxP:SetValue("MASTER","E5_CAMPOS",cCamposE5) //Informa os campos da SE5 que serão gravados

					oSubFKA := oModelBxP:GetModel("FKADETAIL")
					oSubFKA:SeekLine({{"FKA_IDORIG",SE5->E5_IDORIG}})
					oSubFKA:SetValue("FKA_TABORI","FK2")

					If oModelBxP:VldData()
						oModelBxP:CommitData()
						
					Else
						cLog := cValToChar(oModelBxP:GetErrorMessage()[4]) + ' - '
						cLog += cValToChar(oModelBxP:GetErrorMessage()[5]) + ' - '
						cLog += cValToChar(oModelBxP:GetErrorMessage()[6])
						Help(,,"M020BXIMP02",,cLog,1,0)
					Endif
					oModelBxP:DeActivate()
					oModelBxP:Destroy()
					oModelBxP:=NIL
					oSubFKA := nil

					cCamposE5 := ""
				//Reestruturação SE5 - Fim
				
			Endif
		
			nPos := Ascan(aImpostos,{ |x| x[1] == cImposto } )
			If nPos > 0
				aImpostos[nPos,2] += nValorImp + nValAcres - nValDecre
			Else
				AADD(aImpostos,{cImposto, nValorImp + nValAcres - nValDecre, cCodRet})
			Endif
		Endif
	EndIf
Next

End Transaction

oSubFKA := nil
oSubFK2  := nil
oSubFK7 := nil 

cFilAnt := cFilAtu
RestArea(aArea)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ Fa378Grava       ³ Mauricio Pequim       ³ Data ³ 23.08.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Gravacao dos dados nas tabelas envolvidas                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ Fa378Grava(ExpA1) 	           							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 - Array contendo dados a serem gravados  na criacao  ³±±
±±³			 ³          dos titulos de IRRF								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA378													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa378Grava(aImpostos,cForUniao,cLojUniao,cNomUniao,cProcess)

Local nLaco		:= 0
Local cCodAprov	:= ""

If (SuperGetMV( "MV_FINCTAL", .T., "1" ) == "2")
	cCodAprov := FA050Aprov(1)
Endif
//Gera titulos aglutinadores
ProcRegua(Len(aImpostos))	
For nLaco:=1 To Len(aImpostos)
	If aImpostos[nLaco,2] >= 0.01
		IncProc(STR0018)			//"Gerando títulos... "
		Fa378GrvE2(aImpostos,nLaco,cForUniao,cLojUniao,cNomUniao,cProcess,cCodAprov)
	EndIf
Next 

Return(Nil)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ Fa378GrvE2       ³ Mauricio Pequim       ³ Data ³ 23.08.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Gravacao dos titulos no SE2                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA378GrvE2(ExpA1,ExpN1,ExpC1) 							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array contendo os dados do titulo a ser gravado    ³±±
±±³			 ³ ExpN1 = N£mero do registro no array						  ³±±
±±³			 ³ ExpC1 = Titulo ja gerado para complemento do IR			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FinA378 				                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa378GrvE2(aValImp,nLaco,cForUniao,cLojUniao,cNomUniao,cProcess,cCodAprov)

Local cParcela		:= space(TamSx3("E2_PARCELA")[1])
Local cTipoSE2		:= SubStr(aValImp[nLaco,1],1,3)
Local cNatureza		:= ""
Local aTamParc 		:= TamSx3("E2_PARCELA")
Local cPrefixo		:= "AGP"
Local cFilAtu		:= cFilAnt
Local dDataVenc		:= CtoD("//")

Default cCodAprov	:= ""

If mv_par02 < dDatabase
	dDataVenc := mv_par02
Else
	dDataVenc := dDatabase
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Analise dos codigos das naturezas envolvidas                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Alltrim(Substr(aValImp[nLaco,1],4,4)) $ "PIS" .or. Alltrim(aValImp[nLaco,1]) $ GetMv("MV_PISNAT")
	cNatureza	:= GetMv("MV_PISNAT",.F.,"PIS")
	cNatureza	:= Iif(Empty(cNatureza),,cNatureza)
	dDataVenc	:= F050VImp("PIS",dDataVenc,dDataVenc,dDataVenc,aValImp[nLaco,3])
ElseIf Alltrim(Substr(aValImp[nLaco,1],4,4)) $ "COF" .or. Alltrim(aValImp[nLaco,1]) $ GetMv("MV_COFINS")
	cNatureza	:= GetMv("MV_COFINS",.F.,"COF")
	cNatureza	:= Iif(Empty(cNatureza),"COF",cNatureza)
	dDataVenc	:= F050VImp("COFINS",dDataVenc,dDataVenc,dDataVenc,aValImp[nLaco,3])
ElseIf Alltrim(Substr(aValImp[nLaco,1],4,4)) $ "CSL" .or. Alltrim(aValImp[nLaco,1]) $ GetMv("MV_CSLL")
	cNatureza	:= GetMv("MV_CSLL",.F.,"CSL")
	cNatureza	:= Iif(Empty(cNatureza),"CSL",cNatureza)
	dDataVenc	:= F050VImp("CSLL",dDataVenc,dDataVenc,dDataVenc,aValImp[nLaco,3])
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gravacao do titulo de imposto apurado                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(mv_par05)
	cFilAnt := mv_par05
Else
	mv_par05 := cFilAnt
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o numero do titulo ja existe                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SE2")
DbSetOrder(1)
cParcela := Soma1(cParcela,aTamParc[1])

While .T.
	If SE2->( DbSeek( xFilial("SE2") + cPrefixo + Pad(cProcess,Len(E2_NUM)) + cParcela + cTipoSE2 + cForUniao + cLojUniao ) )
		cParcela := Soma1(cParcela,aTamParc[1])
	Else
		Exit
	Endif
EndDo


RecLock("SE2",.T.)
	SE2->E2_FILIAL	:= xFilial("SE2")
	SE2->E2_PREFIXO	:= cPrefixo
	SE2->E2_NUM		:= cProcess
	SE2->E2_PARCELA	:= cParcela
	SE2->E2_TIPO		:= cTipoSE2
	SE2->E2_EMISSAO	:= If(dDataVenc < dDataBase, dDataVenc, dDataBase)
	SE2->E2_VALOR		:= aValImp[nLaco,2]
	SE2->E2_VENCREA	:= DataValida(dDataVenc,.T.)
	SE2->E2_SALDO		:= aValImp[nLaco,2]
	SE2->E2_VENCTO	:= dDataVenc
	SE2->E2_VENCORI	:= dDataVenc
	SE2->E2_MOEDA		:= 1
	SE2->E2_EMIS1		:= dDataBase
	SE2->E2_FORNECE	:= cForUniao
	SE2->E2_LOJA		:= cLojUniao
	SE2->E2_NOMFOR	:= cNomUniao
	SE2->E2_VLCRUZ	:= aValImp[nLaco,2]
	SE2->E2_ORIGEM	:= "FINA378"
	SE2->E2_NATUREZ	:= cNatureza
	SE2->E2_NUMTIT	:= "FINA378"
	SE2->E2_CODRET	:= aValImp[nLaco,3]
	SE2->E2_DIRF		:= "2" // O titulo gerado pela aglutinacao nao deve ir para DIRF, para nao ocorrer duplicidade
									 // com o titulo de origem (na DIRF e na impressao da DARF).
	SE2->E2_MULTNAT	:= "2"
	SE2->E2_FILORIG	:= If(!Empty(mv_par05), mv_par05, cFilAnt)
	SE2->E2_CODAPRO	:= cCodAprov
SE2->(MsUnlock())

If ExistBlock("F378GRV")
	ExecBlock("F378GRV",.F.,.F.)
EndIf

cFilAnt := cFilAtu

//Guardo os titulos gerados para o relatorio
AADD( aTitsImp, SE2->(RECNO()) )

Return


/* {Protheus.doc} F378NatNew
	@description	Criacao das naturezas necessarias
	@author			Mauricio Pequim
	@since			05/06/2001
*/
Function F378NatNew( cForUniao as Character, cLojUniao as Character , cNomUniao as Character )	
	Local cDescNat  	as Character
	Local cNatureza 	as Character
	Local nA        	as Numeric
	Local cFil378   	as Character
	Local cFilAtu   	as Character
	Local cLojaImp  	as Character
	local aNaturezas 	as Array

	cDescNat  	:= ""
	cNatureza 	:= ""
	nA        	:= 0
	cFil378   	:= mv_par05
	cFilAtu   	:= cFilAnt
	cLojaImp  	:= PadR( "00", TamSX3( "A2_LOJA" )[1], "0" )
	aNaturezas 	:= {}

	aAdd(aNaturezas, { SuperGetMv("MV_PISNAT", .F., "PIS"), "PIS" })
	aAdd(aNaturezas, { SuperGetMv("MV_COFINS", .F., "COF"), "COFINS" })
	aAdd(aNaturezas, { SuperGetMv("MV_CSLL", .F., "CSL"), "CSLL" })

	If !Empty(mv_par05)
		cFilAnt := mv_par05
	EndIf

	For nA := 1 to 3
		cNatureza := aNaturezas[nA,1]
		cDescNat := aNaturezas[nA,2]

		DbSelectArea("SED")
		cNatureza := AllTrim(cNatureza)
		cNatureza := cNatureza+(Space(10-Len(cNatureza)))
		cFil378   := xFilial( "SED" )

		If !Empty( cFil378 )
			If Len( Trim( MV_PAR05 ) ) > Len( Trim( cFil378 ) )
				cFil378 := xFilial( "SED" , MV_PAR05 )
			Else
				cFil378 := MV_PAR05
			EndIf
		EndIf

		If ( ! DbSeek( cFil378 + cNatureza ) )
			RecLock("SED",.T.)
			SED->ED_FILIAL  := cFil378
			SED->ED_CODIGO  := cNatureza
			SED->ED_CALCIRF := "N"
			SED->ED_CALCISS := "N"
			SED->ED_CALCINS := "N"
			SED->ED_CALCCOF := "N"
			SED->ED_CALCPIS := "N"
			SED->ED_CALCCSL := "N"
			SED->ED_DESCRIC := cDescNat
			SED->ED_TIPO	:= "2"		
			MsUnlock()
			
		EndIf
		
	Next nA	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Criacao do Fornecedor Uniao                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("SA2")
	DbSetOrder(1)

	cFil378   := xFilial( "SA2" )

	If !Empty( cFil378 )
		If Len( Trim( MV_PAR05 ) ) > Len( Trim( cFil378 ) )
			cFil378 := xFilial( "SA2" , MV_PAR05 )
		Else
			cFil378 := MV_PAR05
		EndIf
	EndIf

	If !DbSeek(cFil378+GetMv("MV_UNIAO")+Space(Len(A2_COD)-Len(GetMv("MV_UNIAO")))+cLojaImp)
		Reclock("SA2",.T.)
		SA2->A2_FILIAL	:= cFil378
		SA2->A2_COD		:= GetMv("MV_UNIAO")
		SA2->A2_LOJA	:= cLojaImp
		SA2->A2_NOME	:= "UNIAO"
		SA2->A2_NREDUZ	:= "UNIAO"
		SA2->A2_BAIRRO	:= "."
		SA2->A2_MUN		:= "."
		SA2->A2_EST 	:= SuperGetMv("MV_ESTADO")
		SA2->A2_END		:= "."
		SA2->A2_TIPO	:= "."
		MsUnlock()
	EndIf

	cForUniao	:= SA2->A2_COD
	cLojUniao	:= SA2->A2_LOJA
	cNomUniao	:= SA2->A2_NREDUZ	
	cFilAnt := cFilAtu

	FWFreeArray(aNaturezas)

Return(Nil)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ FA378Fil         ³ Mauricio Pequim       ³ Data ³ 16.03.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Validacao da filial para qual serao gerados os novos       ³±±
±±³          ³ titulos				                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA378				                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa378Fil() 

Local nTamEmp	:= 0		/* GESTAO */
Local lRet		:= .T.
Local aComp   := {}
Local nTamUnid := 0

If Empty(xFilial("SE2")) .and. !Empty(mv_par05)
	lRet := .F.
Endif

If lRet .and. !Empty(mv_par05) .and. !(ExistCpo("SM0",cEmpAnt+mv_par05))
	lRet := .F.
Endif

/*
GESTAO - inicio*/
IF FWSizeFilial() > 2
	If lRet .And. !Empty(mv_par05).and. FWModeAccess("SE2",1) == "E"
		nTamEmp := Len(FWSM0LayOut(,1))
		if (nTamEmp > 0 )
			aComp := FwAllCompany()
			lRet := aScan(aComp,Substr(MV_PAR05,1,nTamEmp)) > 0
		endif
		IF lRet .AND. FWModeAccess("SE2",2) == "E"
			nTamUnid := Len(FWSM0LayOut(,2))
			aComp := FWAllUnitBusiness()
			IF Len(aComp) > 0
				lRet := aScan(aComp,Substr(MV_PAR05,nTamEmp+1,nTamUnid)) > 0
		   	ElseIf FWModeAccess("SE2",3) == "E"
                nTamFil := Len(FWAllFilial())
                aComp := FWAllFilial()
                lRet := aScan(aComp,Substr(MV_PAR05,nTamEmp+nTamUnid+1,nTamFil)) > 0
   			Endif
		Endif		
	Endif
Endif	

/* GESTAO - fim
*/

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FaNxtSeqBx³ Autor ³ Eduardo Riera         ³ Data ³02.09.2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de calculo da ultima sequencia de baixa dos titulos a ³±±
±±³          ³receber                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpC1: Proxima sequencia de baixa                            ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo calcular a ultima sequencia de ³±±
±±³          ³baixas dos titulos a receber. O SE1 deve estar locado para   ³±±
±±³          ³evitar-se qualquer problema de integridade.                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Geral                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function FaNxtSeqBx()

Local aArea     := GetArea()
Local aAreaSE5  := SE5->(GetArea())
Local aTipoDoc  := {"CP","BA","VL","V2","LJ"}
Local nTamSeq	:= TamSX3("E5_SEQ")[1]
Local cSeqBx   	:= Repl("0",nTamSeq)
Local nX        := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a ultima sequencia de Baixa C.Receber               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cQuery    := ""

SE5->(dbCommit())
cQuery := "SELECT MAX(E5_SEQ) MAXSEQ "
cQuery += "FROM "+RetSqlName("SE5")+" SE5 "
cQuery += "WHERE SE5.E5_FILIAL='"+xFilial("SE5")+"' AND "
cQuery += "SE5.E5_PREFIXO='"+SE2->E2_PREFIXO+"' AND "
cQuery += "SE5.E5_NUMERO='"+SE2->E2_NUM+"' AND "
cQuery += "SE5.E5_PARCELA='"+SE2->E2_PARCELA+"' AND "
cQuery += "SE5.E5_TIPO='"+SE2->E2_TIPO+"' AND "
cQuery += "SE5.E5_CLIFOR='"+SE2->E2_FORNECE+"' AND "
cQuery += "SE5.E5_LOJA='"+SE2->E2_LOJA+"' AND "
cQuery += "SE5.E5_TIPODOC IN("
For nX := 1 To Len(aTipoDoc)
	cQuery += "'"+aTipoDoc[nX]+"'"
	cQuery += If(nX==Len(aTipoDoc),"",",")
Next nX
cQuery += ") AND "
cQuery += "	SE5.D_E_L_E_T_=' ' "

cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"FaBaixaCR",.T.,.T.)
cSeqBx := Left(FABAIXACR->MAXSEQ, nTamSeq) //left incluido para corrigir problema em postgres - nao remover
dbCloseArea()
dbSelectArea("SE5")

If Len(AllTrim(cSeqBx)) < nTamSeq
	cSeqBx := PadL(AllTrim(cSeqBx),nTamSeq,"0")
Endif 

cSeqBx := Soma1(cSeqBx,nTamSeq)
RestArea(aAreaSE5)
RestArea(aArea)

Return(cSeqBx)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³F378VerImp³ Autor ³ Mauricio Pequim Jr.   ³ Data ³ 31/07/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Localiza os titulos de impostos do titulo principal 		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³F378VerImp() 											      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Generico												      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
FuncTion F378VerImp(cAlias, aTits)

LOCAL nRegSE2
Local aRecno	:= {}
Local cPrefixo	:= SE2->E2_PREFIXO
Local cNum		:= SE2->E2_NUM
Local aParcelas	:= {}
Local aNaturezas:= {}
Local nX		:= 0
Local cChave	:= ""
                                    
//Controla o Pis Cofins e Csll na baixa
Local lPCCBaixa	:= SuperGetMv("MV_BX10925",.T.,"2") == "1"  

Local lTitPai	:= .T.
Local cTitPai	:= If(lTitPai, Pad(SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA), TamSx3("E2_TITPAI")[1]), "")
Local aMarca	:= {}
Local nMarca	:= 0
// 2 - E2_FILIAL, E2_PREFIXO, E2_NUM, E2_PARCELA, E2_TIPO, E2_FORNECE, E2_LOJA
// 8 - E5_FILIAL, E5_PREFIXO, E5_NUMERO, E5_PARCELA, E5_TIPO, E5_CLIFOR, E5_LOJA, E5_SEQ, RECSE5
Local nOrd		:= If( MV_PAR07 == 2, 8, 2 )
Local lOk		:= .F.

default aTits	:= {}

aNaturezas := { GetMv("MV_PISNAT"), GetMv("MV_COFINS"), GetMv("MV_CSLL") }
aDescImp := {"PIS ","COF ","CSL "}

		
If lSeleciona
	(cAlias)->( DbSetOrder( nOrd ) )
	If (cAlias)->( Dbseek( xFilial("SE5", SE2->E2_FILORIG) + SE2->( E2_PREFIXO + E2_NUM + E2_PARCELA + E2_TIPO + E2_FORNECE + E2_LOJA ) ) )
		
		While !(cAlias)->(EOF()) .AND. Alltrim(SE2->E2_FILIAL + SE2->E2_PREFIXO + SE2->E2_NUM ) == Alltrim( xFilial("SE2") + (cAlias)->E2_PREFIXO + (cAlias)->E2_NUM )
			
			If MV_PAR07 == 2
				lOk := (cAlias)->E5_OK <> " " .AND. Alltrim(SE2->E2_FORNECE + SE2->E2_LOJA) == Alltrim((cAlias)->E5_CLIFOR + (cAlias)->E5_LOJA)
			ElseIf MV_PAR07 == 1
				lOk := (cAlias)->E2_OK <> " "
			EndIf
			
			If lOk
				AAdd( aMarca, Alltrim( MVTAXA + (cAlias)->E2_NATUREZ ) )
			EndIf

			(cAlias)->( Dbskip() )
		Enddo

	EndIf

EndIf

dbSelectArea("SE2")
nRegSE2:= Recno()

// Verifica existencia de tiulos de PIS, COFINS, CSLL
If !lPccBaixa .and. !lSeleciona
	
	SE2->( dbSetOrder(1) )
	If !Empty( SE2->E2_TITPAI )
		SE2->( DbSeek( xFilial("SE2") + SE2->E2_TITPAI ) )
	EndIf

	aParcelas := { SE2->E2_PARCPIS, SE2->E2_PARCCOF, SE2->E2_PARCSLL }

	For nX := 1 To Len(aParcelas)   
		If (SE2->E2_TIPO $ MVPAGANT+"/"+MVTXA)        
			cChave := cPrefixo+cNum+aParcelas[nX]+MVTXA
		Else
			cChave := cPrefixo+cNum+aParcelas[nX]+MVTAXA
		Endif		
		If MsSeek(xFilial("SE2")+cChave)
			While !EOF() .And. E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO == cFilial+cChave
				nMarca := 1
						
				If SE2->E2_NATUREZ = aNaturezas[nX] .And. nMarca > 0
					AADD(aRecno,{SE2->(RECNO()),aDescImp[nX],SE2->E2_TIPO})
				EndIf
				SE2->(dbSkip())
			EndDo
		EndIf
	Next	
	SE2->(dbGoTo(nRegSE2))
Else
	//*****************************************
	// Localiza o titulo com parte da chave e *
	// utiliza E2_TITPAI para integridade.    *
	//*****************************************
	If !lPccBaixa
		cTitPai := SE2->E2_TITPAI
	EndIf

	SE2->( dbSetOrder(17) )
	If SE2->( MsSeek( xFilial("SE2") + cTitPai ) )

		If Empty( SE2->E2_TITPAI )				// Estou posicionado do Titulo Pai
			lTitPai := cTitPai == Pad( SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA), TamSx3("E2_TITPAI")[1] )
		ElseIf !Empty( SE2->E2_TITPAI )	.AND. cTitPai == SE2->E2_TITPAI		// Estou posicionado no Titulo Filho
			lTitPai := .T.
		EndIf

		While !Eof() .and. xFilial("SE2") + cPrefixo + cNum == E2_FILIAL + E2_PREFIXO + E2_NUM

			//Se nao existir E2_TITPAI, valida da forma antiga
			//Se E2_TITPAI vazio (titulos antigos), valida da forma antiga
			//Se E2_TITPAI preenchido, pre-valida com a chave do titulo principal
			If lTitPai .AND. SE2->E2_TITPAI == cTitPai
			
				If E2_TIPO $ MVTAXA
					If lSeleciona //caso os titulos tenham sido selecionados devo verificar senão deve fazer como antes...
						//Verificar se o titulo foi marcado para aglutinacao.
						cChave	:=	Alltrim( SE2->E2_TIPO + SE2->E2_NATUREZ)
						nMarca	:=	Ascan(aMarca,cChave)
						If nMarca == 0
							SE2->(Dbskip())
							Loop
						Endif
					Endif
					IF Alltrim(E2_NATUREZ) $ aNaturezas[1]
						AADD(aRecno,{SE2->(RECNO()),aDescImp[1],SE2->E2_TIPO})
					EndIf
					IF Alltrim(E2_NATUREZ) $ aNaturezas[2]
						AADD(aRecno,{SE2->(RECNO()),aDescImp[2],SE2->E2_TIPO})
					EndIf
					IF Alltrim(E2_NATUREZ) $ aNaturezas[3]
						AADD(aRecno,{SE2->(RECNO()),aDescImp[3],SE2->E2_TIPO})
					EndIf
				Endif
			EndIf
			SE2->(dbSkip())
		EndDo
	Endif
Endif

dbSelectArea("SE2")
dbGoto(nRegSE2)

Return (aRecno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³F378CalcDt³ Autor ³ Mauricio Pequim Jr.   ³ Data ³ 31/07/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula a nova data de vencimento para titulos de impostos  ³±±
±±³          ³que nao foram aglutinados desta vez                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³F378CalcDt() 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³Generico													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function F378CalcDt()

Local nLastDay 	:= 0
Local nTamData 	:= 0
Local dData		:= dDatabase+1

//Calculo da data de vencimento do imposto a partir de 26/07/04 - Lei 10925
nTamData := Iif(Len(Dtoc(dData)) == 10, 7, 5)

//Verifico a quizena do vencimento
If Day(dData) <= 15
	dNextDay := Ctod("15/"+Subs(Dtoc(dData),4,nTamData))
Else
	nLastDay :=	Day(LastDay(dData))
	dNextDay := CTOD(StrZero(nLastDay,2)+"/"+Subs(Dtoc(dData),4,nTamData))
Endif

dNextDay := F050VImp("PIS",,,dNextDay)

Return dNextDay

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³fa378Can  ³ Autor ³ Mauricio Pequim Jr.   ³ Data ³16.03.04  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cancelamento do processo de Aglutinacao de impostos        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA378                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fa378Can(cAlias, nReg, nOpcx, lAutomato,cProc)

Local lPanelFin 	:= IsPanelFin()
Local cProcCan		:= CriaVar("E5_AGLIMP")
Local nOpct	 		:= 0
Local nA			:= 0
Local aRegsGer		:= {}
Local aRegsBxd		:= {}
Local aArea			:= GetArea()
Local lContinua		:= .T.
Local lPadrao515	:= Verpadrao("515")
Local lPadrao531	:= Verpadrao("531")
Local nTotal		:= 0
Local nHdlPrv		:= 0
Local cArquivo
Local lDigita		:= .F.
Local lAglutina 	:= .F.
Local oDlg
Local cAliasSE5		:= "SE5"
Local cUniao		:= PADR(GetMV("MV_UNIAO"),Len(SA2->A2_COD))
Local cMensagem		:= ""
Local lPCCBaixa		:= SuperGetMv("MV_BX10925",.T.,"2") == "1"
Local lFa378Est		:= ExistBlock("FA378EST")
Local lFA378Pos		:= ExistBlock("FA378POS")
Local lRet			:= .T.
Local aRecCan		:= {} //Array que armazena os RECNOS do SE5 cancelados
Local aAreaSE5		:= {}
Local aRegsSE2		:= {}
Local cAliasSE2		:= ""
Local lExistFJU		:= FJU->(ColumnPos("FJU_RECPAI")) >0 .and. FindFunction("FinGrvEx")
Local oModelBxP		:= nil
Local oSubFKA		:= Nil
Local cLog			:= ""
Local cCamposE5		:= ""
Local cBkFil		:= cFilAnt
Local nARegsBxd		:= 0
Local cFilProx		:= ""
Local lContAux		:= .T.

Private cLote		:= ""

LoteCont("FIN")

Default lAutomato	:= .F.
Default cProc		:= ""

If ( nHdlLock := MSFCREATE("FINA378.L"+cEmpAnt)) < 0
	MsgAlert(STR0006+chr(13)+chr(10)+STR0007+chr(13)+chr(10)+STR0008+chr(13)+chr(10)+STR0009,cCadastro)
	Return
Endif

//Aviso para que apos contabilizar o cancelamento seja possivel manipular os lançamentos inconsistentes
If (lPadrao515 .Or. lPadrao531) .And. SuperGetMV( "MV_PRELAN", .F., "N" ) == "N"                                                                                      
	cMensagem += STR0039  + CRLF + CRLF
	cMensagem += STR0040
	MsgAlert(cMensagem,STR0041)
EndIf

FWrite(nHdlLock,"Operador: "+cUserName+chr(13)+chr(10)+ "Empresa.: "+cEmpAnt+chr(13)+chr(10)+ "Filial..: "+cFilAnt+chr(13)+chr(10))

//Caso o titulo aglutinador estiver posicionado, ja traz o o processo preenchido na tela
If "FINA378" $ ALLTRIM(SE2->E2_NUMTIT)
	cProcCan := SE2->E2_NUM
Endif

If lFa378Est
   ExecBlock('FA378EST',.F.,.F.)
Endif  	

If !lAutomato
	While .T.
		If lPanelFin  //Chamado pelo Painel Financeiro			
			dbSelectArea(cAlias)
			oPanelDados := FinWindow:GetVisPanel()
			oPanelDados:FreeChildren()
			aDim := DLGinPANEL(oPanelDados)
			DEFINE MSDIALOG oDlg OF oPanelDados:oWnd FROM 0,0 To 0,0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )							
			oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1])		
			nEspLarg := ((DlgWidthPanel(oPanelDados)/2) - 114) /2		 					
			nEspLin  := 0	
		Else   
			nEspLarg := 0 
			nEspLin  := 0  
			DEFINE MSDIALOG oDlg FROM	20,1 TO 120,340 TITLE STR0045 PIXEL
		Endif
		
		oDlg:lMaximized := .F.
		oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,20,20)
		oPanel:Align := CONTROL_ALIGN_ALLCLIENT
		
		@ 006+nEspLin, 011+nEspLarg TO 036+nEspLin, 125+nEspLarg OF oPanel PIXEL
		@ 021+nEspLin, 014+nEspLarg MSGET cProcCan SIZE 49, 11 OF oPanel PIXEL
		@ 011+nEspLin, 014+nEspLarg SAY STR0046 SIZE 70, 07 OF oPanel PIXEL	
		
		If lPanelFin
			ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,{|| nOpct:=1, oDlg:End()},{||nOpct:=0, oDlg:End()})					
		Else
			DEFINE SBUTTON FROM 10, 133 TYPE 1 ACTION (nOpct:=1, oDlg:End()) ENABLE OF oDlg
			DEFINE SBUTTON FROM 23, 133 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg
			ACTIVATE MSDIALOG oDlg CENTERED
		Endif
		
		If lFA378Pos
			lRet := ExecBlock('FA378POS',.F.,.F.,{lRet})
		Endif
		
		If !lRet
			Return
		Endif
		
		If nOpct == 1 .And. Empty(cProcCan)
			Loop
		Endif
		
		Exit
	Enddo
Else
	cProcCan	:= cProc
	nOpct		:= 1
EndIf

If nOpct == 1
	lContinua := .T.	
	DbSelectArea("SE2")
	SE2->(DbSetOrder(1))
	
	cQuery := "SELECT R_E_C_N_O_ RECNO FROM " + RetSQLname("SE2") + " WHERE "
	cQuery += "E2_FORNECE LIKE '" + Alltrim(cUniao) + "%' AND "
	cQuery += "E2_TIPO IN " + FORMATIN(MVTAXA+MVTXA,,3)+" AND "
	cQuery += "E2_NUM = '" + Pad(cProcCan, Len(E2_NUM)) + "' AND "
	cQuery += "E2_NUMTIT LIKE 'FINA378%' AND D_E_L_E_T_ = ' ' "
	cQuery := ChangeQuery(cQuery)
			
	dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), "SE2TRB", .F., .T.)
   	cAlias:= "SE2TRB"
	SE2TRB->(DbGoTop())
	ProcRegua(SE2TRB->(RecCount()))
	
	If SE2TRB->(Bof()) .And. SE2TRB->(Eof())
		Help(" ",1,"FA378CANCSE2",,STR0048, 1, 0,,,,,, {STR0049} )
		lContinua := .F.
	EndIf
	
	While SE2TRB->(!Eof()) .And. lContinua
		IncProc(STR0047)
		SE2->(DbGoto(SE2TRB->RECNO))
		cFilAnt := If(Empty(SE2->E2_FILORIG), cFilAnt, SE2->E2_FILORIG)
		
		If SE2->E2_SALDO > 0 .And. STR(SE2->E2_SALDO,17,3) == STR(SE2->E2_VALOR,17,3) .And. ;
			Empty(SE2->E2_PORTADO) .and. SE2->E2_IMPCHEQ != "S" .and. ;
			Empty(SE2->E2_IDDARF)
		 	AADD(aRegsGer, SE2->(Recno()))
		Else
			lContinua := .F.
		Endif
		
		SE2TRB->(DbSkip())
	Enddo
	
	If lContinua
		lPadrao515	:= If(lPadrao515, lPadrao515, Verpadrao("515"))
		lPadrao531	:= If(lPadrao531, lPadrao531, Verpadrao("531"))
		DbSelectArea("SE5")
		SE5->(DbSetOrder(7))
		
		cQuery := "SELECT R_E_C_N_O_ RECNO FROM " + RetSQLname("SE5") + " WHERE "
		
		If !lPccBaixa 
			cQuery += "E5_CLIFOR LIKE '"+Alltrim(cUniao)+"%' AND "
			cQuery += "E5_TIPO IN "+ FORMATIN(MVTAXA+MVTXA,,3)+" AND "
		Endif

		cQuery += "E5_ORIGEM = 'FINA378' AND " 
		cQuery += "E5_AGLIMP = '"+ cProcCan + "' AND D_E_L_E_T_ = ' ' ORDER BY E5_FILORIG "
		cQuery := ChangeQuery(cQuery)
				
		dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), "SE5TRB", .F., .T.)
	   	cAliasSE5 := "SE5TRB"
		SE5TRB->(DbGoTop())
		ProcRegua(SE5TRB->(RecCount()))
		
		If SE5TRB->(Bof()) .And. SE5TRB->(Eof())
			Help(" ",1,"FA378CANCSE5",,STR0048, 1, 0,,,,,, {STR0049} )
			lContinua := .F.				
		EndIf
		
		While SE5TRB->(!Eof()) .and. lContinua
			IncProc(STR0047)
			SE5->(dbGoto(SE5TRB->RECNO))
		 	AADD(aRegsBxd, SE5->(Recno()))
			SE5TRB->(DbSkip())
		Enddo
		
		If lContinua .and. MV_PAR07 == 1  // FAZ ALTERAÇÃO NOS TITULOS EM ABERTO TAMBEM.		
			cQuery := "SELECT R_E_C_N_O_ RECNO FROM " + RetSQLname("SE2")
			cQuery += " WHERE E2_TIPO NOT IN " + FORMATIN(MVTAXA+MVTXA,,3) + " AND "
			
			If cPaisLoc == "BRA"
				cQuery += "E2_AGLIMP = '"+ cProcCan + "' AND "
			Endif
			
			cQuery += "D_E_L_E_T_ = ' ' "
			cQuery := ChangeQuery(cQuery)
			dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), "SE2CAN", .F., .T.)
			cAliasSE2 := "SE2CAN"
			SE2CAN->(DbGoTop())
			ProcRegua(SE2CAN->(RecCount()))
			
			If SE2CAN->(Bof()) .And. SE2CAN->(Eof())
				lContAux := .F.				
			EndIf
			
			While SE2CAN->(!Eof()) .and. lContAux
				IncProc(STR0047)
				SE2->(DbGoto(SE2CAN->RECNO))				
			 	AADD(aRegsSE2, SE2->(Recno()))
				SE2CAN->(DbSkip())
			Enddo
		Endif
		
		If Select("SE2TRB") > 0
			dbSelectArea("SE2TRB")
			dbCloseArea()
			dbSelectArea("SE2")
			dbSetOrder(1)
		Endif
		
		If Select("SE2CAN") > 0
			dbSelectArea("SE2CAN")
			dbCloseArea()
			dbSelectArea("SE2")
			dbSetOrder(1)
		Endif
		
		If Select("SE5TRB") > 0
			dbSelectArea("SE5TRB")
			dbCloseArea()
			dbSelectArea("SE5")
			dbSetOrder(1)
		Endif
		
		If lContinua
			BEGIN TRANSACTION
				nARegsBxd := Len(aRegsBxd)
				
				For nA := 1 to nARegsBxd
					dbSelectArea("SE5")
					SE5->(DbGoto(aRegsBxd[nA]))
					
					If SE5->E5_SITUACA != "C"				
						dbSelectArea("SE2")
						SE2->(dbSetOrder(1))
						cCamposE5 := ""
						cFilAnt := FXRetFil("SE5", SE5->E5_FILIAL, .F.)
						
						If SE5->E5_TIPO $ MVTAXA+"/"+MVTXA					
							If SE2->(MsSeek(xFilial("SE2",SE5->E5_FILORIG) + SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)))
								RecLock("SE2")
								SE2->E2_SALDO += SE5->E5_VALOR
								SE2->E2_BAIXA := IIF(Str(SE2->E2_SALDO,17,2) == Str(SE2->E2_VALOR,17,2), CtoD(""), SE2->E2_BAIXA )
								MSUnlock()
							Endif
							
							cCamposE5 += "{ {'E5_SITUACA', 'C'} }"					
							
							oModelBxP := FWLoadModel("FINM020")
							oModelBxP:SetOperation(MODEL_OPERATION_UPDATE) //Alteracao
							oModelBxP:Activate()
							oModelBxP:SetValue("MASTER","E5_GRV",.T.)
							oModelBxP:SetValue("MASTER","E5_CAMPOS",cCamposE5)
							oModelBxP:SetValue("MASTER","E5_OPERACAO",1)
							
							oSubFKA := oModelBxP:GetModel("FKADETAIL")
							oSubFKA:SeekLine({{"FKA_IDORIG", SE5->E5_IDORIG}})
							oSubFKA:SetValue("FKA_TABORI","FK2")
							
							If oModelBxP:VldData()
								oModelBxP:CommitData()
							Else
								cLog := cValToChar(oModelBxP:GetErrorMessage()[4]) + ' - '
								cLog += cValToChar(oModelBxP:GetErrorMessage()[5]) + ' - '
								cLog += cValToChar(oModelBxP:GetErrorMessage()[6])
								Help(,,"M020CAN01",,cLog,1,0)
								lRet := .F.
							Endif					
						Else
							If MV_PAR07 == 1  .and. cPaisLoc == "BRA"
								RecLock("SE2",.F.)
								SE2->E2_AGLIMP := ""
								SE2->(MsUnlock())
							Else
								cCamposE5 += "{ {'E5_AGLIMP',''} }"
								
								oModelBxP := FWLoadModel("FINM020")
								oModelBxP:SetOperation(MODEL_OPERATION_UPDATE) //Alteracao
								oModelBxP:Activate()
								oModelBxP:SetValue("MASTER","E5_GRV",.T.)
								oModelBxP:SetValue("MASTER","E5_CAMPOS",cCamposE5)
								
								oSubFKA := oModelBxP:GetModel("FKADETAIL")
								oSubFKA:SeekLine({{"FKA_IDORIG", SE5->E5_IDORIG}})
								oSubFKA:SetValue("FKA_TABORI", "FK2")
								
								If oModelBxP:VldData()
									oModelBxP:CommitData()
								Else
									cLog := cValToChar(oModelBxP:GetErrorMessage()[4]) + ' - '
									cLog += cValToChar(oModelBxP:GetErrorMessage()[5]) + ' - '
									cLog += cValToChar(oModelBxP:GetErrorMessage()[6])
									Help(,,"M020CAN02",,cLog,1,0)
									lRet := .F.
								Endif
							Endif
						Endif
						
						oModelBxP:DeActivate()
						oModelBxP:Destroy()
						oModelBxP := Nil
						oSubFKA := Nil
						
						If !lRet
							DisarmTransaction()
							Exit
						EndIf
						
						If lPadrao531 .And. AllTrim(SE5->E5_LA) == "S"
							If nHdlPrv <= 0
								nHdlPrv := HeadProva(cLote,"FINA378", Substr(cUsuario, 7, 6), @cArquivo)							
							Endif
							
							nTotal += DetProva(nHdlPrv, "531", "FINA378", cLote)
							
							If nHdlPrv > 0 .And. nTotal > 0
								If nA < nARegsBxd
									SE5->(dbGoto(aRegsBxd[nA+1]))
								EndIf
								
								cFilProx :=  IF(EMPTY(SE5->E5_FILORIG), cFilAnt, SE5->E5_FILORIG)
								SE5->(dbGoto(aRegsBxd[nA]))

								If (nA == nARegsBxd .Or. (cFilProx != cFilAnt .And. !Empty(SE5->E5_FILIAL)))
									
									RodaProva(nHdlPrv, nTotal)
									cA100Incl(cArquivo, nHdlPrv, 3, cLote, lDigita, lAglutina)
									nHdlPrv := 0
									nTotal  := 0							
								EndIf														
							EndIf
						Endif
					EndIf
				Next
				
				If lRet
					If cPaisLoc == "BRA"
						For nA := 1 to Len(aRegsSE2)
							dbSelectArea("SE2")
							SE2->(DbGoto(aRegsSE2[nA]))
							RecLock("SE2", .F.)
							SE2->E2_AGLIMP := ""
							SE2->(MsUnlock())
						Next nA
					Endif
					
					For nA := 1 to Len(aRegsGer)	
						dbSelectArea("SE2")
						SE2->(DbGoto(aRegsGer[nA]))
						cFilAnt := If(Empty(SE2->E2_FILORIG), cFilAnt, SE2->E2_FILORIG)
						
						If SE2->E2_LA == "S" .and. lPadrao515
							If nHdlPrv <= 0
								nHdlPrv := HeadProva(cLote, "FINA378", Substr(cUsuario, 7, 6), @cArquivo)
							Endif
							
							nTotal += DetProva(nHdlPrv, "515", "FINA378", cLote)
						Endif
						
						If lExistFJU 
							FinGrvEx("P")
						Endif
						
						RecLock("SE2")
						SE2->(DbDelete())
						SE2->(MsUnlock())
					Next
					
					If nHdlPrv > 0 .and. nTotal > 0
						RodaProva(nHdlPrv, nTotal)
						cA100Incl(cArquivo, nHdlPrv, 3, cLote, lDigita, lAglutina)
					Endif
				EndIf
			END TRANSACTION
		
			If lRet .And. Existblock("F378CanBx")
				aAreaSE5 := SE5->(GetArea())
				Execblock("F378CanBx", .F., .F., {aRecCan})
				RestArea(aAreaSE5)
			EndIf
		Endif
	Else	
		If !Empty(SE2->E2_IDDARF)
			Help(" ", 1, "NOCANAGL", Nil, STR0019+CHR(10)+STR0020+CHR(10)+STR0026, 1, 0)
		Else
			Help(" ",1,"NOCANAGL", Nil, STR0019+CHR(10)+STR0020+CHR(10)+STR0021+CHR(10)+STR0022+CHR(10)+STR0023, 1, 0)
		EndIf
		
		If Select("SE2TRB") > 0
			dbSelectArea("SE2TRB")
			dbCloseArea()
			dbSelectArea("SE2")
			dbSetOrder(1)
		Endif
		
		If Select("SE2CAN") > 0
			dbSelectArea("SE2CAN")
			dbCloseArea()
			dbSelectArea("SE2")
			dbSetOrder(1)
		Endif
	
		If Select("SE5TRB") > 0
			dbSelectArea("SE5TRB")
			dbCloseArea()
			dbSelectArea("SE5")
			dbSetOrder(1)
		Endif
	Endif
Endif	

oSubFKA := Nil
Set Key VK_F12 To
fclose(nHdlLock)
Ferase("FINA378.L"+cEmpAnt)
cFilAnt := cBkFil
RestArea(aArea)

If lPanelFin
	dbSelectArea(FinWindow:cAliasFile)					
	FinVisual(FinWindow:cAliasFile,FinWindow,(FinWindow:cAliasFile)->(Recno()),.T.)	
Endif

Return(Nil)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Ana Paula N. Silva     ³ Data ³27/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados         ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()

Local aRotina := {	{STR0002 	,"AxPesqui" , 0 , 1 },; //"Pesquisar"
					{STR0003 	,"AxVisual" , 0 , 2 },; //"Visualizar"
					{STR0004	,"Fa378Gera", 0 , 3 } ,; //"Aglutinar"
					{STR0024 	,"Fa378Can" , 0 , 6 }} //"Cancelar"
Return(aRotina)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinA378T   ³ Autor ³ Marcelo Celi Marques ³ Data ³ 31.03.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada semi-automatica utilizado pelo gestor financeiro   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA378                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA378T(aParam)

	cRotinaExec := "FINA378"
	ReCreateBrow("SE2",FinWindow)      		
	FinA378(aParam[1])
	ReCreateBrow("SE2",FinWindow)      	
	dbSelectArea("SE2")
	
	INCLUI := .F.
	ALTERA := .F.
	
Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FINA378   ºAutor  ³Microsiga           º Data ³  09/10/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function Fin378Pesq(oMark1, cAliasSE5, nIndice)

Local nRecno	:= 0	
Local aPesqui	:={}
Local cSeek		:= ""
Local nI		:= 0
Local aSIXVal := {}			

Default  nIndice := cAliasSE5->(Indexord())

DbSelectArea(cAliasSE5)
nRecno  := Recno()
cCampos := (cAliasSE5)->(IndexKey())

//Verifico se a filial está contida na chave
If "_FILIAL" $ cCampos
	cSeek := xFilial("SE5")
EndIf

aSIXVal := aClone(FIndPesq("SE5"))//Retorna a descricao do indice posicionado para compor a pesquisa

If ValType(aSIXVal) == "A" .And. Len(aSIXVal) > 0 //Precaucao caso o retorno da rotina tenha algum problema
	For nI := 1 To Len(aSIXVal) 
		If __LocalDrive == "DBFCDX"
			If  nI <= 15
				Aadd(aPesqui,Aclone(aSIXVal[nI]))
			Else
				Exit	
			Endif
		Else
			Aadd(aPesqui,Aclone(aSIXVal[nI]))
		Endif	
	Next nI	
Else
	SIX->(DbSeek("SE5"+AllTrim(STR(nIndice))))
	AAdd(aPesqui,{SIX->DESCRICAO,1})
EndIf

// AxPesqui, o usuario pode escolher a chave desejada.
cCampos := "(" + cAliasSE5 + ")->(" + cCampos + ")"	
dbSelectArea(cAliasSE5)
_WndxPesq(oMark1:oBrowse,aPesqui,cSeek,.F.)

oMark1:oBrowse:Refresh(.T.)

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³_WndxPesq³ Autor ³ Edson MAricate        ³ Data ³ 15/07/99  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Pesquisa no arquivo.                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ WndBrowse                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function _WndxPesq(oBrowse,aPesqui,cSeek,lSaveOrd)

Local nSavOrder 	:= Indexord()
Local oDlg
Local oCbx
Local cCampo		:= SPACE(40)
Local cOrd
Local lSeek			:= .F.
Local aCbx			:= {}
Local nx

DEFAULT lSaveOrd := .T.

If aPesqui<>Nil
	lSaveOrd := .F.
	For nx := 1 to Len(aPesqui)
		aPesqui[nx][1]	:=	Alltrim(aPesqui[nx][1])
		aAdd(aCbx,aPesqui[nx][1])
	Next
	DEFINE MSDIALOG oDlg FROM 00,00 TO 100,490 PIXEL TITLE STR0002
	
	@ 05,05 COMBOBOX oCBX VAR cOrd ITEMS aCbx SIZE 206,36 PIXEL OF oDlg FONT oDlg:oFont
	
	@ 22,05 MSGET oBigGet VAR cCampo SIZE 206,10 PIXEL
	
	DEFINE SBUTTON FROM 05,215 TYPE 1 OF oDlg ENABLE ACTION (lSeek := .T.,oDlg:End())
	DEFINE SBUTTON FROM 20,215 TYPE 2 OF oDlg ENABLE ACTION oDlg:End()
	
	ACTIVATE MSDIALOG oDlg CENTERED

	If lSeek
		dbSetOrder(aPesqui[aScan(aCbx,Alltrim(cOrd))][2])
		dbSeek(cSeek+Rtrim(cCampo),.T.)
	EndIf
	If oBrowse!=Nil	
		oBrowse:Refresh()
	EndIf
Else
	AxPesqui()
	If oBrowse != Nil
		oBrowse:Refresh()
	EndIf
EndIf

If lSaveOrd
	dbSetOrder(nSavOrder)
EndIf

Return 

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F378Inver³ Autor ³ Mauricio Pequim Jr     ³ Data ³ 06/01/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Marca / Desmarca todos os titulos	 				      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ 													          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function F378Invert(cAlias,cMarca,lTodos,oMark)
Local cCampo	:= ""
Local nReg 		:= (cAlias)->(Recno())

DEFAULT lTodos  := .T.

If MV_PAR07 == 1
	cCampo := 'E2_OK'//Emissão
Else
	cCampo := 'E5_OK'//baixa
EndIf

DbSelectArea(cAlias)

If lTodos
	DbGoTop()
Endif

While !lTodos .Or. !Eof()
	If (cAlias)->&cCampo == cMarca
		RecLock(cAlias)
		Replace &cCampo With Space(02)
	Else
		RecLock(cAlias)
		Replace &cCampo With cMarca
		(cAlias)->(MsUnlock())
	Endif
	If lTodos
		(cAlias)->(dbSkip())
	Else
		Exit
	Endif
Enddo

DbGoTo(nReg)

Return(NIL)
      
/*{Protheus.doc} Fa378Emiss
	@description	Processamento da analise do contas a pagar
	@author			Clovis Magenta
	@since			28/06/2012
*/
Function Fa378Emiss(cForUniao as Character, cLojUniao as Character, cNomUniao as Character, aSelFil as Array, cTmpFil as Character, lAutomato as Logical)
	Local cChave		as Character
	Local nX			as Numeric
	Local aCampos		as Array
	Local aTam			as Array
	Local nTamTit		as Numeric
	Local aArea			as Array
	Local aImpostos		as Array
	Local aFornec		as Array
	Local aFornAux		as Array
	Local dDtVenc		as Date
	Local nI			as Numeric
	Local cSavFil		as Character
	Local aAreasM0		as Array
	Local aResult		as Array
	Local lRet			as Logical
	Local aRegs			as Array
	Local nPos			as Numeric
	Local lPCCBaixa		as Logical
	Local oDlg			as Object
	Local oMark1		as Object
	Local lInverte		as Logical
	Local cCodRetCus	as Character
	Local lCodRet		as Logical
	Local cImposto		as Character
	Local nIndSE2		as Numeric  					
	Local aStru			as Array
	Local cQuery 		as Character
	Local cQuery2		as Character
	Local cQryCmp		as Character
	Local lConfirma		as Logical
	Local aTits			as Array

	cChave		:= ""
	nX			:= 0
	aCampos		:= {}
	aTam		:= {}
	nTamTit		:= TamSX3("E2_PREFIXO")[1]+TamSX3("E2_NUM")[1]+TamSX3("E2_PARCELA")[1]+TamSX3("E2_TIPO")[1]
	aArea		:= GetArea()
	aImpostos	:= {}
	aFornec		:= {}
	aFornAux	:= {}
	dDtVenc		:= F378CalcDt()
	nI			:= 0
	cSavFil		:= cFilant
	aAreaSM0	:= {}
	aResult		:= {}
	lRet		:= .T.
	aRegs		:= {}
	nPos		:= 0
	lPCCBaixa	:= SuperGetMv("MV_BX10925",.T.,"2") == "1"
	oDlg		:= NIL
	oMark1		:= NIL
	lInverte	:= .F.
	cCodRetCus	:= ""
	lCodRet		:= .F.
	cImposto	:= ""
	nIndSE2		:= 0  					
	aStru		:= {}
	cQuery 		:= ""
	cQuery2		:= ""
	cQryCmp		:= ""
	lConfirma	:= .F.
	aTits	:= {}

	Default aSelFil		:= {}
	Default cTmpFil		:= ""
	Default lAutomato	:= .F.

	Private aValImp	:= {}
	Private aRegsImp	:= {}
	Private aTitsImp	:= {}


	// Verificando a existencia do parametro
	// Pega todos os codigos de retenção PCC - Pis / Cofins / Csll
	cCodRetCus	:= SuperGetMv("MV_CODRET",.F.,"")
	If !Empty(cCodRetCus)
		cCodRetCus := FormatIn( cCodRetCus , '/' )
		lCodRet	:= .T.
	EndIf

	AADD(aCampos,{"FILIAL"  	,"C", FWGETTAMFILIAL ,0})
	aTam:=TamSX3("E2_FORNECE")
	AADD(aCampos,{"FORNECE"  	,"C",aTam[1],aTam[2]})
	aTam:=TamSX3("E2_LOJA")
	AADD(aCampos,{"LOJA"    	,"C",aTam[1],aTam[2]})
	AADD(aCampos,{"NUMERO"  	,"C",nTamTit,0})
	AADD(aCampos,{"DATABX"  	,"D",8,0})
	aTam:=TamSX3("E2_VALOR")
	AADD(aCampos,{"VALORBX"   	,"N",aTam[1],aTam[2]})
	AADD(aCampos,{"VALORLIQ"  	,"N",aTam[1],aTam[2]})
	AADD(aCampos,{"SEQBX"     	,"C",Tamsx3("E2_SEQBX")[1],0})
	AADD(aCampos,{"NUMREG"     	,"N",15,0})

	If _oFINA3783 <> Nil
		_oFINA3783:Delete()
		_oFINA3783	:= Nil
	Endif	
		
	_oFINA3783 := FwTemporaryTable():New("TRB")
	_oFINA3783:SetFields(aCampos)
	_oFINA3783:AddIndex("1",{"FORNECE","LOJA","NUMERO"})
	_oFINA3783:Create()
			
	//Abre a tela para selecao dos titulos que terao o imposto aglutinado
	//Caso nao exista selecao, o processo ocorre da forma antiga (todo os titulos selecionados via query)
	Pergunte("FIN378MARK",.F.)	
	lChoose		:= If(MV_PAR01 = 1,.T.,.F.)//gera aglutinacao
	lSeleciona 	:= MV_PAR01 == 1
	lChoImp		:= If(MV_PAR02 = 1,.T.,.F.)//se gera o relatorio
	//---------------------------------------------------

	Pergunte("AFI378",.F.)

	DbSelectArea("SE2")
	dbSetOrder(1)
	aStru := SE2->(dbStruct())

	//PCC gerado na baixa deve ser apenas considerado com o MV_PAR07 = 2 (Baixa)
	If lPccBaixa
		Alert(STR0030)
		dbCloseArea()

		dbSelectArea("TRB")
		dbCloseArea()

		If _oFINA3783 <> Nil
			_oFINA3783:Delete()
			_oFINA3783	:= Nil
		Endif	
		
		Return
	EndIf

	cChave	:= "E2_FORNECE,E2_LOJA,E2_PREFIXO,E2_NUM,E2_PARCELA,E2_TIPO"
	cQuery	:= "SELECT "
	//-------------------------- NOVA IMPLEMENTACAO
	If lChoose
		/*
		GESTAO - inicio */
		aStru := SE2->(DbStruct())

		For nX := 1 to len(aStru)
			cQryCmp	+= aStru[nX][1] + ','
		Next

		cQryCmp := substr(cQryCmp,1,len(cQryCmp)-1)
		
		Asort(aStru,,,{|x,y| x[1]<y[1]})  // colocar os campos da tabela  SE2 na frente do browse
		
		Aadd(aStru ,{"RECSE2", "N", 10, 0 } ) // tratar o campo recno

	Else
		
		cQryCmp	+= "E2_FILIAL,E2_FORNECE,E2_LOJA, E2_PREFIXO,E2_NUM,E2_PARCELA,E2_TIPO,E2_SALDO,"
		cQryCmp	+= "E2_NATUREZ,E2_VALOR,E2_VLCRUZ,E2_MOEDA,E2_JUROS,E2_MULTA,E2_DESCONT,E2_EMISSAO,E2_CODRET"

	EndIf

	cQuery  += cQryCmp
	cQuery	+= ", SE2.R_E_C_N_O_ RECSE2  "
	cQuery	+= "FROM "+RetSqlName("SE2")+" SE2 "

	cQuery	+= " WHERE "
	cQuery += "E2_TIPO IN " + FORMATIN(MVTAXA+MVTXA,,3) + " AND "
	cQuery += "E2_NATUREZ <> '"+cNatIRF+"' AND "
	cQuery += "E2_VALOR = E2_SALDO AND "
	cQuery += "E2_SALDO > 0 AND "
	cQuery += "E2_FORNECE = '"+cForUniao+"' AND "
	cQuery += "E2_LOJA    = '"+cLojUniao+"' AND "
	cQuery += "E2_NUMTIT NOT IN ('FINA378','FINA381') AND "

	// Esta condicao é para tratar alguns casos que tenha customização no parametro MV_CODRET.			
	If lCodRet
		cQuery += "E2_CODRET IN " + cCodRetCus + " AND "
	EndIf
	//--------------	

	cQuery += FinSelFil(aSelFil, "SE2", .F., .T., 10) + " AND "	

	cQuery += "E2_EMISSAO BETWEEN '"+Dtos(mv_par01)+"' AND '"+Dtos(mv_par02)+"' AND "
	cQuery += "SE2.D_E_L_E_T_ = ' ' "

	//Ponto de entrada FA378FLT que permite inserir alguma condicao do usuario na query
	//o usuario recebe como parametro lQuery - .T. indica query  .F. utilizar filtro para indregua
	If ExistBlock("FA378FLT")
		cQuery += ExecBlock('FA378FLT',.F.,.F.,{.T.})
	EndIf	

	cQuery += "ORDER BY "+ cChave

	//Abre a tela para selecao dos titulos que terao o imposto aglutinado
	//Caso nao exista selecao, o processo ocorre da forma antiga (todo os titulos selecionados via query)
	cAlias := "TRBSE2"

	If lChoose

		cNomeArq   	:= ""
		aVar		:= {}
		cChave 		:= ""
		aOrd		:= {}
		nCont1		:= 0
		aCampos		:= {}

		If _oFINA3784 <> Nil
			_oFINA3784:Delete()
			_oFINA3784	:= Nil
		Endif	
			
		//Cria o Objeto do FwTemporaryTable
		_oFINA3784 := FwTemporaryTable():New("TRBSE2")
		
		//Cria a estrutura do alias temporario
		_oFINA3784:SetFields(aStru)
		
		//Adiciona o indicie na tabela temporaria
		_oFINA3784:AddIndex("1",{"RECSE2"})
				
		//Gerando os indices sobre o arquivo TMP, com base o SE5
		nIndSE2 := 2
		DbSelectArea("SIX")
		DbSetOrder(1)
		DbSeek("SE2")
		While SIX->(!Eof()) .AND. SIX->INDICE == "SE2" 

			Aadd(aVar,SubStr(CriaTrab(Nil,.F.),1,7)+AllTrim(SIX->ORDEM))
			cChave := Alltrim(SIX->CHAVE)			
			
			_oFINA3784:AddIndex(Alltrim(Str(nIndSE2)),TTFtIndex(StrToKarr(cChave,"+")))
			
			DbSelectArea("SIX")
			aAdd(aOrd,SIX->DESCRICAO)
			DbSkip()
			nIndSE2 ++
		EndDo
		
		//Criando a Tabela Temporaria
		_oFINA3784:Create()
		
		cQuery2 := " INSERT "
		
		If ALLTRIM(tcGetdb()) == "ORACLE"
			cQuery2 += " /*+ APPEND */ "
		Endif

		cQuery2 += " INTO " + _oFINA3784:GetRealName() + " (" + cQryCmp  + ",RECSE2) "
		cQuery2 += cQuery

		FWMsgRun(, {|| TcSQLExec(cQuery2)},STR0043,STR0044)
	Else	
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), "TRBSE2", .F., .T.)
		For ni := 1 to Len(aStru)
			If aStru[ni,2] != 'C' .and. FieldPos(aStru[ni,1]) > 0
				TCSetField(cAlias, aStru[ni,1], aStru[ni,2],aStru[ni,3],aStru[ni,4])
			Endif
		Next
	EndIf

	dbSelectArea(cAlias)
	DbGoTop()

	If Eof()
		Alert(STR0030)		//"Sem informação na base, com este parametro."
		dbCloseArea()
		Ferase(cAlias+GetDBExtension())
		Ferase(cAlias+OrdBagExt())

		dbSelectArea("TRB")
		dbCloseArea()
		Ferase(cAlias+GetDBExtension())
		Ferase(cAlias+OrdBagExt())

		Return
	Endif

	ProcRegua(RecCount())

	//Rotina para tratar uma MarkBrowse dos titulos.
	If lChoose  	
		aListar := getViewLst(.F.)

		nIndice := SE2->(IndexOrd())

		dbSelectArea(cAlias)
		
		cMarca := GetMark()
		aSize := MSADVSIZE()

		DEFINE MSDIALOG oDlg TITLE STR0027 From aSize[7],0 To aSize[6],aSize[5] OF oMainWnd PIXEL
			oDlg:lMaximized := .T.
			
			oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,30,30,.T.,.T. )
			oPanel:Align := CONTROL_ALIGN_BOTTOM
			
			//Botao Pesquisa
			DEFINE SBUTTON oBtn  FROM 10,200	TYPE 15 ACTION (Fin378Pesq(oMark1,cAlias,nIndice)) ENABLE OF oPanel
			//Botao confirmar
			DEFINE SBUTTON FROM 10,230 TYPE 1 ACTION (lConfirma:= .T.,oDlg:End()) ENABLE OF oPanel
			//Botao Fechar
			DEFINE SBUTTON FROM 10,260 TYPE 2 ACTION (oDlg:End ()) ENABLE OF oPanel
			
			oBtn:cToolTip := STR0002 //"Pesquisa"
			oBtn:cCaption := STR0002 //"Pesquisa"
			
			oMark1	:=	MsSelect():New (cAlias, "E2_OK",,aListar,@lInverte,@cMarca, {10, 11, 160, 535})
			oMark1:oBrowse:bAllMark := { || F378Invert(cAlias,cMarca,.T.,oMark1)}
			oMark1:oBrowse:Refresh()

			oMark1:oBrowse:lHasMark 	:= 	.T.
			oMark1:oBrowse:lCanAllMark	:=	.T.
			oMark1:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT

		ACTIVATE MSDIALOG oDlg CENTERED
		
		If lConfirma	//so validar se usuario clicou no OK 
			If F378NotSel(cAlias, "E2_OK", cMarca) .AND. !lAutomato
				Alert(STR0042) //"Nenhum título foi selecionado. Processo encerrado."
				lConfirma := .F.
			EndIf
		EndIf
	Else
		lConfirma := .T.	
	EndIf

	If lConfirma
		dbSelectArea(cAlias)
		dbGotop()

		Pergunte("AFI378",.F.)
			
		aFornec := {}
		aResult := {}
		//Verifico os minimos de cada Fornecedor no periodo
		SE2->(DbSetOrder(1))
		While !Eof()
			IncProc(STR0012)		//"Verificando Fornecedores"
			cFornAnt := E2_FORNECE+E2_LOJA
			nTotBaixas := 0
			
			While !Eof() .and. E2_FORNECE+E2_LOJA == cFornAnt
			
				If !Empty(xFilial("SE2"))
					cFilAnt := FXRetFil( "SE2", (cAlias)->E2_FILIAL )
				Endif

				//Fabrica
				If lChoose  
					If (cAlias)->E2_OK <> cMarca
						dbSkip()
						Loop
					Endif
				EndIf

				If E2_MOEDA > 1
					nTxMoeda  := E2_VALOR / E2_VLCRUZ
				Else
					nTxMoeda := 1
				Endif

				cImposto := (cAlias)->(E2_TIPO+"  "+E2_NATUREZ+E2_CODRET)
				
				If Len(aResult) > 0
					nPos := Ascan(aResult,{ |x| Alltrim(x[1]) == cImposto } )
				Endif
			
				If nPos > 0
					aResult[nPos,2] += ((cAlias)->E2_SALDO)
				Else
					AADD(aResult, {cImposto, ((cAlias)->E2_SALDO)})
				Endif
				
				AADD(aRegs, {(cAlias)->RECSE2, (cAlias)->(E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA)} )

				RecLock("TRB",.T.)		
				FILIAL		:= (cAlias)->E2_FILIAL
				FORNECE		:= (cAlias)->E2_FORNECE
				LOJA		:= (cAlias)->E2_LOJA
				NUMERO		:= (cAlias)->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO)
				VALORBX		:= Round(NoRound((cAlias)->E2_VALOR * nTxMoeda,3),2)
				VALORLIQ	:= Round(NoRound(((cAlias)->(E2_VALOR-E2_JUROS-E2_MULTA+E2_DESCONT))*nTxMoeda,3),2)		
				DATABX		:= (cAlias)->E2_EMISSAO
				NUMREG		:= (cAlias)->RECSE2
			
				MsUnlock()
				dbSelectArea(cAlias)
				(cAlias)->(dbSkip())
			Enddo
			AADD(aFornec, {cFornAnt,.T.})
		Enddo

		aFornAux := AClone(aFornec)
		If ExistBlock("F378PROJ")
			ExecBlock("F378PROJ", .F., .F.,{aFornec,cAlias})
			If ValType(aFornec) <> "A"
				aFornec := AClone(aFornAux)
			Endif
		Endif

		// Restauro a filial original
		cFilant := cSavFil

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Restaura a integridade da tabela de titulos a pagar          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Select("TRBSE2") > 0
			If !lChoose
				dbSelectArea("TRBSE2")
				dbCloseArea()
			EndIf
			dbSelectArea("SE2")
			dbSetOrder(1)
			DbSeek(xFilial("SE2"))
		Endif

		If Len(aFornec) == 0
			Help(" ",1,"RECNO")
		Else
			//Verifico os impostos
			ProcRegua(Len(aFornec))
			
			BEGIN TRANSACTION
				If Len(aResult) >= 1
					lRet := Fa378Result( aResult, aRegs, lAutomato )
				Endif
				If lRet
					cProcess	:= Fa381Seq() //Obtem o processo ID de processo de aglutinação
					
					for nX := 1 to Len(aRegs)
						aAdd(aTits, aRegs[nX][1])
					next nX	
					
					If Len(aFornec) > 0
						TRB->(dbGotop())
						Processa( { |lEnd| Fa378BxImp( TRB->FILIAL, cProcess, aImpostos, dDtVenc, cAlias, aTits) }, STR0014 )
					Endif
					//Gravo os impostos aglutinadores
					If Len(aImpostos) > 0
						Processa({|lEnd| Fa378Grava(aImpostos,cForUniao,cLojUniao,cNomUniao,cProcess)},STR0015)		//"Gerando Impostos Aglutinados"
					Endif
				Endif
			END TRANSACTION	
		Endif

		//Chamada da funcao para tratar a impressao
		If lChoImp .and. lRet
			aAreaSM0 := SM0->(GetArea())
			If !Empty("mv_par05")	 	
				dbSelectArea("SM0")
				dbSeek(cEmpAnt+mv_par05,.T.)
			Endif	
			Fr376Rel(aRegsImp,aTitsImp,cProcess,.F.)
			SM0->(RestArea(aAreaSM0))
		EndIf

	EndIf

	If lChoose
		dbSelectArea("TRBSE2")
		dbCloseArea()
	EndIf

	If Select("TRB") > 0
		dbSelectArea("TRB")
		dbCloseArea()
	Endif

	RestArea(aArea)

Return(Nil)


//-----------------------------------------------------------------------
/*/{Protheus.doc} Fa378Result

Função que monta a dialog para analise dos valores que serão aglutinados

@param aResult, array que contem as informações que serão exibidas
@param aRegs, Recno dos registros na tabela SE2, utilizado na emissão do relatorio
@param lAutomato, Indica se esta sendo chamado por uma rotina automatica

@Author	Vitor Duca	
@since	08/10/2019
/*/
//------------------------------------------------------------------------
Static Function Fa378Result( aResult As Array, aRegs As Array, lAutomato As Logical )
	Local nConta	As Numeric
	Local nOpcao 	As Numeric
	Local oBmp   	As Object
	Local nA     	As Numeric
	Local oGet   	As Object
	Local nTotImp	As Numeric
	Local cProcess 	As Character
	Local aTits    	As Array
	Local lRet 		As Logical

	nConta	 := Len(aResult)
	nOpcao	 := 0
	oBmp	 := NIL	
	nA		 := 0
	oGet     := NIL
	nTotImp	 := 0
	cProcess := CriaVar("E5_AGLIMP")
	aTits	 := {}
	lRet     := .F.

	Private aHeader	:= {}
	Private aCols	:= Array(nConta,4)

	Default lAutomato	:= .F.

	// Montagem do vetor aHeader
	Aadd(aHeader,{STR0037,	"A2_NUMCON","@!"               ,	10, 00, " ", "    ", "C", ,"V"}) // //"Codigo Retencao"
	Aadd(aHeader,{STR0038,	"E2_VALOR" ,"@E 999,999,999.99",	15, 02, " ", "    ", "N", ,"V"}) // //"Imposto a Gerar"
	Aadd(aHeader,{"     ",	"E2_OK"    ,"!!"               ,	02, 00, " ", "    ", "C", ,"V"})

	// Montagem do aCols com os valores apurados
	For nA:=1 to Len(aResult)
		aCols[nA,1] := aResult[nA,1]	
		aCols[nA,2] := aResult[nA,2]
		aCols[nA,3] := Space(2)

		aCols[nA,4] := .F.
		nTotImp += aResult[nA,2]
	Next nA

	aadd(aCols,{STR0036, nTotImp,	Space(02),.F.})  //"Total Geral"

	If !lAutomato
		DEFINE MSDIALOG oDlg TITLE STR0001 FROM 100,001 To 400,540 Of oMainWnd Pixel //"Aglutinação de Impostos - Pis, Cofins e Csll"
			@ 000, 000 BITMAP oBmp RESNAME "Login" oF oDlg SIZE 50, 200 NOBORDER WHEN .F. PIXEL
			oGet := MsGetDados():New(001,055,120,265,2,"Allways True","Allways True","",.F.,,,,200)
			oGet:oBrowse:lHscroll := .F.
		
			Define Sbutton From 130,180 Type 1 Action (nOpcao:=1,oDlg:End())		Enable Of oDlg
			Define Sbutton From 130,210 Type 2 Action (nOpcao:=0,oDlg:End())		Enable Of oDlg
			Define Sbutton From 130,240 Type 6 Action Fr376Rel(aRegs,aTits,cProcess,.T.,aCols)	Enable Of oDlg
		ACTIVATE MSDIALOG oDlg Centered
	Else
		nOpcao := 1
	EndIf

	If nOpcao == 1 
		lRet := .T.
	EndIf

Return lRet

//-----------------------------------------------------------------------
/*/{Protheus.doc} Fa378Imp

Função que compõe o array aResult para ser usado na função Fa378Result

@param aResult, array que contem as informações que serão exibidas
@param aRegs, Recno dos registros na tabela SE2, utilizado na emissão do relatorio
@param nRecSE2, Recno de SE2 que será analisado e incluído em aRegs - 18/02/2022

@Author	Vitor Duca	
@since	08/10/2019
/*/
//------------------------------------------------------------------------
Static Function Fa378Imp(aResult As Array, aRegs As Array, nRecSE2 as Numeric)
	Local cImposto 		As Character
	Local nPos 			As Numeric
	Local nPosReg		As Numeric
	Local cQuery		As Character
	Local cAliasSE2 	As Character

	cImposto  	:= " "  
	nPos      	:= 0
	cQuery    	:= " "
	cAliasSE2 	:= "IMPSE2"

	If __o378imps == NIL
		cQuery += "SELECT E2_FILIAL,E2_PREFIXO,E2_NUM,E2_PARCELA,E2_TIPO,E2_NATUREZ,E2_CODRET,E2_SALDO,R_E_C_N_O_ RECNO 
		cQuery += "FROM "+RetSqlName("SE2")+ " "
		cQuery += "WHERE R_E_C_N_O_ = ?"
		cQuery += "AND D_E_L_E_T_ = ' ' "

		__o378imps := FWPreparedStatement():New(cQuery)
	Endif

	__o378imps:SetNumeric(1, nRecSE2)
	cQuery := __o378imps:GetFixQuery()
	MpSysOpenQuery(cQuery,cAliasSE2)

	While (cAliasSE2)->(!Eof())
		cImposto := (cAliasSE2)->(E2_NATUREZ+E2_CODRET)

		nPosReg := Ascan( aRegs, { |x| x[1] == (cAliasSE2)->RECNO } )

		If nPosReg == 0
			If Len(aResult) > 0
				nPos := Ascan(aResult,{ |x| Alltrim(x[1]) == Alltrim(cImposto) } )
			Endif

			If nPos > 0
				aResult[nPos,2] += ((cAliasSE2)->E2_SALDO)
			Else
				AADD(aResult, {cImposto, ((cAliasSE2)->E2_SALDO)})
			Endif
			
			AADD(aRegs, {(cAliasSE2)->RECNO, (cAliasSE2)->(E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA)} )
		EndIf
		
		(cAliasSE2)->(DbSkip())
	Enddo

	(cAliasSE2)->(DbCloseArea())
Return

//-----------------------------------------------------------------------
/*/{Protheus.doc} F378NotSel

Verificar se tem pelo menos um título selecionado, para mostrar mensagem ao
usuário caso nenhum título tenha sido selecionado

@Author	guilherme.sordi
@since	28/05/2021
@see https://jiraproducao.totvs.com.br/browse/DFINCOM-11542
/*/
//------------------------------------------------------------------------
Static Function F378NotSel(cAlias,cCampo,cMarca) as Logical
	local nReg as Numeric
	local lRet as Logical

	default nReg := 1
	default lRet := .T.

	DbSelectArea(cAlias)
	DbGoTop()
	while (!Eof() .and. lRet)
		lRet := (cAlias)->&cCampo != cMarca
		(cAlias)->(dbSkip())
	endDo
	DbGoTo(nReg)

return lRet

/*/{Protheus.doc} getViewLst
	@description Lista os campos que serão exibidos na selação de títulos.
	@author	guilherme.sordi
	@since 26/09/2022
/*/
Static Function getViewLst(lUseSE5 as Logical) as Array
	Local aRet as Array
	Local aFields as Array
	Local cFields as Character
	Local nI as Numeric
	Local cOKField as Character

	aRet := {}
	aFields := {}
	cFields := ""
	nI := 0

	cFields := "E2_PREFIXO|E2_NUM|E2_PARCELA|E2_FORNECE|E2_LOJA|E2_SEQBX|E2_NATUREZ|E2_EMISSAO|E2_VENCTO|E2_CODRET|E2_VALOR|"
	If lUseSE5
		cOKField := "E5_OK"
		cFields += "E5_PREFIXO|E5_NUMERO|E5_PARCELA|E5_TIPO|E5_CLIFOR|E5_LOJA|E5_VALOR|E5_DATA|E5_MOTBX|E5_TIPODOC|E5_RECPAG|E5_SEQ|E5_HISTOR|E5_VRETPIS|E5_VRETCOF|E5_VRETCSL|"		
	Else
		cOKField := "E2_OK"
	EndIf

	cFields := cOKField + "|" + cFields	

	aFields := strTokArr(cFields, '|')
	For nI := 1 To len(aFields)			
		aAdd(aRet, { aFields[nI], NIL, allTrim(FWX3Titulo(aFields[nI])), PesqPict("S" + left(aFields[nI],2) , aFields[nI])})
	Next nI	
	FWFreeArray(aFields)
Return aRet
