<% 
#DEFINE nLarBrw 		"850"
#DEFINE nAltBrw 		"250"
#DEFINE nAltBrwPegFC 	"120"
#DEFINE nAltBrwGuiaFC 	"130"
#DEFINE cBrwProt  		"BrwGridProt"
#DEFINE cBrwItens  		"BrwGridItens"

LOCAL oHtml 	:= WCHtml():New()

oHtml:setFunction("PPLCONUSOC")
%>
<%=oHtml:getDType()%>
<style>
	.ui-datepicker-calendar {
    display: none;
    }
</style>
<script language="JavaScript">
<!--
//----------------------------------------------------------------------
// defini nome do browse 
//----------------------------------------------------------------------
cBrwGridProt  	= <%="'"+cBrwProt+"'"%> //cBrwGridPegFC  
cBrwGridItens 	= <%="'"+cBrwItens+"'"%> //cBrwGridGuiaFC
//----------------------------------------------------------------------
// Bloqueia o esc														  
//----------------------------------------------------------------------
document.onkeydown = blockEsc;
var cStatusB4F = "";
var elemDel = null;
	//----------------------------------------------------------------------
	//	 Carrega informações com os beneficiarios do grupo familiar/empresa
	//----------------------------------------------------------------------	
	function fFilBen(){		
		Ajax.open("W_PPLCARBA1.APW", {
			callback: carregaBenefs, 
			error: exibeErro
		});
	}

	//-------------------------------------------------------------------
	//		Carrega Combo com os beneficiarios do grupo familiar/empresa
	//-------------------------------------------------------------------
	function carregaBenefs(v){
		var aResult = v.split("|");
   		var aCols 	= eval(aResult[0]);
		var nI;
		var nqtdUsr = aCols.length;	
   		var aDadCombo = new Array(nqtdUsr);

		for (nI=0; nI< nqtdUsr; nI++){
    		aDadCombo[nI] = aCols[nI][0].value + '$'+ aCols[nI][1].value; 
	   	}

		comboLoad("Field_NOMBEN",aDadCombo);
	}

	//----------------------------------------------------------------------
	// Carrega Combo de status
	//----------------------------------------------------------------------
	function CarregaCombo(v) {    
		comboLoad("Field_STPROC",Array('0$Solicitação não concluída','1$Protocolado','2$Em analise','3$Deferido','4$Indeferido','5$Deferido Parcialmente','6$Pendente Inf. beneficiario'));
		document.getElementById("Field_STPROC").selectedIndex = 9; //posiciona na opcao Todos
	} 

	function fGetProt() {	
	
		var cProt	 	= getField('Field_NROPROT');
		var cDtDe 		= getField('Field_DTDE');
		var cDtAte 		= getField('Field_DTATE');
		var cStatus 	= getField('Field_STPROC');
		var cMatric     = getField('Field_NOMBEN');
		var cCmpsCustom = ""
		var aCmpsCustom = getField('custom_fields').split("|");
		var cFamilia    = "<%=Substring(HttpSession->USR_INFO[1]:OWSUSERLOGPLS:OWSLISTOFOPE:OWSSOPERADORA[1]:OWSEMPRESA:OWSSEMPRESA[1]:OWSCONTRATO:OWSSCONTRATO[1]:OWSSUBCONTRATO:OWSSSUBCONTRATO[1]:OWSFAMILIA:OWSSFAMILIA[1]:CBENEFI, 1,14)%>";
		var cWhere 		= "Field_NROPROT="+cProt+"|"+"Field_DTDE="+cDtDe+"|"+"Field_DTATE="+cDtAte+"|"+"Field_STPROC="+cStatus+"|"+"Field_MATRIC="+cMatric+"|"+"Field_Familia="+cFamilia;

		for(i=0;i<aCmpsCustom.length;i++){
			var aCmps = aCmpsCustom[i].split("~");
			var elem = document.getElementById(aCmps[1]);
			if(aCmps[0] == "text" || aCmps[0] == "textarea"){
				cCmpsCustom += aCmps[1]+"="+elem.value + "|";
			}else if(aCmps[0] == "combo"){
				cCmpsCustom += aCmps[1]+"="+ elem.options[elem.selectedIndex].value + "|";
			}else if(aCmps[0] == "radiobutton"){
			    cCmpsCustom += aCmps[1]+"="+ trim($('input[name='+aCmps[1]+']:checked').val())+"|";
			}
		}

			
		//----------------------------------------------------------------------
		// valida parametros
		//----------------------------------------------------------------------
		if ( isEmpty(cProt) && ( isEmpty(cMatric) && ( (isEmpty(cDtDe) && isEmpty(cDtAte)) || isEmpty(cStatus)  ) ) ) {
			alert('Informe os parâmetros necessários para consulta!');
			getObjectID('Field_NROPROT').focus();
			return
		}
		//----------------------------------------------------------------------
		// limpa o browse de itens
		//----------------------------------------------------------------------
		if (wasDef( typeof(oBrwGridItens) ) ) {
			oBrwGridItens.setEmptyDiv();
		}	
		//----------------------------------------------------------------------
		// verifica se foi chamado pela navegacao
		//----------------------------------------------------------------------
		var cBuscaTReg = getGridCall(cBrwGridProt,'fGetProt');
	

		//----------------------------------------------------------------------
		// Monta campos conforme processamento da rdas							   
		//----------------------------------------------------------------------
		Ajax.open("W_PPLGDGRID.APW?cFunName=PLBRWB4F&nPagina=" + getField(cBrwGridProt+'nPagina') + "&cWhere=" + cWhere + "&cCampoCustom=" + cCmpsCustom + "&cBuscaTReg=" + cBuscaTReg + "&cRotinLGPD=PPLCONUSOC", {
				callback: carregaGridProt, 
				error: exibeErro} );
	}

	//----------------------------------------------------------------------
	// retorna peg's do prestador
	//----------------------------------------------------------------------
	function carregaGridProt(v) { 
		var aResult = v.split("|");
		//----------------------------------------------------------------------
		// Se existe registro define propriedades
		//----------------------------------------------------------------------
		var nQtdReg		= aResult[1];  
		var nQtdPag 	= aResult[2];
    	var aHeader 	= eval(aResult[4]);
    	var lContinua	= eval(aResult[7]);
    	var cMsg 		= aResult[6];

    	nRegPagProt		= aResult[3];
    	aDadProt 		= (lContinua) ? eval(aResult[5]) : aDadProt;
		//----------------------------------------------------------------------
		// Seta a quantidade total de paginas - seta somente quando nao for navegacao
		//----------------------------------------------------------------------
		if (lContinua) {
		
			//----------------------------------------------------------------------
			// Monta Browse 
			//----------------------------------------------------------------------
			oBrwGridProt = new gridData(cBrwGridProt,<%=nLarBrw%>,<%=nAltBrwPegFC%>);
			//----------------------------------------------------------------------
			// Monta Browse  aCols: aDadProt });
			//----------------------------------------------------------------------
			oBrwGridProt.load({fFunName:'fGetProt',
							nRegPagina:nRegPagProt,
							nQtdReg:nQtdReg,
							nQtdPag:nQtdPag,
							lOverflow:true,
							lShowLineNumber:true,
							lChkBox:false,
							aBtnFunc:"[{info:'Exibe Itens',img:'items.png',funcao:'fGetItens'},{info:'Anexar',img:'anexo.jpg',funcao:'fAnexar'},{info:'Excluir receita',img:'004.gif',funcao:'fDelRec'}]",
							aHeader: aHeader,							
							aCols: aDadProt,
							cColLeg:'B4F_STATUS',							
							aCorLeg:"[{valor:'0',imgcor:'icon-orange'},{valor:'1',imgcor:'icon-orange'},{valor:'2',imgcor:'icon-blue'},{valor:'3',imgcor:'icon-green'},{valor:'4',imgcor:'icon-red'},{valor:'5',imgcor:'icon-cyan'},{valor:'6',imgcor:'icon-purple'},{valor:'A',imgcor:'icon-yellow'}]"});
							
							//0=Solicitado (Portal);1=Protocolado;2=Em analise;3=Deferido;4=Indeferido;5=Deferido Parcialmente;6=Pendente Inf. beneficiario;A=Solicitação não concluída

			if(oBrwGridProt.aCols.length > 0){
				updGridSchemeColor();  
				var z = 0;
				var w = 0;
				var imgAnexar = null;
				var oCell = null;
				var lLeg = false;
				var lHabilitaEdit = false; //Só irá habilitar quando status = 'A'
				var lHabilitaAnexo = false; //só irá habilitar quanto status = 'B'
				var oTable = oBrwGridProt.getObjCols();
					
				//While nas linhas da grid
				while ((z < oTable.rows.length)) {
					lLeg = false;
					lHabilitaAnexo = false;
						
						
					//For nas colunas da linha
					for (var w = 0; w <= (oTable.rows[z].cells.length - 1); w++) {
						oCell = oTable.rows[z].cells[w];

						if((oCell.innerHTML).search("icon-purple") != -1 && !lHabilitaAnexo){								
								lHabilitaAnexo = true; 
						} else if((oCell.innerHTML).search("anexo.jpg") != -1){
								imgAnexar = $(oCell).find("img[src$='anexo.jpg']")[0];
						}	
	
					}

					if(!lHabilitaAnexo && imgAnexar != null){
						imgAnexar.style.display = 'none';
					}

					z++;
				}
			}
		}	
				
		//----------------------------------------------------------------------
		// Mensagem de erro
		//----------------------------------------------------------------------
		if ( !isEmpty(cMsg) ) alert(cMsg);
	}  

	//-----------------------------------------------------------
	// Função que exibe a grid de itens da solicitação
	//-----------------------------------------------------------
	function fGetItens(x) {	
		var dados       = x.split("~");
		var cWhere 		= "Field_CODREC="+dados[0]+"|Field_STAB4F="+dados[1];
		cStatusB4F      = dados[1];
		//-----------------------------------------------------------
		// Limpa o browse de beneficiários
		//-----------------------------------------------------------
		if (wasDef( typeof(oBrwGridItens) ) ) {
			oBrwGridItens.setEmptyDiv();
		}
		//-----------------------------------------------------------
		// verifica se foi chamado pela navegacao
		//-----------------------------------------------------------
		var cBuscaTReg = getGridCall(cBrwGridItens,'fGetItens');
	
		//-----------------------------------------------------------
		// web function que vai executar a query do grid						   
		//-----------------------------------------------------------
		Ajax.open("W_PPLGDGRID.APW?cFunName=PLB4FB7D&nPagina=" + getField(cBrwGridItens+'nPagina') + "&cWhere=" + cWhere + "&cBuscaTReg=" + cBuscaTReg, {
				callback: carregaGridItens, 
				error: exibeErro} );
	} 

	//-----------------------------------------------------------
	// Callback da função que carrega os itens da solitação
	//-----------------------------------------------------------
	function carregaGridItens(v) { 
		var aResult = v.split("|");
		//-----------------------------------------------------------
		// Se existe registro define propriedades
		//-----------------------------------------------------------
		var nQtdReg		= aResult[1];  
		var nQtdPag 	= aResult[2];
    	var aHeader 	= eval(aResult[4]);
    	var lContinua	= eval(aResult[7]);
    	var cMsg 		= aResult[6];
    	var nRegPagIte	= aResult[3];
    	var aDadIte	 	= (lContinua) ? eval(aResult[5]) : aDadProt;
		var cBtnFunc    = "[{info:'Observações',img:'message.png',funcao:'fObsItRec'}";
		cBtnFunc += cStatusB4F == "A" ? ",{info:'Excluir',img:'004.gif',funcao:'fDelIte'}" : "";
		cBtnFunc += "]"
		//----------------------------------------------------------------------------
		// Seta a quantidade total de paginas - seta somente quando nao for navegacao
		//----------------------------------------------------------------------------
		if (lContinua) {		
			//-----------------------------------------------------------
			// Cria objeto do browse
			//-----------------------------------------------------------
			oBrwGridItens = new gridData(cBrwGridItens);
			//-----------------------------------------------------------
			// Monta Browse 
			//-----------------------------------------------------------
			oBrwGridItens.load({fFunName:'fGetItens',
						nRegPagina:nRegPagIte,
						nQtdReg:nQtdReg,
						nQtdPag:nQtdPag,
						lOverflow:true,
						lShowLineNumber:false,
						lChkBox:false,
						aBtnFunc: cBtnFunc,
						aHeader: aHeader,							
						aCols: aDadIte,
						cColLeg:'B7D_OK',						
						aCorLeg:"[{valor:'T',imgcor:'icon-green'},{valor:'F',imgcor:'icon-red'}]"
//T=Aprovado;F=Rejeitado;	
			});	

			if(oBrwGridItens.aCols.length > 0){	
				updGridSchemeColor();  
				parent.$("body").animate({
              		scrollTop: $("#"+oBrwGridItens.cConteiner).offset().top - $('html, body').offset().top + $('html, body').scrollTop()
        		}, 1000);
			}			
		}					
		//-----------------------------------------------------------
		// Mensagem de erro
		//-----------------------------------------------------------
		if ( !isEmpty(cMsg) ) alert(cMsg);
	}                                     
                                                       
	//----------------------------------------------------------------------
	// Deleta Protocolo de receita
	//----------------------------------------------------------------------
	function fDelRec(x) {
		var dados = x.split("~");
		var cStatus = dados[0];
		var nRecno 	= dados[1];	
		elemDel = this.event.target.parentNode.parentNode.parentNode;
		if(cStatus == "A"){   //quando está em solicitação não concluida não pode excluir
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>Deseja mesmo excluir esse item?</p>', "@Sim~ window.frames[0].fConfirmDelRec('" +nRecno+"');@Não~closeModalBS();", "white~ #f8c80a", "large");
		} else{
			ShowModal("Atenção", "É possível excluir apenas solicitações não concluídas!", false);
		}
		
	}

	function fConfirmDelRec(nRecno){
		closeModalBS();	
		
		Ajax.open("W_PPLEXCUSC.APW?cRecno=" + nRecno + "&cAlias=B4F", {
				callback: carregaDelRec, 
				error: exibeErro
			});
	}

	//----------------------------------------------------------------------
	// Resultado delete Protocolo
	//----------------------------------------------------------------------
	function carregaDelRec(v) { 

		if (elemDel != null) {
			$(elemDel).remove();
			if(wasDef( typeof(oBrwGridItens) ) )
				oBrwGridItens.setEmptyDiv();
			var tab = $("#"+oBrwGridProt.cNameTab).children("tBody")[0]
			if(tab.rows.length == 0 )
				oBrwGridProt.setEmptyDiv();
			elemDel = null;
		} 
		
		//----------------------------------------------------------------------
		// retorno do processamento
		//----------------------------------------------------------------------
		ShowModal("Sucesso", "Excluído com sucesso!", true);	 
	}

	//----------------------------------------------------------------------
	// Deleta item do Protocolo
	//----------------------------------------------------------------------
	function fDelIte(x) {
    	var dados = x.split("~");
		var cStatus = dados[0];
		var nRecno 	= dados[1];
		var cAlias  = dados.length > 2 ? dados[2] : "B7D";
		elemDel = this.event.target.parentNode.parentNode.parentNode;
		if(cStatus == "A"){   //quando está em solicitação não concluida não pode excluir
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>Deseja mesmo excluir esse item?</p>', "@Sim~ window.frames[0].fConfirmDelIte('" +nRecno+"','" + cAlias + "');@Não~closeModalBS();", "white~ #f8c80a", "large");
		} else{
			ShowModal("Atenção", "É possível excluir apenas itens de solicitações não concluídas!", false);
		}
		
	}

	function fConfirmDelIte(nRecno){
		closeModalBS();
		Ajax.open("W_PPLEXCUSC.APW?cRecno=" + nRecno + "&cAlias=B7D", {
				callback: carregaDelIte, 
				error: exibeErro} );
	}

	//----------------------------------------------------------------------
	// Resultado delete item
	//----------------------------------------------------------------------
	function carregaDelIte(v) { 
		
		if (elemDel != null) {
			$(elemDel).remove();
			var tab = $("#"+oBrwGridItens.cNameTab).children("tBody")[0]
			if(tab.rows.length == 0 )
				$($("#"+oBrwGridItens.cConteiner).parent()).remove();
			elemDel = null;
		} 

		ShowModal("Sucesso", "Item excluído com sucesso!", true);	 
	
	}

	//----------------------------------------------------------------------
	// desabilita campos de acordo com o campo de pesquisa de protocolo
	//----------------------------------------------------------------------
	function DisabCamp() { 

 		if (document.getElementById("Field_NROPROT").value != "") {
	
			document.getElementById("Field_DTDE").disabled = true; 
			document.getElementById("Field_DTATE").disabled = true;
			document.getElementById("Field_STPROC").disabled = true;
			document.getElementById("Field_NOMBEN").disabled = true;
			return

 		} else {
			document.getElementById("Field_DTDE").disabled = false; 
			document.getElementById("Field_DTATE").disabled = false;
			document.getElementById("Field_STPROC").disabled = false;
			document.getElementById("Field_NOMBEN").disabled = false;
			document.getElementById("Field_NROPROT").value = "";
		}
	
	}

	//----------------------------------------------------------------------
	// Exibe guias do peg selecionado
	//----------------------------------------------------------------------
	function fObsItRec(v) {
	
		var nRecno = v;

		Ajax.open("W_PPLOBSPRT.APW?cRecno=" + nRecno + "&cTipo=receita", {
					callback: fRetObs, 
					error: exibeErro} );
	}

	//----------------------------------------------------------------------
	// Retorna a observação do campo BOW_MOTIND
	//----------------------------------------------------------------------
	function fRetObs(v) {
		var cMsg = v.split("|");
 		ShowModal("Observação", cMsg[1],eval(cMsg[0]));
	} 

	function fAnexar(cDados){
		cDados = cDados.split("~");
		cChave = cDados[0];	
		cRecno = trim(cDados[1]);
		cAlitab = "B4F";
		cRec = cDados[1];

		Ajax.open("W_PPLUPGEN.APW?cModo=2&cRecno="+ cRecno +"&cChave="+cChave+"&NumInd=1&cAlitab="+cAlitab, {callback: mostraUpload, error: ExibeErro} );

	}   

	function mostraUpload(v) {
		var anexoCHTM = document.querySelector("#anexoCHTM");
		anexoCHTM.innerHTML = v;
		modalBS("<i style='color:#639DD8;' class='fa fa-paperclip fa-lg'></i>&nbsp;&nbsp;Anexos", "<form name='frmUpl' id='frmUpl' action='' method='post'>" + anexoCHTM.innerHTML  + "</form>", "@Concluir~window.frames[0].closePop(" + cRec + ");", "white~#84CCFF");	
		parent.document.getElementById("closeModal").onclick = 'window.frames[0].closePop(' + cRec + ');';
		//pego o botão da tela de anexos genericas e faço o click para carregar a grid de documentos
		parent.document.getElementById("btn_Oculto").style.display="none";
		parent.document.getElementById("btn_Oculto").click();
	}

	function closePop(cRecno){

		parent.document.getElementById("closeModal").removeAttribute("onclick"); //removo a função de onclick que coloquei na modal generica
		var nAnexo = parseInt(parent.document.getElementById("anexo").value);

		if(nAnexo > 0){
			Ajax.open("W_PPLCGB4F.APW?cRecno="+cRecno+"&cStatus=2", {callback: fechaPop, error:exibeErro} );
		}
		else
			closeModalBS();
	}   

	function fechaPop(v){
		closeModalBS();
		fGetProt();
	}  


	//----------------------------------------------------------------------¿
	// Exibe erros no processamento das funcoes						 	    
	//----------------------------------------------------------------------Ù
	function ExibeErro(v) {                   
		var aResult = v.split("|"); 
            
		if (aResult[0] != "true" && aResult[0] != "false")
	       alert("Erro: " + aResult[0])
	    else {   
			if (aResult[0] == "false") {
			  alert(aResult[1]);          

			  if(typeof cCampoRef != 'undefined' && !document.getElementById(cCampoRef).disabled)
				  document.getElementById(cCampoRef).focus();
			}   
		}
		cLinArray = '0';	
	}
    
//-->
</script>

<%                                        
//----------------------------------------------------------------------
// Formulario
//----------------------------------------------------------------------
oForm := WCForm():New("Form1")                       
oForm:setTitle("Consulta Protocolos de Uso Constante")
	//----------------------------------------------------------------------
	// Tabela principal
	//----------------------------------------------------------------------
	oTabConFC := WCTable():New("tabConsulta")
		//----------------------------------------------------------------------
		// Linha parametros de pesquisa
		//----------------------------------------------------------------------
		oLiParFC := WCLine():new()
			//----------------------------------------------------------------------
			// Fieldset de parametros
			//----------------------------------------------------------------------
			oFSParFC := WCFieldSet():new("Selecionar parâmetros",,"10","10", "fsParam")
				//-------------------------------------------------------------------
				//		Campo para informar o nome do beneficiário
				//-------------------------------------------------------------------
				oNomBen := WCComponent():New("C","Field_NOMBEN","Nome do beneficiário")
				oNomBen:setObrigat(.T.)
				oFSParFC:setAddCFS(oNomBen)   
				//-------------------------------------------------------------------
				//		Campo para informar o número do protocolo
				//-------------------------------------------------------------------
				oNroProt := WCComponent():New("F","Field_NROPROT","Protocolo:","40","20") 
				oNroProt:setObrigat(.t.)  
				oNroProt:setJsChange("return DisabCamp();") 
				oFSParFC:setAddCFS(oNroProt)
				//----------------------------------------------------------------------
				// Campo para informar Data de
				//----------------------------------------------------------------------
				oDtDeFC := WCComponent():new("F","Field_DTDE","Mês/Ano De:","11","7")
				oDtDeFC:setObrigat(.t.)    
				oDtDeFC:setCSS("date-picker")    
				oDtDeFC:setValue( SubStr(dToc(date()-(HttpSession->USR_INFO[1]:OWSUSERLOGPLS:nINTDAT-1)),4,7) )
				oDtDeFC:setJSKeyPre("return TxtBoxFormat(this, event,'99/9999');")
				//oDtDeFC:setJSBlur("validaCmp(this, 'data','Data invalida');")
				oFSParFC:setAddCFS(oDtDeFC)
				//----------------------------------------------------------------------
				// Campo para informar Data ate
				//----------------------------------------------------------------------
				oDtAteFC := WCComponent():new("F","Field_DTATE","Mês/Ano Ate:","11","7")
				oDtAteFC:setObrigat(.t.)      
				oDtAteFC:setCSS("date-picker") 
				oDtAteFC:setValue( SubStr(dtoc(date()),4,7) )
				oDtAteFC:setJSKeyPre("return TxtBoxFormat(this, event,'99/9999');")
				//oDtAteFC:setJSBlur("validaCmp(this, 'data','Data invalida');")
				oFSParFC:setAddCFS(oDtAteFC)
				//----------------------------------------------------------------------
				// Campo para informar  Status do protocolo
				//----------------------------------------------------------------------
				oStDoc := WCComponent():New("C","Field_STPROC","Status:","200")
				oFSParFC:setAddCFS(oStDoc)    
				oLiParFC:setAddComp(oFSParFC)
		//----------------------------------------------------------------------
		// Linha Botao exibir
		//----------------------------------------------------------------------
		oLiBtnConFC := WCLine():New()
			//----------------------------------------------------------------------
			// Botão exibir
			//----------------------------------------------------------------------
			oBConFC := WCComponent():New("B","bConsFC","Exibir")
			oBConFC:SetJsFunc("fGetProt();")
			oBConFC:setAlign('right')

			oLiBtnConFC:setAddComp(oBConFC)     
	//-------------------------------------------------------------------
	//	Linha para legendas (Protocolo)
	//-------------------------------------------------------------------	
	oLiLeg := WCLine():New()
		//----------------------------------------------------------------------
		// Fieldset da legenda
		//----------------------------------------------------------------------
		oFSLiLeg := WCFieldSet():new("Legenda")

			oLegAm := WCComponent():New("LEG","bLegAm","Solicitação não concluída")
			oLegAm:setCss("icon-yellow")
			oFSLiLeg:setAddCFS(oLegAm)

			oLegLa := WCComponent():New("LEG","bLegLa","Protocolado")
			oLegLa:setCss("icon-orange")
			oFSLiLeg:setAddCFS(oLegLa)

			oLegAz := WCComponent():New("LEG","bLegAz","Em analise")
			oLegAz:setCss("icon-blue")
			oFSLiLeg:setAddCFS(oLegAz)

			oLegVer := WCComponent():New("LEG","bLegVer","Deferido")
			oLegVer:setCss("icon-green")
			oFSLiLeg:setAddCFS(oLegVer)

			oLegVe := WCComponent():New("LEG","bLegVe","Indeferido")
			oLegVe:setCss("icon-red")
			oFSLiLeg:setAddCFS(oLegVe)

			oLegPur := WCComponent():New("LEG","bLegPur","Deferido parcialmente")
			oLegPur:setCss("icon-cyan")
			oFSLiLeg:setAddCFS(oLegPur)

			oLegBro := WCComponent():New("LEG","bLegBro","Pendente Inf. beneficiario")
			oLegBro:setCss("icon-purple")
			oFSLiLeg:setAddCFS(oLegBro)

		oLiLeg:setAddComp(oFSLiLeg)
    
	//----------------------------------------------------------------------
	// Linha do browse de protocolos
	//----------------------------------------------------------------------
	oLiBrwProt := WCLine():new()
		//----------------------------------------------------------------------
		// FieldSet grid que carrega os protocolos
		//----------------------------------------------------------------------
		oFSBrwPEGFC := WCFieldSet():New("Protocolos",,"10","10")    
			//----------------------------------------------------------------------
			// Browse de protocolos
			//----------------------------------------------------------------------
			oBrwPegFC := WCComponent():New("BW",cBrwProt)
			oBrwPegFC:setJsFunc("fGetProt()")
			oFSBrwPegFC:setAddCFS(oBrwPegFC)
			//----------------------------------------------------------------------
			// Div para anexo dos documentos
			//----------------------------------------------------------------------
			oCHTM	:= WCComponent():new('CHTM')
			oCHTM:setValue("<div id='anexoCHTM' style='display:none'></div>")
			oFSBrwPegFC:setAddCFS(oCHTM) 

		oLiBrwProt:setAddComp(oFSBrwPegFC)
	//----------------------------------------------------------------------
	// Linha para legenda dos itens
	//----------------------------------------------------------------------		
	oLiLegI := WCLine():New()
		//----------------------------------------------------------------------
		// FieldSet legenda dos itens
		//----------------------------------------------------------------------
		oFSLiLegI := WCFieldSet():new("Legenda")

			oLegIGr := WCComponent():New("LEG","bLegGr","Procedimento Confirmado")
			oLegIGr:setCss("icon-green")
			oFSLiLegI:setAddCFS(oLegIGr)

			oLegIRd := WCComponent():New("LEG","bLegRd","Procedimento Rejeitado")
			oLegIRd:setCss("icon-red")
			oFSLiLegI:setAddCFS(oLegIRd)

		oLiLegI:setAddComp(oFSLiLegI)

	//----------------------------------------------------------------------
	// Linha do browse dos itens
	//----------------------------------------------------------------------
	oLiBrwGuiaFC := WCLine():new()
		//----------------------------------------------------------------------
		// Fieldset itens
		//----------------------------------------------------------------------
		oFSBrwGuiaFC := WCFieldSet():New("Itens da solicitação",,"10","10")
		//----------------------------------------------------------------------
		// Browse de Guias
		//----------------------------------------------------------------------
		oBrwGuiFC := WCComponent():New("BW",cBrwItens)
		oBrwGuiFC:setJsFunc("fGetGui()")
		oFSBrwGuiaFC:setAddCFS(oBrwGuiFC)
	
	oLiBrwGuiaFC:setAddComp(oFSBrwGuiaFC)

	//----------------------------------------------------------------------
	// Fechamento da Tabela
	//----------------------------------------------------------------------
	oTabConFC:setAddLine(oLiParFC)
	oTabConFC:setAddLine(oLiBtnConFC)
	oTabConFC:setAddLine(oLiLeg)
	oTabConFC:setAddLine(oLiBrwProt)
	oTabConFC:setAddLine(oLiLegI)
	oTabConFC:setAddLine(oLiBrwGuiaFC)

//----------------------------------------------------------------------
// Tabelas do form
//----------------------------------------------------------------------
oForm:setAddTables(oTabConFC)
//----------------------------------------------------------------------
// Form no HTML
//----------------------------------------------------------------------
oHtml:setObj(oForm)
%>

<%=oHtml:loadWC()%> 

<script>
	
		$(function() { 	

			CarregaCombo();
			fFilBen();

			  $('.date-picker').datepicker({			
				changeMonth: true,			
				changeYear: true,
				dateFormat: 'mm/yy',
				monthNames: ['Janeiro','Fevereiro','Março','Abril','Maio','Junho','Julho','Agosto','Setembro','Outubro','Novembro','Dezembro'], 
				monthNamesShort: ['Jan','Fev','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez'], 
				showButtonPanel: true,
				closeText : "Ok",
				currentText: 'Hoje',
				 yearRange: '2000:' + new Date().getFullYear().toString(),
				onClose: function() {			
					var iMonth = $("#ui-datepicker-div .ui-datepicker-month :selected").val();		
					var iYear = $("#ui-datepicker-div .ui-datepicker-year :selected").val();	
					$(this).datepicker('setDate', new Date(iYear, iMonth, 1));				
				},
					
				beforeShow: function(input) {
					debugger;
					if ((selDate = $(this).val()).length > 0)
					{			
						iYear = selDate.substring(selDate.length - 4, selDate.length);			
						iMonth = parseInt(selDate.substring(0, 2)-1);//jQuery.inArray(selDate.substring(0, selDate.length - 5),
			
						$(this).datepicker('option', 'monthNames');
						$(this).datepicker('option', 'defaultDate', new Date(iYear, iMonth, 1));
						$(this).datepicker('setDate', new Date(iYear, iMonth, 1));		
					}			
				}				
 			});                                 

		}); 


</script>

