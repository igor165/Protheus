<% 
	#DEFINE nTpPor getTpPortal()

	LOCAL oHtml 	 := WCHtml():New()
	LOCAL aProc		 := {"Sim","Não"} 
	LOCAL cCab 		 := ''
	LOCAL aDadEst	 := {}
	Local cCodInt 	 := IIF(Valtype(HttpSession->USR_INFO[1]:OWSUSERLOGPLS:OWSLISTOFOPE:OWSSOPERADORA[1]:CCODE) == "C", HttpSession->USR_INFO[1]:OWSUSERLOGPLS:OWSLISTOFOPE:OWSSOPERADORA[1]:CCODE, "")
	Local cTipServ 	 := ""
	Local nResult 	 := iif(Valtype(HttpSession->ClasseProc) <> "U", len(HttpSession->ClasseProc), 0)
	Local nI 		 := 1
	Local cAcao 	 := iif(valtype(HttpGet->cAcao) <> "U", HttpGet->cAcao, "")
	Local cFiltro 	 := iif(valtype(HttpGet->cFiltro) <> "U", HttpGet->cFiltro, "") //quando vem o cfiltro é pq o usuario veio lá da tela de consulta reembolso, filtrou, abriu um protocolo e está editando ou inserindo
	Local cPassos 	 := cMsgs
	Local laDadoLoad := Len(aDadosSoli) > 0 .and. aDadosSoli[1]

	cTipServ := iif(nResult > 0 ,"[", "")

	For nI := 1 to nResult

		cTipServ += "{"
		cTipServ +=  "0:{field:'cCod',   value:'" + HttpSession->ClasseProc[nI]:cCode +   "'},"
		cTipServ +=  "1:{field:'cDescri',value:'" +  alltrim(HttpSession->ClasseProc[nI]:cDescription) + "'},"
		cTipServ +=  "2:{field:'cCodProc',value:'"
 
		if ! empty(HttpSession->ClasseProc[nI]:cCodPad) .and. ! empty(HttpSession->ClasseProc[nI]:cCodProc)
			cTipServ += HttpSession->ClasseProc[nI]:cCodPad  + "|" + alltrim(HttpSession->ClasseProc[nI]:cCodProc)
		endif
		
		cTipServ += "'},"
		cTipServ +=  IIF( nResult != nI ,"},","}]" )

	Next

	if(laDadoLoad)
		cCab 	:= "{Field_TIPDOC:{defaultValue:'" + aDadosSoli[2]:cTipDoc  + "', actualValue:'" + aDadosSoli[2]:cTipDoc  + "'}," 
		cCab	+= "Field_NUMDOC :{defaultValue:'" + aDadosSoli[2]:cNumDoc  + "', actualValue:'" + aDadosSoli[2]:cNumDoc  + "'},"
		cCab	+= "Field_CPFCNPJ:{defaultValue:'" + aDadosSoli[2]:cCpfCnpj + "', actualValue:'" + aDadosSoli[2]:cCpfCnpj + "'}," 
		cCab	+= "Field_NOMEPRE:{defaultValue:'" + aDadosSoli[2]:cNomePre + "', actualValue:'" + aDadosSoli[2]:cNomePre + "'},"
		cCab	+= "Field_DTEMIS :{defaultValue:'" + aDadosSoli[2]:cDtEmis  + "', actualValue:'" + aDadosSoli[2]:cDtEmis  + "'},"
		cCab	+= "Field_UF	   :{defaultValue:'" + aDadosSoli[2]:cUF      + "', actualValue:'" + aDadosSoli[2]:cUF      + "'},"
		cCab	+= "Field_CIDADE :{defaultValue:'" + aDadosSoli[2]:cCidade  + "', actualValue:'" + aDadosSoli[2]:cCidade  + "'}}"
	else
		cCab 	:= "{Field_TIPDOC:{defaultValue:'', actualValue:''},"
		cCab	+= "Field_NUMDOC :{defaultValue:'', actualValue:''},"
		cCab	+= "Field_CPFCNPJ:{defaultValue:'', actualValue:''},"
		cCab	+= "Field_NOMEPRE:{defaultValue:'', actualValue:''},"
		cCab	+= "Field_DTEMIS :{defaultValue:'', actualValue:''},"
		cCab	+= "Field_UF	   :{defaultValue:'', actualValue:''},"
		cCab	+= "Field_CIDADE :{defaultValue:'', actualValue:''}}"
	endIf

%>

<%=oHtml:getDType(.T.,.T.)%>

<style>
	.btn-detail{
		border-bottom: none;
		border-bottom-left-radius: 0px;
		border-bottom-right-radius: 0px;
		color: #353434;
    	background-color: rgb(231, 231, 231);
    	border-color: #777777;
	}

    .btn-actions{
		border-top: none;
		border-top-left-radius: 0px;
		border-top-right-radius: 0px;
	}

	.btn-custom{
		background-color:#565656;
		border-color: #565656;
		color : #ffffff;
	}

	.btn-criticas{ 
		margin-right:5px;
		margin-bottom: 5px;
		color: #000;
	}

	.btn-hide{
		display:none;
	}

	.btn-show{
		display:block;
	}

	.btn-custom:hover, .btn-custom:focus, .btn-custom.focus, .btn-custom:active, .btn-custom.active, .open > .dropdown-toggle.btn-custom {
		background-color:#777777;
		border-color: #777777;
		color : #ffffff;
	}

	#FS_model_desp{
		display:none;
	}

	.contentForm{
		display:block;
		margin-bottom:15px;
		margin-top:15px;
	}

	.divCaixa{
		border:1px solid #ccc;
		border-radius:5px;
		margin:10px;
	}


	.divResume{
		min-height:50px;
		display:none;
		position:relative;
		padding:15px;
		padding-bottom:0;
	}

	.divFormDesp{
		min-height:50px;
		display:block;
		position:relative;
		padding:15px;
		padding-bottom:0;
	}

	.divBtnBot{
		position:absolute;
		bottom:0; 
	}

	.divBtnTop{
		position:absolute;
		top:0;
		left:0; 
		padding: 0px;
		padding-left: 10px;
    	border-bottom: 1px solid #ccc;
    	background-color: rgb(231,231,231);
	}

	.labelDesp{
		padding: 0px;
		margin-top: 5px;
		left: 0px;
	}

	.btnsDesp{
		padding: 0px;
	}

	.divDet{
		margin-bottom:30px;
		margin-top:15px;
		text-align:center;
		display:table;
		font-style: italic;
	}

	.textDet{
  		display: table-cell;
  		vertical-align: middle;
	}

	.med_usoConst{
		display:none;
	}

	.divEmpresa{
		 text-align: center;
    	 border: 1px solid #ccc;
    	 display: table;
    	 min-height: 100px;
    	 border-radius: 5px;	
		 padding:15px;
	}

	.spinnerDiv{
		width: 100%;
   	 	height: 89%;
    	position: absolute;
    	background-color: rgba(58, 52, 52, 0.34);
    	z-index: 999999;
    	text-align: center;
		display:none;
	}

	.checkbox .cr{
   	 	position: relative;
    	display: inline-block;
    	border: 1px solid #a9a9a9;
    	border-radius: .25em;
    	width: 1.3em;
    	height: 1.3em;
    	float: left;
    	margin-right: .5em;
	}


	/*********************ESTILO ESPECIFICO PARA POPOVER*********************/
	.popover-cmpOb{
    	border: 1px solid #FF8100;
		background-color: #FFF2B5;
	}

	/* Popover Header */
	.popover-cmpOb > .popover-title {
    	background-color: #f8c80a; 
    	color: #000000; 
	}

	/* Popover Body */
	.popover-cmpOb > .popover-content {
    	background-color: #FFF2B5;
    	color: #000000;
	}

	.popover-cmpOb.top .arrow:after {
  		border-top-color: #FFF2B5;
	}

	/* Popover Arrow */
	.popover-cmpOb.top > .arrow {
    	border-top-color: #FF8100 !important;
	}

	.glyphicon {
    	font-size: 20px;
	}

	.select2-dropdown{
		z-index:9999 !important;
	}	

	/*************************************************************************/
	

</style>

<script>

	var nTpPor          = <%=STR(nTpPor)%>;
	var nCont = 0;
	var caixaAtiva = "";
	var caixaAberta = "";
	var caixaAux = ""; //para quando eu for gravar um item
	var itemToSave = new Array();
	var detail = "Beneficiário:~Field_NOMBEN;Tipo de serviço:~Field_TIPSER;Valor Total:~Field_VALOR;Quantidade:~Field_QTD; Data de Execução:~Field_DTEXEC";
	var cCodSol = '<%=iif(empty(cCodSol), 0, cCodSol)%>';
	var mv_plrecob =  <%=lRecOb%>;
	var mv_plreemc = <%=lMultComp%>;
	var mv_pltoure = <%=lTourReemb%>;
	var lSolRee	= <%=lSolRee%>;
	var qtdItemDespesa	= 0;
	var cOpemov = '<%= StrZero( Val(cCodInt), 4) %>';
	var nqtdUsr = 0;
	var cStrSaved = "" //ultima string gravada para fazer o controle de alteração na página e evitar idas desnecessárias ao servidor
	var lAltera ='<%=iif(len(aDadosSoli) > 0, "true", "false")%>'
	var cLieCon = <%='"'+HttpSession->cLieCon+'"'%>;
	var lClickAnexo = false;
	var lClickFim = false;
    var oCabecalho = <%=cCab%>;
	var cChaveAnt = "";
	var cAcao = '<%=cAcao%>';
	var cFiltro = '<%=cFiltro%>';
	var lfinSol = false;  
	var lfinitem = false;
	var lNExbParcial = false;
	var YouShallnotPass = false;
	var lDadLoad = false; 
	
	<% If laDadoLoad %>
		lDadLoad = true;
	<% EndIf %>
	
	<% If(!empty(cPassos)) %>
		var cPassos = JSON.parse('<%=cPassos%>');
	<% Else %>
		var cPassos = '';
	<% EndIf %>

    window.onbeforeunload = function(){
		$(window.parent.document.getElementById("divFinalBtn")).remove();
		$(window.parent.document.getElementById("divFinalMsg")).remove();
 	};
	
	/*//////////////////////////////////////////////////////////////////////
	// Função: fRetEstado
	//
	// Retorna todos os estados para seleção.
	*///////////////////////////////////////////////////////////////////////
	
	function fRetEstado(v) {  

		var aResult = v.split("|");
    	var aCols 	= eval(aResult[0]);
		var nqtdTip = aCols.length;	
		var nI
    	var aDadEst = new Array(nqtdTip);

		for (nI=0; nI< nqtdTip; nI++){
     		aDadEst[nI] = aCols[nI][1].value + '$'+ aCols[nI][1].value; 
    	}
	
		comboLoad("Field_UF",aDadEst);
	
		if(<%= Len(aDadosSoli) %> > 0){
			var cUf = <%= "'" + iif(Len(aDadosSoli) > 1, aDadosSoli[2]:cUf, "") + "'" %>
			$('#Field_UF option:contains(' + cUf.trim() + ')').attr('selected','selected');
			carregaCidSel(cUf.trim(),'Field_CIDADE', '<%=iif(Len(aDadosSoli) > 1, aDadosSoli[2]:cCidade, '')%>');			
		}
	} 
	
	/*//////////////////////////////////////////////////////////////////////
	// Função: putDivBtnFim
	//
	// Retorna Manipula as divs dos botões.
	*///////////////////////////////////////////////////////////////////////
	function putDivBtnFim(){
		var btnFinal = document.createElement("DIV");
			btnFinal.id = "divFinalBtn";
			
		$(btnFinal).css( {
			"position": "fixed",								 
			"bottom": "0",
			"right" : "0",
			"background-color" : "rgba(119, 119, 119, 0.55)",
			"height" : "50px",
			"width" : "100%"
		} ); 

		var btnFinal2 = document.createElement("DIV");
			btnFinal2.className = "posicaoRight";
		
		$(btnFinal2).css( {
			"display": "inline-block",								 
			"vertical-align": "middle",
			"margin" : " 0 auto",
			"margin-right" : "10px",
			"line-height" : "3.5em"
		} ); 

	    if(!mv_plreemc){
			var cBtnFinal ='<button name="btn_finalizar_reemb" id="btn_finalizar_reemb" type="button" class="btn btn-default btn-theme" onclick=window.frames["principal"].frameElement.contentWindow.fValidaSol(window.frames["principal"].Form1)>Finalizar Solicitação</button>';
			if ( lNExbParcial ) {//significa que na última hora excluiu uma despesa e adicionou outra e em seguida, clicou em confirmar
				var cH4 = "";
				lNExbParcial = false;
			} else {	
				var cH4 ='<h4 style="color: #fff;font-weight: bold;margin-left: 25px;display: inline-block;vertical-align: middle;margin: 0px 10px 0px 15px;"> <i> Solicitação parcialmente salva... </i></h4>';
			}
		}else{
			var cBtnFinal ='<button name="btn_finalizar_reemb" id="btn_finalizar_reemb" type="button" class="btn btn-default btn-theme" onclick=window.frames["principal"].frameElement.contentWindow.fValidaSol(window.frames["principal"].Form1)>Finalizar Comprovante</button>';
		 	if ( lNExbParcial ) {
				var cH4 = "";
				lNExbParcial = false;
			} else {
		 		var cH4 ='<h4 style="color: #fff;font-weight: bold;margin-left: 25px;display: inline-block;vertical-align: middle;margin: 0px 10px 0px 15px;"> <i> Comprovante parcialmente salvo... </i></h4>';
			}
		}

		btnFinal2.innerHTML = cBtnFinal;
		btnFinal.appendChild(btnFinal2);
	
		window.parent.document.getElementById("wrapper").appendChild(btnFinal);	

		btnFinal = document.createElement("DIV");
		btnFinal.id = "divFinalMsg";

		$(btnFinal).css( {
			"position": "fixed",								 
			"bottom": "0",
			"right" : "0",
			"background-color" : "rgba(119, 119, 119, 0.55)",
			"height" : "50px",
			"width" : "100%",
			"display" : "none"
		} ); 

		btnFinal2 = document.createElement("DIV");

		$(btnFinal2).css( {
			"display": "inline-block",								 
			"vertical-align": "middle",
			"margin" : " 0 auto",
			"margin-right" : "10px",
			"line-height" : "3.5em"
		} ); 

			   

		btnFinal2.innerHTML = cH4;
		btnFinal.appendChild(btnFinal2);
				
		window.parent.document.getElementById("wrapper").appendChild(btnFinal);
	
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// popoverOnSave
	//
	// Popover com alerta de campos obrigatórios.
	*///////////////////////////////////////////////////////////////////////
	function popoverOnSave(){
		$(".popover-div").popover({
			placement: "top",
			html : true,
			trigger: 'manual',
       		content: function() {
       			var content = $("#popoverMsg");
       			return $(content).children(".popover-body").html();
      		},
	        title: function() {
      			var title = $("#popoverMsg");
       			return $(title).children(".popover-heading").html();
     		 },

			template: '<div class="popover-cmpOb popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    	});
	}

	/*//////////////////////////////////////////////////////////////////////
	// fFilTpComp
	//
	// Carrega as opções do combo tipo de documento.
	*///////////////////////////////////////////////////////////////////////
	function fFilTpComp(){
		Ajax.open("W_PPLTIPDOC.APW", { callback: CrgCbTpDoc, error: exibeErro});
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// CrgCbTpDoc
	//
	// Manipula o campo do tipo de documento.
	*///////////////////////////////////////////////////////////////////////
	function CrgCbTpDoc(v) {  

			var aResult = v.split("|");
    		var aCols 	= eval(aResult[0]);
			var nqtdTip = aCols.length;	
			var nI
    		var aDadCombo = new Array(nqtdTip);

			for (nI=0; nI< nqtdTip; nI++){
       			 aDadCombo[nI] =  aCols[nI][1].value + '$'; //Value
    			 aDadCombo[nI] += aCols[nI][1].value + '$'; //Text
    			 aDadCombo[nI] += 'imgHelp#' + aCols[nI][2].value + '$'; //Nova property do combo: imgHelp
    			 aDadCombo[nI] += 'obriga#' + aCols[nI][3].value; //Nova property do combo: obriga
      		}
	
			comboLoad("Field_TIPDOC",aDadCombo);
			
			//Verifica se existe dados na private da solicitação para edição
			
			if(<%= Len(aDadosSoli) %> != 0)
			{
				var cTipDoc = <%= "'" + iif(Len(aDadosSoli) > 1, aDadosSoli[2]:cTipDoc, "") + "'" %>
				$('#Field_TIPDOC option:contains(' + trim(cTipDoc) + ')').attr('selected','selected');
				fChangeLabel();	
				
			}
	}  
	
	/*//////////////////////////////////////////////////////////////////////
	// CrgCbTpSer
	//
	// Carrega as opções do combo Tipo de serviço = classe de procedimento.
	*///////////////////////////////////////////////////////////////////////
	function CrgCbTpSer() {  
          var oItens = <%= iif ( empty(cTipServ), '""', cTipServ ) %>
		  var nqtdTip = oItens.length;	
          var aDadCombo = new Array(nqtdTip);			

		  for (var nI=0; nI< nqtdTip; nI++){
       			 aDadCombo[nI] =  oItens[nI][0].value + '$'; //Value
    			 aDadCombo[nI] += oItens[nI][1].value + '$'; //Text
    			 aDadCombo[nI] += 'padcodproc#' + oItens[nI][2].value; //Nova property do combo: padcodproc
      	  }
	
		   comboLoad("Field_TIPSER",aDadCombo, false, true);
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// fFilBen
	//
	// Carrega informações com os beneficiarios do grupo familiar/empresa.
	*///////////////////////////////////////////////////////////////////////
	function fFilBen(DtRecibo){		
		
		var lDtRecibo = DtRecibo == undefined ? false : true;
		
		if(lDtRecibo){
			Ajax.open("W_PPLCARBA1.APW?DtRecibo="+DtRecibo, {callback: carregaBenefs, error: exibeErro});
		
		}else{
			Ajax.open("W_PPLCARBA1.APW", {callback: carregaBenefs, error: exibeErro});
		}
	} 

	/*//////////////////////////////////////////////////////////////////////
	// carregaBenefs
	//
	// Carrega Combo com os beneficiarios do grupo familiar/empresa.
	*///////////////////////////////////////////////////////////////////////
	function carregaBenefs(v){
		var aResult = v.split("|");
   		var aCols 	= eval(aResult[0]);
		var nI;
        var cDatDoc;
		var aDadCombo = new Array(nqtdUsr);
		nqtdUsr = aCols.length;	

		if(aDadCombo.length > 0) {							
			deleteItem(caixaAtiva.substr(8,1), false);		
			nqtdUsr = aCols.length;							
		}
		
		if(!lDadLoad){
			if(nqtdUsr == 1){
				cDatDoc = document.getElementById('Field_DTEMIS').value
				//quando tiver apenas um usuário na familia faço isso para já carregar as receitas no load da página
				loadReceitas(document.querySelector("#Field_RECEITA"), aCols[0][0].value, cDatDoc);						
			}						
		}
		
		for (nI=0; nI< nqtdUsr; nI++){
				aDadCombo[nI] = aCols[nI][0].value + '$'+ aCols[nI][1].value; 					
		}
	
		comboLoad("Field_NOMBEN",aDadCombo);			

		$('input[name=Field_USOCONST][value=2]').prop('checked', true);
		$("#FS_model_desp > legend").remove();
		
		//Carrega itens do protocolo selecionado para edição
		if(<%= Len(aDadosSoli) %> > 0) {
			LoadItensProt();
		} else {									
			newDesp(document.querySelector("#FS_model_desp"), 'Despesa');												
			$('input[name=Field_USOCONST_'+caixaAtiva+'][value=2]').prop('checked', true);
			$("#Field_VALOR_"+caixaAtiva).maskMoney({prefix:'', allowNegative: true, thousands:'.', decimal:',', affixesStay: false});
						
		}
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// LoadItensProt
	//
	// Carrega itens do protocolo selecionado para edição.
	*///////////////////////////////////////////////////////////////////////
	function LoadItensProt(){
		var cDatDoc = '';

		$('#Field_CODSOL').val('<%= iif(Len(aDadosSoli) > 1, aDadosSoli[2]:cCodSol, "0") %>');

		<% While (nX <= iif(Len(aDadosSoli) == 2, Len(aDadosSolic[2]:OWSLISTDESP:OWSSITENSREEMB), 0)) %>
			newDesp(document.querySelector("#FS_model_desp"), 'Despesa');
						
			var cMatric 	= '<%= aDadosSoli[2]:OWSLISTDESP:OWSSITENSREEMB[nX]:cMatric %>'
			var cTipSer 	= '<%= aDadosSoli[2]:OWSLISTDESP:OWSSITENSREEMB[nX]:cTipSer %>'
			var cUsoCont 	= '<%= aDadosSoli[2]:OWSLISTDESP:OWSSITENSREEMB[nX]:cUsoC %>'	

			//Carrega combos	
			$('#Field_NOMBEN_' + caixaAtiva + ' option[value=' + trim(cMatric) + ']').prop('selected',true);			
			$('#Field_TIPSER_' + caixaAtiva + ' option[value="' + trim(cTipSer) + '"]').prop('selected',true);
			var bntS = document.querySelector("#btnS"+caixaAtiva.substring(8)+"_"+caixaAtiva);
			$(bntS).removeClass( "btn-hide" );
			$(bntS).addClass( "btn-show" );
		
			//Carrega textfield
			var cRetProc = '<%= aDadosSoli[2]:OWSLISTDESP:OWSSITENSREEMB[nX]:cCodPro %>'
			var aRetProc = cRetProc.split("|");
			var cCodProc = '';
			var cNomProc = '';	
			
			cCodProc = aRetProc[0];
			cNomProc = aRetProc[1];

			$('#Field_CODPROC_'+caixaAtiva).val(cCodProc);
			$('#Field_NOMPROC_'+caixaAtiva).val(cNomProc);
			$('#Field_QTD_'+caixaAtiva).val('<%= aDadosSoli[2]:OWSLISTDESP:OWSSITENSREEMB[nX]:cQtdPro %>');

			$("#Field_VALOR_"+caixaAtiva).maskMoney({prefix:'', allowNegative: true, thousands:'.', decimal:',', affixesStay: false});
			$('#Field_VALOR_'+caixaAtiva).val(stripLeftZeros('<%= aDadosSoli[2]:OWSLISTDESP:OWSSITENSREEMB[nX]:cVlrPro %>'));

			$('#Field_CODPAD_'+caixaAtiva).val('<%= aDadosSoli[2]:OWSLISTDESP:OWSSITENSREEMB[nX]:cCodPad %>');
			
			//Carrega receitas
            cDatDoc = document.getElementById('Field_DTEMIS').value
			loadReceitas($('#Field_NOMBEN_'+caixaAtiva));
			$('#Field_CODMED_'+caixaAtiva).val('<%= aDadosSoli[2]:OWSLISTDESP:OWSSITENSREEMB[nX]:cCodMed %>');
			$('#Field_SEQMED_'+caixaAtiva).val('<%= aDadosSoli[2]:OWSLISTDESP:OWSSITENSREEMB[nX]:cSeqMed %>');
			$('#Field_CODREC_'+caixaAtiva).val('<%= aDadosSoli[2]:OWSLISTDESP:OWSSITENSREEMB[nX]:cCodRec %>');
			
			//Carrega nome do procedimento
			//fRetProc(document.getElementById("Field_CODPROC_"+caixaAberta));
			
			//Carrega radio			
			if(cUsoCont == "1"){
				$('input[name=Field_USOCONST_'+caixaAtiva+'][value=1]').click(); 
				$("#Field_RECEITA_"+caixaAtiva).parents(".med_usoConst").css( "display", "block" );
			}else{				
				$('input[name=Field_USOCONST_'+caixaAtiva+'][value=2]').click(); 
			}		
			
			//Carrega recno do item
			$('#recno_'+caixaAtiva).val('<%= aDadosSoli[2]:OWSLISTDESP:OWSSITENSREEMB[nX]:cRecNoItem %>');			
			
			loadItensHidden();

		<% nX++; enddo %>	
		
		fGetUpl();
				
		if( !isEmpty( $('#Field_DTEMIS').val()) ){  
			//desabilita para edição os campos de cabeçalho 
			DisableHeader(true);
		} 

	}

	/*//////////////////////////////////////////////////////////////////////
	// loadItensHidden
	//
	// Preenche o hidden de campos de cada divCaixa.
	*///////////////////////////////////////////////////////////////////////
	function loadItensHidden(){
		var cDtDoc		= document.getElementById('Field_DTEMIS').value;
		var cNomBen		= getField('Field_NOMBEN_'+caixaAtiva);
		var aTipServ	= getField('Field_TIPSER_'+caixaAtiva).split("|");
		var cUsoConst	= $('input[name=Field_USOCONST_'+caixaAtiva+']:checked').val();
		var cCodPro		= getField('Field_CODPROC_'+caixaAtiva);
		var cQtd		= getField('Field_QTD_'+caixaAtiva);
		var cValor		= getField('Field_VALOR_'+caixaAtiva);
		var cReceita	= getField('Field_RECEITA_'+caixaAtiva);
		var cDataExec	= getField('Field_DTEXEC_'+caixaAtiva);
		var cCodPad     = "";
		var cCodRec     = "";

		var cTipoComp	= document.getElementById('Field_TIPDOC').value;
		var cCPFCNPJ	= document.getElementById('Field_CPFCNPJ').value;
		var cNomePres	= document.getElementById('Field_NOMEPRE').value;
		var cNumNota	= document.getElementById('Field_NUMDOC').value;
		
		var cUf	        = document.getElementById('Field_UF').value;
		var cCidade	    = document.getElementById('Field_CIDADE').value;

		if((cUsoConst == "1" && mv_plrecob && cReceita != "") || (cUsoConst == "1" && !mv_plrecob && cReceita != "")){ 
			cCodPad = cReceita.split("|")[0];
			cCodRec = document.querySelector("#Field_RECEITA_"+caixaAtiva).selectedOptions[0].parentElement.attributes.getNamedItem("codrec").value;
			cCodPro = cReceita.split("|")[1];
		}else
			cCodPad =  getField('Field_CODPAD_'+caixaAtiva);
		
		itemsToSave = {
			"itemsReemb":[
    			{"field" : "Field_MATRIC"  , "value" : cNomBen  }, 
    			{"field" : "Field_TIPSER"  , "value" : aTipServ[0] },
    			{"field" : "Field_USOCONST", "value" : cUsoConst},
				{"field" : "Field_CODPROC" , "value" : cCodPro  },
				{"field" : "Field_QTD"     , "value" : cQtd     },
				{"field" : "Field_VALOR"   , "value" : cValor   },
				{"field" : "Field_CODMED"  , "value" : cReceita != "" ? cReceita.split("|")[1] : "" },
				{"field" : "Field_SEQMED"  , "value" : cReceita != "" ? cReceita.split("|")[2] : "" },
				{"field" : "Field_CODREC"  , "value" : cCodRec  }, // CODREC
				{"field" : "Field_CODPAD"  , "value" : cCodPad  },
				{"field" : "Field_TIPDOC"  , "value" : cTipoComp},
				{"field" : "Field_CPFCNPJ" , "value" : cCPFCNPJ },
				{"field" : "Field_NOMEPRE" , "value" : cNomePres},
				{"field" : "Field_NUMDOC"  , "value" : cNumNota },
				{"field" : "Field_DTEMIS"  , "value" : cDtDoc   },
				{"field" : "Field_UF"      , "value" : cUf      },
				{"field" : "Field_CIDADE"  , "value" : cCidade  },
				{"field" : "Field_DTEXEC"  , "value" : cDataExec}
			]
		}

		var cString = strItemsToSave();

		document.querySelector("#hidden_cmps_"+caixaAtiva).value = cString;
		itemsToSave = {
			"itemsReemb":[]
		}
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// fTudoDetalhe
	//
	// Fecha todas as divsCaixa.
	*///////////////////////////////////////////////////////////////////////
	function fTudoDetalhe(){
		var myElements = document.querySelectorAll(".divFormDesp");
		 
		for (var i = 0; i < myElements.length; i++) {	
			  $(myElements[i]).hide();
			    changeDetail(detail,myElements[i].id.substr(myElements[i].id.search("divCaixa")));
		}
				
		myElements = document.querySelectorAll(".divResume");
	 
		for (var i = 0; i < myElements.length; i++) {
			$(myElements[i]).fadeIn();
		}
	}

	/*//////////////////////////////////////////////////////////////////////
	// fTudoDetalhe
	//
	// Mostra o detalhe quando a div está fechada.
	*///////////////////////////////////////////////////////////////////////	
	function changeDetail(det, divCaixaId){
		var aCmp = det.split(";");
		var cCampo;
		var elem;
		var cValor = ""
		var cTexto = ""
		var cValores = "";
		
		for (var nI=0; nI < aCmp.length;nI++){
			if (aCmp[nI] != ""){
				var aTexto = aCmp[nI].split("~")
				cCampo = aTexto[1] + "_" + divCaixaId;
				//Verifica se e um combo ou um campo normal ou radiobutton

				if($('input[name='+cCampo+']:checked').val() != undefined){
					elem      = $('input[name='+cCampo+']:checked')[0];
					cTexto    = ($('input[name='+cCampo+']:checked').next().text()).trim();
					if(elem.className.search("money") != -1 && !isNaN(Number(cTexto))  && cTexto != "" ){
						cTexto = cValor.replace(".", "");
						cTexto = cValor.replace(",", ".");
						cTexto = Number(cTexto).toMoney(2, 3, '.', ',', '', true)
					}

					cValores += '<b>' + aTexto[0] + '</b>' + cTexto + '&nbsp;&nbsp;&nbsp;';
							
				} else {
					elem = document.getElementById(cCampo);
					cValor    = elem.options == undefined ? (elem.value).trim() : elem.options[elem.selectedIndex].text;
					if(elem.className.search("money") != -1 && !isNaN(Number(cValor)) && cValor != ""){
						cValor = cValor.replace(".", "");
						cValor = cValor.replace(",", ".");
						cValor = Number(cValor).toMoney(2, 3, '.', ',', '', true)
					}

					cValores += '<b>' + aTexto[0] + '</b>' + (cValor != "" ? cValor : "Não informado") + '&nbsp;&nbsp;&nbsp;';

				}
			}
		}

		document.querySelector("#det_"+divCaixaId).innerHTML = '<span class="textDet">' + cValores + '</span>';
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// fToggleForm
	//
	// Abre/fecha a divCaixa quando clica em mostrar/ocultar detalhes.
	*///////////////////////////////////////////////////////////////////////
	function fToggleForm(id, action){	
		fTudoDetalhe();
				
		if(action.search("resume") != -1){				  
			  $("#resume" + id).hide();
			  $("#form-desp" + id).fadeIn();
	          caixaAberta = id.substr(id.search("divCaixa"));
		}else{				
			  $("#resume" + id).fadeIn();
			  $("#form-desp" + id).hide();
			  caixaAberta = null;
	  		  changeDetail(detail,id.substr(id.search("divCaixa")));				
		}
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// changeIds
	//
	// Altera os Id's dos campos passados por parametro.
	*///////////////////////////////////////////////////////////////////////
	function changeIds(idDiv){
		var forms = $("#" + idDiv);
		var inputs = forms.find("input");
		var selects = forms.find("select");
		var buttons = forms.find("button");

		var elements = $.merge( inputs, selects );
		elements = $.merge( elements, buttons );

		for (var i = 0; i<elements.length;i++){
			if(elements[i].id != "")
				elements[i].id = elements[i].id + "_" + idDiv;
			if(elements[i].name != "")
				elements[i].name = elements[i].name + "_" + idDiv;
		}
	}

	/*//////////////////////////////////////////////////////////////////////
	// changeUsoConst
	//
	// Exibe o campo receita conforme uso constante sim ou não.
	*///////////////////////////////////////////////////////////////////////
	function changeUsoConst(){

		$('input[type=radio][class=usoConst]').on('change', function(){
				switch($(this).val()){
        			case '1' :
            			$( "#Field_RECEITA_"+this.name.substr(this.name.search("divCaixa"))).parents(".med_usoConst").css( "display", "block" );  
						if(mv_plrecob){
							$( "#Field_CODPROC_"+this.name.substr(this.name.search("divCaixa"))).parents(".procedimento").css( "display", "none" );  
							$( "#Field_NOMPROC_"+this.name.substr(this.name.search("divCaixa"))).parents(".procedimento").css( "display", "none" );   			
						}
						break;
        			case '2' :
            			$( "#Field_RECEITA_"+this.name.substr(this.name.search("divCaixa"))).parents(".med_usoConst").css( "display", "none" );  
						if(mv_plrecob){
							$( "#Field_CODPROC_"+this.name.substr(this.name.search("divCaixa"))).parents(".procedimento").css( "display", "block" ); 
							$( "#Field_NOMPROC_"+this.name.substr(this.name.search("divCaixa"))).parents(".procedimento").css( "display", "block" ); 
            			}
						break;
    			}            
		});

	}
	
	/*//////////////////////////////////////////////////////////////////////
	// putSelect2
	//
	// Insere o select2 nos campos Receita.
	*///////////////////////////////////////////////////////////////////////	
	function putSelect2(){
	
		$( "#Field_RECEITA_"+caixaAtiva ).select2({ 
			language: {
     			 noResults: function(){
       				return 'Sem resultados para a busca...';
     			 }
   			}
		}); 
	}


   /*//////////////////////////////////////////////////////////////////////
	// putEffects
	//
	// Adiciona os efeitos nos componentes novos.
	*///////////////////////////////////////////////////////////////////////
	function putEffects(){

		changeUsoConst();
		popoverOnSave();
		putSelect2();
		tooltipPad();
		$('[data-toggle="popover"]').popover(); 
		
	}

	/*//////////////////////////////////////////////////////////////////////
	// tooltipPad
	//
	// faz o hint acompanhar o mouse.
	*///////////////////////////////////////////////////////////////////////
	function tooltipPad(){
		 $( '.tooltipPad' ).tooltip({ 		
			track: false,           //propriedade que faz o hint acompanhar o mouse
       		items: '[data-title]', 
      		content: function () { 
       			return $(this).data('title').replace('|', '<br />'); 
       		}, 
		 	show: { 
			    effect: 'slideDown', 
			     delay: 100 
			}, 
			hide: { 
			    effect: 'slideUp', 
			    delay: 100 
			} 
		 }); 
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// newDesp
	//
	// Cria uma nova divCaixa.
	*///////////////////////////////////////////////////////////////////////
	function newDesp(contentForm, labelItem){
		contentForm = contentForm.innerHTML;
		nCont++;
		qtdItemDespesa++;
		fTudoDetalhe();
		var container = document.querySelector("#containerDesp");
		var htmContent = ""		
		var divCaixa = document.createElement("DIV");
		divCaixa.className = "col-xs-12 col-sm-12 col-md-12 col-lg-12 divCaixa";
		divCaixa.id = "divCaixa" + nCont;
				
		var divResume = document.createElement("DIV");
		divResume.className = "row divResume";
		divResume.id = "resume" + nCont + "_" + divCaixa.id;

		/*******TOP RESUME*******/
		var divTopPaiR = document.createElement("DIV");
		divTopPaiR.className = "col-xs-12 col-sm-12 col-md-12 col-lg-12 divBtnTop";		

		var divBtnTopL = document.createElement("DIV");
		divBtnTopL.className = "col-xs-4 col-sm-4 col-md-4 col-lg-4 text-left labelDesp";

		var inner = '<button type="button" id="btnW' + nCont + '" class="btn btn-warning btn-xs btn-criticas btn-hide btnW' + nCont + '" data-toggle="popover" data-trigger="focus" data-html="true" data-content="Click anywhere in the <br/> document to close this popover"><i class="fa fa-exclamation-triangle"></i></button>';
		inner += '<span style="font-size: 16px;">' + labelItem + ' ' + qtdItemDespesa + '</span>';			
		divBtnTopL.innerHTML = inner;

		var divBtnTopR = document.createElement("DIV");
		divBtnTopR.className = "col-xs-8 col-sm-8 col-md-8 col-lg-8 text-right btnsDesp";
		inner = '<div class="btn-group btn-group-sm" role="group">'
		inner += '<button type="button" id="btnE' + nCont + '" class="btn btn-danger btn-actions" tabindex="-1" onclick="deleteItem((this.id).substr(4,1))">Excluir &nbsp; <i class="fa fa-trash-o"></i></button>';
		inner += '</div>';				
		divBtnTopR.innerHTML = inner;

		divTopPaiR.appendChild(divBtnTopL);
		divTopPaiR.appendChild(divBtnTopR);

		/********END TOP RESUME*********/
		var divDet = document.createElement("DIV");
		divDet.className = "col-xs-12 col-sm-12 col-md-12 col-lg-12 divDet";
		divDet.id = "det_" + divCaixa.id;
				
		var divBtn = document.createElement("DIV");
		divBtn.className = "col-xs-12 col-sm-12 col-md-12 col-lg-12 text-center divBtnBot";
		divBtn.innerHTML = '<button type="button" id="btnD' + nCont + '" class="btn btn-default btn-xs btn-detail" onclick="fToggleForm((this.id).substr(4), \'resume\' );">exibir detalhes</button>';			
				
		var divFormDesp = document.createElement("DIV");
		divFormDesp.className = "row divFormDesp";
		divFormDesp.id = "form-desp" + nCont + "_" + divCaixa.id;				
		htmContent = "<div class='row contentForm' id='contentForm" + nCont + "' >";
        htmContent += "<div class='spinnerDiv' id='spinnerDiv_" + divCaixa.id + "' >";
		htmContent += "<i class='fa fa-3x fa-spinner fa-spin' style='position: absolute;top: 45%;transform: translateY(-50%);color: white;'></i></div>";	
        htmContent += contentForm + "</div>";
		divFormDesp.innerHTML = htmContent;
		
		/*******TOP FORMDESP*******/
		var divTopPaiD = document.createElement("DIV");
		divTopPaiD.className = "col-xs-12 col-sm-12 col-md-12 col-lg-12 divBtnTop";		

		divBtnTopL = document.createElement("DIV");
		divBtnTopL.className = "col-xs-4 col-sm-4 col-md-4 col-lg-4 text-left labelDesp";

		inner = '<button type="button" id="btnW' + nCont + '" class="btn btn-warning btn-xs btn-criticas btn-hide btnW' + nCont + '" data-toggle="popover" data-trigger="focus" data-html="true" data-content="Click anywhere in the <br/> document to close this popover"><i class="fa fa-exclamation-triangle"></i></button>';	
		inner += '<span style="font-size: 16px;">' + labelItem + ' ' + qtdItemDespesa + '</span>';			
		divBtnTopL.innerHTML = inner;

		divBtnTopR = document.createElement("DIV");
		divBtnTopR.className = "col-xs-8 col-sm-8 col-md-8 col-lg-8 text-right btnsDesp";
		inner = '<div class="btn-group btn-group-sm" role="group">'
		inner += '<button type="button" id="btnS' + nCont + '" class="btn btn-custom btn-actions popover-div btn-hide" onclick="vldBloqUser(\'save\')">Alterar&nbsp; <i class="fa fa-floppy-o"></i></button>'
		inner += '<button type="button" id="btnE' + nCont + '" class="btn btn-danger btn-actions" tabindex="-1" onclick="deleteItem((this.id).substr(4,1))">Excluir&nbsp; <i class="fa fa-trash-o"></i></button>'
		inner += '</div>';			
		divBtnTopR.innerHTML = inner;

		divTopPaiD.appendChild(divBtnTopL);
		divTopPaiD.appendChild(divBtnTopR);

		/********END TOP FORMDESP*********/

		var divBtnDesp = document.createElement("DIV");
		divBtnDesp.className = "col-xs-12 col-sm-12 col-md-12 col-lg-12 text-center divBtnBot";
		divBtnDesp.innerHTML = '<button type="button" id="btnO' + nCont + '" class="btn btn-default btn-xs btn-detail" onclick="fToggleForm((this.id).substr(4), \'form-desp\' );">ocultar detalhes</button>';			
				
		divResume.appendChild(divTopPaiR);
		divResume.appendChild(divDet);
		divResume.appendChild(divBtn);
		divCaixa.appendChild(divResume);
				
		divFormDesp.appendChild(divTopPaiD);
		divFormDesp.appendChild(divBtnDesp);
		divCaixa.appendChild(divFormDesp);

		var inputHidden = document.createElement("INPUT");
		inputHidden.id = "recno_divCaixa"+nCont;
		inputHidden.className = "recno_despesas";
		inputHidden.type = "hidden";
		inputHidden.value = "0";

		var hiddenCodPad = document.createElement("INPUT");
		hiddenCodPad.id = "Field_CODPAD_divCaixa"+nCont;
		hiddenCodPad.className = "codpad_despesas";
		hiddenCodPad.type = "hidden";
		hiddenCodPad.value = "";

		//hidden criado para manipular alterações nas caixinhas
		var hiddenCmps = document.createElement("INPUT");
		hiddenCmps.id = "hidden_cmps_divCaixa"+nCont;
		hiddenCmps.type = "hidden";
		hiddenCmps.value = "";
				
		container.appendChild(divCaixa);
		container.appendChild(inputHidden);
		container.appendChild(hiddenCodPad);
		container.appendChild(hiddenCmps);

		changeIds("divCaixa"+nCont);
			
		caixaAtiva = "divCaixa"+nCont;
		caixaAberta  = "divCaixa"+nCont;
				
		$('input[name=Field_USOCONST_'+caixaAtiva+'][value=2]').prop('checked', true);
		$("#Field_VALOR_"+caixaAtiva).maskMoney({prefix:'', allowNegative: true, thousands:'.', decimal:',', affixesStay: false});
		$("#Field_DTEXEC_"+caixaAtiva).val( $('#Field_DTEMIS').val() ); 	

		putEffects();
	}

	/*//////////////////////////////////////////////////////////////////////
	// fExcluiDespesa
	//
	// Exclui despesa da base de dados.
	*///////////////////////////////////////////////////////////////////////
	function fExcluiDespesa(nRecnoDesp){
		var nRecno = nRecnoDesp.value;
	
		if (nRecno > 0)
			Ajax.open('W_PPLExDsp.APW?cRecno='+nRecno, {error: exibeErro} );
			
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// deleteItem
	//
	// Exibe modal que pergunta se o usuario deseja mesmo excluir a despesa.
	*///////////////////////////////////////////////////////////////////////
	function deleteItem(id,cPerg){		
		if (YouShallnotPass) {			
			alert("Solicitação já confirmada!");		
		}else{
			
			if(lDadLoad){
				modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>Deseja mesmo excluir esse item?</p>', "@Sim~ window.frames['principal'].removeItem('divCaixa" + id+"');@Não~closeModalBS();", "white~ #f8c80a", "large");
			}else{
			
				if (cPerg){
					modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>Deseja mesmo excluir esse item?</p>', "@Sim~ window.frames['principal'].removeItem('divCaixa" + id+"');@Não~closeModalBS();", "white~ #f8c80a", "large");
				} else{
					//modalBS("window.frames['principal'].removeItem('divCaixa" + id+"')");
					removeItem("divCaixa" + id);
				}
			}
		}
	}

	/*//////////////////////////////////////////////////////////////////////
	// removeItem
	//
	// Remove a divCaixa
	*///////////////////////////////////////////////////////////////////////
	function removeItem(idItem){
	
		var nRecnoDesp = document.getElementById("recno_"+idItem);

		$("#recno_"+idItem).remove();
		$("#Field_CODPAD_"+idItem).remove();
		$("#hidden_cmps_"+idItem).remove();
		$("#"+idItem).remove();

		//verifica se a caixa que está sendo deletada é igual a caixaAberta
		if(idItem == caixaAberta)
			caixaAberta = null;

		var divs = document.getElementsByClassName('divCaixa');

		var x = [];
		//pego apenas os ids
		[].forEach.call(divs, function(i) {
    		x.push(i.id);
		});
		
		divs = x.sort().reverse();

		//se não achar nenhuma caixa na tela, i.e. se todas as caixas forem excluidas
		if(divs.length == 0)
           	caixaAtiva = null;
        else
		    caixaAtiva = divs[0];
	
		closeModalBS();
		fExcluiDespesa(nRecnoDesp);
		
		nqtdUsr = 0
		//habilita para edição os campos de cabeçalho quando não existem itens incluidos
		if(qtdItemDespesa < 1 && caixaAberta == null){ 
			
			DisableHeader(false);
		} 
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// LimpaProc
	//
	// Limpa o código do procedimento toda vez que o tipo é alterado
	*///////////////////////////////////////////////////////////////////////	
	function LimpaProc(obj) {
		var div = obj.id.substr(obj.id.search("divCaixa"));
     	if (document.getElementById("Field_CODPROC_"+div).value != "") {
        	document.getElementById("Field_CODPROC_"+div).value	= "";
        	document.getElementById("Field_NOMPROC_"+div).value	= "";
			document.getElementById("Field_CODPAD_"+div).value	= "";
     	}

		var aX = obj.value.split("|");
		var cTipServ = aX[1];

		if ((cTipServ != 0) && (cTipServ != 1))
		{
			cTipServ = 0;
		}

		if (cTipServ == 0)
		{	
			$('input[name=Field_USOCONST_'+caixaAberta+'][value=2]').prop('checked', true);
			$('input[name=Field_USOCONST_'+caixaAberta+']').prop('disabled', true);
		}else{
			$('input[name=Field_USOCONST_'+caixaAberta+']').prop('disabled', false);
		}

		if(obj.options[obj.selectedIndex].getAttribute("padcodproc") != ""	&& obj.options[obj.selectedIndex].getAttribute("padcodproc") != null){
			var cCodProc = obj.options[obj.selectedIndex].getAttribute("padcodproc").split("|");
			var oObjProc = document.getElementById("Field_CODPROC_"+caixaAberta);
			document.getElementById("Field_CODPAD_"+caixaAberta).value	= cCodProc[0];
			oObjProc.value	= cCodProc[1];
			fRetProc(oObjProc);
		}
					
		fAtuMedicamento(cTipServ);

		return;
	}

	/*//////////////////////////////////////////////////////////////////////
	// loadReceitas
	//
	// Carrega as receitas do beneficiário selecionado
	*///////////////////////////////////////////////////////////////////////
	function loadReceitas(oObj, cValue, cDatDoc){
		var cMatric = cValue === undefined ? $(oObj).val() : cValue;

		if(cDatDoc == undefined){
			cDatDoc = document.getElementById('Field_DTEMIS').value;						
		}

    Ajax.open("W_PPLCARREC.APW?cMatric=" + cMatric + "&cDatDoc=" + cDatDoc,  {
        callback: carregaRec,
        error: ExibeErro
        });
        }


	/*//////////////////////////////////////////////////////////////////////
	// carregaRec
	//
	// Carrega as receitas do beneficiário selecionado - callback
	*///////////////////////////////////////////////////////////////////////
	function carregaRec(v){
    var aResult = eval(v);
    var cCam = nqtdUsr > 1 ? "Field_RECEITA_"+caixaAberta : "Field_RECEITA";
    var objSelect = document.querySelector("#"+cCam);
    var optGroup;
    var objOption;
    var select2_ary = [];
    var att;

    if ( aResult.length == 0 ) {
        document.querySelector("#Field_RECEITA_"+caixaAberta).innerHTML = ""
    }else{
        putItensReceita(objSelect, aResult);
    }

    if(nqtdUsr > 1){
        $(objSelect).select2().select2('data', null);
    //precisa desse else para quando houver somente um usuário na família para carregar a div1 no load da pagina, pois tem vezes que o Ajax carrega as receitas depois que cria a div
    }else if(document.querySelector("#Field_RECEITA_divCaixa1") !== null){
        putItensReceita(document.querySelector("#Field_RECEITA_divCaixa1"), aResult);
    }

    }

	/*//////////////////////////////////////////////////////////////////////
	// putItensReceita
	//
	// Retorna os itens da receita
	*///////////////////////////////////////////////////////////////////////
	function putItensReceita(objSelect, aResult){
		var receita = 0;
		objSelect.innerHTML = "<option value>-- Selecione um Item --</option>";
		for(var i = 0;i<aResult.length;i++){
			if(aResult[i][0].field == "cCodRec" && aResult[i][0].value != receita){
				receita = aResult[i][0].value;
				optGroup = document.createElement('optgroup');
				optGroup.label = aResult[i][1].value;
				att = document.createAttribute("codrec");
    			att.value = receita;
			    optGroup.setAttributeNode(att);
				objSelect.appendChild(optGroup);
			}
			
				objOption=document.createElement("option")
				objOption.value = aResult[i][2].value;
				objOption.innerHTML = aResult[i][3].value;

				att = document.createAttribute("qtdaut");
    			att.value = aResult[i][4].value;
			    objOption.setAttributeNode(att);

				att = document.createAttribute("qtdexe");
    			att.value = aResult[i][5].value;
			    objOption.setAttributeNode(att);

				optGroup.appendChild(objOption); 
		}
	}

	/*//////////////////////////////////////////////////////////////////////
	// vldLimitDate
	//
	// Valida data limite para a solicitação de reembolso
	*///////////////////////////////////////////////////////////////////////
	function vldLimitDate(cDate){    
		var cNewDat =  cDate.substring(3,5) + "/" +  cDate.substring(0,2) + "/" + cDate.substring(6);
		var myDate = new Date(cNewDat);
		var dtLimit= new Date(getField('Field_DATLIM'));
	
		//-------------------------------------------------------------------------
		//  valida a data informada do documento
		//-------------------------------------------------------------------------
		if ( myDate < dtLimit ) {
			return false;
		}
		return true;
	}

	/*//////////////////////////////////////////////////////////////////////
	// vldCmps
	//
	// Fecha todas as divsCaixa
	*///////////////////////////////////////////////////////////////////////
	function vldCmps(divReq){
		if(document.querySelector("#" + divReq) == null){
			itemsToSave = {
				"itemsReemb":[]
			}
			$('.popover-div').popover('hide');
		
			return true;
		}

		if (!fValidaData(document.getElementById("Field_DTEMIS"), "data", "Data inválida!")){ //12-04
			return false;
		}

		var cMsg = "";
		var foco = "";
		var cDtDoc		= document.getElementById('Field_DTEMIS').value;

		var cNomBen		= getField('Field_NOMBEN_'+divReq);
		var aTipServ	= getField('Field_TIPSER_'+divReq).split("|");
		var cUsoConst	= $('input[name=Field_USOCONST_'+divReq+']:checked').val();
		var cCodPro		= getField('Field_CODPROC_'+divReq);
		var cQtd		= getField('Field_QTD_'+divReq);
		var cValor		= getField('Field_VALOR_'+divReq);
		var cReceita	= getField('Field_RECEITA_'+divReq);
		var cDataExec	= getField('Field_DTEXEC_'+divReq);
		var cCodPad     = "";
		var cCodRec     = "";
		var nQtdAutMed  = 0;
		var nQtdExeMed  = 0;
 
        var e = document.getElementById('Field_TIPDOC');
		var cTipoComp	= e.value;
		var lObrigaNum  = e.options[e.selectedIndex].getAttribute("obriga") == "1";
		var cCPFCNPJ	= document.getElementById('Field_CPFCNPJ').value;
		var cNomePres	= document.getElementById('Field_NOMEPRE').value;
		var cNumNota	= document.getElementById('Field_NUMDOC').value;	
		var cEstado		= document.getElementById('Field_UF').value;
		var cCidade		= document.getElementById('Field_CIDADE').value;

		if((cUsoConst == "1" && mv_plrecob && cReceita != "") || (cUsoConst == "1" && !mv_plrecob && cReceita != "")){ 
			cCodPad = cReceita.split("|")[0];
			cCodRec = document.querySelector("#Field_RECEITA_"+divReq).selectedOptions[0].parentElement.attributes.getNamedItem("codrec").value;
			cCodPro = cReceita.split("|")[1];
			nQtdAutMed = parseInt(document.querySelector("#Field_RECEITA_"+divReq).selectedOptions[0].attributes.getNamedItem("qtdaut").value);
			nQtdExeMed = parseInt(document.querySelector("#Field_RECEITA_"+divReq).selectedOptions[0].attributes.getNamedItem("qtdexe").value);
		}else
			cCodPad =  getField('Field_CODPAD_'+divReq);

		itemsToSave = {
			"itemsReemb":[
    			{"field" : "Field_MATRIC"  , "value" : cNomBen  }, 
    			{"field" : "Field_TIPSER"  , "value" : aTipServ[0] },
    			{"field" : "Field_USOCONST", "value" : cUsoConst},
				{"field" : "Field_CODPROC" , "value" : cCodPro  },
				{"field" : "Field_QTD"     , "value" : cQtd     },
				{"field" : "Field_VALOR"   , "value" : cValor   },
				{"field" : "Field_CODMED"  , "value" : cReceita != "" ? cReceita.split("|")[1] : "" },
				{"field" : "Field_SEQMED"  , "value" : cReceita != "" ? cReceita.split("|")[2] : "" },
				{"field" : "Field_CODREC"  , "value" : cCodRec  }, // CODREC
				{"field" : "Field_CODPAD"  , "value" : cCodPad  },
				{"field" : "Field_TIPDOC"  , "value" : cTipoComp},
				{"field" : "Field_CPFCNPJ" , "value" : cCPFCNPJ },
				{"field" : "Field_NOMEPRE" , "value" : cNomePres},
				{"field" : "Field_NUMDOC"  , "value" : cNumNota },
				{"field" : "Field_UF" 	   , "value" : cEstado	},
				{"field" : "Field_CIDADE"  , "value" : cCidade 	},
				{"field" : "Field_DTEMIS"  , "value" : cDtDoc   },
				{"field" : "Field_DTEXEC"  , "value" : cDataExec}
			]
		}

		if (cTipoComp == ""){
			cMsg += "Tipo do comprovante <br>";
			foco = foco == "" ? 'Field_TIPDOC' : foco;
		}

		if (cCPFCNPJ == ""){
			cMsg += "CPF/CNPJ <br>";
			foco = foco == "" ? 'Field_CPFCNPJ' : foco;
		}
	
		if (cNomePres == ""){
			cMsg += "Nome do prestador <br>";
			foco = foco == "" ? 'Field_NOMEPRE' : foco;
		}
        
		if (cNumNota == "" && lObrigaNum){
			cMsg += "Número do documento <br>";
			foco = foco == "" ? 'Field_NUMDOC' : foco;
		}


		if (cEstado == "" ){
			cMsg += "Estado <br>";
			foco = foco == "" ? 'Field_UF' : foco;
		}

		if (cCidade == "" ){
			cMsg += "Cidade <br>";
			foco = foco == "" ? 'Field_CIDADE' : foco;
		}



		if(cDtDoc == ""){
			cMsg += "Data de emissão <br>";
			foco = foco == "" ? "Field_DTEMIS" : foco;
		}
		if(cNomBen == ""){
			cMsg += "Nome do beneficiário <br>";
			foco = foco == "" ? "Field_NOMBEN_"+divReq : foco;
		}
		if(aTipServ[0] == ""){
			cMsg += "Tipo de serviço utilizado <br>";
			foco = foco == "" ? "Field_TIPSER_"+divReq : foco;
		}
		if(cUsoConst == "1" && mv_plrecob && cReceita == ""){
			cMsg += "Medicamento da receita de uso de contínuo <br>";
			foco = foco == "" ? "Field_RECEITA_"+divReq : foco;
		}
        if(cUsoConst == "1" && !mv_plrecob && cCodPro == "" && cReceita == ""){
			cMsg += "Procedimento ou um medicamento da receita de uso contínuo <br>";
			foco = foco == "" ? "Field_CODPROC_"+divReq : foco;
		}
		if(cUsoConst == "2" && cCodPro == ""){
			cMsg += "Procedimento <br>";
			foco = foco == "" ? "Field_CODPROC_"+divReq : foco;
		}
        if(cQtd == ""){
			cMsg += "Quantidade <br>";
			foco = foco == "" ? "Field_QTD_"+divReq : foco;
		}
		if(cValor == "" || cValor =='0.00' || cValor =='0') {
			cMsg += "Valor <br>";
			foco = foco == "" ? "Field_VALOR_"+divReq : foco;
		}

		if(cDataExec == ""){
			cMsg += "Data de Execução <br>";
			foco = foco == "" ? "Field_DTEXEC_"+divReq : foco;
		}

		if(cQtd != "" && nQtdAutMed != 0 && ((nQtdAutMed-nQtdExeMed) < parseInt(cQtd))){
			cMsg = "A quantidade solicitada para este medicamento é maior que a quantidade autorizada na receita <br>";
			cMsg += "Quantidade autorizada:" + nQtdAutMed + " <br>";
			cMsg += "Quantidade já utilizada:" + nQtdExeMed + " <br>";
			cMsg += "Quantidade restante:" + (nQtdAutMed-nQtdExeMed) + " <br>";
			foco = "Field_QTD_"+divReq;
			document.querySelector(".popover-heading").innerHTML = "<i class='fa fa-exclamation-triangle' style='font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;'></i>&nbsp;&nbsp;&nbsp;Atenção!";
		}else{		
			document.querySelector(".popover-heading").innerHTML = "<i class='fa fa-exclamation-triangle' style='font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;'></i>&nbsp;&nbsp;&nbsp;Por favor, informe os campos obrigatórios";			
		}

		document.querySelector(".popover-body").innerHTML = cMsg;

		if(cMsg != ""){
			if(document.querySelector("#form-desp"+divReq.substr(8)+"_"+divReq).style.display == "none"){
				fToggleForm(divReq.substr(8)+"_"+divReq, 'resume');
			}
			document.querySelector("#"+foco).focus();
			
			return false;
		}else{	
			return true;
		}
			
		if ( cDtDoc != "" && !vldLimitDate(cDtDoc) ) {
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>O documento já atingiu a data limite para solicitação do reembolso!</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
			getObjectID('Field_NUMDOC_'+divReq).focus();
			
			return false;
		}


	}

	/*//////////////////////////////////////////////////////////////////////
	// strItemsToSave
	//
	// Retorna a string com todos os campos da despesa preenchidos
	*///////////////////////////////////////////////////////////////////////
	function strItemsToSave(){
		var cString = "";
		for(var i=0;i<itemsToSave.itemsReemb.length;i++){
   			 cString += i>0?"&":"";
    		 cString += itemsToSave.itemsReemb[i].field + "=";
    		 cString += itemsToSave.itemsReemb[i].value;
        }

		return cString;
		
	}

	/*//////////////////////////////////////////////////////////////////////
	// grvItem
	//
	// Grava o item - despesa na base de dados
	*///////////////////////////////////////////////////////////////////////
	function grvItem(divReq){
		var lCabAlt = cabecalhoAlt();
		caixaAux = divReq;
		document.getElementById("spinnerDiv_"+divReq).style.display = "block";
		var cString = strItemsToSave();
		cStrSaved = cString;	
 		cString += "&cCodSol="+document.querySelector("#Field_CODSOL").value; 
		cString += "&cRecno="+document.querySelector("#recno_"+divReq).value;
		
		cString += "&cUf="+document.querySelector("#Field_UF").value;
		cString += "&cCidade="+document.querySelector("#Field_CIDADE").value;
		
		//evitando que chame a função quando não é multicomprovante
		var recDivs = (mv_plreemc) ? "&cRecDivs="+getRecnoDivs() : "";

		Ajax.open("W_PPLITREEMB.APW?lCabAlt="+lCabAlt+recDivs+"&"+cString , {
				callback: codSol,
				error: ExibeErro
		}); 		
			
	}

	/*//////////////////////////////////////////////////////////////////////
	// getRecnoDivs
	//
	// Retorna o recno da div
	*///////////////////////////////////////////////////////////////////////
	function getRecnoDivs(){
		var recno_divs = document.getElementsByClassName('recno_despesas');
		var recnos = "";
		if((recno_divs.length) > 0){
			
			var x = "";
			//pego apenas os values
			[].forEach.call(recno_divs, function(i) {
    			if(i.value > 0)
					recnos+=i.value+",";
			});
		
			recno_divs = recnos.slice(0, -1);
			return recno_divs;

		}else{ return ""; }
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// codSol
	//
	// Altera os campos hidden do recno da caixa que requisitou a gravação e o codigo da solicitação - callback
	*///////////////////////////////////////////////////////////////////////
	function codSol(v){
		var aResultado = v.split("$"); 
		var aResult = aResultado[0].split("|");
		document.querySelector("#Field_CODSOL").value = aResult[0];
		document.querySelector("#recno_"+caixaAux).value = aResult[1].split('$')[0];
		document.querySelector("#hidden_cmps_"+caixaAux).value = cStrSaved;

		if((eval(aResultado[1])).length > 0){ 
			
			$("#"+caixaAux).css("border", "1px solid #f00"); 
			var btnW = "btnW"+caixaAux.substring(8);
			$("."+btnW).removeClass( "btn-hide" );
			var aCriticas = eval(aResultado[1]);
			var cCriticas = "";
			for(var i = 0; i < aCriticas.length; i++){
				cCriticas += aCriticas[i][1] + (i == aCriticas.length-1 ? "" : "<br/>");
			}

			$("."+btnW).attr("data-content", cCriticas);

		}else{ 
			$("#"+caixaAux).css("border", "1px solid #ccc");
			var btnW = "btnW"+caixaAux.substring(8);
			$("."+btnW).addClass( "btn-hide" ); 
			$("."+btnW).attr("data-content", "");
			
		}
		
		var elem = window.parent.document.getElementById("divFinalMsg");
		$(elem).show();
		setTimeout(function() { $(elem).hide(); }, 5000);
		setTimeout(function() { document.getElementById("spinnerDiv_"+caixaAux).style.display = "none"; }, 5000);
		
		var bntS = document.querySelector("#btnS"+caixaAux.substring(8)+"_"+caixaAux);
		$(bntS).removeClass( "btn-hide" );
		$(bntS).addClass( "btn-show" );

		if(cabecalhoAlt()){
			updObjCab();
		}
		
		if(lClickFim){
			fUltima();
		}else if(lClickAnexo){
			//significa que salvou a despesa quando clicou no botão anexar
			lClickAnexo = false;
			fEnviArq(document.Form1);
		}
		
		if (lfinSol && lfinitem ) {
			lfinSol = false;
			lfinitem = false;
			lNExbParcial = true;
			vldBloqUser("fim");
		}
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// vldBloqUser
	//
	// Função criada para verificar o bloqueio do usuário antes de gravar.
	//
	// cAct = ação de salvar ou adicionar outra despesa
	*///////////////////////////////////////////////////////////////////////
	function vldBloqUser(cAct){	
		var caixa;
		var strGravad;
		var cFun = "";
		
		if (YouShallnotPass) {
			alert("Solicitação já confirmada!");
		}else{
		
			if(cAct == "save"){
				caixa = caixaAberta;
				cFun = "saveItem";
			}
			else if(cAct == "add"){
				caixa = caixaAtiva;
				cFun = "addDesp";
			}else if(cAct == "anx"){
				caixa = caixaAtiva;
				cFun = "saveAnxDesp"
			}else if(cAct == "fim"){
				caixa = caixaAtiva;
				cFun = "fimSoli"
			}
	
		   if(caixa == null && cFun == "addDesp")
				newDesp(document.querySelector('#FS_model_desp'), 'Despesa');
		   else if(caixa == null && cFun == "saveAnxDesp"){
				
				var lItem = false;
				var i = 1;
	
				while ( i <= nCont && !lItem){
					var x = getObjectID("recno_divCaixa"+i);
					if (x != null && x.value != "" && x.value > 0){
						lItem = true;
						caixa = "divCaixa"+i;
					}
					
					i++;
				}
	
				if(!lItem && (document.getElementById("Field_CODSOL").value == "0"))
					modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>É necessário adicionar ao menos uma Despesa à solicitação antes de enviar os anexos!</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
	            else
					fEnviArq(document.Form1);
	
		   }else{
		   		if(vldCmps(caixa)){
					var cString = strItemsToSave();		
					if (!vldDupItem(cString, caixa)){
						document.querySelector(".popover-heading").innerHTML = "<i class='fa fa-exclamation-triangle' style='font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;'></i>&nbsp;&nbsp;&nbsp;Alerta";
						document.querySelector(".popover-body").innerHTML = "Esse item já existe nessa solicitação";					
						$(".popover-div").popover('show');
						$( "#"+caixa ).effect( 'bounce', {times:5, direction:"left", distance:"20"}, 600 );
					}else{
						strGravad = document.querySelector("#hidden_cmps_"+caixa).value;
	            		var e = document.getElementById('Field_TIPDOC');
						lDocObrig = e.options[e.selectedIndex].getAttribute("obriga") == "1";
						if(strGravad == cString){
							if(cFun == "saveItem"){
								document.querySelector(".popover-heading").innerHTML = "<i class='fa fa-exclamation-triangle' style='font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;'></i>&nbsp;&nbsp;&nbsp;Alerta";
								document.querySelector(".popover-body").innerHTML = "Não houve modificações nessa despesa";					
								$(".popover-div").popover('show');
							}else if(cFun == "addDesp"){
								newDesp(document.querySelector('#FS_model_desp'), 'Despesa');
							}else if(cFun == "saveAnxDesp"){					
								fEnviArq(document.Form1);
							}else if(cFun == "fimSoli"){
								fUltima();
							}
						} else{  
			    			Ajax.open("W_PPLBLORE.APW?lDocObrig="+lDocObrig+"&" + cString,{ 
			    				callback: eval(cFun),
			    				error: exibeErro
							});
						}
					}		
				}else{
					$(".popover-div").popover('show');
				}
			}
		}
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// updB1N
	//
	// Atualiza B1N.
	*///////////////////////////////////////////////////////////////////////
	function updB1N(){
		var cCodSol  = document.getElementById("Field_CODSOL").value;
		var cCpfCnpj = document.getElementById("Field_CPFCNPJ").value;
		var cNomRda  = document.getElementById("Field_NOMEPRE").value;
		var cDatDoc  = document.getElementById("Field_DTEMIS").value;
		var cTipDoc  = document.getElementById("Field_TIPDOC").value.split("|");
		var cNroDoc  = document.getElementById("Field_NUMDOC").value;

		Ajax.open("W_PPLUPDB1N.APW?cCodSol=" + cCodSol + "&cCpfCnpj=" + cCpfCnpj + "&cNomRda=" + cNomRda + "&cTipDoc=" + cTipDoc[0] + "&cNroDoc=" + cNroDoc + "&cDatDoc=" + cDatDoc, {
				callback: verificaEnvArq,
		    	error: exibeErro
		});
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// vldDupItem
	//
	// controle para o usuario não inserir itens iguais em uma solicitação
	*///////////////////////////////////////////////////////////////////////
	function vldDupItem(cString, caixa){
		var lRet = true
		var cMatric = cString.substring(cString.search("Field_MATRIC"), cString.indexOf("&",cString.search("Field_MATRIC"))).trim();
		var cCodPad = cString.substring(cString.search("Field_CODPAD"), cString.indexOf("&",cString.search("Field_CODPAD"))).trim();
		var cCodProc = cString.substring(cString.search("Field_CODPROC"), cString.indexOf("&",cString.search("Field_CODPROC"))).trim();
		var cDatExec = cString.substring(cString.search("Field_DTEXEC"), cString.length).trim(); //ATENÇÃO: Ficou assim por ser o último item do array strItemsToSave!
		//pego elementos que possuem a matricula, tipo de serviço, procedimento e medicamento iguais, se tiver não posso incluir
		var arr = $( "input[value*='" + cMatric + "'][value*='" + cCodPad + "'][value*='" + cCodProc + "'][value*='" + cDatExec + "']" )
		if (!( arr.length == 0 || (arr.length == 1 && arr[0].id == "hidden_cmps_"+caixa))){
			lRet = false;
		}

		return lRet;
	}

	/*//////////////////////////////////////////////////////////////////////
	// Salva a divCaixa que está aberta
	//
	// Salva a divCaixa que está aberta
	*///////////////////////////////////////////////////////////////////////
	function saveItem(v){
		var aResult = v.split("|");
		if(aResult[0] == "false"){
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>' + aResult[1] + '</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
		}else{
			grvItem(caixaAberta);
		}	
	}

	/*//////////////////////////////////////////////////////////////////////
	// addDesp
	//
	// Adiciona uma nova despesa
	*///////////////////////////////////////////////////////////////////////
	function addDesp(v){
		var aResult = v.split("|");
		if(aResult[0] == "false"){
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>' + aResult[1] + '</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
		}else{
			caixaAux = caixaAtiva; //faço isso porque adiciono uma nova caixa antes de fazer a gravação
			newDesp(document.querySelector('#FS_model_desp'), 'Despesa');
			$('input[name=Field_USOCONST_'+caixaAtiva+'][value=2]').prop('checked', true);
			$("#Field_VALOR_"+caixaAtiva).maskMoney({prefix:'', allowNegative: true, thousands:'.', decimal:',', affixesStay: false});

			if(document.querySelector("#recno_"+caixaAux) != null && Number(document.querySelector("#recno_"+caixaAux).value) <= 0 ){
				grvItem(caixaAux);
				
				//desabilita para edição os campos de cabeçalho após incluir o primeiro item
				DisableHeader(true); 
			}else if(cabecalhoAlt()){
				updB1N();
			} 
		}	
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// saveAnxDesp
	//
	// Anexa os arquivos das despesas
	*///////////////////////////////////////////////////////////////////////
	function saveAnxDesp(v){
		var aResult = v.split("|");
		if(aResult[0] == "false"){
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>' + aResult[1] + '</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
		}else{
			lClickAnexo = true;
			//ou precisa salvar a primeira/última despesa adicionada ou o cabeçalho foi alterado, então é necessário salvar antes de anexar o arquivo
			if(document.querySelector("#recno_"+caixaAtiva) != null && Number(document.querySelector("#recno_"+caixaAtiva).value) <= 0 )
				grvItem(caixaAtiva);
			else if(cabecalhoAlt())
				updB1N();
			else{
				lClickAnexo = false;
				fEnviArq(document.Form1);
			}
		}	
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// fimSoli
	//
	// Finaliza solicitação
	*///////////////////////////////////////////////////////////////////////
	function fimSoli(v){
		var aResult = v.split("|");
		if(aResult[0] == "false"){
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>' + aResult[1] + '</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
		}else{
			lClickFim = true;
			//se precisa salvar a primeira/última despesa adicionada 
			if(document.querySelector("#recno_"+caixaAtiva) != null && Number(document.querySelector("#recno_"+caixaAtiva).value) <= 0 )
				grvItem(caixaAtiva);
			else
				fUltima();
		}	
	}

	/*//////////////////////////////////////////////////////////////////////
	// fF3Proc
	//
	// Função que executa o F3 de procedimentos
	*///////////////////////////////////////////////////////////////////////
	function fF3Proc(){
		var aServ = document.getElementById('Field_TIPSER_'+caixaAberta).value.split("|");
		if(!this.disabled && aServ[0] != '')
			return ChamaPoP("W_PPLSXF3.APW?cFunName=PF3BR8CP&F3Nome=Field_CODPROC_"+caixaAberta+"&F3CmpDes=Field_CODPROC_"+caixaAberta+",Field_NOMPROC_"+caixaAberta+",Field_CODPAD_"+caixaAberta+"&cVldGen="+document.querySelector("#Field_CODPAD_"+caixaAberta).value + "|"+ aServ[0],"jF3","yes");
		else if(aServ[0] == ''){
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>Selecione o tipo de serviço utilizado primeiro!</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
			document.getElementById('Field_TIPSER_'+caixaAberta).focus();
		}
	}

	/*//////////////////////////////////////////////////////////////////////
	// fRetProc
	//
	// busca a descrição do procedimento a partir do codigo
	*///////////////////////////////////////////////////////////////////////
	function fRetProc(oObj) {
		var cCodPro = oObj.value;
		var aTipSer = document.getElementById("Field_TIPSER_"+caixaAberta).value.split("|");
		//-------------------------------------------------------------------------
		//  Executa o metodo													  
		//-------------------------------------------------------------------------
		Ajax.open("W_PPLDESPRO.APW?cCodPro=" + cCodPro + "&cClasse=" + aTipSer[0] , {
			callback: CarregaProc,
			error: ExibeErro
		}); 
	}

	/*//////////////////////////////////////////////////////////////////////
	// CarregaProc
	//
	// busca a descrição do procedimento a partir do codigo callback
	*///////////////////////////////////////////////////////////////////////
	function CarregaProc(v) {
    	var aResult = v.split("|");
    	document.getElementById("Field_NOMPROC_"+caixaAberta).value	= aResult[0];
		document.getElementById("Field_CODPAD_"+caixaAberta).value	= aResult[1];	
	
		return
	}

	/*//////////////////////////////////////////////////////////////////////
	// fVldQtd
	//
	// valida quantidade informada
	*///////////////////////////////////////////////////////////////////////
	function fVldQtd(obj){

		if ($( obj ).hasClass( "money" )){

			if(obj.value.search("," != -1))
				obj.value = obj.value.replace(",", ".");
		
			if(obj.value <= 0.01)
				obj.value = 0.00;

			if(obj.value.search("." != -1))
				obj.value = obj.value.replace(".", ",");

		}else{
			if(obj.value <= 1)
				obj.value = 1;
		}

	}

	/*//////////////////////////////////////////////////////////////////////
	// verificaMedicamento
	//
	// função para mostrar/não mostrar o alert de medicamentos
	*///////////////////////////////////////////////////////////////////////
	function verificaMedicamento(){

		if ( document.getElementById('medicamento').value > 0 ){
			document.getElementById("alert_receita").style.display = "block";
		}
		else{
			document.getElementById("alert_receita").style.display = "none";
		}
		return;
	}

	//---------------- Upload do arquivo -------------------------------INICIO
	
	/*//////////////////////////////////////////////////////////////////////
	// fEnviArq
	//
	// faz o upload do arquivo.
	*///////////////////////////////////////////////////////////////////////
	function fEnviArq(FormArq){
		setDisable('btn_EnvUpl', true);
		fGrvRec(FormArq);
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// fGrvRec
	//
	// Verifica se o arquivo foi informado e chama a web function
	*///////////////////////////////////////////////////////////////////////
	function fGrvRec(FormArq){ 
		
		var fakeupload	= document.getElementById('Field_UPLOAD').value;	
		var cValid      = "{}()<>[]|&*$%?!^~`',;=#çãâ@+§";		
		var aValid      = cValid.split("");
		var cCaracEsp   = ""

		document.getElementById('btn_EnvUpl').innerHTML = "Anexando &nbsp; <i class='fa fa-spinner fa-spin'></i>";

		var cRecno = document.getElementById("cRecno").value;
		var cChave = document.getElementById("Field_CODSOL").value;
		var cAlitab = document.getElementById("cAlitab").value;
		var cNumInd = document.getElementById("cNumInd").value;
		
		var cNoArqComp = document.getElementById("Field_NUMDOC").value + document.getElementById("Field_DTEMIS").value //+ document.getElementById("Field_TIPDOC").value;
		
		for (var i=0;i<aValid.length;i++) {    
			
			if ( fakeupload.indexOf(aValid[i]) >= 0 ) {
				cCaracEsp += aValid[i] + " ";  
				                       
			}	
		} 
		
		if(!isEmpty(cCaracEsp)) {
			
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>O nome do arquivo contem os seguintes caracteres especiais que devem ser retirados: <b>' + cCaracEsp + '</b></p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
			setDisable('btn_EnvUpl', false);
			document.getElementById('btn_EnvUpl').innerHTML = 'Anexar &nbsp; <i class="fa fa-paperclip"></i>';
			return; 
		}
		
		if ( isEmpty(fakeupload) ){
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>Informe o arquivo!</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
			setDisable('btn_EnvUpl', false);
			document.getElementById('btn_EnvUpl').innerHTML = 'Anexar &nbsp; <i class="fa fa-paperclip"></i>';
			return;
		}

		if (fakeupload != ''){
			FindIncUp(FormArq,'W_PPLENVUPG.APW?cRecno='+cRecno+'&cDirArq='+fakeupload+'&cChave='+cOpemov+cChave+'&cAlitab='+cAlitab+'&cNumInd='+cNumInd + '&cNoArqComp=' + cNoArqComp,'retorno','Carregando...','Erro ao carregar');
		}

		fakeupload = '';
		
		//desabilita para edição os campos de cabeçalho após incluir o primeiro item 
		DisableHeader(true); 
	}

	/*//////////////////////////////////////////////////////////////////////
	// fcarrDoc
	//
	// Retorno do upload
	*///////////////////////////////////////////////////////////////////////
	function fcarrDoc() {

		Ajax.open('W_PPLRESUPL.APW', {
			callback: MostraRes, 
			error: exibeErro} );

			setDisable('btn_EnvUpl', false);
			document.getElementById('btn_EnvUpl').innerHTML = 'Anexar &nbsp; <i class="fa fa-paperclip"></i>';
			document.getElementById("btn_Oculto").click();

		return;
	}

	/*//////////////////////////////////////////////////////////////////////
	// MostraRes
	//
	// Controle se foi anexado algum arquivo
	*///////////////////////////////////////////////////////////////////////
	function MostraRes(v){
		document.getElementById('anexo').value++;
		document.getElementById("btn_Oculto").click();
		return;
	}

	//Passa os parâmetros para a função que envia o arquivo para o server
	function FindIncUp(Form,cRotina,cDiv,cTxtProc,cTxtErro, cFuncao){
		LoadUploadz(Form,cRotina,cDiv,cTxtProc,cTxtErro,fcarrDoc);
		document.getElementById("Field_UPLOAD").value 	= "";
		return;
	}

	/*//////////////////////////////////////////////////////////////////////
	// LoadUploadz
	//
	// Função de upload do upload do arquivo
	*///////////////////////////////////////////////////////////////////////
	function LoadUploadz(form,url_action,id_elemento_retorno,html_exibe_carregando,html_erro_http,funcao,cpar){

	 	form = ( typeof(form) == "string") ? getObjectID(form) : form;
	 
	 	var erro="";
	 	if( !isObject(form) ){ 
	 		erro += "O form passado não existe na pagina.\n";
	 	} else if(form.nodeName != "FORM") {
	 		erro += "O form passado na funcão não é um form.\n";
	 	}

	 	if( getObjectID(id_elemento_retorno) == null){ 
	 		erro += "O elemento passado não existe na página.\n";
	 	}

	 	if(erro.length>0) {
			 alert("Erro ao chamar a função Upload:\n" + erro);
	    	 return;
	 	}
	 	//--------------------------------------------------------------------
	 	//³ iFrame
	 	//--------------------------------------------------------------------
	 	var iframe = document.createElement("iframe");
	 	iframe.setAttribute("id","iload-temp");
	 	iframe.setAttribute("name","iload-temp");
	 	iframe.setAttribute("width","0");
	 	iframe.setAttribute("height","0");
	 	iframe.setAttribute("border","0");
	 	iframe.setAttribute("style","width: 0; height: 0; border: none;");
	 	//--------------------------------------------------------------------
	 	//³ Adicionando documento
	 	//--------------------------------------------------------------------
	 	form.parentNode.appendChild(iframe);
	
		window.frames['iload-temp'].name="iload-temp";
	 	//--------------------------------------------------------------------
	 	//³ Adicionando evento carregar
	 	//--------------------------------------------------------------------
	 	var carregou = function() { 
	   		removeEvent( getObjectID('iload-temp'),"load", carregou);
	   		var cross = "javascript: ";
	   		cross += "window.parent.getObjectID('" + id_elemento_retorno + "').innerHTML = document.body.innerHTML; void(0); ";
	   
	   		getObjectID(id_elemento_retorno).innerHTML = html_erro_http;
	   		getObjectID('iload-temp').src = cross;
	   		//--------------------------------------------------------------------
	   		if( getObjectID('iload-temp') != null || getObjectID('iload-temp').parentNode != null){ 
		  	 	remove(getObjectID('iload-temp'));
		   		funcao();		   
			}
	 	}

	 	addEvent( getObjectID('iload-temp'), "load", carregou)
	 	//--------------------------------------------------------------------
	 	//³ Propriedade do form
	 	//--------------------------------------------------------------------
	 	form.setAttribute("target","iload-temp");
	 	form.setAttribute("action",url_action);
	 	form.setAttribute("method","post");
	 	form.setAttribute("enctype","multipart/form-data");
	 	form.setAttribute("encoding","multipart/form-data");
	 	//--------------------------------------------------------------------
	 	//³ Envio
	 	//--------------------------------------------------------------------
	 	form.submit();

		if(html_exibe_carregando.length > 0){
   			getObjectID(id_elemento_retorno).innerHTML = html_exibe_carregando;
		 }
		return;
	}
	//--------------------Upload do Arquivo------------------------------------FIM


	//--------------------Alimentar Browse----------------------------------INICIO
	
	/*//////////////////////////////////////////////////////////////////////
	// fGetUpl
	//
	// Atualiza o browse do upload
	*///////////////////////////////////////////////////////////////////////
	function fGetUpl() {
		var cBuscaTReg 	= getGridCall('Browse_Upload', 'fGetUpl' );
		var nRecno 	    = 1;
		var	cWhere      = cOpemov + parent.frames["principal"].document.forms[0].Field_CODSOL.value + "|" + parent.frames['principal'].document.forms[0].cAlitab.value; 
  		var cRecnoAtu	= 1;
		var nPagina		= 50;
		var cChave		= parent.frames['principal'].document.forms[0].Field_CODSOL.value;
		var cNoArqComp = parent.frames["principal"].document.forms[0].Field_NUMDOC.value + parent.frames["principal"].document.forms[0].Field_DTEMIS.value;
		
		cWhere += "|" + cNoArqComp 
		// Chama consulta para trazer os dados da Grid
		Ajax.open("W_PPLGETDGRI.APW?cFunName=PXAC9ACB&nPagina="+getField('Browse_Upload'+nPagina)+"&cWhere="+cWhere+"&cBuscaTReg="+cBuscaTReg+"&cChave="+cOpemov+cChave+"&cRecnoAtu="+cRecnoAtu, {
			callback: carregaGridDoc,
			error: exibeErro
		});
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// carregaGridDoc
	//
	// Carrega grid de documentos
	*///////////////////////////////////////////////////////////////////////
	function carregaGridDoc(v) {
	
		var aResult = v.split("|");
		// Se existe registro define propriedades
    	var nQtdReg		= aResult[1];
		var nQtdDoc 	= aResult[2];
    	var nRegDoc 	= aResult[3];
    	var aHeader 	= eval(aResult[4]);
		var lContinua	= eval(aResult[7]);
    	var aDadPeg 	= (lContinua) ? eval(aResult[5]) : aDadPeg;
    	var cMsg 		= aResult[6];

		// Seta a quantidade total de paginas - seta somente quando nao for navegacao
		if (lContinua) {
			// Monta Browse 
			oBrwGridDOC= new gridData('Browse_Upload',"630","200")
			
			for (var nFor=0; nFor<aDadPeg.length;nFor++)
			{ 
				var nIndice = aDadPeg[nFor][0].value.lastIndexOf("_"); 
				aDadPeg[nFor][0].value = aDadPeg[nFor][0].value.substring(0, nIndice )
			}
				
			//--------------------------------------------------------------------
			//³ Monta Browse 
			//--------------------------------------------------------------------
			oBrwGridDOC.load({fFunName:'fGetUpl',
							nRegPagina:nRegDoc,
							nQtdReg:nQtdReg,
							nQtdPag:nQtdDoc,
							lOverflow:true,
							lShowLineNumber:true,
							lChkBox:false,
							aBtnFunc:"[{info:'Excluir',img:'004.gif',funcao:'fUnUpl'}]",
							aHeader: aHeader,
							aCols: aDadPeg 
			});
		}

		updGridSchemeColor();
		document.getElementById('Field_UPLOAD').disabled = false;
		document.getElementById('anexo').value = nQtdReg;

		if(mv_plreemc && cAcao == "V"){ 
			$(".colBtn").prop('onclick',null).off('click');
			$("#Field_UPLOAD").prop("disabled", true);
			$(".btn-actions").prop("disabled", true);
			$(".btn-detail").prop("disabled", false);
		}

	}

	//--------------------Alimentar Browse-------------------------------------FIM

	//--------------------Resultado da Exclusão------------------------------
	/*//////////////////////////////////////////////////////////////////////
	// fUnUpl
	//
	// Chama a função para deletar o arquivo
	*///////////////////////////////////////////////////////////////////////
	function fUnUpl(x){
		if (YouShallnotPass) {
			alert("Solicitação já confirmada!");
		}else{
			Ajax.open('W_PPLUNUPL.APW?cRecno=' + x, { callback: fDelArq, error: exibeErro } );
		}
	}

	/*//////////////////////////////////////////////////////////////////////
	// fUnUpl
	//
	// Deleta o arquivo
	*///////////////////////////////////////////////////////////////////////
	function fDelArq(v) {  
		var aResultDel = v.split("|");
		fGetUpl();
	}
	//-----------------------------------------------------------------------



	//----------------Valida envio da solicitação--------------------
	/*//////////////////////////////////////////////////////////////////////
	// fValidaSol
	//
	// Valida a solicitação antes de concluir.
	*///////////////////////////////////////////////////////////////////////
	function fValidaSol(form){
		var lOk	= true;
		var i 	= 1;

		var nAnexo = form.anexo.value;
	
		var comprovante 	= form.Field_TIPDOC.value;
		var CPFCNPJ			= form.Field_CPFCNPJ.value;
		var cRet			= "0"
		var NomePrestador	= form.Field_NOMEPRE.value;
		var nCompFinanc		= form.Field_NUMDOC.value;
		var dataEmissao		= form.Field_DTEMIS.value;
		var lChkLiCo		= false;
		var e = document.getElementById('Field_TIPDOC');
		var lObrigaNum  = e.options[e.selectedIndex].getAttribute("obriga") == "1";
	
		var lItem	= false;

		if (comprovante == '' || comprovante === undefined || comprovante === null)	{
			lOk = false;
		}

		if (CPFCNPJ == '' || CPFCNPJ === undefined || CPFCNPJ === null){
			lOk = false;
		}

		if (lObrigaNum && (nCompFinanc == '' || nCompFinanc === undefined || nCompFinanc === null)){
			lOk = false;	
		}

		if (NomePrestador == '' || NomePrestador === undefined || NomePrestador === null){
			lOk = false;
		}

		if (dataEmissao == '' || dataEmissao === undefined || dataEmissao === null){
			lOk = false;
		}

		if (!lOk){
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>Atenção! Preencha todos os campos marcados com "*" para prosseguir</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
		}

		if ((nAnexo == "" || nAnexo == "0") && (lOk)){
			lOk = false;
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>Atenção! Não foram enviados anexos para esta solicitação, anexe e tente concluir a solicitação novamente</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
		}
	
		while (i <= nCont && !lItem){
			var x = getObjectID("recno_divCaixa"+i);
			if (x != null && x.value != "" && x.value > 0){
				lItem = true;
			}

			i++;
		}

		if (!lItem && x != null && x.value != "" && x.value == 0) {
			var cRet = "1";
			lItem = true;
		}
			

		if (lOk && !lItem){
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>É necessário inserir ao menos uma Despesa na solicitação antes de enviá-la!</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
		}
		
		if (lOk && cLieCon != ''){
			lChkLiCo = form.Field_CHKLICO.checked;
			if (!lChkLiCo){
				lOk = false;
				modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>Atenção! Para finalizar o protocolo é necessário marcar o campo de Li e Concordo</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
			}
		}

		if (cRet =="1"){
			vldBloqUser("save");
			lfinSol = lOk;
			lfinitem = lItem;
		}		
		
		if (lOk && lItem && (cRet != "1")){
			vldBloqUser("fim");
		}
	}

	/*//////////////////////////////////////////////////////////////////////
	// fUltima
	//
	// Exibe a proxima tela após concluir a solicitação de reembolso.
	*///////////////////////////////////////////////////////////////////////
	function fUltima()
	{
		var cNumProt   = document.querySelector("#Field_CODSOL").value;
		var cRDA   	  = document.querySelector("#Field_CPFCNPJ").value;
		var cNomePres = document.querySelector("#Field_NOMEPRE").value;
		var aTipDoc   = document.querySelector("#Field_TIPDOC").value.split("|");
		var cNumDoc   = document.querySelector("#Field_NUMDOC").value;
		var cDatDoc   = document.querySelector("#Field_DTEMIS").value;
		var e = document.querySelector('#Field_TIPDOC');
		var lCabAlt = cabecalhoAlt();
		var lDocObrig = e.options[e.selectedIndex].getAttribute("obriga") == "1";
		//aqui
		//se não é é multicomprovante, mando confirmar a solicitação, do contrário abro a modalBS
		if(!mv_plreemc){
			var recDivs = (mv_plreemc) ? "&cRecDivs="+getRecnoDivs() : "";
			Ajax.open("W_PPLReemCon.APW?cCodSol=" + cNumProt + "&cCpfCnpj=" + cRDA + "&cNomePres=" + cNomePres + "&cTipDoc=" + aTipDoc[0] + "&cNumDoc=" + cNumDoc + "&cDatDoc=" + cDatDoc + "&lAltera=" + lAltera + "&lDocObrig="+lDocObrig + "&lCabAlt="+lCabAlt+recDivs+"&cRotinLGPD=PPLREEMB" , {
													callback: fRetProtoc,
													error: fRetProtocError }); 
		}else{
			if(cAcao != 'E'){
				Ajax.open("W_PPLVlItRe.APW?cCodSol=" + cNumProt + "&cRotinLGPD=PPLREEMB", {
													callback: finalizaComprovante,
													error: fRetProtocError }); 
			}
		}
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// finalizaComprovante
	//
	// Exibe a mensagem para inclusão de um novo reembolso.
	*///////////////////////////////////////////////////////////////////////
	function finalizaComprovante(v) {
		var retorno = v.split("|");
		var mensagem = "";
		var cHeaderColor = undefined;
		var cabec = 'Atenção';

		if (retorno[1] == "false"){
			mensagem = retorno[0] + "<br/><br/>";
			cHeaderColor = "white~ #f8c80a";
			cabec = '<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta';
		}

		modalBS(cabec, mensagem + '<p>Deseja incluir outro comprovante?</p>', "@Não~window.frames['principal'].frameElement.contentWindow.FinalizaReemb();@Sim~window.frames['principal'].frameElement.contentWindow.novoComprovante();", cHeaderColor, "large");
	}
	
	/*//////////////////////////////////////////////////////////////////////
	// FinalizaReemb
	//
	// Finaliza o reembolso em digitação.
	*///////////////////////////////////////////////////////////////////////
	function FinalizaReemb() {

		var cNumProt   = document.querySelector("#Field_CODSOL").value;
		var cRDA   	  = document.querySelector("#Field_CPFCNPJ").value;
		var cNomePres = document.querySelector("#Field_NOMEPRE").value;
		var aTipDoc   = document.querySelector("#Field_TIPDOC").value.split("|");
		var cNumDoc   = document.querySelector("#Field_NUMDOC").value;
		var cDatDoc   = document.querySelector("#Field_DTEMIS").value;
		var e = document.querySelector('#Field_TIPDOC');
		var lCabAlt = cabecalhoAlt();
		var lDocObrig = e.options[e.selectedIndex].getAttribute("obriga") == "1";
		
			Ajax.open("W_PPLReemCon.APW?cCodSol=" + cNumProt + "&cCpfCnpj=" + cRDA + "&cNomePres=" + cNomePres + "&cTipDoc=" + aTipDoc[0] + "&cNumDoc=" + cNumDoc + "&cDatDoc=" + cDatDoc + "&lAltera=" + lAltera + "&lDocObrig="+lDocObrig + "&lCabAlt="+lCabAlt+"&cRecDivs="+getRecnoDivs()+"&lMulti="+mv_plreemc, {
													callback: fRetProtoc,
													error: fRetProtocError });  
		closeModalBS();
	}

	/*//////////////////////////////////////////////////////////////////////
	// novoComprovante
	//
	// Abre a tela de solicitação novamente
	*///////////////////////////////////////////////////////////////////////
	function novoComprovante(){
		var cCodSol   = document.getElementById("Field_CODSOL").value;
		closeModalBS();
		window.location='W_PPLREEMB.APW?cCodSol=' + cCodSol + "&lNewComp=true" + ((cFiltro != '') ? "&cFiltro="+cFiltro : "" );
	}

	function fRetProtoc(v){
		//quando v vier um objeto com as despesas que não poderão ser incluidas o eval vai funcionar, quando vier uma mensagem apenas o eval vai dar undefined
		//por isso é necessário realizar o try cat, para não dar erro no console do navegador
		var lMsg = false;
		var arr = [];
		var arrAux = [];
		var cHtml = "";
		var idCaixa = "";
		try {
    		var obj = eval(v);
			for(var i=0;i<obj.length;i++){
				arr = $( "input[value*='Field_MATRIC=" + obj[i][1].value.trim() + "'][value*='Field_CODPAD=" + obj[i][2].value.trim() + "'][value*='Field_CODPROC=" + obj[i][3].value.trim() + "']")
				if(arr.length > 0){	
					idCaixa = arr[0].id.substring(arr[0].id.indexOf("divCaixa"), arr[0].id.length);
					cHtml += "A " + document.querySelector("#" + idCaixa+ " > .divResume > .divBtnTop > .labelDesp > span").innerHTML;
					cHtml += " já foi solicitada no protocolo nº" + obj[i][0].value + "<br>";
				}
			}

			cHtml += " <br><br><h5>Retire as despesas já solicitadas da solicitação para prosseguir</h5>";
			modalBS('<i class="fa fa-times-circle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Erro', '<p>' + cHtml + '</p>', "@OK~closeModalBS();", "white~ #960000", "large");	
			
		} catch (e){
    		lMsg = true;
		}

		if (lMsg){
			var aMsg = v.split("|");
			if(aMsg.length >= 2 && aMsg[1] == "false"){
				modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Atenção', '<p>' + aMsg[0] + '</p>', "@Criar Nova Solicitação~window.frames['principal'].frameElement.contentWindow.closeFim();@Imprimir Protocolo~window.frames['principal'].frameElement.contentWindow.imprimirProtocolo();@Fechar~closeModalBS();", "white~ #f8c80a", "large");		
			}else{
				modalBS('<i class="fa fa-check" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Sucesso', '<p>' + aMsg[0] + '</p>', "@Criar Nova Solicitação~window.frames['principal'].frameElement.contentWindow.closeFim();@Imprimir Protocolo~window.frames['principal'].frameElement.contentWindow.imprimirProtocolo();@Fechar~closeModalBS();", "white~ #009652", "large");	 	
			}
			var disableBtn = window.parent.document.getElementById("btn_finalizar_reemb");
			$(disableBtn).prop('disabled', true);
			YouShallnotPass = true;
		}	
	}

	function closeFim(){
		closeModalBS();	
		$("#modalBS", window.parent.document).attr('style','display: none;')
		parent.window.frames['principal'].location.reload(true);
	}

	function imprimirProtocolo(){  		
		var cRecno        = document.getElementById('cRecno').value;
		var cProtoc       = document.getElementById('Field_CODSOL').value;
		var nAbreNJanelas = 1; 
 		ChamaPoP('W_PPLRELGEN.APW?cFunName=PPRELPROT&cRecno=' + cRecno + '&cProtocolo=' + cProtoc,'bol','yes',0,925,605,nAbreNJanelas); 
	}

	function fRetProtocError(v){
		var disableBtn = window.parent.document.getElementById("btn_finalizar_reemb");
		$(disableBtn).prop('disabled', false);
		exibeErro(v);
	}

	//---------------------------------------------------------------

	//-------------------Validações gerais-------------------
	function fValidaData(oObj, cTipo, cMsg, lLimiteComp){
		var lRetorno = true;
		var a = (oObj.value).split("/");
		var dt = new Date(parseInt(a[2]), parseInt(a[1])-1, parseInt(a[0]));
		var dtAtu = new Date();
		var lLimiteComp = (typeof lLimiteComp !== 'undefined' &&  arguments.length > 3) ? lLimiteComp : false;

		lRetorno = validaCmp(oObj, cTipo, cMsg);

		if(lRetorno){

			if ( oObj.value.length == 0)
				lRetorno = true;
			else if ( dt > dtAtu ){
				lRetorno = false;
				cMsg = "A data do comprovante fiscal não pode ser maior que a data atual!";
			}
			else if ( !vldLimitDate(oObj.value) ){ 
				lRetorno = false;
				cMsg = 	"O documento já atingiu a data limite para solicitação do reembolso!";			
			}
			if (lLimiteComp) {
				var aDataComp = (document.getElementById('Field_DTEMIS').value).split("/");
				var dDataComp = new Date(parseInt(aDataComp[2]), parseInt(aDataComp[1])-1, parseInt(aDataComp[0]));
				if (dt > dDataComp ) {
					lRetorno = false;
					cMsg = 	"A data de execução do item (" +oObj.value+ ") é maior que a data do Documento de Reembolso (" +document.getElementById('Field_DTEMIS').value+ ")!";	
				}
			}
			
			if(!lRetorno) {
				//Foi necessário usar desta forma pois o FIREFOX tem um BUG que não suporta .focus()
				var globalvar = oObj;
				setTimeout("globalvar.focus()",250);
				oObj.value = ''; 
				modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>' + cMsg + '</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
				$('#Field_DTEMIS').prop('disabled', false); 
			}
		}

		return lRetorno; 
	}

	function fRetProf(cProSaud) {		
		var cmpCpfCnpj = document.getElementById("Field_CPFCNPJ");
		// Remover tudo oque não for dígito(numeros)
		document.getElementById("Field_CPFCNPJ").value = cmpCpfCnpj.value.replace(/[^\d]+/g,'');
	
		var lRetorno = validaCmp(cmpCpfCnpj, (cmpCpfCnpj.value.replace(/\D/g,"").length == 11) ? "cpf" : "cnpj", "CPF/CNPJ inválido!"); 

		if(!lRetorno){
			document.getElementById("Field_CPFCNPJ").value = '';
		} else {
			cmpCpfCnpj = document.getElementById("Field_CPFCNPJ");
			// Se o retorno for .T. - Ajusta a Mascara do CPF/CNPJ
			document.getElementById("Field_CPFCNPJ").value = MascCPFCNPJ(cmpCpfCnpj.value); 
		}

		if ( document.getElementById("Field_CPFCNPJ").value.length == 0){ 
			lRetorno = false;
		}

		document.getElementById("Field_NOMEPRE").readOnly = false;
		$('#Field_UF').prop('disabled', false); 
		$('#Field_CIDADE').prop('disabled', false);  
		$('#Field_NOMEPRE').val(''); 

		if (lRetorno){
			Ajax.open("W_PRDAREF.APW?cProSaud=" + cProSaud, {
				callback: CarregaProSaude,
				error: ExibeErro });
		}
	}
	// Mascara para CPF/CNPJ
	function MascCPFCNPJ(cString) {
		cReturn = "";
		//CNPJ
		if (cString.length == 14) {
			cReturn = cString.substring(0, 2) + "." + cString.substring(2, 5) + "." +
			cString.substring(5, 8) + "/" + cString.substring(8, 12) + "-" +
			cString.substring(12, 14);
		} else if (cString.length == 11){ // CPF
			cReturn = cString.substring(0, 3) + "." + cString.substring(3, 6) + "." +
			cString.substring(6, 9) + "-" + cString.substring(9, 11);	    
		}
		
		return(cReturn);
	}

	function CarregaProSaude(v) {
    	var aResult = v.split("|");
		if(aResult[0] == "S"){
    		document.getElementById("Field_NOMEPRE").readOnly = true;
			document.getElementById("Field_NOMEPRE").value	= aResult[2];
		    
			if(aResult[4].trim() != ""){ 
				aResult[4] = aResult[4] + " " //Atenção, com certos estados, dava erro na localização do UF EXemplo SC
			
				$("#Field_UF option:contains(" + aResult[4] +")").attr("selected", true); 
				
				carregaCidSel(aResult[4],'Field_CIDADE', aResult[5]);
				
				$('#Field_UF').prop('disabled', true); 
				$('#Field_CIDADE').prop('disabled', true);  
			}

			return
		}else if(aResult[0] == "N"){
			modalBS('<i class="fa fa-info-circle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>' + aResult[1] + '</p>', "@OK~closeModalBS();", "white~ #69C6F5", "large");
			document.querySelector("#Field_NOMEPRE").focus();
		}else{
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>' + aResult[1] + '</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");
		}
	}

	function fVerCPF(oObj){
		if ( document.getElementById("Field_CPFCNPJ").value.length == 0 ){
			modalBS('<i class="fa fa-exclamation-triangle" style="font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;"></i>&nbsp;&nbsp;&nbsp;Alerta', '<p>É necessário preencher o CPF/CNPJ do prestador antes de informar o nome</p>', "@OK~closeModalBS();", "white~ #f8c80a", "large");		
			oObj.value = "";
		}
	}

	function fAtuMedicamento(v){
		var z = document.getElementById('medicamento').value;

		document.getElementById('medicamento').value = z * 1 + v * 1 + nServAnt * 1;

		verificaMedicamento();

		return;
	}

	function fGetTipservAnt(cValue){
		var aValue = cValue.split("|");
		var cCont = aValue[1];
	
		if ((aValue[1] != 0) && (aValue[1] != 1)){
			cCont = 0;
		}

		nServAnt = cCont * 1;

		nServAnt = cCont - cCont - cCont;

		cCont = 0;
		return;
	}

		//----------------------------------------------------------------------------------------------------
		// Altera a label no campo nº da nota fiscal
		//----------------------------------------------------------------------------------------------------
		function fChangeLabel(){
			var tipoDoc = document.querySelector("#Field_TIPDOC").options[document.querySelector("#Field_TIPDOC").selectedIndex].value;
			if(tipoDoc != ""){
				var lblTipoDoc = "Nº " + (document.querySelector("#Field_TIPDOC").options[document.querySelector("#Field_TIPDOC").selectedIndex].text).toLowerCase();
				document.querySelector("#Field_NUMDOC").parentElement.getElementsByTagName("label")[0].childNodes[0].textContent = lblTipoDoc;
			}else{
				document.querySelector("#Field_NUMDOC").parentElement.getElementsByTagName("label")[0].childNodes[0].textContent = "Nº do Comprovante Fiscal";
			}
		}
		//----------------------------------------------------------------------------------------------------
		// Manipula botão help do comprovante fiscal e obrigatoriedade de preenchimento sempre que um novo documento for selecionado na combobox
		//----------------------------------------------------------------------------------------------------
		function changeHelp() {
     		var tipoDoc = document.querySelector("#Field_TIPDOC").options[document.querySelector("#Field_TIPDOC").selectedIndex];
			var tipoDocVal = tipoDoc.value;
			var tipoDocImg = tipoDoc.getAttribute("imghelp");
			var tipoDocObriga = tipoDoc.getAttribute("obriga");
			var objHelp = document.querySelector("#HPComprovante");
					
		if(tipoDocImg !== null && tipoDocImg !== ''){
			//Caso tenha caminho da imagem, mostra o ícone de help com os atributos dinamicamente definidos.
			objHelp.setAttribute("data-original-title",trim(tipoDocVal));
			objHelp.setAttribute("data-content",'<img src="imagens-pls/' + tipoDocImg + '">');					
							
			objHelp.style.display = "block";
		}else{
			//Esconde o help
			objHelp.style.display = "none";
		}

		fChangeLabel();
				
		//Desabilita o campo caso não seja obrigatório o preenchimento.
		if(tipoDocObriga == null){
			tipoDocObriga = "1";
		}

		if(document.getElementById("Field_TIPDOC").selectedIndex > 0){
			
			if(lDadLoad){
				enadisFields(false);
			}else{
				enadisFields(true,true,false);
			}
			
			//Caso o numero de comprovante não seja obrigatório, desabilita o campo.
			$('#Field_NUMDOC').prop('disabled', !(eval(tipoDocObriga)) );
		}else{
			
			if(lDadLoad){
				enadisFields(true);
			}else{
				enadisFields(false,false,false);
			}
		}

		if(!lDadLoad){
			if(document.getElementById("Field_TIPDOC").value != "" ){
				enadisFields(false,false,true);	
			}
		}
		
		return;
	}	
	
	/*---------------------------------------------------------------------------------
	//Função utilizada para habilitar ou desabilitar edição dos campos de cabeçalho
	//na solicitação de reembolso no portal do beneficiário ao incluir o primeiro item
	//ou excluir o ultimo item contido na solicitação
	//---------------------------------------------------------------------------------*/
	function DisableHeader(lEditar){ 
		
		lEditar = (lEditar == undefined ? 'enable' : lEditar); 	

		$('#Field_TIPDOC').prop('disabled', lEditar);
		$('#Field_CPFCNPJ').prop('disabled', lEditar);
		$('#Field_NUMDOC').prop('disabled', lEditar);
		$('#Field_NOMEPRE').prop('disabled', lEditar);
		$('#Field_DTEMIS').prop('disabled', lEditar);
		$('#Field_UF').prop('disabled', lEditar); 
		$('#Field_CIDADE').prop('disabled', lEditar); 
	}
	
	//----------------------------------------------------------
	//	Li e Concordo
	//----------------------------------------------------------
	function fLiCon(){
		if (cLieCon != ''){
			document.getElementById('Field_LIECON').value = cLieCon;		
		}

	}

	function cabecalhoAlt(){
		var lRet = false;
		for(var key in oCabecalho ) {
			if(oCabecalho[key].defaultValue != oCabecalho[key].actualValue) {
				lRet = true;
				cChaveAnt += key+"|"+oCabecalho[key].defaultValue;
				break;
			}
		}
		return lRet;	
	}

	function verificaEnvArq(){
		
		updObjCab();
	
		//significa que alterou o cabecalho quando clicou no botão anexar
		if(lClickAnexo){
			lClickAnexo = false;
			fEnviArq(document.Form1);
		}
	}

	function updObjCab(){	
		for(var key in oCabecalho ) {
			//depois que gravo o item, preciso que o defaultValue fique igual ao valor atual para não ficar atualizando a B1N 
			//desnecessariamente
			oCabecalho[key].defaultValue = oCabecalho[key].actualValue;
			cChaveAnt = "";	
		}

	}

	function tourTutorial(){
		// Start the tour
		tour.start();
	}

	function fimTour(){
		var lCookie = document.getElementById('chkTourNoAgain').checked;
		if(lCookie)
			document.cookie = "noTour=true";

		tour.end();
	}
 

</script>

<%

//-------------------------------------------------------------------
//	Instanciando o form
//-------------------------------------------------------------------

oForm := WCForm():New("Form1")  
oForm:setTitle("Solicitação de reembolso")

//-------------------------------------------------------------------
//	Adicionando os campos hidden
//-------------------------------------------------------------------
oForm:setAddFieldHidden("Field_DATLIM", HttpSession->cDtLimit )
oForm:setAddFieldHidden("Field_CODSOL", "0" ) //armazena o codigo da solicitação após a primeira gravação
//-------------------------------------------------------------------
//	Tabela principal
//-------------------------------------------------------------------

oTabela := WCTable():New()

If(nTpPor != 2 .AND. lSolRee == 'true')

cTexto := ""
//-------------------------------------------------------------------
//	Cabeçalho
//-------------------------------------------------------------------

oLiCab := WCLine():New()

oFSPar := WCFieldSet():New("Informações do comprovante",,,,"cInfoComp")		
			//-------------------------------------------------------------------
			//		Campo para informar o tipo do comprovante
			//-------------------------------------------------------------------
			oTipDoc := WCComponent():New("C","Field_TIPDOC","Tipo do comprovante")
			oTipDoc:setXS("12")
			oTipDoc:setSM("4")
			oTipDoc:setMD("4")
			oTipDoc:setLG("4")
			oTipDoc:setCssDiv("col-sm-offset-right-6 col-md-offset-right-6 col-lg-offset-right-6")
			oTipDoc:setCss("target")
			oTipDoc:setObrigat(.T.)
			oTipDoc:setJSChange("changeHelp();")	
			oFSPar:setAddCFS(oTipDoc)		

			//-------------------------------------------------------------------
			//		Campo para informar o CPF/CNPJ do prestador de serviço
			//-------------------------------------------------------------------
			oCPFCNPJ := WCComponent():New("F","Field_CPFCNPJ","CPF/CNPJ do prestador de serviço",,"18")
			oCPFCNPJ:setObrigat(.T.)
			oCPFCNPJ:setJSKeyPre("mascaraCpfCnpj(this,cpfCnpj);")
			oCPFCNPJ:setJSBlur('fRetProf(this.value);')
			oCPFCNPJ:setCss("target")
			if(Len(aDadosSoli) > 0 .and. aDadosSoli[1])			
				oCPFCNPJ:setValue(aDadosSoli[2]:cCpfCnpj)
			endif
			oFSPar:setAddCFS(oCPFCNPJ)

			//-------------------------------------------------------------------
			//		Campo para informar o Nome do prestador de serviço
			//-------------------------------------------------------------------
			oNomePre := WCComponent():New("F","Field_NOMEPRE","Nome do prestador de serviço",,"40")
			oNomePre:setObrigat(.T.)
			oNomePre:setJSKeyPre("fVerCPF(this);")
			oNomePre:setCss("target")
			if(Len(aDadosSoli) > 0 .and. aDadosSoli[1])			
				oNomePre:setValue(aDadosSoli[2]:cNomePre)
			endif
			oFSPar:setAddCFS(oNomePre)
			
			oTpEst := WCComponent():New("C","Field_UF","Estado","10")
			oTpEst:setJSChange("carregaCid('Field_UF','Field_CIDADE')")
			oTpEst:setArrCombo(aDadEst)
			oTpEst:setObrigat(.T.)
			oFSPar:setAddCFS(oTpEst)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			//³ Cidade
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
			oCidade := WCComponent():New("C","Field_CIDADE","Município","50", "50")
			oCidade:setCboxPes(.T.)
			oCidade:setObrigat(.T.)
			oFSPar:setAddCFS(oCidade)

			//-------------------------------------------------------------------
			//		Campo para informar o Número do comprovante fiscal
			//-------------------------------------------------------------------
			oNumComFis := WCComponent():New("F","Field_NUMDOC","Nº do Comprovante Fiscal",,"20")
			oNumComFis:setObrigat(.T.)
			oNumComFis:setXS("10")
			oNumComFis:setSM("5")
			oNumComFis:setMD("5")			
			oNumComFis:setLG("4")	
			oNumComFis:setCss("target")	
			if(Len(aDadosSoli) > 0 .and. aDadosSoli[1])			
				oNumComFis:setValue(aDadosSoli[2]:cNumDoc)
			endif	
			oFSPar:setAddCFS(oNumComFis)

			//-------------------------------------------------------------------
			//		Botão HELP para o número do comprovante fiscal
			//-------------------------------------------------------------------
			oNumComFisHelpPopOver := WCComponent():New("HPOPOVER","HPComprovante","Comprovante Fiscal")
			oNumComFisHelpPopOver:setDisplay(.F.)
			oNumComFisHelpPopOver:setXS("1")
			oNumComFisHelpPopOver:setSM("1")
			oNumComFisHelpPopOver:setMD("1")			
			oNumComFisHelpPopOver:setLG("1")
			oFSPar:setAddCFS(oNumComFisHelpPopOver)

			//-------------------------------------------------------------------
			//		Campo para informar a data de emissão do comprovante fiscal
			//-------------------------------------------------------------------
			oDtEmi := WCComponent():New("F","Field_DTEMIS","Data de emissão",,"10")
			oDtEmi:setData(.T.)
			oDtEmi:setObrigat(.T.)
			oDtEmi:setJSBlur('fValidaData(document.getElementById("Field_DTEMIS"), "data", "Data inválida!");')			
			oDtEmi:getJSFocus('fValidaData(document.getElementById("Field_DTEMIS"), "data", "Data inválida!");') 
			oDtEmi:setJSChange('fFilBen(this.value);')			
			
			oDtEmi:setCss("target")
			if(Len(aDadosSoli) > 0 .and. aDadosSoli[1])			
				oDtEmi:setValue(aDadosSoli[2]:cDtEmis)
			endif	
			oFSPar:setAddCFS(oDtEmi)

			oCHTM	:= WCComponent():new('CHTM')
			oCHTM:setValue("<div id='popoverMsg' class='hidden'><div class='popover-heading'><i class='fa fa-exclamation-triangle' style='font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;'></i>&nbsp;&nbsp;&nbsp;Por favor, informe os campos obrigatórios da despesa</div><div class='popover-body'></div></div>")
			oFSPar:setAddCFS(oCHTM) 
			 
 	//-------------------------------------------------------------------
	//	 Adicionando o fieldset na linha
	//-------------------------------------------------------------------
oLiCab:setAddComp(oFSPar)

oLiDesp := WCLine():New()
	//-------------------------------------------------------------------
	//	 FieldSet das despesas
	//-------------------------------------------------------------------
	oFSDesp := WCFieldSet():New("Despesa",,,,"FS_model_desp")		 	
			//-------------------------------------------------------------------
			//		Campo para informar o nome do beneficiário
			//-------------------------------------------------------------------
			oNomBen := WCComponent():New("C","Field_NOMBEN","Nome do beneficiário")
			oNomBen:setObrigat(.T.)
			oNomBen:setJsChange("loadReceitas(this)")
			oFSDesp:setAddCFS(oNomBen)

			//-------------------------------------------------------------------
			//		Campo para informar o tipo de serviço utilizado
			//-------------------------------------------------------------------
			oTipSer := WCComponent():New("C","Field_TIPSER","Tipo de serviço utilizado")
			oTipSer:setObrigat(.T.)
			oTipSer:setJSFocus("fGetTipservAnt(this.value);")
			oTipSer:setJsBlur("LimpaProc(this)")
			oFSDesp:setAddCFS(oTipSer)

			//-------------------------------------------------------------------
			//		Campo para informar se é Uso constante
			//-------------------------------------------------------------------
			oUsoConst := WCComponent():new("RADIO","Field_USOCONST","Uso constante:")          
			oUsoConst:setArrRadio(aProc)
			oUsoConst:setType("inline")
			oUsoConst:setXS("12")
			oUsoConst:setSM("2")
			oUsoConst:setMD("2")
			oUsoConst:setLG("2")
			oUsoConst:setCss("usoConst")
			oUsoConst:setObrigat(.T.)
			oFSDesp:setAddCFS(oUsoConst)

			//-------------------------------------------------------------------
			//		Campo para informar a receita
			//-------------------------------------------------------------------
			oReceita := WCComponent():New("C","Field_RECEITA","Selecione o medicamento")
			oReceita:setCssDiv("med_usoConst")
			oReceita:setObrigat(.T.)
			oFSDesp:setAddCFS(oReceita)

			//-------------------------------------------------------------------
			//		Campo F3 para informar o código do procedimento
			//-------------------------------------------------------------------
			oCodPro := WCComponent():New("F","Field_CODPROC","Selecione a despesa","26","20")
			oCodPro:setObrigat(.T.)	
			oCodPro:setJsFF3("fF3Proc()")
			oCodPro:setJsChange("fRetProc(this)")
			oCodPro:setPlaceHolder( "Clique na lupa " )
			oCodPro:setReadOnly()
			oCodPro:setCssDiv("procedimento")

			oCodPro:setXS("12")
			oCodPro:setSM("4")
			oCodPro:setMD("4")
			oCodPro:setLG("4")
			
			oFSDesp:setAddCFS(oCodPro)

			//-------------------------------------------------------------------
			//		Campo Nome do procedimento que recebe o retorno do F3 acima
			//-------------------------------------------------------------------
			oNomPro := WCComponent():New("F","Field_NOMPROC","Despesa","60")
			oNomPro:setReadOnly()
			oNomPro:setObrigat(.T.)
			oNomPro:setCssDiv("procedimento")
			oFSDesp:setAddCFS(oNomPro)

			//-------------------------------------------------------------------
			//		Campo para informar a quantidade utilizada do procedimento
			//-------------------------------------------------------------------
			oQtd := WCComponent():New("F","Field_QTD","Quantidade",,"3")
			oQtd:setNumber(.T.)
			oQtd:setValue("1")
			oQtd:setMinValue(1)
			oQtd:setMaxValue(999)
			oQtd:setXS("12")
			oQtd:setSM("3")
			oQtd:setMD("2")
			oQtd:setLG("2")
			oQtd:setObrigat(.T.)
			oQtd:setJsKeyPre("return SomenteNumero(this)")
			oQtd:setJsChange("fVldQtd(this)")
			oFSDesp:setAddCFS(oQtd)

			//-------------------------------------------------------------------
			//		Campo para informar o valor do procedimento
			//-------------------------------------------------------------------
			oValor := WCComponent():New("F","Field_VALOR","Valor",,"10")
			oValor:setTooltip("Informe o valor total gasto com a despesa")
			oValor:setXS("12")
			oValor:setSM("3")
			oValor:setMD("3")
			oValor:setLG("3")
			oValor:setCss("money")
			oValor:setJsBlur("fVldQtd(this)")
			oValor:setObrigat(.T.)
			oFSDesp:setAddCFS(oValor)

			//-------------------------------------------------------------------
			//Campo para informar Data de Execução do item
			//-------------------------------------------------------------------
			oDtExec := WCComponent():New("F","Field_DTEXEC","Data de Execução",,"10")
			oDtExec:setObrigat(.T.)
			oDtExec:setJSKeyPre("return TxtBoxFormat(this, event,'99/99/9999');")
			oDtExec:setJSBlur('fValidaData(this, "data", "Data inválida!", true);')			
			oDtExec:getJSFocus('fValidaData(this, "data", "Data inválida!", true);') 
			oDtExec:setXS("12")
			oDtExec:setSM("3")
			oDtExec:setMD("3")
			oDtExec:setLG("3")
			oFSDesp:setAddCFS(oDtExec)
 	//-------------------------------------------------------------------
	//	 Adicionando o fieldset na linha
	//-------------------------------------------------------------------

oLiDesp:setAddComp(oFSDesp)

oLiBoxes := WCLine():New()
	//-------------------------------------------------------------------
	//	 FieldSet das caixas de despesas
	//-------------------------------------------------------------------
	oFSBoxes := WCFieldSet():New("Digite suas despesas",,,,"FS_boxes_desp")	
	//-------------------------------------------------------------------
	//	 Div principal das despesas
	//-------------------------------------------------------------------
	oCHTM	:= WCComponent():new('CHTM')
	oCHTM:setValue("<div id='containerDesp' class='col-xs-12 col-sm-12 col-md-12 col-lg-12'></div>")
	oFSBoxes:setAddCFS(oCHTM) 
 	//-------------------------------------------------------------------
	//	 Adicionando o fieldset na linha
	//-------------------------------------------------------------------
oLiBoxes:setAddComp(oFSBoxes)

//-------------------------------------------------------------------
//	Criando nova linha
//-------------------------------------------------------------------
oLiBtnAdd := WCLine():New()

				//-------------------------------------------------------------------
				//	Botão confirmar
	  			//-------------------------------------------------------------------
				oBtnAdd := WCComponent():New("B","BAddDesp","Adicionar outra despesa &nbsp;<i class='fa fa-plus-circle'></i> ")
				oBtnAdd:setCss('popover-div')
				oBtnAdd:setJsFunc("vldBloqUser('add');")   
				oBtnAdd:setAlign('left')

//-------------------------------------------------------------------
//	Adicionando o botão na linha
//-------------------------------------------------------------------	
oLiBtnAdd:setAddComp(oBtnAdd)

//---------------------------------------------------------
//		Adicionando alert BS para mensagem
//---------------------------------------------------------
oLiABS	:= WCLine():new()

oAlertBS	:= WCComponent():new("ABS", "alert_receita")
oAlertBS:setCss("warning")
cTexto := "<strong>Atenção: </strong>Se os medicamentos solicitados possuírem receita, "
cTexto += "não se esqueça de anexá-la.<br><br><strong>Obs: </strong>Se for um medicamento "
cTexto += "de uso constante e a receita já estiver cadastrada, não é necessário anexá-la "
cTexto += "novamente, apenas selecione o medicamento no campo <strong>'Selecione o medicamento'</strong>"

oAlertBS:setText(cTexto)

oLiABS:setAddcomp(oAlertBS)
//-------------------------------------------------------------------
//	Anexos
//-------------------------------------------------------------------

oLiAnx := WCLine():New()
oLiBrw	:= WCLine():new()

oFSAnx := WCFieldSet():New("Anexos e/ou Receitas",,,,"cAnxComp")
oFSBrw	:= WCFieldSet():new("")

			//-------------------------------------------------------------------
			//		Campo para selecionar o arquivo para envio
			//-------------------------------------------------------------------
			oUpload := WCComponent():new("F", "Field_UPLOAD", "Selecione o Arquivo:", "15", "15")
			oUpload:setType('file')
			oUpload:setJSChange("this.form.fakeupload.value = this.value.substr(this.value.lastIndexOf('\\')+1);")
			oFSAnx:setAddCFS(oUpload)

			//-------------------------------------------------------------------
			//		Botão para enviar o arquivo
			//-------------------------------------------------------------------
			oEnvUpl := WCComponent():new("B", "btn_EnvUpl", "Anexar &nbsp; <i class='fa fa-paperclip'></i>", "15", "15")
			oEnvUpl:setOpenGrp(.T.)
			oEnvUpl:setClosegrp(.T.)
			oEnvUpl:setXS("12")
			oEnvUpl:setSM("12")
			oEnvUpl:setMD("12")
			oEnvUpl:setLG("12")
			oEnvUpl:setJsFunc("vldBloqUser('anx');") 
			oEnvUpl:setCss('popover-div')
			oFSAnx:setAddCFS(oEnvUpl)

			//-------------------------------------------------------------------
			//		Botão para enviar o arquivo
			//-------------------------------------------------------------------
			oBtnOcl := WCComponent():new('CHTM')
			oBtnOcl:setValue( "<div id='divbtn_Oculto'><button name='btn_Oculto' id='btn_Oculto' type='button' class='btn btn-default' onclick='fGetUpl();' style='display: none;'></button></div>" )
			oFSAnx:setAddCFS(oBtnOcl)

			//-------------------------------------------------------------------
			//		Browse dos arquivos
			//-------------------------------------------------------------------
			oBrwUpl := WCComponent():new("BW", "Browse_Upload", "")
			oBrwUpl:setBrWidth("400")
			oFSBrw:setAddCFS(oBrwUpl)
			
 			//-------------------------------------------------------------------
			//	 Adicionando o fieldset na linha
			//-------------------------------------------------------------------
			oLiAnx:setAddComp(oFSAnx)
			oLiBrw:setAddComp(oFSBrw)

			oCHTM	:= WCComponent():new('CHTM')
			oCHTM:setValue("<div id='branco' class='col-xs-12 col-sm-12 col-md-12 col-lg-12' style='height:50px; width: 150px;float: right;'></div>")

oLiBrw:setAddComp(oCHTM)

//-------------------------------------------------------------------
//	Li e Concordo
//-------------------------------------------------------------------
If (!Empty(AllTrim(HttpSession->cLieCon)))
	
	oLieCon := WCLine():New()
	oFSLiCo := WCFieldSet():New("Termo",700,"10","10")
	
	//-------------------------------------------------------------------
	//	 Memo do li e concordo
	//-------------------------------------------------------------------
	oMenLiC:=WCComponent():New("CHTM")
	oMenLiC:setValue("<fieldset><textarea class='form-control TextoInputOB' id='Field_LIECON' cols='50' rows='7'  value='' "+;
					 "size='10' readonly='readonly' /></textarea></div></div></fieldset>")
	oFSLiCo:setAddCFS(oMenLiC)

	oChkLiC:=WCComponent():New("CHTM")
	oChkLiC:setValue("<input type='checkbox' value='' id='Field_CHKLICO'> Li e Concordo</input>")
	oFSLiCo:setAddCFS(oChkLiC)

	oCHTMLc	:= WCComponent():new('CHTM')
	oCHTMLc:setValue("<div id='branco' class='col-xs-12 col-sm-12 col-md-12 col-lg-12' style='height:50px;'></div>")

	
	oLieCon:setAddComp(oFSLiCo)
	oLieCon:setAddComp(oCHTMLc)

EndIf


//-------------------------------------------------------------------
//	Adicionando as Linhas à tabela
//-------------------------------------------------------------------
oTabela:setAddLine(oLiCab)
oTabela:setAddLine(oLiDesp)
oTabela:setAddLine(oLiBoxes)
oTabela:setAddLine(oLiBtnAdd)
oTabela:setAddLine(oLiABS)
oTabela:setAddLine(oLiAnx)
oTabela:setAddLine(oLiBrw)

If (!Empty(AllTrim(HttpSession->cLieCon)))
	oTabela:setAddLine(oLieCon)
EndIf

Else
	cMsg := iif(nTpPor == 2,"Essa funcionalidade está disponível apenas para o portal do beneficiário", "Usuário sem Permissão para solicitação de reembolso!<br>Para maiores informações, consulte a Operadora")
	oLiEmpresa := WCLine():New()
	//-------------------------------------------------------------------
	//	 Div principal das despesas
	//-------------------------------------------------------------------
	oCHTMEmp	:= WCComponent():new('CHTM')
	oCHTMEmp:setValue("<div class='divEmpresa col-xs-12 col-sm-12 col-md-12 col-lg-12'><h4 style='display: table-cell;vertical-align: middle;'>" + cMsg + "</h4></div>")
 	//-------------------------------------------------------------------
	//	 Adicionando o fieldset na linha
	//-------------------------------------------------------------------
    oLiEmpresa:setAddComp(oCHTMEmp)
	oTabela:setAddLine(oLiEmpresa)

EndIf
		
//-------------------------------------------------------------------
//	Adicionando a tabela principal no form
//-------------------------------------------------------------------
oForm:setAddTables(oTabela)

//-------------------------------------------------------------------
//	Adicionando campos  Hidden
//-------------------------------------------------------------------
oForm:setAddFieldHidden("fakeupload")
oForm:setAddFieldHidden("anexo")

oForm:setAddFieldHidden("cRecno")
oForm:setAddFieldHidden("cChave")
oForm:setAddFieldHidden("cAlitab", "BOW")
oForm:setAddFieldHidden("cNumInd", "1")
oForm:setAddFieldHidden('retorno')
oForm:setAddFieldHidden('medicamento')
oForm:setAddFieldHidden('edita_nome_rnr')
oForm:setAddFieldHidden("contItem", 1)
//-------------------------------------------------------------------
//	Adicionando o form no HTML
//-------------------------------------------------------------------
oHtml:setObj(oForm)

%>

<%=oHtml:loadWC()%> 

<script>
	//Verifica parâmetro para habilitar ou desabilitar o tour.
	if (!mv_pltoure){
		document.cookie = "noTour=true";
	}
	
	if(nTpPor != 2 && lSolRee){

		Ajax.open("W_PPLGETEST.APW?cTipo=", { callback: fRetEstado, error: exibeErro});

		//executa junto com o carregamento da página
		$(function() { 							
			
			$( ".target" ).change(function() {
  				 oCabecalho[this.id].actualValue = (this.value).trim();
			});
			
			document.querySelector("#Field_CODSOL").value = cCodSol;

			putDivBtnFim();
			updFrameSchemeColor();
			CrgCbTpSer();
			$( '#Field_DTEMIS' ).datepicker( "option" , { maxDate: 0 }  );	

			$('[data-toggle="popover"]').popover({placement: "bottom"}); 
			popoverOnSave(); 

			if(cPassos != '' && (getCookie("noTour") != "true")){
					
					var cMsgPasso1 = typeof cPassos.MENSAGENS[0] != "undefined" ? cPassos.MENSAGENS[0].MENSAGEM : "";
					var cMsgPasso2 = typeof cPassos.MENSAGENS[1] != "undefined" ? cPassos.MENSAGENS[1].MENSAGEM : "";
					var cMsgPasso3 = typeof cPassos.MENSAGENS[2] != "undefined" ? cPassos.MENSAGENS[2].MENSAGEM : "";
					var cMsgPasso4 = typeof cPassos.MENSAGENS[3] != "undefined" ? cPassos.MENSAGENS[3].MENSAGEM : "";

					var template = "<div class='popover tour' style='min-width: 295px;'>";
   					template +=		"<div class='arrow'></div>";
    				template +=		"<h3 class='popover-title'></h3>";
    				template +=		"<div class='popover-content'></div>";
    				template +=		"<div class='popover-navigation'>";
       				template +=			"<button class='btn btn-default' data-role='prev'>« Anterior</button>";
        			template +=			"<button class='btn btn-default' data-role='next'>Próximo »</button>";
					template +=			"<button class='btn btn-neuter' style='float:right;' onclick='fimTour();'>Finalizar</button>";
   					template +=		"</div>";   				
  					template +="</div>";
				
					tour = new Tour({
    					template: template,
						storage: false,
    					steps:[{
          					element: "#cInfoComp",
       	 					title: "Passo 1 <div style='float:right;'><input type='checkbox' id='chkTourNoAgain'>&nbsp;Não exibir novamente</div>",
          					content: cMsgPasso1,
							placement: "auto",
							backdrop: true,
  							backdropContainer: 'body',
  							backdropPadding: false
   						   },
						   {
          					element: "#FS_boxes_desp",
       	 					title: "Passo 2 <div style='float:right;'><input type='checkbox' id='chkTourNoAgain'>&nbsp;Não exibir novamente</div>",
          					content: cMsgPasso2,
							placement: "auto",
							backdrop: true,
  							backdropContainer: 'body',
  							backdropPadding: false
   						   },
						   {
          					element: "#cAnxComp",
       	 					title: "Passo 3 <div style='float:right;'><input type='checkbox' id='chkTourNoAgain'>&nbsp;Não exibir novamente</div>",
          					content: cMsgPasso3,
							placement: "auto",
							backdrop: true,
  							backdropContainer: 'body',
  							backdropPadding: false
   						   },
						   {
          					element: "#branco",
       	 					title: "Passo 4 <div style='float:right;'><input type='checkbox' id='chkTourNoAgain'>&nbsp;Não exibir novamente</div>",
          					content: cMsgPasso4,
							placement: "auto",
							backdrop: false,
  							backdropContainer: 'body',
  							backdropPadding: false
   						   }
					]
				});

				tour.init();
				tour.restart();
				tourTutorial();
			}

			$(document).on('click', function (e) {
   				 $('.popover-div').each(function () {
        			//the 'is' for buttons that trigger popups
       				//the 'has' for icons within a button that triggers a popup
        			if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
            			$(this).popover('hide');
        			}
   		 		});
			});	

		}); 

		if( document.querySelector("#Field_TIPSER").value != "" && (document.querySelector("#Field_TIPSER").value).split("|")[1] == "0"){
			$('input[name=Field_USOCONST]').prop('disabled', true);
		}
		fFilTpComp();
		
		if(lDadLoad){
			fFilBen();
		}
		
		fLiCon();		

		if(mv_plreemc && cAcao == "V"){ 
			$("form :input").prop("disabled", true); 
		}	
	}
	

	function stripLeftZeros(sStr){
	//http://eustaquiorangel.com/posts/14 -> Origem da função, fonte para consultas futuras
	   var i;
	   for(i=0;i<sStr.length;i++)
		{
		  if( (sStr.charAt(i)==',') && (sStr.charAt(i-1)=='0') )
			return sStr.substring(i-1);
		  else{
	      if(sStr.charAt(i)!='0')
	         return sStr.substring(i);
		  }
		}
	   return sStr;
	}

	function enadisFields(lDisable){
		var totalFields = document.Form1.elements.length;

		for (i = 1; i < totalFields; i++) {
			if((document.Form1.elements[i].className.indexOf("target") != -1 || document.Form1.elements[i].tagName=="BUTTON" || document.Form1.elements[i].tagName=="INPUT" || document.Form1.elements[i].tagName=="SELECT") && document.Form1.elements[i].name != 'Field_TIPDOC' && document.Form1.elements[i].name != 'Field_CODPROC_divCaixa1'  && document.Form1.elements[i].name != 'Field_NOMPROC_divCaixa1' && document.Form1.elements[i].name != 'Field_UF' && document.Form1.elements[i].name != 'Field_CIDADE'){ 
				document.Form1.elements[i].disabled = lDisable;
			}
		}
	}

	if (!eval(lAltera)){
		enadisFields(true);
	}
	
</script>
