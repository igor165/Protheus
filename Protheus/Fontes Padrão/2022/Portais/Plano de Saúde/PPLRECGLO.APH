<% 
#DEFINE nTamTab 		"660"
#DEFINE nTAMRR 		    "630"
#DEFINE nLarBrw 		"630"
#DEFINE nAltBrw 		"200"
#DEFINE cBrwDefFP 	"BrwGridFP"
#DEFINE cBrwDefIt 	"BrwGridIt"
#DEFINE cBrwDefPegFC  	"BrwGridPegFC"

LOCAL aStatus	:= {"1=Protocolado","2=Em Análise","3=Autorizado","4=Negado","5=Aut. Parcialmente"}
LOCAL oHtml 	:= WCHtml():New()  

%>
<%=oHtml:getDType()%>
<script language="JavaScript">
<!--
//defini nome do browse .
cBrwGridFP 		= <%="'"+cBrwDefFP+"'"%>
cBrwGridIt 		= <%="'"+cBrwDefIt+"'"%>
oBrwGridPegFC  	= <%="'"+cBrwDefPegFC+"'"%>

//Bloqueia o esc														  
document.onkeydown = blockEsc;


//------------------------------------------------------------------
// Popover com alerta de campos obrigatórios
//------------------------------------------------------------------
function popoverOnShow(){
	$('.popover-div').popover({
		placement: "top",
		html : true,
    	content: function() {
       		var content = $("#popoverMsg");
       		return $(content).children(".popover-body").html();
      	},
	    title: function() {
      	var title = $("#popoverMsg");
       		return $(title).children(".popover-heading").html();
     	},
		template: '<div class="popover-cmpOb popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    });
}  


//------------------------------------------------------------------
// Popover com alerta de campos obrigatórios
//------------------------------------------------------------------
function popoverOnSave(){
	$(".popover-div").popover({
		placement: "top",
		html : true,
		trigger: 'manual',
    	content: function() {
       		var content = $("#popoverMsg");
       		return $(content).children(".popover-body").html();
      	},
	    title: function() {
      	var title = $("#popoverMsg");
       		return $(title).children(".popover-heading").html();
     	},
		template: '<div class="popover-cmpOb popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    });
}   


// variavel utilizada para manipulação dos dados do grid
var objTable;
var aItens = new Array();
var lRespPerg = false;

// verifica informações da peg
function fCheckPeg(campo) {
	var cProt = campo.value;
	var cRda		= getField('Field_RDAFIL');
	if(cProt.length < 8){
		modalBS("Atenção", "<p>Digite um protocolo válido</p>", "@Fechar~closeModalBS();", "white~#ff0000", "large");
		$("#Field_GLOSA").val(""); 
		$("#Field_VLRGLOSA").val(""); 
		$("#Field_JUST").prop("readonly", true);
		$("#Field_GUIA").prop("readonly", true);
		$("#Field_JUST").val("");
		$("#Field_GUIA").val("");
	} else if (cRda != "") {
		Ajax.open("W_PPLCHEPEG.APW?cCodPeg=" + cProt + "&cCodRDA=" + cRda + "&cOrigEnt=2 ", {callback: fProcessaRec} );
	} else {
		modalBS("Atenção", "<p>Selecione uma RDA</p>", "@Fechar~closeModalBS();", "white~#ff0000", "large");
		campo.value = "";
	}
}

// verifica informações da guia
function fCheckGui(campo) {
	var cGui = campo.value;
	var cPro  = getField('Field_PROT');
	if (cPro != "" && cGui.length == 8) {
		Ajax.open("W_PPLCHEGUI.APW?cGuiaNum=" + cGui + "&cCodPeg=" + cPro + "&cOrigEnt=2 ", {callback: fProcessaRec} );
	}else{
		modalBS("Atenção", "<p>Digite um protocolo/guia válido</p>", "@Fechar~closeModalBS();", "white~#ff0000", "large");
		campo.value = "";
		$("#Field_RDAFIL").prop("disabled", false);
	}
	}

// verifica se existe alguma rda selecionada
function fCheckRda(campo) {
	var cRda = campo.value;
	if(cRda != "") {
		$("#Field_PROT").prop("readonly", false);		
	} else {
		$("#Field_PROT").prop("readonly", true);
		$("#Field_GLOSA").val(""); 
		$("#Field_VLRGLOSA").val(""); 
		$("#Field_JUST").prop("readonly", true);		
	}
	}  	

/*/ processaRec
preenche a glosa do prot/gui e libera o campo justificativa

nOpt = 0 / peg que não possibilita continuar com o processo de recurso
nOpt = 1 / peg glosada integralmente
nOpt = 2 / peg com guia glosada integralmente ou itens glosados
nOpt = 3 / guia glosada integralmente
nOpt = 4 / guia que não possibilita continuar com o processo de recurso
/*/
function fProcessaRec(v) {
	var aResult = v.split("|");
	var cMsg 	= aResult[0];
	var nOpt    = aResult[1];
	var cGlos   = "";
	var cItens  = "";
	
	$("#Field_Tipo").val(nOpt);
	if (nOpt == 1) {
		modalBS("Atenção", "<p>"+cMsg+"</p>", "@Fechar~closeModalBS();", "white~#ffa500", "large");
		cGlos = aResult[2];
		$("#Field_VLRGLOSA").val(aResult[3].trim()); 
		$("#Field_GLOSA").val(cGlos); 
		$("#Field_JUST").prop("readonly", false);
		$("#Field_GUIA").prop("readonly", true);
		$("#Field_GUIA").val("");
		$("#Field_RDAFIL").prop("disabled", true);
		$("#field-informacoes").show();
		clearDataTable();
	} else if(nOpt == 2){
		$("#Field_GUIA").prop("readonly", false);
		$("#Field_GUIA").val("");
		$("#Field_VLRGLOSA").val("");
		$("#Field_GLOSA").val("");
		$("#Field_JUST").prop("readonly", true);
		$("#field-informacoes").hide();
		$("#Field_RDAFIL").prop("disabled", true);
		clearDataTable();
	} else if(nOpt == 3){
		modalBS("Atenção", "<p>"+cMsg+"</p>", "@Fechar~closeModalBS();", "white~#ffa500", "large");
		cGlos = aResult[2];
		$("#Field_JUST").prop("readonly", false);
		$("#field-informacoes").show();
		$("#Field_VLRGLOSA").val(aResult[4].trim());
		$("#Field_GLOSA").val(cGlos);
		$("#Field_RDAFIL").prop("disabled", true);
		clearDataTable();
	} else if(nOpt == 4){
		modalBS("Atenção", "<p>"+cMsg+"</p>", "@Fechar~closeModalBS();", "white~#ab3434", "large");
		$("#field-informacoes").hide();
		$("#Field_RDAFIL").prop("disabled", false);
		clearDataTable();
	} else if(nOpt == 5){
		cItens = aResult[3];
		fExibeItens(cItens)
		$("#field-informacoes").hide();
		$("#Field_RDAFIL").prop("disabled", true);
	} else {
		modalBS("Atenção", "<p>"+cMsg+"</p>", "@Fechar~closeModalBS();", "white~#ab3434", "large");
		$("#Field_GLOSA").val(""); 
		$("#Field_VLRGLOSA").val(""); 
		$("#Field_JUST").prop("readonly", true);
		$("#Field_GUIA").prop("readonly", true);
		$("#Field_GUIA").val("");
		$("#field-informacoes").hide();
		$("#Field_RDAFIL").prop("disabled", false);
		clearDataTable();
	}
		}


// incluir novo recurso - utiliza o campo ctipo para validar qual tipo de inclusão realizar
function fIncluirRecurso() {
	var cTipo  		= getField('Field_Tipo');
	var cRda   		= getField('Field_RDAFIL');
	var cProt  		= getField('Field_PROT');
	var cGui   		= getField('Field_GUIA');
	var cJust  		= getField('Field_JUST').toUpperCase();
	var cItens 		= "";
	var lCont  		= false;
	var nDadValid	= 0;
	var nTamItens	= 0;
	var cTexto1		= "Existem itens não analisados, ou seja, que não possuem valor de recurso e justificativa.";
	var cTexto2		= "Deseja continuar o protocolo somente com os itens recursados e justificados?";	
	var cDadResp	= '';
	var cTextoPrb	= "<p>Encontramos algumas inconsistências, ao incluir o recurso:<p>"; 

	if(cTipo == "") {
		modalBS("Atenção", "<p>Selecione uma RDA</p>", "@Fechar~closeModalBS();", "white~#ab3434", "large");
	} else if (cTipo == "0" || cTipo == "2") {
		modalBS("Atenção", "<p>Digite um protocolo/guia válido</p>", "@Fechar~closeModalBS();", "white~#ab3434", "large");
	} else if (cTipo == "1" || cTipo == "3") {
		if(cJust == ""){
			modalBS("Atenção", "<p>Preencha o campo justificativa</p>", "@Fechar~closeModalBS();", "white~#ab3434", "large");
		} else {
			Ajax.open("W_PPLINCREC.APW?cCodPeg=" + cProt + "&cCodRDA=" + cRda + "&cGuiaNum=" + cGui + "&cJustif=" + cJust + "&cOperador=" + cTipo + "&cOrigEnt=2 ", {callback: fExibeRecurso} );
		}		
	} else if (cTipo == "5") {
		cDadResp = fVlreGlosa();

		if (cDadResp.length > 0) {
			cTextoPrb += "<li>Itens com valor de recurso, mas sem justificativa preenchida; </li>";
			cTextoPrb += "<li>Itens com justificativa preenchida, mas sem valor de recurso. </li>";
			cTextoPrb += "<p>Verifique os itens abaixo, por meio da coluna <strong>Item</strong> do grid:</p>";
			modalBS("Atenção", cTextoPrb + cDadResp, "@Fechar~closeModalBS();", "white~#ab3434", "large");
			return	
		}
		nTamItens = aItens.length;
		for(i=0; i < aItens.length;i++) {
			if(parseFloat(aItens[i].item.glosa.replace(/\D/g,"")) > 0 && !isEmpty(aItens[i].item.just)) {
				lCont = true;
				break;
			}
		}
	
		if (lCont) {
			for( n=0; n < aItens.length; n++) {
				cItens += aItens[n].item.seq + "-" + aItens[n].item.glosa + "-" + aItens[n].item.just + "|"
			}			
			Ajax.open("W_PPLINCREC.APW?cCodPeg=" + cProt + "&cCodRDA=" + cRda + "&cGuiaNum=" + cGui + "&cJustif=" + cJust + "&cOperador=" + cTipo + "" + "&cItens=" + cItens + "", {callback: fExibeRecurso} );
		} else {
			modalBS("Atenção", "<p>Recursar pelo menos um item</p>", "@Fechar~closeModalBS();", "white~#ab3434", "large");
	}
	}			
}       

function fExibeRecurso(v){
	var aResult = v.split("|");
	var cMsg 	= aResult[0];
	var nOpt    = aResult[1];
	var cPro    = aResult[2];

	if (nOpt == 1) {
		modalBS(cMsg, "<p>Número do protocolo: <b>" + cPro + "</b></p>", "@Fechar~closeModalBS();", "white~#008000", "large");
		$("#Field_RDAFIL").val("");
		$("#Field_PROT").val("");
		$("#Field_GUIA").val("");
		$("#Field_VLRGLOSA").val("");
		$("#Field_GLOSA").val("");
		$("#Field_JUST").val("");
		$("#Field_JUST").prop("readonly", true);
		$("#Field_GUIA").prop("readonly", true);
		$("#Field_PROT").prop("readonly", true);
		$("#Field_Tipo").val(0);		
		$("#Field_RDAFIL").prop("disabled", false);
		clearDataTable();
		$("#field-informacoes").hide();
		aItens = new Array();
	} else if (nOpt == 0) {
		modalBS("Atenção", "<p>"+cMsg+"</p>", "@Fechar~closeModalBS();", "white~#ff0000", "large");
	}
}


function fExibeItens(cItens){
	var cSkins = "<%=GetPrtSkin()%>";		
	var cTableHead = $("#tRecursoItens thead tr");
	var cTableBody = $("#tRecursoItens tbody");
	var cHtml 	   = ""
	var cLinha 	   = ""
	var oJson 	   = JSON.parse(cItens);
	var objItens   = oJson.items;
	
	cHtml += "<th>Item</th><th>Data Procedimento</th><th>Tabela</th><th>Cod.Proc.</th><th>Descrição</th>";
	cHtml += "<th>Saldo a Recursar</th><th>Descr. Glosa</th><th>Vlr.Recurso</th> <th>Just. Prest.</th>"; 
	
	for (i = 0; i < objItens.length /*- 1*/; i++){
		cLinha += "<tr>";
		cLinha += "<td class='item-seq'>" + objItens[i].fields.find(objItens => objItens.id === 'B4E_SEQUEN').value + "</td>";
		cLinha += "<td>" + objItens[i].fields.find(objItens => objItens.id === 'B4E_DATPRO').value + "</td>";
		cLinha += "<td>" + objItens[i].fields.find(objItens => objItens.id === 'B4E_CODPAD').value + "</td>";
		cLinha += "<td>" + objItens[i].fields.find(objItens => objItens.id === 'B4E_CODPRO').value + "</td>";
		cLinha += "<td>" + objItens[i].fields.find(objItens => objItens.id === 'B4E_DESPRO').value + "</td>";
		cLinha += "<td>" + MaskMoeda(objItens[i].fields.find(objItens => objItens.id === 'B4E_SLDREC').value.replace(/\D/g,"")) + "</td>";
		cLinha += "<td>" + objItens[i].fields.find(objItens => objItens.id === 'B4E_DESGLO').value.replaceAll("/ ","<br/>").replaceAll("/","");
		if (objItens[i].fields.find(objItens => objItens.id === 'COMPLEMENTO_DESC') != null) {
			cLinha += objItens[i].fields.find(objItens => objItens.id === 'COMPLEMENTO_DESC').value.replaceAll("/ ","<br/>").replaceAll("/","") + "</td>";
		}else{
			cLinha += " </td>";
		}	
		cLinha += "<td><input type='text' class='field_glosa' onchange='fAtualizaInf(this,1, " + i.toString() + ")' value='' /> </td>";		
		cLinha += "<td><textarea  style='text-transform: uppercase;' maxlength='150' onchange='fAtualizaInf(this,2, " + i.toString() + ")' value='' /></textarea></td>";
		cLinha += "</tr>";
		
		aItens.push({'item':{seq : objItens[i].fields.find(objItens => objItens.id === 'B4E_SEQUEN').value, glosa : '0', just : ''}});		
	}

	cTableHead.append(cHtml);
	cTableBody.append(cLinha);

	$('.field_glosa').mask('#.##0,00', {reverse: true});

	objTable = $('#tRecursoItens').DataTable( {
		"lengthChange": false,
		"pageLength": 10,
		"columns": [
			{ "width": "6%" },
			{ "width": "11%" },
			{ "width": "6%" },
			{ "width": "8%" },
			{ "width": "15%" },
			{ "width": "10%" },
			{ "width": "19%" },
			{ "width": "10%" },
			{ "width": "15%" }
		],
		"language": {
			"sEmptyTable": "Nenhum registro encontrado",
			"sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
			"sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
			"sInfoFiltered": "(Filtrados de _MAX_ registros)",
			"sInfoPostFix": "",
			"sInfoThousands": ".",
			"sLengthMenu": "_MENU_ resultados por página",
			"sLoadingRecords": "Carregando...",
			"sProcessing": "Processando...",
			"sZeroRecords": "Nenhum registro encontrado",
			"sSearch": "Pesquisar",
			"oPaginate": {
				"sNext": "Próximo",
				"sPrevious": "Anterior",
				"sFirst": "Primeiro",
				"sLast": "Último"
			},
			"oAria": {
				"sSortAscending": ": Ordenar colunas de forma ascendente",
				"sSortDescending": ": Ordenar colunas de forma descendente"
			},
			"select": {
				"rows": {
					"_": "Selecionado %d linhas",
					"0": "Nenhuma linha selecionada",
					"1": "Selecionado 1 linha"
				}
			}
		}
	});

}

// altera valor de um campo do array
function fAtualizaInf(oCampo,cOpera, nLocal) {
	var cValue  	= oCampo.value;
	var cSeq    	= $(oCampo).parent().parent().find('.item-seq').text()
	var nIndex  	= findWithAttr(aItens, cSeq);
	var cTabela 	= $(tRecursoItens);
	var nValorGlosa	= parseFloat(cTabela[0].tBodies[0].rows[parseInt(nLocal%10)].cells[5].innerHTML.replace(/\D/g, ""))
	var nValorRecur	= parseFloat(cValue.replace(/\D/g, ""))

	if(cOpera == 1) {
		//verifica se o valo digitado é maior que o da glosa 
		if(nValorRecur > nValorGlosa) {
			modalBS("Atenção", "Informe um valor de Recurso igual ou menor que o Saldo de glosa, exibido na coluna Saldo a Glosar.</p>", "@Fechar~closeModalBS();", "white~#ffa500", "large");
			oCampo.value = '';
			oCampo.focus();
			aItens[nIndex].item.glosa = '0';
		} else {
			aItens[nIndex].item.glosa = cValue.toString();
		} 
	} else if (cOpera == 2) {
		aItens[nIndex].item.just = cValue.toUpperCase();
	}
}
  

// procura um sequencial no array 
function findWithAttr(aArray, cValue) {
    for(var i = 0; i < aArray.length; i += 1) {
        if(aArray[i].item.seq === cValue) {
            return i;
        }
    }
    return -1;
}


function fFormataData (cData) {
  var cResultado;
  if (cData != "") {
	var cParte = cData.match(/\d+/g),
	cAno = cParte[0].substring(0,4);
	cMes = cParte[1];
	cDia = cParte[2];
	cResultado = cDia+'/'+cMes+'/'+cAno;
  } else {
 	cResultado = ""
  }
  return cResultado
	} 	

function clearDataTable(){
	$("#tRecursoItens_wrapper").html("<table id='tRecursoItens' class='display'><thead><tr></tr></thead><tbody></tbody></table>");
}


function fVlreGlosa() {
var lResp 	= false;	
var nI 		= 0;
var cDadRet	= "";
var nVlrGlo	= 0;
var lJstGlo = '';

	for( nI=0; nI < aItens.length; nI++ ) {
		nVlrGlo = isEmpty(aItens[nI].item.glosa) ? 0 : parseFloat(aItens[nI].item.glosa.replace(/\D/g,""));
		lJstGlo = isEmpty(aItens[nI].item.just);
		if( (nVlrGlo > 0 && lJstGlo) || (isEmpty(nVlrGlo) && !lJstGlo) )  {
			cDadRet += aItens[nI].item.seq + " - ";
		}
	}
return (cDadRet.substr(0, cDadRet.length - 3))
}   


function carregaCampos(){
	$("#field-informacoes").hide();
	$("#Field_JUST").attr('maxlength', 150);
	$("#Field_JUST").attr('style', "text-transform: uppercase;")
	$(document).on("keypress", "#Field_JUST",function(event) {
		if (event.keyCode == 13 && !event.shiftKey) {
			// prevent default behavior
			event.preventDefault();
		}		
	});
}


function fGetRecGlosa() {
	var cCodRda 	= getField('Field_CODRDAFC');
	var cDtDe 		= getField('Field_DTDEFC');
	var cDtAte 		= getField('Field_DTATEFC');
	var cStatus 	= $.isNumeric(parseInt(getField('Field_STATUSREC'))) ? getField('Field_STATUSREC') : '';
	var cProtPeg	= isEmpty(getField('Field_PROTPEG')) ? '' : getField('Field_PROTPEG');
	var cWhere 		= "CODRDA="+cCodRda+"|"+"DATADE="+cDtDe+"|"+"DATAATE="+cDtAte+"|"+"STATUS="+cStatus+"|"+"PROTPEG="+cProtPeg;
	var cPesquisa 	= "";
	var cDadPes		= "";
	
	//valida parametros
	if ( isEmpty(cCodRda) || isEmpty(cDtDe) || isEmpty(cDtAte)  ) {
		modalBS("Atenção", "<p>Informe os parâmetros necessários para consulta:</p><p>Prestador e os campos Data De e Data Até!</p>", "@Fechar~closeModalBS();", "white~#ffa500", "large");		
		getObjectID('Field_CODRDAFC').focus();
		return
	} else if ( (cProtPeg.length > 0 && cProtPeg.length < 8) || (cProtPeg.length > 8 && cProtPeg.length < 12) ) {
		modalBS("Atenção", "<p>Informe um número correto de Protocolo ou Recurso</p><p>Protocolo contêm oito dígitos e Recurso contêm 12 dígitos</p>", "@Fechar~closeModalBS();", "white~#ffa500", "large");
		getObjectID('Field_PROTPEG').focus();
		return
	}

	//verifica se foi chamado pela navegacao
	var cBuscaTReg = getGridCall(cBrwGridFP,'fGetRecGlosa');

	//Monta campos conforme processamento da rdas							   
	if ( wasDef(typeof(oBrwGridFP)) ) {
	   	oBrwGridFP.setEmptyDiv();
	}
	if (wasDef( typeof(oBrwGridIt) ) ) {
		oBrwGridIt.setEmptyDiv();
	}	
	Ajax.open("W_PPLGETDGRI.APW?cFunName=PLBRRECGB4D&nPagina=" + getField(cBrwGridFP+'nPagina') + "&cWhere=" + cWhere + "&cBuscaTReg=" + cBuscaTReg , {
				callback: carregaGridDados, 
				error: exibeErro} );				
}
	

function carregaGridDados(v) { 
	var aResult = v.split("|");
	//Se existe registro define propriedades
	var nSituac		= 5	
	var nPosicLcDig = 0
	var nQtdReg		= aResult[1];  
	var nQtdPag 	= aResult[2];
	var nRegPagina 	= aResult[3];
    var aHeader 	= eval(aResult[4]);
    var lContinua	= eval(aResult[7]);
    var cMsg 		= aResult[6];
	var nPagAtual	= aResult[8];
	var aDadFP 		= [];
	aDadFP = (lContinua) ? eval(aResult[5]) : aDadFP;

	if (aDadFP.length > 0) {
		for (var nFor=0 ; nFor<aDadFP.length ; nFor++)
		{ 
			aDadFP[nFor][6].value = aDadFP[nFor][6].value.substr(0,2) + "'" + aDadFP[nFor][6].value.substr(2,aDadFP[nFor][6].value.length) + "'";
			aDadFP[nFor][7].value = aDadFP[nFor][7].value.substr(0,2) + "'" + aDadFP[nFor][7].value.substr(2,aDadFP[nFor][7].value.length) + "'";
		}  
	}	

	//Seta a quantidade total de paginas - seta somente quando nao for navegacao
	if (lContinua) {
		setDisable('bProFP',false);

		if (nPagAtual != "0") setField(cBrwGridFP+"nPagina",nPagAtual);
		
		//Monta Browse 
		oBrwGridFP = new gridData(cBrwGridFP,<%=nLarBrw%>,<%=nAltBrw%>, false)

		//Monta Browse 		
		oBrwGridFP.load({	fFunName:'fGetDad',
							nRegPagina:nRegPagina,
							nQtdReg:nQtdReg,
							nQtdPag:nQtdPag,
							lOverflow:true,
							lShowLineNumber:true,
							lChkBox:false,
							aBtnFunc:"[{info:'Download',img:'message.png',funcao:'buscajustificativaprot'},{info:'Exibe Guias',img:'067.gif',funcao:'fGetItens'},{info:'Download',img:'anexo.jpg',funcao:'fAnexarX'}]",
							aHeader: aHeader,
							aCols: aDadFP });

		makeBrwResponsive('tab'+cBrwGridFP, true, true, true, true );
		updGridSchemeColor();
	}					

	//Mensagem de alerta
	if ( !isEmpty(cMsg) ) {
		setDisable('bProFP',true);
		alert(cMsg);
	}

	if (aDadFP.length > 0) {
		var Tab = eval('oBrwGridFP').getObjCols(); 
		for (var i = 0; i < Tab.rows.length; i++) {
			if (getTC(Tab.rows[i].cells[6]).trim().toUpperCase() == 'PROTOCOLO' || getTC(Tab.rows[i].cells[6]).trim().toUpperCase() == 'GUIA') {
				Tab.rows[i].cells[8].innerHTML = '';
			} else {
				Tab.rows[i].cells[7].innerHTML = '';
			}
		}					
	}       
}

function buscajustificativaprot(v) {
var cAlias = "B4D";
Ajax.open("W_PLisCriRG.APW?cChave="+v+"&cAlias="+cAlias, {callback: fExibMot, error: ''} );
}

function fAnexarX(cDados){	
	cDados = cDados.split("~");
	cChave = cDados[0];
	cRecno = trim(cDados[1]);
	cAlitab = "B4D";
	Ajax.open("W_PPLUPGEN.APW?cModo=2&cRecno="+ cRecno +"&cChave="+cChave+"&NumInd=1&cAlitab="+cAlitab+"&lExcluir=0"+"&lVisual=0&lBaixar=1", {callback: mostraUpload, error: ExibeErro} );
}

function mostraUpload(v) {
	var anexoCHTM = document.querySelector("#anexoCHTM");
	anexoCHTM.innerHTML = v;
	modalBS("<i style='color:#639DD8;' class='fa fa-paperclip fa-lg'></i>&nbsp;&nbsp;Anexos", "<form name='frmUpl' id='frmUpl' action='' method='post'>" + anexoCHTM.innerHTML  + "</form>", "@Concluir~closeModalBS();", "white~#84CCFF");	
	parent.document.getElementById("closeModal").onclick = 'window.frames[0].closePop(' + cRecno + ');';
	//pego o botão da tela de anexos genericas e faço o click para carregar a grid de documentos
	//parent.document.getElementById("btn_Oculto").style.display="none";
	parent.document.getElementById("btn_Oculto").click();
}

function buscajustificativaitem(v) {
var cAlias = "B4E";
Ajax.open("W_PLisCriRG.APW?cChave="+v+"&cAlias="+cAlias, {callback: fExibMot, error: ''} );
}


function fExibMot(v){
	var cObservacao = atob(v);
	if (isEmpty(cObservacao)) {
		cObservacao = 'N/A';
	}
	modalBS("Observação da Operadora", "<p>" + cObservacao + "</p>", "@Fechar~closeModalBS();", "white~#ffa500", "large");	
}


function fGetItens(v) {
	var cChavePesq	= ( wasDef(typeof v) ) ? v : 0;
	var cWhere 		= "CCHAVEPESQ="+cChavePesq;
	var cPesquisa 	= "";
	var cDadPes		= "";

	//verifica se foi chamado pela navegacao
	var cBuscaTReg = getGridCall(cBrwGridIt,'fGetItens');

	//Monta campos conforme processamento da rdas							   
	if ( wasDef(typeof(oBrwGridIt)) ) {
	   	oBrwGridIt.setEmptyDiv();
	}
	Ajax.open("W_PPLGETDGRI.APW?cFunName=PLBRREIT4E&nPagina=" + getField(cBrwGridIt+'nPagina') + "&cWhere=" + cWhere + "&cBuscaTReg=" + cBuscaTReg , {
				callback: carregaGridDadosItens, 
				error: exibeErro} );				
}

	
function carregaGridDadosItens(v) { 
	var aResult = v.split("|");
	//Se existe registro define propriedades
	var nSituac		= 5	
	var nPosicLcDig = 0
	var nQtdReg		= aResult[1];  
	var nQtdPag 	= aResult[2];
	var nRegPagina 	= aResult[3];
    var aHeader 	= eval(aResult[4]);
    var lContinua	= eval(aResult[7]);
    var cMsg 		= aResult[6];
	var nPagAtual	= aResult[8];
	var aDadFP		= [];
	aDadFP 		= (lContinua) ? eval(aResult[5]) : aDadFP;
	
	if (aDadFP.length > 0) {
		for (var nFor=0 ; nFor<aDadFP.length ; nFor++)
		{ 
			aDadFP[nFor][6].value = aDadFP[nFor][6].value.substr(0,2) + "'" + aDadFP[nFor][6].value.substr(2,aDadFP[nFor][6].value.length) + "'";
		}
	}
	
	if (lContinua) {
		setDisable('bProFP',false);

		if (nPagAtual != "0") setField(cBrwGridIt+"nPagina",nPagAtual);
		
		//Monta Browse 
		oBrwGridIt = new gridData(cBrwGridIt,<%=nLarBrw%>,<%=nAltBrw%>, false)

		//Monta Browse 		
		oBrwGridIt.load({	fFunName:'fGetDad',
							nRegPagina:nRegPagina,
							nQtdReg:nQtdReg,
							nQtdPag:nQtdPag,
							lOverflow:true,
							lShowLineNumber:true,
							lChkBox:false,
							aBtnFunc:"[{info:'Mensagem',img:'message.png',funcao:'buscajustificativaitem'}]",
							aHeader: aHeader,
							aCols: aDadFP });

		makeBrwResponsive('tab'+cBrwGridIt, true, true, true, true );
		updGridSchemeColor();
	}					

	//Mensagem de alerta
	if ( !isEmpty(cMsg) ) {
		setDisable('bProFP',true);
		alert(cMsg);
	}	
	
	//fGetDoc() 				
}       

function ExibeErro(v) {                   
	var aResult = v.split("|"); 
	
	if (aResult[0] != "true" && aResult[0] != "false")
	    alert("Erro: " + aResult[0])
	else {   
		if (aResult[0] == "false") {
		  alert(aResult[1]);          
		  if(typeof cCampoRef != 'undefined' && !document.getElementById(cCampoRef).disabled)
			  document.getElementById(cCampoRef).focus();
		}   
	}	 
} 

</script>
<%                                        

//Formulario
oForm := WCForm():New("Form1")                       
oForm:setWidth(nTamTab)
oForm:setTitle("Consulta e geração de Recurso de Glosa")
oForm:setIsFolder()

//Tabela principal
oTabPriFP := WCTable():New("tabPrincipal")
oTabPriFP:setTitFolder("Inserir Protocolo de Recurso de Glosa")

//Linha
oLiParFP := WCLine():new()

//Propridade do grupo fieldset
cTexto := ''
cTexto := 'Para utiliza a rotina, siga as seguintes etapas: <br>'
cTexto += '<strong>1)</strong> No campo <strong>"Selecione o prestador"</strong>, selecione no combo o prestador para qual deseja incluir o protocolo. <br>'
cTexto += '<strong>2)</strong> No campo <strong>"Protocolo"</strong>, infome o número do Protocolo que possui glosa - é o campo 15 no Demonstrativo de Pagamento. <br>'
cTexto += '&nbsp;&nbsp;&nbsp;<strong>2.1)</strong> Caso o protocolo inteiro esteja glosado, irá justificar o total do protocolo; <br>' 
cTexto += '<strong>3)</strong> Caso a glosa seja em nível de Guia ou Itens, o campo <strong>"Guia"</strong> será habilitado - é o campo 16 no Demonstrativo de Pagamento.<br>'
cTexto += '<strong>4)</strong> Após os lançamentos das justificativas, clique no botão <strong>"Incluir"</strong>, para que o protocolo seja gerado e retornado o número do protocolo'

oFSParFP := WCFieldSet():New("Parâmetros&nbsp;<i class='fa fa-info-circle' style='font-size: 15px;color: #0390D4;' data-toggle='popover' data-trigger='hover' title='Informações' data-content='" + cTexto + "'></i>&nbsp;<span style='font-size:13px;'>Informações</span>",nTAMRR,"10","10")

//Rda
oRda := WCComponent():New( "C","Field_RDAFIL","Selecione o prestador:",,,,,,.F.,"12","4","5","4")				  
oRda:setSession("HttpSession->RDAVIEW")
oRda:setJSChange("fCheckRda(this)")
oRda:setIsName()
oRda:setObrigat(.T.)

oFSParFP:setAddCFS(oRda) 

//Numero da Guia ou protocolo
oProt := WCComponent():new("F","Field_PROT","Protocolo",,"8",,,.T.,.F.,"12","8","6","4")
oProt:setJSChange("fCheckPeg(this)")
oProt:setObrigat(.T.)
oFSParFP:setAddCFS(oProt)

oGuia := WCComponent():new("F","Field_GUIA","Guia",,"8",,,.T.,.F.,"12","8","6","4")
oGuia:setJSChange("fCheckGui(this)")
oGuia:setObrigat(.F.)
oFSParFP:setAddCFS(oGuia)

oCHTM	:= WCComponent():new('CHTM')
oCHTM:setValue("<div id='popoverMsg' class='hidden'><div class='popover-heading'><i class='fa fa-exclamation-triangle' style='font-weight: bold; color: #000; text-shadow: 0 1px 0 #fff; filter: alpha(opacity=20); opacity: .2;'></i>&nbsp;&nbsp;&nbsp;Por favor, informe os campos obrigatórios</div><div class='popover-body'></div></div>")
oFSParFP:setAddCFS(oCHTM)

oLiParFP:setAddComp(oFSParFP)

// linha
oLiSeg   := WCLine():new()

// fieldset
oFSInfo := WCFieldSet():new("Informações",,,,"field-informacoes")

//info valor glosa
oVlrGlos := WCComponent():new("F","Field_VLRGLOSA","Valor Glosa do Protocolo/Guia",,"150",,,.T.,.F.,"12","8","6","4")
oVlrGlos:setObrigat(.F.)
oFSInfo:setAddCFS(oVlrGlos)

// campo info glosa
oGlos := WCComponent():new("F","Field_GLOSA","Glosa do Protocolo/Guia",,"150",,,.T.,.F.,"12","8","6","4")
oGlos:setObrigat(.F.)
oFSInfo:setAddCFS(oGlos)

// campo info glosa
oJust := WCComponent():new("TA","Field_JUST","Justificativa",,"150",,,.T.,.F.,"12","8","6","4")
oJust:setObrigat(.F.)
oFSInfo:setAddCFS(oJust)

oLiSeg:setAddComp(oFSInfo)

// linha
oLiBtnInc := WCLine():New()

// botão incluir
oBtnInc := WCComponent():New("B","bConsFP","Incluir",,,,,,.F.,"12","12","12","12") 
oBtnInc:SetJsFunc("fIncluirRecurso()")
oBtnInc:setAlign('right')
oLiBtnInc:setAddComp(oBtnInc)

// campo hidden para controle do que o usuário pode fazer de acordo com o peg/guia digitado
oTipo	:= WCComponent():new('CHTM')
oTipo:setValue("<input type='hidden' name='Field_Tipo' id='Field_Tipo' value='0'>")
oLiBtnInc:setAddComp(oTipo)

// tabela que vai ser utilizada para carregar os itens da guia
oTable	:= WCComponent():new('CHTM')
oTable:setValue("<table id='tRecursoItens' class='display'><thead><tr></tr></thead><tbody></tbody></table>")
oLiBtnInc:setAddComp(oTable)

//Fechamento da Tabela
oTabPriFP:setAddLine(oLiParFP)
oTabPriFP:setAddLine(oLiSeg)
oTabPriFP:setAddLine(oLiBtnInc)


//Segunda ABA
oTabConFC := WCTable():New("tabConsulta")
oTabConFC:setTitFolder("Consultar Protocolos de Recurso de Glosa Gerados")

//Linha
oLiParFC := WCLine():new()

//Propridade do grupo fieldset
oFSParFC := WCFieldSet():new("Selecionar parâmetros",nTAMRR,"10","10")

//Rda
oRdaFC := WCComponent():New("C","Field_CODRDAFC","Rede de Atendimento","150")
oRdaFC:setSession("HttpSession->RDAVIEW")
oRdaFC:setIsName()
oFSParFC:setAddCFS(oRdaFC)

//data de
oDtDeFC := WCComponent():new("F","Field_DTDEFC","Data De","11","10")
oDtDeFC:setObrigat(.t.)      
oDtDeFC:setData(.t.)  
oDtDeFC:setValue( dToc(date()-7) )
oDtDeFC:setJSKeyPre("return TxtBoxFormat(this, event,'99/99/9999');")
oDtDeFC:setJSBlur("validaCmp(this, 'data','Data invalida');")
oFSParFC:setAddCFS(oDtDeFC)

//data ate
oDtAteFC := WCComponent():new("F","Field_DTATEFC","Data Ate","10","10")
oDtAteFC:setObrigat(.t.)   
oDtAteFC:setData(.t.)    
oDtAteFC:setValue( dtoc(date()) )
oDtAteFC:setJSKeyPre("return TxtBoxFormat(this, event,'99/99/9999');")
oDtAteFC:setJSBlur("validaCmp(this, 'data','Data invalida');")
oFSParFC:setAddCFS(oDtAteFC)

//Tipo de guia
oStatRecurso := WCComponent():New("C","Field_STATUSREC","Status Recurso","140")
oStatRecurso:setArrCombo(aStatus)
oFSParFC:setAddCFS(oStatRecurso)    

//Campo de Protocolo/PEG
oProtPeg := WCComponent():new("F","Field_PROTPEG","Recurso/ Protocolo","12","12")    
oFSParFC:setAddCFS(oProtPeg)

oLiParFC:setAddComp(oFSParFC) 

//Botao
oLiBtnConFC := WCLine():New()

oBConFC := WCComponent():New("B","bConsFC","Exibir Protocolos")
oBConFC:SetJsFunc("fGetRecGlosa();")
oBConFC:setAlign('right')
oBConFC:setOpenGrp(.T.)
oBConFC:setCloseGrp(.T.)

oLiBtnConFC:setAddComp(oBConFC)      

//Linha do browse de pegs
oLiPesqRec := WCLine():new()

//Propridade do grupo fieldset
oFSBrwRECG := WCFieldSet():New("Status dos Protocolos",nTAMRR,"10","10")   

//Browse de Protocolos
oBrwRECG := WCComponent():New("BW",cBrwDefFP)
oBrwRECG:setBrWidth(nLarBrw)
oBrwRECG:setJsFunc("fGetPeg()")

oFSBrwRECG:setAddCFS(oBrwRECG)

//monta linha do browse 
oLiPesqRec:setAddComp(oFSBrwRECG)

//Linha do browse de Itens do Protocolo
oLiEXbItens := WCLine():new()

//Propridade do grupo fieldset
oFSBrwITRECG := WCFieldSet():New("Itens do Protocolo",nTAMRR,"10","10")   

//Browse  
oBrwITRECG := WCComponent():New("BW",cBrwDefIt)
oBrwITRECG:setBrWidth(nLarBrw)
oBrwITRECG:setJsFunc("fGetItens()")

oFSBrwITRECG:setAddCFS(oBrwITRECG)

//monta linha do browse 
oLiEXbItens:setAddComp(oFSBrwITRECG)
	
//Fechamento da Tabela
oTabConFC:setAddLine(oLiParFC)
oTabConFC:setAddLine(oLiBtnConFC)
oTabConFC:setAddLine(oLiPesqRec)
oTabConFC:setAddLine(oLiEXbItens)

//Tabelas do form
oForm:setAddTables(oTabPriFP)
oForm:setAddTables(oTabConFC)

//Form no HTML
oHtml:setObj(oForm)
%>

<%=oHtml:loadWC()%> 

<div id='anexoCHTM' style='display:none'></div>
<script>
<!--
	updFrameSchemeColor();
	carregaCampos();

	$(function() { 
		popoverOnShow();

		$(document).on('click', function (e) {
   				 $('.popover-div').each(function () {
        			//the 'is' for buttons that trigger popups
       				//the 'has' for icons within a button that triggers a popup
        			if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
            			$(this).popover('hide');
        			}
   		 		});
			});
	});

		updFrameSchemeColor();

		$(function() { 	
			updFrameSchemeColor();

			$('[data-toggle="popover"]').popover({placement: "bottom", html: "true"});   
			popoverOnSave(); 

			setTimeout(function() {
       			 $("#alert_temp_info").hide('blind', {}, 500)
    		}, 10000);

		}); 
//-->

</script>