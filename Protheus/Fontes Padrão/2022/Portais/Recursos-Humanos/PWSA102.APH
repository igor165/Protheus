<%
#INCLUDE "PWSA100.CH"

Static lRefTrab	:= FindFunction("fRefTrab") .And. fRefTrab("F",hTtpSession->mvRefTrab)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Descricao ³ Pagina para o cabeçalho e as solicitacoes			              		³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ RH/Portais                         		            		  		    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Atualizacoes sofridas desde a Construcao Inicial.            	        		    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Analista      	³ Data   	³ FNC            ³  Motivo da Alteracao                 ³±± 
±±³Emerson Campos 	³22/04/14 	³M_RH003/310901	 ³Foi utilizado o fonte relativo ao     ³±±
±±³					³         	³		         ³changeset 215442 de 25/03/2014   		³±±
±±³           	  	³         	³                ³Disponibilizado a nova opção de soli- ³±±
±±³           	  	³         	³                ³citação Subsídio Acadêmico  			³±±
±±³Allyson M      	³24/06/15 	³TSO576			 ³Inclusao de validacao p/ solicitacao  ³±±
±±³					³         	³		         ³de ferias afim de evita conflito das  ³±±
±±³           	  	³         	³                ³datas									³±±
±±³Matheus M.      	³06/11/15 	³TTQYX5			 ³Ajuste na DateValid() para emitir um  ³±±
±±³					³         	³		         ³aviso quando o inicio das férias for  ³±±
±±³					³         	³		         ³começar em um sábado ou domingo.      ³±±
±±³Matheus M.      	³15/12/15 	³TUCYP3			 ³Efetuado ajuste no cabeçalho PWSA100  ³±±
±±³					³         	³		         ³nas strings que contém acentuação,    ³±±
±±³					³         	³		         ³na solicitação de férias.  			³±±
±±³Flavio Correa    ³27/01/16 	³TUCYP3     	 ³Correção de acentuação quando "STR000"³±±
±±³					³         	³		         ³esta com códigos HTML				    ³±±
±±³Matheus M.       ³12/07/16 	³TVPMVJ     	 ³Ajuste para permitir pré-abonar para  ³±±
±±³					³         	³		         ³datas superiores a database do sistema³±±
±±³Allyson M      	³09/08/16 	³TVNQAR			 ³Ajuste p/ validar idade do funcionario³±±
±±³					³         	³		         ³na solicitacao de ferias e exibir msg ³±±
±±³           	  	³         	³                ³se tiver menos de 18 ou mais de 50 e  ³±±
±±³           	  	³         	³                ³solicitar menos dias que os de direito³±±
±±³Matheus M.       ³03/10/16 	³TVZM68     	 ³Ajuste nas validações de ação salarial³±±
±±³Eduardo K.    	³22/11/16 	³167138 		 ³Removida obrigatoriedade do campo de  ³±±
±±³					³         	³		         ³observação de férias				    ³±±
±±³Eduardo K.    	³23/11/16 	³160081 		 ³ajuste na validação dos dias de ferias³±±
±±³					³         	³		         ³considerando abono pecuniario		    ³±±
±±³Eduardo K.    	³24/01/18 	³MPRIMESP-13457  ³Ajuste para validar data de inicio de ³±±
±±³					³         	³		         ³ferias corretamente nos navegadores   ³±±
±±³					³         	³		         ³chrome e firefox.				        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
	Local cTitulo        := "" 
	Local nIndice        := 0
	Local nIndiceSolic   := 0
	Local nIndiceTransf  := 0
	Local nOperacao      := HttpGet->nOperacao
	Local msg            := HttpGet->msg
	
	Do Case
   		Case (HttpSession->cTypeRequest == "A")
        	cTitulo	:= STR0044 //"Solicitacao de Treinamento"
   		Case (HttpSession->cTypeRequest == "B")
        	cTitulo	:= STR0004 //"Solicitacao de Ferias"
   		Case (HttpSession->cTypeRequest == "4")
        	cTitulo	:= STR0024 //"Solicitação de Transferência"
   		Case (HttpSession->cTypeRequest == "6")
        	cTitulo	:= STR0026 //"Solicitacao de Desligamento"
   		Case (HttpSession->cTypeRequest == "7")
        	cTitulo	:= STR0040 //"Solicitacao de Acao Salarial"
   		Case (HttpSession->cTypeRequest == "8")
        	cTitulo	:= STR0029 //"Solicitacao de Justificativa"
   		Case (HttpSession->cTypeRequest == "C")
        	cTitulo	:= STR0047 //"Consulta de Mapa de Treinamento"
   		Case (HttpSession->cTypeRequest == "D")
        	cTitulo	:= STR0048 //"Consulta de Competencias"
   		Case (HttpSession->cTypeRequest == "E")
        	cTitulo	:= STR0049 //"Consulta do Banco de Horas"
   		Case (HttpSession->cTypeRequest == "F")
        	cTitulo	:= STR0050 //"Listagem de Marcacoes"
   		Case (HttpSession->cTypeRequest == "G")
        	cTitulo	:= STR0051 //"Consulta da Tabela de Horários"
   		Case (HttpSession->cTypeRequest == "FERPROG")
        	cTitulo	:= STR0046 //"Ferias Programadas"
   		Case (HttpSession->cTypeRequest == "I")
        	cTitulo	:= STR0052 //"Gaps de Fatores de Avaliação"
   		Case (HttpSession->cTypeRequest == "J")
        	cTitulo	:= STR0053 //"Gaps de Habilidades"  
   		Case (HttpSession->cTypeRequest == "K")
        	cTitulo	:= STR0054 //"Dependentes"
   		Case (HttpSession->cTypeRequest == "L")
        	cTitulo	:= STR0055 //"Afastamentos"
      Case (HttpSession->cTypeRequest == "N")
         cTitulo    := STR0064 //"Alteracao de Jornada"
      Case (HttpSession->cTypeRequest == "O")
           If HttpSession->c520Solic == "1"
              cTitulo := STR0081 //"Saldo de Ferias"
           Else
              cTitulo := STR0110 //"Saldo de Licenca Premio"
           EndiF  
      Case (HttpSession->cTypeRequest == "P")
           If  nOperacao == "1"
	           If HttpSession->c530Solic == "1"
	              cTitulo := STR0068 //"Programacao de Ferias"
	           Else
	              cTitulo := STR0093 //"Programacao de Licenca Premio"
	           EndiF  
           Else
               cTitulo    := STR0119 //"Avaliacao da Solicitacao para Ferias e Licenca Premio"
           EndIf 
      Case (HttpSession->cTypeRequest == "Q")
         cTitulo    := STR0066 //"Diarias"
      Case (HttpSession->cTypeRequest == "R")
         cTitulo    := STR0086 //"Licencas e Afastamentos"
      Case (HttpSession->cTypeRequest == "S")
         cTitulo    := STR0087 //"Certidao Funcional"
      Case (HttpSession->cTypeRequest == "T")
           If  nOperacao == "1"
               If HttpSession->c570Solic == "1"
                  cTitulo := STR0082 //"Programacao/Indenizacao para Dias de Folga"
               Else
                  cTitulo := STR0111 //"Retificacao/Cancelamento para Dias de Folga"
               EndiF
           Else
               cTitulo    := STR0118 //"Avaliacao da solicitacao para Dias de Folga"
           EndIf
      Case (HttpSession->cTypeRequest == "V")
         cTitulo    := STR0095 //"Subsídio Acadêmico"
	  Case (HttpSession->cTypeRequest == "X")
         cTitulo    := STR0107 //"Histórico Salarial"
	  Case (HttpSession->cTypeRequest == "Z")
         cTitulo    := STR0120 //"Espelho de Ponto"
 	EndCase
	
	If 	nOperacao == "1"
		If !(Valtype(HttpGet->nIndice) == "U")
			nIndice	:= HttpGet->nIndice
		Else
			If (HttpSession->cTypeRequest == "F") .And. !(Valtype(HttpGet->nIndiceTransf) == "U") 
				nIndiceTransf	:= HttpGet->nIndiceTransf
			EndIf
		EndIf
	ElseIf nOperacao $ "3*4"
		nIndiceSolic   		 	 	:= HttpGet->nIndiceSolic
		HttpSession->nIndiceSolic 	:= HttpGet->nIndiceSolic
		HttpSession->nOperacao 		:= HttpGet->nOperacao
	EndIf

%>

<?xml version="1.0" encoding="iso-8859-1"?>
<!doctype html public "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<title></title>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<link href="styles/consulta.css" rel="stylesheet" type="text/css">
		<link href="styles/estilo.css" rel="stylesheet" type="text/css">
		<link href="styles/interseccao.css" rel="stylesheet" type="text/css">

		<script src="scripts/ajax.js" language="JavaScript" type="text/javascript"></script>
		<script src="scripts/prototype.js" language="JavaScript" type="text/javascript"></script>
		<script src="scripts/scriptaculous.js" language="JavaScript" type="text/javascript"></script>
	</head>

    <style>
        #SELECT { 
             font-size: 8pt; 
             font-family : verdana,arial,helvetica; 
         }
 
        .dia {font-family: helvetica, arial; font-size: 6pt; color: #43595E}
        .data {font-family: helvetica, arial; font-size: 7pt; text-decoration:none; color:#191970}
        .mes {font-family: helvetica, arial; font-size: 6pt}
        .Cabecalho_Calendario {font-family: helvetica, arial; font-size: 8pt; color: #000000; text-decoration:none; font-weight:bold}
    </style>

	<script language=JavaScript type="text/javascript" charset="utf-8">

function convertTagsHTMLCaracteres(htmlString){

htmlString = htmlString.replace( /&Agrave;/g , "À")
htmlString = htmlString.replace( /&Aacute;/g , "Á")
htmlString = htmlString.replace( /&Acirc;/g , "Â")
htmlString = htmlString.replace( /&Atilde;/g , "Ã")
htmlString = htmlString.replace( /&agrave;/g , "à")
htmlString = htmlString.replace( /&aacute;/g , "á")
htmlString = htmlString.replace( /&acirc;/g , "â")
htmlString = htmlString.replace( /&atilde;/g , "ã")
htmlString = htmlString.replace( /&Ograve;/g , "Ò")
htmlString = htmlString.replace( /&Oacute;/g , "Ó")
htmlString = htmlString.replace( /&Ocirc;/g , "Ô")
htmlString = htmlString.replace( /&Otilde;/g , "Õ")
htmlString = htmlString.replace( /&ograve;/g , "ò")
htmlString = htmlString.replace( /&oacute;/g , "ó")
htmlString = htmlString.replace( /&ocirc;/g , "ô")
htmlString = htmlString.replace( /&otilde;/g , "õ")
htmlString = htmlString.replace( /&Egrave;/g , "È")
htmlString = htmlString.replace( /&Eacute;/g , "É")
htmlString = htmlString.replace( /&Ecirc;/g , "Ê")
htmlString = htmlString.replace( /&egrave;/g , "è")
htmlString = htmlString.replace( /&eacute;/g , "é")
htmlString = htmlString.replace( /&ecirc;/g , "ê")
htmlString = htmlString.replace( /&Igrave;/g , "Ì")
htmlString = htmlString.replace( /&Iacute;/g , "Í")
htmlString = htmlString.replace( /&igrave;/g , "ì")
htmlString = htmlString.replace( /&iacute;/g , "í")
htmlString = htmlString.replace( /&Ugrave;/g , "Ù")
htmlString = htmlString.replace( /&Uacute;/g , "Ú")
htmlString = htmlString.replace( /&ugrave;/g , "ù")
htmlString = htmlString.replace( /&uacute;/g , "ú")
htmlString = htmlString.replace( /&Ccedil;/g , "Ç")
htmlString = htmlString.replace( /&ccedil;/g , "ç")
htmlString = htmlString.replace( /&circ;/g , "^")
htmlString = htmlString.replace( /&tilde;/g , "~")
htmlString = htmlString.replace( /&167;/g , "º")
htmlString = htmlString.replace( /&166;/g , "ª");
htmlString = htmlString
return htmlString;

}
        function clickBtnDireito() {
           oncontextmenu='return false';
        }

        document.onmousedown=clickBtnDireito
        document.oncontextmenu = new Function("return false;")


        // Variaveis globais de substituicao do Portal Vida Funcional
        var glbMatPrinc = "";
        var glbMatSubst = ".F.";
        var glbDiaSubst = "9999";

        function carregaGlobais(tipoGlobal,indGlobal) {

            <% If HttpSession->cTypeRequest == "O" .Or. HttpSession->cTypeRequest == "P" .Or. HttpSession->cTypeRequest == "T" .Or. HttpSession->cTypeRequest == "R" %>
               new Ajax.Request( "W_PWSA536.APW",
                       {
                                method: 'get',
                                asynchronous: false,
                                parameters: {tipoVal: tipoGlobal, indice: indGlobal},
                                onFailure: function() { alert('Erro ao carregar global!'); return; },
                                onSuccess: function(transport) 
                                        { var response = transport.responseText || ""; 
                                          if (tipoGlobal=='2') {glbMatSubst = response}
                                          if (tipoGlobal=='3') {glbDiaSubst = response}
                                          if (tipoGlobal=='4') {glbMatPrinc = response}
                                          if (tipoGlobal=='5') {
                                                                 var resultado                            = response.split('*');
                                                                 document.formLicences.txtDiasCont.value  = resultado[0];
                                                                 document.formLicences.txtDiasCDesc.value = resultado[1];
                                                                 document.formLicences.txtDiasMin.value   = resultado[2];
                                                                 document.formLicences.txtDiasSubst.value = resultado[3];
                                                                 document.formLicences.txtDiasSDesc.value = resultado[4]; 
                                                                 document.formLicences.txtLicence.value   = resultado[5]; 
                                                                 document.formLicences.lLicSubst.value    = resultado[6]; 
                                                                    document.formLicences.txtDias01.value    = resultado[7];
                                                                     if(resultado[7] == 0)
                                                                        document.formLicences.txtDias01.disabled = false;
                                                                     else
                                                                        document.formLicences.txtDias01.disabled = true;
                                                               }
                                        }
                     }
               );
            <% EndIf %>

        }

		
		function BuscaDesc(cTabela,cIndice,cTipo,cChave,cRetorno,cOrigem,cDestino,cTitulo,aControle) {
			
			// Verifica se existe informacao para busca de descricao
			if (cChave!=''){
				var cURL = "W_PWSA135.APW";

				//Inicializa objeto destino da descricao	
				//Nao funciona a propriedade type para IE
				//document.getElementById(cDestino).type  = 'text';
				document.getElementById(cDestino).value = 'verificando...';
				
				new Ajax.Request(	cURL,
									{
									method: 'get',
									parameters: {cTab: cTabela, cInd: cIndice, cTip: cTipo, cChav: cChave, cRet: cRetorno},
									onFailure: function() {	alert('Erro ao carregar a pagina!'); return; },
									onSuccess: function(transport) { 
							            var response = transport.responseText || "";

										if (response == '') {
                                            //Inicializa parametro aControle
											for (var i=0; i<aControle.length; i++) {
												//alert(aControle[i][0] +' - ' +aControle[i][1])
												//*Opcao 0* limpa conteudo do campo escolhido no array
												if (aControle[i][1]=='0') {
													document.getElementById(aControle[i][0]).value = '';											
												}

												//*Opcao 1* Desabilita campo escolhido no array
												if (aControle[i][1]=='1') {
													document.getElementById(aControle[i][0]).disabled = 'true';											
												}
												
												//*Opcao 2* esconde campo escolhido no array
												if (aControle[i][1]=='2') {
													//document.getElementById(aControle[i][0]).type = 'hidden';											
												}												

												//*Opcao 3* aplica readonly campo escolhido no array
												if (aControle[i][1]=='3') {
													document.getElementById(aControle[i][0]).readonly = 'true';
												}
												
												//*Opcao 4* modifica status display imagem
												if (aControle[i][1]=='4') {
													document.getElementById(aControle[i][0]).style.display = 'none';
												}																																				
											}
												
											//Inicializa objetos de origem da busca  
											alert('*' +cTitulo +'* \n' +convertTagsHTMLCaracteres('<%=STR0028%>')); <!-- Descricao nao localizada! -->
											document.getElementById(cOrigem).value 		  = '';
											document.getElementById(cOrigem).focus();
											document.getElementById(cDestino).value  	  = '';
											return;
										}

										//Libera objetos pre-requisito
										for (var i=0; i<aControle.length; i++) {
											//*Opcao 1* disabled
											if (aControle[i][1]=='1') {
												document.getElementById(aControle[i][0]).disabled = '';											
											}
											
											//*Opcao 3* readonly
											if (aControle[i][1]=='3') {
												document.getElementById(aControle[i][0]).readonly = 'false';
											}																								
										
										}
                                        
										//Atualiza descricao para origem localizada
				 						document.getElementById(cDestino).value = response; }
									}
								);
			}
			else
			{
				document.getElementById(cDestino).value = '';			
				//Nao funciona a propriedade type para IE
				//document.getElementById(cDestino).type  = 'hidden';
			}

		}


		function DateMask(inputData, e){

			if(document.all)
		   	   var tecla = event.keyCode;    // Internet Explorer
			else 			
		 	   var tecla = e.which; 		 // Outros Browsers


			if(tecla >= 47&&tecla < 58){     // números de 0 a 9 e "/"
		       var data = inputData.value;
			
			if (data.length == 2 || data.length == 5){
				data += '/';
				inputData.value = data;}
			}else  
		        // Backspace, Delete e setas direcionais
		        //(para mover o cursor, apenas para FF)
		        if(tecla == 8 || tecla == 0) 
		           return true;
			    else
				   return false;
		   
            }
            
            
            function MesValid(campo,valor) {
                var mesAval=valor;
                if (mesAval==''){
                   return true;
                }
    
                if (valor.length < 2) {
                   alert("<%=STR0116%>"); <!-- Formato invalido! -->
                   campo.focus();
                   campo.value = "";
                   return false;
		}

                if (parseInt(mesAval) < 01 || parseInt(mesAval) > 12) {
                   alert("<%=STR0114%>"); <!-- Mes invalido! -->
                   campo.focus();
                   campo.value = "";
                   return false;
                }
            }
    
            function AnoValid(campo,valor,tipoComp) {
                var anoAval=valor;
                if (anoAval==''){
                   return true;
                }
    
                if (valor.length < 4) {
                   alert("<%=STR0116%>"); <!-- Formato invalido! -->
                   campo.focus();
                   campo.value = "";
                   return false;
                }
    
                if (tipoComp=='>=') {
                    if (parseInt(anoAval) < 2014) {
                       alert("<%=STR0115%>"); <!-- Ano invalido! -->
                       campo.focus();
                       campo.value = "";
                       return false;
                    }
                 }
            }
            
		function DateValid(campo,valor,tipoComp,tipoReq,valor2,valor3,valor4,valor5,valor6,valor7,valor8,DiasAnt) {
			var dataval=valor;
			var StrDays	   = "";

			var nDiaSolFer = '<%=HttpSession->nDiaSolFer%>';

			DiasAnt = typeof DiasAnt !== 'undefined' ? DiasAnt : 30;

			if (dataval=='' || dataval=='dd/mm/aaaa'){
			   return true;
			}

			var ardt   = new Array;
			var ExpReg = new RegExp("(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012])/[12][0-9]{3}");
			ardt       = dataval.split("/");
			erro       = false;
					
			if (dataval.search(ExpReg)==-1){
				erro = true;
			} else {
			     if (((ardt[1]==4)||(ardt[1]==6)||(ardt[1]==9)||(ardt[1]==11))&&(ardt[0]>30)) {
						erro = true;
				} else 
				    if (ardt[1]==2) {
						if ((ardt[0]>28)&&((ardt[2]%4)!=0))
							erro = true;
						if ((ardt[0]>29)&&((ardt[2]%4)==0))
							erro = true;
					}
					//Seta a variavel ddata para o formato de data, converte o inicio das férias para data.
					var ddata = new Date
					var ddia = (dataval.substring(0,2)); 
					var dmes = (dataval.substring(3,5) - 1); 
					var dano = (dataval.substring(6,10));
					
					ddata.setFullYear(dano,dmes,ddia); 
					
                    <% If !lRefTrab %>
    					//Verifica se a data é um Sábado
                        if (ddata.getDay () == 6) 
    						alert("<%=STR0130%>"); //As ferias do funcionario irao iniciar em um Sabado.
                        else{
    					    //Verifica se a data é um Domingo
                            if (ddata.getDay () == 0 )
    						    alert("<%=STR0131%>"); //As ferias do funcionario irao iniciar em um Domingo.
                        }
                    <% EndIf %>
			}
		   
			if (erro) {
				alert("\"" + valor + "\" "+ convertTagsHTMLCaracteres('<%=STR0018%>')); <!-- Data invalida! -->
				campo.focus();
				campo.value = "";
				return false;
			}

			if (tipoComp!=''){
				var today = new Date();
				var dd 	  = today.getDate();
				var mm 	  = today.getMonth()+1;
				var yyyy  = today.getFullYear();
		
				if (dd < 10){
					dd = "0" +dd;
				}
				if (mm < 10){
					mm = "0" +mm;
				}
				var data2 = dd +"/" +mm +"/" +yyyy; 
				var data1 = valor;
		
				if (tipoComp=='=')
				{
					if ( parseInt( data2.split( "/" )[2].toString() + data2.split( "/" )[1].toString() + data2.split( "/" )[0].toString() ) == parseInt( data1.split( "/" )[2].toString() + data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) )
					{
						alert(convertTagsHTMLCaracteres('<%=STR0019%>')); <!-- Data deve ser igual a data de hoje! -->
						campo.focus();
						campo.value = "";
                        return false;
					}
				}
				
				if (tipoComp=='>')
				{

					if ( parseInt( data2.split( "/" )[2].toString() + data2.split( "/" )[1].toString() + data2.split( "/" )[0].toString() ) >= parseInt( data1.split( "/" )[2].toString() + data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) )
					{
                            if (tipoReq=='P') 
  					         alert(convertTagsHTMLCaracteres('<%=STR0067%>')); <!-- A data deve ser maior que a data de hoje!  -->
                            
                        else {
							 StrDays = '<%=Alltrim(STR0020)%>'
							 StrDays =  StrDays.replace("30", DiasAnt.toString())
                             alert(convertTagsHTMLCaracteres(StrDays)); <!-- Solicitacao devera ser feita com 30 dias de Antecedencia e a data de solicitacao devera ser maior ou igual a esta data!  -->
                        }						

                        campo.focus();
						campo.value = "";
			        	return false;
					}

                    if (tipoReq=='P') {
                        // validando as datas iniciais dos periodos via ajax, em virtude
                        // de variavel de sessao nao possuir valores no momento da criação desse programa
                        new Ajax.Request(   "W_PWSA536.APW",
                            {
                                method: 'get',
                                parameters: {tipoVal: '1', dtPer: data1},
                                onFailure: function() { alert('Erro ao validar data!'); return; },
                                onSuccess: function(transport) 
                                      { 
                                          var response = transport.responseText || "";
                                          if (response == '*1') {
                                              alert(convertTagsHTMLCaracteres('<%=STR0085%>')); <!-- A data deve ser superior a data fim periodo aquisito!  -->
                                              campo.focus();
                                              campo.value = "";
                                              return false;
                                          } 
                                      }
                             }
                         );
                    }    

				}
		
				if (tipoComp=='<' && tipoReq != "8")
				{
					if ( parseInt( data2.split( "/" )[2].toString() + data2.split( "/" )[1].toString() + data2.split( "/" )[0].toString() ) < parseInt( data1.split( "/" )[2].toString() + data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) )
					{
						alert(convertTagsHTMLCaracteres('<%=STR0021%>')); <!--Data deve ser menor que a data de hoje! -->
						campo.focus();
						campo.value = "";
			        	return false;
					}
				}

                if (tipoComp=='>=')
                {
                    if (tipoReq=='Q' || tipoReq=='R') {
                        if ( parseInt( data2.split( "/" )[2].toString() + data2.split( "/" )[1].toString() + data2.split( "/" )[0].toString() ) > parseInt( data1.split( "/" )[2].toString() + data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) )
                        {
                            alert(convertTagsHTMLCaracteres('<%=STR0088%>')); <!--Data nao pode menor que a data de hoje! -->
                            campo.focus();
                            campo.value = "";
                            return false;
                        }
                    }
    
                        if (tipoReq=='R') {
                            new Ajax.Request( "W_PWSA536.APW",
                               {
                                   method: 'get',
                                   parameters: {tipoVal: '1', dtPer: data1, },
                                   onFailure: function() { alert('Erro ao validar data!'); return; },
                                   onSuccess: function(transport) 
                                         { 
                                            var response = transport.responseText || "";
                                            if (response == '*1') {
                                                alert('Data da programacao deve ser superior a data final do Periodo aquisitivo!'); <!-- Data da programacao deve ser superior a data final do Periodo aquisitivo!  -->
                                                campo.focus();
                                                campo.value = "";
                                                return false;
                                             } 
                                         }
                }
                            );
                        }

			}
    
                }
			if (tipoReq!=''){
				if (tipoReq=='B')
				{
					if (valor3 != '') {
						var dValor3 = new Date(valor3.split( "/" )[2].toString() + "/" + valor3.split( "/" )[1].toString() + "/" + valor3.split( "/" )[0].toString());
						dValor3.setDate(dValor3.getDate() - nDiaSolFer);
						valor3 = dValor3.toLocaleString('pt-br').substr(0, 10);
						if ( parseInt( data1.split( "/" )[2].toString() + data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) < parseInt( valor3.split( "/" )[2].toString() + valor3.split( "/" )[1].toString() + valor3.split( "/" )[0].toString() ) || parseInt( data1.split( "/" )[2].toString() + data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) > parseInt( valor4.split( "/" )[2].toString() + valor4.split( "/" )[1].toString() + valor4.split( "/" )[0].toString() ) )
						{
							alert(convertTagsHTMLCaracteres('<%=STR0062%>') + valor3 + convertTagsHTMLCaracteres('<%=STR0063%>') + valor4); <!--A data de início das férias deve estar compreendida entre dd/mm/aaaa e dd/mm/aaaa-->
							campo.focus();
							campo.value = "";
				        	return false;
						}				
					}
					if ( parseInt( data1.split( "/" )[2].toString() + data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) < parseInt( valor2.split( "/" )[2].toString() + valor2.split( "/" )[1].toString() + valor2.split( "/" )[0].toString() ) )
					{
						StrDays = '<%=Alltrim(STR0058)%>'
						StrDays =  StrDays.replace("30", DiasAnt.toString())
						alert(convertTagsHTMLCaracteres(StrDays) + " " + valor2); <!--As férias devem ser solicitadas com pelo menos 30 dias de antecedência. Desta forma, a data de início deve ser maior ou igual a dd/mm/aaaa-->
						campo.focus();
						campo.value = "";
			        	return false;
					}
					if (valor5 != '') {
						if ( parseInt( data1.split( "/" )[2].toString() + data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) <= parseInt( valor5.split( "/" )[2].toString() + valor5.split( "/" )[1].toString() + valor5.split( "/" )[0].toString() ) )
						{
							alert('<%=STR0127%>' + valor5); <!--A data inicial não pode ser igual ou inferior ao da primeira programação: dd/mm/aaaa-->
							campo.focus();
							campo.value = "";
				        	return false;
						}					
						if ( parseInt( data1.split( "/" )[2].toString() + data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) <= parseInt( valor6.split( "/" )[2].toString() + valor6.split( "/" )[1].toString() + valor6.split( "/" )[0].toString() ) )
						{
							alert('<%=STR0128%>' + valor6 ); <!--A data inicial deve ser superior ao final da primeira programação: dd/mm/aaaa-->
							campo.focus();
							campo.value = "";
				        	return false;
						}	
					}
					if (valor7 != '') {
						if ( parseInt( data1.split( "/" )[2].toString() + data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) <= parseInt( valor8.split( "/" )[2].toString() + valor8.split( "/" )[1].toString() + valor8.split( "/" )[0].toString() ) )
						{
							alert('<%=STR0129%>' + valor8 ); <!--A data inicial deve ser superior ao final da segunda programação: dd/mm/aaaa-->
							campo.focus();
							campo.value = "";
				        	return false;
						}					
					}
					//Reforma Trabalhista
                        
					if (valor != null){
						var oParams = {};
						oParams.nIndice = <%=nIndice%>;
						oParams.valor   = valor;
						new Ajax.Request( "W_PWSA100B.APW",
                         {
                             method: 'get',
                             parameters: oParams,
                             onFailure: function() { alert('Erro ao validar data!'); return; },
                             onSuccess: function(transport) 
                                   { 
                                       var response = transport.responseText || "";
                                       if (response != '') {
                                        <!-- Mensagem retornada pelo webservice!  -->
                                           if(!confirm(response + ' <%=STR0135%>')){
	                                           campo.focus();
	                                           campo.value = '';
	                                           return false;
                                           }
                                       }
                                   }
                          }
                      );
					}
				}
				if (tipoReq=='8')
				{
					if ( parseInt( data1.split( "/" )[2].toString() + data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) < parseInt( valor2.split( "/" )[2].toString() + valor2.split( "/" )[1].toString() + valor2.split( "/" )[0].toString() ) )
					{
						alert(convertTagsHTMLCaracteres('<%=STR0057%>') + valor2); <!--Data inicial refere-se a um período de apontamento que já foi encerrado. Data deve ser maior ou igual a -->
						campo.focus();
						campo.value = "";
			        	return false;
					}
				}
			}

 
			return true;
		}
        
        function vldDias(dtIni, dtFim, foco){
            var data1 = Date.parse(dtIni.split("/")[2].toString() + "-" + dtIni.split("/")[1].toString() + "-" + dtIni.split("/")[0].toString()); 
			var data2 = Date.parse(dtFim.split("/")[2].toString() + "-" + dtFim.split("/")[1].toString() + "-" + dtFim.split("/")[0].toString()) ;

            var diffMilissegundos = data2 - data1;
            var diffSegundos = diffMilissegundos / 1000;
            var diffMinutos = diffSegundos / 60;
            var diffHoras = diffMinutos / 60;
            var diffDias = diffHoras / 24;

            if(diffDias  > <%=HttpSession->DLIMABO%>){
                alert(convertTagsHTMLCaracteres('<%=STR0136 + Alltrim(cValToChar(HttpSession->DLIMABO)) + STR0137%>'));
                document.getElementById(foco).focus();
                return;
            }
            
            return;
        }
        
        function dataComp(dt1,dt2,regra,foco) {
            if (dt1 == '' || dt2 == '' || regra == '') {
	            return;
	        }
            
			var data1 = parseInt(dt1.split("/")[2].toString() + dt1.split("/")[1].toString() + dt1.split("/")[0].toString());
			var data2 = parseInt(dt2.split("/")[2].toString() + dt2.split("/")[1].toString() + dt2.split("/")[0].toString());
 
            if (regra == 'A<B') {
				if (data1 > data2) {
		            alert(convertTagsHTMLCaracteres('<%=STR0031%>')); <!-- Data final deve ser maior ou igual que a data inicial! -->
					document.getElementById(foco).focus();
			        return;
				}            
            }
            if (regra == 'A>B') {
				if (data1 < data2) {
		            alert(convertTagsHTMLCaracteres('<%=STR0032%>')); <!-- Data final deve ser menor ou igual que a data inicial! -->
					document.getElementById(foco).focus();
			        return;
				}            
            }
            if (regra == 'A=B') {
				if (data1 != data2) {
		            alert(convertTagsHTMLCaracteres('<%=STR0033%>')); <!-- As datas devem ser iguais! -->
					document.getElementById(foco).focus();
			        return;
				}            
            }
            return;

	    }
	
            <!-- Função para apresentar o campo substituto no fonte PWSA571.APH -->
            function vldSubst(diasInfor, diasSubst){
                if (parseInt(diasInfor) >= parseInt(diasSubst)){
                    document.getElementById('Subst1').style.display = "";
                    document.getElementById('txtMatSubst1').focus();
                }else{
                    document.getElementById('Subst1').style.display = "none";
                    document.getElementById('txtobs').focus();
                }
                return;
            }

        function NumberValid(campo,valor,tipoComp,valorComp,tipoSolic) {
            var d            = document;
            var trSubst1     = d.getElementById('Subst1');
            var matSubst     = glbMatSubst;
            var diaSubst     = parseInt(glbDiaSubst);

            <!-- Licenca e Afastamento -->
            if (tipoSolic=='R') {
                 diaSubst = parseInt(document.formLicences.txtDiasSubst.value); 
                 licSubst = document.formLicences.lLicSubst.value

                 if (matSubst == '.T.' && licSubst == '.F.') {
                    matSubst = '.F.'
                 }
    
    
            } 
            <!-- Fim -->

                if (parseInt(valor) == 0 && tipoSolic !='R')
            {
               alert(convertTagsHTMLCaracteres('<%=STR0022%>')); <!-- Quantidade de dias invalido -->
               campo.focus();
               campo.value = "";
               return false;
            }

            if (tipoComp=='>')
            {
               if (parseInt(valor) > parseInt(valorComp)  ){
                    alert(convertTagsHTMLCaracteres('<%=STR0084%>') +' (' +valorComp +')' ); <!-- Esse valor não pode ser superior a: -->
                    campo.focus();
                    campo.value = "";
                    return false;
               } 
            }

            if (tipoComp=='<')
            {
                    if(tipoSolic=='R'){
                          if (parseInt(valor) > 0 )
                        {
               if (parseInt(valor) < parseInt(valorComp)  ){
                    alert(convertTagsHTMLCaracteres('<%=STR0090%>') +' (' +valorComp +')' ); <!-- Esse valor não pode ser inferior a: -->
                    campo.focus();
                    campo.value = "";
                    return false;
               } 
            }
                }
                   else
                   {
                           if (parseInt(valor) < parseInt(valorComp)  ){
                               alert('<%=STR0090%>' +' (' +valorComp +')' ); <!-- Esse valor não pode ser inferior a: -->
                               campo.focus();
                               campo.value = "";
                               return false;
                }
                   }
                }


            try{
                if (matSubst == '.T.' && valor >= diaSubst) {
                    trSubst1.style.display = '';
                } else {       
                    trSubst1.style.display = 'none';
                }
            } catch (ex) { }
        }


		function numdias(mes,ano) {
		    if((mes<8 && mes%2==1) || (mes>7 && mes%2==0)) return 31;
			   if(mes!=2)   return 30;
			   if(ano%4==0) return 29;
			   return 28;
		}

        function somaDiasGSP(data, dias, origem, diasmenos, tipoSolic, tipoCalcDia) {
            var d            = document;
            var btnVld1      = d.getElementById('btnVld1');
            var btnVld2      = d.getElementById('btnVld2');
            var matSubst1    = d.getElementById('txtMatSubst1');
            var matSubst2    = d.getElementById('txtMatSubst2');
            var matSubst     = glbMatSubst;
            var diaSubst     = parseInt(glbDiaSubst);

                if (dias=='') {
                    return false;
                }
                if (dias=='0') {
                    return false;
                }
     
                // Valida dias para o periodo aquisito selecionado - Saldo de Dias
                if (tipoSolic=='T') {
    
                   if ( parseInt(dias) > parseInt(d.getElementById('cQtdSaldo').value) ) {
                      alert("Esse valor nao pode ser superior a:  " +d.getElementById('cQtdSaldo').value);
                      d.getElementById('txtDias01').focus();
                      d.getElementById('txtDias01').value = '';
                      return false;
                   }
    
                }
    
    
            if (data=='' || data=='dd/mm/aaaa') {
                return false;
            }
                
                // Valida indenizacao - Programacao de ferias
                if (tipoSolic=='P1') {
                    var progID  = d.getElementById('opcaoS107');
                    var diasInd = progID.value.substr(4,2);  //Dias de Abono
    
                    if (origem=='1') {
                       var dataProg = d.getElementById('txtDtIni01');
                    }
                    else {
                       var dataProg = d.getElementById('txtDtIni01');
                    }
    
                     //Avalia indenizacao, caso selecionado no option
                     if (parseInt(diasInd) > 0) {
                         new Ajax.Request( "W_PWSA537.APW",
                             {
                                 method: 'get',
                                 parameters: {DiasIndeniz: diasInd, DataInicio: data},
                                 onFailure: function() { alert('Erro ao validar indenizacao!'); return; },
                                 onSuccess: function(transport) 
                                       { 
                                           var response = transport.responseText || "";
                                           if (response != '') {
                                               alert(response); <!-- Mensagem retornada pelo webservice!  -->
                                               dataProg.focus();
                                               dataProg.value = '';
                                               return false;
                                           } 
                                       }
                              }
                          );
                     }    
    
                }
    
            if (dias=='') {
                return false;
            }

            if (diasmenos=='') {
                var menosDias = 0;
            } else {
                var menosDias = parseInt(diasmenos);
            }

            if (matSubst == '.T.') {  
                if (origem=='1') {
                    matSubst1.value       = '';
                    matSubst1.disabled    = 'true';
                    btnVld1.style.display = '';
                }
                else {
                    matSubst2.value       = '';
                    matSubst2.disabled    = 'true';
                    btnVld2.style.display = '';
                }
            }


            // Calcula data final com dias uteis
            // Adaptado apenas para a solicitacao de licenca e afastamento
            if (tipoCalcDia=='1'){
                document.formLicences.txtDtFim01.value = 'buscando...';

                var cURL = "W_PWSA104.APW";

                new Ajax.Request(   cURL,
                                    {
                                    method: 'get',
                                    parameters: {dtini: data, qtdedias: dias},
                                    onFailure: function() { alert('Erro ao carregar a pagina!'); return; },
                                    onSuccess: function(transport) 
                                       { 
                                          var response = transport.responseText || "";
                                          document.formLicences.txtDtFim01.value = response; 
                                       }
                                    }
                                );

                 if (matSubst == '.T.') {  
                    matSubst1.disabled = '';
                    btnVld1.disabled   = '';
                 }

                return;    
            }


            data=data.split('/');

            diafuturo=parseInt(data[0])+parseInt(dias)-menosDias;
            mes=parseInt(data[1]);
            ano=parseInt(data[2]);

            while(diafuturo>numdias(mes,ano)) {
                  diafuturo-=numdias(mes,ano);
                  mes++;
                if(mes>12) {
                   mes=1;
                   ano++;
                }
            }

            if(diafuturo<10) diafuturo='0'+diafuturo;
            if(mes<10) mes='0'+mes;

            if (origem=='1') {

                if (tipoSolic=='R') {
                    document.formLicences.txtDtFim01.value = diafuturo+"/"+mes+"/"+ano;
                } 
                else {
                    document.formFerias.txtDtFim01.value   = diafuturo+"/"+mes+"/"+ano;
                }

                 if (matSubst == '.T.') {  
                    matSubst1.disabled = '';
                    btnVld1.disabled   = '';
                 }
             }
             else {

                if (tipoSolic=='R') {
                    document.formLicences.txtDtFim02.value = diafuturo+"/"+mes+"/"+ano;
                } 
                else {
                    document.formFerias.txtDtFim02.value   = diafuturo+"/"+mes+"/"+ano;
                }


                 if (matSubst == '.T.') {  
                    matSubst2.disabled = '';
                    btnVld2.disabled   = '';
                 }
             }

            return;
        }
        
        
        function HabilitaAbono(tpCalcDia){
            if(document.formFerias.chkAbono.checked  == false){
                document.formFerias.txtabonopec.value = "";
                document.formFerias.txtabonopec.disabled = true;
                somaDias( '', document.formFerias.txtdtInicial.value, document.formFerias.txtdias.value, '', tpCalcDia, '', '', '', '', false, '', '', '', true );
            }else{
                document.formFerias.txtabonopec.disabled = false;
            }
        }
        
        function somaDias(campo, txtData, diasQtd, diasTot, tipoCalcDia, cDiasFe, nIdade, nDias1Prog, nDias2Prog, lCommit, nTotPer, dataAtu, dataPerm, desabilitaCheckAbono) {
            var nDiaSolFer = '<%=HttpSession->nDiaSolFer%>';
            if ( diasQtd == '' || diasQtd == 'NaN') {
                return;
            }
            else {
                if (desabilitaCheckAbono != true) {
                    if ( isNaN(diasQtd) ) {
                        alert(convertTagsHTMLCaracteres('<%=STR0060%>')); <!-- Informe apenas números! -->
                        campo.focus();
                        campo.value = "";
                        return false;
                    }
                    if ( campo.name != 'txtabonopec' ) {
                        if (parseInt(diasQtd) >= parseInt(diasTot)) {
                            document.formFerias.chkAbono.checked  = false;
                            document.formFerias.chkAbono.disabled = true;
                            document.formFerias.txtabonopec.value = "";
                            document.formFerias.txtabonopec.disabled = true;
                        }
                        if (parseInt(diasQtd) < parseInt(diasTot)) {
                            document.formFerias.chkAbono.disabled = false;
                        }
                    }
                    
                    var dDataAtu = new Date(dataAtu.split( "/" )[2].toString() + "/" + dataAtu.split( "/" )[1].toString() + "/" + dataAtu.split( "/" )[0].toString());
                    dDataAtu.setDate(dDataAtu.getDate());
                    dataAtu = dDataAtu.toLocaleString('pt-br').substr(0, 10);

                    if ( dataPerm != '' ) 
                    {
                        var dDataPerm = new Date(dataPerm.split( "/" )[2].toString() + "/" + dataPerm.split( "/" )[1].toString() + "/" + dataPerm.split( "/" )[0].toString());
                        dDataPerm.setDate(dDataPerm.getDate() - nDiaSolFer);
                        dataPerm = dDataPerm.toLocaleString('pt-br').substr(0, 10);
                    }

                    if ( dataPerm != '' ) 
                    {   
                        if ( parseInt( dataAtu.split( "/" )[2].toString() + dataAtu.split( "/" )[1].toString() + dataAtu.split( "/" )[0].toString() ) < parseInt( dataPerm.split( "/" )[2].toString() + dataPerm.split( "/" )[1].toString() + dataPerm.split( "/" )[0].toString() ) || parseInt( txtData.split( "/" )[2].toString() + txtData.split( "/" )[1].toString() + txtData.split( "/" )[0].toString() ) >= parseInt( dataPerm.split( "/" )[2].toString() + dataPerm.split( "/" )[1].toString() + dataPerm.split( "/" )[0].toString() ))
                        {
                            if ( parseInt(diasQtd) > parseInt(nTotPer) || parseInt(diasQtd) <= 0 || parseInt(diasQtd) > 30 ) {
                                alert(convertTagsHTMLCaracteres('<%=STR0140%>')); <!-- Quantidade de dias inválido. Verifique a existência de programação de férias através do menu "Aviso de Férias". A quantidade da Solicitação não pode ser maior que os (Dias de Direito (-) Programações de Férias (-) Abono Pecun.). -->
                                campo.focus();
                                campo.value = "";
                                return false;
                            }
                        }
                    } else {
                        if ( parseInt(diasQtd) > parseInt(diasTot) || parseInt(diasQtd) <= 0 || parseInt(diasQtd) > 30 ) {
                            alert(convertTagsHTMLCaracteres('<%=STR0140%>')); <!-- Quantidade de dias inválido. Verifique a existência de programação de férias através do menu "Aviso de Férias". A quantidade da Solicitação não pode ser maior que os (Dias de Direito (-) Programações de Férias (-) Abono Pecun.). -->
                            campo.focus();
                            campo.value = "";
                            return false;
                        }
                    }
                    <% If !lRefTrab %>
                        if ( ( parseInt(nIdade) < 18 || parseInt(nIdade) > 50 ) && parseInt(diasQtd) < parseInt(diasTot)  ) {
                            alert(convertTagsHTMLCaracteres('<%=STR0132%>')); <!-- Funcionário(a) menor de 18 anos ou maior que 50 anos deve tirar férias em período único. -->
                        }
                    <% Else %>
                        if ( ( parseInt(nDias1Prog) > 0 && parseInt(nDias1Prog) < 14 && parseInt(nDias2Prog) == 0 && parseInt(diasQtd) < 14 && (parseInt(diasTot) - parseInt(diasQtd)) < 14 ) ||
                            ( parseInt(nDias1Prog) > 0 && parseInt(nDias1Prog) < 14 && parseInt(nDias2Prog) > 0 && parseInt(nDias2Prog) < 14 && parseInt(diasQtd) < 14 ) ||
                            ( parseInt(nDias1Prog) > 0 && parseInt(nDias1Prog) < 14 && parseInt(nDias2Prog) == 0 && parseInt(diasQtd) < 14 && (parseInt(diasTot) - parseInt(diasQtd) - parseInt(nDias1Prog)) < 14 )) {
                            alert(convertTagsHTMLCaracteres('<%=STR0134%>')); <!-- Ao menos um dos periodos de ferias deve ser igual ou superior a 14 dias corridos. -->
                            campo.focus();
                            campo.value = "";
                            return false;
                        }
                        if (lCommit == true){
                            var nDiasAbono 
                            if(document.formFerias.txtabonopec.value == ""){
                                nDiasAbono = 0;
                            }else{
                                nDiasAbono = parseInt(document.formFerias.txtabonopec.value);
                            }
                            if( ((parseInt(diasTot) - parseInt(diasQtd) - nDiasAbono) > 0) && ((parseInt(diasTot) - parseInt(diasQtd) - nDiasAbono) < 5)){
                                alert(convertTagsHTMLCaracteres( '<%=STR0139%>' )); <!-- O saldo de férias que restará é inferior a 5 dias. Conforme Artigo 134 parágrafo 1º da CLT, as férias não devem ser concedidas com menos de 5 dias de gozo.-->
                                campo.focus();
                                return false;
                            }
                            if(document.formFerias.chkAbono.checked == true && nDiasAbono < 1 ){
                                alert(convertTagsHTMLCaracteres( '<%=STR0144%>' )); <!-- Informe a quantidade de dias de abono.-->
                                document.formFerias.txtabonopec.focus();
                                return false;                           
                            }
                        }
                        
                    <% EndIf %>
                    if ( parseInt(diasQtd) < parseInt(cDiasFe) ) {
                        alert(convertTagsHTMLCaracteres('<%=STR0061%>')+parseInt(cDiasFe)); <!-- Numero de dias de férias deve ser maior ou igual a _ -->
                        campo.focus();
                        campo.value = "";
                        return false;
                    }
                }
            }
            if (document.formFerias.txtdtInicial.value == '' || document.formFerias.txtdtInicial.value == 'dd/mm/aaaa') {
                document.formFerias.txtdtFinal.value = '';
                return;
            }

            if (campo.name == 'txtabonopec') {            
                return;
            }

            if (tipoCalcDia==''){
                return;
            }
       
            
            // Calcula data final com dias uteis
            if (tipoCalcDia=='1'){
                document.formFerias.txtdtFinal.value = 'buscando...';

                var cURL = "W_PWSA104.APW";

                new Ajax.Request(   cURL,
                                    {
                                    method: 'get',
                                    parameters: {dtini: txtData, qtdedias: diasQtd},
                                    onFailure: function() { alert('Erro ao carregar a pagina!'); return; },
                                    onSuccess: function(transport) { 
                                          var response = transport.responseText || "";
                                          document.formFerias.txtdtFinal.value = response; }
                                    }
                                );
                return;    
            }

            // Calcula data final com dias corridos
            if (tipoCalcDia=='2'){
                // Criado obj Date, pegar o campo txtData e aplicar o split("/") e depois reverse() 
                // para deixar ela em padrão americanos YYYY/MM/DD, em seguida eu coloco por barras "/"
                // com o join, depois em milisegundos multiplicar um dia (86400000 milisegundos)
                // pelo numero de dias que deseja somar.
                var DataFinal;
                var d = new Date();
                
                //Diminui 1 da qtda de dias, para considerar a data inicial
                d.setTime(Date.parse(txtData.split("/").reverse().join("/")))		
				d.setDate(d.getDate() + (parseInt(diasQtd)-1))		
    
                // Comparar o dia no objeto d.getDate().            
                if(d.getDate() < 10) {
                  // Se o dia for menor que 10 eu coloca o zero no inicio, transformar em string
                  // com o toString() para o zero ser reconhecido como uma string e não como um número.
                   DataFinal = "0"+d.getDate().toString();
                }
                else {    
                   DataFinal = d.getDate().toString();    
                }
            
                // Aqui, ja com a soma do mes, vejo se e menor do que 10
                // se for coloco o zero ou não.
                if((d.getMonth()+1) < 10){
                    DataFinal += "/0"+(d.getMonth()+1).toString()+"/"+d.getFullYear().toString();
                }
                else {
                    DataFinal += "/"+((d.getMonth()+1).toString())+"/"+d.getFullYear().toString();
                }
            
                document.formFerias.txtdtFinal.value = DataFinal;
                return;    
            }
            
        }
		
		function HoraMask(inputHora, e){
			if(document.all)
		   	   var tecla = event.keyCode;    // Internet Explorer
			else 			
		 	   var tecla = e.which; 		 // Outros Browsers

			if(tecla >= 47&&tecla < 58){     // números de 0 a 9 e "/"
		       var hora = inputHora.value;
			
			if (hora.length == 2){
				hora += ':';
				inputHora.value = hora;}
			}else  
		        // Backspace, Delete e setas direcionais
		        //(para mover o cursor, apenas para FF)
		        if(tecla == 8 || tecla == 0) 
		           return true;
			    else
				   return false;
		}
		
		function HoraValid(HoraMinuto)
		{ 
			if (HoraMinuto == "") { 
				return;
			}

			hrs = (HoraMinuto.value.substring(0,2)); 
			min = (HoraMinuto.value.substring(3,5)); 
               
			if ((hrs < 00 ) || (hrs > 23) || ( min < 00) ||( min > 59)){ 
				alert(convertTagsHTMLCaracteres('<%=STR0030%>')); <!-- Hora Invalida! -->
				HoraMinuto.focus();
			} 
		} 

		// construindo o calendário
            function popdate(obj,div,tam,ddd,foc) {

		if (ddd=="dd/mm/aaaa"){ddd=""}	

		if (ddd) {
           day = ""
           mmonth = ""
           ano = ""
           c = 1
           char = ""
             for (s=0;s<parseInt(ddd.length);s++)
              {
                 char = ddd.substr(s,1)
                 if (char == "/") 
                 {
                     c++; 
                     s++; 
                     char = ddd.substr(s,1);
                 }
                 if (c==1) day    += char
                 if (c==2) mmonth += char
                 if (c==3) ano    += char
             }
             ddd = mmonth + "/" + day + "/" + ano
          }

    if(!ddd) {today = new Date()} else {today = new Date(ddd)}
    date_Form = eval (obj)
    if (date_Form.value == "") { date_Form = new Date()} else {date_Form = new Date(date_Form.value)}
  
    ano = today.getFullYear();
    mmonth = today.getMonth ();
    day = today.toString ().substr (8,2)
  
    umonth = new Array ("Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro")
    days_Feb = (!(ano % 4) ? 29 : 28)
    days = new Array (31, days_Feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)

    if ((mmonth < 0) || (mmonth > 11))  alert(mmonth)
    if ((mmonth - 1) == -1) {month_prior = 11; year_prior = ano - 1} else {month_prior = mmonth - 1; year_prior = ano}
    if ((mmonth + 1) == 12) {month_next  = 0;  year_next  = ano + 1} else {month_next  = mmonth + 1; year_next  = ano}
    txt  = "<table bgcolor='#efefff' style='border:solid #A0BFD3; border-width:2' cellspacing='0' cellpadding='3' border='0' width='"+tam+"' height='"+tam*1.1 +"'>"
    txt += "<tr bgcolor='#FFFFFF'><td colspan='7' align='center'><table border='0' cellpadding='0' width='100%' bgcolor='#FFFFFF'><tr>"
                txt += "<td width=20% align=center><a href=javascript:popdate('"+obj+"','"+div+"','"+tam+"','"+((mmonth+1).toString() +"/01/"+(ano-1).toString())+"','"+foc+"') class='Cabecalho_Calendario' title='Ano Anterior'><<</a></td>"
            txt += "<td width=20% align=center><a href=javascript:popdate('"+obj+"','"+div+"','"+tam+"','"+( "01/" + (month_prior+1).toString() + "/" + year_prior.toString())+"','"+foc+"') class='Cabecalho_Calendario' title='Mês Anterior'><</a></td>"
            txt += "<td width=20% align=center><a href=javascript:popdate('"+obj+"','"+div+"','"+tam+"','"+( "01/" + (month_next+1).toString()  + "/" + year_next.toString())+"','"+foc+"') class='Cabecalho_Calendario' title='Próximo Mês'>></a></td>"
            txt += "<td width=20% align=center><a href=javascript:popdate('"+obj+"','"+div+"','"+tam+"','"+((mmonth+1).toString() +"/01/"+(ano+1).toString())+"','"+foc+"') class='Cabecalho_Calendario' title='Próximo Ano'>>></a></td>"
    txt += "<td width=20% align=right><a href=javascript:force_close('"+div+"') class='Cabecalho_Calendario' title='Fechar Calendário'><b>X</b></a></td></tr></table></td></tr>"
    txt += "<tr><td colspan='7' align='right' bgcolor='#ccccff' class='mes'><a href=javascript:pop_year('"+obj+"','"+div+"','"+tam+"','" + (mmonth+1) + "') class='mes'>" + ano.toString() + "</a>"
    txt += " <a href=javascript:pop_month('"+obj+"','"+div+"','"+tam+"','" + ano + "') class='mes'>" + umonth[mmonth] + "</a> <div id='popd' style='position:absolute'></div></td></tr>"
    txt += "<tr bgcolor='#A7C4D6'><td width='14%' class='dia' align=center><b>Dom</b></td><td width='14%' class='dia' align=center><b>Seg</b></td><td width='14%' class='dia' align=center><b>Ter</b></td><td width='14%' class='dia' align=center><b>Qua</b></td><td width='14%' class='dia' align=center><b>Qui</b></td><td width='14%' class='dia' align=center><b>Sex<b></td><td width='14%' class='dia' align=center><b>Sab</b></td></tr>"
    today1 = new Date((mmonth+1).toString() +"/01/"+ano.toString());
    diainicio = today1.getDay () + 1;
    week = d = 1
    start = false;

    for (n=1;n<= 42;n++) 
    {
        if (week == 1)  txt += "<tr bgcolor='#efefff' align=center>"
        if (week==diainicio) {start = true}
        if (d > days[mmonth]) {start=false}
        if (start) 
        {
            dat = new Date((mmonth+1).toString() + "/" + d + "/" + ano.toString())
            day_dat   = dat.toString().substr(0,10)
            day_today  = date_Form.toString().substr(0,10)
            year_dat  = dat.getFullYear ()
            year_today = date_Form.getFullYear ()
            colorcell = ((day_dat == day_today) && (year_dat == year_today) ? " bgcolor='#FFCC00' " : "" )
                txt += "<td"+colorcell+" align=center><a href=javascript:block('"+  d + "/" + (mmonth+1).toString() + "/" + ano.toString() +"','"+ obj +"','" + div +"','" + foc +"') class='data'>"+ d.toString() + "</a></td>"
            d ++ 
        } 
        else 
        { 
            txt += "<td class='data' align=center> </td>"
        }
        week ++
        if (week == 8) 
        { 
            week = 1; txt += "</tr>"} 
        }
        txt += "</table>"
        div2 = eval (div)
        div2.innerHTML = txt 
		}
  

		// função para exibir a janela com os meses
		function pop_month(obj, div, tam, ano)
		{
     		txt  = "<table bgcolor='#CCCCFF' border='0' width=80>"
  	    	for (n = 0; n < 12; n++) { txt += "<tr><td align=center><a href=javascript:popdate('"+obj+"','"+div+"','"+tam+"','"+("01/" + (n+1).toString() + "/" + ano.toString())+"')>" + umonth[n] +"</a></td></tr>" }
    		txt += "</table>"
    		popd.innerHTML = txt
		}

		// função para exibir a janela com os anos
		function pop_year(obj, div, tam, umonth)
		{
	        txt  = "<table bgcolor='#CCCCFF' border='0' width=160>"
    		l = 1
		    for (n=2000; n<2021; n++)
    		  {  if (l == 1) txt += "<tr>"
        		 txt += "<td align=center><a href=javascript:popdate('"+obj+"','"+div+"','"+tam+"','"+(umonth.toString () +"/01/" + n) +"')>" + n + "</a></td>"
		         l++
        		 if (l == 4) 
            		{txt += "</tr>"; l = 1 } 
     		  }
    		txt += "</tr></table>"
	        popd.innerHTML = txt 
	   }


		// função para fechar o calendário
		function force_close(div) 
    		{ div2 = eval (div); div2.innerHTML = ''}
    
		// funcao para fechar o calendário e setar a data no campo de data associado
            function block(data, obj, div, foc)
		{ 
         force_close (div);

		 var data_quebrada = data.split('/');
         obj2 = eval(obj);

    	dia = (data_quebrada[0] < 10) ? '0' + data_quebrada[0] : data_quebrada[0];
	    mes = (data_quebrada[1] < 10) ? '0' + data_quebrada[1] : data_quebrada[1];

		obj2.value = dia+'/'+mes+'/'+data_quebrada[2];

            }

    
		function GoToPage(ev, nPageType) {
			var cURL
			var cDestination
		
			if (ev) {
				if (ev.type == "keypress") {
					var keyCode = window.event ? ev.keyCode : ev.which;
				
					if (keyCode != 13)
						return true;
				
					if (nPage > nTotalPage) {
						alert(convertTagsHTMLCaracteres('<%=STR0005%>')); <!-- Pagina Invalida! -->
						return false;
					}
				}
			}
		
			if (nPageType == 1) {
				cURL = 'W_PWSA102A.APW';
				cDestination = 'divCabecalho';
			}
			else {
				cURL = '<%=cPageRequest%>';
				cDestination = 'divSolicitacao';
			}	

			var oParams = {};
		
			oParams.nIndice       = <%=nIndice%>;
			oParams.nIndiceSolic  = <%=nIndiceSolic%>;
			oParams.nIndiceTransf = <%=nIndiceTransf%>;
			oParams.nOperacao     = <%=nOperacao%>;
		
			new Ajax.Updater(	cDestination, 
								cURL,
									{
										method: 'get',     
										evalScripts: true,
										parameters: oParams
									}
								);
			return false;
		}
		
		function SugereSalario(that, parSal){
			
            var percentual = that.value.replace(',','.');
            var salario = String(parSal);
            
			percentual = parseFloat(percentual); 
			salario    = parseFloat(salario);
			
			var calculo = ((percentual/100) * salario);
			
			//calculo = calculo.replace(',','.');
			calculo = calculo + salario;
			document.formSal.txtsalario.value = float2moeda(roundNumber(calculo));
			
			if(isNaN(percentual))
				document.formSal.txtsalario.value = 0;
		}
                
		function VerificaSalario(that, parSal){
			
            var salNovo  = that.value.replace('.', '');
			var salNovo  = salNovo.replace(',', '.');
            var salAtual = String(parSal);
            var percentual;
            
			salNovo  = parseFloat(salNovo); 
			salAtual = parseFloat(salAtual);
            
			if("<%=HttpSession->AltFSal%>".toUpperCase() == ".T."){
                if (salNovo < salAtual) {
                    alert(convertTagsHTMLCaracteres('<%=STR0138%>')); <!-- O novo salário não pode ser menor que o Atual. -->
                    that.focus();
                    return false;
                }
            }else{
                if (salNovo > 0) {
                    if (salAtual >= salNovo) {
                        alert(convertTagsHTMLCaracteres('<%=STR0045%>')); <!-- O novo salario deve ser maior que o Atual! -->
                        that.focus();
                        return false;
                    } else {
                        percentual = salNovo/salAtual;
                        percentual = roundNumber( ( percentual - 1 ) * 100 );
                        document.formSal.txtpctaumento.value = percentual;
                    }	
                }
            }
            
			document.formSal.txtobs.focus();
			
        }
        
		function roundNumber (rnum) 
		{
		   return Math.round(rnum*Math.pow(10,2))/Math.pow(10,2);
		}
					 
		function float2moeda(num) {
		   x = 0;
		
		   if(num<0) {
		      num = Math.abs(num);
		      x = 1;
		   }
		   if(isNaN(num)) num = "0";
		      cents = Math.floor((num*100+0.5)%100);
		
		   num = Math.floor((num*100+0.5)/100).toString();
		
		   if(cents < 10) cents = "0" + cents;
		      for (var i = 0; i < Math.floor((num.length-(1+i))/3); i++)
		         num = num.substring(0,num.length-(4*i+3))+'.'
		               +num.substring(num.length-(4*i+3));
		   ret = num + ',' + cents;
		   if (x == 1) ret = ' - ' + ret;return ret;
		
		}
		
		function formataMoeda(campo, separador_milhar, separador_decimal, tecla) {
			var sep = 0;
			var key = '';
			var i = j = 0;
			var len = len2 = 0;
			var strCheck = '0123456789';
			var aux = aux2 = '';
			var whichCode = (window.Event) ? tecla.which : tecla.keyCode;
		
			if (whichCode == 13) return true; // Tecla Enter
			if (whichCode == 8) return true; // Tecla Delete
			key = String.fromCharCode(whichCode); // Pegando o valor digitado
			if (strCheck.indexOf(key) == -1) return false; // Valor inválido (não inteiro)
			len = campo.value.length;
			for(i = 0; i < len; i++)
			if ((campo.value.charAt(i) != '0') && (campo.value.charAt(i) != separador_decimal)) break;
			aux = '';
			for(; i < len; i++)
			if (strCheck.indexOf(campo.value.charAt(i))!=-1) aux += campo.value.charAt(i);
			aux += key;
			len = aux.length;
			if (len == 0) campo.value = '';
			if (len == 1) campo.value = '0'+ separador_decimal + '0' + aux;
			if (len == 2) campo.value = '0'+ separador_decimal + aux;
		
			if (len > 2) {
				aux2 = '';
		
				for (j = 0, i = len - 3; i >= 0; i--) {
					if (j == 3) {
						aux2 += separador_milhar;
						j = 0;
					}
					aux2 += aux.charAt(i);
					j++;
				}
		
				campo.value = '';
				len2 = aux2.length;
				for (i = len2 - 1; i >= 0; i--)
				campo.value += aux2.charAt(i);
				campo.value += separador_decimal + aux.substr(len - 2, len);
			}
		
			return false;
		}

        function SomenteNumero(e){
            var tecla=(window.event)?event.keyCode:e.which;
            if((tecla>47 && tecla<58)) return true;
            else{
                 if (tecla==8 || tecla==0) return true;
                 else  return false;
             }
        }
				
		function CheckOut(f){
			var nOperacao;
			
            nOperacao = '<%=HttpGet->nOperacao%>';
            var lContinua = true; 
			var cTypeRequest;
			
            cTypeRequest = '<%=HttpSession->cTypeRequest%>';
            
			// Avalia requisicoes para solicitacao de ferias
			if (cTypeRequest == "B"){
				if (nOperacao == '1'){
					if (f.txtdtInicial.value == "" || f.txtdtInicial.value == "dd/mm/aaaa" ) {
						alert(convertTagsHTMLCaracteres('<%=STR0015%>')); <!-- Informe a data inicial de ferias! -->
						f.txtdtInicial.focus();
						return false;
					}                
					
					if (f.txtdtFinal.value == "") {
						alert(convertTagsHTMLCaracteres('<%=STR0023%>')); <!-- Data final de ferias nao calculada! -->
						f.txtdias.focus();
						return false;
					}                
                    
                    if (f.txtdias.value == ""){
						alert(convertTagsHTMLCaracteres('<%=STR0016%>')); <!-- Informe a quantidade de dias de ferias! -->
						f.txtdias.focus();
						return false;
					}
				}	
				
                if (f.txtobs.value == ""){
                    alert('<%=STR0017%>'); <!-- Digite as observacoes da solicitacao! -->
                    f.txtobs.focus();
                    return false;
                }else{                              
                    return true;
				}  
			}
			
			// Avalia requisicoes para solicitacao de transferencia
			if (cTypeRequest == "4")
			{
				// Observacao obrigatorio
				if (f.txtobs.value == ""){
					alert(convertTagsHTMLCaracteres("<%=STR0017%>")); <!--Digite as observacoes da solicitacao! -->
					f.txtobs.focus();
					return false;
				}
				if (nOperacao == '1')
				{
					// Algum desses campos devem estar preenchidos para
					// efetivar o registro da solicitacao de transferencia
                    var lFase4  = "<%=HttpSession->lFase4%>";
                    var cOrgCfg = "<%=HttpSession->cOrgCfg%>";
                    var lCorp	= "<%=HttpSession->lGestaoCorp%>";
									
					if (lCorp == ".T.") {
						if (f.txtgrpemp.value != "") {
							return true;
						}
					}	
					if (f.txtfilial.value != "") {
						return true;
					}
					if (f.txtcc.value != "") {
						return true;
					}
	
                  if (lFase4 == ".T.") {
					if (f.txtdepto.value != "")	{
						return true;
					}  
					if (f.txtprocesso.value != "")	{
						return true;
					}
                   }	
					
					if (cOrgCfg == "1") {
						if (f.txtposto.value != "")	{
							return true;
						}
					}	
				}
			}

			// Avalia requisicoes para solicitacao de desligamento
			if (cTypeRequest == "6")
			{
				if (nOperacao == '1')
				{
					if (f.txttipo.value == ""){
						alert(convertTagsHTMLCaracteres("<%=STR0027%>"));  <!--Selecione o tipo!-->
						f.txttipo.focus();
						return false;
					}
				}			

				if (f.txtobs.value == ""){
					alert(convertTagsHTMLCaracteres("<%=STR0017%>")); <!--Digite as observacoes da solicitacao! -->
					f.txtobs.focus();
					return false;
				}					
			}			

			// Avalia requisicoes para solicitacao de acao salarial
			if (cTypeRequest == "7")
			{
				if (nOperacao == '1')
				{
					if (f.txtalteracao.value == ""){
						alert(convertTagsHTMLCaracteres("<%=STR0041%>")); <!--Informe o tipo de alteracao -->
						return false;
					}
					if ((f.txtpctaumento.value == "" && f.txtfuncao.value == "" && f.txtcargo.value == "") || f.txtpctaumento.value == "" && f.txtfuncao.value != "" && f.txtcargo.value != ""){
						alert(convertTagsHTMLCaracteres("<%=STR0042%>")); <!--Informe o percentual de ajuste -->
						f.txtpctaumento.focus();
						return false;
					}
					if (f.txtsalario.value == "" && f.txtfuncao.value == "" && f.txtcargo.value == ""){
						alert(convertTagsHTMLCaracteres("<%=STR0043%>")); <!--Informe o novo salario -->
						f.txtsalario.focus();
						return false;
					} 
				}			
				if (f.txtobs.value == ""){
					alert(convertTagsHTMLCaracteres("<%=STR0017%>")); <!--Digite as observacoes da solicitacao -->
					f.txtobs.focus();
					return false;
				}					
			}

			// Avalia requisicoes para solicitacao de justificacao
			if (cTypeRequest == "8")
			{
				if (nOperacao == '1')
				{
					if (f.txtdataini.value == "" || f.txtdataini.value == "dd/mm/aaaa"){
						alert(convertTagsHTMLCaracteres("<%=STR0034%>"));  <!--Data inicial nao informada!-->
						f.txtdataini.focus();
						return false;
					}
					if (f.txtdatafim.value == "" || f.txtdatafim.value == "dd/mm/aaaa"){
						alert(convertTagsHTMLCaracteres("<%=STR0035%>"));  <!--Data final nao informada!-->
						f.txtdatafim.focus();
						return false;
					}

					if (f.txthorarioi.value != ""){
						if (f.txthorariof.value == ""){
							alert(convertTagsHTMLCaracteres("<%=STR0038%>"));  <!--Hona final nao informada!-->
							f.txthorariof.focus();
							return false;
						}	
					}
					if (f.txthorariof.value != ""){
						if (f.txthorarioi.value == ""){
							alert(convertTagsHTMLCaracteres("<%=STR0037%>"));  <!--Hona inicial nao informada!-->
							f.txthorarioi.focus();
							return false;
						}	
					}
					
					if (f.txthorarioi.value == "" && f.txthorariof.value == ""){					
						lDecisao = confirm(convertTagsHTMLCaracteres("<%=STR0039%>"));
						if (!lDecisao){
							f.txthorarioi.focus();
							return false;
						}
					}	
					

					if (f.txtmotivo.value == ""){
						alert(convertTagsHTMLCaracteres("<%=STR0036%>"));  <!--Motivo nao informado!-->
						f.txtmotivo.focus();
						return false;
					}

					if(f.txtdataini.value == f.txtdatafim.value && ( f.txthorariof.value <= f.txthorarioi.value && f.txthorarioi.value != "" && f.txthorariof.value != "" ) )
					{
					 	alert(convertTagsHTMLCaracteres('<%=STR0056%>'));  <!--Hora final deve ser maior que a hora inicial!--> 
					 	f.txthorariof.focus();
					 	return false;
					}
				}
			}


                // Vida Funcional - Avalia requisicoes para solicitacao de alteracao de jornada
                if (cTypeRequest == "N")
                {
    
                    if (nOperacao == '1')
                    {
    
                        if (f.txtobs.value == ""){
                            alert("<%=STR0017%>"); <!--Digite as observacoes da solicitacao! -->
    
                            f.txtobs.focus();
                            return false;
                        }
    
                        f.btnSalvar.value       = 'aguarde enviando...';
                        f.btnSalvar.style.color = 'red';         
                        f.btnSalvar.disabled    = 'true';
    
                    }   
                }           
    
    
            // Vida Funcional - Avalia requisicoes para solicitacao de diarias
            if (cTypeRequest == "Q")
            {
                if (nOperacao == '1')
                {
                    if (f.txtdataini.value == "" || f.txtdataini.value == "dd/mm/aaaa"){
                        alert(convertTagsHTMLCaracteres("<%=STR0034%>"));  <!--Data inicial nao informada!-->
                        f.txtdataini.focus();
                        return false;
                    }
                    if (f.txtdatafim.value == "" || f.txtdatafim.value == "dd/mm/aaaa"){
                        alert(convertTagsHTMLCaracteres("<%=STR0035%>"));  <!--Data final nao informada!-->
                        f.txtdatafim.focus();
                        return false;
                    }

      				if (f.txtobs.value == ""){
		     			alert(convertTagsHTMLCaracteres("<%=STR0017%>")); <!--Digite as observacoes da solicitacao! -->
			    		f.txtobs.focus();
				    	return false;
     				}
    
                        f.btnSalvar.value       = 'aguarde enviando...';
                        f.btnSalvar.style.color = 'red';         
                        f.btnSalvar.disabled    = 'true';
				}	
			}			


            // Vida Funcional - Avalia requisicoes para solicitacao de dias de ferias
            if (cTypeRequest == "O")
            {
                if (nOperacao == '1')
                {
                    var qtdeCheck = parseInt("<%=HttpSession->nQtdeProg%>"); 
                    if (qtdeCheck == 0) {
                        alert("Nao existe opcao disponivel para solicitar cancelamento!");
                        return false;
                    }
                    else {                              
                            var radios      = document.getElementsByName('opProg');
                        var radioResult = "";

                        for (var i = 0, length = radios.length; i < length; i++) {
                          if (radios[i].checked) {
                              radioResult = radios[i].value;  
                              //somente um radio pode ser marcado nao precisamos avaliar outros
                              break;
                           }
                        }

                        if (radioResult == "") {
                               alert("Nenhuma opcao foi selecionada para solicitar cancelamento !");
                           return false;
                        }
                    }  


                    if (f.txtobs.value == ""){
                        alert(convertTagsHTMLCaracteres("<%=STR0017%>")); <!--Digite as observacoes da solicitacao! -->
                        f.txtobs.focus();
                        return false;
                    }
                        f.Submit.value       = 'aguarde ...';
                        f.Submit.style.color = 'red';         
                        f.Submit.disabled    = 'true';

                }   
            }           
            

            // Vida Funcional - Avalia requisicoes para solicitacao de ferias
                if (cTypeRequest == "P")
            {

                if (nOperacao == '1')
                {
                    var opSel        = f.opcaoS107.value;
                    var dias1        = opSel.substr(0,2);
                    var dias2        = opSel.substr(2,2);

                    if (opSel == "") {
                        alert(convertTagsHTMLCaracteres("<%=STR0075%>"));  <!--Opcao de programacao nao selecionada!-->
                        f.opcaoS107.focus();
                        return false;
                    }

                    if (dias1 > 0) {
                        if (f.txtDtIni01.value == "" || f.txtDtIni01.value == "dd/mm/aaaa"){
                            alert(convertTagsHTMLCaracteres("<%=STR0070%>"));  <!--Data inicial do primeiro periodo nao informado!-->
                            f.txtDtIni01.focus();
                            return false;
                        }
                        if (f.txtDtFim01.value == "" || f.txtDtFim01.value == "calculada..."){
                            alert(convertTagsHTMLCaracteres("<%=STR0071%>"));  <!--Data final do primeiro periodo nao informado!-->
                            f.txtDtIni01.focus();
                            return false;
                        }
                    }

                    if (dias2 > 0) {
                        if (f.txtDtIni02.value == "" || f.txtDtIni02.value == "dd/mm/aaaa"){
                            alert(convertTagsHTMLCaracteres("<%=STR0072%>"));  <!--Data inicial do segundo periodo nao informado!-->
                            f.txtDtIni02.focus();
                            return false;
                        }
                        if (f.txtDtFim02.value == "" || f.txtDtFim02.value == "calculada..."){
                            alert(convertTagsHTMLCaracteres("<%=STR0073%>"));  <!--Data final do segundo periodo nao informado!-->
                            f.txtDtIni02.focus();
                            return false;
                        }
                    }

                    var data1        = f.txtDtFim01.value;
                    var data2        = f.txtDtIni02.value;
                    var matSubst     = glbMatSubst;
                    var diaSubst     = parseInt(glbDiaSubst);

                    if ((dias1 > 0) && (dias2 > 0)) {
                        if ( parseInt( data2.split( "/" )[2].toString() + data2.split( "/" )[1].toString() + data2.split( "/" )[0].toString() ) <= parseInt( data1.split( "/" )[2].toString() + data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) )
                        {
                            alert(convertTagsHTMLCaracteres('<%=STR0074%>')); <!-- Periodo de datas incoerente!  -->
                            return false;
                        }
                    }

                    if (matSubst == '.T.') {
                        if (dias1 > 0) {
                            if (dias1 >= diaSubst) {
                                if (f.txtMatSubst1.value == ""){
                                    alert(convertTagsHTMLCaracteres("<%=STR0076%>"));  <!--Substituto do primeiro periodo nao informado!-->
                                    f.txtMatSubst1.focus();
                                    return false;
                                }
                                    
                                    if (f.txtNomeSubst1.value == "" || f.txtNomeSubst1.value == "avaliando..."){
                                        alert("Avaliando Substituto para o primeiro periodo, confirme novamente!");  <!--Avaliando Substituto para o primeiro periodo, confirme novamente!-->
                                        return false;
                                    }
                            }    
                        }

                        if (dias2 > 0) {
                            if (dias2 >= diaSubst) {
                                if (f.txtMatSubst2.value == ""){
                                    alert(convertTagsHTMLCaracteres("<%=STR0077%>"));  <!--Substituto do segundo periodo nao informado!-->
                                    f.txtMatSubst2.focus();
                                    return false;
                                }
                                    
                                    if (f.txtNomeSubst2.value == "" || f.txtNomeSubst2.value == "avaliando..."){
                                        alert("Avaliando Substituto para o segundo periodo, confirme novamente!");  <!--Avaliando Substituto para o segundo periodo, confirme novamente!-->
                                        return false;
                                    }
                            }
                        }
                    }

                    if (f.txtobs.value == ""){
                        alert(convertTagsHTMLCaracteres("<%=STR0017%>")); <!--Digite as observacoes da solicitacao! -->
                        f.txtobs.focus();
                        return false;
                    }

                        
                        f.btnSalvar.value       = 'aguarde enviando...'; <!--aguarde enviando...!-->
                        f.btnSalvar.style.color = 'red';         
                        f.btnSalvar.disabled    = 'true';
                }   
            }           


            // Vida Funcional - Avalia requisicoes para solicitacao de licencas e afastamentos
            if (cTypeRequest == "R")
            {
                if (nOperacao == '1')
                {
                        lContinua = true;
                        if (f.txtDtFim01.value == "" || f.txtDtFim01.value == "calculada...")
                        {
                            if (confirm("<%=STR0121%>")) 
                                lContinua = true;
                            else
                                lContinua = false;
                        }

                        if(!lContinua)
                        {
                            return false;
                            }else{
                    if (f.txtDtIni01.value == "" || f.txtDtIni01.value == "dd/mm/aaaa"){
                        alert(convertTagsHTMLCaracteres("<%=STR0034%>"));  <!--Data inicial nao informado!-->
                        f.txtDtIni01.focus();
                        return false;
                    }

                    if ((glbMatSubst == '.T.') && (f.lLicSubst.value == '.T.')) {
                        if (f.txtDias01.value == '' || f.txtDias01.value == '0') {
                           alert(convertTagsHTMLCaracteres("<%=STR0091%>"));  <!--Qtde de dias nao informado!-->
                           f.txtDias01.focus();
                           return false;
                        }

                        var diaSubstInfo = parseInt(f.txtDias01.value);
                        var diaSubstLic  = parseInt(f.txtDiasSubst.value);

                        if (diaSubstInfo >= diaSubstLic){
                           if (f.txtMatSubst1.value == ""){
                               alert(convertTagsHTMLCaracteres("<%=STR0092%>"));  <!--Substituto nao informado!-->
                               f.txtMatSubst1.focus();
                               return false;
                           }
                               
                               if (f.txtNomeSubst1.value == "" || f.txtNomeSubst1.value == "avaliando..."){
                                   alert("Avaliando Substituto para o primeiro periodo, confirme novamente!");  <!--Avaliando Substituto para o primeiro periodo, confirme novamente!-->
                                   return false;
                               }
    
                        }

                    }

                    if (f.txtobs.value == ""){
                        alert(convertTagsHTMLCaracteres("<%=STR0017%>")); <!--Digite as observacoes da solicitacao! -->
                        f.txtobs.focus();
                        return false;
                    }
                        f.txtDias01.disabled = false;
                        f.btnSalvar.value       = 'aguarde enviando...';
                        f.btnSalvar.style.color = 'red';         
                        f.btnSalvar.disabled    = 'true';
                    }   
                }   
            }           


            // Vida Funcional - Avalia requisicoes para solicitacao de certidao
            if (cTypeRequest == "S")
            {
                if (nOperacao == '1')
                {
                    if (f.chkDocto.checked  == false){
                        alert(convertTagsHTMLCaracteres("<%=STR0089%>"));  <!--Documento nao selecionado!-->
                        f.chkDocto.focus();
                        return false;
                    }

                    if (f.txtobs.value == ""){
                        alert(convertTagsHTMLCaracteres("<%=STR0017%>")); <!--Digite as observacoes da solicitacao! -->
                        f.txtobs.focus();
                        return false;
                    }
    
                        f.btnSalvar.value       = 'aguarde enviando...';
                        f.btnSalvar.style.color = 'red';         
                        f.btnSalvar.disabled    = 'true';
                }   
            }           

			// Vida Funcional - Avalia requisicoes para solicitacao de certidao
            if (cTypeRequest == "V")
            {
                if (nOperacao == '1')
                {                    
                    if (f.cCurseName.value == ""){
                        alert(convertTagsHTMLCaracteres("<%=STR0096%>")); <!--Digite o nome do curso! -->
                        f.cCurseName.focus();
                        return false;
                    }   
                
                    if (f.cInstituteName.value == ""){
                        alert(convertTagsHTMLCaracteres("<%=STR0097%>")); <!--Digite o nome da instituição responsável pelo curso! -->
                        f.cInstituteName.focus();
                        return false;
                    }

					if (f.cContact.value == ""){
                        alert(convertTagsHTMLCaracteres("<%=STR0098%>")); <!--Digite o nome do contato! -->
                        f.cContact.focus();
                        return false;
                    }                   
                    if (f.cPhone.value == ""){
                        alert(convertTagsHTMLCaracteres("<%=STR0099%>")); <!--Digite o telefone de contato da instituição! -->
                        f.cPhone.focus();
                        return false;
                    }   
                
                    if (f.cStartDate.value == ""){
                        alert(convertTagsHTMLCaracteres("<%=STR0100%>")); <!--Digite a data inicial do curso! -->
                        f.cStartDate.focus();
                        return false;
                    }

					if (f.cEndDate.value == ""){
                        alert(convertTagsHTMLCaracteres("<%=STR0101%>")); <!--Digite a data final do curso! -->
                        f.cEndDate.focus();
                        return false;
                    }                   
                    if (f.cMonthlyPayment.value == ""){
                        alert("<%=STR0102%>"); <!--Digite o valor da mensalidade! -->
                        f.cMonthlyPayment.focus();
                        return false;
                    }   
                
                    if (f.cInstallmentAmount.value == ""){
                        alert("<%=STR0103%>"); <!--Digite a quantidade de parcelas relativo a todo período do curso! -->
                        f.cInstallmentAmount.focus();
                        return false;
                    }

					if (f.txtobs.value == ""){
                        alert(convertTagsHTMLCaracteres("<%=STR0017%>")); <!--Digite as observacoes da solicitacao! -->
                        f.txtobs.focus();
                        return false;
                    }
                }   
            }    

            // Vida Funcional - Avalia requisicoes para solicitacao de dias de folga
            if (cTypeRequest == "T")
            {
                    c570Solic = '<%=HttpSession->c570Solic%>';

                    if (nOperacao == '1') {

                        if (c570Solic == '1') {

                    var valorSelec = '';

                            for(var i=0;i<f.tipoOpSolic.length;i++) {
                                if(f.tipoOpSolic[i].checked) {
                                    valorSelec = f.tipoOpSolic[i].value;
                        }
                    }

                    if (valorSelec=='') {
                        alert(convertTagsHTMLCaracteres("<%=STR0083%>"));  <!--Opcao de solicitacao nao selecionada!-->
                        return false;
                    }

        
                    if (valorSelec == "Programado") {
                        if (f.txtDtIni01.value == "" || f.txtDtIni01.value == "dd/mm/aaaa"){
                            alert(convertTagsHTMLCaracteres("<%=STR0034%>"));  <!--Data inicial nao informado!-->
                            f.txtDtIni01.focus();
                            return false;
                        }
                        if (f.txtDtFim01.value == "" || f.txtDtFim01.value == "calculada..."){
                            alert(convertTagsHTMLCaracteres("<%=STR0035%>"));  <!--Data final nao informado!-->
                            f.txtDtIni01.focus();
                            return false;
                        }

                        var dias1        = f.txtDias01.value;
                        var matSubst     = glbMatSubst;
                        var diaSubst     = parseInt(glbDiaSubst);

                        if (matSubst == '.T.') {
                            if (dias1 > 0) {
                                if (dias1 >= diaSubst) {
                                    if (f.txtMatSubst1.value == ""){
                                        alert(convertTagsHTMLCaracteres("<%=STR0076%>"));  <!--Substituto do primeiro periodo nao informado!-->
                                        f.txtMatSubst1.focus();
                                        return false;
                                            }
                                            
                                        if (f.txtNomeSubst1.value == "" || f.txtNomeSubst1.value == "avaliando..."){
                                            alert("Avaliando Substituto para o primeiro periodo, confirme novamente!");  <!--Avaliando Substituto para o primeiro periodo, confirme novamente!-->
                                            return false;
                                    }
                                }    
                                }
                            }
                        }
                    }
                        if (valorSelec == "Indenizado") {
                            if (f.txtMes.value == ""){
                                alert("<%=STR0117%>"); <!--Periodo invalido! -->
                                f.txtMes.focus();
                                return false;
                            }
                            if (f.txtAno.value == ""){
                                alert("<%=STR0117%>"); <!--Periodo invalido! -->
                                f.txtAno.focus();
                                return false;
                        }

                            var today = new Date();
                            var mm    = today.getMonth()+1;
                            var yyyy  = today.getFullYear();
        
                            var data2 = +mm +"/" +yyyy;
                            var data1 = +f.txtMes.value +"/" +f.txtAno.value;


                            if ( parseInt( data1.split( "/" )[1].toString() + data1.split( "/" )[0].toString() ) < parseInt( data2.split( "/" )[1].toString() + data2.split( "/" )[0].toString() ) )
                            {
                                alert('<%=STR0117%>'); <!-- Periodo invalido!  -->
                                f.txtMes.focus();
                                return false;
                    }

                        }    

                    }

                    if (f.txtobs.value == ""){
                        alert("<%=STR0017%>"); <!--Digite as observacoes da solicitacao! -->
                        f.txtobs.focus();
                        return false;
                    }
                    if(document.getElementsByName('Submit').length){
                        f.Submit.value       = 'aguarde enviando...';
                        f.Submit.style.color = 'red';         
                            f.Submit.disabled    = 'true';
                }   
                    if(document.getElementsByName('CalcRetif').length){
                        f.CalcRetif.value       = 'aguarde enviando...';
                        f.CalcRetif.style.color = 'red';         
                        f.CalcRetif.disabled    = 'true';
            }

                }

			// Marcação de Ponto
            if (cTypeRequest == "Z")
            {
                if (nOperacao == '1')
                {
                    if (f.txtHora.value == ""){
                        alert("<%=STR0122%>"); <!--Digite o horário da marcação! -->
                        f.txtHora.focus();
                        return false;
                    }   
                
                    if (f.cNatureza.value == ""){
                        alert("<%=STR0123%>"); <!--Informe se a marcação corresponde a entrada ou saída! -->
                        f.cNatureza.focus();
                        return false;
                    }

					if (f.txtJust.value == ""){
                        alert("<%=STR0124%>"); <!--Informe uma justificativa para a marcação! -->
                        f.txtJust.focus();
                        return false;
                    }
                }   
            }           

    
			return true;
		}

		function fSubmitAprove()
		{
			var cTypeRequest;
			cTypeRequest = '<%=HttpSession->cTypeRequest%>';

			if (cTypeRequest == "B")
			{
			    if(CheckOut(document.forms[0]))
			    {
					document.forms[0].action = "W_PWSA116.APW";
					document.forms[0].submit();
			    }
			}
			
			if (cTypeRequest == "4")
			{
			    if(CheckOut(document.forms[0]))
			    {
					document.forms[0].action = "W_PWSA143.APW";
					document.forms[0].submit();
			    }
			}
			
			if (cTypeRequest == "6")
			{
			    if(CheckOut(document.forms[0]))
			    {
					document.forms[0].action = "W_PWSA116.APW";
					document.forms[0].submit();
			    }
			}			

			if (cTypeRequest == "7")
			{
			    if(CheckOut(document.forms[0]))
			    {
					document.forms[0].action = "W_PWSA123.APW";
					document.forms[0].submit();
			    }
			}

			if (cTypeRequest == "8")
			{
			    if(CheckOut(document.forms[0]))
			    {
					document.forms[0].action = "W_PWSA163.APW";
					document.forms[0].submit();
			    }
			}			

            if (cTypeRequest == "N")
            {
                if(CheckOut(document.forms[0]))
                {
                        document.forms[0].btnAprovar.value       = 'aguarde aprovando...';
                        document.forms[0].btnAprovar.style.color = 'red';         
                        document.forms[0].btnAprovar.disabled    = 'true';
    
                        document.forms[0].btnReprovar.style.color = 'red';         
                        document.forms[0].btnReprovar.disabled    = 'true';
    
                    document.forms[0].action = "W_PWSA513.APW";
                    document.forms[0].submit();
                }
            }           

            if (cTypeRequest == "O")
            {
                if(CheckOut(document.forms[0]))
                {
                        document.forms[0].btnAprovar.value       = 'aguarde aprovando...';
                        document.forms[0].btnAprovar.style.color = 'red';         
                        document.forms[0].btnAprovar.disabled    = 'true';
    
                        document.forms[0].btnReprovar.style.color = 'red';         
                        document.forms[0].btnReprovar.disabled    = 'true';
    
                    document.forms[0].action = "W_PWSA523.APW";
                    document.forms[0].submit();
                }
            }           

            if (cTypeRequest == "P")
            {
                if(CheckOut(document.forms[0]))
                {
                        document.forms[0].btnAprovar.value       = 'aguarde aprovando...';
                        document.forms[0].btnAprovar.style.color = 'red';         
                        document.forms[0].btnAprovar.disabled    = 'true';
    
                        document.forms[0].btnReprovar.style.color = 'red';         
                        document.forms[0].btnReprovar.disabled    = 'true';
    
                    document.forms[0].action = "W_PWSA533.APW";
                    document.forms[0].submit();
                }
            }           

            if (cTypeRequest == "Q")
            {
                if(CheckOut(document.forms[0]))
                {
                        if(document.getElementsByName('btnAprovar').length){
                            document.forms[0].btnAprovar.value       = 'aguarde aprovando...';
                            document.forms[0].btnAprovar.style.color = 'red';         
                            document.forms[0].btnAprovar.disabled    = 'true';
    
                            document.forms[0].btnReprovar.style.color = 'red';         
                            document.forms[0].btnReprovar.disabled    = 'true';
                        }
                        if(document.getElementsByName('btnAprovar1').length){
                            document.forms[0].btnAprovar1.value       = 'aguarde aprovando...';
                            document.forms[0].btnAprovar1.style.color = 'red';         
                            document.forms[0].btnAprovar1.disabled    = 'true';
    
                            document.forms[0].btnReprovar1.style.color = 'red';         
                            document.forms[0].btnReprovar1.disabled    = 'true';
                        }
    
                    document.forms[0].action = "W_PWSA543.APW";
                    document.forms[0].submit();
                }
            }           

            if (cTypeRequest == "R")
            {
                if(CheckOut(document.forms[0]))
                {
                        document.forms[0].btnAprovar.value       = 'aguarde aprovando...';
                        document.forms[0].btnAprovar.style.color = 'red';         
                        document.forms[0].btnAprovar.disabled    = 'true';
    
                        document.forms[0].btnReprovar.style.color = 'red';         
                        document.forms[0].btnReprovar.disabled    = 'true';
    
                    document.forms[0].action = "W_PWSA553.APW";
                    document.forms[0].submit();
                }
            }           

            if (cTypeRequest == "S")
            {
                if(CheckOut(document.forms[0]))
                {
                        if(document.getElementsByName('btnAprovar').length){
                            document.forms[0].btnAprovar.value       = 'aguarde aprovando...';
                            document.forms[0].btnAprovar.style.color = 'red';         
                            document.forms[0].btnAprovar.disabled    = 'true';
    
                            document.forms[0].btnReprovar.style.color = 'red';         
                            document.forms[0].btnReprovar.disabled    = 'true';
                        }
                        if(document.getElementsByName('btnAprovar1').length){
                            document.forms[0].btnAprovar1.style.color = 'red';         
                            document.forms[0].btnAprovar1.disabled    = 'true';
    
                            document.forms[0].btnReprovar1.style.color = 'red';         
                            document.forms[0].btnReprovar1.disabled    = 'true';
                        }
    
                    document.forms[0].action = "W_PWSA563.APW";
                    document.forms[0].submit();
                }
            }           

            if (cTypeRequest == "T")
            {
                if(CheckOut(document.forms[0]))
                {
                        if(document.getElementsByName('button3').length){
                            document.forms[0].button3.value       = 'aguarde aprovando...';
                            document.forms[0].button3.style.color = 'red';         
                            document.forms[0].button3.disabled    = 'true';
    
                            document.forms[0].button2.style.color = 'red';         
                            document.forms[0].button2.disabled    = 'true';
                        }
                        if(document.getElementsByName('button5').length){
                            document.forms[0].button5.value       = 'aguarde aprovando...';
                            document.forms[0].button5.style.color = 'red';         
                            document.forms[0].button5.disabled    = 'true';
    
                            document.forms[0].button4.style.color = 'red';         
                            document.forms[0].button4.disabled    = 'true';
                        }
    
                    document.forms[0].action = "W_PWSA573.APW";
                    document.forms[0].submit();
                }
            }

			if (cTypeRequest == "V")
            {
                if(CheckOut(document.forms[0]))
                {
                    document.forms[0].action = "W_PWSA383.APW";
                    document.forms[0].submit();
                }
            }
            
            if (cTypeRequest == "Z")
            {
                if(CheckOut(document.forms[0]))
                {
                    document.forms[0].action = "W_PWSA404.APW";
                    document.forms[0].submit();
                }
            }

		
            }
		function fSubmitReprove()
		{
			var cTypeRequest;
			cTypeRequest = '<%=HttpSession->cTypeRequest%>';

			if (cTypeRequest == "B")
			{
			   if(CheckOut(document.forms[0]))
			    {
					document.forms[0].action = "W_PWSA117.APW";
					document.forms[0].submit();
			    }
			}			    

			if (cTypeRequest == "4")
			{
			   if(CheckOut(document.forms[0]))
			    {
					document.forms[0].action = "W_PWSA144.APW";
					document.forms[0].submit();
			    }
			}
			
			if (cTypeRequest == "6")
			{
			   if(CheckOut(document.forms[0]))
			    {
					document.forms[0].action = "W_PWSA117.APW";
					document.forms[0].submit();
			    }
			}			

			if (cTypeRequest == "7")
			{
			   if(CheckOut(document.forms[0]))
			    {
					document.forms[0].action = "W_PWSA124.APW";
					document.forms[0].submit();
			    }
			}

			if (cTypeRequest == "8")
			{
			   if(CheckOut(document.forms[0]))
			    {
					document.forms[0].action = "W_PWSA164.APW";
					document.forms[0].submit();
			    }
			}

            if (cTypeRequest == "N")
            {
               if(CheckOut(document.forms[0]))
                {
                        document.forms[0].btnAprovar.style.color = 'red';         
                        document.forms[0].btnAprovar.disabled    = 'true';
    
                        document.forms[0].btnReprovar.value       = 'aguarde reprovando...';
                        document.forms[0].btnReprovar.style.color = 'red';         
                        document.forms[0].btnReprovar.disabled    = 'true';
    
                    document.forms[0].action = "W_PWSA514.APW";
                    document.forms[0].submit();
                }
            }

            if (cTypeRequest == "O")
            {
                if(CheckOut(document.forms[0]))
                {
                        document.forms[0].btnAprovar.style.color = 'red';         
                        document.forms[0].btnAprovar.disabled    = 'true';
    
                        document.forms[0].btnReprovar.value       = 'aguarde reprovando...';
                        document.forms[0].btnReprovar.style.color = 'red';         
                        document.forms[0].btnReprovar.disabled    = 'true';
                        
                    document.forms[0].action = "W_PWSA524.APW";
                    document.forms[0].submit();
                }
            }           

            if (cTypeRequest == "P")
            {
                if(CheckOut(document.forms[0]))
                {
                        document.forms[0].btnAprovar.style.color = 'red';         
                        document.forms[0].btnAprovar.disabled    = 'true';
    
                        document.forms[0].btnReprovar.value       = 'aguarde reprovando...';
                        document.forms[0].btnReprovar.style.color = 'red';         
                        document.forms[0].btnReprovar.disabled    = 'true';
                        
                    document.forms[0].action = "W_PWSA534.APW";
                    document.forms[0].submit();
                }
            }           

            if (cTypeRequest == "Q")
            {
               if(CheckOut(document.forms[0]))
                {
                        if(document.getElementsByName('btnAprovar').length){
                            document.forms[0].btnAprovar.style.color = 'red';         
                            document.forms[0].btnAprovar.disabled    = 'true';
    
                            document.forms[0].btnReprovar.value       = 'aguarde reprovando...';
                            document.forms[0].btnReprovar.style.color = 'red';         
                            document.forms[0].btnReprovar.disabled    = 'true';
                        }
                        if(document.getElementsByName('btnAprovar1').length){
                            document.forms[0].btnAprovar1.style.color = 'red';         
                            document.forms[0].btnAprovar1.disabled    = 'true';
    
                            document.forms[0].btnReprovar1.value       = 'aguarde reprovando...';
                            document.forms[0].btnReprovar1.style.color = 'red';         
                            document.forms[0].btnReprovar1.disabled    = 'true';
                        }
    
                    document.forms[0].action = "W_PWSA544.APW";
                    document.forms[0].submit();
                }
            }

            if (cTypeRequest == "R")
            {
                if(CheckOut(document.forms[0]))
                {
                        document.forms[0].btnAprovar.style.color = 'red';         
                        document.forms[0].btnAprovar.disabled    = 'true';
    
                        document.forms[0].btnReprovar.value       = 'aguarde reprovando...';
                        document.forms[0].btnReprovar.style.color = 'red';         
                        document.forms[0].btnReprovar.disabled    = 'true';
    
                    document.forms[0].action = "W_PWSA554.APW";
                    document.forms[0].submit();
                }
            }           

            if (cTypeRequest == "S")
            {
                if(CheckOut(document.forms[0]))
                {
                    document.forms[0].action = "W_PWSA564.APW";
                    document.forms[0].submit();
                }
            }           

            if (cTypeRequest == "T")
            {
               if(CheckOut(document.forms[0]))
                {
                        if(document.getElementsByName('button3').length){
                            document.formFerias.button3.style.color = 'red';        
                            document.formFerias.button3.disabled    = 'true';
    
                            document.formFerias.button2.value       = 'aguarde reprovando...';
                            document.formFerias.button2.style.color = 'red'; 
                            document.formFerias.button2.disabled    = 'true';
                        }
                        if(document.getElementsByName('button5').length){
                            document.formFerias.button5.style.color = 'red';        
                            document.formFerias.button5.disabled    = 'true';
    
                            document.formFerias.button4.value       = 'aguarde reprovando...';
                            document.formFerias.button4.style.color = 'red'; 
                            document.formFerias.button4.disabled    = 'true';
                        }
                        document.formFerias.action = "W_PWSA574.APW";
                        document.formFerias.submit();
                }
            }           

            if (cTypeRequest == "V")
            {
               if(CheckOut(document.forms[0]))
                {
                    document.forms[0].action = "W_PWSA384.APW";
                    document.forms[0].submit();
                }
            }
            
            if (cTypeRequest == "Z")
            {
                if(CheckOut(document.forms[0]))
                {
                    document.forms[0].action = "W_PWSA405.APW";
                    document.forms[0].submit();
                }
                } 
    
            } 

            function fCheckAprove(diasQtd, diasTot, nIdade) {
                <% If !lRefTrab %>
                    if ( ( parseInt(nIdade) < 18 || parseInt(nIdade) > 50 ) && parseInt(diasQtd) < parseInt(diasTot)  ) {
                        if ( !confirm(convertTagsHTMLCaracteres('<%=STR0132%>')) ) {
                            return false;
                        }
                    }
                <% EndIf %>
                return fSubmitAprove();
		}


            
    
        function fPrint(){
            var nOperacao;
            var cTypeRequest;

            nOperacao    = '<%=HttpGet->nOperacao%>';
            cTypeRequest = '<%=HttpSession->cTypeRequest%>';

            if (cTypeRequest == "O")
            {
                   try{
               document.getElementById('linhaObs').style.visibility  = 'hidden';
               document.getElementById('btnVoltar').style.visibility = 'hidden';
               document.getElementById('btnImp').style.visibility    = 'hidden';
               document.getElementById('Submit').style.visibility    = 'hidden';
                      document.getElementById('linhaInfo').style.visibility = 'hidden';
                      } catch (ex) { }

               self.print();

                   try{
               document.getElementById('linhaObs').style.visibility  = 'visible';
               document.getElementById('btnVoltar').style.visibility = 'visible';
               document.getElementById('btnImp').style.visibility    = 'visible';
               document.getElementById('Submit').style.visibility    = 'visible';
                      document.getElementById('linhaInfo').style.visibility = 'visible';
                      } catch (ex) { }
            }

        }


        function mostraDiv(obj,idImg) {
            var divObj = document.getElementById(obj);
            var imgObj = document.getElementById(idImg);

            if ( divObj.style.display != 'none' ) {
                divObj.style.display = 'none';
                    imgObj.src='images/mais.bmp';     
            }
            else {
                divObj.style.display = '';
                    imgObj.src='images/menos.bmp';
            }
        }

    
        //Avalia opcao de programacao de ferias - PWSA531
        function avaliaOpTAB(progID) {              
             var d            = document;
                var opS107       = d.getElementById('opcaoS107');
             var divParte01a  = d.getElementById('divPer1a');
             var divParte01b  = d.getElementById('divPer1b');
             var img1         = d.getElementById('imgPer1');
             var trSubst1     = d.getElementById('Subst1');

             var divParte02a  = d.getElementById('divPer2a');
             var divParte02b  = d.getElementById('divPer2b');
             var img2         = d.getElementById('imgPer2');
             var trSubst2     = d.getElementById('Subst2');
             
             var dias1        = progID.substr(0,2);  //Primeiro periodo
             var dias2        = progID.substr(2,2);  //Segundo periodo
             var dias3        = progID.substr(4,2);  //Dias de Abono
             var dias4        = progID.substr(6,2);  //Dias Oportuno
             var chave1       = progID.substr(8,1);  //Tipo de programacao
             var chave2       = progID.substr(9,1);  //Codigo da opcao
             var sequencia    = progID.substr(10,3); //Sequencia

             var diasDir1     = d.getElementById('txtDias01');
             var diasDir2     = d.getElementById('txtDias02');

             var matSubst     = glbMatSubst;
             var diaSubst     = parseInt(glbDiaSubst);

             //alert('prog: ' + progID);
             //alert('dias1: ' + dias1);
             //alert('dias2: ' + dias2);
             //alert('abono: ' + dias3);
             //alert('oportuno: ' + dias4);
             //alert('Tp Program: ' + chave1);
             //alert('Cod Opcao: ' + chave2);
             //alert('Sequencia: ' + sequencia);

    
                 // Avalia indenizacao para periodos aquisitos em aberto   
                 if (dias1 == 0 && dias2 == 0) {
                    var today = new Date();
                    var dd    = today.getDate();
                    var mm    = today.getMonth()+1;
                    var yy    = today.getFullYear();
            
                    if (dd < 10){
                        dd = "0" +dd;
                    }
                    if (mm < 10){
                        mm = "0" +mm;
                    }
                    var dataHoje = dd +"/" +mm +"/" +yy; 
    
    
                     new Ajax.Request( "W_PWSA536.APW",
                        {
                            method: 'get',
                            parameters: {tipoVal: '1', dtPer: dataHoje, },
                            onFailure: function() { alert('Erro ao validar data!'); return; },
                            onSuccess: function(transport) 
                                  { 
                                      var response = transport.responseText || "";
                                      if (response == '*1') {
                                          alert('Periodo aquisito em aberto. Nao sera possivel solicitar indenizacao!'); <!-- Periodo aquisito em aberto. Nao sera possivel solicitar indenizacao!  -->
                                          opS107.focus();
                                          opS107.value = "";
                                          return false;
                                      } 
                                  }
                           }
                     );
    
                 } 
    
    
             if (dias1 > 0) {
                 divParte01a.style.display = '';
                 diasDir1.value = dias1

                 try{
                   if (matSubst == '.T.' && dias1 >= diaSubst) {
                      trSubst1.style.display = '';
                   } else {       
                      trSubst1.style.display = 'none';
                   }
                 } catch (ex) { }
             }
             else {
                 divParte01a.style.display = 'none';
                 divParte01b.style.display = 'none';
                     img1.src='images/mais.bmp';     
                 diasDir1.value = '...'
             }


             if (dias2 > 0) {
                 divParte02a.style.display = '';
                 diasDir2.value = dias2

                 try{
                    if (matSubst == '.T.' && dias2 >= diaSubst) {
                        trSubst2.style.display = '';
                    } else {       
                        trSubst2.style.display = 'none';
                    }
                 } catch (ex) { }
             }
             else {
                 divParte02a.style.display = 'none';
                 divParte02b.style.display = 'none';
                     img2.src='images/mais.bmp';     
                 diasDir2.value = '...'
             }
   
             inicPeriodo('1');   
             inicPeriodo('2');

        }   

        function inicPeriodo(periodo) {
           var d2           = document;
           var dtFim01      = d2.getElementById('txtDtFim01');
           var dtFim02      = d2.getElementById('txtDtFim02');

           var matSubst1    = d2.getElementById('txtMatSubst1');
           var btnSubst1    = d2.getElementById('btnVld1');
           var nomSubst1    = d2.getElementById('txtNomeSubst1');

           var matSubst2    = d2.getElementById('txtMatSubst2');
           var btnSubst2    = d2.getElementById('btnVld2');
           var nomSubst2    = d2.getElementById('txtNomeSubst2');

           var matSubst     = glbMatSubst;
           var diaSubst     = parseInt(glbDiaSubst);

           if (periodo == '1') {
              dtFim01.value = 'calculada...';

              try{
                  if (matSubst == '.T.') {  
                      if (btnSubst1.disabled == '') {
                          nomSubst1.value         = '';
                          matSubst1.value         = '';
                          matSubst1.disabled      = 'true';
                          btnSubst1.style.display = 'none';
                       }
                  } 
              } catch (ex) { }

           }    

           if (periodo == '2') {
              dtFim02.value='calculada...';

              try{
                  if (matSubst == '.T.') {  
                      if (btnSubst2.disabled == '') {
                          nomSubst2.value         = '';
                          matSubst2.value         = '';
                          matSubst2.disabled      = 'true';
                          btnSubst2.style.display = 'none';
                      }
                  } 
              } catch (ex) { }

           }    

        }   

        function validaSubst(txtFilial, txtMatSubst, txtDataIni, txtDataFim, subst) {
           var d            = document;
           var matSubst1    = d.getElementById('txtMatSubst1');
           var nomeSubst1   = d.getElementById('txtNomeSubst1');
           var matSubst2    = d.getElementById('txtMatSubst2');
           var nomeSubst2   = d.getElementById('txtNomeSubst2');
           var matPrincipal = glbMatPrinc;
           var notOK        = false; 

           if (txtMatSubst == '') {
              return true;
           } 

           if (subst == '1') {
               nomeSubst1.value = 'avaliando...';

               if (matSubst1.value == matPrincipal){
                   alert(convertTagsHTMLCaracteres("<%=STR0069%>")); <!--O substituto nao pode ser o proprio! -->
                   nomeSubst1.value = '' 
                   matSubst1.focus();
                   return false;
                }
           }
           if (subst == '2') {
               nomeSubst2.value = 'avaliando...';

               if (matSubst2.value == matPrincipal){
                   alert(convertTagsHTMLCaracteres("<%=STR0069%>")); <!--O substituto nao pode ser o proprio! -->
                   nomeSubst2.value = '' 
                   matSubst2.focus();
                   return false;
               }
           }    

           var cURL = "W_PWSA535.APW";
           new Ajax.Request(   cURL,
                               {
                                method: 'get',
                                parameters: {filial:txtFilial, matricula: txtMatSubst, dtini: txtDataIni, dtfim: txtDataFim},
                                onFailure: function() { 
                                                if (subst == '1') {
                                                   matSubst1.value  = ''
                                                   nomeSubst1.value = ''
                                                   matSubst1.focus();
                                                }    
                                                else {
                                                   matSubst2.value  = ''
                                                   nomeSubst2.value = '' 
                                                   matSubst2.focus();
                                                }    
                                                            
                                                alert('Erro ao avaliar substituto!'); 
                                                return false; 
                                           },
                                onSuccess: function(transport) { 
                                                var response = transport.responseText || "";

                                                if (response == '*1') {
                                                   alert(convertTagsHTMLCaracteres("<%=STR0080%>")); <!--Problemas na avaliação do substituto! --> 
                                                   notOK = true; 
                                                } 
                                                if (response == '*2') {
                                                   alert(convertTagsHTMLCaracteres("<%=STR0079%>")); <!--Matricula informada nao localizada! --> 
                                                   notOK = true; 
                                                } 
                                                if (response == '*3') {
                                                   alert(convertTagsHTMLCaracteres("<%=STR0078%>")); <!--Substituto nao disponivel no periodo informado! --> 
                                                   notOK = true; 
                                                } 

                                                if (notOK){
                                                   if (subst == '1') {
                                                      nomeSubst1.value = '' 
                                                      matSubst1.value  = ''
                                                      matSubst1.focus();
                                                   }    
                                                   else {
                                                      nomeSubst2.value = '' 
                                                      matSubst2.value  = ''
                                                      matSubst2.focus();
                                                   }

                                                   return false; 
                                                }    


                                                if (subst == '1') {
                                                    if (matSubst1.value != '') {
                                                       nomeSubst1.value = response
                                                    }
                                                    else {
                                                       nomeSubst1.value = ''
                                                    }        
                                                }    
                                                else {
                                                    if (matSubst2.value != '') {
                                                       nomeSubst2.value = response
                                                    }
                                                    else {
                                                       nomeSubst2.value = ''
                                                    }        
                                                }

                                           }
                                }
                            );
           return;    
        }


		//function CalcDateFinal(cDestination, cStandardQuery, cRecNo) {
		function calcDateFinal() {
			var cURL = "W_PWSA104.APW";

			new Ajax.Request(	cURL,
												{
													method: 'get',
													onFailure: function() {
														alert('Erro ao carregar a pagina!');
													},
													onSuccess: function(oTransport) {
														AjaxHandleConfirmSearch(cDestination, oTransport);
													}
												}
											);
		}

            
            function validaRadio(myRadio, origem, varX) {
               var d = document;
    
               if (origem == 'PWSA521') {
                   var btnSubmit = d.getElementById('Submit');
                   var divObserv = d.getElementById('divObs');
    
                   if (varX.trim() == '') {
                      divObserv.style.display = 'none';
                      btnSubmit.value         = '<%=STR0108%>' +' >>';
                   }
                   else {
                      divObserv.style.display = '';
                      btnSubmit.value         = '<%=STR0109%>' +' >>';
                   }  
               }
    
    
               if (origem == 'PWSA571') {
                   var btnSubmit = d.getElementById('Submit');
                   var btnCalcRetif = d.getElementById('CalcRetif');
                   var divObs    = d.getElementById('divObs');
                   var divOff    = d.getElementById('divDaysOff');
                   var divInd    = d.getElementById('divDaysInd');
    
                   //Avalia programacao ou indenizacao    
                   if (varX.trim() == 'Programado') {
                      divObs.style.display = 'none';
                      divOff.style.display = '';
                      divInd.style.display = 'none';
    
                      btnSubmit.value = '<%=STR0112%>' +' >>';
                      return true
                   }
                   if (varX.trim() == 'Indenizado') {
                      divObs.style.display = 'none';
                      divOff.style.display = 'none';
                      divInd.style.display = '';
    
                      btnSubmit.value = '<%=STR0113%>' +' >>';
                      return true
                   }
                        
                   btnCalcRetif.disabled=false
    
                   //Avalia cancelamento ou retificacao    
                   //Nao foi publicado - cancelamento
                   if (varX.trim() == '') {
                      divObs.style.display = 'none';
                      btnCalcRetif.value = '<%=STR0108%>' +' >>';
                      return true
                   }
                   //Existe publicacao - retificacao
                   if (varX.trim() != 'Indenizado' && varX.trim() != 'Programado' && varX.trim() != ''){
                      divObs.style.display = '';
                      btnCalcRetif.value = '<%=STR0109%>' +' >>';
                   }
    
               }  
    
            }

    function validaIndeniz(indeniz, saldoDias) {
               var d         = document;
               var tpSolic1  = d.getElementById('tipoOp1'); //Programado
               var tpSolic2  = d.getElementById('tipoOp2'); //Indenizado
               var msgInd    = d.getElementById('msgIndeniz');
    
               var btnSubmit = d.getElementById('Submit');
               var divObs    = d.getElementById('divObs');
               var divOff    = d.getElementById('divDaysOff');
               var divInd    = d.getElementById('divDaysInd');
               var divOpc    = d.getElementById('divOpc');
    
               d.getElementById('cQtdSaldo').value = saldoDias;
               tpSolic1.checked        = false;
               divObs.style.display    = 'none';
               divOpc.style.display    = '';
               divOff.style.display    = 'none';
               divInd.style.display    = 'none';
               btnSubmit.value         = '<%=STR0112%>' +' >>';
    
               if (indeniz == '2') {
                  tpSolic2.disabled    = true;
                  tpSolic2.checked     = false;
                  msgInd.value         = ' (indisponivel)';
               } else {
                  tpSolic2.disabled    = false;
                  tpSolic2.checked     = false;
                  msgInd.value         = '';
               }   
            }
            
		function Mascara(o,f){
                v_obj=o
                v_fun=f
                setTimeout("execmascara()",1)
        }
                
        function execmascara(){
                v_obj.value=v_fun(v_obj.value)
        }

		function Integer(v){
        	return v.replace(/\D/g,"")
        }

		function Data(v){
                v=v.replace(/\D/g,"") 
                v=v.replace(/(\d{2})(\d)/,"$1/$2") 
                v=v.replace(/(\d{2})(\d)/,"$1/$2") 
                return v
        }
		
		function Valor(v){
                v=v.replace(/\D/g,"") //Remove tudo o que não é dígito
                v=v.replace(/^([0-9]{3}\.?){3}-[0-9]{2}$/,"$1.$2");
                //v=v.replace(/(\d{3})(\d)/g,"$1,$2")
                v=v.replace(/(\d)(\d{2})$/,"$1.$2") //Coloca ponto antes dos 2 últimos digitos
                return v
        }

		function validaDat(campo,valor) {
			var date=valor;
			var ardt=new Array;
			var ExpReg=new RegExp("(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012])/[12][0-9]{3}");
			ardt=date.split("/");
			erro=false;
			if ( valor == ""){
				return true;
			}
			if ( date.search(ExpReg)==-1){
				erro = true;
			}
			else if (((ardt[1]==4)||(ardt[1]==6)||(ardt[1]==9)||(ardt[1]==11))&&(ardt[0]>30))
				erro = true;
			else if ( ardt[1]==2) {
				if ((ardt[0]>28)&&((ardt[2]%4)!=0))
					erro = true;
				if ((ardt[0]>29)&&((ardt[2]%4)==0))
					erro = true;
			}
			if (erro) {
				alert("<%=STR0104%> "+ valor + " <%=STR0105%>" + "\n" + "<%=STR0106%>");//"A data informada "  ## " não é uma data válida!" ## Informe uma data correta no formato DD/MM/AAAA"
				form76.campo.focus();
				form76.campo.value = "";
				return false;
			}
			return true;
		}

        
		<%	If(valtype(msg) != "U") %>
				alert('<%=msg%>');
		<%	EndIf %>

	</script>
	
<body>
	<h2><%=cTitulo%></h2>
	<div id="divCabecalho" name="divCabecalho">
		<div class="divAjaxLoad">
			<img src="imagens-rh/ajax-loader.gif"><br>
			<span class="TituloMenor"><%=STR0006%></span><!-- Aguarde -->
		</div>
		<script language="Javascript">
			<!-- 
			GoToPage(null, 1);
			-->
		</script>
	</div> 

	<div id="divSolicitacao" name="divSolicitacao">
		<div class="divAjaxLoad">
			<img src="imagens-rh/ajax-loader.gif"><br>
			<span class="TituloMenor"><%=STR0006%></span><!-- Aguarde -->
		</div>
		<script language="Javascript">
		<!-- 
		GoToPage(null, 2);
		-->
		</script>
	</div>
</body>
</html>
