//O nome das funcoes e arquivos tem que ter no maximo 8 caracteres.

Function TotvsApi(nID, cParams, cBuffer, nBuffSize)
	
	Local cString	:= ""
	Local aParm 	:= {}
	Local cTipoApi	:= ""
	Local cFunction	:= ""
	Local aParams 	:= {}
	Local cDelimit  := "<@#DELIMIT#@>"
	Local cFimStr	:= "<@#FIMSTR#@>"

EXPORT FUNCTION AS ExecInClientDLL(nFuncID AS INTEGER, cParams AS PCHAR, cBuffer AS PCHAR, nBuffSize AS INTEGER) RETURNING INTEGER

	cParams := DoDecode(cParams)

	PrepPar(cParams, @aParams, cDelimit, cFimStr)

	cTipoApi	:= Upper(AllTrim(aParams[1]))
	cFunction 	:= Upper(AllTrim(aParams[2]))
    	
	Do Case
		Case cTipoApi == "1"		
			cBuffer := Epson(cFunction, aParams, cDelimit, cFimStr)
		
		Case cTipoApi == "2"		
			cBuffer := Bematech(cFunction, aParams, cDelimit, cFimStr)

		Case cTipoApi == "3"		 
			cBuffer := Itautec(cFunction, aParams, cDelimit, cFimStr)
		
		Case cTipoApi == "4"		 
			cBuffer := Clisitef(cFunction, aParams, cDelimit, cFimStr)  
			
		Case cTipoApi == "5"		 
			cBuffer := ItautZPM(cFunction, aParams, cDelimit, cFimStr)
		
		Case cTipoApi == "6"		 
			cBuffer := DarumaNf(cFunction, aParams, cDelimit, cFimStr)
		Case cTipoApi == "7"
			cBuffer := CentPag(cFunction, aParams, cDelimit, cFimStr)		 
			
		Case cTipoApi == "8"		 
			cBuffer := IBM(cFunction, aParams, cDelimit, cFimStr)
			
		Case cTipoApi == "9"		 
			cBuffer := T88(cFunction, aParams, cDelimit, cFimStr)		
			
		Case cTipoApi == "10"		 
			cBuffer := APET(cFunction, aParams, cDelimit, cFimStr)

		Case cTipoApi == "11"
			cBuffer := BemaNF(cFunction, aParams, cDelimit, cFimStr)

	Case cTipoApi == "12"
			cBuffer := SAT(cFunction, aParams, cDelimit, cFimStr)
			
		Case cTipoApi == "999"		
			cBuffer := "1" + cDelimit + "1.0.17.2" + cFimStr   
			//Versão da TovsApi
			//penúltimo dígito - inclusão de novo modelo de Hardware
			//último dígito - bugfix ou implementação de funções em um periférico existente
			
		Case cTipoApi == "997"
			cBuffer := "1" + cDelimit + "11" + cFimStr    
			

	EndCase
    
	cBuffer := DoEncode(cBuffer)

Return 1

Function PrepPar(cParams, aParams, cDelimit, cFimStr)
	
	Local nPos := 0
		
	While .T.
		// O Chr(1) é o separador de campos		
		If (nPos := At(cDelimit, cParams) ) > 1  
			AAdd(aParams, Substr(cParams,1,nPos-1))
		ElseIf  nPos == 1
			AAdd(aParams, "")
		ElseIf nPos == 0
			// O Chr(2) é o marcador do final do aParams, o resto é somente buffer		
			If At(cFimStr, cParams) == 1					// Foi enviado o ultimo parametro vazio
				AAdd(aParams, "")
			Else
				AAdd(aParams, Substr(cParams,1,At(cFimStr,cParams)-1))
			EndIf
			
			Exit
		
		EndIf
		
		cParams := Substr(cParams,nPos + Len(cDelimit))
	End
	
Return Nil
