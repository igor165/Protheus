#INCLUDE "wscrd020.ch"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Metodo	 ³GetExtrato³ Autor ³ Andre / Fernando      ³ Data ³21/07/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³                Alteracoes desde sua criacao                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ DATA     ³ BOPS ³Prograd.³ALTERACAO                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³21/09/05  ³Melhor³A.Veiga ³Criacao do ponto de entrada CRDTABFE para   ³±± 
±±³          ³      ³        ³que o usuario possa manipular a tabela de   ³±± 
±±³          ³      ³        ³feriados                                    ³±± 
±±³07/03/06  ³XXXXXX³Veiga / ³Foi alterada a estrutura do WebService para ³±±
±±³          ³      ³Thiago  ³considerar tbem o recno do SA1 e o codigo + ³±±
±±³          ³      ³        ³loja do cliente. Isto foi feito pq pode ser ³±±
±±³          ³      ³        ³que existam 2 clientes no SA1 com o mesmo   ³±±
±±³          ³      ³        ³CPF o que ocasionaria falha na busca        ³±±
±±³          ³      ³        ³por CPF quando o pesquisado fosse o 2o      ³±±
±±³          ³      ³        ³registro cadastrado no SA1. No MsSeek()     ³±±
±±³          ³      ³        ³o Protheus traria sempre o 1o registro      ³±±
±±³14/03/06  ³XXXXX ³Veiga / ³Tratamento do parametro MV_CRDTIT para      ³±±
±±³          ³      ³Mauro S.³considerar apenas os titulos que ja' possuem³±±
±±³          ³      ³        ³numero de contrato (E1_NUMCRD preenchido)   ³±±
±±³          ³      ³        ³ou considerar todos (E1_NUMCRD vazio)       ³±±
±±³13/07/06  ³      ³Danilo  ³Ao montar o extrato, considera o E1_ACRESC. ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

WSSTRUCT WSExtrato
	WSDATA Linha		AS String
ENDWSSTRUCT
                    
WSSERVICE CrdExtrato DESCRIPTION STR0027  //"Serviço de Extrato (<b>Crédito</b>)" 
	WSDATA UsrSessionID	AS String
	WSDATA Cartao		AS String OPTIONAL
	WSDATA CPF			AS String OPTIONAL
	WSDATA Codigo		AS String OPTIONAL
	WSDATA Loja			AS String OPTIONAL
	WSDATA SA1Recno		AS Integer OPTIONAL
	WSDATA aExtrato		AS ARRAY OF WSExtrato
	
	WSMETHOD GetExtrato
ENDWSSERVICE

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Metodo	 ³GetExtrato³ Autor ³ Andre / Fernando      ³ Data ³21/07/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
WSMETHOD GetExtrato WSRECEIVE UsrSessionID, Cartao, CPF, Codigo, Loja, SA1Recno WSSEND aExtrato WSSERVICE CrdExtrato
Local aRet		:= { 0, "", "", {} }
Local aDadosCli	:= {}
Local nX		:= 0
Local lRet 		:= .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica a validade e integridade do ID de login do usuario         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !IsSessionVld( ::UsrSessionID )
	lRet := .F.
	Return .F.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Faz a pesquisa dos titulos em aberto para o cliente                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet
	aAdd( aDadosCli, ::Cartao )
	aAdd( aDadosCli, ::CPF )
	aAdd( aDadosCli, ::Codigo )
	aAdd( aDadosCli, ::Loja )
	aAdd( aDadosCli, ::SA1Recno )
	
	aRet := WSCRD020( aDadosCli )
	                                     
	If aRet[1] == 0
		::aExtrato := Array(Len(aRet[4]))
		For nX := 1 to Len(aRet[4])
			::aExtrato[nX]				:= WSClassNew("WSExtrato")
			::aExtrato[nX]:Linha		:= aRet[4][nX]
		Next nX
	Else
		SetSoapFault(aRet[2], aRet[3])
		Return .F.
	Endif
Endif

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³WSCrd020  ºAutor  ³Andre Veiga         º Data ³  05/07/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para consulta do extrato das parcelas em aberto do   º±±
±±º          ³cliente.                                                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºObservacao³Essa rotina poderah ser executada via Web Service ou direta-º±±
±±º          ³mente via Protheus                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Sistema de Credito, Venda Assistida e Frontloja             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSCrd020( aDadosCli )
Local aRet 			:= { 0, "", "", {} }
Local lContinua		:= .T.
Local aExtrato 		:= {}
Local nColunas 		:= 40
Local cMvSimb1		:= SuperGetMv("MV_SIMB1")
Local cAux1			:= ""
Local cAux2       	:= ""
Local nVlrTotal		:= 0
Local nParcelas		:= 0
Local nVlrLCUsado	:= 0
Local aCampos 		:= {}
Local aCamposSE1	:= {}
Local aEstru 		:= {}
Local cCampo 		:= ""
Local cAliasTrb		:= ""
Local cPeriodo		:= Substr(Dtos(dDatabase),1,6)
Local nTipo			:= 0
Local lUsaQuery   	:= .F.
Local aLjFilWS    	:= StrToKArr(SuperGetMv("MV_LJFILWS"), ",")
Local lMAHExc
Local lMALExc
Local lSE1Exc
Local cStrMAH     	:= ""
Local cStrMAL     	:= ""
Local cSubString  	:= ""
Local cStrSE1     	:= ""
Local cMVCRDTPLC	:= SuperGetMv("MV_CRDTPLC")		// Tipos dos titulos que entrarao na soma dos titulos em aberto para abater do limite do cliente
Local aMVCRDTPLC	:= {} 		// Array para manipular a variavel cMVCRDTPLC
Local nMVLjChVst	:= SuperGetMv("MV_LJCHVST")		// Quantos dias considera um cheque a vista. Se for -1 nao trata o parametro
Local nValMulta 	:= 0		// valor da multa
Local nValJuros		:= 0		// valor dos juros
Local nDias 		:= 0		// Dias para o calculo dos juros 
Local dBase			:= Ctod(Space(8))	// Variavel utilizada para o calculo dos juros do titulo
Local aFeriados 	:= {}		// Dias de feriado jah apontados no sistema
Local nMV_LJMULTA	:= SuperGetMv("MV_LJMULTA")	// Valor default de multa para titulos em atraso
Local nMV_LJJUROS	:= SuperGetMv("MV_LJJUROS")	// Valor default de juros para titulos em atraso
Local cUsaFDS		:= SuperGetMv("MV_LJFSEMA")
Local cMV_CRDTIT	:= SuperGetMV("MV_CRDTIT",,"1")		    // Controla se deve considerar apenas os titulos jah avaliados pelo SIGACRD(E1_NUMCRD preenchido) ou todos 
Local nX			:= 0
Local aX3Se1		:= TamSx3("E1_ACRESC")					// Configuracao do campo E1_ACRESC
Local oTempTable	:= Nil	//Objeto tabela temporaria

DbSelectArea("SX2")
DbSetOrder(1)
MsSeek("MAH")
If FWModeAccess(FWX2Chave(),3) = "E"
	lMAHExc	:= .T.
Else
	lMAHExc	:= .F.
EndIF

DbSelectArea("SX2")
DbSetOrder(1)
MsSeek("MAL")
If FWModeAccess(FWX2Chave(),3) = "E"
	lMALExc	:= .T.
Else
	lMALExc	:= .F.
EndIF

DbSelectArea("SX2")
DbSetOrder(1)
MsSeek("SE1")
If FWModeAccess(FWX2Chave(),3) = "E"
	lSE1Exc	:= .T.
Else
	lSE1Exc	:= .F.
EndIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³lUsaQuery                                                                           ³
//³                                                                                    ³
//³Variavel que determina se utiliza ou nao, query no extrato                          ³
//³OBS: Esta habilitada a utilizacao de querys em AS/400, caso haja problema, analisar ³
//³     junto com depto de tecnologia o possivel problema.                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#IFDEF TOP          
	If AllTrim(TcSrvType()) != "AS/400"
		lUsaQuery := .T.
	EndIf
#ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Chama a select area somente para o Protheus abrir os arquivos³
//³ no caso de WebService                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SE1")
DbSelectArea("MAL")
DbSelectArea("MAH")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Estrutura da array aDadosCli                                        ³
//³[1] - Numero do cartao                                              ³
//³[2] - Numero do CPF                                                 ³
//³[3] - Codigo do cliente                                             ³
//³[4] - Loja do cliente                                               ³
//³[5] - Recno do SA1                                                  ³
//³                                                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Faz a pesquisa do codigo do cliente. Considera como prioridade de  ³
//³ busca:                                                             ³
//³    1o - Recno                                                      ³
//³    2o - Codigo + Loja                                              ³
//³    3o - Cartao                                                     ³
//³    4o - CPF                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ValType( aDadosCli[5] ) == "N" .And. aDadosCli[5] <> 0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona o cliente direto pelo recno se vier preenchido        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea( "SA1" )
    dbGoTo( aDadosCli[5] )

ElseIf	( Valtype( aDadosCli[3] ) == "C" .And. Valtype( aDadosCli[4] ) == "C" ) .And. !Empty( aDadosCli[3]+aDadosCli[4] )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona o cliente pela chave 1 (codigo + loja) se vier preenchido ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea( "SA1" )	
	DbSetOrder( 1 )	// Filial + Codigo + Loja
	If !MsSeek( xFilial( "SA1" ) + PadR( aDadosCli[3], TamSX3("A1_COD")[1] ) + PadR( aDadosCli[4], TamSX3("A1_LOJA")[1] ) )
		aRet := { 2, STR0004, STR0005, {} } //"Cliente nao cadastrado"###"O cliente pesquisado não foi encontrado na base de dados"
		lContinua := .F.
	Endif

ElseIf !Empty( aDadosCli[1] )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona o cartao no MA6 para depois pesquisar o cliente no SA1 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea( "MA6" )
	DbSetOrder( 1 )		// Filial + Num
	If !MsSeek( xFilial("MA6") + aDadosCli[1] )
		aRet := { 1, STR0001, STR0002 + aDadosCli[1] + STR0003, {} } //"Erro no Cartão"###"O cartão de número "###" não foi encontrado na base de dados"
		lContinua := .F.
	Else
		DbSelectArea("SA1")
		DbSetOrder( 1 )	// Filial + Cod + Loja
		If !MsSeek( xFilial("SA1") + MA6->MA6_CODCLI + MA6->MA6_LOJA )	
			aRet := { 2, STR0004, STR0005, {} } //"Cliente nao cadastrado"###"O cliente pesquisado não foi encontrado na base de dados"
			lContinua := .F.
		Endif
	Endif

Else

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa o cliente (SA1) direto pelo CPF ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("SA1")
	DbSetOrder( 3 )	// Filial + CGC
	If !MsSeek( xFilial("SA1") + aDadosCli[2] )
		aRet := { 3, STR0006, STR0007, {} } //"CPF não cadastrado"###"O CPF informado não foi encontrado na base de dados"
		lContinua := .F.
	Endif
Endif     

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Posiciona o arquivo MA7 - Cadastro do Credito                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea( "MA7" )
DbSetOrder( 1 )
If !MsSeek( xFilial( "MA7" ) + SA1->A1_COD + SA1->A1_LOJA )
	aRet := { 3, STR0028, STR0029 + SA1->A1_COD + "/" + SA1->A1_LOJA, {} } 	// "Complemento inválido" ### "Complemento do Cliente inválido ou inexistente! (MA7) - Cliente número : "
	lContinua := .F.
Endif

nTipo := 2	// pega o saldo de todas as parcelas

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento dos dias de feriado para calculo de juros/multa   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aFeriados := RetFeriados()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para tratar a tabela de feriados            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock( "CRDTABFE" )
	aFeriados := Execblock( "CRDTABFE", .F., .F.,  { aFeriados } )
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona o cadastro de contratos                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("MAH")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Faz a pesquisa dos titulos em aberto para o cliente                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lContinua

	If lUsaQuery
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ajusta a variavel cMVCRDTPLC para incluir na Query           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aMVCRDTPLC := StrToKArr( cMVCRDTPLC, "," )
		cMVCRDTPLC := "("
		aEval( aMVCRDTPLC, { |x| cMVCRDTPLC += "'" + x + "'," } )
		cMVCRDTPLC := Substr(cMVCRDTPLC,1,Len(cMVCRDTPLC)-1) + ")"

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Trata as diferencas para Oracle e Informix                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF !( AllTrim( Upper( TcGetDb() ) ) $ "ORACLE_INFORMIX" )
			cSubstring := "SUBSTRING"
		Else
			cSubstring := "SUBSTR"
		EndIF

		cQuery := "SELECT "
		cQuery += "MAH.MAH_TRANS AS MAH_TRANS, "
		cQuery += "MAH.MAH_CODCLI AS MAH_CODCLI, "
		cQuery += "MAH.MAH_LOJA AS MAH_LOJA, "
		cQuery += "MAH.MAH_CONTRA AS MAH_CONTRA, "
		cQuery += "MAL.MAL_PARCEL AS MAL_PARCEL, "
		cQuery += "MAL.MAL_VENCTO AS MAL_VENCTO, "
		cQuery += "MAL.MAL_SALDO AS MAL_SALDO, " 
		cQuery += "0 AS MAL_ACRESC " 		
		cQuery += "FROM " + RetSQLName("MAH") + " MAH, " + RetSQLName("MAL") + " MAL "
		cQuery += "WHERE "
		cQuery += "MAH.MAH_CODCLI = '" + SA1->A1_COD + "' AND "
		cQuery += "MAH.MAH_LOJA = '" + SA1->A1_LOJA + "' AND "

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Filtra as filiais de acordo com o modo de abertura           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lMAHExc
			cQuery += "MAH.MAH_FILIAL >= '" + aLJFilWS[1] + "' AND "
			cQuery += "MAH.MAH_FILIAL <= '" + aLJFilWS[2] + "' AND "
		Else
			cQuery += "MAH.MAH_FILIAL = '" + xFilial("MAH") + "' AND "		
		Endif		

		If lMALExc
			cQuery += "MAL.MAL_FILIAL >= '" + aLJFilWS[1] + "' AND "
			cQuery += "MAL.MAL_FILIAL <= '" + aLJFilWS[2] + "' AND "
		Else
			cQuery += "MAL.MAL_FILIAL = '" + xFilial("MAL") + "' AND "
		Endif		

		cQuery += "MAH.MAH_TRANS = '1' AND "
		cQuery += "MAH.MAH_CONTRA = MAL.MAL_CONTRA AND "
		cQuery += "MAH.MAH_FILIAL = MAL.MAL_FILIAL AND "
		cQuery += "MAL.MAL_SALDO > 0 AND "    

		If nTipo == 1 	// pega soh as parcelas do mes
			cQuery += cSubstring + "( MAL.MAL_VENCTO,1,6 ) = '" + Substr( Dtos(dDatabase),1,6 ) + "' AND "
		Endif
		
		cQuery += "MAH.D_E_L_E_T_ <> '*' AND "
		cQuery += "MAL.D_E_L_E_T_ <> '*' "
		
		cQuery += "UNION ALL "
		cQuery += "SELECT "
		cQuery += "'1' AS MAH_TRANS, "
		cQuery += "SE1.E1_CLIENTE AS MAH_CODCLI, "
		cQuery += "SE1.E1_LOJA AS MAH_LOJA, "
		cQuery += "SE1.E1_NUMCRD AS MAH_CONTRA, "
		cQuery += "SE1.E1_PARCELA AS MAL_PARCEL, "
		cQuery += "SE1.E1_VENCREA AS MAL_VENCTO, "
		cQuery += "SE1.E1_SALDO AS MAL_SALDO, "
		cQuery += "SE1.E1_ACRESC AS MAL_ACRESC "		
		cQuery += "FROM " + RetSQLName("SE1") + " SE1 "
		cQuery += "WHERE "

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Filtra as filiais de acordo com o modo de abertura           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lSE1Exc
			cQuery += "SE1.E1_FILIAL >= '" + aLJFilWS[1] + "' AND "
			cQuery += "SE1.E1_FILIAL <= '" + aLJFilWS[2] + "' AND "
		Else
			cQuery += "SE1.E1_FILIAL = '" + xFilial("SE1") + "' AND "
		Endif

		cQuery += "SE1.E1_CLIENTE = '" + SA1->A1_COD + "' AND "
		cQuery += "SE1.E1_LOJA = '" + SA1->A1_LOJA + "' AND "
		cQuery += "SE1.E1_SALDO > 0 AND "
		cQuery += "LTRIM(RTRIM(SE1.E1_TIPO)) IN " + cMVCRDTPLC + " AND "
		     
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Para mostrar os titulos no extrato verifica o parametro MV_CRDTIT.      ³
		//³ Se estiver == 1, considera apenas os titulos que tenham sido analisados ³
		//³ pelo SIGACRD (E1_NUMCRD preenchido). Se estiver == 2, considera         ³
		//³ todos os titulos                                                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cMV_CRDTIT == "1"
			cQuery += "SE1.E1_NUMCRD <> '" + Space(TamSx3("E1_NUMCRD")[1]) + "' AND "
		Endif

		If nTipo == 1 	// pega soh as parcelas do mes
			cQuery += cSubstring + "( SE1.E1_VENCREA,1,6 ) = '" + Substr( Dtos(dDatabase),1,6 ) + "' AND "
		Endif		
		
		cQuery += "SE1.D_E_L_E_T_ <> '*' "
		cQuery += "ORDER BY MAL_VENCTO, MAH_CONTRA, MAL_PARCEL "
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Faz o tratamento/compatibilidade com o Top Connect    		 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cQuery := ChangeQuery(cQuery)
				     
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pega uma sequencia de alias para o temporario.               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cAliasTrb := GetNextAlias()           
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Cria o ALIAS do arquivo temporario                     		 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbUseArea(.T.,"TOPCONN", TCGENQRY(,,cQuery),cAliasTrb, .F., .T.)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tratamento para utilizar o campo data corretamente           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		TcSetField( cAliasTrb, "MAL_VENCTO", "D", TamSX3("MAL_VENCTO")[1], TamSX3("MAL_VENCTO")[2] )

	Else

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta a array com a estrutura do arquivo de trabalho         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aEstru  := {}
		aCampos := { 	"MAH_TRANS", "MAH_CODCLI", "MAH_LOJA", "MAH_CONTRA", ;
						"MAL_PARCEL", "MAL_VENCTO", "MAL_SALDO", "MAL_ACRESC" }
				
	   	DbSelectArea("SX3")
    	DbSetOrder(2)	// X3_CAMPO 
  		For nX := 1 to Len(aCampos)
  			cCampo := PadR(aCampos[nX],10," ")  			
  			If cCampo <> "MAL_ACRESC"
	  			If MsSeek(cCampo)
		  			aAdd( aEstru, { cCampo, SX3->X3_TIPO, SX3->X3_TAMANHO, SX3->X3_DECIMAL } )
		  		Endif
			Else
				aAdd( aEstru, { cCampo, "N", aX3Se1[1], aX3Se1[2] } )			
			EndIf
  		Next nX
			
		cAliasTrb := CriaTrab( Nil, .F. )
		//Cria tabela temporaria
		oTempTable := LjCrTmpTbl(cAliasTrb, aEstru)
		IndRegua(cAliasTrb,cAliasTrb,"Dtos(MAL_VENCTO)+MAH_CONTRA+MAL_PARCEL")
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Posiciona os arquivos MAL e SE1                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		MAL->(DbSetOrder(1))	// FILIAL + CONTRA
		
		DbSelectArea("MAH")
		DbSetOrder( 2 ) 	// FILIAL + CODCLI + LOJA + CONTRA

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Filtra as filiais de acordo com o modo de abertura           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lMAHExc
			MsSeek(aLJFilWS[1]+SA1->A1_COD+SA1->A1_LOJA)
			cStrMAH := {||!Eof() .And. (MAH->MAH_FILIAL >= aLJFilWS[1] .And. MAH->MAH_FILIAL <= aLJFilWS[2]) .And. MAH->MAH_CODCLI+MAH->MAH_LOJA == SA1->A1_COD+SA1->A1_LOJA }
		Else
		   MsSeek(xFilial("MAH")+SA1->A1_COD+SA1->A1_LOJA)
			cStrMAH := {||!Eof() .And. MAH->MAH_FILIAL+MAH->MAH_CODCLI+MAH->MAH_LOJA == xFilial('MAH')+SA1->A1_COD+SA1->A1_LOJA }
		Endif

		While Eval(cStrMAH)
			If MAH->MAH_TRANS == "1"

				DbSelectArea("MAL")
				If lMALExc
					MsSeek(aLJFilWS[1]+MAH->MAH_CONTRA)
					cStrMAL := {||!Eof() .And. (MAL->MAL_FILIAL >= aLJFilWS[1] .And. MAL->MAL_FILIAL <= aLJFilWS[2]) .And. MAL->MAL_CONTRA == MAH->MAH_CONTRA }
				Else
				   MsSeek(xFilial("MAH")+MAH->MAH_CONTRA)
					cStrMAL := {||!Eof() .And. MAL->MAL_FILIAL+MAL->MAL_CONTRA == xFilial("MAL")+MAH->MAH_CONTRA }
				Endif

				While Eval(cStrMAL)

					RecLock(cAliasTrb, .T.)
					For nX := 1 to Len(aCampos)
						If aCampos[nX] <> "MAL_ACRESC"
							Replace &(aCampos[nX]) With &(If("MAH"$aCampos[nX],"MAH->","MAL->") + aCampos[nX])
						Else
							Replace &(aCampos[nX]) With 0
						EndIf
					Next nX
					MsUnlock()
	                
					DbSelectArea("MAL")
					dbSkip()
				End
			Endif			
			DbSelectArea("MAH")
			dbSkip()
		End

		aCamposSE1 := { "'1'", "SE1->E1_CLIENTE", "SE1->E1_LOJA", "SE1->E1_NUMCRD", ;
						"SE1->E1_PARCELA", "SE1->E1_VENCREA", "SE1->E1_SALDO", "SE1->E1_ACRESC" }
		DbSelectArea("SE1")
		DbSetOrder( 2 )		// Filial + Cliente + Loja + Prefixo + Num + Parcela + Tipo

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Filtra as filiais de acordo com o modo de abertura           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lSE1Exc    
		
			DbSelectArea("SM0")
			DbSetOrder(1)
			MsSeek(cEmpAnt,.T.)
			While !Eof()
				If M0_CODIGO <> cEmpAnt
					dbSkip()
					Loop
				EndIf
				If FWGETCODFILIAL < aLJFilWS[1] .or. FWGETCODFILIAL > aLJFilWS[2]
					dbSkip()
					Loop
				EndIF
				
				DbSelectArea("SE1")
				DbSetOrder(2)
				If MsSeek(FWGETCODFILIAL+SA1->A1_COD+SA1->A1_LOJA)
					//Exit    
					cStrSE1 := {||!Eof() .And. (SE1->E1_FILIAL >= aLJFilWS[1] .And. SE1->E1_FILIAL <= aLJFilWS[2]) .And. SE1->E1_CLIENTE+SE1->E1_LOJA == SA1->A1_COD+SA1->A1_LOJA }
					LESE1FILIAL( 	cStrSE1, cMVCRDTPLC, cAliasTrb, aCamposSE1, ;
									aCampos, cMV_CRDTIT )
				EndIF        
				DbSelectArea("SM0")
				                   
				dbSkip()
				
			End
		
		Else
		   MsSeek(xFilial("SE1")+SA1->A1_COD+SA1->A1_LOJA)
			cStrSE1 := {||!Eof() .And. SE1->E1_FILIAL+ SE1->E1_CLIENTE+SE1->E1_LOJA == xFilial("SE1")+SA1->A1_COD+SA1->A1_LOJA }
			LESE1FILIAL( 	cStrSE1, cMVCRDTPLC, cAliasTrb, aCamposSE1, ;
							aCampos, cMV_CRDTIT )
		Endif

		
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existe o ponto de entrada para a formatacao do   ³
	//³ extrato.                                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("CRD0001")
	
		aExtrato := ExecBlock("CRD0001",.F.,.F.,{ cAliasTrb })	
		If ValType(aExtrato) <> "A"
			MsgStop(STR0008) //"Retorno do Rdmake CRD0001 inválido."
		Endif	
		
	Else

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta a array com o extrato dos titulos em aberto    		 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aExtrato := {}
		cAux1 := Alltrim(SM0->M0_NOMECOM)
		aAdd( aExtrato, Space((nColunas-Len(cAux1)) / 2) + cAux1 )
		cAux1 := Alltrim(SM0->M0_ENDCOB)
		aAdd( aExtrato, Space((nColunas-Len(cAux1)) / 2) + cAux1 )
		aAdd( aExtrato, Replicate( "-", nColunas ) )
		aAdd( aExtrato, Space((nColunas-Len(STR0009)) / 2) + STR0009 ) //"E X T R A T O"###"E X T R A T O"
		aAdd( aExtrato, Replicate( "-", nColunas ) )
		
		cAux1 := STR0010 + Dtoc(dDatabase) //"Data: "
		cAux2 := STR0011 + Time() //"Hora: "
		aAdd( aExtrato, cAux1 + Space(nColunas-Len(cAux1)-Len(cAux2)) + cAux2 )
		aAdd( aExtrato, Space( nColunas ) )
		
		aAdd( aExtrato, STR0012 + Transform(SA1->A1_CGC, "@R 999.999.999-99") ) //"Cliente...: "
		aAdd( aExtrato, "            " + Alltrim(SA1->A1_NOME) )
		aAdd( aExtrato, Space( nColunas ) )

		cAux1 := STR0013 //"CONTRATO/PARC   VENCTO"
		cAux2 := STR0014 //"VALOR"
		aAdd( aExtrato, cAux1 + Space(nColunas-Len(cAux1)-Len(cAux2)) + cAux2 )
		aAdd( aExtrato, Space( nColunas ) )

		// Impressao do detalhe
		nVlrTotal 	:= 0
		nParcelas 	:= 0
		nVlrLCUsado	:= 0
		DbSelectArea( cAliasTrb )
		dbGoTop()
		While !Eof()

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Faz o tratamento da multa e juros para os titulos em atraso  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Zera as variaveis de multa e juros para fazer o tratamento para o titulo³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	        nValMulta := 0
	        nValJuros := 0
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Faz o calculo de multa e juros para imprimir o valor no extrato         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If &(cAliasTrb+"->MAL_VENCTO") < dDataBase
				nDias  := ( dDataBase - &(cAliasTrb+"->MAL_VENCTO") )
				dBase  := &(cAliasTrb+"->MAL_VENCTO")
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³MV_LJFSEMA                                       ³
				//³0 - Nao calcula juros para sabado e domingo      ³
				//³1 - Calcula juros somente para o sabado          ³
				//³2 - Calcula juros somente para o domingo         ³
				//³3 - Calcula juros para sabado e domingo          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				While dBase <= dDataBase
					If aScan(aFeriados,Dtos(dBase)) > 0 .And. Dow(dBase) <> 7 .And. Dow(dBase) <> 1
						// Subtracao dos dias de vencimento
						nDias--
					ElseIf Dow(dBase) == 7 .Or. Dow(dBase) == 1
						If cUsaFDS == "0"
							nDias--
						ElseIf cUsaFDS == "1" .And. Dow(dBase) <> 7
							nDias--
						ElseIf cUsaFDS == "2" .And. Dow(dBase) <> 1
							nDias--						
						ElseIf cUsaFDS == "3" .And. Dow(dBase) <> 7 .And. Dow(dBase) <> 1
							nDias--						
						EndIf
					EndIF
					dBase ++
				End
				
		        nValMulta := NoRound(( ( &(cAliasTrb+"->MAL_SALDO") * nMV_LJMULTA ) / 100 ), 2)
		        nValJuros := NoRound(( ( &(cAliasTrb+"->MAL_SALDO") * ( nMV_LJJUROS * nDias ) ) / 100 ), 2)
		        
		    Endif
	
			nVlrTotal := nVlrTotal + &(cAliasTrb+"->MAL_SALDO") + &(cAliasTrb+"->MAL_ACRESC") + nValMulta + nValJuros
		
			nParcelas ++ 

			If (nTipo == 2) .Or. (nTipo == 1 .And. Substr(Dtos(&(cAliasTrb+"->MAL_VENCTO")),1,6) <= cPeriodo)
				nVlrLCUsado += 	&(cAliasTrb+"->MAL_SALDO") + nValMulta + nValJuros
			Endif
			
			cAux1 := ""
			cAux1 += &(cAliasTrb+"->MAH_CONTRA") + "/" 
			cAux1 += &(cAliasTrb+"->MAL_PARCEL")
			cAux1 += "   "
			cAux1 += Dtoc(&(cAliasTrb+"->MAL_VENCTO")) 

			cAux2 := Transform(&(cAliasTrb+"->MAL_SALDO") + &(cAliasTrb+"->MAL_ACRESC") + nValMulta + nValJuros,"@E 999,999.99")
			aAdd( aExtrato, cAux1 + Space(nColunas-Len(cAux1)-Len(cAux2)) + cAux2 )
					
			dbSkip()
		End
		
		// Impressao do TOTAL
		aAdd( aExtrato, Space( nColunas ) )
		cAux1 := STR0015 + StrZero(nParcelas,2,0) + " " + If(nParcelas==1,STR0016,STR0017) + ")" //"TOTAL ("###"Parcela"###"Parcelas"
		cAux2 := Transform( nVlrTotal, "@E 999,999,999.99" )
		aAdd( aExtrato, cAux1 + Space(nColunas-Len(cAux1)-Len(cAux2)) + cAux2 )

		aAdd( aExtrato, Space( nColunas ) )
		aAdd( aExtrato, Space( nColunas ) )
		aAdd( aExtrato, STR0024 )	//"Observacoes:"
		aAdd( aExtrato, STR0025 + SuperGetMv("MV_SIMB1") + STR0026 + Dtoc(dDatabase) + ".") // "Valores em " // " para pagamento em "
		
    Endif


	If ExistBlock( "WS020EXT" )
		aExtrato := aClone( ExecBlock( "WS020EXT", .F., .F., {aExtrato} ) )
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava a array do extrato na array de retorno da funcao       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aRet := { 0, "", "", aExtrato }

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Fecha o arquivo de trabalho                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea( cAliasTrb )
	dbCloseArea()
	
	If( ValType(oTempTable) == "O")
	  oTempTable:Delete()
	  FreeObj(oTempTable)
	  oTempTable := Nil
	EndIf	
	
Endif

Return aRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³LESE1FILIAL  ºAutor  ³Geronimo B. Alves  º Data ³28/09/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Le os titulos no SE1 para cada filial e gravao no arq. TRB  º±±
±±º          ³os registros que atemdem o parametro                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Sistema de Credito, Venda Assistida e Frontloja             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION LESE1FILIAL(	cStrSE1,	cMVCRDTPLC,		cAliasTrb, 	aCamposSE1,;
								aCampos, 	cMV_CRDTIT )
Local nX		:= 0

While Eval(cStrSE1)	
  	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o saldo do titulo eh maior que zero;                               ³
	//³ se o tipo do titulo está contido no parametro MV_CRDTPLC;                      ³
	//³ se o titulo tem numero de contrato e                                           ³
	//³ se for titulo em cheque se eh pre-datado.                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SE1->E1_SALDO > 0 .And. Alltrim(SE1->E1_TIPO) $ cMVCRDTPLC
	         
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Para mostrar os titulos no extrato verifica o parametro MV_CRDTIT.      ³
		//³ Se estiver == 1, considera apenas os titulos que tenham sido analisados ³
		//³ pelo SIGACRD (E1_NUMCRD preenchido). Se estiver == 2, considera         ³
		//³ todos os titulos                                                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( cMV_CRDTIT == "1" .And. !Empty(SE1->E1_NUMCRD) ) .Or. ( cMV_CRDTIT == "2" )

			RecLock(cAliasTrb, .T.)
			For nX := 1 to Len(aCamposSE1)
				Replace &(aCampos[nX]) With &(aCamposSE1[nX])
			Next nX
			MsUnlock()
			
		Endif

	Endif
			
	DbSelectArea("SE1")
	dbSkip()
End
RETURN

