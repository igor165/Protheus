#INCLUDE "wscrd080.ch"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWEBSRV.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Metodo	 ³GetLimite ³ Autor ³ Andre / Fernando      ³ Data ³21/07/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

WSSTRUCT WSLimite 
	WSDATA Linha		AS String
ENDWSSTRUCT

WSSERVICE CrdLimite DESCRIPTION STR0021  //"Serviço de Consulta de Limite (<b>Crédito</b>)"
	WSDATA UsrSessionID	AS String
	WSDATA Cartao		AS String OPTIONAL
	WSDATA CPF			AS String OPTIONAL
	WSDATA Codigo		AS String OPTIONAL
	WSDATA Loja			AS String OPTIONAL
	WSDATA SA1Recno		AS Integer OPTIONAL
	WSDATA aLimite 		AS ARRAY OF WSLimite 
	
	WSMETHOD GetLimite  
ENDWSSERVICE

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Metodo	 ³GetLimite ³ Autor ³ Andre / Fernando      ³ Data ³21/07/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
WSMETHOD GetLimite  WSRECEIVE UsrSessionID, Cartao, CPF, Codigo, Loja, SA1Recno WSSEND aLimite WSSERVICE CrdLimite
Local aRet		:= { 0, "", "", {} }
Local aDadosCli	:= {}
Local nX		:= 0
Local lRet 		:= .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica a validade e integridade do ID de login do usuario         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !IsSessionVld( ::UsrSessionID )
	lRet := .F.
	Return .F.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Faz a pesquisa dos titulos em aberto para o cliente                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet
	aAdd( aDadosCli, ::Cartao )
	aAdd( aDadosCli, ::CPF )
	aAdd( aDadosCli, ::Codigo )
	aAdd( aDadosCli, ::Loja )
	aAdd( aDadosCli, ::SA1Recno )
	
	aRet := WSCRD080( aDadosCli )
	                                     
	If aRet[1] == 0
		::aLimite := Array(Len(aRet[4]))
		For nX := 1 to Len(aRet[4])
			::aLimite[nX]			:= WSClassNew("WSLimite")
			::aLimite[nX]:Linha		:= aRet[4][nX]
		Next nX
	Else
		SetSoapFault(aRet[2], aRet[3])
		Return .F.
	Endif
Endif

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³WSCrd080  ºAutor  ³Andre Veiga         º Data ³  07/07/03   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para consulta do limite de credito do cliente        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºObservacao³Essa rotina poderah ser executada via Web Service ou direta-º±±
±±º          ³mente via Protheus                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Sistema de Credito, Venda Assistida e Frontloja             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍØÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Geronimo      ³22/09/05³086666³ Corrigida informacao do limite utiliza-º±±
±±³              ³        ³      ³ do na consulta "limite de credito do   º±±
±±³              ³        ³      ³ cliente. Frta010 (f12+18) estava vindo º±±
±±³              ³        ³      ³ zerada.                                º±±
±±³Andrea F.     ³21/02/06³      ³ Passagem de parametro na funcao        º±±
±±³              ³        ³      ³ CrdTitAberto para atualizar o array    º±±
±±³              ³        ³      ³ aSaldoMeses.                           º±±
±±³Andre/Thiago  ³07/03/06³xxxxx ³ (Drog.Moderna). Foi alterada a estrutu-º±±
±±³              ³        ³      ³ ra do WebService para considerar tbem  º±±
±±³              ³        ³      ³ o recno do SA1 e o codigo + loja do    º±±
±±³              ³        ³      ³ cliente. Isto foi feito pq pode ser    º±±
±±³              ³        ³      ³ que haja 2 clientes no SA1 com o mesmo º±±
±±³              ³        ³      ³ CPF o que ocasionaria falha na busca   º±±
±±³              ³        ³      ³ por CPF quando o pesquisado fosse o 2o º±±
±±³              ³        ³      ³ registro cadastrado no SA1. No dbseek()º±±
±±³              ³        ³      ³ o Protheus traria sempre o 1o registro º±±
±±³              ³        ³      ³                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function WSCrd080( aDadosCli )
Local aRet 			:= { 0, "", "", {} }
Local lContinua		:= .T.
Local cAliasTrb		:= ""
Local cClassif		:= ""
Local nTitAberto	:= 0
Local nColunas 		:= 40
Local lSoma 		:= .T.
Local cSubstring	:= ""
Local nExcedido     := 0
Local nX            := 0
Local nMes          := 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Variaveis criadas para o Template Drogaria                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cCPF       	:= "" // cpf do cliente 
Local cCodCli    	:= "" // codigo do cliente
Local cLojCli    	:= "" // loja do cliente
Local cSeekSA1   	:= "" // chave de busca na tabela SA1
Local cWhileSA1  	:= "" // loop para varrer o SA1
Local cRetCli    	:= "" // caso exista mais de um registro com o mesmo CPF na tabela SA1, armazena o conteudo do cliente escolhido
Local aAreaAtu   	:= GetArea()
Local lCPFDuplic 	:= .F.  //Controle se existem dois registros com o mesmo CPF no SA1 para os casos de convenio(particular e conveniado)
Local aRetCli    	:= {}
Local aCabCli	 	:= {}
Local aLinCli	 	:= {}
Local aTamCli	 	:= {}
Local aCpoCli	 	:= {}
Local lRet    		:= .F.
Local nCli          := 0  // variaveis de loop
Local cCodCliTPL    := "" // codigo do cliente  
Local cLojaTPL      := "" // loja do cliente
Private oLbxCliTPL, oDlgCliTPL    
Private	oOk     	:= LoadBitMap(GetResources(), "LBTIK")        	// Bitmap utilizado no Lisbox  (Marcado)
Private oNo     	:= LoadBitMap(GetResources(), "LBNO")			// Bitmap utilizado no Lisbox  (Desmarcado)
Private oNever  	:= LoadBitMap(GetResources(), "BR_VERMELHO")	// Bitmap utilizado no Lisbox  (Desabilitado)
Private	lMark		:= .F.

Private aSaldoMeses := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Estrutura da array aDadosCli                                   ³
//³[1] - Numero do cartao                                         ³
//³[2] - Numero do CPF                                            ³
//³[3] - Codigo do cliente                                        ³
//³[4] - Loja do cliente                                          ³
//³[5] - Recno do SA1                                             ³
//³                                                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Faz a pesquisa do codigo do cliente. Considera como prioridade de  ³
//³ busca:                                                             ³
//³    1o - Recno                                                      ³
//³    2o - Codigo + Loja                                              ³
//³    3o - Cartao                                                     ³
//³    4o - CPF                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ValType( aDadosCli[5] ) == "N" .And. aDadosCli[5] <> 0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona o cliente direto pelo recno se vier preenchido        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "SA1" )
    dbGoTo( aDadosCli[5] )

ElseIf	( Valtype( aDadosCli[3] ) == "C" .And. Valtype( aDadosCli[4] ) == "C" ) .And. !Empty( aDadosCli[3] + aDadosCli[4] )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona o cliente pela chave 1 (codigo + loja) se vier preenchido ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "SA1" )	
	dbSetOrder( 1 )	// Filial + Codigo + Loja
	If !dbSeek( xFilial( "SA1" ) + PadR( aDadosCli[3], TamSX3("A1_COD")[1] ) + PadR( aDadosCli[4], TamSX3("A1_LOJA")[1] ) )
		aRet := { 2, STR0004, STR0005, {} } //"Cliente nao cadastrado"###"O cliente pesquisado não foi encontrado na base de dados"
		lContinua := .F.
	Endif

ElseIf !Empty( aDadosCli[1] )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona o cartao no MA6 para depois pesquisar o cliente no SA1 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea( "MA6" )
	dbSetOrder( 1 )		// Filial + Num
	If !dbSeek( xFilial("MA6") + aDadosCli[1] )
		aRet := { 1, STR0001, STR0002 + aDadosCli[1] + STR0003, {} } //"Erro no Cartão"###"O cartão de número "###" não foi encontrado na base de dados"
		lContinua := .F.
	Else
		dbSelectArea("SA1")
		dbSetOrder( 1 )	// Filial + Cod + Loja
		If !dbSeek( xFilial("SA1") + MA6->MA6_CODCLI + MA6->MA6_LOJA )	
			aRet := { 2, STR0004, STR0005, {} } //"Cliente nao cadastrado"###"O cliente pesquisado não foi encontrado na base de dados"
			lContinua := .F.
		Endif
	Endif

Else

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa o cliente (SA1) direto pelo CPF ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SA1")
	dbSetOrder( 3 )	// Filial + CGC
	If !dbSeek( xFilial("SA1") + aDadosCli[2] )
		aRet := { 3, STR0006, STR0007, {} } //"CPF não cadastrado"###"O CPF informado não foi encontrado na base de dados"
		lContinua := .F.
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Posiciona o arquivo MA7 - Cadastro do Credito                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("MA7")
dbSetOrder(1)	// Filial + Codcli + Loja
If !dbSeek( xFilial("MA7") + SA1->A1_COD + SA1->A1_LOJA )
	aRet := { 4, STR0008, STR0009, {} } //"Cadastro de crédito"###"Não foi encontrado o cadastro de crédito do cliente, informar o analista de crédito responsável."
	lContinua := .F.
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Faz a pesquisa das informacoes                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lContinua

	nTitAberto := CrdTitAberto( SA1->A1_COD, SA1->A1_LOJA,,,@aSaldoMeses)
	
	If MA7->MA7_TPCRED == "1" .And. Len( aSaldoMeses ) > 0 //MA7_TPCRED = "1"-Endividamento mensal
		aSaldoMeses := aSort(aSaldoMeses,,,{|x,y| x[1]> y[1] })
		nTitAberto  := aSaldoMeses[1][1]
		nMes        := aSaldoMeses[1][2]
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta a array com o extrato dos titulos em aberto    		 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aExtrato := {}
	cAux1 := Alltrim(SM0->M0_NOMECOM)
	aAdd( aExtrato, Space((nColunas-Len(cAux1)) / 2) + cAux1 )
	cAux1 := Alltrim(SM0->M0_ENDCOB)
	aAdd( aExtrato, Space((nColunas-Len(cAux1)) / 2) + cAux1 )
	aAdd( aExtrato, Replicate( "-", nColunas ) )
	aAdd( aExtrato, Space((nColunas-Len(STR0010)) / 2) + STR0010 ) //"L I M I T E   D E   C R E D I T O"###"L I M I T E   D E   C R E D I T O"
	aAdd( aExtrato, Replicate( "-", nColunas ) )
	
	cAux1 := STR0011 + Dtoc(dDatabase) //"Data: "
	cAux2 := STR0012 + Time() //"Hora: "
	aAdd( aExtrato, cAux1 + Space(nColunas-Len(cAux1)-Len(cAux2)) + cAux2 )
	aAdd( aExtrato, Space( nColunas ) )
	
	aAdd( aExtrato, STR0013 + Transform(SA1->A1_CGC, "@R 999.999.999-99") ) //"Cliente..: "
	aAdd( aExtrato, "           " + Alltrim(SA1->A1_NOME) )
	aAdd( aExtrato, Space( nColunas ) )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³MA7->MA7_TPCRED - "1"-Endividamento mensal                    ³
	//³                  "2"-Endividamento global                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cClassif := IIf( MA7->MA7_TPCRED == "1", STR0014, STR0015 ) //"Endividamento mensal"###"Endividamento global"
	nExcedido := IIf( nTitAberto > SA1->A1_LC, nTitAberto - SA1->A1_LC, 0 )
	
	aAdd( aExtrato, STR0016 + cClassif ) //"Classificacao......: "
	aAdd( aExtrato, STR0017 + Transform(SA1->A1_LC, "@E 999,999,999.99") ) //"Limite de credito..: "
	aAdd( aExtrato, STR0018 + Transform(nTitAberto, "@E 999,999,999.99") ) //"Limite utilizado...: "
	aAdd( aExtrato, STR0020 + Transform(nExcedido, "@E 999,999,999.99") ) //"Limite disponivel..: "//"Limite excedido....: "
	aAdd( aExtrato, STR0019 + Transform(If(SA1->A1_LC-nTitAberto > 0, SA1->A1_LC-nTitAberto, 0), "@E 999,999,999.99") ) //"Limite disponivel..: "
	aAdd( aExtrato, Space( nColunas ) )
	
	If ExistBlock( "WS080LIM" )
		aExtrato := aClone( ExecBlock( "WS080LIM", .F., .F., {aExtrato} ) )
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava a array do extrato na array de retorno da funcao       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aRet := { 0, "", "", aExtrato }

Endif

Return aRet
